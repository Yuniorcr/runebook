<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="angular">
    <body>
      <group id="angular">
        <trans-unit id="b69003587c867e7e340524002fd1fa86252f3e32" translate="yes" xml:space="preserve">
          <source>Only call this helper once per spec.</source>
          <target state="translated">このヘルパーを呼び出すのは、仕様ごとに一度だけにしてください。</target>
        </trans-unit>
        <trans-unit id="6aa9ccc779fdff35f7ff277e0df6325b119d6fc7" translate="yes" xml:space="preserve">
          <source>Only initialized variables and constants</source>
          <target state="translated">初期化された変数と定数のみ</target>
        </trans-unit>
        <trans-unit id="579011de1d1d6760beff0e58edfe23acc7999e43" translate="yes" xml:space="preserve">
          <source>Only perform a migration, does not update the installed version.</source>
          <target state="translated">移行のみを実行し、インストールされているバージョンを更新しません。</target>
        </trans-unit>
        <trans-unit id="d5948c9e6e775727987047ca9af9b8a29758babf" translate="yes" xml:space="preserve">
          <source>Only present if the responseType was &lt;code&gt;text&lt;/code&gt;.</source>
          <target state="translated">responseTypeが &lt;code&gt;text&lt;/code&gt; の場合のみ存在します。</target>
        </trans-unit>
        <trans-unit id="07a621a1056b71ac908fc1c5cb0788cffa208462" translate="yes" xml:space="preserve">
          <source>Only reference exported symbols after &lt;a href=&quot;aot-compiler#code-folding&quot;&gt;code folding&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;aot-compiler#code-folding&quot;&gt;コードの折りたたみ&lt;/a&gt;後、エクスポートされたシンボルのみを参照します。</target>
        </trans-unit>
        <trans-unit id="9e67718ded8b6cd36fa81294f9254fb2753c502b" translate="yes" xml:space="preserve">
          <source>Only requests whose URLs match &lt;em&gt;any&lt;/em&gt; of the non-negative URLs/patterns and &lt;em&gt;none&lt;/em&gt; of the negative ones will be considered navigation requests. The URL query will be ignored when matching.</source>
          <target state="translated">唯一のURLが一致する要求&lt;em&gt;任意の&lt;/em&gt;非負のURL /パターンとの&lt;em&gt;いずれも&lt;/em&gt;ネガティブなもののは、ナビゲーション要求と見なされます。一致する場合、URLクエリは無視されます。</target>
        </trans-unit>
        <trans-unit id="fae8b36196c2d7c9bc82e024818e47073fff7e2b" translate="yes" xml:space="preserve">
          <source>Only some of the features of &lt;a href=&quot;https://docs.angularjs.org/api/ng/service/%24compile&quot;&gt;Directive Definition Object&lt;/a&gt; are supported:</source>
          <target state="translated">&lt;a href=&quot;https://docs.angularjs.org/api/ng/service/%24compile&quot;&gt;ディレクティブ定義オブジェクトの&lt;/a&gt;一部の機能のみがサポートされています。</target>
        </trans-unit>
        <trans-unit id="0a4f1cd58a04fbb4f4579ee87ee3d34b9e5ff5d0" translate="yes" xml:space="preserve">
          <source>Only the &lt;code&gt;BuilderContext.scheduleTarget()&lt;/code&gt; method resolves the configuration and overrides through the &lt;code&gt;angular.json&lt;/code&gt; file.</source>
          <target state="translated">&lt;code&gt;BuilderContext.scheduleTarget()&lt;/code&gt; メソッドのみが設定を解決し、 &lt;code&gt;angular.json&lt;/code&gt; ファイルでオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="badba1b20de1ae8cafa9eb1a80fd811428d174c8" translate="yes" xml:space="preserve">
          <source>Only the &lt;code&gt;en-US&lt;/code&gt; locale data comes with Angular. To localize dates in another language, you must import the corresponding locale data. See the &lt;a href=&quot;../../guide/i18n#i18n-pipes&quot;&gt;I18n guide&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;en-US&lt;/code&gt; ロケールデータのみがAngularに付属しています。日付を別の言語にローカライズするには、対応するロケールデータをインポートする必要があります。詳細については、&lt;a href=&quot;../../guide/i18n#i18n-pipes&quot;&gt;I18nガイド&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="572abade960d96039060d52044e78dceb7d7938a" translate="yes" xml:space="preserve">
          <source>Only the last three lines of this file actually test the component and all they do is assert that Angular can create the component.</source>
          <target state="translated">このファイルの最後の3行だけが実際にコンポーネントをテストしていて、Angularがコンポーネントを作成できると断言しているだけです。</target>
        </trans-unit>
        <trans-unit id="2e5a80e20dec34a84bde9cf545eeeeea83b35c8a" translate="yes" xml:space="preserve">
          <source>Only the root &lt;code&gt;AppModule&lt;/code&gt; should import the &lt;code&gt;GreetingModule&lt;/code&gt;. If a lazy-loaded module imports it too, the app can generate &lt;a href=&quot;ngmodule-faq#q-why-bad&quot;&gt;multiple instances&lt;/a&gt; of a service.</source>
          <target state="translated">ルート &lt;code&gt;AppModule&lt;/code&gt; のみが &lt;code&gt;GreetingModule&lt;/code&gt; をインポートする必要があります。遅延ロードされたモジュールもそれをインポートする場合、アプリはサービスの&lt;a href=&quot;ngmodule-faq#q-why-bad&quot;&gt;複数のインスタンス&lt;/a&gt;を生成できます。</target>
        </trans-unit>
        <trans-unit id="74e3616af019ff0e94847007cfa986e9df5014a6" translate="yes" xml:space="preserve">
          <source>Only the selected event test differs. It confirms that the selected &lt;code&gt;DashboardHeroComponent&lt;/code&gt; hero really does find its way up through the event binding to the host component.</source>
          <target state="translated">選択したイベントテストのみが異なります。これは、選択された &lt;code&gt;DashboardHeroComponent&lt;/code&gt; ヒーローが実際にホストコンポーネントへのイベントバインディングを介してその方法を見つけることを確認します。</target>
        </trans-unit>
        <trans-unit id="89b591ffb9d7baafdc98bbbe94b530bb355b3c0c" translate="yes" xml:space="preserve">
          <source>Only used by the &lt;code&gt;&lt;a href=&quot;reactiveformsmodule&quot;&gt;ReactiveFormsModule&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;reactiveformsmodule&quot;&gt;ReactiveFormsModule&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; でのみ使用されます。</target>
        </trans-unit>
        <trans-unit id="bc45afb720e55cd7cc85109d4c9b039dd76dd61e" translate="yes" xml:space="preserve">
          <source>Open &lt;a href=&quot;http://localhost:8080&quot;&gt;http://localhost:8080&lt;/a&gt; again in the same window. What happens?</source>
          <target state="translated">同じウィンドウで&lt;a href=&quot;http://localhost:8080&quot;&gt;http：// localhost：8080を&lt;/a&gt;再度開きます。何が起こるのですか？</target>
        </trans-unit>
        <trans-unit id="e14a50b5520dfc18fa7fd543847099aa7bf163b3" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;AppModule&lt;/code&gt; (&lt;code&gt;app.module.ts&lt;/code&gt;) and import the &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; symbol from the &lt;code&gt;@angular/forms&lt;/code&gt; library.</source>
          <target state="translated">&lt;code&gt;AppModule&lt;/code&gt; （ &lt;code&gt;app.module.ts&lt;/code&gt; ）を開き、 &lt;code&gt;@angular/forms&lt;/code&gt; ライブラリから &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; シンボルをインポートします。</target>
        </trans-unit>
        <trans-unit id="866e5d6d1b334d49b032f539b556b797ab19627b" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;AppRoutingModule&lt;/code&gt; and import &lt;code&gt;HeroDetailComponent&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;AppRoutingModule&lt;/code&gt; を開き、HeroDetailComponentをインポートし &lt;code&gt;HeroDetailComponent&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="77b65d6f30f279da483a0d2c5aaba8330bf5b22c" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;HeroService&lt;/code&gt; and add the following &lt;code&gt;getHero()&lt;/code&gt; method with the &lt;code&gt;id&lt;/code&gt; after the &lt;code&gt;getHeroes()&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;HeroService&lt;/code&gt; を開き、 &lt;code&gt;getHeroes()&lt;/code&gt; メソッドの後に次の &lt;code&gt;id&lt;/code&gt; 持つ &lt;code&gt;getHero()&lt;/code&gt; メソッドを追加します。</target>
        </trans-unit>
        <trans-unit id="6528dd724b3ac4dd5196042f0d94caa2d32dadd1" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;MessageService&lt;/code&gt; and replace its contents with the following.</source>
          <target state="translated">&lt;code&gt;MessageService&lt;/code&gt; を開き、その内容を次のように置き換えます。</target>
        </trans-unit>
        <trans-unit id="114ada4e4b53ed8da2233d3cd7f02423629b9fa6" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;MessagesComponent&lt;/code&gt; and import the &lt;code&gt;MessageService&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MessagesComponent&lt;/code&gt; を開き、 &lt;code&gt;MessageService&lt;/code&gt; をインポートします。</target>
        </trans-unit>
        <trans-unit id="2d907856cc42bdc5e2fc3ea29e00cdc9f5082ee8" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;app.module.ts&lt;/code&gt; and add a route for the component &lt;code&gt;CartComponent&lt;/code&gt;, with a &lt;code&gt;path&lt;/code&gt; of &lt;code&gt;cart&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;app.module.ts&lt;/code&gt; を開き、 &lt;code&gt;cart&lt;/code&gt; &lt;code&gt;path&lt;/code&gt; を使用して、コンポーネント &lt;code&gt;CartComponent&lt;/code&gt; のルートを追加します。</target>
        </trans-unit>
        <trans-unit id="575e23715adc35c1ca9c9988eec386e7d5b9930f" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;app.module.ts&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;app.module.ts&lt;/code&gt; を開きます。</target>
        </trans-unit>
        <trans-unit id="6f1bf6a125bfb50f13854676105a2329271b6e9f" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;auth.guard.ts&lt;/code&gt;. Import the &lt;code&gt;&lt;a href=&quot;../api/router/canload&quot;&gt;CanLoad&lt;/a&gt;&lt;/code&gt; interface from &lt;code&gt;@angular/router&lt;/code&gt;. Add it to the &lt;code&gt;AuthGuard&lt;/code&gt; class's &lt;code&gt;implements&lt;/code&gt; list. Then implement &lt;code&gt;&lt;a href=&quot;../api/router/route#canLoad&quot;&gt;canLoad&lt;/a&gt;()&lt;/code&gt; as follows:</source>
          <target state="translated">&lt;code&gt;auth.guard.ts&lt;/code&gt; を開きます。 &lt;code&gt;&lt;a href=&quot;../api/router/canload&quot;&gt;CanLoad&lt;/a&gt;&lt;/code&gt; インターフェースを &lt;code&gt;@angular/router&lt;/code&gt; からインポートします。 &lt;code&gt;AuthGuard&lt;/code&gt; クラスの &lt;code&gt;implements&lt;/code&gt; リストに追加します。次に、次のように &lt;code&gt;&lt;a href=&quot;../api/router/route#canLoad&quot;&gt;canLoad&lt;/a&gt;()&lt;/code&gt; を実装します。</target>
        </trans-unit>
        <trans-unit id="1af114daa83423205b7b94b662a58ac9599b0a63" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;auth.guard.ts&lt;/code&gt;. Import the &lt;code&gt;&lt;a href=&quot;../api/router/canload&quot;&gt;CanLoad&lt;/a&gt;&lt;/code&gt; interface from &lt;code&gt;@angular/router&lt;/code&gt;. Add it to the &lt;code&gt;AuthGuard&lt;/code&gt; class's &lt;code&gt;implements&lt;/code&gt; list. Then implement &lt;code&gt;canLoad()&lt;/code&gt; as follows:</source>
          <target state="translated">&lt;code&gt;auth.guard.ts&lt;/code&gt; を開きます。 &lt;code&gt;&lt;a href=&quot;../api/router/canload&quot;&gt;CanLoad&lt;/a&gt;&lt;/code&gt; インターフェースを@angular &lt;code&gt;@angular/router&lt;/code&gt; からインポートします。それを &lt;code&gt;AuthGuard&lt;/code&gt; クラスの &lt;code&gt;implements&lt;/code&gt; リストに追加します。次に、 &lt;code&gt;canLoad()&lt;/code&gt; を次のように実装します。</target>
        </trans-unit>
        <trans-unit id="8f675910d99209c8ea86aae1435d8e6b43b9f03e" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;cart.component.html&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cart.component.html&lt;/code&gt; を開きます。</target>
        </trans-unit>
        <trans-unit id="67023797578e456d2b4fa45dabd73a9085bab993" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;cart.component.ts&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cart.component.ts&lt;/code&gt; を開きます。</target>
        </trans-unit>
        <trans-unit id="65c46c6f2ef1fbde016d6d946f5a25b4ae0d2a91" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;cart.service.ts&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cart.service.ts&lt;/code&gt; を開きます。</target>
        </trans-unit>
        <trans-unit id="a8fee58d1a2ab9cadaac9e77183557a479d795f7" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;index.ts&lt;/code&gt; and add the source code for your schematic factory function.</source>
          <target state="translated">&lt;code&gt;index.ts&lt;/code&gt; を開き、回路図ファクトリ関数のソースコードを追加します。</target>
        </trans-unit>
        <trans-unit id="3915069d2daf46146e86c490ad947d27cb0a79d0" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;messages.fr.xlf&lt;/code&gt; and find the first &lt;code&gt;&amp;lt;trans-unit&amp;gt;&lt;/code&gt; element. This is a &lt;em&gt;translation unit&lt;/em&gt;, also known as a &lt;em&gt;text node&lt;/em&gt;, representing the translation of the &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; greeting tag that was previously marked with the &lt;code&gt;i18n&lt;/code&gt; attribute:</source>
          <target state="translated">&lt;code&gt;messages.fr.xlf&lt;/code&gt; を開き、最初の &lt;code&gt;&amp;lt;trans-unit&amp;gt;&lt;/code&gt; 要素を見つけます。これは、&lt;em&gt;テキストノード&lt;/em&gt;とも呼ばれる&lt;em&gt;翻訳ユニット&lt;/em&gt;であり、以前に &lt;code&gt;i18n&lt;/code&gt; 属性でマークされた &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; グリーティングタグの翻訳を表します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7a47392ec87ed3fa0526ec688ceb94b3c13d0fab" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;messages.fr.xlf&lt;/code&gt; and find the first &lt;code&gt;&amp;lt;trans-unit&amp;gt;&lt;/code&gt; section:</source>
          <target state="translated">&lt;code&gt;messages.fr.xlf&lt;/code&gt; を開き、最初の &lt;code&gt;&amp;lt;trans-unit&amp;gt;&lt;/code&gt; セクションを見つけます：</target>
        </trans-unit>
        <trans-unit id="a4699e771c7b3370ae4b31ec47a6bd32c0039860" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;product-alerts.component.ts&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;product-alerts.component.ts&lt;/code&gt; を開きます。</target>
        </trans-unit>
        <trans-unit id="744a94e1819e7f241acdc65fb4e349d1e473016d" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;product-details.component.html&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;product-details.component.html&lt;/code&gt; を開きます。</target>
        </trans-unit>
        <trans-unit id="34812c7c2caeda4260035a1583f3d72e244de16c" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;product-details.component.ts&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;product-details.component.ts&lt;/code&gt; を開きます</target>
        </trans-unit>
        <trans-unit id="59a593e0c1b9760c313846329148117b6cbc5c11" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;product-details.component.ts&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;product-details.component.ts&lt;/code&gt; を開きます。</target>
        </trans-unit>
        <trans-unit id="815ff9ebb4b718dcd77b32609931e5d6576472b8" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;product-list.component.html&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;product-list.component.html&lt;/code&gt; を開きます。</target>
        </trans-unit>
        <trans-unit id="cfffaf36792bb58305ebbee9817c3529bb1994a4" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;src/app/app.component.html&lt;/code&gt; for editing.</source>
          <target state="translated">編集のために &lt;code&gt;src/app/app.component.html&lt;/code&gt; を開きます。</target>
        </trans-unit>
        <trans-unit id="ebd4ad14ad8a6413334d21a410aee323b90b5fee" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;src/app/app.module.ts&lt;/code&gt; and find &lt;code&gt;HeroesComponent&lt;/code&gt; imported near the top.</source>
          <target state="translated">オープン &lt;code&gt;src/app/app.module.ts&lt;/code&gt; と見つける &lt;code&gt;HeroesComponent&lt;/code&gt; は上部付近に輸入しました。</target>
        </trans-unit>
        <trans-unit id="c7eb0eeb40c71d849cfff0b2075c26d8908b64a9" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;src/styles.css&lt;/code&gt; and add the code below to the file.</source>
          <target state="translated">&lt;code&gt;src/styles.css&lt;/code&gt; を開き、以下のコードをファイルに追加します。</target>
        </trans-unit>
        <trans-unit id="d68658e5a356696945dbd0fd61a93b951a7400dc" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;top-bar.component.html&lt;/code&gt; and add a &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;routerLink&lt;/a&gt;&lt;/code&gt; directive pointing to &lt;code&gt;/cart&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;top-bar.component.html&lt;/code&gt; を開き、 &lt;code&gt;/cart&lt;/code&gt; を指す &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;routerLink&lt;/a&gt;&lt;/code&gt; ディレクティブを追加します。</target>
        </trans-unit>
        <trans-unit id="c0f74d2bdd1d19520402b98d21d64adcade48a22" translate="yes" xml:space="preserve">
          <source>Open a browser and navigate to &lt;a href=&quot;http://localhost:4000/&quot;&gt;http://localhost:4000/&lt;/a&gt;. You should see the familiar Tour of Heroes dashboard page.</source>
          <target state="translated">ブラウザを開き、&lt;a href=&quot;http://localhost:4000/&quot;&gt;http：// localhost：4000 /に&lt;/a&gt;移動します。見慣れたTour of Heroesダッシュボードページが表示されます。</target>
        </trans-unit>
        <trans-unit id="e0a82df9270aa7bd7fdae3eed77d97a02caf61c1" translate="yes" xml:space="preserve">
          <source>Open a browser and navigate to &lt;a href=&quot;http://localhost:4200/&quot;&gt;http://localhost:4200/&lt;/a&gt;. You should see the familiar Tour of Heroes dashboard page.</source>
          <target state="translated">ブラウザを開き、&lt;a href=&quot;http://localhost:4200/&quot;&gt;http：// localhost：4200 /に&lt;/a&gt;移動します。おなじみのTourofHeroesダッシュボードページが表示されます。</target>
        </trans-unit>
        <trans-unit id="df4746563f1b3801f630600cd1c28289004187dd" translate="yes" xml:space="preserve">
          <source>Open a browser to &lt;code&gt;http://localhost:4200&lt;/code&gt;.</source>
          <target state="translated">ブラウザを開いて &lt;code&gt;http://localhost:4200&lt;/code&gt; にアクセスします。</target>
        </trans-unit>
        <trans-unit id="a792da65891040da84e7d8ecdd221eef49bd99aa" translate="yes" xml:space="preserve">
          <source>Open a terminal window in the project folder and enter the following commands for your environment:</source>
          <target state="translated">プロジェクトフォルダ内のターミナルウィンドウを開き、お使いの環境に合わせて以下のコマンドを入力します。</target>
        </trans-unit>
        <trans-unit id="f090fea76949747ac7a39fd3966bbdf3f37972e1" translate="yes" xml:space="preserve">
          <source>Open developer console (e.g. in Chrome Ctrl + Shift + j)</source>
          <target state="translated">開発者コンソールを開く(例:Chromeの場合 Ctrl+Shift+j</target>
        </trans-unit>
        <trans-unit id="9e65fb97fc048133e412914c11615f23951a6bf0" translate="yes" xml:space="preserve">
          <source>Open the &lt;code&gt;1st.spec.ts&lt;/code&gt; test file (Control/Command-P, then start typing the name of the file).</source>
          <target state="translated">&lt;code&gt;1st.spec.ts&lt;/code&gt; テストファイルを開きます（Control / Command-P、次にファイルの名前の入力を開始します）。</target>
        </trans-unit>
        <trans-unit id="b9c91187aa8b3d7b05434bda6b05e4913111c0a2" translate="yes" xml:space="preserve">
          <source>Open the &lt;code&gt;AppComponent&lt;/code&gt; template and replace the &lt;code&gt;&amp;lt;app-heroes&amp;gt;&lt;/code&gt; element with a &lt;code&gt;&amp;lt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;router-outlet&lt;/a&gt;&amp;gt;&lt;/code&gt; element.</source>
          <target state="translated">&lt;code&gt;AppComponent&lt;/code&gt; テンプレートを開き、 &lt;code&gt;&amp;lt;app-heroes&amp;gt;&lt;/code&gt; 要素を &lt;code&gt;&amp;lt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;router-outlet&lt;/a&gt;&amp;gt;&lt;/code&gt; 要素に置き換えます。</target>
        </trans-unit>
        <trans-unit id="c3916758644e0166882ccb24cabed0c5e9049368" translate="yes" xml:space="preserve">
          <source>Open the &lt;code&gt;AppRoutingModule&lt;/code&gt; and add a new &lt;code&gt;admin&lt;/code&gt; route to its &lt;code&gt;appRoutes&lt;/code&gt; array.</source>
          <target state="translated">&lt;code&gt;AppRoutingModule&lt;/code&gt; を開き、その &lt;code&gt;appRoutes&lt;/code&gt; 配列に新しい &lt;code&gt;admin&lt;/code&gt; ルートを追加します。</target>
        </trans-unit>
        <trans-unit id="eab95545204defbcf8502f2c0be34aa6ff2ed363" translate="yes" xml:space="preserve">
          <source>Open the &lt;code&gt;AppRoutingModule&lt;/code&gt; and add a new &lt;code&gt;compose&lt;/code&gt; route to the &lt;code&gt;appRoutes&lt;/code&gt;.</source>
          <target state="translated">開き &lt;code&gt;AppRoutingModule&lt;/code&gt; を、新たな追加 &lt;code&gt;compose&lt;/code&gt; へのルートを &lt;code&gt;appRoutes&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="93778baa50a00162fcfb0d8a4b4552d47a6709f6" translate="yes" xml:space="preserve">
          <source>Open the &lt;code&gt;DashboardComponent&lt;/code&gt; template and add the hero search element, &lt;code&gt;&amp;lt;app-hero-search&amp;gt;&lt;/code&gt;, to the bottom of the markup.</source>
          <target state="translated">&lt;code&gt;DashboardComponent&lt;/code&gt; テンプレートを開き、マークアップの下部にヒーロー検索要素 &lt;code&gt;&amp;lt;app-hero-search&amp;gt;&lt;/code&gt; を追加します。</target>
        </trans-unit>
        <trans-unit id="eaffbfda7513b495e182c9e77848b7226285fb11" translate="yes" xml:space="preserve">
          <source>Open the &lt;code&gt;HeroDetailComponent&lt;/code&gt; class file and import the &lt;code&gt;Hero&lt;/code&gt; symbol.</source>
          <target state="translated">&lt;code&gt;HeroDetailComponent&lt;/code&gt; クラスファイルを開き、 &lt;code&gt;Hero&lt;/code&gt; シンボルをインポートします。</target>
        </trans-unit>
        <trans-unit id="d89496e624794a432ec7dcad00fed8f07ed6cf98" translate="yes" xml:space="preserve">
          <source>Open the &lt;code&gt;HeroService&lt;/code&gt; file and import the &lt;code&gt;Observable&lt;/code&gt; and &lt;code&gt;of&lt;/code&gt; symbols from RxJS.</source>
          <target state="translated">&lt;code&gt;HeroService&lt;/code&gt; ファイルを開き、RxJSから &lt;code&gt;Observable&lt;/code&gt; および &lt;code&gt;of&lt;/code&gt; シンボルをインポートします。</target>
        </trans-unit>
        <trans-unit id="2379d746e66efdc602707b136bc2410835734b2d" translate="yes" xml:space="preserve">
          <source>Open the &lt;code&gt;HeroesComponent&lt;/code&gt; class file and import the mock &lt;code&gt;HEROES&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;HeroesComponent&lt;/code&gt; クラスファイルを開き、モック &lt;code&gt;HEROES&lt;/code&gt; をインポートします。</target>
        </trans-unit>
        <trans-unit id="4e1699bc86ad2b587090e75c61450dd6e875e027" translate="yes" xml:space="preserve">
          <source>Open the &lt;code&gt;HeroesComponent&lt;/code&gt; class file.</source>
          <target state="translated">&lt;code&gt;HeroesComponent&lt;/code&gt; クラスファイルを開きます。</target>
        </trans-unit>
        <trans-unit id="83c289ffb9fb3d0dab1e733b8cab3e6a6f24f60d" translate="yes" xml:space="preserve">
          <source>Open the &lt;code&gt;HeroesComponent&lt;/code&gt; template (&lt;code&gt;heroes/heroes.component.html&lt;/code&gt;) and delete the &lt;code&gt;&amp;lt;app-hero-detail&amp;gt;&lt;/code&gt; element from the bottom.</source>
          <target state="translated">&lt;code&gt;HeroesComponent&lt;/code&gt; テンプレート（ &lt;code&gt;heroes/heroes.component.html&lt;/code&gt; ）を開き、下部から &lt;code&gt;&amp;lt;app-hero-detail&amp;gt;&lt;/code&gt; 要素を削除します。</target>
        </trans-unit>
        <trans-unit id="249249b46403ef9737f6987ffc4dd5822252889f" translate="yes" xml:space="preserve">
          <source>Open the &lt;code&gt;HeroesComponent&lt;/code&gt; template file and make the following changes:</source>
          <target state="translated">&lt;code&gt;HeroesComponent&lt;/code&gt; テンプレートファイルを開き、次の変更を行います。</target>
        </trans-unit>
        <trans-unit id="26051224cdc1cb8a5bc7ecbd608f5a525fbf9143" translate="yes" xml:space="preserve">
          <source>Open the &lt;code&gt;app.component.css&lt;/code&gt; file and add the following styles.</source>
          <target state="translated">&lt;code&gt;app.component.css&lt;/code&gt; ファイルを開き、次のスタイルを追加します。</target>
        </trans-unit>
        <trans-unit id="826ea10ba8e592def5eac6e488bceddb587e7140" translate="yes" xml:space="preserve">
          <source>Open the &lt;code&gt;app.component.html&lt;/code&gt; file and add the following HTML below the title.</source>
          <target state="translated">&lt;code&gt;app.component.html&lt;/code&gt; ファイルを開き、タイトルの下に次のHTMLを追加します。</target>
        </trans-unit>
        <trans-unit id="064cde998d6b73441531381a451267ddc62c12b2" translate="yes" xml:space="preserve">
          <source>Open the &lt;code&gt;app.module.ts&lt;/code&gt; file. In the &lt;code&gt;imports&lt;/code&gt; array, update the &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; section as follows.</source>
          <target state="translated">&lt;code&gt;app.module.ts&lt;/code&gt; ファイルを開きます。 &lt;code&gt;imports&lt;/code&gt; 配列、更新 &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; 次のようにセクション。</target>
        </trans-unit>
        <trans-unit id="3451050e4c99553749d7111ce9833a422f635602" translate="yes" xml:space="preserve">
          <source>Open the &lt;code&gt;heroes.component.css&lt;/code&gt; file and paste in the private CSS styles for the &lt;code&gt;HeroesComponent&lt;/code&gt;. You'll find them in the &lt;a href=&quot;toh-pt2#final-code-review&quot;&gt;final code review&lt;/a&gt; at the bottom of this guide.</source>
          <target state="translated">開き &lt;code&gt;heroes.component.css&lt;/code&gt; のファイルをとのプライベートCSSスタイルに貼り付ける &lt;code&gt;HeroesComponent&lt;/code&gt; 。これらは、このガイドの下部にある&lt;a href=&quot;toh-pt2#final-code-review&quot;&gt;最終的なコードレビュー&lt;/a&gt;で確認できます。</target>
        </trans-unit>
        <trans-unit id="73a2d411e7db91151fae4870e606389ac95fb4e0" translate="yes" xml:space="preserve">
          <source>Open the &lt;code&gt;heroes.component.html&lt;/code&gt; template file. Delete the default text generated by the Angular CLI and replace it with a data binding to the new &lt;code&gt;hero&lt;/code&gt; property.</source>
          <target state="translated">&lt;code&gt;heroes.component.html&lt;/code&gt; テンプレートファイルを開きます。Angular CLIによって生成されたデフォルトのテキストを削除し、新しい &lt;code&gt;hero&lt;/code&gt; プロパティへのデータバインディングで置き換えます。</target>
        </trans-unit>
        <trans-unit id="c94edf93f3dd2b62d3b03f689b7b2aadcd4920c8" translate="yes" xml:space="preserve">
          <source>Open the &lt;code&gt;product-alerts.component.html&lt;/code&gt; template and replace the placeholder paragraph with a &quot;Notify Me&quot; button that appears if the product price is over $700.</source>
          <target state="translated">&lt;code&gt;product-alerts.component.html&lt;/code&gt; テンプレートを開き、プレースホルダーの段落を、製品価格が$ 700を超える場合に表示される[通知する]ボタンに置​​き換えます。</target>
        </trans-unit>
        <trans-unit id="6400d025b8fa34953bdda2b672a0538df017c791" translate="yes" xml:space="preserve">
          <source>Open the &lt;strong&gt;Options&lt;/strong&gt; dialog with &lt;code&gt;Tools&lt;/code&gt; | &lt;code&gt;Options&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tools&lt;/code&gt; &lt;strong&gt;オプション&lt;/strong&gt;ダイアログを開く| &lt;code&gt;Options&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9ed0bc4c0172c2fbba0c946c0c54e37389851b02" translate="yes" xml:space="preserve">
          <source>Open the Chrome Dev Tools and go to the Network tab.</source>
          <target state="translated">Chrome Dev Toolsを開き、Networkタブに移動します。</target>
        </trans-unit>
        <trans-unit id="2ac40a79b7d99bdb53db696ee46f27dcf412ea9a" translate="yes" xml:space="preserve">
          <source>Open the browser developer tools and look in the console for an error message like this:</source>
          <target state="translated">ブラウザの開発者ツールを開き、コンソールでこのようなエラーメッセージが表示されていないか確認してください。</target>
        </trans-unit>
        <trans-unit id="dc9e01a5ad80b61c63b2e99ced4361bbecdee205" translate="yes" xml:space="preserve">
          <source>Open the browser's &amp;ldquo;Developer Tools&amp;rdquo; (&lt;code&gt;Ctrl-Shift-I&lt;/code&gt; on Windows; &lt;code&gt;Command-Option-I&lt;/code&gt; in macOS).</source>
          <target state="translated">ブラウザーの「開発者ツール」を開きます（Windowsでは &lt;code&gt;Ctrl-Shift-I&lt;/code&gt; &lt;code&gt;Command-Option-I&lt;/code&gt; 、macOSではCommand-Option-I）。</target>
        </trans-unit>
        <trans-unit id="9fadc1acc9a9be8e0bf71561bf2a7d42a969832d" translate="yes" xml:space="preserve">
          <source>Open the component class file (&lt;code&gt;app.component.ts&lt;/code&gt;) and change the value of the &lt;code&gt;title&lt;/code&gt; property to 'Tour of Heroes'.</source>
          <target state="translated">コンポーネントクラスファイル（ &lt;code&gt;app.component.ts&lt;/code&gt; ）を開き、 &lt;code&gt;title&lt;/code&gt; プロパティの値を「Tour of Heroes」に変更します。</target>
        </trans-unit>
        <trans-unit id="2a512fe716528dcc59149d91e20e0f28d4ad253a" translate="yes" xml:space="preserve">
          <source>Open the component template file (&lt;code&gt;app.component.html&lt;/code&gt;) and delete the default template generated by the Angular CLI. Replace it with the following line of HTML.</source>
          <target state="translated">コンポーネントテンプレートファイル（ &lt;code&gt;app.component.html&lt;/code&gt; ）を開き、Angular CLIによって生成されたデフォルトテンプレートを削除します。これを次のHTML行で置き換えます。</target>
        </trans-unit>
        <trans-unit id="734452c8b2541f55d9ae29a00ef4de74215d7e9d" translate="yes" xml:space="preserve">
          <source>Open the project in your favorite editor or IDE and navigate to the &lt;code&gt;src/app&lt;/code&gt; folder to make some changes to the starter app.</source>
          <target state="translated">お気に入りのエディターまたはIDEでプロジェクトを開き、 &lt;code&gt;src/app&lt;/code&gt; フォルダーに移動してスターターアプリに変更を加えます。</target>
        </trans-unit>
        <trans-unit id="459015ea8246d6e4993d6740f8d4c742f2771b80" translate="yes" xml:space="preserve">
          <source>Opens the official Angular documentation (angular.io) in a browser, and searches for a given keyword.</source>
          <target state="translated">ブラウザでAngularの公式ドキュメント(angular.io)を開き、指定したキーワードで検索します。</target>
        </trans-unit>
        <trans-unit id="64cfd431ce17e3c9550646a51c01d3e44db9beeb" translate="yes" xml:space="preserve">
          <source>Opens the url in default browser.</source>
          <target state="translated">デフォルトのブラウザでURLを開きます。</target>
        </trans-unit>
        <trans-unit id="19c9c9ed8477a3a275bcf0fa3f27c69151b58b7d" translate="yes" xml:space="preserve">
          <source>Opera</source>
          <target state="translated">Opera</target>
        </trans-unit>
        <trans-unit id="430d32076eb256f0fb1db5fd1333254c368ef1ba" translate="yes" xml:space="preserve">
          <source>Operation</source>
          <target state="translated">Operation</target>
        </trans-unit>
        <trans-unit id="e90414358dbfff0a68e4eb5d68a16978cf197d5a" translate="yes" xml:space="preserve">
          <source>Operators</source>
          <target state="translated">Operators</target>
        </trans-unit>
        <trans-unit id="55da9031f2999cb3d83e442304b4dcdf4c71eb07" translate="yes" xml:space="preserve">
          <source>Operators are functions that build on the observables foundation to enable sophisticated manipulation of collections. For example, RxJS defines operators such as &lt;code&gt;&lt;a href=&quot;../api/core/querylist#map&quot;&gt;map()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../api/core/querylist#filter&quot;&gt;filter()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;concat()&lt;/code&gt;, and &lt;code&gt;flatMap()&lt;/code&gt;.</source>
          <target state="translated">演算子は、コレクションの高度な操作を可能にするためにオブザーバブルの基礎の上に構築される関数です。たとえば、RxJSは &lt;code&gt;&lt;a href=&quot;../api/core/querylist#map&quot;&gt;map()&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;../api/core/querylist#filter&quot;&gt;filter()&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;concat()&lt;/code&gt; 、および &lt;code&gt;flatMap()&lt;/code&gt; などの演算子を定義します。</target>
        </trans-unit>
        <trans-unit id="8a79c87bba58be2a44756834d5850acecdd46358" translate="yes" xml:space="preserve">
          <source>Operators are functions that build on the observables foundation to enable sophisticated manipulation of collections. For example, RxJS defines operators such as &lt;code&gt;map()&lt;/code&gt;, &lt;code&gt;filter()&lt;/code&gt;, &lt;code&gt;concat()&lt;/code&gt;, and &lt;code&gt;flatMap()&lt;/code&gt;.</source>
          <target state="translated">演算子は、コレクションの高度な操作を可能にするために、オブザーバブルの基盤の上に構築された関数です。たとえば、RxJSは、 &lt;code&gt;map()&lt;/code&gt; 、 &lt;code&gt;filter()&lt;/code&gt; 、 &lt;code&gt;concat()&lt;/code&gt; 、 &lt;code&gt;flatMap()&lt;/code&gt; などの演算子を定義します。</target>
        </trans-unit>
        <trans-unit id="fb6aba7d760dae5cbe0e7867f22c9c01e7fc584c" translate="yes" xml:space="preserve">
          <source>Operators such as &lt;code&gt;new&lt;/code&gt;, &lt;code&gt;typeof&lt;/code&gt;, &lt;code&gt;instanceof&lt;/code&gt;, etc.</source>
          <target state="translated">以下のようなオペレータ &lt;code&gt;new&lt;/code&gt; 、 &lt;code&gt;typeof&lt;/code&gt; を、 &lt;code&gt;instanceof&lt;/code&gt; は、など</target>
        </trans-unit>
        <trans-unit id="78a67b274716fa5e61a869350cc8edc511b03285" translate="yes" xml:space="preserve">
          <source>Operators take configuration options, and they return a function that takes a source observable. When executing this returned function, the operator observes the source observable&amp;rsquo;s emitted values, transforms them, and returns a new observable of those transformed values. Here is a simple example:</source>
          <target state="translated">オペレーターは構成オプションを取り、ソースオブザーバブルを取得する関数を返します。この返された関数を実行すると、オペレーターはソースオブザーバブルの放出された値を観察し、それらを変換して、変換された値の新しいオブザーバブルを返します。以下に簡単な例を示します。</target>
        </trans-unit>
        <trans-unit id="aa7b517ed2c8c9eece687a703e1244e651136d90" translate="yes" xml:space="preserve">
          <source>Optimization and source map configuration</source>
          <target state="translated">最適化とソースマップの設定</target>
        </trans-unit>
        <trans-unit id="9256c64de0258ef6aa5f3450d57a6a9abdb1a5a0" translate="yes" xml:space="preserve">
          <source>Optimized build speed and bundle sizes with Angular CLI webpack 5</source>
          <target state="translated">Angular CLI webpack 5でビルド速度とバンドルサイズを最適化</target>
        </trans-unit>
        <trans-unit id="918e9722f17b1a581662c7767624481c4fedcc02" translate="yes" xml:space="preserve">
          <source>Optimizing client app size with lightweight injection tokens</source>
          <target state="translated">軽量インジェクショントークンによるクライアントアプリのサイズの最適化</target>
        </trans-unit>
        <trans-unit id="705e4a41edad736060e3a0f828ef8cf9e4cc96ad" translate="yes" xml:space="preserve">
          <source>Optimizing performance of async validators</source>
          <target state="translated">非同期バリデータのパフォーマンスを最適化</target>
        </trans-unit>
        <trans-unit id="030e97c870e56e7c41994045c7e02d21ed01463a" translate="yes" xml:space="preserve">
          <source>Optimizing server interaction with debouncing</source>
          <target state="translated">デバウンシングによるサーバインタラクションの最適化</target>
        </trans-unit>
        <trans-unit id="a58c5cb025a62662cf44702a6d527a8c87a03712" translate="yes" xml:space="preserve">
          <source>Opting into Angular Ivy</source>
          <target state="translated">Angular Ivyにオプトインする</target>
        </trans-unit>
        <trans-unit id="c5a5b5cd96d737d33ff866ca1271b3ea54adfc52" translate="yes" xml:space="preserve">
          <source>Opting out of Ivy in version 9</source>
          <target state="translated">バージョン9でのアイビーのオプトアウト</target>
        </trans-unit>
        <trans-unit id="ac18808e2e8e393149e16402b330eb2d7a36ad06" translate="yes" xml:space="preserve">
          <source>Opting out of differential loading</source>
          <target state="translated">差動荷重のオプトアウト</target>
        </trans-unit>
        <trans-unit id="e31d972229de381b461860014dd710856361917a" translate="yes" xml:space="preserve">
          <source>Option</source>
          <target state="translated">Option</target>
        </trans-unit>
        <trans-unit id="75bca5f8db26fdc8df7cc72ba6934a8ea6df9ba3" translate="yes" xml:space="preserve">
          <source>Option names are prefixed with a double dash (--). Option aliases are prefixed with a single dash (-). Arguments are not prefixed. For example:</source>
          <target state="translated">オプション名の前には、二重のダッシュ (--)が付きます。オプションのエイリアスは、一重のダッシュ(-)でプレフィックスを付けます。引数には接頭辞は付けません。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="0c6c4102d4dfec3b1aa41117e0e344046c58a151" translate="yes" xml:space="preserve">
          <source>Optional</source>
          <target state="translated">Optional</target>
        </trans-unit>
        <trans-unit id="42fbc661d9eb5bdb9c764ccb784da2cf60ec117d" translate="yes" xml:space="preserve">
          <source>Optional argument which signifies if the current &lt;code&gt;insertBefore&lt;/code&gt; is a result of a move. Animation uses this information to trigger move animations. In the past the Animation would always assume that any &lt;code&gt;insertBefore&lt;/code&gt; is a move. This is not strictly true because with runtime i18n it is possible to invoke &lt;code&gt;insertBefore&lt;/code&gt; as a result of i18n and it should not trigger an animation move.</source>
          <target state="translated">現在の &lt;code&gt;insertBefore&lt;/code&gt; が移動の結果であるかどうかを示すオプションの引数。アニメーションはこの情報を使用して、移動アニメーションをトリガーします。これまで、アニメーションは常に &lt;code&gt;insertBefore&lt;/code&gt; が移動であると想定していました。ランタイムi18nでは、i18nの結果として &lt;code&gt;insertBefore&lt;/code&gt; を呼び出すことができ、アニメーションの移動をトリガーするべきではないため、これは厳密には当てはまりません。</target>
        </trans-unit>
        <trans-unit id="dc81f35d5cb2a85d02d09449720e3b4d0e563a55" translate="yes" xml:space="preserve">
          <source>Optional browser features to polyfill</source>
          <target state="translated">ポリフィルへのブラウザのオプション機能</target>
        </trans-unit>
        <trans-unit id="e49ff74bc21a29fb180a1ac29c34980ae57fe46b" translate="yes" xml:space="preserve">
          <source>Optional component/template files to replicate.</source>
          <target state="translated">複製するためのオプションのコンポーネント/テンプレートファイル。</target>
        </trans-unit>
        <trans-unit id="7346e4d45825ec177eaaa77f3cf50927846f5271" translate="yes" xml:space="preserve">
          <source>Optional dependencies</source>
          <target state="translated">オプションの依存関係</target>
        </trans-unit>
        <trans-unit id="f5ee02ce09873d150e84882cfa2d00c65c6f61c9" translate="yes" xml:space="preserve">
          <source>Optional information can also include other forms such as:</source>
          <target state="translated">また、オプション情報には、他の形式の情報を含めることもできます。</target>
        </trans-unit>
        <trans-unit id="ab510470f25bfcd81d4210f3e4091efd6f1cfab3" translate="yes" xml:space="preserve">
          <source>Optional information takes other forms. Search criteria are often loosely structured, e.g., &lt;code&gt;name='wind*'&lt;/code&gt;. Multiple values are common&amp;mdash;&lt;code&gt;after='12/31/2015' &amp;amp; before='1/1/2017'&lt;/code&gt;&amp;mdash;in no particular order&amp;mdash;&lt;code&gt;before='1/1/2017' &amp;amp; after='12/31/2015'&lt;/code&gt;&amp;mdash; in a variety of formats&amp;mdash;&lt;code&gt;during='currentYear'&lt;/code&gt;.</source>
          <target state="translated">オプションの情報は他の形式を取ります。多くの場合、検索条件は大まかに構造化されています（例： &lt;code&gt;name='wind*'&lt;/code&gt; 。複数の値が一般的です&amp;mdash; &lt;code&gt;after='12/31/2015' &amp;amp; before='1/1/2017'&lt;/code&gt; 31/2015 '＆before =' 1/1/2017 ' &amp;mdash;順不同&amp;mdash; &lt;code&gt;before='1/1/2017' &amp;amp; after='12/31/2015'&lt;/code&gt; 1/1/2017 '＆after = '12 / 31/2015' &amp;mdash;さまざまな形式&amp;mdash; &lt;code&gt;during='currentYear'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="400c931b4be3d7d0c08ae1d7d4b3a2706e5eb95a" translate="yes" xml:space="preserve">
          <source>Optional parameters are the ideal vehicle for conveying arbitrarily complex information during navigation. Optional parameters aren't involved in pattern matching and afford flexibility of expression.</source>
          <target state="translated">オプションパラメータは、ナビゲーション中に任意の複雑な情報を伝えるための理想的な手段です。オプションパラメータはパターンマッチングに関与せず、柔軟な表現が可能です。</target>
        </trans-unit>
        <trans-unit id="d5f1a6c613bb75d32b568488ce84888511631004" translate="yes" xml:space="preserve">
          <source>Optional practices</source>
          <target state="translated">オプションの練習</target>
        </trans-unit>
        <trans-unit id="6856aec35674ad76cddfd02f6ff177082b78ea73" translate="yes" xml:space="preserve">
          <source>Optional. A handler for an error notification. An error halts execution of the observable instance.</source>
          <target state="translated">オプションです。エラー通知のハンドラ。エラーは観測可能なインスタンスの実行を停止します。</target>
        </trans-unit>
        <trans-unit id="29f601f024ebc56d9feeca9e17e7bdf0b57d1cc9" translate="yes" xml:space="preserve">
          <source>Optional. A handler for the execution-complete notification. Delayed values can continue to be delivered to the next handler after execution is complete.</source>
          <target state="translated">オプション。実行完了通知用のハンドラ。遅延した値は、実行が完了した後も次のハンドラに配信し続けることができます。</target>
        </trans-unit>
        <trans-unit id="6dcae3623c0d8f13dc4392798d18296e66017e4e" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;''&lt;/code&gt;.</source>
          <target state="translated">オプション。デフォルトは &lt;code&gt;''&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="3381f35deada3fd6b019d74a7bf617a8c9b493e9" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;'OK'&lt;/code&gt;.</source>
          <target state="translated">オプション。デフォルトは &lt;code&gt;'OK'&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="0337f034b870c06d392a0cffaa1649d167036e8a" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;'USD'&lt;/code&gt;.</source>
          <target state="translated">オプション。デフォルトは &lt;code&gt;'USD'&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="5a3bb62c2d7f0552954f10cb2f8bff843cedd8ff" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;'en'&lt;/code&gt;.</source>
          <target state="translated">オプション。デフォルトは &lt;code&gt;'en'&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="5c14de4b5a52901ab45f1f50c8f6f8c388535cca" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;'imperative'&lt;/code&gt;.</source>
          <target state="translated">オプション。デフォルトは &lt;code&gt;'imperative'&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="1e7d75e9cc2bea632ff7da41006632ee60f1ced8" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;'mediumDate'&lt;/code&gt;.</source>
          <target state="translated">オプション。デフォルトは &lt;code&gt;'mediumDate'&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="fb608f50cfb6774b712c37f877def2a0f761ae95" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;'path'&lt;/code&gt;.</source>
          <target state="translated">オプション。デフォルトは &lt;code&gt;'path'&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="1e74ea3046dea21fa1f199a43b2d9d2777651c96" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;'symbol'&lt;/code&gt;.</source>
          <target state="translated">オプション。デフォルトは &lt;code&gt;'symbol'&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="83edc8035c7f93c13ecad123dc62e1a4b3f07969" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;(e: &lt;a href=&quot;../../core/missingtranslationstrategy#Error&quot;&gt;Error&lt;/a&gt;) =&amp;gt; { }&lt;/code&gt;.</source>
          <target state="translated">オプション。デフォルトは &lt;code&gt;(e: &lt;a href=&quot;../../core/missingtranslationstrategy#Error&quot;&gt;Error&lt;/a&gt;) =&amp;gt; { }&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="bb7706e8107c09e21f3abcf784a3658259913546" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;(e: Error) =&amp;gt; { }&lt;/code&gt;.</source>
          <target state="translated">オプション。デフォルトは &lt;code&gt;(e: Error) =&amp;gt; { }&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="f0fb4c3880567dd79f680c0df074813a3f8092e6" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">オプション。デフォルトは &lt;code&gt;0&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="0cc77783c426198beca7a5061e2fbc8d0f73d22e" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;200&lt;/code&gt;.</source>
          <target state="translated">オプション。デフォルトは &lt;code&gt;200&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="6cdfbb9d0c95f30183d4605789d3423494cbc47e" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;&lt;a href=&quot;serializertypes#PRIMITIVE&quot;&gt;SerializerTypes.PRIMITIVE&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">オプション。デフォルトは &lt;code&gt;&lt;a href=&quot;serializertypes#PRIMITIVE&quot;&gt;SerializerTypes.PRIMITIVE&lt;/a&gt;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="0fec7dfbf05401bca2791634d7c6a7bfc7067aa9" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">オプション。デフォルトは &lt;code&gt;[]&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="f9fc6f9d8254c0e45b0c64754677e088f1d113ca" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;defaultComparator&lt;/code&gt;.</source>
          <target state="translated">オプション。デフォルトは &lt;code&gt;defaultComparator&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="9145bb534991daf57f7701301bbf91899e9dd502" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">オプション。デフォルトは &lt;code&gt;false&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="0055788f2ca22e20c975392f22c77a2081447880" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">オプション。デフォルトは &lt;code&gt;null&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="81e97dcaaa41ca3300b210af9cb347aabd6782bc" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">オプション。デフォルトは &lt;code&gt;true&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="78bbe710af81960b2e485bb4d19548f797e8de4a" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">オプション。デフォルトは &lt;code&gt;undefined&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="4a5f1791676379b433da5f7bbd4a17b1a738f4c6" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;{ processNewMacroTasksSynchronously: true }&lt;/code&gt;.</source>
          <target state="translated">オプション。デフォルトは &lt;code&gt;{ processNewMacroTasksSynchronously: true }&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ea504f3d8a30bf5b2b0407a00c52804459c0a173" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;{ skipLocationChange: false }&lt;/code&gt;.</source>
          <target state="translated">オプション。デフォルトは &lt;code&gt;{ skipLocationChange: false }&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="7fe43eedc240161af52040b1459232628c4db09f" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;{} as HttpParamsOptions&lt;/code&gt;.</source>
          <target state="translated">オプション。デフォルトは &lt;code&gt;{} as HttpParamsOptions&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3b2bf12eb0f92f428cfb65113da6b250b10dcd6c" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;{}&lt;/code&gt;.</source>
          <target state="translated">オプション。デフォルトは &lt;code&gt;{}&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="90fef798a39f3038503c95933f2112a7de384039" translate="yes" xml:space="preserve">
          <source>Optional. If specified, this callback will be invoked whenever the set of pending macrotasks changes. If this callback returns true doneCb will not be invoked and no further updates will be issued.</source>
          <target state="translated">オプション。指定した場合、このコールバックは、保留中のマクロタスクのセットが変更されるたびに呼び出されます。このコールバックが true を返した場合、 doneCb は呼び出されず、それ以上の更新は行われません。</target>
        </trans-unit>
        <trans-unit id="40872feaf230ffad9bd8997564d231308c95c3b6" translate="yes" xml:space="preserve">
          <source>Optional. The maximum time to wait for Angular to become stable. If not specified, whenStable() will wait forever.</source>
          <target state="translated">オプションです。Angularが安定するまでの最大待ち時間。指定しない場合、whenStable()は永遠に待ちます。</target>
        </trans-unit>
        <trans-unit id="8875354ce564cd553c2341c2da111e365d05b6b2" translate="yes" xml:space="preserve">
          <source>Optionally signal to the renderer whether this element is a host element or not</source>
          <target state="translated">オプションで、この要素がホスト要素であるかどうかをレンダラーに通知します。</target>
        </trans-unit>
        <trans-unit id="169a0beed38eda3807ef4a6e3b7866807f5bad42" translate="yes" xml:space="preserve">
          <source>Optionally, CSS styles applied to the template</source>
          <target state="translated">オプションで、テンプレートに適用されるCSSスタイル</target>
        </trans-unit>
        <trans-unit id="c86bfd6abd0b43e24c33c522408b8b56e4ddafca" translate="yes" xml:space="preserve">
          <source>Optionally, a component can be mounted onto a DOM element that does not match the componentType's selector.</source>
          <target state="translated">オプションとして、componentType のセレクタにマッチしない DOM 要素にコンポーネントをマウントすることができます。</target>
        </trans-unit>
        <trans-unit id="5f8c1c2b5b21a8e5430392924dd15f7e26c0baf4" translate="yes" xml:space="preserve">
          <source>Optionally, you can configure the Angular CLI to use &lt;a href=&quot;https://docs.bazel.build&quot;&gt;Bazel&lt;/a&gt; as the build tool. For more information, see &lt;a href=&quot;guide/bazel&quot;&gt;Building with Bazel&lt;/a&gt;.</source>
          <target state="translated">必要に応じて、&lt;a href=&quot;https://docs.bazel.build&quot;&gt;Bazel&lt;/a&gt;をビルドツールとして使用するようにAngular CLIを構成できます。詳細については、「&lt;a href=&quot;guide/bazel&quot;&gt;Bazel&lt;/a&gt;を使用したビルド」を参照してください。</target>
        </trans-unit>
        <trans-unit id="6bf5da9c080bee3a8142586c412aa39971137eee" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">Options</target>
        </trans-unit>
        <trans-unit id="3743e45daa27c13ec520d24349acdbca83290cec" translate="yes" xml:space="preserve">
          <source>Options are given by the CLI user, context is provided by and provides access to the CLI Builder API, and the developer provides the behavior.</source>
          <target state="translated">オプションはCLIユーザーによって与えられ、コンテキストはCLI Builder APIによって提供され、CLI Builder APIへのアクセスを提供し、開発者は動作を提供します。</target>
        </trans-unit>
        <trans-unit id="c9e5f370318c8dc3cee1fa76cecc61e59ecfc94b" translate="yes" xml:space="preserve">
          <source>Options for creating a compiler</source>
          <target state="translated">コンパイラを作成するためのオプション</target>
        </trans-unit>
        <trans-unit id="2ef5635a8b4edbca1d90b4b8a045e7ee555d7f8b" translate="yes" xml:space="preserve">
          <source>Options that control animation styling and timing.</source>
          <target state="translated">アニメーションのスタイリングとタイミングを制御するオプション。</target>
        </trans-unit>
        <trans-unit id="5a3320daae4255b587f501a2828c3b8e5b2672a6" translate="yes" xml:space="preserve">
          <source>Options that control the navigation strategy.</source>
          <target state="translated">ナビゲーション戦略を制御するオプション。</target>
        </trans-unit>
        <trans-unit id="945df18a6234dedf43f7cd8df23b7ae5ba00463d" translate="yes" xml:space="preserve">
          <source>Options that modify the &lt;code&gt;&lt;a href=&quot;router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; URL. Supply an object containing any of these properties to a &lt;code&gt;&lt;a href=&quot;router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; navigation function to control how the target URL should be constructed.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; URLを変更するオプション。これらのプロパティのいずれかを含むオブジェクトを &lt;code&gt;&lt;a href=&quot;router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; ナビゲーション関数に提供して、ターゲットURLの構築方法を制御します。</target>
        </trans-unit>
        <trans-unit id="42d9084a0d6d5f1da0299cae21edf8cacf6c8dfb" translate="yes" xml:space="preserve">
          <source>Options that modify the &lt;code&gt;&lt;a href=&quot;router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; navigation strategy. Supply an object containing any of these properties to a &lt;code&gt;&lt;a href=&quot;router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; navigation function to control how the navigation should be handled.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; ナビゲーション戦略を変更するオプション。これらのプロパティのいずれかを含むオブジェクトを &lt;code&gt;&lt;a href=&quot;router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; ナビゲーション関数に提供して、ナビゲーションの処理方法を制御します。</target>
        </trans-unit>
        <trans-unit id="c17cce0d1a7737c56033975a4a9d3c6f08cac549" translate="yes" xml:space="preserve">
          <source>Options that modify the &lt;code&gt;&lt;a href=&quot;router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; navigation strategy. Supply an object containing any of these properties to a &lt;code&gt;&lt;a href=&quot;router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; navigation function to control how the target URL should be constructed or interpreted.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; ナビゲーション戦略を変更するオプション。これらのプロパティのいずれかを含むオブジェクトを &lt;code&gt;&lt;a href=&quot;router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; ナビゲーション関数に提供して、ターゲットURLを構築または解釈する方法を制御します。</target>
        </trans-unit>
        <trans-unit id="1370833782863250c62f5a940dd0b66b5451c1c2" translate="yes" xml:space="preserve">
          <source>Options that modify the &lt;code&gt;&lt;a href=&quot;router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; URL. Supply an object containing any of these properties to a &lt;code&gt;&lt;a href=&quot;router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; navigation function to control how the target URL should be constructed.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; URLを変更するオプション。これらのプロパティのいずれかを含むオブジェクトを &lt;code&gt;&lt;a href=&quot;router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; ナビゲーション関数に提供して、ターゲットURLの構築方法を制御します。</target>
        </trans-unit>
        <trans-unit id="f21f945cfdad21008daa419f1c2bcdea29781694" translate="yes" xml:space="preserve">
          <source>Options that modify the &lt;code&gt;&lt;a href=&quot;router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; navigation strategy. Supply an object containing any of these properties to a &lt;code&gt;&lt;a href=&quot;router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; navigation function to control how the navigation should be handled.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; ナビゲーション戦略を変更するオプション。これらのプロパティのいずれかを含むオブジェクトを &lt;code&gt;&lt;a href=&quot;router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; ナビゲーション関数に提供して、ナビゲーションの処理方法を制御します。</target>
        </trans-unit>
        <trans-unit id="d143cee73ad76cbfa144b4b0f40a8e6aeaeae545" translate="yes" xml:space="preserve">
          <source>Options that modify the &lt;code&gt;&lt;a href=&quot;router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; navigation strategy. Supply an object containing any of these properties to a &lt;code&gt;&lt;a href=&quot;router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; navigation function to control how the target URL should be constructed or interpreted.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; ナビゲーション戦略を変更するオプション。これらのプロパティのいずれかを含むオブジェクトを &lt;code&gt;&lt;a href=&quot;router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; ナビゲーション関数に提供して、ターゲットURLを構築または解釈する方法を制御します。</target>
        </trans-unit>
        <trans-unit id="2312d0dae9bb6c6b2553204f4b8553b015206073" translate="yes" xml:space="preserve">
          <source>Options that modify the navigation strategy.</source>
          <target state="translated">ナビゲーション戦略を変更するオプション。</target>
        </trans-unit>
        <trans-unit id="ec6b4a1f161a0c97e8e2157d877fd1afa52dbed1" translate="yes" xml:space="preserve">
          <source>Options that specify files can be given as absolute paths, or as paths relative to the current working directory, which is generally either the workspace or project root.</source>
          <target state="translated">ファイルを指定するオプションは、絶対パス、または現在の作業ディレクトリからの相対パスを指定することができます。</target>
        </trans-unit>
        <trans-unit id="bfe27583e1d225b9a1db1842931adaae7fcd0d72" translate="yes" xml:space="preserve">
          <source>Or inside the &lt;code&gt;beforeEach()&lt;/code&gt; if you prefer to inject the service as part of your setup.</source>
          <target state="translated">または、設定の一部としてサービスを注入する場合は、 &lt;code&gt;beforeEach()&lt;/code&gt; 内。</target>
        </trans-unit>
        <trans-unit id="a258d20dbff14fba0a26b7e4ddee32d7abd12c5d" translate="yes" xml:space="preserve">
          <source>Or make the subscription callback run inside the zone.</source>
          <target state="translated">または、サブスクリプション・コールバックをゾーン内で実行するようにします。</target>
        </trans-unit>
        <trans-unit id="3936f7ad23900ec7726977342c7a6b87c57e0e00" translate="yes" xml:space="preserve">
          <source>Or something could go wrong on the client-side such as a network error that prevents the request from completing successfully or an exception thrown in an RxJS operator. These errors produce JavaScript &lt;code&gt;ErrorEvent&lt;/code&gt; objects.</source>
          <target state="translated">または、リクエストが正常に完了しないネットワークエラーや、RxJSオペレーターで例外がスローされるなど、クライアント側で問題が発生する可能性があります。これらのエラーはJavaScript &lt;code&gt;ErrorEvent&lt;/code&gt; オブジェクトを生成します。</target>
        </trans-unit>
        <trans-unit id="72e34d9cf1be96305161a84b1004a86ff4a17579" translate="yes" xml:space="preserve">
          <source>Or to use the production configuration.</source>
          <target state="translated">または、本番設定を使用すること。</target>
        </trans-unit>
        <trans-unit id="df84bcd15a086370c882bf60c8fb48753585c091" translate="yes" xml:space="preserve">
          <source>Or you might not use a pipe at all. It may be better to pursue the pipe's purpose with a property of the component, a point that's discussed later in this page.</source>
          <target state="translated">あるいは、パイプを全く使わないかもしれません。このページで後述するコンポーネントのプロパティでパイプの目的を追求した方が良いかもしれません。</target>
        </trans-unit>
        <trans-unit id="74eeea1806385a560f87806ccc384fe685713829" translate="yes" xml:space="preserve">
          <source>Organize a sample application's features into modules.</source>
          <target state="translated">サンプルアプリケーションの機能をモジュールに整理します。</target>
        </trans-unit>
        <trans-unit id="8444fcb4a82e33b055c10eaa5c1b216aee784066" translate="yes" xml:space="preserve">
          <source>Organize the app and routes into &lt;em&gt;feature areas&lt;/em&gt; using modules.</source>
          <target state="translated">アプリを整理し、モジュールを使用して&lt;em&gt;機能エリアに&lt;/em&gt;ルーティングします。</target>
        </trans-unit>
        <trans-unit id="b2d968710497d4eceae60b1c6ec749f251693530" translate="yes" xml:space="preserve">
          <source>Organize the app into &lt;em&gt;feature areas&lt;/em&gt;.</source>
          <target state="translated">アプリを&lt;em&gt;機能領域に&lt;/em&gt;整理し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="99718957d55a0d04ef3a677390d1dbed28ca86cc" translate="yes" xml:space="preserve">
          <source>Organizing the app and routes into feature areas using modules.</source>
          <target state="translated">モジュールを使ってアプリとルートを機能領域に整理する</target>
        </trans-unit>
        <trans-unit id="5806f8342fe1acc1956338c907044aa83140597d" translate="yes" xml:space="preserve">
          <source>Organizing the app into feature areas.</source>
          <target state="translated">アプリを機能領域に整理する</target>
        </trans-unit>
        <trans-unit id="ac43c4bfe64883c7de293b099023b616edb5a462" translate="yes" xml:space="preserve">
          <source>Organizing the application features into modules.</source>
          <target state="translated">アプリケーションの機能をモジュールに整理する</target>
        </trans-unit>
        <trans-unit id="ca86c62ddb9a806787e14a0b0b8237317a5018fc" translate="yes" xml:space="preserve">
          <source>Organizing your code into distinct functional modules helps in managing development of complex applications, and in designing for reusability. In addition, this technique lets you take advantage of &lt;em&gt;lazy-loading&lt;/em&gt;&amp;mdash;that is, loading modules on demand&amp;mdash;to minimize the amount of code that needs to be loaded at startup.</source>
          <target state="translated">コードを個別の機能モジュールに編成すると、複雑なアプリケーションの開発管理と再利用性の設計に役立ちます。さらに、この手法では、&lt;em&gt;遅延読み込み（&lt;/em&gt;つまり、モジュールをオンデマンドで読み込む）を利用して、起動時に読み込む必要があるコードの量を最小限に抑えることができます。</target>
        </trans-unit>
        <trans-unit id="83a39e002d71684b8b3fb6274fcd611217931dbe" translate="yes" xml:space="preserve">
          <source>Other &lt;em&gt;routed component&lt;/em&gt; tests need a test double for &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">他の&lt;em&gt;ルーティングコンポーネント&lt;/em&gt;テストでは、 &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; のダブルテストが必要です。</target>
        </trans-unit>
        <trans-unit id="0869cfde2d1aeea3f26a14c997de0f03f2a1126a" translate="yes" xml:space="preserve">
          <source>Other APIs may bury the data that you want within an object. You might have to dig that data out by processing the &lt;code&gt;Observable&lt;/code&gt; result with the RxJS &lt;code&gt;&lt;a href=&quot;../api/core/querylist#map&quot;&gt;map()&lt;/a&gt;&lt;/code&gt; operator.</source>
          <target state="translated">他のAPIは、必要なデータをオブジェクト内に埋め込む場合があります。RxJS &lt;code&gt;&lt;a href=&quot;../api/core/querylist#map&quot;&gt;map()&lt;/a&gt;&lt;/code&gt; 演算子を使用して &lt;code&gt;Observable&lt;/code&gt; の結果を処理することにより、そのデータを掘り出す必要がある場合があります。</target>
        </trans-unit>
        <trans-unit id="a22d3f4f426e80822e0956fe76f7cdfe7bbb06cd" translate="yes" xml:space="preserve">
          <source>Other APIs may bury the data that you want within an object. You might have to dig that data out by processing the &lt;code&gt;Observable&lt;/code&gt; result with the RxJS &lt;code&gt;map()&lt;/code&gt; operator.</source>
          <target state="translated">他のAPIは、必要なデータをオブジェクト内に埋め込む場合があります。RxJS &lt;code&gt;map()&lt;/code&gt; 演算子を使用して &lt;code&gt;Observable&lt;/code&gt; の結果を処理することにより、そのデータを掘り下げる必要がある場合があります。</target>
        </trans-unit>
        <trans-unit id="4025c5882dbf33b768634c48c91716e3d8aa323b" translate="yes" xml:space="preserve">
          <source>Other Angular lifecycle hooks</source>
          <target state="translated">その他のAngularライフサイクルフック</target>
        </trans-unit>
        <trans-unit id="5e20c28f5514d747bf0651a3cf8b661c19763b23" translate="yes" xml:space="preserve">
          <source>Other Angular sub-systems may have their own lifecycle hooks apart from these component hooks.</source>
          <target state="translated">これらのコンポーネントフックとは別に、他のAngularサブシステムにも独自のライフサイクルフックがあるかもしれません。</target>
        </trans-unit>
        <trans-unit id="d04236090d90fbbdc04e8b5da31968890f7552f4" translate="yes" xml:space="preserve">
          <source>Other aspects of an outgoing request can be configured via the options object passed as the last argument to the &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; method.</source>
          <target state="translated">発信要求の他の側面は、 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; メソッドの最後の引数として渡されるオプションオブジェクトを介して設定できます。</target>
        </trans-unit>
        <trans-unit id="d16d34594c634bd0715de111d850d0ef95ffa572" translate="yes" xml:space="preserve">
          <source>Other handlers are less forgiving. For example, the &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; directive expects an object with a &lt;code&gt;button&lt;/code&gt; property that identifies which mouse button (if any) was pressed during the click. The &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; directive throws an error if the event object is missing.</source>
          <target state="translated">他のハンドラーは許容度が低くなります。たとえば、 &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; ディレクティブは、クリック中に押されたマウスボタン（存在する場合）を識別する &lt;code&gt;button&lt;/code&gt; プロパティを持つオブジェクトを想定しています。 &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; のイベントオブジェクトが欠落している場合ディレクティブは、エラーがスローされます。</target>
        </trans-unit>
        <trans-unit id="288870d1724dd02a5ce433fe90e6e2f3ed869b96" translate="yes" xml:space="preserve">
          <source>Other notable differences from JavaScript syntax include:</source>
          <target state="translated">その他、JavaScriptの構文との顕著な違いとしては、以下のようなものがあります。</target>
        </trans-unit>
        <trans-unit id="a8586ddfb0b549d5d774ad5cd6ad4b33ff4bae3a" translate="yes" xml:space="preserve">
          <source>Other reasons the Angular service worker might change the version of a running app are normal events:</source>
          <target state="translated">その他、Angularサービスワーカーが実行中のアプリのバージョンを変更する可能性がある理由としては、通常のイベントがあります。</target>
        </trans-unit>
        <trans-unit id="73e8fe3faf09a56f69f9f940eebba0662dab6a8e" translate="yes" xml:space="preserve">
          <source>Other test frameworks</source>
          <target state="translated">その他のテストフレームワーク</target>
        </trans-unit>
        <trans-unit id="59c884e51b962ab65dd7fc3b9aedc26de661abe9" translate="yes" xml:space="preserve">
          <source>Other types of providers can create their values &lt;em&gt;lazily&lt;/em&gt;; that is, when they're needed for injection.</source>
          <target state="translated">他のタイプのプロバイダーは、&lt;em&gt;遅延&lt;/em&gt;して値を作成できます。つまり、注射に必要な場合です。</target>
        </trans-unit>
        <trans-unit id="4e7f217ab819a609a1f778b51855488efb2ea0c0" translate="yes" xml:space="preserve">
          <source>Our community values respectful, supportive communication. Please consult and adhere to the &lt;a href=&quot;https://github.com/angular/code-of-conduct/blob/master/CODE_OF_CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt;.</source>
          <target state="translated">私たちのコミュニティは、敬意と協力的なコミュニケーションを大切にしています。&lt;a href=&quot;https://github.com/angular/code-of-conduct/blob/master/CODE_OF_CONDUCT.md&quot;&gt;行動規範&lt;/a&gt;を参照して遵守してください。</target>
        </trans-unit>
        <trans-unit id="071db634a9379fcd1ebd5baffe4fc841d7fa31c4" translate="yes" xml:space="preserve">
          <source>Out of the box, the router either never preloads, or preloads every lazy load module. The &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; also supports &lt;a href=&quot;router#custom-preloading&quot;&gt;custom preloading strategies&lt;/a&gt; for fine control over which modules to preload and when.</source>
          <target state="translated">デフォルトでは、ルーターはプリロードしないか、すべてのレイジーロードモジュールをプリロードします。 &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; また、サポート&lt;a href=&quot;router#custom-preloading&quot;&gt;カスタムプリロード戦略&lt;/a&gt;プリロードとするときに、モジュールを細かく制御のために。</target>
        </trans-unit>
        <trans-unit id="150cdbc41b7f6e9b339465271d64901643a57549" translate="yes" xml:space="preserve">
          <source>Outgoing URL parameters.</source>
          <target state="translated">送信URLのパラメータ。</target>
        </trans-unit>
        <trans-unit id="d4bad590de3d2a64d6a24b3e9f2674b2cf5369fd" translate="yes" xml:space="preserve">
          <source>Outgoing headers for this request.</source>
          <target state="translated">このリクエストの送信ヘッダ。</target>
        </trans-unit>
        <trans-unit id="4a81f898e5e4474a5618b8f023842ea200ddda8a" translate="yes" xml:space="preserve">
          <source>OutletContext</source>
          <target state="translated">OutletContext</target>
        </trans-unit>
        <trans-unit id="4bed336194a9a5c86b6a734f03b3570d2aae1a68" translate="yes" xml:space="preserve">
          <source>Output</source>
          <target state="translated">Output</target>
        </trans-unit>
        <trans-unit id="31e493f13af084077b8a318788983f0e5d60c016" translate="yes" xml:space="preserve">
          <source>Output a code coverage report.</source>
          <target state="translated">コードカバレッジレポートを出力します。</target>
        </trans-unit>
        <trans-unit id="2faf6bd753b0ce65551933b80f4bd5d1808345e3" translate="yes" xml:space="preserve">
          <source>Output format (prose, json, stylish, verbose, pmd, msbuild, checkstyle, vso, fileslist).</source>
          <target state="translated">出力形式(prose,json,stylish,verbose,pmd,msbuild,checkstyle,vso,fileslist)。</target>
        </trans-unit>
        <trans-unit id="baa9407a9473bc756b7b02207560d4a49a43e8d1" translate="yes" xml:space="preserve">
          <source>Output format for the generated file.</source>
          <target state="translated">生成されたファイルの出力形式。</target>
        </trans-unit>
        <trans-unit id="8f5d71b7c43000821c2489a9cdfcaad176dd4714" translate="yes" xml:space="preserve">
          <source>Output in-file eval sourcemaps.</source>
          <target state="translated">ファイル内の eval ソースマップを出力します。</target>
        </trans-unit>
        <trans-unit id="ca4409ba27dc1d2a8784894950db67da52a31ddb" translate="yes" xml:space="preserve">
          <source>Output options</source>
          <target state="translated">出力オプション</target>
        </trans-unit>
        <trans-unit id="3cb7e94de5a4f52643bcf28b38d7272c4e70dc3f" translate="yes" xml:space="preserve">
          <source>Output profile events for Chrome profiler.</source>
          <target state="translated">Chromeプロファイラーのプロファイルイベントを出力します。</target>
        </trans-unit>
        <trans-unit id="6f1e775f7bd32d3f5bef06b33589003e7104614b" translate="yes" xml:space="preserve">
          <source>Output sourcemaps.</source>
          <target state="translated">ソースマップを出力します。</target>
        </trans-unit>
        <trans-unit id="140a5bc951788cb85b964b9b11b49aa36ddda04b" translate="yes" xml:space="preserve">
          <source>Outputs Angular CLI version.</source>
          <target state="translated">Angular CLIのバージョンを出力します。</target>
        </trans-unit>
        <trans-unit id="67fda2a70b40411a45cd0693789fc25606a8181d" translate="yes" xml:space="preserve">
          <source>Overall JSON structure</source>
          <target state="translated">全体的なJSON構造</target>
        </trans-unit>
        <trans-unit id="0370569258170210e172c329a95a11cd7907a5cd" translate="yes" xml:space="preserve">
          <source>Overall application performance is affected in cases where the user stays on Angular-rendered pages because the AngularJS framework and application are still loaded and running, even if they are never accessed.</source>
          <target state="translated">アプリケーション全体のパフォーマンスは、ユーザーが決してアクセスされなくてもAngularJSフレームワークとアプリケーションが読み込まれて実行されているため、ユーザーがAngularレンダリングされたページにとどまっている場合に影響を受けます。</target>
        </trans-unit>
        <trans-unit id="177a68e88431bcd2dbcca1a54072f3b5e904f4c5" translate="yes" xml:space="preserve">
          <source>Overall structural guidelines</source>
          <target state="translated">全体的な構造指針</target>
        </trans-unit>
        <trans-unit id="d0611499e594109b02f051b3c268baf908e73abb" translate="yes" xml:space="preserve">
          <source>Overload #1</source>
          <target state="translated">オーバーロード #1</target>
        </trans-unit>
        <trans-unit id="8f61a01a0fcd57ff4e2afa8443e05ab873d1f7eb" translate="yes" xml:space="preserve">
          <source>Overload #10</source>
          <target state="translated">オーバーロード #10</target>
        </trans-unit>
        <trans-unit id="5092d306bd8547dad81e4e6bb075aa8c7301ec7a" translate="yes" xml:space="preserve">
          <source>Overload #11</source>
          <target state="translated">オーバーロード #11</target>
        </trans-unit>
        <trans-unit id="708ab9510c7e38c88f006b391797e1d466773093" translate="yes" xml:space="preserve">
          <source>Overload #12</source>
          <target state="translated">オーバーロード #12</target>
        </trans-unit>
        <trans-unit id="29c87afbd834728ebd526e5d252d5e3ef7aad9af" translate="yes" xml:space="preserve">
          <source>Overload #13</source>
          <target state="translated">オーバーロード #13</target>
        </trans-unit>
        <trans-unit id="c4f23330e96a7c9954b7624fd51cb9e702277387" translate="yes" xml:space="preserve">
          <source>Overload #14</source>
          <target state="translated">オーバーロード #14</target>
        </trans-unit>
        <trans-unit id="5875cb2297c8b6a099963c7348d618e9d77bed46" translate="yes" xml:space="preserve">
          <source>Overload #15</source>
          <target state="translated">オーバーロード #15</target>
        </trans-unit>
        <trans-unit id="7571f668025673eebc39fc687f625bd5f2b6872e" translate="yes" xml:space="preserve">
          <source>Overload #16</source>
          <target state="translated">オーバーロード #16</target>
        </trans-unit>
        <trans-unit id="d656b1e8a7b592004dc4fce8abbcb8d292732108" translate="yes" xml:space="preserve">
          <source>Overload #17</source>
          <target state="translated">オーバーロード #17</target>
        </trans-unit>
        <trans-unit id="b9e7b378fae999a47e0e9fc977aed102fcf991d7" translate="yes" xml:space="preserve">
          <source>Overload #2</source>
          <target state="translated">オーバーロード #2</target>
        </trans-unit>
        <trans-unit id="4503cfa5e2771e6382a0e066463069671128efb1" translate="yes" xml:space="preserve">
          <source>Overload #3</source>
          <target state="translated">オーバーロード #3</target>
        </trans-unit>
        <trans-unit id="91e294e149f13e0c4620355553caeb9afb0d6534" translate="yes" xml:space="preserve">
          <source>Overload #4</source>
          <target state="translated">オーバーロード #4</target>
        </trans-unit>
        <trans-unit id="4e01b3b424f3a462a7589dc84c2863d0ef63e27e" translate="yes" xml:space="preserve">
          <source>Overload #5</source>
          <target state="translated">オーバーロード #5</target>
        </trans-unit>
        <trans-unit id="7e86a19e6f128d7c6324adfb89f38179bd257846" translate="yes" xml:space="preserve">
          <source>Overload #6</source>
          <target state="translated">オーバーロード #6</target>
        </trans-unit>
        <trans-unit id="f2ecfac37d94de7fcca719eb867422193b7dfabe" translate="yes" xml:space="preserve">
          <source>Overload #7</source>
          <target state="translated">オーバーロード #7</target>
        </trans-unit>
        <trans-unit id="1d21149070575307aa140758d30f3023fe51b855" translate="yes" xml:space="preserve">
          <source>Overload #8</source>
          <target state="translated">オーバーロード #8</target>
        </trans-unit>
        <trans-unit id="8d9cffbc651127c0793f004f812707630de70ca3" translate="yes" xml:space="preserve">
          <source>Overload #9</source>
          <target state="translated">オーバーロード #9</target>
        </trans-unit>
        <trans-unit id="631bc5aa25f06fafc9a23994bb1eabdf6877fe11" translate="yes" xml:space="preserve">
          <source>Override component providers</source>
          <target state="translated">コンポーネントプロバイダをオーバーライドする</target>
        </trans-unit>
        <trans-unit id="cc6d9f903f785852001169fdcf9d21c0dc2dcfda" translate="yes" xml:space="preserve">
          <source>Override specs in the protractor config.</source>
          <target state="translated">分度器の設定で仕様を上書きします。</target>
        </trans-unit>
        <trans-unit id="82569e1af4411a3ca5a500d77442e4d926659dfc" translate="yes" xml:space="preserve">
          <source>Override suite in the protractor config.</source>
          <target state="translated">分度器の設定でスイートをオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="95dd7f1f63e72a369de142c6a9ccb5f7656a8603" translate="yes" xml:space="preserve">
          <source>Override which browsers tests are run against.</source>
          <target state="translated">どのブラウザに対してテストを実行するかをオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="3945eec03a2fbff43b9a0124637fa3ddd8817e70" translate="yes" xml:space="preserve">
          <source>Overrides the default encapsulation start and end delimiters (&lt;code&gt;{{&lt;/code&gt; and &lt;code&gt;}}&lt;/code&gt;)</source>
          <target state="translated">デフォルトのカプセル化開始および終了区切り文字（ &lt;code&gt;{{&lt;/code&gt; および &lt;code&gt;}}&lt;/code&gt; ）を上書きします</target>
        </trans-unit>
        <trans-unit id="a3e6276d4238b83d8b34b8690b18af3da84bd359" translate="yes" xml:space="preserve">
          <source>Overrides the template of the given component, compiling the template in the context of the TestingModule.</source>
          <target state="translated">与えられたコンポーネントのテンプレートをオーバーライドし、TestsingModuleのコンテキストでテンプレートをコンパイルします。</target>
        </trans-unit>
        <trans-unit id="3851edd380abbaab34e148361e486f13f53d606d" translate="yes" xml:space="preserve">
          <source>Overriding disablement of inner animations</source>
          <target state="translated">内部アニメーションの無効化を上書きする</target>
        </trans-unit>
        <trans-unit id="7f56c915b749465438fc24153a743680f744796e" translate="yes" xml:space="preserve">
          <source>Overriding the base class's &lt;code&gt;afterGetHeroes()&lt;/code&gt; method solves the problem.</source>
          <target state="translated">基本クラスの &lt;code&gt;afterGetHeroes()&lt;/code&gt; メソッドをオーバーライドすると、問題が解決します。</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">Overview</target>
        </trans-unit>
        <trans-unit id="2746a08dacca4229b0af233daabfa9fd97dc5ee8" translate="yes" xml:space="preserve">
          <source>Overview of Angular Libraries</source>
          <target state="translated">Angularライブラリの概要</target>
        </trans-unit>
        <trans-unit id="20d2efcbe4ecea78ea9bd00eddd272f2905610cb" translate="yes" xml:space="preserve">
          <source>Overview of Angular libraries</source>
          <target state="translated">Angularライブラリの概要</target>
        </trans-unit>
        <trans-unit id="3256a7d3f1780d92f9544bcccf88c57a842d3516" translate="yes" xml:space="preserve">
          <source>Overview of reactive forms</source>
          <target state="translated">反応型フォームの概要</target>
        </trans-unit>
        <trans-unit id="5f713cfc7c1ee9427723dcef181e1959c5325428" translate="yes" xml:space="preserve">
          <source>Overview of template type checking</source>
          <target state="translated">テンプレート型チェックの概要</target>
        </trans-unit>
        <trans-unit id="a1077753c31ecdcb7f35db71ad27322b7cf6eadb" translate="yes" xml:space="preserve">
          <source>Overwrites all providers for the given token with the given provider definition.</source>
          <target state="translated">指定されたプロバイダ定義で、指定されたトークンのすべてのプロバイダを上書きします。</target>
        </trans-unit>
        <trans-unit id="3292eb3a99ca7abf1d1290994cdfe7c7707593aa" translate="yes" xml:space="preserve">
          <source>PACKAGE_ROOT_URL</source>
          <target state="translated">PACKAGE_ROOT_URL</target>
        </trans-unit>
        <trans-unit id="d3029193fe6a512053aa03be9cefd3922b2e590a" translate="yes" xml:space="preserve">
          <source>PATCH Example</source>
          <target state="translated">PATCHの例</target>
        </trans-unit>
        <trans-unit id="55dc4ff75c8aba5ba9283f3021f8a6cf480a42ff" translate="yes" xml:space="preserve">
          <source>PLATFORM_ID</source>
          <target state="translated">PLATFORM_ID</target>
        </trans-unit>
        <trans-unit id="eebc664eb359e840c8da6c5793091d6785b6a05c" translate="yes" xml:space="preserve">
          <source>PLATFORM_INITIALIZER</source>
          <target state="translated">PLATFORM_INITIALIZER</target>
        </trans-unit>
        <trans-unit id="397a769801b979d889ebd77a4332cd956babc6c8" translate="yes" xml:space="preserve">
          <source>PRIMARY_OUTLET</source>
          <target state="translated">PRIMARY_OUTLET</target>
        </trans-unit>
        <trans-unit id="270be4f67efbcd132dfcd88a1e60b5ca9c489764" translate="yes" xml:space="preserve">
          <source>PROPERTY</source>
          <target state="translated">PROPERTY</target>
        </trans-unit>
        <trans-unit id="64ae0efa4ecf6712c9bb96d5b026f94653c2db16" translate="yes" xml:space="preserve">
          <source>PURPOSE</source>
          <target state="translated">PURPOSE</target>
        </trans-unit>
        <trans-unit id="7431e3df243c5be33cffa0b28ca2a76b93f0538c" translate="yes" xml:space="preserve">
          <source>Package</source>
          <target state="translated">Package</target>
        </trans-unit>
        <trans-unit id="d6406a88383eedf30b977d2bb0232aff0842dafc" translate="yes" xml:space="preserve">
          <source>Package name</source>
          <target state="translated">パッケージ名</target>
        </trans-unit>
        <trans-unit id="45ab97346b3ce00e0f00b6991ed88c0b88a73912" translate="yes" xml:space="preserve">
          <source>Packages to support the &lt;a href=&quot;https://jasmine.github.io/&quot;&gt;Jasmine&lt;/a&gt; test library.</source>
          <target state="translated">&lt;a href=&quot;https://jasmine.github.io/&quot;&gt;Jasmine&lt;/a&gt;テストライブラリをサポートするパッケージ。</target>
        </trans-unit>
        <trans-unit id="2957f306bb6cf56d4d975d8b62e2053e57cf4b92" translate="yes" xml:space="preserve">
          <source>Packages to support the &lt;a href=&quot;https://www.npmjs.com/package/karma&quot;&gt;karma&lt;/a&gt; test runner.</source>
          <target state="translated">&lt;a href=&quot;https://www.npmjs.com/package/karma&quot;&gt;カルマ&lt;/a&gt;テストランナーをサポートするパッケージ。</target>
        </trans-unit>
        <trans-unit id="c3bf6af63f1304d786eda4276c19d026531db799" translate="yes" xml:space="preserve">
          <source>Packaging functionality as a library forces the artifacts in the library to be decoupled from the application's business logic. This can help to avoid various bad practices or architecture mistakes that can make it difficult to decouple and reuse code in the future.</source>
          <target state="translated">機能をライブラリとしてパッケージ化することで、ライブラリ内のアーティファクトをアプリケーションのビジネスロジックから切り離すことができます。これは、将来的にコードを分離して再利用することを困難にする様々な悪い習慣やアーキテクチャ上のミスを回避するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="19a78c06faafad0c2d397e4dec6632383ee88e00" translate="yes" xml:space="preserve">
          <source>Page URLs mirror the &lt;code&gt;content&lt;/code&gt; file structure. The URL for the page of a guide is in the form &lt;code&gt;guide/{page-name}&lt;/code&gt;. The page for &lt;em&gt;this&lt;/em&gt; &quot;Authors Style Guide&quot; is located at &lt;code&gt;content/guide/docs-style-guide.md&lt;/code&gt; and its URL is &lt;code&gt;guide/docs-style-guide&lt;/code&gt;.</source>
          <target state="translated">ページのURLは &lt;code&gt;content&lt;/code&gt; ファイルの構造を反映しています。ガイドのページのURLは、 &lt;code&gt;guide/{page-name}&lt;/code&gt; の形式です。&lt;em&gt;この&lt;/em&gt;「Authors Style Guide」のページは &lt;code&gt;content/guide/docs-style-guide.md&lt;/code&gt; にあり、そのURLは &lt;code&gt;guide/docs-style-guide&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="66f986b3cfa975a766863176b860bdf5fd800365" translate="yes" xml:space="preserve">
          <source>Parallel animation using group() function</source>
          <target state="translated">group()関数を使った並列アニメーション</target>
        </trans-unit>
        <trans-unit id="65ff6d96cab9fb6bd409ea5ef8e9b9343f89cc06" translate="yes" xml:space="preserve">
          <source>ParamMap</source>
          <target state="translated">ParamMap</target>
        </trans-unit>
        <trans-unit id="d402babc9a4a78fce14eb88c847eb02e3d8f7c21" translate="yes" xml:space="preserve">
          <source>Parameter decorator for a directive constructor that designates a host-element attribute whose value is injected as a constant string literal.</source>
          <target state="translated">定数文字列リテラルとして注入されるホスト要素属性を指定するディレクティブの コンストラクタのパラメータデコレータ。</target>
        </trans-unit>
        <trans-unit id="831563a593704f674d85a360973bb4a6e18835d6" translate="yes" xml:space="preserve">
          <source>Parameter decorator on a dependency parameter of a class constructor that specifies a custom provider of the dependency.</source>
          <target state="translated">依存関係のカスタム・プロバイダを指定するクラス・コンストラクタの依存関係パラメータ上のパラメータ・デコレータ。</target>
        </trans-unit>
        <trans-unit id="bc4b1b77d0964b6c5e91f132ad5df2d2d9ad36ed" translate="yes" xml:space="preserve">
          <source>Parameter decorator on a view-provider parameter of a class constructor that tells the DI framework to resolve the view by checking injectors of child elements, and stop when reaching the host element of the current component.</source>
          <target state="translated">子要素のインジェクタをチェックしてビューを解決し、現在のコンポーネントのホスト要素に到達したら停止するようにDIフレームワークに指示するクラス・コンストラクタのビュー・プロバイダ・パラメータ上のパラメータ・デコレータです。</target>
        </trans-unit>
        <trans-unit id="5b25852d9fb793500a6dc605fb628540f9433473" translate="yes" xml:space="preserve">
          <source>Parameter decorator that configures a content query.</source>
          <target state="translated">コンテンツクエリを設定するパラメータデコレータ。</target>
        </trans-unit>
        <trans-unit id="053dd21e29405d85267d6cc081cfcf47598f70a8" translate="yes" xml:space="preserve">
          <source>Parameter decorator that configures a view query.</source>
          <target state="translated">ビュークエリを設定するパラメータデコレータ。</target>
        </trans-unit>
        <trans-unit id="85e20474c1527f9306bff0cfaccf100267656cf2" translate="yes" xml:space="preserve">
          <source>Parameter decorator to be used on constructor parameters, which marks the parameter as being an optional dependency. The DI framework provides null if the dependency is not found.</source>
          <target state="translated">コンストラクタのパラメータで使用されるパラメータデコレータで、パラメータはオプションの依存関係であることを示します。DI フレームワークは、依存関係が見つからない場合に null を提供します。</target>
        </trans-unit>
        <trans-unit id="c2ddd04bc605e651c5613b54a00087d189942d04" translate="yes" xml:space="preserve">
          <source>Parameter decorator to be used on constructor parameters, which tells the DI framework to start dependency resolution from the local injector.</source>
          <target state="translated">コンストラクタのパラメータで使用されるパラメータデコレータで、DI フレームワークにローカルのインジェクタから依存関係の解決を開始するように指示します。</target>
        </trans-unit>
        <trans-unit id="157fde4baebaef726eb1b06b5a661dc750ad4abd" translate="yes" xml:space="preserve">
          <source>Parameter decorator to be used on constructor parameters, which tells the DI framework to start dependency resolution from the parent injector. Resolution works upward through the injector hierarchy, so the local injector is not checked for a provider.</source>
          <target state="translated">コンストラクタのパラメータで使用されるパラメータデコレータで、親インジェクタから依存関係の解決を開始するように DI フレームワークに指示します。解決はインジェクタ階層を介して上向きに動作するので、ローカルのインジェクタがプロバイダをチェックすることはありません。</target>
        </trans-unit>
        <trans-unit id="3934332701ff1e27ece937a553b42f8f0ad8f656" translate="yes" xml:space="preserve">
          <source>Parameterizing a pipe</source>
          <target state="translated">パイプのパラメータ化</target>
        </trans-unit>
        <trans-unit id="a975eea30db9fa05003e3b5097688bd49ec7e01b" translate="yes" xml:space="preserve">
          <source>Parameters</source>
          <target state="translated">Parameters</target>
        </trans-unit>
        <trans-unit id="6ff1901d0a038d4eb5ed3f50bfd077678c801964" translate="yes" xml:space="preserve">
          <source>Parameters that can be passed to the state when it is invoked. 0 or more key-value pairs.</source>
          <target state="translated">呼び出されたときに状態に渡すことができるパラメータ。0個以上のキーと値のペア。</target>
        </trans-unit>
        <trans-unit id="dc124689c7040d627a2c6490eec999443990ba30" translate="yes" xml:space="preserve">
          <source>Params</source>
          <target state="translated">Params</target>
        </trans-unit>
        <trans-unit id="c1993903d38c874b1312f7b6813a8ce87bc0bb8a" translate="yes" xml:space="preserve">
          <source>Parent and children communicate via a service</source>
          <target state="translated">親子でサービスを介してコミュニケーションをとる</target>
        </trans-unit>
        <trans-unit id="4471f19ebf37cc8c31fe0b43635ff1a0ee9f70f7" translate="yes" xml:space="preserve">
          <source>Parent calls an &lt;code&gt;@ViewChild()&lt;/code&gt;</source>
          <target state="translated">親が &lt;code&gt;@ViewChild()&lt;/code&gt; を呼び出す</target>
        </trans-unit>
        <trans-unit id="4d96bf3b564400b974a226b8c74842c6a32a7c8b" translate="yes" xml:space="preserve">
          <source>Parent class interface</source>
          <target state="translated">親クラスインタフェース</target>
        </trans-unit>
        <trans-unit id="1677cf3ff9ab86295b42c775efb55b880b8ef316" translate="yes" xml:space="preserve">
          <source>Parent directives listen for the event by binding to this property and accessing the data through the &lt;code&gt;$event&lt;/code&gt; object.</source>
          <target state="translated">親ディレクティブは、このプロパティにバインドし、 &lt;code&gt;$event&lt;/code&gt; オブジェクトを介してデータにアクセスすることにより、イベントをリッスンします。</target>
        </trans-unit>
        <trans-unit id="836b9b7477bb5f75f34ca246e807cef5547ba120" translate="yes" xml:space="preserve">
          <source>Parent interacts with child via &lt;code&gt;local variable&lt;/code&gt;</source>
          <target state="translated">親は &lt;code&gt;local variable&lt;/code&gt; 介して子と対話します</target>
        </trans-unit>
        <trans-unit id="3cef6a03c19c22a5eec3970bccbcc20fd40e1f72" translate="yes" xml:space="preserve">
          <source>Parent listens for child event</source>
          <target state="translated">子供のイベントを親が聞く</target>
        </trans-unit>
        <trans-unit id="e17a3012940a44fa306224280da31476b2092626" translate="yes" xml:space="preserve">
          <source>Parent of this injector.</source>
          <target state="translated">このインジェクタの親です。</target>
        </trans-unit>
        <trans-unit id="f414d1ba1615873fb1a234e831c16c4292615b4f" translate="yes" xml:space="preserve">
          <source>Parent-child animations</source>
          <target state="translated">親子アニメーション</target>
        </trans-unit>
        <trans-unit id="f9627107a88876f4aaf6d7e0b0c19984c3a631ae" translate="yes" xml:space="preserve">
          <source>Parentheses</source>
          <target state="translated">Parentheses</target>
        </trans-unit>
        <trans-unit id="67149a9c481a8457cbf816d6fea3adcb470b442e" translate="yes" xml:space="preserve">
          <source>Parentheses surround the secondary route.</source>
          <target state="translated">括弧で囲んだのが二次ルートです。</target>
        </trans-unit>
        <trans-unit id="7828527ba71c0f809df73eeb15889ee37f247d0e" translate="yes" xml:space="preserve">
          <source>Parse a url into a &lt;code&gt;&lt;a href=&quot;urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">URLを &lt;code&gt;&lt;a href=&quot;urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; に解析します</target>
        </trans-unit>
        <trans-unit id="a151757f9ee40aa876b0dbcc84e4a2aa94447743" translate="yes" xml:space="preserve">
          <source>Parse it out.</source>
          <target state="translated">解析してみてください。</target>
        </trans-unit>
        <trans-unit id="21b772698ca345c10d56cee00a81a1873d6be651" translate="yes" xml:space="preserve">
          <source>Parses a string into a &lt;code&gt;&lt;a href=&quot;urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">文字列を &lt;code&gt;&lt;a href=&quot;urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; に解析します</target>
        </trans-unit>
        <trans-unit id="9575281e0031a8b0350c2eeda96853602dd5d106" translate="yes" xml:space="preserve">
          <source>Parses a url into a &lt;code&gt;&lt;a href=&quot;urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">URLを &lt;code&gt;&lt;a href=&quot;urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; に解析します</target>
        </trans-unit>
        <trans-unit id="3f69f39a9aa00c24352272d42d08bac986bea81a" translate="yes" xml:space="preserve">
          <source>Parses the URL string based on the base URL</source>
          <target state="translated">ベースとなる URL に基づいて URL 文字列を解析します。</target>
        </trans-unit>
        <trans-unit id="8e18f1e2be4cc0236c8b76f29e1cd45d2b15350b" translate="yes" xml:space="preserve">
          <source>Parses the provided URL and its relative URL.</source>
          <target state="translated">指定された URL とその相対 URL を解析します。</target>
        </trans-unit>
        <trans-unit id="2f4f13dd90b74e75be72e0b0a7d45ab267e86ade" translate="yes" xml:space="preserve">
          <source>Parses the provided URL, and sets the current URL to the parsed result.</source>
          <target state="translated">指定された URL を解析し、現在の URL を解析結果に設定します。</target>
        </trans-unit>
        <trans-unit id="746181cbabd0c36524106f51d0af82d41570a46e" translate="yes" xml:space="preserve">
          <source>Partial file naming</source>
          <target state="translated">部分的なファイル命名</target>
        </trans-unit>
        <trans-unit id="9e9f00d71de9e4d80ccd990b60112c8313eff691" translate="yes" xml:space="preserve">
          <source>Partial model updates</source>
          <target state="translated">モデルの一部更新</target>
        </trans-unit>
        <trans-unit id="f0cd834d38b36d38705bc70770c4cea0080eb4e4" translate="yes" xml:space="preserve">
          <source>Partner and third party libraries also support the Angular CLI with add schematics. For example, &lt;code&gt;@ng-bootstrap/schematics&lt;/code&gt; adds &lt;a href=&quot;https://ng-bootstrap.github.io/&quot;&gt;ng-bootstrap&lt;/a&gt; to an app, and &lt;code&gt;@clr/angular&lt;/code&gt; installs and sets up &lt;a href=&quot;https://vmware.github.io/clarity/documentation/v1.0/get-started&quot;&gt;Clarity from VMWare&lt;/a&gt;.</source>
          <target state="translated">パートナーおよびサードパーティのライブラリも、回路図を追加したAngular CLIをサポートしています。たとえば、 &lt;code&gt;@ng-bootstrap/schematics&lt;/code&gt; はアプリに&lt;a href=&quot;https://ng-bootstrap.github.io/&quot;&gt;ng-bootstrap&lt;/a&gt;を追加し、 &lt;code&gt;@clr/angular&lt;/code&gt; は&lt;a href=&quot;https://vmware.github.io/clarity/documentation/v1.0/get-started&quot;&gt;VMWareからClarityを&lt;/a&gt;インストールして設定します。</target>
        </trans-unit>
        <trans-unit id="3650cc18c9eac296b13d1cef29399885fc68316d" translate="yes" xml:space="preserve">
          <source>Pass data from parent to child with input binding</source>
          <target state="translated">入力バインディングで親から子へデータを渡す</target>
        </trans-unit>
        <trans-unit id="df2e98f78fbb7324e2bec4b099d5f2f17892f388" translate="yes" xml:space="preserve">
          <source>Pass information along in route parameters and subscribe to them in the component.</source>
          <target state="translated">ルートパラメータに情報を渡し、コンポーネントにサブスクライブします。</target>
        </trans-unit>
        <trans-unit id="d12af56aea5de147e335dd23556be737d4cc0a30" translate="yes" xml:space="preserve">
          <source>Pass information to a component using a parameter.</source>
          <target state="translated">パラメータを使用してコンポーネントに情報を渡します。</target>
        </trans-unit>
        <trans-unit id="fe77eeb6f42e114596e23ea10653268f27e5369a" translate="yes" xml:space="preserve">
          <source>Pass required and optional information in route parameters.</source>
          <target state="translated">ルートパラメータに必要な情報とオプションの情報を渡します。</target>
        </trans-unit>
        <trans-unit id="eaad3660dba745abb2af17f84c5e548a0b8fa5cb" translate="yes" xml:space="preserve">
          <source>Pass the current product as input to the component using property binding.</source>
          <target state="translated">プロパティ バインディングを使用して、現在の製品をコンポーネントの入力として渡します。</target>
        </trans-unit>
        <trans-unit id="07f766c03ee41526736042244dadd75506ed0e75" translate="yes" xml:space="preserve">
          <source>Pass this schematic to the &quot;run&quot; command to create a service worker</source>
          <target state="translated">この回路図を &quot;run&quot; コマンドに渡して、サービスワーカーを作成します。</target>
        </trans-unit>
        <trans-unit id="4467a947dcb3a498f2fc37f1fabd02c54aa219ba" translate="yes" xml:space="preserve">
          <source>Pass this schematic to the &quot;run&quot; command to set up server-side rendering for an app.</source>
          <target state="translated">この回路図を &quot;run&quot; コマンドに渡して、アプリのサーバーサイドレンダリングを設定します。</target>
        </trans-unit>
        <trans-unit id="2b751fc327a7dcfe9593f5a21354e60d3d30f7ec" translate="yes" xml:space="preserve">
          <source>Pass values into the directive with an &lt;code&gt;@Input&lt;/code&gt; data binding</source>
          <target state="translated">&lt;code&gt;@Input&lt;/code&gt; データバインディングを使用してディレクティブに値を渡す</target>
        </trans-unit>
        <trans-unit id="80f0f4ae03bf26d03b0d62ce7c16fbb4e96b478b" translate="yes" xml:space="preserve">
          <source>Passed to &lt;a href=&quot;router#createUrlTree&quot;&gt;Router#createUrlTree&lt;/a&gt; as part of the &lt;code&gt;&lt;a href=&quot;urlcreationoptions&quot;&gt;UrlCreationOptions&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">渡された&lt;a href=&quot;router#createUrlTree&quot;&gt;ルータ＃createUrlTree&lt;/a&gt;の一環として &lt;code&gt;&lt;a href=&quot;urlcreationoptions&quot;&gt;UrlCreationOptions&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f2e1faf8ed7275cb9217702647fcba0cae380a10" translate="yes" xml:space="preserve">
          <source>Passed to &lt;a href=&quot;router#navigateByUrl&quot;&gt;Router#navigateByUrl&lt;/a&gt; as part of the &lt;code&gt;&lt;a href=&quot;navigationbehavioroptions&quot;&gt;NavigationBehaviorOptions&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;navigationbehavioroptions&quot;&gt;NavigationBehaviorOptions&lt;/a&gt;&lt;/code&gt; の一部として&lt;a href=&quot;router#navigateByUrl&quot;&gt;Router＃navigateByUrlに&lt;/a&gt;渡されます。</target>
        </trans-unit>
        <trans-unit id="368ddeb092dc46040eca0b1a6cfa21412c4b8367" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;$event&lt;/code&gt; is a dubious practice</source>
          <target state="translated">&lt;code&gt;$event&lt;/code&gt; 渡すことは疑わしい習慣です</target>
        </trans-unit>
        <trans-unit id="62ef1a584ee91b9705f1be01a036cc0c411dcab9" translate="yes" xml:space="preserve">
          <source>Passing a new search term directly to the &lt;code&gt;searchHeroes()&lt;/code&gt; after every user keystroke would create an excessive amount of HTTP requests, taxing server resources and burning through data plans.</source>
          <target state="translated">ユーザーのキーストロークごとに新しい検索用語を直接 &lt;code&gt;searchHeroes()&lt;/code&gt; に渡すと、過剰な量のHTTPリクエストが作成され、サーバーのリソースに負担がかかり、データプランが使い果たされます。</target>
        </trans-unit>
        <trans-unit id="e2bbd329b24cf69e01673970ea66bf2ff35c9952" translate="yes" xml:space="preserve">
          <source>Passing an array of components to &lt;code&gt;AdBannerComponent&lt;/code&gt; allows for a dynamic list of ads without static elements in the template.</source>
          <target state="translated">コンポーネントの配列を &lt;code&gt;AdBannerComponent&lt;/code&gt; に渡すと、テンプレートに静的な要素がない広告の動的なリストが可能になります。</target>
        </trans-unit>
        <trans-unit id="37334c1f2693af162c9dad9866cd5e2b0ef74011" translate="yes" xml:space="preserve">
          <source>Passing in a string</source>
          <target state="translated">文字列を渡す</target>
        </trans-unit>
        <trans-unit id="bc42a93af5a6fbbd2ecca30823e18bc2dbb8ae90" translate="yes" xml:space="preserve">
          <source>Passing in an object</source>
          <target state="translated">オブジェクトを渡す</target>
        </trans-unit>
        <trans-unit id="cd918db66f50b4dc080e0a2d57b4fb744f9d1d0b" translate="yes" xml:space="preserve">
          <source>Passing information along in route parameters and subscribe to them in the component.</source>
          <target state="translated">ルートパラメータで情報を渡し、コンポーネント内でそれらをサブスクライブします。</target>
        </trans-unit>
        <trans-unit id="d8b5df37983878e2ad41dc56c5b3c026dfe3f4ce" translate="yes" xml:space="preserve">
          <source>Passing required and optional information in route parameters.</source>
          <target state="translated">ルートパラメータで必要な情報とオプションの情報を渡します。</target>
        </trans-unit>
        <trans-unit id="d57697ce49558233801e0eaf427f127fb2dc0f89" translate="yes" xml:space="preserve">
          <source>Paste the following code into your guard.</source>
          <target state="translated">ガードに以下のコードを貼り付けます。</target>
        </trans-unit>
        <trans-unit id="b7d6a4aaf033efc2986f8101aa454963315188d2" translate="yes" xml:space="preserve">
          <source>Patch the value for a form group</source>
          <target state="translated">フォームグループの値をパッチする</target>
        </trans-unit>
        <trans-unit id="e1ebe08030715ff940b0006753144b1569e485c7" translate="yes" xml:space="preserve">
          <source>Patch the values for controls in a form array</source>
          <target state="translated">フォーム配列内のコントロールの値をパッチする</target>
        </trans-unit>
        <trans-unit id="22baf0cbd4ac01a3a661f6b4a84fa5f4139cf6e2" translate="yes" xml:space="preserve">
          <source>Patches the value of a control.</source>
          <target state="translated">コントロールの値をパッチします。</target>
        </trans-unit>
        <trans-unit id="6572cb7b9b9f6c29e37ee8eb322fed0d80cde71b" translate="yes" xml:space="preserve">
          <source>Patches the value of the &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt;. It accepts an array that matches the structure of the control, and does its best to match the values to the correct controls in the group.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; の値にパッチを適用します。コントロールの構造と一致する配列を受け入れ、グループ内の正しいコントロールに値を一致させるために最善を尽くします。</target>
        </trans-unit>
        <trans-unit id="a944295e5bcdd2a5628b77126984be5da56bb988" translate="yes" xml:space="preserve">
          <source>Patches the value of the &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt;. It accepts an object with control names as keys, and does its best to match the values to the correct controls in the group.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; の値にパッチを適用します。キーとしてコントロール名を持つオブジェクトを受け入れ、グループ内の正しいコントロールに値を一致させるために最善を尽くします。</target>
        </trans-unit>
        <trans-unit id="93876a08e24d20da2d2cb67a1189d78e885ee57d" translate="yes" xml:space="preserve">
          <source>Patches the value of the control. Abstract method (implemented in sub-classes).</source>
          <target state="translated">コントロールの値にパッチを当てます。抽象メソッド(サブクラスで実装)。</target>
        </trans-unit>
        <trans-unit id="cc5d607fa4a4609de63f99f862138c6e03b4ebd4" translate="yes" xml:space="preserve">
          <source>Patching the model value</source>
          <target state="translated">モデルの値をパッチする</target>
        </trans-unit>
        <trans-unit id="3ed43a3a0f94a6fcdbd58ae09a894cc13b04e3f4" translate="yes" xml:space="preserve">
          <source>Path to ngsw-config.json.</source>
          <target state="translated">ngsw-config.jsonへのパス。</target>
        </trans-unit>
        <trans-unit id="25c4cfd28cef041116c7b7bc8ca15e425574289e" translate="yes" xml:space="preserve">
          <source>Path where output will be placed.</source>
          <target state="translated">出力が配置されるパス。</target>
        </trans-unit>
        <trans-unit id="3e73f0447cc860168aee757b0d6aef190f943545" translate="yes" xml:space="preserve">
          <source>PathLocationStrategy</source>
          <target state="translated">PathLocationStrategy</target>
        </trans-unit>
        <trans-unit id="a6403199acd619a42efcc7f425ecb2021ce7030b" translate="yes" xml:space="preserve">
          <source>Paths should always begin with forward slash (/). This method adds the forward slash if it is missing.</source>
          <target state="translated">パスは常に前方スラッシュ (/)で始まるべきです。このメソッドは、スラッシュがない場合に前方のスラッシュを追加します。</target>
        </trans-unit>
        <trans-unit id="52c496f327be18fd65119f787b70659883ab1e8c" translate="yes" xml:space="preserve">
          <source>Pattern matching with the global or sticky flag</source>
          <target state="translated">グローバルフラグまたはスティッキーフラグでのパターンマッチング</target>
        </trans-unit>
        <trans-unit id="0f5281baa789f97c9906c0a66900d4d98d83c86c" translate="yes" xml:space="preserve">
          <source>PatternValidator</source>
          <target state="translated">PatternValidator</target>
        </trans-unit>
        <trans-unit id="c4f9246ecd5466bdbf698a993ebf846997223d97" translate="yes" xml:space="preserve">
          <source>Pauses the animation.</source>
          <target state="translated">アニメーションを一時停止します。</target>
        </trans-unit>
        <trans-unit id="324f2140ef6b85ef93f8bf84e950a2247c40e8ce" translate="yes" xml:space="preserve">
          <source>Pay attention to two key points:</source>
          <target state="translated">2つのポイントに注意してください。</target>
        </trans-unit>
        <trans-unit id="1786801551be2cc10398242d02ea9d7be87b95ca" translate="yes" xml:space="preserve">
          <source>Payload size debugging</source>
          <target state="translated">ペイロードサイズのデバッグ</target>
        </trans-unit>
        <trans-unit id="6408f1628187dc531274b7c13aa99eaeb03fa803" translate="yes" xml:space="preserve">
          <source>Peek-a-boo</source>
          <target state="translated">Peek-a-boo</target>
        </trans-unit>
        <trans-unit id="13f06dc9c51750db799af134ce604fc3cf1692f2" translate="yes" xml:space="preserve">
          <source>Peek-a-boo: all hooks</source>
          <target state="translated">ピーカブー:すべてのフック</target>
        </trans-unit>
        <trans-unit id="f943c63d4bfbd73cac05e58aae5f5ff04d7953c2" translate="yes" xml:space="preserve">
          <source>Per user tracking</source>
          <target state="translated">ユーザーごとのトラッキング</target>
        </trans-unit>
        <trans-unit id="99cc4a62a98bf7d2d79141044c8c69fe6edc8108" translate="yes" xml:space="preserve">
          <source>PercentPipe</source>
          <target state="translated">PercentPipe</target>
        </trans-unit>
        <trans-unit id="88cb2244486eb9636a4247dc700316395faa8a97" translate="yes" xml:space="preserve">
          <source>Percentage: &lt;code&gt;'100%'&lt;/code&gt;</source>
          <target state="translated">割合： &lt;code&gt;'100%'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0535a7ecad192b6b512e9d676fda57d50cf93916" translate="yes" xml:space="preserve">
          <source>Perform a basic update to the current stable release of the core framework and CLI by running the following command.</source>
          <target state="translated">以下のコマンドを実行して、コアフレームワークとCLIの現在の安定版リリースへの基本的なアップデートを実行します。</target>
        </trans-unit>
        <trans-unit id="b956ef3b09067fc5ee4393f7ba4fa1a6974e6fe5" translate="yes" xml:space="preserve">
          <source>Perform complex initializations outside of the constructor. Components should be cheap and safe to construct. You should not, for example, fetch data in a component constructor. You shouldn't worry that a new component will try to contact a remote server when created under test or before you decide to display it.</source>
          <target state="translated">コンストラクタの外で複雑な初期化を行う。コンポーネントは安価で安全に構築できるものでなければなりません。例えば、コンポーネントのコンストラクタでデータをフェッチしてはいけません。新しいコンポーネントがテスト中に作成されたときや、表示を決定する前にリモートサーバに連絡しようとすることを心配すべきではありません。</target>
        </trans-unit>
        <trans-unit id="7b2260710aee7a5a916a9a3a4ee71922a6ec05aa" translate="yes" xml:space="preserve">
          <source>Perform the &lt;em&gt;clone-to-launch&lt;/em&gt; steps with these terminal commands.</source>
          <target state="translated">これらの端末コマンドを使用し&lt;em&gt;て&lt;/em&gt;、&lt;em&gt;クローンから起動までの&lt;/em&gt;手順を実行します。</target>
        </trans-unit>
        <trans-unit id="7b1a76c1f8658975e4cacb3ec1edbbdfdbbd3a11" translate="yes" xml:space="preserve">
          <source>Performs HTTP requests. This service is available as an injectable class, with methods to perform HTTP requests. Each request method has multiple signatures, and the return type varies based on the signature that is called (mainly the values of &lt;code&gt;observe&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;http/httprequest#responseType&quot;&gt;responseType&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">HTTPリクエストを実行します。このサービスは、HTTPリクエストを実行するためのメソッドを備えた、注入可能なクラスとして利用できます。各要求メソッドには複数のシグニチャーがあり、戻りタイプは、呼び出されるシグニチャー（主に、 &lt;code&gt;observe&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;http/httprequest#responseType&quot;&gt;responseType&lt;/a&gt;&lt;/code&gt; の値）に基づいて異なります。</target>
        </trans-unit>
        <trans-unit id="8cf74d87b6b851d3e13b233d78cf31bba72f4aa5" translate="yes" xml:space="preserve">
          <source>Performs HTTP requests. This service is available as an injectable class, with methods to perform HTTP requests. Each request method has multiple signatures, and the return type varies based on the signature that is called (mainly the values of &lt;code&gt;observe&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;httprequest#responseType&quot;&gt;responseType&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">HTTPリクエストを実行します。このサービスは、HTTPリクエストを実行するためのメソッドを備えた、注入可能なクラスとして利用できます。各要求メソッドには複数のシグニチャーがあり、戻りタイプは、呼び出されるシグニチャー（主に、 &lt;code&gt;observe&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;httprequest#responseType&quot;&gt;responseType&lt;/a&gt;&lt;/code&gt; の値）に基づいて異なります。</target>
        </trans-unit>
        <trans-unit id="cc15604d3483547a1a248b63f2be34708baf5649" translate="yes" xml:space="preserve">
          <source>Performs HTTP requests. This service is available as an injectable class, with methods to perform HTTP requests. Each request method has multiple signatures, and the return type varies based on the signature that is called (mainly the values of &lt;code&gt;observe&lt;/code&gt; and &lt;code&gt;responseType&lt;/code&gt;).</source>
          <target state="translated">HTTPリクエストを実行します。このサービスは、HTTPリクエストを実行するメソッドを備えた注入可能なクラスとして利用できます。各リクエストメソッドには複数のシグニチャがあり、戻り値の型は呼び出されるシグニチャ（主に &lt;code&gt;observe&lt;/code&gt; と &lt;code&gt;responseType&lt;/code&gt; の値）によって異なります。</target>
        </trans-unit>
        <trans-unit id="5e0e579f20aa9017b5a5bf405d088b06d077d8f7" translate="yes" xml:space="preserve">
          <source>Performs a filter match for matches.</source>
          <target state="translated">マッチのフィルタマッチを実行します。</target>
        </trans-unit>
        <trans-unit id="fbd3a6414f86c350ce21057bcf85969bb71fd694" translate="yes" xml:space="preserve">
          <source>Performs case matching. For internal use only.</source>
          <target state="translated">大文字小文字の照合を行います。内部使用のみ。</target>
        </trans-unit>
        <trans-unit id="f0fa815ee0f8e7502cd323f53be4dda642caf766" translate="yes" xml:space="preserve">
          <source>Perhaps the user is not authorized to navigate to the target component.</source>
          <target state="translated">おそらく、ユーザーがターゲット・コンポーネントへのナビゲートを許可されていないのでしょう。</target>
        </trans-unit>
        <trans-unit id="e625cc94f99a276ea88e61fb38b01e628e4b07df" translate="yes" xml:space="preserve">
          <source>Perhaps you declared &quot;x&quot; in an application sub-module but forgot to export it. The &quot;x&quot; class isn't visible to other modules until you add it to the &lt;code&gt;exports&lt;/code&gt; list.</source>
          <target state="translated">おそらく、アプリケーションサブモジュールで &quot;x&quot;を宣言しましたが、それをエクスポートするのを忘れました。「x」クラスは、 &lt;code&gt;exports&lt;/code&gt; リストに追加するまで、他のモジュールからは見えません。</target>
        </trans-unit>
        <trans-unit id="170a28a9db6d27d7212fc6dc249434a57517e7bc" translate="yes" xml:space="preserve">
          <source>Period</source>
          <target state="translated">Period</target>
        </trans-unit>
        <trans-unit id="e4d27eecd313d8ce6f2608a84068369790772864" translate="yes" xml:space="preserve">
          <source>Period standalone*</source>
          <target state="translated">期間単体</target>
        </trans-unit>
        <trans-unit id="c8753a38d0545756f3a8227f0ed2c2c7057a2d66" translate="yes" xml:space="preserve">
          <source>Period*</source>
          <target state="translated">Period*</target>
        </trans-unit>
        <trans-unit id="ccba310cee50783e1688d63df45ac1024b3e01aa" translate="yes" xml:space="preserve">
          <source>Permitting direct access to the DOM can make your application more vulnerable to XSS attacks. Carefully review any use of &lt;code&gt;&lt;a href=&quot;elementref&quot;&gt;ElementRef&lt;/a&gt;&lt;/code&gt; in your code. For more detail, see the &lt;a href=&quot;http://g.co/ng/security&quot;&gt;Security Guide&lt;/a&gt;.</source>
          <target state="translated">DOMへの直接アクセスを許可すると、アプリケーションがXSS攻撃に対して脆弱になります。コードで &lt;code&gt;&lt;a href=&quot;elementref&quot;&gt;ElementRef&lt;/a&gt;&lt;/code&gt; の使用を注意深く確認します。詳細については、 『&lt;a href=&quot;http://g.co/ng/security&quot;&gt;セキュリティガイド』を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="57ebb57a4f9074cb590c1b05b3cb709fdf0c51f5" translate="yes" xml:space="preserve">
          <source>Phase 1 is &lt;em&gt;code analysis&lt;/em&gt;. In this phase, the TypeScript compiler and &lt;em&gt;AOT collector&lt;/em&gt; create a representation of the source. The collector does not attempt to interpret the metadata it collects. It represents the metadata as best it can and records errors when it detects a metadata syntax violation.</source>
          <target state="translated">フェーズ1は&lt;em&gt;コード分​​析&lt;/em&gt;です。このフェーズでは、TypeScriptコンパイラーと&lt;em&gt;AOTコレクター&lt;/em&gt;がソースの表現を作成します。コレクターは、収集したメタデータを解釈しようとしません。メタデータを可能な限り表現し、メタデータ構文違反を検出するとエラーを記録します。</target>
        </trans-unit>
        <trans-unit id="ea959a9545e7ce4a4e4dc0c349397d6d0488c3af" translate="yes" xml:space="preserve">
          <source>Phase 1: Code analysis</source>
          <target state="translated">第1段階:コード解析</target>
        </trans-unit>
        <trans-unit id="84c11744869d4f423f9ea1e9f82a1dc1b2a0f234" translate="yes" xml:space="preserve">
          <source>Phase 2 is &lt;em&gt;code generation&lt;/em&gt;. In this phase, the compiler's &lt;code&gt;StaticReflector&lt;/code&gt; interprets the metadata collected in phase 1, performs additional validation of the metadata, and throws an error if it detects a metadata restriction violation.</source>
          <target state="translated">フェーズ2は&lt;em&gt;コード生成&lt;/em&gt;です。このフェーズでは、コンパイラの &lt;code&gt;StaticReflector&lt;/code&gt; がフェーズ1で収集されたメタデータを解釈し、メタデータの追加検証を実行し、メタデータ制限違反を検出した場合はエラーをスローします。</target>
        </trans-unit>
        <trans-unit id="85d4cb139676a6815bfd11962f2a145d28733afc" translate="yes" xml:space="preserve">
          <source>Phase 2: code generation</source>
          <target state="translated">第2段階:コード生成</target>
        </trans-unit>
        <trans-unit id="1a6ada06034d6ecf65dcdf9ce5f10b8bbd0c42a6" translate="yes" xml:space="preserve">
          <source>Phase 3 is &lt;em&gt;template type checking&lt;/em&gt;. In this optional phase, the Angular &lt;em&gt;template compiler&lt;/em&gt; uses the TypeScript compiler to validate the binding expressions in templates. You can enable this phase explicitly by setting the &lt;code&gt;fullTemplateTypeCheck&lt;/code&gt; configuration option; see &lt;a href=&quot;angular-compiler-options&quot;&gt;Angular compiler options&lt;/a&gt;.</source>
          <target state="translated">フェーズ3は&lt;em&gt;テンプレートタイプのチェック&lt;/em&gt;です。このオプションのフェーズでは、Angular &lt;em&gt;テンプレートコンパイラ&lt;/em&gt;はTypeScriptコンパイラを使用して、テンプレート内のバインディング式を検証します。 &lt;code&gt;fullTemplateTypeCheck&lt;/code&gt; 構成オプションを設定することにより、このフェーズを明示的に有効にすることができます。&lt;a href=&quot;angular-compiler-options&quot;&gt;Angularコンパイラオプションを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="8b248fc2361f1f33d985ac6fd0375650ea1e867b" translate="yes" xml:space="preserve">
          <source>Phase 3: Template type checking</source>
          <target state="translated">フェーズ3:テンプレート型チェック</target>
        </trans-unit>
        <trans-unit id="77513301fca071ef50e34222162e1bee88638252" translate="yes" xml:space="preserve">
          <source>PhoneCat Upgrade Tutorial</source>
          <target state="translated">PhoneCatアップグレードチュートリアル</target>
        </trans-unit>
        <trans-unit id="c84767b3406e6820bf28975a2c31e54821aec724" translate="yes" xml:space="preserve">
          <source>Pick the &quot;sources&quot; section.</source>
          <target state="translated">ソース」の部分を選びます。</target>
        </trans-unit>
        <trans-unit id="00dae071c082bb73eaed17b4bb3429280e110e8c" translate="yes" xml:space="preserve">
          <source>Pipe</source>
          <target state="translated">Pipe</target>
        </trans-unit>
        <trans-unit id="6c5f8c2c367f43a764f4bfe55c90cef2f87478aa" translate="yes" xml:space="preserve">
          <source>Pipe Testing</source>
          <target state="translated">パイプテスト</target>
        </trans-unit>
        <trans-unit id="3ccc4c0ef19d1ba8e6315dd591ed6f08d8e2cebf" translate="yes" xml:space="preserve">
          <source>Pipe names</source>
          <target state="translated">パイプ名</target>
        </trans-unit>
        <trans-unit id="db0a638607a7eb69c3e26db0a30b2b8322c77ea8" translate="yes" xml:space="preserve">
          <source>PipeTransform</source>
          <target state="translated">PipeTransform</target>
        </trans-unit>
        <trans-unit id="785af2a4ad3c4ee912623c6e0b6d4299ea305bf6" translate="yes" xml:space="preserve">
          <source>Pipes</source>
          <target state="translated">Pipes</target>
        </trans-unit>
        <trans-unit id="cb2a8758a90a6a1ad70e15ab2f35125d3e28bbb8" translate="yes" xml:space="preserve">
          <source>Pipes and change detection</source>
          <target state="translated">パイプと変化検出</target>
        </trans-unit>
        <trans-unit id="70cbce5e043d7e4ec78bddca83822e6747dfe443" translate="yes" xml:space="preserve">
          <source>Pipes are a great way to encapsulate and share common display-value transformations. Use them like styles, dropping them into your template's expressions to enrich the appeal and usability of your views.</source>
          <target state="translated">パイプは、共通の表示値変換をカプセル化して共有するのに最適な方法です。スタイルのように使用し、テンプレートの表現にドロップすることで、ビューの魅力と使いやすさを向上させることができます。</target>
        </trans-unit>
        <trans-unit id="9a1e8453a9c510b7cd81f9ac0bf7d273b2689f33" translate="yes" xml:space="preserve">
          <source>Pipes are easy to test without the Angular testing utilities.</source>
          <target state="translated">パイプはAngularのテストユーティリティがなくても簡単にテストできます。</target>
        </trans-unit>
        <trans-unit id="e2597b4963ef049463e405c7d6e73c90c9e1c5e0" translate="yes" xml:space="preserve">
          <source>Pipes are simple functions that accept an input value and return a transformed value. They're easy to apply within template expressions, using the pipe operator (&lt;code&gt;|&lt;/code&gt;):</source>
          <target state="translated">パイプは、入力値を受け入れ、変換された値を返す単純な関数です。パイプ演算子（ &lt;code&gt;|&lt;/code&gt; ）を使用して、テンプレート式内で簡単に適用できます。</target>
        </trans-unit>
        <trans-unit id="05da230b695c1f1aa7caf1f8db2a8f9aad1a40f9" translate="yes" xml:space="preserve">
          <source>Pipes have the correct return type.</source>
          <target state="translated">パイプには正しい戻り値のタイプがあります。</target>
        </trans-unit>
        <trans-unit id="03700b0b5a3875f2890e5cc29d64836f946d234e" translate="yes" xml:space="preserve">
          <source>Pipes using Intl API</source>
          <target state="translated">Intl APIを使用したパイプ</target>
        </trans-unit>
        <trans-unit id="5d35fb2984acf418b500f8848a540a960cf182c8" translate="yes" xml:space="preserve">
          <source>Place the providers into the &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; method.</source>
          <target state="translated">プロバイダーを &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; メソッドに配置します。</target>
        </trans-unit>
        <trans-unit id="94e97573f3f36cc85a509cba82a8882db73eb5b2" translate="yes" xml:space="preserve">
          <source>Place the providers into the &lt;code&gt;forRoot()&lt;/code&gt; method.</source>
          <target state="translated">プロバイダーを &lt;code&gt;forRoot()&lt;/code&gt; メソッドに配置します。</target>
        </trans-unit>
        <trans-unit id="ac32ecbb008bd8e6a2ac9a9819654cbd68d1c6b0" translate="yes" xml:space="preserve">
          <source>Place your spec file next to the file it tests</source>
          <target state="translated">テストするファイルの隣にスペックファイルを置きます。</target>
        </trans-unit>
        <trans-unit id="af086a1752f7b13e9f3118daeb980172fbe47e92" translate="yes" xml:space="preserve">
          <source>Place your spec files in a test folder</source>
          <target state="translated">specファイルをテストフォルダに配置します。</target>
        </trans-unit>
        <trans-unit id="f1dbc6a6def246b8e7db2c645d69cb1c276181b2" translate="yes" xml:space="preserve">
          <source>Plain InjectionToken</source>
          <target state="translated">プレーンインジェクショントークン</target>
        </trans-unit>
        <trans-unit id="1ecd2749d5ebdc23a466e45d8cd30c925b0c7d2a" translate="yes" xml:space="preserve">
          <source>Platform for testing</source>
          <target state="translated">テストのためのプラットフォーム</target>
        </trans-unit>
        <trans-unit id="152cf3d0db209f7bfd4079d8a34ddf474b9c46f5" translate="yes" xml:space="preserve">
          <source>Platform injector</source>
          <target state="translated">プラットフォームインジェクタ</target>
        </trans-unit>
        <trans-unit id="bea7d8d71c17bf523a37e15e5174526dd62f1bee" translate="yes" xml:space="preserve">
          <source>PlatformConfig</source>
          <target state="translated">PlatformConfig</target>
        </trans-unit>
        <trans-unit id="97be63e4c422f1cc7f9c7446a9e450eba2bd657c" translate="yes" xml:space="preserve">
          <source>PlatformLocation</source>
          <target state="translated">PlatformLocation</target>
        </trans-unit>
        <trans-unit id="a6f2b49d2e89ca8c89d96a762ff57c52051eaa40" translate="yes" xml:space="preserve">
          <source>PlatformRef</source>
          <target state="translated">PlatformRef</target>
        </trans-unit>
        <trans-unit id="b01e2980d8515172a9d3aa79b81950b4a90ed0e2" translate="yes" xml:space="preserve">
          <source>PlatformState</source>
          <target state="translated">PlatformState</target>
        </trans-unit>
        <trans-unit id="74639aadcc28aae30a85e69871c18d9bc9c1915f" translate="yes" xml:space="preserve">
          <source>Please note that directives &lt;em&gt;do not&lt;/em&gt; support namespaces.</source>
          <target state="translated">ディレクティブ&lt;em&gt;は&lt;/em&gt;名前空間をサポート&lt;em&gt;しない&lt;/em&gt;ことに注意してください。</target>
        </trans-unit>
        <trans-unit id="61c195be0e6714febc8893a644ab80b038caa49a" translate="yes" xml:space="preserve">
          <source>Please refer to the &lt;a href=&quot;testing-components-scenarios#waitForAsync&quot;&gt;waitForAsync&lt;/a&gt; section for more details.</source>
          <target state="translated">詳細については、&lt;a href=&quot;testing-components-scenarios#waitForAsync&quot;&gt;waitForAsync&lt;/a&gt;セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="4ef8776654a5598bd9bf8265ea86a4a13f90f500" translate="yes" xml:space="preserve">
          <source>Plural</source>
          <target state="translated">Plural</target>
        </trans-unit>
        <trans-unit id="c822c5e43dd02bebbfa621e9e82432f691815c11" translate="yes" xml:space="preserve">
          <source>Plurality cases used for translating plurals to different languages.</source>
          <target state="translated">複数形を異なる言語に翻訳する際に使用される複数形のケース。</target>
        </trans-unit>
        <trans-unit id="deece46c22e64f44a14fe2209222289025573b98" translate="yes" xml:space="preserve">
          <source>Pluralization</source>
          <target state="translated">Pluralization</target>
        </trans-unit>
        <trans-unit id="691fb17d9ec645abcccef304dd3d450d16a59184" translate="yes" xml:space="preserve">
          <source>Pluralization categories include (depending on the language):</source>
          <target state="translated">複数化カテゴリには、(言語によっては)が含まれています。</target>
        </trans-unit>
        <trans-unit id="9261553f8e998b6ca0acfcb68f69cb942b6b73bc" translate="yes" xml:space="preserve">
          <source>Point the browser to the project root when loading things through SystemJS, instead of using the &lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt; URL.</source>
          <target state="translated">&lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt; の URL を使用するのではなく、SystemJSを介してロードするときに、ブラウザーにプロジェクトのルートを指定します。</target>
        </trans-unit>
        <trans-unit id="77a19dda9326382b91d909e73d98605ee2883479" translate="yes" xml:space="preserve">
          <source>Poke at its API.</source>
          <target state="translated">そのAPIを突く。</target>
        </trans-unit>
        <trans-unit id="861260cecd797e42301015d1972945d6ccce6883" translate="yes" xml:space="preserve">
          <source>Polyfill</source>
          <target state="translated">Polyfill</target>
        </trans-unit>
        <trans-unit id="686b77cb484e01d6f0a696a15e0937d89d1ac793" translate="yes" xml:space="preserve">
          <source>Polyfill packages</source>
          <target state="translated">ポリフィルパッケージ</target>
        </trans-unit>
        <trans-unit id="c65de7239130b2221dc156af1c9b5fa8125b9bf3" translate="yes" xml:space="preserve">
          <source>Polyfills</source>
          <target state="translated">Polyfills</target>
        </trans-unit>
        <trans-unit id="7e22065c36bcda31ffb06eb771fe814a5d369aa6" translate="yes" xml:space="preserve">
          <source>Polyfills Required</source>
          <target state="translated">ポリフィルが必要</target>
        </trans-unit>
        <trans-unit id="52c3a3711b3b9e6b7b93a7d53aeecbb508abe8a7" translate="yes" xml:space="preserve">
          <source>Polyfills for non-CLI users</source>
          <target state="translated">非CLIユーザーのためのポリフィル</target>
        </trans-unit>
        <trans-unit id="04f319abcfdc41549454a65108740afd882caa7d" translate="yes" xml:space="preserve">
          <source>PopStateEvent</source>
          <target state="translated">PopStateEvent</target>
        </trans-unit>
        <trans-unit id="3aa86d1665bcb4e3dbe2857f063a76b3c7ca070e" translate="yes" xml:space="preserve">
          <source>Populate the model with sample data.</source>
          <target state="translated">モデルにサンプルデータを入力します。</target>
        </trans-unit>
        <trans-unit id="db23d762d8b57c6ab54bf69340014948dacf2947" translate="yes" xml:space="preserve">
          <source>Port to listen on.</source>
          <target state="translated">聞くためのポート。</target>
        </trans-unit>
        <trans-unit id="33f8228b4f271aef80dab1a0ae9f8cd988cceaa1" translate="yes" xml:space="preserve">
          <source>Portuguese Brazil</source>
          <target state="translated">英語 ブラジル</target>
        </trans-unit>
        <trans-unit id="7280aa9b126e519bb5acdcab7417841a30bb930a" translate="yes" xml:space="preserve">
          <source>Possible values are:</source>
          <target state="translated">可能な値は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="b2ef221e3193ecc713338eb88d02a0cab9694e2a" translate="yes" xml:space="preserve">
          <source>Possible values:</source>
          <target state="translated">可能な値</target>
        </trans-unit>
        <trans-unit id="9310c30efd49230a522a5476fb106e532c4ad304" translate="yes" xml:space="preserve">
          <source>Power Boost Calculator</source>
          <target state="translated">パワーブースト計算機</target>
        </trans-unit>
        <trans-unit id="55eed3cc7013197cfb7c5f1ea92b2dffefeffbe8" translate="yes" xml:space="preserve">
          <source>Practical observable usage</source>
          <target state="translated">実用的な観察可能な使い方</target>
        </trans-unit>
        <trans-unit id="e0ec019e6613fb1af300ed7695a138dc18ac2d81" translate="yes" xml:space="preserve">
          <source>Pre-defined format options</source>
          <target state="translated">事前に定義されたフォーマットオプション</target>
        </trans-unit>
        <trans-unit id="a51f30cc3e4fcf0ee07c35bd2dec0b89b0f47eaa" translate="yes" xml:space="preserve">
          <source>Precaching with Angular Service Worker</source>
          <target state="translated">Angular Service Workerを使ったプリキャッシング</target>
        </trans-unit>
        <trans-unit id="60517df9a72adb7b98fdcba382b4e39193f1749a" translate="yes" xml:space="preserve">
          <source>Predefined shipping data</source>
          <target state="translated">定義済みの出荷データ</target>
        </trans-unit>
        <trans-unit id="f18648d5cf93cb7cc4f85cc03b3fd481807b3442" translate="yes" xml:space="preserve">
          <source>Predefined states and wildcard matching</source>
          <target state="translated">定義済みの状態とワイルドカードのマッチング</target>
        </trans-unit>
        <trans-unit id="0808b401a93f815fe9ce2e731fcd95f9ed6c3b2a" translate="yes" xml:space="preserve">
          <source>Predefined tokens and multiple providers</source>
          <target state="translated">定義済みトークンと複数のプロバイダ</target>
        </trans-unit>
        <trans-unit id="9eee28bfd739e1debf4d3b892d013537ae16da9f" translate="yes" xml:space="preserve">
          <source>Predicate</source>
          <target state="translated">Predicate</target>
        </trans-unit>
        <trans-unit id="a48d36ce88487edcdf3dd5e1a22e2e472b581b19" translate="yes" xml:space="preserve">
          <source>Predicates for use with &lt;a href=&quot;../core/debugelement&quot;&gt;&lt;code&gt;DebugElement&lt;/code&gt;&lt;/a&gt;'s query functions.</source>
          <target state="translated">&lt;a href=&quot;../core/debugelement&quot;&gt; &lt;code&gt;DebugElement&lt;/code&gt; &lt;/a&gt;のクエリ関数で使用する述語。</target>
        </trans-unit>
        <trans-unit id="51b9770eb11beb11e06dbb58f1ae277a38245e61" translate="yes" xml:space="preserve">
          <source>Predicates for use with &lt;a href=&quot;core/debugelement&quot;&gt;&lt;code&gt;DebugElement&lt;/code&gt;&lt;/a&gt;'s query functions.</source>
          <target state="translated">&lt;a href=&quot;core/debugelement&quot;&gt; &lt;code&gt;DebugElement&lt;/code&gt; &lt;/a&gt;のクエリ関数で使用する述語。</target>
        </trans-unit>
        <trans-unit id="0f5f6af855c155d6a39527f646350ea131a41ef5" translate="yes" xml:space="preserve">
          <source>Predictability</source>
          <target state="translated">Predictability</target>
        </trans-unit>
        <trans-unit id="6e3db619f4a80838687fe01789222032b8d6100a" translate="yes" xml:space="preserve">
          <source>Prefer spies as they are usually the easiest way to mock services.</source>
          <target state="translated">彼らは通常、サービスを模倣するための最も簡単な方法であるため、スパイを好む。</target>
        </trans-unit>
        <trans-unit id="6733962201f798f0db7d044124ca4a429500f7ca" translate="yes" xml:space="preserve">
          <source>Prefer the asterisk (*) syntax.</source>
          <target state="translated">アスタリスク (*)構文を推奨します。</target>
        </trans-unit>
        <trans-unit id="42bcf74484be0c909148ef3e9fcd55cd2fd3d70d" translate="yes" xml:space="preserve">
          <source>Prefix to add when computing the name of the factory module for a given module name.</source>
          <target state="translated">指定したモジュール名の工場モジュール名を計算する際に追加する接頭辞。</target>
        </trans-unit>
        <trans-unit id="067fba24288444a687cd633599a47db827992c93" translate="yes" xml:space="preserve">
          <source>PreloadAllModules</source>
          <target state="translated">PreloadAllModules</target>
        </trans-unit>
        <trans-unit id="f2684504bc0f6384c84c477f8be4a0311c5832d7" translate="yes" xml:space="preserve">
          <source>Preloading</source>
          <target state="translated">Preloading</target>
        </trans-unit>
        <trans-unit id="8c8aba0ee60d123f0f0b6ecde44af67411faa80c" translate="yes" xml:space="preserve">
          <source>Preloading allows you to load modules in the background so that the data is ready to render when the user activates a particular route. Consider the Crisis Center. It isn't the first view that a user sees. By default, the Heroes are the first view. For the smallest initial payload and fastest launch time, you should eagerly load the &lt;code&gt;AppModule&lt;/code&gt; and the &lt;code&gt;HeroesModule&lt;/code&gt;.</source>
          <target state="translated">プリロードを使用すると、モジュールをバックグラウンドでロードして、ユーザーが特定のルートをアクティブ化したときにデータをレンダリングできるようにすることができます。危機センターについて考えてみましょう。これは、ユーザーに表示される最初のビューではありません。デフォルトでは、ヒーローが最初のビューです。最小の初期ペイロードと最速の起動時間について、あなたは熱心にロードする必要があります &lt;code&gt;AppModule&lt;/code&gt; と &lt;code&gt;HeroesModule&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="5ee13b2c8c4758ce7e602ac92d4525f8aba7ff04" translate="yes" xml:space="preserve">
          <source>Preloading component data</source>
          <target state="translated">コンポーネントデータのプリロード</target>
        </trans-unit>
        <trans-unit id="eb4b3c20414ed205b451b8f4464e34572d297856" translate="yes" xml:space="preserve">
          <source>Preloading every lazy loaded module works well in many situations. However, in consideration of things such as low bandwidth and user metrics, you can use a custom preloading strategy for specific feature modules.</source>
          <target state="translated">遅延してロードされたモジュールをすべてプリロードすることは、多くの状況でうまく機能します。しかし、低帯域幅やユーザメトリクスなどを考慮して、特定の機能モジュールに対してカスタムのプリロード戦略を使用することができます。</target>
        </trans-unit>
        <trans-unit id="70b0d75388db068d0fbf3c78a8238d3453737e41" translate="yes" xml:space="preserve">
          <source>Preloading every lazy loaded modules works well in many situations, but it isn't always the right choice, especially on mobile devices and over low bandwidth connections. You may choose to preload only certain feature modules, based on user metrics and other business and technical factors.</source>
          <target state="translated">遅延してロードされたモジュールをすべてプリロードすることは、多くの状況でうまく機能しますが、特にモバイルデバイスや低帯域幅の接続では、必ずしも正しい選択とは限りません。ユーザーメトリクスやその他のビジネスや技術的な要因に基づいて、特定の機能モジュールのみをプリロードすることを選択することができます。</target>
        </trans-unit>
        <trans-unit id="74df0558a508e714ab6638d22f5d320f4ebdf793" translate="yes" xml:space="preserve">
          <source>Preloading improves UX by loading parts of your app in the background. You can preload modules or component data.</source>
          <target state="translated">プリロードは、アプリの一部をバックグラウンドでロードすることで、UXを向上させます。モジュールやコンポーネントデータをプリロードすることができます。</target>
        </trans-unit>
        <trans-unit id="4533db03614721876daa5e374250ca2b584aee1a" translate="yes" xml:space="preserve">
          <source>Preloading modules</source>
          <target state="translated">モジュールのプリロード</target>
        </trans-unit>
        <trans-unit id="a93184beec70037cea0a10d2f7e16a1c6d7a3d51" translate="yes" xml:space="preserve">
          <source>Preloading modules improves UX by loading parts of your app in the background so users don't have to wait for the elements to download when they activate a route.</source>
          <target state="translated">プリロードモジュールは、アプリの一部をバックグラウンドで読み込むことでUXを向上させ、ユーザーがルートをアクティブにしたときに要素のダウンロードを待つ必要がないようにします。</target>
        </trans-unit>
        <trans-unit id="2387fc03ded4c31718c0ef578b18d0483e829707" translate="yes" xml:space="preserve">
          <source>Preloading of all lazy loaded feature areas.</source>
          <target state="translated">すべての遅延ロードされたフィーチャ領域のプリロード。</target>
        </trans-unit>
        <trans-unit id="cd65d9f77e29b00400e7a44f95cb0d92219a686a" translate="yes" xml:space="preserve">
          <source>Preloading: background loading of feature areas</source>
          <target state="translated">プリロード:フィーチャーエリアのバックグラウンドロード</target>
        </trans-unit>
        <trans-unit id="d168fd8834b30e1d7b8838cae58a5296aa2e1bdc" translate="yes" xml:space="preserve">
          <source>PreloadingStrategy</source>
          <target state="translated">PreloadingStrategy</target>
        </trans-unit>
        <trans-unit id="a8bc382020aaaa716a496826f97b0c9d436c31a9" translate="yes" xml:space="preserve">
          <source>Preparation</source>
          <target state="translated">Preparation</target>
        </trans-unit>
        <trans-unit id="bbe865d4a79eb2974955efe0166f9b07b63a5f12" translate="yes" xml:space="preserve">
          <source>Prepare templates for translations</source>
          <target state="translated">翻訳用のテンプレートを用意する</target>
        </trans-unit>
        <trans-unit id="e04cc35909b27a6ac7cade1e37466d6a00dd9496" translate="yes" xml:space="preserve">
          <source>Preparing text in component templates for translation.</source>
          <target state="translated">翻訳のためのコンポーネントテンプレートのテキストを準備します。</target>
        </trans-unit>
        <trans-unit id="70dddd2437fc8dd1f3739d4f926746d2bba80f8c" translate="yes" xml:space="preserve">
          <source>Prerequisite: Configure External Web tools</source>
          <target state="translated">前提条件 外部Webツールの設定</target>
        </trans-unit>
        <trans-unit id="249d4f1b938b2ffe89ffd88c1806ec40c41ea35b" translate="yes" xml:space="preserve">
          <source>Prerequisite: Install TypeScript for Visual Studio 2015</source>
          <target state="translated">前提条件。Visual Studio 2015用のTypeScriptをインストールする</target>
        </trans-unit>
        <trans-unit id="2a5d7871d8f55fc42e58f9720f864a7546fca7dd" translate="yes" xml:space="preserve">
          <source>Prerequisite: Node.js</source>
          <target state="translated">前提条件:Node.js</target>
        </trans-unit>
        <trans-unit id="18356b763e9cc10776248e27eee06a9d47a8e25c" translate="yes" xml:space="preserve">
          <source>Prerequisite: Visual Studio 2015 Update 3</source>
          <target state="translated">前提条件:Visual Studio 2015 Update 3</target>
        </trans-unit>
        <trans-unit id="eed036e414a34a0c245858652e6d88f14c3faefb" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="translated">Prerequisites</target>
        </trans-unit>
        <trans-unit id="bc8ec7b72c76ebe8affb839c5ec1acdd75c9c484" translate="yes" xml:space="preserve">
          <source>Preserving navigation history</source>
          <target state="translated">航海史の保存</target>
        </trans-unit>
        <trans-unit id="a664240f3a496c80cf7c7945e11febbe499af8fa" translate="yes" xml:space="preserve">
          <source>Preserving whitespace</source>
          <target state="translated">ホワイトスペースの保存</target>
        </trans-unit>
        <trans-unit id="49aabd1ffb70da3ce1ce41784926f360b6672f92" translate="yes" xml:space="preserve">
          <source>Prevent reimport of the &lt;code&gt;GreetingModule&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;GreetingModule&lt;/code&gt; の再インポートを防止する</target>
        </trans-unit>
        <trans-unit id="5e96ff8a7a9a6e2ece9594270b5512699fedc119" translate="yes" xml:space="preserve">
          <source>Preventing cross-site scripting (XSS)</source>
          <target state="translated">クロスサイトスクリプティング(XSS)の防止</target>
        </trans-unit>
        <trans-unit id="10a44579940dd5204c7501df0249d4ec6510af35" translate="yes" xml:space="preserve">
          <source>Preventing unauthorized access</source>
          <target state="translated">不正アクセスの防止</target>
        </trans-unit>
        <trans-unit id="1de8376e3ea51bf0a509280a292b540b5c6feb3d" translate="yes" xml:space="preserve">
          <source>Preview releases</source>
          <target state="translated">プレビューリリース</target>
        </trans-unit>
        <trans-unit id="0b1ba4ab538c84c12fdc06c5d80c072fbde98280" translate="yes" xml:space="preserve">
          <source>Previous code</source>
          <target state="translated">前のコード</target>
        </trans-unit>
        <trans-unit id="686686ccc1b3cc405bda1243ad4a225064fcc6c7" translate="yes" xml:space="preserve">
          <source>Previous index of the item in &lt;code&gt;Iterable&lt;/code&gt; or null if added.</source>
          <target state="translated">&lt;code&gt;Iterable&lt;/code&gt; でのアイテムの以前のインデックス、または追加された場合はnull。</target>
        </trans-unit>
        <trans-unit id="5fe29fa6e4ca4b83b765a11d9edd97051ad3fde0" translate="yes" xml:space="preserve">
          <source>Previous value for the key or &lt;code&gt;null&lt;/code&gt; if added.</source>
          <target state="translated">キーの以前の値、または追加された場合は &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ed1f3717287fa4e74e99c45f86b158101fcb8a73" translate="yes" xml:space="preserve">
          <source>Previously, the &lt;code&gt;entryComponents&lt;/code&gt; array in the &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; definition was used to tell the compiler which components would be created and inserted dynamically. With Ivy, this isn't a requirement anymore and the &lt;code&gt;entryComponents&lt;/code&gt; array can be removed from existing module declarations. The same applies to the &lt;code&gt;&lt;a href=&quot;../api/core/analyze_for_entry_components&quot;&gt;ANALYZE_FOR_ENTRY_COMPONENTS&lt;/a&gt;&lt;/code&gt; injection token.</source>
          <target state="translated">以前は、 &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 定義の &lt;code&gt;entryComponents&lt;/code&gt; 配列を使用して、動的に作成および挿入されるコンポーネントをコンパイラーに通知していました。 Ivyでは、これはもはや要件ではなく、 &lt;code&gt;entryComponents&lt;/code&gt; 配列を既存のモジュール宣言から削除できます。同じことが &lt;code&gt;&lt;a href=&quot;../api/core/analyze_for_entry_components&quot;&gt;ANALYZE_FOR_ENTRY_COMPONENTS&lt;/a&gt;&lt;/code&gt; インジェクショントークンにも当てはまります。</target>
        </trans-unit>
        <trans-unit id="38b507f09fc4bea4e4450552af2d404c4ddfcd2d" translate="yes" xml:space="preserve">
          <source>Previously, the parent &lt;code&gt;HeroesComponent&lt;/code&gt; set the &lt;code&gt;HeroDetailComponent.hero&lt;/code&gt; property and the &lt;code&gt;HeroDetailComponent&lt;/code&gt; displayed the hero.</source>
          <target state="translated">以前は、親 &lt;code&gt;HeroesComponent&lt;/code&gt; は設定 &lt;code&gt;HeroDetailComponent.hero&lt;/code&gt; のプロパティをと &lt;code&gt;HeroDetailComponent&lt;/code&gt; は英雄を表示します。</target>
        </trans-unit>
        <trans-unit id="54927c3b29c57a1de1bad9235800797c8db4802d" translate="yes" xml:space="preserve">
          <source>Previously, when navigating from the &lt;code&gt;HeroListComponent&lt;/code&gt; to the &lt;code&gt;HeroDetailComponent&lt;/code&gt;, you subscribed to the route parameter map &lt;code&gt;Observable&lt;/code&gt; and made it available to the &lt;code&gt;HeroDetailComponent&lt;/code&gt; in the &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; service. You injected that service in the constructor of the &lt;code&gt;HeroDetailComponent&lt;/code&gt;.</source>
          <target state="translated">移動するとき以前は、 &lt;code&gt;HeroListComponent&lt;/code&gt; に &lt;code&gt;HeroDetailComponent&lt;/code&gt; 、あなたはルートパラメータマップに加入 &lt;code&gt;Observable&lt;/code&gt; とすることが利用できるように &lt;code&gt;HeroDetailComponent&lt;/code&gt; で &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; のサービス。そのサービスを &lt;code&gt;HeroDetailComponent&lt;/code&gt; のコンストラクターに注入しました。</target>
        </trans-unit>
        <trans-unit id="705295bd37f84d6f4e7bb50594c331369aa909a2" translate="yes" xml:space="preserve">
          <source>Previously, when you wanted to add a component to an app at runtime, you had to define a &lt;em&gt;dynamic component&lt;/em&gt;. The app module would have to list your dynamic component under &lt;code&gt;entryComponents&lt;/code&gt;, so that the app wouldn't expect it to be present at startup, and then you would have to load it, attach it to an element in the DOM, and wire up all of the dependencies, change detection, and event handling, as described in &lt;a href=&quot;dynamic-component-loader&quot;&gt;Dynamic Component Loader&lt;/a&gt;.</source>
          <target state="translated">以前は、実行時にアプリにコンポーネントを追加する場合、&lt;em&gt;動的コンポーネント&lt;/em&gt;を定義する必要がありました。アプリモジュールは、動的コンポーネントを &lt;code&gt;entryComponents&lt;/code&gt; の下にリストする必要があります。これにより、アプリは起動時にコンポーネントが存在することを期待せず、それをロードしてDOMの要素にアタッチし、すべてを配線する必要があります。&lt;a href=&quot;dynamic-component-loader&quot;&gt;Dynamic Component Loaderで&lt;/a&gt;説明されているように、依存関係、変更検出、およびイベント処理。</target>
        </trans-unit>
        <trans-unit id="a9a96ec019494d5b8b041c1d2468061ae66e35d5" translate="yes" xml:space="preserve">
          <source>Primary</source>
          <target state="translated">Primary</target>
        </trans-unit>
        <trans-unit id="7e1d2a68a12c861b36ffdc8817f6e71bb1c656a4" translate="yes" xml:space="preserve">
          <source>Primary entry point exports</source>
          <target state="translated">一次エントリーポイントの輸出</target>
        </trans-unit>
        <trans-unit id="63424cddc8268426b09cae09b791cdebb47ef4bf" translate="yes" xml:space="preserve">
          <source>Primary: &lt;a href=&quot;https://developers.google.com/style/&quot;&gt;Google Developer Documentation Style Guide&lt;/a&gt;This guide: Specifies any special considerations for Angular docs.</source>
          <target state="translated">プライマリ：&lt;a href=&quot;https://developers.google.com/style/&quot;&gt;Google Developerドキュメントスタイルガイド&lt;/a&gt;このガイド：Angularドキュメントに関する特別な考慮事項を示します。</target>
        </trans-unit>
        <trans-unit id="b26fe41a6ef090622403b199fdf17129d3f82806" translate="yes" xml:space="preserve">
          <source>Primary: &lt;a href=&quot;styleguide&quot;&gt;Angular Style Guide&lt;/a&gt;.This guide: How to create, store, and include code examples in guides and tutorials.</source>
          <target state="translated">プライマリ：&lt;a href=&quot;styleguide&quot;&gt;Angular Style Guide&lt;/a&gt;。このガイド：コード例を作成、保存、およびガイドとチュートリアルに含める方法。</target>
        </trans-unit>
        <trans-unit id="336665dc97315ab21d91e9eb3f466f9f1f2acb75" translate="yes" xml:space="preserve">
          <source>Primary: This guideThis guide: Specifies guidelines for markup of guides and tutorials, which are written primarily in Markdown.</source>
          <target state="translated">一次:このガイドこのガイドは、主にMarkdownで書かれたガイドとチュートリアルのマークアップのガイドラインを規定しています。主にMarkdownで書かれたガイドやチュートリアルのマークアップのガイドラインを指定します。</target>
        </trans-unit>
        <trans-unit id="237dfa0a21c8e17a7276cf161eef7e0fba067c47" translate="yes" xml:space="preserve">
          <source>Private</source>
          <target state="translated">Private</target>
        </trans-unit>
        <trans-unit id="ccdb05e9287a5643b0f46a8a795873398b701006" translate="yes" xml:space="preserve">
          <source>Private components, directives, and pipes that you need only within components declared in this NgModule. If you don't want another NgModule to see it, don't export it.</source>
          <target state="translated">このNgModuleで宣言されたコンポーネント内でのみ必要なプライベートコンポーネント、ディレクティブ、パイプ。他のNgModuleに見せたくない場合は、エクスポートしないでください。</target>
        </trans-unit>
        <trans-unit id="4aa7faa011241b58e6d3463522ad478e4a417345" translate="yes" xml:space="preserve">
          <source>Proceed to the first application milestone.</source>
          <target state="translated">最初のアプリケーションのマイルストーンに進みます。</target>
        </trans-unit>
        <trans-unit id="c986803a139eeb1814cb1cb9c60f9e6ba08db226" translate="yes" xml:space="preserve">
          <source>Processes a JSONP request and returns an event stream of the results.</source>
          <target state="translated">JSONPリクエストを処理し、結果のイベントストリームを返します。</target>
        </trans-unit>
        <trans-unit id="ca1b293ff91a747b9e1c725d22d905891bd9334a" translate="yes" xml:space="preserve">
          <source>Processes a request and returns a stream of response events.</source>
          <target state="translated">リクエストを処理し、レスポンスイベントのストリームを返します。</target>
        </trans-unit>
        <trans-unit id="b54af06306ac63586c56e2970c71f3615862b1a0" translate="yes" xml:space="preserve">
          <source>Processes an &lt;code&gt;&lt;a href=&quot;http/httprequest&quot;&gt;HttpRequest&lt;/a&gt;&lt;/code&gt; with the JSONP method, by performing JSONP style requests.</source>
          <target state="translated">JSONPスタイルのリクエストを実行して、JSONPメソッドで &lt;code&gt;&lt;a href=&quot;http/httprequest&quot;&gt;HttpRequest&lt;/a&gt;&lt;/code&gt; を処理します。</target>
        </trans-unit>
        <trans-unit id="55d4096b59eb068acdc46953d49c4acf765ebb6a" translate="yes" xml:space="preserve">
          <source>Processes an &lt;code&gt;&lt;a href=&quot;httprequest&quot;&gt;HttpRequest&lt;/a&gt;&lt;/code&gt; with the JSONP method, by performing JSONP style requests.</source>
          <target state="translated">JSONPスタイルのリクエストを実行して、JSONPメソッドで &lt;code&gt;&lt;a href=&quot;httprequest&quot;&gt;HttpRequest&lt;/a&gt;&lt;/code&gt; を処理します。</target>
        </trans-unit>
        <trans-unit id="4c180d40fb357028ba0ac0fc56f7be7c5d9174d1" translate="yes" xml:space="preserve">
          <source>Produces a reusable animation that can be invoked from elsewhere. Used together with &lt;code&gt;&lt;a href=&quot;../api/animations/useanimation&quot;&gt;useAnimation&lt;/a&gt;()&lt;/code&gt;.</source>
          <target state="translated">他の場所から呼び出すことができる再利用可能なアニメーションを作成します。 &lt;code&gt;&lt;a href=&quot;../api/animations/useanimation&quot;&gt;useAnimation&lt;/a&gt;()&lt;/code&gt; と一緒に使用されます。</target>
        </trans-unit>
        <trans-unit id="04be5c86df2b6217e4d14d7d23cb19226f4775b8" translate="yes" xml:space="preserve">
          <source>Produces a reusable animation that can be invoked in another animation or sequence, by calling the &lt;code&gt;&lt;a href=&quot;animations/useanimation&quot;&gt;useAnimation&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;animations/useanimation&quot;&gt;useAnimation&lt;/a&gt;()&lt;/code&gt; 関数を呼び出すことにより、別のアニメーションまたはシーケンスで呼び出すことができる再利用可能なアニメーションを生成します。</target>
        </trans-unit>
        <trans-unit id="f565e89ffc1021668b87fc6b07e6130b5fb67a8c" translate="yes" xml:space="preserve">
          <source>Produces a reusable animation that can be invoked in another animation or sequence, by calling the &lt;code&gt;&lt;a href=&quot;useanimation&quot;&gt;useAnimation&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;useanimation&quot;&gt;useAnimation&lt;/a&gt;()&lt;/code&gt; 関数を呼び出すことにより、別のアニメーションまたはシーケンスで呼び出すことができる再利用可能なアニメーションを生成します。</target>
        </trans-unit>
        <trans-unit id="d25405283945c03fa70894ed8ca915f1d20c3cd2" translate="yes" xml:space="preserve">
          <source>Produces only one &lt;code&gt;.metadata.json&lt;/code&gt; file, which contains all the metadata necessary for symbols exported from the library index. In the generated &lt;code&gt;.ngfactory.js&lt;/code&gt; files, the flat module index is used to import symbols that includes both the public API from the library index as well as shrowded internal symbols.</source>
          <target state="translated">ライブラリインデックスからエクスポートされたシンボルに必要なすべてのメタデータを含む &lt;code&gt;.metadata.json&lt;/code&gt; ファイルを1つだけ生成します。生成された &lt;code&gt;.ngfactory.js&lt;/code&gt; ファイルでは、フラットモジュールインデックスを使用して、ライブラリインデックスからのパブリックAPIと細断された内部シンボルの両方を含むシンボルをインポートします。</target>
        </trans-unit>
        <trans-unit id="42c1e993da4701016c19505ac8a40f8ca68e2496" translate="yes" xml:space="preserve">
          <source>Production optimizations</source>
          <target state="translated">生産の最適化</target>
        </trans-unit>
        <trans-unit id="790662d7276fecead0642a68863411158d8bdf71" translate="yes" xml:space="preserve">
          <source>Products are linked from the product list page to individual products</source>
          <target state="translated">商品一覧ページから個々の商品にリンクされている</target>
        </trans-unit>
        <trans-unit id="32a2f762dd96239c6776b7d239a10e9340945df1" translate="yes" xml:space="preserve">
          <source>Products are linked from the product list view to individual products.</source>
          <target state="translated">商品は、商品一覧表示から個別の商品にリンクしています。</target>
        </trans-unit>
        <trans-unit id="2a0ae4a78280da384552260861eade2c6574f548" translate="yes" xml:space="preserve">
          <source>Programmatic animations built using the &lt;code&gt;&lt;a href=&quot;animationbuilder&quot;&gt;AnimationBuilder&lt;/a&gt;&lt;/code&gt; service also make use of &lt;code&gt;&lt;a href=&quot;animationoptions&quot;&gt;AnimationOptions&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">使用して構築されたプログラムによるアニメーション &lt;code&gt;&lt;a href=&quot;animationbuilder&quot;&gt;AnimationBuilder&lt;/a&gt;&lt;/code&gt; のサービスも使用します &lt;code&gt;&lt;a href=&quot;animationoptions&quot;&gt;AnimationOptions&lt;/a&gt;&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="62dd459e772b968a8a788978ab7b3d9e6d236052" translate="yes" xml:space="preserve">
          <source>Progress and status reporting</source>
          <target state="translated">進捗状況と状況報告</target>
        </trans-unit>
        <trans-unit id="b091ed47915c75bb4f4374dd46c3e4c7702fdf54" translate="yes" xml:space="preserve">
          <source>Progress event type is either upload or download.</source>
          <target state="translated">進行状況イベントの種類は、アップロードかダウンロードのどちらかです。</target>
        </trans-unit>
        <trans-unit id="35a227fc0f2d5149392f6b32708deaf0d23d5fdf" translate="yes" xml:space="preserve">
          <source>Progress events are expensive (change detection runs on each event) and so they should only be requested if the consumer intends to monitor them.</source>
          <target state="translated">プログレスイベントは高価である(イベントごとに変更検出が実行される)ため、消費者がそれらを監視するつもりがある場合にのみ要求すべきである。</target>
        </trans-unit>
        <trans-unit id="9f5ea6dee40bc1957609cc91d1c8de4b38422dbc" translate="yes" xml:space="preserve">
          <source>Project configuration options</source>
          <target state="translated">プロジェクト構成オプション</target>
        </trans-unit>
        <trans-unit id="b9801a527c5f2ea94ead96ffb5c51c7f0c4ce2ab" translate="yes" xml:space="preserve">
          <source>Project tool configuration options</source>
          <target state="translated">プロジェクトツールの設定オプション</target>
        </trans-unit>
        <trans-unit id="74c0f70175cb25524a755932b999ce0195dcc462" translate="yes" xml:space="preserve">
          <source>Project-specific &lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt; configuration files inherit from the workspace-wide &lt;code&gt;tsconfig.json&lt;/code&gt;, and project-specific &lt;a href=&quot;https://palantir.github.io/tslint/&quot;&gt;TSLint&lt;/a&gt; configuration files inherit from the workspace-wide &lt;code&gt;tslint.json&lt;/code&gt;.</source>
          <target state="translated">プロジェクト固有の&lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt;構成ファイルはワークスペース全体の &lt;code&gt;tsconfig.json&lt;/code&gt; から継承し、プロジェクト固有の&lt;a href=&quot;https://palantir.github.io/tslint/&quot;&gt;TSLint&lt;/a&gt;構成ファイルはワークスペース全体の &lt;code&gt;tslint.json&lt;/code&gt; から継承します。</target>
        </trans-unit>
        <trans-unit id="19fbfba240d8133d7be4736881a0b978769181b7" translate="yes" xml:space="preserve">
          <source>Projecting AngularJS Content into Angular Components</source>
          <target state="translated">AngularJSコンテンツをAngularコンポーネントに投影する</target>
        </trans-unit>
        <trans-unit id="c87ea457b498277e45dfe6b9ea8c191886995da8" translate="yes" xml:space="preserve">
          <source>Projects not using Angular CLI will see a significant size regression unless they update their minifier settings and set compile-time constants &lt;code&gt;ngDevMode&lt;/code&gt;, &lt;code&gt;ngI18nClosureMode&lt;/code&gt; and &lt;code&gt;ngJitMode&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; (for Terser, please set these to &lt;code&gt;false&lt;/code&gt; via &lt;a href=&quot;https://terser.org/docs/api-reference.html#conditional-compilation&quot;&gt;&lt;code&gt;global_defs&lt;/code&gt; config option&lt;/a&gt;). Please note that these constants are not meant to be used by 3rd party library or application code as they are not part of our public api surface and might change in the future.</source>
          <target state="translated">Angular CLIを使用していないプロジェクトでは、ミニファイア設定を更新し、コンパイル時定数 &lt;code&gt;ngDevMode&lt;/code&gt; 、 &lt;code&gt;ngI18nClosureMode&lt;/code&gt; 、および &lt;code&gt;ngJitMode&lt;/code&gt; を &lt;code&gt;false&lt;/code&gt; に設定しない限り、サイズが大幅に低下します（Terserの場合、&lt;a href=&quot;https://terser.org/docs/api-reference.html#conditional-compilation&quot;&gt; &lt;code&gt;global_defs&lt;/code&gt; 構成&lt;/a&gt;オプションを使用してこれらを &lt;code&gt;false&lt;/code&gt; に設定してください）。これらの定数は、パブリックAPIサーフェスの一部ではなく、将来変更される可能性があるため、サードパーティのライブラリまたはアプリケーションコードで使用するためのものではないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="fe5671922bc7f67cfabfa60ab97a9542ac21f39f" translate="yes" xml:space="preserve">
          <source>Promise</source>
          <target state="translated">Promise</target>
        </trans-unit>
        <trans-unit id="75960a1110ccba8def033cd86e8a10afcbc14cdb" translate="yes" xml:space="preserve">
          <source>Promises are not cancellable.</source>
          <target state="translated">お約束のキャンセルはできません。</target>
        </trans-unit>
        <trans-unit id="fd075a0c7e57b8824112b06a641202fb7b294988" translate="yes" xml:space="preserve">
          <source>Promises do not differentiate between the last &lt;code&gt;.then&lt;/code&gt; clauses (equivalent to subscription) and intermediate &lt;code&gt;.then&lt;/code&gt; clauses (equivalent to map).</source>
          <target state="translated">プロミスは、最後の &lt;code&gt;.then&lt;/code&gt; 句（サブスクリプションに相当）と中間の &lt;code&gt;.then&lt;/code&gt; 句（マップに相当）を区別しません。</target>
        </trans-unit>
        <trans-unit id="c863d38da402eed1e862ef6202e429af3628e9cf" translate="yes" xml:space="preserve">
          <source>Promises execute immediately, and just once. The computation of the result is initiated when the promise is created. There is no way to restart work. All &lt;code&gt;then&lt;/code&gt; clauses (subscriptions) share the same computation.</source>
          <target state="translated">約束はすぐに、一度だけ実行されます。結果の計算は、promiseが作成されたときに開始されます。作業を再開する方法はありません。すべての &lt;code&gt;then&lt;/code&gt; 句（サブスクリプション）は同じ計算を共有します。</target>
        </trans-unit>
        <trans-unit id="1472af86dfdb390fa3ffb01b3adfce53c1fcc332" translate="yes" xml:space="preserve">
          <source>Promises push errors to the child promises.</source>
          <target state="translated">プロミスはエラーを子プロミスにプッシュします。</target>
        </trans-unit>
        <trans-unit id="d234326a4b0c46809ea38bd58ac4911bd7981881" translate="yes" xml:space="preserve">
          <source>Prompt Type</source>
          <target state="translated">プロンプトタイプ</target>
        </trans-unit>
        <trans-unit id="392aee6a644d305cd374d40592dc974e0a918a9e" translate="yes" xml:space="preserve">
          <source>Prompt long-form syntax</source>
          <target state="translated">プロンプト長文構文</target>
        </trans-unit>
        <trans-unit id="a0269bd29a48abe5475f986f050d08f2eeff4876" translate="yes" xml:space="preserve">
          <source>Prompt short-form syntax</source>
          <target state="translated">プロンプト短文構文</target>
        </trans-unit>
        <trans-unit id="bc6c88db2f0703a9e2461a4a8060ccf1cb881998" translate="yes" xml:space="preserve">
          <source>Properties</source>
          <target state="translated">Properties</target>
        </trans-unit>
        <trans-unit id="9e90a20c58850b67f856658cc9e4c99b342a100d" translate="yes" xml:space="preserve">
          <source>Properties like &lt;code&gt;host&lt;/code&gt; inside &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;&lt;/code&gt; decorators can be inherited (previously, only properties with explicit field decorators like &lt;code&gt;@&lt;a href=&quot;../api/core/hostbinding&quot;&gt;HostBinding&lt;/a&gt;&lt;/code&gt; would be inherited).</source>
          <target state="translated">以下のような性質 &lt;code&gt;host&lt;/code&gt; 内部 &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; と &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;&lt;/code&gt; デコレータを継承することができます（以前のような明示的なフィールドデコレータを持つ唯一のプロパティ &lt;code&gt;@&lt;a href=&quot;../api/core/hostbinding&quot;&gt;HostBinding&lt;/a&gt;&lt;/code&gt; 継承されます）。</target>
        </trans-unit>
        <trans-unit id="7064440d35d215018bde74bbba3e67cfce94975a" translate="yes" xml:space="preserve">
          <source>Properties of elements in a view can change dynamically, in response to user actions; the structure (number and order) of elements in a view can't. You can change the structure of elements by inserting, moving, or removing nested views within their view containers.</source>
          <target state="translated">ビュー内の要素のプロパティは、ユーザーのアクションに応じて動的に変更することができますが、ビュー内の要素の構造(数と順序)は変更できません。要素の構造は、ビューコンテナ内に入れ子になったビューを挿入、移動、削除することで変更することができます。</target>
        </trans-unit>
        <trans-unit id="ef3749a2f44a01eb5b1fc0310f059eb04a298bb6" translate="yes" xml:space="preserve">
          <source>Properties of elements in a view can change, but the structure (number and order) of elements in a view cannot. Change the structure of elements by inserting, moving, or removing nested views in a view container.</source>
          <target state="translated">ビュー内の要素のプロパティは変更できますが、ビュー内の要素の構造(数や順序)は変更できません。ビューコンテナ内に入れ子になったビューを挿入、移動、削除することで、要素の構造を変更することができます。</target>
        </trans-unit>
        <trans-unit id="ac6ec18415c36a76d59830163325e84ed889af49" translate="yes" xml:space="preserve">
          <source>Properties of the &lt;code&gt;&lt;a href=&quot;metadefinition&quot;&gt;MetaDefinition&lt;/a&gt;&lt;/code&gt; object match the attributes of the HTML &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; tag. These tags define document metadata that is important for things like configuring a Content Security Policy, defining browser compatibility and security settings, setting HTTP Headers, defining rich content for social sharing, and Search Engine Optimization (SEO).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;metadefinition&quot;&gt;MetaDefinition&lt;/a&gt;&lt;/code&gt; オブジェクトのプロパティは、HTMLの &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; タグの属性と一致します。これらのタグは、コンテンツセキュリティポリシーの構成、ブラウザの互換性とセキュリティ設定の定義、HTTPヘッダーの設定、ソーシャル共有用のリッチコンテンツの定義、検索エンジン最適化（SEO）などに重要なドキュメントメタデータを定義します。</target>
        </trans-unit>
        <trans-unit id="f263dc38915b90a9052d4809c811ec821890851f" translate="yes" xml:space="preserve">
          <source>Properties that are not present take the HammerJS default values. For information about which properties are supported for which events, and their allowed and default values, see &lt;a href=&quot;http://hammerjs.github.io/&quot;&gt;HammerJS documentation&lt;/a&gt;.</source>
          <target state="translated">存在しないプロパティは、HammerJSのデフォルト値を取ります。どのイベントでどのプロパティがサポートされているか、およびそれらの許可値とデフォルト値については、&lt;a href=&quot;http://hammerjs.github.io/&quot;&gt;HammerJSのドキュメントを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="ed351121737bec708f3bda86370f451930772ef7" translate="yes" xml:space="preserve">
          <source>Properties whose default values can be overridden for a given event. Different sets of properties apply to different events. For information about which properties are supported for which events, and their allowed and default values, see &lt;a href=&quot;http://hammerjs.github.io/&quot;&gt;HammerJS documentation&lt;/a&gt;.</source>
          <target state="translated">特定のイベントでデフォルト値をオーバーライドできるプロパティ。プロパティの異なるセットは、異なるイベントに適用されます。どのイベントでどのプロパティがサポートされているか、およびそれらの許可値とデフォルト値については、&lt;a href=&quot;http://hammerjs.github.io/&quot;&gt;HammerJSのドキュメントを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="9ae33a7d0ecb82cae8f04aafab20bf90425b7b8c" translate="yes" xml:space="preserve">
          <source>Property</source>
          <target state="translated">Property</target>
        </trans-unit>
        <trans-unit id="c795710dede9c7672e5c93daff8ab98596997b26" translate="yes" xml:space="preserve">
          <source>Property Schema</source>
          <target state="translated">プロパティスキーマ</target>
        </trans-unit>
        <trans-unit id="c250a939425c6fc56d3c5dfb59b1a229e6fe841d" translate="yes" xml:space="preserve">
          <source>Property access</source>
          <target state="translated">物件アクセス</target>
        </trans-unit>
        <trans-unit id="a32aec98261097813a762b28180fc560fa718d3e" translate="yes" xml:space="preserve">
          <source>Property binding</source>
          <target state="translated">プロパティバインディング</target>
        </trans-unit>
        <trans-unit id="346228906e73d1ee019e8cb4344383d3b2e78030" translate="yes" xml:space="preserve">
          <source>Property binding &lt;code&gt;[ ]&lt;/code&gt;</source>
          <target state="translated">プロパティバインディング &lt;code&gt;[ ]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="107d6306f9bdce4c0ee8743d04ec8cf9e6d3d6f1" translate="yes" xml:space="preserve">
          <source>Property binding &lt;code&gt;[property]&lt;/code&gt;</source>
          <target state="translated">プロパティバインディング &lt;code&gt;[property]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c14c6252d9e2dd49704426dd055c14425f53f405" translate="yes" xml:space="preserve">
          <source>Property binding and interpolation</source>
          <target state="translated">プロパティバインディングと補間</target>
        </trans-unit>
        <trans-unit id="d47d7a21ca12a497c7bbff764aab2b03906aa3a8" translate="yes" xml:space="preserve">
          <source>Property binding and security</source>
          <target state="translated">プロパティバインディングとセキュリティ</target>
        </trans-unit>
        <trans-unit id="0301a4dc6377def270f857da7558dcb8979beae1" translate="yes" xml:space="preserve">
          <source>Property binding best practices</source>
          <target state="translated">プロパティバインディングのベストプラクティス</target>
        </trans-unit>
        <trans-unit id="eed56d79d0275e7c810cb2dd41ce031d616d162f" translate="yes" xml:space="preserve">
          <source>Property binding can help keep content secure. For example, consider the following malicious content.</source>
          <target state="translated">プロパティバインディングは、コンテンツの安全性を保つのに役立ちます。例えば、次のような悪意のあるコンテンツを考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="d005f2fc0afb36c018f3e878d6e0cd2d41a51288" translate="yes" xml:space="preserve">
          <source>Property binding flows a value in one direction, from a component's property into a target element property.</source>
          <target state="translated">プロパティ・バインディングは、コンポーネントのプロパティからターゲット要素のプロパティに値を一方向に流します。</target>
        </trans-unit>
        <trans-unit id="8ff06e367cb125be5f2e9b382dd57b629b1c74f7" translate="yes" xml:space="preserve">
          <source>Property binding in Angular helps you set values for properties of HTML elements or directives. With property binding, you can do things such as toggle button functionality, set paths programmatically, and share values between components.</source>
          <target state="translated">AngularのプロパティバインディングはHTML要素やディレクティブのプロパティに値を設定するのに役立ちます。プロパティバインディングを使うと、ボタン機能をトグルしたり、プログラムでパスを設定したり、コンポーネント間で値を共有したりすることができます。</target>
        </trans-unit>
        <trans-unit id="4c37dfec8db2006448ebab82f128b86df58978c0" translate="yes" xml:space="preserve">
          <source>Property binding moves a value in one direction, from a component's property into a target element property.</source>
          <target state="translated">プロパティ・バインディングは、コンポーネントのプロパティからターゲット要素のプロパティに値を一方向に移動させます。</target>
        </trans-unit>
        <trans-unit id="f9667b791a7bcc826c9e552e1706d5a403ead2e7" translate="yes" xml:space="preserve">
          <source>Property binding vs. interpolation</source>
          <target state="translated">プロパティバインディングと補間</target>
        </trans-unit>
        <trans-unit id="0902ed8a581443aca3fb5c8b2932e9ac7cc78ce6" translate="yes" xml:space="preserve">
          <source>Property decorator that configures a view query. The change detector looks for the first element or the directive matching the selector in the view DOM. If the view DOM changes, and a new child matches the selector, the property is updated.</source>
          <target state="translated">ビュークエリを設定するプロパティデコレータ。変更検出器は、ビュー DOM 内でセレクタにマッチする最初の要素かディレクティブを探します。ビュー DOM が変更され、新しい子がセレクタにマッチした場合、プロパティが更新されます。</target>
        </trans-unit>
        <trans-unit id="1ea0aadb2f222603c648dcc5c4806d773bae7566" translate="yes" xml:space="preserve">
          <source>Prototype for a class constructor based on an Angular component that can be used for custom element registration. Implemented and returned by the &lt;a href=&quot;createcustomelement&quot;&gt;createCustomElement() function&lt;/a&gt;.</source>
          <target state="translated">カスタム要素の登録に使用できるAngularコンポーネントに基づくクラスコンストラクターのプロトタイプ。&lt;a href=&quot;createcustomelement&quot;&gt;createCustomElement（）関数&lt;/a&gt;によって実装および返されます。</target>
        </trans-unit>
        <trans-unit id="45c734d8a118ca7943160a8da1958d4c97694962" translate="yes" xml:space="preserve">
          <source>Prototype for a class constructor based on an Angular component that can be used for custom element registration. Implemented and returned by the &lt;a href=&quot;elements/createcustomelement&quot;&gt;createCustomElement() function&lt;/a&gt;.</source>
          <target state="translated">カスタム要素の登録に使用できるAngularコンポーネントに基づくクラスコンストラクターのプロトタイプ。&lt;a href=&quot;elements/createcustomelement&quot;&gt;createCustomElement（）関数&lt;/a&gt;によって実装および返されます。</target>
        </trans-unit>
        <trans-unit id="5bcc05d10bd22bcb6a57ac35cf578bc945f3e4b3" translate="yes" xml:space="preserve">
          <source>Prototype for a handler that responds to a change in an observed attribute.</source>
          <target state="translated">観測された属性の変更に応答するハンドラのプロトタイプ。</target>
        </trans-unit>
        <trans-unit id="d4242981546e21fdb3b0aa7f0ab3725709e00971" translate="yes" xml:space="preserve">
          <source>Prototype for a handler that responds to the deletion of the custom element from the DOM.</source>
          <target state="translated">DOM からのカスタム要素の削除に応答するハンドラのプロトタイプ。</target>
        </trans-unit>
        <trans-unit id="b49d3370133fd5f84996c090070b457117aa588f" translate="yes" xml:space="preserve">
          <source>Prototype for a handler that responds to the insertion of the custom element in the DOM.</source>
          <target state="translated">DOM へのカスタム要素の挿入に応答するハンドラのプロトタイプ。</target>
        </trans-unit>
        <trans-unit id="364720ef6a6da0616b055436186192f1428f1e06" translate="yes" xml:space="preserve">
          <source>Provide a &lt;em&gt;spy stub&lt;/em&gt; (&lt;em&gt;HeroDetailServiceSpy&lt;/em&gt;)</source>
          <target state="translated">提供&lt;em&gt;スパイスタブを&lt;/em&gt;（&lt;em&gt;HeroDetailServiceSpy&lt;/em&gt;）</target>
        </trans-unit>
        <trans-unit id="56b5fca9733d4354e4809cb7d8c15b0bda4b5f16" translate="yes" xml:space="preserve">
          <source>Provide a custom async validator directive</source>
          <target state="translated">カスタムの非同期バリデータディレクティブを提供する</target>
        </trans-unit>
        <trans-unit id="1b032de3dd61fd02081b246c3ef63793dca34072" translate="yes" xml:space="preserve">
          <source>Provide a custom validator</source>
          <target state="translated">カスタムバリデータを提供する</target>
        </trans-unit>
        <trans-unit id="df0c1c920f554dc482156bd3d156adf2320a527b" translate="yes" xml:space="preserve">
          <source>Provide a name for the sub-group and it will become the key for the sub-group in the form's full value. If you need direct access, export the directive into a local template variable using &lt;code&gt;&lt;a href=&quot;ngmodelgroup&quot;&gt;ngModelGroup&lt;/a&gt;&lt;/code&gt; (ex: &lt;code&gt;#myGroup=&quot;&lt;a href=&quot;ngmodelgroup&quot;&gt;ngModelGroup&lt;/a&gt;&quot;&lt;/code&gt;).</source>
          <target state="translated">サブグループの名前を入力すると、フォームの完全な値でサブグループのキーになります。直接アクセスが必要な場合は、 &lt;code&gt;&lt;a href=&quot;ngmodelgroup&quot;&gt;ngModelGroup&lt;/a&gt;&lt;/code&gt; を使用してディレクティブをローカルテンプレート変数にエクスポートします（例： &lt;code&gt;#myGroup=&quot;&lt;a href=&quot;ngmodelgroup&quot;&gt;ngModelGroup&lt;/a&gt;&quot;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="b0bfac5b60f2cfcdb1e326e2371e802dee9bb7f9" translate="yes" xml:space="preserve">
          <source>Provide service test doubles</source>
          <target state="translated">サービステストダブルスを提供する</target>
        </trans-unit>
        <trans-unit id="282b3a69f60a0417d266e1f3b3454cd26e7ab9f8" translate="yes" xml:space="preserve">
          <source>Provide services with the &lt;code&gt;&lt;a href=&quot;../api/core/injectable#providedIn&quot;&gt;providedIn&lt;/a&gt;&lt;/code&gt; property of &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; as follows:</source>
          <target state="translated">次のように、 &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; &lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;（）の &lt;code&gt;&lt;a href=&quot;../api/core/injectable#providedIn&quot;&gt;providedIn&lt;/a&gt;&lt;/code&gt; プロパティを使用してサービスを提供します。</target>
        </trans-unit>
        <trans-unit id="59b3fbb5e36a4627db38be1518d51d442969ccd0" translate="yes" xml:space="preserve">
          <source>Provide services with the &lt;code&gt;providedIn&lt;/code&gt; property of &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; as follows:</source>
          <target state="translated">次のように、 &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; &lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;（）の &lt;code&gt;providedIn&lt;/code&gt; プロパティを使用してサービスを提供します。</target>
        </trans-unit>
        <trans-unit id="4a96aec90d191ffcecd423feab632222f110bd83" translate="yes" xml:space="preserve">
          <source>Provide the &lt;code&gt;HeroService&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;HeroService&lt;/code&gt; を提供する</target>
        </trans-unit>
        <trans-unit id="eba09a50b5ef8c8573323c50d8562ae64d92b88c" translate="yes" xml:space="preserve">
          <source>Provide the Angular compiler with three translation-specific pieces of information:</source>
          <target state="translated">Angularコンパイラに3つの翻訳固有の情報を提供します。</target>
        </trans-unit>
        <trans-unit id="cdd2227ddb36c454e328ebcf762ca2c448cf687b" translate="yes" xml:space="preserve">
          <source>Provide the interceptor</source>
          <target state="translated">インターセプターを提供する</target>
        </trans-unit>
        <trans-unit id="d0c86d6ffca326460b89bd946fad34a8ff2af2d7" translate="yes" xml:space="preserve">
          <source>Provide the router with an appropriate &lt;code&gt;&lt;a href=&quot;../api/common/app_base_href&quot;&gt;APP_BASE_HREF&lt;/a&gt;&lt;/code&gt; value.</source>
          <target state="translated">ルーターに適切な &lt;code&gt;&lt;a href=&quot;../api/common/app_base_href&quot;&gt;APP_BASE_HREF&lt;/a&gt;&lt;/code&gt; 値を指定します。</target>
        </trans-unit>
        <trans-unit id="99278df1a4d2a1a33d21799411dc49cbf8fdcf3b" translate="yes" xml:space="preserve">
          <source>Provide the router with an appropriate [APP_BASE_HREF][] value.</source>
          <target state="translated">ルータに適切な[APP_BASE_HREF][]値を与えます。</target>
        </trans-unit>
        <trans-unit id="78c22d5ad96ec6d26862683406067aafe9ec5e5b" translate="yes" xml:space="preserve">
          <source>Provide this token at bootstrap to set the format of your &lt;a href=&quot;core/translations&quot;&gt;&lt;code&gt;TRANSLATIONS&lt;/code&gt;&lt;/a&gt;: &lt;code&gt;xtb&lt;/code&gt;, &lt;code&gt;xlf&lt;/code&gt; or &lt;code&gt;xlf2&lt;/code&gt;.</source>
          <target state="translated">あなたの形式を設定し、ブートストラップで、このトークンを提供する&lt;a href=&quot;core/translations&quot;&gt; &lt;code&gt;TRANSLATIONS&lt;/code&gt; &lt;/a&gt;： &lt;code&gt;xtb&lt;/code&gt; 、 &lt;code&gt;xlf&lt;/code&gt; または &lt;code&gt;xlf2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c6e1db8d3331ddf65a5f5534e13ef7f98172968e" translate="yes" xml:space="preserve">
          <source>Provide this token at bootstrap to set the format of your &lt;a href=&quot;translations&quot;&gt;&lt;code&gt;TRANSLATIONS&lt;/code&gt;&lt;/a&gt;: &lt;code&gt;xtb&lt;/code&gt;, &lt;code&gt;xlf&lt;/code&gt; or &lt;code&gt;xlf2&lt;/code&gt;.</source>
          <target state="translated">あなたの形式を設定し、ブートストラップで、このトークンを提供する&lt;a href=&quot;translations&quot;&gt; &lt;code&gt;TRANSLATIONS&lt;/code&gt; &lt;/a&gt;： &lt;code&gt;xtb&lt;/code&gt; 、 &lt;code&gt;xlf&lt;/code&gt; または &lt;code&gt;xlf2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7468cc67031b821d79418d798168b9eabf1a6630" translate="yes" xml:space="preserve">
          <source>Provide this token to control if form directives buffer IME input until the &quot;compositionend&quot; event occurs.</source>
          <target state="translated">このトークンを提供することで、&quot;compositionend&quot; イベントが発生するまでフォームディレクティブが IME 入力をバッファリングするかどうかを制御します。</target>
        </trans-unit>
        <trans-unit id="f938316b748fecb1dcd2c9bff009f62d5950cd2b" translate="yes" xml:space="preserve">
          <source>Provide this token to set the default currency code your application uses for CurrencyPipe when there is no currency code passed into it. This is only used by CurrencyPipe and has no relation to locale currency. Defaults to USD if not configured.</source>
          <target state="translated">このトークンを提供することで、アプリケーションが使用するデフォルトの通貨コードを設定します。これは CurrencyPipe でのみ使用され、ロケール通貨とは関係ありません。設定されていない場合のデフォルトは USD です。</target>
        </trans-unit>
        <trans-unit id="d9db331ca7175b54bfdbfa34f22999c194ea5071" translate="yes" xml:space="preserve">
          <source>Provide this token to set the locale of your application. It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe, DecimalPipe and PercentPipe) and by ICU expressions.</source>
          <target state="translated">アプリケーションのロケールを設定するためにこのトークンを提供します。これは、i18n 抽出、i18n パイプ (DatePipe,I18nPluralPipe,CurrencyPipe,DecimalPipe,PercentPipe)、ICU 式で使用されます。</target>
        </trans-unit>
        <trans-unit id="5b54d983d0d3ed6b5e9f9aeae0e1fc2f2a5a2391" translate="yes" xml:space="preserve">
          <source>Provide visual feedback using special CSS classes that track the state of the controls.</source>
          <target state="translated">コントロールの状態を追跡する特別な CSS クラスを使用して視覚的なフィードバックを提供します。</target>
        </trans-unit>
        <trans-unit id="7ceee3f3615a2bbe4ce0ac5a269a311e4821daf4" translate="yes" xml:space="preserve">
          <source>Provider</source>
          <target state="translated">Provider</target>
        </trans-unit>
        <trans-unit id="3dd300f86b0abe3e7bd81d9da97630a87c0ac831" translate="yes" xml:space="preserve">
          <source>Provider for mock platform location config</source>
          <target state="translated">モックプラットフォームのロケーション設定のためのプロバイダ</target>
        </trans-unit>
        <trans-unit id="4b5c9e13d407299a81137be96842ae46ff27b552" translate="yes" xml:space="preserve">
          <source>Provider scope</source>
          <target state="translated">プロバイダの範囲</target>
        </trans-unit>
        <trans-unit id="2f79863ed2d8ccad17111669817b34b89c65690a" translate="yes" xml:space="preserve">
          <source>Provider token alternatives: class interface and 'InjectionToken'</source>
          <target state="translated">プロバイダートークンの代替:クラスインターフェースと 'InjectionToken'</target>
        </trans-unit>
        <trans-unit id="87b7c08baed1c8e93db95b79bcdca55b631dd7bb" translate="yes" xml:space="preserve">
          <source>Providers</source>
          <target state="translated">Providers</target>
        </trans-unit>
        <trans-unit id="3b0d079fabe95eb9cc4ce3f476c28f24898ca9ac" translate="yes" xml:space="preserve">
          <source>Providers can also be scoped by injector through constructor parameter decorators. The following example overrides the &lt;code&gt;BROWSER_STORAGE&lt;/code&gt; token in the &lt;code&gt;&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; class &lt;code&gt;providers&lt;/code&gt; with the &lt;code&gt;sessionStorage&lt;/code&gt; browser API. The same &lt;code&gt;BrowserStorageService&lt;/code&gt; is injected twice in the constructor, decorated with &lt;code&gt;@&lt;a href=&quot;../api/core/self&quot;&gt;Self&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;&lt;/code&gt; to define which injector handles the provider dependency.</source>
          <target state="translated">プロバイダーは、コンストラクターパラメーターデコレーターを介してインジェクターによってスコープ指定することもできます。次の例では、上書きされます &lt;code&gt;BROWSER_STORAGE&lt;/code&gt; にトークン &lt;code&gt;&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; クラスの &lt;code&gt;providers&lt;/code&gt; と &lt;code&gt;sessionStorage&lt;/code&gt; ブラウザのAPIを。同じ &lt;code&gt;BrowserStorageService&lt;/code&gt; がコンストラクターで2回注入され、 &lt;code&gt;@&lt;a href=&quot;../api/core/self&quot;&gt;Self&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;&lt;/code&gt; で装飾されて、プロバイダーの依存関係を処理するインジェクターを定義します。</target>
        </trans-unit>
        <trans-unit id="61798394a1d98f63a6bf0f092a72f0b0b03b7494" translate="yes" xml:space="preserve">
          <source>Providers formatted as &lt;code&gt;{provide: X}&lt;/code&gt; without a &lt;code&gt;useValue&lt;/code&gt;, &lt;code&gt;useFactory&lt;/code&gt;, &lt;code&gt;useExisting&lt;/code&gt;, or &lt;code&gt;useClass&lt;/code&gt; property are treated like &lt;code&gt;{provide: X, useClass: X}&lt;/code&gt; (previously, it defaulted to &lt;code&gt;{provide: X, useValue: undefined}&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;useValue&lt;/code&gt; 、 &lt;code&gt;useFactory&lt;/code&gt; 、 &lt;code&gt;useExisting&lt;/code&gt; 、または &lt;code&gt;useClass&lt;/code&gt; プロパティなしで &lt;code&gt;{provide: X}&lt;/code&gt; としてフォーマットされたプロバイダーは、 &lt;code&gt;{provide: X, useClass: X}&lt;/code&gt; ように扱われます（以前は、デフォルトで &lt;code&gt;{provide: X, useValue: undefined}&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="6b9473cc02003bc3c9e71c517ef33a8522746744" translate="yes" xml:space="preserve">
          <source>Providers listed in the &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule#providers&quot;&gt;NgModule.providers&lt;/a&gt;&lt;/code&gt; of a bootstrapped module have application scope. Adding a service provider to &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule#providers&quot;&gt;NgModule.providers&lt;/a&gt;&lt;/code&gt; effectively publishes the service to the entire application.</source>
          <target state="translated">ブートストラップモジュールの &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule#providers&quot;&gt;NgModule.providers&lt;/a&gt;&lt;/code&gt; にリストされているプロバイダーには、アプリケーションスコープがあります。サービスプロバイダーを &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule#providers&quot;&gt;NgModule.providers&lt;/a&gt;&lt;/code&gt; 追加すると、サービスがアプリケーション全体に効果的に公開されます。</target>
        </trans-unit>
        <trans-unit id="0abb2e3cbd25921f13920a13b7f90b2a78b1807e" translate="yes" xml:space="preserve">
          <source>Providers should be configured using &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;&lt;/code&gt; syntax. If possible, they should be provided in the application root (&lt;code&gt;&lt;a href=&quot;../api/core/injectable#providedIn&quot;&gt;providedIn&lt;/a&gt;: 'root'&lt;/code&gt;). Services that are configured this way are lazily loaded if they are only used from a lazily loaded context.</source>
          <target state="translated">プロバイダーは &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;&lt;/code&gt; 構文を使用して構成する必要があります。可能であれば、それらはアプリケーションルートに提供する必要があります（ &lt;code&gt;&lt;a href=&quot;../api/core/injectable#providedIn&quot;&gt;providedIn&lt;/a&gt;: 'root'&lt;/code&gt; ）。このように構成されたサービスは、遅延ロードされたコンテキストからのみ使用される場合、遅延ロードされます。</target>
        </trans-unit>
        <trans-unit id="7adb56df9bfc456f18f49d55ddb02e01f9c2130d" translate="yes" xml:space="preserve">
          <source>Providers should be configured using &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;&lt;/code&gt; syntax. If possible, they should be provided in the application root (&lt;code&gt;providedIn: 'root'&lt;/code&gt;). Services that are configured this way are lazily loaded if they are only used from a lazily loaded context.</source>
          <target state="translated">プロバイダーは、 &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;&lt;/code&gt; 構文を使用して構成する必要があります。可能であれば、アプリケーションルート（ &lt;code&gt;providedIn: 'root'&lt;/code&gt; ）で提供する必要があります。このように構成されたサービスは、遅延ロードされたコンテキストからのみ使用される場合、遅延ロードされます。</target>
        </trans-unit>
        <trans-unit id="7a7782a1cdf5537b6ab45a90229b534099ab9b51" translate="yes" xml:space="preserve">
          <source>Provides &lt;a href=&quot;npm-packages&quot;&gt;npm packages&lt;/a&gt; to the entire workspace. Workspace-wide &lt;code&gt;node_modules&lt;/code&gt; dependencies are visible to all projects.</source>
          <target state="translated">ワークスペース全体に&lt;a href=&quot;npm-packages&quot;&gt;npmパッケージ&lt;/a&gt;を提供します。ワークスペース全体の &lt;code&gt;node_modules&lt;/code&gt; 依存関係は、すべてのプロジェクトに表示されます。</target>
        </trans-unit>
        <trans-unit id="dec98dd94321496de1f50cda2aba357145312ef3" translate="yes" xml:space="preserve">
          <source>Provides a callback to invoke after the animation is destroyed.</source>
          <target state="translated">アニメーションが破壊された後に呼び出すコールバックを提供します。</target>
        </trans-unit>
        <trans-unit id="06472f531d20296a330d531003931c66f789f354" translate="yes" xml:space="preserve">
          <source>Provides a callback to invoke before the animation is destroyed.</source>
          <target state="translated">アニメーションが破壊される前に呼び出すコールバックを提供します。</target>
        </trans-unit>
        <trans-unit id="cb0ddb064076a8f2b3798d4ffc50ea81406f82a8" translate="yes" xml:space="preserve">
          <source>Provides a callback to invoke when the animation finishes.</source>
          <target state="translated">アニメーションの終了時に呼び出すコールバックを提供します。</target>
        </trans-unit>
        <trans-unit id="4ebb62f995874d193a7e43140c19b5194b764559" translate="yes" xml:space="preserve">
          <source>Provides a callback to invoke when the animation starts.</source>
          <target state="translated">アニメーションの開始時に呼び出すコールバックを提供します。</target>
        </trans-unit>
        <trans-unit id="c2aa0adcb1a04b38b56e0f68cb4a215cb7b21263" translate="yes" xml:space="preserve">
          <source>Provides a factory for &lt;a href=&quot;core/iterablediffer&quot;&gt;&lt;code&gt;IterableDiffer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;core/iterablediffer&quot;&gt; &lt;code&gt;IterableDiffer&lt;/code&gt; の&lt;/a&gt;ファクトリを提供します。</target>
        </trans-unit>
        <trans-unit id="4a4fc46799c84b04ab8e83e799bb8be92d40e11d" translate="yes" xml:space="preserve">
          <source>Provides a factory for &lt;a href=&quot;core/keyvaluediffer&quot;&gt;&lt;code&gt;KeyValueDiffer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;core/keyvaluediffer&quot;&gt; &lt;code&gt;KeyValueDiffer&lt;/code&gt; の&lt;/a&gt;ファクトリを提供します。</target>
        </trans-unit>
        <trans-unit id="daefdde64d29ae124d1a275a5108bdc322b38c48" translate="yes" xml:space="preserve">
          <source>Provides a factory for &lt;a href=&quot;iterablediffer&quot;&gt;&lt;code&gt;IterableDiffer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;iterablediffer&quot;&gt; &lt;code&gt;IterableDiffer&lt;/code&gt; の&lt;/a&gt;ファクトリを提供します。</target>
        </trans-unit>
        <trans-unit id="5fa9a3518ecfe1b22563104d95c8551aaf9c2bd7" translate="yes" xml:space="preserve">
          <source>Provides a factory for &lt;a href=&quot;keyvaluediffer&quot;&gt;&lt;code&gt;KeyValueDiffer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;keyvaluediffer&quot;&gt; &lt;code&gt;KeyValueDiffer&lt;/code&gt; の&lt;/a&gt;ファクトリを提供します。</target>
        </trans-unit>
        <trans-unit id="e2b415e077e3361988c2f857fc3dc967e9bcb745" translate="yes" xml:space="preserve">
          <source>Provides a hook for centralized exception handling.</source>
          <target state="translated">例外処理の集中化のためのフックを提供します。</target>
        </trans-unit>
        <trans-unit id="9257fc421b719e7e9ea89910b760bb128facd7fa" translate="yes" xml:space="preserve">
          <source>Provides a module to replace or remove when testing the application.</source>
          <target state="translated">アプリケーションをテストする際に置き換える、または削除するためのモジュールを提供します。</target>
        </trans-unit>
        <trans-unit id="ae1ff873c15a55ade83acb0552102896a99c7a2f" translate="yes" xml:space="preserve">
          <source>Provides a preloading strategy that does not preload any modules.</source>
          <target state="translated">モジュールをプリロードしないプリロード戦略を提供します。</target>
        </trans-unit>
        <trans-unit id="a3db596ece1a1c58b1beb16d0c3dc92a7c136abc" translate="yes" xml:space="preserve">
          <source>Provides a preloading strategy that preloads all modules as quickly as possible.</source>
          <target state="translated">すべてのモジュールを可能な限り迅速にプリロードするプリロード戦略を提供します。</target>
        </trans-unit>
        <trans-unit id="3abd726c53b26c510edb7d119ea042c8c042f3e6" translate="yes" xml:space="preserve">
          <source>Provides a preloading strategy.</source>
          <target state="translated">プリロード戦略を提供します。</target>
        </trans-unit>
        <trans-unit id="d6003de65fb37910ad1a52f6b6630c1e94cb1fd3" translate="yes" xml:space="preserve">
          <source>Provides a set of built-in validators that can be used by form controls.</source>
          <target state="translated">フォームコントロールで使用できる組み込みバリデータのセットを提供します。</target>
        </trans-unit>
        <trans-unit id="45c69c00c305a0f684394aef06d5173d76d12e07" translate="yes" xml:space="preserve">
          <source>Provides a switch case expression to match against an enclosing &lt;code&gt;&lt;a href=&quot;common/ngswitch&quot;&gt;ngSwitch&lt;/a&gt;&lt;/code&gt; expression. When the expressions match, the given &lt;code&gt;&lt;a href=&quot;common/ngswitchcase&quot;&gt;NgSwitchCase&lt;/a&gt;&lt;/code&gt; template is rendered. If multiple match expressions match the switch expression value, all of them are displayed.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;common/ngswitch&quot;&gt;ngSwitch&lt;/a&gt;&lt;/code&gt; 式と照合するスイッチケース式を提供します。式が一致すると、指定された &lt;code&gt;&lt;a href=&quot;common/ngswitchcase&quot;&gt;NgSwitchCase&lt;/a&gt;&lt;/code&gt; テンプレートがレンダリングされます。複数の一致式がスイッチ式の値と一致する場合、それらすべてが表示されます。</target>
        </trans-unit>
        <trans-unit id="ae483f3e883980573fd75c34e895e749c9373866" translate="yes" xml:space="preserve">
          <source>Provides a switch case expression to match against an enclosing &lt;code&gt;&lt;a href=&quot;ngswitch&quot;&gt;ngSwitch&lt;/a&gt;&lt;/code&gt; expression. When the expressions match, the given &lt;code&gt;&lt;a href=&quot;ngswitchcase&quot;&gt;NgSwitchCase&lt;/a&gt;&lt;/code&gt; template is rendered. If multiple match expressions match the switch expression value, all of them are displayed.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ngswitch&quot;&gt;ngSwitch&lt;/a&gt;&lt;/code&gt; 式と照合するスイッチケース式を提供します。式が一致すると、指定された &lt;code&gt;&lt;a href=&quot;ngswitchcase&quot;&gt;NgSwitchCase&lt;/a&gt;&lt;/code&gt; テンプレートがレンダリングされます。複数の一致式がスイッチ式の値と一致する場合、それらすべてが表示されます。</target>
        </trans-unit>
        <trans-unit id="88b1a486c61e7b580fdac0431f7516a11581529f" translate="yes" xml:space="preserve">
          <source>Provides a way to customize when activated routes get reused.</source>
          <target state="translated">有効化されたルートが再利用されるときにカスタマイズする方法を提供します。</target>
        </trans-unit>
        <trans-unit id="d62a1c7ef9d3bbcad1a36c5bdad9477fd5656228" translate="yes" xml:space="preserve">
          <source>Provides a way to migrate AngularJS applications to Angular.</source>
          <target state="translated">AngularJSアプリケーションをAngularに移行する方法を提供します。</target>
        </trans-unit>
        <trans-unit id="12dac37e322fe7a9dc40c678f9aaf99f6bce745a" translate="yes" xml:space="preserve">
          <source>Provides a well-known location for routing service providers including guards and resolvers.</source>
          <target state="translated">ガードやリゾルバを含むルーティングサービスプロバイダに有名な場所を提供します。</target>
        </trans-unit>
        <trans-unit id="7795bd5c8e0a00955dc00c44c01be3036256a259" translate="yes" xml:space="preserve">
          <source>Provides a well-known location for routing service providers such as guards and resolvers.</source>
          <target state="translated">ガードやリゾルバなどのルーティングサービスプロバイダのための有名な場所を提供します。</target>
        </trans-unit>
        <trans-unit id="8a0b1afb53b64fcdaef8af76086b6d95e29f87a8" translate="yes" xml:space="preserve">
          <source>Provides access to information about a route associated with a component that is loaded in an outlet. Use to traverse the &lt;code&gt;&lt;a href=&quot;router/routerstate&quot;&gt;RouterState&lt;/a&gt;&lt;/code&gt; tree and extract information from nodes.</source>
          <target state="translated">コンセントにロードされているコンポーネントに関連付けられているルートに関する情報へのアクセスを提供します。 &lt;code&gt;&lt;a href=&quot;router/routerstate&quot;&gt;RouterState&lt;/a&gt;&lt;/code&gt; ツリーをトラバースし、ノードから情報を抽出するために使用します。</target>
        </trans-unit>
        <trans-unit id="e54f33cad6368b991f49961d69ade9a14c72730e" translate="yes" xml:space="preserve">
          <source>Provides access to information about a route associated with a component that is loaded in an outlet. Use to traverse the &lt;code&gt;&lt;a href=&quot;routerstate&quot;&gt;RouterState&lt;/a&gt;&lt;/code&gt; tree and extract information from nodes.</source>
          <target state="translated">コンセントにロードされているコンポーネントに関連付けられているルートに関する情報へのアクセスを提供します。 &lt;code&gt;&lt;a href=&quot;routerstate&quot;&gt;RouterState&lt;/a&gt;&lt;/code&gt; ツリーをトラバースし、ノードから情報を抽出するために使用します。</target>
        </trans-unit>
        <trans-unit id="893dd0b5ea5c90570a7bd768f6628369ae2522d9" translate="yes" xml:space="preserve">
          <source>Provides encoding and decoding of URL parameter and query-string values.</source>
          <target state="translated">URL パラメータとクエリ文字列の値のエンコーディングとデコーディングを提供します。</target>
        </trans-unit>
        <trans-unit id="a7d496c1bc393d2158ef9aa5de543241605a6d82" translate="yes" xml:space="preserve">
          <source>Provides infrastructure for cross-platform rendering of animations in a browser.</source>
          <target state="translated">ブラウザでアニメーションをクロスプラットフォームでレンダリングするためのインフラストラクチャを提供します。</target>
        </trans-unit>
        <trans-unit id="db03f3571639689817fdb632783bcbaa77fdcd79" translate="yes" xml:space="preserve">
          <source>Provides infrastructure for testing Angular core functionality.</source>
          <target state="translated">Angularのコア機能をテストするためのインフラを提供します。</target>
        </trans-unit>
        <trans-unit id="6274f6de37965388a4c3c86253a161f2ed4e8fd2" translate="yes" xml:space="preserve">
          <source>Provides infrastructure for testing of the Animations browser subsystem.</source>
          <target state="translated">アニメーションブラウザサブシステムのテスト用のインフラストラクチャを提供します。</target>
        </trans-unit>
        <trans-unit id="2403fd1bc78cbb3c8c7e51cc991406b8f29a87cc" translate="yes" xml:space="preserve">
          <source>Provides infrastructure for the rendering of animations in supported browsers.</source>
          <target state="translated">サポートされているブラウザでアニメーションをレンダリングするためのインフラストラクチャを提供します。</target>
        </trans-unit>
        <trans-unit id="42d55cfc88208fa3c7756e47a6e9d219a4ae5b37" translate="yes" xml:space="preserve">
          <source>Provides interactive prompts for optional configuration, such as adding routing support. All prompts can safely be allowed to default.</source>
          <target state="translated">ルーティングサポートの追加など、オプションの設定のためのインタラクティブなプロンプトを提供します。すべてのプロンプトは、デフォルトで安全に許可することができます。</target>
        </trans-unit>
        <trans-unit id="1ca69fc3bc5f789656d8ed09a709f1cb74634f5e" translate="yes" xml:space="preserve">
          <source>Provides options for configuring the reactive forms module.</source>
          <target state="translated">リアクティブフォームモジュールを構成するためのオプションを提供します。</target>
        </trans-unit>
        <trans-unit id="0b8624e0d8f629e6c4af27527c1af12eb72275bf" translate="yes" xml:space="preserve">
          <source>Provides options for configuring the template-driven forms module.</source>
          <target state="translated">テンプレート駆動型フォームモジュールを設定するためのオプションを提供します。</target>
        </trans-unit>
        <trans-unit id="f7a021fc04fe85e843383ae9c651e172eb3dfefa" translate="yes" xml:space="preserve">
          <source>Provides polyfill scripts for browser support.</source>
          <target state="translated">ブラウザ対応のポリフィルスクリプトを提供します。</target>
        </trans-unit>
        <trans-unit id="72fb1814644e83e6dab9bc61869f6e53fd387fb8" translate="yes" xml:space="preserve">
          <source>Provides programmatic control of a reusable animation sequence, built using the &lt;code&gt;&lt;a href=&quot;animationplayer&quot;&gt;build()&lt;/a&gt;&lt;/code&gt; method of &lt;code&gt;&lt;a href=&quot;animationbuilder&quot;&gt;AnimationBuilder&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;animationplayer&quot;&gt;build()&lt;/a&gt;&lt;/code&gt; method returns a factory, whose &lt;code&gt;create()&lt;/code&gt; method instantiates and initializes this interface.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;animationbuilder&quot;&gt;AnimationBuilder&lt;/a&gt;&lt;/code&gt; の &lt;code&gt;&lt;a href=&quot;animationplayer&quot;&gt;build()&lt;/a&gt;&lt;/code&gt; メソッドを使用して構築された再利用可能なアニメーションシーケンスのプログラムによる制御を提供します。 &lt;code&gt;&lt;a href=&quot;animationplayer&quot;&gt;build()&lt;/a&gt;&lt;/code&gt; メソッドは、その工場、戻り &lt;code&gt;create()&lt;/code&gt; メソッドのインスタンス化し、このインターフェイスを初期化します。</target>
        </trans-unit>
        <trans-unit id="03c96285b383fef43295b3135d866170627e2d20" translate="yes" xml:space="preserve">
          <source>Provides programmatic control of a reusable animation sequence, built using the &lt;code&gt;&lt;a href=&quot;animations&quot;&gt;build()&lt;/a&gt;&lt;/code&gt; method of &lt;code&gt;&lt;a href=&quot;animations/animationbuilder&quot;&gt;AnimationBuilder&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;animations&quot;&gt;build()&lt;/a&gt;&lt;/code&gt; method returns a factory, whose &lt;code&gt;create()&lt;/code&gt; method instantiates and initializes this interface.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;animations/animationbuilder&quot;&gt;AnimationBuilder&lt;/a&gt;&lt;/code&gt; の &lt;code&gt;&lt;a href=&quot;animations&quot;&gt;build()&lt;/a&gt;&lt;/code&gt; メソッドを使用して構築された再利用可能なアニメーションシーケンスのプログラムによる制御を提供します。 &lt;code&gt;&lt;a href=&quot;animations&quot;&gt;build()&lt;/a&gt;&lt;/code&gt; メソッドは、その工場、戻り &lt;code&gt;create()&lt;/code&gt; メソッドのインスタンス化し、このインターフェイスを初期化します。</target>
        </trans-unit>
        <trans-unit id="58a1a4ed8221a8dc1e2ab66f5b4e98ea645cadfd" translate="yes" xml:space="preserve">
          <source>Provides programmatic control of a reusable animation sequence, built using the &lt;code&gt;build()&lt;/code&gt; method of &lt;code&gt;&lt;a href=&quot;animationbuilder&quot;&gt;AnimationBuilder&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;build()&lt;/code&gt; method returns a factory, whose &lt;code&gt;create()&lt;/code&gt; method instantiates and initializes this interface.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;animationbuilder&quot;&gt;AnimationBuilder&lt;/a&gt;&lt;/code&gt; の &lt;code&gt;build()&lt;/code&gt; メソッドを使用して構築された、再利用可能なアニメーションシーケンスのプログラムによる制御を提供します。 &lt;code&gt;build()&lt;/code&gt; メソッドは、その工場、戻り &lt;code&gt;create()&lt;/code&gt; メソッドのインスタンス化し、このインターフェイスを初期化します。</target>
        </trans-unit>
        <trans-unit id="33651d3f3fb1d160b6d9bd373d5773bfff1dee2f" translate="yes" xml:space="preserve">
          <source>Provides programmatic control of a reusable animation sequence, built using the &lt;code&gt;build()&lt;/code&gt; method of &lt;code&gt;&lt;a href=&quot;animations/animationbuilder&quot;&gt;AnimationBuilder&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;build()&lt;/code&gt; method returns a factory, whose &lt;code&gt;create()&lt;/code&gt; method instantiates and initializes this interface.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;animations/animationbuilder&quot;&gt;AnimationBuilder&lt;/a&gt;&lt;/code&gt; の &lt;code&gt;build()&lt;/code&gt; メソッドを使用して構築された、再利用可能なアニメーションシーケンスのプログラムによる制御を提供します。 &lt;code&gt;build()&lt;/code&gt; メソッドは、その工場、戻り &lt;code&gt;create()&lt;/code&gt; メソッドのインスタンス化し、このインターフェイスを初期化します。</target>
        </trans-unit>
        <trans-unit id="9b74de36fac9103e8a23a75cc65a5e55c27abda2" translate="yes" xml:space="preserve">
          <source>Provides services that other application components can use.</source>
          <target state="translated">他のアプリケーションコンポーネントが使用できるサービスを提供します。</target>
        </trans-unit>
        <trans-unit id="ee31ee58a96e307c62cc23950dacff6aef2f0cec" translate="yes" xml:space="preserve">
          <source>Provides services that the other application components can use.</source>
          <target state="translated">他のアプリケーションコンポーネントが使用できるサービスを提供します。</target>
        </trans-unit>
        <trans-unit id="747b4cd373537a4f040abd7593ce6e1ba7c59672" translate="yes" xml:space="preserve">
          <source>Provides support for upgrading applications from Angular JS to Angular. The primary entry point is deprecated. Use the secondary entry point, &lt;code&gt;&lt;a href=&quot;upgrade/static&quot;&gt;upgrade/static&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">アプリケーションをAngularJSからAngularにアップグレードするためのサポートを提供します。プライマリエントリポイントは非推奨です。セカンダリエントリポイントである &lt;code&gt;&lt;a href=&quot;upgrade/static&quot;&gt;upgrade/static&lt;/a&gt;&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="ff991c0c03e1035aea145f4b7da55a45e0bee0a1" translate="yes" xml:space="preserve">
          <source>Provides support for upgrading routing applications from Angular JS to Angular.</source>
          <target state="translated">ルーティングアプリケーションをAngular JSからAngularにアップグレードするためのサポートを提供します。</target>
        </trans-unit>
        <trans-unit id="79aab6da2713355991f786bb57b0146d7ac753ac" translate="yes" xml:space="preserve">
          <source>Provides the control for the given name</source>
          <target state="translated">与えられた名前のコントロールを提供します。</target>
        </trans-unit>
        <trans-unit id="8202d6a8287bd60319467db36010ab7775997e2b" translate="yes" xml:space="preserve">
          <source>Provides tools for upgrading from the &lt;code&gt;$location&lt;/code&gt; service provided in AngularJS to Angular's &lt;a href=&quot;../../guide/upgrade#using-the-unified-angular-location-service&quot;&gt;unified location service&lt;/a&gt;.</source>
          <target state="translated">AngularJSで提供される &lt;code&gt;$location&lt;/code&gt; サービスからAngularの&lt;a href=&quot;../../guide/upgrade#using-the-unified-angular-location-service&quot;&gt;統合位置情報サービス&lt;/a&gt;にアップグレードするためのツールを提供します。</target>
        </trans-unit>
        <trans-unit id="0f455b7498a61fd7c96b4eb72c4068a49d349c4f" translate="yes" xml:space="preserve">
          <source>Provides tools for upgrading from the &lt;code&gt;$location&lt;/code&gt; service provided in AngularJS to Angular's &lt;a href=&quot;../guide/upgrade#using-the-unified-angular-location-service&quot;&gt;unified location service&lt;/a&gt;.</source>
          <target state="translated">AngularJSで提供される &lt;code&gt;$location&lt;/code&gt; サービスからAngularの&lt;a href=&quot;../guide/upgrade#using-the-unified-angular-location-service&quot;&gt;統合位置情報サービス&lt;/a&gt;にアップグレードするためのツールを提供します。</target>
        </trans-unit>
        <trans-unit id="81bad13220af84327cd38d58af7f3576f91e518a" translate="yes" xml:space="preserve">
          <source>Provides two-way data-binding, parsing, and validation for form controls.</source>
          <target state="translated">フォームコントロールのための双方向のデータバインディング、解析、検証を提供します。</target>
        </trans-unit>
        <trans-unit id="bb9c5e5e14bf9a68f0892495dd4456680789eb8c" translate="yes" xml:space="preserve">
          <source>Provides version information for all packages installed into &lt;code&gt;node_modules&lt;/code&gt; by the npm client. See &lt;a href=&quot;https://docs.npmjs.com/files/package-lock.json&quot;&gt;npm documentation&lt;/a&gt; for details. If you use the yarn client, this file will be &lt;a href=&quot;https://yarnpkg.com/lang/en/docs/yarn-lock/&quot;&gt;yarn.lock&lt;/a&gt; instead.</source>
          <target state="translated">npmクライアントによって &lt;code&gt;node_modules&lt;/code&gt; にインストールされたすべてのパッケージのバージョン情報を提供します。詳細については、&lt;a href=&quot;https://docs.npmjs.com/files/package-lock.json&quot;&gt;npmのドキュメント&lt;/a&gt;を参照してください。ヤーンクライアントを使用する場合、このファイルは代わりにヤーン。&lt;a href=&quot;https://yarnpkg.com/lang/en/docs/yarn-lock/&quot;&gt;ロック&lt;/a&gt;になります。</target>
        </trans-unit>
        <trans-unit id="a1f3eba6d80ef73de65802ad20df346f7e1692a5" translate="yes" xml:space="preserve">
          <source>Providing a custom validator</source>
          <target state="translated">カスタムバリデータの提供</target>
        </trans-unit>
        <trans-unit id="0dfaee2f6f116a78b47b69dd046ba40ae17f0ddb" translate="yes" xml:space="preserve">
          <source>Providing a router spy for &lt;em&gt;this component&lt;/em&gt; test suite happens to be as easy as providing a &lt;code&gt;HeroService&lt;/code&gt; spy.</source>
          <target state="translated">&lt;em&gt;このコンポーネント&lt;/em&gt;テストスイートにルータースパイを提供するのは、 &lt;code&gt;HeroService&lt;/code&gt; スパイを提供するのと同じくらい簡単です。</target>
        </trans-unit>
        <trans-unit id="87c05b6699d468083412915848d3a58b803e467c" translate="yes" xml:space="preserve">
          <source>Providing a service</source>
          <target state="translated">サービスの提供</target>
        </trans-unit>
        <trans-unit id="f758b5933ac8f87bcf11d903a4818a87ac5ca080" translate="yes" xml:space="preserve">
          <source>Providing a service in the &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; decorator using its &lt;code&gt;providers&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../api/core/component#viewProviders&quot;&gt;viewProviders&lt;/a&gt;&lt;/code&gt; property configures an &lt;code&gt;ElementInjector&lt;/code&gt;. For example, the following &lt;code&gt;TestComponent&lt;/code&gt; configures the &lt;code&gt;ElementInjector&lt;/code&gt; by providing the service as follows:</source>
          <target state="translated">&lt;code&gt;providers&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;../api/core/component#viewProviders&quot;&gt;viewProviders&lt;/a&gt;&lt;/code&gt; プロパティを使用して &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; デコレータでサービスを提供すると、 &lt;code&gt;ElementInjector&lt;/code&gt; が構成されます。たとえば、次の &lt;code&gt;TestComponent&lt;/code&gt; は、次のようにサービスを提供することによって &lt;code&gt;ElementInjector&lt;/code&gt; を構成します。</target>
        </trans-unit>
        <trans-unit id="8667f95c8d6d6032497d1eb5a685a9a0c99f6e2e" translate="yes" xml:space="preserve">
          <source>Providing a service in the &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; decorator using its &lt;code&gt;providers&lt;/code&gt; or &lt;code&gt;viewProviders&lt;/code&gt; property configures an &lt;code&gt;ElementInjector&lt;/code&gt;. For example, the following &lt;code&gt;TestComponent&lt;/code&gt; configures the &lt;code&gt;ElementInjector&lt;/code&gt; by providing the service as follows:</source>
          <target state="translated">でサービスを提供する &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; その使用デコレータ &lt;code&gt;providers&lt;/code&gt; または &lt;code&gt;viewProviders&lt;/code&gt; プロパティ設定し &lt;code&gt;ElementInjector&lt;/code&gt; を。たとえば、次の &lt;code&gt;TestComponent&lt;/code&gt; は、次のようにサービスを提供することによって &lt;code&gt;ElementInjector&lt;/code&gt; を構成します。</target>
        </trans-unit>
        <trans-unit id="5ab75bb136196a83a81e241eb6436efdf4c60701" translate="yes" xml:space="preserve">
          <source>Providing a singleton service</source>
          <target state="translated">シングルトンサービスの提供</target>
        </trans-unit>
        <trans-unit id="98ccf33dba233146a5aed05a35b2ef482e0b5498" translate="yes" xml:space="preserve">
          <source>Providing dependencies in NgModules</source>
          <target state="translated">NgModulesでの依存関係の提供</target>
        </trans-unit>
        <trans-unit id="aed0d70e5f6cebd9e9e3c5056f29826b09a02e98" translate="yes" xml:space="preserve">
          <source>Providing dependencies in modules</source>
          <target state="translated">モジュール内での依存関係の提供</target>
        </trans-unit>
        <trans-unit id="025158ef48c0e24c8476e3fa9acc7bb8431d7b36" translate="yes" xml:space="preserve">
          <source>Providing generation support</source>
          <target state="translated">世代支援の提供</target>
        </trans-unit>
        <trans-unit id="ee0fd17d9cf45eaceb9ed3050e791d808af9e432" translate="yes" xml:space="preserve">
          <source>Providing installation support</source>
          <target state="translated">導入支援の提供</target>
        </trans-unit>
        <trans-unit id="056018e2ab4674ddf211b8d8c0859cc45a70ce7d" translate="yes" xml:space="preserve">
          <source>Providing services</source>
          <target state="translated">サービスの提供</target>
        </trans-unit>
        <trans-unit id="cbc9952295f635438967dc9b2ddab45f118fc97b" translate="yes" xml:space="preserve">
          <source>Providing services in &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; &lt;a href=&quot;../api/core/component&quot;&gt;コンポーネント&lt;/a&gt;（）でサービスを提供する</target>
        </trans-unit>
        <trans-unit id="a7944c0f736389d481ac564fb987aa5a6c848bbd" translate="yes" xml:space="preserve">
          <source>Providing services in modules vs. components</source>
          <target state="translated">モジュール対コンポーネントでのサービス提供</target>
        </trans-unit>
        <trans-unit id="ac51cd4294aa1b2a5aee66d570f83fa58a143d7b" translate="yes" xml:space="preserve">
          <source>Proxy configuration file.</source>
          <target state="translated">プロキシ設定ファイル。</target>
        </trans-unit>
        <trans-unit id="0e86ed99293715243569378d313cb684f9dc6ca3" translate="yes" xml:space="preserve">
          <source>Proxy log levels are &lt;code&gt;info&lt;/code&gt; (the default), &lt;code&gt;debug&lt;/code&gt;, &lt;code&gt;warn&lt;/code&gt;, &lt;code&gt;error&lt;/code&gt;, and &lt;code&gt;silent&lt;/code&gt;.</source>
          <target state="translated">プロキシログレベルは、 &lt;code&gt;info&lt;/code&gt; （デフォルト）、 &lt;code&gt;debug&lt;/code&gt; 、 &lt;code&gt;warn&lt;/code&gt; 、 &lt;code&gt;error&lt;/code&gt; 、 &lt;code&gt;silent&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="b5119e9ea25163bffe862724260bc3d1343041e2" translate="yes" xml:space="preserve">
          <source>Proxy multiple entries</source>
          <target state="translated">複数のエントリをプロキシする</target>
        </trans-unit>
        <trans-unit id="dcdd72cd21d53fec0f196d1c6be8b3f2bd4cd199" translate="yes" xml:space="preserve">
          <source>Proxying to a backend server</source>
          <target state="translated">バックエンドサーバへのプロキシ</target>
        </trans-unit>
        <trans-unit id="00c90af14bd313fa9ced2d1de95fd73ba071b57a" translate="yes" xml:space="preserve">
          <source>Public API surface</source>
          <target state="translated">公開API表面</target>
        </trans-unit>
        <trans-unit id="8db0aa8489c076d646ed83d0785591b0a12e847e" translate="yes" xml:space="preserve">
          <source>Public domain</source>
          <target state="translated">パブリックドメイン</target>
        </trans-unit>
        <trans-unit id="547ca5ba25e06e7a974e12cb26f896e55c3e3ed3" translate="yes" xml:space="preserve">
          <source>Public symbols</source>
          <target state="translated">公共のシンボル</target>
        </trans-unit>
        <trans-unit id="a858cdee59dc4153f27cf9b6b21b190625fd9982" translate="yes" xml:space="preserve">
          <source>Publishing your library</source>
          <target state="translated">図書館の出版</target>
        </trans-unit>
        <trans-unit id="179f6f644c523fa27e67fcaba9dbd74e9f678fc3" translate="yes" xml:space="preserve">
          <source>Pure AngularJS applications can be automatically bootstrapped by using an &lt;code&gt;ng-app&lt;/code&gt; directive somewhere on the HTML page. But for hybrid applications, you manually bootstrap via the &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt;. Therefore, it is a good preliminary step to switch AngularJS applications to use the manual JavaScript &lt;a href=&quot;https://docs.angularjs.org/api/ng/function/angular.bootstrap&quot;&gt;&lt;code&gt;angular.bootstrap&lt;/code&gt;&lt;/a&gt; method even before switching them to hybrid mode.</source>
          <target state="translated">純粋なAngularJSアプリケーションは、HTMLページのどこかに &lt;code&gt;ng-app&lt;/code&gt; ディレクティブを使用して自動的にブートストラップできます。ただし、ハイブリッドアプリケーションの場合は、 &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt; を介して手動でブートストラップします。したがって、AngularJSアプリケーションをハイブリッドモードに切り替える前でも、手動のJavaScript &lt;a href=&quot;https://docs.angularjs.org/api/ng/function/angular.bootstrap&quot;&gt; &lt;code&gt;angular.bootstrap&lt;/code&gt; &lt;/a&gt;メソッドを使用するように切り替えることは、良い予備ステップです。</target>
        </trans-unit>
        <trans-unit id="4b7f90fdf2da497092a18a6bc45ba3c4f12e823d" translate="yes" xml:space="preserve">
          <source>Pure and impure pipes</source>
          <target state="translated">純粋なパイプと不純なパイプ</target>
        </trans-unit>
        <trans-unit id="7db9ba7ce2d64da8346dc7bbe64e9299d2d0a950" translate="yes" xml:space="preserve">
          <source>Pure pipes</source>
          <target state="translated">ピュアパイプ</target>
        </trans-unit>
        <trans-unit id="e623d5dadd9f4c5fad9b7f3fd0071b4f8bd49058" translate="yes" xml:space="preserve">
          <source>Pure pipes and pure functions</source>
          <target state="translated">ピュアパイプとピュア機能</target>
        </trans-unit>
        <trans-unit id="5bbb7f091909bcd9878a3757528b6daf128c91ae" translate="yes" xml:space="preserve">
          <source>Pure service modules that don't have public (exported) declarations. For example, there's no point in re-exporting &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt; because it doesn't export anything. Its only purpose is to add http service providers to the application as a whole.</source>
          <target state="translated">public（exported）宣言を持たない純粋なサービスモジュール。たとえば、 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt; は何もエクスポートしないため、再エクスポートしても意味がありません。その唯一の目的は、アプリケーション全体にhttpサービスプロバイダーを追加することです。</target>
        </trans-unit>
        <trans-unit id="a0fb821bdaf93ed9a1f1e920acfb2840eff5b153" translate="yes" xml:space="preserve">
          <source>Purpose</source>
          <target state="translated">Purpose</target>
        </trans-unit>
        <trans-unit id="3cc1997089b1b6ce49ba3955b42550ad27889873" translate="yes" xml:space="preserve">
          <source>Purpose and Timing</source>
          <target state="translated">目的とタイミング</target>
        </trans-unit>
        <trans-unit id="b8fe58ffd0349acdd100420150f69d1281dd76ce" translate="yes" xml:space="preserve">
          <source>Push Notifications</source>
          <target state="translated">プッシュ通知</target>
        </trans-unit>
        <trans-unit id="aed30fc09e1412ff8de0e7d508541d501b797336" translate="yes" xml:space="preserve">
          <source>Put cleanup logic in &lt;code&gt;ngOnDestroy()&lt;/code&gt;, the logic that &lt;em&gt;must&lt;/em&gt; run before Angular destroys the directive.</source>
          <target state="translated">クリーンアップロジックを &lt;code&gt;ngOnDestroy()&lt;/code&gt; に配置します。これは、Angularがディレクティブを破棄する前に実行する&lt;em&gt;必要&lt;/em&gt;があるロジックです。</target>
        </trans-unit>
        <trans-unit id="c85ce16343cd1130f92be9d0f687c18880a9136b" translate="yes" xml:space="preserve">
          <source>Put cleanup logic in &lt;code&gt;ngOnDestroy()&lt;/code&gt;, the logic that must run before Angular destroys the directive.</source>
          <target state="translated">クリーンアップロジックを &lt;code&gt;ngOnDestroy()&lt;/code&gt; に配置します。これは、Angularがディレクティブを破棄する前に実行する必要があるロジックです。</target>
        </trans-unit>
        <trans-unit id="46bd4b4fa2290cf6e1be2c1510e829c5b12d5567" translate="yes" xml:space="preserve">
          <source>Put commonly used directives, pipes, and components into one NgModule, typically named &lt;code&gt;SharedModule&lt;/code&gt;, and then import just that NgModule wherever you need it in other parts of your app. You can import the shared NgModule in your domain NgModules, including &lt;a href=&quot;lazy-loading-ngmodules&quot;&gt;lazy-loaded NgModules&lt;/a&gt;. One example is &lt;code&gt;SharedModule&lt;/code&gt; in the , which provides the &lt;code&gt;AwesomePipe&lt;/code&gt; custom pipe and &lt;code&gt;HighlightDirective&lt;/code&gt; directive.</source>
          <target state="translated">一般的に使用されるディレクティブ、パイプ、およびコンポーネントを1つのNgModule（通常は &lt;code&gt;SharedModule&lt;/code&gt; という名前）に配置し、アプリの他の部分で必要な場所にそのNgModuleだけをインポートします。&lt;a href=&quot;lazy-loading-ngmodules&quot;&gt;遅延ロードされたNgModule&lt;/a&gt;を含むドメインNgModuleに共有NgModuleをインポートできます。一例は、 &lt;code&gt;SharedModule&lt;/code&gt; 提供で、 &lt;code&gt;AwesomePipe&lt;/code&gt; のカスタムパイプと &lt;code&gt;HighlightDirective&lt;/code&gt; ディレクティブを。</target>
        </trans-unit>
        <trans-unit id="43ca636f56432ea4588cdf384932df664f341634" translate="yes" xml:space="preserve">
          <source>Put it all together</source>
          <target state="translated">まとめる</target>
        </trans-unit>
        <trans-unit id="bdf20110d023249fe8bf093d40499c6a9de89f0c" translate="yes" xml:space="preserve">
          <source>Put presentation logic in the component class</source>
          <target state="translated">コンポーネントクラスにプレゼンテーションロジックを入れる</target>
        </trans-unit>
        <trans-unit id="a1d8ad4396194d3bbede4c3d23dddea8c8f3f743" translate="yes" xml:space="preserve">
          <source>Put the child selector, here &lt;code&gt;&amp;lt;app-item-output&amp;gt;&lt;/code&gt;, within the parent component's template, &lt;code&gt;app.component.html&lt;/code&gt;.</source>
          <target state="translated">親コンポーネントのテンプレート &lt;code&gt;app.component.html&lt;/code&gt; 内に、子セレクター（ここでは &lt;code&gt;&amp;lt;app-item-output&amp;gt;&lt;/code&gt; ）を配置します。</target>
        </trans-unit>
        <trans-unit id="cb692eba951411fb5b87b156073a51072c4fa245" translate="yes" xml:space="preserve">
          <source>Put the copy in the &lt;code&gt;&lt;a href=&quot;../api/common/nglocalelocalization#locale&quot;&gt;locale&lt;/a&gt;&lt;/code&gt; folder.</source>
          <target state="translated">コピーを &lt;code&gt;&lt;a href=&quot;../api/common/nglocalelocalization#locale&quot;&gt;locale&lt;/a&gt;&lt;/code&gt; フォルダーに配置します。</target>
        </trans-unit>
        <trans-unit id="8defa1c462b46d04def670514bdc24ba1bf715b7" translate="yes" xml:space="preserve">
          <source>Put the copy in the &lt;code&gt;src/locale&lt;/code&gt; folder.</source>
          <target state="translated">コピーを &lt;code&gt;src/locale&lt;/code&gt; フォルダーに置きます。</target>
        </trans-unit>
        <trans-unit id="436bf10648b085e2f03a5e5fa355472836a058a3" translate="yes" xml:space="preserve">
          <source>Putting code into a separate library is more complex than simply putting everything in one app. It requires more of an investment in time and thought for managing, maintaining, and updating the library. This complexity can pay off, however, when the library is being used in multiple apps.</source>
          <target state="translated">コードを別のライブラリに入れることは、単にすべてを1つのアプリに入れるよりも複雑です。ライブラリを管理、維持、更新するためには、より多くの時間と労力が必要になります。しかし、ライブラリが複数のアプリで使用されている場合は、この複雑さが報われます。</target>
        </trans-unit>
        <trans-unit id="2ea0e0f92d43844529e33c1fcffa71baa789c203" translate="yes" xml:space="preserve">
          <source>Q (10.0), Pie (9.0), Oreo (8.0), Nougat (7.0)</source>
          <target state="translated">Q(10.0)、パイ(9.0)、オレオ(8.0)、ヌガー(7.0</target>
        </trans-unit>
        <trans-unit id="c02912d8e6dcddbd779e1544c6f3f00babfa879a" translate="yes" xml:space="preserve">
          <source>Qualify dependency lookup with parameter decorators</source>
          <target state="translated">パラメータデコレータによる依存性ルックアップの修飾</target>
        </trans-unit>
        <trans-unit id="0bcad30e2e6ce03edaa562efea9e18b7ae5fc553" translate="yes" xml:space="preserve">
          <source>Queries the view that is removed and animates it to slide far to the right.</source>
          <target state="translated">削除されたビューを取得し、右に大きくスライドするようにアニメーションさせます。</target>
        </trans-unit>
        <trans-unit id="a618b4be8d3ac72545f3085fe616d342b7139fba" translate="yes" xml:space="preserve">
          <source>Query</source>
          <target state="translated">Query</target>
        </trans-unit>
        <trans-unit id="a029560d8411f6bf73354ff2a95633b1dd3c69d4" translate="yes" xml:space="preserve">
          <source>Query for the &lt;em&gt;&amp;lt;h1&amp;gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&amp;lt;h1&amp;gt;の&lt;/em&gt;クエリ&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="70267b58fe69795cee30148c1b0ee6cb6009e2a1" translate="yes" xml:space="preserve">
          <source>Query parameters and fragments</source>
          <target state="translated">クエリのパラメータとフラグメント</target>
        </trans-unit>
        <trans-unit id="d30db6d348f9f247f48063cbfc225e1b4d54409b" translate="yes" xml:space="preserve">
          <source>Query parameters and fragments are also available through the &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; service. Just like route parameters, the query parameters and fragments are provided as an &lt;code&gt;Observable&lt;/code&gt;. The updated Crisis Admin component feeds the &lt;code&gt;Observable&lt;/code&gt; directly into the template using the &lt;code&gt;&lt;a href=&quot;../api/common/asyncpipe&quot;&gt;AsyncPipe&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">クエリパラメータとフラグメントは、 &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; サービスからも利用できます。ルートパラメータと同様に、クエリパラメータとフラグメントは &lt;code&gt;Observable&lt;/code&gt; として提供されます。更新された &lt;code&gt;&lt;a href=&quot;../api/common/asyncpipe&quot;&gt;AsyncPipe&lt;/a&gt;&lt;/code&gt; は、AsyncPipeを使用して &lt;code&gt;Observable&lt;/code&gt; をテンプレートに直接フィードします。</target>
        </trans-unit>
        <trans-unit id="ae932d00e1b875d5358c78dd469269566befef04" translate="yes" xml:space="preserve">
          <source>Query parameters.</source>
          <target state="translated">クエリのパラメータ。</target>
        </trans-unit>
        <trans-unit id="2aa04d862ecdcb132994e603854d7875a2776e7f" translate="yes" xml:space="preserve">
          <source>Query the view for the form input element, and create a custom &quot;input&quot; event for the test.</source>
          <target state="translated">フォーム入力要素のビューをクエリし、テスト用のカスタム「入力」イベントを作成します。</target>
        </trans-unit>
        <trans-unit id="8de688cad77b3bd9109d93bd32268107b315f772" translate="yes" xml:space="preserve">
          <source>Query the view for the form input element.</source>
          <target state="translated">フォーム入力要素のビューを取得します。</target>
        </trans-unit>
        <trans-unit id="0147dca38477f3a5a9be1219b22328bb010f7dac" translate="yes" xml:space="preserve">
          <source>QueryList</source>
          <target state="translated">QueryList</target>
        </trans-unit>
        <trans-unit id="96ee8d3424170d88c85a6c53daec4b42daf0cd09" translate="yes" xml:space="preserve">
          <source>QueryParamsHandling</source>
          <target state="translated">QueryParamsHandling</target>
        </trans-unit>
        <trans-unit id="7bcad0f705586dc98a34fe539ac1afb898b0bc0d" translate="yes" xml:space="preserve">
          <source>Querying the build graph</source>
          <target state="translated">ビルドグラフの問い合わせ</target>
        </trans-unit>
        <trans-unit id="882bc2143837d14088fd99457a6e1e26efc0d00f" translate="yes" xml:space="preserve">
          <source>Querying the view containers</source>
          <target state="translated">ビューコンテナへの問い合わせ</target>
        </trans-unit>
        <trans-unit id="946257a5e24d848457988f38e120cf9fa01c8afd" translate="yes" xml:space="preserve">
          <source>Question form components</source>
          <target state="translated">質問フォームの構成要素</target>
        </trans-unit>
        <trans-unit id="694f84d59b7d66eb86a82e5f97c9c021ddd2cd24" translate="yes" xml:space="preserve">
          <source>Question model</source>
          <target state="translated">質問モデル</target>
        </trans-unit>
        <trans-unit id="cb0a1d833b62839e99a99af93ec9a7e7efeb2edb" translate="yes" xml:space="preserve">
          <source>Questionnaire data</source>
          <target state="translated">データアンケート</target>
        </trans-unit>
        <trans-unit id="e7faea1a87db018fb2d7a4c86b27476d8ef729f4" translate="yes" xml:space="preserve">
          <source>Quick execution</source>
          <target state="translated">迅速な実行</target>
        </trans-unit>
        <trans-unit id="15385e5c37b34e622261935118dfc8bfe9961b8e" translate="yes" xml:space="preserve">
          <source>Quick info</source>
          <target state="translated">クイックインフォメーション</target>
        </trans-unit>
        <trans-unit id="1a11f2e9058cd0fcbd7823fe881477a77b51a320" translate="yes" xml:space="preserve">
          <source>Quick info and navigation</source>
          <target state="translated">クイック情報とナビゲーション</target>
        </trans-unit>
        <trans-unit id="ece3e0ab30befddafad9fd9bbd3da9599a27c6f8" translate="yes" xml:space="preserve">
          <source>RESOURCE_CACHE_PROVIDER</source>
          <target state="translated">RESOURCE_CACHE_PROVIDER</target>
        </trans-unit>
        <trans-unit id="0fcae65af39014acc15fa243db9ff97c579e8854" translate="yes" xml:space="preserve">
          <source>ROUTER_CONFIGURATION</source>
          <target state="translated">ROUTER_CONFIGURATION</target>
        </trans-unit>
        <trans-unit id="fda6334ec46c7993b0298bdf16a0bca518c9ef7f" translate="yes" xml:space="preserve">
          <source>ROUTER_INITIALIZER</source>
          <target state="translated">ROUTER_INITIALIZER</target>
        </trans-unit>
        <trans-unit id="cc0ad686900ce387999ab3c4438af03da7b81568" translate="yes" xml:space="preserve">
          <source>ROUTES</source>
          <target state="translated">ROUTES</target>
        </trans-unit>
        <trans-unit id="ccfcde6b9b11aa68850125350c8fb34f36d4d469" translate="yes" xml:space="preserve">
          <source>Radio buttons: &lt;code&gt;&lt;a href=&quot;radiocontrolvalueaccessor&quot;&gt;RadioControlValueAccessor&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">ラジオボタン： &lt;code&gt;&lt;a href=&quot;radiocontrolvalueaccessor&quot;&gt;RadioControlValueAccessor&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2f7ef0603278b505cc6d2d71d35baa4aa1750211" translate="yes" xml:space="preserve">
          <source>RadioControlValueAccessor</source>
          <target state="translated">RadioControlValueAccessor</target>
        </trans-unit>
        <trans-unit id="607b60904ab3566b835bab04aee31a66c903d40b" translate="yes" xml:space="preserve">
          <source>Range of week days that are considered the week-end for the given locale.</source>
          <target state="translated">指定したロケールの週末とみなされる曜日の範囲。</target>
        </trans-unit>
        <trans-unit id="41dd49fa1c2918acfc0cc635f95bc4acfda156a1" translate="yes" xml:space="preserve">
          <source>RangeValueAccessor</source>
          <target state="translated">RangeValueAccessor</target>
        </trans-unit>
        <trans-unit id="cce370d2f9781af0f85d591ccdfad1fe365a619f" translate="yes" xml:space="preserve">
          <source>Rare</source>
          <target state="translated">Rare</target>
        </trans-unit>
        <trans-unit id="b7d39a8840296fb99e898a3f6f1c2bb04903cd55" translate="yes" xml:space="preserve">
          <source>Rather than defining all member classes in one giant file as a JavaScript module, declare which components, directives, and pipes belong to the NgModule in the &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule#declarations&quot;&gt;NgModule.declarations&lt;/a&gt;&lt;/code&gt; list. These classes are called &lt;a href=&quot;glossary#declarable&quot;&gt;declarables&lt;/a&gt;. An NgModule can export only the declarable classes it owns or imports from other NgModules. It doesn't declare or export any other kind of class. Declarables are the only classes that matter to the Angular compilation process.</source>
          <target state="translated">1つの巨大なファイル内のすべてのメンバークラスをJavaScriptモジュールとして定義するのではなく、 &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule#declarations&quot;&gt;NgModule.declarations&lt;/a&gt;&lt;/code&gt; リストで、どのコンポーネント、ディレクティブ、およびパイプがNgModuleに属するかを宣言します。これらのクラスは&lt;a href=&quot;glossary#declarable&quot;&gt;宣言可能&lt;/a&gt;と呼ばれます。 NgModuleは、所有している、または他のNgModuleからインポートしている宣言可能なクラスのみをエクスポートできます。他の種類のクラスを宣言またはエクスポートすることはありません。宣言可能ファイルは、Angularコンパイルプロセスに関係する唯一のクラスです。</target>
        </trans-unit>
        <trans-unit id="d3973b784fd7bd34452ca4b77c04f0f047b51674" translate="yes" xml:space="preserve">
          <source>Rather than forward every &lt;code&gt;searchText&lt;/code&gt; value directly to the injected &lt;code&gt;PackageSearchService&lt;/code&gt;, the code in &lt;code&gt;ngOnInit()&lt;/code&gt; pipes search values through three operators, so that a search value reaches the service only if it's a new value and the user has stopped typing.</source>
          <target state="translated">&lt;code&gt;ngOnInit()&lt;/code&gt; のコードは、すべての &lt;code&gt;searchText&lt;/code&gt; 値を挿入された &lt;code&gt;PackageSearchService&lt;/code&gt; に直接転送するのではなく、3つの演算子を介して検索値をパイプ処理するため、検索値が新しい値であり、ユーザーが入力を停止した場合にのみサービスに到達します。</target>
        </trans-unit>
        <trans-unit id="063b47d2f2ef26fe86f625d01121697f58c8f286" translate="yes" xml:space="preserve">
          <source>Rather than forward every &lt;code&gt;searchText&lt;/code&gt; value directly to the injected &lt;code&gt;PackageSearchService&lt;/code&gt;, the code in &lt;code&gt;ngOnInit()&lt;/code&gt;&lt;em&gt;pipes&lt;/em&gt; search values through three operators:</source>
          <target state="translated">&lt;code&gt;ngOnInit()&lt;/code&gt; のコードは、注入された &lt;code&gt;PackageSearchService&lt;/code&gt; にすべての &lt;code&gt;searchText&lt;/code&gt; 値を直接転送するのではなく、3つの演算子を介して検索値を&lt;em&gt;パイプ処理し&lt;/em&gt;ます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f1e9f7a30260ef4ffa7fdd21d24c26259975cb6d" translate="yes" xml:space="preserve">
          <source>Rather than using this pattern, separate the two decorators into their own properties and add fallback logic as in the following example:</source>
          <target state="translated">このパターンを使用するのではなく、次の例のように、2 つのデコレータをそれぞれのプロパティに分離し、フォールバック・ロジックを追加します。</target>
        </trans-unit>
        <trans-unit id="d07b230efe466a43119cf25f549da16039351ce0" translate="yes" xml:space="preserve">
          <source>Rather than wonder when the test fixture will or won't perform change detection, the samples in this guide &lt;em&gt;always call&lt;/em&gt;&lt;code&gt;&lt;a href=&quot;../api/core/testing/componentfixture#detectChanges&quot;&gt;detectChanges()&lt;/a&gt;&lt;/code&gt;&lt;em&gt;explicitly&lt;/em&gt;. There is no harm in calling &lt;code&gt;&lt;a href=&quot;../api/core/testing/componentfixture#detectChanges&quot;&gt;detectChanges()&lt;/a&gt;&lt;/code&gt; more often than is strictly necessary.</source>
          <target state="translated">テストフィクスチャがいつ変更検出を実行するかしないかを &lt;code&gt;&lt;a href=&quot;../api/core/testing/componentfixture#detectChanges&quot;&gt;detectChanges()&lt;/a&gt;&lt;/code&gt; はなく、このガイドのサンプルは&lt;em&gt;常に&lt;/em&gt;&lt;em&gt;明示的に&lt;/em&gt;detectChanges（）を&lt;em&gt;呼び出します&lt;/em&gt;。厳密に必要な場合よりも頻繁に &lt;code&gt;&lt;a href=&quot;../api/core/testing/componentfixture#detectChanges&quot;&gt;detectChanges()&lt;/a&gt;&lt;/code&gt; を呼び出しても害はありません。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="620128724ca4325e7673cd82b80b070bd354603b" translate="yes" xml:space="preserve">
          <source>Rather than wonder when the test fixture will or won't perform change detection, the samples in this guide &lt;em&gt;always call&lt;/em&gt;&lt;code&gt;detectChanges()&lt;/code&gt;&lt;em&gt;explicitly&lt;/em&gt;. There is no harm in calling &lt;code&gt;detectChanges()&lt;/code&gt; more often than is strictly necessary.</source>
          <target state="translated">このガイドのサンプルでは、​​テストフィクスチャが変更検出を実行するかどうかを &lt;code&gt;detectChanges()&lt;/code&gt; はなく、&lt;em&gt;常に&lt;/em&gt;detectChanges（）を&lt;em&gt;明示的に&lt;/em&gt;&lt;em&gt;呼び出します&lt;/em&gt;。厳密に必要な頻度よりも頻繁に &lt;code&gt;detectChanges()&lt;/code&gt; を呼び出しても害はありません。</target>
        </trans-unit>
        <trans-unit id="cd97c538d031aa909359fb8f635a57f7cada53ff" translate="yes" xml:space="preserve">
          <source>Re-attaches the previously detached view to the change detection tree. Views are attached to the tree by default.</source>
          <target state="translated">以前に切り離されたビューを変更検出ツリーに再アタッチします。デフォルトでは、ビューはツリーにアタッチされます。</target>
        </trans-unit>
        <trans-unit id="625bb98abae6906871d213e7c9b8c2b1fe2f099d" translate="yes" xml:space="preserve">
          <source>Re-export the Angular &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; by adding it to the module &lt;code&gt;exports&lt;/code&gt; array. By re-exporting the &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; here the components declared in &lt;code&gt;AppModule&lt;/code&gt; will have access to router directives such as &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Angular &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; をモジュールの &lt;code&gt;exports&lt;/code&gt; 配列に追加して、再エクスポートします。再エクスポートして &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; をここに宣言したコンポーネント &lt;code&gt;AppModule&lt;/code&gt; はのようなルータのディレクティブへのアクセスがあります &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="606d67fe5a2b06e1962be051489256995cc17de6" translate="yes" xml:space="preserve">
          <source>Re-export the Angular &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; by adding it to the module &lt;code&gt;exports&lt;/code&gt; array. By re-exporting the &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; here, the components declared in &lt;code&gt;AppModule&lt;/code&gt; have access to router directives such as &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Angular &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; をモジュール &lt;code&gt;exports&lt;/code&gt; 配列に追加して、再エクスポートします。再エクスポートして &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; をここで、コンポーネントがで宣言さ &lt;code&gt;AppModule&lt;/code&gt; のようなルータのディレクティブにアクセスしてい &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="32c35abee2316ac8365352584a205ea47ed77e67" translate="yes" xml:space="preserve">
          <source>Re-exported by &lt;code&gt;&lt;a href=&quot;../platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt;, which is included automatically in the root &lt;code&gt;AppModule&lt;/code&gt; when you create a new app with the CLI &lt;code&gt;new&lt;/code&gt; command.</source>
          <target state="translated">CLIの &lt;code&gt;new&lt;/code&gt; コマンドで新しいアプリを作成すると、ルート &lt;code&gt;AppModule&lt;/code&gt; に自動的に含まれる &lt;code&gt;&lt;a href=&quot;../platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; によって再エクスポートされます。</target>
        </trans-unit>
        <trans-unit id="4f791cc02c308ccab5a14fb29d64870ba1ad4f2b" translate="yes" xml:space="preserve">
          <source>Re-label the &lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt; to &lt;code&gt;&amp;lt;h2&amp;gt;HEROES&amp;lt;/h2&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt; のラベルを &lt;code&gt;&amp;lt;h2&amp;gt;HEROES&amp;lt;/h2&amp;gt;&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="6bc11f344f43e2d39d1212e2b21c3d6581a73583" translate="yes" xml:space="preserve">
          <source>Re-open the &lt;code&gt;app.module.ts&lt;/code&gt; file, import and add &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt; to the &lt;code&gt;imports&lt;/code&gt; array of the &lt;code&gt;AppModule&lt;/code&gt;:</source>
          <target state="translated">再オープン &lt;code&gt;app.module.ts&lt;/code&gt; 、ファイルをインポートおよび追加 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt; をする &lt;code&gt;imports&lt;/code&gt; の配列 &lt;code&gt;AppModule&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="8cc59a8bbae2371ae1e0fd7beac79afcae776683" translate="yes" xml:space="preserve">
          <source>Reactive</source>
          <target state="translated">Reactive</target>
        </trans-unit>
        <trans-unit id="a1f4b6e98412e63a4fc1e6a6bd07371c114e7c61" translate="yes" xml:space="preserve">
          <source>Reactive Forms</source>
          <target state="translated">リアクティブフォーム</target>
        </trans-unit>
        <trans-unit id="2ff98e0fc7f01b04bad4025de09759599afc991e" translate="yes" xml:space="preserve">
          <source>Reactive Forms Guide</source>
          <target state="translated">リアクティブフォームガイド</target>
        </trans-unit>
        <trans-unit id="bb83ca557e89db92e40dccba428cac042f0bc1cd" translate="yes" xml:space="preserve">
          <source>Reactive and template-driven forms both use a form model to track value changes between Angular forms and form input elements. The examples below show how the form model is defined and created.</source>
          <target state="translated">リアクティブフォームとテンプレート駆動型フォームはどちらもフォームモデルを使用して、Angularフォームとフォーム入力要素間の値の変化を追跡します。以下の例では、フォームモデルがどのように定義され、作成されるかを示しています。</target>
        </trans-unit>
        <trans-unit id="60538300b65a09cb0fd1bbc49e1c6db90986bbe2" translate="yes" xml:space="preserve">
          <source>Reactive and template-driven forms differ in how they handle data flowing from the user or from programmatic changes. The following diagrams illustrate both kinds of data flow for each type of form, using the favorite-color input field defined above.</source>
          <target state="translated">リアクティブ・フォームとテンプレート駆動型フォームは、ユーザーからのデータフローやプログラム変更からのデータフローをどのように処理するかで異なります。以下の図は、上記で定義したお気に入りの色の入力フィールドを使用して、フォームのタイプごとに両方の種類のデータフローを説明しています。</target>
        </trans-unit>
        <trans-unit id="351e224cbb414e5f3de3ba6c1592e1d8bba74c92" translate="yes" xml:space="preserve">
          <source>Reactive and template-driven forms process and manage form data differently. Each offers different advantages.</source>
          <target state="translated">リアクティブフォームとテンプレート駆動型フォームでは、フォームデータの処理と管理が異なります。それぞれに異なる利点があります。</target>
        </trans-unit>
        <trans-unit id="a9adf5b89b23909fd127c82ffa7dd71bb5d8cc8c" translate="yes" xml:space="preserve">
          <source>Reactive form validation</source>
          <target state="translated">リアクティブなフォーム検証</target>
        </trans-unit>
        <trans-unit id="de0a6db1d9885f2b4eb4070df239c7b7b0639bbe" translate="yes" xml:space="preserve">
          <source>Reactive forms</source>
          <target state="translated">反応性のあるフォーム</target>
        </trans-unit>
        <trans-unit id="a0c4037886566475f36761df0b6268abbbf65193" translate="yes" xml:space="preserve">
          <source>Reactive forms API</source>
          <target state="translated">リアクティブフォーム API</target>
        </trans-unit>
        <trans-unit id="05acd9f9a0ce2ad2657f3e7e94548c309f21a70a" translate="yes" xml:space="preserve">
          <source>Reactive forms API summary</source>
          <target state="translated">リアクティブフォーム API の概要</target>
        </trans-unit>
        <trans-unit id="deb563931aa0525b4c0723e0bc8434ba5ee3813f" translate="yes" xml:space="preserve">
          <source>Reactive forms also provide a straightforward path to testing because you are assured that your data is consistent and predictable when requested. Any consumers of the streams have access to manipulate that data safely.</source>
          <target state="translated">リアクティブなフォームは、要求されたときにデータが一貫しており、予測可能であることが保証されているため、テストへの簡単なパスも提供します。ストリームの消費者は、そのデータを安全に操作するためにアクセスすることができます。</target>
        </trans-unit>
        <trans-unit id="b3022dcfb95b653f0fde382cf327d3b565be9ec1" translate="yes" xml:space="preserve">
          <source>Reactive forms and template-driven forms process and manage form data differently. Each approach offers different advantages.</source>
          <target state="translated">リアクティブフォームとテンプレート駆動型フォームでは、フォームデータの処理と管理が異なります。それぞれのアプローチには異なる利点があります。</target>
        </trans-unit>
        <trans-unit id="029c4feb39108e5bd909fd45cbbfc8f8a3140761" translate="yes" xml:space="preserve">
          <source>Reactive forms are more scalable than template-driven forms. They provide direct access to the underlying form API, and synchronous access to the form data model, making creating large-scale forms easier. Reactive forms require less setup for testing, and testing does not require deep understanding of change detection to properly test form updates and validation.</source>
          <target state="translated">リアクティブフォームはテンプレート駆動型のフォームよりもスケーラブルです。リアクティブフォームは、基礎となるフォーム API への直接アクセスと、フォームデータモデルへの同期アクセスを提供し、大規模なフォームの作成を容易にします。リアクティブフォームはテストのためのセットアップが少なくて済みますし、フォームの更新や検証を適切にテストするために変更検出を深く理解する必要もありません。</target>
        </trans-unit>
        <trans-unit id="c31ea3ae7bc965f3b475630c6889b8511cc61ea2" translate="yes" xml:space="preserve">
          <source>Reactive forms belongs to a different &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; called &lt;code&gt;&lt;a href=&quot;../api/forms/reactiveformsmodule&quot;&gt;ReactiveFormsModule&lt;/a&gt;&lt;/code&gt;, so in order to access any reactive forms directives, you have to import &lt;code&gt;&lt;a href=&quot;../api/forms/reactiveformsmodule&quot;&gt;ReactiveFormsModule&lt;/a&gt;&lt;/code&gt; from the &lt;code&gt;@angular/forms&lt;/code&gt; library.</source>
          <target state="translated">リアクティブフォームはReactiveFormsModule と呼ばれる別の &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; に属しているため、 &lt;code&gt;&lt;a href=&quot;../api/forms/reactiveformsmodule&quot;&gt;ReactiveFormsModule&lt;/a&gt;&lt;/code&gt; フォームディレクティブにアクセスするには、 &lt;code&gt;@angular/forms&lt;/code&gt; ライブラリから &lt;code&gt;&lt;a href=&quot;../api/forms/reactiveformsmodule&quot;&gt;ReactiveFormsModule&lt;/a&gt;&lt;/code&gt; をインポートする必要があります。</target>
        </trans-unit>
        <trans-unit id="7b691c9f7b31dff209413e0d8a6f527d04218912" translate="yes" xml:space="preserve">
          <source>Reactive forms differ from &lt;a href=&quot;forms&quot;&gt;template-driven forms&lt;/a&gt; in distinct ways. Reactive forms provide more predictability with synchronous access to the data model, immutability with observable operators, and change tracking through observable streams.</source>
          <target state="translated">リアクティブフォームは、&lt;a href=&quot;forms&quot;&gt;テンプレート駆動型フォームと&lt;/a&gt;は異なる点で異なります。リアクティブフォームは、データモデルへの同期アクセスによる予測可能性の向上、監視可能な演算子による不変性、および監視可能なストリームによる変更の追跡を提供します。</target>
        </trans-unit>
        <trans-unit id="8e5d5b79a2203308e6c0a813577a4a37628cbc60" translate="yes" xml:space="preserve">
          <source>Reactive forms differ from template-driven forms in distinct ways. Reactive forms provide more predictability with synchronous access to the data model, immutability with observable operators, and change tracking through observable streams. If you prefer direct access to modify data in your template, template-driven forms are less explicit because they rely on directives embedded in the template, along with mutable data to track changes asynchronously. See the &lt;a href=&quot;forms-overview&quot;&gt;Forms Overview&lt;/a&gt; for detailed comparisons between the two paradigms.</source>
          <target state="translated">反応型フォームは、テンプレート駆動型フォームとは明確に異なります。リアクティブフォームは、データモデルへの同期アクセスによる予測可能性、オブザーバブルオペレーターによる不変性、およびオブザーバブルストリームによる変更追跡を提供します。テンプレート内のデータを変更するための直接アクセスを希望する場合、テンプレート駆動型フォームは、変更を非同期で追跡するための可変データとともに、テンプレートに埋め込まれたディレクティブに依存しているため、それほど明確ではありません。2つのパラダイムの詳細な比較については、&lt;a href=&quot;forms-overview&quot;&gt;フォームの概要&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="cd9ac24d872d63b17556cfae2327e381716155de" translate="yes" xml:space="preserve">
          <source>Reactive forms give you access to the form control state and value at a point in time. You can manipulate the current state and value through the component class or the component template. The following examples display the value of the form control instance and change it.</source>
          <target state="translated">リアクティブフォームは、ある時点でのフォームコントロールの状態と値へのアクセスを提供します。現在の状態と値は、コンポーネント・クラスまたはコンポーネント・テンプレートを通して操作できます。以下の例では、フォームコントロールのインスタンスの値を表示し、それを変更しています。</target>
        </trans-unit>
        <trans-unit id="ec0d0d2ab1d11c930b6b1582276de9d1cd2bddc2" translate="yes" xml:space="preserve">
          <source>Reactive forms have methods to change a control's value programmatically, which gives you the flexibility to update the value without user interaction. A form control instance provides a &lt;code&gt;setValue()&lt;/code&gt; method that updates the value of the form control and validates the structure of the value provided against the control's structure. For example, when retrieving form data from a backend API or service, use the &lt;code&gt;setValue()&lt;/code&gt; method to update the control to its new value, replacing the old value entirely.</source>
          <target state="translated">リアクティブフォームには、プログラムでコントロールの値を変更するためのメソッドがあり、ユーザーが操作しなくても値を柔軟に更新できます。フォームコントロールインスタンスは、フォームコントロールの値を更新し、コントロールの構造に対して提供された値の構造を検証する &lt;code&gt;setValue()&lt;/code&gt; メソッドを提供します。たとえば、バックエンドAPIまたはサービスからフォームデータを取得する場合、 &lt;code&gt;setValue()&lt;/code&gt; メソッドを使用してコントロールを新しい値に更新し、古い値を完全に置き換えます。</target>
        </trans-unit>
        <trans-unit id="a77ac95993e373741c843f4847040ca277f5c8cb" translate="yes" xml:space="preserve">
          <source>Reactive forms have properties that use observables to monitor form control values. The &lt;a href=&quot;../api/forms/formcontrol&quot;&gt;&lt;code&gt;FormControl&lt;/code&gt;&lt;/a&gt; properties &lt;code&gt;valueChanges&lt;/code&gt; and &lt;code&gt;statusChanges&lt;/code&gt; contain observables that raise change events. Subscribing to an observable form-control property is a way of triggering application logic within the component class. For example:</source>
          <target state="translated">反応性フォームには、オブザーバブルを使用してフォームコントロール値を監視するプロパティがあります。&lt;a href=&quot;../api/forms/formcontrol&quot;&gt; &lt;code&gt;FormControl&lt;/code&gt; の&lt;/a&gt;プロパティ &lt;code&gt;valueChanges&lt;/code&gt; と &lt;code&gt;statusChanges&lt;/code&gt; は昇給変更イベントという観測が含まれています。監視可能なフォームコントロールプロパティをサブスクライブすることは、コンポーネントクラス内でアプリケーションロジックをトリガーする方法です。例えば：</target>
        </trans-unit>
        <trans-unit id="3bb4ab92a56dcc4defcfb2ac4515b8029610a941" translate="yes" xml:space="preserve">
          <source>Reactive forms include a set of validator functions for common use cases. These functions receive a control to validate against and return an error object or a null value based on the validation check.</source>
          <target state="translated">リアクティブフォームには、一般的なユースケースに対応したバリデータ関数のセットが含まれています。これらの関数は、バリデーションを行うコントロールを受け取り、バリデーションチェックに基づいてエラーオブジェクトまたはヌル値を返します。</target>
        </trans-unit>
        <trans-unit id="70bc329b179f6dc528033859a05d2340452b2a8c" translate="yes" xml:space="preserve">
          <source>Reactive forms provide a model-driven approach to handling form inputs whose values change over time. This guide shows you how to create and update a basic form control, progress to using multiple controls in a group, validate form values, and create dynamic forms where you can add or remove controls at run time.</source>
          <target state="translated">リアクティブフォームは、時間の経過とともに値が変化するフォーム入力を処理するためのモデル駆動型のアプローチを提供します。このガイドでは、基本的なフォームコントロールの作成と更新、グループ内での複数のコントロールの使用への移行、フォーム値の検証、実行時にコントロールを追加または削除できる動的なフォームの作成方法を示します。</target>
        </trans-unit>
        <trans-unit id="fede3ea1d4a841ba50aac317631025ca1d8153a0" translate="yes" xml:space="preserve">
          <source>Reactive forms provide a relatively easy testing strategy because they provide synchronous access to the form and data models, and they can be tested without rendering the UI. In these tests, status and data are queried and manipulated through the control without interacting with the change detection cycle.</source>
          <target state="translated">リアクティブフォームは、フォームとデータモデルへの同期アクセスを提供し、UI をレンダリングせずにテストできるため、比較的簡単なテスト戦略を提供します。これらのテストでは、ステータスとデータは、変更検出サイクルと相互作用することなく、コントロールを通して照会され、操作されます。</target>
        </trans-unit>
        <trans-unit id="0833f4b58beb01933024850a6c07b5bcc20f1017" translate="yes" xml:space="preserve">
          <source>Reactive forms provide access to information about a given control through properties and methods provided with each instance. These properties and methods of the underlying &lt;a href=&quot;../api/forms/abstractcontrol&quot;&gt;AbstractControl&lt;/a&gt; class are used to control form state and determine when to display messages when handling &lt;a href=&quot;reactive-forms#basic-form-validation&quot;&gt;input validation&lt;/a&gt;.</source>
          <target state="translated">リアクティブフォームは、各インスタンスで提供されるプロパティとメソッドを介して、特定のコントロールに関する情報へのアクセスを提供します。基礎となる&lt;a href=&quot;../api/forms/abstractcontrol&quot;&gt;AbstractControl&lt;/a&gt;クラスのこれらのプロパティとメソッドは、フォームの状態を制御し、&lt;a href=&quot;reactive-forms#basic-form-validation&quot;&gt;入力検証を&lt;/a&gt;処理するときにメッセージを表示するタイミングを決定するために使用されます。</target>
        </trans-unit>
        <trans-unit id="7d9accf289c84c2991d9c58185296f8743b54f7e" translate="yes" xml:space="preserve">
          <source>Reactive forms provide access to information about a given control through properties and methods provided with each instance. These properties and methods of the underlying &lt;a href=&quot;../api/forms/abstractcontrol&quot;&gt;AbstractControl&lt;/a&gt; class are used to control form state and determine when to display messages when handling validation. For more information, see &lt;a href=&quot;reactive-forms#simple-form-validation&quot;&gt;Simple form validation&lt;/a&gt; later in this guide.</source>
          <target state="translated">リアクティブフォームは、各インスタンスで提供されるプロパティとメソッドを介して、特定のコントロールに関する情報へのアクセスを提供します。基になる&lt;a href=&quot;../api/forms/abstractcontrol&quot;&gt;AbstractControl&lt;/a&gt;クラスのこれらのプロパティとメソッドは、フォームの状態を制御し、検証を処理するときにメッセージを表示するタイミングを決定するために使用されます。詳細については、このガイドで後述する&lt;a href=&quot;reactive-forms#simple-form-validation&quot;&gt;単純なフォームの検証を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="d5ade9729f091417417cbcf0742f1727ca1c06f4" translate="yes" xml:space="preserve">
          <source>Reactive forms use an explicit and immutable approach to managing the state of a form at a given point in time. Each change to the form state returns a new state, which maintains the integrity of the model between changes. Reactive forms are built around &lt;a href=&quot;glossary#observable&quot;&gt;observable&lt;/a&gt; streams, where form inputs and values are provided as streams of input values, which can be accessed synchronously.</source>
          <target state="translated">リアクティブフォームは、明示的で不変のアプローチを使用して、特定の時点でのフォームの状態を管理します。フォーム状態が変更されるたびに新しい状態が返され、変更間でモデルの整合性が維持されます。リアクティブフォームは、&lt;a href=&quot;glossary#observable&quot;&gt;監視可能な&lt;/a&gt;ストリームを中心に構築されます。フォームの入力と値は、同期的にアクセスできる入力値のストリームとして提供されます。</target>
        </trans-unit>
        <trans-unit id="8d0e1d78caa8cd03d25c13b9d6d94bf11d48db6b" translate="yes" xml:space="preserve">
          <source>Reactive forms use an explicit and immutable approach to managing the state of a form at a given point in time. Each change to the form state returns a new state, which maintains the integrity of the model between changes. Reactive forms are built around observable streams, where form inputs and values are provided as streams of input values, which can be accessed synchronously.</source>
          <target state="translated">リアクティブフォームは、ある時点でのフォームの状態を管理するために、明示的で不変のアプローチを使用します。フォームの状態への各変更は新しい状態を返し、変更の間のモデルの整合性を維持します。リアクティブフォームは観測可能なストリームを中心に構築され、フォームの入力と値は入力値のストリームとして提供され、同期的にアクセスすることができます。</target>
        </trans-unit>
        <trans-unit id="f4600df76443898c376860cc863f1bb7d7233755" translate="yes" xml:space="preserve">
          <source>Reactive programming is an asynchronous programming paradigm concerned with data streams and the propagation of change (&lt;a href=&quot;https://en.wikipedia.org/wiki/Reactive_programming&quot;&gt;Wikipedia&lt;/a&gt;). RxJS (Reactive Extensions for JavaScript) is a library for reactive programming using observables that makes it easier to compose asynchronous or callback-based code. See (&lt;a href=&quot;https://rxjs.dev/guide/overview&quot;&gt;RxJS Docs&lt;/a&gt;).</source>
          <target state="translated">リアクティブプログラミングは、データストリームと変更の伝播に関連する非同期プログラミングパラダイムです（&lt;a href=&quot;https://en.wikipedia.org/wiki/Reactive_programming&quot;&gt;Wikipedia&lt;/a&gt;）。RxJS（JavaScriptのReactive Extensions）は、オブザーバブルを使用したリアクティブプログラミング用のライブラリで、非同期またはコールバックベースのコードを簡単に作成できます。（&lt;a href=&quot;https://rxjs.dev/guide/overview&quot;&gt;RxJS Docs&lt;/a&gt;）を参照してください。</target>
        </trans-unit>
        <trans-unit id="f8d2e9adf36fc2ad7858e49d434aad124f5487f3" translate="yes" xml:space="preserve">
          <source>ReactiveFormsModule</source>
          <target state="translated">ReactiveFormsModule</target>
        </trans-unit>
        <trans-unit id="b7ca216f61420f5ef14c84bd63594037c4958000" translate="yes" xml:space="preserve">
          <source>Read about &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt; in the &lt;a href=&quot;inputs-outputs&quot;&gt;&lt;code&gt;@Input()&lt;/code&gt; and &lt;code&gt;@Output()&lt;/code&gt; properties&lt;/a&gt; guide.</source>
          <target state="translated">記事を読む &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt; で&lt;a href=&quot;inputs-outputs&quot;&gt; &lt;code&gt;@Input()&lt;/code&gt; と &lt;code&gt;@Output()&lt;/code&gt; プロパティ&lt;/a&gt;ガイド。</target>
        </trans-unit>
        <trans-unit id="822053f8c36c65b4885e99e35ce51f29f03c2d13" translate="yes" xml:space="preserve">
          <source>Read about &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt; in the &lt;a href=&quot;template-syntax#inputs-outputs&quot;&gt;&lt;em&gt;Template Syntax&lt;/em&gt;&lt;/a&gt; guide.</source>
          <target state="translated">記事を読む &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt; での&lt;a href=&quot;template-syntax#inputs-outputs&quot;&gt;&lt;em&gt;テンプレートの構文&lt;/em&gt;&lt;/a&gt;ガイド。</target>
        </trans-unit>
        <trans-unit id="f527f4691c39fe3c9a3edc43f600c96b879d15df" translate="yes" xml:space="preserve">
          <source>Read about how to write template expressions in &lt;a href=&quot;template-syntax#template-expressions&quot;&gt;Template expressions&lt;/a&gt;.</source>
          <target state="translated">テンプレート式の書き方については、テンプレート式を&lt;a href=&quot;template-syntax#template-expressions&quot;&gt;ご覧ください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a006a573abfcc3b12684c07040ca710150ca4aad" translate="yes" xml:space="preserve">
          <source>Read about how to write template expressions in the &lt;a href=&quot;interpolation#template-expressions&quot;&gt;template expressions&lt;/a&gt; section of the &lt;a href=&quot;interpolation&quot;&gt;Interpolation&lt;/a&gt; guide.</source>
          <target state="translated">&lt;a href=&quot;interpolation&quot;&gt;補間&lt;/a&gt;ガイドの&lt;a href=&quot;interpolation#template-expressions&quot;&gt;テンプレート式の&lt;/a&gt;セクションで、テンプレート式の記述方法についてお読みください。</target>
        </trans-unit>
        <trans-unit id="165301e85c3cb88135251f8429568a9a03474526" translate="yes" xml:space="preserve">
          <source>Read about other &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; properties and methods in the &lt;a href=&quot;../api/forms/formcontrol&quot;&gt;API Reference&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;APIリファレンス&lt;/a&gt;で他の &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; プロパティとメソッドについてお読みください。</target>
        </trans-unit>
        <trans-unit id="fe8cc3177cd67e98185a060ad1af9e08c5b4e03a" translate="yes" xml:space="preserve">
          <source>Read about other &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; properties and methods in the &lt;a href=&quot;reactive-forms#reactive-forms-api&quot;&gt;Reactive forms API&lt;/a&gt; section.</source>
          <target state="translated">その他の &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; プロパティとメソッドについては、&lt;a href=&quot;reactive-forms#reactive-forms-api&quot;&gt;Reactive forms API&lt;/a&gt;セクションをお読みください。</target>
        </trans-unit>
        <trans-unit id="35acddd11ffad194504b88f2399ed4d509e65d62" translate="yes" xml:space="preserve">
          <source>Read about the following forms of binding in &lt;a href=&quot;template-syntax&quot;&gt;Template Syntax&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;template-syntax&quot;&gt;テンプレート構文&lt;/a&gt;の以下の形式のバインディングについてお読みください。</target>
        </trans-unit>
        <trans-unit id="b3b409d1029d504031d148ce2b34395c30f72cc7" translate="yes" xml:space="preserve">
          <source>Read about the following forms of binding in Angular's &lt;a href=&quot;template-syntax&quot;&gt;Template Syntax&lt;/a&gt;:</source>
          <target state="translated">Angularの&lt;a href=&quot;template-syntax&quot;&gt;テンプレート構文&lt;/a&gt;で次の形式のバインディングについてお読みください。</target>
        </trans-unit>
        <trans-unit id="cb13a238c7f23330639ed8115408080c8c11236b" translate="yes" xml:space="preserve">
          <source>Read more about &lt;a href=&quot;template-syntax#interpolation&quot;&gt;interpolation&lt;/a&gt; in &lt;a href=&quot;template-syntax&quot;&gt;Template Syntax&lt;/a&gt;.</source>
          <target state="translated">詳細読む&lt;a href=&quot;template-syntax#interpolation&quot;&gt;補間&lt;/a&gt;で&lt;a href=&quot;template-syntax&quot;&gt;テンプレートの構文&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6bd71f1bcbaa8fca4926ae2075fe490d0f5f7cd3" translate="yes" xml:space="preserve">
          <source>Read more about component classes, templates, and views in &lt;a href=&quot;architecture&quot;&gt;Introduction to Angular concepts&lt;/a&gt;.</source>
          <target state="translated">コンポーネントクラス、テンプレート、およびビューの詳細については、&lt;a href=&quot;architecture&quot;&gt;「Angularの概念の概要」を参照してください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c8afee31af40fd9cb2ab92093ed911e661096107" translate="yes" xml:space="preserve">
          <source>Read more about components, templates, and views in &lt;a href=&quot;architecture&quot;&gt;Architecture Overview&lt;/a&gt;.</source>
          <target state="translated">コンポーネント、テンプレート、ビューの詳細については、&lt;a href=&quot;architecture&quot;&gt;アーキテクチャの概要&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="405d5fda034a8ddc75ce204c2693de8cabd5992c" translate="yes" xml:space="preserve">
          <source>Read more about the &lt;code&gt;&lt;a href=&quot;../api/common/datepipe&quot;&gt;DatePipe&lt;/a&gt;&lt;/code&gt; format options in the &lt;a href=&quot;../api/common/datepipe&quot;&gt;Date Pipe&lt;/a&gt; API Reference page.</source>
          <target state="translated">詳細については読む &lt;code&gt;&lt;a href=&quot;../api/common/datepipe&quot;&gt;DatePipe&lt;/a&gt;&lt;/code&gt; のでフォーマットオプション&lt;a href=&quot;../api/common/datepipe&quot;&gt;日付パイプ&lt;/a&gt; APIリファレンスページを。</target>
        </trans-unit>
        <trans-unit id="1704320eeef607c6edb67f23a227c28dc7528ca7" translate="yes" xml:space="preserve">
          <source>Read more about these and many other built-in pipes in the &lt;a href=&quot;api?type=pipe&quot;&gt;pipes topics&lt;/a&gt; of the &lt;a href=&quot;api&quot;&gt;API Reference&lt;/a&gt;; filter for entries that include the word &quot;pipe&quot;.</source>
          <target state="translated">&lt;a href=&quot;api&quot;&gt;APIリファレンスの&lt;/a&gt;&lt;a href=&quot;api?type=pipe&quot;&gt;パイプトピック&lt;/a&gt;で、これらおよびその他の多くの組み込みパイプの詳細を読んでください。「パイプ」という単語を含むエントリをフィルタします。</target>
        </trans-unit>
        <trans-unit id="2cef1f00f0d5e805663667f46ac1f095d0abe151" translate="yes" xml:space="preserve">
          <source>Read more forms in the &lt;a href=&quot;forms-overview&quot;&gt;Introduction to forms in Angular&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;forms-overview&quot;&gt;Angularのフォーム入門で&lt;/a&gt;他のフォームを読んでください。</target>
        </trans-unit>
        <trans-unit id="3b1d6f02c94117a6bee9f403003d447aab0d1cd9" translate="yes" xml:space="preserve">
          <source>Read more in the &lt;a href=&quot;interpolation&quot;&gt;Interpolation&lt;/a&gt; guide.</source>
          <target state="translated">詳細については、&lt;a href=&quot;interpolation&quot;&gt;補間&lt;/a&gt;ガイドを参照してください。</target>
        </trans-unit>
        <trans-unit id="47b2dc999995d625d84643a8250e58178c4a0beb" translate="yes" xml:space="preserve">
          <source>Read-Only</source>
          <target state="translated">Read-Only</target>
        </trans-unit>
        <trans-unit id="b2701d2af58867b3c39e3f656bea5466c7230574" translate="yes" xml:space="preserve">
          <source>Read-OnlyDeclared in Constructor</source>
          <target state="translated">コンストラクタでのRead-OnlyDeclared</target>
        </trans-unit>
        <trans-unit id="a16a19626f162e847eb9c8fe316bad0b1a858d1a" translate="yes" xml:space="preserve">
          <source>Reading the full response</source>
          <target state="translated">回答の全文を読む</target>
        </trans-unit>
        <trans-unit id="f9ae57c2193b591354e3b83454a5735ee675dde6" translate="yes" xml:space="preserve">
          <source>Reattaching a detached component</source>
          <target state="translated">取り外したコンポーネントの再装着</target>
        </trans-unit>
        <trans-unit id="7326d6682f0b14b11603710597d4126f529e2429" translate="yes" xml:space="preserve">
          <source>Rebuild on change.</source>
          <target state="translated">変化の上に再構築する。</target>
        </trans-unit>
        <trans-unit id="6313b86dbd9658ecc263ad6aa3a896e115fa9ab8" translate="yes" xml:space="preserve">
          <source>Recalculates the value and validation status of the control.</source>
          <target state="translated">コントロールの値と検証状態を再計算します。</target>
        </trans-unit>
        <trans-unit id="006e28e26a1884bfeadfaf9ac3e7eec58f19e0d6" translate="yes" xml:space="preserve">
          <source>Recall that Angular always adds a component instance to its own injector; that's why you could inject &lt;em&gt;Alex&lt;/em&gt; into &lt;em&gt;Cathy&lt;/em&gt;&lt;a href=&quot;dependency-injection-navtree#known-parent&quot;&gt;earlier&lt;/a&gt;.</source>
          <target state="translated">Angularは常にコンポーネントインスタンスを独自のインジェクタに追加することを思い出してください。これが、&lt;a href=&quot;dependency-injection-navtree#known-parent&quot;&gt;以前に&lt;/a&gt;&lt;em&gt;アレックス&lt;/em&gt;を&lt;em&gt;キャシーに&lt;/em&gt;注入できる理由です。</target>
        </trans-unit>
        <trans-unit id="f968f17cbf2bd77955438d01bbbf2a03b6e241e5" translate="yes" xml:space="preserve">
          <source>Recall that Angular calls both &lt;em&gt;AfterContent&lt;/em&gt; hooks before calling either of the &lt;em&gt;AfterView&lt;/em&gt; hooks. Angular completes composition of the projected content &lt;em&gt;before&lt;/em&gt; finishing the composition of this component's view. There is a small window between the &lt;code&gt;AfterContent...&lt;/code&gt; and &lt;code&gt;AfterView...&lt;/code&gt; hooks to modify the host view.</source>
          <target state="translated">角度が両方呼び出すことを思い出して&lt;em&gt;はafterContentは、&lt;/em&gt;どちらかの呼び出す前に、フック&lt;em&gt;AfterViewの&lt;/em&gt;フック。Angularは、このコンポーネントのビューの構成を完了する&lt;em&gt;前&lt;/em&gt;に、投影されたコンテンツの構成を完了します。そこの間に小さなウィンドウで &lt;code&gt;AfterContent...&lt;/code&gt; と &lt;code&gt;AfterView...&lt;/code&gt; ホストビューを変更するためにフックします。</target>
        </trans-unit>
        <trans-unit id="149f9cee1708e5e5476d5efc22525ef63bfe8e64" translate="yes" xml:space="preserve">
          <source>Recall that the app hasn't been compiled. So when you call &lt;code&gt;createComponent()&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; compiles implicitly.</source>
          <target state="translated">アプリがコンパイルされていないことを思い出してください。したがって、 &lt;code&gt;createComponent()&lt;/code&gt; を呼び出すと、 &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; は暗黙的にコンパイルされます。</target>
        </trans-unit>
        <trans-unit id="137571674af298a9abc8ef79c09d94f5b73f761e" translate="yes" xml:space="preserve">
          <source>Recall that you specified a default child route for the crisis center so this simple &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; is fine.</source>
          <target state="translated">危機管理センターのデフォルトの子ルートを指定したことを思い出してください。この単純な &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; で問題ありません。</target>
        </trans-unit>
        <trans-unit id="71e5653b3f2b5e9170fb4fe6fc116051b1509ba3" translate="yes" xml:space="preserve">
          <source>ReceivedMessage</source>
          <target state="translated">ReceivedMessage</target>
        </trans-unit>
        <trans-unit id="595ce83435a7d04760fe605d453dcec356f0677b" translate="yes" xml:space="preserve">
          <source>Receives the current &lt;code&gt;product&lt;/code&gt;</source>
          <target state="translated">現在の &lt;code&gt;product&lt;/code&gt; 受け取ります</target>
        </trans-unit>
        <trans-unit id="084913ce7222fc1a19916ad021c3b8d6c51c1f3a" translate="yes" xml:space="preserve">
          <source>Receives the current &lt;code&gt;product&lt;/code&gt;.</source>
          <target state="translated">現在の &lt;code&gt;product&lt;/code&gt; 受け取ります。</target>
        </trans-unit>
        <trans-unit id="2113a427348bd8709bf309d9827cd761a6cb7589" translate="yes" xml:space="preserve">
          <source>Record representing the item change information.</source>
          <target state="translated">項目の変更情報を表すレコード。</target>
        </trans-unit>
        <trans-unit id="303c765c62b3638ef845067ec6757d69d7d80e60" translate="yes" xml:space="preserve">
          <source>Redirecting specific URLs to avoid breaking existing links/bookmarks after a website redesign.</source>
          <target state="translated">ウェブサイトの再設計後に既存のリンク/ブックマークを壊さないように特定のURLをリダイレクトします。</target>
        </trans-unit>
        <trans-unit id="9bd42107db374ca79980a0f85d4acae90ced6cda" translate="yes" xml:space="preserve">
          <source>Redirecting to a different website, such as a server-status page, while a page is temporarily down.</source>
          <target state="translated">ページが一時的にダウンしている間に、サーバー状態のページなど、別のサイトにリダイレクトします。</target>
        </trans-unit>
        <trans-unit id="6ef76d57a7d77c904805ec295118e5f7f829a997" translate="yes" xml:space="preserve">
          <source>Redirecting to an authentication website when authentication is not handled by the application.</source>
          <target state="translated">認証がアプリケーションで処理されていない場合に、認証サイトにリダイレクトします。</target>
        </trans-unit>
        <trans-unit id="fcf937319f333e7df4ec12406025be63bde6549b" translate="yes" xml:space="preserve">
          <source>Redirects</source>
          <target state="translated">Redirects</target>
        </trans-unit>
        <trans-unit id="ade8f51e231965f7ff206e0ce571bd072663eaa1" translate="yes" xml:space="preserve">
          <source>Reduce framework overhead by removing legacy &lt;a href=&quot;ivy&quot;&gt;View Engine&lt;/a&gt;</source>
          <target state="translated">従来のViewEngineを削除して、フレームワークのオーバーヘッドを削減し&lt;a href=&quot;ivy&quot;&gt;ます&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="06be91a8ee231e7c4925242abd4496240ce810bd" translate="yes" xml:space="preserve">
          <source>Reduce the setup</source>
          <target state="translated">設定を減らす</target>
        </trans-unit>
        <trans-unit id="9f89ff05c95fc96d934805c0903d936688529f19" translate="yes" xml:space="preserve">
          <source>Refactor the component's &lt;code&gt;hero&lt;/code&gt; property to be of type &lt;code&gt;Hero&lt;/code&gt;. Initialize it with an &lt;code&gt;id&lt;/code&gt; of &lt;code&gt;1&lt;/code&gt; and the name &lt;code&gt;Windstorm&lt;/code&gt;.</source>
          <target state="translated">コンポーネントの &lt;code&gt;hero&lt;/code&gt; プロパティをタイプ &lt;code&gt;Hero&lt;/code&gt; にリファクタリングします。 &lt;code&gt;id&lt;/code&gt; &lt;code&gt;1&lt;/code&gt; と名前 &lt;code&gt;Windstorm&lt;/code&gt; で初期化します。</target>
        </trans-unit>
        <trans-unit id="39fd18399486a759e805869a3b5a5bb49c3d4a4c" translate="yes" xml:space="preserve">
          <source>Refactor the details area in the &lt;code&gt;HeroesComponent&lt;/code&gt; template so it looks like this:</source>
          <target state="translated">&lt;code&gt;HeroesComponent&lt;/code&gt; テンプレートの詳細領域をリファクタリングして、次のようにします。</target>
        </trans-unit>
        <trans-unit id="3ce16abef8ba24a70146da7aa12dbdc7dec2b37e" translate="yes" xml:space="preserve">
          <source>Refactor the routing configuration into a &lt;code&gt;routing module&lt;/code&gt;</source>
          <target state="translated">ルーティング構成を &lt;code&gt;routing module&lt;/code&gt; リファクタリングする</target>
        </trans-unit>
        <trans-unit id="e0f6271eae15dc4d82887c9317fb37d151bb1a4e" translate="yes" xml:space="preserve">
          <source>Refactor the routing configuration into a routing module</source>
          <target state="translated">ルーティング設定をルーティングモジュールにリファクタリングする</target>
        </trans-unit>
        <trans-unit id="398443e8de1f60bf6225f1777eac84dc7ec81f94" translate="yes" xml:space="preserve">
          <source>Refactoring parts of an app into a library</source>
          <target state="translated">アプリの一部をライブラリにリファクタリングする</target>
        </trans-unit>
        <trans-unit id="1e0736e496b7db32af8d26f9241fc2724968f6fc" translate="yes" xml:space="preserve">
          <source>Refactoring the original &lt;code&gt;HeroesComponent&lt;/code&gt; into two components yields benefits, both now and in the future:</source>
          <target state="translated">元の &lt;code&gt;HeroesComponent&lt;/code&gt; を2つのコンポーネントにリファクタリングすると、現在と将来の両方でメリットが得られます。</target>
        </trans-unit>
        <trans-unit id="8d6b1287bff95d658e61103253b010027cff87d8" translate="yes" xml:space="preserve">
          <source>Refer to a locale using the Unicode &lt;em&gt;locale identifier&lt;/em&gt; (ID), which specifies the language, country, and an optional code for further variants or subdivisions.</source>
          <target state="translated">Unicode&lt;em&gt;ロケール識別子&lt;/em&gt;（ID）を使用してロケールを参照します。これは、言語、国、およびオプションのコードを指定して、さらにバリアントまたはサブディビジョンを作成します。</target>
        </trans-unit>
        <trans-unit id="120da17248d713c03edf0e9a720d209be87527a1" translate="yes" xml:space="preserve">
          <source>Refer to locales by ID</source>
          <target state="translated">IDでロケールを参照する</target>
        </trans-unit>
        <trans-unit id="a0e89c66f9afa5d101261659d08f8cb88dbf4467" translate="yes" xml:space="preserve">
          <source>Refer to that variable in a button many lines away.</source>
          <target state="translated">何行も離れたボタンの中のその変数を参照してください。</target>
        </trans-unit>
        <trans-unit id="b22c7cb05ff594d901a7a846f32fadcfb9c7cf61" translate="yes" xml:space="preserve">
          <source>Refer to the sample code snippet below for a syntax example:</source>
          <target state="translated">構文の例については、以下のサンプルコードスニペットを参照してください。</target>
        </trans-unit>
        <trans-unit id="573cdca6dc9153301f2c4e2204f55b081a5f8dbd" translate="yes" xml:space="preserve">
          <source>Reference &lt;code&gt;&lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;&lt;/code&gt; within the &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; host element as well as within its descendants to access the item's properties. The following example references &lt;code&gt;&lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;&lt;/code&gt; first in an interpolation and then passes in a binding to the &lt;code&gt;&lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;&lt;/code&gt; property of the &lt;code&gt;&amp;lt;app-item-detail&amp;gt;&lt;/code&gt; component.</source>
          <target state="translated">参考 &lt;code&gt;&lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;&lt;/code&gt; 内 &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; のホスト要素だけでなく、その子孫の中には、アイテムのプロパティにアクセスします。次の例では、最初に補間で &lt;code&gt;&lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;&lt;/code&gt; を参照し、次に &lt;code&gt;&amp;lt;app-item-detail&amp;gt;&lt;/code&gt; コンポーネントの &lt;code&gt;&lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;&lt;/code&gt; プロパティへのバインディングを渡します。</target>
        </trans-unit>
        <trans-unit id="3c82590c038528589f267839ee1e5e6065235394" translate="yes" xml:space="preserve">
          <source>Reference &lt;code&gt;item&lt;/code&gt; within the &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; host element as well as within its descendants to access the item's properties. The following example references &lt;code&gt;item&lt;/code&gt; first in an interpolation and then passes in a binding to the &lt;code&gt;item&lt;/code&gt; property of the &lt;code&gt;&amp;lt;app-item-detail&amp;gt;&lt;/code&gt; component.</source>
          <target state="translated">参考 &lt;code&gt;item&lt;/code&gt; 内 &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; のホスト要素だけでなく、その子孫の中には、アイテムのプロパティにアクセスします。次の例では、最初に補間で &lt;code&gt;item&lt;/code&gt; を参照し、次に &lt;code&gt;&amp;lt;app-item-detail&amp;gt;&lt;/code&gt; コンポーネントの &lt;code&gt;item&lt;/code&gt; プロパティへのバインディングを渡します。</target>
        </trans-unit>
        <trans-unit id="57e4a415dd0497a24def6db81733f3a61579b98e" translate="yes" xml:space="preserve">
          <source>Reference to a local (non-exported) symbol</source>
          <target state="translated">ローカル(非輸出)シンボルへの参照</target>
        </trans-unit>
        <trans-unit id="075055d35ede87b75efb0de56af674b40e1a3927" translate="yes" xml:space="preserve">
          <source>Reference to a non-exported class</source>
          <target state="translated">非輸出クラスへの参照</target>
        </trans-unit>
        <trans-unit id="dd81b4dfd9ab55a313b5eb7accb31f8ccf8d35d4" translate="yes" xml:space="preserve">
          <source>Reference to a non-exported function</source>
          <target state="translated">非輸出関数への参照</target>
        </trans-unit>
        <trans-unit id="ed70328904d4fc92b906431035a17a3b6d7989b7" translate="yes" xml:space="preserve">
          <source>Reference to the current application is provided as a parameter.</source>
          <target state="translated">現在のアプリケーションへの参照がパラメータとして提供されます。</target>
        </trans-unit>
        <trans-unit id="7837f51bdaa3bad46c5634516a1b42c048946168" translate="yes" xml:space="preserve">
          <source>ReflectiveInjector</source>
          <target state="translated">ReflectiveInjector</target>
        </trans-unit>
        <trans-unit id="d1a1500261e47053460b5d62062e8b2fc644fa2b" translate="yes" xml:space="preserve">
          <source>ReflectiveKey</source>
          <target state="translated">ReflectiveKey</target>
        </trans-unit>
        <trans-unit id="32a0f3a28b7f9eb27dd0e894b6782f65fb64799c" translate="yes" xml:space="preserve">
          <source>Refresh the browser and add some heroes.</source>
          <target state="translated">ブラウザをリフレッシュしてヒーローを追加します。</target>
        </trans-unit>
        <trans-unit id="473b759a23293b19f3b2c19432cea12958184fb7" translate="yes" xml:space="preserve">
          <source>Refresh the browser and start clicking. Users can navigate around the app, from the dashboard to hero details and back, from heroes list to the mini detail to the hero details and back to the heroes again.</source>
          <target state="translated">ブラウザをリフレッシュしてクリックを開始します。ユーザーは、ダッシュボードからヒーローの詳細へ、ヒーローリストからミニ詳細へ、ヒーローの詳細へ、そして再びヒーローへと、アプリ内をナビゲートすることができます。</target>
        </trans-unit>
        <trans-unit id="7cfa5e02c6fdba8f1ec0c45696170dbdfab0cfc6" translate="yes" xml:space="preserve">
          <source>Refresh the browser and try the new delete functionality.</source>
          <target state="translated">ブラウザをリフレッシュして、新しい削除機能を試してみてください。</target>
        </trans-unit>
        <trans-unit id="2e68ff8692d271a4016bb8cafc1a1c4a9205742b" translate="yes" xml:space="preserve">
          <source>Refresh the browser to see the list of heroes, and scroll to the bottom to see the messages from the HeroService. Each time you click a hero, a new message appears to record the selection. Use the &quot;clear&quot; button to clear the message history.</source>
          <target state="translated">ブラウザをリフレッシュしてヒーローのリストを表示し、下の方にスクロールしてHeroServiceからのメッセージを表示します。ヒーローをクリックするたびに新しいメッセージが表示され、選択した内容が記録されます。メッセージの履歴を消去するには、&quot;clear &quot;ボタンを使用します。</target>
        </trans-unit>
        <trans-unit id="26c112917d8495d7a7ddcf2a84127d956d8be4f4" translate="yes" xml:space="preserve">
          <source>Refresh the browser, and it stops at the breakpoint.</source>
          <target state="translated">ブラウザをリフレッシュすると、ブレイクポイントで停止します。</target>
        </trans-unit>
        <trans-unit id="176e1375358badf3872db54069f2b717475df2dd" translate="yes" xml:space="preserve">
          <source>Refresh the browser, change a hero name and save your change. The &lt;code&gt;save()&lt;/code&gt; method in &lt;code&gt;HeroDetailComponent&lt;/code&gt; navigates to the previous view. The hero now appears in the list with the changed name.</source>
          <target state="translated">ブラウザを更新し、ヒーロー名を変更して、変更を保存します。 &lt;code&gt;HeroDetailComponent&lt;/code&gt; の &lt;code&gt;save()&lt;/code&gt; メソッドは、前のビューに移動します。ヒーローが名前が変更されてリストに表示されます。</target>
        </trans-unit>
        <trans-unit id="99cebb52277a82605b1d204a860c9d62f2439d93" translate="yes" xml:space="preserve">
          <source>Refresh the browser. The hero data should successfully load from the mock server.</source>
          <target state="translated">ブラウザをリフレッシュしてください。ヒーローデータがモックサーバーから正常に読み込まれるはずです。</target>
        </trans-unit>
        <trans-unit id="fadbfb12ae3657d300a87b0fefe383766298bba2" translate="yes" xml:space="preserve">
          <source>Refresh the page.</source>
          <target state="translated">ページを更新してください。</target>
        </trans-unit>
        <trans-unit id="0669a24b1d3d64f2ca8003a83f78ea04f51e5b45" translate="yes" xml:space="preserve">
          <source>Regardless of whether you choose &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt;, the basic principles of upgrading, the mental model behind hybrid apps, and how you use the &lt;a href=&quot;../api/upgrade/static&quot;&gt;upgrade/static&lt;/a&gt; utilities remain the same. For more information, see the &lt;a href=&quot;upgrade#how-ngupgrade-works&quot;&gt;How &lt;code&gt;ngUpgrade&lt;/code&gt; Works&lt;/a&gt; section of &lt;a href=&quot;upgrade&quot;&gt;Upgrading from AngularJS&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt; のどちらを選択したかに関係なく、アップグレードの基本原則、ハイブリッドアプリの背後にあるメンタルモデル、&lt;a href=&quot;../api/upgrade/static&quot;&gt;アップグレード/静的&lt;/a&gt;ユーティリティの使用方法は変わりません。詳細については、&lt;a href=&quot;upgrade#how-ngupgrade-works&quot;&gt;「 &lt;code&gt;ngUpgrade&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;upgrade&quot;&gt;AngularJSから&lt;/a&gt;のアップグレード」の「ngUpgradeの仕組み」セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="11a6063cc0df22272a2910722f6e211f48adbe35" translate="yes" xml:space="preserve">
          <source>Register &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/router/routes&quot;&gt;Routes&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;../api/router/routes&quot;&gt;Routes&lt;/a&gt;&lt;/code&gt; 登録する</target>
        </trans-unit>
        <trans-unit id="d7e5f50ef64cbfa7b161d319c5cc5e6aa9d83b05" translate="yes" xml:space="preserve">
          <source>Register &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; within a group</source>
          <target state="translated">グループ内に &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; を登録する</target>
        </trans-unit>
        <trans-unit id="c1021db51e8ea3da43eb931cc521ad3cb699029a" translate="yes" xml:space="preserve">
          <source>Register &lt;strong&gt;global&lt;/strong&gt; style files in the &lt;code&gt;styles&lt;/code&gt; section which, by default, is pre-configured with the global &lt;code&gt;styles.css&lt;/code&gt; file.</source>
          <target state="translated">&lt;strong&gt;グローバル&lt;/strong&gt;スタイルファイルを &lt;code&gt;styles&lt;/code&gt; セクションに登録します。スタイルセクションには、デフォルトでグローバル &lt;code&gt;styles.css&lt;/code&gt; ファイルが事前設定されています。</target>
        </trans-unit>
        <trans-unit id="27e5fb5a19ff23a15bfa6a1bb4ec2933aca5ba75" translate="yes" xml:space="preserve">
          <source>Register Form Group</source>
          <target state="translated">登録フォームグループ</target>
        </trans-unit>
        <trans-unit id="efd52a8f3b4041c85e460e6e23090e3d3a157abb" translate="yes" xml:space="preserve">
          <source>Register Router and Routes</source>
          <target state="translated">ルーターとルートタブ</target>
        </trans-unit>
        <trans-unit id="499b39c06dfc2e66fe91454fabfa4e09e021f942" translate="yes" xml:space="preserve">
          <source>Register a &lt;code&gt;/login&lt;/code&gt; route in the &lt;code&gt;auth/auth-routing.module.ts&lt;/code&gt;. In &lt;code&gt;app.module.ts&lt;/code&gt;, import and add the &lt;code&gt;AuthModule&lt;/code&gt; to the &lt;code&gt;AppModule&lt;/code&gt; imports.</source>
          <target state="translated">登録 &lt;code&gt;/login&lt;/code&gt; ルート &lt;code&gt;auth/auth-routing.module.ts&lt;/code&gt; 。で &lt;code&gt;app.module.ts&lt;/code&gt; 、インポートおよび追加 &lt;code&gt;AuthModule&lt;/code&gt; をする &lt;code&gt;AppModule&lt;/code&gt; 輸入。</target>
        </trans-unit>
        <trans-unit id="9eeba7d8e16fcf05f45372b3016d653066e897db" translate="yes" xml:space="preserve">
          <source>Register a callback function which is notified upon successful hybrid AngularJS / Angular application has been bootstrapped.</source>
          <target state="translated">ハイブリッドAngularJS/Angularアプリケーションのブートストラップ成功時に通知されるコールバック関数を登録します。</target>
        </trans-unit>
        <trans-unit id="ddcf2e07710629a4c3d9c53e07ad77ebfa12f127" translate="yes" xml:space="preserve">
          <source>Register a callback to provide the value for a key when &lt;code&gt;toJson&lt;/code&gt; is called.</source>
          <target state="translated">&lt;code&gt;toJson&lt;/code&gt; が呼び出されたときにキーの値を提供するコールバックを登録します。</target>
        </trans-unit>
        <trans-unit id="b7b321109b4df896dd3cf33339222ff234822a75" translate="yes" xml:space="preserve">
          <source>Register a listener for change events.</source>
          <target state="translated">変更イベントのリスナーを登録します。</target>
        </trans-unit>
        <trans-unit id="fd5f193b5d08b9ef1d20f00035f6d27992e885a8" translate="yes" xml:space="preserve">
          <source>Register a listener for disabled events.</source>
          <target state="translated">無効化されたイベントのリスナーを登録します。</target>
        </trans-unit>
        <trans-unit id="5b192b96bb88748fadfa4f7fd4ae3bc3ef37b629" translate="yes" xml:space="preserve">
          <source>Register a listener to be called when the platform is disposed.</source>
          <target state="translated">プラットフォームが廃棄されたときに呼び出されるリスナーを登録します。</target>
        </trans-unit>
        <trans-unit id="7f348892fd77f60dec269716eb0f91e62200f5ae" translate="yes" xml:space="preserve">
          <source>Register a nested &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">ネストされた &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; を登録します。</target>
        </trans-unit>
        <trans-unit id="d263f53532884277ae030db32685394d939772fa" translate="yes" xml:space="preserve">
          <source>Register a provider with a component when you &lt;em&gt;must&lt;/em&gt; limit the scope of a service instance to that component and its component tree. Apply the same reasoning to registering a provider with a directive.</source>
          <target state="translated">サービスインスタンスのスコープをそのコンポーネントとそのコンポーネントツリーに制限する&lt;em&gt;必要がある&lt;/em&gt;場合は、コンポーネントにプロバイダーを登録します。ディレクティブを使用してプロバイダーを登録する場合と同じ理由を適用します。</target>
        </trans-unit>
        <trans-unit id="d110fe90ef3eb9f9f1422c30fef0ef65e2643f6c" translate="yes" xml:space="preserve">
          <source>Register a provider with a component when you must limit a service instance to a component and its component tree, that is, its child components. For example, a user editing component, &lt;code&gt;UserEditorComponent&lt;/code&gt;, that needs a private copy of a caching &lt;code&gt;UserService&lt;/code&gt; should register the &lt;code&gt;UserService&lt;/code&gt; with the &lt;code&gt;UserEditorComponent&lt;/code&gt;. Then each new instance of the &lt;code&gt;UserEditorComponent&lt;/code&gt; gets its own cached service instance.</source>
          <target state="translated">サービスインスタンスをコンポーネントとそのコンポーネントツリー、つまり子コンポーネントに制限する必要がある場合は、プロバイダーをコンポーネントに登録します。たとえば、キャッシング &lt;code&gt;UserService&lt;/code&gt; のプライベートコピーが必要なユーザー編集コンポーネント &lt;code&gt;UserEditorComponent&lt;/code&gt; は、 &lt;code&gt;UserService&lt;/code&gt; を &lt;code&gt;UserEditorComponent&lt;/code&gt; に登録する必要があります。次に、 &lt;code&gt;UserEditorComponent&lt;/code&gt; の新しい各インスタンスは、キャッシュされた独自のサービスインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="8465823a679e4e48ffba873912c7013c8e4cbd0b" translate="yes" xml:space="preserve">
          <source>Register a service in &lt;code&gt;AppComponent&lt;/code&gt; providers &lt;em&gt;only&lt;/em&gt; if the service must be hidden from components outside the &lt;code&gt;AppComponent&lt;/code&gt; tree. This is a rare use case.</source>
          <target state="translated">&lt;code&gt;AppComponent&lt;/code&gt; ツリー外のコンポーネントからサービスを非表示にする必要がある場合に&lt;em&gt;のみ&lt;/em&gt;、 &lt;code&gt;AppComponent&lt;/code&gt; プロバイダーにサービスを登録します。これはまれなユースケースです。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="da47a0925da134eac74aa2a82182bb68d6a93f71" translate="yes" xml:space="preserve">
          <source>Register global data to be used internally by Angular. See the &lt;a href=&quot;../../guide/i18n#i18n-pipes&quot;&gt;&quot;I18n guide&quot;&lt;/a&gt; to know how to import additional locale data.</source>
          <target state="translated">Angularが内部で使用するグローバルデータを登録します。追加のロケールデータをインポートする方法については、&lt;a href=&quot;../../guide/i18n#i18n-pipes&quot;&gt;「I18nガイド」&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="4fc1edf78a618f2c721fd4d8c71efbcec47e1ad6" translate="yes" xml:space="preserve">
          <source>Register global data to be used internally by Angular. See the &lt;a href=&quot;../guide/i18n#i18n-pipes&quot;&gt;&quot;I18n guide&quot;&lt;/a&gt; to know how to import additional locale data.</source>
          <target state="translated">Angularが内部で使用するグローバルデータを登録します。追加のロケールデータをインポートする方法については、&lt;a href=&quot;../guide/i18n#i18n-pipes&quot;&gt;「I18nガイド」&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="699b9e365c651c5eaab57aa648e44165113e24ed" translate="yes" xml:space="preserve">
          <source>Register the &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; in the template.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; をテンプレートに登録します。</target>
        </trans-unit>
        <trans-unit id="7d16dcfb19d1203e1a27aba769ee65828ac58db9" translate="yes" xml:space="preserve">
          <source>Register the dependency provider using the &lt;code&gt;&lt;a href=&quot;../api/core/injectiontoken&quot;&gt;InjectionToken&lt;/a&gt;&lt;/code&gt; object:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/core/injectiontoken&quot;&gt;InjectionToken&lt;/a&gt;&lt;/code&gt; オブジェクトを使用して依存関係プロバイダーを登録します。</target>
        </trans-unit>
        <trans-unit id="30f01933bdc299c95cba737612efd3bafdc54e98" translate="yes" xml:space="preserve">
          <source>Register the given Angular Service Worker script.</source>
          <target state="translated">与えられたAngular Service Workerスクリプトを登録します。</target>
        </trans-unit>
        <trans-unit id="1b694def889e259e3ef3a8b9153f8bb729dd0a4c" translate="yes" xml:space="preserve">
          <source>Register the reactive forms module in your app. This module declares the reactive-form directives that you need to use reactive forms.</source>
          <target state="translated">アプリにリアクティブフォームモジュールを登録します。このモジュールは、リアクティブフォームを使用するために必要なリアクティブフォームディレクティブを宣言します。</target>
        </trans-unit>
        <trans-unit id="c0f53b3cd554913b0a02b0999d74c783e20f69ac" translate="yes" xml:space="preserve">
          <source>Register your custom pipes. The &lt;a href=&quot;cli&quot;&gt;Angular CLI&lt;/a&gt;&lt;a href=&quot;cli/generate#pipe&quot;&gt;&lt;code&gt;ng generate pipe&lt;/code&gt;&lt;/a&gt; command registers the pipe automatically.</source>
          <target state="translated">カスタムパイプを登録します。&lt;a href=&quot;cli&quot;&gt;角度CLIは&lt;/a&gt;&lt;a href=&quot;cli/generate#pipe&quot;&gt; &lt;code&gt;ng generate pipe&lt;/code&gt; &lt;/a&gt;自動的にコマンドレジスタにパイプを。</target>
        </trans-unit>
        <trans-unit id="474c732f0215871e7f1f2e923bd067a6b129d90d" translate="yes" xml:space="preserve">
          <source>Registering a route</source>
          <target state="translated">ルートの登録</target>
        </trans-unit>
        <trans-unit id="f28a4475c3c1cc3055c98c04a6e7184a2593555c" translate="yes" xml:space="preserve">
          <source>Registering a single form control</source>
          <target state="translated">単一のフォームコントロールの登録</target>
        </trans-unit>
        <trans-unit id="6a8c904bd7d052116502d4142d609d72274b8ed7" translate="yes" xml:space="preserve">
          <source>Registering the &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;RouterModule.forRoot()&lt;/a&gt;&lt;/code&gt; in the &lt;code&gt;AppModule&lt;/code&gt; imports makes the &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; service available everywhere in the application.</source>
          <target state="translated">登録 &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;RouterModule.forRoot()&lt;/a&gt;&lt;/code&gt; で &lt;code&gt;AppModule&lt;/code&gt; 輸入することになり &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; どこにでもアプリケーションでサービスが利用可能。</target>
        </trans-unit>
        <trans-unit id="37f573dfc8136f8566f54e949420b1301e1fa14f" translate="yes" xml:space="preserve">
          <source>Registering the &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;RouterModule.forRoot()&lt;/a&gt;&lt;/code&gt; in the &lt;code&gt;AppModule&lt;/code&gt;&lt;code&gt;imports&lt;/code&gt; array makes the &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; service available everywhere in the application.</source>
          <target state="translated">登録 &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;RouterModule.forRoot()&lt;/a&gt;&lt;/code&gt; 中 &lt;code&gt;AppModule&lt;/code&gt; &lt;code&gt;imports&lt;/code&gt; 配列が行う &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; アプリケーションでどこでもサービスが利用可能。</target>
        </trans-unit>
        <trans-unit id="89c298327d98991688ac0360aa7243c779039c51" translate="yes" xml:space="preserve">
          <source>Registers a &lt;a href=&quot;../../guide/glossary#provider&quot;&gt;DI provider&lt;/a&gt; for a set of routes.</source>
          <target state="translated">ルートのセットの&lt;a href=&quot;../../guide/glossary#provider&quot;&gt;DIプロバイダー&lt;/a&gt;を登録します。</target>
        </trans-unit>
        <trans-unit id="7f33e0ca2a6dd4f38bd5e9618439a64a8578b95f" translate="yes" xml:space="preserve">
          <source>Registers a &lt;a href=&quot;../guide/glossary#provider&quot;&gt;DI provider&lt;/a&gt; for a set of routes.</source>
          <target state="translated">ルートのセットの&lt;a href=&quot;../guide/glossary#provider&quot;&gt;DIプロバイダー&lt;/a&gt;を登録します。</target>
        </trans-unit>
        <trans-unit id="8bef6dd7e65f36b218e6bc6ec1c691d3bc523b57" translate="yes" xml:space="preserve">
          <source>Registers a URL change listener. Use to catch updates performed by the Angular framework that are not detectible through &quot;popstate&quot; or &quot;hashchange&quot; events.</source>
          <target state="translated">URL変更リスナーを登録します。popstate &quot;や &quot;hashchange &quot;イベントでは検出できないAngularフレームワークの更新をキャッチするために使用します。</target>
        </trans-unit>
        <trans-unit id="1c581def56ab6ac9fb88c3ad15e1cbaca013d411" translate="yes" xml:space="preserve">
          <source>Registers a callback function is called by the forms API on initialization to update the form model on blur.</source>
          <target state="translated">初期化時にフォームAPIから呼び出されるコールバック関数を登録します。</target>
        </trans-unit>
        <trans-unit id="d8ec3a9b26f0114059c0d3ad2650979680590c15" translate="yes" xml:space="preserve">
          <source>Registers a callback function that is called by the forms API on initialization to update the form model on blur.</source>
          <target state="translated">初期化時にフォームAPIから呼び出され、ブラー時のフォームモデルを更新するコールバック関数を登録します。</target>
        </trans-unit>
        <trans-unit id="a33580665d68f23d19cc437c5fddf02f9b41dc27" translate="yes" xml:space="preserve">
          <source>Registers a callback function that is called when the control's value changes in the UI.</source>
          <target state="translated">UIでコントロールの値が変更されたときに呼び出されるコールバック関数を登録します。</target>
        </trans-unit>
        <trans-unit id="167499d55d61fb6931fd057684fda26fc02336a3" translate="yes" xml:space="preserve">
          <source>Registers a callback function to call when the validator inputs change.</source>
          <target state="translated">バリデータの入力が変更されたときに呼び出すコールバック関数を登録します。</target>
        </trans-unit>
        <trans-unit id="651efdfec5700f18bcd1de0095c89e46d914ff40" translate="yes" xml:space="preserve">
          <source>Registers a callback to be executed when the module is destroyed.</source>
          <target state="translated">モジュールが破壊されたときに実行されるコールバックを登録します。</target>
        </trans-unit>
        <trans-unit id="4cccd3c9038849e370222a8f5454556408b880f3" translate="yes" xml:space="preserve">
          <source>Registers a control with the group's list of controls.</source>
          <target state="translated">グループのコントロールリストにコントロールを登録します。</target>
        </trans-unit>
        <trans-unit id="0058ace972503cd082944e3b514ee343130d6196" translate="yes" xml:space="preserve">
          <source>Registers a function called when the control is touched.</source>
          <target state="translated">コントロールがタッチされたときに呼び出される関数を登録します。</target>
        </trans-unit>
        <trans-unit id="ac9b9cea3b85b99825f4339268f87d45e3ddce50" translate="yes" xml:space="preserve">
          <source>Registers a function called when the control value changes and writes an array of the selected options.</source>
          <target state="translated">制御値が変化したときに呼び出される関数を登録し、選択されたオプションの配列を書き込みます。</target>
        </trans-unit>
        <trans-unit id="42402627981bd38f04d7134c6ef6e366e0f49b16" translate="yes" xml:space="preserve">
          <source>Registers a function called when the control value changes.</source>
          <target state="translated">制御値が変化したときに呼び出される関数を登録します。</target>
        </trans-unit>
        <trans-unit id="68fc74b3379ee6475d87386b853bd24c10dda94e" translate="yes" xml:space="preserve">
          <source>Registers a global handler for an event in a target view.</source>
          <target state="translated">ターゲットビューのイベントのグローバルハンドラを登録します。</target>
        </trans-unit>
        <trans-unit id="b9b957ac7972a68c5c19698f6b2f46d15fbaa324" translate="yes" xml:space="preserve">
          <source>Registers a handler for a specific element and event.</source>
          <target state="translated">特定の要素やイベントのハンドラを登録します。</target>
        </trans-unit>
        <trans-unit id="3bfe0e6bce7458537b374de02d449ab60e5ace2f" translate="yes" xml:space="preserve">
          <source>Registers a listener to be called when the platform is destroyed.</source>
          <target state="translated">プラットフォームが破壊されたときに呼び出されるリスナーを登録します。</target>
        </trans-unit>
        <trans-unit id="c1a72e375b3ac6e3d36f6d01323010121ac19cfe" translate="yes" xml:space="preserve">
          <source>Registers an application with a testability hook so that it can be tracked</source>
          <target state="translated">アプリケーションをテスト可能フックで登録し、追跡できるようにします。</target>
        </trans-unit>
        <trans-unit id="303ef3aa05eb96d9035ebfaf0e6bb0a6eff8d9e0" translate="yes" xml:space="preserve">
          <source>Registers handlers for events emitted by this instance.</source>
          <target state="translated">このインスタンスが発行するイベントのハンドラを登録します。</target>
        </trans-unit>
        <trans-unit id="94f8a4aa998ff705d940ac02f21808b84034f706" translate="yes" xml:space="preserve">
          <source>Registers listeners for URL changes. This API is used to catch updates performed by the AngularJS framework. These changes are a subset of the &lt;code&gt;$locationChangeStart&lt;/code&gt; and &lt;code&gt;$locationChangeSuccess&lt;/code&gt; events which fire when AngularJS updates its internally-referenced version of the browser URL.</source>
          <target state="translated">URL変更のリスナーを登録します。このAPIは、AngularJSフレームワークによって実行される更新をキャッチするために使用されます。これらの変更は、AngularJSが内部的に参照されているバージョンのブラウザーURLを更新したときに発生する &lt;code&gt;$locationChangeStart&lt;/code&gt; および &lt;code&gt;$locationChangeSuccess&lt;/code&gt; イベントのサブセットです。</target>
        </trans-unit>
        <trans-unit id="51bd756c2e6106aa040f50c2114a07bb4ea92816" translate="yes" xml:space="preserve">
          <source>Registers the adapter's AngularJS upgrade module for unit testing in AngularJS. Use this instead of &lt;code&gt;angular.mock.module()&lt;/code&gt; to load the upgrade module into the AngularJS testing injector.</source>
          <target state="translated">アダプターのAngularJSアップグレードモジュールを、AngularJSでの単体テスト用に登録します。 &lt;code&gt;angular.mock.module()&lt;/code&gt; の代わりにこれを使用して、アップグレードモジュールをAngularJSテストインジェクターにロードします。</target>
        </trans-unit>
        <trans-unit id="bc3af0571f22d311e46fa14763dd68335c62e484" translate="yes" xml:space="preserve">
          <source>Regular expressions for plurals and selections</source>
          <target state="translated">複数形と選択範囲の正規表現</target>
        </trans-unit>
        <trans-unit id="09c24b920e6e0806452f541dd508872c3a4b51bb" translate="yes" xml:space="preserve">
          <source>Relabel the &lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt; to &lt;code&gt;&amp;lt;h2&amp;gt;HEROES&amp;lt;/h2&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">ラベルを変更 &lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt; と &lt;code&gt;&amp;lt;h2&amp;gt;HEROES&amp;lt;/h2&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="72fb32d7ae1139f3dea16af21922728a2ee4c17c" translate="yes" xml:space="preserve">
          <source>Related configuration files.</source>
          <target state="translated">関連する設定ファイル。</target>
        </trans-unit>
        <trans-unit id="f08acc559b3522efc7db5dba837c335ae47d5270" translate="yes" xml:space="preserve">
          <source>Related information</source>
          <target state="translated">関連情報</target>
        </trans-unit>
        <trans-unit id="af37119e89ab5e671b28740aaa9741b7dd676656" translate="yes" xml:space="preserve">
          <source>Related resources</source>
          <target state="translated">関連リソース</target>
        </trans-unit>
        <trans-unit id="970299e4e2176d0fb6a3ccd9806c0c1ad10e1cb4" translate="yes" xml:space="preserve">
          <source>Relative font size: &lt;code&gt;'3em'&lt;/code&gt;</source>
          <target state="translated">相対フォントサイズ： &lt;code&gt;'3em'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ba6d74cf29dddfb9e888f128b72e89c7f45cdf11" translate="yes" xml:space="preserve">
          <source>Relative link paths</source>
          <target state="translated">相対リンクパス</target>
        </trans-unit>
        <trans-unit id="273924f6b8bb09d40649f3a052e0708a616b4325" translate="yes" xml:space="preserve">
          <source>Relative navigation</source>
          <target state="translated">相対ナビゲーション</target>
        </trans-unit>
        <trans-unit id="cf7ddb7603d2a26315f2455b522c75c84a223953" translate="yes" xml:space="preserve">
          <source>Relative paths</source>
          <target state="translated">相対パス</target>
        </trans-unit>
        <trans-unit id="03b13e3c44681c777814bc02b83d2913558e84ce" translate="yes" xml:space="preserve">
          <source>Relative paths allow you to define paths that are relative to the current URL segment. The following example shows a relative route to another component, &lt;code&gt;second-component&lt;/code&gt;. &lt;code&gt;FirstComponent&lt;/code&gt; and &lt;code&gt;SecondComponent&lt;/code&gt; are at the same level in the tree, however, the link to &lt;code&gt;SecondComponent&lt;/code&gt; is situated within the &lt;code&gt;FirstComponent&lt;/code&gt;, meaning that the router has to go up a level and then into the second directory to find the &lt;code&gt;SecondComponent&lt;/code&gt;. Rather than writing out the whole path to get to &lt;code&gt;SecondComponent&lt;/code&gt;, you can use the &lt;code&gt;../&lt;/code&gt; notation to go up a level.</source>
          <target state="translated">相対パスを使用すると、現在のURLセグメントに相対的なパスを定義できます。次の例は、別のコンポーネントである &lt;code&gt;second-component&lt;/code&gt; への相対ルートを示しています。 &lt;code&gt;FirstComponent&lt;/code&gt; と &lt;code&gt;SecondComponent&lt;/code&gt; はツリーの同じレベルにありますが、 &lt;code&gt;FirstComponent&lt;/code&gt; へのリンクは &lt;code&gt;SecondComponent&lt;/code&gt; 内にあります。つまり、ルーターはレベルを上げてから2番目のディレクトリに移動して &lt;code&gt;SecondComponent&lt;/code&gt; を見つける必要があります。むしろに到達するためにパス全体を書き出すよりも &lt;code&gt;SecondComponent&lt;/code&gt; は、使用することができます &lt;code&gt;../&lt;/code&gt; レベルを上に移動する記法を。</target>
        </trans-unit>
        <trans-unit id="ca1e9859d878c64d5a702f7c04bd96cbb4ed5678" translate="yes" xml:space="preserve">
          <source>Release announcements (older): &lt;a href=&quot;https://blog.angularjs.org/search?q=available&amp;amp;by-date=true&quot;&gt;Angular blog - announcements about releases prior to August 2017&lt;/a&gt;</source>
          <target state="translated">リリースのお知らせ（旧）：&lt;a href=&quot;https://blog.angularjs.org/search?q=available&amp;amp;by-date=true&quot;&gt;Angularブログ-2017年8月より前のリリースに関するお知らせ&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3b3ff56d3178fb09ce35426dcffa4e7a93999e80" translate="yes" xml:space="preserve">
          <source>Release announcements: &lt;a href=&quot;https://blog.angular.io/tagged/release%20notes&quot;&gt;Angular blog - release announcements&lt;/a&gt;</source>
          <target state="translated">リリースのお知らせ：&lt;a href=&quot;https://blog.angular.io/tagged/release%20notes&quot;&gt;Angularブログ-リリースのお知らせ&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f0e9be040ffdccdde22aa875dc9106626987b907" translate="yes" xml:space="preserve">
          <source>Release details: &lt;a href=&quot;https://github.com/angular/angular/blob/master/CHANGELOG.md&quot;&gt;Angular change log&lt;/a&gt;</source>
          <target state="translated">リリースの詳細：&lt;a href=&quot;https://github.com/angular/angular/blob/master/CHANGELOG.md&quot;&gt;角度変更ログ&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="375da07bd98ddf85ba6ae31bd08bf325cf089dfe" translate="yes" xml:space="preserve">
          <source>Release frequency</source>
          <target state="translated">解放頻度</target>
        </trans-unit>
        <trans-unit id="ea33e8c31694912887d747c2ac0b47cd176d8edd" translate="yes" xml:space="preserve">
          <source>Release schedule</source>
          <target state="translated">リリーススケジュール</target>
        </trans-unit>
        <trans-unit id="f2014b76ac55691bf918cbe564e50b6a34f7662a" translate="yes" xml:space="preserve">
          <source>Release schedule: &lt;a href=&quot;releases#schedule&quot;&gt;Angular versioning and releases&lt;/a&gt;</source>
          <target state="translated">リリーススケジュール：&lt;a href=&quot;releases#schedule&quot;&gt;Angularのバージョン管理とリリース&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="35d9bc51591e20cba61b95e7bbe1f27d185b3c80" translate="yes" xml:space="preserve">
          <source>Released</source>
          <target state="translated">Released</target>
        </trans-unit>
        <trans-unit id="1f506dd995cb9abff9bec6254417f6424b5d409d" translate="yes" xml:space="preserve">
          <source>Rely on the router to call the resolver. Don't worry about all the ways that the user could navigate away. That's the router's job. Write this class and let the router take it from there.</source>
          <target state="translated">リゾルバを呼び出すのはルータに頼ってください。ユーザーが離れた場所に移動するためのすべての方法を心配しないでください。それがルータの仕事です。このクラスを書いて、そこからルータに任せるのです。</target>
        </trans-unit>
        <trans-unit id="afb2937301efc646b5a60fb1b92a22a48c083f94" translate="yes" xml:space="preserve">
          <source>Relying on direct DOM access creates tight coupling between your application and rendering layers which will make it impossible to separate the two and deploy your application into a web worker.</source>
          <target state="translated">直接 DOM アクセスに依存すると、アプリケーションとレンダリング層の間に緊密な結合が生じ、2 つを分離することが不可能になり、アプリケーションをウェブワーカーにデプロイすることができなくなります。</target>
        </trans-unit>
        <trans-unit id="7206b206b31aa3633a033e2dc7a73ae006e2945f" translate="yes" xml:space="preserve">
          <source>Remember also that a directive's data-bound input properties are not set until &lt;em&gt;after construction&lt;/em&gt;. That's a problem if you need to initialize the directive based on those properties. They'll have been set when &lt;code&gt;ngOnInit()&lt;/code&gt; runs.</source>
          <target state="translated">ディレクティブのデータバインドされた入力プロパティは&lt;em&gt;、構築後&lt;/em&gt;まで設定されないことにも注意してください。これらのプロパティに基づいてディレクティブを初期化する必要がある場合、これは問題です。 &lt;code&gt;ngOnInit()&lt;/code&gt; の実行時に設定されます。</target>
        </trans-unit>
        <trans-unit id="13651e994fa66c3288128cedcf7c0183fa01bfc1" translate="yes" xml:space="preserve">
          <source>Remember that &lt;code&gt;app-heroes&lt;/code&gt; is the &lt;a href=&quot;toh-pt1#selector&quot;&gt;element selector&lt;/a&gt; for the &lt;code&gt;HeroesComponent&lt;/code&gt;. So add an &lt;code&gt;&amp;lt;app-heroes&amp;gt;&lt;/code&gt; element to the &lt;code&gt;AppComponent&lt;/code&gt; template file, just below the title.</source>
          <target state="translated">&lt;code&gt;app-heroes&lt;/code&gt; は &lt;code&gt;HeroesComponent&lt;/code&gt; の&lt;a href=&quot;toh-pt1#selector&quot;&gt;要素セレクター&lt;/a&gt;であることを忘れないでください。したがって、 &lt;code&gt;&amp;lt;app-heroes&amp;gt;&lt;/code&gt; 要素を &lt;code&gt;AppComponent&lt;/code&gt; テンプレートファイルのタイトルのすぐ下に追加します。</target>
        </trans-unit>
        <trans-unit id="4e3d011212e72a1e405fbfa32d0e8f9ce97b09af" translate="yes" xml:space="preserve">
          <source>Remember that impure pipes are called every few milliseconds. If you're not careful, this pipe will punish the server with requests.</source>
          <target state="translated">不純なパイプは数ミリ秒ごとに呼び出されることを覚えておいてください。注意していないと、このパイプはリクエストでサーバを罰することになります。</target>
        </trans-unit>
        <trans-unit id="b082e1ff346e7c39761ee9a112da674a5cb94e69" translate="yes" xml:space="preserve">
          <source>Remember that in this situation you'd call &lt;code&gt;setCurrentClasses()&lt;/code&gt;, both initially and when the dependent properties change.</source>
          <target state="translated">この状況では、最初と依存するプロパティが変更されたときに、 &lt;code&gt;setCurrentClasses()&lt;/code&gt; を呼び出すことに注意してください。</target>
        </trans-unit>
        <trans-unit id="8fa44c5766b19ac0cd5b2eeacca3f333d904c4fc" translate="yes" xml:space="preserve">
          <source>Remember that the component &lt;em&gt;class&lt;/em&gt; does not subscribe to the &lt;code&gt;heroes$&lt;/code&gt;&lt;em&gt;observable&lt;/em&gt;. That's the job of the &lt;a href=&quot;toh-pt6#asyncpipe&quot;&gt;&lt;code&gt;AsyncPipe&lt;/code&gt;&lt;/a&gt; in the template.</source>
          <target state="translated">コンポーネント&lt;em&gt;クラス&lt;/em&gt;は &lt;code&gt;heroes$&lt;/code&gt; &lt;em&gt;observableを&lt;/em&gt;サブスクライブしないことに注意してください。それがテンプレートの&lt;a href=&quot;toh-pt6#asyncpipe&quot;&gt; &lt;code&gt;AsyncPipe&lt;/code&gt; &lt;/a&gt;の仕事です。</target>
        </trans-unit>
        <trans-unit id="2c9866cde69e0f9bace65e73f610bd7b59dd1186" translate="yes" xml:space="preserve">
          <source>Remember the brackets</source>
          <target state="translated">括弧を覚えています。</target>
        </trans-unit>
        <trans-unit id="6f1f45af2f822f4853dababc20a2d2e721186681" translate="yes" xml:space="preserve">
          <source>Remember the declarations array</source>
          <target state="translated">宣言配列を覚えています。</target>
        </trans-unit>
        <trans-unit id="af8cdd266af8fe9056293c06a0835486379a11e6" translate="yes" xml:space="preserve">
          <source>Remember to add the &lt;code&gt;InspectorComponent&lt;/code&gt; to the &lt;code&gt;AppModule&lt;/code&gt;&lt;code&gt;declarations&lt;/code&gt; array.</source>
          <target state="translated">&lt;code&gt;InspectorComponent&lt;/code&gt; を &lt;code&gt;AppModule&lt;/code&gt; &lt;code&gt;declarations&lt;/code&gt; 配列に必ず追加してください。</target>
        </trans-unit>
        <trans-unit id="02c8c82fcfa1ebdb050af38bd24616cd31038d91" translate="yes" xml:space="preserve">
          <source>Remember to call &lt;code&gt;setCurrentStyles()&lt;/code&gt;, both initially and when the dependent properties change.</source>
          <target state="translated">最初と依存するプロパティが変更されたときの両方で、 &lt;code&gt;setCurrentStyles()&lt;/code&gt; を呼び出すことを忘れないでください。</target>
        </trans-unit>
        <trans-unit id="17516af45dd099bbc1571d24b1c7bde6c0c05358" translate="yes" xml:space="preserve">
          <source>Remember to exclude these files from stackblitz by listing them in the &lt;code&gt;stackblitz.json&lt;/code&gt; as illustrated here.</source>
          <target state="translated">でそれらをリストすることによってstackblitzからこれらのファイルを除外することを忘れないでください &lt;code&gt;stackblitz.json&lt;/code&gt; ここに示されているように。</target>
        </trans-unit>
        <trans-unit id="07e4e58a5951e0a7c881f2f6e289757c9dd27f55" translate="yes" xml:space="preserve">
          <source>Remember to import &lt;code&gt;GreetingModule&lt;/code&gt; as a Javascript import at the top of the file and don't add it to more than one &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt;&lt;code&gt;imports&lt;/code&gt; list.</source>
          <target state="translated">インポートすることを忘れないでください &lt;code&gt;GreetingModule&lt;/code&gt; ファイルの先頭にJavascriptのインポートなどと複数に追加しないでください &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; &lt;code&gt;imports&lt;/code&gt; リスト。</target>
        </trans-unit>
        <trans-unit id="832180d8eb87ef1998ffb89e091308e4fe67fd37" translate="yes" xml:space="preserve">
          <source>Remember to import the &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; to make &lt;code&gt;[(&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;)]&lt;/code&gt; available as follows:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; をインポートして、 &lt;code&gt;[(&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;)]&lt;/code&gt; を次のように使用できるようにすることを忘れないでください。</target>
        </trans-unit>
        <trans-unit id="a4d39a4f7a173386221bc146c1862a6c09ae6cca" translate="yes" xml:space="preserve">
          <source>Remember to refer to this region by name in the &lt;code&gt;region&lt;/code&gt; attribute of the &lt;code&gt;&amp;lt;code-example&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;code-pane&amp;gt;&lt;/code&gt; as you did in an example above like this:</source>
          <target state="translated">次のように、上記の例で行ったように、 &lt;code&gt;&amp;lt;code-example&amp;gt;&lt;/code&gt; または &lt;code&gt;&amp;lt;code-pane&amp;gt;&lt;/code&gt; の &lt;code&gt;region&lt;/code&gt; 属性でこのリージョンを名前で参照することを忘れないでください。</target>
        </trans-unit>
        <trans-unit id="5ae2155556aba175b9d87c09bdfea7d3d3051ddd" translate="yes" xml:space="preserve">
          <source>Remember, components, directives, and pipes belong to one module only. You only need to declare them once in your app because you share them by importing the necessary modules. This saves you time and helps keep your app lean.</source>
          <target state="translated">コンポーネント、ディレクティブ、パイプは1つのモジュールにのみ属していることを覚えておいてください。必要なモジュールをインポートして共有するため、アプリ内で一度だけ宣言する必要があります。これにより、時間を節約し、アプリを無駄のない状態に保つことができます。</target>
        </trans-unit>
        <trans-unit id="b8adb46d34eff3a8b15bcc3c40717d0ab0d11e49" translate="yes" xml:space="preserve">
          <source>Remember, whether a value is safe depends on context, so choose the right context for your intended use of the value. Imagine that the following template needs to bind a URL to a &lt;code&gt;javascript:alert(...)&lt;/code&gt; call:</source>
          <target state="translated">値が安全かどうかはコンテキストに依存するので、値の使用目的に適したコンテキストを選択してください。次のテンプレートで、URLを &lt;code&gt;javascript:alert(...)&lt;/code&gt; 呼び出しにバインドする必要があるとします。</target>
        </trans-unit>
        <trans-unit id="1d3a3049f887fbcb21bfbe766ecfe584918f00c4" translate="yes" xml:space="preserve">
          <source>Reminder: If you use these &lt;code&gt;Deprecated*&lt;/code&gt; pipes, you should migrate to the current APIs listed above as soon as possible. These deprecated APIs are candidates for removal in version 9.</source>
          <target state="translated">注意：これらの非 &lt;code&gt;Deprecated*&lt;/code&gt; パイプを使用する場合は、できるだけ早く上記の現在のAPIに移行する必要があります。これらの廃止されたAPIは、バージョン9での削除の候補です。</target>
        </trans-unit>
        <trans-unit id="762589a8acb662468c7b8292a03d308f440ae134" translate="yes" xml:space="preserve">
          <source>Reminder: In the file list, right-click the &lt;code&gt;app&lt;/code&gt; folder, choose &lt;code&gt;Angular Generator&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">注意：ファイルリストで &lt;code&gt;app&lt;/code&gt; フォルダーを右クリックし、[ &lt;code&gt;Angular Generator&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; ]を選択します。</target>
        </trans-unit>
        <trans-unit id="d5f94b095a44dde7d0d8af01b457729bec0e1a8d" translate="yes" xml:space="preserve">
          <source>Reminder: Open &lt;code&gt;app.module.ts&lt;/code&gt; and add a route for the component &lt;code&gt;CartComponent&lt;/code&gt;, with a &lt;code&gt;path&lt;/code&gt; of &lt;code&gt;cart&lt;/code&gt;:</source>
          <target state="translated">リマインダー：オープン &lt;code&gt;app.module.ts&lt;/code&gt; およびコンポーネントのルートを追加 &lt;code&gt;CartComponent&lt;/code&gt; と、 &lt;code&gt;path&lt;/code&gt; の &lt;code&gt;cart&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="ae2147e66b8bc2bd312faebc0682b87f9a6d5d01" translate="yes" xml:space="preserve">
          <source>Reminder: the styles in the style file apply &lt;em&gt;only to this component&lt;/em&gt;. They are &lt;em&gt;not inherited&lt;/em&gt; by any components nested within the template nor by any content projected into the component.</source>
          <target state="translated">注意：スタイルファイルのスタイルは、&lt;em&gt;このコンポーネントにのみ&lt;/em&gt;適用&lt;em&gt;されます&lt;/em&gt;。これらはされ&lt;em&gt;継承されていない&lt;/em&gt;テンプレート内にネスト任意のコンポーネントによっても成分に投影任意のコンテンツによって。</target>
        </trans-unit>
        <trans-unit id="c420308ba57631e51f4eea85e2dbbb8c5f167ff8" translate="yes" xml:space="preserve">
          <source>Reminder: these styles apply &lt;em&gt;only to this component&lt;/em&gt;. They are &lt;em&gt;not inherited&lt;/em&gt; by any components nested within the template nor by any content projected into the component.</source>
          <target state="translated">注意：これらのスタイル&lt;em&gt;は、このコンポーネントにのみ&lt;/em&gt;適用&lt;em&gt;されます&lt;/em&gt;。これらはされ&lt;em&gt;継承されていない&lt;/em&gt;テンプレート内にネスト任意のコンポーネントによっても成分に投影任意のコンテンツによって。</target>
        </trans-unit>
        <trans-unit id="141c0d8ec3a9c9686ec3000640fa7c8d7b4d6f06" translate="yes" xml:space="preserve">
          <source>Remove a control from this form.</source>
          <target state="translated">このフォームからコントロールを削除します。</target>
        </trans-unit>
        <trans-unit id="36e4826b1fe6a272f91ac4b1061500c0ffd1c5c8" translate="yes" xml:space="preserve">
          <source>Remove a control from this group.</source>
          <target state="translated">このグループからコントロールを削除します。</target>
        </trans-unit>
        <trans-unit id="0140d145c4d2ab13c262d2fa061836da399313ed" translate="yes" xml:space="preserve">
          <source>Remove a group of controls to this form.</source>
          <target state="translated">このフォームからコントロールのグループを削除します。</target>
        </trans-unit>
        <trans-unit id="e7a38c48e797a3f1d17578e956636a4c90bd7f29" translate="yes" xml:space="preserve">
          <source>Remove a key from the store.</source>
          <target state="translated">店頭から鍵を取り出します。</target>
        </trans-unit>
        <trans-unit id="3d897e55ccff78c2ff5b4107c0eb0180e972a408" translate="yes" xml:space="preserve">
          <source>Remove all controls in the &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; のすべてのコントロールを削除します。</target>
        </trans-unit>
        <trans-unit id="0f0bd90c68fe76316f5f2ce32cfdc26eb59130e4" translate="yes" xml:space="preserve">
          <source>Remove all elements from a FormArray</source>
          <target state="translated">FormArray からすべての要素を削除する</target>
        </trans-unit>
        <trans-unit id="675a65343753f89282932f2d108d9401b5d4c082" translate="yes" xml:space="preserve">
          <source>Remove all mention of the &lt;code&gt;CrisisCenterModule&lt;/code&gt; from &lt;code&gt;app.module.ts&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CrisisCenterModule&lt;/code&gt; に関するすべての言及をapp.module.tsから &lt;code&gt;app.module.ts&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="354bb4620eb8d89f95b9ce62fa9eb46bf6e0c8b6" translate="yes" xml:space="preserve">
          <source>Remove any &lt;code&gt;map(res =&amp;gt; res.json())&lt;/code&gt; calls. They are no longer needed.</source>
          <target state="translated">&lt;code&gt;map(res =&amp;gt; res.json())&lt;/code&gt; 呼び出しをすべて削除します。それらはもはや必要ありません。</target>
        </trans-unit>
        <trans-unit id="0355b45ef70dfcbfc27082bbbab1a27db9c45ede" translate="yes" xml:space="preserve">
          <source>Remove dead code (optional)</source>
          <target state="translated">デッドコードの削除(オプション</target>
        </trans-unit>
        <trans-unit id="83f4d6ebf43d95496e091a268d3d2e865c85375a" translate="yes" xml:space="preserve">
          <source>Remove deprecated support for IE 9, 10, and IE mobile. See &lt;a href=&quot;https://github.com/angular/angular/pull/38931&quot;&gt;PR 38931&lt;/a&gt;.</source>
          <target state="translated">IE 9、10、およびIEモバイルの非推奨サポートを削除します。&lt;a href=&quot;https://github.com/angular/angular/pull/38931&quot;&gt;PR38931を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="64f42d0a7e5c675bc4fc4073516f4e88f7f3f0df" translate="yes" xml:space="preserve">
          <source>Remove duplicate hero routes</source>
          <target state="translated">重複したヒーロールートの削除</target>
        </trans-unit>
        <trans-unit id="da8a49a00d9c37a6610d70fea7180e05bfd548be" translate="yes" xml:space="preserve">
          <source>Remove heroes declarations</source>
          <target state="translated">英雄宣言を削除</target>
        </trans-unit>
        <trans-unit id="b749c5698be06d88d76f4c4c20af916d3cb9ea3a" translate="yes" xml:space="preserve">
          <source>Remove the &amp;lt;script&amp;gt; tag for the phone list component from &lt;code&gt;index.html&lt;/code&gt;.</source>
          <target state="translated">電話リストコンポーネントの&amp;lt;script&amp;gt;タグを &lt;code&gt;index.html&lt;/code&gt; から削除します。</target>
        </trans-unit>
        <trans-unit id="07e653fd3d1a09bf18e552cdb4c722cca2f49951" translate="yes" xml:space="preserve">
          <source>Remove the &lt;code&gt;HeroListComponent&lt;/code&gt; from the &lt;code&gt;AppModule&lt;/code&gt;'s &lt;code&gt;declarations&lt;/code&gt; because it's now provided by the &lt;code&gt;HeroesModule&lt;/code&gt;. You can evolve the hero feature with more components and different routes. That's a key benefit of creating a separate module for each feature area.</source>
          <target state="translated">削除 &lt;code&gt;HeroListComponent&lt;/code&gt; から &lt;code&gt;AppModule&lt;/code&gt; の &lt;code&gt;declarations&lt;/code&gt; それが今では提供されますので、 &lt;code&gt;HeroesModule&lt;/code&gt; 。より多くのコンポーネントと異なるルートでヒーロー機能を進化させることができます。これは、機能領域ごとに個別のモジュールを作成する主な利点です。</target>
        </trans-unit>
        <trans-unit id="228fb5b1cfd86efcf92c5af71ef03cc392fc0758" translate="yes" xml:space="preserve">
          <source>Remove the &lt;code&gt;HeroListComponent&lt;/code&gt; import and the &lt;code&gt;/heroes&lt;/code&gt; route from the &lt;code&gt;app-routing.module.ts&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;app-routing.module.ts&lt;/code&gt; から &lt;code&gt;HeroListComponent&lt;/code&gt; インポートと &lt;code&gt;/heroes&lt;/code&gt; ルートを削除します。</target>
        </trans-unit>
        <trans-unit id="7a6dce3d69d19a74546a704c4cb5ccb85bad0cfe" translate="yes" xml:space="preserve">
          <source>Remove the control at the given &lt;code&gt;index&lt;/code&gt; in the array.</source>
          <target state="translated">配列内の指定された &lt;code&gt;index&lt;/code&gt; にあるコントロールを削除します。</target>
        </trans-unit>
        <trans-unit id="e9896c7e9072371709a3d7ce5c4dcff841cbc002" translate="yes" xml:space="preserve">
          <source>Remove the initial crisis center route from the &lt;code&gt;app-routing.module.ts&lt;/code&gt; because now the &lt;code&gt;HeroesModule&lt;/code&gt; and the &lt;code&gt;CrisisCenter&lt;/code&gt; modules provide the feature routes.</source>
          <target state="translated">以下からの最初の危機センタールート削除 &lt;code&gt;app-routing.module.ts&lt;/code&gt; 今ので &lt;code&gt;HeroesModule&lt;/code&gt; と &lt;code&gt;CrisisCenter&lt;/code&gt; モジュールは機能ルートを提供しています。</target>
        </trans-unit>
        <trans-unit id="acef8513aff8e50c9de63f43d894a476d7a1a4b4" translate="yes" xml:space="preserve">
          <source>Remove the initial crisis center route from the &lt;code&gt;app-routing.module.ts&lt;/code&gt;. The feature routes are now provided by the &lt;code&gt;HeroesModule&lt;/code&gt; and the &lt;code&gt;CrisisCenter&lt;/code&gt; modules.</source>
          <target state="translated">&lt;code&gt;app-routing.module.ts&lt;/code&gt; から最初の危機センタールートを削除します。機能ルートは、 &lt;code&gt;CrisisCenter&lt;/code&gt; モジュールとCrisisCenterモジュールによって提供される &lt;code&gt;HeroesModule&lt;/code&gt; なりました。</target>
        </trans-unit>
        <trans-unit id="cab54fe624f00c44dfb29ea434660cb21fa96c33" translate="yes" xml:space="preserve">
          <source>Removed APIs</source>
          <target state="translated">削除されたAPI</target>
        </trans-unit>
        <trans-unit id="675b61563e331e987ff42c65c9681e0849490c82" translate="yes" xml:space="preserve">
          <source>Removes a given value or all values from a parameter.</source>
          <target state="translated">パラメータから指定された値またはすべての値を削除します。</target>
        </trans-unit>
        <trans-unit id="36388aed802da3334e538eaafea28bc9dc62465b" translate="yes" xml:space="preserve">
          <source>Removes a trailing slash from a URL string if needed. Looks for the first occurrence of either &lt;code&gt;#&lt;/code&gt;, &lt;code&gt;?&lt;/code&gt;, or the end of the line as &lt;code&gt;/&lt;/code&gt; characters and removes the trailing slash if one exists.</source>
          <target state="translated">必要に応じて、URL文字列から末尾のスラッシュを削除します。いずれかの最初の出現を探します &lt;code&gt;#&lt;/code&gt; 、 &lt;code&gt;?&lt;/code&gt; 、または &lt;code&gt;/&lt;/code&gt; 文字としての行の終わりと、末尾のスラッシュが存在する場合は削除します。</target>
        </trans-unit>
        <trans-unit id="6c702e0e52361022cd0fd6bbc6462d4b5c411831" translate="yes" xml:space="preserve">
          <source>Removes an existing &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; tag element from the current HTML document.</source>
          <target state="translated">現在のHTMLドキュメントから既存の &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; タグ要素を削除します。</target>
        </trans-unit>
        <trans-unit id="f77dcf847494e18c2040e4c43e2df4c50e620a4b" translate="yes" xml:space="preserve">
          <source>Removes or recreates a portion of the DOM tree based on the &lt;code&gt;showSection&lt;/code&gt; expression.</source>
          <target state="translated">&lt;code&gt;showSection&lt;/code&gt; 式に基づいて、DOMツリーの一部を削除または再作成します。</target>
        </trans-unit>
        <trans-unit id="5d4476d012096601913a81f6e9c72341413e9d5d" translate="yes" xml:space="preserve">
          <source>Removes the &lt;code&gt;&lt;a href=&quot;formcontrolname&quot;&gt;FormControlName&lt;/a&gt;&lt;/code&gt; instance from the internal list of directives</source>
          <target state="translated">ディレクティブの内部リストから &lt;code&gt;&lt;a href=&quot;formcontrolname&quot;&gt;FormControlName&lt;/a&gt;&lt;/code&gt; インスタンスを削除します</target>
        </trans-unit>
        <trans-unit id="8b2357fbee7e433019e97dfebac16d58751c7f42" translate="yes" xml:space="preserve">
          <source>Removes the &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; instance from the internal list of directives</source>
          <target state="translated">ディレクティブの内部リストから &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; インスタンスを削除します</target>
        </trans-unit>
        <trans-unit id="872946ce457e8ed2515586b6b9533517081ce7ea" translate="yes" xml:space="preserve">
          <source>Removes the &lt;code&gt;&lt;a href=&quot;ngmodelgroup&quot;&gt;NgModelGroup&lt;/a&gt;&lt;/code&gt; directive instance from the form.</source>
          <target state="translated">フォームから &lt;code&gt;&lt;a href=&quot;ngmodelgroup&quot;&gt;NgModelGroup&lt;/a&gt;&lt;/code&gt; ディレクティブインスタンスを削除します。</target>
        </trans-unit>
        <trans-unit id="27cdb6f2b6cb7abc01fe47bb82184cdf5686326e" translate="yes" xml:space="preserve">
          <source>Removes whitespace-only text nodes. For example,</source>
          <target state="translated">ホワイトスペースのみのテキストノードを削除します。例えば</target>
        </trans-unit>
        <trans-unit id="f8ecc17d3ab4f9a92555a0b5560eb0f9ba433b8c" translate="yes" xml:space="preserve">
          <source>Removing Bazel</source>
          <target state="translated">バゼルの除去</target>
        </trans-unit>
        <trans-unit id="bfcfcfb14e902bf6f8ca406c3fe92143c41a0ba9" translate="yes" xml:space="preserve">
          <source>Removing data access from components means you can change your mind about the implementation anytime, without touching any components. They don't know how the service works.</source>
          <target state="translated">コンポーネントからデータアクセスを削除するということは、コンポーネントに触れることなく、いつでも実装についての考えを変えることができるということです。サービスの仕組みを知らない</target>
        </trans-unit>
        <trans-unit id="c8a3c77f08cd8291fe544b9d209d82e28baa5950" translate="yes" xml:space="preserve">
          <source>Removing whitespace can greatly reduce AOT-generated code size and speed up view creation. As of Angular 6, the default for &lt;code&gt;&lt;a href=&quot;component#preserveWhitespaces&quot;&gt;preserveWhitespaces&lt;/a&gt;&lt;/code&gt; is false (whitespace is removed). To change the default setting for all components in your application, set the &lt;code&gt;&lt;a href=&quot;component#preserveWhitespaces&quot;&gt;preserveWhitespaces&lt;/a&gt;&lt;/code&gt; option of the AOT compiler.</source>
          <target state="translated">空白を削除すると、AOTで生成されるコードのサイズが大幅に削減され、ビューの作成が高速化されます。Angular 6以降、 &lt;code&gt;&lt;a href=&quot;component#preserveWhitespaces&quot;&gt;preserveWhitespaces&lt;/a&gt;&lt;/code&gt; のデフォルトはfalseです（空白は削除されます）。アプリケーションのすべてのコンポーネントのデフォルト設定を変更するには、AOTコンパイラーの &lt;code&gt;&lt;a href=&quot;component#preserveWhitespaces&quot;&gt;preserveWhitespaces&lt;/a&gt;&lt;/code&gt; オプションを設定します。</target>
        </trans-unit>
        <trans-unit id="adc5b4d194a26e5fb7a695273b5fb9fa82b9761a" translate="yes" xml:space="preserve">
          <source>Removing whitespace can greatly reduce AOT-generated code size and speed up view creation. As of Angular 6, the default for &lt;code&gt;preserveWhitespaces&lt;/code&gt; is false (whitespace is removed). To change the default setting for all components in your application, set the &lt;code&gt;preserveWhitespaces&lt;/code&gt; option of the AOT compiler.</source>
          <target state="translated">空白を削除すると、AOTで生成されるコードサイズが大幅に削減され、ビューの作成が高速化されます。Angular 6の時点で、 &lt;code&gt;preserveWhitespaces&lt;/code&gt; のデフォルトはfalseです（空白が削除されています）。アプリケーション内のすべてのコンポーネントのデフォルト設定を変更するには、AOTコンパイラの &lt;code&gt;preserveWhitespaces&lt;/code&gt; オプションを設定します。</target>
        </trans-unit>
        <trans-unit id="49f49405b61f30843af6003da162c8ee8625a285" translate="yes" xml:space="preserve">
          <source>Rename &lt;code&gt;&lt;a href=&quot;../api/common/asyncpipe&quot;&gt;async&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;../api/core/testing/waitforasync&quot;&gt;waitForAsync&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/common/asyncpipe&quot;&gt;async&lt;/a&gt;&lt;/code&gt; の名前を &lt;code&gt;&lt;a href=&quot;../api/core/testing/waitforasync&quot;&gt;waitForAsync&lt;/a&gt;&lt;/code&gt; に変更します</target>
        </trans-unit>
        <trans-unit id="1455f12769a3d50f36112140e2904afcdbdff365" translate="yes" xml:space="preserve">
          <source>Rename the NgModule files to &lt;code&gt;crisis-center.module.ts&lt;/code&gt; and &lt;code&gt;crisis-center-routing.module.ts&lt;/code&gt;.</source>
          <target state="translated">NgModuleファイルの名前を &lt;code&gt;crisis-center.module.ts&lt;/code&gt; および &lt;code&gt;crisis-center-routing.module.ts&lt;/code&gt; に変更します。</target>
        </trans-unit>
        <trans-unit id="060139a45ee7fa74f8aea343ea509e8ea84869cc" translate="yes" xml:space="preserve">
          <source>Rename the component's &lt;code&gt;hero&lt;/code&gt; property to &lt;code&gt;selectedHero&lt;/code&gt; but don't assign it. There is no &lt;em&gt;selected hero&lt;/em&gt; when the application starts.</source>
          <target state="translated">コンポーネントの &lt;code&gt;hero&lt;/code&gt; プロパティの名前を &lt;code&gt;selectedHero&lt;/code&gt; に変更しますが、割り当てないでください。アプリケーションの起動時に&lt;em&gt;選択されたヒーロー&lt;/em&gt;はありません。</target>
        </trans-unit>
        <trans-unit id="2432c6d61ab95ce70fedac148611a6612631bc92" translate="yes" xml:space="preserve">
          <source>Rename the copy to &lt;code&gt;messages.fr.xlf&lt;/code&gt; for the French language (&lt;code&gt;fr&lt;/code&gt;) translation. Send this translation file to the translator.</source>
          <target state="translated">コピーの名前を &lt;code&gt;messages.fr.xlf&lt;/code&gt; に変更して、フランス語（ &lt;code&gt;fr&lt;/code&gt; ）に翻訳します。この翻訳ファイルを翻訳者に送信します。</target>
        </trans-unit>
        <trans-unit id="9cb48a8e76df217606c36986299abb4e3fa45f36" translate="yes" xml:space="preserve">
          <source>Rename the copy to &lt;code&gt;messages.fr.xlf&lt;/code&gt; for the French language translation.</source>
          <target state="translated">フランス語の翻訳のために、コピーの名前を &lt;code&gt;messages.fr.xlf&lt;/code&gt; に変更します。</target>
        </trans-unit>
        <trans-unit id="71d2d7d24ec7e7f24ea084470bc301ff5eef960f" translate="yes" xml:space="preserve">
          <source>RenderComponentType</source>
          <target state="translated">RenderComponentType</target>
        </trans-unit>
        <trans-unit id="e72008facbad3c15c8bae1dc5a6d48d55c2181ce" translate="yes" xml:space="preserve">
          <source>Renderer</source>
          <target state="translated">Renderer</target>
        </trans-unit>
        <trans-unit id="cc99feb324f6b6cb7870e79c770886db703053d9" translate="yes" xml:space="preserve">
          <source>Renderer2</source>
          <target state="translated">Renderer2</target>
        </trans-unit>
        <trans-unit id="f05efcc1457680c2f44d46edb4c6e631506df261" translate="yes" xml:space="preserve">
          <source>RendererFactory2</source>
          <target state="translated">RendererFactory2</target>
        </trans-unit>
        <trans-unit id="c2d63a3d0692201be642c3e5b12a761c6202822f" translate="yes" xml:space="preserve">
          <source>RendererStyleFlags2</source>
          <target state="translated">RendererStyleFlags2</target>
        </trans-unit>
        <trans-unit id="4b61abbb7d2ad8773879992ad5774433aa516b59" translate="yes" xml:space="preserve">
          <source>RendererType2</source>
          <target state="translated">RendererType2</target>
        </trans-unit>
        <trans-unit id="79f5346b3de7d933df3da0b45252bd8407010458" translate="yes" xml:space="preserve">
          <source>Rendering a feature module&amp;rsquo;s component template</source>
          <target state="translated">機能モジュールのコンポーネントテンプレートのレンダリング</target>
        </trans-unit>
        <trans-unit id="b47a9f47d5939524c6012ea0b6181f4406d6227e" translate="yes" xml:space="preserve">
          <source>Rendering critical pages on the server is a technique that can greatly improve perceived responsiveness when the app first loads. An app that would otherwise take ten or more seconds to start could be rendered on the server and delivered to the user's device in less than a second.</source>
          <target state="translated">重要なページをサーバー上でレンダリングすることで、アプリが最初にロードされたときの反応性を大幅に向上させることができる技術です。そうでなければ起動に10秒以上かかるアプリをサーバー上でレンダリングして、1秒もかからずにユーザーのデバイスに配信することができます。</target>
        </trans-unit>
        <trans-unit id="f7b27806e37094fca797ad3deab14837abf019cf" translate="yes" xml:space="preserve">
          <source>Renders a &lt;a href=&quot;../core/ngmodulefactory&quot;&gt;&lt;code&gt;NgModuleFactory&lt;/code&gt;&lt;/a&gt; to string.</source>
          <target state="translated">&lt;a href=&quot;../core/ngmodulefactory&quot;&gt; &lt;code&gt;NgModuleFactory&lt;/code&gt; &lt;/a&gt;を文字列にレンダリングします。</target>
        </trans-unit>
        <trans-unit id="46e22790812ac0598ea57408ee918927b321f270" translate="yes" xml:space="preserve">
          <source>Renders a &lt;a href=&quot;core/ngmodulefactory&quot;&gt;&lt;code&gt;NgModuleFactory&lt;/code&gt;&lt;/a&gt; to string.</source>
          <target state="translated">&lt;a href=&quot;core/ngmodulefactory&quot;&gt; &lt;code&gt;NgModuleFactory&lt;/code&gt; &lt;/a&gt;を文字列にレンダリングします。</target>
        </trans-unit>
        <trans-unit id="2f3256d4a8135d6ea9724a5a9bef59f6a339cb2c" translate="yes" xml:space="preserve">
          <source>Renders a Module to string.</source>
          <target state="translated">モジュールを文字列に変換します。</target>
        </trans-unit>
        <trans-unit id="831690a047ef566fcaf6f184d3c0cf5a6c23f194" translate="yes" xml:space="preserve">
          <source>Renders the current state of the platform to string.</source>
          <target state="translated">プラットフォームの現在の状態を文字列にレンダリングします。</target>
        </trans-unit>
        <trans-unit id="a857a51e0149d2defb41cd5a8cade60428e4e3d1" translate="yes" xml:space="preserve">
          <source>Repeat the above steps for each language you want to add to your app.</source>
          <target state="translated">アプリに追加する言語ごとに上記の手順を繰り返します。</target>
        </trans-unit>
        <trans-unit id="c92d949883edb99abaf461c9bd691ee69bdf800d" translate="yes" xml:space="preserve">
          <source>Repeat this step for a second component but give it a different name. Here, the new name is &lt;code&gt;second&lt;/code&gt;.</source>
          <target state="translated">2番目のコンポーネントに対してこの手順を繰り返しますが、別の名前を付けます。ここで、新しい名前は &lt;code&gt;second&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="6cc508a44faffbd582b0ea5d9a7e401c3f62887b" translate="yes" xml:space="preserve">
          <source>Repeat to add more items to the cart.</source>
          <target state="translated">繰り返してカートに商品を追加します。</target>
        </trans-unit>
        <trans-unit id="a3631fed92fa9271412dda086e8601dba47a977f" translate="yes" xml:space="preserve">
          <source>Replace &lt;code&gt;HttpModule&lt;/code&gt; with &lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;&lt;code&gt;HttpClientModule&lt;/code&gt;&lt;/a&gt; (from &lt;a href=&quot;../api/common/http&quot;&gt;&lt;code&gt;@angular/common/http&lt;/code&gt;&lt;/a&gt;) in each of your modules.</source>
          <target state="translated">各モジュールで &lt;code&gt;HttpModule&lt;/code&gt; を&lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt; &lt;code&gt;HttpClientModule&lt;/code&gt; &lt;/a&gt;（&lt;a href=&quot;../api/common/http&quot;&gt; &lt;code&gt;@angular/common/http&lt;/code&gt; &lt;/a&gt;）に置き換えます。</target>
        </trans-unit>
        <trans-unit id="775add567e4ba89b65ba005f6e4ef796f364f4f1" translate="yes" xml:space="preserve">
          <source>Replace an existing control.</source>
          <target state="translated">既存のコントロールを置き換えます。</target>
        </trans-unit>
        <trans-unit id="35183ee247577ad2ab951c8a4e018783564a0cb3" translate="yes" xml:space="preserve">
          <source>Replace it with the following:</source>
          <target state="translated">以下のように置き換えてください。</target>
        </trans-unit>
        <trans-unit id="bf9be4259d7dbb3cbb65bc98ac003799fbdd38cc" translate="yes" xml:space="preserve">
          <source>Replace metadata for the given &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt;. Recall that modules can import other modules. The &lt;code&gt;overrideModule&lt;/code&gt; method can reach deeply into the current testing module to modify one of these inner modules.</source>
          <target state="translated">指定された &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; のメタデータを置き換えます。モジュールは他のモジュールをインポートできることを思い出してください。 &lt;code&gt;overrideModule&lt;/code&gt; の方法は、これらの内のモジュールのいずれかを変更するために、現在の試験モジュールに深く到達することができます。</target>
        </trans-unit>
        <trans-unit id="dbdfa3991734f11ff4020bf2d9aba4c1c8e5320c" translate="yes" xml:space="preserve">
          <source>Replace metadata for the given component class, which could be nested deeply within an inner module.</source>
          <target state="translated">与えられたコンポーネントクラスのメタデータを置き換えます。</target>
        </trans-unit>
        <trans-unit id="20c173c6528752be2b7b80d6e21e410a7734627f" translate="yes" xml:space="preserve">
          <source>Replace metadata for the given directive class, which could be nested deeply within an inner module.</source>
          <target state="translated">与えられたディレクティブクラスのメタデータを、内部モジュールの中に深く入れ子になっている可能性のあるものに置き換えます。</target>
        </trans-unit>
        <trans-unit id="ef5576d7423a0ff218fb985ae2f5a3473178c7e9" translate="yes" xml:space="preserve">
          <source>Replace metadata for the given pipe class, which could be nested deeply within an inner module.</source>
          <target state="translated">与えられたパイプクラスのメタデータを置き換えます。</target>
        </trans-unit>
        <trans-unit id="1ab0e2799274f4e39a105b05c25a0eaa68fd967d" translate="yes" xml:space="preserve">
          <source>Replace the &lt;code&gt;&lt;a href=&quot;../api/router/preloadallmodules&quot;&gt;PreloadAllModules&lt;/a&gt;&lt;/code&gt; strategy in the call to &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; with this &lt;code&gt;SelectivePreloadingStrategyService&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; の呼び出しの &lt;code&gt;&lt;a href=&quot;../api/router/preloadallmodules&quot;&gt;PreloadAllModules&lt;/a&gt;&lt;/code&gt; 戦略をこの &lt;code&gt;SelectivePreloadingStrategyService&lt;/code&gt; に置き換えます。</target>
        </trans-unit>
        <trans-unit id="eeafa99e5ba73fa0738a057df4186cf858ff663d" translate="yes" xml:space="preserve">
          <source>Replace the &lt;code&gt;&lt;a href=&quot;../api/router/preloadallmodules&quot;&gt;PreloadAllModules&lt;/a&gt;&lt;/code&gt; strategy in the call to &lt;code&gt;forRoot()&lt;/code&gt; with this &lt;code&gt;SelectivePreloadingStrategyService&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;forRoot()&lt;/code&gt; の呼び出しの &lt;code&gt;&lt;a href=&quot;../api/router/preloadallmodules&quot;&gt;PreloadAllModules&lt;/a&gt;&lt;/code&gt; ストラテジーを、この &lt;code&gt;SelectivePreloadingStrategyService&lt;/code&gt; に置き換えます。</target>
        </trans-unit>
        <trans-unit id="d252566134d4acca8e80e102dbd30e6e5cc077a4" translate="yes" xml:space="preserve">
          <source>Replace the &lt;code&gt;Http&lt;/code&gt; service with the &lt;a href=&quot;../api/common/http/httpclient&quot;&gt;&lt;code&gt;HttpClient&lt;/code&gt;&lt;/a&gt; service.</source>
          <target state="translated">&lt;code&gt;Http&lt;/code&gt; サービスを&lt;a href=&quot;../api/common/http/httpclient&quot;&gt; &lt;code&gt;HttpClient&lt;/code&gt; &lt;/a&gt;サービスに置き換えます。</target>
        </trans-unit>
        <trans-unit id="986eace1b762f87dee1e0be0169892a127224ec7" translate="yes" xml:space="preserve">
          <source>Replace the &lt;code&gt;getHeroes()&lt;/code&gt; method with the following:</source>
          <target state="translated">&lt;code&gt;getHeroes()&lt;/code&gt; メソッドを以下で置き換えます。</target>
        </trans-unit>
        <trans-unit id="2148a21a0a5511905d9037dc28562b13c3d17a2d" translate="yes" xml:space="preserve">
          <source>Replace the &lt;code&gt;imports&lt;/code&gt; array in that section with the following.</source>
          <target state="translated">そのセクションの &lt;code&gt;imports&lt;/code&gt; 配列を次のように置き換えます。</target>
        </trans-unit>
        <trans-unit id="aa9de07b8b03587f99be9a6632efdcef141fa44d" translate="yes" xml:space="preserve">
          <source>Replace the &lt;code&gt;ng12Hybrid&lt;/code&gt; previously added with the following in &lt;code&gt;protractor-conf.js&lt;/code&gt;:</source>
          <target state="translated">置き換え &lt;code&gt;ng12Hybrid&lt;/code&gt; を以前に以下を追加 &lt;code&gt;protractor-conf.js&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="2fcc06b39a58790c763190d869e9a2be72fb51f7" translate="yes" xml:space="preserve">
          <source>Replace the CLI-generated &lt;code&gt;MessagesComponent&lt;/code&gt; template with the following.</source>
          <target state="translated">CLIで生成された &lt;code&gt;MessagesComponent&lt;/code&gt; テンプレートを次のものに置き換えます。</target>
        </trans-unit>
        <trans-unit id="0eede105240be9f8f997c5bb228f4b1cb31af548" translate="yes" xml:space="preserve">
          <source>Replace the clone's body with the modified copy.</source>
          <target state="translated">クローンの本体を変更したコピーに置き換えます。</target>
        </trans-unit>
        <trans-unit id="0b046f796a3f34570eadb0ebbf1cfde44675bc81" translate="yes" xml:space="preserve">
          <source>Replace the contents of &lt;code&gt;selective-preloading-strategy.service.ts&lt;/code&gt; with the following:</source>
          <target state="translated">selection &lt;code&gt;selective-preloading-strategy.service.ts&lt;/code&gt; の内容を次のように置き換えます。</target>
        </trans-unit>
        <trans-unit id="2a9a3c91bae2642e4f7cf0f1a43c872b32c3f3ae" translate="yes" xml:space="preserve">
          <source>Replace the contents of each component with the sample HTML below.</source>
          <target state="translated">各コンポーネントの内容を以下のサンプルHTMLに置き換えてください。</target>
        </trans-unit>
        <trans-unit id="c16c7b495286df22440c048e266a2251ed768c07" translate="yes" xml:space="preserve">
          <source>Replace the contents of its template with the following:</source>
          <target state="translated">そのテンプレートの内容を以下のように置き換えます。</target>
        </trans-unit>
        <trans-unit id="12d4bc67bb7cc924258c88151a77d9461ee0e02d" translate="yes" xml:space="preserve">
          <source>Replace the default contents of &lt;code&gt;in-memory-data.service.ts&lt;/code&gt; with the following:</source>
          <target state="translated">&lt;code&gt;in-memory-data.service.ts&lt;/code&gt; のデフォルトの内容を以下で置き換えます。</target>
        </trans-unit>
        <trans-unit id="6805b011f5dfde0331dbfd2f3db8b3bdb663ffe8" translate="yes" xml:space="preserve">
          <source>Replace the default file content in these three files as follows:</source>
          <target state="translated">これら3つのファイルのデフォルトファイルの内容を以下のように置き換えます。</target>
        </trans-unit>
        <trans-unit id="0721d72ec342a357f8227c96061adfbffcb359cf" translate="yes" xml:space="preserve">
          <source>Replace the definition of the &lt;code&gt;heroes&lt;/code&gt; property with a simple declaration.</source>
          <target state="translated">&lt;code&gt;heroes&lt;/code&gt; プロパティの定義を単純な宣言に置き換えます。</target>
        </trans-unit>
        <trans-unit id="3110314b822b125cebd0ee19c84fb4e5a7b7a1d4" translate="yes" xml:space="preserve">
          <source>Replace the generated &lt;code&gt;HeroSearchComponent&lt;/code&gt; class and metadata as follows.</source>
          <target state="translated">生成された &lt;code&gt;HeroSearchComponent&lt;/code&gt; クラスとメタデータを次のように置き換えます。</target>
        </trans-unit>
        <trans-unit id="6314133dca67c7d1d68822d4be112a01c4763dcb" translate="yes" xml:space="preserve">
          <source>Replace the generated &lt;code&gt;HeroSearchComponent&lt;/code&gt; template with an &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; and a list of matching search results, as follows.</source>
          <target state="translated">次のように、生成された &lt;code&gt;HeroSearchComponent&lt;/code&gt; テンプレートを &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; と一致する検索結果のリストに置き換えます。</target>
        </trans-unit>
        <trans-unit id="bb3c65bcc253f91dc73a4651686e551fb35d3db7" translate="yes" xml:space="preserve">
          <source>Replace the list's &lt;code&gt;ng-repeat&lt;/code&gt; with an &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; as &lt;a href=&quot;built-in-directives&quot;&gt;described in the Template Syntax page&lt;/a&gt;. Replace the image tag's &lt;code&gt;ng-src&lt;/code&gt; with a binding to the native &lt;code&gt;src&lt;/code&gt; property.</source>
          <target state="translated">リストの置き換え &lt;code&gt;ng-repeat&lt;/code&gt; して &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; として&lt;a href=&quot;built-in-directives&quot;&gt;テンプレートの構文のページで説明&lt;/a&gt;。画像タグの &lt;code&gt;ng-src&lt;/code&gt; をネイティブ &lt;code&gt;src&lt;/code&gt; プロパティへのバインディングに置き換えます。</target>
        </trans-unit>
        <trans-unit id="8ad17c3063ed9c09e8a85e21cdea4f8779fcc38c" translate="yes" xml:space="preserve">
          <source>Replace the list's &lt;code&gt;ng-repeat&lt;/code&gt; with an &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; as &lt;a href=&quot;template-syntax#directives&quot;&gt;described in the Template Syntax page&lt;/a&gt;. Replace the image tag's &lt;code&gt;ng-src&lt;/code&gt; with a binding to the native &lt;code&gt;src&lt;/code&gt; property.</source>
          <target state="translated">&lt;a href=&quot;template-syntax#directives&quot;&gt;テンプレートの構文のページで説明されて&lt;/a&gt;いるように、リストの &lt;code&gt;ng-repeat&lt;/code&gt; を &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; に置き換えます。画像タグの &lt;code&gt;ng-src&lt;/code&gt; をネイティブの &lt;code&gt;src&lt;/code&gt; プロパティへのバインディングに置き換えます。</target>
        </trans-unit>
        <trans-unit id="fa68a4d3a899abae96fde2d07f46cef2bb12c2d9" translate="yes" xml:space="preserve">
          <source>Replaced automatically by the character used for the decimal point.</source>
          <target state="translated">小数点以下の文字で自動的に置き換えられます。</target>
        </trans-unit>
        <trans-unit id="1616683f51123aa85b938797d7eccf50d989a7ca" translate="yes" xml:space="preserve">
          <source>Replaced by a currency symbol, such as $ or USD.</source>
          <target state="translated">ドルや米ドルなどの通貨記号で置き換えられます。</target>
        </trans-unit>
        <trans-unit id="130457de5556d78c45ffb27874aba0a2f4581a51" translate="yes" xml:space="preserve">
          <source>Replaced by a digit (or nothing if there aren't enough).</source>
          <target state="translated">桁で置き換える(足りなければ何もしない)。</target>
        </trans-unit>
        <trans-unit id="8a24bd69dcffe43e79ed8d92f8bd8122a60cdfa7" translate="yes" xml:space="preserve">
          <source>Replaced by a digit (or zero if there aren't enough digits).</source>
          <target state="translated">桁(桁数が足りない場合はゼロ)で置き換えられます。</target>
        </trans-unit>
        <trans-unit id="2eb9f0197cc01234b225a71b39358c25fb1c1118" translate="yes" xml:space="preserve">
          <source>Replaced by the &quot;grouping&quot; (thousands) separator.</source>
          <target state="translated">グループ化」(数千)の区切り文字で置き換えられます。</target>
        </trans-unit>
        <trans-unit id="c385e347b2af0a4d67c9b1c9902c4b0b140d1abd" translate="yes" xml:space="preserve">
          <source>Replacement</source>
          <target state="translated">Replacement</target>
        </trans-unit>
        <trans-unit id="09cecdc0f55c3f8652b1bf40533ab20dc411dd8e" translate="yes" xml:space="preserve">
          <source>Replacement:</source>
          <target state="translated">Replacement:</target>
        </trans-unit>
        <trans-unit id="a762fc8ca497d0eaf0d4ff9f762e6237a7894894" translate="yes" xml:space="preserve">
          <source>Replaces a series of whitespace characters in text nodes with a single space. For example, &lt;code&gt;&amp;lt;span&amp;gt;\n some text\n&amp;lt;/span&amp;gt;&lt;/code&gt; becomes &lt;code&gt;&amp;lt;span&amp;gt; some text &amp;lt;/span&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">テキストノードの一連の空白文字を1つのスペースに置き換えます。たとえば、 &lt;code&gt;&amp;lt;span&amp;gt;\n some text\n&amp;lt;/span&amp;gt;&lt;/code&gt; は &lt;code&gt;&amp;lt;span&amp;gt; some text &amp;lt;/span&amp;gt;&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="083f882936136e841b75bb75bf2ce35311f333fa" translate="yes" xml:space="preserve">
          <source>Replaces the value for a parameter.</source>
          <target state="translated">パラメータの値を置き換えます。</target>
        </trans-unit>
        <trans-unit id="7065eac5998dcd922bbd9b6cd303c2622dbeb721" translate="yes" xml:space="preserve">
          <source>Replacing a form control value</source>
          <target state="translated">フォームコントロールの値を置き換える</target>
        </trans-unit>
        <trans-unit id="09101265ef25b728a1961e52a8992e174c2a4ab1" translate="yes" xml:space="preserve">
          <source>Replacing the array is an efficient way to signal Angular to update the display. When do you replace the array? When the data changes. That's an easy rule to follow in &lt;em&gt;this&lt;/em&gt; example where the only way to change the data is by adding a hero.</source>
          <target state="translated">配列を交換することは、Angularに表示を更新するように通知する効率的な方法です。いつアレイを交換しますか？データが変更されたとき。これは、データを変更する唯一の方法がヒーローを追加することである&lt;em&gt;この&lt;/em&gt;例で従うべき簡単なルールです。</target>
        </trans-unit>
        <trans-unit id="e8d1aaf14f595b036a6b2526783a74a6a832f9f9" translate="yes" xml:space="preserve">
          <source>Report missing translations</source>
          <target state="translated">欠落している翻訳を報告する</target>
        </trans-unit>
        <trans-unit id="bfc37608c32958ce7ebb03befffc73e782976778" translate="yes" xml:space="preserve">
          <source>Reporting vulnerabilities</source>
          <target state="translated">脆弱性の報告</target>
        </trans-unit>
        <trans-unit id="dad149400947fce310fd5dbf9c4bdcc324dd1b21" translate="yes" xml:space="preserve">
          <source>Reports all values regardless of disabled status. For enabled controls only, the &lt;code&gt;value&lt;/code&gt; property is the best way to get the value of the array.</source>
          <target state="translated">無効状態に関係なくすべての値を報告します。有効なコントロールの場合のみ、 &lt;code&gt;value&lt;/code&gt; プロパティは配列の値を取得する最良の方法です。</target>
        </trans-unit>
        <trans-unit id="607a1c982ecada24a795ac53eaf7916931b2c8db" translate="yes" xml:space="preserve">
          <source>Reports error data for the control with the given path.</source>
          <target state="translated">指定されたパスを持つコントロールのエラーデータを報告します。</target>
        </trans-unit>
        <trans-unit id="c326f5ecd3712d6c66ecd6be492d869d3265dbd1" translate="yes" xml:space="preserve">
          <source>Reports false for disabled controls. If you'd like to check for existence in the group only, use &lt;a href=&quot;abstractcontrol#get&quot;&gt;get&lt;/a&gt; instead.</source>
          <target state="translated">無効にされたコントロールについてfalseを報告します。グループ内のみの存在を確認する場合は、代わりに&lt;a href=&quot;abstractcontrol#get&quot;&gt;get&lt;/a&gt;を使用してください。</target>
        </trans-unit>
        <trans-unit id="130125151a1ab7068fbafef6087a7d527a3dce17" translate="yes" xml:space="preserve">
          <source>Reports how many views are currently attached to this container.</source>
          <target state="translated">現在このコンテナに接続されているビューの数を報告します。</target>
        </trans-unit>
        <trans-unit id="da3cbe5fd35eb520591314bcd9fed642496e6979" translate="yes" xml:space="preserve">
          <source>Reports the control's validation errors. If the control is not present, null is returned.</source>
          <target state="translated">コントロールの検証エラーを報告します。コントロールが存在しない場合、NULLが返されます。</target>
        </trans-unit>
        <trans-unit id="9c853b18375da7f1b792782cf1a6164080078185" translate="yes" xml:space="preserve">
          <source>Reports the current position of the animation.</source>
          <target state="translated">アニメーションの現在位置をレポートします。</target>
        </trans-unit>
        <trans-unit id="390cebcbc2534047ffe6b9a161695ea0a039f265" translate="yes" xml:space="preserve">
          <source>Reports the current state of the location history.</source>
          <target state="translated">現在の場所の履歴の状態を報告します。</target>
        </trans-unit>
        <trans-unit id="6ec5ad63919e194aeb01534cbdfbbd15566c337a" translate="yes" xml:space="preserve">
          <source>Reports the number of decimal digits for a given currency. The value depends upon the presence of cents in that particular currency.</source>
          <target state="translated">指定した通貨の小数点以下の桁数を報告します。値は、その通貨のセントの存在に依存します。</target>
        </trans-unit>
        <trans-unit id="5183aae0c0e9784d82b6918057bbb0ad6d371363" translate="yes" xml:space="preserve">
          <source>Reports the update strategy of the &lt;code&gt;&lt;a href=&quot;abstractcontrol&quot;&gt;AbstractControl&lt;/a&gt;&lt;/code&gt; (meaning the event on which the control updates itself). Possible values: &lt;code&gt;'change'&lt;/code&gt; | &lt;code&gt;'blur'&lt;/code&gt; | &lt;code&gt;'submit'&lt;/code&gt; Default value: &lt;code&gt;'change'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;abstractcontrol&quot;&gt;AbstractControl&lt;/a&gt;&lt;/code&gt; の更新戦略を報告します（コントロールがそれ自体を更新するイベントを意味します）。可能な値： &lt;code&gt;'change'&lt;/code&gt; | &lt;code&gt;'blur'&lt;/code&gt; | &lt;code&gt;'submit'&lt;/code&gt; デフォルト値： &lt;code&gt;'change'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b791b780c1b97bd2b3cb2b99a63e94cd5859bdd5" translate="yes" xml:space="preserve">
          <source>Reports the validation status of the control. Possible values include: 'VALID', 'INVALID', 'DISABLED', and 'PENDING'. If the control is not present, null is returned.</source>
          <target state="translated">コントロールの検証ステータスを報告します。可能な値は以下のとおりです。VALID」、「INVALID」、「DISABLED」、および「PENDING」。コントロールが存在しない場合、NULLが返されます。</target>
        </trans-unit>
        <trans-unit id="4e6a8dc9087dcdf544a49971917e5ec9ef85024d" translate="yes" xml:space="preserve">
          <source>Reports the value of the control if it is present, otherwise null.</source>
          <target state="translated">コントロールが存在する場合はその値を報告し、そうでない場合はnullを報告します。</target>
        </trans-unit>
        <trans-unit id="2063aaf2335423c6b6ba5c9e8bb12f84f3e2bb52" translate="yes" xml:space="preserve">
          <source>Reports whether a control is pending, meaning that that async validation is occurring and errors are not yet available for the input value. If the control is not present, null is returned.</source>
          <target state="translated">コントロールが保留中であるかどうかを報告します。これは、非同期検証が行われており、入力値に対してエラーがまだ利用できないことを意味します。コントロールが存在しない場合、NULLが返されます。</target>
        </trans-unit>
        <trans-unit id="5dc3b505ae0f4e63f15bcf3a9f65c74da9dc1054" translate="yes" xml:space="preserve">
          <source>Reports whether the animation has started.</source>
          <target state="translated">アニメーションが開始されたかどうかを報告します。</target>
        </trans-unit>
        <trans-unit id="301f10951c97f894da3905178db39b3dfb13d94e" translate="yes" xml:space="preserve">
          <source>Reports whether the body includes one or more values for a given parameter.</source>
          <target state="translated">ボディに指定されたパラメータの値が1つ以上含まれているかどうかを報告します。</target>
        </trans-unit>
        <trans-unit id="1e03113ec4e9c771759659e59b1714f7c589c5be" translate="yes" xml:space="preserve">
          <source>Reports whether the control is dirty, meaning that the user has changed the value in the UI. If the control is not present, null is returned.</source>
          <target state="translated">コントロールがダーティであるかどうか、つまりユーザーがUIの値を変更したことを意味するかどうかを報告します。コントロールが存在しない場合、null が返されます。</target>
        </trans-unit>
        <trans-unit id="b938ac7dbe724572747d7ae0219802d641f9e0d4" translate="yes" xml:space="preserve">
          <source>Reports whether the control is disabled, meaning that the control is disabled in the UI and is exempt from validation checks and excluded from aggregate values of ancestor controls. If the control is not present, null is returned.</source>
          <target state="translated">コントロールが無効化されているかどうかを報告します。つまり、コントロールがUIで無効化されており、検証チェックの対象外であり、祖先コントロールの集約値から除外されていることを意味します。コントロールが存在しない場合、NULLが返されます。</target>
        </trans-unit>
        <trans-unit id="66c7322fff3965079eae8ceacb2cb54262945bb4" translate="yes" xml:space="preserve">
          <source>Reports whether the control is enabled, meaning that the control is included in ancestor calculations of validity or value. If the control is not present, null is returned.</source>
          <target state="translated">コントロールが有効であるかどうかを報告します。つまり、コントロールが妥当性または値の祖先計算に含まれていることを意味します。コントロールが存在しない場合は、NULLが返されます。</target>
        </trans-unit>
        <trans-unit id="f53c7ed7c72d51420e991af97be6612aa5487b52" translate="yes" xml:space="preserve">
          <source>Reports whether the control is invalid, meaning that an error exists in the input value. If the control is not present, null is returned.</source>
          <target state="translated">コントロールが無効であるかどうか、つまり入力値にエラーが存在するかどうかを報告します。コントロールが存在しない場合、NULLが返されます。</target>
        </trans-unit>
        <trans-unit id="92296c7a28a248803c800197a6b8019063501540" translate="yes" xml:space="preserve">
          <source>Reports whether the control is pristine, meaning that the user has not yet changed the value in the UI. If the control is not present, null is returned.</source>
          <target state="translated">コントロールがpristineであるかどうか、つまりユーザーがUIの値をまだ変更していないかどうかを報告します。コントロールが存在しない場合、null が返されます。</target>
        </trans-unit>
        <trans-unit id="7d0652e4ea51938f37feb12c9b89ed5c64f6d53d" translate="yes" xml:space="preserve">
          <source>Reports whether the control is touched, meaning that the user has triggered a &lt;code&gt;blur&lt;/code&gt; event on it. If the control is not present, null is returned.</source>
          <target state="translated">コントロールがタッチされているかどうかを報告します。これは、ユーザーがコントロールで &lt;code&gt;blur&lt;/code&gt; イベントをトリガーしたことを意味します。コントロールが存在しない場合、nullが返されます。</target>
        </trans-unit>
        <trans-unit id="1c75120d9ce1eb5a7cceafd7c81bfd10004d10ab" translate="yes" xml:space="preserve">
          <source>Reports whether the control is untouched, meaning that the user has not yet triggered a &lt;code&gt;blur&lt;/code&gt; event on it. If the control is not present, null is returned.</source>
          <target state="translated">コントロールが変更されていないかどうか、つまりユーザーがまだコントロールで &lt;code&gt;blur&lt;/code&gt; イベントをトリガーしていないかどうかを報告します。コントロールが存在しない場合、nullが返されます。</target>
        </trans-unit>
        <trans-unit id="2a58091754881f0a0f78a56cf951f8a26f1373fe" translate="yes" xml:space="preserve">
          <source>Reports whether the control is valid. A control is considered valid if no validation errors exist with the current value. If the control is not present, null is returned.</source>
          <target state="translated">コントロールが有効かどうかを報告します。現在の値に検証エラーが存在しない場合、コントロールは有効とみなされます。コントロールが存在しない場合、nullが返されます。</target>
        </trans-unit>
        <trans-unit id="78154373f7280227f1e52638c470c2c9f272e414" translate="yes" xml:space="preserve">
          <source>Reports whether the control with the given path has the error specified.</source>
          <target state="translated">指定されたパスを持つコントロールが指定されたエラーを持っているかどうかを報告します。</target>
        </trans-unit>
        <trans-unit id="cd4fc64b3caa17d2a2af5f5285b67610e2efba08" translate="yes" xml:space="preserve">
          <source>Reports whether the form submission has been triggered.</source>
          <target state="translated">フォーム送信がトリガされたかどうかを報告します。</target>
        </trans-unit>
        <trans-unit id="3bb2a49d5e909d63439e908826b702ff2681065b" translate="yes" xml:space="preserve">
          <source>Reports whether the map contains a given parameter.</source>
          <target state="translated">マップに指定されたパラメータが含まれているかどうかを報告します。</target>
        </trans-unit>
        <trans-unit id="15cf9f706b1d1a3f1f1977496bffd149294f43e5" translate="yes" xml:space="preserve">
          <source>Reports whether this view has been destroyed.</source>
          <target state="translated">このビューが破壊されたかどうかを報告します。</target>
        </trans-unit>
        <trans-unit id="aa79f241bf8f91eba2582c7e4b6ea60cbba47ffc" translate="yes" xml:space="preserve">
          <source>Representation of the current platform state.</source>
          <target state="translated">現在のプラットフォームの状態を表す。</target>
        </trans-unit>
        <trans-unit id="7fdc9ac4a9bbc92d9a4961b34831cad04cfe6b4b" translate="yes" xml:space="preserve">
          <source>Represents a basic change from a previous to a new value for a single property on a directive instance. Passed as a value in a &lt;a href=&quot;core/simplechanges&quot;&gt;&lt;code&gt;SimpleChanges&lt;/code&gt;&lt;/a&gt; object to the &lt;code&gt;ngOnChanges&lt;/code&gt; hook.</source>
          <target state="translated">ディレクティブインスタンスの単一のプロパティの以前の値から新しい値への基本的な変更を表します。&lt;a href=&quot;core/simplechanges&quot;&gt; &lt;code&gt;SimpleChanges&lt;/code&gt; &lt;/a&gt;オブジェクトの値として &lt;code&gt;ngOnChanges&lt;/code&gt; フックに渡されます。</target>
        </trans-unit>
        <trans-unit id="551f27c388f2931f9bb9dd245d7387369ea71bc0" translate="yes" xml:space="preserve">
          <source>Represents a basic change from a previous to a new value for a single property on a directive instance. Passed as a value in a &lt;a href=&quot;simplechanges&quot;&gt;&lt;code&gt;SimpleChanges&lt;/code&gt;&lt;/a&gt; object to the &lt;code&gt;ngOnChanges&lt;/code&gt; hook.</source>
          <target state="translated">ディレクティブインスタンスの単一のプロパティの以前の値から新しい値への基本的な変更を表します。&lt;a href=&quot;simplechanges&quot;&gt; &lt;code&gt;SimpleChanges&lt;/code&gt; &lt;/a&gt;オブジェクトの値として &lt;code&gt;ngOnChanges&lt;/code&gt; フックに渡されます。</target>
        </trans-unit>
        <trans-unit id="486473b3ba617628c250574c1d165728d5233dc5" translate="yes" xml:space="preserve">
          <source>Represents a component created by a &lt;code&gt;&lt;a href=&quot;componentfactory&quot;&gt;ComponentFactory&lt;/a&gt;&lt;/code&gt;. Provides access to the component instance and related objects, and provides the means of destroying the instance.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;componentfactory&quot;&gt;ComponentFactory&lt;/a&gt;&lt;/code&gt; によって作成されたコンポーネントを表します。コンポーネントインスタンスと関連オブジェクトへのアクセスを提供し、インスタンスを破棄する手段を提供します。</target>
        </trans-unit>
        <trans-unit id="dd278233448b84a7691e7c203ac2822054195ea0" translate="yes" xml:space="preserve">
          <source>Represents a component created by a &lt;code&gt;&lt;a href=&quot;core/componentfactory&quot;&gt;ComponentFactory&lt;/a&gt;&lt;/code&gt;. Provides access to the component instance and related objects, and provides the means of destroying the instance.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;core/componentfactory&quot;&gt;ComponentFactory&lt;/a&gt;&lt;/code&gt; によって作成されたコンポーネントを表します。コンポーネントインスタンスと関連オブジェクトへのアクセスを提供し、インスタンスを破棄する手段を提供します。</target>
        </trans-unit>
        <trans-unit id="8d2cbf93c7a81a9b408ca92a9a607ffcce817ef4" translate="yes" xml:space="preserve">
          <source>Represents a container where one or more views can be attached to a component.</source>
          <target state="translated">1つまたは複数のビューをコンポーネントにアタッチすることができるコンテナを表します。</target>
        </trans-unit>
        <trans-unit id="1d5f1086c4ad81fc008a9b95e610a870ff70b4b5" translate="yes" xml:space="preserve">
          <source>Represents a meta element.</source>
          <target state="translated">メタ要素を表します。</target>
        </trans-unit>
        <trans-unit id="1e7d3f29e1eaf204f4c8cf8841ba5ae9040d2581" translate="yes" xml:space="preserve">
          <source>Represents a route configuration for the Router service. An array of &lt;code&gt;&lt;a href=&quot;route&quot;&gt;Route&lt;/a&gt;&lt;/code&gt; objects, used in &lt;code&gt;&lt;a href=&quot;router#config&quot;&gt;Router.config&lt;/a&gt;&lt;/code&gt; and for nested route configurations in &lt;code&gt;&lt;a href=&quot;route#children&quot;&gt;Route.children&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">ルーターサービスのルート構成を表します。アレイ &lt;code&gt;&lt;a href=&quot;route&quot;&gt;Route&lt;/a&gt;&lt;/code&gt; で使用されるオブジェクト、 &lt;code&gt;&lt;a href=&quot;router#config&quot;&gt;Router.config&lt;/a&gt;&lt;/code&gt; とにネストされた経路設定のため &lt;code&gt;&lt;a href=&quot;route#children&quot;&gt;Route.children&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c950b32102cc63cbc6edd2be67c146f7233176e3" translate="yes" xml:space="preserve">
          <source>Represents a route configuration for the Router service. An array of &lt;code&gt;&lt;a href=&quot;router/route&quot;&gt;Route&lt;/a&gt;&lt;/code&gt; objects, used in &lt;code&gt;&lt;a href=&quot;router/router#config&quot;&gt;Router.config&lt;/a&gt;&lt;/code&gt; and for nested route configurations in &lt;code&gt;&lt;a href=&quot;router/route#children&quot;&gt;Route.children&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">ルーターサービスのルート構成を表します。アレイ &lt;code&gt;&lt;a href=&quot;router/route&quot;&gt;Route&lt;/a&gt;&lt;/code&gt; で使用されるオブジェクト、 &lt;code&gt;&lt;a href=&quot;router/router#config&quot;&gt;Router.config&lt;/a&gt;&lt;/code&gt; とにネストされた経路設定のため &lt;code&gt;&lt;a href=&quot;router/route#children&quot;&gt;Route.children&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="27d4922d31f87648d26a6ba749cc244f7d215f8a" translate="yes" xml:space="preserve">
          <source>Represents a single URL segment.</source>
          <target state="translated">単一の URL セグメントを表します。</target>
        </trans-unit>
        <trans-unit id="80fd182a7b798bdf2cc0f82eabc55aaa8cbb6b1f" translate="yes" xml:space="preserve">
          <source>Represents a time value with hours and minutes.</source>
          <target state="translated">時間と分の時間値を表します。</target>
        </trans-unit>
        <trans-unit id="7e2d7df8d52ed5731608badf33df32eb62092397" translate="yes" xml:space="preserve">
          <source>Represents a type that a Component or other object is instances of.</source>
          <target state="translated">Componentなどのオブジェクトのインスタンスの型を表します。</target>
        </trans-unit>
        <trans-unit id="8855d1f7965e1105fd0e2b5a82b018089c830664" translate="yes" xml:space="preserve">
          <source>Represents an Angular &lt;a href=&quot;../../guide/glossary#view&quot;&gt;view&lt;/a&gt; in a view container. An &lt;a href=&quot;../../guide/glossary#view-tree&quot;&gt;embedded view&lt;/a&gt; can be referenced from a component other than the hosting component whose template defines it, or it can be defined independently by a &lt;code&gt;&lt;a href=&quot;templateref&quot;&gt;TemplateRef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">ビューコンテナー内の角度&lt;a href=&quot;../../guide/glossary#view&quot;&gt;ビュー&lt;/a&gt;を表します。&lt;a href=&quot;../../guide/glossary#view-tree&quot;&gt;埋め込まれたビューは&lt;/a&gt;、そのテンプレートを定義ホスティング成分以外の成分から参照することができ、またはそれは、によって独立して定義することができる &lt;code&gt;&lt;a href=&quot;templateref&quot;&gt;TemplateRef&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c1474620d16464c5b015b9887a5b11cbb356e2fb" translate="yes" xml:space="preserve">
          <source>Represents an Angular &lt;a href=&quot;../../guide/glossary#view&quot;&gt;view&lt;/a&gt;, specifically the &lt;a href=&quot;../../guide/glossary#view-tree&quot;&gt;host view&lt;/a&gt; that is defined by a component. Also serves as the base class that adds destroy methods for &lt;a href=&quot;../../guide/glossary#view-tree&quot;&gt;embedded views&lt;/a&gt;.</source>
          <target state="translated">Angular &lt;a href=&quot;../../guide/glossary#view&quot;&gt;ビュー&lt;/a&gt;、特にコンポーネントによって定義される&lt;a href=&quot;../../guide/glossary#view-tree&quot;&gt;ホストビュー&lt;/a&gt;を表します。&lt;a href=&quot;../../guide/glossary#view-tree&quot;&gt;埋め込みビューに&lt;/a&gt; destroyメソッドを追加する基本クラスとしても機能します。</target>
        </trans-unit>
        <trans-unit id="aa941ac6d1e32a0b3784ee7ed7a1c43de03ad972" translate="yes" xml:space="preserve">
          <source>Represents an Angular &lt;a href=&quot;../../guide/glossary#view&quot;&gt;view&lt;/a&gt;.</source>
          <target state="translated">角度&lt;a href=&quot;../../guide/glossary#view&quot;&gt;ビューを&lt;/a&gt;表します。</target>
        </trans-unit>
        <trans-unit id="de1910de827c29f7f09f1bcbebe02f70c743a697" translate="yes" xml:space="preserve">
          <source>Represents an Angular &lt;a href=&quot;../guide/glossary#view&quot;&gt;view&lt;/a&gt; in a view container. An &lt;a href=&quot;../guide/glossary#view-tree&quot;&gt;embedded view&lt;/a&gt; can be referenced from a component other than the hosting component whose template defines it, or it can be defined independently by a &lt;code&gt;&lt;a href=&quot;core/templateref&quot;&gt;TemplateRef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">ビューコンテナー内の角度&lt;a href=&quot;../guide/glossary#view&quot;&gt;ビュー&lt;/a&gt;を表します。&lt;a href=&quot;../guide/glossary#view-tree&quot;&gt;埋め込まれたビューは&lt;/a&gt;、そのテンプレートを定義ホスティング成分以外の成分から参照することができ、またはそれは、によって独立して定義することができる &lt;code&gt;&lt;a href=&quot;core/templateref&quot;&gt;TemplateRef&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="05e33238d67a3c70cfb2776240f2a8e4d9bb3146" translate="yes" xml:space="preserve">
          <source>Represents an Angular &lt;a href=&quot;../guide/glossary#view&quot;&gt;view&lt;/a&gt;, specifically the &lt;a href=&quot;../guide/glossary#view-tree&quot;&gt;host view&lt;/a&gt; that is defined by a component. Also serves as the base class that adds destroy methods for &lt;a href=&quot;../guide/glossary#view-tree&quot;&gt;embedded views&lt;/a&gt;.</source>
          <target state="translated">Angular &lt;a href=&quot;../guide/glossary#view&quot;&gt;ビュー&lt;/a&gt;、特にコンポーネントによって定義される&lt;a href=&quot;../guide/glossary#view-tree&quot;&gt;ホストビュー&lt;/a&gt;を表します。&lt;a href=&quot;../guide/glossary#view-tree&quot;&gt;埋め込みビューに&lt;/a&gt; destroyメソッドを追加する基本クラスとしても機能します。</target>
        </trans-unit>
        <trans-unit id="f06aed64c3d5975e1b2cb073ff993dad4186941d" translate="yes" xml:space="preserve">
          <source>Represents an Angular &lt;a href=&quot;../guide/glossary#view&quot;&gt;view&lt;/a&gt;.</source>
          <target state="translated">角度&lt;a href=&quot;../guide/glossary#view&quot;&gt;ビューを&lt;/a&gt;表します。</target>
        </trans-unit>
        <trans-unit id="9acd8f3b5eb9ee185f453118cb503e8e597291b7" translate="yes" xml:space="preserve">
          <source>Represents an abstract class &lt;code&gt;T&lt;/code&gt;, if applied to a concrete class it would stop being instantiable.</source>
          <target state="translated">抽象クラス &lt;code&gt;T&lt;/code&gt; を表します。具象クラスに適用すると、インスタンス化できなくなります。</target>
        </trans-unit>
        <trans-unit id="86a343d9d6615393f8c795c8e22af6e371f3a4e6" translate="yes" xml:space="preserve">
          <source>Represents an abstract class &lt;code&gt;T&lt;/code&gt;, if applied to a concrete class it would stop being instantiatable.</source>
          <target state="translated">抽象クラス &lt;code&gt;T&lt;/code&gt; を表します。具象クラスに適用すると、インスタンス化できなくなります。</target>
        </trans-unit>
        <trans-unit id="48b56a345db5d7d9430c6431f732ef6804310f4e" translate="yes" xml:space="preserve">
          <source>Represents an embedded template that can be used to instantiate embedded views. To instantiate embedded views based on a template, use the &lt;code&gt;&lt;a href=&quot;core/viewcontainerref&quot;&gt;ViewContainerRef&lt;/a&gt;&lt;/code&gt; method &lt;code&gt;createEmbeddedView()&lt;/code&gt;.</source>
          <target state="translated">埋め込みビューのインスタンス化に使用できる埋め込みテンプレートを表します。テンプレートに基づいて埋め込みビューをインスタンス化するには、 &lt;code&gt;&lt;a href=&quot;core/viewcontainerref&quot;&gt;ViewContainerRef&lt;/a&gt;&lt;/code&gt; メソッド &lt;code&gt;createEmbeddedView()&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="9f097966af7488b335e4597b088c53b538a72dd0" translate="yes" xml:space="preserve">
          <source>Represents an embedded template that can be used to instantiate embedded views. To instantiate embedded views based on a template, use the &lt;code&gt;&lt;a href=&quot;viewcontainerref&quot;&gt;ViewContainerRef&lt;/a&gt;&lt;/code&gt; method &lt;code&gt;createEmbeddedView()&lt;/code&gt;.</source>
          <target state="translated">埋め込みビューのインスタンス化に使用できる埋め込みテンプレートを表します。テンプレートに基づいて埋め込みビューをインスタンス化するには、 &lt;code&gt;&lt;a href=&quot;viewcontainerref&quot;&gt;ViewContainerRef&lt;/a&gt;&lt;/code&gt; メソッド &lt;code&gt;createEmbeddedView()&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="aca27f8de8d6b5fcbddd63eb28fc2e2f088908ac" translate="yes" xml:space="preserve">
          <source>Represents an instance of an &lt;code&gt;&lt;a href=&quot;core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; created by an &lt;code&gt;&lt;a href=&quot;core/ngmodulefactory&quot;&gt;NgModuleFactory&lt;/a&gt;&lt;/code&gt;. Provides access to the &lt;code&gt;&lt;a href=&quot;core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; instance and related objects.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; Factoryによって作成された &lt;code&gt;&lt;a href=&quot;core/ngmodulefactory&quot;&gt;NgModuleFactory&lt;/a&gt;&lt;/code&gt; インスタンスを表します。 &lt;code&gt;&lt;a href=&quot;core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; インスタンスおよび関連オブジェクトへのアクセスを提供します。</target>
        </trans-unit>
        <trans-unit id="271f66d60a76a18a700efa8ee6c6b5b1bdbf4699" translate="yes" xml:space="preserve">
          <source>Represents an instance of an &lt;code&gt;&lt;a href=&quot;ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; created by an &lt;code&gt;&lt;a href=&quot;ngmodulefactory&quot;&gt;NgModuleFactory&lt;/a&gt;&lt;/code&gt;. Provides access to the &lt;code&gt;&lt;a href=&quot;ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; instance and related objects.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; Factoryによって作成された &lt;code&gt;&lt;a href=&quot;ngmodulefactory&quot;&gt;NgModuleFactory&lt;/a&gt;&lt;/code&gt; インスタンスを表します。 &lt;code&gt;&lt;a href=&quot;ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; インスタンスおよび関連オブジェクトへのアクセスを提供します。</target>
        </trans-unit>
        <trans-unit id="2de76fa8b01fb284aff4f7c8ede2b8d16ccd296d" translate="yes" xml:space="preserve">
          <source>Represents an instance of an NgModule created via a &lt;a href=&quot;core/ngmodulefactory&quot;&gt;&lt;code&gt;NgModuleFactory&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">NgModuleFactoryを介して作成されたNgModuleのインスタンスを&lt;a href=&quot;core/ngmodulefactory&quot;&gt; &lt;code&gt;NgModuleFactory&lt;/code&gt; &lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="b7dc486058809e798bca1587b0959242fe8a34da" translate="yes" xml:space="preserve">
          <source>Represents an instance of an NgModule created via a &lt;a href=&quot;ngmodulefactory&quot;&gt;&lt;code&gt;NgModuleFactory&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">NgModuleFactoryを介して作成されたNgModuleのインスタンスを&lt;a href=&quot;ngmodulefactory&quot;&gt; &lt;code&gt;NgModuleFactory&lt;/code&gt; &lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="0d6cb74b78c65ce846c31c91186c5cc5f11e71db" translate="yes" xml:space="preserve">
          <source>Represents animation-step timing parameters for an animation step.</source>
          <target state="translated">アニメーションステップのタイミングパラメータを表します。</target>
        </trans-unit>
        <trans-unit id="a3f1412fbf75b8cbde3f7322cdadd1397a72fb42" translate="yes" xml:space="preserve">
          <source>Represents static data associated with a particular route.</source>
          <target state="translated">特定のルートに関連付けられた静的データを表します。</target>
        </trans-unit>
        <trans-unit id="e75bc834a770ee79b6d16d8584c3340dd16f027d" translate="yes" xml:space="preserve">
          <source>Represents the attributes of an HTML &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; element. The element itself is represented by the internal &lt;code&gt;HTMLMetaElement&lt;/code&gt;.</source>
          <target state="translated">HTMLの &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; 要素の属性を表します。要素自体は、内部 &lt;code&gt;HTMLMetaElement&lt;/code&gt; によって表されます。</target>
        </trans-unit>
        <trans-unit id="f4060a1d56ff6f2b872cffc6cb977755e3940386" translate="yes" xml:space="preserve">
          <source>Represents the detached route tree.</source>
          <target state="translated">切り離されたルートツリーを表します。</target>
        </trans-unit>
        <trans-unit id="f953e52d394859f218f7481077ee53e17599d7e8" translate="yes" xml:space="preserve">
          <source>Represents the header configuration options for an HTTP request. Instances are immutable. Modifying methods return a cloned instance with the change. The original object is never changed.</source>
          <target state="translated">HTTP リクエストのヘッダ設定オプションを表します。インスタンスは不変です。変更するメソッドは、変更されたクローン化されたインスタンスを返します。元のオブジェクトは変更されません。</target>
        </trans-unit>
        <trans-unit id="e1b16e69f19523c0999ac65f5caacb500d78a393" translate="yes" xml:space="preserve">
          <source>Represents the parsed URL segment group.</source>
          <target state="translated">解析されたURLセグメントグループを表します。</target>
        </trans-unit>
        <trans-unit id="07e78a87630648b457077a03232afd13a392fc9b" translate="yes" xml:space="preserve">
          <source>Represents the parsed URL.</source>
          <target state="translated">解析されたURLを表します。</target>
        </trans-unit>
        <trans-unit id="0bf1386fee21aa4e6b830340578838186ea317eb" translate="yes" xml:space="preserve">
          <source>Represents the resolved data associated with a particular route.</source>
          <target state="translated">特定のルートに関連付けられた解決済みデータを表します。</target>
        </trans-unit>
        <trans-unit id="df6be6fb11064cb484baf60135b4f61a41ac4e54" translate="yes" xml:space="preserve">
          <source>Represents the result of matching URLs with a custom matching function.</source>
          <target state="translated">カスタムマッチング関数を使ってURLをマッチングした結果を表します。</target>
        </trans-unit>
        <trans-unit id="e6a0e0e70e1102979afb5ac921b4a2db49f650f6" translate="yes" xml:space="preserve">
          <source>Represents the state of the router as a tree of activated routes.</source>
          <target state="translated">ルータの状態を有効なルートのツリーとして表します。</target>
        </trans-unit>
        <trans-unit id="b093c5d5c8cd0d55164578740ffe4e5a1534b39f" translate="yes" xml:space="preserve">
          <source>Represents the state of the router at a moment in time.</source>
          <target state="translated">ある時点でのルータの状態を表します。</target>
        </trans-unit>
        <trans-unit id="5e7f377e593ecb8f06ed5b554c2d79625e02c767" translate="yes" xml:space="preserve">
          <source>Represents the version of Angular</source>
          <target state="translated">Angularのバージョンを表します。</target>
        </trans-unit>
        <trans-unit id="e6b1823305f7eafee6970355bd97157b79efcd8d" translate="yes" xml:space="preserve">
          <source>Request and response &lt;a href=&quot;http#intercepting-requests-and-responses&quot;&gt;interception&lt;/a&gt;.</source>
          <target state="translated">要求と応答の&lt;a href=&quot;http#intercepting-requests-and-responses&quot;&gt;傍受&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1c600f4f45cf929630e597d3f3425ddb5644f92e" translate="yes" xml:space="preserve">
          <source>RequestMatch</source>
          <target state="translated">RequestMatch</target>
        </trans-unit>
        <trans-unit id="a8af7e5fc31a5ed7be2900f5271a97a959432adb" translate="yes" xml:space="preserve">
          <source>Requesting a typed response</source>
          <target state="translated">タイプされた応答を要求する</target>
        </trans-unit>
        <trans-unit id="41bfccf4d152577e5c73afd0773a7eb88c0cceca" translate="yes" xml:space="preserve">
          <source>Requesting data from a server</source>
          <target state="translated">サーバーにデータを要求する</target>
        </trans-unit>
        <trans-unit id="d0c9caf1362d86293a969759c1f36e96237241d4" translate="yes" xml:space="preserve">
          <source>Requesting data from server</source>
          <target state="translated">サーバーにデータを要求する</target>
        </trans-unit>
        <trans-unit id="5696ae92b7af50f389ead0bece55e4a42ee39659" translate="yes" xml:space="preserve">
          <source>Requesting non-JSON data</source>
          <target state="translated">非JSONデータのリクエスト</target>
        </trans-unit>
        <trans-unit id="770c6b106c177111cd3a507306da91d52608f080" translate="yes" xml:space="preserve">
          <source>Requesting services from a different server (CORS)</source>
          <target state="translated">別のサーバーにサービスを要求する(CORS</target>
        </trans-unit>
        <trans-unit id="4c82d8fdf30d6d479b042ed69c68b02fa1724163" translate="yes" xml:space="preserve">
          <source>Requesting this token instead of &lt;code&gt;&lt;a href=&quot;injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; allows &lt;code&gt;StaticInjector&lt;/code&gt; to be tree-shaken from a project.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; の代わりにこのトークンを要求すると、 &lt;code&gt;StaticInjector&lt;/code&gt; をプロジェクトからツリーシェイクできます。</target>
        </trans-unit>
        <trans-unit id="1461bb3a7497c29f1d65c70191b538b6187c52c4" translate="yes" xml:space="preserve">
          <source>Requests can be configured to get progress event updates.</source>
          <target state="translated">リクエストは、進捗イベントの更新を取得するように設定することができます。</target>
        </trans-unit>
        <trans-unit id="165e136a439cbf534f3baa991819a17d83bc02fa" translate="yes" xml:space="preserve">
          <source>Require specific criteria to load components.</source>
          <target state="translated">コンポーネントをロードするための特定の基準を要求する。</target>
        </trans-unit>
        <trans-unit id="b955ba673919dafbc9944e857a8b3742810687fb" translate="yes" xml:space="preserve">
          <source>Required and optional route parameters that go into the route URL.</source>
          <target state="translated">ルート URL に入る必須およびオプションのルートパラメータ。</target>
        </trans-unit>
        <trans-unit id="d985565d02776ba52975271bd492290606bebb8b" translate="yes" xml:space="preserve">
          <source>Required. A handler for each delivered value. Called zero or more times after execution starts.</source>
          <target state="translated">必須。配信された値ごとのハンドラ。実行開始後に0回以上コールされます。</target>
        </trans-unit>
        <trans-unit id="dffd4efe847cacad9a3758c5b1bc2f76cd2f0477" translate="yes" xml:space="preserve">
          <source>RequiredValidator</source>
          <target state="translated">RequiredValidator</target>
        </trans-unit>
        <trans-unit id="95e1209fc4a417c34d8515bb7d33cfc953152ab1" translate="yes" xml:space="preserve">
          <source>Reserve the constructor for simple initialization such as wiring constructor parameters to properties. The constructor shouldn't &lt;em&gt;do anything&lt;/em&gt;. It certainly shouldn't call a function that makes HTTP requests to a remote server as a &lt;em&gt;real&lt;/em&gt; data service would.</source>
          <target state="translated">コンストラクターパラメーターをプロパティにワイヤリングするなど、単純な初期化のためにコンストラクターを予約します。コンストラクタ&lt;em&gt;は何も&lt;/em&gt;すべきではありませ&lt;em&gt;ん&lt;/em&gt;。&lt;em&gt;実際の&lt;/em&gt;データサービスのように、リモートサーバーにHTTPリクエストを送信する関数を呼び出すことはできません。</target>
        </trans-unit>
        <trans-unit id="641dd33af252e55fbf2d02ff6e54875190315468" translate="yes" xml:space="preserve">
          <source>Reset the control back to an initial value</source>
          <target state="translated">コントロールを初期値に戻す</target>
        </trans-unit>
        <trans-unit id="570dd83ba1366fc79dd3f72a855e695ac0d7c9bc" translate="yes" xml:space="preserve">
          <source>Reset the control back to an initial value and disabled</source>
          <target state="translated">コントロールを初期値に戻して無効にする</target>
        </trans-unit>
        <trans-unit id="44e960d4a01c3cabbf2a2290d9dab7e5e298e5f3" translate="yes" xml:space="preserve">
          <source>Reset the form group values</source>
          <target state="translated">フォームグループの値をリセットする</target>
        </trans-unit>
        <trans-unit id="dc2279f7a41126be0482109e4521f42ace2bf59a" translate="yes" xml:space="preserve">
          <source>Reset the form group values and disabled status</source>
          <target state="translated">フォームグループの値と無効化された状態をリセットする</target>
        </trans-unit>
        <trans-unit id="4e5bdd91b679b1ec70f689c9f238300ef3430a86" translate="yes" xml:space="preserve">
          <source>Reset the initial test environment, including the default testing module.</source>
          <target state="translated">デフォルトのテストモジュールを含む初期テスト環境をリセットします。</target>
        </trans-unit>
        <trans-unit id="ffc15d474951107d59444895d2f067ab733c1062" translate="yes" xml:space="preserve">
          <source>Reset the providers for the test injector.</source>
          <target state="translated">テストインジェクタのプロバイダをリセットします。</target>
        </trans-unit>
        <trans-unit id="455d58c0c5be486a7812c291057d5a560401d756" translate="yes" xml:space="preserve">
          <source>Reset the values in a form array</source>
          <target state="translated">フォーム配列の値をリセットする</target>
        </trans-unit>
        <trans-unit id="203a968d1175b2a352ad81ba3a27f9a7f22b1747" translate="yes" xml:space="preserve">
          <source>Reset the values in a form array and the disabled status for the first control</source>
          <target state="translated">フォーム配列の値と、最初のコントロールの無効化状態をリセットします。</target>
        </trans-unit>
        <trans-unit id="6714fe9d64156c4392146c9d917ba8f032a43a06" translate="yes" xml:space="preserve">
          <source>Resets the &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; and all descendants are marked &lt;code&gt;pristine&lt;/code&gt; and &lt;code&gt;untouched&lt;/code&gt;, and the value of all descendants to null or null maps.</source>
          <target state="translated">リセット &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; と、すべての子孫がマークされている &lt;code&gt;pristine&lt;/code&gt; と &lt;code&gt;untouched&lt;/code&gt; 、およびnullまたは空のマップへのすべての子孫の値を。</target>
        </trans-unit>
        <trans-unit id="110854e98b8b472f54ced4233c9385a3311440a9" translate="yes" xml:space="preserve">
          <source>Resets the &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt;, marks all descendants &lt;code&gt;pristine&lt;/code&gt; and &lt;code&gt;untouched&lt;/code&gt; and sets the value of all descendants to null.</source>
          <target state="translated">リセット &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; 、マークすべての子孫は、 &lt;code&gt;pristine&lt;/code&gt; と &lt;code&gt;untouched&lt;/code&gt; とnullにすべての子孫の値を設定します。</target>
        </trans-unit>
        <trans-unit id="5a7287fdfccef00199bf3e4fa1d61dd60eaec2b1" translate="yes" xml:space="preserve">
          <source>Resets the &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt;, marks all descendants are marked &lt;code&gt;pristine&lt;/code&gt; and &lt;code&gt;untouched&lt;/code&gt;, and the value of all descendants to null.</source>
          <target state="translated">リセット &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; 、マークのすべての子孫がマークされている &lt;code&gt;pristine&lt;/code&gt; と &lt;code&gt;untouched&lt;/code&gt; 、およびnullにすべての子孫の値。</target>
        </trans-unit>
        <trans-unit id="e5e0f702aaedc7c6972e3f110daca7a5c9158ba4" translate="yes" xml:space="preserve">
          <source>Resets the AngularJS global.</source>
          <target state="translated">AngularJSのグローバルをリセットします。</target>
        </trans-unit>
        <trans-unit id="24870e46baceb970fb4534665e32255537cb71ad" translate="yes" xml:space="preserve">
          <source>Resets the animation to its initial state.</source>
          <target state="translated">アニメーションを初期状態に戻します。</target>
        </trans-unit>
        <trans-unit id="f88538bfab67e9e0c356b616aae226ae3cd472d3" translate="yes" xml:space="preserve">
          <source>Resets the configuration used for navigation and generating links.</source>
          <target state="translated">ナビゲーションとリンクの生成に使用する設定をリセットします。</target>
        </trans-unit>
        <trans-unit id="a2e089372be38def35d12038d312cf7cff0d8d32" translate="yes" xml:space="preserve">
          <source>Resets the control with an initial value, or an object that defines the initial value and disabled state.</source>
          <target state="translated">初期値、または初期値と無効状態を定義するオブジェクトでコントロールをリセットします。</target>
        </trans-unit>
        <trans-unit id="2fc7a98a9e0f85b5443a219c186d8c82560d9d55" translate="yes" xml:space="preserve">
          <source>Resets the control with the provided value if the control is present.</source>
          <target state="translated">コントロールが存在する場合、指定された値でコントロールをリセットします。</target>
        </trans-unit>
        <trans-unit id="88702bd4bf3be248ab185b7feda16df52da79cb4" translate="yes" xml:space="preserve">
          <source>Resets the control. Abstract method (implemented in sub-classes).</source>
          <target state="translated">コントロールをリセットします。抽象メソッド(サブクラスで実装)。</target>
        </trans-unit>
        <trans-unit id="47d4885ef343770c40754fe962fcb8b1c56741ff" translate="yes" xml:space="preserve">
          <source>Resets the form control, marking it &lt;code&gt;pristine&lt;/code&gt; and &lt;code&gt;untouched&lt;/code&gt;, and setting the value to null.</source>
          <target state="translated">フォームコントロールをリセットし、 &lt;code&gt;pristine&lt;/code&gt; と &lt;code&gt;untouched&lt;/code&gt; マークを付け、値をnullに設定します。</target>
        </trans-unit>
        <trans-unit id="49b3b6784361c44d2330bc9200cfd2ef02593400" translate="yes" xml:space="preserve">
          <source>Resets the form to an initial value and resets its submitted status.</source>
          <target state="translated">フォームを初期値にリセットし、投稿状態をリセットします。</target>
        </trans-unit>
        <trans-unit id="8635aa5d179c8df3b57e1c64dc526685d61d9a09" translate="yes" xml:space="preserve">
          <source>Resets the route configuration used for navigation and generating links.</source>
          <target state="translated">ナビゲーションとリンクの生成に使用するルート設定をリセットします。</target>
        </trans-unit>
        <trans-unit id="dafdd49549d0718ea3f265ce0ffd382b7fb22c19" translate="yes" xml:space="preserve">
          <source>Resolution modifiers</source>
          <target state="translated">決議事項の変更</target>
        </trans-unit>
        <trans-unit id="968f15ecf972446f10f7693c33b8940e1ebae3cc" translate="yes" xml:space="preserve">
          <source>Resolution modifiers and dependency injection</source>
          <target state="translated">分解能修飾子と依存性インジェクション</target>
        </trans-unit>
        <trans-unit id="14dbb4b1816b9410c76c9b483c0fc6b476ef2cfe" translate="yes" xml:space="preserve">
          <source>Resolution modifiers fall into three categories:</source>
          <target state="translated">解像度修飾子は3つのカテゴリに分類されます。</target>
        </trans-unit>
        <trans-unit id="1630633b28570d9d271f0a3fa1bc084637a5dc40" translate="yes" xml:space="preserve">
          <source>Resolution rules</source>
          <target state="translated">決議規則</target>
        </trans-unit>
        <trans-unit id="22899a486866313817a37fb316724b0f36c6dd4c" translate="yes" xml:space="preserve">
          <source>Resolution works upward through the injector hierarchy, so the children of this class must configure their own providers or be prepared for a null result.</source>
          <target state="translated">解決はインジェクタ階層を介して上向きに行われるため、このクラスの子は独自のプロバイダを設定するか、NULL 結果に備えておく必要があります。</target>
        </trans-unit>
        <trans-unit id="ac7f958cc028becfb4b2bec9c474bd2d5e8b6095" translate="yes" xml:space="preserve">
          <source>Resolve</source>
          <target state="translated">Resolve</target>
        </trans-unit>
        <trans-unit id="5428d801dbf9cd5af8724c4449af2204a7e74318" translate="yes" xml:space="preserve">
          <source>Resolve the request by returning a body plus additional HTTP information (such as response headers) if provided. If the request specifies an expected body type, the body is converted into the requested type. Otherwise, the body is converted to &lt;code&gt;JSON&lt;/code&gt; by default.</source>
          <target state="translated">本文と、追加のHTTP情報（応答ヘッダーなど）が提供されている場合は、それを返すことによって要求を解決します。リクエストで想定される本文タイプが指定されている場合、本文はリクエストされたタイプに変換されます。それ以外の場合、本体はデフォルトで &lt;code&gt;JSON&lt;/code&gt; に変換されます。</target>
        </trans-unit>
        <trans-unit id="ec9648af2c97466d258a342886ddfc8487fe626a" translate="yes" xml:space="preserve">
          <source>Resolve the request by returning an &lt;code&gt;ErrorEvent&lt;/code&gt; (e.g. simulating a network failure).</source>
          <target state="translated">&lt;code&gt;ErrorEvent&lt;/code&gt; （ネットワーク障害のシミュレーションなど）を返すことによって要求を解決します。</target>
        </trans-unit>
        <trans-unit id="d892b45b3568820b7637e88a421da7e3b9cc005a" translate="yes" xml:space="preserve">
          <source>Resolve vendor packages sourcemaps.</source>
          <target state="translated">ベンダーパッケージのソースマップを解決します。</target>
        </trans-unit>
        <trans-unit id="3d067fa7b0e7b927dc5fd2ddc95419173701aa0c" translate="yes" xml:space="preserve">
          <source>ResolveData</source>
          <target state="translated">ResolveData</target>
        </trans-unit>
        <trans-unit id="0c6389bb51f19b41d7378625dbb8022c3608c006" translate="yes" xml:space="preserve">
          <source>ResolveEnd</source>
          <target state="translated">ResolveEnd</target>
        </trans-unit>
        <trans-unit id="61ef5fa48b634f6d35231db0ce74b2fbff781bcd" translate="yes" xml:space="preserve">
          <source>ResolveStart</source>
          <target state="translated">ResolveStart</target>
        </trans-unit>
        <trans-unit id="5774b1f7e7d5d970b2d71e03c9494d4b8f646425" translate="yes" xml:space="preserve">
          <source>ResolvedReflectiveFactory</source>
          <target state="translated">ResolvedReflectiveFactory</target>
        </trans-unit>
        <trans-unit id="a33073e17765ddd6137810adff34b548ac033389" translate="yes" xml:space="preserve">
          <source>ResolvedReflectiveProvider</source>
          <target state="translated">ResolvedReflectiveProvider</target>
        </trans-unit>
        <trans-unit id="47ecade1ed39b604db07f2373e6d2388db12b9e7" translate="yes" xml:space="preserve">
          <source>Resolvers</source>
          <target state="translated">Resolvers</target>
        </trans-unit>
        <trans-unit id="bfe1a0e94ea746eafa78ec55cb8711bfc94f9062" translate="yes" xml:space="preserve">
          <source>Resolvers run after all &lt;a href=&quot;glossary#route-guard&quot;&gt;route guards&lt;/a&gt; for a route tree have been executed and have succeeded.</source>
          <target state="translated">リゾルバーは、ルートツリーのすべての&lt;a href=&quot;glossary#route-guard&quot;&gt;ルートガード&lt;/a&gt;が実行され、成功した後に実行されます。</target>
        </trans-unit>
        <trans-unit id="2cbbc4d20999a3f6dc525713838585739e52f19f" translate="yes" xml:space="preserve">
          <source>Resolves a provider and instantiates an object in the context of the injector.</source>
          <target state="translated">プロバイダを解決し、インジェクタのコンテキストでオブジェクトのインスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="4d65d65ebb9a014dd0b1ffdc2fc18917fd546aa6" translate="yes" xml:space="preserve">
          <source>Resolves an array of providers and creates a child injector from those providers.</source>
          <target state="translated">プロバイダの配列を解決し、それらのプロバイダから子インジェクタを作成します。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
