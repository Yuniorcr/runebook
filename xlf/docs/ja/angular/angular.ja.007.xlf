<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="angular">
    <body>
      <group id="angular">
        <trans-unit id="712b79c56c2b28dac1c45ef46aa0e534b7b25153" translate="yes" xml:space="preserve">
          <source>Creates a named animation trigger, containing a list of &lt;code&gt;&lt;a href=&quot;animations/state&quot;&gt;state&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;animations/transition&quot;&gt;transition&lt;/a&gt;()&lt;/code&gt; entries to be evaluated when the expression bound to the trigger changes.</source>
          <target state="translated">トリガーにバインドされた式が変更されたときに評価される &lt;code&gt;&lt;a href=&quot;animations/state&quot;&gt;state&lt;/a&gt;()&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;animations/transition&quot;&gt;transition&lt;/a&gt;()&lt;/code&gt; エントリのリストを含む、名前付きアニメーショントリガーを作成します。</target>
        </trans-unit>
        <trans-unit id="411673ac1b73f98373de35f525ceaa2303a5bf06" translate="yes" xml:space="preserve">
          <source>Creates a named animation trigger, containing a list of &lt;code&gt;&lt;a href=&quot;common/upgrade/%24locationshim#state&quot;&gt;state()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;animations/transition&quot;&gt;transition&lt;/a&gt;()&lt;/code&gt; entries to be evaluated when the expression bound to the trigger changes.</source>
          <target state="translated">トリガーにバインドされた式が変更されたときに評価される &lt;code&gt;&lt;a href=&quot;common/upgrade/%24locationshim#state&quot;&gt;state()&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;animations/transition&quot;&gt;transition&lt;/a&gt;()&lt;/code&gt; エントリーのリストを含む、名前付きのアニメーショントリガーを作成します。</target>
        </trans-unit>
        <trans-unit id="1902b86e4d0caf9e34d2481afd331b3a65ca56ee" translate="yes" xml:space="preserve">
          <source>Creates a named animation trigger, containing a list of &lt;code&gt;&lt;a href=&quot;state&quot;&gt;state&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;transition&quot;&gt;transition&lt;/a&gt;()&lt;/code&gt; entries to be evaluated when the expression bound to the trigger changes.</source>
          <target state="translated">トリガーにバインドされた式が変更されたときに評価される &lt;code&gt;&lt;a href=&quot;state&quot;&gt;state&lt;/a&gt;()&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;transition&quot;&gt;transition&lt;/a&gt;()&lt;/code&gt; エントリのリストを含む、名前付きアニメーショントリガーを作成します。</target>
        </trans-unit>
        <trans-unit id="7d9417e5b45d0789e51adb54752a793fce271faf" translate="yes" xml:space="preserve">
          <source>Creates a named set of CSS styles that should be applied on successful transition to a given state. The state can then be referenced by name within other animation functions.</source>
          <target state="translated">指定された状態への移行に成功した際に適用されるべき CSS スタイルの名前付きセットを作成します。この状態は、他のアニメーション関数内で名前を付けて参照することができます。</target>
        </trans-unit>
        <trans-unit id="198dc08c4d8d1323300a4a6314f67f468b5e290d" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; instance.</source>
          <target state="translated">新しい &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; インスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="36efdd5c1e89e4e8486865cfcc0c4b03c4ef9807" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; instance.</source>
          <target state="translated">新しい &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; インスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="513102355274ffbdb1d07ac37091bb21593c9c07" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; instance.</source>
          <target state="translated">新しい &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; インスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="620859ab54ea93c6e79f9cce56c1578e49659d14" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;Array&lt;/code&gt; or &lt;code&gt;String&lt;/code&gt; containing a subset (slice) of the elements.</source>
          <target state="translated">要素のサブセット（スライス）を含む新しい &lt;code&gt;Array&lt;/code&gt; または &lt;code&gt;String&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="65f86dc1f9780df941519cd1825f2191b9809ccb" translate="yes" xml:space="preserve">
          <source>Creates a new component.</source>
          <target state="translated">新しいコンポーネントを作成します。</target>
        </trans-unit>
        <trans-unit id="70706f2ce6e47532c5017273998404c708cf089b" translate="yes" xml:space="preserve">
          <source>Creates a new generic NgModule definition in the given or default project.</source>
          <target state="translated">指定したプロジェクトまたはデフォルトのプロジェクトに新しい汎用NgModule定義を作成します。</target>
        </trans-unit>
        <trans-unit id="62e059ae3355a021d82deb57042a27f7a22f2488" translate="yes" xml:space="preserve">
          <source>Creates a new generic class definition in the given or default project.</source>
          <target state="translated">指定したプロジェクトまたはデフォルトのプロジェクトに新しい汎用クラス定義を作成します。</target>
        </trans-unit>
        <trans-unit id="270f66a0fff8aec92d1637e16671375a0130bfc5" translate="yes" xml:space="preserve">
          <source>Creates a new generic component definition in the given or default project.</source>
          <target state="translated">指定されたプロジェクトまたはデフォルトのプロジェクトに新しい汎用コンポーネント定義を作成します。</target>
        </trans-unit>
        <trans-unit id="7e4fbaedc160c88240b887c836f9ce4389155aa8" translate="yes" xml:space="preserve">
          <source>Creates a new generic directive definition in the given or default project.</source>
          <target state="translated">与えられたプロジェクトやデフォルトのプロジェクトに新しい汎用ディレクティブの定義を作成します。</target>
        </trans-unit>
        <trans-unit id="c090794369bff4b38077b04ac3105611a43813f9" translate="yes" xml:space="preserve">
          <source>Creates a new generic interface definition in the given or default project.</source>
          <target state="translated">指定されたプロジェクトまたはデフォルトのプロジェクトに新しい汎用インターフェース定義を作成します。</target>
        </trans-unit>
        <trans-unit id="c261bc76e1d49e6a376b5b0e9970a8a6e07c39c7" translate="yes" xml:space="preserve">
          <source>Creates a new generic library project in the current workspace.</source>
          <target state="translated">現在のワークスペースに新しいジェネリック・ライブラリ・プロジェクトを作成します。</target>
        </trans-unit>
        <trans-unit id="f1165df6f1761dae40a299c78803074c1c8ff81e" translate="yes" xml:space="preserve">
          <source>Creates a new generic pipe definition in the given or default project.</source>
          <target state="translated">指定されたプロジェクトまたはデフォルトのプロジェクトに新しい汎用パイプ定義を作成します。</target>
        </trans-unit>
        <trans-unit id="687a19289fa64892e6372f943a0a5962cc751bb9" translate="yes" xml:space="preserve">
          <source>Creates a new generic web worker definition in the given or default project.</source>
          <target state="translated">指定したプロジェクトまたはデフォルトのプロジェクトに、新しい汎用ウェブワーカー定義を作成します。</target>
        </trans-unit>
        <trans-unit id="4b0b3666b69dc3cde5cdbcd719fa9954c4463ffa" translate="yes" xml:space="preserve">
          <source>Creates a new instance to be used for an NgElement.</source>
          <target state="translated">NgElementに使用される新しいインスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="1674518b44797b3525bd3df00fe3390305b3a762" translate="yes" xml:space="preserve">
          <source>Creates a new workspace and an initial Angular app.</source>
          <target state="translated">新しいワークスペースと初期のAngularアプリを作成します。</target>
        </trans-unit>
        <trans-unit id="ee1db38a1130820b596a25d59cab7c179c65932c" translate="yes" xml:space="preserve">
          <source>Creates a new workspace and an initial Angular application.</source>
          <target state="translated">新しいワークスペースと初期のAngularアプリケーションを作成します。</target>
        </trans-unit>
        <trans-unit id="8d4f251edecf3d78fb8e1e4466df848dee482283" translate="yes" xml:space="preserve">
          <source>Creates a new, generic interceptor definition in the given or default project.</source>
          <target state="translated">指定したプロジェクトまたはデフォルトのプロジェクトに、新しい汎用インターセプター定義を作成します。</target>
        </trans-unit>
        <trans-unit id="4493cf2530477a8d9f2b3b99bb6d434e7a752446" translate="yes" xml:space="preserve">
          <source>Creates a new, generic service definition in the given or default project.</source>
          <target state="translated">指定されたプロジェクトまたは既定のプロジェクトに、新しい汎用サービス定義を作成します。</target>
        </trans-unit>
        <trans-unit id="78c88e36bcbb813904eea93e54bc229477870576" translate="yes" xml:space="preserve">
          <source>Creates a platform. Platforms have to be eagerly created via this function.</source>
          <target state="translated">プラットフォームを作成します。プラットフォームは、この機能を介して熱心に作成する必要があります。</target>
        </trans-unit>
        <trans-unit id="54360d9658969a0ec573eba6a9918017f5dd87a1" translate="yes" xml:space="preserve">
          <source>Creates a platform. Platforms must be created on launch using this function.</source>
          <target state="translated">プラットフォームを作成します。この関数を使用して起動時にプラットフォームを作成する必要があります。</target>
        </trans-unit>
        <trans-unit id="2e110ec18dd00af8cd8c8b81aa579638616fd5bd" translate="yes" xml:space="preserve">
          <source>Creates a token that can be used in a DI Provider.</source>
          <target state="translated">DI プロバイダで使用できるトークンを作成します。</target>
        </trans-unit>
        <trans-unit id="0b1cb9f9b7d7a285afa951e0d3b69ae30cb6d1d3" translate="yes" xml:space="preserve">
          <source>Creates a top-level &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; instance and binds it to a form to track aggregate form value and validation status.</source>
          <target state="translated">トップレベルの &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; インスタンスを作成し、フォームにバインドして、集計フォーム値と検証ステータスを追跡します。</target>
        </trans-unit>
        <trans-unit id="f85546e51ba807f1eec5d5543507cfa7164240c3" translate="yes" xml:space="preserve">
          <source>Creates a top-level &lt;code&gt;&lt;a href=&quot;forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; instance and binds it to a form to track aggregate form value and validation status.</source>
          <target state="translated">トップレベルの &lt;code&gt;&lt;a href=&quot;forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; インスタンスを作成し、フォームにバインドして、集計フォーム値と検証ステータスを追跡します。</target>
        </trans-unit>
        <trans-unit id="1255a201b85cbe7e5e7a9b06511c881f3d5a6859" translate="yes" xml:space="preserve">
          <source>Creates a view that is rendered when no &lt;code&gt;&lt;a href=&quot;common/ngswitchcase&quot;&gt;NgSwitchCase&lt;/a&gt;&lt;/code&gt; expressions match the &lt;code&gt;&lt;a href=&quot;common/ngswitch&quot;&gt;NgSwitch&lt;/a&gt;&lt;/code&gt; expression. This statement should be the final case in an &lt;code&gt;&lt;a href=&quot;common/ngswitch&quot;&gt;NgSwitch&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">何時にレンダリングされるビューを作成し &lt;code&gt;&lt;a href=&quot;common/ngswitchcase&quot;&gt;NgSwitchCase&lt;/a&gt;&lt;/code&gt; の表現が一致しない &lt;code&gt;&lt;a href=&quot;common/ngswitch&quot;&gt;NgSwitch&lt;/a&gt;&lt;/code&gt; の表現を。このステートメントは、 &lt;code&gt;&lt;a href=&quot;common/ngswitch&quot;&gt;NgSwitch&lt;/a&gt;&lt;/code&gt; の最後のケースになるはずです。</target>
        </trans-unit>
        <trans-unit id="dab35173cc85b7c0674c27b38510f7f958357ce4" translate="yes" xml:space="preserve">
          <source>Creates a view that is rendered when no &lt;code&gt;&lt;a href=&quot;ngswitchcase&quot;&gt;NgSwitchCase&lt;/a&gt;&lt;/code&gt; expressions match the &lt;code&gt;&lt;a href=&quot;ngswitch&quot;&gt;NgSwitch&lt;/a&gt;&lt;/code&gt; expression. This statement should be the final case in an &lt;code&gt;&lt;a href=&quot;ngswitch&quot;&gt;NgSwitch&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">何時にレンダリングされるビューを作成し &lt;code&gt;&lt;a href=&quot;ngswitchcase&quot;&gt;NgSwitchCase&lt;/a&gt;&lt;/code&gt; の表現が一致しない &lt;code&gt;&lt;a href=&quot;ngswitch&quot;&gt;NgSwitch&lt;/a&gt;&lt;/code&gt; の表現を。このステートメントは、 &lt;code&gt;&lt;a href=&quot;ngswitch&quot;&gt;NgSwitch&lt;/a&gt;&lt;/code&gt; の最後のケースになるはずです。</target>
        </trans-unit>
        <trans-unit id="c18eee2a93e4477b6c57c10963771d662097ca69" translate="yes" xml:space="preserve">
          <source>Creates a view that will be added/removed from the parent &lt;a href=&quot;common/ngplural&quot;&gt;&lt;code&gt;NgPlural&lt;/code&gt;&lt;/a&gt; when the given expression matches the plural expression according to CLDR rules.</source>
          <target state="translated">CLDRルールに従って、指定された式が複数の式と一致する場合に、親&lt;a href=&quot;common/ngplural&quot;&gt; &lt;code&gt;NgPlural&lt;/code&gt; &lt;/a&gt;から追加/削除されるビューを作成します。</target>
        </trans-unit>
        <trans-unit id="90e5aa9022d0dee8df0b0b02bc152f53c9816158" translate="yes" xml:space="preserve">
          <source>Creates a view that will be added/removed from the parent &lt;a href=&quot;ngplural&quot;&gt;&lt;code&gt;NgPlural&lt;/code&gt;&lt;/a&gt; when the given expression matches the plural expression according to CLDR rules.</source>
          <target state="translated">CLDRルールに従って、指定された式が複数の式と一致する場合に、親&lt;a href=&quot;ngplural&quot;&gt; &lt;code&gt;NgPlural&lt;/code&gt; &lt;/a&gt;から追加/削除されるビューを作成します。</target>
        </trans-unit>
        <trans-unit id="f09aa4f7ba9507300a34ba8100e68ed2ede59102" translate="yes" xml:space="preserve">
          <source>Creates a workspace with stricter type checking and stricter bundle budgets settings. This setting helps improve maintainability and catch bugs ahead of time. For more information, see &lt;a href=&quot;https://angular.io/strict&quot;&gt;https://angular.io/strict&lt;/a&gt;</source>
          <target state="translated">より厳密なタイプチェックとより厳密なバンドルバジェット設定を使用してワークスペースを作成します。この設定は、保守性を向上させ、バグを事前にキャッチするのに役立ちます。詳細については、&lt;a href=&quot;https://angular.io/strict&quot;&gt;https：//angular.io/strictを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="3e46c132859b91b6355f645651049663e1181ea1" translate="yes" xml:space="preserve">
          <source>Creates a wrapped value.</source>
          <target state="translated">ラップされた値を作成します。</target>
        </trans-unit>
        <trans-unit id="bc6c9ac0cfe99a12b62a32c54a59aa29028d9d13" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;&lt;a href=&quot;abstractcontrol&quot;&gt;AbstractControl&lt;/a&gt;&lt;/code&gt; from a user-specified configuration.</source>
          <target state="translated">ユーザー指定の構成から &lt;code&gt;&lt;a href=&quot;abstractcontrol&quot;&gt;AbstractControl&lt;/a&gt;&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="15338d7983963dcad284f0d0d3fa9bab224ad9a6" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;&lt;a href=&quot;animationplayer&quot;&gt;AnimationPlayer&lt;/a&gt;&lt;/code&gt; instance for the reusable animation defined by the &lt;code&gt;&lt;a href=&quot;animationbuilder&quot;&gt;AnimationBuilder&lt;/a&gt;&lt;/code&gt;.&lt;code&gt;&lt;a href=&quot;animationfactory&quot;&gt;build()&lt;/a&gt;&lt;/code&gt; method that created this factory. Attaches the new player a DOM element.</source>
          <target state="translated">作成 &lt;code&gt;&lt;a href=&quot;animationplayer&quot;&gt;AnimationPlayer&lt;/a&gt;&lt;/code&gt; さによって定義される再利用可能なアニメーションのためのインスタンスを &lt;code&gt;&lt;a href=&quot;animationbuilder&quot;&gt;AnimationBuilder&lt;/a&gt;&lt;/code&gt; 。このファクトリを作成した &lt;code&gt;&lt;a href=&quot;animationfactory&quot;&gt;build()&lt;/a&gt;&lt;/code&gt; メソッド。新しいプレーヤーにDOM要素をアタッチします。</target>
        </trans-unit>
        <trans-unit id="b6cc009b79d6019dac1f6a5ffa066142f688a8db" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;&lt;a href=&quot;animationplayer&quot;&gt;AnimationPlayer&lt;/a&gt;&lt;/code&gt; instance for the reusable animation defined by the &lt;code&gt;&lt;a href=&quot;animationbuilder&quot;&gt;AnimationBuilder&lt;/a&gt;&lt;/code&gt;.&lt;code&gt;build()&lt;/code&gt; method that created this factory. Attaches the new player a DOM element.</source>
          <target state="translated">作成 &lt;code&gt;&lt;a href=&quot;animationplayer&quot;&gt;AnimationPlayer&lt;/a&gt;&lt;/code&gt; さによって定義される再利用可能なアニメーションのためのインスタンスを &lt;code&gt;&lt;a href=&quot;animationbuilder&quot;&gt;AnimationBuilder&lt;/a&gt;&lt;/code&gt; 。このファクトリを作成した &lt;code&gt;build()&lt;/code&gt; メソッド。新しいプレーヤーにDOM要素をアタッチします。</target>
        </trans-unit>
        <trans-unit id="ef233eee832b956acc0fde12db7e7f805a7b5025" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;&lt;a href=&quot;forms/abstractcontrol&quot;&gt;AbstractControl&lt;/a&gt;&lt;/code&gt; from a user-specified configuration.</source>
          <target state="translated">ユーザー指定の構成から &lt;code&gt;&lt;a href=&quot;forms/abstractcontrol&quot;&gt;AbstractControl&lt;/a&gt;&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="baf7c8a9d9a0cee928e2a1ef83a187cbf2f7bfbf" translate="yes" xml:space="preserve">
          <source>Creates an application with stricter bundle budgets settings.</source>
          <target state="translated">バンドル予算の設定を厳しくしたアプリケーションを作成します。</target>
        </trans-unit>
        <trans-unit id="2acaa5a30d6eeaec1c7ee23cf865f129cdaea395" translate="yes" xml:space="preserve">
          <source>Creates an initializer that sets up &lt;code&gt;ngRoute&lt;/code&gt; integration along with setting up the Angular router.</source>
          <target state="translated">Angularルーターのセットアップと共に &lt;code&gt;ngRoute&lt;/code&gt; 統合をセットアップする初期化子を作成します。</target>
        </trans-unit>
        <trans-unit id="7518ebe8d61d9da60cef10cb3c8780f14a62ff35" translate="yes" xml:space="preserve">
          <source>Creates an injector from previously resolved providers.</source>
          <target state="translated">以前に解決されたプロバイダからインジェクタを作成します。</target>
        </trans-unit>
        <trans-unit id="41ec21a51c9e34599ae4575b55ae5b4599a696af" translate="yes" xml:space="preserve">
          <source>Creates an instance of an &lt;code&gt;@&lt;a href=&quot;ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; for a given platform using the given runtime compiler.</source>
          <target state="translated">指定されたランタイムコンパイラを使用して、指定されたプラットフォームの &lt;code&gt;@&lt;a href=&quot;ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; インスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="090b8dbc9d029131a07b9444bab5148373f0f7ff" translate="yes" xml:space="preserve">
          <source>Creates an instance of an &lt;code&gt;@&lt;a href=&quot;ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; for the given platform for offline compilation.</source>
          <target state="translated">オフラインコンパイル用に、指定されたプラットフォームの &lt;code&gt;@&lt;a href=&quot;ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; インスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="b980f5409603a22ecf3676266dcc84080b7b4f00" translate="yes" xml:space="preserve">
          <source>Creates an instance of this class that can deliver events synchronously or asynchronously.</source>
          <target state="translated">イベントを同期または非同期で配信できるこのクラスのインスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="a6216dd2c4fe1c3c1a551822d229462456b73c31" translate="yes" xml:space="preserve">
          <source>Creates and binds a &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; instance to a DOM element.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; インスタンスを作成してDOM要素にバインドします。</target>
        </trans-unit>
        <trans-unit id="e23397f8aca5a31a9be2eee05077daf1df88fe48" translate="yes" xml:space="preserve">
          <source>Creates and binds a &lt;code&gt;&lt;a href=&quot;forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; instance to a DOM element.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; インスタンスを作成してDOM要素にバインドします。</target>
        </trans-unit>
        <trans-unit id="35f589fc2c6d459da93a0cf721088c19ee1ffd35" translate="yes" xml:space="preserve">
          <source>Creates and configures a module with all the router providers and directives. Optionally sets up an application listener to perform an initial navigation.</source>
          <target state="translated">すべてのルータプロバイダとディレクティブを持つモジュールを作成し、設定します。オプションで、初期ナビゲーションを実行するためのアプリケーションリスナーを設定します。</target>
        </trans-unit>
        <trans-unit id="f7c871bdae0434bd52b442db612e31edc75afc82" translate="yes" xml:space="preserve">
          <source>Creates and initializes a custom renderer for a host DOM element.</source>
          <target state="translated">ホスト DOM 要素用のカスタムレンダラを作成し、初期化します。</target>
        </trans-unit>
        <trans-unit id="c9e739492e303a6dc2b215156c6338f21bd2ea8d" translate="yes" xml:space="preserve">
          <source>Creates and initializes a custom renderer that implements the &lt;code&gt;&lt;a href=&quot;core/renderer2&quot;&gt;Renderer2&lt;/a&gt;&lt;/code&gt; base class.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;core/renderer2&quot;&gt;Renderer2&lt;/a&gt;&lt;/code&gt; 基本クラスを実装するカスタムレンダラーを作成して初期化します。</target>
        </trans-unit>
        <trans-unit id="140841381add619cdb8d3e4d4e5da42607ff0b91" translate="yes" xml:space="preserve">
          <source>Creates and initializes a custom renderer that implements the &lt;code&gt;&lt;a href=&quot;renderer2&quot;&gt;Renderer2&lt;/a&gt;&lt;/code&gt; base class.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;renderer2&quot;&gt;Renderer2&lt;/a&gt;&lt;/code&gt; 基本クラスを実装するカスタムレンダラーを作成して初期化します。</target>
        </trans-unit>
        <trans-unit id="653f46ba9805561598374edfae9550c119bf3d02" translate="yes" xml:space="preserve">
          <source>Creates and initializes a new Angular app that is the default project for a new workspace.</source>
          <target state="translated">新しいワークスペースのデフォルトプロジェクトである新しいAngularアプリを作成し、初期化します。</target>
        </trans-unit>
        <trans-unit id="b32cef9acfccdcd71b41cdec8483335b1d814a52" translate="yes" xml:space="preserve">
          <source>Creates and initializes a new Angular application that is the default project for a new workspace.</source>
          <target state="translated">新しいワークスペースのデフォルトプロジェクトである新しいAngularアプリケーションを作成し、初期化します。</target>
        </trans-unit>
        <trans-unit id="ba561ab2c4f07e4c2409fcd26324dc01f653d3f5" translate="yes" xml:space="preserve">
          <source>Creates the router service.</source>
          <target state="translated">ルーターサービスを作成します。</target>
        </trans-unit>
        <trans-unit id="5dcfaea570f4e205f054a7227e74c586a508d9e3" translate="yes" xml:space="preserve">
          <source>Creates the service worker configuration file called &lt;a href=&quot;service-worker-config&quot;&gt;&lt;code&gt;ngsw-config.json&lt;/code&gt;&lt;/a&gt;, which specifies the caching behaviors and other settings.</source>
          <target state="translated">キャッシュの動作やその他の設定を指定する&lt;a href=&quot;service-worker-config&quot;&gt; &lt;code&gt;ngsw-config.json&lt;/code&gt; &lt;/a&gt;というService Worker構成ファイルを作成します。</target>
        </trans-unit>
        <trans-unit id="93f3c73d71b76e9015e6075bb21802e36920b4f3" translate="yes" xml:space="preserve">
          <source>Creating Libraries</source>
          <target state="translated">ライブラリの作成</target>
        </trans-unit>
        <trans-unit id="4561116d51d14b2cb8eb4093169010893927207d" translate="yes" xml:space="preserve">
          <source>Creating a PWA with Angular CLI</source>
          <target state="translated">Angular CLIでPWAを作成する</target>
        </trans-unit>
        <trans-unit id="932747dc8773a5a7c360d70edad53a1d6419196c" translate="yes" xml:space="preserve">
          <source>Creating a builder</source>
          <target state="translated">ビルダーの作成</target>
        </trans-unit>
        <trans-unit id="565548b72f2d4dbf2aa8bb9383516f26f568cb72" translate="yes" xml:space="preserve">
          <source>Creating a class for the data</source>
          <target state="translated">データのクラスを作成する</target>
        </trans-unit>
        <trans-unit id="3ae4ff4efba3675af3bf77fb3d2999f28cb4ad34" translate="yes" xml:space="preserve">
          <source>Creating a component</source>
          <target state="translated">コンポーネントの作成</target>
        </trans-unit>
        <trans-unit id="cca8f2e745273a94e5451c7bdc661b86216a948a" translate="yes" xml:space="preserve">
          <source>Creating a component manually</source>
          <target state="translated">コンポーネントを手動で作成する</target>
        </trans-unit>
        <trans-unit id="4e108e76fcfa68b2c5b2958a55205d3a570d71ce" translate="yes" xml:space="preserve">
          <source>Creating a component using the Angular CLI</source>
          <target state="translated">Angular CLIを使ってコンポーネントを作成する</target>
        </trans-unit>
        <trans-unit id="b91c40eee2e65613c2e4c3f65111f4ebde138624" translate="yes" xml:space="preserve">
          <source>Creating a directive is similar to creating a component.</source>
          <target state="translated">ディレクティブを作成することは、コンポーネントを作成することと似ています。</target>
        </trans-unit>
        <trans-unit id="d2b6b7f18d181ef2637b7dc14ddeca81e37c5f6b" translate="yes" xml:space="preserve">
          <source>Creating a schematics collection</source>
          <target state="translated">回路図集の作成</target>
        </trans-unit>
        <trans-unit id="e1b1cea6ef59ed28322703cf4942224cd1a7c698" translate="yes" xml:space="preserve">
          <source>Creating asynchronous validators</source>
          <target state="translated">非同期バリデータの作成</target>
        </trans-unit>
        <trans-unit id="8b53c98623b6f94e3f49cec9e5196ad665b6a098" translate="yes" xml:space="preserve">
          <source>Creating dynamic forms</source>
          <target state="translated">ダイナミックなフォームの作成</target>
        </trans-unit>
        <trans-unit id="677d95c3cbc2b8152f7dd55e45923a7267ba4303" translate="yes" xml:space="preserve">
          <source>Creating form control instances manually can become repetitive when dealing with multiple forms. The &lt;code&gt;&lt;a href=&quot;../api/forms/formbuilder&quot;&gt;FormBuilder&lt;/a&gt;&lt;/code&gt; service provides convenient methods for generating controls.</source>
          <target state="translated">複数のフォームを処理する場合、フォームコントロールインスタンスを手動で作成すると繰り返しが発生する可能性があります。 &lt;code&gt;&lt;a href=&quot;../api/forms/formbuilder&quot;&gt;FormBuilder&lt;/a&gt;&lt;/code&gt; のサービスは、コントロールを生成するための便利な方法を提供します。</target>
        </trans-unit>
        <trans-unit id="490dddbf7619317089d285620a37e7072b4340df" translate="yes" xml:space="preserve">
          <source>Creating libraries</source>
          <target state="translated">ライブラリの作成</target>
        </trans-unit>
        <trans-unit id="db741cba2f274a4f1cbf4c6cb0ef3b78d1d8ac09" translate="yes" xml:space="preserve">
          <source>Creating multiple language versions of your app.</source>
          <target state="translated">アプリの複数言語バージョンを作成します。</target>
        </trans-unit>
        <trans-unit id="40fb5424318bad5377653fe3039ce09e1e86600f" translate="yes" xml:space="preserve">
          <source>Creating nested form groups</source>
          <target state="translated">入れ子になったフォームグループの作成</target>
        </trans-unit>
        <trans-unit id="841d9f0c9f2649a35f996b8772fef3210b7ca451" translate="yes" xml:space="preserve">
          <source>Creating observables</source>
          <target state="translated">観測値の作成</target>
        </trans-unit>
        <trans-unit id="3216ede11bb29396337f248921dc9397b0bd8f47" translate="yes" xml:space="preserve">
          <source>Creating pipes for custom data transformations</source>
          <target state="translated">カスタムデータ変換のためのパイプの作成</target>
        </trans-unit>
        <trans-unit id="abbf7bb727236a3929eb0179330931778fbb36a5" translate="yes" xml:space="preserve">
          <source>Creating reusable animations</source>
          <target state="translated">再利用可能なアニメーションの作成</target>
        </trans-unit>
        <trans-unit id="e7d007397faaabddd2cd03bea65e3c36bff70353" translate="yes" xml:space="preserve">
          <source>Creating shared modules allows you to organize and streamline your code. You can put commonly used directives, pipes, and components into one module and then import just that module wherever you need it in other parts of your app.</source>
          <target state="translated">共有モジュールを作成すると、コードを整理して合理化することができます。一般的に使用されるディレクティブ、パイプ、およびコンポーネントを 1 つのモジュールにまとめ、アプリの他の部分で必要な場合はそのモジュールだけをインポートできます。</target>
        </trans-unit>
        <trans-unit id="d44a291073418ab2cbe02afbe51c1a63c022cd0f" translate="yes" xml:space="preserve">
          <source>Creating the &lt;code&gt;AppModule&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;AppModule&lt;/code&gt; の作成</target>
        </trans-unit>
        <trans-unit id="8d512d2cd082ede0e253017cddc5f329df65818c" translate="yes" xml:space="preserve">
          <source>Creating the &lt;code&gt;TestHostComponent&lt;/code&gt; has the side-effect of creating a &lt;code&gt;DashboardHeroComponent&lt;/code&gt; because the latter appears within the template of the former. The query for the hero element (&lt;code&gt;heroEl&lt;/code&gt;) still finds it in the test DOM, albeit at greater depth in the element tree than before.</source>
          <target state="translated">後者は前者のテンプレート内に表示されるため、 &lt;code&gt;TestHostComponent&lt;/code&gt; を作成すると、 &lt;code&gt;DashboardHeroComponent&lt;/code&gt; が作成されるという副作用があります。ヒーロー要素（ &lt;code&gt;heroEl&lt;/code&gt; ）のクエリは、以前よりも要素ツリーの深さが深くなりますが、テストDOMでそれを見つけます。</target>
        </trans-unit>
        <trans-unit id="f1ecaa9e34716f3dd9747a34a65d8ee87cc2dbcd" translate="yes" xml:space="preserve">
          <source>Creating tree-shakable providers</source>
          <target state="translated">ツリーシェイカブルなプロバイダの作成</target>
        </trans-unit>
        <trans-unit id="e13e0554f557ba882751e261b5a60777b337bea6" translate="yes" xml:space="preserve">
          <source>Creation</source>
          <target state="translated">Creation</target>
        </trans-unit>
        <trans-unit id="34348d8cce4ac0baa516ee80df859140d319afcc" translate="yes" xml:space="preserve">
          <source>Creation &amp;amp; cancellation</source>
          <target state="translated">作成とキャンセル</target>
        </trans-unit>
        <trans-unit id="f30c0fc771771dfd33b2021ddcd6bd3d87471b38" translate="yes" xml:space="preserve">
          <source>Creation and subscription</source>
          <target state="translated">作成と購読</target>
        </trans-unit>
        <trans-unit id="67500d2a6e793e214a0cd4e1e0df35431ac81e4d" translate="yes" xml:space="preserve">
          <source>Creation of an Angular directive that wraps and exposes an AngularJS component so that it can be used in an Angular template. See &lt;code&gt;&lt;a href=&quot;upgradecomponent&quot;&gt;UpgradeComponent&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">AngularJSコンポーネントをラップして公開し、Angularテンプレートで使用できるようにするAngularディレクティブの作成。 &lt;code&gt;&lt;a href=&quot;upgradecomponent&quot;&gt;UpgradeComponent&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="7d7af9d9b0dcb49613daac413f4d5e07d0db47b5" translate="yes" xml:space="preserve">
          <source>Creation of an Angular root injector provider that wraps and exposes an AngularJS service so that it can be injected into an Angular context. See &lt;a href=&quot;upgrademodule#upgrading-an-angular-1-service&quot;&gt;Upgrading an AngularJS service&lt;/a&gt; below.</source>
          <target state="translated">AngularJSサービスをラップして公開し、Angularコンテキストに注入できるようにするAngularルートインジェクタープロバイダーの作成。下記&lt;a href=&quot;upgrademodule#upgrading-an-angular-1-service&quot;&gt;のAngularJSサービスのアップグレードを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="30022562cf3aa58562e0f91c6669dd67bcbe50e0" translate="yes" xml:space="preserve">
          <source>Creation of an AngularJS directive that wraps and exposes an Angular component so that it can be used in an AngularJS template. See &lt;code&gt;&lt;a href=&quot;downgradecomponent&quot;&gt;downgradeComponent&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">AngularJSテンプレートで使用できるように、Angularコンポーネントをラップして公開するAngularJSディレクティブの作成。 &lt;code&gt;&lt;a href=&quot;downgradecomponent&quot;&gt;downgradeComponent&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="a6caf540e7d0dece81d99619f671f99deba1c1dc" translate="yes" xml:space="preserve">
          <source>Creation of an AngularJS service that wraps and exposes an Angular injectable so that it can be injected into an AngularJS context. See &lt;code&gt;&lt;a href=&quot;downgradeinjectable&quot;&gt;downgradeInjectable&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">AngularJSコンテキストに注入できるように、Angularインジェクタブルをラップして公開するAngularJSサービスの作成。 &lt;code&gt;&lt;a href=&quot;downgradeinjectable&quot;&gt;downgradeInjectable&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="965bd2d1ae3af9196cbb57387e0b08e1b5ae7b16" translate="yes" xml:space="preserve">
          <source>Critical runtime parts of the framework that are needed by every application. Includes all metadata decorators, &lt;code&gt;&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;&lt;/code&gt;, dependency injection, and the component lifecycle hooks.</source>
          <target state="translated">すべてのアプリケーションに必要なフレームワークの重要なランタイム部分。すべてのメタデータデコレーター、 &lt;code&gt;&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;&lt;/code&gt; 、Dependency Injection、およびコンポーネントライフサイクルフックが含まれます。</target>
        </trans-unit>
        <trans-unit id="aad515d4bcaf8e4561615026166d203743fcb329" translate="yes" xml:space="preserve">
          <source>Cross field validation</source>
          <target state="translated">クロスフィールド検証</target>
        </trans-unit>
        <trans-unit id="8949e67be6daae6abfc7300032bfed762cd44205" translate="yes" xml:space="preserve">
          <source>Cross-field validation</source>
          <target state="translated">クロスフィールド検証</target>
        </trans-unit>
        <trans-unit id="9f699a272acbf0ee5228697bde033ed84c6bc8ec" translate="yes" xml:space="preserve">
          <source>Cross-site request forgery</source>
          <target state="translated">クロスサイトリクエストフォージェリ</target>
        </trans-unit>
        <trans-unit id="58cd6a44bde0b5557b7ee1be6171e19c7b1cf41a" translate="yes" xml:space="preserve">
          <source>Cross-site script inclusion (XSSI)</source>
          <target state="translated">クロスサイトスクリプトインクルード(XSSI)</target>
        </trans-unit>
        <trans-unit id="9599a8d86f93531a87bed7500ddb51c3a1759842" translate="yes" xml:space="preserve">
          <source>Cross-site script inclusion, also known as JSON vulnerability, can allow an attacker's website to read data from a JSON API. The attack works on older browsers by overriding native JavaScript object constructors, and then including an API URL using a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag.</source>
          <target state="translated">JSONの脆弱性としても知られるクロスサイトスクリプトの包含により、攻撃者のWebサイトがJSON APIからデータを読み取ることが可能になります。攻撃は、ネイティブのJavaScriptオブジェクトコンストラクターをオーバーライドし、 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; タグを使用してAPI URLを含めることにより、古いブラウザーで機能します。</target>
        </trans-unit>
        <trans-unit id="90c3233734c863797885ddae5b2434bc49094fce" translate="yes" xml:space="preserve">
          <source>CurrencyPipe</source>
          <target state="translated">CurrencyPipe</target>
        </trans-unit>
        <trans-unit id="c8cdbe8af0f2d035eeafa0a86020e3dfc42012d5" translate="yes" xml:space="preserve">
          <source>Current index of the item in &lt;code&gt;Iterable&lt;/code&gt; or null if removed.</source>
          <target state="translated">&lt;code&gt;Iterable&lt;/code&gt; でのアイテムの現在のインデックス、または削除された場合はnull。</target>
        </trans-unit>
        <trans-unit id="040896c6a7b6a938ef18df5e030e5f6c531497ca" translate="yes" xml:space="preserve">
          <source>Current key in the Map.</source>
          <target state="translated">マップ内の現在のキー。</target>
        </trans-unit>
        <trans-unit id="4f623428491a00250f9cc3b6f826771ec45769cc" translate="yes" xml:space="preserve">
          <source>Current value for the key or &lt;code&gt;null&lt;/code&gt; if removed.</source>
          <target state="translated">キーの現在の値、または削除された場合は &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5d111a7c81ec43cd07010bc5176f26f471a1fd12" translate="yes" xml:space="preserve">
          <source>Currently every route within the &lt;em&gt;Crisis Center&lt;/em&gt; is open to everyone. The new &lt;em&gt;admin&lt;/em&gt; feature should be accessible only to authenticated users.</source>
          <target state="translated">現在、&lt;em&gt;クライシスセンター&lt;/em&gt;内のすべてのルートは誰でも利用できます。新しい&lt;em&gt;管理&lt;/em&gt;機能には、認証されたユーザーのみがアクセスできるようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="7dc2a59fbb94224120c7fedff472f15e58fd71b8" translate="yes" xml:space="preserve">
          <source>Currently the highlight color is hard-coded &lt;em&gt;within&lt;/em&gt; the directive. That's inflexible. In this section, you give the developer the power to set the highlight color while applying the directive.</source>
          <target state="translated">現在、ハイライトの色はディレクティブ&lt;em&gt;内に&lt;/em&gt;ハードコードさ&lt;em&gt;れ&lt;/em&gt;ています。それは柔軟性がありません。このセクションでは、ディレクティブを適用しながら、ハイライトカラーを設定する権限を開発者に与えます。</target>
        </trans-unit>
        <trans-unit id="980bc6bb8d334793aeecaded2d1ba80e27ea7147" translate="yes" xml:space="preserve">
          <source>Currently, &lt;code&gt;appHighlight&lt;/code&gt; simply sets an element color. The directive could be more dynamic. It could detect when the user mouses into or out of the element and respond by setting or clearing the highlight color.</source>
          <target state="translated">現在、 &lt;code&gt;appHighlight&lt;/code&gt; は要素の色を設定するだけです。ディレクティブはより動的にすることができます。これは、ユーザーが要素にマウスを出入りしたときを検出し、ハイライト色を設定またはクリアすることによって応答します。</target>
        </trans-unit>
        <trans-unit id="6cc2f1929d1be5dcde15f8c035f2d748065871c2" translate="yes" xml:space="preserve">
          <source>Currently, every route within the Crisis Center is open to everyone. The new admin feature should be accessible only to authenticated users.</source>
          <target state="translated">現在、危機管理センター内のすべてのルートは誰にでも開かれています。新しい管理者機能は、認証されたユーザーのみがアクセスできるようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="0a69d158209ffed11416b2f2213e9f100ae1f0a1" translate="yes" xml:space="preserve">
          <source>Currently, the &lt;code&gt;AdminModule&lt;/code&gt; does not preload because &lt;code&gt;&lt;a href=&quot;../api/router/canload&quot;&gt;CanLoad&lt;/a&gt;&lt;/code&gt; is blocking it.</source>
          <target state="translated">現在、 &lt;code&gt;AdminModule&lt;/code&gt; はので、プリロードされません &lt;code&gt;&lt;a href=&quot;../api/router/canload&quot;&gt;CanLoad&lt;/a&gt;&lt;/code&gt; はそれをブロックしています。</target>
        </trans-unit>
        <trans-unit id="4bb8ceb038011f14ae64b3990d5d31166f802179" translate="yes" xml:space="preserve">
          <source>Currently, the empty path route redirects to &lt;code&gt;/heroes&lt;/code&gt;, which redirects to &lt;code&gt;/superheroes&lt;/code&gt;. This won't work because the &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; handles redirects once at each level of routing configuration. This prevents chaining of redirects, which can lead to endless redirect loops.</source>
          <target state="translated">現在、空のパスルートは &lt;code&gt;/heroes&lt;/code&gt; にリダイレクトされ、/ heroesは &lt;code&gt;/superheroes&lt;/code&gt; にリダイレクトされます。 &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; はルーティング構成の各レベルでリダイレクトを1回処理するため、これは機能しません。これにより、リダイレクトの連鎖が防止され、リダイレクトループが無限に発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="f8dd226d2053a8d92cfdc2d0bb11b5673cc40983" translate="yes" xml:space="preserve">
          <source>Currently, the example app has three components:</source>
          <target state="translated">現在、サンプルアプリには3つのコンポーネントがあります。</target>
        </trans-unit>
        <trans-unit id="a4d2520a734e72a55fc240a11feb85a5158026de" translate="yes" xml:space="preserve">
          <source>Currently, the product list displays the name and description of each product. The product list component also defines a &lt;code&gt;products&lt;/code&gt; property that contains imported data for each product from the &lt;code&gt;products&lt;/code&gt; array in &lt;code&gt;products.ts&lt;/code&gt;.</source>
          <target state="translated">現在、製品リストには各製品の名前と説明が表示されています。製品リストコンポーネントは、 &lt;code&gt;products&lt;/code&gt; .tsの &lt;code&gt;products&lt;/code&gt; 配列から各製品のインポートされたデータを含む製品プロパティも定義し &lt;code&gt;products.ts&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3cb33c66e798683bba0aa43e42df78485ac28c18" translate="yes" xml:space="preserve">
          <source>Currently, you have a list in the component template. To click on a hero on the list and reveal details about that hero, you need a section for the details to render in the template. Add the following to &lt;code&gt;heroes.component.html&lt;/code&gt; beneath the list section:</source>
          <target state="translated">現在、コンポーネントテンプレートにリストがあります。リストのヒーローをクリックしてそのヒーローの詳細を表示するには、テンプレートにレンダリングする詳細のセクションが必要です。リストセクションの下の &lt;code&gt;heroes.component.html&lt;/code&gt; に以下を追加します。</target>
        </trans-unit>
        <trans-unit id="41f1412a582cbfadb73e1c521109c4acf06ec3fa" translate="yes" xml:space="preserve">
          <source>Currently, your application supports two routes. However, the only way to use those routes is for the user to manually type the path in the browser's address bar. In this section, you'll add two links that users can click to navigate between the &lt;code&gt;heroes-list&lt;/code&gt; and &lt;code&gt;crisis-list&lt;/code&gt; components. You'll also add some CSS styles. While these styles are not required, they make it easier to identify the link for the currently-displayed component. You'll add that functionality in the next section.</source>
          <target state="translated">現在、アプリケーションは2つのルートをサポートしています。ただし、これらのルートを使用する唯一の方法は、ユーザーがブラウザのアドレスバーにパスを手動で入力することです。このセクションでは、ユーザーがクリックして &lt;code&gt;heroes-list&lt;/code&gt; と &lt;code&gt;crisis-list&lt;/code&gt; コンポーネント間を移動できる2つのリンクを追加します。また、いくつかのCSSスタイルを追加します。これらのスタイルは必須ではありませんが、現在表示されているコンポーネントのリンクを簡単に識別できます。次のセクションでその機能を追加します。</target>
        </trans-unit>
        <trans-unit id="98e58e551f42abbc9350cbd4eeb67b3b8e230a9e" translate="yes" xml:space="preserve">
          <source>Custom &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; like directives</source>
          <target state="translated">カスタム &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; likeディレクティブ</target>
        </trans-unit>
        <trans-unit id="43ad3f3ccecb1834e96f03ea6336377a42fc2d0f" translate="yes" xml:space="preserve">
          <source>Custom CSS classes that provide visual feedback to users about invalid controls.</source>
          <target state="translated">無効なコントロールについてユーザーに視覚的なフィードバックを提供するカスタムCSSクラス。</target>
        </trans-unit>
        <trans-unit id="a27b89680d5547c404b628f384b487362b72e24f" translate="yes" xml:space="preserve">
          <source>Custom Element Support</source>
          <target state="translated">カスタム要素のサポート</target>
        </trans-unit>
        <trans-unit id="6c2d7934134bd64cca0c496d6f273c06c5f9cf2d" translate="yes" xml:space="preserve">
          <source>Custom Preloading Strategy</source>
          <target state="translated">カスタムプリロードの攻略法</target>
        </trans-unit>
        <trans-unit id="4925e78411919d28a64fbef614750df564eeeb31" translate="yes" xml:space="preserve">
          <source>Custom async validators are similar to sync validators, but they must instead return a Promise or Observable that later emits null or a validation error object. In the case of an Observable, the Observable must complete, at which point the form uses the last value emitted for validation.</source>
          <target state="translated">カスタム非同期バリデータは同期バリデータと似ていますが、代わりにPromiseやObservableを返さなければなりません。Observableの場合、Observableは完了しなければなりません。</target>
        </trans-unit>
        <trans-unit id="fb9f2204c54a5c01241d51e60fbefbfd4c78833f" translate="yes" xml:space="preserve">
          <source>Custom async validators are similar to sync validators, but they must instead return a Promise or observable that later emits null or a validation error object. In the case of an observable, the observable must complete, at which point the form uses the last value emitted for validation.</source>
          <target state="translated">カスタム非同期バリデータは同期バリデータと似ていますが、代わりにPromiseやobservableを返さなければなりません。オブザーバブルの場合、オブザーバブルは完了しなければならず、その時点でフォームは検証のために最後に出力された値を使います。</target>
        </trans-unit>
        <trans-unit id="a07d2ad69feb471ec3e608dbbb3bbdef03faf935" translate="yes" xml:space="preserve">
          <source>Custom elements bootstrap themselves - they start automatically when they are added to the DOM, and are automatically destroyed when removed from the DOM. Once a custom element is added to the DOM for any page, it looks and behaves like any other HTML element, and does not require any special knowledge of Angular terms or usage conventions.</source>
          <target state="translated">カスタム要素は自分自身でブートストラップを行います-DOMに追加されると自動的に起動し、DOMから削除されると自動的に破棄されます。カスタム要素がどのページでも DOM に追加されると、他の HTML 要素と同じように見え、振る舞います。</target>
        </trans-unit>
        <trans-unit id="36127018e280d4e568b6b50f5066539d9a8cb054" translate="yes" xml:space="preserve">
          <source>Custom elements created with Angular extend &lt;code&gt;&lt;a href=&quot;../api/elements/ngelement&quot;&gt;NgElement&lt;/a&gt;&lt;/code&gt; (which in turn extends &lt;code&gt;HTMLElement&lt;/code&gt;). Additionally, these custom elements will have a property for each input of the corresponding component. For example, our &lt;code&gt;popup-element&lt;/code&gt; will have a &lt;code&gt;&lt;a href=&quot;../api/common/http/httperrorresponse#message&quot;&gt;message&lt;/a&gt;&lt;/code&gt; property of type &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">Angularで作成されたカスタム要素は、 &lt;code&gt;&lt;a href=&quot;../api/elements/ngelement&quot;&gt;NgElement&lt;/a&gt;&lt;/code&gt; を拡張します（NgElementは &lt;code&gt;HTMLElement&lt;/code&gt; を拡張します）。さらに、これらのカスタム要素には、対応するコンポーネントの入力ごとにプロパティがあります。たとえば、 &lt;code&gt;popup-element&lt;/code&gt; には &lt;code&gt;string&lt;/code&gt; 型の &lt;code&gt;&lt;a href=&quot;../api/common/http/httperrorresponse#message&quot;&gt;message&lt;/a&gt;&lt;/code&gt; プロパティがあります。</target>
        </trans-unit>
        <trans-unit id="d731c542d3e2484e1c04d151d752fb64a9c50cad" translate="yes" xml:space="preserve">
          <source>Custom elements created with Angular extend &lt;code&gt;&lt;a href=&quot;../api/elements/ngelement&quot;&gt;NgElement&lt;/a&gt;&lt;/code&gt; (which in turn extends &lt;code&gt;HTMLElement&lt;/code&gt;). Additionally, these custom elements will have a property for each input of the corresponding component. For example, our &lt;code&gt;popup-element&lt;/code&gt; will have a &lt;code&gt;message&lt;/code&gt; property of type &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">Angularで作成されたカスタム要素は &lt;code&gt;&lt;a href=&quot;../api/elements/ngelement&quot;&gt;NgElement&lt;/a&gt;&lt;/code&gt; を拡張します（これは &lt;code&gt;HTMLElement&lt;/code&gt; を拡張します）。さらに、これらのカスタム要素には、対応するコンポーネントの入力ごとにプロパティがあります。たとえば、 &lt;code&gt;popup-element&lt;/code&gt; には &lt;code&gt;string&lt;/code&gt; 型の &lt;code&gt;message&lt;/code&gt; プロパティがあります。</target>
        </trans-unit>
        <trans-unit id="4e25196231f2ca6d3a38c2024a26e038af8d47e9" translate="yes" xml:space="preserve">
          <source>Custom events with &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt; を使用したカスタムイベント</target>
        </trans-unit>
        <trans-unit id="33ad348dcac39a32a6a5638a3873a439c5f5bb48" translate="yes" xml:space="preserve">
          <source>Custom format options</source>
          <target state="translated">カスタムフォーマットオプション</target>
        </trans-unit>
        <trans-unit id="a99e79089d5ca26db3d9e79c453e6fccb307304f" translate="yes" xml:space="preserve">
          <source>Custom label and tooltip</source>
          <target state="translated">カスタムラベルとツールチップ</target>
        </trans-unit>
        <trans-unit id="8841c28e5e05a4f2d9a63656ff35a449a9e517b3" translate="yes" xml:space="preserve">
          <source>Custom pipes</source>
          <target state="translated">カスタムパイプ</target>
        </trans-unit>
        <trans-unit id="9753d61a00b71a9de4d313849d6f03fec44dcfc6" translate="yes" xml:space="preserve">
          <source>Custom request expectations</source>
          <target state="translated">カスタムリクエストの期待</target>
        </trans-unit>
        <trans-unit id="1e9a26c0379f888d5dd3bc76c8b05fdca69be77a" translate="yes" xml:space="preserve">
          <source>Custom validators</source>
          <target state="translated">カスタムバリデータ</target>
        </trans-unit>
        <trans-unit id="2dbb45e0847c56bb6165a138a2a34e6ae7548974" translate="yes" xml:space="preserve">
          <source>Customized injector/content</source>
          <target state="translated">カスタマイズされた注入器/内容</target>
        </trans-unit>
        <trans-unit id="5e7558cff59aa1d2fb0e734c8c70a3466ecc817b" translate="yes" xml:space="preserve">
          <source>Customized ngModuleFactory</source>
          <target state="translated">カスタマイズされたngModuleFactory</target>
        </trans-unit>
        <trans-unit id="c52729454cd00750a4b461768779981a441da771" translate="yes" xml:space="preserve">
          <source>Customizing &lt;code&gt;BUILD.bazel&lt;/code&gt; files</source>
          <target state="translated">&lt;code&gt;BUILD.bazel&lt;/code&gt; ファイルのカスタマイズ</target>
        </trans-unit>
        <trans-unit id="9d237b6d6ebfb9c121d73b028643a81c53f9434c" translate="yes" xml:space="preserve">
          <source>Customizing option selection</source>
          <target state="translated">オプション選択のカスタマイズ</target>
        </trans-unit>
        <trans-unit id="094978cd66bc5d8725b9fdce0785fb623f56940d" translate="yes" xml:space="preserve">
          <source>Cut the HTML for the hero detail from the bottom of the &lt;code&gt;HeroesComponent&lt;/code&gt; template and paste it over the generated boilerplate in the &lt;code&gt;HeroDetailComponent&lt;/code&gt; template.</source>
          <target state="translated">底から英雄の詳細はHTMLをカット &lt;code&gt;HeroesComponent&lt;/code&gt; のテンプレートとで生成された定型の上に貼り付け &lt;code&gt;HeroDetailComponent&lt;/code&gt; のテンプレート。</target>
        </trans-unit>
        <trans-unit id="a7e6e4829fbd69a876c1288d354d1c365c2c8721" translate="yes" xml:space="preserve">
          <source>DEFAULT_CURRENCY_CODE</source>
          <target state="translated">DEFAULT_CURRENCY_CODE</target>
        </trans-unit>
        <trans-unit id="0ceecbea9d37250860e1b3086c61f32787e7e837" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">DESCRIPTION</target>
        </trans-unit>
        <trans-unit id="f10de7b822efc6f19f529f58479795f52f902679" translate="yes" xml:space="preserve">
          <source>DI is wired into the Angular framework and used everywhere to provide new components with the services or other things they need. Components consume services; that is, you can &lt;em&gt;inject&lt;/em&gt; a service into a component, giving the component access to that service class.</source>
          <target state="translated">DIはAngularフレームワークに接続され、新しいコンポーネントに必要なサービスやその他のものを提供するために至る所で使用されます。コンポーネントはサービスを消費します。つまり、コンポーネントにサービスを&lt;em&gt;注入&lt;/em&gt;して、コンポーネントにそのサービスクラスへのアクセスを許可できます。</target>
        </trans-unit>
        <trans-unit id="74759e7095bb98c889444c3ae3740b1870451363" translate="yes" xml:space="preserve">
          <source>DI token</source>
          <target state="translated">DIトークン</target>
        </trans-unit>
        <trans-unit id="2b2f0524fe19d0b4fd5fd7ef57f39d3449c9cf53" translate="yes" xml:space="preserve">
          <source>DI token for providing &lt;a href=&quot;http://hammerjs.github.io/&quot;&gt;HammerJS&lt;/a&gt; support to Angular.</source>
          <target state="translated">Angularに&lt;a href=&quot;http://hammerjs.github.io/&quot;&gt;HammerJS&lt;/a&gt;サポートを提供するためのDIトークン。</target>
        </trans-unit>
        <trans-unit id="9c1f4bd61f4ce75caa0fc715524cef0eda7ccea7" translate="yes" xml:space="preserve">
          <source>DI token for providing &lt;a href=&quot;https://hammerjs.github.io/&quot;&gt;HammerJS&lt;/a&gt; support to Angular.</source>
          <target state="translated">Angularに&lt;a href=&quot;https://hammerjs.github.io/&quot;&gt;HammerJS&lt;/a&gt;サポートを提供するためのDIトークン。</target>
        </trans-unit>
        <trans-unit id="8a812d80dec5127459b8bbbfdf1e22f80bb56765" translate="yes" xml:space="preserve">
          <source>DOCUMENT</source>
          <target state="translated">DOCUMENT</target>
        </trans-unit>
        <trans-unit id="4c661b3d55aaff2669ab1690c0ebd291bc96643a" translate="yes" xml:space="preserve">
          <source>DOM element for which to get the directives.</source>
          <target state="translated">ディレクティブを取得する DOM 要素。</target>
        </trans-unit>
        <trans-unit id="27b15815f1de042cdac283f7f1e3bf89dd75ee62" translate="yes" xml:space="preserve">
          <source>DOM element from which the component should be retrieved.</source>
          <target state="translated">コンポーネントを取得する DOM 要素。</target>
        </trans-unit>
        <trans-unit id="f5bfe5db2d1d4c59c574ad19d81e70dbd74fd291" translate="yes" xml:space="preserve">
          <source>DOM element, component or directive instance for which to retrieve the injector.</source>
          <target state="translated">インジェクタを取得するための DOM 要素、コンポーネント、ディレクティブのインスタンス。</target>
        </trans-unit>
        <trans-unit id="64071ef39b981e4fe17ca65655f6099c4c223326" translate="yes" xml:space="preserve">
          <source>DOM element, component or directive instance for which to retrieve the root components.</source>
          <target state="translated">ルートコンポーネントを取得するための DOM 要素、コンポーネント、ディレクティブのインスタンス。</target>
        </trans-unit>
        <trans-unit id="61c3feb8fa129e3517d7f4e33e0f321b871c65ad" translate="yes" xml:space="preserve">
          <source>DOM events carry a payload of information that may be useful to the component. This section shows how to bind to the &lt;code&gt;keyup&lt;/code&gt; event of an input box to get the user's input after each keystroke.</source>
          <target state="translated">DOMイベントは、コンポーネントに役立つ可能性がある情報のペイロードを伝達します。このセクションでは、入力ボックスの &lt;code&gt;keyup&lt;/code&gt; イベントにバインドして、各キーストローク後にユーザーの入力を取得する方法を示します。</target>
        </trans-unit>
        <trans-unit id="e5e429bcc9c2e4a41a3c7a4d96203be6cb273b11" translate="yes" xml:space="preserve">
          <source>Data</source>
          <target state="translated">Data</target>
        </trans-unit>
        <trans-unit id="1e16684c1ce279006d9578074b0720bf46a86d49" translate="yes" xml:space="preserve">
          <source>Data Services</source>
          <target state="translated">データサービス</target>
        </trans-unit>
        <trans-unit id="d8c7495fb4f75bec8a9dc62511d677ae31c74cad" translate="yes" xml:space="preserve">
          <source>Data Value</source>
          <target state="translated">データ値</target>
        </trans-unit>
        <trans-unit id="d38cca5da9c7df446a12182ab09218cd420e4017" translate="yes" xml:space="preserve">
          <source>Data binding</source>
          <target state="translated">データバインディング</target>
        </trans-unit>
        <trans-unit id="1897722a3a069b2a0505b9bdd9dd28837d6d1b7b" translate="yes" xml:space="preserve">
          <source>Data binding plays an important role in communication between a template and its component, and is also important for communication between parent and child components.</source>
          <target state="translated">データバインディングは、テンプレートとそのコンポーネント間の通信において重要な役割を果たし、親コンポーネントと子コンポーネント間の通信においても重要な役割を果たします。</target>
        </trans-unit>
        <trans-unit id="80cba10ee7651acd77417bf01e46c8d27f5d70e7" translate="yes" xml:space="preserve">
          <source>Data bound properties must also be public.</source>
          <target state="translated">データバインドされたプロパティも公開する必要があります。</target>
        </trans-unit>
        <trans-unit id="751873768a508a89953ce185eccc8e38d8483976" translate="yes" xml:space="preserve">
          <source>Data flow in forms</source>
          <target state="translated">フォームのデータフロー</target>
        </trans-unit>
        <trans-unit id="4fc3d60f53202cd02a2955630e8818fd52876d30" translate="yes" xml:space="preserve">
          <source>Data flow in reactive forms</source>
          <target state="translated">反応型のデータフロー</target>
        </trans-unit>
        <trans-unit id="d39f2164fca1d60e85028e0ffd46bbe82f0bc11c" translate="yes" xml:space="preserve">
          <source>Data flow in template-driven forms</source>
          <target state="translated">テンプレート駆動型フォームでのデータフロー</target>
        </trans-unit>
        <trans-unit id="2e1b89e8881cafb6b085aada57b60616b9ac3406" translate="yes" xml:space="preserve">
          <source>Data for a transition from one animation state to another. See &lt;code&gt;&lt;a href=&quot;transition&quot;&gt;transition&lt;/a&gt;()&lt;/code&gt;</source>
          <target state="translated">あるアニメーション状態から別のアニメーション状態への遷移のデータ。 &lt;code&gt;&lt;a href=&quot;transition&quot;&gt;transition&lt;/a&gt;()&lt;/code&gt; （）を参照</target>
        </trans-unit>
        <trans-unit id="9393a235ba23b990b99ee169026ad57440db380f" translate="yes" xml:space="preserve">
          <source>Data gathered in this way can be viewed on the Google Analytics site, but is not automatically visible on your own organization's Analytics site. As an administrator for an Angular development group, you can configure your instance of Angular CLI to be able to see analytics data for your own team's usage of the Angular CLI. This configuration option is separate from and in addition to other usage analytics that your users may be sharing with Google.</source>
          <target state="translated">このようにして収集されたデータはGoogle Analyticsのサイトで見ることができますが、自分の組織のAnalyticsサイトでは自動的に見ることはできません。Angular開発グループの管理者として、Angular CLIのインスタンスを設定して、自分のチームのAngular CLIの使用状況のアナリティクスデータを見ることができるようにすることができます。この設定オプションは、ユーザーがGoogleと共有している可能性のある他の使用状況のアナリティクスとは別のものであり、またそれに加えたものです。</target>
        </trans-unit>
        <trans-unit id="e9ccce7c84ff910c0458db8a1eb20d2bf55321dc" translate="yes" xml:space="preserve">
          <source>Data groups follow this Typescript interface:</source>
          <target state="translated">データグループは、このTypescriptのインターフェイスに従います。</target>
        </trans-unit>
        <trans-unit id="7c825ea984ebfeb20bfb18c3c089c4b5d7fc910e" translate="yes" xml:space="preserve">
          <source>Data model</source>
          <target state="translated">データモデル</target>
        </trans-unit>
        <trans-unit id="e55db42edf09b3bc94ad8e03463d13a646465d6a" translate="yes" xml:space="preserve">
          <source>Data returned from servers often takes the form of a stream. Streams are useful because they make it easy to transform the data that is returned, and to make modifications to the way data is requested. The Angular HTTP client (&lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt;) is a built-in way to fetch data from external APIs and provide them to your application as a stream.</source>
          <target state="translated">サーバーから返されるデータは、多くの場合、ストリームの形式をとります。ストリームは、返されるデータの変換やデータの要求方法の変更を容易にするため、便利です。Angular HTTPクライアント（ &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; ）は、外部APIからデータをフェッチし、ストリームとしてアプリケーションに提供するための組み込みの方法です。</target>
        </trans-unit>
        <trans-unit id="ac351ed3feb203e6748574b5a4117ca069a6c697" translate="yes" xml:space="preserve">
          <source>Data services that make HTTP calls to remote servers typically inject and delegate to the Angular &lt;a href=&quot;http&quot;&gt;&lt;code&gt;HttpClient&lt;/code&gt;&lt;/a&gt; service for XHR calls.</source>
          <target state="translated">リモートサーバーへのHTTP呼び出しを行うデータサービスは、通常、XHR呼び出しのためにAngular &lt;a href=&quot;http&quot;&gt; &lt;code&gt;HttpClient&lt;/code&gt; &lt;/a&gt;サービスに注入および委任します。</target>
        </trans-unit>
        <trans-unit id="e09683543199a512ce5b35c096ebcad1cf9eede7" translate="yes" xml:space="preserve">
          <source>Data services, such as &lt;code&gt;PackageSearchService&lt;/code&gt;, are unaware that some of their &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; requests actually return cached responses.</source>
          <target state="translated">&lt;code&gt;PackageSearchService&lt;/code&gt; などのデータサービスは、 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; リクエストの一部が実際にキャッシュされた応答を返すことを認識していません。</target>
        </trans-unit>
        <trans-unit id="b830720955a4965a704188d3b5459c245e7001e7" translate="yes" xml:space="preserve">
          <source>Data-binding and HTML</source>
          <target state="translated">データバインディングとHTML</target>
        </trans-unit>
        <trans-unit id="4beeca7e037b29ba76543e1366bfac09d0df5875" translate="yes" xml:space="preserve">
          <source>Data-binding is a mechanism for coordinating what users see, specifically with application data values. While you could push values to and pull values from HTML, the application is easier to write, read, and maintain if you turn these tasks over to a binding framework. You simply declare bindings between binding sources, target HTML elements, and let the framework do the rest.</source>
          <target state="translated">データバインディングは、ユーザーが見るもの、特にアプリケーションのデータ値を調整するためのメカニズムです。HTML に値をプッシュしたり、HTML から値を引き出したりすることもできますが、これらの作業をバインディングフレームワークに任せた方が、アプリケーションを書いたり、読んだり、保守したりするのが簡単になります。単にバインディングソース間のバインディングを宣言し、HTML要素をターゲットにし、フレームワークに残りの作業を任せるだけです。</target>
        </trans-unit>
        <trans-unit id="eb9a4bc1c0c153e4e4b042a79113b815b7e3021d" translate="yes" xml:space="preserve">
          <source>Date</source>
          <target state="translated">Date</target>
        </trans-unit>
        <trans-unit id="433a96bef0650364ce46802839a116fc7b8931f3" translate="yes" xml:space="preserve">
          <source>DatePipe</source>
          <target state="translated">DatePipe</target>
        </trans-unit>
        <trans-unit id="f5dbae0bbee5f646b166a48092a587cbe25ba8d8" translate="yes" xml:space="preserve">
          <source>Day of month</source>
          <target state="translated">月の日</target>
        </trans-unit>
        <trans-unit id="1a99c8bddb4b164e11b358bfc48c1fb30dc65858" translate="yes" xml:space="preserve">
          <source>Dead code elimination: removes unreferenced modules and much unused code.</source>
          <target state="translated">デッドコードの削除:参照されていないモジュールや多くの未使用のコードを削除します。</target>
        </trans-unit>
        <trans-unit id="5cc8e10702fbb1809836dbd83c85b35804f3cf01" translate="yes" xml:space="preserve">
          <source>Debounce (so as not to send off API requests for every keystroke, but instead wait for a break in keystrokes).</source>
          <target state="translated">Debounce (キーストロークごとにAPIリクエストを送信しないように、代わりにキーストロークのブレークを待ちます)。</target>
        </trans-unit>
        <trans-unit id="68b920be9b7ebb5d211f0821d92f09df03b3b7c0" translate="yes" xml:space="preserve">
          <source>Debouncing requests</source>
          <target state="translated">デバウンスのリクエスト</target>
        </trans-unit>
        <trans-unit id="2867cf87b59dd752e50e1c3c1104db84a9b3a42a" translate="yes" xml:space="preserve">
          <source>Debug log</source>
          <target state="translated">デバッグログ</target>
        </trans-unit>
        <trans-unit id="4ae2cd74b027750bd99aa71b58bab54f52e8dea3" translate="yes" xml:space="preserve">
          <source>Debug specs in the browser in the same way that you debug an application.</source>
          <target state="translated">アプリケーションをデバッグするのと同じように、ブラウザでスペックをデバッグします。</target>
        </trans-unit>
        <trans-unit id="d5e78f156c09dbbcd57c99c2364d5456c6ebebd2" translate="yes" xml:space="preserve">
          <source>DebugElement</source>
          <target state="translated">DebugElement</target>
        </trans-unit>
        <trans-unit id="7403074afccc06c065bd5e33470da88622229db8" translate="yes" xml:space="preserve">
          <source>DebugEventListener</source>
          <target state="translated">DebugEventListener</target>
        </trans-unit>
        <trans-unit id="c5e0558a3ae0736dbe4d5bbe74289a0f4ac5fbf1" translate="yes" xml:space="preserve">
          <source>DebugNode</source>
          <target state="translated">DebugNode</target>
        </trans-unit>
        <trans-unit id="359646351172857a2209695ce7e529c3651364e7" translate="yes" xml:space="preserve">
          <source>Debugging tests</source>
          <target state="translated">デバッグテスト</target>
        </trans-unit>
        <trans-unit id="4ae9636032d66cefae467fbfc1dcd56b64c42991" translate="yes" xml:space="preserve">
          <source>Debugging the Angular service worker</source>
          <target state="translated">Angularのサービスワーカーをデバッグする</target>
        </trans-unit>
        <trans-unit id="e8c443d52e0e5c0eb2f0949b6c00eaeca1e247a0" translate="yes" xml:space="preserve">
          <source>Debugging with the json pipe</source>
          <target state="translated">jsonパイプを使ったデバッグ</target>
        </trans-unit>
        <trans-unit id="02fd268bb2258c45a6fdc997692ba9c703b38276" translate="yes" xml:space="preserve">
          <source>Dec 24, 2020</source>
          <target state="translated">2020年12月24日</target>
        </trans-unit>
        <trans-unit id="081d99514f47a3097a606f4fb03a8b60bd642e75" translate="yes" xml:space="preserve">
          <source>Dec 24, 2021</source>
          <target state="translated">2021年12月24日</target>
        </trans-unit>
        <trans-unit id="c6226af647a580483e6f4753ea5100ed11e11ba5" translate="yes" xml:space="preserve">
          <source>Decimal representation options, specified by a string in the following format: &lt;code&gt;{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}&lt;/code&gt;.</source>
          <target state="translated">次の形式の文字列で指定される10進数表現オプション： &lt;code&gt;{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3a388f7beea5533c9477db7c66a25bb88f3fef66" translate="yes" xml:space="preserve">
          <source>Decimal separator for currency values (fallback to &lt;code&gt;Decimal&lt;/code&gt;). Example: $2,345.67</source>
          <target state="translated">通貨値の小数点記号（ &lt;code&gt;Decimal&lt;/code&gt; へのフォールバック）。例：$ 2,345.67</target>
        </trans-unit>
        <trans-unit id="aaf046d343b16ae8e5b81bcc1a797af0de42c117" translate="yes" xml:space="preserve">
          <source>Decimal separator. For &lt;code&gt;en-US&lt;/code&gt;, the dot character. Example : 2,345&lt;code&gt;.&lt;/code&gt;67</source>
          <target state="translated">小数点区切り。用 &lt;code&gt;en-US&lt;/code&gt; 、ドット文字。例：2,345 &lt;code&gt;.&lt;/code&gt; 67</target>
        </trans-unit>
        <trans-unit id="d96b842fbc4d2f97ccd04c22c633dff737fb5c69" translate="yes" xml:space="preserve">
          <source>DecimalPipe</source>
          <target state="translated">DecimalPipe</target>
        </trans-unit>
        <trans-unit id="48dd231e7a1f5127a27a08c66ee2e654ce7ff23e" translate="yes" xml:space="preserve">
          <source>Declarables are the class types&amp;mdash;components, directives, and pipes&amp;mdash;that you can add to a module's &lt;code&gt;declarations&lt;/code&gt; list. They're the only classes that you can add to &lt;code&gt;declarations&lt;/code&gt;.</source>
          <target state="translated">宣言可能変数は、モジュールの &lt;code&gt;declarations&lt;/code&gt; リストに追加できるクラスタイプ（コンポーネント、ディレクティブ、パイプ）です。これらは、 &lt;code&gt;declarations&lt;/code&gt; 追加できる唯一のクラスです。</target>
        </trans-unit>
        <trans-unit id="30528912ac642bcf1a44cd8aeaff1cb07299ae4c" translate="yes" xml:space="preserve">
          <source>Declarables must belong to exactly one module. The compiler emits an error if you try to declare the same class in more than one module. Be careful not to declare a class that is imported from another module.</source>
          <target state="translated">宣言可能なクラスは、正確に 1 つのモジュールに属する必要があります。複数のモジュールで同じクラスを宣言しようとすると、コンパイラはエラーを出します。他のモジュールからインポートされたクラスを宣言しないように注意してください。</target>
        </trans-unit>
        <trans-unit id="b9b846963186dedc9a34aab11fab9a0a092e2d1b" translate="yes" xml:space="preserve">
          <source>Declarations</source>
          <target state="translated">Declarations</target>
        </trans-unit>
        <trans-unit id="d30797025f2d97627b1af8c3ba19e48a02a93ed9" translate="yes" xml:space="preserve">
          <source>Declarations are private by default. If this ModuleA does not export UserComponent, then only the components within this ModuleA can use UserComponent.</source>
          <target state="translated">宣言はデフォルトではプライベートです。このモジュールAがUserComponentをエクスポートしない場合、このモジュールA内のコンポーネントのみがUserComponentを使用できます。</target>
        </trans-unit>
        <trans-unit id="2de8e7132c9f5917203ec203eeb390d1650341ac" translate="yes" xml:space="preserve">
          <source>Declarations are private by default. If this module does &lt;em&gt;not&lt;/em&gt; export &lt;code&gt;UserComponent&lt;/code&gt;, then only the components within &lt;em&gt;this&lt;/em&gt; module can use &lt;code&gt;UserComponent&lt;/code&gt;.</source>
          <target state="translated">宣言はデフォルトで非公開です。このモジュールがない場合&lt;em&gt;ではない&lt;/em&gt;エクスポート &lt;code&gt;UserComponent&lt;/code&gt; を、そして内部コンポーネントのみ&lt;em&gt;、この&lt;/em&gt;モジュールは使用することができ &lt;code&gt;UserComponent&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="fe55ec59a266c375da0d2bfd529cfee6e622c263" translate="yes" xml:space="preserve">
          <source>Declarations such as components and pipes should be designed as stateless, meaning they don&amp;rsquo;t rely on or alter external variables. If you do rely on state, you need to evaluate every case and decide whether it is application state or state that the library would manage.</source>
          <target state="translated">コンポーネントやパイプなどの宣言は、ステートレスとして設計する必要があります。つまり、それらは外部変数に依存したり変更したりしません。状態に依存する場合は、すべてのケースを評価し、それがアプリケーションの状態であるか、ライブラリが管理する状態であるかを判断する必要があります。</target>
        </trans-unit>
        <trans-unit id="a4e5bd1339a5cba236acf14265d289ce17e13f23" translate="yes" xml:space="preserve">
          <source>Declare &lt;code&gt;HeroesComponent&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;HeroesComponent&lt;/code&gt; を宣言する</target>
        </trans-unit>
        <trans-unit id="fa7eb4a7dc74680cebe692d0ed2c9e3f7cf0769a" translate="yes" xml:space="preserve">
          <source>Declare &lt;code&gt;root&lt;/code&gt; for the value of the &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;../api/core/injectable#providedIn&quot;&gt;providedIn&lt;/a&gt;&lt;/code&gt; property</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; &lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;（） &lt;code&gt;&lt;a href=&quot;../api/core/injectable#providedIn&quot;&gt;providedIn&lt;/a&gt;&lt;/code&gt; プロパティの値の &lt;code&gt;root&lt;/code&gt; を宣言します</target>
        </trans-unit>
        <trans-unit id="97d6bcb1a03694a1ed4b9cc698d896ce00118be8" translate="yes" xml:space="preserve">
          <source>Declare as one of the following:</source>
          <target state="translated">のいずれかであることを宣言する。</target>
        </trans-unit>
        <trans-unit id="a5c81d026ef2e0ad8115bf5f7d46127baa96d7fb" translate="yes" xml:space="preserve">
          <source>Declare it in the &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt;&lt;code&gt;declarations&lt;/code&gt; array.</source>
          <target state="translated">それを宣言する &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; &lt;code&gt;declarations&lt;/code&gt; 配列。</target>
        </trans-unit>
        <trans-unit id="3bfe1825457a6a1a0de9928c3c875aefd5a89af6" translate="yes" xml:space="preserve">
          <source>Declare the &lt;code&gt;itemImageUrl&lt;/code&gt; property in the class, in this case &lt;code&gt;AppComponent&lt;/code&gt;.</source>
          <target state="translated">宣言 &lt;code&gt;itemImageUrl&lt;/code&gt; この場合には、クラス内のプロパティを &lt;code&gt;AppComponent&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="baedeef851b5b2af0cf49fe7fffcbfdb94d4df9d" translate="yes" xml:space="preserve">
          <source>Declare the target of &lt;code&gt;childItem&lt;/code&gt; in its component class, in this case &lt;code&gt;ItemDetailComponent&lt;/code&gt;.</source>
          <target state="translated">コンポーネントクラス（この場合は &lt;code&gt;ItemDetailComponent&lt;/code&gt; )で &lt;code&gt;childItem&lt;/code&gt; のターゲットを宣言します。</target>
        </trans-unit>
        <trans-unit id="85d7e2e25229337e3d1969d606f65c86088c3193" translate="yes" xml:space="preserve">
          <source>Declare these classes in &lt;em&gt;exactly one&lt;/em&gt; module of the application. Declare them in a module if they belong to that particular module.</source>
          <target state="translated">アプリケーションの&lt;em&gt;1つの&lt;/em&gt;モジュールでこれらのクラスを宣言します。それらが特定のモジュールに属している場合、それらをモジュールで宣言します。</target>
        </trans-unit>
        <trans-unit id="0a6ecca2653ab90510b34d3ba1a1d6dfe3d2a6ee" translate="yes" xml:space="preserve">
          <source>Declared in Constructor</source>
          <target state="translated">コンストラクタで宣言されている</target>
        </trans-unit>
        <trans-unit id="bc46a3015b9cb9363d1317014191d8bcb727bff2" translate="yes" xml:space="preserve">
          <source>Declares a constructor parameter and its type.</source>
          <target state="translated">コンストラクタのパラメータとその型を宣言します。</target>
        </trans-unit>
        <trans-unit id="4fab86145971544f26ac5cda662e1c1aca216c73" translate="yes" xml:space="preserve">
          <source>Declares a key/value object containing CSS properties/styles that can then be used for an animation &lt;code&gt;&lt;a href=&quot;animations/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt;, within an animation &lt;code&gt;&lt;a href=&quot;animations/sequence&quot;&gt;sequence&lt;/a&gt;&lt;/code&gt;, or as styling data for calls to &lt;code&gt;&lt;a href=&quot;animations/animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;animations/keyframes&quot;&gt;keyframes&lt;/a&gt;()&lt;/code&gt;.</source>
          <target state="translated">CSSプロパティ/スタイルを含むキー/値オブジェクトを宣言します。これは、アニメーション &lt;code&gt;&lt;a href=&quot;animations/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; 、アニメーション &lt;code&gt;&lt;a href=&quot;animations/sequence&quot;&gt;sequence&lt;/a&gt;&lt;/code&gt; 内、または &lt;code&gt;&lt;a href=&quot;animations/animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;animations/keyframes&quot;&gt;keyframes&lt;/a&gt;()&lt;/code&gt; の呼び出しのスタイリングデータとして使用できます。</target>
        </trans-unit>
        <trans-unit id="8a07b09ad4e1128559c64bbf7737f414f58aa2c2" translate="yes" xml:space="preserve">
          <source>Declares a key/value object containing CSS properties/styles that can then be used for an animation &lt;code&gt;&lt;a href=&quot;state&quot;&gt;state&lt;/a&gt;&lt;/code&gt;, within an animation &lt;code&gt;&lt;a href=&quot;sequence&quot;&gt;sequence&lt;/a&gt;&lt;/code&gt;, or as styling data for calls to &lt;code&gt;&lt;a href=&quot;animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;keyframes&quot;&gt;keyframes&lt;/a&gt;()&lt;/code&gt;.</source>
          <target state="translated">CSSプロパティ/スタイルを含むキー/値オブジェクトを宣言します。これは、アニメーション &lt;code&gt;&lt;a href=&quot;state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; 、アニメーション &lt;code&gt;&lt;a href=&quot;sequence&quot;&gt;sequence&lt;/a&gt;&lt;/code&gt; 内、または &lt;code&gt;&lt;a href=&quot;animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;keyframes&quot;&gt;keyframes&lt;/a&gt;()&lt;/code&gt; の呼び出しのスタイリングデータとして使用できます。</target>
        </trans-unit>
        <trans-unit id="0fc2cadbfe8ba889b264343b494f4074bf47bd77" translate="yes" xml:space="preserve">
          <source>Declares a public property of the same name.</source>
          <target state="translated">同名の公有財産を宣言します。</target>
        </trans-unit>
        <trans-unit id="d5516185e9663e1f80423a2f986cf3db80b7e8e6" translate="yes" xml:space="preserve">
          <source>Declares an animation state within a trigger attached to an element.</source>
          <target state="translated">要素にアタッチされたトリガー内のアニメーション状態を宣言します。</target>
        </trans-unit>
        <trans-unit id="7184d12b506f1288482c49e1a4d72845528ce457" translate="yes" xml:space="preserve">
          <source>Declares an animation transition as a sequence of animation steps to run when a given condition is satisfied. The condition is a Boolean expression or function that compares the previous and current animation states, and returns true if this transition should occur. When the state criteria of a defined transition are met, the associated animation is triggered.</source>
          <target state="translated">与えられた条件が満たされたときに実行されるアニメーションのステップのシーケンスとして、アニメーションの遷移を宣言します。条件は、前のアニメーション状態と現在のアニメーション状態を比較するブール演算式または関数であり、この遷移が発生する場合は真を返します。定義された遷移の状態基準が満たされると、関連するアニメーションが起動されます。</target>
        </trans-unit>
        <trans-unit id="0e3330a9e192dfa745e59494e0a69489aadac700" translate="yes" xml:space="preserve">
          <source>Declares an input property that you can update via property binding (example: &lt;code&gt;&amp;lt;my-cmp [myProperty]=&quot;someExpression&quot;&amp;gt;&lt;/code&gt;).</source>
          <target state="translated">プロパティバインディングを介して更新できる入力プロパティを宣言します（例： &lt;code&gt;&amp;lt;my-cmp [myProperty]=&quot;someExpression&quot;&amp;gt;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="5e17bfc2e25cdc8965acfa692aced372c29604fd" translate="yes" xml:space="preserve">
          <source>Declares an output property that fires events that you can subscribe to with an event binding (example: &lt;code&gt;&amp;lt;my-cmp (myEvent)=&quot;doSomething()&quot;&amp;gt;&lt;/code&gt;).</source>
          <target state="translated">イベントバインディングでサブスクライブできるイベントを発生させる出力プロパティを宣言します（例： &lt;code&gt;&amp;lt;my-cmp (myEvent)=&quot;doSomething()&quot;&amp;gt;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="ef2b4e0567c46eae59ac8cb8e249a4a90843a03f" translate="yes" xml:space="preserve">
          <source>Declares that a class can be provided and injected by other classes. Without this decorator, the compiler won't generate enough metadata to allow the class to be created properly when it's injected somewhere.</source>
          <target state="translated">クラスが他のクラスから提供されたり、注入されたりすることができることを宣言します。このデコレータがないと、コンパイラはどこかに注入されたときにクラスが適切に作成されるように十分なメタデータを生成しません。</target>
        </trans-unit>
        <trans-unit id="58da8aac234219772bbd32f21aa968dfec3d10e8" translate="yes" xml:space="preserve">
          <source>Declares that a class is a component and provides metadata about the component.</source>
          <target state="translated">クラスがコンポーネントであることを宣言し、コンポーネントに関するメタデータを提供します。</target>
        </trans-unit>
        <trans-unit id="3e996a4210d7d9c25820ba56979e37b06bc36c6b" translate="yes" xml:space="preserve">
          <source>Declares that a class is a directive and provides metadata about the directive.</source>
          <target state="translated">クラスがディレクティブであることを宣言し、ディレクティブに関するメタデータを提供します。</target>
        </trans-unit>
        <trans-unit id="2f856a0e464d7245018d5f267844e98ded5035c2" translate="yes" xml:space="preserve">
          <source>Declares that a class is a pipe and provides metadata about the pipe.</source>
          <target state="translated">クラスがパイプであることを宣言し、パイプに関するメタデータを提供します。</target>
        </trans-unit>
        <trans-unit id="124350f26ea93c4bafefb256bde5e5aff1ca579d" translate="yes" xml:space="preserve">
          <source>Declares which components, directives, and pipes belong to the module.</source>
          <target state="translated">どのコンポーネント、ディレクティブ、パイプがモジュールに属するかを宣言します。</target>
        </trans-unit>
        <trans-unit id="710658a9ab87b415b2ff5cfce106cc0c87d2078a" translate="yes" xml:space="preserve">
          <source>Declaring a component's styles</source>
          <target state="translated">コンポーネントのスタイルを宣言する</target>
        </trans-unit>
        <trans-unit id="ac650fccd8ead68e2d8c45cd5891eb0840e3f4a2" translate="yes" xml:space="preserve">
          <source>Declaring directives</source>
          <target state="translated">宣言ディレクティブ</target>
        </trans-unit>
        <trans-unit id="2bc45504ae00fbf29fe8388adb2891f26d16a064" translate="yes" xml:space="preserve">
          <source>Decodes an encoded URL parameter or query-string key.</source>
          <target state="translated">エンコードされた URL パラメータまたはクエリ文字列キーをデコードします。</target>
        </trans-unit>
        <trans-unit id="8aee91813b451b3778fab17f3e6d531cd57b5197" translate="yes" xml:space="preserve">
          <source>Decodes an encoded URL parameter or query-string value.</source>
          <target state="translated">エンコードされたURLパラメータまたはクエリ文字列の値をデコードします。</target>
        </trans-unit>
        <trans-unit id="2038623fc71103952b2ba258516c5f3d7840ecde" translate="yes" xml:space="preserve">
          <source>Decodes the hash from the provided string</source>
          <target state="translated">与えられた文字列からハッシュをデコードします。</target>
        </trans-unit>
        <trans-unit id="7a932704d6c6ef1ef267af7766d9f2e2ad68535b" translate="yes" xml:space="preserve">
          <source>Decodes the path from the provided string</source>
          <target state="translated">指定された文字列からパスをデコードします</target>
        </trans-unit>
        <trans-unit id="dd7d5e9ea24bd4ef7c1fe30602bb817b06e46326" translate="yes" xml:space="preserve">
          <source>Decodes the search objects from the provided string</source>
          <target state="translated">指定された文字列から検索オブジェクトをデコードします。</target>
        </trans-unit>
        <trans-unit id="062e159b6481b23409f9d9fb73b36ad762dc5f1f" translate="yes" xml:space="preserve">
          <source>Decorate &lt;code&gt;input&lt;/code&gt; and &lt;code&gt;output&lt;/code&gt; properties</source>
          <target state="translated">&lt;code&gt;input&lt;/code&gt; と &lt;code&gt;output&lt;/code&gt; プロパティを装飾する</target>
        </trans-unit>
        <trans-unit id="efae1157004840ce53744bf4910848b2a54d6036" translate="yes" xml:space="preserve">
          <source>Decorated and data-bound class members must be public.</source>
          <target state="translated">デコレーションされたクラスおよびデータバインドされたクラスのメンバは、パブリックでなければなりません。</target>
        </trans-unit>
        <trans-unit id="8d20855dde10821727be4973f1a1b332029694d1" translate="yes" xml:space="preserve">
          <source>Decorated component class members must be public. You cannot make an &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; property private or protected.</source>
          <target state="translated">装飾されたコンポーネントクラスのメンバーはパブリックである必要があります。 &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; プロパティをプライベートまたは保護にすることはできません。</target>
        </trans-unit>
        <trans-unit id="75585dc43ebb9a44de9edabbf4fcb972f67e5b5a" translate="yes" xml:space="preserve">
          <source>Decorator that declares a DOM event to listen for, and provides a handler method to run when that event occurs.</source>
          <target state="translated">リッスンする DOM イベントを宣言し、そのイベントが発生したときに実行するハンドラメソッドを提供する Decorator。</target>
        </trans-unit>
        <trans-unit id="06f314686cda74dbcdc6072d3d30b7b552f3828a" translate="yes" xml:space="preserve">
          <source>Decorator that marks a DOM property as a host-binding property and supplies configuration metadata. Angular automatically checks host property bindings during change detection, and if a binding changes it updates the host element of the directive.</source>
          <target state="translated">DOMプロパティをホストバインディングプロパティとしてマークし、設定メタデータを提供するデコレータです。Angular は変更検出時にホストプロパティのバインディングを自動的にチェックし、バインディングが変更されるとディレクティブのホスト要素を更新します。</target>
        </trans-unit>
        <trans-unit id="542fac39a0c25257bafa494b67a691039e7fe190" translate="yes" xml:space="preserve">
          <source>Decorator that marks a class as an Angular component and provides configuration metadata that determines how the component should be processed, instantiated, and used at runtime.</source>
          <target state="translated">クラスをAngularコンポーネントとしてマークし、実行時にコンポーネントがどのように処理され、インスタンス化され、使用されるべきかを決定する設定メタデータを提供するデコレータです。</target>
        </trans-unit>
        <trans-unit id="54fadbc3c296510749dca2013335bb14188c6861" translate="yes" xml:space="preserve">
          <source>Decorator that marks a class as an Angular directive. You can define your own directives to attach custom behavior to elements in the DOM.</source>
          <target state="translated">クラスを Angular ディレクティブとしてマークするデコレータです。独自のディレクティブを定義して、DOM内の要素にカスタムの振る舞いを付けることができます。</target>
        </trans-unit>
        <trans-unit id="147b75641348b8313862ccda39948337f00188dd" translate="yes" xml:space="preserve">
          <source>Decorator that marks a class as an NgModule and supplies configuration metadata.</source>
          <target state="translated">クラスをNgModuleとしてマークし、設定メタデータを提供するデコレータです。</target>
        </trans-unit>
        <trans-unit id="2c2429c1549c508d15ecd2b546db50f3c94e5597" translate="yes" xml:space="preserve">
          <source>Decorator that marks a class as available to be provided and injected as a dependency.</source>
          <target state="translated">クラスを提供可能なものとしてマークし、依存関係として注入するデコレータ。</target>
        </trans-unit>
        <trans-unit id="39326538b31e6f6885bca1ca78653f5efcdec9dd" translate="yes" xml:space="preserve">
          <source>Decorator that marks a class as pipe and supplies configuration metadata.</source>
          <target state="translated">クラスをパイプとしてマークし、設定メタデータを提供するデコレータ。</target>
        </trans-unit>
        <trans-unit id="b2032e24d27125e464324d9b7df0505927afa011" translate="yes" xml:space="preserve">
          <source>Decorator that marks a class field as an input property and supplies configuration metadata. The input property is bound to a DOM property in the template. During change detection, Angular automatically updates the data property with the DOM property's value.</source>
          <target state="translated">クラスフィールドを入力プロパティとしてマークし、設定メタデータを提供するデコレータ。入力プロパティはテンプレート内のDOMプロパティにバインドされます。変更検出時には、Angularは自動的にDOMプロパティの値でデータプロパティを更新します。</target>
        </trans-unit>
        <trans-unit id="da683e3ad3ee83805b1fd0e2479630efc8c206e2" translate="yes" xml:space="preserve">
          <source>Decorator that marks a class field as an output property and supplies configuration metadata. The DOM property bound to the output property is automatically updated during change detection.</source>
          <target state="translated">クラスフィールドを出力プロパティとしてマークし、設定メタデータを提供するデコレータ。出力プロパティにバインドされた DOM プロパティは、変更検出時に自動的に更新されます。</target>
        </trans-unit>
        <trans-unit id="a2e23b650a15e5c693ca1445133d5ee60d9d20b4" translate="yes" xml:space="preserve">
          <source>Decorators</source>
          <target state="translated">Decorators</target>
        </trans-unit>
        <trans-unit id="da3808ca96b01e8fd16e2a06a7564a7822eb3e4b" translate="yes" xml:space="preserve">
          <source>Decorators are functions that modify JavaScript classes. Angular defines a number of decorators that attach specific kinds of metadata to classes, so that the system knows what those classes mean and how they should work.</source>
          <target state="translated">デコレータはJavaScriptのクラスを修正する関数です。Angularはクラスに特定の種類のメタデータを添付するデコレータをいくつか定義しています。</target>
        </trans-unit>
        <trans-unit id="046771e00752578919124510d90fd88750570b5d" translate="yes" xml:space="preserve">
          <source>Decreases the number of pending request</source>
          <target state="translated">保留中のリクエスト数を減少させる</target>
        </trans-unit>
        <trans-unit id="08b0acb88b65a7c7a047365717b6a16f6993ebf7" translate="yes" xml:space="preserve">
          <source>Default &lt;a href=&quot;https://palantir.github.io/tslint/&quot;&gt;TSLint&lt;/a&gt; configuration for projects in the workspace.</source>
          <target state="translated">ワークスペース内のプロジェクトのデフォルトの&lt;a href=&quot;https://palantir.github.io/tslint/&quot;&gt;TSLint&lt;/a&gt;構成。</target>
        </trans-unit>
        <trans-unit id="e30eaec489000b4a7a0ca6c7d0d4a10f2c02171f" translate="yes" xml:space="preserve">
          <source>Default &lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt; configuration for projects in the workspace.</source>
          <target state="translated">ワークスペース内のプロジェクトのデフォルトの&lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt;構成。</target>
        </trans-unit>
        <trans-unit id="113972ed85a44c2d6f2d83e8313a8702055ff3c6" translate="yes" xml:space="preserve">
          <source>Default Architect builders and targets</source>
          <target state="translated">デフォルトのアーキテクトのビルダーとターゲット</target>
        </trans-unit>
        <trans-unit id="63f359affa8c9e1087e61e45f3bfcc30f98d18a8" translate="yes" xml:space="preserve">
          <source>Default architect configuration</source>
          <target state="translated">デフォルトのアーキテクト構成</target>
        </trans-unit>
        <trans-unit id="9aa63cef2302cefa4f2a34a236f447c362a8477f" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;false&lt;/code&gt;, but when you use the CLI command &lt;code&gt;ng new&lt;/code&gt;, it is set to &lt;code&gt;true&lt;/code&gt; by default in the generated project's configuration.</source>
          <target state="translated">デフォルトは &lt;code&gt;false&lt;/code&gt; をしていますが、CLIコマンドを使用するとき &lt;code&gt;ng new&lt;/code&gt; 、それがに設定されている &lt;code&gt;true&lt;/code&gt; 生成されたプロジェクトの設定ではデフォルトで。</target>
        </trans-unit>
        <trans-unit id="a242d3cf5b2a9c6afb60ed18be622df851cb377b" translate="yes" xml:space="preserve">
          <source>Default is currently false.</source>
          <target state="translated">デフォルトは現在falseです。</target>
        </trans-unit>
        <trans-unit id="e8ac2fc6220ae2ee87143ccb049cecea94c63ada" translate="yes" xml:space="preserve">
          <source>Default size-budget type and threshholds for all or parts of your app. You can configure the builder to report a warning or an error when the output reaches or exceeds a threshold size. See &lt;a href=&quot;build#configure-size-budgets&quot;&gt;Configure size budgets&lt;/a&gt;. (Not available in &lt;code&gt;test&lt;/code&gt; section.)</source>
          <target state="translated">アプリのすべてまたは一部のデフォルトのサイズ予算タイプとしきい値。出力がしきい値サイズに達したか超えたときに警告またはエラーを報告するようにビルダーを構成できます。&lt;a href=&quot;build#configure-size-budgets&quot;&gt;サイズの予算の設定を&lt;/a&gt;ご覧ください。（ &lt;code&gt;test&lt;/code&gt; セクションでは使用できません。）</target>
        </trans-unit>
        <trans-unit id="317bbd656753a9dd8ea52dce97e89a2822b25653" translate="yes" xml:space="preserve">
          <source>Default:</source>
          <target state="translated">Default:</target>
        </trans-unit>
        <trans-unit id="61f2d4a71bf558e84e2c3f6097b5299bb8527a31" translate="yes" xml:space="preserve">
          <source>Default: 'registerWhenStable'</source>
          <target state="translated">デフォルト:'registerWhenStable'</target>
        </trans-unit>
        <trans-unit id="703424a32071c4327b810576d1d5fb6560c3b2a1" translate="yes" xml:space="preserve">
          <source>Default: 'registerWhenStable:30000'</source>
          <target state="translated">デフォルト:'registerWhenStable:30000'</target>
        </trans-unit>
        <trans-unit id="a1c65a6502d6516e813657ded5fa271c01c936f3" translate="yes" xml:space="preserve">
          <source>Default: true</source>
          <target state="translated">デフォルト:true</target>
        </trans-unit>
        <trans-unit id="a7d92a6c0d0700d1f5d27cc93561cb698235d75e" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;4200&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;4200&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e534b9bc59cc35ed596e3d52a27c112d3b447fd2" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;AppServerModule&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;AppServerModule&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="62d8ddde592aace33cdedc9f7ff5db8124377a35" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;Child&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;Child&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1440cac9a5ec797ecdcbb67806593db4d7747aa1" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;Component&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;Component&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="362a94e8934df56158b8fcf406fef69b1b8b937f" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;Default&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;Default&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="31dd447d1e197208263232a14e4b09c98c8c67c1" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;app.server.module.ts&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;app.server.module.ts&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6b81035c7cfe4f1f16f706195740b1d641c47660" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;app&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;app&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2e9b7f553bf37a6fa503e7ff8fedc3d3ad53296c" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;build&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;build&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ef1398e571684d0ff9b89d114b6ad6b76012bcae" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;css&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;css&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ccce1f425ace5df3413f25f2764b65c22b6d468e" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;dist-server&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;dist-server&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1206b7148f935e93d741657612cd60f8df41560e" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1a39fc988eabf3af75b55b1c0742c1862b77a46b" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;index.html&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;index.html&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e55a308f669d966d6652e9a98f710ce1efb4890f" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;lib&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;lib&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="150921537b0205c20cf347f2551372c662cf2eeb" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;localhost&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;localhost&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="90996341071c4d663d5773812f29490934b18209" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;main.server.ts&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;main.server.ts&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b886c4fd6b47554356549df40239ed36762fb458" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;none&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;none&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c6f12228db7c8844c52da6e16ae4f84912260863" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;production&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;production&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d28195afb50d3af379592d37e9b11e95268a1bc7" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;projects&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;projects&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9ef5f637a575ac24ee799eb1f46529522c6a7b3a" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;prose&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;prose&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3d88359db7189adad0dd209dc1e36e2a5a44b389" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;public-api&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;public-api&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cc4cdc4a0620bc85c35cc0985ab1171b55ba0a4f" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;serverApp&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;serverApp&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="533d1a7b8646f62917b3ab7819ff29878dd1d08e" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;shell&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;shell&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="686319b13675c66420027bd730510aec8bad6955" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;src&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;src&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dfc35966b27ac2ef4b8be218e4c18ec4e5b6db88" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;stylish&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;stylish&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="94d281a4a89b897b769dc942f7fde6d38df484f7" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="52042906c683969c26d75239988b89501df5717e" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;tsconfig.server&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;tsconfig.server&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1de78ccd96cdac76c54716e4bed0bd3eaa38fd4f" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;tsconfig.spec&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;tsconfig.spec&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5b59c3c7f6a0f25578287cfcf63a9f0dec368d30" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;warning&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;warning&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="019b2c4418deec7387a57c6cd629ac8ccb162060" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;xlf&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;xlf&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3263c670a9cc238df307d5b499b4b1a389bab6b6" translate="yes" xml:space="preserve">
          <source>DefaultIterableDiffer</source>
          <target state="translated">DefaultIterableDiffer</target>
        </trans-unit>
        <trans-unit id="7b208a18b43c24b5e2e51af667317c6e8445d465" translate="yes" xml:space="preserve">
          <source>DefaultUrlSerializer</source>
          <target state="translated">DefaultUrlSerializer</target>
        </trans-unit>
        <trans-unit id="8fbd4101ec587a6f2d184f0b05bf2bd4fff464cf" translate="yes" xml:space="preserve">
          <source>DefaultUrlSerializer uses parentheses to serialize secondary segments (e.g., popup:compose), the colon syntax to specify the outlet, and the ';parameter=value' syntax (e.g., open=true) to specify route specific parameters.</source>
          <target state="translated">DefaultUrlSerializer は括弧を使用してセカンダリセグメント (popup:compose など)をシリアライズし、コロン構文を使用してアウトレットを指定し、';parameter=value' 構文 (open=true など)を使用してルート固有のパラメータを指定します。</target>
        </trans-unit>
        <trans-unit id="abfe751e30348995f94251569b887d3adaf69de4" translate="yes" xml:space="preserve">
          <source>DefaultValueAccessor</source>
          <target state="translated">DefaultValueAccessor</target>
        </trans-unit>
        <trans-unit id="5de13986d9c48ec6ea5c80e7b8bf59649abc3508" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;prefetch&lt;/code&gt;.</source>
          <target state="translated">デフォルトは &lt;code&gt;prefetch&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ce4f933914034630118d09fa2b33f58770d4ad3d" translate="yes" xml:space="preserve">
          <source>Defaults to the value &lt;code&gt;installMode&lt;/code&gt; is set to.</source>
          <target state="translated">デフォルトは &lt;code&gt;installMode&lt;/code&gt; に設定されている値です。</target>
        </trans-unit>
        <trans-unit id="328c354b1f04708298579626e25553ebaa49002c" translate="yes" xml:space="preserve">
          <source>Define &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forChild&quot;&gt;forChild()&lt;/a&gt;&lt;/code&gt; methods in the module.</source>
          <target state="translated">モジュールに &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forChild&quot;&gt;forChild()&lt;/a&gt;&lt;/code&gt; メソッドを定義します。</target>
        </trans-unit>
        <trans-unit id="aa0dede466437df9fc8e31fd6ca81ed5a1864e1c" translate="yes" xml:space="preserve">
          <source>Define &lt;code&gt;forRoot()&lt;/code&gt; and &lt;code&gt;forChild()&lt;/code&gt; methods in the module.</source>
          <target state="translated">定義 &lt;code&gt;forRoot()&lt;/code&gt; と &lt;code&gt;forChild()&lt;/code&gt; モジュールのメソッドを。</target>
        </trans-unit>
        <trans-unit id="22a59702bf9ab24e07bb851d8b2e03067d7ac299" translate="yes" xml:space="preserve">
          <source>Define Routes</source>
          <target state="translated">ルートの定義</target>
        </trans-unit>
        <trans-unit id="95fd531abc23d0e4add477252e925d00e565d0aa" translate="yes" xml:space="preserve">
          <source>Define a &lt;code&gt;&lt;a href=&quot;../api/forms/formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; control.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/forms/formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; コントロールを定義します。</target>
        </trans-unit>
        <trans-unit id="874a27f286ff33b0061e026eb76ec7da6f71749d" translate="yes" xml:space="preserve">
          <source>Define a &lt;code&gt;shippingCosts&lt;/code&gt; property.</source>
          <target state="translated">&lt;code&gt;shippingCosts&lt;/code&gt; プロパティを定義します。</target>
        </trans-unit>
        <trans-unit id="b3a8f77f9c6f003f8e6a837e9afd3742508ba160" translate="yes" xml:space="preserve">
          <source>Define a Wildcard route</source>
          <target state="translated">ワイルドカードルートの定義</target>
        </trans-unit>
        <trans-unit id="78881e03729d2c91e39e562aa59d679ec0700be8" translate="yes" xml:space="preserve">
          <source>Define a cart service</source>
          <target state="translated">カートサービスの定義</target>
        </trans-unit>
        <trans-unit id="e73d69ecb7fe5bb15e2b8912d9c0513d7ed8e0d6" translate="yes" xml:space="preserve">
          <source>Define a container element for the directive, and specify the switch expression to match against as an attribute:</source>
          <target state="translated">ディレクティブのコンテナ要素を定義し、属性としてマッチする switch 式を指定します。</target>
        </trans-unit>
        <trans-unit id="4855c08ec794427f283e9484dcf713459345e550" translate="yes" xml:space="preserve">
          <source>Define a generation rule</source>
          <target state="translated">世代ルールの定義</target>
        </trans-unit>
        <trans-unit id="628e7d0326beb26578cac423777c9da1cbb5163f" translate="yes" xml:space="preserve">
          <source>Define a link using the &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; directive. The &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;routerLink&lt;/a&gt;&lt;/code&gt; defines how the user navigates to the route (or URL) declaratively in the component template.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; ディレクティブを使用してリンクを定義します。 &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;routerLink&lt;/a&gt;&lt;/code&gt; は、宣言コンポーネントテンプレート内のルート（またはURL）にどのようにユーザナビゲートを定義します。</target>
        </trans-unit>
        <trans-unit id="37563558345558ee13d439fb5b7c35348e7a2635" translate="yes" xml:space="preserve">
          <source>Define a method to dynamically insert an alias control into the alias's form array. The &lt;code&gt;&lt;a href=&quot;../api/forms/formarray#push&quot;&gt;FormArray.push()&lt;/a&gt;&lt;/code&gt; method inserts the control as a new item in the array.</source>
          <target state="translated">エイリアスコントロールをエイリアスのフォーム配列に動的に挿入するメソッドを定義します。 &lt;code&gt;&lt;a href=&quot;../api/forms/formarray#push&quot;&gt;FormArray.push()&lt;/a&gt;&lt;/code&gt; メソッドは、配列内の新しい項目としてコントロールを挿入します。</target>
        </trans-unit>
        <trans-unit id="f55478ee37b12cf326102ac2f1e11c16d2520e01" translate="yes" xml:space="preserve">
          <source>Define a sample data model.</source>
          <target state="translated">サンプルデータモデルを定義します。</target>
        </trans-unit>
        <trans-unit id="d4ebbadc64ccb33e53ae57852dd662c43d818940" translate="yes" xml:space="preserve">
          <source>Define a template reference variable on the (enhanced) form element.</source>
          <target state="translated">(enhanced)フォーム要素にテンプレート参照変数を定義します。</target>
        </trans-unit>
        <trans-unit id="3829ba367338047948d269696cd6dcc93bb234e3" translate="yes" xml:space="preserve">
          <source>Define a variable only once in the template so the runtime value remains predictable.</source>
          <target state="translated">テンプレート内で一度だけ変数を定義することで、実行時の値を予測可能なままにしておくことができます。</target>
        </trans-unit>
        <trans-unit id="cbf1b1ad1692c932aaef851bd68f8cffbe64e05e" translate="yes" xml:space="preserve">
          <source>Define an animation trigger in the &lt;code&gt;animations&lt;/code&gt; section of &lt;code&gt;@&lt;a href=&quot;../core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; metadata. In the template, reference the trigger by name and bind it to a trigger expression that evaluates to a defined animation state, using the following format:</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;../core/component&quot;&gt;コンポーネント&lt;/a&gt;メタデータの &lt;code&gt;animations&lt;/code&gt; セクションでアニメーショントリガーを定義します。テンプレートで、トリガーを名前で参照し、次の形式を使用して、定義されたアニメーション状態に評価されるトリガー式にバインドします。</target>
        </trans-unit>
        <trans-unit id="4d53180880090d0468ceae9ece0d0eeab097af77" translate="yes" xml:space="preserve">
          <source>Define application-wide providers by specifying &lt;code&gt;&lt;a href=&quot;../api/core/injectable#providedIn&quot;&gt;providedIn&lt;/a&gt;: 'root'&lt;/code&gt; on its &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; decorator (in the case of services) or at &lt;code&gt;&lt;a href=&quot;../api/core/injectiontoken&quot;&gt;InjectionToken&lt;/a&gt;&lt;/code&gt; construction (in the case where tokens are provided). Providers that are created this way automatically are made available to the entire application and don't need to be listed in any module.</source>
          <target state="translated">指定することで、アプリケーション全体のプロバイダーを定義 &lt;code&gt;&lt;a href=&quot;../api/core/injectable#providedIn&quot;&gt;providedIn&lt;/a&gt;: 'root'&lt;/code&gt; その上 &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; （サービスの場合）デコレータかで &lt;code&gt;&lt;a href=&quot;../api/core/injectiontoken&quot;&gt;InjectionToken&lt;/a&gt;&lt;/code&gt; の（トークンが提供されている場合）の建設。この方法で自動的に作成されたプロバイダーは、アプリケーション全体で利用可能になり、どのモジュールにもリストする必要はありません。</target>
        </trans-unit>
        <trans-unit id="3e132cbf9a16b3ce4ffd17b94f8f1923bc33d193" translate="yes" xml:space="preserve">
          <source>Define application-wide providers by specifying &lt;code&gt;providedIn: 'root'&lt;/code&gt; on its &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; decorator (in the case of services) or at &lt;code&gt;&lt;a href=&quot;../api/core/injectiontoken&quot;&gt;InjectionToken&lt;/a&gt;&lt;/code&gt; construction (in the case where tokens are provided). Providers that are created this way automatically are made available to the entire application and don't need to be listed in any module.</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; &lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;（）デコレータ（サービスの場合）または &lt;code&gt;&lt;a href=&quot;../api/core/injectiontoken&quot;&gt;InjectionToken&lt;/a&gt;&lt;/code&gt; 構築（トークンが提供されている場合）で &lt;code&gt;providedIn: 'root'&lt;/code&gt; を指定して、アプリケーション全体のプロバイダーを定義します。この方法で自動的に作成されたプロバイダーは、アプリケーション全体で使用できるようになり、モジュールにリストする必要はありません。</target>
        </trans-unit>
        <trans-unit id="a769ff17906c0ad5026f3fec98e35d4ded08b427" translate="yes" xml:space="preserve">
          <source>Define control classes</source>
          <target state="translated">制御クラスの定義</target>
        </trans-unit>
        <trans-unit id="1b6769f88d713bd91aa055cef61c2d4ca6810df8" translate="yes" xml:space="preserve">
          <source>Define dependencies with providers</source>
          <target state="translated">プロバイダとの依存関係を定義する</target>
        </trans-unit>
        <trans-unit id="96430e03943be4690c001b60629d50daf48008ef" translate="yes" xml:space="preserve">
          <source>Define dependency type</source>
          <target state="translated">依存関係タイプの定義</target>
        </trans-unit>
        <trans-unit id="69d29cfd03c800a4791e03f792d609dc7d097c45" translate="yes" xml:space="preserve">
          <source>Define how to navigate to a component.</source>
          <target state="translated">コンポーネントへの移動方法を定義します。</target>
        </trans-unit>
        <trans-unit id="24e43dfe7cf6b635065c5f30b4ce5f044d07fb7f" translate="yes" xml:space="preserve">
          <source>Define locales in the build configuration</source>
          <target state="translated">ビルド設定でロケールを定義する</target>
        </trans-unit>
        <trans-unit id="e49b053cb66815bfa59357251dbbd29728069e8f" translate="yes" xml:space="preserve">
          <source>Define methods to add items to the cart, return cart items, and clear the cart items:</source>
          <target state="translated">カートにアイテムを追加したり、カートのアイテムを返したり、カートのアイテムをクリアしたりするメソッドを定義します。</target>
        </trans-unit>
        <trans-unit id="f7e6eb736443a3b5ce164c025b8709ebaab9092f" translate="yes" xml:space="preserve">
          <source>Define routes.</source>
          <target state="translated">ルートを定義します。</target>
        </trans-unit>
        <trans-unit id="789974b04cf864fa3f4628b731773113b8537356" translate="yes" xml:space="preserve">
          <source>Define the &lt;code&gt;addToCart()&lt;/code&gt; method, which adds the current product to the cart.</source>
          <target state="translated">現在の商品をカートに追加する &lt;code&gt;addToCart()&lt;/code&gt; メソッドを定義します。</target>
        </trans-unit>
        <trans-unit id="136be921cd31463064de390e0ddce16e69780251" translate="yes" xml:space="preserve">
          <source>Define the &lt;code&gt;get()&lt;/code&gt; method</source>
          <target state="translated">&lt;code&gt;get()&lt;/code&gt; メソッドを定義します</target>
        </trans-unit>
        <trans-unit id="4f877d2d9160c3bb01f894cd4762139f76c9d495" translate="yes" xml:space="preserve">
          <source>Define the &lt;code&gt;heroesUrl&lt;/code&gt; of the form &lt;code&gt;:base/:collectionName&lt;/code&gt; with the address of the heroes resource on the server. Here &lt;code&gt;base&lt;/code&gt; is the resource to which requests are made, and &lt;code&gt;collectionName&lt;/code&gt; is the heroes data object in the &lt;code&gt;in-memory-data-service.ts&lt;/code&gt;.</source>
          <target state="translated">サーバー上のheroesリソースのアドレスを使用して、 &lt;code&gt;:base/:collectionName&lt;/code&gt; という形式の &lt;code&gt;heroesUrl&lt;/code&gt; を定義します。ここで、 &lt;code&gt;base&lt;/code&gt; はリクエストが行われるリソースであり、 &lt;code&gt;collectionName&lt;/code&gt; は &lt;code&gt;in-memory-data-service.ts&lt;/code&gt; のヒーローデータオブジェクトです。</target>
        </trans-unit>
        <trans-unit id="c70d53eb9728a1aae2934e79d7baa2495c32ea14" translate="yes" xml:space="preserve">
          <source>Define the &lt;code&gt;items&lt;/code&gt; property to store the products in the cart.</source>
          <target state="translated">カートに商品を保管するための &lt;code&gt;items&lt;/code&gt; プロパティを定義します。</target>
        </trans-unit>
        <trans-unit id="374a9dbdc71e4ccd5f53cbca049d36af0a0bf65c" translate="yes" xml:space="preserve">
          <source>Define the &lt;code&gt;product&lt;/code&gt; property and inject the &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; into the constructor by adding it as an argument within the constructor's parentheses.</source>
          <target state="translated">&lt;code&gt;product&lt;/code&gt; プロパティを定義し、コンストラクターの括弧内に引数として追加することにより、 &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; をコンストラクターに挿入します。</target>
        </trans-unit>
        <trans-unit id="a0c9b4fb153a9b2aa2a0ffe27f9efbfc6352b817" translate="yes" xml:space="preserve">
          <source>Define the &lt;code&gt;product&lt;/code&gt; property and inject the &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; into the constructor.</source>
          <target state="translated">&lt;code&gt;product&lt;/code&gt; プロパティを定義し、 &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; をコンストラクターに注入します。</target>
        </trans-unit>
        <trans-unit id="94224f8c31cafe12001097a9847c68f0ab7b5fcd" translate="yes" xml:space="preserve">
          <source>Define the HTML template that the component uses to display information. In most cases, this template is a separate HTML file.</source>
          <target state="translated">コンポーネントが情報を表示するために使用する HTML テンプレートを定義します。ほとんどの場合、このテンプレートは別のHTMLファイルです。</target>
        </trans-unit>
        <trans-unit id="84c2fad3ae9b0db6143be8233d1a024b9e41b52a" translate="yes" xml:space="preserve">
          <source>Define the animation.</source>
          <target state="translated">アニメーションを定義します。</target>
        </trans-unit>
        <trans-unit id="bfed9ed5eab89d68e83fa18efeef2704682d344b" translate="yes" xml:space="preserve">
          <source>Define the checkout form model</source>
          <target state="translated">チェックアウトフォームのモデルを定義する</target>
        </trans-unit>
        <trans-unit id="0b4f1b51993e2e4768aecff95bb66bbdff6b1431" translate="yes" xml:space="preserve">
          <source>Define the crossorigin attribute setting of elements that provide CORS support.</source>
          <target state="translated">CORS サポートを提供する要素の crossorigin 属性設定を定義します。</target>
        </trans-unit>
        <trans-unit id="5f1b50fbd57b7d09235c9899095f8ed6a396e6be" translate="yes" xml:space="preserve">
          <source>Define the get() method</source>
          <target state="translated">get()メソッドの定義</target>
        </trans-unit>
        <trans-unit id="a32aad78bf0eb55c21cb33bbcd2d97c7fd1aefdd" translate="yes" xml:space="preserve">
          <source>Define the output filename cache-busting hashing mode.</source>
          <target state="translated">出力ファイル名のキャッシュバッシングハッシュモードを定義します。</target>
        </trans-unit>
        <trans-unit id="282b2fcaad5a7ff17131438da0fb0640f8f56733" translate="yes" xml:space="preserve">
          <source>Define the rule</source>
          <target state="translated">ルールを定義する</target>
        </trans-unit>
        <trans-unit id="ba464e5934066d9c3251321190d03a7331d806dd" translate="yes" xml:space="preserve">
          <source>Define the shipping page</source>
          <target state="translated">出荷ページの定義</target>
        </trans-unit>
        <trans-unit id="2c952c9026c09bb42bb8b153e8d1c8f9fcd5689f" translate="yes" xml:space="preserve">
          <source>Define the shipping view</source>
          <target state="translated">出荷ビューの定義</target>
        </trans-unit>
        <trans-unit id="a58c78e105f9508e937f25cab3eae72383adc767" translate="yes" xml:space="preserve">
          <source>Define the view for the new product alert component.</source>
          <target state="translated">新製品アラートコンポーネントのビューを定義します。</target>
        </trans-unit>
        <trans-unit id="d5fa219b4ed8671f5dcb627e7ef48de3c65fa697" translate="yes" xml:space="preserve">
          <source>Define unique custom IDs</source>
          <target state="translated">固有のカスタム ID を定義する</target>
        </trans-unit>
        <trans-unit id="7b13873dc1274f371484bc50805a0dac3df464cf" translate="yes" xml:space="preserve">
          <source>Define unique custom ids</source>
          <target state="translated">独自のカスタム ID を定義する</target>
        </trans-unit>
        <trans-unit id="8395204fc3456bdd76cd3188ff9156211b00ced8" translate="yes" xml:space="preserve">
          <source>Define what the router should do if it receives a navigation request to the current URL. Default is &lt;code&gt;ignore&lt;/code&gt;, which causes the router ignores the navigation. This can disable features such as a &quot;refresh&quot; button. Use this option to configure the behavior when navigating to the current URL. Default is 'ignore'.</source>
          <target state="translated">現在のURLへのナビゲーション要求を受信した場合にルーターが行うべきことを定義します。デフォルトは &lt;code&gt;ignore&lt;/code&gt; で、ルーターがナビゲーションを無視します。これにより、「更新」ボタンなどの機能を無効にできます。このオプションを使用して、現在のURLに移動するときの動作を構成します。デフォルトは「無視」です。</target>
        </trans-unit>
        <trans-unit id="3e1f727c0465a7ae07d745de5260956ec8183f12" translate="yes" xml:space="preserve">
          <source>Define your routes</source>
          <target state="translated">ルートを定義する</target>
        </trans-unit>
        <trans-unit id="0de62b3c8c1ed10875e2ed7474ecc64f36ed53aa" translate="yes" xml:space="preserve">
          <source>Define your routes in your &lt;code&gt;&lt;a href=&quot;../api/router/routes&quot;&gt;Routes&lt;/a&gt;&lt;/code&gt; array.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/router/routes&quot;&gt;Routes&lt;/a&gt;&lt;/code&gt; 配列でルートを定義します。</target>
        </trans-unit>
        <trans-unit id="6126fbb1cff6a19c4cc8613ea100f32e878c1a6a" translate="yes" xml:space="preserve">
          <source>Define your size boundaries in the CLI configuration file, &lt;code&gt;angular.json&lt;/code&gt;, in a &lt;code&gt;budgets&lt;/code&gt; section for each &lt;a href=&quot;build#app-environments&quot;&gt;configured environment&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;build#app-environments&quot;&gt;構成&lt;/a&gt;した各環境の &lt;code&gt;budgets&lt;/code&gt; セクションのCLI構成ファイル &lt;code&gt;angular.json&lt;/code&gt; でサイズ境界を定義します。</target>
        </trans-unit>
        <trans-unit id="76be9e6329351c7763ca316248531b72685df7cf" translate="yes" xml:space="preserve">
          <source>Defines &lt;code&gt;AppModule&lt;/code&gt;, the &lt;a href=&quot;bootstrapping&quot;&gt;root module&lt;/a&gt; that tells Angular how to assemble the application. When initially created, it declares only the &lt;code&gt;AppComponent&lt;/code&gt;. Over time, you add more components to declare.</source>
          <target state="translated">定義 &lt;code&gt;AppModule&lt;/code&gt; 、&lt;a href=&quot;bootstrapping&quot;&gt;ルートモジュール&lt;/a&gt;アプリケーションを組み立てるためにどのように角度を伝えます。最初に作成されたときは、 &lt;code&gt;AppComponent&lt;/code&gt; のみを宣言します。徐々に、宣言するコンポーネントを追加します。</target>
        </trans-unit>
        <trans-unit id="55682d31e3a07ef230dec4ddcde2f669f7002896" translate="yes" xml:space="preserve">
          <source>Defines CSS styles to be stored on a renderer instance.</source>
          <target state="translated">レンダラー インスタンスに保存する CSS スタイルを定義します。</target>
        </trans-unit>
        <trans-unit id="8a33a6051ae78e0871fbf63c733d95d7ea910681" translate="yes" xml:space="preserve">
          <source>Defines a list of animation steps to be run in parallel.</source>
          <target state="translated">並行して実行するアニメーションステップのリストを定義します。</target>
        </trans-unit>
        <trans-unit id="78c95f0e8ccd965b40bcb8fd23f9f9092e2a9686" translate="yes" xml:space="preserve">
          <source>Defines a list of animation steps to be run sequentially, one by one.</source>
          <target state="translated">アニメーションのステップのリストを定義します。</target>
        </trans-unit>
        <trans-unit id="0db16c22a542cb88e353373266c96467ed0d4252" translate="yes" xml:space="preserve">
          <source>Defines a matcher for requests based on URL, method, or both.</source>
          <target state="translated">URL、メソッド、またはその両方に基づいたリクエストに対するマッチアを定義します。</target>
        </trans-unit>
        <trans-unit id="c2ce9d76ca8e2ee509dcc072576dcae0c851ee71" translate="yes" xml:space="preserve">
          <source>Defines a module that contains components, directives, pipes, and providers.</source>
          <target state="translated">コンポーネント、ディレクティブ、パイプ、およびプロバイダを含むモジュールを定義します。</target>
        </trans-unit>
        <trans-unit id="bbcc9025aacb1ee76b9dc1c0b716a4a9597fe43b" translate="yes" xml:space="preserve">
          <source>Defines a schema that allows an NgModule to contain the following:</source>
          <target state="translated">NgModule が以下を含むことを可能にするスキーマを定義します。</target>
        </trans-unit>
        <trans-unit id="5e53cda92b070b9dfacf9234345296fdb80a7883" translate="yes" xml:space="preserve">
          <source>Defines a schema that allows any property on any element.</source>
          <target state="translated">任意の要素に任意のプロパティを許可するスキーマを定義します。</target>
        </trans-unit>
        <trans-unit id="007992afce80ecb791885d624444069de38590c5" translate="yes" xml:space="preserve">
          <source>Defines a scroll position manager. Implemented by &lt;code&gt;BrowserViewportScroller&lt;/code&gt;.</source>
          <target state="translated">スクロール位置マネージャーを定義します。 &lt;code&gt;BrowserViewportScroller&lt;/code&gt; によって実装されます。</target>
        </trans-unit>
        <trans-unit id="7b88e7c5fc78efd9fa6ef4124a65b304796dbf1d" translate="yes" xml:space="preserve">
          <source>Defines a set of animation styles, associating each style with an optional &lt;code&gt;&lt;a href=&quot;animations/animationstylemetadata#offset&quot;&gt;offset&lt;/a&gt;&lt;/code&gt; value.</source>
          <target state="translated">アニメーションスタイルのセットを定義し、各スタイルをオプションの &lt;code&gt;&lt;a href=&quot;animations/animationstylemetadata#offset&quot;&gt;offset&lt;/a&gt;&lt;/code&gt; 値に関連付けます。</target>
        </trans-unit>
        <trans-unit id="09a3e8c545236f497d55055e0050b3a1d47f83e0" translate="yes" xml:space="preserve">
          <source>Defines a set of animation styles, associating each style with an optional &lt;code&gt;&lt;a href=&quot;animationstylemetadata#offset&quot;&gt;offset&lt;/a&gt;&lt;/code&gt; value.</source>
          <target state="translated">アニメーションスタイルのセットを定義し、各スタイルをオプションの &lt;code&gt;&lt;a href=&quot;animationstylemetadata#offset&quot;&gt;offset&lt;/a&gt;&lt;/code&gt; 値に関連付けます。</target>
        </trans-unit>
        <trans-unit id="3cc741218672f842b7e16fac4a250981c474d954" translate="yes" xml:space="preserve">
          <source>Defines a set of animation styles, associating each style with an optional &lt;code&gt;offset&lt;/code&gt; value.</source>
          <target state="translated">アニメーションスタイルのセットを定義し、各スタイルをオプションの &lt;code&gt;offset&lt;/code&gt; 値に関連付けます。</target>
        </trans-unit>
        <trans-unit id="b279dfffcca1a99dcdfe04a5a70d6b73e5880db0" translate="yes" xml:space="preserve">
          <source>Defines a unit test for the root &lt;code&gt;AppComponent&lt;/code&gt;.</source>
          <target state="translated">ルート &lt;code&gt;AppComponent&lt;/code&gt; の単体テストを定義します。</target>
        </trans-unit>
        <trans-unit id="e24e54b93247b75499ac7d517abe7411430368a2" translate="yes" xml:space="preserve">
          <source>Defines an animation step that combines styling information with timing information.</source>
          <target state="translated">スタイリング情報とタイミング情報を組み合わせたアニメーションステップを定義します。</target>
        </trans-unit>
        <trans-unit id="c68cc7c5707eabd8219f8b7a1ab574caf776b9b1" translate="yes" xml:space="preserve">
          <source>Defines an array of Routes, each mapping a URL path to a component.</source>
          <target state="translated">ルートの配列を定義します。それぞれが URL パスをコンポーネントにマッピングします。</target>
        </trans-unit>
        <trans-unit id="a01435af040e2619f2e81406c09be7423669e558" translate="yes" xml:space="preserve">
          <source>Defines an interface that acts as a bridge between the Angular forms API and a native element in the DOM.</source>
          <target state="translated">Angular forms APIとDOM内のネイティブ要素との間のブリッジとして機能するインターフェースを定義します。</target>
        </trans-unit>
        <trans-unit id="ccc6a0a5239bfcb1e5069449a5b227d5b6d9c709" translate="yes" xml:space="preserve">
          <source>Defines arbitrary developer-defined data to be stored on a renderer instance. This is useful for renderers that delegate to other renderers.</source>
          <target state="translated">レンダラー インスタンスに格納する任意の開発者定義データを定義します。これは、他のレンダラーに委任するレンダラーに便利です。</target>
        </trans-unit>
        <trans-unit id="21ae664afe89dbb8f43c4e8858a599ffb280b1ca" translate="yes" xml:space="preserve">
          <source>Defines how the router merges parameters, data, and resolved data from parent to child routes. By default ('emptyOnly'), inherits parent parameters only for path-less or component-less routes. Set to 'always' to enable unconditional inheritance of parent parameters.</source>
          <target state="translated">ルータが親ルートから子ルートへのパラメータ、データ、解決済みデータをどのようにマージするかを定義します。デフォルトでは ('emptyOnly')、パスレスまたはコンポーネントレスのルートに対してのみ親パラメータを継承します。always' に設定すると、親パラメータの無条件継承が有効になります。</target>
        </trans-unit>
        <trans-unit id="9dae0aa20ef644eeabd8e272a8434eb94f2bbc5b" translate="yes" xml:space="preserve">
          <source>Defines how the router should navigate to a component based on a URL pattern. Most routes consist of a path and a component type.</source>
          <target state="translated">ルータが URL パターンに基づいてコンポーネントにナビゲートする方法を定義します。ほとんどのルートは、パスとコンポーネントタイプで構成されています。</target>
        </trans-unit>
        <trans-unit id="4464084bf36b2c3f096f20ffccc12a8bf0270c6d" translate="yes" xml:space="preserve">
          <source>Defines infrastructure for dependency injection (DI), internationalization (i18n), and various testing and debugging facilities.</source>
          <target state="translated">依存性注入(DI)、国際化(i18n)、各種テスト・デバッグ機能のためのインフラストラクチャを定義します。</target>
        </trans-unit>
        <trans-unit id="8bfbd8d863007bdc3c17344259758b2b8851eca7" translate="yes" xml:space="preserve">
          <source>Defines one &lt;em&gt;transition&lt;/em&gt; when switching back and forth from the &lt;code&gt;heroes&lt;/code&gt; and &lt;code&gt;hero&lt;/code&gt; routes to ease the component in from the left of the screen as it enters the application view (&lt;code&gt;:enter&lt;/code&gt;), the other to animate the component to the right as it leaves the application view (&lt;code&gt;:leave&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;heroes&lt;/code&gt; と &lt;code&gt;hero&lt;/code&gt; ルートを切り替えるときに1つの&lt;em&gt;遷移&lt;/em&gt;を定義して、コンポーネントがアプリケーションビューに入るときに画面の左側からコンポーネントを容易にします（ &lt;code&gt;:enter&lt;/code&gt; ）。もう1つの&lt;em&gt;遷移&lt;/em&gt;は、コンポーネントがアプリケーションを離れるときにコンポーネントを右にアニメーション化します。ビュー（ &lt;code&gt;:leave&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="8d7a191110568ab5d83c750a60f697e422a9245d" translate="yes" xml:space="preserve">
          <source>Defines one or more CSS styles to use in animations. Controls the visual appearance of HTML elements during animations. Uses object syntax.</source>
          <target state="translated">アニメーションで使用する 1 つ以上の CSS スタイルを定義します。アニメーション中の HTML 要素の視覚的な外観を制御します。オブジェクト構文を使用します。</target>
        </trans-unit>
        <trans-unit id="8e238cabbb30a8c4c232359ef7a25ab5c5a772bf" translate="yes" xml:space="preserve">
          <source>Defines one transition when switching back and forth from the &lt;code&gt;heroes&lt;/code&gt; and &lt;code&gt;hero&lt;/code&gt; routes to ease the component in from the left of the screen as it enters the application view (&lt;code&gt;:enter&lt;/code&gt;), the other to animate the component to the right as it leaves the application view (&lt;code&gt;:leave&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;heroes&lt;/code&gt; と &lt;code&gt;hero&lt;/code&gt; ルートを切り替えたときの1つの遷移を定義して、コンポーネントがアプリケーションビューに入るときに画面の左側からコンポーネントを緩和し（ &lt;code&gt;:enter&lt;/code&gt; ）、もう1つはコンポーネントがアプリケーションを離れるときに右側にアニメーション化するビュー（ &lt;code&gt;:leave&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="47ba811ee66fe36d02c8356b68d28d19b3ee3fb4" translate="yes" xml:space="preserve">
          <source>Defines routes.</source>
          <target state="translated">ルートを定義します。</target>
        </trans-unit>
        <trans-unit id="20fb4df445edc22891b0b3ae3c0ac48dd6564af3" translate="yes" xml:space="preserve">
          <source>Defines template and style encapsulation options available for Component's &lt;a href=&quot;component&quot;&gt;&lt;code&gt;Component&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Componentの&lt;a href=&quot;component&quot;&gt; &lt;code&gt;Component&lt;/code&gt; で&lt;/a&gt;使用可能なテンプレートとスタイルのカプセル化オプションを定義します。</target>
        </trans-unit>
        <trans-unit id="3c565d04a28681d37c04fd197dc43af222f944d1" translate="yes" xml:space="preserve">
          <source>Defines template and style encapsulation options available for Component's &lt;a href=&quot;core/component&quot;&gt;&lt;code&gt;Component&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Componentの&lt;a href=&quot;core/component&quot;&gt; &lt;code&gt;Component&lt;/code&gt; で&lt;/a&gt;使用可能なテンプレートとスタイルのカプセル化オプションを定義します。</target>
        </trans-unit>
        <trans-unit id="bbfc1ff79e2f3d0bdd95b1a8d5f1085d34f7a56a" translate="yes" xml:space="preserve">
          <source>Defines the &lt;code&gt;&lt;a href=&quot;router/route&quot;&gt;Route&lt;/a&gt;&lt;/code&gt; object that maps a URL path to a component, and the &lt;code&gt;&lt;a href=&quot;router/routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt; directive that you use to place a routed view in a template, as well as a complete API for configuring, querying, and controlling the router state.</source>
          <target state="translated">URLパスをコンポーネントにマップする &lt;code&gt;&lt;a href=&quot;router/route&quot;&gt;Route&lt;/a&gt;&lt;/code&gt; オブジェクト、およびルーティングされたビューをテンプレートに配置するために使用する &lt;code&gt;&lt;a href=&quot;router/routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt; ディレクティブ、およびルーターの状態を構成、クエリ、および制御するための完全なAPIを定義します。</target>
        </trans-unit>
        <trans-unit id="534e303ed39dff58ed66f8ac03005dc125d30753" translate="yes" xml:space="preserve">
          <source>Defines the HTML template associated with the root &lt;code&gt;AppComponent&lt;/code&gt;.</source>
          <target state="translated">ルート &lt;code&gt;AppComponent&lt;/code&gt; に関連付けられたHTMLテンプレートを定義します。</target>
        </trans-unit>
        <trans-unit id="9ad7da76a97f578fd82c2902d762141ba818d760" translate="yes" xml:space="preserve">
          <source>Defines the ServiceWorker registration strategy, which determines when it will be registered with the browser.</source>
          <target state="translated">ServiceWorkerの登録戦略を定義し、ブラウザにいつ登録されるかを決定します。</target>
        </trans-unit>
        <trans-unit id="c0766546ca9b3da0b517bead9277a27997c0cb96" translate="yes" xml:space="preserve">
          <source>Defines the animation sequence between two named states. Uses array syntax.</source>
          <target state="translated">2つの指定された状態間のアニメーションシーケンスを定義します。配列構文を使用します。</target>
        </trans-unit>
        <trans-unit id="97e2e28dd3ded239399b0d95c3ed8d572fb3455e" translate="yes" xml:space="preserve">
          <source>Defines the base CSS stylesheet for the root &lt;code&gt;AppComponent&lt;/code&gt;.</source>
          <target state="translated">ルート &lt;code&gt;AppComponent&lt;/code&gt; の基本CSSスタイルシートを定義します。</target>
        </trans-unit>
        <trans-unit id="01c55cf117981d6ba3a6e5a3d0bedf7d4e343f64" translate="yes" xml:space="preserve">
          <source>Defines the build environment.</source>
          <target state="translated">ビルド環境を定義します。</target>
        </trans-unit>
        <trans-unit id="1a958cd561ced232dff4bac1558637eff15ac576" translate="yes" xml:space="preserve">
          <source>Defines the class infrastructure for components, view hierarchies, change detection, rendering, and event handling.</source>
          <target state="translated">コンポーネント、ビュー階層、変更検出、レンダリング、イベント処理のためのクラスインフラストラクチャを定義します。</target>
        </trans-unit>
        <trans-unit id="2f86f744259188a92762d99407d2a67061407cbd" translate="yes" xml:space="preserve">
          <source>Defines the decorators that supply metadata and context for Angular constructs.</source>
          <target state="translated">Angular コンストラクトのメタデータとコンテキストを提供するデコレータを定義します。</target>
        </trans-unit>
        <trans-unit id="ba0f716db5d7d13c6a1369efdafac26719ccd1ba" translate="yes" xml:space="preserve">
          <source>Defines the logic for the app's root component, named &lt;code&gt;AppComponent&lt;/code&gt;. The view associated with this root component becomes the root of the &lt;a href=&quot;glossary#view-hierarchy&quot;&gt;view hierarchy&lt;/a&gt; as you add components and services to your application.</source>
          <target state="translated">&lt;code&gt;AppComponent&lt;/code&gt; という名前のアプリのルートコンポーネントのロジックを定義します。アプリケーションにコンポーネントとサービスを追加すると、このルートコンポーネントに関連付けられた&lt;a href=&quot;glossary#view-hierarchy&quot;&gt;ビューがビュー階層の&lt;/a&gt;ルートになります。</target>
        </trans-unit>
        <trans-unit id="de3280c456691c50e69c2238d5588611dcf64274" translate="yes" xml:space="preserve">
          <source>Defines the map of errors returned from failed validation checks.</source>
          <target state="translated">失敗した検証チェックから返されるエラーのマップを定義します。</target>
        </trans-unit>
        <trans-unit id="28c7e2d2a801a8a0fb6945a0de3e43db3a6f14ba" translate="yes" xml:space="preserve">
          <source>Defines the name that can be used in the template to assign this directive to a variable.</source>
          <target state="translated">このディレクティブを変数に代入するためにテンプレートで使用できる名前を定義します。</target>
        </trans-unit>
        <trans-unit id="b6b4c7a96425d13d450553ded2847dcd126f0ea3" translate="yes" xml:space="preserve">
          <source>Defines the root module, named &lt;code&gt;AppModule&lt;/code&gt;, that tells Angular how to assemble the application. Initially declares only the &lt;code&gt;AppComponent&lt;/code&gt;. As you add more components to the app, they must be declared here.</source>
          <target state="translated">アプリケーションのアセンブル方法をAngularに指示する &lt;code&gt;AppModule&lt;/code&gt; という名前のルートモジュールを定義します。最初は &lt;code&gt;AppComponent&lt;/code&gt; のみを宣言します。アプリにコンポーネントを追加するときは、ここでそれらを宣言する必要があります。</target>
        </trans-unit>
        <trans-unit id="560b6286688d2764d7435cbfd0ce5f6ab9cefa86" translate="yes" xml:space="preserve">
          <source>Defines the same &lt;code&gt;AppComponent&lt;/code&gt; as the one in the QuickStart playground. It is the &lt;strong&gt;root&lt;/strong&gt; component of what will become a tree of nested components as the application evolves.</source>
          <target state="translated">QuickStartプレイグラウンドの &lt;code&gt;AppComponent&lt;/code&gt; と同じAppComponentを定義します。これは、アプリケーションが進化するにつれてネストされたコンポーネントのツリーになる&lt;strong&gt;ルート&lt;/strong&gt;コンポーネントです。</target>
        </trans-unit>
        <trans-unit id="b65d0b9369faf5bd23746f4543dbee8997bf6546" translate="yes" xml:space="preserve">
          <source>Defines the set of injectable objects that are visible to its view DOM children. See &lt;a href=&quot;component#injecting-a-class-with-a-view-provider&quot;&gt;example&lt;/a&gt;.</source>
          <target state="translated">ビューのDOMの子に見える注入可能なオブジェクトのセットを定義します。&lt;a href=&quot;component#injecting-a-class-with-a-view-provider&quot;&gt;例を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="c57680796f5c05c65ea70fadda123a533fb1af6a" translate="yes" xml:space="preserve">
          <source>Defines two transitions. A single trigger can define multiple states and transitions.</source>
          <target state="translated">2 つの遷移を定義します。1つのトリガで複数の状態と遷移を定義することができます。</target>
        </trans-unit>
        <trans-unit id="7e5146bd0be6e84fa59cd48a926fafef0d1cbcea" translate="yes" xml:space="preserve">
          <source>Defines when guards and resolvers will be run. One of</source>
          <target state="translated">ガードとリゾルバをいつ実行するかを定義します。のうちの1つ</target>
        </trans-unit>
        <trans-unit id="fb32691368f716dd067e04f7a8ee40b1b9ebb143" translate="yes" xml:space="preserve">
          <source>Defines when the router updates the browser URL. By default ('deferred'), update after successful navigation. Set to 'eager' if prefer to update the URL at the beginning of navigation. Updating the URL early allows you to handle a failure of navigation by showing an error message with the URL that failed.</source>
          <target state="translated">ルーターがブラウザの URL を更新するタイミングを定義します。デフォルトでは (' deferred')、ナビゲーションが成功した後に更新されます。ナビゲーションの最初にURLを更新したい場合は、'eager'に設定します。早期に URL を更新することで、ナビゲーションの失敗を、失敗した URL と一緒にエラーメッセージを表示することで処理することができます。</target>
        </trans-unit>
        <trans-unit id="00107de0ffef95a1fc10db981b0ae2fcaebf1d84" translate="yes" xml:space="preserve">
          <source>Defining a basic route</source>
          <target state="translated">基本的なルートの定義</target>
        </trans-unit>
        <trans-unit id="b89a94b73a3403c93476a9654b580d95523e24ea" translate="yes" xml:space="preserve">
          <source>Defining a component's template</source>
          <target state="translated">コンポーネントのテンプレートを定義する</target>
        </trans-unit>
        <trans-unit id="8d2f4eea5d5cde290a7eeb369d6476029c3af8e3" translate="yes" xml:space="preserve">
          <source>Defining animations and attaching them to the HTML template</source>
          <target state="translated">アニメーションの定義とHTMLテンプレートへのアタッチ</target>
        </trans-unit>
        <trans-unit id="88213a4f1c8d610b9bf72169cf47be8062e57fa1" translate="yes" xml:space="preserve">
          <source>Defining custom change detection</source>
          <target state="translated">カスタム変更検出の定義</target>
        </trans-unit>
        <trans-unit id="1e6f180c6f4763e163fd371622ec888088be4240" translate="yes" xml:space="preserve">
          <source>Defining custom validators</source>
          <target state="translated">カスタムバリデータの定義</target>
        </trans-unit>
        <trans-unit id="a94775a237bcaa68bfb274edde5b9619d97f65f9" translate="yes" xml:space="preserve">
          <source>Defining input options with a schema and interfaces</source>
          <target state="translated">スキーマとインターフェースによる入力オプションの定義</target>
        </trans-unit>
        <trans-unit id="5d7bcd8a5d6216d911c4f1a97926e54e4b4a64ed" translate="yes" xml:space="preserve">
          <source>Defining observers</source>
          <target state="translated">オブザーバーの定義</target>
        </trans-unit>
        <trans-unit id="1a54afee3d635be24613550363d5fa3f2b0d1521" translate="yes" xml:space="preserve">
          <source>Defining offsets for keyframes is optional. If you omit them, evenly spaced offsets are automatically assigned. For example, three keyframes without predefined offsets receive offsets of 0, 0.5, and 1. Specifying an offset of 0.8 for the middle transition in the above example might look like this.</source>
          <target state="translated">キーフレームのオフセットの定義はオプションです。省略すると、等間隔のオフセットが自動的に割り当てられます。例えば、事前に定義されたオフセットのない 3 つのキーフレームは、0、0.5、1 のオフセットを受け取ります。 上記の例では、中間のトランジションに 0.8 のオフセットを指定すると、次のようになります。</target>
        </trans-unit>
        <trans-unit id="fb29f7869dd96ef9bc914331c5f7a54bfc6ceafd" translate="yes" xml:space="preserve">
          <source>Defining providers</source>
          <target state="translated">プロバイダの定義</target>
        </trans-unit>
        <trans-unit id="2707786a4667e5d5c0add38788eacf634d0b58ab" translate="yes" xml:space="preserve">
          <source>Defining rules and actions</source>
          <target state="translated">ルールと行動の定義</target>
        </trans-unit>
        <trans-unit id="7734b8e4b1060a1574142e1bfdff622419f5f5f2" translate="yes" xml:space="preserve">
          <source>Defining typings for runtime-global libraries</source>
          <target state="translated">ランタイムグローバルライブラリの型付けの定義</target>
        </trans-unit>
        <trans-unit id="f98e5b51e41064e26b1b00bf43b51b2cd9536aa7" translate="yes" xml:space="preserve">
          <source>Definition of builder input options.</source>
          <target state="translated">ビルダー入力オプションの定義</target>
        </trans-unit>
        <trans-unit id="8614b0b8c6edd0a2c9692acd8211609430e927c5" translate="yes" xml:space="preserve">
          <source>Delayed change detection is intentional and useful. It gives the tester an opportunity to inspect and change the state of the component &lt;em&gt;before Angular initiates data binding and calls &lt;a href=&quot;lifecycle-hooks&quot;&gt;lifecycle hooks&lt;/a&gt;&lt;/em&gt;.</source>
          <target state="translated">遅延変更の検出は意図的で便利です。これにより、&lt;em&gt;Angularがデータバインディングを開始して&lt;a href=&quot;lifecycle-hooks&quot;&gt;ライフサイクルフック&lt;/a&gt;&lt;/em&gt;&lt;em&gt;を呼び出す前&lt;/em&gt;に、コンポーネントの状態を検査して変更する機会がテスターに​​与えられ&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="df4169e217c104ef8e5feee245891162c13a9a79" translate="yes" xml:space="preserve">
          <source>Delegate complex component logic to services</source>
          <target state="translated">複雑なコンポーネントロジックをサービスに委譲</target>
        </trans-unit>
        <trans-unit id="05e33de9a1c31d4b643efd4d36d5ef6fbd4fd627" translate="yes" xml:space="preserve">
          <source>Delete &lt;code&gt;hero details&lt;/code&gt; from &lt;code&gt;HeroesComponent&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;HeroesComponent&lt;/code&gt; から &lt;code&gt;hero details&lt;/code&gt; を削除する</target>
        </trans-unit>
        <trans-unit id="78b0b276fca4c17945fe88cd786ec59e0c15d70c" translate="yes" xml:space="preserve">
          <source>Delete &lt;code&gt;non-essential&lt;/code&gt; files (optional)</source>
          <target state="translated">&lt;code&gt;non-essential&lt;/code&gt; ファイルを削除する（オプション）</target>
        </trans-unit>
        <trans-unit id="1373669c850d20d42e2554e0658530285be5660e" translate="yes" xml:space="preserve">
          <source>Delete a hero</source>
          <target state="translated">ヒーローを削除する</target>
        </trans-unit>
        <trans-unit id="0994cccfea58fe0bb5c9ac2ef33680eb47a61d93" translate="yes" xml:space="preserve">
          <source>Delete the &lt;code&gt;&amp;lt;app-hero-detail&amp;gt;&lt;/code&gt; component at the bottom of the template.</source>
          <target state="translated">テンプレートの下部にある &lt;code&gt;&amp;lt;app-hero-detail&amp;gt;&lt;/code&gt; コンポーネントを削除します。</target>
        </trans-unit>
        <trans-unit id="a973efbbe0ce0a3e5b79eca622331ec4d925820a" translate="yes" xml:space="preserve">
          <source>Delete the &lt;code&gt;HEROES&lt;/code&gt; import, because you won't need that anymore. Import the &lt;code&gt;HeroService&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;HEROES&lt;/code&gt; インポートを削除します。これはもう必要ありません。代わりに &lt;code&gt;HeroService&lt;/code&gt; をインポートしてください。</target>
        </trans-unit>
        <trans-unit id="e7d8f3866a3c069435d5667635832c642bf9b44c" translate="yes" xml:space="preserve">
          <source>Delete the &lt;code&gt;app.component.html&lt;/code&gt; file. It is not needed for this example.</source>
          <target state="translated">&lt;code&gt;app.component.html&lt;/code&gt; ファイルを削除します。この例では必要ありません。</target>
        </trans-unit>
        <trans-unit id="56b71f3f5e9d86dee5d6cb999aad03a3ca99a7c9" translate="yes" xml:space="preserve">
          <source>Delete the &lt;strong&gt;Name&lt;/strong&gt; value. This violates the &quot;required&quot; rule, so it displays the error message&amp;mdash;and notice that it also disables the &lt;strong&gt;Submit&lt;/strong&gt; button.</source>
          <target state="translated">&lt;strong&gt;Name&lt;/strong&gt;値を削除します。これは「必須」ルールに違反しているため、エラーメッセージが表示され、[&lt;strong&gt;送信&lt;/strong&gt;]ボタンも無効になっていることに注意してください。</target>
        </trans-unit>
        <trans-unit id="6bd232072ed1800a592791a909247f573506a20a" translate="yes" xml:space="preserve">
          <source>Delete the following lines.</source>
          <target state="translated">以下の行を削除します。</target>
        </trans-unit>
        <trans-unit id="ca994d07660cd1da305a6ba89ed4e8687ce0e9d3" translate="yes" xml:space="preserve">
          <source>Delete the output path before building.</source>
          <target state="translated">ビルドする前に出力パスを削除します。</target>
        </trans-unit>
        <trans-unit id="afdb5e7e343531bb63beff413f5040dd3b12f4cb" translate="yes" xml:space="preserve">
          <source>Deletes values for a given header in a clone of the original instance.</source>
          <target state="translated">元のインスタンスのクローン内の指定されたヘッダーの値を削除します。</target>
        </trans-unit>
        <trans-unit id="d41b75d84a6d9a041bf104564c1d9c5136764c75" translate="yes" xml:space="preserve">
          <source>Deleting an item updates the model, and depending on your code, triggers other changes including queries and saving to a remote server. These changes propagate through the system and ultimately display in this and other views.</source>
          <target state="translated">アイテムを削除するとモデルが更新され、コードによっては、クエリやリモートサーバーへの保存などの他の変更がトリガーされます。これらの変更はシステムを介して伝搬し、最終的にこのビューや他のビューに表示されます。</target>
        </trans-unit>
        <trans-unit id="6fead872c57884d832bc66b6ac23b585acb9b62b" translate="yes" xml:space="preserve">
          <source>Deliver an arbitrary &lt;code&gt;&lt;a href=&quot;../httpevent&quot;&gt;HttpEvent&lt;/a&gt;&lt;/code&gt; (such as a progress event) on the response stream for this request.</source>
          <target state="translated">この要求の応答ストリームで任意の &lt;code&gt;&lt;a href=&quot;../httpevent&quot;&gt;HttpEvent&lt;/a&gt;&lt;/code&gt; （進行状況イベントなど）を配信します。</target>
        </trans-unit>
        <trans-unit id="3cc6ad048409305a7b9ba7c0d88a71587f05ad1e" translate="yes" xml:space="preserve">
          <source>Demonstrates &lt;code&gt;&amp;lt;ngcontainer&amp;gt;&lt;/code&gt;. For more information, see the &lt;a href=&quot;structural-directives#ngcontainer&quot;&gt;ngtemplate section&lt;/a&gt; of &lt;a href=&quot;structural-directives&quot;&gt;Structural directives&lt;/a&gt; .</source>
          <target state="translated">デモ &lt;code&gt;&amp;lt;ngcontainer&amp;gt;&lt;/code&gt; 。詳細については、&lt;a href=&quot;structural-directives&quot;&gt;Structuralディレクティブの&lt;/a&gt;&lt;a href=&quot;structural-directives#ngcontainer&quot;&gt;ngtemplateセクション&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="9fa778f2715f9e53a7a46f2e3fefcb66eabe0832" translate="yes" xml:space="preserve">
          <source>Demonstrates &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; in components and directives. For more information, see &lt;a href=&quot;inputs-outputs&quot;&gt;&lt;code&gt;@Input()&lt;/code&gt; and &lt;code&gt;@Output()&lt;/code&gt; properties&lt;/a&gt;.</source>
          <target state="translated">デモ &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; と &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; コンポーネントとディレクティブで。詳細については、&lt;a href=&quot;inputs-outputs&quot;&gt; &lt;code&gt;@Input()&lt;/code&gt; および &lt;code&gt;@Output()&lt;/code&gt; プロパティを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="a5b631f044bd7f6323c0c6a76b8f5ea77a0afed8" translate="yes" xml:space="preserve">
          <source>Demonstrates Angular attribute directives. For more information, see &lt;a href=&quot;attribute-directives&quot;&gt;Attribute directives&lt;/a&gt;.</source>
          <target state="translated">Angular属性ディレクティブを示します。詳細については、&lt;a href=&quot;attribute-directives&quot;&gt;属性ディレクティブを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="6c9fe6a397dd05861973a5f35a9401e50ba022f1" translate="yes" xml:space="preserve">
          <source>Demonstrates Angular attribute, class, and style bindings. For more information, see &lt;a href=&quot;attribute-binding&quot;&gt;Attribute, class, and style bindings&lt;/a&gt;.</source>
          <target state="translated">Angular属性、クラス、およびスタイルのバインディングを示します。詳細については、&lt;a href=&quot;attribute-binding&quot;&gt;属性、クラス、およびスタイルのバインディングを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="1ba555b58c87c8d115d6c5e9f6a14db40f27d9bb" translate="yes" xml:space="preserve">
          <source>Demonstrates Angular built-in directives. For more information, see &lt;a href=&quot;built-in-directives&quot;&gt;Built-in directives&lt;/a&gt;.</source>
          <target state="translated">Angularの組み込みディレクティブを示します。詳細については、&lt;a href=&quot;built-in-directives&quot;&gt;組み込みディレクティブを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="9b52ceac8eb716b06023f0481d7cb935b844c5c8" translate="yes" xml:space="preserve">
          <source>Demonstrates Angular built-in template functions. For more information, see the &lt;a href=&quot;template-expression-operators#the-any-type-cast-function&quot;&gt;&lt;code&gt;$any()&lt;/code&gt; type cast function section&lt;/a&gt; of &lt;a href=&quot;template-expression-operators&quot;&gt;Template expression operators&lt;/a&gt;.</source>
          <target state="translated">Angularの組み込みテンプレート関数を示します。詳細については、&lt;a href=&quot;template-expression-operators&quot;&gt;テンプレート式演算子&lt;/a&gt;の&lt;a href=&quot;template-expression-operators#the-any-type-cast-function&quot;&gt; &lt;code&gt;$any()&lt;/code&gt; 型キャスト関数のセクション&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="b4cfc8f108cd653053dfd23dda3440f8020228c5" translate="yes" xml:space="preserve">
          <source>Demonstrates Angular documentation style guidelines. For more information, see &lt;a href=&quot;docs-style-guide&quot;&gt;Angular documentation style guide&lt;/a&gt;.</source>
          <target state="translated">Angularドキュメントスタイルガイドラインを示します。詳細については、&lt;a href=&quot;docs-style-guide&quot;&gt;Angularドキュメントスタイルガイドを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="451234fc99706f0798ef83eedff123a103ccde91" translate="yes" xml:space="preserve">
          <source>Demonstrates Angular for those with an AngularJS background. For more information, see &lt;a href=&quot;ajs-quick-reference&quot;&gt;AngularJS to Angular concepts: Quick reference&lt;/a&gt;.</source>
          <target state="translated">AngularJSのバックグラウンドを持つユーザー向けにAngularをデモンストレーションします。詳細については、&lt;a href=&quot;ajs-quick-reference&quot;&gt;AngularJSからAngularの概念：クイックリファレンスを参照してください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d8a6297d2b8940258b803b4191bd1e1aac42573d" translate="yes" xml:space="preserve">
          <source>Demonstrates Angular injector trees and resolution modifiers. For more information, see &lt;a href=&quot;hierarchical-dependency-injection&quot;&gt;Hierarchical injectors&lt;/a&gt;.</source>
          <target state="translated">Angularインジェクターツリーと解像度モディファイアを示します。詳細については、&lt;a href=&quot;hierarchical-dependency-injection&quot;&gt;階層型インジェクターを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="359accdf9da3a15ff84b77112c62101abb3b21f8" translate="yes" xml:space="preserve">
          <source>Demonstrates Angular interpolation. For more information, see &lt;a href=&quot;interpolation&quot;&gt;Interpolation and template expressions&lt;/a&gt;.</source>
          <target state="translated">角度補間を示します。詳細については、&lt;a href=&quot;interpolation&quot;&gt;補間とテンプレート式を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="d6a0261ec2943a07e63dc846450228926dce2ac4" translate="yes" xml:space="preserve">
          <source>Demonstrates Angular lifecycle hooks such as &lt;code&gt;ngOnInit()&lt;/code&gt; and &lt;code&gt;ngOnChanges()&lt;/code&gt;. For more information, see &lt;a href=&quot;lifecycle-hooks&quot;&gt;Hooking into the component lifecycle&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;ngOnInit()&lt;/code&gt; や &lt;code&gt;ngOnChanges()&lt;/code&gt; などのAngularライフサイクルフックを示します。詳細について&lt;a href=&quot;lifecycle-hooks&quot;&gt;は、コンポーネントのライフサイクルへの接続を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="60a47303df9f469b4612ae44ba1b4e8ea1b1aa09" translate="yes" xml:space="preserve">
          <source>Demonstrates Angular pipes. For more information, see &lt;a href=&quot;pipes&quot;&gt;Transforming Data Using Pipes&lt;/a&gt;.</source>
          <target state="translated">Angularパイプを示します。詳細については、「&lt;a href=&quot;pipes&quot;&gt;パイプを使用したデータの変換&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="a63d4544ab25f375575ef28615775915f25a1113" translate="yes" xml:space="preserve">
          <source>Demonstrates Angular structural directives. For more information, see &lt;a href=&quot;structural-directives&quot;&gt;Structural directives&lt;/a&gt;.</source>
          <target state="translated">Angular構造ディレクティブを示します。詳細については、&lt;a href=&quot;structural-directives&quot;&gt;構造ディレクティブを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="838c553ec1aaad561bbd711c51088342e255fcc2" translate="yes" xml:space="preserve">
          <source>Demonstrates Angular template-driven forms. For more information, see &lt;a href=&quot;forms&quot;&gt;Building a template-driven form&lt;/a&gt;.</source>
          <target state="translated">Angularテンプレート駆動型フォームを示します。詳細については&lt;a href=&quot;forms&quot;&gt;、テンプレート駆動型フォームの作成を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="b8b6ac5a4058fc84c12511ad28c7208c1a1b1e99" translate="yes" xml:space="preserve">
          <source>Demonstrates Angular's animation features. For more information, see &lt;a href=&quot;animations&quot;&gt;Introduction to Angular animations&lt;/a&gt;.</source>
          <target state="translated">Angularのアニメーション機能を示します。詳細については、&lt;a href=&quot;animations&quot;&gt;Angularアニメーションの概要を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="ab4d2a5454e7c6474ee16fe549e99045a4657ee3" translate="yes" xml:space="preserve">
          <source>Demonstrates Angular's binding syntax. For more information, see &lt;a href=&quot;binding-syntax&quot;&gt;Binding syntax: an overview&lt;/a&gt;.</source>
          <target state="translated">Angularのバインディング構文を示します。詳細については、「&lt;a href=&quot;binding-syntax&quot;&gt;バインディング構文：概要&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="680579ce9f23e2a1a8eda1d5f32efa18c98b866d" translate="yes" xml:space="preserve">
          <source>Demonstrates Angular's fundamental routing techniques. For more information, see &lt;a href=&quot;router-tutorial&quot;&gt;Using Angular routes in a single-page application&lt;/a&gt;.</source>
          <target state="translated">Angularの基本的なルーティングテクニックを示します。詳細について&lt;a href=&quot;router-tutorial&quot;&gt;は、シングルページアプリケーションでのAngularルートの使用を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="b3296f7f80ef25c2111f7dbec2ffe28f283b1d7b" translate="yes" xml:space="preserve">
          <source>Demonstrates Angular's reactive forms. For more information, see &lt;a href=&quot;reactive-forms&quot;&gt;Reactive forms&lt;/a&gt;.</source>
          <target state="translated">Angularのリアクティブフォームを示します。詳細については、&lt;a href=&quot;reactive-forms&quot;&gt;リアクティブフォームを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="eb3dbff7e48a2032dc9fc4bb8b9a7dc69088fc5d" translate="yes" xml:space="preserve">
          <source>Demonstrates Angular's resolution modifiers, such as &lt;code&gt;@&lt;a href=&quot;../api/core/self&quot;&gt;Self&lt;/a&gt;()&lt;/code&gt;. For more information, see the &lt;a href=&quot;hierarchical-dependency-injection#modifying-service-visibility&quot;&gt;Modifying service visibility&lt;/a&gt; section of &lt;a href=&quot;hierarchical-dependency-injection&quot;&gt;Hierarchical injectors&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/self&quot;&gt;Self&lt;/a&gt;()&lt;/code&gt; などのAngularの解像度修飾子を示します。詳細については、&lt;a href=&quot;hierarchical-dependency-injection&quot;&gt;階層型インジェクターの「&lt;/a&gt;&lt;a href=&quot;hierarchical-dependency-injection#modifying-service-visibility&quot;&gt;サービスの可視性&lt;/a&gt;の変更」セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="d4c2e22092c0b0bd92ce1c9110ac23c2e9b486fd" translate="yes" xml:space="preserve">
          <source>Demonstrates Angular's routing features. For more information, see &lt;a href=&quot;router&quot;&gt;Router&lt;/a&gt;.</source>
          <target state="translated">Angularのルーティング機能を示します。詳細については、&lt;a href=&quot;router&quot;&gt;ルーターを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="38dc85f0fd22d05095e3f0bbc4e8b98071488d02" translate="yes" xml:space="preserve">
          <source>Demonstrates Angular's template reference variables. For more information, see &lt;a href=&quot;template-reference-variables&quot;&gt;Template reference variables&lt;/a&gt;.</source>
          <target state="translated">Angularのテンプレート参照変数を示します。詳細については、&lt;a href=&quot;template-reference-variables&quot;&gt;テンプレート参照変数を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="423875924fd8466b1dbe99d7be0f04a2683d9a9a" translate="yes" xml:space="preserve">
          <source>Demonstrates a combination of a component and a directive each with its own hooks.</source>
          <target state="translated">コンポーネントとディレクティブの組み合わせを、それぞれが独自のフックを持っていることを示します。</target>
        </trans-unit>
        <trans-unit id="24ce890301f31f7a624abfbcf56ca9bb728034de" translate="yes" xml:space="preserve">
          <source>Demonstrates a combination of a component and a directive, each with its own hooks.</source>
          <target state="translated">コンポーネントとディレクティブを組み合わせて、それぞれが独自のフックを持つことを示します。</target>
        </trans-unit>
        <trans-unit id="e0af0338408409510dcbdda32ff2646bc73428a6" translate="yes" xml:space="preserve">
          <source>Demonstrates binding to events in Angular. For more information, see &lt;a href=&quot;event-binding&quot;&gt;Event binding&lt;/a&gt;.</source>
          <target state="translated">Angularのイベントへのバインドを示します。詳細については、&lt;a href=&quot;event-binding&quot;&gt;イベントバインディングを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="4d21097bd63ca535a4348bbe04dcb29a430d97ef" translate="yes" xml:space="preserve">
          <source>Demonstrates building Angular applications in a more accessible way. For more information, see &lt;a href=&quot;accessibility&quot;&gt;Accessibility&lt;/a&gt;.</source>
          <target state="translated">よりアクセスしやすい方法でAngularアプリケーションを構築する方法を示します。詳細については、&lt;a href=&quot;accessibility&quot;&gt;アクセシビリティを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="2491aa14a7ce14ba20756bec5febf06ca41d0880" translate="yes" xml:space="preserve">
          <source>Demonstrates creating dynamic forms. For more information, see &lt;a href=&quot;dynamic-form&quot;&gt;Building dynamic forms&lt;/a&gt;.</source>
          <target state="translated">動的フォームの作成を示します。詳細については、&lt;a href=&quot;dynamic-form&quot;&gt;動的フォームの作成を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="e31627234d3a479b49bde46c259a11b50852177a" translate="yes" xml:space="preserve">
          <source>Demonstrates customizing the document title in the browser. For more information, see &lt;a href=&quot;set-document-title&quot;&gt;Set the document title&lt;/a&gt;.</source>
          <target state="translated">ブラウザでドキュメントのタイトルをカスタマイズする方法を示します。詳細について&lt;a href=&quot;set-document-title&quot;&gt;は、ドキュメントタイトルの設定を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="47d82501ff1326e82e567dc777dda0e696f6a6b6" translate="yes" xml:space="preserve">
          <source>Demonstrates every lifecycle hook. Each hook method writes to the on-screen log.</source>
          <target state="translated">すべてのライフサイクルフックをデモします。各フックメソッドは画面上のログに書き込みます。</target>
        </trans-unit>
        <trans-unit id="ffb0bd7333c14cda072690bd9c288037c6cc8b2e" translate="yes" xml:space="preserve">
          <source>Demonstrates expression operators in Angular templates. For more information, see &lt;a href=&quot;template-expression-operators&quot;&gt;Template expression operators&lt;/a&gt;.</source>
          <target state="translated">Angularテンプレートの式演算子を示します。詳細については、&lt;a href=&quot;template-expression-operators&quot;&gt;テンプレート式の演算子を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="4b999d284c43fc652888e4e78f14bf13de10164a" translate="yes" xml:space="preserve">
          <source>Demonstrates foundational concepts of Angular forms. For more information, see &lt;a href=&quot;forms-overview&quot;&gt;Introduction to forms in Angular&lt;/a&gt;.</source>
          <target state="translated">Angularフォームの基本的な概念を示します。詳細について&lt;a href=&quot;forms-overview&quot;&gt;は、Angularのフォームの概要を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="9efe664d9835a7dc80d0db2778c58e39018d521b" translate="yes" xml:space="preserve">
          <source>Demonstrates fundamentals of Angular dependency injection. For more information, see &lt;a href=&quot;dependency-injection&quot;&gt;Dependency injection&lt;/a&gt;.</source>
          <target state="translated">Angular依存性注入の基本を示します。詳細については、&lt;a href=&quot;dependency-injection&quot;&gt;依存性注入を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="18c3668610836a72013778048bd504889f2cb05f" translate="yes" xml:space="preserve">
          <source>Demonstrates fundamentals of NgModules. For more information, see &lt;a href=&quot;ngmodules&quot;&gt;NgModules&lt;/a&gt;.</source>
          <target state="translated">NgModuleの基本を示します。詳細については、&lt;a href=&quot;ngmodules&quot;&gt;NgModulesを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="4a1adf1dad51a12915f747b8bdf813b01b050931" translate="yes" xml:space="preserve">
          <source>Demonstrates how &lt;code&gt;providers&lt;/code&gt; and &lt;code&gt;viewproviders&lt;/code&gt; affect dependency injection. For more information, see the &lt;a href=&quot;hierarchical-dependency-injection#providing-services-in-component&quot;&gt;Providing services in &lt;code&gt;@Component()&lt;/code&gt;&lt;/a&gt; section of &lt;a href=&quot;hierarchical-dependency-injection&quot;&gt;Hierarchical injectors&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;providers&lt;/code&gt; と &lt;code&gt;viewproviders&lt;/code&gt; プロバイダーが依存性注入にどのように影響するかを示します。詳細については、&lt;a href=&quot;hierarchical-dependency-injection&quot;&gt;階層インジェクターの&lt;/a&gt;&lt;a href=&quot;hierarchical-dependency-injection#providing-services-in-component&quot;&gt; &lt;code&gt;@Component()&lt;/code&gt; &lt;/a&gt;セクションでのサービスの提供を参照してください。</target>
        </trans-unit>
        <trans-unit id="9da903bfeae3cf383caf3ab0e84af92fcca596e5" translate="yes" xml:space="preserve">
          <source>Demonstrates how Angular calls the &lt;code&gt;ngOnChanges()&lt;/code&gt; hook every time one of the component input properties changes, and shows how to interpret the &lt;code&gt;changes&lt;/code&gt; object passed to the hook method.</source>
          <target state="translated">コンポーネントの入力プロパティの1つが変更されるたびにAngularが &lt;code&gt;ngOnChanges()&lt;/code&gt; フックを呼び出す方法を示し、hookメソッドに渡された &lt;code&gt;changes&lt;/code&gt; オブジェクトを解釈する方法を示します。</target>
        </trans-unit>
        <trans-unit id="9ec2c894a6f65fea50d471dc3291a87593f97595" translate="yes" xml:space="preserve">
          <source>Demonstrates how Angular shares data between components. For more information, see &lt;a href=&quot;component-interaction&quot;&gt;Component interaction&lt;/a&gt;.</source>
          <target state="translated">Angularがコンポーネント間でデータを共有する方法を示します。詳細については、&lt;a href=&quot;component-interaction&quot;&gt;コンポーネントの相互作用を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="f558d922fb137f690855f2f02ca4ebdd649f2921" translate="yes" xml:space="preserve">
          <source>Demonstrates how to dynamically load components. For more information, see &lt;a href=&quot;dynamic-component-loader&quot;&gt;Dynamic component loader&lt;/a&gt;.</source>
          <target state="translated">コンポーネントを動的にロードする方法を示します。詳細については、&lt;a href=&quot;dynamic-component-loader&quot;&gt;動的コンポーネントローダーを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="184fb8288b67ee18a45d5cf971fc75b2d1741fae" translate="yes" xml:space="preserve">
          <source>Demonstrates lazy loading NgModules. For more information, see &lt;a href=&quot;lazy-loading-ngmodules&quot;&gt;Lazy-loading feature modules&lt;/a&gt;.</source>
          <target state="translated">NgModuleの遅延読み込みを示します。詳細については、&lt;a href=&quot;lazy-loading-ngmodules&quot;&gt;遅延読み込み機能モジュールを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="a4146feadf647e90339b87c367e191e3e82d10cc" translate="yes" xml:space="preserve">
          <source>Demonstrates many of the features of Angular dependency injection. For more information, see &lt;a href=&quot;dependency-injection&quot;&gt;Dependency injection in action&lt;/a&gt;.</source>
          <target state="translated">Angular依存性注入の多くの機能を示します。詳細について&lt;a href=&quot;dependency-injection&quot;&gt;は、実際の依存性注入を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="983db2988f152f811a7c5a6d1b04d0264bd00064" translate="yes" xml:space="preserve">
          <source>Demonstrates property binding in Angular. For more information, see &lt;a href=&quot;property-binding&quot;&gt;Property binding&lt;/a&gt;.</source>
          <target state="translated">Angularでのプロパティバインディングを示します。詳細については、&lt;a href=&quot;property-binding&quot;&gt;プロパティバインディングを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="a23adb2b903c9c02a3ce1cc919dd6ba5436c264d" translate="yes" xml:space="preserve">
          <source>Demonstrates providing services in NgModules. For more information, see &lt;a href=&quot;providers&quot;&gt;Providing dependencies in modules&lt;/a&gt;.</source>
          <target state="translated">NgModulesでサービスを提供する方法を示します。詳細について&lt;a href=&quot;providers&quot;&gt;は、モジュールでの依存関係の提供を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="209b3ba549e6a46d68e4d134b75f073fc46c7110" translate="yes" xml:space="preserve">
          <source>Demonstrates responding to user actions. For more information, see &lt;a href=&quot;user-input&quot;&gt;User input&lt;/a&gt;.</source>
          <target state="translated">ユーザーアクションへの応答を示します。詳細については、「&lt;a href=&quot;user-input&quot;&gt;ユーザー入力&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="3d686618629db6f41991ad99b93178a152dd686e" translate="yes" xml:space="preserve">
          <source>Demonstrates security concepts in Angular applications. For more information, see &lt;a href=&quot;security&quot;&gt;Security&lt;/a&gt;.</source>
          <target state="translated">Angularアプリケーションのセキュリティ概念を示します。詳細については、&lt;a href=&quot;security&quot;&gt;セキュリティを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="aa658c573f5100c3d36b6d2cd0f83a725afeb81d" translate="yes" xml:space="preserve">
          <source>Demonstrates server interaction using HTTP. For more information, see &lt;a href=&quot;http&quot;&gt;Communicating with backend services using HTTP&lt;/a&gt;.</source>
          <target state="translated">HTTPを使用したサーバーの相互作用を示します。詳細については、&lt;a href=&quot;http&quot;&gt;HTTPを使用したバックエンドサービスとの通信を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="e276b7bfe969e253fde6083b106ae62281d4b7cb" translate="yes" xml:space="preserve">
          <source>Demonstrates styling in Angular apps. For more information, see &lt;a href=&quot;component-styles&quot;&gt;Component styles&lt;/a&gt;.</source>
          <target state="translated">Angularアプリのスタイリングを示します。詳細については、「&lt;a href=&quot;component-styles&quot;&gt;コンポーネントスタイル&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="2f7a1ff3ec083835009a7f317298be82faa7fff7" translate="yes" xml:space="preserve">
          <source>Demonstrates techniques for testing Angular. For more information, see &lt;a href=&quot;testing&quot;&gt;Testing&lt;/a&gt;.</source>
          <target state="translated">Angularをテストするためのテクニックを示します。詳細については、&lt;a href=&quot;testing&quot;&gt;テストを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="706fd34d2c6050263f5019f42c74b476813a3dbb" translate="yes" xml:space="preserve">
          <source>Demonstrates the Angular bootstrapping process. For more information, see &lt;a href=&quot;bootstrapping&quot;&gt;Launching your app with a root module&lt;/a&gt;.</source>
          <target state="translated">Angularブートストラッププロセスを示します。詳細について&lt;a href=&quot;bootstrapping&quot;&gt;は、ルートモジュールを使用したアプリの起動を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="be26c5afa6b2128e8a69fcbd0af85934fd6c46e5" translate="yes" xml:space="preserve">
          <source>Demonstrates the fundamental architecture of Angular applications. For more information, see &lt;a href=&quot;architecture&quot;&gt;Introduction to Angular concepts&lt;/a&gt;.</source>
          <target state="translated">Angularアプリケーションの基本的なアーキテクチャを示します。詳細については、&lt;a href=&quot;architecture&quot;&gt;Angularの概念の概要を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="7321e41f0e80d51c18193588e1e3047563d2a38e" translate="yes" xml:space="preserve">
          <source>Demonstrates two-way data binding in Angular applications. For more information, see &lt;a href=&quot;two-way-binding&quot;&gt;Two-way binding&lt;/a&gt;.</source>
          <target state="translated">Angularアプリケーションでの双方向のデータバインディングを示します。詳細については、&lt;a href=&quot;two-way-binding&quot;&gt;双方向バインディングを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="3f4a8da6646e33d2ba75055b8aad483b78c2cb41" translate="yes" xml:space="preserve">
          <source>Demonstrates using Angular custom elements. For more information, see &lt;a href=&quot;elements&quot;&gt;Angular elements overview&lt;/a&gt;.</source>
          <target state="translated">Angularカスタム要素の使用を示します。詳細については、&lt;a href=&quot;elements&quot;&gt;角度要素の概要を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="e0763c4e8c6c67a2220f20c2d293facde2335f95" translate="yes" xml:space="preserve">
          <source>Demonstrates using feature modules in Angular. For more information, see &lt;a href=&quot;feature-modules&quot;&gt;Feature modules&lt;/a&gt;.</source>
          <target state="translated">Angularで機能モジュールを使用する方法を示します。詳細については、&lt;a href=&quot;feature-modules&quot;&gt;機能モジュールを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="4551f465e2265c8b027dbb76e3efba8c17943a7a" translate="yes" xml:space="preserve">
          <source>Demonstrates validating forms in Angular. For more information, see &lt;a href=&quot;form-validation&quot;&gt;Validating form input&lt;/a&gt;.</source>
          <target state="translated">Angularでフォームを検証する方法を示します。詳細については、&lt;a href=&quot;form-validation&quot;&gt;フォーム入力の検証を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="0562f32dc56f5c702810cbe010068ddd38dbd69a" translate="yes" xml:space="preserve">
          <source>Dependencies</source>
          <target state="translated">Dependencies</target>
        </trans-unit>
        <trans-unit id="3969438fe2188ea70569a9eba890f3a3be171dfd" translate="yes" xml:space="preserve">
          <source>Dependencies are services or objects that a class needs to perform its function. DI is a coding pattern in which a class asks for dependencies from external sources rather than creating them itself.</source>
          <target state="translated">依存関係とは、クラスがその機能を実行するために必要なサービスやオブジェクトのことです。DI は、クラスが依存関係を自分で作成するのではなく、外部ソースから依存関係を要求するコーディング・パターンです。</target>
        </trans-unit>
        <trans-unit id="9c3a60862c8e32bceb7a5b6cd07121beec7c64c3" translate="yes" xml:space="preserve">
          <source>Dependencies can also be marked as optional:</source>
          <target state="translated">依存関係はオプションとしてマークすることもできます。</target>
        </trans-unit>
        <trans-unit id="5bfedadd6cca6690cbe5a22a3b89eb2c20d39fc3" translate="yes" xml:space="preserve">
          <source>Dependencies can be registered at any level in the component hierarchy. When a component requests a dependency, Angular starts with that component's injector and walks up the injector tree until it finds the first suitable provider. Angular throws an error if it can't find the dependency during that walk.</source>
          <target state="translated">依存関係はコンポーネント階層のどのレベルでも登録できます。コンポーネントが依存関係を要求すると、Angularはそのコンポーネントのインジェクタから始まり、最初の適切なプロバイダが見つかるまでインジェクタツリーを歩きます。その間に依存関係が見つからなかった場合、Angularはエラーをスローします。</target>
        </trans-unit>
        <trans-unit id="268069fc500d695525729fb4728b0f714e4272a3" translate="yes" xml:space="preserve">
          <source>Dependencies provided by the root injector can be injected into &lt;em&gt;any&lt;/em&gt; component &lt;em&gt;anywhere&lt;/em&gt; in the application. In some cases, you might want to restrict service availability to a particular region of the application. For instance, you might want to let users explicitly opt in to use a service, rather than letting the root injector provide it automatically.</source>
          <target state="translated">ルートインジェクターによって提供される依存関係は、アプリケーションの&lt;em&gt;任意の場所の&lt;/em&gt;&lt;em&gt;任意の&lt;/em&gt;コンポーネントに注入できます。場合によっては、サービスの可用性をアプリケーションの特定の領域に制限する必要があります。たとえば、ルートインジェクタにサービスを自動的に提供させるのではなく、ユーザーがサービスを使用することを明示的にオプトインできるようにすることができます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1e40e6745211c8a0d091b67c457129398aa29f2f" translate="yes" xml:space="preserve">
          <source>Dependencies whose providers are listed here become available for injection into any component, directive, pipe or service that is a child of this injector. The NgModule used for bootstrapping uses the root injector, and can provide dependencies to any part of the app.</source>
          <target state="translated">ここにリストされているプロバイダを持つ依存関係は、このインジェクタの子であるコンポーネント、ディレクティブ、パイプ、サービスに注入することが可能になります。ブートストラップに使用される NgModule はルートインジェクタを使用し、アプリの任意の部分に依存関係を提供することができます。</target>
        </trans-unit>
        <trans-unit id="39b445f9280a6bde59a9884f1dfcf8f05fcf2ac8" translate="yes" xml:space="preserve">
          <source>Dependencies. See &lt;a href=&quot;https://docs.npmjs.com/files/package.json&quot;&gt;https://docs.npmjs.com/files/package.json&lt;/a&gt;.</source>
          <target state="translated">依存関係。&lt;a href=&quot;https://docs.npmjs.com/files/package.json&quot;&gt;https://docs.npmjs.com/files/package.jsonを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="3aefbe2f210572802298b2ad0347dc9e423d2690" translate="yes" xml:space="preserve">
          <source>Dependency Injection</source>
          <target state="translated">依存性注入</target>
        </trans-unit>
        <trans-unit id="5587fb39e018b9a0f84498d0af8a56b11662b24b" translate="yes" xml:space="preserve">
          <source>Dependency Injection Guide</source>
          <target state="translated">依存性注入ガイド</target>
        </trans-unit>
        <trans-unit id="67d83ab175192923dcef5418334db7940ccd1d3d" translate="yes" xml:space="preserve">
          <source>Dependency Injection in Action</source>
          <target state="translated">依存性インジェクションの動作</target>
        </trans-unit>
        <trans-unit id="590a5a128f3f7f29bda608d586e731e6794c72b2" translate="yes" xml:space="preserve">
          <source>Dependency Injection in Angular</source>
          <target state="translated">Angularでの依存性インジェクション</target>
        </trans-unit>
        <trans-unit id="94fce4aaf94c5274c2455399844edec7040e85d6" translate="yes" xml:space="preserve">
          <source>Dependency Providers</source>
          <target state="translated">依存関係プロバイダ</target>
        </trans-unit>
        <trans-unit id="abe361ec5ac92ab2b51436412eccfc4c617ee10a" translate="yes" xml:space="preserve">
          <source>Dependency injection</source>
          <target state="translated">依存性の注入</target>
        </trans-unit>
        <trans-unit id="dcbdd3cb88ccf5020d3734dbba5005a8f3e6c83d" translate="yes" xml:space="preserve">
          <source>Dependency injection (DI)</source>
          <target state="translated">依存性注入(DI</target>
        </trans-unit>
        <trans-unit id="38764a3306fa96e3b5ce418928df3310a66e2397" translate="yes" xml:space="preserve">
          <source>Dependency injection (DI), is an important application design pattern. Angular has its own DI framework, which is typically used in the design of Angular applications to increase their efficiency and modularity.</source>
          <target state="translated">依存性注入(DI)は、重要なアプリケーション設計パターンです。Angularには独自のDIフレームワークがあり、一般的にはAngularアプリケーションの効率性とモジュール性を高めるための設計に使用されます。</target>
        </trans-unit>
        <trans-unit id="ac6fed4cfd6415d9a0dddf57401d8893e0a3ccdc" translate="yes" xml:space="preserve">
          <source>Dependency injection configuration</source>
          <target state="translated">依存性注入の設定</target>
        </trans-unit>
        <trans-unit id="5d157fcdb9de2529597d8724844ab259c4616c75" translate="yes" xml:space="preserve">
          <source>Dependency injection features</source>
          <target state="translated">依存性注入の特徴</target>
        </trans-unit>
        <trans-unit id="eb231045a6147a48bad67c40c8081fd843375948" translate="yes" xml:space="preserve">
          <source>Dependency injection fundamentals</source>
          <target state="translated">依存性注入の基礎</target>
        </trans-unit>
        <trans-unit id="a0ee85e722c55bed29ede1e96a9a580963be3da6" translate="yes" xml:space="preserve">
          <source>Dependency injection in Angular</source>
          <target state="translated">Angularでの依存性注入</target>
        </trans-unit>
        <trans-unit id="7759d5d12903968fa8d1f0a65bce4f7bba100f65" translate="yes" xml:space="preserve">
          <source>Dependency injection in action</source>
          <target state="translated">アクションでの依存性注入</target>
        </trans-unit>
        <trans-unit id="e0967671af96737e00c4bc3ee3f86c99ee81217c" translate="yes" xml:space="preserve">
          <source>Dependency injection is front and center in both AngularJS and Angular, but there are some key differences between the two frameworks in how it actually works.</source>
          <target state="translated">依存性インジェクションはAngularJSとAngularの両方で前面に出ていますが、実際にどのように動作するのか、2つのフレームワークの間にはいくつかの重要な違いがあります。</target>
        </trans-unit>
        <trans-unit id="d567259d67cf4d25a3c86741b6f053a3877b2330" translate="yes" xml:space="preserve">
          <source>Dependency injection tokens</source>
          <target state="translated">依存性注入トークン</target>
        </trans-unit>
        <trans-unit id="8721847e3c2cf1f636675fe5ac81839a4deb4ed6" translate="yes" xml:space="preserve">
          <source>Dependency injection tokens are always strings</source>
          <target state="translated">依存性注入トークンは常に文字列です。</target>
        </trans-unit>
        <trans-unit id="e828713a25d9268cea5dcca4b96f2c8be3849f38" translate="yes" xml:space="preserve">
          <source>Dependency injection with &lt;code&gt;providers&lt;/code&gt; and &lt;code&gt;viewProviders&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;providers&lt;/code&gt; と &lt;code&gt;viewProviders&lt;/code&gt; による依存性注入</target>
        </trans-unit>
        <trans-unit id="a5f4548f589dff9719972f474e3b66d02efcff5b" translate="yes" xml:space="preserve">
          <source>Dependency objects can be simple values like dates, numbers and strings, or shapeless objects like arrays and functions.</source>
          <target state="translated">依存オブジェクトには、日付や数字、文字列などの単純な値や、配列や関数などの形のないオブジェクトがあります。</target>
        </trans-unit>
        <trans-unit id="c536f43fe0086c7768f33a4642a2989f949a129b" translate="yes" xml:space="preserve">
          <source>Dependency on a reflect-metadata polyfill in JIT mode</source>
          <target state="translated">JITモードでのReflect-Metadataポリフィルへの依存性</target>
        </trans-unit>
        <trans-unit id="b7c45dabbea49e158a871834dc91298080f55bc9" translate="yes" xml:space="preserve">
          <source>Dependency providers</source>
          <target state="translated">依存関係のプロバイダ</target>
        </trans-unit>
        <trans-unit id="79565b54bff7bbc8a04b329b75bcbe2a792c5429" translate="yes" xml:space="preserve">
          <source>Dependent values should not change during a single turn of the event loop. If an idempotent expression returns a string or a number, it returns the same string or number when called twice in a row. If the expression returns an object, including an &lt;code&gt;array&lt;/code&gt;, it returns the same object &lt;em&gt;reference&lt;/em&gt; when called twice in a row.</source>
          <target state="translated">依存値は、イベントループの1ターンの間は変更しないでください。べき等式が文字列または数値を返す場合、2回続けて呼び出されると、同じ文字列または数値が返されます。式が &lt;code&gt;array&lt;/code&gt; を含むオブジェクトを返す場合、続けて2回呼び出されると、同じオブジェクト&lt;em&gt;参照&lt;/em&gt;が返されます。</target>
        </trans-unit>
        <trans-unit id="cf371c381900a6fd3d60e6ae500e85424e8b9edd" translate="yes" xml:space="preserve">
          <source>Depending on the &lt;code&gt;&lt;a href=&quot;locationstrategy&quot;&gt;LocationStrategy&lt;/a&gt;&lt;/code&gt; used, &lt;code&gt;&lt;a href=&quot;location&quot;&gt;Location&lt;/a&gt;&lt;/code&gt; persists to the URL's path or the URL's hash segment.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;locationstrategy&quot;&gt;LocationStrategy&lt;/a&gt;&lt;/code&gt; 、使用 &lt;code&gt;&lt;a href=&quot;location&quot;&gt;Location&lt;/a&gt;&lt;/code&gt; URLのパスまたはURLのハッシュセグメントに持続するが。</target>
        </trans-unit>
        <trans-unit id="11417adb2bedfcd43f2faa546d8cc11f6a59ad59" translate="yes" xml:space="preserve">
          <source>Deploy multiple locales</source>
          <target state="translated">複数のロケールを展開</target>
        </trans-unit>
        <trans-unit id="21832731ace57bad20a7e0620e71a706b969afbf" translate="yes" xml:space="preserve">
          <source>Deploy to GitHub pages</source>
          <target state="translated">GitHubページへのデプロイ</target>
        </trans-unit>
        <trans-unit id="e7db5b15c43d8e69848e15e994c11935e988b38a" translate="yes" xml:space="preserve">
          <source>Deploy your application with &lt;code&gt;firebase deploy&lt;/code&gt;, because the command &lt;code&gt;firebase init&lt;/code&gt; has created a &lt;code&gt;firebase.json&lt;/code&gt; file that tells Firebase how to serve your app.</source>
          <target state="translated">&lt;code&gt;firebase deploy&lt;/code&gt; コマンドを使用してアプリケーションをデプロイします。これは、コマンド &lt;code&gt;firebase init&lt;/code&gt; が、Firebaseにアプリのサービス方法を指示する &lt;code&gt;firebase.json&lt;/code&gt; ファイルを作成したためです。</target>
        </trans-unit>
        <trans-unit id="5cad02703898cbc62af19c6400b3de80210a2657" translate="yes" xml:space="preserve">
          <source>Deploy your application with &lt;code&gt;ng deploy&lt;/code&gt;.</source>
          <target state="translated">使用してアプリケーションをデプロイ &lt;code&gt;ng deploy&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="93a4280cf365a78e58ec01757c35bd77e70bc7b1" translate="yes" xml:space="preserve">
          <source>Deploying an application</source>
          <target state="translated">アプリケーションのデプロイ</target>
        </trans-unit>
        <trans-unit id="327a55f82dc6818877a68e37b722bb7f2360b633" translate="yes" xml:space="preserve">
          <source>Deployment</source>
          <target state="translated">Deployment</target>
        </trans-unit>
        <trans-unit id="d2196ee26d9923cc05a880fb1a76a08b79b7cc48" translate="yes" xml:space="preserve">
          <source>Deployment to</source>
          <target state="translated">への展開</target>
        </trans-unit>
        <trans-unit id="600c4c32abbd0e6044d374f8d9f63e6c5b81d165" translate="yes" xml:space="preserve">
          <source>Deprecated APIs</source>
          <target state="translated">非推奨API</target>
        </trans-unit>
        <trans-unit id="1f787212bb6689c1d785407d5b1bdf211afadeac" translate="yes" xml:space="preserve">
          <source>Deprecated APIs and Features</source>
          <target state="translated">非推奨APIと機能</target>
        </trans-unit>
        <trans-unit id="15cea9cab07c3d7deb0aed65cb5e28e22b53b411" translate="yes" xml:space="preserve">
          <source>Deprecated APIs and features</source>
          <target state="translated">非推奨APIと機能</target>
        </trans-unit>
        <trans-unit id="add8011fa2865962ca5feec9cc4f7924abc168c6" translate="yes" xml:space="preserve">
          <source>Deprecated CLI APIs and Options</source>
          <target state="translated">非推奨のCLI APIとオプション</target>
        </trans-unit>
        <trans-unit id="7218426c098e3c7567c8d1124afcedb820536afb" translate="yes" xml:space="preserve">
          <source>Deprecated as part of TSLint deprecation.</source>
          <target state="translated">TSLintの廃止予定の一部として非推奨。</target>
        </trans-unit>
        <trans-unit id="35ee1fa50278c527aa6abc0d9e07608c509c3bdd" translate="yes" xml:space="preserve">
          <source>Deprecated features</source>
          <target state="translated">非推奨機能</target>
        </trans-unit>
        <trans-unit id="b1c818a3ca95c7aa9b5971979e9cc0dc5c2370da" translate="yes" xml:space="preserve">
          <source>Deprecated:</source>
          <target state="translated">Deprecated:</target>
        </trans-unit>
        <trans-unit id="46e54bf33a4ff01d1ec588f4b0775ec8c766db47" translate="yes" xml:space="preserve">
          <source>DeprecatedCurrencyPipe</source>
          <target state="translated">DeprecatedCurrencyPipe</target>
        </trans-unit>
        <trans-unit id="881e558149c3d7461f7105dcd218606fba5255d4" translate="yes" xml:space="preserve">
          <source>DeprecatedDatePipe</source>
          <target state="translated">DeprecatedDatePipe</target>
        </trans-unit>
        <trans-unit id="a80b002b3b2b9739312dfeff0cd916fcd023473b" translate="yes" xml:space="preserve">
          <source>DeprecatedDecimalPipe</source>
          <target state="translated">DeprecatedDecimalPipe</target>
        </trans-unit>
        <trans-unit id="6ad89b35c430aa53c5d3428e1bd57a5b2e322ecb" translate="yes" xml:space="preserve">
          <source>DeprecatedI18NPipesModule</source>
          <target state="translated">DeprecatedI18NPipesModule</target>
        </trans-unit>
        <trans-unit id="478a6233375e237e3c63a4313edb2aa2efd29eff" translate="yes" xml:space="preserve">
          <source>DeprecatedLoadChildren</source>
          <target state="translated">DeprecatedLoadChildren</target>
        </trans-unit>
        <trans-unit id="fa7601a3ccc28c9e4c84755f153eaaf8ee9582b9" translate="yes" xml:space="preserve">
          <source>DeprecatedPercentPipe</source>
          <target state="translated">DeprecatedPercentPipe</target>
        </trans-unit>
        <trans-unit id="6476c77b7d784c95dbbc590911032f580e3f0bc4" translate="yes" xml:space="preserve">
          <source>Deprecation announced</source>
          <target state="translated">非推奨を発表</target>
        </trans-unit>
        <trans-unit id="5058335bf29d5e3c5f14c109e68c0711e5a7f2dc" translate="yes" xml:space="preserve">
          <source>Deprecation practices</source>
          <target state="translated">非推奨の実践</target>
        </trans-unit>
        <trans-unit id="34730e9bbd5c0ba7b7655973316eed44e39da85f" translate="yes" xml:space="preserve">
          <source>Deprecations</source>
          <target state="translated">Deprecations</target>
        </trans-unit>
        <trans-unit id="554ab2f632217d31bc0da60f68bf5c4c051c590b" translate="yes" xml:space="preserve">
          <source>Describes how an &lt;code&gt;&lt;a href=&quot;core/injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; should be configured as static (that is, without reflection). A static provider provides tokens to an injector for various types of dependencies.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;core/injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; を静的（つまり、反射なし）として構成する方法について説明します。静的プロバイダーは、さまざまなタイプの依存関係のトークンをインジェクターに提供します。</target>
        </trans-unit>
        <trans-unit id="1627ac80968a606d933e94e5d703f9c55d6e9632" translate="yes" xml:space="preserve">
          <source>Describes how an &lt;code&gt;&lt;a href=&quot;injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; should be configured as static (that is, without reflection). A static provider provides tokens to an injector for various types of dependencies.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; を静的（つまり、反射なし）として構成する方法について説明します。静的プロバイダーは、さまざまなタイプの依存関係のトークンをインジェクターに提供します。</target>
        </trans-unit>
        <trans-unit id="37d4da9c3e2f3e172d0498996ef3eb3a0f02a619" translate="yes" xml:space="preserve">
          <source>Describes how the &lt;code&gt;&lt;a href=&quot;core/injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; should be configured as static (that is, without reflection).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;core/injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; を静的（つまりリフレクションなし）として構成する方法を説明します。</target>
        </trans-unit>
        <trans-unit id="0077d6cc8491b4b5017fb89074903642a9fbc3ff" translate="yes" xml:space="preserve">
          <source>Describes how the &lt;code&gt;&lt;a href=&quot;core/injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; should be configured.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;core/injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; 構成方法について説明します。</target>
        </trans-unit>
        <trans-unit id="6600b83d9745dd9a9b042112a73a8a3701ed489a" translate="yes" xml:space="preserve">
          <source>Describes how the &lt;code&gt;&lt;a href=&quot;injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; should be configured as static (that is, without reflection).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; を静的（つまりリフレクションなし）として構成する方法を説明します。</target>
        </trans-unit>
        <trans-unit id="f289052a0ab33778b3202d92989357da4acfe96e" translate="yes" xml:space="preserve">
          <source>Describes how the &lt;code&gt;&lt;a href=&quot;injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; should be configured.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; 構成方法について説明します。</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>
        </trans-unit>
        <trans-unit id="4f79b6c5e66c1a9169be45d48f9c57637ecaeef8" translate="yes" xml:space="preserve">
          <source>Designing a class with dependency injection makes the class easier to test. Listing dependencies as constructor parameters may be all you need to test application parts effectively.</source>
          <target state="translated">依存関係のインジェクションでクラスを設計すると、クラスのテストが容易になります。コンストラクタのパラメータとして依存関係をリストアップするだけで、アプリケーションのパーツを効果的にテストすることができるかもしれません。</target>
        </trans-unit>
        <trans-unit id="29438575ddcbe936d3920226aa524c3393a610bf" translate="yes" xml:space="preserve">
          <source>Despite inner animations being disabled, a parent animation can &lt;code&gt;&lt;a href=&quot;query&quot;&gt;query&lt;/a&gt;()&lt;/code&gt; for inner elements located in disabled areas of the template and still animate them if needed. This is also the case for when a sub animation is queried by a parent and then later animated using &lt;code&gt;&lt;a href=&quot;animatechild&quot;&gt;animateChild&lt;/a&gt;()&lt;/code&gt;.</source>
          <target state="translated">内部アニメーションが無効になっていても、親アニメーションはテンプレートの無効な領域にある内部要素を &lt;code&gt;&lt;a href=&quot;query&quot;&gt;query&lt;/a&gt;()&lt;/code&gt; して、必要に応じてアニメーション化できます。これは、サブアニメーションが親によって照会され、後で &lt;code&gt;&lt;a href=&quot;animatechild&quot;&gt;animateChild&lt;/a&gt;()&lt;/code&gt; を使用してアニメーション化される場合にも当てはまります。</target>
        </trans-unit>
        <trans-unit id="3d2e8f0ff165e77f918de800977b3bf4c84cf007" translate="yes" xml:space="preserve">
          <source>Destroy the Angular platform and all Angular applications on the page.</source>
          <target state="translated">Angularプラットフォームとページ上のすべてのAngularアプリケーションを破壊します。</target>
        </trans-unit>
        <trans-unit id="6192cea44a795469f201424a686d1f23e3abe2c1" translate="yes" xml:space="preserve">
          <source>Destroy the existing platform.</source>
          <target state="translated">既存のプラットフォームを破壊する。</target>
        </trans-unit>
        <trans-unit id="e232f65b77c6e508c16de7f3b985ec765080941e" translate="yes" xml:space="preserve">
          <source>Destroys a view attached to this container</source>
          <target state="translated">このコンテナに接続されているビューを破棄します。</target>
        </trans-unit>
        <trans-unit id="371555b173a3f42e5532895e8a8625000752c456" translate="yes" xml:space="preserve">
          <source>Destroys all views in this container.</source>
          <target state="translated">このコンテナ内のすべてのビューを破棄します。</target>
        </trans-unit>
        <trans-unit id="ea8b05fa2a4fef33bdb4c22d2fbb88d4595299a7" translate="yes" xml:space="preserve">
          <source>Destroys the animation, after invoking the &lt;code&gt;&lt;a href=&quot;animationplayer#beforeDestroy&quot;&gt;beforeDestroy&lt;/a&gt;()&lt;/code&gt; callback. Calls the &lt;code&gt;onDestroy()&lt;/code&gt; callback when destruction is completed.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;animationplayer#beforeDestroy&quot;&gt;beforeDestroy&lt;/a&gt;()&lt;/code&gt; コールバックを呼び出した後、アニメーションを破棄します。破棄が完了したときに &lt;code&gt;onDestroy()&lt;/code&gt; コールバックを呼び出します。</target>
        </trans-unit>
        <trans-unit id="ef288c23349153fa252bb8969e480488b1ade1b0" translate="yes" xml:space="preserve">
          <source>Destroys the animation, after invoking the &lt;code&gt;beforeDestroy()&lt;/code&gt; callback. Calls the &lt;code&gt;onDestroy()&lt;/code&gt; callback when destruction is completed.</source>
          <target state="translated">&lt;code&gt;beforeDestroy()&lt;/code&gt; コールバックを呼び出した後、アニメーションを破棄します。破棄が完了すると、 &lt;code&gt;onDestroy()&lt;/code&gt; コールバックを呼び出します。</target>
        </trans-unit>
        <trans-unit id="ea9bd7e5ed512aff6189ff2afc542da79a36f817" translate="yes" xml:space="preserve">
          <source>Destroys the component instance and all of the data structures associated with it.</source>
          <target state="translated">コンポーネント インスタンスとそれに関連するすべてのデータ構造を破棄します。</target>
        </trans-unit>
        <trans-unit id="0da0963f943856bb54d7b95d42e0e3d49675a337" translate="yes" xml:space="preserve">
          <source>Destroys the current Angular platform and all Angular applications on the page. Destroys all modules and listeners registered with the platform.</source>
          <target state="translated">現在のAngularプラットフォームとページ上のすべてのAngularアプリケーションを破棄します。プラットフォームに登録されているすべてのモジュールとリスナーを破棄します。</target>
        </trans-unit>
        <trans-unit id="9cf6b78e95b5f09265815794782da5cdbeb56f56" translate="yes" xml:space="preserve">
          <source>Destroys the module instance and all of the data structures associated with it.</source>
          <target state="translated">モジュールのインスタンスとそれに関連するすべてのデータ構造を破棄します。</target>
        </trans-unit>
        <trans-unit id="fbb6f7a742a4eb748fc690a4f9d045ccc7e05659" translate="yes" xml:space="preserve">
          <source>Destroys this view and all of the data structures associated with it.</source>
          <target state="translated">このビューとそれに関連するすべてのデータ構造を破棄します。</target>
        </trans-unit>
        <trans-unit id="578ea30d0209bdd1cc7a4e4351b5ad10a4b7a13b" translate="yes" xml:space="preserve">
          <source>Destructured variable or constant not supported</source>
          <target state="translated">構造化された変数または定数はサポートされていません。</target>
        </trans-unit>
        <trans-unit id="83b7a75d5bc1f9e9bbab53fd26eee0eebc347467" translate="yes" xml:space="preserve">
          <source>Desugared</source>
          <target state="translated">Desugared</target>
        </trans-unit>
        <trans-unit id="8d08aa8455a14b811d9b6fe35ed129bab859632f" translate="yes" xml:space="preserve">
          <source>Detach change detector to limit how often check occurs</source>
          <target state="translated">変更検出器を取り外して、チェックの発生頻度を制限する</target>
        </trans-unit>
        <trans-unit id="795a62180e964ae94c53bb9b9985f6f0b5bcd60a" translate="yes" xml:space="preserve">
          <source>Detached views are not checked during change detection runs until they are re-attached, even if they are marked as dirty.</source>
          <target state="translated">分離されたビューは、ダーティとマークされていても、再アタッチされるまで、変更検出の実行中にチェックされません。</target>
        </trans-unit>
        <trans-unit id="b0a9d6f591149520b6b2d78586833388b575e21c" translate="yes" xml:space="preserve">
          <source>DetachedRouteHandle</source>
          <target state="translated">DetachedRouteHandle</target>
        </trans-unit>
        <trans-unit id="020cb0ab4db35fbda482781c20576f39e92991bb" translate="yes" xml:space="preserve">
          <source>Detaches a view from dirty checking again.</source>
          <target state="translated">汚れたチェックからの景色を再び切り離す。</target>
        </trans-unit>
        <trans-unit id="ce080e741c27851c45aad3fbfe35ae9b1e68df51" translate="yes" xml:space="preserve">
          <source>Detaches a view from this container without destroying it. Use along with &lt;code&gt;&lt;a href=&quot;../forms/formarray#insert&quot;&gt;insert()&lt;/a&gt;&lt;/code&gt; to move a view within the current container.</source>
          <target state="translated">ビューを破棄せずにこのコンテナから切り離します。現在のコンテナ内でビューを移動するには、 &lt;code&gt;&lt;a href=&quot;../forms/formarray#insert&quot;&gt;insert()&lt;/a&gt;&lt;/code&gt; と一緒に使用します。</target>
        </trans-unit>
        <trans-unit id="a97f9c88abc82bb35b48131114f8aae2ab3b02c1" translate="yes" xml:space="preserve">
          <source>Detaches a view from this container without destroying it. Use along with &lt;code&gt;insert()&lt;/code&gt; to move a view within the current container.</source>
          <target state="translated">コンテナを破壊せずに、このコンテナからビューを切り離します。現在のコンテナ内でビューを移動するには、 &lt;code&gt;insert()&lt;/code&gt; と一緒に使用します。</target>
        </trans-unit>
        <trans-unit id="94686a999c0455a3cf8b8386bc0cf59bdde40664" translate="yes" xml:space="preserve">
          <source>Detaches this view from the change-detection tree. A detached view is not checked until it is reattached. Use in combination with &lt;code&gt;&lt;a href=&quot;testing/componentfixture#detectChanges&quot;&gt;detectChanges()&lt;/a&gt;&lt;/code&gt; to implement local change detection checks.</source>
          <target state="translated">変更検出ツリーからこのビューを切り離します。デタッチされたビューは、再アタッチされるまでチェックされません。ローカルの変更検出チェックを実装するには、 &lt;code&gt;&lt;a href=&quot;testing/componentfixture#detectChanges&quot;&gt;detectChanges()&lt;/a&gt;&lt;/code&gt; と組み合わせて使用​​します。</target>
        </trans-unit>
        <trans-unit id="c866fc2271c65ffa7825ede55b8489864846818c" translate="yes" xml:space="preserve">
          <source>Detaches this view from the change-detection tree. A detached view is not checked until it is reattached. Use in combination with &lt;code&gt;detectChanges()&lt;/code&gt; to implement local change detection checks.</source>
          <target state="translated">このビューを変更検出ツリーから切り離します。切り離されたビューは、再度アタッチされるまでチェックされません。局所的な変更検出チェックを実装するには、 &lt;code&gt;detectChanges()&lt;/code&gt; と組み合わせて使用​​します。</target>
        </trans-unit>
        <trans-unit id="e00db26f44f35fb87be8830347a5264c12dde83e" translate="yes" xml:space="preserve">
          <source>Detect and act upon changes that Angular can't or won't detect on its own.</source>
          <target state="translated">Angularが単独では検知できない、あるいは検知できない変更を検知して対処します。</target>
        </trans-unit>
        <trans-unit id="2d0553de29fcfcd88c7f6c94093659b997ce7163" translate="yes" xml:space="preserve">
          <source>Detect and act upon changes that Angular can't or won't detect on its own. See details and example in &lt;a href=&quot;lifecycle-hooks#docheck&quot;&gt;Defining custom change detection&lt;/a&gt; in this document.</source>
          <target state="translated">Angularが単独で検出できない、または検出しない変更を検出して対処します。このドキュメントの&lt;a href=&quot;lifecycle-hooks#docheck&quot;&gt;カスタム変更検出の定義の&lt;/a&gt;詳細と例を参照してください。</target>
        </trans-unit>
        <trans-unit id="f8a127bfe17898a3b255876bcdf1d1c9fa3928de" translate="yes" xml:space="preserve">
          <source>Detect and act upon changes to input property values with the &lt;code&gt;ngOnChanges()&lt;/code&gt; method of the &lt;code&gt;&lt;a href=&quot;../api/core/onchanges&quot;&gt;OnChanges&lt;/a&gt;&lt;/code&gt; lifecycle hook interface.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/core/onchanges&quot;&gt;OnChanges&lt;/a&gt;&lt;/code&gt; ライフサイクルフックインターフェースの &lt;code&gt;ngOnChanges()&lt;/code&gt; メソッドを使用して、入力プロパティ値への変更を検出して処理します。</target>
        </trans-unit>
        <trans-unit id="74dce6fffdd0462c1c153bee5974cdc0376a8b74" translate="yes" xml:space="preserve">
          <source>Detecting changes with data binding in pipes</source>
          <target state="translated">パイプ内のデータバインディングによる変化の検出</target>
        </trans-unit>
        <trans-unit id="5d2fe40bc6e7bf3ef9d676154d6fe0e4ee4e9964" translate="yes" xml:space="preserve">
          <source>Detecting impure changes within composite objects</source>
          <target state="translated">複合オブジェクト内の不純な変化の検出</target>
        </trans-unit>
        <trans-unit id="3dae57708f9b4e33643c9eda71fd421e5883e693" translate="yes" xml:space="preserve">
          <source>Detecting pure changes to primitives and object references</source>
          <target state="translated">プリミティブとオブジェクト参照への純粋な変更の検出</target>
        </trans-unit>
        <trans-unit id="857eba68fb4e46cab2b9953790865f2a5092ebea" translate="yes" xml:space="preserve">
          <source>Detecting that an error occurred is one thing. Interpreting that error and composing a user-friendly response is a bit more involved.</source>
          <target state="translated">エラーが発生したことを検出することは一つのことです。そのエラーを解釈し、ユーザーフレンドリーな応答を構成することは、もう少し複雑です。</target>
        </trans-unit>
        <trans-unit id="f682c256f996e01f2e6e6fb59f14d0e1d884fbad" translate="yes" xml:space="preserve">
          <source>Detecting when an animation is disabled</source>
          <target state="translated">アニメーションが無効化された場合の検出</target>
        </trans-unit>
        <trans-unit id="04d06e3ff3564cb712418d032f6dfa595a2e7af4" translate="yes" xml:space="preserve">
          <source>Determines if a route should be reused</source>
          <target state="translated">ルートを再利用するかどうかを決定する</target>
        </trans-unit>
        <trans-unit id="4435bd986bf1ce957bb5b0a58c7919ffb3cc6b25" translate="yes" xml:space="preserve">
          <source>Determines if a route should be reused. This strategy returns &lt;code&gt;true&lt;/code&gt; when the future route config and current route config are identical.</source>
          <target state="translated">ルートを再利用するかどうかを決定します。この戦略は、将来のルート構成と現在のルート構成が同一で &lt;code&gt;true&lt;/code&gt; 場合にtrueを返します。</target>
        </trans-unit>
        <trans-unit id="5cb9846df8e89fd7757c4cecb42b1f09c86afecb" translate="yes" xml:space="preserve">
          <source>Determines if this route (and its subtree) should be detached to be reused later</source>
          <target state="translated">このルート(とそのサブツリー)を切り離して後で再利用するかどうかを決定します。</target>
        </trans-unit>
        <trans-unit id="d9e64e88b5cb3aba35c3f9b37fc8405f431d8a8f" translate="yes" xml:space="preserve">
          <source>Determines if this route (and its subtree) should be reattached</source>
          <target state="translated">このルート(とそのサブツリー)を再接続するかどうかを決定します。</target>
        </trans-unit>
        <trans-unit id="bf63974ae0ae184173f6e5b9dd49393bfd79fa35" translate="yes" xml:space="preserve">
          <source>Determines when the router updates the browser URL. By default (&lt;code&gt;&quot;deferred&quot;&lt;/code&gt;), updates the browser URL after navigation has finished. Set to &lt;code&gt;'eager'&lt;/code&gt; to update the browser URL at the beginning of navigation. You can choose to update early so that, if navigation fails, you can show an error message with the URL that failed.</source>
          <target state="translated">ルーターがブラウザーのURLを更新するタイミングを決定します。デフォルト（ &lt;code&gt;&quot;deferred&quot;&lt;/code&gt; ）では、ナビゲーションの完了後にブラウザのURLを更新します。ナビゲーションの開始時にブラウザーのURLを更新するには、 &lt;code&gt;'eager'&lt;/code&gt; に設定します。ナビゲーションが失敗した場合に、失敗したURLを含むエラーメッセージを表示できるように、早期更新を選択できます。</target>
        </trans-unit>
        <trans-unit id="1c59db6e41de82982506198f4a98b9d1da63d6eb" translate="yes" xml:space="preserve">
          <source>Determines which injectors will provide the injectable, by either associating it with an &lt;code&gt;@&lt;a href=&quot;ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; or other &lt;code&gt;&lt;a href=&quot;injectortype&quot;&gt;InjectorType&lt;/a&gt;&lt;/code&gt;, or by specifying that this injectable should be provided in one of the following injectors:</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; または他の &lt;code&gt;&lt;a href=&quot;injectortype&quot;&gt;InjectorType&lt;/a&gt;&lt;/code&gt; に関連付けるか、このインジェクターを次のインジェクターのいずれかに提供するように指定することにより、インジェクターを提供するインジェクターを決定します。</target>
        </trans-unit>
        <trans-unit id="d4d104cdda5ff1053c0418ce564dd52363728bd7" translate="yes" xml:space="preserve">
          <source>Determines which injectors will provide the injectable, by either associating it with an @NgModule or other &lt;code&gt;&lt;a href=&quot;injectortype&quot;&gt;InjectorType&lt;/a&gt;&lt;/code&gt;, or by specifying that this injectable should be provided in the 'root' injector, which will be the application-level injector in most apps.</source>
          <target state="translated">@NgModuleまたは他の &lt;code&gt;&lt;a href=&quot;injectortype&quot;&gt;InjectorType&lt;/a&gt;&lt;/code&gt; に関連付けるか、このインジェクタブルを「ルート」インジェクタに提供するように指定することにより、インジェクタブルを提供するインジェクタを決定します。</target>
        </trans-unit>
        <trans-unit id="ba45be12dab890f012be90980b2f05219b42cfec" translate="yes" xml:space="preserve">
          <source>Determining an event target</source>
          <target state="translated">イベントターゲットの決定</target>
        </trans-unit>
        <trans-unit id="999c66c441c3226e0966ddbba9a0c570185161ff" translate="yes" xml:space="preserve">
          <source>Dev server target to run tests against.</source>
          <target state="translated">テストを実行するための開発サーバーのターゲット。</target>
        </trans-unit>
        <trans-unit id="965695ae3b5de08fbcc553664bd700779eca213f" translate="yes" xml:space="preserve">
          <source>DevDependencies</source>
          <target state="translated">DevDependencies</target>
        </trans-unit>
        <trans-unit id="14466f532621848f60d0b683098849311d22cf50" translate="yes" xml:space="preserve">
          <source>Develop a component to create form controls dynamically.</source>
          <target state="translated">フォームコントロールを動的に作成するコンポーネントを開発します。</target>
        </trans-unit>
        <trans-unit id="b0608ab1bd96359355856ec5aafa9740f6d63c4d" translate="yes" xml:space="preserve">
          <source>Developer Tools</source>
          <target state="translated">開発者ツール</target>
        </trans-unit>
        <trans-unit id="5083a3489727d560720fdf9a3fef93a68dd6422d" translate="yes" xml:space="preserve">
          <source>Developer-defined state that can be passed to any navigation. Access this value through the &lt;code&gt;Navigation.extras&lt;/code&gt; object returned from &lt;code&gt;router.getCurrentNavigation()&lt;/code&gt; while a navigation is executing.</source>
          <target state="translated">任意のナビゲーションに渡すことができる開発者定義の状態。ナビゲーションの実行中に &lt;code&gt;router.getCurrentNavigation()&lt;/code&gt; から返された &lt;code&gt;Navigation.extras&lt;/code&gt; オブジェクトを通じてこの値にアクセスします。</target>
        </trans-unit>
        <trans-unit id="6f339b7168017fa28dc0d4f1050f82636e73c066" translate="yes" xml:space="preserve">
          <source>Developer-defined state that can be passed to any navigation. Access this value through the &lt;code&gt;Navigation.extras&lt;/code&gt; object returned from the &lt;a href=&quot;router#getcurrentnavigation&quot;&gt;Router.getCurrentNavigation() method&lt;/a&gt; while a navigation is executing.</source>
          <target state="translated">任意のナビゲーションに渡すことができる開発者定義の状態。ナビゲーションの実行中に&lt;a href=&quot;router#getcurrentnavigation&quot;&gt;Router.getCurrentNavigation（）メソッド&lt;/a&gt;から返された &lt;code&gt;Navigation.extras&lt;/code&gt; オブジェクトを介してこの値にアクセスします。</target>
        </trans-unit>
        <trans-unit id="7d70420c9b5d5dcaf2a90e58e9939aeecc418d9e" translate="yes" xml:space="preserve">
          <source>Developing forms requires design skills (which are out of scope for this page), as well as framework support for &lt;em&gt;two-way data binding, change tracking, validation, and error handling&lt;/em&gt;, which you'll learn about on this page.</source>
          <target state="translated">フォームを開発するには、デザインスキル（このページの範囲外）と、このページで学習する&lt;em&gt;双方向データバインディング、変更追跡、検証、およびエラー処理の&lt;/em&gt;フレームワークサポートが必要です。</target>
        </trans-unit>
        <trans-unit id="31febd42549d5d48fe3c931baf9f040f396e2320" translate="yes" xml:space="preserve">
          <source>Developing schematics for libraries</source>
          <target state="translated">ライブラリ用の回路図の開発</target>
        </trans-unit>
        <trans-unit id="73c1a0ef58c564d4a10d5d0f9429f07214af85c4" translate="yes" xml:space="preserve">
          <source>Dictionary of objects associated with template local variables (e.g. &lt;code&gt;#foo&lt;/code&gt;), keyed by the local variable name.</source>
          <target state="translated">ローカル変数名をキーとする、テンプレートローカル変数（ &lt;code&gt;#foo&lt;/code&gt; など）に関連付けられたオブジェクトのディクショナリ。</target>
        </trans-unit>
        <trans-unit id="d138e770ccb2b52d2c77f539bee53aeb46b6a506" translate="yes" xml:space="preserve">
          <source>Differences with &lt;code&gt;&lt;a href=&quot;upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt; との違い</target>
        </trans-unit>
        <trans-unit id="5205f5f17a0df5d5c03d855d59f41a77eb75f242" translate="yes" xml:space="preserve">
          <source>Different classes can provide the same service. For example, the following code tells the injector to return a &lt;code&gt;BetterLogger&lt;/code&gt; instance when the component asks for a logger using the &lt;code&gt;Logger&lt;/code&gt; token.</source>
          <target state="translated">異なるクラスが同じサービスを提供できます。たとえば、次のコードは、コンポーネントが &lt;code&gt;Logger&lt;/code&gt; トークンを使用してロガーを要求したときに &lt;code&gt;BetterLogger&lt;/code&gt; インスタンスを返すようにインジェクターに指示します。</target>
        </trans-unit>
        <trans-unit id="f312093a46be4a4c362b96e84ae7c5b57668ffd7" translate="yes" xml:space="preserve">
          <source>Different file types have different comment syntax so adjust accordingly.</source>
          <target state="translated">ファイルの種類によってコメントの構文が異なるので、それに応じて調整してください。</target>
        </trans-unit>
        <trans-unit id="8bc5b687513fa24e83b6d7a0c90598defec2723f" translate="yes" xml:space="preserve">
          <source>Different languages have different pluralization rules and grammatical constructions that add complexity to the translation task. You can use regular expressions with the &lt;code&gt;plural&lt;/code&gt; and &lt;code&gt;select&lt;/code&gt; clauses to provide patterns that aid translation in these cases.</source>
          <target state="translated">言語によって、複数形化の規則や文法の構成が異なり、翻訳作業が複雑になります。正規表現を &lt;code&gt;plural&lt;/code&gt; 句と &lt;code&gt;select&lt;/code&gt; 句とともに使用して、これらの場合の変換を支援するパターンを提供できます。</target>
        </trans-unit>
        <trans-unit id="4ad9efe70099a7ad76eb89260a1c6e11dcb99981" translate="yes" xml:space="preserve">
          <source>Different languages have different pluralization rules and grammatical constructions that can make translation difficult. To simplify translation, use International Components for Unicode (ICU) clauses with regular expressions, such as &lt;code&gt;plural&lt;/code&gt; to mark the uses of plural numbers, and &lt;code&gt;select&lt;/code&gt; to mark alternate text choices.</source>
          <target state="translated">言語が異なれば、複数形の規則や文法構造も異なるため、翻訳が困難になる可能性があります。翻訳を簡素化するには、 &lt;code&gt;plural&lt;/code&gt; などの正規表現を含むInternational Components for Unicode（ICU）句を使用して、複数形の使用をマークし、 &lt;code&gt;select&lt;/code&gt; して代替テキストの選択肢をマークします。</target>
        </trans-unit>
        <trans-unit id="fddacc86c58629a7a06e78de09cc7ce3bca5ae83" translate="yes" xml:space="preserve">
          <source>Differential Loading</source>
          <target state="translated">差動荷重</target>
        </trans-unit>
        <trans-unit id="2d7a4dce83d8a83a0203b47ca4aa73a375cb78c8" translate="yes" xml:space="preserve">
          <source>Differential Loading (Two builds w/Conditional Polyfills</source>
          <target state="translated">差動荷重 (条件付きポリフィルを使用した 2 つのビルド)</target>
        </trans-unit>
        <trans-unit id="c0507f371f24db983eb326b7746378ec13825bee" translate="yes" xml:space="preserve">
          <source>Differential builds</source>
          <target state="translated">差動ビルド</target>
        </trans-unit>
        <trans-unit id="c1a1914703c6893ff3a3faabb7a9f5abfbbb5d01" translate="yes" xml:space="preserve">
          <source>Differential loading (two builds w/conditional polyfills)</source>
          <target state="translated">差動荷重 (条件付きポリフィルを使用した2つのビルド)</target>
        </trans-unit>
        <trans-unit id="ef47150250dc01045ca6f30fdb1d8fa1da1bfb0b" translate="yes" xml:space="preserve">
          <source>Differential loading can be explicitly disabled if it causes unexpected issues or you need to target ES5 specifically for legacy browser support.</source>
          <target state="translated">差動読み込みが予期せぬ問題を引き起こす場合や、レガシー ブラウザのサポートのために ES5 をターゲットにする必要がある場合には、差動読み込みを明示的に無効にすることができます。</target>
        </trans-unit>
        <trans-unit id="0954d254844bfdb1e4d3b504564b9474fa8a3b83" translate="yes" xml:space="preserve">
          <source>Differential loading is a strategy that allows your web application to support multiple browsers, but only load the necessary code that the browser needs. When differential loading is enabled the CLI builds two separate bundles as part of your deployed application.</source>
          <target state="translated">差分ロードは、Web アプリケーションが複数のブラウザをサポートし、ブラウザが必要とする必要なコードのみをロードすることを可能にする戦略です。差分ロードを有効にすると、CLI はデプロイされたアプリケーションの一部として 2 つの別々のバンドルを構築します。</target>
        </trans-unit>
        <trans-unit id="8d2d01050bb3ebcdc0e9b5c9da3e30627a86ce04" translate="yes" xml:space="preserve">
          <source>Differential loading is a strategy where the CLI builds two separate bundles as part of your deployed application.</source>
          <target state="translated">差動ローディングは、CLIがデプロイされたアプリケーションの一部として2つの別々のバンドルを構築する戦略です。</target>
        </trans-unit>
        <trans-unit id="e6559e68cd586a9e5aba6c76cebb91e98c156533" translate="yes" xml:space="preserve">
          <source>Differential loading is currently only supported when using &lt;code&gt;es2015&lt;/code&gt; as a compilation &lt;code&gt;&lt;a href=&quot;../api/router/routerlinkwithhref#target&quot;&gt;target&lt;/a&gt;&lt;/code&gt;. When used with targets higher than &lt;code&gt;es2015&lt;/code&gt;, a warning is emitted during build time.</source>
          <target state="translated">現在、差分ロードは、 &lt;code&gt;es2015&lt;/code&gt; をコンパイル &lt;code&gt;&lt;a href=&quot;../api/router/routerlinkwithhref#target&quot;&gt;target&lt;/a&gt;&lt;/code&gt; として使用する場合にのみサポートされています。 &lt;code&gt;es2015&lt;/code&gt; より高いターゲットで使用すると、ビルド時に警告が表示されます。</target>
        </trans-unit>
        <trans-unit id="de3abd2ff8f1d873513f2c8097080de815c3dbc2" translate="yes" xml:space="preserve">
          <source>Differential loading is currently only supported when using &lt;code&gt;es2015&lt;/code&gt; as a compilation target. When used with targets higher than &lt;code&gt;es2015&lt;/code&gt;, the build process emits a warning.</source>
          <target state="translated">差分ロードは現在、 &lt;code&gt;es2015&lt;/code&gt; をコンパイルターゲットとして使用する場合にのみサポートされます。 &lt;code&gt;es2015&lt;/code&gt; より高いターゲットで使用すると、ビルドプロセスは警告を発します。</target>
        </trans-unit>
        <trans-unit id="17198706561cb331fc3c7bb7190d791c80826666" translate="yes" xml:space="preserve">
          <source>Differential loading is supported by default with version 8 and later of the Angular CLI. For each application project in your workspace, you can configure how builds are produced based on the &lt;code&gt;browserslist&lt;/code&gt; and &lt;code&gt;tsconfig.json&lt;/code&gt; files in your application project.</source>
          <target state="translated">差分読み込みは、Angular CLIのバージョン8以降でデフォルトでサポートされています。ワークスペース内のアプリケーションプロジェクトごとに、アプリケーションプロジェクトの &lt;code&gt;browserslist&lt;/code&gt; および &lt;code&gt;tsconfig.json&lt;/code&gt; ファイルに基づいて、ビルドの生成方法を構成できます。</target>
        </trans-unit>
        <trans-unit id="58150dc76bf26b88c5c5b48baaa6443ba5314f52" translate="yes" xml:space="preserve">
          <source>Direct use of the DOM APIs and explicit sanitization calls</source>
          <target state="translated">DOM API の直接使用と明示的なサニタイズコール</target>
        </trans-unit>
        <trans-unit id="164e0b79063f11a2936cf830fb48b8c7054cc118" translate="yes" xml:space="preserve">
          <source>Directive</source>
          <target state="translated">Directive</target>
        </trans-unit>
        <trans-unit id="e4adaa9d656e11f46881b340967de4f601ead5c8" translate="yes" xml:space="preserve">
          <source>Directive and component change detection and lifecycle hooks</source>
          <target state="translated">ディレクティブとコンポーネントの変更検出とライフサイクルフック</target>
        </trans-unit>
        <trans-unit id="1682fe77c47d222324b0302bf367d45dd3f72f4c" translate="yes" xml:space="preserve">
          <source>Directive and component instances have a lifecycle as Angular creates, updates, and destroys them. Developers can tap into key moments in that lifecycle by implementing one or more of the &lt;em&gt;lifecycle hook&lt;/em&gt; interfaces in the Angular &lt;code&gt;core&lt;/code&gt; library.</source>
          <target state="translated">ディレクティブとコンポーネントインスタンスは、Angularがインスタンスを作成、更新、破棄するときにライフサイクルを持ちます。開発者は、Angular &lt;code&gt;core&lt;/code&gt; ライブラリに1つ以上の&lt;em&gt;ライフサイクルフック&lt;/em&gt;インターフェースを実装することにより、そのライフサイクルの主要な瞬間を利用できます。</target>
        </trans-unit>
        <trans-unit id="e2654c073ed5bef1dd759fe92dd6b281c300cd6b" translate="yes" xml:space="preserve">
          <source>Directive automatically applied to Angular form controls that sets CSS classes based on control status.</source>
          <target state="translated">コントロールの状態に応じてCSSクラスを設定するAngularフォームコントロールに自動的に適用されるディレクティブです。</target>
        </trans-unit>
        <trans-unit id="75747f644b900a5f32ad06d340d4e026bf285acd" translate="yes" xml:space="preserve">
          <source>Directive automatically applied to Angular form groups that sets CSS classes based on control status (valid/invalid/dirty/etc).</source>
          <target state="translated">制御状態(valid/invalid/dirty/etc)に基づいてCSSクラスを設定するAngularフォームグループに自動的に適用されるディレクティブ。</target>
        </trans-unit>
        <trans-unit id="1fd55803370b29f5f55ad4e143686d9104e72374" translate="yes" xml:space="preserve">
          <source>Directive classes, like component classes, can implement &lt;a href=&quot;../../guide/lifecycle-hooks&quot;&gt;life-cycle hooks&lt;/a&gt; to influence their configuration and behavior.</source>
          <target state="translated">コンポーネントクラスのようなディレクティブクラスは、&lt;a href=&quot;../../guide/lifecycle-hooks&quot;&gt;ライフサイクルフック&lt;/a&gt;を実装して、その構成と動作に影響を与えることができます。</target>
        </trans-unit>
        <trans-unit id="c7a712e56a0e276f0e4a48dc5e00f75907a458cd" translate="yes" xml:space="preserve">
          <source>Directive configuration</source>
          <target state="translated">ディレクティブ構成</target>
        </trans-unit>
        <trans-unit id="faa9397afbd793cccd58be80adb509a96a8af6c4" translate="yes" xml:space="preserve">
          <source>Directive custom prefix</source>
          <target state="translated">ディレクティブのカスタムプレフィックス</target>
        </trans-unit>
        <trans-unit id="1731bdcdbdffa1afa963e4872f9861768196adf1" translate="yes" xml:space="preserve">
          <source>Directive selectors</source>
          <target state="translated">指令セレクタ</target>
        </trans-unit>
        <trans-unit id="233b1dbe21adf04a0e287966365f0552786ce49b" translate="yes" xml:space="preserve">
          <source>Directive spelling</source>
          <target state="translated">ディレクティブのスペル</target>
        </trans-unit>
        <trans-unit id="28c82071e940360118b0611d5c912a71c32a0100" translate="yes" xml:space="preserve">
          <source>Directives</source>
          <target state="translated">Directives</target>
        </trans-unit>
        <trans-unit id="134c65a3c9a1183f4e598f629537b52066c32c08" translate="yes" xml:space="preserve">
          <source>Directives and binding markup in a component's template modify views based on program data and logic.</source>
          <target state="translated">コンポーネントのテンプレート内のディレクティブとバインディングマークアップは、プログラムのデータとロジックに基づいてビューを変更します。</target>
        </trans-unit>
        <trans-unit id="06b50e6029735d84376f972c0295eb92cee93b36" translate="yes" xml:space="preserve">
          <source>Directives are &lt;a href=&quot;../../guide/glossary#declarable&quot;&gt;declarables&lt;/a&gt;. They must be declared by an NgModule in order to be usable in an app.</source>
          <target state="translated">ディレクティブは&lt;a href=&quot;../../guide/glossary#declarable&quot;&gt;宣言可能&lt;/a&gt;です。アプリで使用できるようにするには、NgModuleで宣言する必要があります。</target>
        </trans-unit>
        <trans-unit id="8bcaad152be1bbb16300fb098f14d0ff672bd855" translate="yes" xml:space="preserve">
          <source>Directives have lifecycle hooks too. A &lt;code&gt;SpyDirective&lt;/code&gt; can log when the element it spies upon is created or destroyed using the &lt;code&gt;ngOnInit&lt;/code&gt; and &lt;code&gt;ngOnDestroy&lt;/code&gt; hooks.</source>
          <target state="translated">ディレクティブにもライフサイクルフックがあります。A &lt;code&gt;SpyDirective&lt;/code&gt; は、要素は、それが作成されるか、または使用して破壊された時にスパイときにログインでき &lt;code&gt;ngOnInit&lt;/code&gt; と &lt;code&gt;ngOnDestroy&lt;/code&gt; フック。</target>
        </trans-unit>
        <trans-unit id="bd4e162d053d9047f8191ab23f8513d857e41080" translate="yes" xml:space="preserve">
          <source>Directives in the &lt;code&gt;@angular/forms&lt;/code&gt; package used to have &lt;code&gt;any[]&lt;/code&gt; as a type of validators and asyncValidators arguments in constructors. Now these arguments are properly typed, so if your code relies on directive constructor types it may require some updates to improve type safety. See &lt;a href=&quot;https://github.com/angular/angular/pull/38944&quot;&gt;PR 38994&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;@angular/forms&lt;/code&gt; パッケージのディレクティブは、コンストラクターのバリデーターおよびasyncValidators引数のタイプとして &lt;code&gt;any[]&lt;/code&gt; を持っていました。現在、これらの引数は適切に型指定されているため、コードがディレクティブコンストラクター型に依存している場合は、型の安全性を向上させるためにいくつかの更新が必要になる場合があります。&lt;a href=&quot;https://github.com/angular/angular/pull/38944&quot;&gt;PR38994を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="97bea3fa344a86af3d956e5d588feb9cda5f972b" translate="yes" xml:space="preserve">
          <source>Directives overview</source>
          <target state="translated">ディレクティブの概要</target>
        </trans-unit>
        <trans-unit id="26c94017c46cdc88d61d6923d8b0eddeaf91879d" translate="yes" xml:space="preserve">
          <source>Directives that are used in an exported module (but not exported themselves) are exported publicly (previously, the compiler would automatically write a private, aliased export that it could use its global knowledge to resolve downstream).</source>
          <target state="translated">エクスポートされたモジュールで使用される (それ自体はエクスポートされない)ディレクティブは、パブリックにエクスポートされます (以前は、コンパイラが自動的にプライベートなエイリアスのエクスポートを書き、そのグローバルな知識を使用して下流で解決することができました)。</target>
        </trans-unit>
        <trans-unit id="26592a9a2f4cddfbb4afebe8ce3df3718441afde" translate="yes" xml:space="preserve">
          <source>Directives that behave like &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; can declare that they want the same treatment by including a static member marker that is a signal to the template compiler to treat them like &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt;. This static member for &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; is:</source>
          <target state="translated">&lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; のように動作するディレクティブは、テンプレートコンパイラに &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; のように処理するシグナルである静的メンバーマーカーを含めることで、同じ処理が必要であることを宣言できます。 &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; のこの静的メンバーは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="e413521484883d1b26956d0c108786e5176aee96" translate="yes" xml:space="preserve">
          <source>Directives typically raise custom events with an Angular &lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;. The directive creates an &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt; and exposes it as a property. The directive calls &lt;code&gt;EventEmitter.emit(payload)&lt;/code&gt; to fire an event, passing in a message payload, which can be anything. Parent directives listen for the event by binding to this property and accessing the payload through the &lt;code&gt;$event&lt;/code&gt; object.</source>
          <target state="translated">ディレクティブは通常、Angular &lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;を使用してカスタムイベントを発生させます。ディレクティブは、 &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt; を作成し、それをプロパティとして公開します。このディレクティブは、 &lt;code&gt;EventEmitter.emit(payload)&lt;/code&gt; を呼び出してイベントを起動し、メッセージペイロードを渡します。親ディレクティブは、このプロパティにバインドし、 &lt;code&gt;$event&lt;/code&gt; オブジェクトを介してペイロードにアクセスすることにより、イベントをリッスンします。</target>
        </trans-unit>
        <trans-unit id="e162e9d83bd60ff3d908ebf32714d5b5149cc574" translate="yes" xml:space="preserve">
          <source>Directly enables or disables all usage analytics for the user, or prompts the user to set the status interactively, or sets the default status for the project.</source>
          <target state="translated">ユーザーのすべての使用状況分析を直接有効または無効にしたり、ユーザーに対話的にステータスを設定するように促したり、プロジェクトのデフォルトのステータスを設定したりします。</target>
        </trans-unit>
        <trans-unit id="1e78a95d04636868cba604820332052c052f098e" translate="yes" xml:space="preserve">
          <source>Disable Angular's development mode, which turns off assertions and other checks within the framework.</source>
          <target state="translated">フレームワーク内のアサーションやその他のチェックをオフにするAngularの開発モードを無効にします。</target>
        </trans-unit>
        <trans-unit id="c502fe3e92db5333454c3f52453a1907dc9251e6" translate="yes" xml:space="preserve">
          <source>Disable animations application-wide</source>
          <target state="translated">アプリケーション全体でアニメーションを無効にする</target>
        </trans-unit>
        <trans-unit id="b7dd4b431d218225482d12b809b87e3de7196683" translate="yes" xml:space="preserve">
          <source>Disable checking of a binding expression by surrounding the expression in a call to the &lt;a href=&quot;template-expression-operators&quot;&gt;&lt;code&gt;$any()&lt;/code&gt; cast pseudo-function&lt;/a&gt;. The compiler treats it as a cast to the &lt;code&gt;any&lt;/code&gt; type just like in TypeScript when a &lt;code&gt;&amp;lt;any&amp;gt;&lt;/code&gt; or &lt;code&gt;as any&lt;/code&gt; cast is used.</source>
          <target state="translated">&lt;a href=&quot;template-expression-operators&quot;&gt; &lt;code&gt;$any()&lt;/code&gt; キャスト疑似関数の&lt;/a&gt;呼び出しで式を囲むことにより、バインディング式のチェックを無効にします。コンパイラは、 &lt;code&gt;&amp;lt;any&amp;gt;&lt;/code&gt; が使用さ &lt;code&gt;as any&lt;/code&gt; 場合、TypeScriptと同様に、 &lt;code&gt;any&lt;/code&gt; タイプへのキャストとして、または任意のキャストとして扱います。</target>
        </trans-unit>
        <trans-unit id="fa498c6d7585475093bb59ac3e4d903e7d385155" translate="yes" xml:space="preserve">
          <source>Disable checking of a binding expression by surrounding the expression in a call to the &lt;a href=&quot;template-syntax&quot;&gt;&lt;code&gt;$any()&lt;/code&gt; cast pseudo-function&lt;/a&gt;. The compiler treats it as a cast to the &lt;code&gt;any&lt;/code&gt; type just like in TypeScript when a &lt;code&gt;&amp;lt;any&amp;gt;&lt;/code&gt; or &lt;code&gt;as any&lt;/code&gt; cast is used.</source>
          <target state="translated">&lt;a href=&quot;template-syntax&quot;&gt; &lt;code&gt;$any()&lt;/code&gt; キャスト疑似関数の&lt;/a&gt;呼び出しで式を囲むことにより、バインディング式のチェックを無効にします。コンパイラは、 &lt;code&gt;&amp;lt;any&amp;gt;&lt;/code&gt; または &lt;code&gt;as any&lt;/code&gt; キャストが使用されている場合、TypeScriptと同様に、 &lt;code&gt;any&lt;/code&gt; 型へのキャストとしてそれを扱います。</target>
        </trans-unit>
        <trans-unit id="5fb8cdddd489a8d9ed5269e9075f3511c841c9dd" translate="yes" xml:space="preserve">
          <source>Disable strict null checks in Angular templates completely.</source>
          <target state="translated">Angularテンプレートのstrict nullチェックを完全に無効にします。</target>
        </trans-unit>
        <trans-unit id="3a3867cb253d30cffa4f5b7f2c23506910276794" translate="yes" xml:space="preserve">
          <source>Disable the &lt;strong&gt;Submit&lt;/strong&gt; button until the form is valid.</source>
          <target state="translated">フォームが有効になるまで[&lt;strong&gt;送信&lt;/strong&gt;]ボタンを無効にします。</target>
        </trans-unit>
        <trans-unit id="c941ff72a9b24436d3e952f909f1d7e77a6f5100" translate="yes" xml:space="preserve">
          <source>Disable the default XSRF protection.</source>
          <target state="translated">デフォルトのXSRF保護を無効にします。</target>
        </trans-unit>
        <trans-unit id="eb9abe8b988d1d2892f78a259e71850606b0f9bf" translate="yes" xml:space="preserve">
          <source>Disable the form&amp;rsquo;s &lt;em&gt;Submit&lt;/em&gt; button until the form is valid.</source>
          <target state="translated">フォームが有効になるまで、フォームの[ &lt;em&gt;送信&lt;/em&gt; ]ボタンを無効にします。</target>
        </trans-unit>
        <trans-unit id="47dd9d43d5f5f62cbd433b889406a52005ee82ec" translate="yes" xml:space="preserve">
          <source>Disabled controls are exempt from validation checks and are not included in the aggregate value of their ancestor controls.</source>
          <target state="translated">無効化されたコントロールは検証チェックの対象外であり、その祖先コントロールの集合値には含まれません。</target>
        </trans-unit>
        <trans-unit id="5ae642a07e4ba465762a1b462bf162baf3a09029" translate="yes" xml:space="preserve">
          <source>Disables Angular tools.</source>
          <target state="translated">Angularのツールを無効にします。</target>
        </trans-unit>
        <trans-unit id="161f7e4cab69df56dfaa6ff79ced90206f307f8a" translate="yes" xml:space="preserve">
          <source>Disables automatic scroll restoration provided by the browser. See also &lt;a href=&quot;https://developers.google.com/web/updates/2015/09/history-api-scroll-restoration&quot;&gt;window.history.scrollRestoration info&lt;/a&gt;.</source>
          <target state="translated">ブラウザが提供する自動スクロール復元を無効にします。&lt;a href=&quot;https://developers.google.com/web/updates/2015/09/history-api-scroll-restoration&quot;&gt;window.history.scrollRestoration info&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="7239e7edb443b9ef5c9fec4a7006576b15faeffb" translate="yes" xml:space="preserve">
          <source>Disables the control. This means the control is exempt from validation checks and excluded from the aggregate value of any parent. Its status is &lt;code&gt;DISABLED&lt;/code&gt;.</source>
          <target state="translated">コントロールを無効にします。つまり、コントロールは検証チェックから除外され、親の集計値から除外されます。そのステータスは &lt;code&gt;DISABLED&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="49e06b6442e79995b5aa5867bdc26cb341c23f1c" translate="yes" xml:space="preserve">
          <source>Disabling Animations</source>
          <target state="translated">アニメーションを無効にする</target>
        </trans-unit>
        <trans-unit id="f3b4e520315f40e64f137fc24078069b1c75376b" translate="yes" xml:space="preserve">
          <source>Disabling all animations</source>
          <target state="translated">すべてのアニメーションを無効にする</target>
        </trans-unit>
        <trans-unit id="fa56a5729e4b504e45afd1c5470855dbccf0c4c0" translate="yes" xml:space="preserve">
          <source>Disabling an animation on an HTML element</source>
          <target state="translated">HTML 要素のアニメーションを無効にする</target>
        </trans-unit>
        <trans-unit id="1c34c40ced0ea58defc7d87903d8f5e5a3c5df00" translate="yes" xml:space="preserve">
          <source>Disabling type checking using &lt;code&gt;$any()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;$any()&lt;/code&gt; を使用して型チェックを無効にする</target>
        </trans-unit>
        <trans-unit id="2cdfcdd1a412a8c6a67bac7adc1e32bbe75bc366" translate="yes" xml:space="preserve">
          <source>Disallow &lt;code&gt;local-part&lt;/code&gt; (the part before the &lt;code&gt;@&lt;/code&gt; symbol) to begin or end with a period (&lt;code&gt;.&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;local-part&lt;/code&gt; （ &lt;code&gt;@&lt;/code&gt; 記号の前の部分）をピリオド（ &lt;code&gt;.&lt;/code&gt; ）で開始または終了することを禁止します。</target>
        </trans-unit>
        <trans-unit id="e8edb13b82dcb96a8fe82f7bae4cd7f33b470b95" translate="yes" xml:space="preserve">
          <source>Disallow &lt;code&gt;local-part&lt;/code&gt; to be longer than 64 characters.</source>
          <target state="translated">&lt;code&gt;local-part&lt;/code&gt; が64文字を超えることを禁止します。</target>
        </trans-unit>
        <trans-unit id="6acc3c163f352ae3c5fcd3ac0f7d7a67ce1d0f50" translate="yes" xml:space="preserve">
          <source>Disallow the whole address to be longer than 254 characters.</source>
          <target state="translated">アドレス全体を254文字以上にすることを禁止します。</target>
        </trans-unit>
        <trans-unit id="17e601d66c409630ceeac0a0e471360854bc32fa" translate="yes" xml:space="preserve">
          <source>Discard all remaining periodic tasks.</source>
          <target state="translated">残っている定期的なタスクをすべて破棄します。</target>
        </trans-unit>
        <trans-unit id="27ff848437a6047575269ca76c310fc72e880c3d" translate="yes" xml:space="preserve">
          <source>Disclaimer: Dates are offered as general guidance and will be adjusted by us when necessary to ensure delivery of a high-quality platform.</source>
          <target state="translated">免責事項:日付は一般的な目安として提供されており、高品質のプラットフォームを提供するために必要に応じて当社が調整します。</target>
        </trans-unit>
        <trans-unit id="413c48586a41c6e13f4f84647a0a8c96368993ad" translate="yes" xml:space="preserve">
          <source>Disclaimer: The dates are offered as general guidance and may be adjusted by us when necessary to ensure delivery of a high-quality platform.</source>
          <target state="translated">免責事項:日付は一般的なガイダンスとして提供されており、高品質のプラットフォームを確実に提供するために必要に応じて当社が調整することがあります。</target>
        </trans-unit>
        <trans-unit id="8fb937b602b4f2ef21c7fab00ac15de3b3ba49ea" translate="yes" xml:space="preserve">
          <source>Discussion</source>
          <target state="translated">Discussion</target>
        </trans-unit>
        <trans-unit id="6e8d5a186dc622a3626ee7e4c637ddf280fc7288" translate="yes" xml:space="preserve">
          <source>Display a Heroes List</source>
          <target state="translated">英雄一覧を表示する</target>
        </trans-unit>
        <trans-unit id="d09718b254612bcd98c527cdae5927716a254664" translate="yes" xml:space="preserve">
          <source>Display a selection list</source>
          <target state="translated">選択リストを表示する</target>
        </trans-unit>
        <trans-unit id="50ab06bc90999c25d476ad86b84dbf4119bc834a" translate="yes" xml:space="preserve">
          <source>Display additional details about internal operations during execution.</source>
          <target state="translated">実行中の内部操作の詳細を追加表示します。</target>
        </trans-unit>
        <trans-unit id="936697d64458ff8ca788647c7b0045284d1aa4df" translate="yes" xml:space="preserve">
          <source>Display the cart items</source>
          <target state="translated">カートのアイテムを表示する</target>
        </trans-unit>
        <trans-unit id="dfa86afacc9fd4bee56e5c9b2e4c921a1bdc9fe2" translate="yes" xml:space="preserve">
          <source>Display the cart items.</source>
          <target state="translated">カートのアイテムを表示します。</target>
        </trans-unit>
        <trans-unit id="12934993315662c08dc332b832a6fcfe68bd9435" translate="yes" xml:space="preserve">
          <source>Display the current status of &lt;code&gt;profileForm&lt;/code&gt; using interpolation.</source>
          <target state="translated">補間を使用して &lt;code&gt;profileForm&lt;/code&gt; の現在のステータスを表示します。</target>
        </trans-unit>
        <trans-unit id="a71eb74b057514c0e70e19d067ae99e621eb5b34" translate="yes" xml:space="preserve">
          <source>Display the form</source>
          <target state="translated">フォームを表示する</target>
        </trans-unit>
        <trans-unit id="a53cc6555efa0ad0290f5ac683dc5f839d979143" translate="yes" xml:space="preserve">
          <source>Display the form array in a template.</source>
          <target state="translated">テンプレートにフォーム配列を表示します。</target>
        </trans-unit>
        <trans-unit id="293c04f1dc27393bab94e0e1df1f4a5820a7e2a8" translate="yes" xml:space="preserve">
          <source>Display the message from &lt;code&gt;HeroService&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;HeroService&lt;/code&gt; からのメッセージを表示する</target>
        </trans-unit>
        <trans-unit id="8391500f52f913bef2f5436777cabddfd5197d63" translate="yes" xml:space="preserve">
          <source>Display the new product alert component as a child of the product list.</source>
          <target state="translated">新製品アラートコンポーネントを製品リストの子として表示します。</target>
        </trans-unit>
        <trans-unit id="26ac8e342c916304fc61037d8105baf99edd4c3e" translate="yes" xml:space="preserve">
          <source>Display validation errors to users and enable or disable form controls based on the form status.</source>
          <target state="translated">ユーザーに検証エラーを表示し、フォームの状態に基づいてフォームコントロールを有効または無効にします。</target>
        </trans-unit>
        <trans-unit id="187db4f52e17ecfca5ae1efe1dac6099dd2a3091" translate="yes" xml:space="preserve">
          <source>Display validation errors to users and enable/disable form controls.</source>
          <target state="translated">ユーザーに検証エラーを表示し、フォームコントロールを有効/無効にします。</target>
        </trans-unit>
        <trans-unit id="64e4975e075a85e6e6486a7508b2006fea68b3d0" translate="yes" xml:space="preserve">
          <source>Displayed text is sometimes supplied as the value of an attribute, rather than the content of tag. For example, if your template has an image with a &lt;code&gt;title&lt;/code&gt; attribute, the text value of the &lt;code&gt;title&lt;/code&gt; attribute needs to be translated.</source>
          <target state="translated">表示されるテキストは、タグのコンテンツではなく、属性の値として提供される場合があります。あなたのテンプレートが持つイメージがある場合たとえば、 &lt;code&gt;title&lt;/code&gt; 属性を、のテキスト値 &lt;code&gt;title&lt;/code&gt; 属性を翻訳する必要があります。</target>
        </trans-unit>
        <trans-unit id="f76593be8dd0141a5ddaffd2686e576e08afc5b7" translate="yes" xml:space="preserve">
          <source>Displaying Data</source>
          <target state="translated">データの表示</target>
        </trans-unit>
        <trans-unit id="5e6ea7b73ace73f546509526adcb804d71a19f83" translate="yes" xml:space="preserve">
          <source>Displaying a 404 page</source>
          <target state="translated">404ページの表示</target>
        </trans-unit>
        <trans-unit id="3382d66116a9a6c0577e8a5ed1325809b441a626" translate="yes" xml:space="preserve">
          <source>Displaying a code fragment</source>
          <target state="translated">コードフラグメントの表示</target>
        </trans-unit>
        <trans-unit id="a3d4457b2aebe7498f3aec39f2bcb0dfa5ebf35f" translate="yes" xml:space="preserve">
          <source>Displaying a form control value</source>
          <target state="translated">フォームコントロールの値を表示する</target>
        </trans-unit>
        <trans-unit id="ec7d1c82071d7dc99c5bd5ebb23d191f80fdd12b" translate="yes" xml:space="preserve">
          <source>Displaying dates, number, percentages, and currencies in a local format.</source>
          <target state="translated">日付、数字、パーセント、通貨をローカル形式で表示します。</target>
        </trans-unit>
        <trans-unit id="c9fb97d71900591a885c42ac4de47f4b8ce3cb66" translate="yes" xml:space="preserve">
          <source>Displaying form status</source>
          <target state="translated">フォームの状態を表示する</target>
        </trans-unit>
        <trans-unit id="9a81501c320e1623a9a0ece8fddf13ed90c88c68" translate="yes" xml:space="preserve">
          <source>Displaying heroes</source>
          <target state="translated">英雄の表示</target>
        </trans-unit>
        <trans-unit id="3e10904e7cc24806178428e12412202d516a97ad" translate="yes" xml:space="preserve">
          <source>Displaying multiple routes in named outlets</source>
          <target state="translated">名前付きアウトレットで複数のルートを表示する</target>
        </trans-unit>
        <trans-unit id="437c35fd09d5880b944f92117bf1891a887a73a2" translate="yes" xml:space="preserve">
          <source>Displaying the component</source>
          <target state="translated">コンポーネントの表示</target>
        </trans-unit>
        <trans-unit id="87a45e164b445cbb2662704d3bf176b7ed450902" translate="yes" xml:space="preserve">
          <source>Displaying the first page quickly can be critical for user engagement. &lt;a href=&quot;https://www.thinkwithgoogle.com/marketing-resources/data-measurement/mobile-page-speed-new-industry-benchmarks/&quot;&gt;53 percent of mobile site visits are abandoned&lt;/a&gt; if pages take longer than 3 seconds to load. Your app may have to launch faster to engage these users before they decide to do something else.</source>
          <target state="translated">最初のページをすばやく表示することは、ユーザーエンゲージメントにとって非常に重要です。ページの読み込みに3秒以上かかると&lt;a href=&quot;https://www.thinkwithgoogle.com/marketing-resources/data-measurement/mobile-page-speed-new-industry-benchmarks/&quot;&gt;、モバイルサイトへの訪問の53％が放棄さ&lt;/a&gt;れます。これらのユーザーが何か他のことをする前にユーザーを引き付けるには、アプリをより速く起動する必要がある場合があります。</target>
        </trans-unit>
        <trans-unit id="3018fd14cb6dbd43a38a8c8b612c385bb6ce4a07" translate="yes" xml:space="preserve">
          <source>Displaying the first page quickly can be critical for user engagement. Pages that load faster perform better, &lt;a href=&quot;https://web.dev/shopping-for-speed-on-ebay/&quot;&gt;even with changes as small as 100ms&lt;/a&gt;. Your app may have to launch faster to engage these users before they decide to do something else.</source>
          <target state="translated">最初のページをすばやく表示することは、ユーザーエンゲージメントにとって重要な場合があります。読み込みが速いページは&lt;a href=&quot;https://web.dev/shopping-for-speed-on-ebay/&quot;&gt;、わずか100ミリ秒の変更&lt;/a&gt;でもパフォーマンスが向上します。これらのユーザーが何か他のことをすることを決定する前に、アプリをより速く起動してエンゲージする必要がある場合があります。</target>
        </trans-unit>
        <trans-unit id="be6aac75dad35c792e30b1727ff36040ea8fd75b" translate="yes" xml:space="preserve">
          <source>Displays DOM sub-trees that match the switch expression value, or failing that, DOM sub-trees that match the switch expression's pluralization category.</source>
          <target state="translated">スイッチ式の値にマッチする DOM サブツリーを表示します。</target>
        </trans-unit>
        <trans-unit id="4a726d949246170017d0159180d56c3cdb4d23e0" translate="yes" xml:space="preserve">
          <source>Displays a message that the product has been added to the cart</source>
          <target state="translated">商品がカートに追加された旨のメッセージが表示されます。</target>
        </trans-unit>
        <trans-unit id="3fd258589ec3413ce0934a63592705f8199a5271" translate="yes" xml:space="preserve">
          <source>Displays a message that you've added a product to the cart.</source>
          <target state="translated">カートに商品を追加した旨のメッセージを表示します。</target>
        </trans-unit>
        <trans-unit id="15d60f9bd1f4d59065ade7eb83ac01154729d53b" translate="yes" xml:space="preserve">
          <source>Displays the application component for the active URL. Manages navigation from one component to the next.</source>
          <target state="translated">アクティブな URL のアプリケーションコンポーネントを表示します。1つのコンポーネントから次のコンポーネントへのナビゲーションを管理します。</target>
        </trans-unit>
        <trans-unit id="b75673d407de8304eb7361d00582b1562567807f" translate="yes" xml:space="preserve">
          <source>Displays the collection in the order specified by the expression. In this example, the movie title orders the &lt;code&gt;movieList&lt;/code&gt;.</source>
          <target state="translated">式で指定された順序でコレクションを表示します。この例では、映画のタイトルが &lt;code&gt;movieList&lt;/code&gt; を注文しています。</target>
        </trans-unit>
        <trans-unit id="4f25bbe16efc9f89794f9928c10c073638f3c99c" translate="yes" xml:space="preserve">
          <source>Dispose of running hybrid AngularJS / Angular application.</source>
          <target state="translated">実行中のハイブリッドAngularJS/Angularアプリケーションを破棄します。</target>
        </trans-unit>
        <trans-unit id="5f8ab14727ef35723fd40bc395d5a15a9eb1136f" translate="yes" xml:space="preserve">
          <source>Disposes of the router.</source>
          <target state="translated">ルータを廃棄します。</target>
        </trans-unit>
        <trans-unit id="b6da7cb7884b114d486da57635c6c0cf7a201e60" translate="yes" xml:space="preserve">
          <source>Distributing the Angular compiler as a plugin of the TypeScript compiler will substantially improve developers' build performance and reduce maintenance costs.</source>
          <target state="translated">Angular コンパイラを TypeScript コンパイラのプラグインとして配布することで、開発者のビルドパフォーマンスを大幅に向上させ、メンテナンスコストを削減することができます。</target>
        </trans-unit>
        <trans-unit id="08c2a554ac7554886705572fdeb828f2042d79a9" translate="yes" xml:space="preserve">
          <source>Dive deeper into the capabilities and advanced feature of the Angular DI system in the following pages:</source>
          <target state="translated">次のページでは、Angular DIシステムの機能と高度な機能をより深く掘り下げています。</target>
        </trans-unit>
        <trans-unit id="03779f03f1f9115d62b4f94d8a480686fae463e3" translate="yes" xml:space="preserve">
          <source>Do &lt;em&gt;not&lt;/em&gt; declare the following:</source>
          <target state="translated">次のもの&lt;em&gt;は&lt;/em&gt;宣言し&lt;em&gt;ないで&lt;/em&gt;ください。</target>
        </trans-unit>
        <trans-unit id="2475d66e74a14160938453ef0e85c7c2d0d851ed" translate="yes" xml:space="preserve">
          <source>Do &lt;em&gt;not&lt;/em&gt; reference the &lt;code&gt;userServiceStub&lt;/code&gt; object that's provided to the testing module in the body of your test. &lt;strong&gt;It does not work!&lt;/strong&gt; The &lt;code&gt;userService&lt;/code&gt; instance injected into the component is a completely &lt;em&gt;different&lt;/em&gt; object, a clone of the provided &lt;code&gt;userServiceStub&lt;/code&gt;.</source>
          <target state="translated">テストの本文でテストモジュールに提供されている &lt;code&gt;userServiceStub&lt;/code&gt; オブジェクトを参照し&lt;em&gt;ない&lt;/em&gt;でください。&lt;strong&gt;それは動作しません！&lt;/strong&gt; &lt;code&gt;userService&lt;/code&gt; コンポーネントに注入インスタンスは完全に&lt;em&gt;異なる&lt;/em&gt;オブジェクト、提供のクローン &lt;code&gt;userServiceStub&lt;/code&gt; 。&lt;strong&gt;&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="12870bcd74aac23d50d0b29f666f89ec81c28f1f" translate="yes" xml:space="preserve">
          <source>Do a change detection run to make sure there are no pending changes. Throws an exceptions if there are.</source>
          <target state="translated">変更検出を実行して、保留中の変更がないことを確認します。保留されている場合は例外をスローします。</target>
        </trans-unit>
        <trans-unit id="eb2dc836b8c593cdbd90fa95783598016fcbf09f" translate="yes" xml:space="preserve">
          <source>Do a change detection run to make sure there were no changes.</source>
          <target state="translated">変更検出を実行して、変更がなかったことを確認します。</target>
        </trans-unit>
        <trans-unit id="2313636875302c5d743751b15211e002d72e6da2" translate="yes" xml:space="preserve">
          <source>Do not create a node that is both a &lt;em&gt;header&lt;/em&gt; and an &lt;em&gt;item&lt;/em&gt; node. That is, do not specify the &lt;code&gt;url&lt;/code&gt; property of a &lt;em&gt;header&lt;/em&gt; node.</source>
          <target state="translated">&lt;em&gt;ヘッダー&lt;/em&gt;と&lt;em&gt;アイテム&lt;/em&gt;ノードの両方であるノードを作成しないでください。つまり、&lt;em&gt;ヘッダー&lt;/em&gt;ノードの &lt;code&gt;url&lt;/code&gt; プロパティを指定しないでください。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="faa0a4df964bbffd5263e64e7f24f3bd50f08908" translate="yes" xml:space="preserve">
          <source>Do not depend on this.</source>
          <target state="translated">これに頼ってはいけません。</target>
        </trans-unit>
        <trans-unit id="1347b0bda514ee25e75111d5f7406049b122ac68" translate="yes" xml:space="preserve">
          <source>Do not import &lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; in any other module. &lt;em&gt;Feature modules&lt;/em&gt; and &lt;em&gt;lazy-loaded modules&lt;/em&gt; should import &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; instead. They need the common directives. They don't need to re-install the app-wide providers.</source>
          <target state="translated">他のモジュールに &lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; をインポートしないでください。&lt;em&gt;機能モジュール&lt;/em&gt;と&lt;em&gt;遅延読み込みモジュール&lt;/em&gt;は、代わりに &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; をインポートする必要があります。彼らは共通の指令を必要としています。アプリ全体のプロバイダーを再インストールする必要はありません。</target>
        </trans-unit>
        <trans-unit id="b53aacf7cfdb75cab36ee91ea58b40ba72ec414f" translate="yes" xml:space="preserve">
          <source>Do not re-configure &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; after calling &lt;code&gt;createComponent&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;createComponent&lt;/code&gt; を呼び出した後に &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; を再構成しないでください。</target>
        </trans-unit>
        <trans-unit id="8a23b6ef2227e6ccff39230682cb9bbb0db07d40" translate="yes" xml:space="preserve">
          <source>Do not re-configure the &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; after calling &lt;code&gt;compileComponents()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;compileComponents()&lt;/code&gt; を呼び出した後に &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; を再構成しないでください。</target>
        </trans-unit>
        <trans-unit id="766289fcaf6f3358a5de785cef51decc48e7fed0" translate="yes" xml:space="preserve">
          <source>Do not refer to ambient types in metadata expressions.</source>
          <target state="translated">メタデータ表現では、アンビエント型を参照しないでください。</target>
        </trans-unit>
        <trans-unit id="d6405f3e12cf5c79eef4bce2326b3e7580784498" translate="yes" xml:space="preserve">
          <source>Do not retry &lt;strong&gt;authentication&lt;/strong&gt; requests, since these should only be initiated by user action. We don't want to lock out user accounts with repeated login requests that the user has not initiated.</source>
          <target state="translated">&lt;strong&gt;認証&lt;/strong&gt;要求はユーザーの操作によってのみ開始されるため、再試行しないでください。ユーザーが開始していないログイン要求が繰り返されることでユーザーアカウントをロックアウトしたくない。</target>
        </trans-unit>
        <trans-unit id="28a19ab23e9fe883d6e7f97200affa843fe8c5f9" translate="yes" xml:space="preserve">
          <source>Do not use &lt;code&gt;&lt;a href=&quot;createangularjstestingmodule&quot;&gt;createAngularJSTestingModule&lt;/a&gt;&lt;/code&gt; in the same spec as &lt;code&gt;&lt;a href=&quot;createangulartestingmodule&quot;&gt;createAngularTestingModule&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">使用しないでください &lt;code&gt;&lt;a href=&quot;createangularjstestingmodule&quot;&gt;createAngularJSTestingModule&lt;/a&gt;&lt;/code&gt; を同じ仕様で &lt;code&gt;&lt;a href=&quot;createangulartestingmodule&quot;&gt;createAngularTestingModule&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3a5db8d50567ea1e510a8a39e340d4f4053b0f11" translate="yes" xml:space="preserve">
          <source>Do not use &lt;code&gt;&lt;a href=&quot;createangulartestingmodule&quot;&gt;createAngularTestingModule&lt;/a&gt;&lt;/code&gt; in the same spec as &lt;code&gt;&lt;a href=&quot;createangularjstestingmodule&quot;&gt;createAngularJSTestingModule&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">使用しないでください &lt;code&gt;&lt;a href=&quot;createangulartestingmodule&quot;&gt;createAngularTestingModule&lt;/a&gt;&lt;/code&gt; を同じ仕様で &lt;code&gt;&lt;a href=&quot;createangularjstestingmodule&quot;&gt;createAngularJSTestingModule&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2335b0f690b63608971fef94146a83235635e315" translate="yes" xml:space="preserve">
          <source>Do not use the real path when resolving modules.</source>
          <target state="translated">モジュールを解決する際には、実パスを使用しないでください。</target>
        </trans-unit>
        <trans-unit id="7349e20f9641df56be64c229cc31b086928d6118" translate="yes" xml:space="preserve">
          <source>Do not use the real path when resolving modules. If unset then will default to &lt;code&gt;true&lt;/code&gt; if NodeJS option --preserve-symlinks is set.</source>
          <target state="translated">モジュールを解決するときは、実際のパスを使用しないでください。設定されてい &lt;code&gt;true&lt;/code&gt; 場合、NodeJSオプション--preserve-symlinksが設定されていれば、デフォルトでtrueになります。</target>
        </trans-unit>
        <trans-unit id="e79dc690e68fe885deb4f02b28c242039901b6e5" translate="yes" xml:space="preserve">
          <source>Do not use this in a production server environment. Use pre-compiled &lt;a href=&quot;../core/ngmodulefactory&quot;&gt;&lt;code&gt;NgModuleFactory&lt;/code&gt;&lt;/a&gt; with &lt;a href=&quot;rendermodulefactory&quot;&gt;&lt;code&gt;renderModuleFactory&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">本番サーバー環境では使用しないでください。代わりに、あらかじめコンパイルされた&lt;a href=&quot;../core/ngmodulefactory&quot;&gt; &lt;code&gt;NgModuleFactory&lt;/code&gt; &lt;/a&gt;を&lt;a href=&quot;rendermodulefactory&quot;&gt; &lt;code&gt;renderModuleFactory&lt;/code&gt; &lt;/a&gt;とともに使用してください。</target>
        </trans-unit>
        <trans-unit id="e95b4a5123622bbdb2e193331691ccb1de8fa81e" translate="yes" xml:space="preserve">
          <source>Do this by injecting the router and logging to the console its &lt;code&gt;config&lt;/code&gt; property. For example, update the &lt;code&gt;AppModule&lt;/code&gt; as follows and look in the browser console window to see the finished route configuration.</source>
          <target state="translated">これを行うには、ルーターを挿入し、その &lt;code&gt;config&lt;/code&gt; プロパティをコンソールに記録します。たとえば、次のように &lt;code&gt;AppModule&lt;/code&gt; を更新し、ブラウザのコンソールウィンドウを見て、完成したルート構成を確認します。</target>
        </trans-unit>
        <trans-unit id="63af3a5e4c9dc50cfdde2fcbffecebe94bfb4d50" translate="yes" xml:space="preserve">
          <source>Do this only in the beginning to avoid accidentally deleting your own tests and git setup!</source>
          <target state="translated">誤って自分のテストや git の設定を削除してしまうのを防ぐために、最初のうちだけはこれを実行しましょう!</target>
        </trans-unit>
        <trans-unit id="20cca558f89d5711c8f3da0efc9477ae18de9033" translate="yes" xml:space="preserve">
          <source>Do this with the &lt;code&gt;&lt;a href=&quot;../api/service-worker/swupdate#checkForUpdate&quot;&gt;checkForUpdate()&lt;/a&gt;&lt;/code&gt; method:</source>
          <target state="translated">これは、 &lt;code&gt;&lt;a href=&quot;../api/service-worker/swupdate#checkForUpdate&quot;&gt;checkForUpdate()&lt;/a&gt;&lt;/code&gt; メソッドで行います。</target>
        </trans-unit>
        <trans-unit id="a1eb87263601a93da06dcb27bb7561ee33d2bc4d" translate="yes" xml:space="preserve">
          <source>Do this with the &lt;code&gt;checkForUpdate()&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;checkForUpdate()&lt;/code&gt; メソッドを使用してこれを行います。</target>
        </trans-unit>
        <trans-unit id="78ddf7d15d9eadd3b6e0343a1c6248aa24d007b7" translate="yes" xml:space="preserve">
          <source>Do you need a &lt;code&gt;Routing Module&lt;/code&gt;?</source>
          <target state="translated">&lt;code&gt;Routing Module&lt;/code&gt; が必要ですか？</target>
        </trans-unit>
        <trans-unit id="974e4b1b193a71bcf82334316bb8290d4d24ce87" translate="yes" xml:space="preserve">
          <source>DoBootstrap</source>
          <target state="translated">DoBootstrap</target>
        </trans-unit>
        <trans-unit id="531f9022ed7522c3f7c2f8318631044b8f144ea4" translate="yes" xml:space="preserve">
          <source>DoCheck</source>
          <target state="translated">DoCheck</target>
        </trans-unit>
        <trans-unit id="fe56da291c49fe9ffdba4c0121544e151ccd5dda" translate="yes" xml:space="preserve">
          <source>Doc generation and tooling</source>
          <target state="translated">ドクの生成とツール</target>
        </trans-unit>
        <trans-unit id="361f1ffb11dfb67636a5555ed11bf9006ff5ddec" translate="yes" xml:space="preserve">
          <source>Document.querySelector()</source>
          <target state="translated">Document.querySelector()</target>
        </trans-unit>
        <trans-unit id="6b23b8dc766283282a9dd088b77fbc4505a2bac3" translate="yes" xml:space="preserve">
          <source>Documentation for using Bazel for frontend projects is linked from &lt;a href=&quot;https://docs.bazel.build/versions/master/bazel-and-javascript.html&quot;&gt;https://docs.bazel.build/versions/master/bazel-and-javascript.html&lt;/a&gt;.</source>
          <target state="translated">フロントエンドプロジェクトでBazelを使用するためのドキュメントは、&lt;a href=&quot;https://docs.bazel.build/versions/master/bazel-and-javascript.html&quot;&gt;https：&lt;/a&gt; //docs.bazel.build/versions/master/bazel-and-javascript.htmlからリンクされています。</target>
        </trans-unit>
        <trans-unit id="636ed57eb2bb3515c8353809df42914e3c29dec9" translate="yes" xml:space="preserve">
          <source>Does &lt;strong&gt;not&lt;/strong&gt; declare components.</source>
          <target state="translated">コンポーネントを宣言し&lt;strong&gt;ません&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="7cbd179f94380994e248d01aed9e9b9bcf8589a6" translate="yes" xml:space="preserve">
          <source>Does NOT alter text nodes inside HTML tags such as &lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;&lt;a href=&quot;../forms/defaultvalueaccessor&quot;&gt;textarea&lt;/a&gt;&amp;gt;&lt;/code&gt;, where whitespace characters are significant.</source>
          <target state="translated">空白文字が重要な &lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt; や &lt;code&gt;&amp;lt;&lt;a href=&quot;../forms/defaultvalueaccessor&quot;&gt;textarea&lt;/a&gt;&amp;gt;&lt;/code&gt; などのHTMLタグ内のテキストノードは変更しません。</target>
        </trans-unit>
        <trans-unit id="a6f9a8d25bcb5dd0d13fe369e2aa45e766e4b1af" translate="yes" xml:space="preserve">
          <source>Does not declare components.</source>
          <target state="translated">コンポーネントを宣言しない。</target>
        </trans-unit>
        <trans-unit id="624064fe82af064c5846c4c65db2781b410f7f8b" translate="yes" xml:space="preserve">
          <source>Does not retrieve elements or directives that are in other components' templates, since a component's template is always a black box to its ancestors.</source>
          <target state="translated">他のコンポーネントのテンプレートにある要素やディレクティブを取得しません。</target>
        </trans-unit>
        <trans-unit id="6ffc672431583e55590e23024e3b6210dab8403c" translate="yes" xml:space="preserve">
          <source>Does not support configuration.</source>
          <target state="translated">設定をサポートしていません。</target>
        </trans-unit>
        <trans-unit id="c74588ae83c3abe096ca0998ef59559ef0320224" translate="yes" xml:space="preserve">
          <source>Does not support parent-child relationship selectors.</source>
          <target state="translated">親子関係セレクタをサポートしていません。</target>
        </trans-unit>
        <trans-unit id="c2c19c3e51742058705ab287b418c0f553709384" translate="yes" xml:space="preserve">
          <source>Doing so adds clarity to the code. But it's not technically necessary. Although &lt;code&gt;AlexComponent&lt;/code&gt; has a &lt;code&gt;name&lt;/code&gt; property, as required by its &lt;code&gt;Base&lt;/code&gt; class, its class signature doesn't mention &lt;code&gt;Parent&lt;/code&gt;.</source>
          <target state="translated">これにより、コードが明確になります。ただし、技術的には必要ありません。が &lt;code&gt;AlexComponent&lt;/code&gt; が持っている &lt;code&gt;name&lt;/code&gt; プロパティをそのことにより、必要に応じて、 &lt;code&gt;Base&lt;/code&gt; クラス、そのクラス署名は言及していない &lt;code&gt;Parent&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="651ab4cdc0cde42e12d6952e46d048642d9f36c3" translate="yes" xml:space="preserve">
          <source>Doing this could break lazy-loading into currently running apps, especially if the lazy-loaded chunks use filenames with hashes, which change every version.</source>
          <target state="translated">特に、遅延ロードされたチャンクがハッシュ付きのファイル名を使用している場合は、バージョンごとに変更されます。</target>
        </trans-unit>
        <trans-unit id="fe17586b8fdcc1f1c069a1a6eebd32cd0d75b66c" translate="yes" xml:space="preserve">
          <source>DomSanitizer</source>
          <target state="translated">DomSanitizer</target>
        </trans-unit>
        <trans-unit id="3e53d3f18b0d8a00e18fd9ab729b7a8fae48cac5" translate="yes" xml:space="preserve">
          <source>DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing values to be safe to use in the different DOM contexts.</source>
          <target state="translated">DomSanitizer は、異なる DOM コンテキストで安全に使用できるように値をサニタイズすることで、クロスサイトスクリプティングセキュリティバグ (XSS)を防ぐのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="9b10914d8b0a097ace7176e8973f5c3dee92bb44" translate="yes" xml:space="preserve">
          <source>Domain</source>
          <target state="translated">Domain</target>
        </trans-unit>
        <trans-unit id="089fd6be6c2252d97b7162df714a7581f5904b6d" translate="yes" xml:space="preserve">
          <source>Domain NgModules</source>
          <target state="translated">ドメインNgModules</target>
        </trans-unit>
        <trans-unit id="7122a40bc7c9d5363bac845b7cb27f71cca2a973" translate="yes" xml:space="preserve">
          <source>Domain NgModules consist mostly of declarations. You rarely include providers. If you do, the lifetime of the provided services should be the same as the lifetime of the NgModule.</source>
          <target state="translated">ドメインNgModulesはほとんどが宣言で構成されています。プロバイダを含めることはほとんどありません。その場合、提供されるサービスの有効期限は NgModule の有効期限と同じでなければなりません。</target>
        </trans-unit>
        <trans-unit id="edc93410256fe4bcfcc1daf46c49efa65723ce0c" translate="yes" xml:space="preserve">
          <source>Domain feature modules are typically imported exactly once by a larger feature module.</source>
          <target state="translated">ドメインフィーチャモジュールは、通常、より大きなフィーチャモジュールによって一度だけインポートされます。</target>
        </trans-unit>
        <trans-unit id="4fce94c654a674f436b255450f8d45d5c2630c5f" translate="yes" xml:space="preserve">
          <source>Domain feature modules consist mostly of declarations. Only the top component is exported.</source>
          <target state="translated">ドメイン機能モジュールは、ほとんどが宣言で構成されています。トップコンポーネントだけがエクスポートされます。</target>
        </trans-unit>
        <trans-unit id="7d1601315ef4f7067cbdc3059ff63048a59d715e" translate="yes" xml:space="preserve">
          <source>Domain feature modules deliver a user experience dedicated to a particular application domain like editing a customer or placing an order.</source>
          <target state="translated">ドメイン機能モジュールは、顧客の編集や注文など、特定のアプリケーションドメインに特化したユーザー体験を提供します。</target>
        </trans-unit>
        <trans-unit id="8dbbc2071a2038f14ccfa4a11eb9ba7f08805721" translate="yes" xml:space="preserve">
          <source>Domain feature modules rarely have providers. When they do, the lifetime of the provided services should be the same as the lifetime of the module.</source>
          <target state="translated">ドメイン機能モジュールにプロバイダが存在することはほとんどありません。その場合、提供されるサービスの有効期間はモジュールの有効期間と同じでなければなりません。</target>
        </trans-unit>
        <trans-unit id="ef770887f44abfda530598989a0cab61a80d18d4" translate="yes" xml:space="preserve">
          <source>Domain feature modules.</source>
          <target state="translated">ドメイン機能モジュール。</target>
        </trans-unit>
        <trans-unit id="cb3187aa0ca33ec2d7071c6bcfd338ee7a22f4bf" translate="yes" xml:space="preserve">
          <source>Domain-specific libraries</source>
          <target state="translated">ドメイン固有のライブラリ</target>
        </trans-unit>
        <trans-unit id="abde3fdb171993c14d3ae55105d06f6114f07e22" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t send a request if the value stays the same (rapidly hit a character, then backspace, for instance).</source>
          <target state="translated">値が変わらない場合はリクエストを送信しないでください（たとえば、文字をすばやく押してからバックスペースを押す）。</target>
        </trans-unit>
        <trans-unit id="93de9a249143adbeeeb82cbc813b9ce310ec9d8a" translate="yes" xml:space="preserve">
          <source>Don't ascend to ancestors of the node requesting injection.</source>
          <target state="translated">注入を要求するノードの祖先に昇天しないようにしてください。</target>
        </trans-unit>
        <trans-unit id="ce77c0300b3a5f10444391a94340295523b51e8d" translate="yes" xml:space="preserve">
          <source>Don't bother re-exporting pure service modules. Pure service modules don't export &lt;a href=&quot;bootstrapping#the-declarations-array&quot;&gt;declarable&lt;/a&gt; classes that another NgModule could use. For example, there's no point in re-exporting &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt; because it doesn't export anything. Its only purpose is to add http service providers to the application as a whole.</source>
          <target state="translated">純粋なサービスモジュールを再エクスポートする必要はありません。ピュアサービスモジュールはエクスポートされません&lt;a href=&quot;bootstrapping#the-declarations-array&quot;&gt;申告&lt;/a&gt;別NgModuleが使用できるというクラスを。たとえば、 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt; は何もエクスポートしないため、再エクスポートしても意味がありません。その唯一の目的は、アプリケーション全体にhttpサービスプロバイダーを追加することです。</target>
        </trans-unit>
        <trans-unit id="de7459ce733088a4853dc7ad49103da4bec3d417" translate="yes" xml:space="preserve">
          <source>Don't change the IDs for translation units. Each &lt;code&gt;id&lt;/code&gt; is generated by Angular and depends on the content of the template text and its assigned meaning. If you change either the text or the meaning, then the &lt;code&gt;id&lt;/code&gt; changes. For more about managing text updates and IDs, see the previous section on &lt;a href=&quot;i18n#custom-id&quot;&gt;custom IDs&lt;/a&gt;.</source>
          <target state="translated">翻訳単位のIDは変更しないでください。各 &lt;code&gt;id&lt;/code&gt; はAngularによって生成され、テンプレートテキストのコンテンツとそれに割り当てられた意味によって異なります。テキストまたは意味のいずれかを変更すると、 &lt;code&gt;id&lt;/code&gt; が変更されます。テキストの更新とIDの管理の詳細については、&lt;a href=&quot;i18n#custom-id&quot;&gt;カスタムID&lt;/a&gt;に関する前のセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="6590e628737b5e6b0ef0760c4f85f662467acd91" translate="yes" xml:space="preserve">
          <source>Don't declare the following:</source>
          <target state="translated">次のように宣言してはいけません。</target>
        </trans-unit>
        <trans-unit id="9615d146789f79dc31aca9c405d7130f71c9e375" translate="yes" xml:space="preserve">
          <source>Don't do that here. If the &lt;code&gt;&lt;a href=&quot;../api/router/route#pathMatch&quot;&gt;pathMatch&lt;/a&gt;&lt;/code&gt; value were &lt;code&gt;'prefix'&lt;/code&gt;, &lt;em&gt;every&lt;/em&gt; URL would match &lt;code&gt;''&lt;/code&gt;.</source>
          <target state="translated">ここではそれをしないでください。場合 &lt;code&gt;&lt;a href=&quot;../api/router/route#pathMatch&quot;&gt;pathMatch&lt;/a&gt;&lt;/code&gt; の値であった &lt;code&gt;'prefix'&lt;/code&gt; 、&lt;em&gt;すべての&lt;/em&gt; URLが一致してしまいます &lt;code&gt;''&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="65a16276e33123e39c8a4d00d367506a93d1886b" translate="yes" xml:space="preserve">
          <source>Don't eagerly import something from a lazy-loaded module</source>
          <target state="translated">怠惰なモジュールから熱心に何かをインポートしないようにする</target>
        </trans-unit>
        <trans-unit id="41bb59a523c9daf81e4a26d6a2e69fa45bb7816d" translate="yes" xml:space="preserve">
          <source>Don't export the following:</source>
          <target state="translated">次のようにエクスポートしないでください。</target>
        </trans-unit>
        <trans-unit id="98def866f6784d12e1232d4ba1ac26d20f4f4320" translate="yes" xml:space="preserve">
          <source>Don't fetch data in a component constructor. You shouldn't worry that a new component will try to contact a remote server when created under test or before you decide to display it. Constructors should do no more than set the initial local variables to simple values.</source>
          <target state="translated">コンポーネントのコンストラクタでデータをフェッチしないようにしましょう。新しいコンポーネントがテスト中に作成されたときや、表示する前にリモートサーバに連絡しようとすることを心配する必要はありません。コンストラクタは、初期のローカル変数に単純な値を設定する程度にとどめてください。</target>
        </trans-unit>
        <trans-unit id="fc491bacf383f1a73e23a426a3e14781ff636809" translate="yes" xml:space="preserve">
          <source>Don't forget the asterisk (*) in front of &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt;. It's a critical part of the syntax.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; の前のアスタリスク（*）を忘れないでください。これは構文の重要な部分です。</target>
        </trans-unit>
        <trans-unit id="4f0559c481e0584bb38279fe9351ea488db1fca7" translate="yes" xml:space="preserve">
          <source>Don't forget the asterisk (*) in front of &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt;. It's a critical part of the syntax.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; の前のアスタリスク（*）を忘れないでください。これは構文の重要な部分です。</target>
        </trans-unit>
        <trans-unit id="29a6291a036d169f27297f2e33e8a14cf2cdb7bb" translate="yes" xml:space="preserve">
          <source>Don't forget the asterisk (&lt;code&gt;*&lt;/code&gt;) in front of &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt;. For more information on the asterisk, see the &lt;a href=&quot;structural-directives#the-asterisk--prefix&quot;&gt;asterisk (*) prefix&lt;/a&gt; section of &lt;a href=&quot;structural-directives&quot;&gt;Structural Directives&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; の前のアスタリスク（ &lt;code&gt;*&lt;/code&gt; ）を忘れないでください。アスタリスクの詳細については、&lt;a href=&quot;structural-directives&quot;&gt;構造ディレクティブの&lt;/a&gt;&lt;a href=&quot;structural-directives#the-asterisk--prefix&quot;&gt;アスタリスク（*）プレフィックス&lt;/a&gt;セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="e5940c21ded73420d9560fb5d88d6ba510bc7cd5" translate="yes" xml:space="preserve">
          <source>Don't forget the asterisk (&lt;code&gt;*&lt;/code&gt;) in front of &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt;. For more information on the asterisk, see the &lt;a href=&quot;structural-directives#the-asterisk--prefix&quot;&gt;asterisk (*) prefix&lt;/a&gt; section of &lt;a href=&quot;structural-directives&quot;&gt;Structural Directives&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; の前のアスタリスク（ &lt;code&gt;*&lt;/code&gt; ）を忘れないでください。アスタリスクの詳細については、&lt;a href=&quot;structural-directives&quot;&gt;構造指令の&lt;/a&gt;&lt;a href=&quot;structural-directives#the-asterisk--prefix&quot;&gt;アスタリスク（*）接頭辞&lt;/a&gt;セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="c9d7069436c420884018ebec9bd644a89641d14d" translate="yes" xml:space="preserve">
          <source>Don't forget the leading asterisk (*) in &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt;. It is an essential part of the syntax. For more information, see the &lt;a href=&quot;template-syntax#ngFor&quot;&gt;Template Syntax&lt;/a&gt; page.</source>
          <target state="translated">&lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; の先頭のアスタリスク（*）を忘れないでください。構文の重要な部分です。詳細については、「&lt;a href=&quot;template-syntax#ngFor&quot;&gt;テンプレートの構文&lt;/a&gt;」ページを参照してください。</target>
        </trans-unit>
        <trans-unit id="2f88961494e42906518ac773630f15b9ea4c9613" translate="yes" xml:space="preserve">
          <source>Don't forget the leading asterisk (*) in &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt;. It is an essential part of the syntax. Read more about &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;*&lt;/code&gt; in the &lt;a href=&quot;template-syntax#ngIf&quot;&gt;ngIf section&lt;/a&gt; of the &lt;a href=&quot;template-syntax&quot;&gt;Template Syntax&lt;/a&gt; page.</source>
          <target state="translated">&lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; の先頭のアスタリスク（*）を忘れないでください。構文の重要な部分です。詳細読み &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; をし、 &lt;code&gt;*&lt;/code&gt; で&lt;a href=&quot;template-syntax#ngIf&quot;&gt;ngIfセクション&lt;/a&gt;の&lt;a href=&quot;template-syntax&quot;&gt;テンプレートの構文&lt;/a&gt;ページ。</target>
        </trans-unit>
        <trans-unit id="ed2cd99fb3ada47a82e704b07d25ee3a15f739a9" translate="yes" xml:space="preserve">
          <source>Don't import a lazy-loaded routed NgModule into another NgModule, as this would trigger an eager load, defeating the purpose of lazy loading.</source>
          <target state="translated">遅延ロードされたNgModuleを別のNgModuleにインポートしないでください。</target>
        </trans-unit>
        <trans-unit id="240c178f010ce6adf5d28fb137f1d1e68a75490c" translate="yes" xml:space="preserve">
          <source>Don't prefix &lt;code&gt;output&lt;/code&gt; properties</source>
          <target state="translated">&lt;code&gt;output&lt;/code&gt; プロパティの前に付けない</target>
        </trans-unit>
        <trans-unit id="8b73753946ee9fbedb2c567c98f11e350b60fde4" translate="yes" xml:space="preserve">
          <source>Don't provide any template or style encapsulation.</source>
          <target state="translated">テンプレートやスタイルのカプセル化を提供しないでください。</target>
        </trans-unit>
        <trans-unit id="e72adae2dc825d3541b3718a85a12fb1bd2a25b3" translate="yes" xml:space="preserve">
          <source>Don't use &lt;code&gt;--create-ivy-entry-points&lt;/code&gt; as this will cause Node not to resolve the Ivy version of the packages correctly.</source>
          <target state="translated">&lt;code&gt;--create-ivy-entry-points&lt;/code&gt; を使用しないでください。使用すると、ノードがパッケージのIvyバージョンを正しく解決できなくなります。</target>
        </trans-unit>
        <trans-unit id="421f60c796355c0945865a559bb600139cb8022b" translate="yes" xml:space="preserve">
          <source>Don't use declarations in a routing NgModule. Components, directives, and pipes are the responsibility of the companion domain NgModule, not the routing NgModule.</source>
          <target state="translated">ルーティングNgModuleで宣言を使用しないでください。コンポーネント、ディレクティブ、パイプはコンパニオンドメインNgModuleの責任であり、ルーティングNgModuleの責任ではありません。</target>
        </trans-unit>
        <trans-unit id="034cd612a1e6136ca10cbef73016d80fa0900bab" translate="yes" xml:space="preserve">
          <source>Don't verify connected clients are part of allowed hosts.</source>
          <target state="translated">接続されているクライアントが許可されているホストの一部であることを確認しないでください。</target>
        </trans-unit>
        <trans-unit id="80b118003323fb9fdf485b6bd6d8bdfcc8308676" translate="yes" xml:space="preserve">
          <source>Down the road, you can inject a data service to get and save real data or perhaps expose these properties as inputs and outputs (see &lt;a href=&quot;template-syntax#inputs-outputs&quot;&gt;Input and output properties&lt;/a&gt; on the &lt;a href=&quot;template-syntax&quot;&gt;Template Syntax&lt;/a&gt; page) for binding to a parent component. This is not a concern now and these future changes won't affect the form.</source>
          <target state="translated">道を、あなたが取得し、実際のデータを保存したり、おそらく入力と出力（参照としてこれらのプロパティを公開するデータサービスを注入することができ&lt;a href=&quot;template-syntax#inputs-outputs&quot;&gt;、入力と出力の性質&lt;/a&gt;上の&lt;a href=&quot;template-syntax&quot;&gt;テンプレートの構文&lt;/a&gt;親コンポーネントへの結合についてのページを）。これは現在問題ではなく、これらの将来の変更はフォームに影響しません。</target>
        </trans-unit>
        <trans-unit id="0ccbe0bf2be8bc3e6b41de6c08f0a1498a381e54" translate="yes" xml:space="preserve">
          <source>Downgrading multiple modules</source>
          <target state="translated">複数のモジュールのダウングレード</target>
        </trans-unit>
        <trans-unit id="a479c9c34e878d07b4d67a73a48f432ad7dc53c8" translate="yes" xml:space="preserve">
          <source>Download</source>
          <target state="translated">Download</target>
        </trans-unit>
        <trans-unit id="39c131f45fab5187e42e1e465465b4202e919c7c" translate="yes" xml:space="preserve">
          <source>Download and install the latest &lt;a href=&quot;https://www.microsoft.com/en-us/download/details.aspx?id=48593&quot;&gt;TypeScript for Visual Studio 2015&lt;/a&gt;,</source>
          <target state="translated">&lt;a href=&quot;https://www.microsoft.com/en-us/download/details.aspx?id=48593&quot;&gt;Visual Studio 2015の&lt;/a&gt;最新のTypeScriptをダウンロードしてインストールします。</target>
        </trans-unit>
        <trans-unit id="b21a44d0dea536c166264bb02f56718f7d476d92" translate="yes" xml:space="preserve">
          <source>Download only</source>
          <target state="translated">ダウンロードのみ</target>
        </trans-unit>
        <trans-unit id="55fd9611f7c571037e9909869ce233197def6aae" translate="yes" xml:space="preserve">
          <source>Download the library schematics project for a completed example of the steps below.</source>
          <target state="translated">ライブラリ回路図プロジェクトをダウンロードして、以下の手順の完成例をご覧ください。</target>
        </trans-unit>
        <trans-unit id="bea9854a0974d8c207fb940eb07b3deedb9b02fd" translate="yes" xml:space="preserve">
          <source>Driver state</source>
          <target state="translated">ドライバの状態</target>
        </trans-unit>
        <trans-unit id="92dcbcf51988b6a76ea5e858cad87b4f99031fb5" translate="yes" xml:space="preserve">
          <source>Due to the deployment complexities of i18n and the need to minimize rebuild time, the development server only supports localizing a single locale at a time. Setting the &lt;code&gt;&quot;localize&quot;&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt; will cause an error when using &lt;code&gt;ng serve&lt;/code&gt; if more than one locale is defined. Setting the option to a specific locale, such as &lt;code&gt;&quot;localize&quot;: [&quot;fr&quot;]&lt;/code&gt;, can work if you want to develop against a specific locale (such as &lt;code&gt;fr&lt;/code&gt;).</source>
          <target state="translated">i18nのデプロイメントの複雑さと再構築時間を最小限に抑える必要があるため、開発サーバーは一度に1つのロケールのローカライズのみをサポートします。 &lt;code&gt;&quot;localize&quot;&lt;/code&gt; オプションを &lt;code&gt;true&lt;/code&gt; に設定すると、複数のロケールが定義されている場合に &lt;code&gt;ng serve&lt;/code&gt; を使用するときにエラーが発生します。オプションを &lt;code&gt;&quot;localize&quot;: [&quot;fr&quot;]&lt;/code&gt; などの特定のロケールに設定すると、特定のロケール（ &lt;code&gt;fr&lt;/code&gt; など）に対して開発する場合に機能します。</target>
        </trans-unit>
        <trans-unit id="ab8e2234ed8257af73e27e05dd2d529167ccaf7d" translate="yes" xml:space="preserve">
          <source>Duplicate the &lt;code&gt;&amp;lt;&lt;a href=&quot;i18n&quot;&gt;source&lt;/a&gt;/&amp;gt;&lt;/code&gt; tag, rename it &lt;code&gt;&lt;a href=&quot;../api/router/routerlinkwithhref#target&quot;&gt;target&lt;/a&gt;&lt;/code&gt;, and then replace its content with the French greeting. If you were working with a more complex translation, you could use the information and context provided by the source, description, and meaning elements to guide your selection of the appropriate French translation.</source>
          <target state="translated">&lt;code&gt;&amp;lt;&lt;a href=&quot;i18n&quot;&gt;source&lt;/a&gt;/&amp;gt;&lt;/code&gt; タグを複製し、 &lt;code&gt;&lt;a href=&quot;../api/router/routerlinkwithhref#target&quot;&gt;target&lt;/a&gt;&lt;/code&gt; の名前を変更してから、その内容をフランス語の挨拶に置き換えます。より複雑な翻訳を使用している場合は、ソース、説明、および意味要素によって提供される情報とコンテキストを使用して、適切なフランス語翻訳の選択をガイドできます。</target>
        </trans-unit>
        <trans-unit id="40ddfae03de378f494769f89dd35188f901c7320" translate="yes" xml:space="preserve">
          <source>Duplicate the &lt;code&gt;&amp;lt;source&amp;gt;...&amp;lt;/source&amp;gt;&lt;/code&gt; element in the text node, rename it &lt;code&gt;target&lt;/code&gt;, and then replace its content with the French text:</source>
          <target state="translated">テキストノードの &lt;code&gt;&amp;lt;source&amp;gt;...&amp;lt;/source&amp;gt;&lt;/code&gt; 要素を複製し、名前を &lt;code&gt;target&lt;/code&gt; に変更してから、そのコンテンツをフランス語のテキストに置き換えます。</target>
        </trans-unit>
        <trans-unit id="c9bd84cdbb4cc235c347080036b1ba9eb49d0ce1" translate="yes" xml:space="preserve">
          <source>Duration and delay are expressed as a number and optional time unit, such as &quot;1s&quot; or &quot;10ms&quot; for one second and 10 milliseconds, respectively. The default unit is milliseconds.</source>
          <target state="translated">持続時間と遅延時間は、それぞれ1秒、10ミリ秒の場合は「1s」や「10ms」のように、数値と任意の時間単位で表されます。デフォルトの単位はミリ秒です。</target>
        </trans-unit>
        <trans-unit id="bc644b2d562cbf3f13865f41e46fce4f7a86d20e" translate="yes" xml:space="preserve">
          <source>During TypeScript conversion no changes are strictly necessary. But it may be a good idea to convert the unit test code into TypeScript as well.</source>
          <target state="translated">TypeScriptへの変換中は、厳密には何も変更する必要はありません。しかし、ユニットテストのコードをTypeScriptに変換するのは良いアイデアかもしれません。</target>
        </trans-unit>
        <trans-unit id="d2adfdd8629e6ebc57fc1622f87096712d00503e" translate="yes" xml:space="preserve">
          <source>During TypeScript conversion, there is nothing to do to keep E2E tests working. But when you change the bootstrap to that of a Hybrid app, you must make a few changes.</source>
          <target state="translated">TypeScriptの変換中は、E2Eのテストを動作させ続けるために何もすることはありません。しかし、ブートストラップをハイブリッドアプリのそれに変更するときには、いくつかの変更をしなければなりません。</target>
        </trans-unit>
        <trans-unit id="c93ba65421200c8ce9c714d5433120cec0c210c4" translate="yes" xml:space="preserve">
          <source>During a transition, a new view is inserted directly after the old one and both elements appear on screen at the same time. To prevent this, apply additional styling to the host view, and to the removed and inserted child views. The host view must use relative positioning, and the child views must use absolute positioning. Adding styling to the views animates the containers in place, without the DOM moving things around.</source>
          <target state="translated">トランジション中に、新しいビューが古いビューの直後に挿入され、両方の要素が同時に画面に表示されます。これを防ぐには、ホストビューと、削除され挿入された子ビューに追加のスタイリングを適用します。ホストビューは相対位置を使用し、子ビューは絶対位置を使用する必要があります。ビューにスタイリングを追加することで、DOM が物を移動させずにコンテナをアニメーションさせることができます。</target>
        </trans-unit>
        <trans-unit id="7e2134e92266bcb5c8ab8f878ffaec17ab310443" translate="yes" xml:space="preserve">
          <source>During change detection, the &lt;code&gt;ngOnChanges&lt;/code&gt; lifecycle hook is called on the &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; directive instance because the value of one of its inputs has changed.</source>
          <target state="translated">変更検出中に、いずれかの入力の値が変更されたため、 &lt;code&gt;ngOnChanges&lt;/code&gt; ライフサイクルフックが &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; ディレクティブインスタンスで呼び出されます。</target>
        </trans-unit>
        <trans-unit id="9edd1b9999956746c9f323ca67581f2b8c3fce33" translate="yes" xml:space="preserve">
          <source>During checkout, the app will prompt the user for a name and address. So that you can gather that information later, set the &lt;code&gt;checkoutForm&lt;/code&gt; property with a form model containing &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;address&lt;/code&gt; fields, using the &lt;code&gt;&lt;a href=&quot;../api/forms/formbuilder&quot;&gt;FormBuilder&lt;/a&gt;#&lt;a href=&quot;../api/animations/group&quot;&gt;group&lt;/a&gt;()&lt;/code&gt; method.</source>
          <target state="translated">チェックアウト時に、アプリはユーザーに名前と住所の入力を求めます。後でその情報を収集できるように、 &lt;code&gt;&lt;a href=&quot;../api/forms/formbuilder&quot;&gt;FormBuilder&lt;/a&gt;#&lt;a href=&quot;../api/animations/group&quot;&gt;group&lt;/a&gt;()&lt;/code&gt; ＃&lt;a href=&quot;../api/animations/group&quot;&gt;group&lt;/a&gt;（）メソッドを使用して、 &lt;code&gt;name&lt;/code&gt; と &lt;code&gt;address&lt;/code&gt; フィールドを含むフォームモデルで &lt;code&gt;checkoutForm&lt;/code&gt; プロパティを設定します。</target>
        </trans-unit>
        <trans-unit id="4cb9093ab586cd348f47d9e6cf2bbfe140c681b4" translate="yes" xml:space="preserve">
          <source>During development, you typically use the &lt;code&gt;ng serve&lt;/code&gt; command to build, watch, and serve the application from local memory, using &lt;a href=&quot;https://webpack.js.org/guides/development/#webpack-dev-server&quot;&gt;webpack-dev-server&lt;/a&gt;. When you are ready to deploy, however, you must use the &lt;code&gt;ng build&lt;/code&gt; command to build the app and deploy the build artifacts elsewhere.</source>
          <target state="translated">開発中、通常は &lt;code&gt;ng serve&lt;/code&gt; コマンドを使用して、&lt;a href=&quot;https://webpack.js.org/guides/development/#webpack-dev-server&quot;&gt;webpack-dev-server&lt;/a&gt;を使用し、ローカルメモリからアプリケーションをビルド、監視、提供します。ただし、デプロイの準備ができたら、 &lt;code&gt;ng build&lt;/code&gt; コマンドを使用してアプリをビルドし、ビルドアーティファクトを他の場所にデプロイする必要があります。</target>
        </trans-unit>
        <trans-unit id="fae7cf56608f88866b26b0ef5fcc953914fd85c8" translate="yes" xml:space="preserve">
          <source>During each navigation, the &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; emits navigation events through the &lt;code&gt;&lt;a href=&quot;../api/router/router#events&quot;&gt;Router.events&lt;/a&gt;&lt;/code&gt; property. These events range from when the navigation starts and ends to many points in between. The full list of navigation events is displayed in the table below.</source>
          <target state="translated">各ナビゲーション中に、 &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; は &lt;code&gt;&lt;a href=&quot;../api/router/router#events&quot;&gt;Router.events&lt;/a&gt;&lt;/code&gt; プロパティを通じてナビゲーションイベントを発行します。これらのイベントは、ナビゲーションの開始時と終了時から、その間の多くのポイントに及びます。下の表に、ナビゲーションイベントの完全なリストを示します。</target>
        </trans-unit>
        <trans-unit id="24ce380938e6c21372f9336593acfe39017a0043" translate="yes" xml:space="preserve">
          <source>During the process you'll learn how to apply the steps outlined in the &lt;a href=&quot;upgrade#preparation&quot;&gt;preparation guide&lt;/a&gt;. You'll align the application with Angular and also start writing in TypeScript.</source>
          <target state="translated">プロセス中に、&lt;a href=&quot;upgrade#preparation&quot;&gt;準備ガイドで&lt;/a&gt;概説されている手順を適用する方法を学びます。アプリケーションをAngularに合わせ、TypeScriptでの記述を開始します。</target>
        </trans-unit>
        <trans-unit id="e41271d97bfaa9855273d6170cf3c19d4e05bc1f" translate="yes" xml:space="preserve">
          <source>Dynamic Component Loader</source>
          <target state="translated">ダイナミックコンポーネントローダー</target>
        </trans-unit>
        <trans-unit id="a5fdad1da0c422ddbaedc42b6d8523a19935dd4a" translate="yes" xml:space="preserve">
          <source>Dynamic Components</source>
          <target state="translated">ダイナミックコンポーネント</target>
        </trans-unit>
        <trans-unit id="4fd12c3974ec0be44713c8ffa0c687638c292157" translate="yes" xml:space="preserve">
          <source>Dynamic Forms</source>
          <target state="translated">ダイナミックフォーム</target>
        </trans-unit>
        <trans-unit id="58bd26bb61ddef24bc329aa3b9da99eb3679b9b3" translate="yes" xml:space="preserve">
          <source>Dynamic Forms Guide</source>
          <target state="translated">ダイナミックフォームガイド</target>
        </trans-unit>
        <trans-unit id="2bc79dd70e34554001fab0a24198b892ffd956a8" translate="yes" xml:space="preserve">
          <source>Dynamic Template</source>
          <target state="translated">動的テンプレート</target>
        </trans-unit>
        <trans-unit id="76dcce2563e561d996925b48365c76a33038f663" translate="yes" xml:space="preserve">
          <source>Dynamic component loader</source>
          <target state="translated">ダイナミックコンポーネントローダー</target>
        </trans-unit>
        <trans-unit id="5c188df063315960a8284608dfef5d7725223fee" translate="yes" xml:space="preserve">
          <source>Dynamic component loading</source>
          <target state="translated">動的なコンポーネントのローディング</target>
        </trans-unit>
        <trans-unit id="cdadcbd36fff4607a6954bb84c819d544af6edd5" translate="yes" xml:space="preserve">
          <source>Dynamic component loading is not common in most apps beyond the router. If you need to dynamically load components, you must add these components to the &lt;code&gt;entryComponents&lt;/code&gt; list yourself.</source>
          <target state="translated">動的コンポーネントの読み込みは、ルーター以外のほとんどのアプリでは一般的ではありません。コンポーネントを動的にロードする必要がある場合は、これらのコンポーネントを &lt;code&gt;entryComponents&lt;/code&gt; リストに自分で追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="dd0e82d54ffe53f8d72d2c99cb6529b8b8feb3fb" translate="yes" xml:space="preserve">
          <source>Dynamic controls using form arrays</source>
          <target state="translated">フォーム配列を使用した動的コントロール</target>
        </trans-unit>
        <trans-unit id="4dae7a3f578fc7983f17d596d5e7aa7dbe799d8d" translate="yes" xml:space="preserve">
          <source>Dynamic forms</source>
          <target state="translated">ダイナミックフォーム</target>
        </trans-unit>
        <trans-unit id="a3550fb7b911a0a6ad88ba73e6bddbea416b4e9d" translate="yes" xml:space="preserve">
          <source>Dynamic forms are based on reactive forms. To give the application access reactive forms directives, the &lt;a href=&quot;bootstrapping&quot;&gt;root module&lt;/a&gt; imports &lt;code&gt;&lt;a href=&quot;../api/forms/reactiveformsmodule&quot;&gt;ReactiveFormsModule&lt;/a&gt;&lt;/code&gt; from the &lt;code&gt;@angular/forms&lt;/code&gt; library.</source>
          <target state="translated">動的フォームは、リアクティブフォームに基づいています。アプリケーションにリアクティブフォームディレクティブへのアクセスを与えるために、&lt;a href=&quot;bootstrapping&quot;&gt;ルートモジュール&lt;/a&gt;は &lt;code&gt;@angular/forms&lt;/code&gt; ライブラリから &lt;code&gt;&lt;a href=&quot;../api/forms/reactiveformsmodule&quot;&gt;ReactiveFormsModule&lt;/a&gt;&lt;/code&gt; をインポートします。</target>
        </trans-unit>
        <trans-unit id="e0184adedf913b076626646d3f52c3b49c39ad6d" translate="yes" xml:space="preserve">
          <source>E</source>
          <target state="translated">E</target>
        </trans-unit>
        <trans-unit id="952ea5c3a4bd5ddb1e84e339d6efb4b6b521651c" translate="yes" xml:space="preserve">
          <source>E (S)</source>
          <target state="translated">E(S</target>
        </trans-unit>
        <trans-unit id="3eda17458aac2e1c39c9e41ff906a98ea0cc80f0" translate="yes" xml:space="preserve">
          <source>E, EE &amp;amp; EEE</source>
          <target state="translated">E、EE、EEE</target>
        </trans-unit>
        <trans-unit id="73589e1476f9ea766e54b42e42ec4d4d0cbca3c2" translate="yes" xml:space="preserve">
          <source>E2E Tests</source>
          <target state="translated">E2Eテスト</target>
        </trans-unit>
        <trans-unit id="dd0bb31f998d693382c796a469b61591c81e45c3" translate="yes" xml:space="preserve">
          <source>E2E test that all children were instantiated and displayed as expected:</source>
          <target state="translated">すべての子がインスタンス化され、期待通りに表示されたことをE2Eテスト。</target>
        </trans-unit>
        <trans-unit id="372bb5d00eb17ebcfa920207dee8bf8fee7270ee" translate="yes" xml:space="preserve">
          <source>E2E tests are difficult to write and perform poorly compared to unit tests. They break easily, often due to changes or misbehavior far removed from the site of breakage.</source>
          <target state="translated">E2E テストは、ユニットテストと比較して、書くのが難しく、パフォーマンスが悪いです。これらのテストは簡単に壊れてしまい、多くの場合、壊れた場所から遠く離れた場所での変更や誤動作が原因となっています。</target>
        </trans-unit>
        <trans-unit id="0a76346e352bd2cb73972ed43857bec080631a12" translate="yes" xml:space="preserve">
          <source>E2E tests are great for high-level validation of the entire system. But they can't give you the comprehensive test coverage that you'd expect from unit tests.</source>
          <target state="translated">E2E テストは、システム全体の高レベルの検証には最適です。しかし、ユニットテストに期待するような包括的なテストカバレッジを提供することはできません。</target>
        </trans-unit>
        <trans-unit id="d102c6f6f30bc1655cbe872e545e462853df6b3c" translate="yes" xml:space="preserve">
          <source>E2E tests can't easily reveal how your components behave when things go wrong, such as missing or bad data, lost connectivity, and remote service failures.</source>
          <target state="translated">E2Eテストでは、データの欠落や不良、接続性の喪失、リモートサービスの障害など、問題が発生したときにコンポーネントがどのように動作するかを簡単に明らかにすることはできません。</target>
        </trans-unit>
        <trans-unit id="0c4e4c7796289ac9278300d31192ad0146ac03c6" translate="yes" xml:space="preserve">
          <source>E2E tests for apps that update a database, send an invoice, or charge a credit card require special tricks and back-doors to prevent accidental corruption of remote resources. It can even be hard to navigate to the component you want to test.</source>
          <target state="translated">E2E テストでは、データベースの更新、請求書の送信、クレジットカードのチャージなどを行うアプリについて、リモートリソースの不慮の破損を防ぐための特別なトリックやバックドアが必要です。テストしたいコンポーネントに移動するのが困難な場合もあります。</target>
        </trans-unit>
        <trans-unit id="589dbe67e40317e7eee2bcd85f1afbc0aa40a3e7" translate="yes" xml:space="preserve">
          <source>E2E tests of input property setter with empty and non-empty names:</source>
          <target state="translated">空の名前と空でない名前を持つ入力プロパティセッターのE2Eテスト。</target>
        </trans-unit>
        <trans-unit id="6d85b2d399967a027efc0d611a548da5bc48a920" translate="yes" xml:space="preserve">
          <source>ECMAScript</source>
          <target state="translated">ECMAScript</target>
        </trans-unit>
        <trans-unit id="bb41be0083d30940a15ed09539a8f13ac977b740" translate="yes" xml:space="preserve">
          <source>EEE (Sun)</source>
          <target state="translated">イーイーイー(日</target>
        </trans-unit>
        <trans-unit id="c49c34e2014a2da270eeae07d730726ffddd3196" translate="yes" xml:space="preserve">
          <source>EEEE</source>
          <target state="translated">EEEE</target>
        </trans-unit>
        <trans-unit id="9169dd1fe0dd70dd346d458bd301545612f3548d" translate="yes" xml:space="preserve">
          <source>EEEE (Sunday)</source>
          <target state="translated">イーイーイーイー(日曜</target>
        </trans-unit>
        <trans-unit id="af660090b01149c4cd9581bca5e30ceaacc675be" translate="yes" xml:space="preserve">
          <source>EEEEE</source>
          <target state="translated">EEEEE</target>
        </trans-unit>
        <trans-unit id="8a1d9b464a3fd8c9e5f06af5b43005029d7c16b1" translate="yes" xml:space="preserve">
          <source>EEEEEE</source>
          <target state="translated">EEEEEE</target>
        </trans-unit>
        <trans-unit id="075901aadfe01a2f6e5ff5be94321e8718fe731b" translate="yes" xml:space="preserve">
          <source>ES Target</source>
          <target state="translated">ESターゲット</target>
        </trans-unit>
        <trans-unit id="d2945b5e8055d95ac7e32791a5e2b9aa08838ab0" translate="yes" xml:space="preserve">
          <source>ES target</source>
          <target state="translated">ESターゲット</target>
        </trans-unit>
        <trans-unit id="5be8585e8dda5d16a9d3e66f70a40dc596a018af" translate="yes" xml:space="preserve">
          <source>ES2015</source>
          <target state="translated">ES2015</target>
        </trans-unit>
        <trans-unit id="0970b9d03521f08c59aa318cd73a8b50d05da427" translate="yes" xml:space="preserve">
          <source>ES2015&lt;a href=&quot;browser-support#classlist&quot;&gt;classList&lt;/a&gt;</source>
          <target state="translated">ES2015&lt;a href=&quot;browser-support#classlist&quot;&gt;classList&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9473da121f41fb7b3b153d3793463561bba99a5e" translate="yes" xml:space="preserve">
          <source>ES5 Browserslist Result</source>
          <target state="translated">ES5 ブラウザリスト結果</target>
        </trans-unit>
        <trans-unit id="c2cdc1a3458c8f78c569051ddb78146ba0f1f31b" translate="yes" xml:space="preserve">
          <source>ES5 support disabled</source>
          <target state="translated">ES5サポート障害者</target>
        </trans-unit>
        <trans-unit id="df75cdecd9e17afca028633e3d25ea6f32cc76df" translate="yes" xml:space="preserve">
          <source>ES5 support enabled</source>
          <target state="translated">ES5のサポートを有効にしました。</target>
        </trans-unit>
        <trans-unit id="f84a7f9916385bc3b3297219fea98468f763a46d" translate="yes" xml:space="preserve">
          <source>ES7/array</source>
          <target state="translated">ES7/array</target>
        </trans-unit>
        <trans-unit id="da9a5dd5bd129c51e47a47b3272ca4e140e15e73" translate="yes" xml:space="preserve">
          <source>EVENT_MANAGER_PLUGINS</source>
          <target state="translated">EVENT_MANAGER_PLUGINS</target>
        </trans-unit>
        <trans-unit id="d7e60287a55416a49a71c1115ff5604711cd5dd4" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; element also has the required &lt;code&gt;name&lt;/code&gt; property that Angular uses to register the control with the form.</source>
          <target state="translated">各 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 要素には、Angularがコントロールをフォームに登録するために使用する必須の &lt;code&gt;name&lt;/code&gt; プロパティもあります。</target>
        </trans-unit>
        <trans-unit id="f9ce18d98faf53ec35f10c3730273055c75abee2" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;&lt;a href=&quot;../api/core/debugelement&quot;&gt;DebugElement&lt;/a&gt;&lt;/code&gt; exposes a dependency injector with the specific instance of the directive attached to that element.</source>
          <target state="translated">各 &lt;code&gt;&lt;a href=&quot;../api/core/debugelement&quot;&gt;DebugElement&lt;/a&gt;&lt;/code&gt; は、その要素にアタッチされたディレクティブの特定のインスタンスを持つ依存関係インジェクターを公開します。</target>
        </trans-unit>
        <trans-unit id="286e0075a5fff4e5432d6dc93abd9ba356e6dba0" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; in the &lt;code&gt;&lt;a href=&quot;../api/router/routerstate&quot;&gt;RouterState&lt;/a&gt;&lt;/code&gt; provides methods to traverse up and down the route tree to get information from parent, child and sibling routes.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/router/routerstate&quot;&gt;RouterState&lt;/a&gt;&lt;/code&gt; の各 &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; は、ルートツリーを上下に移動して親、子、兄弟ルートから情報を取得するメソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="98ee5a57eab9498887f027356bcf579d28712aef" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;&lt;a href=&quot;../api/router/route&quot;&gt;Route&lt;/a&gt;&lt;/code&gt; maps a URL &lt;code&gt;path&lt;/code&gt; to a component. There are &lt;em&gt;no leading slashes&lt;/em&gt; in the &lt;em&gt;path&lt;/em&gt;. The router parses and builds the final URL for you, allowing you to use both relative and absolute paths when navigating between application views.</source>
          <target state="translated">各 &lt;code&gt;&lt;a href=&quot;../api/router/route&quot;&gt;Route&lt;/a&gt;&lt;/code&gt; はURL &lt;code&gt;path&lt;/code&gt; をコンポーネントにマップします。ありません&lt;em&gt;何も有数スラッシュ&lt;/em&gt;で&lt;em&gt;パス&lt;/em&gt;。ルーターが最終的なURLを解析して構築するため、アプリケーションビュー間を移動するときに相対パスと絶対パスの両方を使用できます。</target>
        </trans-unit>
        <trans-unit id="88053292cde0c84f656ee4f45a15ce05d0267a93" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;&lt;a href=&quot;../api/router/route&quot;&gt;Route&lt;/a&gt;&lt;/code&gt; maps a URL &lt;code&gt;path&lt;/code&gt; to a component. There are no leading slashes in the path. The router parses and builds the final URL for you, which allows you to use both relative and absolute paths when navigating between application views.</source>
          <target state="translated">各 &lt;code&gt;&lt;a href=&quot;../api/router/route&quot;&gt;Route&lt;/a&gt;&lt;/code&gt; は、URL &lt;code&gt;path&lt;/code&gt; をコンポーネントにマップします。パスに先頭のスラッシュはありません。ルーターは最終的なURLを解析して構築します。これにより、アプリケーションビュー間を移動するときに、相対パスと絶対パスの両方を使用できます。</target>
        </trans-unit>
        <trans-unit id="b838c62689224b4ca27eea5c7a87704e8a67b4b9" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;@&lt;a href=&quot;ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; provides an own &lt;code&gt;&lt;a href=&quot;compiler&quot;&gt;Compiler&lt;/a&gt;&lt;/code&gt; to its injector, that will use the directives/pipes of the ng module for compilation of components.</source>
          <target state="translated">各 &lt;code&gt;@&lt;a href=&quot;ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; は独自の &lt;code&gt;&lt;a href=&quot;compiler&quot;&gt;Compiler&lt;/a&gt;&lt;/code&gt; をインジェクタに提供し、コンポーネントのコンパイルにngモジュールのディレクティブ/パイプを使用します。</target>
        </trans-unit>
        <trans-unit id="afd85145d04944e976611f2c1d57bdb27b0e7791" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;HeroBioComponent&lt;/code&gt; can edit a single hero's biography. &lt;code&gt;HeroBioComponent&lt;/code&gt; relies on &lt;code&gt;HeroCacheService&lt;/code&gt; to fetch, cache, and perform other persistence operations on that hero.</source>
          <target state="translated">各 &lt;code&gt;HeroBioComponent&lt;/code&gt; は、単一のヒーローの伝記を編集できます。 &lt;code&gt;HeroBioComponent&lt;/code&gt; は、 &lt;code&gt;HeroCacheService&lt;/code&gt; に依存して、そのヒーローに対して他の永続化操作をフェッチ、キャッシュ、および実行します。</target>
        </trans-unit>
        <trans-unit id="f4731307364ab8c0ca00233e6ebe2ff1235d5b46" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;build&lt;/code&gt; target configuration can include an &lt;code&gt;assets&lt;/code&gt; array that lists files or folders you want to copy as-is when building your project. By default, the &lt;code&gt;src/assets/&lt;/code&gt; folder and &lt;code&gt;src/favicon.ico&lt;/code&gt; are copied over.</source>
          <target state="translated">各 &lt;code&gt;build&lt;/code&gt; ターゲット構成には、プロジェクトのビルド時にそのままコピーするファイルまたはフォルダーをリストする &lt;code&gt;assets&lt;/code&gt; 配列を含めることができます。デフォルトでは、 &lt;code&gt;src/assets/&lt;/code&gt; フォルダーと &lt;code&gt;src/favicon.ico&lt;/code&gt; がコピーされます。</target>
        </trans-unit>
        <trans-unit id="c625350948f2e111f7aa538b14527a2d4339eebe" translate="yes" xml:space="preserve">
          <source>Each Angular template in your app is a section of HTML that you can include as a part of the page that the browser displays. An Angular HTML template renders a view, or user interface, in the browser, just like regular HTML, but with a lot more functionality.</source>
          <target state="translated">アプリ内の各Angularテンプレートは、ブラウザが表示するページの一部として含めることができるHTMLのセクションです。Angular HTMLテンプレートは、通常のHTMLと同じようにブラウザ上でビューやユーザーインターフェイスをレンダリングしますが、より多くの機能を備えています。</target>
        </trans-unit>
        <trans-unit id="bce41e0b2ee4443f7cf1479faf944656cbc11207" translate="yes" xml:space="preserve">
          <source>Each DOM element on the page is owned exactly by one framework. Whichever framework instantiated the element is the owner. Each framework only updates/interacts with its own DOM elements and ignores others.</source>
          <target state="translated">ページ上の各 DOM 要素は、1 つのフレームワークによって正確に所有されます。要素のインスタンスを作成したフレームワークが所有者です。各フレームワークは自身の DOM 要素を更新/操作するだけで、他の要素は無視されます。</target>
        </trans-unit>
        <trans-unit id="90ab67a33781d98870fed308de0b4ac790f7eec7" translate="yes" xml:space="preserve">
          <source>Each additional app that you create with &lt;code&gt;ng generate application&lt;/code&gt; has a corresponding end-to-end test project, with its own configuration section. When you create a library project with &lt;code&gt;ng generate library&lt;/code&gt;, the library project is also added to the &lt;code&gt;projects&lt;/code&gt; section.</source>
          <target state="translated">&lt;code&gt;ng generate application&lt;/code&gt; 作成する追加の各アプリケーションには、独自の構成セクションを持つ、対応するエンドツーエンドのテストプロジェクトがあります。 &lt;code&gt;ng generate library&lt;/code&gt; を使用してライブラリプロジェクトを作成すると、ライブラリプロジェクトも &lt;code&gt;projects&lt;/code&gt; セクションに追加されます。</target>
        </trans-unit>
        <trans-unit id="fc1c3c3aef455453fc117482bdb289b01b6eead4" translate="yes" xml:space="preserve">
          <source>Each area has its own area root component.</source>
          <target state="translated">各エリアには、それぞれのエリアルート成分があります。</target>
        </trans-unit>
        <trans-unit id="7935d876ab66da316599115544c04f9d078334fb" translate="yes" xml:space="preserve">
          <source>Each area root component has its own router outlet and child routes.</source>
          <target state="translated">各エリアルートコンポーネントは、独自のルーターアウトレットと子ルートを持っています。</target>
        </trans-unit>
        <trans-unit id="78e59ef6547ad3c662e30fa847b04b1ddce59b61" translate="yes" xml:space="preserve">
          <source>Each asset group specifies both a group of resources and a policy that governs them. This policy determines when the resources are fetched and what happens when changes are detected.</source>
          <target state="translated">各アセットグループは、リソースのグループとそれを管理するポリシーの両方を指定します。このポリシーは、リソースがいつ取得されるか、変更が検出されたときに何が起こるかを決定します。</target>
        </trans-unit>
        <trans-unit id="c151d68718ffef6d0eacffc4944821511f35e949" translate="yes" xml:space="preserve">
          <source>Each binding gets its own pipe instance.</source>
          <target state="translated">各バインディングは、それ自身のパイプインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="d091b6893ccf3885f59067c45c1301d7ee5ee6a4" translate="yes" xml:space="preserve">
          <source>Each bootstrapped component is the base of its own tree of components. Inserting a bootstrapped component usually triggers a cascade of component creations that fill out that tree.</source>
          <target state="translated">各ブートストラップされたコンポーネントは、それ自身のコンポーネント・ツリーのベースとなります。ブートストラップされたコンポーネントを挿入すると、通常は、そのツリーを埋めるコンポーネント作成のカスケードが発生します。</target>
        </trans-unit>
        <trans-unit id="26e7f477d783d9a514df967e209611ec60a31a55" translate="yes" xml:space="preserve">
          <source>Each budget entry is a JSON object with the following properties:</source>
          <target state="translated">各予算項目は、以下のプロパティを持つJSONオブジェクトです。</target>
        </trans-unit>
        <trans-unit id="017a90f1b9d26ddfbb620db54aae6370b403e642" translate="yes" xml:space="preserve">
          <source>Each callback must take a &lt;code&gt;&lt;a href=&quot;componentref&quot;&gt;ComponentRef&lt;/a&gt;&lt;/code&gt; instance and return nothing.</source>
          <target state="translated">各コールバックは &lt;code&gt;&lt;a href=&quot;componentref&quot;&gt;ComponentRef&lt;/a&gt;&lt;/code&gt; インスタンスを取り、何も返さない必要があります。</target>
        </trans-unit>
        <trans-unit id="0a8b076ccfe8cc8605884f50d353ce0d05ae0da5" translate="yes" xml:space="preserve">
          <source>Each component has a &lt;em&gt;host view&lt;/em&gt;, and can have additional &lt;em&gt;embedded views&lt;/em&gt;. An embedded view in component A is the host view of component B, which can in turn have embedded view. This means that there is a &lt;a href=&quot;glossary#view-hierarchy&quot;&gt;view hierarchy&lt;/a&gt; for each component, of which that component's host view is the root.</source>
          <target state="translated">各コンポーネントには&lt;em&gt;ホストビューがあり&lt;/em&gt;、追加の&lt;em&gt;埋め込みビューを&lt;/em&gt;持つことができ&lt;em&gt;ます&lt;/em&gt;。コンポーネントAの埋め込みビューは、コンポーネントBのホストビューであり、埋め込みビューを持つことができます。これは、各コンポーネントの&lt;a href=&quot;glossary#view-hierarchy&quot;&gt;ビュー階層&lt;/a&gt;があり、そのコンポーネントのホストビューがルートであることを意味します。</target>
        </trans-unit>
        <trans-unit id="cdd629c7b0c6876a713f0fae8f947f5dcd9bddb7" translate="yes" xml:space="preserve">
          <source>Each component, service, and filter is in its own source file, as per the &lt;a href=&quot;https://github.com/johnpapa/angular-styleguide/blob/master/a1/README.md#single-responsibility&quot;&gt;Rule of 1&lt;/a&gt;.</source>
          <target state="translated">1の&lt;a href=&quot;https://github.com/johnpapa/angular-styleguide/blob/master/a1/README.md#single-responsibility&quot;&gt;ルール&lt;/a&gt;に従って、各コンポーネント、サービス、およびフィルターは独自のソースファイルにあります。</target>
        </trans-unit>
        <trans-unit id="a543edae922fea0770d08c1fee4f1f41525fd010" translate="yes" xml:space="preserve">
          <source>Each control is explicitly created in the component class by creating a &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; instance manually or with &lt;code&gt;&lt;a href=&quot;../api/forms/formbuilder&quot;&gt;FormBuilder&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">各制御は、明示的に作成することにより、コンポーネントクラスに作成され &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; の手動またはでインスタンスを &lt;code&gt;&lt;a href=&quot;../api/forms/formbuilder&quot;&gt;FormBuilder&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c8d35b3156ab5bb60d84a0eef93b291d2f5f2608" translate="yes" xml:space="preserve">
          <source>Each definition translates to a &lt;a href=&quot;../api/router/route&quot;&gt;Route&lt;/a&gt; object which has two things: a &lt;code&gt;path&lt;/code&gt;, the URL path segment for this route; and a &lt;code&gt;component&lt;/code&gt;, the component associated with this route.</source>
          <target state="translated">それぞれの定義はに変換&lt;a href=&quot;../api/router/route&quot;&gt;ルート&lt;/a&gt;二つ持つオブジェクト： &lt;code&gt;path&lt;/code&gt; 、このルートのURLパスセグメントを、そして &lt;code&gt;component&lt;/code&gt; 、このルートに関連付けられているコンポーネント。</target>
        </trans-unit>
        <trans-unit id="6921b51ac3141eb9836e22d8d2b5c211ef71554c" translate="yes" xml:space="preserve">
          <source>Each downgraded component/injectable needs to be explicitly associated with a downgraded module. See &lt;code&gt;&lt;a href=&quot;downgradecomponent&quot;&gt;downgradeComponent&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;downgradeinjectable&quot;&gt;downgradeInjectable&lt;/a&gt;()&lt;/code&gt; for more details.</source>
          <target state="translated">ダウングレードされた各コンポーネント/インジェクタブルは、ダウングレードされたモジュールに明示的に関連付ける必要があります。詳細については、 &lt;code&gt;&lt;a href=&quot;downgradecomponent&quot;&gt;downgradeComponent&lt;/a&gt;()&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;downgradeinjectable&quot;&gt;downgradeInjectable&lt;/a&gt;()&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="964518f2ab2a578d6482970abbf1f6d41de5a43c" translate="yes" xml:space="preserve">
          <source>Each feature area resides in its own folder.</source>
          <target state="translated">各機能領域は、それぞれ独自のフォルダに存在します。</target>
        </trans-unit>
        <trans-unit id="579cdc1ac54406dd19dd62a973087397898ead99" translate="yes" xml:space="preserve">
          <source>Each feature has its own Angular feature module.</source>
          <target state="translated">各機能にはそれぞれ独自のAngular機能モジュールがあります。</target>
        </trans-unit>
        <trans-unit id="c1c22426d18f303c0bc0731b497267fdc477bb27" translate="yes" xml:space="preserve">
          <source>Each guideline describes either a good or bad practice, and all have a consistent presentation.</source>
          <target state="translated">各ガイドラインには、良いことも悪いことも記載されており、すべてのガイドラインには一貫した表現がなされています。</target>
        </trans-unit>
        <trans-unit id="b46884375c2f4ef07db5d04e100e45c7f831280d" translate="yes" xml:space="preserve">
          <source>Each hero in the heroes list should have a delete button.</source>
          <target state="translated">ヒーローリストの各ヒーローには削除ボタンがあるはずです。</target>
        </trans-unit>
        <trans-unit id="bd0fa650708acb7f6ffbe8e7c1672a65c1d77539" translate="yes" xml:space="preserve">
          <source>Each input element has a &lt;code&gt;name&lt;/code&gt; property that is required by Angular forms to register the control with the form.</source>
          <target state="translated">各入力要素には、Angularフォームがコントロールをフォームに登録するために必要な &lt;code&gt;name&lt;/code&gt; プロパティがあります。</target>
        </trans-unit>
        <trans-unit id="8991cfa20d0f3cc365961eb7850ff907e46e7442" translate="yes" xml:space="preserve">
          <source>Each input element has an &lt;code&gt;id&lt;/code&gt; property that is used by the &lt;code&gt;label&lt;/code&gt; element's &lt;code&gt;for&lt;/code&gt; attribute to match the label to its input control.</source>
          <target state="translated">各入力要素には、ラベルをその入力コントロールに一致させる &lt;code&gt;for&lt;/code&gt; &lt;code&gt;label&lt;/code&gt; 要素のfor属性によって使用される &lt;code&gt;id&lt;/code&gt; プロパティがあります。</target>
        </trans-unit>
        <trans-unit id="86b355bab0e88cffc8ba8e29950e32e376f810d7" translate="yes" xml:space="preserve">
          <source>Each interface defines the prototype for a single hook method, whose name is the interface name prefixed with &lt;code&gt;ng&lt;/code&gt;. For example, the &lt;code&gt;&lt;a href=&quot;../api/core/oninit&quot;&gt;OnInit&lt;/a&gt;&lt;/code&gt; interface has a hook method named &lt;code&gt;ngOnInit()&lt;/code&gt;. If you implement this method in your component or directive class, Angular calls it shortly after checking the input properties for that component or directive for the first time.</source>
          <target state="translated">各インターフェイスは、シングルフックメソッドのプロトタイプを定義します。その名前は、接頭辞 &lt;code&gt;ng&lt;/code&gt; が付いたインターフェイス名です。たとえば、 &lt;code&gt;&lt;a href=&quot;../api/core/oninit&quot;&gt;OnInit&lt;/a&gt;&lt;/code&gt; インターフェイスには &lt;code&gt;ngOnInit()&lt;/code&gt; という名前のフックメソッドがあります。このメソッドをコンポーネントまたはディレクティブクラスに実装すると、Angularは、そのコンポーネントまたはディレクティブの入力プロパティを初めてチェックした直後にこのメソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="70cb6ceab5e15f47d5f692e35d9b740e519a062b" translate="yes" xml:space="preserve">
          <source>Each interface has a single hook method whose name is the interface name prefixed with &lt;code&gt;ng&lt;/code&gt;. For example, the &lt;code&gt;&lt;a href=&quot;../api/core/oninit&quot;&gt;OnInit&lt;/a&gt;&lt;/code&gt; interface has a hook method named &lt;code&gt;ngOnInit()&lt;/code&gt; that Angular calls shortly after creating the component:</source>
          <target state="translated">各インターフェースには、名前が &lt;code&gt;ng&lt;/code&gt; で始まるインターフェース名である単一のフックメソッドがあります。たとえば、 &lt;code&gt;&lt;a href=&quot;../api/core/oninit&quot;&gt;OnInit&lt;/a&gt;&lt;/code&gt; インターフェースには、コンポーネントの作成直後にAngularが呼び出す &lt;code&gt;ngOnInit()&lt;/code&gt; という名前のフックメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="88ebe07ff5ed7d63169a91947c0983cd36bde1c0" translate="yes" xml:space="preserve">
          <source>Each interface has a single hook method whose name is the interface name prefixed with &lt;code&gt;ng&lt;/code&gt;. For example, the &lt;code&gt;&lt;a href=&quot;../api/core/oninit&quot;&gt;OnInit&lt;/a&gt;&lt;/code&gt; interface has a hook method named &lt;code&gt;ngOnInit&lt;/code&gt;.</source>
          <target state="translated">各インターフェースには、名前が &lt;code&gt;ng&lt;/code&gt; で始まるインターフェース名である単一のフックメソッドがあります。たとえば、 &lt;code&gt;&lt;a href=&quot;../api/core/oninit&quot;&gt;OnInit&lt;/a&gt;&lt;/code&gt; インターフェースには &lt;code&gt;ngOnInit&lt;/code&gt; という名前のフックメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="c49e1bbcb1085374dcd66a5403e9ecf43bb0628b" translate="yes" xml:space="preserve">
          <source>Each module has its own top-level scope. In other words, top-level variables and functions in a module are not seen in other scripts or modules. Each module provides a namespace for identifiers to prevent them from clashing with identifiers in other modules. With multiple modules, you can prevent accidental global variables by creating a single global namespace and adding sub-modules to it.</source>
          <target state="translated">各モジュールは、独自のトップレベルスコープを持っています。言い換えれば、モジュール内のトップレベルの変数や関数は、他のスクリプトやモジュールからは見えません。各モジュールは、他のモジュールの識別子と衝突しないように識別子の名前空間を提供します。複数のモジュールを使用する場合は、単一のグローバル名前空間を作成し、そこにサブモジュールを追加することで、誤ってグローバル変数が発生するのを防ぐことができます。</target>
        </trans-unit>
        <trans-unit id="736fa5d5b88f601a4b68d26da49837f873c9a8fb" translate="yes" xml:space="preserve">
          <source>Each named configuration can have defaults for any of the options that apply to the various &lt;a href=&quot;glossary#target&quot;&gt;builder targets&lt;/a&gt;, such as &lt;code&gt;build&lt;/code&gt;, &lt;code&gt;serve&lt;/code&gt;, and &lt;code&gt;test&lt;/code&gt;. The &lt;a href=&quot;cli&quot;&gt;Angular CLI&lt;/a&gt;&lt;code&gt;build&lt;/code&gt;, &lt;code&gt;serve&lt;/code&gt;, and &lt;code&gt;test&lt;/code&gt; commands can then replace files with appropriate versions for your intended target environment.</source>
          <target state="translated">名前付きの各構成には、 &lt;code&gt;build&lt;/code&gt; 、 &lt;code&gt;serve&lt;/code&gt; 、 &lt;code&gt;test&lt;/code&gt; などのさまざまな&lt;a href=&quot;glossary#target&quot;&gt;ビルダーターゲットに&lt;/a&gt;適用されるオプションのデフォルトを設定できます。&lt;a href=&quot;cli&quot;&gt;角度CLIの&lt;/a&gt; &lt;code&gt;build&lt;/code&gt; 、 &lt;code&gt;serve&lt;/code&gt; 、および &lt;code&gt;test&lt;/code&gt; コマンドは、あなたの意図したターゲット環境に適したバージョンのファイルを置き換えることができます。</target>
        </trans-unit>
        <trans-unit id="15e01d9b0088c32204d172b9d23d1982bfb25d78" translate="yes" xml:space="preserve">
          <source>Each named schematic in the collection has the following main parts.</source>
          <target state="translated">コレクション内の各名前付き回路図には、以下の主要部分があります。</target>
        </trans-unit>
        <trans-unit id="329b32865b1001d3b4b288fac86edd40b02aa8fb" translate="yes" xml:space="preserve">
          <source>Each nested &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; can present a custom message for one of the possible validation errors. There are messages for &lt;code&gt;required&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../api/forms/minlengthvalidator&quot;&gt;minlength&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;forbiddenName&lt;/code&gt;.</source>
          <target state="translated">ネストされた各 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; は、考えられる検証エラーの1つに対してカスタムメッセージを表示できます。以下のためのメッセージがある &lt;code&gt;required&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;../api/forms/minlengthvalidator&quot;&gt;minlength&lt;/a&gt;&lt;/code&gt; 、および &lt;code&gt;forbiddenName&lt;/code&gt; は。</target>
        </trans-unit>
        <trans-unit id="5185bf611cc0f1996c1da943dea939467c034e5d" translate="yes" xml:space="preserve">
          <source>Each of these subjects is introduced in more detail in the following pages.</source>
          <target state="translated">それぞれの科目については、以下のページで詳しく紹介しています。</target>
        </trans-unit>
        <trans-unit id="492742972cab7240263d9a307231b34fd42acbd2" translate="yes" xml:space="preserve">
          <source>Each operator works as follows:</source>
          <target state="translated">各演算子は以下のように動作します。</target>
        </trans-unit>
        <trans-unit id="ee30bb9b05511cb5ca56d1dc673406c8457ba50a" translate="yes" xml:space="preserve">
          <source>Each option associates key with a type, description, and optional alias. The type defines the shape of the value you expect, and the description is displayed when the user requests usage help for your schematic.</source>
          <target state="translated">各オプションは、キーにタイプ、説明、オプションのエイリアスを関連付けます。type は期待する値の形状を定義し、description はユーザが回路図の使用法を要求した際に表示されます。</target>
        </trans-unit>
        <trans-unit id="bb6fa6715460582b0c4be7a4edfd3b729267ae3d" translate="yes" xml:space="preserve">
          <source>Each outlet can have a unique name, determined by the optional &lt;code&gt;name&lt;/code&gt; attribute. The name cannot be set or changed dynamically. If not set, default value is &quot;primary&quot;.</source>
          <target state="translated">各コンセントには、オプションの &lt;code&gt;name&lt;/code&gt; 属性によって決定される一意の名前を付けることができます。名前を動的に設定または変更することはできません。設定しない場合、デフォルト値は「primary」です。</target>
        </trans-unit>
        <trans-unit id="61c9bd127991ee917708f24212eb86c5a2ff2569" translate="yes" xml:space="preserve">
          <source>Each override method takes a &lt;code&gt;&lt;a href=&quot;../api/core/testing/metadataoverride&quot;&gt;MetadataOverride&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; where &lt;code&gt;T&lt;/code&gt; is the kind of metadata appropriate to the method, that is, the parameter of an &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;@&lt;a href=&quot;../api/core/pipe&quot;&gt;Pipe&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">各オーバーライドメソッドがかかり &lt;code&gt;&lt;a href=&quot;../api/core/testing/metadataoverride&quot;&gt;MetadataOverride&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;code&gt;T&lt;/code&gt; は、のパラメータである方法に関するメタデータを適切なの一種である &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;&lt;/code&gt; 、又は &lt;code&gt;@&lt;a href=&quot;../api/core/pipe&quot;&gt;Pipe&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6d715ab120a554227f54f05f4c7b115b5a68c786" translate="yes" xml:space="preserve">
          <source>Each pipe instance caches its own URL and data and calls the server only once.</source>
          <target state="translated">各パイプインスタンスは、独自のURLとデータをキャッシュし、一度だけサーバーを呼び出します。</target>
        </trans-unit>
        <trans-unit id="f2688d78ae270bd7ee215561bf70670e97db0be1" translate="yes" xml:space="preserve">
          <source>Each pipe instance caches its own URL and data.</source>
          <target state="translated">各パイプインスタンスは、独自の URL とデータをキャッシュします。</target>
        </trans-unit>
        <trans-unit id="8406cc7112c99d403e6f12dc6489847bf043bfb4" translate="yes" xml:space="preserve">
          <source>Each pipe instance only calls the server once.</source>
          <target state="translated">各パイプインスタンスは一度だけサーバーを呼び出します。</target>
        </trans-unit>
        <trans-unit id="8e5917c5d975c851fea3302a396d10e8bcc17992" translate="yes" xml:space="preserve">
          <source>Each product in the list displays the same way, one after another on the page. To iterate over the predefined list of products, put the &lt;code&gt;*&lt;a href=&quot;api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; directive on a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;, as follows:</source>
          <target state="translated">リスト内の各製品は、ページ上で次々と同じように表示されます。事前定義された製品リストを反復処理するには、 &lt;code&gt;*&lt;a href=&quot;api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; ように* ngForディレクティブを &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; に配置します。</target>
        </trans-unit>
        <trans-unit id="f697215d7bc3aea1a76723758a5870daf7b4cc95" translate="yes" xml:space="preserve">
          <source>Each product now has a &quot;Share&quot; button:</source>
          <target state="translated">各商品に「シェア」ボタンが追加されました。</target>
        </trans-unit>
        <trans-unit id="817ec3d74653ed7827a7aafb8dc9a22515f599eb" translate="yes" xml:space="preserve">
          <source>Each request results in the appropriate view for the requested route. The &lt;code&gt;&lt;a href=&quot;../api/platform-server/rendermodule&quot;&gt;renderModule&lt;/a&gt;()&lt;/code&gt; function renders the view within the &lt;code&gt;&amp;lt;app&amp;gt;&lt;/code&gt; tag of the template, creating a finished HTML page for the client.</source>
          <target state="translated">リクエストごとに、リクエストされたルートの適切なビューが表示されます。 &lt;code&gt;&lt;a href=&quot;../api/platform-server/rendermodule&quot;&gt;renderModule&lt;/a&gt;()&lt;/code&gt; 関数は、範囲内のビューをレンダリングする &lt;code&gt;&amp;lt;app&amp;gt;&lt;/code&gt; クライアントのために、完成したHTMLページを作成し、テンプレートのタグ。</target>
        </trans-unit>
        <trans-unit id="ec66a0f102f02c3d9406b868fa0c9eeceb3d7411" translate="yes" xml:space="preserve">
          <source>Each request results in the appropriate view for the requested route. The &lt;code&gt;&lt;a href=&quot;../api/platform-server/rendermodulefactory&quot;&gt;renderModuleFactory&lt;/a&gt;()&lt;/code&gt; function renders the view within the &lt;code&gt;&amp;lt;app&amp;gt;&lt;/code&gt; tag of the template, creating a finished HTML page for the client.</source>
          <target state="translated">各リクエストは、リクエストされたルートに適切なビューをもたらします。 &lt;code&gt;&lt;a href=&quot;../api/platform-server/rendermodulefactory&quot;&gt;renderModuleFactory&lt;/a&gt;()&lt;/code&gt; 関数は、範囲内のビューをレンダリングする &lt;code&gt;&amp;lt;app&amp;gt;&lt;/code&gt; クライアントのために、完成したHTMLページを作成し、テンプレートのタグ。</target>
        </trans-unit>
        <trans-unit id="3656d4ac1781afe1c6b1d36d5e961f3780f261ab" translate="yes" xml:space="preserve">
          <source>Each route in this array is a JavaScript object that contains two properties. The first property, &lt;code&gt;path&lt;/code&gt;, defines the URL path for the route. The second property, &lt;code&gt;component&lt;/code&gt;, defines the component Angular should use for the corresponding path.</source>
          <target state="translated">この配列の各ルートは、2つのプロパティを含むJavaScriptオブジェクトです。最初のプロパティは、 &lt;code&gt;path&lt;/code&gt; 、ルートのURLのパスを定義します。2番目のプロパティ &lt;code&gt;component&lt;/code&gt; は、Angularが対応するパスに使用するコンポーネントを定義します。</target>
        </trans-unit>
        <trans-unit id="b5e7f38d5576f468babd40cdb4dbdec27a0c68b2" translate="yes" xml:space="preserve">
          <source>Each routing module augments the route configuration &lt;em&gt;in the order of import&lt;/em&gt;. If you list &lt;code&gt;AppRoutingModule&lt;/code&gt; first, the wildcard route will be registered &lt;em&gt;before&lt;/em&gt; the hero routes. The wildcard route&amp;mdash;which matches &lt;em&gt;every&lt;/em&gt; URL&amp;mdash;will intercept the attempt to navigate to a hero route.</source>
          <target state="translated">各ルーティングモジュールは、&lt;em&gt;インポート順に&lt;/em&gt;ルート構成&lt;em&gt;を&lt;/em&gt;拡張します。 &lt;code&gt;AppRoutingModule&lt;/code&gt; を最初にリストすると、ワイルドカードルートがヒーロールートの&lt;em&gt;前&lt;/em&gt;に登録されます。ワイルドカードルート（&lt;em&gt;すべての&lt;/em&gt; URLに一致）は、ヒーロールートに移動する試みを阻止します。</target>
        </trans-unit>
        <trans-unit id="90e9e14ec2515dc8c61a567e4a607b7a699b6da0" translate="yes" xml:space="preserve">
          <source>Each routing module augments the route configuration in the order of import. If you listed &lt;code&gt;AppRoutingModule&lt;/code&gt; first, the wildcard route would be registered &lt;em&gt;before&lt;/em&gt; the hero routes. The wildcard route&amp;mdash;which matches &lt;em&gt;every&lt;/em&gt; URL&amp;mdash;would intercept the attempt to navigate to a hero route.</source>
          <target state="translated">各ルーティングモジュールは、インポートの順序でルート構成を拡張します。 &lt;code&gt;AppRoutingModule&lt;/code&gt; を最初にリストした場合、ワイルドカードルートはヒーロールートの&lt;em&gt;前&lt;/em&gt;に登録されます。&lt;em&gt;すべての&lt;/em&gt;URLに一致するワイルドカードルートは、ヒーロールートへのナビゲートの試みを傍受します。</target>
        </trans-unit>
        <trans-unit id="168c2ec77caf801e972506d1e6e8beb63b52436b" translate="yes" xml:space="preserve">
          <source>Each schematic runs in a context, represented by a &lt;code&gt;SchematicContext&lt;/code&gt; object.</source>
          <target state="translated">各回路図は、 &lt;code&gt;SchematicContext&lt;/code&gt; オブジェクトによって表されるコンテキストで実行されます。</target>
        </trans-unit>
        <trans-unit id="4825447444d4e18f42f91e26d03b905e996c72be" translate="yes" xml:space="preserve">
          <source>Each script tag has a &lt;code&gt;type=&quot;module&quot;&lt;/code&gt; or &lt;code&gt;nomodule&lt;/code&gt; attribute. Browsers with native support for ES modules only load the scripts with the &lt;code&gt;module&lt;/code&gt; type attribute and ignore scripts with the &lt;code&gt;nomodule&lt;/code&gt; attribute. Legacy browsers only load the scripts with the &lt;code&gt;nomodule&lt;/code&gt; attribute, and ignore the script tags with the &lt;code&gt;module&lt;/code&gt; type that load ES modules.</source>
          <target state="translated">各スクリプトタグには、 &lt;code&gt;type=&quot;module&quot;&lt;/code&gt; または &lt;code&gt;nomodule&lt;/code&gt; 属性があります。ESモジュールをネイティブでサポートしているブラウザは、 &lt;code&gt;module&lt;/code&gt; タイプ属性のスクリプトのみをロードし、 &lt;code&gt;nomodule&lt;/code&gt; 属性のスクリプトは無視します。レガシーブラウザは、 &lt;code&gt;nomodule&lt;/code&gt; 属性を持つスクリプトのみをロードし、ESモジュールをロードする &lt;code&gt;module&lt;/code&gt; タイプのスクリプトタグを無視します。</target>
        </trans-unit>
        <trans-unit id="e75bf221834c2b1fb6b2d823795b2526d503b732" translate="yes" xml:space="preserve">
          <source>Each secondary outlet has its own navigation, independent of the navigation driving the primary outlet. Changing a current route that displays in the primary outlet has no effect on the popup outlet. That's why the popup stays visible as you navigate among the crises and heroes.</source>
          <target state="translated">各セカンダリアウトレットには、プライマリアウトレットを駆動するナビゲーションとは独立した独自のナビゲーションがあります。プライマリーアウトレットに表示されている現在のルートを変更しても、ポップアップアウトレットには何の影響もありません。そのため、危機とヒーローの間をナビゲートしても、ポップアップは表示されたままです。</target>
        </trans-unit>
        <trans-unit id="299e7290b3f2a8d07e58e0a4f9e3128676fb22d4" translate="yes" xml:space="preserve">
          <source>Each section of the configuration file is described below.</source>
          <target state="translated">以下、設定ファイルの各セクションについて説明します。</target>
        </trans-unit>
        <trans-unit id="e9227a7aba828bec8cc740a7da8b3012ad3a4eca" translate="yes" xml:space="preserve">
          <source>Each spy's birth and death marks the birth and death of the attached hero &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; with an entry in the &lt;em&gt;Hook Log&lt;/em&gt; as seen here:</source>
          <target state="translated">各スパイの誕生と死マーク添付ヒーローの誕生と死 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; のエントリを持つ&lt;em&gt;フックログ&lt;/em&gt;ここに見られるように：</target>
        </trans-unit>
        <trans-unit id="2d2df78a45b75e2dae415831c7b2d23b575313f3" translate="yes" xml:space="preserve">
          <source>Each spy's creation and destruction marks the appearance and disappearance of the attached hero &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; with an entry in the &lt;em&gt;Hook Log&lt;/em&gt; as seen here:</source>
          <target state="translated">各スパイの創造と破壊マーク添付英雄の出現と消失 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; のエントリを持つ&lt;em&gt;フックログ&lt;/em&gt;ここに見られるように：</target>
        </trans-unit>
        <trans-unit id="783713692d2fe672a17ac40ef0511469cdd78009" translate="yes" xml:space="preserve">
          <source>Each string in the array defines some CSS for this component.</source>
          <target state="translated">配列内の各文字列は、このコンポーネントのCSSを定義します。</target>
        </trans-unit>
        <trans-unit id="48476a09dad5d99e11d658a9501cc06cfe59f311" translate="yes" xml:space="preserve">
          <source>Each switch-case statement contains an in-line HTML template or template reference that defines the subtree to be selected if the value of the match expression matches the value of the switch expression.</source>
          <target state="translated">各スイッチケース文には、マッチ式の値がスイッチ式の値と一致した場合に選択されるサブツリーを定義するインライン HTML テンプレートまたはテンプレート参照が含まれています。</target>
        </trans-unit>
        <trans-unit id="2fba55ede002bcad03ef30757908c0ebc006fda9" translate="yes" xml:space="preserve">
          <source>Each target object specifies the &lt;code&gt;builder&lt;/code&gt; for that target, which is the npm package for the tool that Architect runs. In addition, each target has an &lt;code&gt;options&lt;/code&gt; section that configures default options for the target, and a &lt;code&gt;configurations&lt;/code&gt; section that names and specifies alternative configurations for the target. See the example in &lt;a href=&quot;workspace-config#build-target&quot;&gt;Build target&lt;/a&gt; below.</source>
          <target state="translated">各ターゲットオブジェクトは、そのターゲットの &lt;code&gt;builder&lt;/code&gt; を指定します。これは、Architectが実行するツールのnpmパッケージです。さらに、各ターゲットには、ターゲットのデフォルトオプションを構成する &lt;code&gt;options&lt;/code&gt; セクションと、ターゲットの代替構成を指定および指定する &lt;code&gt;configurations&lt;/code&gt; セクションがあります。以下の&lt;a href=&quot;workspace-config#build-target&quot;&gt;ビルドターゲット&lt;/a&gt;の例を参照してください。</target>
        </trans-unit>
        <trans-unit id="3ab19647e721dd81282422e89f7501369e20553f" translate="yes" xml:space="preserve">
          <source>Each tax return component has the following characteristics:</source>
          <target state="translated">各確定申告の構成要素には、以下のような特徴があります。</target>
        </trans-unit>
        <trans-unit id="b9f5cecbb342c5b2c155bd0ede4d1fcb97168969" translate="yes" xml:space="preserve">
          <source>Each time a new alias instance is added, the new form array instance is provided its control based on the index. This allows you to track each individual control when calculating the status and value of the root control.</source>
          <target state="translated">新しいエイリアスインスタンスが追加されるたびに、新しいフォーム配列インスタンスはインデックスに基づいてそのコントロールを提供します。これにより、ルートコントロールの状態と値を計算する際に、個々のコントロールを追跡することができます。</target>
        </trans-unit>
        <trans-unit id="4191b0fc88190e0dfd1f5d02d826834c374a2e8e" translate="yes" xml:space="preserve">
          <source>Each time an animation is triggered in Angular, the parent animation always get priority and child animations are blocked. In order for a child animation to run, the parent animation must query each of the elements containing child animations and then allow the animations to run using the &lt;a href=&quot;../api/animations/animatechild&quot;&gt;&lt;code&gt;animateChild()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">Angularでアニメーションがトリガーされるたびに、親アニメーションが常に優先され、子アニメーションはブロックされます。子アニメーションを実行するには、親アニメーションが子アニメーションを含む各要素をクエリし、&lt;a href=&quot;../api/animations/animatechild&quot;&gt; &lt;code&gt;animateChild()&lt;/code&gt; &lt;/a&gt;関数を使用してアニメーションを実行できるようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="39caf3d6f6d11e7504ee29654c47c89fcaff17d7" translate="yes" xml:space="preserve">
          <source>Each time an animation is triggered in Angular, the parent animation has priority and any child animations are blocked. In order for a child animation to run, the parent animation must query each of the elements containing child animations, and run them using this function.</source>
          <target state="translated">Angularでアニメーションがトリガーされるたびに、親アニメーションが優先され、子アニメーションはブロックされます。子アニメーションを実行するためには、親アニメーションが子アニメーションを含む各要素に問い合わせを行い、この関数を使って実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="3cb9d1e78bc6a527f7c2b3ed0e6aadb310220c65" translate="yes" xml:space="preserve">
          <source>Each time items are added, the opacity fade-in animation runs, and each removed item is faded out. When either of these animations occur, the stagger effect is applied after each item's animation is started.</source>
          <target state="translated">アイテムが追加されるたびに不透明度フェードインアニメーションが実行され、削除されたアイテムはフェードアウトされます。いずれかのアニメーションが発生した場合、各アイテムのアニメーションが開始された後にスタッガー効果が適用されます。</target>
        </trans-unit>
        <trans-unit id="840ece201b19a0940e7b47a2f6716b01bcfcf4bd" translate="yes" xml:space="preserve">
          <source>Earlier component tests configured the testing module with a few &lt;code&gt;declarations&lt;/code&gt; like this:</source>
          <target state="translated">以前のコンポーネントテストでは、次のようないくつかの &lt;code&gt;declarations&lt;/code&gt; テストモジュールを構成しました。</target>
        </trans-unit>
        <trans-unit id="3b9a2bbbb5be998c7abeddf30825a264e234cf58" translate="yes" xml:space="preserve">
          <source>Earlier in 2020, we shared an &lt;a href=&quot;https://github.com/angular/angular/issues/38366&quot;&gt;RFC&lt;/a&gt; for Ivy library distribution. After invaluable feedback from the community, we developed a design of the project. We are now investing in the development of Ivy library distribution, including an update of the library package format to use Ivy compilation, unblock the deprecation of the View Engine library format, and &lt;a href=&quot;glossary#ngcc&quot;&gt;ngcc&lt;/a&gt;.</source>
          <target state="translated">2020年の初めに、Ivyライブラリ配布の&lt;a href=&quot;https://github.com/angular/angular/issues/38366&quot;&gt;RFC&lt;/a&gt;を共有しました。コミュニティからの貴重なフィードバックの後、私たちはプロジェクトのデザインを開発しました。現在、Ivyコンパイルを使用するためのライブラリパッケージ形式の更新、View Engineライブラリ形式の非推奨のブロック解除、および&lt;a href=&quot;glossary#ngcc&quot;&gt;ngcc&lt;/a&gt;を含む、Ivyライブラリ配布の開発に投資しています。</target>
        </trans-unit>
        <trans-unit id="8440b9eb7d03917b2509b5baeab2a299ce257eb0" translate="yes" xml:space="preserve">
          <source>Edge</source>
          <target state="translated">Edge</target>
        </trans-unit>
        <trans-unit id="46e5b375c74ca0c31347cccfda3742972be266ea" translate="yes" xml:space="preserve">
          <source>Edge (Chromium-based)</source>
          <target state="translated">Edge (Chromium ベース)</target>
        </trans-unit>
        <trans-unit id="a0dec05e152a15aac76a99730b18fb537af884ce" translate="yes" xml:space="preserve">
          <source>Edit a hero's name in the hero detail view. As you type, the hero name updates the heading at the top of the page. But when you click the &quot;go back button&quot;, the changes are lost.</source>
          <target state="translated">ヒーローの詳細表示でヒーローの名前を編集します。入力すると、ヒーロー名がページ上部の見出しを更新します。しかし、&quot;戻るボタン &quot;をクリックすると、変更は失われます。</target>
        </trans-unit>
        <trans-unit id="7a28f8fdf531d1de8cbfa03f27322c5ebe789231" translate="yes" xml:space="preserve">
          <source>Edit the &lt;code&gt;HeroSearchComponent&lt;/code&gt; class</source>
          <target state="translated">&lt;code&gt;HeroSearchComponent&lt;/code&gt; クラスを編集する</target>
        </trans-unit>
        <trans-unit id="a3828b5ef8330a0df646970e814f435f04fd02bc" translate="yes" xml:space="preserve">
          <source>Edit the &lt;code&gt;collection.json&lt;/code&gt; file to define the initial schema for your collection.</source>
          <target state="translated">&lt;code&gt;collection.json&lt;/code&gt; ファイルを編集して、コレクションの初期スキーマを定義します。</target>
        </trans-unit>
        <trans-unit id="7073c6d0ea9dffd93fe969dc4169c8dcf848dab5" translate="yes" xml:space="preserve">
          <source>Edit the &lt;code&gt;schematics/collection.json&lt;/code&gt; file to point to the new schematic subfolder, and include a pointer to a schema file that will specify inputs for the new schematic.</source>
          <target state="translated">新しい回路図のサブフォルダーを指すように &lt;code&gt;schematics/collection.json&lt;/code&gt; ファイルを編集し、新しい回路図の入力を指定するスキーマファイルへのポインターを含めます。</target>
        </trans-unit>
        <trans-unit id="243ae2ff9dd324df29ebd119467f5cddf3097987" translate="yes" xml:space="preserve">
          <source>Edit the &lt;code&gt;tsconfig.schematics.json&lt;/code&gt; file to add the following content.</source>
          <target state="translated">&lt;code&gt;tsconfig.schematics.json&lt;/code&gt; ファイルを編集して、次のコンテンツを追加します。</target>
        </trans-unit>
        <trans-unit id="5a6924cb28620025b7daa3b7cbd4b6ce71c3f34b" translate="yes" xml:space="preserve">
          <source>Edit the generated translation file: Translate the extracted text into the target language.</source>
          <target state="translated">生成された翻訳ファイルを編集します。抽出したテキストをターゲット言語に翻訳します。</target>
        </trans-unit>
        <trans-unit id="77da553bb02e4e75712d607e650908e418ab7c9e" translate="yes" xml:space="preserve">
          <source>Edit the hero</source>
          <target state="translated">主人公を編集する</target>
        </trans-unit>
        <trans-unit id="639e959572f60a7a83d110ab904c95adaaf8406f" translate="yes" xml:space="preserve">
          <source>Edit the template file &lt;code&gt;hero-form.component.html&lt;/code&gt;.</source>
          <target state="translated">テンプレートファイル &lt;code&gt;hero-form.component.html&lt;/code&gt; を編集します。</target>
        </trans-unit>
        <trans-unit id="3981b776edea32fe25eceae3ad0387a1b8dc1c18" translate="yes" xml:space="preserve">
          <source>Editing the Bazel configuration may prevent you opting out of Bazel. Custom behaviors driven by Bazel won't be available in other Builders.</source>
          <target state="translated">Bazelの設定を編集すると、Bazelからのオプトアウトができなくなる場合があります。Bazelによって駆動されるカスタムビヘイビアは、他のビルダーでは利用できません。</target>
        </trans-unit>
        <trans-unit id="720b5dbc53190f0e13902f7885ccaf43bb9991de" translate="yes" xml:space="preserve">
          <source>Effect</source>
          <target state="translated">Effect</target>
        </trans-unit>
        <trans-unit id="bfc1131d505eb33e1e38ec6565dbfcbb9f7800fc" translate="yes" xml:space="preserve">
          <source>Either way, the &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt; decorator tells Angular that this property is &lt;em&gt;public&lt;/em&gt; and available for binding by a parent component. Without &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt;, Angular refuses to bind to the property.</source>
          <target state="translated">どちらの方法でも、 &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt; デコレーターはこのプロパティが&lt;em&gt;パブリック&lt;/em&gt;であり、親コンポーネントによるバインディングに使用できることをAngularに通知します。なければ &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt; 、角度はプロパティにバインドすることを拒否します。</target>
        </trans-unit>
        <trans-unit id="3ea7a1338139564ad098308f10ae612adbafe8eb" translate="yes" xml:space="preserve">
          <source>Element event Component event Directive event</source>
          <target state="translated">要素イベント コンポーネントイベント ディレクティブイベント</target>
        </trans-unit>
        <trans-unit id="78b32d614954e5819e912e04c63058e7347b0a0b" translate="yes" xml:space="preserve">
          <source>Element events may be the more common targets, but Angular looks first to see if the name matches an event property of a known directive, as it does in the following example:</source>
          <target state="translated">要素のイベントがより一般的なターゲットになるかもしれませんが、Angularでは以下の例のように、名前が既知のディレクティブのイベントプロパティと一致するかどうかを最初に調べます。</target>
        </trans-unit>
        <trans-unit id="1e3b8388bb2dc950b3f200f71c924d0916f2c8eb" translate="yes" xml:space="preserve">
          <source>Element for which the DOM listeners should be retrieved.</source>
          <target state="translated">DOM リスナーが取得すべき要素。</target>
        </trans-unit>
        <trans-unit id="613e9030149d259c057b76dc9391b404f9b8d7be" translate="yes" xml:space="preserve">
          <source>Element for which to get the surrounding component instance.</source>
          <target state="translated">周囲のコンポーネントのインスタンスを取得するための要素。</target>
        </trans-unit>
        <trans-unit id="a8af1f8f4a0f60574a912870fe01652703e8ae51" translate="yes" xml:space="preserve">
          <source>Element properties may be the more common targets, but Angular looks first to see if the name is a property of a known directive, as it is in the following example:</source>
          <target state="translated">要素のプロパティがより一般的なターゲットになるかもしれませんが、以下の例のように、Angularはまず名前が既知のディレクティブのプロパティであるかどうかを調べます。</target>
        </trans-unit>
        <trans-unit id="b814267cbc9b4c2f5dbdcaa48521ab0db7fa228f" translate="yes" xml:space="preserve">
          <source>Element properties named with dash case (&lt;code&gt;-&lt;/code&gt;). Dash case is the naming convention for custom elements.</source>
          <target state="translated">ダッシュケース（ &lt;code&gt;-&lt;/code&gt; ）で名前が付けられた要素プロパティ。ダッシュケースは、カスタム要素の命名規則です。</target>
        </trans-unit>
        <trans-unit id="4281bfd6552b34124101c7945eb3921590e1840a" translate="yes" xml:space="preserve">
          <source>Element property Component property Directive property</source>
          <target state="translated">要素プロパティ コンポーネントプロパティ ディレクティブプロパティ</target>
        </trans-unit>
        <trans-unit id="4ff1bdab6222ab6715c6ab38046757d970570de5" translate="yes" xml:space="preserve">
          <source>Element that the listener is bound to.</source>
          <target state="translated">リスナーがバインドされる要素。</target>
        </trans-unit>
        <trans-unit id="610e33c435ffd4f9cc64e044bd3fa683e6ff4746" translate="yes" xml:space="preserve">
          <source>ElementRef</source>
          <target state="translated">ElementRef</target>
        </trans-unit>
        <trans-unit id="a563972e807d43617dfb0a4b0398984476c03544" translate="yes" xml:space="preserve">
          <source>Elements</source>
          <target state="translated">Elements</target>
        </trans-unit>
        <trans-unit id="3d76efc8a111a229c16ed99fcb77e3865ffee55a" translate="yes" xml:space="preserve">
          <source>Elements within the &lt;code&gt;[&lt;a href=&quot;common/ngswitch&quot;&gt;NgSwitch&lt;/a&gt;]&lt;/code&gt; statement but outside of any &lt;code&gt;&lt;a href=&quot;common/ngswitchcase&quot;&gt;NgSwitchCase&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;common/ngswitchdefault&quot;&gt;ngSwitchDefault&lt;/a&gt;&lt;/code&gt; directive are preserved at the location.</source>
          <target state="translated">&lt;code&gt;[&lt;a href=&quot;common/ngswitch&quot;&gt;NgSwitch&lt;/a&gt;]&lt;/code&gt; ステートメント内で、 &lt;code&gt;&lt;a href=&quot;common/ngswitchcase&quot;&gt;NgSwitchCase&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;common/ngswitchdefault&quot;&gt;ngSwitchDefault&lt;/a&gt;&lt;/code&gt; ディレクティブの外側にある要素は、その場所に保持されます。</target>
        </trans-unit>
        <trans-unit id="660c8644c0aebbaa48f6509cbcb09b3790bda043" translate="yes" xml:space="preserve">
          <source>Elements within the &lt;code&gt;[&lt;a href=&quot;ngswitch&quot;&gt;NgSwitch&lt;/a&gt;]&lt;/code&gt; statement but outside of any &lt;code&gt;&lt;a href=&quot;ngswitchcase&quot;&gt;NgSwitchCase&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;ngswitchdefault&quot;&gt;ngSwitchDefault&lt;/a&gt;&lt;/code&gt; directive are preserved at the location.</source>
          <target state="translated">&lt;code&gt;[&lt;a href=&quot;ngswitch&quot;&gt;NgSwitch&lt;/a&gt;]&lt;/code&gt; ステートメント内で、 &lt;code&gt;&lt;a href=&quot;ngswitchcase&quot;&gt;NgSwitchCase&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;ngswitchdefault&quot;&gt;ngSwitchDefault&lt;/a&gt;&lt;/code&gt; ディレクティブの外部にある要素は、その場所で保持されます。</target>
        </trans-unit>
        <trans-unit id="7ea6230fc92026aec77cb73b411275cedcb01dd3" translate="yes" xml:space="preserve">
          <source>EmailValidator</source>
          <target state="translated">EmailValidator</target>
        </trans-unit>
        <trans-unit id="bb9641e7481a2ac16a688649131dd37a3702964f" translate="yes" xml:space="preserve">
          <source>Embedded live example</source>
          <target state="translated">埋め込みライブの例</target>
        </trans-unit>
        <trans-unit id="d9b684fcc3dcb76b1a4baede3b0c25aaf9a8c7cb" translate="yes" xml:space="preserve">
          <source>Embedded views (such as ones created by &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt;) are now inserted in front of anchor DOM comment node (e.g. &lt;code&gt;&amp;lt;!--ng-for-of--&amp;gt;&lt;/code&gt;) rather than behind it as was the case previously. In most cases this does not have any impact on rendered DOM. In some cases (such as animations delaying the removal of an embedded view) any new embedded views will be inserted after the embedded view being animated away. This difference only last while the animation is active, and might alter the visual appearance of the animation. Once the animation is finished the resulting rendered DOM is identical to that rendered with View Engine.</source>
          <target state="translated">埋め込みビュー（ &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; で作成されたビューなど）は、以前のようにアンカーDOMコメントノードの後ろではなく、アンカーDOMコメントノードの前（ &lt;code&gt;&amp;lt;!--ng-for-of--&amp;gt;&lt;/code&gt; of-&amp;gt;など）に挿入されるようになりました。ほとんどの場合、これはレンダリングされたDOMに影響を与えません。場合によっては（埋め込みビューの削除を遅らせるアニメーションなど）、埋め込みビューがアニメーション化された後に、新しい埋め込みビューが挿入されます。この違いは、アニメーションがアクティブな間だけ持続し、アニメーションの外観を変える可能性があります。アニメーションが終了すると、レンダリングされたDOMはViewEngineでレンダリングされたものと同じになります。</target>
        </trans-unit>
        <trans-unit id="c36c3f5e58e60871ead3cbe428b7ace21878e9b3" translate="yes" xml:space="preserve">
          <source>Embedded views (such as those within an &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt;) are checked.</source>
          <target state="translated">埋め込まれたビュー（ &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; 内のビューなど）がチェックされます。</target>
        </trans-unit>
        <trans-unit id="83e20452c44f63af957be29cf282b611c46d2aee" translate="yes" xml:space="preserve">
          <source>EmbeddedViewRef</source>
          <target state="translated">EmbeddedViewRef</target>
        </trans-unit>
        <trans-unit id="43f7a2bd10f700ecb039aad71ad500bb034ce583" translate="yes" xml:space="preserve">
          <source>Embedding the route parameter token, &lt;code&gt;:id&lt;/code&gt;, in the route definition path is a good choice for this scenario because the &lt;code&gt;id&lt;/code&gt; is &lt;em&gt;required&lt;/em&gt; by the &lt;code&gt;HeroDetailComponent&lt;/code&gt; and because the value &lt;code&gt;15&lt;/code&gt; in the path clearly distinguishes the route to &quot;Magneta&quot; from a route for some other hero.</source>
          <target state="translated">ルート定義パスにルートパラメータートークン &lt;code&gt;:id&lt;/code&gt; を埋め込むことは、 &lt;code&gt;HeroDetailComponent&lt;/code&gt; で &lt;code&gt;id&lt;/code&gt; が&lt;em&gt;必要&lt;/em&gt;であり、パスの値 &lt;code&gt;15&lt;/code&gt; が &quot;Magneta&quot;へのルートと一部のルートを明確に区別するため、このシナリオに適しています他のヒーロー。</target>
        </trans-unit>
        <trans-unit id="2c50b51bb07b5168f1450d115ff7ecd3899a0074" translate="yes" xml:space="preserve">
          <source>Emits an &lt;code&gt;&lt;a href=&quot;unrecoverablestateevent&quot;&gt;UnrecoverableStateEvent&lt;/a&gt;&lt;/code&gt; event whenever the version of the app used by the service worker to serve this client is in a broken state that cannot be recovered from without a full page reload.</source>
          <target state="translated">Service Workerがこのクライアントにサービスを提供するために使用するアプリのバージョンが壊れた状態にあり、ページ全体をリロードしないと回復できない場合は常に、 &lt;code&gt;&lt;a href=&quot;unrecoverablestateevent&quot;&gt;UnrecoverableStateEvent&lt;/a&gt;&lt;/code&gt; イベントを発行します。</target>
        </trans-unit>
        <trans-unit id="e76e9c45e6f20e19c4f06dc20c952d47b9038f75" translate="yes" xml:space="preserve">
          <source>Emits an &lt;code&gt;&lt;a href=&quot;updateactivatedevent&quot;&gt;UpdateActivatedEvent&lt;/a&gt;&lt;/code&gt; event whenever the app has been updated to a new version.</source>
          <target state="translated">アプリが新しいバージョンに更新されるたびに、 &lt;code&gt;&lt;a href=&quot;updateactivatedevent&quot;&gt;UpdateActivatedEvent&lt;/a&gt;&lt;/code&gt; イベントを発生させます。</target>
        </trans-unit>
        <trans-unit id="882e9b10d387257fbe1f9c9a65cd1c3691ef6ede" translate="yes" xml:space="preserve">
          <source>Emits an &lt;code&gt;&lt;a href=&quot;updateavailableevent&quot;&gt;UpdateAvailableEvent&lt;/a&gt;&lt;/code&gt; event whenever a new app version is available.</source>
          <target state="translated">アプリの新しいバージョンが利用可能になると、 &lt;code&gt;&lt;a href=&quot;updateavailableevent&quot;&gt;UpdateAvailableEvent&lt;/a&gt;&lt;/code&gt; イベントが発生します。</target>
        </trans-unit>
        <trans-unit id="aafa880c3dcedcc027cd4f9e5e8db3bd419db083" translate="yes" xml:space="preserve">
          <source>Emits an event containing a given value.</source>
          <target state="translated">指定された値を含むイベントを送信します。</target>
        </trans-unit>
        <trans-unit id="f75f623ea16165d1b8fa68ae33e82c5562cf68e7" translate="yes" xml:space="preserve">
          <source>Emits an event when the form submission has been triggered.</source>
          <target state="translated">フォーム送信がトリガされたときにイベントを送信します。</target>
        </trans-unit>
        <trans-unit id="43a5c938c92ff76a8b0f08eaed896138bdf6f5e5" translate="yes" xml:space="preserve">
          <source>Emits the currently active &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PushSubscription&quot;&gt;PushSubscription&lt;/a&gt; associated to the Service Worker registration or &lt;code&gt;null&lt;/code&gt; if there is no subscription.</source>
          <target state="translated">Service Worker登録に関連付けられている現在アクティブな&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PushSubscription&quot;&gt;PushSubscriptionを発行し&lt;/a&gt;ます。サブスクリプションがない場合は &lt;code&gt;null&lt;/code&gt; を発行します。</target>
        </trans-unit>
        <trans-unit id="c6752a2ff06ebb716a84e7511cc420aaa89a5478" translate="yes" xml:space="preserve">
          <source>Emits the payloads of the received push notification messages as well as the action the user interacted with. If no action was used the &lt;code&gt;action&lt;/code&gt; property contains an empty string &lt;code&gt;''&lt;/code&gt;.</source>
          <target state="translated">受信したプッシュ通知メッセージのペイロードと、ユーザーが操作したアクションを発行します。アクションが使用されなかった場合、 &lt;code&gt;action&lt;/code&gt; プロパティには空の文字列 &lt;code&gt;''&lt;/code&gt; が含まれます。</target>
        </trans-unit>
        <trans-unit id="7e72684bb1ec9f0531eb8c7837750fb0400bd9b2" translate="yes" xml:space="preserve">
          <source>Emits the payloads of the received push notification messages.</source>
          <target state="translated">受信したプッシュ通知メッセージのペイロードを送信します。</target>
        </trans-unit>
        <trans-unit id="6f30414a7687b5f41133943a97472cc313c6ca7f" translate="yes" xml:space="preserve">
          <source>Empower your HTML</source>
          <target state="translated">あなたのHTMLを強化する</target>
        </trans-unit>
        <trans-unit id="4f82187a59b317b0dcc96d315aa6c31be3ea2d81" translate="yes" xml:space="preserve">
          <source>Empties out the async validator list.</source>
          <target state="translated">非同期バリデータリストを空にします。</target>
        </trans-unit>
        <trans-unit id="f7fad72021d0dbe5822e8c652ce49746dc0bda5d" translate="yes" xml:space="preserve">
          <source>Empties out the sync validator list.</source>
          <target state="translated">同期バリデータリストを空にします。</target>
        </trans-unit>
        <trans-unit id="87434da39dfaf08f094f5a8d96e89bd88fe4ac24" translate="yes" xml:space="preserve">
          <source>Empty Path</source>
          <target state="translated">空の道</target>
        </trans-unit>
        <trans-unit id="672ad1b8b8d0a43ea96a232f42837d615b95f825" translate="yes" xml:space="preserve">
          <source>Empty-path route configurations can be used to instantiate components that do not 'consume' any URL segments.</source>
          <target state="translated">空パスルート設定は、URL セグメントを「消費」しないコンポーネントのインスタンスを作成するために使用できます。</target>
        </trans-unit>
        <trans-unit id="5370c69f525b9a37e8e07585264c99f9c59d322c" translate="yes" xml:space="preserve">
          <source>Empty-path routes can have children. In the following example, when navigating to &lt;code&gt;/team/11/user/jim&lt;/code&gt;, the router instantiates the wrapper component with the user component in it.</source>
          <target state="translated">空のパスのルートには、子を含めることができます。次の例では、 &lt;code&gt;/team/11/user/jim&lt;/code&gt; に移動すると、ルーターはユーザーコンポーネントを含むラッパーコンポーネントをインスタンス化します。</target>
        </trans-unit>
        <trans-unit id="16129f01e8969b5f4fb2adaad44b03b5d7650d4c" translate="yes" xml:space="preserve">
          <source>Emulate &lt;code&gt;&lt;a href=&quot;viewencapsulation#Native&quot;&gt;Native&lt;/a&gt;&lt;/code&gt; scoping of styles by adding an attribute containing surrogate id to the Host Element and pre-processing the style rules provided via &lt;a href=&quot;component#styles&quot;&gt;styles&lt;/a&gt; or &lt;a href=&quot;component#styleUrls&quot;&gt;styleUrls&lt;/a&gt;, and adding the new Host Element attribute to all selectors.</source>
          <target state="translated">ホスト要素にサロゲートIDを含む属性を追加し、&lt;a href=&quot;component#styles&quot;&gt;スタイル&lt;/a&gt;または&lt;a href=&quot;component#styleUrls&quot;&gt;styleUrls&lt;/a&gt;を介して提供されるスタイルルールを前処理し、すべてのセレクターに新しいホスト要素属性を追加することにより、スタイルの &lt;code&gt;&lt;a href=&quot;viewencapsulation#Native&quot;&gt;Native&lt;/a&gt;&lt;/code&gt; スコープをエミュレートします。</target>
        </trans-unit>
        <trans-unit id="75735fbe1734a26efa7fe5c325b12e4edcdfe722" translate="yes" xml:space="preserve">
          <source>Emulate &lt;code&gt;Native&lt;/code&gt; scoping of styles by adding an attribute containing surrogate id to the Host Element and pre-processing the style rules provided via &lt;a href=&quot;component#styles&quot;&gt;styles&lt;/a&gt; or &lt;a href=&quot;component#styleUrls&quot;&gt;styleUrls&lt;/a&gt;, and adding the new Host Element attribute to all selectors.</source>
          <target state="translated">代理IDを含む属性をホスト要素に追加し、&lt;a href=&quot;component#styles&quot;&gt;styles&lt;/a&gt;または&lt;a href=&quot;component#styleUrls&quot;&gt;styleUrls&lt;/a&gt;を介して提供されるスタイルルールを前処理し、新しいHost Element属性をすべてのセレクターに追加することにより、スタイルの &lt;code&gt;Native&lt;/code&gt; スコープをエミュレートします。</target>
        </trans-unit>
        <trans-unit id="265a9db68ca4a5d6ef8d4fae40f173a071928e99" translate="yes" xml:space="preserve">
          <source>Enable HTTP services</source>
          <target state="translated">HTTP サービスを有効にする</target>
        </trans-unit>
        <trans-unit id="e67083640ced0b81bedd70c022a1ba4bc9884def" translate="yes" xml:space="preserve">
          <source>Enable HttpClient for app</source>
          <target state="translated">アプリの HttpClient を有効にします。</target>
        </trans-unit>
        <trans-unit id="e34ac47784e0cfde79a7151a7989c931f93af556" translate="yes" xml:space="preserve">
          <source>Enable HttpClient for cart service</source>
          <target state="translated">カートサービスのHttpClientを有効にする</target>
        </trans-unit>
        <trans-unit id="fa6eebc6227fc9a918b716c4f215885d40621698" translate="yes" xml:space="preserve">
          <source>Enable access to CLI usage data</source>
          <target state="translated">CLI使用データへのアクセスを有効にする</target>
        </trans-unit>
        <trans-unit id="6d63b68fee5b381bfb9695361afac709eb36b661" translate="yes" xml:space="preserve">
          <source>Enable and define the file watching poll time period in milliseconds.</source>
          <target state="translated">ファイル監視のポーリング期間をミリ秒単位で有効にして定義します。</target>
        </trans-unit>
        <trans-unit id="39128e720765af16eba7528148ad65954348b7b8" translate="yes" xml:space="preserve">
          <source>Enable code coverage reports</source>
          <target state="translated">コードカバレッジレポートを有効にする</target>
        </trans-unit>
        <trans-unit id="e4ed8e6c246b54070d8318341912b462815ca123" translate="yes" xml:space="preserve">
          <source>Enable hot module replacement.</source>
          <target state="translated">ホットモジュールの交換を有効にします。</target>
        </trans-unit>
        <trans-unit id="7d162c1d6a036692653e990d3db43e61209ece89" translate="yes" xml:space="preserve">
          <source>Enable reactive forms for a project.</source>
          <target state="translated">プロジェクトのリアクティブなフォームを有効にします。</target>
        </trans-unit>
        <trans-unit id="a45fc5d6eac5c03e04a8e40043a791e924a85295" translate="yes" xml:space="preserve">
          <source>Enable reactive forms for your project</source>
          <target state="translated">プロジェクトのリアクティブフォームを有効にする</target>
        </trans-unit>
        <trans-unit id="2becf0fba4ac14d337ccb6df4a33af2c2e4a71ab" translate="yes" xml:space="preserve">
          <source>Enable runtime production mode</source>
          <target state="translated">ランタイムプロダクションモードを有効にする</target>
        </trans-unit>
        <trans-unit id="d80854840d07f800e414541fedcc13a32a5458c2" translate="yes" xml:space="preserve">
          <source>Enable the &lt;code&gt;dead&lt;/code&gt; or &lt;code&gt;IE&lt;/code&gt; browsers in the &lt;code&gt;browserslist&lt;/code&gt; config file by removing the &lt;code&gt;not&lt;/code&gt; keyword in front of them.</source>
          <target state="translated">有効 &lt;code&gt;dead&lt;/code&gt; または &lt;code&gt;IE&lt;/code&gt; でブラウザ &lt;code&gt;browserslist&lt;/code&gt; 除去することにより、設定ファイルを &lt;code&gt;not&lt;/code&gt; 彼らの前にキーワードを。</target>
        </trans-unit>
        <trans-unit id="382c7a8e054c81ea3fae6aaad68cbf31fbd48c43" translate="yes" xml:space="preserve">
          <source>Enable this phase explicitly by adding the compiler option &lt;code&gt;&quot;fullTemplateTypeCheck&quot;&lt;/code&gt; in the &lt;code&gt;&quot;angularCompilerOptions&quot;&lt;/code&gt; of the project's TypeScript configuration file (see &lt;a href=&quot;angular-compiler-options&quot;&gt;Angular Compiler Options&lt;/a&gt;).</source>
          <target state="translated">コンパイラオプション追加することによって明示的にこのフェーズを有効に &lt;code&gt;&quot;fullTemplateTypeCheck&quot;&lt;/code&gt; 中 &lt;code&gt;&quot;angularCompilerOptions&quot;&lt;/code&gt; （参照プロジェクトの活字体のコンフィギュレーション・ファイルの&lt;a href=&quot;angular-compiler-options&quot;&gt;角度コンパイラオプションを&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="faa28fb670d9e554df72f4770b4d351a70b2299b" translate="yes" xml:space="preserve">
          <source>Enable users to select a hero from a master list and edit that hero in the details view.</source>
          <target state="translated">ユーザーがマスターリストからヒーローを選択し、詳細ビューでそのヒーローを編集できるようにします。</target>
        </trans-unit>
        <trans-unit id="af82fafd98183ea88b6b2ce709a425bba69efa9a" translate="yes" xml:space="preserve">
          <source>Enabled Angular debug tools that are accessible via your browser's developer console.</source>
          <target state="translated">ブラウザの開発者コンソールからアクセスできるAngularデバッグツールを有効にしました。</target>
        </trans-unit>
        <trans-unit id="fb40fa7ce63184ee9b66dd0bfe91adbe467f8327" translate="yes" xml:space="preserve">
          <source>Enables '@angular-devkit/build-optimizer' optimizations when using the 'aot' option.</source>
          <target state="translated">aot' オプションを使用している場合に '@angular-devkit/build-optimizer' の最適化を有効にします。</target>
        </trans-unit>
        <trans-unit id="9df09e77f524ef461d3b4e5616b7fdd3566618a2" translate="yes" xml:space="preserve">
          <source>Enables &lt;a href=&quot;https://www.staging-typescript.org/tsconfig#strict&quot;&gt;&lt;code&gt;strict&lt;/code&gt; mode in TypeScript&lt;/a&gt;, as well as other strictness flags recommended by the TypeScript team. Specifically, &lt;code&gt;forceConsistentCasingInFileNames&lt;/code&gt;, &lt;code&gt;noImplicitReturns&lt;/code&gt;, &lt;code&gt;noFallthroughCasesInSwitch&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.staging-typescript.org/tsconfig#strict&quot;&gt;TypeScript&lt;/a&gt;で &lt;code&gt;strict&lt;/code&gt; モードを有効にし、TypeScriptチームが推奨するその他の厳密フラグを有効にします。具体的には、 &lt;code&gt;forceConsistentCasingInFileNames&lt;/code&gt; 、 &lt;code&gt;noImplicitReturns&lt;/code&gt; 、 &lt;code&gt;noFallthroughCasesInSwitch&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="f1cc047827e87383481e1ca961b5f9404a67422d" translate="yes" xml:space="preserve">
          <source>Enables a bug fix that corrects relative link resolution in components with empty paths.</source>
          <target state="translated">空のパスを持つコンポーネントの相対リンクの解像度を修正するバグフィックスを有効にします。</target>
        </trans-unit>
        <trans-unit id="ac06417759dacb5336a8ec325b7c27700c913abc" translate="yes" xml:space="preserve">
          <source>Enables a bug fix that corrects relative link resolution in components with empty paths. Example:</source>
          <target state="translated">空のパスを持つコンポーネントの相対リンクの解像度を修正するバグ修正を有効にします。例。</target>
        </trans-unit>
        <trans-unit id="5576cd5af595cb792244725abdde9ed97de0e874" translate="yes" xml:space="preserve">
          <source>Enables conditionally loaded ES2015 polyfills.</source>
          <target state="translated">条件付きでロードされたES2015ポリフィルを有効にします。</target>
        </trans-unit>
        <trans-unit id="d7d0efe84209e6bb673aa9874f497d92f43c4e2a" translate="yes" xml:space="preserve">
          <source>Enables optimization of the build output.</source>
          <target state="translated">ビルド出力の最適化を可能にします。</target>
        </trans-unit>
        <trans-unit id="92aba376f06cee090c7bd7984cb839f8f47ad6c7" translate="yes" xml:space="preserve">
          <source>Enables service worker build support in the CLI.</source>
          <target state="translated">CLIでサービスワーカーのビルドサポートを有効にします。</target>
        </trans-unit>
        <trans-unit id="8439cb165191b790c76249f97d7048f10bbb0e01" translate="yes" xml:space="preserve">
          <source>Enables the &lt;a href=&quot;ivy&quot;&gt;Ivy&lt;/a&gt; compilation and rendering pipeline. Default is &lt;code&gt;true&lt;/code&gt;, as of version 9. In version 9, you can &lt;a href=&quot;ivy#opting-out-of-angular-ivy&quot;&gt;opt out of Ivy&lt;/a&gt; to continue using the previous compiler, View Engine.</source>
          <target state="translated">&lt;a href=&quot;ivy&quot;&gt;Ivyの&lt;/a&gt;コンパイルとレンダリングのパイプラインを有効にします。バージョン9以降、デフォルトは &lt;code&gt;true&lt;/code&gt; です。バージョン9では&lt;a href=&quot;ivy#opting-out-of-angular-ivy&quot;&gt;、Ivy&lt;/a&gt;をオプトアウトして、以前のコンパイラであるViewEngineを引き続き使用できます。</target>
        </trans-unit>
        <trans-unit id="816d66936a53cc03e36d791ff87d917b08ff2204" translate="yes" xml:space="preserve">
          <source>Enables the &lt;code&gt;&lt;a href=&quot;common/location&quot;&gt;Location&lt;/a&gt;&lt;/code&gt; service to read route state from the browser's URL. Angular provides two strategies: &lt;code&gt;&lt;a href=&quot;common/hashlocationstrategy&quot;&gt;HashLocationStrategy&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;common/pathlocationstrategy&quot;&gt;PathLocationStrategy&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;common/location&quot;&gt;Location&lt;/a&gt;&lt;/code&gt; サービスがブラウザのURLからルート状態を読み取ることができるようにします。Angularは &lt;code&gt;&lt;a href=&quot;common/hashlocationstrategy&quot;&gt;HashLocationStrategy&lt;/a&gt;&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;common/pathlocationstrategy&quot;&gt;PathLocationStrategy&lt;/a&gt;&lt;/code&gt; という 2つの戦略を提供します。</target>
        </trans-unit>
        <trans-unit id="2fde15eb84da07dc5121c8a7b3c654796df3e1a2" translate="yes" xml:space="preserve">
          <source>Enables the &lt;code&gt;&lt;a href=&quot;location&quot;&gt;Location&lt;/a&gt;&lt;/code&gt; service to read route state from the browser's URL. Angular provides two strategies: &lt;code&gt;&lt;a href=&quot;hashlocationstrategy&quot;&gt;HashLocationStrategy&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;pathlocationstrategy&quot;&gt;PathLocationStrategy&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;location&quot;&gt;Location&lt;/a&gt;&lt;/code&gt; サービスがブラウザのURLからルート状態を読み取ることができるようにします。Angularは &lt;code&gt;&lt;a href=&quot;hashlocationstrategy&quot;&gt;HashLocationStrategy&lt;/a&gt;&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;pathlocationstrategy&quot;&gt;PathLocationStrategy&lt;/a&gt;&lt;/code&gt; という 2つの戦略を提供します。</target>
        </trans-unit>
        <trans-unit id="ae2bf2b28b78634b6e274b5a4cb6685ee4236774" translate="yes" xml:space="preserve">
          <source>Enables the control. This means the control is included in validation checks and the aggregate value of its parent. Its status recalculates based on its value and its validators.</source>
          <target state="translated">コントロールを有効にします。これはコントロールがバリデーションチェックとその親の集約値に含まれることを意味します。コントロールのステータスは値とバリデータに基づいて再計算されます。</target>
        </trans-unit>
        <trans-unit id="b9e46f25dc7ee87fb5ded014e116953e28110e6a" translate="yes" xml:space="preserve">
          <source>Enables the use of subresource integrity validation.</source>
          <target state="translated">サブリソースの整合性検証の使用を有効にします。</target>
        </trans-unit>
        <trans-unit id="fc5a12db1e324c2b7dd69b3bfe2b8d7c1393abff" translate="yes" xml:space="preserve">
          <source>Enabling polyfills with CLI projects</source>
          <target state="translated">CLIプロジェクトでポリフィルを有効にする</target>
        </trans-unit>
        <trans-unit id="9d8f22cda3e727a39cb6d5f9cbc6920e3ee40de3" translate="yes" xml:space="preserve">
          <source>Enabling this flag initializes your new workspace or application with a few new settings that improve maintainability, help you catch bugs ahead of time. Additionally, applications that use these stricter settings are easier to statically analyze, which can help the &lt;code&gt;ng update&lt;/code&gt; command refactor code more safely and precisely when you are updating to future versions of Angular.</source>
          <target state="translated">このフラグを有効にすると、保守性を向上させるいくつかの新しい設定で新しいワークスペースまたはアプリケーションが初期化され、バグを事前にキャッチするのに役立ちます。さらに、これらの厳しい設定を使用するアプリケーションを助けることができる、静的に解析するのが容易である &lt;code&gt;ng update&lt;/code&gt; あなたが角度の将来のバージョンに更新しているときに、より安全かつ正確にコマンドリファクタリングコードを。</target>
        </trans-unit>
        <trans-unit id="82d97a722f9bd2f260d6872e6e1c1368d68e3771" translate="yes" xml:space="preserve">
          <source>Encapsulates a child animation, that can be run explicitly when the parent is run. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;animatechild&quot;&gt;animateChild&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">子アニメーションをカプセル化します。これは、親の実行時に明示的に実行できます。 &lt;code&gt;&lt;a href=&quot;animatechild&quot;&gt;animateChild&lt;/a&gt;&lt;/code&gt; 関数によってインスタンス化されて返されます。</target>
        </trans-unit>
        <trans-unit id="e67f35b0e15befa6112a86582de589af1eb6509e" translate="yes" xml:space="preserve">
          <source>Encapsulates a child animation, that can be run explicitly when the parent is run. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;animations/animatechild&quot;&gt;animateChild&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">子アニメーションをカプセル化します。これは、親の実行時に明示的に実行できます。 &lt;code&gt;&lt;a href=&quot;animations/animatechild&quot;&gt;animateChild&lt;/a&gt;&lt;/code&gt; 関数によってインスタンス化されて返されます。</target>
        </trans-unit>
        <trans-unit id="51602e00df41fab8699fc33a3d66db28f113b648" translate="yes" xml:space="preserve">
          <source>Encapsulates a keyframes sequence. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;animations/keyframes&quot;&gt;keyframes&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">キーフレームシーケンスをカプセル化します。 &lt;code&gt;&lt;a href=&quot;animations/keyframes&quot;&gt;keyframes&lt;/a&gt;()&lt;/code&gt; 関数によってインスタンス化されて返されます。</target>
        </trans-unit>
        <trans-unit id="eea312371c9c4522fe9d154fe08ec79022831492" translate="yes" xml:space="preserve">
          <source>Encapsulates a keyframes sequence. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;keyframes&quot;&gt;keyframes&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">キーフレームシーケンスをカプセル化します。 &lt;code&gt;&lt;a href=&quot;keyframes&quot;&gt;keyframes&lt;/a&gt;()&lt;/code&gt; 関数によってインスタンス化されて返されます。</target>
        </trans-unit>
        <trans-unit id="a4971d06afca83215d81f836e2dd45b2363e2baa" translate="yes" xml:space="preserve">
          <source>Encapsulates a reusable animation, which is a collection of individual animation steps. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;animation&quot;&gt;animation&lt;/a&gt;()&lt;/code&gt; function, and passed to the &lt;code&gt;&lt;a href=&quot;useanimation&quot;&gt;useAnimation&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">個別のアニメーションステップのコレクションである再利用可能なアニメーションをカプセル化します。 &lt;code&gt;&lt;a href=&quot;animation&quot;&gt;animation&lt;/a&gt;()&lt;/code&gt; 関数によってインスタンス化されて返され、 &lt;code&gt;&lt;a href=&quot;useanimation&quot;&gt;useAnimation&lt;/a&gt;()&lt;/code&gt; 関数に渡されます。</target>
        </trans-unit>
        <trans-unit id="1df96d1474ff38a31de3fee689d9706e16ff0cf7" translate="yes" xml:space="preserve">
          <source>Encapsulates a reusable animation, which is a collection of individual animation steps. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;animations/animation&quot;&gt;animation&lt;/a&gt;()&lt;/code&gt; function, and passed to the &lt;code&gt;&lt;a href=&quot;animations/useanimation&quot;&gt;useAnimation&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">個別のアニメーションステップのコレクションである再利用可能なアニメーションをカプセル化します。 &lt;code&gt;&lt;a href=&quot;animations/animation&quot;&gt;animation&lt;/a&gt;()&lt;/code&gt; 関数によってインスタンス化されて返され、 &lt;code&gt;&lt;a href=&quot;animations/useanimation&quot;&gt;useAnimation&lt;/a&gt;()&lt;/code&gt; 関数に渡されます。</target>
        </trans-unit>
        <trans-unit id="6e515e5130b8e32d6fc4afc2cd1acb89a77ff2b1" translate="yes" xml:space="preserve">
          <source>Encapsulates a reusable animation. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;animations/useanimation&quot;&gt;useAnimation&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">再利用可能なアニメーションをカプセル化します。 &lt;code&gt;&lt;a href=&quot;animations/useanimation&quot;&gt;useAnimation&lt;/a&gt;()&lt;/code&gt; 関数によってインスタンス化されて返されます。</target>
        </trans-unit>
        <trans-unit id="908ea316bcaabe15d2a8d34c21396e90c859dfc5" translate="yes" xml:space="preserve">
          <source>Encapsulates a reusable animation. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;useanimation&quot;&gt;useAnimation&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">再利用可能なアニメーションをカプセル化します。 &lt;code&gt;&lt;a href=&quot;useanimation&quot;&gt;useAnimation&lt;/a&gt;()&lt;/code&gt; 関数によってインスタンス化されて返されます。</target>
        </trans-unit>
        <trans-unit id="e9e77b22ce0e7c1986088f5d83407dea43be6d31" translate="yes" xml:space="preserve">
          <source>Encapsulates an animation group. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;animations/group&quot;&gt;group()&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">アニメーショングループをカプセル化します。 &lt;code&gt;&lt;a href=&quot;animations/group&quot;&gt;group()&lt;/a&gt;&lt;/code&gt; 関数によってインスタンス化されて返されます。</target>
        </trans-unit>
        <trans-unit id="03afdf2ce28b3d3281d4d286b0f0ff4c68848a50" translate="yes" xml:space="preserve">
          <source>Encapsulates an animation group. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;group&quot;&gt;group()&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">アニメーショングループをカプセル化します。 &lt;code&gt;&lt;a href=&quot;group&quot;&gt;group()&lt;/a&gt;&lt;/code&gt; 関数によってインスタンス化されて返されます。</target>
        </trans-unit>
        <trans-unit id="61a70386ff0fcf13a39642ec4421be17e8e2a47a" translate="yes" xml:space="preserve">
          <source>Encapsulates an animation query. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;animations/query&quot;&gt;query&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">アニメーションクエリをカプセル化します。 &lt;code&gt;&lt;a href=&quot;animations/query&quot;&gt;query&lt;/a&gt;()&lt;/code&gt; 関数によってインスタンス化されて返されます。</target>
        </trans-unit>
        <trans-unit id="716da4381a8b20dbe1fb7dcc1c06b3f846dff79f" translate="yes" xml:space="preserve">
          <source>Encapsulates an animation query. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;query&quot;&gt;query&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">アニメーションクエリをカプセル化します。 &lt;code&gt;&lt;a href=&quot;query&quot;&gt;query&lt;/a&gt;()&lt;/code&gt; 関数によってインスタンス化されて返されます。</target>
        </trans-unit>
        <trans-unit id="989bd79ad47de1872ca95560de7f37d0d0e3a0e5" translate="yes" xml:space="preserve">
          <source>Encapsulates an animation sequence. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;animations/sequence&quot;&gt;sequence&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">アニメーションシーケンスをカプセル化します。 &lt;code&gt;&lt;a href=&quot;animations/sequence&quot;&gt;sequence&lt;/a&gt;()&lt;/code&gt; 関数によってインスタンス化されて返されます。</target>
        </trans-unit>
        <trans-unit id="7da932f27be4de034907616c90fd92e41720ef1c" translate="yes" xml:space="preserve">
          <source>Encapsulates an animation sequence. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;sequence&quot;&gt;sequence&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">アニメーションシーケンスをカプセル化します。 &lt;code&gt;&lt;a href=&quot;sequence&quot;&gt;sequence&lt;/a&gt;()&lt;/code&gt; 関数によってインスタンス化されて返されます。</target>
        </trans-unit>
        <trans-unit id="5fe29ca1afe02d077482c094aea90fabb2efb91b" translate="yes" xml:space="preserve">
          <source>Encapsulates an animation state by associating a state name with a set of CSS styles. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;../common/upgrade/%24locationshim#state&quot;&gt;state()&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">状態名をCSSスタイルのセットに関連付けることにより、アニメーションの状態をカプセル化します。 &lt;code&gt;&lt;a href=&quot;../common/upgrade/%24locationshim#state&quot;&gt;state()&lt;/a&gt;&lt;/code&gt; 関数によってインスタンス化されて返されます。</target>
        </trans-unit>
        <trans-unit id="4336a1c75521c5fd083d38b6cd227c9d71adc1e4" translate="yes" xml:space="preserve">
          <source>Encapsulates an animation state by associating a state name with a set of CSS styles. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;animations/state&quot;&gt;state&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">状態名をCSSスタイルのセットに関連付けることにより、アニメーションの状態をカプセル化します。 &lt;code&gt;&lt;a href=&quot;animations/state&quot;&gt;state&lt;/a&gt;()&lt;/code&gt; 関数によってインスタンス化されて返されます。</target>
        </trans-unit>
        <trans-unit id="cafcceea439c9d880e4ca5a76ed6a50dd8d4396b" translate="yes" xml:space="preserve">
          <source>Encapsulates an animation state by associating a state name with a set of CSS styles. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;common/upgrade/%24locationshim#state&quot;&gt;state()&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">状態名をCSSスタイルのセットに関連付けることにより、アニメーションの状態をカプセル化します。 &lt;code&gt;&lt;a href=&quot;common/upgrade/%24locationshim#state&quot;&gt;state()&lt;/a&gt;&lt;/code&gt; 関数によってインスタンス化されて返されます。</target>
        </trans-unit>
        <trans-unit id="aa47842c405380fcf5e4456a0e8704c154dee6f9" translate="yes" xml:space="preserve">
          <source>Encapsulates an animation state by associating a state name with a set of CSS styles. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;state&quot;&gt;state&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">状態名をCSSスタイルのセットに関連付けることにより、アニメーションの状態をカプセル化します。 &lt;code&gt;&lt;a href=&quot;state&quot;&gt;state&lt;/a&gt;()&lt;/code&gt; 関数によってインスタンス化されて返されます。</target>
        </trans-unit>
        <trans-unit id="848b7c49de9bb7153581107ae1af63e989ae6480" translate="yes" xml:space="preserve">
          <source>Encapsulates an animation step. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">アニメーションステップをカプセル化します。インスタンス &lt;code&gt;&lt;a href=&quot;animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt; され、animate（）関数によって返されます。</target>
        </trans-unit>
        <trans-unit id="80c96b46d45590ad7a6e326fa324ed5d0d342266" translate="yes" xml:space="preserve">
          <source>Encapsulates an animation step. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;animations/animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">アニメーションステップをカプセル化します。インスタンス &lt;code&gt;&lt;a href=&quot;animations/animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt; され、animate（）関数によって返されます。</target>
        </trans-unit>
        <trans-unit id="205b24cabe22de4f517ff9953be8f2d04d4fd906" translate="yes" xml:space="preserve">
          <source>Encapsulates an animation style. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;animations/style&quot;&gt;style&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">アニメーションスタイルをカプセル化します。インスタンス化され、 &lt;code&gt;&lt;a href=&quot;animations/style&quot;&gt;style&lt;/a&gt;()&lt;/code&gt; 関数によって返されます。</target>
        </trans-unit>
        <trans-unit id="28b7fdc6da92b3ee02f32d9b3c5bc61e51f8aa7a" translate="yes" xml:space="preserve">
          <source>Encapsulates an animation style. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;style&quot;&gt;style&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">アニメーションスタイルをカプセル化します。インスタンス化され、 &lt;code&gt;&lt;a href=&quot;style&quot;&gt;style&lt;/a&gt;()&lt;/code&gt; 関数によって返されます。</target>
        </trans-unit>
        <trans-unit id="0347672b48914062705bfc7b4877d25dc434353d" translate="yes" xml:space="preserve">
          <source>Encapsulates an animation transition. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;animations/transition&quot;&gt;transition&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">アニメーション遷移をカプセル化します。 &lt;code&gt;&lt;a href=&quot;animations/transition&quot;&gt;transition&lt;/a&gt;()&lt;/code&gt; 関数によってインスタンス化されて返されます。</target>
        </trans-unit>
        <trans-unit id="d21db759b804367fab355379fa8f13a93cee565b" translate="yes" xml:space="preserve">
          <source>Encapsulates an animation transition. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;transition&quot;&gt;transition&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">アニメーション遷移をカプセル化します。 &lt;code&gt;&lt;a href=&quot;transition&quot;&gt;transition&lt;/a&gt;()&lt;/code&gt; 関数によってインスタンス化されて返されます。</target>
        </trans-unit>
        <trans-unit id="9433882cf665f44d956b41fd6eacf7d14fa7342a" translate="yes" xml:space="preserve">
          <source>Encapsulates animation query options. Passed to the &lt;code&gt;&lt;a href=&quot;animations/query&quot;&gt;query&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">アニメーションクエリオプションをカプセル化します。 &lt;code&gt;&lt;a href=&quot;animations/query&quot;&gt;query&lt;/a&gt;()&lt;/code&gt; 関数に渡されます。</target>
        </trans-unit>
        <trans-unit id="2731904c5fe656868e3f9d4d06263a10ed9fef1b" translate="yes" xml:space="preserve">
          <source>Encapsulates animation query options. Passed to the &lt;code&gt;&lt;a href=&quot;query&quot;&gt;query&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">アニメーションクエリオプションをカプセル化します。 &lt;code&gt;&lt;a href=&quot;query&quot;&gt;query&lt;/a&gt;()&lt;/code&gt; 関数に渡されます。</target>
        </trans-unit>
        <trans-unit id="5b28f5efce82bd292d38c6feae74c4c1b401975a" translate="yes" xml:space="preserve">
          <source>Encapsulates parameters for staggering the start times of a set of animation steps. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;animations/stagger&quot;&gt;stagger&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">一連のアニメーションステップの開始時間をずらすためのパラメーターをカプセル化します。インスタンス化され、によって返さ &lt;code&gt;&lt;a href=&quot;animations/stagger&quot;&gt;stagger&lt;/a&gt;()&lt;/code&gt; 関数。</target>
        </trans-unit>
        <trans-unit id="5bd43f9c52ef5eae490d0a9249eb0180efef2307" translate="yes" xml:space="preserve">
          <source>Encapsulates parameters for staggering the start times of a set of animation steps. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;stagger&quot;&gt;stagger&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">一連のアニメーションステップの開始時間をずらすためのパラメーターをカプセル化します。インスタンス化され、によって返さ &lt;code&gt;&lt;a href=&quot;stagger&quot;&gt;stagger&lt;/a&gt;()&lt;/code&gt; 関数。</target>
        </trans-unit>
        <trans-unit id="ac811c547df2bcc849a4681b3e4d095a334e1748" translate="yes" xml:space="preserve">
          <source>Encodes a key name for a URL parameter or query-string.</source>
          <target state="translated">URL パラメータまたはクエリ文字列のキー名をエンコードします。</target>
        </trans-unit>
        <trans-unit id="4e6d7597b00dee1d9b12f8c3da253b16ded5abb2" translate="yes" xml:space="preserve">
          <source>Encodes the hash from the provided string</source>
          <target state="translated">与えられた文字列からハッシュをエンコードします。</target>
        </trans-unit>
        <trans-unit id="5a0cd9b2e8022370b3b0509a9427ccd7da2f8cec" translate="yes" xml:space="preserve">
          <source>Encodes the path from the provided string</source>
          <target state="translated">指定した文字列からのパスをエンコードします。</target>
        </trans-unit>
        <trans-unit id="c260306266d65e958485bd681dfb08b84f4a2140" translate="yes" xml:space="preserve">
          <source>Encodes the search string from the provided string or object</source>
          <target state="translated">指定された文字列またはオブジェクトから検索文字列をエンコードします。</target>
        </trans-unit>
        <trans-unit id="e03641fe608821032997c71c5a56090f82fc2bdb" translate="yes" xml:space="preserve">
          <source>Encodes the value of a URL parameter or query-string.</source>
          <target state="translated">URL パラメータまたはクエリ文字列の値をエンコードします。</target>
        </trans-unit>
        <trans-unit id="20f40c58b071e9a7277373457706db22c56f22db" translate="yes" xml:space="preserve">
          <source>End-to-End Tests</source>
          <target state="translated">エンドツーエンドテスト</target>
        </trans-unit>
        <trans-unit id="b3f18894771fc8d6f088ca31ff6911e75200c41f" translate="yes" xml:space="preserve">
          <source>End-to-end test files</source>
          <target state="translated">エンドツーエンドのテストファイル</target>
        </trans-unit>
        <trans-unit id="a2365ba72108d31cd3d6c1c16496babe7ef35421" translate="yes" xml:space="preserve">
          <source>Ends a async time range operation. [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been enabled.</source>
          <target state="translated">非同期時間範囲操作を終了します。range]は [wtfStartTimeRange]の戻り値です。 非同期範囲は WTF が有効になっている場合にのみ動作します。</target>
        </trans-unit>
        <trans-unit id="fe030e0ac9483f1774410e532b40c19c3058c1ba" translate="yes" xml:space="preserve">
          <source>Ends the animation, invoking the &lt;code&gt;onDone()&lt;/code&gt; callback.</source>
          <target state="translated">&lt;code&gt;onDone()&lt;/code&gt; コールバックを呼び出してアニメーションを終了します。</target>
        </trans-unit>
        <trans-unit id="9665f4b305296947e9b5d1bdc20031bf7420667a" translate="yes" xml:space="preserve">
          <source>Enhanced Angular Material components by integrating &lt;a href=&quot;https://material.io/develop/web/&quot;&gt;MDC Web&lt;/a&gt;</source>
          <target state="translated">統合することにより、強化された角度の材料成分&lt;a href=&quot;https://material.io/develop/web/&quot;&gt;MDCウェブを&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="333896d2f113281ad068983432c193866efd2cd5" translate="yes" xml:space="preserve">
          <source>Ensure smooth adoption for future RxJS changes (v7 and beyond)</source>
          <target state="translated">将来のRxJSの変更(v7以降)にスムーズに対応できるようにする</target>
        </trans-unit>
        <trans-unit id="6cc1a9c010adc0d963f45d36b2ca51ffbc23ff25" translate="yes" xml:space="preserve">
          <source>Ensure that you are not already in an Angular workspace folder. For example, if you have previously created the Getting Started workspace, change to the parent of that folder.</source>
          <target state="translated">Angularワークスペースのフォルダにまだ入っていないことを確認してください。例えば、以前にGetting Startedワークスペースを作成した場合は、そのフォルダの親に変更します。</target>
        </trans-unit>
        <trans-unit id="5b985be3e4f20d96de12f00976c4c0910fb4bdc8" translate="yes" xml:space="preserve">
          <source>Ensuring valid data</source>
          <target state="translated">有効なデータの確保</target>
        </trans-unit>
        <trans-unit id="945c30b6d2cd9f42f65f94b2363c4b07a4390ca9" translate="yes" xml:space="preserve">
          <source>Enter a URL in the address bar and the browser navigates to a corresponding page.</source>
          <target state="translated">アドレスバーにURLを入力すると、ブラウザは対応するページに移動します。</target>
        </trans-unit>
        <trans-unit id="5b2837eec05b4cbd4f8e485666e49854e6c7fb61" translate="yes" xml:space="preserve">
          <source>Enter a URL in the address bar, and the browser navigates to a corresponding page.</source>
          <target state="translated">アドレスバーにURLを入力すると、ブラウザは対応するページに移動します。</target>
        </trans-unit>
        <trans-unit id="1fd361c250e37b989d268cec38571e912b6b1713" translate="yes" xml:space="preserve">
          <source>Enter a name and click &lt;em&gt;New Hero&lt;/em&gt; again. The app displays a &lt;em&gt;Name is required&lt;/em&gt; error message. You don't want error messages when you create a new (empty) hero. Why are you getting one now?</source>
          <target state="translated">名前を入力して、もう一度[ &lt;em&gt;新しいヒーロー&lt;/em&gt; ]をクリックします。アプリに「&lt;em&gt;名前が必要です」という&lt;/em&gt;エラーメッセージ&lt;em&gt;が&lt;/em&gt;表示されます。新しい（空の）ヒーローを作成するとき、エラーメッセージは必要ありません。なぜ今入手したのですか？</target>
        </trans-unit>
        <trans-unit id="8210de41e67214f6cf427db9551e909c01803fd9" translate="yes" xml:space="preserve">
          <source>Enter a name and click &lt;strong&gt;New Hero&lt;/strong&gt; again.</source>
          <target state="translated">名前を入力して、もう一度[&lt;strong&gt;新しいヒーロー&lt;/strong&gt;]をクリックします。</target>
        </trans-unit>
        <trans-unit id="188467cb6368c1cb94636621183dfaf578290d14" translate="yes" xml:space="preserve">
          <source>Entering a URL in the address bar to navigate to a corresponding view.</source>
          <target state="translated">アドレスバーにURLを入力すると、対応するビューに移動します。</target>
        </trans-unit>
        <trans-unit id="b49822088cea36d8bc8b7f290b066e9029739611" translate="yes" xml:space="preserve">
          <source>Entry Components</source>
          <target state="translated">エントリーコンポーネント</target>
        </trans-unit>
        <trans-unit id="007cbf2ba452e4583d408203d5a0b563eaf1b009" translate="yes" xml:space="preserve">
          <source>Entry and exit transitions:</source>
          <target state="translated">入口と出口のトランジション。</target>
        </trans-unit>
        <trans-unit id="94e78ad85acf81b8f808775347cc5e5fb61215b4" translate="yes" xml:space="preserve">
          <source>Entry components</source>
          <target state="translated">エントリーコンポーネント</target>
        </trans-unit>
        <trans-unit id="ff9189b5aa6efac11c15287a492b218d79dd096a" translate="yes" xml:space="preserve">
          <source>Entry point exports</source>
          <target state="translated">エントリーポイント輸出</target>
        </trans-unit>
        <trans-unit id="18f73528d44427047489bb703aa3ca755342dbbb" translate="yes" xml:space="preserve">
          <source>Entry points</source>
          <target state="translated">エントリーポイント</target>
        </trans-unit>
        <trans-unit id="3a571a4359b2cd140372e237ef5e3c2c5a6186c5" translate="yes" xml:space="preserve">
          <source>Enumerates the set of data-bound input properties for a directive</source>
          <target state="translated">ディレクティブのデータバインド入力プロパティのセットを列挙します。</target>
        </trans-unit>
        <trans-unit id="64101c05a2cf6652261d1745a418b7e927fca228" translate="yes" xml:space="preserve">
          <source>Enumerates the set of event-bound output properties.</source>
          <target state="translated">イベントバインド出力プロパティのセットを列挙します。</target>
        </trans-unit>
        <trans-unit id="f37a89cbd1a73777b5e65ae13dd77ca3e52051eb" translate="yes" xml:space="preserve">
          <source>Era</source>
          <target state="translated">Era</target>
        </trans-unit>
        <trans-unit id="9c58e3328b0971c008ce1a1e8bfc4788ff407a2c" translate="yes" xml:space="preserve">
          <source>Erase the name.</source>
          <target state="translated">名前を消す。</target>
        </trans-unit>
        <trans-unit id="85784d82533506abf58bc8a91d6a6171d7b3482c" translate="yes" xml:space="preserve">
          <source>Erase the name. This makes the value invalid, so the &lt;code&gt;ng-invalid&lt;/code&gt; class replaces the &lt;code&gt;ng-valid&lt;/code&gt; class.</source>
          <target state="translated">名前を消去します。これにより値が無効になるため、 &lt;code&gt;ng-invalid&lt;/code&gt; クラスが &lt;code&gt;ng-valid&lt;/code&gt; クラスに置き換わります。</target>
        </trans-unit>
        <trans-unit id="a48c99c0bb82a825b2de88b6ef8dcb4228c5619d" translate="yes" xml:space="preserve">
          <source>Ergonomic component level code-splitting APIs</source>
          <target state="translated">人間工学に基づいたコンポーネントレベルのコード分割API</target>
        </trans-unit>
        <trans-unit id="f5c2b7865df76e15d4c3b162675500c5f27ce98d" translate="yes" xml:space="preserve">
          <source>Error checking</source>
          <target state="translated">エラーチェック</target>
        </trans-unit>
        <trans-unit id="73631d7f0356fdbdeaa36f8e5dbad89c6aa15dc4" translate="yes" xml:space="preserve">
          <source>Error handling</source>
          <target state="translated">エラー処理</target>
        </trans-unit>
        <trans-unit id="31c5a2a3b0e1cc6c9bcf73618e9aab80710648ad" translate="yes" xml:space="preserve">
          <source>Error handling (and specifically recovering from an error) is covered in more detail in a later section.</source>
          <target state="translated">エラー処理(特にエラーからの回復)については、後のセクションで詳しく説明します。</target>
        </trans-unit>
        <trans-unit id="4aab21f64f3ae2fed4694ee476bc130ac9bdcd17" translate="yes" xml:space="preserve">
          <source>Error inspection, interpretation, and resolution is something you want to do in the &lt;em&gt;service&lt;/em&gt;, not in the &lt;em&gt;component&lt;/em&gt;.</source>
          <target state="translated">エラーの検査、解釈、解決は、&lt;em&gt;コンポーネント&lt;/em&gt;ではなく、&lt;em&gt;サービス&lt;/em&gt;で実行したいものです。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5daf5951c44906b1a70c4f80876b6552604e100e" translate="yes" xml:space="preserve">
          <source>Error messages often bring limited actionable information to help developers resolve them. We&amp;rsquo;ve been working on making error messages more discoverable by adding associated codes, developing guides, and other materials to ensure a smoother debugging experience.</source>
          <target state="translated">エラーメッセージは、開発者がそれらを解決するのに役立つ限られた実用的な情報をもたらすことがよくあります。よりスムーズなデバッグエクスペリエンスを保証するために、関連するコードの追加、ガイドの開発、およびその他の資料によって、エラーメッセージをより見つけやすくすることに取り組んできました。</target>
        </trans-unit>
        <trans-unit id="d1dc7f57ed4361a9994d5f5c1df19b68553d2dcf" translate="yes" xml:space="preserve">
          <source>Error: throw an error. If you are using AOT compilation, the build will fail. If you are using JIT compilation, the app will fail to load.</source>
          <target state="translated">エラー:エラーをスローします。AOTコンパイルを使用している場合、ビルドに失敗します。JITコンパイルを使用している場合、アプリのロードに失敗します。</target>
        </trans-unit>
        <trans-unit id="5ce56d364feb43e7a2088dcd76ace52325393f7b" translate="yes" xml:space="preserve">
          <source>Error: throw if you have missing translations.</source>
          <target state="translated">エラー:翻訳が不足している場合にスローします。</target>
        </trans-unit>
        <trans-unit id="441c4e5aa8c59a894a04039c4f26123cabb982c1" translate="yes" xml:space="preserve">
          <source>ErrorHandler</source>
          <target state="translated">ErrorHandler</target>
        </trans-unit>
        <trans-unit id="e479225976d3687521ab58ddd623c11dd3670242" translate="yes" xml:space="preserve">
          <source>Errors are never okay, even when the status code is in the 2xx success range.</source>
          <target state="translated">エラーは、ステータスコードが2xx成功範囲内であっても、決して大丈夫ではありません。</target>
        </trans-unit>
        <trans-unit id="140f12ddf60a5bdd192c50cefaefa3e1c9f117cf" translate="yes" xml:space="preserve">
          <source>Errors during the build process could result in updated resources without &lt;code&gt;ngsw.json&lt;/code&gt; being updated. The reverse could also happen resulting in an updated &lt;code&gt;ngsw.json&lt;/code&gt; without updated resources.</source>
          <target state="translated">ビルドプロセス中にエラーが発生すると、 &lt;code&gt;ngsw.json&lt;/code&gt; が更新されずにリソースが更新される可能性があります。逆も発生する可能性があり、更新されたリソースなしで &lt;code&gt;ngsw.json&lt;/code&gt; が更新されます。</target>
        </trans-unit>
        <trans-unit id="cd18a877ca7b0ceaa366b88dcd78fd4a5b4438f9" translate="yes" xml:space="preserve">
          <source>Errors in AOT compilation commonly occur because of metadata that does not conform to the compiler's requirements (as described more fully below). For help in understanding and resolving these problems, see &lt;a href=&quot;aot-metadata-errors&quot;&gt;AOT Metadata Errors&lt;/a&gt;.</source>
          <target state="translated">AOTコンパイルのエラーは通常、メタデータがコンパイラーの要件に準拠していないために発生します（以下で詳しく説明します）。これらの問題の理解と解決のヘルプについては、&lt;a href=&quot;aot-metadata-errors&quot;&gt;AOTメタデータエラーを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="9f5d1776185d17f7f636da072a52b82b51304a31" translate="yes" xml:space="preserve">
          <source>Errors that occur within the service worker will be logged here.</source>
          <target state="translated">サービスワーカー内で発生したエラーは、ここに記録されます。</target>
        </trans-unit>
        <trans-unit id="2e99501d4fb7d1aedbfd96dace7464daa9c0f046" translate="yes" xml:space="preserve">
          <source>Establish a data model to represent form controls.</source>
          <target state="translated">フォームコントロールを表現するためのデータモデルを確立する。</target>
        </trans-unit>
        <trans-unit id="6eebfc5a8e55779a7589ac3319e418c8eede142b" translate="yes" xml:space="preserve">
          <source>Evaluation of a template expression should have no visible side effects. The expression language itself, or the way you write template expressions, helps to a certain extent; you can't assign a value to anything in a property binding expression nor use the increment and decrement operators.</source>
          <target state="translated">テンプレート式の評価には、目に見える副作用はないはずです。式言語自体、またはテンプレート式の書き方はある程度助けになります。</target>
        </trans-unit>
        <trans-unit id="dc8dd35816c46ff173ec4619de1471801fed391e" translate="yes" xml:space="preserve">
          <source>Evaluation of a template expression should have no visible side effects. Use the syntax for template expressions to help avoid side effects. In general, the correct syntax prevents you from assigning a value to anything in a property binding expression. The syntax also prevents you from using increment and decrement operators.</source>
          <target state="translated">テンプレート式の評価には、目に見える副作用がないようにする必要があります。副作用を避けるために、テンプレート式の構文を使用してください。一般的に、正しい構文を使用すると、プロパティ・バインディング式で何かに値を代入することができなくなります。また、この構文では、インクリメントおよびデクリメント演算子を使用することもできません。</target>
        </trans-unit>
        <trans-unit id="850e9818f40adbc977c81ae6399f41133a13fd54" translate="yes" xml:space="preserve">
          <source>Even a small form such as this one can produce a mess of tortured conditional setup and CSS element selection.</source>
          <target state="translated">このような小さなフォームでも、拷問のような条件設定とCSS要素の選択がゴチャゴチャになってしまいます。</target>
        </trans-unit>
        <trans-unit id="3769401ed313e5329253644819bfce1f955dbb33" translate="yes" xml:space="preserve">
          <source>Even accounting for these differences you can still have dependency injection interoperability. &lt;code&gt;&lt;a href=&quot;../api/upgrade/static&quot;&gt;upgrade/static&lt;/a&gt;&lt;/code&gt; resolves the differences and makes everything work seamlessly:</source>
          <target state="translated">これらの違いを考慮しても、依存性注入の相互運用性を維持できます。 &lt;code&gt;&lt;a href=&quot;../api/upgrade/static&quot;&gt;upgrade/static&lt;/a&gt;&lt;/code&gt; は違いを解決し、すべてがシームレスに機能するようにします。</target>
        </trans-unit>
        <trans-unit id="e16b061e3708e3fc68014096083cafee7c7ce978" translate="yes" xml:space="preserve">
          <source>Even across a fast reliable network, round-trip delays can introduce significant latency when loading the application. Using a service worker to reduce dependency on the network can significantly improve the user experience.</source>
          <target state="translated">高速で信頼性の高いネットワークであっても、アプリケーションをロードする際に往復の遅延が発生することがあります。サービスワーカーを使用してネットワークへの依存を減らすことで、ユーザーエクスペリエンスを大幅に向上させることができます。</target>
        </trans-unit>
        <trans-unit id="2d077313c4f8be84916129e534e1c9472b805611" translate="yes" xml:space="preserve">
          <source>Even though the components declared by &lt;code&gt;SharedModule&lt;/code&gt; might not bind with &lt;code&gt;[(&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;)]&lt;/code&gt; and there may be no need for &lt;code&gt;SharedModule&lt;/code&gt; to import &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;SharedModule&lt;/code&gt; can still export &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; without listing it among its &lt;code&gt;imports&lt;/code&gt;. This way, you can give other modules access to &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; without having to import it directly into the &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; decorator.</source>
          <target state="translated">コンポーネントがによって宣言されていても &lt;code&gt;SharedModule&lt;/code&gt; と結合しないことがあります &lt;code&gt;[(&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;)]&lt;/code&gt; とは必要ないかもしれ &lt;code&gt;SharedModule&lt;/code&gt; 輸入に &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;SharedModule&lt;/code&gt; まだすることができ、輸出 &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; その間、それをリストせずに &lt;code&gt;imports&lt;/code&gt; 。このようにして、 &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;デコレーターに直接インポートしなくても、他のモジュールが &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; にアクセスできるようにすることができます。</target>
        </trans-unit>
        <trans-unit id="3ac2045e3dc81152fb554884060276dbdd76671d" translate="yes" xml:space="preserve">
          <source>Even thought the component is instantiated in AngularJS, it will be using Angular syntax. This has to be done, this way because we must follow Angular components do not declare how the attributes should be interpreted.</source>
          <target state="translated">コンポーネントがAngularJSでインスタンス化されていると思っても、Angularの構文を使うことになります。Angularコンポーネントは属性がどのように解釈されるべきかを宣言していないので、このようにしなければなりません。</target>
        </trans-unit>
        <trans-unit id="ad8919ace091b14011c6439cfd5e1707b58f5abd" translate="yes" xml:space="preserve">
          <source>Event</source>
          <target state="translated">Event</target>
        </trans-unit>
        <trans-unit id="a4b8c14cddb2f1885a3b5243af7a8673f906232d" translate="yes" xml:space="preserve">
          <source>Event and property</source>
          <target state="translated">イベントとプロパティ</target>
        </trans-unit>
        <trans-unit id="653b2d725355aff89cbe9374190b125e15219f77" translate="yes" xml:space="preserve">
          <source>Event binding</source>
          <target state="translated">イベントバインディング</target>
        </trans-unit>
        <trans-unit id="8861df64fa83a4b1d28dece2f39cadeb0dc09bc4" translate="yes" xml:space="preserve">
          <source>Event binding &lt;code&gt;( )&lt;/code&gt;</source>
          <target state="translated">イベントバインディング &lt;code&gt;( )&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aa9823491ce467db213d22bc6b83c462e08f3718" translate="yes" xml:space="preserve">
          <source>Event binding &lt;code&gt;(event)&lt;/code&gt;</source>
          <target state="translated">イベントバインディング &lt;code&gt;(event)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6b19e33e110b0e60dede192bc05e31bc232edf4a" translate="yes" xml:space="preserve">
          <source>Event binding allows you to listen for and respond to user actions such as keystrokes, mouse movements, clicks, and touches.</source>
          <target state="translated">イベントバインディングでは、キーストローク、マウスの動き、クリック、タッチなどのユーザーアクションをリッスンして反応させることができます。</target>
        </trans-unit>
        <trans-unit id="77b48624494a6f0a9df34e45edd94c677ed6320e" translate="yes" xml:space="preserve">
          <source>Event binding allows you to listen for certain events such as keystrokes, mouse movements, clicks, and touches. For an example demonstrating all of the points in this section, see the &lt;span name=&quot;event-binding&quot;&gt;event binding example&lt;/span&gt;.</source>
          <target state="translated">イベントバインディングを使用すると、キーストローク、マウスの動き、クリック、タッチなどの特定のイベントをリッスンできます。このセクションのすべてのポイントを示す例については、&lt;span name=&quot;event-binding&quot;&gt;イベントバインディングの例を&lt;/span&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="87f25a7f8c6489fdeb43b0e84d80feee4996cddd" translate="yes" xml:space="preserve">
          <source>Event emitter for producing the &lt;code&gt;ngModelChange&lt;/code&gt; event after the view model updates.</source>
          <target state="translated">ビューモデルの更新後に &lt;code&gt;ngModelChange&lt;/code&gt; イベントを生成するためのイベントエミッター。</target>
        </trans-unit>
        <trans-unit id="b128948626495abc382e1e64d3eeecac95ddb8c7" translate="yes" xml:space="preserve">
          <source>Event emitter for the &quot;ngSubmit&quot; event</source>
          <target state="translated">ngSubmit&quot; イベントのイベントエミッタ</target>
        </trans-unit>
        <trans-unit id="c56267c039db3d3b1ba5e7d51b4190b357b8e3bb" translate="yes" xml:space="preserve">
          <source>Event listener configuration returned from &lt;code&gt;&lt;a href=&quot;global/nggetlisteners&quot;&gt;getListeners&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;global/nggetlisteners&quot;&gt;getListeners&lt;/a&gt;&lt;/code&gt; から返されたイベントリスナー構成。</target>
        </trans-unit>
        <trans-unit id="73e7242d72278d77020701c0514dedc2b9cce425" translate="yes" xml:space="preserve">
          <source>Event listener configuration returned from &lt;code&gt;&lt;a href=&quot;nggetlisteners&quot;&gt;getListeners&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;nggetlisteners&quot;&gt;getListeners&lt;/a&gt;&lt;/code&gt; から返されたイベントリスナー構成。</target>
        </trans-unit>
        <trans-unit id="8b38de0eda9857ebdbcd12bdbd0e63305b36cc10" translate="yes" xml:space="preserve">
          <source>Event: &lt;code&gt;&amp;lt;comp (close)=&quot;doSomething()&quot;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">イベント： &lt;code&gt;&amp;lt;comp (close)=&quot;doSomething()&quot;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5876adadbcd068acd9f996c259fbd067d5cbf8d9" translate="yes" xml:space="preserve">
          <source>EventEmitter</source>
          <target state="translated">EventEmitter</target>
        </trans-unit>
        <trans-unit id="913641e09266e8cb48d5e95316fd86cbe16755ba" translate="yes" xml:space="preserve">
          <source>EventManager</source>
          <target state="translated">EventManager</target>
        </trans-unit>
        <trans-unit id="fe344110e73a74f72736069ed919c062c627ec74" translate="yes" xml:space="preserve">
          <source>Events API</source>
          <target state="translated">イベント API</target>
        </trans-unit>
        <trans-unit id="8da7c1c5bd31b41021042d6be49c271cb61391f5" translate="yes" xml:space="preserve">
          <source>Eventually you'll get them from a remote data server. For now, you'll create some &lt;em&gt;mock heroes&lt;/em&gt; and pretend they came from the server.</source>
          <target state="translated">最終的には、リモートデータサーバーから取得します。ここでは、いくつかの&lt;em&gt;模擬ヒーロー&lt;/em&gt;を作成し、それらがサーバーから来たものに見せかけます。</target>
        </trans-unit>
        <trans-unit id="1f103dec1c98bfc6accaa7ec6f90d5f9d7a5b16c" translate="yes" xml:space="preserve">
          <source>Every Angular app has a &lt;em&gt;root module&lt;/em&gt;, conventionally named &lt;code&gt;AppModule&lt;/code&gt;, which provides the bootstrap mechanism that launches the application. An app typically contains many functional modules.</source>
          <target state="translated">すべてのAngularアプリには、通常は &lt;code&gt;AppModule&lt;/code&gt; という名前の&lt;em&gt;ルートモジュール&lt;/em&gt;があり、アプリケーションを起動するブートストラップメカニズムを提供します。アプリには通常、多くの機能モジュールが含まれています。</target>
        </trans-unit>
        <trans-unit id="6daf3b062f03c71d4fae2209ffdc85e874f89f66" translate="yes" xml:space="preserve">
          <source>Every Angular app has at least one NgModule class, &lt;a href=&quot;bootstrapping&quot;&gt;the &lt;em&gt;root module&lt;/em&gt;&lt;/a&gt;, which is conventionally named &lt;code&gt;AppModule&lt;/code&gt; and resides in a file named &lt;code&gt;app.module.ts&lt;/code&gt;. You launch your app by &lt;em&gt;bootstrapping&lt;/em&gt; the root NgModule.</source>
          <target state="translated">すべてのAngularアプリには、少なくとも1つのNgModuleクラスで&lt;a href=&quot;bootstrapping&quot;&gt;ある&lt;em&gt;ルートモジュール&lt;/em&gt;&lt;/a&gt;があり&lt;em&gt;ます&lt;/em&gt;。これは、通常 &lt;code&gt;AppModule&lt;/code&gt; という名前で、 &lt;code&gt;app.module.ts&lt;/code&gt; という名前のファイルにあります。ルートNgModuleを&lt;em&gt;ブートストラップし&lt;/em&gt;てアプリを起動します。</target>
        </trans-unit>
        <trans-unit id="483c63e0bfa0f7ca6f63472bc5879db0599afb08" translate="yes" xml:space="preserve">
          <source>Every Angular app has at least one module, the root module. You &lt;a href=&quot;bootstrapping&quot;&gt;bootstrap&lt;/a&gt; that module to launch the application.</source>
          <target state="translated">すべてのAngularアプリには、少なくとも1つのモジュール、ルートモジュールがあります。あなたは、&lt;a href=&quot;bootstrapping&quot;&gt;ブートストラップ&lt;/a&gt;アプリケーションを起動するためにそのモジュールを。</target>
        </trans-unit>
        <trans-unit id="820ed242310301e24986112a7cff648414c77911" translate="yes" xml:space="preserve">
          <source>Every Angular application has a root module. By convention, the class is called &lt;code&gt;AppModule&lt;/code&gt; and resides in a file named &lt;code&gt;app.module.ts&lt;/code&gt;.</source>
          <target state="translated">すべてのAngularアプリケーションにはルートモジュールがあります。慣例では、クラスが呼び出され &lt;code&gt;AppModule&lt;/code&gt; という名前のファイルにして存在 &lt;code&gt;app.module.ts&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c35630c98a82ad178da0ab9c1b5acf827ada573b" translate="yes" xml:space="preserve">
          <source>Every Angular application has at least one component, the &lt;em&gt;root component&lt;/em&gt; that connects a component hierarchy with the page document object model (DOM). Each component defines a class that contains application data and logic, and is associated with an HTML &lt;em&gt;template&lt;/em&gt; that defines a view to be displayed in a target environment.</source>
          <target state="translated">すべてのAngularアプリケーションには、コンポーネント階層をページドキュメントオブジェクトモデル（DOM）に接続する&lt;em&gt;ルートコンポーネントで&lt;/em&gt;ある、少なくとも1つのコンポーネントがあります。各コンポーネントは、アプリケーションデータとロジックを含むクラスを定義し、ターゲット環境に表示されるビューを定義するHTML &lt;em&gt;テンプレートに&lt;/em&gt;関連付けられています。</target>
        </trans-unit>
        <trans-unit id="21950ef1d3b08fa378394db102c287c7e9d9c230" translate="yes" xml:space="preserve">
          <source>Every app is different. Developers have various levels of experience and comfort with the available choices. Some suggestions and guidelines appear to have wide appeal.</source>
          <target state="translated">すべてのアプリは異なります。開発者は様々なレベルの経験を持ち、利用可能な選択肢の中で快適に過ごすことができます。いくつかの提案やガイドラインは、幅広い魅力を持っているように見えます。</target>
        </trans-unit>
        <trans-unit id="53c892053be276bc3b640b778522647ac9691d78" translate="yes" xml:space="preserve">
          <source>Every application starts out with what seems like a simple task: get data, transform them, and show them to users. Getting data could be as simple as creating a local variable or as complex as streaming data over a WebSocket.</source>
          <target state="translated">すべてのアプリケーションは、データを取得し、変換し、ユーザーに見せるという簡単な作業から始まります。データを取得することは、ローカル変数を作成するのと同じくらい簡単なことかもしれませんし、WebSocketを介してデータをストリーミングするのと同じくらい複雑なことかもしれません。</target>
        </trans-unit>
        <trans-unit id="9801e8ee8ba60600fa9d73e2004199dd124e627e" translate="yes" xml:space="preserve">
          <source>Every component must be declared in &lt;em&gt;exactly one&lt;/em&gt;&lt;a href=&quot;../guide/ngmodules&quot;&gt;NgModule&lt;/a&gt;.</source>
          <target state="translated">すべてのコンポーネントは&lt;em&gt;1つの&lt;/em&gt;&lt;a href=&quot;../guide/ngmodules&quot;&gt;NgModuleで&lt;/a&gt;宣言する必要があります。</target>
        </trans-unit>
        <trans-unit id="79baa39550c28364e350af4ed0e3840b932ee20d" translate="yes" xml:space="preserve">
          <source>Every component requires a CSS &lt;em&gt;selector&lt;/em&gt;. A selector instructs Angular to instantiate this component wherever it finds the corresponding tag in template HTML. For example, consider a component, &lt;code&gt;hello-world.component.ts&lt;/code&gt; that defines its selector as &lt;code&gt;app-hello-world&lt;/code&gt;. This selector instructs angular to instantiate this component any time the tag, &lt;code&gt;&amp;lt;app-hello-world&amp;gt;&lt;/code&gt; in a template.</source>
          <target state="translated">すべてのコンポーネントにはCSS&lt;em&gt;セレクター&lt;/em&gt;が必要です。セレクターは、テンプレートHTMLで対応するタグが見つかると、このコンポーネントをインスタンス化するようにAngularに指示します。たとえば、セレクターを &lt;code&gt;app-hello-world&lt;/code&gt; として定義するコンポーネント &lt;code&gt;hello-world.component.ts&lt;/code&gt; について考えてみます。このセレクターは、テンプレート &lt;code&gt;&amp;lt;app-hello-world&amp;gt;&lt;/code&gt; のタグ&amp;lt;app-hello-world&amp;gt;がいつでもこのコンポーネントをインスタンス化するようにangularに指示します。</target>
        </trans-unit>
        <trans-unit id="4952a251d677b65b9b459f62edb6a04fc9616121" translate="yes" xml:space="preserve">
          <source>Every guide document must have a title.</source>
          <target state="translated">すべてのガイド文書にはタイトルが必要です。</target>
        </trans-unit>
        <trans-unit id="5fa540bcfc1b39a5cf26b4f552a9a0a6f39ad11c" translate="yes" xml:space="preserve">
          <source>Every guide page file is stored in the &lt;code&gt;content/guide&lt;/code&gt; directory. Although the &lt;a href=&quot;docs-style-guide#navigation&quot;&gt;side navigation&lt;/a&gt; panel displays as a hierarchy, the directory is flat with no sub-folders. The flat folder approach allows us to shuffle the apparent navigation structure without moving page files or redirecting old page URLs.</source>
          <target state="translated">すべてのガイドページファイルは、 &lt;code&gt;content/guide&lt;/code&gt; ディレクトリに保存されます。が&lt;a href=&quot;docs-style-guide#navigation&quot;&gt;側ナビゲーション&lt;/a&gt;階層としてパネルディスプレイ、ディレクトリがないサブフォルダを有する平坦です。フラットフォルダーアプローチでは、ページファイルを移動したり、古いページのURLをリダイレクトしたりすることなく、見かけ上のナビゲーション構造をシャッフルできます。</target>
        </trans-unit>
        <trans-unit id="d886ac38f851fdbc187ae78a3b2d9fde9be44cd7" translate="yes" xml:space="preserve">
          <source>Every node in the route tree is an &lt;code&gt;&lt;a href=&quot;activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; instance that knows about the &quot;consumed&quot; URL segments, the extracted parameters, and the resolved data. Use the &lt;code&gt;&lt;a href=&quot;activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; properties to traverse the tree from any node.</source>
          <target state="translated">ルートツリーのすべてのノードは、「消費された」URLセグメント、抽出されたパラメーター、および解決されたデータを &lt;code&gt;&lt;a href=&quot;activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; インスタンスです。 &lt;code&gt;&lt;a href=&quot;activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; プロパティを使用して、任意のノードからツリーをトラバースします。</target>
        </trans-unit>
        <trans-unit id="6ea96237603d72502bbf6d1b0c42d01f5d2953c0" translate="yes" xml:space="preserve">
          <source>Every progress event triggers change detection, so only turn them on if you truly intend to report progress in the UI.</source>
          <target state="translated">進行状況イベントごとに変更検出がトリガーされるので、本当に UI の進行状況を報告するつもりがある場合にのみ、それらをオンにしてください。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
