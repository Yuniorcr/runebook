<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="tensorflow">
    <body>
      <group id="tensorflow">
        <trans-unit id="93730ffee56e38025297d5b85f25dc43785682a7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The data type for the &lt;code&gt;RaggedTensor&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt;：のデータ型 &lt;code&gt;RaggedTensor&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8311b7d6d6a66a4cc078459523471c258d9a8793" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The data type of the output tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt;：出力テンソルのデータ型。</target>
        </trans-unit>
        <trans-unit id="dfb8ab8883fa5c17f243b7cadf9b538e5b9e99da" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The data type to produce. Must be a floating point type.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt;：生成するデータ型。浮動小数点型でなければなりません。</target>
        </trans-unit>
        <trans-unit id="bac9725820860820d9fd62be5a72c20662735736" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The data type.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt;：データ型。</target>
        </trans-unit>
        <trans-unit id="a98d30861cb65bac1e96993b9e50e9fd4683a3d2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The data type. Only floating point types are supported.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt;：データ型。浮動小数点型のみがサポートされています。</target>
        </trans-unit>
        <trans-unit id="3a25249571ba1e30c6e02d9a49f38fe3b68a45e7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The desired DType of the returned &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt;：返される &lt;code&gt;Tensor&lt;/code&gt; の目的のDType。</target>
        </trans-unit>
        <trans-unit id="0123ebb65929717d638503029eead50b66dc3b8d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The desired output &lt;code&gt;DType&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt;：目的の出力 &lt;code&gt;DType&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="73c085e5cbd79b8c8a51f16d423b9691832b2d0e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The destination type. The list of supported dtypes is the same as &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt;：宛先タイプ。サポートされているdtypeのリストは &lt;code&gt;x&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="d39e28e9af4d658e227a655f4851f78403bb3820" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The dtype for &lt;code&gt;row_splits&lt;/code&gt;. One of &lt;a href=&quot;../tf#int32&quot;&gt;&lt;code&gt;tf.int32&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../tf#int64&quot;&gt;&lt;code&gt;tf.int64&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt;：row_splitsの &lt;code&gt;row_splits&lt;/code&gt; 。&lt;a href=&quot;../tf#int32&quot;&gt; &lt;code&gt;tf.int32&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../tf#int64&quot;&gt; &lt;code&gt;tf.int64&lt;/code&gt; &lt;/a&gt;のいずれか。</target>
        </trans-unit>
        <trans-unit id="65aec9e03872a9a6a73e440bd91db0702d08cfae" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The dtype of the layer's computations and weights (default of &lt;code&gt;None&lt;/code&gt; means use &lt;a href=&quot;../backend/floatx&quot;&gt;&lt;code&gt;tf.keras.backend.floatx&lt;/code&gt;&lt;/a&gt; in TensorFlow 2, or the type of the first input in TensorFlow 1).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt;：レイヤーの計算と重みのdtype（デフォルトの &lt;code&gt;None&lt;/code&gt; は、TensorFlow 2では&lt;a href=&quot;../backend/floatx&quot;&gt; &lt;code&gt;tf.keras.backend.floatx&lt;/code&gt; &lt;/a&gt;を使用するか、TensorFlow 1では最初の入力のタイプを意味します）。</target>
        </trans-unit>
        <trans-unit id="b8c06aa5df2c3e2b7357593b23a02b8f50cca7e2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The output dtype; defaults to &lt;a href=&quot;../../../tf#int64&quot;&gt;&lt;code&gt;tf.int64&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt;：出力dtype; デフォルトは&lt;a href=&quot;../../../tf#int64&quot;&gt; &lt;code&gt;tf.int64&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="e2a07d38ff9f7480e8df5f3d9eee35c1602eaecf" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The output dtype; defaults to &lt;a href=&quot;../../tf#int64&quot;&gt;&lt;code&gt;tf.int64&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt;：出力dtype; デフォルトは&lt;a href=&quot;../../tf#int64&quot;&gt; &lt;code&gt;tf.int64&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="9c4a6002ba4ba632aaab5dac487b134c93cc91c3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The type of &lt;code&gt;values&lt;/code&gt; elements in the tensor to be fed.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt;：供給されるテンソルの &lt;code&gt;values&lt;/code&gt; 要素のタイプ。</target>
        </trans-unit>
        <trans-unit id="745ba5ab8fed0a1290f97e5c2e42758b08f9737f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The type of alpha, beta, and the output: &lt;code&gt;float16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, or &lt;code&gt;float64&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt;：アルファ、ベータ、および出力のタイプ： &lt;code&gt;float16&lt;/code&gt; 、 &lt;code&gt;float32&lt;/code&gt; 、または &lt;code&gt;float64&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="79c133788e05ac75d2b3b01fbd124585a7301c20" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The type of an element in the resulting &lt;code&gt;Tensor&lt;/code&gt;</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt;：結果の &lt;code&gt;Tensor&lt;/code&gt; の要素のタイプ</target>
        </trans-unit>
        <trans-unit id="84444f1142d53d7b16796ddc01e2a2cedfd9599c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The type of element in the resulting &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt;：結果の &lt;code&gt;Tensor&lt;/code&gt; の要素のタイプ。</target>
        </trans-unit>
        <trans-unit id="12e784045af4fe261522e0d815a185835cd66d4b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The type of elements for the returned &lt;code&gt;RaggedTensor&lt;/code&gt;. If not specified, then a default is chosen based on the scalar values in &lt;code&gt;pylist&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt;：返される &lt;code&gt;RaggedTensor&lt;/code&gt; の要素のタイプ。指定しない場合、デフォルトは &lt;code&gt;pylist&lt;/code&gt; のスカラー値に基づいて選択されます。</target>
        </trans-unit>
        <trans-unit id="f17bb8b464fe3eee0b0c7e7f853b4d67822182f5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The type of elements in the tensor to be fed.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt;：供給されるテンソルの要素のタイプ。</target>
        </trans-unit>
        <trans-unit id="b0a1f44c133c3b9e3f71f56a21cad93db429f1d6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The type of features. Only string and integer types are supported.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt;：特徴のタイプ。文字列と整数型のみがサポートされています。</target>
        </trans-unit>
        <trans-unit id="c8f96ae19179d22baf8ff0547828c8cbea1aa06d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The type of features. Only string and integer types are supported. If &lt;code&gt;None&lt;/code&gt;, it will be inferred from &lt;code&gt;vocabulary_list&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt;：特徴のタイプ。文字列と整数型のみがサポートされています。 &lt;code&gt;None&lt;/code&gt; の場合、 &lt;code&gt;vocabulary_list&lt;/code&gt; から推測されます。</target>
        </trans-unit>
        <trans-unit id="5119d4fa61952d11852eac0ffbb28c3de32cf5b4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The type of the elements of the resulting tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt;：結果のテンソルの要素のタイプ。</target>
        </trans-unit>
        <trans-unit id="dde3739e5058bc9d1d759041531c9110ddd267aa" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The type of the elements of the resulting tensor. If not specified, then a value is chosen based on the other args.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt;：結果のテンソルの要素のタイプ。指定しない場合、値は他の引数に基づいて選択されます。</target>
        </trans-unit>
        <trans-unit id="89df241a5e86c890644ee861562a09712454c44a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The type of the event samples (default: int32).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt;：イベントサンプルのタイプ（デフォルト：int32）。</target>
        </trans-unit>
        <trans-unit id="f4877cbe2731d74673a74055c9cd7997b012d094" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The type of the event samples. &lt;code&gt;None&lt;/code&gt; implies no type-enforcement.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt;：イベントサンプルのタイプ。 &lt;code&gt;None&lt;/code&gt; は型の適用がないことを意味します。</target>
        </trans-unit>
        <trans-unit id="13b94bc612d7f14aaecf8387df4e49b2e180e040" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The type of the event samples. Default: &lt;code&gt;int32&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt;：イベントサンプルのタイプ。デフォルト： &lt;code&gt;int32&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a4085410c3041643687258c948bfc5382badf511" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The type of the output tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt;：出力テンソルのタイプ。</target>
        </trans-unit>
        <trans-unit id="b686457591d8e05282c4691fc5a7c572fc9dcb9f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The type of the output.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt;：出力のタイプ。</target>
        </trans-unit>
        <trans-unit id="da7244c7c3802b4b50ccf343c3984200654987f3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The type of the output. Default: tf.int32</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt;：出力のタイプ。デフォルト：tf.int32</target>
        </trans-unit>
        <trans-unit id="2f5d879724a1e953b3a6f797017217dea77c95dd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The type of the output: &lt;code&gt;float16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt; or &lt;code&gt;int64&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt;：出力のタイプ： &lt;code&gt;float16&lt;/code&gt; 、 &lt;code&gt;float32&lt;/code&gt; 、 &lt;code&gt;float64&lt;/code&gt; 、 &lt;code&gt;int32&lt;/code&gt; または &lt;code&gt;int64&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ce50785e51df00238c0ff952882329e7854ada67" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The type of the output: &lt;code&gt;float16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, or &lt;code&gt;int64&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt;：出力のタイプ： &lt;code&gt;float16&lt;/code&gt; 、 &lt;code&gt;float32&lt;/code&gt; 、 &lt;code&gt;float64&lt;/code&gt; 、 &lt;code&gt;int32&lt;/code&gt; 、または &lt;code&gt;int64&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="34ae2acebbadb2f3f532f4010c7123e08c0997ec" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The type of the this &lt;code&gt;LinearOperator&lt;/code&gt;. Arguments to &lt;code&gt;matmul&lt;/code&gt; and &lt;code&gt;solve&lt;/code&gt; will have to be this type.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt;：この &lt;code&gt;LinearOperator&lt;/code&gt; のタイプ。 &lt;code&gt;matmul&lt;/code&gt; と &lt;code&gt;solve&lt;/code&gt; の引数はこのタイプでなければなりません。</target>
        </trans-unit>
        <trans-unit id="83c5816a78e5c0f60b9c452a243b2a6429a7e113" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The type of the variable. Defaults to &lt;code&gt;self.dtype&lt;/code&gt; or &lt;code&gt;float32&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt;：変数のタイプ。デフォルトは &lt;code&gt;self.dtype&lt;/code&gt; または &lt;code&gt;float32&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="3ad878a260895a92eb5f9558b2538f3473171350" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The type of values.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt;：値のタイプ。</target>
        </trans-unit>
        <trans-unit id="63696da63c22dcc751a0a211e618f0e96f4b4258" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: Type of the new or existing variable (defaults to &lt;code&gt;DT_FLOAT&lt;/code&gt;).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt;：新規または既存の変数のタイプ（デフォルトは &lt;code&gt;DT_FLOAT&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="fb44cb14741c12b86e01731c72b07b74281288b9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: Type of the variables. Ignored if &lt;code&gt;initializer&lt;/code&gt; is a &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt;：変数のタイプ。 &lt;code&gt;initializer&lt;/code&gt; が &lt;code&gt;Tensor&lt;/code&gt; の場合は無視されます。</target>
        </trans-unit>
        <trans-unit id="311cbd894b14ef044c5b025a15e02eff67370716" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: Type of weights, such as &lt;a href=&quot;../../tf#float32&quot;&gt;&lt;code&gt;tf.float32&lt;/code&gt;&lt;/a&gt;. Only float and integer weights are supported.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt;次のような重みの種類、&lt;a href=&quot;../../tf#float32&quot;&gt; &lt;code&gt;tf.float32&lt;/code&gt; &lt;/a&gt;。浮動小数点と整数の重みのみがサポートされています。</target>
        </trans-unit>
        <trans-unit id="8d004692b33dc5bc24bfe8dc8b0c40a0f4c55a9e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: Value convertible to &lt;a href=&quot;dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt;. The type of the tensor values.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt;：に価値が転換&lt;a href=&quot;dtypes/dtype&quot;&gt; &lt;code&gt;tf.DType&lt;/code&gt; &lt;/a&gt;。テンソル値のタイプ。</target>
        </trans-unit>
        <trans-unit id="0372e048432271c3bd8e3e9e9c8578c8c7b1cb78" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: data type of returned Keras variable</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt;：返される&lt;b&gt; Keras&lt;/b&gt;変数のデータ型</target>
        </trans-unit>
        <trans-unit id="e0faa30434c1d658b7a2c35c5e8fe8a0fbb53103" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: default type passed to get_variable (defaults to DT_FLOAT).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt;：&lt;b&gt; get_variableに&lt;/b&gt;渡されるデフォルトのタイプ（デフォルトはDT_FLOAT）。</target>
        </trans-unit>
        <trans-unit id="0987d567b0cf82828707c3daa8db69b03079120b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: defines the type of values. Default value is &lt;a href=&quot;../../tf#float32&quot;&gt;&lt;code&gt;tf.float32&lt;/code&gt;&lt;/a&gt;. Must be a non-quantized, real integer or floating point type.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt;：値のタイプを定義します。デフォルト値は&lt;a href=&quot;../../tf#float32&quot;&gt; &lt;code&gt;tf.float32&lt;/code&gt; &lt;/a&gt;です。非量子化の実整数型または浮動小数点型でなければなりません。</target>
        </trans-unit>
        <trans-unit id="a90e65b0b4ff51f80133230d8ca5f38def07683e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: dtype for returned histogram.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt;：返されるヒストグラムのdtype。</target>
        </trans-unit>
        <trans-unit id="f5d8ae70f3dc788dc0094c1a211fbd4861b26237" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: dtype of returned Keras variable. &lt;code&gt;None&lt;/code&gt; uses the dtype of &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt;：返されたKeras変数のdtype。 &lt;code&gt;None&lt;/code&gt; も &lt;code&gt;x&lt;/code&gt; のdtypeを使用しません。</target>
        </trans-unit>
        <trans-unit id="4ae757b5ee8573027fdb9506f12fe5a657a924e4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: integer type to use for the output. Defaults to int64.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt;：出力に使用する整数型。デフォルトはint64です。</target>
        </trans-unit>
        <trans-unit id="7a4a829ef1dd8f275392546958bf061918fa132d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: output type of the resulting tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt;：結果のテンソルの出力タイプ。</target>
        </trans-unit>
        <trans-unit id="a12bf60ab3eb735bb5a6e0babbd705a7427051ba" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: the data type to use for the state.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt;：状態に使用するデータ型。</target>
        </trans-unit>
        <trans-unit id="a619c50ce02e501ed3f3bf4c52183d1704e07b91" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: type of variables created in this scope (defaults to the type in the passed scope, or inherited from parent scope).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt;：このスコープで作成される変数のタイプ（デフォルトでは、渡されたスコープのタイプ、または親スコープから継承されます）。</target>
        </trans-unit>
        <trans-unit id="ebd4ae77a93327a34c1279d1fd4d71b3effb5228" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype_hint&lt;/code&gt;&lt;/b&gt;: Optional element type for the returned tensor, used when dtype is None. In some cases, a caller may not have a dtype in mind when converting to a tensor, so dtype_hint can be used as a soft preference. If the conversion to &lt;code&gt;dtype_hint&lt;/code&gt; is not possible, this argument has no effect.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype_hint&lt;/code&gt; &lt;/b&gt;：返されたテンソルのオプションの要素タイプ。dtypeがNoneの場合に使用されます。場合によっては、テンソルに変換するときに呼び出し元がdtypeを考慮しない場合があるため、dtype_hintをソフト設定として使用できます。 &lt;code&gt;dtype_hint&lt;/code&gt; への変換が不可能な場合、この引数は効果がありません。</target>
        </trans-unit>
        <trans-unit id="830dd4cdac605062c095fdeff1a0c1a75efb5d31" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype_hint&lt;/code&gt;&lt;/b&gt;: same meaning as preferred_dtype, and overrides it.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype_hint&lt;/code&gt; &lt;/b&gt;：&lt;b&gt; preferred_dtype&lt;/b&gt;と同じ意味で、それをオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="1d8df945300adea025354855633d2377307533f7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtypes&lt;/code&gt;&lt;/b&gt;: (Optional) A list of &lt;code&gt;DType&lt;/code&gt; objects that will be the types of the tensors that the operation produces.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtypes&lt;/code&gt; &lt;/b&gt;：（オプション）操作が生成するテンソルのタイプとなる &lt;code&gt;DType&lt;/code&gt; オブジェクトのリスト。</target>
        </trans-unit>
        <trans-unit id="17c8ce1ced7ce972779976284d9c85c411ad4842" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtypes&lt;/code&gt;&lt;/b&gt;: A list of &lt;code&gt;DType&lt;/code&gt; objects. The length of &lt;code&gt;dtypes&lt;/code&gt; must equal the number of tensors in each queue element.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtypes&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;DType&lt;/code&gt; オブジェクトのリスト。 &lt;code&gt;dtypes&lt;/code&gt; の長さは、各キュー要素のテンソルの数と等しくなければなりません。</target>
        </trans-unit>
        <trans-unit id="b8594ffd635d50e6b89adc54270d3ce7b4592ad1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtypes&lt;/code&gt;&lt;/b&gt;: A list of types. The length of dtypes must equal the number of tensors in each element.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtypes&lt;/code&gt; &lt;/b&gt;：タイプのリスト。dtypesの長さは、各要素のテンソルの数と等しくなければなりません。</target>
        </trans-unit>
        <trans-unit id="b57c9f53b389739f597056f50e5f0bc9af72f3f2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dump_graphviz_dir&lt;/code&gt;&lt;/b&gt;: Full filepath of folder to dump the graphs at various stages of processing GraphViz .dot files. Preferred over --output_format=GRAPHVIZ_DOT in order to keep the requirements of the output file. (default None)</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dump_graphviz_dir&lt;/code&gt; &lt;/b&gt;：GraphViz .dotファイルの処理のさまざまな段階でグラフをダンプするためのフォルダーの完全ファイルパス。出力ファイルの要件を維持するために、-output_format = GRAPHVIZ_DOTよりも優先されます。（デフォルトはなし）</target>
        </trans-unit>
        <trans-unit id="8bbdfab79b124bef48b12fa62f17703b39f5d8a9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dump_graphviz_video&lt;/code&gt;&lt;/b&gt;: Boolean indicating whether to dump the graph after every graph transformation. (default False)</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dump_graphviz_video&lt;/code&gt; &lt;/b&gt;：グラフを変換するたびにグラフをダンプするかどうかを示すブール値。（デフォルトはFalse）</target>
        </trans-unit>
        <trans-unit id="4ff02968019dce43c37ab42fb216bf868d6dda69" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dump_root&lt;/code&gt;&lt;/b&gt;: The directory path where the dumping information will be written.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dump_root&lt;/code&gt; &lt;/b&gt;：ダンプ情報が書き込まれるディレクトリパス。</target>
        </trans-unit>
        <trans-unit id="fe0d91e498fc7e0d7a2b177e9f25ba5ad3fc9030" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dynamic&lt;/code&gt;&lt;/b&gt;: Set this to &lt;code&gt;True&lt;/code&gt; if your layer should only be run eagerly, and should not be used to generate a static computation graph. This would be the case for a Tree-RNN or a recursive network, for example, or generally for any layer that manipulates tensors using Python control flow. If &lt;code&gt;False&lt;/code&gt;, we assume that the layer can safely be used to generate a static computation graph.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dynamic&lt;/code&gt; &lt;/b&gt;：レイヤーを熱心に実行するだけでよく、静的計算グラフの生成に使用しない場合は、これを &lt;code&gt;True&lt;/code&gt; に設定します。これは、たとえば、Tree-RNNまたは再帰的ネットワークの場合、または一般に、Python制御フローを使用してテンソルを操作するすべてのレイヤーに当てはまります。 &lt;code&gt;False&lt;/code&gt; の場合、静的計算グラフを生成するためにレイヤーを安全に使用できると想定します。</target>
        </trans-unit>
        <trans-unit id="7ddb99c7c52aeaf64151d83e306932d0ca80b903" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dynamic_pad&lt;/code&gt;&lt;/b&gt;: Boolean. Allow variable dimensions in input shapes. The given dimensions are padded upon dequeue so that tensors within a batch have the same shapes.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dynamic_pad&lt;/code&gt; &lt;/b&gt;：ブール値。入力形状の可変寸法を許可します。バッチ内のテンソルが同じ形状になるように、指定された寸法はデキュー時にパディングされます。</target>
        </trans-unit>
        <trans-unit id="d7b37735b7fb389863b872cc2c2e05396d433dc5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dynamic_size&lt;/code&gt;&lt;/b&gt;: (optional) Python bool: If true, writes to the TensorArray can grow the TensorArray past its initial size. Default: False.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dynamic_size&lt;/code&gt; &lt;/b&gt;：（オプション）Python bool：trueの場合、TensorArrayへの書き込みにより、TensorArrayを初期サイズを超えて拡張できます。デフォルト：False。</target>
        </trans-unit>
        <trans-unit id="de8381a6f0471fab114e20734b798f34c33993f3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dynamic_size&lt;/code&gt;&lt;/b&gt;: Whether the &lt;code&gt;TensorArray&lt;/code&gt; can grow past its initial size.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dynamic_size&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;TensorArray&lt;/code&gt; が初期サイズを超えて拡大できるかどうか。</target>
        </trans-unit>
        <trans-unit id="e712466bc823bc6ec87277bfd946d65c5a31f440" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;e&lt;/code&gt;&lt;/b&gt;: Eigenvalues. Shape is &lt;code&gt;[..., N]&lt;/code&gt;. Sorted in non-decreasing order.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;e&lt;/code&gt; &lt;/b&gt;：固有値。形状は &lt;code&gt;[..., N]&lt;/code&gt; です。降順に並べ替えられます。</target>
        </trans-unit>
        <trans-unit id="27cfde6bcff1785e52e8f9ebd31f3a8dc8e3ded7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;e&lt;/code&gt;&lt;/b&gt;: Eigenvalues. Shape is &lt;code&gt;[..., N]&lt;/code&gt;. The vector &lt;code&gt;e[..., :]&lt;/code&gt; contains the &lt;code&gt;N&lt;/code&gt; eigenvalues of &lt;code&gt;tensor[..., :, :]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;e&lt;/code&gt; &lt;/b&gt;：固有値。形状は &lt;code&gt;[..., N]&lt;/code&gt; です。ベクトル &lt;code&gt;e[..., :]&lt;/code&gt; は、 &lt;code&gt;tensor[..., :, :]&lt;/code&gt; の &lt;code&gt;N&lt;/code&gt; 個の固有値が含まれています。</target>
        </trans-unit>
        <trans-unit id="2fe325d4af0f46243540270017d676b88b966b35" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;element_length_func&lt;/code&gt;&lt;/b&gt;: function from element in &lt;code&gt;Dataset&lt;/code&gt; to &lt;a href=&quot;../../../tf#int32&quot;&gt;&lt;code&gt;tf.int32&lt;/code&gt;&lt;/a&gt;, determines the length of the element, which will determine the bucket it goes into.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;element_length_func&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Dataset&lt;/code&gt; の要素から&lt;a href=&quot;../../../tf#int32&quot;&gt; &lt;code&gt;tf.int32&lt;/code&gt; &lt;/a&gt;までの関数は、要素の長さを決定し、要素が入るバケットを決定します。</target>
        </trans-unit>
        <trans-unit id="d3b84c882e43b044c888d36c0fdbe99210bc0353" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;element_shape&lt;/code&gt;&lt;/b&gt;: (Optional.) A &lt;code&gt;TensorShape&lt;/code&gt; representing the shape of a row of &lt;code&gt;input_tensor&lt;/code&gt;, if it cannot be inferred.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;element_shape&lt;/code&gt; &lt;/b&gt;：（オプション）A &lt;code&gt;TensorShape&lt;/code&gt; は、の行の形状を表す &lt;code&gt;input_tensor&lt;/code&gt; を、それが推測できない場合、。</target>
        </trans-unit>
        <trans-unit id="db12abc87f63b241933229016206248f9bb229b4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;element_shape&lt;/code&gt;&lt;/b&gt;: (optional, default: None) A &lt;code&gt;TensorShape&lt;/code&gt; object specifying the shape constraints of each of the elements of the TensorArray. Need not be fully defined.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;element_shape&lt;/code&gt; &lt;/b&gt;：（オプション、デフォルト：なし） &lt;code&gt;TensorShape&lt;/code&gt; の各要素の形状制約を指定する TensorShapeオブジェクト。完全に定義する必要はありません。</target>
        </trans-unit>
        <trans-unit id="dfaddc702539e66cde81f6d34103389985cb0990" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;element_shape&lt;/code&gt;&lt;/b&gt;: The shape of each element in the &lt;code&gt;TensorArray&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;element_shape&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;TensorArray&lt;/code&gt; の各要素の形状。</target>
        </trans-unit>
        <trans-unit id="6aad4bd9c34ece9b5a846198655fc10450c2e1ea" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;elems&lt;/code&gt;&lt;/b&gt;: A tensor or (possibly nested) sequence of tensors, each of which will be unpacked along their first dimension. The nested sequence of the resulting slices will be applied to &lt;code&gt;fn&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;elems&lt;/code&gt; &lt;/b&gt;：テンソルまたは（場合によってはネストされた）テンソルのシーケンス。各テンソルは最初の次元に沿ってアンパックされます。結果のスライスのネストされたシーケンスが &lt;code&gt;fn&lt;/code&gt; に適用されます。</target>
        </trans-unit>
        <trans-unit id="56137144166831340cacdb407331c41e8e7d772a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;elems&lt;/code&gt;&lt;/b&gt;: A tensor or (possibly nested) sequence of tensors, each of which will be unpacked along their first dimension. The nested sequence of the resulting slices will be mapped over by &lt;code&gt;fn&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;elems&lt;/code&gt; &lt;/b&gt;：テンソルまたは（場合によってはネストされた）テンソルのシーケンス。各テンソルは最初の次元に沿ってアンパックされます。結果のスライスのネストされたシーケンスは、 &lt;code&gt;fn&lt;/code&gt; によってマップされます。</target>
        </trans-unit>
        <trans-unit id="6fc1f9fd1a997f84d586693abe0ce57dab729f2a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;elems&lt;/code&gt;&lt;/b&gt;: A tensor or (possibly nested) sequence of tensors, each of which will be unpacked along their first dimension. The nested sequence of the resulting slices will be the first argument to &lt;code&gt;fn&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;elems&lt;/code&gt; &lt;/b&gt;：テンソルまたは（場合によってはネストされた）テンソルのシーケンス。各テンソルは最初の次元に沿ってアンパックされます。結果のスライスのネストされたシーケンスは、 &lt;code&gt;fn&lt;/code&gt; の最初の引数になります。</target>
        </trans-unit>
        <trans-unit id="0e2662635fdc40608181d3523e74917c2a8677e0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;elems&lt;/code&gt;&lt;/b&gt;: tensor</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;elems&lt;/code&gt; &lt;/b&gt;：テンソル</target>
        </trans-unit>
        <trans-unit id="37f094942d949f7ace6ec45b6e4a9329dd5f5df7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ellipsis_mask&lt;/code&gt;&lt;/b&gt;: An &lt;code&gt;int32&lt;/code&gt; mask.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;ellipsis_mask&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;int32&lt;/code&gt; マスク。</target>
        </trans-unit>
        <trans-unit id="e952aaf1eefc7875c135593fb17db8b66d722082" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;else_expression&lt;/code&gt;&lt;/b&gt;: either a tensor, or a callable that returns a tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;else_expression&lt;/code&gt; &lt;/b&gt;：テンソル、またはテンソルを返す呼び出し可能オブジェクト。</target>
        </trans-unit>
        <trans-unit id="bdcf40652a986117f4e71266c3685f9211c8321c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;embedding_config&lt;/code&gt;&lt;/b&gt;: If not None, a &lt;code&gt;TPUEmbeddingConfiguration&lt;/code&gt; proto describing the desired configuration of the hardware embedding lookup tables. If embedding_config is None, no hardware embeddings can be used.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;embedding_config&lt;/code&gt; &lt;/b&gt;：Noneでない場合、ハードウェア埋め込みルックアップテーブルの必要な構成を説明する &lt;code&gt;TPUEmbeddingConfiguration&lt;/code&gt; プロト。embedding_configがNoneの場合、ハードウェアの埋め込みは使用できません。</target>
        </trans-unit>
        <trans-unit id="129ba343101ac9af75150c1de6084aa833b481ee" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;embedding_config_spec&lt;/code&gt;&lt;/b&gt;: Optional EmbeddingConfigSpec instance to support using TPU embedding.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;embedding_config_spec&lt;/code&gt; &lt;/b&gt;：TPU埋め込みの使用をサポートするオプションのEmbeddingConfigSpecインスタンス。</target>
        </trans-unit>
        <trans-unit id="73056f8df912b3ba055b80600a9d7dc159baaef8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;embedding_lookup_device&lt;/code&gt;&lt;/b&gt;: The device on which to run the embedding lookup. Valid options are &quot;cpu&quot;, &quot;tpu_tensor_core&quot;, and &quot;tpu_embedding_core&quot;. If specifying &quot;tpu_tensor_core&quot;, a tensor_core_shape must be supplied. Defaults to &quot;cpu&quot;. If not specified, the default behavior is embedding lookup on &quot;tpu_embedding_core&quot; for training and &quot;cpu&quot; for inference. Valid options for training : [&quot;tpu_embedding_core&quot;, &quot;tpu_tensor_core&quot;] Valid options for serving : [&quot;cpu&quot;, &quot;tpu_tensor_core&quot;] For training, tpu_embedding_core is good for large embedding vocab (&amp;gt;1M), otherwise, tpu_tensor_core is often sufficient. For serving, doing embedding lookup on tpu_tensor_core during serving is a way to reduce host cpu usage in cases where that is a bottleneck.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;embedding_lookup_device&lt;/code&gt; &lt;/b&gt;：埋め込みルックアップを実行するデバイス。有効なオプションは、「cpu」、「tpu_tensor_core」、および「tpu_embedding_core」です。 「tpu_tensor_core」を指定する場合は、tensor_core_shapeを指定する必要があります。デフォルトは「cpu」です。指定しない場合、デフォルトの動作は、トレーニングの場合は「tpu_embedding_core」、埋め込みの場合は「cpu」の埋め込みルックアップです。トレーニングの有効なオプション：[&quot;tpu_embedding_core&quot;、 &quot;tpu_tensor_core&quot;]配信の有効なオプション：[&quot;cpu&quot;、 &quot;tpu_tensor_core&quot;]トレーニングの場合、tpu_embedding_coreは大きな埋め込み語彙（&amp;gt; 1M）に適しています。それ以外の場合は、tpu_tensor_coreで十分です。サービングのために、</target>
        </trans-unit>
        <trans-unit id="987b675fa338c6651c2c5ba2c50b25bf5caf3fa0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;embedding_lookup_device&lt;/code&gt;&lt;/b&gt;: The device on which to run the embedding lookup. Valid options are &quot;cpu&quot;, &quot;tpu_tensor_core&quot;, and &quot;tpu_embedding_core&quot;. If specifying &quot;tpu_tensor_core&quot;, a tensor_core_shape must be supplied. If not specified, the default behavior is embedding lookup on &quot;tpu_embedding_core&quot; for training and &quot;cpu&quot; for inference. Valid options for training : [&quot;tpu_embedding_core&quot;, &quot;tpu_tensor_core&quot;] Valid options for serving : [&quot;cpu&quot;, &quot;tpu_tensor_core&quot;] For training, tpu_embedding_core is good for large embedding vocab (&amp;gt;1M), otherwise, tpu_tensor_core is often sufficient. For serving, doing embedding lookup on tpu_tensor_core during serving is a way to reduce host cpu usage in cases where that is a bottleneck.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;embedding_lookup_device&lt;/code&gt; &lt;/b&gt;：埋め込みルックアップを実行するデバイス。有効なオプションは、「cpu」、「tpu_tensor_core」、および「tpu_embedding_core」です。 「tpu_tensor_core」を指定する場合は、tensor_core_shapeを指定する必要があります。指定しない場合、デフォルトの動作は、トレーニングの場合は「tpu_embedding_core」、埋め込みの場合は「cpu」の埋め込みルックアップです。トレーニングの有効なオプション：[&quot;tpu_embedding_core&quot;、 &quot;tpu_tensor_core&quot;]配信の有効なオプション：[&quot;cpu&quot;、 &quot;tpu_tensor_core&quot;]トレーニングの場合、tpu_embedding_coreは大きな埋め込み語彙（&amp;gt; 1M）に適しています。それ以外の場合は、tpu_tensor_coreで十分です。配信の場合、配信中にtpu_tensor_coreで埋め込みルックアップを行うことは、それがボトルネックである場合にホストのCPU使用量を減らす方法です。</target>
        </trans-unit>
        <trans-unit id="0656af4d1701927ba55d548736d5202430fe06de" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;embedding_weights&lt;/code&gt;&lt;/b&gt;: A list of &lt;code&gt;P&lt;/code&gt; float &lt;code&gt;Tensor&lt;/code&gt;s or values representing partitioned embedding &lt;code&gt;Tensor&lt;/code&gt;s. Alternatively, a &lt;code&gt;PartitionedVariable&lt;/code&gt; created by partitioning along dimension 0. The total unpartitioned shape should be &lt;code&gt;[e_0, e_1, ..., e_m]&lt;/code&gt;, where &lt;code&gt;e_0&lt;/code&gt; represents the vocab size and &lt;code&gt;e_1, ..., e_m&lt;/code&gt; are the embedding dimensions.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;embedding_weights&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;P&lt;/code&gt; float &lt;code&gt;Tensor&lt;/code&gt; のリスト、または分割された埋め込み &lt;code&gt;Tensor&lt;/code&gt; を表す値。または、次元0に沿って &lt;code&gt;PartitionedVariable&lt;/code&gt; によって作成された PartitionedVariable。分割されていない形状の合計は &lt;code&gt;[e_0, e_1, ..., e_m]&lt;/code&gt; である &lt;code&gt;e_0&lt;/code&gt; あります。ここで、 e_0は語彙サイズを表し、 &lt;code&gt;e_1, ..., e_m&lt;/code&gt; は埋め込み次元です。</target>
        </trans-unit>
        <trans-unit id="37cb1fbebc4a0bf4ce0011c01e3fcf1fb4d34468" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;embeddings_constraint&lt;/code&gt;&lt;/b&gt;: Constraint function applied to the &lt;code&gt;embeddings&lt;/code&gt; matrix.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;embeddings_constraint&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;embeddings&lt;/code&gt; 行列に適用される制約関数。</target>
        </trans-unit>
        <trans-unit id="a13d20e1e86fb383539f4faba752cdba9a9ec4ef" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;embeddings_data&lt;/code&gt;&lt;/b&gt;: data to be embedded at layers specified in &lt;code&gt;embeddings_layer_names&lt;/code&gt;. Numpy array (if the model has a single input) or list of Numpy arrays (if the model has multiple inputs). Learn &lt;a href=&quot;https://www.tensorflow.org/programmers_guide/embedding&quot;&gt;more about embeddings&lt;/a&gt;</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;embeddings_data&lt;/code&gt; &lt;/b&gt;：データがで指定された層に埋め込まれる &lt;code&gt;embeddings_layer_names&lt;/code&gt; 。Numpy配列（モデルに単一の入力がある場合）またはNumpy配列のリスト（モデルに複数の入力がある場合）。&lt;a href=&quot;https://www.tensorflow.org/programmers_guide/embedding&quot;&gt;埋め込みの&lt;/a&gt;詳細</target>
        </trans-unit>
        <trans-unit id="c122105110e511229e16f30e35c267a3ddce2cb7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;embeddings_freq&lt;/code&gt;&lt;/b&gt;: frequency (in epochs) at which embedding layers will be visualized. If set to 0, embeddings won't be visualized.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;embeddings_freq&lt;/code&gt; &lt;/b&gt;：埋め込みレイヤーが視覚化される頻度（エポック単位）。0に設定すると、埋め込みは視覚化されません。</target>
        </trans-unit>
        <trans-unit id="3cc4316d9131fe06b8e3bc5300387688e79dad43" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;embeddings_freq&lt;/code&gt;&lt;/b&gt;: frequency (in epochs) at which selected embedding layers will be saved. If set to 0, embeddings won't be computed. Data to be visualized in TensorBoard's Embedding tab must be passed as &lt;code&gt;embeddings_data&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;embeddings_freq&lt;/code&gt; &lt;/b&gt;：選択した埋め込みレイヤーが保存される頻度（エポック単位）。0に設定すると、埋め込みは計算されません。TensorBoardの[埋め込み]タブで視覚化するデータは、 &lt;code&gt;embeddings_data&lt;/code&gt; として渡す必要があります。</target>
        </trans-unit>
        <trans-unit id="dd04a472049b1bdf71c9f908566561b79597a9de" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;embeddings_initializer&lt;/code&gt;&lt;/b&gt;: Initializer for the &lt;code&gt;embeddings&lt;/code&gt; matrix.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;embeddings_initializer&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;embeddings&lt;/code&gt; 行列の初期化子。</target>
        </trans-unit>
        <trans-unit id="b6542dea4af39e4fbd132cbfcdf2499ec9391fe3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;embeddings_layer_names&lt;/code&gt;&lt;/b&gt;: a list of names of layers to keep eye on. If None or empty list all the embedding layer will be watched.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;embeddings_layer_names&lt;/code&gt; &lt;/b&gt;：監視するレイヤーの名前のリスト。Noneまたは空のリストの場合、すべての埋め込みレイヤーが監視されます。</target>
        </trans-unit>
        <trans-unit id="d189fadb1fb199cbe378ab43878fa13e57f59ada" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;embeddings_metadata&lt;/code&gt;&lt;/b&gt;: a dictionary which maps layer name to a file name in which metadata for this embedding layer is saved. See the &lt;a href=&quot;https://www.tensorflow.org/how_tos/embedding_viz/#metadata_optional&quot;&gt;details&lt;/a&gt; about metadata files format. In case if the same metadata file is used for all embedding layers, string can be passed.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;embeddings_metadata&lt;/code&gt; &lt;/b&gt;：レイヤー名をこの埋め込みレイヤーのメタデータが保存されているファイル名にマップする辞書。メタデータファイル形式の&lt;a href=&quot;https://www.tensorflow.org/how_tos/embedding_viz/#metadata_optional&quot;&gt;詳細を&lt;/a&gt;ご覧ください。すべての埋め込みレイヤーに同じメタデータファイルが使用されている場合、文字列を渡すことができます。</target>
        </trans-unit>
        <trans-unit id="142b53125ed4867c97331b649fb1e1c5c305023b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;embeddings_regularizer&lt;/code&gt;&lt;/b&gt;: Regularizer function applied to the &lt;code&gt;embeddings&lt;/code&gt; matrix.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;embeddings_regularizer&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;embeddings&lt;/code&gt; 行列に適用される正則化関数。</target>
        </trans-unit>
        <trans-unit id="8b3f70dbf5569b5454e93bdee0da9c500d6c9ae0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;empty_key&lt;/code&gt;&lt;/b&gt;: the key to use to represent empty buckets internally. Must not be used in insert, remove or lookup operations.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;empty_key&lt;/code&gt; &lt;/b&gt;：空のバケットを内部的に表すために使用するキー。挿入、削除、またはルックアップ操作では使用しないでください。</target>
        </trans-unit>
        <trans-unit id="fa83b54c019fabc80bb34a1dc4aba1e9ff0658b7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;empty_row_indicator&lt;/code&gt;&lt;/b&gt;: A bool vector of length &lt;code&gt;N&lt;/code&gt; indicating whether each input row was empty.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;empty_row_indicator&lt;/code&gt; &lt;/b&gt;：各入力行が空かどうかを示す長さ &lt;code&gt;N&lt;/code&gt; のブールベクトル。</target>
        </trans-unit>
        <trans-unit id="8883962d7905140f0b046efff38735e1abbb6650" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;enable&lt;/code&gt;&lt;/b&gt;: (Boolean) Whether to enable or disable memory growth</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;enable&lt;/code&gt; &lt;/b&gt;：（ブール）メモリ増加を有効にするか無効にするか</target>
        </trans-unit>
        <trans-unit id="b5515adbfca13587481caa7605837267a5258a67" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;enable&lt;/code&gt;&lt;/b&gt;: Whether operations should be dispatched synchronously. Valid values:</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;enable&lt;/code&gt; &lt;/b&gt;：操作を同期的にディスパッチする必要があるかどうか。有効な値：</target>
        </trans-unit>
        <trans-unit id="4190be6c748cc670dd3ec1ce3706284eecc4519d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;enabled&lt;/code&gt;&lt;/b&gt;: Whether to enable JIT compilation.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;enabled&lt;/code&gt; &lt;/b&gt;：JITコンパイルを有効にするかどうか。</target>
        </trans-unit>
        <trans-unit id="a8c8826bd69c1db63a723b1987cf95d455719662" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;enabled&lt;/code&gt;&lt;/b&gt;: Whether to enable soft placement.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;enabled&lt;/code&gt; &lt;/b&gt;：ソフト配置を有効にするかどうか。</target>
        </trans-unit>
        <trans-unit id="6a77db0859fb6c77279cd53b266d46500acac5da" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;enabled&lt;/code&gt;&lt;/b&gt;: Whether to enabled device placement logging.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;enabled&lt;/code&gt; &lt;/b&gt;：デバイス配置ログを有効にするかどうか。</target>
        </trans-unit>
        <trans-unit id="7e858c789cca4cdd29e837a28d6b472cbd239e02" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;encoding&lt;/code&gt;&lt;/b&gt;: A string indicating the charset for decoding unicode.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;encoding&lt;/code&gt; &lt;/b&gt;：Unicodeをデコードするための文字セットを示す文字列。</target>
        </trans-unit>
        <trans-unit id="670aed7b1f9bba2edbc226d0f73dd481e0236867" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;encoding&lt;/code&gt;&lt;/b&gt;: A string indicating the charset for encoding unicode.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;encoding&lt;/code&gt; &lt;/b&gt;：Unicodeをエンコードするための文字セットを示す文字列。</target>
        </trans-unit>
        <trans-unit id="b4d42595acb13f5e91b7c36839068139fddf6269" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;encoding&lt;/code&gt;&lt;/b&gt;: An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;encoding&lt;/code&gt; &lt;/b&gt;：オプションの &lt;code&gt;string&lt;/code&gt; 。デフォルトは &lt;code&gt;&quot;&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="87b84cfd0b3447c703631a23df504dc0070d0e7f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;encoding&lt;/code&gt;&lt;/b&gt;: Encoding to use when writing string content. Only used if &lt;code&gt;content&lt;/code&gt; is text.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;encoding&lt;/code&gt; &lt;/b&gt;：文字列コンテンツを書き込むときに使用するエンコーディング。 &lt;code&gt;content&lt;/code&gt; がテキストの場合にのみ使用されます。</target>
        </trans-unit>
        <trans-unit id="2599f3e752cc7109a1082617806471810926a68e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;encoding&lt;/code&gt;&lt;/b&gt;: Optional constant &lt;code&gt;str&lt;/code&gt; for the desired encoding. Only &quot;wav&quot; is currently supported, but this is not guaranteed to remain the default, so if you want &quot;wav&quot; in particular, set this explicitly.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;encoding&lt;/code&gt; &lt;/b&gt;：必要な&lt;b&gt;エンコーディングの&lt;/b&gt;オプションの定数 &lt;code&gt;str&lt;/code&gt; 。現在サポートされているのは「wav」だけですが、これがデフォルトのままであることは保証されていないため、特に「wav」が必要な場合は、これを明示的に設定してください。</target>
        </trans-unit>
        <trans-unit id="cd7b75dd63f24ca47568cc76a638c68bd0be4b4c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;encoding&lt;/code&gt;&lt;/b&gt;: The type of encoding for the file. Defaults to none.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;encoding&lt;/code&gt; &lt;/b&gt;：ファイルのエンコーディングのタイプ。デフォルトはnoneです。</target>
        </trans-unit>
        <trans-unit id="7d0d7c94d89ac952287102f4029f9260b006df14" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;end&lt;/code&gt;&lt;/b&gt;: An &lt;code&gt;int32&lt;/code&gt; or &lt;code&gt;int64&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;end&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;int32&lt;/code&gt; または &lt;code&gt;int64&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5bb555674c9cc562b614d6daf65f660292ca9ef4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;end&lt;/code&gt;&lt;/b&gt;: End character that is appended at the end the printed string. Defaults to the newline character.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;end&lt;/code&gt; &lt;/b&gt;：印刷された文字列の最後に追加される終了文字。デフォルトは改行文字です。</target>
        </trans-unit>
        <trans-unit id="896e985d2b5cb4646e544db2ded4d59f47eb5e7e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;end&lt;/code&gt;&lt;/b&gt;: int, end of desired slice of the specified dataset</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;end&lt;/code&gt; &lt;/b&gt;：int、指定されたデータセットの目的のスライスの終わり</target>
        </trans-unit>
        <trans-unit id="9572521c8581b55fb3fca5a2255a18c0a830e784" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;end_learning_rate&lt;/code&gt;&lt;/b&gt;: A scalar &lt;code&gt;float32&lt;/code&gt; or &lt;code&gt;float64&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; or a Python number. The minimal end learning rate.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;end_learning_rate&lt;/code&gt; &lt;/b&gt;：スカラーの &lt;code&gt;float32&lt;/code&gt; または &lt;code&gt;float64&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; またはPythonの数値。最小最終学習率。</target>
        </trans-unit>
        <trans-unit id="1161c53fec47fe80c4415e0cbe1aa7fda0ddf840" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;end_mask&lt;/code&gt;&lt;/b&gt;: An &lt;code&gt;int32&lt;/code&gt; mask.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;end_mask&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;int32&lt;/code&gt; マスク。</target>
        </trans-unit>
        <trans-unit id="b374a7ebd2ba5ad867191d66d0af5abb08acc37d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;enqueue_many&lt;/code&gt;&lt;/b&gt;: Whether each tensor in &lt;code&gt;tensor_list&lt;/code&gt; is a single example.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;enqueue_many&lt;/code&gt; &lt;/b&gt;：各テンソルかどうか &lt;code&gt;tensor_list&lt;/code&gt; は、単一の一例です。</target>
        </trans-unit>
        <trans-unit id="77b6ed941563309a805a26a65365f6bb51284f96" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;enqueue_many&lt;/code&gt;&lt;/b&gt;: Whether each tensor in &lt;code&gt;tensor_list_list&lt;/code&gt; is a single example.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;enqueue_many&lt;/code&gt; &lt;/b&gt;：各テンソルかどうか &lt;code&gt;tensor_list_list&lt;/code&gt; は、単一の一例です。</target>
        </trans-unit>
        <trans-unit id="2e6f15ade1046d40a99143fc45a217812d70d7a1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;enqueue_many&lt;/code&gt;&lt;/b&gt;: Whether each tensor in &lt;code&gt;tensors&lt;/code&gt; is a single example.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;enqueue_many&lt;/code&gt; &lt;/b&gt;：各テンソルかどうか &lt;code&gt;tensors&lt;/code&gt; 、単一の一例です。</target>
        </trans-unit>
        <trans-unit id="17d41d9293b46a1fff325c8ec5400949afcb43ba" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;enqueue_ops&lt;/code&gt;&lt;/b&gt;: List of enqueue ops to run in threads later.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;enqueue_ops&lt;/code&gt; &lt;/b&gt;：後でスレッドで実行するエンキュー&lt;b&gt;操作の&lt;/b&gt;リスト。</target>
        </trans-unit>
        <trans-unit id="e20c50ae00c8f031e1efca599bce33c84da09757" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ensure_minimum_range&lt;/code&gt;&lt;/b&gt;: An optional &lt;code&gt;float&lt;/code&gt;. Defaults to &lt;code&gt;0.01&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;ensure_minimum_range&lt;/code&gt; &lt;/b&gt;：オプションの &lt;code&gt;float&lt;/code&gt; 。デフォルトは &lt;code&gt;0.01&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="5456e49d1cb339451c120195c9151d8ccd4e44ae" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;entity&lt;/code&gt;&lt;/b&gt;: Python callable or class to convert.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;entity&lt;/code&gt; &lt;/b&gt;：変換するPython呼び出し可能またはクラス。</target>
        </trans-unit>
        <trans-unit id="68cc257fc7be5cf39dbead4cc6c6035229dfabb7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;entity&lt;/code&gt;&lt;/b&gt;: Python callable or class.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;entity&lt;/code&gt; &lt;/b&gt;：Python呼び出し可能またはクラス。</target>
        </trans-unit>
        <trans-unit id="e0279a9c1d8c3bece03e2eeab0551179f71046ff" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;enum_class&lt;/code&gt;&lt;/b&gt;: class, the Enum class with all possible flag values.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;enum_class&lt;/code&gt; &lt;/b&gt;：可能なすべてのフラグ値を持つEnumクラス。</target>
        </trans-unit>
        <trans-unit id="a143c4a3d0888d655e664a9fcd3f1ad1df92f681" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;enum_class&lt;/code&gt;&lt;/b&gt;: class, the Enum class with all the possible values for the flag.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;enum_class&lt;/code&gt; &lt;/b&gt;：クラス、フラグのすべての可能な値を持つEnumクラス。</target>
        </trans-unit>
        <trans-unit id="fd3c1af30dd82931076973f072193877c62c2835" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;enum_class&lt;/code&gt;&lt;/b&gt;: class, the Enum class with all the possible values for the flag. help: str, the help message.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;enum_class&lt;/code&gt; &lt;/b&gt;：クラス、フラグのすべての可能な値を持つEnumクラス。help：str、ヘルプメッセージ。</target>
        </trans-unit>
        <trans-unit id="b94cf76285f3e417f77cd38fb1a69e3de1b5bcd4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;enum_values&lt;/code&gt;&lt;/b&gt;: [str], a non-empty list of string values in the enum.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;enum_values&lt;/code&gt; &lt;/b&gt;：[str]、enum内の文字列値の空でないリスト。</target>
        </trans-unit>
        <trans-unit id="0283b7add41097c04b655d24f1a2ffe3fb8817e4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;enum_values&lt;/code&gt;&lt;/b&gt;: [str], a non-empty list of strings with the possible values for the flag.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;enum_values&lt;/code&gt; &lt;/b&gt;：[str]、フラグに可能な値を含む空でない文字列のリスト。</target>
        </trans-unit>
        <trans-unit id="e5516d81fe12ec745d5ce82f01d86d651c96d147" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;env&lt;/code&gt;&lt;/b&gt;: Dictionary of environment variable settings. If None, no environment variables will be set for the child process. This is to make tests more hermetic. NOTE: this behavior is different than the standard subprocess module.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;env&lt;/code&gt; &lt;/b&gt;：環境変数設定の辞書。Noneの場合、子プロセスに環境変数は設定されません。これはテストをより気密にするためです。注：この動作は、標準のサブプロセスモジュールとは異なります。</target>
        </trans-unit>
        <trans-unit id="c71209f3892cc4b9d45d0d80ca14f98b41452947" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;environment&lt;/code&gt;&lt;/b&gt;: (String, optional) Overrides the environment TensorFlow operates in.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;environment&lt;/code&gt; &lt;/b&gt;：（文字列、オプション）TensorFlowが動作する環境をオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="3cc31952edced405ba1a9a287e150df9e1a64197" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;epoch&lt;/code&gt;&lt;/b&gt;: integer, index of epoch.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;epoch&lt;/code&gt; &lt;/b&gt;：整数、エポックのインデックス。</target>
        </trans-unit>
        <trans-unit id="1202c39bd5a005b0db2f3bba08e26d00cfe4cf9e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;epochs&lt;/code&gt;&lt;/b&gt;: Integer. Number of epochs to train the model. An epoch is an iteration over the entire &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; data provided. Note that in conjunction with &lt;code&gt;initial_epoch&lt;/code&gt;, &lt;code&gt;epochs&lt;/code&gt; is to be understood as &quot;final epoch&quot;. The model is not trained for a number of iterations given by &lt;code&gt;epochs&lt;/code&gt;, but merely until the epoch of index &lt;code&gt;epochs&lt;/code&gt; is reached.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;epochs&lt;/code&gt; &lt;/b&gt;：整数。モデルをトレーニングするエポックの数。エポックは、提供された &lt;code&gt;x&lt;/code&gt; および &lt;code&gt;y&lt;/code&gt; データ全体の反復です。 &lt;code&gt;initial_epoch&lt;/code&gt; と組み合わせて、 &lt;code&gt;epochs&lt;/code&gt; は「最終エポック」として理解されることに注意してください。モデルは、 &lt;code&gt;epochs&lt;/code&gt; で指定された反復回数ではなく、インデックス &lt;code&gt;epochs&lt;/code&gt; に達するまでトレーニングされません。</target>
        </trans-unit>
        <trans-unit id="397625181bdd5ab0aee2da1a962af1064943be67" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;epsilon&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; or a floating point value. A constant epsilon used to better conditioning the grad update.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;epsilon&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; または浮動小数点値。卒業生の更新をよりよく調整するために使用される定数イプシロン。</target>
        </trans-unit>
        <trans-unit id="05b304b4ecf304127ebb7410768ec5b6f0d38783" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;epsilon&lt;/code&gt;&lt;/b&gt;: A lower bound value for the norm. Will use &lt;code&gt;sqrt(epsilon)&lt;/code&gt; as the divisor if &lt;code&gt;norm &amp;lt; sqrt(epsilon)&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;epsilon&lt;/code&gt; &lt;/b&gt;：ノルムの下限値。 &lt;code&gt;norm &amp;lt; sqrt(epsilon)&lt;/code&gt; 場合、除数として &lt;code&gt;sqrt(epsilon)&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="55edcd586ebddc52b50a1a986392f392c5673555" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;epsilon&lt;/code&gt;&lt;/b&gt;: A small constant for numerical stability.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;epsilon&lt;/code&gt; &lt;/b&gt;：数値安定性のための小さな定数。</target>
        </trans-unit>
        <trans-unit id="96d33135f94eb44b6ca81ee0cf846df77bc38a26" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;epsilon&lt;/code&gt;&lt;/b&gt;: A small constant for numerical stability. This epsilon is &quot;epsilon hat&quot; in the Kingma and Ba paper (in the formula just before Section 2.1), not the epsilon in Algorithm 1 of the paper.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;epsilon&lt;/code&gt; &lt;/b&gt;：数値安定性のための小さな定数。このイプシロンは、Kingma and Ba論文（セクション2.1の直前の式）では「イプシロンハット」であり、論文のアルゴリズム1のイプシロンではありません。</target>
        </trans-unit>
        <trans-unit id="5a56b8a878983b93926b8474978759c95d16dab9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;epsilon&lt;/code&gt;&lt;/b&gt;: A small float number added to the variance of x.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;epsilon&lt;/code&gt; &lt;/b&gt;：xの分散に追加される小さな浮動小数点数。</target>
        </trans-unit>
        <trans-unit id="12b794de15cd336e0fc9a6de70dbbfe461fcd5c2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;epsilon&lt;/code&gt;&lt;/b&gt;: A small floating point value to avoid zero denominator.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;epsilon&lt;/code&gt; &lt;/b&gt;：ゼロの分母を避けるための小さな浮動小数点値。</target>
        </trans-unit>
        <trans-unit id="4629a6cf0d27b8d46d1b2f5b59c6d6cc7bcb3c44" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;epsilon&lt;/code&gt;&lt;/b&gt;: A small increment to add to avoid taking a log of zero.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;epsilon&lt;/code&gt; &lt;/b&gt;：ゼロの対数をとらないようにするために追加する小さな増分。</target>
        </trans-unit>
        <trans-unit id="d9285bdb868333f2e05f6e64a03b63e77207beaf" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;epsilon&lt;/code&gt;&lt;/b&gt;: Fuzz factor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;epsilon&lt;/code&gt; &lt;/b&gt;：ファズファクター。</target>
        </trans-unit>
        <trans-unit id="d628f747620eb9e8b7ed6fc4dccd2d0a4f3285c3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;epsilon&lt;/code&gt;&lt;/b&gt;: Small float added to variance to avoid dividing by zero.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;epsilon&lt;/code&gt; &lt;/b&gt;：ゼロによる除算を回避するために分散に小さな浮動小数点が追加されました。</target>
        </trans-unit>
        <trans-unit id="1316299fcc0683ff705c37fd0d93118754de4f20" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;epsilon&lt;/code&gt;&lt;/b&gt;: Small value to avoid zero denominator.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;epsilon&lt;/code&gt; &lt;/b&gt;：ゼロの分母を避けるために小さい値。</target>
        </trans-unit>
        <trans-unit id="c6f62b2154b0698ecd07479ac2c65a991b7c5ced" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;equation&lt;/code&gt;&lt;/b&gt;: a &lt;code&gt;str&lt;/code&gt; describing the contraction, in the same format as &lt;code&gt;numpy.einsum&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;equation&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;numpy.einsum&lt;/code&gt; と同じ形式で収縮を説明する &lt;code&gt;str&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7852e8d38c4e1c526cbb395c796c2c9328d4070c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;err&lt;/code&gt;&lt;/b&gt;: A float value.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;err&lt;/code&gt; &lt;/b&gt;：浮動小数点値。</target>
        </trans-unit>
        <trans-unit id="fd23db137c5d75d132445e1e169a980a6534f6e1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;err&lt;/code&gt;&lt;/b&gt;: a float value.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;err&lt;/code&gt; &lt;/b&gt;：浮動小数点値。</target>
        </trans-unit>
        <trans-unit id="3238dc21bceb0e8b5cab8051bb791e879a748ffd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;err&lt;/code&gt;&lt;/b&gt;: a float. The maximum absolute difference allowed.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;err&lt;/code&gt; &lt;/b&gt;：浮動小数点数。許容される最大絶対差。</target>
        </trans-unit>
        <trans-unit id="e4152e63129223d12a851a14402d394ee6701035" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;error_code&lt;/code&gt;&lt;/b&gt;: The &lt;code&gt;error_codes_pb2.Code&lt;/code&gt; describing the error.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;error_code&lt;/code&gt; &lt;/b&gt;：エラーを説明する &lt;code&gt;error_codes_pb2.Code&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a1f25942ad99bf44bfaa50f04d6ef7b692b35e7a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;errors&lt;/code&gt;&lt;/b&gt;: An optional &lt;code&gt;string&lt;/code&gt; from: &lt;code&gt;&quot;strict&quot;, &quot;replace&quot;, &quot;ignore&quot;&lt;/code&gt;. Defaults to &lt;code&gt;&quot;replace&quot;&lt;/code&gt;. Error handling policy when there is invalid formatting found in the input. The value of 'strict' will cause the operation to produce a InvalidArgument error on any invalid input formatting. A value of 'replace' (the default) will cause the operation to replace any invalid formatting in the input with the &lt;code&gt;replacement_char&lt;/code&gt; codepoint. A value of 'ignore' will cause the operation to skip any invalid formatting in the input and produce no corresponding output character.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;errors&lt;/code&gt; &lt;/b&gt;：オプションの &lt;code&gt;string&lt;/code&gt; ： &lt;code&gt;&quot;strict&quot;, &quot;replace&quot;, &quot;ignore&quot;&lt;/code&gt; 。デフォルトは &lt;code&gt;&quot;replace&quot;&lt;/code&gt; です。入力に無効なフォーマットがある場合のエラー処理ポリシー。'strict'の値を指定すると、無効な入力フォーマットで操作がInvalidArgumentエラーを生成します。'replace'（デフォルト）の値は、操作で入力内の無効なフォーマットを &lt;code&gt;replacement_char&lt;/code&gt; コードポイントに置き換えます。'ignore'の値は、入力の無効なフォーマットをスキップし、対応する出力文字を生成しません。</target>
        </trans-unit>
        <trans-unit id="ee2169f5baa07deb9babc3150727aa752b24f228" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;errors&lt;/code&gt;&lt;/b&gt;: How to handle text to bytes encoding errors. Only used if &lt;code&gt;content&lt;/code&gt; is text.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;errors&lt;/code&gt; &lt;/b&gt;：テキストからバイトへのエンコーディングエラーの処理方法。 &lt;code&gt;content&lt;/code&gt; がテキストの場合にのみ使用されます。</target>
        </trans-unit>
        <trans-unit id="5fbfaef0dd5c5d4c57ece497379e582855de2242" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;errors&lt;/code&gt;&lt;/b&gt;: Specifies the response when an input string can't be converted using the indicated encoding. One of:</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;errors&lt;/code&gt; &lt;/b&gt;：指定されたエンコーディングを使用して入力文字列を変換できない場合の応答を指定します。の一つ：</target>
        </trans-unit>
        <trans-unit id="abed6f311c3164e2f17648b608e5da78e346cdb0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;errors&lt;/code&gt;&lt;/b&gt;: Specifies the response when an invalid codepoint is encountered (optional). One of: * &lt;code&gt;'replace'&lt;/code&gt;: Replace invalid codepoint with the &lt;code&gt;replacement_char&lt;/code&gt;. (default) * &lt;code&gt;'ignore'&lt;/code&gt;: Skip invalid codepoints. * &lt;code&gt;'strict'&lt;/code&gt;: Raise an exception for any invalid codepoint.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;errors&lt;/code&gt; &lt;/b&gt;：無効なコードポイントが検出されたときの応答を指定します（オプション）。* &lt;code&gt;'replace'&lt;/code&gt; ：無効なコードポイントを &lt;code&gt;replacement_char&lt;/code&gt; で置き換えます。（デフォルト）* &lt;code&gt;'ignore'&lt;/code&gt; ：無効なコードポイントをスキップします。* &lt;code&gt;'strict'&lt;/code&gt; ：無効なコードポイントの例外を発生させます。</target>
        </trans-unit>
        <trans-unit id="2c8113ef387370df1b7598543b48b07ddaae2a79" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;errors_impl.InvalidArgumentError&lt;/code&gt;&lt;/b&gt;: If the shapes of &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; do not match in any dimension other than the last dimension.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;errors_impl.InvalidArgumentError&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;a&lt;/code&gt; と &lt;code&gt;b&lt;/code&gt; の形状が最後の次元以外の次元で一致しない場合。</target>
        </trans-unit>
        <trans-unit id="052f3b25eb9312492537f280a3035b092c7aa761" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;estimator&lt;/code&gt;&lt;/b&gt;: A &lt;a href=&quot;../estimator&quot;&gt;&lt;code&gt;tf.estimator.Estimator&lt;/code&gt;&lt;/a&gt; instance to call evaluate.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;estimator&lt;/code&gt; &lt;/b&gt;：&lt;a href=&quot;../estimator&quot;&gt; &lt;code&gt;tf.estimator.Estimator&lt;/code&gt; &lt;/a&gt;を呼び出す tf.estimator.Estimatorインスタンス。</target>
        </trans-unit>
        <trans-unit id="b8c1537c715470e106e9df611192b8c9df8980c0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;estimator&lt;/code&gt;&lt;/b&gt;: A &lt;a href=&quot;../estimator&quot;&gt;&lt;code&gt;tf.estimator.Estimator&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;estimator&lt;/code&gt; &lt;/b&gt;：&lt;a href=&quot;../estimator&quot;&gt; &lt;code&gt;tf.estimator.Estimator&lt;/code&gt; &lt;/a&gt;インスタンス。</target>
        </trans-unit>
        <trans-unit id="9470c5a36a9c9a4c061722312041477eca2acb5d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;estimator&lt;/code&gt;&lt;/b&gt;: A &lt;a href=&quot;estimator&quot;&gt;&lt;code&gt;tf.estimator.Estimator&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;estimator&lt;/code&gt; &lt;/b&gt;：&lt;a href=&quot;estimator&quot;&gt; &lt;code&gt;tf.estimator.Estimator&lt;/code&gt; &lt;/a&gt;オブジェクト。</target>
        </trans-unit>
        <trans-unit id="9a17fa19c1fe07dc162bf6db66b3f923fe175e87" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;estimator&lt;/code&gt;&lt;/b&gt;: An &lt;code&gt;Estimator&lt;/code&gt; instance to train and evaluate.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;estimator&lt;/code&gt; &lt;/b&gt;：トレーニングおよび評価する &lt;code&gt;Estimator&lt;/code&gt; インスタンス。</target>
        </trans-unit>
        <trans-unit id="2cb2191ca74bef2c3831295eebdfa37183f38ede" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;estimator&lt;/code&gt;&lt;/b&gt;: Estimator.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;estimator&lt;/code&gt; &lt;/b&gt;：Estimator。</target>
        </trans-unit>
        <trans-unit id="d451fdf82f817b4ff6a9d09f3c8f3551910dfdc7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;estimator&lt;/code&gt;&lt;/b&gt;: the &lt;code&gt;Estimator&lt;/code&gt; to export.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;estimator&lt;/code&gt; &lt;/b&gt;：エクスポートする &lt;code&gt;Estimator&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b1b352dc706a9d0b6e205ddcad6f151713782100" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;eval_batch_size&lt;/code&gt;&lt;/b&gt;: An int representing evaluation batch size. Must be divisible by total number of replicas.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;eval_batch_size&lt;/code&gt; &lt;/b&gt;：評価バッチサイズを表すint。レプリカの総数で割り切れる必要があります。</target>
        </trans-unit>
        <trans-unit id="47a2d71bffc4bb26ebadcee8a8608efad4367041" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;eval_dir&lt;/code&gt;&lt;/b&gt;: If set, directory containing summary files with eval metrics. By default, &lt;code&gt;estimator.eval_dir()&lt;/code&gt; will be used.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;eval_dir&lt;/code&gt; &lt;/b&gt;：設定されている場合、evalメトリックを含むサマリーファイルを含むディレクトリ。デフォルトでは、 &lt;code&gt;estimator.eval_dir()&lt;/code&gt; が使用されます。</target>
        </trans-unit>
        <trans-unit id="3ccf0fc18ed726ffb9d09ba210e90002e1bdde39" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;eval_distribute&lt;/code&gt;&lt;/b&gt;: An optional instance of &lt;a href=&quot;../distribute/strategy&quot;&gt;&lt;code&gt;tf.distribute.Strategy&lt;/code&gt;&lt;/a&gt;. If specified, then Estimator will distribute the user's model during evaluation, according to the policy specified by that strategy. Setting &lt;code&gt;experimental_distribute.eval_distribute&lt;/code&gt; is preferred.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;eval_distribute&lt;/code&gt; &lt;/b&gt;：のオプションのインスタンス&lt;a href=&quot;../distribute/strategy&quot;&gt; &lt;code&gt;tf.distribute.Strategy&lt;/code&gt; &lt;/a&gt;。指定した場合、Estimatorは、その戦略で指定されたポリシーに従って、評価中にユーザーのモデルを配布します。 &lt;code&gt;experimental_distribute.eval_distribute&lt;/code&gt; を設定することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="ca8c3bbdd406d86cc09db8f46c99675fa707025a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;eval_metric_ops&lt;/code&gt;&lt;/b&gt;: Dict of metric results keyed by name. The values of the dict can be one of the following: (1) instance of &lt;code&gt;Metric&lt;/code&gt; class. (2) Results of calling a metric function, namely a &lt;code&gt;(metric_tensor, update_op)&lt;/code&gt; tuple. &lt;code&gt;metric_tensor&lt;/code&gt; should be evaluated without any impact on state (typically is a pure computation results based on variables.). For example, it should not trigger the &lt;code&gt;update_op&lt;/code&gt; or requires any input fetching.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;eval_metric_ops&lt;/code&gt; &lt;/b&gt;：名前でキー付けされたメトリック結果の辞書。dictの値は、次のいずれかです。（1） &lt;code&gt;Metric&lt;/code&gt; クラスのインスタンス。（2）メトリック関数、つまり &lt;code&gt;(metric_tensor, update_op)&lt;/code&gt; タプルを呼び出した結果。 &lt;code&gt;metric_tensor&lt;/code&gt; は、状態に影響を与えずに評価する必要があります（通常、変数に基づく純粋な計算結果です）。たとえば、 &lt;code&gt;update_op&lt;/code&gt; をトリガーしたり、入力をフェッチしたりする必要はありません。</target>
        </trans-unit>
        <trans-unit id="ffd3487a0fe1ff4e8bc55f4f88a4dcced7093ce8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;eval_metrics&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;dict&lt;/code&gt; of metrics to be updated.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;eval_metrics&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;dict&lt;/code&gt; 更新されるメトリックの。</target>
        </trans-unit>
        <trans-unit id="05d1348ed57e59ba242f47aef130f236a03bb40e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;eval_on_tpu&lt;/code&gt;&lt;/b&gt;: If False, evaluation runs on CPU or GPU. In this case, the model_fn must return &lt;code&gt;EstimatorSpec&lt;/code&gt; when called with &lt;code&gt;mode&lt;/code&gt; as &lt;code&gt;EVAL&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;eval_on_tpu&lt;/code&gt; &lt;/b&gt;：Falseの場合、評価はCPUまたはGPUで実行されます。この場合、model_fnは、 &lt;code&gt;mode&lt;/code&gt; を &lt;code&gt;EVAL&lt;/code&gt; として呼び出したときに &lt;code&gt;EstimatorSpec&lt;/code&gt; を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="84fb2bdf68289fd17b57bd71294504cd467b4599" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;eval_result&lt;/code&gt;&lt;/b&gt;: The output of &lt;a href=&quot;../compat/v1/estimator/estimator#evaluate&quot;&gt;&lt;code&gt;Estimator.evaluate&lt;/code&gt;&lt;/a&gt; on this checkpoint.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;eval_result&lt;/code&gt; &lt;/b&gt;：このチェックポイントでの&lt;a href=&quot;../compat/v1/estimator/estimator#evaluate&quot;&gt; &lt;code&gt;Estimator.evaluate&lt;/code&gt; &lt;/a&gt;の出力。</target>
        </trans-unit>
        <trans-unit id="559157d736e997350334e6f3d004c09c66f4b790" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;eval_spec&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;EvalSpec&lt;/code&gt; instance to specify the evaluation and export specification.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;eval_spec&lt;/code&gt; &lt;/b&gt;：評価とエクスポートの仕様を指定する &lt;code&gt;EvalSpec&lt;/code&gt; インスタンス。</target>
        </trans-unit>
        <trans-unit id="b770dc6cb199bc1bd5b4ecb643020237beea8800" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;eval_training_input_configuration&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;SLICED&lt;/code&gt;, &lt;code&gt;input_fn&lt;/code&gt; is only invoked once on host 0 and the tensors are broadcasted to all other replicas. Unlike per_host_input_for_training=BROADCAST, each replica will only get a slice of the data instead of a whole copy. If &lt;code&gt;PER_HOST_V1&lt;/code&gt;, the behaviour is determined by per_host_input_for_training.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;eval_training_input_configuration&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;SLICED&lt;/code&gt; の場合、 &lt;code&gt;input_fn&lt;/code&gt; はホスト0で1回だけ呼び出され、テンソルは他のすべてのレプリカにブロードキャストされます。per_host_input_for_training = BROADCASTとは異なり、各レプリカはコピー全体ではなく、データのスライスのみを取得します。場合 &lt;code&gt;PER_HOST_V1&lt;/code&gt; 、動作がper_host_input_for_trainingによって決定されます。</target>
        </trans-unit>
        <trans-unit id="aa42a121c40929034c67335d64ef933f79d67267" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;evaluation_hooks&lt;/code&gt;&lt;/b&gt;: Iterable of &lt;code&gt;tf.train.SessionRunHook&lt;/code&gt; objects to run during evaluation.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;evaluation_hooks&lt;/code&gt; &lt;/b&gt;Evaluation_hooks：&lt;b&gt;評価&lt;/b&gt;中に実行する &lt;code&gt;tf.train.SessionRunHook&lt;/code&gt; オブジェクトの反復可能オブジェクト。</target>
        </trans-unit>
        <trans-unit id="1e3908e2f436daaef2541d52f208121797d7320d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;evaluation_master&lt;/code&gt;&lt;/b&gt;: a string. The address of the master to use for eval. Defaults to master if not set.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;evaluation_master&lt;/code&gt; &lt;/b&gt;：文字列。evalに使用するマスターのアドレス。設定されていない場合、デフォルトでマスターになります。</target>
        </trans-unit>
        <trans-unit id="f47a9f95a697ea4d1dd1495f9bd95817ef86375c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;event&lt;/code&gt;&lt;/b&gt;: An &lt;code&gt;Event&lt;/code&gt; protocol buffer.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;event&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Event&lt;/code&gt; プロトコルバッファ。</target>
        </trans-unit>
        <trans-unit id="48f3ea8efec03296995aea90c0d2c24c9708abce" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;event_file_pattern&lt;/code&gt;&lt;/b&gt;: event file name pattern relative to model_dir. If None, however, the exporter would not be preemption-safe. To be preemption-safe, event_file_pattern must be specified.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;event_file_pattern&lt;/code&gt; &lt;/b&gt;：&lt;b&gt; model_dirに関連する&lt;/b&gt;イベントファイル名のパターン。ただし、なしの場合、輸出業者はプリエンプションセーフではありません。プリエンプションセーフであるためには、event_file_patternを指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="2bd04ca517f11e401f0fc7bfae00f6fd372b80aa" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;event_shape&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;event_shape&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5dffa3066a955129ab91204f4edbbf98288763d8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;event_shape&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;TensorShape&lt;/code&gt;, possibly unknown.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;event_shape&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;TensorShape&lt;/code&gt; 、おそらく不明。</target>
        </trans-unit>
        <trans-unit id="4f35515232aca69d2179181018595733b29aaf64" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;every_n_iter&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;int&lt;/code&gt;, print the values of &lt;code&gt;tensors&lt;/code&gt; once every N local steps taken on the current worker.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;every_n_iter&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;int&lt;/code&gt; 、現在のワーカーでN回のローカルステップが実行されるたびに &lt;code&gt;tensors&lt;/code&gt; の値を出力します。</target>
        </trans-unit>
        <trans-unit id="07fbffed5e8e5651e9b55a55b27872cb206beb19" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;every_n_iter&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;int&lt;/code&gt;, runs the evaluator once every N training iteration.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;every_n_iter&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;int&lt;/code&gt; 、N回のトレーニング反復ごとにエバリュエーターを実行します。</target>
        </trans-unit>
        <trans-unit id="fd208ed8e66846706db2a0af491f70ef2a60da55" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;every_n_secs&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;int&lt;/code&gt; or &lt;code&gt;float&lt;/code&gt;, print the values of &lt;code&gt;tensors&lt;/code&gt; once every N seconds. Exactly one of &lt;code&gt;every_n_iter&lt;/code&gt; and &lt;code&gt;every_n_secs&lt;/code&gt; should be provided.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;every_n_secs&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;int&lt;/code&gt; または &lt;code&gt;float&lt;/code&gt; 、N秒ごとに &lt;code&gt;tensors&lt;/code&gt; の値を出力します。 &lt;code&gt;every_n_iter&lt;/code&gt; および &lt;code&gt;every_n_secs&lt;/code&gt; のいずれか1つだけを指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="3ad292407dfd16d2025fa8268bb0cb2003a08081" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ex&lt;/code&gt;&lt;/b&gt;: Optional &lt;code&gt;Exception&lt;/code&gt;, or Python &lt;code&gt;exc_info&lt;/code&gt; tuple as returned by &lt;code&gt;sys.exc_info()&lt;/code&gt;. If this is the first call to &lt;code&gt;request_stop()&lt;/code&gt; the corresponding exception is recorded and re-raised from &lt;code&gt;join()&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;ex&lt;/code&gt; &lt;/b&gt;：オプションの &lt;code&gt;Exception&lt;/code&gt; 、または &lt;code&gt;sys.exc_info()&lt;/code&gt; によって返されるPython &lt;code&gt;exc_info&lt;/code&gt; タプル。これが &lt;code&gt;request_stop()&lt;/code&gt; の最初の呼び出しである場合、対応する例外が記録され、 &lt;code&gt;join()&lt;/code&gt; から再度発生します。</target>
        </trans-unit>
        <trans-unit id="3c314d2ec676e94573339eee319151cd30deda27" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;example_id_column&lt;/code&gt;&lt;/b&gt;: The column name containing the example ids.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;example_id_column&lt;/code&gt; &lt;/b&gt;：サンプルIDを含む列名。</target>
        </trans-unit>
        <trans-unit id="a1296b3ae278173091b6654036689a976f31f817" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;example_labels&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. a vector which contains the label/target associated with each example.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;example_labels&lt;/code&gt; &lt;/b&gt;：タイプ &lt;code&gt;float32&lt;/code&gt; の &lt;code&gt;Tensor&lt;/code&gt; 。各例に関連付けられたラベル/ターゲットを含むベクトル。</target>
        </trans-unit>
        <trans-unit id="85dfbdf30c2c9b56afc98c1baaf05a9f5da0f613" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;example_name&lt;/code&gt;&lt;/b&gt;: A scalar (0-D Tensor) of strings (optional), the name of the serialized proto.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;example_name&lt;/code&gt; &lt;/b&gt;：文字列のスカラー（0-D Tensor）（オプション）、シリアル化されたプロトの名前。</target>
        </trans-unit>
        <trans-unit id="80160b502ad04794386389b5dcdfbd62b968aff5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;example_names&lt;/code&gt;&lt;/b&gt;: (Optional) A scalar string Tensor, the associated name.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;example_names&lt;/code&gt; &lt;/b&gt;：（オプション）関連する名前のスカラー文字列Tensor。</target>
        </trans-unit>
        <trans-unit id="1f1c6d6d182342046f52153a8a7abe007d49a716" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;example_names&lt;/code&gt;&lt;/b&gt;: A vector (1-D Tensor) of strings (optional), the name of the serialized protos.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;example_names&lt;/code&gt; &lt;/b&gt;：文字列のベクトル（1-D Tensor）（オプション）、シリアライズされたプロトの名前。</target>
        </trans-unit>
        <trans-unit id="ad28285973a82836d97583cb62caaf63d72557e6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;example_names&lt;/code&gt;&lt;/b&gt;: A vector (1-D Tensor) of strings (optional), the names of the serialized protos in the batch.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;example_names&lt;/code&gt; &lt;/b&gt;：文字列のベクトル（1-D Tensor）（オプション）、バッチ内のシリアル化されたプロトの名前。</target>
        </trans-unit>
        <trans-unit id="707a178ba9e4d66407d33dea9b88636cd6e74d09" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;example_state_data&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. a list of vectors containing the example state data.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;example_state_data&lt;/code&gt; &lt;/b&gt;：タイプ &lt;code&gt;float32&lt;/code&gt; の &lt;code&gt;Tensor&lt;/code&gt; 。状態データの例を含むベクトルのリスト。</target>
        </trans-unit>
        <trans-unit id="036df8b0ef9ecf500e474c02f1917e294216ce16" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;example_weights&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. a vector which contains the weight associated with each example.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;example_weights&lt;/code&gt; &lt;/b&gt;：A &lt;code&gt;Tensor&lt;/code&gt; 型の &lt;code&gt;float32&lt;/code&gt; 。各例に関連付けられた重みを含むベクトル。</target>
        </trans-unit>
        <trans-unit id="0c5495c204897d084e685ace3058a089c9bfd71b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;examples&lt;/code&gt;&lt;/b&gt;: A string &lt;code&gt;Tensor&lt;/code&gt;, expected to accept serialized tf.Examples.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;examples&lt;/code&gt; &lt;/b&gt;：文字列 &lt;code&gt;Tensor&lt;/code&gt; 。シリアル化されたtf.Examplesを受け入れることが期待されています。</target>
        </trans-unit>
        <trans-unit id="8383cc376dd65e9129937606be52ead6b9cb440e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;exception_type&lt;/code&gt;&lt;/b&gt;: The expected type of exception that should be raised.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;exception_type&lt;/code&gt; &lt;/b&gt;：発生するはずの例外の予想されるタイプ。</target>
        </trans-unit>
        <trans-unit id="91b55e4f0ab3840a1d5c4866acfe3f7edd85c51d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;exclusive&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;True&lt;/code&gt;, perform exclusive cumprod.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;exclusive&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;True&lt;/code&gt; の場合、排他的なcumprodを実行します。</target>
        </trans-unit>
        <trans-unit id="28380716f29dc10b6269cb7887d5402d56227147" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;exclusive&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;True&lt;/code&gt;, perform exclusive cumsum.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;exclusive&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;True&lt;/code&gt; の場合、排他的な合計を実行します。</target>
        </trans-unit>
        <trans-unit id="745fc7fca6056e3e7aa971336914966a6c19952b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;exclusive&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;True&lt;/code&gt;, perform exclusive cumulative log-sum-exp.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;exclusive&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;True&lt;/code&gt; の場合、排他的な累積log-sum-expを実行します。</target>
        </trans-unit>
        <trans-unit id="db5f52f5ce0354700a30030dea8ae1018cd8e4a9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;exclusive&lt;/code&gt;&lt;/b&gt;: True iff at most one predicate is allowed to evaluate to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;exclusive&lt;/code&gt; &lt;/b&gt;：Trueの場合、最大1つの述部が &lt;code&gt;True&lt;/code&gt; に評価されます。</target>
        </trans-unit>
        <trans-unit id="26dbfe6aff765452c67be77a34085ea3d204a09c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;exclusive_resource_access&lt;/code&gt;&lt;/b&gt;: Whether the resources required by &lt;code&gt;fn&lt;/code&gt; should be exclusive to this &lt;code&gt;CriticalSection&lt;/code&gt;. Default: &lt;code&gt;True&lt;/code&gt;. You may want to set this to &lt;code&gt;False&lt;/code&gt; if you will be accessing a resource in read-only mode in two different CriticalSections.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;exclusive_resource_access&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;fn&lt;/code&gt; が必要とするリソースをこの &lt;code&gt;CriticalSection&lt;/code&gt; 専用にする必要があるかどうか。デフォルト： &lt;code&gt;True&lt;/code&gt; 。2つの異なるCriticalSectionsで読み取り専用モードでリソースにアクセスする場合は、これを &lt;code&gt;False&lt;/code&gt; に設定できます。</target>
        </trans-unit>
        <trans-unit id="6a55daf6a26ce9fee4b7346f0711c8a3e7d6977a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;execution_mode&lt;/code&gt;&lt;/b&gt;: (Optional.) Policy controlling how operations dispatched are actually executed. When set to None, an appropriate value will be picked automatically. The value picked may change between TensorFlow releases. Valid values:</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;execution_mode&lt;/code&gt; &lt;/b&gt;：（オプション）ディスパッチされた操作が実際に実行される方法を制御するポリシー。「なし」に設定すると、適切な値が自動的に選択されます。選択した値は、TensorFlowのリリース間で異なる場合があります。有効な値：</target>
        </trans-unit>
        <trans-unit id="a36c79ea411b5dc735a95236c25aac422300d80c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;executor_type&lt;/code&gt;&lt;/b&gt;: a string for the name of the executor to be used to execute functions defined by tf.contrib.eager.defun.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;executor_type&lt;/code&gt; &lt;/b&gt;：tf.contrib.eager.defunで定義された関数を実行するために使用されるエグゼキューターの名前の文字列。</target>
        </trans-unit>
        <trans-unit id="ecd5121a423c8b0b38d247d42cd88373c74a5b40" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;expand_animations&lt;/code&gt;&lt;/b&gt;: Controls the shape of the returned op's output. If &lt;code&gt;True&lt;/code&gt;, the returned op will produce a 3-D tensor for PNG, JPEG, and BMP files; and a 4-D tensor for all GIFs, whether animated or not. If, &lt;code&gt;False&lt;/code&gt;, the returned op will produce a 3-D tensor for all file types and will truncate animated GIFs to the first frame.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;expand_animations&lt;/code&gt; &lt;/b&gt;：返されるopの出力の形状を制御します。 &lt;code&gt;True&lt;/code&gt; 場合、返されたopはPNG、JPEG、およびBMPファイルのための3-Dテンソルを生成します。アニメーション化されているかどうかにかかわらず、すべてのGIFの4Dテンソル。もし &lt;code&gt;False&lt;/code&gt; の返される演算はすべてのファイルタイプの3Dテンソルを生成し、アニメーションGIFを最初のフレームに切り捨てます。</target>
        </trans-unit>
        <trans-unit id="d181ac22b198854a762f51e01b19cc378912326a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;expand_composites&lt;/code&gt;&lt;/b&gt;: If true, then composite tensors such as &lt;a href=&quot;../sparse/sparsetensor&quot;&gt;&lt;code&gt;tf.SparseTensor&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../raggedtensor&quot;&gt;&lt;code&gt;tf.RaggedTensor&lt;/code&gt;&lt;/a&gt; are expanded into their component tensors.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;expand_composites&lt;/code&gt; &lt;/b&gt;：trueの場合、&lt;a href=&quot;../sparse/sparsetensor&quot;&gt; &lt;code&gt;tf.SparseTensor&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;../raggedtensor&quot;&gt; &lt;code&gt;tf.RaggedTensor&lt;/code&gt; &lt;/a&gt;などの複合テンソルがそれらのコンポーネントテンソルに展開されます。</target>
        </trans-unit>
        <trans-unit id="358ad8d2f8bb5d0269351533e0fc3e5311e125f7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;expand_composites&lt;/code&gt;&lt;/b&gt;: If true, then composite tensors such as tf.SparseTensor and tf.RaggedTensor are expanded into their component tensors.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;expand_composites&lt;/code&gt; &lt;/b&gt;：trueの場合、tf.SparseTensorやtf.RaggedTensorなどの複合テンソルがそれらのコンポーネントテンソルに展開されます。</target>
        </trans-unit>
        <trans-unit id="c9efc928064942a46b048395a5e34248483adea5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;expand_nested&lt;/code&gt;&lt;/b&gt;: Whether to expand nested models into clusters.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;expand_nested&lt;/code&gt; &lt;/b&gt;：ネストされたモデルをクラスターに展開するかどうか。</target>
        </trans-unit>
        <trans-unit id="08db62d46863d2643eb542e34c11be45cff3ba60" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;expand_nested&lt;/code&gt;&lt;/b&gt;: whether to expand nested models into clusters.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;expand_nested&lt;/code&gt; &lt;/b&gt;：ネストされたモデルをクラスターに展開するかどうか。</target>
        </trans-unit>
        <trans-unit id="7fb24ab0c7c265e1ba6e720892c72758d126f777" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;expand_nonconcat_dim&lt;/code&gt;&lt;/b&gt;: Whether to allow the expansion in the non-concat dimensions. Defaulted to False.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;expand_nonconcat_dim&lt;/code&gt; &lt;/b&gt;：非連結ディメンションでの展開を許可するかどうか。デフォルトはFalseです。</target>
        </trans-unit>
        <trans-unit id="0e6cb6054a659adec49cef327d1afe805f975f36" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;expand_nonconcat_dims&lt;/code&gt;&lt;/b&gt;: alias for expand_nonconcat_dim</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;expand_nonconcat_dims&lt;/code&gt; &lt;/b&gt;：エイリアス</target>
        </trans-unit>
        <trans-unit id="c3e8809e9e7ece436d62e5bdc3fa3a4006009690" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;expected&lt;/code&gt;&lt;/b&gt;: The &lt;code&gt;GraphDef&lt;/code&gt; we expected.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;expected&lt;/code&gt; &lt;/b&gt;：&lt;b&gt;予想し&lt;/b&gt;た &lt;code&gt;GraphDef&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f559f5f4920bc2b79837da1fc5072f3ebf8cf92b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;expected_dtype&lt;/code&gt;&lt;/b&gt;: Expected data type.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;expected_dtype&lt;/code&gt; &lt;/b&gt;：予期されるデータ型。</target>
        </trans-unit>
        <trans-unit id="afb0d4f17919df5bb28295184d7c33d5d1082fe7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;expected_end&lt;/code&gt;&lt;/b&gt;: str</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;expected_end&lt;/code&gt; &lt;/b&gt;：str</target>
        </trans-unit>
        <trans-unit id="5c1e14e570e56656739dc0f7a130c51f8dc6785a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;expected_err_re_or_predicate&lt;/code&gt;&lt;/b&gt;: If this is callable, it should be a function of one argument that inspects the passed-in exception and returns True (success) or False (please fail the test). Otherwise, the error message is expected to match this regular expression partially.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;expected_err_re_or_predicate&lt;/code&gt; &lt;/b&gt;：これが呼び出し可能である場合、渡された例外を検査してTrue（成功）またはFalse（テストに失敗してください）を返す1つの引数の関数である必要があります。それ以外の場合、エラーメッセージは、この正規表現と部分的に一致すると予想されます。</target>
        </trans-unit>
        <trans-unit id="0c90b743c9db744b45b95e36f62aef5878c83ad7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;expected_exception&lt;/code&gt;&lt;/b&gt;: Exception class expected to be raised.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;expected_exception&lt;/code&gt; &lt;/b&gt;：発生する予定の例外クラス。</target>
        </trans-unit>
        <trans-unit id="0f64e8a1e374577864949fa30dd0d842aac559ab" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;expected_exception_message&lt;/code&gt;&lt;/b&gt;: String message expected in the raised exception. For a raise exception e, expected_exception_message must equal str(e).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;expected_exception_message&lt;/code&gt; &lt;/b&gt;：発生した例外で予期される文字列メッセージ。レイズ例外eの場合、expected_exception_messageはstr（e）と等しくなければなりません。</target>
        </trans-unit>
        <trans-unit id="333b44ad8336d0abbd8618158726a13a6b6fd58c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;expected_len&lt;/code&gt;&lt;/b&gt;: The expected length of the container.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;expected_len&lt;/code&gt; &lt;/b&gt;：コンテナの予想される長さ。</target>
        </trans-unit>
        <trans-unit id="779dd828570c71571c4ddf846809621cf77ab46b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;expected_message_maybe_ascii&lt;/code&gt;&lt;/b&gt;: proto message in original or ascii form.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;expected_message_maybe_ascii&lt;/code&gt; &lt;/b&gt;：元の形式またはASCII形式のプロトコルメッセージ。</target>
        </trans-unit>
        <trans-unit id="d6873ed4a77d49ba02c7af44617aa0e0e0f07ca1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;expected_regex&lt;/code&gt;&lt;/b&gt;: Regex (re pattern object or string) expected to be found in error message.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;expected_regex&lt;/code&gt; &lt;/b&gt;：エラーメッセージで見つかると予想される正規表現（パターンオブジェクトまたは文字列の再）。</target>
        </trans-unit>
        <trans-unit id="dd5ac46ee5c7f87a6a1f7ca42b9cba3c196ec6b2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;expected_seq&lt;/code&gt;&lt;/b&gt;: A sequence containing elements we are expecting.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;expected_seq&lt;/code&gt; &lt;/b&gt;：&lt;b&gt;予期される&lt;/b&gt;要素を含むシーケンス。</target>
        </trans-unit>
        <trans-unit id="d69d9d323e0ff0ef21f3ac3b3b179d2755a59075" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;expected_set&lt;/code&gt;&lt;/b&gt;: (&lt;code&gt;list&lt;/code&gt;, &lt;code&gt;tuple&lt;/code&gt; or &lt;code&gt;set&lt;/code&gt;) The closed set that the elements of the value of &lt;code&gt;target&lt;/code&gt; are expected to fall into.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;expected_set&lt;/code&gt; &lt;/b&gt;：（ &lt;code&gt;list&lt;/code&gt; 、 &lt;code&gt;tuple&lt;/code&gt; または &lt;code&gt;set&lt;/code&gt; ） &lt;code&gt;target&lt;/code&gt; の値の要素が入ると予想される閉じたセット。</target>
        </trans-unit>
        <trans-unit id="dcf91dfb2943627f561701e23b942adac0110a22" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;expected_shape&lt;/code&gt;&lt;/b&gt;: A TensorShape. If set, initial_value is expected to have this shape.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;expected_shape&lt;/code&gt; &lt;/b&gt;：TensorShape。設定されている場合、initial_valueはこの形状であることが期待されます。</target>
        </trans-unit>
        <trans-unit id="47d5a6c18211a19f990fb0b96d0920cd1972badb" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;expected_start&lt;/code&gt;&lt;/b&gt;: str</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;expected_start&lt;/code&gt; &lt;/b&gt;：str</target>
        </trans-unit>
        <trans-unit id="57a132768d673a92bc9cf978dba236e236d23b45" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;expected_warning&lt;/code&gt;&lt;/b&gt;: Warning class expected to be triggered.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;expected_warning&lt;/code&gt; &lt;/b&gt;：トリガーされると予想される警告クラス。</target>
        </trans-unit>
        <trans-unit id="4bd1ddd20cc8b78f8f9775217264c9d25ef47417" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;experimental_autograph_options&lt;/code&gt;&lt;/b&gt;: Optional tuple of &lt;code&gt;tf.autograph.experimental.Feature&lt;/code&gt; values.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;experimental_autograph_options&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;tf.autograph.experimental.Feature&lt;/code&gt; 値のオプションのタプル。</target>
        </trans-unit>
        <trans-unit id="b3b83d4d1f6ae6bdfabee811c53cefc2afd73d32" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;experimental_compile&lt;/code&gt;&lt;/b&gt;: If True, the function is always compiled by &lt;a href=&quot;https://www.tensorflow.org/xla&quot;&gt;XLA&lt;/a&gt;. XLA may be more efficient in some cases (e.g. TPU, XLA_GPU, dense tensor computations).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;experimental_compile&lt;/code&gt; &lt;/b&gt;：Trueの場合、関数は常に&lt;a href=&quot;https://www.tensorflow.org/xla&quot;&gt; XLA&lt;/a&gt;によってコンパイルされます。XLAは、場合によってはより効率的な場合があります（TPU、XLA_GPU、密なテンソル計算など）。</target>
        </trans-unit>
        <trans-unit id="8c400712b641e320ef5956e1ecab68150334c323" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;experimental_debug_info_func&lt;/code&gt;&lt;/b&gt;: An experimental function to retrieve the graph debug info for a set of nodes from the &lt;code&gt;graph_def&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;experimental_debug_info_func&lt;/code&gt; &lt;/b&gt;：ノードのセットのグラフデバッグ情報を &lt;code&gt;graph_def&lt;/code&gt; から取得する実験的な関数。</target>
        </trans-unit>
        <trans-unit id="e0b5a91622fd1b50a0626e83c3380d6d6c4fcfb2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;experimental_delegates&lt;/code&gt;&lt;/b&gt;: Experimental. Subject to change. List of &lt;a href=&quot;https://www.tensorflow.org/lite/performance/delegates&quot;&gt;TfLiteDelegate&lt;/a&gt; objects returned by lite.load_delegate().</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;experimental_delegates&lt;/code&gt; &lt;/b&gt;：実験的。変更の予定。lite.load_delegate（）によって返された&lt;a href=&quot;https://www.tensorflow.org/lite/performance/delegates&quot;&gt; TfLiteDelegate&lt;/a&gt;オブジェクトのリスト。</target>
        </trans-unit>
        <trans-unit id="15448903369024d9122fa201f798c873fec0769b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;experimental_distribute&lt;/code&gt;&lt;/b&gt;: An optional &lt;code&gt;tf.contrib.distribute.DistributeConfig&lt;/code&gt; object specifying DistributionStrategy-related configuration. The &lt;code&gt;train_distribute&lt;/code&gt; and &lt;code&gt;eval_distribute&lt;/code&gt; can be passed as parameters to &lt;code&gt;RunConfig&lt;/code&gt; or set in &lt;code&gt;experimental_distribute&lt;/code&gt; but not both.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;experimental_distribute&lt;/code&gt; &lt;/b&gt;：DistributionStrategy関連の設定を指定するオプションの &lt;code&gt;tf.contrib.distribute.DistributeConfig&lt;/code&gt; オブジェクト。 &lt;code&gt;train_distribute&lt;/code&gt; と &lt;code&gt;eval_distribute&lt;/code&gt; はにパラメータとして渡すことができる &lt;code&gt;RunConfig&lt;/code&gt; かに設定され &lt;code&gt;experimental_distribute&lt;/code&gt; 両方ではありません。</target>
        </trans-unit>
        <trans-unit id="2cd8dd7525500fb6fb4162541f089e6b8789cc8b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;experimental_gradient_multiplier_fn&lt;/code&gt;&lt;/b&gt;: (Optional) A Fn taking global step as input returning the current multiplier for all embedding gradients.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;experimental_gradient_multiplier_fn&lt;/code&gt; &lt;/b&gt;：（オプション）すべての埋め込み勾配の現在の乗数を返すグローバルステップを入力として取るFn。</target>
        </trans-unit>
        <trans-unit id="5bbfc26e28409b971d0e86c423e0fe51b8ad7895" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;experimental_host_call_every_n_steps&lt;/code&gt;&lt;/b&gt;: Within a training loop, this argument sets how often host calls are performed during training. Host calls will be evaluated every n steps within a training loop where n is the value of this argument.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;experimental_host_call_every_n_steps&lt;/code&gt; &lt;/b&gt;：トレーニングループ内で、この引数はトレーニング中にホストコールが実行される頻度を設定します。ホスト呼び出しは、トレーニングループ内のnステップごとに評価されます。ここで、nはこの引数の値です。</target>
        </trans-unit>
        <trans-unit id="e0189b6c58c9796882066a61f4d497bbf0a7a0da" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;experimental_implements&lt;/code&gt;&lt;/b&gt;: If provided, contains a name of a &quot;known&quot; function this implements. For example &quot;mycompany.my_recurrent_cell&quot;. This is stored as an attribute in inference function, which can then be detected when processing serialized function. See https://github.com/tensorflow/community/blob/master/rfcs/20190610-standardizing-composite_ops.md for details. For an example of utilizing this attribute see: https://github.com/tensorflow/tensorflow/blob/master/tensorflow/compiler/mlir/lite/transforms/prepare_composite_functions_tf.cc The code above automatically detects and substitutes function that implements &quot;embedded_matmul&quot; and allows TFLite to substitute its own implementations. For instance, a tensorflow user can use this attribute to mark that their function also implements &lt;code&gt;embedded_matmul&lt;/code&gt;`` (perhaps more efficiently!) by specifying it using this flag.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;experimental_implements&lt;/code&gt; &lt;/b&gt;：提供される場合、これが実装する「既知の」関数の名前が含まれます。たとえば、「mycompany.my_recurrent_cell」です。これは属性として推論関数に格納され、シリアル化された関数を処理するときに検出できます。詳細については、https：//github.com/tensorflow/community/blob/master/rfcs/20190610-standardizing-composite_ops.mdを参照してください。この属性の使用例については、https：//github.com/tensorflow/tensorflow/blob/master/tensorflow/compiler/mlir/lite/transforms/prepare_composite_functions_tf.ccを参照してください。上記のコードは、「embedded_matmul」を実装する関数を自動的に検出して置き換えます&quot;そして、TFLiteが独自の実装を代用できるようにします。例えば、 &lt;code&gt;embedded_matmul&lt;/code&gt; ``（おそらくより効率的！）このフラグを使用して指定します。</target>
        </trans-unit>
        <trans-unit id="bccd3aef681ac5150a2707dfd0498f97f5d8f19b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;experimental_max_worker_delay_secs&lt;/code&gt;&lt;/b&gt;: An optional integer specifying the maximum time a worker should wait before starting. By default, workers are started at staggered times, with each worker being delayed by up to 60 seconds. This is intended to reduce the risk of divergence, which can occur when many workers simultaneously update the weights of a randomly initialized model. Users who warm-start their models and train them for short durations (a few minutes or less) should consider reducing this default to improve training times.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;experimental_max_worker_delay_secs&lt;/code&gt; &lt;/b&gt;：ワーカーが開始する前に待機する最大時間を指定するオプションの整数。デフォルトでは、ワーカーは時間をずらして開始され、各ワーカーには最大60秒の遅延があります。これは、多くのワーカーがランダムに初期化されたモデルの重みを同時に更新するときに発生する可能性がある発散のリスクを減らすことを目的としています。モデルをウォームスタートして、短時間（数分以内）トレーニングするユーザーは、このデフォルトを減らしてトレーニング時間を改善することを検討してください。</target>
        </trans-unit>
        <trans-unit id="cfe2e1e3d97cbfffd99b22d1087f94cd78dc51d5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;experimental_mode&lt;/code&gt;&lt;/b&gt;: &lt;a href=&quot;../../../../estimator/modekeys&quot;&gt;&lt;code&gt;tf.estimator.ModeKeys&lt;/code&gt;&lt;/a&gt; value indicating with mode will be exported. Note that this feature is experimental.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;experimental_mode&lt;/code&gt; &lt;/b&gt;：モードで示す&lt;a href=&quot;../../../../estimator/modekeys&quot;&gt; &lt;code&gt;tf.estimator.ModeKeys&lt;/code&gt; &lt;/a&gt;値がエクスポートされます。この機能は実験的なものであることに注意してください。</target>
        </trans-unit>
        <trans-unit id="d5ff5e55e72c0b739e198d8b4100ecf33879e591" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;experimental_mode&lt;/code&gt;&lt;/b&gt;: &lt;a href=&quot;../../../estimator/modekeys&quot;&gt;&lt;code&gt;tf.estimator.ModeKeys&lt;/code&gt;&lt;/a&gt; value indicating with mode will be exported. Note that this feature is experimental.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;experimental_mode&lt;/code&gt; &lt;/b&gt;：モードで示す&lt;a href=&quot;../../../estimator/modekeys&quot;&gt; &lt;code&gt;tf.estimator.ModeKeys&lt;/code&gt; &lt;/a&gt;値がエクスポートされます。この機能は実験的なものであることに注意してください。</target>
        </trans-unit>
        <trans-unit id="973477ad5e9b4a07ca5f8baf7d352d74be6608f4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;experimental_mode&lt;/code&gt;&lt;/b&gt;: &lt;a href=&quot;../modekeys&quot;&gt;&lt;code&gt;tf.estimator.ModeKeys&lt;/code&gt;&lt;/a&gt; value indicating with mode will be exported. Note that this feature is experimental.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;experimental_mode&lt;/code&gt; &lt;/b&gt;：モードで示す&lt;a href=&quot;../modekeys&quot;&gt; &lt;code&gt;tf.estimator.ModeKeys&lt;/code&gt; &lt;/a&gt;値がエクスポートされます。この機能は実験的なものであることに注意してください。</target>
        </trans-unit>
        <trans-unit id="1fbeed0602347f6fc948b3ad603ce296e1a96031" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;experimental_mode&lt;/code&gt;&lt;/b&gt;: &lt;a href=&quot;modekeys&quot;&gt;&lt;code&gt;tf.estimator.ModeKeys&lt;/code&gt;&lt;/a&gt; value indicating with mode will be exported. Note that this feature is experimental.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;experimental_mode&lt;/code&gt; &lt;/b&gt;：モードで示す&lt;a href=&quot;modekeys&quot;&gt; &lt;code&gt;tf.estimator.ModeKeys&lt;/code&gt; &lt;/a&gt;値がエクスポートされます。この機能は実験的なものであることに注意してください。</target>
        </trans-unit>
        <trans-unit id="630bd5027256f3a3d567fb2299896d9cd87d2b86" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;experimental_new_converter&lt;/code&gt;&lt;/b&gt;: Experimental flag, subject to change. Enables MLIR-based conversion instead of TOCO conversion.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;experimental_new_converter&lt;/code&gt; &lt;/b&gt;：実験的なフラグ、変更される可能性があります。TOCO変換の代わりにMLIRベースの変換を有効にします。</target>
        </trans-unit>
        <trans-unit id="e4ff5691ef82f9a7999599e75b3d610f134f7760" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;experimental_new_quantizer&lt;/code&gt;&lt;/b&gt;: Experimental flag, subject to change. Enables MLIR-based post-training quantization.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;experimental_new_quantizer&lt;/code&gt; &lt;/b&gt;：実験的なフラグ、変更される可能性があります。MLIRベースのポストトレーニング量子化を有効にします。</target>
        </trans-unit>
        <trans-unit id="0c51da620ca48d5680b24b916890b3fb2687646d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;experimental_optional_features&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;None&lt;/code&gt;, a tuple of, or a single &lt;a href=&quot;../../../autograph/experimental/feature&quot;&gt;&lt;code&gt;tf.autograph.experimental.Feature&lt;/code&gt;&lt;/a&gt; value.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;experimental_optional_features&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;None&lt;/code&gt; 、タプル、または単一の&lt;a href=&quot;../../../autograph/experimental/feature&quot;&gt; &lt;code&gt;tf.autograph.experimental.Feature&lt;/code&gt; &lt;/a&gt;値。</target>
        </trans-unit>
        <trans-unit id="810027721feb7fa91bab56cf6f5fb132ce076a19" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;experimental_optional_features&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;None&lt;/code&gt;, a tuple of, or a single &lt;a href=&quot;experimental/feature&quot;&gt;&lt;code&gt;tf.autograph.experimental.Feature&lt;/code&gt;&lt;/a&gt; value.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;experimental_optional_features&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;None&lt;/code&gt; 、タプル、または単一の&lt;a href=&quot;experimental/feature&quot;&gt; &lt;code&gt;tf.autograph.experimental.Feature&lt;/code&gt; &lt;/a&gt;値。</target>
        </trans-unit>
        <trans-unit id="36ab784ffc85c0fe1755894dbf8129eef622b168" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;experimental_priority&lt;/code&gt;&lt;/b&gt;: (optional) Priority to assign to a virtual device. Lower values have higher priorities and 0 is the default. Within a physical GPU, the GPU scheduler will prioritize ops on virtual devices with higher priority. Currently only supported for Nvidia GPUs.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;experimental_priority&lt;/code&gt; &lt;/b&gt; :(オプション）仮想デバイスに割り当てる優先度。値が小さいほど優先度が高くなり、0がデフォルトです。物理GPU内では、GPUスケジューラーはより高い優先度を持つ仮想デバイス上の操作を優先します。現在、NvidiaGPUでのみサポートされています。</target>
        </trans-unit>
        <trans-unit id="b9a02c8adabe5823d6720a55993e6fc04f68c1ff" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;experimental_relax_shapes&lt;/code&gt;&lt;/b&gt;: When True, &lt;code&gt;tf.function&lt;/code&gt; may generate fewer, graphs that are less specialized on input shapes.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;experimental_relax_shapes&lt;/code&gt; &lt;/b&gt;：Trueの場合、 &lt;code&gt;tf.function&lt;/code&gt; が生成するグラフが少なくなり、入力形状に特化していないグラフが生成されます。</target>
        </trans-unit>
        <trans-unit id="878fd4bdcf683b82c073979b752de7061539780e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;experimental_use_pfor&lt;/code&gt;&lt;/b&gt;: If true, uses pfor for computing the Jacobian. Else uses a tf.while_loop.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;experimental_use_pfor&lt;/code&gt; &lt;/b&gt;：trueの場合、ヤコビアンの計算にpforを使用します。それ以外の場合は、tf.while_loopを使用します。</target>
        </trans-unit>
        <trans-unit id="445f37d71f9420a1e147479d5fc2c7d70758572d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;experimental_use_pfor&lt;/code&gt;&lt;/b&gt;: If true, vectorizes the jacobian computation. Else falls back to a sequential while_loop. Vectorization can sometimes fail or lead to excessive memory usage. This option can be used to disable vectorization in such cases.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;experimental_use_pfor&lt;/code&gt; &lt;/b&gt;：trueの場合、ヤコビアン計算をベクトル化します。それ以外の場合は、順次while_loopにフォールバックします。ベクトル化が失敗したり、過剰なメモリ使用につながることがあります。このオプションは、そのような場合にベクトル化を無効にするために使用できます。</target>
        </trans-unit>
        <trans-unit id="b4b9aa80f000525887487f43d400f8b133b0a5a8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;export_dir&lt;/code&gt;&lt;/b&gt;: A directory in which to write the SavedModel.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;export_dir&lt;/code&gt; &lt;/b&gt;：&lt;b&gt; SavedModel&lt;/b&gt;を書き込むディレクトリ。</target>
        </trans-unit>
        <trans-unit id="705f4b3180cbd5ba4acbc8f35315db1e07747289" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;export_dir&lt;/code&gt;&lt;/b&gt;: Absolute string path to possible export location. For example, '/my/foo/model'.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;export_dir&lt;/code&gt; &lt;/b&gt;：可能なエクスポート場所への絶対文字列パス。たとえば、「/ my / foo / model」です。</target>
        </trans-unit>
        <trans-unit id="0ca87583503206d5cb6ec20504d9e94d8db7ef59" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;export_dir&lt;/code&gt;&lt;/b&gt;: Directory in which the SavedModel protocol buffer and variables to be loaded are located.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;export_dir&lt;/code&gt; &lt;/b&gt;：SavedModelプロトコルバッファーとロードされる変数が配置されているディレクトリ。</target>
        </trans-unit>
        <trans-unit id="4843d16d2816df6ea0358ff98d1d5cb25150f0cd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;export_dir&lt;/code&gt;&lt;/b&gt;: The SavedModel directory to load from.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;export_dir&lt;/code&gt; &lt;/b&gt;：ロード元のSavedModelディレクトリ。</target>
        </trans-unit>
        <trans-unit id="357c25acd66cdc31130ca57cfb1bcd6baba2011a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;export_dir&lt;/code&gt;&lt;/b&gt;: The path to which the SavedModel will be stored.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;export_dir&lt;/code&gt; &lt;/b&gt;：SavedModelが保存されるパス。</target>
        </trans-unit>
        <trans-unit id="366d9434028b52adce60238565b97f57fe5a85b1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;export_dir_base&lt;/code&gt;&lt;/b&gt;: A string containing a directory in which to create timestamped subdirectories containing exported &lt;code&gt;SavedModel&lt;/code&gt;s.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;export_dir_base&lt;/code&gt; &lt;/b&gt;：エクスポートされた &lt;code&gt;SavedModel&lt;/code&gt; を含むタイムスタンプ付きのサブディレクトリを作成するディレクトリを含む文字列。</target>
        </trans-unit>
        <trans-unit id="43b5d493efc2a84f7248c52c9c1b091e2746600e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;export_outputs&lt;/code&gt;&lt;/b&gt;: Describes the output signatures to be exported to &lt;code&gt;SavedModel&lt;/code&gt; and used during serving. A dict &lt;code&gt;{name: output}&lt;/code&gt; where:</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;export_outputs&lt;/code&gt; &lt;/b&gt;：にエクスポートする出力シグネチャを記述し &lt;code&gt;SavedModel&lt;/code&gt; サービング中および使用。dict &lt;code&gt;{name: output}&lt;/code&gt; ここで：</target>
        </trans-unit>
        <trans-unit id="06ce0b25d054a8357fa6698a00ab66bc7fdd8c6d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;export_path&lt;/code&gt;&lt;/b&gt;: A string containing a directory where to write the export.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;export_path&lt;/code&gt; &lt;/b&gt;：エクスポートを書き込むディレクトリを含む文字列。</target>
        </trans-unit>
        <trans-unit id="18636faf54528a2666ca81006656429a7a67478a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;export_saved_model_api_version&lt;/code&gt;&lt;/b&gt;: ExportSavedModelApiVersion, V1 or V2. With V1, &lt;code&gt;export_saved_model()&lt;/code&gt; adds rewrite() and TPUPartitionedCallOp() for user; while in v2, user is expected to add rewrite(), TPUPartitionedCallOp() etc in their model_fn. A helper function &lt;code&gt;inference_on_tpu&lt;/code&gt; is provided for V2. brn_tpu_estimator.py includes examples for both versions i.e. TPUEstimatorExportTest and TPUEstimatorExportV2Test.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;export_saved_model_api_version&lt;/code&gt; &lt;/b&gt;：ExportSavedModelApiVersion、V1またはV2。V1では、 &lt;code&gt;export_saved_model()&lt;/code&gt; はユーザー用にrewrite（）とTPUPartitionedCallOp（）を追加します。v2では、rewrite（）、TPUPartitionedCallOp（）などをmodel_fnに追加する必要があります。V2にはヘルパー関数 &lt;code&gt;inference_on_tpu&lt;/code&gt; が用意されています。brn_tpu_estimator.pyには、TPUEstimatorExportTestとTPUEstimatorExportV2Testの両方のバージョンの例が含まれています。</target>
        </trans-unit>
        <trans-unit id="8ba81a3afb61889243d2106958a4fa5b6e13c1df" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;export_scope&lt;/code&gt;&lt;/b&gt;: Optional &lt;code&gt;string&lt;/code&gt;. Name scope to remove.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;export_scope&lt;/code&gt; &lt;/b&gt;：オプションの &lt;code&gt;string&lt;/code&gt; 。削除する名前スコープ。</target>
        </trans-unit>
        <trans-unit id="b8da5f677d519129bdea6dd8406f58dd2941dedd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;export_scope&lt;/code&gt;&lt;/b&gt;: Optional &lt;code&gt;string&lt;/code&gt;. Name scope under which to extract the subgraph. The scope name will be striped from the node definitions for easy import later into new name scopes. If &lt;code&gt;None&lt;/code&gt;, the whole graph is exported. graph_def and export_scope cannot both be specified.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;export_scope&lt;/code&gt; &lt;/b&gt;：オプションの &lt;code&gt;string&lt;/code&gt; 。サブグラフを抽出する名前のスコープ。スコープ名は、後で新しい名前スコープに簡単にインポートできるようにノード定義から取り除かれます。 &lt;code&gt;None&lt;/code&gt; の場合、グラフ全体がエクスポートされます。graph_defとexport_scopeの両方を指定することはできません。</target>
        </trans-unit>
        <trans-unit id="e554d0d10d0c7d7aeeb04ed334fb8515b916b03b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;export_to_cpu&lt;/code&gt;&lt;/b&gt;: If True, &lt;code&gt;export_saved_model()&lt;/code&gt; exports a metagraph for serving on CPU.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;export_to_cpu&lt;/code&gt; &lt;/b&gt;：Trueの場合、 &lt;code&gt;export_saved_model()&lt;/code&gt; はCPUで提供するためにメタグラフをエクスポートします。</target>
        </trans-unit>
        <trans-unit id="0bfba5b654be6679d6f4fcc831c9ceaf586d3b52" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;export_to_tpu&lt;/code&gt;&lt;/b&gt;: If True, &lt;code&gt;export_saved_model()&lt;/code&gt; exports a metagraph for serving on TPU. Note that unsupported export modes such as EVAL will be ignored. For those modes, only a CPU model will be exported. Currently, export_to_tpu only supports PREDICT.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;export_to_tpu&lt;/code&gt; &lt;/b&gt;：Trueの場合、 &lt;code&gt;export_saved_model()&lt;/code&gt; はTPUで提供するためにメタグラフをエクスポートします。EVALなどのサポートされていないエクスポートモードは無視されます。これらのモードでは、CPUモデルのみがエクスポートされます。現在、export_to_tpuはPREDICTのみをサポートしています。</target>
        </trans-unit>
        <trans-unit id="75c656e7971906cc68312302fee4679302c38c59" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;exporters&lt;/code&gt;&lt;/b&gt;: Iterable of &lt;code&gt;Exporter&lt;/code&gt;s, or a single one, or &lt;code&gt;None&lt;/code&gt;. &lt;code&gt;exporters&lt;/code&gt; will be invoked after each evaluation.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;exporters&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Exporter&lt;/code&gt; のIterable、または単一の、または &lt;code&gt;None&lt;/code&gt; 。 &lt;code&gt;exporters&lt;/code&gt; は、各評価後に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="b3eb21446d7fcee1282507e07f5420cc97b7875a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;exports_to_keep&lt;/code&gt;&lt;/b&gt;: Number of exports to keep. Older exports will be garbage-collected. Defaults to 5. Set to &lt;code&gt;None&lt;/code&gt; to disable garbage collection.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;exports_to_keep&lt;/code&gt; &lt;/b&gt;：保持するエクスポートの数。古いエクスポートはガベージコレクションされます。5.セットにデフォルト &lt;code&gt;None&lt;/code&gt; 無効ガベージコレクションへ。</target>
        </trans-unit>
        <trans-unit id="3b7d3b6d003242a7c9d593e752ab211d31a2a0b1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;extra_feed_dict&lt;/code&gt;&lt;/b&gt;: dict that allows fixing specified tensor values during the Jacobian calculation.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;extra_feed_dict&lt;/code&gt; &lt;/b&gt;：ヤコビ計算中に指定されたテンソル値を修正できる&lt;b&gt;辞書&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="120bf8951407ff490cb102aac8933ce61da7a34b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;extract&lt;/code&gt;&lt;/b&gt;: True tries extracting the file as an Archive, like tar or zip.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;extract&lt;/code&gt; &lt;/b&gt;：tarやzipなどのアーカイブとしてファイルを抽出しようとします。</target>
        </trans-unit>
        <trans-unit id="c51f8873288bd27aeb47732477620a5a239080d4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;extrapolation_value&lt;/code&gt;&lt;/b&gt;: An optional &lt;code&gt;float&lt;/code&gt;. Defaults to &lt;code&gt;0&lt;/code&gt;. Value used for extrapolation, when applicable.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;extrapolation_value&lt;/code&gt; &lt;/b&gt;：オプションの &lt;code&gt;float&lt;/code&gt; 。デフォルトは &lt;code&gt;0&lt;/code&gt; です。該当する場合、外挿に使用される値。</target>
        </trans-unit>
        <trans-unit id="218da213a837bb12580d6b1542f294f8480deb90" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;extras&lt;/code&gt;&lt;/b&gt;: (optional) Dict mapping string keys to additional benchmark info. Values may be either floats or values that are convertible to strings.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;extras&lt;/code&gt; &lt;/b&gt;：（オプション）文字列キーを追加のベンチマーク情報にマッピングします。値は、浮動小数点数または文字列に変換可能な値のいずれかです。</target>
        </trans-unit>
        <trans-unit id="c5d31287ec55ec986dedf932f703c091f83a7479" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;f1&lt;/code&gt;&lt;/b&gt;: A float value.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;f1&lt;/code&gt; &lt;/b&gt;：float値。</target>
        </trans-unit>
        <trans-unit id="d0c911e3b0b111f9e1b41798a5a6f6826fb2df61" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;f2&lt;/code&gt;&lt;/b&gt;: A float value.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;f2&lt;/code&gt; &lt;/b&gt;：float値。</target>
        </trans-unit>
        <trans-unit id="0c0248ef1922dacb699f9d062e74f1edff2486cc" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;f&lt;/code&gt;&lt;/b&gt;: function &lt;code&gt;f(*x)&lt;/code&gt; that returns a &lt;code&gt;Tensor&lt;/code&gt; or nested structure of &lt;code&gt;Tensor&lt;/code&gt; outputs.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;f&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; または &lt;code&gt;Tensor&lt;/code&gt; 出力のネストされた構造を返す関数 &lt;code&gt;f(*x)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e950e8e04fe4a8be03856a5eb402f9f481db8cf6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;f&lt;/code&gt;&lt;/b&gt;: function &lt;code&gt;f(*x)&lt;/code&gt; that returns a &lt;code&gt;Tensor&lt;/code&gt; or sequence of &lt;code&gt;Tensor&lt;/code&gt; outputs.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;f&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; または &lt;code&gt;Tensor&lt;/code&gt; 出力のシーケンスを返す関数 &lt;code&gt;f(*x)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="259d3bdc165a844ebdb99e50dafadf76af840766" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;f&lt;/code&gt;&lt;/b&gt;: function &lt;code&gt;f(*x)&lt;/code&gt; that returns a tuple &lt;code&gt;(y, grad_fn)&lt;/code&gt; where:</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;f&lt;/code&gt; &lt;/b&gt;：タプル &lt;code&gt;(y, grad_fn)&lt;/code&gt; を返す関数 &lt;code&gt;f(*x)&lt;/code&gt; ）ここで、</target>
        </trans-unit>
        <trans-unit id="aecf5f03211918a237862be86795beb78b3c69cd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;f&lt;/code&gt;&lt;/b&gt;: the function.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;f&lt;/code&gt; &lt;/b&gt;：関数。</target>
        </trans-unit>
        <trans-unit id="465854017d7b0c8f44fbc47e5fdeca9c73d65256" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;factor&lt;/code&gt;&lt;/b&gt;: Float. A multiplicative factor by which the values will be scaled.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;factor&lt;/code&gt; &lt;/b&gt;：フロート。値がスケーリングされる乗法因数。</target>
        </trans-unit>
        <trans-unit id="142d5604d3a1a196ddb2ebad1894cf610a951040" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;factor&lt;/code&gt;&lt;/b&gt;: factor by which the learning rate will be reduced. new_lr = lr * factor</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;factor&lt;/code&gt; &lt;/b&gt;：学習率を下げるための係数。new_lr = lr *係数</target>
        </trans-unit>
        <trans-unit id="250a90d668fc5ed4b1fbd28dbbb8aa488c430701" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fail_on_nan_loss&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;bool&lt;/code&gt;, whether to raise exception when loss is NaN.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fail_on_nan_loss&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;bool&lt;/code&gt; 、損失がNaNの場合に例外を発生させるかどうか。</target>
        </trans-unit>
        <trans-unit id="ca5c95159b5a6d5c664b0433809b71dfe51b7c46" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;false_fn&lt;/code&gt;&lt;/b&gt;: The callable to be performed if pred is false.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;false_fn&lt;/code&gt; &lt;/b&gt;：predがfalseの場合に実行される呼び出し可能オブジェクト。</target>
        </trans-unit>
        <trans-unit id="f948b8052a14aebd639eaef361a879b402c976b4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;false_negatives&lt;/code&gt;&lt;/b&gt;: A float &lt;code&gt;Tensor&lt;/code&gt; of shape &lt;code&gt;[len(thresholds)]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;false_negatives&lt;/code&gt; &lt;/b&gt;：形状の浮動小数点 &lt;code&gt;Tensor&lt;/code&gt; &lt;code&gt;[len(thresholds)]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9df5467d2c33152a8ab52adb077c5e73dd6f569f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;false_positives&lt;/code&gt;&lt;/b&gt;: A float &lt;code&gt;Tensor&lt;/code&gt; of shape &lt;code&gt;[len(thresholds)]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;false_positives&lt;/code&gt; &lt;/b&gt;：形状の浮動小数点 &lt;code&gt;Tensor&lt;/code&gt; &lt;code&gt;[len(thresholds)]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="773379dad4a66e2752f62e0d46cd7c7550bc5e87" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;family&lt;/code&gt;&lt;/b&gt;: Optional; if provided, used as the prefix of the summary tag name, which controls the tab name used for display on Tensorboard.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;family&lt;/code&gt; &lt;/b&gt;：オプション。提供されている場合、Tensorboardでの表示に使用されるタブ名を制御するサマリータグ名のプレフィックスとして使用されます。</target>
        </trans-unit>
        <trans-unit id="be18ea0d8db43b5fa4ad202f4d94ea4a93c811be" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;family&lt;/code&gt;&lt;/b&gt;: Optional; if provided, used as the prefix of the summary tag, which controls the name used for display on TensorBoard when display_name is not set.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;family&lt;/code&gt; &lt;/b&gt;：オプション。提供される場合、サマリータグのプレフィックスとして使用されます。これは、display_nameが設定されていない場合にTensorBoardでの表示に使用される名前を制御します。</target>
        </trans-unit>
        <trans-unit id="2e16ff6374f072371b45366675cd004ca683e804" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fancy_upscaling&lt;/code&gt;&lt;/b&gt;: An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;True&lt;/code&gt;. If true use a slower but nicer upscaling of the chroma planes (yuv420/422 only).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fancy_upscaling&lt;/code&gt; &lt;/b&gt;：オプションの &lt;code&gt;bool&lt;/code&gt; 。デフォルトは &lt;code&gt;True&lt;/code&gt; です。trueの場合、クロマプレーンのより遅いがより良いアップスケーリングを使用します（yuv420 / 422のみ）。</target>
        </trans-unit>
        <trans-unit id="8c38708fdbb92f9d0fe9ec0bb5cbfd98ad5bcb32" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;farray1&lt;/code&gt;&lt;/b&gt;: a list of float values.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;farray1&lt;/code&gt; &lt;/b&gt;：float値のリスト。</target>
        </trans-unit>
        <trans-unit id="a38504d02dd000863bda6f01bc214b20b9210c62" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;farray2&lt;/code&gt;&lt;/b&gt;: a list of float values.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;farray2&lt;/code&gt; &lt;/b&gt;：float値のリスト。</target>
        </trans-unit>
        <trans-unit id="06bda46c8151cdd640e3ff58eb048108074c555c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fast&lt;/code&gt;&lt;/b&gt;: bool. Defaults to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fast&lt;/code&gt; &lt;/b&gt;：ブール。デフォルトは &lt;code&gt;True&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="50c965013c51b67b28e517dd5e0325d45b2ef567" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;feature_columns&lt;/code&gt;&lt;/b&gt;: All embedding &lt;code&gt;FeatureColumn&lt;/code&gt;s used by model.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;feature_columns&lt;/code&gt; &lt;/b&gt;：モデルで使用されるすべての埋め込み &lt;code&gt;FeatureColumn&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eb3faaf90094db13975dbe72f23939dc91ebe135" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;feature_columns&lt;/code&gt;&lt;/b&gt;: An iterable containing all feature columns. All items should be instances of classes derived from &lt;code&gt;FeatureColumn&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;feature_columns&lt;/code&gt; &lt;/b&gt;：すべての機能列を含む反復可能&lt;b&gt;オブジェクト&lt;/b&gt;。すべてのアイテムは、 &lt;code&gt;FeatureColumn&lt;/code&gt; から派生したクラスのインスタンスである必要があります。</target>
        </trans-unit>
        <trans-unit id="19e0202b4d0851245b06be50dacf9153fc3718b4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;feature_columns&lt;/code&gt;&lt;/b&gt;: An iterable containing all feature columns. All items should be instances of classes derived from &lt;code&gt;_FeatureColumn&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;feature_columns&lt;/code&gt; &lt;/b&gt;：すべての機能列を含む反復可能&lt;b&gt;オブジェクト&lt;/b&gt;。すべてのアイテムは &lt;code&gt;_FeatureColumn&lt;/code&gt; から派生したクラスのインスタンスである必要があります。</target>
        </trans-unit>
        <trans-unit id="02143102ef50ab355054498a962b61637fa9b5a9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;feature_columns&lt;/code&gt;&lt;/b&gt;: An iterable containing all the feature columns used by the model.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;feature_columns&lt;/code&gt; &lt;/b&gt;：モデルで使用されるすべての特徴列を含む反復可能&lt;b&gt;オブジェクト&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="4e61befb309e40a37ee07940ff82a06ce5f9f306" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;feature_columns&lt;/code&gt;&lt;/b&gt;: An iterable containing all the feature columns used by the model. All items in the set should be instances of classes derived from &lt;code&gt;FeatureColumn&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;feature_columns&lt;/code&gt; &lt;/b&gt;：モデルで使用されるすべての特徴列を含む反復可能&lt;b&gt;オブジェクト&lt;/b&gt;。セット内のすべてのアイテムは、 &lt;code&gt;FeatureColumn&lt;/code&gt; から派生したクラスのインスタンスである必要があります。</target>
        </trans-unit>
        <trans-unit id="53e08e4b7c17d69a98a1b22f2525956a8b3fe704" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;feature_columns&lt;/code&gt;&lt;/b&gt;: An iterable containing all the feature columns used by the model. All items in the set should be instances of classes derived from &lt;code&gt;_FeatureColumn&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;feature_columns&lt;/code&gt; &lt;/b&gt;：モデルで使用されるすべての特徴列を含む反復可能&lt;b&gt;オブジェクト&lt;/b&gt;。セット内のすべてのアイテムは、 &lt;code&gt;_FeatureColumn&lt;/code&gt; から派生したクラスのインスタンスである必要があります。</target>
        </trans-unit>
        <trans-unit id="2ad13390960a703f684dd0098b6e2a07db44bd93" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;feature_columns&lt;/code&gt;&lt;/b&gt;: An iterable containing the FeatureColumns to use as inputs to your model. All items should be instances of classes derived from &lt;code&gt;DenseColumn&lt;/code&gt; such as &lt;code&gt;numeric_column&lt;/code&gt;, &lt;code&gt;embedding_column&lt;/code&gt;, &lt;code&gt;bucketized_column&lt;/code&gt;, &lt;code&gt;indicator_column&lt;/code&gt;. If you have categorical features, you can wrap them with an &lt;code&gt;embedding_column&lt;/code&gt; or &lt;code&gt;indicator_column&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;feature_columns&lt;/code&gt; &lt;/b&gt;：モデルへの入力として使用するFeatureColumnsを含む反復可能&lt;b&gt;オブジェクト&lt;/b&gt;。すべてのアイテムは、 &lt;code&gt;numeric_column&lt;/code&gt; 、 &lt;code&gt;embedding_column&lt;/code&gt; 、 &lt;code&gt;bucketized_column&lt;/code&gt; 、 &lt;code&gt;indicator_column&lt;/code&gt; などの &lt;code&gt;DenseColumn&lt;/code&gt; から派生したクラスのインスタンスである必要があります。カテゴリ機能がある場合は、 &lt;code&gt;embedding_column&lt;/code&gt; または &lt;code&gt;indicator_column&lt;/code&gt; でラップすることができます。</target>
        </trans-unit>
        <trans-unit id="ee41cd25990ff17eada282041c37fee6030e137e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;feature_columns&lt;/code&gt;&lt;/b&gt;: An iterable containing the FeatureColumns to use as inputs to your model. All items should be instances of classes derived from &lt;code&gt;_DenseColumn&lt;/code&gt; such as &lt;code&gt;numeric_column&lt;/code&gt;, &lt;code&gt;embedding_column&lt;/code&gt;, &lt;code&gt;bucketized_column&lt;/code&gt;, &lt;code&gt;indicator_column&lt;/code&gt;. If you have categorical features, you can wrap them with an &lt;code&gt;embedding_column&lt;/code&gt; or &lt;code&gt;indicator_column&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;feature_columns&lt;/code&gt; &lt;/b&gt;：モデルへの入力として使用するFeatureColumnsを含む反復可能&lt;b&gt;オブジェクト&lt;/b&gt;。すべてのアイテムは、 &lt;code&gt;numeric_column&lt;/code&gt; 、 &lt;code&gt;embedding_column&lt;/code&gt; 、 &lt;code&gt;bucketized_column&lt;/code&gt; 、 &lt;code&gt;indicator_column&lt;/code&gt; などの &lt;code&gt;_DenseColumn&lt;/code&gt; から派生したクラスのインスタンスである必要があります。カテゴリ機能がある場合は、 &lt;code&gt;embedding_column&lt;/code&gt; または &lt;code&gt;indicator_column&lt;/code&gt; でラップすることができます。</target>
        </trans-unit>
        <trans-unit id="910730bba73bc293cff6843d0266c96b17d56331" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;feature_columns&lt;/code&gt;&lt;/b&gt;: An iterable containing the FeatureColumns to use as inputs to your model. All items should be instances of classes derived from &lt;code&gt;_FeatureColumn&lt;/code&gt;s.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;feature_columns&lt;/code&gt; &lt;/b&gt;：モデルへの入力として使用するFeatureColumnsを含む反復可能&lt;b&gt;オブジェクト&lt;/b&gt;。すべてのアイテムは &lt;code&gt;_FeatureColumn&lt;/code&gt; から派生したクラスのインスタンスである必要があります。</target>
        </trans-unit>
        <trans-unit id="7ca624383e958e4a13a0a6b9c64d8024d29c64b5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;feature_columns&lt;/code&gt;&lt;/b&gt;: An iterable of dense sequence columns. Valid columns are</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;feature_columns&lt;/code&gt; &lt;/b&gt;：密なシーケンス列の反復可能。有効な列は</target>
        </trans-unit>
        <trans-unit id="aafda1c062b490d8c27ecbdb73effd53cf6c1d03" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;feature_columns&lt;/code&gt;&lt;/b&gt;: An optionable iterable containing all the feature columns used by the model. All items in the set should be feature column instances that can be passed to &lt;code&gt;tf.feature_column.input_layer&lt;/code&gt;. If this is None, all features will be used.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;feature_columns&lt;/code&gt; &lt;/b&gt;：モデルで使用されるすべての特徴列を含む、オプションのイテラブル。セット内のすべてのアイテムは、 &lt;code&gt;tf.feature_column.input_layer&lt;/code&gt; に渡すことができる機能列インスタンスである必要があります。これがNoneの場合、すべての機能が使用されます。</target>
        </trans-unit>
        <trans-unit id="20377cb620f3c8c364c3e06bcffb54d8d4bb9b8e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;feature_columns&lt;/code&gt;&lt;/b&gt;: Iterable of &lt;code&gt;feature_column._FeatureColumn&lt;/code&gt; model inputs.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;feature_columns&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;feature_column._FeatureColumn&lt;/code&gt; モデル入力の反復可能。</target>
        </trans-unit>
        <trans-unit id="a48e9f91194104c163ef3f9315552ce37252b5a5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;feature_importances&lt;/code&gt;&lt;/b&gt;: an OrderedDict, where the keys are the feature column names and the values are importances. It is sorted by importance.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;feature_importances&lt;/code&gt; &lt;/b&gt;：OrderedDict。キーは機能の列名、値は重要度です。重要度でソートされています。</target>
        </trans-unit>
        <trans-unit id="58fc683f2b23d75658d5fa3d5212d6221bf82729" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;feature_spec&lt;/code&gt;&lt;/b&gt;: a dict of string to &lt;code&gt;VarLenFeature&lt;/code&gt;/&lt;code&gt;FixedLenFeature&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;feature_spec&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;VarLenFeature&lt;/code&gt; / &lt;code&gt;FixedLenFeature&lt;/code&gt; への文字列の辞書。</target>
        </trans-unit>
        <trans-unit id="e0d767f317a7b81daa033f6537baca49ce14fd10" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;feature_to_config_dict&lt;/code&gt;&lt;/b&gt;: A dictionary mapping features names to instances of the class &lt;code&gt;FeatureConfig&lt;/code&gt;. Either features_columns or the pair of &lt;code&gt;feature_to_config_dict&lt;/code&gt; and &lt;code&gt;table_to_config_dict&lt;/code&gt; must be specified.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;feature_to_config_dict&lt;/code&gt; &lt;/b&gt;：機能名をクラス &lt;code&gt;FeatureConfig&lt;/code&gt; のインスタンスにマッピングする辞書。features_columnsまたは &lt;code&gt;feature_to_config_dict&lt;/code&gt; と &lt;code&gt;table_to_config_dict&lt;/code&gt; のペアを指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="c43ca4540669dbf061dcebcd92d96444f8776bed" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;features&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; representing preactivation values.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;features&lt;/code&gt; &lt;/b&gt;：プレアクティベーション値を表す &lt;code&gt;Tensor&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4189b0389bd5104b99f4631ae79173a13532344b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;features&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; representing preactivation values. Must be one of the following types: &lt;code&gt;float16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;features&lt;/code&gt; &lt;/b&gt;：プレアクティベーション値を表す &lt;code&gt;Tensor&lt;/code&gt; 。 &lt;code&gt;float16&lt;/code&gt; 、 &lt;code&gt;float32&lt;/code&gt; 、 &lt;code&gt;float64&lt;/code&gt; 、 &lt;code&gt;int32&lt;/code&gt; 、 &lt;code&gt;int64&lt;/code&gt; のいずれかのタイプである必要があります。</target>
        </trans-unit>
        <trans-unit id="e98b7e8a5304e83d3c897bad54100c6c97c6fcf4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;features&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; with type &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, or &lt;code&gt;int8&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;features&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;float&lt;/code&gt; 、 &lt;code&gt;double&lt;/code&gt; 、 &lt;code&gt;int32&lt;/code&gt; 、 &lt;code&gt;int64&lt;/code&gt; 、 &lt;code&gt;uint8&lt;/code&gt; 、 &lt;code&gt;int16&lt;/code&gt; 、または &lt;code&gt;int8&lt;/code&gt; 型の &lt;code&gt;Tensor&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="99c21044633223177d0961140eb86d7ab1ca6528" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;features&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;, &lt;code&gt;qint8&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;features&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。：次のいずれかのタイプでなければならない &lt;code&gt;float32&lt;/code&gt; 、 &lt;code&gt;float64&lt;/code&gt; 型、 &lt;code&gt;int32&lt;/code&gt; 、 &lt;code&gt;uint8&lt;/code&gt; 、 &lt;code&gt;int16&lt;/code&gt; 、 &lt;code&gt;int8&lt;/code&gt; 、 &lt;code&gt;int64&lt;/code&gt; 型、 &lt;code&gt;bfloat16&lt;/code&gt; 、 &lt;code&gt;uint16&lt;/code&gt; の、 &lt;code&gt;half&lt;/code&gt; 、 &lt;code&gt;uint32&lt;/code&gt; 、 &lt;code&gt;uint64&lt;/code&gt; 型、 &lt;code&gt;qint8&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b94f5fe2c3391fc826a762096c2d09516b8198a4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;features&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;features&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。次のタイプのいずれかでなければなりません： &lt;code&gt;half&lt;/code&gt; 、 &lt;code&gt;bfloat16&lt;/code&gt; 、 &lt;code&gt;float32&lt;/code&gt; 、 &lt;code&gt;float64&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e708415e3be5c7bf39b2e8c2fa1b69d2e1617a9d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;features&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;qint16&lt;/code&gt;, &lt;code&gt;quint16&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;features&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。 &lt;code&gt;qint8&lt;/code&gt; 、 &lt;code&gt;quint8&lt;/code&gt; 、 &lt;code&gt;qint32&lt;/code&gt; 、 &lt;code&gt;qint16&lt;/code&gt; 、 &lt;code&gt;quint16&lt;/code&gt; のいずれかのタイプである必要があります。</target>
        </trans-unit>
        <trans-unit id="26c316db6efbd60be0ab8367b4403d08adfcf761" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;features&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;dict&lt;/code&gt; mapping feature keys to &lt;code&gt;FixedLenFeature&lt;/code&gt; or &lt;code&gt;VarLenFeature&lt;/code&gt; values.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;features&lt;/code&gt; &lt;/b&gt;：機能キーを &lt;code&gt;FixedLenFeature&lt;/code&gt; または &lt;code&gt;VarLenFeature&lt;/code&gt; 値にマッピングする &lt;code&gt;dict&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5c9b4d9213d9017cfc07aa0777b09b942421d509" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;features&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;dict&lt;/code&gt; mapping feature keys to &lt;code&gt;FixedLenFeature&lt;/code&gt; or &lt;code&gt;VarLenFeature&lt;/code&gt; values. See &lt;a href=&quot;../../../../io/parse_example&quot;&gt;&lt;code&gt;tf.io.parse_example&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;features&lt;/code&gt; &lt;/b&gt;：機能キーを &lt;code&gt;FixedLenFeature&lt;/code&gt; または &lt;code&gt;VarLenFeature&lt;/code&gt; 値にマッピングする &lt;code&gt;dict&lt;/code&gt; 。&lt;a href=&quot;../../../../io/parse_example&quot;&gt; &lt;code&gt;tf.io.parse_example&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="543bb30fea51e3985018ba46f1925c30c7e543cf" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;features&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;dict&lt;/code&gt; mapping feature keys to &lt;code&gt;FixedLenFeature&lt;/code&gt; or &lt;code&gt;VarLenFeature&lt;/code&gt; values. See &lt;a href=&quot;../../io/parse_example&quot;&gt;&lt;code&gt;tf.io.parse_example&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;features&lt;/code&gt; &lt;/b&gt;：機能キーを &lt;code&gt;FixedLenFeature&lt;/code&gt; または &lt;code&gt;VarLenFeature&lt;/code&gt; 値にマッピングする &lt;code&gt;dict&lt;/code&gt; 。&lt;a href=&quot;../../io/parse_example&quot;&gt; &lt;code&gt;tf.io.parse_example&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="5c648a9fe9476c942a085d75bb36b23801b2bf61" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;features&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;dict&lt;/code&gt; mapping feature keys to &lt;code&gt;FixedLenFeature&lt;/code&gt;, &lt;code&gt;VarLenFeature&lt;/code&gt;, &lt;code&gt;RaggedFeature&lt;/code&gt;, and &lt;code&gt;SparseFeature&lt;/code&gt; values.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;features&lt;/code&gt; &lt;/b&gt;：機能キーを &lt;code&gt;FixedLenFeature&lt;/code&gt; 、 &lt;code&gt;VarLenFeature&lt;/code&gt; 、 &lt;code&gt;RaggedFeature&lt;/code&gt; 、および &lt;code&gt;SparseFeature&lt;/code&gt; の値にマッピングする &lt;code&gt;dict&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b865dea667a79c1ca3b0163d533484efa9faa68c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;features&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;dict&lt;/code&gt; mapping feature keys to &lt;code&gt;FixedLenFeature&lt;/code&gt;, &lt;code&gt;VarLenFeature&lt;/code&gt;, &lt;code&gt;SparseFeature&lt;/code&gt;, and &lt;code&gt;RaggedFeature&lt;/code&gt; values.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;features&lt;/code&gt; &lt;/b&gt;：機能キーを &lt;code&gt;FixedLenFeature&lt;/code&gt; 、 &lt;code&gt;VarLenFeature&lt;/code&gt; 、 &lt;code&gt;SparseFeature&lt;/code&gt; 、および &lt;code&gt;RaggedFeature&lt;/code&gt; の値にマッピングする &lt;code&gt;dict&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a3bda4c2212f1976e05b0c00dd39d89420fd77b7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;features&lt;/code&gt;&lt;/b&gt;: A mapping from key to tensors. &lt;code&gt;_FeatureColumn&lt;/code&gt;s look up via these keys. For example &lt;code&gt;numeric_column('price')&lt;/code&gt; will look at 'price' key in this dict. Values are &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;SparseTensor&lt;/code&gt; depending on corresponding &lt;code&gt;_FeatureColumn&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;features&lt;/code&gt; &lt;/b&gt;：キーからテンソルへのマッピング。 &lt;code&gt;_FeatureColumn&lt;/code&gt; は、これらのキーを使用して検索します。たとえば、 &lt;code&gt;numeric_column('price')&lt;/code&gt; は、この辞書の「price」キーを調べます。値は、対応する &lt;code&gt;_FeatureColumn&lt;/code&gt; に応じて &lt;code&gt;Tensor&lt;/code&gt; または &lt;code&gt;SparseTensor&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="eff8c0e34ac2c90c6d0f5b3062dea200a23c3a90" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;features&lt;/code&gt;&lt;/b&gt;: A mapping from key to tensors. &lt;code&gt;_FeatureColumn&lt;/code&gt;s look up via these keys. For example &lt;code&gt;numeric_column('price')&lt;/code&gt; will look at 'price' key in this dict. Values can be a &lt;code&gt;SparseTensor&lt;/code&gt; or a &lt;code&gt;Tensor&lt;/code&gt; depends on corresponding &lt;code&gt;_FeatureColumn&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;features&lt;/code&gt; &lt;/b&gt;：キーからテンソルへのマッピング。 &lt;code&gt;_FeatureColumn&lt;/code&gt; は、これらのキーを使用して検索します。たとえば、 &lt;code&gt;numeric_column('price')&lt;/code&gt; は、この辞書の「price」キーを調べます。可能な値は &lt;code&gt;SparseTensor&lt;/code&gt; または &lt;code&gt;Tensor&lt;/code&gt; 対応に依存 &lt;code&gt;_FeatureColumn&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="4ccf833a8f17541d75bac3a40e4a286cebdea523" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;features&lt;/code&gt;&lt;/b&gt;: Input &lt;code&gt;dict&lt;/code&gt; mapping string feature names to &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;SparseTensor&lt;/code&gt; objects containing the values for that feature in a minibatch. Often to be used to fetch example-weight tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;features&lt;/code&gt; &lt;/b&gt;：入力 &lt;code&gt;dict&lt;/code&gt; マッピング文字列の機能名を、 &lt;code&gt;SparseTensor&lt;/code&gt; 内のその機能の値を含む &lt;code&gt;Tensor&lt;/code&gt; または SparseTensorオブジェクトにマッピングします。多くの場合、サンプルの重みのテンソルを取得するために使用されます。</target>
        </trans-unit>
        <trans-unit id="bbff894dbee39f00e25aa5a3bb2f64eca7356e75" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;features&lt;/code&gt;&lt;/b&gt;: Input &lt;code&gt;dict&lt;/code&gt; of &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;SparseTensor&lt;/code&gt; objects.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;features&lt;/code&gt; &lt;/b&gt;：入力 &lt;code&gt;dict&lt;/code&gt; の &lt;code&gt;Tensor&lt;/code&gt; または &lt;code&gt;SparseTensor&lt;/code&gt; オブジェクト。</target>
        </trans-unit>
        <trans-unit id="81dddb711450dd2260d08c0e60fb9b60a86c83ea" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;features&lt;/code&gt;&lt;/b&gt;: The features dict.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;features&lt;/code&gt; &lt;/b&gt;：機能辞書。</target>
        </trans-unit>
        <trans-unit id="1646bf8abeb5775b5fe7ef56438a048a2757672c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;features&lt;/code&gt;&lt;/b&gt;: a dict of string to &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;features&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; または &lt;code&gt;Tensor&lt;/code&gt; への文字列の辞書。</target>
        </trans-unit>
        <trans-unit id="b25d853a47874f50595b62ad27bdf04cbd6a4d6b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;features&lt;/code&gt;&lt;/b&gt;: a dict of string to &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;features&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; への文字列の辞書。</target>
        </trans-unit>
        <trans-unit id="002d533d847cc9ed6f1f6780f313a56eb951f043" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;featurewise_center&lt;/code&gt;&lt;/b&gt;: Boolean. Set input mean to 0 over the dataset, feature-wise.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;featurewise_center&lt;/code&gt; &lt;/b&gt;：ブール。データセット上で、特徴的に入力平均を0に設定します。</target>
        </trans-unit>
        <trans-unit id="d7cfbb4bf783df879db7153e0c053994dc574f60" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;featurewise_std_normalization&lt;/code&gt;&lt;/b&gt;: Boolean. Divide inputs by std of the dataset, feature-wise.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;featurewise_std_normalization&lt;/code&gt; &lt;/b&gt;：ブール値。入力をデータセットのstdで機能ごとに除算します。</target>
        </trans-unit>
        <trans-unit id="5ff2fd9000e46fbc6b3a8d10238709839d5c187c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;feed_dict&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;dict&lt;/code&gt; of values to feed for each op iteration (see the &lt;code&gt;feed_dict&lt;/code&gt; parameter of &lt;code&gt;Session.run&lt;/code&gt;).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;feed_dict&lt;/code&gt; &lt;/b&gt;：op反復ごとにフィードする値の &lt;code&gt;dict&lt;/code&gt; （ &lt;code&gt;Session.run&lt;/code&gt; の &lt;code&gt;feed_dict&lt;/code&gt; パラメータを参照）。</target>
        </trans-unit>
        <trans-unit id="5e61a997966e4ad43c38a90c8a9339eac1f822ad" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;feed_dict&lt;/code&gt;&lt;/b&gt;: A dictionary that maps &lt;code&gt;Tensor&lt;/code&gt; objects to feed values. See &lt;code&gt;tf.Session.run&lt;/code&gt; for a description of the valid feed values.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;feed_dict&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; オブジェクトをフィード値にマップする辞書。有効なフィード値の説明については、 &lt;code&gt;tf.Session.run&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="1036f45dc3ab63ec285d3a9262569f231239c12e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;feed_dict&lt;/code&gt;&lt;/b&gt;: A dictionary that maps graph elements to values (described above).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;feed_dict&lt;/code&gt; &lt;/b&gt;：グラフ要素を値にマップする辞書（上記）。</target>
        </trans-unit>
        <trans-unit id="f0fab1a7e00c5bafa5ee7502db0842f48dd57361" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;feed_dict&lt;/code&gt;&lt;/b&gt;: Exactly like the &lt;code&gt;feed_dict&lt;/code&gt; argument to &lt;code&gt;Session.Run()&lt;/code&gt;</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;feed_dict&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Session.Run()&lt;/code&gt; の &lt;code&gt;feed_dict&lt;/code&gt; 引数とまったく同じ</target>
        </trans-unit>
        <trans-unit id="c0d5a746840f869cb27e91651267766e7fda05b8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;feed_dict&lt;/code&gt;&lt;/b&gt;: Same as &lt;code&gt;tf.Session.run()&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;feed_dict&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;tf.Session.run()&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="eb6641f1f6e02019af3f22996db85e69abd34065" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;feed_fn&lt;/code&gt;&lt;/b&gt;: function that takes no arguments and returns &lt;code&gt;dict&lt;/code&gt; of &lt;code&gt;Tensor&lt;/code&gt; to feed.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;feed_fn&lt;/code&gt; &lt;/b&gt;：引数を取らず、フィードする &lt;code&gt;Tensor&lt;/code&gt; の &lt;code&gt;dict&lt;/code&gt; を返す関数。</target>
        </trans-unit>
        <trans-unit id="08db981efd1576d061eaefa1ccebd5b4628bcdfd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;feed_list&lt;/code&gt;&lt;/b&gt;: (Optional.) A list of &lt;code&gt;feed_dict&lt;/code&gt; keys. See &lt;code&gt;tf.Session.run&lt;/code&gt; for details of the allowable feed key types.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;feed_list&lt;/code&gt; &lt;/b&gt;：（オプション） &lt;code&gt;feed_dict&lt;/code&gt; キーのリスト。参照 &lt;code&gt;tf.Session.run&lt;/code&gt; を許容送りキータイプの詳細については。</target>
        </trans-unit>
        <trans-unit id="10ecef8eec6a00e4ff33cd54a642bd1132a20c1d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;feeds&lt;/code&gt;&lt;/b&gt;: A single graph element, or a list of graph elements.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;feeds&lt;/code&gt; &lt;/b&gt;：単一のグラフ要素、またはグラフ要素のリスト。</target>
        </trans-unit>
        <trans-unit id="def87e316eda8f541fda73e72c54f93878b9e0e0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fetches&lt;/code&gt;&lt;/b&gt;: A single graph element, a list of graph elements, or a dictionary whose values are graph elements or lists of graph elements (described above).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fetches&lt;/code&gt; &lt;/b&gt;：単一のグラフ要素、グラフ要素のリスト、または値がグラフ要素またはグラフ要素のリスト（上記）である辞書。</target>
        </trans-unit>
        <trans-unit id="2a2cc6a01d67b4975cfba50354d1f7b67868c283" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fetches&lt;/code&gt;&lt;/b&gt;: A single graph element, a list of graph elements, or a dictionary whose values are graph elements or lists of graph elements (see documentation for &lt;code&gt;run&lt;/code&gt;).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fetches&lt;/code&gt; &lt;/b&gt;：単一のグラフ要素、グラフ要素のリスト、または値がグラフ要素またはグラフ要素のリストである辞書（ &lt;code&gt;run&lt;/code&gt; のドキュメントを参照）。</target>
        </trans-unit>
        <trans-unit id="6a322458c9b29e9c9ae052c305d51808f7a61ae9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fetches&lt;/code&gt;&lt;/b&gt;: A single graph element, or a list of graph elements.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fetches&lt;/code&gt; &lt;/b&gt;：単一のグラフ要素、またはグラフ要素のリスト。</target>
        </trans-unit>
        <trans-unit id="b262662592afcf1ee1104e3cae2e8d1c9ace52f9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fetches&lt;/code&gt;&lt;/b&gt;: A value or list of values to fetch. See &lt;code&gt;tf.Session.run&lt;/code&gt; for details of the allowable fetch types.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fetches&lt;/code&gt; &lt;/b&gt;：&lt;b&gt;フェッチ&lt;/b&gt;する値または値のリスト。参照 &lt;code&gt;tf.Session.run&lt;/code&gt; を許容フェッチタイプの詳細については。</target>
        </trans-unit>
        <trans-unit id="968037f9fc64b829e9dfcbab516fcc4e6389644d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fetches&lt;/code&gt;&lt;/b&gt;: Exactly like the 'fetches' argument to Session.Run(). Can be a single tensor or op, a list of 'fetches' or a dictionary of fetches. For example: fetches = global_step_tensor fetches = [train_op, summary_op, global_step_tensor] fetches = {'step': global_step_tensor, 'summ': summary_op} Note that this can recurse as expected: fetches = {'step': global_step_tensor, 'ops': [train_op, check_nan_op]}</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fetches&lt;/code&gt; &lt;/b&gt;：Session.Run（）の「fetches」引数とまったく同じです。単一のテンソルまたはop、「フェッチ」のリスト、またはフェッチのディクショナリを指定できます。例：fetches = global_step_tensor fetches = [train_op、summary_op、global_step_tensor] fetches = {'step'：global_step_tensor、 'summ'：summary_op}これは期待どおりに再帰できることに注意してください：fetches = {'step'：global_step_tensor、 'ops' ：[train_op、check_nan_op]}</target>
        </trans-unit>
        <trans-unit id="40ba13f4197ac5e8d0c8056176a4cbb821fef41c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fetches&lt;/code&gt;&lt;/b&gt;: Same as &lt;code&gt;tf.Session.run()&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fetches&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;tf.Session.run()&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="25b001dc12f4f7f98c697551201271d0e11752f0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fft_length&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. An int32 tensor of shape [1]. The FFT length.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fft_length&lt;/code&gt; &lt;/b&gt;：タイプ &lt;code&gt;int32&lt;/code&gt; の &lt;code&gt;Tensor&lt;/code&gt; 。形状のint32テンソル[1]。FFTの長さ。</target>
        </trans-unit>
        <trans-unit id="5da62ce359ed2c303dc6514814f729c773a7edcf" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fft_length&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. An int32 tensor of shape [2]. The FFT length for each dimension.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fft_length&lt;/code&gt; &lt;/b&gt;：タイプ &lt;code&gt;int32&lt;/code&gt; の &lt;code&gt;Tensor&lt;/code&gt; 。形状のint32テンソル[2]。各次元のFFT長。</target>
        </trans-unit>
        <trans-unit id="8fabb1b45aaf449b149a43c3bb6ac322df1b0441" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fft_length&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. An int32 tensor of shape [3]. The FFT length for each dimension.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fft_length&lt;/code&gt; &lt;/b&gt;：タイプ &lt;code&gt;int32&lt;/code&gt; の &lt;code&gt;Tensor&lt;/code&gt; 。形状のint32テンソル[3]。各次元のFFT長。</target>
        </trans-unit>
        <trans-unit id="e66910e47dd1777e0ebcde31b538e1596bf4db30" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fft_length&lt;/code&gt;&lt;/b&gt;: An integer scalar &lt;code&gt;Tensor&lt;/code&gt;. The size of the FFT that produced &lt;code&gt;stfts&lt;/code&gt;. If not provided, uses the smallest power of 2 enclosing &lt;code&gt;frame_length&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fft_length&lt;/code&gt; &lt;/b&gt;：整数スカラー &lt;code&gt;Tensor&lt;/code&gt; 。 &lt;code&gt;stfts&lt;/code&gt; を生成したFFTのサイズ。指定しない場合、 &lt;code&gt;frame_length&lt;/code&gt; を囲む2の最小べき乗が使用されます。</target>
        </trans-unit>
        <trans-unit id="e0c641c864e4b732ef08eaf734f77291730ee34b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fft_length&lt;/code&gt;&lt;/b&gt;: An integer scalar &lt;code&gt;Tensor&lt;/code&gt;. The size of the FFT to apply. If not provided, uses the smallest power of 2 enclosing &lt;code&gt;frame_length&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fft_length&lt;/code&gt; &lt;/b&gt;：整数スカラー &lt;code&gt;Tensor&lt;/code&gt; 。適用するFFTのサイズ。指定しない場合、 &lt;code&gt;frame_length&lt;/code&gt; を囲む2の最小べき乗が使用されます。</target>
        </trans-unit>
        <trans-unit id="42fcaf24e7736ee1e5d1480ddddc8028d374ee12" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;field&lt;/code&gt;&lt;/b&gt;: String; JSON field under which the data will be stored. The field is used only if the payload is sent within a form (i.e. send_as_json is set to False).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;field&lt;/code&gt; &lt;/b&gt;：文字列; データが格納されるJSONフィールド。このフィールドは、ペイロードがフォーム内で送信される場合にのみ使用されます（つまり、send_as_jsonがFalseに設定されています）。</target>
        </trans-unit>
        <trans-unit id="c6fef43fd45790df770fe2c9d760b1dc32e44471" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;field_delim&lt;/code&gt;&lt;/b&gt;: (Optional.) A &lt;a href=&quot;../../../../../tf#string&quot;&gt;&lt;code&gt;tf.string&lt;/code&gt;&lt;/a&gt; scalar containing the delimiter character that separates fields in a record. Defaults to &lt;code&gt;&quot;,&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;field_delim&lt;/code&gt; &lt;/b&gt;：（オプション）レコードのフィールドを区切る区切り文字を含む&lt;a href=&quot;../../../../../tf#string&quot;&gt; &lt;code&gt;tf.string&lt;/code&gt; &lt;/a&gt;スカラー。デフォルトは &lt;code&gt;&quot;,&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="28ebe0377269d36eca7a8e19f871cb79331d6859" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;field_delim&lt;/code&gt;&lt;/b&gt;: (Optional.) A &lt;a href=&quot;../../../tf#string&quot;&gt;&lt;code&gt;tf.string&lt;/code&gt;&lt;/a&gt; scalar containing the delimiter character that separates fields in a record. Defaults to &lt;code&gt;&quot;,&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;field_delim&lt;/code&gt; &lt;/b&gt;：（オプション）レコードのフィールドを区切る区切り文字を含む&lt;a href=&quot;../../../tf#string&quot;&gt; &lt;code&gt;tf.string&lt;/code&gt; &lt;/a&gt;スカラー。デフォルトは &lt;code&gt;&quot;,&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="b0e76c7c8e1082d8cf9f1c098e2792f246ff7d5b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;field_delim&lt;/code&gt;&lt;/b&gt;: An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;,&quot;&lt;/code&gt;. Char delimiter to separate fields in a record.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;field_delim&lt;/code&gt; &lt;/b&gt;：オプションの &lt;code&gt;string&lt;/code&gt; 。デフォルトは &lt;code&gt;&quot;,&quot;&lt;/code&gt; です。レコード内のフィールドを区切る文字区切り文字。</target>
        </trans-unit>
        <trans-unit id="25de6b03dfa61f28291360a56cc4a297b044405a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;field_delim&lt;/code&gt;&lt;/b&gt;: An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;,&quot;&lt;/code&gt;. char delimiter to separate fields in a record.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;field_delim&lt;/code&gt; &lt;/b&gt;：オプションの &lt;code&gt;string&lt;/code&gt; 。デフォルトは &lt;code&gt;&quot;,&quot;&lt;/code&gt; です。レコード内のフィールドを区切る文字区切り文字。</target>
        </trans-unit>
        <trans-unit id="48687510ecd035aaca4077f58a51df8f3d800186" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;field_names&lt;/code&gt;&lt;/b&gt;: A list of &lt;code&gt;strings&lt;/code&gt;. List of strings containing proto field names.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;field_names&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;strings&lt;/code&gt; のリスト。プロトフィールド名を含む文字列のリスト。</target>
        </trans-unit>
        <trans-unit id="3bac6576c693530f13d485bb0b98c92a14057385" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;field_names&lt;/code&gt;&lt;/b&gt;: A list of &lt;code&gt;strings&lt;/code&gt;. List of strings containing proto field names. An extension field can be decoded by using its full name, e.g. EXT_PACKAGE.EXT_FIELD_NAME.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;field_names&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;strings&lt;/code&gt; のリスト。プロトフィールド名を含む文字列のリスト。拡張フィールドは、EXT_PACKAGE.EXT_FIELD_NAMEなどのフルネームを使用してデコードできます。</target>
        </trans-unit>
        <trans-unit id="0a1371a38981b79230ed55ea7f9047379c18a05a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;file_format&lt;/code&gt;&lt;/b&gt;: Optional file format override. If omitted, the format to use is determined from the filename extension. If a file object was used instead of a filename, this parameter should always be used.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;file_format&lt;/code&gt; &lt;/b&gt;：オプションのファイル形式のオーバーライド。省略した場合、使用する形式はファイル名拡張子から決定されます。ファイル名の代わりにファイルオブジェクトが使用された場合、このパラメーターを常に使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="9f25df5790e6ee5d91eab0aec95e25810e1f1078" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;file_hash&lt;/code&gt;&lt;/b&gt;: The expected hash string of the file after download. The sha256 and md5 hash algorithms are both supported.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;file_hash&lt;/code&gt; &lt;/b&gt;：ダウンロード後に予想されるファイルのハッシュ文字列。sha256とmd5ハッシュアルゴリズムの両方がサポートされています。</target>
        </trans-unit>
        <trans-unit id="458bd1162631ed92409ba83e32ee9b823873ca3c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;file_path&lt;/code&gt;&lt;/b&gt;: Optional file path for the temp file. If not given, a unique file name will be generated and used. Slashes are allowed in the name; any missing intermediate directories will be created. NOTE: This path is the path that will be cleaned up, including any directories in the path, e.g., 'foo/bar/baz.txt' will &lt;code&gt;rm -r foo&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;file_path&lt;/code&gt; &lt;/b&gt;：一時ファイルのオプションのファイルパス。指定しない場合、一意のファイル名が生成され、使用されます。名前にはスラッシュを使用できます。不足している中間ディレクトリがあれば作成されます。注：このパスは、クリーンアップされるパスです。パス内のすべてのディレクトリを含みます。たとえば、「foo / bar / baz.txt」は &lt;code&gt;rm -r foo&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="af80f79d18138cf10965b7f04684ae3d20bcb7d1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;file_pattern&lt;/code&gt;&lt;/b&gt;: A string, a list of strings, or a &lt;a href=&quot;../../../../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt; of string type (scalar or vector), representing the filename glob (i.e. shell wildcard) pattern(s) that will be matched.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;file_pattern&lt;/code&gt; &lt;/b&gt;：文字列、文字列のリスト、または文字列型（スカラーまたはベクトル）の&lt;a href=&quot;../../../../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; 。これ&lt;/a&gt;は、一致するファイル名グロブ（つまりシェルワイルドカード）パターンを表します。</target>
        </trans-unit>
        <trans-unit id="bb49d051c02747a37ece94b1742cc57b6a1bca88" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;file_pattern&lt;/code&gt;&lt;/b&gt;: A string, a list of strings, or a &lt;a href=&quot;../../../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt; of string type (scalar or vector), representing the filename glob (i.e. shell wildcard) pattern(s) that will be matched.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;file_pattern&lt;/code&gt; &lt;/b&gt;：文字列、文字列のリスト、または文字列型（スカラーまたはベクトル）の&lt;a href=&quot;../../../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; 。これ&lt;/a&gt;は、一致するファイル名グロブ（つまりシェルワイルドカード）パターンを表します。</target>
        </trans-unit>
        <trans-unit id="0903cc246f00526b13ca0735311b44598df16da1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;file_pattern&lt;/code&gt;&lt;/b&gt;: A string, a list of strings, or a &lt;a href=&quot;../../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt; of string type (scalar or vector), representing the filename glob (i.e. shell wildcard) pattern(s) that will be matched.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;file_pattern&lt;/code&gt; &lt;/b&gt;：文字列、文字列のリスト、または文字列型（スカラーまたはベクトル）の&lt;a href=&quot;../../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; 。これ&lt;/a&gt;は、一致するファイル名グロブ（つまりシェルワイルドカード）パターンを表します。</target>
        </trans-unit>
        <trans-unit id="966a3bcf61f035f1c529fe2721fe2daa084745a2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;file_pattern&lt;/code&gt;&lt;/b&gt;: A string, a list of strings, or a &lt;a href=&quot;../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt; of string type (scalar or vector), representing the filename glob (i.e. shell wildcard) pattern(s) that will be matched.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;file_pattern&lt;/code&gt; &lt;/b&gt;：文字列、文字列のリスト、または文字列型（スカラーまたはベクトル）の&lt;a href=&quot;../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; 。これ&lt;/a&gt;は、一致するファイル名グロブ（つまりシェルワイルドカード）パターンを表します。</target>
        </trans-unit>
        <trans-unit id="0654b3a2831f97cbe1bd0a9b6685460355f2c423" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;file_pattern&lt;/code&gt;&lt;/b&gt;: List of files or patterns of file paths containing &lt;code&gt;Example&lt;/code&gt; records. See &lt;a href=&quot;../../../../io/gfile/glob&quot;&gt;&lt;code&gt;tf.io.gfile.glob&lt;/code&gt;&lt;/a&gt; for pattern rules.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;file_pattern&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Example&lt;/code&gt; レコードを含むファイルまたはファイルパスのパターンのリスト。パターン規則については、&lt;a href=&quot;../../../../io/gfile/glob&quot;&gt; &lt;code&gt;tf.io.gfile.glob&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="ad210f4c30baefc3d728aae60afa73ed935fbb5b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;file_pattern&lt;/code&gt;&lt;/b&gt;: List of files or patterns of file paths containing &lt;code&gt;Example&lt;/code&gt; records. See &lt;a href=&quot;../../io/gfile/glob&quot;&gt;&lt;code&gt;tf.io.gfile.glob&lt;/code&gt;&lt;/a&gt; for pattern rules.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;file_pattern&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Example&lt;/code&gt; レコードを含むファイルまたはファイルパスのパターンのリスト。パターン規則については、&lt;a href=&quot;../../io/gfile/glob&quot;&gt; &lt;code&gt;tf.io.gfile.glob&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="57a821c98b3b4c8bf9044bdf390180df1ceb1503" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;file_pattern&lt;/code&gt;&lt;/b&gt;: List of files or patterns of file paths containing CSV records. See &lt;a href=&quot;../../../../io/gfile/glob&quot;&gt;&lt;code&gt;tf.io.gfile.glob&lt;/code&gt;&lt;/a&gt; for pattern rules.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;file_pattern&lt;/code&gt; &lt;/b&gt;：CSVレコードを含むファイルまたはファイルパスのパターンのリスト。パターン規則については、&lt;a href=&quot;../../../../io/gfile/glob&quot;&gt; &lt;code&gt;tf.io.gfile.glob&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="0e3d1e7ee821bc8ede79475ef95fa148fbe825f1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;file_pattern&lt;/code&gt;&lt;/b&gt;: List of files or patterns of file paths containing CSV records. See &lt;a href=&quot;../../io/gfile/glob&quot;&gt;&lt;code&gt;tf.io.gfile.glob&lt;/code&gt;&lt;/a&gt; for pattern rules.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;file_pattern&lt;/code&gt; &lt;/b&gt;：CSVレコードを含むファイルまたはファイルパスのパターンのリスト。パターン規則については、&lt;a href=&quot;../../io/gfile/glob&quot;&gt; &lt;code&gt;tf.io.gfile.glob&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="76347e226cbc01999c64a414600757e91430a1b2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;file_prefix&lt;/code&gt;&lt;/b&gt;: A prefix to use for the checkpoint filenames (/path/to/directory/and_a_prefix).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;file_prefix&lt;/code&gt; &lt;/b&gt;：チェックポイントファイル名に使用するプレフィックス（/ path / to / directory / and_a_prefix）。</target>
        </trans-unit>
        <trans-unit id="9b170f2a5e71005991c09069b7ed6c051f74bdf6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;file_prefix&lt;/code&gt;&lt;/b&gt;: A prefix to use for the checkpoint filenames (/path/to/directory/and_a_prefix). Names are generated based on this prefix and &lt;a href=&quot;../../../train/checkpoint#save_counter&quot;&gt;&lt;code&gt;Checkpoint.save_counter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;file_prefix&lt;/code&gt; &lt;/b&gt;：チェックポイントのファイル名に使用するプレフィックス（/ path / to / directory / and_a_prefix）。名前は、このプレフィックスと&lt;a href=&quot;../../../train/checkpoint#save_counter&quot;&gt; &lt;code&gt;Checkpoint.save_counter&lt;/code&gt; に&lt;/a&gt;基づいて生成されます。</target>
        </trans-unit>
        <trans-unit id="c0df6358adce3fe2d4a16f4c86332edb90ebb5d0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;file_prefix&lt;/code&gt;&lt;/b&gt;: A prefix to use for the checkpoint filenames (/path/to/directory/and_a_prefix). Names are generated based on this prefix and &lt;a href=&quot;checkpoint#save_counter&quot;&gt;&lt;code&gt;Checkpoint.save_counter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;file_prefix&lt;/code&gt; &lt;/b&gt;：チェックポイントのファイル名に使用するプレフィックス（/ path / to / directory / and_a_prefix）。名前は、このプレフィックスと&lt;a href=&quot;checkpoint#save_counter&quot;&gt; &lt;code&gt;Checkpoint.save_counter&lt;/code&gt; に&lt;/a&gt;基づいて生成されます。</target>
        </trans-unit>
        <trans-unit id="00bae43fa5e83fdc7b2edebe18d4bc3152e8c20a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filename&lt;/code&gt;&lt;/b&gt;: A &lt;a href=&quot;../../../../../tf#string&quot;&gt;&lt;code&gt;tf.string&lt;/code&gt;&lt;/a&gt; scalar &lt;a href=&quot;../../../../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt;, representing the name of a directory on the filesystem to use for caching elements in this Dataset. If a filename is not provided, the dataset will be cached in memory.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filename&lt;/code&gt; &lt;/b&gt;：&lt;a href=&quot;../../../../../tf#string&quot;&gt; &lt;code&gt;tf.string&lt;/code&gt; &lt;/a&gt;スカラー&lt;a href=&quot;../../../../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt;。このDatasetの要素をキャッシュするために使用するファイルシステム上のディレクトリの名前を表します。ファイル名が指定されていない場合、データセットはメモリにキャッシュされます。</target>
        </trans-unit>
        <trans-unit id="d4c3ae989b1dc8a0710fbcdb880b9335dd2ea63f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filename&lt;/code&gt;&lt;/b&gt;: A &lt;a href=&quot;../../../../tf#string&quot;&gt;&lt;code&gt;tf.string&lt;/code&gt;&lt;/a&gt; scalar &lt;a href=&quot;../../../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt;, representing the name of a directory on the filesystem to use for caching elements in this Dataset. If a filename is not provided, the dataset will be cached in memory.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filename&lt;/code&gt; &lt;/b&gt;：&lt;a href=&quot;../../../../tf#string&quot;&gt; &lt;code&gt;tf.string&lt;/code&gt; &lt;/a&gt;スカラー&lt;a href=&quot;../../../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt;。このDatasetの要素をキャッシュするために使用するファイルシステム上のディレクトリの名前を表します。ファイル名が指定されていない場合、データセットはメモリにキャッシュされます。</target>
        </trans-unit>
        <trans-unit id="c196046b04961a8fd160692ae0a5edde7a4cf4b8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filename&lt;/code&gt;&lt;/b&gt;: A &lt;a href=&quot;../../../tf#string&quot;&gt;&lt;code&gt;tf.string&lt;/code&gt;&lt;/a&gt; scalar &lt;a href=&quot;../../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt;, representing the name of a directory on the filesystem to use for caching elements in this Dataset. If a filename is not provided, the dataset will be cached in memory.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filename&lt;/code&gt; &lt;/b&gt;：&lt;a href=&quot;../../../tf#string&quot;&gt; &lt;code&gt;tf.string&lt;/code&gt; &lt;/a&gt;スカラー&lt;a href=&quot;../../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt;。このDatasetの要素をキャッシュするために使用するファイルシステム上のディレクトリの名前を表します。ファイル名が指定されていない場合、データセットはメモリにキャッシュされます。</target>
        </trans-unit>
        <trans-unit id="6748e1abedc73ec7480419b41574d3ec1815a35b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filename&lt;/code&gt;&lt;/b&gt;: A &lt;a href=&quot;../../tf#string&quot;&gt;&lt;code&gt;tf.string&lt;/code&gt;&lt;/a&gt; scalar &lt;a href=&quot;../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt;, representing the name of a directory on the filesystem to use for caching elements in this Dataset. If a filename is not provided, the dataset will be cached in memory.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filename&lt;/code&gt; &lt;/b&gt;：&lt;a href=&quot;../../tf#string&quot;&gt; &lt;code&gt;tf.string&lt;/code&gt; &lt;/a&gt;スカラー&lt;a href=&quot;../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt;。このDatasetの要素をキャッシュするために使用するファイルシステム上のディレクトリの名前を表します。ファイル名が指定されていない場合、データセットはメモリにキャッシュされます。</target>
        </trans-unit>
        <trans-unit id="94b1d7d7e3fc75e79c5e3042dc1b488758323c48" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filename&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filename&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;string&lt;/code&gt; 型の &lt;code&gt;Tensor&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="69651a1838e5ca0bcc1f8361b41b75eb15479fd4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filename&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. scalar. The name of the file to which we write the contents.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filename&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;string&lt;/code&gt; 型の &lt;code&gt;Tensor&lt;/code&gt; 。スカラー。内容を書き込むファイルの名前。</target>
        </trans-unit>
        <trans-unit id="aafc836084aebb8009fc17657b59164b0e373f85" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filename&lt;/code&gt;&lt;/b&gt;: If known at graph construction time, filename used for variable loading/saving.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filename&lt;/code&gt; &lt;/b&gt;：グラフの作成時にわかっている場合、変数のロード/保存に使用されるファイル名。</target>
        </trans-unit>
        <trans-unit id="fb07d88ae4478cc6c887e21751f5dc3054cff910" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filename&lt;/code&gt;&lt;/b&gt;: Optional filename including the path for writing the generated &lt;code&gt;MetaGraphDef&lt;/code&gt; protocol buffer.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filename&lt;/code&gt; &lt;/b&gt;：オプションのファイル名。生成された &lt;code&gt;MetaGraphDef&lt;/code&gt; プロトコルバッファーを書き込むためのパスを含みます。</target>
        </trans-unit>
        <trans-unit id="1933befdfcebefaac5b9636d9ceb63018b97fee8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filename&lt;/code&gt;&lt;/b&gt;: Optional meta_graph filename including the path.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filename&lt;/code&gt; &lt;/b&gt;：パスを含むオプションのmeta_graphファイル名。</target>
        </trans-unit>
        <trans-unit id="8a523a28c9621067190a3dcb62d76e5724869765" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filename&lt;/code&gt;&lt;/b&gt;: The filename of the text file to be used for initialization. The path must be accessible from wherever the graph is initialized (eg. trainer or eval workers). The filename may be a scalar &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filename&lt;/code&gt; &lt;/b&gt;：初期化に使用されるテキストファイルのファイル名。パスは、グラフが初期化されている場所（トレーナーや評価ワーカーなど）からアクセスできる必要があります。ファイル名はスカラー &lt;code&gt;Tensor&lt;/code&gt; の場合があります。</target>
        </trans-unit>
        <trans-unit id="603cb8eb119c589c750a8caa73930a74f9ae2358" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filename&lt;/code&gt;&lt;/b&gt;: a string path indicating where to write the TFRecord data.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filename&lt;/code&gt; &lt;/b&gt;：TFRecordデータを書き込む場所を示す文字列パス。</target>
        </trans-unit>
        <trans-unit id="9e41aebbf1952ff4c8844c44b8dfa3645f45be6e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filename&lt;/code&gt;&lt;/b&gt;: filename of the csv file, e.g. 'run/log.csv'.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filename&lt;/code&gt; &lt;/b&gt;：csvファイルのファイル名（例： 'run / log.csv'）。</target>
        </trans-unit>
        <trans-unit id="79af45475486a3a27c945419189f831a01ca9dba" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filename&lt;/code&gt;&lt;/b&gt;: str, name of the file.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filename&lt;/code&gt; &lt;/b&gt;：str、ファイルの名前。</target>
        </trans-unit>
        <trans-unit id="7387bd2657b0ae9338ad8879edc11d1e12d14fb9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filename&lt;/code&gt;&lt;/b&gt;: string or iterable of strings. The glob pattern(s).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filename&lt;/code&gt; &lt;/b&gt;：文字列または文字列の反復可能。グロブパターン。</target>
        </trans-unit>
        <trans-unit id="2a8cecd272039e98cbaedcd14ba0d31a224a90b3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filename&lt;/code&gt;&lt;/b&gt;: string, a filename</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filename&lt;/code&gt; &lt;/b&gt;：文字列、ファイル名</target>
        </trans-unit>
        <trans-unit id="6eb2b2705ac1dcafc915cb8dec760ac97002f355" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filename&lt;/code&gt;&lt;/b&gt;: string, a path</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filename&lt;/code&gt; &lt;/b&gt;：文字列、パス</target>
        </trans-unit>
        <trans-unit id="441728052a7f42c75d91b7d2e1570cdaaf910109" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filename&lt;/code&gt;&lt;/b&gt;: string, path to a file</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filename&lt;/code&gt; &lt;/b&gt;：文字列、ファイルへのパス</target>
        </trans-unit>
        <trans-unit id="187bee72e1b084808f03706bca85a27e4f1848fc" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filename_suffix&lt;/code&gt;&lt;/b&gt;: A string. Every event file's name is suffixed with &lt;code&gt;suffix&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filename_suffix&lt;/code&gt; &lt;/b&gt;：文字列。すべてのイベントファイルの名前には、 &lt;code&gt;suffix&lt;/code&gt; が付いています。</target>
        </trans-unit>
        <trans-unit id="827f0e54f2055fe640c2cbe2e9af9d9f0f2b17ba" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filename_suffix&lt;/code&gt;&lt;/b&gt;: optional suffix for the event file name. Defaults to &lt;code&gt;.v2&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filename_suffix&lt;/code&gt; &lt;/b&gt;：イベントファイル名のオプションのサフィックス。デフォルトは &lt;code&gt;.v2&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="6ed310da40c77ca498d9d880e83e005f5c520f65" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filenames&lt;/code&gt;&lt;/b&gt;: A &lt;a href=&quot;../../../../../tf#string&quot;&gt;&lt;code&gt;tf.string&lt;/code&gt;&lt;/a&gt; tensor containing one or more filenames.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filenames&lt;/code&gt; &lt;/b&gt;：1つ以上のファイル名を含む&lt;a href=&quot;../../../../../tf#string&quot;&gt; &lt;code&gt;tf.string&lt;/code&gt; &lt;/a&gt;テンソル。</target>
        </trans-unit>
        <trans-unit id="1dd0ac60c8280b954dc80802ab33035b8c47a6bf" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filenames&lt;/code&gt;&lt;/b&gt;: A &lt;a href=&quot;../../../../tf#string&quot;&gt;&lt;code&gt;tf.string&lt;/code&gt;&lt;/a&gt; tensor or &lt;a href=&quot;../../../data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; containing one or more filenames.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filenames&lt;/code&gt; &lt;/b&gt;：1つ以上のファイル名を含む&lt;a href=&quot;../../../../tf#string&quot;&gt; &lt;code&gt;tf.string&lt;/code&gt; &lt;/a&gt;テンソルまたは&lt;a href=&quot;../../../data/dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="513554040db4808eeeea40ed4e4503c748aa46af" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filenames&lt;/code&gt;&lt;/b&gt;: A &lt;a href=&quot;../../../tf#string&quot;&gt;&lt;code&gt;tf.string&lt;/code&gt;&lt;/a&gt; tensor containing one or more filenames.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filenames&lt;/code&gt; &lt;/b&gt;：1つ以上のファイル名を含む&lt;a href=&quot;../../../tf#string&quot;&gt; &lt;code&gt;tf.string&lt;/code&gt; &lt;/a&gt;テンソル。</target>
        </trans-unit>
        <trans-unit id="6a5faa02d520b6f69d9fd8bdb03c4c85ad93903c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filenames&lt;/code&gt;&lt;/b&gt;: A &lt;a href=&quot;../../tf#string&quot;&gt;&lt;code&gt;tf.string&lt;/code&gt;&lt;/a&gt; tensor or &lt;a href=&quot;dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; containing one or more filenames.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filenames&lt;/code&gt; &lt;/b&gt;：1つ以上のファイル名を含む&lt;a href=&quot;../../tf#string&quot;&gt; &lt;code&gt;tf.string&lt;/code&gt; &lt;/a&gt;テンソルまたは&lt;a href=&quot;dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="68fc06fe27b902b52769797197d89b53f6229f22" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filepath&lt;/code&gt;&lt;/b&gt;: One of the following:</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filepath&lt;/code&gt; &lt;/b&gt;：次のいずれか：</target>
        </trans-unit>
        <trans-unit id="169b24e2d7e18aee13fa3928c7ade9cbb3dcdd5d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filepath&lt;/code&gt;&lt;/b&gt;: String, path to SavedModel or H5 file to save the model.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filepath&lt;/code&gt; &lt;/b&gt;：文字列、モデルを保存するためのSavedModelまたはH5ファイルへのパス。</target>
        </trans-unit>
        <trans-unit id="1b9fbc4fed1dd46e9d425aabcae528f45065a252" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filepath&lt;/code&gt;&lt;/b&gt;: String, path to the file to save the weights to. When saving in TensorFlow format, this is the prefix used for checkpoint files (multiple files are generated). Note that the '.h5' suffix causes weights to be saved in HDF5 format.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filepath&lt;/code&gt; &lt;/b&gt;：文字列、重みを保存するファイルへのパス。TensorFlow形式で保存する場合、これはチェックポイントファイルに使用されるプレフィックスです（複数のファイルが生成されます）。'.h5'サフィックスを使用すると、重みがHDF5形式で保存されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="b046c8d1f1683b18a0ef568259acef07a08dcd64" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filepath&lt;/code&gt;&lt;/b&gt;: String, path to the weights file to load. For weight files in TensorFlow format, this is the file prefix (the same as was passed to &lt;code&gt;save_weights&lt;/code&gt;).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filepath&lt;/code&gt; &lt;/b&gt;：文字列、ロードするウェイトファイルへのパス。TensorFlow形式のウェイトファイルの場合、これはファイルプレフィックスです（ &lt;code&gt;save_weights&lt;/code&gt; に渡されたものと同じ）。</target>
        </trans-unit>
        <trans-unit id="4534d70e06f16be545ccc3d79e67db81b55d76e5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filepath&lt;/code&gt;&lt;/b&gt;: string, path to save the model file.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filepath&lt;/code&gt; &lt;/b&gt;：文字列、モデルファイルを保存するパス。</target>
        </trans-unit>
        <trans-unit id="934eed605ce0b30e0d8774960a1424093e5adfdc" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filepattern&lt;/code&gt;&lt;/b&gt;: The filename.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filepattern&lt;/code&gt; &lt;/b&gt;：ファイル名。</target>
        </trans-unit>
        <trans-unit id="a9091d97e7edc27b74e526d82a375e6945be7d3b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fill&lt;/code&gt;&lt;/b&gt;: An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;. The value to pad if width &amp;gt; -1. If empty, pads with spaces. Another typical value is '0'. String cannot be longer than 1 character.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fill&lt;/code&gt; &lt;/b&gt;：オプションの &lt;code&gt;string&lt;/code&gt; 。デフォルトは &lt;code&gt;&quot;&quot;&lt;/code&gt; です。幅&amp;gt; -1の場合にパディングする値。空の場合は、スペースで埋めます。別の典型的な値は「0」です。文字列は1文字より長くすることはできません。</target>
        </trans-unit>
        <trans-unit id="a1db14ba19942ba29c13e70a4c9be46818d9d36a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fill_mode&lt;/code&gt;&lt;/b&gt;: One of {&quot;constant&quot;, &quot;nearest&quot;, &quot;reflect&quot; or &quot;wrap&quot;}. Default is 'nearest'. Points outside the boundaries of the input are filled according to the given mode:</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fill_mode&lt;/code&gt; &lt;/b&gt;：{&quot;constant&quot;、 &quot;nearest&quot;、 &quot;reflect&quot;または &quot;wrap&quot;}のいずれか。デフォルトは 'nearest'です。入力の境界外のポイントは、指定されたモードに従って塗りつぶされます。</target>
        </trans-unit>
        <trans-unit id="37811d3dbfab363525e11bd40d0e220d3ae881e2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/b&gt;: 4-D with shape &lt;code&gt;[filter_height, filter_width, in_channels, channel_multiplier]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filter&lt;/code&gt; &lt;/b&gt;：4次元の形状 &lt;code&gt;[filter_height, filter_width, in_channels, channel_multiplier]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ff4a4f0f40aab8196e2d91f00e2c95ad812da660" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/b&gt;: A 4-D &lt;code&gt;Tensor&lt;/code&gt; with the same type as &lt;code&gt;value&lt;/code&gt; and shape &lt;code&gt;[height, width, output_channels, in_channels]&lt;/code&gt;. &lt;code&gt;filter&lt;/code&gt;'s &lt;code&gt;in_channels&lt;/code&gt; dimension must match that of &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filter&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;value&lt;/code&gt; と形状と同じタイプの4次元 &lt;code&gt;Tensor&lt;/code&gt; &lt;code&gt;[height, width, output_channels, in_channels]&lt;/code&gt; 。 &lt;code&gt;filter&lt;/code&gt; の &lt;code&gt;in_channels&lt;/code&gt; ディメンションは、 &lt;code&gt;value&lt;/code&gt; ディメンションと一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="923c06d879ae0b9ff6e3eb07c4ae0694509cda42" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/b&gt;: A 5-D &lt;code&gt;Tensor&lt;/code&gt; with the same type as &lt;code&gt;value&lt;/code&gt; and shape &lt;code&gt;[depth, height, width, output_channels, in_channels]&lt;/code&gt;. &lt;code&gt;filter&lt;/code&gt;'s &lt;code&gt;in_channels&lt;/code&gt; dimension must match that of &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filter&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;value&lt;/code&gt; と形状と同じタイプの5次元 &lt;code&gt;Tensor&lt;/code&gt; &lt;code&gt;[depth, height, width, output_channels, in_channels]&lt;/code&gt; 。 &lt;code&gt;filter&lt;/code&gt; の &lt;code&gt;in_channels&lt;/code&gt; ディメンションは、 &lt;code&gt;value&lt;/code&gt; ディメンションと一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="827405e9358864dc57fdf18348b911178f0fd4ea" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. 4-D with shape &lt;code&gt;[filter_height, filter_width, in_channels, depthwise_multiplier]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filter&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。次のタイプのいずれかでなければなりません： &lt;code&gt;half&lt;/code&gt; 、 &lt;code&gt;bfloat16&lt;/code&gt; 、 &lt;code&gt;float32&lt;/code&gt; 、 &lt;code&gt;float64&lt;/code&gt; 。形状 &lt;code&gt;[filter_height, filter_width, in_channels, depthwise_multiplier]&lt;/code&gt; 4次元。</target>
        </trans-unit>
        <trans-unit id="28dd66a1fb5cad7ab1b3caf3990a9103eba4ae4b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. 4-D with shape &lt;code&gt;[filter_height, filter_width, in_channels, out_channels]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filter&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。次のタイプのいずれかでなければなりません： &lt;code&gt;half&lt;/code&gt; 、 &lt;code&gt;bfloat16&lt;/code&gt; 、 &lt;code&gt;float32&lt;/code&gt; 、 &lt;code&gt;float64&lt;/code&gt; 。形状 &lt;code&gt;[filter_height, filter_width, in_channels, out_channels]&lt;/code&gt; 4次元。</target>
        </trans-unit>
        <trans-unit id="395209c511e8f94b6355cd8bb416d001d7d5532e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;qint16&lt;/code&gt;, &lt;code&gt;quint16&lt;/code&gt;. filter's input_depth dimension must match input's depth dimensions.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filter&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。次のタイプのいずれかでなければなりません： &lt;code&gt;qint8&lt;/code&gt; 、 &lt;code&gt;quint8&lt;/code&gt; 、 &lt;code&gt;qint32&lt;/code&gt; 、 &lt;code&gt;qint16&lt;/code&gt; 、 &lt;code&gt;quint16&lt;/code&gt; 。フィルターのinput_depthディメンションは、入力の深度ディメンションと一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="763a3b9e0702b57f18c7afc2a425a720bbcc7b30" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;input&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filter&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。 &lt;code&gt;input&lt;/code&gt; と同じタイプでなければなりません。</target>
        </trans-unit>
        <trans-unit id="19a9f17785dbdd5fbd3cd6965518fd2760552098" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;input&lt;/code&gt;. 3-D with shape &lt;code&gt;[filter_height, filter_width, depth]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filter&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。 &lt;code&gt;input&lt;/code&gt; と同じタイプでなければなりません。形状 &lt;code&gt;[filter_height, filter_width, depth]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dc3f1ee3e07a3b305f70f5e09f6d05036e7a8907" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;input&lt;/code&gt;. A 4-D tensor of shape &lt;code&gt;[filter_height, filter_width, in_channels, out_channels]&lt;/code&gt;</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filter&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。 &lt;code&gt;input&lt;/code&gt; と同じタイプでなければなりません。形状の4次元テンソル &lt;code&gt;[filter_height, filter_width, in_channels, out_channels]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5d4ef72a0326cdea1a3cdb30587600b7a58fefdd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;input&lt;/code&gt;. Shape &lt;code&gt;[filter_depth, filter_height, filter_width, in_channels, out_channels]&lt;/code&gt;. &lt;code&gt;in_channels&lt;/code&gt; must match between &lt;code&gt;input&lt;/code&gt; and &lt;code&gt;filter&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filter&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。 &lt;code&gt;input&lt;/code&gt; と同じタイプでなければなりません。形状 &lt;code&gt;[filter_depth, filter_height, filter_width, in_channels, out_channels]&lt;/code&gt; 。 &lt;code&gt;in_channels&lt;/code&gt; は、 &lt;code&gt;input&lt;/code&gt; と &lt;code&gt;filter&lt;/code&gt; 間で一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="7f932b91e98960061693ee974bf7b7a9e559efa7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/b&gt;: An (N+2)-D &lt;code&gt;Tensor&lt;/code&gt; with the same type as &lt;code&gt;input&lt;/code&gt; and shape &lt;code&gt;spatial_filter_shape + [in_channels, out_channels]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filter&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;input&lt;/code&gt; と形状が同じ型の（N + 2）-D &lt;code&gt;Tensor&lt;/code&gt; &lt;code&gt;spatial_filter_shape + [in_channels, out_channels]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="be70bd7cb11c3ddf2418488f71c24a5c998c949c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filter_shape&lt;/code&gt;&lt;/b&gt;: If padding = &quot;SAME&quot;, specifies the shape of the convolution kernel/pooling window as an integer Tensor of shape [&amp;gt;=num_spatial_dims]. If padding = &quot;VALID&quot;, filter_shape is ignored and need not be specified.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filter_shape&lt;/code&gt; &lt;/b&gt;：padding = &quot;SAME&quot;の場合、畳み込みカーネル/プーリングウィンドウの形状を形状の整数Tensor [&amp;gt; = num_spatial_dims]として指定します。padding = &quot;VALID&quot;の場合、filter_shapeは無視され、指定する必要はありません。</target>
        </trans-unit>
        <trans-unit id="55e427ec4b1b10dbc360d4651781d4fcde609953" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filter_sigma&lt;/code&gt;&lt;/b&gt;: Default value 1.5 (width of gaussian filter).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filter_sigma&lt;/code&gt; &lt;/b&gt;：デフォルト値1.5（ガウスフィルターの幅）。</target>
        </trans-unit>
        <trans-unit id="bcd67bc3b349db340860d76e69b54feb3399c777" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filter_size&lt;/code&gt;&lt;/b&gt;: Default value 11 (size of gaussian filter).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filter_size&lt;/code&gt; &lt;/b&gt;：デフォルト値11（ガウスフィルターのサイズ）。</target>
        </trans-unit>
        <trans-unit id="1f254ac8f2715633638e4f8518a1bf59fd44b380" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filter_sizes&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. An integer vector representing the tensor shape of &lt;code&gt;filter&lt;/code&gt;, where &lt;code&gt;filter&lt;/code&gt; is a 4-D &lt;code&gt;[filter_height, filter_width, in_channels, depthwise_multiplier]&lt;/code&gt; tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filter_sizes&lt;/code&gt; &lt;/b&gt;：タイプ &lt;code&gt;int32&lt;/code&gt; の &lt;code&gt;Tensor&lt;/code&gt; 。 &lt;code&gt;filter&lt;/code&gt; のテンソル形状を表す整数ベクトル。ここで、 &lt;code&gt;filter&lt;/code&gt; は4次元 &lt;code&gt;[filter_height, filter_width, in_channels, depthwise_multiplier]&lt;/code&gt; テンソルです。</target>
        </trans-unit>
        <trans-unit id="5ad1fbd4a5bb79adddf2c718baf748f55666138b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filter_sizes&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. An integer vector representing the tensor shape of &lt;code&gt;filter&lt;/code&gt;, where &lt;code&gt;filter&lt;/code&gt; is a 4-D &lt;code&gt;[filter_height, filter_width, in_channels, out_channels]&lt;/code&gt; tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filter_sizes&lt;/code&gt; &lt;/b&gt;：タイプ &lt;code&gt;int32&lt;/code&gt; の &lt;code&gt;Tensor&lt;/code&gt; 。 &lt;code&gt;filter&lt;/code&gt; のテンソル形状を表す整数ベクトル。ここで、 &lt;code&gt;filter&lt;/code&gt; は4次元 &lt;code&gt;[filter_height, filter_width, in_channels, out_channels]&lt;/code&gt; テンソルです。</target>
        </trans-unit>
        <trans-unit id="9a1dcc0e17959c1a9e87c5197762074b7ce78960" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filter_sizes&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. An integer vector representing the tensor shape of &lt;code&gt;filter&lt;/code&gt;, where &lt;code&gt;filter&lt;/code&gt; is a 5-D &lt;code&gt;[filter_depth, filter_height, filter_width, in_channels, out_channels]&lt;/code&gt; tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filter_sizes&lt;/code&gt; &lt;/b&gt;：タイプ &lt;code&gt;int32&lt;/code&gt; の &lt;code&gt;Tensor&lt;/code&gt; 。 &lt;code&gt;filter&lt;/code&gt; のテンソル形状を表す整数ベクトル。ここで、 &lt;code&gt;filter&lt;/code&gt; は5次元 &lt;code&gt;[filter_depth, filter_height, filter_width, in_channels, out_channels]&lt;/code&gt; テンソルです。</target>
        </trans-unit>
        <trans-unit id="6f00b606e010af5f90fae31dca8f175221442bf2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filters&lt;/code&gt;&lt;/b&gt;: A 3-D &lt;code&gt;Tensor&lt;/code&gt; with the same type as &lt;code&gt;value&lt;/code&gt; and shape &lt;code&gt;[filter_width, output_channels, in_channels]&lt;/code&gt;. &lt;code&gt;filter&lt;/code&gt;'s &lt;code&gt;in_channels&lt;/code&gt; dimension must match that of &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filters&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;value&lt;/code&gt; およびshapeと同じタイプの3次元 &lt;code&gt;Tensor&lt;/code&gt; &lt;code&gt;[filter_width, output_channels, in_channels]&lt;/code&gt; 。 &lt;code&gt;filter&lt;/code&gt; の &lt;code&gt;in_channels&lt;/code&gt; ディメンションは、 &lt;code&gt;value&lt;/code&gt; ディメンションと一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="d078584a318c033ffe40339259eb4532b7f002c5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filters&lt;/code&gt;&lt;/b&gt;: A 3D &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;input&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filters&lt;/code&gt; &lt;/b&gt;：3D &lt;code&gt;Tensor&lt;/code&gt; 。 &lt;code&gt;input&lt;/code&gt; と同じタイプでなければなりません。</target>
        </trans-unit>
        <trans-unit id="9272dfbd692668c822ddf28055e0af3240844f19" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filters&lt;/code&gt;&lt;/b&gt;: A 3D &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filters&lt;/code&gt; &lt;/b&gt;：3D &lt;code&gt;Tensor&lt;/code&gt; 。 &lt;code&gt;value&lt;/code&gt; と同じ型でなければなりません。</target>
        </trans-unit>
        <trans-unit id="c450d158c9eec814f24867c8da3d6951108243da" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filters&lt;/code&gt;&lt;/b&gt;: A 4-D &lt;code&gt;Tensor&lt;/code&gt; with the same type as &lt;code&gt;input&lt;/code&gt; and shape &lt;code&gt;[height, width, output_channels, in_channels]&lt;/code&gt;. &lt;code&gt;filter&lt;/code&gt;'s &lt;code&gt;in_channels&lt;/code&gt; dimension must match that of &lt;code&gt;input&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filters&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;input&lt;/code&gt; および形状と同じタイプの4次元 &lt;code&gt;Tensor&lt;/code&gt; &lt;code&gt;[height, width, output_channels, in_channels]&lt;/code&gt; 。 &lt;code&gt;filter&lt;/code&gt; の &lt;code&gt;in_channels&lt;/code&gt; ディメンションは、 &lt;code&gt;input&lt;/code&gt; ディメンションと一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="740bfa27afe645fe1e35de690c3e8fee2955d5d3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filters&lt;/code&gt;&lt;/b&gt;: A 4-D &lt;code&gt;Tensor&lt;/code&gt; with the same type as &lt;code&gt;value&lt;/code&gt; and shape &lt;code&gt;[filter_height, filter_width, in_channels, out_channels]&lt;/code&gt;. &lt;code&gt;filters&lt;/code&gt;' &lt;code&gt;in_channels&lt;/code&gt; dimension must match that of &lt;code&gt;value&lt;/code&gt;. Atrous convolution is equivalent to standard convolution with upsampled filters with effective height &lt;code&gt;filter_height + (filter_height - 1) * (rate - 1)&lt;/code&gt; and effective width &lt;code&gt;filter_width + (filter_width - 1) * (rate - 1)&lt;/code&gt;, produced by inserting &lt;code&gt;rate - 1&lt;/code&gt; zeros along consecutive elements across the &lt;code&gt;filters&lt;/code&gt;' spatial dimensions.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filters&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;value&lt;/code&gt; と形状と同じタイプの4次元 &lt;code&gt;Tensor&lt;/code&gt; &lt;code&gt;[filter_height, filter_width, in_channels, out_channels]&lt;/code&gt; 。 &lt;code&gt;filters&lt;/code&gt; の &lt;code&gt;in_channels&lt;/code&gt; ディメンションは、 &lt;code&gt;value&lt;/code&gt; ディメンションと一致する必要があります。 Atrousたたみ込みは、実効高さ &lt;code&gt;filter_height + (filter_height - 1) * (rate - 1)&lt;/code&gt; と実効幅 &lt;code&gt;filter_width + (filter_width - 1) * (rate - 1)&lt;/code&gt; 持つアップサンプリングされたフィルターを使用した標準のたたみ込みに相当し、 &lt;code&gt;rate - 1&lt;/code&gt; ゼロを挿入することによって生成されます。 &lt;code&gt;filters&lt;/code&gt; の空間次元全体で連続する要素に沿って。</target>
        </trans-unit>
        <trans-unit id="2209a47d3a63d703c7b73f2e1ca770c82abfe908" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filters&lt;/code&gt;&lt;/b&gt;: A 4-D &lt;code&gt;Tensor&lt;/code&gt; with the same type as &lt;code&gt;value&lt;/code&gt; and shape &lt;code&gt;[filter_height, filter_width, out_channels, in_channels]&lt;/code&gt;. &lt;code&gt;filters&lt;/code&gt;' &lt;code&gt;in_channels&lt;/code&gt; dimension must match that of &lt;code&gt;value&lt;/code&gt;. Atrous convolution is equivalent to standard convolution with upsampled filters with effective height &lt;code&gt;filter_height + (filter_height - 1) * (rate - 1)&lt;/code&gt; and effective width &lt;code&gt;filter_width + (filter_width - 1) * (rate - 1)&lt;/code&gt;, produced by inserting &lt;code&gt;rate - 1&lt;/code&gt; zeros along consecutive elements across the &lt;code&gt;filters&lt;/code&gt;' spatial dimensions.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filters&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;value&lt;/code&gt; および形状と同じタイプの4次元 &lt;code&gt;Tensor&lt;/code&gt; &lt;code&gt;[filter_height, filter_width, out_channels, in_channels]&lt;/code&gt; 。 &lt;code&gt;filters&lt;/code&gt; の &lt;code&gt;in_channels&lt;/code&gt; ディメンションは、 &lt;code&gt;value&lt;/code&gt; ディメンションと一致する必要があります。 Atrousたたみ込みは、実効高さ &lt;code&gt;filter_height + (filter_height - 1) * (rate - 1)&lt;/code&gt; と実効幅 &lt;code&gt;filter_width + (filter_width - 1) * (rate - 1)&lt;/code&gt; 持つアップサンプリングされたフィルターを使用した標準のたたみ込みに相当し、 &lt;code&gt;rate - 1&lt;/code&gt; ゼロを挿入することによって生成されます。 &lt;code&gt;filters&lt;/code&gt; の空間次元全体で連続する要素に沿って。</target>
        </trans-unit>
        <trans-unit id="fda613052f1b17996233a267fa0514490d85dbc4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filters&lt;/code&gt;&lt;/b&gt;: A 5-D &lt;code&gt;Tensor&lt;/code&gt; with the same type as &lt;code&gt;value&lt;/code&gt; and shape &lt;code&gt;[height, width, output_channels, in_channels]&lt;/code&gt;. &lt;code&gt;filter&lt;/code&gt;'s &lt;code&gt;in_channels&lt;/code&gt; dimension must match that of &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filters&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;value&lt;/code&gt; と形状と同じタイプの5次元 &lt;code&gt;Tensor&lt;/code&gt; &lt;code&gt;[height, width, output_channels, in_channels]&lt;/code&gt; 。 &lt;code&gt;filter&lt;/code&gt; の &lt;code&gt;in_channels&lt;/code&gt; ディメンションは、 &lt;code&gt;value&lt;/code&gt; ディメンションと一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="8579f7c0688b69dcd1188d9733dc6976235b7c38" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filters&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;input&lt;/code&gt;. 3-D with shape &lt;code&gt;[filter_height, filter_width, depth]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filters&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。 &lt;code&gt;input&lt;/code&gt; と同じタイプでなければなりません。形状 &lt;code&gt;[filter_height, filter_width, depth]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="156aacc244e99a4a36577190c89af1f241af2983" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filters&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;input&lt;/code&gt;. A 4-D tensor of shape &lt;code&gt;[filter_height, filter_width, in_channels, out_channels]&lt;/code&gt;</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filters&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。 &lt;code&gt;input&lt;/code&gt; と同じタイプでなければなりません。形状の4次元テンソル &lt;code&gt;[filter_height, filter_width, in_channels, out_channels]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0011eac1f288f7c3d0ee3cdcbe31281a1a65047e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filters&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;input&lt;/code&gt;. Shape &lt;code&gt;[filter_depth, filter_height, filter_width, in_channels, out_channels]&lt;/code&gt;. &lt;code&gt;in_channels&lt;/code&gt; must match between &lt;code&gt;input&lt;/code&gt; and &lt;code&gt;filters&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filters&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。 &lt;code&gt;input&lt;/code&gt; と同じタイプでなければなりません。形状 &lt;code&gt;[filter_depth, filter_height, filter_width, in_channels, out_channels]&lt;/code&gt; 。 &lt;code&gt;in_channels&lt;/code&gt; は、 &lt;code&gt;input&lt;/code&gt; と &lt;code&gt;filters&lt;/code&gt; 間で一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="59678c7212a81ee706204a99a7f16c7b44dced62" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filters&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;value&lt;/code&gt;. 3-D with shape &lt;code&gt;[filters_height, filters_width, depth]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filters&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。 &lt;code&gt;value&lt;/code&gt; と同じ型でなければなりません。形状の3D &lt;code&gt;[filters_height, filters_width, depth]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d4740197e9f11ea15fe42a506c959a0fb8646658" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filters&lt;/code&gt;&lt;/b&gt;: Alias for filter.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filters&lt;/code&gt; &lt;/b&gt;：&lt;b&gt;フィルターの&lt;/b&gt;エイリアス。</target>
        </trans-unit>
        <trans-unit id="0b3ddcbc0718ba6d787eb433dbc3036d6eeca59e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filters&lt;/code&gt;&lt;/b&gt;: Alias of filter.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filters&lt;/code&gt; &lt;/b&gt;：&lt;b&gt;フィルターの&lt;/b&gt;エイリアス。</target>
        </trans-unit>
        <trans-unit id="556820685c5be1ed5f014cb069239f6111df067a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filters&lt;/code&gt;&lt;/b&gt;: An (N+2)-D &lt;code&gt;Tensor&lt;/code&gt; with the same type as &lt;code&gt;input&lt;/code&gt; and shape &lt;code&gt;spatial_filter_shape + [in_channels, out_channels]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filters&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;input&lt;/code&gt; と形状が同じ型の（N + 2）-D &lt;code&gt;Tensor&lt;/code&gt; &lt;code&gt;spatial_filter_shape + [in_channels, out_channels]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bf396b4b3d6a7ac2c839a54ebd5ad2858e2f0b8d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filters&lt;/code&gt;&lt;/b&gt;: An N+2 dimensional &lt;code&gt;Tensor&lt;/code&gt; with the same type as &lt;code&gt;input&lt;/code&gt; and shape &lt;code&gt;spatial_filter_shape + [in_channels, out_channels]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filters&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;input&lt;/code&gt; と形状のタイプが同じN + 2次元の &lt;code&gt;Tensor&lt;/code&gt; &lt;code&gt;spatial_filter_shape + [in_channels, out_channels]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="090408e5e39cbf5e2e89b2f229123bf6cd3bceb0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filters&lt;/code&gt;&lt;/b&gt;: Integer, the dimensionality of the output space (i.e. the number of filters in the convolution).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filters&lt;/code&gt; &lt;/b&gt;：整数、出力空間の次元（つまり、畳み込み内のフィルターの数）。</target>
        </trans-unit>
        <trans-unit id="2f60c84215b5966a97cb40b122fdcbc9dd3cebd9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filters&lt;/code&gt;&lt;/b&gt;: Integer, the dimensionality of the output space (i.e. the number of output filters in the convolution).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filters&lt;/code&gt; &lt;/b&gt;：整数、出力空間の次元（つまり、畳み込み内の出力フィルターの数）。</target>
        </trans-unit>
        <trans-unit id="c95094fbcd7b6a6a59b21429ac9d3abde068206f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;final_ops&lt;/code&gt;&lt;/b&gt;: A single &lt;code&gt;Tensor&lt;/code&gt;, a list of &lt;code&gt;Tensors&lt;/code&gt; or a dictionary of names to &lt;code&gt;Tensors&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;final_ops&lt;/code&gt; &lt;/b&gt;：A単一 &lt;code&gt;Tensor&lt;/code&gt; 、リスト &lt;code&gt;Tensors&lt;/code&gt; かに名前の辞書 &lt;code&gt;Tensors&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9ea3eecb5d931c1360952fc82c5079204fe23d51" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;final_ops_feed_dict&lt;/code&gt;&lt;/b&gt;: A feed dictionary to use when running &lt;code&gt;final_ops_dict&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;final_ops_feed_dict&lt;/code&gt; &lt;/b&gt;：実行するときに使用するフィード辞書 &lt;code&gt;final_ops_dict&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="b2d266cf47a18dc767407fbc434652b39ee92e8c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;first&lt;/code&gt;&lt;/b&gt;: A string containing JSON to decode and compare to second.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;first&lt;/code&gt; &lt;/b&gt;：デコードして2番目と比較するJSONを含む文字列。</target>
        </trans-unit>
        <trans-unit id="0ed0fb343cd4068f25ba7bb8228fb788ab5b7d0d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;first_decay_steps&lt;/code&gt;&lt;/b&gt;: A scalar &lt;code&gt;int32&lt;/code&gt; or &lt;code&gt;int64&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; or a Python number. Number of steps to decay over.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;first_decay_steps&lt;/code&gt; &lt;/b&gt;：スカラーの &lt;code&gt;int32&lt;/code&gt; または &lt;code&gt;int64&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; またはPythonの数値。減衰するステップの数。</target>
        </trans-unit>
        <trans-unit id="f85bf1c1c8f310e441f1aee9f2129fcf3a673bc8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;first_n&lt;/code&gt;&lt;/b&gt;: Only log &lt;code&gt;first_n&lt;/code&gt; number of times. Negative numbers log always; this is the default.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;first_n&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;first_n&lt;/code&gt; 回だけログに記録します。負の数は常にログに記録されます。これがデフォルトです。</target>
        </trans-unit>
        <trans-unit id="41fb2a2d03b0ec9fd4a17c97ee8c0e8ad5b567d2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;firstline_indent&lt;/code&gt;&lt;/b&gt;: str, indent for first line; if None, fall back to indent.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;firstline_indent&lt;/code&gt; &lt;/b&gt;：str、最初の行のインデント。Noneの場合、インデントに戻ります。</target>
        </trans-unit>
        <trans-unit id="1ff91e04bd94e18db2d993b364247358bfcfff0d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fixed_length&lt;/code&gt;&lt;/b&gt;: If set, the first &lt;code&gt;fixed_length&lt;/code&gt; bytes of each element will be converted. Data will be zero-padded or truncated to the specified length.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fixed_length&lt;/code&gt; &lt;/b&gt;：設定されている場合、各要素の最初の &lt;code&gt;fixed_length&lt;/code&gt; バイトが変換されます。データは、ゼロが埋め込まれるか、指定された長さに切り捨てられます。</target>
        </trans-unit>
        <trans-unit id="96a37b52b1604881050327768edd7d5ca15f11be" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;flag&lt;/code&gt;&lt;/b&gt;: Flag, a flag that is key to the module.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;flag&lt;/code&gt; &lt;/b&gt;：フラグ。モジュールにとって重要なフラグです。</target>
        </trans-unit>
        <trans-unit id="0b9376230144a8a61471d7b5aceccc602815dea5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;flag&lt;/code&gt;&lt;/b&gt;: Flag, the Flag instance that is key to the module.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;flag&lt;/code&gt; &lt;/b&gt;：Flag、モジュールのキーとなるFlagインスタンス。</target>
        </trans-unit>
        <trans-unit id="4c4d1a485a5cef0b3cbda58e422ab4dee60447be" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;flag_map&lt;/code&gt;&lt;/b&gt;: dict, a mapping where the keys are flag names (strings). values are treated according to their type:</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;flag_map&lt;/code&gt; &lt;/b&gt;：dict、キーがフラグ名（文字列）であるマッピング。値はそのタイプに従って処理されます。</target>
        </trans-unit>
        <trans-unit id="4c938b57af984163a89e4f43228861cff7b3e22d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;flag_name&lt;/code&gt;&lt;/b&gt;: str, name of the flag</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;flag_name&lt;/code&gt; &lt;/b&gt;：str、フラグの名前</target>
        </trans-unit>
        <trans-unit id="a13eb22b5c2a9938f6528493cd324daeb294ca27" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;flag_name&lt;/code&gt;&lt;/b&gt;: str, name of the flag to be checked.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;flag_name&lt;/code&gt; &lt;/b&gt;：str、チェックするフラグの名前。</target>
        </trans-unit>
        <trans-unit id="f13e64f22fdd76e06dcf5313788809dae2d55bb5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;flag_name&lt;/code&gt;&lt;/b&gt;: str, the name of an already declared flag. (Redeclaring flags as key, including flags implicitly key because they were declared in this module, is a no-op.)</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;flag_name&lt;/code&gt; &lt;/b&gt;：str、すでに宣言されているフラグの名前。（フラグがこのモジュールで宣言されたために暗黙的にキーとなるフラグを含め、キーとしてフラグを再宣言することは何もしません。）</target>
        </trans-unit>
        <trans-unit id="8d6ca81394c3d249a69a6d1a769170b1ea42828c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;flag_names&lt;/code&gt;&lt;/b&gt;: Sequence[str], names of the flags.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;flag_names&lt;/code&gt; &lt;/b&gt;：Sequence [str]、フラグの名前。</target>
        </trans-unit>
        <trans-unit id="10aa061ba7cc244ffbc033b0ad3256eb262c69fe" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;flag_names&lt;/code&gt;&lt;/b&gt;: [str], a list of the flag names to be checked.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;flag_names&lt;/code&gt; &lt;/b&gt;：[str]、チェックするフラグ名のリスト。</target>
        </trans-unit>
        <trans-unit id="8eeb0880273425c085175ba1853b0c29ad331578" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;flag_names&lt;/code&gt;&lt;/b&gt;: [str], names of the flags.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;flag_names&lt;/code&gt; &lt;/b&gt;：[str]、フラグの名前。</target>
        </trans-unit>
        <trans-unit id="c2203aea65234d27e1ea9e68b00ed74f6eb6981b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;flag_values&lt;/code&gt;&lt;/b&gt;: FlagValues, the FlagValues instance containing flags to remove.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;flag_values&lt;/code&gt; &lt;/b&gt;：削除するフラグを含むFlagValuesインスタンスであるFlagValues。</target>
        </trans-unit>
        <trans-unit id="2c727d75cfa16decd523deddf2056447240baf2d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;flag_values&lt;/code&gt;&lt;/b&gt;: FlagValues, the FlagValues instance containing the first definition of flagname.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;flag_values&lt;/code&gt; &lt;/b&gt;：FlagValues、flagnameの最初の定義を含むFlagValuesインスタンス。</target>
        </trans-unit>
        <trans-unit id="49b5d473a533d1696e8054daed862171c533b449" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;flag_values&lt;/code&gt;&lt;/b&gt;: FlagValues, the FlagValues instance from which to copy flags.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;flag_values&lt;/code&gt; &lt;/b&gt;：FlagValues、フラグのコピー元のFlagValuesインスタンス。</target>
        </trans-unit>
        <trans-unit id="d58d37f4cd4df5ae3aa6d55aba5185e335d97ad4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;flag_values&lt;/code&gt;&lt;/b&gt;: FlagValues, the FlagValues instance in which the flag will be declared as a key flag. This should almost never need to be overridden.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;flag_values&lt;/code&gt; &lt;/b&gt;：FlagValues。フラグがキーフラグとして宣言されるFlagValuesインスタンス。これをオーバーライドする必要はほとんどありません。</target>
        </trans-unit>
        <trans-unit id="ce111a671257b841351286cca1466a0bea008171" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;flag_values&lt;/code&gt;&lt;/b&gt;: FlagValues, the FlagValues instance in which the flags will be declared as key flags. This should almost never need to be overridden.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;flag_values&lt;/code&gt; &lt;/b&gt;：FlagValues、フラグがキーフラグとして宣言されるFlagValuesインスタンス。これをオーバーライドする必要はほとんどありません。</target>
        </trans-unit>
        <trans-unit id="e0737f81c927d4b09f49bf70d0e7fcad586b9e2b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;flag_values&lt;/code&gt;&lt;/b&gt;: FlagValues, the FlagValues instance with which the flag will be registered. This should almost never need to be overridden.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;flag_values&lt;/code&gt; &lt;/b&gt;：FlagValues、フラグが登録されるFlagValuesインスタンス。これをオーバーライドする必要はほとんどありません。</target>
        </trans-unit>
        <trans-unit id="baba8db42097abb862ce9dc2ef717d175197f765" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;flag_values&lt;/code&gt;&lt;/b&gt;: flags.FlagValues, optional FlagValues instance to validate against.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;flag_values&lt;/code&gt; &lt;/b&gt;：flags.FlagValues、検証するオプションのFlagValuesインスタンス。</target>
        </trans-unit>
        <trans-unit id="927f6ae000f4a94e522cb4d6d96a2a0da2016adc" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;flag_values&lt;/code&gt;&lt;/b&gt;: flags.FlagValues, optional FlagValues instance where the flag is defined.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;flag_values&lt;/code&gt; &lt;/b&gt;：flags.FlagValues、フラグが定義されているオプションのFlagValuesインスタンス。</target>
        </trans-unit>
        <trans-unit id="5077e66af186b962a67a36f5eb416349c2d061ff" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;flag_values&lt;/code&gt;&lt;/b&gt;: flags.FlagValues, optional FlagValues instance where the flags are defined.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;flag_values&lt;/code&gt; &lt;/b&gt;：flags.FlagValues、フラグが定義されているオプションのFlagValuesインスタンス。</target>
        </trans-unit>
        <trans-unit id="01bba97788527fef2b2608af54cdea0ed20cee20" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;flagname&lt;/code&gt;&lt;/b&gt;: str, name of the flag to lookup.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;flagname&lt;/code&gt; &lt;/b&gt;：str、検索するフラグの名前。</target>
        </trans-unit>
        <trans-unit id="99bced660dfd1c36e86da7808e8da5fe2a5779f1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;flagname&lt;/code&gt;&lt;/b&gt;: str, the name of the flag being redefined.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;flagname&lt;/code&gt; &lt;/b&gt;：str、再定義されるフラグの名前。</target>
        </trans-unit>
        <trans-unit id="9bd9ec1f3dc46bb90fc7942c4c8efeb75dfec03b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;flagname&lt;/code&gt;&lt;/b&gt;: str, the name of the unrecognized flag.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;flagname&lt;/code&gt; &lt;/b&gt;：str、認識されないフラグの名前。</target>
        </trans-unit>
        <trans-unit id="5902ddfbda30cd6b3757e4cbe240ba20d5188f9f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;flags.FlagError&lt;/code&gt;&lt;/b&gt;: UnrecognizedFlagError: if the referenced flag doesn't exist. DuplicateFlagError: if the alias name has been used by some existing flag.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;flags.FlagError&lt;/code&gt; &lt;/b&gt;：&lt;b&gt; UnrecognizedFlagError&lt;/b&gt;：参照されたフラグが存在しない場合。DuplicateFlagError：エイリアス名が既存のフラグで使用されている場合。</target>
        </trans-unit>
        <trans-unit id="75643deea55ece091413944d6f97e9c1fa4551ae" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;flagvalue&lt;/code&gt;&lt;/b&gt;: The value of the flag, empty if the flag is not defined.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;flagvalue&lt;/code&gt; &lt;/b&gt;：フラグの値。フラグが定義されていない場合は空です。</target>
        </trans-unit>
        <trans-unit id="d43d437dc004f5d7b4b895272bd67554f21217fd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;flat_sequence&lt;/code&gt;&lt;/b&gt;: flat sequence to pack.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;flat_sequence&lt;/code&gt; &lt;/b&gt;：パックするフラットシーケンス。</target>
        </trans-unit>
        <trans-unit id="b6e96d6e72aeccbf9df984e47ceca0d3ae943506" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;flat_values&lt;/code&gt;&lt;/b&gt;: A potentially ragged tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;flat_values&lt;/code&gt; &lt;/b&gt;：潜在的に不規則なテンソル。</target>
        </trans-unit>
        <trans-unit id="f8ebe2201b55ca0a23984d2c50afb79fdd5a805c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;float_atol&lt;/code&gt;&lt;/b&gt;: absolute tolerance for float32.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;float_atol&lt;/code&gt; &lt;/b&gt;：&lt;b&gt; float32の&lt;/b&gt;絶対許容誤差。</target>
        </trans-unit>
        <trans-unit id="91522b516a32662b5befa3e7c3eef2a9b43bfe75" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;float_rtol&lt;/code&gt;&lt;/b&gt;: relative tolerance for float32.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;float_rtol&lt;/code&gt; &lt;/b&gt;：&lt;b&gt; float32の&lt;/b&gt;相対許容誤差。</target>
        </trans-unit>
        <trans-unit id="e942413b85022c5eb2985a8f9c59d9bc6586c32b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;flow&lt;/code&gt;&lt;/b&gt;: (optional) A float &lt;code&gt;Tensor&lt;/code&gt; scalar coming from an existing &lt;a href=&quot;tensorarray#flow&quot;&gt;&lt;code&gt;TensorArray.flow&lt;/code&gt;&lt;/a&gt;. Only supported in graph mode.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;flow&lt;/code&gt; &lt;/b&gt;：（オプション）既存の&lt;a href=&quot;tensorarray#flow&quot;&gt; &lt;code&gt;TensorArray.flow&lt;/code&gt; &lt;/a&gt;からの浮動小数点 &lt;code&gt;Tensor&lt;/code&gt; スカラー。グラフモードでのみサポートされます。</target>
        </trans-unit>
        <trans-unit id="93420c6c35c1c8ccc117ddde753c5f1a2b4f3aa3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;flush_millis&lt;/code&gt;&lt;/b&gt;: the largest interval between flushes. Defaults to 120,000.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;flush_millis&lt;/code&gt; &lt;/b&gt;：フラッシュ間の最大間隔。デフォルトは120,000です。</target>
        </trans-unit>
        <trans-unit id="ecb9d6edf8ee65d82e3a4522d0599facd373b7fa" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;flush_mode&lt;/code&gt;&lt;/b&gt;: flush mode or &lt;code&gt;None&lt;/code&gt;, Default: Z_NO_FLUSH.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;flush_mode&lt;/code&gt; &lt;/b&gt;：フラッシュモードまたは &lt;code&gt;None&lt;/code&gt; 、デフォルト：Z_NO_FLUSH。</target>
        </trans-unit>
        <trans-unit id="0cd8c600da0fb0608e474be52464761485328bcc" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;flush_secs&lt;/code&gt;&lt;/b&gt;: Number. How often, in seconds, to flush the pending events and summaries to disk.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;flush_secs&lt;/code&gt; &lt;/b&gt;：数値。保留中のイベントと要約をディスクにフラッシュする頻度（秒単位）。</target>
        </trans-unit>
        <trans-unit id="77fe21e433ce97e50581b88e48443f0d4b6caad9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fn&lt;/code&gt;&lt;/b&gt;: Callable that will be called upon each element in elems</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fn&lt;/code&gt; &lt;/b&gt;：elemsの各要素で呼び出されるCallable</target>
        </trans-unit>
        <trans-unit id="40eac3b0fc679995f3aeb438b23d9a587a72b15a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fn&lt;/code&gt;&lt;/b&gt;: Callable that will be called upon each element in elems and an accumulator, for instance &lt;code&gt;lambda acc, x: acc + x&lt;/code&gt;</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fn&lt;/code&gt; &lt;/b&gt;：elemsおよびアキュムレータの各要素で呼び出されるCallable、たとえば &lt;code&gt;lambda acc, x: acc + x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8188a03662ae05b19c7492c80da982c99b748c58" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fn&lt;/code&gt;&lt;/b&gt;: Function to call. Should take the variable as the first argument.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fn&lt;/code&gt; &lt;/b&gt;：呼び出す関数。最初の引数として変数を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="237a3bf5eeecbc6d9e54b296eedead9df52d724b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fn&lt;/code&gt;&lt;/b&gt;: Function to execute.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fn&lt;/code&gt; &lt;/b&gt;：実行する関数。</target>
        </trans-unit>
        <trans-unit id="096f9001faa4c16704fc06d9831dc6dd3222afa0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fn&lt;/code&gt;&lt;/b&gt;: The callable to be performed.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fn&lt;/code&gt; &lt;/b&gt;：実行される呼び出し可能オブジェクト。</target>
        </trans-unit>
        <trans-unit id="dae78bb7c70d29e0bf038c7cd6f42329837b5065" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fn&lt;/code&gt;&lt;/b&gt;: The callable to be performed. It accepts one argument, which will have the same (possibly nested) structure as &lt;code&gt;elems&lt;/code&gt;, and returns a possibly nested structure of Tensors and Operations, which may be different than the structure of &lt;code&gt;elems&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fn&lt;/code&gt; &lt;/b&gt;：実行される呼び出し可能オブジェクト。これは、同じ（おそらくネストされた）構造を有することになる一つの引数、受け入れ &lt;code&gt;elems&lt;/code&gt; を、の構造とは異なっていてもよいテンソルと操作の可能性入れ子構造、戻り &lt;code&gt;elems&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="cf05c0273bac9b3c9cd3b2eb7961fb1752d5e97a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fn&lt;/code&gt;&lt;/b&gt;: The callable to be performed. It accepts one argument, which will have the same (possibly nested) structure as &lt;code&gt;elems&lt;/code&gt;. Its output must have the same structure as &lt;code&gt;dtype&lt;/code&gt; if one is provided, otherwise it must have the same structure as &lt;code&gt;elems&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fn&lt;/code&gt; &lt;/b&gt;：実行される呼び出し可能オブジェクト。これは、 &lt;code&gt;elems&lt;/code&gt; と同じ（おそらくネストされている）構造を持つ1つの引数を受け入れます。出力は、提供される場合は &lt;code&gt;dtype&lt;/code&gt; と同じ構造でなければなりません。それ以外の場合は、 &lt;code&gt;elems&lt;/code&gt; と同じ構造でなければなりません。</target>
        </trans-unit>
        <trans-unit id="060d1e7d99fee51eda65a1a57d5731c0f8e260c6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fn&lt;/code&gt;&lt;/b&gt;: The callable to be performed. It accepts two arguments. The first will have the same structure as &lt;code&gt;initializer&lt;/code&gt; if one is provided, otherwise it will have the same structure as &lt;code&gt;elems&lt;/code&gt;. The second will have the same (possibly nested) structure as &lt;code&gt;elems&lt;/code&gt;. Its output must have the same structure as &lt;code&gt;initializer&lt;/code&gt; if one is provided, otherwise it must have the same structure as &lt;code&gt;elems&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fn&lt;/code&gt; &lt;/b&gt;：実行される呼び出し可能オブジェクト。2つの引数を受け入れます。最初のものは、 &lt;code&gt;initializer&lt;/code&gt; が提供されている場合は同じ構造を持ち、それ以外の場合は &lt;code&gt;elems&lt;/code&gt; と同じ構造を持ちます。2番目は、 &lt;code&gt;elems&lt;/code&gt; と同じ（場合によってはネストされた）構造になります。その出力は、 &lt;code&gt;initializer&lt;/code&gt; が提供されている場合はイニシャライザと同じ構造でなければなりません。それ以外の場合は、 &lt;code&gt;elems&lt;/code&gt; と同じ構造でなければなりません。</target>
        </trans-unit>
        <trans-unit id="16a5b8fee5bcd8e6619204de00ac93f5a266639d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fn&lt;/code&gt;&lt;/b&gt;: The function to execute. Must return at least one tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fn&lt;/code&gt; &lt;/b&gt;：実行する関数。少なくとも1つのテンソルを返す必要があります。</target>
        </trans-unit>
        <trans-unit id="7fea3e4bb6a1e8cc006c53984ed7b3fb8d5cfd55" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fn&lt;/code&gt;&lt;/b&gt;: The function to run. The inputs to the function must match the outputs of &lt;code&gt;input_iterator.get_next()&lt;/code&gt;. The output must be a &lt;a href=&quot;../../../../nest&quot;&gt;&lt;code&gt;tf.nest&lt;/code&gt;&lt;/a&gt; of &lt;code&gt;Tensor&lt;/code&gt;s.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fn&lt;/code&gt; &lt;/b&gt;：実行する関数。関数への入力は、 &lt;code&gt;input_iterator.get_next()&lt;/code&gt; の出力と一致する必要があります。出力は &lt;code&gt;Tensor&lt;/code&gt; の&lt;a href=&quot;../../../../nest&quot;&gt; &lt;code&gt;tf.nest&lt;/code&gt; &lt;/a&gt;でなければなりません。</target>
        </trans-unit>
        <trans-unit id="3b8b3a7b9c888723235f53debae374b7942e3a6a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fn&lt;/code&gt;&lt;/b&gt;: The function to run. The inputs to the function must match the outputs of &lt;code&gt;input_iterator.get_next()&lt;/code&gt;. The output must be a &lt;a href=&quot;../../../nest&quot;&gt;&lt;code&gt;tf.nest&lt;/code&gt;&lt;/a&gt; of &lt;code&gt;Tensor&lt;/code&gt;s.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fn&lt;/code&gt; &lt;/b&gt;：実行する関数。関数への入力は、 &lt;code&gt;input_iterator.get_next()&lt;/code&gt; の出力と一致する必要があります。出力は &lt;code&gt;Tensor&lt;/code&gt; の&lt;a href=&quot;../../../nest&quot;&gt; &lt;code&gt;tf.nest&lt;/code&gt; &lt;/a&gt;でなければなりません。</target>
        </trans-unit>
        <trans-unit id="cad5ce380f658f970708649115627b31a2e06640" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fn&lt;/code&gt;&lt;/b&gt;: The function to run. The output must be a &lt;a href=&quot;../../../../nest&quot;&gt;&lt;code&gt;tf.nest&lt;/code&gt;&lt;/a&gt; of &lt;code&gt;Tensor&lt;/code&gt;s.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fn&lt;/code&gt; &lt;/b&gt;：実行する関数。出力は &lt;code&gt;Tensor&lt;/code&gt; の&lt;a href=&quot;../../../../nest&quot;&gt; &lt;code&gt;tf.nest&lt;/code&gt; &lt;/a&gt;でなければなりません。</target>
        </trans-unit>
        <trans-unit id="f6754bc8712db9f7a882bda774fe270dd055b8b4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fn&lt;/code&gt;&lt;/b&gt;: The function to run. The output must be a &lt;a href=&quot;../../../nest&quot;&gt;&lt;code&gt;tf.nest&lt;/code&gt;&lt;/a&gt; of &lt;code&gt;Tensor&lt;/code&gt;s.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fn&lt;/code&gt; &lt;/b&gt;：実行する関数。出力は &lt;code&gt;Tensor&lt;/code&gt; の&lt;a href=&quot;../../../nest&quot;&gt; &lt;code&gt;tf.nest&lt;/code&gt; &lt;/a&gt;でなければなりません。</target>
        </trans-unit>
        <trans-unit id="46458cd8832e0478921c65677bb11511ade2c93c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fn&lt;/code&gt;&lt;/b&gt;: The function to run. The output must be a &lt;a href=&quot;../../nest&quot;&gt;&lt;code&gt;tf.nest&lt;/code&gt;&lt;/a&gt; of &lt;code&gt;Tensor&lt;/code&gt;s.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fn&lt;/code&gt; &lt;/b&gt;：実行する関数。出力は &lt;code&gt;Tensor&lt;/code&gt; の&lt;a href=&quot;../../nest&quot;&gt; &lt;code&gt;tf.nest&lt;/code&gt; &lt;/a&gt;でなければなりません。</target>
        </trans-unit>
        <trans-unit id="47b3a368e3e5d585d8b7ed23fec0afb1add39749" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fn&lt;/code&gt;&lt;/b&gt;: The function to run. The output must be a &lt;a href=&quot;../nest&quot;&gt;&lt;code&gt;tf.nest&lt;/code&gt;&lt;/a&gt; of &lt;code&gt;Tensor&lt;/code&gt;s.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fn&lt;/code&gt; &lt;/b&gt;：実行する関数。出力は &lt;code&gt;Tensor&lt;/code&gt; の&lt;a href=&quot;../nest&quot;&gt; &lt;code&gt;tf.nest&lt;/code&gt; &lt;/a&gt;でなければなりません。</target>
        </trans-unit>
        <trans-unit id="e8f6ca431e4b384b153633ab5cf75ed1ba193bdb" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fn&lt;/code&gt;&lt;/b&gt;: The metric function to wrap, with signature &lt;code&gt;fn(y_true, y_pred, **kwargs)&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fn&lt;/code&gt; &lt;/b&gt;：ラップするメトリック関数。署名は &lt;code&gt;fn(y_true, y_pred, **kwargs)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d1c4835db96b96d0803ea2c1d6d059c96d602c92" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fn&lt;/code&gt;&lt;/b&gt;: arbitrary function</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fn&lt;/code&gt; &lt;/b&gt;：任意の関数</target>
        </trans-unit>
        <trans-unit id="eee3ac964de8ddff7e4d3348e1afce88b4e0a060" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fn&lt;/code&gt;&lt;/b&gt;: function to run (will be run once per replica).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fn&lt;/code&gt; &lt;/b&gt;：実行する関数（レプリカごとに1回実行されます）。</target>
        </trans-unit>
        <trans-unit id="f82c8a8a7ff9cad5b805190ea5f47bfee2ac93f1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fn&lt;/code&gt;&lt;/b&gt;: function to run using this distribution strategy. The function must have the following signature: &lt;code&gt;def fn(context, inputs)&lt;/code&gt;. &lt;code&gt;context&lt;/code&gt; is an instance of &lt;code&gt;MultiStepContext&lt;/code&gt; that will be passed when &lt;code&gt;fn&lt;/code&gt; is run. &lt;code&gt;context&lt;/code&gt; can be used to specify the outputs to be returned from &lt;code&gt;fn&lt;/code&gt; by calling &lt;code&gt;context.set_last_step_output&lt;/code&gt;. It can also be used to capture non tensor outputs by &lt;code&gt;context.set_non_tensor_output&lt;/code&gt;. See &lt;code&gt;MultiStepContext&lt;/code&gt; documentation for more information. &lt;code&gt;inputs&lt;/code&gt; will have same type/structure as &lt;code&gt;iterator.get_next()&lt;/code&gt;. Typically, &lt;code&gt;fn&lt;/code&gt; will use &lt;code&gt;call_for_each_replica&lt;/code&gt; method of the strategy to distribute the computation over multiple replicas.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fn&lt;/code&gt; &lt;/b&gt;：この配布戦略を使用して実行する関数。関数には次のシグネチャが必要です： &lt;code&gt;def fn(context, inputs)&lt;/code&gt; 。 &lt;code&gt;context&lt;/code&gt; は、 &lt;code&gt;fn&lt;/code&gt; の実行時に渡される &lt;code&gt;MultiStepContext&lt;/code&gt; のインスタンスです。 &lt;code&gt;context.set_last_step_output&lt;/code&gt; を呼び出すことにより、 &lt;code&gt;fn&lt;/code&gt; から返される出力を指定するために &lt;code&gt;context&lt;/code&gt; を使用できます。また、 &lt;code&gt;context.set_non_tensor_output&lt;/code&gt; によって非テンソル出力をキャプチャするために使用することもできます。詳細については、 &lt;code&gt;MultiStepContext&lt;/code&gt; のドキュメントを参照してください。 &lt;code&gt;inputs&lt;/code&gt; は &lt;code&gt;iterator.get_next()&lt;/code&gt; と同じタイプ/構造になります。通常、 &lt;code&gt;fn&lt;/code&gt; ストラテジーの &lt;code&gt;call_for_each_replica&lt;/code&gt; メソッドを使用して、複数のレプリカに計算を分散します。</target>
        </trans-unit>
        <trans-unit id="2daf4f3e8231bce52df9f9c71f740625e713ac2b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fn&lt;/code&gt;&lt;/b&gt;: python function to be wrapped</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fn&lt;/code&gt; &lt;/b&gt;：ラップされるPython関数</target>
        </trans-unit>
        <trans-unit id="53223799498e83e9cc684a341d4019f6d62f1245" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fname&lt;/code&gt;&lt;/b&gt;: Name of the file. If an absolute path &lt;code&gt;/path/to/file.txt&lt;/code&gt; is specified the file will be saved at that location.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fname&lt;/code&gt; &lt;/b&gt;：ファイルの名前。絶対パス &lt;code&gt;/path/to/file.txt&lt;/code&gt; が指定されている場合、ファイルはその場所に保存されます。</target>
        </trans-unit>
        <trans-unit id="b033c525359b591ec5b6fe03d8d94dcfdb75ecdc" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;footer_bytes&lt;/code&gt;&lt;/b&gt;: (Optional.) A &lt;a href=&quot;../../../../tf#int64&quot;&gt;&lt;code&gt;tf.int64&lt;/code&gt;&lt;/a&gt; scalar representing the number of bytes to ignore at the end of a file.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;footer_bytes&lt;/code&gt; &lt;/b&gt;：（オプション）ファイルの最後で無視するバイト数を表す&lt;a href=&quot;../../../../tf#int64&quot;&gt; &lt;code&gt;tf.int64&lt;/code&gt; &lt;/a&gt;スカラー。</target>
        </trans-unit>
        <trans-unit id="1f5e1a4f7a54758cd2a379e4a1ae27885cae29d6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;footer_bytes&lt;/code&gt;&lt;/b&gt;: (Optional.) A &lt;a href=&quot;../../tf#int64&quot;&gt;&lt;code&gt;tf.int64&lt;/code&gt;&lt;/a&gt; scalar representing the number of bytes to ignore at the end of a file.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;footer_bytes&lt;/code&gt; &lt;/b&gt;：（オプション）ファイルの最後で無視するバイト数を表す&lt;a href=&quot;../../tf#int64&quot;&gt; &lt;code&gt;tf.int64&lt;/code&gt; &lt;/a&gt;スカラー。</target>
        </trans-unit>
        <trans-unit id="4faf3c3af70d6225fc66fdab40475214857ec761" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;footer_bytes&lt;/code&gt;&lt;/b&gt;: An optional int. Defaults to 0.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;footer_bytes&lt;/code&gt; &lt;/b&gt;：オプションのint。デフォルトは0です。</target>
        </trans-unit>
        <trans-unit id="2f4a7fd615a43bb0e0e07393957281a47d13b7c0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;force_gnu&lt;/code&gt;&lt;/b&gt;: bool, if False, --flagfile parsing obeys the FLAGS.is_gnu_getopt() value. If True, ignore the value and always follow gnu_getopt semantics.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;force_gnu&lt;/code&gt; &lt;/b&gt;：bool、Falseの場合、-flagfile解析はFLAGS.is_gnu_getopt（）値に従います。Trueの場合、値を無視し、常にgnu_getoptセマンティクスに従います。</target>
        </trans-unit>
        <trans-unit id="56c77ddb47f217e7e289798149d3ddd41ecd3070" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;force_gpu&lt;/code&gt;&lt;/b&gt;: If True, pin all ops to &lt;code&gt;/device:GPU:0&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;force_gpu&lt;/code&gt; &lt;/b&gt;：Trueの場合、すべての操作を &lt;code&gt;/device:GPU:0&lt;/code&gt; に固定します。</target>
        </trans-unit>
        <trans-unit id="486bc8fe0683a65e0debcb3a01e62a0dbb7c0774" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;forget_bias&lt;/code&gt;&lt;/b&gt;: Biases of the forget gate are initialized by default to 1 in order to reduce the scale of forgetting at the beginning of the training. Must set it manually to &lt;code&gt;0.0&lt;/code&gt; when restoring from CudnnLSTM trained checkpoints.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;forget_bias&lt;/code&gt; &lt;/b&gt;：トレーニングの開始時に忘却の規模を縮小するために、忘却ゲートの&lt;b&gt;バイアス&lt;/b&gt;はデフォルトで1に初期化されます。CudnnLSTMトレーニング済みチェックポイントから復元する場合は、手動で &lt;code&gt;0.0&lt;/code&gt; に設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="53f9763c97b999e21e476e6abb55cb6b91fd6002" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;forget_bias&lt;/code&gt;&lt;/b&gt;: float, The bias added to forget gates (see above). Must set to &lt;code&gt;0.0&lt;/code&gt; manually when restoring from CudnnLSTM-trained checkpoints.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;forget_bias&lt;/code&gt; &lt;/b&gt;：float、forgetゲートに追加されるバイアス（上記を参照）。CudnnLSTMでトレーニングされたチェックポイントから復元する場合は、手動で &lt;code&gt;0.0&lt;/code&gt; に設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="e1a657eca3e3bd79bae2e53e2fd59f35526e3e93" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;format&lt;/code&gt;&lt;/b&gt;: An optional &lt;code&gt;string&lt;/code&gt; from: &lt;code&gt;&quot;&quot;, &quot;grayscale&quot;, &quot;rgb&quot;&lt;/code&gt;. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;. Per pixel image format.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;format&lt;/code&gt; &lt;/b&gt;：オプションの &lt;code&gt;string&lt;/code&gt; から： &lt;code&gt;&quot;&quot;, &quot;grayscale&quot;, &quot;rgb&quot;&lt;/code&gt; 。デフォルトは &lt;code&gt;&quot;&quot;&lt;/code&gt; です。ピクセルごとの画像フォーマット。</target>
        </trans-unit>
        <trans-unit id="58f1fc65f07ed3abe0716502d87ac011d9d8a44e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;formatter&lt;/code&gt;&lt;/b&gt;: function, takes dict of &lt;code&gt;tag&lt;/code&gt;-&amp;gt;&lt;code&gt;Tensor&lt;/code&gt; and returns a string. If &lt;code&gt;None&lt;/code&gt; uses default printing all tensors.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;formatter&lt;/code&gt; &lt;/b&gt;：関数、 &lt;code&gt;tag&lt;/code&gt; 辞書-&amp;gt; &lt;code&gt;Tensor&lt;/code&gt; を取り、文字列を返します。 &lt;code&gt;None&lt;/code&gt; の場合、デフォルトの印刷ですべてのテンソルが使用されます。</target>
        </trans-unit>
        <trans-unit id="1f4bdc019dc78044e02ad87cd1f2270b72492215" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;forward_window_fn&lt;/code&gt;&lt;/b&gt;: window_fn used in the forward transform, &lt;code&gt;stft&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;forward_window_fn&lt;/code&gt; &lt;/b&gt;：前方変換stftで使用される &lt;code&gt;stft&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b34fef26f713d4a4049aefc462327ad24a82a637" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;frame_length&lt;/code&gt;&lt;/b&gt;: An integer scalar &lt;code&gt;Tensor&lt;/code&gt;. The window length in samples.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;frame_length&lt;/code&gt; &lt;/b&gt;：整数のスカラー &lt;code&gt;Tensor&lt;/code&gt; 。サンプルでのウィンドウの長さ。</target>
        </trans-unit>
        <trans-unit id="3ed6908c8b151962141373fd7813380a7c5044aa" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;frame_length&lt;/code&gt;&lt;/b&gt;: The frame length in samples. An integer or scalar &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;frame_length&lt;/code&gt; &lt;/b&gt;：サンプル&lt;b&gt;単位&lt;/b&gt;のフレーム長。整数またはスカラーの &lt;code&gt;Tensor&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d65e886b051e456dd7001c89c999081f08d946f9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;frame_step&lt;/code&gt;&lt;/b&gt;: An integer or scalar &lt;code&gt;Tensor&lt;/code&gt; denoting overlap offsets. Must be less than or equal to &lt;code&gt;frame_length&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;frame_step&lt;/code&gt; &lt;/b&gt;：オーバーラップオフセットを示す整数またはスカラー &lt;code&gt;Tensor&lt;/code&gt; 。 &lt;code&gt;frame_length&lt;/code&gt; 以下でなければなりません。</target>
        </trans-unit>
        <trans-unit id="df6a698fc033baa4d4824a5ffd54d0786054b6a0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;frame_step&lt;/code&gt;&lt;/b&gt;: An integer scalar &lt;code&gt;Tensor&lt;/code&gt;. The number of samples to step.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;frame_step&lt;/code&gt; &lt;/b&gt;：整数スカラー &lt;code&gt;Tensor&lt;/code&gt; 。ステップするサンプルの数。</target>
        </trans-unit>
        <trans-unit id="70f8f275351cfd7939c2947d79878c07c9811676" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;frame_step&lt;/code&gt;&lt;/b&gt;: The frame hop size in samples. An integer or scalar &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;frame_step&lt;/code&gt; &lt;/b&gt;：サンプルのフレームホップサイズ。整数またはスカラーの &lt;code&gt;Tensor&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="956061875db1cd9ae960ff3d90f2632a1f2a9504" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;frequency_weights&lt;/code&gt;&lt;/b&gt;: A tensor of positive weights which can be broadcast with x.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;frequency_weights&lt;/code&gt; &lt;/b&gt;：xでブロードキャストできる正の重みのテンソル。</target>
        </trans-unit>
        <trans-unit id="f637da140c64a951ceeaa01a1a13a0511bd60fd9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;from_logits&lt;/code&gt;&lt;/b&gt;: (Optional ) Whether &lt;code&gt;y_pred&lt;/code&gt; is expected to be a logits tensor. By default, we assume that &lt;code&gt;y_pred&lt;/code&gt; encodes a probability distribution.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;from_logits&lt;/code&gt; &lt;/b&gt;：（オプション） &lt;code&gt;y_pred&lt;/code&gt; がロジットテンソルであると予想されるかどうか。デフォルトでは、 &lt;code&gt;y_pred&lt;/code&gt; は確率分布をエンコードすると仮定します。</target>
        </trans-unit>
        <trans-unit id="562663e56002bbc6321b532d43ddacebe7280703" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;from_logits&lt;/code&gt;&lt;/b&gt;: (Optional )Whether output is expected to be a logits tensor. By default, we consider that output encodes a probability distribution.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;from_logits&lt;/code&gt; &lt;/b&gt;：（オプション）出力がロジットテンソルであることが期待されるかどうか。デフォルトでは、出力は確率分布をエンコードすると見なします。</target>
        </trans-unit>
        <trans-unit id="d08a5f1e8fbdbc59edf2a504a025295079cdcb49" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;from_logits&lt;/code&gt;&lt;/b&gt;: Boolean, whether &lt;code&gt;output&lt;/code&gt; is the result of a softmax, or is a tensor of logits.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;from_logits&lt;/code&gt; &lt;/b&gt;：ブール値。 &lt;code&gt;output&lt;/code&gt; が&lt;b&gt;ソフトマックス&lt;/b&gt;の結果であるか、ロジットのテンソルであるか。</target>
        </trans-unit>
        <trans-unit id="4e543311b5764268e98e5b220414648873d17016" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;from_logits&lt;/code&gt;&lt;/b&gt;: Whether &lt;code&gt;output&lt;/code&gt; is expected to be a logits tensor. By default, we consider that &lt;code&gt;output&lt;/code&gt; encodes a probability distribution.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;from_logits&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;output&lt;/code&gt; がロジットテンソルであると予想されるかどうか。デフォルトでは、 &lt;code&gt;output&lt;/code&gt; は確率分布をエンコードすると見なします。</target>
        </trans-unit>
        <trans-unit id="8a1485f91aaa4b1b4b6397f2119c750f3f26d059" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;from_logits&lt;/code&gt;&lt;/b&gt;: Whether &lt;code&gt;y_pred&lt;/code&gt; is expected to be a logits tensor. By default, we assume that &lt;code&gt;y_pred&lt;/code&gt; encodes a probability distribution.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;from_logits&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;y_pred&lt;/code&gt; がロジットテンソルであることが期待されるかどうか。デフォルトでは、 &lt;code&gt;y_pred&lt;/code&gt; は確率分布をエンコードすると仮定します。</target>
        </trans-unit>
        <trans-unit id="97d7f043a13e8ee307b687c85480e587edcab76c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;from_logits&lt;/code&gt;&lt;/b&gt;: Whether &lt;code&gt;y_pred&lt;/code&gt; is expected to be a logits tensor. By default, we assume that &lt;code&gt;y_pred&lt;/code&gt; encodes a probability distribution. Note: Using from_logits=True may be more numerically stable.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;from_logits&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;y_pred&lt;/code&gt; がロジットテンソルであることが期待されるかどうか。デフォルトでは、 &lt;code&gt;y_pred&lt;/code&gt; は確率分布をエンコードすると仮定します。注：from_logits = Trueを使用すると、数値的に安定する場合があります。</target>
        </trans-unit>
        <trans-unit id="dec1364c50baab2a32977e6f642dfaace353b8ef" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;from_logits&lt;/code&gt;&lt;/b&gt;: Whether to interpret &lt;code&gt;y_pred&lt;/code&gt; as a tensor of &lt;a href=&quot;https://en.wikipedia.org/wiki/Logit&quot;&gt;logit&lt;/a&gt; values. By default, we assume that &lt;code&gt;y_pred&lt;/code&gt; contains probabilities (i.e., values in [0, 1]). Note: Using from_logits=True may be more numerically stable.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;from_logits&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;y_pred&lt;/code&gt; を&lt;a href=&quot;https://en.wikipedia.org/wiki/Logit&quot;&gt;ロジット&lt;/a&gt;値のテンソルとして解釈するかどうか。デフォルトでは、 &lt;code&gt;y_pred&lt;/code&gt; には確率（つまり、[0、1]の値）が含まれていると想定しています。注：from_logits = Trueを使用すると、数値的に安定する場合があります。</target>
        </trans-unit>
        <trans-unit id="3892a9490cbbe6cb2bca1041bcb11baeeb86a6f1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;from_version&lt;/code&gt;&lt;/b&gt;: Optional. If this is set, returns a &lt;code&gt;GraphDef&lt;/code&gt; containing only the nodes that were added to this graph since its &lt;code&gt;version&lt;/code&gt; property had the given value.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;from_version&lt;/code&gt; &lt;/b&gt;：オプション。これが設定されている場合、 &lt;code&gt;version&lt;/code&gt; プロパティが指定された値であるため、このグラフに追加されたノードのみを含む &lt;code&gt;GraphDef&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="a1046a6f35f1157ecaf356871ea3d7aae849ae1b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;full_matrices&lt;/code&gt;&lt;/b&gt;: An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. If true, compute full-sized &lt;code&gt;q&lt;/code&gt; and &lt;code&gt;r&lt;/code&gt;. If false (the default), compute only the leading &lt;code&gt;P&lt;/code&gt; columns of &lt;code&gt;q&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;full_matrices&lt;/code&gt; &lt;/b&gt;：オプションの &lt;code&gt;bool&lt;/code&gt; 。デフォルトは &lt;code&gt;False&lt;/code&gt; です。trueの場合、フルサイズの &lt;code&gt;q&lt;/code&gt; および &lt;code&gt;r&lt;/code&gt; を計算します。false（デフォルト）の場合、 &lt;code&gt;q&lt;/code&gt; の先頭の &lt;code&gt;P&lt;/code&gt; 列のみを計算します。</target>
        </trans-unit>
        <trans-unit id="3aa99409546a9678aae5065f2e3f063f5ad1635e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;full_matrices&lt;/code&gt;&lt;/b&gt;: If true, compute full-sized &lt;code&gt;u&lt;/code&gt; and &lt;code&gt;v&lt;/code&gt;. If false (the default), compute only the leading &lt;code&gt;P&lt;/code&gt; singular vectors. Ignored if &lt;code&gt;compute_uv&lt;/code&gt; is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;full_matrices&lt;/code&gt; &lt;/b&gt;：trueの場合、フルサイズの &lt;code&gt;u&lt;/code&gt; と &lt;code&gt;v&lt;/code&gt; を計算します。false（デフォルト）の場合、先頭の &lt;code&gt;P&lt;/code&gt; 特異ベクトルのみを計算します。 &lt;code&gt;compute_uv&lt;/code&gt; が &lt;code&gt;False&lt;/code&gt; の場合は無視されます。</target>
        </trans-unit>
        <trans-unit id="4c0103cb1cf9bd8b4e7251bc39201c403ec3044e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;full_name&lt;/code&gt;&lt;/b&gt;: Name of the full variable of which this &lt;code&gt;Variable&lt;/code&gt; is a slice.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;full_name&lt;/code&gt; &lt;/b&gt;：この &lt;code&gt;Variable&lt;/code&gt; がスライスである完全な変数の名前。</target>
        </trans-unit>
        <trans-unit id="cd3ced338f5f6fb293dd96c7b4fca86661a13a7c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;full_shape&lt;/code&gt;&lt;/b&gt;: Shape of the full variable, as a list of int.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;full_shape&lt;/code&gt; &lt;/b&gt;：intのリストとしての完全な変数の形状。</target>
        </trans-unit>
        <trans-unit id="eee86b8c68ce7b1ab047f7ef98679a58f393ab22" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;func&lt;/code&gt;&lt;/b&gt;: A Python function which accepts a list of &lt;code&gt;Tensor&lt;/code&gt; objects having element types that match the corresponding &lt;a href=&quot;tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt; objects in &lt;code&gt;inp&lt;/code&gt; and returns a list of &lt;code&gt;Tensor&lt;/code&gt; objects (or a single &lt;code&gt;Tensor&lt;/code&gt;, or &lt;code&gt;None&lt;/code&gt;) having element types that match the corresponding values in &lt;code&gt;Tout&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;func&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;inp&lt;/code&gt; の対応する&lt;a href=&quot;tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt;オブジェクトと一致する要素タイプを持つ &lt;code&gt;Tensor&lt;/code&gt; オブジェクトのリストを受け入れ、対応する値と一致する要素タイプを持つ &lt;code&gt;Tensor&lt;/code&gt; オブジェクト（または単一の &lt;code&gt;Tensor&lt;/code&gt; または &lt;code&gt;None&lt;/code&gt; ）のリストを返すPython関数 &lt;code&gt;Tout&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ada9091eedb21103e50a5331b71e60310b3403a8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;func&lt;/code&gt;&lt;/b&gt;: A Python function, which accepts &lt;code&gt;ndarray&lt;/code&gt; objects as arguments and returns a list of &lt;code&gt;ndarray&lt;/code&gt; objects (or a single &lt;code&gt;ndarray&lt;/code&gt;). This function must accept as many arguments as there are tensors in &lt;code&gt;inp&lt;/code&gt;, and these argument types will match the corresponding &lt;a href=&quot;../../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt; objects in &lt;code&gt;inp&lt;/code&gt;. The returns &lt;code&gt;ndarray&lt;/code&gt;s must match the number and types defined &lt;code&gt;Tout&lt;/code&gt;. Important Note: Input and output numpy &lt;code&gt;ndarray&lt;/code&gt;s of &lt;code&gt;func&lt;/code&gt; are not guaranteed to be copies. In some cases their underlying memory will be shared with the corresponding TensorFlow tensors. In-place modification or storing &lt;code&gt;func&lt;/code&gt; input or return values in python datastructures without explicit (np.)copy can have non-deterministic consequences.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;func&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;ndarray&lt;/code&gt; オブジェクトを引数として受け入れ、 &lt;code&gt;ndarray&lt;/code&gt; オブジェクト（または単一の &lt;code&gt;ndarray&lt;/code&gt; ）のリストを返すPython関数。この関数は、 &lt;code&gt;inp&lt;/code&gt; にあるテンソルと同じ数の引数を受け入れる必要があります。これらの引数の型は、 &lt;code&gt;inp&lt;/code&gt; の対応する&lt;a href=&quot;../../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt;オブジェクトと一致します。返される &lt;code&gt;ndarray&lt;/code&gt; は、 &lt;code&gt;Tout&lt;/code&gt; で定義されている数と型と一致する必要があります。重要な注意： &lt;code&gt;func&lt;/code&gt; の入出力numpy &lt;code&gt;ndarray&lt;/code&gt; は、コピーであるとは限りません。場合によっては、それらの基礎となるメモリが対応するTensorFlowテンソルと共有されます。インプレース変更または保存 &lt;code&gt;func&lt;/code&gt; 明示的な（np。）copyのないPythonデータ構造のfunc入力または戻り値は、非決定的な結果をもたらす可能性があります。</target>
        </trans-unit>
        <trans-unit id="90b199c8c49073f6bcef9800ee8aed3edaca098d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;func&lt;/code&gt;&lt;/b&gt;: A Python function, which accepts &lt;code&gt;numpy.ndarray&lt;/code&gt; objects as arguments and returns a list of &lt;code&gt;numpy.ndarray&lt;/code&gt; objects (or a single &lt;code&gt;numpy.ndarray&lt;/code&gt;). This function must accept as many arguments as there are tensors in &lt;code&gt;inp&lt;/code&gt;, and these argument types will match the corresponding &lt;a href=&quot;tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt; objects in &lt;code&gt;inp&lt;/code&gt;. The returns &lt;code&gt;numpy.ndarray&lt;/code&gt;s must match the number and types defined &lt;code&gt;Tout&lt;/code&gt;. Important Note: Input and output &lt;code&gt;numpy.ndarray&lt;/code&gt;s of &lt;code&gt;func&lt;/code&gt; are not guaranteed to be copies. In some cases their underlying memory will be shared with the corresponding TensorFlow tensors. In-place modification or storing &lt;code&gt;func&lt;/code&gt; input or return values in python datastructures without explicit (np.)copy can have non-deterministic consequences.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;func&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;numpy.ndarray&lt;/code&gt; オブジェクトを引数として受け入れ、 &lt;code&gt;numpy.ndarray&lt;/code&gt; オブジェクト（または単一の &lt;code&gt;numpy.ndarray&lt;/code&gt; ）のリストを返すPython関数。この関数は、 &lt;code&gt;inp&lt;/code&gt; にあるテンソルと同じ数の引数を受け入れる必要があります。これらの引数の型は、 &lt;code&gt;inp&lt;/code&gt; の対応する&lt;a href=&quot;tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt;オブジェクトと一致します。返される &lt;code&gt;numpy.ndarray&lt;/code&gt; は、 &lt;code&gt;Tout&lt;/code&gt; で定義されている数と型と一致する必要があります。重要な注意：入力と出力の &lt;code&gt;numpy.ndarray&lt;/code&gt; 秒の &lt;code&gt;func&lt;/code&gt; コピーであるとは限りません。場合によっては、それらの基礎となるメモリが対応するTensorFlowテンソルと共有されます。明示的な（np。）コピーを行わずにインプレース変更または &lt;code&gt;func&lt;/code&gt; 入力または戻り値をPythonデータ構造に格納すると、非決定的な結果が生じる可能性があります。</target>
        </trans-unit>
        <trans-unit id="fc137ed9aab62a25ce35352500cc8de41a2ebd2d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;func&lt;/code&gt;&lt;/b&gt;: A callable that accepts as many arguments as there are structures.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;func&lt;/code&gt; &lt;/b&gt;：構造体と同じ数の引数を受け入れる呼び出し可能オブジェクト。</target>
        </trans-unit>
        <trans-unit id="8172df55566d10b40efd148157b60d7ebc8a0472" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;func&lt;/code&gt;&lt;/b&gt;: function to decorate.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;func&lt;/code&gt; &lt;/b&gt;：デコレートする関数。</target>
        </trans-unit>
        <trans-unit id="7b60a169a1c962a3fae883e98bce7da742f7d374" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;func&lt;/code&gt;&lt;/b&gt;: the function to be compiled. If &lt;code&gt;func&lt;/code&gt; is None, &lt;a href=&quot;function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt; returns a decorator that can be invoked with a single argument - &lt;code&gt;func&lt;/code&gt;. In other words, &lt;code&gt;tf.function(input_signature=...)(func)&lt;/code&gt; is equivalent to &lt;a href=&quot;function&quot;&gt;&lt;code&gt;tf.function(func, input_signature=...)&lt;/code&gt;&lt;/a&gt;. The former can be used as decorator.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;func&lt;/code&gt; &lt;/b&gt;：コンパイルされる関数。場合 &lt;code&gt;func&lt;/code&gt; が Noneで、&lt;a href=&quot;function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; は&lt;/a&gt; -単一の引数で呼び出すことができデコレータ返し &lt;code&gt;func&lt;/code&gt; 。つまり、 &lt;code&gt;tf.function(input_signature=...)(func)&lt;/code&gt; は&lt;a href=&quot;function&quot;&gt; &lt;code&gt;tf.function(func, input_signature=...)&lt;/code&gt; &lt;/a&gt;と同等です。前者はデコレータとして使用できます。</target>
        </trans-unit>
        <trans-unit id="b99a40e2e1b0ebc34b32dd3e0d3814f228264bec" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;func_&lt;/code&gt;&lt;/b&gt;: The function to wrap.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;func_&lt;/code&gt; &lt;/b&gt;：ラップする関数。</target>
        </trans-unit>
        <trans-unit id="079985e3db0804f2fe3c7f2f06344f4167ed0f67" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;funcs&lt;/code&gt;&lt;/b&gt;: List of TensorFlow ConcreteFunctions. The list should not contain duplicate elements.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;funcs&lt;/code&gt; &lt;/b&gt;：TensorFlow ConcreteFunctionsのリスト。リストには重複する要素を含めないでください。</target>
        </trans-unit>
        <trans-unit id="dc17438109b55ebb07e11982f4c56de942e251e0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;funcs&lt;/code&gt;&lt;/b&gt;: List of TensorFlow ConcreteFunctions. The list should not contain duplicate elements. Currently converter can only convert a single ConcreteFunction. Converting multiple functions is under development.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;funcs&lt;/code&gt; &lt;/b&gt;：TensorFlow ConcreteFunctionsのリスト。リストには重複する要素を含めないでください。現在、コンバーターは1つのConcreteFunctionのみを変換できます。複数の関数の変換は開発中です。</target>
        </trans-unit>
        <trans-unit id="aa17ee65886355857f4662d8f9252552789cc0d1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;function&lt;/code&gt;&lt;/b&gt;: The callable taking two arguments and an optional msg= argument that raises self.failureException with a useful error message when the two arguments are not equal.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;function&lt;/code&gt; &lt;/b&gt;：2つの引数をとる呼び出し可能オブジェクトと、2つの引数が等しくない場合に役立つエラーメッセージでself.failureExceptionを発生させるオプションのmsg =引数。</target>
        </trans-unit>
        <trans-unit id="59006cd68406039722ede19dc6595306bca4f8e6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;function&lt;/code&gt;&lt;/b&gt;: The function to be evaluated. Takes input tensor as first argument.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;function&lt;/code&gt; &lt;/b&gt;：評価される関数。最初の引数として入力テンソルを取ります。</target>
        </trans-unit>
        <trans-unit id="4d53bd33b475641c97a3c4b89afb687cbd93585e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;function_name&lt;/code&gt;&lt;/b&gt;: Name of the function (the custom op name in tflite)</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;function_name&lt;/code&gt; &lt;/b&gt;：&lt;b&gt;関数の&lt;/b&gt;名前（tfliteのカスタムop名）</target>
        </trans-unit>
        <trans-unit id="ecfe26587251096e256f42d31f7fb9ba5b66e59f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;function_name&lt;/code&gt;&lt;/b&gt;: Name of the function that this tracks arguments for.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;function_name&lt;/code&gt; &lt;/b&gt;：これが引数を追跡する関数の名前。</target>
        </trans-unit>
        <trans-unit id="317c2bb4f23f0a229364851b44a2acebaeeaed62" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fused&lt;/code&gt;&lt;/b&gt;: if &lt;code&gt;None&lt;/code&gt; or &lt;code&gt;True&lt;/code&gt;, use a faster, fused implementation if possible. If &lt;code&gt;False&lt;/code&gt;, use the system recommended implementation.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fused&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;None&lt;/code&gt; または &lt;code&gt;True&lt;/code&gt; の場合、可能であればより高速な融合実装を使用します。 &lt;code&gt;False&lt;/code&gt; の場合、システムが推奨する実装を使用します。</target>
        </trans-unit>
        <trans-unit id="9fada495dab8b3043d6741f1efc0d35135171680" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fused&lt;/code&gt;&lt;/b&gt;: if &lt;code&gt;True&lt;/code&gt;, use a faster, fused implementation, or raise a ValueError if the fused implementation cannot be used. If &lt;code&gt;None&lt;/code&gt;, use the faster implementation if possible. If False, do not used the fused implementation.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fused&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;True&lt;/code&gt; の場合、より高速な融合実装を使用するか、融合実装を使用できない場合はValueErrorを送出します。場合 &lt;code&gt;None&lt;/code&gt; 可能であれば、より高速な実装を使用しています。Falseの場合、融合実装を使用しません。</target>
        </trans-unit>
        <trans-unit id="a903b89698d22332a9f78b1f27b80b3108684d23" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;g&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;Graph&lt;/code&gt;. The parent graph.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;g&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Graph&lt;/code&gt; 。親グラフ。</target>
        </trans-unit>
        <trans-unit id="99ff6695fb998b28e0c3f4a9fa80e62311e8aaf2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;gain&lt;/code&gt;&lt;/b&gt;: A scalar or tensor. The constant multiplier.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;gain&lt;/code&gt; &lt;/b&gt;：スカラーまたはテンソル。定数乗数。</target>
        </trans-unit>
        <trans-unit id="b223d1d66c0ba1f2e3c8d9c86aceac4c0541d471" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;gain&lt;/code&gt;&lt;/b&gt;: Multiplicative factor to apply to the identity matrix.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;gain&lt;/code&gt; &lt;/b&gt;：単位行列に適用する乗法係数。</target>
        </trans-unit>
        <trans-unit id="1dbf3539b7b80ae652e2134b28ca5ae1a6455155" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;gain&lt;/code&gt;&lt;/b&gt;: multiplicative factor to apply to the orthogonal matrix</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;gain&lt;/code&gt; &lt;/b&gt;：直交行列に適用する乗法係数</target>
        </trans-unit>
        <trans-unit id="22dffb6500b34062121ded56104ad0fa6873bdb8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;gamma&lt;/code&gt;&lt;/b&gt;: A 1D gamma Tensor with size matching the last dimension of t. If &quot;scale_after_normalization&quot; is true, this tensor will be multiplied with the normalized tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;gamma&lt;/code&gt; &lt;/b&gt;：サイズがtの最後の次元と一致する1Dガンマテンソル。「scale_after_normalization」がtrueの場合、このテンソルは正規化されたテンソルと乗算されます。</target>
        </trans-unit>
        <trans-unit id="9650d07800aedbda6b0fbb6568c322afdda4a09c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;gamma&lt;/code&gt;&lt;/b&gt;: A scalar or tensor. Non negative real number.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;gamma&lt;/code&gt; &lt;/b&gt;：スカラーまたはテンソル。非負の実数。</target>
        </trans-unit>
        <trans-unit id="4edc8275051d31c363e714a15d706a18ee267b33" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;gamma&lt;/code&gt;&lt;/b&gt;: Tensor by which to scale the input.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;gamma&lt;/code&gt; &lt;/b&gt;：入力をスケーリングするテンソル。</target>
        </trans-unit>
        <trans-unit id="51a4beb64a683a841c5e1557c1535538b15441ff" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;gamma_constraint&lt;/code&gt;&lt;/b&gt;: An optional projection function to be applied to the &lt;code&gt;gamma&lt;/code&gt; weight after being updated by an &lt;code&gt;Optimizer&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;gamma_constraint&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Optimizer&lt;/code&gt; によって更新された後、 &lt;code&gt;gamma&lt;/code&gt; 重みに適用されるオプションの投影関数。</target>
        </trans-unit>
        <trans-unit id="ce254e4de9c20c9addfe54728e04170b947b5539" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;gamma_constraint&lt;/code&gt;&lt;/b&gt;: Optional constraint for the gamma weight.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;gamma_constraint&lt;/code&gt; &lt;/b&gt;：ガンマ重みのオプションの制約。</target>
        </trans-unit>
        <trans-unit id="55c308552278f2d230ceebe92bdfbfe6c95786b3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;gamma_initializer&lt;/code&gt;&lt;/b&gt;: Initializer for the gamma weight.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;gamma_initializer&lt;/code&gt; &lt;/b&gt;：ガンマの重みの初期化子。</target>
        </trans-unit>
        <trans-unit id="8c67530ed291d2d447846cc2a06703eee46bcdda" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;gamma_regularizer&lt;/code&gt;&lt;/b&gt;: Optional regularizer for the gamma weight.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;gamma_regularizer&lt;/code&gt; &lt;/b&gt;：ガンマ重みのオプションの&lt;b&gt;レギュラライザー&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="77e96276bcd5a6e36926deeb5bfda6b3d9beb909" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;gate_gradients&lt;/code&gt;&lt;/b&gt;: How to gate the computation of gradients. Can be &lt;code&gt;GATE_NONE&lt;/code&gt;, &lt;code&gt;GATE_OP&lt;/code&gt;, or &lt;code&gt;GATE_GRAPH&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;gate_gradients&lt;/code&gt; &lt;/b&gt;：勾配の計算をゲートする方法。 &lt;code&gt;GATE_NONE&lt;/code&gt; 、 &lt;code&gt;GATE_OP&lt;/code&gt; 、または &lt;code&gt;GATE_GRAPH&lt;/code&gt; を指定できます。</target>
        </trans-unit>
        <trans-unit id="257c04bc1b83149fa87ddbb78e3ba1dadecc922e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;gate_gradients&lt;/code&gt;&lt;/b&gt;: If True, add a tuple around the gradients returned for an operations. This avoids some race conditions.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;gate_gradients&lt;/code&gt; &lt;/b&gt;：Trueの場合、操作で返されるグラデーションの周囲にタプルを追加します。これにより、いくつかの競合状態が回避されます。</target>
        </trans-unit>
        <trans-unit id="cb89dff459f21a5555033ab5b0a3a41bf3981ed6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;gate_gradients&lt;/code&gt;&lt;/b&gt;: See &lt;code&gt;gradients()&lt;/code&gt; documentation for details.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;gate_gradients&lt;/code&gt; &lt;/b&gt;：詳細は、 &lt;code&gt;gradients()&lt;/code&gt; のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="f23484100118da449a4a025d6bcaf84020fe71c0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;gaussian&lt;/code&gt;&lt;/b&gt;: &lt;a href=&quot;https://en.wikipedia.org/wiki/Gaussian_filter&quot;&gt;Gaussian kernel&lt;/a&gt; with radius 3, sigma = 1.5 / 3.0.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;gaussian&lt;/code&gt; &lt;/b&gt;：半径3の&lt;a href=&quot;https://en.wikipedia.org/wiki/Gaussian_filter&quot;&gt;ガウスカーネル&lt;/a&gt;、シグマ= 1.5 / 3.0。</target>
        </trans-unit>
        <trans-unit id="e00d318ddfbf629392b8f8b1b02b89be6e05b0c0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;generator&lt;/code&gt;&lt;/b&gt;: A callable object that returns an object that supports the &lt;code&gt;iter()&lt;/code&gt; protocol. If &lt;code&gt;args&lt;/code&gt; is not specified, &lt;code&gt;generator&lt;/code&gt; must take no arguments; otherwise it must take as many arguments as there are values in &lt;code&gt;args&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;generator&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;iter()&lt;/code&gt; プロトコルをサポートするオブジェクトを返す呼び出し可能なオブジェクト。 &lt;code&gt;args&lt;/code&gt; が指定されていない場合、 &lt;code&gt;generator&lt;/code&gt; は引数を取ってはなりません。それ以外の場合は、 &lt;code&gt;args&lt;/code&gt; の値と同じ数の引数を取る必要があります。</target>
        </trans-unit>
        <trans-unit id="d1b21e4b52f331d7f22d05628ec2ef0507b4aef3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;generator&lt;/code&gt;&lt;/b&gt;: a generator function which yields data</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;generator&lt;/code&gt; &lt;/b&gt;：データを生成するジェネレーター関数</target>
        </trans-unit>
        <trans-unit id="f9f82f91bc1b00365aafaa3445299c9c9306cb6a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;generator&lt;/code&gt;&lt;/b&gt;: the new &lt;code&gt;Generator&lt;/code&gt; object.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;generator&lt;/code&gt; &lt;/b&gt;：新しい &lt;code&gt;Generator&lt;/code&gt; オブジェクト。</target>
        </trans-unit>
        <trans-unit id="a1c86c47e3fa4d9fdbb5889c621c8ad107020bdf" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;global_batch_size&lt;/code&gt;&lt;/b&gt;: Optional global batch size value. Defaults to (size of first dimension of &lt;code&gt;losses&lt;/code&gt;) * (number of replicas).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;global_batch_size&lt;/code&gt; &lt;/b&gt;：オプションのグローバルバッチサイズ値。デフォルトは（ &lt;code&gt;losses&lt;/code&gt; の最初の次元のサイズ）*（レプリカの数）です。</target>
        </trans-unit>
        <trans-unit id="46b72e87af2d8cc20b1f539b492b602f7b480f1f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;global_batch_size&lt;/code&gt;&lt;/b&gt;: the global batch size which should be divisible by &lt;code&gt;num_replicas_in_sync&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;global_batch_size&lt;/code&gt; &lt;/b&gt;：割り切れるあるべきグローバルバッチサイズ &lt;code&gt;num_replicas_in_sync&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="ef1038470a6e06b2e5885e122aa06516c7123c09" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;global_norm&lt;/code&gt;&lt;/b&gt;: A 0-D (scalar) &lt;code&gt;Tensor&lt;/code&gt; representing the global norm.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;global_norm&lt;/code&gt; &lt;/b&gt;：グローバルノルムを表す0-D（スカラー） &lt;code&gt;Tensor&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c5e7b4884751115dcf8e39808c71b421d25cb4de" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;global_step&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; containing the current training step number.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;global_step&lt;/code&gt; &lt;/b&gt;：現在のトレーニングステップ番号を含む &lt;code&gt;Tensor&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8bff0a46ea73755c38cc23700825120b9b6fe914" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;global_step&lt;/code&gt;&lt;/b&gt;: A Python number. Global step to use for the decay computation. Must not be negative.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;global_step&lt;/code&gt; &lt;/b&gt;：Python番号。減衰計算に使用するグローバルステップ。負であってはなりません。</target>
        </trans-unit>
        <trans-unit id="b9f43286e3407c0dfc84c7dbb800dcaf52df5491" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;global_step&lt;/code&gt;&lt;/b&gt;: A scalar &lt;code&gt;int32&lt;/code&gt; or &lt;code&gt;int64&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; or a Python number. Global step to use for the decay computation.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;global_step&lt;/code&gt; &lt;/b&gt;：スカラー &lt;code&gt;int32&lt;/code&gt; または &lt;code&gt;int64&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; またはPython数値。減衰計算に使用するグローバルステップ。</target>
        </trans-unit>
        <trans-unit id="e909d509f5c553197abd58bf08e6b8787a8b6bee" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;global_step&lt;/code&gt;&lt;/b&gt;: A scalar &lt;code&gt;int32&lt;/code&gt; or &lt;code&gt;int64&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; or a Python number. Global step to use for the decay computation. Must not be negative.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;global_step&lt;/code&gt; &lt;/b&gt;：スカラー &lt;code&gt;int32&lt;/code&gt; または &lt;code&gt;int64&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; またはPython数値。減衰計算に使用するグローバルステップ。負であってはなりません。</target>
        </trans-unit>
        <trans-unit id="59417f7977bf1777e9522fbf793569b36de5a5bb" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;global_step&lt;/code&gt;&lt;/b&gt;: An integer Tensor of size 1 that counts steps. The value from 'global_step' is used in summaries and checkpoint filenames. Default to the op named 'global_step' in the graph if it exists, is of rank 1, size 1, and of type tf.int32 or tf.int64. If &lt;code&gt;None&lt;/code&gt; the global step is not recorded in summaries and checkpoint files. Used by chief supervisors if a &lt;code&gt;logdir&lt;/code&gt; was specified.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;global_step&lt;/code&gt; &lt;/b&gt;：ステップをカウントするサイズ1の整数Tensor。'global_step'の値は、要約およびチェックポイントファイル名で使用されます。存在する場合、グラフの「global_step」という名前のopがデフォルトであり、ランク1、サイズ1、タイプtf.int32またはtf.int64です。 &lt;code&gt;None&lt;/code&gt; の場合、グローバルステップはサマリーおよびチェックポイントファイルに記録されません。 &lt;code&gt;logdir&lt;/code&gt; が指定された場合、主任監督者によって使用されます。</target>
        </trans-unit>
        <trans-unit id="7374e735f645b13c608eabf7a890254c61458ee4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;global_step&lt;/code&gt;&lt;/b&gt;: If provided the global step number is appended to &lt;code&gt;save_path&lt;/code&gt; to create the checkpoint filenames. The optional argument can be a &lt;code&gt;Tensor&lt;/code&gt;, a &lt;code&gt;Tensor&lt;/code&gt; name or an integer.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;global_step&lt;/code&gt; &lt;/b&gt;：指定すると、グローバルステップ番号が &lt;code&gt;save_path&lt;/code&gt; に追加され、チェックポイントファイル名が作成されます。オプションの引数には、 &lt;code&gt;Tensor&lt;/code&gt; 、 &lt;code&gt;Tensor&lt;/code&gt; 名、または整数を指定できます。</target>
        </trans-unit>
        <trans-unit id="87a1568cee58373502fce55d226ada2c7f20b286" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;global_step&lt;/code&gt;&lt;/b&gt;: Int. global step this summary is associated with. If &lt;code&gt;None&lt;/code&gt;, it will try to fetch the current step.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;global_step&lt;/code&gt; &lt;/b&gt;：Int。この要約が関連付けられているグローバルステップ。 &lt;code&gt;None&lt;/code&gt; の場合、現在のステップをフェッチしようとします。</target>
        </trans-unit>
        <trans-unit id="1a025f1193053f50d618c71091f83bd9aa9ffd37" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;global_step&lt;/code&gt;&lt;/b&gt;: Number. Optional global step counter to record with the StepStats.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;global_step&lt;/code&gt; &lt;/b&gt;：数値。StepStatsで記録するオプションのグローバルステップカウンター。</target>
        </trans-unit>
        <trans-unit id="2e4f5a9b5eb586eeaea27cbb5ff1608c798634fa" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;global_step&lt;/code&gt;&lt;/b&gt;: Number. Optional global step counter to record with the graph.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;global_step&lt;/code&gt; &lt;/b&gt;：数値。グラフとともに記録するオプションのグローバルステップカウンター。</target>
        </trans-unit>
        <trans-unit id="889ed9dfc7d33bb4fd7a195e45493284b3fda7d1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;global_step&lt;/code&gt;&lt;/b&gt;: Number. Optional global step value to record with the summary.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;global_step&lt;/code&gt; &lt;/b&gt;：数値。サマリーとともに記録するオプションのグローバルステップ値。</target>
        </trans-unit>
        <trans-unit id="2701be1e59a2a4e4ecb76076fa2910bd9c316f98" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;global_step&lt;/code&gt;&lt;/b&gt;: Optional &lt;code&gt;Variable&lt;/code&gt; to increment by one after the variables have been updated.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;global_step&lt;/code&gt; &lt;/b&gt;：変数が更新された後に1ずつ増分するオプションの &lt;code&gt;Variable&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5b4bbadc2f82f208d18bc448ec097667e4cebf1f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;global_step&lt;/code&gt;&lt;/b&gt;: Optional Variable to increment by one after the variables have been updated.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;global_step&lt;/code&gt; &lt;/b&gt;：変数が更新された後に1ずつ増分するオプションの変数。</target>
        </trans-unit>
        <trans-unit id="dd41ddad13ce9320cd7de0d0bc18aeb8a5622ca6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;global_step_tensor&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;Tensor&lt;/code&gt; or the &lt;code&gt;name&lt;/code&gt; of the operation that contains the global step.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;global_step_tensor&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; またはグローバルステップを含む操作の &lt;code&gt;name&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7b8ec04240a2b3d60f1577f4e63544417a4cac1e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;global_step_tensor&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;Tensor&lt;/code&gt; to test.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;global_step_tensor&lt;/code&gt; &lt;/b&gt;：テストする &lt;code&gt;Tensor&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="30340eb3d7c8c261cc705f6709df1322b2c4556a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;gnu_getopt&lt;/code&gt;&lt;/b&gt;: bool, whether or not to use GNU style scanning.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;gnu_getopt&lt;/code&gt; &lt;/b&gt;：bool、GNUスタイルのスキャンを使用するかどうか。</target>
        </trans-unit>
        <trans-unit id="07e39893773eca41d120a5a22cc4d78101f20ccc" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;go_backwards&lt;/code&gt;&lt;/b&gt;: Boolean (default &lt;code&gt;False&lt;/code&gt;). If True, process the input sequence backwards and return the reversed sequence.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;go_backwards&lt;/code&gt; &lt;/b&gt;：ブール値（デフォルトは &lt;code&gt;False&lt;/code&gt; ）。Trueの場合、入力シーケンスを逆方向に処理し、逆のシーケンスを返します。</target>
        </trans-unit>
        <trans-unit id="9a21b7df7336800f013f23af1c4d91555cb05c6f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;go_backwards&lt;/code&gt;&lt;/b&gt;: Boolean (default False). If True, process the input sequence backwards and return the reversed sequence.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;go_backwards&lt;/code&gt; &lt;/b&gt;：ブール値（デフォルトはFalse）。Trueの場合、入力シーケンスを逆方向に処理し、逆のシーケンスを返します。</target>
        </trans-unit>
        <trans-unit id="00361f6691efc613f1e6f293d4713457c659e8d5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;go_backwards&lt;/code&gt;&lt;/b&gt;: Boolean (default False). If True, process the input sequence backwards.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;go_backwards&lt;/code&gt; &lt;/b&gt;：ブール値（デフォルトはFalse）。Trueの場合、入力シーケンスを逆方向に処理します。</target>
        </trans-unit>
        <trans-unit id="01bc68973b21f99af139e5039b446fe1a8820649" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;go_backwards&lt;/code&gt;&lt;/b&gt;: Boolean. If True, do the iteration over the time dimension in reverse order and return the reversed sequence.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;go_backwards&lt;/code&gt; &lt;/b&gt;：ブール値。Trueの場合、時間ディメンションの反復を逆の順序で実行し、逆のシーケンスを返します。</target>
        </trans-unit>
        <trans-unit id="ead1319816cc2e228bc9b78775bea182f8474cf8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;gpus&lt;/code&gt;&lt;/b&gt;: Integer &amp;gt;= 2, number of on GPUs on which to create model replicas.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;gpus&lt;/code&gt; &lt;/b&gt;：整数&amp;gt; = 2、モデルのレプリカを作成するGPU上の数。</target>
        </trans-unit>
        <trans-unit id="f61b5fe1abd360d74f503f53d0846e2425097bee" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;gpus_per_node&lt;/code&gt;&lt;/b&gt;: Number of GPUs available on each node.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;gpus_per_node&lt;/code&gt; &lt;/b&gt;：各ノードで使用可能なGPUの数。</target>
        </trans-unit>
        <trans-unit id="5e63fbfe4121647ef332e2ab43642673330b2d86" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;gpus_per_task&lt;/code&gt;&lt;/b&gt;: Number of GPUs to be used for each task.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;gpus_per_task&lt;/code&gt; &lt;/b&gt;：各タスクに使用されるGPUの数。</target>
        </trans-unit>
        <trans-unit id="18aefcf72a3de6e72e7e810fe72420508ca9cd13" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;grace_period&lt;/code&gt;&lt;/b&gt;: Time (in seconds) to wait for process cleanup to propagate.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;grace_period&lt;/code&gt; &lt;/b&gt;：プロセスのクリーンアップが伝播するのを待機する時間（秒単位）。</target>
        </trans-unit>
        <trans-unit id="f9f312400eb1d3dc5f13c642a36658cb95e89e4a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;grad&lt;/code&gt;&lt;/b&gt;: The gradient &lt;code&gt;IndexedSlices&lt;/code&gt; to be applied.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;grad&lt;/code&gt; &lt;/b&gt;：適用されるグラデーション &lt;code&gt;IndexedSlices&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4582445079dcec8e7961474fdadd39f23701bfc8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;grad&lt;/code&gt;&lt;/b&gt;: The gradient tensor to be applied.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;grad&lt;/code&gt; &lt;/b&gt;：適用される勾配テンソル。</target>
        </trans-unit>
        <trans-unit id="cb0bc0b6fabc410af7ac125f582532eefccb3dd4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;grad_indices&lt;/code&gt;&lt;/b&gt;: Indices of the sparse gradient to be applied.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;grad_indices&lt;/code&gt; &lt;/b&gt;：適用される疎勾配のインデックス。</target>
        </trans-unit>
        <trans-unit id="67ecb662338a8c31d7f449bc16a1b6f5fecc020a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;grad_loss&lt;/code&gt;&lt;/b&gt;: Optional. A &lt;code&gt;Tensor&lt;/code&gt; holding the gradient computed for &lt;code&gt;loss&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;grad_loss&lt;/code&gt; &lt;/b&gt;：オプション。 &lt;code&gt;loss&lt;/code&gt; に対して計算された勾配を保持する &lt;code&gt;Tensor&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6fba4cb529befac352abc9b584481c394628126e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;grad_shape&lt;/code&gt;&lt;/b&gt;: Shape of the sparse gradient to be applied.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;grad_shape&lt;/code&gt; &lt;/b&gt;：適用される疎勾配の形状。</target>
        </trans-unit>
        <trans-unit id="61efa4e2d5ffd6efc86b0e8937da5163c0db0680" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;grad_values&lt;/code&gt;&lt;/b&gt;: Values of the sparse gradient to be applied.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;grad_values&lt;/code&gt; &lt;/b&gt;：スパース勾配の値が適用されます。</target>
        </trans-unit>
        <trans-unit id="65976e40dbfe1baf5c77b640180e422ec8fd31cb" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;grad_ys&lt;/code&gt;&lt;/b&gt;: Optional. A &lt;code&gt;Tensor&lt;/code&gt; or list of tensors the same size as &lt;code&gt;ys&lt;/code&gt; and holding the gradients computed for each y in &lt;code&gt;ys&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;grad_ys&lt;/code&gt; &lt;/b&gt;：オプション。A &lt;code&gt;Tensor&lt;/code&gt; 又はテンソルのリストと同じ大きさ &lt;code&gt;ys&lt;/code&gt; 及び各yについて計算勾配保持 &lt;code&gt;ys&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e7b827c7a451f4c8dcde0cf1069711f55e506370" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;gradients&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. Backpropagated gradients above the FakeQuantWithMinMaxArgs operation.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;gradients&lt;/code&gt; &lt;/b&gt;：A &lt;code&gt;Tensor&lt;/code&gt; 型の &lt;code&gt;float32&lt;/code&gt; 。FakeQuantWithMinMaxArgsオペレーションの上のバックプロパゲーションされたグラデーション。</target>
        </trans-unit>
        <trans-unit id="ee50a7f33edc0edfc1c79d52cf6adaaf14b20e24" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;gradients&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. Backpropagated gradients above the FakeQuantWithMinMaxVars operation, shape one of: &lt;code&gt;[d]&lt;/code&gt;, &lt;code&gt;[b, d]&lt;/code&gt;, &lt;code&gt;[b, h, w, d]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;gradients&lt;/code&gt; &lt;/b&gt;：A &lt;code&gt;Tensor&lt;/code&gt; 型の &lt;code&gt;float32&lt;/code&gt; 。FakeQuantWithMinMaxVarsオペレーションの上のバックプロパゲーションされたグラデーション。 &lt;code&gt;[d]&lt;/code&gt; 、 &lt;code&gt;[b, d]&lt;/code&gt; 、 &lt;code&gt;[b, h, w, d]&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="b00161514a2aea894e24c1156df985218ce2abab" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;gradients&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. Backpropagated gradients above the FakeQuantWithMinMaxVars operation.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;gradients&lt;/code&gt; &lt;/b&gt;：A &lt;code&gt;Tensor&lt;/code&gt; 型の &lt;code&gt;float32&lt;/code&gt; 。FakeQuantWithMinMaxVarsオペレーションの上のバックプロパゲーションされたグラデーション。</target>
        </trans-unit>
        <trans-unit id="f0a18a4bfc11072f26a2e1a7aaf86c2564af0282" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;grads&lt;/code&gt;&lt;/b&gt;: A list of tensors, each which will be divided by the loss scale. Can have None values, which are ignored.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;grads&lt;/code&gt; &lt;/b&gt;：テンソルのリスト。各テンソルは損失スケールで除算されます。Noneの値を持つことができ、無視されます。</target>
        </trans-unit>
        <trans-unit id="d6755c2f950a0006ebd81112e01107ae3eb071bb" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;grads&lt;/code&gt;&lt;/b&gt;: A nested structure of unscaled gradients, each which is the gradient of the loss with respect to a weight. The gradients should have already been divided by the loss scale being before passed to this function. 'None' gradients are accepted, and are ignored.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;grads&lt;/code&gt; &lt;/b&gt;：スケールされていない勾配のネストされた構造。それぞれは、重みに関する損失の勾配です。勾配は、この関数に渡される前の損失スケールですでに除算されているはずです。「なし」のグラデーションは受け入れられ、無視されます。</target>
        </trans-unit>
        <trans-unit id="0cb91f3ec058b52458846dc3671a897c220758dc" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;grads_and_vars&lt;/code&gt;&lt;/b&gt;: List of (gradient, variable) pairs as returned by &lt;code&gt;compute_gradients()&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;grads_and_vars&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;compute_gradients()&lt;/code&gt; によって返される（gradient、variable）ペアのリスト。</target>
        </trans-unit>
        <trans-unit id="eaee7e8dd6578ab40c7a016449b3e6d11b80d037" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;grads_and_vars&lt;/code&gt;&lt;/b&gt;: List of (gradient, variable) pairs as returned by compute_gradients().</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;grads_and_vars&lt;/code&gt; &lt;/b&gt;：compute_gradients（）によって返される（gradient、variable）ペアのリスト。</target>
        </trans-unit>
        <trans-unit id="017bb767fe85f72d00069ce5a4be6e9915fa8ea7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;grads_and_vars&lt;/code&gt;&lt;/b&gt;: List of (gradient, variable) pairs.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;grads_and_vars&lt;/code&gt; &lt;/b&gt;：（勾配、変数）ペアのリスト。</target>
        </trans-unit>
        <trans-unit id="c9ef81c8480eaf09cae105791daf1180e38948ca" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;graph&lt;/code&gt;&lt;/b&gt;: (Optional.) The &lt;code&gt;Graph&lt;/code&gt; to be launched (described above).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;graph&lt;/code&gt; &lt;/b&gt;：（オプション）起動する &lt;code&gt;Graph&lt;/code&gt; （上記）。</target>
        </trans-unit>
        <trans-unit id="dabaf3dc7d973c85fd841de6286403a468794b43" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;graph&lt;/code&gt;&lt;/b&gt;: A &lt;a href=&quot;../../../graph&quot;&gt;&lt;code&gt;tf.Graph&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../graphdef&quot;&gt;&lt;code&gt;tf.compat.v1.GraphDef&lt;/code&gt;&lt;/a&gt; to output to the writer. This function will not write the default graph by default. When writing to an event log file, the associated step will be zero.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;graph&lt;/code&gt; &lt;/b&gt;：ライターに出力する&lt;a href=&quot;../../../graph&quot;&gt; &lt;code&gt;tf.Graph&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../graphdef&quot;&gt; &lt;code&gt;tf.compat.v1.GraphDef&lt;/code&gt; &lt;/a&gt;。この関数は、デフォルトではデフォルトのグラフを書き込みません。イベントログファイルに書き込む場合、関連するステップはゼロになります。</target>
        </trans-unit>
        <trans-unit id="817550d7f6ec353287d7d92bcff4d5780e526ec3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;graph&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Graph&lt;/code&gt; object, such as &lt;code&gt;sess.graph&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;graph&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;sess.graph&lt;/code&gt; などの &lt;code&gt;Graph&lt;/code&gt; オブジェクト。</target>
        </trans-unit>
        <trans-unit id="ad63fe9bb485aa92b1f8458bb4437ef0068e91b9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;graph&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Graph&lt;/code&gt;. The graph that the model will use. Defaults to the default &lt;code&gt;Graph&lt;/code&gt;. The supervisor may add operations to the graph before creating a session, but the graph should not be modified by the caller after passing it to the supervisor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;graph&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Graph&lt;/code&gt; 。モデルが使用するグラフ。デフォルトはデフォルトの &lt;code&gt;Graph&lt;/code&gt; です。スーパーバイザはセッションを作成する前に操作をグラフに追加できますが、グラフをスーパーバイザに渡した後、呼び出し元がグラフを変更しないでください。</target>
        </trans-unit>
        <trans-unit id="cdc88e0083bd98318449b2ad7703c0bece94cb01" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;graph&lt;/code&gt;&lt;/b&gt;: If True, enables collection of executed graphs. It includes ones from tf.function invocation and ones from the legacy graph mode. The default is True.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;graph&lt;/code&gt; &lt;/b&gt;：Trueの場合、実行されたグラフの収集を有効にします。これには、tf.function呼び出しからのものと、レガシーグラフモードからのものが含まれます。デフォルトはTrueです。</target>
        </trans-unit>
        <trans-unit id="efe8535805cc99b8dadefa6965a39db17d4d3041" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;graph&lt;/code&gt;&lt;/b&gt;: Optional graph to use during the returned session.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;graph&lt;/code&gt; &lt;/b&gt;：返されたセッション中に使用するオプションのグラフ。</target>
        </trans-unit>
        <trans-unit id="45238f05a2eceb88b5cbaa5c1d23e9f086363381" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;graph&lt;/code&gt;&lt;/b&gt;: The &lt;code&gt;Graph&lt;/code&gt; that the model will use.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;graph&lt;/code&gt; &lt;/b&gt;：モデルが使用する &lt;code&gt;Graph&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="321f8f4ea8421c5ce32eed49c069a493e14b844a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;graph&lt;/code&gt;&lt;/b&gt;: The &lt;code&gt;Graph&lt;/code&gt; to export. If &lt;code&gt;None&lt;/code&gt;, use the default graph.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;graph&lt;/code&gt; &lt;/b&gt;：エクスポートする &lt;code&gt;Graph&lt;/code&gt; 。 &lt;code&gt;None&lt;/code&gt; の場合、デフォルトのグラフを使用します。</target>
        </trans-unit>
        <trans-unit id="b190758fb158ec6cd07c4fbf79609780af031ff8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;graph&lt;/code&gt;&lt;/b&gt;: The graph in which to create the global step tensor. If missing, use default graph.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;graph&lt;/code&gt; &lt;/b&gt;：グローバルステップテンソルを作成するグラフ。欠落している場合は、デフォルトのグラフを使用します。</target>
        </trans-unit>
        <trans-unit id="223a031234d6af1194e8fdaf25f09263902f8cc2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;graph&lt;/code&gt;&lt;/b&gt;: The graph to find the global step in. If missing, use default graph.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;graph&lt;/code&gt; &lt;/b&gt;：グローバルステップを見つけるためのグラフ。欠落している場合は、デフォルトのグラフを使用します。</target>
        </trans-unit>
        <trans-unit id="44f4f61de8e117cc592be89f1e3ec1fe32a3acd1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;graph&lt;/code&gt;&lt;/b&gt;: The tf.Graph in which tensors are looked up. If None, the current default graph is used.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;graph&lt;/code&gt; &lt;/b&gt;：テンソルが検索されるtf.Graph。Noneの場合、現在のデフォルトのグラフが使用されます。</target>
        </trans-unit>
        <trans-unit id="8dacebb9fdbc7b89518147ffc1ad0caab3abf056" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;graph&lt;/code&gt;&lt;/b&gt;: tf.Graph. If None and eager execution is not enabled, use default graph.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;graph&lt;/code&gt; &lt;/b&gt;：tf.Graph。NoneとEager Executionが有効になっていない場合は、デフォルトのグラフを使用します。</target>
        </trans-unit>
        <trans-unit id="558222102a816d933f1ce566708c103bc8e7a8ca" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;graph_def&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;GraphDef&lt;/code&gt; protocol buffer.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;graph_def&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;GraphDef&lt;/code&gt; プロトコルバッファー。</target>
        </trans-unit>
        <trans-unit id="ea153c92aa5b34f1ec0c86862d6212bab5491f1e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;graph_def&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;GraphDef&lt;/code&gt; proto containing operations to be imported into the default graph.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;graph_def&lt;/code&gt; &lt;/b&gt;：デフォルトのグラフにインポートされる操作を含む &lt;code&gt;GraphDef&lt;/code&gt; プロト。</target>
        </trans-unit>
        <trans-unit id="2996c5dfacdd5dacc71ffe14ba951e93960297ee" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;graph_def&lt;/code&gt;&lt;/b&gt;: A graph def that we should convert.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;graph_def&lt;/code&gt; &lt;/b&gt;：変換する必要があるグラフ&lt;b&gt;定義&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="74629b60a10a6c6f0609800569db4da837646753" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;graph_def&lt;/code&gt;&lt;/b&gt;: A graph_pb2.GraphDef proto.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;graph_def&lt;/code&gt; &lt;/b&gt;：graph_pb2.GraphDefプロト。</target>
        </trans-unit>
        <trans-unit id="3ebb786bace2b9a18a59c9f50c8eae439745dc49" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;graph_def&lt;/code&gt;&lt;/b&gt;: An object of type graph_pb2.GraphDef or a textual proto representation of a valid GraphDef.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;graph_def&lt;/code&gt; &lt;/b&gt;：タイプgraph_pb2.GraphDefのオブジェクト、または有効なGraphDefのテキストプロト表現。</target>
        </trans-unit>
        <trans-unit id="c9c4c7fe042ca29328b28ac3d3ed214fb58ce07e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;graph_def&lt;/code&gt;&lt;/b&gt;: DEPRECATED. Use the &lt;code&gt;graph&lt;/code&gt; parameter instead.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;graph_def&lt;/code&gt; &lt;/b&gt;：&lt;b&gt;非推奨&lt;/b&gt;。代わりに &lt;code&gt;graph&lt;/code&gt; パラメータを使用してください。</target>
        </trans-unit>
        <trans-unit id="4a8b24c163bd41a1d29e4382e6104626be0d66a9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;graph_def&lt;/code&gt;&lt;/b&gt;: DEPRECATED: Use the &lt;code&gt;graph&lt;/code&gt; argument instead.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;graph_def&lt;/code&gt; &lt;/b&gt;：&lt;b&gt;非推奨&lt;/b&gt;：代わりに &lt;code&gt;graph&lt;/code&gt; 引数を使用してください。</target>
        </trans-unit>
        <trans-unit id="1aa3bbf968a25e9a7f22c6cf83ef255e0aef7292" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;graph_def&lt;/code&gt;&lt;/b&gt;: Frozen TensorFlow GraphDef.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;graph_def&lt;/code&gt; &lt;/b&gt;：凍結されたTensorFlow GraphDef。</target>
        </trans-unit>
        <trans-unit id="e03fa80248dc80ff99659250aae78c5d2cf3a3ca" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;graph_def_file&lt;/code&gt;&lt;/b&gt;: Full filepath of file containing frozen GraphDef.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;graph_def_file&lt;/code&gt; &lt;/b&gt;：フリーズしたGraphDefを含むファイルの完全なファイルパス。</target>
        </trans-unit>
        <trans-unit id="1afd9d03627b3473a53082d6fd79c0abf486eaf1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;graph_or_graph_def&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Graph&lt;/code&gt; or a &lt;code&gt;GraphDef&lt;/code&gt; protocol buffer.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;graph_or_graph_def&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Graph&lt;/code&gt; または &lt;code&gt;GraphDef&lt;/code&gt; プロトコルバッファ。</target>
        </trans-unit>
        <trans-unit id="cfeb55ca7e2edc0e6d4436b1afd2f143597f2f73" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;graph_parents&lt;/code&gt;&lt;/b&gt;: (Deprecated) Python list of graph prerequisites of this &lt;code&gt;LinearOperator&lt;/code&gt; Typically tensors that are passed during initialization</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;graph_parents&lt;/code&gt; &lt;/b&gt;：（非推奨）この &lt;code&gt;LinearOperator&lt;/code&gt; のグラフ前提条件のPythonリスト。通常、初期化中に渡されるテンソル</target>
        </trans-unit>
        <trans-unit id="7655c2157bf680479b81478e438f6c95536218d2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;graph_parents&lt;/code&gt;&lt;/b&gt;: Python &lt;code&gt;list&lt;/code&gt; of graph prerequisites of this &lt;code&gt;Distribution&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;graph_parents&lt;/code&gt; &lt;/b&gt;：この &lt;code&gt;Distribution&lt;/code&gt; 必須グラフのPython &lt;code&gt;list&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6fa96b0f1575ea258cab64ada069089d584e27a1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;greedy&lt;/code&gt;&lt;/b&gt;: perform much faster best-path search if &lt;code&gt;true&lt;/code&gt;. This does not use a dictionary.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;greedy&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;true&lt;/code&gt; の場合、より高速なベストパス検索を実行します。これは辞書を使用しません。</target>
        </trans-unit>
        <trans-unit id="5ab1ceef802c9a87e0ea11735948449bd9d5979a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;group&lt;/code&gt;&lt;/b&gt;: Boolean. Defaults to True. If False, the return value will be unwrapped.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;group&lt;/code&gt; &lt;/b&gt;：ブール。デフォルトはTrueです。Falseの場合、戻り値はラップされません。</target>
        </trans-unit>
        <trans-unit id="e5fc8bf1b7069368c8b5f8125e9f054e64d8ec5d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;group_assignment&lt;/code&gt;&lt;/b&gt;: Optional 2d int32 lists with shape [num_groups, num_replicas_per_group] which describles how to apply optimizer to subgroups.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;group_assignment&lt;/code&gt; &lt;/b&gt;：オプティマイザーをサブグループに適用する方法を説明する、形状[num_groups、num_replicas_per_group]を含むオプションの2d int32リスト。</target>
        </trans-unit>
        <trans-unit id="b4166e5619bc0fde46681f09a88696e565950ef3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;group_assignment&lt;/code&gt;&lt;/b&gt;: Optional 2d int32 lists with shape [num_groups, num_replicas_per_group]. &lt;code&gt;group_assignment[i]&lt;/code&gt; represents the replica ids in the ith subgroup.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;group_assignment&lt;/code&gt; &lt;/b&gt;：形状が[num_groups、num_replicas_per_group]のオプションの2d int32リスト。 &lt;code&gt;group_assignment[i]&lt;/code&gt; は、i番目のサブグループのレプリカIDを表します。</target>
        </trans-unit>
        <trans-unit id="7d57a140928c8fbe5cccdac562df9585cb7065f3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;half_atol&lt;/code&gt;&lt;/b&gt;: absolute tolerance for float16.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;half_atol&lt;/code&gt; &lt;/b&gt;：&lt;b&gt; float16の&lt;/b&gt;絶対許容誤差。</target>
        </trans-unit>
        <trans-unit id="6a568c4a4c2c58c603e61b32a60cb5cf13c852be" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;half_rtol&lt;/code&gt;&lt;/b&gt;: relative tolerance for float16.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;half_rtol&lt;/code&gt; &lt;/b&gt;：&lt;b&gt; float16の&lt;/b&gt;相対許容誤差。</target>
        </trans-unit>
        <trans-unit id="75277ca104063c129a26f7ce6cd25db11752073a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;handle&lt;/code&gt;&lt;/b&gt;: (optional) A &lt;code&gt;Tensor&lt;/code&gt; handle to an existing TensorArray. If this is set, tensor_array_name should be None. Only supported in graph mode.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;handle&lt;/code&gt; &lt;/b&gt;：（オプション）既存のTensorArrayへの &lt;code&gt;Tensor&lt;/code&gt; ハンドル。これが設定されている場合、tensor_array_nameはNoneでなければなりません。グラフモードでのみサポートされます。</target>
        </trans-unit>
        <trans-unit id="ff7ee4904d3e91a53f090a51801f5c99bea83499" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;handle&lt;/code&gt;&lt;/b&gt;: A handle for a sequence of partial runs.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;handle&lt;/code&gt; &lt;/b&gt;：一連の部分実行のハンドル。</target>
        </trans-unit>
        <trans-unit id="e8efb2743d0829622b928cab328b8efa05059bdb" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;handle&lt;/code&gt;&lt;/b&gt;: The string representation of a persistent tensor handle.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;handle&lt;/code&gt; &lt;/b&gt;：永続的なテンソルハンドルの文字列表現。</target>
        </trans-unit>
        <trans-unit id="4f4c21ef41b7b09c52dde4194fac7baa4803ddac" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;hash_algorithm&lt;/code&gt;&lt;/b&gt;: Select the hash algorithm to verify the file. options are 'md5', 'sha256', and 'auto'. The default 'auto' detects the hash algorithm in use.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;hash_algorithm&lt;/code&gt; &lt;/b&gt;：ファイルを検証するハッシュアルゴリズムを選択します。オプションは「md5」、「sha256」、および「auto」です。デフォルトの「auto」は、使用中のハッシュアルゴリズムを検出します。</target>
        </trans-unit>
        <trans-unit id="066332b73415b9f111b0e438c44805462a2d8830" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;hash_bucket_size&lt;/code&gt;&lt;/b&gt;: An int &amp;gt; 1. The number of buckets.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;hash_bucket_size&lt;/code&gt; &lt;/b&gt;：int&amp;gt;1。バケットの数。</target>
        </trans-unit>
        <trans-unit id="c16ee4aa8559ee7883b4f8a10c96958068f676a9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;hash_key&lt;/code&gt;&lt;/b&gt;: Integer hash_key that will be used by the &lt;code&gt;FingerprintCat64&lt;/code&gt; function. If not given, will use a default key.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;hash_key&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;FingerprintCat64&lt;/code&gt; 関数によって使用される整数のhash_key。指定しない場合、デフォルトのキーが使用されます。</target>
        </trans-unit>
        <trans-unit id="cbfd44eb59f5b05e30abe510e688b58968a29601" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;hash_key&lt;/code&gt;&lt;/b&gt;: Specify the hash_key that will be used by the &lt;code&gt;FingerprintCat64&lt;/code&gt; function to combine the crosses fingerprints on SparseCrossOp (optional).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;hash_key&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;FingerprintCat64&lt;/code&gt; 関数がSparseCrossOpのクロスフィンガープリントを組み合わせるために使用するhash_keyを指定します（オプション）。</target>
        </trans-unit>
        <trans-unit id="ed66b3d33564a845fc0fe211bf5129e9452fac06" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;hash_table_shared_name&lt;/code&gt;&lt;/b&gt;: boolean determining whether to ignore randomized shared_names that appear in HashTableV2 op defs.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;hash_table_shared_name&lt;/code&gt; &lt;/b&gt;：HashTableV2 op defsに表示されるランダム化されたshared_namesを無視するかどうかを決定するブール値。</target>
        </trans-unit>
        <trans-unit id="7a4e4e6f9de199663c096f847685a2acf4cd8e4d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;head&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Head&lt;/code&gt; instance constructed with a method such as &lt;a href=&quot;multilabelhead&quot;&gt;&lt;code&gt;tf.estimator.MultiLabelHead&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;head&lt;/code&gt; &lt;/b&gt;：&lt;a href=&quot;multilabelhead&quot;&gt; &lt;code&gt;tf.estimator.MultiLabelHead&lt;/code&gt; &lt;/a&gt;などのメソッドで構築された &lt;code&gt;Head&lt;/code&gt; インスタンス。</target>
        </trans-unit>
        <trans-unit id="989e217d89f9b89c4225e229876d3f7bccdd91b9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;head&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Head&lt;/code&gt; instance. This specifies the model's output and loss function to be optimized.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;head&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Head&lt;/code&gt; インスタンス。これは、最適化されるモデルの出力と損失関数を指定します。</target>
        </trans-unit>
        <trans-unit id="dec0f60d796e41556adfa6381e685ab2fcedd162" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;head&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;_Head&lt;/code&gt; instance constructed with a method such as &lt;code&gt;tf.contrib.estimator.multi_label_head&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;head&lt;/code&gt; &lt;/b&gt;：A &lt;code&gt;_Head&lt;/code&gt; のような方法で構築インスタンス &lt;code&gt;tf.contrib.estimator.multi_label_head&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6385a878317b948442e5a8f272f35137ed1633a1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;head&lt;/code&gt;&lt;/b&gt;: the &lt;code&gt;Head&lt;/code&gt; instance defined for Estimator.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;head&lt;/code&gt; &lt;/b&gt;：Estimatorに定義された &lt;code&gt;Head&lt;/code&gt; インスタンス。</target>
        </trans-unit>
        <trans-unit id="d72e42fd5d35a626cd965d818ec2e733909f703e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;head_weights&lt;/code&gt;&lt;/b&gt;: Optional list of weights, same length as &lt;code&gt;heads&lt;/code&gt;. Used when merging losses to calculate the weighted sum of losses from each head. If &lt;code&gt;None&lt;/code&gt;, all losses are weighted equally.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;head_weights&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;heads&lt;/code&gt; と同じ長さのオプションのウェイトリスト。損失をマージして各ヘッドからの損失の加重和を計算するときに使用されます。 &lt;code&gt;None&lt;/code&gt; の場合、すべての損失が均等に重み付けされます。</target>
        </trans-unit>
        <trans-unit id="affd3e88ee944e441ccc251c560c436fbaac01f4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;header&lt;/code&gt;&lt;/b&gt;: (Optional.) A &lt;a href=&quot;../../../../../tf#bool&quot;&gt;&lt;code&gt;tf.bool&lt;/code&gt;&lt;/a&gt; scalar indicating whether the CSV file(s) have header line(s) that should be skipped when parsing. Defaults to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;header&lt;/code&gt; &lt;/b&gt;：（オプション。）CSVファイルに解析時にスキップする必要があるヘッダー行があるかどうかを示す&lt;a href=&quot;../../../../../tf#bool&quot;&gt; &lt;code&gt;tf.bool&lt;/code&gt; &lt;/a&gt;スカラー。デフォルトは &lt;code&gt;False&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="db97ce928da13deaa4baab565fd39aacc75519cd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;header&lt;/code&gt;&lt;/b&gt;: (Optional.) A &lt;a href=&quot;../../../tf#bool&quot;&gt;&lt;code&gt;tf.bool&lt;/code&gt;&lt;/a&gt; scalar indicating whether the CSV file(s) have header line(s) that should be skipped when parsing. Defaults to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;header&lt;/code&gt; &lt;/b&gt;：（オプション。）CSVファイルに解析時にスキップする必要があるヘッダー行があるかどうかを示す&lt;a href=&quot;../../../tf#bool&quot;&gt; &lt;code&gt;tf.bool&lt;/code&gt; &lt;/a&gt;スカラー。デフォルトは &lt;code&gt;False&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="f2c16b96fa360527829f7d086f6e31a16b122b7a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;header&lt;/code&gt;&lt;/b&gt;: A bool that indicates whether the first rows of provided CSV files correspond to header lines with column names, and should not be included in the data.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;header&lt;/code&gt; &lt;/b&gt;：提供されたCSVファイルの最初の行が列名を含むヘッダー行に対応するかどうかを示すブール値。データに含めないでください。</target>
        </trans-unit>
        <trans-unit id="e823ec79f01ecc9c2ea6db6780ed27937069b9b5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;header_bytes&lt;/code&gt;&lt;/b&gt;: (Optional.) A &lt;a href=&quot;../../../../tf#int64&quot;&gt;&lt;code&gt;tf.int64&lt;/code&gt;&lt;/a&gt; scalar representing the number of bytes to skip at the start of a file.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;header_bytes&lt;/code&gt; &lt;/b&gt;：（オプション）ファイルの先頭でスキップするバイト数を表す&lt;a href=&quot;../../../../tf#int64&quot;&gt; &lt;code&gt;tf.int64&lt;/code&gt; &lt;/a&gt;スカラー。</target>
        </trans-unit>
        <trans-unit id="b50c1b7194e13d3b72214ea2d0041da5e61759ca" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;header_bytes&lt;/code&gt;&lt;/b&gt;: (Optional.) A &lt;a href=&quot;../../tf#int64&quot;&gt;&lt;code&gt;tf.int64&lt;/code&gt;&lt;/a&gt; scalar representing the number of bytes to skip at the start of a file.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;header_bytes&lt;/code&gt; &lt;/b&gt;：（オプション）ファイルの先頭でスキップするバイト数を表す&lt;a href=&quot;../../tf#int64&quot;&gt; &lt;code&gt;tf.int64&lt;/code&gt; &lt;/a&gt;スカラー。</target>
        </trans-unit>
        <trans-unit id="7b16535bae17a79ffc7577f84c57568984fb269f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;header_bytes&lt;/code&gt;&lt;/b&gt;: An optional int. Defaults to 0.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;header_bytes&lt;/code&gt; &lt;/b&gt;：オプションのint。デフォルトは0です。</target>
        </trans-unit>
        <trans-unit id="f2de4aea5b65e59c0ce23afc19268793c5398d3d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;headers&lt;/code&gt;&lt;/b&gt;: Dictionary; optional custom HTTP headers.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;headers&lt;/code&gt; &lt;/b&gt;：辞書; オプションのカスタムHTTPヘッダー。</target>
        </trans-unit>
        <trans-unit id="28468eb6a07aba1e8ae13af5191ab54c142cff9c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;heads&lt;/code&gt;&lt;/b&gt;: List or tuple of &lt;code&gt;Head&lt;/code&gt; instances. All heads must have &lt;code&gt;name&lt;/code&gt; specified. The first head in the list is the default used at serving time.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;heads&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Head&lt;/code&gt; インスタンスのリストまたはタプル。すべてのヘッドには &lt;code&gt;name&lt;/code&gt; 指定する必要があります。リストの最初のヘッドは、提供時に使用されるデフォルトです。</target>
        </trans-unit>
        <trans-unit id="48d8f06d189af3f5f7dbaceafeda83c78ce65e2c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;height_factor&lt;/code&gt;&lt;/b&gt;: Positive integer.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;height_factor&lt;/code&gt; &lt;/b&gt;：正の整数。</target>
        </trans-unit>
        <trans-unit id="02ef81f38030d1ec4a6e442b099a6b0b92641cce" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;height_shift_range&lt;/code&gt;&lt;/b&gt;: Float, 1-D array-like or int</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;height_shift_range&lt;/code&gt; &lt;/b&gt;：Float、1次元配列のような、またはint</target>
        </trans-unit>
        <trans-unit id="a921c6d7060e01235e1008562d88e9f95a12f1e5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;help&lt;/code&gt;&lt;/b&gt;: str, the help message.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;help&lt;/code&gt; &lt;/b&gt;：str、ヘルプメッセージ。</target>
        </trans-unit>
        <trans-unit id="244f400646c52d22d978bde6643df0a36c4d0b6a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;hidden_units&lt;/code&gt;&lt;/b&gt;: Iterable of integer number of hidden units per layer.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;hidden_units&lt;/code&gt; &lt;/b&gt;：レイヤーごとの整数の隠しユニットの反復可能。</target>
        </trans-unit>
        <trans-unit id="d9642a405b0e0710312cbeece7a1e06667163360" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;hidden_units&lt;/code&gt;&lt;/b&gt;: Iterable of number hidden units per layer. All layers are fully connected. Ex. &lt;code&gt;[64, 32]&lt;/code&gt; means first layer has 64 nodes and second one has 32.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;hidden_units&lt;/code&gt; &lt;/b&gt;：レイヤーごとの非表示ユニット数の反復可能。すべてのレイヤーが完全に接続されています。例 &lt;code&gt;[64, 32]&lt;/code&gt; は、第1層に64個のノードがあり、第2層に 32個のノードがあることを意味します。</target>
        </trans-unit>
        <trans-unit id="864bbeab0cccf24699c7a8126a78731b306c026f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;hide_name_regexes&lt;/code&gt;&lt;/b&gt;: list of node_names regexes that should be hidden.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;hide_name_regexes&lt;/code&gt; &lt;/b&gt;：非表示にする必要があるnode_names正規表現のリスト。</target>
        </trans-unit>
        <trans-unit id="094b0ea3450afdbf7b73c79c116098d842a6de97" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;high&lt;/code&gt;&lt;/b&gt;: Float, upper boundary of the output interval.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;high&lt;/code&gt; &lt;/b&gt;：フロート、出力間隔の上限。</target>
        </trans-unit>
        <trans-unit id="3dcb07d176a87e02f1d885c10f8d804ccff96d23" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;high&lt;/code&gt;&lt;/b&gt;: Floating point tensor, upper boundary of the output interval. Must have &lt;code&gt;low &amp;lt; high&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;high&lt;/code&gt; &lt;/b&gt;：浮動小数点テンソル、出力間隔の上限。 &lt;code&gt;low &amp;lt; high&lt;/code&gt; なければなりません。</target>
        </trans-unit>
        <trans-unit id="cb3c99f22cec922b686ba9fe591566070f5973b5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;histogram_freq&lt;/code&gt;&lt;/b&gt;: frequency (in epochs) at which to compute activation and weight histograms for the layers of the model. If set to 0, histograms won't be computed. Validation data (or split) must be specified for histogram visualizations.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;histogram_freq&lt;/code&gt; &lt;/b&gt;：モデルのレイヤーのアクティブ化と重みヒストグラムを計算する頻度（エポック単位）。0に設定すると、ヒストグラムは計算されません。ヒストグラムの視覚化には、検証データ（または分割）を指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="21adff74cf1be382243594dcb22c9a6edffaa87a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;history&lt;/code&gt;&lt;/b&gt;: object details about the training history at each epoch.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;history&lt;/code&gt; &lt;/b&gt;：各エポックのトレーニング履歴に関するオブジェクトの詳細。</target>
        </trans-unit>
        <trans-unit id="a1a9feda046085a66c98ddb32749e49c712a6913" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;hooks&lt;/code&gt;&lt;/b&gt;: An iterable of `SessionRunHook' objects.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;hooks&lt;/code&gt; &lt;/b&gt;： `SessionRunHook 'オブジェクトの反復可能オブジェクト。</target>
        </trans-unit>
        <trans-unit id="9068e0e1d7274ce4d29f70ca373a3273afba7270" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;hooks&lt;/code&gt;&lt;/b&gt;: Equivalent to the &lt;code&gt;hooks&lt;/code&gt; arg to &lt;code&gt;estimator.evaluate&lt;/code&gt;. List of &lt;code&gt;SessionRunHook&lt;/code&gt; subclass instances. Used for callbacks inside the evaluation call.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;hooks&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;estimator.evaluate&lt;/code&gt; の &lt;code&gt;hooks&lt;/code&gt; 引数に相当します。 &lt;code&gt;SessionRunHook&lt;/code&gt; サブクラスインスタンスのリスト。評価呼び出し内のコールバックに使用されます。</target>
        </trans-unit>
        <trans-unit id="f9f6403616538127caba90f550b8e1c76e62e447" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;hooks&lt;/code&gt;&lt;/b&gt;: Iterable of &lt;code&gt;tf.train.SessionRunHook&lt;/code&gt; objects to run during evaluation.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;hooks&lt;/code&gt; &lt;/b&gt;：評価中に実行する &lt;code&gt;tf.train.SessionRunHook&lt;/code&gt; オブジェクトの反復可能オブジェクト。</target>
        </trans-unit>
        <trans-unit id="5240aafea677d90f0a29d62eaa02927f80d5d7cb" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;hooks&lt;/code&gt;&lt;/b&gt;: Iterable of &lt;code&gt;tf.train.SessionRunHook&lt;/code&gt; objects to run on all workers (including chief) during training.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;hooks&lt;/code&gt; &lt;/b&gt;：tf.train.SessionRunHookオブジェクトの &lt;code&gt;tf.train.SessionRunHook&lt;/code&gt; オブジェクトで、トレーニング中にすべてのワーカー（チーフを含む）で実行されます。</target>
        </trans-unit>
        <trans-unit id="bd67df199f0c072b6c2ca55e39fc1763b48241b5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;hooks&lt;/code&gt;&lt;/b&gt;: List of &lt;code&gt;tf.train.SessionRunHook&lt;/code&gt; subclass instances. Used for callbacks inside the evaluation call.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;hooks&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;tf.train.SessionRunHook&lt;/code&gt; サブクラスインスタンスのリスト。評価呼び出し内のコールバックに使用されます。</target>
        </trans-unit>
        <trans-unit id="f26d5ee51f5043cf5bcc23dcd2ccded398951b4c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;hooks&lt;/code&gt;&lt;/b&gt;: List of &lt;code&gt;tf.train.SessionRunHook&lt;/code&gt; subclass instances. Used for callbacks inside the prediction call.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;hooks&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;tf.train.SessionRunHook&lt;/code&gt; サブクラスインスタンスのリスト。予測呼び出し内のコールバックに使用されます。</target>
        </trans-unit>
        <trans-unit id="fe25109c88884a14b73533309d0218fb76c864f2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;hooks&lt;/code&gt;&lt;/b&gt;: List of &lt;code&gt;tf.train.SessionRunHook&lt;/code&gt; subclass instances. Used for callbacks inside the training loop.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;hooks&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;tf.train.SessionRunHook&lt;/code&gt; サブクラスインスタンスのリスト。トレーニングループ内のコールバックに使用されます。</target>
        </trans-unit>
        <trans-unit id="0e12ec5c221e378c06497b922bf115170f76e74d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;hooks&lt;/code&gt;&lt;/b&gt;: Optional list of &lt;code&gt;SessionRunHook&lt;/code&gt; objects.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;hooks&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;SessionRunHook&lt;/code&gt; オブジェクトのオプションのリスト。</target>
        </trans-unit>
        <trans-unit id="a33c29141bb6668cc2e31679ebcd29ed420e90dd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;hop_bytes&lt;/code&gt;&lt;/b&gt;: An optional int. Defaults to 0.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;hop_bytes&lt;/code&gt; &lt;/b&gt;：オプションのint。デフォルトは0です。</target>
        </trans-unit>
        <trans-unit id="1ee7ae240d4cf4cf61884b0bc398c49cc69d03d7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;horizontal_flip&lt;/code&gt;&lt;/b&gt;: Boolean. Randomly flip inputs horizontally.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;horizontal_flip&lt;/code&gt; &lt;/b&gt;：ブール値。入力をランダムに水平に反転します。</target>
        </trans-unit>
        <trans-unit id="acf0e1c128902f4d31adb04a387823e000777a3e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;host_tracer_level&lt;/code&gt;&lt;/b&gt;: for adjust TraceMe levels. i.e. 1 =&amp;gt; critical, 2 =&amp;gt; info, 3 =&amp;gt; verbose. [default to 2]</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;host_tracer_level&lt;/code&gt; &lt;/b&gt;：TraceMeレベルを調整します。つまり、1 =&amp;gt;クリティカル、2 =&amp;gt;情報、3 =&amp;gt;詳細です。[デフォルトは2]</target>
        </trans-unit>
        <trans-unit id="d29067f38216a6b85b45768dcc1f60947ef69407" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;hypothesis&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;SparseTensor&lt;/code&gt; containing hypothesis sequences.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;hypothesis&lt;/code&gt; &lt;/b&gt;：仮説シーケンスを含む &lt;code&gt;SparseTensor&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5eb50b9a9eafa38c085ec6689964c8c94ef12f35" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;identifier&lt;/code&gt;&lt;/b&gt;: Function or string</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;identifier&lt;/code&gt; &lt;/b&gt;：関数または文字列</target>
        </trans-unit>
        <trans-unit id="869b89e4429571d5baaa710bc9ffc5ec99cfc16d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;identifier&lt;/code&gt;&lt;/b&gt;: Optimizer identifier, one of</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;identifier&lt;/code&gt; &lt;/b&gt;：オプティマイザ識別子、次のいずれか</target>
        </trans-unit>
        <trans-unit id="be0be0f5d0e2029426597a95385f857703bda667" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ids&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt; and shape &lt;code&gt;[num_accidental_hits]&lt;/code&gt;. Values indicate positions in &lt;code&gt;sampled_candidates&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;ids&lt;/code&gt; &lt;/b&gt;：タイプが &lt;code&gt;int64&lt;/code&gt; で形状が &lt;code&gt;[num_accidental_hits]&lt;/code&gt; の &lt;code&gt;Tensor&lt;/code&gt; 。値は、 &lt;code&gt;sampled_candidates&lt;/code&gt; 内の位置を示します。</target>
        </trans-unit>
        <trans-unit id="03a1c4e6dafae31961a0a07fe6fe4a8555beefb7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ids&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; or a 'RaggedTensor' with type &lt;code&gt;int32&lt;/code&gt; or &lt;code&gt;int64&lt;/code&gt; containing the ids to be looked up in &lt;code&gt;params&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;ids&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;params&lt;/code&gt; で検索されるIDを含む、タイプが &lt;code&gt;int32&lt;/code&gt; または &lt;code&gt;int64&lt;/code&gt; の &lt;code&gt;Tensor&lt;/code&gt; または 'RaggedTensor'。</target>
        </trans-unit>
        <trans-unit id="ff6d0f84cb7757b14bb2d1eabc6cd5ccd03cb224" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ids&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; with type &lt;code&gt;int32&lt;/code&gt; or &lt;code&gt;int64&lt;/code&gt; containing the ids to be looked up in &lt;code&gt;params&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;ids&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;params&lt;/code&gt; で検索されるIDを含む、タイプが &lt;code&gt;int32&lt;/code&gt; または &lt;code&gt;int64&lt;/code&gt; の &lt;code&gt;Tensor&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4a4b499fa3c8c35d84f3fc3c7adb756fb0fe74dd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;idx&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;out_idx&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;idx&lt;/code&gt; &lt;/b&gt;：タイプ &lt;code&gt;out_idx&lt;/code&gt; の &lt;code&gt;Tensor&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a5db5ace5ccd2639b738f84311cccd5da30d8beb" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ignore_errors&lt;/code&gt;&lt;/b&gt;: (Optional.) If &lt;code&gt;True&lt;/code&gt;, ignores errors with CSV file parsing, such as malformed data or empty lines, and moves on to the next valid CSV record. Otherwise, the dataset raises an error and stops processing when encountering any invalid records. Defaults to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;ignore_errors&lt;/code&gt; &lt;/b&gt;：（オプション。） &lt;code&gt;True&lt;/code&gt; の場合、不正な形式のデータや空の行など、CSVファイル解析のエラーを無視し、次の有効なCSVレコードに移動します。それ以外の場合、データセットはエラーを発生させ、無効なレコードが検出されると処理を停止します。デフォルトは &lt;code&gt;False&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="b6014952a50b431b4080fa5fa2fb556bc42a129b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ignore_existing&lt;/code&gt;&lt;/b&gt;: If true, only applies colocation of this op within the context, rather than applying all colocation properties on the stack. If &lt;code&gt;op&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt;, this value must be &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;ignore_existing&lt;/code&gt; &lt;/b&gt;：trueの場合、スタック上のすべてのコロケーションプロパティを適用するのではなく、コンテキスト内でこの操作のコロケーションのみを適用します。 &lt;code&gt;op&lt;/code&gt; が &lt;code&gt;None&lt;/code&gt; の場合、この値は &lt;code&gt;True&lt;/code&gt; でなければなりません。</target>
        </trans-unit>
        <trans-unit id="0f693336d140517bdb683d54d5925ab4fda3641c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ignore_live_threads&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;False&lt;/code&gt;, raises an error if any of the threads are still alive after &lt;code&gt;stop_grace_period_secs&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;ignore_live_threads&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;False&lt;/code&gt; の場合、 &lt;code&gt;stop_grace_period_secs&lt;/code&gt; の後もスレッドのいずれかがまだ生きていると、エラーが発生します。</target>
        </trans-unit>
        <trans-unit id="71c663e4f4691aa2c8ca296531ecc64a859b53a5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ignore_live_threads&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;True&lt;/code&gt; ignores threads that remain running after a grace period when joining threads via the coordinator, instead of raising a RuntimeError.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;ignore_live_threads&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;True&lt;/code&gt; の場合、コーディネーターを介してスレッドに参加するときに、RuntimeErrorを発生させる代わりに、猶予期間後も実行されているスレッドを無視します。</target>
        </trans-unit>
        <trans-unit id="db7adb1ac2e787dfd4e14fe65ec046205049ef5f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ignore_longer_outputs_than_inputs&lt;/code&gt;&lt;/b&gt;: Boolean. Default: False. If True, sequences with longer outputs than inputs will be ignored.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;ignore_longer_outputs_than_inputs&lt;/code&gt; &lt;/b&gt;：ブール値。デフォルト：False。Trueの場合、入力よりも出力が長いシーケンスは無視されます。</target>
        </trans-unit>
        <trans-unit id="350695f59cfee73016f0c59986667e1a06eb870a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;imag&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;real&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;imag&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。 &lt;code&gt;real&lt;/code&gt; と同じ型でなければなりません。</target>
        </trans-unit>
        <trans-unit id="bb3ac04a699ee74e9d40e285c18efc050d4d0269" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;image&lt;/code&gt;&lt;/b&gt;: 3D image. Size of the last dimension must be 1 or 3.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;image&lt;/code&gt; &lt;/b&gt;：3D画像。最後の次元のサイズは1または3でなければなりません。</target>
        </trans-unit>
        <trans-unit id="3493f4f6b3df476f7e49f4c6fabd7e254666575b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;image&lt;/code&gt;&lt;/b&gt;: 3D image. Size of the last dimension must be None, 1 or 3.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;image&lt;/code&gt; &lt;/b&gt;：3D画像。最後の次元のサイズは、なし、1または3でなければなりません。</target>
        </trans-unit>
        <trans-unit id="b95d3438ca05dd6c4d4e55fd2f6bed88d4067729" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;image&lt;/code&gt;&lt;/b&gt;: 4-D Tensor of shape &lt;code&gt;[batch, height, width, channels]&lt;/code&gt; or 3-D Tensor of shape &lt;code&gt;[height, width, channels]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;image&lt;/code&gt; &lt;/b&gt;：4-D形状のテンソル &lt;code&gt;[batch, height, width, channels]&lt;/code&gt; または形状の3次元テンソル &lt;code&gt;[height, width, channels]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="aed655f640425bf5c3e47ef8be0651048930834a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;image&lt;/code&gt;&lt;/b&gt;: A 4-D tensor of shape &lt;code&gt;[batch, image_height, image_width, depth]&lt;/code&gt;. Both &lt;code&gt;image_height&lt;/code&gt; and &lt;code&gt;image_width&lt;/code&gt; need to be positive.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;image&lt;/code&gt; &lt;/b&gt;：形状の4次元テンソル &lt;code&gt;[batch, image_height, image_width, depth]&lt;/code&gt; 。 &lt;code&gt;image_height&lt;/code&gt; と &lt;code&gt;image_width&lt;/code&gt; は両方とも正である必要があります。</target>
        </trans-unit>
        <trans-unit id="57bc84439d5e797b223d40a95ad9a2a1a4e6c249" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;image&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;uint8&lt;/code&gt;. 3-D with shape &lt;code&gt;[height, width, channels]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;image&lt;/code&gt; &lt;/b&gt;：タイプ &lt;code&gt;uint8&lt;/code&gt; の &lt;code&gt;Tensor&lt;/code&gt; 。形状の3D &lt;code&gt;[height, width, channels]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6ca6ca9bb70be6292e8a0c59eae42eb91576260b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;image&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. A 4-D tensor of shape &lt;code&gt;[batch, image_height, image_width, depth]&lt;/code&gt;. Both &lt;code&gt;image_height&lt;/code&gt; and &lt;code&gt;image_width&lt;/code&gt; need to be positive.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;image&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。次のいずれかのタイプである必要があります： &lt;code&gt;uint8&lt;/code&gt; 、 &lt;code&gt;uint16&lt;/code&gt; 、 &lt;code&gt;int8&lt;/code&gt; 、 &lt;code&gt;int16&lt;/code&gt; 、 &lt;code&gt;int32&lt;/code&gt; 、 &lt;code&gt;int64&lt;/code&gt; 、 &lt;code&gt;half&lt;/code&gt; 、 &lt;code&gt;float32&lt;/code&gt; 、 &lt;code&gt;float64&lt;/code&gt; 。形状の4次元テンソル &lt;code&gt;[batch, image_height, image_width, depth]&lt;/code&gt; 。 &lt;code&gt;image_height&lt;/code&gt; と &lt;code&gt;image_width&lt;/code&gt; は両方とも正である必要があります。</target>
        </trans-unit>
        <trans-unit id="842c93d707e2b5d1511ad09f01c98a7bfd66edab" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;image&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;. 3-D with shape &lt;code&gt;[height, width, channels]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;image&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。次のタイプのいずれかでなければなりません： &lt;code&gt;uint8&lt;/code&gt; 、 &lt;code&gt;uint16&lt;/code&gt; 。形状の3D &lt;code&gt;[height, width, channels]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bff92ed5a9f0d8a9b431f201f0d3c5609b80c480" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;image&lt;/code&gt;&lt;/b&gt;: An image or images to adjust.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;image&lt;/code&gt; &lt;/b&gt;：調整する画像。</target>
        </trans-unit>
        <trans-unit id="a69fe56415655cea4d6b902e60d6526c8a746574" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;image&lt;/code&gt;&lt;/b&gt;: An image tensor with 3 or more dimensions.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;image&lt;/code&gt; &lt;/b&gt;：3次元以上の画像テンソル。</target>
        </trans-unit>
        <trans-unit id="f809ab2b5610afd21fdbb7f6cbb423dd44624541" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;image&lt;/code&gt;&lt;/b&gt;: An image.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;image&lt;/code&gt; &lt;/b&gt;：画像。</target>
        </trans-unit>
        <trans-unit id="902b7355ee4486ae456515f9293432aec2faa87b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;image&lt;/code&gt;&lt;/b&gt;: An n-D Tensor with at least 3 dimensions, the last 3 of which are the dimensions of each image.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;image&lt;/code&gt; &lt;/b&gt;：3次元以上のnDテンソル。最後の3次元は各画像の次元です。</target>
        </trans-unit>
        <trans-unit id="0a93600d8f7f190a7628b30ba8fe09d9382a828e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;image&lt;/code&gt;&lt;/b&gt;: Either a 3-D float Tensor of shape [height, width, depth], or a 4-D Tensor of shape [batch_size, height, width, depth].</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;image&lt;/code&gt; &lt;/b&gt;：形状[高さ、幅、深さ]の3次元浮動小数点テンソル、または形状[batch_size、高さ、幅、深さ]の4次元テンソル。</target>
        </trans-unit>
        <trans-unit id="785e9634a6c809393fb186cea9f92c7ab3f00e7d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;image&lt;/code&gt;&lt;/b&gt;: Image tensor with shape [batch_size, h, w, d] and type float32 or float64. The image(s) must be 2x2 or larger.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;image&lt;/code&gt; &lt;/b&gt;：形状が[batch_size、h、w、d]でタイプがfloat32またはfloat64の画像テンソル。画像は2x2以上である必要があります。</target>
        </trans-unit>
        <trans-unit id="d77c24b41c53c8cb69e5f0048dac5b1675e54d9d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;image&lt;/code&gt;&lt;/b&gt;: RGB image or images to adjust.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;image&lt;/code&gt; &lt;/b&gt;：RGB画像または調整する画像。</target>
        </trans-unit>
        <trans-unit id="33c83c1e7b821eeed9a0c4425803b7e598be9afa" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;image&lt;/code&gt;&lt;/b&gt;: RGB image or images. Size of the last dimension must be 3.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;image&lt;/code&gt; &lt;/b&gt;：RGBイメージ。最後の次元のサイズは3でなければなりません。</target>
        </trans-unit>
        <trans-unit id="f44fcdb598281e67c1a8432096fc8db950a2aa3c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;image&lt;/code&gt;&lt;/b&gt;: Tensor with shape [batch_size, h, w, d].</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;image&lt;/code&gt; &lt;/b&gt;：形状のテンソル[batch_size、h、w、d]。</target>
        </trans-unit>
        <trans-unit id="f09e4aec11bd683d8a11f70da9bd8821d0096fd8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;image_data_generator&lt;/code&gt;&lt;/b&gt;: Instance of &lt;code&gt;ImageDataGenerator&lt;/code&gt; to use for random transformations and normalization.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;image_data_generator&lt;/code&gt; &lt;/b&gt;：ランダム変換と正規化に使用する &lt;code&gt;ImageDataGenerator&lt;/code&gt; のインスタンス。</target>
        </trans-unit>
        <trans-unit id="26a20d645422adcb5f99f39b6de7f2a32cc9d1e2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;image_size&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. 1-D, containing &lt;code&gt;[height, width, channels]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;image_size&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。次の型のいずれかでなければなりません： &lt;code&gt;uint8&lt;/code&gt; 、 &lt;code&gt;int8&lt;/code&gt; 、 &lt;code&gt;int16&lt;/code&gt; 、 &lt;code&gt;int32&lt;/code&gt; 、 &lt;code&gt;int64&lt;/code&gt; 。1-D、 &lt;code&gt;[height, width, channels]&lt;/code&gt; を含みます。</target>
        </trans-unit>
        <trans-unit id="eeddc2181ab13af7ba695f15d656ffe4cee69b0d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;images&lt;/code&gt;&lt;/b&gt;: 2-D or higher rank. Image data to convert. Last dimension must be size 3.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;images&lt;/code&gt; &lt;/b&gt;：2次元以上のランク。変換する画像データ。最後の寸法はサイズ3でなければなりません。</target>
        </trans-unit>
        <trans-unit id="9227998520d021b004d89de00c826a0e5568b206" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;images&lt;/code&gt;&lt;/b&gt;: 4-D Tensor of shape &lt;code&gt;[batch, height, width, channels]&lt;/code&gt; or 3-D Tensor of shape &lt;code&gt;[height, width, channels]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;images&lt;/code&gt; &lt;/b&gt;：4-D形状のテンソル &lt;code&gt;[batch, height, width, channels]&lt;/code&gt; または形状の3次元テンソル &lt;code&gt;[height, width, channels]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7435446c13d7c9278ceeed1eefe03e047e3439e9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;images&lt;/code&gt;&lt;/b&gt;: A 4-D Tensor with shape `[batch, in_rows, in_cols, depth]</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;images&lt;/code&gt; &lt;/b&gt;：形状が `[batch、in_rows、in_cols、depth]の4次元テンソル</target>
        </trans-unit>
        <trans-unit id="a3bfe4eac04bbe18f3367a8e274cf98de9542c31" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;images&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;. 4-D Tensor with shape &lt;code&gt;[batch, in_rows, in_cols, depth]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;images&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。 &lt;code&gt;float32&lt;/code&gt; 、 &lt;code&gt;float64&lt;/code&gt; 、 &lt;code&gt;int32&lt;/code&gt; 、 &lt;code&gt;uint8&lt;/code&gt; 、 &lt;code&gt;int16&lt;/code&gt; 、 &lt;code&gt;int8&lt;/code&gt; 、 &lt;code&gt;int64&lt;/code&gt; 、 &lt;code&gt;bfloat16&lt;/code&gt; 、 &lt;code&gt;uint16&lt;/code&gt; 、 &lt;code&gt;half&lt;/code&gt; 、 &lt;code&gt;uint32&lt;/code&gt; 、 &lt;code&gt;uint64&lt;/code&gt; のいずれかのタイプである必要があります。形状 &lt;code&gt;[batch, in_rows, in_cols, depth]&lt;/code&gt; 4次元テンソル。</target>
        </trans-unit>
        <trans-unit id="12c89a3504630166cc40f862c0ddb2f97bd7c3d9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;images&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;. 4-D with shape &lt;code&gt;[batch, height, width, depth]&lt;/code&gt;. A batch of images.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;images&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。次のタイプのいずれかでなければなりません： &lt;code&gt;float32&lt;/code&gt; 、 &lt;code&gt;half&lt;/code&gt; 。形状 &lt;code&gt;[batch, height, width, depth]&lt;/code&gt; 4D。画像のバッチ。</target>
        </trans-unit>
        <trans-unit id="c8bc3397bde4befc1ec5610a92843258e27f8da9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;images&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. 1-D or higher rank. HSV data to convert. Last dimension must be size 3.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;images&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。次のタイプのいずれかでなければなりません： &lt;code&gt;half&lt;/code&gt; 、 &lt;code&gt;bfloat16&lt;/code&gt; 、 &lt;code&gt;float32&lt;/code&gt; 、 &lt;code&gt;float64&lt;/code&gt; 。1次元以上のランク。変換するHSVデータ。最後の寸法はサイズ3でなければなりません。</target>
        </trans-unit>
        <trans-unit id="ccacaf0dc53f3f6ec8c285593900fc8f6ca20036" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;images&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. 1-D or higher rank. RGB data to convert. Last dimension must be size 3.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;images&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。次のタイプのいずれかでなければなりません： &lt;code&gt;half&lt;/code&gt; 、 &lt;code&gt;bfloat16&lt;/code&gt; 、 &lt;code&gt;float32&lt;/code&gt; 、 &lt;code&gt;float64&lt;/code&gt; 。1次元以上のランク。変換するRGBデータ。最後の寸法はサイズ3でなければなりません。</target>
        </trans-unit>
        <trans-unit id="d082e89f3784afd9db0702c5d0d4cbc6b617cb1d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;images&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. 4-D with shape &lt;code&gt;[batch, height, width, channels]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;images&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。次の型のいずれかである必要があります： &lt;code&gt;int8&lt;/code&gt; 、 &lt;code&gt;uint8&lt;/code&gt; 、 &lt;code&gt;int16&lt;/code&gt; 、 &lt;code&gt;uint16&lt;/code&gt; 、 &lt;code&gt;int32&lt;/code&gt; 、 &lt;code&gt;int64&lt;/code&gt; 、 &lt;code&gt;half&lt;/code&gt; 、 &lt;code&gt;float32&lt;/code&gt; 、 &lt;code&gt;float64&lt;/code&gt; 。形状の4-D &lt;code&gt;[batch, height, width, channels]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e94b812c0ec386ab1082f8f10cf9e312952f0989" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;images&lt;/code&gt;&lt;/b&gt;: Images to adjust. At least 3-D.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;images&lt;/code&gt; &lt;/b&gt;：調整する画像。少なくとも3次元。</target>
        </trans-unit>
        <trans-unit id="b8b41d4f318bb00429338fb2248bb177755d3b7e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;images&lt;/code&gt;&lt;/b&gt;: The Grayscale tensor to convert. Last dimension must be size 1.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;images&lt;/code&gt; &lt;/b&gt;：変換するグレースケールテンソル。最後の寸法はサイズ1でなければなりません。</target>
        </trans-unit>
        <trans-unit id="256aaab780e208d4e8d5b0ce821ddbaf019475d4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;images&lt;/code&gt;&lt;/b&gt;: The RGB tensor to convert. Last dimension must have size 3 and should contain RGB values.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;images&lt;/code&gt; &lt;/b&gt;：変換するRGBテンソル。最後の次元はサイズ3でなければならず、RGB値を含む必要があります。</target>
        </trans-unit>
        <trans-unit id="89e48668ecb0706fdceb718189d88b64c7ac92ac" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;images&lt;/code&gt;&lt;/b&gt;: tensor with the same shape as &lt;code&gt;images&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;images&lt;/code&gt; &lt;/b&gt;：と同じ形状を持つテンソル &lt;code&gt;images&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2752fb7f8f4eb82bbfb7bbe825090561a0ca86f6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;img1&lt;/code&gt;&lt;/b&gt;: First image batch.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;img1&lt;/code&gt; &lt;/b&gt;：最初の画像バッチ。</target>
        </trans-unit>
        <trans-unit id="abaf8abf089af94485757899201a6d3eaf492cf4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;img2&lt;/code&gt;&lt;/b&gt;: Second image batch.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;img2&lt;/code&gt; &lt;/b&gt;：2番目の画像バッチ。</target>
        </trans-unit>
        <trans-unit id="cbf82c54c34a04de8cd6f2f5a43075c3ee0dd0a1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;img2&lt;/code&gt;&lt;/b&gt;: Second image batch. Must have the same rank as img1.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;img2&lt;/code&gt; &lt;/b&gt;：2番目の画像バッチ。img1と同じランクでなければなりません。</target>
        </trans-unit>
        <trans-unit id="fb1ca0ed2d76821ca1f2b197e4d5974a05c47e39" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;img&lt;/code&gt;&lt;/b&gt;: PIL Image instance.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;img&lt;/code&gt; &lt;/b&gt;：PILイメージインスタンス。</target>
        </trans-unit>
        <trans-unit id="a3ca872312267f4bbbb7a575c496efd49102df08" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;implementation&lt;/code&gt;&lt;/b&gt;: Implementation mode, either 1 or 2. Mode 1 will structure its operations as a larger number of smaller dot products and additions, whereas mode 2 (default) will batch them into fewer, larger operations. These modes will have different performance profiles on different hardware and for different applications. Default: 2.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;implementation&lt;/code&gt; &lt;/b&gt;：実装モード、1または2。モード1は、より小さなドット積と加算の数が多いほど操作を構造化しますが、モード2（デフォルト）は、それらをより少ない、より大きな操作にバッチ処理します。これらのモードは、ハードウェアやアプリケーションによってパフォーマンスプロファイルが異なります。デフォルト：2。</target>
        </trans-unit>
        <trans-unit id="6909331b9927c23f65a046b546d9d3c6cce188d8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;implementation&lt;/code&gt;&lt;/b&gt;: Implementation mode, either 1 or 2. Mode 1 will structure its operations as a larger number of smaller dot products and additions, whereas mode 2 will batch them into fewer, larger operations. These modes will have different performance profiles on different hardware and for different applications.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;implementation&lt;/code&gt; &lt;/b&gt;：実装モード。1または2。モード1は、より小さなドット積と加算の数が多いように操作を構造化します。一方、モード2は、それらをより少ない、より大きな操作にバッチ処理します。これらのモードは、ハードウェアやアプリケーションによってパフォーマンスプロファイルが異なります。</target>
        </trans-unit>
        <trans-unit id="94153a3902073ce84410b00c95c4710e63e77f5c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;implementation&lt;/code&gt;&lt;/b&gt;: Implementation mode, either 1 or 2. Mode 1 will structure its operations as a larger number of smaller dot products and additions, whereas mode 2 will batch them into fewer, larger operations. These modes will have different performance profiles on different hardware and for different applications. Default: 2.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;implementation&lt;/code&gt; &lt;/b&gt;：実装モード。1または2。モード1は、より小さなドット積と加算の数が多いように操作を構造化します。一方、モード2は、それらをより少ない、より大きな操作にバッチ処理します。これらのモードは、ハードウェアやアプリケーションによってパフォーマンスプロファイルが異なります。デフォルト：2。</target>
        </trans-unit>
        <trans-unit id="c8579e176beb34d94c22ea1887bcfbc34704dcc6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;implementation&lt;/code&gt;&lt;/b&gt;: implementation mode, either &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt;, or &lt;code&gt;3&lt;/code&gt;. &lt;code&gt;1&lt;/code&gt; loops over input spatial locations to perform the forward pass. It is memory-efficient but performs a lot of (small) ops.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;implementation&lt;/code&gt; &lt;/b&gt;：実装モード、のいずれか &lt;code&gt;1&lt;/code&gt; 、 &lt;code&gt;2&lt;/code&gt; 、または &lt;code&gt;3&lt;/code&gt; 。 &lt;code&gt;1&lt;/code&gt; は入力空間位置をループして、フォワードパスを実行します。メモリ効率は良いですが、多くの（小さな）演算を実行します。</target>
        </trans-unit>
        <trans-unit id="a0e9dd27262ea55ca1d6bfe182b9fa1d0ef81a44" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;import_scope&lt;/code&gt;&lt;/b&gt;: If not None, names in &lt;code&gt;tensor_info&lt;/code&gt; are prefixed with this string before lookup.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;import_scope&lt;/code&gt; &lt;/b&gt;：Noneでない場合、検索前に &lt;code&gt;tensor_info&lt;/code&gt; の名前の前にこの文字列が付けられます。</target>
        </trans-unit>
        <trans-unit id="eddfa11fd920576a5fbc6bd32aee636163b210f8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;import_scope&lt;/code&gt;&lt;/b&gt;: Optional &lt;code&gt;string&lt;/code&gt; -- if specified, prepend this string followed by '/' to all loaded tensor names. This scope is applied to tensor instances loaded into the passed session, but it is &lt;em&gt;not&lt;/em&gt; written through to the static &lt;code&gt;MetaGraphDef&lt;/code&gt; protocol buffer that is returned.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;import_scope&lt;/code&gt; &lt;/b&gt;：オプションの &lt;code&gt;string&lt;/code&gt; -指定されている場合、ロードされたすべてのテンソル名の前にこの文字列の後に「/」を&lt;b&gt;付加し&lt;/b&gt;ます。このスコープは、渡されたセッションに読み込まれたテンソルインスタンスに適用されますが、返される静的な &lt;code&gt;MetaGraphDef&lt;/code&gt; プロトコルバッファーには書き込まれ&lt;em&gt;ません&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="42a92f40302642bd523cd2ee20859948ab6c84ac" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;import_scope&lt;/code&gt;&lt;/b&gt;: Optional &lt;code&gt;string&lt;/code&gt;. Name scope to add to the &lt;code&gt;Variable.&lt;/code&gt; Only used when initializing from protocol buffer.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;import_scope&lt;/code&gt; &lt;/b&gt;：オプションの &lt;code&gt;string&lt;/code&gt; 。 &lt;code&gt;Variable.&lt;/code&gt; に追加する名前スコープ。プロトコルバッファから初期化する場合にのみ使用されます。</target>
        </trans-unit>
        <trans-unit id="190d61a7756eeb09f71418ac3a0a499988039855" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;import_scope&lt;/code&gt;&lt;/b&gt;: Optional &lt;code&gt;string&lt;/code&gt;. Name scope to add. Only used when initializing from protocol buffer.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;import_scope&lt;/code&gt; &lt;/b&gt;：オプションの &lt;code&gt;string&lt;/code&gt; 。追加する名前スコープ。プロトコルバッファから初期化する場合にのみ使用されます。</target>
        </trans-unit>
        <trans-unit id="c8eddea35bd48f606623a0afeb986335d25bd3d0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;import_scope&lt;/code&gt;&lt;/b&gt;: Optional &lt;code&gt;string&lt;/code&gt;. Name scope to use.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;import_scope&lt;/code&gt; &lt;/b&gt;：オプションの &lt;code&gt;string&lt;/code&gt; 。使用する名前スコープ。</target>
        </trans-unit>
        <trans-unit id="8aa6d93f369c60e4d1cf0edce0855073b845306a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;in_order&lt;/code&gt;&lt;/b&gt;: bool, Traverse in order if True, post order if False. Errors that happen while listing directories are ignored.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;in_order&lt;/code&gt; &lt;/b&gt;：bool、Trueの場合は順番にトラバース、Falseの場合はポストオーダー。ディレクトリのリスト中に発生したエラーは無視されます。</target>
        </trans-unit>
        <trans-unit id="14f9dfd3bcbbcdd23e115735fc6a41f471fa4f11" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;include_batch_in_index&lt;/code&gt;&lt;/b&gt;: An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. Whether to include batch dimension in flattened index of &lt;code&gt;argmax&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;include_batch_in_index&lt;/code&gt; &lt;/b&gt;：オプションの &lt;code&gt;bool&lt;/code&gt; 。デフォルトは &lt;code&gt;False&lt;/code&gt; です。 &lt;code&gt;argmax&lt;/code&gt; のフラット化されたインデックスにバッチディメンションを含めるかどうか。</target>
        </trans-unit>
        <trans-unit id="a54a5338684012290f61e882253f0e3c859e313c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;include_batch_in_index&lt;/code&gt;&lt;/b&gt;: An optional &lt;code&gt;boolean&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. Whether to include batch dimension in flattened index of &lt;code&gt;argmax&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;include_batch_in_index&lt;/code&gt; &lt;/b&gt;：オプションの &lt;code&gt;boolean&lt;/code&gt; 。デフォルトは &lt;code&gt;False&lt;/code&gt; です。 &lt;code&gt;argmax&lt;/code&gt; のフラット化されたインデックスにバッチディメンションを含めるかどうか。</target>
        </trans-unit>
        <trans-unit id="361ed5c58fa5b6a5f2b8dd09ca7b36870edec901" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;include_optimizer&lt;/code&gt;&lt;/b&gt;: If True, save optimizer's state together.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;include_optimizer&lt;/code&gt; &lt;/b&gt;：Trueの場合、オプティマイザの状態を一緒に保存します。</target>
        </trans-unit>
        <trans-unit id="7cb3690981ad25cc98426cfaff05b6390025fdbd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;include_special_flags&lt;/code&gt;&lt;/b&gt;: bool, whether to include description of SPECIAL_FLAGS, i.e. --flagfile and --undefok.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;include_special_flags&lt;/code&gt; &lt;/b&gt;：bool、SPECIAL_FLAGSの説明、つまり--flagfileおよび--undefokを含めるかどうか。</target>
        </trans-unit>
        <trans-unit id="3557d7cd023774fcc48b72241198cac825caffae" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;increment&lt;/code&gt;&lt;/b&gt;: A tensor of same shape as &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;increment&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;x&lt;/code&gt; と同じ形状のテンソル。</target>
        </trans-unit>
        <trans-unit id="5ccc6d547a6cf3d563b1baabb27c1e11739451b6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;increment_period&lt;/code&gt;&lt;/b&gt;: Increases loss scale every &lt;code&gt;increment_period&lt;/code&gt; consecutive steps that finite gradients are encountered. If a nonfinite gradient is encountered, the count is reset back to zero.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;increment_period&lt;/code&gt; &lt;/b&gt;：有限勾配に遭遇する &lt;code&gt;increment_period&lt;/code&gt; の連続するステップごとに損失スケールを増やします。非有限勾配が検出されると、カウントはゼロにリセットされます。</target>
        </trans-unit>
        <trans-unit id="9e1977b87126cc3ee9941b6faa3a029956a91be8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;indent&lt;/code&gt;&lt;/b&gt;: str, indent for all but first line.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;indent&lt;/code&gt; &lt;/b&gt;：str、1行目以外のすべてのインデント。</target>
        </trans-unit>
        <trans-unit id="2fcac3285121d16212491c133692b3f48291c408" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;indentation&lt;/code&gt;&lt;/b&gt;: Deprecated.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;indentation&lt;/code&gt; &lt;/b&gt;：非推奨。</target>
        </trans-unit>
        <trans-unit id="6b038a9209a4715dff80d83fc4b808da0142f77e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;index&lt;/code&gt;&lt;/b&gt;: 0-D. int32 tensor with the index to read from.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;index&lt;/code&gt; &lt;/b&gt;：0-D。読み込むインデックスを含むint32テンソル。</target>
        </trans-unit>
        <trans-unit id="9162d4b155ec372d668b1a078471688e2295813e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;index&lt;/code&gt;&lt;/b&gt;: A &lt;a href=&quot;../../../../../tf#int64&quot;&gt;&lt;code&gt;tf.int64&lt;/code&gt;&lt;/a&gt; scalar &lt;a href=&quot;../../../../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt;, representing the worker index.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;index&lt;/code&gt; &lt;/b&gt;：ワーカーインデックスを表す&lt;a href=&quot;../../../../../tf#int64&quot;&gt; &lt;code&gt;tf.int64&lt;/code&gt; &lt;/a&gt;スカラー&lt;a href=&quot;../../../../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="df022eb2bd26c71d632b2ac698e00322917caa72" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;index&lt;/code&gt;&lt;/b&gt;: A &lt;a href=&quot;../../../../tf#int64&quot;&gt;&lt;code&gt;tf.int64&lt;/code&gt;&lt;/a&gt; scalar &lt;a href=&quot;../../../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt;, representing the worker index.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;index&lt;/code&gt; &lt;/b&gt;：ワーカーインデックスを表す&lt;a href=&quot;../../../../tf#int64&quot;&gt; &lt;code&gt;tf.int64&lt;/code&gt; &lt;/a&gt;スカラー&lt;a href=&quot;../../../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e8ce53e87560f7f71e18eeab31b4252629a745f9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;index&lt;/code&gt;&lt;/b&gt;: A &lt;a href=&quot;../../../tf#int64&quot;&gt;&lt;code&gt;tf.int64&lt;/code&gt;&lt;/a&gt; scalar &lt;a href=&quot;../../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt;, representing the worker index.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;index&lt;/code&gt; &lt;/b&gt;：ワーカーインデックスを表す&lt;a href=&quot;../../../tf#int64&quot;&gt; &lt;code&gt;tf.int64&lt;/code&gt; &lt;/a&gt;スカラー&lt;a href=&quot;../../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f5079047332e772d209c28eac0e8e1887ec877f5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;index&lt;/code&gt;&lt;/b&gt;: A &lt;a href=&quot;../../tf#int64&quot;&gt;&lt;code&gt;tf.int64&lt;/code&gt;&lt;/a&gt; scalar &lt;a href=&quot;../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt;, representing the worker index.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;index&lt;/code&gt; &lt;/b&gt;：ワーカーインデックスを表す&lt;a href=&quot;../../tf#int64&quot;&gt; &lt;code&gt;tf.int64&lt;/code&gt; &lt;/a&gt;スカラー&lt;a href=&quot;../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e19fe7643209318ca05c25d4913fce9caa8d90c5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;index&lt;/code&gt;&lt;/b&gt;: An integer index.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;index&lt;/code&gt; &lt;/b&gt;：整数のインデックス。</target>
        </trans-unit>
        <trans-unit id="43227c0d3539f693d62ec841d132b5f1f1a116d9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;index&lt;/code&gt;&lt;/b&gt;: An integer scalar tensor that determines the input that gets selected.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;index&lt;/code&gt; &lt;/b&gt;：選択される入力を決定する整数スカラーテンソル。</target>
        </trans-unit>
        <trans-unit id="6da438248415d904eabe3bf2efebda4d924cc584" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;index&lt;/code&gt;&lt;/b&gt;: Integer, index of layer.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;index&lt;/code&gt; &lt;/b&gt;：整数、レイヤーのインデックス。</target>
        </trans-unit>
        <trans-unit id="0f091dc7b587971f310645124a9cb2a62dab9fd3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;index&lt;/code&gt;&lt;/b&gt;: position of the batch in the Sequence.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;index&lt;/code&gt; &lt;/b&gt;：シーケンス内のバッチの位置。</target>
        </trans-unit>
        <trans-unit id="a6c0346c2c1ddbc49ff69f5c232046db99f6de7d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;index_from&lt;/code&gt;&lt;/b&gt;: index actual words with this index and higher.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;index_from&lt;/code&gt; &lt;/b&gt;：このインデックス以上の実際の単語にインデックスを付けます。</target>
        </trans-unit>
        <trans-unit id="e391287d4e85123b3e8fd96b061f083c2e9b5688" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;index_key&lt;/code&gt;&lt;/b&gt;: A single string name or a list of string names of index features. For each key the underlying feature's type must be &lt;code&gt;int64&lt;/code&gt; and its length must always match that of the &lt;code&gt;value_key&lt;/code&gt; feature. To represent &lt;code&gt;SparseTensor&lt;/code&gt;s with a &lt;code&gt;dense_shape&lt;/code&gt; of &lt;code&gt;rank&lt;/code&gt; higher than 1 a list of length &lt;code&gt;rank&lt;/code&gt; should be used.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;index_key&lt;/code&gt; &lt;/b&gt;：インデックス機能の単一の文字列名または文字列名のリスト。各キーについて、基になる機能のタイプは &lt;code&gt;int64&lt;/code&gt; である必要があり、その長さは常に &lt;code&gt;value_key&lt;/code&gt; 機能の長さと一致する必要があります。1より高い &lt;code&gt;rank&lt;/code&gt; &lt;code&gt;dense_shape&lt;/code&gt; を持つ &lt;code&gt;SparseTensor&lt;/code&gt; を表すには、長さ &lt;code&gt;rank&lt;/code&gt; リストを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="bfffb1b68b669c89dd6b9584506c87ed8239571e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;index_override&lt;/code&gt;&lt;/b&gt;: Specify what input/output index should this be in the final stub. i.e. add(arg0, index=1); add(arg1, index=0) will make the final stub be as stub_func(inputs[arg1, arg0], outputs=[]) rather than the default call order based ordering.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;index_override&lt;/code&gt; &lt;/b&gt;：これが最終スタブ内にある入力/出力インデックスを指定します。つまり、add（arg0、index = 1）; add（arg1、index = 0）は、デフォルトの呼び出し順序に基づく順序付けではなく、最終的なスタブをstub_func（inputs [arg1、arg0]、outputs = []）にします。</target>
        </trans-unit>
        <trans-unit id="f3324a17e2958c497e74c97a5011e1e276baeafa" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;indices&lt;/code&gt;&lt;/b&gt;: A 1-D &lt;code&gt;Tensor&lt;/code&gt; with indices into &lt;code&gt;data&lt;/code&gt;. Has same rank as &lt;code&gt;segment_ids&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;indices&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;data&lt;/code&gt; へのインデックスを持つ1次元 &lt;code&gt;Tensor&lt;/code&gt; 。 &lt;code&gt;segment_ids&lt;/code&gt; と同じランク。</target>
        </trans-unit>
        <trans-unit id="428e2dc7b58ca9e7796b6d0f0cdcedb74420a2ad" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;indices&lt;/code&gt;&lt;/b&gt;: A 2-D int64 tensor of shape &lt;code&gt;[N, ndims]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;indices&lt;/code&gt; &lt;/b&gt;：形状 &lt;code&gt;[N, ndims]&lt;/code&gt; 2D int64テンソル。</target>
        </trans-unit>
        <trans-unit id="9c008a7e94f9fe9a40921bfca5a92a664cc0a8e4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;indices&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;1-D&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; taking values in &lt;code&gt;[0, max_value)&lt;/code&gt;. If the &lt;code&gt;TensorArray&lt;/code&gt; is not dynamic, &lt;code&gt;max_value=size()&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;indices&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;[0, max_value)&lt;/code&gt; 値を取る &lt;code&gt;1-D&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; 。 &lt;code&gt;TensorArray&lt;/code&gt; が動的でない場合、 &lt;code&gt;max_value=size()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3cb7374dcebb0df337402ec0f15750cbfa22ab7a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;indices&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of indices.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;indices&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b7aed957762c6480a9591f4b1d8b09f44ae2d3ac" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;indices&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt; and shape &lt;code&gt;[num_accidental_hits]&lt;/code&gt;. Values indicate rows in &lt;code&gt;true_classes&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;indices&lt;/code&gt; &lt;/b&gt;：タイプが &lt;code&gt;int32&lt;/code&gt; で形状が &lt;code&gt;[num_accidental_hits]&lt;/code&gt; の &lt;code&gt;Tensor&lt;/code&gt; 。値は &lt;code&gt;true_classes&lt;/code&gt; の行を示します。</target>
        </trans-unit>
        <trans-unit id="865c686bbf5c343f77ae939e580f01e59d83c58d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;indices&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. A tensor of indices into ref.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;indices&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。次のタイプのいずれかでなければなりません： &lt;code&gt;int32&lt;/code&gt; 、 &lt;code&gt;int64&lt;/code&gt; 。参考文献へのインデックスのテンソル。</target>
        </trans-unit>
        <trans-unit id="bba3d08e3c93bba8d21ba9fe9f5895cfe9a61e22" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;indices&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. A tensor of indices into the first dimension of &lt;code&gt;ref&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;indices&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。次のタイプのいずれかでなければなりません： &lt;code&gt;int32&lt;/code&gt; 、 &lt;code&gt;int64&lt;/code&gt; 。 &lt;code&gt;ref&lt;/code&gt; の最初の次元へのインデックスのテンソル。</target>
        </trans-unit>
        <trans-unit id="778fe4431fe80929e23b70e7a01a58913bc86b22" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;indices&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. An 0-D or 1-D &lt;code&gt;int&lt;/code&gt; Tensor whose elements are indices into the flattened version of an array of dimensions dims.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;indices&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。次のタイプのいずれかでなければなりません： &lt;code&gt;int32&lt;/code&gt; 、 &lt;code&gt;int64&lt;/code&gt; 。0-Dまたは1-D &lt;code&gt;int&lt;/code&gt; 次元の配列dimsのフラット化バージョンへのインデックスを要素と Tensor。</target>
        </trans-unit>
        <trans-unit id="b99370099b4fad780e7561cf390a0341c8015c7f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;indices&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. Index tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;indices&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。次のタイプのいずれかでなければなりません： &lt;code&gt;int32&lt;/code&gt; 、 &lt;code&gt;int64&lt;/code&gt; 。インデックステンソル。</target>
        </trans-unit>
        <trans-unit id="671c4d45a6825acbb87425932fa9674264ca5870" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;indices&lt;/code&gt;&lt;/b&gt;: A list of at least 1 &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;int32&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;indices&lt;/code&gt; &lt;/b&gt;：タイプが &lt;code&gt;int32&lt;/code&gt; の少なくとも1つの &lt;code&gt;Tensor&lt;/code&gt; オブジェクトのリスト。</target>
        </trans-unit>
        <trans-unit id="b6eb5fafaf34935f06c1933a4268958ceb0edeec" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;indices&lt;/code&gt;&lt;/b&gt;: An integer tensor of indices.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;indices&lt;/code&gt; &lt;/b&gt;：&lt;b&gt;インデックス&lt;/b&gt;の整数テンソル。</target>
        </trans-unit>
        <trans-unit id="a4634c1eec0bd53c4db279e9492e6a8526fe9ff8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;indices&lt;/code&gt;&lt;/b&gt;: Tensor containing indices as described above.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;indices&lt;/code&gt; &lt;/b&gt;：上記のテンソルを含むインデックス。</target>
        </trans-unit>
        <trans-unit id="6805cab2f97cb21360a953087dbbccdf62425900" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;indices&lt;/code&gt;&lt;/b&gt;: The index &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. Must be in range &lt;code&gt;[0, params.shape[axis])&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;indices&lt;/code&gt; &lt;/b&gt;：インデックス &lt;code&gt;Tensor&lt;/code&gt; 。次のタイプのいずれかでなければなりません： &lt;code&gt;int32&lt;/code&gt; 、 &lt;code&gt;int64&lt;/code&gt; 。範囲は &lt;code&gt;[0, params.shape[axis])&lt;/code&gt; なければなりません。</target>
        </trans-unit>
        <trans-unit id="c01b31dc5e7f08f61088d7a1c362d5b52891288c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;indices&lt;/code&gt;&lt;/b&gt;: The indices of &lt;code&gt;values&lt;/code&gt; within the last dimension of &lt;code&gt;input&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;indices&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;input&lt;/code&gt; 最後の次元内の &lt;code&gt;values&lt;/code&gt; のインデックス。</target>
        </trans-unit>
        <trans-unit id="b05fce196e3477cf60bc97a3f2c3c5df9268ad25" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;indices&lt;/code&gt;&lt;/b&gt;: The indices to be used in the operation.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;indices&lt;/code&gt; &lt;/b&gt;：操作で使用されるインデックス。</target>
        </trans-unit>
        <trans-unit id="156450b611b0c4dba10a5db0b286e0bd696d5568" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;indices&lt;/code&gt;&lt;/b&gt;: nD integer tensor of shape &lt;code&gt;(batch_size, dim1, dim2, ... dim(n-1))&lt;/code&gt;</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;indices&lt;/code&gt; &lt;/b&gt;：形状のnD整数テンソル &lt;code&gt;(batch_size, dim1, dim2, ... dim(n-1))&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bfa679820343ba3b39a36ef7be9a4627b3b61bab" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;indices_dtype&lt;/code&gt;&lt;/b&gt;: &lt;a href=&quot;dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt; of the &lt;code&gt;indices&lt;/code&gt; in the &lt;code&gt;IndexedSlices&lt;/code&gt;. One of &lt;a href=&quot;../tf#int32&quot;&gt;&lt;code&gt;tf.int32&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../tf#int64&quot;&gt;&lt;code&gt;tf.int64&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;indices_dtype&lt;/code&gt; &lt;/b&gt;：&lt;a href=&quot;dtypes/dtype&quot;&gt; &lt;code&gt;tf.DType&lt;/code&gt; &lt;/a&gt;の &lt;code&gt;indices&lt;/code&gt; の &lt;code&gt;IndexedSlices&lt;/code&gt; 。&lt;a href=&quot;../tf#int32&quot;&gt; &lt;code&gt;tf.int32&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../tf#int64&quot;&gt; &lt;code&gt;tf.int64&lt;/code&gt; &lt;/a&gt;のいずれか。</target>
        </trans-unit>
        <trans-unit id="ad03ffe10d5569e5f9064d4c21c0ea37c729f63a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;indices_shape&lt;/code&gt;&lt;/b&gt;: The shape of the &lt;code&gt;indices&lt;/code&gt; component, which indicates how many slices are in the &lt;code&gt;IndexedSlices&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;indices_shape&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;indices&lt;/code&gt; コンポーネントの形状。これは、 &lt;code&gt;IndexedSlices&lt;/code&gt; にあるスライスの数を示します。</target>
        </trans-unit>
        <trans-unit id="95ca3838dd441440fe285ae20d2c014052a2777a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;infeed_queue&lt;/code&gt;&lt;/b&gt;: If not &lt;code&gt;None&lt;/code&gt;, the &lt;code&gt;InfeedQueue&lt;/code&gt; from which to append a tuple of arguments as inputs to &lt;code&gt;computation&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;infeed_queue&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;None&lt;/code&gt; でない場合、 &lt;code&gt;computation&lt;/code&gt; 入力として引数のタプルを追加する &lt;code&gt;InfeedQueue&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="16f7c538af30a6ef30ab0c8cee13729b23d15115" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;infeed_queue&lt;/code&gt;&lt;/b&gt;: If not &lt;code&gt;None&lt;/code&gt;, the &lt;code&gt;InfeedQueue&lt;/code&gt; from which to append a tuple of arguments as inputs to computation.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;infeed_queue&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;None&lt;/code&gt; でない場合、計算の入力として引数のタプルを追加する &lt;code&gt;InfeedQueue&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="10b4ff62e62efdc95a18f3a63aa74dca275ad369" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;infeed_queue&lt;/code&gt;&lt;/b&gt;: If not &lt;code&gt;None&lt;/code&gt;, the &lt;code&gt;InfeedQueue&lt;/code&gt; to use to augment the inputs of &lt;code&gt;computation&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;infeed_queue&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;None&lt;/code&gt; でない場合、 &lt;code&gt;computation&lt;/code&gt; の入力を増やすために使用する &lt;code&gt;InfeedQueue&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4b10afbd8ed8fce314f5fe77c6356adf7685288a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;infer_shape&lt;/code&gt;&lt;/b&gt;: (optional) False disables tests for consistent output shapes.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;infer_shape&lt;/code&gt; &lt;/b&gt;：（オプション）Falseは、一貫した出力形状のテストを無効にします。</target>
        </trans-unit>
        <trans-unit id="789d271ebccbe5ea12ee69afd4e1d03c14452760" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;infer_shape&lt;/code&gt;&lt;/b&gt;: (optional, default: True) If True, shape inference is enabled. In this case, all elements must have the same shape.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;infer_shape&lt;/code&gt; &lt;/b&gt;：（オプション、デフォルト：True）Trueの場合、形状推論が有効になります。この場合、すべての要素は同じ形状でなければなりません。</target>
        </trans-unit>
        <trans-unit id="4521337300e5076d811a7d0b06f4c522d0bfe886" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;infer_shape&lt;/code&gt;&lt;/b&gt;: Whether shape inference is enabled.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;infer_shape&lt;/code&gt; &lt;/b&gt;：形状推論が有効かどうか。</target>
        </trans-unit>
        <trans-unit id="4dddbf17bccee71b2f5ed052c658e35e9ae015a9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;inference_input_type&lt;/code&gt;&lt;/b&gt;: Target data type of real-number input arrays. Allows for a different type for input arrays. If an integer type is provided and &lt;code&gt;optimizations&lt;/code&gt; are not used, &lt;code&gt;quantized_inputs_stats&lt;/code&gt; must be provided. If &lt;code&gt;inference_type&lt;/code&gt; is tf.uint8, signaling conversion to a fully quantized model from a quantization-aware trained input model, then &lt;code&gt;inference_input_type&lt;/code&gt; defaults to tf.uint8. In all other cases, &lt;code&gt;inference_input_type&lt;/code&gt; defaults to tf.float32. Must be &lt;code&gt;{tf.float32, tf.uint8, tf.int8}&lt;/code&gt;</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;inference_input_type&lt;/code&gt; &lt;/b&gt;：実数入力配列のターゲットデータタイプ。入力配列に異なるタイプを許可します。整数型が提供され、 &lt;code&gt;optimizations&lt;/code&gt; が使用されない場合、 &lt;code&gt;quantized_inputs_stats&lt;/code&gt; を提供する必要があります。 &lt;code&gt;inference_type&lt;/code&gt; がtf.uint8の場合、量子化に対応したトレーニング済み入力モデルから完全に量子化されたモデルへの変換をシグナリングし、 &lt;code&gt;inference_input_type&lt;/code&gt; のデフォルトはtf.uint8になります。他のすべての場合では、 &lt;code&gt;inference_input_type&lt;/code&gt; のデフォルトはtf.float32です。 &lt;code&gt;{tf.float32, tf.uint8, tf.int8}&lt;/code&gt; 必要があります</target>
        </trans-unit>
        <trans-unit id="f1e3f43c7f3b4ebd44f266502366e54294091145" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;inference_output_type&lt;/code&gt;&lt;/b&gt;: Target data type of real-number output arrays. Allows for a different type for output arrays. If &lt;code&gt;inference_type&lt;/code&gt; is tf.uint8, signaling conversion to a fully quantized model from a quantization-aware trained output model, then &lt;code&gt;inference_output_type&lt;/code&gt; defaults to tf.uint8. In all other cases, &lt;code&gt;inference_output_type&lt;/code&gt; must be tf.float32, an error will be thrown otherwise. Must be &lt;code&gt;{tf.float32, tf.uint8, tf.int8}&lt;/code&gt;</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;inference_output_type&lt;/code&gt; &lt;/b&gt;：実数出力配列のターゲットデータタイプ。出力配列に異なるタイプを許可します。 &lt;code&gt;inference_type&lt;/code&gt; がtf.uint8の場合、量子化に対応したトレーニング済み出力モデルから完全に量子化されたモデルへの変換を通知し、その後、 &lt;code&gt;inference_output_type&lt;/code&gt; のデフォルトはtf.uint8になります。他のすべての場合、 &lt;code&gt;inference_output_type&lt;/code&gt; はtf.float32でなければなりません。そうでない場合、エラーがスローされます。 &lt;code&gt;{tf.float32, tf.uint8, tf.int8}&lt;/code&gt; 必要があります</target>
        </trans-unit>
        <trans-unit id="ce969f6efa4733c9bcb8a293d66d3c0189986302" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;inference_type&lt;/code&gt;&lt;/b&gt;: Target data type of real-number arrays in the output file. Must be &lt;code&gt;{tf.float32, tf.uint8}&lt;/code&gt;. If &lt;code&gt;optimzations&lt;/code&gt; are provided, this parameter is ignored. (default tf.float32)</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;inference_type&lt;/code&gt; &lt;/b&gt;：出力ファイルの実数配列のターゲットデータタイプ。 &lt;code&gt;{tf.float32, tf.uint8}&lt;/code&gt; なければなりません。場合 &lt;code&gt;optimzations&lt;/code&gt; が提供され、このパラメータは無視されます。（デフォルトtf.float32）</target>
        </trans-unit>
        <trans-unit id="a302f290c14f051bd5fa4b6dfbaaa680fd12b849" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;init_feed_dict&lt;/code&gt;&lt;/b&gt;: A dictionary that maps &lt;code&gt;Tensor&lt;/code&gt; objects to feed values. This feed dictionary will be used when &lt;code&gt;init_op&lt;/code&gt; is evaluated.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;init_feed_dict&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; オブジェクトをフィード値にマップする辞書。このフィード辞書は、 &lt;code&gt;init_op&lt;/code&gt; が評価されるときに使用されます。</target>
        </trans-unit>
        <trans-unit id="fe906a3a5b0a0826d6dcf3a80e5cbfd9abc5209e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;init_feed_dict&lt;/code&gt;&lt;/b&gt;: Optional dictionary that maps &lt;code&gt;Tensor&lt;/code&gt; objects to feed values. This feed dictionary is passed to the session &lt;code&gt;run()&lt;/code&gt; call when running the init op.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;init_feed_dict&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; オブジェクトをフィード値にマップするオプションの辞書。このフィード辞書は、init opの実行時にセッション &lt;code&gt;run()&lt;/code&gt; 呼び出しに渡されます。</target>
        </trans-unit>
        <trans-unit id="853b08663afb21e4b0008ab92bed8a8639e04338" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;init_feed_dict&lt;/code&gt;&lt;/b&gt;: Optional session feed dictionary to use when running the init_op.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;init_feed_dict&lt;/code&gt; &lt;/b&gt;：&lt;b&gt; init_opの&lt;/b&gt;実行時に使用するオプションのセッションフィードディクショナリ。</target>
        </trans-unit>
        <trans-unit id="aa2cb49ad93541b51787c863ea45d5db538c8060" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;init_fn&lt;/code&gt;&lt;/b&gt;: Optional callable used to initialize the model. Called after the optional &lt;code&gt;init_op&lt;/code&gt; is called. The callable must accept one argument, the session being initialized.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;init_fn&lt;/code&gt; &lt;/b&gt;：モデルの初期化に使用されるオプションの呼び出し可能。オプションの &lt;code&gt;init_op&lt;/code&gt; が呼び出された後に呼び出されます。呼び出し可能オブジェクトは、初期化されるセッションである1つの引数を受け入れる必要があります。</target>
        </trans-unit>
        <trans-unit id="6168cdb42c82642226f4b9f3fd6ed884b1280272" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;init_fn&lt;/code&gt;&lt;/b&gt;: Optional function to use to initialize the model after running the init_op. Will be called as &lt;code&gt;init_fn(scaffold, session)&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;init_fn&lt;/code&gt; &lt;/b&gt;：&lt;b&gt; init_opの&lt;/b&gt;実行後にモデルを初期化するために使用するオプションの関数。 &lt;code&gt;init_fn(scaffold, session)&lt;/code&gt; として呼び出されます。</target>
        </trans-unit>
        <trans-unit id="ab58792cf22489b58df7fdd20e90aa870aedac13" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;init_op&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;Operation&lt;/code&gt;. Used by chief supervisors to initialize the model when it can not be recovered. Defaults to an &lt;code&gt;Operation&lt;/code&gt; that initializes all global variables. If &lt;code&gt;None&lt;/code&gt;, no initialization is done automatically unless you pass a value for &lt;code&gt;init_fn&lt;/code&gt;, see below.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;init_op&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Operation&lt;/code&gt; 。モデルを回復できないときにモデルを初期化するために、主任監督者によって使用されます。デフォルトは、すべてのグローバル変数を初期化する &lt;code&gt;Operation&lt;/code&gt; です。 &lt;code&gt;None&lt;/code&gt; の場合、 &lt;code&gt;init_fn&lt;/code&gt; の値を渡さない限り、初期化は自動的には行われません。以下を参照してください。</target>
        </trans-unit>
        <trans-unit id="52e48c2468f46083de0269efdfed72ab755c5c33" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;init_op&lt;/code&gt;&lt;/b&gt;: Op or group of ops to execute when the graph is loaded. Note that when the init_op is specified it is run after the restore op at load-time.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;init_op&lt;/code&gt; &lt;/b&gt;：グラフが読み込まれたときに実行するOpまたはopのグループ。init_opが指定されている場合、それはロード時に復元操作の後に実行されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="2f9da48b47802fd895f41f13d4cd7a772e255c65" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;init_op&lt;/code&gt;&lt;/b&gt;: Optional &lt;code&gt;Operation&lt;/code&gt; used to initialize the model.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;init_op&lt;/code&gt; &lt;/b&gt;：モデルの初期化に使用されるオプションの &lt;code&gt;Operation&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2d6fea369603af9a0bd42c93a8f36bc5246d61e7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;init_op&lt;/code&gt;&lt;/b&gt;: Optional op for initializing variables.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;init_op&lt;/code&gt; &lt;/b&gt;：変数を初期化するためのオプションのop。</target>
        </trans-unit>
        <trans-unit id="a5dddb9999688f9293ab3e8ecc6859a3bb32cfc8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;init_targets&lt;/code&gt;&lt;/b&gt;: list of targets to run to initialize model params.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;init_targets&lt;/code&gt; &lt;/b&gt;：モデル&lt;b&gt;パラメータ&lt;/b&gt;を初期化するために実行するターゲットのリスト。</target>
        </trans-unit>
        <trans-unit id="768df0a8711b416c568873d136f28e4935adc582" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;initial_accumulator&lt;/code&gt;&lt;/b&gt;: initial accumulator for Adagrad.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;initial_accumulator&lt;/code&gt; &lt;/b&gt;：Adagradの初期アキュムレーター。</target>
        </trans-unit>
        <trans-unit id="2fbd86db496a96532812c14df122e24f990705f7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;initial_accumulator_value&lt;/code&gt;&lt;/b&gt;: A floating point value. Starting value for the accumulators, must be non-negative.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;initial_accumulator_value&lt;/code&gt; &lt;/b&gt;：浮動小数点値。アキュムレータの開始値は、負でない必要があります。</target>
        </trans-unit>
        <trans-unit id="210e24443770194259f167e839fc1102db67f19c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;initial_accumulator_value&lt;/code&gt;&lt;/b&gt;: A floating point value. Starting value for the accumulators, must be positive.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;initial_accumulator_value&lt;/code&gt; &lt;/b&gt;：浮動小数点値。アキュムレータの開始値は正でなければなりません。</target>
        </trans-unit>
        <trans-unit id="aa7fbbaaf9e68f59c4fe4b552b894ce3c79cf120" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;initial_accumulator_value&lt;/code&gt;&lt;/b&gt;: The starting value for accumulators. Only zero or positive values are allowed.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;initial_accumulator_value&lt;/code&gt; &lt;/b&gt;：アキュムレータの開始値。ゼロまたは正の値のみが許可されます。</target>
        </trans-unit>
        <trans-unit id="c965ce652eb9e6133aedb86a2798437558f45f96" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;initial_clusters&lt;/code&gt;&lt;/b&gt;: Specifies how the initial cluster centers are chosen. One of the following: * a tensor or numpy array with the initial cluster centers. * a callable &lt;code&gt;f(inputs, k)&lt;/code&gt; that selects and returns up to &lt;code&gt;k&lt;/code&gt; centers from an input batch. &lt;code&gt;f&lt;/code&gt; is free to return any number of centers from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;k&lt;/code&gt;. It will be invoked on successive input batches as necessary until all &lt;code&gt;num_clusters&lt;/code&gt; centers are chosen.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;initial_clusters&lt;/code&gt; &lt;/b&gt;：初期クラスター中心がどのように選択されるかを指定します。次のいずれか：*初期クラスター中心を持つテンソル配列またはnumpy配列。*入力バッチから最大 &lt;code&gt;k&lt;/code&gt; 個の中心を選択して返す呼び出し可能な &lt;code&gt;f(inputs, k)&lt;/code&gt; 。 &lt;code&gt;f&lt;/code&gt; は、 &lt;code&gt;0&lt;/code&gt; から &lt;code&gt;k&lt;/code&gt; までの任意の数の中心を自由に返すことができます。すべての &lt;code&gt;num_clusters&lt;/code&gt; センターが選択されるまで、必要に応じて連続する入力バッチで呼び出されます。</target>
        </trans-unit>
        <trans-unit id="90135f66405d09d36ed13e252d0fb0d87e8e077f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;initial_dist&lt;/code&gt;&lt;/b&gt;: (Optional.) A floating point type tensor, shaped &lt;code&gt;[num_classes]&lt;/code&gt;. If not provided, the true class distribution is estimated live in a streaming fashion.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;initial_dist&lt;/code&gt; &lt;/b&gt;：（オプション。） &lt;code&gt;[num_classes]&lt;/code&gt; 型の浮動小数点型テンソル。指定しない場合、実際のクラス分布はライブでストリーミング形式で推定されます。</target>
        </trans-unit>
        <trans-unit id="a79a24a770a4b18585934904eb458af0fd77b60a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;initial_epoch&lt;/code&gt;&lt;/b&gt;: Integer. Epoch at which to start training (useful for resuming a previous training run).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;initial_epoch&lt;/code&gt; &lt;/b&gt;：整数。トレーニングを開始するエポック（前のトレーニング実行を再開するのに役立ちます）。</target>
        </trans-unit>
        <trans-unit id="98be17f0b311d90afd5337eb14d06c9edaaa1afd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;initial_gradient_squared_accumulator_value&lt;/code&gt;&lt;/b&gt;: A floating point value. Starting value for the accumulators, must be positive.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;initial_gradient_squared_accumulator_value&lt;/code&gt; &lt;/b&gt;：浮動小数点値。アキュムレータの開始値は正でなければなりません。</target>
        </trans-unit>
        <trans-unit id="59bbec1b491ee73b17b50498954f0a7e0ffa7aae" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;initial_infeed_sleep_secs&lt;/code&gt;&lt;/b&gt;: The number of seconds the infeed thread should wait before enqueueing the first batch. This helps avoid timeouts for models that require a long compilation time.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;initial_infeed_sleep_secs&lt;/code&gt; &lt;/b&gt;：最初のバッチをキューに入れる前に、インフィードスレッドが待機する秒数。これにより、長いコンパイル時間を必要とするモデルのタイムアウトを回避できます。</target>
        </trans-unit>
        <trans-unit id="59d30d65190bcbbc9cdba95e765684e0060780dc" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;initial_learning_rate&lt;/code&gt;&lt;/b&gt;: A scalar &lt;code&gt;float32&lt;/code&gt; or &lt;code&gt;float64&lt;/code&gt; Tensor or a Python number. The initial learning rate.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;initial_learning_rate&lt;/code&gt; &lt;/b&gt;：スカラーの &lt;code&gt;float32&lt;/code&gt; または &lt;code&gt;float64&lt;/code&gt; TensorまたはPythonの数値。初期学習率。</target>
        </trans-unit>
        <trans-unit id="4908f4a686a376a755f2fa2d276e229459355816" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;initial_learning_rate&lt;/code&gt;&lt;/b&gt;: A scalar &lt;code&gt;float32&lt;/code&gt; or &lt;code&gt;float64&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; or a Python number. The initial learning rate.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;initial_learning_rate&lt;/code&gt; &lt;/b&gt;：スカラーの &lt;code&gt;float32&lt;/code&gt; または &lt;code&gt;float64&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; またはPythonの数値。初期学習率。</target>
        </trans-unit>
        <trans-unit id="fd9a82d476fe6e0881bd0fddc64729f67e9cc97d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;initial_loop_values&lt;/code&gt;&lt;/b&gt;: (Optional) Initial values to be passed into the loop that runs &lt;code&gt;fn&lt;/code&gt;. Defaults to &lt;code&gt;None&lt;/code&gt;. # TODO(priyag): Remove initial_loop_values argument when we have a mechanism to infer the outputs of &lt;code&gt;fn&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;initial_loop_values&lt;/code&gt; &lt;/b&gt;：（オプション） &lt;code&gt;fn&lt;/code&gt; を実行するループに渡される初期値。デフォルトは &lt;code&gt;None&lt;/code&gt; です。＃TODO（priyag）： &lt;code&gt;fn&lt;/code&gt; の出力を推測するメカニズムがある場合、initial_loop_values引数を削除します。</target>
        </trans-unit>
        <trans-unit id="062629721f69abf268488bc6ea85a28b1e027dd8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;initial_loss_scale&lt;/code&gt;&lt;/b&gt;: A Python float. The loss scale to use at the beginning. It's better to start this at a very high number, because a loss scale that is too high gets lowered far more quickly than a loss scale that is too low gets raised. The default is 2 ** 15, which is approximately half the maximum float16 value.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;initial_loss_scale&lt;/code&gt; &lt;/b&gt;：Pythonフロート。最初に使用する損失スケール。高すぎる損失スケールは、低すぎる損失スケールが発生するよりもはるかに速く低下するため、これを非常に大きな数から開始することをお勧めします。デフォルトは2 ** 15で、float16の最大値の約半分です。</target>
        </trans-unit>
        <trans-unit id="4c0794849438dfb2091f0fda1c542b5a28794355" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;initial_num_buckets&lt;/code&gt;&lt;/b&gt;: the initial number of buckets.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;initial_num_buckets&lt;/code&gt; &lt;/b&gt;：バケットの初期数。</target>
        </trans-unit>
        <trans-unit id="414e05e087029e98b8a0835a47147d5e50d212db" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;initial_state&lt;/code&gt;&lt;/b&gt;: (optional) An initial state for the RNN. If &lt;code&gt;cell.state_size&lt;/code&gt; is an integer, this must be a &lt;code&gt;Tensor&lt;/code&gt; of appropriate type and shape &lt;code&gt;[batch_size, cell.state_size]&lt;/code&gt;. If &lt;code&gt;cell.state_size&lt;/code&gt; is a tuple, this should be a tuple of tensors having shapes &lt;code&gt;[batch_size, s] for s in cell.state_size&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;initial_state&lt;/code&gt; &lt;/b&gt;：（オプション）RNNの初期状態。場合 &lt;code&gt;cell.state_size&lt;/code&gt; は整数であり、これがなければならない &lt;code&gt;Tensor&lt;/code&gt; 適切なタイプおよび形状の &lt;code&gt;[batch_size, cell.state_size]&lt;/code&gt; 。 &lt;code&gt;cell.state_size&lt;/code&gt; がタプルの場合、これは &lt;code&gt;[batch_size, s] for s in cell.state_size&lt;/code&gt; 形状 [batch_size、s]を持つテンソルのタプルである必要があります。</target>
        </trans-unit>
        <trans-unit id="0f8ae8d99dda766a9dde619c31116ba999e61685" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;initial_state&lt;/code&gt;&lt;/b&gt;: A nested structure of tensors, representing the initial state of the accumulator.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;initial_state&lt;/code&gt; &lt;/b&gt;：テンソルの入れ子構造で、アキュムレータの初期状態を表します。</target>
        </trans-unit>
        <trans-unit id="47e2fb3f082ba37f06b0d824902d124ac820f193" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;initial_state&lt;/code&gt;&lt;/b&gt;: An element representing the initial state of the transformation.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;initial_state&lt;/code&gt; &lt;/b&gt;：変換の初期状態を表す要素。</target>
        </trans-unit>
        <trans-unit id="d1ca07831a1f10f86b1d6917a295caa97525e373" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;initial_state&lt;/code&gt;&lt;/b&gt;: List of initial state tensors to be passed to the first call of the cell (optional, defaults to &lt;code&gt;None&lt;/code&gt; which causes creation of zero-filled initial state tensors).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;initial_state&lt;/code&gt; &lt;/b&gt;：セルの最初の呼び出しに渡される初期状態テンソルのリスト（オプション、デフォルトは &lt;code&gt;None&lt;/code&gt; で、ゼロで満たされた初期状態テンソルが作成されます）。</target>
        </trans-unit>
        <trans-unit id="a9403e87cc85cf6004afc91d06e1b5432d0af558" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;initial_state&lt;/code&gt;&lt;/b&gt;: List of initial state tensors to be passed to the first call of the cell.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;initial_state&lt;/code&gt; &lt;/b&gt;：セルの最初の呼び出しに渡される初期状態テンソルのリスト。</target>
        </trans-unit>
        <trans-unit id="a9bf0b9c7eb0ec7ca6dc3f984ddecd57259997e5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;initial_state_bw&lt;/code&gt;&lt;/b&gt;: (optional) Same as for &lt;code&gt;initial_state_fw&lt;/code&gt;, but using the corresponding properties of &lt;code&gt;cell_bw&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;initial_state_bw&lt;/code&gt; &lt;/b&gt;：（オプション） &lt;code&gt;initial_state_fw&lt;/code&gt; と同じですが、 &lt;code&gt;cell_bw&lt;/code&gt; の対応するプロパティを使用します。</target>
        </trans-unit>
        <trans-unit id="42dcb87ef0bf1669641109835623c48a70a866af" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;initial_state_fw&lt;/code&gt;&lt;/b&gt;: (optional) An initial state for the forward RNN. This must be a tensor of appropriate type and shape &lt;code&gt;[batch_size, cell_fw.state_size]&lt;/code&gt;. If &lt;code&gt;cell_fw.state_size&lt;/code&gt; is a tuple, this should be a tuple of tensors having shapes &lt;code&gt;[batch_size, s] for s in cell_fw.state_size&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;initial_state_fw&lt;/code&gt; &lt;/b&gt;：（オプション）フォワードRNNの初期状態。これは適切なタイプと形状のテンソルでなければなりません &lt;code&gt;[batch_size, cell_fw.state_size]&lt;/code&gt; 。 &lt;code&gt;cell_fw.state_size&lt;/code&gt; がタプルの場合、これは &lt;code&gt;[batch_size, s] for s in cell_fw.state_size&lt;/code&gt; 形状 [batch_size、s]を持つテンソルのタプルである必要があります。</target>
        </trans-unit>
        <trans-unit id="6ca34f4631beb382efd9c3977f30358a8e361963" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;initial_states&lt;/code&gt;&lt;/b&gt;: Tensor with shape &lt;code&gt;(samples, state_size)&lt;/code&gt; (no time dimension), containing the initial values for the states used in the step function. In the case that state_size is in a nested shape, the shape of initial_states will also follow the nested structure.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;initial_states&lt;/code&gt; &lt;/b&gt;：形状をもつテンソル &lt;code&gt;(samples, state_size)&lt;/code&gt; （時間次元なし）。step関数で使用される状態の初期値を含みます。state_sizeがネストされた形状の場合、initial_statesの形状もネストされた構造に従います。</target>
        </trans-unit>
        <trans-unit id="40d7db049c9f42ba99b39e911195aae3075149ec" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;initial_value&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;, or Python object convertible to a &lt;code&gt;Tensor&lt;/code&gt;, which is the initial value for the Variable. The initial value must have a shape specified unless &lt;code&gt;validate_shape&lt;/code&gt; is set to False. Can also be a callable with no argument that returns the initial value when called. In that case, &lt;code&gt;dtype&lt;/code&gt; must be specified. (Note that initializer functions from init_ops.py must first be bound to a shape before being used here.)</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;initial_value&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 、または変数の初期値である &lt;code&gt;Tensor&lt;/code&gt; に変換可能なPythonオブジェクト。 &lt;code&gt;validate_shape&lt;/code&gt; がFalseに設定されていない限り、初期値には形状が指定されている必要があります。呼び出されたときに初期値を返す引数なしの呼び出し可能オブジェクトにすることもできます。その場合、 &lt;code&gt;dtype&lt;/code&gt; を指定する必要があります。（ここで使用する前に、init_ops.pyの初期化関数を最初にシェイプにバインドする必要があることに注意してください。）</target>
        </trans-unit>
        <trans-unit id="be60b7627250bdeff9de38ec32ee55ba36b24184" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;initial_variance&lt;/code&gt;&lt;/b&gt;: initial variance for the noise. See computation above.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;initial_variance&lt;/code&gt; &lt;/b&gt;：ノイズの初期分散。上記の計算を参照してください。</target>
        </trans-unit>
        <trans-unit id="943d0713bd16c2757760a4890a1c1543bd677a73" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;initializer&lt;/code&gt;&lt;/b&gt;: (optional) A tensor or (possibly nested) sequence of tensors, as the initial value for the accumulator.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;initializer&lt;/code&gt; &lt;/b&gt;：（オプション）アキュムレータの初期値としてのテンソルまたは（場合によってはネストされた）テンソルのシーケンス。</target>
        </trans-unit>
        <trans-unit id="fe441142ea3cb49097c0e5b7e7afa58940c05939" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;initializer&lt;/code&gt;&lt;/b&gt;: (optional) A tensor or (possibly nested) sequence of tensors, initial value for the accumulator, and the expected output type of &lt;code&gt;fn&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;initializer&lt;/code&gt; &lt;/b&gt;：（オプション）テンソルまたは（場合によってはネストされた）テンソルのシーケンス、アキュムレータの初期値、および予想される出力タイプ &lt;code&gt;fn&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="019a8ec850213966ec3da709783171d828278a1c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;initializer&lt;/code&gt;&lt;/b&gt;: (optional) The initializer to use for the weight and projection matrices.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;initializer&lt;/code&gt; &lt;/b&gt;：（オプション）重みと射影行列に使用する初期化子。</target>
        </trans-unit>
        <trans-unit id="0d86898a00e40299f86c6c5dfc1c2590d59e460b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;initializer&lt;/code&gt;&lt;/b&gt;: A &lt;a href=&quot;../../../operation&quot;&gt;&lt;code&gt;tf.Operation&lt;/code&gt;&lt;/a&gt; that should be run to initialize this iterator.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;initializer&lt;/code&gt; &lt;/b&gt;：このイテレータを初期化するために実行する必要がある&lt;a href=&quot;../../../operation&quot;&gt; &lt;code&gt;tf.Operation&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="71f19f6b9f25e086927854063b10b45ec1eba0ee" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;initializer&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of shape &lt;code&gt;shape&lt;/code&gt; or a variable initializer function. If a function, it will be called once for each slice, passing the shape and data type of the slice as parameters. The function must return a tensor with the same shape as the slice.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;initializer&lt;/code&gt; &lt;/b&gt;：A &lt;code&gt;Tensor&lt;/code&gt; 形状の &lt;code&gt;shape&lt;/code&gt; や機能初期変数。関数の場合、スライスごとに1回呼び出され、スライスの形状とデータ型をパラメーターとして渡します。関数はスライスと同じ形状のテンソルを返す必要があります。</target>
        </trans-unit>
        <trans-unit id="8668651806284b7bb4282d60d615b0b9e9d9a280" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;initializer&lt;/code&gt;&lt;/b&gt;: A TableInitializerBase object that contains the data used to initialize the table. If None, then we only use out-of-vocab buckets.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;initializer&lt;/code&gt; &lt;/b&gt;：テーブルの初期化に使用されるデータを含むTableInitializerBaseオブジェクト。Noneの場合は、語彙外バケットのみを使用します。</target>
        </trans-unit>
        <trans-unit id="a3413b33cd33820303915b9cce50fe0f5830ac2e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;initializer&lt;/code&gt;&lt;/b&gt;: A variable initializer function to be used in embedding variable initialization. If not specified, defaults to &lt;a href=&quot;../../truncated_normal_initializer&quot;&gt;&lt;code&gt;tf.compat.v1.truncated_normal_initializer&lt;/code&gt;&lt;/a&gt; with mean &lt;code&gt;0.0&lt;/code&gt; and standard deviation &lt;code&gt;1/sqrt(dimension)&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;initializer&lt;/code&gt; &lt;/b&gt;：変数の初期化を埋め込むために使用される変数初期化関数。指定しない場合、デフォルトは平均 &lt;code&gt;0.0&lt;/code&gt; で標準偏差 &lt;code&gt;1/sqrt(dimension)&lt;/code&gt; の&lt;a href=&quot;../../truncated_normal_initializer&quot;&gt; &lt;code&gt;tf.compat.v1.truncated_normal_initializer&lt;/code&gt; &lt;/a&gt;になります。</target>
        </trans-unit>
        <trans-unit id="5a1f9ecb6320397122c9a91eeecd8145fe57c877" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;initializer&lt;/code&gt;&lt;/b&gt;: A variable initializer function to be used in embedding variable initialization. If not specified, defaults to &lt;code&gt;tf.truncated_normal_initializer&lt;/code&gt; with mean &lt;code&gt;0.0&lt;/code&gt; and standard deviation &lt;code&gt;1/sqrt(dimension)&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;initializer&lt;/code&gt; &lt;/b&gt;：変数の初期化を埋め込むために使用される変数初期化関数。指定されていない場合、デフォルトは平均 &lt;code&gt;0.0&lt;/code&gt; および標準偏差 &lt;code&gt;1/sqrt(dimension)&lt;/code&gt; の &lt;code&gt;tf.truncated_normal_initializer&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="a9fe75f0c838a0d1f23927b7072755201ce87045" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;initializer&lt;/code&gt;&lt;/b&gt;: A variable initializer function to be used in embedding variable initialization. If not specified, defaults to &lt;code&gt;truncated_normal_initializer&lt;/code&gt; with mean &lt;code&gt;0.0&lt;/code&gt; and standard deviation &lt;code&gt;1/sqrt(dimension)&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;initializer&lt;/code&gt; &lt;/b&gt;：埋め込み変数の初期化で使用される変数初期化関数。指定しない場合、デフォルトは、平均 &lt;code&gt;0.0&lt;/code&gt; および標準偏差 &lt;code&gt;1/sqrt(dimension)&lt;/code&gt; の &lt;code&gt;truncated_normal_initializer&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="25d50b0a82c4c94821763e81c14358d7140ae168" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;initializer&lt;/code&gt;&lt;/b&gt;: Initializer for the variable if one is created. Can either be an initializer object or a Tensor. If it's a Tensor, its shape must be known unless validate_shape is False.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;initializer&lt;/code&gt; &lt;/b&gt;：変数が作成された場合の変数の初期化子。初期化オブジェクトまたはTensorのいずれかです。Tensorの場合、validate_shapeがFalseでない限り、その形状は既知でなければなりません。</target>
        </trans-unit>
        <trans-unit id="3ebcf25dfb12e9ef4251cb565fa9cb79ac4810bf" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;initializer&lt;/code&gt;&lt;/b&gt;: Initializer instance (callable).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;initializer&lt;/code&gt; &lt;/b&gt;：初期化子インスタンス（呼び出し可能）。</target>
        </trans-unit>
        <trans-unit id="a4ac8e9f349c098ad8231ce7dab68cfc47434d93" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;initializer&lt;/code&gt;&lt;/b&gt;: The first value used (&lt;code&gt;elems[-1]&lt;/code&gt; in case of None)</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;initializer&lt;/code&gt; &lt;/b&gt;：使用される最初の値（Noneの場合は &lt;code&gt;elems[-1]&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="75ed62ce34d7da728888583a69313d4ddde91e3f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;initializer&lt;/code&gt;&lt;/b&gt;: The first value used (&lt;code&gt;elems[0]&lt;/code&gt; in case of None)</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;initializer&lt;/code&gt; &lt;/b&gt;：使用される最初の値（Noneの場合は &lt;code&gt;elems[0]&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="aa979e7d3ed381a863ce3edcc90477e70b086cc5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;initializer&lt;/code&gt;&lt;/b&gt;: The table initializer to use. See &lt;code&gt;HashTable&lt;/code&gt; kernel for supported key and value types.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;initializer&lt;/code&gt; &lt;/b&gt;：使用するテーブル初期化子。サポートされているキーと値のタイプについては、 &lt;code&gt;HashTable&lt;/code&gt; カーネルを参照してください。</target>
        </trans-unit>
        <trans-unit id="d3f942ae4ce29c93755f0449dbd6e54d1c941b50" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;initializer&lt;/code&gt;&lt;/b&gt;: default initializer for variables within this scope.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;initializer&lt;/code&gt; &lt;/b&gt;：このスコープ内の変数のデフォルトの初期化子。</target>
        </trans-unit>
        <trans-unit id="5d857f797e1ab14d6f3fe9e40949c070764ab1d2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;initializer&lt;/code&gt;&lt;/b&gt;: default initializer passed to get_variable.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;initializer&lt;/code&gt; &lt;/b&gt;：get_variableに渡されるデフォルトの初期化子。</target>
        </trans-unit>
        <trans-unit id="6a66c411b352aae9eac5a5ac223b8bc4d9b6bad5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;inner_axis&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;int&lt;/code&gt;: The last dimension in the range of dimensions to merge. May be negative if &lt;code&gt;self.shape.rank&lt;/code&gt; is statically known.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;inner_axis&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;int&lt;/code&gt; ：マージするディメンションの範囲の最後のディメンション。 &lt;code&gt;self.shape.rank&lt;/code&gt; が静的に知られている場合、負になる可能性があります。</target>
        </trans-unit>
        <trans-unit id="df24fe4817c3a4e3df41efe8d036e5c1f356166e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;inner_shape&lt;/code&gt;&lt;/b&gt;: A tuple of integers specifying the shape for individual inner values in the returned &lt;code&gt;RaggedTensor&lt;/code&gt;. Defaults to &lt;code&gt;()&lt;/code&gt; if &lt;code&gt;ragged_rank&lt;/code&gt; is not specified. If &lt;code&gt;ragged_rank&lt;/code&gt; is specified, then a default is chosen based on the contents of &lt;code&gt;pylist&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;inner_shape&lt;/code&gt; &lt;/b&gt;：返される &lt;code&gt;RaggedTensor&lt;/code&gt; の個々の内部値の形状を指定する整数のタプル。 &lt;code&gt;ragged_rank&lt;/code&gt; が指定されていない場合、デフォルトは &lt;code&gt;()&lt;/code&gt; です。 &lt;code&gt;ragged_rank&lt;/code&gt; が指定されている場合、デフォルトは &lt;code&gt;pylist&lt;/code&gt; の内容に基づいて選択されます。</target>
        </trans-unit>
        <trans-unit id="84c0a09e4fa6347f0a6d915e259e67fd9f54f584" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;inner_shape&lt;/code&gt;&lt;/b&gt;: A tuple of integers specifying the shape for individual inner values in the returned &lt;code&gt;RaggedTensorValue&lt;/code&gt;. Defaults to &lt;code&gt;()&lt;/code&gt; if &lt;code&gt;ragged_rank&lt;/code&gt; is not specified. If &lt;code&gt;ragged_rank&lt;/code&gt; is specified, then a default is chosen based on the contents of &lt;code&gt;pylist&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;inner_shape&lt;/code&gt; &lt;/b&gt;：返される &lt;code&gt;RaggedTensorValue&lt;/code&gt; の個々の内部値の形状を指定する整数のタプル。 &lt;code&gt;ragged_rank&lt;/code&gt; が指定されていない場合、デフォルトは &lt;code&gt;()&lt;/code&gt; です。 &lt;code&gt;ragged_rank&lt;/code&gt; が指定されている場合、デフォルトは &lt;code&gt;pylist&lt;/code&gt; の内容に基づいて選択されます。</target>
        </trans-unit>
        <trans-unit id="2924860902a77cb1364a94c61fbdb15757299d54" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;inp&lt;/code&gt;&lt;/b&gt;: A list of &lt;a href=&quot;tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;inp&lt;/code&gt; &lt;/b&gt;：&lt;a href=&quot;tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt;オブジェクトのリスト。</target>
        </trans-unit>
        <trans-unit id="6de07475be9d87d84c33b48ca3f3fc26b34e684c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;inp&lt;/code&gt;&lt;/b&gt;: A list of &lt;code&gt;Tensor&lt;/code&gt; objects.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;inp&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; オブジェクトのリスト。</target>
        </trans-unit>
        <trans-unit id="b0165320278fe077f0402b9ada41c19a776457e0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: 1-D or higher &lt;code&gt;Tensor&lt;/code&gt; with last dimension at least &lt;code&gt;k&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;：1次元以上の最後の次元が少なくとも &lt;code&gt;k&lt;/code&gt; の &lt;code&gt;Tensor&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d8b4099e19b622b6ea0468260e733a3a6401c142" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: 4-D &lt;code&gt;Tensor&lt;/code&gt; with shape according to &lt;code&gt;data_format&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;data_format&lt;/code&gt; に応じた形状の4次元 &lt;code&gt;Tensor&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d06a5c1069a55aa0ef662c48fcc482778c2549f3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: 4-D with shape according to &lt;code&gt;data_format&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;data_format&lt;/code&gt; に従った形状の4次元。</target>
        </trans-unit>
        <trans-unit id="ec483e44877bebf64fbb4062dee05b9b06e7576f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A 3-D &lt;code&gt;Tensor&lt;/code&gt; of the format specified by &lt;code&gt;data_format&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;data_format&lt;/code&gt; で指定された形式の3次元 &lt;code&gt;Tensor&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="99f04d919e78d00e0b3b3c3e8ce989855953b8c9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A 3-D &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float&lt;/code&gt; and shape &lt;code&gt;[batch, in_width, in_channels]&lt;/code&gt; for &lt;code&gt;NWC&lt;/code&gt; data format or &lt;code&gt;[batch, in_channels, in_width]&lt;/code&gt; for &lt;code&gt;NCW&lt;/code&gt; data format.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;：A 3-D &lt;code&gt;Tensor&lt;/code&gt; 型の &lt;code&gt;float&lt;/code&gt; と形状 &lt;code&gt;[batch, in_width, in_channels]&lt;/code&gt; 用 &lt;code&gt;NWC&lt;/code&gt; のデータフォーマットまたは &lt;code&gt;[batch, in_channels, in_width]&lt;/code&gt; 用 &lt;code&gt;NCW&lt;/code&gt; のデータフォーマット。</target>
        </trans-unit>
        <trans-unit id="515c365a73ac45a329e13d0ecf7e6e694a0e6545" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A 3D &lt;code&gt;Tensor&lt;/code&gt;. Must be of type &lt;code&gt;float16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, or &lt;code&gt;float64&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;：3D &lt;code&gt;Tensor&lt;/code&gt; 。 &lt;code&gt;float16&lt;/code&gt; 、 &lt;code&gt;float32&lt;/code&gt; 、または &lt;code&gt;float64&lt;/code&gt; 型である必要があります。</target>
        </trans-unit>
        <trans-unit id="36eae3d79bc5bc6d4714eed3d1fa93481b87f35a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A 4-D &lt;code&gt;Tensor&lt;/code&gt; of shape &lt;code&gt;[batch, height, width, channels]&lt;/code&gt; and type &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, or &lt;code&gt;qint32&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;：A 4-D &lt;code&gt;Tensor&lt;/code&gt; 形状の &lt;code&gt;[batch, height, width, channels]&lt;/code&gt; およびタイプ &lt;code&gt;float32&lt;/code&gt; 、 &lt;code&gt;float64&lt;/code&gt; 、 &lt;code&gt;qint8&lt;/code&gt; 、 &lt;code&gt;quint8&lt;/code&gt; 、又は &lt;code&gt;qint32&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="30e8516ea37c5177bb514f1aa5192ca796532664" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A 4-D &lt;code&gt;Tensor&lt;/code&gt; of the format specified by &lt;code&gt;data_format&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;data_format&lt;/code&gt; で指定された形式の4次元 &lt;code&gt;Tensor&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d04aa5f6dcc0fa1c2574053273d88536bfe314ba" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A 4-D &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float&lt;/code&gt; and shape &lt;code&gt;[batch, height, width, in_channels]&lt;/code&gt; for &lt;code&gt;NHWC&lt;/code&gt; data format or &lt;code&gt;[batch, in_channels, height, width]&lt;/code&gt; for &lt;code&gt;NCHW&lt;/code&gt; data format.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;：A 4-D &lt;code&gt;Tensor&lt;/code&gt; 型の &lt;code&gt;float&lt;/code&gt; と形状 &lt;code&gt;[batch, height, width, in_channels]&lt;/code&gt; 用 &lt;code&gt;NHWC&lt;/code&gt; のデータフォーマットまたは &lt;code&gt;[batch, in_channels, height, width]&lt;/code&gt; のため &lt;code&gt;NCHW&lt;/code&gt; のデータフォーマット。</target>
        </trans-unit>
        <trans-unit id="c91ada234862c5089eaa22175a6df584d4e17971" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A 4D input Tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;：4D入力テンソル。</target>
        </trans-unit>
        <trans-unit id="cc2f4456edcda0ad96c34934deeb08106a40bd47" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A 5-D &lt;code&gt;Tensor&lt;/code&gt; of shape &lt;code&gt;[batch, height, width, channels]&lt;/code&gt; and type &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, or &lt;code&gt;qint32&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;：形状 &lt;code&gt;[batch, height, width, channels]&lt;/code&gt; の5次元 &lt;code&gt;Tensor&lt;/code&gt; 型は &lt;code&gt;float32&lt;/code&gt; 、 &lt;code&gt;float64&lt;/code&gt; 、 &lt;code&gt;qint8&lt;/code&gt; 、 &lt;code&gt;quint8&lt;/code&gt; 、または &lt;code&gt;qint32&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c77db1f418e22dc8f1d84cf87285e35f8318f4bc" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A 5-D &lt;code&gt;Tensor&lt;/code&gt; of the format specified by &lt;code&gt;data_format&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;data_format&lt;/code&gt; で指定された形式の5次元 &lt;code&gt;Tensor&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ef9a2421bebea26a7b9122aedac7190ef0714907" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A 5-D &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float&lt;/code&gt; and shape &lt;code&gt;[batch, height, width, in_channels]&lt;/code&gt; for &lt;code&gt;NHWC&lt;/code&gt; data format or &lt;code&gt;[batch, in_channels, height, width]&lt;/code&gt; for &lt;code&gt;NCHW&lt;/code&gt; data format.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;：A 5-D &lt;code&gt;Tensor&lt;/code&gt; 型の &lt;code&gt;float&lt;/code&gt; と形状 &lt;code&gt;[batch, height, width, in_channels]&lt;/code&gt; 用 &lt;code&gt;NHWC&lt;/code&gt; のデータフォーマットまたは &lt;code&gt;[batch, in_channels, height, width]&lt;/code&gt; のため &lt;code&gt;NCHW&lt;/code&gt; のデータフォーマット。</target>
        </trans-unit>
        <trans-unit id="c2fbf41d7de23f708b34b9388e07a026f51251aa" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;：A &lt;code&gt;Tensor&lt;/code&gt; 型の &lt;code&gt;float32&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bd0abfc8b1e936cc5a59ec33156466a289f86fce" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. A 4-D float tensor of shape &lt;code&gt;[batch_size, height, width, channels]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;：A &lt;code&gt;Tensor&lt;/code&gt; 型の &lt;code&gt;float32&lt;/code&gt; 。形状の4D floatテンソル &lt;code&gt;[batch_size, height, width, channels]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d79925d70a6656cc2a6036e9f1c19d3f7c422ddf" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. A Tensor of int32 Unicode code points.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;int32&lt;/code&gt; 型の &lt;code&gt;Tensor&lt;/code&gt; 。int32 Unicodeコードポイントのテンソル。</target>
        </trans-unit>
        <trans-unit id="9ee7b32e074bdfc88fd954487f844a9b9755dfe0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;string&lt;/code&gt; 型の &lt;code&gt;Tensor&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="88a177f0f7fa4fd48f15523d3f5fb05800f4cd24" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. A string &lt;code&gt;Tensor&lt;/code&gt; of any shape.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;string&lt;/code&gt; 型の &lt;code&gt;Tensor&lt;/code&gt; 。任意の形状の文字列 &lt;code&gt;Tensor&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="79141335f7e64b4911354c84545274c2718f222c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. A string tensor of the text to be processed.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;string&lt;/code&gt; 型の &lt;code&gt;Tensor&lt;/code&gt; 。処理するテキストの文字列テンソル。</target>
        </trans-unit>
        <trans-unit id="e930ef13c941a7cdbcdf625201f8db774df0c529" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. Base64 strings to decode.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;string&lt;/code&gt; 型の &lt;code&gt;Tensor&lt;/code&gt; 。デコードするBase64文字列。</target>
        </trans-unit>
        <trans-unit id="b644f746c245267b21f92b40350e405851261fc3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. Strings to be encoded.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;string&lt;/code&gt; 型の &lt;code&gt;Tensor&lt;/code&gt; 。エンコードする文字列。</target>
        </trans-unit>
        <trans-unit id="ea23878ac83039687bc717c5e132199c33e2c5d6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. Tensor of strings</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;string&lt;/code&gt; 型の &lt;code&gt;Tensor&lt;/code&gt; 。文字列のテンソル</target>
        </trans-unit>
        <trans-unit id="e03d8c7494300031d3f8d1d13ade4ba6f13dad43" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. The string for which to compute the length.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;string&lt;/code&gt; 型の &lt;code&gt;Tensor&lt;/code&gt; 。長さを計算する文字列。</target>
        </trans-unit>
        <trans-unit id="a1a40d5f6ba5558fa889b3838acd502ba3455fcd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. The strings to assign a hash bucket.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;string&lt;/code&gt; 型の &lt;code&gt;Tensor&lt;/code&gt; 。ハッシュバケットを割り当てる文字列。</target>
        </trans-unit>
        <trans-unit id="0d3204e32c270e79c93d39ada8f771c6b5314e62" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. The text to be processed. Can have any shape.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;string&lt;/code&gt; 型の &lt;code&gt;Tensor&lt;/code&gt; 。処理するテキスト。任意の形状を持つことができます。</target>
        </trans-unit>
        <trans-unit id="193c5292dfd545dfb137f11ae65202da0e8d093e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. vector of strings to compute fingerprints on.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;string&lt;/code&gt; 型の &lt;code&gt;Tensor&lt;/code&gt; 。フィンガープリントを計算する文字列のベクトル。</target>
        </trans-unit>
        <trans-unit id="9c21eec90163f90a1e99b77cfa214ff8e3581086" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;SparseTensor&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; または &lt;code&gt;SparseTensor&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b852a12a8676008b3615cd1525f002c88800ea70" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; to quantize and dequantize.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;：量子化および逆量子化する &lt;code&gt;Tensor&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e2946f8f5f1b89c4c05a56fc9e9753665a76a9cb" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; with &lt;code&gt;rank k &amp;gt;= 2&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;：A &lt;code&gt;Tensor&lt;/code&gt; と &lt;code&gt;rank k &amp;gt;= 2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c5d6ef35562c6ef2f18109d5d6e7e152db470f76" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; with rank &lt;code&gt;k + 1&lt;/code&gt;, where &lt;code&gt;k &amp;gt;= 1&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;：A &lt;code&gt;Tensor&lt;/code&gt; 階数と &lt;code&gt;k + 1&lt;/code&gt; 、 &lt;code&gt;k &amp;gt;= 1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="80d3d7f78b55df87b45c3dcf9a9a960136d131c0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0dec467d24b0cbaf78df792d0cf57df3733aea05" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. 1-D or higher.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。1次元以上。</target>
        </trans-unit>
        <trans-unit id="7ce4140b0e38a7530116f4587902cb29616fdc80" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. 4-D tensor with shape &lt;code&gt;[batch*block_size*block_size, height_pad/block_size, width_pad/block_size, depth]&lt;/code&gt;. Note that the batch size of the input tensor must be divisible by &lt;code&gt;block_size * block_size&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。形状を持つ4次元テンソル &lt;code&gt;[batch*block_size*block_size, height_pad/block_size, width_pad/block_size, depth]&lt;/code&gt; 。入力テンソルのバッチサイズは、 &lt;code&gt;block_size * block_size&lt;/code&gt; 割り切れる必要があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="f33dc5865ca90c8da742108c75d6ddee7b0421ae" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. 4-D with shape &lt;code&gt;[batch, height, width, depth]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。形状 &lt;code&gt;[batch, height, width, depth]&lt;/code&gt; 4D。</target>
        </trans-unit>
        <trans-unit id="7046b32eb8e2d0f6b8a847d3567525f8327e9583" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. A Tensor to broadcast.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。ブロードキャストするテンソル。</target>
        </trans-unit>
        <trans-unit id="1e992cb11440352caee2cadc5037e28fcf17600f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be &lt;code&gt;float16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, or &lt;code&gt;complex128&lt;/code&gt; with shape &lt;code&gt;[..., M, M]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。形状が &lt;code&gt;[..., M, M]&lt;/code&gt; &lt;code&gt;float16&lt;/code&gt; 、 &lt;code&gt;float32&lt;/code&gt; 、 &lt;code&gt;float64&lt;/code&gt; 、 &lt;code&gt;complex64&lt;/code&gt; 、または &lt;code&gt;complex128&lt;/code&gt; である必要があります。</target>
        </trans-unit>
        <trans-unit id="3d557b6ed05d33ec92949e68176aa6e752b4c2b3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;. Rank k tensor where k is even and not zero.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。次のタイプのいずれかでなければなりません： &lt;code&gt;bfloat16&lt;/code&gt; 、 &lt;code&gt;half&lt;/code&gt; 、 &lt;code&gt;float32&lt;/code&gt; 、 &lt;code&gt;float64&lt;/code&gt; 、 &lt;code&gt;int32&lt;/code&gt; 、 &lt;code&gt;int64&lt;/code&gt; 、 &lt;code&gt;complex64&lt;/code&gt; 、 &lt;code&gt;complex128&lt;/code&gt; 。kテンソルをランク付けします。ここで、kはゼロではなく偶数です。</target>
        </trans-unit>
        <trans-unit id="1846432c3006488955bd154a0c7d8b6e65c5c86d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;, &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint16&lt;/code&gt;, &lt;code&gt;quint16&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。次のいずれかのタイプでなければなりません： &lt;code&gt;bfloat16&lt;/code&gt; 、 &lt;code&gt;half&lt;/code&gt; 、 &lt;code&gt;float32&lt;/code&gt; 、 &lt;code&gt;float64&lt;/code&gt; 型、 &lt;code&gt;int64&lt;/code&gt; 型、 &lt;code&gt;int32&lt;/code&gt; 、 &lt;code&gt;uint8&lt;/code&gt; 、 &lt;code&gt;uint16&lt;/code&gt; の、 &lt;code&gt;uint32&lt;/code&gt; 、 &lt;code&gt;uint64&lt;/code&gt; 型、 &lt;code&gt;int8&lt;/code&gt; 、 &lt;code&gt;int16&lt;/code&gt; 、 &lt;code&gt;complex64&lt;/code&gt; 、 &lt;code&gt;complex128&lt;/code&gt; 、 &lt;code&gt;qint8&lt;/code&gt; 、 &lt;code&gt;quint8&lt;/code&gt; 、 &lt;code&gt;qint16&lt;/code&gt; 、 &lt;code&gt;quint16&lt;/code&gt; 、 &lt;code&gt;qint32&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="60b571d2e12b05ca471500db2cd7be7b713399f9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;. A complex tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。次のタイプのいずれかでなければなりません： &lt;code&gt;complex64&lt;/code&gt; 、 &lt;code&gt;complex128&lt;/code&gt; 。複雑なテンソル。</target>
        </trans-unit>
        <trans-unit id="e42c0b425ec9be569d5c42fa6a413194e94600fd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;. Shape is &lt;code&gt;[..., M, M]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。次のタイプのいずれかでなければなりません： &lt;code&gt;complex64&lt;/code&gt; 、 &lt;code&gt;complex128&lt;/code&gt; 。形状は &lt;code&gt;[..., M, M]&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="6618f9586ef38dbd933b66209e2d2ca5c6daa30d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。 &lt;code&gt;float32&lt;/code&gt; 、 &lt;code&gt;float64&lt;/code&gt; 、 &lt;code&gt;int32&lt;/code&gt; 、 &lt;code&gt;uint8&lt;/code&gt; 、 &lt;code&gt;int16&lt;/code&gt; 、 &lt;code&gt;int8&lt;/code&gt; 、 &lt;code&gt;complex64&lt;/code&gt; 、 &lt;code&gt;int64&lt;/code&gt; 、 &lt;code&gt;qint8&lt;/code&gt; 、 &lt;code&gt;quint8&lt;/code&gt; 、 &lt;code&gt;qint32&lt;/code&gt; 、 &lt;code&gt;bfloat16&lt;/code&gt; 、 &lt;code&gt;uint16&lt;/code&gt; 、 &lt;code&gt;complex128&lt;/code&gt; 、 &lt;code&gt;half&lt;/code&gt; 、 &lt;code&gt;uint32&lt;/code&gt; 、 &lt;code&gt;uint64&lt;/code&gt; のいずれかのタイプである必要があります。</target>
        </trans-unit>
        <trans-unit id="463eab92e20ab3506c05545f7589880bb7584106" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;. 4-D with shape &lt;code&gt;[batch, height, width, channels]&lt;/code&gt;. Input to pool over.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。 &lt;code&gt;float32&lt;/code&gt; 、 &lt;code&gt;float64&lt;/code&gt; 、 &lt;code&gt;int32&lt;/code&gt; 、 &lt;code&gt;uint8&lt;/code&gt; 、 &lt;code&gt;int16&lt;/code&gt; 、 &lt;code&gt;int8&lt;/code&gt; 、 &lt;code&gt;int64&lt;/code&gt; 、 &lt;code&gt;bfloat16&lt;/code&gt; 、 &lt;code&gt;uint16&lt;/code&gt; 、 &lt;code&gt;half&lt;/code&gt; 、 &lt;code&gt;uint32&lt;/code&gt; 、 &lt;code&gt;uint64&lt;/code&gt; のいずれかのタイプである必要があります。形状の4-D &lt;code&gt;[batch, height, width, channels]&lt;/code&gt; 。プールオーバーへの入力。</target>
        </trans-unit>
        <trans-unit id="c2a2a2254668d0d9c33516d9e4b711552c93fdbc" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;. 4-D with shape &lt;code&gt;[batch, in_height, in_width, depth]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。 &lt;code&gt;float32&lt;/code&gt; 、 &lt;code&gt;float64&lt;/code&gt; 、 &lt;code&gt;int32&lt;/code&gt; 、 &lt;code&gt;uint8&lt;/code&gt; 、 &lt;code&gt;int16&lt;/code&gt; 、 &lt;code&gt;int8&lt;/code&gt; 、 &lt;code&gt;int64&lt;/code&gt; 、 &lt;code&gt;bfloat16&lt;/code&gt; 、 &lt;code&gt;uint16&lt;/code&gt; 、 &lt;code&gt;half&lt;/code&gt; 、 &lt;code&gt;uint32&lt;/code&gt; 、 &lt;code&gt;uint64&lt;/code&gt; のいずれかのタイプである必要があります。形状 &lt;code&gt;[batch, in_height, in_width, depth]&lt;/code&gt; 4次元。</target>
        </trans-unit>
        <trans-unit id="e7a6f40b9feca4d157935b1c5706937756da5016" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;. 5-D Tensor with shape &lt;code&gt;[batch, in_planes, in_rows, in_cols, depth]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。次のタイプのいずれかでなければなりません： &lt;code&gt;float32&lt;/code&gt; 、 &lt;code&gt;float64&lt;/code&gt; 、 &lt;code&gt;int32&lt;/code&gt; 、 &lt;code&gt;uint8&lt;/code&gt; 、 &lt;code&gt;int16&lt;/code&gt; 、 &lt;code&gt;int8&lt;/code&gt; 、 &lt;code&gt;int64&lt;/code&gt; 、 &lt;code&gt;bfloat16&lt;/code&gt; 、 &lt;code&gt;uint16&lt;/code&gt; 、 &lt;code&gt;half&lt;/code&gt; 、 &lt;code&gt;uint32&lt;/code&gt; 、 &lt;code&gt;uint64&lt;/code&gt; 。形状を持つ5次元テンソル &lt;code&gt;[batch, in_planes, in_rows, in_cols, depth]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8cb33a210a4efd50909b82fe4206b0fd03a98513" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. A float32 tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。次のタイプのいずれかでなければなりません： &lt;code&gt;float32&lt;/code&gt; 、 &lt;code&gt;float64&lt;/code&gt; 。float32テンソル。</target>
        </trans-unit>
        <trans-unit id="7efba4abfcf2ef6b11282df8edd05c66e5c5dc15" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;. A tensor of shape &lt;code&gt;[..., M, M]&lt;/code&gt; whose inner-most 2 dimensions form matrices of size &lt;code&gt;[M, M]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。次のタイプのいずれかである必要があります： &lt;code&gt;float64&lt;/code&gt; 、 &lt;code&gt;float32&lt;/code&gt; 、 &lt;code&gt;half&lt;/code&gt; 、 &lt;code&gt;complex64&lt;/code&gt; 、 &lt;code&gt;complex128&lt;/code&gt; 。最も内側の2次元がサイズ &lt;code&gt;[M, M]&lt;/code&gt; 行列を形成する形状 &lt;code&gt;[..., M, M]&lt;/code&gt; のテンソル。</target>
        </trans-unit>
        <trans-unit id="f3355280a54402ec0d0fa32c4315ab0f623e49b9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;. A tensor of shape &lt;code&gt;[..., M, N]&lt;/code&gt; whose inner-most 2 dimensions form matrices of size &lt;code&gt;[M, N]&lt;/code&gt;. Let &lt;code&gt;P&lt;/code&gt; be the minimum of &lt;code&gt;M&lt;/code&gt; and &lt;code&gt;N&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。次のタイプのいずれかでなければなりません： &lt;code&gt;float64&lt;/code&gt; 、 &lt;code&gt;float32&lt;/code&gt; 、 &lt;code&gt;half&lt;/code&gt; 、 &lt;code&gt;complex64&lt;/code&gt; 、 &lt;code&gt;complex128&lt;/code&gt; 。最も内側の2次元がサイズ &lt;code&gt;[M, N]&lt;/code&gt; 行列を形成する形状 &lt;code&gt;[..., M, N]&lt;/code&gt; のテンソル。してみましょう &lt;code&gt;P&lt;/code&gt; はの最小値で &lt;code&gt;M&lt;/code&gt; および &lt;code&gt;N&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ed92c2cfd994dfc550b515786fd311ee3db2eb21" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;. Shape is &lt;code&gt;[..., M, M]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。次のタイプのいずれかでなければなりません： &lt;code&gt;float64&lt;/code&gt; 、 &lt;code&gt;float32&lt;/code&gt; 、 &lt;code&gt;half&lt;/code&gt; 、 &lt;code&gt;complex64&lt;/code&gt; 、 &lt;code&gt;complex128&lt;/code&gt; 。形状は &lt;code&gt;[..., M, M]&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="96fa1180fd2dacecb176ac9562c0864863cb6281" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。次のタイプのいずれかでなければなりません： &lt;code&gt;float&lt;/code&gt; 、 &lt;code&gt;double&lt;/code&gt; 、 &lt;code&gt;complex64&lt;/code&gt; 、 &lt;code&gt;complex128&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d745b3f609e71db87780520edf646c708fb3ef2b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。次のタイプのいずれかでなければなりません： &lt;code&gt;half&lt;/code&gt; 、 &lt;code&gt;bfloat16&lt;/code&gt; 、 &lt;code&gt;float32&lt;/code&gt; 、 &lt;code&gt;float64&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="db5c59049c688b8a8e2704b2fed3df36aab872a8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. 4-D with shape &lt;code&gt;[batch, in_height, in_width, in_channels]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。次のタイプのいずれかでなければなりません： &lt;code&gt;half&lt;/code&gt; 、 &lt;code&gt;bfloat16&lt;/code&gt; 、 &lt;code&gt;float32&lt;/code&gt; 、 &lt;code&gt;float64&lt;/code&gt; 。形状 &lt;code&gt;[batch, in_height, in_width, in_channels]&lt;/code&gt; 4次元。</target>
        </trans-unit>
        <trans-unit id="a416a929a25863002edae741ab473effacad7555" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. 4-D with shape based on &lt;code&gt;data_format&lt;/code&gt;. For example, if &lt;code&gt;data_format&lt;/code&gt; is 'NHWC' then &lt;code&gt;input&lt;/code&gt; is a 4-D &lt;code&gt;[batch, in_height, in_width, in_channels]&lt;/code&gt; tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。次のタイプのいずれかでなければなりません： &lt;code&gt;half&lt;/code&gt; 、 &lt;code&gt;bfloat16&lt;/code&gt; 、 &lt;code&gt;float32&lt;/code&gt; 、 &lt;code&gt;float64&lt;/code&gt; 。 &lt;code&gt;data_format&lt;/code&gt; に基づく形状を持つ4次元。たとえば、 &lt;code&gt;data_format&lt;/code&gt; が 'NHWC'の場合、 &lt;code&gt;input&lt;/code&gt; は4次元 &lt;code&gt;[batch, in_height, in_width, in_channels]&lt;/code&gt; テンソルです。</target>
        </trans-unit>
        <trans-unit id="e2ae7b1fffdd75f7eb68c71640036d77758803eb" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. A 4-D tensor. The dimension order is interpreted according to the value of &lt;code&gt;data_format&lt;/code&gt;, see below for details.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。次のタイプのいずれかでなければなりません： &lt;code&gt;half&lt;/code&gt; 、 &lt;code&gt;bfloat16&lt;/code&gt; 、 &lt;code&gt;float32&lt;/code&gt; 、 &lt;code&gt;float64&lt;/code&gt; 。4Dテンソル。ディメンションの順序は、 &lt;code&gt;data_format&lt;/code&gt; の値に従って解釈されます。詳細については、以下を参照してください。</target>
        </trans-unit>
        <trans-unit id="c22e345cbe2efd207855424d323b32d105234dd7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. Shape &lt;code&gt;[batch, depth, rows, cols, in_channels]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。次のタイプのいずれかでなければなりません： &lt;code&gt;half&lt;/code&gt; 、 &lt;code&gt;bfloat16&lt;/code&gt; 、 &lt;code&gt;float32&lt;/code&gt; 、 &lt;code&gt;float64&lt;/code&gt; 。形状 &lt;code&gt;[batch, depth, rows, cols, in_channels]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="070b14b8a0e2ed2bff1f5c72d2b00a29b74155ef" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. Shape &lt;code&gt;[batch, in_depth, in_height, in_width, in_channels]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。次のタイプのいずれかでなければなりません： &lt;code&gt;half&lt;/code&gt; 、 &lt;code&gt;bfloat16&lt;/code&gt; 、 &lt;code&gt;float32&lt;/code&gt; 、 &lt;code&gt;float64&lt;/code&gt; 。形状 &lt;code&gt;[batch, in_depth, in_height, in_width, in_channels]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2fb1366412fba4574a1d2ca3b2c341a42ed2225e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;. 4-D.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。次のタイプのいずれかでなければなりません： &lt;code&gt;half&lt;/code&gt; 、 &lt;code&gt;bfloat16&lt;/code&gt; 、 &lt;code&gt;float32&lt;/code&gt; 。4-D。</target>
        </trans-unit>
        <trans-unit id="a1377f8abbdd142bed407ca42d1184a98b0b27e6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;. Shape is &lt;code&gt;[..., M, M]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。次のタイプのいずれかでなければなりません： &lt;code&gt;half&lt;/code&gt; 、 &lt;code&gt;float32&lt;/code&gt; 、 &lt;code&gt;float64&lt;/code&gt; 、 &lt;code&gt;complex64&lt;/code&gt; 、 &lt;code&gt;complex128&lt;/code&gt; 。形状は &lt;code&gt;[..., M, M]&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="3ec65699b6cf196a4c3c501f39383cb7bd150f5d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;. Shape is &lt;code&gt;[N, M, M]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。次のタイプのいずれかでなければなりません： &lt;code&gt;half&lt;/code&gt; 、 &lt;code&gt;float32&lt;/code&gt; 、 &lt;code&gt;float64&lt;/code&gt; 、 &lt;code&gt;complex64&lt;/code&gt; 、 &lt;code&gt;complex128&lt;/code&gt; 。形状は &lt;code&gt;[N, M, M]&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c2e4db8014d28022b3b737714956859c091e3196" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;bool&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。次のタイプのいずれかである必要があります： &lt;code&gt;int8&lt;/code&gt; 、 &lt;code&gt;int16&lt;/code&gt; 、 &lt;code&gt;int32&lt;/code&gt; 、 &lt;code&gt;int64&lt;/code&gt; 、 &lt;code&gt;complex64&lt;/code&gt; 、 &lt;code&gt;complex128&lt;/code&gt; 、 &lt;code&gt;float32&lt;/code&gt; 、 &lt;code&gt;float64&lt;/code&gt; 、 &lt;code&gt;bool&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3336f5c2f51331eb3a9ec8f4781080065e6e9bd8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;qint16&lt;/code&gt;, &lt;code&gt;quint16&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。 &lt;code&gt;qint8&lt;/code&gt; 、 &lt;code&gt;quint8&lt;/code&gt; 、 &lt;code&gt;qint32&lt;/code&gt; 、 &lt;code&gt;qint16&lt;/code&gt; 、 &lt;code&gt;quint16&lt;/code&gt; のいずれかのタイプである必要があります。</target>
        </trans-unit>
        <trans-unit id="ba1fd61c7afbd91297ac4bf2e82c80a8d785855a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;qint16&lt;/code&gt;, &lt;code&gt;quint16&lt;/code&gt;. 4-D with shape &lt;code&gt;[batch, height, width, channels]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。 &lt;code&gt;qint8&lt;/code&gt; 、 &lt;code&gt;quint8&lt;/code&gt; 、 &lt;code&gt;qint32&lt;/code&gt; 、 &lt;code&gt;qint16&lt;/code&gt; 、 &lt;code&gt;quint16&lt;/code&gt; のいずれかのタイプである必要があります。形状の4-D &lt;code&gt;[batch, height, width, channels]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0882fbc0a029716cfdbfa4aec36031f8b6962349" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;qint16&lt;/code&gt;, &lt;code&gt;quint16&lt;/code&gt;. The 4D (batch x rows x cols x depth) Tensor to MaxReduce over.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。 &lt;code&gt;qint8&lt;/code&gt; 、 &lt;code&gt;quint8&lt;/code&gt; 、 &lt;code&gt;qint32&lt;/code&gt; 、 &lt;code&gt;qint16&lt;/code&gt; 、 &lt;code&gt;quint16&lt;/code&gt; のいずれかのタイプである必要があります。MaxReduceの4D（バッチx行x列x深度）テンソル。</target>
        </trans-unit>
        <trans-unit id="0a5020c6c2647c11490403257a2cf8eb852ff064" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must have numeric type.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。数値型でなければなりません。</target>
        </trans-unit>
        <trans-unit id="3699995c4b42b988ecfa0c6fc8b56309ec8b3a42" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. N-D with shape &lt;code&gt;input_shape = [batch] + spatial_shape + remaining_shape&lt;/code&gt;, where spatial_shape has &lt;code&gt;M&lt;/code&gt; dimensions.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。形状がNDの &lt;code&gt;input_shape = [batch] + spatial_shape + remaining_shape&lt;/code&gt; 。ここで、spatial_shapeの次元は &lt;code&gt;M&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="02b5ab5c5f8b26ff2af3c07f60da3de510b05ee5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. N-D with shape &lt;code&gt;input_shape = [batch] + spatial_shape + remaining_shape&lt;/code&gt;, where spatial_shape has M dimensions.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。形状がNDの &lt;code&gt;input_shape = [batch] + spatial_shape + remaining_shape&lt;/code&gt; 。ここで、spatial_shapeの次元はMです。</target>
        </trans-unit>
        <trans-unit id="cfaf968b2649df5c5206e5fb69d1935d32e6adbd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Rank &lt;code&gt;k&lt;/code&gt; tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。ランク &lt;code&gt;k&lt;/code&gt; テンソル。</target>
        </trans-unit>
        <trans-unit id="b314aa43ba16b695040d0ff0f6e1a11d661cb454" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. The &lt;code&gt;input&lt;/code&gt; to squeeze.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。 &lt;code&gt;input&lt;/code&gt; スクイズへ。</target>
        </trans-unit>
        <trans-unit id="9717b382b8da76cd7a6c520a2ccb0c61d9af1eaa" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. The default value to produce when output is not fed.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。出力が供給されない場合に生成するデフォルト値。</target>
        </trans-unit>
        <trans-unit id="f032ba8940470b1d9d01f4c7d615392ee065220f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;[..., samples]&lt;/code&gt;&lt;code&gt;float32&lt;/code&gt;/&lt;code&gt;float64&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; containing the signals to take the DCT of.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;[..., samples]&lt;/code&gt; &lt;code&gt;float32&lt;/code&gt; / &lt;code&gt;float64&lt;/code&gt; DCTを取得する信号を含む &lt;code&gt;Tensor&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="24b464cd234b4456772b51af704fe5a803322531" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A list of &lt;code&gt;Tensor&lt;/code&gt; objects.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; オブジェクトのリスト。</target>
        </trans-unit>
        <trans-unit id="629139ad58cdf7bc674bf0ba35bc1c7af458d093" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A list of at least 1 &lt;code&gt;Tensor&lt;/code&gt; object with the same type.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;：同じタイプの少なくとも1つの &lt;code&gt;Tensor&lt;/code&gt; オブジェクトのリスト。</target>
        </trans-unit>
        <trans-unit id="06c0d38ec399bacec4daaa60dfdc01621c2c2a42" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A string &lt;code&gt;Tensor&lt;/code&gt; of rank &lt;code&gt;N&lt;/code&gt;, the strings to split. If &lt;code&gt;rank(input)&lt;/code&gt; is not known statically, then it is assumed to be &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;：分割する文字列、ランク &lt;code&gt;N&lt;/code&gt; の文字列 &lt;code&gt;Tensor&lt;/code&gt; 。場合 &lt;code&gt;rank(input)&lt;/code&gt; 静的に知られていないが、あるものとする &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9972c78e02009332356632d31b2a027beaf190d8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: A string &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;RaggedTensor&lt;/code&gt;: the strings to split. Must have a statically known rank (&lt;code&gt;N&lt;/code&gt;).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;：文字列 &lt;code&gt;Tensor&lt;/code&gt; または &lt;code&gt;RaggedTensor&lt;/code&gt; ：分割する文字列。静的に既知のランク（ &lt;code&gt;N&lt;/code&gt; ）が必要です。</target>
        </trans-unit>
        <trans-unit id="c6da5c8f9724ecfd67151251895e2f083adaa4e9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: Alias for t.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;：tのエイリアス。</target>
        </trans-unit>
        <trans-unit id="65c719c435abec7b9652b0e5b5445f980c560236" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: Alias for value.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;：値のエイリアス。</target>
        </trans-unit>
        <trans-unit id="f20527fe25822fc11aeac0acce3c8b9687bd308c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: Alias of value.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;：値のエイリアス。</target>
        </trans-unit>
        <trans-unit id="d77c39735f141723693e68cac8358ef20b726110" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: An (N+2)-D &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;T&lt;/code&gt;, of shape &lt;code&gt;[batch_size] + input_spatial_shape + [in_channels]&lt;/code&gt; if data_format does not start with &quot;NC&quot; (default), or &lt;code&gt;[batch_size, in_channels] + input_spatial_shape&lt;/code&gt; if data_format starts with &quot;NC&quot;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;：タイプ &lt;code&gt;T&lt;/code&gt; の（N + 2）-D &lt;code&gt;Tensor&lt;/code&gt; 、形状 &lt;code&gt;[batch_size] + input_spatial_shape + [in_channels]&lt;/code&gt; data_formatが「NC」で開始しない場合（デフォルト））、または &lt;code&gt;[batch_size, in_channels] + input_spatial_shape&lt;/code&gt; data_formatが開始する場合はinput_spatial_shape 「NC」付き。</target>
        </trans-unit>
        <trans-unit id="6cb19e26e4abf61534508d50e385d57179b7a040" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: An &lt;code&gt;N+1&lt;/code&gt; dimensional potentially ragged integer tensor with shape &lt;code&gt;[D1...DN, num_chars]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;：形状が &lt;code&gt;[D1...DN, num_chars]&lt;/code&gt; の &lt;code&gt;N+1&lt;/code&gt; 次元の潜在的に不規則な整数テンソル。</target>
        </trans-unit>
        <trans-unit id="3acd35f1eba567ac19605fb47609613cb18114ac" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: An &lt;code&gt;N&lt;/code&gt; dimensional potentially ragged &lt;code&gt;string&lt;/code&gt; tensor with shape &lt;code&gt;[D1...DN]&lt;/code&gt;. &lt;code&gt;N&lt;/code&gt; must be statically known.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;：形状が &lt;code&gt;[D1...DN]&lt;/code&gt; の &lt;code&gt;N&lt;/code&gt; 次元の潜在的に不規則な &lt;code&gt;string&lt;/code&gt; テンソル。 &lt;code&gt;N&lt;/code&gt; は静的に既知でなければなりません。</target>
        </trans-unit>
        <trans-unit id="54d73f231557eda7886977d79b252988ea84e8e9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: An &lt;code&gt;N&lt;/code&gt;-dimensional Tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;N&lt;/code&gt; 次元のテンソル。</target>
        </trans-unit>
        <trans-unit id="87304398d355d9485d26bd9f8237d11628093dfc" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: An N+2 dimensional &lt;code&gt;Tensor&lt;/code&gt; of shape &lt;code&gt;[batch_size] + input_spatial_shape + [in_channels]&lt;/code&gt; if data_format does not start with &quot;NC&quot; (default), or &lt;code&gt;[batch_size, in_channels] + input_spatial_shape&lt;/code&gt; if data_format starts with &quot;NC&quot;. It must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;[batch_size] + input_spatial_shape + [in_channels]&lt;/code&gt; formatが「NC」で始まらない場合（デフォルト）、形状の [batch_size] + input_spatial_shape + [in_channels]のN + 2次元 &lt;code&gt;Tensor&lt;/code&gt; 、またはdata_formatが「NC」で始まる場合は &lt;code&gt;[batch_size, in_channels] + input_spatial_shape&lt;/code&gt; 。次のタイプのいずれかである必要があります： &lt;code&gt;half&lt;/code&gt; 、 &lt;code&gt;bfloat16&lt;/code&gt; 、 &lt;code&gt;float32&lt;/code&gt; 、 &lt;code&gt;float64&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d287a307a2a8e4a0654404ff968a68913abca3ef" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: Overrides input_tensor. For compatibility.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;：input_tensorをオーバーライドします。互換性のため。</target>
        </trans-unit>
        <trans-unit id="e96ef8358eefe149aac56cb613e87feb4691b2cc" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: Tensor of rank &amp;gt; max(spatial_dims).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;：ランクのテンソル&amp;gt; max（spatial_dims）。</target>
        </trans-unit>
        <trans-unit id="02fb8733e139ca82dc5cea4245434c1996126abd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: Tensor of rank N+2, of shape &lt;code&gt;[batch_size] + input_spatial_shape + [num_channels]&lt;/code&gt; if &lt;code&gt;data_format&lt;/code&gt; does not start with &quot;NC&quot; (default), or &lt;code&gt;[batch_size, num_channels] + input_spatial_shape&lt;/code&gt; if data_format starts with &quot;NC&quot;. Pooling happens over the spatial dimensions only.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;：ランクN + 2のテンソル、形状 &lt;code&gt;[batch_size] + input_spatial_shape + [num_channels]&lt;/code&gt; &lt;code&gt;data_format&lt;/code&gt; が &quot;NC&quot;で始まらない場合（デフォルト））、または &lt;code&gt;[batch_size, num_channels] + input_spatial_shape&lt;/code&gt; data_formatが &quot;NC&quot;で始まる場合）。プーリングは空間次元でのみ発生します。</target>
        </trans-unit>
        <trans-unit id="7f0f97eaa1725f793336b0138c400087da468eb7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: Tensor of rank N+2, of shape &lt;code&gt;[batch_size] + input_spatial_shape + [num_channels]&lt;/code&gt; if data_format does not start with &quot;NC&quot; (default), or &lt;code&gt;[batch_size, num_channels] + input_spatial_shape&lt;/code&gt; if data_format starts with &quot;NC&quot;. Pooling happens over the spatial dimensions only.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;：ランクN + 2のテンソル、形状 &lt;code&gt;[batch_size] + input_spatial_shape + [num_channels]&lt;/code&gt; data_formatが &quot;NC&quot;で始まらない場合（デフォルト））、または &lt;code&gt;[batch_size, num_channels] + input_spatial_shape&lt;/code&gt; data_formatが &quot;NC&quot;で始まる場合）。プーリングは空間次元でのみ発生します。</target>
        </trans-unit>
        <trans-unit id="167e695d39e06d1182ed7d44c576eb3c5d1faffb" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: The tensor to reduce. Should be of numeric type, &lt;code&gt;bool&lt;/code&gt;, or &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;：削減するテンソル。数値型、 &lt;code&gt;bool&lt;/code&gt; 、または &lt;code&gt;string&lt;/code&gt; でなければなりません。</target>
        </trans-unit>
        <trans-unit id="0f3acedd821eab45507e638936b070a28b9cb2bd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: string &lt;code&gt;Tensor&lt;/code&gt;, the source strings to process.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input&lt;/code&gt; &lt;/b&gt;：string &lt;code&gt;Tensor&lt;/code&gt; 、処理するソース文字列。</target>
        </trans-unit>
        <trans-unit id="6622c42106289cb5c44c7e972df0312293acd75c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c79ff650fd7986cbcf1e55285e14f4bdb5a530e7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_&lt;/code&gt;&lt;/b&gt;: A tensor passed through this op.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_&lt;/code&gt; &lt;/b&gt;：この&lt;b&gt;演算を&lt;/b&gt;通過したテンソル。</target>
        </trans-unit>
        <trans-unit id="6dfd13d81da3c2773359098859c439b1cee317a2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_arrays&lt;/code&gt;&lt;/b&gt;: List of input tensors to freeze graph with.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_arrays&lt;/code&gt; &lt;/b&gt;：グラフをフリーズする入力テンソルのリスト。</target>
        </trans-unit>
        <trans-unit id="66a2167042a9883e4fa5a61893631962e0a5e6c9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_arrays&lt;/code&gt;&lt;/b&gt;: List of input tensors to freeze graph with. Uses input arrays from SignatureDef when none are provided. (default None)</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_arrays&lt;/code&gt; &lt;/b&gt;：グラフをフリーズする入力テンソルのリスト。何も指定されていない場合、SignatureDefからの入力配列を使用します。（デフォルトはなし）</target>
        </trans-unit>
        <trans-unit id="74f690dd7d2a7b3e80f954fe234c0ce904fd7121" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_arrays_with_shape&lt;/code&gt;&lt;/b&gt;: Tuple of strings representing input tensor names and list of integers representing input shapes (e.g., [(&quot;foo&quot; : [1, 16, 16, 3])]). Use only when graph cannot be loaded into TensorFlow and when &lt;code&gt;input_tensors&lt;/code&gt; and &lt;code&gt;output_tensors&lt;/code&gt; are None. (default None)</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_arrays_with_shape&lt;/code&gt; &lt;/b&gt;：入力テンソル名を表す文字列のタプルと入力形状を表す整数のリスト（例：[（ &quot;foo&quot;：[&lt;b&gt; 1、16、16、3&lt;/b&gt; ]）]）。グラフをTensorFlowに読み込むことができず、 &lt;code&gt;input_tensors&lt;/code&gt; および &lt;code&gt;output_tensors&lt;/code&gt; がNoneの場合にのみ使用します。（デフォルトはなし）</target>
        </trans-unit>
        <trans-unit id="be44b5f68b05ff30dffdbc9af64c6d34b875acae" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_buffer_size&lt;/code&gt;&lt;/b&gt;: int or &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_buffer_size&lt;/code&gt; &lt;/b&gt;：intまたは &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="01af408eaf5c8ddff27fdc2c96c95e2db6b91e9c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_bytes&lt;/code&gt;&lt;/b&gt;: Each element of the input Tensor is converted to an array of bytes.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_bytes&lt;/code&gt; &lt;/b&gt;：入力テンソルの各要素がバイトの配列に変換されます。</target>
        </trans-unit>
        <trans-unit id="bcb3f2c802e196e70f573b0fd9abc5b66d3c9e4d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_data&lt;/code&gt;&lt;/b&gt;: Input data (i.e. often &lt;code&gt;sess.graph_def&lt;/code&gt;),</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_data&lt;/code&gt; &lt;/b&gt;：入力データ（つまり、しばしば &lt;code&gt;sess.graph_def&lt;/code&gt; ）、</target>
        </trans-unit>
        <trans-unit id="552eca9a9346e2f261fde27219ee28edce530dd5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_dim&lt;/code&gt;&lt;/b&gt;: int &amp;gt; 0. Size of the vocabulary, i.e. maximum integer index + 1.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_dim&lt;/code&gt; &lt;/b&gt;：int&amp;gt;0。語彙のサイズ、つまり最大整数インデックス+ 1。</target>
        </trans-unit>
        <trans-unit id="9818b46b164c98e7959ef8094c09cc8a6afcc653" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_encoding&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;string&lt;/code&gt;. Text encoding of the input strings. This is any of the encodings supported by ICU ucnv algorithmic converters. Examples: &lt;code&gt;&quot;UTF-16&quot;, &quot;US ASCII&quot;, &quot;UTF-8&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_encoding&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;string&lt;/code&gt; 。入力文字列のテキストエンコーディング。これは、ICU ucnvアルゴリズムコンバーターでサポートされているエンコードのいずれかです。例： &lt;code&gt;&quot;UTF-16&quot;, &quot;US ASCII&quot;, &quot;UTF-8&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="681b9f5463bab1ac52d8cbeee9d410848ea0f585" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_encoding&lt;/code&gt;&lt;/b&gt;: String name for the unicode encoding that should be used to decode each string.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_encoding&lt;/code&gt; &lt;/b&gt;：各文字列のデコードに使用するUnicodeエンコーディングの文字列名。</target>
        </trans-unit>
        <trans-unit id="e115d6c6720496a34db50255fe22b9e14b90ee86" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_fn&lt;/code&gt;&lt;/b&gt;: A function taking a &lt;a href=&quot;../../../../distribute/inputcontext&quot;&gt;&lt;code&gt;tf.distribute.InputContext&lt;/code&gt;&lt;/a&gt; object and returning a &lt;a href=&quot;../../../../data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_fn&lt;/code&gt; &lt;/b&gt;：&lt;a href=&quot;../../../../distribute/inputcontext&quot;&gt; &lt;code&gt;tf.distribute.InputContext&lt;/code&gt; &lt;/a&gt;オブジェクトを取り、 tf.data.Datasetを返す&lt;a href=&quot;../../../../data/dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="21723f300c7aff33e03d0835598725ef43cf65ff" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_fn&lt;/code&gt;&lt;/b&gt;: A function taking a &lt;a href=&quot;../../../distribute/inputcontext&quot;&gt;&lt;code&gt;tf.distribute.InputContext&lt;/code&gt;&lt;/a&gt; object and returning a &lt;a href=&quot;../../../data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_fn&lt;/code&gt; &lt;/b&gt;：&lt;a href=&quot;../../../distribute/inputcontext&quot;&gt; &lt;code&gt;tf.distribute.InputContext&lt;/code&gt; &lt;/a&gt;オブジェクトを受け取り、 tf.data.Datasetを返す&lt;a href=&quot;../../../data/dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="eed3f02aeae748620bcd02aff69e9360051dd92c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_fn&lt;/code&gt;&lt;/b&gt;: A function that constructs the features. Prediction continues until &lt;code&gt;input_fn&lt;/code&gt; raises an end-of-input exception (&lt;a href=&quot;../../../../errors/outofrangeerror&quot;&gt;&lt;code&gt;tf.errors.OutOfRangeError&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;StopIteration&lt;/code&gt;). See &lt;a href=&quot;https://tensorflow.org/guide/premade_estimators#create_input_functions&quot;&gt;Premade Estimators&lt;/a&gt; for more information. The function should construct and return one of the following:</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_fn&lt;/code&gt; &lt;/b&gt;：特徴を構築する関数。予測は、 &lt;code&gt;input_fn&lt;/code&gt; が入力終了例外（&lt;a href=&quot;../../../../errors/outofrangeerror&quot;&gt; &lt;code&gt;tf.errors.OutOfRangeError&lt;/code&gt; &lt;/a&gt;または &lt;code&gt;StopIteration&lt;/code&gt; ）を発生させるまで続きます。詳細については、&lt;a href=&quot;https://tensorflow.org/guide/premade_estimators#create_input_functions&quot;&gt;既製の推定量&lt;/a&gt;を参照してください。関数は次のいずれかを作成して返す必要があります。</target>
        </trans-unit>
        <trans-unit id="ddf0832feca712917033772401fde103ab820770" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_fn&lt;/code&gt;&lt;/b&gt;: A function that constructs the features. Prediction continues until &lt;code&gt;input_fn&lt;/code&gt; raises an end-of-input exception (&lt;a href=&quot;../../../errors/outofrangeerror&quot;&gt;&lt;code&gt;tf.errors.OutOfRangeError&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;StopIteration&lt;/code&gt;). See &lt;a href=&quot;https://tensorflow.org/guide/premade_estimators#create_input_functions&quot;&gt;Premade Estimators&lt;/a&gt; for more information. The function should construct and return one of the following:</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_fn&lt;/code&gt; &lt;/b&gt;：特徴を構築する関数。予測は、 &lt;code&gt;input_fn&lt;/code&gt; が入力終了例外（&lt;a href=&quot;../../../errors/outofrangeerror&quot;&gt; &lt;code&gt;tf.errors.OutOfRangeError&lt;/code&gt; &lt;/a&gt;または &lt;code&gt;StopIteration&lt;/code&gt; ）を発生させるまで続きます。詳細については、&lt;a href=&quot;https://tensorflow.org/guide/premade_estimators#create_input_functions&quot;&gt;既製の推定量&lt;/a&gt;を参照してください。関数は次のいずれかを作成して返す必要があります。</target>
        </trans-unit>
        <trans-unit id="1afbf5a9a99fc89fa05bd0584db75df858e017e4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_fn&lt;/code&gt;&lt;/b&gt;: A function that constructs the features. Prediction continues until &lt;code&gt;input_fn&lt;/code&gt; raises an end-of-input exception (&lt;a href=&quot;../../errors/outofrangeerror&quot;&gt;&lt;code&gt;tf.errors.OutOfRangeError&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;StopIteration&lt;/code&gt;). See &lt;a href=&quot;https://tensorflow.org/guide/premade_estimators#create_input_functions&quot;&gt;Premade Estimators&lt;/a&gt; for more information. The function should construct and return one of the following:</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_fn&lt;/code&gt; &lt;/b&gt;：特徴を構築する関数。予測は、 &lt;code&gt;input_fn&lt;/code&gt; が入力終了例外（&lt;a href=&quot;../../errors/outofrangeerror&quot;&gt; &lt;code&gt;tf.errors.OutOfRangeError&lt;/code&gt; &lt;/a&gt;または &lt;code&gt;StopIteration&lt;/code&gt; ）を発生させるまで続きます。詳細については、&lt;a href=&quot;https://tensorflow.org/guide/premade_estimators#create_input_functions&quot;&gt;既製の推定量&lt;/a&gt;を参照してください。関数は次のいずれかを作成して返す必要があります。</target>
        </trans-unit>
        <trans-unit id="d9114b228fc4fbf58388244d5b6c9c7c44cf02a4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_fn&lt;/code&gt;&lt;/b&gt;: A function that constructs the features. Prediction continues until &lt;code&gt;input_fn&lt;/code&gt; raises an end-of-input exception (&lt;a href=&quot;../errors/outofrangeerror&quot;&gt;&lt;code&gt;tf.errors.OutOfRangeError&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;StopIteration&lt;/code&gt;). See &lt;a href=&quot;https://tensorflow.org/guide/premade_estimators#create_input_functions&quot;&gt;Premade Estimators&lt;/a&gt; for more information. The function should construct and return one of the following:</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_fn&lt;/code&gt; &lt;/b&gt;：特徴を構築する関数。予測は、 &lt;code&gt;input_fn&lt;/code&gt; が入力終了例外（&lt;a href=&quot;../errors/outofrangeerror&quot;&gt; &lt;code&gt;tf.errors.OutOfRangeError&lt;/code&gt; &lt;/a&gt;または &lt;code&gt;StopIteration&lt;/code&gt; ）を発生させるまで続きます。詳細については、&lt;a href=&quot;https://tensorflow.org/guide/premade_estimators#create_input_functions&quot;&gt;既製の推定量&lt;/a&gt;を参照してください。関数は次のいずれかを作成して返す必要があります。</target>
        </trans-unit>
        <trans-unit id="b06c935925a9342379a05498779fd62934f8b3f7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_fn&lt;/code&gt;&lt;/b&gt;: A function that constructs the input data for evaluation. See &lt;a href=&quot;https://tensorflow.org/guide/premade_estimators#create_input_functions&quot;&gt;Premade Estimators&lt;/a&gt; for more information. The function should construct and return one of the following:</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_fn&lt;/code&gt; &lt;/b&gt;：評価用の入力データを構成する関数。詳細については、&lt;a href=&quot;https://tensorflow.org/guide/premade_estimators#create_input_functions&quot;&gt;既製の推定量&lt;/a&gt;を参照してください。関数は次のいずれかを作成して返す必要があります。</target>
        </trans-unit>
        <trans-unit id="8a7273ee4b654caa8eeeaa3742bdf774046b2c1f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_fn&lt;/code&gt;&lt;/b&gt;: A function that constructs the input data for evaluation. See &lt;a href=&quot;https://tensorflow.org/guide/premade_estimators#create_input_functions&quot;&gt;Premade Estimators&lt;/a&gt; for more information. The function should construct and return one of the following: * A &lt;a href=&quot;../../../../data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; object: Outputs of &lt;code&gt;Dataset&lt;/code&gt; object must be a tuple &lt;code&gt;(features, labels)&lt;/code&gt; with same constraints as below. * A tuple &lt;code&gt;(features, labels)&lt;/code&gt;: Where &lt;code&gt;features&lt;/code&gt; is a &lt;a href=&quot;../../../../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt; or a dictionary of string feature name to &lt;code&gt;Tensor&lt;/code&gt; and &lt;code&gt;labels&lt;/code&gt; is a &lt;code&gt;Tensor&lt;/code&gt; or a dictionary of string label name to &lt;code&gt;Tensor&lt;/code&gt;. Both &lt;code&gt;features&lt;/code&gt; and &lt;code&gt;labels&lt;/code&gt; are consumed by &lt;code&gt;model_fn&lt;/code&gt;. They should satisfy the expectation of &lt;code&gt;model_fn&lt;/code&gt; from inputs.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_fn&lt;/code&gt; &lt;/b&gt;：評価用の入力データを構成する関数。詳細については、&lt;a href=&quot;https://tensorflow.org/guide/premade_estimators#create_input_functions&quot;&gt;既製の推定量&lt;/a&gt;を参照してください。関数は、次のいずれかを作成して返す必要があります。*&lt;a href=&quot;../../../../data/dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt;オブジェクト： &lt;code&gt;Dataset&lt;/code&gt; オブジェクトの出力は、以下と同じ制約を持つタプル &lt;code&gt;(features, labels)&lt;/code&gt; である必要があります。 *タプル &lt;code&gt;(features, labels)&lt;/code&gt; ： &lt;code&gt;features&lt;/code&gt; ある&lt;a href=&quot;../../../../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt;かに文字列の機能名の辞書 &lt;code&gt;Tensor&lt;/code&gt; と &lt;code&gt;labels&lt;/code&gt; ある &lt;code&gt;Tensor&lt;/code&gt; かに文字列のラベル名の辞書 &lt;code&gt;Tensor&lt;/code&gt; 。 &lt;code&gt;features&lt;/code&gt; と &lt;code&gt;labels&lt;/code&gt; 両方 &lt;code&gt;model_fn&lt;/code&gt; によって使用されます。これらは、入力からの &lt;code&gt;model_fn&lt;/code&gt; の期待を満たす必要があります。</target>
        </trans-unit>
        <trans-unit id="739bd9cdb1fb88a7b66b94d22df1d52ad8b906ef" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_fn&lt;/code&gt;&lt;/b&gt;: A function that constructs the input data for evaluation. See &lt;a href=&quot;https://tensorflow.org/guide/premade_estimators#create_input_functions&quot;&gt;Premade Estimators&lt;/a&gt; for more information. The function should construct and return one of the following: * A &lt;a href=&quot;../../../data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; object: Outputs of &lt;code&gt;Dataset&lt;/code&gt; object must be a tuple &lt;code&gt;(features, labels)&lt;/code&gt; with same constraints as below. * A tuple &lt;code&gt;(features, labels)&lt;/code&gt;: Where &lt;code&gt;features&lt;/code&gt; is a &lt;a href=&quot;../../../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt; or a dictionary of string feature name to &lt;code&gt;Tensor&lt;/code&gt; and &lt;code&gt;labels&lt;/code&gt; is a &lt;code&gt;Tensor&lt;/code&gt; or a dictionary of string label name to &lt;code&gt;Tensor&lt;/code&gt;. Both &lt;code&gt;features&lt;/code&gt; and &lt;code&gt;labels&lt;/code&gt; are consumed by &lt;code&gt;model_fn&lt;/code&gt;. They should satisfy the expectation of &lt;code&gt;model_fn&lt;/code&gt; from inputs.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_fn&lt;/code&gt; &lt;/b&gt;：評価用の入力データを構成する関数。詳細については、&lt;a href=&quot;https://tensorflow.org/guide/premade_estimators#create_input_functions&quot;&gt;既製の推定量&lt;/a&gt;を参照してください。関数は、次のいずれかを作成して返す必要があります。*&lt;a href=&quot;../../../data/dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt;オブジェクト： &lt;code&gt;Dataset&lt;/code&gt; オブジェクトの出力は、以下と同じ制約を持つタプル &lt;code&gt;(features, labels)&lt;/code&gt; である必要があります。 *タプル &lt;code&gt;(features, labels)&lt;/code&gt; ： &lt;code&gt;features&lt;/code&gt; ある&lt;a href=&quot;../../../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt;かに文字列の機能名の辞書 &lt;code&gt;Tensor&lt;/code&gt; と &lt;code&gt;labels&lt;/code&gt; ある &lt;code&gt;Tensor&lt;/code&gt; かに文字列のラベル名の辞書 &lt;code&gt;Tensor&lt;/code&gt; 。 &lt;code&gt;features&lt;/code&gt; と &lt;code&gt;labels&lt;/code&gt; 両方 &lt;code&gt;model_fn&lt;/code&gt; によって使用されます。これらは、入力からの &lt;code&gt;model_fn&lt;/code&gt; の期待を満たす必要があります。</target>
        </trans-unit>
        <trans-unit id="ae61723992cd7239b1cd3199514cab3156deed42" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_fn&lt;/code&gt;&lt;/b&gt;: A function that constructs the input data for evaluation. See &lt;a href=&quot;https://tensorflow.org/guide/premade_estimators#create_input_functions&quot;&gt;Premade Estimators&lt;/a&gt; for more information. The function should construct and return one of the following: * A &lt;a href=&quot;../../data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; object: Outputs of &lt;code&gt;Dataset&lt;/code&gt; object must be a tuple &lt;code&gt;(features, labels)&lt;/code&gt; with same constraints as below. * A tuple &lt;code&gt;(features, labels)&lt;/code&gt;: Where &lt;code&gt;features&lt;/code&gt; is a &lt;a href=&quot;../../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt; or a dictionary of string feature name to &lt;code&gt;Tensor&lt;/code&gt; and &lt;code&gt;labels&lt;/code&gt; is a &lt;code&gt;Tensor&lt;/code&gt; or a dictionary of string label name to &lt;code&gt;Tensor&lt;/code&gt;. Both &lt;code&gt;features&lt;/code&gt; and &lt;code&gt;labels&lt;/code&gt; are consumed by &lt;code&gt;model_fn&lt;/code&gt;. They should satisfy the expectation of &lt;code&gt;model_fn&lt;/code&gt; from inputs.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_fn&lt;/code&gt; &lt;/b&gt;：評価用の入力データを構成する関数。詳細については、&lt;a href=&quot;https://tensorflow.org/guide/premade_estimators#create_input_functions&quot;&gt;既製の推定量&lt;/a&gt;を参照してください。関数は、次のいずれかを作成して返す必要があります。*&lt;a href=&quot;../../data/dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt;オブジェクト： &lt;code&gt;Dataset&lt;/code&gt; オブジェクトの出力は、以下と同じ制約を持つタプル &lt;code&gt;(features, labels)&lt;/code&gt; である必要があります。 *タプル &lt;code&gt;(features, labels)&lt;/code&gt; ： &lt;code&gt;features&lt;/code&gt; ある&lt;a href=&quot;../../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt;かに文字列の機能名の辞書 &lt;code&gt;Tensor&lt;/code&gt; と &lt;code&gt;labels&lt;/code&gt; ある &lt;code&gt;Tensor&lt;/code&gt; かに文字列のラベル名の辞書 &lt;code&gt;Tensor&lt;/code&gt; 。 &lt;code&gt;features&lt;/code&gt; と &lt;code&gt;labels&lt;/code&gt; 両方 &lt;code&gt;model_fn&lt;/code&gt; によって使用されます。これらは、入力からの &lt;code&gt;model_fn&lt;/code&gt; の期待を満たす必要があります。</target>
        </trans-unit>
        <trans-unit id="13848c5a5207575ec6c5dfaf0a039c079ecee1e3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_fn&lt;/code&gt;&lt;/b&gt;: A function that constructs the input data for evaluation. See &lt;a href=&quot;https://tensorflow.org/guide/premade_estimators#create_input_functions&quot;&gt;Premade Estimators&lt;/a&gt; for more information. The function should construct and return one of the following: * A &lt;a href=&quot;../data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; object: Outputs of &lt;code&gt;Dataset&lt;/code&gt; object must be a tuple &lt;code&gt;(features, labels)&lt;/code&gt; with same constraints as below. * A tuple &lt;code&gt;(features, labels)&lt;/code&gt;: Where &lt;code&gt;features&lt;/code&gt; is a &lt;a href=&quot;../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt; or a dictionary of string feature name to &lt;code&gt;Tensor&lt;/code&gt; and &lt;code&gt;labels&lt;/code&gt; is a &lt;code&gt;Tensor&lt;/code&gt; or a dictionary of string label name to &lt;code&gt;Tensor&lt;/code&gt;. Both &lt;code&gt;features&lt;/code&gt; and &lt;code&gt;labels&lt;/code&gt; are consumed by &lt;code&gt;model_fn&lt;/code&gt;. They should satisfy the expectation of &lt;code&gt;model_fn&lt;/code&gt; from inputs.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_fn&lt;/code&gt; &lt;/b&gt;：評価用の入力データを構成する関数。詳細については、&lt;a href=&quot;https://tensorflow.org/guide/premade_estimators#create_input_functions&quot;&gt;既製の推定量&lt;/a&gt;を参照してください。関数は、次のいずれかを作成して返す必要があります。*&lt;a href=&quot;../data/dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt;オブジェクト： &lt;code&gt;Dataset&lt;/code&gt; オブジェクトの出力は、以下と同じ制約を持つタプル &lt;code&gt;(features, labels)&lt;/code&gt; である必要があります。 *タプル &lt;code&gt;(features, labels)&lt;/code&gt; ： &lt;code&gt;features&lt;/code&gt; ある&lt;a href=&quot;../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt;かに文字列の機能名の辞書 &lt;code&gt;Tensor&lt;/code&gt; と &lt;code&gt;labels&lt;/code&gt; ある &lt;code&gt;Tensor&lt;/code&gt; かに文字列のラベル名の辞書 &lt;code&gt;Tensor&lt;/code&gt; 。 &lt;code&gt;features&lt;/code&gt; と &lt;code&gt;labels&lt;/code&gt; 両方 &lt;code&gt;model_fn&lt;/code&gt; によって使用されます。これらは、入力からの &lt;code&gt;model_fn&lt;/code&gt; の期待を満たす必要があります。</target>
        </trans-unit>
        <trans-unit id="022924c93d837cdbbd08e03f27d01ee6222aa85e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_fn&lt;/code&gt;&lt;/b&gt;: A function that provides input data for predicting as minibatches. See &lt;a href=&quot;https://tensorflow.org/guide/premade_estimators#create_input_functions&quot;&gt;Premade Estimators&lt;/a&gt; for more information. The function should construct and return one of the following:</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_fn&lt;/code&gt; &lt;/b&gt;：&lt;b&gt;ミニバッチ&lt;/b&gt;として予測するための入力データを提供する関数。詳細については、&lt;a href=&quot;https://tensorflow.org/guide/premade_estimators#create_input_functions&quot;&gt;既製の推定量&lt;/a&gt;を参照してください。関数は次のいずれかを作成して返す必要があります。</target>
        </trans-unit>
        <trans-unit id="784b25c0ca3c213f2c87a9a9f1ebef1fcebe98bf" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_fn&lt;/code&gt;&lt;/b&gt;: A function that provides input data for training as minibatches. See &lt;a href=&quot;https://tensorflow.org/guide/premade_estimators#create_input_functions&quot;&gt;Premade Estimators&lt;/a&gt; for more information. The function should construct and return one of the following:</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_fn&lt;/code&gt; &lt;/b&gt;：&lt;b&gt;ミニバッチ&lt;/b&gt;としてトレーニングするための入力データを提供する関数。詳細については、&lt;a href=&quot;https://tensorflow.org/guide/premade_estimators#create_input_functions&quot;&gt;既製の推定量&lt;/a&gt;を参照してください。関数は次のいずれかを作成して返す必要があります。</target>
        </trans-unit>
        <trans-unit id="6f42811bd54a70d77f777f0028f1761bc80affea" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_fn&lt;/code&gt;&lt;/b&gt;: Equivalent to the &lt;code&gt;input_fn&lt;/code&gt; arg to &lt;code&gt;estimator.evaluate&lt;/code&gt;. A function that constructs the input data for evaluation. See &lt;a href=&quot;https://tensorflow.org/guide/premade_estimators#create_input_functions&quot;&gt;Creating input functions&lt;/a&gt; for more information. The function should construct and return one of the following:</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_fn&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;estimator.evaluate&lt;/code&gt; の &lt;code&gt;input_fn&lt;/code&gt; 引数に相当します。評価用の入力データを構成する関数。詳しくは、&lt;a href=&quot;https://tensorflow.org/guide/premade_estimators#create_input_functions&quot;&gt;入力関数の作成を&lt;/a&gt;参照してください。関数は次のいずれかを作成して返す必要があります。</target>
        </trans-unit>
        <trans-unit id="b218752d351b9431ae1edc917ce2df921c0407f6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_fn&lt;/code&gt;&lt;/b&gt;: Input points. See &lt;a href=&quot;../../../../estimator/estimator#evaluate&quot;&gt;&lt;code&gt;tf.estimator.Estimator.evaluate&lt;/code&gt;&lt;/a&gt;. Only one batch is retrieved.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_fn&lt;/code&gt; &lt;/b&gt;：入力ポイント。&lt;a href=&quot;../../../../estimator/estimator#evaluate&quot;&gt; &lt;code&gt;tf.estimator.Estimator.evaluate&lt;/code&gt; を&lt;/a&gt;参照してください。取得されるバッチは1つだけです。</target>
        </trans-unit>
        <trans-unit id="7684ad4d77d5378a41ff4fbd26aa516450490f25" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_fn&lt;/code&gt;&lt;/b&gt;: Input points. See &lt;a href=&quot;../../../../estimator/estimator#predict&quot;&gt;&lt;code&gt;tf.estimator.Estimator.predict&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_fn&lt;/code&gt; &lt;/b&gt;：入力ポイント。&lt;a href=&quot;../../../../estimator/estimator#predict&quot;&gt; &lt;code&gt;tf.estimator.Estimator.predict&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="fd6421a9ff34540689010af9abb952834a4bfb4a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_fn&lt;/code&gt;&lt;/b&gt;: a generator function that yields input data as a list or tuple, which will be used to execute the converted signature to generate TRT engines. Example:</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_fn&lt;/code&gt; &lt;/b&gt;：リストまたはタプルとして入力データを生成するジェネレーター関数。これを使用して、変換された署名を実行し、TRTエンジンを生成します。例：</target>
        </trans-unit>
        <trans-unit id="6d9608230e9a974eb5cea193407876271dfab84b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_gen&lt;/code&gt;&lt;/b&gt;: an input generator that can be used to generate input samples for the model. This must be a callable object that returns an object that supports the &lt;code&gt;iter()&lt;/code&gt; protocol (e.g. a generator function). The elements generated must have same type and shape as inputs to the model.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_gen&lt;/code&gt; &lt;/b&gt;：モデルの入力サンプルを生成するために使用できる入力ジェネレーター。これは、 &lt;code&gt;iter()&lt;/code&gt; プロトコルをサポートするオブジェクト（例えば、ジェネレーター関数）を返す呼び出し可能なオブジェクトでなければなりません。生成される要素は、モデルへの入力と同じタイプと形状でなければなりません。</target>
        </trans-unit>
        <trans-unit id="3732972b824baca8e10c1095d0329a604a9ad99e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_graph&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;GraphDef&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_graph&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;GraphDef&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e1909fc71d81a29da1c66dd4bc201ae2e50b776e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_graph&lt;/code&gt;&lt;/b&gt;: Model to analyze and prune.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_graph&lt;/code&gt; &lt;/b&gt;：分析およびプルーニングするモデル。</target>
        </trans-unit>
        <trans-unit id="bfc19a2bd207b8d5ac5f7ae090d8469be8d9ba99" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_graph_def&lt;/code&gt;&lt;/b&gt;: GraphDef object holding the network.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_graph_def&lt;/code&gt; &lt;/b&gt;：ネットワークを保持するGraphDefオブジェクト。</target>
        </trans-unit>
        <trans-unit id="a820d2315863b5e9420faa0a08eb297c0a511e61" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_index&lt;/code&gt;&lt;/b&gt;: Tensor index of input to set. This value can be gotten from the 'index' field in get_input_details.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_index&lt;/code&gt; &lt;/b&gt;：設定する入力のテンソルインデックス。この値は、get_input_detailsの「index」フィールドから取得できます。</target>
        </trans-unit>
        <trans-unit id="36c03680bcd8a8b7d8a9e14e7358fb4e56668f29" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_iterator&lt;/code&gt;&lt;/b&gt;: (Optional) input iterator from which the inputs are taken.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_iterator&lt;/code&gt; &lt;/b&gt;：（オプション）入力を取得する入力イテレーター。</target>
        </trans-unit>
        <trans-unit id="d13f270ac4df1a89d8a6e7c889559c1c7c42f131" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_keep_prob&lt;/code&gt;&lt;/b&gt;: unit Tensor or float between 0 and 1, input keep probability; if it is constant and 1, no input dropout will be added.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_keep_prob&lt;/code&gt; &lt;/b&gt;：ユニットTensorまたは0と1の間の浮動小数点、入力保持確率。一定で1の場合、入力ドロップアウトは追加されません。</target>
        </trans-unit>
        <trans-unit id="485b55b141c76d3ea8b9fb11d55e70fb6da64736" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_layer_partitioner&lt;/code&gt;&lt;/b&gt;: Partitioner for input layer.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_layer_partitioner&lt;/code&gt; &lt;/b&gt;：入力レイヤーのパーティ&lt;b&gt;ショナー&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="4d9b8f095e69646d2503235d3c36df7eab2abc91" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_length&lt;/code&gt;&lt;/b&gt;: An integer or a 1-D Tensor, depending on whether the time dimension is fixed-length or not. In case of variable length input, it is used for masking in case there's no mask specified.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_length&lt;/code&gt; &lt;/b&gt;：時間次元が固定長かどうかに応じて、整数または1次元テンソル。可変長入力の場合、マスクが指定されていない場合のマスキングに使用されます。</target>
        </trans-unit>
        <trans-unit id="691257a501109b400734ddead43d9160937dad3e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_length&lt;/code&gt;&lt;/b&gt;: Length of input sequences, when it is constant. This argument is required if you are going to connect &lt;code&gt;Flatten&lt;/code&gt; then &lt;code&gt;Dense&lt;/code&gt; layers upstream (without it, the shape of the dense outputs cannot be computed).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_length&lt;/code&gt; &lt;/b&gt;：一定の場合の入力シーケンスの長さ。この引数は、 &lt;code&gt;Flatten&lt;/code&gt; と &lt;code&gt;Dense&lt;/code&gt; のレイヤーを上流に接続する場合に必要です（これがないと、密な出力の形状を計算できません）。</target>
        </trans-unit>
        <trans-unit id="b34f0c8120a3532ca46f8217ab4a7215051eb9a7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_length&lt;/code&gt;&lt;/b&gt;: tensor &lt;code&gt;(samples, )&lt;/code&gt; containing the sequence length for each batch item in &lt;code&gt;y_pred&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_length&lt;/code&gt; &lt;/b&gt;：テンソル &lt;code&gt;(samples, )&lt;/code&gt; の各バッチ項目の系列長を含む &lt;code&gt;y_pred&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6a24420a1ec1fd01a361557df84d337cd17f2849" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_length&lt;/code&gt;&lt;/b&gt;: tensor &lt;code&gt;(samples, 1)&lt;/code&gt; containing the sequence length for each batch item in &lt;code&gt;y_pred&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_length&lt;/code&gt; &lt;/b&gt;：テンソル &lt;code&gt;(samples, 1)&lt;/code&gt; の各バッチ項目の系列長を含む &lt;code&gt;y_pred&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="30aac239a050e26bc1fa2189daf8a8cea76a371a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_map&lt;/code&gt;&lt;/b&gt;: A dictionary mapping input names (as strings) in &lt;code&gt;graph_def&lt;/code&gt; to &lt;code&gt;Tensor&lt;/code&gt; objects. The values of the named input tensors in the imported graph will be re-mapped to the respective &lt;code&gt;Tensor&lt;/code&gt; values.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_map&lt;/code&gt; &lt;/b&gt;：（文字列など）辞書マッピング入力名に &lt;code&gt;graph_def&lt;/code&gt; の &lt;code&gt;Tensor&lt;/code&gt; オブジェクト。インポートされたグラフの名前付き入力テンソルの値は、それぞれの &lt;code&gt;Tensor&lt;/code&gt; 値に再マッピングされます。</target>
        </trans-unit>
        <trans-unit id="a714334e0c62629f11218f46e1b4ca8c84dde84f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_max&lt;/code&gt;&lt;/b&gt;: If range_given=True, the maximum input value that needs to be represented in the quantized representation. If axis is specified, this should be a vector of maximum values for each slice along axis.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_max&lt;/code&gt; &lt;/b&gt;：range_given = Trueの場合、量子化表現で表す必要がある最大入力値。軸が指定されている場合、これは軸に沿った各スライスの最大値のベクトルでなければなりません。</target>
        </trans-unit>
        <trans-unit id="27a694387cf0bca6ce0d2bd30434931cb2aa338a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_maxes&lt;/code&gt;&lt;/b&gt;: A list with the same length as &lt;code&gt;values&lt;/code&gt; of &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;float32&lt;/code&gt;. The maximum scalar values for each of the input tensors.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_maxes&lt;/code&gt; &lt;/b&gt;：同じ長さのリスト &lt;code&gt;values&lt;/code&gt; の &lt;code&gt;Tensor&lt;/code&gt; 型とオブジェクト &lt;code&gt;float32&lt;/code&gt; 。各入力テンソルの最大スカラー値。</target>
        </trans-unit>
        <trans-unit id="50e711d594bb1ea87fd2db39733c13b0fca98be8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_min&lt;/code&gt;&lt;/b&gt;: If range_given=True, the minimum input value, that needs to be represented in the quantized representation. If axis is specified, this should be a vector of minimum values for each slice along axis.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_min&lt;/code&gt; &lt;/b&gt;：range_given = Trueの場合、量子化表現で表す必要のある最小入力値。軸が指定されている場合、これは軸に沿った各スライスの最小値のベクトルでなければなりません。</target>
        </trans-unit>
        <trans-unit id="b311abcee4e6827c8d7a71e154e696b816657519" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_mins&lt;/code&gt;&lt;/b&gt;: A list with the same length as &lt;code&gt;values&lt;/code&gt; of &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;float32&lt;/code&gt;. The minimum scalar values for each of the input tensors.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_mins&lt;/code&gt; &lt;/b&gt;：同じ長さのリスト &lt;code&gt;values&lt;/code&gt; の &lt;code&gt;Tensor&lt;/code&gt; 型とオブジェクト &lt;code&gt;float32&lt;/code&gt; 。各入力テンソルの最小スカラー値。</target>
        </trans-unit>
        <trans-unit id="5fe893884488ded5c54b01db3b6b818ff58920c5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_output_dtype&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;dtype&lt;/code&gt; for input/output.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_output_dtype&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;dtype&lt;/code&gt; 用の dtype。</target>
        </trans-unit>
        <trans-unit id="5da816d5368c68a746ca91afcd88255cc7f86f97" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_partition_dims&lt;/code&gt;&lt;/b&gt;: A nested list to describe the partition dims for all the tensors from input_fn(). The structure of input_partition_dims must match the structure of &lt;code&gt;features&lt;/code&gt; and &lt;code&gt;labels&lt;/code&gt; from input_fn(). The total number of partitions must match &lt;code&gt;num_cores_per_replica&lt;/code&gt;. For example, if input_fn() returns two tensors: images with shape [N, H, W, C] and labels [N]. input_partition_dims = [[1, 2, 2, 1], None] will split the images to 4 pieces and feed into 4 TPU cores. labels tensor are directly broadcasted to all the TPU cores since the partition dims is &lt;code&gt;None&lt;/code&gt;. Current limitations: This feature is only supported with the PER_HOST_V2 input mode.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_partition_dims&lt;/code&gt; &lt;/b&gt;：input_fn（）からのすべてのテンソルのパーティション&lt;b&gt; dims&lt;/b&gt;を説明するネストされたリスト。 input_partition_dimsの構造は、input_fn（）からの &lt;code&gt;features&lt;/code&gt; と &lt;code&gt;labels&lt;/code&gt; 構造と一致する必要があります。パーティションの総数は &lt;code&gt;num_cores_per_replica&lt;/code&gt; と一致する必要があります。たとえば、input_fn（）が2つのテンソルを返す場合：形状が[N、H、W、C]の画像とラベル[N]。 input_partition_dims = [[1、2、2、1]、None]は画像を4つに分割し、4つのTPUコアにフィードします。パーティションdimsが &lt;code&gt;None&lt;/code&gt; であるため、ラベルテンソルはすべてのTPUコアに直接ブロードキャストされます。現在の制限：この機能は、PER_HOST_V2入力モードでのみサポートされています。</target>
        </trans-unit>
        <trans-unit id="632d13b0adc014f7c532006ffd221e6d970c1446" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_pipeline_id&lt;/code&gt;&lt;/b&gt;: the current input pipeline id, should be an int in [0,&lt;code&gt;num_input_pipelines&lt;/code&gt;).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_pipeline_id&lt;/code&gt; &lt;/b&gt;：現在の入力パイプラインID。[0、 &lt;code&gt;num_input_pipelines&lt;/code&gt; ]のintである必要があります。</target>
        </trans-unit>
        <trans-unit id="305816db5a8ed9d20ed37b153b31a65d9df41ca6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_receiver_fn_map&lt;/code&gt;&lt;/b&gt;: dict of &lt;a href=&quot;../../../../estimator/modekeys&quot;&gt;&lt;code&gt;tf.estimator.ModeKeys&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;input_receiver_fn&lt;/code&gt; mappings, where the &lt;code&gt;input_receiver_fn&lt;/code&gt; is a function that takes no arguments and returns the appropriate subclass of &lt;code&gt;InputReceiver&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_receiver_fn_map&lt;/code&gt; &lt;/b&gt;：&lt;a href=&quot;../../../../estimator/modekeys&quot;&gt; &lt;code&gt;tf.estimator.ModeKeys&lt;/code&gt; &lt;/a&gt;から &lt;code&gt;input_receiver_fn&lt;/code&gt; へのマッピングの辞書。ここで、 &lt;code&gt;input_receiver_fn&lt;/code&gt; は、引数を取らず、 &lt;code&gt;InputReceiver&lt;/code&gt; の適切なサブクラスを返す関数です。</target>
        </trans-unit>
        <trans-unit id="680fe0d2c2eb0ae75012f260ff8c2cfffedb6939" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_receiver_fn_map&lt;/code&gt;&lt;/b&gt;: dict of &lt;a href=&quot;../../../estimator/modekeys&quot;&gt;&lt;code&gt;tf.estimator.ModeKeys&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;input_receiver_fn&lt;/code&gt; mappings, where the &lt;code&gt;input_receiver_fn&lt;/code&gt; is a function that takes no arguments and returns the appropriate subclass of &lt;code&gt;InputReceiver&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_receiver_fn_map&lt;/code&gt; &lt;/b&gt;：&lt;a href=&quot;../../../estimator/modekeys&quot;&gt; &lt;code&gt;tf.estimator.ModeKeys&lt;/code&gt; &lt;/a&gt;から &lt;code&gt;input_receiver_fn&lt;/code&gt; へのマッピングの辞書。ここで、 &lt;code&gt;input_receiver_fn&lt;/code&gt; は、引数を取らず、 &lt;code&gt;InputReceiver&lt;/code&gt; の適切なサブクラスを返す関数です。</target>
        </trans-unit>
        <trans-unit id="e66c2f9d309fae4e482c9f55bac3521768832ffc" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_receiver_fn_map&lt;/code&gt;&lt;/b&gt;: dict of &lt;a href=&quot;../modekeys&quot;&gt;&lt;code&gt;tf.estimator.ModeKeys&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;input_receiver_fn&lt;/code&gt; mappings, where the &lt;code&gt;input_receiver_fn&lt;/code&gt; is a function that takes no arguments and returns the appropriate subclass of &lt;code&gt;InputReceiver&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_receiver_fn_map&lt;/code&gt; &lt;/b&gt;：&lt;a href=&quot;../modekeys&quot;&gt; &lt;code&gt;tf.estimator.ModeKeys&lt;/code&gt; &lt;/a&gt;から &lt;code&gt;input_receiver_fn&lt;/code&gt; へのマッピングの辞書。ここで、 &lt;code&gt;input_receiver_fn&lt;/code&gt; は、引数を取らず、 &lt;code&gt;InputReceiver&lt;/code&gt; の適切なサブクラスを返す関数です。</target>
        </trans-unit>
        <trans-unit id="9ba5fd02d86b45424dcaa89e9d34e4114a0a3aea" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_receiver_fn_map&lt;/code&gt;&lt;/b&gt;: dict of &lt;a href=&quot;modekeys&quot;&gt;&lt;code&gt;tf.estimator.ModeKeys&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;input_receiver_fn&lt;/code&gt; mappings, where the &lt;code&gt;input_receiver_fn&lt;/code&gt; is a function that takes no arguments and returns the appropriate subclass of &lt;code&gt;InputReceiver&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_receiver_fn_map&lt;/code&gt; &lt;/b&gt;：&lt;a href=&quot;modekeys&quot;&gt; &lt;code&gt;tf.estimator.ModeKeys&lt;/code&gt; &lt;/a&gt;から &lt;code&gt;input_receiver_fn&lt;/code&gt; へのマッピングの辞書。ここで、 &lt;code&gt;input_receiver_fn&lt;/code&gt; は、引数を取らず、 &lt;code&gt;InputReceiver&lt;/code&gt; の適切なサブクラスを返す関数です。</target>
        </trans-unit>
        <trans-unit id="2afaef9168ac2ff1e3eb062404de36cef87bf243" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_saved_model_dir&lt;/code&gt;&lt;/b&gt;: the directory to load the SavedModel which contains the input graph to transforms. Used only when input_graph_def is None.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_saved_model_dir&lt;/code&gt; &lt;/b&gt;：変換する入力グラフを含むSavedModelをロードするディレクトリ。input_graph_defがNoneの場合にのみ使用されます。</target>
        </trans-unit>
        <trans-unit id="f28f84a5dfc3bf13bd3ddc686a34e96a34a2502d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_saved_model_signature_key&lt;/code&gt;&lt;/b&gt;: the key of the signature to optimize the graph for.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_saved_model_signature_key&lt;/code&gt; &lt;/b&gt;：グラフを最適化するための署名のキー。</target>
        </trans-unit>
        <trans-unit id="0364abac561a2e42624026172069a7e455a74d55" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_saved_model_tags&lt;/code&gt;&lt;/b&gt;: list of tags to load the SavedModel.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_saved_model_tags&lt;/code&gt; &lt;/b&gt;：&lt;b&gt; SavedModel&lt;/b&gt;をロードするタグのリスト。</target>
        </trans-unit>
        <trans-unit id="d1f7b4a26baf7af0fe118a051c9b3b7528f2f91a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_shape&lt;/code&gt;&lt;/b&gt;: Instance of &lt;code&gt;TensorShape&lt;/code&gt;, or list of instances of &lt;code&gt;TensorShape&lt;/code&gt; if the layer expects a list of inputs (one instance per input).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_shape&lt;/code&gt; &lt;/b&gt;：のインスタンス &lt;code&gt;TensorShape&lt;/code&gt; 、またはインスタンスのリスト &lt;code&gt;TensorShape&lt;/code&gt; 層は、入力（入力ごとに1つのインスタンス）のリストを想定した場合。</target>
        </trans-unit>
        <trans-unit id="c890c418ed39a6a4e37af6ea07b0f13bd9e75cd8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_shape&lt;/code&gt;&lt;/b&gt;: Shape tuple (not including the batch axis), or &lt;code&gt;TensorShape&lt;/code&gt; instance (not including the batch axis).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_shape&lt;/code&gt; &lt;/b&gt;：Shapeタプル（バッチ軸を含まない）、または &lt;code&gt;TensorShape&lt;/code&gt; インスタンス（バッチ軸を含まない）。</target>
        </trans-unit>
        <trans-unit id="1e141f7991bfe79ed4506147e66a4f1907134776" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_shape&lt;/code&gt;&lt;/b&gt;: Shape tuple (tuple of integers) or list of shape tuples (one per output tensor of the layer). Shape tuples can include None for free dimensions, instead of an integer.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_shape&lt;/code&gt; &lt;/b&gt;：形状タプル（整数のタプル）または形状タプルのリスト（レイヤーの出力テンソルごとに1つ）。形状タプルには、整数の代わりに、自由次元のNoneを含めることができます。</target>
        </trans-unit>
        <trans-unit id="aeed6da3d16bb0b827db8ce67e88f8d090d9550b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_shape&lt;/code&gt;&lt;/b&gt;: int32 Tensor of shape [N].</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_shape&lt;/code&gt; &lt;/b&gt;：int32形状のテンソル[N]。</target>
        </trans-unit>
        <trans-unit id="8f9ce92abffa5a2c65d318c687bd189c57da7935" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_shapes&lt;/code&gt;&lt;/b&gt;: Dict of strings representing input tensor names to list of integers representing input shapes (e.g., {&quot;foo&quot; : [1, 16, 16, 3]}). Automatically determined when input shapes is None (e.g., {&quot;foo&quot; : None}). (default None)</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_shapes&lt;/code&gt; &lt;/b&gt;：入力テンソル名を表す文字列のdictから、入力形状を表す整数のリスト（たとえば、{&quot;foo&quot;：[1、16、16、3]}）。入力形状がNoneのときに自動的に決定されます（例：{&quot;foo&quot;：None}）。（デフォルトはなし）</target>
        </trans-unit>
        <trans-unit id="8695c12ba7bbb70a1d87f4e924e34bc4f046c24e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_shard_axes&lt;/code&gt;&lt;/b&gt;: A list of dimensions along which to shard &lt;code&gt;inputs&lt;/code&gt;, or &lt;code&gt;None&lt;/code&gt;. &lt;code&gt;None&lt;/code&gt; means &quot;shard all inputs along dimension 0&quot;. If not &lt;code&gt;None&lt;/code&gt;, there must be one dimension per input.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_shard_axes&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;inputs&lt;/code&gt; を&lt;b&gt;分割する&lt;/b&gt;ディメンションのリスト、または &lt;code&gt;None&lt;/code&gt; 。 &lt;code&gt;None&lt;/code&gt; は、「すべての入力を次元0に沿って分割する」ことを意味します。 &lt;code&gt;None&lt;/code&gt; でない場合、入力ごとに1つの次元が必要です。</target>
        </trans-unit>
        <trans-unit id="0f57a5c5d1c367fc5773492e4dc8cf0a0026e313" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_signature&lt;/code&gt;&lt;/b&gt;: A possibly nested sequence of &lt;a href=&quot;../../../../tensorspec&quot;&gt;&lt;code&gt;tf.TensorSpec&lt;/code&gt;&lt;/a&gt; objects, used to specify the expected model inputs. See &lt;a href=&quot;../../../../function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_signature&lt;/code&gt; &lt;/b&gt;：予想されるモデル入力を指定するために使用される、ネストされている可能性のある&lt;a href=&quot;../../../../tensorspec&quot;&gt; &lt;code&gt;tf.TensorSpec&lt;/code&gt; &lt;/a&gt;オブジェクトのシーケンス。詳細については、&lt;a href=&quot;../../../../function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="84cec33b4c2bb6cab27c7c5a79276f18265b3686" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_signature&lt;/code&gt;&lt;/b&gt;: A possibly nested sequence of &lt;a href=&quot;tensorspec&quot;&gt;&lt;code&gt;tf.TensorSpec&lt;/code&gt;&lt;/a&gt; objects specifying the shapes and dtypes of the Tensors that will be supplied to this function. If &lt;code&gt;None&lt;/code&gt;, a separate function is instantiated for each inferred input signature. If input_signature is specified, every input to &lt;code&gt;func&lt;/code&gt; must be a &lt;code&gt;Tensor&lt;/code&gt;, and &lt;code&gt;func&lt;/code&gt; cannot accept &lt;code&gt;**kwargs&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_signature&lt;/code&gt; &lt;/b&gt;：ネストされている可能性のある&lt;a href=&quot;tensorspec&quot;&gt; &lt;code&gt;tf.TensorSpec&lt;/code&gt; &lt;/a&gt;オブジェクトのシーケンス。この関数に提供されるTensorの形状とdtypeを指定します。 &lt;code&gt;None&lt;/code&gt; の場合、推論された入力シグネチャごとに個別の関数がインスタンス化されます。input_signatureが指定されている場合、 &lt;code&gt;func&lt;/code&gt; へのすべての入力は &lt;code&gt;Tensor&lt;/code&gt; でなければならず、 &lt;code&gt;func&lt;/code&gt; は &lt;code&gt;**kwargs&lt;/code&gt; を受け入れることができません。</target>
        </trans-unit>
        <trans-unit id="56227106d64f6d129a2143bd896d67bfa8d473fd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_signature&lt;/code&gt;&lt;/b&gt;: Single TensorSpec or nested structure of TensorSpec objects, describing a candidate input for the layer.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_signature&lt;/code&gt; &lt;/b&gt;：レイヤーの候補入力を記述する単一のTensorSpecまたはTensorSpecオブジェクトのネストされた構造。</target>
        </trans-unit>
        <trans-unit id="985f561c246987714c1298afff78cc033ded944b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_size&lt;/code&gt;&lt;/b&gt;: (optional) (possibly nested tuple of) &lt;code&gt;TensorShape&lt;/code&gt; objects containing the depth(s) of the input tensors expected to be passed in to the &lt;code&gt;DropoutWrapper&lt;/code&gt;. Required and used &lt;strong&gt;iff&lt;/strong&gt;&lt;code&gt;variational_recurrent = True&lt;/code&gt; and &lt;code&gt;input_keep_prob &amp;lt; 1&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_size&lt;/code&gt; &lt;/b&gt;：（オプション）（の可能性のネストされたタプル） &lt;code&gt;TensorShape&lt;/code&gt; は、入力されたテンソルの深さ（S）を含有することに渡されることが期待オブジェクト &lt;code&gt;DropoutWrapper&lt;/code&gt; 。 &lt;code&gt;input_keep_prob &amp;lt; 1&lt;/code&gt; &lt;code&gt;variational_recurrent = True&lt;/code&gt; かつ input_keep_prob &amp;lt;1の&lt;strong&gt;場合に&lt;/strong&gt;必要で、使用されます。</target>
        </trans-unit>
        <trans-unit id="85607e6bc93b560d015e9784a488ff1f7375def6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_sizes&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. An integer vector representing the shape of &lt;code&gt;input&lt;/code&gt;, based on &lt;code&gt;data_format&lt;/code&gt;. For example, if &lt;code&gt;data_format&lt;/code&gt; is 'NHWC' then &lt;code&gt;input&lt;/code&gt; is a 4-D &lt;code&gt;[batch, height, width, channels]&lt;/code&gt; tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_sizes&lt;/code&gt; &lt;/b&gt;：タイプ &lt;code&gt;int32&lt;/code&gt; の &lt;code&gt;Tensor&lt;/code&gt; 。 &lt;code&gt;data_format&lt;/code&gt; に基づく、 &lt;code&gt;input&lt;/code&gt; の形状を表す整数ベクトル。たとえば、 &lt;code&gt;data_format&lt;/code&gt; が 'NHWC'の場合、 &lt;code&gt;input&lt;/code&gt; は4次元 &lt;code&gt;[batch, height, width, channels]&lt;/code&gt; テンソルです。</target>
        </trans-unit>
        <trans-unit id="e09fc92a6cf8f9b5ae9e5d4a68bcea0c2f69c109" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_sizes&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. An integer vector representing the shape of &lt;code&gt;input&lt;/code&gt;, where &lt;code&gt;input&lt;/code&gt; is a 4-D &lt;code&gt;[batch, height, width, channels]&lt;/code&gt; tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_sizes&lt;/code&gt; &lt;/b&gt;：タイプ &lt;code&gt;int32&lt;/code&gt; の &lt;code&gt;Tensor&lt;/code&gt; 。 &lt;code&gt;input&lt;/code&gt; の形状を表す整数ベクトル。ここで、 &lt;code&gt;input&lt;/code&gt; は4次元 &lt;code&gt;[batch, height, width, channels]&lt;/code&gt; テンソルです。</target>
        </trans-unit>
        <trans-unit id="2b953bf6d4371b85f0a9a7702f142844ace8007a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_spec&lt;/code&gt;&lt;/b&gt;: Optional (list of) &lt;code&gt;InputSpec&lt;/code&gt; object(s) specifying the constraints on inputs that can be accepted by the layer.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_spec&lt;/code&gt; &lt;/b&gt;：レイヤーが受け入れることができる入力の制約を指定するオプション（リスト）の &lt;code&gt;InputSpec&lt;/code&gt; オブジェクト。</target>
        </trans-unit>
        <trans-unit id="df4dfddd942a6386664453124efafe4730b44804" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_tensor&lt;/code&gt;&lt;/b&gt;: A tensor with the rows to produce. Must be at least one-dimensional. Must either have a fully-defined shape, or &lt;code&gt;element_shape&lt;/code&gt; must be defined.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_tensor&lt;/code&gt; &lt;/b&gt;：生成する行を含むテンソル。少なくとも1次元でなければなりません。完全に定義された形状であるか、 &lt;code&gt;element_shape&lt;/code&gt; が定義されている必要があります。</target>
        </trans-unit>
        <trans-unit id="5d5dd88f7c13296ed61345f856c8b1779c96396d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_tensor&lt;/code&gt;&lt;/b&gt;: Optional tensor to use as layer input instead of creating a placeholder.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_tensor&lt;/code&gt; &lt;/b&gt;：プレースホルダーを作成する代わりにレイヤー入力として使用するオプションのテンソル。</target>
        </trans-unit>
        <trans-unit id="c8388acfb4d9018a72c5d08f3c13a530f71ba23d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_tensor&lt;/code&gt;&lt;/b&gt;: The boolean tensor to reduce.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_tensor&lt;/code&gt; &lt;/b&gt;：削減するブールテンソル。</target>
        </trans-unit>
        <trans-unit id="30439345de76ec0871bca508b8870ba6c0a8ef55" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_tensor&lt;/code&gt;&lt;/b&gt;: The tensor to reduce. Should be of numeric type, &lt;code&gt;bool&lt;/code&gt;, or &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_tensor&lt;/code&gt; &lt;/b&gt;：削減するテンソル。数値型、 &lt;code&gt;bool&lt;/code&gt; 、または &lt;code&gt;string&lt;/code&gt; でなければなりません。</target>
        </trans-unit>
        <trans-unit id="77075ab827d288cd719cf73215c9631471127f16" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_tensor&lt;/code&gt;&lt;/b&gt;: The tensor to reduce. Should have numeric type.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_tensor&lt;/code&gt; &lt;/b&gt;：削減するテンソル。数値型である必要があります。</target>
        </trans-unit>
        <trans-unit id="5b9af961e425aa23c978137b7d80fef2997847ff" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_tensor&lt;/code&gt;&lt;/b&gt;: The tensor to reduce. Should have real numeric type.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_tensor&lt;/code&gt; &lt;/b&gt;：削減するテンソル。実数型でなければなりません。</target>
        </trans-unit>
        <trans-unit id="17c96882a1c67bc6c7b1f1af09956f9fd4d03e93" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_tensors&lt;/code&gt;&lt;/b&gt;: List of input tensors. Type and shape are computed using &lt;code&gt;foo.shape&lt;/code&gt; and &lt;code&gt;foo.dtype&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_tensors&lt;/code&gt; &lt;/b&gt;：入力テンソルのリスト。タイプと形状は、 &lt;code&gt;foo.shape&lt;/code&gt; と &lt;code&gt;foo.dtype&lt;/code&gt; を使用して計算されます。</target>
        </trans-unit>
        <trans-unit id="6ea11df2dd8ce66998ffd0c01653e4afc093c369" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_tensors&lt;/code&gt;&lt;/b&gt;: optional list of input tensors or InputLayer objects to build the model upon. If not provided, placeholders will be created.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_tensors&lt;/code&gt; &lt;/b&gt;：モデルを構築する入力テンソルまたはInputLayerオブジェクトのオプションのリスト。指定しない場合、プレースホルダーが作成されます。</target>
        </trans-unit>
        <trans-unit id="92245df6d7c80236ca1ff34789376ee5d3ebe6b0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_types&lt;/code&gt;&lt;/b&gt;: (Optional.) A list of &lt;code&gt;DType&lt;/code&gt;s that will be the types of the tensors that the operation consumes. By default, uses the base &lt;code&gt;DType&lt;/code&gt; of each input in &lt;code&gt;inputs&lt;/code&gt;. Operations that expect reference-typed inputs must specify &lt;code&gt;input_types&lt;/code&gt; explicitly.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_types&lt;/code&gt; &lt;/b&gt;：（オプション）操作が使用するテンソルのタイプとなる &lt;code&gt;DType&lt;/code&gt; のリスト。デフォルトでは、基地使用 &lt;code&gt;DType&lt;/code&gt; の各入力の &lt;code&gt;inputs&lt;/code&gt; 。参照型の入力を期待する操作では、 &lt;code&gt;input_types&lt;/code&gt; を明示的に指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="7d4b81a1e12a28abd8cd3325a6de04f9cc0a6717" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;input_types&lt;/code&gt;&lt;/b&gt;: List of &lt;code&gt;DType&lt;/code&gt; objects representing the types of the tensors accepted by the &lt;code&gt;Operation&lt;/code&gt;. By default uses &lt;code&gt;[x.dtype.base_dtype for x in inputs]&lt;/code&gt;. Operations that expect reference-typed inputs must specify these explicitly.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;input_types&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Operation&lt;/code&gt; 受け入れるテンソルのタイプを表す &lt;code&gt;DType&lt;/code&gt; オブジェクトのリスト。デフォルトでは &lt;code&gt;[x.dtype.base_dtype for x in inputs]&lt;/code&gt; ます。参照型の入力を期待する操作では、これらを明示的に指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="f8444bc0396754d8d165b8777bb046e8b333013b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;inputs&lt;/code&gt;&lt;/b&gt;: 3-D &lt;code&gt;float&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; sized &lt;code&gt;[max_time, batch_size, num_classes]&lt;/code&gt;. The logits.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;inputs&lt;/code&gt; &lt;/b&gt;：3D &lt;code&gt;float&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; サイズ &lt;code&gt;[max_time, batch_size, num_classes]&lt;/code&gt; 。ロジット。</target>
        </trans-unit>
        <trans-unit id="b30955e1e3f30255ad0c27063286cf7a68e9a837" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;inputs&lt;/code&gt;&lt;/b&gt;: 3-D &lt;code&gt;float&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt;, size &lt;code&gt;[max_time x batch_size x num_classes]&lt;/code&gt;. The logits.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;inputs&lt;/code&gt; &lt;/b&gt;：3次元 &lt;code&gt;float&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; 、サイズ &lt;code&gt;[max_time x batch_size x num_classes]&lt;/code&gt; 。ロジット。</target>
        </trans-unit>
        <trans-unit id="149a7f7675ab7216f1de726faa8dcd1fa90b9cb5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;inputs&lt;/code&gt;&lt;/b&gt;: 3-D &lt;code&gt;float&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt;, size &lt;code&gt;[max_time, batch_size, num_classes]&lt;/code&gt;. The logits.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;inputs&lt;/code&gt; &lt;/b&gt;：3次元 &lt;code&gt;float&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; 、サイズ &lt;code&gt;[max_time, batch_size, num_classes]&lt;/code&gt; 。ロジット。</target>
        </trans-unit>
        <trans-unit id="8b2a06836ea0ef15778259308b56f2fb2c2eda3e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;inputs&lt;/code&gt;&lt;/b&gt;: 3-D &lt;code&gt;float&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt;. If time_major == False, this will be a &lt;code&gt;Tensor&lt;/code&gt; shaped: &lt;code&gt;[batch_size, max_time, num_classes]&lt;/code&gt;. If time_major == True (default), this will be a &lt;code&gt;Tensor&lt;/code&gt; shaped: &lt;code&gt;[max_time, batch_size, num_classes]&lt;/code&gt;. The logits.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;inputs&lt;/code&gt; &lt;/b&gt;：3-D &lt;code&gt;float&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; 。time_major == Falseの場合、これは &lt;code&gt;Tensor&lt;/code&gt; シェイプになります： &lt;code&gt;[batch_size, max_time, num_classes]&lt;/code&gt; 。time_major == True（デフォルト）の場合、これは &lt;code&gt;Tensor&lt;/code&gt; シェイプになります： &lt;code&gt;[max_time, batch_size, num_classes]&lt;/code&gt; 。ロジット。</target>
        </trans-unit>
        <trans-unit id="de02ea5d91ae3c7a80211c3e470e760f7d81dbda" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;inputs&lt;/code&gt;&lt;/b&gt;: 3D tensor with shape: (batch_size, steps, input_dim) if data_format is &quot;channels_last&quot; or (batch_size, input_dim, steps) if data_format is &quot;channels_first&quot;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;inputs&lt;/code&gt; &lt;/b&gt;：形状の3Dテンソル：data_formatが「channels_last」の場合は（batch_size、steps、input_dim）、data_formatが「channels_first」の場合は（batch_size、input_dim、steps）。</target>
        </trans-unit>
        <trans-unit id="2c9004a9924d68b0ac95a917a530847dab22e929" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;inputs&lt;/code&gt;&lt;/b&gt;: 4D tensor with shape: (batch_size, filters, new_rows, new_cols) if data_format='channels_first' or 4D tensor with shape: (batch_size, new_rows, new_cols, filters) if data_format='channels_last'.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;inputs&lt;/code&gt; &lt;/b&gt;：4Dテンソルの形状：（b​​atch_size、filters、new_rows、new_cols）if data_format = 'channels_first'または4Dテンソルの形状：（b​​atch_size、new_rows、new_cols、filters）if data_format = 'channels_last'。</target>
        </trans-unit>
        <trans-unit id="0cd497c83a7e6c314ebe47a9f08800511d0b1a9d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;inputs&lt;/code&gt;&lt;/b&gt;: A 2D tensor &lt;code&gt;(samples, timesteps)&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;inputs&lt;/code&gt; &lt;/b&gt;：2Dテンソル &lt;code&gt;(samples, timesteps)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="afbabda7a9995a146861ed58aac53f8b3cfc712d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;inputs&lt;/code&gt;&lt;/b&gt;: A 2D tensor, with shape of &lt;code&gt;[batch, feature]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;inputs&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;[batch, feature]&lt;/code&gt; 形状を持つ2Dテンソル。</target>
        </trans-unit>
        <trans-unit id="77510f0e5b63f282e933d75e32e77023a6537c1d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;inputs&lt;/code&gt;&lt;/b&gt;: A 2D tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;inputs&lt;/code&gt; &lt;/b&gt;：2Dテンソル。</target>
        </trans-unit>
        <trans-unit id="e5f26397b014b02d187bb8caf9569aeaf6546a79" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;inputs&lt;/code&gt;&lt;/b&gt;: A 3D tensor with shape &lt;code&gt;[batch, timesteps, feature]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;inputs&lt;/code&gt; &lt;/b&gt;：形状 &lt;code&gt;[batch, timesteps, feature]&lt;/code&gt; 持つ3Dテンソル。</target>
        </trans-unit>
        <trans-unit id="0ca243e93cb40f697fea183cf53ed3bb5fa3ffe1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;inputs&lt;/code&gt;&lt;/b&gt;: A 3D tensor, with shape &lt;code&gt;[batch, timesteps, feature]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;inputs&lt;/code&gt; &lt;/b&gt;：形状 &lt;code&gt;[batch, timesteps, feature]&lt;/code&gt; 持つ3Dテンソル。</target>
        </trans-unit>
        <trans-unit id="0d07932e18b450fc247a27fcf065e25994d3f59f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;inputs&lt;/code&gt;&lt;/b&gt;: A 3D tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;inputs&lt;/code&gt; &lt;/b&gt;：3Dテンソル。</target>
        </trans-unit>
        <trans-unit id="c80e9b22cf7285339ca18e33235816fce6cadf26" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;inputs&lt;/code&gt;&lt;/b&gt;: A 4D tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;inputs&lt;/code&gt; &lt;/b&gt;：4Dテンソル。</target>
        </trans-unit>
        <trans-unit id="ee48b5b068ac7397f3c322f1987108f8b5054e3f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;inputs&lt;/code&gt;&lt;/b&gt;: A 5D tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;inputs&lt;/code&gt; &lt;/b&gt;：5Dテンソル。</target>
        </trans-unit>
        <trans-unit id="da8b1bda12a6e33a7c770c872d978518d7f0a36d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;inputs&lt;/code&gt;&lt;/b&gt;: A &lt;a href=&quot;../../../tf#string&quot;&gt;&lt;code&gt;tf.string&lt;/code&gt;&lt;/a&gt; tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;inputs&lt;/code&gt; &lt;/b&gt;：&lt;a href=&quot;../../../tf#string&quot;&gt; &lt;code&gt;tf.string&lt;/code&gt; &lt;/a&gt;テンソル。</target>
        </trans-unit>
        <trans-unit id="cc7af5441ffae491c6350b5fb1f3d6f945b7a55e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;inputs&lt;/code&gt;&lt;/b&gt;: A &lt;a href=&quot;../../tf#string&quot;&gt;&lt;code&gt;tf.string&lt;/code&gt;&lt;/a&gt; tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;inputs&lt;/code&gt; &lt;/b&gt;：&lt;a href=&quot;../../tf#string&quot;&gt; &lt;code&gt;tf.string&lt;/code&gt; &lt;/a&gt;テンソル。</target>
        </trans-unit>
        <trans-unit id="f6b4df551119cc8daf5c896c6beb08fd3476c5e3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;inputs&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of shape &lt;code&gt;[batch_size, dim]&lt;/code&gt;. The forward activations of the input network.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;inputs&lt;/code&gt; &lt;/b&gt;：形状の &lt;code&gt;Tensor&lt;/code&gt; &lt;code&gt;[batch_size, dim]&lt;/code&gt; 。入力ネットワークのフォワードアクティベーション。</target>
        </trans-unit>
        <trans-unit id="f81434c2b80eb9b0073929be6b1831565b25f1b6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;inputs&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;inputs&lt;/code&gt; &lt;/b&gt;：タイプ &lt;code&gt;float32&lt;/code&gt; の &lt;code&gt;Tensor&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2d0d7106a9ae2d76d87b3f741c8f0814eb142816" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;inputs&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. Values passed as inputs to the FakeQuantWithMinMaxArgs operation.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;inputs&lt;/code&gt; &lt;/b&gt;：タイプ &lt;code&gt;float32&lt;/code&gt; の &lt;code&gt;Tensor&lt;/code&gt; 。FakeQuantWithMinMaxArgsオペレーションへの入力として渡される値。</target>
        </trans-unit>
        <trans-unit id="f5467a962c0d9084f8a55f2052d7a37765bc67eb" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;inputs&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. Values passed as inputs to the FakeQuantWithMinMaxVars operation, shape same as &lt;code&gt;gradients&lt;/code&gt;. min, max: Quantization interval, floats of shape &lt;code&gt;[d]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;inputs&lt;/code&gt; &lt;/b&gt;：タイプ &lt;code&gt;float32&lt;/code&gt; の &lt;code&gt;Tensor&lt;/code&gt; 。FakeQuantWithMinMaxVarsオペレーションへの入力として渡される値は、 &lt;code&gt;gradients&lt;/code&gt; と同じ形状です。min、max：量子化間隔、形状の浮動小数点数 &lt;code&gt;[d]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6acf211857175d69dade1ccd041a0a07378bd173" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;inputs&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. Values passed as inputs to the FakeQuantWithMinMaxVars operation. min, max: Quantization interval, scalar floats.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;inputs&lt;/code&gt; &lt;/b&gt;：タイプ &lt;code&gt;float32&lt;/code&gt; の &lt;code&gt;Tensor&lt;/code&gt; 。FakeQuantWithMinMaxVarsオペレーションへの入力として渡される値。min、max：量子化間隔、スカラーフロート。</target>
        </trans-unit>
        <trans-unit id="6dd5c1541b04d0e1a29c68fb12c7b2d2f9f17959" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;inputs&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. The input to be joined.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;inputs&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;string&lt;/code&gt; 型の &lt;code&gt;Tensor&lt;/code&gt; 。結合する入力。</target>
        </trans-unit>
        <trans-unit id="fb4a8342394528545dabb961a91b9074704d7f3c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;inputs&lt;/code&gt;&lt;/b&gt;: A length T list of inputs, each a &lt;code&gt;Tensor&lt;/code&gt; of shape &lt;code&gt;[batch_size, input_size]&lt;/code&gt;, or a nested tuple of such elements.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;inputs&lt;/code&gt; &lt;/b&gt;：&lt;b&gt;入力&lt;/b&gt;の長さTのリスト、それぞれ形状の &lt;code&gt;Tensor&lt;/code&gt; &lt;code&gt;[batch_size, input_size]&lt;/code&gt; 、またはそのような要素のネストされたタプル。</target>
        </trans-unit>
        <trans-unit id="56228ff5ca196b452ab5548116ff5c95675c56ae" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;inputs&lt;/code&gt;&lt;/b&gt;: A length T list of inputs, each a &lt;code&gt;Tensor&lt;/code&gt; of shape &lt;code&gt;[batch_size, input_size]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;inputs&lt;/code&gt; &lt;/b&gt;：&lt;b&gt;入力&lt;/b&gt;の長さTのリスト。それぞれが形状の &lt;code&gt;Tensor&lt;/code&gt; &lt;code&gt;[batch_size, input_size]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="635820f05ff7b93317f8849e590664d073f81772" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;inputs&lt;/code&gt;&lt;/b&gt;: A length T list of inputs, each a tensor of shape [batch_size, input_size], or a nested tuple of such elements.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;inputs&lt;/code&gt; &lt;/b&gt;：&lt;b&gt;入力&lt;/b&gt;の長さTのリスト、それぞれ形状のテンソル[batch_size、input_size]、またはそのような要素のネストされたタプル。</target>
        </trans-unit>
        <trans-unit id="9311a35821968141f1c70d1de5488f0f1c99ac70" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;inputs&lt;/code&gt;&lt;/b&gt;: A list of &lt;a href=&quot;../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../indexedslices&quot;&gt;&lt;code&gt;tf.IndexedSlices&lt;/code&gt;&lt;/a&gt; objects, each with same shape and type.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;inputs&lt;/code&gt; &lt;/b&gt;：&lt;a href=&quot;../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../indexedslices&quot;&gt; &lt;code&gt;tf.IndexedSlices&lt;/code&gt; &lt;/a&gt;オブジェクトのリスト。それぞれ同じ形状とタイプです。</target>
        </trans-unit>
        <trans-unit id="f4a6f435f42e3b03e94e09744e91299e5526d664" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;inputs&lt;/code&gt;&lt;/b&gt;: A list of &lt;code&gt;Tensor&lt;/code&gt; objects that will be inputs to the &lt;code&gt;Operation&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;inputs&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Operation&lt;/code&gt; への入力となる &lt;code&gt;Tensor&lt;/code&gt; オブジェクトのリスト。</target>
        </trans-unit>
        <trans-unit id="8852a5b0d4c838fdcb06a949704da8d0c239dfe3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;inputs&lt;/code&gt;&lt;/b&gt;: A list of &lt;code&gt;Tensor&lt;/code&gt; objects, each with same shape and type.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;inputs&lt;/code&gt; &lt;/b&gt;：形状とタイプが同じ &lt;code&gt;Tensor&lt;/code&gt; オブジェクトのリスト。</target>
        </trans-unit>
        <trans-unit id="ed643e04410c4709df9b8190e393543831024e1a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;inputs&lt;/code&gt;&lt;/b&gt;: A list of &lt;code&gt;Tensor&lt;/code&gt; objects, or a single Tensor. The list of tensors to format into the template string. If a solitary tensor is passed in, the input tensor will automatically be wrapped as a list.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;inputs&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; オブジェクトのリスト、または単一のTensor。テンプレート文字列にフォーマットするテンソルのリスト。単独のテンソルが渡されると、入力テンソルは自動的にリストとしてラップされます。</target>
        </trans-unit>
        <trans-unit id="1ad95e5ac3a03522dac20d41200c23ede700a576" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;inputs&lt;/code&gt;&lt;/b&gt;: A list of &lt;code&gt;string&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; objects containing serialized &lt;code&gt;Summary&lt;/code&gt; protocol buffers.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;inputs&lt;/code&gt; &lt;/b&gt;：シリアル化された &lt;code&gt;Summary&lt;/code&gt; プロトコルバッファーを含む &lt;code&gt;string&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; オブジェクトのリスト。</target>
        </trans-unit>
        <trans-unit id="d073e60d0136e62407c435cffa8d03fb6094946c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;inputs&lt;/code&gt;&lt;/b&gt;: A list of at least 1 &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;string&lt;/code&gt;. A list of string tensors. The tensors must all have the same shape, or be scalars. Scalars may be mixed in; these will be broadcast to the shape of non-scalar inputs.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;inputs&lt;/code&gt; &lt;/b&gt;：タイプ &lt;code&gt;string&lt;/code&gt; の少なくとも1つの &lt;code&gt;Tensor&lt;/code&gt; オブジェクトのリスト。文字列テンソルのリスト。テンソルはすべて同じ形状であるか、スカラーでなければなりません。スカラーを混在させることができます。これらは非スカラー入力の形にブロードキャストされます。</target>
        </trans-unit>
        <trans-unit id="d8c70e662ed8910c080df23cc754fcb73cf05e83" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;inputs&lt;/code&gt;&lt;/b&gt;: A list of input tensors or &lt;code&gt;None&lt;/code&gt; (equivalent to an empty list). Each input can be a nested structure containing values that are convertible to tensors. Note that passing an N-dimension list of compatible values will result in a N-dimention list of scalar tensors rather than a single Rank-N tensors. If you need different behavior, convert part of inputs to tensors with &lt;a href=&quot;../../../convert_to_tensor&quot;&gt;&lt;code&gt;tf.convert_to_tensor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;inputs&lt;/code&gt; &lt;/b&gt;：入力テンソルまたはAリスト &lt;code&gt;None&lt;/code&gt; （空リストに相当）。各入力は、テンソルに変換可能な値を含むネストされた構造にすることができます。互換性のある値のN次元リストを渡すと、単一のランクNテンソルではなく、スカラーテンソルのN次元リストになることに注意してください。異なる動作が必要な場合は、&lt;a href=&quot;../../../convert_to_tensor&quot;&gt; &lt;code&gt;tf.convert_to_tensor&lt;/code&gt; &lt;/a&gt;を使用して入力の一部をテンソルに変換します。</target>
        </trans-unit>
        <trans-unit id="4a0eabd6ee6297f83f4ca3ad15863f118a555c04" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;inputs&lt;/code&gt;&lt;/b&gt;: A list of input tensors or None (equivalent to an empty list). Each input tensor has a corresponding shard axes, given by &lt;code&gt;input_shard_axes&lt;/code&gt;, which must have size divisible by &lt;code&gt;num_shards&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;inputs&lt;/code&gt; &lt;/b&gt;：入力テンソル又はなし（空リストに相当）のAリスト。各入力テンソルには、 &lt;code&gt;input_shard_axes&lt;/code&gt; で指定される対応するシャード軸があり、そのサイズは &lt;code&gt;num_shards&lt;/code&gt; で割り切れる必要があります。</target>
        </trans-unit>
        <trans-unit id="74bdccc5e43f8c7178931076cd2bb6b6c784038c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;inputs&lt;/code&gt;&lt;/b&gt;: A list of input tensors or None (equivalent to an empty list). The 0-th dimension of each Tensor must have size divisible by &lt;code&gt;num_shards&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;inputs&lt;/code&gt; &lt;/b&gt;：入力テンソル又はなし（空リストに相当）のAリスト。各Tensorの0番目の次元は、 &lt;code&gt;num_shards&lt;/code&gt; で割り切れるサイズでなければなりません。</target>
        </trans-unit>
        <trans-unit id="7e8c99bd948d0f5290f1b74bf3bb28c87301efdd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;inputs&lt;/code&gt;&lt;/b&gt;: A list of inputs or &lt;code&gt;None&lt;/code&gt; (equivalent to an empty list). Each input can be a nested structure containing values that are convertible to tensors. Note that passing an N-dimension list of compatible values will result in a N-dimension list of scalar tensors rather than a single Rank-N tensors. If you need different behavior, convert part of inputs to tensors with &lt;a href=&quot;../../convert_to_tensor&quot;&gt;&lt;code&gt;tf.convert_to_tensor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;inputs&lt;/code&gt; &lt;/b&gt;：&lt;b&gt;入力&lt;/b&gt;のリストまたは &lt;code&gt;None&lt;/code&gt; （空のリストと同等）。各入力は、テンソルに変換可能な値を含むネストされた構造にすることができます。互換性のある値のN次元リストを渡すと、単一のランクNテンソルではなく、スカラーテンソルのN次元リストになることに注意してください。異なる動作が必要な場合は、&lt;a href=&quot;../../convert_to_tensor&quot;&gt; &lt;code&gt;tf.convert_to_tensor&lt;/code&gt; &lt;/a&gt;を使用して入力の一部をテンソルに変換します。</target>
        </trans-unit>
        <trans-unit id="2bf56016449ab40673c3f8ff147cdfc1900e8184" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;inputs&lt;/code&gt;&lt;/b&gt;: A list of lists of input tensors or &lt;code&gt;None&lt;/code&gt; (equivalent to &lt;code&gt;[[]]&lt;/code&gt;), indexed by &lt;code&gt;[replica_num][input_num]&lt;/code&gt;. All replicas must have the same number of inputs. Each input can be a nested structure containing values that are convertible to tensors. Note that passing an N-dimension list of compatible values will result in a N-dimension list of scalar tensors rather than a single Rank-N tensors. If you need different behavior, convert part of inputs to tensors with &lt;a href=&quot;../../../convert_to_tensor&quot;&gt;&lt;code&gt;tf.convert_to_tensor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;inputs&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;[replica_num][input_num]&lt;/code&gt; でインデックス付けされた、入力テンソルまたは &lt;code&gt;None&lt;/code&gt; （ &lt;code&gt;[[]]&lt;/code&gt; と同等）のリストのリスト。すべてのレプリカの入力数は同じでなければなりません。各入力は、テンソルに変換可能な値を含むネストされた構造にすることができます。互換性のある値のN次元リストを渡すと、単一のランクNテンソルではなく、スカラーテンソルのN次元リストになることに注意してください。異なる動作が必要な場合は、&lt;a href=&quot;../../../convert_to_tensor&quot;&gt; &lt;code&gt;tf.convert_to_tensor&lt;/code&gt; &lt;/a&gt;を使用して入力の一部をテンソルに変換します。</target>
        </trans-unit>
        <trans-unit id="7adb76a79e9f58ffb3a567beeaf426c433ea4fa7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;inputs&lt;/code&gt;&lt;/b&gt;: An iterable of &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;SparseTensor&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;inputs&lt;/code&gt; &lt;/b&gt;： &lt;code&gt;Tensor&lt;/code&gt; または &lt;code&gt;SparseTensor&lt;/code&gt; の反復可能オブジェクト。</target>
        </trans-unit>
        <trans-unit id="a022b3e1cfb84750b452b59395b7fb644ae35d25" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;inputs&lt;/code&gt;&lt;/b&gt;: Deprecated, will be automatically inferred.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;inputs&lt;/code&gt; &lt;/b&gt;：非推奨、自動的に推測されます。</target>
        </trans-unit>
        <trans-unit id="0b31694e36ab292299bf47dc312d159f436a0938" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;inputs&lt;/code&gt;&lt;/b&gt;: Ignored when executing eagerly. If anything other than None is passed, it signals the losses are conditional on some of the layer's inputs, and thus they should only be run where these inputs are available. This is the case for activity regularization losses, for instance. If &lt;code&gt;None&lt;/code&gt; is passed, the losses are assumed to be unconditional, and will apply across all dataflows of the layer (e.g. weight regularization losses).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;inputs&lt;/code&gt; &lt;/b&gt;：熱心に実行する場合は無視されます。None以外が渡された場合、それは損失が一部のレイヤーの入力に条件付きであることを示しているため、これらの入力が利用可能な場所でのみ実行する必要があります。これは、たとえば、アクティビティの正規化による損失の場合です。場合 &lt;code&gt;None&lt;/code&gt; 渡されていない、損失は無条件であると想定され、そして層（例えば重量正則損失）のすべてのデータフロー全体に適用されます。</target>
        </trans-unit>
        <trans-unit id="2abacdc9bf9f71cffb64fe1e4934788f12779f42" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;inputs&lt;/code&gt;&lt;/b&gt;: Input tensor (of any rank).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;inputs&lt;/code&gt; &lt;/b&gt;：入力テンソル（任意のランク）。</target>
        </trans-unit>
        <trans-unit id="40bb1ef62f9948aa2dae06ef3ab395773709448e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;inputs&lt;/code&gt;&lt;/b&gt;: Input tensor or list/tuple of input tensors.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;inputs&lt;/code&gt; &lt;/b&gt;：入力テンソルまたは入力テンソルのリスト/タプル。</target>
        </trans-unit>
        <trans-unit id="b49918d506f9556f75f606f572db620bf3eb7507" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;inputs&lt;/code&gt;&lt;/b&gt;: Input tensor, or list/tuple of input tensors.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;inputs&lt;/code&gt; &lt;/b&gt;：入力テンソル、または入力テンソルのリスト/タプル。</target>
        </trans-unit>
        <trans-unit id="aa65cd26086da32d732cb52678f00754d90f7aa0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;inputs&lt;/code&gt;&lt;/b&gt;: Input tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;inputs&lt;/code&gt; &lt;/b&gt;：入力テンソル。</target>
        </trans-unit>
        <trans-unit id="8b0c62227969b4f5a9e95efe9c866aa6b8a1c7f4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;inputs&lt;/code&gt;&lt;/b&gt;: Inputs of the SignatureDef defined as a proto map of string to tensor info.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;inputs&lt;/code&gt; &lt;/b&gt;：文字列のテンソル情報へのプロトマップとして定義されたSignatureDefの入力。</target>
        </trans-unit>
        <trans-unit id="e82c737b6e318b87af69363188a33d761a222b1f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;inputs&lt;/code&gt;&lt;/b&gt;: List of placeholder tensors.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;inputs&lt;/code&gt; &lt;/b&gt;：プレースホルダーテンソルのリスト。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
