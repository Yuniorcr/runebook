<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="tensorflow">
    <body>
      <group id="tensorflow">
        <trans-unit id="d8ab4fc41b0560bb6a934607949bd5b386ee29f8" translate="yes" xml:space="preserve">
          <source>If this operator acts like the batch matrix &lt;code&gt;A&lt;/code&gt; with &lt;code&gt;A.shape = [B1,...,Bb, M, N]&lt;/code&gt;, then this returns a &lt;code&gt;Tensor&lt;/code&gt; holding &lt;code&gt;[B1,...,Bb]&lt;/code&gt;.</source>
          <target state="translated">このオペレータは、バッチマトリックスのように作用する場合 &lt;code&gt;A&lt;/code&gt; と &lt;code&gt;A.shape = [B1,...,Bb, M, N]&lt;/code&gt; 、この戻り &lt;code&gt;Tensor&lt;/code&gt; 保持 &lt;code&gt;[B1,...,Bb]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="921347482b8fd91ee313851ca1cccdafc480cddb" translate="yes" xml:space="preserve">
          <source>If this operator has shape &lt;code&gt;[B1,...,Bb, M, N]&lt;/code&gt;, this returns a &lt;code&gt;Tensor&lt;/code&gt;&lt;code&gt;diagonal&lt;/code&gt;, of shape &lt;code&gt;[B1,...,Bb, min(M, N)]&lt;/code&gt;, where &lt;code&gt;diagonal[b1,...,bb, i] = self.to_dense()[b1,...,bb, i, i]&lt;/code&gt;.</source>
          <target state="translated">この演算子の形状が &lt;code&gt;[B1,...,Bb, M, N]&lt;/code&gt; 場合、これは形状 &lt;code&gt;[B1,...,Bb, min(M, N)]&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; &lt;code&gt;diagonal&lt;/code&gt; 返します &lt;code&gt;diagonal[b1,...,bb, i] = self.to_dense()[b1,...,bb, i, i]&lt;/code&gt; ここで、diagonal [b1 ,. ..、bb、i] = self.to_dense（）[b1、...、bb、i、i]。</target>
        </trans-unit>
        <trans-unit id="8f17df02cdfdf16ae55ddc38c4d96a43d8d0194c" translate="yes" xml:space="preserve">
          <source>If this operator is &lt;code&gt;A = L + U D V^H&lt;/code&gt;, this hints &lt;code&gt;D &amp;gt; 0&lt;/code&gt; elementwise.</source>
          <target state="translated">この演算子が &lt;code&gt;A = L + U D V^H&lt;/code&gt; 場合、これは要素ごとに &lt;code&gt;D &amp;gt; 0&lt;/code&gt; 示唆します。</target>
        </trans-unit>
        <trans-unit id="3d7432da8d98b1f600f518b45f152630261f8725" translate="yes" xml:space="preserve">
          <source>If this operator is &lt;code&gt;A = L + U D V^H&lt;/code&gt;, this is &lt;code&gt;D&lt;/code&gt;.</source>
          <target state="translated">この演算子が &lt;code&gt;A = L + U D V^H&lt;/code&gt; 場合、これは &lt;code&gt;D&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ac0c26f8d498bda35983c79790cb84038dcc48a1" translate="yes" xml:space="preserve">
          <source>If this operator is &lt;code&gt;A = L + U D V^H&lt;/code&gt;, this is the &lt;code&gt;L&lt;/code&gt;.</source>
          <target state="translated">この演算子が &lt;code&gt;A = L + U D V^H&lt;/code&gt; 場合、これは &lt;code&gt;L&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ed4f7079684ac253ddfaf867eaf34bf8cf0aed43" translate="yes" xml:space="preserve">
          <source>If this operator is &lt;code&gt;A = L + U D V^H&lt;/code&gt;, this is the &lt;code&gt;U&lt;/code&gt;.</source>
          <target state="translated">この演算子が &lt;code&gt;A = L + U D V^H&lt;/code&gt; 場合、これは &lt;code&gt;U&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="b75fcf71c0a569ab0e4f88a68f9b2ba47762aa34" translate="yes" xml:space="preserve">
          <source>If this operator is &lt;code&gt;A = L + U D V^H&lt;/code&gt;, this is the &lt;code&gt;V&lt;/code&gt;.</source>
          <target state="translated">この演算子が &lt;code&gt;A = L + U D V^H&lt;/code&gt; 場合、これは &lt;code&gt;V&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="11a0d778ea7b358f23842e885c1d5a8c5ecc2928" translate="yes" xml:space="preserve">
          <source>If this operator is &lt;code&gt;A = L + U D V^H&lt;/code&gt;, this is the diagonal of &lt;code&gt;D&lt;/code&gt;.</source>
          <target state="translated">この演算子が &lt;code&gt;A = L + U D V^H&lt;/code&gt; 場合、これは &lt;code&gt;D&lt;/code&gt; の対角になります。</target>
        </trans-unit>
        <trans-unit id="ac015fe43443b780f0f83ee7a02dba87f69812e3" translate="yes" xml:space="preserve">
          <source>If this optional does not have a value (i.e. &lt;code&gt;self.has_value()&lt;/code&gt; evaluates to &lt;code&gt;False&lt;/code&gt;), this operation will raise &lt;a href=&quot;../../errors/invalidargumenterror&quot;&gt;&lt;code&gt;tf.errors.InvalidArgumentError&lt;/code&gt;&lt;/a&gt; at runtime.</source>
          <target state="translated">このオプションに値がない場合（つまり、 &lt;code&gt;self.has_value()&lt;/code&gt; が &lt;code&gt;False&lt;/code&gt; に評価される場合）、この操作は実行時に&lt;a href=&quot;../../errors/invalidargumenterror&quot;&gt; &lt;code&gt;tf.errors.InvalidArgumentError&lt;/code&gt; を発生&lt;/a&gt;させます。</target>
        </trans-unit>
        <trans-unit id="e721351d62e8560faa79940bb195f1f52214823e" translate="yes" xml:space="preserve">
          <source>If this optional does not have a value (i.e. &lt;code&gt;self.has_value()&lt;/code&gt; evaluates to &lt;code&gt;False&lt;/code&gt;), this operation will raise &lt;a href=&quot;../errors/invalidargumenterror&quot;&gt;&lt;code&gt;tf.errors.InvalidArgumentError&lt;/code&gt;&lt;/a&gt; at runtime.</source>
          <target state="translated">If this optional does not have a value (i.e. &lt;code&gt;self.has_value()&lt;/code&gt; evaluates to &lt;code&gt;False&lt;/code&gt; ), this operation will raise &lt;a href=&quot;../errors/invalidargumenterror&quot;&gt; &lt;code&gt;tf.errors.InvalidArgumentError&lt;/code&gt; &lt;/a&gt; at runtime.</target>
        </trans-unit>
        <trans-unit id="8b41f377cbcb0fda59b6793b37f389278a7f495c" translate="yes" xml:space="preserve">
          <source>If this value is more than 1, OOV inputs are hashed to determine their OOV value; if this value is 0, passing an OOV input will result in a '-1' being returned for that value in the output tensor. (Note that, because the value is -1 and not 0, this will allow you to effectively drop OOV values from categorical encodings.)</source>
          <target state="translated">この値が 1 以上の場合、OOV 入力はハッシュ化されて OOV 値が決定されます。この値が 0 の場合、OOV 入力を渡すと、出力テンソルでその値に対して '-1' が返されます。(値が0ではなく-1なので、これにより、カテゴリカルエンコーディングからOOV値を効果的に削除できることに注意してください)。</target>
        </trans-unit>
        <trans-unit id="f1514ab93b97285018f1c274f51c16deb4d70ee5" translate="yes" xml:space="preserve">
          <source>If this value is more than 1, OOV inputs are modulated to determine their OOV value; if this value is 0, passing an OOV input will result in a '-1' being returned for that value in the output tensor. (Note that, because the value is -1 and not 0, this will allow you to effectively drop OOV values from categorical encodings.)</source>
          <target state="translated">この値が 1 以上の場合、OOV 入力は変調されて OOV 値が決定されます。この値が 0 の場合、OOV 入力を渡すと、出力テンソルでその値に対して '-1' が返されます。(値が0ではなく-1なので、これにより、カテゴリカルエンコーディングからOOV値を効果的に削除することができることに注意してください)。</target>
        </trans-unit>
        <trans-unit id="77cdf432873b1c4a434c37672f4c11b50efb424e" translate="yes" xml:space="preserve">
          <source>If time_major == False (default), this will be a &lt;code&gt;Tensor&lt;/code&gt; shaped: &lt;code&gt;[batch_size, max_time, cell.output_size]&lt;/code&gt;.</source>
          <target state="translated">time_major == False（デフォルト）の場合、これは &lt;code&gt;Tensor&lt;/code&gt; シェイプになります： &lt;code&gt;[batch_size, max_time, cell.output_size]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d4ef8f486f9257f3c609cd71034848e31051aeee" translate="yes" xml:space="preserve">
          <source>If time_major == True, this will be a &lt;code&gt;Tensor&lt;/code&gt; shaped: &lt;code&gt;[max_time, batch_size, cell.output_size]&lt;/code&gt;.</source>
          <target state="translated">time_major == Trueの場合、これは &lt;code&gt;Tensor&lt;/code&gt; シェイプになります： &lt;code&gt;[max_time, batch_size, cell.output_size]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8e814ed4eb2aa229b46d9532ee0af8eee2088116" translate="yes" xml:space="preserve">
          <source>If transpose_a and adjoint_a are both set to True.</source>
          <target state="translated">transpose_aとadjoint_aの両方がTrueに設定されている場合。</target>
        </trans-unit>
        <trans-unit id="8d9771c610e0ca580ebfd1ee02c48a63efc43f4a" translate="yes" xml:space="preserve">
          <source>If transpose_output is &lt;code&gt;true&lt;/code&gt;, returns:</source>
          <target state="translated">If transpose_output is &lt;code&gt;true&lt;/code&gt; , returns:</target>
        </trans-unit>
        <trans-unit id="4be7f5250b50d753b36e91700f51df547557d415" translate="yes" xml:space="preserve">
          <source>If transpose_output is false, returns:</source>
          <target state="translated">transpose_outputがfalseの場合、戻ります。</target>
        </trans-unit>
        <trans-unit id="987f748364c0cbac5dff0794850510411dc2ab70" translate="yes" xml:space="preserve">
          <source>If true put each gradient subgraph into a separate compilation scope. This gives fine-grained control over which portions of the graph will be compiled as a single unit. Compiling gradients separately may yield better performance for some graphs. The scope is named based on the scope of the forward computation as well as the name of the gradients. As a result, the gradients will be compiled in a scope that is separate from both the forward computation, and from other gradients.</source>
          <target state="translated">true の場合、それぞれのグラデーションサブグラフを別々のコンパイルスコープに入れます。これにより、グラフのどの部分を一つの単位としてコンパイルするかを細かく制御することができます。グラフによっては、グラデーションを別々にコンパイルした方がより良いパフォーマンスが得られるかもしれません。スコープの名前は、グラデーションの名前と同様に、フォワード計算のスコープに基づいて付けられます。その結果、グラデーションは、前方計算と他のグラデーションの両方とは別のスコープでコンパイルされます。</target>
        </trans-unit>
        <trans-unit id="d4bf4531db5255ca9a9edafe8fc64d442d3621ea" translate="yes" xml:space="preserve">
          <source>If true the resulting &lt;code&gt;k&lt;/code&gt; elements will be sorted by the values in descending order.</source>
          <target state="translated">If true the resulting &lt;code&gt;k&lt;/code&gt; elements will be sorted by the values in descending order.</target>
        </trans-unit>
        <trans-unit id="58e6ce40eef5a70bfa5ac1274964be590a2c1a68" translate="yes" xml:space="preserve">
          <source>If true use &lt;code&gt;input_min&lt;/code&gt; and &lt;code&gt;input_max&lt;/code&gt; for the range of the input, otherwise determine min and max from the input &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="translated">If true use &lt;code&gt;input_min&lt;/code&gt; and &lt;code&gt;input_max&lt;/code&gt; for the range of the input, otherwise determine min and max from the input &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="55d835c5abdde926d74d741995b5b63e74e4a04d" translate="yes" xml:space="preserve">
          <source>If true, &lt;code&gt;MonitoredSession&lt;/code&gt; stops iterations. Returns: A &lt;code&gt;bool&lt;/code&gt;</source>
          <target state="translated">trueの場合、 &lt;code&gt;MonitoredSession&lt;/code&gt; は反復を停止します。戻り値： &lt;code&gt;bool&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="642245f4a87a8ae51f595e743952d5f1a8383e6b" translate="yes" xml:space="preserve">
          <source>If true, &lt;code&gt;obj&lt;/code&gt; may refer to a &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="translated">If true, &lt;code&gt;obj&lt;/code&gt; may refer to a &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1bb038c7a2651630e273adec4e4668df52c87e0e" translate="yes" xml:space="preserve">
          <source>If true, &lt;code&gt;obj&lt;/code&gt; may refer to an &lt;code&gt;Operation&lt;/code&gt;.</source>
          <target state="translated">If true, &lt;code&gt;obj&lt;/code&gt; may refer to an &lt;code&gt;Operation&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0427ac6b0b0fdb1672cf3af3d4818c9a571f5214" translate="yes" xml:space="preserve">
          <source>If true, adds an &quot;_output_shapes&quot; list attr to each node with the inferred shapes of each of its outputs.</source>
          <target state="translated">trueの場合、&quot;_output_shapes &quot;リストのattrを各ノードに追加します。</target>
        </trans-unit>
        <trans-unit id="2410d14ffcca817b83e0409520b16ad690792a61" translate="yes" xml:space="preserve">
          <source>If true, compute full-sized &lt;code&gt;u&lt;/code&gt; and &lt;code&gt;v&lt;/code&gt;. If false (the default), compute only the leading &lt;code&gt;P&lt;/code&gt; singular vectors. Ignored if &lt;code&gt;compute_uv&lt;/code&gt; is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">If true, compute full-sized &lt;code&gt;u&lt;/code&gt; and &lt;code&gt;v&lt;/code&gt; . If false (the default), compute only the leading &lt;code&gt;P&lt;/code&gt; singular vectors. Ignored if &lt;code&gt;compute_uv&lt;/code&gt; is &lt;code&gt;False&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f633a10a54cff5eadc8d762cd005175ec8c3e6f1" translate="yes" xml:space="preserve">
          <source>If true, on failing to vectorize an operation, the unsupported op is wrapped in a tf.while_loop to execute the map iterations. Note that this fallback only happens for unsupported ops and other parts of &lt;code&gt;fn&lt;/code&gt; are still vectorized. If false, on encountering an unsupported op, a ValueError is thrown. Note that the fallbacks can result in slowdowns since vectorization often yields speedup of one to two orders of magnitude.</source>
          <target state="translated">If true, on failing to vectorize an operation, the unsupported op is wrapped in a tf.while_loop to execute the map iterations. Note that this fallback only happens for unsupported ops and other parts of &lt;code&gt;fn&lt;/code&gt; are still vectorized. If false, on encountering an unsupported op, a ValueError is thrown. Note that the fallbacks can result in slowdowns since vectorization often yields speedup of one to two orders of magnitude.</target>
        </trans-unit>
        <trans-unit id="048f1f24a5bcac1d8894f5b93c0a90fdbe61f251" translate="yes" xml:space="preserve">
          <source>If true, only account statistics of nodes eventually displayed by the outputs. Otherwise, a node's statistics are accounted by its parents as long as it's types match 'account_type_regexes', even if it is hidden from the output, say, by hide_name_regexes.</source>
          <target state="translated">trueの場合、最終的に出力に表示されるノードの統計情報のみを説明します。そうでなければ、ノードの統計情報は、ノードの型が 'account_type_regexes' と一致する限り、たとえそれがhide_name_regexesによって出力から隠されていたとしても、その親によって説明されます。</target>
        </trans-unit>
        <trans-unit id="c0d83a8ec3b4b432ce5abe190cc7b46d4bf56426" translate="yes" xml:space="preserve">
          <source>If true, only applies colocation of this op within the context, rather than applying all colocation properties on the stack. If &lt;code&gt;op&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt;, this value must be &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">If true, only applies colocation of this op within the context, rather than applying all colocation properties on the stack. If &lt;code&gt;op&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt; , this value must be &lt;code&gt;True&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3d5991704ef5e5ed338b15a5a568def2fee052f4" translate="yes" xml:space="preserve">
          <source>If true, retain reduced dimensions with length 1.</source>
          <target state="translated">真の場合は、長さ 1 の縮小寸法を保持します。</target>
        </trans-unit>
        <trans-unit id="55e2c570f4b644f41dc5e0706770850ecf206aa3" translate="yes" xml:space="preserve">
          <source>If true, retains reduced dimensions with length 1.</source>
          <target state="translated">true の場合、長さ 1 の縮小寸法を保持します。</target>
        </trans-unit>
        <trans-unit id="78bd78dc8c3d9722bd2751248ac3d2d2f79be2ad" translate="yes" xml:space="preserve">
          <source>If true, returns a &lt;code&gt;SparseTensor&lt;/code&gt; instead of a dense &lt;code&gt;Tensor&lt;/code&gt; (the default).</source>
          <target state="translated">If true, returns a &lt;code&gt;SparseTensor&lt;/code&gt; instead of a dense &lt;code&gt;Tensor&lt;/code&gt; (the default).</target>
        </trans-unit>
        <trans-unit id="7fecd242704de37b3dd904a022f989afe06213fd" translate="yes" xml:space="preserve">
          <source>If true, the coordinates of output nmsed boxes will be clipped to [0, 1]. If false, output the box coordinates as it is. Defaults to true.</source>
          <target state="translated">true の場合、出力された nmsed ボックスの座標を [0,1]にクリップします。falseの場合、ボックスの座標をそのまま出力します。デフォルトはtrueです。</target>
        </trans-unit>
        <trans-unit id="502ce0cdb04da01c657079618fa04e2987ef5a38" translate="yes" xml:space="preserve">
          <source>If true, then composite tensors such as &lt;a href=&quot;../sparse/sparsetensor&quot;&gt;&lt;code&gt;tf.sparse.SparseTensor&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../raggedtensor&quot;&gt;&lt;code&gt;tf.RaggedTensor&lt;/code&gt;&lt;/a&gt; are expanded into their component tensors.</source>
          <target state="translated">If true, then composite tensors such as &lt;a href=&quot;../sparse/sparsetensor&quot;&gt; &lt;code&gt;tf.sparse.SparseTensor&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;../raggedtensor&quot;&gt; &lt;code&gt;tf.RaggedTensor&lt;/code&gt; &lt;/a&gt; are expanded into their component tensors.</target>
        </trans-unit>
        <trans-unit id="a1f3e3debcd743db974fadd47bb3a3fd32699bd6" translate="yes" xml:space="preserve">
          <source>If true, then ensure that at least one ngram is generated for each input sequence. In particular, if an input sequence is shorter than &lt;code&gt;min(ngram_width) + 2*pad_width&lt;/code&gt;, then generate a single ngram containing the entire sequence. If false, then no ngrams are generated for these short input sequences.</source>
          <target state="translated">If true, then ensure that at least one ngram is generated for each input sequence. In particular, if an input sequence is shorter than &lt;code&gt;min(ngram_width) + 2*pad_width&lt;/code&gt; , then generate a single ngram containing the entire sequence. If false, then no ngrams are generated for these short input sequences.</target>
        </trans-unit>
        <trans-unit id="b8897b80b8903485de9da49cf445089ca28e01ee" translate="yes" xml:space="preserve">
          <source>If true, then the absolute value of the quantized minimum value is the same as the quantized maximum value, instead of 1 greater. i.e. for 8 bit quantization, the minimum value is -127 instead of -128.</source>
          <target state="translated">真の場合、量子化された最小値の絶対値は、量子化された最大値と同じではなく、1 より大きい値になります。</target>
        </trans-unit>
        <trans-unit id="605f28ad697888d560565e20edb2658524ca80dd" translate="yes" xml:space="preserve">
          <source>If true, then use assertions to check that the arguments form a valid &lt;code&gt;RaggedTensor&lt;/code&gt;. Note: these assertions incur a runtime cost, since they must be checked for each tensor value.</source>
          <target state="translated">If true, then use assertions to check that the arguments form a valid &lt;code&gt;RaggedTensor&lt;/code&gt; . Note: these assertions incur a runtime cost, since they must be checked for each tensor value.</target>
        </trans-unit>
        <trans-unit id="50e1750211ccf0ffd4d7bf04033e96ab6703e8b1" translate="yes" xml:space="preserve">
          <source>If true, this layer will map indices to vocabulary items instead of mapping vocabulary items to indices.</source>
          <target state="translated">true の場合、このレイヤーは語彙項目をインデックスにマッピングするのではなく、語彙項目にインデックスをマッピングします。</target>
        </trans-unit>
        <trans-unit id="1a5fe58711f7508a2f179f8f78c412b0f3855389" translate="yes" xml:space="preserve">
          <source>If true, uses pfor for computing the Jacobian. Else uses a tf.while_loop.</source>
          <target state="translated">真の場合は、ヤコビアンの計算にpforを使用します。そうでなければ tf.while_loop を使用します。</target>
        </trans-unit>
        <trans-unit id="0088562ae1b7677b52faeef211542485c79f6d3c" translate="yes" xml:space="preserve">
          <source>If true, uses safe_embedding_lookup_sparse instead of embedding_lookup_sparse. safe_embedding_lookup_sparse ensures there are no empty rows and all weights and ids are positive at the expense of extra compute cost. This only applies to rank 2 (NxM) shaped input tensors. Defaults to true, consider turning off if the above checks are not needed. Note that having empty rows will not trigger any error though the output result might be 0 or omitted.</source>
          <target state="translated">true の場合,embedding_lookup_sparse の代わりに safe_embedding_lookup_sparse を使用します.safe_embedding_lookup_sparse は,余分な計算コストを犠牲にしても,空の行が存在せず,すべての重みと ID が正の値であることを保証します.これは,ランク2(NxM)の形をした入力テンソルにのみ適用されます.デフォルトはtrueですが、上記のチェックが不要な場合はオフにすることを検討してください。出力結果が0になったり省略されたりしますが、行が空であってもエラーにはならないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="dbeb35334fcf898781955202c2c41a0263216176" translate="yes" xml:space="preserve">
          <source>If true, vectorizes the jacobian computation. Else falls back to a sequential while_loop. Vectorization can sometimes fail or lead to excessive memory usage. This option can be used to disable vectorization in such cases.</source>
          <target state="translated">true の場合,ヤコビアン計算をベクトル化します.Else の場合は、シーケンシャルな while_loop に戻ります。ベクトル化が失敗したり、メモリを過剰に使用したりすることがあります。このオプションを使用すると、そのような場合にベクトル化を無効にすることができます。</target>
        </trans-unit>
        <trans-unit id="78bb27a9d56dc099a7acc0da9b42015044430fff" translate="yes" xml:space="preserve">
          <source>If true, we do not use the minimum quantized value. i.e. for int8 the quantized output, it would be restricted to the range -127..127 instead of the full -128..127 range. This is provided for compatibility with certain inference backends. (Only applies to SCALED mode)</source>
          <target state="translated">つまり、int8の量子化出力は、-128...127の完全な範囲ではなく、-127...127の範囲に制限されます。これは、特定の推論バックエンドとの互換性のために提供されています。(SCALEDモードにのみ適用されます)</target>
        </trans-unit>
        <trans-unit id="83490805bb1f49a5f8bb8f11bf034585aac8c23b" translate="yes" xml:space="preserve">
          <source>If tuple of 2 ints: interpreted as two different symmetric cropping values for height and width: &lt;code&gt;(symmetric_height_crop, symmetric_width_crop)&lt;/code&gt;.</source>
          <target state="translated">2つの整数のタプルの場合：高さと幅の2つの異なる対称クロッピング値として解釈されます： &lt;code&gt;(symmetric_height_crop, symmetric_width_crop)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="29288c4cdf42a8a30d0d3b67f8aed321e16ae670" translate="yes" xml:space="preserve">
          <source>If tuple of 2 ints: interpreted as two different symmetric padding values for height and width: &lt;code&gt;(symmetric_height_pad, symmetric_width_pad)&lt;/code&gt;.</source>
          <target state="translated">2つの整数のタプルの場合：高さと幅の2つの異なる対称パディング値として解釈されます： &lt;code&gt;(symmetric_height_pad, symmetric_width_pad)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0b67c19bd4a86767a2e3f540ca915d81b144b003" translate="yes" xml:space="preserve">
          <source>If tuple of 2 tuples of 2 ints: interpreted as &lt;code&gt;((top_crop, bottom_crop), (left_crop, right_crop))&lt;/code&gt;</source>
          <target state="translated">2つの整数の2つのタプルのタプルの場合： &lt;code&gt;((top_crop, bottom_crop), (left_crop, right_crop))&lt;/code&gt; として解釈されます</target>
        </trans-unit>
        <trans-unit id="487146df721c523689eaeddaf64885a4a783f231" translate="yes" xml:space="preserve">
          <source>If tuple of 2 tuples of 2 ints: interpreted as &lt;code&gt;((top_pad, bottom_pad), (left_pad, right_pad))&lt;/code&gt;</source>
          <target state="translated">2つの整数の2つのタプルのタプルの場合： &lt;code&gt;((top_pad, bottom_pad), (left_pad, right_pad))&lt;/code&gt; として解釈されます</target>
        </trans-unit>
        <trans-unit id="812fc65b353a07607726b2966667ffdf62fd3b3c" translate="yes" xml:space="preserve">
          <source>If tuple of 3 ints: interpreted as two different symmetric cropping values for depth, height, and width: &lt;code&gt;(symmetric_dim1_crop, symmetric_dim2_crop, symmetric_dim3_crop)&lt;/code&gt;.</source>
          <target state="translated">3つの整数のタプルの場合：深さ、高さ、幅の2つの異なる対称トリミング値として解釈されます： &lt;code&gt;(symmetric_dim1_crop, symmetric_dim2_crop, symmetric_dim3_crop)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="43b0e46a9dc3a1e8c76f88c379c30be852303e72" translate="yes" xml:space="preserve">
          <source>If tuple of 3 ints: interpreted as two different symmetric padding values for height and width: &lt;code&gt;(symmetric_dim1_pad, symmetric_dim2_pad, symmetric_dim3_pad)&lt;/code&gt;.</source>
          <target state="translated">3つの整数のタプルの場合：高さと幅の2つの異なる対称パディング値として解釈されます： &lt;code&gt;(symmetric_dim1_pad, symmetric_dim2_pad, symmetric_dim3_pad)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6c88b2c00149b3f5340f436ed5d7d8a348e7c720" translate="yes" xml:space="preserve">
          <source>If tuple of 3 tuples of 2 ints: interpreted as &lt;code&gt;((left_dim1_crop, right_dim1_crop), (left_dim2_crop, right_dim2_crop), (left_dim3_crop, right_dim3_crop))&lt;/code&gt;</source>
          <target state="translated">2つの整数の3つのタプルのタプルの場合： &lt;code&gt;((left_dim1_crop, right_dim1_crop), (left_dim2_crop, right_dim2_crop), (left_dim3_crop, right_dim3_crop))&lt;/code&gt; として解釈されます</target>
        </trans-unit>
        <trans-unit id="f527489de1e80e2130364ad7b3746cd24f497905" translate="yes" xml:space="preserve">
          <source>If tuple of 3 tuples of 2 ints: interpreted as &lt;code&gt;((left_dim1_pad, right_dim1_pad), (left_dim2_pad, right_dim2_pad), (left_dim3_pad, right_dim3_pad))&lt;/code&gt;</source>
          <target state="translated">2つの整数の3つのタプルのタプルの場合： &lt;code&gt;((left_dim1_pad, right_dim1_pad), (left_dim2_pad, right_dim2_pad), (left_dim3_pad, right_dim3_pad))&lt;/code&gt; として解釈されます</target>
        </trans-unit>
        <trans-unit id="3faf4c1ccd2136f577d7a0c4205048d0ffd1bdee" translate="yes" xml:space="preserve">
          <source>If tuple of int (length 2): How many zeros to add at the beginning and at the end of the padding dimension (&lt;code&gt;(left_pad, right_pad)&lt;/code&gt;).</source>
          <target state="translated">intのタプルの場合（長さ2）：パディングディメンションの最初と最後に追加するゼロの数（ &lt;code&gt;(left_pad, right_pad)&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="04717633bfa1f5d00ee7921c11bc933528638c7c" translate="yes" xml:space="preserve">
          <source>If tuple of int (length 2): How many zeros to add at the beginning and the end of the padding dimension (&lt;code&gt;(left_pad, right_pad)&lt;/code&gt;).</source>
          <target state="translated">If tuple of int (length 2): How many zeros to add at the beginning and the end of the padding dimension ( &lt;code&gt;(left_pad, right_pad)&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="fd5216b9fe5dfaa382d9801ed52c23fb17ea2eda" translate="yes" xml:space="preserve">
          <source>If two elements are equal, the lower-index element appears first.</source>
          <target state="translated">2つの要素が等しい場合、インデックスの低い方の要素が先に表示されます。</target>
        </trans-unit>
        <trans-unit id="db885c2d7731f7899921d98b5677edf2220668cb" translate="yes" xml:space="preserve">
          <source>If units is not an int.</source>
          <target state="translated">単位が int でない場合。</target>
        </trans-unit>
        <trans-unit id="4bce7b71d5fde27e87108fc2b8f29d9e9dd019f3" translate="yes" xml:space="preserve">
          <source>If user called &lt;code&gt;MonitoredSession.run(fetches=a, feed_dict=b)&lt;/code&gt;, then this field is equal to SessionRunArgs(a, b).</source>
          <target state="translated">ユーザーが &lt;code&gt;MonitoredSession.run(fetches=a, feed_dict=b)&lt;/code&gt; を呼び出した場合、このフィールドはSessionRunArgs（a、b）と等しくなります。</target>
        </trans-unit>
        <trans-unit id="a7b2692658ec0f3b0fedbacc5e4dc8afebe62f2f" translate="yes" xml:space="preserve">
          <source>If users keep data in tf.Example format, they need to call tf.parse_example with a proper feature spec. There are two main things that this utility helps:</source>
          <target state="translated">ユーザがデータを tf.Example 形式で保持している場合は、適切な機能仕様で tf.parse_example を呼び出す必要があります。このユーティリティが役立つことは主に2つあります。</target>
        </trans-unit>
        <trans-unit id="50cf7138d7b09704383c9338ec705e7ebf6961a1" translate="yes" xml:space="preserve">
          <source>If using exclusive &lt;code&gt;labels&lt;/code&gt; (wherein one and only one class is true at a time), see &lt;code&gt;sparse_softmax_cross_entropy_with_logits&lt;/code&gt;.</source>
          <target state="translated">排他的な &lt;code&gt;labels&lt;/code&gt; を使用する場合（一度に1つのクラスのみがtrueである場合）、 &lt;code&gt;sparse_softmax_cross_entropy_with_logits&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="19d3637a3d6d25647e984cf647cb8291a36aa8b9" translate="yes" xml:space="preserve">
          <source>If valid compression_type can't be determined from &lt;code&gt;options&lt;/code&gt;.</source>
          <target state="translated">If valid compression_type can't be determined from &lt;code&gt;options&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="87079ede7f1a53d1f2cf6b63c82bcae55f52855b" translate="yes" xml:space="preserve">
          <source>If validation fails.</source>
          <target state="translated">検証に失敗した場合。</target>
        </trans-unit>
        <trans-unit id="c6f309484c1aebad69e2272b3c3b34b511f44f66" translate="yes" xml:space="preserve">
          <source>If value is False, then only the name prepended with 'no' is emitted.</source>
          <target state="translated">値がFalseの場合は、'no'の前に'no'を付加した名前だけが出力されます。</target>
        </trans-unit>
        <trans-unit id="0d582533f76f9fbe72b42e141cd8db21e3ebbecb" translate="yes" xml:space="preserve">
          <source>If value is None, then only the name is emitted.</source>
          <target state="translated">値が None の場合は、名前のみが出力されます。</target>
        </trans-unit>
        <trans-unit id="4d1b932d0c6b9763d6c98a7c7a4f7d4c559674b7" translate="yes" xml:space="preserve">
          <source>If value is True, then only the name is emitted.</source>
          <target state="translated">値がTrueの場合は、名前だけが出力されます。</target>
        </trans-unit>
        <trans-unit id="ba9125247d16d07818ddb28c97b11a7ccc26f154" translate="yes" xml:space="preserve">
          <source>If value is a collection, this will emit --name=value1,value2,value3, unless the flag name is in multi_flags, in which case this will emit --name=value1 --name=value2 --name=value3.</source>
          <target state="translated">フラグ名がmulti_flagsの中にある場合を除いて、valueがコレクションの場合は--name=value1,value2,value3が出力されます。</target>
        </trans-unit>
        <trans-unit id="5d4ad20b53a04eec43483216203f6cf47ad97680" translate="yes" xml:space="preserve">
          <source>If value is a collection, this will emit --name=value1,value2,value3.</source>
          <target state="translated">valueがコレクションの場合、--name=value1,value2,value3と出力されます。</target>
        </trans-unit>
        <trans-unit id="e94289cc0ab276f55f2d57923859f1b90e55cdac" translate="yes" xml:space="preserve">
          <source>If value is a string then --name=value is emitted.</source>
          <target state="translated">value が文字列の場合は --name=value が出力されます。</target>
        </trans-unit>
        <trans-unit id="20d186d757c8e634482f4b0ae70d6c1979fa6163" translate="yes" xml:space="preserve">
          <source>If value_range does not satisfy value_range[0] &amp;lt; value_range[1].</source>
          <target state="translated">If value_range does not satisfy value_range[0] &amp;lt; value_range[1].</target>
        </trans-unit>
        <trans-unit id="269bcbd39e8d044a050279a6fd20ff4311dabf60" translate="yes" xml:space="preserve">
          <source>If values in &lt;code&gt;ref&lt;/code&gt; is to be updated more than once, because there are duplicate entries in &lt;code&gt;indices&lt;/code&gt;, the order at which the updates happen for each value is undefined.</source>
          <target state="translated">&lt;code&gt;ref&lt;/code&gt; の値が複数回更新される場合、 &lt;code&gt;indices&lt;/code&gt; に重複したエントリがあるため、各値の更新が発生する順序は定義されていません。</target>
        </trans-unit>
        <trans-unit id="d4d6a559f5a98c45e6ddecc38bc713096d867c80" translate="yes" xml:space="preserve">
          <source>If values is not a &lt;code&gt;RaggedTensor&lt;/code&gt; or &lt;code&gt;Tensor&lt;/code&gt;, or row_partition is not a &lt;code&gt;RowPartition&lt;/code&gt;.</source>
          <target state="translated">If values is not a &lt;code&gt;RaggedTensor&lt;/code&gt; or &lt;code&gt;Tensor&lt;/code&gt; , or row_partition is not a &lt;code&gt;RowPartition&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ac6316280f4f6f5ca675262d96420bb0b27b62bd" translate="yes" xml:space="preserve">
          <source>If vectorization fails and fallback_to_while_loop is False.</source>
          <target state="translated">ベクトル化に失敗し、fallback_to_while_loopがFalseの場合。</target>
        </trans-unit>
        <trans-unit id="6ab9ab3db6068354900613f2c4625d2d8e843adc" translate="yes" xml:space="preserve">
          <source>If vectorization of jacobian computation fails or if first dimension of &lt;code&gt;target&lt;/code&gt; and &lt;code&gt;source&lt;/code&gt; do not match.</source>
          <target state="translated">If vectorization of jacobian computation fails or if first dimension of &lt;code&gt;target&lt;/code&gt; and &lt;code&gt;source&lt;/code&gt; do not match.</target>
        </trans-unit>
        <trans-unit id="6afc73dd15833cabdb9c1824eeedbffd6886893b" translate="yes" xml:space="preserve">
          <source>If vectorization of jacobian computation fails.</source>
          <target state="translated">ヤコビアン計算のベクトル化に失敗した場合。</target>
        </trans-unit>
        <trans-unit id="2c17ad3469647662115f724bb24589b2f2fe2137" translate="yes" xml:space="preserve">
          <source>If we cannot talk to a TPU worker after retrying or if the number of TPU devices per host is different.</source>
          <target state="translated">リトライしてもTPUワーカーと話ができない場合や、ホストごとのTPUデバイス数が異なる場合。</target>
        </trans-unit>
        <trans-unit id="bb2d3ade5eb0388154905624037e8e2403cf867e" translate="yes" xml:space="preserve">
          <source>If we had the following files on our filesystem:</source>
          <target state="translated">以下のようなファイルがファイルシステムにあったとします。</target>
        </trans-unit>
        <trans-unit id="bdb844cd4d2f332924e15531b086460f3069fb1e" translate="yes" xml:space="preserve">
          <source>If we had the following files on our filesystem: - /path/to/dir/a.txt - /path/to/dir/b.py - /path/to/dir/c.py If we pass &quot;/path/to/dir/*.py&quot; as the directory, the dataset would produce: - /path/to/dir/b.py - /path/to/dir/c.py</source>
          <target state="translated">ファイルシステム上に以下のファイルがあるとします:-/path/to/dir/a.txt-/path/to/dir/b.py-/path/to/dir/c.py &quot;/path/to/dir/*.py&quot; をディレクトリとして渡すと、データセットは次のようになります。-/path/to/dir/b.py-/path/to/dir/c.py</target>
        </trans-unit>
        <trans-unit id="c56249ff57de445c0d669230b1aed90585bd8f33" translate="yes" xml:space="preserve">
          <source>If we mark the pixels in the input image which are taken for the output with &lt;code&gt;*&lt;/code&gt;, we see the pattern:</source>
          <target state="translated">出力用に取得された入力画像のピクセルを &lt;code&gt;*&lt;/code&gt; でマークすると、次のパターンが表示されます。</target>
        </trans-unit>
        <trans-unit id="1ae663933de0e8928039055bec37a56ddb299b82" translate="yes" xml:space="preserve">
          <source>If we pass &quot;/path/to/dir/*.py&quot; as the directory, the dataset would produce:</source>
          <target state="translated">ディレクトリとして&quot;/path/to/dir/*.py &quot;を渡すと、データセットが生成されます。</target>
        </trans-unit>
        <trans-unit id="3e165b6980fcb6841fc0e5a5137adce0275712d9" translate="yes" xml:space="preserve">
          <source>If weight_column is used in &lt;code&gt;feature_columns&lt;/code&gt;.</source>
          <target state="translated">If weight_column is used in &lt;code&gt;feature_columns&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cf89ab89e64bfcf039295e9f006b5cf17e441357" translate="yes" xml:space="preserve">
          <source>If with the default behavior you are still seeing errors of the form &quot;Connecting to invalid output X of source node Y which has Z outputs&quot; try setting &lt;a href=&quot;output_all_intermediates&quot;&gt;&lt;code&gt;tf.compat.v1.experimental.output_all_intermediates(True)&lt;/code&gt;&lt;/a&gt; and please file an issue at https://github.com/tensorflow/tensorflow/issues.</source>
          <target state="translated">デフォルトの動作でも、「Z出力を持つソースノードYの無効な出力Xに接続しています」という形式のエラーが引き続き表示される場合は、&lt;a href=&quot;output_all_intermediates&quot;&gt; &lt;code&gt;tf.compat.v1.experimental.output_all_intermediates(True)&lt;/code&gt; &lt;/a&gt;を設定して、https：で問題を報告してください。 //github.com/tensorflow/tensorflow/issues。</target>
        </trans-unit>
        <trans-unit id="179651235595979238d6d1b42291336cc1b0116d" translate="yes" xml:space="preserve">
          <source>If writing your own layer, it is recommended to accept tensors only in the first argument. This way, all tensors are casted to the layer's compute dtype. &lt;code&gt;MyLayer&lt;/code&gt; should therefore be written as:</source>
          <target state="translated">If writing your own layer, it is recommended to accept tensors only in the first argument. This way, all tensors are casted to the layer's compute dtype. &lt;code&gt;MyLayer&lt;/code&gt; should therefore be written as:</target>
        </trans-unit>
        <trans-unit id="8bb0682ea4f5a735a707df158e50587d8f0af257" translate="yes" xml:space="preserve">
          <source>If wrong keyword arguments are provided.</source>
          <target state="translated">間違ったキーワード引数が提供された場合。</target>
        </trans-unit>
        <trans-unit id="34be2be24c5f0073337a7cac4785baf1c58af41e" translate="yes" xml:space="preserve">
          <source>If x is a SparseTensor, returns SparseTensor(x.indices, tf.math.sign(x.values, ...), x.dense_shape).</source>
          <target state="translated">x が SparseTensor の場合,SparseTensor(x.indices,tf.math.sign(x.value,...),x.dense_shape)を返します.</target>
        </trans-unit>
        <trans-unit id="66c552947837446cda68c94afb3c12def67506f5" translate="yes" xml:space="preserve">
          <source>If x is not list, but any other type.</source>
          <target state="translated">xがリストではなく、他の型の場合。</target>
        </trans-unit>
        <trans-unit id="6da86ecefe3f269e32bca33996606c1bbf1c5d57" translate="yes" xml:space="preserve">
          <source>If you are creating many models in a loop, this global state will consume an increasing amount of memory over time, and you may want to clear it. Calling &lt;code&gt;clear_session()&lt;/code&gt; releases the global state: this helps avoid clutter from old models and layers, especially when memory is limited.</source>
          <target state="translated">If you are creating many models in a loop, this global state will consume an increasing amount of memory over time, and you may want to clear it. Calling &lt;code&gt;clear_session()&lt;/code&gt; releases the global state: this helps avoid clutter from old models and layers, especially when memory is limited.</target>
        </trans-unit>
        <trans-unit id="3520c54d6dc04ce1b07ddaf989e991f6131aee9c" translate="yes" xml:space="preserve">
          <source>If you are implementing a ClusterResolver that works in both the Google environment and the open-source world (for instance, a TPU ClusterResolver or similar), you will have to return the appropriate string depending on the environment, which you will have to detect.</source>
          <target state="translated">Google環境でもオープンソースの世界でも動作するClusterResolverを実装している場合(例えばTPUのClusterResolverなど)、環境に応じて適切な文字列を返す必要がありますので、それを検出する必要があります。</target>
        </trans-unit>
        <trans-unit id="811aed6a83297431f65eb3e17b9462a562e7f734" translate="yes" xml:space="preserve">
          <source>If you are not using these and you want to average gradients, you should use &lt;a href=&quot;../../math/reduce_sum&quot;&gt;&lt;code&gt;tf.math.reduce_sum&lt;/code&gt;&lt;/a&gt; to add up your per-example losses and then divide by the global batch size. Note that when using &lt;a href=&quot;../../distribute/strategy&quot;&gt;&lt;code&gt;tf.distribute.Strategy&lt;/code&gt;&lt;/a&gt;, the first component of a tensor's shape is the &lt;em&gt;replica-local&lt;/em&gt; batch size, which is off by a factor equal to the number of replicas being used to compute a single step. As a result, using &lt;a href=&quot;../../math/reduce_mean&quot;&gt;&lt;code&gt;tf.math.reduce_mean&lt;/code&gt;&lt;/a&gt; will give the wrong answer, resulting in gradients that can be many times too big.</source>
          <target state="translated">これらを使用せず、勾配を平均化したい場合は、&lt;a href=&quot;../../math/reduce_sum&quot;&gt; &lt;code&gt;tf.math.reduce_sum&lt;/code&gt; &lt;/a&gt;を使用してサンプルごとの損失を合計し、グローバルバッチサイズで除算する必要があります。&lt;a href=&quot;../../distribute/strategy&quot;&gt; &lt;code&gt;tf.distribute.Strategy&lt;/code&gt; &lt;/a&gt;を使用する場合、テンソルの形状の最初のコンポーネントは&lt;em&gt;レプリカローカル&lt;/em&gt;バッチサイズであり、これは、単一ステップの計算に使用されるレプリカの数と等しい係数でオフになっています。その結果、&lt;a href=&quot;../../math/reduce_mean&quot;&gt; &lt;code&gt;tf.math.reduce_mean&lt;/code&gt; &lt;/a&gt;を使用すると誤った答えが返され、勾配が何度も大きくなりすぎる可能性があります。</target>
        </trans-unit>
        <trans-unit id="59f63bd02d496354bd6dba5b7411d9b6c135d1dc" translate="yes" xml:space="preserve">
          <source>If you are using a tf.estimator.Estimator, this will automatically be called during training.</source>
          <target state="translated">tf.estimator.Estimatorを使用している場合は、トレーニング中に自動的に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="2c2917c6169e51767f3a1cf473ef3869b6db63a6" translate="yes" xml:space="preserve">
          <source>If you are writing a custom training loop, you will need to call a few more methods, &lt;a href=&quot;https://www.tensorflow.org/guide/distributed_training#using_tfdistributestrategy_with_custom_training_loops&quot;&gt;see the guide&lt;/a&gt;:</source>
          <target state="translated">カスタムトレーニングループを記述している場合は、さらにいくつかのメソッドを呼び出す必要があり&lt;a href=&quot;https://www.tensorflow.org/guide/distributed_training#using_tfdistributestrategy_with_custom_training_loops&quot;&gt;ます。ガイドを参照してください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a7892158ce0223192ea1db18bc5c647fa4e1ee34" translate="yes" xml:space="preserve">
          <source>If you call the scaffold constructor without any arguments, it will pick pieces from the collections, creating default ones if needed when &lt;code&gt;scaffold.finalize()&lt;/code&gt; is called. You can pass arguments to the constructor to provide your own pieces. Pieces that you pass to the constructor are not added to the graph collections.</source>
          <target state="translated">引数なしでscaffoldコンストラクターを呼び出すと、コレクションから断片が選択され、 &lt;code&gt;scaffold.finalize()&lt;/code&gt; が呼び出されたときに必要に応じてデフォルトの断片が作成されます。コンストラクタに引数を渡して、独自のピースを提供できます。コンストラクターに渡したピースは、グラフコレクションに追加されません。</target>
        </trans-unit>
        <trans-unit id="dc4b64fc1392f71d3b32889d1028fdf4c14a5708" translate="yes" xml:space="preserve">
          <source>If you call this method multiple times during in a test, it will return the same folder. However, across different runs the directories will be different. This will ensure that across different runs tests will not be able to pollute each others environment. If you need multiple unique directories within a single test, you should use tempfile.mkdtemp as follows: tempfile.mkdtemp(dir=self.get_temp_dir()):</source>
          <target state="translated">テスト中にこのメソッドを複数回呼び出すと、同じフォルダを返します。しかし、異なる実行ではディレクトリは異なります。これにより、異なる実行中のテストがお互いの環境を汚染することがないようになります。一つのテスト内で複数のユニークなディレクトリが必要な場合は、次のように tempfile.mkdtemp を使用する必要があります:tempfile.mkdtemp(dir=self.get_temp_dir()).</target>
        </trans-unit>
        <trans-unit id="a3580f3a4d3112463848bcded904b9614c30e36b" translate="yes" xml:space="preserve">
          <source>If you create several savers, you can specify a different filename for the protocol buffer file in the call to &lt;code&gt;save()&lt;/code&gt;.</source>
          <target state="translated">複数のセーバーを作成する場合、 &lt;code&gt;save()&lt;/code&gt; の呼び出しでプロトコルバッファーファイルに別のファイル名を指定できます。</target>
        </trans-unit>
        <trans-unit id="28103958dfc2a16c0c732f42cc7e814e32d142b8" translate="yes" xml:space="preserve">
          <source>If you did not pass &lt;code&gt;dtype=inputs.dtype&lt;/code&gt; to &lt;a href=&quot;../../../random/normal&quot;&gt;&lt;code&gt;tf.random.normal&lt;/code&gt;&lt;/a&gt;, a &lt;code&gt;TypeError&lt;/code&gt; would have occurred. This is because the dtype defaults to &lt;code&gt;&quot;float32&quot;&lt;/code&gt;, so the layer would only work if the inputs were float32.</source>
          <target state="translated">If you did not pass &lt;code&gt;dtype=inputs.dtype&lt;/code&gt; to &lt;a href=&quot;../../../random/normal&quot;&gt; &lt;code&gt;tf.random.normal&lt;/code&gt; &lt;/a&gt;, a &lt;code&gt;TypeError&lt;/code&gt; would have occurred. This is because the dtype defaults to &lt;code&gt;&quot;float32&quot;&lt;/code&gt; , so the layer would only work if the inputs were float32.</target>
        </trans-unit>
        <trans-unit id="4b3c655b2c0cd15900dc6ea65570d055839af0e8" translate="yes" xml:space="preserve">
          <source>If you have a single image of shape &lt;code&gt;[height, width, channels]&lt;/code&gt;:</source>
          <target state="translated">If you have a single image of shape &lt;code&gt;[height, width, channels]&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="64d1cb8a274c0bbb6c61df5f30bfb914148bc1ce" translate="yes" xml:space="preserve">
          <source>If you have a sparse tensor with shape &lt;code&gt;[height, width, depth]&lt;/code&gt;:</source>
          <target state="translated">If you have a sparse tensor with shape &lt;code&gt;[height, width, depth]&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="643bb410030ee559023f612081129a136d785967" translate="yes" xml:space="preserve">
          <source>If you have a trained graph containing Variable ops, it can be convenient to convert them all to Const ops holding the same values. This makes it possible to describe the network fully with a single GraphDef file, and allows the removal of a lot of ops related to loading and saving the variables.</source>
          <target state="translated">訓練されたグラフに Variable ops を含んでいる場合、それらをすべて同じ値を持つ Const ops に変換すると便利です。これにより、1つのGraphDefファイルでネットワークを完全に記述することが可能になり、変数のロードと保存に関連する多くの操作を削除することができます。</target>
        </trans-unit>
        <trans-unit id="cbbe35a21e92354b6099726c1f1b63c090066bd0" translate="yes" xml:space="preserve">
          <source>If you have installed TensorFlow with pip, you should be able to launch TensorBoard from the command line:</source>
          <target state="translated">pipでTensorFlowをインストールしていれば、コマンドラインからTensorBoardを起動できるはずです。</target>
        </trans-unit>
        <trans-unit id="016085ae26a60bbb61348962a0dfeec05c644fd2" translate="yes" xml:space="preserve">
          <source>If you intend to create your own optimization algorithm, simply inherit from this class and override the following methods:</source>
          <target state="translated">独自の最適化アルゴリズムを作成する場合は、このクラスを継承し、以下のメソッドをオーバーライドするだけです。</target>
        </trans-unit>
        <trans-unit id="7a4975dd1a9a628301d8fcc46c4c1c4006240c2f" translate="yes" xml:space="preserve">
          <source>If you need to create a variable with an initial value dependent on another variable, use the other variable's &lt;code&gt;initialized_value()&lt;/code&gt;. This ensures that variables are initialized in the right order.</source>
          <target state="translated">別の変数に依存する初期値を持つ変数を作成する必要がある場合は、他の変数の &lt;code&gt;initialized_value()&lt;/code&gt; を使用してください。これにより、変数が正しい順序で初期化されます。</target>
        </trans-unit>
        <trans-unit id="0dc17bf51002e45117b6f345986483c155902a03" translate="yes" xml:space="preserve">
          <source>If you pass a &lt;code&gt;Graph&lt;/code&gt; to the constructor it is added to the event file. (This is equivalent to calling &lt;code&gt;add_graph()&lt;/code&gt; later).</source>
          <target state="translated">&lt;code&gt;Graph&lt;/code&gt; をコンストラクタに渡すと、イベントファイルに追加されます。（これは後で &lt;code&gt;add_graph()&lt;/code&gt; を呼び出すのと同じです）。</target>
        </trans-unit>
        <trans-unit id="3b597fd2dcc48bc48d2628a974c7978b906354cd" translate="yes" xml:space="preserve">
          <source>If you should use &lt;code&gt;_distributed_apply()&lt;/code&gt; instead.</source>
          <target state="translated">If you should use &lt;code&gt;_distributed_apply()&lt;/code&gt; instead.</target>
        </trans-unit>
        <trans-unit id="2781f7468959178d029e9786cd7a67e84aa2b60a" translate="yes" xml:space="preserve">
          <source>If you subclass &lt;code&gt;Model&lt;/code&gt;, you can optionally have a &lt;code&gt;training&lt;/code&gt; argument (boolean) in &lt;code&gt;call&lt;/code&gt;, which you can use to specify a different behavior in training and inference:</source>
          <target state="translated">&lt;code&gt;Model&lt;/code&gt; をサブクラス化する場合、オプションで &lt;code&gt;call&lt;/code&gt; に &lt;code&gt;training&lt;/code&gt; 引数（ブール値）を含めることができます。これを使用して、トレーニングと推論で異なる動作を指定できます。</target>
        </trans-unit>
        <trans-unit id="d5da8bcdbe00cdaa6f02c6698e68c0a2734bda5f" translate="yes" xml:space="preserve">
          <source>If you use infrastructure or other tooling that relies on Estimators, you can still build a Keras model and use model_to_estimator to convert the Keras model to an Estimator for use with downstream systems.</source>
          <target state="translated">インフラストラクチャやその他のツールがEstimatorに依存している場合でも、Kerasモデルを構築し、model_to_estimatorを使用してKerasモデルをEstimatorに変換して、下流のシステムで使用することができます。</target>
        </trans-unit>
        <trans-unit id="14b4c4dfa2247d3068e5eb1177e034e3d1c73d48" translate="yes" xml:space="preserve">
          <source>If you want to avoid copying, you can use the &lt;code&gt;tensor()&lt;/code&gt; function to get a numpy buffer pointing to the input buffer in the tflite interpreter.</source>
          <target state="translated">コピーを避けたい場合は、 &lt;code&gt;tensor()&lt;/code&gt; 関数を使用して、tfliteインタープリターの入力バッファーを指すnumpyバッファーを取得できます。</target>
        </trans-unit>
        <trans-unit id="30064acebab6ecca146a1290566e335cd8e88f84" translate="yes" xml:space="preserve">
          <source>If you want to change the shape of a variable later you have to use an &lt;code&gt;assign&lt;/code&gt; Op with &lt;code&gt;validate_shape=False&lt;/code&gt;.</source>
          <target state="translated">後で変数の形状を変更する場合は、 &lt;code&gt;validate_shape=False&lt;/code&gt; を指定して &lt;code&gt;assign&lt;/code&gt; Op を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="1e9d13dc74d0a69d3dde9828649eff4bfd882d5c" translate="yes" xml:space="preserve">
          <source>If you want to obfuscate the hashed output, you can also pass a random &lt;code&gt;salt&lt;/code&gt; argument in the constructor. In that case, the layer will use the &lt;a href=&quot;https://github.com/google/highwayhash&quot;&gt;SipHash64&lt;/a&gt; hash function, with the &lt;code&gt;salt&lt;/code&gt; value serving as additional input to the hash function.</source>
          <target state="translated">If you want to obfuscate the hashed output, you can also pass a random &lt;code&gt;salt&lt;/code&gt; argument in the constructor. In that case, the layer will use the &lt;a href=&quot;https://github.com/google/highwayhash&quot;&gt;SipHash64&lt;/a&gt; hash function, with the &lt;code&gt;salt&lt;/code&gt; value serving as additional input to the hash function.</target>
        </trans-unit>
        <trans-unit id="62aa5f24c44d925f32d0da5e3403123315297df8" translate="yes" xml:space="preserve">
          <source>If you want to retrieve the Dimension instance corresponding to a certain index in a TensorShape instance, use this utility, like this:</source>
          <target state="translated">TensorShapeインスタンスの特定のインデックスに対応するDimensionインスタンスを取得したい場合は、このようなユーティリティを使用します。</target>
        </trans-unit>
        <trans-unit id="b8ffbf1a170d32110a5930f1952bac45b4d249c7" translate="yes" xml:space="preserve">
          <source>If you want to retry the training loop in case of preemption you can do it as follows:</source>
          <target state="translated">先制攻撃を受けた場合にトレーニングループを再試行したい場合は、以下のようにします。</target>
        </trans-unit>
        <trans-unit id="adc45763eb8027d619cccae315120edbed7cddbd" translate="yes" xml:space="preserve">
          <source>If you wish to avoid the copy, use &lt;code&gt;tensor()&lt;/code&gt;. This function cannot be used to read intermediate results.</source>
          <target state="translated">コピーを避けたい場合は、 &lt;code&gt;tensor()&lt;/code&gt; を使用してください。この関数を使用して中間結果を読み取ることはできません。</target>
        </trans-unit>
        <trans-unit id="cb43b900ca1b66e6594e59c48bc30ab315af1d0f" translate="yes" xml:space="preserve">
          <source>If your code needs tf.disable_control_flow_v2() to be called to work properly please file a bug.</source>
          <target state="translated">コードが正しく動作するために tf.disable_control_flow_v2()を呼び出す必要がある場合は、バグを報告してください。</target>
        </trans-unit>
        <trans-unit id="bb220fa51853484751849912116a41cad5054655" translate="yes" xml:space="preserve">
          <source>If your code needs tf.disable_resource_variables() to be called to work properly please file a bug.</source>
          <target state="translated">もしあなたのコードが正しく動作するために tf.disable_resource_variables()を呼び出す必要がある場合は、バグを報告してください。</target>
        </trans-unit>
        <trans-unit id="bd9af0a911d43ef76ca8009ab8b340966b03cf39" translate="yes" xml:space="preserve">
          <source>If your directory structure is:</source>
          <target state="translated">あなたのディレクトリ構造が</target>
        </trans-unit>
        <trans-unit id="5848859753847331f8db1042c28d2504dd35ba7f" translate="yes" xml:space="preserve">
          <source>If, however, the function is not expressible as a TensorFlow op, then use</source>
          <target state="translated">ただし,関数がTensorFlow opとして表現できない場合は</target>
        </trans-unit>
        <trans-unit id="9f96f3d16af9765cccba84d66825f4c203ba2397" translate="yes" xml:space="preserve">
          <source>Igamma</source>
          <target state="translated">Igamma</target>
        </trans-unit>
        <trans-unit id="f50fb74a9b438de96e68b1a585aafd4cb6f6d09e" translate="yes" xml:space="preserve">
          <source>IgammaGradA</source>
          <target state="translated">IgammaGradA</target>
        </trans-unit>
        <trans-unit id="7f4710aed5a69f33a81d3a0ee849c534177e5893" translate="yes" xml:space="preserve">
          <source>Igammac</source>
          <target state="translated">Igammac</target>
        </trans-unit>
        <trans-unit id="ea3708d0408dabca1e98f4d1dfe44e1dff457200" translate="yes" xml:space="preserve">
          <source>IgnoreErrorsDataset</source>
          <target state="translated">IgnoreErrorsDataset</target>
        </trans-unit>
        <trans-unit id="04737b2fc646203f8956213c304c3ff669721355" translate="yes" xml:space="preserve">
          <source>Imag</source>
          <target state="translated">Imag</target>
        </trans-unit>
        <trans-unit id="ad9de5a5ad019656d0e1d16433eb9b2e33cb4c7b" translate="yes" xml:space="preserve">
          <source>Image Adjustments</source>
          <target state="translated">画像の調整</target>
        </trans-unit>
        <trans-unit id="c42b5ea19e3b21d08dd7b7c8a4d6dfa69396f0bf" translate="yes" xml:space="preserve">
          <source>Image captioning with visual attention</source>
          <target state="translated">視覚的に注目した画像キャプション</target>
        </trans-unit>
        <trans-unit id="c57a791cfe94292451c577369e78dd317dacf038" translate="yes" xml:space="preserve">
          <source>Image classification</source>
          <target state="translated">画像分類</target>
        </trans-unit>
        <trans-unit id="b9dc38b92b74ab56c396229633605467280d3ad3" translate="yes" xml:space="preserve">
          <source>Image data format, can be either &quot;channels_first&quot; or &quot;channels_last&quot;. Defaults to &lt;code&gt;None&lt;/code&gt;, in which case the global setting &lt;a href=&quot;../../backend/image_data_format&quot;&gt;&lt;code&gt;tf.keras.backend.image_data_format()&lt;/code&gt;&lt;/a&gt; is used (unless you changed it, it defaults to &quot;channels_last&quot;).</source>
          <target state="translated">Image data format, can be either &quot;channels_first&quot; or &quot;channels_last&quot;. Defaults to &lt;code&gt;None&lt;/code&gt; , in which case the global setting &lt;a href=&quot;../../backend/image_data_format&quot;&gt; &lt;code&gt;tf.keras.backend.image_data_format()&lt;/code&gt; &lt;/a&gt; is used (unless you changed it, it defaults to &quot;channels_last&quot;).</target>
        </trans-unit>
        <trans-unit id="03bc4f1f3dc0b8877ffe7138fa5c01d4b1ed5f6f" translate="yes" xml:space="preserve">
          <source>Image data format, either &quot;channels_first&quot; or &quot;channels_last&quot;.</source>
          <target state="translated">画像データのフォーマットは、&quot;channels_first &quot;または &quot;channels_last &quot;のいずれかです。</target>
        </trans-unit>
        <trans-unit id="e99ccc1e8a027a31ba180fcc93dd7b3a5384bb01" translate="yes" xml:space="preserve">
          <source>Image data format, either &quot;channels_first&quot; or &quot;channels_last&quot;. &quot;channels_last&quot; mode means that the images should have shape &lt;code&gt;(samples, height, width, channels)&lt;/code&gt;, &quot;channels_first&quot; mode means that the images should have shape &lt;code&gt;(samples, channels, height, width)&lt;/code&gt;. It defaults to the &lt;code&gt;image_data_format&lt;/code&gt; value found in your Keras config file at &lt;code&gt;~/.keras/keras.json&lt;/code&gt;. If you never set it, then it will be &quot;channels_last&quot;.</source>
          <target state="translated">Image data format, either &quot;channels_first&quot; or &quot;channels_last&quot;. &quot;channels_last&quot; mode means that the images should have shape &lt;code&gt;(samples, height, width, channels)&lt;/code&gt; , &quot;channels_first&quot; mode means that the images should have shape &lt;code&gt;(samples, channels, height, width)&lt;/code&gt; . It defaults to the &lt;code&gt;image_data_format&lt;/code&gt; value found in your Keras config file at &lt;code&gt;~/.keras/keras.json&lt;/code&gt; . If you never set it, then it will be &quot;channels_last&quot;.</target>
        </trans-unit>
        <trans-unit id="2fd7056b6a4b9fce0b732dbb7496a4870360b85c" translate="yes" xml:space="preserve">
          <source>Image decoding and encoding</source>
          <target state="translated">画像の復号化と符号化</target>
        </trans-unit>
        <trans-unit id="09a69cfa619159e9e923882fbbb472ea75a854f3" translate="yes" xml:space="preserve">
          <source>Image ops work either on individual images or on batches of images, depending on the shape of their input Tensor.</source>
          <target state="translated">画像処理は、入力テンソルの形状に応じて、個々の画像または画像のバッチのいずれかで作業します。</target>
        </trans-unit>
        <trans-unit id="92b2aca7ed267b133c1905bcbc3ee8c0ced0047e" translate="yes" xml:space="preserve">
          <source>Image ops.</source>
          <target state="translated">イメージ・OPS。</target>
        </trans-unit>
        <trans-unit id="5bb3ad26e2fda3cd343bd1dc49196d9e2b80c785" translate="yes" xml:space="preserve">
          <source>Image processing</source>
          <target state="translated">画像処理</target>
        </trans-unit>
        <trans-unit id="de38a279dcdcd93610ed628ea92871220d9f71d2" translate="yes" xml:space="preserve">
          <source>Image processing and decoding ops.</source>
          <target state="translated">画像処理・復号化業務</target>
        </trans-unit>
        <trans-unit id="1f104cd249212e0c24d68445f341b223f49368be" translate="yes" xml:space="preserve">
          <source>Image resizing layer.</source>
          <target state="translated">画像のリサイズレイヤー。</target>
        </trans-unit>
        <trans-unit id="ba7c6b63a88cb374ff63fc7f30662360ee0eafa4" translate="yes" xml:space="preserve">
          <source>Image segmentation</source>
          <target state="translated">画像のセグメンテーション</target>
        </trans-unit>
        <trans-unit id="549ffedf349ced70c3596d6a5af3e5e9f2f85606" translate="yes" xml:space="preserve">
          <source>Image tensor with shape [batch_size, h, w, d] and type float32 or float64. The image(s) must be 2x2 or larger.</source>
          <target state="translated">画像テンソルは,形状 [batch_size,h,w,d]で,型は float32 または float64 です.画像は2x2以上でなければなりません.</target>
        </trans-unit>
        <trans-unit id="1679853a715a13372b9dbba5c8e3dee507c85e51" translate="yes" xml:space="preserve">
          <source>ImageProjectiveTransformV2</source>
          <target state="translated">ImageProjectiveTransformV2</target>
        </trans-unit>
        <trans-unit id="05d0d38956d6d758e651d5df3fe161d5df79ca6f" translate="yes" xml:space="preserve">
          <source>ImageSummary</source>
          <target state="translated">ImageSummary</target>
        </trans-unit>
        <trans-unit id="6b5de061768f5b63882ed2d718f0716548970fc8" translate="yes" xml:space="preserve">
          <source>Images that are represented using floating point values are expected to have values in the range [0,1). Image data stored in integer data types are expected to have values in the range &lt;code&gt;[0,MAX]&lt;/code&gt;, where &lt;code&gt;MAX&lt;/code&gt; is the largest positive representable number for the data type.</source>
          <target state="translated">浮動小数点値を使用して表される画像は、[0,1）の範囲の値を持つことが期待されています。整数データ型で保存された画像データは、 &lt;code&gt;[0,MAX]&lt;/code&gt; 範囲の値を持つことが期待されます。ここで、 &lt;code&gt;MAX&lt;/code&gt; はデータ型の正の表現可能な最大数です。</target>
        </trans-unit>
        <trans-unit id="ccc97dec6d4395a74fe2285c4a5cffe536e82bbb" translate="yes" xml:space="preserve">
          <source>Images to adjust. At least 3-D.</source>
          <target state="translated">調整するための画像。せめて3Dで。</target>
        </trans-unit>
        <trans-unit id="1cfb47d7a3d4989535a89f1c2c00a918608b2b94" translate="yes" xml:space="preserve">
          <source>ImmutableConst</source>
          <target state="translated">ImmutableConst</target>
        </trans-unit>
        <trans-unit id="012973862f6d580b577f1ca55fe2d5d026bfe3a4" translate="yes" xml:space="preserve">
          <source>Implement serialization via &lt;code&gt;get_config()&lt;/code&gt; and &lt;code&gt;from_config()&lt;/code&gt;. Note that the recommended way to create new RNN layers is to write a custom RNN cell and use it with &lt;a href=&quot;rnn&quot;&gt;&lt;code&gt;keras.layers.RNN&lt;/code&gt;&lt;/a&gt;, instead of subclassing &lt;a href=&quot;layer&quot;&gt;&lt;code&gt;keras.layers.Layer&lt;/code&gt;&lt;/a&gt; directly.</source>
          <target state="translated">Implement serialization via &lt;code&gt;get_config()&lt;/code&gt; and &lt;code&gt;from_config()&lt;/code&gt; . Note that the recommended way to create new RNN layers is to write a custom RNN cell and use it with &lt;a href=&quot;rnn&quot;&gt; &lt;code&gt;keras.layers.RNN&lt;/code&gt; &lt;/a&gt;, instead of subclassing &lt;a href=&quot;layer&quot;&gt; &lt;code&gt;keras.layers.Layer&lt;/code&gt; &lt;/a&gt; directly.</target>
        </trans-unit>
        <trans-unit id="8bcae14734b26e859d782e85cd6d711a5ef2255b" translate="yes" xml:space="preserve">
          <source>Implementation mode, either 1 or 2. Mode 1 will structure its operations as a larger number of smaller dot products and additions, whereas mode 2 (default) will batch them into fewer, larger operations. These modes will have different performance profiles on different hardware and for different applications. Default: 2.</source>
          <target state="translated">実装モード。モード1では、より小さなドット積と加算の数が多くなるように演算が構成されますが、モード2(デフォルト)では、より少ない数の大きな演算にバッチ処理されます。こ れ ら のモー ド は、 ハー ド ウ ェ アやアプ リ ケーシ ョ ンに よ っ て性能が異な り ます。デフォルト:2。</target>
        </trans-unit>
        <trans-unit id="7b9a2fe91a457a38eea4454f2e5c0a2dfb6358ae" translate="yes" xml:space="preserve">
          <source>Implementation mode, either 1 or 2. Mode 1 will structure its operations as a larger number of smaller dot products and additions, whereas mode 2 will batch them into fewer, larger operations. These modes will have different performance profiles on different hardware and for different applications.</source>
          <target state="translated">実装モードは、1または2のいずれかです。モード1では、より多くの小さなドット積と加算として演算を構成しますが、モード2では、少数のより大きな演算に一括して処理を行います。これらのモードは、ハードウェアやアプリケーションによって性能プロファイルが異なります。</target>
        </trans-unit>
        <trans-unit id="d338df7aebbbd96f6ef415f339b2419e491891fb" translate="yes" xml:space="preserve">
          <source>Implementation mode, either 1 or 2. Mode 1 will structure its operations as a larger number of smaller dot products and additions, whereas mode 2 will batch them into fewer, larger operations. These modes will have different performance profiles on different hardware and for different applications. Default: 2.</source>
          <target state="translated">実装モードは、1または2のいずれかです。モード1では、より多くの小さなドット積と加算として演算を構成しますが、モード2では、少数のより大きな演算に一括して処理を行います。こ れ ら のモー ド は、 ハー ド ウ ェ アやアプ リ ケーシ ョ ンに よ っ て性能が異な り ます。デ フ ォル ト:2。</target>
        </trans-unit>
        <trans-unit id="81ae76c5a033525b9bebb71fc5faddfefe6500ee" translate="yes" xml:space="preserve">
          <source>Implementation of a ClusterResolver which reads the TF_CONFIG EnvVar.</source>
          <target state="translated">TF_CONFIG EnvVarを読み込むClusterResolverの実装。</target>
        </trans-unit>
        <trans-unit id="d540ae9790266c43ea448cc58760dee1f4459524" translate="yes" xml:space="preserve">
          <source>Implementation of broadcast the &lt;code&gt;tensor&lt;/code&gt; to destinations.</source>
          <target state="translated">&lt;code&gt;tensor&lt;/code&gt; を宛先にブロードキャストする実装。</target>
        </trans-unit>
        <trans-unit id="ed2e87a0db4ddf68319e3f3abca999b37869d878" translate="yes" xml:space="preserve">
          <source>Implementation of reduce PerReplica objects in a batch.</source>
          <target state="translated">バッチでのPerReplicaオブジェクトのリデュースの実装。</target>
        </trans-unit>
        <trans-unit id="e8639a6ef1f4702b490c2cdeb6e50d5693132a19" translate="yes" xml:space="preserve">
          <source>Implementation of the Keras API meant to be a high-level API for TensorFlow.</source>
          <target state="translated">Keras APIの実装は、TensorFlowのための高レベルAPIであることを意味しています。</target>
        </trans-unit>
        <trans-unit id="89723e13fc88450d8f0a38ed3d90958d12a4e396" translate="yes" xml:space="preserve">
          <source>Implementation of the scikit-learn classifier API for Keras.</source>
          <target state="translated">Keras用のscikit-learn分類器APIの実装。</target>
        </trans-unit>
        <trans-unit id="7de56b2d26746dd73b9fcddfd1c104e0c913f8f8" translate="yes" xml:space="preserve">
          <source>Implementation of the scikit-learn regressor API for Keras.</source>
          <target state="translated">Keras用のscikit-learn regressor APIの実装。</target>
        </trans-unit>
        <trans-unit id="08c5c38cccf1eb318b9ecd19fdc9f41a46cfbb1e" translate="yes" xml:space="preserve">
          <source>Implemented using a Queue -- a &lt;code&gt;QueueRunner&lt;/code&gt; for the Queue is added to the current &lt;code&gt;Graph&lt;/code&gt;'s &lt;code&gt;QUEUE_RUNNER&lt;/code&gt; collection.</source>
          <target state="translated">キューを使用して実装されます-キューの &lt;code&gt;QueueRunner&lt;/code&gt; が現在の &lt;code&gt;Graph&lt;/code&gt; の &lt;code&gt;QUEUE_RUNNER&lt;/code&gt; コレクションに追加されます。</target>
        </trans-unit>
        <trans-unit id="99ad440c7b2df497d09111d62c37946bec231ffe" translate="yes" xml:space="preserve">
          <source>Implemented with GPU-compatible ops and supports gradients.</source>
          <target state="translated">GPU対応のOPSで実装され、グラデーションにも対応しています。</target>
        </trans-unit>
        <trans-unit id="131bd86e21be57724f2b5e9ee7e658b5ecb52043" translate="yes" xml:space="preserve">
          <source>Implemented with TPU/GPU-compatible ops and supports gradients.</source>
          <target state="translated">TPU/GPU対応のOPSで実装され、グラデーションをサポートしています。</target>
        </trans-unit>
        <trans-unit id="597f3136a6ebd70744437c04d68554ff073fbb6c" translate="yes" xml:space="preserve">
          <source>Implementors of this function must take care in ensuring that the ClusterSpec returned is up-to-date at the time of calling this function. This usually means retrieving the information from the underlying cluster management system every time this function is invoked and reconstructing a cluster_spec, rather than attempting to cache anything.</source>
          <target state="translated">この関数の実装者は、この関数を呼び出した時点で返される ClusterSpec が最新であることを保証するように注意しなければなりません。これは通常、この関数が呼び出されるたびに基礎となるクラスタ管理システムから情報を取得し、何かをキャッシュしようとするのではなく、cluster_specを再構築することを意味します。</target>
        </trans-unit>
        <trans-unit id="6d2f9e9adc660c2a8db8b19c19593d1554adf0a2" translate="yes" xml:space="preserve">
          <source>Implementors of this function must take care in ensuring that the master returned is up-to-date at the time to calling this function. This usually means retrieving the master every time this function is invoked.</source>
          <target state="translated">この関数の実装者は、返されるマスターがこの関数を呼び出す時点で最新のものであることを確認するように注意しなければなりません。これは通常、この関数が呼び出されるたびにマスターを取得することを意味します。</target>
        </trans-unit>
        <trans-unit id="f959bfc7a5d94e9325629ea88125d58bf26d97e5" translate="yes" xml:space="preserve">
          <source>Implements categorical feature hashing, also known as &quot;hashing trick&quot;.</source>
          <target state="translated">ハッシュトリック」としても知られるカテゴリ特徴量ハッシュを実装します。</target>
        </trans-unit>
        <trans-unit id="dc7a1efdef9331be59eaffeca4ae1e2cd8a5e8f2" translate="yes" xml:space="preserve">
          <source>Implements generalized Tensor contraction and reduction. Each input Tensor must have a corresponding input subscript appearing in the comma-separated left-hand side of the equation. The right-hand side of the equation consists of the output subscript. The input subscripts and the output subscript should consist of zero or more named axis labels and at most one ellipsis (&lt;code&gt;...&lt;/code&gt;).</source>
          <target state="translated">Implements generalized Tensor contraction and reduction. Each input Tensor must have a corresponding input subscript appearing in the comma-separated left-hand side of the equation. The right-hand side of the equation consists of the output subscript. The input subscripts and the output subscript should consist of zero or more named axis labels and at most one ellipsis ( &lt;code&gt;...&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="a52c4746cca5aa22e651ddd176b154ea55d83a22" translate="yes" xml:space="preserve">
          <source>Implicit Reparameterization Gradients: &lt;a href=&quot;http://papers.nips.cc/paper/7326-implicit-reparameterization-gradients&quot;&gt;Figurnov et al., 2018&lt;/a&gt; (&lt;a href=&quot;http://papers.nips.cc/paper/7326-implicit-reparameterization-gradients.pdf&quot;&gt;pdf&lt;/a&gt;)</source>
          <target state="translated">Implicit Reparameterization Gradients: &lt;a href=&quot;http://papers.nips.cc/paper/7326-implicit-reparameterization-gradients&quot;&gt;Figurnov et al., 2018&lt;/a&gt; (&lt;a href=&quot;http://papers.nips.cc/paper/7326-implicit-reparameterization-gradients.pdf&quot;&gt;pdf&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="b34153a7b6c2ed124d924be11081a13d32dadcc7" translate="yes" xml:space="preserve">
          <source>Implicit in the &lt;code&gt;tape.gradient&lt;/code&gt; call is a length-one vector which left-multiplies the Jacobian, a vector-Jacobian product.</source>
          <target state="translated">&lt;code&gt;tape.gradient&lt;/code&gt; 呼び出しで暗黙的に示されているのは、ベクトルとヤコビの積であるヤコビアンを左乗算する長さ1のベクトルです。</target>
        </trans-unit>
        <trans-unit id="6d5ca9be0a1bd2497683f94ed45157a705abee73" translate="yes" xml:space="preserve">
          <source>Import a GraphDef and convert it to a textual MLIR module.</source>
          <target state="translated">GraphDefをインポートして、テキストのMLIRモジュールに変換します。</target>
        </trans-unit>
        <trans-unit id="545c1126ae772bf7a2e6008df556dad256e5b169" translate="yes" xml:space="preserve">
          <source>Import router for absl.flags. See &lt;a href=&quot;https://github.com/abseil/abseil-py&quot;&gt;https://github.com/abseil/abseil-py&lt;/a&gt;</source>
          <target state="translated">Import router for absl.flags. See &lt;a href=&quot;https://github.com/abseil/abseil-py&quot;&gt;https://github.com/abseil/abseil-py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a3750f606daadb180526d7ccaf9a3482ec4910c6" translate="yes" xml:space="preserve">
          <source>Import router for absl.flags. See https://github.com/abseil/abseil-py.</source>
          <target state="translated">absl.flags用のルータをインポートします。https://github.com/abseil/abseil-py を参照してください。</target>
        </trans-unit>
        <trans-unit id="d3375d44e4b643dfc4f13312d4430da6429af78a" translate="yes" xml:space="preserve">
          <source>Import router for file_io.</source>
          <target state="translated">file_io用のルータをインポートします。</target>
        </trans-unit>
        <trans-unit id="c14a7d57f569579c21ce1fdc7d99c47f7db6b828" translate="yes" xml:space="preserve">
          <source>ImportError if HDF5 &amp;amp; h5py are not installed</source>
          <target state="translated">HDF5とh5pyがインストールされていない場合のImportError</target>
        </trans-unit>
        <trans-unit id="241bfbb99446e43904d0271d5420c06643897761" translate="yes" xml:space="preserve">
          <source>ImportEvent</source>
          <target state="translated">ImportEvent</target>
        </trans-unit>
        <trans-unit id="06cbfad937d0c9edcdf28651087ed18c71fcfcc4" translate="yes" xml:space="preserve">
          <source>Important caveats:</source>
          <target state="translated">重要な注意点</target>
        </trans-unit>
        <trans-unit id="d7515a79183f4fea6cdf71780ae3ef25fdf0ea35" translate="yes" xml:space="preserve">
          <source>Important note: This class &lt;em&gt;is not&lt;/em&gt; thread-safe for graph construction. All operations should be created from a single thread, or external synchronization must be provided. Unless otherwise specified, all methods are not thread-safe.</source>
          <target state="translated">重要な注意：このクラス&lt;em&gt;は&lt;/em&gt;グラフの構築に対してスレッドセーフで&lt;em&gt;はありません&lt;/em&gt;。すべての操作は単一のスレッドから作成するか、外部同期を提供する必要があります。特に指定のない限り、すべてのメソッドはスレッドセーフではありません。</target>
        </trans-unit>
        <trans-unit id="dee6dd71bc893fc99d70b2da2a20f8ba1b604f3f" translate="yes" xml:space="preserve">
          <source>Important note: This validator checks if flag values are None, and it does not distinguish between default and explicit values. Therefore, this validator does not make sense when applied to flags with default values other than None, including other false values (e.g. False, 0, '', []). That includes multi flags with a default value of [] instead of None.</source>
          <target state="translated">重要な注意:このバリデータはフラグの値が None であるかどうかをチェックし、 デフォルト値と明示的な値を区別しません。したがって、このバリデータは None 以外のデフォルト値を持つフラグに適用した場合には意味がありません (False,0,'',[])。これには、デフォルト値が None ではなく []である複数のフラグも含まれます。</target>
        </trans-unit>
        <trans-unit id="d8c7b39b8707e89a6e9ce5503ad33254f378a175" translate="yes" xml:space="preserve">
          <source>Imports the graph from &lt;code&gt;graph_def&lt;/code&gt; into the current default &lt;code&gt;Graph&lt;/code&gt;. (deprecated arguments)</source>
          <target state="translated">グラフを &lt;code&gt;graph_def&lt;/code&gt; から現在のデフォルトの &lt;code&gt;Graph&lt;/code&gt; にインポートします。（廃止された引数）</target>
        </trans-unit>
        <trans-unit id="fe4ad23456cf41a5fe35769340815f2088fbbdc4" translate="yes" xml:space="preserve">
          <source>In &quot;CONSTANT&quot; mode, the scalar pad value to use. Must be same type as &lt;code&gt;tensor&lt;/code&gt;.</source>
          <target state="translated">In &quot;CONSTANT&quot; mode, the scalar pad value to use. Must be same type as &lt;code&gt;tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="73407b35ca652d79b02dd24b5db9d02e3e0e5f03" translate="yes" xml:space="preserve">
          <source>In 'MIN_COMBINED' mode, each value of the tensor will undergo the following:</source>
          <target state="translated">'MIN_COMBINED'モードでは、テンソルの各値は次のようになります。</target>
        </trans-unit>
        <trans-unit id="5dc7fe91c429ae9bf237811621354fd582a8d06b" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;CentralStorageStrategy&lt;/code&gt; there is a single worker so the value returned will be all the values on that worker.</source>
          <target state="translated">で &lt;code&gt;CentralStorageStrategy&lt;/code&gt; 返された値が、その作業者のすべての値になりますので、単一のワーカーがあります。</target>
        </trans-unit>
        <trans-unit id="f911260e196d9d52bc11c1d245f364fa94ee6a5e" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;CentralStorageStrategy&lt;/code&gt;, &lt;code&gt;fn&lt;/code&gt; is called on each of the compute replicas, with the provided &quot;per replica&quot; arguments specific to that device.</source>
          <target state="translated">&lt;code&gt;CentralStorageStrategy&lt;/code&gt; 、 &lt;code&gt;fn&lt;/code&gt; そのデバイスに提供「レプリカ当たり」引数を特定して、コンピューティング・レプリカのそれぞれに呼ばれます。</target>
        </trans-unit>
        <trans-unit id="83a783316a9edd78ba1fd02d394a253388645aea" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;MultiWorkerMirroredStrategy&lt;/code&gt;, all variables created inside `strategy.scope() will be mirrored on all replicas of each worker. Moreover, it also sets a default device scope so that ops without specified devices will end up on the correct worker.</source>
          <target state="translated">で &lt;code&gt;MultiWorkerMirroredStrategy&lt;/code&gt; 、strategy.scope `内部で作成されたすべての変数は、（）各ワーカーのすべてのレプリカにミラーリングされます。さらに、デフォルトのデバイススコープも設定するため、デバイスを指定せずにopsを実行すると、正しいワーカーが実行されます。</target>
        </trans-unit>
        <trans-unit id="fc27e94172bcfc6d46e82386176739ca5f0a870a" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;OneDeviceStrategy&lt;/code&gt;, &lt;code&gt;fn&lt;/code&gt; is simply called within a device scope for the given device, with the provided arguments.</source>
          <target state="translated">&lt;code&gt;OneDeviceStrategy&lt;/code&gt; 、 &lt;code&gt;fn&lt;/code&gt; 単に指定された引数で指定されたデバイスのデバイス範囲と呼ばれます。</target>
        </trans-unit>
        <trans-unit id="a37b98485da84e0982814ff7b9a05e1c529e56f1" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;OneDeviceStrategy&lt;/code&gt;, all variables created inside &lt;code&gt;strategy.scope()&lt;/code&gt; will be on &lt;code&gt;device&lt;/code&gt; specified at strategy construction time. See example in the docs for this class.</source>
          <target state="translated">で &lt;code&gt;OneDeviceStrategy&lt;/code&gt; 、内部で作成されたすべての変数 &lt;code&gt;strategy.scope()&lt;/code&gt; になり &lt;code&gt;device&lt;/code&gt; 戦略の構築時に指定しました。このクラスのドキュメントの例を参照してください。</target>
        </trans-unit>
        <trans-unit id="89dca9293fe8e75256246ee570af4561031fe2c4" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;OneDeviceStrategy&lt;/code&gt;, the &lt;code&gt;value&lt;/code&gt; is always expected to be a single value, so the result is just the value in a tuple.</source>
          <target state="translated">で &lt;code&gt;OneDeviceStrategy&lt;/code&gt; 、 &lt;code&gt;value&lt;/code&gt; 結果がタプルの値だけがあるので、常に、単一の値であることが予想されます。</target>
        </trans-unit>
        <trans-unit id="5d17dc9c8bbe0f8426ef33525f3803ac13280d23" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;OneDeviceStrategy&lt;/code&gt;, there is only one replica, so if axis=None, value is simply returned. If axis is specified as something other than None, such as axis=0, value is reduced along that axis and returned.</source>
          <target state="translated">&lt;code&gt;OneDeviceStrategy&lt;/code&gt; 、軸=なし、値が単に戻されている場合、唯一のレプリカがあります。axis = 0など、None以外のものとして軸が指定されている場合、値はその軸に沿って削減されて返されます。</target>
        </trans-unit>
        <trans-unit id="64ad04a752452a82392f727330adb50f1b0ef1ed" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;PREDICT&lt;/code&gt; mode, only returns logits and predictions (&lt;code&gt;=tf.sigmoid(logits)&lt;/code&gt;), whereas &lt;code&gt;BinaryClassHead&lt;/code&gt; also returns probabilities, classes, and class_ids.</source>
          <target state="translated">&lt;code&gt;PREDICT&lt;/code&gt; モードのみlogits及び予測を返す（ &lt;code&gt;=tf.sigmoid(logits)&lt;/code&gt; ）、一方 &lt;code&gt;BinaryClassHead&lt;/code&gt; はまた確率、クラス、およびclass_idsを返します。</target>
        </trans-unit>
        <trans-unit id="f12d35a27cca8e8a6a072f66b7e466bedf447861" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;compact&lt;/code&gt; format the three diagonals are brought together into one tensor of shape &lt;code&gt;[..., 3, M]&lt;/code&gt;, with last two dimensions containing superdiagonals, diagonals, and subdiagonals, in order. Similarly to &lt;code&gt;sequence&lt;/code&gt; format, elements &lt;code&gt;diagonals[..., 0, M-1]&lt;/code&gt; and &lt;code&gt;diagonals[..., 2, 0]&lt;/code&gt; are ignored.</source>
          <target state="translated">&lt;code&gt;compact&lt;/code&gt; 形式3つの対角線は、形状の一のテンソルにまとめられる &lt;code&gt;[..., 3, M]&lt;/code&gt; 最後の二つの寸法が順番に、優、対角線、及び副対角を含むと、。 &lt;code&gt;sequence&lt;/code&gt; 形式と同様に、要素 &lt;code&gt;diagonals[..., 0, M-1]&lt;/code&gt; および &lt;code&gt;diagonals[..., 2, 0]&lt;/code&gt; は無視されます。</target>
        </trans-unit>
        <trans-unit id="66cbdb97f05830f246eaf05dcd7ae0826bf8f242" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;matrix&lt;/code&gt; format, &lt;code&gt;diagonals&lt;/code&gt; must be a tensor of shape &lt;code&gt;[..., M, M]&lt;/code&gt;, with two inner-most dimensions representing the square tridiagonal matrices. Elements outside of the three diagonals will be ignored.</source>
          <target state="translated">&lt;code&gt;matrix&lt;/code&gt; 形式、 &lt;code&gt;diagonals&lt;/code&gt; 形状のテンソルでなければならない &lt;code&gt;[..., M, M]&lt;/code&gt; 正方三重対角行列を表す2つの最も内側の寸法を有します。3つの対角線の外側の要素は無視されます。</target>
        </trans-unit>
        <trans-unit id="8148d8cfce5b0dec87e1cdaa0ca93570d75b1c32" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;numpy&lt;/code&gt; transposes are memory-efficient constant time operations as they simply return a new view of the same data with adjusted &lt;code&gt;strides&lt;/code&gt;.</source>
          <target state="translated">で &lt;code&gt;numpy&lt;/code&gt; の転置それらは単に調整と同じデータの新しいビューを返すように、メモリ効率の良い、一定時間操作されている &lt;code&gt;strides&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="02241eae37adc7c28b9d589b3d5cb723cc8b981e" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;sequence&lt;/code&gt; format, &lt;code&gt;diagonals&lt;/code&gt; are supplied as a tuple or list of three tensors of shapes &lt;code&gt;[..., N]&lt;/code&gt;, &lt;code&gt;[..., M]&lt;/code&gt;, &lt;code&gt;[..., N]&lt;/code&gt; representing superdiagonals, diagonals, and subdiagonals, respectively. &lt;code&gt;N&lt;/code&gt; can be either &lt;code&gt;M-1&lt;/code&gt; or &lt;code&gt;M&lt;/code&gt;; in the latter case, the last element of superdiagonal and the first element of subdiagonal will be ignored.</source>
          <target state="translated">&lt;code&gt;sequence&lt;/code&gt; 形式、 &lt;code&gt;diagonals&lt;/code&gt; タプルまたは形状の三のテンソルのリストとして提供されている &lt;code&gt;[..., N]&lt;/code&gt; 、 &lt;code&gt;[..., M]&lt;/code&gt; 、 &lt;code&gt;[..., N]&lt;/code&gt; はそれぞれ、対角、対角線、及び副対角を表します。 &lt;code&gt;N&lt;/code&gt; は &lt;code&gt;M-1&lt;/code&gt; または &lt;code&gt;M&lt;/code&gt; のいずれかです。後者の場合、superdiagonalの最後の要素とsubdiagonalの最初の要素は無視されます。</target>
        </trans-unit>
        <trans-unit id="5a812208d3ae75e4f5c273197394db05dc66f0f9" translate="yes" xml:space="preserve">
          <source>In Candidate Sampling, this operation facilitates virtually removing sampled classes which happen to match target classes. This is done in Sampled Softmax and Sampled Logistic.</source>
          <target state="translated">候補サンプリングでは,この操作により,ターゲット・クラスに一致するサンプルされたクラスを事実上削除することが容易になります.これはSampled SoftmaxとSampled Logisticで行われます。</target>
        </trans-unit>
        <trans-unit id="6d03c984270e6b66cc992ac2d4de0113fb1792f7" translate="yes" xml:space="preserve">
          <source>In Keras models, sometimes variables are created when the model is first called, instead of construction time. Examples include 1) sequential models without input shape pre-defined, or 2) subclassed models. Pass var_list as callable in these cases.</source>
          <target state="translated">Kerasモデルでは、構築時ではなく、モデルが最初に呼び出されたときに変数が作成されることがあります。例としては、1)入力形状が事前に定義されていない逐次モデルや、2)サブクラス化されたモデルなどがあります。これらのケースでは、var_list を呼び出し可能なものとして渡します。</target>
        </trans-unit>
        <trans-unit id="6d24dc0640eec7767c8580a01fe0f2534a32f8b6" translate="yes" xml:space="preserve">
          <source>In Python, this scatter add operation would look like this:</source>
          <target state="translated">Pythonでは、この散布追加操作は次のようになります。</target>
        </trans-unit>
        <trans-unit id="17844ec0dbf5e24da91f6ffe78f9342efe5f4f37" translate="yes" xml:space="preserve">
          <source>In Python, this scatter operation would look like this:</source>
          <target state="translated">Pythonでは、この散布操作は次のようになります。</target>
        </trans-unit>
        <trans-unit id="81965bf71c83e468654101016f87a74649d16e39" translate="yes" xml:space="preserve">
          <source>In Python, this scatter subtract operation would look like this:</source>
          <target state="translated">Pythonでは、この散布減算操作は次のようになります。</target>
        </trans-unit>
        <trans-unit id="3d8782d76c3f4b01f4fdcf84d62e403122ad04f2" translate="yes" xml:space="preserve">
          <source>In TF 2.0, &lt;a href=&quot;../../../../data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; objects are Python iterables which makes it possible to also create epochs through Python iteration:</source>
          <target state="translated">TF 2.0では、&lt;a href=&quot;../../../../data/dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt;オブジェクトはPythonの反復可能オブジェクトであり、Pythonの反復によりエポックを作成することもできます。</target>
        </trans-unit>
        <trans-unit id="ceb7ca0c46558f03e6086af25fef434bd7045721" translate="yes" xml:space="preserve">
          <source>In TF 2.0, &lt;a href=&quot;../../../data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; objects are Python iterables which makes it possible to also create epochs through Python iteration:</source>
          <target state="translated">TF 2.0では、&lt;a href=&quot;../../../data/dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt;オブジェクトはPythonの反復可能オブジェクトであり、Pythonの反復によりエポックを作成することもできます。</target>
        </trans-unit>
        <trans-unit id="9b30346591377f8c72aca3c84be793a8ed9d8c0f" translate="yes" xml:space="preserve">
          <source>In TF 2.0, &lt;a href=&quot;../dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; objects are Python iterables which makes it possible to also create epochs through Python iteration:</source>
          <target state="translated">TF 2.0では、&lt;a href=&quot;../dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt;オブジェクトはPythonの反復可能オブジェクトであり、Pythonの反復によりエポックを作成することもできます。</target>
        </trans-unit>
        <trans-unit id="48e9b024a95539e5d2ffaf50c0d7d26e7f011943" translate="yes" xml:space="preserve">
          <source>In TF 2.0, &lt;a href=&quot;dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; objects are Python iterables which makes it possible to also create epochs through Python iteration:</source>
          <target state="translated">TF 2.0では、&lt;a href=&quot;dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt;オブジェクトはPythonの反復可能オブジェクトであり、Pythonの反復によりエポックを作成することもできます。</target>
        </trans-unit>
        <trans-unit id="8fdae45e06a3d82dc5e8823e248b14458447ba71" translate="yes" xml:space="preserve">
          <source>In TensorFlow 1, only the &quot;infer&quot; policy is available.</source>
          <target state="translated">TensorFlow 1では、&quot;infer &quot;ポリシーのみが利用可能です。</target>
        </trans-unit>
        <trans-unit id="5252a64a0f9e26ac451b24dc3a78078e2d45a06e" translate="yes" xml:space="preserve">
          <source>In TensorFlow 2.0, iterating over a TensorShape instance returns values.</source>
          <target state="translated">TensorFlow 2.0では、TensorShapeインスタンスを反復処理すると値が返されます。</target>
        </trans-unit>
        <trans-unit id="4632390b454bb4fddbcccffafb20fab0ac9e532b" translate="yes" xml:space="preserve">
          <source>In TensorFlow 2.0, representing tensors as protos should no longer be a common workflow. That said, this utility function is still useful for generating TF Serving request protos:</source>
          <target state="translated">TensorFlow 2.0では、テンソルをprotosとして表現することは、もはや一般的なワークフローではないはずです。つまり、このユーティリティ関数はTFサービングリクエストのプロトスを生成するのに便利です。</target>
        </trans-unit>
        <trans-unit id="4d52755e5ee76e2c362b3006fe73af38e7a988b4" translate="yes" xml:space="preserve">
          <source>In TensorFlow distributed environment, each job may have an applicable task id, which is the index of the instance within its task type. This is useful when user needs to run specific code according to task index. For example,</source>
          <target state="translated">TensorFlow分散環境では、各ジョブは、タスクタイプ内のインスタンスのインデックスである適用可能なタスクIDを持つことがあります。これは、ユーザがタスクインデックスに従って特定のコードを実行する必要がある場合に便利です。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="3c85eb2376f8951b058a131e7a9b908f6bdef73c" translate="yes" xml:space="preserve">
          <source>In TensorFlow distributed environment, each job may have an applicable task type. Valid task types in TensorFlow include 'chief': a worker that is designated with more responsibility, 'worker': a regular worker for training/evaluation, 'ps': a parameter server, or 'evaluator': an evaluator that evaluates the checkpoints for metrics.</source>
          <target state="translated">TensorFlowの分散環境では、各ジョブには適用可能なタスクタイプがあります。TensorFlowで有効なタスクタイプとしては、「チーフ」:より責任を持って指定されたワーカー、「ワーカー」:トレーニングや評価のための通常のワーカー、「ps」:パラメータサーバ、「評価者」:メトリクスのチェックポイントを評価する評価者などがあります。</target>
        </trans-unit>
        <trans-unit id="1127e50fd25c3f8e9dda641959bbb9354598c6f4" translate="yes" xml:space="preserve">
          <source>In TensorFlow, &lt;a href=&quot;function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt;s are a common way to define graph execution.</source>
          <target state="translated">In TensorFlow, &lt;a href=&quot;function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt;s are a common way to define graph execution.</target>
        </trans-unit>
        <trans-unit id="e8db8f91b921bd7ce4f80fb0d9da7d36b0960f78" translate="yes" xml:space="preserve">
          <source>In V1, the exported CPU graph is &lt;code&gt;model_fn&lt;/code&gt; as it is. The exported TPU graph wraps &lt;code&gt;tpu.rewrite()&lt;/code&gt; and &lt;code&gt;TPUPartitionedCallOp&lt;/code&gt; around &lt;code&gt;model_fn&lt;/code&gt; so &lt;code&gt;model_fn&lt;/code&gt; is on TPU by default. To place ops on CPU, &lt;code&gt;tpu.outside_compilation(host_call, logits)&lt;/code&gt; can be used.</source>
          <target state="translated">V1では、エクスポートされたCPUグラフは &lt;code&gt;model_fn&lt;/code&gt; です。エクスポートされたTPUグラフは、 &lt;code&gt;TPUPartitionedCallOp&lt;/code&gt; 周囲に &lt;code&gt;tpu.rewrite()&lt;/code&gt; およびTPUPartitionedCallOpを &lt;code&gt;model_fn&lt;/code&gt; ため、 &lt;code&gt;model_fn&lt;/code&gt; はデフォルトでTPU上にあります。 opsをCPUに &lt;code&gt;tpu.outside_compilation(host_call, logits)&lt;/code&gt; 、tpu.outside_compilation（host_call、logits）を使用できます。</target>
        </trans-unit>
        <trans-unit id="96357d45f74c44c1cd59ce5a4e69f6c961b9be20" translate="yes" xml:space="preserve">
          <source>In V2, &lt;code&gt;export_saved_model()&lt;/code&gt; sets up &lt;code&gt;params['use_tpu']&lt;/code&gt; flag to let the user know if the code is exporting to TPU (or not). When &lt;code&gt;params['use_tpu']&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;, users need to call &lt;code&gt;tpu.rewrite()&lt;/code&gt;, &lt;code&gt;TPUPartitionedCallOp&lt;/code&gt; and/or &lt;code&gt;batch_function()&lt;/code&gt;. Alternatively use &lt;code&gt;inference_on_tpu()&lt;/code&gt; which is a convenience wrapper of the three.</source>
          <target state="translated">V2では、 &lt;code&gt;export_saved_model()&lt;/code&gt; は &lt;code&gt;params['use_tpu']&lt;/code&gt; フラグを設定して、コードがTPUにエクスポートされているかどうかをユーザーに通知します。とき &lt;code&gt;params['use_tpu']&lt;/code&gt; ある &lt;code&gt;True&lt;/code&gt; 、ユーザーが呼び出す必要があり &lt;code&gt;tpu.rewrite()&lt;/code&gt; 、 &lt;code&gt;TPUPartitionedCallOp&lt;/code&gt; および/または &lt;code&gt;batch_function()&lt;/code&gt; 。あるいは、3つの便利なラッパーである &lt;code&gt;inference_on_tpu()&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="0ea5307e4ab9dbcd3254304c2d948acdc37b34b0" translate="yes" xml:space="preserve">
          <source>In a &lt;a href=&quot;function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt; or when building a model using &lt;a href=&quot;keras/input&quot;&gt;&lt;code&gt;tf.keras.Input&lt;/code&gt;&lt;/a&gt;, they return the build-time shape of the tensor, which may be partially unknown.</source>
          <target state="translated">In a &lt;a href=&quot;function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt; or when building a model using &lt;a href=&quot;keras/input&quot;&gt; &lt;code&gt;tf.keras.Input&lt;/code&gt; &lt;/a&gt;, they return the build-time shape of the tensor, which may be partially unknown.</target>
        </trans-unit>
        <trans-unit id="6fa5bd380e5aa574a254ecdd687c73cfcb27bf28" translate="yes" xml:space="preserve">
          <source>In a multi-worker setting, we will first attempt to distribute the dataset by attempting to detect whether the dataset is being created out of ReaderDatasets (e.g. TFRecordDataset, TextLineDataset, etc.) and if so, attempting to shard the input files. Note that there has to be at least one input file per worker. If you have less than one input file per worker, we suggest that you should disable distributing your dataset using the method below.</source>
          <target state="translated">マルチワーカーの設定では、まず、データセットがReaderDataset(例:TFRecordDataset,TextLineDatasetなど)から作成されているかどうかを検出し、作成されている場合は、入力ファイルをシャードしようとすることで、データセットの分散を試みます。ワーカーごとに少なくとも1つの入力ファイルが存在しなければならないことに注意してください。ワーカーあたりの入力ファイルが1つ以下の場合は、以下の方法でデータセットの配布を無効にすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="dfef8f2d9cb8b91e7e364f089f14bf6f6b4950f4" translate="yes" xml:space="preserve">
          <source>In a pure mathematical sense, a vector-argument vector-valued function &lt;code&gt;f&lt;/code&gt;'s derivatives should be its Jacobian matrix &lt;code&gt;J&lt;/code&gt;. Here we are expressing the Jacobian &lt;code&gt;J&lt;/code&gt; as a function &lt;code&gt;grad_fn&lt;/code&gt; which defines how &lt;code&gt;J&lt;/code&gt; will transform a vector &lt;code&gt;grad_ys&lt;/code&gt; when left-multiplied with it (&lt;code&gt;grad_ys * J&lt;/code&gt;, the vector-Jacobian product, or VJP). This functional representation of a matrix is convenient to use for chain-rule calculation (in e.g. the back-propagation algorithm).</source>
          <target state="translated">In a pure mathematical sense, a vector-argument vector-valued function &lt;code&gt;f&lt;/code&gt; 's derivatives should be its Jacobian matrix &lt;code&gt;J&lt;/code&gt; . Here we are expressing the Jacobian &lt;code&gt;J&lt;/code&gt; as a function &lt;code&gt;grad_fn&lt;/code&gt; which defines how &lt;code&gt;J&lt;/code&gt; will transform a vector &lt;code&gt;grad_ys&lt;/code&gt; when left-multiplied with it ( &lt;code&gt;grad_ys * J&lt;/code&gt; , the vector-Jacobian product, or VJP). This functional representation of a matrix is convenient to use for chain-rule calculation (in e.g. the back-propagation algorithm).</target>
        </trans-unit>
        <trans-unit id="3a1189c10d2b5b4c2dfe6ce8f122a5b82d16ddb6" translate="yes" xml:space="preserve">
          <source>In a replica context, you may freely read the values of variables, but you may only update their value if they specify a way to aggregate the update using the &lt;code&gt;aggregation&lt;/code&gt; parameter in the variable's constructor. In a cross-replica context, you may read or write variables (writes may need to be broadcast to all copies of the variable if it is mirrored).</source>
          <target state="translated">レプリカコンテキストでは、変数の値を自由に読み取ることができますが、変数のコンストラクターで &lt;code&gt;aggregation&lt;/code&gt; パラメーターを使用して更新を集計する方法を指定している場合にのみ、値を更新できます。クロスレプリカのコンテキストでは、変数の読み取りまたは書き込みを行うことができます（ミラーリングされている場合、変数のすべてのコピーに書き込みをブロードキャストする必要がある場合があります）。</target>
        </trans-unit>
        <trans-unit id="5a6a3b1bf3355979185c8ba5fde475cd00334849" translate="yes" xml:space="preserve">
          <source>In a session, computes and returns the value of this variable.</source>
          <target state="translated">セッションでは、この変数の値を計算して返します。</target>
        </trans-unit>
        <trans-unit id="2522a9b6956696f7d2f65c27000e4d85acba5fa9" translate="yes" xml:space="preserve">
          <source>In a typical asynchronous training environment, it's common to have some stale gradients. For example, with a N-replica asynchronous training, gradients will be applied to the variables N times independently. Depending on each replica's training speed, some gradients might be calculated from copies of the variable from several steps back (N-1 steps on average). This optimizer avoids stale gradients by collecting gradients from all replicas, averaging them, then applying them to the variables in one shot, after which replicas can fetch the new variables and continue.</source>
          <target state="translated">典型的な非同期トレーニング環境では、いくつかの陳腐なグラデーションを持つことが一般的です。例えば、N個のレプリカを使った非同期訓練では、グラデーションは変数に独立してN回適用されます。各レプリカの訓練速度に応じて、いくつかのグラデーションは、変数のコピーから数ステップ遡って計算されるかもしれません(平均してN-1ステップ)。このオプティマイザは、すべてのレプリカからグラデーションを収集し、平均化してから変数に一発で適用し、その後レプリカが新しい変数を取得して続行できるようにすることで、陳腐なグラデーションを回避します。</target>
        </trans-unit>
        <trans-unit id="add8c5b79597d8fbfc4deddcbbc75442d1193218" translate="yes" xml:space="preserve">
          <source>In addition to &lt;code&gt;row_splits&lt;/code&gt;, ragged tensors provide support for five other row-partitioning schemes:</source>
          <target state="translated">In addition to &lt;code&gt;row_splits&lt;/code&gt; , ragged tensors provide support for five other row-partitioning schemes:</target>
        </trans-unit>
        <trans-unit id="7f5c7e39ca1e2646f184bebbdccd8352fd472889" translate="yes" xml:space="preserve">
          <source>In addition to &lt;code&gt;row_splits&lt;/code&gt;, ragged tensors provide support for four other row-partitioning schemes:</source>
          <target state="translated">&lt;code&gt;row_splits&lt;/code&gt; に加えて、不規則なテンソルは、他の4つの行分割スキーマをサポートします。</target>
        </trans-unit>
        <trans-unit id="c4c6856a33d33c73a855c3ce15ea6283e7abc71a" translate="yes" xml:space="preserve">
          <source>In addition to checkpoint files, savers keep a protocol buffer on disk with the list of recent checkpoints. This is used to manage numbered checkpoint files and by &lt;code&gt;latest_checkpoint()&lt;/code&gt;, which makes it easy to discover the path to the most recent checkpoint. That protocol buffer is stored in a file named 'checkpoint' next to the checkpoint files.</source>
          <target state="translated">セーバーは、チェックポイントファイルに加えて、最近のチェックポイントのリストを含むプロトコルバッファーをディスクに保持します。これは、番号付きのチェックポイントファイルを管理するために使用され、 &lt;code&gt;latest_checkpoint()&lt;/code&gt; によって使用されます。これにより、最新のチェックポイントへのパスを簡単に見つけることができます。そのプロトコルバッファは、チェックポイントファイルの隣にある「チェックポイント」という名前のファイルに格納されます。</target>
        </trans-unit>
        <trans-unit id="440848afff541ac2b1bbb1684820f47d256a8eae" translate="yes" xml:space="preserve">
          <source>In addition to exporting, this class also garbage collects stale exports.</source>
          <target state="translated">エクスポートに加えて、このクラスは古くなったエクスポートをガベージコレクションします。</target>
        </trans-unit>
        <trans-unit id="3ba65f5de5f4ca5afe2d4c86c2ddac7a22edaf68" translate="yes" xml:space="preserve">
          <source>In addition to regular Tensors or IndexedSlices, the body may accept and return TensorArray objects. The flows of the TensorArray objects will be appropriately forwarded between loops and during gradient calculations.</source>
          <target state="translated">通常のTensorsまたはIndexedSlicesに加えて、ボディはTensorArrayオブジェクトを受け入れて返してもよい。TensorArrayオブジェクトのフローは、ループ間や勾配計算中に適切に転送されます。</target>
        </trans-unit>
        <trans-unit id="b83ef61c3670f06537ff1c141b52be7ac2a9fe87" translate="yes" xml:space="preserve">
          <source>In addition to slot variables which should be colocated with their primary variables, optimizers also define non-slot variables. These can be things like &quot;number of step updates performed&quot; or &quot;beta1^t&quot; and &quot;beta2^t&quot;. Each strategy has some policy for which devices those variables should be copied too, called the &quot;non-slot devices&quot; (some subset of the parameter devices). We require that all non-slot variables are allocated on the same device, or mirrored across the same set of devices. You can use &lt;a href=&quot;../../../distribute/strategyextended#non_slot_devices&quot;&gt;&lt;code&gt;tf.distribute.StrategyExtended.non_slot_devices&lt;/code&gt;&lt;/a&gt; to pick a consistent set of devices to pass to both &lt;a href=&quot;../../../distribute/strategyextended#colocate_vars_with&quot;&gt;&lt;code&gt;tf.distribute.StrategyExtended.colocate_vars_with&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../../distribute/strategyextended#update_non_slot&quot;&gt;&lt;code&gt;tf.distribute.StrategyExtended.update_non_slot&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">プライマリ変数と同じ場所に配置する必要があるスロット変数に加えて、オプティマイザーは非スロット変数も定義します。これらは、「実行されたステップ更新の数」または「beta1 ^ t」と「beta2 ^ t」のようなものです。各戦略には、「非スロットデバイス」（パラメーターデバイスの一部）と呼ばれる、それらの変数をどのデバイスにコピーするかについてのポリシーがあります。すべての非スロット変数を同じデバイスに割り当てるか、同じデバイスのセット全体でミラーリングする必要があります。&lt;a href=&quot;../../../distribute/strategyextended#non_slot_devices&quot;&gt; &lt;code&gt;tf.distribute.StrategyExtended.non_slot_devices&lt;/code&gt; &lt;/a&gt;を使用して、&lt;a href=&quot;../../../distribute/strategyextended#colocate_vars_with&quot;&gt; &lt;code&gt;tf.distribute.StrategyExtended.colocate_vars_with&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../../../distribute/strategyextended#update_non_slot&quot;&gt; &lt;code&gt;tf.distribute.StrategyExtended.update_non_slot&lt;/code&gt; の&lt;/a&gt;両方に渡す一貫したデバイスのセットを選択できます。</target>
        </trans-unit>
        <trans-unit id="72581f64b9b0dd39e47dc7fa9df7182573016778" translate="yes" xml:space="preserve">
          <source>In addition to slot variables which should be colocated with their primary variables, optimizers also define non-slot variables. These can be things like &quot;number of step updates performed&quot; or &quot;beta1^t&quot; and &quot;beta2^t&quot;. Each strategy has some policy for which devices those variables should be copied too, called the &quot;non-slot devices&quot; (some subset of the parameter devices). We require that all non-slot variables are allocated on the same device, or mirrored across the same set of devices. You can use &lt;a href=&quot;strategyextended#non_slot_devices&quot;&gt;&lt;code&gt;tf.distribute.StrategyExtended.non_slot_devices&lt;/code&gt;&lt;/a&gt; to pick a consistent set of devices to pass to both &lt;a href=&quot;strategyextended#colocate_vars_with&quot;&gt;&lt;code&gt;tf.distribute.StrategyExtended.colocate_vars_with&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;strategyextended#update_non_slot&quot;&gt;&lt;code&gt;tf.distribute.StrategyExtended.update_non_slot&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">プライマリ変数と同じ場所に配置する必要があるスロット変数に加えて、オプティマイザーは非スロット変数も定義します。これらは、「実行されたステップ更新の数」または「beta1 ^ t」と「beta2 ^ t」のようなものです。各戦略には、「非スロットデバイス」（パラメーターデバイスの一部）と呼ばれる、それらの変数をどのデバイスにコピーするかについてのポリシーがあります。すべての非スロット変数を同じデバイスに割り当てるか、同じデバイスのセット全体でミラーリングする必要があります。&lt;a href=&quot;strategyextended#non_slot_devices&quot;&gt; &lt;code&gt;tf.distribute.StrategyExtended.non_slot_devices&lt;/code&gt; &lt;/a&gt;を使用して、&lt;a href=&quot;strategyextended#colocate_vars_with&quot;&gt; &lt;code&gt;tf.distribute.StrategyExtended.colocate_vars_with&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;strategyextended#update_non_slot&quot;&gt; &lt;code&gt;tf.distribute.StrategyExtended.update_non_slot&lt;/code&gt; の&lt;/a&gt;両方に渡す一貫したデバイスのセットを選択できます。</target>
        </trans-unit>
        <trans-unit id="d87268b6a8ad6822e1a801c24a40186835816c0b" translate="yes" xml:space="preserve">
          <source>In addition to the above mentioned policies, a policy can also be &quot;infer&quot;. This Policy is deprecated, and it is not recommended. When a layer has an infer policy, it will infer the computation and variable dtype from the first input the first time the layer is called. Once the layer is called for the first time, the layer's policy will change to the dtype of the first input.</source>
          <target state="translated">上記のポリシーに加えて、ポリシーを「推論」することもできます。このポリシーは非推奨です。レイヤーがinferポリシーを持っている場合、レイヤーが初めて呼び出されたときに、最初の入力から計算と変数dtypeを推論します。レイヤーが最初に呼び出されると、レイヤーのポリシーは最初の入力の dtype に変更されます。</target>
        </trans-unit>
        <trans-unit id="9b6a36c1b72da17b3ac1903013012d88a399c6a3" translate="yes" xml:space="preserve">
          <source>In addition, either &lt;code&gt;save_checkpoints_steps&lt;/code&gt; or &lt;code&gt;save_checkpoints_secs&lt;/code&gt; can be set (should not be both).</source>
          <target state="translated">さらに、 &lt;code&gt;save_checkpoints_steps&lt;/code&gt; または &lt;code&gt;save_checkpoints_secs&lt;/code&gt; のいずれかを設定できます（両方にすることはできません）。</target>
        </trans-unit>
        <trans-unit id="a8be97737386632e5930d1a505669c0ea1a77181" translate="yes" xml:space="preserve">
          <source>In addition, non-raising iteration is supported via &lt;code&gt;get_next_as_optional()&lt;/code&gt;, which returns the next element (if available) wrapped in a &lt;a href=&quot;../experimental/optional&quot;&gt;&lt;code&gt;tf.experimental.Optional&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">In addition, non-raising iteration is supported via &lt;code&gt;get_next_as_optional()&lt;/code&gt; , which returns the next element (if available) wrapped in a &lt;a href=&quot;../experimental/optional&quot;&gt; &lt;code&gt;tf.experimental.Optional&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="555925888abcb6ab1ea3af1dd5cd6edbb9ea4874" translate="yes" xml:space="preserve">
          <source>In addition, this operation returns tensors &lt;code&gt;true_expected_count&lt;/code&gt; and &lt;code&gt;sampled_expected_count&lt;/code&gt; representing the number of times each of the target classes (&lt;code&gt;true_classes&lt;/code&gt;) and the sampled classes (&lt;code&gt;sampled_candidates&lt;/code&gt;) is expected to occur in an average tensor of sampled classes. These values correspond to &lt;code&gt;Q(y|x)&lt;/code&gt; defined in &lt;a href=&quot;http://www.tensorflow.org/extras/candidate_sampling.pdf&quot;&gt;this document&lt;/a&gt;. If &lt;code&gt;unique=True&lt;/code&gt;, then these are post-rejection probabilities and we compute them approximately.</source>
          <target state="translated">さらに、この操作は、ターゲットクラス（ &lt;code&gt;true_classes&lt;/code&gt; ）およびサンプルクラス（ &lt;code&gt;sampled_candidates&lt;/code&gt; ）のそれぞれがサンプルクラスの平均テンソルで発生すると予想される回数を表すテンソル &lt;code&gt;true_expected_count&lt;/code&gt; および &lt;code&gt;sampled_expected_count&lt;/code&gt; を返します。これらの値は、&lt;a href=&quot;http://www.tensorflow.org/extras/candidate_sampling.pdf&quot;&gt;このドキュメントで&lt;/a&gt;定義されている &lt;code&gt;Q(y|x)&lt;/code&gt; 対応しています。場合は &lt;code&gt;unique=True&lt;/code&gt; 場合、これらは後の拒絶反応の確率であり、私たちは約それらを計算します。</target>
        </trans-unit>
        <trans-unit id="7dcd7b097b6d5afefa90c28e9166ddea07927f7a" translate="yes" xml:space="preserve">
          <source>In all cases, an exception is raised if &lt;em&gt;invalid&lt;/em&gt; parameters are passed, e.g.</source>
          <target state="translated">すべての場合において、&lt;em&gt;無効な&lt;/em&gt;パラメーターが渡されると、例外が発生します。例：</target>
        </trans-unit>
        <trans-unit id="528f7eb98213e1189f2afa9ee728c00ddb010d6a" translate="yes" xml:space="preserve">
          <source>In all cases, suppose &lt;code&gt;operator&lt;/code&gt; is a &lt;code&gt;LinearOperatorFullMatrix&lt;/code&gt; of shape &lt;code&gt;[M, N]&lt;/code&gt;, and &lt;code&gt;x.shape = [N, R]&lt;/code&gt;. Then</source>
          <target state="translated">全ての場合において、仮定する &lt;code&gt;operator&lt;/code&gt; ある &lt;code&gt;LinearOperatorFullMatrix&lt;/code&gt; 形状の &lt;code&gt;[M, N]&lt;/code&gt; 、及び &lt;code&gt;x.shape = [N, R]&lt;/code&gt; 。その後</target>
        </trans-unit>
        <trans-unit id="93b282de1b601498957a67e9a5151ecf41c723ca" translate="yes" xml:space="preserve">
          <source>In all generality, they can have the same number of dimensions as the input &lt;code&gt;x&lt;/code&gt;, with identical sizes as &lt;code&gt;x&lt;/code&gt; for the dimensions that are not normalized over (the 'depth' dimension(s)), and dimension 1 for the others which are being normalized over. &lt;code&gt;mean&lt;/code&gt; and &lt;code&gt;variance&lt;/code&gt; in this case would typically be the outputs of &lt;a href=&quot;moments&quot;&gt;&lt;code&gt;tf.nn.moments(..., keepdims=True)&lt;/code&gt;&lt;/a&gt; during training, or running averages thereof during inference.</source>
          <target state="translated">すべての一般的に、それらは入力 &lt;code&gt;x&lt;/code&gt; と同じ数の次元を持つことができます。正規化されていない次元（「深さ」次元）の場合は &lt;code&gt;x&lt;/code&gt; と同じサイズで、他の次元の場合は次元1です。正規化。この場合の &lt;code&gt;mean&lt;/code&gt; と &lt;code&gt;variance&lt;/code&gt; は、通常、トレーニング中の&lt;a href=&quot;moments&quot;&gt; &lt;code&gt;tf.nn.moments(..., keepdims=True)&lt;/code&gt; &lt;/a&gt;の出力、または推論中のその実行平均になります。</target>
        </trans-unit>
        <trans-unit id="af9bb28b05876d0ccb840fb8a94305e3cb54b9b8" translate="yes" xml:space="preserve">
          <source>In async execution mode, an error in op/function execution can lead to errors in subsequent ops/functions that are scheduled but not yet executed. Calling this method clears all pending operations and reset the async execution state.</source>
          <target state="translated">非同期実行モードでは、操作/関数の実行でエラーが発生すると、スケジュールされているがまだ実行されていない後続の操作/関数でエラーが発生する可能性があります。このメソッドを呼び出すと、保留中の操作がすべてクリアされ、非同期実行状態がリセットされます。</target>
        </trans-unit>
        <trans-unit id="dbe8f97776752806df6355aaaa49e006af4475b5" translate="yes" xml:space="preserve">
          <source>In case &lt;code&gt;dim(x) == 1&lt;/code&gt;.</source>
          <target state="translated">In case &lt;code&gt;dim(x) == 1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e59ff15195ac0b7ba502c82f75c359a3a89caeb8" translate="yes" xml:space="preserve">
          <source>In case &lt;code&gt;x&lt;/code&gt; is not a symbolic tensor.</source>
          <target state="translated">In case &lt;code&gt;x&lt;/code&gt; is not a symbolic tensor.</target>
        </trans-unit>
        <trans-unit id="956b77064ba946148cb66db1a94e9bc12bc62027" translate="yes" xml:space="preserve">
          <source>In case a simplified &lt;code&gt;str&lt;/code&gt; version of the path is needed from an &lt;code&gt;os.PathLike&lt;/code&gt; object</source>
          <target state="translated">&lt;code&gt;os.PathLike&lt;/code&gt; オブジェクトからパスの簡略化された &lt;code&gt;str&lt;/code&gt; バージョンが必要な場合</target>
        </trans-unit>
        <trans-unit id="30551f2608204c57e8337c88a4d6f97d73d92a19" translate="yes" xml:space="preserve">
          <source>In case any gradient cannot be computed (e.g. if gradient function not implemented).</source>
          <target state="translated">勾配が計算できない場合(勾配関数が実装されていない場合など)。</target>
        </trans-unit>
        <trans-unit id="1942b63ea63dd70e10beed0fe1ee42f2a0cdf472" translate="yes" xml:space="preserve">
          <source>In case of an invalid savefile.</source>
          <target state="translated">無効なsavefileの場合。</target>
        </trans-unit>
        <trans-unit id="df42ea719e7879084ed8921f411b4a23cb710e77" translate="yes" xml:space="preserve">
          <source>In case of an invalid value for the &quot;scale&quot;, mode&quot; or &quot;distribution&quot; arguments.</source>
          <target state="translated">scale&quot;、&quot;mode&quot;、&quot;distribution &quot;の引数に無効な値が指定された場合。</target>
        </trans-unit>
        <trans-unit id="49bc9a2673c96fd0fd0baf753f07cc548462df41" translate="yes" xml:space="preserve">
          <source>In case of identity returns the smallest index.</source>
          <target state="translated">同一性の場合は、最小のインデックスを返します。</target>
        </trans-unit>
        <trans-unit id="27a756fd05962bc6c4d94331c5d62934a1832aad" translate="yes" xml:space="preserve">
          <source>In case of invalid &lt;code&gt;count_mode&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;count_mode&lt;/code&gt; が無効な場合。</target>
        </trans-unit>
        <trans-unit id="c2e5909e8575c0cbcfc7db58a53aa66c85848f81" translate="yes" xml:space="preserve">
          <source>In case of invalid &lt;code&gt;data_format&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;data_format&lt;/code&gt; 値が無効な場合。</target>
        </trans-unit>
        <trans-unit id="ff1717d00a3a0045ddd9f92c5cc529a4e7c9f003" translate="yes" xml:space="preserve">
          <source>In case of invalid &lt;code&gt;merge_mode&lt;/code&gt; argument.</source>
          <target state="translated">無効な &lt;code&gt;merge_mode&lt;/code&gt; 引数の場合。</target>
        </trans-unit>
        <trans-unit id="97f5045ff946d97ba4c9acb1689a743a28154c87" translate="yes" xml:space="preserve">
          <source>In case of invalid argument for &lt;code&gt;weights&lt;/code&gt;, or invalid input shape.</source>
          <target state="translated">&lt;code&gt;weights&lt;/code&gt; 引数が無効な場合、または入力形状が無効な場合。</target>
        </trans-unit>
        <trans-unit id="fcb8a53372e8c458d83ef7d391910d625cbd8153" translate="yes" xml:space="preserve">
          <source>In case of invalid arguments for &lt;code&gt;optimizer&lt;/code&gt;, &lt;code&gt;loss&lt;/code&gt; or &lt;code&gt;metrics&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;optimizer&lt;/code&gt; 、 &lt;code&gt;loss&lt;/code&gt; または &lt;code&gt;metrics&lt;/code&gt; 引数が無効な場合。</target>
        </trans-unit>
        <trans-unit id="59e673c8fb2afe88153bb056ca340c78ed246af7" translate="yes" xml:space="preserve">
          <source>In case of invalid layer name or index.</source>
          <target state="translated">レイヤー名やインデックスが無効な場合</target>
        </trans-unit>
        <trans-unit id="21767b805d2046804a0b0734c4781738bfc5c332" translate="yes" xml:space="preserve">
          <source>In case of invalid shape for &lt;code&gt;y&lt;/code&gt; argument.</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; 引数の形状が無効な場合。</target>
        </trans-unit>
        <trans-unit id="3b74392dc8d34a728d3b0ec6714f69356073b4cb" translate="yes" xml:space="preserve">
          <source>In case of invalid shape of the &lt;code&gt;pred&lt;/code&gt; array (must be 2D).</source>
          <target state="translated">&lt;code&gt;pred&lt;/code&gt; 配列の形状が無効な場合（2Dである必要があります）。</target>
        </trans-unit>
        <trans-unit id="298ea3c5b9bb5ef3bfdac85152badfbfd0186005" translate="yes" xml:space="preserve">
          <source>In case of invalid user-provided arguments.</source>
          <target state="translated">ユーザーが提供した引数が無効な場合。</target>
        </trans-unit>
        <trans-unit id="be920aa09b321446df6b0f1334f4492100d28e32" translate="yes" xml:space="preserve">
          <source>In case of invalid value.</source>
          <target state="translated">無効な値の場合</target>
        </trans-unit>
        <trans-unit id="c4d6f8d31911fd565c48ceb279f3955fdb2afb4f" translate="yes" xml:space="preserve">
          <source>In case of invalid values for &lt;code&gt;truncating&lt;/code&gt; or &lt;code&gt;padding&lt;/code&gt;, or in case of invalid shape for a &lt;code&gt;sequences&lt;/code&gt; entry.</source>
          <target state="translated">&lt;code&gt;truncating&lt;/code&gt; または &lt;code&gt;padding&lt;/code&gt; 値が無効な場合、または &lt;code&gt;sequences&lt;/code&gt; エントリの形状が無効な場合。</target>
        </trans-unit>
        <trans-unit id="b7366cef910f45bfb2939d4d4c5cf6cd689029dd" translate="yes" xml:space="preserve">
          <source>In case of mismatch between given number of inputs and expectations of the model.</source>
          <target state="translated">与えられた入力数とモデルの期待値が不一致の場合。</target>
        </trans-unit>
        <trans-unit id="a356d199013f3b93a8b76ba4e11b70567e3a0225" translate="yes" xml:space="preserve">
          <source>In case of mismatch between the provided input data and the model's expectations, or in case a stateful model receives a number of samples that is not a multiple of the batch size.</source>
          <target state="translated">提供された入力データとモデルの期待値との間に不一致がある場合、またはステートフルモデルがバッチサイズの倍数ではないサンプル数を受信した場合。</target>
        </trans-unit>
        <trans-unit id="88899ad29ae66b9d00b954a2811e29531475819a" translate="yes" xml:space="preserve">
          <source>In case of mismatch between the provided input data and what the model expects.</source>
          <target state="translated">提供された入力データとモデルが期待するものとの間に不一致がある場合。</target>
        </trans-unit>
        <trans-unit id="5ec3c64c6374329c52184178b1fd4857d4d1aac9" translate="yes" xml:space="preserve">
          <source>In case of tie, the rounding mode used is &quot;half to even&quot;.</source>
          <target state="translated">同点の場合、四捨五入モードは「半分から偶数」となります。</target>
        </trans-unit>
        <trans-unit id="05c8a481504fdcb81f5439304e5ef2205ea5569c" translate="yes" xml:space="preserve">
          <source>In case of unknown &lt;code&gt;data_format&lt;/code&gt; argument.</source>
          <target state="translated">不明な &lt;code&gt;data_format&lt;/code&gt; 引数の場合。</target>
        </trans-unit>
        <trans-unit id="ab787931384443fb17693b20f0b8c8362027dccc" translate="yes" xml:space="preserve">
          <source>In case of unknown &lt;code&gt;mode&lt;/code&gt; or &lt;code&gt;data_format&lt;/code&gt; argument.</source>
          <target state="translated">不明な &lt;code&gt;mode&lt;/code&gt; または &lt;code&gt;data_format&lt;/code&gt; 引数の場合。</target>
        </trans-unit>
        <trans-unit id="d126fd29a8ae675359d884c4be757cfd379d70f9" translate="yes" xml:space="preserve">
          <source>In case the &lt;code&gt;layer&lt;/code&gt; argument does not know its input shape.</source>
          <target state="translated">&lt;code&gt;layer&lt;/code&gt; 引数がその入力形状を知らない場合。</target>
        </trans-unit>
        <trans-unit id="5e569e98d391d8a27e0d7375479c95eedc6a211e" translate="yes" xml:space="preserve">
          <source>In case the &lt;code&gt;layer&lt;/code&gt; argument has multiple output tensors, or is already connected somewhere else (forbidden in &lt;code&gt;Sequential&lt;/code&gt; models).</source>
          <target state="translated">&lt;code&gt;layer&lt;/code&gt; 引数に複数の出力テンソルがある場合、またはすでに別の場所に接続されている場合（ &lt;code&gt;Sequential&lt;/code&gt; モデルでは禁止されています）。</target>
        </trans-unit>
        <trans-unit id="ba5137fc820e731c1a5875992af949685dd9a61a" translate="yes" xml:space="preserve">
          <source>In combination with &lt;code&gt;export_meta_graph()&lt;/code&gt;, this function can be used to</source>
          <target state="translated">&lt;code&gt;export_meta_graph()&lt;/code&gt; と組み合わせて、この関数を使用して</target>
        </trans-unit>
        <trans-unit id="6bee6cf2cd5a89443d441a5ec667007c0d0d0875" translate="yes" xml:space="preserve">
          <source>In contrast to &lt;code&gt;Adam&lt;/code&gt;, the sparse implementation of this algorithm (used when the gradient is an IndexedSlices object, typically because of &lt;a href=&quot;../../gather&quot;&gt;&lt;code&gt;tf.gather&lt;/code&gt;&lt;/a&gt; or an embedding lookup in the forward pass) only updates variable slices and corresponding &lt;code&gt;m_t&lt;/code&gt;, &lt;code&gt;v_t&lt;/code&gt; terms when that part of the variable was used in the forward pass. This means that the sparse behavior is contrast to the dense behavior (similar to some momentum implementations which ignore momentum unless a variable slice was actually used).</source>
          <target state="translated">&lt;code&gt;Adam&lt;/code&gt; とは対照的に、このアルゴリズムのスパース実装（勾配がIndexedSlicesオブジェクトの場合、通常は&lt;a href=&quot;../../gather&quot;&gt; &lt;code&gt;tf.gather&lt;/code&gt; &lt;/a&gt;またはフォワードパスの埋め込みルックアップのために使用されます）は、変数スライスと対応する &lt;code&gt;m_t&lt;/code&gt; 、 &lt;code&gt;v_t&lt;/code&gt; 項のみを更新します。変数はフォワードパスで使用されました。これは、疎な動作が密な動作とは対照的であることを意味します（可変スライスが実際に使用されない限り、運動量を無視するいくつかの運動量の実装に似ています）。</target>
        </trans-unit>
        <trans-unit id="472a2f767cd2905e561f41c34043559b02af126d" translate="yes" xml:space="preserve">
          <source>In contrast to the &lt;code&gt;mean&lt;/code&gt; function which returns a scalar with the mean, this function returns an average tensor with the same shape as the input tensors.</source>
          <target state="translated">&lt;code&gt;mean&lt;/code&gt; もつスカラーを返す平均関数とは対照的に、この関数は入力テンソルと同じ形状の平均テンソルを返します。</target>
        </trans-unit>
        <trans-unit id="be45b63e4fad80b73ce37784737cf2cbbeaea97c" translate="yes" xml:space="preserve">
          <source>In contrast, if:</source>
          <target state="translated">対して、もしも。</target>
        </trans-unit>
        <trans-unit id="911ecdd444d109bdd2686fa0899f4e17288b1949" translate="yes" xml:space="preserve">
          <source>In detail, the grayscale morphological 2-D dilation is the max-sum correlation (for consistency with &lt;code&gt;conv2d&lt;/code&gt;, we use unmirrored filters):</source>
          <target state="translated">詳細には、グレースケール形態学的2次元膨張は最大合計相関です（ &lt;code&gt;conv2d&lt;/code&gt; との一貫性のために、ミラーリングされていないフィルターを使用します）。</target>
        </trans-unit>
        <trans-unit id="010b81280676156048e3aae3d209bcf71a9b3066" translate="yes" xml:space="preserve">
          <source>In detail, the grayscale morphological 2-D erosion is given by:</source>
          <target state="translated">詳細には、グレースケールの形態学的な2次元侵食は、次のように与えられる。</target>
        </trans-unit>
        <trans-unit id="517b8d5a149f4c161ca1ea27c45c37a98c18260e" translate="yes" xml:space="preserve">
          <source>In detail, with the default NHWC format,</source>
          <target state="translated">詳細は、デフォルトのNHWCフォーマットで。</target>
        </trans-unit>
        <trans-unit id="39ee2fb212e9ff65eb60f4c2eed006218ac4350f" translate="yes" xml:space="preserve">
          <source>In distributed setting for a non-chief worker, you can use following:</source>
          <target state="translated">ノンチーフワーカーの分散設定では、以下のような使い方ができます。</target>
        </trans-unit>
        <trans-unit id="432fd70bbc9af278575edb8550ab4d0e6d429837" translate="yes" xml:space="preserve">
          <source>In each mask field (&lt;code&gt;begin_mask&lt;/code&gt;, &lt;code&gt;end_mask&lt;/code&gt;, &lt;code&gt;ellipsis_mask&lt;/code&gt;, &lt;code&gt;new_axis_mask&lt;/code&gt;, &lt;code&gt;shrink_axis_mask&lt;/code&gt;) the ith bit will correspond to the ith spec.</source>
          <target state="translated">各マスクフィールド（ &lt;code&gt;begin_mask&lt;/code&gt; 、 &lt;code&gt;end_mask&lt;/code&gt; 、 &lt;code&gt;ellipsis_mask&lt;/code&gt; 、 &lt;code&gt;new_axis_mask&lt;/code&gt; 、 &lt;code&gt;shrink_axis_mask&lt;/code&gt; ）では、i番目のビットがi番目の仕様に対応します。</target>
        </trans-unit>
        <trans-unit id="a827b2d32c94f4d078081b87422b337df7153cca" translate="yes" xml:space="preserve">
          <source>In each repetition, this dataset fills a buffer with &lt;code&gt;buffer_size&lt;/code&gt; elements, then randomly samples elements from this buffer, replacing the selected elements with new elements. For perfect shuffling, set the buffer size equal to the full size of the dataset.</source>
          <target state="translated">繰り返しごとに、このデータセットは &lt;code&gt;buffer_size&lt;/code&gt; 要素でバッファを埋め、次にこのバッファから要素をランダムにサンプリングして、選択された要素を新しい要素で置き換えます。完全なシャッフルを行うには、バッファサイズをデータセットのフルサイズに設定します。</target>
        </trans-unit>
        <trans-unit id="ab4f684abeec2fbace4964ba714b6c3030a31435" translate="yes" xml:space="preserve">
          <source>In eager execution the shape is always fully-known.</source>
          <target state="translated">熱心な実行では、形状は常に完全に知られています。</target>
        </trans-unit>
        <trans-unit id="0ad9df451db78bb007e8c2331091212546191af9" translate="yes" xml:space="preserve">
          <source>In eager mode, None. In graph mode, an op to update the loss scale.</source>
          <target state="translated">イガーモードでは None。グラフモードでは、損失スケールを更新するための op。</target>
        </trans-unit>
        <trans-unit id="b5bcda8bd9453fe45c3ad8b95cc83910933e573a" translate="yes" xml:space="preserve">
          <source>In eager mode, no special code is needed to initialize the table. Example usage in eager mode:</source>
          <target state="translated">イーガーモードでは、テーブルの初期化に特別なコードは必要ありません。イーガーモードでの使用例。</target>
        </trans-unit>
        <trans-unit id="8a80543ed8233233bcba2882c158c2bd26a1a267" translate="yes" xml:space="preserve">
          <source>In eager mode, this directly updates the loss scale, so that calling &lt;code&gt;__call__&lt;/code&gt; will return the newly updated loss scale. In graph mode, this returns an op that, when evaluated, updates the loss scale.</source>
          <target state="translated">eagerモードでは、これにより損失スケールが直接更新されるため、 &lt;code&gt;__call__&lt;/code&gt; を呼び出すと、新しく更新された損失スケールが返されます。グラフモードでは、これは、評価時に損失スケールを更新する操作を返します。</target>
        </trans-unit>
        <trans-unit id="71ccf90ba0d4e13bfe64aa70496805e8e26edd75" translate="yes" xml:space="preserve">
          <source>In either case above, the numpy ndarray (either the caller provided or the auto-converted) must have the compatible type with dtype.</source>
          <target state="translated">上記のいずれの場合も、numpy ndarray (呼び出し元から提供されたもの、または自動変換されたもののいずれか)は、dtypeと互換性のある型でなければなりません。</target>
        </trans-unit>
        <trans-unit id="b2af86db54b3c6e559c751f3b18febb46377d6d4" translate="yes" xml:space="preserve">
          <source>In every case, these &lt;code&gt;Tensor&lt;/code&gt;s are all floating dtype.</source>
          <target state="translated">いずれの場合も、これらの &lt;code&gt;Tensor&lt;/code&gt; はすべて浮動dtypeです。</target>
        </trans-unit>
        <trans-unit id="df70ac6f46a69a033f507ba69518b4967c5b0477" translate="yes" xml:space="preserve">
          <source>In fact, a higher-level solution to update a distributed variable is by calling &lt;code&gt;assign&lt;/code&gt; on the variable as you would do to a regular &lt;a href=&quot;../../../variable&quot;&gt;&lt;code&gt;tf.Variable&lt;/code&gt;&lt;/a&gt;. You can call the method in both &lt;em&gt;replica context&lt;/em&gt; and &lt;em&gt;cross-replica context&lt;/em&gt;. For a &lt;em&gt;mirrored variable&lt;/em&gt;, calling &lt;code&gt;assign&lt;/code&gt; in &lt;em&gt;replica context&lt;/em&gt; requires you to specify the &lt;code&gt;aggregation&lt;/code&gt; type in the variable constructor. In that case, the context switching and sync described in steps 2 through 4 are handled for you. If you call &lt;code&gt;assign&lt;/code&gt; on &lt;em&gt;mirrored variable&lt;/em&gt; in &lt;em&gt;cross-replica context&lt;/em&gt;, you can only assign a single value or assign values from another mirrored variable or a mirrored &lt;a href=&quot;../../../distribute/distributedvalues&quot;&gt;&lt;code&gt;tf.distribute.DistributedValues&lt;/code&gt;&lt;/a&gt;. For a &lt;em&gt;SyncOnRead variable&lt;/em&gt;, in &lt;em&gt;replica context&lt;/em&gt;, you can simply call &lt;code&gt;assign&lt;/code&gt; on it and no aggregation happens under the hood. In &lt;em&gt;cross-replica context&lt;/em&gt;, you can only assign a single value to a SyncOnRead variable. One example case is restoring from a checkpoint: if the &lt;code&gt;aggregation&lt;/code&gt; type of the variable is &lt;a href=&quot;../../../variableaggregation#SUM&quot;&gt;&lt;code&gt;tf.VariableAggregation.SUM&lt;/code&gt;&lt;/a&gt;, it is assumed that replica values were added before checkpointing, so at the time of restoring, the value is divided by the number of replicas and then assigned to each replica; if the &lt;code&gt;aggregation&lt;/code&gt; type is &lt;a href=&quot;../../../variableaggregation#MEAN&quot;&gt;&lt;code&gt;tf.VariableAggregation.MEAN&lt;/code&gt;&lt;/a&gt;, the value is assigned to each replica directly.</source>
          <target state="translated">実際、分散変数を更新するための高レベルのソリューションは、通常の&lt;a href=&quot;../../../variable&quot;&gt; &lt;code&gt;tf.Variable&lt;/code&gt; &lt;/a&gt;に対して行うように、変数に対して &lt;code&gt;assign&lt;/code&gt; を呼び出すことです。&lt;em&gt;レプリカコンテキスト&lt;/em&gt;と&lt;em&gt;クロス&lt;/em&gt;&lt;em&gt;レプリカコンテキストの&lt;/em&gt;両方でメソッドを呼び出すことができ&lt;em&gt;ます&lt;/em&gt;。以下のために&lt;em&gt;ミラーリングされた変数&lt;/em&gt;、呼び出し &lt;code&gt;assign&lt;/code&gt; で&lt;em&gt;レプリカコンテキストは、&lt;/em&gt;指定する必要が &lt;code&gt;aggregation&lt;/code&gt; 変数のコンストラクタでタイプを。その場合、ステップ2から4で説明したコンテキストの切り替えと同期が自動的に処理されます。&lt;em&gt;クロスレプリカコンテキスト&lt;/em&gt;で&lt;em&gt;ミラーリングされた変数&lt;/em&gt;で &lt;code&gt;assign&lt;/code&gt; を呼び出す場合&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;、単一の値のみを割り当てるか、別のミラーリングされた変数またはミラーリングされた&lt;a href=&quot;../../../distribute/distributedvalues&quot;&gt; &lt;code&gt;tf.distribute.DistributedValues&lt;/code&gt; &lt;/a&gt;から値を割り当てることができます。&lt;em&gt;SyncOnRead変数の&lt;/em&gt;場合、&lt;em&gt;レプリカコンテキスト&lt;/em&gt;では、&lt;em&gt;その変数&lt;/em&gt;に対して &lt;code&gt;assign&lt;/code&gt; を呼び出すだけで、&lt;em&gt;内部で&lt;/em&gt;集計は行われません。では&lt;em&gt;クロスレプリカコンテキスト&lt;/em&gt;、あなただけSyncOnRead変数に単一の値を割り当てることができます。 1つの例は、チェックポイントからの復元です。変数の &lt;code&gt;aggregation&lt;/code&gt; タイプが&lt;a href=&quot;../../../variableaggregation#SUM&quot;&gt; &lt;code&gt;tf.VariableAggregation.SUM&lt;/code&gt; の&lt;/a&gt;場合、チェックポイントの前にレプリカ値が追加されたと見なされるため、復元時に値がレプリカの数で除算されます。次に、各レプリカに割り当てられます。の場合 &lt;code&gt;aggregation&lt;/code&gt; タイプは&lt;a href=&quot;../../../variableaggregation#MEAN&quot;&gt; &lt;code&gt;tf.VariableAggregation.MEAN&lt;/code&gt; &lt;/a&gt;で、値は各レプリカに直接割り当てられます。</target>
        </trans-unit>
        <trans-unit id="f09214f6918bfb65897e422e8565cff18e083e90" translate="yes" xml:space="preserve">
          <source>In fact, a higher-level solution to update a distributed variable is by calling &lt;code&gt;assign&lt;/code&gt; on the variable as you would do to a regular &lt;a href=&quot;../variable&quot;&gt;&lt;code&gt;tf.Variable&lt;/code&gt;&lt;/a&gt;. You can call the method in both &lt;em&gt;replica context&lt;/em&gt; and &lt;em&gt;cross-replica context&lt;/em&gt;. For a &lt;em&gt;mirrored variable&lt;/em&gt;, calling &lt;code&gt;assign&lt;/code&gt; in &lt;em&gt;replica context&lt;/em&gt; requires you to specify the &lt;code&gt;aggregation&lt;/code&gt; type in the variable constructor. In that case, the context switching and sync described in steps 2 through 4 are handled for you. If you call &lt;code&gt;assign&lt;/code&gt; on &lt;em&gt;mirrored variable&lt;/em&gt; in &lt;em&gt;cross-replica context&lt;/em&gt;, you can only assign a single value or assign values from another mirrored variable or a mirrored &lt;a href=&quot;distributedvalues&quot;&gt;&lt;code&gt;tf.distribute.DistributedValues&lt;/code&gt;&lt;/a&gt;. For a &lt;em&gt;SyncOnRead variable&lt;/em&gt;, in &lt;em&gt;replica context&lt;/em&gt;, you can simply call &lt;code&gt;assign&lt;/code&gt; on it and no aggregation happens under the hood. In &lt;em&gt;cross-replica context&lt;/em&gt;, you can only assign a single value to a SyncOnRead variable. One example case is restoring from a checkpoint: if the &lt;code&gt;aggregation&lt;/code&gt; type of the variable is &lt;a href=&quot;../variableaggregation#SUM&quot;&gt;&lt;code&gt;tf.VariableAggregation.SUM&lt;/code&gt;&lt;/a&gt;, it is assumed that replica values were added before checkpointing, so at the time of restoring, the value is divided by the number of replicas and then assigned to each replica; if the &lt;code&gt;aggregation&lt;/code&gt; type is &lt;a href=&quot;../variableaggregation#MEAN&quot;&gt;&lt;code&gt;tf.VariableAggregation.MEAN&lt;/code&gt;&lt;/a&gt;, the value is assigned to each replica directly.</source>
          <target state="translated">実際、分散変数を更新するための高レベルのソリューションは、通常の&lt;a href=&quot;../variable&quot;&gt; &lt;code&gt;tf.Variable&lt;/code&gt; &lt;/a&gt;に対して行うように、変数に対して &lt;code&gt;assign&lt;/code&gt; を呼び出すことです。&lt;em&gt;レプリカコンテキスト&lt;/em&gt;と&lt;em&gt;クロス&lt;/em&gt;&lt;em&gt;レプリカコンテキストの&lt;/em&gt;両方でメソッドを呼び出すことができ&lt;em&gt;ます&lt;/em&gt;。以下のために&lt;em&gt;ミラーリングされた変数&lt;/em&gt;、呼び出し &lt;code&gt;assign&lt;/code&gt; で&lt;em&gt;レプリカコンテキストは、&lt;/em&gt;指定する必要が &lt;code&gt;aggregation&lt;/code&gt; 変数のコンストラクタでタイプを。その場合、ステップ2から4で説明したコンテキストの切り替えと同期が自動的に処理されます。&lt;em&gt;クロスレプリカコンテキスト&lt;/em&gt;で&lt;em&gt;ミラーリングされた変数&lt;/em&gt;で &lt;code&gt;assign&lt;/code&gt; を呼び出す場合&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;、単一の値のみを割り当てるか、別のミラーリングされた変数またはミラーリングされた&lt;a href=&quot;distributedvalues&quot;&gt; &lt;code&gt;tf.distribute.DistributedValues&lt;/code&gt; &lt;/a&gt;から値を割り当てることができます。&lt;em&gt;SyncOnRead変数の&lt;/em&gt;場合、&lt;em&gt;レプリカコンテキスト&lt;/em&gt;では、&lt;em&gt;その変数&lt;/em&gt;に対して &lt;code&gt;assign&lt;/code&gt; を呼び出すだけで、&lt;em&gt;内部で&lt;/em&gt;集計は行われません。では&lt;em&gt;クロスレプリカコンテキスト&lt;/em&gt;、あなただけSyncOnRead変数に単一の値を割り当てることができます。 1つの例は、チェックポイントからの復元です。変数の &lt;code&gt;aggregation&lt;/code&gt; タイプが&lt;a href=&quot;../variableaggregation#SUM&quot;&gt; &lt;code&gt;tf.VariableAggregation.SUM&lt;/code&gt; の&lt;/a&gt;場合、チェックポイントの前にレプリカ値が追加されたと見なされるため、復元時に値がレプリカの数で除算されます。次に、各レプリカに割り当てられます。の場合 &lt;code&gt;aggregation&lt;/code&gt; タイプは&lt;a href=&quot;../variableaggregation#MEAN&quot;&gt; &lt;code&gt;tf.VariableAggregation.MEAN&lt;/code&gt; &lt;/a&gt;で、値は各レプリカに直接割り当てられます。</target>
        </trans-unit>
        <trans-unit id="458f9bf1f3a55d57242c3dfd6a8b1b2360358c13" translate="yes" xml:space="preserve">
          <source>In general multiprocessing.Pool can interact quite badly with other, seemingly unrelated, parts of a codebase due to Pool's reliance on fork. This method cleans up all pools which are known to belong to Keras (and thus can be safely terminated).</source>
          <target state="translated">一般的に、multiprocessing.Pool は、Pool が fork に依存しているために、コードベースの他の、一見無関係に見える部分と非常に悪い相互作用をすることがあります。このメソッドは、Keras に属することがわかっている(安全に終了できる)すべてのプールをクリーンアップします。</target>
        </trans-unit>
        <trans-unit id="05fa93477d180d1acfa7da38b422f9dbed979a61" translate="yes" xml:space="preserve">
          <source>In general, &lt;a href=&quot;../../devicespec#from_string&quot;&gt;&lt;code&gt;DeviceSpec.from_string&lt;/code&gt;&lt;/a&gt; should completely replace &lt;a href=&quot;../../devicespec#parse_from_string&quot;&gt;&lt;code&gt;DeviceSpec.parse_from_string&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../../devicespec#replace&quot;&gt;&lt;code&gt;DeviceSpec.replace&lt;/code&gt;&lt;/a&gt; should completely replace setting attributes directly.</source>
          <target state="translated">一般的には、&lt;a href=&quot;../../devicespec#from_string&quot;&gt; &lt;code&gt;DeviceSpec.from_string&lt;/code&gt; は&lt;/a&gt;完全に置き換える必要があり&lt;a href=&quot;../../devicespec#parse_from_string&quot;&gt; &lt;code&gt;DeviceSpec.parse_from_string&lt;/code&gt; を&lt;/a&gt;、そして&lt;a href=&quot;../../devicespec#replace&quot;&gt; &lt;code&gt;DeviceSpec.replace&lt;/code&gt; は&lt;/a&gt;完全に直接設定する属性を交換する必要があります。</target>
        </trans-unit>
        <trans-unit id="c1759e56b5d26a55f209d28b2c39da67c3d2c868" translate="yes" xml:space="preserve">
          <source>In general, &lt;a href=&quot;devicespec#from_string&quot;&gt;&lt;code&gt;DeviceSpec.from_string&lt;/code&gt;&lt;/a&gt; should completely replace &lt;a href=&quot;devicespec#parse_from_string&quot;&gt;&lt;code&gt;DeviceSpec.parse_from_string&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;devicespec#replace&quot;&gt;&lt;code&gt;DeviceSpec.replace&lt;/code&gt;&lt;/a&gt; should completely replace setting attributes directly.</source>
          <target state="translated">一般的には、&lt;a href=&quot;devicespec#from_string&quot;&gt; &lt;code&gt;DeviceSpec.from_string&lt;/code&gt; は&lt;/a&gt;完全に置き換える必要があり&lt;a href=&quot;devicespec#parse_from_string&quot;&gt; &lt;code&gt;DeviceSpec.parse_from_string&lt;/code&gt; を&lt;/a&gt;、そして&lt;a href=&quot;devicespec#replace&quot;&gt; &lt;code&gt;DeviceSpec.replace&lt;/code&gt; は&lt;/a&gt;完全に直接設定する属性を交換する必要があります。</target>
        </trans-unit>
        <trans-unit id="0be78576bf089134edc696318f9dc842768f1015" translate="yes" xml:space="preserve">
          <source>In general, &lt;a href=&quot;https://www.tensorflow.org/api_docs/python/tf/DeviceSpec#from_string&quot;&gt;&lt;code&gt;DeviceSpec.from_string&lt;/code&gt;&lt;/a&gt; should completely replace &lt;a href=&quot;https://www.tensorflow.org/api_docs/python/tf/DeviceSpec#parse_from_string&quot;&gt;&lt;code&gt;DeviceSpec.parse_from_string&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://www.tensorflow.org/api_docs/python/tf/DeviceSpec#replace&quot;&gt;&lt;code&gt;DeviceSpec.replace&lt;/code&gt;&lt;/a&gt; should completely replace setting attributes directly.</source>
          <target state="translated">一般に、&lt;a href=&quot;https://www.tensorflow.org/api_docs/python/tf/DeviceSpec#from_string&quot;&gt; &lt;code&gt;DeviceSpec.from_string&lt;/code&gt; &lt;/a&gt;はDeviceSpec.parse_from_stringを完全に置き換える&lt;a href=&quot;https://www.tensorflow.org/api_docs/python/tf/DeviceSpec#parse_from_string&quot;&gt; &lt;code&gt;DeviceSpec.parse_from_string&lt;/code&gt; &lt;/a&gt;があり、&lt;a href=&quot;https://www.tensorflow.org/api_docs/python/tf/DeviceSpec#replace&quot;&gt; &lt;code&gt;DeviceSpec.replace&lt;/code&gt; &lt;/a&gt;は設定属性を直接完全に置き換える必要があります。</target>
        </trans-unit>
        <trans-unit id="e6b1248ae5eafe23fc297bb9a228b2f925c57498" translate="yes" xml:space="preserve">
          <source>In general, &lt;code&gt;0 &amp;lt; dim(mask) = K &amp;lt;= dim(tensor)&lt;/code&gt;, and &lt;code&gt;mask&lt;/code&gt;'s shape must match the first K dimensions of &lt;code&gt;tensor&lt;/code&gt;'s shape. We then have: &lt;code&gt;boolean_mask(tensor, mask)[i, j1,...,jd] = tensor[i1,...,iK,j1,...,jd]&lt;/code&gt; where &lt;code&gt;(i1,...,iK)&lt;/code&gt; is the ith &lt;code&gt;True&lt;/code&gt; entry of &lt;code&gt;mask&lt;/code&gt; (row-major order). The &lt;code&gt;axis&lt;/code&gt; could be used with &lt;code&gt;mask&lt;/code&gt; to indicate the axis to mask from. In that case, &lt;code&gt;axis + dim(mask) &amp;lt;= dim(tensor)&lt;/code&gt; and &lt;code&gt;mask&lt;/code&gt;'s shape must match the first &lt;code&gt;axis + dim(mask)&lt;/code&gt; dimensions of &lt;code&gt;tensor&lt;/code&gt;'s shape.</source>
          <target state="translated">一般に、 &lt;code&gt;0 &amp;lt; dim(mask) = K &amp;lt;= dim(tensor)&lt;/code&gt; であり、 &lt;code&gt;mask&lt;/code&gt; の形状は、 &lt;code&gt;tensor&lt;/code&gt; の形状の最初のK次元と一致する必要があります。その後、次のようになります &lt;code&gt;boolean_mask(tensor, mask)[i, j1,...,jd] = tensor[i1,...,iK,j1,...,jd]&lt;/code&gt; where &lt;code&gt;(i1,...,iK)&lt;/code&gt; &lt;code&gt;mask&lt;/code&gt; i番目の &lt;code&gt;True&lt;/code&gt; エントリです（行優先順）。 &lt;code&gt;axis&lt;/code&gt; と共に使用することができる &lt;code&gt;mask&lt;/code&gt; からマスクする軸を示すため。その場合、 &lt;code&gt;axis + dim(mask) &amp;lt;= dim(tensor)&lt;/code&gt; と &lt;code&gt;mask&lt;/code&gt; の形状は、第1一致しなければならない &lt;code&gt;axis + dim(mask)&lt;/code&gt; の寸法 &lt;code&gt;tensor&lt;/code&gt; の形状を'。</target>
        </trans-unit>
        <trans-unit id="df73d635dcf19899192fc8057c9a906f0ba749f2" translate="yes" xml:space="preserve">
          <source>In general, &lt;code&gt;order(c) = order(a) + order(b) - 2*len(axes[0])&lt;/code&gt;.</source>
          <target state="translated">一般に、 &lt;code&gt;order(c) = order(a) + order(b) - 2*len(axes[0])&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="8197a907e7eede9a4ab49989b9c67df1ecf6abfd" translate="yes" xml:space="preserve">
          <source>In general, Lambda layers can be convenient for simple stateless computation, but anything more complex should use a subclass Layer instead.</source>
          <target state="translated">一般的に、ラムダレイヤーは単純なステートレス計算には便利ですが、より複雑なものは、代わりにサブクラスのレイヤーを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="f38c9626976c1df9169c1e0b677516dea631b670" translate="yes" xml:space="preserve">
          <source>In general, it is recommended to create stateful objects like &lt;a href=&quot;variable&quot;&gt;&lt;code&gt;tf.Variable&lt;/code&gt;&lt;/a&gt; outside of &lt;a href=&quot;function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt; and passing them as arguments.</source>
          <target state="translated">一般に、&lt;a href=&quot;variable&quot;&gt; &lt;code&gt;tf.Variable&lt;/code&gt; &lt;/a&gt;外部で&lt;a href=&quot;function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt;などのステートフルオブジェクトを作成し、それらを引数として渡すことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="619dfbe395f886ec7d908acd2d16888a420d60c9" translate="yes" xml:space="preserve">
          <source>In general, multi-client tf.distribute strategies such as &lt;a href=&quot;../experimental/multiworkermirroredstrategy&quot;&gt;&lt;code&gt;tf.distribute.experimental.MultiWorkerMirroredStrategy&lt;/code&gt;&lt;/a&gt; require task_type and task_id properties to be available in the &lt;code&gt;ClusterResolver&lt;/code&gt; they are using. On the other hand, these concepts are not applicable in single-client strategies, such as &lt;a href=&quot;../experimental/tpustrategy&quot;&gt;&lt;code&gt;tf.distribute.experimental.TPUStrategy&lt;/code&gt;&lt;/a&gt;, because the program is only expected to be run on one task, so there should not be a need to have code branches according to task type and task id.</source>
          <target state="translated">一般的に、のようなマルチクライアントtf.distribute戦略&lt;a href=&quot;../experimental/multiworkermirroredstrategy&quot;&gt; &lt;code&gt;tf.distribute.experimental.MultiWorkerMirroredStrategy&lt;/code&gt; は&lt;/a&gt;で利用できるようにtask_typeとTASK_IDの特性を必要と &lt;code&gt;ClusterResolver&lt;/code&gt; 、彼らが使用しています。一方、これらの概念は、&lt;a href=&quot;../experimental/tpustrategy&quot;&gt; &lt;code&gt;tf.distribute.experimental.TPUStrategy&lt;/code&gt; &lt;/a&gt;などのシングルクライアント戦略には適用できません。これは、プログラムが1つのタスクでのみ実行されることが想定されているため、コードブランチを用意する必要がないためです。タスクタイプとタスクIDに応じて。</target>
        </trans-unit>
        <trans-unit id="75611dab36791d918a60f2d742b07af8d1fae0c4" translate="yes" xml:space="preserve">
          <source>In general, the &lt;code&gt;equation&lt;/code&gt; is obtained from the more familiar element-wise equation by 1. removing variable names, brackets, and commas, 2. replacing &quot;*&quot; with &quot;,&quot;, 3. dropping summation signs, and 4. moving the output to the right, and replacing &quot;=&quot; with &quot;-&amp;gt;&quot;.</source>
          <target state="translated">一般に、 &lt;code&gt;equation&lt;/code&gt; は、1。変数名、角かっこ、およびコンマを削除する、2。「*」を「、」で置き換える、3。合計記号を削除する、4。出力を移動する、より一般的な要素ごとの方程式から取得されます。右側の「=」を「-&amp;gt;」に置き換えます。</target>
        </trans-unit>
        <trans-unit id="052bab4a4ace4679f5fac38b0fa6d8e9de67b67a" translate="yes" xml:space="preserve">
          <source>In general, to convert the element-wise equation into the &lt;code&gt;equation&lt;/code&gt; string, use the following procedure (intermediate strings for matrix multiplication example provided in parentheses):</source>
          <target state="translated">一般に、要素ごとの方程式を &lt;code&gt;equation&lt;/code&gt; 文字列に変換するには、次の手順を使用します（括弧内に示されている行列乗算の例の中間文字列）。</target>
        </trans-unit>
        <trans-unit id="c259f3cade9e31230407abe615fe31af4bb9832a" translate="yes" xml:space="preserve">
          <source>In general, when using a multi-worker &lt;a href=&quot;../../../../distribute&quot;&gt;&lt;code&gt;tf.distribute&lt;/code&gt;&lt;/a&gt; strategy such as &lt;a href=&quot;../../../../distribute/experimental/multiworkermirroredstrategy&quot;&gt;&lt;code&gt;tf.distribute.experimental.MultiWorkerMirroredStrategy&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../../../distribute/experimental/tpustrategy&quot;&gt;&lt;code&gt;tf.distribute.experimental.TPUStrategy()&lt;/code&gt;&lt;/a&gt;, there is a &lt;a href=&quot;../../../../distribute/cluster_resolver/clusterresolver&quot;&gt;&lt;code&gt;tf.distribute.cluster_resolver.ClusterResolver&lt;/code&gt;&lt;/a&gt; associated with the strategy used, and such an instance is returned by this property.</source>
          <target state="translated">一般に、&lt;a href=&quot;../../../../distribute/experimental/multiworkermirroredstrategy&quot;&gt; &lt;code&gt;tf.distribute.experimental.MultiWorkerMirroredStrategy&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;../../../../distribute/experimental/tpustrategy&quot;&gt; &lt;code&gt;tf.distribute.experimental.TPUStrategy()&lt;/code&gt; &lt;/a&gt;などのマルチワーカー&lt;a href=&quot;../../../../distribute&quot;&gt; &lt;code&gt;tf.distribute&lt;/code&gt; &lt;/a&gt;戦略を使用する場合、使用される戦略に関連付けられた&lt;a href=&quot;../../../../distribute/cluster_resolver/clusterresolver&quot;&gt; &lt;code&gt;tf.distribute.cluster_resolver.ClusterResolver&lt;/code&gt; が&lt;/a&gt;あります。このようなインスタンスは、このプロパティによって返されます。</target>
        </trans-unit>
        <trans-unit id="e7eeb79a4204a5424bef497bd6fd4d234294c4f4" translate="yes" xml:space="preserve">
          <source>In general, when using a multi-worker &lt;a href=&quot;../../../distribute&quot;&gt;&lt;code&gt;tf.distribute&lt;/code&gt;&lt;/a&gt; strategy such as &lt;a href=&quot;../../../distribute/experimental/multiworkermirroredstrategy&quot;&gt;&lt;code&gt;tf.distribute.experimental.MultiWorkerMirroredStrategy&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../../distribute/experimental/tpustrategy&quot;&gt;&lt;code&gt;tf.distribute.experimental.TPUStrategy()&lt;/code&gt;&lt;/a&gt;, there is a &lt;a href=&quot;../../../distribute/cluster_resolver/clusterresolver&quot;&gt;&lt;code&gt;tf.distribute.cluster_resolver.ClusterResolver&lt;/code&gt;&lt;/a&gt; associated with the strategy used, and such an instance is returned by this property.</source>
          <target state="translated">一般に、&lt;a href=&quot;../../../distribute/experimental/multiworkermirroredstrategy&quot;&gt; &lt;code&gt;tf.distribute.experimental.MultiWorkerMirroredStrategy&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;../../../distribute/experimental/tpustrategy&quot;&gt; &lt;code&gt;tf.distribute.experimental.TPUStrategy()&lt;/code&gt; &lt;/a&gt;などのマルチワーカー&lt;a href=&quot;../../../distribute&quot;&gt; &lt;code&gt;tf.distribute&lt;/code&gt; &lt;/a&gt;戦略を使用する場合、使用される戦略に関連付けられた&lt;a href=&quot;../../../distribute/cluster_resolver/clusterresolver&quot;&gt; &lt;code&gt;tf.distribute.cluster_resolver.ClusterResolver&lt;/code&gt; が&lt;/a&gt;あります。このようなインスタンスは、このプロパティによって返されます。</target>
        </trans-unit>
        <trans-unit id="1852073079600e10293c9450fade374fcb9f2a19" translate="yes" xml:space="preserve">
          <source>In general, when using a multi-worker &lt;a href=&quot;../../distribute&quot;&gt;&lt;code&gt;tf.distribute&lt;/code&gt;&lt;/a&gt; strategy such as &lt;a href=&quot;multiworkermirroredstrategy&quot;&gt;&lt;code&gt;tf.distribute.experimental.MultiWorkerMirroredStrategy&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;tpustrategy&quot;&gt;&lt;code&gt;tf.distribute.experimental.TPUStrategy()&lt;/code&gt;&lt;/a&gt;, there is a &lt;a href=&quot;../cluster_resolver/clusterresolver&quot;&gt;&lt;code&gt;tf.distribute.cluster_resolver.ClusterResolver&lt;/code&gt;&lt;/a&gt; associated with the strategy used, and such an instance is returned by this property.</source>
          <target state="translated">一般に、&lt;a href=&quot;multiworkermirroredstrategy&quot;&gt; &lt;code&gt;tf.distribute.experimental.MultiWorkerMirroredStrategy&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;tpustrategy&quot;&gt; &lt;code&gt;tf.distribute.experimental.TPUStrategy()&lt;/code&gt; &lt;/a&gt;などのマルチワーカー&lt;a href=&quot;../../distribute&quot;&gt; &lt;code&gt;tf.distribute&lt;/code&gt; &lt;/a&gt;戦略を使用する場合、使用される戦略に関連付けられた&lt;a href=&quot;../cluster_resolver/clusterresolver&quot;&gt; &lt;code&gt;tf.distribute.cluster_resolver.ClusterResolver&lt;/code&gt; が&lt;/a&gt;あります。このようなインスタンスは、このプロパティによって返されます。</target>
        </trans-unit>
        <trans-unit id="a77606f598bc444a0148a3b80b85e17cb5930008" translate="yes" xml:space="preserve">
          <source>In general, when using a multi-worker &lt;a href=&quot;../distribute&quot;&gt;&lt;code&gt;tf.distribute&lt;/code&gt;&lt;/a&gt; strategy such as &lt;a href=&quot;experimental/multiworkermirroredstrategy&quot;&gt;&lt;code&gt;tf.distribute.experimental.MultiWorkerMirroredStrategy&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;experimental/tpustrategy&quot;&gt;&lt;code&gt;tf.distribute.experimental.TPUStrategy()&lt;/code&gt;&lt;/a&gt;, there is a &lt;a href=&quot;cluster_resolver/clusterresolver&quot;&gt;&lt;code&gt;tf.distribute.cluster_resolver.ClusterResolver&lt;/code&gt;&lt;/a&gt; associated with the strategy used, and such an instance is returned by this property.</source>
          <target state="translated">一般に、&lt;a href=&quot;experimental/multiworkermirroredstrategy&quot;&gt; &lt;code&gt;tf.distribute.experimental.MultiWorkerMirroredStrategy&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;experimental/tpustrategy&quot;&gt; &lt;code&gt;tf.distribute.experimental.TPUStrategy()&lt;/code&gt; &lt;/a&gt;などのマルチワーカー&lt;a href=&quot;../distribute&quot;&gt; &lt;code&gt;tf.distribute&lt;/code&gt; &lt;/a&gt;戦略を使用する場合、使用される戦略に関連付けられた&lt;a href=&quot;cluster_resolver/clusterresolver&quot;&gt; &lt;code&gt;tf.distribute.cluster_resolver.ClusterResolver&lt;/code&gt; が&lt;/a&gt;あります。このようなインスタンスは、このプロパティによって返されます。</target>
        </trans-unit>
        <trans-unit id="81ba21f1479a022109ab2f3d99be347c7bb01f17" translate="yes" xml:space="preserve">
          <source>In general, you should use the &lt;code&gt;with strategy.scope():&lt;/code&gt; API, but this alternative may be convenient in notebooks where you would have to put each cell in a &lt;code&gt;with strategy.scope():&lt;/code&gt; block.</source>
          <target state="translated">一般的に、 &lt;code&gt;with strategy.scope():&lt;/code&gt; API を使用する必要がありますが、この代替案は、withStrategy.scope &lt;code&gt;with strategy.scope():&lt;/code&gt; ブロックに各セルを配置する必要があるノートブックでは便利な場合があります。</target>
        </trans-unit>
        <trans-unit id="c093e0c853b18b211b082dc234fa39265b721fa2" translate="yes" xml:space="preserve">
          <source>In graph mode, this returns an operation which when executed performs the write. In eager mode, the write is performed by the method itself and there is no return value.</source>
          <target state="translated">グラフモードでは、これは実行されると書き込みを実行する操作を返します。イーガーモードでは、書き込みはメソッド自身によって実行され、戻り値はありません。</target>
        </trans-unit>
        <trans-unit id="1321491278c9fd1609935b5dea7b2ba0f946dfd9" translate="yes" xml:space="preserve">
          <source>In graph mode, you should typically call this method &lt;em&gt;once&lt;/em&gt; and use its result as the input to another computation. A typical loop will then call &lt;code&gt;tf.Session.run&lt;/code&gt; on the result of that computation. The loop will terminate when the &lt;a href=&quot;https://www.tensorflow.org/api_docs/python/tf/data/Iterator#get_next&quot;&gt;&lt;code&gt;Iterator.get_next()&lt;/code&gt;&lt;/a&gt; operation raises &lt;a href=&quot;../../../errors/outofrangeerror&quot;&gt;&lt;code&gt;tf.errors.OutOfRangeError&lt;/code&gt;&lt;/a&gt;. The following skeleton shows how to use this method when building a training loop:</source>
          <target state="translated">グラフモードでは、通常、このメソッドを&lt;em&gt;1回&lt;/em&gt;呼び出し、その結果を別の計算への入力として使用する必要があります。次に、一般的なループは、その計算の結果に対して &lt;code&gt;tf.Session.run&lt;/code&gt; を呼び出します。&lt;a href=&quot;https://www.tensorflow.org/api_docs/python/tf/data/Iterator#get_next&quot;&gt; &lt;code&gt;Iterator.get_next()&lt;/code&gt; &lt;/a&gt;操作で&lt;a href=&quot;../../../errors/outofrangeerror&quot;&gt; &lt;code&gt;tf.errors.OutOfRangeError&lt;/code&gt; &lt;/a&gt;が発生すると、ループは終了します。次のスケルトンは、トレーニングループを構築するときにこのメソッドを使用する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="716f31f5a03aef3f69ebd13d12a35b86aebe2e30" translate="yes" xml:space="preserve">
          <source>In graph mode, you should typically call this method &lt;em&gt;once&lt;/em&gt; and use its result as the input to another computation. A typical loop will then call &lt;code&gt;tf.Session.run&lt;/code&gt; on the result of that computation. The loop will terminate when the &lt;code&gt;Iterator.get_next()&lt;/code&gt; operation raises &lt;a href=&quot;../../../errors/outofrangeerror&quot;&gt;&lt;code&gt;tf.errors.OutOfRangeError&lt;/code&gt;&lt;/a&gt;. The following skeleton shows how to use this method when building a training loop:</source>
          <target state="translated">グラフモードでは、通常、このメソッドを&lt;em&gt;一度&lt;/em&gt;呼び出し、その結果を別の計算への入力として使用する必要があります。典型的なループは、その計算の結果に対して &lt;code&gt;tf.Session.run&lt;/code&gt; を呼び出します。 &lt;code&gt;Iterator.get_next()&lt;/code&gt; オペレーションが&lt;a href=&quot;../../../errors/outofrangeerror&quot;&gt; &lt;code&gt;tf.errors.OutOfRangeError&lt;/code&gt; を&lt;/a&gt;発生させると、ループは終了します。次のスケルトンは、トレーニングループを構築するときにこのメソッドを使用する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="a6ca36a8e0927892e5adf0bea0071edf9a03306d" translate="yes" xml:space="preserve">
          <source>In many common cases, saving models for serving will be as simple as:</source>
          <target state="translated">多くの一般的なケースでは、サーブのためのセーブモデルは、単純なものになります。</target>
        </trans-unit>
        <trans-unit id="0c1e157d5c07c3be9a526b99a8cd938ffdff518e" translate="yes" xml:space="preserve">
          <source>In most cases you can set session arguments as follows:</source>
          <target state="translated">ほとんどの場合、以下のようにセッション引数を設定することができます。</target>
        </trans-unit>
        <trans-unit id="b24eb32e772a4b559b69c542c15c36c63f4a898a" translate="yes" xml:space="preserve">
          <source>In most functions that accept a LossScale, you can also pass an int (such as</source>
          <target state="translated">LossScale を受け入れるほとんどの関数では、int を渡すこともできます (例えば</target>
        </trans-unit>
        <trans-unit id="39b8e52a139b65c15d15047812c546d3fc8efe99" translate="yes" xml:space="preserve">
          <source>In one of the two cases below:</source>
          <target state="translated">以下の2つのケースのいずれかで</target>
        </trans-unit>
        <trans-unit id="e583468a15187c915f71a5317544c6b871de6462" translate="yes" xml:space="preserve">
          <source>In other words,</source>
          <target state="translated">言い換えれば</target>
        </trans-unit>
        <trans-unit id="36ca12036e617d13dd1e10a27cdcc10a21abe207" translate="yes" xml:space="preserve">
          <source>In other words, if</source>
          <target state="translated">言い換えれば、もし</target>
        </trans-unit>
        <trans-unit id="68f09d96ffe8138bea778134c4c062b38232e1d6" translate="yes" xml:space="preserve">
          <source>In other words, it flattens each data samples of a batch.</source>
          <target state="translated">つまり、バッチの各データサンプルを平坦化する。</target>
        </trans-unit>
        <trans-unit id="cdb1bf5db2bd1845e8b9a621343dc2f7674e34e9" translate="yes" xml:space="preserve">
          <source>In other words, the last dimension is treated as the $z$ vector.</source>
          <target state="translated">つまり、最後の次元は、$z$ベクトルとして扱われます。</target>
        </trans-unit>
        <trans-unit id="0871ff786a8a3fd603a58b9722f796614ebc2719" translate="yes" xml:space="preserve">
          <source>In other words, the last dimension is treated as the &lt;code&gt;z&lt;/code&gt; vector.</source>
          <target state="translated">つまり、最後の次元は &lt;code&gt;z&lt;/code&gt; ベクトルとして扱われます。</target>
        </trans-unit>
        <trans-unit id="78ff35f7c65003df3e7bcf3683132006bf742ac9" translate="yes" xml:space="preserve">
          <source>In parent, replace child_name's old definition with new_child.</source>
          <target state="translated">parentでは、child_nameの古い定義をnew_childに置き換えます。</target>
        </trans-unit>
        <trans-unit id="d76da88946b010ac70fdfba18e1366302d30f656" translate="yes" xml:space="preserve">
          <source>In particular, all values that are compatible with this TypeSpec must be an instance of this type.</source>
          <target state="translated">特に、このTypeSpecと互換性のあるすべての値は、この型のインスタンスでなければなりません。</target>
        </trans-unit>
        <trans-unit id="e6a5bb936a13cf0b0b5a2a5c1cb9a4facd12daec" translate="yes" xml:space="preserve">
          <source>In particular, the tolerance is reduced to 1e-3 if at least one of the arguments is of type float16.</source>
          <target state="translated">特に、少なくとも1つの引数がfloat16型の場合、許容範囲は1e-3に縮小されます。</target>
        </trans-unit>
        <trans-unit id="44d0d4248217b7cffdeccf5ed82b70d82d1494ed" translate="yes" xml:space="preserve">
          <source>In particular, this adds any losses you have added with &lt;code&gt;tf.add_loss()&lt;/code&gt; to any regularization losses that have been added by regularization parameters on layers constructors e.g. &lt;code&gt;tf.layers&lt;/code&gt;. Be very sure to use this if you are constructing a loss_op manually. Otherwise regularization arguments on &lt;code&gt;tf.layers&lt;/code&gt; methods will not function.</source>
          <target state="translated">特に、これはあなたが追加したいかなる損失追加 &lt;code&gt;tf.add_loss()&lt;/code&gt; 層コンストラクタ例えば上の正則化パラメータによって追加された任意の正則損失に &lt;code&gt;tf.layers&lt;/code&gt; を。loss_opを手動で構築する場合は、これを必ず使用してください。そうでない場合、 &lt;code&gt;tf.layers&lt;/code&gt; メソッドの正規化引数は機能しません。</target>
        </trans-unit>
        <trans-unit id="569e331ba8296ea2e67c10dc906718d574087feb" translate="yes" xml:space="preserve">
          <source>In practice, this is most useful for taking output from operations like QuantizedMatMul that can produce higher bit-depth outputs than their inputs and may have large potential output ranges, but in practice have a distribution of input values that only uses a small fraction of the possible range. By feeding that output into this operator, we can reduce it from 32 bits down to 8 with minimal loss of accuracy.</source>
          <target state="translated">実際には,これは,入力よりも高いビット深度の出力を生成することができ,大きな出力範囲を持つ可能性がありますが,実際には,可能な範囲のごく一部しか使用しない入力値の分布を持つQuantizedMatMulのような演算から出力を取得する場合に最も有用です.その出力をこの演算子に送り込むことで,精度の損失を最小限に抑えて32ビットから8ビットに減らすことができます.</target>
        </trans-unit>
        <trans-unit id="e60680116f8f10f4ec9328db9798f3167d053000" translate="yes" xml:space="preserve">
          <source>In python 2.7, make sure to import the following: &lt;code&gt;from __future__ import print_function&lt;/code&gt;</source>
          <target state="translated">Python 2.7では、必ず以下をインポートしてください： &lt;code&gt;from __future__ import print_function&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fa32d137f104b735ab84633f3591ddf26cbba0ca" translate="yes" xml:space="preserve">
          <source>In short:</source>
          <target state="translated">要するに</target>
        </trans-unit>
        <trans-unit id="88d124b3a5514b4439d86d509898719151ee7194" translate="yes" xml:space="preserve">
          <source>In signal processing, cross-correlation is a measure of similarity of two waveforms as a function of a time-lag applied to one of them. This is also known as a sliding dot product or sliding inner-product.</source>
          <target state="translated">信号処理では、相互相関とは、2つの波形のうちの1つに適用される時間差の関数としての類似性を測定することです。これは、スライディング・ドット積またはスライディング・インナー積としても知られています。</target>
        </trans-unit>
        <trans-unit id="be0bf3082cdcee4f10548b89039a3787e696144d" translate="yes" xml:space="preserve">
          <source>In some cases, &lt;a href=&quot;../../vectorized_map&quot;&gt;&lt;code&gt;tf.vectorized_map&lt;/code&gt;&lt;/a&gt; can be used to automatically convert a function to a vectorized eqivalent.</source>
          <target state="translated">場合によっては、&lt;a href=&quot;../../vectorized_map&quot;&gt; &lt;code&gt;tf.vectorized_map&lt;/code&gt; &lt;/a&gt;を使用して、関数をベクトル化された同等物に自動的に変換できます。</target>
        </trans-unit>
        <trans-unit id="1a8cc8853b99fc4bbc66bb3fd1188773731a713d" translate="yes" xml:space="preserve">
          <source>In some cases, &lt;a href=&quot;vectorized_map&quot;&gt;&lt;code&gt;tf.vectorized_map&lt;/code&gt;&lt;/a&gt; can be used to automatically convert a function to a vectorized eqivalent.</source>
          <target state="translated">場合によっては、&lt;a href=&quot;vectorized_map&quot;&gt; &lt;code&gt;tf.vectorized_map&lt;/code&gt; &lt;/a&gt;を使用して、関数をベクトル化された同等物に自動的に変換できます。</target>
        </trans-unit>
        <trans-unit id="f3834a387ac572a1a80e915dcbd47e2584fd2d76" translate="yes" xml:space="preserve">
          <source>In some cases, such as a metric, we want to accumulate a bunch of updates on each replica independently and only aggregate when reading. This can be a big performance win when the value is read only rarely (maybe the value is only read at the end of an epoch or when checkpointing). These are variables created by passing &lt;code&gt;synchronization=ON_READ&lt;/code&gt; to the variable's constructor (and some value for &lt;code&gt;aggregation&lt;/code&gt;).</source>
          <target state="translated">メトリックスなどの一部のケースでは、各レプリカに一連の更新を個別に蓄積し、読み取り時にのみ集計する必要があります。値がまれにしか読み取られない場合（これは、エポックの最後またはチェックポイント時にのみ読み取られる場合）、これはパフォーマンスに大きな影響を与える可能性があります。これらは、 &lt;code&gt;synchronization=ON_READ&lt;/code&gt; を変数のコンストラクターに渡して作成された変数（および &lt;code&gt;aggregation&lt;/code&gt; 用の値）です。</target>
        </trans-unit>
        <trans-unit id="f1db5fe6989f9a4d4881a86d7d0f8ee7689b077f" translate="yes" xml:space="preserve">
          <source>In some cases, the inferred shape may have unknown dimensions. If the caller has additional information about the values of these dimensions, &lt;a href=&quot;tensor#set_shape&quot;&gt;&lt;code&gt;Tensor.set_shape()&lt;/code&gt;&lt;/a&gt; can be used to augment the inferred shape.</source>
          <target state="translated">場合によっては、推定された形状の次元が不明になることがあります。呼び出し元がこれらのディメンションの値に関する追加情報を持っている場合、&lt;a href=&quot;tensor#set_shape&quot;&gt; &lt;code&gt;Tensor.set_shape()&lt;/code&gt; &lt;/a&gt;を使用して、推測された形状を拡張できます。</target>
        </trans-unit>
        <trans-unit id="94661b97f98e1631edeff74724d2853ddff0e3b6" translate="yes" xml:space="preserve">
          <source>In some strategies, a default device scope may also be entered: in &lt;code&gt;MultiWorkerMiroredStrategy&lt;/code&gt;, a default device scope of &quot;/CPU:0&quot; is entered on each worker.</source>
          <target state="translated">一部のストラテジーでは、デフォルトのデバイススコープも入力できます &lt;code&gt;MultiWorkerMiroredStrategy&lt;/code&gt; では、デフォルトのデバイススコープ「/ CPU：0」が各ワーカーに入力されます。</target>
        </trans-unit>
        <trans-unit id="88eb075661eb4f67a83a555945256eb9a90b0cc1" translate="yes" xml:space="preserve">
          <source>In subsequent layers, there is no need for the &lt;code&gt;input_shape&lt;/code&gt;:</source>
          <target state="translated">後続のレイヤーでは、 &lt;code&gt;input_shape&lt;/code&gt; は必要ありません。</target>
        </trans-unit>
        <trans-unit id="857fdd5affc004f92507d11901ea9986d0376b16" translate="yes" xml:space="preserve">
          <source>In the &lt;em&gt;chief&lt;/em&gt; task, the &lt;code&gt;Supervisor&lt;/code&gt; works exactly as in the first example above. In the other tasks &lt;code&gt;sv.managed_session()&lt;/code&gt; waits for the Model to have been initialized before returning a session to the training code. The non-chief tasks depend on the chief task for initializing the model.</source>
          <target state="translated">で&lt;em&gt;チーフ&lt;/em&gt;タスク、 &lt;code&gt;Supervisor&lt;/code&gt; まさに上記の最初の例のように動作します。他のタスクでは、 &lt;code&gt;sv.managed_session()&lt;/code&gt; は、モデルが初期化されるのを待ってから、トレーニングコードにセッションを返します。非主任タスクは、モデルを初期化する主任タスクに依存します。</target>
        </trans-unit>
        <trans-unit id="49fca8ddc23c4fbc33f583e5bbd044e3ced4da7d" translate="yes" xml:space="preserve">
          <source>In the TensorFlow Python API, you can instantiate this dataset via the class &lt;a href=&quot;../data/experimental/randomdataset&quot;&gt;&lt;code&gt;tf.data.experimental.RandomDataset&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">TensorFlow Python APIでは、クラス&lt;a href=&quot;../data/experimental/randomdataset&quot;&gt; &lt;code&gt;tf.data.experimental.RandomDataset&lt;/code&gt; を&lt;/a&gt;介してこのデータセットをインスタンス化できます。</target>
        </trans-unit>
        <trans-unit id="b0d0ac75602613f08d522ad4bae89f61c4aea3ea" translate="yes" xml:space="preserve">
          <source>In the above example, the first feature will be looked up in a table that has a learning rate of 0.2 while the second feature will be looked up in a table that has a learning rate of 0.1.</source>
          <target state="translated">上記の例では、第1の特徴量を学習率0.2のテーブルで調べる一方、第2の特徴量を学習率0.1のテーブルで調べるようにしている。</target>
        </trans-unit>
        <trans-unit id="45e28b216fb36afdc49dad60997d42beaa6422e3" translate="yes" xml:space="preserve">
          <source>In the above example, the first two lines (before the call to &lt;code&gt;distribute&lt;/code&gt;) will be executed on tf.data workers, and the elements provided over RPC. The remaining transformations (after the call to &lt;code&gt;distribute&lt;/code&gt;) will be executed locally.</source>
          <target state="translated">上記の例では、最初の2行（ &lt;code&gt;distribute&lt;/code&gt; の呼び出しの前）がtf.dataワーカーで実行され、要素はRPCを介して提供されます。残りの変換（ &lt;code&gt;distribute&lt;/code&gt; の呼び出し後）はローカルで実行されます。</target>
        </trans-unit>
        <trans-unit id="a86c807225e5481b2e9889d17693e52a348a5bb6" translate="yes" xml:space="preserve">
          <source>In the above example, the input Tensor with the shape of &lt;code&gt;[1, 3]&lt;/code&gt; is broadcasted to output Tensor with shape of &lt;code&gt;[3, 3]&lt;/code&gt;.</source>
          <target state="translated">上記の例では、形状と入力テンソル &lt;code&gt;[1, 3]&lt;/code&gt; の形で出力テンソルにブロードキャストされている &lt;code&gt;[3, 3]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6277b5ea0c4836f9eb1fc077e5a179b440871327" translate="yes" xml:space="preserve">
          <source>In the above examples, we assume that the user has a dataset which returns a tuple where the first element of the tuple matches the structure of what was passed as the &lt;code&gt;feature_config&lt;/code&gt; argument to the object initializer. Also we utilize &lt;a href=&quot;../../../range&quot;&gt;&lt;code&gt;tf.range&lt;/code&gt;&lt;/a&gt; to get a &lt;a href=&quot;../../../while_loop&quot;&gt;&lt;code&gt;tf.while_loop&lt;/code&gt;&lt;/a&gt; in order to increase performance.</source>
          <target state="translated">上記の例では、タプルの最初の要素が、 &lt;code&gt;feature_config&lt;/code&gt; 引数としてオブジェクト初期化子に渡されたものの構造と一致するタプルを返すデータセットをユーザーが持っていると想定しています。また、パフォーマンスを向上させるために、&lt;a href=&quot;../../../while_loop&quot;&gt; &lt;code&gt;tf.while_loop&lt;/code&gt; &lt;/a&gt;を使用して&lt;a href=&quot;../../../range&quot;&gt; &lt;code&gt;tf.range&lt;/code&gt; &lt;/a&gt;を取得します。</target>
        </trans-unit>
        <trans-unit id="0d6b4719a2c3219a2bbde7c4f83c1120564a1d57" translate="yes" xml:space="preserve">
          <source>In the case of dict instances, the sequence consists of the values, sorted by key to ensure deterministic behavior. This is true also for OrderedDict instances: their sequence order is ignored, the sorting order of keys is used instead. The same convention is followed in pack_sequence_as. This correctly repacks dicts and OrderedDicts after they have been flattened, and also allows flattening an OrderedDict and then repacking it back using a corresponding plain dict, or vice-versa. Dictionaries with non-sortable keys cannot be flattened.</source>
          <target state="translated">dictインスタンスの場合、シーケンスは値から構成され、決定論的な動作を保証するためにキーでソートされます。これは OrderedDict インスタンスにも当てはまります:シーケンスの順序は無視され、代わりにキーのソート順序が使われます。pack_sequence_asでも同様の規約が適用されます。これにより、辞書や OrderedDict が平坦化された後に正しくリパックされます。また、OrderedDict を平坦化した後に、対応するプレーンな辞書を使ってリパックすることもできます。ソート不可能なキーを持つ辞書を平坦化することはできません。</target>
        </trans-unit>
        <trans-unit id="4802827e52e703aec4f9202f8faaec1cab12a93e" translate="yes" xml:space="preserve">
          <source>In the case of dynamically sized TensorArrays, gradient computation should only be performed on read operations that have themselves been chained via flow to occur only after all writes have executed. That way the final size of the forward TensorArray is known when this operation is called.</source>
          <target state="translated">動的なサイズのTensorArrayの場合、勾配計算は、すべての書き込みが実行された後にのみ発生するようにフローを介してそれ自体がチェーン化されている読み取り操作に対してのみ実行されるべきです。そうすれば、この操作が呼び出されたときに前方のTensorArrayの最終的なサイズがわかります。</target>
        </trans-unit>
        <trans-unit id="aeb2d8441c532154e13fdb15d9d6cebc3cc43934" translate="yes" xml:space="preserve">
          <source>In the case of variable slice assignment, the Variable object to slice (i.e. tensor is the read-only view of this variable).</source>
          <target state="translated">変数スライス代入の場合、スライスする変数オブジェクト(つまりテンソルはこの変数の読み取り専用ビュー)。</target>
        </trans-unit>
        <trans-unit id="51ed01e4d71ead3866c98e46077be45f69b99800" translate="yes" xml:space="preserve">
          <source>In the case that &lt;code&gt;data_format&lt;/code&gt; does not start with &quot;NC&quot;, computes for 0 &amp;lt;= b &amp;lt; batch_size, 0 &amp;lt;= x[i] &amp;lt; output_spatial_shape[i], 0 &amp;lt;= c &amp;lt; num_channels:</source>
          <target state="translated">&lt;code&gt;data_format&lt;/code&gt; が「NC」で始まらない場合、0 &amp;lt;= b &amp;lt;batch_size、0 &amp;lt;= x [i] &amp;lt;output_spatial_shape [i]、0 &amp;lt;= c &amp;lt;num_channelsを計算します。</target>
        </trans-unit>
        <trans-unit id="f7489a66c28d483acf8142e46fd3d2bce2a97dfd" translate="yes" xml:space="preserve">
          <source>In the case that &lt;code&gt;data_format&lt;/code&gt; does start with &lt;code&gt;&quot;NC&quot;&lt;/code&gt;, the &lt;code&gt;input&lt;/code&gt; and output (but not the &lt;code&gt;filter&lt;/code&gt;) are simply transposed as follows:</source>
          <target state="translated">&lt;code&gt;data_format&lt;/code&gt; が &lt;code&gt;&quot;NC&quot;&lt;/code&gt; で始まる場合、 &lt;code&gt;input&lt;/code&gt; と出力（ &lt;code&gt;filter&lt;/code&gt; はない）は次のように単純に置き換えられます。</target>
        </trans-unit>
        <trans-unit id="15f5b22f7879c5fdc5ce4821da71380664867c9e" translate="yes" xml:space="preserve">
          <source>In the case that &lt;code&gt;data_format&lt;/code&gt; does start with &lt;code&gt;&quot;NC&quot;&lt;/code&gt;, the &lt;code&gt;input&lt;/code&gt; and output (but not the &lt;code&gt;filters&lt;/code&gt;) are simply transposed as follows:</source>
          <target state="translated">&lt;code&gt;data_format&lt;/code&gt; が &lt;code&gt;&quot;NC&quot;&lt;/code&gt; で始まる場合、 &lt;code&gt;input&lt;/code&gt; と出力（ &lt;code&gt;filters&lt;/code&gt; はない）は次のように単純に置き換えられます。</target>
        </trans-unit>
        <trans-unit id="14d0f86400986de97cae42ee5dcb99d4d7671a66" translate="yes" xml:space="preserve">
          <source>In the case that &lt;code&gt;data_format&lt;/code&gt; starts with &lt;code&gt;&quot;NC&quot;&lt;/code&gt;, the &lt;code&gt;input&lt;/code&gt; and output are simply transposed as follows:</source>
          <target state="translated">&lt;code&gt;data_format&lt;/code&gt; が &lt;code&gt;&quot;NC&quot;&lt;/code&gt; で始まる場合、 &lt;code&gt;input&lt;/code&gt; と出力は次のように単純に入れ替えられます。</target>
        </trans-unit>
        <trans-unit id="7585f71a96a6a1ba424fe17e28a732edc83fab83" translate="yes" xml:space="preserve">
          <source>In the case where texts contains lists, we assume each entry of the lists to be a token.</source>
          <target state="translated">テキストにリストが含まれている場合、リストの各項目はトークンであると仮定します。</target>
        </trans-unit>
        <trans-unit id="b27ad5d7c7812f56a3419c5193f53b839dec7afb" translate="yes" xml:space="preserve">
          <source>In the code snippet above, the &lt;a href=&quot;../../../../distribute/distributeddataset&quot;&gt;&lt;code&gt;tf.distribute.DistributedDataset&lt;/code&gt;&lt;/a&gt;&lt;code&gt;dist_dataset&lt;/code&gt; is batched by &lt;code&gt;GLOBAL_BATCH_SIZE&lt;/code&gt;, and we iterate through it using &lt;code&gt;for x in dist_dataset&lt;/code&gt;. &lt;code&gt;x&lt;/code&gt; a &lt;a href=&quot;../../../../distribute/distributedvalues&quot;&gt;&lt;code&gt;tf.distribute.DistributedValues&lt;/code&gt;&lt;/a&gt; containing data for all replicas, which aggregates to a batch of &lt;code&gt;GLOBAL_BATCH_SIZE&lt;/code&gt;. &lt;a href=&quot;../../../../distribute/strategy#run&quot;&gt;&lt;code&gt;tf.distribute.Strategy.run&lt;/code&gt;&lt;/a&gt; will take care of feeding the right per-replica data in &lt;code&gt;x&lt;/code&gt; to the right &lt;code&gt;replica_fn&lt;/code&gt; executed on each replica.</source>
          <target state="translated">上記のコードでは、&lt;a href=&quot;../../../../distribute/distributeddataset&quot;&gt; &lt;code&gt;tf.distribute.DistributedDataset&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;dist_dataset&lt;/code&gt; はによりバッチ処理さ &lt;code&gt;GLOBAL_BATCH_SIZE&lt;/code&gt; 、我々は、使用して繰り返し処理 &lt;code&gt;for x in dist_dataset&lt;/code&gt; 。 &lt;code&gt;x&lt;/code&gt; &lt;a href=&quot;../../../../distribute/distributedvalues&quot;&gt; &lt;code&gt;tf.distribute.DistributedValues&lt;/code&gt; &lt;/a&gt;のバッチにすべてのレプリカのためのデータ、凝集体を含有 &lt;code&gt;GLOBAL_BATCH_SIZE&lt;/code&gt; 。&lt;a href=&quot;../../../../distribute/strategy#run&quot;&gt; &lt;code&gt;tf.distribute.Strategy.run&lt;/code&gt; &lt;/a&gt;は、 &lt;code&gt;x&lt;/code&gt; 内の適切なレプリカごとのデータを、各レプリカで実行される適切な &lt;code&gt;replica_fn&lt;/code&gt; にフィードします。</target>
        </trans-unit>
        <trans-unit id="7b0ee0fc7fad22052facea76762652a1189c53cf" translate="yes" xml:space="preserve">
          <source>In the code snippet above, the &lt;a href=&quot;../../../distribute/distributeddataset&quot;&gt;&lt;code&gt;tf.distribute.DistributedDataset&lt;/code&gt;&lt;/a&gt;&lt;code&gt;dist_dataset&lt;/code&gt; is batched by &lt;code&gt;GLOBAL_BATCH_SIZE&lt;/code&gt;, and we iterate through it using &lt;code&gt;for x in dist_dataset&lt;/code&gt;. &lt;code&gt;x&lt;/code&gt; a &lt;a href=&quot;../../../distribute/distributedvalues&quot;&gt;&lt;code&gt;tf.distribute.DistributedValues&lt;/code&gt;&lt;/a&gt; containing data for all replicas, which aggregates to a batch of &lt;code&gt;GLOBAL_BATCH_SIZE&lt;/code&gt;. &lt;a href=&quot;../../../distribute/strategy#run&quot;&gt;&lt;code&gt;tf.distribute.Strategy.run&lt;/code&gt;&lt;/a&gt; will take care of feeding the right per-replica data in &lt;code&gt;x&lt;/code&gt; to the right &lt;code&gt;replica_fn&lt;/code&gt; executed on each replica.</source>
          <target state="translated">上記のコードでは、&lt;a href=&quot;../../../distribute/distributeddataset&quot;&gt; &lt;code&gt;tf.distribute.DistributedDataset&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;dist_dataset&lt;/code&gt; はによりバッチ処理さ &lt;code&gt;GLOBAL_BATCH_SIZE&lt;/code&gt; 、我々は、使用して繰り返し処理 &lt;code&gt;for x in dist_dataset&lt;/code&gt; 。 &lt;code&gt;x&lt;/code&gt; &lt;a href=&quot;../../../distribute/distributedvalues&quot;&gt; &lt;code&gt;tf.distribute.DistributedValues&lt;/code&gt; &lt;/a&gt;のバッチにすべてのレプリカのためのデータ、凝集体を含有 &lt;code&gt;GLOBAL_BATCH_SIZE&lt;/code&gt; 。&lt;a href=&quot;../../../distribute/strategy#run&quot;&gt; &lt;code&gt;tf.distribute.Strategy.run&lt;/code&gt; &lt;/a&gt;は、 &lt;code&gt;x&lt;/code&gt; 内の適切なレプリカごとのデータを、各レプリカで実行される適切な &lt;code&gt;replica_fn&lt;/code&gt; にフィードします。</target>
        </trans-unit>
        <trans-unit id="8de2e5a52ce490990b1fec55c4aff42334fa5999" translate="yes" xml:space="preserve">
          <source>In the code snippet above, the &lt;a href=&quot;../distributeddataset&quot;&gt;&lt;code&gt;tf.distribute.DistributedDataset&lt;/code&gt;&lt;/a&gt;&lt;code&gt;dist_dataset&lt;/code&gt; is batched by &lt;code&gt;GLOBAL_BATCH_SIZE&lt;/code&gt;, and we iterate through it using &lt;code&gt;for x in dist_dataset&lt;/code&gt;. &lt;code&gt;x&lt;/code&gt; a &lt;a href=&quot;../distributedvalues&quot;&gt;&lt;code&gt;tf.distribute.DistributedValues&lt;/code&gt;&lt;/a&gt; containing data for all replicas, which aggregates to a batch of &lt;code&gt;GLOBAL_BATCH_SIZE&lt;/code&gt;. &lt;a href=&quot;../strategy#run&quot;&gt;&lt;code&gt;tf.distribute.Strategy.run&lt;/code&gt;&lt;/a&gt; will take care of feeding the right per-replica data in &lt;code&gt;x&lt;/code&gt; to the right &lt;code&gt;replica_fn&lt;/code&gt; executed on each replica.</source>
          <target state="translated">上記のコードでは、&lt;a href=&quot;../distributeddataset&quot;&gt; &lt;code&gt;tf.distribute.DistributedDataset&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;dist_dataset&lt;/code&gt; はによりバッチ処理さ &lt;code&gt;GLOBAL_BATCH_SIZE&lt;/code&gt; 、我々は、使用して繰り返し処理 &lt;code&gt;for x in dist_dataset&lt;/code&gt; 。 &lt;code&gt;x&lt;/code&gt; &lt;a href=&quot;../distributedvalues&quot;&gt; &lt;code&gt;tf.distribute.DistributedValues&lt;/code&gt; &lt;/a&gt;のバッチにすべてのレプリカのためのデータ、凝集体を含有 &lt;code&gt;GLOBAL_BATCH_SIZE&lt;/code&gt; 。&lt;a href=&quot;../strategy#run&quot;&gt; &lt;code&gt;tf.distribute.Strategy.run&lt;/code&gt; &lt;/a&gt;は、 &lt;code&gt;x&lt;/code&gt; 内の適切なレプリカごとのデータを、各レプリカで実行される適切な &lt;code&gt;replica_fn&lt;/code&gt; にフィードします。</target>
        </trans-unit>
        <trans-unit id="f66841e03e2835d1f04c157d851fbcf3d05c9105" translate="yes" xml:space="preserve">
          <source>In the code snippet above, the &lt;a href=&quot;distributeddataset&quot;&gt;&lt;code&gt;tf.distribute.DistributedDataset&lt;/code&gt;&lt;/a&gt;&lt;code&gt;dist_dataset&lt;/code&gt; is batched by &lt;code&gt;GLOBAL_BATCH_SIZE&lt;/code&gt;, and we iterate through it using &lt;code&gt;for x in dist_dataset&lt;/code&gt;. &lt;code&gt;x&lt;/code&gt; a &lt;a href=&quot;distributedvalues&quot;&gt;&lt;code&gt;tf.distribute.DistributedValues&lt;/code&gt;&lt;/a&gt; containing data for all replicas, which aggregates to a batch of &lt;code&gt;GLOBAL_BATCH_SIZE&lt;/code&gt;. &lt;a href=&quot;strategy#run&quot;&gt;&lt;code&gt;tf.distribute.Strategy.run&lt;/code&gt;&lt;/a&gt; will take care of feeding the right per-replica data in &lt;code&gt;x&lt;/code&gt; to the right &lt;code&gt;replica_fn&lt;/code&gt; executed on each replica.</source>
          <target state="translated">上記のコードでは、&lt;a href=&quot;distributeddataset&quot;&gt; &lt;code&gt;tf.distribute.DistributedDataset&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;dist_dataset&lt;/code&gt; はによりバッチ処理さ &lt;code&gt;GLOBAL_BATCH_SIZE&lt;/code&gt; 、我々は、使用して繰り返し処理 &lt;code&gt;for x in dist_dataset&lt;/code&gt; 。 &lt;code&gt;x&lt;/code&gt; &lt;a href=&quot;distributedvalues&quot;&gt; &lt;code&gt;tf.distribute.DistributedValues&lt;/code&gt; &lt;/a&gt;のバッチにすべてのレプリカのためのデータ、凝集体を含有 &lt;code&gt;GLOBAL_BATCH_SIZE&lt;/code&gt; 。&lt;a href=&quot;strategy#run&quot;&gt; &lt;code&gt;tf.distribute.Strategy.run&lt;/code&gt; &lt;/a&gt;は、 &lt;code&gt;x&lt;/code&gt; 内の適切なレプリカごとのデータを、各レプリカで実行される適切な &lt;code&gt;replica_fn&lt;/code&gt; にフィードします。</target>
        </trans-unit>
        <trans-unit id="441c8788356ac631e91eb9d0cc144a89f12dd164" translate="yes" xml:space="preserve">
          <source>In the common case where the 'depth' dimension is the last dimension in the input tensor &lt;code&gt;x&lt;/code&gt;, they may be one dimensional tensors of the same size as the 'depth' dimension. This is the case for example for the common &lt;code&gt;[batch, depth]&lt;/code&gt; layout of fully-connected layers, and &lt;code&gt;[batch, height, width, depth]&lt;/code&gt; for convolutions. &lt;code&gt;mean&lt;/code&gt; and &lt;code&gt;variance&lt;/code&gt; in this case would typically be the outputs of &lt;a href=&quot;moments&quot;&gt;&lt;code&gt;tf.nn.moments(..., keepdims=False)&lt;/code&gt;&lt;/a&gt; during training, or running averages thereof during inference.</source>
          <target state="translated">「深さ」次元が入力テンソル &lt;code&gt;x&lt;/code&gt; の最後の次元である一般的なケースでは、それらは「深さ」次元と同じサイズの1次元テンソルである場合があります。これは、完全に接続されたレイヤーの一般的な &lt;code&gt;[batch, depth]&lt;/code&gt; レイアウトや、たたみ込みの &lt;code&gt;[batch, height, width, depth]&lt;/code&gt; 場合に当てはまります。この場合の &lt;code&gt;mean&lt;/code&gt; と &lt;code&gt;variance&lt;/code&gt; は通常、トレーニング中の&lt;a href=&quot;moments&quot;&gt; &lt;code&gt;tf.nn.moments(..., keepdims=False)&lt;/code&gt; &lt;/a&gt;の出力、または推論中のその平均値になります。</target>
        </trans-unit>
        <trans-unit id="a2fdaa32535bc5d1425dc1f4179459c262cc1196" translate="yes" xml:space="preserve">
          <source>In the event that L and D are positive-definite, and U = V, solves and determinants can be done using a Cholesky factorization.</source>
          <target state="translated">LとDが正定値で、U=Vの場合、コレスキー因数分解を用いて解と行列式を行うことができます。</target>
        </trans-unit>
        <trans-unit id="f900f7fb08d74d77d09a58c36e14dae29b1b5604" translate="yes" xml:space="preserve">
          <source>In the following example, &lt;code&gt;c&lt;/code&gt;, &lt;code&gt;d&lt;/code&gt;, and &lt;code&gt;e&lt;/code&gt; are symbolic &lt;code&gt;Tensor&lt;/code&gt; objects, whereas &lt;code&gt;result&lt;/code&gt; is a numpy array that stores a concrete value:</source>
          <target state="translated">次の例では、 &lt;code&gt;c&lt;/code&gt; 、 &lt;code&gt;d&lt;/code&gt; 、および &lt;code&gt;e&lt;/code&gt; はシンボリック &lt;code&gt;Tensor&lt;/code&gt; オブジェクトですが、 &lt;code&gt;result&lt;/code&gt; は具体的な値を格納する派手な配列です。</target>
        </trans-unit>
        <trans-unit id="f8159cd552f6905daabd6b0759c879dc3cb02b31" translate="yes" xml:space="preserve">
          <source>In the following example, both &lt;code&gt;z&lt;/code&gt; and &lt;code&gt;w&lt;/code&gt; will be scaled by the same &lt;code&gt;y&lt;/code&gt;. It is important to note that if we didn't assign &lt;code&gt;scalar_name&lt;/code&gt; and used a different name for z and w that a &lt;code&gt;ValueError&lt;/code&gt; would be thrown because it couldn't reuse the variable.</source>
          <target state="translated">次の例では、 &lt;code&gt;z&lt;/code&gt; と &lt;code&gt;w&lt;/code&gt; の両方が同じ &lt;code&gt;y&lt;/code&gt; でスケーリングされます。 &lt;code&gt;scalar_name&lt;/code&gt; を割り当てず、zとwに異なる名前を使用した &lt;code&gt;ValueError&lt;/code&gt; 、変数を再利用できなかったため、ValueErrorがスローされることに注意してください。</target>
        </trans-unit>
        <trans-unit id="af225700bf663e20d927b904a713beaec69b8ae6" translate="yes" xml:space="preserve">
          <source>In the following example, the value returned by &lt;a href=&quot;raggedtensor#numpy&quot;&gt;&lt;code&gt;RaggedTensor.numpy()&lt;/code&gt;&lt;/a&gt; contains three numpy &lt;code&gt;array&lt;/code&gt; objects: one for each row (with &lt;code&gt;rank=1&lt;/code&gt; and &lt;code&gt;dtype=int64&lt;/code&gt;), and one to combine them (with &lt;code&gt;rank=1&lt;/code&gt; and &lt;code&gt;dtype=object&lt;/code&gt;):</source>
          <target state="translated">次の例では、&lt;a href=&quot;raggedtensor#numpy&quot;&gt; &lt;code&gt;RaggedTensor.numpy()&lt;/code&gt; &lt;/a&gt;によって返される値には、3つのnumpy &lt;code&gt;array&lt;/code&gt; オブジェクトが含まれています。1つは各行（ &lt;code&gt;rank=1&lt;/code&gt; および &lt;code&gt;dtype=int64&lt;/code&gt; ）で、もう1つはそれらを結合します（ &lt;code&gt;rank=1&lt;/code&gt; および &lt;code&gt;dtype=object&lt;/code&gt; ）。 ：</target>
        </trans-unit>
        <trans-unit id="fd46fe1d494a119de52de4263e78cb6431e1f9cf" translate="yes" xml:space="preserve">
          <source>In the following examples, each input in the range &lt;code&gt;[0, 1000000)&lt;/code&gt; is assigned the same value. All other inputs are assigned &lt;code&gt;default_value&lt;/code&gt; 0. Note that a literal 0 in inputs will result in the same default ID.</source>
          <target state="translated">次の例では、 &lt;code&gt;[0, 1000000)&lt;/code&gt; 範囲の各入力に同じ値が割り当てられます。他のすべての入力には &lt;code&gt;default_value&lt;/code&gt; 0 が割り当てられます。入力のリテラル0は同じデフォルトIDになることに注意してください。</target>
        </trans-unit>
        <trans-unit id="e4ffded633c0b56e0d92344cf2671f58b989b260" translate="yes" xml:space="preserve">
          <source>In the following shapes, &lt;code&gt;nnz&lt;/code&gt; is the count after taking &lt;code&gt;thresh&lt;/code&gt; into account.</source>
          <target state="translated">以下の形状では、 &lt;code&gt;nnz&lt;/code&gt; 服用後のカウントである &lt;code&gt;thresh&lt;/code&gt; 考慮。</target>
        </trans-unit>
        <trans-unit id="7a0a21a5321a939e4c6ec979642cca57482d54e4" translate="yes" xml:space="preserve">
          <source>In the future we may use this object to add more information about result of run without changing the Hook API.</source>
          <target state="translated">将来的には、Hook APIを変更することなく、このオブジェクトを使用して実行結果に関する情報を追加することができるかもしれません。</target>
        </trans-unit>
        <trans-unit id="76fa778b0319a626a08c3bad3138553249a30e42" translate="yes" xml:space="preserve">
          <source>In the future, there will be additional processing modes. For example, a &quot;one_epoch&quot; mode which partitions the dataset across the tf.data workers, so that the consumers see each element of the dataset only once.</source>
          <target state="translated">将来的には、処理モードが追加される予定です。例えば、&quot;one_epoch &quot;モードは、データセットをtf.dataワーカーに分割して、消費者がデータセットの各要素を一度だけ見るようにします。</target>
        </trans-unit>
        <trans-unit id="321470037eed07ac96098def67a575832b48e3a6" translate="yes" xml:space="preserve">
          <source>In the general case, produces an output tensor where:</source>
          <target state="translated">一般的な場合、出力テンソルを生成します。</target>
        </trans-unit>
        <trans-unit id="14120b56799edd7f482d4829806eaaaa1dc71825" translate="yes" xml:space="preserve">
          <source>In the integer case, the random integers are slightly biased unless &lt;code&gt;maxval - minval&lt;/code&gt; is an exact power of two. The bias is small for values of &lt;code&gt;maxval - minval&lt;/code&gt; significantly smaller than the range of the output (either &lt;code&gt;2**32&lt;/code&gt; or &lt;code&gt;2**64&lt;/code&gt;).</source>
          <target state="translated">整数の場合、 &lt;code&gt;maxval - minval&lt;/code&gt; が2の正確な累乗でない限り、ランダムな整数はわずかにバイアスされます。 &lt;code&gt;maxval - minval&lt;/code&gt; 値のバイアスは、出力の範囲（ &lt;code&gt;2**32&lt;/code&gt; または &lt;code&gt;2**64&lt;/code&gt; ）よりも大幅に小さいため、小さくなります。</target>
        </trans-unit>
        <trans-unit id="80812666c20de5f1b3022c6818967c980a3249c2" translate="yes" xml:space="preserve">
          <source>In the normal case, this returns the grpc path (grpc://1.2.3.4:8470) of first instance in the ClusterSpec returned by the cluster_spec function.</source>
          <target state="translated">通常の場合、これは cluster_spec 関数が返す ClusterSpec の最初のインスタンスの grpc パス (grpc://1.2.3.4:8470)を返します。</target>
        </trans-unit>
        <trans-unit id="6055b65c599f09ebc21e3aeb62b02718663e00f7" translate="yes" xml:space="preserve">
          <source>In the returned matrix, all the triangles (filterbanks) have a peak value of 1.0.</source>
          <target state="translated">返された行列では、すべての三角形(フィルタバンク)のピーク値が1.0となっています。</target>
        </trans-unit>
        <trans-unit id="d5d60edca816e4a2eab7c2afcd535e33631948ae" translate="yes" xml:space="preserve">
          <source>In the snippet below, each of the four examples has only a single floating-pointing value, and both &lt;code&gt;y_pred&lt;/code&gt; and &lt;code&gt;y_true&lt;/code&gt; have the shape &lt;code&gt;[batch_size]&lt;/code&gt;.</source>
          <target state="translated">以下のスニペットでは、4つの例のそれぞれに浮動小数点値が1つだけあり、 &lt;code&gt;y_pred&lt;/code&gt; と &lt;code&gt;y_true&lt;/code&gt; の両方が &lt;code&gt;[batch_size]&lt;/code&gt; の形をしています。</target>
        </trans-unit>
        <trans-unit id="8c495e13d301e9ffca0e963e7389b1c288c748a1" translate="yes" xml:space="preserve">
          <source>In the snippet below, there is &lt;code&gt;# classes&lt;/code&gt; floating pointing values per example. The shape of both &lt;code&gt;y_pred&lt;/code&gt; and &lt;code&gt;y_true&lt;/code&gt; are &lt;code&gt;[batch_size, num_classes]&lt;/code&gt;.</source>
          <target state="translated">以下のスニペットには、例ごとに &lt;code&gt;# classes&lt;/code&gt; 浮動小数点ポインティング値があります。 &lt;code&gt;y_pred&lt;/code&gt; と &lt;code&gt;y_true&lt;/code&gt; の両方の形状は &lt;code&gt;[batch_size, num_classes]&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ca0a25a87addb666ce34fdcd635cb0fb4ef8b8c8" translate="yes" xml:space="preserve">
          <source>In the snippet below, there is a single floating point value per example for &lt;code&gt;y_true&lt;/code&gt; and &lt;code&gt;# classes&lt;/code&gt; floating pointing values per example for &lt;code&gt;y_pred&lt;/code&gt;. The shape of &lt;code&gt;y_true&lt;/code&gt; is &lt;code&gt;[batch_size]&lt;/code&gt; and the shape of &lt;code&gt;y_pred&lt;/code&gt; is &lt;code&gt;[batch_size, num_classes]&lt;/code&gt;.</source>
          <target state="translated">以下のスニペットでは、たとえばごとに単一の浮動小数点値である &lt;code&gt;y_true&lt;/code&gt; 及び &lt;code&gt;# classes&lt;/code&gt; のための例のポインティング値フローティング &lt;code&gt;y_pred&lt;/code&gt; は。 &lt;code&gt;y_true&lt;/code&gt; の形状は &lt;code&gt;[batch_size]&lt;/code&gt; であり、 &lt;code&gt;y_pred&lt;/code&gt; の形状は &lt;code&gt;[batch_size, num_classes]&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="edfa06a723b9aaa9b154321c98c5e60a3a87f241" translate="yes" xml:space="preserve">
          <source>In the special case that &lt;code&gt;dilation_rate&lt;/code&gt; is uniformly 1, this simply returns:</source>
          <target state="translated">&lt;code&gt;dilation_rate&lt;/code&gt; が一様に1である特別なケースでは、これは単に次を返します：</target>
        </trans-unit>
        <trans-unit id="1c3bff4b004264f13b9d5870cad9395d93194227" translate="yes" xml:space="preserve">
          <source>In the training program you will just have to run the returned Op.</source>
          <target state="translated">トレーニングプログラムでは、返却されたOp.を実行するだけです。</target>
        </trans-unit>
        <trans-unit id="d2890695a83ce1f36c63f8da28ce25a62b890df2" translate="yes" xml:space="preserve">
          <source>In the training program, every worker will run the train_op as if not synchronized.</source>
          <target state="translated">トレーニングプログラムでは、すべてのワーカーは、同期されていない場合と同様に train_op を実行します。</target>
        </trans-unit>
        <trans-unit id="050220458220cef5d8bae5a963a516346fce1ddc" translate="yes" xml:space="preserve">
          <source>In these cases, using &lt;a href=&quot;tensor#shape&quot;&gt;&lt;code&gt;tf.Tensor.shape&lt;/code&gt;&lt;/a&gt; will return more informative results.</source>
          <target state="translated">このような場合、&lt;a href=&quot;tensor#shape&quot;&gt; &lt;code&gt;tf.Tensor.shape&lt;/code&gt; &lt;/a&gt;を使用すると、より有益な結果が返されます。</target>
        </trans-unit>
        <trans-unit id="a1fd23dc3b76dcc4f826b1d79ad28663677c68d6" translate="yes" xml:space="preserve">
          <source>In this case if &lt;code&gt;foo.shape&lt;/code&gt; is (5, 5, 5, 5, 5, 5) the final shape of the slice becomes (2, 1, 5, 5, 2, 5). Let us walk step by step through each argument specification.</source>
          <target state="translated">この場合、 &lt;code&gt;foo.shape&lt;/code&gt; が（5、5、5、5、5、5）の場合、スライスの最終的な形状は（2、1、5、5、2、5）になります。各引数の仕様を段階的に見ていきましょう。</target>
        </trans-unit>
        <trans-unit id="de68be184025a4393a876c4969dd2dac3ec1ddab" translate="yes" xml:space="preserve">
          <source>In this case the last 3 data points are discarded since no full sequence can be generated to include them (the next sequence would have started at index 81, and thus its last step would have gone over 99).</source>
          <target state="translated">この場合、それらを含む完全なシーケンスを生成できないので、最後の3つのデータポイントは破棄されます(次のシーケンスはインデックス81から始まり、その最後のステップは99を超えていたでしょう)。</target>
        </trans-unit>
        <trans-unit id="2660fc8b716618056f3f2486b9d3eda40cce99bb" translate="yes" xml:space="preserve">
          <source>In this case, no TRT engines will be built or saved in the converted SavedModel. But if input data is available during conversion, we can still build and save the TRT engines to reduce the cost during inference (see option 2 below).</source>
          <target state="translated">この場合、変換されたSavedModelにはTRTエンジンはビルドされず、保存されません。しかし、変換中に入力データが利用可能であれば、推論中のコストを削減するためにTRTエンジンを構築して保存することができます(下記のオプション2を参照)。</target>
        </trans-unit>
        <trans-unit id="e5fc3e497d02a7bd7ecbf4bfc91e80a8c16dab8c" translate="yes" xml:space="preserve">
          <source>In this case, the L2-norm of the output tensor is &lt;code&gt;clip_norm&lt;/code&gt;.</source>
          <target state="translated">この場合、出力テンソルのL2ノルムは &lt;code&gt;clip_norm&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="fb53270a9519bb4c8fc2a2da8dd867f7bc0eb615" translate="yes" xml:space="preserve">
          <source>In this case, the average L2-norm of the output tensor is &lt;code&gt;clip_norm&lt;/code&gt;.</source>
          <target state="translated">この場合、出力テンソルの平均L2ノルムは &lt;code&gt;clip_norm&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="82633df4f4d329acaa3d11394d5cdde32a611bc2" translate="yes" xml:space="preserve">
          <source>In this case, the default value used is &lt;code&gt;l1=0.01&lt;/code&gt;.</source>
          <target state="translated">この場合、使用されるデフォルト値は &lt;code&gt;l1=0.01&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="4f71d9a8d2db7be1d1b1df2b421e4dfeaafef046" translate="yes" xml:space="preserve">
          <source>In this case, the default value used is &lt;code&gt;l2=0.01&lt;/code&gt;.</source>
          <target state="translated">この場合、使用されるデフォルト値は &lt;code&gt;l2=0.01&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="20678523ff7af42a84aac9bea4ae4af2f137e76a" translate="yes" xml:space="preserve">
          <source>In this case, the default values used are &lt;code&gt;l1=0.01&lt;/code&gt; and &lt;code&gt;l2=0.01&lt;/code&gt;.</source>
          <target state="translated">この場合、使用されるデフォルト値は &lt;code&gt;l1=0.01&lt;/code&gt; および &lt;code&gt;l2=0.01&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="1634e039fe69dd10f4980724390eee9597b30add" translate="yes" xml:space="preserve">
          <source>In this case, there is only one device, so this is only a thin wrapper around the input dataset. It will, however, prefetch the input data to the specified device. The returned distributed dataset can be iterated over similar to how regular datasets can.</source>
          <target state="translated">この場合、デバイスは1つしかないので、これは入力データセットの薄いラッパーに過ぎません。しかし,指定されたデバイスに入力データをプリフェッチします.返された分散データセットは,通常のデータセットと同様に反復処理が可能です.</target>
        </trans-unit>
        <trans-unit id="7e6c4c191f1042cc1f68cb766a50b94ec5bf0741" translate="yes" xml:space="preserve">
          <source>In this case, we are setting both the global and operation-level seed to ensure this result is reproducible. See &lt;a href=&quot;set_seed&quot;&gt;&lt;code&gt;tf.random.set_seed&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">この場合、この結果が再現可能であることを保証するために、グローバルシードと操作レベルシードの両方を設定しています。詳細については、&lt;a href=&quot;set_seed&quot;&gt; &lt;code&gt;tf.random.set_seed&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="c08e98fab219660f174a2388abcd7b00423921f2" translate="yes" xml:space="preserve">
          <source>In this example, the input value 'z' resulted in an output of '[UNK]', since 1000 was not in the vocabulary - it got represented as an OOV, and all OOV values are returned as '[OOV}' in the inverse layer. Also, note that for the inverse to work, you must have already set the forward layer vocabulary either directly or via fit() before calling get_vocabulary().</source>
          <target state="translated">こ の例では、 入力値 'z' は '[UNK]' の出力にな り ます。 1000 はボキャブラリーにはなかったので、 これは OOV として表現され、 逆引きレイヤではすべての OOV 値が '[OOV}' と し て返されます。また、逆引きが機能するためには、 get_vocabulary()を呼び出す前に、直接、あるいは fit()を通してフォワードレイヤーのボキャブラリーを設定しておく必要があることにも注意してください。</target>
        </trans-unit>
        <trans-unit id="4a7c2f6499422f484ac6f330b882d5c04cd4e3dc" translate="yes" xml:space="preserve">
          <source>In this example, the input value 1000 resulted in an output of -1, since 1000 was not in the vocabulary - it got represented as an OOV, and all OOV values are returned as -1 in the inverse layer. Also, note that for the inverse to work, you must have already set the forward layer vocabulary either directly or via fit() before calling get_vocabulary().</source>
          <target state="translated">こ の例では、 入力値 1000 はボキャブラリーに含まれていなかったので、 -1 が出力されました。また、 逆引きが動作するためには、 get_vocabulary()を呼び出す前に、 直接か fit()を通してフォワード層のボキャブラリーを設定しておく必要があることにも注意してください。</target>
        </trans-unit>
        <trans-unit id="36765b42855ac10a2bf8048f167e7fc07d039efe" translate="yes" xml:space="preserve">
          <source>In this example, we want to trace how much time spent on calling a function, which includes compilation and execution. The compilation can be either getting a cached copy of the binary or actually generating the binary, which is indicated by the boolean &quot;in_cache&quot; returned by jit_compile(). We need to use set_metadata() to pass in_cache because we did not know the in_cache value when the trace was created (and we cannot create the trace after jit_compile(), because we want to measure the entire duration of call()).</source>
          <target state="translated">この例では、コンパイルと実行を含む関数の呼び出しにどれだけの時間が費やされたかを追跡したいと思います。コンパイルはバイナリのキャッシュコピーを取得するか、実際にバイナリを生成するかのどちらかになります。トレースが作成されたときに in_cache の値を知らなかったので、 in_cache を渡すために set_metadata()を使用する必要があります (また、jit_compile()の後にトレースを作成することはできません。</target>
        </trans-unit>
        <trans-unit id="c2073cc64d02b3bf0e594d35e4cce41ba26845eb" translate="yes" xml:space="preserve">
          <source>In this manner, the output is the best split per features and per node, so that it needs to be combined later to produce the best split for each node (among all possible features).</source>
          <target state="translated">このようにして、出力は特徴量ごと、ノードごとに最適なスプリットとなりますので、後から結合して各ノード(可能なすべての特徴量の中から)最適なスプリットを生成する必要があります。</target>
        </trans-unit>
        <trans-unit id="72a8363320500d7fb6d0fa2afac0abec913757b2" translate="yes" xml:space="preserve">
          <source>In this way, one engine will be built/saved for each unique input shapes of the TRTEngineOp. This is good for applications that cannot afford building engines during inference but have access to input data that is similar to the one used in production (for example, that has the same input shapes). Also, the generated TRT engines is platform dependent, so we need to run &lt;code&gt;build()&lt;/code&gt; in an environment that is similar to production (e.g. with same type of GPU).</source>
          <target state="translated">このようにして、TRTEngineOpの固有の入力形状ごとに1つのエンジンが作成/保存されます。これは、推論中にビルドエンジンを使用する余裕はないが、プロダクションで使用されるものと同様の入力データにアクセスできる（たとえば、同じ入力形状を持つ）アプリケーションに適しています。また、生成されたTRTエンジンはプラットフォームに依存するため、本番環境と同じような環境で（たとえば、同じタイプのGPUを使用して） &lt;code&gt;build()&lt;/code&gt; を実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="d79a01d9608f76fd6bbb337a8da6d7bca3045f57" translate="yes" xml:space="preserve">
          <source>In your function passed to &lt;a href=&quot;../../../distribute/strategy#experimental_run_v2&quot;&gt;&lt;code&gt;tf.distribute.Strategy.experimental_run_v2&lt;/code&gt;&lt;/a&gt;, compute a list of (update, variable) pairs. For example, the update might be a the gradient of the loss with respect to the variable.</source>
          <target state="translated">&lt;a href=&quot;../../../distribute/strategy#experimental_run_v2&quot;&gt; &lt;code&gt;tf.distribute.Strategy.experimental_run_v2&lt;/code&gt; &lt;/a&gt;に渡された関数で、（更新、変数）ペアのリストを計算します。たとえば、更新は、変数に関する損失の勾配である場合があります。</target>
        </trans-unit>
        <trans-unit id="49a3474d0eadcec0f5e50cac1d06d710f2afe071" translate="yes" xml:space="preserve">
          <source>In your function passed to &lt;a href=&quot;../../../distribute/strategy#run&quot;&gt;&lt;code&gt;tf.distribute.Strategy.run&lt;/code&gt;&lt;/a&gt;, compute a list of (update, variable) pairs. For example, the update might be a gradient of the loss with respect to the variable.</source>
          <target state="translated">&lt;a href=&quot;../../../distribute/strategy#run&quot;&gt; &lt;code&gt;tf.distribute.Strategy.run&lt;/code&gt; &lt;/a&gt;に渡された関数で、（更新、変数）ペアのリストを計算します。たとえば、更新は変数に関する損失の勾配である可能性があります。</target>
        </trans-unit>
        <trans-unit id="e2be7b3f65cefd5207608f7e806a86637c30fe91" translate="yes" xml:space="preserve">
          <source>In your function passed to &lt;a href=&quot;strategy#experimental_run_v2&quot;&gt;&lt;code&gt;tf.distribute.Strategy.experimental_run_v2&lt;/code&gt;&lt;/a&gt;, compute a list of (update, variable) pairs. For example, the update might be a the gradient of the loss with respect to the variable.</source>
          <target state="translated">&lt;a href=&quot;strategy#experimental_run_v2&quot;&gt; &lt;code&gt;tf.distribute.Strategy.experimental_run_v2&lt;/code&gt; &lt;/a&gt;に渡された関数で、（更新、変数）ペアのリストを計算します。たとえば、更新は、変数に関する損失の勾配である場合があります。</target>
        </trans-unit>
        <trans-unit id="a83b0c1dab2d4de5a70f6316ecc8989d437aa351" translate="yes" xml:space="preserve">
          <source>In your function passed to &lt;a href=&quot;strategy#run&quot;&gt;&lt;code&gt;tf.distribute.Strategy.run&lt;/code&gt;&lt;/a&gt;, compute a list of (update, variable) pairs. For example, the update might be a gradient of the loss with respect to the variable.</source>
          <target state="translated">&lt;a href=&quot;strategy#run&quot;&gt; &lt;code&gt;tf.distribute.Strategy.run&lt;/code&gt; &lt;/a&gt;に渡された関数で、（更新、変数）ペアのリストを計算します。たとえば、更新は変数に関する損失の勾配である可能性があります。</target>
        </trans-unit>
        <trans-unit id="6f49734e2288a63e9d6cf105bcbf81ab57a1bf7f" translate="yes" xml:space="preserve">
          <source>InTopK</source>
          <target state="translated">InTopK</target>
        </trans-unit>
        <trans-unit id="29498645b8e9de5e6fa1f035894033a32dcc0f61" translate="yes" xml:space="preserve">
          <source>InTopKV2</source>
          <target state="translated">InTopKV2</target>
        </trans-unit>
        <trans-unit id="ce8d799de35e2f145c21e92a425ca2ee660eb326" translate="yes" xml:space="preserve">
          <source>Inception V3 model for Keras.</source>
          <target state="translated">ケラスのインセプションV3モデル。</target>
        </trans-unit>
        <trans-unit id="7d73f3eef76607d1a301c6ca302e845c6db2ac6e" translate="yes" xml:space="preserve">
          <source>Inception-ResNet V2 model for Keras.</source>
          <target state="translated">KerasのためのInception-ResNet V2モデル。</target>
        </trans-unit>
        <trans-unit id="8cf033bd7091b2790e4f777f8b19874075bff1bf" translate="yes" xml:space="preserve">
          <source>Included for symmetry with assertIsInstance.</source>
          <target state="translated">assertIsInstanceとの対称性のために含まれています。</target>
        </trans-unit>
        <trans-unit id="dcefd427b6a3fb13c379c178050dfc9a698717db" translate="yes" xml:space="preserve">
          <source>Included for symmetry with assertIsNone.</source>
          <target state="translated">assertIsNoneとの対称性のために含まれています。</target>
        </trans-unit>
        <trans-unit id="dd470208c6fa4ca92528cf0186d20c9f5b2f59b7" translate="yes" xml:space="preserve">
          <source>Includes slot variables and additional global variables created by the optimizer in the current default graph.</source>
          <target state="translated">スロット変数と、現在のデフォルトグラフでオプティマイザによって作成された追加のグローバル変数を含みます。</target>
        </trans-unit>
        <trans-unit id="8c54bd291b44a258e4c2d45445c731a1166f33f9" translate="yes" xml:space="preserve">
          <source>Increases loss scale every &lt;code&gt;increment_period&lt;/code&gt; consecutive steps that finite gradients are encountered. If a nonfinite gradient is encountered, the count is reset back to zero.</source>
          <target state="translated">有限の勾配が発生する &lt;code&gt;increment_period&lt;/code&gt; の連続するステップごとに損失スケールを増やします。有限でない勾配が発生した場合、カウントはゼロにリセットされます。</target>
        </trans-unit>
        <trans-unit id="e5b7858555d1e2aa8307bbc5a543b25db84aeba7" translate="yes" xml:space="preserve">
          <source>Incremented when &lt;code&gt;save()&lt;/code&gt; is called. Used to number checkpoints.</source>
          <target state="translated">&lt;code&gt;save()&lt;/code&gt; が呼び出されるとインクリメントされます。チェックポイントに番号を付けるために使用されます。</target>
        </trans-unit>
        <trans-unit id="728ce17bd1a7957f53eadbd1391ef352561ac235" translate="yes" xml:space="preserve">
          <source>Increments 'ref' until it reaches 'limit'.</source>
          <target state="translated">ref」を「限界」に達するまで増加させます。</target>
        </trans-unit>
        <trans-unit id="7b391a6fad790101cab029c9fe225295336e842c" translate="yes" xml:space="preserve">
          <source>Increments 'ref' until it reaches 'limit'. (deprecated)</source>
          <target state="translated">ref' を 'limit' に達するまで増加させます。(廃止予定)</target>
        </trans-unit>
        <trans-unit id="de594db0e57668b8b85789cc78fb4c139b3a182a" translate="yes" xml:space="preserve">
          <source>Increments this variable until it reaches &lt;code&gt;limit&lt;/code&gt;. (deprecated)</source>
          <target state="translated">&lt;code&gt;limit&lt;/code&gt; に達するまで、この変数を増分します。（非推奨）</target>
        </trans-unit>
        <trans-unit id="b394c28b7279ea2928e8eb6964bdab03004d76bb" translate="yes" xml:space="preserve">
          <source>Increments variable pointed to by 'resource' until it reaches 'limit'.</source>
          <target state="translated">resourceが指す変数を'limit'に達するまで増加させます。</target>
        </trans-unit>
        <trans-unit id="cdb762cdb787c49b81cc06d51b455e4a3ecd0341" translate="yes" xml:space="preserve">
          <source>Index of current step.</source>
          <target state="translated">現在のステップのインデックス。</target>
        </trans-unit>
        <trans-unit id="1d219bcbd2ca8f15aeb03cccca9e989e6dc9c7d0" translate="yes" xml:space="preserve">
          <source>Indexing into a 3-tensor:</source>
          <target state="translated">3テンソルにインデックス化。</target>
        </trans-unit>
        <trans-unit id="5e79dd26697e6bbf367b2fdeab36765d539b5fbd" translate="yes" xml:space="preserve">
          <source>Indicate that a summary was computed.</source>
          <target state="translated">サマリーが計算されたことを示します。</target>
        </trans-unit>
        <trans-unit id="82dbc404b49d6777aa92664b08fd68f890d9eccb" translate="yes" xml:space="preserve">
          <source>Indicates how a distributed variable will be aggregated.</source>
          <target state="translated">分散変数がどのように集約されるかを示します。</target>
        </trans-unit>
        <trans-unit id="355fab5dece9905786ed039c29043ef923b3adf5" translate="yes" xml:space="preserve">
          <source>Indicates how a distributed variable will be aggregated. Accepted values are constants defined in the class &lt;a href=&quot;../../variableaggregation&quot;&gt;&lt;code&gt;tf.VariableAggregation&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">分散変数がどのように集計されるかを示します。受け入れられる値は、クラス&lt;a href=&quot;../../variableaggregation&quot;&gt; &lt;code&gt;tf.VariableAggregation&lt;/code&gt; で&lt;/a&gt;定義されている定数です。</target>
        </trans-unit>
        <trans-unit id="00f0ecce80ce2d885c3b8c2bb0d0238071880b87" translate="yes" xml:space="preserve">
          <source>Indicates how a distributed variable will be aggregated. Accepted values are constants defined in the class &lt;a href=&quot;variableaggregation&quot;&gt;&lt;code&gt;tf.VariableAggregation&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">分散変数がどのように集計されるかを示します。受け入れられる値は、クラス&lt;a href=&quot;variableaggregation&quot;&gt; &lt;code&gt;tf.VariableAggregation&lt;/code&gt; で&lt;/a&gt;定義されている定数です。</target>
        </trans-unit>
        <trans-unit id="7d8aeb2df9b17e0f40b4d8f5858f3321132bd0c3" translate="yes" xml:space="preserve">
          <source>Indicates how a set of values should be reduced.</source>
          <target state="translated">値のセットをどのように縮小するかを示します。</target>
        </trans-unit>
        <trans-unit id="502061f2d3846ae3f85cff4075516765180924ed" translate="yes" xml:space="preserve">
          <source>Indicates that &lt;code&gt;batch_shape == []&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;batch_shape == []&lt;/code&gt; ことを示します。</target>
        </trans-unit>
        <trans-unit id="7f2a3ecc77c9bfd142bdfa3269a1a531f475325d" translate="yes" xml:space="preserve">
          <source>Indicates that &lt;code&gt;event_shape == []&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;event_shape == []&lt;/code&gt; ことを示します。</target>
        </trans-unit>
        <trans-unit id="1f9580d405e3ceadc7ccac78cfd939bcd2065bff" translate="yes" xml:space="preserve">
          <source>Indicates when a distributed a variable will be aggregated. Accepted values are constants defined in the class &lt;a href=&quot;../../variablesynchronization&quot;&gt;&lt;code&gt;tf.VariableSynchronization&lt;/code&gt;&lt;/a&gt;. By default the synchronization is set to &lt;code&gt;AUTO&lt;/code&gt; and the current &lt;code&gt;DistributionStrategy&lt;/code&gt; chooses when to synchronize.</source>
          <target state="translated">分散変数がいつ集約されるかを示します。受け入れられる値は、クラス&lt;a href=&quot;../../variablesynchronization&quot;&gt; &lt;code&gt;tf.VariableSynchronization&lt;/code&gt; で&lt;/a&gt;定義されている定数です。デフォルトでは、同期は &lt;code&gt;AUTO&lt;/code&gt; に設定されており、現在の &lt;code&gt;DistributionStrategy&lt;/code&gt; はいつ同期するかを選択します。</target>
        </trans-unit>
        <trans-unit id="c2d6c4f854b8135221915994629436858fce328c" translate="yes" xml:space="preserve">
          <source>Indicates when a distributed a variable will be aggregated. Accepted values are constants defined in the class &lt;a href=&quot;../../variablesynchronization&quot;&gt;&lt;code&gt;tf.VariableSynchronization&lt;/code&gt;&lt;/a&gt;. By default the synchronization is set to &lt;code&gt;AUTO&lt;/code&gt; and the current &lt;code&gt;DistributionStrategy&lt;/code&gt; chooses when to synchronize. If &lt;code&gt;synchronization&lt;/code&gt; is set to &lt;code&gt;ON_READ&lt;/code&gt;, &lt;code&gt;trainable&lt;/code&gt; must not be set to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">分散変数がいつ集約されるかを示します。受け入れられる値は、クラス&lt;a href=&quot;../../variablesynchronization&quot;&gt; &lt;code&gt;tf.VariableSynchronization&lt;/code&gt; で&lt;/a&gt;定義されている定数です。デフォルトでは、同期は &lt;code&gt;AUTO&lt;/code&gt; に設定されており、現在の &lt;code&gt;DistributionStrategy&lt;/code&gt; はいつ同期するかを選択します。場合は &lt;code&gt;synchronization&lt;/code&gt; に設定されている &lt;code&gt;ON_READ&lt;/code&gt; 、 &lt;code&gt;trainable&lt;/code&gt; に設定してはいけません &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="585b652a60535a87a9ca42ef02672c3d4be7441b" translate="yes" xml:space="preserve">
          <source>Indicates when a distributed a variable will be aggregated. Accepted values are constants defined in the class &lt;a href=&quot;variablesynchronization&quot;&gt;&lt;code&gt;tf.VariableSynchronization&lt;/code&gt;&lt;/a&gt;. By default the synchronization is set to &lt;code&gt;AUTO&lt;/code&gt; and the current &lt;code&gt;DistributionStrategy&lt;/code&gt; chooses when to synchronize.</source>
          <target state="translated">分散変数がいつ集約されるかを示します。受け入れられる値は、クラス&lt;a href=&quot;variablesynchronization&quot;&gt; &lt;code&gt;tf.VariableSynchronization&lt;/code&gt; で&lt;/a&gt;定義されている定数です。デフォルトでは、同期は &lt;code&gt;AUTO&lt;/code&gt; に設定されており、現在の &lt;code&gt;DistributionStrategy&lt;/code&gt; はいつ同期するかを選択します。</target>
        </trans-unit>
        <trans-unit id="b98b1943a15cc44f7a930e94a7aaa9be7ea89a2e" translate="yes" xml:space="preserve">
          <source>Indicates when a distributed variable will be synced.</source>
          <target state="translated">分散変数が同期されるタイミングを示します。</target>
        </trans-unit>
        <trans-unit id="8c75d22921ecccc2882756dcd16f765287e01395" translate="yes" xml:space="preserve">
          <source>Indicates which piece of the RaggedTensor to return, using standard Python semantics (e.g., negative values index from the end). &lt;code&gt;key&lt;/code&gt; may have any of the following types:</source>
          <target state="translated">標準のPythonセマンティクスを使用して、RaggedTensorのどの部分を返すかを示します（たとえば、最後から負の値のインデックス）。 &lt;code&gt;key&lt;/code&gt; は、次のいずれかのタイプがあります。</target>
        </trans-unit>
        <trans-unit id="0dd9ad5b5718ae90949c420290ff39b5e8317055" translate="yes" xml:space="preserve">
          <source>Indices are output in row-major order.</source>
          <target state="translated">指標は、行長順に出力されます。</target>
        </trans-unit>
        <trans-unit id="56bea990e2e30a7eb039911159d0ee2d92ff71de" translate="yes" xml:space="preserve">
          <source>Indices must be without repeats. This is only tested if &lt;code&gt;validate_indices&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">インデックスは繰り返しなしである必要があります。これは、 &lt;code&gt;validate_indices&lt;/code&gt; が &lt;code&gt;True&lt;/code&gt; の場合にのみテストされます。</target>
        </trans-unit>
        <trans-unit id="b7d1e9061deb0780f8cf8761707437290ba05e6b" translate="yes" xml:space="preserve">
          <source>Indices of elements to mask.</source>
          <target state="translated">マスクする要素のインデックス。</target>
        </trans-unit>
        <trans-unit id="d4f1e52513d8b0a7cd11c918b2299a04adcf6867" translate="yes" xml:space="preserve">
          <source>Indices of the sparse gradient to be applied.</source>
          <target state="translated">適用される疎な勾配の指標.</target>
        </trans-unit>
        <trans-unit id="1afd7134a89ddbe19e6cadca6ca3f19798d1fd1c" translate="yes" xml:space="preserve">
          <source>Indices should be sorted in lexicographic order, and indices must not contain any repeats. If &lt;code&gt;validate_indices&lt;/code&gt; is True, these properties are checked during execution.</source>
          <target state="translated">インデックスは辞書式順序でソートする必要があり、インデックスに繰り返しが含まれていてはなりません。 &lt;code&gt;validate_indices&lt;/code&gt; がTrueの場合、これらのプロパティは実行中にチェックされます。</target>
        </trans-unit>
        <trans-unit id="1c195df5805c1138eb51a9a5c959d8b14d48139b" translate="yes" xml:space="preserve">
          <source>Indices should be sorted in lexicographic order, and indices must not contain any repeats. If &lt;code&gt;validate_indices&lt;/code&gt; is true, these properties are checked during execution.</source>
          <target state="translated">インデックスは辞書式順序でソートする必要があり、インデックスには繰り返しが含まれていてはなりません。場合 &lt;code&gt;validate_indices&lt;/code&gt; がtrueの場合、これらのプロパティは、実行時にチェックされます。</target>
        </trans-unit>
        <trans-unit id="b0e0ca5db01771d327910e5e9f88826a2e60ad47" translate="yes" xml:space="preserve">
          <source>InfeedDequeue</source>
          <target state="translated">InfeedDequeue</target>
        </trans-unit>
        <trans-unit id="bcf6bd551bdd1dc178e212ec66098733e64b69f4" translate="yes" xml:space="preserve">
          <source>InfeedDequeueTuple</source>
          <target state="translated">InfeedDequeueTuple</target>
        </trans-unit>
        <trans-unit id="63af23d2efb54dff58bbef1e77ed37bbb7276cc1" translate="yes" xml:space="preserve">
          <source>InfeedEnqueue</source>
          <target state="translated">InfeedEnqueue</target>
        </trans-unit>
        <trans-unit id="149c1ecf9aec0d9d6cc77516abaf46375e31a222" translate="yes" xml:space="preserve">
          <source>InfeedEnqueuePrelinearizedBuffer</source>
          <target state="translated">InfeedEnqueuePrelinearizedBuffer</target>
        </trans-unit>
        <trans-unit id="f3de6b03c8e3115d2e11421b93ac58353f46116c" translate="yes" xml:space="preserve">
          <source>InfeedEnqueueTuple</source>
          <target state="translated">InfeedEnqueueTuple</target>
        </trans-unit>
        <trans-unit id="6b68b09f9769efecac45bf8fdca33e3d2565957a" translate="yes" xml:space="preserve">
          <source>Information about a command-line flag.</source>
          <target state="translated">コマンドラインフラグに関する情報。</target>
        </trans-unit>
        <trans-unit id="ec0acf85df4b3add32f27c24edcda3c4ac12ef0c" translate="yes" xml:space="preserve">
          <source>Information on how to save this Variable as a slice.</source>
          <target state="translated">この変数をスライスとして保存する方法についての情報。</target>
        </trans-unit>
        <trans-unit id="0e51852bd546da5f45f8e214683a1a350100bb05" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../../../../keras/layers/experimental/preprocessing/categoryencoding&quot;&gt;&lt;code&gt;CategoryEncoding&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../../../../../../keras/layers/experimental/preprocessing/categoryencoding&quot;&gt; &lt;code&gt;CategoryEncoding&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="baac1737720873667a943deae5dfc7a9206719a0" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../../../../keras/layers/experimental/preprocessing/integerlookup&quot;&gt;&lt;code&gt;IntegerLookup&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../../../../../../keras/layers/experimental/preprocessing/integerlookup&quot;&gt; &lt;code&gt;IntegerLookup&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d5f51cd32183bed67eebdc24505fe9c60be0ff24" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../../../../keras/layers/experimental/preprocessing/normalization&quot;&gt;&lt;code&gt;Normalization&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../../../../../../keras/layers/experimental/preprocessing/normalization&quot;&gt; &lt;code&gt;Normalization&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bc4f19f5f5a1aae8d9a70979bdc84b8879158d3e" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../../../../keras/layers/experimental/preprocessing/stringlookup&quot;&gt;&lt;code&gt;StringLookup&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../../../../../../keras/layers/experimental/preprocessing/stringlookup&quot;&gt; &lt;code&gt;StringLookup&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d6d16843c9ea341a1347986bb59d03f16c9fb7aa" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../../../../keras/layers/experimental/preprocessing/textvectorization&quot;&gt;&lt;code&gt;TextVectorization&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../../../../../../keras/layers/experimental/preprocessing/textvectorization&quot;&gt; &lt;code&gt;TextVectorization&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="97a31c19a22414ef8ef5f357f1617f4cc1d647c1" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../../estimator/runconfig&quot;&gt;&lt;code&gt;RunConfig&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../../../../estimator/runconfig&quot;&gt; &lt;code&gt;RunConfig&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f3d75bd146887dd05312c665b5ee9485003d0b9e" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../../keras/callbacks/callback&quot;&gt;&lt;code&gt;Callback&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../../../../keras/callbacks/callback&quot;&gt; &lt;code&gt;Callback&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="137a14a45c0bb4c7ff0cd0805c170a01887b76aa" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../../keras/callbacks/tensorboard&quot;&gt;&lt;code&gt;TensorBoard&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../../../../keras/callbacks/tensorboard&quot;&gt; &lt;code&gt;TensorBoard&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7f48823b67183fe4d3982fdf099fd964de492638" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../../keras/layers/layer&quot;&gt;&lt;code&gt;Layer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../../../../keras/layers/layer&quot;&gt; &lt;code&gt;Layer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="101288461115cd97710e1c4a718e36857f88eeb0" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../../keras/layers/rnn&quot;&gt;&lt;code&gt;RNN&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../../../../keras/layers/rnn&quot;&gt; &lt;code&gt;RNN&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c98cf787068e63e655af32c1f75becc1009cb055" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../data/dataset&quot;&gt;&lt;code&gt;Dataset&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../../../data/dataset&quot;&gt; &lt;code&gt;Dataset&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b69b334b62f492a552001cca525723b81da0f8c3" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../distribute/strategy&quot;&gt;&lt;code&gt;Strategy&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../../../distribute/strategy&quot;&gt; &lt;code&gt;Strategy&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="92ca55cab0329d064ac4fac10f97a987dd809443" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../distribute/strategyextended&quot;&gt;&lt;code&gt;StrategyExtended&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../../../distribute/strategyextended&quot;&gt; &lt;code&gt;StrategyExtended&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ce2f291600404f60ebcf454fa3465a5983be16e9" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../keras/layers/averagepooling1d&quot;&gt;&lt;code&gt;AveragePooling1D&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;layer&quot;&gt;&lt;code&gt;Layer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../../../keras/layers/averagepooling1d&quot;&gt; &lt;code&gt;AveragePooling1D&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;layer&quot;&gt; &lt;code&gt;Layer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="42a8a44e1d03faeea5270e723f842a3c2b65a425" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../keras/layers/averagepooling2d&quot;&gt;&lt;code&gt;AveragePooling2D&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;layer&quot;&gt;&lt;code&gt;Layer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../../../keras/layers/averagepooling2d&quot;&gt; &lt;code&gt;AveragePooling2D&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;layer&quot;&gt; &lt;code&gt;Layer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a1dbcb4046a301b62c85eab641c002d5100bb5b1" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../keras/layers/averagepooling3d&quot;&gt;&lt;code&gt;AveragePooling3D&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;layer&quot;&gt;&lt;code&gt;Layer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../../../keras/layers/averagepooling3d&quot;&gt; &lt;code&gt;AveragePooling3D&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;layer&quot;&gt; &lt;code&gt;Layer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2f3c972c579e20efad3f3479906c3fc65c603f93" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../keras/layers/conv1d&quot;&gt;&lt;code&gt;Conv1D&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;layer&quot;&gt;&lt;code&gt;Layer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../../../keras/layers/conv1d&quot;&gt; &lt;code&gt;Conv1D&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;layer&quot;&gt; &lt;code&gt;Layer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f254da78653b4606006651809bbe544bb36c261f" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../keras/layers/conv2d&quot;&gt;&lt;code&gt;Conv2D&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;layer&quot;&gt;&lt;code&gt;Layer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../../../keras/layers/conv2d&quot;&gt; &lt;code&gt;Conv2D&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;layer&quot;&gt; &lt;code&gt;Layer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a0effe74634550b4623dd89f19fb3491982b74c2" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../keras/layers/conv2dtranspose&quot;&gt;&lt;code&gt;Conv2DTranspose&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;layer&quot;&gt;&lt;code&gt;Layer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../../../keras/layers/conv2dtranspose&quot;&gt; &lt;code&gt;Conv2DTranspose&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;layer&quot;&gt; &lt;code&gt;Layer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2f697c3bc6da2ce250b73eefb92542a6c67912d6" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../keras/layers/conv3d&quot;&gt;&lt;code&gt;Conv3D&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;layer&quot;&gt;&lt;code&gt;Layer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../../../keras/layers/conv3d&quot;&gt; &lt;code&gt;Conv3D&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;layer&quot;&gt; &lt;code&gt;Layer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f8a3fb6f41c3a9e4dc192dd3ed365c7f15d77fc2" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../keras/layers/conv3dtranspose&quot;&gt;&lt;code&gt;Conv3DTranspose&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;layer&quot;&gt;&lt;code&gt;Layer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../../../keras/layers/conv3dtranspose&quot;&gt; &lt;code&gt;Conv3DTranspose&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;layer&quot;&gt; &lt;code&gt;Layer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="29b1fcf2404228be9923887f99e1f80308a0f551" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../keras/layers/dense&quot;&gt;&lt;code&gt;Dense&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;layer&quot;&gt;&lt;code&gt;Layer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../../../keras/layers/dense&quot;&gt; &lt;code&gt;Dense&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;layer&quot;&gt; &lt;code&gt;Layer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e0af60cb1a6134b54526b90870c8a41324c86484" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../keras/layers/dropout&quot;&gt;&lt;code&gt;Dropout&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;layer&quot;&gt;&lt;code&gt;Layer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../../../keras/layers/dropout&quot;&gt; &lt;code&gt;Dropout&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;layer&quot;&gt; &lt;code&gt;Layer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e68321961235af8baeb6a5bf163c3912867702ac" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../keras/layers/flatten&quot;&gt;&lt;code&gt;Flatten&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;layer&quot;&gt;&lt;code&gt;Layer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../../../keras/layers/flatten&quot;&gt; &lt;code&gt;Flatten&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;layer&quot;&gt; &lt;code&gt;Layer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fc8c1e4f9a9c221452851820ebe247974471806e" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../keras/layers/layer&quot;&gt;&lt;code&gt;Layer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../../../keras/layers/layer&quot;&gt; &lt;code&gt;Layer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="28a3a29fe589494fc0af3d023b9cb3692724e795" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../keras/layers/maxpool1d&quot;&gt;&lt;code&gt;MaxPool1D&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;layer&quot;&gt;&lt;code&gt;Layer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../../../keras/layers/maxpool1d&quot;&gt; &lt;code&gt;MaxPool1D&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;layer&quot;&gt; &lt;code&gt;Layer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7584250f981dacb4544b81a0445f6abdf4dac4c8" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../keras/layers/maxpool2d&quot;&gt;&lt;code&gt;MaxPool2D&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;layer&quot;&gt;&lt;code&gt;Layer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../../../keras/layers/maxpool2d&quot;&gt; &lt;code&gt;MaxPool2D&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;layer&quot;&gt; &lt;code&gt;Layer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="154fe6589fea17c9dbbfd13300c3302b5cbec52a" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../keras/layers/maxpool3d&quot;&gt;&lt;code&gt;MaxPool3D&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;layer&quot;&gt;&lt;code&gt;Layer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../../../keras/layers/maxpool3d&quot;&gt; &lt;code&gt;MaxPool3D&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;layer&quot;&gt; &lt;code&gt;Layer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b7ff649eddfed113ec4b0f9190c07241e844f314" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../keras/layers/separableconv1d&quot;&gt;&lt;code&gt;SeparableConv1D&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;layer&quot;&gt;&lt;code&gt;Layer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../../../keras/layers/separableconv1d&quot;&gt; &lt;code&gt;SeparableConv1D&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;layer&quot;&gt; &lt;code&gt;Layer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="76bebda566676ef2b3fefccf517c4294e818101f" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../keras/layers/separableconv2d&quot;&gt;&lt;code&gt;SeparableConv2D&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;layer&quot;&gt;&lt;code&gt;Layer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../../../keras/layers/separableconv2d&quot;&gt; &lt;code&gt;SeparableConv2D&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;layer&quot;&gt; &lt;code&gt;Layer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c0a3c9aaf5c80873ddedbb167634670d3320e6f1" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../lookup/statichashtable&quot;&gt;&lt;code&gt;StaticHashTable&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../../../lookup/statichashtable&quot;&gt; &lt;code&gt;StaticHashTable&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8a3bebd87957ebec2bdeed2ec6c3fd343e87182a" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../lookup/staticvocabularytable&quot;&gt;&lt;code&gt;StaticVocabularyTable&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../../../lookup/staticvocabularytable&quot;&gt; &lt;code&gt;StaticVocabularyTable&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1684aa0ac086b4c33905e11ca938ca00eeb69e59" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../compat/v1/estimator/estimator&quot;&gt;&lt;code&gt;Estimator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../../compat/v1/estimator/estimator&quot;&gt; &lt;code&gt;Estimator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aefa14b86c312089f44417b29a0fefe55dd55580" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../compat/v1/keras/layers/densefeatures&quot;&gt;&lt;code&gt;DenseFeatures&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../../compat/v1/keras/layers/densefeatures&quot;&gt; &lt;code&gt;DenseFeatures&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fb19ef7b8a7a993bf890f5f9f8e3aa82a58da54c" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../compat/v1/keras/layers/gru&quot;&gt;&lt;code&gt;GRU&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../../compat/v1/keras/layers/gru&quot;&gt; &lt;code&gt;GRU&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="25bbb6425736acc7eba310b4733d000e527fdb41" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../compat/v1/keras/layers/grucell&quot;&gt;&lt;code&gt;GRUCell&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../../compat/v1/keras/layers/grucell&quot;&gt; &lt;code&gt;GRUCell&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a6399774002d5547cc32cc9d4b9edee523ac71de" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../compat/v1/keras/layers/lstm&quot;&gt;&lt;code&gt;LSTM&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../../compat/v1/keras/layers/lstm&quot;&gt; &lt;code&gt;LSTM&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d6e365aef9a953772960e2a2d0594d4484de5f37" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../compat/v1/keras/layers/lstmcell&quot;&gt;&lt;code&gt;LSTMCell&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../../compat/v1/keras/layers/lstmcell&quot;&gt; &lt;code&gt;LSTMCell&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="61def0c79e4e14034ebc42dd5e16bbb937237db8" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../devicespec&quot;&gt;&lt;code&gt;DeviceSpec&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../../devicespec&quot;&gt; &lt;code&gt;DeviceSpec&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e22d1fd60d17bfd6bb8dea29e2d168c3d11cab79" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../estimator/sessionrunhook&quot;&gt;&lt;code&gt;SessionRunHook&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../../estimator/sessionrunhook&quot;&gt; &lt;code&gt;SessionRunHook&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c823efc68822885dff47a787a20718225f30976c" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../layer&quot;&gt;&lt;code&gt;Layer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../../layer&quot;&gt; &lt;code&gt;Layer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0253e6a8463328df70cf0bde386ae58d5d4a52b3" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../layers/layer&quot;&gt;&lt;code&gt;Layer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../../layers/layer&quot;&gt; &lt;code&gt;Layer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d380ebfc4ac0e11225bf40c85216fcb9ab9ca5be" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../module&quot;&gt;&lt;code&gt;Module&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../../module&quot;&gt; &lt;code&gt;Module&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6ac000ff3e9397e03d5c9b3dd15afcd623075932" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../ones_initializer&quot;&gt;&lt;code&gt;ones_initializer&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;initializer&quot;&gt;&lt;code&gt;Initializer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../../ones_initializer&quot;&gt; &lt;code&gt;ones_initializer&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;initializer&quot;&gt; &lt;code&gt;Initializer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="431bc7dc03654938db639520210941a6890ffea2" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../optimizers/optimizer&quot;&gt;&lt;code&gt;Optimizer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../../optimizers/optimizer&quot;&gt; &lt;code&gt;Optimizer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2e1cf9747c58dbedac3aa16db0a27265a12d8699" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../random_normal_initializer&quot;&gt;&lt;code&gt;random_normal_initializer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../../random_normal_initializer&quot;&gt; &lt;code&gt;random_normal_initializer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c23d9d73d8c84d12ce7849fdfb684631d2c7f4d1" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../random_normal_initializer&quot;&gt;&lt;code&gt;random_normal_initializer&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;initializer&quot;&gt;&lt;code&gt;Initializer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../../random_normal_initializer&quot;&gt; &lt;code&gt;random_normal_initializer&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;initializer&quot;&gt; &lt;code&gt;Initializer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a7949d09e2384198677c50c86af2bf0ed68fd209" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../random_uniform_initializer&quot;&gt;&lt;code&gt;random_uniform_initializer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../../random_uniform_initializer&quot;&gt; &lt;code&gt;random_uniform_initializer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0b8b6d3e6850689ca8d44a060f6f5dacbcbb2309" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../random_uniform_initializer&quot;&gt;&lt;code&gt;random_uniform_initializer&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;initializer&quot;&gt;&lt;code&gt;Initializer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../../random_uniform_initializer&quot;&gt; &lt;code&gt;random_uniform_initializer&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;initializer&quot;&gt; &lt;code&gt;Initializer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="30e65a22887b2ddde41692586ecc0c1e8dec9c5b" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../truncated_normal_initializer&quot;&gt;&lt;code&gt;truncated_normal_initializer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../../truncated_normal_initializer&quot;&gt; &lt;code&gt;truncated_normal_initializer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1829a659c829a9f36645de8ac301505b51be50d6" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../utils/sequence&quot;&gt;&lt;code&gt;Sequence&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../../utils/sequence&quot;&gt; &lt;code&gt;Sequence&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f0e5a6aee3812cf9bfb851074c2d13a47b335f5d" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../variable&quot;&gt;&lt;code&gt;Variable&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../../variable&quot;&gt; &lt;code&gt;Variable&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b72a646568595cd082eabef4131c846b923b5942" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../zeros_initializer&quot;&gt;&lt;code&gt;zeros_initializer&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;initializer&quot;&gt;&lt;code&gt;Initializer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../../zeros_initializer&quot;&gt; &lt;code&gt;zeros_initializer&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;initializer&quot;&gt; &lt;code&gt;Initializer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b555e28ab5ffb41e3c4dc14c70bf133942c54b2c" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../callback&quot;&gt;&lt;code&gt;Callback&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../callback&quot;&gt; &lt;code&gt;Callback&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6f9bc9d9bcf253cedabcee6c97ec168ce829644a" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../compat/v1/estimator/estimator&quot;&gt;&lt;code&gt;Estimator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../compat/v1/estimator/estimator&quot;&gt; &lt;code&gt;Estimator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="25426e2a5713897c0289518989a9cd3a8db983ff" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../estimator&quot;&gt;&lt;code&gt;Estimator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../estimator&quot;&gt; &lt;code&gt;Estimator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="080d3ec42c2add7514a21ad699a8fc4784f62dcf" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../keras/layers/batchnormalization&quot;&gt;&lt;code&gt;BatchNormalization&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;layer&quot;&gt;&lt;code&gt;Layer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../keras/layers/batchnormalization&quot;&gt; &lt;code&gt;BatchNormalization&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;layer&quot;&gt; &lt;code&gt;Layer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7fd82eb6ae25585268bdb2e754aa9b0cea42c0fc" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../layer&quot;&gt;&lt;code&gt;Layer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../layer&quot;&gt; &lt;code&gt;Layer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="90ccbe17f941cfb541dacdc6e6f8df9e364e9903" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../layers/layer&quot;&gt;&lt;code&gt;Layer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../layers/layer&quot;&gt; &lt;code&gt;Layer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3343ff80aad6eccce0b0ff9a92e6f1138ded04de" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../model&quot;&gt;&lt;code&gt;Model&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../model&quot;&gt; &lt;code&gt;Model&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b9bc653a3de4a5b711fa178780efa227044183c6" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../module&quot;&gt;&lt;code&gt;Module&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../module&quot;&gt; &lt;code&gt;Module&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bae83d89b65139dbc57c20256c7416930811a62f" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../optimizer&quot;&gt;&lt;code&gt;Optimizer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../optimizer&quot;&gt; &lt;code&gt;Optimizer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f4dfd48c0fad88d69677a52e92941c20045e7f8d" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../optimizers/schedules/learningrateschedule&quot;&gt;&lt;code&gt;LearningRateSchedule&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../optimizers/schedules/learningrateschedule&quot;&gt; &lt;code&gt;LearningRateSchedule&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3bac031a4f0d93559c0b5a038481a55db80bffb1" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../sessionrunhook&quot;&gt;&lt;code&gt;SessionRunHook&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../sessionrunhook&quot;&gt; &lt;code&gt;SessionRunHook&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d1e8fe6f775917267679cd58b67ba07d4031d153" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../strategy&quot;&gt;&lt;code&gt;Strategy&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../strategy&quot;&gt; &lt;code&gt;Strategy&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e7d0440491afa6fb0a72459e5330c1c6c5f3a9fd" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../train/optimizer&quot;&gt;&lt;code&gt;Optimizer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../train/optimizer&quot;&gt; &lt;code&gt;Optimizer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="09f24deac9eb963d66c92025a28b74323dca2a37" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../typespec&quot;&gt;&lt;code&gt;TypeSpec&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;../typespec&quot;&gt; &lt;code&gt;TypeSpec&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7ac0a165f2cf448ecb4b394e261add8aee2b6e02" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;argumentparser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;argumentparser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4b53c52c65f50149ff85e0e72be5e18e5ebd0627" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;argumentserializer&quot;&gt;&lt;code&gt;ArgumentSerializer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;argumentserializer&quot;&gt; &lt;code&gt;ArgumentSerializer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="80e09409191cf57a51dbc558605c61bf1e959f0f" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;baselistparser&quot;&gt;&lt;code&gt;BaseListParser&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;baselistparser&quot;&gt; &lt;code&gt;BaseListParser&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cc4c26c0cc8fd71ef96bcb06650fc6ea34b1a676" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;callback&quot;&gt;&lt;code&gt;Callback&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;callback&quot;&gt; &lt;code&gt;Callback&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="37a3e2923879231076529ff16964e3254f28644a" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;clusterresolver&quot;&gt;&lt;code&gt;ClusterResolver&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;clusterresolver&quot;&gt; &lt;code&gt;ClusterResolver&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f56dfe51ff751c5c35642aef72a91e03dc8eb325" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;conditionalaccumulatorbase&quot;&gt;&lt;code&gt;ConditionalAccumulatorBase&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;conditionalaccumulatorbase&quot;&gt; &lt;code&gt;ConditionalAccumulatorBase&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4451c0007ffb8c85d8049d366dd976e53638d7d6" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;constraint&quot;&gt;&lt;code&gt;Constraint&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;constraint&quot;&gt; &lt;code&gt;Constraint&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0e4caf5e5194b7ac96cde7a55cf4136f8f46fdba" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;conv1d&quot;&gt;&lt;code&gt;Conv1D&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;conv1d&quot;&gt; &lt;code&gt;Conv1D&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9cf3bf045963ef0e24f8894a2e9152ee83749492" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;conv2d&quot;&gt;&lt;code&gt;Conv2D&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;conv2d&quot;&gt; &lt;code&gt;Conv2D&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="283b19ef5cabdd9464503df3847e05e6683b4c31" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;conv3d&quot;&gt;&lt;code&gt;Conv3D&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;conv3d&quot;&gt; &lt;code&gt;Conv3D&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f2e2d2138c18dd431317480b04654c2a90d72819" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;crossdeviceops&quot;&gt;&lt;code&gt;CrossDeviceOps&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;crossdeviceops&quot;&gt; &lt;code&gt;CrossDeviceOps&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="22140b78b2e4625ecb8d6cb9f4e06748658330fb" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;dataset&quot;&gt;&lt;code&gt;Dataset&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;dataset&quot;&gt; &lt;code&gt;Dataset&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fa02fcf49761dd366a56034083175af69d0964fc" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;distribution&quot;&gt;&lt;code&gt;Distribution&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承：&lt;a href=&quot;distribution&quot;&gt; &lt;code&gt;Distribution&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2b51b20c1f658b10e05c97ac0210ccc81f121087" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;dropout&quot;&gt;&lt;code&gt;Dropout&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;dropout&quot;&gt; &lt;code&gt;Dropout&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e878e37e306fee3dbc483d11717bf9341c22b53e" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5dfc58dfa8f92ceeec773d4079a01572ca2cd806" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;estimator&quot;&gt;&lt;code&gt;Estimator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;estimator&quot;&gt; &lt;code&gt;Estimator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7a2ae2c02899c2e4f78d776e809915721c13881a" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;exporter&quot;&gt;&lt;code&gt;Exporter&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;exporter&quot;&gt; &lt;code&gt;Exporter&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="58dcf205446e67668da4cee5c19d32d67d820dc8" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;exportoutput&quot;&gt;&lt;code&gt;ExportOutput&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;exportoutput&quot;&gt; &lt;code&gt;ExportOutput&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="84e5436e8e1add9f0b776920cdc41d900f226bb9" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;flag&quot;&gt;&lt;code&gt;Flag&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;flag&quot;&gt; &lt;code&gt;Flag&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a0db0c480f0cb5392640cfdd5f72b4e7ae28a556" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;gamma&quot;&gt;&lt;code&gt;Gamma&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;gamma&quot;&gt; &lt;code&gt;Gamma&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2ef4a4c2192c1e1137ac1cdc387d568a072f314d" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;head&quot;&gt;&lt;code&gt;Head&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;head&quot;&gt; &lt;code&gt;Head&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7e6a2ad1e98cf96c2f87570045e8cc2185aec4bd" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;initializer&quot;&gt;&lt;code&gt;Initializer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;initializer&quot;&gt; &lt;code&gt;Initializer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a30dfeb3ba7f1f880dbdb0a428cbd9056f33e550" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ea34304998eb45063cccb9f7518ed59ed029b3fb" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;keras/initializers/initializer&quot;&gt;&lt;code&gt;Initializer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;keras/initializers/initializer&quot;&gt; &lt;code&gt;Initializer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="208224ad9829e548920e4711cb9800c0bbf02a79" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;layer&quot;&gt;&lt;code&gt;Layer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;layer&quot;&gt; &lt;code&gt;Layer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1074de264eed43a2c35c1e9e34add7d6f6407038" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;layers/layer&quot;&gt;&lt;code&gt;Layer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;layers/layer&quot;&gt; &lt;code&gt;Layer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f23330460480edbb4fc738157f7a5471232f7c83" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;learningrateschedule&quot;&gt;&lt;code&gt;LearningRateSchedule&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;learningrateschedule&quot;&gt; &lt;code&gt;LearningRateSchedule&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0a1c3867710811bb11042f959bfcb4d5f8b519a0" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;linearoperator&quot;&gt;&lt;code&gt;LinearOperator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;linearoperator&quot;&gt; &lt;code&gt;LinearOperator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f62175fd1a3fcbb5f5a876a78c6edd7356485def" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;lossscale&quot;&gt;&lt;code&gt;LossScale&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;lossscale&quot;&gt; &lt;code&gt;LossScale&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bb33eb889582345ba3f1d78863f8d00b235c5ee1" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;mean&quot;&gt;&lt;code&gt;Mean&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;mean&quot;&gt; &lt;code&gt;Mean&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="23b8f0e2c60442efd1f3f24a1b9098b8e3720a04" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;metric&quot;&gt;&lt;code&gt;Metric&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;metric&quot;&gt; &lt;code&gt;Metric&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3491dcb6475f6cdcd9bfbfb9a50f3b524fc4f8b0" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;model&quot;&gt;&lt;code&gt;Model&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;model&quot;&gt; &lt;code&gt;Model&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d14b97aeea22bcdb096843d7cfb8024f32a8d496" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;multiflag&quot;&gt;&lt;code&gt;MultiFlag&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;multiflag&quot;&gt; &lt;code&gt;MultiFlag&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="80158f4961cf1668db5fd8c4f7cefdd6b4f0b29a" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;operror&quot;&gt;&lt;code&gt;OpError&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;operror&quot;&gt; &lt;code&gt;OpError&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5d0af4ebd255fd6f617c8d538add3730d1f29225" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;optimizer&quot;&gt;&lt;code&gt;Optimizer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;optimizer&quot;&gt; &lt;code&gt;Optimizer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="04c2e54a79367272f125c78e8460cacd30e00ebd" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;queuebase&quot;&gt;&lt;code&gt;QueueBase&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;queuebase&quot;&gt; &lt;code&gt;QueueBase&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5ccbec78a7b42e602f358942d26c9d05f169ed7c" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;readerbase&quot;&gt;&lt;code&gt;ReaderBase&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;readerbase&quot;&gt; &lt;code&gt;ReaderBase&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ad0372cd2d15c62f344d2a9750b22878629b0740" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;regressionhead&quot;&gt;&lt;code&gt;RegressionHead&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;regressionhead&quot;&gt; &lt;code&gt;RegressionHead&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3e3d5b150747f41525b95698f7bbd95312e28809" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;regularizer&quot;&gt;&lt;code&gt;Regularizer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;regularizer&quot;&gt; &lt;code&gt;Regularizer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="41240b7c3505b27c7d0d17bd731d675d120e69a7" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;rnn&quot;&gt;&lt;code&gt;RNN&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;rnn&quot;&gt; &lt;code&gt;RNN&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d4bc99967778b197915dfb1e03b3aac7430e2d06" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;rnncell&quot;&gt;&lt;code&gt;RNNCell&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;rnncell&quot;&gt; &lt;code&gt;RNNCell&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="92968f787ed32c0b2652202feacd0e1bb742a548" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;rnnestimator&quot;&gt;&lt;code&gt;RNNEstimator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;rnnestimator&quot;&gt; &lt;code&gt;RNNEstimator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="35b9f8a26efc7813a5fc71ac2e35eb36ea0752ed" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;sequenceenqueuer&quot;&gt;&lt;code&gt;SequenceEnqueuer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;sequenceenqueuer&quot;&gt; &lt;code&gt;SequenceEnqueuer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a9097ee84e0043bad50f3732959fe4f03cde569e" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;sessioncreator&quot;&gt;&lt;code&gt;SessionCreator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;sessioncreator&quot;&gt; &lt;code&gt;SessionCreator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f16acebe1259f779d2c3a0f7a4d97de5b66ad39f" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;sessionrunhook&quot;&gt;&lt;code&gt;SessionRunHook&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;sessionrunhook&quot;&gt; &lt;code&gt;SessionRunHook&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="78de757e66b0204e828d8e24b165b9614dcddef6" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;stacktracefilter&quot;&gt;&lt;code&gt;StackTraceFilter&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;stacktracefilter&quot;&gt; &lt;code&gt;StackTraceFilter&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1314e1f7b68e8d2e740d84aa7ff167503f726bd3" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;stacktracetransform&quot;&gt;&lt;code&gt;StackTraceTransform&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;stacktracetransform&quot;&gt; &lt;code&gt;StackTraceTransform&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="74e8664d5defb70dad460e27e606424d03ad7f8e" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;strategy&quot;&gt;&lt;code&gt;Strategy&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;strategy&quot;&gt; &lt;code&gt;Strategy&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b5b5461c11487a577320988d6c7910a14af6eabb" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;typespec&quot;&gt;&lt;code&gt;TypeSpec&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;typespec&quot;&gt; &lt;code&gt;TypeSpec&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f7923ecf7967dad1a15ad737b679bd8050b2a8bd" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;variancescaling&quot;&gt;&lt;code&gt;VarianceScaling&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;variancescaling&quot;&gt; &lt;code&gt;VarianceScaling&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="53c43532e5cbca0b52801f19115633789d7d2a84" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;wrapper&quot;&gt;&lt;code&gt;Wrapper&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">継承元：&lt;a href=&quot;wrapper&quot;&gt; &lt;code&gt;Wrapper&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a3dde0fdb1c7620a5dbdcc30fcd0ab45a5b2ebfb" translate="yes" xml:space="preserve">
          <source>Initial seed for workers, will be incremented by one for each worker.</source>
          <target state="translated">ワーカーの初期シードは、ワーカーごとに1つずつインクリメントされます。</target>
        </trans-unit>
        <trans-unit id="896a5ab9538c1a67c1f3e659ad90640e62f8b8da" translate="yes" xml:space="preserve">
          <source>Initialization:</source>
          <target state="translated">Initialization:</target>
        </trans-unit>
        <trans-unit id="6b4c4e02ed448c5a81def9a1e3687e52b103b145" translate="yes" xml:space="preserve">
          <source>Initialization: At creation time the hooked session does following things in given order:</source>
          <target state="translated">初期化。作成時に、フックされたセッションは以下のことを所定の順序で行います。</target>
        </trans-unit>
        <trans-unit id="08031e322fd9617e1573ed5dbfa09ff216adcc09" translate="yes" xml:space="preserve">
          <source>Initialization: At creation time the monitored session does following things in given order:</source>
          <target state="translated">初期化。作成時に、監視対象のセッションは以下のことを所定の順序で行います。</target>
        </trans-unit>
        <trans-unit id="b0355561fecfea92594a45fdcb6ca88daca19bec" translate="yes" xml:space="preserve">
          <source>Initialize Categorical distributions using class log-probabilities. (deprecated)</source>
          <target state="translated">log-probabilitiesクラスを用いてカテゴリ分布を初期化します。(非推奨)</target>
        </trans-unit>
        <trans-unit id="eb53dcaa811ac7688015872c0307120a73670815" translate="yes" xml:space="preserve">
          <source>Initialize a &lt;code&gt;LinearOperatorAdjoint&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LinearOperatorAdjoint&lt;/code&gt; を初期化します。</target>
        </trans-unit>
        <trans-unit id="750f138f781c88fbb0701d39c348820ff999fad8" translate="yes" xml:space="preserve">
          <source>Initialize a &lt;code&gt;LinearOperatorBlockDiag&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LinearOperatorBlockDiag&lt;/code&gt; を初期化します。</target>
        </trans-unit>
        <trans-unit id="f39eb5cba37cc32a15ef159441cb53292159952a" translate="yes" xml:space="preserve">
          <source>Initialize a &lt;code&gt;LinearOperatorComposition&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LinearOperatorComposition&lt;/code&gt; を初期化します。</target>
        </trans-unit>
        <trans-unit id="8b05907b33c8a9de0c0979de3f32b251ac1c8aad" translate="yes" xml:space="preserve">
          <source>Initialize a &lt;code&gt;LinearOperatorDiag&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LinearOperatorDiag&lt;/code&gt; を初期化します。</target>
        </trans-unit>
        <trans-unit id="693135b5de80f140c35b24fa0e2aef0094c05d68" translate="yes" xml:space="preserve">
          <source>Initialize a &lt;code&gt;LinearOperatorFullMatrix&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LinearOperatorFullMatrix&lt;/code&gt; を初期化します。</target>
        </trans-unit>
        <trans-unit id="bbd6633639933b006a538ab0aef4fdf5a8441992" translate="yes" xml:space="preserve">
          <source>Initialize a &lt;code&gt;LinearOperatorHouseholder&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LinearOperatorHouseholder&lt;/code&gt; を初期化します。</target>
        </trans-unit>
        <trans-unit id="0fc6c13d8271533b4e0c6a52055f390134df1f4e" translate="yes" xml:space="preserve">
          <source>Initialize a &lt;code&gt;LinearOperatorIdentity&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LinearOperatorIdentity&lt;/code&gt; を初期化します。</target>
        </trans-unit>
        <trans-unit id="e00c7d507871b6245d20ab7f29a8de43b054e478" translate="yes" xml:space="preserve">
          <source>Initialize a &lt;code&gt;LinearOperatorInversion&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LinearOperatorInversion&lt;/code&gt; を初期化します。</target>
        </trans-unit>
        <trans-unit id="5d4e66ea801fb0915db2ab44c3588f99c13535da" translate="yes" xml:space="preserve">
          <source>Initialize a &lt;code&gt;LinearOperatorKronecker&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LinearOperatorKronecker&lt;/code&gt; を初期化します。</target>
        </trans-unit>
        <trans-unit id="eeb390cc0f4fac75926a62916c88ab4b661c42c4" translate="yes" xml:space="preserve">
          <source>Initialize a &lt;code&gt;LinearOperatorLowRankUpdate&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LinearOperatorLowRankUpdate&lt;/code&gt; を初期化します。</target>
        </trans-unit>
        <trans-unit id="f9d706bfa28f87040a2e0b40cdf0afbf7e16b64a" translate="yes" xml:space="preserve">
          <source>Initialize a &lt;code&gt;LinearOperatorLowerTriangular&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LinearOperatorLowerTriangular&lt;/code&gt; を初期化します。</target>
        </trans-unit>
        <trans-unit id="7588d86ee76ca246898555ddb33325423ac0aa2d" translate="yes" xml:space="preserve">
          <source>Initialize a &lt;code&gt;LinearOperatorPermutation&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LinearOperatorPermutation&lt;/code&gt; を初期化します。</target>
        </trans-unit>
        <trans-unit id="ad616170739db723a76b2a6610fee8afdb496005" translate="yes" xml:space="preserve">
          <source>Initialize a &lt;code&gt;LinearOperatorScaledIdentity&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LinearOperatorScaledIdentity&lt;/code&gt; を初期化します。</target>
        </trans-unit>
        <trans-unit id="cf523f71058bd9f6bac48a09bd89a7d0645d188b" translate="yes" xml:space="preserve">
          <source>Initialize a &lt;code&gt;LinearOperatorToeplitz&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LinearOperatorToeplitz&lt;/code&gt; を初期化します。</target>
        </trans-unit>
        <trans-unit id="ac13eedefc7b6b32a2cd134693fd9e0177e8fcf6" translate="yes" xml:space="preserve">
          <source>Initialize a &lt;code&gt;LinearOperatorZeros&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LinearOperatorZeros&lt;/code&gt; を初期化します。</target>
        </trans-unit>
        <trans-unit id="738190cdc5cd301e6242cb86b444286367b38ff6" translate="yes" xml:space="preserve">
          <source>Initialize a batch of Beta distributions. (deprecated)</source>
          <target state="translated">ベータ版ディストリビューションのバッチを初期化します。(廃止予定)</target>
        </trans-unit>
        <trans-unit id="dc7ea2e4332b90aa477204eac854c35a52c9e897" translate="yes" xml:space="preserve">
          <source>Initialize a batch of Dirichlet distributions. (deprecated)</source>
          <target state="translated">ディリクレ分布のバッチを初期化します。(廃止予定)</target>
        </trans-unit>
        <trans-unit id="fc8d3695b732b4c84d7528c8d6686ac5b6c4efba" translate="yes" xml:space="preserve">
          <source>Initialize a batch of DirichletMultinomial distributions. (deprecated)</source>
          <target state="translated">Dirichlet多項式分布のバッチを初期化します。(廃止予定)</target>
        </trans-unit>
        <trans-unit id="e92be9f5b309bd342947a735a43d5120077fec20" translate="yes" xml:space="preserve">
          <source>Initialize a batch of Multinomial distributions. (deprecated)</source>
          <target state="translated">多項式分布のバッチを初期化します。(廃止予定)</target>
        </trans-unit>
        <trans-unit id="a08179d319a047367bc8f5fa7409bac517eae691" translate="yes" xml:space="preserve">
          <source>Initialize a batch of Uniform distributions. (deprecated)</source>
          <target state="translated">均一分布のバッチを初期化します。(廃止予定)</target>
        </trans-unit>
        <trans-unit id="7176bd72795dadb8c783acaefcff5df66a240124" translate="yes" xml:space="preserve">
          <source>Initialize an &lt;code&gt;LinearOperatorCirculant2D&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LinearOperatorCirculant2D&lt;/code&gt; を初期化します。</target>
        </trans-unit>
        <trans-unit id="d9b868fe74c4ce2558ee85147bd4de2aef5e9e70" translate="yes" xml:space="preserve">
          <source>Initialize an &lt;code&gt;LinearOperatorCirculant&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LinearOperatorCirculant&lt;/code&gt; を初期化します。</target>
        </trans-unit>
        <trans-unit id="9f8049ed73769cea9db916044a5c096b1780e5ad" translate="yes" xml:space="preserve">
          <source>Initialize ophint argument.</source>
          <target state="translated">ophint 引数を初期化します。</target>
        </trans-unit>
        <trans-unit id="5f66672d1a211feccb2663e524389cc7bbdc9544" translate="yes" xml:space="preserve">
          <source>Initialize self. See help(type(self)) for accurate signature.</source>
          <target state="translated">selfを初期化します。正確な署名は help(type(self))を参照してください。</target>
        </trans-unit>
        <trans-unit id="774126eedb486505371aeb53fcb908707fda92f1" translate="yes" xml:space="preserve">
          <source>Initialize the &lt;code&gt;LinearOperator&lt;/code&gt;. (deprecated arguments)</source>
          <target state="translated">&lt;code&gt;LinearOperator&lt;/code&gt; を初期化します。（廃止された引数）</target>
        </trans-unit>
        <trans-unit id="ab2e1f2d631fceec84acd055ae017bb35b138793" translate="yes" xml:space="preserve">
          <source>Initialize the KL registrar. (deprecated)</source>
          <target state="translated">KLレジストラを初期化する。(廃止予定)</target>
        </trans-unit>
        <trans-unit id="a6ebdd831ac3202b3781c72a34d4adf2eae8f045" translate="yes" xml:space="preserve">
          <source>Initialize the TPU devices.</source>
          <target state="translated">TPUデバイスを初期化します。</target>
        </trans-unit>
        <trans-unit id="92e2d30e35ba9382e113f9b082b909176f6d30a2" translate="yes" xml:space="preserve">
          <source>Initialize the basic LSTM cell. (deprecated)</source>
          <target state="translated">基本的なLSTMセルを初期化します。(非推奨)</target>
        </trans-unit>
        <trans-unit id="b590a960cba96e3ec2bd76607c374e10df648ac8" translate="yes" xml:space="preserve">
          <source>Initialize the context manager.</source>
          <target state="translated">コンテキストマネージャーを初期化します。</target>
        </trans-unit>
        <trans-unit id="fa67a798e83e54f567e4c72f649b904fcbc46e99" translate="yes" xml:space="preserve">
          <source>Initialize the converter.</source>
          <target state="translated">コンバータを初期化します。</target>
        </trans-unit>
        <trans-unit id="bc16e43bd3119b5ee14cd85b3e95a73c462f9e60" translate="yes" xml:space="preserve">
          <source>Initialize the parameters for an LSTM cell.</source>
          <target state="translated">LSTM セルのパラメータを初期化します。</target>
        </trans-unit>
        <trans-unit id="a276f0d2cb8c74827ade5547808ad2460ab61df8" translate="yes" xml:space="preserve">
          <source>Initialize the parameters for an LSTM cell. (deprecated)</source>
          <target state="translated">LSTMセルのパラメータを初期化します。(廃止予定)</target>
        </trans-unit>
        <trans-unit id="f8de61c60cae88e66471bf5bc57e9c4fbd41701f" translate="yes" xml:space="preserve">
          <source>InitializeTable</source>
          <target state="translated">InitializeTable</target>
        </trans-unit>
        <trans-unit id="5aed30f7b6fc98dc524f5833e005c4e4ec7a42cb" translate="yes" xml:space="preserve">
          <source>InitializeTableFromDataset</source>
          <target state="translated">InitializeTableFromDataset</target>
        </trans-unit>
        <trans-unit id="7c3bd8734fc960e9600fa97e6141676591a46831" translate="yes" xml:space="preserve">
          <source>InitializeTableFromTextFile</source>
          <target state="translated">InitializeTableFromTextFile</target>
        </trans-unit>
        <trans-unit id="c2a3468a32393944b646bf84f4d3a50fe75c3793" translate="yes" xml:space="preserve">
          <source>InitializeTableFromTextFileV2</source>
          <target state="translated">InitializeTableFromTextFileV2</target>
        </trans-unit>
        <trans-unit id="d595985e2c5ded73f4a9de35a2d130afb6f8c587" translate="yes" xml:space="preserve">
          <source>InitializeTableV2</source>
          <target state="translated">InitializeTableV2</target>
        </trans-unit>
        <trans-unit id="444bc80fd9904870633d2e8861ecfda9efc99b9c" translate="yes" xml:space="preserve">
          <source>Initializer base class: all Keras initializers inherit from this class.</source>
          <target state="translated">イニシャライザの基底クラス:すべての Keras イニシャライザはこのクラスを継承しています。</target>
        </trans-unit>
        <trans-unit id="7f0a3f70258a349042e3af55ded6d87eee852d82" translate="yes" xml:space="preserve">
          <source>Initializer base class: all initializers inherit from this class.</source>
          <target state="translated">イニシャライザの基底クラス:すべてのイニシャライザはこのクラスを継承します。</target>
        </trans-unit>
        <trans-unit id="7408f1164bc8abcd3cd06ec2d69e780bd33dcfc9" translate="yes" xml:space="preserve">
          <source>Initializer capable of adapting its scale to the shape of weights tensors.</source>
          <target state="translated">重みのテンソルの形状にスケールを適応させることができるイニシャライザ。</target>
        </trans-unit>
        <trans-unit id="3f3e650f5d31cec8ee9c79d6f7e362575199454d" translate="yes" xml:space="preserve">
          <source>Initializer for the &lt;code&gt;embeddings&lt;/code&gt; matrix (see &lt;a href=&quot;../initializers&quot;&gt;&lt;code&gt;keras.initializers&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">初期化子 &lt;code&gt;embeddings&lt;/code&gt; マトリックス（参照&lt;a href=&quot;../initializers&quot;&gt; &lt;code&gt;keras.initializers&lt;/code&gt; を&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="cd4d0f3ab47bea318b1c37c93519d1a1da732eeb" translate="yes" xml:space="preserve">
          <source>Initializer for the &lt;code&gt;kernel&lt;/code&gt; weights matrices.</source>
          <target state="translated">&lt;code&gt;kernel&lt;/code&gt; 重み行列の初期化子。</target>
        </trans-unit>
        <trans-unit id="7ba628f9ea30369bd578dc8d48cd1e3d28bf5c41" translate="yes" xml:space="preserve">
          <source>Initializer for the &lt;code&gt;kernel&lt;/code&gt; weights matrix ( see &lt;a href=&quot;../initializers&quot;&gt;&lt;code&gt;keras.initializers&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">初期化子 &lt;code&gt;kernel&lt;/code&gt; 重み行列（参照&lt;a href=&quot;../initializers&quot;&gt; &lt;code&gt;keras.initializers&lt;/code&gt; を&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="5ba55c172dc5eab60693e689ec7fb38d97b36486" translate="yes" xml:space="preserve">
          <source>Initializer for the &lt;code&gt;kernel&lt;/code&gt; weights matrix (see &lt;a href=&quot;../initializers&quot;&gt;&lt;code&gt;keras.initializers&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">初期化子 &lt;code&gt;kernel&lt;/code&gt; 重み行列（参照&lt;a href=&quot;../initializers&quot;&gt; &lt;code&gt;keras.initializers&lt;/code&gt; を&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="e6e262bd0196c6fec5362e38ce4fd7bd8f850ecb" translate="yes" xml:space="preserve">
          <source>Initializer for the &lt;code&gt;kernel&lt;/code&gt; weights matrix, used for the linear transformation of the inputs.</source>
          <target state="translated">入力の線形変換に使用される &lt;code&gt;kernel&lt;/code&gt; 重み行列の初期化子。</target>
        </trans-unit>
        <trans-unit id="781ea722b1bd54fe46786e4b204fb94df6ff4f4f" translate="yes" xml:space="preserve">
          <source>Initializer for the &lt;code&gt;kernel&lt;/code&gt; weights matrix, used for the linear transformation of the inputs. Default: &lt;code&gt;glorot_uniform&lt;/code&gt;.</source>
          <target state="translated">入力の線形変換に使用される &lt;code&gt;kernel&lt;/code&gt; 重み行列の初期化子。デフォルト： &lt;code&gt;glorot_uniform&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2c20a701e64041d46893780c75432a86bf96c2ef" translate="yes" xml:space="preserve">
          <source>Initializer for the &lt;code&gt;kernel&lt;/code&gt; weights matrix, used for the linear transformation of the inputs..</source>
          <target state="translated">入力の線形変換に使用される &lt;code&gt;kernel&lt;/code&gt; 重み行列の初期化子。</target>
        </trans-unit>
        <trans-unit id="9c985b4c4c3a2d5a5db286eb608a6aaa41c24744" translate="yes" xml:space="preserve">
          <source>Initializer for the &lt;code&gt;kernel&lt;/code&gt; weights matrix.</source>
          <target state="translated">&lt;code&gt;kernel&lt;/code&gt; 重み行列の初期化子。</target>
        </trans-unit>
        <trans-unit id="4e4305dd5a4f4497e59c08e01b2b9016f38ddc44" translate="yes" xml:space="preserve">
          <source>Initializer for the &lt;code&gt;recurrent_kernel&lt;/code&gt; weights matrix, used for the linear transformation of the recurrent state.</source>
          <target state="translated">&lt;code&gt;recurrent_kernel&lt;/code&gt; 重み行列の初期化子。反復状態の線形変換に使用されます。</target>
        </trans-unit>
        <trans-unit id="f4be5e35088634a9fc1d3d2f991d38a5e1787388" translate="yes" xml:space="preserve">
          <source>Initializer for the &lt;code&gt;recurrent_kernel&lt;/code&gt; weights matrix, used for the linear transformation of the recurrent state. Default: &lt;code&gt;orthogonal&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;recurrent_kernel&lt;/code&gt; 重み行列の初期化子。反復状態の線形変換に使用されます。デフォルト： &lt;code&gt;orthogonal&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9af38116f02da6c39b58cc8da4c28be61a81d876" translate="yes" xml:space="preserve">
          <source>Initializer for the beta weight.</source>
          <target state="translated">ベータウェイトのイニシャライザ。</target>
        </trans-unit>
        <trans-unit id="d3d51bc1b3c7639715a0b517ddb1db22866613a8" translate="yes" xml:space="preserve">
          <source>Initializer for the beta weight. Defaults to zeros.</source>
          <target state="translated">ベータウェイトのイニシャライザ。デフォルトはゼロです。</target>
        </trans-unit>
        <trans-unit id="70e4f24e2d42625333b9e3d5b356c24fd8e1ddcd" translate="yes" xml:space="preserve">
          <source>Initializer for the bias vector ( see &lt;a href=&quot;../initializers&quot;&gt;&lt;code&gt;keras.initializers&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">バイアスベクトルの初期化子（&lt;a href=&quot;../initializers&quot;&gt; &lt;code&gt;keras.initializers&lt;/code&gt; を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="db262f6cbeba981795f8d7953bf4533bf6250526" translate="yes" xml:space="preserve">
          <source>Initializer for the bias vector (see &lt;a href=&quot;../initializers&quot;&gt;&lt;code&gt;keras.initializers&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">バイアスベクトルの初期化子（&lt;a href=&quot;../initializers&quot;&gt; &lt;code&gt;keras.initializers&lt;/code&gt; を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="2f2ea2379cb97d28a3c54f26c8c1f8072222138c" translate="yes" xml:space="preserve">
          <source>Initializer for the bias vector.</source>
          <target state="translated">バイアスベクトルのイニシャライザ.</target>
        </trans-unit>
        <trans-unit id="2f270770d498ec4fc3655cf0eb9baa466587762d" translate="yes" xml:space="preserve">
          <source>Initializer for the bias vector. Default: &lt;code&gt;zeros&lt;/code&gt;.</source>
          <target state="translated">バイアスベクトルの初期化子。デフォルト： &lt;code&gt;zeros&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5201cba3e441bccae15337f6e669e493ac9d21b9" translate="yes" xml:space="preserve">
          <source>Initializer for the depthwise kernel matrix ( see &lt;a href=&quot;../initializers&quot;&gt;&lt;code&gt;keras.initializers&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;a href=&quot;../initializers&quot;&gt; &lt;code&gt;keras.initializers&lt;/code&gt; &lt;/a&gt;方向のカーネル行列の初期化子（keras.initializersを参照）。</target>
        </trans-unit>
        <trans-unit id="9928e7831c90bb494792ace6d7b7f956169e16ae" translate="yes" xml:space="preserve">
          <source>Initializer for the gamma weight.</source>
          <target state="translated">ガンマウエイトのイニシャライザ。</target>
        </trans-unit>
        <trans-unit id="add6797439df2873a8707c82ca252f6c8be936c5" translate="yes" xml:space="preserve">
          <source>Initializer for the gamma weight. Defaults to ones.</source>
          <target state="translated">ガンマウェイトのイニシャライザ。デフォルトは1です。</target>
        </trans-unit>
        <trans-unit id="06ecf7540e5a3ff8d2e0717705278320e8321a60" translate="yes" xml:space="preserve">
          <source>Initializer for the moving mean.</source>
          <target state="translated">移動平均のイニシャライザ。</target>
        </trans-unit>
        <trans-unit id="f890659b046c43e8f9396b0f7812624e17bdaae2" translate="yes" xml:space="preserve">
          <source>Initializer for the moving variance.</source>
          <target state="translated">移動分散のイニシャライザ。</target>
        </trans-unit>
        <trans-unit id="629a0ebdff9c5f3c21412ceaf83712cd99c7c93e" translate="yes" xml:space="preserve">
          <source>Initializer for the pointwise kernel matrix ( see &lt;a href=&quot;../initializers&quot;&gt;&lt;code&gt;keras.initializers&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">ポイントワイズカーネル行列の&lt;a href=&quot;../initializers&quot;&gt; &lt;code&gt;keras.initializers&lt;/code&gt; &lt;/a&gt;（keras.initializersを参照）。</target>
        </trans-unit>
        <trans-unit id="de36279d1a9e86d4e1cde4822bb5ee964eb2fb05" translate="yes" xml:space="preserve">
          <source>Initializer for the variable if one is created. Can either be an initializer object or a Tensor. If it's a Tensor, its shape must be known unless validate_shape is False.</source>
          <target state="translated">変数が作成された場合のイニシャライザ。イニシャライザオブジェクトかテンソルのどちらかになります。Tensorの場合、validate_shapeがFalseになっていない限り、その形状は既知でなければなりません。</target>
        </trans-unit>
        <trans-unit id="a23be94303001d621e4dc7d04c27de3d1b3679cf" translate="yes" xml:space="preserve">
          <source>Initializer function for the bias.</source>
          <target state="translated">バイアスの初期化関数。</target>
        </trans-unit>
        <trans-unit id="86357e48ce6faf014cf422087761d8012cac0b71" translate="yes" xml:space="preserve">
          <source>Initializer function for the weight matrix. If &lt;code&gt;None&lt;/code&gt; (default), weights are initialized using the default initializer used by &lt;a href=&quot;../get_variable&quot;&gt;&lt;code&gt;tf.compat.v1.get_variable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">重み行列の初期化関数。 &lt;code&gt;None&lt;/code&gt; （デフォルト）の場合、重みは&lt;a href=&quot;../get_variable&quot;&gt; &lt;code&gt;tf.compat.v1.get_variable&lt;/code&gt; &lt;/a&gt;によって使用されるデフォルトの初期化子を使用して初期化されます。</target>
        </trans-unit>
        <trans-unit id="ea33d8e91f4848f1335260de0a767bf9d2fc824f" translate="yes" xml:space="preserve">
          <source>Initializer function for the weights.</source>
          <target state="translated">重みの初期化関数。</target>
        </trans-unit>
        <trans-unit id="394655039e380227cacb4c80f86e6cac564639ab" translate="yes" xml:space="preserve">
          <source>Initializer instance (callable).</source>
          <target state="translated">イニシャライザのインスタンス(呼び出し可能)。</target>
        </trans-unit>
        <trans-unit id="f60811326fed85c17ddc6a9fa74dd3e187f5f2eb" translate="yes" xml:space="preserve">
          <source>Initializer that generates a truncated normal distribution.</source>
          <target state="translated">切り捨てられた正規分布を生成するイニシャライザ.</target>
        </trans-unit>
        <trans-unit id="28a79d9ea883c4f5cd6e250dbcccda1f34cc830e" translate="yes" xml:space="preserve">
          <source>Initializer that generates an orthogonal matrix.</source>
          <target state="translated">直交行列を生成するイニシャライザ.</target>
        </trans-unit>
        <trans-unit id="1792d0500f8e70d942738b949ce3b4da4a9ed270" translate="yes" xml:space="preserve">
          <source>Initializer that generates tensors initialized to 0.</source>
          <target state="translated">0に初期化されたテンソルを生成するイニシャライザ。</target>
        </trans-unit>
        <trans-unit id="a36980b211658b282787d0374f188f82dec6bdb5" translate="yes" xml:space="preserve">
          <source>Initializer that generates tensors initialized to 1.</source>
          <target state="translated">1に初期化されたテンソルを生成するイニシャライザ。</target>
        </trans-unit>
        <trans-unit id="15754fbc0acedd6e5262c409c57d5c268cae842f" translate="yes" xml:space="preserve">
          <source>Initializer that generates tensors with a normal distribution.</source>
          <target state="translated">正規分布を持つテンソルを生成するイニシャライザです。</target>
        </trans-unit>
        <trans-unit id="2e48457893b98a46c7f6098fecb5c04951df9791" translate="yes" xml:space="preserve">
          <source>Initializer that generates tensors with a uniform distribution.</source>
          <target state="translated">一様分布を持つテンソルを生成するイニシャライザです。</target>
        </trans-unit>
        <trans-unit id="3bee63cb84d4df7eb9ae6d89ea8269883a3a2f73" translate="yes" xml:space="preserve">
          <source>Initializer that generates tensors with constant values.</source>
          <target state="translated">定数値を持つテンソルを生成するイニシャライザ。</target>
        </trans-unit>
        <trans-unit id="a63680d71f7ed8d10b2e994835a64ae1af02ec9e" translate="yes" xml:space="preserve">
          <source>Initializer that generates tensors without scaling variance.</source>
          <target state="translated">分散をスケーリングせずにテンソルを生成するイニシャライザ。</target>
        </trans-unit>
        <trans-unit id="1ad2d9eaadec9573877dacc1cb60e6be8ac9c172" translate="yes" xml:space="preserve">
          <source>Initializer that generates the identity matrix.</source>
          <target state="translated">ID行列を生成するイニシャライザ.</target>
        </trans-unit>
        <trans-unit id="ba3489968dced82d9caa31fe8dbca460cc2e2ca7" translate="yes" xml:space="preserve">
          <source>Initializer.</source>
          <target state="translated">Initializer.</target>
        </trans-unit>
        <trans-unit id="c300579a9fafe19c627626ad79a72342dd2efc6f" translate="yes" xml:space="preserve">
          <source>Initializers allow you to pre-specify an initialization strategy, encoded in the Initializer object, without knowing the shape and dtype of the variable being initialized.</source>
          <target state="translated">イニシャライザを使用すると、初期化される変数の形状や dtype を知らなくても、イニシャライザオブジェクトでエンコードされた初期化ストラテジーを事前に指定することができます。</target>
        </trans-unit>
        <trans-unit id="d27c91c237b2a008f7246947c44a699389b5681f" translate="yes" xml:space="preserve">
          <source>Initializers should implement a &lt;code&gt;__call__&lt;/code&gt; method with the following signature:</source>
          <target state="translated">&lt;code&gt;__call__&lt;/code&gt; は、次の署名を使用して__call__メソッドを実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="6ae3569d509cdfe1b8eeda1c03736c231164aa1d" translate="yes" xml:space="preserve">
          <source>Initializes &lt;code&gt;FinalOpHook&lt;/code&gt; with ops to run at the end of the session.</source>
          <target state="translated">セッションの最後に実行するopsで &lt;code&gt;FinalOpHook&lt;/code&gt; を初期化します。</target>
        </trans-unit>
        <trans-unit id="0af270707bfe64bad53b93831ed2ef62271f7b4f" translate="yes" xml:space="preserve">
          <source>Initializes EnumParser.</source>
          <target state="translated">EnumParserを初期化します。</target>
        </trans-unit>
        <trans-unit id="0c6c3eb42679c70ce8e567e3a3d01b9974f44165" translate="yes" xml:space="preserve">
          <source>Initializes SessionRunContext.</source>
          <target state="translated">SessionRunContextを初期化します。</target>
        </trans-unit>
        <trans-unit id="f9d8cdaca3e42fa2ece9b86eebceb7ecac5115af" translate="yes" xml:space="preserve">
          <source>Initializes TPU and returns a TPUClusterResolver.</source>
          <target state="translated">TPU を初期化し、TPUClusterResolver を返します。</target>
        </trans-unit>
        <trans-unit id="1e9596221f894466401f26eb2ad3d3bb9bca21a0" translate="yes" xml:space="preserve">
          <source>Initializes a &lt;code&gt;BoostedTreesClassifier&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;BoostedTreesClassifier&lt;/code&gt; インスタンスを初期化します。</target>
        </trans-unit>
        <trans-unit id="641a92d161ea17f97b3f75efe25bd49c3aff8e50" translate="yes" xml:space="preserve">
          <source>Initializes a &lt;code&gt;BoostedTreesEstimator&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;BoostedTreesEstimator&lt;/code&gt; インスタンスを初期化します。</target>
        </trans-unit>
        <trans-unit id="8291a5b18fc232c8c600a8530a9160b317faf613" translate="yes" xml:space="preserve">
          <source>Initializes a &lt;code&gt;BoostedTreesRegressor&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;BoostedTreesRegressor&lt;/code&gt; インスタンスを初期化します。</target>
        </trans-unit>
        <trans-unit id="bf1dbcb62a62aa47798f17328b9db5bfda87a371" translate="yes" xml:space="preserve">
          <source>Initializes a &lt;code&gt;CheckpointInputPipelineHook&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CheckpointInputPipelineHook&lt;/code&gt; を初期化します。</target>
        </trans-unit>
        <trans-unit id="575a2d3cd1c6cefb0d8c20d7511f5f2328199dea" translate="yes" xml:space="preserve">
          <source>Initializes a &lt;code&gt;CheckpointSaverHook&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CheckpointSaverHook&lt;/code&gt; を初期化します。</target>
        </trans-unit>
        <trans-unit id="a2bf50de7719118633c38d4887574c861cacae90" translate="yes" xml:space="preserve">
          <source>Initializes a &lt;code&gt;DNNClassifier&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;DNNClassifier&lt;/code&gt; インスタンスを初期化します。</target>
        </trans-unit>
        <trans-unit id="9c551665d393a8ff2ebb59249f9845ad31f5e64c" translate="yes" xml:space="preserve">
          <source>Initializes a &lt;code&gt;DNNEstimator&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;DNNEstimator&lt;/code&gt; インスタンスを初期化します。</target>
        </trans-unit>
        <trans-unit id="0cd3fbf5dea3545531f5a1265c354ed7b46e1d19" translate="yes" xml:space="preserve">
          <source>Initializes a &lt;code&gt;DNNRegressor&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;DNNRegressor&lt;/code&gt; インスタンスを初期化します。</target>
        </trans-unit>
        <trans-unit id="0af051ae925bb350c4f5229f3c01f96feb14a59b" translate="yes" xml:space="preserve">
          <source>Initializes a &lt;code&gt;FeedFnHook&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FeedFnHook&lt;/code&gt; を初期化します。</target>
        </trans-unit>
        <trans-unit id="cc1915707125a14da164ca446507b73fb2b92efa" translate="yes" xml:space="preserve">
          <source>Initializes a &lt;code&gt;GlobalStepWaiterHook&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;GlobalStepWaiterHook&lt;/code&gt; を初期化します。</target>
        </trans-unit>
        <trans-unit id="cbbe5f2cbae68cf255194ac13f981b98c75307c1" translate="yes" xml:space="preserve">
          <source>Initializes a &lt;code&gt;InMemoryEvaluatorHook&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;InMemoryEvaluatorHook&lt;/code&gt; を初期化します。</target>
        </trans-unit>
        <trans-unit id="d129af7a0307c26eab90b28ebd51b9618ad292be" translate="yes" xml:space="preserve">
          <source>Initializes a &lt;code&gt;LinearEstimator&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;LinearEstimator&lt;/code&gt; インスタンスを初期化します。</target>
        </trans-unit>
        <trans-unit id="44409c31c23e5093785e966d4116f3612c1704af" translate="yes" xml:space="preserve">
          <source>Initializes a &lt;code&gt;LinearRegressor&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;LinearRegressor&lt;/code&gt; インスタンスを初期化します。</target>
        </trans-unit>
        <trans-unit id="c02d624ee0a9807bd61d94c49113d6ab4a74c47b" translate="yes" xml:space="preserve">
          <source>Initializes a &lt;code&gt;LoggingTensorHook&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LoggingTensorHook&lt;/code&gt; を初期化します。</target>
        </trans-unit>
        <trans-unit id="11306ffe02fcfd7255133712c0c10d8f6b861a21" translate="yes" xml:space="preserve">
          <source>Initializes a &lt;code&gt;NanTensorHook&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NanTensorHook&lt;/code&gt; を初期化します。</target>
        </trans-unit>
        <trans-unit id="546f19884e0d132fdd88d1130640aa01b21aace9" translate="yes" xml:space="preserve">
          <source>Initializes a &lt;code&gt;RNNClassifier&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;RNNClassifier&lt;/code&gt; インスタンスを初期化します。</target>
        </trans-unit>
        <trans-unit id="dea803d756c15f8ac4cf7e7ccc1c8153c06bdd9a" translate="yes" xml:space="preserve">
          <source>Initializes a &lt;code&gt;RNNEstimator&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;RNNEstimator&lt;/code&gt; インスタンスを初期化します。</target>
        </trans-unit>
        <trans-unit id="6e2ad4948c5069b73b42132f07ca898494bfe604" translate="yes" xml:space="preserve">
          <source>Initializes a &lt;code&gt;StopAtStepHook&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;StopAtStepHook&lt;/code&gt; を初期化します。</target>
        </trans-unit>
        <trans-unit id="ecebafebcc1ed7893c42ca6adbe3a6e7c3f3d309" translate="yes" xml:space="preserve">
          <source>Initializes a &lt;code&gt;SummarySaverHook&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SummarySaverHook&lt;/code&gt; を初期化します。</target>
        </trans-unit>
        <trans-unit id="cbd3617c2d5051723d22bb771dbeeefc7cb141af" translate="yes" xml:space="preserve">
          <source>Initializes a &lt;code&gt;TFRecordWriter&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;TFRecordWriter&lt;/code&gt; を初期化します。</target>
        </trans-unit>
        <trans-unit id="4b9e921bd19e339c3c62dd30db062a771c9111c7" translate="yes" xml:space="preserve">
          <source>Initializes a BaselineClassifier instance.</source>
          <target state="translated">BaselineClassifier インスタンスを初期化します。</target>
        </trans-unit>
        <trans-unit id="f2ca17291afb7e8cb98eae1421a6d34024556fe2" translate="yes" xml:space="preserve">
          <source>Initializes a BaselineEstimator instance.</source>
          <target state="translated">BaselineEstimator インスタンスを初期化します。</target>
        </trans-unit>
        <trans-unit id="6df9376ec784999b4324a701a11055ec4641b248" translate="yes" xml:space="preserve">
          <source>Initializes a BaselineRegressor instance.</source>
          <target state="translated">BaselineRegressor のインスタンスを初期化します。</target>
        </trans-unit>
        <trans-unit id="a0774ef910763d2c62bd641db60c78cc26f5f0c0" translate="yes" xml:space="preserve">
          <source>Initializes a DNNLinearCombinedClassifier instance.</source>
          <target state="translated">DNNLinearCombinedClassifierインスタンスを初期化します。</target>
        </trans-unit>
        <trans-unit id="783d0c854480043cc2c0181e9e30a857fc22e30e" translate="yes" xml:space="preserve">
          <source>Initializes a DNNLinearCombinedEstimator instance.</source>
          <target state="translated">DNNLinearCombinedEstimatorのインスタンスを初期化します。</target>
        </trans-unit>
        <trans-unit id="739deeaaeb79fadd6c52fea70a1826f73947e113" translate="yes" xml:space="preserve">
          <source>Initializes a DNNLinearCombinedRegressor instance.</source>
          <target state="translated">DNNLinearCombinedRegressorのインスタンスを初期化します。</target>
        </trans-unit>
        <trans-unit id="0c40d6ce99ac68c2b27ea09e79d9aa0795cdf29d" translate="yes" xml:space="preserve">
          <source>Initializes a UnionClusterResolver with other ClusterResolvers.</source>
          <target state="translated">他のClusterResolverでUnionClusterResolverを初期化します。</target>
        </trans-unit>
        <trans-unit id="33532b330cba4da4287395c3bcee952368758bde" translate="yes" xml:space="preserve">
          <source>Initializes a chief session creator.</source>
          <target state="translated">チーフセッション作成者を初期化します。</target>
        </trans-unit>
        <trans-unit id="f0fbe2018ecf0aac090ce758a3b9ad7c64b0d419" translate="yes" xml:space="preserve">
          <source>Initializes a distributed TPU system for use with TensorFlow.</source>
          <target state="translated">TensorFlowで使用するための分散型TPUシステムを初期化します。</target>
        </trans-unit>
        <trans-unit id="f9ecfd4934d70f84d7899a79d879721a3e413c28" translate="yes" xml:space="preserve">
          <source>Initializes a hook that takes periodic profiling snapshots.</source>
          <target state="translated">定期的にプロファイリングのスナップショットを取得するフックを初期化します。</target>
        </trans-unit>
        <trans-unit id="997de8101a00d090e563fabad75f25c03ff57046" translate="yes" xml:space="preserve">
          <source>Initializes a new KubernetesClusterResolver.</source>
          <target state="translated">新しいKubernetesClusterResolverを初期化します。</target>
        </trans-unit>
        <trans-unit id="639ee79e578c9c1534d9a97348960057ce542dee" translate="yes" xml:space="preserve">
          <source>Initializes a table from a text file.</source>
          <target state="translated">テキストファイルからテーブルを初期化します。</target>
        </trans-unit>
        <trans-unit id="a000286aa35868ad7a4442c66081e50874ea4509" translate="yes" xml:space="preserve">
          <source>Initializes a worker session creator.</source>
          <target state="translated">ワーカーセッション作成者を初期化します。</target>
        </trans-unit>
        <trans-unit id="52e2a9b43cb09a5b97b21e2638d508223e7d9295" translate="yes" xml:space="preserve">
          <source>Initializes an InputContext object.</source>
          <target state="translated">InputContextオブジェクトを初期化します。</target>
        </trans-unit>
        <trans-unit id="9f766a8a68267cac7d59732c88bb6823db3efc5f" translate="yes" xml:space="preserve">
          <source>Initializes summary writing for graph execution mode.</source>
          <target state="translated">グラフ実行モードの要約書き込みを初期化します。</target>
        </trans-unit>
        <trans-unit id="a923a4b25ad6812b374a90843b54d284a15dffcb" translate="yes" xml:space="preserve">
          <source>Initializes the &lt;code&gt;step_context&lt;/code&gt; argument for a &lt;code&gt;step_fn&lt;/code&gt; invocation.</source>
          <target state="translated">&lt;code&gt;step_fn&lt;/code&gt; 呼び出しの &lt;code&gt;step_context&lt;/code&gt; 引数を初期化します。</target>
        </trans-unit>
        <trans-unit id="064630dcdc1b915396129f044f0af7f3ed3178c1" translate="yes" xml:space="preserve">
          <source>Initializes the TPUStrategy object.</source>
          <target state="translated">TPUStrategyオブジェクトを初期化します。</target>
        </trans-unit>
        <trans-unit id="a095094fc43a8f61df14737cdbd7e74e010345c8" translate="yes" xml:space="preserve">
          <source>Initializes the given &lt;code&gt;table&lt;/code&gt; with &lt;code&gt;keys&lt;/code&gt; and &lt;code&gt;values&lt;/code&gt; tensors.</source>
          <target state="translated">&lt;code&gt;keys&lt;/code&gt; と &lt;code&gt;values&lt;/code&gt; テンソルを使用して、指定された &lt;code&gt;table&lt;/code&gt; を初期化します。</target>
        </trans-unit>
        <trans-unit id="5015344a3098f58ff7e43767db7a65fd51001358" translate="yes" xml:space="preserve">
          <source>Initializes the loss scale class.</source>
          <target state="translated">損失スケールクラスを初期化します。</target>
        </trans-unit>
        <trans-unit id="25a3e19a4075de6c96af04a4d7d33034705f5421" translate="yes" xml:space="preserve">
          <source>Initializes the multi device iterator with the given dataset.</source>
          <target state="translated">与えられたデータセットでマルチデバイスイテレータを初期化します。</target>
        </trans-unit>
        <trans-unit id="2a2ebcb62e07bfa23fe63ff902381554659598f7" translate="yes" xml:space="preserve">
          <source>Initializes the object.</source>
          <target state="translated">オブジェクトを初期化します。</target>
        </trans-unit>
        <trans-unit id="96c249c719463e9cbe91e8dfab76ecf97217371c" translate="yes" xml:space="preserve">
          <source>Initializes the parameters for an RNN cell.</source>
          <target state="translated">RNNセルのパラメータを初期化します。</target>
        </trans-unit>
        <trans-unit id="926bdaa7bd8079fe9e99087d53c0e1e6f3926945" translate="yes" xml:space="preserve">
          <source>Initializes the summary writer.</source>
          <target state="translated">サマリーライターを初期化します。</target>
        </trans-unit>
        <trans-unit id="8ce5d08116a5422425173483db4afb40e381960e" translate="yes" xml:space="preserve">
          <source>Initializes the table from a text file.</source>
          <target state="translated">テキストファイルからテーブルを初期化します。</target>
        </trans-unit>
        <trans-unit id="166aee7623091cf78477483a2b69d759bad97f4c" translate="yes" xml:space="preserve">
          <source>Initializes this loss scale optimizer.</source>
          <target state="translated">この損失規模オプティマイザを初期化します。</target>
        </trans-unit>
        <trans-unit id="420eb1414b9510458affd7d7f221b2d916a76daf" translate="yes" xml:space="preserve">
          <source>Initializes this strategy with an optional &lt;code&gt;cluster_resolver&lt;/code&gt;.</source>
          <target state="translated">オプションの &lt;code&gt;cluster_resolver&lt;/code&gt; でこの戦略を初期化します。</target>
        </trans-unit>
        <trans-unit id="0d2c52d1b5ccc55d62f5f28f184bbca571994a96" translate="yes" xml:space="preserve">
          <source>Initializes with a device to reduce to and a way to accumulate.</source>
          <target state="translated">減らす装置と溜め方で初期化します。</target>
        </trans-unit>
        <trans-unit id="b0239e06bf33c2a0502643ba3bac0a932d185f3a" translate="yes" xml:space="preserve">
          <source>Initializing variables on startup, restoring them from the most recent checkpoint after a crash, or wait for checkpoints to become available.</source>
          <target state="translated">起動時に変数を初期化したり、クラッシュ後に最新のチェックポイントから復元したり、チェックポイントが利用可能になるのを待ったり。</target>
        </trans-unit>
        <trans-unit id="6cfc0b3ada9a1caff4180ec7edad85d08676e0cf" translate="yes" xml:space="preserve">
          <source>Injects a new target into a function built by make_decorator.</source>
          <target state="translated">make_decoratorによって構築された関数に新しいターゲットを注入します。</target>
        </trans-unit>
        <trans-unit id="678429d49a474ad8ec94a587c28e389acd6369f3" translate="yes" xml:space="preserve">
          <source>InplaceAdd</source>
          <target state="translated">InplaceAdd</target>
        </trans-unit>
        <trans-unit id="ec6af4517abefc843097599d82d36ce1eb1a270d" translate="yes" xml:space="preserve">
          <source>InplaceSub</source>
          <target state="translated">InplaceSub</target>
        </trans-unit>
        <trans-unit id="f0e0363a75f31977f3e73ce8f596bfbdfd61bf73" translate="yes" xml:space="preserve">
          <source>InplaceUpdate</source>
          <target state="translated">InplaceUpdate</target>
        </trans-unit>
        <trans-unit id="c43b6bd566f5c25fdb732766cd21b9ae75943d6a" translate="yes" xml:space="preserve">
          <source>Input &lt;code&gt;Tensor&lt;/code&gt; of 4 dimensions.</source>
          <target state="translated">4次元の入力 &lt;code&gt;Tensor&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="555cccc16566c1858242a991bb2d577980094119" translate="yes" xml:space="preserve">
          <source>Input &lt;code&gt;Tensor&lt;/code&gt; of arbitrary dimensionality.</source>
          <target state="translated">任意の次元の入力 &lt;code&gt;Tensor&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a47e882af7f7b4bf59f38df7ea0de6601132847c" translate="yes" xml:space="preserve">
          <source>Input &lt;code&gt;dict&lt;/code&gt; keyed by head name, or logits &lt;code&gt;Tensor&lt;/code&gt; with shape &lt;code&gt;[D0, D1, ... DN, logits_dimension]&lt;/code&gt;. For many applications, the &lt;code&gt;Tensor&lt;/code&gt; shape is &lt;code&gt;[batch_size, logits_dimension]&lt;/code&gt;. If logits is a &lt;code&gt;Tensor&lt;/code&gt;, it will split the &lt;code&gt;Tensor&lt;/code&gt; along the last dimension and distribute it appropriately among the heads. Check &lt;code&gt;MultiHead&lt;/code&gt; for examples.</source>
          <target state="translated">入力 &lt;code&gt;dict&lt;/code&gt; ヘッド名をキー、またはlogits &lt;code&gt;Tensor&lt;/code&gt; 形状と &lt;code&gt;[D0, D1, ... DN, logits_dimension]&lt;/code&gt; 。多くのアプリケーションでは、 &lt;code&gt;Tensor&lt;/code&gt; 形状は &lt;code&gt;[batch_size, logits_dimension]&lt;/code&gt; です。ロジットが &lt;code&gt;Tensor&lt;/code&gt; 場合、最後の次元に沿って &lt;code&gt;Tensor&lt;/code&gt; を分割し、ヘッド間で適切に分散します。例については、 &lt;code&gt;MultiHead&lt;/code&gt; を確認してください。</target>
        </trans-unit>
        <trans-unit id="55df84b1e295dfaf67dfff1b3a1fdcf1773c8846" translate="yes" xml:space="preserve">
          <source>Input &lt;code&gt;dict&lt;/code&gt; keyed by head name. For each head, the label value can be integer or string &lt;code&gt;Tensor&lt;/code&gt; with shape matching its corresponding &lt;code&gt;logits&lt;/code&gt;.&lt;code&gt;labels&lt;/code&gt; is a required argument when &lt;code&gt;mode&lt;/code&gt; equals &lt;code&gt;TRAIN&lt;/code&gt; or &lt;code&gt;EVAL&lt;/code&gt;.</source>
          <target state="translated">入力 &lt;code&gt;dict&lt;/code&gt; ヘッド名をキー。各ヘッドのラベル値は、対応する &lt;code&gt;logits&lt;/code&gt; 一致する形状の整数または文字列 &lt;code&gt;Tensor&lt;/code&gt; にすることができます。 &lt;code&gt;mode&lt;/code&gt; が &lt;code&gt;TRAIN&lt;/code&gt; または &lt;code&gt;EVAL&lt;/code&gt; に等しい場合、 &lt;code&gt;labels&lt;/code&gt; は必須の引数です。</target>
        </trans-unit>
        <trans-unit id="7d0ae41f6575650de2d584cfceb38b4e40bc36c9" translate="yes" xml:space="preserve">
          <source>Input &lt;code&gt;dict&lt;/code&gt; mapping string feature names to &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;SparseTensor&lt;/code&gt; objects containing the values for that feature in a minibatch. Often to be used to fetch example-weight tensor.</source>
          <target state="translated">&lt;code&gt;SparseTensor&lt;/code&gt; 内のその機能の値を含む &lt;code&gt;Tensor&lt;/code&gt; またはSparseTensorオブジェクトに文字列機能名をマッピングする &lt;code&gt;dict&lt;/code&gt; を入力します。多くの場合、例の重みテンソルをフェッチするために使用されます。</target>
        </trans-unit>
        <trans-unit id="cbc3579a5d678f887fecef572ddf9366f2f9c7cc" translate="yes" xml:space="preserve">
          <source>Input &lt;code&gt;dict&lt;/code&gt; of &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;SparseTensor&lt;/code&gt; objects.</source>
          <target state="translated">入力 &lt;code&gt;dict&lt;/code&gt; の &lt;code&gt;Tensor&lt;/code&gt; または &lt;code&gt;SparseTensor&lt;/code&gt; オブジェクト。</target>
        </trans-unit>
        <trans-unit id="8ae71208250add9941ed13ea2029409afa7b93fb" translate="yes" xml:space="preserve">
          <source>Input &lt;code&gt;set1&lt;/code&gt; is a &lt;code&gt;SparseTensor&lt;/code&gt; represented by &lt;code&gt;set1_indices&lt;/code&gt;, &lt;code&gt;set1_values&lt;/code&gt;, and &lt;code&gt;set1_shape&lt;/code&gt;. For &lt;code&gt;set1&lt;/code&gt; ranked &lt;code&gt;n&lt;/code&gt;, 1st &lt;code&gt;n-1&lt;/code&gt; dimensions must be the same as &lt;code&gt;set2&lt;/code&gt;. Dimension &lt;code&gt;n&lt;/code&gt; contains values in a set, duplicates are allowed but ignored.</source>
          <target state="translated">入力 &lt;code&gt;set1&lt;/code&gt; は、 &lt;code&gt;SparseTensor&lt;/code&gt; 、 &lt;code&gt;set1_values&lt;/code&gt; 、および &lt;code&gt;set1_shape&lt;/code&gt; で表される &lt;code&gt;set1_indices&lt;/code&gt; です。ため &lt;code&gt;set1&lt;/code&gt; ランク &lt;code&gt;n&lt;/code&gt; 、第 &lt;code&gt;n-1&lt;/code&gt; の寸法は同じでなければならない &lt;code&gt;set2&lt;/code&gt; 。次元 &lt;code&gt;n&lt;/code&gt; にはセット内の値が含まれ、重複は許可されますが無視されます。</target>
        </trans-unit>
        <trans-unit id="58c336a84296dacace527a71edd564eea1f7ffa2" translate="yes" xml:space="preserve">
          <source>Input &lt;code&gt;set2&lt;/code&gt; is a &lt;code&gt;SparseTensor&lt;/code&gt; represented by &lt;code&gt;set2_indices&lt;/code&gt;, &lt;code&gt;set2_values&lt;/code&gt;, and &lt;code&gt;set2_shape&lt;/code&gt;. For &lt;code&gt;set2&lt;/code&gt; ranked &lt;code&gt;n&lt;/code&gt;, 1st &lt;code&gt;n-1&lt;/code&gt; dimensions must be the same as &lt;code&gt;set1&lt;/code&gt;. Dimension &lt;code&gt;n&lt;/code&gt; contains values in a set, duplicates are allowed but ignored.</source>
          <target state="translated">入力 &lt;code&gt;set2&lt;/code&gt; は、 &lt;code&gt;SparseTensor&lt;/code&gt; 、 &lt;code&gt;set2_values&lt;/code&gt; 、および &lt;code&gt;set2_shape&lt;/code&gt; で表される &lt;code&gt;set2_indices&lt;/code&gt; です。ため &lt;code&gt;set2&lt;/code&gt; ランク &lt;code&gt;n&lt;/code&gt; 、第 &lt;code&gt;n-1&lt;/code&gt; の寸法は同じでなければならない &lt;code&gt;set1&lt;/code&gt; 。次元 &lt;code&gt;n&lt;/code&gt; にはセット内の値が含まれ、重複は許可されますが無視されます。</target>
        </trans-unit>
        <trans-unit id="c8f99bc7303fea77788e4b5a62891d37be161744" translate="yes" xml:space="preserve">
          <source>Input &lt;code&gt;set&lt;/code&gt; is a &lt;code&gt;SparseTensor&lt;/code&gt; represented by &lt;code&gt;set_indices&lt;/code&gt;, &lt;code&gt;set_values&lt;/code&gt;, and &lt;code&gt;set_shape&lt;/code&gt;. The last dimension contains values in a set, duplicates are allowed but ignored.</source>
          <target state="translated">入力 &lt;code&gt;set&lt;/code&gt; は、 &lt;code&gt;SparseTensor&lt;/code&gt; 、 &lt;code&gt;set_values&lt;/code&gt; 、および &lt;code&gt;set_shape&lt;/code&gt; で表される &lt;code&gt;set_indices&lt;/code&gt; です。最後のディメンションにはセット内の値が含まれています。重複は許可されますが、無視されます。</target>
        </trans-unit>
        <trans-unit id="5f66030afeade18b9456df8065e5c951d6d480c2" translate="yes" xml:space="preserve">
          <source>Input &lt;code&gt;tensor&lt;/code&gt; or &lt;code&gt;variable&lt;/code&gt;.</source>
          <target state="translated">入力 &lt;code&gt;tensor&lt;/code&gt; または &lt;code&gt;variable&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bc0e981b33830b81d9ff2818d62f005b2928c167" translate="yes" xml:space="preserve">
          <source>Input &lt;code&gt;tf.Example&lt;/code&gt; objects:</source>
          <target state="translated">入力 &lt;code&gt;tf.Example&lt;/code&gt; オブジェクト：</target>
        </trans-unit>
        <trans-unit id="027ba0d2bd1ac3c2c0126ee6ab5e33bed78269f7" translate="yes" xml:space="preserve">
          <source>Input Numpy array.</source>
          <target state="translated">Numpy配列を入力します。</target>
        </trans-unit>
        <trans-unit id="4e22ca8ccf9f6c32e67d850f39a63b8ae3ce0acb" translate="yes" xml:space="preserve">
          <source>Input PIL Image instance.</source>
          <target state="translated">PIL イメージのインスタンスを入力します。</target>
        </trans-unit>
        <trans-unit id="393b83efcad37fe7f24fb15bdef2bbd7b9a13b1f" translate="yes" xml:space="preserve">
          <source>Input data (i.e. often &lt;code&gt;sess.graph_def&lt;/code&gt;),</source>
          <target state="translated">入力データ（つまり、多くの場合 &lt;code&gt;sess.graph_def&lt;/code&gt; ）、</target>
        </trans-unit>
        <trans-unit id="3c8492f8050f5a2252c39818c585ca67b9a56893" translate="yes" xml:space="preserve">
          <source>Input data. It could be:</source>
          <target state="translated">データを入力します。かもしれません。</target>
        </trans-unit>
        <trans-unit id="4273256e3bf47b078b718fcd16e88b74b26a5f2c" translate="yes" xml:space="preserve">
          <source>Input data. It could be: - A Numpy array (or array-like), or a list of arrays (in case the model has multiple inputs). - A TensorFlow tensor, or a list of tensors (in case the model has multiple inputs).</source>
          <target state="translated">データを入力します。これは、次のようなものが考えられます。-Numpy配列(または配列のようなもの),または配列のリスト(モデルが複数の入力を持つ場合).-TensorFlowテンソル,またはテンソルのリスト(モデルが複数の入力を持つ場合).</target>
        </trans-unit>
        <trans-unit id="7804e6f6c4e4eb9aa841a2db499d73f590eec04d" translate="yes" xml:space="preserve">
          <source>Input data. Numpy array of rank 4 or a tuple. If tuple, the first element should contain the images and the second element another numpy array or a list of numpy arrays that gets passed to the output without any modifications. Can be used to feed the model miscellaneous data along with the images. In case of grayscale data, the channels axis of the image array should have value 1, in case of RGB data, it should have value 3, and in case of RGBA data, it should have value 4.</source>
          <target state="translated">入力データ。ランク4のnumpy配列,あるいはタプル.タプルの場合,最初の要素には画像を,2番目の要素には別のnumpy配列またはnumpy配列のリストを指定します.画像と一緒にモデルの雑多なデータを出力するために利用することができます。グレースケールデータの場合は,画像配列のチャンネル軸に値1を,RGBデータの場合は値3を,RGBAデータの場合は値4を指定します.</target>
        </trans-unit>
        <trans-unit id="bfe0277ca1258b71f70bd599617a938764ac3895" translate="yes" xml:space="preserve">
          <source>Input images and output images must be quantized types.</source>
          <target state="translated">入力画像と出力画像は量子化された型でなければなりません。</target>
        </trans-unit>
        <trans-unit id="73f2bad16eec61ee4379ef2b4aeb9cc4c2a4a510" translate="yes" xml:space="preserve">
          <source>Input images can be of different types but output images are always float.</source>
          <target state="translated">入力画像にはさまざまな種類がありますが、出力画像は常に float です。</target>
        </trans-unit>
        <trans-unit id="db26f74f2a7583e55f737d0b7c1d7bc9abb03c30" translate="yes" xml:space="preserve">
          <source>Input is an unknown function or string, i.e., the input does not denote any defined function.</source>
          <target state="translated">入力は未知の関数または文字列であり、定義された関数を表すものではありません。</target>
        </trans-unit>
        <trans-unit id="4239004a11dea4c51531321c98ec214cc8cbb13c" translate="yes" xml:space="preserve">
          <source>Input logits.</source>
          <target state="translated">ロジットを入力します。</target>
        </trans-unit>
        <trans-unit id="fda1e7a11af1cc3301f80e9a5418b19a3ab29bb4" translate="yes" xml:space="preserve">
          <source>Input mask tensor (potentially None) or list of input mask tensors.</source>
          <target state="translated">入力マスクテンソル(潜在的には None)または入力マスクテンソルのリスト。</target>
        </trans-unit>
        <trans-unit id="edbe051ef8c9da1130a2117a0a044159ca1b63de" translate="yes" xml:space="preserve">
          <source>Input may or may not have padding at the end. See EncodeBase64 for padding. Web-safe means that input must use - and _ instead of + and /.</source>
          <target state="translated">入力は、最後にパディングがある場合とない場合があります。パディングについては EncodeBase64 を参照してください。ウェブセーフとは、入力が+と/の代わりに-と_を使わなければならないことを意味します。</target>
        </trans-unit>
        <trans-unit id="f8658e95ed1bbcd180ec9de2eb39b3ac7043313a" translate="yes" xml:space="preserve">
          <source>Input of &lt;code&gt;train&lt;/code&gt; and &lt;code&gt;evaluate&lt;/code&gt; should have following features, otherwise there will be a &lt;code&gt;KeyError&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;train&lt;/code&gt; と &lt;code&gt;evaluate&lt;/code&gt; の入力には次の機能が必要です。そうでない場合、 &lt;code&gt;KeyError&lt;/code&gt; が発生します</target>
        </trans-unit>
        <trans-unit id="88e394c2930956f582ca9ae4eef0469cb05766cc" translate="yes" xml:space="preserve">
          <source>Input of &lt;code&gt;train&lt;/code&gt; and &lt;code&gt;evaluate&lt;/code&gt; should have following features, otherwise there will be a KeyError:</source>
          <target state="translated">&lt;code&gt;train&lt;/code&gt; および &lt;code&gt;evaluate&lt;/code&gt; の入力には、次の機能が必要です。そうでない場合、KeyErrorが発生します。</target>
        </trans-unit>
        <trans-unit id="ebfa8d05c9d2a729345a882e4621644a960bf43d" translate="yes" xml:space="preserve">
          <source>Input pipelines based on Queues are not supported when eager execution is enabled. Please use the &lt;a href=&quot;../../../data&quot;&gt;&lt;code&gt;tf.data&lt;/code&gt;&lt;/a&gt; API to ingest data under eager execution.</source>
          <target state="translated">Eager実行が有効になっている場合、キューに基づく入力パイプラインはサポートされません。熱心な実行でデータを&lt;a href=&quot;../../../data&quot;&gt; &lt;code&gt;tf.data&lt;/code&gt; &lt;/a&gt;は、tf.data APIを使用してください。</target>
        </trans-unit>
        <trans-unit id="598edbed9cb4bf5b632040c88948229e65c299b6" translate="yes" xml:space="preserve">
          <source>Input points. See &lt;a href=&quot;../../../../estimator/estimator#evaluate&quot;&gt;&lt;code&gt;tf.estimator.Estimator.evaluate&lt;/code&gt;&lt;/a&gt;. Only one batch is retrieved.</source>
          <target state="translated">入力ポイント。&lt;a href=&quot;../../../../estimator/estimator#evaluate&quot;&gt; &lt;code&gt;tf.estimator.Estimator.evaluate&lt;/code&gt; を&lt;/a&gt;参照してください。1つのバッチのみが取得されます。</target>
        </trans-unit>
        <trans-unit id="1a6c78aba2a9c76b9d951d8db1402d9aba390207" translate="yes" xml:space="preserve">
          <source>Input points. See &lt;a href=&quot;../../../../estimator/estimator#predict&quot;&gt;&lt;code&gt;tf.estimator.Estimator.predict&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">入力ポイント。&lt;a href=&quot;../../../../estimator/estimator#predict&quot;&gt; &lt;code&gt;tf.estimator.Estimator.predict&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="d0931987f07b0aec0f450122b07367564fc58ded" translate="yes" xml:space="preserve">
          <source>Input requirements:</source>
          <target state="translated">入力要件。</target>
        </trans-unit>
        <trans-unit id="3dc6f8eee6bce10a8537a2917c22a3cc2c8dc7ed" translate="yes" xml:space="preserve">
          <source>Input samples. It could be:</source>
          <target state="translated">サンプルを入力します。かもしれません。</target>
        </trans-unit>
        <trans-unit id="1edc3b92bc5323054e3dc2775081c31d37f39632" translate="yes" xml:space="preserve">
          <source>Input shape is not specified. None value for dimension in input_tensor.</source>
          <target state="translated">入力形状が指定されていない。input_tensor の次元の値がない。</target>
        </trans-unit>
        <trans-unit id="6150fd4490609fe6a3c79de568883b2478811095" translate="yes" xml:space="preserve">
          <source>Input shape, as an integer shape tuple (or list of shape tuples, one tuple per input tensor).</source>
          <target state="translated">整数の形状タプル(または形状タプルのリスト、入力テンソルごとに1つのタプル)としての入力形状。</target>
        </trans-unit>
        <trans-unit id="73a2fcb17cd33f0bbcaa985f8ff933859938cfdb" translate="yes" xml:space="preserve">
          <source>Input shape:</source>
          <target state="translated">形状を入力します。</target>
        </trans-unit>
        <trans-unit id="59eecd0cfa473638c7d2777b11ac1545f57165a4" translate="yes" xml:space="preserve">
          <source>Input shape: A single or list of string, int32 or int64 &lt;code&gt;Tensor&lt;/code&gt;, &lt;code&gt;SparseTensor&lt;/code&gt; or &lt;code&gt;RaggedTensor&lt;/code&gt; of shape &lt;code&gt;[batch_size, ...,]&lt;/code&gt;</source>
          <target state="translated">入力形状：文字列の単一またはリスト、int32またはint64 &lt;code&gt;Tensor&lt;/code&gt; 、 &lt;code&gt;SparseTensor&lt;/code&gt; または &lt;code&gt;RaggedTensor&lt;/code&gt; の形状 &lt;code&gt;[batch_size, ...,]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9fadd4c954d4398a6a8aa787506ce19f5ddef089" translate="yes" xml:space="preserve">
          <source>Input shape: Arbitrary. Use the keyword argument &lt;code&gt;input_shape&lt;/code&gt; (tuple of integers, does not include the samples axis) when using this layer as the first layer in a model. Output shape: Same shape as input.</source>
          <target state="translated">入力形状：任意。このレイヤーをモデルの最初のレイヤーとして使用する場合は、キーワード引数 &lt;code&gt;input_shape&lt;/code&gt; （整数のタプル、サンプル軸を含まない）を使用します。出力形状：入力と同じ形状。</target>
        </trans-unit>
        <trans-unit id="406a1ac666c22757785ff154ffb25a854854e54d" translate="yes" xml:space="preserve">
          <source>Input shape: Arbitrary. Use the keyword argument &lt;code&gt;input_shape&lt;/code&gt; (tuple of integers, does not include the samples axis) when using this layer as the first layer in a model. Output shape: Same shape as input. Reference:</source>
          <target state="translated">入力形状：任意。このレイヤーをモデルの最初のレイヤーとして使用する場合は、キーワード引数 &lt;code&gt;input_shape&lt;/code&gt; （整数のタプル、サンプル軸を含まない）を使用します。出力形状：入力と同じ形状。参照：</target>
        </trans-unit>
        <trans-unit id="aaaf155b1421e874b8972d3235373826e11ba63d" translate="yes" xml:space="preserve">
          <source>Input shape: a list of string or int tensors or sparse tensors of shape &lt;code&gt;[batch_size, d1, ..., dm]&lt;/code&gt;</source>
          <target state="translated">入力形状：形状の文字列または整数テンソルまたはスパーステンソルのリスト &lt;code&gt;[batch_size, d1, ..., dm]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="924a9478691303fe05bafb1fc1238c07cb44c3db" translate="yes" xml:space="preserve">
          <source>Input tensor or list of input tensors.</source>
          <target state="translated">入力テンソルまたは入力テンソルのリスト。</target>
        </trans-unit>
        <trans-unit id="d26122fe46ad936a639db8a98f7a7d831a07c743" translate="yes" xml:space="preserve">
          <source>Input tensor or variable.</source>
          <target state="translated">入力テンソルまたは変数。</target>
        </trans-unit>
        <trans-unit id="9dba3b7a1a9cdef336ee977c7f2a6df0eea23b06" translate="yes" xml:space="preserve">
          <source>Input tensor to annotate.</source>
          <target state="translated">アノテーションするテンソルを入力します。</target>
        </trans-unit>
        <trans-unit id="411356d9f9c5901fb808283dc5ce56a97f9f81c2" translate="yes" xml:space="preserve">
          <source>Input tensor to crop.</source>
          <target state="translated">クロップするテンソルを入力します。</target>
        </trans-unit>
        <trans-unit id="aa6f81b7596b400c309065016d4f825b54519070" translate="yes" xml:space="preserve">
          <source>Input tensor, or list/tuple of input tensors.</source>
          <target state="translated">入力テンソル、または入力テンソルのリスト/タプル。</target>
        </trans-unit>
        <trans-unit id="36402c7384044ec8d1afe082a66fd774f30b26a5" translate="yes" xml:space="preserve">
          <source>Input tensor.</source>
          <target state="translated">入力テンソル。</target>
        </trans-unit>
        <trans-unit id="83473fd83a8c624217c365881f9195c2e91b4bf5" translate="yes" xml:space="preserve">
          <source>Input text (string).</source>
          <target state="translated">テキスト(文字列)を入力します。</target>
        </trans-unit>
        <trans-unit id="bb11121330c8874b43826ca8a1da1c1d3c194fb5" translate="yes" xml:space="preserve">
          <source>Inputs and outputs of the computation must be at least rank-1 Tensors.</source>
          <target state="translated">計算の入出力は、少なくともランク1テンソルでなければなりません。</target>
        </trans-unit>
        <trans-unit id="e7fe0dcaa3f3ef9a8f095388d2bf7868e5702be9" translate="yes" xml:space="preserve">
          <source>Inputs are &lt;code&gt;query&lt;/code&gt; tensor of shape &lt;code&gt;[batch_size, Tq, dim]&lt;/code&gt;, &lt;code&gt;value&lt;/code&gt; tensor of shape &lt;code&gt;[batch_size, Tv, dim]&lt;/code&gt; and &lt;code&gt;key&lt;/code&gt; tensor of shape &lt;code&gt;[batch_size, Tv, dim]&lt;/code&gt;. The calculation follows the steps:</source>
          <target state="translated">入力は、形状の &lt;code&gt;query&lt;/code&gt; テンソル &lt;code&gt;[batch_size, Tq, dim]&lt;/code&gt; 、形状の &lt;code&gt;value&lt;/code&gt; テンソル &lt;code&gt;[batch_size, Tv, dim]&lt;/code&gt; 、形状の &lt;code&gt;key&lt;/code&gt; テンソル &lt;code&gt;[batch_size, Tv, dim]&lt;/code&gt; です。計算は次の手順に従います。</target>
        </trans-unit>
        <trans-unit id="1c0e56ccaddb0c8890b27ec9abecd06903924122" translate="yes" xml:space="preserve">
          <source>Inputs are not masked or strictly right padded.</source>
          <target state="translated">入力はマスクされていませんし、厳密には右パディングされていません。</target>
        </trans-unit>
        <trans-unit id="b70811df5293dc1d88b0b4d8c3745fc0c3e2e349" translate="yes" xml:space="preserve">
          <source>Inputs are tensor and if the tensors contains more than one element, an element-wise logical XOR is computed.</source>
          <target state="translated">入力はテンソルであり、テンソルに複数の要素が含まれる場合、要素ごとの論理的なXORが計算されます。</target>
        </trans-unit>
        <trans-unit id="23d064e3d9a6fa10428c435dfb012de3079138c9" translate="yes" xml:space="preserve">
          <source>Inputs are the logits, not probabilities.</source>
          <target state="translated">入力はロジットであって、確率ではない。</target>
        </trans-unit>
        <trans-unit id="137804bd98ee5ed803aad41b3b2bb45555e950ca" translate="yes" xml:space="preserve">
          <source>Inputs must be a &lt;code&gt;CategoricalColumn&lt;/code&gt; created by any of the &lt;code&gt;categorical_column_*&lt;/code&gt; function. Here is an example of using &lt;code&gt;embedding_column&lt;/code&gt; with &lt;code&gt;DNNClassifier&lt;/code&gt;:</source>
          <target state="translated">入力は、 &lt;code&gt;categorical_column_*&lt;/code&gt; 関数のいずれかによって作成された &lt;code&gt;CategoricalColumn&lt;/code&gt; である必要があります。次に、 &lt;code&gt;DNNClassifier&lt;/code&gt; で &lt;code&gt;embedding_column&lt;/code&gt; を使用する例を示します。</target>
        </trans-unit>
        <trans-unit id="78623993ab6e74c3ee21bef7821841777f171f6b" translate="yes" xml:space="preserve">
          <source>Inputs must be a list of categorical columns created by any of the &lt;code&gt;categorical_column_*&lt;/code&gt; function. They must all be of the same type and have the same arguments except &lt;code&gt;key&lt;/code&gt;. E.g. they can be categorical_column_with_vocabulary_file with the same vocabulary_file. Some or all columns could also be weighted_categorical_column.</source>
          <target state="translated">入力は、 &lt;code&gt;categorical_column_*&lt;/code&gt; 関数のいずれかによって作成されたカテゴリー列のリストでなければなりません。それらはすべて同じ型であり、 &lt;code&gt;key&lt;/code&gt; を除いて同じ引数を持つ必要があります。たとえば、同じvocabulary_fileを持つcategorical_column_with_vocabulary_fileにすることができます。一部またはすべての列をweighted_categorical_columnにすることもできます。</target>
        </trans-unit>
        <trans-unit id="a1efe96c91fcd8bed8fa1d7ca844191407c209f4" translate="yes" xml:space="preserve">
          <source>Inputs must be of same size and shape.</source>
          <target state="translated">入力は同じサイズと形状でなければなりません。</target>
        </trans-unit>
        <trans-unit id="5cc1e2618a909f1924de892464f8fe683c626f63" translate="yes" xml:space="preserve">
          <source>Inputs of the SignatureDef defined as a proto map of string to tensor info.</source>
          <target state="translated">SignatureDefの入力は、文字列からテンソル情報へのプロトピックマップとして定義されています。</target>
        </trans-unit>
        <trans-unit id="0a13494d1fa9208f2eba7e981b495a987da5cd5a" translate="yes" xml:space="preserve">
          <source>Inputs, if use masking, are strictly right-padded.</source>
          <target state="translated">入力は、マスキングを使用している場合、厳密に右パッドされます。</target>
        </trans-unit>
        <trans-unit id="023ec1ebccdae7f83573df2912447d135544d80b" translate="yes" xml:space="preserve">
          <source>Inputs/Outputs mapping for children hints.</source>
          <target state="translated">子供のヒントのための入出力マッピング。</target>
        </trans-unit>
        <trans-unit id="0f102a3cf4073e5d93951de1381197dd8a18010c" translate="yes" xml:space="preserve">
          <source>Insert a &lt;code&gt;Masking&lt;/code&gt; layer with &lt;code&gt;mask_value=0.&lt;/code&gt; before the LSTM layer:</source>
          <target state="translated">&lt;code&gt;mask_value=0.&lt;/code&gt; &lt;code&gt;Masking&lt;/code&gt; レイヤーを挿入します。LSTMレイヤーの前：</target>
        </trans-unit>
        <trans-unit id="bfe1c55114da692160a20eed9799d0591600c538" translate="yes" xml:space="preserve">
          <source>Insert an item at a given position.</source>
          <target state="translated">指定した位置にアイテムを挿入します。</target>
        </trans-unit>
        <trans-unit id="4289ec1fa78fdfefe11042b9998b439fa9c81395" translate="yes" xml:space="preserve">
          <source>Insert name scopes that name ops according to context, like the function they were defined in.</source>
          <target state="translated">関数で定義されたように、コンテキストに応じて操作に名前を付ける名前スコープを挿入します。</target>
        </trans-unit>
        <trans-unit id="3070ae425dbe8df14be97a01e4f83025dd75be12" translate="yes" xml:space="preserve">
          <source>Insert of control dependencies in the generated code.</source>
          <target state="translated">生成されたコードにコントロールの依存関係を挿入します。</target>
        </trans-unit>
        <trans-unit id="a1f87207530b85579b12d1c5e52ad8a13807845e" translate="yes" xml:space="preserve">
          <source>Inserts a dimension of 1 into a tensor's shape.</source>
          <target state="translated">テンソルの形状に1の次元を挿入します。</target>
        </trans-unit>
        <trans-unit id="29b723ab1ad43456db942b0b8bd7c8d59bddf967" translate="yes" xml:space="preserve">
          <source>Inserts a dimension of 1 into a tensor's shape. (deprecated arguments)</source>
          <target state="translated">テンソルの形状に1の次元を挿入します。(非推奨引数)</target>
        </trans-unit>
        <trans-unit id="1d269ecf38e8f23806fcb544f73ec6c7d82059d0" translate="yes" xml:space="preserve">
          <source>Inserts a placeholder for a sparse tensor that will be always fed.</source>
          <target state="translated">常に供給される疎なテンソルのプレースホルダを挿入します。</target>
        </trans-unit>
        <trans-unit id="2f562655f77a6d82ddf22ccda7140bb2b957c8a1" translate="yes" xml:space="preserve">
          <source>Inserts a placeholder for a tensor that will be always fed.</source>
          <target state="translated">常に供給されるテンソルのプレースホルダを挿入します。</target>
        </trans-unit>
        <trans-unit id="c3bbe50b7a8e09f46aa5f5b6f4c704a039abb44e" translate="yes" xml:space="preserve">
          <source>Inside &lt;a href=&quot;../../function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt; after &lt;a href=&quot;../../config/experimental_run_functions_eagerly&quot;&gt;&lt;code&gt;tf.config.experimental_run_functions_eagerly(True)&lt;/code&gt;&lt;/a&gt; is called:</source>
          <target state="translated">インサイド&lt;a href=&quot;../../function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt;後&lt;a href=&quot;../../config/experimental_run_functions_eagerly&quot;&gt; &lt;code&gt;tf.config.experimental_run_functions_eagerly(True)&lt;/code&gt; &lt;/a&gt;呼び出されます。</target>
        </trans-unit>
        <trans-unit id="88242efed2a90369bd7739cd77fd6bb5c625b08a" translate="yes" xml:space="preserve">
          <source>Inside &lt;a href=&quot;../../function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt; after &lt;a href=&quot;../../config/run_functions_eagerly&quot;&gt;&lt;code&gt;tf.config.run_functions_eagerly(True)&lt;/code&gt;&lt;/a&gt; is called:</source>
          <target state="translated">インサイド&lt;a href=&quot;../../function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt;後&lt;a href=&quot;../../config/run_functions_eagerly&quot;&gt; &lt;code&gt;tf.config.run_functions_eagerly(True)&lt;/code&gt; &lt;/a&gt;呼び出されます。</target>
        </trans-unit>
        <trans-unit id="ac98a58dead80c80e907d0722a4a50459411da6d" translate="yes" xml:space="preserve">
          <source>Inside &lt;a href=&quot;../../function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;../../function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt;内：</target>
        </trans-unit>
        <trans-unit id="7a059d78a854aeca57acd67a3369e631a93c4c21" translate="yes" xml:space="preserve">
          <source>Inside &lt;a href=&quot;function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt; after</source>
          <target state="translated">後の&lt;a href=&quot;function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt;内</target>
        </trans-unit>
        <trans-unit id="ec60a47239e5418aff75738619bde1b49257788d" translate="yes" xml:space="preserve">
          <source>Inside &lt;a href=&quot;function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt; after &lt;a href=&quot;config/run_functions_eagerly&quot;&gt;&lt;code&gt;tf.config.run_functions_eagerly(True)&lt;/code&gt;&lt;/a&gt; is called:</source>
          <target state="translated">インサイド&lt;a href=&quot;function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt;後&lt;a href=&quot;config/run_functions_eagerly&quot;&gt; &lt;code&gt;tf.config.run_functions_eagerly(True)&lt;/code&gt; &lt;/a&gt;呼び出されます。</target>
        </trans-unit>
        <trans-unit id="f3a75c2b38172e2164e085145cea76fd33af363c" translate="yes" xml:space="preserve">
          <source>Inside &lt;a href=&quot;function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt;内：</target>
        </trans-unit>
        <trans-unit id="ec79e0ca854d631053514bae0e263ceb9c0d6303" translate="yes" xml:space="preserve">
          <source>Inside a &lt;a href=&quot;function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;graph&quot;&gt;&lt;code&gt;v1.Graph&lt;/code&gt;&lt;/a&gt; context it checks both the buildtime and runtime shapes. This is stricter than &lt;a href=&quot;tensor#set_shape&quot;&gt;&lt;code&gt;tf.Tensor.set_shape&lt;/code&gt;&lt;/a&gt; which only checks the buildtime shape.</source>
          <target state="translated">&lt;a href=&quot;function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;graph&quot;&gt; &lt;code&gt;v1.Graph&lt;/code&gt; &lt;/a&gt;コンテキスト内で、ビルド時とランタイムの両方の形状をチェックします。これは、より厳しい&lt;a href=&quot;tensor#set_shape&quot;&gt; &lt;code&gt;tf.Tensor.set_shape&lt;/code&gt; &lt;/a&gt;のみビルド時の形状を確認します。</target>
        </trans-unit>
        <trans-unit id="82afdb80382fb2fc992e989613b663643ddaa8e4" translate="yes" xml:space="preserve">
          <source>Inside a &lt;a href=&quot;function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt;, if the scope name already exists, the name will be made unique by appending &lt;code&gt;_n&lt;/code&gt;. For example, calling &lt;code&gt;my_op&lt;/code&gt; the second time will generate &lt;code&gt;MyOp_1/a&lt;/code&gt;, etc.</source>
          <target state="translated">&lt;a href=&quot;function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt;内で、スコープ名がすでに存在する場合は、 &lt;code&gt;_n&lt;/code&gt; を追加することで名前が一意になります。たとえば、 &lt;code&gt;my_op&lt;/code&gt; を2回呼び出すと、 &lt;code&gt;MyOp_1/a&lt;/code&gt; などが生成されます。</target>
        </trans-unit>
        <trans-unit id="0e2cab75c40098f2631f31b554fa63d8c8ec4f9a" translate="yes" xml:space="preserve">
          <source>Inside a &lt;code&gt;with strategy.scope():&lt;/code&gt; code block, this thread will use a variable creator set by &lt;code&gt;strategy&lt;/code&gt;, and will enter its &quot;cross-replica context&quot;.</source>
          <target state="translated">&lt;code&gt;with strategy.scope():&lt;/code&gt; コードブロックの内部では、このスレッドは &lt;code&gt;strategy&lt;/code&gt; によって設定された変数クリエーターを使用し、その「クロスレプリカコンテキスト」に入ります。</target>
        </trans-unit>
        <trans-unit id="2d5243ea93579bbab1a7b795e88dfd8e5238e331" translate="yes" xml:space="preserve">
          <source>Inside a transformation function for &lt;code&gt;tf.dataset&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;tf.dataset&lt;/code&gt; の変換関数の内部：</target>
        </trans-unit>
        <trans-unit id="d4b06861e26c80e2e1dae15e440b54ad617bc0bb" translate="yes" xml:space="preserve">
          <source>Inspect per replica values:</source>
          <target state="translated">レプリカ値ごとに検査します。</target>
        </trans-unit>
        <trans-unit id="acc357acb9630e774fef71bd6f4e9fe4746202ac" translate="yes" xml:space="preserve">
          <source>Inspect the &lt;a href=&quot;../typespec&quot;&gt;&lt;code&gt;tf.TypeSpec&lt;/code&gt;&lt;/a&gt; of the data generated by &lt;code&gt;DistributedDataset&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DistributedDataset&lt;/code&gt; によって生成されたデータの&lt;a href=&quot;../typespec&quot;&gt; &lt;code&gt;tf.TypeSpec&lt;/code&gt; を調べ&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="6a53dd6e8ab19c662119f50b518c24c49162ee4b" translate="yes" xml:space="preserve">
          <source>Instance of &lt;a href=&quot;../model&quot;&gt;&lt;code&gt;keras.models.Model&lt;/code&gt;&lt;/a&gt;. Reference of the model being trained.</source>
          <target state="translated">&lt;a href=&quot;../model&quot;&gt; &lt;code&gt;keras.models.Model&lt;/code&gt; の&lt;/a&gt;インスタンス。トレーニング中のモデルの参照。</target>
        </trans-unit>
        <trans-unit id="7a130b5a080aaac67de31b1fa82cb3dfac9a1069" translate="yes" xml:space="preserve">
          <source>Instance of &lt;code&gt;ImageDataGenerator&lt;/code&gt; to use for random transformations and normalization.</source>
          <target state="translated">ランダムな変換と正規化に使用する &lt;code&gt;ImageDataGenerator&lt;/code&gt; のインスタンス。</target>
        </trans-unit>
        <trans-unit id="b0cf2092da978e7620ab63b4e192bd7a04ad4b4b" translate="yes" xml:space="preserve">
          <source>Instance of &lt;code&gt;Model&lt;/code&gt; (could be a functional model or a Sequential model).</source>
          <target state="translated">&lt;code&gt;Model&lt;/code&gt; インスタンス（機能モデルまたはシーケンシャルモデルの場合があります）。</target>
        </trans-unit>
        <trans-unit id="33b43b03a6052c1e3c68139c3abf477e110080e9" translate="yes" xml:space="preserve">
          <source>Instance of &lt;code&gt;ReparameterizationType&lt;/code&gt;. If &lt;a href=&quot;https://www.tensorflow.org/probability/api_docs/python/tfp/distributions#FULLY_REPARAMETERIZED&quot;&gt;&lt;code&gt;distributions.FULLY_REPARAMETERIZED&lt;/code&gt;&lt;/a&gt;, this &lt;code&gt;Distribution&lt;/code&gt; can be reparameterized in terms of some standard distribution with a function whose Jacobian is constant for the support of the standard distribution. If &lt;a href=&quot;https://www.tensorflow.org/probability/api_docs/python/tfp/distributions#NOT_REPARAMETERIZED&quot;&gt;&lt;code&gt;distributions.NOT_REPARAMETERIZED&lt;/code&gt;&lt;/a&gt;, then no such reparameterization is available.</source>
          <target state="translated">&lt;code&gt;ReparameterizationType&lt;/code&gt; のインスタンス。&lt;a href=&quot;https://www.tensorflow.org/probability/api_docs/python/tfp/distributions#FULLY_REPARAMETERIZED&quot;&gt; &lt;code&gt;distributions.FULLY_REPARAMETERIZED&lt;/code&gt; の&lt;/a&gt;場合、この &lt;code&gt;Distribution&lt;/code&gt; は、標準分布をサポートするためにヤコビアンが定数である関数を使用して、いくつかの標準分布に関して再パラメーター化できます。&lt;a href=&quot;https://www.tensorflow.org/probability/api_docs/python/tfp/distributions#NOT_REPARAMETERIZED&quot;&gt; &lt;code&gt;distributions.NOT_REPARAMETERIZED&lt;/code&gt; の&lt;/a&gt;場合、そのような再パラメーター化は使用できません。</target>
        </trans-unit>
        <trans-unit id="a571b362fde52d2a6b69563361ddf991b6c92df5" translate="yes" xml:space="preserve">
          <source>Instance of &lt;code&gt;TensorShape&lt;/code&gt;, or list of instances of &lt;code&gt;TensorShape&lt;/code&gt; if the layer expects a list of inputs (one instance per input).</source>
          <target state="translated">&lt;code&gt;TensorShape&lt;/code&gt; のインスタンス、またはレイヤーが入力のリスト（入力ごとに1つのインスタンス）を予期している場合は &lt;code&gt;TensorShape&lt;/code&gt; のインスタンスのリスト。</target>
        </trans-unit>
        <trans-unit id="52a058c45032e7de16ba71c01fab3738d287a42a" translate="yes" xml:space="preserve">
          <source>Instances of &lt;code&gt;NumpyWrapper&lt;/code&gt; are checkpointable objects, and will be saved and restored from checkpoints along with TensorFlow state like variables.</source>
          <target state="translated">&lt;code&gt;NumpyWrapper&lt;/code&gt; のインスタンスはチェックポイント可能なオブジェクトであり、変数のようなTensorFlow状態とともにチェックポイントから保存および復元されます。</target>
        </trans-unit>
        <trans-unit id="78eccaaba0fdade93205fff1e00fbadcaeaba337" translate="yes" xml:space="preserve">
          <source>Instances of this class represent a loss scale. Calling instances of this class returns the loss scale as a scalar float32 tensor, while method &lt;code&gt;update()&lt;/code&gt; updates the loss scale depending on the values of the gradients. Optimizers use instances of this class to scale loss and gradients.</source>
          <target state="translated">このクラスのインスタンスは、損失スケールを表します。このクラスのインスタンスを呼び出すと、損失のスケールがスカラーfloat32テンソルとして返されますが、メソッド &lt;code&gt;update()&lt;/code&gt; は、勾配の値に応じて損失スケールを更新します。オプティマイザはこのクラスのインスタンスを使用して、損失と勾配をスケーリングします。</target>
        </trans-unit>
        <trans-unit id="abc0db5b227fc3047fc2a6c06364fc3c54136965" translate="yes" xml:space="preserve">
          <source>Instances of this class represent how sampling is reparameterized.</source>
          <target state="translated">このクラスのインスタンスは、サンプリングがどのように再パラメータ化されるかを表しています。</target>
        </trans-unit>
        <trans-unit id="a0b4097742556a6fb1f2198ba723bf3c67e4062b" translate="yes" xml:space="preserve">
          <source>Instances of this dataset are also created as a result of the &lt;code&gt;hoist_random_uniform&lt;/code&gt; static optimization. Whether this optimization is performed is determined by the &lt;code&gt;experimental_optimization.hoist_random_uniform&lt;/code&gt; option of &lt;a href=&quot;../data/options&quot;&gt;&lt;code&gt;tf.data.Options&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このデータセットのインスタンスも、 &lt;code&gt;hoist_random_uniform&lt;/code&gt; 静的最適化の結果として作成されます。この最適化が実行されるかどうかは、&lt;a href=&quot;../data/options&quot;&gt; &lt;code&gt;tf.data.Options&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;experimental_optimization.hoist_random_uniform&lt;/code&gt; オプションによって決定されます。</target>
        </trans-unit>
        <trans-unit id="7e23834d9ad625b0a72d7e2f1be4a4069c499c5c" translate="yes" xml:space="preserve">
          <source>Instantiate an identity matrix and returns it.</source>
          <target state="translated">ID行列のインスタンスを作成し、それを返します。</target>
        </trans-unit>
        <trans-unit id="9adc3a521be5ffb465cee66aa19ff8ac84ae4cea" translate="yes" xml:space="preserve">
          <source>Instantiates a &lt;code&gt;LearningRateSchedule&lt;/code&gt; from its config.</source>
          <target state="translated">構成から &lt;code&gt;LearningRateSchedule&lt;/code&gt; をインスタンス化します。</target>
        </trans-unit>
        <trans-unit id="e819f31f0ce693841e6703a84bf49642d0f0646a" translate="yes" xml:space="preserve">
          <source>Instantiates a &lt;code&gt;Loss&lt;/code&gt; from its config (output of &lt;code&gt;get_config()&lt;/code&gt;).</source>
          <target state="translated">構成から &lt;code&gt;Loss&lt;/code&gt; をインスタンス化します（ &lt;code&gt;get_config()&lt;/code&gt; の出力）。</target>
        </trans-unit>
        <trans-unit id="6ba64f03d4a9f988022614425c9d39f3e4c08eec" translate="yes" xml:space="preserve">
          <source>Instantiates a Keras function.</source>
          <target state="translated">Keras関数のインスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="86be24bfd95437c4ccded5012ad87863f17418f2" translate="yes" xml:space="preserve">
          <source>Instantiates a Keras model from its config.</source>
          <target state="translated">設定からKerasモデルのインスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="bc64840a2606c1465edcdf6de298724ac46c006a" translate="yes" xml:space="preserve">
          <source>Instantiates a Mobile NASNet model in ImageNet mode.</source>
          <target state="translated">ImageNetモードでMobile NASNetモデルのインスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="18a38d91d8d2817de0090aee963f8e886b2ccdc4" translate="yes" xml:space="preserve">
          <source>Instantiates a NASNet model in ImageNet mode.</source>
          <target state="translated">ImageNetモードでNASNetモデルのインスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="e1139b10a46081f05ee7e89e2f44088cc63dc7ce" translate="yes" xml:space="preserve">
          <source>Instantiates a layer from a config dictionary.</source>
          <target state="translated">設定辞書からレイヤーのインスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="f2e8a39a6c72f1d2adbc3a7102dbfb7499d810f2" translate="yes" xml:space="preserve">
          <source>Instantiates a placeholder tensor and returns it.</source>
          <target state="translated">プレースホルダテンソルをインスタンス化して返します。</target>
        </trans-unit>
        <trans-unit id="56fcc9aa753f9745e6fd3098bb85d40d054e5bf6" translate="yes" xml:space="preserve">
          <source>Instantiates a variable and returns it.</source>
          <target state="translated">変数のインスタンスを作成し、それを返します。</target>
        </trans-unit>
        <trans-unit id="e4ee72f81497fc62ef8381301600c750a4c3bf6b" translate="yes" xml:space="preserve">
          <source>Instantiates a variable with values drawn from a normal distribution.</source>
          <target state="translated">正規分布から引き出された値を持つ変数のインスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="25c5cf039c5c919ae65a83e5f4aa30370b25a668" translate="yes" xml:space="preserve">
          <source>Instantiates a variable with values drawn from a uniform distribution.</source>
          <target state="translated">一様分布から引き出された値を持つ変数のインスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="20d6d4e9f45134915d0ed9873dfceccd0144de71" translate="yes" xml:space="preserve">
          <source>Instantiates an all-ones variable and returns it.</source>
          <target state="translated">オールワン変数のインスタンスを作成し、それを返します。</target>
        </trans-unit>
        <trans-unit id="5ddc4e890d0448de00a1911ddc70ef24681ca3b6" translate="yes" xml:space="preserve">
          <source>Instantiates an all-ones variable of the same shape as another tensor.</source>
          <target state="translated">別のテンソルと同じ形のオールワン変数のインスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="05d54627ce37da1dd958b8c24f85136425c8109f" translate="yes" xml:space="preserve">
          <source>Instantiates an all-zeros variable and returns it.</source>
          <target state="translated">オールゼロ変数のインスタンスを作成し、それを返します。</target>
        </trans-unit>
        <trans-unit id="94d5c94851b51c4270f6a95b7c0475db1f95de16" translate="yes" xml:space="preserve">
          <source>Instantiates an all-zeros variable of the same shape as another tensor.</source>
          <target state="translated">別のテンソルと同じ形状の全ゼロ変数のインスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="473a492fa8efc4ff13a257196fc8bcdbedc7a3be" translate="yes" xml:space="preserve">
          <source>Instantiates an initializer from a configuration dictionary.</source>
          <target state="translated">設定辞書からイニシャライザをインスタンス化します。</target>
        </trans-unit>
        <trans-unit id="37c35605484e0d745ddc5664f56cd31ede10bf0c" translate="yes" xml:space="preserve">
          <source>Instantiates the Densenet121 architecture.</source>
          <target state="translated">Densenet121アーキテクチャのインスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="5653e7446bf8e535b95649a14a1a4040bb848a0b" translate="yes" xml:space="preserve">
          <source>Instantiates the Densenet169 architecture.</source>
          <target state="translated">Densenet169アーキテクチャのインスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="f508e422c41ca1583ddcf82367eac1c471fd48b0" translate="yes" xml:space="preserve">
          <source>Instantiates the Densenet201 architecture.</source>
          <target state="translated">Densenet201アーキテクチャのインスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="2b9dfa1e763ba9c6ee2a8efbc3b3a17aaaf64ef6" translate="yes" xml:space="preserve">
          <source>Instantiates the EfficientNetB0 architecture.</source>
          <target state="translated">EfficientNetB0 アーキテクチャのインスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="ee114842722aaf43b1f00ba82ed047ce9ea3625c" translate="yes" xml:space="preserve">
          <source>Instantiates the EfficientNetB1 architecture.</source>
          <target state="translated">EfficientNetB1アーキテクチャのインスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="d49a42cfb87e77c9458417cc44f0470e88bd18fb" translate="yes" xml:space="preserve">
          <source>Instantiates the EfficientNetB2 architecture.</source>
          <target state="translated">EfficientNetB2アーキテクチャのインスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="ec05ff7ddf6d159bc29b6ab06f9919b453979907" translate="yes" xml:space="preserve">
          <source>Instantiates the EfficientNetB3 architecture.</source>
          <target state="translated">EfficientNetB3 アーキテクチャのインスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="e274afe59e85bd28123c509e293ddef256fc47e7" translate="yes" xml:space="preserve">
          <source>Instantiates the EfficientNetB4 architecture.</source>
          <target state="translated">EfficientNetB4 アーキテクチャのインスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="670cd5b074f325a33ec1e7cb64c2835e0650303e" translate="yes" xml:space="preserve">
          <source>Instantiates the EfficientNetB5 architecture.</source>
          <target state="translated">EfficientNetB5 アーキテクチャのインスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="6190fec6179c6ac2542069c4aa38c7426259e5fb" translate="yes" xml:space="preserve">
          <source>Instantiates the EfficientNetB6 architecture.</source>
          <target state="translated">EfficientNetB6 アーキテクチャのインスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="7d01c143ca90bb8d3f8102a2cb478d8ce8006779" translate="yes" xml:space="preserve">
          <source>Instantiates the EfficientNetB7 architecture.</source>
          <target state="translated">EfficientNetB7 アーキテクチャのインスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="75adf7e363222d5982bb56012c80c73ff05f830f" translate="yes" xml:space="preserve">
          <source>Instantiates the Inception v3 architecture.</source>
          <target state="translated">Inception v3 アーキテクチャのインスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="8d78bcfb25bd570f535140464bdf38a98cccde81" translate="yes" xml:space="preserve">
          <source>Instantiates the Inception-ResNet v2 architecture.</source>
          <target state="translated">Inception-ResNet v2 アーキテクチャのインスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="70b89338d0787e01e1e52b18673f6ae4ee703c4d" translate="yes" xml:space="preserve">
          <source>Instantiates the MobileNetV2 architecture.</source>
          <target state="translated">MobileNetV2 アーキテクチャのインスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="531578a4574367ea2e522f8daeb216a6ce63c736" translate="yes" xml:space="preserve">
          <source>Instantiates the ResNet101 architecture.</source>
          <target state="translated">ResNet101 アーキテクチャのインスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="125861983e29828c299a903f43d798714d2a4065" translate="yes" xml:space="preserve">
          <source>Instantiates the ResNet101V2 architecture.</source>
          <target state="translated">ResNet101V2 アーキテクチャのインスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="bb8086b3c4c214259579bd6fac585cf9962ba4b8" translate="yes" xml:space="preserve">
          <source>Instantiates the ResNet152 architecture.</source>
          <target state="translated">ResNet152 アーキテクチャのインスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="64e500067287dc9f9611a296525538c5abcd7cc2" translate="yes" xml:space="preserve">
          <source>Instantiates the ResNet152V2 architecture.</source>
          <target state="translated">ResNet152V2 アーキテクチャのインスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="27fa3302c8b3ab65c7c2bc821f6a3c6a294198d4" translate="yes" xml:space="preserve">
          <source>Instantiates the ResNet50V2 architecture.</source>
          <target state="translated">ResNet50V2 アーキテクチャのインスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="a0ef306da9dababdc7dcdebe674cef89859a3705" translate="yes" xml:space="preserve">
          <source>Instead of a string enum, prefer &lt;code&gt;DEFINE_enum_class&lt;/code&gt;, which allows defining enums from an &lt;code&gt;enum.Enum&lt;/code&gt; class.</source>
          <target state="translated">文字列列挙型の代わりに、 &lt;code&gt;DEFINE_enum_class&lt;/code&gt; を使用してください。これにより、 &lt;code&gt;enum.Enum&lt;/code&gt; クラスから列挙型を定義できます。</target>
        </trans-unit>
        <trans-unit id="6ba67eec9e92df05acdf46af85244d2e3cb47ac2" translate="yes" xml:space="preserve">
          <source>Instead of this:</source>
          <target state="translated">これの代わりに</target>
        </trans-unit>
        <trans-unit id="512626e184ef04fe486402828c5c025627c4c4b2" translate="yes" xml:space="preserve">
          <source>Instead of working with &lt;code&gt;Tensor&lt;/code&gt; objects, most operations work with &lt;code&gt;TensorArray&lt;/code&gt; objects directly.</source>
          <target state="translated">ほとんどの操作は、 &lt;code&gt;Tensor&lt;/code&gt; オブジェクトを操作する代わりに、 &lt;code&gt;TensorArray&lt;/code&gt; オブジェクトを直接操作します。</target>
        </trans-unit>
        <trans-unit id="5af1b9159af411b6d7c635a164a0a3cae7782b83" translate="yes" xml:space="preserve">
          <source>Instead, use TensorFlow collections like &lt;a href=&quot;tensorarray&quot;&gt;&lt;code&gt;tf.TensorArray&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">代わりに、tf.TensorArrayのような&lt;a href=&quot;tensorarray&quot;&gt; &lt;code&gt;tf.TensorArray&lt;/code&gt; &lt;/a&gt;コレクションを使用してください。</target>
        </trans-unit>
        <trans-unit id="986b3aa1fa9c8a53c78f4ac79b77467a9d988af6" translate="yes" xml:space="preserve">
          <source>Instead, we can use &lt;code&gt;tensor.experimental_ref()&lt;/code&gt;.</source>
          <target state="translated">代わりに、 &lt;code&gt;tensor.experimental_ref()&lt;/code&gt; を使用できます。</target>
        </trans-unit>
        <trans-unit id="6172bfc8c17542f600fe289d1b62d9a4b7a9359b" translate="yes" xml:space="preserve">
          <source>Instead, we can use &lt;code&gt;tensor.ref()&lt;/code&gt;.</source>
          <target state="translated">代わりに、 &lt;code&gt;tensor.ref()&lt;/code&gt; を使用できます。</target>
        </trans-unit>
        <trans-unit id="c4f88879032bd2f2457bad138fb5059212807b2a" translate="yes" xml:space="preserve">
          <source>Instead, we can use &lt;code&gt;variable.experimental_ref()&lt;/code&gt;.</source>
          <target state="translated">代わりに、 &lt;code&gt;variable.experimental_ref()&lt;/code&gt; を使用できます。</target>
        </trans-unit>
        <trans-unit id="e3ce0ddf9c926093dd6fb8689fc2f4b12d054544" translate="yes" xml:space="preserve">
          <source>Instead, we can use &lt;code&gt;variable.ref()&lt;/code&gt;.</source>
          <target state="translated">代わりに、 &lt;code&gt;variable.ref()&lt;/code&gt; を使用できます。</target>
        </trans-unit>
        <trans-unit id="865bac3875319b333427170b8f58a76d52bdfa96" translate="yes" xml:space="preserve">
          <source>Instead, wrap nested &lt;code&gt;@tf.custom_gradients&lt;/code&gt; in another function:</source>
          <target state="translated">代わりに、ネストされた &lt;code&gt;@tf.custom_gradients&lt;/code&gt; を別の関数でラップします。</target>
        </trans-unit>
        <trans-unit id="48fdffce381680dc01bd7387e5ff47c9e92e8b06" translate="yes" xml:space="preserve">
          <source>Int (default: 32).</source>
          <target state="translated">Int (デフォルト:32)。</target>
        </trans-unit>
        <trans-unit id="9aaccd55781d8df00a39c7af94d3d28b37361602" translate="yes" xml:space="preserve">
          <source>Int (default: None).</source>
          <target state="translated">Int (既定値:None)。</target>
        </trans-unit>
        <trans-unit id="aaec79069c9826c094fc28bfba022f7ba15126dc" translate="yes" xml:space="preserve">
          <source>Int or tuple of int (length 2) How many units should be trimmed off at the beginning and end of the cropping dimension (axis 1). If a single int is provided, the same value will be used for both.</source>
          <target state="translated">Int または int のタプル (長さ 2)ク ロ ッ ピ ン グ寸法 (軸 1)の始点 と 終点で、 何個の単位を切り取 り 除 く 必要があ る か。1つのintが与えられている場合は、両方とも同じ値が使用されます。</target>
        </trans-unit>
        <trans-unit id="e182a1f01e97f35d5924b841ddd0d35ebe2837ad" translate="yes" xml:space="preserve">
          <source>Int specifying the channels axis. &lt;code&gt;axis=-1&lt;/code&gt; corresponds to data format &lt;code&gt;channels_last', and&lt;/code&gt;axis=1&lt;code&gt;corresponds to data format&lt;/code&gt;channels_first`.</source>
          <target state="translated">チャネル軸を指定するInt。 &lt;code&gt;axis=-1&lt;/code&gt; はデータ形式 &lt;code&gt;channels_last', and&lt;/code&gt; &lt;code&gt;corresponds to data format&lt;/code&gt; 、 axis = 1はデータ形式channels_first`に対応します。</target>
        </trans-unit>
        <trans-unit id="23c1fe0f3b374162b4a2ca48b5634cc5e178bbe3" translate="yes" xml:space="preserve">
          <source>Int, how many dropout mask will be generated. It is useful for cell that has internal weights fused together.</source>
          <target state="translated">Int,ドロップアウトマスクを何個生成するかを指定します。内部で重みが融合しているセルに便利です。</target>
        </trans-unit>
        <trans-unit id="91567b0bdb3e9d727777ac8dfb086e5450943279" translate="yes" xml:space="preserve">
          <source>Int, or tuple of 2 integers. The upsampling factors for rows and columns.</source>
          <target state="translated">Int、または2つの整数のタプル。行と列のアップサンプリング係数.</target>
        </trans-unit>
        <trans-unit id="58d4b52ccd5a5944ba036967e1e0013e3a712e87" translate="yes" xml:space="preserve">
          <source>Int, or tuple of 2 ints, or tuple of 2 tuples of 2 ints.</source>
          <target state="translated">Int、または2つのイントのタプル、または2つのイントのタプルのタプル。</target>
        </trans-unit>
        <trans-unit id="1094de6d5b113921eb5a29974615186e064dad7a" translate="yes" xml:space="preserve">
          <source>Int, or tuple of 3 integers. The upsampling factors for dim1, dim2 and dim3.</source>
          <target state="translated">Int、または3つの整数のタプル。dim1、dim2、およびdim3のアップサンプリング係数。</target>
        </trans-unit>
        <trans-unit id="605a79b8c702d3c89a259892042db0a515f2131e" translate="yes" xml:space="preserve">
          <source>Int, or tuple of 3 ints, or tuple of 3 tuples of 2 ints.</source>
          <target state="translated">Int、または3つのイントのタプル、または2つのイントの3つのタプルのタプル。</target>
        </trans-unit>
        <trans-unit id="7c26a9027902710fd5c332e37e53db69471e1a23" translate="yes" xml:space="preserve">
          <source>Int, or tuple of int (length 2), or dictionary.</source>
          <target state="translated">Int、または int (長さ 2)のタプル、または辞書。</target>
        </trans-unit>
        <trans-unit id="ce684fb120f5dbcc5717f1102bb3deb9fd23c797" translate="yes" xml:space="preserve">
          <source>Int. Degree range for random rotations.</source>
          <target state="translated">Int.ランダム回転の度数範囲。</target>
        </trans-unit>
        <trans-unit id="33b74cc7edd585738b5f3ce8b9218040b2725b64" translate="yes" xml:space="preserve">
          <source>Int. Do not re-evaluate unless the last evaluation was started at least this many seconds ago. Of course, evaluation does not occur if no new checkpoints are available, hence, this is the minimum.</source>
          <target state="translated">勘違いしないでください。少なくともこれだけの秒数前に最後の評価が開始されていない限り、再評価はしないでください。もちろん、新しいチェックポイントがない場合は評価は発生しないので、これが最小値となります。</target>
        </trans-unit>
        <trans-unit id="e678a94768fbb08f3be3daec9e20719ff102cce6" translate="yes" xml:space="preserve">
          <source>Int. Positive number of steps for which to evaluate model. If &lt;code&gt;None&lt;/code&gt;, evaluates until &lt;code&gt;input_fn&lt;/code&gt; raises an end-of-input exception. See &lt;a href=&quot;../compat/v1/estimator/estimator#evaluate&quot;&gt;&lt;code&gt;Estimator.evaluate&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">Int。モデルを評価するための正のステップ数。 &lt;code&gt;None&lt;/code&gt; の場合、 &lt;code&gt;input_fn&lt;/code&gt; が入力の終わりの例外を発生させるまで評価します。詳細については、&lt;a href=&quot;../compat/v1/estimator/estimator#evaluate&quot;&gt; &lt;code&gt;Estimator.evaluate&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="b68a61eb5205896629486296aef43add0c23c824" translate="yes" xml:space="preserve">
          <source>Int. Positive number of total steps for which to train model. If &lt;code&gt;None&lt;/code&gt;, train forever. The training &lt;code&gt;input_fn&lt;/code&gt; is not expected to generate &lt;code&gt;OutOfRangeError&lt;/code&gt; or &lt;code&gt;StopIteration&lt;/code&gt; exceptions. See the &lt;code&gt;train_and_evaluate&lt;/code&gt; stop condition section for details.</source>
          <target state="translated">Int。モデルをトレーニングするための正の合計ステップ数。 &lt;code&gt;None&lt;/code&gt; 場合は、永久にトレーニングします。トレーニング &lt;code&gt;input_fn&lt;/code&gt; は、 &lt;code&gt;OutOfRangeError&lt;/code&gt; または &lt;code&gt;StopIteration&lt;/code&gt; 例外を生成することは期待されていません。詳細については、 &lt;code&gt;train_and_evaluate&lt;/code&gt; の停止条件のセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="128d22b45ec9bf45bb8958a64657b9ae9b3016e7" translate="yes" xml:space="preserve">
          <source>Int. Start evaluating after waiting for this many seconds.</source>
          <target state="translated">突入します。これだけ待ってから評価を開始します。</target>
        </trans-unit>
        <trans-unit id="c893667a4725d4728d8955120def8bd0caef8554" translate="yes" xml:space="preserve">
          <source>Int. global step this summary is associated with. If &lt;code&gt;None&lt;/code&gt;, it will try to fetch the current step.</source>
          <target state="translated">Int。この要約が関連付けられているグローバルステップ。 &lt;code&gt;None&lt;/code&gt; の場合、現在のステップをフェッチしようとします。</target>
        </trans-unit>
        <trans-unit id="c2f1b9c838e3bdee9d4226dd5a70ef1f7d198e1a" translate="yes" xml:space="preserve">
          <source>Integer &amp;gt;= 2, number of on GPUs on which to create model replicas.</source>
          <target state="translated">整数&amp;gt; = 2、モデルレプリカを作成するGPU上の数。</target>
        </trans-unit>
        <trans-unit id="dc5a90a943564f7a628a84e21312bf2ef63b9877" translate="yes" xml:space="preserve">
          <source>Integer (scalar), number of axes.</source>
          <target state="translated">整数(スカラー)、軸数。</target>
        </trans-unit>
        <trans-unit id="632b435479a4f941ea8cb031b6434f5cf0246f4a" translate="yes" xml:space="preserve">
          <source>Integer &lt;code&gt;Tensor&lt;/code&gt; with shape [D1, ... DN, k] where N &amp;gt;= 1. Commonly, N=1 and predictions has shape [batch size, k]. The final dimension contains the top &lt;code&gt;k&lt;/code&gt; predicted class indices. [D1, ... DN] must match &lt;code&gt;labels&lt;/code&gt;.</source>
          <target state="translated">形状[D1、... DN、k]の整数 &lt;code&gt;Tensor&lt;/code&gt; 。ここでN&amp;gt; = 1です。通常、N = 1であり、予測の形状は[バッチサイズ、k]です。最終次元には、上位 &lt;code&gt;k&lt;/code&gt; 個の予測クラスインデックスが含まれます。[D1、... DN]は &lt;code&gt;labels&lt;/code&gt; 一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="ba10e8d77de8d85dc8f7ffede369439ca46e1793" translate="yes" xml:space="preserve">
          <source>Integer class ID for which we want binary metrics. This should be in range [0, num_classes), where num_classes is the last dimension of &lt;code&gt;predictions&lt;/code&gt;. If class_id is outside this range, the method returns NAN.</source>
          <target state="translated">バイナリメトリックが必要な整数クラスID。これは範囲[0、num_classes）にある必要があります。ここで、num_classesは &lt;code&gt;predictions&lt;/code&gt; 最後の次元です。class_idがこの範囲外の場合、メソッドはNANを返します。</target>
        </trans-unit>
        <trans-unit id="e7584ef68ba028e33c608eba25f0800f58fd323d" translate="yes" xml:space="preserve">
          <source>Integer class ID for which we want binary metrics. This should be in range [0, num_classes], where num_classes is the last dimension of &lt;code&gt;predictions&lt;/code&gt;. If &lt;code&gt;class_id&lt;/code&gt; is outside this range, the method returns NAN.</source>
          <target state="translated">バイナリメトリックが必要な整数クラスID。これは範囲[0、num_classes]内にある必要があります。ここで、num_classesは &lt;code&gt;predictions&lt;/code&gt; 最後の次元です。 &lt;code&gt;class_id&lt;/code&gt; がこの範囲外の場合、メソッドはNANを返します。</target>
        </trans-unit>
        <trans-unit id="f540c874285d721d8fcd0d3ea0c7ef0568ca56a6" translate="yes" xml:space="preserve">
          <source>Integer dtype to use.</source>
          <target state="translated">使用する整数型のdtypeです。</target>
        </trans-unit>
        <trans-unit id="47a5d193b7855cdee378a1f1325316aa3d36fe9d" translate="yes" xml:space="preserve">
          <source>Integer ground truth values.</source>
          <target state="translated">整数の基底真理値。</target>
        </trans-unit>
        <trans-unit id="a8db02371b65068479c3c0bd540c1643d1742823" translate="yes" xml:space="preserve">
          <source>Integer hash_key that will be used by the &lt;code&gt;FingerprintCat64&lt;/code&gt; function. If not given, a default key is used.</source>
          <target state="translated">&lt;code&gt;FingerprintCat64&lt;/code&gt; 関数によって使用される整数hash_key 。指定しない場合、デフォルトのキーが使用されます。</target>
        </trans-unit>
        <trans-unit id="4fb0bee49a715975c31f963e5f0149fa6c8ed7e6" translate="yes" xml:space="preserve">
          <source>Integer hash_key that will be used by the &lt;code&gt;FingerprintCat64&lt;/code&gt; function. If not given, will use a default key.</source>
          <target state="translated">&lt;code&gt;FingerprintCat64&lt;/code&gt; 関数によって使用される整数hash_key 。指定しない場合、デフォルトのキーを使用します。</target>
        </trans-unit>
        <trans-unit id="9d56b77568017246afb3e6304f9b0829a9d58f81" translate="yes" xml:space="preserve">
          <source>Integer or &lt;code&gt;None&lt;/code&gt;. Number of samples per batch of computation. If unspecified, &lt;code&gt;batch_size&lt;/code&gt; will default to 32. Do not specify the &lt;code&gt;batch_size&lt;/code&gt; if your data is in the form of a dataset, generators, or &lt;a href=&quot;../utils/sequence&quot;&gt;&lt;code&gt;keras.utils.Sequence&lt;/code&gt;&lt;/a&gt; instances (since they generate batches).</source>
          <target state="translated">整数または &lt;code&gt;None&lt;/code&gt; 。計算のバッチごとのサンプル数。指定しない場合、 &lt;code&gt;batch_size&lt;/code&gt; はデフォルトで32になります。データがデータセット、ジェネレーター、または&lt;a href=&quot;../utils/sequence&quot;&gt; &lt;code&gt;keras.utils.Sequence&lt;/code&gt; &lt;/a&gt;インスタンスの形式である場合（バッチを生成するため）、 &lt;code&gt;batch_size&lt;/code&gt; を指定しないでください。</target>
        </trans-unit>
        <trans-unit id="c9865f8ea271cb814a62944707f966161b1f988f" translate="yes" xml:space="preserve">
          <source>Integer or &lt;code&gt;None&lt;/code&gt;. Number of samples per batch of computation. If unspecified, &lt;code&gt;batch_size&lt;/code&gt; will default to 32. Do not specify the &lt;code&gt;batch_size&lt;/code&gt; if your data is in the form of a dataset, generators, or &lt;a href=&quot;utils/sequence&quot;&gt;&lt;code&gt;keras.utils.Sequence&lt;/code&gt;&lt;/a&gt; instances (since they generate batches).</source>
          <target state="translated">整数または &lt;code&gt;None&lt;/code&gt; 。計算のバッチごとのサンプル数。指定しない場合、 &lt;code&gt;batch_size&lt;/code&gt; はデフォルトで32になります。データがデータセット、ジェネレーター、または&lt;a href=&quot;utils/sequence&quot;&gt; &lt;code&gt;keras.utils.Sequence&lt;/code&gt; &lt;/a&gt;インスタンスの形式である場合（バッチを生成するため）、 &lt;code&gt;batch_size&lt;/code&gt; を指定しないでください。</target>
        </trans-unit>
        <trans-unit id="ec55393c87a831154f49f5a6c6a96f32c7c0366d" translate="yes" xml:space="preserve">
          <source>Integer or &lt;code&gt;None&lt;/code&gt;. Number of samples per batch. If unspecified, &lt;code&gt;batch_size&lt;/code&gt; will default to 32. Do not specify the &lt;code&gt;batch_size&lt;/code&gt; if your data is in the form of dataset, generators, or &lt;a href=&quot;../utils/sequence&quot;&gt;&lt;code&gt;keras.utils.Sequence&lt;/code&gt;&lt;/a&gt; instances (since they generate batches).</source>
          <target state="translated">整数または &lt;code&gt;None&lt;/code&gt; 。バッチあたりのサンプル数。指定しない場合、 &lt;code&gt;batch_size&lt;/code&gt; はデフォルトで32になります。データがデータセット、ジェネレーター、または&lt;a href=&quot;../utils/sequence&quot;&gt; &lt;code&gt;keras.utils.Sequence&lt;/code&gt; &lt;/a&gt;インスタンスの形式である場合（バッチを生成するため）、 &lt;code&gt;batch_size&lt;/code&gt; を指定しないでください。</target>
        </trans-unit>
        <trans-unit id="55cf10e04b5ec63fa0038e1d594552454650016f" translate="yes" xml:space="preserve">
          <source>Integer or &lt;code&gt;None&lt;/code&gt;. Number of samples per batch. If unspecified, &lt;code&gt;batch_size&lt;/code&gt; will default to 32. Do not specify the &lt;code&gt;batch_size&lt;/code&gt; if your data is in the form of dataset, generators, or &lt;a href=&quot;utils/sequence&quot;&gt;&lt;code&gt;keras.utils.Sequence&lt;/code&gt;&lt;/a&gt; instances (since they generate batches).</source>
          <target state="translated">整数または &lt;code&gt;None&lt;/code&gt; 。バッチあたりのサンプル数。指定しない場合、 &lt;code&gt;batch_size&lt;/code&gt; はデフォルトで32になります。データがデータセット、ジェネレーター、または&lt;a href=&quot;utils/sequence&quot;&gt; &lt;code&gt;keras.utils.Sequence&lt;/code&gt; &lt;/a&gt;インスタンスの形式である場合（バッチを生成するため）、 &lt;code&gt;batch_size&lt;/code&gt; を指定しないでください。</target>
        </trans-unit>
        <trans-unit id="2980185c242625e64631aa2188651861e27ce5fc" translate="yes" xml:space="preserve">
          <source>Integer or &lt;code&gt;None&lt;/code&gt;. Number of samples per gradient update. If unspecified, &lt;code&gt;batch_size&lt;/code&gt; will default to 32. Do not specify the &lt;code&gt;batch_size&lt;/code&gt; if your data is in the form of datasets, generators, or &lt;a href=&quot;../utils/sequence&quot;&gt;&lt;code&gt;keras.utils.Sequence&lt;/code&gt;&lt;/a&gt; instances (since they generate batches).</source>
          <target state="translated">整数または &lt;code&gt;None&lt;/code&gt; 。グラジエント更新ごとのサンプル数。指定しない場合、 &lt;code&gt;batch_size&lt;/code&gt; はデフォルトで32になります。データがデータセット、ジェネレーター、または&lt;a href=&quot;../utils/sequence&quot;&gt; &lt;code&gt;keras.utils.Sequence&lt;/code&gt; &lt;/a&gt;インスタンスの形式である場合は、 &lt;code&gt;batch_size&lt;/code&gt; を指定しないでください（バッチを生成するため）。</target>
        </trans-unit>
        <trans-unit id="56bbc8f9459243c926740f24c7bc12e664a5dec2" translate="yes" xml:space="preserve">
          <source>Integer or &lt;code&gt;None&lt;/code&gt;. Number of samples per gradient update. If unspecified, &lt;code&gt;batch_size&lt;/code&gt; will default to 32. Do not specify the &lt;code&gt;batch_size&lt;/code&gt; if your data is in the form of datasets, generators, or &lt;a href=&quot;utils/sequence&quot;&gt;&lt;code&gt;keras.utils.Sequence&lt;/code&gt;&lt;/a&gt; instances (since they generate batches).</source>
          <target state="translated">整数または &lt;code&gt;None&lt;/code&gt; 。グラジエント更新ごとのサンプル数。指定しない場合、 &lt;code&gt;batch_size&lt;/code&gt; はデフォルトで32になります。データがデータセット、ジェネレーター、または&lt;a href=&quot;utils/sequence&quot;&gt; &lt;code&gt;keras.utils.Sequence&lt;/code&gt; &lt;/a&gt;インスタンスの形式である場合は、 &lt;code&gt;batch_size&lt;/code&gt; を指定しないでください（バッチを生成するため）。</target>
        </trans-unit>
        <trans-unit id="a869efbb667ad57f17e3cba30053054a9847d5f8" translate="yes" xml:space="preserve">
          <source>Integer or &lt;code&gt;None&lt;/code&gt;. Number of samples per validation batch. If unspecified, will default to &lt;code&gt;batch_size&lt;/code&gt;. Do not specify the &lt;code&gt;validation_batch_size&lt;/code&gt; if your data is in the form of datasets, generators, or &lt;a href=&quot;../utils/sequence&quot;&gt;&lt;code&gt;keras.utils.Sequence&lt;/code&gt;&lt;/a&gt; instances (since they generate batches).</source>
          <target state="translated">整数または &lt;code&gt;None&lt;/code&gt; 。検証バッチごとのサンプル数。指定しない場合、デフォルトで &lt;code&gt;batch_size&lt;/code&gt; になります。データがデータセット、ジェネレーター、または&lt;a href=&quot;../utils/sequence&quot;&gt; &lt;code&gt;keras.utils.Sequence&lt;/code&gt; &lt;/a&gt;インスタンスの形式である場合は、 &lt;code&gt;validation_batch_size&lt;/code&gt; を指定しないでください（バッチを生成するため）。</target>
        </trans-unit>
        <trans-unit id="877acce569d433d882bfc7dcaaef24db8428c9c3" translate="yes" xml:space="preserve">
          <source>Integer or &lt;code&gt;None&lt;/code&gt;. Number of samples per validation batch. If unspecified, will default to &lt;code&gt;batch_size&lt;/code&gt;. Do not specify the &lt;code&gt;validation_batch_size&lt;/code&gt; if your data is in the form of datasets, generators, or &lt;a href=&quot;utils/sequence&quot;&gt;&lt;code&gt;keras.utils.Sequence&lt;/code&gt;&lt;/a&gt; instances (since they generate batches).</source>
          <target state="translated">整数または &lt;code&gt;None&lt;/code&gt; 。検証バッチごとのサンプル数。指定しない場合、デフォルトで &lt;code&gt;batch_size&lt;/code&gt; になります。データがデータセット、ジェネレーター、または&lt;a href=&quot;utils/sequence&quot;&gt; &lt;code&gt;keras.utils.Sequence&lt;/code&gt; &lt;/a&gt;インスタンスの形式である場合は、 &lt;code&gt;validation_batch_size&lt;/code&gt; を指定しないでください（バッチを生成するため）。</target>
        </trans-unit>
        <trans-unit id="e8221094e8ae1087245a4899dd4587e32e1631a3" translate="yes" xml:space="preserve">
          <source>Integer or &lt;code&gt;None&lt;/code&gt;. Total number of steps (batches of samples) before declaring one epoch finished and starting the next epoch. When training with input tensors such as TensorFlow data tensors, the default &lt;code&gt;None&lt;/code&gt; is equal to the number of samples in your dataset divided by the batch size, or 1 if that cannot be determined. If x is a &lt;a href=&quot;../../data&quot;&gt;&lt;code&gt;tf.data&lt;/code&gt;&lt;/a&gt; dataset, and 'steps_per_epoch' is None, the epoch will run until the input dataset is exhausted. When passing an infinitely repeating dataset, you must specify the &lt;code&gt;steps_per_epoch&lt;/code&gt; argument. This argument is not supported with array inputs.</source>
          <target state="translated">整数または &lt;code&gt;None&lt;/code&gt; 。 1つのエポックが終了したことを宣言し、次のエポックを開始するまでの合計ステップ数（サンプルのバッチ）。 TensorFlowデータテンソルなどの入力テンソルを使用してトレーニングする場合、デフォルトの &lt;code&gt;None&lt;/code&gt; は、データセット内のサンプル数をバッチサイズで割った値、または決定できない場合は1に等しくなります。 xが&lt;a href=&quot;../../data&quot;&gt; &lt;code&gt;tf.data&lt;/code&gt; &lt;/a&gt;データセットであり、 'steps_per_epoch'がNoneの場合、入力データセットが使い果たされるまでエポックが実行されます。無限に繰り返されるデータセットを渡すときは、 &lt;code&gt;steps_per_epoch&lt;/code&gt; 引数を指定する必要があります。この引数は、配列入力ではサポートされていません。</target>
        </trans-unit>
        <trans-unit id="17b5325521dae896ba091f0c622bb685243a752c" translate="yes" xml:space="preserve">
          <source>Integer or &lt;code&gt;None&lt;/code&gt;. Total number of steps (batches of samples) before declaring one epoch finished and starting the next epoch. When training with input tensors such as TensorFlow data tensors, the default &lt;code&gt;None&lt;/code&gt; is equal to the number of samples in your dataset divided by the batch size, or 1 if that cannot be determined. If x is a &lt;a href=&quot;../data&quot;&gt;&lt;code&gt;tf.data&lt;/code&gt;&lt;/a&gt; dataset, and 'steps_per_epoch' is None, the epoch will run until the input dataset is exhausted. When passing an infinitely repeating dataset, you must specify the &lt;code&gt;steps_per_epoch&lt;/code&gt; argument. This argument is not supported with array inputs.</source>
          <target state="translated">整数または &lt;code&gt;None&lt;/code&gt; 。 1つのエポックが終了したことを宣言し、次のエポックを開始するまでの合計ステップ数（サンプルのバッチ）。 TensorFlowデータテンソルなどの入力テンソルを使用してトレーニングする場合、デフォルトの &lt;code&gt;None&lt;/code&gt; は、データセット内のサンプル数をバッチサイズで割った値、または決定できない場合は1に等しくなります。 xが&lt;a href=&quot;../data&quot;&gt; &lt;code&gt;tf.data&lt;/code&gt; &lt;/a&gt;データセットであり、 'steps_per_epoch'がNoneの場合、入力データセットが使い果たされるまでエポックが実行されます。無限に繰り返されるデータセットを渡すときは、 &lt;code&gt;steps_per_epoch&lt;/code&gt; 引数を指定する必要があります。この引数は、配列入力ではサポートされていません。</target>
        </trans-unit>
        <trans-unit id="e9bfe8f19e849a992284a80f1a5980131517eec2" translate="yes" xml:space="preserve">
          <source>Integer or &lt;code&gt;None&lt;/code&gt;. Total number of steps (batches of samples) before declaring the evaluation round finished. Ignored with the default value of &lt;code&gt;None&lt;/code&gt;. If x is a &lt;a href=&quot;../../data&quot;&gt;&lt;code&gt;tf.data&lt;/code&gt;&lt;/a&gt; dataset and &lt;code&gt;steps&lt;/code&gt; is None, 'evaluate' will run until the dataset is exhausted. This argument is not supported with array inputs.</source>
          <target state="translated">整数または &lt;code&gt;None&lt;/code&gt; 。評価ラウンドが終了したと宣言するまでの合計ステップ数（サンプルのバッチ）。デフォルト値の &lt;code&gt;None&lt;/code&gt; では無視されます。xが&lt;a href=&quot;../../data&quot;&gt; &lt;code&gt;tf.data&lt;/code&gt; &lt;/a&gt;データセットで、 &lt;code&gt;steps&lt;/code&gt; がNoneの場合、データセットが使い果たされるまで「evaluate」が実行されます。この引数は、配列入力ではサポートされていません。</target>
        </trans-unit>
        <trans-unit id="8ebe399fc79d830decb4088d9908b0a0d7cf8e87" translate="yes" xml:space="preserve">
          <source>Integer or &lt;code&gt;None&lt;/code&gt;. Total number of steps (batches of samples) before declaring the evaluation round finished. Ignored with the default value of &lt;code&gt;None&lt;/code&gt;. If x is a &lt;a href=&quot;../data&quot;&gt;&lt;code&gt;tf.data&lt;/code&gt;&lt;/a&gt; dataset and &lt;code&gt;steps&lt;/code&gt; is None, 'evaluate' will run until the dataset is exhausted. This argument is not supported with array inputs.</source>
          <target state="translated">整数または &lt;code&gt;None&lt;/code&gt; 。評価ラウンドが終了したと宣言するまでの合計ステップ数（サンプルのバッチ）。デフォルト値の &lt;code&gt;None&lt;/code&gt; では無視されます。xが&lt;a href=&quot;../data&quot;&gt; &lt;code&gt;tf.data&lt;/code&gt; &lt;/a&gt;データセットで、 &lt;code&gt;steps&lt;/code&gt; がNoneの場合、データセットが使い果たされるまで「evaluate」が実行されます。この引数は、配列入力ではサポートされていません。</target>
        </trans-unit>
        <trans-unit id="e5f9a2d337158bb6ad4889e0b1e861a66788f5ae" translate="yes" xml:space="preserve">
          <source>Integer or List/Tuple. The axis or axes to normalize across. Typically this is the features axis/axes. The left-out axes are typically the batch axis/axes. This argument defaults to &lt;code&gt;-1&lt;/code&gt;, the last dimension in the input.</source>
          <target state="translated">整数またはリスト/タプル。正規化する1つまたは複数の軸。通常、これはフィーチャの軸/軸です。省略された軸は通常、バッチ軸/軸です。この引数のデフォルトは、入力の最後の次元である &lt;code&gt;-1&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="1eccdff7a407865cbfbdc69eea10f4bd5a37039a" translate="yes" xml:space="preserve">
          <source>Integer or Long, dimensionality of the output space.</source>
          <target state="translated">整数またはLong、出力空間の次元。</target>
        </trans-unit>
        <trans-unit id="2b058f1f30deac1321d12aaea555f116fa6dcac5" translate="yes" xml:space="preserve">
          <source>Integer or TensorShape: size of outputs produced by this cell.</source>
          <target state="translated">整数またはTensorShape:このセルで生成される出力のサイズ。</target>
        </trans-unit>
        <trans-unit id="c85d071ff67fea5317214e2c8376aa4e5f8888ac" translate="yes" xml:space="preserve">
          <source>Integer or iterable of integers. Axes to reverse.</source>
          <target state="translated">整数または整数の反復可能。逆転させる軸。</target>
        </trans-unit>
        <trans-unit id="7ee228302b0384ee03ffd17e6827b3463a0b3348" translate="yes" xml:space="preserve">
          <source>Integer or tuple of integers, axis or axes along which to take the dot product. If a tuple, should be two integers corresponding to the desired axis from the first input and the desired axis from the second input, respectively. Note that the size of the two selected axes must match.</source>
          <target state="translated">ドット積を取るための整数,軸または軸の整数またはタプル.タプルの場合は、1番目の入力からの目的の軸と2番目の入力からの目的の軸にそれぞれ対応する2つの整数でなければなりません。選択された2つの軸のサイズが一致しなければならないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="5999e6dc053e2977702144f72bbcd35aee55179e" translate="yes" xml:space="preserve">
          <source>Integer or tuple of integers, the axis or axes that should be &quot;kept&quot;. These axes are not be summed over when calculating the normalization statistics. By default the last axis, the &lt;code&gt;features&lt;/code&gt; axis is kept and any &lt;code&gt;space&lt;/code&gt; or &lt;code&gt;time&lt;/code&gt; axes are summed. Each element in the the axes that are kept is normalized independently. If &lt;code&gt;axis&lt;/code&gt; is set to 'None', the layer will perform scalar normalization (diving the input by a single scalar value). The &lt;code&gt;batch&lt;/code&gt; axis, 0, is always summed over (&lt;code&gt;axis=0&lt;/code&gt; is not allowed).</source>
          <target state="translated">整数または整数のタプル、「保持」する必要のある1つまたは複数の軸。これらの軸は、正規化統計を計算するときに合計されません。デフォルトでは、最後の軸は、 &lt;code&gt;features&lt;/code&gt; 軸が保持され、任意の &lt;code&gt;space&lt;/code&gt; や &lt;code&gt;time&lt;/code&gt; 軸が加算されます。保持される軸の各要素は、個別に正規化されます。 &lt;code&gt;axis&lt;/code&gt; が 'None'に設定されている場合、レイヤーはスカラー正規化を実行します（入力を単一のスカラー値で除算します）。 &lt;code&gt;batch&lt;/code&gt; 軸、0は、常に（にわたって合計される &lt;code&gt;axis=0&lt;/code&gt; 許可されていません）。</target>
        </trans-unit>
        <trans-unit id="90f12259e9abc566ecc3b05524f7d03fd2cfe6bc" translate="yes" xml:space="preserve">
          <source>Integer specifying the dimension index at which to expand the shape of &lt;code&gt;input&lt;/code&gt;. Given an input of D dimensions, &lt;code&gt;axis&lt;/code&gt; must be in range &lt;code&gt;[-(D+1), D]&lt;/code&gt; (inclusive).</source>
          <target state="translated">&lt;code&gt;input&lt;/code&gt; の形状を拡張する次元インデックスを指定する整数。D次元の入力が与えられた場合、 &lt;code&gt;axis&lt;/code&gt; は範囲 &lt;code&gt;[-(D+1), D]&lt;/code&gt; （両端を含む）でなければなりません。</target>
        </trans-unit>
        <trans-unit id="9c8cacca8698bf82625320d9b131a8bbb189fa16" translate="yes" xml:space="preserve">
          <source>Integer specifying the number of times to read through the dataset. If None, cycles through the dataset forever. Defaults to &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">データセットを読み取る回数を指定する整数。Noneの場合、データセットを永久に循環します。デフォルトは &lt;code&gt;None&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="48ed15721d2c6d90008e99eaa483ba3f10bfd42a" translate="yes" xml:space="preserve">
          <source>Integer specifying the ragged rank for the returned &lt;code&gt;RaggedTensor&lt;/code&gt;. Must be greater than zero.</source>
          <target state="translated">返された &lt;code&gt;RaggedTensor&lt;/code&gt; の不規則なランクを指定する整数。ゼロより大きくなければなりません。</target>
        </trans-unit>
        <trans-unit id="6519af9839eeba13e1e3740388939a4fa489a7c0" translate="yes" xml:space="preserve">
          <source>Integer, axis along which the softmax normalization is applied.</source>
          <target state="translated">整数で、softmax正規化が適用される軸に沿った軸。</target>
        </trans-unit>
        <trans-unit id="4d462894a57295d00bad79d961363f1631df9a74" translate="yes" xml:space="preserve">
          <source>Integer, expected rank of the input.</source>
          <target state="translated">整数で、入力の期待順位を表します。</target>
        </trans-unit>
        <trans-unit id="a62aa1ce6b98f050a623a72f064615f7ebaa28d3" translate="yes" xml:space="preserve">
          <source>Integer, how many top-guesses to return. Defaults to 5.</source>
          <target state="translated">整数で、返すトップ推測の数を指定します。デフォルトは5です。</target>
        </trans-unit>
        <trans-unit id="3611bec378f4b1d08160ba75818e35ce0f93549b" translate="yes" xml:space="preserve">
          <source>Integer, index of batch within the current epoch.</source>
          <target state="translated">整数、現在のエポック内のバッチのインデックス。</target>
        </trans-unit>
        <trans-unit id="49d62c86ad8d866ffc788d8720b66c0f5e1be2cd" translate="yes" xml:space="preserve">
          <source>Integer, index of epoch.</source>
          <target state="translated">整数、エポックのインデックス。</target>
        </trans-unit>
        <trans-unit id="e1d657f1197d0e928e79d10b7b8d03e4e1ddc001" translate="yes" xml:space="preserve">
          <source>Integer, index of layer.</source>
          <target state="translated">整数、レイヤのインデックス。</target>
        </trans-unit>
        <trans-unit id="7b561718573e7177a1eac4fbcbc3cc498d676fdb" translate="yes" xml:space="preserve">
          <source>Integer, k for @k metric.</source>
          <target state="translated">整数,@kのメトリックのためのk.</target>
        </trans-unit>
        <trans-unit id="7e1b6cc9500ca213cd3d0d99297a95ed6f3fd50e" translate="yes" xml:space="preserve">
          <source>Integer, k for @k metric. Only used for the default op name.</source>
          <target state="translated">整数で、@-kのメトリックにはkを指定します。デフォルトのオペ名にのみ使用されます。</target>
        </trans-unit>
        <trans-unit id="52761a9a4283c1bc429a5480ab3ec7776b2ca8db" translate="yes" xml:space="preserve">
          <source>Integer, k for @k metric. This will calculate an average precision for range &lt;code&gt;[1,k]&lt;/code&gt;, as documented above.</source>
          <target state="translated">整数、@ kメトリックの場合はk。これにより、上記のように、範囲 &lt;code&gt;[1,k]&lt;/code&gt; 平均精度が計算されます。</target>
        </trans-unit>
        <trans-unit id="7dd36e6413d49b9537f7506be11f776c7d3c71a0" translate="yes" xml:space="preserve">
          <source>Integer, maximum rank of the input.</source>
          <target state="translated">整数、入力の最大ランク。</target>
        </trans-unit>
        <trans-unit id="e08ffbff16740d8bc9516f3946ce07004cac1737" translate="yes" xml:space="preserve">
          <source>Integer, minimum rank of the input.</source>
          <target state="translated">整数、入力の最小ランク。</target>
        </trans-unit>
        <trans-unit id="fc9adb0e2ec41b5e471885175b1bf95f7edf8655" translate="yes" xml:space="preserve">
          <source>Integer, number of classes to consider.</source>
          <target state="translated">整数、考慮するクラスの数。</target>
        </trans-unit>
        <trans-unit id="d27732837f81f5463d8f22501064a789937c5355" translate="yes" xml:space="preserve">
          <source>Integer, number of epochs to iterate over data. If &lt;code&gt;None&lt;/code&gt; will run forever.</source>
          <target state="translated">整数、データを反復処理するエポックの数。 &lt;code&gt;None&lt;/code&gt; の場合、永久に実行されます。</target>
        </trans-unit>
        <trans-unit id="756d2f5bfa1491c14c543cdef058099c4a02c7b9" translate="yes" xml:space="preserve">
          <source>Integer, number of rows/columns.</source>
          <target state="translated">整数、行/列の数。</target>
        </trans-unit>
        <trans-unit id="8d1f994bd3e44dc5bab28185ee0d3ebc20ffca14" translate="yes" xml:space="preserve">
          <source>Integer, number of threads used for reading and enqueueing. In order to have predicted and repeatable order of reading and enqueueing, such as in prediction and evaluation mode, &lt;code&gt;num_threads&lt;/code&gt; should be 1.</source>
          <target state="translated">整数、読み取りとエンキューに使用されるスレッドの数。予測および評価モードなどで、読み取りとエンキューの予測された繰り返し可能な順序を設定するには、 &lt;code&gt;num_threads&lt;/code&gt; を1にする必要があります。</target>
        </trans-unit>
        <trans-unit id="18288dd031d517cfdcd834085b33c2abfce77bab" translate="yes" xml:space="preserve">
          <source>Integer, optional number of classes to classify images into, only to be specified if &lt;code&gt;include_top&lt;/code&gt; is True, and if no &lt;code&gt;weights&lt;/code&gt; argument is specified.</source>
          <target state="translated">整数、画像を分類するためのオプションのクラス数 &lt;code&gt;include_top&lt;/code&gt; がTrueの場合、および &lt;code&gt;weights&lt;/code&gt; 引数が指定されていない場合にのみ指定されます。</target>
        </trans-unit>
        <trans-unit id="cf1871917c279bfb78ebdc3c2e0743674ed63b10" translate="yes" xml:space="preserve">
          <source>Integer, or None. Factor by which to downscale. E.g. 2 will halve the input. If None, it will default to &lt;code&gt;pool_size&lt;/code&gt;.</source>
          <target state="translated">整数、またはなし。ダウンスケールする要因。たとえば、2は入力を半分にします。Noneの場合、デフォルトで &lt;code&gt;pool_size&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="ed9c65455c7ec7abdfccef38a621dc178eac27f2" translate="yes" xml:space="preserve">
          <source>Integer, or None. Specifies how much the pooling window moves for each pooling step. If None, it will default to &lt;code&gt;pool_size&lt;/code&gt;.</source>
          <target state="translated">整数、またはなし。プーリングステップごとにプーリングウィンドウが移動する量を指定します。Noneの場合、デフォルトで &lt;code&gt;pool_size&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="83b1cb642daf858515eca24974112fed3f4eda5c" translate="yes" xml:space="preserve">
          <source>Integer, random seed.</source>
          <target state="translated">整数、ランダムシード。</target>
        </trans-unit>
        <trans-unit id="5520bbbf4a96e6a5c4b5b06bd200711c43958c41" translate="yes" xml:space="preserve">
          <source>Integer, random seed. Will use a random numpy integer when not specified.</source>
          <target state="translated">整数、ランダムシード。指定されていない場合は、ランダムなnumpy整数を使用します。</target>
        </trans-unit>
        <trans-unit id="968237390c8614c7a696335a1225258fb805d241" translate="yes" xml:space="preserve">
          <source>Integer, repetition factor.</source>
          <target state="translated">整数、繰り返し係数。</target>
        </trans-unit>
        <trans-unit id="264e939c19b3f58405d2a50cba3a1680fb5e9096" translate="yes" xml:space="preserve">
          <source>Integer, size of a batch.</source>
          <target state="translated">整数、バッチのサイズ。</target>
        </trans-unit>
        <trans-unit id="6c1a622ea56d7a867dad89ba08cf28b246d08f31" translate="yes" xml:space="preserve">
          <source>Integer, size of batches to return.</source>
          <target state="translated">整数で、返すバッチのサイズを指定します。</target>
        </trans-unit>
        <trans-unit id="7832b33757b55335554c75f07149fc0123c05315" translate="yes" xml:space="preserve">
          <source>Integer, size of queue to accumulate.</source>
          <target state="translated">整数で、蓄積するキューのサイズを指定します。</target>
        </trans-unit>
        <trans-unit id="73acbfd02c64cde7c7d343aff1fa25e08d1cb5ef" translate="yes" xml:space="preserve">
          <source>Integer, size of the average pooling windows.</source>
          <target state="translated">整数、平均的なプーリングウィンドウのサイズ。</target>
        </trans-unit>
        <trans-unit id="8bfa7ccddd5c7b3f54d3e32cc02d165c9b48661f" translate="yes" xml:space="preserve">
          <source>Integer, size of the max pooling window.</source>
          <target state="translated">整数で、最大プーリングウィンドウのサイズを指定します。</target>
        </trans-unit>
        <trans-unit id="2ed72656810565497136a688b72e432ebfed4fb3" translate="yes" xml:space="preserve">
          <source>Integer, the axis that should be normalized (typically the features axis). For instance, after a &lt;code&gt;Conv2D&lt;/code&gt; layer with &lt;code&gt;data_format=&quot;channels_first&quot;&lt;/code&gt;, set &lt;code&gt;axis=1&lt;/code&gt; in &lt;code&gt;BatchNormalization&lt;/code&gt;.</source>
          <target state="translated">整数、正規化する必要のある軸（通常はフィーチャ軸）。例えば、後 &lt;code&gt;Conv2D&lt;/code&gt; を有する層 &lt;code&gt;data_format=&quot;channels_first&quot;&lt;/code&gt; 、セット &lt;code&gt;axis=1&lt;/code&gt; で &lt;code&gt;BatchNormalization&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="020ea74d267152d1abff3869457ed35e7f440945" translate="yes" xml:space="preserve">
          <source>Integer, the axis that should be normalized. (typically the features axis).</source>
          <target state="translated">整数、正規化されるべき軸。典型的にはフィーチャ軸)。</target>
        </trans-unit>
        <trans-unit id="a6a43ff40e1f9e474e4c712af800f92e564d4913" translate="yes" xml:space="preserve">
          <source>Integer, the dimensionality of the output space (i.e. the number of filters in the convolution).</source>
          <target state="translated">整数,出力空間の次元性(すなわち,畳み込みのフィルタの数).</target>
        </trans-unit>
        <trans-unit id="b610dfd9ecc1049624b3de2024a90db568d1cf07" translate="yes" xml:space="preserve">
          <source>Integer, the dimensionality of the output space (i.e. the number of output filters in the convolution).</source>
          <target state="translated">整数,出力空間の次元性(すなわち,畳み込みの出力フィルタの数).</target>
        </trans-unit>
        <trans-unit id="d8819f86173a8bca874d8aee9f0470a39d17dbfe" translate="yes" xml:space="preserve">
          <source>Integer, the height of the output shape.</source>
          <target state="translated">整数で、出力形状の高さを指定します。</target>
        </trans-unit>
        <trans-unit id="3e17f88143adecb575931142178922e1f292bca6" translate="yes" xml:space="preserve">
          <source>Integer, the number of scalars in &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">整数、 &lt;code&gt;x&lt;/code&gt; のスカラーの数。</target>
        </trans-unit>
        <trans-unit id="26487eb49125ef03870c0b659a881b807b193aa6" translate="yes" xml:space="preserve">
          <source>Integer, the width of the output shape.</source>
          <target state="translated">整数、出力形状の幅。</target>
        </trans-unit>
        <trans-unit id="1bd273ac6a47ca8cb36aefa50612c554a6d42ca7" translate="yes" xml:space="preserve">
          <source>Integer, tuple of 2 integers, or None. Strides values. If None, it will default to &lt;code&gt;pool_size&lt;/code&gt;.</source>
          <target state="translated">整数、2つの整数のタプル、またはなし。ストライド値。Noneの場合、デフォルトで &lt;code&gt;pool_size&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="a05e7e32a0a856148bde05e620e4a31af13622d8" translate="yes" xml:space="preserve">
          <source>Integer, tuple of 2 integers, or None. Strides values. Specifies how far the pooling window moves for each pooling step. If None, it will default to &lt;code&gt;pool_size&lt;/code&gt;.</source>
          <target state="translated">整数、2つの整数のタプル、またはなし。ストライド値。プーリングステップごとにプーリングウィンドウが移動する距離を指定します。Noneの場合、デフォルトで &lt;code&gt;pool_size&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="a9fbd2feec40ae60d2527e32c4735ba4f6949693" translate="yes" xml:space="preserve">
          <source>Integer. Dimension of the dense embedding.</source>
          <target state="translated">整数。密な埋め込みの寸法.</target>
        </trans-unit>
        <trans-unit id="af39051e9e4b562c28e9a14aea3e781886cc1d8d" translate="yes" xml:space="preserve">
          <source>Integer. Epoch at which to start training (useful for resuming a previous training run).</source>
          <target state="translated">整数。トレーニングを開始するエポック(以前のトレーニングランを再開するのに便利)。</target>
        </trans-unit>
        <trans-unit id="2829e20dc8a95a905ae11cb111c6f5ce9e14cab2" translate="yes" xml:space="preserve">
          <source>Integer. If specified, refers to a dimension of the input tensor, such that quantization will be per slice along that dimension.</source>
          <target state="translated">整数。指定された場合、その次元に沿ってスライスごとに量子化されるように、入力テンソルの次元を参照します。</target>
        </trans-unit>
        <trans-unit id="155a6c0384cc7d6005f32e2cdc3809924edbbb8b" translate="yes" xml:space="preserve">
          <source>Integer. Number of epochs to train the model. An epoch is an iteration over the entire &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; data provided. Note that in conjunction with &lt;code&gt;initial_epoch&lt;/code&gt;, &lt;code&gt;epochs&lt;/code&gt; is to be understood as &quot;final epoch&quot;. The model is not trained for a number of iterations given by &lt;code&gt;epochs&lt;/code&gt;, but merely until the epoch of index &lt;code&gt;epochs&lt;/code&gt; is reached.</source>
          <target state="translated">整数。モデルをトレーニングするエポックの数。エポックは、提供された &lt;code&gt;x&lt;/code&gt; および &lt;code&gt;y&lt;/code&gt; データ全体に対する反復です。 &lt;code&gt;initial_epoch&lt;/code&gt; と組み合わせて、 &lt;code&gt;epochs&lt;/code&gt; は「最終エポック」として理解されることに注意してください。モデルは、 &lt;code&gt;epochs&lt;/code&gt; によって与えられた反復回数に対してトレーニングされませんが、インデックス &lt;code&gt;epochs&lt;/code&gt; に到達するまでトレーニングされます。</target>
        </trans-unit>
        <trans-unit id="65631ff0724feabaccec4abc08da39ab086c3adc" translate="yes" xml:space="preserve">
          <source>Integer. Size of the queue for pending events and summaries.</source>
          <target state="translated">整数です。保留中のイベントやサマリーのキューのサイズ。</target>
        </trans-unit>
        <trans-unit id="38ed747fc26142e27c2c7f14fa48a57b250a55b1" translate="yes" xml:space="preserve">
          <source>Integer. Size of the vocabulary, i.e. maximum integer index + 1.</source>
          <target state="translated">整数。語彙のサイズ、すなわち最大整数のインデックス+1。</target>
        </trans-unit>
        <trans-unit id="68da2a75ba273567e4ed4a88dd4f1b24839014f8" translate="yes" xml:space="preserve">
          <source>Integer. Upsampling factor.</source>
          <target state="translated">整数です。アップサンプリング係数</target>
        </trans-unit>
        <trans-unit id="86b26edd58891203d3630f5778a3b8ce101f4387" translate="yes" xml:space="preserve">
          <source>Integer. Used for generator or &lt;a href=&quot;../utils/sequence&quot;&gt;&lt;code&gt;keras.utils.Sequence&lt;/code&gt;&lt;/a&gt; input only. Maximum number of processes to spin up when using process-based threading. If unspecified, &lt;code&gt;workers&lt;/code&gt; will default to 1. If 0, will execute the generator on the main thread.</source>
          <target state="translated">整数。ジェネレーターまたは&lt;a href=&quot;../utils/sequence&quot;&gt; &lt;code&gt;keras.utils.Sequence&lt;/code&gt; &lt;/a&gt;入力にのみ使用されます。プロセスベースのスレッドを使用するときにスピンアップするプロセスの最大数。指定しない場合、 &lt;code&gt;workers&lt;/code&gt; はデフォルトで1になります。0の場合、メインスレッドでジェネレーターを実行します。</target>
        </trans-unit>
        <trans-unit id="3e1dd01fbd0a0e315fb17382ec430a1e09ccd62f" translate="yes" xml:space="preserve">
          <source>Integer. Used for generator or &lt;a href=&quot;../utils/sequence&quot;&gt;&lt;code&gt;keras.utils.Sequence&lt;/code&gt;&lt;/a&gt; input only. Maximum size for the generator queue. If unspecified, &lt;code&gt;max_queue_size&lt;/code&gt; will default to 10.</source>
          <target state="translated">整数。ジェネレーターまたは&lt;a href=&quot;../utils/sequence&quot;&gt; &lt;code&gt;keras.utils.Sequence&lt;/code&gt; &lt;/a&gt;入力にのみ使用されます。ジェネレータキューの最大サイズ。指定しない場合、 &lt;code&gt;max_queue_size&lt;/code&gt; はデフォルトで10になります。</target>
        </trans-unit>
        <trans-unit id="15a95c0266c9ac916ee83cc2715cb7f4a9453c87" translate="yes" xml:space="preserve">
          <source>Integer. Used for generator or &lt;a href=&quot;utils/sequence&quot;&gt;&lt;code&gt;keras.utils.Sequence&lt;/code&gt;&lt;/a&gt; input only. Maximum number of processes to spin up when using process-based threading. If unspecified, &lt;code&gt;workers&lt;/code&gt; will default to 1. If 0, will execute the generator on the main thread.</source>
          <target state="translated">整数。ジェネレーターまたは&lt;a href=&quot;utils/sequence&quot;&gt; &lt;code&gt;keras.utils.Sequence&lt;/code&gt; &lt;/a&gt;入力にのみ使用されます。プロセスベースのスレッドを使用するときにスピンアップするプロセスの最大数。指定しない場合、 &lt;code&gt;workers&lt;/code&gt; はデフォルトで1になります。0の場合、メインスレッドでジェネレーターを実行します。</target>
        </trans-unit>
        <trans-unit id="026625dde93ca9f9da22c49466b3704e8d8d9ede" translate="yes" xml:space="preserve">
          <source>Integer. Used for generator or &lt;a href=&quot;utils/sequence&quot;&gt;&lt;code&gt;keras.utils.Sequence&lt;/code&gt;&lt;/a&gt; input only. Maximum size for the generator queue. If unspecified, &lt;code&gt;max_queue_size&lt;/code&gt; will default to 10.</source>
          <target state="translated">整数。ジェネレーターまたは&lt;a href=&quot;utils/sequence&quot;&gt; &lt;code&gt;keras.utils.Sequence&lt;/code&gt; &lt;/a&gt;入力にのみ使用されます。ジェネレータキューの最大サイズ。指定しない場合、 &lt;code&gt;max_queue_size&lt;/code&gt; はデフォルトで10になります。</target>
        </trans-unit>
        <trans-unit id="10ef96833f4704c59b53b19fc9aaaf4497588d54" translate="yes" xml:space="preserve">
          <source>Integer. Used to create a random seed.</source>
          <target state="translated">整数です。ランダムシードの作成に使用します。</target>
        </trans-unit>
        <trans-unit id="46fe9ca590793172ed8cbbdd39a8aa90fd85af4d" translate="yes" xml:space="preserve">
          <source>Intended for &quot;grouping&quot; multiple checkpoints in a sharded checkpoint setup.</source>
          <target state="translated">シャードされたチェックポイントの設定で複数のチェックポイントを「グループ化」することを目的としています。</target>
        </trans-unit>
        <trans-unit id="1c415d05fde4b20fb3d078c3ec3eea128c860727" translate="yes" xml:space="preserve">
          <source>Intended for use in gradient code which might deal with &lt;code&gt;IndexedSlices&lt;/code&gt; objects, which are easy to multiply by a scalar but more expensive to multiply with arbitrary tensors.</source>
          <target state="translated">&lt;code&gt;IndexedSlices&lt;/code&gt; オブジェクトを処理するグラディエントコードでの使用を目的としています。スカラーを乗算するのは簡単ですが、任意のテンソルを乗算する方がコストがかかります。</target>
        </trans-unit>
        <trans-unit id="09de4915cfc5e9dec66a0e4b3cf98d49d13a1bf5" translate="yes" xml:space="preserve">
          <source>Interface for listeners that take action before or after checkpoint save.</source>
          <target state="translated">チェックポイント保存の前後にアクションを起こすリスナーのためのインターフェイスです。</target>
        </trans-unit>
        <trans-unit id="7966d1ee34aecdadb5e17da45b8dc52964483fe6" translate="yes" xml:space="preserve">
          <source>Interface for the head/top of a model.</source>
          <target state="translated">モデルのヘッド/トップのためのインターフェイス。</target>
        </trans-unit>
        <trans-unit id="970dc6a3a66245c62ed217c2880dacf860847f5f" translate="yes" xml:space="preserve">
          <source>Interface representing a stateful summary writer object.</source>
          <target state="translated">ステートフルサマリーライタオブジェクトを表すインターフェースです。</target>
        </trans-unit>
        <trans-unit id="267b20fba551cfdfeaade8ce47b964dcb7474511" translate="yes" xml:space="preserve">
          <source>Interleave the values from the &lt;code&gt;data&lt;/code&gt; tensors into a single tensor.</source>
          <target state="translated">&lt;code&gt;data&lt;/code&gt; テンソルの値を1つのテンソルにインターリーブします。</target>
        </trans-unit>
        <trans-unit id="9d395369c8c508d85c7ffcfcd89cd26ab4bce1e5" translate="yes" xml:space="preserve">
          <source>InterleaveDataset</source>
          <target state="translated">InterleaveDataset</target>
        </trans-unit>
        <trans-unit id="dfeb3be591d4b480789b9b8465a40c757f82e1e8" translate="yes" xml:space="preserve">
          <source>Internal helper function for 'sp_t / dense_t'.</source>
          <target state="translated">sp_t/dense_t' の内部ヘルパー関数。</target>
        </trans-unit>
        <trans-unit id="e702c08b377f90299d4d1edf33ea46f8d70ab908" translate="yes" xml:space="preserve">
          <source>Internal scopes and variable names should not depend on any arguments that are not supplied to &lt;code&gt;make_template&lt;/code&gt;. In general you will get a ValueError telling you that you are trying to reuse a variable that doesn't exist if you make a mistake.</source>
          <target state="translated">内部スコープと変数名は、 &lt;code&gt;make_template&lt;/code&gt; に提供されていない引数に依存してはなりません。一般に、誤った場合に存在しない変数を再利用しようとしていることを伝えるValueErrorが表示されます。</target>
        </trans-unit>
        <trans-unit id="a8a9d8482fb70d4cb98a40c92c111baaae956ec4" translate="yes" xml:space="preserve">
          <source>Internally, &lt;a href=&quot;function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt; can build more than one graph, to support arguments with different data types or shapes, since TensorFlow can build more efficient graphs that are specialized on shapes and dtypes. &lt;a href=&quot;function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt; also treats any pure Python value as opaque objects, and builds a separate graph for each set of Python arguments that it encounters.</source>
          <target state="translated">内部的には、&lt;a href=&quot;function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt;は形状とdtypeに特化したより効率的なグラフを作成できるため、tf.functionは複数のグラフを作成して、さまざまなデータ型または形状の引数をサポートできます。また、&lt;a href=&quot;function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt;は、純粋なPython値を不透明なオブジェクトとして扱い、検出したPython引数のセットごとに個別のグラフを作成します。</target>
        </trans-unit>
        <trans-unit id="3754c7a802c267bca9422c11ea6f0ba375d68725" translate="yes" xml:space="preserve">
          <source>Internally, &lt;code&gt;tf.tpu.outside_compilation()&lt;/code&gt; adds outside compilation attributes to all ops in &lt;code&gt;computation&lt;/code&gt;. During later graph pass, these ops with outside compilation attribute is extracted out and replicated into a host-side graph. Inputs to this extract host-side graph is sent from TPU computation graph to host graph via a pair of XlaSendToHost and XlaRecvFromHost ops. Note that using &lt;code&gt;tf.tpu.outside_compilation()&lt;/code&gt; may result in tensor transfer between TPU and CPU, leading to non-trivial performance impact.</source>
          <target state="translated">内部的には、 &lt;code&gt;tf.tpu.outside_compilation()&lt;/code&gt; は、 &lt;code&gt;computation&lt;/code&gt; すべての演算に外部コンパイル属性を追加します。後のグラフパス中に、外部コンパイル属性を持つこれらの演算が抽出され、ホスト側のグラフに複製されます。このホスト側グラフの抽出への入力は、XlaSendToHostおよびXlaRecvFromHost opsのペアを介してTPU計算グラフからホストグラフに送信されます。 &lt;code&gt;tf.tpu.outside_compilation()&lt;/code&gt; を使用すると、TPUとCPUの間のテンソル転送が発生し、パフォーマンスに重大な影響を与える可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="c3b11c4a32c583b06a946fb7dece277cfaecec4c" translate="yes" xml:space="preserve">
          <source>Internally, a &lt;code&gt;RaggedTensor&lt;/code&gt; consists of a concatenated list of values that are partitioned into variable-length rows. In particular, each &lt;code&gt;RaggedTensor&lt;/code&gt; consists of:</source>
          <target state="translated">内部的には、 &lt;code&gt;RaggedTensor&lt;/code&gt; は、可変長の行に分割される値の連結リストで構成されています。特に、各 &lt;code&gt;RaggedTensor&lt;/code&gt; は以下で構成されます。</target>
        </trans-unit>
        <trans-unit id="255d2ec4d3c0d9058219b6e2356af764fe41dab1" translate="yes" xml:space="preserve">
          <source>Internally, images are either stored in as one &lt;code&gt;float32&lt;/code&gt; per channel per pixel (implicitly, values are assumed to lie in &lt;code&gt;[0,1)&lt;/code&gt;) or one &lt;code&gt;uint8&lt;/code&gt; per channel per pixel (values are assumed to lie in &lt;code&gt;[0,255]&lt;/code&gt;).</source>
          <target state="translated">内部的には、画像は、チャネルごとにピクセルごとに1つの &lt;code&gt;float32&lt;/code&gt; （暗黙的に、値は &lt;code&gt;[0,1)&lt;/code&gt; にあると想定されます）またはチャネルごとにピクセルごとに1つの &lt;code&gt;uint8&lt;/code&gt; （値は &lt;code&gt;[0,255]&lt;/code&gt; にあると想定されます）として格納されます。</target>
        </trans-unit>
        <trans-unit id="39d19ba05c07ee939684f9bc5632fa152a3e99c6" translate="yes" xml:space="preserve">
          <source>Internally, this op reshapes the input tensors and invokes &lt;a href=&quot;../../../nn/conv2d&quot;&gt;&lt;code&gt;tf.nn.conv2d&lt;/code&gt;&lt;/a&gt;. For example, if &lt;code&gt;data_format&lt;/code&gt; does not start with &quot;NC&quot;, a tensor of shape &lt;code&gt;batch_shape + [in_width, in_channels]&lt;/code&gt; is reshaped to &lt;code&gt;batch_shape + [1, in_width, in_channels]&lt;/code&gt;, and the filter is reshaped to &lt;code&gt;[1, filter_width, in_channels, out_channels]&lt;/code&gt;. The result is then reshaped back to &lt;code&gt;batch_shape + [out_width, out_channels]&lt;/code&gt; (where out_width is a function of the stride and padding as in conv2d) and returned to the caller.</source>
          <target state="translated">内部的に、この操作は入力テンソルを&lt;a href=&quot;../../../nn/conv2d&quot;&gt; &lt;code&gt;tf.nn.conv2d&lt;/code&gt; &lt;/a&gt;を呼び出します。たとえば、 &lt;code&gt;data_format&lt;/code&gt; &quot;NC&quot;で始まっていない、形状のテンソル &lt;code&gt;batch_shape + [in_width, in_channels]&lt;/code&gt; に整形さ &lt;code&gt;batch_shape + [1, in_width, in_channels]&lt;/code&gt; 、及びフィルタに整形され &lt;code&gt;[1, filter_width, in_channels, out_channels]&lt;/code&gt; 。次に、結果は &lt;code&gt;batch_shape + [out_width, out_channels]&lt;/code&gt; （out_widthはconv2dのようにストライドとパディングの関数）に再形成され、呼び出し元に返されます。</target>
        </trans-unit>
        <trans-unit id="ccc43cd3b01644683dd7e060724d61cbe55125e2" translate="yes" xml:space="preserve">
          <source>Internally, this op reshapes the input tensors and invokes &lt;a href=&quot;../../../nn/conv2d&quot;&gt;&lt;code&gt;tf.nn.conv2d&lt;/code&gt;&lt;/a&gt;. For example, if &lt;code&gt;data_format&lt;/code&gt; does not start with &quot;NC&quot;, a tensor of shape [batch, in_width, in_channels] is reshaped to [batch, 1, in_width, in_channels], and the filter is reshaped to [1, filter_width, in_channels, out_channels]. The result is then reshaped back to [batch, out_width, out_channels] (where out_width is a function of the stride and padding as in conv2d) and returned to the caller.</source>
          <target state="translated">内部的には、この&lt;a href=&quot;../../../nn/conv2d&quot;&gt; &lt;code&gt;tf.nn.conv2d&lt;/code&gt; &lt;/a&gt;は入力テンソルを再形成し、tf.nn.conv2dを呼び出します。たとえば、 &lt;code&gt;data_format&lt;/code&gt; が「NC」で始まらない場合、形状のテンソル[batch、in_width、in_channels]は[batch、1、in_width、in_channels]に再形成され、フィルターは[1、filter_width、in_channels、 out_channels]。その後、結果は[batch、out_width、out_channels]（out_widthはconv2dのようにストライドとパディングの関数です）に再形成され、呼び出し元に返されます。</target>
        </trans-unit>
        <trans-unit id="7c69ad0876e39d22ce51635e4a30f9a378a7dbe4" translate="yes" xml:space="preserve">
          <source>Internally, this op reshapes the input tensors and invokes &lt;a href=&quot;conv2d&quot;&gt;&lt;code&gt;tf.nn.conv2d&lt;/code&gt;&lt;/a&gt;. For example, if &lt;code&gt;data_format&lt;/code&gt; does not start with &quot;NC&quot;, a tensor of shape [batch, in_width, in_channels] is reshaped to [batch, 1, in_width, in_channels], and the filter is reshaped to [1, filter_width, in_channels, out_channels]. The result is then reshaped back to [batch, out_width, out_channels] (where out_width is a function of the stride and padding as in conv2d) and returned to the caller.</source>
          <target state="translated">内部的には、この&lt;a href=&quot;conv2d&quot;&gt; &lt;code&gt;tf.nn.conv2d&lt;/code&gt; &lt;/a&gt;は入力テンソルを再形成し、tf.nn.conv2dを呼び出します。たとえば、 &lt;code&gt;data_format&lt;/code&gt; が「NC」で始まらない場合、形状のテンソル[batch、in_width、in_channels]は[batch、1、in_width、in_channels]に再形成され、フィルターは[1、filter_width、in_channels、 out_channels]。その後、結果は[batch、out_width、out_channels]（out_widthはconv2dのようにストライドとパディングの関数です）に再形成され、呼び出し元に返されます。</target>
        </trans-unit>
        <trans-unit id="77366db31216abb65fcc3e1ddedf30536706afa8" translate="yes" xml:space="preserve">
          <source>Internally, this op reshapes the input tensors and invokes &lt;a href=&quot;conv2d&quot;&gt;&lt;code&gt;tf.nn.conv2d&lt;/code&gt;&lt;/a&gt;. For example, if &lt;code&gt;data_format&lt;/code&gt; does not start with &lt;code&gt;&quot;NC&quot;&lt;/code&gt;, a tensor of shape &lt;code&gt;batch_shape + [in_width, in_channels]&lt;/code&gt; is reshaped to &lt;code&gt;batch_shape + [1, in_width, in_channels]&lt;/code&gt;, and the filter is reshaped to &lt;code&gt;[1, filter_width, in_channels, out_channels]&lt;/code&gt;. The result is then reshaped back to &lt;code&gt;batch_shape + [out_width, out_channels]&lt;/code&gt; (where out_width is a function of the stride and padding as in conv2d) and returned to the caller.</source>
          <target state="translated">内部的に、この操作は入力テンソルを&lt;a href=&quot;conv2d&quot;&gt; &lt;code&gt;tf.nn.conv2d&lt;/code&gt; &lt;/a&gt;を呼び出します。たとえば、 &lt;code&gt;data_format&lt;/code&gt; 始まらない &lt;code&gt;&quot;NC&quot;&lt;/code&gt; 、形状のテンソル &lt;code&gt;batch_shape + [in_width, in_channels]&lt;/code&gt; に整形さ &lt;code&gt;batch_shape + [1, in_width, in_channels]&lt;/code&gt; 及びフィルタに整形され &lt;code&gt;[1, filter_width, in_channels, out_channels]&lt;/code&gt; 。次に、結果は &lt;code&gt;batch_shape + [out_width, out_channels]&lt;/code&gt; （out_widthはconv2dのようにストライドとパディングの関数）に再形成され、呼び出し元に返されます。</target>
        </trans-unit>
        <trans-unit id="917c90b98804c8a00e2f1f77d52497e6cc4c5478" translate="yes" xml:space="preserve">
          <source>Interpolation formula inspired by section 4 of Davis &amp;amp; Goadrich 2006.</source>
          <target state="translated">Davis＆Goadrich 2006のセクション4に触発された補間式。</target>
        </trans-unit>
        <trans-unit id="eff3de259388706cb8f11066e0a617e4e6f361f0" translate="yes" xml:space="preserve">
          <source>Interpolation method used to resample the image if the target size is different from that of the loaded image. Supported methods are &quot;nearest&quot;, &quot;bilinear&quot;, and &quot;bicubic&quot;. If PIL version 1.1.3 or newer is installed, &quot;lanczos&quot; is also supported. If PIL version 3.4.0 or newer is installed, &quot;box&quot; and &quot;hamming&quot; are also supported. By default, &quot;nearest&quot; is used.</source>
          <target state="translated">ターゲットサイズが読み込まれた画像と異なる場合に、画像を再サンプルするために使用される補間方法です。サポートされている方法は、&quot; nearest&quot;、&quot;bilinear&quot;、&quot;bicubic &quot;です。PIL バージョン 1.1.3 以降がインストールされている場合、&quot;lanczos&quot; もサポートされています。PILバージョン3.4.0以降がインストールされている場合、&quot;box &quot;と &quot;hamming &quot;もサポートされています。デフォルトでは &quot;nearest &quot;が使用されます。</target>
        </trans-unit>
        <trans-unit id="c6a83be95e3b71f9242daf3a730745b97d6a8590" translate="yes" xml:space="preserve">
          <source>Interpolation method used to resample the image if the target size is different from that of the loaded image. Supported methods are &lt;code&gt;&quot;nearest&quot;&lt;/code&gt;, &lt;code&gt;&quot;bilinear&quot;&lt;/code&gt;, and &lt;code&gt;&quot;bicubic&quot;&lt;/code&gt;. If PIL version 1.1.3 or newer is installed, &lt;code&gt;&quot;lanczos&quot;&lt;/code&gt; is also supported. If PIL version 3.4.0 or newer is installed, &lt;code&gt;&quot;box&quot;&lt;/code&gt; and &lt;code&gt;&quot;hamming&quot;&lt;/code&gt; are also supported. By default, &lt;code&gt;&quot;nearest&quot;&lt;/code&gt; is used.</source>
          <target state="translated">ターゲットサイズがロードされた画像のサイズと異なる場合に画像をリサンプリングするために使用される補間方法。サポートされているメソッドは、 &lt;code&gt;&quot;nearest&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;bilinear&quot;&lt;/code&gt; 、および &lt;code&gt;&quot;bicubic&quot;&lt;/code&gt; です。 PILバージョン1.1.3以降がインストールされている場合は、 &lt;code&gt;&quot;lanczos&quot;&lt;/code&gt; もサポートされます。 PILバージョン3.4.0以降がインストールされている場合は、 &lt;code&gt;&quot;box&quot;&lt;/code&gt; と &lt;code&gt;&quot;hamming&quot;&lt;/code&gt; もサポートされます。デフォルトでは、 &lt;code&gt;&quot;nearest&quot;&lt;/code&gt; が使用されます。</target>
        </trans-unit>
        <trans-unit id="5d41d1157db67f4ae8d3353790336143377bd1fb" translate="yes" xml:space="preserve">
          <source>Interpolation mode. Supported values: &quot;nearest&quot;, &quot;bilinear&quot;.</source>
          <target state="translated">補間モード。サポートされている値 &quot; nearest&quot;,&quot;bilinear&quot;.</target>
        </trans-unit>
        <trans-unit id="4b1b48a15bee98562ab2271bf7c674c69c76f9d7" translate="yes" xml:space="preserve">
          <source>Interpreter interface for TensorFlow Lite Models.</source>
          <target state="translated">TensorFlow Liteモデルのインタープリタインタフェース。</target>
        </trans-unit>
        <trans-unit id="cd0dc8bec74842908edb1323c813960ee0d10418" translate="yes" xml:space="preserve">
          <source>Intuitively, separable convolutions can be understood as a way to factorize a convolution kernel into two smaller kernels, or as an extreme version of an Inception block.</source>
          <target state="translated">直感的には、分離可能な畳み込みは、畳み込みカーネルを2つの小さなカーネルに因数分解する方法として、あるいはインセプションブロックの極端なバージョンとして理解することができます。</target>
        </trans-unit>
        <trans-unit id="e82e41a0aefa660a1c7caa85a3e51aff86500f3e" translate="yes" xml:space="preserve">
          <source>Inv</source>
          <target state="translated">Inv</target>
        </trans-unit>
        <trans-unit id="4f28f8a2e4fbc807a9598103ca92496ec62e9283" translate="yes" xml:space="preserve">
          <source>InvGrad</source>
          <target state="translated">InvGrad</target>
        </trans-unit>
        <trans-unit id="58add683489305dc7550dd9711b45a710de33407" translate="yes" xml:space="preserve">
          <source>Invalid &lt;code&gt;PhysicalDevice&lt;/code&gt; specified.</source>
          <target state="translated">無効な &lt;code&gt;PhysicalDevice&lt;/code&gt; が指定されました。</target>
        </trans-unit>
        <trans-unit id="765dc4833ea51f9712325654e6149e4320ae0357" translate="yes" xml:space="preserve">
          <source>Invalid IDs (&amp;lt; 0) are pruned from input IDs and weights, as well as any IDs with non-positive weight. For an entry with no features, the embedding vector for &lt;code&gt;default_id&lt;/code&gt; is returned, or the 0-vector if &lt;code&gt;default_id&lt;/code&gt; is not supplied.</source>
          <target state="translated">無効なID（&amp;lt;0）は、入力IDと重み、および正でない重みを持つIDから削除されます。機能のないエントリの場合、 &lt;code&gt;default_id&lt;/code&gt; の埋め込みベクトルが返されます &lt;code&gt;default_id&lt;/code&gt; が指定されていない場合は、0ベクトルが返されます。</target>
        </trans-unit>
        <trans-unit id="c83be98b0df67b85dda471c4f0e08d9948550727" translate="yes" xml:space="preserve">
          <source>Invalid arguments.</source>
          <target state="translated">無効な引数です。</target>
        </trans-unit>
        <trans-unit id="7227e77ba4898ce78f530c7179daf1d58aee3eba" translate="yes" xml:space="preserve">
          <source>Invalid input type.</source>
          <target state="translated">入力タイプが無効です。</target>
        </trans-unit>
        <trans-unit id="5ad0fc9e3c1773fd6f82ccad6e0477a808a3ba38" translate="yes" xml:space="preserve">
          <source>Invalid signature keys.</source>
          <target state="translated">無効な署名キーです。</target>
        </trans-unit>
        <trans-unit id="0bc32d3cdc428cf1f9b21217961b07a8ba0776de" translate="yes" xml:space="preserve">
          <source>InvalidArgumentError: When &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; have incomptatible shapes or types.</source>
          <target state="translated">InvalidArgumentError： &lt;code&gt;x&lt;/code&gt; と &lt;code&gt;y&lt;/code&gt; に互換性のない形状またはタイプがある場合。</target>
        </trans-unit>
        <trans-unit id="b0224cb82fac3bd64320723e2cfea88c4cb1de8e" translate="yes" xml:space="preserve">
          <source>Inverse 2D fast Fourier transform.</source>
          <target state="translated">逆2次元高速フーリエ変換。</target>
        </trans-unit>
        <trans-unit id="f86113a2dbd7ed935c16e9099b42fb7e6dba6038" translate="yes" xml:space="preserve">
          <source>Inverse 2D real-valued fast Fourier transform.</source>
          <target state="translated">逆2次元実数高速フーリエ変換。</target>
        </trans-unit>
        <trans-unit id="bf6cbaad72f3eb6b8fa736b0c48f1b4b54ba4d45" translate="yes" xml:space="preserve">
          <source>Inverse 3D fast Fourier transform.</source>
          <target state="translated">逆3次元高速フーリエ変換。</target>
        </trans-unit>
        <trans-unit id="729fe142f2358fcfd2d893f486c7ef7071098901" translate="yes" xml:space="preserve">
          <source>Inverse 3D real-valued fast Fourier transform.</source>
          <target state="translated">逆3次元実数高速フーリエ変換。</target>
        </trans-unit>
        <trans-unit id="2b74c26781dc19d8cf865c887430b83b4bb874bf" translate="yes" xml:space="preserve">
          <source>Inverse error function of &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; の逆誤差関数。</target>
        </trans-unit>
        <trans-unit id="2769447bdda650e2de43a09ec7f4f9b88e781719" translate="yes" xml:space="preserve">
          <source>Inverse fast Fourier transform.</source>
          <target state="translated">逆高速フーリエ変換。</target>
        </trans-unit>
        <trans-unit id="59aef4232893465c6aaa96756ca11d4d57c9f509" translate="yes" xml:space="preserve">
          <source>Inverse lookup</source>
          <target state="translated">逆引き</target>
        </trans-unit>
        <trans-unit id="eca1ad1de11fec11fe41231e47070833956358bf" translate="yes" xml:space="preserve">
          <source>Inverse of the &lt;code&gt;serialize&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;serialize&lt;/code&gt; 機能の逆。</target>
        </trans-unit>
        <trans-unit id="21739830573f1c06f7716e20676dc8044ac7dbe1" translate="yes" xml:space="preserve">
          <source>Inverse real-valued fast Fourier transform.</source>
          <target state="translated">逆実数高速フーリエ変換。</target>
        </trans-unit>
        <trans-unit id="e844690a2086d9678b13582fd4701152c826641f" translate="yes" xml:space="preserve">
          <source>Invert</source>
          <target state="translated">Invert</target>
        </trans-unit>
        <trans-unit id="454fcced1bbd08f2febd8b9e63fda971abd10063" translate="yes" xml:space="preserve">
          <source>Invert (flip) each bit of supported types; for example, type &lt;code&gt;uint8&lt;/code&gt; value 01010101 becomes 10101010.</source>
          <target state="translated">サポートされているタイプの各ビットを反転（反転）します。たとえば、タイプ &lt;code&gt;uint8&lt;/code&gt; の値01010101は10101010になります。</target>
        </trans-unit>
        <trans-unit id="bed096656d7fe5e741cc84abd73ada3bd6383ffb" translate="yes" xml:space="preserve">
          <source>InvertPermutation</source>
          <target state="translated">InvertPermutation</target>
        </trans-unit>
        <trans-unit id="91d644123d1e143b7bcae5cd3ca4411f53cc0582" translate="yes" xml:space="preserve">
          <source>Invoke the interpreter.</source>
          <target state="translated">インタプリタを呼び出します。</target>
        </trans-unit>
        <trans-unit id="a3b88b5d9fb1f01311b785a98dab39ae651b2e05" translate="yes" xml:space="preserve">
          <source>Invokes a python function to compute func(input)-&amp;gt;output.</source>
          <target state="translated">Python関数を呼び出して、func（input）-&amp;gt; outputを計算します。</target>
        </trans-unit>
        <trans-unit id="07bd56502c92792eb48f74185c5de124c19b5f15" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;Loss&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;Loss&lt;/code&gt; インスタンスを呼び出します。</target>
        </trans-unit>
        <trans-unit id="b13fc57aaccb54faea2366b6fa9ef75d7f668372" translate="yes" xml:space="preserve">
          <source>Is the column count of the product large (&amp;gt;&amp;gt; 1)?</source>
          <target state="translated">製品の列数は多いですか（&amp;gt;&amp;gt; 1）？</target>
        </trans-unit>
        <trans-unit id="b8d5c82b816bc835c62912b744400ff40c02617e" translate="yes" xml:space="preserve">
          <source>Is the density of &lt;code&gt;A&lt;/code&gt; larger than approximately 15%?</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; の密度は約15％より大きいですか？</target>
        </trans-unit>
        <trans-unit id="c601bf8fc05bd7645229907978ac2511d637fa1a" translate="yes" xml:space="preserve">
          <source>Is the value of the flag allowed to be None.</source>
          <target state="translated">フラグの値が None であることを許可しているかどうか。</target>
        </trans-unit>
        <trans-unit id="643c612596426f0fec64f232c9d5aef6f88c639b" translate="yes" xml:space="preserve">
          <source>IsBoostedTreesEnsembleInitialized</source>
          <target state="translated">IsBoostedTreesEnsembleInitialized</target>
        </trans-unit>
        <trans-unit id="77075fc1d53795c8c08144c8db26e03533240f78" translate="yes" xml:space="preserve">
          <source>IsBoostedTreesQuantileStreamResourceInitialized</source>
          <target state="translated">IsBoostedTreesQuantileStreamResourceInitialized</target>
        </trans-unit>
        <trans-unit id="12c95b5f06bb33c3c5be9c54bc9046e6da772489" translate="yes" xml:space="preserve">
          <source>IsFinite</source>
          <target state="translated">IsFinite</target>
        </trans-unit>
        <trans-unit id="b3060aaecf7335f09adf39163594f94ba1f28def" translate="yes" xml:space="preserve">
          <source>IsInf</source>
          <target state="translated">IsInf</target>
        </trans-unit>
        <trans-unit id="d0fa60fb2ee6d1b84448737ee8599591dd40c001" translate="yes" xml:space="preserve">
          <source>IsNan</source>
          <target state="translated">IsNan</target>
        </trans-unit>
        <trans-unit id="46d7b64826025485ac80b869ef64ad6ef233f634" translate="yes" xml:space="preserve">
          <source>IsVariableInitialized</source>
          <target state="translated">IsVariableInitialized</target>
        </trans-unit>
        <trans-unit id="e9232fd5729c418e2cf69329c493d9342acec23c" translate="yes" xml:space="preserve">
          <source>Issue tracker</source>
          <target state="translated">課題トラッカー</target>
        </trans-unit>
        <trans-unit id="c555417d6e9840ed1ca167f3f620882b41feafca" translate="yes" xml:space="preserve">
          <source>It accumulates all the values from out_backprop into the feature dimension. For NHWC data format, the feature dimension is the last. For NCHW data format, the feature dimension is the third-to-last.</source>
          <target state="translated">out_backpropからのすべての値を特徴量次元に蓄積します。NHWC データフォーマットの場合、特徴量次元は最後になる。NCHW データフォーマットの場合、特徴量次元は 3 番目から最後になります。</target>
        </trans-unit>
        <trans-unit id="848468d378f385a5eff1c3e14e7c9c6b9f132b4d" translate="yes" xml:space="preserve">
          <source>It allows a small gradient when the unit is not active:</source>
          <target state="translated">ユニットが活動していない時に小さなグラデーションを可能にしてくれます。</target>
        </trans-unit>
        <trans-unit id="15b30b164c5d405f36fa8233e2a4a5041ac0f62c" translate="yes" xml:space="preserve">
          <source>It allows a small gradient when the unit is not active: &lt;code&gt;f(x) = alpha * x for x &amp;lt; 0&lt;/code&gt;, &lt;code&gt;f(x) = x for x &amp;gt;= 0&lt;/code&gt;.</source>
          <target state="translated">これは、ユニットがアクティブでないときに小さな勾配を可能にします &lt;code&gt;f(x) = alpha * x for x &amp;lt; 0&lt;/code&gt; 場合はf（x）= alpha * &lt;code&gt;f(x) = x for x &amp;gt;= 0&lt;/code&gt; 場合はf（x）= xです。</target>
        </trans-unit>
        <trans-unit id="32fedff7c0ca1dff1ca98fad88e05d900e06abf4" translate="yes" xml:space="preserve">
          <source>It allows you to take a bunch of TensorFlow ops and annotate the construction such that toco knows how to convert it to tflite. This embeds a pseudo function in a TensorFlow graph. This allows embedding high-level API usage information in a lower level TensorFlow implementation so that an alternative implementation can be substituted later.</source>
          <target state="translated">これにより、TensorFlowのOPSの束を取り、tocoがそれをtfliteに変換する方法を知っているような構造に注釈を付けることができます。擬似関数をTensorFlowグラフに埋め込みます。これにより、高レベルのAPI使用情報を低レベルのTensorFlow実装に埋め込むことができ、後から代替の実装を代用することができます。</target>
        </trans-unit>
        <trans-unit id="476f3a0bb3e98caba9635badab1de855ab2206de" translate="yes" xml:space="preserve">
          <source>It also assumes that all id values lie in the range [0, p0), where p0 is the sum of the size of params along dimension 0.</source>
          <target state="translated">また、すべてのid値が[0,p0]の範囲内にあることを前提としています。</target>
        </trans-unit>
        <trans-unit id="268056cfbb264bea0c41c6a1efa283fdafc29f69" translate="yes" xml:space="preserve">
          <source>It also parses argument as comma-separated list of strings if requested.</source>
          <target state="translated">また、要求があれば引数をカンマで区切られた文字列のリストとして解析します。</target>
        </trans-unit>
        <trans-unit id="486eade8a1729dd16d206df5323836f9c26ec548" translate="yes" xml:space="preserve">
          <source>It assigns out-of-vocabulary keys to buckets based in their hashes.</source>
          <target state="translated">バケットのハッシュに基づいて、語彙外の鍵をバケットに割り当てます。</target>
        </trans-unit>
        <trans-unit id="7a36235a0369fe7b8f72b7109e7cf4f2d22578c2" translate="yes" xml:space="preserve">
          <source>It can also be used with a custom &lt;code&gt;model_fn&lt;/code&gt;. Example:</source>
          <target state="translated">また、カスタムの &lt;code&gt;model_fn&lt;/code&gt; でも使用できます。例：</target>
        </trans-unit>
        <trans-unit id="d753925b5debe450dc477ca87f5806e3bd88bad5" translate="yes" xml:space="preserve">
          <source>It can also return a subnormal number.</source>
          <target state="translated">また、亜正規数を返すこともできます。</target>
        </trans-unit>
        <trans-unit id="e69008dcfdf00653df58396b47fd62a5606a4097" translate="yes" xml:space="preserve">
          <source>It can be passed into &lt;a href=&quot;../tpustrategy&quot;&gt;&lt;code&gt;tf.distribute.TPUStrategy&lt;/code&gt;&lt;/a&gt; to support TF2 training on Cloud TPUs.</source>
          <target state="translated">これを&lt;a href=&quot;../tpustrategy&quot;&gt; &lt;code&gt;tf.distribute.TPUStrategy&lt;/code&gt; &lt;/a&gt;に渡して、クラウドTPUでのTF2トレーニングをサポートできます。</target>
        </trans-unit>
        <trans-unit id="14d6407e1c3a121bea2730155a982791be2b5c57" translate="yes" xml:space="preserve">
          <source>It can be represented by an Integer, a TensorShape or a tuple of Integers or TensorShapes.</source>
          <target state="translated">整数、TensorShape、または整数やTensorShapeのタプルで表すことができます。</target>
        </trans-unit>
        <trans-unit id="6a2bfd7eb4e49405ccfcdad2d46274023e1bf999" translate="yes" xml:space="preserve">
          <source>It can be viewed as convenient wrapper of the following code:</source>
          <target state="translated">以下のコードの便利なラッパーとして見ることができます。</target>
        </trans-unit>
        <trans-unit id="851d18a55b1a7d8f809ccad34a86887bc5acef62" translate="yes" xml:space="preserve">
          <source>It can either wrap an existing tensor (pass an &lt;code&gt;input_tensor&lt;/code&gt; argument) or create a placeholder tensor (pass arguments &lt;code&gt;input_shape&lt;/code&gt;, and optionally, &lt;code&gt;dtype&lt;/code&gt;).</source>
          <target state="translated">既存のテンソルをラップする（ &lt;code&gt;input_tensor&lt;/code&gt; 引数を渡す）か、プレースホルダーテンソルを作成する（引数 &lt;code&gt;input_shape&lt;/code&gt; を渡し、オプションで &lt;code&gt;dtype&lt;/code&gt; を行う）ことができます。</target>
        </trans-unit>
        <trans-unit id="15ac3bcf9184c700a5153c1382ad28ba06bb3727" translate="yes" xml:space="preserve">
          <source>It crops along spatial dimensions, i.e. height and width.</source>
          <target state="translated">それは空間的な寸法、すなわち高さと幅に沿って作物を収穫します。</target>
        </trans-unit>
        <trans-unit id="d2b114021f685a568fa7427074087bbb555c68ea" translate="yes" xml:space="preserve">
          <source>It crops along the time dimension (axis 1).</source>
          <target state="translated">それは、時間次元(軸1)に沿ってトリミングされます。</target>
        </trans-unit>
        <trans-unit id="23e5e7b4e88d6267db0beb6a8ef4742eb7948a30" translate="yes" xml:space="preserve">
          <source>It determines the scale from one of input_min and input_max, then updates the other one to maximize the representable range.</source>
          <target state="translated">input_min,input_max のうちの一方からスケールを決定し,表現可能な範囲が最大になるようにもう一方のスケールを更新する.</target>
        </trans-unit>
        <trans-unit id="50c49b5169d29ab097a8aff807662666883b1d66" translate="yes" xml:space="preserve">
          <source>It does not allow cell clipping, a projection layer, and does not use peep-hole connections: it is the basic baseline.</source>
          <target state="translated">セルクリッピング、投影レイヤー、のぞき穴接続を使用しない:これが基本的なベースラインです。</target>
        </trans-unit>
        <trans-unit id="6b5f31c782dbbe7c2f3add466394784c60b5c232" translate="yes" xml:space="preserve">
          <source>It doesn't support custom saver logic (such as ExponentialMovingAverage support)</source>
          <target state="translated">カスタムセイバーロジック(ExponentialMovingAverageのサポートなど)をサポートしていません。</target>
        </trans-unit>
        <trans-unit id="45051dd91200e3bf9ba59dd2436f0164ef584605" translate="yes" xml:space="preserve">
          <source>It doesn't support multi-node distributed mode.</source>
          <target state="translated">マルチノード分散モードには対応していません。</target>
        </trans-unit>
        <trans-unit id="489f42ddeaa2f25f8e720115125e5a0a2b41d1ec" translate="yes" xml:space="preserve">
          <source>It doesn't support saveable objects other than variables (such as boosted tree support)</source>
          <target state="translated">変数以外の保存可能なオブジェクトはサポートしていません(ブーストされたツリーのサポートなど)</target>
        </trans-unit>
        <trans-unit id="80d27c6a3c091aa8b38e2cae300405b91db71c40" translate="yes" xml:space="preserve">
          <source>It draws samples from a truncated normal distribution centered on 0 with &lt;code&gt;stddev = sqrt(1 / fan_in)&lt;/code&gt; where &lt;code&gt;fan_in&lt;/code&gt; is the number of input units in the weight tensor.</source>
          <target state="translated">&lt;code&gt;stddev = sqrt(1 / fan_in)&lt;/code&gt; を使用して、0を中心とした切り詰められた正規分布からサンプルを描画します。ここで、 &lt;code&gt;fan_in&lt;/code&gt; は重みテンソルの入力単位の数です。</target>
        </trans-unit>
        <trans-unit id="b5e99b6e8055bbe5e5eab07a52b329d5a27c1e5d" translate="yes" xml:space="preserve">
          <source>It draws samples from a truncated normal distribution centered on 0 with &lt;code&gt;stddev = sqrt(2 / (fan_in + fan_out))&lt;/code&gt; where &lt;code&gt;fan_in&lt;/code&gt; is the number of input units in the weight tensor and &lt;code&gt;fan_out&lt;/code&gt; is the number of output units in the weight tensor.</source>
          <target state="translated">&lt;code&gt;stddev = sqrt(2 / (fan_in + fan_out))&lt;/code&gt; を使用して、0を中心とした切り捨て正規分布からサンプルを描画します。ここで、 &lt;code&gt;fan_in&lt;/code&gt; は重みテンソルの入力単位の数であり、 &lt;code&gt;fan_out&lt;/code&gt; は重みテンソルの出力単位の数です。</target>
        </trans-unit>
        <trans-unit id="a4e494a282bcac9914c8d339f910277f94b89c75" translate="yes" xml:space="preserve">
          <source>It draws samples from a truncated normal distribution centered on 0 with &lt;code&gt;stddev = sqrt(2 / fan_in)&lt;/code&gt; where &lt;code&gt;fan_in&lt;/code&gt; is the number of input units in the weight tensor.</source>
          <target state="translated">&lt;code&gt;stddev = sqrt(2 / fan_in)&lt;/code&gt; を使用して、0を中心とする切り詰められた正規分布からサンプルを描画します。ここで、 &lt;code&gt;fan_in&lt;/code&gt; は重みテンソルの入力単位の数です。</target>
        </trans-unit>
        <trans-unit id="1d4854b6f38f71edebdd9e6527324a084528dc03" translate="yes" xml:space="preserve">
          <source>It draws samples from a truncated normal distribution centered on 0 with standard deviation (after truncation) given by &lt;code&gt;stddev = sqrt(1 / fan_in)&lt;/code&gt; where &lt;code&gt;fan_in&lt;/code&gt; is the number of input units in the weight tensor.</source>
          <target state="translated">&lt;code&gt;stddev = sqrt(1 / fan_in)&lt;/code&gt; で与えられる標準偏差（切り捨て後）を0を中心とした切り捨てられた正規分布からサンプルを描画します。ここで、 &lt;code&gt;fan_in&lt;/code&gt; は重みテンソルの入力単位の数です。</target>
        </trans-unit>
        <trans-unit id="706d32c6afa42ca96cd3027b8882b964f42483dc" translate="yes" xml:space="preserve">
          <source>It draws samples from a truncated normal distribution centered on 0 with standard deviation (after truncation) given by &lt;code&gt;stddev = sqrt(2 / (fan_in + fan_out))&lt;/code&gt; where &lt;code&gt;fan_in&lt;/code&gt; is the number of input units in the weight tensor and &lt;code&gt;fan_out&lt;/code&gt; is the number of output units in the weight tensor.</source>
          <target state="translated">&lt;code&gt;stddev = sqrt(2 / (fan_in + fan_out))&lt;/code&gt; によって与えられる標準偏差（切り捨て後）を0を中心とした切り捨て正規分布からサンプルを描画します。ここで、 &lt;code&gt;fan_in&lt;/code&gt; は重みテンソルの入力単位の数であり、 &lt;code&gt;fan_out&lt;/code&gt; は重量テンソルの出力単位。</target>
        </trans-unit>
        <trans-unit id="5f33594cfa3f89fac81e308daeac3f28ace4e60f" translate="yes" xml:space="preserve">
          <source>It draws samples from a truncated normal distribution centered on 0 with standard deviation (after truncation) given by &lt;code&gt;stddev = sqrt(2 / fan_in)&lt;/code&gt; where &lt;code&gt;fan_in&lt;/code&gt; is the number of input units in the weight tensor.</source>
          <target state="translated">&lt;code&gt;stddev = sqrt(2 / fan_in)&lt;/code&gt; で与えられる0を中心とした標準偏差（切り捨て後）で切り捨てられた正規分布からサンプルを描画します。ここで、 &lt;code&gt;fan_in&lt;/code&gt; は重みテンソルの入力単位の数です。</target>
        </trans-unit>
        <trans-unit id="c44f8959e90c766cfbd08c0d20f313e9e3b3ed0c" translate="yes" xml:space="preserve">
          <source>It draws samples from a uniform distribution within [-limit, limit] where &lt;code&gt;limit&lt;/code&gt; is &lt;code&gt;sqrt(3 / fan_in)&lt;/code&gt; where &lt;code&gt;fan_in&lt;/code&gt; is the number of input units in the weight tensor.</source>
          <target state="translated">[-limit、limit]内の一様分布からサンプルを描画します。ここで、 &lt;code&gt;limit&lt;/code&gt; は &lt;code&gt;sqrt(3 / fan_in)&lt;/code&gt; ここで、 &lt;code&gt;fan_in&lt;/code&gt; は、重みテンソルの入力単位の数です。</target>
        </trans-unit>
        <trans-unit id="0c37fca6c106b6324e898740a4adc0fc1b97b0ac" translate="yes" xml:space="preserve">
          <source>It draws samples from a uniform distribution within [-limit, limit] where &lt;code&gt;limit&lt;/code&gt; is &lt;code&gt;sqrt(6 / (fan_in + fan_out))&lt;/code&gt; where &lt;code&gt;fan_in&lt;/code&gt; is the number of input units in the weight tensor and &lt;code&gt;fan_out&lt;/code&gt; is the number of output units in the weight tensor.</source>
          <target state="translated">[-limit、limit]内の均一分布からサンプルを描画します。ここで、 &lt;code&gt;limit&lt;/code&gt; は &lt;code&gt;sqrt(6 / (fan_in + fan_out))&lt;/code&gt; ここで、 &lt;code&gt;fan_in&lt;/code&gt; は重みテンソルの入力単位の数で、 &lt;code&gt;fan_out&lt;/code&gt; は重みの出力単位の数です。テンソル。</target>
        </trans-unit>
        <trans-unit id="d5718aadde33ef95a3c3b4c608c444a227584762" translate="yes" xml:space="preserve">
          <source>It draws samples from a uniform distribution within [-limit, limit] where &lt;code&gt;limit&lt;/code&gt; is &lt;code&gt;sqrt(6 / fan_in)&lt;/code&gt; where &lt;code&gt;fan_in&lt;/code&gt; is the number of input units in the weight tensor.</source>
          <target state="translated">[-limit、limit]内の一様分布からサンプルを描画します。ここで、 &lt;code&gt;limit&lt;/code&gt; は &lt;code&gt;sqrt(6 / fan_in)&lt;/code&gt; ここで、 &lt;code&gt;fan_in&lt;/code&gt; は、重みテンソルの入力単位の数です。</target>
        </trans-unit>
        <trans-unit id="2febf38aad008dd8d426dbf0c0eec923fb762a50" translate="yes" xml:space="preserve">
          <source>It follows the re2 syntax (&lt;a href=&quot;https://github.com/google/re2/wiki/Syntax&quot;&gt;https://github.com/google/re2/wiki/Syntax&lt;/a&gt;)</source>
          <target state="translated">re2構文に従います（&lt;a href=&quot;https://github.com/google/re2/wiki/Syntax&quot;&gt;https://github.com/google/re2/wiki/Syntax&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="2ce5558a20bb38a79c8e709107600e4d5c1bcc0e" translate="yes" xml:space="preserve">
          <source>It follows:</source>
          <target state="translated">それは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="827600f9ebad20c3d360f7ada83d7c19942edb1c" translate="yes" xml:space="preserve">
          <source>It generates one key-value pair per line. The type of table key and value are specified by &lt;code&gt;key_dtype&lt;/code&gt; and &lt;code&gt;value_dtype&lt;/code&gt;, respectively. Similarly the content of the key and value are specified by the key_index and value_index.</source>
          <target state="translated">1行に1つのキーと値のペアが生成されます。テーブルのキーと値のタイプは、それぞれ &lt;code&gt;key_dtype&lt;/code&gt; と &lt;code&gt;value_dtype&lt;/code&gt; で指定されます。同様に、キーと値の内容は、key_indexとvalue_indexによって指定されます。</target>
        </trans-unit>
        <trans-unit id="2a2d379bdfeecbddb9707ada090d34ce0eb68820" translate="yes" xml:space="preserve">
          <source>It has no &lt;code&gt;shape&lt;/code&gt; argument.</source>
          <target state="translated">&lt;code&gt;shape&lt;/code&gt; 引数はありません。</target>
        </trans-unit>
        <trans-unit id="2fde7e3aa3c7336499bb0ce7f6c8bfa735f0c7e7" translate="yes" xml:space="preserve">
          <source>It has no semantics. Multiple threads may be given the same name. The initial name is set by the constructor.</source>
          <target state="translated">これには意味がありません。複数のスレッドに同じ名前をつけることができます。初期名はコンストラクタによって設定されます。</target>
        </trans-unit>
        <trans-unit id="ed60a4b6265732d2fa03f9b15dad2f0c4814cf0b" translate="yes" xml:space="preserve">
          <source>It inserts one key-value pair into the table for each line of the file. The key and value is extracted from the whole line content, elements from the split line based on &lt;code&gt;delimiter&lt;/code&gt; or the line number (starting from zero). Where to extract the key and value from a line is specified by &lt;code&gt;key_index&lt;/code&gt; and &lt;code&gt;value_index&lt;/code&gt;.</source>
          <target state="translated">ファイルの各行のテーブルに1つのキーと値のペアを挿入します。キーと値は、行の内容全体、 &lt;code&gt;delimiter&lt;/code&gt; 基づく分割行の要素、または行番号（ゼロから開始）から抽出されます。行からキーと値を抽出する場所は、 &lt;code&gt;key_index&lt;/code&gt; と &lt;code&gt;value_index&lt;/code&gt; で指定されます。</target>
        </trans-unit>
        <trans-unit id="ff1533a7a658edcda661aa3acac6f89856e6dad8" translate="yes" xml:space="preserve">
          <source>It is a variant of Adam based on the infinity norm. Default parameters follow those provided in the paper. Adamax is sometimes superior to adam, specially in models with embeddings.</source>
          <target state="translated">これは無限大ノルムに基づいたAdamの変形です。デフォルトのパラメータは論文に記載されているものに従います。AdamaxはAdamよりも優れていることがあります。</target>
        </trans-unit>
        <trans-unit id="955c4d5479692fb3fb02dcf43ca1d09989fd795e" translate="yes" xml:space="preserve">
          <source>It is also useful if two separate functions must share a resource, but we wish to ensure the usage is exclusive.</source>
          <target state="translated">また、2つの別々の関数がリソースを共有しなければならない場合にも便利ですが、使用方法が排他的であることを確認したいと思います。</target>
        </trans-unit>
        <trans-unit id="4e8cf5144bd436ea5d5f7533e412ea077ab03b38" translate="yes" xml:space="preserve">
          <source>It is an alias to &lt;a href=&quot;../../math/reduce_std&quot;&gt;&lt;code&gt;tf.math.reduce_std&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは&lt;a href=&quot;../../math/reduce_std&quot;&gt; &lt;code&gt;tf.math.reduce_std&lt;/code&gt; の&lt;/a&gt;エイリアスです。</target>
        </trans-unit>
        <trans-unit id="f0f570f38fd92cf23fa60ef5c841b94dd8f127d9" translate="yes" xml:space="preserve">
          <source>It is an alias to &lt;a href=&quot;../../random/normal&quot;&gt;&lt;code&gt;tf.random.normal&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは&lt;a href=&quot;../../random/normal&quot;&gt; &lt;code&gt;tf.random.normal&lt;/code&gt; の&lt;/a&gt;エイリアスです。</target>
        </trans-unit>
        <trans-unit id="6cc1aebb0123c4b4407bc2e3691fc09aa422b356" translate="yes" xml:space="preserve">
          <source>It is an error if &lt;code&gt;shape&lt;/code&gt; is not 1-D.</source>
          <target state="translated">&lt;code&gt;shape&lt;/code&gt; が1-Dでない場合はエラーになります。</target>
        </trans-unit>
        <trans-unit id="3d404ea6191185d9005bf406cb6c69748b8eec2b" translate="yes" xml:space="preserve">
          <source>It is an error if the model cannot be recovered and no &lt;code&gt;init_op&lt;/code&gt; or &lt;code&gt;init_fn&lt;/code&gt; or &lt;code&gt;local_init_op&lt;/code&gt; are passed.</source>
          <target state="translated">モデルを復元できず、 &lt;code&gt;init_op&lt;/code&gt; 、 &lt;code&gt;init_fn&lt;/code&gt; 、 &lt;code&gt;local_init_op&lt;/code&gt; が渡されない場合はエラーになります。</target>
        </trans-unit>
        <trans-unit id="69dae8d4745b98f4c44352740deadff10964a8ba" translate="yes" xml:space="preserve">
          <source>It is an error to set &lt;code&gt;new_shape&lt;/code&gt; as [3, 7] since this represents a rank-2 tensor while &lt;code&gt;sp_input&lt;/code&gt; is rank-3. This is either a ValueError during graph construction (if both shapes are known) or an OpError during run time.</source>
          <target state="translated">これは、 &lt;code&gt;sp_input&lt;/code&gt; がランク3であるときにランク2のテンソルを表すため、 &lt;code&gt;new_shape&lt;/code&gt; を[ 3、7 ]として設定するとエラーになります。これは、グラフ作成時のValueError（両方の形状が既知の場合）または実行時のOpErrorのいずれかです。</target>
        </trans-unit>
        <trans-unit id="5ccfc49f1d16ffbdbdaecc99b012e0441a365f79" translate="yes" xml:space="preserve">
          <source>It is commonly observed that a monotonically decreasing learning rate, whose degree of change is carefully chosen, results in a better performing model. This function applies a polynomial decay function to a provided initial &lt;code&gt;learning_rate&lt;/code&gt; to reach an &lt;code&gt;end_learning_rate&lt;/code&gt; in the given &lt;code&gt;decay_steps&lt;/code&gt;.</source>
          <target state="translated">単調に減少する学習率は、その変化の度合いが慎重に選択されると、より優れたパフォーマンスのモデルになることが一般的に観察されています。この関数は、提供される最初に多項式減衰関数を適用 &lt;code&gt;learning_rate&lt;/code&gt; 到達する &lt;code&gt;end_learning_rate&lt;/code&gt; を与えられた中で &lt;code&gt;decay_steps&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="03e5a933480c8e3d46c5c53fb5c1fb8807a8d4c2" translate="yes" xml:space="preserve">
          <source>It is commonly observed that a monotonically decreasing learning rate, whose degree of change is carefully chosen, results in a better performing model. This schedule applies a polynomial decay function to an optimizer step, given a provided &lt;code&gt;initial_learning_rate&lt;/code&gt;, to reach an &lt;code&gt;end_learning_rate&lt;/code&gt; in the given &lt;code&gt;decay_steps&lt;/code&gt;.</source>
          <target state="translated">単調に減少する学習率は、その変化の度合いが慎重に選択されると、より優れたパフォーマンスのモデルになることが一般的に観察されています。このスケジュールは、提供所与、オプティマイザ工程に多項式減衰関数を適用 &lt;code&gt;initial_learning_rate&lt;/code&gt; 到達するために、 &lt;code&gt;end_learning_rate&lt;/code&gt; を与えで &lt;code&gt;decay_steps&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c93ff388d20bf1c51a314c792b28b638ccdd22f0" translate="yes" xml:space="preserve">
          <source>It is computed as:</source>
          <target state="translated">として計算されます。</target>
        </trans-unit>
        <trans-unit id="fe4b2f8c7d8951354526292dd7c61c73dc1e2912" translate="yes" xml:space="preserve">
          <source>It is considered legacy, and we recommend the use of &lt;a href=&quot;../../../keras/layers/layer&quot;&gt;&lt;code&gt;tf.keras.layers.Layer&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">これはレガシーと&lt;a href=&quot;../../../keras/layers/layer&quot;&gt; &lt;code&gt;tf.keras.layers.Layer&lt;/code&gt; &lt;/a&gt;代わりにtf.keras.layers.Layerの使用をお勧めします。</target>
        </trans-unit>
        <trans-unit id="ca77b624a75c9021a46466722c1068b482eb54c8" translate="yes" xml:space="preserve">
          <source>It is difficult or expensive to express the desired transform with vectorized operations.</source>
          <target state="translated">目的の変換をベクトル化された演算で表現することは困難であるか、または高価である。</target>
        </trans-unit>
        <trans-unit id="6cf416effc655d4fb910a766ac33121955c51ad5" translate="yes" xml:space="preserve">
          <source>It is difficult to map expected label by a classifier such as &lt;code&gt;DNNClassifier&lt;/code&gt; to corresponding tf.parse_example spec. This utility encodes it by getting related information from users (key, dtype).</source>
          <target state="translated">&lt;code&gt;DNNClassifier&lt;/code&gt; などの分類子によって期待されるラベルを対応するtf.parse_example仕様にマッピングすることは困難です。このユーティリティは、ユーザー（キー、dtype）から関連情報を取得することでエンコードします。</target>
        </trans-unit>
        <trans-unit id="d4595134772db8c55f6625b52919e18fd5135f7c" translate="yes" xml:space="preserve">
          <source>It is difficult to map expected label by a regressor such as &lt;code&gt;DNNRegressor&lt;/code&gt; to corresponding tf.parse_example spec. This utility encodes it by getting related information from users (key, dtype).</source>
          <target state="translated">&lt;code&gt;DNNRegressor&lt;/code&gt; などのリグレッサが予期するラベルを対応するtf.parse_example仕様にマッピングすることは困難です。このユーティリティは、ユーザー（キー、dtype）から関連情報を取得することでエンコードします。</target>
        </trans-unit>
        <trans-unit id="230736ba631f5bba2d333739bd324940edb51e40" translate="yes" xml:space="preserve">
          <source>It is equivalent to a combination of decode and crop, but much faster by only decoding partial jpeg image.</source>
          <target state="translated">デコードとクロップの組み合わせに相当しますが、部分的なjpeg画像だけをデコードすることでより高速になります。</target>
        </trans-unit>
        <trans-unit id="f482cc1679df2f8fe4d9714245cd09b761e0e0a1" translate="yes" xml:space="preserve">
          <source>It is expected to call &lt;code&gt;call_for_each_replica(fn, ...)&lt;/code&gt; for any operations which potentially can be replicated across replicas (i.e. multiple GPUs) even if there is only CPU or one GPU. When defining the &lt;code&gt;fn&lt;/code&gt;, extra caution needs to be taken:</source>
          <target state="translated">CPUまたはGPUが1つしかない場合でも、レプリカ（つまり、複数のGPU）間で複製できる可能性のある操作については &lt;code&gt;call_for_each_replica(fn, ...)&lt;/code&gt; を呼び出すことが期待されています。 &lt;code&gt;fn&lt;/code&gt; を定義するときは、さらに注意が必要です。</target>
        </trans-unit>
        <trans-unit id="055fe1b6696e0cb19f02734d3009620768799505" translate="yes" xml:space="preserve">
          <source>It is generally recommend to use the functional layer API via &lt;code&gt;Input&lt;/code&gt;, (which creates an &lt;code&gt;InputLayer&lt;/code&gt;) without directly using &lt;code&gt;InputLayer&lt;/code&gt;.</source>
          <target state="translated">一般的に介して機能層のAPIを使用することを推奨されている &lt;code&gt;Input&lt;/code&gt; （作成する、 &lt;code&gt;InputLayer&lt;/code&gt; を直接使用せずに） &lt;code&gt;InputLayer&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="0c1dce56c1c334dd954c808267845c4fe7fb7b16" translate="yes" xml:space="preserve">
          <source>It is okay to call SmartUnsetAll() repeatedly, as later calls have no effect if no SmartSet() calls have been made.</source>
          <target state="translated">SmartSet()の呼び出しが行われていなければ、後の呼び出しは何の効果もないので、SmartUnsetAll()を繰り返し呼び出しても構いません。</target>
        </trans-unit>
        <trans-unit id="cbc09d683ec73ca98ba02f3223c5c735b9c8958d" translate="yes" xml:space="preserve">
          <source>It is okay to call UnsetAll() repeatedly, as later calls have no effect if no Set() calls have been made.</source>
          <target state="translated">UnsetAll()を繰り返しコールしても問題ありません。</target>
        </trans-unit>
        <trans-unit id="039e1ffae676b4a9189fbfca71673de319a2eb02" translate="yes" xml:space="preserve">
          <source>It is passed a &lt;a href=&quot;../session&quot;&gt;&lt;code&gt;tf.compat.v1.Session&lt;/code&gt;&lt;/a&gt; in addition to &lt;code&gt;args&lt;/code&gt; and &lt;code&gt;kwargs&lt;/code&gt;. The function typically runs one training step in the session.</source>
          <target state="translated">&lt;code&gt;args&lt;/code&gt; と &lt;code&gt;kwargs&lt;/code&gt; に加えて、&lt;a href=&quot;../session&quot;&gt; &lt;code&gt;tf.compat.v1.Session&lt;/code&gt; &lt;/a&gt;が渡されます。この関数は通常、セッションで1つのトレーニングステップを実行します。</target>
        </trans-unit>
        <trans-unit id="aca1618972ec9b371117c6d5a8231067b2c91856" translate="yes" xml:space="preserve">
          <source>It is possible that not all nodes can be split on each feature. Hence, the list of possible nodes can differ between the features. Therefore, we return &lt;code&gt;node_ids_list&lt;/code&gt; for each feature, containing the list of nodes that this feature can be used to split.</source>
          <target state="translated">すべてのノードを各機能で分割できるわけではない可能性があります。したがって、可能なノードのリストは機能間で異なる可能性があります。したがって、各機能の &lt;code&gt;node_ids_list&lt;/code&gt; を返します。これには、この機能を使用して分割できるノードのリストが含まれています。</target>
        </trans-unit>
        <trans-unit id="4edaba6091fd1339a6d60adfd68c1d64381243cd" translate="yes" xml:space="preserve">
          <source>It is preferable to use the numerically stabler function &lt;code&gt;i0e(x)&lt;/code&gt; instead.</source>
          <target state="translated">代わりに、数値的に安定した関数 &lt;code&gt;i0e(x)&lt;/code&gt; を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="b32ab7a8ad30e94f34a9078c64b561ecc649a7ac" translate="yes" xml:space="preserve">
          <source>It is preferable to use the numerically stabler function &lt;code&gt;i1e(x)&lt;/code&gt; instead.</source>
          <target state="translated">代わりに、数値的に安定した関数 &lt;code&gt;i1e(x)&lt;/code&gt; を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="6b93771e2eea8ed58862ab78dc26277eff1f5044" translate="yes" xml:space="preserve">
          <source>It is preferable to use the numerically stabler function &lt;code&gt;k0e(x)&lt;/code&gt; instead.</source>
          <target state="translated">代わりに、数値的に安定した関数 &lt;code&gt;k0e(x)&lt;/code&gt; を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="a499a0cf38aa059c98a94a9f0254d7566a3ef4d2" translate="yes" xml:space="preserve">
          <source>It is preferable to use the numerically stabler function &lt;code&gt;k1e(x)&lt;/code&gt; instead.</source>
          <target state="translated">代わりに、数値的に安定した関数 &lt;code&gt;k1e(x)&lt;/code&gt; を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="5b68cac92e718665f740d5404a0bac254e090156" translate="yes" xml:space="preserve">
          <source>It is recommended to accept tensors only in the first argument. This way, all tensors are casted to the layer's compute dtype. &lt;code&gt;MyLayer&lt;/code&gt; should therefore be written as:</source>
          <target state="translated">最初の引数でのみテンソルを受け入れることをお勧めします。このようにして、すべてのテンソルがレイヤーの計算dtypeにキャストされます。したがって、 &lt;code&gt;MyLayer&lt;/code&gt; は次のように記述する必要があります。</target>
        </trans-unit>
        <trans-unit id="b8a6022b1da15bcd7ce9fa43852b7ff4b3a38075" translate="yes" xml:space="preserve">
          <source>It is recommended to benchmark each in the setting of interest to pick the most efficient one (in terms of speed and memory usage). Correct choice of implementation can lead to dramatic speed improvements (e.g. 50X), potentially at the expense of RAM.</source>
          <target state="translated">興味のある設定でそれぞれのベンチマークを行い、最も効率的なものを選ぶことをお勧めします(速度とメモリ使用量の観点から)。実装を正しく選択すれば、RAMを犠牲にしても劇的な速度向上(例:50倍)につながる可能性があります。</target>
        </trans-unit>
        <trans-unit id="de80edb49783b8cb8ef6ce6354c0c43e1747ba2d" translate="yes" xml:space="preserve">
          <source>It is recommended to call this method like this:</source>
          <target state="translated">このように、このメソッドを呼び出すことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="7f32b049c5b6760e31f453ac16ca6b1bd157e5d8" translate="yes" xml:space="preserve">
          <source>It is recommended to pass all args via name.</source>
          <target state="translated">すべての引数を名前で渡すことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="826574bd08bd207a37a5ac7010635a34563d3f0d" translate="yes" xml:space="preserve">
          <source>It is required that 1 &amp;lt;= N &amp;lt;= 3.</source>
          <target state="translated">1 &amp;lt;= N &amp;lt;= 3である必要があります。</target>
        </trans-unit>
        <trans-unit id="4ab75a5dfd5237dbd24c019f2a7b88bf53a10583" translate="yes" xml:space="preserve">
          <source>It is similar to an LSTM layer, but the input transformations and recurrent transformations are both convolutional.</source>
          <target state="translated">これはLSTM層に似ていますが、入力変換とリカレント変換の両方が畳み込みです。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
