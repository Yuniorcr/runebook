<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="tensorflow">
    <body>
      <group id="tensorflow">
        <trans-unit id="6ed2ecdaa3bd96954ea77dce173719510eac3340" translate="yes" xml:space="preserve">
          <source>The ID of the module which registered the flag with this name. If no such module exists (i.e. no flag with this name exists), we return default.</source>
          <target state="translated">この名前のフラグを登録したモジュールのID。そのようなモジュールが存在しない場合(つまり、この名前のフラグが存在しない場合)は、デフォルトを返します。</target>
        </trans-unit>
        <trans-unit id="cc574746ad8c9b3dfc37ed70a6e4e32342676b91" translate="yes" xml:space="preserve">
          <source>The IDCT type to perform. Must be 1, 2, 3 or 4.</source>
          <target state="translated">実行するIDCTのタイプ。1,2,3,4 のいずれかでなければなりません。</target>
        </trans-unit>
        <trans-unit id="87056d72e53edb8e1ee915616502d31a9e2351aa" translate="yes" xml:space="preserve">
          <source>The Keras functional API in TensorFlow</source>
          <target state="translated">TensorFlowのKeras機能API</target>
        </trans-unit>
        <trans-unit id="4d52998a6cc31a940d4ebb5910a3ac5329dbc67f" translate="yes" xml:space="preserve">
          <source>The Kubernetes client (usually automatically retrieved using &lt;code&gt;from kubernetes import client as k8sclient&lt;/code&gt;). If you pass this in, you are responsible for setting Kubernetes credentials manually.</source>
          <target state="translated">Kubernetesクライアント（通常 &lt;code&gt;from kubernetes import client as k8sclient&lt;/code&gt; 自動的に取得されます）。これを渡す場合は、Kubernetes認証情報を手動で設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="36e14ec6d1ffdc156a9c3f1daa6d9890ec3b1e0e" translate="yes" xml:space="preserve">
          <source>The L1 regularization penalty is computed as:</source>
          <target state="translated">L1正則化ペナルティは次のように計算されます。</target>
        </trans-unit>
        <trans-unit id="542768df94a1b938a660f48e17ba6915139cc683" translate="yes" xml:space="preserve">
          <source>The L1 regularization penalty is computed as: &lt;code&gt;loss = l1 * reduce_sum(abs(x))&lt;/code&gt;</source>
          <target state="translated">L1正則化ペナルティは次のように計算されます &lt;code&gt;loss = l1 * reduce_sum(abs(x))&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5c4ad0ec53302f5554ee8c8eb2b239ae6b215ee1" translate="yes" xml:space="preserve">
          <source>The L2 regularization penalty is computed as</source>
          <target state="translated">L2正則化ペナルティは次のように計算されます。</target>
        </trans-unit>
        <trans-unit id="d1be35376788281d0763761fe0b7decbcf96e523" translate="yes" xml:space="preserve">
          <source>The L2 regularization penalty is computed as &lt;code&gt;loss = l2 * reduce_sum(square(x))&lt;/code&gt;</source>
          <target state="translated">L2正則化ペナルティは、 &lt;code&gt;loss = l2 * reduce_sum(square(x))&lt;/code&gt; として計算されます。</target>
        </trans-unit>
        <trans-unit id="0f994e1d48c4b2ebd97fc4c0f1abd04009e95050" translate="yes" xml:space="preserve">
          <source>The L2 regularization penalty is computed as:</source>
          <target state="translated">L2正則化ペナルティは次のように計算されます。</target>
        </trans-unit>
        <trans-unit id="3f0fa67aec74dc973d97bbb91f9762fcefa49c81" translate="yes" xml:space="preserve">
          <source>The L2 regularization penalty is computed as: &lt;code&gt;loss = l2 * reduce_sum(square(x))&lt;/code&gt;</source>
          <target state="translated">L2正則化ペナルティは次のように計算されます &lt;code&gt;loss = l2 * reduce_sum(square(x))&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e7557d40db7eef29f9f5cf0c8852c6278d915ffe" translate="yes" xml:space="preserve">
          <source>The Laplace distribution with location &lt;code&gt;loc&lt;/code&gt; and &lt;code&gt;scale&lt;/code&gt; parameters.</source>
          <target state="translated">ロケーション &lt;code&gt;loc&lt;/code&gt; および &lt;code&gt;scale&lt;/code&gt; パラメーターを使用したラプラス分布。</target>
        </trans-unit>
        <trans-unit id="cf61c2fbf2839d5025a99155287ab24829dc5c40" translate="yes" xml:space="preserve">
          <source>The Lightning Memory-Mapped Database Manager, or LMDB, is an embedded binary key-value database. This dataset can read the contents of LMDB database files, the names of which generally have the &lt;code&gt;.mdb&lt;/code&gt; suffix.</source>
          <target state="translated">Lightning Memory-Mapped Database Manager（LMDB）は、組み込みのバイナリKey-Valueデータベースです。このデータセットは、LMDBデータベースファイルの内容を読み取ることができます。LMDBデータベースファイルの名前には、通常、 &lt;code&gt;.mdb&lt;/code&gt; サフィックスが付いています。</target>
        </trans-unit>
        <trans-unit id="4f02ec145e8b375175cc81c541eb3f581408f36f" translate="yes" xml:space="preserve">
          <source>The Lpalce distribution is a member of the &lt;a href=&quot;https://en.wikipedia.org/wiki/Location-scale_family&quot;&gt;location-scale family&lt;/a&gt;, i.e., it can be constructed as,</source>
          <target state="translated">Lpalce分布は、&lt;a href=&quot;https://en.wikipedia.org/wiki/Location-scale_family&quot;&gt;ロケーションスケールファミリーの&lt;/a&gt;メンバーです。つまり、次のように構成できます。</target>
        </trans-unit>
        <trans-unit id="179fc5d20bec0f4afac4c22aa43296f1c61f1b50" translate="yes" xml:space="preserve">
          <source>The Multinomial is a distribution over &lt;code&gt;K&lt;/code&gt;-class counts, i.e., a length-&lt;code&gt;K&lt;/code&gt; vector of non-negative integer &lt;code&gt;counts = n = [n_0, ..., n_{K-1}]&lt;/code&gt;.</source>
          <target state="translated">多項式は、 &lt;code&gt;K&lt;/code&gt; クラスカウントの分布です。つまり、非負の整数 &lt;code&gt;counts = n = [n_0, ..., n_{K-1}]&lt;/code&gt; 長さ &lt;code&gt;K&lt;/code&gt; のベクトル= n = [n_0、...、n_ {K-1}]です。</target>
        </trans-unit>
        <trans-unit id="024145881176dd778a381db52296681ba8110801" translate="yes" xml:space="preserve">
          <source>The Normal distribution is a member of the &lt;a href=&quot;https://en.wikipedia.org/wiki/Location-scale_family&quot;&gt;location-scale family&lt;/a&gt;, i.e., it can be constructed as,</source>
          <target state="translated">正規分布は、&lt;a href=&quot;https://en.wikipedia.org/wiki/Location-scale_family&quot;&gt;ロケーションスケールファミリーの&lt;/a&gt;メンバーです。つまり、次のように構成できます。</target>
        </trans-unit>
        <trans-unit id="7626aa48ba3874551b7938ac31ee1cdb369fcdfb" translate="yes" xml:space="preserve">
          <source>The Normal distribution with location &lt;code&gt;loc&lt;/code&gt; and &lt;code&gt;scale&lt;/code&gt; parameters.</source>
          <target state="translated">位置 &lt;code&gt;loc&lt;/code&gt; と &lt;code&gt;scale&lt;/code&gt; パラメーターを持つ正規分布。</target>
        </trans-unit>
        <trans-unit id="a5d10a5e52f889fef0937f17600830c2e3265076" translate="yes" xml:space="preserve">
          <source>The OK difference between compared values.</source>
          <target state="translated">比較した値の違いでOK。</target>
        </trans-unit>
        <trans-unit id="61bb4d6d17edca6217e2b2286030e9ba936a8932" translate="yes" xml:space="preserve">
          <source>The Optimizer instance to wrap.</source>
          <target state="translated">ラップするOptimizerインスタンス。</target>
        </trans-unit>
        <trans-unit id="20cd1c5b899f8db8c65884d1566d810b08070a16" translate="yes" xml:space="preserve">
          <source>The Python API &lt;a href=&quot;../data/experimental/parallel_interleave&quot;&gt;&lt;code&gt;tf.data.experimental.parallel_interleave&lt;/code&gt;&lt;/a&gt; creates instances of this op. &lt;a href=&quot;../data/experimental/parallel_interleave&quot;&gt;&lt;code&gt;tf.data.experimental.parallel_interleave&lt;/code&gt;&lt;/a&gt; is a deprecated API.</source>
          <target state="translated">Python API &lt;a href=&quot;../data/experimental/parallel_interleave&quot;&gt; &lt;code&gt;tf.data.experimental.parallel_interleave&lt;/code&gt; &lt;/a&gt;は、この操作のインスタンスを作成します。&lt;a href=&quot;../data/experimental/parallel_interleave&quot;&gt; &lt;code&gt;tf.data.experimental.parallel_interleave&lt;/code&gt; &lt;/a&gt;は非推奨のAPIです。</target>
        </trans-unit>
        <trans-unit id="b0bdc97d45fdd9ed6ed73f745bcb974b2865e78b" translate="yes" xml:space="preserve">
          <source>The Python string encoding to use. Defaults to &lt;code&gt;'utf-8'&lt;/code&gt;.</source>
          <target state="translated">使用するPython文字列エンコーディング。デフォルトは &lt;code&gt;'utf-8'&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ef840b903d3e772791466fbdbfc1be244accb53f" translate="yes" xml:space="preserve">
          <source>The Python type for values that are compatible with this TypeSpec.</source>
          <target state="translated">このTypeSpecと互換性のある値のPython型。</target>
        </trans-unit>
        <trans-unit id="c6c5a52f571080e818c0861dc1504abe80f61cf9" translate="yes" xml:space="preserve">
          <source>The RGB tensor to convert. The last dimension must have size 3 and should contain RGB values.</source>
          <target state="translated">変換するRGBテンソル。最後の次元はサイズ3で、RGB値を含む必要があります。</target>
        </trans-unit>
        <trans-unit id="55ebecb1d7e2330ca5e012023168889f2960e982" translate="yes" xml:space="preserve">
          <source>The RNG algorithm id (a Python integer or scalar integer Tensor).</source>
          <target state="translated">RNGアルゴリズムのid(Pythonの整数またはスカラー整数のTensor)。</target>
        </trans-unit>
        <trans-unit id="cb43dc4932964141b3fdd553bcbf71855032420a" translate="yes" xml:space="preserve">
          <source>The RNG algorithm.</source>
          <target state="translated">RNGアルゴリズムです。</target>
        </trans-unit>
        <trans-unit id="76339cee66ec7159c145a078be1135ca3e02b709" translate="yes" xml:space="preserve">
          <source>The RNN inputs. If &lt;code&gt;time_major == False&lt;/code&gt; (default), this must be a &lt;code&gt;Tensor&lt;/code&gt; of shape: &lt;code&gt;[batch_size, max_time, ...]&lt;/code&gt;, or a nested tuple of such elements. If &lt;code&gt;time_major == True&lt;/code&gt;, this must be a &lt;code&gt;Tensor&lt;/code&gt; of shape: &lt;code&gt;[max_time, batch_size, ...]&lt;/code&gt;, or a nested tuple of such elements. This may also be a (possibly nested) tuple of Tensors satisfying this property. The first two dimensions must match across all the inputs, but otherwise the ranks and other shape components may differ. In this case, input to &lt;code&gt;cell&lt;/code&gt; at each time-step will replicate the structure of these tuples, except for the time dimension (from which the time is taken). The input to &lt;code&gt;cell&lt;/code&gt; at each time step will be a &lt;code&gt;Tensor&lt;/code&gt; or (possibly nested) tuple of Tensors each with dimensions &lt;code&gt;[batch_size, ...]&lt;/code&gt;.</source>
          <target state="translated">RNN入力。場合 &lt;code&gt;time_major == False&lt;/code&gt; （デフォルト）、これがなければなりません &lt;code&gt;Tensor&lt;/code&gt; ：形状の &lt;code&gt;[batch_size, max_time, ...]&lt;/code&gt; 、またはそのような要素のネストされたタプル。 &lt;code&gt;time_major == True&lt;/code&gt; 場合、これは形状の &lt;code&gt;Tensor&lt;/code&gt; &lt;code&gt;[max_time, batch_size, ...]&lt;/code&gt; 、またはそのような要素のネストされたタプルである必要があります。これは、このプロパティを満たすテンソルの（おそらくネストされた）タプルである可能性もあります。最初の2つの次元はすべての入力で一致する必要がありますが、そうでない場合、ランクやその他の形状コンポーネントが異なる場合があります。この場合、各タイムステップでの &lt;code&gt;cell&lt;/code&gt; への入力は、時間ディメンション（時間がかかる）を除いて、これらのタプルの構造を複製します。 &lt;code&gt;cell&lt;/code&gt; への入力各タイムステップで、 &lt;code&gt;Tensor&lt;/code&gt; または（場合によってはネストされた）テンソルのタプルになり、それぞれの次元は &lt;code&gt;[batch_size, ...]&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="86a6adce8d77079953ad4cee35e139a001725441" translate="yes" xml:space="preserve">
          <source>The RNN inputs. If time_major == False (default), this must be a tensor of shape: &lt;code&gt;[batch_size, max_time, ...]&lt;/code&gt;, or a nested tuple of such elements. If time_major == True, this must be a tensor of shape: &lt;code&gt;[max_time, batch_size, ...]&lt;/code&gt;, or a nested tuple of such elements.</source>
          <target state="translated">RNN入力。time_major == False（デフォルト）の場合、これは形状のテンソルである必要があります： &lt;code&gt;[batch_size, max_time, ...]&lt;/code&gt; 、またはそのような要素のネストされたタプル。time_major == Trueの場合、これは形状のテンソル &lt;code&gt;[max_time, batch_size, ...]&lt;/code&gt; 、またはそのような要素のネストされたタプルである必要があります。</target>
        </trans-unit>
        <trans-unit id="fbcdb35da9c3d356564a35feaefe2aec308e6f5b" translate="yes" xml:space="preserve">
          <source>The RNN output &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="translated">RNN出力 &lt;code&gt;Tensor&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8edcb3ff2e37ea406f1dfe82fa8ca8a4f0949af0" translate="yes" xml:space="preserve">
          <source>The RPC layer TensorFlow should use to communicate across instances.</source>
          <target state="translated">TensorFlowがインスタンス間の通信に使用するRPCレイヤー。</target>
        </trans-unit>
        <trans-unit id="5cf01358783b1025c197ff7c7e5d39c6fec8ac09" translate="yes" xml:space="preserve">
          <source>The RaggedTensor to slice.</source>
          <target state="translated">スライスするRaggedTensor。</target>
        </trans-unit>
        <trans-unit id="d5a45b5478a38a615eea2684c2d241f9352d6680" translate="yes" xml:space="preserve">
          <source>The SDCA algorithm was originally introduced in [1] and it was followed by the L1 proximal step [2], a distributed version [3] and adaptive sampling [4]. [1] www.jmlr.org/papers/volume14/shalev-shwartz13a/shalev-shwartz13a.pdf [2] &lt;a href=&quot;https://arxiv.org/pdf/1309.2375.pdf&quot;&gt;https://arxiv.org/pdf/1309.2375.pdf&lt;/a&gt; [3] &lt;a href=&quot;https://arxiv.org/pdf/1502.03508.pdf&quot;&gt;https://arxiv.org/pdf/1502.03508.pdf&lt;/a&gt; [4] &lt;a href=&quot;https://arxiv.org/pdf/1502.08053.pdf&quot;&gt;https://arxiv.org/pdf/1502.08053.pdf&lt;/a&gt; Details specific to this implementation are provided in: &lt;a href=&quot;https://github.com/tensorflow/estimator/tree/master/tensorflow_estimator/python/estimator/canned/linear_optimizer/doc/sdca.ipynb&quot;&gt;https://github.com/tensorflow/estimator/tree/master/tensorflow_estimator/python/estimator/canned/linear_optimizer/doc/sdca.ipynb&lt;/a&gt;</source>
          <target state="translated">SDCAアルゴリズムは元々[1]で導入され、その後にL1近位ステップ[2]、分散バージョン[3]、および適応サンプリング[4]が続きました。 [1] www.jmlr.org/papers/volume14/shalev-shwartz13a/shalev-shwartz13a.pdf [2] &lt;a href=&quot;https://arxiv.org/pdf/1309.2375.pdf&quot;&gt;https://arxiv.org/pdf/1309.2375.pdf&lt;/a&gt; [3] &lt;a href=&quot;https://arxiv.org/pdf/1502.03508.pdf&quot;&gt;https://arxiv.org/pdf /1502.03508.pdf&lt;/a&gt; [4] &lt;a href=&quot;https://arxiv.org/pdf/1502.08053.pdf&quot;&gt;https://arxiv.org/pdf/1502.08053.pdf&lt;/a&gt;この実装に固有の詳細は、&lt;a href=&quot;https://github.com/tensorflow/estimator/tree/master/tensorflow_estimator/python/estimator/canned/linear_optimizer/doc/sdca.ipynb&quot;&gt;https&lt;/a&gt;：//github.com/tensorflow/estimator/tree/master/tensorflow_estimator/python/estimatorで提供されています。 /canned/linear_optimizer/doc/sdca.ipynb</target>
        </trans-unit>
        <trans-unit id="930b59a35037eb9f2e4f2e6718a1e37b8aaa1b56" translate="yes" xml:space="preserve">
          <source>The SDCA algorithm was originally introduced in [1] and it was followed by the L1 proximal step [2], a distributed version [3] and adaptive sampling [4]. [1] www.jmlr.org/papers/volume14/shalev-shwartz13a/shalev-shwartz13a.pdf [2] https://arxiv.org/pdf/1309.2375.pdf [3] https://arxiv.org/pdf/1502.03508.pdf [4] https://arxiv.org/pdf/1502.08053.pdf Details specific to this implementation are provided in: https://github.com/tensorflow/estimator/tree/master/tensorflow_estimator/python/estimator/canned/linear_optimizer/doc/sdca.ipynb</source>
          <target state="translated">SDCAアルゴリズムは元々[1]で導入され、L1近位ステップ[2]、分散版[3]、適応サンプリング[4]と続きました。[1]www.jmlr.org/papers/volume14/shalev-shwartz13a/shalev-shwartz13a.pdf [2]https://arxiv.org/pdf/1309.2375.pdf [3]https://arxiv.org/pdf/1502.03508.pdf [4]https://arxiv.org/pdf/1502.08053.pdf この実装に固有の詳細は、https://github.com/tensorflow/estimator/tree/master/tensorflow_estimator/python/estimator/canned/linear_optimizer/doc/sdca.ipynb に記載されています。</target>
        </trans-unit>
        <trans-unit id="f7780b9525d55737cd5cef56696d5858bdaaf0de" translate="yes" xml:space="preserve">
          <source>The SavedModel directory to load from.</source>
          <target state="translated">ロード元の SavedModel ディレクトリ。</target>
        </trans-unit>
        <trans-unit id="a77ce4bc58a785318ac8e94fd8eec273d01ff9a4" translate="yes" xml:space="preserve">
          <source>The SavedModel serialization path uses &lt;a href=&quot;../../saved_model/save&quot;&gt;&lt;code&gt;tf.saved_model.save&lt;/code&gt;&lt;/a&gt; to save the model and all trackable objects attached to the model (e.g. layers and variables). &lt;code&gt;@tf.function&lt;/code&gt;-decorated methods are also saved. Additional trackable objects and functions are added to the SavedModel to allow the model to be loaded back as a Keras Model object.</source>
          <target state="translated">SavedModelシリアライゼーションパスは、&lt;a href=&quot;../../saved_model/save&quot;&gt; &lt;code&gt;tf.saved_model.save&lt;/code&gt; &lt;/a&gt;を使用して、モデルとモデルにアタッチされているすべての追跡可能なオブジェクト（レイヤーや変数など）を保存します。 &lt;code&gt;@tf.function&lt;/code&gt; -decoratedメソッドも保存されます。追加の追跡可能なオブジェクトと関数がSavedModelに追加され、モデルをKerasモデルオブジェクトとして再度ロードできるようになります。</target>
        </trans-unit>
        <trans-unit id="303d5e3e630192c45b52ffe0ee781cadd1bb5c9c" translate="yes" xml:space="preserve">
          <source>The SavedModel will load in TensorFlow Serving and supports the &lt;a href=&quot;https://github.com/tensorflow/serving/blob/master/tensorflow_serving/apis/predict.proto&quot;&gt;Predict API&lt;/a&gt;. To use the Classify, Regress, or MultiInference APIs, please use either &lt;a href=&quot;https://www.tensorflow.org/api_docs/python/tf/estimator/Estimator&quot;&gt;tf.Estimator&lt;/a&gt; or the lower level &lt;a href=&quot;https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/saved_model/README.md&quot;&gt;SavedModel APIs&lt;/a&gt;.</source>
          <target state="translated">SavedModelはTensorFlowServingに読み込まれ、PredictAPIをサポートし&lt;a href=&quot;https://github.com/tensorflow/serving/blob/master/tensorflow_serving/apis/predict.proto&quot;&gt;ます&lt;/a&gt;。Classify、Regress、またはMultiInference APIを使用するには、&lt;a href=&quot;https://www.tensorflow.org/api_docs/python/tf/estimator/Estimator&quot;&gt;tf.Estimator&lt;/a&gt;または下位レベルの&lt;a href=&quot;https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/saved_model/README.md&quot;&gt;SavedModelAPIの&lt;/a&gt;いずれかを使用してください。</target>
        </trans-unit>
        <trans-unit id="ec1d78c7c8d9476450024b537502a2e94f916edd" translate="yes" xml:space="preserve">
          <source>The Scaled Exponential Linear Unit (SELU) activation function is defined as:</source>
          <target state="translated">尺度指数線形単位(SELU)活性化関数は次のように定義されます。</target>
        </trans-unit>
        <trans-unit id="60a134651d9227079722cdc9e74feb1653be5aa4" translate="yes" xml:space="preserve">
          <source>The Scaled Exponential Linear Unit (SELU) activation function is: &lt;code&gt;scale * x&lt;/code&gt; if &lt;code&gt;x &amp;gt; 0&lt;/code&gt; and &lt;code&gt;scale * alpha * (exp(x) - 1)&lt;/code&gt; if &lt;code&gt;x &amp;lt; 0&lt;/code&gt; where &lt;code&gt;alpha&lt;/code&gt; and &lt;code&gt;scale&lt;/code&gt; are pre-defined constants (&lt;code&gt;alpha = 1.67326324&lt;/code&gt; and &lt;code&gt;scale = 1.05070098&lt;/code&gt;). The SELU activation function multiplies &lt;code&gt;scale&lt;/code&gt; &amp;gt; 1 with the &lt;code&gt;[elu](https://www.tensorflow.org/versions/r2.0/api_docs/python/tf/keras/activations/elu)&lt;/code&gt; (Exponential Linear Unit (ELU)) to ensure a slope larger than one for positive net inputs.</source>
          <target state="translated">スケーリング指数リニアユニット（SELU）活性化関数である： &lt;code&gt;scale * x&lt;/code&gt; であれば &lt;code&gt;x &amp;gt; 0&lt;/code&gt; と &lt;code&gt;scale * alpha * (exp(x) - 1)&lt;/code&gt; であれば &lt;code&gt;x &amp;lt; 0&lt;/code&gt; &lt;code&gt;alpha&lt;/code&gt; 及び &lt;code&gt;scale&lt;/code&gt; 事前定義された定数（ &lt;code&gt;alpha = 1.67326324&lt;/code&gt; と &lt;code&gt;scale = 1.05070098&lt;/code&gt; ）。SELUアクティベーション関数は、 &lt;code&gt;[elu](https://www.tensorflow.org/versions/r2.0/api_docs/python/tf/keras/activations/elu)&lt;/code&gt; で &lt;code&gt;scale&lt;/code&gt; &amp;gt; 1を乗算します（指数線形単位（ELU））正の正味入力に対して1より大きい勾配を確保するため。</target>
        </trans-unit>
        <trans-unit id="8c9823ad487742ec2d729142bb77debf58c1e901" translate="yes" xml:space="preserve">
          <source>The SignatureDef will specify outputs as described in this ExportOutput, and will use the provided receiver_tensors as inputs.</source>
          <target state="translated">SignatureDef は、この ExportOutput に記述されているように出力を指定し、与えられた receiver_tensors を入力として使用する。</target>
        </trans-unit>
        <trans-unit id="f8a1119122b895a52e2361e72bc315143919a691" translate="yes" xml:space="preserve">
          <source>The SimpleClusterResolver does not do automatic detection of accelerators, and thus all arguments are unused and we simply return the value provided in the constructor.</source>
          <target state="translated">SimpleClusterResolver はアクセラレータの自動検出を行いませんので、すべての引数は使用されず、単にコンストラクタで与えられた値を返します。</target>
        </trans-unit>
        <trans-unit id="4545224fedce8f364aa3fd2d6cac68ea4817f884" translate="yes" xml:space="preserve">
          <source>The SimpleClusterResolver does not do automatic detection of accelerators, so a TensorFlow session will never be created, and thus all arguments are unused and we simply assume that the type of accelerator is a GPU and return the value in provided to us in the constructor.</source>
          <target state="translated">SimpleClusterResolver はアクセラレータの自動検出を行いませんので、TensorFlow セッションが作成されることはなく、すべての引数は使用されず、アクセラレータのタイプが GPU であると仮定し、コンストラクタで提供された値を返します。</target>
        </trans-unit>
        <trans-unit id="069bf31d9ffb91c874ca093882e0a6589ff1df14" translate="yes" xml:space="preserve">
          <source>The SparseAdd op calculates A + B, where A, B, and the sum are all represented as &lt;code&gt;SparseTensor&lt;/code&gt; objects. This op takes in the upstream gradient w.r.t. non-empty values of the sum, and outputs the gradients w.r.t. the non-empty values of A and B.</source>
          <target state="translated">SparseAddopはA + Bを計算します。ここで、A、B、および合計はすべて &lt;code&gt;SparseTensor&lt;/code&gt; オブジェクトとして表されます。この操作は、合計の空でない値のアップストリーム勾配を取り込み、AとBの空でない値の勾配を出力します。</target>
        </trans-unit>
        <trans-unit id="3870013c51b6be5e7f15c3e32c4df520066f45b2" translate="yes" xml:space="preserve">
          <source>The SparseTensor to reduce. Should have numeric type.</source>
          <target state="translated">削減するスパーステンソル.数値型でなければなりません。</target>
        </trans-unit>
        <trans-unit id="95d35b03ae5ea7cdb3cc356783df4e423a2dc6c1" translate="yes" xml:space="preserve">
          <source>The StudentT distribution is a member of the &lt;a href=&quot;https://en.wikipedia.org/wiki/Location-scale_family&quot;&gt;location-scale family&lt;/a&gt;, i.e., it can be constructed as,</source>
          <target state="translated">StudentT分布は、&lt;a href=&quot;https://en.wikipedia.org/wiki/Location-scale_family&quot;&gt;ロケーションスケールファミリーの&lt;/a&gt;メンバーです。つまり、次のように構成できます。</target>
        </trans-unit>
        <trans-unit id="5c2d5184416b64215504aa1a967e583b20731ca8" translate="yes" xml:space="preserve">
          <source>The Supervisor is a small wrapper around a &lt;code&gt;Coordinator&lt;/code&gt;, a &lt;code&gt;Saver&lt;/code&gt;, and a &lt;code&gt;SessionManager&lt;/code&gt; that takes care of common needs of TensorFlow training programs.</source>
          <target state="translated">スーパーバイザーは、TensorFlowトレーニングプログラムの一般的なニーズに対応する &lt;code&gt;Coordinator&lt;/code&gt; 、 &lt;code&gt;Saver&lt;/code&gt; 、および &lt;code&gt;SessionManager&lt;/code&gt; の小さなラッパーです。</target>
        </trans-unit>
        <trans-unit id="41bd5ff6b458ccdec0fd96ba0408336a12a70400" translate="yes" xml:space="preserve">
          <source>The TF-TRT converted Function.</source>
          <target state="translated">TF-TRT変換された関数です。</target>
        </trans-unit>
        <trans-unit id="32c993dd695d77eb671cae70a4627b9e130bca1a" translate="yes" xml:space="preserve">
          <source>The TPU system performs the embedding lookups and aggregations specified by the arguments to TPUEmbeddingEnqueue(Integer/Sparse/SparseTensor)Batch. The results of these aggregations are visible to the Tensorflow Graph as the outputs of a RecvTPUEmbeddingActivations op. This op returns a list containing one Tensor of activations per table specified in the model. There can be at most one RecvTPUEmbeddingActivations op in the TPU graph.</source>
          <target state="translated">TPU システムは、TPUEmbeddingEnqueue(Integer/Sparse/SparseTensor)Batch への引数で指定された埋め込みルックアップと集約を実行します。これらの集約の結果は、RecvTPUEmbeddingActivations opの出力としてTensorflow Graphに表示されます。こ のオプシ ョ ンは、 モデルで指定 さ れたテーブルごとに 1 つの活性化のテン ソ ーを含む リ ス ト を返 し ます。TPU グラフには最大で 1 つの RecvTPUEmbeddingActivations op があります。</target>
        </trans-unit>
        <trans-unit id="a05a9d3dc8221db263c61479e69d13cee15f7429" translate="yes" xml:space="preserve">
          <source>The TPUEmbedding mid level API.</source>
          <target state="translated">TPUEmbeddingの中間レベルAPIです。</target>
        </trans-unit>
        <trans-unit id="363164ea24b07b74dc51248150c976cfc6c56e68" translate="yes" xml:space="preserve">
          <source>The Tensor or SparseTensor or CompositeTensor in &lt;code&gt;graph&lt;/code&gt; described by &lt;code&gt;tensor_info&lt;/code&gt;.</source>
          <target state="translated">でテンソル又はSparseTensorまたはCompositeTensor &lt;code&gt;graph&lt;/code&gt; によって記述 &lt;code&gt;tensor_info&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c0a0c7223ee1c65527cd175c2c03c00b8052eaee" translate="yes" xml:space="preserve">
          <source>The Tensor to be evaluated.</source>
          <target state="translated">評価対象のテンソル。</target>
        </trans-unit>
        <trans-unit id="2b213eabf8ccb6ff5bf4ab0a41158ab15e62ff3b" translate="yes" xml:space="preserve">
          <source>The TensorFlow format matches objects and variables by starting at a root object, &lt;code&gt;self&lt;/code&gt; for &lt;code&gt;save_weights&lt;/code&gt;, and greedily matching attribute names. For &lt;a href=&quot;../model#save&quot;&gt;&lt;code&gt;Model.save&lt;/code&gt;&lt;/a&gt; this is the &lt;code&gt;Model&lt;/code&gt;, and for &lt;a href=&quot;../../train/checkpoint#save&quot;&gt;&lt;code&gt;Checkpoint.save&lt;/code&gt;&lt;/a&gt; this is the &lt;code&gt;Checkpoint&lt;/code&gt; even if the &lt;code&gt;Checkpoint&lt;/code&gt; has a model attached. This means saving a &lt;a href=&quot;../model&quot;&gt;&lt;code&gt;tf.keras.Model&lt;/code&gt;&lt;/a&gt; using &lt;code&gt;save_weights&lt;/code&gt; and loading into a &lt;a href=&quot;../../train/checkpoint&quot;&gt;&lt;code&gt;tf.train.Checkpoint&lt;/code&gt;&lt;/a&gt; with a &lt;code&gt;Model&lt;/code&gt; attached (or vice versa) will not match the &lt;code&gt;Model&lt;/code&gt;'s variables. See the &lt;a href=&quot;https://www.tensorflow.org/guide/checkpoint&quot;&gt;guide to training checkpoints&lt;/a&gt; for details on the TensorFlow format.</source>
          <target state="translated">TensorFlowフォーマットは、ルートオブジェクトから始まるによってオブジェクトと変数に一致し &lt;code&gt;self&lt;/code&gt; のため &lt;code&gt;save_weights&lt;/code&gt; 、そして貪欲マッチング属性名。&lt;a href=&quot;../model#save&quot;&gt; &lt;code&gt;Model.save&lt;/code&gt; &lt;/a&gt;これは &lt;code&gt;Model&lt;/code&gt; 、およびのため&lt;a href=&quot;../../train/checkpoint#save&quot;&gt; &lt;code&gt;Checkpoint.save&lt;/code&gt; &lt;/a&gt;これは &lt;code&gt;Checkpoint&lt;/code&gt; さえあれば &lt;code&gt;Checkpoint&lt;/code&gt; 添付のモデルを持っています。節約この手段&lt;a href=&quot;../model&quot;&gt; &lt;code&gt;tf.keras.Model&lt;/code&gt; を&lt;/a&gt;用い &lt;code&gt;save_weights&lt;/code&gt; へとロードを&lt;a href=&quot;../../train/checkpoint&quot;&gt; &lt;code&gt;tf.train.Checkpoint&lt;/code&gt; &lt;/a&gt;と &lt;code&gt;Model&lt;/code&gt; 取り付けられた（またはその逆）が一致しません &lt;code&gt;Model&lt;/code&gt; の変数。&lt;a href=&quot;https://www.tensorflow.org/guide/checkpoint&quot;&gt;チェックポイントのトレーニングガイドを&lt;/a&gt;見る TensorFlow形式の詳細については、</target>
        </trans-unit>
        <trans-unit id="9ab4684c965e60031ddf80734d60fea35c517d3d" translate="yes" xml:space="preserve">
          <source>The TensorFlow format matches objects and variables by starting at a root object, &lt;code&gt;self&lt;/code&gt; for &lt;code&gt;save_weights&lt;/code&gt;, and greedily matching attribute names. For &lt;a href=&quot;model#save&quot;&gt;&lt;code&gt;Model.save&lt;/code&gt;&lt;/a&gt; this is the &lt;code&gt;Model&lt;/code&gt;, and for &lt;a href=&quot;../train/checkpoint#save&quot;&gt;&lt;code&gt;Checkpoint.save&lt;/code&gt;&lt;/a&gt; this is the &lt;code&gt;Checkpoint&lt;/code&gt; even if the &lt;code&gt;Checkpoint&lt;/code&gt; has a model attached. This means saving a &lt;a href=&quot;model&quot;&gt;&lt;code&gt;tf.keras.Model&lt;/code&gt;&lt;/a&gt; using &lt;code&gt;save_weights&lt;/code&gt; and loading into a &lt;a href=&quot;../train/checkpoint&quot;&gt;&lt;code&gt;tf.train.Checkpoint&lt;/code&gt;&lt;/a&gt; with a &lt;code&gt;Model&lt;/code&gt; attached (or vice versa) will not match the &lt;code&gt;Model&lt;/code&gt;'s variables. See the &lt;a href=&quot;https://www.tensorflow.org/guide/checkpoint&quot;&gt;guide to training checkpoints&lt;/a&gt; for details on the TensorFlow format.</source>
          <target state="translated">TensorFlowフォーマットは、ルートオブジェクトから始まるによってオブジェクトと変数に一致し &lt;code&gt;self&lt;/code&gt; のため &lt;code&gt;save_weights&lt;/code&gt; 、そして貪欲マッチング属性名。&lt;a href=&quot;model#save&quot;&gt; &lt;code&gt;Model.save&lt;/code&gt; &lt;/a&gt;これは &lt;code&gt;Model&lt;/code&gt; 、およびのため&lt;a href=&quot;../train/checkpoint#save&quot;&gt; &lt;code&gt;Checkpoint.save&lt;/code&gt; &lt;/a&gt;これは &lt;code&gt;Checkpoint&lt;/code&gt; さえあれば &lt;code&gt;Checkpoint&lt;/code&gt; 添付のモデルを持っています。節約この手段&lt;a href=&quot;model&quot;&gt; &lt;code&gt;tf.keras.Model&lt;/code&gt; を&lt;/a&gt;用い &lt;code&gt;save_weights&lt;/code&gt; へとロードを&lt;a href=&quot;../train/checkpoint&quot;&gt; &lt;code&gt;tf.train.Checkpoint&lt;/code&gt; &lt;/a&gt;と &lt;code&gt;Model&lt;/code&gt; 取り付けられた（またはその逆）が一致しません &lt;code&gt;Model&lt;/code&gt; の変数。&lt;a href=&quot;https://www.tensorflow.org/guide/checkpoint&quot;&gt;チェックポイントのトレーニングガイドを&lt;/a&gt;見る TensorFlow形式の詳細については、</target>
        </trans-unit>
        <trans-unit id="b7638d4a5c348f022578401c2f1df999594f7eff" translate="yes" xml:space="preserve">
          <source>The TensorFlow process to which this session will connect.</source>
          <target state="translated">このセッションが接続するTensorFlowプロセス。</target>
        </trans-unit>
        <trans-unit id="b91f22954ced4bccf875faf8127d8545ea485449" translate="yes" xml:space="preserve">
          <source>The TensorFlow session from which to save the meta graph and variables.</source>
          <target state="translated">メタグラフと変数を保存するTensorFlowセッション。</target>
        </trans-unit>
        <trans-unit id="849cc5eecef306c2866f4ba201ccfdcdd2f534c9" translate="yes" xml:space="preserve">
          <source>The TensorFlow session to restore the variables.</source>
          <target state="translated">変数を復元するTensorFlowセッション。</target>
        </trans-unit>
        <trans-unit id="16a70a758b7ef6d7fd0aad2771edf2a93446ebcd" translate="yes" xml:space="preserve">
          <source>The Tensors returned by computation.</source>
          <target state="translated">計算によって返されるテンソル。</target>
        </trans-unit>
        <trans-unit id="45ecd5a2e94b407ef5967be01d6aea7e5dfb3bca" translate="yes" xml:space="preserve">
          <source>The Variable has rank &lt;code&gt;P&lt;/code&gt; and &lt;code&gt;indices&lt;/code&gt; is a &lt;code&gt;Tensor&lt;/code&gt; of rank &lt;code&gt;Q&lt;/code&gt;.</source>
          <target state="translated">変数のランクは &lt;code&gt;P&lt;/code&gt; で、 &lt;code&gt;indices&lt;/code&gt; はランク &lt;code&gt;Q&lt;/code&gt; の &lt;code&gt;Tensor&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="f53a9ea2c1d95dd8b27a8885316c2bc7fb8ad0c0" translate="yes" xml:space="preserve">
          <source>The Y, X coordinates within each block of the input become the high order component of the output channel index.</source>
          <target state="translated">入力の各ブロック内のY,X座標は、出力チャネルインデックスの高次成分となる。</target>
        </trans-unit>
        <trans-unit id="3d6c86d0708bda3da64a9da6d3c863b9ab737231" translate="yes" xml:space="preserve">
          <source>The Y, X coordinates within each block of the output image are determined by the high order component of the input channel index.</source>
          <target state="translated">出力画像の各ブロック内のY,X座標は、入力チャネルインデックスの高次成分によって決定される。</target>
        </trans-unit>
        <trans-unit id="8cd36e977186fec64e8448a96228fbf260cd4605" translate="yes" xml:space="preserve">
          <source>The ZLIB compression level, &lt;code&gt;compression&lt;/code&gt;, can be -1 for the PNG-encoder default or a value from 0 to 9. 9 is the highest compression level, generating the smallest output, but is slower.</source>
          <target state="translated">ZLIB圧縮レベル &lt;code&gt;compression&lt;/code&gt; は、PNGエンコーダーのデフォルトの-1または0〜9の値にすることができます。9は最も高い圧縮レベルで、最小の出力を生成しますが、遅くなります。</target>
        </trans-unit>
        <trans-unit id="ce03da9cead6e86adf2a8009f5862736d75ecdca" translate="yes" xml:space="preserve">
          <source>The [batch] scalar &lt;code&gt;Tensor&lt;/code&gt;, &lt;code&gt;c&lt;/code&gt; in &lt;code&gt;cI&lt;/code&gt;.</source>
          <target state="translated">[バッチ]スカラー &lt;code&gt;Tensor&lt;/code&gt; 、 &lt;code&gt;c&lt;/code&gt; で &lt;code&gt;cI&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="875c6e8cec176a06af7a1f91d361f7f6428356f1" translate="yes" xml:space="preserve">
          <source>The above &lt;code&gt;matmul&lt;/code&gt; is equivalent to:</source>
          <target state="translated">上記の &lt;code&gt;matmul&lt;/code&gt; は次と同等です。</target>
        </trans-unit>
        <trans-unit id="aaf6c09a17773617259c0e894f03f2f3f8ff8317" translate="yes" xml:space="preserve">
          <source>The above changes os.path.exists into a lambda that returns 1. Once the ... part of the code finishes, the CleanUp() looks up the old value of os.path.exists and restores it.</source>
          <target state="translated">上記は os.path.exists を 1 を返すラムダに変更しています。コードの ...の部分が終わると、CleanUp()は os.path.exists の古い値を検索して復元します。</target>
        </trans-unit>
        <trans-unit id="c6eeb39f253767567cdcdb00a4d19d1c71b1dcf0" translate="yes" xml:space="preserve">
          <source>The above computation has a replicated input of two replicas.</source>
          <target state="translated">上記の計算では、2つのレプリカの入力が複製されています。</target>
        </trans-unit>
        <trans-unit id="3d2ea5c0bd79dcd10faca424dbd0b0996316230c" translate="yes" xml:space="preserve">
          <source>The above computation has a replicated output of two replicas.</source>
          <target state="translated">上記の計算では、2つのレプリカが出力されています。</target>
        </trans-unit>
        <trans-unit id="f77b4838e9006d8d501115feb3f16fc46ba644b3" translate="yes" xml:space="preserve">
          <source>The above configuration has 2 tables, and three features. The first two features will be looked up in the first table and the third feature will be looked up in the second table.</source>
          <target state="translated">上記の構成では、2つのテーブルがあり、3つのフィーチャがあります。最初の2つのフィーチャは1つ目のテーブルで調べ、3つ目のフィーチャは2つ目のテーブルで調べることになります。</target>
        </trans-unit>
        <trans-unit id="be70405fbae38c2509b5b1ab685f99f4d89a4d97" translate="yes" xml:space="preserve">
          <source>The above example corresponds to the case where you have only one device. If you have two devices, for example,</source>
          <target state="translated">上記の例は、デバイスを1台しか持っていない場合に対応しています。例えば、2つのデバイスを持っている場合。</target>
        </trans-unit>
        <trans-unit id="9ef3aa1fdfb679e9cef445f78d4851d53a003535" translate="yes" xml:space="preserve">
          <source>The above round function rounds the value based on the given round_mode.</source>
          <target state="translated">上記のround関数は、与えられたround_modeに基づいて値を丸めます。</target>
        </trans-unit>
        <trans-unit id="f2733c781ff4485ef11f43f16e3b526edaa1ff91" translate="yes" xml:space="preserve">
          <source>The accepted enum names, in lowercase if not case sensitive.</source>
          <target state="translated">大文字小文字を区別しない場合は、小文字で入力してください。</target>
        </trans-unit>
        <trans-unit id="fa718bc26e2d4009bae4f7cc79776b6a1f114908" translate="yes" xml:space="preserve">
          <source>The accumulator accepts gradients marked with local_step greater or equal to the most recent global_step known to the accumulator. The average can be extracted from the accumulator, provided sufficient gradients have been accumulated. Extracting the average automatically resets the aggregate to 0, and increments the global_step recorded by the accumulator.</source>
          <target state="translated">アキュムレータは、アキュムレータが知っている最新のグローバルステップ以上のローカルステップでマークされたグラディエントを受け入れます。十分なグラディエントが蓄積されていれば、アキュムレータから平均値を抽出することができます。平均値を抽出すると、自動的にアグリゲートが 0 にリセットされ、アキュムレータによって記録された global_step がインクリメントされます。</target>
        </trans-unit>
        <trans-unit id="4f260205d3bbed38b27587f7081a1e0eb839bfaf" translate="yes" xml:space="preserve">
          <source>The accumulator accepts gradients marked with local_step greater or equal to the most recent global_step known to the accumulator. The average can be extracted from the accumulator, provided sufficient gradients have been accumulated. Extracting the average automatically resets the aggregate to 0, and increments the global_step recorded by the accumulator. This is a resource version of ConditionalAccumulator that will work in TF2.0 with tf.cond version 2.</source>
          <target state="translated">アキュムレータは、アキュムレータが知っている最新のグローバルステップ以上のローカルステップでマークされたグラディエントを受け入れます。十分なグラディエントが蓄積されていれば、アキュムレータから平均値を抽出することができます。平均値を抽出すると、自動的にアグリゲートが 0 にリセットされ、アキュムレータによって記録された global_step がインクリメントされます。これは、TF2.0のtf.condバージョン2で動作するConditionalAccumulatorのリソース版です。</target>
        </trans-unit>
        <trans-unit id="b8bb936a65c3ce409995481c6a4f6df5ec2956c6" translate="yes" xml:space="preserve">
          <source>The activation value.</source>
          <target state="translated">活性化値です。</target>
        </trans-unit>
        <trans-unit id="19792f4506e01a3e2d4abd5364a4484e6f9c0588" translate="yes" xml:space="preserve">
          <source>The actual numpy &lt;code&gt;ndarray&lt;/code&gt;, or anything that can be converted into a numpy &lt;code&gt;ndarray&lt;/code&gt; (including Tensor), or any arbitrarily nested of structure of these.</source>
          <target state="translated">実際の &lt;code&gt;ndarray&lt;/code&gt; 、またはnumpy &lt;code&gt;ndarray&lt;/code&gt; （Tensorを含む）に変換できるもの、またはこれらの構造の任意にネストされたもの。</target>
        </trans-unit>
        <trans-unit id="d36b573b08555814e732c53194782119f852b6d2" translate="yes" xml:space="preserve">
          <source>The actual optimizer that will be used to compute and apply the gradients. Must be one of the Optimizer classes.</source>
          <target state="translated">グラデーションの計算と適用に使用される実際のオプティマイザ。オプティマイザクラスのいずれかでなければなりません。</target>
        </trans-unit>
        <trans-unit id="da7330feac6d473367759d5dd1a21e9334b8d8de" translate="yes" xml:space="preserve">
          <source>The added Keras attribute is: &lt;code&gt;_keras_history&lt;/code&gt;: Last layer applied to the tensor. the entire layer graph is retrievable from that layer, recursively.</source>
          <target state="translated">追加された &lt;code&gt;_keras_history&lt;/code&gt; 属性は次のとおりです。_keras_history：テンソルに適用された最後のレイヤー。レイヤーグラフ全体がそのレイヤーから再帰的に取得できます。</target>
        </trans-unit>
        <trans-unit id="f24861cc1a42612e73b3f3665071eeed2c9ea315" translate="yes" xml:space="preserve">
          <source>The additional robustness comes at a cost of roughly 4x higher compute time than &lt;code&gt;tf.string_to_hash_bucket_fast&lt;/code&gt;.</source>
          <target state="translated">追加の堅牢性は、 &lt;code&gt;tf.string_to_hash_bucket_fast&lt;/code&gt; の約4倍の計算時間というコストで生じます。</target>
        </trans-unit>
        <trans-unit id="1097b0db24625e152362ea61e1c9239db1bd02c3" translate="yes" xml:space="preserve">
          <source>The address of the coordinator (typically an ip:port pair). If set to None, a TF server will be started. If coordinator_name is None, a TF server will not be started even if coordinator_address is None.</source>
          <target state="translated">コーディネータのアドレス (通常は ip:port のペア)。Noneに設定されている場合、TFサーバが起動されます。コーディネータ名が None の場合、 coordinator_address が None であっても TF サーバは起動しません。</target>
        </trans-unit>
        <trans-unit id="92d822d5e3a4a473e569254158aeaed3f44c8de9" translate="yes" xml:space="preserve">
          <source>The address of the given task in the given job.</source>
          <target state="translated">与えられたジョブの与えられたタスクのアドレス。</target>
        </trans-unit>
        <trans-unit id="1044e0e4428294ca84bc27c7d972e47ecc834421" translate="yes" xml:space="preserve">
          <source>The address of the master.</source>
          <target state="translated">ご主人様の住所です。</target>
        </trans-unit>
        <trans-unit id="a671b38fc84a246388b74802d7c3903f8c308213" translate="yes" xml:space="preserve">
          <source>The adjoint (a.k.a. Hermitian transpose a.k.a. conjugate transpose) of matrix.</source>
          <target state="translated">行列のアドジョイント(別名エルミート転置、共役転置)。</target>
        </trans-unit>
        <trans-unit id="2f35f817cc6a40c758997d4ca9d651aca344e6db" translate="yes" xml:space="preserve">
          <source>The adjoint case is solved similarly, beginning with &lt;code&gt;x_n = A_nn.solve(y_n, adjoint=True)&lt;/code&gt; and proceeding backwards.</source>
          <target state="translated">随伴の場合も同様に解かれ、 &lt;code&gt;x_n = A_nn.solve(y_n, adjoint=True)&lt;/code&gt; で始まり、逆方向に進みます。</target>
        </trans-unit>
        <trans-unit id="d26f5dd591fe207d72f8bf3767404f30851360da" translate="yes" xml:space="preserve">
          <source>The adjusted &lt;code&gt;min_range&lt;/code&gt; and &lt;code&gt;max_range&lt;/code&gt; are returned as outputs 2 and 3 of this operation. These outputs should be used as the range for any further calculations.</source>
          <target state="translated">調整された &lt;code&gt;min_range&lt;/code&gt; および &lt;code&gt;max_range&lt;/code&gt; は、この操作の出力2および3として返されます。これらの出力は、以降の計算の範囲として使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="23463dc8793b352e4536a04ab556ea601344e39c" translate="yes" xml:space="preserve">
          <source>The advantages of sampling candidates per-batch are simplicity and the possibility of efficient dense matrix multiplication. The disadvantage is that the sampled candidates must be chosen independently of the context and of the true labels.</source>
          <target state="translated">バッチごとに候補をサンプリングする利点は,単純であることと,効率的な密な行列の乗算が可能であることである.欠点は,サンプリングされた候補は,コンテキストと真のラベルから独立して選択されなければならないことです.</target>
        </trans-unit>
        <trans-unit id="34a7065e06c55b3339a4e1c47bf34bd00d072e70" translate="yes" xml:space="preserve">
          <source>The algorithm starts by setting the loss scale to an initial value. Every N steps that the gradients are finite, the loss scale is increased by some factor. However, if a NaN or Inf gradient is found, the gradients for that step are not applied, and the loss scale is decreased by the factor. This process tends to keep the loss scale as high as possible without gradients overflowing.</source>
          <target state="translated">アルゴリズムは,損失スケールを初期値に設定することから始まります.勾配が有限であるNステップごとに損失スケールは何らかの要因で増加します.しかし、NaNやInfの勾配が見つかった場合は、そのステップの勾配は適用されず、損失スケールはその分だけ小さくなります。この処理は、グラディエントがオーバーフローすることなく、損失スケールをできるだけ高く保つ傾向があります。</target>
        </trans-unit>
        <trans-unit id="ec9f002d6d3b1e71963d9cf73b905f9b84153981" translate="yes" xml:space="preserve">
          <source>The appropriate slice of &quot;tensor&quot;, based on &quot;slice_spec&quot;.</source>
          <target state="translated">slice_spec &quot;に基づいて、&quot;tensor &quot;の適切なスライスを指定します。</target>
        </trans-unit>
        <trans-unit id="821f24c959536d42cc6fec55c7d0ad6a3d16e3c7" translate="yes" xml:space="preserve">
          <source>The appropriate slice of &quot;tensor&quot;, based on &quot;slice_spec&quot;. As an operator. The operator also has a &lt;code&gt;assign()&lt;/code&gt; method that can be used to generate an assignment operator.</source>
          <target state="translated">「slice_spec」に基づく「テンソル」の適切なスライス。オペレーターとして。演算子には、代入演算子の生成に使用できる &lt;code&gt;assign()&lt;/code&gt; メソッドもあります。</target>
        </trans-unit>
        <trans-unit id="23ef91f4c9a43b0bf509fbf539d12c4d114f51e2" translate="yes" xml:space="preserve">
          <source>The area within the interval is (slope / total_pos_weight) times</source>
          <target state="translated">区間内の面積は、(傾き/総重量)×(傾き/総重量)です。</target>
        </trans-unit>
        <trans-unit id="6ecef333fac070655838aed6ec7905dde692ac00" translate="yes" xml:space="preserve">
          <source>The args to be substituted into the msg.</source>
          <target state="translated">msg に代入される args。</target>
        </trans-unit>
        <trans-unit id="d2d3e064486f4100aead5629a0acce01f2954896" translate="yes" xml:space="preserve">
          <source>The argument &lt;code&gt;normalized&lt;/code&gt; and &lt;code&gt;centered&lt;/code&gt; controls how the windows are built:</source>
          <target state="translated">&lt;code&gt;normalized&lt;/code&gt; および &lt;code&gt;centered&lt;/code&gt; 揃えの引数は、ウィンドウの構築方法を制御します。</target>
        </trans-unit>
        <trans-unit id="572a6d647b031b519cd29780ad535922e4e59db7" translate="yes" xml:space="preserve">
          <source>The argument &lt;code&gt;shape&lt;/code&gt; is optional. If present, it specifies the dimensions of the resulting tensor. If not present, the shape of &lt;code&gt;value&lt;/code&gt; is used.</source>
          <target state="translated">引数の &lt;code&gt;shape&lt;/code&gt; はオプションです。存在する場合、結果のテンソルの次元を指定します。存在しない場合、 &lt;code&gt;value&lt;/code&gt; の形状が使用されます。</target>
        </trans-unit>
        <trans-unit id="13e87601baeedfadd1e05e7b900ecdbd205d0bf6" translate="yes" xml:space="preserve">
          <source>The argument &lt;code&gt;tensors&lt;/code&gt; can be a list or a dictionary of tensors. The value returned by the function will be of the same type as &lt;code&gt;tensors&lt;/code&gt;.</source>
          <target state="translated">引数 &lt;code&gt;tensors&lt;/code&gt; は、テンソルのリストまたは辞書です。関数によって返される値は、 &lt;code&gt;tensors&lt;/code&gt; と同じ型になります。</target>
        </trans-unit>
        <trans-unit id="a32d0e1dadf3135bed15ded733117d1a197ad906" translate="yes" xml:space="preserve">
          <source>The argument &lt;code&gt;value&lt;/code&gt; can be a constant value, or a list of values of type &lt;code&gt;dtype&lt;/code&gt;. If &lt;code&gt;value&lt;/code&gt; is a list, then the length of the list must be less than or equal to the number of elements implied by the &lt;code&gt;shape&lt;/code&gt; argument (if specified). In the case where the list length is less than the number of elements specified by &lt;code&gt;shape&lt;/code&gt;, the last element in the list will be used to fill the remaining entries.</source>
          <target state="translated">引数 &lt;code&gt;value&lt;/code&gt; は、定数値、またはタイプ &lt;code&gt;dtype&lt;/code&gt; の値のリストです。 &lt;code&gt;value&lt;/code&gt; がリストの場合、リストの長さは、 &lt;code&gt;shape&lt;/code&gt; 引数（指定されている場合）が示す要素の数以下でなければなりません。リストの長さが &lt;code&gt;shape&lt;/code&gt; で指定された要素の数より少ない場合、リストの最後の要素が残りのエントリを埋めるために使用されます。</target>
        </trans-unit>
        <trans-unit id="4f585d29c2b28791ced3d5b4a780f2d82b9f8bf3" translate="yes" xml:space="preserve">
          <source>The argument &lt;code&gt;value&lt;/code&gt; can be a constant value, or a list of values of type &lt;code&gt;dtype&lt;/code&gt;. If &lt;code&gt;value&lt;/code&gt; is a list, then the length of the list must be less than or equal to the number of elements implied by the desired shape of the tensor. In the case where the total number of elements in &lt;code&gt;value&lt;/code&gt; is less than the number of elements required by the tensor shape, the last element in &lt;code&gt;value&lt;/code&gt; will be used to fill the remaining entries. If the total number of elements in &lt;code&gt;value&lt;/code&gt; is greater than the number of elements required by the tensor shape, the initializer will raise a &lt;code&gt;ValueError&lt;/code&gt;.</source>
          <target state="translated">引数 &lt;code&gt;value&lt;/code&gt; は、定数値、またはタイプ &lt;code&gt;dtype&lt;/code&gt; の値のリストです。 &lt;code&gt;value&lt;/code&gt; がリストの場合、リストの長さは、テンソルの目的の形状によって暗示される要素の数以下でなければなりません。 &lt;code&gt;value&lt;/code&gt; の要素の総数がテンソル形状に必要な要素の数より少ない場合、 &lt;code&gt;value&lt;/code&gt; の最後の要素が残りのエントリを埋めるために使用されます。 &lt;code&gt;value&lt;/code&gt; の要素の総数がテンソル形状に必要な要素の数より大きい場合、初期化子は &lt;code&gt;ValueError&lt;/code&gt; を発生させます。</target>
        </trans-unit>
        <trans-unit id="ce316117b38a170bc69e8657284f9032bf2d1a61" translate="yes" xml:space="preserve">
          <source>The argument &lt;code&gt;value&lt;/code&gt; can be a scalar constant value, or a list of values. Scalars broadcast to whichever shape is requested from the initializer.</source>
          <target state="translated">引数 &lt;code&gt;value&lt;/code&gt; は、スカラー定数値または値のリストにすることができます。スカラーは、イニシャライザーから要求された形状にブロードキャストします。</target>
        </trans-unit>
        <trans-unit id="35b02213c63b22c6aa288eadb099101e8c7a8bb2" translate="yes" xml:space="preserve">
          <source>The argument returned by this function is of the form \(atan2(b, a)\). If &lt;code&gt;input&lt;/code&gt; is real, a tensor of all zeros is returned.</source>
          <target state="translated">この関数によって返される引数は、\（atan2（b、a）\）の形式です。 &lt;code&gt;input&lt;/code&gt; が実数の場合、すべてゼロのテンソルが返されます。</target>
        </trans-unit>
        <trans-unit id="1b8141113a16ee9c1ee49249a42c4ec753fd4479" translate="yes" xml:space="preserve">
          <source>The argument returned by this operation is of the form \(atan2(b, a)\).</source>
          <target state="translated">この操作で返される引数は、\(atan2(b,a)A\)の形をしています。</target>
        </trans-unit>
        <trans-unit id="c08c5bbd3a3384802afbf07c0b86453afc140d85" translate="yes" xml:space="preserve">
          <source>The argument tuple for the target invocation. Defaults to ().</source>
          <target state="translated">ターゲット呼び出しの引数タプル。デフォルトは ()です。</target>
        </trans-unit>
        <trans-unit id="8925ea25cd72607e66cde54201ec4e13ca4e3936" translate="yes" xml:space="preserve">
          <source>The arguments to &lt;a href=&quot;https://www.tensorflow.org/api_docs/python/tf/Tensor#__getitem__&quot;&gt;&lt;code&gt;Tensor.&lt;strong&gt;getitem&lt;/strong&gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.tensorflow.org/api_docs/python/tf/Tensor#__getitem__&quot;&gt; &lt;code&gt;Tensor.&lt;strong&gt;getitem&lt;/strong&gt;&lt;/code&gt; &lt;/a&gt;への引数。&lt;strong&gt;getitem&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="dd368055cee84276738860ec0ec0f93a1536f9fa" translate="yes" xml:space="preserve">
          <source>The arguments to &lt;a href=&quot;tensor#__getitem__&quot;&gt;&lt;code&gt;Tensor.&lt;strong&gt;getitem&lt;/strong&gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;tensor#__getitem__&quot;&gt; &lt;code&gt;Tensor.&lt;strong&gt;getitem&lt;/strong&gt;&lt;/code&gt; &lt;/a&gt;への引数。&lt;strong&gt;getitem&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="08b05ba34abcf5462dc06534466ce94b701e498e" translate="yes" xml:space="preserve">
          <source>The arguments to Tensor.&lt;strong&gt;getitem&lt;/strong&gt;.</source>
          <target state="translated">Tensorへの引数。&lt;strong&gt;getitem&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="56bf9f2cd73c00e2baa02cf649b84dad59db80fe" translate="yes" xml:space="preserve">
          <source>The assertion is checked at runtime (when iterating the dataset) and an error is raised if the actual and expected cardinality differ.</source>
          <target state="translated">アサーションは実行時(データセットの反復処理時)にチェックされ、実際のカーディナリティと期待されるカーディナリティが異なる場合にはエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="bce43bdee979454925721c507561e0a29cfacb37" translate="yes" xml:space="preserve">
          <source>The attempt is silently dropped if the gradient is stale, i.e., &lt;code&gt;local_step&lt;/code&gt; is less than the accumulator's global time step.</source>
          <target state="translated">勾配が古くなっている場合、つまり &lt;code&gt;local_step&lt;/code&gt; がアキュムレータのグローバルタイムステップよりも小さい場合、試行は通知なしで破棄されます。</target>
        </trans-unit>
        <trans-unit id="c2d9f9b7d3b4bc909dac3ec1179989967a68da98" translate="yes" xml:space="preserve">
          <source>The attempt is silently dropped if the gradient is stale, i.e., local_step is less than the accumulator's global time step.</source>
          <target state="translated">勾配が古くなった場合、すなわち、local_stepがアキュムレータのグローバルタイムステップよりも小さい場合、この試みは黙って中止されます。</target>
        </trans-unit>
        <trans-unit id="d8f6f1e67bc16f32d9f24b6bf9dc1327c99b4c20" translate="yes" xml:space="preserve">
          <source>The attr &lt;code&gt;block_size&lt;/code&gt; must be greater than one. It indicates the block size.</source>
          <target state="translated">attr &lt;code&gt;block_size&lt;/code&gt; は1より大きくなければなりません。ブロックサイズを示します。</target>
        </trans-unit>
        <trans-unit id="b44ab2abacbb2efdb69194961a5971ce5296193c" translate="yes" xml:space="preserve">
          <source>The attr &lt;code&gt;channels&lt;/code&gt; indicates the desired number of color channels for the decoded image.</source>
          <target state="translated">attr &lt;code&gt;channels&lt;/code&gt; は、デコードされた画像に必要なカラーチャネルの数を示します。</target>
        </trans-unit>
        <trans-unit id="60563f76a3b65c009555c6aca9d9b0a28f8e6c56" translate="yes" xml:space="preserve">
          <source>The attr &lt;code&gt;format&lt;/code&gt; can be used to override the color format of the encoded output. Values can be:</source>
          <target state="translated">attr &lt;code&gt;format&lt;/code&gt; を使用して、エンコードされた出力のカラー形式をオーバーライドできます。値は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="ae606ee2da5f189375721f138e9665ac82e81365" translate="yes" xml:space="preserve">
          <source>The attr &lt;code&gt;ratio&lt;/code&gt; allows downscaling the image by an integer factor during decoding. Allowed values are: 1, 2, 4, and 8. This is much faster than downscaling the image later.</source>
          <target state="translated">attr &lt;code&gt;ratio&lt;/code&gt; により、デコード時に整数係数で画像を縮小できます。使用できる値は、1、2、4、8です。これは、後で画像を縮小するよりもはるかに高速です。</target>
        </trans-unit>
        <trans-unit id="1dfd0d9d6161eef67f30788b5c5ad724fc4b4c90" translate="yes" xml:space="preserve">
          <source>The attribute &lt;code&gt;source&lt;/code&gt; is added as a suffix to the forward TensorArray's name when performing the creation / lookup, so that each separate gradient calculation gets its own TensorArray accumulator.</source>
          <target state="translated">属性 &lt;code&gt;source&lt;/code&gt; は、作成/ルックアップを実行するときにフォワードTensorArrayの名前に接尾辞として追加されるため、個別の勾配計算ごとに独自のTensorArrayアキュムレータが取得されます。</target>
        </trans-unit>
        <trans-unit id="2e6570b67f35dff908278e6c1092e20dca85cfcf" translate="yes" xml:space="preserve">
          <source>The attributes themselves are defined in the &lt;a href=&quot;http://lib.stat.cmu.edu/datasets/boston&quot;&gt;StatLib website&lt;/a&gt;.</source>
          <target state="translated">属性自体は、&lt;a href=&quot;http://lib.stat.cmu.edu/datasets/boston&quot;&gt;StatLibWebサイトで&lt;/a&gt;定義されています。</target>
        </trans-unit>
        <trans-unit id="3c251209154f7690ac8f45548c2019ab6de3993b" translate="yes" xml:space="preserve">
          <source>The axes along which to share learnable parameters for the activation function. For example, if the incoming feature maps are from a 2D convolution with output shape &lt;code&gt;(batch, height, width, channels)&lt;/code&gt;, and you wish to share parameters across space so that each filter only has one set of parameters, set &lt;code&gt;shared_axes=[1, 2]&lt;/code&gt;.</source>
          <target state="translated">活性化関数の学習可能なパラメーターを共有するための軸。たとえば、入力特徴マップが出力形状 &lt;code&gt;(batch, height, width, channels)&lt;/code&gt; を持つ2D畳み込みからのものであり、各フィルターが1セットのパラメーターのみを持つように空間全体でパラメーターを共有する場合は、 &lt;code&gt;shared_axes=[1, 2]&lt;/code&gt; 設定します。、2]。</target>
        </trans-unit>
        <trans-unit id="ab2b7a67aab4c51b1e0d6376358a5f7e5c4b44b1" translate="yes" xml:space="preserve">
          <source>The axis along which to sort. The default is -1, which sorts the last axis.</source>
          <target state="translated">ソートする軸。デフォルトは -1 で、最後の軸をソートします。</target>
        </trans-unit>
        <trans-unit id="20b05f039f9c533c5583921e0ed9aed8213b7f85" translate="yes" xml:space="preserve">
          <source>The axis that the output values are concatenated along. Default is -1.</source>
          <target state="translated">出力値が連結される軸。デフォルトは -1 です。</target>
        </trans-unit>
        <trans-unit id="eaf9bdc79969635901c1b7428a237e7743aef889" translate="yes" xml:space="preserve">
          <source>The axis to fill (default: -1, a new inner-most axis).</source>
          <target state="translated">塗 り たい軸 (デ フ ォル ト:-1。</target>
        </trans-unit>
        <trans-unit id="a537279d84220ef606eff7333b56720a53d5d752" translate="yes" xml:space="preserve">
          <source>The axis to partition along. Default: outermost axis.</source>
          <target state="translated">パーティショニングする軸。デフォルト:一番外側の軸。</target>
        </trans-unit>
        <trans-unit id="a06b05d6c855c1eb850eace9884f0d972ce19029" translate="yes" xml:space="preserve">
          <source>The axis to slice over. Axes at and below &lt;code&gt;axis&lt;/code&gt; will be flattened before bin counting. Currently, only &lt;code&gt;0&lt;/code&gt;, and &lt;code&gt;-1&lt;/code&gt; are supported. If None, all axes will be flattened (identical to passing &lt;code&gt;0&lt;/code&gt;).</source>
          <target state="translated">スライスする軸。軸以下の &lt;code&gt;axis&lt;/code&gt; は、ビンカウントの前に平坦化されます。現在、 &lt;code&gt;0&lt;/code&gt; と &lt;code&gt;-1&lt;/code&gt; のみがサポートされています。Noneの場合、すべての軸が平坦化されます（ &lt;code&gt;0&lt;/code&gt; を渡すのと同じです）。</target>
        </trans-unit>
        <trans-unit id="735485241e46184aca9b9d13dea029d8a1bc84d8" translate="yes" xml:space="preserve">
          <source>The backend learning phase affects any code that calls &lt;a href=&quot;learning_phase&quot;&gt;&lt;code&gt;backend.learning&lt;em&gt;phase()&lt;/em&gt;&lt;/code&gt;&lt;/a&gt; In particular, all Keras built-in layers use the learning phase as the default for the &lt;code&gt;training&lt;/code&gt; arg to &amp;lt;a href=&quot;../../../tf/keras/layers/Layer#&lt;em&gt;call&lt;/em&gt;&lt;em&gt;&quot;&amp;gt;&lt;code&gt;Layer.&lt;/code&gt;&lt;/em&gt;&lt;em&gt;call&lt;/em&gt;_.</source>
          <target state="translated">バックエンド学習フェーズは、&lt;a href=&quot;learning_phase&quot;&gt; &lt;code&gt;backend.learning&lt;em&gt;phase()&lt;/em&gt;&lt;/code&gt; &lt;/a&gt;を呼び出すすべてのコードに影響します。特に、すべてのKeras組み込みレイヤーは、&amp;lt;a href = &quot;../../../への &lt;code&gt;training&lt;/code&gt; 引数のデフォルトとして学習フェーズを使用します。tf / keras / layers / Layer＃&lt;em&gt;call &lt;/em&gt;&lt;em&gt;&quot;&amp;gt; &lt;code&gt;Layer.&lt;/code&gt; &lt;/em&gt;_を&lt;em&gt;呼び出します&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="e683aeb65a23e8619a38b301846fe9aa22a79e70" translate="yes" xml:space="preserve">
          <source>The backward operation for &quot;BiasAdd&quot; on the &quot;bias&quot; tensor.</source>
          <target state="translated">バイアス」テンソルの「BiasAdd」の後方操作。</target>
        </trans-unit>
        <trans-unit id="43192d2acab6f30a3fb88a081e4480c6a4eaf531" translate="yes" xml:space="preserve">
          <source>The base class for all flags errors.</source>
          <target state="translated">すべてのフラグエラーの基底クラスです。</target>
        </trans-unit>
        <trans-unit id="95fac0e9d908797873ec2155df12d61346d3ec3c" translate="yes" xml:space="preserve">
          <source>The base distribution for this operation is an approximately log-uniform or Zipfian distribution:</source>
          <target state="translated">この操作のための基本分布は、ほぼ対数均一分布またはZipfian分布です。</target>
        </trans-unit>
        <trans-unit id="e03722f7ec155314d6d64a06632231a0220ddf21" translate="yes" xml:space="preserve">
          <source>The base distribution for this operation is constructed on the fly during training. It is a unigram distribution over the target classes seen so far during training. Every integer in &lt;code&gt;[0, range_max)&lt;/code&gt; begins with a weight of 1, and is incremented by 1 each time it is seen as a target class. The base distribution is not saved to checkpoints, so it is reset when the model is reloaded.</source>
          <target state="translated">この操作のベース配布は、トレーニング中にその場で構築されます。これは、これまでにトレーニング中に見られたターゲットクラス全体のユニグラム分布です。 &lt;code&gt;[0, range_max)&lt;/code&gt; すべての整数は、重み1で始まり、ターゲットクラスと見なされるたびに1ずつ増加します。基本分布はチェックポイントに保存されないため、モデルを再ロードするとリセットされます。</target>
        </trans-unit>
        <trans-unit id="9b285a7357154664da97ef50a86143b40cc66c8c" translate="yes" xml:space="preserve">
          <source>The base distribution for this operation is the uniform distribution over the range of integers &lt;code&gt;[0, range_max)&lt;/code&gt;.</source>
          <target state="translated">この操作の基本分布は、整数 &lt;code&gt;[0, range_max)&lt;/code&gt; 範囲にわたる均一分布です。</target>
        </trans-unit>
        <trans-unit id="77b83a8d332ed8aca766d79f4120f4e0ba2ea928" translate="yes" xml:space="preserve">
          <source>The base distribution is read from a file or passed in as an in-memory array. There is also an option to skew the distribution by applying a distortion power to the weights.</source>
          <target state="translated">基本となる分布は、ファイルから読み込むか、メモリ内の配列として渡されます。また、重みに歪曲パワーを適用して分布を歪ませるオプションもあります。</target>
        </trans-unit>
        <trans-unit id="dbe1df14f66fa0efdc79542406d6783493a122af" translate="yes" xml:space="preserve">
          <source>The base type or tuple of base types for all objects that &lt;code&gt;conversion_func&lt;/code&gt; accepts.</source>
          <target state="translated">すべてのオブジェクトの基本型または基本型のタプルこと &lt;code&gt;conversion_func&lt;/code&gt; を受け付けます。</target>
        </trans-unit>
        <trans-unit id="742c5ef9e662d0b65e94999280201b89cf344cb4" translate="yes" xml:space="preserve">
          <source>The basename for checkpoint saving.</source>
          <target state="translated">チェックポイント保存のベースネーム。</target>
        </trans-unit>
        <trans-unit id="ded41e0565ef5f400dbd93cc56863d8aef5c6704" translate="yes" xml:space="preserve">
          <source>The basic functionality is similar to dequeue with many fewer capabilities and options. This Op is optimized for performance.</source>
          <target state="translated">基本的な機能はdequeueと似ていますが、機能やオプションが少なくなっています。この操作はパフォーマンスのために最適化されています。</target>
        </trans-unit>
        <trans-unit id="dade1361cd3ab94fd2385c47804539cc6fda3a6a" translate="yes" xml:space="preserve">
          <source>The basic functionality of this Op is similar to a queue with many fewer capabilities and options. This Op is optimized for performance.</source>
          <target state="translated">このOpの基本的な機能は、多くの機能やオプションが少ないキューに似ています。この操作は、パフォーマンスのために最適化されています。</target>
        </trans-unit>
        <trans-unit id="7c0a22a2ecdff77c481cab7326fe4aaa0b144cf7" translate="yes" xml:space="preserve">
          <source>The batch dimensions are indexes into independent, non-identical parameterizations of this distribution.</source>
          <target state="translated">バッチ次元は、この分布の独立した非同一のパラメータ化へのインデックスです。</target>
        </trans-unit>
        <trans-unit id="b55a5f5737af8dc7c66469a674fe7b35b3d67f61" translate="yes" xml:space="preserve">
          <source>The batch dimensions, denoted as &lt;code&gt;...&lt;/code&gt;, must be the same in &lt;code&gt;diagonals&lt;/code&gt; and &lt;code&gt;rhs&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;...&lt;/code&gt; として示されるバッチディメンションは、 &lt;code&gt;diagonals&lt;/code&gt; と &lt;code&gt;rhs&lt;/code&gt; で同じでなければなりません。</target>
        </trans-unit>
        <trans-unit id="b8d1e654d8a3893e3ebd1816b79375a5883dc270" translate="yes" xml:space="preserve">
          <source>The batch of the output tensor is &lt;code&gt;batch * block_size * block_size&lt;/code&gt;.</source>
          <target state="translated">出力テンソルのバッチは、 &lt;code&gt;batch * block_size * block_size&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="49fd2aeae8e83aee3d7e1d3b09e0905a7ad1a450" translate="yes" xml:space="preserve">
          <source>The below table describes the performance on ImageNet 2012:</source>
          <target state="translated">ImageNet 2012 の性能を以下の表に示します。</target>
        </trans-unit>
        <trans-unit id="d9d6c8abb90d01f2c83046e4ffaae926e1136406" translate="yes" xml:space="preserve">
          <source>The biggest difference between this and MIN_COMBINED is that the minimum range is rounded first, before it's subtracted from the rounded value. With MIN_COMBINED, a small bias is introduced where repeated iterations of quantizing and dequantizing will introduce a larger and larger error.</source>
          <target state="translated">MIN_COMBINEDとの最大の違いは、最小範囲が最初に丸められ、丸められた値から減算されることです。MIN_COMBINEDでは、小さなバイアスが導入されており、量子化と量子化解除を繰り返すことで、より大きな誤差が発生します。</target>
        </trans-unit>
        <trans-unit id="72445c1ce9af91d1b7756490161ef93a455800a7" translate="yes" xml:space="preserve">
          <source>The binomial distribution with parameters &lt;code&gt;n&lt;/code&gt; and &lt;code&gt;p&lt;/code&gt; is the probability distribution of the number of successful Bernoulli process. Only supports &lt;code&gt;n&lt;/code&gt; = 1 for now.</source>
          <target state="translated">パラメータ &lt;code&gt;n&lt;/code&gt; および &lt;code&gt;p&lt;/code&gt; の二項分布は、成功したベルヌーイプロセスの数の確率分布です。現時点では、 &lt;code&gt;n&lt;/code&gt; = 1 のみをサポートしています。</target>
        </trans-unit>
        <trans-unit id="1b8c51d786a68de27c6b4224613923d5f7bdaf37" translate="yes" xml:space="preserve">
          <source>The bitwidth of the quantization.</source>
          <target state="translated">量子化のビット幅。</target>
        </trans-unit>
        <trans-unit id="9046a47f005a317609f27142cf924b36a45d9e12" translate="yes" xml:space="preserve">
          <source>The body of the function (i.e. &lt;code&gt;func&lt;/code&gt;) will not be serialized in a &lt;code&gt;GraphDef&lt;/code&gt;. Therefore, you should not use this function if you need to serialize your model and restore it in a different environment.</source>
          <target state="translated">関数の本体（つまり &lt;code&gt;func&lt;/code&gt; ）は &lt;code&gt;GraphDef&lt;/code&gt; でシリアル化されません。したがって、モデルをシリアル化して別の環境で復元する必要がある場合は、この関数を使用しないでください。</target>
        </trans-unit>
        <trans-unit id="794d80e295e24e3ff23cc23c744638ef8dd2ef67" translate="yes" xml:space="preserve">
          <source>The body of the function (i.e. &lt;code&gt;func&lt;/code&gt;) will not be serialized in a &lt;code&gt;tf.SavedModel&lt;/code&gt;. Therefore, you should not use this function if you need to serialize your model and restore it in a different environment.</source>
          <target state="translated">関数の本体（つまり &lt;code&gt;func&lt;/code&gt; ）は &lt;code&gt;tf.SavedModel&lt;/code&gt; でシリアル化されません。したがって、モデルをシリアル化して別の環境で復元する必要がある場合は、この関数を使用しないでください。</target>
        </trans-unit>
        <trans-unit id="2f2bb2d689c89f9383b7eeefb755379869595cea" translate="yes" xml:space="preserve">
          <source>The boolean tensor to reduce.</source>
          <target state="translated">削減するブーリアンテンソル。</target>
        </trans-unit>
        <trans-unit id="4e7703441ddf5ba9641cb1cc0ad74e7c6c58e3a7" translate="yes" xml:space="preserve">
          <source>The brightness-adjusted image(s).</source>
          <target state="translated">明るさを調整した画像。</target>
        </trans-unit>
        <trans-unit id="0ed98e5a86a1390e9cad2bb3ecc49819e326a775" translate="yes" xml:space="preserve">
          <source>The broadcasted dimensions are placed in the corresponding location of the ellipsis in the output subscript. If the broadcasted dimensions are non-empty and the output subscripts do not contain ellipsis, then an InvalidArgument error is raised.</source>
          <target state="translated">ブロードキャストされたディメンジョンは、出力添え字の楕円の対応する位置に配置されます。ブロードキャストされたディメンジョンが空ではなく、出力添え字に楕円が含まれていない場合、InvalidArgument エラーが発生します。</target>
        </trans-unit>
        <trans-unit id="8fb502dacff4b6e562a2e1abdf5e1fedac860a6d" translate="yes" xml:space="preserve">
          <source>The byte count relative to the whence argument.</source>
          <target state="translated">引数whenceからの相対的なバイト数。</target>
        </trans-unit>
        <trans-unit id="d1e48a233423d312fda6e60318a1f77840441ac1" translate="yes" xml:space="preserve">
          <source>The call arguments for this layer are the same as those of the wrapped RNN layer.</source>
          <target state="translated">このレイヤの呼び出し引数は、ラップされたRNNレイヤのものと同じです。</target>
        </trans-unit>
        <trans-unit id="d95f69aee0e146ccee9411fd2276d3062c98c22d" translate="yes" xml:space="preserve">
          <source>The call arguments for this layer are the same as those of the wrapped RNN layer. Beware that when passing the &lt;code&gt;initial_state&lt;/code&gt; argument during the call of this layer, the first half in the list of elements in the &lt;code&gt;initial_state&lt;/code&gt; list will be passed to the forward RNN call and the last half in the list of elements will be passed to the backward RNN call.</source>
          <target state="translated">この層の呼び出し引数は、ラップされたRNN層の呼び出し引数と同じです。渡すときことに注意してください &lt;code&gt;initial_state&lt;/code&gt; この層の通話中に引数を、内の要素のリストの最初の半分 &lt;code&gt;initial_state&lt;/code&gt; リストは前方RNNコールに渡され、要素のリスト内の最後の半分が後方RNNに渡されますコール。</target>
        </trans-unit>
        <trans-unit id="3de2a1c81ff025749f22e62594b5197eb7231958" translate="yes" xml:space="preserve">
          <source>The callable taking two arguments and an optional msg= argument that raises self.failureException with a useful error message when the two arguments are not equal.</source>
          <target state="translated">2つの引数とオプションのmsg=引数を取るcallableで、2つの引数が等しくない場合に有用なエラーメッセージを含むself.failureExceptionを発生させます。</target>
        </trans-unit>
        <trans-unit id="82b53f2208b8142725b57f3ebcfebf74479c1fc5" translate="yes" xml:space="preserve">
          <source>The callable to be performed if pred is false.</source>
          <target state="translated">pred が false の場合に実行される callable。</target>
        </trans-unit>
        <trans-unit id="85b417d9584c69781a88c04ac220da15b4ffef62" translate="yes" xml:space="preserve">
          <source>The callable to be performed if pred is true.</source>
          <target state="translated">predが真の場合に実行されるcallable。</target>
        </trans-unit>
        <trans-unit id="6882837a3f25aad358b428438ef5466b3477a237" translate="yes" xml:space="preserve">
          <source>The callable to be performed.</source>
          <target state="translated">実行されるコールアブル。</target>
        </trans-unit>
        <trans-unit id="2d4c459c8aeff7109ccacc7811c716196afbf950" translate="yes" xml:space="preserve">
          <source>The callable to be performed. It accepts one argument, which will have the same (possibly nested) structure as &lt;code&gt;elems&lt;/code&gt;, and returns a possibly nested structure of Tensors and Operations, which may be different than the structure of &lt;code&gt;elems&lt;/code&gt;.</source>
          <target state="translated">実行される呼び出し可能。 &lt;code&gt;elems&lt;/code&gt; と同じ（ネストされている可能性がある）構造を持つ1つの引数を受け入れ、elemsの構造とは異なる可能性があるTensors andOperationsのネストされている可能性のある構造を &lt;code&gt;elems&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="f567f5385cd69b7cfcbd75d2a67b18740363cbef" translate="yes" xml:space="preserve">
          <source>The callable to be performed. It accepts one argument, which will have the same (possibly nested) structure as &lt;code&gt;elems&lt;/code&gt;. Its output must have the same structure as &lt;code&gt;fn_output_signature&lt;/code&gt; if one is provided; otherwise it must have the same structure as &lt;code&gt;elems&lt;/code&gt;.</source>
          <target state="translated">実行される呼び出し可能。 &lt;code&gt;elems&lt;/code&gt; と同じ（ネストされている可能性がある）構造を持つ1つの引数を受け入れます。その出力は、提供されて &lt;code&gt;fn_output_signature&lt;/code&gt; 場合、fn_output_signatureと同じ構造である必要があります。それ以外の場合は、 &lt;code&gt;elems&lt;/code&gt; と同じ構造である必要があります。</target>
        </trans-unit>
        <trans-unit id="6fad8c402c4ad4c03ff5742a4c9d67125becbdeb" translate="yes" xml:space="preserve">
          <source>The callable to be performed. It accepts two arguments. The first will have the same structure as &lt;code&gt;initializer&lt;/code&gt; if one is provided, otherwise it will have the same structure as &lt;code&gt;elems&lt;/code&gt;. The second will have the same (possibly nested) structure as &lt;code&gt;elems&lt;/code&gt;. Its output must have the same structure as &lt;code&gt;initializer&lt;/code&gt; if one is provided, otherwise it must have the same structure as &lt;code&gt;elems&lt;/code&gt;.</source>
          <target state="translated">実行される呼び出し可能。2つの引数を受け入れます。最初のものは、 &lt;code&gt;initializer&lt;/code&gt; が提供されている場合は同じ構造になり、そうでない場合は &lt;code&gt;elems&lt;/code&gt; と同じ構造になります。2つ目は、 &lt;code&gt;elems&lt;/code&gt; と同じ（ネストされている可能性がある）構造になります。その出力は、 &lt;code&gt;initializer&lt;/code&gt; が提供されている場合はそれと同じ構造である必要があり、そうでない場合は &lt;code&gt;elems&lt;/code&gt; と同じ構造である必要があります。</target>
        </trans-unit>
        <trans-unit id="0f42894533083db2f0bd479a307d6b9de88ad2ac" translate="yes" xml:space="preserve">
          <source>The casting only occurs in TensorFlow 2, but can be enabled if &lt;a href=&quot;../../../compat/v1/disable_v2_behavior&quot;&gt;&lt;code&gt;tf.compat.v1.disable_v2_behavior()&lt;/code&gt;&lt;/a&gt; has been called with &lt;a href=&quot;../../../compat/v1/keras/layers/enable_v2_dtype_behavior&quot;&gt;&lt;code&gt;tf.compat.v1.keras.layers.enable_v2_dtype_behavior()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">のみTensorFlow 2で発生しますが、あれば有効にすることができる鋳造&lt;a href=&quot;../../../compat/v1/disable_v2_behavior&quot;&gt; &lt;code&gt;tf.compat.v1.disable_v2_behavior()&lt;/code&gt; &lt;/a&gt;と呼ばれている&lt;a href=&quot;../../../compat/v1/keras/layers/enable_v2_dtype_behavior&quot;&gt; &lt;code&gt;tf.compat.v1.keras.layers.enable_v2_dtype_behavior()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d65e2fd04371734d652468cc491b0cee4ff69e4f" translate="yes" xml:space="preserve">
          <source>The centered RMSProp algorithm uses an estimate of the centered second moment (i.e., the variance) for normalization, as opposed to regular RMSProp, which uses the (uncentered) second moment. This often helps with training, but is slightly more expensive in terms of computation and memory.</source>
          <target state="translated">センタリングされたRMSPropアルゴリズムは,通常のRMSPropが(センタリングされていない)セカンドモーメントを使用するのに対し,正規化のためにセンタリングされたセカンドモーメント(すなわち,分散)の推定値を使用します.これは,しばしば訓練に役立ちますが,計算とメモリの点でやや高価です.</target>
        </trans-unit>
        <trans-unit id="33fbe725d21fc4d2840623043975b6cc7b98b5de" translate="yes" xml:space="preserve">
          <source>The centered version additionally maintains a moving average of the gradients, and uses that average to estimate the variance.</source>
          <target state="translated">中央のバージョンでは、さらに勾配の移動平均を維持し、その平均を使用して分散を推定します。</target>
        </trans-unit>
        <trans-unit id="e327ae814821b8183785f0c019aba0430d092c8e" translate="yes" xml:space="preserve">
          <source>The centered version additionally maintains a moving average of the gradients, and uses that average to estimate the variance:</source>
          <target state="translated">中央のバージョンでは、さらに勾配の移動平均を維持し、その平均を使用して分散を推定します。</target>
        </trans-unit>
        <trans-unit id="bfef6db15137d8681f7bb35f6eac52b4909761b8" translate="yes" xml:space="preserve">
          <source>The character codepoints for all strings are returned using a single vector &lt;code&gt;char_values&lt;/code&gt;, with strings expanded to characters in row-major order.</source>
          <target state="translated">すべての文字列の文字コードポイントは、単一のベクトル &lt;code&gt;char_values&lt;/code&gt; を使用して返され、文字列は行優先の順序で文字に展開されます。</target>
        </trans-unit>
        <trans-unit id="fa3eb72957dbe620013c33a95407b9be5d104b9f" translate="yes" xml:space="preserve">
          <source>The character codepoints for all strings are returned using a single vector &lt;code&gt;char_values&lt;/code&gt;, with strings expanded to characters in row-major order. Similarly, the character start byte offsets are returned using a single vector &lt;code&gt;char_to_byte_starts&lt;/code&gt;, with strings expanded in row-major order.</source>
          <target state="translated">すべての文字列の文字コードポイントは、単一のベクトル &lt;code&gt;char_values&lt;/code&gt; を使用して返され、文字列は行優先の順序で文字に展開されます。同様に、文字開始バイトオフセットは、単一のベクトル &lt;code&gt;char_to_byte_starts&lt;/code&gt; を使用して返され、文字列は行優先順に展開されます。</target>
        </trans-unit>
        <trans-unit id="c31a51be422fab4cffa6c991deea2add3c6021c8" translate="yes" xml:space="preserve">
          <source>The check occurs when iterating over the contents of the dataset, which means that the check happens &lt;em&gt;after&lt;/em&gt; any static optimizations are applied to the dataset graph.</source>
          <target state="translated">チェックは、データセットのコンテンツを反復処理するときに発生します。つまり、静的最適化がデータセットグラフに適用された&lt;em&gt;後に&lt;/em&gt;チェックが発生&lt;em&gt;し&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="cde4b2ea69bdd9358c33f59eb179d46a7db32c3c" translate="yes" xml:space="preserve">
          <source>The checkpoint file.</source>
          <target state="translated">チェックポイントファイルです。</target>
        </trans-unit>
        <trans-unit id="ffd9bc04f2dc35c549a84231faac7f8f675d1f25" translate="yes" xml:space="preserve">
          <source>The checkpoint includes variables created by this object and any trackable objects it depends on at the time &lt;a href=&quot;../../../train/checkpoint#write&quot;&gt;&lt;code&gt;Checkpoint.write()&lt;/code&gt;&lt;/a&gt; is called.</source>
          <target state="translated">チェックポイントには、このオブジェクトによって作成された変数と、&lt;a href=&quot;../../../train/checkpoint#write&quot;&gt; &lt;code&gt;Checkpoint.write()&lt;/code&gt; の&lt;/a&gt;呼び出し時に依存する追跡可能なオブジェクトが含まれます。</target>
        </trans-unit>
        <trans-unit id="efb4974f19ee7156bcbc2c149c6eb12fbb9c2851" translate="yes" xml:space="preserve">
          <source>The checkpoint includes variables created by this object and any trackable objects it depends on at the time &lt;a href=&quot;checkpoint#write&quot;&gt;&lt;code&gt;Checkpoint.write()&lt;/code&gt;&lt;/a&gt; is called.</source>
          <target state="translated">チェックポイントには、このオブジェクトによって作成された変数と、&lt;a href=&quot;checkpoint#write&quot;&gt; &lt;code&gt;Checkpoint.write()&lt;/code&gt; の&lt;/a&gt;呼び出し時に依存する追跡可能なオブジェクトが含まれます。</target>
        </trans-unit>
        <trans-unit id="38c24ccd874623d2c0df0fab88b6eb678631c447" translate="yes" xml:space="preserve">
          <source>The checkpoint includes variables created by this object and any trackable objects it depends on at the time &lt;a href=&quot;https://www.tensorflow.org/api_docs/python/tf/train/Checkpoint#write&quot;&gt;&lt;code&gt;Checkpoint.write()&lt;/code&gt;&lt;/a&gt; is called.</source>
          <target state="translated">チェックポイントには、このオブジェクトと、&lt;a href=&quot;https://www.tensorflow.org/api_docs/python/tf/train/Checkpoint#write&quot;&gt; &lt;code&gt;Checkpoint.write()&lt;/code&gt; &lt;/a&gt;が呼び出されたときに依存する追跡可能なオブジェクトによって作成された変数が含まれます。</target>
        </trans-unit>
        <trans-unit id="ca19bcae5c51ffa24942d83670cdc3ac1b84f4ae" translate="yes" xml:space="preserve">
          <source>The checkpoint path to export.</source>
          <target state="translated">エクスポートするチェックポイントのパス。</target>
        </trans-unit>
        <trans-unit id="5dfa3f47f142cfb8c822aafba714441dd881e206" translate="yes" xml:space="preserve">
          <source>The checkpoint path to export. If &lt;code&gt;None&lt;/code&gt; (the default), the most recent checkpoint found within the model directory is chosen.</source>
          <target state="translated">エクスポートするチェックポイントパス。 &lt;code&gt;None&lt;/code&gt; （デフォルト）の場合、モデルディレクトリ内で見つかった最新のチェックポイントが選択されます。</target>
        </trans-unit>
        <trans-unit id="3cf3d251f72fdb454086ef22c80d6dfc9f2a709b" translate="yes" xml:space="preserve">
          <source>The checkpoint prefix. If there are no checkpoints, returns &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">チェックポイントの接頭辞。チェックポイントがない場合は、 &lt;code&gt;None&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="2b84dcebdb9409917518369da2c415dffacda85b" translate="yes" xml:space="preserve">
          <source>The class dimension. Defaulted to -1 which is the last dimension.</source>
          <target state="translated">クラスの次元。デフォルトは -1 で、これは最後の次元です。</target>
        </trans-unit>
        <trans-unit id="54c52716619b24d86f051441e79e67309f282670" translate="yes" xml:space="preserve">
          <source>The class specifies the parameters to configure a &lt;a href=&quot;physicaldevice&quot;&gt;&lt;code&gt;tf.config.PhysicalDevice&lt;/code&gt;&lt;/a&gt; as it is initialized to a &lt;a href=&quot;logicaldevice&quot;&gt;&lt;code&gt;tf.config.LogicalDevice&lt;/code&gt;&lt;/a&gt; during runtime initialization. Not all fields are valid for all device types.</source>
          <target state="translated">クラスは、ランタイム初期化中に&lt;a href=&quot;logicaldevice&quot;&gt; &lt;code&gt;tf.config.LogicalDevice&lt;/code&gt; &lt;/a&gt;に初期化されるときに&lt;a href=&quot;physicaldevice&quot;&gt; &lt;code&gt;tf.config.PhysicalDevice&lt;/code&gt; &lt;/a&gt;を構成するためのパラメーターを指定します。すべてのフィールドがすべてのデバイスタイプに有効なわけではありません。</target>
        </trans-unit>
        <trans-unit id="8cadabc814bf5f30961f39db7a416141d019058e" translate="yes" xml:space="preserve">
          <source>The class uses optional peep-hole connections, optional cell clipping, and an optional projection layer.</source>
          <target state="translated">このクラスでは、オプションののぞき穴接続、オプションのセルクリッピング、オプションの投影レイヤーを使用します。</target>
        </trans-unit>
        <trans-unit id="a5550331649ac8852e50082985bc4347ae4ddf34" translate="yes" xml:space="preserve">
          <source>The classes &lt;code&gt;Tensor&lt;/code&gt; must provide string labels, not integer class IDs.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; クラスは、整数のクラスIDではなく、文字列ラベルを提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="69874b3cb85190e4e3a8170c5f59a6adad260ddf" translate="yes" xml:space="preserve">
          <source>The column name containing the example ids.</source>
          <target state="translated">例の ID を含むカラム名。</target>
        </trans-unit>
        <trans-unit id="11021faea4863b89bafde61f7853da18c9740ef5" translate="yes" xml:space="preserve">
          <source>The communication protocol, such as &lt;code&gt;&quot;grpc&quot;&lt;/code&gt;. If unspecified, will use the default from &lt;code&gt;python/platform/remote_utils.py&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;grpc&quot;&lt;/code&gt; などの通信プロトコル。指定されていない場合は、 &lt;code&gt;python/platform/remote_utils.py&lt;/code&gt; デフォルトを使用します。</target>
        </trans-unit>
        <trans-unit id="8055f38c5a2a613d3b7898156485e396610a7e44" translate="yes" xml:space="preserve">
          <source>The companion method &lt;code&gt;start_queue_runners()&lt;/code&gt; can be used to start threads for all the collected queue runners.</source>
          <target state="translated">コンパニオンメソッド &lt;code&gt;start_queue_runners()&lt;/code&gt; を使用して、収集されたすべてのキューランナーのスレッドを開始できます。</target>
        </trans-unit>
        <trans-unit id="97a9b8c4557a2e822deec22848a2c3bf8b143002" translate="yes" xml:space="preserve">
          <source>The compatibility module also provides the following aliases for common sets of python types:</source>
          <target state="translated">また、互換性モジュールは、Python 型の一般的なセットに対して以下のエイリアスを提供します。</target>
        </trans-unit>
        <trans-unit id="c76eb8b972301e83c208f809121c80f183543a3c" translate="yes" xml:space="preserve">
          <source>The compatibility relation is reflexive and symmetric, but not transitive. For example, TensorShape([32, 784]) is compatible with TensorShape(None), and TensorShape(None) is compatible with TensorShape([4, 4]), but TensorShape([32, 784]) is not compatible with TensorShape([4, 4]).</source>
          <target state="translated">互換性の関係は反射的で対称的ですが、一過性ではありません。例えば、TensorShape([32,784])はTensorShape(None)と互換性があり、TensorShape([4,4])はTensorShape([4,4])と互換性があるが、TensorShape([32,784])はTensorShape([4,4])と互換性がない。</target>
        </trans-unit>
        <trans-unit id="bc1fe8d57fc26b638818429d0e0fce300365e0f7" translate="yes" xml:space="preserve">
          <source>The compilation flags.</source>
          <target state="translated">コンパイルフラグです。</target>
        </trans-unit>
        <trans-unit id="004ddc3feaeb4999946bd055243271e6c1c5e458" translate="yes" xml:space="preserve">
          <source>The compilation is a hint and only supported on a best-effort basis.</source>
          <target state="translated">コンパイルはヒントであり、ベストエフォートベースでのみサポートされています。</target>
        </trans-unit>
        <trans-unit id="2a97fc9aeef3aac0ee7b0d6fc3913b5f131a8ce4" translate="yes" xml:space="preserve">
          <source>The complex conjugate returned by this operation is of the form \(a - bj\).</source>
          <target state="translated">この操作で返される複素共役は、\(a-bj)の形になります。</target>
        </trans-unit>
        <trans-unit id="c2a070804637f1f7cd7f3478e19c13e4ff6876a9" translate="yes" xml:space="preserve">
          <source>The components input has k elements, which correspond to the components of tuples stored in the given queue.</source>
          <target state="translated">コンポーネント入力は,与えられたキューに格納されたタプルのコンポーネントに対応するk個の要素を持ちます.</target>
        </trans-unit>
        <trans-unit id="9f00bf6687c043d2091a7a6b17f2dcc072382a50" translate="yes" xml:space="preserve">
          <source>The components of the resulting element will have an additional outer dimension, which will be &lt;code&gt;batch_size&lt;/code&gt; (or &lt;code&gt;N % batch_size&lt;/code&gt; for the last element if &lt;code&gt;batch_size&lt;/code&gt; does not divide the number of input elements &lt;code&gt;N&lt;/code&gt; evenly and &lt;code&gt;drop_remainder&lt;/code&gt; is &lt;code&gt;False&lt;/code&gt;). If your program depends on the batches having the same outer dimension, you should set the &lt;code&gt;drop_remainder&lt;/code&gt; argument to &lt;code&gt;True&lt;/code&gt; to prevent the smaller batch from being produced.</source>
          <target state="translated">結果の要素のコンポーネントには、 &lt;code&gt;batch_size&lt;/code&gt; （または、 &lt;code&gt;batch_size&lt;/code&gt; が入力要素の数 &lt;code&gt;N&lt;/code&gt; を均等に分割せず、 &lt;code&gt;drop_remainder&lt;/code&gt; が &lt;code&gt;False&lt;/code&gt; の場合、最後の要素の &lt;code&gt;N % batch_size&lt;/code&gt; なる追加の外部ディメンションがあります。プログラムが同じ外寸のバッチに依存している場合は、 &lt;code&gt;drop_remainder&lt;/code&gt; 引数を &lt;code&gt;True&lt;/code&gt; に設定して、小さいバッチが作成されないようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="344c73fb9ddb71179637f498f0b34262b87c80b8" translate="yes" xml:space="preserve">
          <source>The compute dtype of this policy, or None if the compute dtype should be inferred from the inputs.</source>
          <target state="translated">このポリシーのcompute dtype、またはcompute dtypeが入力から推測される場合はNone。</target>
        </trans-unit>
        <trans-unit id="205f439cb062a6f6e02604aa48a1bdc6926c8224" translate="yes" xml:space="preserve">
          <source>The compute dtype of this policy.</source>
          <target state="translated">このポリシーのcompute dtype。</target>
        </trans-unit>
        <trans-unit id="e48ef827cb89494677d2274efaf5e966b8a2acf1" translate="yes" xml:space="preserve">
          <source>The computed norms with the same shape and dtype &lt;code&gt;tensor&lt;/code&gt; but the final axis is 1 instead. Same as running &lt;code&gt;tf.cast(tf.linalg.norm(tensor, ord, axis keepdims=True), tensor.dtype)&lt;/code&gt;.</source>
          <target state="translated">同じ形状とdtype &lt;code&gt;tensor&lt;/code&gt; 計算されたノルムですが、最終軸は1です。 &lt;code&gt;tf.cast(tf.linalg.norm(tensor, ord, axis keepdims=True), tensor.dtype)&lt;/code&gt; を実行するのと同じです。</target>
        </trans-unit>
        <trans-unit id="4a56e1ae6d24fcbef9729431047071ed9efb2c36" translate="yes" xml:space="preserve">
          <source>The concatenated rows for this ragged tensor.</source>
          <target state="translated">このぼろぼろテンソルの連結行。</target>
        </trans-unit>
        <trans-unit id="2e975fea798f7bc222374c880c42a36989a17b66" translate="yes" xml:space="preserve">
          <source>The concatenated values for all rows in this tensor.</source>
          <target state="translated">このテンソルの全行の連結値。</target>
        </trans-unit>
        <trans-unit id="853436dd51ebd4a92a981ee25b9140e01e3a8cb8" translate="yes" xml:space="preserve">
          <source>The concatenation of the lists trainable_weights and non_trainable_weights (in this order).</source>
          <target state="translated">trainable_weightsとnon_trainable_weightsのリストを連結したもの(この順)。</target>
        </trans-unit>
        <trans-unit id="0f6fe2c98e185c3c57a927e557bcc1cd36a6a7d8" translate="yes" xml:space="preserve">
          <source>The concentration parameters represent mean total counts of a &lt;code&gt;1&lt;/code&gt; or a &lt;code&gt;0&lt;/code&gt;, i.e.,</source>
          <target state="translated">濃度パラメータは、 &lt;code&gt;1&lt;/code&gt; または &lt;code&gt;0&lt;/code&gt; の平均総数を表します。つまり、</target>
        </trans-unit>
        <trans-unit id="8b33c64ef5a9a221894d1d8c3eff40c36b6dadba" translate="yes" xml:space="preserve">
          <source>The condition to evaluate.</source>
          <target state="translated">評価する条件。</target>
        </trans-unit>
        <trans-unit id="b10cf771707704e5f421193cabc5bea06bcefd0e" translate="yes" xml:space="preserve">
          <source>The config of a layer does not include connectivity information, nor the layer class name. These are handled by &lt;code&gt;Network&lt;/code&gt; (one layer of abstraction above).</source>
          <target state="translated">レイヤーの構成には、接続情報やレイヤークラス名は含まれません。これらは &lt;code&gt;Network&lt;/code&gt; によって処理されます（上記の抽象化の1つのレイヤー）。</target>
        </trans-unit>
        <trans-unit id="8880562899c802327a9dcd3decd4ce5b9c9c4257" translate="yes" xml:space="preserve">
          <source>The configuration object.</source>
          <target state="translated">設定オブジェクトです。</target>
        </trans-unit>
        <trans-unit id="2e6cabe853a86fe4b25fb9e66ffa23b7c23ff8a8" translate="yes" xml:space="preserve">
          <source>The constraint function that was passed to the variable constructor. Can be &lt;code&gt;None&lt;/code&gt; if no constraint was passed.</source>
          <target state="translated">変数コンストラクターに渡された制約関数。制約が渡されなかった場合は、 &lt;code&gt;None&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="c73cc83e59c2cc8b75ad073ccf807211d4803200" translate="yes" xml:space="preserve">
          <source>The constraint is validated when flags are initially parsed, and after each change of the corresponding flag's value.</source>
          <target state="translated">この制約は、フラグが最初に解析されたときと、対応するフラグの値が変更されるたびに検証されます。</target>
        </trans-unit>
        <trans-unit id="adc492d7eedfc240429addc422d2a1187a94cf41" translate="yes" xml:space="preserve">
          <source>The constraint is validated when flags are initially parsed, and after each change of the corresponding flag's value. Args: flag_name: str, name of the flag to be checked. checker: callable, a function to validate the flag. input - A single positional argument: The value of the corresponding flag (string, boolean, etc. This value will be passed to checker by the library). output - bool, True if validator constraint is satisfied. If constraint is not satisfied, it should either return False or raise flags.ValidationError(desired_error_message). message: str, error text to be shown to the user if checker returns False. If checker raises flags.ValidationError, message from the raised error will be shown. flag_values: flags.FlagValues, optional FlagValues instance to validate against. Raises: AttributeError: Raised when flag_name is not registered as a valid flag name.</source>
          <target state="translated">制約は,フラグが最初に解析されたときと,対応するフラグの値が変更されるたびに検証されます.引数:flag_name:str,チェックされるフラグの名前.対応するフラグの値(文字列,ブール値など.この値はライブラリによって checker に渡されます).制約が満たされていない場合は,False を返すか flags.ValidationError(required_error_message)を発生させなければなりません.チェッカが flags.ValidationError を発生させた場合,発生したエラーのメッセージが表示されます.flag_values:flags.FlagValues,オプションで,検証対象となる FlagValues インスタンス.発生します。AttributeError。flag_nameが有効なフラグ名として登録されていない場合に発生します。</target>
        </trans-unit>
        <trans-unit id="4dc698ae175b05a09fb4ee349bbc6ecaa1e8c775" translate="yes" xml:space="preserve">
          <source>The constructor adds ops to save and restore variables.</source>
          <target state="translated">コンストラクタは、変数の保存と復元のための操作を追加します。</target>
        </trans-unit>
        <trans-unit id="a67ba085bb1cb054e5519f5de4ec3d7a1afd97f0" translate="yes" xml:space="preserve">
          <source>The container string to use in the context.</source>
          <target state="translated">コンテキストで使用するコンテナ文字列。</target>
        </trans-unit>
        <trans-unit id="88bfee8d69b86f8c88e1a6cd1fbfe637af690d6d" translate="yes" xml:space="preserve">
          <source>The container the flag is registered to.</source>
          <target state="translated">フラグが登録されているコンテナ。</target>
        </trans-unit>
        <trans-unit id="65be7a0d51d3df0c44e8373ef2d8cce6fba1ba7f" translate="yes" xml:space="preserve">
          <source>The contents of that resource.</source>
          <target state="translated">そのリソースの内容。</target>
        </trans-unit>
        <trans-unit id="62b621910705576177d148ac0a9d7924f1417008" translate="yes" xml:space="preserve">
          <source>The context in which the attribute child_name is to be changed.</source>
          <target state="translated">属性 child_name が変更されるコンテキスト。</target>
        </trans-unit>
        <trans-unit id="b796712e9d45d917e86f476afcbd17188df9e41f" translate="yes" xml:space="preserve">
          <source>The context manager is typically used as follows:</source>
          <target state="translated">コンテキストマネージャは通常、以下のように使用されます。</target>
        </trans-unit>
        <trans-unit id="b4d7d6dd724445c75543c5c53e6ef9742d69f23b" translate="yes" xml:space="preserve">
          <source>The context manager keeps a reference to the exception as the 'exception' attribute. This allows you to inspect the exception after the assertion::</source>
          <target state="translated">コンテキストマネージャは例外への参照を 'exception' 属性として保持します。これにより、アサーション:の後に例外を検査することができます。</target>
        </trans-unit>
        <trans-unit id="b36c5f83db5c2031ce81fe755689bacbd226c222" translate="yes" xml:space="preserve">
          <source>The context manager keeps a reference to the first matching warning as the 'warning' attribute; similarly, the 'filename' and 'lineno' attributes give you information about the line of Python code from which the warning was triggered. This allows you to inspect the warning after the assertion::</source>
          <target state="translated">同様に、'filename' と 'lineno' 属性は、警告がトリガーされた Python コードの行についての情報を与えます。これにより、アサーション:の後に警告を検査することができます。</target>
        </trans-unit>
        <trans-unit id="4baa6600f582743434abf2183d3229add8562932" translate="yes" xml:space="preserve">
          <source>The context manager to enter.</source>
          <target state="translated">入力するコンテキストマネージャー。</target>
        </trans-unit>
        <trans-unit id="39b31dd33d6410a26fac94ed5cf60c3b73346aa3" translate="yes" xml:space="preserve">
          <source>The continual decay of learning rates throughout training</source>
          <target state="translated">トレーニング中の学習率の継続的な減衰</target>
        </trans-unit>
        <trans-unit id="3eb98e6489cd882c0c18e1586be464efd5024b02" translate="yes" xml:space="preserve">
          <source>The contracted &lt;code&gt;Tensor&lt;/code&gt;, with shape determined by &lt;code&gt;equation&lt;/code&gt;.</source>
          <target state="translated">収縮する &lt;code&gt;Tensor&lt;/code&gt; 。形状は &lt;code&gt;equation&lt;/code&gt; によって決定されます。</target>
        </trans-unit>
        <trans-unit id="db43655e2d0d002f7fe5b43dfac52f092c80941c" translate="yes" xml:space="preserve">
          <source>The contrast-adjusted image or images.</source>
          <target state="translated">コントラスト調整された画像または画像。</target>
        </trans-unit>
        <trans-unit id="d7ed10745c14b330776ee5fc3a5ec88c5d4b915d" translate="yes" xml:space="preserve">
          <source>The contrast-adjusted image(s).</source>
          <target state="translated">コントラスト調整された画像。</target>
        </trans-unit>
        <trans-unit id="b873b8e81b36897bcb81b13c24b9d9584a21302b" translate="yes" xml:space="preserve">
          <source>The convenience function &lt;a href=&quot;../../image/resize&quot;&gt;&lt;code&gt;tf.image.resize&lt;/code&gt;&lt;/a&gt; supports both 4-D and 3-D tensors as input and output. 4-D tensors are for batches of images, 3-D tensors for individual images.</source>
          <target state="translated">便利な関数&lt;a href=&quot;../../image/resize&quot;&gt; &lt;code&gt;tf.image.resize&lt;/code&gt; &lt;/a&gt;は、入力と出力として4Dテンソルと3Dテンソルの両方をサポートします。4Dテンソルは画像のバッチ用で、3Dテンソルは個々の画像用です。</target>
        </trans-unit>
        <trans-unit id="c1ead59666a162707f70c2bb42eccfd78a56d994" translate="yes" xml:space="preserve">
          <source>The convenience function &lt;a href=&quot;image/resize&quot;&gt;&lt;code&gt;tf.image.resize&lt;/code&gt;&lt;/a&gt; supports both 4-D and 3-D tensors as input and output. 4-D tensors are for batches of images, 3-D tensors for individual images.</source>
          <target state="translated">便利な関数&lt;a href=&quot;image/resize&quot;&gt; &lt;code&gt;tf.image.resize&lt;/code&gt; &lt;/a&gt;は、入力と出力として4Dテンソルと3Dテンソルの両方をサポートします。4Dテンソルは画像のバッチ用で、3Dテンソルは個々の画像用です。</target>
        </trans-unit>
        <trans-unit id="14bfe517dc85759a813f2eb60977041c4d4420dc" translate="yes" xml:space="preserve">
          <source>The conversion function may return &lt;code&gt;NotImplemented&lt;/code&gt; for some inputs. In this case, the conversion process will continue to try subsequent conversion functions.</source>
          <target state="translated">一部の入力では、変換関数が &lt;code&gt;NotImplemented&lt;/code&gt; を返す場合があります。この場合、変換プロセスは引き続き後続の変換関数を試行します。</target>
        </trans-unit>
        <trans-unit id="993593e7b0bd02f95abe229cbbe58be1069a603a" translate="yes" xml:space="preserve">
          <source>The conversion function must have the following signature:</source>
          <target state="translated">変換関数は以下のシグネチャを持つ必要があります。</target>
        </trans-unit>
        <trans-unit id="62c1d16c5d29bf1d22b745f14080c7842854b090" translate="yes" xml:space="preserve">
          <source>The conversion rules are as follows:</source>
          <target state="translated">変換ルールは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="e10ca4df9812779b916afce6a1d1c3326adb544f" translate="yes" xml:space="preserve">
          <source>The converted code as string.</source>
          <target state="translated">変換されたコードを文字列として表示します。</target>
        </trans-unit>
        <trans-unit id="1a4c4fcb504882f83a37ad22c73c28617ce613ed" translate="yes" xml:space="preserve">
          <source>The converted data in serialized format.</source>
          <target state="translated">変換されたデータをシリアル化したもの。</target>
        </trans-unit>
        <trans-unit id="0f85bd8e5f77e08669b54d651dbd9c3373a46949" translate="yes" xml:space="preserve">
          <source>The converted data in serialized format. Either a TFLite Flatbuffer or a Graphviz graph depending on value in &lt;code&gt;output_format&lt;/code&gt;.</source>
          <target state="translated">シリアル化された形式で変換されたデータ。 &lt;code&gt;output_format&lt;/code&gt; の値に応じて、TFLiteフラットバッファまたはGraphvizグラフのいずれか。</target>
        </trans-unit>
        <trans-unit id="d1373b125f4cfa9b84ebc99ddf4f15c0c28515a5" translate="yes" xml:space="preserve">
          <source>The converted data. For example if TFLite was the destination, then this will be a tflite flatbuffer in a bytes array.</source>
          <target state="translated">変換されたデータです。例えばTFLiteが宛先であった場合、これはバイト配列のTFLiteフラットバッファになります。</target>
        </trans-unit>
        <trans-unit id="60fb348ae8fb1997effd221344f7a9df143ed5c3" translate="yes" xml:space="preserve">
          <source>The converted grayscale image(s).</source>
          <target state="translated">変換されたグレースケール画像。</target>
        </trans-unit>
        <trans-unit id="947c64ff75e26c329d08f9139c4ae882c26c7ee7" translate="yes" xml:space="preserve">
          <source>The copyright for Fashion-MNIST is held by Zalando SE. Fashion-MNIST is licensed under the &lt;a href=&quot;https://github.com/zalandoresearch/fashion-mnist/blob/master/LICENSE&quot;&gt;MIT license&lt;/a&gt;.</source>
          <target state="translated">Fashion-MNISTの著作権はZalando SEが保持しています。Fashion-MNISTは&lt;a href=&quot;https://github.com/zalandoresearch/fashion-mnist/blob/master/LICENSE&quot;&gt;MIT&lt;/a&gt;ライセンスの下でライセンスされています。</target>
        </trans-unit>
        <trans-unit id="efcf46084087344d6f569da9f4649c1142f8c478" translate="yes" xml:space="preserve">
          <source>The core difference between the two APIs is that this function is a graph rewrite, and so it changes the graph to use mixed precision under the hood. You still build your graph in float32, and the graph rewrite will change certain ops to float16. The Keras mixed precision API directly builds the Keras Model using a mix of float16 and float32.</source>
          <target state="translated">2つのAPIの核心的な違いは、この関数がグラフの書き換えであることです。グラフは float32 で作成したままですが、グラフの書き換えによって特定の演算が float16 に変更されます。Kerasの混合精度APIは、float16とfloat32の混合精度を使用してKerasモデルを直接構築します。</target>
        </trans-unit>
        <trans-unit id="1800b9129135de634c28deac11e3c72d5b276b9a" translate="yes" xml:space="preserve">
          <source>The corresponding &lt;code&gt;equation&lt;/code&gt; is:</source>
          <target state="translated">対応する &lt;code&gt;equation&lt;/code&gt; は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="d08fae5c7558eeecccf8b9086f7da5fad59afff7" translate="yes" xml:space="preserve">
          <source>The corresponding dense tensor satisfies:</source>
          <target state="translated">対応する密テンソルは次のように満たす。</target>
        </trans-unit>
        <trans-unit id="25e9a5d7d3994fde2a58974f329ed60d12e01398" translate="yes" xml:space="preserve">
          <source>The covariance between elements in a batch is defined as:</source>
          <target state="translated">バッチ内の要素間の共分散は、次のように定義されます。</target>
        </trans-unit>
        <trans-unit id="3f7c01ee2660f457c23437a997e09405b750c261" translate="yes" xml:space="preserve">
          <source>The covariance for each batch member is defined as the following:</source>
          <target state="translated">各バッチメンバーの共分散は以下のように定義されています。</target>
        </trans-unit>
        <trans-unit id="ab3d07f930a48f37a430eaef5bc7e0c838a99b3b" translate="yes" xml:space="preserve">
          <source>The created &lt;a href=&quot;../operation&quot;&gt;&lt;code&gt;tf.Operation&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">作成された&lt;a href=&quot;../operation&quot;&gt; &lt;code&gt;tf.Operation&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bf06fef8a51d3d2222f888311b63cf162081ff33" translate="yes" xml:space="preserve">
          <source>The created Operation.</source>
          <target state="translated">作成されたオペレーション。</target>
        </trans-unit>
        <trans-unit id="bf8da6d42e9abc38af87cab58b26796f2a78e3eb" translate="yes" xml:space="preserve">
          <source>The created or existing &lt;code&gt;Variable&lt;/code&gt; (or &lt;code&gt;PartitionedVariable&lt;/code&gt;, if a partitioner was used).</source>
          <target state="translated">作成された &lt;code&gt;Variable&lt;/code&gt; または既存の変数（または、パーティショナーが使用されている場合は、 &lt;code&gt;PartitionedVariable&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="703c3b3c61be2bbfe2cef58610e4241c0cec208f" translate="yes" xml:space="preserve">
          <source>The created variable. Usually either a &lt;code&gt;Variable&lt;/code&gt; or &lt;code&gt;ResourceVariable&lt;/code&gt; instance. If &lt;code&gt;partitioner&lt;/code&gt; is not &lt;code&gt;None&lt;/code&gt;, a &lt;code&gt;PartitionedVariable&lt;/code&gt; instance is returned.</source>
          <target state="translated">作成された変数。通常は、 &lt;code&gt;Variable&lt;/code&gt; または &lt;code&gt;ResourceVariable&lt;/code&gt; インスタンスのいずれかです。 &lt;code&gt;partitioner&lt;/code&gt; が &lt;code&gt;None&lt;/code&gt; でない場合、 &lt;code&gt;PartitionedVariable&lt;/code&gt; インスタンスが返されます。</target>
        </trans-unit>
        <trans-unit id="a064f7a86a7da90002c28e35d9ae72e6f6639e8c" translate="yes" xml:space="preserve">
          <source>The creator is supposed to eventually call the next_creator to create a variable if it does want to create a variable and not call Variable or ResourceVariable directly. This helps make creators composable. A creator may choose to create multiple variables, return already existing variables, or simply register that a variable was created and defer to the next creators in line. Creators can also modify the keyword arguments seen by the next creators.</source>
          <target state="translated">クリエイターは、変数を作成したい場合は最終的にnext_creatorを呼び出して変数を作成することになっており、直接VariableやResourceVariableを呼び出さないようになっています。これは、クリエータを構成可能にするのに役立ちます。クリエイターは、複数の変数を作成したり、既に存在する変数を返したり、あるいは単に変数が作成されたことを登録して、次のクリエーターへの処理を遅延させることを選択することができます。クリエイターは、次のクリエイターが見るキーワード引数を変更することもできます。</target>
        </trans-unit>
        <trans-unit id="caefb816a5bf9fa47c79fd26eae5407f9e0b0029" translate="yes" xml:space="preserve">
          <source>The cumulative density function (cdf) is,</source>
          <target state="translated">累積密度関数(cdf)である。</target>
        </trans-unit>
        <trans-unit id="1e6cf6bfd84a9de01475c57535a86c638dabf3bb" translate="yes" xml:space="preserve">
          <source>The current &lt;a href=&quot;replicacontext&quot;&gt;&lt;code&gt;tf.distribute.ReplicaContext&lt;/code&gt;&lt;/a&gt; object when in a replica context scope, else &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">レプリカコンテキストスコープにある場合は現在の&lt;a href=&quot;replicacontext&quot;&gt; &lt;code&gt;tf.distribute.ReplicaContext&lt;/code&gt; &lt;/a&gt;オブジェクト、それ以外の場合は &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f540e5e4425b87ae1543241ecadb7b9cf3701bab" translate="yes" xml:space="preserve">
          <source>The current &lt;a href=&quot;strategy&quot;&gt;&lt;code&gt;tf.distribute.Strategy&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">現在の&lt;a href=&quot;strategy&quot;&gt; &lt;code&gt;tf.distribute.Strategy&lt;/code&gt; &lt;/a&gt;オブジェクト。</target>
        </trans-unit>
        <trans-unit id="0e1e3663ead0f80d5379392c5fb54bbf32b5424f" translate="yes" xml:space="preserve">
          <source>The current implementation memmaps the tensor from a file.</source>
          <target state="translated">現在の実装では、ファイルからテンソルをmemmapsしています。</target>
        </trans-unit>
        <trans-unit id="7121b0671de74726a9379ae7d9c7f6f65ce0582e" translate="yes" xml:space="preserve">
          <source>The current scope, enabling or disabling compilation.</source>
          <target state="translated">現在のスコープ、コンパイルの有効化または無効化。</target>
        </trans-unit>
        <trans-unit id="6bc15ae139d05655dd2c4e393854e2c5c2fbb9ce" translate="yes" xml:space="preserve">
          <source>The current step.</source>
          <target state="translated">現在のステップ。</target>
        </trans-unit>
        <trans-unit id="d8745f63ae4946ac904ac85702804cdaabd80e53" translate="yes" xml:space="preserve">
          <source>The data format for input. Either &quot;NHWC&quot; (default) or &quot;NCHW&quot;.</source>
          <target state="translated">入力するデータ形式。NHWC&quot; (デフォルト)または &quot;NCHW&quot; のいずれか。</target>
        </trans-unit>
        <trans-unit id="e1197173f8eacaa8f59bfc457afa910117b2511e" translate="yes" xml:space="preserve">
          <source>The data format for x. Either &quot;NHWC&quot; (default) or &quot;NCHW&quot;.</source>
          <target state="translated">x のデータフォーマット。</target>
        </trans-unit>
        <trans-unit id="62ecb5db83683dd3080a11272c27160c0ee495ee" translate="yes" xml:space="preserve">
          <source>The data to train on. It can be passed either as a tf.data Dataset, as a NumPy array, a string tensor, or as a list of texts.</source>
          <target state="translated">学習するデータです。tf.data Dataset、NumPy配列、文字列テンソル、テキストのリストのいずれかで渡すことができます。</target>
        </trans-unit>
        <trans-unit id="eba17f1716c87ef57986eff77c3c1dd87e545657" translate="yes" xml:space="preserve">
          <source>The data to train on. It can be passed either as a tf.data Dataset, or as a numpy array.</source>
          <target state="translated">学習するデータ。tf.data Dataset、またはnumpy配列として渡すことができます。</target>
        </trans-unit>
        <trans-unit id="050a7e1310c5296c653e9c4a8cdd359fd2123e3a" translate="yes" xml:space="preserve">
          <source>The data type expected by the input, as a string (&lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;...)</source>
          <target state="translated">文字列として入力で期待されるデータ型（ &lt;code&gt;float32&lt;/code&gt; 、 &lt;code&gt;float64&lt;/code&gt; 、 &lt;code&gt;int32&lt;/code&gt; ...）</target>
        </trans-unit>
        <trans-unit id="02d8c288bbfe19ff5e3738bf18458a723f75bb21" translate="yes" xml:space="preserve">
          <source>The data type expected by the input. Default: &lt;code&gt;'float32'&lt;/code&gt;.</source>
          <target state="translated">入力で予期されるデータ型。デフォルト： &lt;code&gt;'float32'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bc1f2fe24c93178a0cdc99089b0070c826bc8e7a" translate="yes" xml:space="preserve">
          <source>The data type for the &lt;code&gt;RaggedTensor&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;RaggedTensor&lt;/code&gt; のデータ型。</target>
        </trans-unit>
        <trans-unit id="cba4765f6f6eab73eaa37643a033ccaf9abbf020" translate="yes" xml:space="preserve">
          <source>The data type of the output tensor.</source>
          <target state="translated">出力テンソルのデータ型。</target>
        </trans-unit>
        <trans-unit id="f7dbd9f518a88378558ef3aa8f6e9b7c42f12504" translate="yes" xml:space="preserve">
          <source>The data type of this TensorArray.</source>
          <target state="translated">このTensorArrayのデータ型。</target>
        </trans-unit>
        <trans-unit id="5860939eea91c5f2bfc6092504ee0e23ca7c09b6" translate="yes" xml:space="preserve">
          <source>The data type to call this function on when both values are of the same type in assertEqual().</source>
          <target state="translated">assertEqual()で両方の値が同じ型の場合にこの関数を呼び出すデータ型。</target>
        </trans-unit>
        <trans-unit id="78041258434d725f1d8ee592df7ca0eb3e942ade" translate="yes" xml:space="preserve">
          <source>The data type to produce. Must be a floating point type.</source>
          <target state="translated">生成するデータ型。浮動小数点型でなければなりません。</target>
        </trans-unit>
        <trans-unit id="a7ba10f144cbc87647590b7009fafb20f1cb2173" translate="yes" xml:space="preserve">
          <source>The data will be looped over (in batches).</source>
          <target state="translated">データはループオーバー(一括)されます。</target>
        </trans-unit>
        <trans-unit id="79058d99313ceca7b802a44719e1215d8b01c4a7" translate="yes" xml:space="preserve">
          <source>The dataset produced by the &lt;code&gt;distribute&lt;/code&gt; transformation can be passed to Keras' &lt;a href=&quot;../../../keras/model#fit&quot;&gt;&lt;code&gt;Model.fit&lt;/code&gt;&lt;/a&gt; or Distribution Strategy's &lt;a href=&quot;../../../distribute/strategy#experimental_distribute_dataset&quot;&gt;&lt;code&gt;tf.distribute.Strategy.experimental_distribute_dataset&lt;/code&gt;&lt;/a&gt; like any other &lt;a href=&quot;../../dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt;. We recommend setting a &lt;code&gt;job_name&lt;/code&gt; on the call to &lt;code&gt;distribute&lt;/code&gt; so that if there are multiple workers, they read data from the same job. Note that the autosharding normally performed by &lt;code&gt;experimental_distribute_dataset&lt;/code&gt; will be disabled when setting a &lt;code&gt;job_name&lt;/code&gt;, since sharing the job already results in splitting data across the workers. When using a shared job, data will be dynamically balanced across workers, so that they reach end of input about the same time. This results in better worker utilization than with autosharding, where each worker processes an independent set of files, and some workers may run out of data earlier than others.</source>
          <target state="translated">生成データセット &lt;code&gt;distribute&lt;/code&gt; 変換はKeras'に渡すことができ&lt;a href=&quot;../../../keras/model#fit&quot;&gt; &lt;code&gt;Model.fit&lt;/code&gt; &lt;/a&gt;や流通戦略の&lt;a href=&quot;../../../distribute/strategy#experimental_distribute_dataset&quot;&gt; &lt;code&gt;tf.distribute.Strategy.experimental_distribute_dataset&lt;/code&gt; &lt;/a&gt;他の同じよう&lt;a href=&quot;../../dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt;。複数のワーカーが存在する場合に同じジョブからデータを読み取るように、 &lt;code&gt;distribute&lt;/code&gt; する呼び出しで &lt;code&gt;job_name&lt;/code&gt; を設定することをお勧めします。 &lt;code&gt;job_name&lt;/code&gt; を設定すると、 &lt;code&gt;experimental_distribute_dataset&lt;/code&gt; によって通常実行される自動シャーディングが無効になることに注意してください。、ジョブを共有すると、すでにワーカー間でデータが分割されるためです。共有ジョブを使用する場合、データはワーカー間で動的にバランスが取られるため、ワーカーはほぼ同時に入力の終わりに到達します。これにより、各ワーカーが独立したファイルセットを処理し、一部のワーカーが他のワーカーよりも早くデータを使い果たす可能性がある自動シャーディングよりも、ワーカーの使用率が向上します。</target>
        </trans-unit>
        <trans-unit id="c103aa56baa5c32c667b938b6ce2201d2873c73f" translate="yes" xml:space="preserve">
          <source>The dataset to save.</source>
          <target state="translated">保存するデータセット。</target>
        </trans-unit>
        <trans-unit id="c7f912374554b917dc7b6ee9e848a59b9a0fe71e" translate="yes" xml:space="preserve">
          <source>The datatype of the gradients accumulated by this accumulator.</source>
          <target state="translated">このアキュムレータによって蓄積されたグラデーションのデータ型。</target>
        </trans-unit>
        <trans-unit id="a4e8811eed25239dbc70516d5c5274e75126f7f5" translate="yes" xml:space="preserve">
          <source>The debugging information is dumped to a directory on the file system specified as &lt;code&gt;dump_root&lt;/code&gt;.</source>
          <target state="translated">デバッグ情報は、 &lt;code&gt;dump_root&lt;/code&gt; として指定されたファイルシステム上のディレクトリにダンプされます。</target>
        </trans-unit>
        <trans-unit id="af2ff91f6275afef5f274f54f89df6225cefc596" translate="yes" xml:space="preserve">
          <source>The decorated function will return the unbatched computation output Tensors.</source>
          <target state="translated">デコレーションされた関数は、バッチ処理されていない計算出力Tensorsを返します。</target>
        </trans-unit>
        <trans-unit id="6284a54323a552b0a785e97eec39ef3920661508" translate="yes" xml:space="preserve">
          <source>The decorator argument &lt;code&gt;op_type&lt;/code&gt; is the string type of an operation. This corresponds to the &lt;code&gt;OpDef.name&lt;/code&gt; field for the proto that defines the operation.</source>
          <target state="translated">デコレータの引数 &lt;code&gt;op_type&lt;/code&gt; は、操作の文字列型です。これは、操作を定義するプロトの &lt;code&gt;OpDef.name&lt;/code&gt; フィールドに対応しています。</target>
        </trans-unit>
        <trans-unit id="f564553c5a97e5c3c841f380324c41f020971604" translate="yes" xml:space="preserve">
          <source>The decorator function must use &lt;code&gt;&amp;lt;decorator name&amp;gt;.__wrapped__&lt;/code&gt; instead of the wrapped function that is normally used:</source>
          <target state="translated">デコレータ関数は、通常使用されるラップされた関数ではなく、 &lt;code&gt;&amp;lt;decorator name&amp;gt;.__wrapped__&lt;/code&gt; 使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="364632908db2fc42ec644ce9139f9d8cd2996dcc" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;Graph&lt;/code&gt; being used in the current thread.</source>
          <target state="translated">現在のスレッドで使用されているデフォルトの &lt;code&gt;Graph&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d6131e418f0fe8f055f5c1a72e6a16e1545b1880" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;Session&lt;/code&gt; being used in the current thread.</source>
          <target state="translated">現在のスレッドで使用されているデフォルトの &lt;code&gt;Session&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1f66d887de726d32ad140fa1257a1df52151a3df" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;atol&lt;/code&gt; and &lt;code&gt;rtol&lt;/code&gt; is &lt;code&gt;10 * eps&lt;/code&gt;, where &lt;code&gt;eps&lt;/code&gt; is the smallest representable positive number such that &lt;code&gt;1 + eps != 1&lt;/code&gt;. This is about &lt;code&gt;1.2e-6&lt;/code&gt; in &lt;code&gt;32bit&lt;/code&gt;, &lt;code&gt;2.22e-15&lt;/code&gt; in &lt;code&gt;64bit&lt;/code&gt;, and &lt;code&gt;0.00977&lt;/code&gt; in &lt;code&gt;16bit&lt;/code&gt;. See &lt;code&gt;numpy.finfo&lt;/code&gt;.</source>
          <target state="translated">デフォルト &lt;code&gt;atol&lt;/code&gt; と &lt;code&gt;rtol&lt;/code&gt; ある &lt;code&gt;10 * eps&lt;/code&gt; 、 &lt;code&gt;eps&lt;/code&gt; 、そのようなことは最小の表現可能な正の数である &lt;code&gt;1 + eps != 1&lt;/code&gt; 。これは、約ある &lt;code&gt;1.2e-6&lt;/code&gt; で &lt;code&gt;32bit&lt;/code&gt; 、 &lt;code&gt;2.22e-15&lt;/code&gt; で &lt;code&gt;64bit&lt;/code&gt; 、および &lt;code&gt;0.00977&lt;/code&gt; で &lt;code&gt;16bit&lt;/code&gt; 。 &lt;code&gt;numpy.finfo&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="62dd8de847ac23e7ac8e6762e2b31102b93ee7ae" translate="yes" xml:space="preserve">
          <source>The default Scaffold local init op.</source>
          <target state="translated">デフォルトのScaffoldローカルinit op.</target>
        </trans-unit>
        <trans-unit id="d6e0519f99f3caed3a61af27ab387f572c9ce96e" translate="yes" xml:space="preserve">
          <source>The default dtype of variables created by &lt;a href=&quot;../../layers/layer#add_weight&quot;&gt;&lt;code&gt;tf.keras.layers.Layer.add_weight&lt;/code&gt;&lt;/a&gt; is the layer's policy's variable dtype.</source>
          <target state="translated">作成された変数のデフォルトのDTYPE &lt;a href=&quot;../../layers/layer#add_weight&quot;&gt; &lt;code&gt;tf.keras.layers.Layer.add_weight&lt;/code&gt; は&lt;/a&gt;層の政策の変数DTYPEです。</target>
        </trans-unit>
        <trans-unit id="113557875e0d10c0495e5968c62aac634844babc" translate="yes" xml:space="preserve">
          <source>The default graph is a property of the current thread. If you create a new thread, and wish to use the default graph in that thread, you must explicitly add a &lt;code&gt;with g.as_default():&lt;/code&gt; in that thread's function.</source>
          <target state="translated">デフォルトのグラフは、現在のスレッドのプロパティです。新しいスレッドを作成し、そのスレッドでデフォルトのグラフを使用したい場合は、そのスレッドの関数に明示的に &lt;code&gt;with g.as_default():&lt;/code&gt; を追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="af54ef57315265afe23c10353375841fe5684e25" translate="yes" xml:space="preserve">
          <source>The default name to use if the &lt;code&gt;name&lt;/code&gt; argument is &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; 引数が &lt;code&gt;None&lt;/code&gt; の場合に使用するデフォルトの名前。</target>
        </trans-unit>
        <trans-unit id="2836ebf9a61a1e040d248e87727142b11b48fa08" translate="yes" xml:space="preserve">
          <source>The default name to use if the &lt;code&gt;name_or_scope&lt;/code&gt; argument is &lt;code&gt;None&lt;/code&gt;, this name will be uniquified. If name_or_scope is provided it won't be used and therefore it is not required and can be None.</source>
          <target state="translated">&lt;code&gt;name_or_scope&lt;/code&gt; 引数が &lt;code&gt;None&lt;/code&gt; の場合に使用するデフォルトの名前。この名前は一意化されます。name_or_scopeが指定されている場合、それは使用されないため、必須ではなく、Noneにすることができます。</target>
        </trans-unit>
        <trans-unit id="9102c8e082f516efb1ceffb5e0598d25f581124b" translate="yes" xml:space="preserve">
          <source>The default non-peephole implementation is based on (Gers et al., 1999). The peephole implementation is based on (Sak et al., 2014).</source>
          <target state="translated">デフォルトの非覗き穴実装は、(Gers et al.,1999)に基づいている。覗き穴の実装は、(Sak et al.,2014)に基づいている。</target>
        </trans-unit>
        <trans-unit id="b3c4fe416ddd6e4cf097d426615758d9e0a2f0da" translate="yes" xml:space="preserve">
          <source>The default non-peephole implementation is based on:</source>
          <target state="translated">デフォルトの非覗き穴の実装は、これに基づいています。</target>
        </trans-unit>
        <trans-unit id="b36d1ca5df94e6636114077cb6330c3dd4eb155f" translate="yes" xml:space="preserve">
          <source>The default type of the returned tensor is &lt;code&gt;'int32'&lt;/code&gt; to match TensorFlow's default.</source>
          <target state="translated">返されるテンソルのデフォルトタイプは、TensorFlowのデフォルトと一致するように &lt;code&gt;'int32'&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="9c204a6e1f3b1ac9d5e05754cf3c4c6bfcbf5ab6" translate="yes" xml:space="preserve">
          <source>The default value may be either a single value or an iterable of values. A single value is transformed into a single-item list of that value.</source>
          <target state="translated">デフォルト値は、単一の値または値の反復可能な値のいずれかになります。単一の値は、その値の単一項目リストに変換されます。</target>
        </trans-unit>
        <trans-unit id="95591cde8a6af9f0d83c1cbffce3447430c66fd4" translate="yes" xml:space="preserve">
          <source>The default value of 1e-7 for epsilon might not be a good default in general. For example, when training an Inception network on ImageNet a current good choice is 1.0 or 0.1. Note that since Adam uses the formulation just before Section 2.1 of the Kingma and Ba paper rather than the formulation in Algorithm 1, the &quot;epsilon&quot; referred to here is &quot;epsilon hat&quot; in the paper.</source>
          <target state="translated">イプシロンのデフォルト値である1e-7は、一般的には良いデフォルト値ではないかもしれません。例えば、ImageNet上でInceptionネットワークを学習する場合、現在の良い選択は1.0か0.1である。アダムはアルゴリズム1の定式化ではなく、KingmaとBa論文の2.1節の直前の定式化を使用しているので、ここで言及されている &quot;ε &quot;は論文では &quot;ε帽子 &quot;であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="2676c22d8481d2093eb1222e6a62c6e07d9d33bd" translate="yes" xml:space="preserve">
          <source>The default value of 1e-7 for epsilon might not be a good default in general. For example, when training an Inception network on ImageNet a current good choice is 1.0 or 0.1. Note that since AdamOptimizer uses the formulation just before Section 2.1 of the Kingma and Ba paper rather than the formulation in Algorithm 1, the &quot;epsilon&quot; referred to here is &quot;epsilon hat&quot; in the paper.</source>
          <target state="translated">イプシロンのデフォルト値である1e-7は、一般的には良いデフォルト値ではないかもしれません。例えば、ImageNet上でInceptionネットワークを学習する場合、1.0や0.1が良い選択となります。AdamOptimizerはアルゴリズム1の定式化ではなく、Kingma and Ba論文の2.1節の直前の定式化を使用しているので、ここで言及されている「ε」は論文の中では「εの帽子」であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="7dce55634f5d3cd5afd750385d4cb7a72c3b4e6e" translate="yes" xml:space="preserve">
          <source>The default value of 1e-8 for epsilon might not be a good default in general. For example, when training an Inception network on ImageNet a current good choice is 1.0 or 0.1. Note that since AdamOptimizer uses the formulation just before Section 2.1 of the Kingma and Ba paper rather than the formulation in Algorithm 1, the &quot;epsilon&quot; referred to here is &quot;epsilon hat&quot; in the paper.</source>
          <target state="translated">イプシロンのデフォルト値である1e-8は、一般的には良いデフォルト値ではないかもしれません。例えば、ImageNet上でInceptionネットワークを学習する場合、1.0や0.1が良い選択となります。AdamOptimizerはアルゴリズム1の定式化ではなく、Kingma and Ba論文の2.1節の直前の定式化を使用しているので、ここで言及されている「ε」は論文の中では「εの帽子」であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="941c46320d31066669249101c341db7e0407ec86" translate="yes" xml:space="preserve">
          <source>The default value of the flag.</source>
          <target state="translated">フラグのデフォルト値。</target>
        </trans-unit>
        <trans-unit id="615a8ce189d67deb5b00de2e039f587d13916340" translate="yes" xml:space="preserve">
          <source>The default value of the table.</source>
          <target state="translated">テーブルのデフォルト値です。</target>
        </trans-unit>
        <trans-unit id="5db08c92a6a8c4d1a19b3993d9edfeea8416589f" translate="yes" xml:space="preserve">
          <source>The default_value will be broadcast to the output shape. After that, the values from the ragged tensor overwrite the default values. Note that the default_value must have less dimensions than the value.</source>
          <target state="translated">default_valueは出力形状にブロードキャストされます。その後、ぼろぼろテンソルからの値がデフォルト値を上書きします。default_valueは値よりも寸法が小さくなければならないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="89e2a62666c59169f6b3797f7e217d09c589a372" translate="yes" xml:space="preserve">
          <source>The delimiter to separate fields in a line.</source>
          <target state="translated">行内のフィールドを区切るデリミタ。</target>
        </trans-unit>
        <trans-unit id="00a0e2bb4cc9be91006217ca3ee3c8c2cea06b3f" translate="yes" xml:space="preserve">
          <source>The dense shape of the &lt;code&gt;IndexedSlices&lt;/code&gt;, or &lt;code&gt;None&lt;/code&gt; to allow any dense shape.</source>
          <target state="translated">&lt;code&gt;IndexedSlices&lt;/code&gt; の密な形状、または密な形状を許可する場合は[ &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="afdbba2532bfdeb33e8af1bfa9b4559b2cf2e5ab" translate="yes" xml:space="preserve">
          <source>The dense shape of the &lt;code&gt;SparseTensor&lt;/code&gt;, or &lt;code&gt;None&lt;/code&gt; to allow any dense shape.</source>
          <target state="translated">&lt;code&gt;SparseTensor&lt;/code&gt; の密な形状、または密な形状を許可する場合は[ &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="becf28b4c84759149d018b04bb5b5bc5f4cec754" translate="yes" xml:space="preserve">
          <source>The dense tensor &lt;code&gt;b&lt;/code&gt; may be either a scalar; otherwise &lt;code&gt;a&lt;/code&gt; must be a rank-3 &lt;code&gt;SparseMatrix&lt;/code&gt;; in this case &lt;code&gt;b&lt;/code&gt; must be shaped &lt;code&gt;[batch_size, 1, 1]&lt;/code&gt; and the multiply operation broadcasts.</source>
          <target state="translated">密テンソル &lt;code&gt;b&lt;/code&gt; はスカラーのいずれかです。それ以外の場合 &lt;code&gt;a&lt;/code&gt; はランク3の &lt;code&gt;SparseMatrix&lt;/code&gt; ある必要があります。この場合、 &lt;code&gt;b&lt;/code&gt; は &lt;code&gt;[batch_size, 1, 1]&lt;/code&gt; 形状である必要があり、乗算演算がブロードキャストされます。</target>
        </trans-unit>
        <trans-unit id="726ed70f0dc33ddfe7a4cc805d63238531bb85eb" translate="yes" xml:space="preserve">
          <source>The dense tensor &lt;code&gt;dense&lt;/code&gt; represented by an &lt;code&gt;IndexedSlices&lt;/code&gt;&lt;code&gt;slices&lt;/code&gt; has</source>
          <target state="translated">&lt;code&gt;IndexedSlices&lt;/code&gt; &lt;code&gt;slices&lt;/code&gt; 表される密なテンソル &lt;code&gt;dense&lt;/code&gt; は、</target>
        </trans-unit>
        <trans-unit id="4266ae52077c5b23e390601d308e04d84d60ebbe" translate="yes" xml:space="preserve">
          <source>The deprecated &quot;infer&quot; policy</source>
          <target state="translated">非推奨の &quot;infer&quot; ポリシー</target>
        </trans-unit>
        <trans-unit id="47a704b6d6ba8a557d500ba37d0cbd25291c9ff6" translate="yes" xml:space="preserve">
          <source>The depth depends on profiling view. For 'scope' view, it's the depth of name scope hierarchy (tree), for 'op' view, it's the number of operation types (list), etc.</source>
          <target state="translated">深さはプロファイリングビューによって異なります。scope' ビューでは名前のスコープ階層の深さ(ツリー)、'op' ビューでは操作タイプの数(リスト)などを指定します。</target>
        </trans-unit>
        <trans-unit id="2137c8c00ab29126bb362981cb4aca8aa9eecd42" translate="yes" xml:space="preserve">
          <source>The depth of the input tensor must be divisible by &lt;code&gt;block_size * block_size&lt;/code&gt;.</source>
          <target state="translated">入力テンソルの深さは、 &lt;code&gt;block_size * block_size&lt;/code&gt; 割り切れる必要があります。</target>
        </trans-unit>
        <trans-unit id="856f925406c2e2660e650087c5e577d9ef121b34" translate="yes" xml:space="preserve">
          <source>The depth of the output tensor is &lt;code&gt;block_size * block_size * input_depth&lt;/code&gt;.</source>
          <target state="translated">出力テンソルの深さは &lt;code&gt;block_size * block_size * input_depth&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="b3dbf4f851a379190dde773c74ad7ff19b84f6a4" translate="yes" xml:space="preserve">
          <source>The desired DType of the returned &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="translated">返された &lt;code&gt;Tensor&lt;/code&gt; の目的のDType 。</target>
        </trans-unit>
        <trans-unit id="0745ef41dcfcf7dc3af6f9af5a9ea5d649093458" translate="yes" xml:space="preserve">
          <source>The desired output &lt;code&gt;DType&lt;/code&gt;.</source>
          <target state="translated">目的の出力 &lt;code&gt;DType&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="aba8863b230b8558a7b0bbc35057be0011a2be11" translate="yes" xml:space="preserve">
          <source>The destination type. The list of supported dtypes is the same as &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">宛先タイプ。サポートされているdtypeのリストは &lt;code&gt;x&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="bcdbb419b80b09c56eaabe4016b06b5e0aa6fcbf" translate="yes" xml:space="preserve">
          <source>The device filters can be partically specified. For remote tasks that do not have device filters specified, all devices will be visible to them.</source>
          <target state="translated">デバイスフィルタを部分的に指定することができます。デバイスフィルタが指定されていないリモートタスクでは、すべてのデバイスが可視化されます。</target>
        </trans-unit>
        <trans-unit id="dfeda8f899a5e6b3bd48a82937d06ce834bf27e7" translate="yes" xml:space="preserve">
          <source>The device name or function to use in the context.</source>
          <target state="translated">コンテキストで使用するデバイス名または関数。</target>
        </trans-unit>
        <trans-unit id="a06647ca6f050400b627e80f77759a71a57117ac" translate="yes" xml:space="preserve">
          <source>The device name to use in the context.</source>
          <target state="translated">コンテキストで使用するデバイス名。</target>
        </trans-unit>
        <trans-unit id="56afabb9b384a9ae87fad18ee9dbf3881d1ccc16" translate="yes" xml:space="preserve">
          <source>The device of this variable.</source>
          <target state="translated">この変数のデバイス。</target>
        </trans-unit>
        <trans-unit id="3225614cf1d4291df3f5e762921b470644535a9b" translate="yes" xml:space="preserve">
          <source>The device on which to run the embedding lookup. Valid options are &quot;cpu&quot;, &quot;tpu_tensor_core&quot;, and &quot;tpu_embedding_core&quot;. If specifying &quot;tpu_tensor_core&quot;, a tensor_core_shape must be supplied. Defaults to &quot;cpu&quot;. If not specified, the default behavior is embedding lookup on &quot;tpu_embedding_core&quot; for training and &quot;cpu&quot; for inference. Valid options for training : [&quot;tpu_embedding_core&quot;, &quot;tpu_tensor_core&quot;] Valid options for serving : [&quot;cpu&quot;, &quot;tpu_tensor_core&quot;] For training, tpu_embedding_core is good for large embedding vocab (&amp;gt;1M), otherwise, tpu_tensor_core is often sufficient. For serving, doing embedding lookup on tpu_tensor_core during serving is a way to reduce host cpu usage in cases where that is a bottleneck.</source>
          <target state="translated">埋め込みルックアップを実行するデバイス。有効なオプションは、「cpu」、「tpu_tensor_core」、および「tpu_embedding_core」です。 「tpu_tensor_core」を指定する場合は、tensor_core_shapeを指定する必要があります。デフォルトは「cpu」です。指定しない場合、デフォルトの動作は、トレーニング用の「tpu_embedding_core」と推論用の「cpu」にルックアップを埋め込むことです。トレーニングの有効なオプション：[&quot;tpu_embedding_core&quot;、 &quot;tpu_tensor_core&quot;]サービスの有効なオプション：[&quot;cpu&quot;、 &quot;tpu_tensor_core&quot;]トレーニングの場合、tpu_embedding_coreは大きな埋め込みボーカ（&amp;gt; 1M）に適しています。それ以外の場合は、tpu_tensor_coreで十分です。サービングの場合、サービング中にtpu_tensor_coreに埋め込みルックアップを実行することは、それがボトルネックである場合にホストのCPU使用率を減らす方法です。</target>
        </trans-unit>
        <trans-unit id="c44e9d347e5ccf542ed1c29e0c5e77c462ccf1ab" translate="yes" xml:space="preserve">
          <source>The device on which to run the embedding lookup. Valid options are &quot;cpu&quot;, &quot;tpu_tensor_core&quot;, and &quot;tpu_embedding_core&quot;. If specifying &quot;tpu_tensor_core&quot;, a tensor_core_shape must be supplied. If not specified, the default behavior is embedding lookup on &quot;tpu_embedding_core&quot; for training and &quot;cpu&quot; for inference. Valid options for training : [&quot;tpu_embedding_core&quot;, &quot;tpu_tensor_core&quot;] Valid options for serving : [&quot;cpu&quot;, &quot;tpu_tensor_core&quot;] For training, tpu_embedding_core is good for large embedding vocab (&amp;gt;1M), otherwise, tpu_tensor_core is often sufficient. For serving, doing embedding lookup on tpu_tensor_core during serving is a way to reduce host cpu usage in cases where that is a bottleneck.</source>
          <target state="translated">埋め込みルックアップを実行するデバイス。有効なオプションは、「cpu」、「tpu_tensor_core」、および「tpu_embedding_core」です。 「tpu_tensor_core」を指定する場合は、tensor_core_shapeを指定する必要があります。指定しない場合、デフォルトの動作は、トレーニング用の「tpu_embedding_core」と推論用の「cpu」にルックアップを埋め込むことです。トレーニングの有効なオプション：[&quot;tpu_embedding_core&quot;、 &quot;tpu_tensor_core&quot;]サービスの有効なオプション：[&quot;cpu&quot;、 &quot;tpu_tensor_core&quot;]トレーニングの場合、tpu_embedding_coreは大きな埋め込みボーカ（&amp;gt; 1M）に適しています。それ以外の場合は、tpu_tensor_coreで十分です。サービングの場合、サービング中にtpu_tensor_coreに埋め込みルックアップを実行することは、それがボトルネックである場合にホストのCPU使用率を減らす方法です。</target>
        </trans-unit>
        <trans-unit id="98f163e49909ba226b86dab21a009212ea93fb62" translate="yes" xml:space="preserve">
          <source>The device policy controls how operations requiring inputs on a specific device (e.g., on GPU:0) handle inputs on a different device (e.g. GPU:1).</source>
          <target state="translated">デバイスポリシーは、特定のデバイス(例えば、GPU:0)での入力を必要とする操作が、別のデバイス(例えば、GPU:1)での入力をどのように処理するかを制御します。</target>
        </trans-unit>
        <trans-unit id="f251515ee7a7da78599205d7a6518a062a6c0f5e" translate="yes" xml:space="preserve">
          <source>The devices this replica is to be executed on, as a tuple of strings.</source>
          <target state="translated">このレプリカが実行されるデバイスを文字列のタプルで指定します。</target>
        </trans-unit>
        <trans-unit id="87dd79764107968d1c698ee175a895a731232435" translate="yes" xml:space="preserve">
          <source>The difference between &lt;code&gt;stack&lt;/code&gt; and &lt;code&gt;parallel_stack&lt;/code&gt; is that &lt;code&gt;stack&lt;/code&gt; requires all the inputs be computed before the operation will begin but doesn't require that the input shapes be known during graph construction.</source>
          <target state="translated">&lt;code&gt;stack&lt;/code&gt; と &lt;code&gt;parallel_stack&lt;/code&gt; の違いは、 &lt;code&gt;stack&lt;/code&gt; は、操作が開始する前にすべての入力を計算する必要があるが、グラフの作成中に入力形状が既知である必要がないことです。</target>
        </trans-unit>
        <trans-unit id="bcc3aba817880e065f4223ea3362fcfb9ea484b3" translate="yes" xml:space="preserve">
          <source>The difference between concat and parallel_concat is that concat requires all of the inputs be computed before the operation will begin but doesn't require that the input shapes be known during graph construction. Parallel concat will copy pieces of the input into the output as they become available, in some situations this can provide a performance benefit.</source>
          <target state="translated">concatとparallel_concatの違いは、concatは演算を開始する前にすべての入力を計算する必要がありますが、グラフ構築中に入力形状を知る必要はありません。パラレルコンキャットは、入力の一部が利用可能になると出力にコピーされますが、状況によってはこれが性能上の利点となります。</target>
        </trans-unit>
        <trans-unit id="2969267833427bcd62d3db92c629c1bcf7573937" translate="yes" xml:space="preserve">
          <source>The dimension along which the cosine distance is computed.</source>
          <target state="translated">余弦距離が計算される次元。</target>
        </trans-unit>
        <trans-unit id="b1950ef9079ccb8fdab95487686c7eb37ab33631" translate="yes" xml:space="preserve">
          <source>The dimension softmax would be performed on. The default is -1 which indicates the last dimension.</source>
          <target state="translated">softmax が実行される次元。デフォルトは -1 で、最後の次元を示します。</target>
        </trans-unit>
        <trans-unit id="a741b7f6b1d2304d511eed765b55f2d892e70b1b" translate="yes" xml:space="preserve">
          <source>The dimensions in &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt; are merged elementwise, according to the rules defined for &lt;code&gt;Dimension.merge_with()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Dimension.merge_with()&lt;/code&gt; に定義されたルールに従って、 &lt;code&gt;self&lt;/code&gt; と &lt;code&gt;other&lt;/code&gt; の次元が要素ごとにマージされます。</target>
        </trans-unit>
        <trans-unit id="6e700d4efdcd9fa4c17a75442e4f67358801b0cd" translate="yes" xml:space="preserve">
          <source>The dimensions to reduce. If &lt;code&gt;None&lt;/code&gt; (the default), reduces all dimensions. Must be in the range &lt;code&gt;[-rank(input), rank(input))&lt;/code&gt;.</source>
          <target state="translated">縮小する寸法。場合 &lt;code&gt;None&lt;/code&gt; （デフォルト）、すべての次元を低減します。 &lt;code&gt;[-rank(input), rank(input))&lt;/code&gt; の範囲内である必要があります。</target>
        </trans-unit>
        <trans-unit id="6c3884296f2f81a69d25f2d74a953505cb36e099" translate="yes" xml:space="preserve">
          <source>The dimensions to reduce. If &lt;code&gt;None&lt;/code&gt; (the default), reduces all dimensions. Must be in the range &lt;code&gt;[-rank(input_tensor), rank(input_tensor))&lt;/code&gt;.</source>
          <target state="translated">縮小する寸法。場合 &lt;code&gt;None&lt;/code&gt; （デフォルト）、すべての次元を低減します。 &lt;code&gt;[-rank(input_tensor), rank(input_tensor))&lt;/code&gt; の範囲内である必要があります。</target>
        </trans-unit>
        <trans-unit id="524dc0cac6bb52e1a46462ec8553ccc9e4362acf" translate="yes" xml:space="preserve">
          <source>The dimensions to reduce. If &lt;code&gt;None&lt;/code&gt; (the default), reduces all dimensions. Must be in the range &lt;code&gt;[-rank(input_tensor), rank(input_tensor)]&lt;/code&gt;.</source>
          <target state="translated">縮小する寸法。場合 &lt;code&gt;None&lt;/code&gt; （デフォルト）、すべての次元を低減します。 &lt;code&gt;[-rank(input_tensor), rank(input_tensor)]&lt;/code&gt; の範囲内である必要があります。</target>
        </trans-unit>
        <trans-unit id="e8ce19192adc15b5220fef2532366cfeacb9e19d" translate="yes" xml:space="preserve">
          <source>The dimensions to reduce; list or scalar. If &lt;code&gt;None&lt;/code&gt; (the default), reduces all dimensions.</source>
          <target state="translated">縮小する寸法。リストまたはスカラー。場合 &lt;code&gt;None&lt;/code&gt; （デフォルト）、すべての次元を低減します。</target>
        </trans-unit>
        <trans-unit id="2d1b6053c3cee0279e3dc86b7090198e408447ec" translate="yes" xml:space="preserve">
          <source>The direction in which to sort the values (&lt;code&gt;'ASCENDING'&lt;/code&gt; or &lt;code&gt;'DESCENDING'&lt;/code&gt;).</source>
          <target state="translated">値を並べ替える方向（ &lt;code&gt;'ASCENDING'&lt;/code&gt; または &lt;code&gt;'DESCENDING'&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="7bc7db80b0d2774479326226a4890a6e2d843629" translate="yes" xml:space="preserve">
          <source>The directory as string.</source>
          <target state="translated">ディレクトリを文字列で指定します。</target>
        </trans-unit>
        <trans-unit id="d47beb327611bfd25299d1d2b4c584bd5f48dbf4" translate="yes" xml:space="preserve">
          <source>The directory in which checkpoints are saved.</source>
          <target state="translated">チェックポイントが保存されるディレクトリです。</target>
        </trans-unit>
        <trans-unit id="8e7ea210352ff9e76412951da939c6e46cfe6639" translate="yes" xml:space="preserve">
          <source>The directory of checkpoints.</source>
          <target state="translated">チェックポイントのディレクトリです。</target>
        </trans-unit>
        <trans-unit id="115f901deb7759892ab1dbde3055bf4ffc36bc3e" translate="yes" xml:space="preserve">
          <source>The directory path where the dumping information will be written.</source>
          <target state="translated">ダンプ情報が書き込まれるディレクトリパス。</target>
        </trans-unit>
        <trans-unit id="23759a3b8009ddee2c9ccc70d3ee85712ccf2888" translate="yes" xml:space="preserve">
          <source>The directory to save the model results and log files.</source>
          <target state="translated">モデルの結果とログファイルを保存するディレクトリです。</target>
        </trans-unit>
        <trans-unit id="8f003820357db00c0553228e9493dca5bc931d2d" translate="yes" xml:space="preserve">
          <source>The directory where files specified in data attribute of py_test and py_binary are stored.</source>
          <target state="translated">py_testとpy_binaryのdata属性で指定されたファイルが格納されているディレクトリです。</target>
        </trans-unit>
        <trans-unit id="57821be3cc06a5ba465c47d01aaf44aa61e1d383" translate="yes" xml:space="preserve">
          <source>The distance metric used for clustering. One of:</source>
          <target state="translated">クラスタリングに使用される距離メトリック。の一つ。</target>
        </trans-unit>
        <trans-unit id="3b7ccc3fd24de1a06b23a805fbbf6bc02487c531" translate="yes" xml:space="preserve">
          <source>The distances from each input point to each cluster center.</source>
          <target state="translated">各入力点から各クラスタ中心までの距離。</target>
        </trans-unit>
        <trans-unit id="adcc609cd8c69dbaffd925d5301fb26f55e523e5" translate="yes" xml:space="preserve">
          <source>The distortion is used to skew the unigram probability distribution. Each weight is first raised to the distortion's power before adding to the internal unigram distribution. As a result, &lt;code&gt;distortion = 1.0&lt;/code&gt; gives regular unigram sampling (as defined by the vocab file), and &lt;code&gt;distortion = 0.0&lt;/code&gt; gives a uniform distribution.</source>
          <target state="translated">歪みは、ユニグラム確率分布を歪めるために使用されます。各重みは、内部ユニグラム分布に追加する前に、まず歪みの累乗になります。その結果、 &lt;code&gt;distortion = 1.0&lt;/code&gt; は（語彙ファイルで定義されているように）通常のユニグラムサンプリングを提供し、 &lt;code&gt;distortion = 0.0&lt;/code&gt; は一様分布を提供します。</target>
        </trans-unit>
        <trans-unit id="a47603ed00a4a39f84d7b7101c2b650f89e2c48b" translate="yes" xml:space="preserve">
          <source>The distribution from which the parameters of the random features map (layer) are sampled determines which shift-invariant kernel the layer approximates (see paper for more details). You can use the distribution of your choice. The layer supports out-of-the-box approximation sof the following two RBF kernels:</source>
          <target state="translated">ランダム特徴量マップ(レイヤー)のパラメータがサンプリングされる分布は、レイヤーがどのシフト不変カーネルに近似するかを決定します(詳細は論文を参照してください)。好みの分布を使うことができます。レイヤーは以下の 2 つの RBF カーネルのすぐに使える近似をサポートしています。</target>
        </trans-unit>
        <trans-unit id="5f58b91125c882dc2a62587a652492f254f94698" translate="yes" xml:space="preserve">
          <source>The distribution functions can be evaluated on counts.</source>
          <target state="translated">分布関数は、カウントで評価することができます。</target>
        </trans-unit>
        <trans-unit id="7b6104158da73f015822f02cd6abbe4e2cf5c6cf" translate="yes" xml:space="preserve">
          <source>The distribution strategy options associated with the dataset. See &lt;a href=&quot;experimental/distributeoptions&quot;&gt;&lt;code&gt;tf.data.experimental.DistributeOptions&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">データセットに関連付けられた分布戦略オプション。詳細については、&lt;a href=&quot;experimental/distributeoptions&quot;&gt; &lt;code&gt;tf.data.experimental.DistributeOptions&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="bf743a144dc0600d6b32b4a4db31e72e8fcd7021" translate="yes" xml:space="preserve">
          <source>The distributions have degree of freedom &lt;code&gt;df&lt;/code&gt;, mean &lt;code&gt;loc&lt;/code&gt;, and scale &lt;code&gt;scale&lt;/code&gt;.</source>
          <target state="translated">分布は自由度が持っている &lt;code&gt;df&lt;/code&gt; 、平均 &lt;code&gt;loc&lt;/code&gt; 、およびスケールの &lt;code&gt;scale&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9974cdad7192faff5dd2133a51cc98b931250694" translate="yes" xml:space="preserve">
          <source>The document frequency of the OOV token. Only necessary if output_mode is TFIDF.</source>
          <target state="translated">OOV トークンのドキュメント周波数。output_mode が TFIDF の場合のみ必要。</target>
        </trans-unit>
        <trans-unit id="2de0b5493fea7bb1bb4b3e017251bece76051fd5" translate="yes" xml:space="preserve">
          <source>The drawn samples of shape &lt;code&gt;[batch_size, num_samples]&lt;/code&gt;.</source>
          <target state="translated">描画された形状のサンプル &lt;code&gt;[batch_size, num_samples]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5e74b8b7d0df8fed16c79b98fd21910718bbb784" translate="yes" xml:space="preserve">
          <source>The dropout rate, between 0 and 1. E.g. &lt;code&gt;rate=0.1&lt;/code&gt; would drop out 10% of input units.</source>
          <target state="translated">ドロップアウト率は0から1の間です。たとえば、 &lt;code&gt;rate=0.1&lt;/code&gt; の場合、入力ユニットの10％がドロップアウトします。</target>
        </trans-unit>
        <trans-unit id="b307d95f377afd55d64b7df5ef858732cff45363" translate="yes" xml:space="preserve">
          <source>The dtype for &lt;code&gt;row_splits&lt;/code&gt;. One of &lt;a href=&quot;../tf#int32&quot;&gt;&lt;code&gt;tf.int32&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../tf#int64&quot;&gt;&lt;code&gt;tf.int64&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">row_splitsの &lt;code&gt;row_splits&lt;/code&gt; 。&lt;a href=&quot;../tf#int32&quot;&gt; &lt;code&gt;tf.int32&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../tf#int64&quot;&gt; &lt;code&gt;tf.int64&lt;/code&gt; &lt;/a&gt;のいずれか。</target>
        </trans-unit>
        <trans-unit id="650e6295ecdc851a5073e1cf59012505607bda82" translate="yes" xml:space="preserve">
          <source>The dtype for the return value. Defaults to &lt;code&gt;segment_ids.dtype&lt;/code&gt;, or &lt;a href=&quot;../../tf#int64&quot;&gt;&lt;code&gt;tf.int64&lt;/code&gt;&lt;/a&gt; if &lt;code&gt;segment_ids&lt;/code&gt; does not have a dtype.</source>
          <target state="translated">戻り値のdtype。デフォルトは &lt;code&gt;segment_ids.dtype&lt;/code&gt; 、または&lt;a href=&quot;../../tf#int64&quot;&gt; &lt;code&gt;tf.int64&lt;/code&gt; &lt;/a&gt; &lt;code&gt;segment_ids&lt;/code&gt; がない場合はtf.int64です。</target>
        </trans-unit>
        <trans-unit id="651f8e3ce30e01a19884517237de61dd305a37d2" translate="yes" xml:space="preserve">
          <source>The dtype for the return value. Defaults to &lt;code&gt;splits.dtype&lt;/code&gt;, or &lt;a href=&quot;../../tf#int64&quot;&gt;&lt;code&gt;tf.int64&lt;/code&gt;&lt;/a&gt; if &lt;code&gt;splits&lt;/code&gt; does not have a dtype.</source>
          <target state="translated">戻り値のdtype。デフォルトは &lt;code&gt;splits.dtype&lt;/code&gt; 、または&lt;a href=&quot;../../tf#int64&quot;&gt; &lt;code&gt;tf.int64&lt;/code&gt; &lt;/a&gt;場合は &lt;code&gt;splits&lt;/code&gt; DTYPEを持っていません。</target>
        </trans-unit>
        <trans-unit id="8d0125518627216e27c3aadddc389fb684e07985" translate="yes" xml:space="preserve">
          <source>The dtype of the layer's computations and weights (default of &lt;code&gt;None&lt;/code&gt; means use &lt;a href=&quot;../backend/floatx&quot;&gt;&lt;code&gt;tf.keras.backend.floatx&lt;/code&gt;&lt;/a&gt; in TensorFlow 2, or the type of the first input in TensorFlow 1).</source>
          <target state="translated">層の計算及び重みのDTYPE（デフォルト &lt;code&gt;None&lt;/code&gt; 手段が使用&lt;a href=&quot;../backend/floatx&quot;&gt; &lt;code&gt;tf.keras.backend.floatx&lt;/code&gt; &lt;/a&gt; TensorFlow 2において、又はTensorFlow 1の第1の入力の種類）。</target>
        </trans-unit>
        <trans-unit id="80fd7b4c05a902c0f01fd54f89719616e3a0775c" translate="yes" xml:space="preserve">
          <source>The dtype of the layer's computations and weights. If mixed precision is used with a &lt;a href=&quot;../mixed_precision/experimental/policy&quot;&gt;&lt;code&gt;tf.keras.mixed_precision.experimental.Policy&lt;/code&gt;&lt;/a&gt;, this is instead just the dtype of the layer's weights, as the computations are done in a different dtype.</source>
          <target state="translated">レイヤーの計算と重みのdtype。混合精度が&lt;a href=&quot;../mixed_precision/experimental/policy&quot;&gt; &lt;code&gt;tf.keras.mixed_precision.experimental.Policy&lt;/code&gt; &lt;/a&gt;で使用されている場合、計算は別のdtypeで行われるため、これは代わりにレイヤーの重みのdtypeにすぎません。</target>
        </trans-unit>
        <trans-unit id="bd52ea2eb7ea5be6e405a118979acc052f206e1b" translate="yes" xml:space="preserve">
          <source>The dtype of the resulting tensor is inferred from the inputs unless it is provided explicitly.</source>
          <target state="translated">結果として得られるテンソルのdtypeは、明示的に指定されない限り、入力から推測されます。</target>
        </trans-unit>
        <trans-unit id="5d16a87cf006dd1b3cd4d0dcbb040b8f7357e681" translate="yes" xml:space="preserve">
          <source>The dtype that should be used for the &lt;code&gt;row_splits&lt;/code&gt; of any new ragged tensors. Existing &lt;a href=&quot;../../raggedtensor&quot;&gt;&lt;code&gt;tf.RaggedTensor&lt;/code&gt;&lt;/a&gt; elements do not have their row_splits dtype changed.</source>
          <target state="translated">新しい不規則テンソルの &lt;code&gt;row_splits&lt;/code&gt; に使用する必要があるdtype。既存の&lt;a href=&quot;../../raggedtensor&quot;&gt; &lt;code&gt;tf.RaggedTensor&lt;/code&gt; &lt;/a&gt;要素のrow_splitsdtypeは変更されていません。</target>
        </trans-unit>
        <trans-unit id="4b69591d001104f8e2eec546d13dfde13802ef40" translate="yes" xml:space="preserve">
          <source>The dumped debugging information can be ingested by debugger UIs.</source>
          <target state="translated">ダンプされたデバッグ情報は、デバッガの UI でインジェストすることができます。</target>
        </trans-unit>
        <trans-unit id="1c3bb311f55c44615e851ca1393dedf962117d6f" translate="yes" xml:space="preserve">
          <source>The dynamic calculation performed is, at time &lt;code&gt;t&lt;/code&gt; for batch row &lt;code&gt;b&lt;/code&gt;,</source>
          <target state="translated">実行される動的計算は、バッチ行 &lt;code&gt;b&lt;/code&gt; の時間 &lt;code&gt;t&lt;/code&gt; で、</target>
        </trans-unit>
        <trans-unit id="8941174f7a82cad8c90f6e6a03ac3a820dea0104" translate="yes" xml:space="preserve">
          <source>The dynamic range of the images (i.e., the difference between the maximum the and minimum allowed values).</source>
          <target state="translated">画像のダイナミックレンジ(すなわち、最大値と最小許容値の差)。</target>
        </trans-unit>
        <trans-unit id="2aae6b9d4f5b2d213b88b3723da3ddb26ced9416" translate="yes" xml:space="preserve">
          <source>The effective spatial dimensions of the zero-padded input tensor will be:</source>
          <target state="translated">ゼロパッド入力テンソルの有効空間寸法は、次のようになる。</target>
        </trans-unit>
        <trans-unit id="b9acfbbdfe245ea88de02f1a818fe0b504d8ee2c" translate="yes" xml:space="preserve">
          <source>The eigenvalues and eigenvectors for a non-Hermitian matrix in general are complex. The eigenvectors are not guaranteed to be linearly independent.</source>
          <target state="translated">一般に非ヘルミティア行列の固有値と固有ベクトルは複雑です。固有ベクトルは線形に独立であることが保証されていません。</target>
        </trans-unit>
        <trans-unit id="ee408bc36c08a8eb79de0b041ba288a43ece416b" translate="yes" xml:space="preserve">
          <source>The element-wise value of the x divided by y.</source>
          <target state="translated">xをyで割った要素ごとの値。</target>
        </trans-unit>
        <trans-unit id="ee6f05fbd02c64e68c12a5dd5234049b70dd5c18" translate="yes" xml:space="preserve">
          <source>The element-wise value of the x times y.</source>
          <target state="translated">x×yの要素ごとの値。</target>
        </trans-unit>
        <trans-unit id="5056d7193c98ed08aca24d8fed6317ade12de9af" translate="yes" xml:space="preserve">
          <source>The elements are shifted positively (towards larger indices) by the offset of &lt;code&gt;shift&lt;/code&gt; along the dimension of &lt;code&gt;axis&lt;/code&gt;. Negative &lt;code&gt;shift&lt;/code&gt; values will shift elements in the opposite direction. Elements that roll passed the last position will wrap around to the first and vice versa. Multiple shifts along multiple axes may be specified.</source>
          <target state="translated">要素は、 &lt;code&gt;axis&lt;/code&gt; の次元に沿った &lt;code&gt;shift&lt;/code&gt; のオフセットによって（より大きなインデックスに向かって）正にシフトされます。負の &lt;code&gt;shift&lt;/code&gt; 値は、要素を反対方向にシフトします。最後の位置を通過した要素は最初の位置に回り込み、その逆も同様です。複数の軸に沿った複数のシフトを指定できます。</target>
        </trans-unit>
        <trans-unit id="c40643e8152d969c58abd0946b228718afbfd024" translate="yes" xml:space="preserve">
          <source>The elements in &lt;code&gt;input&lt;/code&gt; are considered to be complex numbers of the form \(a + bj\), where &lt;em&gt;a&lt;/em&gt; is the real part and &lt;em&gt;b&lt;/em&gt; is the imaginary part. If &lt;code&gt;input&lt;/code&gt; is real then &lt;em&gt;b&lt;/em&gt; is zero by definition.</source>
          <target state="translated">&lt;code&gt;input&lt;/code&gt; の要素は、\（a + bj \）という形式の複素数と見なされます。ここで&lt;em&gt;、&lt;/em&gt;&lt;em&gt;a&lt;/em&gt;は実数部、&lt;em&gt;b&lt;/em&gt;は虚数部です。場合は &lt;code&gt;input&lt;/code&gt; 本物である、その後&lt;em&gt;Bが&lt;/em&gt;定義によってゼロです。</target>
        </trans-unit>
        <trans-unit id="bd6b82f2a01c27554a110fc1c60a8688cc656c5b" translate="yes" xml:space="preserve">
          <source>The elements of &lt;code&gt;result&lt;/code&gt; will be:</source>
          <target state="translated">&lt;code&gt;result&lt;/code&gt; の要素は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="7e5122262788d16dcc2a476a1ccd5d94e319a27e" translate="yes" xml:space="preserve">
          <source>The elements of &lt;code&gt;sampled_candidates&lt;/code&gt; are drawn without replacement (if &lt;code&gt;unique=True&lt;/code&gt;) or with replacement (if &lt;code&gt;unique=False&lt;/code&gt;) from the base distribution.</source>
          <target state="translated">&lt;code&gt;sampled_candidates&lt;/code&gt; の要素は、基本分布から置換なし（ &lt;code&gt;unique=True&lt;/code&gt; の場合）または置換あり（ &lt;code&gt;unique=False&lt;/code&gt; の場合）で描画されます。</target>
        </trans-unit>
        <trans-unit id="f8cb760115d6699c4a14874f1c5206c7b83dc9f1" translate="yes" xml:space="preserve">
          <source>The elements of &lt;code&gt;seq_lengths&lt;/code&gt; must obey &lt;code&gt;seq_lengths[i] &amp;lt;= input.dims[seq_axis]&lt;/code&gt;, and &lt;code&gt;seq_lengths&lt;/code&gt; must be a vector of length &lt;code&gt;input.dims[batch_axis]&lt;/code&gt;.</source>
          <target state="translated">要素 &lt;code&gt;seq_lengths&lt;/code&gt; は従わなければならない &lt;code&gt;seq_lengths[i] &amp;lt;= input.dims[seq_axis]&lt;/code&gt; 、そして &lt;code&gt;seq_lengths&lt;/code&gt; は、長さのベクトルでなければならない &lt;code&gt;input.dims[batch_axis]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="48ab33f1524aaeaed08c07c88c40746479f023b7" translate="yes" xml:space="preserve">
          <source>The elements of &lt;code&gt;seq_lengths&lt;/code&gt; must obey &lt;code&gt;seq_lengths[i] &amp;lt;= input.dims[seq_dim]&lt;/code&gt;, and &lt;code&gt;seq_lengths&lt;/code&gt; must be a vector of length &lt;code&gt;input.dims[batch_dim]&lt;/code&gt;.</source>
          <target state="translated">要素 &lt;code&gt;seq_lengths&lt;/code&gt; は従わなければならない &lt;code&gt;seq_lengths[i] &amp;lt;= input.dims[seq_dim]&lt;/code&gt; 、そして &lt;code&gt;seq_lengths&lt;/code&gt; は、長さのベクトルでなければならない &lt;code&gt;input.dims[batch_dim]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0d38c9da5faf42a7a6a14d9cb5caf234ae8f9c01" translate="yes" xml:space="preserve">
          <source>The elements of each job will be split between the two processes, with elements being consumed by the processes on a first-come first-served basis. One possible result is that process 1 prints</source>
          <target state="translated">各ジョブの要素は 2 つのプロセス間で分割され、要素は先着順にプロセスによって消費されます。1つの可能性としては、プロセス1が</target>
        </trans-unit>
        <trans-unit id="39f08dabb4ebd036182bf4e154d99641a60b1bde" translate="yes" xml:space="preserve">
          <source>The elements of the dataset must be scalar strings. To serialize dataset elements as strings, you can use the &lt;a href=&quot;../../io/serialize_tensor&quot;&gt;&lt;code&gt;tf.io.serialize_tensor&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">データセットの要素はスカラー文字列でなければなりません。データセット要素を文字列としてシリアル化するには、&lt;a href=&quot;../../io/serialize_tensor&quot;&gt; &lt;code&gt;tf.io.serialize_tensor&lt;/code&gt; &lt;/a&gt;関数を使用できます。</target>
        </trans-unit>
        <trans-unit id="056215457d55383c82886d3fc40bfbe65262e4c1" translate="yes" xml:space="preserve">
          <source>The elements of the output vector are in range (0, 1) and sum to 1.</source>
          <target state="translated">出力ベクトルの要素は範囲(0,1)であり、和は1となります。</target>
        </trans-unit>
        <trans-unit id="b779b04f9885caafc27f0474205a244037f9aefe" translate="yes" xml:space="preserve">
          <source>The elements of the resulting dataset are created by zipping corresponding elements from each of the input datasets.</source>
          <target state="translated">結果として得られるデータセットの要素は,それぞれの入力データセットから対応する要素をZIPして作成される.</target>
        </trans-unit>
        <trans-unit id="3650e19170e124ae92368cff21395feb363f4884" translate="yes" xml:space="preserve">
          <source>The elements of this dataset correspond to records from the file(s). RFC 4180 format is expected for CSV files (https://tools.ietf.org/html/rfc4180) Note that we allow leading and trailing spaces with int or float field.</source>
          <target state="translated">このデータセットの要素はファイルのレコードに対応する。CSVファイルではRFC 4180形式が期待されている (https://tools.ietf.org/html/rfc4180)intまたはfloatフィールドの先頭と末尾のスペースを許可していることに注意してください。</target>
        </trans-unit>
        <trans-unit id="bd68739a9e7ae81bc68e96ee2b6122f5a70e5503" translate="yes" xml:space="preserve">
          <source>The embedding dimension (width) of the table.</source>
          <target state="translated">表の埋め込み寸法(幅)。</target>
        </trans-unit>
        <trans-unit id="b86ebc65ff7fe45f105d160f18d2c35f7cb8da0f" translate="yes" xml:space="preserve">
          <source>The empty string, in which case the corresponding tensor is saved normally.</source>
          <target state="translated">この場合,対応するテンソルは正常に保存されます.</target>
        </trans-unit>
        <trans-unit id="c58cc0575d8bcfe00176a01cd63f2a1558bbe2e1" translate="yes" xml:space="preserve">
          <source>The encode and decode Ops apply to one image at a time. Their input and output are all of variable size. If you need fixed size images, pass the output of the decode Ops to one of the cropping and resizing Ops.</source>
          <target state="translated">エンコードおよびデコード操作は、一度に1つの画像に適用されます。それらの入力と出力はすべて可変サイズです。固定サイズのイメージが必要な場合は、デコード操作の出力をクロッピングおよびリサイズ操作のいずれかに渡します。</target>
        </trans-unit>
        <trans-unit id="c3aeafaf8f36325e7f515de971621d719406107b" translate="yes" xml:space="preserve">
          <source>The end result is that if the input is marked as an explicit endianness the transcoding is faithful to all codepoints in the source. If it is not marked with an explicit endianness, the BOM is not considered part of the string itself but as metadata, and so is not preserved in the output.</source>
          <target state="translated">最終的には、 入力が明示的エンディアンとしてマークされていれば、トランスコーディングはソース内のすべてのコードポイントに忠実に行われます。明示的なエンディアンとしてマークされていない場合は、BOM は文字列そのものの一部ではなくメタデータとみなされ、出力には保存されません。</target>
        </trans-unit>
        <trans-unit id="a7d3c35f0e85c1a6bf781b776ea72d3b7217b57e" translate="yes" xml:space="preserve">
          <source>The entire Python program exits when no alive non-daemon threads are left.</source>
          <target state="translated">デーモンではないスレッドが残っていない場合、Pythonプログラム全体が終了します。</target>
        </trans-unit>
        <trans-unit id="c67894db798c48ee917afae60b483f03b8c6455e" translate="yes" xml:space="preserve">
          <source>The entire Python program exits when only daemon threads are left.</source>
          <target state="translated">デーモンスレッドだけが残っていると、Pythonプログラム全体が終了します。</target>
        </trans-unit>
        <trans-unit id="fcab26b6f1d2bad63f4beb447401d7b8916bee05" translate="yes" xml:space="preserve">
          <source>The entire optimizer is currently thread compatible, not thread-safe. The user needs to perform synchronization if necessary.</source>
          <target state="translated">オプティマイザ全体は現在スレッド互換性があり、スレッドセーフではありません。ユーザーは必要に応じて同期を実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="c33387bb265f08d2eccc0ee4964677edfa18dfee" translate="yes" xml:space="preserve">
          <source>The error message that describes the error.</source>
          <target state="translated">エラーを説明するエラーメッセージ。</target>
        </trans-unit>
        <trans-unit id="3992d2c2ef24613a2edd3a09184b92d4f6c82dcc" translate="yes" xml:space="preserve">
          <source>The estimator uses a user-specified head.</source>
          <target state="translated">推定器はユーザーが指定したヘッドを使用します。</target>
        </trans-unit>
        <trans-unit id="c0f4a9f9118713f2c65753167fbc45edc83681df" translate="yes" xml:space="preserve">
          <source>The event shape and the batch shape are properties of a Distribution object, whereas the sample shape is associated with a specific call to &lt;code&gt;sample&lt;/code&gt; or &lt;code&gt;log_prob&lt;/code&gt;.</source>
          <target state="translated">イベントシェイプとバッチシェイプはDistributionオブジェクトのプロパティですが、サンプルシェイプは &lt;code&gt;sample&lt;/code&gt; または &lt;code&gt;log_prob&lt;/code&gt; への特定の呼び出しに関連付けられています。</target>
        </trans-unit>
        <trans-unit id="e19c4b1d5034eb4e65cdca6271a9f69191e90f42" translate="yes" xml:space="preserve">
          <source>The example above uses the keyword argument &quot;step_num&quot; to specify the training step being traced.</source>
          <target state="translated">上の例では、キーワード引数 &quot;step_num &quot;を使用して、トレースするトレーニングステップを指定しています。</target>
        </trans-unit>
        <trans-unit id="d89bb90670419b9d3a4b50ee4e20b8624c955245" translate="yes" xml:space="preserve">
          <source>The example has two variables containing parameters, &lt;code&gt;dense.kernel&lt;/code&gt; (2 parameters) and &lt;code&gt;dense.bias&lt;/code&gt; (1 parameter). Considering the training data &lt;code&gt;x&lt;/code&gt; as a constant, this means the Jacobian matrix for the function mapping from parameters to loss has one row and three columns.</source>
          <target state="translated">この例には、 &lt;code&gt;dense.kernel&lt;/code&gt; （2つのパラメーター）と &lt;code&gt;dense.bias&lt;/code&gt; （1 つのパラメーター）というパラメーターを含む2つの変数があります。トレーニングデータ &lt;code&gt;x&lt;/code&gt; を定数として考えると、これは、パラメーターから損失への関数マッピングのヤコビ行列が1行3列であることを意味します。</target>
        </trans-unit>
        <trans-unit id="84c18ab207b5195ffc68356ad590594bcf1dfa71" translate="yes" xml:space="preserve">
          <source>The examples below are for the case when only indices have leading extra dimensions. If both 'params' and 'indices' have leading batch dimensions, use the 'batch_dims' parameter to run gather_nd in batch mode.</source>
          <target state="translated">以下の例は、indexのみが先頭の余計な次元を持つ場合のものです。params' と 'indices' の両方にバッチ次元の先頭がある場合、'batch_dims' パラメータを使用してバッチモードで gather_nd を実行します。</target>
        </trans-unit>
        <trans-unit id="d6bb9f9b8e615c827d76fd441b8f54dc8cd4e856" translate="yes" xml:space="preserve">
          <source>The execution engine to connect to.</source>
          <target state="translated">接続する実行エンジン。</target>
        </trans-unit>
        <trans-unit id="8918766792e879b9d59da00a6e0e039a16054478" translate="yes" xml:space="preserve">
          <source>The expected cardinality of the input dataset.</source>
          <target state="translated">入力データセットの期待されるカーディナリティ.</target>
        </trans-unit>
        <trans-unit id="d5de696bdbf9044458c641e379962d440aa33f58" translate="yes" xml:space="preserve">
          <source>The expected datatype of the sequences, or None if no datatype should be enforced.</source>
          <target state="translated">シーケンスの期待されるデータ型、またはデータ型を強制する必要がない場合は None。</target>
        </trans-unit>
        <trans-unit id="e3928718719fe99849e7ac1ac65a36c562e1538d" translate="yes" xml:space="preserve">
          <source>The expected hash string of the file after download. The sha256 and md5 hash algorithms are both supported.</source>
          <target state="translated">ダウンロード後に期待されるファイルのハッシュ文字列。sha256 と md5 ハッシュアルゴリズムの両方がサポートされています。</target>
        </trans-unit>
        <trans-unit id="6e7988b38263986e25122de775533e193c686e78" translate="yes" xml:space="preserve">
          <source>The expected length of the container.</source>
          <target state="translated">コンテナの予想される長さ。</target>
        </trans-unit>
        <trans-unit id="bda1fab4530bea5769655be69388620ba7cc79a3" translate="yes" xml:space="preserve">
          <source>The expected numpy &lt;code&gt;ndarray&lt;/code&gt;, or anything that can be converted into a numpy &lt;code&gt;ndarray&lt;/code&gt; (including Tensor), or any arbitrarily nested of structure of these.</source>
          <target state="translated">予想される &lt;code&gt;ndarray&lt;/code&gt; 、またはnumpy &lt;code&gt;ndarray&lt;/code&gt; （Tensorを含む）に変換できるもの、またはこれらの構造の任意にネストされたもの。</target>
        </trans-unit>
        <trans-unit id="78ad8b1f8ab153e6768481eb32292aa26fa61403" translate="yes" xml:space="preserve">
          <source>The expected output of its iterations is:</source>
          <target state="translated">その繰り返しの期待される出力は</target>
        </trans-unit>
        <trans-unit id="7a97b08c68384c6b725f7994e4ae0a05ba85ecb6" translate="yes" xml:space="preserve">
          <source>The expected return values are: features: A &lt;code&gt;Tensor&lt;/code&gt;, &lt;code&gt;SparseTensor&lt;/code&gt;, or dict of string or int to &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;SparseTensor&lt;/code&gt;, specifying the features to be passed to the model. Note: if &lt;code&gt;features&lt;/code&gt; passed is not a dict, it will be wrapped in a dict with a single entry, using 'feature' as the key. Consequently, the model must accept a feature dict of the form {'feature': tensor}. You may use &lt;code&gt;TensorServingInputReceiver&lt;/code&gt; if you want the tensor to be passed as is. receiver_tensors: A &lt;code&gt;Tensor&lt;/code&gt;, &lt;code&gt;SparseTensor&lt;/code&gt;, or dict of string to &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;SparseTensor&lt;/code&gt;, specifying input nodes where this receiver expects to be fed by default. Typically, this is a single placeholder expecting serialized &lt;code&gt;tf.Example&lt;/code&gt; protos. receiver_tensors_alternatives: a dict of string to additional groups of receiver tensors, each of which may be a &lt;code&gt;Tensor&lt;/code&gt;, &lt;code&gt;SparseTensor&lt;/code&gt;, or dict of string to &lt;code&gt;Tensor&lt;/code&gt; or&lt;code&gt;SparseTensor&lt;/code&gt;. These named receiver tensor alternatives generate additional serving signatures, which may be used to feed inputs at different points within the input receiver subgraph. A typical usage is to allow feeding raw feature &lt;code&gt;Tensor&lt;/code&gt;s &lt;em&gt;downstream&lt;/em&gt; of the tf.parse_example() op. Defaults to None.</source>
          <target state="translated">期待される戻り値は次のとおりです &lt;code&gt;SparseTensor&lt;/code&gt; ： &lt;code&gt;Tensor&lt;/code&gt; 、SparseTensor、または &lt;code&gt;Tensor&lt;/code&gt; または &lt;code&gt;SparseTensor&lt;/code&gt; への文字列またはintのdict 。モデルに渡される機能を指定します。注：渡された &lt;code&gt;features&lt;/code&gt; がdictではない場合、 'feature'をキーとして使用して、単一のエントリを持つdictにラップされます。したがって、モデルは{'feature'：tensor}という形式の特徴ディクショナリを受け入れる必要があります。テンソルをそのまま渡す場合は、 &lt;code&gt;TensorServingInputReceiver&lt;/code&gt; を使用できます。 receiver_tensors： &lt;code&gt;Tensor&lt;/code&gt; または &lt;code&gt;SparseTensor&lt;/code&gt; への文字列の &lt;code&gt;Tensor&lt;/code&gt; 、 &lt;code&gt;SparseTensor&lt;/code&gt; 、またはdict、このレシーバーがデフォルトでフィードされることを期待する入力ノードを指定します。通常、これはシリアル化された &lt;code&gt;tf.Example&lt;/code&gt; プロトを期待する単一のプレースホルダーです。 receiver_tensors_alternatives： &lt;code&gt;Tensor&lt;/code&gt; 、 &lt;code&gt;SparseTensor&lt;/code&gt; 、または &lt;code&gt;Tensor&lt;/code&gt; または &lt;code&gt;SparseTensor&lt;/code&gt; への文字列のdictであるレシーバテンソルの追加グループへの文字列のdict 。これらの名前付きレシーバーテンソル代替は、追加のサービングシグネチャを生成します。これは、入力レシーバーサブグラフ内のさまざまなポイントで入力を供給するために使用できます。典型的な使用法は、tf.parse_example（）op の&lt;em&gt;下流&lt;/em&gt;で生の機能 &lt;code&gt;Tensor&lt;/code&gt; をフィードできるようにすることです。デフォルトはNoneです。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="31f7e12f63f032ea1d264ce969a77506eba82800" translate="yes" xml:space="preserve">
          <source>The expected return values are: features: A single &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;SparseTensor&lt;/code&gt;, representing the feature to be passed to the model. receiver_tensors: A &lt;code&gt;Tensor&lt;/code&gt;, &lt;code&gt;SparseTensor&lt;/code&gt;, or dict of string to &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;SparseTensor&lt;/code&gt;, specifying input nodes where this receiver expects to be fed by default. Typically, this is a single placeholder expecting serialized &lt;code&gt;tf.Example&lt;/code&gt; protos. receiver_tensors_alternatives: a dict of string to additional groups of receiver tensors, each of which may be a &lt;code&gt;Tensor&lt;/code&gt;, &lt;code&gt;SparseTensor&lt;/code&gt;, or dict of string to &lt;code&gt;Tensor&lt;/code&gt; or&lt;code&gt;SparseTensor&lt;/code&gt;. These named receiver tensor alternatives generate additional serving signatures, which may be used to feed inputs at different points within the input receiver subgraph. A typical usage is to allow feeding raw feature &lt;code&gt;Tensor&lt;/code&gt;s &lt;em&gt;downstream&lt;/em&gt; of the tf.parse_example() op. Defaults to None.</source>
          <target state="translated">期待される戻り値は次のとおりです &lt;code&gt;SparseTensor&lt;/code&gt; ：モデルに渡される機能を表す単一の &lt;code&gt;Tensor&lt;/code&gt; またはSparseTensor。 receiver_tensors： &lt;code&gt;Tensor&lt;/code&gt; 、 &lt;code&gt;SparseTensor&lt;/code&gt; 、または &lt;code&gt;Tensor&lt;/code&gt; または &lt;code&gt;SparseTensor&lt;/code&gt; への文字列のdictで、このレシーバーがデフォルトで供給されることを期待する入力ノードを指定します。通常、これはシリアル化された &lt;code&gt;tf.Example&lt;/code&gt; プロトを期待する単一のプレースホルダーです。 receiver_tensors_alternatives： &lt;code&gt;Tensor&lt;/code&gt; 、 &lt;code&gt;SparseTensor&lt;/code&gt; 、または &lt;code&gt;Tensor&lt;/code&gt; または &lt;code&gt;SparseTensor&lt;/code&gt; への文字列のdictであるレシーバテンソルの追加グループへの文字列のdict。これらの名前付きレシーバーテンソル代替は、追加のサービングシグネチャを生成します。これは、入力レシーバーサブグラフ内の異なるポイントで入力を供給するために使用できます。典型的な使用法は、tf.parse_example（）op の&lt;em&gt;下流&lt;/em&gt;で生の機能 &lt;code&gt;Tensor&lt;/code&gt; をフィードできるようにすることです。デフォルトはNoneです。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a09896f6b4f647e3c96ed132a504af085f335053" translate="yes" xml:space="preserve">
          <source>The expected shape of the output tensor (excluding the batch dimension and any dimensions represented by ellipses). You can specify None for any dimension that is unknown or can be inferred from the input shape.</source>
          <target state="translated">出力テンソルの予想形状(バッチ寸法と楕円で表される寸法を除く)。不明な寸法や入力形状から推測できる寸法には、Noneを指定することができます。</target>
        </trans-unit>
        <trans-unit id="a40612bf469e8a522446e66d41d431047e69cf63" translate="yes" xml:space="preserve">
          <source>The expected size of the &lt;code&gt;logits&lt;/code&gt; tensor.</source>
          <target state="translated">&lt;code&gt;logits&lt;/code&gt; テンソルの予想サイズ。</target>
        </trans-unit>
        <trans-unit id="a0f440ff029659182acbea8855f46dd42d2a4e96" translate="yes" xml:space="preserve">
          <source>The expected table key dtype.</source>
          <target state="translated">期待されるテーブルキーdtype。</target>
        </trans-unit>
        <trans-unit id="31bcecc626aa91dd2b7d91005cf6117e6bde9f72" translate="yes" xml:space="preserve">
          <source>The expected table value dtype.</source>
          <target state="translated">テーブルの期待値 dtype。</target>
        </trans-unit>
        <trans-unit id="376e0fcfa926199ad6e385d57f40bbf540152a01" translate="yes" xml:space="preserve">
          <source>The expected type of exception that should be raised.</source>
          <target state="translated">発生させるべき例外の種類を指定します。</target>
        </trans-unit>
        <trans-unit id="ce7ef07c28defdcd9df2cbeda8fcff1eb3a70cf0" translate="yes" xml:space="preserve">
          <source>The expected values are &lt;a href=&quot;../../../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../../sparse/sparsetensor&quot;&gt;&lt;code&gt;tf.SparseTensor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">期待される値は&lt;a href=&quot;../../../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../../../sparse/sparsetensor&quot;&gt; &lt;code&gt;tf.SparseTensor&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="c7c8fde13147479cf3364c839442aedae9a726dc" translate="yes" xml:space="preserve">
          <source>The expected values are &lt;a href=&quot;../../../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../../sparse/sparsetensor&quot;&gt;&lt;code&gt;tf.sparse.SparseTensor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">期待値は&lt;a href=&quot;../../../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../../../sparse/sparsetensor&quot;&gt; &lt;code&gt;tf.sparse.SparseTensor&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="dec1b3abe2b21793505b8807293f4669331e6f37" translate="yes" xml:space="preserve">
          <source>The experimental_mode parameter can be used to export a single train/eval/predict graph as a &lt;code&gt;SavedModel&lt;/code&gt;. See &lt;code&gt;experimental_export_all_saved_models&lt;/code&gt; for full docs.</source>
          <target state="translated">experimental_modeパラメータを使用して、単一のtrain / eval / &lt;code&gt;SavedModel&lt;/code&gt; グラフをSavedModelとしてエクスポートできます。完全なドキュメントについては、 &lt;code&gt;experimental_export_all_saved_models&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="7605e2fe49cffe7e518a9ae0d1ab56de778f3211" translate="yes" xml:space="preserve">
          <source>The exponential is computed using a combination of the scaling and squaring method and the Pade approximation. Details can be found in: Nicholas J. Higham, &quot;The scaling and squaring method for the matrix exponential revisited,&quot; SIAM J. Matrix Anal. Applic., 26:1179-1193, 2005.</source>
          <target state="translated">指数は、スケーリングと二乗法とPade近似の組み合わせを使用して計算されます。詳細は以下を参照してください。Nicholas J.Higham,&quot;The scaling and squaring method for the matrix exponential revisited,&quot; SIAM J.Matrix Anal.Applic.,26:1179-1193,2005.</target>
        </trans-unit>
        <trans-unit id="4f5a78bc935e9e08409cbf0ad9095df30519c6ba" translate="yes" xml:space="preserve">
          <source>The exponential linear activation: &lt;code&gt;x&lt;/code&gt; if &lt;code&gt;x &amp;gt; 0&lt;/code&gt; and &lt;code&gt;alpha * (exp(x)-1)&lt;/code&gt; if &lt;code&gt;x &amp;lt; 0&lt;/code&gt;.</source>
          <target state="translated">指数線形活性化： &lt;code&gt;x&lt;/code&gt; なら &lt;code&gt;x &amp;gt; 0&lt;/code&gt; と &lt;code&gt;alpha * (exp(x)-1)&lt;/code&gt; であれば &lt;code&gt;x &amp;lt; 0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2d28f89676ea4197a32d7a392e0d037302ffbd35" translate="yes" xml:space="preserve">
          <source>The exponential linear unit (ELU) activation function: &lt;code&gt;x&lt;/code&gt; if &lt;code&gt;x &amp;gt; 0&lt;/code&gt; and &lt;code&gt;alpha * (exp(x) - 1)&lt;/code&gt; if &lt;code&gt;x &amp;lt; 0&lt;/code&gt;.</source>
          <target state="translated">指数リニアユニット（ELU）活性化関数： &lt;code&gt;x&lt;/code&gt; なら &lt;code&gt;x &amp;gt; 0&lt;/code&gt; と &lt;code&gt;alpha * (exp(x) - 1)&lt;/code&gt; であれば &lt;code&gt;x &amp;lt; 0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7cf62415d8dce700f1230ed830d364734140b756" translate="yes" xml:space="preserve">
          <source>The exponential linear unit (ELU) with &lt;code&gt;alpha &amp;gt; 0&lt;/code&gt; is: &lt;code&gt;x&lt;/code&gt; if &lt;code&gt;x &amp;gt; 0&lt;/code&gt; and &lt;code&gt;alpha * (exp(x) - 1)&lt;/code&gt; if &lt;code&gt;x &amp;lt; 0&lt;/code&gt; The ELU hyperparameter &lt;code&gt;alpha&lt;/code&gt; controls the value to which an ELU saturates for negative net inputs. ELUs diminish the vanishing gradient effect.</source>
          <target state="translated">有する指数リニアユニット（ELU） &lt;code&gt;alpha &amp;gt; 0&lt;/code&gt; である： &lt;code&gt;x&lt;/code&gt; なら &lt;code&gt;x &amp;gt; 0&lt;/code&gt; と &lt;code&gt;alpha * (exp(x) - 1)&lt;/code&gt; であれば &lt;code&gt;x &amp;lt; 0&lt;/code&gt; ELUハイパ &lt;code&gt;alpha&lt;/code&gt; 負の正味入力の値にELU飽和コントロール。ELUは、勾配消失効果を減少させます。</target>
        </trans-unit>
        <trans-unit id="6a8c6448917add778eb240e31bd6ab87cce7e676" translate="yes" xml:space="preserve">
          <source>The exported &lt;code&gt;MetaGraphDef&lt;/code&gt; will provide one &lt;code&gt;SignatureDef&lt;/code&gt; for each element of the &lt;code&gt;export_outputs&lt;/code&gt; dict returned from the &lt;code&gt;model_fn&lt;/code&gt;, named using the same keys. One of these keys is always &lt;code&gt;tf.saved_model.signature_constants.DEFAULT_SERVING_SIGNATURE_DEF_KEY&lt;/code&gt;, indicating which signature will be served when a serving request does not specify one. For each signature, the outputs are provided by the corresponding &lt;a href=&quot;../../../../estimator/export/exportoutput&quot;&gt;&lt;code&gt;tf.estimator.export.ExportOutput&lt;/code&gt;&lt;/a&gt;s, and the inputs are always the input receivers provided by the &lt;code&gt;serving_input_receiver_fn&lt;/code&gt;.</source>
          <target state="translated">エクスポートされた &lt;code&gt;MetaGraphDef&lt;/code&gt; は、同じキーを使用して名前が付けられた、 &lt;code&gt;model_fn&lt;/code&gt; から返されたexport_outputs &lt;code&gt;export_outputs&lt;/code&gt; 要素ごとに1つの &lt;code&gt;SignatureDef&lt;/code&gt; を提供します。これらのキーの1つは常に &lt;code&gt;tf.saved_model.signature_constants.DEFAULT_SERVING_SIGNATURE_DEF_KEY&lt;/code&gt; であり、提供するリクエストで指定されていない場合に提供される署名を示します。各シグニチャーについて、出力は対応する&lt;a href=&quot;../../../../estimator/export/exportoutput&quot;&gt; &lt;code&gt;tf.estimator.export.ExportOutput&lt;/code&gt; &lt;/a&gt;によって提供され、入力は常に &lt;code&gt;serving_input_receiver_fn&lt;/code&gt; によって提供される入力レシーバーです。</target>
        </trans-unit>
        <trans-unit id="9e2875cf5dfc1a19c0a389906972c0cc62d32b4f" translate="yes" xml:space="preserve">
          <source>The exported &lt;code&gt;MetaGraphDef&lt;/code&gt; will provide one &lt;code&gt;SignatureDef&lt;/code&gt; for each element of the &lt;code&gt;export_outputs&lt;/code&gt; dict returned from the &lt;code&gt;model_fn&lt;/code&gt;, named using the same keys. One of these keys is always &lt;code&gt;tf.saved_model.signature_constants.DEFAULT_SERVING_SIGNATURE_DEF_KEY&lt;/code&gt;, indicating which signature will be served when a serving request does not specify one. For each signature, the outputs are provided by the corresponding &lt;a href=&quot;../../../estimator/export/exportoutput&quot;&gt;&lt;code&gt;tf.estimator.export.ExportOutput&lt;/code&gt;&lt;/a&gt;s, and the inputs are always the input receivers provided by the &lt;code&gt;serving_input_receiver_fn&lt;/code&gt;.</source>
          <target state="translated">エクスポートされた &lt;code&gt;MetaGraphDef&lt;/code&gt; は、同じキーを使用して名前が付けられた、 &lt;code&gt;model_fn&lt;/code&gt; から返されたexport_outputs &lt;code&gt;export_outputs&lt;/code&gt; 要素ごとに1つの &lt;code&gt;SignatureDef&lt;/code&gt; を提供します。これらのキーの1つは常に &lt;code&gt;tf.saved_model.signature_constants.DEFAULT_SERVING_SIGNATURE_DEF_KEY&lt;/code&gt; であり、提供するリクエストで指定されていない場合に提供される署名を示します。各シグニチャーについて、出力は対応する&lt;a href=&quot;../../../estimator/export/exportoutput&quot;&gt; &lt;code&gt;tf.estimator.export.ExportOutput&lt;/code&gt; &lt;/a&gt;によって提供され、入力は常に &lt;code&gt;serving_input_receiver_fn&lt;/code&gt; によって提供される入力レシーバーです。</target>
        </trans-unit>
        <trans-unit id="72c1a65a7779ecfbc3e340268769bc17bef0c731" translate="yes" xml:space="preserve">
          <source>The exported &lt;code&gt;MetaGraphDef&lt;/code&gt; will provide one &lt;code&gt;SignatureDef&lt;/code&gt; for each element of the &lt;code&gt;export_outputs&lt;/code&gt; dict returned from the &lt;code&gt;model_fn&lt;/code&gt;, named using the same keys. One of these keys is always &lt;code&gt;tf.saved_model.signature_constants.DEFAULT_SERVING_SIGNATURE_DEF_KEY&lt;/code&gt;, indicating which signature will be served when a serving request does not specify one. For each signature, the outputs are provided by the corresponding &lt;a href=&quot;../export/exportoutput&quot;&gt;&lt;code&gt;tf.estimator.export.ExportOutput&lt;/code&gt;&lt;/a&gt;s, and the inputs are always the input receivers provided by the &lt;code&gt;serving_input_receiver_fn&lt;/code&gt;.</source>
          <target state="translated">エクスポートされた &lt;code&gt;MetaGraphDef&lt;/code&gt; は、同じキーを使用して名前が付けられた、 &lt;code&gt;model_fn&lt;/code&gt; から返されたexport_outputs &lt;code&gt;export_outputs&lt;/code&gt; 要素ごとに1つの &lt;code&gt;SignatureDef&lt;/code&gt; を提供します。これらのキーの1つは常に &lt;code&gt;tf.saved_model.signature_constants.DEFAULT_SERVING_SIGNATURE_DEF_KEY&lt;/code&gt; であり、提供するリクエストで指定されていない場合に提供される署名を示します。各シグニチャーについて、出力は対応する&lt;a href=&quot;../export/exportoutput&quot;&gt; &lt;code&gt;tf.estimator.export.ExportOutput&lt;/code&gt; &lt;/a&gt;によって提供され、入力は常に &lt;code&gt;serving_input_receiver_fn&lt;/code&gt; によって提供される入力レシーバーです。</target>
        </trans-unit>
        <trans-unit id="f952c6857d4170532f4c4a40882608ceb9fe6cf5" translate="yes" xml:space="preserve">
          <source>The exported &lt;code&gt;MetaGraphDef&lt;/code&gt; will provide one &lt;code&gt;SignatureDef&lt;/code&gt; for each element of the &lt;code&gt;export_outputs&lt;/code&gt; dict returned from the &lt;code&gt;model_fn&lt;/code&gt;, named using the same keys. One of these keys is always &lt;code&gt;tf.saved_model.signature_constants.DEFAULT_SERVING_SIGNATURE_DEF_KEY&lt;/code&gt;, indicating which signature will be served when a serving request does not specify one. For each signature, the outputs are provided by the corresponding &lt;a href=&quot;export/exportoutput&quot;&gt;&lt;code&gt;tf.estimator.export.ExportOutput&lt;/code&gt;&lt;/a&gt;s, and the inputs are always the input receivers provided by the &lt;code&gt;serving_input_receiver_fn&lt;/code&gt;.</source>
          <target state="translated">エクスポートされた &lt;code&gt;MetaGraphDef&lt;/code&gt; は、同じキーを使用して名前が付けられた、 &lt;code&gt;model_fn&lt;/code&gt; から返されたexport_outputs &lt;code&gt;export_outputs&lt;/code&gt; 要素ごとに1つの &lt;code&gt;SignatureDef&lt;/code&gt; を提供します。これらのキーの1つは常に &lt;code&gt;tf.saved_model.signature_constants.DEFAULT_SERVING_SIGNATURE_DEF_KEY&lt;/code&gt; であり、提供するリクエストで指定されていない場合に提供される署名を示します。各シグニチャーについて、出力は対応する&lt;a href=&quot;export/exportoutput&quot;&gt; &lt;code&gt;tf.estimator.export.ExportOutput&lt;/code&gt; &lt;/a&gt;によって提供され、入力は常に &lt;code&gt;serving_input_receiver_fn&lt;/code&gt; によって提供される入力レシーバーです。</target>
        </trans-unit>
        <trans-unit id="7d89ddec6391085569ef9d73498cfde0f5e37d2b" translate="yes" xml:space="preserve">
          <source>The exported &lt;code&gt;SavedModel&lt;/code&gt; is a standalone serialization of Tensorflow objects, and is supported by TF language APIs and the Tensorflow Serving system. To load the model, use the function &lt;code&gt;tf.keras.experimental.load_from_saved_model&lt;/code&gt;.</source>
          <target state="translated">エクスポートされた &lt;code&gt;SavedModel&lt;/code&gt; はTensorflowオブジェクトのスタンドアロンのシリアル化であり、TF言語APIとTensorflow Servingシステムでサポートされています。モデルをロードするには、関数 &lt;code&gt;tf.keras.experimental.load_from_saved_model&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="115b43cdf7131901fe589992324081fddba4d32c" translate="yes" xml:space="preserve">
          <source>The factory function &lt;a href=&quot;raggedtensor#from_nested_row_splits&quot;&gt;&lt;code&gt;RaggedTensor.from_nested_row_splits&lt;/code&gt;&lt;/a&gt; may be used to construct a &lt;code&gt;RaggedTensor&lt;/code&gt; with multiple ragged dimensions directly, by providing a list of &lt;code&gt;row_splits&lt;/code&gt; tensors:</source>
          <target state="translated">ファクトリ関数&lt;a href=&quot;raggedtensor#from_nested_row_splits&quot;&gt; &lt;code&gt;RaggedTensor.from_nested_row_splits&lt;/code&gt; &lt;/a&gt;を使用して、 &lt;code&gt;row_splits&lt;/code&gt; テンソルのリストを提供することにより、複数の不規則な次元を持つ &lt;code&gt;RaggedTensor&lt;/code&gt; を直接構築できます。</target>
        </trans-unit>
        <trans-unit id="2fe7017c754a0ab851bc9cefd6824cd6141a0f6a" translate="yes" xml:space="preserve">
          <source>The features dict.</source>
          <target state="translated">特徴はディクト。</target>
        </trans-unit>
        <trans-unit id="5250bfc0637fd3caf98029dfc4f15e7f982fc0a9" translate="yes" xml:space="preserve">
          <source>The filename of the text file to be used for initialization. The path must be accessible from wherever the graph is initialized (eg. trainer or eval workers). The filename may be a scalar &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="translated">初期化に使用するテキストファイルのファイル名。パスは、グラフが初期化される場所（トレーナーや評価ワーカーなど）からアクセスできる必要があります。ファイル名はスカラー &lt;code&gt;Tensor&lt;/code&gt; 可能性があります。</target>
        </trans-unit>
        <trans-unit id="a8e6fb1c6f484ae15d3065837532041a4bcf6093" translate="yes" xml:space="preserve">
          <source>The filename.</source>
          <target state="translated">ファイル名です。</target>
        </trans-unit>
        <trans-unit id="88abaf7b1285ab3d50567c2571a1737eb63924d9" translate="yes" xml:space="preserve">
          <source>The files in the dump directory contain the following information:</source>
          <target state="translated">ダンプディレクトリ内のファイルには、以下の情報が含まれています。</target>
        </trans-unit>
        <trans-unit id="84412542c638bfe39a033a0e5c516c5c165f7f74" translate="yes" xml:space="preserve">
          <source>The files in the dump directory contain the following information: - TensorFlow Function construction (e.g., compilation of Python functions decorated with @tf.function), the op types, names (if available), context, the input and output tensors, and the associated stack traces. - Execution of TensorFlow operations (ops) and Functions and their stack traces, op types, names (if available) and contexts. In addition, depending on the value of the &lt;code&gt;tensor_debug_mode&lt;/code&gt; argument (see Args section below), the value(s) of the output tensors or more concise summaries of the tensor values will be dumped. - A snapshot of Python source files involved in the execution of the TensorFlow program.</source>
          <target state="translated">ダンプディレクトリ内のファイルには、次の情報が含まれています。関連するスタックトレース。-TensorFlowオペレーション（ops）と関数、およびそれらのスタックトレース、opタイプ、名前（利用可能な場合）、およびコンテキストの実行。さらに、 &lt;code&gt;tensor_debug_mode&lt;/code&gt; 引数の値に応じて（以下のArgsセクションを参照）、出力テンソルの値またはテンソル値のより簡潔な要約がダンプされます。-TensorFlowプログラムの実行に関連するPythonソースファイルのスナップショット。</target>
        </trans-unit>
        <trans-unit id="9b2fccc77c27cb9da14140ce6802364bb75efc8d" translate="yes" xml:space="preserve">
          <source>The final callable to be wrapped.</source>
          <target state="translated">最終的にラップされるcallable。</target>
        </trans-unit>
        <trans-unit id="09f8439348997f787869e438ea0a2a5a324c4fe3" translate="yes" xml:space="preserve">
          <source>The final state. If &lt;code&gt;cell.state_size&lt;/code&gt; is an int, this will be shaped &lt;code&gt;[batch_size, cell.state_size]&lt;/code&gt;. If it is a &lt;code&gt;TensorShape&lt;/code&gt;, this will be shaped &lt;code&gt;[batch_size] + cell.state_size&lt;/code&gt;. If it is a (possibly nested) tuple of ints or &lt;code&gt;TensorShape&lt;/code&gt;, this will be a tuple having the corresponding shapes. If cells are &lt;code&gt;LSTMCells&lt;/code&gt;&lt;code&gt;state&lt;/code&gt; will be a tuple containing a &lt;code&gt;LSTMStateTuple&lt;/code&gt; for each cell.</source>
          <target state="translated">最終状態。 &lt;code&gt;cell.state_size&lt;/code&gt; がintの場合、これは &lt;code&gt;[batch_size, cell.state_size]&lt;/code&gt; 形になります。 &lt;code&gt;TensorShape&lt;/code&gt; の場合、これは &lt;code&gt;[batch_size] + cell.state_size&lt;/code&gt; 形になります。それがintまたは &lt;code&gt;TensorShape&lt;/code&gt; の（おそらくネストされた）タプルである場合、これは対応する形状を持つタプルになります。セルが &lt;code&gt;LSTMCells&lt;/code&gt; の場合、 &lt;code&gt;state&lt;/code&gt; は各セルの &lt;code&gt;LSTMStateTuple&lt;/code&gt; を含むタプルになります。</target>
        </trans-unit>
        <trans-unit id="36ee6080bb9a8b37b0bbd48b91307f93d8a3c47a" translate="yes" xml:space="preserve">
          <source>The first and last &lt;code&gt;summarize&lt;/code&gt; elements within each dimension are recursively printed per Tensor. If None, then the first 3 and last 3 elements of each dimension are printed for each tensor. If set to -1, it will print all elements of every tensor.</source>
          <target state="translated">各次元内の最初と最後の &lt;code&gt;summarize&lt;/code&gt; 要素は、テンソルごとに再帰的に出力されます。Noneの場合、各次元の最初の3要素と最後の3要素が各テンソルに対して出力されます。-1に設定すると、すべてのテンソルのすべての要素が出力されます。</target>
        </trans-unit>
        <trans-unit id="64d3781f8c1cf2f73b0435ec5f118276a042b180" translate="yes" xml:space="preserve">
          <source>The first argument in the example slice is turned into &lt;code&gt;begin = 1&lt;/code&gt; and &lt;code&gt;end = begin + 1 = 2&lt;/code&gt;. To disambiguate from the original spec &lt;code&gt;2:4&lt;/code&gt; we also set the appropriate bit in &lt;code&gt;shrink_axis_mask&lt;/code&gt;.</source>
          <target state="translated">サンプルスライスの最初の引数は、 &lt;code&gt;begin = 1&lt;/code&gt; および &lt;code&gt;end = begin + 1 = 2&lt;/code&gt; に変換されます。元の仕様 &lt;code&gt;2:4&lt;/code&gt; から明確にするために、 &lt;code&gt;shrink_axis_mask&lt;/code&gt; に適切なビットも設定します。</target>
        </trans-unit>
        <trans-unit id="50c753605d6ee518cbe6dced5742e28ec63d5987" translate="yes" xml:space="preserve">
          <source>The first dict contains the context key/values.</source>
          <target state="translated">最初のディクトには、コンテキストキー/値が含まれています。</target>
        </trans-unit>
        <trans-unit id="5344b4467816487b27f53d3359aea3ba20354b84" translate="yes" xml:space="preserve">
          <source>The first distribution.</source>
          <target state="translated">最初の分布です。</target>
        </trans-unit>
        <trans-unit id="8723eb87dd8e28a8fab5df851a599f355edbe887" translate="yes" xml:space="preserve">
          <source>The first list to compare.</source>
          <target state="translated">最初に比較するリスト。</target>
        </trans-unit>
        <trans-unit id="21b3efb51e905408dc7d30df6c5476374dd7b033" translate="yes" xml:space="preserve">
          <source>The first matching Enum class member in Enum class.</source>
          <target state="translated">Enumクラスの最初に一致するEnumクラスのメンバ。</target>
        </trans-unit>
        <trans-unit id="aea8fe33a13a43f1f933680d9ce0f5a2db48535e" translate="yes" xml:space="preserve">
          <source>The first matching element from enum_values.</source>
          <target state="translated">enum_valuesから最初にマッチする要素。</target>
        </trans-unit>
        <trans-unit id="1bce44f5aa098a07b694b38a57e97ffc2fd000fa" translate="yes" xml:space="preserve">
          <source>The first operand; &lt;code&gt;SparseTensor&lt;/code&gt; or &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="translated">最初のオペランド。 &lt;code&gt;SparseTensor&lt;/code&gt; または &lt;code&gt;Tensor&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bf18fd4e6ab37edcfe93bf741aad23fe79581af4" translate="yes" xml:space="preserve">
          <source>The first output contains a Tensor with the content of the audio samples. The lowest dimension will be the number of channels, and the second will be the number of samples. For example, a ten-sample-long stereo WAV file should give an output shape of [10, 2].</source>
          <target state="translated">最初の出力には、オーディオサンプルの内容を含むテンソルが含まれます。最小次元はチャンネル数、2番目はサンプル数になります。例えば、10 サンプルの長さのステレオ WAV ファイルの出力は [10,2]の形になります。</target>
        </trans-unit>
        <trans-unit id="0febdfe0f37ee26156ab95b6c46f6c5edc75f5fb" translate="yes" xml:space="preserve">
          <source>The first port number to start with for processes on a node.</source>
          <target state="translated">ノード上のプロセスの最初のポート番号。</target>
        </trans-unit>
        <trans-unit id="619642211ad5dce04a43e25b202652de1a8fad1c" translate="yes" xml:space="preserve">
          <source>The first sequence to compare.</source>
          <target state="translated">最初に比較するシーケンス。</target>
        </trans-unit>
        <trans-unit id="dc9c74061cbc9739e15176d22eb3bd77d76e6366" translate="yes" xml:space="preserve">
          <source>The first set to compare.</source>
          <target state="translated">最初に比較するセット。</target>
        </trans-unit>
        <trans-unit id="852357a82fe8610e108e7001278c4fd3f4edcf3b" translate="yes" xml:space="preserve">
          <source>The first structure to compare.</source>
          <target state="translated">最初に比較する構造。</target>
        </trans-unit>
        <trans-unit id="386e01aa23336af9951f682033560f681c83315e" translate="yes" xml:space="preserve">
          <source>The first time the dataset is iterated over, its elements will be cached either in the specified file or in memory. Subsequent iterations will use the cached data.</source>
          <target state="translated">最初にデータセットを反復処理すると、その要素は指定されたファイルかメモリにキャッシュされます。それ以降の反復処理では、キャッシュされたデータを使用します。</target>
        </trans-unit>
        <trans-unit id="8262a6a814226b4d2cd3a8aa3b8db9e5eb5fc35b" translate="yes" xml:space="preserve">
          <source>The first tuple to compare.</source>
          <target state="translated">比較する最初のタプル。</target>
        </trans-unit>
        <trans-unit id="7ef6022d2f562cb6afde1b6c189e84e6188a8d28" translate="yes" xml:space="preserve">
          <source>The first value used (&lt;code&gt;elems[-1]&lt;/code&gt; in case of None)</source>
          <target state="translated">使用される最初の値（Noneの場合は &lt;code&gt;elems[-1]&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="d030300b3efc2ffafb70c636249365dc53dadd74" translate="yes" xml:space="preserve">
          <source>The first value used (&lt;code&gt;elems[0]&lt;/code&gt; in case of None)</source>
          <target state="translated">使用される最初の値（Noneの場合は &lt;code&gt;elems[0]&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="b7831825ba8f0a4c3399d402b9f0a29404570764" translate="yes" xml:space="preserve">
          <source>The flag object for this flag.</source>
          <target state="translated">このフラグのフラグオブジェクト。</target>
        </trans-unit>
        <trans-unit id="0f90632e85082c59f117ebff04eaae1a05ddf870" translate="yes" xml:space="preserve">
          <source>The flag value is parsed with a CSV parser.</source>
          <target state="translated">フラグ値はCSVパーサで解析されます。</target>
        </trans-unit>
        <trans-unit id="96f145cafd13cfdf0d9a0f61a17dd04e31f2f508" translate="yes" xml:space="preserve">
          <source>The flag's current value is also updated if the flag is currently using the default value, i.e. not specified in the command line, and not set by FLAGS.name = value.</source>
          <target state="translated">フラグの現在の値も、フラグが現在デフォルト値を使用している場合、すなわちコマンドラインで指定されておらず、FLAGS.name=valueで設定されていない場合に更新されます。</target>
        </trans-unit>
        <trans-unit id="43c9fd434671ebe599abe72c41c1f1beb298f354" translate="yes" xml:space="preserve">
          <source>The flow &lt;code&gt;Tensor&lt;/code&gt; forcing ops leading to this TensorArray state.</source>
          <target state="translated">このTensorArray状態につながるフロー &lt;code&gt;Tensor&lt;/code&gt; 強制演算。</target>
        </trans-unit>
        <trans-unit id="1099e35b936ecbdd40bed25b2b837d0cd15a755e" translate="yes" xml:space="preserve">
          <source>The folded size of each dimension D of the output is:</source>
          <target state="translated">出力された各寸法Dの折り返しサイズは、以下の通りである。</target>
        </trans-unit>
        <trans-unit id="5802a84878124b124beac42194fc2361ed2f11d6" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;DType&lt;/code&gt; objects are defined:</source>
          <target state="translated">次の &lt;code&gt;DType&lt;/code&gt; オブジェクトが定義されています。</target>
        </trans-unit>
        <trans-unit id="f23bf2a65eeb471ae91c72707d1429b81ec5054e" translate="yes" xml:space="preserve">
          <source>The following accumulators/queue are created:</source>
          <target state="translated">以下のアキュムレータ/キューが作成されます。</target>
        </trans-unit>
        <trans-unit id="591cee6bba7aa3b795b8bd5b56dc88de0c7af0c0" translate="yes" xml:space="preserve">
          <source>The following aggregation methods are experimental and may not be supported in future releases:</source>
          <target state="translated">以下の集計方法は実験的なものであり、将来のリリースではサポートされない可能性があります。</target>
        </trans-unit>
        <trans-unit id="0a5195ca6a5ce9a55280235bcdfa18337e633d87" translate="yes" xml:space="preserve">
          <source>The following aggregation methods are part of the stable API for aggregating gradients:</source>
          <target state="translated">以下の集約方法は、グラデーションを集約するための安定したAPIの一部です。</target>
        </trans-unit>
        <trans-unit id="ed747da915011723a2fa4461445d8b7e32c7a59d" translate="yes" xml:space="preserve">
          <source>The following can be either inside or outside the scope: ** Creating the input datasets ** Defining &lt;a href=&quot;../../../../function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt;s that represent your training step ** Saving APIs such as &lt;a href=&quot;../../../../saved_model/save&quot;&gt;&lt;code&gt;tf.saved_model.save&lt;/code&gt;&lt;/a&gt;. Loading creates variables, so that should go inside the scope if you want to train the model in a distributed way. ** Checkpoint saving. As mentioned above - &lt;code&gt;checkpoint.restore&lt;/code&gt; may sometimes need to be inside scope if it creates variables.</source>
          <target state="translated">入力データセットを作成**定義：以下は、外側のいずれかの内部または範囲することができ&lt;a href=&quot;../../../../function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; の&lt;/a&gt;ようなAPIを保存する**あなたのトレーニングの段階を表すの&lt;a href=&quot;../../../../saved_model/save&quot;&gt; &lt;code&gt;tf.saved_model.save&lt;/code&gt; を&lt;/a&gt;。ロードすると変数が作成されるため、モデルを分散してトレーニングする場合は、変数をスコープ内に配置する必要があります。**チェックポイントの節約。上記のように、 &lt;code&gt;checkpoint.restore&lt;/code&gt; は、変数を作成する場合、スコープ内にある必要がある場合があります。</target>
        </trans-unit>
        <trans-unit id="6a52726e4632c6900863c9f3672bf906f2f1bdf5" translate="yes" xml:space="preserve">
          <source>The following can be either inside or outside the scope: ** Creating the input datasets ** Defining &lt;a href=&quot;../../../function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt;s that represent your training step ** Saving APIs such as &lt;a href=&quot;../../../saved_model/save&quot;&gt;&lt;code&gt;tf.saved_model.save&lt;/code&gt;&lt;/a&gt;. Loading creates variables, so that should go inside the scope if you want to train the model in a distributed way. ** Checkpoint saving. As mentioned above - &lt;code&gt;checkpoint.restore&lt;/code&gt; may sometimes need to be inside scope if it creates variables.</source>
          <target state="translated">入力データセットを作成**定義：以下は、外側のいずれかの内部または範囲することができ&lt;a href=&quot;../../../function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; の&lt;/a&gt;ようなAPIを保存する**あなたのトレーニングの段階を表すの&lt;a href=&quot;../../../saved_model/save&quot;&gt; &lt;code&gt;tf.saved_model.save&lt;/code&gt; を&lt;/a&gt;。ロードすると変数が作成されるため、モデルを分散してトレーニングする場合は、変数をスコープ内に配置する必要があります。**チェックポイントの節約。上記のように、 &lt;code&gt;checkpoint.restore&lt;/code&gt; は、変数を作成する場合、スコープ内にある必要がある場合があります。</target>
        </trans-unit>
        <trans-unit id="492121a81bde0442283493d70aeb6ab59ed150cf" translate="yes" xml:space="preserve">
          <source>The following can be either inside or outside the scope: ** Creating the input datasets ** Defining &lt;a href=&quot;../../function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt;s that represent your training step ** Saving APIs such as &lt;a href=&quot;../../saved_model/save&quot;&gt;&lt;code&gt;tf.saved_model.save&lt;/code&gt;&lt;/a&gt;. Loading creates variables, so that should go inside the scope if you want to train the model in a distributed way. ** Checkpoint saving. As mentioned above - &lt;code&gt;checkpoint.restore&lt;/code&gt; may sometimes need to be inside scope if it creates variables.</source>
          <target state="translated">入力データセットを作成**定義：以下は、外側のいずれかの内部または範囲することができ&lt;a href=&quot;../../function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; の&lt;/a&gt;ようなAPIを保存する**あなたのトレーニングの段階を表すの&lt;a href=&quot;../../saved_model/save&quot;&gt; &lt;code&gt;tf.saved_model.save&lt;/code&gt; を&lt;/a&gt;。ロードすると変数が作成されるため、モデルを分散してトレーニングする場合は、変数をスコープ内に配置する必要があります。**チェックポイントの節約。上記のように、 &lt;code&gt;checkpoint.restore&lt;/code&gt; は、変数を作成する場合、スコープ内にある必要がある場合があります。</target>
        </trans-unit>
        <trans-unit id="48a55cd9397b04385ee28d777547e0bf00cef4d5" translate="yes" xml:space="preserve">
          <source>The following can be either inside or outside the scope: ** Creating the input datasets ** Defining &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt;s that represent your training step ** Saving APIs such as &lt;a href=&quot;../saved_model/save&quot;&gt;&lt;code&gt;tf.saved_model.save&lt;/code&gt;&lt;/a&gt;. Loading creates variables, so that should go inside the scope if you want to train the model in a distributed way. ** Checkpoint saving. As mentioned above - &lt;code&gt;checkpoint.restore&lt;/code&gt; may sometimes need to be inside scope if it creates variables.</source>
          <target state="translated">入力データセットを作成**定義：以下は、外側のいずれかの内部または範囲することができ&lt;a href=&quot;../function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; の&lt;/a&gt;ようなAPIを保存する**あなたのトレーニングの段階を表すの&lt;a href=&quot;../saved_model/save&quot;&gt; &lt;code&gt;tf.saved_model.save&lt;/code&gt; を&lt;/a&gt;。ロードすると変数が作成されるため、モデルを分散してトレーニングする場合は、変数をスコープ内に配置する必要があります。**チェックポイントの節約。上記のように、 &lt;code&gt;checkpoint.restore&lt;/code&gt; は、変数を作成する場合、スコープ内にある必要がある場合があります。</target>
        </trans-unit>
        <trans-unit id="2ee6cb9dfe69d9d22f1caaeae67551de61d1e04d" translate="yes" xml:space="preserve">
          <source>The following code examples are equivalent:</source>
          <target state="translated">以下のコード例はこれに相当します。</target>
        </trans-unit>
        <trans-unit id="fe70fcf720ef0fde06fcd7d33ac8492a73efc566" translate="yes" xml:space="preserve">
          <source>The following example can be rewritten using a numpy.ndarray instead of the &lt;code&gt;value&lt;/code&gt; list, even reshaped, as shown in the two commented lines below the &lt;code&gt;value&lt;/code&gt; list initialization.</source>
          <target state="translated">次の例は、 &lt;code&gt;value&lt;/code&gt; リストの初期化の下にある2つのコメント行に示されているように、 &lt;code&gt;value&lt;/code&gt; リストの代わりにnumpy.ndarrayを使用して書き換えることができます。</target>
        </trans-unit>
        <trans-unit id="dd2231c4c2e6ac8a925f85e0e3d53aba21ee51d7" translate="yes" xml:space="preserve">
          <source>The following example creates a TensorFlow graph with &lt;code&gt;np.sinh()&lt;/code&gt; as an operation in the graph:</source>
          <target state="translated">次の例では、グラフの操作として &lt;code&gt;np.sinh()&lt;/code&gt; を使用してTensorFlowグラフを作成します。</target>
        </trans-unit>
        <trans-unit id="96cf93e8858013a75fb44334359039c6f25c846e" translate="yes" xml:space="preserve">
          <source>The following example demonstrates disabling the first GPU on the machine.</source>
          <target state="translated">次の例では、マシン上の最初のGPUを無効にすることを示しています。</target>
        </trans-unit>
        <trans-unit id="f5252c999d447d634884b440e481ad68aacf0ae9" translate="yes" xml:space="preserve">
          <source>The following example lists the number of visible GPUs on the host.</source>
          <target state="translated">次の例では、ホスト上の可視GPUの数を示しています。</target>
        </trans-unit>
        <trans-unit id="2cdccf83ed29fb9603555106e738bca275fd3c3f" translate="yes" xml:space="preserve">
          <source>The following example splits the CPU into 2 logical devices:</source>
          <target state="translated">以下の例では、CPUを2つの論理デバイスに分割しています。</target>
        </trans-unit>
        <trans-unit id="4ace04a5fda844a89c5ee4c9be9654bd7abe4446" translate="yes" xml:space="preserve">
          <source>The following example splits the GPU into 2 logical devices with 100 MB each:</source>
          <target state="translated">以下の例では、GPUを100MBずつ2つの論理デバイスに分割しています。</target>
        </trans-unit>
        <trans-unit id="e92322d00886dec66262eaafdb4b32cf9a853e78" translate="yes" xml:space="preserve">
          <source>The following example verifies all visible GPUs have been disabled:</source>
          <target state="translated">次の例では、すべての可視GPUが無効になっていることを確認しています。</target>
        </trans-unit>
        <trans-unit id="4d32c07164d7968452b087497fbdd283446aa73c" translate="yes" xml:space="preserve">
          <source>The following is an example</source>
          <target state="translated">以下はその一例です。</target>
        </trans-unit>
        <trans-unit id="ed38596eeae1ed9d7dcfb7df999c45674415489a" translate="yes" xml:space="preserve">
          <source>The following is an example:</source>
          <target state="translated">以下はその一例です。</target>
        </trans-unit>
        <trans-unit id="24bdb030bb46a068c505477e8cd1862a69826946" translate="yes" xml:space="preserve">
          <source>The following local variable is created:</source>
          <target state="translated">次のようなローカル変数が作成されます。</target>
        </trans-unit>
        <trans-unit id="6c83149474e8e1bdaa43183ac0053126fc2f29c2" translate="yes" xml:space="preserve">
          <source>The following optional keyword arguments are reserved for specific uses:</source>
          <target state="translated">以下のオプションのキーワード引数は、特定の用途のために予約されています。</target>
        </trans-unit>
        <trans-unit id="6b2e176467ad37b3b7339e39c7c7f1f162f5fc98" translate="yes" xml:space="preserve">
          <source>The following pieces are directly accessible as attributes of the &lt;code&gt;Scaffold&lt;/code&gt; object:</source>
          <target state="translated">以下の部分は、 &lt;code&gt;Scaffold&lt;/code&gt; オブジェクトの属性として直接アクセスできます。</target>
        </trans-unit>
        <trans-unit id="c2ed2efebe2e500e729949e45ea5460a93f492fe" translate="yes" xml:space="preserve">
          <source>The following snippet initializes a table with the first column as keys and second column as values:</source>
          <target state="translated">以下のスニペットは、1列目をキー、2列目を値としてテーブルを初期化します。</target>
        </trans-unit>
        <trans-unit id="e6f97267e796a462cd648b32cdaea5e143b3612c" translate="yes" xml:space="preserve">
          <source>The following standard keys are &lt;em&gt;defined&lt;/em&gt;, but their collections are &lt;strong&gt;not&lt;/strong&gt; automatically populated as many of the others are:</source>
          <target state="translated">次の標準キーが&lt;em&gt;定義され&lt;/em&gt;て&lt;strong&gt;い&lt;/strong&gt;ますが、他の多くのキーがそうであるように、それらのコレクションは自動的に入力され&lt;strong&gt;ません&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="99bfb2634af3adab05d0f542c47d1e0966b2dddf" translate="yes" xml:space="preserve">
          <source>The following standard keys are defined:</source>
          <target state="translated">以下の標準キーが定義されています。</target>
        </trans-unit>
        <trans-unit id="afd1e679060dea3282d2910a495bdcd89bae687d" translate="yes" xml:space="preserve">
          <source>The following table describes the performance of</source>
          <target state="translated">の性能を説明します。</target>
        </trans-unit>
        <trans-unit id="3c31091b8864e6e40a0add92be10029fb2426b1d" translate="yes" xml:space="preserve">
          <source>The following table describes the size and accuracy of the 100% MobileNet</source>
          <target state="translated">以下の表は、100%MobileNetのサイズと精度を示しています。</target>
        </trans-unit>
        <trans-unit id="b3f6e3ce6202511b6216af33c5c3cad6bb0dbfc1" translate="yes" xml:space="preserve">
          <source>The following will raise an exception starting 2.0</source>
          <target state="translated">以下のような場合、2.0から例外が発生します。</target>
        </trans-unit>
        <trans-unit id="91b487c69a091d3a3e964a72f6e8d59454bf3d7c" translate="yes" xml:space="preserve">
          <source>The format definition of the pattern is:</source>
          <target state="translated">パターンのフォーマット定義は</target>
        </trans-unit>
        <trans-unit id="c5b0b8ccd1f0abc3ddefae0423fee59c58a2cd57" translate="yes" xml:space="preserve">
          <source>The fraction of zeros in &lt;code&gt;value&lt;/code&gt;, with type &lt;code&gt;float32&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;float32&lt;/code&gt; 型の &lt;code&gt;value&lt;/code&gt; のゼロの割合。</target>
        </trans-unit>
        <trans-unit id="2501fc3382d34a61610662e4f61871c3957e8082" translate="yes" xml:space="preserve">
          <source>The frame hop size in samples. An integer or scalar &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="translated">サンプルのフレームホップサイズ。整数またはスカラー &lt;code&gt;Tensor&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8eacf4bf4a1e68b198d56b34b1c0c689db8338a7" translate="yes" xml:space="preserve">
          <source>The frame length in samples. An integer or scalar &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="translated">サンプルのフレーム長。整数またはスカラー &lt;code&gt;Tensor&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bcd354bde47573036d72572be433b39a54714152" translate="yes" xml:space="preserve">
          <source>The frequency it should save at. Currently, the callback supports saving at the end of every epoch, or after a fixed number of training batches.</source>
          <target state="translated">保存する頻度を指定します。現在のところ、コールバックはすべてのエポックの終了時や、一定数のトレーニングバッチの後に保存することをサポートしています。</target>
        </trans-unit>
        <trans-unit id="71fdf778c80994adcf246068ec1f8befff71b20a" translate="yes" xml:space="preserve">
          <source>The frequency, in number of global steps, that a checkpoint is saved using a default checkpoint saver. If both &lt;code&gt;save_checkpoint_steps&lt;/code&gt; and &lt;code&gt;save_checkpoint_secs&lt;/code&gt; are set to &lt;code&gt;None&lt;/code&gt;, then the default checkpoint saver isn't used. If both are provided, then only &lt;code&gt;save_checkpoint_secs&lt;/code&gt; is used. Default not enabled.</source>
          <target state="translated">デフォルトのチェックポイントセーバーを使用してチェックポイントが保存される頻度（グローバルステップ数）。 &lt;code&gt;save_checkpoint_steps&lt;/code&gt; と &lt;code&gt;save_checkpoint_secs&lt;/code&gt; の両方が &lt;code&gt;None&lt;/code&gt; に設定されている場合、デフォルトのチェックポイントセーバーは使用されません。両方が提供されている場合は、 &lt;code&gt;save_checkpoint_secs&lt;/code&gt; のみが使用されます。デフォルトでは有効になっていません。</target>
        </trans-unit>
        <trans-unit id="2fb7193e8657058899d68bff4052e052b9f275c9" translate="yes" xml:space="preserve">
          <source>The frequency, in number of global steps, that the global step and the loss will be logged during training. Also controls the frequency that the global steps / s will be logged (and written to summary) during training.</source>
          <target state="translated">トレーニング中にグローバルステップと損失が記録される頻度を、グローバルステップの数で指定します。また、トレーニング中にグローバルステップ/秒が記録される(サマリーに書き込まれる)頻度も制御します。</target>
        </trans-unit>
        <trans-unit id="0b502ff4833f61fd9f9f6d0ad8bb30c38b89b253" translate="yes" xml:space="preserve">
          <source>The frequency, in number of global steps, that the global step/sec is logged.</source>
          <target state="translated">グローバルステップ数で、グローバルステップ/秒が記録される頻度。</target>
        </trans-unit>
        <trans-unit id="905a157c941ebd772aa422c7c4efd7a063f30d17" translate="yes" xml:space="preserve">
          <source>The frequency, in number of global steps, that the summaries are written to disk using a default summary saver. If both &lt;code&gt;save_summaries_steps&lt;/code&gt; and &lt;code&gt;save_summaries_secs&lt;/code&gt; are set to &lt;code&gt;None&lt;/code&gt;, then the default summary saver isn't used. Default 100.</source>
          <target state="translated">デフォルトのサマリーセーバーを使用してサマリーがディスクに書き込まれる頻度（グローバルステップ数）。 &lt;code&gt;save_summaries_steps&lt;/code&gt; と &lt;code&gt;save_summaries_secs&lt;/code&gt; の両方が &lt;code&gt;None&lt;/code&gt; に設定されている場合、デフォルトのサマリーセーバーは使用されません。デフォルトは100です。</target>
        </trans-unit>
        <trans-unit id="d58dfeea5f5010f5f4f788d0923d660ec7ad4548" translate="yes" xml:space="preserve">
          <source>The frequency, in seconds, that a checkpoint is saved using a default checkpoint saver. If both &lt;code&gt;save_checkpoint_steps&lt;/code&gt; and &lt;code&gt;save_checkpoint_secs&lt;/code&gt; are set to &lt;code&gt;None&lt;/code&gt;, then the default checkpoint saver isn't used. If both are provided, then only &lt;code&gt;save_checkpoint_secs&lt;/code&gt; is used. Default 600.</source>
          <target state="translated">デフォルトのチェックポイントセーバーを使用してチェックポイントが保存される頻度（秒単位）。 &lt;code&gt;save_checkpoint_steps&lt;/code&gt; と &lt;code&gt;save_checkpoint_secs&lt;/code&gt; の両方が &lt;code&gt;None&lt;/code&gt; に設定されている場合、デフォルトのチェックポイントセーバーは使用されません。両方が提供されている場合は、 &lt;code&gt;save_checkpoint_secs&lt;/code&gt; のみが使用されます。デフォルトは600です。</target>
        </trans-unit>
        <trans-unit id="b936a6236c199c7dbaccd7f328139e3e55255549" translate="yes" xml:space="preserve">
          <source>The frequency, in secs, that the summaries are written to disk using a default summary saver. If both &lt;code&gt;save_summaries_steps&lt;/code&gt; and &lt;code&gt;save_summaries_secs&lt;/code&gt; are set to &lt;code&gt;None&lt;/code&gt;, then the default summary saver isn't used. Default not enabled.</source>
          <target state="translated">デフォルトのサマリーセーバーを使用してサマリーがディスクに書き込まれる頻度（秒単位）。 &lt;code&gt;save_summaries_steps&lt;/code&gt; と &lt;code&gt;save_summaries_secs&lt;/code&gt; の両方が &lt;code&gt;None&lt;/code&gt; に設定されている場合、デフォルトのサマリーセーバーは使用されません。デフォルトでは有効になっていません。</target>
        </trans-unit>
        <trans-unit id="992778fe6a92285eff91d32500db456a86a4fc54" translate="yes" xml:space="preserve">
          <source>The full name of this operation.</source>
          <target state="translated">この操作のフルネーム。</target>
        </trans-unit>
        <trans-unit id="743b7a6db57523722e378bc070ddcab709a5ac83" translate="yes" xml:space="preserve">
          <source>The full path to the checkpoint (i.e. &lt;code&gt;file_prefix&lt;/code&gt;).</source>
          <target state="translated">チェックポイントへの &lt;code&gt;file_prefix&lt;/code&gt; パス（つまり、file_prefix）。</target>
        </trans-unit>
        <trans-unit id="17174d3c9eb2bd17d3031f0d66dc8f9b3b509e75" translate="yes" xml:space="preserve">
          <source>The full path to the checkpoint.</source>
          <target state="translated">チェックポイントまでのフルパス。</target>
        </trans-unit>
        <trans-unit id="acdec3e98e6b61dcd2da29992ebc62ad6f5bf20c" translate="yes" xml:space="preserve">
          <source>The full path to the latest checkpoint or &lt;code&gt;None&lt;/code&gt; if no checkpoint was found.</source>
          <target state="translated">最新のチェックポイントへの絶対パス、またはチェックポイントが見つからなかった場合は &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3f455e1b045b42fc22bb44e2db67ba33bc859100" translate="yes" xml:space="preserve">
          <source>The function 'f' must be a numerical function which takes N inputs and produces M outputs. Its gradient function 'g', which is computed by this SymbolicGradient op is a function taking N + M inputs and produces N outputs.</source>
          <target state="translated">関数 'f' は N 個の入力を受けて M 個の出力を生成する数値関数でなければならない.この SymbolicGradient op によって計算されるその勾配関数 'g' は,N+M の入力を取り,N の出力を生成する関数です.</target>
        </trans-unit>
        <trans-unit id="47f2fc665d0afe391e8a43fb1ae4db7142668b97" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;grad_grad_fn&lt;/code&gt; will be calculating the first order gradient of &lt;code&gt;grad_fn&lt;/code&gt; with respect to &lt;code&gt;dy&lt;/code&gt;, which is used to generate forward-mode gradient graphs from backward-mode gradient graphs, but is not the same as the second order gradient of &lt;code&gt;op&lt;/code&gt; with respect to &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">関数 &lt;code&gt;grad_grad_fn&lt;/code&gt; は、 &lt;code&gt;dy&lt;/code&gt; に関する &lt;code&gt;grad_fn&lt;/code&gt; の一次勾配を計算します。これは、後方モード勾配グラフから前方モード勾配グラフを生成するために使用されますが、 &lt;code&gt;x&lt;/code&gt; に関する &lt;code&gt;op&lt;/code&gt; の二次勾配とは異なります。</target>
        </trans-unit>
        <trans-unit id="45872032316d782b7cca27465e024bb311aaa0d6" translate="yes" xml:space="preserve">
          <source>The function arguments use the same convention as Theano's arange: if only one argument is provided, it is in fact the &quot;stop&quot; argument and &quot;start&quot; is 0.</source>
          <target state="translated">関数の引数は、Theanoのarangeと同じ規則を使用します:引数が1つだけ提供されている場合、それは実際には &quot;stop &quot;引数であり、&quot;start &quot;は0です。</target>
        </trans-unit>
        <trans-unit id="5b48f1f01f262f6a95842647a89db44aed8acfaa" translate="yes" xml:space="preserve">
          <source>The function given by &lt;code&gt;f&lt;/code&gt; is assumed to be stateless, and is executed concurrently on all the slices; up to batch_size (i.e. the size of the 0th dimension of each argument) functions will be scheduled at once.</source>
          <target state="translated">&lt;code&gt;f&lt;/code&gt; で与えられる関数はステートレスであると想定され、すべてのスライスで同時に実行されます。最大batch_size（つまり、各引数の0番目の次元のサイズ）関数が一度にスケジュールされます。</target>
        </trans-unit>
        <trans-unit id="a54988c5a27bf3df304066330e8659cc62c5ae14" translate="yes" xml:space="preserve">
          <source>The function may use variable scopes and other templates internally to create and reuse variables, but it shouldn't use &lt;a href=&quot;global_variables&quot;&gt;&lt;code&gt;tf.compat.v1.global_variables&lt;/code&gt;&lt;/a&gt; to capture variables that are defined outside of the scope of the function.</source>
          <target state="translated">関数は、変数スコープと他のテンプレートを内部で使用して変数を作成および再利用できますが、関数のスコープ外で定義された変数をキャプチャするために&lt;a href=&quot;global_variables&quot;&gt; &lt;code&gt;tf.compat.v1.global_variables&lt;/code&gt; &lt;/a&gt;を使用しないでください。</target>
        </trans-unit>
        <trans-unit id="7473045784de1b0d1dced2ea1e88e2739636aca8" translate="yes" xml:space="preserve">
          <source>The function returns a 1-arg callable to compute the piecewise constant when passed the current optimizer step. This can be useful for changing the learning rate value across different invocations of optimizer functions.</source>
          <target state="translated">この関数は、現在のオプティマイザステップを渡すと、1-argの呼び出し可能な定数を返します。これは、オプティマイザ関数の異なる呼び出しの間で学習率の値を変更するのに便利です。</target>
        </trans-unit>
        <trans-unit id="7935c69bd80f01354e2709843f6b51eb870975aa" translate="yes" xml:space="preserve">
          <source>The function returns the decayed learning rate while taking into account possible warm restarts. The learning rate multiplier first decays from 1 to &lt;code&gt;alpha&lt;/code&gt; for &lt;code&gt;first_decay_steps&lt;/code&gt; steps. Then, a warm restart is performed. Each new warm restart runs for &lt;code&gt;t_mul&lt;/code&gt; times more steps and with &lt;code&gt;m_mul&lt;/code&gt; times smaller initial learning rate.</source>
          <target state="translated">この関数は、ウォームリスタートの可能性を考慮しながら、減衰した学習率を返します。学習率の乗数は、 &lt;code&gt;first_decay_steps&lt;/code&gt; ステップで最初に1から &lt;code&gt;alpha&lt;/code&gt; に減衰します。その後、ウォームリスタートが実行されます。新しい各ウォームリスタートは、 &lt;code&gt;t_mul&lt;/code&gt; 倍のステップで実行され、 &lt;code&gt;m_mul&lt;/code&gt; 倍の初期学習率で実行されます。</target>
        </trans-unit>
        <trans-unit id="86355e2388af8622a11980472ee114bf3a474b98" translate="yes" xml:space="preserve">
          <source>The function returns the decayed learning rate. It is computed as:</source>
          <target state="translated">この関数は,減衰した学習率を返します.として計算されます。</target>
        </trans-unit>
        <trans-unit id="bbeb4f9954a2b9fb0a88492d0bff2e967c29ba25" translate="yes" xml:space="preserve">
          <source>The function should create all trainable variables and any variables that should be reused by calling &lt;a href=&quot;get_variable&quot;&gt;&lt;code&gt;tf.compat.v1.get_variable&lt;/code&gt;&lt;/a&gt;. If a trainable variable is created using &lt;a href=&quot;../../variable&quot;&gt;&lt;code&gt;tf.Variable&lt;/code&gt;&lt;/a&gt;, then a ValueError will be thrown. Variables that are intended to be locals can be created by specifying &lt;a href=&quot;../../variable&quot;&gt;&lt;code&gt;tf.Variable(..., trainable=false)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">関数は、すべてのトレーニング可能な変数と、&lt;a href=&quot;get_variable&quot;&gt; &lt;code&gt;tf.compat.v1.get_variable&lt;/code&gt; &lt;/a&gt;を呼び出して再利用する必要のある変数を作成する必要があります。&lt;a href=&quot;../../variable&quot;&gt; &lt;code&gt;tf.Variable&lt;/code&gt; &lt;/a&gt;を使用してトレーニング可能な変数が作成されると、ValueErrorがスローされます。ローカルであることが意図されている変数は、&lt;a href=&quot;../../variable&quot;&gt; &lt;code&gt;tf.Variable(..., trainable=false)&lt;/code&gt; &lt;/a&gt;指定することによって作成できます。</target>
        </trans-unit>
        <trans-unit id="ba018ba32690d333b62a34c97deeda897ce164c2" translate="yes" xml:space="preserve">
          <source>The function to be evaluated. Takes input tensor as first argument.</source>
          <target state="translated">評価される関数。第一引数に入力テンソルを取ります。</target>
        </trans-unit>
        <trans-unit id="e907a33ddfd6da0b56e4114475edd885278841a5" translate="yes" xml:space="preserve">
          <source>The function to execute. Must return at least one tensor.</source>
          <target state="translated">実行する関数。少なくとも1つのテンソルを返さなければなりません。</target>
        </trans-unit>
        <trans-unit id="0e4d2297438553bf056c22e891e3cecb8fe842de" translate="yes" xml:space="preserve">
          <source>The function to run to generate values. It is called for each replica with &lt;code&gt;tf.distribute.ValueContext&lt;/code&gt; as the sole argument. It must return a Tensor or a type that can be converted to a Tensor.</source>
          <target state="translated">値を生成するために実行する関数。これは、 &lt;code&gt;tf.distribute.ValueContext&lt;/code&gt; を唯一の引数としてレプリカごとに呼び出されます。テンソルまたはテンソルに変換できる型を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="5cb705f7c58e8e1b04b26492ea1ad09028dbf43c" translate="yes" xml:space="preserve">
          <source>The function to run. The inputs to the function must match the outputs of &lt;code&gt;input_iterator.get_next()&lt;/code&gt;. The output must be a &lt;a href=&quot;../../../../nest&quot;&gt;&lt;code&gt;tf.nest&lt;/code&gt;&lt;/a&gt; of &lt;code&gt;Tensor&lt;/code&gt;s.</source>
          <target state="translated">実行する関数。関数への入力は、 &lt;code&gt;input_iterator.get_next()&lt;/code&gt; の出力と一致する必要があります。出力は &lt;code&gt;Tensor&lt;/code&gt; の&lt;a href=&quot;../../../../nest&quot;&gt; &lt;code&gt;tf.nest&lt;/code&gt; &lt;/a&gt;である必要があります。</target>
        </trans-unit>
        <trans-unit id="579f33c18a20c35d0e6bad8c31ac59b2c5a138bd" translate="yes" xml:space="preserve">
          <source>The function to run. The inputs to the function must match the outputs of &lt;code&gt;input_iterator.get_next()&lt;/code&gt;. The output must be a &lt;a href=&quot;../../../nest&quot;&gt;&lt;code&gt;tf.nest&lt;/code&gt;&lt;/a&gt; of &lt;code&gt;Tensor&lt;/code&gt;s.</source>
          <target state="translated">実行する関数。関数への入力は、 &lt;code&gt;input_iterator.get_next()&lt;/code&gt; の出力と一致する必要があります。出力は &lt;code&gt;Tensor&lt;/code&gt; の&lt;a href=&quot;../../../nest&quot;&gt; &lt;code&gt;tf.nest&lt;/code&gt; &lt;/a&gt;である必要があります。</target>
        </trans-unit>
        <trans-unit id="852a50a7728a6fd7607421cbe4af6011056e859b" translate="yes" xml:space="preserve">
          <source>The function to run. The output must be a &lt;a href=&quot;../../../../nest&quot;&gt;&lt;code&gt;tf.nest&lt;/code&gt;&lt;/a&gt; of &lt;code&gt;Tensor&lt;/code&gt;s.</source>
          <target state="translated">実行する関数。出力は &lt;code&gt;Tensor&lt;/code&gt; の&lt;a href=&quot;../../../../nest&quot;&gt; &lt;code&gt;tf.nest&lt;/code&gt; &lt;/a&gt;である必要があります。</target>
        </trans-unit>
        <trans-unit id="d27cb3a61380f733c1a764c217224b74c44ff381" translate="yes" xml:space="preserve">
          <source>The function to run. The output must be a &lt;a href=&quot;../../../nest&quot;&gt;&lt;code&gt;tf.nest&lt;/code&gt;&lt;/a&gt; of &lt;code&gt;Tensor&lt;/code&gt;s.</source>
          <target state="translated">実行する関数。出力は &lt;code&gt;Tensor&lt;/code&gt; の&lt;a href=&quot;../../../nest&quot;&gt; &lt;code&gt;tf.nest&lt;/code&gt; &lt;/a&gt;である必要があります。</target>
        </trans-unit>
        <trans-unit id="cd6977a402d5af69ff9d5af0a33cb56304518592" translate="yes" xml:space="preserve">
          <source>The function to run. The output must be a &lt;a href=&quot;../../nest&quot;&gt;&lt;code&gt;tf.nest&lt;/code&gt;&lt;/a&gt; of &lt;code&gt;Tensor&lt;/code&gt;s.</source>
          <target state="translated">実行する関数。出力は &lt;code&gt;Tensor&lt;/code&gt; の&lt;a href=&quot;../../nest&quot;&gt; &lt;code&gt;tf.nest&lt;/code&gt; &lt;/a&gt;である必要があります。</target>
        </trans-unit>
        <trans-unit id="78ce4aa7e51e00f628bab76b1b138c468eab06e1" translate="yes" xml:space="preserve">
          <source>The function to run. The output must be a &lt;a href=&quot;../nest&quot;&gt;&lt;code&gt;tf.nest&lt;/code&gt;&lt;/a&gt; of &lt;code&gt;Tensor&lt;/code&gt;s.</source>
          <target state="translated">実行する関数。出力は &lt;code&gt;Tensor&lt;/code&gt; の&lt;a href=&quot;../nest&quot;&gt; &lt;code&gt;tf.nest&lt;/code&gt; &lt;/a&gt;である必要があります。</target>
        </trans-unit>
        <trans-unit id="7d78455957704f506f9390b364cd5e99854c75cd" translate="yes" xml:space="preserve">
          <source>The function to use for the KL divergence.</source>
          <target state="translated">KLダイバージェンスに使用する関数です。</target>
        </trans-unit>
        <trans-unit id="818483846ef2282fe88a2ae296752a2d10573267" translate="yes" xml:space="preserve">
          <source>The function to wrap.</source>
          <target state="translated">ラップする関数です。</target>
        </trans-unit>
        <trans-unit id="8e1312f2dcf17101a4e17a36133e6bbffe530ce3" translate="yes" xml:space="preserve">
          <source>The function writes the SavedModel protocol buffer to the export directory in serialized format.</source>
          <target state="translated">この関数は、SavedModel プロトコルバッファをシリアル化された形式でエクスポートディレクトリに書き込みます。</target>
        </trans-unit>
        <trans-unit id="00cf308c9f40a9f1b859f12fd033e78caa4d14cd" translate="yes" xml:space="preserve">
          <source>The functions &lt;code&gt;f1&lt;/code&gt; and &lt;code&gt;f2&lt;/code&gt; will be executed serially, and updates to &lt;code&gt;v&lt;/code&gt; will be atomic.</source>
          <target state="translated">関数 &lt;code&gt;f1&lt;/code&gt; と &lt;code&gt;f2&lt;/code&gt; は順次実行され、 &lt;code&gt;v&lt;/code&gt; への更新はアトミックになります。</target>
        </trans-unit>
        <trans-unit id="dde4529b22d96c16a9b96a541d58c5d0a1f7056a" translate="yes" xml:space="preserve">
          <source>The generated &lt;a href=&quot;https://www.tensorflow.org/code/tensorflow/core/framework/summary.proto&quot;&gt;&lt;code&gt;Summary&lt;/code&gt;&lt;/a&gt; has one summary value containing a histogram for &lt;code&gt;values&lt;/code&gt;.</source>
          <target state="translated">生成された&lt;a href=&quot;https://www.tensorflow.org/code/tensorflow/core/framework/summary.proto&quot;&gt; &lt;code&gt;Summary&lt;/code&gt; &lt;/a&gt;は、 &lt;code&gt;values&lt;/code&gt; ヒストグラムを含む1つのサマリー値があります。</target>
        </trans-unit>
        <trans-unit id="062e4980e54d60fb22e75f6c9b5206c3bc85ad28" translate="yes" xml:space="preserve">
          <source>The generated Summary has a Tensor.proto containing the input Tensor.</source>
          <target state="translated">生成されたSummaryには、入力Tensorを含むTensor.protoがあります。</target>
        </trans-unit>
        <trans-unit id="83836bb270c947f8350589c70a4bb97f00394569" translate="yes" xml:space="preserve">
          <source>The generated batches contain augmented/normalized data.</source>
          <target state="translated">生成されたバッチには、拡張/正規化されたデータが含まれています。</target>
        </trans-unit>
        <trans-unit id="83e4f5e3d1731cbc1599b80b8ef76caeb81edab7" translate="yes" xml:space="preserve">
          <source>The generated values are uniform integers covering the whole range of &lt;code&gt;dtype&lt;/code&gt;.</source>
          <target state="translated">生成される値は、 &lt;code&gt;dtype&lt;/code&gt; の全範囲をカバーする均一な整数です。</target>
        </trans-unit>
        <trans-unit id="e4d0e9a2a91b309d7ff0adf11bf3c435181bcb9c" translate="yes" xml:space="preserve">
          <source>The generated values are uniform integers in the range &lt;code&gt;[minval, maxval)&lt;/code&gt;. The lower bound &lt;code&gt;minval&lt;/code&gt; is included in the range, while the upper bound &lt;code&gt;maxval&lt;/code&gt; is excluded.</source>
          <target state="translated">生成される値は、 &lt;code&gt;[minval, maxval)&lt;/code&gt; 範囲の均一な整数です。下限 &lt;code&gt;minval&lt;/code&gt; 上限が、範囲に含まれる &lt;code&gt;maxval&lt;/code&gt; 除外されます。</target>
        </trans-unit>
        <trans-unit id="1a8e22261f08ee2c0135f17d838b4636ab11c865" translate="yes" xml:space="preserve">
          <source>The generated values follow a Poisson distribution with specified rate parameter.</source>
          <target state="translated">生成された値は、指定されたレートパラメータのポアソン分布に従います。</target>
        </trans-unit>
        <trans-unit id="2e6c1194a7570536aae2b3653d7c1dba93fd5851" translate="yes" xml:space="preserve">
          <source>The generated values follow a binomial distribution with specified count and probability of success parameters.</source>
          <target state="translated">生成された値は、指定されたカウント数と成功確率のパラメータを持つ二項分布に従います。</target>
        </trans-unit>
        <trans-unit id="8a3b970769a2106f11ed64fa7b1620c03aad121a" translate="yes" xml:space="preserve">
          <source>The generated values follow a gamma distribution with specified concentration (&lt;code&gt;alpha&lt;/code&gt;) and inverse scale (&lt;code&gt;beta&lt;/code&gt;) parameters.</source>
          <target state="translated">生成された値は、指定された濃度（ &lt;code&gt;alpha&lt;/code&gt; ）および逆スケール（ &lt;code&gt;beta&lt;/code&gt; ）パラメーターを使用したガンマ分布に従います。</target>
        </trans-unit>
        <trans-unit id="aaccd314351760e5cabf42f9640ec2685d7cb77b" translate="yes" xml:space="preserve">
          <source>The generated values follow a normal distribution with mean 0 and standard deviation 1, except that values whose magnitude is more than 2 standard deviations from the mean are dropped and re-picked.</source>
          <target state="translated">生成された値は、平均値0と標準偏差1の正規分布に従いますが、大きさが平均値から2標準偏差以上である値は削除され、再選択されます。</target>
        </trans-unit>
        <trans-unit id="34cfd1936eb36f5d55d6eea6019586d8abfd6453" translate="yes" xml:space="preserve">
          <source>The generated values follow a normal distribution with specified mean and standard deviation, except that values whose magnitude is more than 2 standard deviations from the mean are dropped and re-picked.</source>
          <target state="translated">生成された値は、指定された平均と標準偏差を持つ正規分布に従いますが、平均から2標準偏差以上の大きさを持つ値は削除され、再選択されます。</target>
        </trans-unit>
        <trans-unit id="0f713a6a0ff6a46795bef18d9e29d3e2780e55f6" translate="yes" xml:space="preserve">
          <source>The generated values follow a normal distribution with specified mean and standard deviation, except that values whose magnitude is more than two standard deviations from the mean are dropped and re-picked.</source>
          <target state="translated">生成された値は、指定された平均と標準偏差を持つ正規分布に従いますが、その大きさが平均から2つ以上の標準偏差を持つ値は削除され、再選択されます。</target>
        </trans-unit>
        <trans-unit id="ad922f688ee4660e4c8bf530c9eb75a9c98e5b45" translate="yes" xml:space="preserve">
          <source>The generated values follow a uniform distribution in the range &lt;code&gt;[0, 1)&lt;/code&gt;. The lower bound 0 is included in the range, while the upper bound 1 is excluded.</source>
          <target state="translated">生成された値は、 &lt;code&gt;[0, 1)&lt;/code&gt; 範囲で一様分布に従います。下限0は範囲に含まれ、上限1は除外されます。</target>
        </trans-unit>
        <trans-unit id="74c424169a88b80e0d5085c0b28049f21d25d95f" translate="yes" xml:space="preserve">
          <source>The generated values follow a uniform distribution in the range &lt;code&gt;[minval, maxval)&lt;/code&gt;.</source>
          <target state="translated">生成された値は、 &lt;code&gt;[minval, maxval)&lt;/code&gt; 範囲で一様分布に従います。</target>
        </trans-unit>
        <trans-unit id="c4eafca9e4f8c3067d55709b52f16b752c27ed7e" translate="yes" xml:space="preserve">
          <source>The generated values follow a uniform distribution in the range &lt;code&gt;[minval, maxval)&lt;/code&gt;. The lower bound &lt;code&gt;minval&lt;/code&gt; is included in the range, while the upper bound &lt;code&gt;maxval&lt;/code&gt; is excluded.</source>
          <target state="translated">生成された値は、 &lt;code&gt;[minval, maxval)&lt;/code&gt; 範囲の均一分布に従います。下限 &lt;code&gt;minval&lt;/code&gt; 上限が、範囲に含まれる &lt;code&gt;maxval&lt;/code&gt; 除外されます。</target>
        </trans-unit>
        <trans-unit id="729a8a331d955e25ac8cf2c6b6a31b0effcb1a59" translate="yes" xml:space="preserve">
          <source>The generated values follow a uniform distribution in the range &lt;code&gt;[minval, maxval)&lt;/code&gt;. The lower bound &lt;code&gt;minval&lt;/code&gt; is included in the range, while the upper bound &lt;code&gt;maxval&lt;/code&gt; is excluded. (For float numbers especially low-precision types like bfloat16, because of rounding, the result may sometimes include &lt;code&gt;maxval&lt;/code&gt;.)</source>
          <target state="translated">生成された値は、 &lt;code&gt;[minval, maxval)&lt;/code&gt; 範囲の均一分布に従います。下限 &lt;code&gt;minval&lt;/code&gt; 上限が、範囲に含まれる &lt;code&gt;maxval&lt;/code&gt; 除外されます。（なぜなら丸めのbfloat16ような特に低精度のタイプフロート番号については、結果は、時々含むことができる &lt;code&gt;maxval&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="3ef793d516e9c255e6083a55e2c214fa9d53e3d0" translate="yes" xml:space="preserve">
          <source>The generated values will have mean 0 and standard deviation 1.</source>
          <target state="translated">生成された値は、平均値0と標準偏差1を持つことになります。</target>
        </trans-unit>
        <trans-unit id="435c1caf59e1323627f0000c63fea7965b6e39ca" translate="yes" xml:space="preserve">
          <source>The gist of RMSprop is to:</source>
          <target state="translated">RMSpropの要点は。</target>
        </trans-unit>
        <trans-unit id="3f254b2b1969b3fd6753653a609c42efa67f8dfa" translate="yes" xml:space="preserve">
          <source>The given &lt;a href=&quot;options&quot;&gt;&lt;code&gt;tf.data.Options&lt;/code&gt;&lt;/a&gt; can be merged as long as there does not exist an attribute that is set to different values in &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;options&lt;/code&gt;.</source>
          <target state="translated">指定された&lt;a href=&quot;options&quot;&gt; &lt;code&gt;tf.data.Options&lt;/code&gt; &lt;/a&gt;は、 &lt;code&gt;self&lt;/code&gt; と &lt;code&gt;options&lt;/code&gt; で異なる値に設定されている属性が存在しない限り、マージできます。</target>
        </trans-unit>
        <trans-unit id="0d60ebc741d192476c8f1b6c1be3c6bd74a4d508" translate="yes" xml:space="preserve">
          <source>The given tensors are sliced along their first dimension. This operation preserves the structure of the input tensors, removing the first dimension of each tensor and using it as the dataset dimension. All input tensors must have the same size in their first dimensions.</source>
          <target state="translated">与えられたテンソルは,その1次元目に沿ってスライスされる.この操作は,入力テンソルの構造を保持し,各テンソルの第1次元を削除して,それをデータセットの次元として使用する.すべての入力テンソルは,その1次元目のサイズが同じでなければならない.</target>
        </trans-unit>
        <trans-unit id="c5f30df096e972187d2845f5f792a695d8948e14" translate="yes" xml:space="preserve">
          <source>The global &lt;a href=&quot;generator&quot;&gt;&lt;code&gt;tf.random.Generator&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">グローバル&lt;a href=&quot;generator&quot;&gt; &lt;code&gt;tf.random.Generator&lt;/code&gt; &lt;/a&gt;オブジェクト。</target>
        </trans-unit>
        <trans-unit id="ccd566669127e41c5c83f5e51e6e655e2023b466" translate="yes" xml:space="preserve">
          <source>The global Policy.</source>
          <target state="translated">グローバルな政策。</target>
        </trans-unit>
        <trans-unit id="d7a438a2cfde234e4966d3aff26afbb96ef542c4" translate="yes" xml:space="preserve">
          <source>The global batch size that you indend to use. Note that is fixed and the same batch size must be used for both training and evaluation.</source>
          <target state="translated">使用するグローバルバッチサイズを指定します。固定であり、学習と評価の両方に同じバッチサイズを使用しなければならないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="7f44fcbf38635afbe0c45b61c517d01f18c4ad9b" translate="yes" xml:space="preserve">
          <source>The global id in the training cluster.</source>
          <target state="translated">学習クラスタのグローバルID。</target>
        </trans-unit>
        <trans-unit id="c06234718e1efd425d9fee36736f9c49d1c25446" translate="yes" xml:space="preserve">
          <source>The global policy is the default policy used for layers, if no policy is passed to the layer constructor. If no global policy is set, layers will instead default to a Policy constructed from &lt;a href=&quot;../../backend/floatx&quot;&gt;&lt;code&gt;tf.keras.backend.floatx()&lt;/code&gt;&lt;/a&gt; in TensorFlow 2. In TensorFlow 1, layers default to an &quot;infer&quot; policy.</source>
          <target state="translated">ポリシーがレイヤーコンストラクターに渡されない場合、グローバルポリシーはレイヤーに使用されるデフォルトのポリシーです。グローバルポリシーが設定されていない場合、レイヤーはデフォルトでTensorFlow 2の&lt;a href=&quot;../../backend/floatx&quot;&gt; &lt;code&gt;tf.keras.backend.floatx()&lt;/code&gt; &lt;/a&gt;から構築されたポリシーになります。TensorFlow1では、レイヤーはデフォルトで「推定」ポリシーになります。</target>
        </trans-unit>
        <trans-unit id="a24374cc9cda5c5142d42bd656066ec74ccfe3d0" translate="yes" xml:space="preserve">
          <source>The global policy is the default policy used for layers, if no policy is passed to the layer constructor. If no global policy is set, layers will instead default to a Policy constructed from &lt;a href=&quot;../../backend/floatx&quot;&gt;&lt;code&gt;tf.keras.backend.floatx()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ポリシーがレイヤーコンストラクターに渡されない場合、グローバルポリシーはレイヤーに使用されるデフォルトのポリシーです。グローバルポリシーが設定されていない場合、レイヤーはデフォルトで&lt;a href=&quot;../../backend/floatx&quot;&gt; &lt;code&gt;tf.keras.backend.floatx()&lt;/code&gt; &lt;/a&gt;から構築されたポリシーになります。</target>
        </trans-unit>
        <trans-unit id="c1016f9f2efa6dbdf2080ac5fb0e6a2efdf1abe3" translate="yes" xml:space="preserve">
          <source>The global policy is the default policy used for layers, if no policy is passed to the layer constructor. If no policy has been set with &lt;a href=&quot;set_policy&quot;&gt;&lt;code&gt;keras.mixed_precision.experimental.set_policy&lt;/code&gt;&lt;/a&gt;, this will return a policy constructed from &lt;a href=&quot;../../backend/floatx&quot;&gt;&lt;code&gt;tf.keras.backend.floatx()&lt;/code&gt;&lt;/a&gt; (floatx defaults to float32).</source>
          <target state="translated">ポリシーがレイヤーコンストラクターに渡されない場合、グローバルポリシーはレイヤーに使用されるデフォルトのポリシーです。&lt;a href=&quot;set_policy&quot;&gt; &lt;code&gt;keras.mixed_precision.experimental.set_policy&lt;/code&gt; &lt;/a&gt;でポリシーが設定されていない場合、これは&lt;a href=&quot;../../backend/floatx&quot;&gt; &lt;code&gt;tf.keras.backend.floatx()&lt;/code&gt; &lt;/a&gt;から構築されたポリシーを返します（floatxのデフォルトはfloat32です）。</target>
        </trans-unit>
        <trans-unit id="9aa023817c66fefe7d12596fe9f5c2f950738ad5" translate="yes" xml:space="preserve">
          <source>The global policy is the default policy used for layers, if no policy is passed to the layer constructor. If no policy has been set with &lt;a href=&quot;set_policy&quot;&gt;&lt;code&gt;keras.mixed_precision.experimental.set_policy&lt;/code&gt;&lt;/a&gt;, this will return a policy constructed from &lt;a href=&quot;../../backend/floatx&quot;&gt;&lt;code&gt;tf.keras.backend.floatx()&lt;/code&gt;&lt;/a&gt; in TensorFlow 2 (floatx defaults to float32), or an &quot;infer&quot; policy in TensorFlow 1.</source>
          <target state="translated">ポリシーがレイヤーコンストラクターに渡されない場合、グローバルポリシーはレイヤーに使用されるデフォルトのポリシーです。&lt;a href=&quot;set_policy&quot;&gt; &lt;code&gt;keras.mixed_precision.experimental.set_policy&lt;/code&gt; &lt;/a&gt;でポリシーが設定されていない場合、これはTensorFlow 2の&lt;a href=&quot;../../backend/floatx&quot;&gt; &lt;code&gt;tf.keras.backend.floatx()&lt;/code&gt; &lt;/a&gt;から構築されたポリシー（floatxのデフォルトはfloat32）、またはTensorFlow 1の「推定」ポリシーを返します。</target>
        </trans-unit>
        <trans-unit id="147a0f3f093ca1fdfeeb131812693ae892afe50f" translate="yes" xml:space="preserve">
          <source>The global step tensor must be an integer variable. We first try to find it in the collection &lt;code&gt;GLOBAL_STEP&lt;/code&gt;, or by name &lt;code&gt;global_step:0&lt;/code&gt;.</source>
          <target state="translated">グローバルステップテンソルは整変数でなければなりません。まず、コレクション &lt;code&gt;GLOBAL_STEP&lt;/code&gt; で、または名前 &lt;code&gt;global_step:0&lt;/code&gt; でそれを見つけようとします。</target>
        </trans-unit>
        <trans-unit id="1b54d047ac096c3ae7f021822844b86acfbb5227" translate="yes" xml:space="preserve">
          <source>The global step tensor.</source>
          <target state="translated">グローバルステップテンソルです。</target>
        </trans-unit>
        <trans-unit id="95db374c08adfbc24c444a5e0edf15c6723034b8" translate="yes" xml:space="preserve">
          <source>The global step value.</source>
          <target state="translated">グローバルステップ値。</target>
        </trans-unit>
        <trans-unit id="27f92d2c600461e2b55ce1161093f706c000d648" translate="yes" xml:space="preserve">
          <source>The global step variable, or &lt;code&gt;None&lt;/code&gt; if none was found.</source>
          <target state="translated">グローバルステップ変数、または &lt;code&gt;None&lt;/code&gt; 。見つからなかった場合は。</target>
        </trans-unit>
        <trans-unit id="99d903697b9ca80a681aa088eea14a311d3cfb53" translate="yes" xml:space="preserve">
          <source>The goal of this op is to produce a new tensor with a subset of the elements from the &lt;code&gt;n&lt;/code&gt; dimensional &lt;code&gt;input&lt;/code&gt; tensor. The subset is chosen using a sequence of &lt;code&gt;m&lt;/code&gt; sparse range specifications encoded into the arguments of this function. Note, in some cases &lt;code&gt;m&lt;/code&gt; could be equal to &lt;code&gt;n&lt;/code&gt;, but this need not be the case. Each range specification entry can be one of the following:</source>
          <target state="translated">この操作の目的は、 &lt;code&gt;n&lt;/code&gt; 次元の &lt;code&gt;input&lt;/code&gt; テンソルからの要素のサブセットを使用して新しいテンソルを生成することです。サブセットは、この関数の引数にエンコードされた &lt;code&gt;m&lt;/code&gt; 個のスパース範囲仕様のシーケンスを使用して選択されます。 &lt;code&gt;m&lt;/code&gt; が &lt;code&gt;n&lt;/code&gt; に等しい場合もありますが、そうである必要はありません。各範囲指定エントリは、次のいずれかになります。</target>
        </trans-unit>
        <trans-unit id="4b19676d8e2406a216d2d74b877270145ae7d383" translate="yes" xml:space="preserve">
          <source>The gradient &lt;code&gt;IndexedSlices&lt;/code&gt; to be applied.</source>
          <target state="translated">適用されるグラデーション &lt;code&gt;IndexedSlices&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a2344c5579f4717a0862d524efae16729bc6ed70" translate="yes" xml:space="preserve">
          <source>The gradient computation of this operation will only take advantage of sparsity in the input gradient when that gradient comes from a Relu.</source>
          <target state="translated">この操作の勾配計算は、入力勾配がReluから来ている場合にのみ、入力勾配の疎分散性を利用します。</target>
        </trans-unit>
        <trans-unit id="d051520aa4dd277f3ed0bb66ae2aa2ab1b266a18" translate="yes" xml:space="preserve">
          <source>The gradient computed for 'op_type' will then propagate zeros.</source>
          <target state="translated">op_type' で計算された勾配はゼロを伝搬します。</target>
        </trans-unit>
        <trans-unit id="71b1d3537cf96813de8a96c3c5f5d393309ab752" translate="yes" xml:space="preserve">
          <source>The gradient expression can be analytically simplified to provide numerical stability:</source>
          <target state="translated">勾配式を解析的に単純化することで数値的な安定性を得ることができます。</target>
        </trans-unit>
        <trans-unit id="66f6394f68f095fb6407b72059c63e54607c1a7e" translate="yes" xml:space="preserve">
          <source>The gradient of SparseFillEmptyRows.</source>
          <target state="translated">SparseFillEmptyRowsのグラデーション。</target>
        </trans-unit>
        <trans-unit id="7ab3e3e9ec9dadb6bed29c4d9fadd240cfe53d58" translate="yes" xml:space="preserve">
          <source>The gradient of y with respect to x can be zero in two different ways: there could be no differentiable path in the graph connecting x to y (and so we can statically prove that the gradient is zero) or it could be that runtime values of tensors in a particular execution lead to a gradient of zero (say, if a relu unit happens to not be activated). To allow you to distinguish between these two cases you can choose what value gets returned for the gradient when there is no path in the graph from x to y:</source>
          <target state="translated">x と y を結ぶグラフに微分可能なパスが存在しない場合(そのため、勾配がゼロであることを静的に証明することができます)と、特定の実行におけるテンソルの実行時の値が勾配をゼロにしてしまう場合(例えば、relu ユニットがたまたま起動しなかった場合)です。この2つのケースを区別するために、xからyへのパスがない場合にどのような値をグラデーションとして返すかを選択することができます。</target>
        </trans-unit>
        <trans-unit id="e557b207c1bf0f24f7b6478ec86b6e18a701dea1" translate="yes" xml:space="preserve">
          <source>The gradient operator for the SparseAdd op.</source>
          <target state="translated">SparseAdd op.の勾配演算子です。</target>
        </trans-unit>
        <trans-unit id="1aa83bb60002d17ea0a36a621a83f096102e24dd" translate="yes" xml:space="preserve">
          <source>The gradient operator for the SparseSlice op.</source>
          <target state="translated">SparseSlice op.の勾配演算子です。</target>
        </trans-unit>
        <trans-unit id="506e6c0e4b5d041a489d5af54d1312d2417b8fa8" translate="yes" xml:space="preserve">
          <source>The gradient tensor to be applied.</source>
          <target state="translated">適用する勾配テンソル。</target>
        </trans-unit>
        <trans-unit id="f6537a20daecb5b5cdb196626f45c6602644de72" translate="yes" xml:space="preserve">
          <source>The gradients of SparseMatrixAdd outputs with respect to alpha and beta are not currently defined (TensorFlow will return zeros for these entries).</source>
          <target state="translated">アルファとベータに関する SparseMatrixAdd 出力の勾配は現在定義されていません(TensorFlow はこれらのエントリに対してゼロを返します).</target>
        </trans-unit>
        <trans-unit id="f5c157361d6bbe7fc68fa055766a81dc3624c016" translate="yes" xml:space="preserve">
          <source>The graph described by the protocol buffer will be displayed by TensorBoard. Most users pass a graph in the constructor instead.</source>
          <target state="translated">プロトコルバッファで記述されたグラフがTensorBoardで表示されます。ほとんどのユーザーは、代わりにコンストラクタでグラフを渡します。</target>
        </trans-unit>
        <trans-unit id="cee27050675be79d589848fe27aab1e7b8f14449" translate="yes" xml:space="preserve">
          <source>The graph in which to create the global step tensor. If missing, use default graph.</source>
          <target state="translated">グローバルステップテンソルを作成するグラフ。見つからない場合は、デフォルトのグラフを使用します。</target>
        </trans-unit>
        <trans-unit id="fbdbb3541583ec055cc057fc7380e7b06e65a362" translate="yes" xml:space="preserve">
          <source>The graph is not frozen. input_arrays or output_arrays contains an invalid tensor name. input_shapes is not correctly defined when required</source>
          <target state="translated">グラフがフリーズしていません。 input_arrays または output_arrays に無効なテンソル名が含まれています。</target>
        </trans-unit>
        <trans-unit id="661d2d430bf12295ddf1be3a1e881f38bccfdb01" translate="yes" xml:space="preserve">
          <source>The graph is written as a text proto unless &lt;code&gt;as_text&lt;/code&gt; is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;as_text&lt;/code&gt; が &lt;code&gt;False&lt;/code&gt; でない限り、グラフはテキストプロトとして書き込まれます。</target>
        </trans-unit>
        <trans-unit id="ed620881b1cf97ec1349e99d3e7fd253aa216b39" translate="yes" xml:space="preserve">
          <source>The graph rewrite operation changes the &lt;code&gt;dtype&lt;/code&gt; of certain operations in the graph from float32 to float16. There are several categories of operations that are either included or excluded by this rewrite operation. The following categories of Ops are defined inside corresponding functions under the class &lt;code&gt;AutoMixedPrecisionLists&lt;/code&gt; in  auto_mixed_precision_lists.h:</source>
          <target state="translated">グラフの書き換え操作により、グラフ &lt;code&gt;dtype&lt;/code&gt; の特定の操作のdtypeがfloat32からfloat16に変更されます。この書き換え操作に含まれる、または除外される操作にはいくつかのカテゴリがあります。次の &lt;code&gt;AutoMixedPrecisionLists&lt;/code&gt; カテゴリは、AutoMixedPrecisionListsクラスの対応する関数内で定義されます。は、auto_mixed_precision_lists.hのAutoMixedPrecisionListsれています。</target>
        </trans-unit>
        <trans-unit id="f8a95853ba686885563f0cb093070ca0be189fd7" translate="yes" xml:space="preserve">
          <source>The graph rewrite operation changes the &lt;code&gt;dtype&lt;/code&gt; of certain operations in the graph from float32 to float16. There are several categories of operations that are either included or excluded by this rewrite operation. The following categories of Ops are defined inside corresponding functions under the class &lt;code&gt;AutoMixedPrecisionLists&lt;/code&gt; in &lt;a href=&quot;https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/grappler/optimizers/auto_mixed_precision_lists.h&quot;&gt; auto_mixed_precision_lists.h&lt;/a&gt;:</source>
          <target state="translated">グラフ書き換え動作が変更 &lt;code&gt;dtype&lt;/code&gt; のfloat32からfloat16のグラフで特定の操作を。この書き換え操作に含まれる、または除外される操作には、いくつかのカテゴリがあります。次のカテゴリのOpsは、&lt;a href=&quot;https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/grappler/optimizers/auto_mixed_precision_lists.h&quot;&gt;auto_mixed_precision_lists.hの&lt;/a&gt;クラス &lt;code&gt;AutoMixedPrecisionLists&lt;/code&gt; の下の対応する関数内で定義されています。</target>
        </trans-unit>
        <trans-unit id="392b7dd1d0b2ec49c8bc79fcfe637691fe3461a3" translate="yes" xml:space="preserve">
          <source>The graph rewrite operation changes the dtype of certain operations in the graph from float32 to float16. There are several categories of operations that are either included or excluded by this rewrite operation. The following categories of Ops are defined inside corresponding functions under the class &lt;code&gt;AutoMixedPrecisionLists&lt;/code&gt; in &lt;a href=&quot;https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/grappler/optimizers/auto_mixed_precision_lists.h&quot;&gt; auto_mixed_precision_lists.h&lt;/a&gt;:</source>
          <target state="translated">グラフの書き換え操作は、グラフ内の特定の操作のdtypeをfloat32からfloat16に変更します。この書き換え操作に含まれる、または除外される操作には、いくつかのカテゴリがあります。次のカテゴリのOpsは、&lt;a href=&quot;https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/grappler/optimizers/auto_mixed_precision_lists.h&quot;&gt;auto_mixed_precision_lists.hの&lt;/a&gt;クラス &lt;code&gt;AutoMixedPrecisionLists&lt;/code&gt; の下の対応する関数内で定義されています。</target>
        </trans-unit>
        <trans-unit id="186101c609f7e0b73c5beb88b3d3fda49788c5a2" translate="yes" xml:space="preserve">
          <source>The graph should be constructed so if one op runs with shared_name value &lt;code&gt;c&lt;/code&gt;, then &lt;code&gt;num_devices&lt;/code&gt; ops will run with shared_name value &lt;code&gt;c&lt;/code&gt;. Failure to do so will cause the graph execution to fail to complete.</source>
          <target state="translated">グラフは、1つのopがshared_name値で実行されている場合このように構成されるべき &lt;code&gt;c&lt;/code&gt; 、そして &lt;code&gt;num_devices&lt;/code&gt; のOPSがshared_name値で実行されます &lt;code&gt;c&lt;/code&gt; 。そうしないと、グラフの実行が完了しなくなります。</target>
        </trans-unit>
        <trans-unit id="54dd05e38efeb9304c2e7af28168698a594f9293" translate="yes" xml:space="preserve">
          <source>The graph should be constructed so that all inputs have a valid device assignment, and the op itself is assigned one of these devices.</source>
          <target state="translated">グラフは、すべての入力に有効なデバイスが割り当てられ、オペアンプ自身がこれらのデバイスのいずれかに割り当てられるように構成されなければなりません。</target>
        </trans-unit>
        <trans-unit id="c4be0b8b705593560d211ca0abc094810b42f770" translate="yes" xml:space="preserve">
          <source>The graph should be constructed so that all ops connected to the output have a valid device assignment, and the op itself is assigned one of these devices.</source>
          <target state="translated">グラフは、出力に接続されているすべてのオペが有効なデバイス割り当てを持ち、オペ自身がこれらのデバイスのいずれかに割り当てられるように構築されるべきである。</target>
        </trans-unit>
        <trans-unit id="ae4960be0391bc0449f500287c2e9601d2d28fb9" translate="yes" xml:space="preserve">
          <source>The graph that was launched in this session.</source>
          <target state="translated">今回のセッションで打ち上げられたグラフ。</target>
        </trans-unit>
        <trans-unit id="40aa8e68a00de5dbe27aa7ae38408c5a0d4706a5" translate="yes" xml:space="preserve">
          <source>The graph to find the global step in. If missing, use default graph.</source>
          <target state="translated">グローバルステップインを見つけるためのグラフ。見つからない場合は、デフォルトのグラフを使用します。</target>
        </trans-unit>
        <trans-unit id="ff2ceded61c6685a839fd2d7a80fa7375d194758" translate="yes" xml:space="preserve">
          <source>The graph with quantize training done.</source>
          <target state="translated">クオンタイズトレーニングを行ったグラフ。</target>
        </trans-unit>
        <trans-unit id="3e6f6623fe7498e3548d52e61a0b5aeb7212fa47" translate="yes" xml:space="preserve">
          <source>The graph-level random seed of this graph.</source>
          <target state="translated">このグラフのグラフレベルのランダムシード。</target>
        </trans-unit>
        <trans-unit id="b19682167ffcfe3c04ed8fb01a75a8aa799a4834" translate="yes" xml:space="preserve">
          <source>The ground truth output tensor, same dimensions as 'predictions'.</source>
          <target state="translated">予測」と同じ次元の基底真実出力テンソル。</target>
        </trans-unit>
        <trans-unit id="9d40415d775a65d5e9c240e06cfa7ef2938a3a8e" translate="yes" xml:space="preserve">
          <source>The ground truth output tensor, whose shape must match the shape of &lt;code&gt;predictions&lt;/code&gt;.</source>
          <target state="translated">グラウンドトゥルース出力テンソル。その形状は &lt;code&gt;predictions&lt;/code&gt; の形状と一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="3ce49e07066730c52addc7241cd12da10f5be42a" translate="yes" xml:space="preserve">
          <source>The ground truth output tensor. Its shape should match the shape of logits. The values of the tensor are expected to be 0.0 or 1.0. Internally the {0,1} labels are converted to {-1,1} when calculating the hinge loss.</source>
          <target state="translated">基底真理値出力テンソル。その形状はロジットの形状と一致している必要があります。テンソルの値は0.0または1.0であると予想されます。内部的には、ヒンジ損失を計算する際に{0,1}ラベルは{-1,1}に変換されます。</target>
        </trans-unit>
        <trans-unit id="5e5ec338b593d91f4875e9143cbbc83aa6f393e3" translate="yes" xml:space="preserve">
          <source>The ground truth values, a &lt;code&gt;Tensor&lt;/code&gt; whose dimensions must match &lt;code&gt;predictions&lt;/code&gt;. Will be cast to &lt;code&gt;bool&lt;/code&gt;.</source>
          <target state="translated">グラウンドトゥルース値、次元が &lt;code&gt;predictions&lt;/code&gt; 一致する必要がある &lt;code&gt;Tensor&lt;/code&gt; 。 &lt;code&gt;bool&lt;/code&gt; にキャストされます。</target>
        </trans-unit>
        <trans-unit id="60096598c979dc6d254911e38f80ad100e27b230" translate="yes" xml:space="preserve">
          <source>The ground truth values, a &lt;code&gt;Tensor&lt;/code&gt; whose shape matches &lt;code&gt;predictions&lt;/code&gt;.</source>
          <target state="translated">グラウンドトゥルース値、形状が &lt;code&gt;predictions&lt;/code&gt; 一致する &lt;code&gt;Tensor&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="605e115f8ae90c28fbc9ece17ff2e60055be11a5" translate="yes" xml:space="preserve">
          <source>The ground truth values, with the same dimensions as &lt;code&gt;y_pred&lt;/code&gt;. Will be cast to &lt;code&gt;bool&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;y_pred&lt;/code&gt; と同じ次元のグラウンドトゥルース値。 &lt;code&gt;bool&lt;/code&gt; にキャストされます。</target>
        </trans-unit>
        <trans-unit id="52b0a2c7f13eb68767ea820eccfa44a1fa1d1417" translate="yes" xml:space="preserve">
          <source>The ground truth values.</source>
          <target state="translated">地に足のついた真実の価値観。</target>
        </trans-unit>
        <trans-unit id="23fc95f30242886be69cc146eccbc44fbd3a9182" translate="yes" xml:space="preserve">
          <source>The ground truth values. &lt;code&gt;y_true&lt;/code&gt; values are expected to be -1 or 1. If binary (0 or 1) labels are provided we will convert them to -1 or 1. shape = &lt;code&gt;[batch_size, d0, .. dN]&lt;/code&gt;.</source>
          <target state="translated">グラウンドトゥルース値。 &lt;code&gt;y_true&lt;/code&gt; 値は-1または1であると予想されます。バイナリ（0または1）ラベルが提供されている場合、それらを-1または1に変換します &lt;code&gt;[batch_size, d0, .. dN]&lt;/code&gt; = [batch_size、d0、.. dN]。</target>
        </trans-unit>
        <trans-unit id="59439dc5cc92da495265d90185dbcfa8d277e54f" translate="yes" xml:space="preserve">
          <source>The ground truth values. &lt;code&gt;y_true&lt;/code&gt; values are expected to be 0 or 1.</source>
          <target state="translated">グラウンドトゥルース値。 &lt;code&gt;y_true&lt;/code&gt; 値は0または1であると予想されます。</target>
        </trans-unit>
        <trans-unit id="6db4406cca6113b5fab1f1335e874fc3df16b4d0" translate="yes" xml:space="preserve">
          <source>The handle flow_in forces the execution of the gradient lookup to occur only after certain other operations have occurred. For example, when the forward TensorArray is dynamically sized, writes to this TensorArray may resize the object. The gradient TensorArray is statically sized based on the size of the forward TensorArray when this operation executes. Furthermore, the size of the forward TensorArray is frozen by this call. As a result, the flow is used to ensure that the call to generate the gradient TensorArray only happens after all writes are executed.</source>
          <target state="translated">ハンドルflow_inは、勾配ルックアップの実行を、他の特定の操作が発生した後にのみ強制的に発生させます。例えば、前方のTensorArrayのサイズが動的に変更されている場合、このTensorArrayへの書き込みはオブジェクトのサイズを変更することがあります。勾配TensorArrayは、この操作が実行されると、前方TensorArrayのサイズに基づいて静的にサイズが決定される。さらに、この呼び出しによって前方のTensorArrayのサイズは凍結される。その結果、すべての書き込みが実行された後にのみ、勾配TensorArrayを生成するための呼び出しが行われるようにフローが使用されます。</target>
        </trans-unit>
        <trans-unit id="386f2f718150cc3d8ab94292f585fc5254536634" translate="yes" xml:space="preserve">
          <source>The hard sigmoid activation, defined as:</source>
          <target state="translated">と定義されている硬いシグモイド活性化。</target>
        </trans-unit>
        <trans-unit id="4ddc50d95cf25f219ea2579cde9bf22435bfdc02" translate="yes" xml:space="preserve">
          <source>The hard sigmoid activation:</source>
          <target state="translated">硬いシグモイドの活性化。</target>
        </trans-unit>
        <trans-unit id="0f4987b71fd23d4d24937f4f99fea76affcae8b1" translate="yes" xml:space="preserve">
          <source>The hash function is deterministic on the content of the string within the process and will never change. However, it is not suitable for cryptography. This function may be used when CPU time is scarce and inputs are trusted or unimportant. There is a risk of adversaries constructing inputs that all hash to the same bucket. To prevent this problem, use a strong hash function with &lt;code&gt;tf.string_to_hash_bucket_strong&lt;/code&gt;.</source>
          <target state="translated">ハッシュ関数は、プロセス内の文字列の内容に決定的であり、決して変更されません。ただし、暗号化には適していません。この関数は、CPU時間が少なく、入力が信頼できるか重要でない場合に使用できます。攻撃者がすべて同じバケットにハッシュする入力を作成するリスクがあります。この問題を回避するには、 &lt;code&gt;tf.string_to_hash_bucket_strong&lt;/code&gt; で強力なハッシュ関数を使用します。</target>
        </trans-unit>
        <trans-unit id="fd0bfc8db5880e8eee54fb3385531988b2ad4a55" translate="yes" xml:space="preserve">
          <source>The hash function is deterministic on the content of the string within the process.</source>
          <target state="translated">ハッシュ関数は、プロセス内の文字列の内容に対して決定論的である。</target>
        </trans-unit>
        <trans-unit id="61f428a10a4305c850461ee00f387b0cacfe0ef7" translate="yes" xml:space="preserve">
          <source>The hash function is deterministic on the content of the string within the process. The hash function is a keyed hash function, where attribute &lt;code&gt;key&lt;/code&gt; defines the key of the hash function. &lt;code&gt;key&lt;/code&gt; is an array of 2 elements.</source>
          <target state="translated">ハッシュ関数は、プロセス内の文字列の内容を決定します。ハッシュ関数はキー付きハッシュ関数であり、属性 &lt;code&gt;key&lt;/code&gt; はハッシュ関数のキーを定義します。 &lt;code&gt;key&lt;/code&gt; は2つの要素の配列です。</target>
        </trans-unit>
        <trans-unit id="1e7a8b7c173f99d4be181a635239bd0a5322a9de" translate="yes" xml:space="preserve">
          <source>The hash function used for generating out-of-vocabulary buckets ID is Fingerprint64.</source>
          <target state="translated">語彙外バケットIDの生成に使用するハッシュ関数はFingerprint64である。</target>
        </trans-unit>
        <trans-unit id="69a6e09f76ddf4e19a4f8311d3f8fdc0b3c24b22" translate="yes" xml:space="preserve">
          <source>The head can be used with a canned estimator. Example:</source>
          <target state="translated">ヘッドは缶詰の見積書を使用することができます。例です。</target>
        </trans-unit>
        <trans-unit id="d8faf861d99f75e3ed7e367680c294894cd4fcef" translate="yes" xml:space="preserve">
          <source>The head expects &lt;code&gt;logits&lt;/code&gt; with shape &lt;code&gt;[D0, D1, ... DN, 1]&lt;/code&gt;. In many applications, the shape is &lt;code&gt;[batch_size, 1]&lt;/code&gt;.</source>
          <target state="translated">頭は形状 &lt;code&gt;[D0, D1, ... DN, 1]&lt;/code&gt; &lt;code&gt;logits&lt;/code&gt; を期待しています。多くのアプリケーションでは、形状は &lt;code&gt;[batch_size, 1]&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c11316cb9d31dc7288f1ee66c33f5379df0eac90" translate="yes" xml:space="preserve">
          <source>The head expects &lt;code&gt;logits&lt;/code&gt; with shape &lt;code&gt;[D0, D1, ... DN, label_dimension]&lt;/code&gt;. In many applications, the shape is &lt;code&gt;[batch_size, label_dimension]&lt;/code&gt;.</source>
          <target state="translated">ヘッドが期待 &lt;code&gt;logits&lt;/code&gt; 形状の &lt;code&gt;[D0, D1, ... DN, label_dimension]&lt;/code&gt; 。多くのアプリケーションでは、形状は &lt;code&gt;[batch_size, label_dimension]&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="bfb83e6dd754125ed65384336314d4dfea48278d" translate="yes" xml:space="preserve">
          <source>The head expects &lt;code&gt;logits&lt;/code&gt; with shape &lt;code&gt;[D0, D1, ... DN, n_classes]&lt;/code&gt;. In many applications, the shape is &lt;code&gt;[batch_size, n_classes]&lt;/code&gt;.</source>
          <target state="translated">ヘッドが期待 &lt;code&gt;logits&lt;/code&gt; 形状の &lt;code&gt;[D0, D1, ... DN, n_classes]&lt;/code&gt; 。多くのアプリケーションでは、形状は &lt;code&gt;[batch_size, n_classes]&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="0d067db23fc00d02a594d5d3f6689549c9f412c9" translate="yes" xml:space="preserve">
          <source>The higher the value, the more important the corresponding feature.</source>
          <target state="translated">値が大きいほど、対応する特徴の重要度が高くなります。</target>
        </trans-unit>
        <trans-unit id="8521813f904a22ffdfed697b68b5f435421da5d1" translate="yes" xml:space="preserve">
          <source>The hyperparameter dict.</source>
          <target state="translated">ハイパーパラメータdict。</target>
        </trans-unit>
        <trans-unit id="d8f83801fea0c2b2d476a98f4924fa4ac4c7e365" translate="yes" xml:space="preserve">
          <source>The id to use for an entry with no features.</source>
          <target state="translated">特徴のないエントリに使用するid。</target>
        </trans-unit>
        <trans-unit id="4057b28d9bdcaa801a67add7d2746bf429a07212" translate="yes" xml:space="preserve">
          <source>The id to use for an entry with no features. Defaults to 0-vector.</source>
          <target state="translated">特徴のないエントリに使用するid。デフォルトは0ベクトルです。</target>
        </trans-unit>
        <trans-unit id="ec4887ee6136cea3e95782b65b373451d365f518" translate="yes" xml:space="preserve">
          <source>The ids and weights may be multi-dimensional. Embeddings are always aggregated along the last dimension.</source>
          <target state="translated">ID と重みは多次元であってもよい。埋め込みは常に最後の次元に沿って集約されます。</target>
        </trans-unit>
        <trans-unit id="2dedfa9fac99909c847ee188683a18acc13d4781" translate="yes" xml:space="preserve">
          <source>The image sizes must be at least 11x11 because of the filter size.</source>
          <target state="translated">フィルターサイズの関係上、画像サイズは最低でも11x11でなければなりません。</target>
        </trans-unit>
        <trans-unit id="64a71045d71d24f6cb099b242b2b3b3524c6c175" translate="yes" xml:space="preserve">
          <source>The images are converted from RGB to BGR, then each color channel is zero-centered with respect to the ImageNet dataset, without scaling.</source>
          <target state="translated">画像はRGBからBGRに変換され,各カラーチャンネルはスケーリングなしでImageNetデータセットを基準にゼロセンタリングされます.</target>
        </trans-unit>
        <trans-unit id="c48ed1044647075aee18b6c60d833446c1e6e4e9" translate="yes" xml:space="preserve">
          <source>The images have the same number of channels as the input tensor. For float input, the values are normalized one image at a time to fit in the range &lt;code&gt;[0, 255]&lt;/code&gt;. &lt;code&gt;uint8&lt;/code&gt; values are unchanged. The op uses two different normalization algorithms:</source>
          <target state="translated">画像には、入力テンソルと同じ数のチャネルがあります。フロート入力の場合、値は &lt;code&gt;[0, 255]&lt;/code&gt; 範囲に収まるように一度に1つの画像で正規化されます。 &lt;code&gt;uint8&lt;/code&gt; の値は変更されていません。opは、2つの異なる正規化アルゴリズムを使用します。</target>
        </trans-unit>
        <trans-unit id="7512c5f22af2e468e091d738afee317bd6f3ab0c" translate="yes" xml:space="preserve">
          <source>The implementation is based on</source>
          <target state="translated">に基づいて実装されています。</target>
        </trans-unit>
        <trans-unit id="7d3ec374ef70a5b15f88b06660be75d304545cf4" translate="yes" xml:space="preserve">
          <source>The implementation is based on: http://arxiv.org/abs/1409.2329.</source>
          <target state="translated">実装は、http://arxiv.org/abs/1409.2329。</target>
        </trans-unit>
        <trans-unit id="4ceeee7cb755fec502e82f78579a1a2aeacda20b" translate="yes" xml:space="preserve">
          <source>The implementation of reduce of &lt;code&gt;per_replica_value&lt;/code&gt; to &lt;code&gt;destinations&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;per_replica_value&lt;/code&gt; の &lt;code&gt;destinations&lt;/code&gt; への削減の実装。</target>
        </trans-unit>
        <trans-unit id="a45943ff8ffbe5eb14bb769ef477b63bf1e6634b" translate="yes" xml:space="preserve">
          <source>The implementation of this layer is based on the following paper: &lt;a href=&quot;https://people.eecs.berkeley.edu/%7Ebrecht/papers/07.rah.rec.nips.pdf&quot;&gt;&quot;Random Features for Large-Scale Kernel Machines&quot;&lt;/a&gt; by Ali Rahimi and Ben Recht.</source>
          <target state="translated">このレイヤーの実装は、AliRahimiとBenRechtによる&lt;a href=&quot;https://people.eecs.berkeley.edu/%7Ebrecht/papers/07.rah.rec.nips.pdf&quot;&gt;「大規模カーネルマシンのランダム機能」という&lt;/a&gt;論文に基づいています。</target>
        </trans-unit>
        <trans-unit id="0bf2a5f575ee57fc6179092cf074536b99352e2c" translate="yes" xml:space="preserve">
          <source>The index &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. Must be in range &lt;code&gt;[0, params.shape[axis])&lt;/code&gt;.</source>
          <target state="translated">インデックス &lt;code&gt;Tensor&lt;/code&gt; 。次のいずれかのタイプである必要があります： &lt;code&gt;int32&lt;/code&gt; 、 &lt;code&gt;int64&lt;/code&gt; 。範囲 &lt;code&gt;[0, params.shape[axis])&lt;/code&gt; 内にある必要があります。</target>
        </trans-unit>
        <trans-unit id="39a73acc3a718d665ade71e6fcdb4d6f64ce1525" translate="yes" xml:space="preserve">
          <source>The index of the closest cluster center for each input point.</source>
          <target state="translated">各入力点に最も近いクラスタ中心のインデックス.</target>
        </trans-unit>
        <trans-unit id="bea3fce0b788c98ad4fd4961601d66fd0a86dd08" translate="yes" xml:space="preserve">
          <source>The index of this tensor in the outputs of its &lt;code&gt;Operation&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Operation&lt;/code&gt; の出力におけるこのテンソルのインデックス。</target>
        </trans-unit>
        <trans-unit id="14e09cd196d124b973e167954c771249f4762ea9" translate="yes" xml:space="preserve">
          <source>The indicator function</source>
          <target state="translated">インジケータ機能</target>
        </trans-unit>
        <trans-unit id="e479f7d6722440bc7a24c4b0e9bd9fc43faf862a" translate="yes" xml:space="preserve">
          <source>The indices in &lt;code&gt;argmax&lt;/code&gt; are flattened, so that a maximum value at position &lt;code&gt;[b, y, x, c]&lt;/code&gt; becomes flattened index: &lt;code&gt;(y * width + x) * channels + c&lt;/code&gt; if &lt;code&gt;include_batch_in_index&lt;/code&gt; is False; &lt;code&gt;((b * height + y) * width + x) * channels + c&lt;/code&gt; if &lt;code&gt;include_batch_in_index&lt;/code&gt; is True.</source>
          <target state="translated">&lt;code&gt;argmax&lt;/code&gt; のインデックスはフラット化されるため、 &lt;code&gt;[b, y, x, c]&lt;/code&gt; 位置の最大値はフラット化されたインデックスになります。 &lt;code&gt;(y * width + x) * channels + c&lt;/code&gt; &lt;code&gt;include_batch_in_index&lt;/code&gt; がFalseの場合。 &lt;code&gt;((b * height + y) * width + x) * channels + c&lt;/code&gt; &lt;code&gt;include_batch_in_index&lt;/code&gt; がTrueの場合。</target>
        </trans-unit>
        <trans-unit id="aded17676aa9e31637aa4cd1d72c2f01005a52db" translate="yes" xml:space="preserve">
          <source>The indices of &lt;code&gt;values&lt;/code&gt; within the last dimension of &lt;code&gt;input&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;input&lt;/code&gt; の最後の次元内の &lt;code&gt;values&lt;/code&gt; のインデックス。</target>
        </trans-unit>
        <trans-unit id="0c8ef3b2e283d0175df2945495378ccedf137327" translate="yes" xml:space="preserve">
          <source>The indices of any input &lt;code&gt;SparseTensor&lt;/code&gt; are assumed ordered in standard lexicographic order. If this is not the case, before this step run &lt;code&gt;SparseReorder&lt;/code&gt; to restore index ordering.</source>
          <target state="translated">入力 &lt;code&gt;SparseTensor&lt;/code&gt; のインデックスは、標準の辞書式順序で並べられていると想定されます。そうでない場合は、この手順の前に &lt;code&gt;SparseReorder&lt;/code&gt; を実行してインデックスの順序を復元します。</target>
        </trans-unit>
        <trans-unit id="b80ce2ebdd8a066053015d24d2b36c5006bb3c4b" translate="yes" xml:space="preserve">
          <source>The indices of non-zero values in the represented dense tensor.</source>
          <target state="translated">表現された密なテンソルの非ゼロ値のインデックス。</target>
        </trans-unit>
        <trans-unit id="6678184e53cf5eab61e8f12ffd050f2da0981541" translate="yes" xml:space="preserve">
          <source>The indices returned are always in &lt;code&gt;[0, height) x [0, width)&lt;/code&gt; before flattening, even if padding is involved and the mathematically correct answer is outside (either negative or too large). This is a bug, but fixing it is difficult to do in a safe backwards compatible way, especially due to flattening.</source>
          <target state="translated">返されるインデックスは、パディングが含まれ、数学的に正しい答えが外側（負または大きすぎる）であっても、フラット化する前は常に &lt;code&gt;[0, height) x [0, width)&lt;/code&gt; ）です。これはバグですが、特にフラット化のため、安全な下位互換性のある方法で修正することは困難です。</target>
        </trans-unit>
        <trans-unit id="308dc80a122084288a0ffca0b6ff7c164285d050" translate="yes" xml:space="preserve">
          <source>The indices to be used in the operation.</source>
          <target state="translated">操作に使用するインデックス。</target>
        </trans-unit>
        <trans-unit id="982eccddab4c7cb8698248ade435084245e7ba3a" translate="yes" xml:space="preserve">
          <source>The inferred shape of a tensor is used to provide shape information without having to launch the graph in a session. This can be used for debugging, and providing early error messages. For example:</source>
          <target state="translated">テンソルの推定形状は、セッションでグラフを起動しなくても形状情報を提供するために使用されます。これは、デバッグや初期のエラーメッセージを提供するために使用できます。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="d0cd21ff5f1c8bdcbdb1615eade35bd02cd426a1" translate="yes" xml:space="preserve">
          <source>The initial value for every thread's stack is set to the current value of the stack when &lt;code&gt;switch_to_thread_local()&lt;/code&gt; was first called.</source>
          <target state="translated">各スレッドのスタックの初期値は、 &lt;code&gt;switch_to_thread_local()&lt;/code&gt; が最初に呼び出されたときのスタックの現在の値に設定されます。</target>
        </trans-unit>
        <trans-unit id="1520071416fcbbf59fdfe9d1fb1a38e0c5b7ec1a" translate="yes" xml:space="preserve">
          <source>The initializer operation for this variable.</source>
          <target state="translated">この変数のイニシャライザ操作。</target>
        </trans-unit>
        <trans-unit id="5fe0073bfbc54ff4aabd7ab72b5b3609d630078b" translate="yes" xml:space="preserve">
          <source>The inner-most 2 dimensions of &lt;code&gt;input&lt;/code&gt; are assumed to be the result of &lt;code&gt;RFFT2D&lt;/code&gt;: The inner-most dimension contains the &lt;code&gt;fft_length / 2 + 1&lt;/code&gt; unique components of the DFT of a real-valued signal. If &lt;code&gt;fft_length&lt;/code&gt; is not provided, it is computed from the size of the inner-most 2 dimensions of &lt;code&gt;input&lt;/code&gt;. If the FFT length used to compute &lt;code&gt;input&lt;/code&gt; is odd, it should be provided since it cannot be inferred properly.</source>
          <target state="translated">&lt;code&gt;input&lt;/code&gt; 最も内側の2次元は、 &lt;code&gt;RFFT2D&lt;/code&gt; の結果であると想定されます。最も内側の次元には、実数値信号のDFTの &lt;code&gt;fft_length / 2 + 1&lt;/code&gt; 一意のコンポーネントが含まれます。 &lt;code&gt;fft_length&lt;/code&gt; が指定されていない場合は、 &lt;code&gt;input&lt;/code&gt; の最も内側の2次元のサイズから計算されます。 &lt;code&gt;input&lt;/code&gt; 計算に使用されるFFT長が奇数の場合、適切に推論できないため、それを指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="577a2328b01f8435a1e76dd0c500fccff4c87199" translate="yes" xml:space="preserve">
          <source>The inner-most 3 dimensions of &lt;code&gt;input&lt;/code&gt; are assumed to be the result of &lt;code&gt;RFFT3D&lt;/code&gt;: The inner-most dimension contains the &lt;code&gt;fft_length / 2 + 1&lt;/code&gt; unique components of the DFT of a real-valued signal. If &lt;code&gt;fft_length&lt;/code&gt; is not provided, it is computed from the size of the inner-most 3 dimensions of &lt;code&gt;input&lt;/code&gt;. If the FFT length used to compute &lt;code&gt;input&lt;/code&gt; is odd, it should be provided since it cannot be inferred properly.</source>
          <target state="translated">&lt;code&gt;input&lt;/code&gt; 最も内側の3次元は、 &lt;code&gt;RFFT3D&lt;/code&gt; の結果であると想定されます。最も内側の次元には、実数値信号のDFTの &lt;code&gt;fft_length / 2 + 1&lt;/code&gt; 一意のコンポーネントが含まれます。 &lt;code&gt;fft_length&lt;/code&gt; が指定されていない場合は、 &lt;code&gt;input&lt;/code&gt; の最も内側の3次元のサイズから計算されます。 &lt;code&gt;input&lt;/code&gt; 計算に使用されるFFT長が奇数の場合、適切に推論できないため、それを指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="66227bf2a70d8c8a13c900791ef88cd485b7b62a" translate="yes" xml:space="preserve">
          <source>The inner-most dimension of &lt;code&gt;input&lt;/code&gt; is assumed to be the result of &lt;code&gt;RFFT&lt;/code&gt;: the &lt;code&gt;fft_length / 2 + 1&lt;/code&gt; unique components of the DFT of a real-valued signal. If &lt;code&gt;fft_length&lt;/code&gt; is not provided, it is computed from the size of the inner-most dimension of &lt;code&gt;input&lt;/code&gt; (&lt;code&gt;fft_length = 2 * (inner - 1)&lt;/code&gt;). If the FFT length used to compute &lt;code&gt;input&lt;/code&gt; is odd, it should be provided since it cannot be inferred properly.</source>
          <target state="translated">最も内側の寸法 &lt;code&gt;input&lt;/code&gt; の結果であると仮定される &lt;code&gt;RFFT&lt;/code&gt; ： &lt;code&gt;fft_length / 2 + 1&lt;/code&gt; の実数値信号のDFTのユニークな構成要素。場合 &lt;code&gt;fft_length&lt;/code&gt; が設けられておらず、それはの最も内側の寸法の大きさから算出される &lt;code&gt;input&lt;/code&gt; （ &lt;code&gt;fft_length = 2 * (inner - 1)&lt;/code&gt; ）。 &lt;code&gt;input&lt;/code&gt; 計算に使用されるFFT長が奇数の場合、適切に推論できないため、それを指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="bb19a900483721ea4e289126af04d4611c3ccdec" translate="yes" xml:space="preserve">
          <source>The innermost &lt;code&gt;values&lt;/code&gt; array for this ragged tensor value.</source>
          <target state="translated">この不規則なテンソル値の最も内側の &lt;code&gt;values&lt;/code&gt; 配列。</target>
        </trans-unit>
        <trans-unit id="be345c7ea127005969c68124a7827e30c5e6f496" translate="yes" xml:space="preserve">
          <source>The innermost &lt;code&gt;values&lt;/code&gt; tensor for this ragged tensor.</source>
          <target state="translated">この不規則なテンソルの最も内側の &lt;code&gt;values&lt;/code&gt; テンソル。</target>
        </trans-unit>
        <trans-unit id="8b90c8353eaabcd1c4389d292135b80ad60f5db5" translate="yes" xml:space="preserve">
          <source>The innermost dimension of &lt;code&gt;indices&lt;/code&gt; (with length &lt;code&gt;K&lt;/code&gt;) corresponds to indices into elements (if &lt;code&gt;K = P&lt;/code&gt;) or &lt;code&gt;(P-K)&lt;/code&gt;-dimensional slices (if &lt;code&gt;K &amp;lt; P&lt;/code&gt;) along the &lt;code&gt;K&lt;/code&gt;th dimension of &lt;code&gt;input&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;indices&lt;/code&gt; の最も内側の次元（長さ &lt;code&gt;K&lt;/code&gt; ）は、 &lt;code&gt;input&lt;/code&gt; &lt;code&gt;K&lt;/code&gt; 番目の次元に沿った要素（ &lt;code&gt;K = P&lt;/code&gt; 場合）または &lt;code&gt;(P-K)&lt;/code&gt; 次元のスライス（ &lt;code&gt;K &amp;lt; P&lt;/code&gt; 場合）へのインデックスに対応します。</target>
        </trans-unit>
        <trans-unit id="f25a7f282e145204d03b73aafeaa7a9ae16b013a" translate="yes" xml:space="preserve">
          <source>The innermost dimension of &lt;code&gt;indices&lt;/code&gt; (with length &lt;code&gt;K&lt;/code&gt;) corresponds to indices into elements (if &lt;code&gt;K = P&lt;/code&gt;) or slices (if &lt;code&gt;K &amp;lt; P&lt;/code&gt;) along the &lt;code&gt;K&lt;/code&gt;th dimension of &lt;code&gt;ref&lt;/code&gt;.</source>
          <target state="translated">（長さ &lt;code&gt;K&lt;/code&gt; の） &lt;code&gt;indices&lt;/code&gt; の最も内側の次元は、 &lt;code&gt;ref&lt;/code&gt; の &lt;code&gt;K&lt;/code&gt; 番目の次元に沿った要素（ &lt;code&gt;K = P&lt;/code&gt; 場合）またはスライス（ &lt;code&gt;K &amp;lt; P&lt;/code&gt; 場合）へのインデックスに対応します。</target>
        </trans-unit>
        <trans-unit id="5e89d3b63e4cb6ebffdeb167da39f2e0f1f1c9d2" translate="yes" xml:space="preserve">
          <source>The innermost dimension of &lt;code&gt;indices&lt;/code&gt; (with length &lt;code&gt;K&lt;/code&gt;) corresponds to indices into elements (if &lt;code&gt;K = P&lt;/code&gt;) or slices (if &lt;code&gt;K &amp;lt; P&lt;/code&gt;) along the &lt;code&gt;K&lt;/code&gt;th dimension of self.</source>
          <target state="translated">（長さ &lt;code&gt;K&lt;/code&gt; の） &lt;code&gt;indices&lt;/code&gt; の最も内側の次元は、自己の &lt;code&gt;K&lt;/code&gt; 番目の次元に沿った要素（ &lt;code&gt;K = P&lt;/code&gt; 場合）またはスライス（ &lt;code&gt;K &amp;lt; P&lt;/code&gt; 場合）へのインデックスに対応します。</target>
        </trans-unit>
        <trans-unit id="9d4e204148af56a0113e634b28635c0d262a9319" translate="yes" xml:space="preserve">
          <source>The input &lt;code&gt;SparseTensor&lt;/code&gt; is represented via the tuple of inputs (&lt;code&gt;indices&lt;/code&gt;, &lt;code&gt;values&lt;/code&gt;, &lt;code&gt;dense_shape&lt;/code&gt;). The output &lt;code&gt;SparseTensor&lt;/code&gt; has the same &lt;code&gt;dense_shape&lt;/code&gt; but with indices &lt;code&gt;output_indices&lt;/code&gt; and values &lt;code&gt;output_values&lt;/code&gt;.</source>
          <target state="translated">入力 &lt;code&gt;SparseTensor&lt;/code&gt; は、入力のタプル（ &lt;code&gt;indices&lt;/code&gt; 、 &lt;code&gt;values&lt;/code&gt; 、 &lt;code&gt;dense_shape&lt;/code&gt; ）を介して表されます。出力 &lt;code&gt;SparseTensor&lt;/code&gt; のdense_shapeは同じ &lt;code&gt;dense_shape&lt;/code&gt; が、インデックス &lt;code&gt;output_indices&lt;/code&gt; と値 &lt;code&gt;output_values&lt;/code&gt; があります。</target>
        </trans-unit>
        <trans-unit id="7e7a91084b5b310e293a78ea32ab3d511383ccff" translate="yes" xml:space="preserve">
          <source>The input &lt;code&gt;SparseTensor&lt;/code&gt; must be in row-major order.</source>
          <target state="translated">入力 &lt;code&gt;SparseTensor&lt;/code&gt; は行優先順でなければなりません。</target>
        </trans-unit>
        <trans-unit id="369bf999e77085bb3dbcbb8c678bff357cac4ab0" translate="yes" xml:space="preserve">
          <source>The input &lt;code&gt;SparseTensor&lt;/code&gt; must have rank &lt;code&gt;R&lt;/code&gt; greater than 1, and the first dimension is treated as the minibatch dimension. Elements of the &lt;code&gt;SparseTensor&lt;/code&gt; must be sorted in increasing order of this first dimension. The stored &lt;code&gt;SparseTensor&lt;/code&gt; objects pointed to by each row of the output &lt;code&gt;sparse_handles&lt;/code&gt; will have rank &lt;code&gt;R-1&lt;/code&gt;.</source>
          <target state="translated">入力 &lt;code&gt;SparseTensor&lt;/code&gt; のランク &lt;code&gt;R&lt;/code&gt; は1より大きい必要があり、最初の次元はミニバッチ次元として扱われます。 &lt;code&gt;SparseTensor&lt;/code&gt; の要素は、この最初の次元の昇順で並べ替える必要があります。出力 &lt;code&gt;sparse_handles&lt;/code&gt; の各行が指す格納された &lt;code&gt;SparseTensor&lt;/code&gt; オブジェクトのランクは &lt;code&gt;R-1&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="559dc2e144980c6b2098537801cec29d9fedba3c" translate="yes" xml:space="preserve">
          <source>The input &lt;code&gt;SparseTensor&lt;/code&gt; objects' indices are assumed ordered in standard lexicographic order. If this is not the case, after this step run &lt;a href=&quot;../sparse/reorder&quot;&gt;&lt;code&gt;sparse.reorder&lt;/code&gt;&lt;/a&gt; to restore index ordering.</source>
          <target state="translated">入力 &lt;code&gt;SparseTensor&lt;/code&gt; オブジェクトのインデックスは、標準の辞書式順序で並べられていると想定されます。そうでない場合は、この手順の後で&lt;a href=&quot;../sparse/reorder&quot;&gt; &lt;code&gt;sparse.reorder&lt;/code&gt; &lt;/a&gt;を実行してインデックスの順序を復元します。</target>
        </trans-unit>
        <trans-unit id="e24902595b5bc86bf69741800b0bbd97af15f6bd" translate="yes" xml:space="preserve">
          <source>The input &lt;code&gt;SparseTensor&lt;/code&gt; objects' indices are assumed ordered in standard lexicographic order. If this is not the case, after this step run &lt;code&gt;SparseReorder&lt;/code&gt; to restore index ordering.</source>
          <target state="translated">入力 &lt;code&gt;SparseTensor&lt;/code&gt; オブジェクトのインデックスは、標準の辞書式順序で順序付けられていると見なされます。そうでない場合は、このステップの後で &lt;code&gt;SparseReorder&lt;/code&gt; を実行して、インデックスの順序を復元します。</target>
        </trans-unit>
        <trans-unit id="fbc5a9f23625ad51e259ef181b6a17732102c364" translate="yes" xml:space="preserve">
          <source>The input &lt;code&gt;SparseTensor&lt;/code&gt; objects' indices are assumed ordered in standard lexicographic order. If this is not the case, before this step run &lt;code&gt;SparseReorder&lt;/code&gt; to restore index ordering.</source>
          <target state="translated">入力 &lt;code&gt;SparseTensor&lt;/code&gt; オブジェクトのインデックスは、標準の辞書式順序で順序付けられていると見なされます。そうでない場合は、このステップの前に &lt;code&gt;SparseReorder&lt;/code&gt; を実行してインデックスの順序を復元します。</target>
        </trans-unit>
        <trans-unit id="76f573f126a945d7c18465e0384fd69d0f88a658" translate="yes" xml:space="preserve">
          <source>The input &lt;code&gt;SparseTensor&lt;/code&gt; with &lt;code&gt;N&lt;/code&gt; non-empty elements.</source>
          <target state="translated">&lt;code&gt;N&lt;/code&gt; 個の空でない要素を持つ入力 &lt;code&gt;SparseTensor&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f15580c2b04bab1dc867fb59f4c3b641b00ff298" translate="yes" xml:space="preserve">
          <source>The input &lt;code&gt;SparseTensor&lt;/code&gt;.</source>
          <target state="translated">入力 &lt;code&gt;SparseTensor&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b2c6d3c475df3ca344370164bdadaba77954ef82" translate="yes" xml:space="preserve">
          <source>The input &lt;code&gt;serialized_sparse&lt;/code&gt; must be a string matrix of shape &lt;code&gt;[N x 3]&lt;/code&gt; where &lt;code&gt;N&lt;/code&gt; is the minibatch size and the rows correspond to packed outputs of &lt;code&gt;SerializeSparse&lt;/code&gt;. The ranks of the original &lt;code&gt;SparseTensor&lt;/code&gt; objects must all match. When the final &lt;code&gt;SparseTensor&lt;/code&gt; is created, it has rank one higher than the ranks of the incoming &lt;code&gt;SparseTensor&lt;/code&gt; objects (they have been concatenated along a new row dimension).</source>
          <target state="translated">入力 &lt;code&gt;serialized_sparse&lt;/code&gt; は、形状 &lt;code&gt;[N x 3]&lt;/code&gt; の文字列行列である必要があります。ここで、 &lt;code&gt;N&lt;/code&gt; はミニバッチサイズであり、行は &lt;code&gt;SerializeSparse&lt;/code&gt; のパックされた出力に対応します。元の &lt;code&gt;SparseTensor&lt;/code&gt; オブジェクトのランクはすべて一致する必要があります。最終的な &lt;code&gt;SparseTensor&lt;/code&gt; が作成されると、着信 &lt;code&gt;SparseTensor&lt;/code&gt; オブジェクトのランクよりも1つ高いランクになります（新しい行の次元に沿って連結されています）。</target>
        </trans-unit>
        <trans-unit id="56bbf31df5c3f0a722000a2eadd2da99c153bf4d" translate="yes" xml:space="preserve">
          <source>The input &lt;code&gt;serialized_sparse&lt;/code&gt; must be a string matrix of shape &lt;code&gt;[N x 3]&lt;/code&gt; where &lt;code&gt;N&lt;/code&gt; is the minibatch size and the rows correspond to packed outputs of &lt;code&gt;serialize_sparse&lt;/code&gt;. The ranks of the original &lt;code&gt;SparseTensor&lt;/code&gt; objects must all match. When the final &lt;code&gt;SparseTensor&lt;/code&gt; is created, it has rank one higher than the ranks of the incoming &lt;code&gt;SparseTensor&lt;/code&gt; objects (they have been concatenated along a new row dimension).</source>
          <target state="translated">入力 &lt;code&gt;serialized_sparse&lt;/code&gt; は、形状 &lt;code&gt;[N x 3]&lt;/code&gt; の文字列行列でなければなりません。ここで、 &lt;code&gt;N&lt;/code&gt; はミニバッチサイズで、行は &lt;code&gt;serialize_sparse&lt;/code&gt; のパックされた出力に対応します。元の &lt;code&gt;SparseTensor&lt;/code&gt; オブジェクトのランクはすべて一致する必要があります。最終的な &lt;code&gt;SparseTensor&lt;/code&gt; が作成されると、受信した &lt;code&gt;SparseTensor&lt;/code&gt; オブジェクトのランクよりも1つ高くなります（新しい行次元に沿って連結されています）。</target>
        </trans-unit>
        <trans-unit id="1a26b3031ce9b2139c0f9a566a88efe37f0d9f15" translate="yes" xml:space="preserve">
          <source>The input &lt;code&gt;serialized_sparse&lt;/code&gt; must have the shape &lt;code&gt;[?, ?, ..., ?, 3]&lt;/code&gt; where the last dimension stores serialized &lt;code&gt;SparseTensor&lt;/code&gt; objects and the other N dimensions (N &amp;gt;= 0) correspond to a batch. The ranks of the original &lt;code&gt;SparseTensor&lt;/code&gt; objects must all match. When the final &lt;code&gt;SparseTensor&lt;/code&gt; is created, its rank is the rank of the incoming &lt;code&gt;SparseTensor&lt;/code&gt; objects plus N; the sparse tensors have been concatenated along new dimensions, one for each batch.</source>
          <target state="translated">入力 &lt;code&gt;serialized_sparse&lt;/code&gt; は、形状 &lt;code&gt;[?, ?, ..., ?, 3]&lt;/code&gt; である必要があります。ここで、最後の次元はシリアル化された &lt;code&gt;SparseTensor&lt;/code&gt; オブジェクトを格納し、他のN次元（N&amp;gt; = 0）はバッチに対応します。元の &lt;code&gt;SparseTensor&lt;/code&gt; オブジェクトのランクはすべて一致する必要があります。最終的な &lt;code&gt;SparseTensor&lt;/code&gt; が作成されると、そのランクは着信 &lt;code&gt;SparseTensor&lt;/code&gt; オブジェクトのランクにNを加えたものになります。スパーステンソルは、バッチごとに1つずつ、新しい次元に沿って連結されています。</target>
        </trans-unit>
        <trans-unit id="0acda681393d7c0ea437e5f7eb4637e2f5dc3c0f" translate="yes" xml:space="preserve">
          <source>The input &lt;code&gt;sparse_handles&lt;/code&gt; must be an &lt;code&gt;int64&lt;/code&gt; matrix of shape &lt;code&gt;[N, 1]&lt;/code&gt; where &lt;code&gt;N&lt;/code&gt; is the minibatch size and the rows correspond to the output handles of &lt;code&gt;AddSparseToTensorsMap&lt;/code&gt; or &lt;code&gt;AddManySparseToTensorsMap&lt;/code&gt;. The ranks of the original &lt;code&gt;SparseTensor&lt;/code&gt; objects that went into the given input ops must all match. When the final &lt;code&gt;SparseTensor&lt;/code&gt; is created, it has rank one higher than the ranks of the incoming &lt;code&gt;SparseTensor&lt;/code&gt; objects (they have been concatenated along a new row dimension on the left).</source>
          <target state="translated">入力 &lt;code&gt;sparse_handles&lt;/code&gt; は、形状 &lt;code&gt;[N, 1]&lt;/code&gt; &lt;code&gt;int64&lt;/code&gt; 行列である必要があります。ここで、 &lt;code&gt;N&lt;/code&gt; はミニバッチサイズであり、行は &lt;code&gt;AddSparseToTensorsMap&lt;/code&gt; または &lt;code&gt;AddManySparseToTensorsMap&lt;/code&gt; の出力ハンドルに対応します。指定された入力操作に入った元の &lt;code&gt;SparseTensor&lt;/code&gt; オブジェクトのランクはすべて一致する必要があります。最終的な &lt;code&gt;SparseTensor&lt;/code&gt; が作成されると、着信 &lt;code&gt;SparseTensor&lt;/code&gt; オブジェクトのランクよりも1つ高いランクになります（左側の新しい行ディメンションに沿って連結されています）。</target>
        </trans-unit>
        <trans-unit id="6797d5a30fe0809d6c99b3fe7233e4388f788d3d" translate="yes" xml:space="preserve">
          <source>The input &lt;code&gt;tags&lt;/code&gt; and &lt;code&gt;values&lt;/code&gt; must have the same shape. The generated summary has a summary value for each tag-value pair in &lt;code&gt;tags&lt;/code&gt; and &lt;code&gt;values&lt;/code&gt;.</source>
          <target state="translated">入力 &lt;code&gt;tags&lt;/code&gt; と &lt;code&gt;values&lt;/code&gt; は同じ形状である必要があります。生成されたサマリーには、 &lt;code&gt;tags&lt;/code&gt; と &lt;code&gt;values&lt;/code&gt; 各タグと値のペアのサマリー値が含まれます。</target>
        </trans-unit>
        <trans-unit id="d39dc101c55542dec858072079860af67df42d8f" translate="yes" xml:space="preserve">
          <source>The input can be supplied in various formats: &lt;code&gt;matrix&lt;/code&gt;, &lt;code&gt;sequence&lt;/code&gt; and &lt;code&gt;compact&lt;/code&gt;, specified by the &lt;code&gt;diagonals_format&lt;/code&gt; arg.</source>
          <target state="translated">：入力は、様々なフォーマットで供給することができる &lt;code&gt;matrix&lt;/code&gt; 、 &lt;code&gt;sequence&lt;/code&gt; 及び &lt;code&gt;compact&lt;/code&gt; で指定された、 &lt;code&gt;diagonals_format&lt;/code&gt; の引数。</target>
        </trans-unit>
        <trans-unit id="2d48efdb90f50c04e629b26b90744cae3caa313b" translate="yes" xml:space="preserve">
          <source>The input cannot be converted to a tensor, or the specified axis cannot be squeezed.</source>
          <target state="translated">入力をテンソルに変換できなかったり、指定した軸を絞ることができなかったりします。</target>
        </trans-unit>
        <trans-unit id="7a3aea890ab7c25d251475a5c0c175df4fead28f" translate="yes" xml:space="preserve">
          <source>The input data can be padded on both the start and end of the sequence, if desired, using the &lt;code&gt;pad_values&lt;/code&gt; argument. If set, &lt;code&gt;pad_values&lt;/code&gt; should contain either a tuple of strings or a single string; the 0th element of the tuple will be used to pad the left side of the sequence and the 1st element of the tuple will be used to pad the right side of the sequence. The &lt;code&gt;padding_width&lt;/code&gt; arg controls how many padding values are added to each side; it defaults to &lt;code&gt;ngram_width-1&lt;/code&gt;.</source>
          <target state="translated">必要に応じて、 &lt;code&gt;pad_values&lt;/code&gt; 引数を使用して、シーケンスの開始と終了の両方で入力データを埋め込むことができます。設定する場合、 &lt;code&gt;pad_values&lt;/code&gt; には文字列のタプルまたは単一の文字列のいずれかを含める必要があります。タプルの0番目の要素はシーケンスの左側にパディングするために使用され、タプルの1番目の要素はシーケンスの右側にパディングするために使用されます。 &lt;code&gt;padding_width&lt;/code&gt; 多くのパディング値は、各側に追加する方法のargコントロール; デフォルトは &lt;code&gt;ngram_width-1&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="04197da47b84221763ac70ad3af1dee562c7d6bb" translate="yes" xml:space="preserve">
          <source>The input function is not a valid one.</source>
          <target state="translated">入力関数が有効なものではありません。</target>
        </trans-unit>
        <trans-unit id="3483a88e5028197c2c707cc3c8c51e5ba5c5cc43" translate="yes" xml:space="preserve">
          <source>The input has to be invertible.</source>
          <target state="translated">入力は反転可能でなければなりません。</target>
        </trans-unit>
        <trans-unit id="6cb547f4554af98d950886c485fb31114efae486" translate="yes" xml:space="preserve">
          <source>The input has to be symmetric and positive definite. Only the lower-triangular part of the input will be used for this operation. The upper-triangular part will not be read.</source>
          <target state="translated">入力は対称で正定値でなければなりません。この操作には入力の下三角部分のみが使用されます。上三角部分は読み込まれません。</target>
        </trans-unit>
        <trans-unit id="d751c1504cdeea4fe2c77555b81110d615e4802e" translate="yes" xml:space="preserve">
          <source>The input image is considered in the RGB colorspace. Conceptually, the RGB colors are first mapped into HSV. A delta is then applied all the hue values, and then remapped back to RGB colorspace.</source>
          <target state="translated">入力画像は RGB 色空間で考慮されます.概念的には、RGB 色は最初に HSV にマップされます。その後、すべての色相値にデルタが適用され、RGB 色空間にマップされます。</target>
        </trans-unit>
        <trans-unit id="6a0a6cfeac0c5da1f89ebf29a1c3a1974b9f86fa" translate="yes" xml:space="preserve">
          <source>The input image is considered in the RGB colorspace. Conceptually, the RGB colors are first mapped into HSV. A scale is then applied all the saturation values, and then remapped back to RGB colorspace.</source>
          <target state="translated">入力画像は RGB 色空間で考慮されます.概念的には、RGB 色は最初に HSV にマップされます。次にすべての彩度値にスケールが適用され、RGB 色空間にマップされます。</target>
        </trans-unit>
        <trans-unit id="9ab6f7a1383accb84e03cfc01fbf2de71cc3ce58" translate="yes" xml:space="preserve">
          <source>The input is a string tensor of any shape. The output is a string tensor of the same shape containing the transcoded strings. Output strings are always valid unicode. If the input contains invalid encoding positions, the &lt;code&gt;errors&lt;/code&gt; attribute sets the policy for how to deal with them. If the default error-handling policy is used, invalid formatting will be substituted in the output by the &lt;code&gt;replacement_char&lt;/code&gt;. If the errors policy is to &lt;code&gt;ignore&lt;/code&gt;, any invalid encoding positions in the input are skipped and not included in the output. If it set to &lt;code&gt;strict&lt;/code&gt; then any invalid formatting will result in an InvalidArgument error.</source>
          <target state="translated">入力は、任意の形状の文字列テンソルです。出力は、トランスコードされた文字列を含む同じ形状の文字列テンソルです。出力文字列は常に有効なUnicodeです。入力に無効なエンコード位置が含まれている場合、 &lt;code&gt;errors&lt;/code&gt; 属性はそれらを処理する方法のポリシーを設定します。デフォルトのエラー処理ポリシーが使用されている場合、無効なフォーマットは、 &lt;code&gt;replacement_char&lt;/code&gt; によって出力で置き換えられます。エラーポリシーが &lt;code&gt;ignore&lt;/code&gt; である場合、入力内の無効なエンコード位置はスキップされ、出力には含まれません。 &lt;code&gt;strict&lt;/code&gt; に設定した場合、無効なフォーマットはInvalidArgumentエラーになります。</target>
        </trans-unit>
        <trans-unit id="f41ed33e18d35e0df944af43170682bbfbe88dab" translate="yes" xml:space="preserve">
          <source>The input is a string tensor of any shape. The pattern is a scalar string tensor which is applied to every element of the input tensor. The boolean values (True or False) of the output tensor indicate if the input matches the regex pattern provided.</source>
          <target state="translated">入力は任意の形状の文字列テンソルです。パターンは,入力テンソルの各要素に適用されるスカラー文字列テンソルです.出力テンソルのブール値(TrueまたはFalse)は、入力が提供された正規表現パターンと一致するかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="f8ccdd5a5cb3af5106d6fe3c083e5d2def727b0e" translate="yes" xml:space="preserve">
          <source>The input is a string tensor of any shape. The pattern is the regular expression to be matched with every element of the input tensor. The boolean values (True or False) of the output tensor indicate if the input matches the regex pattern provided.</source>
          <target state="translated">入力は任意の形状の文字列テンソルです。パターンは入力テンソルの各要素にマッチする正規表現です。出力テンソルのブール値(TrueまたはFalse)は、入力が提供された正規表現パターンにマッチするかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="4ef8ae1c6e33447e6640de2cbf18a9aca428cda0" translate="yes" xml:space="preserve">
          <source>The input is a tensor of shape &lt;code&gt;[..., M, M]&lt;/code&gt; whose inner-most 2 dimensions form square matrices, with the same constraints as the single matrix SelfAdjointEig.</source>
          <target state="translated">入力は形状 &lt;code&gt;[..., M, M]&lt;/code&gt; テンソルであり、その最も内側の2次元は正方行列を形成し、単一行列SelfAdjointEigと同じ制約があります。</target>
        </trans-unit>
        <trans-unit id="a49b12f6890eee0fa5006296181dd36a3c0eae12" translate="yes" xml:space="preserve">
          <source>The input is a tensor of shape &lt;code&gt;[..., M, M]&lt;/code&gt; whose inner-most 2 dimensions form square matrices.</source>
          <target state="translated">入力は、最も内側の2次元が正方行列を形成する形状 &lt;code&gt;[..., M, M]&lt;/code&gt; テンソルです。</target>
        </trans-unit>
        <trans-unit id="4a95ccad7688f828b4538240858954215386b157" translate="yes" xml:space="preserve">
          <source>The input is a tensor of shape &lt;code&gt;[..., M, M]&lt;/code&gt; whose inner-most 2 dimensions form square matrices. The output is a tensor containing the determinants for all input submatrices &lt;code&gt;[..., :, :]&lt;/code&gt;.</source>
          <target state="translated">入力は、最も内側の2次元が正方行列を形成する形状 &lt;code&gt;[..., M, M]&lt;/code&gt; テンソルです。出力は、すべての入力部分行列 &lt;code&gt;[..., :, :]&lt;/code&gt; 行列式を含むテンソルです。</target>
        </trans-unit>
        <trans-unit id="bb52980da5474b532e1e714b4de037ffa27b4127" translate="yes" xml:space="preserve">
          <source>The input is a tensor of shape &lt;code&gt;[..., M, M]&lt;/code&gt; whose inner-most 2 dimensions form square matrices. The output is a tensor of the same shape as the input containing the exponential for all input submatrices &lt;code&gt;[..., :, :]&lt;/code&gt;.</source>
          <target state="translated">入力は、最も内側の2次元が正方行列を形成する形状 &lt;code&gt;[..., M, M]&lt;/code&gt; テンソルです。出力は、すべての入力部分行列 &lt;code&gt;[..., :, :]&lt;/code&gt; の指数を含む入力と同じ形状のテンソルです。</target>
        </trans-unit>
        <trans-unit id="72c07ff69dfab5a23cee03f8eae86a2093c70b45" translate="yes" xml:space="preserve">
          <source>The input is a tensor of shape &lt;code&gt;[..., M, M]&lt;/code&gt; whose inner-most 2 dimensions form square matrices. The output is a tensor of the same shape as the input containing the inverse for all input submatrices &lt;code&gt;[..., :, :]&lt;/code&gt;.</source>
          <target state="translated">入力は、最も内側の2次元が正方行列を形成する形状 &lt;code&gt;[..., M, M]&lt;/code&gt; テンソルです。出力は、すべての入力部分行列 &lt;code&gt;[..., :, :]&lt;/code&gt; の逆行列を含む入力と同じ形状のテンソルです。</target>
        </trans-unit>
        <trans-unit id="f84ae4c58a555dd2a241282a825d52ffb2a896e6" translate="yes" xml:space="preserve">
          <source>The input is a tensor of shape &lt;code&gt;[..., M, M]&lt;/code&gt; whose inner-most 2 dimensions form square matrices. The output is a tensor of the same shape as the input containing the matrix square root for all input submatrices &lt;code&gt;[..., :, :]&lt;/code&gt;.</source>
          <target state="translated">入力は、最も内側の2次元が正方行列を形成する形状 &lt;code&gt;[..., M, M]&lt;/code&gt; テンソルです。出力は、すべての入力サブ行列 &lt;code&gt;[..., :, :]&lt;/code&gt; 行列平方根を含む入力と同じ形状のテンソルです。</target>
        </trans-unit>
        <trans-unit id="a47976575bd700d1896c1a9ad76ef8970d05df43" translate="yes" xml:space="preserve">
          <source>The input is a tensor of shape &lt;code&gt;[N, M, M]&lt;/code&gt; whose inner-most 2 dimensions form square matrices. The outputs are two tensors containing the signs and absolute values of the log determinants for all N input submatrices &lt;code&gt;[..., :, :]&lt;/code&gt; such that the determinant = sign&lt;em&gt;exp(log_abs_determinant). The log_abs_determinant is computed as det(P)&lt;/em&gt;sum(log(diag(LU))) where LU is the LU decomposition of the input and P is the corresponding permutation matrix.</source>
          <target state="translated">入力は形状 &lt;code&gt;[N, M, M]&lt;/code&gt; テンソルであり、その最も内側の2次元は正方行列を形成します。出力は、N個のすべての入力部分行列 &lt;code&gt;[..., :, :]&lt;/code&gt; の対数行列式の符号と絶対値を含む2つのテンソルであり、行列式= sign &lt;em&gt;exp（log_abs_determinant）となります。log_abs_determinantはdet（P）&lt;/em&gt; sum（log（diag（LU）））&lt;em&gt;として計算され&lt;/em&gt;ます。ここで、LUは入力のLU分解で、Pは対応する置換行列です。</target>
        </trans-unit>
        <trans-unit id="16509370e9a14e359dbc8b8062b8734116aafda6" translate="yes" xml:space="preserve">
          <source>The input matrix should be invertible. If the input matrix is real, it should have no eigenvalues which are real and negative (pairs of complex conjugate eigenvalues are allowed).</source>
          <target state="translated">入力行列は,反転可能でなければならない.入力行列が実数の場合,実数で負の固有値を持たないこと(複素共役固有値のペアが許される).</target>
        </trans-unit>
        <trans-unit id="b4fb5738c7b407c21bcad2cacc1ef5ec4dff9b6d" translate="yes" xml:space="preserve">
          <source>The input must be at least a matrix.</source>
          <target state="translated">入力は少なくとも行列でなければなりません。</target>
        </trans-unit>
        <trans-unit id="3c4f7bbe843d34cb236ccedebe4df570c214e3da" translate="yes" xml:space="preserve">
          <source>The input pipeline checkpoint may be large, if there are large shuffle or prefetch buffers for instance, and may bloat the checkpoint size.</source>
          <target state="translated">入力パイプラインのチェックポイントは、例えば大きなシャッフルバッファやプリフェッチバッファがある場合、チェックポイントのサイズが肥大化する可能性があります。</target>
        </trans-unit>
        <trans-unit id="deff7be907795c0056b42668a7693ec0a82247dc" translate="yes" xml:space="preserve">
          <source>The input pixels values are scaled between 0 and 1 and each channel is normalized with respect to the ImageNet dataset.</source>
          <target state="translated">入力ピクセル値は0と1の間でスケーリングされ、各チャンネルはImageNetデータセットを基準に正規化される。</target>
        </trans-unit>
        <trans-unit id="1771ed960e007f08f6b91d9fc4bf87f366612095" translate="yes" xml:space="preserve">
          <source>The input rank &lt;code&gt;R&lt;/code&gt;&lt;code&gt;SparseTensor&lt;/code&gt;.</source>
          <target state="translated">入力ランク &lt;code&gt;R&lt;/code&gt; &lt;code&gt;SparseTensor&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0bf2cfde9a379c9cc0a2626ec6eaa414e577c963" translate="yes" xml:space="preserve">
          <source>The input samples are processed batch by batch.</source>
          <target state="translated">入力されたサンプルは、バッチ単位で処理されます。</target>
        </trans-unit>
        <trans-unit id="db9e617ad287d3e54cdcc5d77f3a84dc0ecefefc" translate="yes" xml:space="preserve">
          <source>The input should be at least 3D, and the dimension of index one will be considered to be the temporal dimension.</source>
          <target state="translated">入力は少なくとも3次元であることが必要であり、インデックス1の次元を時間的次元とみなす。</target>
        </trans-unit>
        <trans-unit id="4a7245281a652bfbac8628bc44c29674340d8332" translate="yes" xml:space="preserve">
          <source>The input signature of &lt;code&gt;map_func&lt;/code&gt; is determined by the structure of each element in this dataset.</source>
          <target state="translated">の入力署名 &lt;code&gt;map_func&lt;/code&gt; 、このデータセットの各要素の構造によって決まります。</target>
        </trans-unit>
        <trans-unit id="d2a30b4754eaaadad621a00ac65ed1446d4c24f6" translate="yes" xml:space="preserve">
          <source>The input sparse matrix and the fill-in reducing permutation &lt;code&gt;permutation&lt;/code&gt; must have compatible shapes. If the sparse matrix has rank 3; with the batch dimension &lt;code&gt;B&lt;/code&gt;, then the &lt;code&gt;permutation&lt;/code&gt; must be of rank 2; with the same batch dimension &lt;code&gt;B&lt;/code&gt;. There is no support for broadcasting.</source>
          <target state="translated">入力スパース行列とフィルイン削減順列 &lt;code&gt;permutation&lt;/code&gt; は、互換性のある形状である必要があります。スパース行列のランクが3の場合。バッチ次元 &lt;code&gt;B&lt;/code&gt; の場合、 &lt;code&gt;permutation&lt;/code&gt; はランク2でなければなりません。同じバッチ寸法 &lt;code&gt;B&lt;/code&gt; を使用します。放送はサポートしていません。</target>
        </trans-unit>
        <trans-unit id="42875650119a49af17e9b194c7f7044943508dd9" translate="yes" xml:space="preserve">
          <source>The input sparse matrix may have rank 2 or rank 3. The output Tensor, representing would then have rank 1 or 2 respectively, with the same batch shape as the input.</source>
          <target state="translated">入力の疎な行列は,ランク2またはランク3を有することがある.そして,出力テンソルは,入力と同じバッチ形状で,それぞれランク1または2を持つことになります.</target>
        </trans-unit>
        <trans-unit id="1a4202e509f04a4e2e240929b7033cbd28325042" translate="yes" xml:space="preserve">
          <source>The input tensor (potentially converted to a &lt;code&gt;Tensor&lt;/code&gt;).</source>
          <target state="translated">入力テンソル（に変換される可能性があります &lt;code&gt;Tensor&lt;/code&gt; に）。</target>
        </trans-unit>
        <trans-unit id="f1339cf26956739f44025e7d445e29017a72d735" translate="yes" xml:space="preserve">
          <source>The input tensor can now be quantized by clipping values to the range &lt;code&gt;min_range&lt;/code&gt; to &lt;code&gt;max_range&lt;/code&gt;, then multiplying by scale_factor as follows:</source>
          <target state="translated">入力テンソルは、 &lt;code&gt;min_range&lt;/code&gt; から &lt;code&gt;max_range&lt;/code&gt; 、次に次のようにscale_factorを乗算するます。</target>
        </trans-unit>
        <trans-unit id="d3b2781a0d53ff2a6f99fd5cbdcd70a0377dfcba" translate="yes" xml:space="preserve">
          <source>The input tensor whose shape will be used to generate dropout mask.</source>
          <target state="translated">ドロップアウトマスクを生成するために形状が使用される入力テンソル。</target>
        </trans-unit>
        <trans-unit id="de4692e0721f2fcc2ac3eb25677f89cdae882775" translate="yes" xml:space="preserve">
          <source>The input tensor's height and width must be divisible by block_size.</source>
          <target state="translated">入力テンソルの高さと幅は block_size で割れる必要があります。</target>
        </trans-unit>
        <trans-unit id="549cec4325e7bdb0f314e4738e2091614fdd06cc" translate="yes" xml:space="preserve">
          <source>The input tensor.</source>
          <target state="translated">入力テンソルです。</target>
        </trans-unit>
        <trans-unit id="8bd030040de18dc6a388054f2ae79e10c262d194" translate="yes" xml:space="preserve">
          <source>The input tensors &lt;code&gt;real&lt;/code&gt; and &lt;code&gt;imag&lt;/code&gt; must have the same shape.</source>
          <target state="translated">入力テンソルは &lt;code&gt;real&lt;/code&gt; および &lt;code&gt;imag&lt;/code&gt; は同じ形状でなければなりません。</target>
        </trans-unit>
        <trans-unit id="aa6b1cb251ad12bc98e4df6e1fe21cc0d8438940" translate="yes" xml:space="preserve">
          <source>The input tensors &lt;code&gt;starts&lt;/code&gt;, &lt;code&gt;limits&lt;/code&gt;, and &lt;code&gt;deltas&lt;/code&gt; may be scalars or vectors. The vector inputs must all have the same size. Scalar inputs are broadcast to match the size of the vector inputs.</source>
          <target state="translated">入力テンソル &lt;code&gt;starts&lt;/code&gt; 、開始、 &lt;code&gt;limits&lt;/code&gt; 、および &lt;code&gt;deltas&lt;/code&gt; は、スカラーまたはベクトルです。ベクトル入力はすべて同じサイズでなければなりません。スカラー入力は、ベクトル入力のサイズと一致するようにブロードキャストされます。</target>
        </trans-unit>
        <trans-unit id="b8ff1df3e5bbb4197a5fcf6ebfa2ea96c023b0d7" translate="yes" xml:space="preserve">
          <source>The input tensors &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are 2-D or higher with shape &lt;code&gt;[..., r_x, c_x]&lt;/code&gt; and &lt;code&gt;[..., r_y, c_y]&lt;/code&gt;.</source>
          <target state="translated">入力テンソル &lt;code&gt;x&lt;/code&gt; および &lt;code&gt;y&lt;/code&gt; は、形状 &lt;code&gt;[..., r_x, c_x]&lt;/code&gt; および &lt;code&gt;[..., r_y, c_y]&lt;/code&gt; 2次元以上です。</target>
        </trans-unit>
        <trans-unit id="ff60fbd9db5f41897771ca434c8e26b7b8f91862" translate="yes" xml:space="preserve">
          <source>The input tensors are all required to have size 1 in the first dimension.</source>
          <target state="translated">入力テンソルはすべて第1次元のサイズが1であることが要求されます。</target>
        </trans-unit>
        <trans-unit id="d661f6ceb58229bddc491bc4e8ad81a91a05cfb1" translate="yes" xml:space="preserve">
          <source>The input tensors must have &lt;code&gt;rank=2&lt;/code&gt;, and must all have the same number of rows. The result is a &lt;code&gt;RaggedTensor&lt;/code&gt; with the same number of rows as the inputs, where &lt;code&gt;result[row]&lt;/code&gt; contains a list of all combinations of values formed by taking a single value from each input's corresponding row (&lt;code&gt;inputs[i][row]&lt;/code&gt;). Values are combined by hashing together their fingerprints. E.g.:</source>
          <target state="translated">入力テンソルは &lt;code&gt;rank=2&lt;/code&gt; である必要があり、すべて同じ行数である必要があります。結果は、 &lt;code&gt;RaggedTensor&lt;/code&gt; と同じ行数のRaggedTensorです。ここで、 &lt;code&gt;result[row]&lt;/code&gt; は、各入力の対応する行（ &lt;code&gt;inputs[i][row]&lt;/code&gt; ）から単一の値を取得することによって形成される値のすべての組み合わせのリストが含まれます。値は、フィンガープリントをハッシュすることによって結合されます。例えば：</target>
        </trans-unit>
        <trans-unit id="3f325df8aa80a521b9173906f05b6c3d477009cc" translate="yes" xml:space="preserve">
          <source>The input tensors must have &lt;code&gt;rank=2&lt;/code&gt;, and must all have the same number of rows. The result is a &lt;code&gt;RaggedTensor&lt;/code&gt; with the same number of rows as the inputs, where &lt;code&gt;result[row]&lt;/code&gt; contains a list of all combinations of values formed by taking a single value from each input's corresponding row (&lt;code&gt;inputs[i][row]&lt;/code&gt;). Values are combined by joining their strings with '&lt;em&gt;X&lt;/em&gt;'. E.g.:</source>
          <target state="translated">入力テンソルは &lt;code&gt;rank=2&lt;/code&gt; である必要があり、すべて同じ行数である必要があります。結果は、 &lt;code&gt;RaggedTensor&lt;/code&gt; と同じ行数のRaggedTensorです。ここで、 &lt;code&gt;result[row]&lt;/code&gt; は、各入力の対応する行（ &lt;code&gt;inputs[i][row]&lt;/code&gt; ）から単一の値を取得することによって形成される値のすべての組み合わせのリストが含まれます。値は、文字列を「&lt;em&gt;X&lt;/em&gt;」で結合することによって結合されます。例えば：</target>
        </trans-unit>
        <trans-unit id="dc0e2ea8ed20f6c76d70887002fa098e766f9ed8" translate="yes" xml:space="preserve">
          <source>The input values in are the log-odds of the resulting probability.</source>
          <target state="translated">の入力値は,結果として得られる確率の対数オッズである.</target>
        </trans-unit>
        <trans-unit id="b1846b54df868865021ca6028d9ca189f0c062b0" translate="yes" xml:space="preserve">
          <source>The input(s) of the model: a &lt;a href=&quot;input&quot;&gt;&lt;code&gt;keras.Input&lt;/code&gt;&lt;/a&gt; object or list of &lt;a href=&quot;input&quot;&gt;&lt;code&gt;keras.Input&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">モデルの入力（S）：&lt;a href=&quot;input&quot;&gt; &lt;code&gt;keras.Input&lt;/code&gt; の&lt;/a&gt;オブジェクトまたはリスト&lt;a href=&quot;input&quot;&gt; &lt;code&gt;keras.Input&lt;/code&gt; の&lt;/a&gt;オブジェクト。</target>
        </trans-unit>
        <trans-unit id="c7b5b4e0f6e030ce553913f501525ac473f64915" translate="yes" xml:space="preserve">
          <source>The input, unmodified.</source>
          <target state="translated">変更されていない入力。</target>
        </trans-unit>
        <trans-unit id="d39bc5c493315c0c2bb73635f284f6d3773b3fe6" translate="yes" xml:space="preserve">
          <source>The inputs and arguments of these functions both use an instance of the class so they can have independent numbering.</source>
          <target state="translated">これらの関数の入力と引数は、どちらもクラスのインスタンスを使用するので、独立した番号を持つことができます。</target>
        </trans-unit>
        <trans-unit id="d0798e60c9a60a309c2780811ed22bf523e44034" translate="yes" xml:space="preserve">
          <source>The inputs are quantized tensors where the lowest value represents the real number of the associated minimum, and the highest represents the maximum. This means that you can only interpret the quantized output in the same way, by taking the returned minimum and maximum values into account.</source>
          <target state="translated">入力は量子化されたテンソルで、最小値は関連する最小値の実数を表し、最大値は最大値を表します。つまり、返された最小値と最大値を考慮して、量子化された出力を同じように解釈することしかできません。</target>
        </trans-unit>
        <trans-unit id="7d5491d4d1fe59ff0b726933e4fd0f37e6b34849" translate="yes" xml:space="preserve">
          <source>The inputs are variable-length sequences provided by SparseTensors (hypothesis_indices, hypothesis_values, hypothesis_shape) and (truth_indices, truth_values, truth_shape).</source>
          <target state="translated">入力は SparseTensors によって提供される可変長の配列(hypothesis_indices,hypothesis_values,hypothesis_shape)と(truth_indices,truth_values,truth_shape)です。</target>
        </trans-unit>
        <trans-unit id="9b2d715db408ed4c68b80c58649420f90265275e" translate="yes" xml:space="preserve">
          <source>The inputs are:</source>
          <target state="translated">入力は</target>
        </trans-unit>
        <trans-unit id="5487c5634d45a531fcdfa8c1d83dcdf3f48a363d" translate="yes" xml:space="preserve">
          <source>The inputs must be two-dimensional matrices and 1D bias vector. And the inner dimension of &lt;code&gt;a&lt;/code&gt; (after being transposed if &lt;code&gt;transpose_a&lt;/code&gt; is non-zero) must match the outer dimension of &lt;code&gt;b&lt;/code&gt; (after being transposed if &lt;code&gt;transposed_b&lt;/code&gt; is non-zero). Then do broadcast add operation with bias values on the matrix multiplication result. The bias size must match inner dimension of &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">入力は、2次元行列と1Dバイアスベクトルである必要があります。また、 &lt;code&gt;a&lt;/code&gt; の内側の次元（ &lt;code&gt;transpose_a&lt;/code&gt; がゼロ以外の場合に転置された後）は、 &lt;code&gt;b&lt;/code&gt; の外側の次元（ &lt;code&gt;transposed_b&lt;/code&gt; がゼロ以外の場合に転置された後）と一致する必要があります。次に、行列の乗算結果にバイアス値を使用してブロードキャスト加算演算を実行します。バイアスサイズは &lt;code&gt;b&lt;/code&gt; の内部寸法と一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="2314b3685b224ccc966442df5d3a609d47564351" translate="yes" xml:space="preserve">
          <source>The inputs must be two-dimensional matrices and 1D bias vector. And the inner dimension of &lt;code&gt;a&lt;/code&gt; (after being transposed if &lt;code&gt;transpose_a&lt;/code&gt; is non-zero) must match the outer dimension of &lt;code&gt;b&lt;/code&gt; (after being transposed if &lt;code&gt;transposed_b&lt;/code&gt; is non-zero). Then do broadcast add operation with bias values on the matrix multiplication result. The bias size must match inner dimension of &lt;code&gt;b&lt;/code&gt;. Then do relu activation to get non-negative result.</source>
          <target state="translated">入力は、2次元行列と1Dバイアスベクトルである必要があります。また、 &lt;code&gt;a&lt;/code&gt; の内側の次元（ &lt;code&gt;transpose_a&lt;/code&gt; がゼロ以外の場合に転置された後）は、 &lt;code&gt;b&lt;/code&gt; の外側の次元（ &lt;code&gt;transposed_b&lt;/code&gt; がゼロ以外の場合に転置された後）と一致する必要があります。次に、行列の乗算結果にバイアス値を使用してブロードキャスト加算演算を実行します。バイアスサイズは &lt;code&gt;b&lt;/code&gt; の内部寸法と一致する必要があります。次に、reluアクティベーションを実行して、非負の結果を取得します。</target>
        </trans-unit>
        <trans-unit id="e61d8b21ec9285bc0e40af26ba2ce90301743e71" translate="yes" xml:space="preserve">
          <source>The inputs must be two-dimensional matrices and 1D bias vector. And the inner dimension of &lt;code&gt;a&lt;/code&gt; (after being transposed if &lt;code&gt;transpose_a&lt;/code&gt; is non-zero) must match the outer dimension of &lt;code&gt;b&lt;/code&gt; (after being transposed if &lt;code&gt;transposed_b&lt;/code&gt; is non-zero). Then do broadcast add operation with bias values on the matrix multiplication result. The bias size must match inner dimension of &lt;code&gt;b&lt;/code&gt;. Then do relu activation to get non-negative result. Then do requantize operation to get final uint8 result.</source>
          <target state="translated">入力は、2次元行列と1Dバイアスベクトルである必要があります。また、 &lt;code&gt;a&lt;/code&gt; の内側の次元（ &lt;code&gt;transpose_a&lt;/code&gt; がゼロ以外の場合に転置された後）は、 &lt;code&gt;b&lt;/code&gt; の外側の次元（ &lt;code&gt;transposed_b&lt;/code&gt; がゼロ以外の場合に転置された後）と一致する必要があります。次に、行列の乗算結果にバイアス値を使用してブロードキャスト加算演算を実行します。バイアスサイズは &lt;code&gt;b&lt;/code&gt; の内部寸法と一致する必要があります。次に、reluアクティベーションを実行して、非負の結果を取得します。次に、操作を再量子化して、最終的なuint8の結果を取得します。</target>
        </trans-unit>
        <trans-unit id="bd731653b58f2631c265c170d9e7475175fa31c7" translate="yes" xml:space="preserve">
          <source>The inputs must be two-dimensional matrices and the inner dimension of &quot;a&quot; (after being transposed if transpose_a is true) must match the outer dimension of &quot;b&quot; (after being transposed if transposed_b is true).</source>
          <target state="translated">入力は2次元の行列でなければならず,&quot;a &quot;の内次元(transpose_aが真の場合は転置された後)は,&quot;b &quot;の外次元(transposed_bが真の場合は転置された後)と一致しなければなりません.</target>
        </trans-unit>
        <trans-unit id="af76f45e776e3f0a5b635d397e36c82661d856e8" translate="yes" xml:space="preserve">
          <source>The inputs must be two-dimensional matrices and the inner dimension of &quot;a&quot; must match the outer dimension of &quot;b&quot;. Both &quot;a&quot; and &quot;b&quot; must be &lt;code&gt;Tensor&lt;/code&gt;s not &lt;code&gt;SparseTensor&lt;/code&gt;s. This op is optimized for the case where at least one of &quot;a&quot; or &quot;b&quot; is sparse, in the sense that they have a large proportion of zero values. The breakeven for using this versus a dense matrix multiply on one platform was 30% zero values in the sparse matrix.</source>
          <target state="translated">入力は2次元行列でなければならず、 &quot;a&quot;の内部次元は &quot;b&quot;の外部次元と一致しなければなりません。&quot;a&quot;と &quot;b&quot;はどちらも &lt;code&gt;SparseTensor&lt;/code&gt; ではなく &lt;code&gt;Tensor&lt;/code&gt; でなければなりません。この操作は、「a」または「b」の少なくとも1つがスパースである場合に最適化されています。これは、ゼロ値の割合が大きいという意味です。1つのプラットフォームでこれを使用する場合と密行列乗算を使用する場合の損益分岐点は、疎行列で30％のゼロ値でした。</target>
        </trans-unit>
        <trans-unit id="ff06fbddb811e99d2772aad28bf55f55c80fc380" translate="yes" xml:space="preserve">
          <source>The inputs must be two-dimensional matrices and the inner dimension of &lt;code&gt;a&lt;/code&gt; (after being transposed if &lt;code&gt;transpose_a&lt;/code&gt; is non-zero) must match the outer dimension of &lt;code&gt;b&lt;/code&gt; (after being transposed if &lt;code&gt;transposed_b&lt;/code&gt; is non-zero).</source>
          <target state="translated">入力は2次元行列である必要があり &lt;code&gt;a&lt;/code&gt; の内部次元（ &lt;code&gt;transpose_a&lt;/code&gt; がゼロ以外の場合に転置された後）は &lt;code&gt;b&lt;/code&gt; の外部次元（ &lt;code&gt;transposed_b&lt;/code&gt; がゼロ以外の場合に転置された後）と一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="9ec73a355bd346786f44656782393b17ea3017cb" translate="yes" xml:space="preserve">
          <source>The inputs must have compatible shapes. That is, the inner dimension of &lt;code&gt;a&lt;/code&gt; must be equal to the outer dimension of &lt;code&gt;b&lt;/code&gt;. This requirement is adjusted according to whether either &lt;code&gt;a&lt;/code&gt; or &lt;code&gt;b&lt;/code&gt; is transposed or adjointed.</source>
          <target state="translated">入力は互換性のある形状である必要があります。すなわち、の内寸の外形寸法に等しくなければならない &lt;code&gt;b&lt;/code&gt; 。この要件は、 &lt;code&gt;a&lt;/code&gt; または &lt;code&gt;b&lt;/code&gt; のいずれかが転置または隣接しているかどうかに応じて調整されます。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="851dd7f69bc57652716eb3a5a344fc6b5525127d" translate="yes" xml:space="preserve">
          <source>The inputs must, following any transpositions, be tensors of rank &amp;gt;= 2 where the inner 2 dimensions specify valid matrix multiplication dimensions, and any further outer dimensions specify matching batch size.</source>
          <target state="translated">入力は、転置に続いて、ランク2以上のテンソルでなければなりません。ここで、内側の2次元は有効な行列乗算次元を指定し、それ以外の外側の次元は一致するバッチサイズを指定します。</target>
        </trans-unit>
        <trans-unit id="2af5973c44cbbca03420397524238d5ac415d59c" translate="yes" xml:space="preserve">
          <source>The inputs pixel values are scaled between -1 and 1, sample-wise.</source>
          <target state="translated">入力ピクセル値は,-1 から 1 の間でサンプル単位でスケーリングされます.</target>
        </trans-unit>
        <trans-unit id="ea6567bbb82a2153b18593d35fddb52d49ff3e46" translate="yes" xml:space="preserve">
          <source>The inputs represent an N-D SparseTensor with logical shape &lt;code&gt;[..., B, C]&lt;/code&gt; (where &lt;code&gt;N &amp;gt;= 2&lt;/code&gt;), and with indices sorted in the canonical lexicographic order.</source>
          <target state="translated">入力は、論理形状 &lt;code&gt;[..., B, C]&lt;/code&gt; 持つND SparseTensorを表します（ここで &lt;code&gt;N &amp;gt;= 2&lt;/code&gt; ）を持ち、インデックスが正規の辞書式順序でソートされます。</target>
        </trans-unit>
        <trans-unit id="a4f1d56f863e44297f61aff16d5b045b54f4c8aa" translate="yes" xml:space="preserve">
          <source>The integer ID value to return for out-of-vocabulary feature values, defaults to &lt;code&gt;-1&lt;/code&gt;. This can not be specified with a positive &lt;code&gt;num_oov_buckets&lt;/code&gt;.</source>
          <target state="translated">語彙外の特徴値に対して返される整数ID値は、デフォルトで &lt;code&gt;-1&lt;/code&gt; です。これは、正の &lt;code&gt;num_oov_buckets&lt;/code&gt; で指定することはできません。</target>
        </trans-unit>
        <trans-unit id="786b18b1428c9b9d0c0ea9b230ad273866de4e7c" translate="yes" xml:space="preserve">
          <source>The integer error code that describes the error.</source>
          <target state="translated">エラーを記述する整数のエラーコード。</target>
        </trans-unit>
        <trans-unit id="1f081e7633128ce109e045c67ad35e5e5ed00d6f" translate="yes" xml:space="preserve">
          <source>The intent of this library is that you can write an algorithm in a stylized way and it will be usable with a variety of different &lt;a href=&quot;../../distribute/strategy&quot;&gt;&lt;code&gt;tf.distribute.Strategy&lt;/code&gt;&lt;/a&gt; implementations. Each descendant will implement a different strategy for distributing the algorithm across multiple devices/machines. Furthermore, these changes can be hidden inside the specific layers and other library classes that need special treatment to run in a distributed setting, so that most users' model definition code can run unchanged. The &lt;a href=&quot;../../distribute/strategy&quot;&gt;&lt;code&gt;tf.distribute.Strategy&lt;/code&gt;&lt;/a&gt; API works the same way with eager and graph execution.</source>
          <target state="translated">このライブラリの目的は、様式化された方法でアルゴリズムを記述でき、さまざまな異なる&lt;a href=&quot;../../distribute/strategy&quot;&gt; &lt;code&gt;tf.distribute.Strategy&lt;/code&gt; &lt;/a&gt;実装で使用できるようにすることです。各子孫は、複数のデバイス/マシンにアルゴリズムを分散するための異なる戦略を実装します。さらに、これらの変更は、特定のレイヤーや、分散設定で実行するために特別な処理が必要なその他のライブラリクラスの内部に隠すことができるため、ほとんどのユーザーのモデル定義コードを変更せずに実行できます。&lt;a href=&quot;../../distribute/strategy&quot;&gt; &lt;code&gt;tf.distribute.Strategy&lt;/code&gt; &lt;/a&gt; APIは熱心とグラフ実行と同じように動作します。</target>
        </trans-unit>
        <trans-unit id="88afca652283c5de09f863feb56ef262251ef585" translate="yes" xml:space="preserve">
          <source>The intent of this library is that you can write an algorithm in a stylized way and it will be usable with a variety of different &lt;a href=&quot;distribute/strategy&quot;&gt;&lt;code&gt;tf.distribute.Strategy&lt;/code&gt;&lt;/a&gt; implementations. Each descendant will implement a different strategy for distributing the algorithm across multiple devices/machines. Furthermore, these changes can be hidden inside the specific layers and other library classes that need special treatment to run in a distributed setting, so that most users' model definition code can run unchanged. The &lt;a href=&quot;distribute/strategy&quot;&gt;&lt;code&gt;tf.distribute.Strategy&lt;/code&gt;&lt;/a&gt; API works the same way with eager and graph execution.</source>
          <target state="translated">このライブラリの目的は、様式化された方法でアルゴリズムを記述でき、さまざまな異なる&lt;a href=&quot;distribute/strategy&quot;&gt; &lt;code&gt;tf.distribute.Strategy&lt;/code&gt; &lt;/a&gt;実装で使用できるようにすることです。各子孫は、複数のデバイス/マシンにアルゴリズムを分散させるための異なる戦略を実装します。さらに、これらの変更は、特定のレイヤーや、分散設定で実行するために特別な処理が必要なその他のライブラリクラスの内部に隠すことができるため、ほとんどのユーザーのモデル定義コードを変更せずに実行できます。&lt;a href=&quot;distribute/strategy&quot;&gt; &lt;code&gt;tf.distribute.Strategy&lt;/code&gt; &lt;/a&gt; APIは熱心とグラフ実行と同じように動作します。</target>
        </trans-unit>
        <trans-unit id="bf691a6e4942a79a3eb610931eed1d4815c80c50" translate="yes" xml:space="preserve">
          <source>The internal state of the RNG.</source>
          <target state="translated">RNGの内部状態。</target>
        </trans-unit>
        <trans-unit id="f4e9fea1c0c7520b3774550dafc300a0edeccb05" translate="yes" xml:space="preserve">
          <source>The inverse of fftshift.</source>
          <target state="translated">fftshiftの逆数です。</target>
        </trans-unit>
        <trans-unit id="6f58aa3901c7e60d466c168f7dbe6f460db432cc" translate="yes" xml:space="preserve">
          <source>The iterator only checks for new checkpoints when control flow has been reverted to it. This means it can miss checkpoints if your code takes longer to run between iterations than &lt;code&gt;min_interval_secs&lt;/code&gt; or the interval at which new checkpoints are written.</source>
          <target state="translated">イテレータは、制御フローが元に戻されたときにのみ新しいチェックポイントをチェックします。これは、コードが反復間で実行にかかる時間が &lt;code&gt;min_interval_secs&lt;/code&gt; または新しいチェックポイントが書き込まれる間隔。</target>
        </trans-unit>
        <trans-unit id="bbc287cd067fb3f315911c649ff5a7aa6eb20b54" translate="yes" xml:space="preserve">
          <source>The job (the XXX in TensorFlow device specification /job:XXX) that contains the TPU devices that will be initialized. If job=None it is assumed there is only one job in the TensorFlow flock, and an error will be returned if this assumption does not hold.</source>
          <target state="translated">初期化される TPU デバイスを含むジョブ(TensorFlow デバイス仕様 /job:XXX の XXX)。job=Noneの場合、TensorFlowフロック内には1つのジョブしか存在しないと仮定され、この仮定が保持されない場合はエラーが返されます。</target>
        </trans-unit>
        <trans-unit id="7761a900373227a5908c2ab270802392dddf9229" translate="yes" xml:space="preserve">
          <source>The job (the XXX in TensorFlow device specification /job:XXX) that contains the TPU devices that will be shutdown. If job=None it is assumed there is only one job in the TensorFlow flock, and an error will be returned if this assumption does not hold.</source>
          <target state="translated">シャットダウンされる TPU デバイスを含むジョブ(TensorFlow デバイス仕様 /job:XXX の XXX)。job=None の場合、TensorFlow フロック内には 1 つのジョブしかないと仮定され、この仮定が保持されない場合はエラーが返されます。</target>
        </trans-unit>
        <trans-unit id="16441d46dfcb0fd71d29af5e06be782473ef7ef7" translate="yes" xml:space="preserve">
          <source>The job name under which the new server will be accessible.</source>
          <target state="translated">新しいサーバーがアクセスできるジョブ名。</target>
        </trans-unit>
        <trans-unit id="751b0fbfa4aeea2c579ce7d09f30705a335965fb" translate="yes" xml:space="preserve">
          <source>The key and value content to get from each line is specified by the &lt;code&gt;key_index&lt;/code&gt; and &lt;code&gt;value_index&lt;/code&gt;.</source>
          <target state="translated">各行から取得するキーと値のコンテンツは、 &lt;code&gt;key_index&lt;/code&gt; および &lt;code&gt;value_index&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="e732a302356fd06e3da95b03500ebf97f84d0506" translate="yes" xml:space="preserve">
          <source>The key and value content to get from each line is specified either by the following, or a value &lt;code&gt;&amp;gt;=0&lt;/code&gt;.</source>
          <target state="translated">各行から取得するキーと値の内容は、次のように、または &lt;code&gt;&amp;gt;=0&lt;/code&gt; の値で指定されます。</target>
        </trans-unit>
        <trans-unit id="c0771e36c5a66ef95bdba36fa510d228d752d2d4" translate="yes" xml:space="preserve">
          <source>The key and value content to get from each line.</source>
          <target state="translated">各行から得るための鍵と価値あるコンテンツ。</target>
        </trans-unit>
        <trans-unit id="b464317f2f49a3771499c8be27b73752b57cff0e" translate="yes" xml:space="preserve">
          <source>The key and value type of the table to initialize is given by &lt;code&gt;key_dtype&lt;/code&gt; and &lt;code&gt;value_dtype&lt;/code&gt;.</source>
          <target state="translated">初期化するテーブルのキーと値のタイプは、 &lt;code&gt;key_dtype&lt;/code&gt; と &lt;code&gt;value_dtype&lt;/code&gt; によって指定されます。</target>
        </trans-unit>
        <trans-unit id="7f231eccba572c9745a56b810b3c3047e7ea0454" translate="yes" xml:space="preserve">
          <source>The key for the collection. For example, the &lt;code&gt;GraphKeys&lt;/code&gt; class contains many standard names for collections.</source>
          <target state="translated">コレクションの鍵。たとえば、 &lt;code&gt;GraphKeys&lt;/code&gt; クラスには、コレクションの多くの標準名が含まれています。</target>
        </trans-unit>
        <trans-unit id="68713242651f0ec86fa38fc63c0f68575067f7ec" translate="yes" xml:space="preserve">
          <source>The key for the collection. The &lt;code&gt;GraphKeys&lt;/code&gt; class contains many standard names for collections.</source>
          <target state="translated">コレクションの鍵。 &lt;code&gt;GraphKeys&lt;/code&gt; のクラスは、コレクションの多くの標準的な名前が含まれています。</target>
        </trans-unit>
        <trans-unit id="9f799300f7af4ad7bf22ac56cc9d8c592e154fb0" translate="yes" xml:space="preserve">
          <source>The key for the collections. The &lt;code&gt;GraphKeys&lt;/code&gt; class contains many standard names for collections.</source>
          <target state="translated">コレクションの鍵。 &lt;code&gt;GraphKeys&lt;/code&gt; のクラスは、コレクションの多くの標準的な名前が含まれています。</target>
        </trans-unit>
        <trans-unit id="ffb06b79cd9a7c754d2c0b3d48045fd9d3624a00" translate="yes" xml:space="preserve">
          <source>The keys for the collections to add to. The &lt;code&gt;GraphKeys&lt;/code&gt; class contains many standard names for collections.</source>
          <target state="translated">追加するコレクションのキー。 &lt;code&gt;GraphKeys&lt;/code&gt; のクラスは、コレクションの多くの標準的な名前が含まれています。</target>
        </trans-unit>
        <trans-unit id="93ae0a77af7d45a8107b1bfa71735de24854f107" translate="yes" xml:space="preserve">
          <source>The keyword arguments that are passed on to &lt;code&gt;fn&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fn&lt;/code&gt; に渡されるキーワード引数。</target>
        </trans-unit>
        <trans-unit id="2c7afb2c0ad248ba222c168b5103cb8f08e6923f" translate="yes" xml:space="preserve">
          <source>The keyword arguments that are passed on to BaseLayer.&lt;strong&gt;init&lt;/strong&gt;.</source>
          <target state="translated">BaseLayerに渡されるキーワード引数。&lt;strong&gt;init&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="339c24317a151f1ccadbe2bc95f1998f249689f6" translate="yes" xml:space="preserve">
          <source>The keyword arguments that are passed on to BaseLayer.&lt;strong&gt;init&lt;/strong&gt;. Allowed keyword arguments include &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">BaseLayerに渡されるキーワード引数。&lt;strong&gt;init&lt;/strong&gt;。許可されるキーワード引数には &lt;code&gt;name&lt;/code&gt; が含まれます。</target>
        </trans-unit>
        <trans-unit id="f2cb43e5a33cda57c35ab173bdca64268dd6064f" translate="yes" xml:space="preserve">
          <source>The last &lt;code&gt;concentration&lt;/code&gt; dimension parametrizes a single Dirichlet-Multinomial distribution. When calling distribution functions (e.g., &lt;code&gt;dist.prob(counts)&lt;/code&gt;), &lt;code&gt;concentration&lt;/code&gt;, &lt;code&gt;total_count&lt;/code&gt; and &lt;code&gt;counts&lt;/code&gt; are broadcast to the same shape. The last dimension of &lt;code&gt;counts&lt;/code&gt; corresponds single Dirichlet-Multinomial distributions.</source>
          <target state="translated">最後の &lt;code&gt;concentration&lt;/code&gt; 次元は、単一のディリクレ多項分布をパラメーター化します。分布関数を呼び出すとき（例えば、 &lt;code&gt;dist.prob(counts)&lt;/code&gt; ）、 &lt;code&gt;concentration&lt;/code&gt; 、 &lt;code&gt;total_count&lt;/code&gt; と &lt;code&gt;counts&lt;/code&gt; 同じ形状に放送されています。 &lt;code&gt;counts&lt;/code&gt; の最後の次元は、単一のディリクレ多項分布に対応します。</target>
        </trans-unit>
        <trans-unit id="78cc8d00f8e7491129a68b99d8285b81a0423488" translate="yes" xml:space="preserve">
          <source>The last dimension of &lt;code&gt;indices&lt;/code&gt; can be at most the rank of &lt;code&gt;params&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;indices&lt;/code&gt; の最後の次元は、最大で &lt;code&gt;params&lt;/code&gt; のランクにすることができます。</target>
        </trans-unit>
        <trans-unit id="ecdf342100af669eb1e5196eae29b7087572c686" translate="yes" xml:space="preserve">
          <source>The last dimension of &lt;code&gt;indices&lt;/code&gt; corresponds to elements (if &lt;code&gt;indices.shape[-1] == params.rank&lt;/code&gt;) or slices (if &lt;code&gt;indices.shape[-1] &amp;lt; params.rank&lt;/code&gt;) along dimension &lt;code&gt;indices.shape[-1]&lt;/code&gt; of &lt;code&gt;params&lt;/code&gt;. The output tensor has shape</source>
          <target state="translated">最後の次元 &lt;code&gt;indices&lt;/code&gt; 構成要素に対応する（もし &lt;code&gt;indices.shape[-1] == params.rank&lt;/code&gt; ）またはスライス（IF &lt;code&gt;indices.shape[-1] &amp;lt; params.rank&lt;/code&gt; ）寸法に沿って &lt;code&gt;indices.shape[-1]&lt;/code&gt; の &lt;code&gt;params&lt;/code&gt; の。出力テンソルには形状があります</target>
        </trans-unit>
        <trans-unit id="286ceed5a9e73c8174db8660f8e7395f9150777f" translate="yes" xml:space="preserve">
          <source>The last dimension of &lt;code&gt;indices&lt;/code&gt; corresponds to indices into elements (if &lt;code&gt;indices.shape[-1] = shape.rank&lt;/code&gt;) or slices (if &lt;code&gt;indices.shape[-1] &amp;lt; shape.rank&lt;/code&gt;) along dimension &lt;code&gt;indices.shape[-1]&lt;/code&gt; of &lt;code&gt;shape&lt;/code&gt;. &lt;code&gt;updates&lt;/code&gt; is a tensor with shape</source>
          <target state="translated">&lt;code&gt;indices&lt;/code&gt; の最後の次元は、要素のインデックス（ &lt;code&gt;indices.shape[-1] = shape.rank&lt;/code&gt; 場合）またはスライス（ &lt;code&gt;indices.shape[-1] &amp;lt; shape.rank&lt;/code&gt; ）の次元 &lt;code&gt;indices.shape[-1]&lt;/code&gt; に対応します &lt;code&gt;shape&lt;/code&gt; 。 &lt;code&gt;updates&lt;/code&gt; は形状のテンソルです</target>
        </trans-unit>
        <trans-unit id="2bf929456df7864e36863c3aad01721261ffcbb9" translate="yes" xml:space="preserve">
          <source>The last dimension of &lt;code&gt;indices&lt;/code&gt; corresponds to indices into elements (if &lt;code&gt;indices.shape[-1] = tensor.shape.rank&lt;/code&gt;) or slices (if &lt;code&gt;indices.shape[-1] &amp;lt; tensor.shape.rank&lt;/code&gt;) along dimension &lt;code&gt;indices.shape[-1]&lt;/code&gt; of &lt;code&gt;tensor.shape&lt;/code&gt;. &lt;code&gt;updates&lt;/code&gt; is a tensor with shape</source>
          <target state="translated">&lt;code&gt;indices&lt;/code&gt; の最後の次元は、次元 &lt;code&gt;indices.shape[-1]&lt;/code&gt; 沿った要素（ &lt;code&gt;indices.shape[-1] = tensor.shape.rank&lt;/code&gt; 場合）またはスライス（ &lt;code&gt;indices.shape[-1] &amp;lt; tensor.shape.rank&lt;/code&gt; 場合）へのインデックスに対応します。 -1]の &lt;code&gt;tensor.shape&lt;/code&gt; 。 &lt;code&gt;updates&lt;/code&gt; は形のあるテンソルです</target>
        </trans-unit>
        <trans-unit id="1334749bed79f5a39ed1f5844527d62a1a905c7c" translate="yes" xml:space="preserve">
          <source>The last dimension of &lt;code&gt;sp_input.indices&lt;/code&gt; is discarded and replaced with the values of &lt;code&gt;sp_input&lt;/code&gt;. If &lt;code&gt;sp_input.dense_shape = [D0, D1, ..., Dn, K]&lt;/code&gt;, then &lt;code&gt;output.shape = [D0, D1, ..., Dn, vocab_size]&lt;/code&gt;, where</source>
          <target state="translated">&lt;code&gt;sp_input.indices&lt;/code&gt; の最後のディメンションは破棄され、 &lt;code&gt;sp_input&lt;/code&gt; の値に置き換えられます。もし &lt;code&gt;sp_input.dense_shape = [D0, D1, ..., Dn, K]&lt;/code&gt; 、次いで &lt;code&gt;output.shape = [D0, D1, ..., Dn, vocab_size]&lt;/code&gt; 、ここで</target>
        </trans-unit>
        <trans-unit id="fbd03a9648fd276c59e057bf5a188513a3c7e179" translate="yes" xml:space="preserve">
          <source>The last three dimensions of input are expected to be [height, width, depth].</source>
          <target state="translated">入力の最後の3次元は[高さ、幅、奥行き]と予想されます。</target>
        </trans-unit>
        <trans-unit id="d9e40b42f372ce30bcad2557b4fbb4971315076a" translate="yes" xml:space="preserve">
          <source>The layer to be wrapped.</source>
          <target state="translated">ラップするレイヤー。</target>
        </trans-unit>
        <trans-unit id="1d8c5a256ceb0281a5abfd9ab601681d1b6839bc" translate="yes" xml:space="preserve">
          <source>The learning phase flag is a bool tensor (0 = test, 1 = train) to be passed as input to any Keras function that uses a different behavior at train time and test time.</source>
          <target state="translated">学習フェーズフラグは、boolテンソル(0=test,1=train)で、訓練時間とテスト時間で異なる動作を使用する任意のKeras関数への入力として渡されます。</target>
        </trans-unit>
        <trans-unit id="a0a124fd12c8c65bb6844115fdf183c1b942c532" translate="yes" xml:space="preserve">
          <source>The learning phase gets restored to its original value upon exiting the scope.</source>
          <target state="translated">学習段階では、スコープを抜けると元の値に戻ります。</target>
        </trans-unit>
        <trans-unit id="1de5c67a1eb0290c7057fa80ed33f8f702db5481" translate="yes" xml:space="preserve">
          <source>The learning rate multiplier first decays from 1 to &lt;code&gt;alpha&lt;/code&gt; for &lt;code&gt;first_decay_steps&lt;/code&gt; steps. Then, a warm restart is performed. Each new warm restart runs for &lt;code&gt;t_mul&lt;/code&gt; times more steps and with &lt;code&gt;m_mul&lt;/code&gt; times smaller initial learning rate.</source>
          <target state="translated">学習率の乗数は、 &lt;code&gt;first_decay_steps&lt;/code&gt; ステップで最初に1から &lt;code&gt;alpha&lt;/code&gt; に減衰します。その後、ウォームリスタートが実行されます。新しい各ウォームリスタートは、 &lt;code&gt;t_mul&lt;/code&gt; 倍のステップと &lt;code&gt;m_mul&lt;/code&gt; で実行されます倍の初期学習率で実行されます。</target>
        </trans-unit>
        <trans-unit id="28b092429ddde1497c6f3dfbaf3344b66f15e153" translate="yes" xml:space="preserve">
          <source>The learning rate schedule is also serializable and deserializable using &lt;a href=&quot;serialize&quot;&gt;&lt;code&gt;tf.keras.optimizers.schedules.serialize&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;deserialize&quot;&gt;&lt;code&gt;tf.keras.optimizers.schedules.deserialize&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">学習率スケジュールは、&lt;a href=&quot;serialize&quot;&gt; &lt;code&gt;tf.keras.optimizers.schedules.serialize&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;deserialize&quot;&gt; &lt;code&gt;tf.keras.optimizers.schedules.deserialize&lt;/code&gt; &lt;/a&gt;を使用してシリアル化および非シリアル化することもできます。</target>
        </trans-unit>
        <trans-unit id="01e40bb81194de53f99fe696ad30a914f2acff24" translate="yes" xml:space="preserve">
          <source>The learning rate. It should be a floating point value or a callable taking no arguments for a dynamic learning rate.</source>
          <target state="translated">学習率。これは浮動小数点値か、動的な学習率のための引数を取らない呼び出し可能な値でなければなりません。</target>
        </trans-unit>
        <trans-unit id="d51c3e8c1e064693087f30b29f778802b426021e" translate="yes" xml:space="preserve">
          <source>The left-hand side of the &lt;code&gt;!=&lt;/code&gt; operator.</source>
          <target state="translated">&lt;code&gt;!=&lt;/code&gt; 演算子の左側。</target>
        </trans-unit>
        <trans-unit id="cf752d5e27436ab728a37f163c777a5586d0910a" translate="yes" xml:space="preserve">
          <source>The left-hand side of the &lt;code&gt;+&lt;/code&gt; operator.</source>
          <target state="translated">&lt;code&gt;+&lt;/code&gt; 演算子の左側。</target>
        </trans-unit>
        <trans-unit id="15f4d7d0d6ba87c9c2b8ec8a96bd5bdea5cf5f18" translate="yes" xml:space="preserve">
          <source>The left-hand side of the &lt;code&gt;==&lt;/code&gt; operator.</source>
          <target state="translated">&lt;code&gt;==&lt;/code&gt; 演算子の左側。</target>
        </trans-unit>
        <trans-unit id="5da8626faf43a1f562532d639d80375ea4ddfc06" translate="yes" xml:space="preserve">
          <source>The length of each row in this ragged tensor, or None if rows are ragged.</source>
          <target state="translated">このぼろぼろテンソルの各行の長さ、または行がぼろぼろの場合はなし。</target>
        </trans-unit>
        <trans-unit id="622693f2c5cb15d1481ed89936db4a11927a96bd" translate="yes" xml:space="preserve">
          <source>The length of output lists are all of the same length, &lt;code&gt;num_features&lt;/code&gt;. The output shapes are compatible in a way that the first dimension of all tensors of all lists are the same and equal to the number of possible split nodes for each feature.</source>
          <target state="translated">出力リストの長さはすべて同じ長さ、 &lt;code&gt;num_features&lt;/code&gt; です。出力形状は、すべてのリストのすべてのテンソルの最初の次元が同じであり、各フィーチャの可能な分割ノードの数に等しいという点で互換性があります。</target>
        </trans-unit>
        <trans-unit id="69dda73634b99af43599a42bd633812c4b338c88" translate="yes" xml:space="preserve">
          <source>The length of the transform. If length is less than sequence length, only the first n elements of the sequence are considered for the DCT. If n is greater than the sequence length, zeros are padded and then the DCT is computed as usual.</source>
          <target state="translated">変換の長さ.length がシーケンスの長さよりも短い場合,シーケンスの最初の n 個の要素のみが DCT のために考慮されます.n がシーケンスの長さよりも大きい場合,ゼロはパディングされ,DCT は通常通り計算されます.</target>
        </trans-unit>
        <trans-unit id="d85658d0fa4fe8b1b20f2beaec2fc4b746948c87" translate="yes" xml:space="preserve">
          <source>The level at which to log.</source>
          <target state="translated">ログを取るレベル。</target>
        </trans-unit>
        <trans-unit id="90bbcad1f9bed80766758a96fdfa14681f8c6dd6" translate="yes" xml:space="preserve">
          <source>The link flags.</source>
          <target state="translated">リンクフラグです。</target>
        </trans-unit>
        <trans-unit id="eef29fe89c1421162e4e09274c7ca8daa2971972" translate="yes" xml:space="preserve">
          <source>The list is in arbitrary order. It does not contain the special entries &quot;.&quot; and &quot;..&quot;.</source>
          <target state="translated">このリストは任意の順序になっています。特殊なエントリ &quot;.&quot; と &quot;...&quot; は含まれていません。</target>
        </trans-unit>
        <trans-unit id="8a23b9208c8b55e07cbbf14bb7a18492cdb5be1b" translate="yes" xml:space="preserve">
          <source>The list of &lt;code&gt;Tensor&lt;/code&gt; arguments that are passed to the op function.</source>
          <target state="translated">op関数に渡される &lt;code&gt;Tensor&lt;/code&gt; 引数のリスト。</target>
        </trans-unit>
        <trans-unit id="4fe2aa6417d3855190d90b82f9abd178eaf4e42b" translate="yes" xml:space="preserve">
          <source>The list of &lt;code&gt;Tensor&lt;/code&gt; objects representing the outputs of this op.</source>
          <target state="translated">のリスト &lt;code&gt;Tensor&lt;/code&gt; の出力を表すTensorオブジェクト。</target>
        </trans-unit>
        <trans-unit id="72b9f570910bc85398790d90eea0b57ff816aa6f" translate="yes" xml:space="preserve">
          <source>The list of &lt;code&gt;Tensor&lt;/code&gt; objects unstacked from &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">リスト &lt;code&gt;Tensor&lt;/code&gt; から積み重ねオブジェクト &lt;code&gt;value&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e1da5ffc250e1d720f6279716c9d6aade88b1077" translate="yes" xml:space="preserve">
          <source>The list of arguments not parsed as options, including argv[0].</source>
          <target state="translated">argv[0]を含む、オプションとして解析されない引数のリスト。</target>
        </trans-unit>
        <trans-unit id="7a2668eec12c1d3cf3f187776719d83faec8967b" translate="yes" xml:space="preserve">
          <source>The list of concatenated tensors that was dequeued.</source>
          <target state="translated">デキューされた連結テンソルのリスト。</target>
        </trans-unit>
        <trans-unit id="70e71f616ed088b5e1a5217c440dcc82210678f0" translate="yes" xml:space="preserve">
          <source>The list of dtypes for each component of a queue element.</source>
          <target state="translated">キュー要素の各コンポーネントのdtypesのリスト。</target>
        </trans-unit>
        <trans-unit id="bfa264d47e9935a6a337f111d8bbcf3f713d945a" translate="yes" xml:space="preserve">
          <source>The list of names for each component of a queue element.</source>
          <target state="translated">キュー要素の各コンポーネントの名前のリスト。</target>
        </trans-unit>
        <trans-unit id="afc23fa1ddc71634846115e66b755cdfe5e1dce3" translate="yes" xml:space="preserve">
          <source>The list of shapes for each component of a queue element.</source>
          <target state="translated">キュー要素の各コンポーネントの形状のリスト。</target>
        </trans-unit>
        <trans-unit id="39c799e61ec6d452a92b2f433fe078d01b37f5db" translate="yes" xml:space="preserve">
          <source>The list of threads started for the &lt;code&gt;QueueRunners&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;QueueRunners&lt;/code&gt; に対して開始されたスレッドのリスト。</target>
        </trans-unit>
        <trans-unit id="17c761809240285ed679e6893972139bfc169439" translate="yes" xml:space="preserve">
          <source>The list of values in the collection with the given &lt;code&gt;name&lt;/code&gt;, or an empty list if no value has been added to that collection.</source>
          <target state="translated">指定された &lt;code&gt;name&lt;/code&gt; のコレクション内の値のリスト、またはそのコレクションに値が追加されていない場合は空のリスト。</target>
        </trans-unit>
        <trans-unit id="88981d3f5cd5ac5b5640b8a47ed0e63488d7e59c" translate="yes" xml:space="preserve">
          <source>The list of values in the collection with the given &lt;code&gt;name&lt;/code&gt;, or an empty list if no value has been added to that collection. Note that this returns the collection list itself, which can be modified in place to change the collection.</source>
          <target state="translated">指定された &lt;code&gt;name&lt;/code&gt; のコレクション内の値のリスト、またはそのコレクションに値が追加されていない場合は空のリスト。これはコレクションリスト自体を返すことに注意してください。コレクションを変更するために、その場所を変更できます。</target>
        </trans-unit>
        <trans-unit id="d9ede6fcf47022786b23b7b18ee2bcbd80557011" translate="yes" xml:space="preserve">
          <source>The list of values in the collection with the given &lt;code&gt;name&lt;/code&gt;, or an empty list if no value has been added to that collection. The list contains the values in the order under which they were collected.</source>
          <target state="translated">指定された &lt;code&gt;name&lt;/code&gt; のコレクション内の値のリスト、またはそのコレクションに値が追加されていない場合は空のリスト。リストには、収集された順序で値が含まれています。</target>
        </trans-unit>
        <trans-unit id="6538ac74002e8b4bac2992b02a57d0b02a01c00b" translate="yes" xml:space="preserve">
          <source>The list or dictionary of tensors to enqueue.</source>
          <target state="translated">エンキューするテンソルのリストまたは辞書。</target>
        </trans-unit>
        <trans-unit id="72b6afead45a5c197fda6e2bbed35e9b2df07fc4" translate="yes" xml:space="preserve">
          <source>The local task index.</source>
          <target state="translated">ローカルタスクインデックス。</target>
        </trans-unit>
        <trans-unit id="7bfb8caff21900bf5e14d413b5ce56c051949f79" translate="yes" xml:space="preserve">
          <source>The local tensor to the sum.</source>
          <target state="translated">和に対する局所的なテンソルです。</target>
        </trans-unit>
        <trans-unit id="7016678a2375c9753e8eaf54d3415095320d885f" translate="yes" xml:space="preserve">
          <source>The locations represented by indices in &lt;code&gt;indices&lt;/code&gt; take value &lt;code&gt;on_value&lt;/code&gt;, while all other locations take value &lt;code&gt;off_value&lt;/code&gt;.</source>
          <target state="translated">指数で表される位置 &lt;code&gt;indices&lt;/code&gt; 値を取る &lt;code&gt;on_value&lt;/code&gt; 全ての他の位置の値がとりながら、 &lt;code&gt;off_value&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="3d12a72f932ac01058fe17db625020a638310386" translate="yes" xml:space="preserve">
          <source>The logarithm of \(|Beta(x)|\) reducing along the last dimension.</source>
          <target state="translated">最後の次元に沿って減少する\(|Beta(x)|\)の対数。</target>
        </trans-unit>
        <trans-unit id="cc2a2b682bde19cda29671bdd447522bc2609c77" translate="yes" xml:space="preserve">
          <source>The logic for one evaluation step.</source>
          <target state="translated">1つの評価ステップのロジックです。</target>
        </trans-unit>
        <trans-unit id="fb1c02a9347c76b0eb9525d98ba6d17466885bcd" translate="yes" xml:space="preserve">
          <source>The logic for one inference step.</source>
          <target state="translated">1つの推論ステップのためのロジック。</target>
        </trans-unit>
        <trans-unit id="91e2ef43e46f963e6adb77ffb3ae3fdcd8e43230" translate="yes" xml:space="preserve">
          <source>The logic for one training step.</source>
          <target state="translated">トレーニングの一歩を踏み出すためのロジック。</target>
        </trans-unit>
        <trans-unit id="7cabf0d11d7d05a82a8264a276c299a29ceb6060" translate="yes" xml:space="preserve">
          <source>The logical device id presented is not consistent with total number of partitions specified by the device assignment.</source>
          <target state="translated">提示された論理デバイス ID が、デバイス割り当てで指定されたパーティションの総数と一致しません。</target>
        </trans-unit>
        <trans-unit id="bcad86f6653e28bded1ae388b8b9d533057cc10b" translate="yes" xml:space="preserve">
          <source>The logical to physical core mapping.</source>
          <target state="translated">論理コアから物理コアへのマッピング。</target>
        </trans-unit>
        <trans-unit id="52db0b11c9a30f712036906862cfb94de23cb0bc" translate="yes" xml:space="preserve">
          <source>The logits, a float tensor. Note that logits are assumed to be unbounded and 0-centered. A value &amp;gt; 0 (resp. &amp;lt; 0) is considered a positive (resp. negative) binary prediction.</source>
          <target state="translated">The logits, a float tensor. Note that logits are assumed to be unbounded and 0-centered. A value &amp;gt; 0 (resp. &amp;lt; 0) is considered a positive (resp. negative) binary prediction.</target>
        </trans-unit>
        <trans-unit id="115853f39fe8d408f8bde4c8f093c2786d017e1d" translate="yes" xml:space="preserve">
          <source>The loss function to wrap, with signature &lt;code&gt;fn(y_true, y_pred, **kwargs)&lt;/code&gt;.</source>
          <target state="translated">The loss function to wrap, with signature &lt;code&gt;fn(y_true, y_pred, **kwargs)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="53c66b9be9a4d574723adcf23a86e3d3823c9748" translate="yes" xml:space="preserve">
          <source>The loss is the weighted sum over all input dimensions. Namely, if the input labels have shape &lt;code&gt;[batch_size, label_dimension]&lt;/code&gt;, the loss is the weighted sum over both &lt;code&gt;batch_size&lt;/code&gt; and &lt;code&gt;label_dimension&lt;/code&gt;.</source>
          <target state="translated">損失は​​、すべての入力ディメンションの加重和です。つまり、入力ラベルの形状が &lt;code&gt;[batch_size, label_dimension]&lt;/code&gt; 場合、損失は、 &lt;code&gt;batch_size&lt;/code&gt; と &lt;code&gt;label_dimension&lt;/code&gt; の両方の加重和です。</target>
        </trans-unit>
        <trans-unit id="ed8e3f66cfff153d9268a06149cbecc331a07647" translate="yes" xml:space="preserve">
          <source>The loss is the weighted sum over the input dimensions. Namely, if the input labels have shape &lt;code&gt;[batch_size, 1]&lt;/code&gt;, the loss is the weighted sum over &lt;code&gt;batch_size&lt;/code&gt;.</source>
          <target state="translated">損失は​​、入力ディメンションの加重和です。つまり、入力ラベルの形状が &lt;code&gt;[batch_size, 1]&lt;/code&gt; 場合、損失は &lt;code&gt;batch_size&lt;/code&gt; の加重和になります。</target>
        </trans-unit>
        <trans-unit id="6d3c5f122953381dbc3e40a95fb1e99d6fa1a036" translate="yes" xml:space="preserve">
          <source>The loss scale can either be a fixed constant, chosen by the user, or be dynamically determined. Dynamically determining the loss scale is convenient as a loss scale does not have to be explicitly chosen. However it reduces performance.</source>
          <target state="translated">損失スケールは、ユーザーが選択した固定定数か、動的に決定することができます。動的にロススケールを決定すると、ロススケールを明示的に選択する必要がないので便利です。しかし、パフォーマンスは低下します。</target>
        </trans-unit>
        <trans-unit id="0f2c12568d11b3b33927e92671eaa159d3a45974" translate="yes" xml:space="preserve">
          <source>The loss scale is not updated for the lifetime of instances of this class. A given instance of this class always returns the same number when called.</source>
          <target state="translated">このクラスのインスタンスの寿命の間、損失スケールは更新されません。このクラスの指定されたインスタンスは、呼び出されたときには常に同じ数を返します。</target>
        </trans-unit>
        <trans-unit id="e8cc3d97c2f9a64a6e0f3c844b54283387973842" translate="yes" xml:space="preserve">
          <source>The loss scale to scale the loss and gradients. This can either be an int/float to use a fixed loss scale, the string &quot;dynamic&quot; to use dynamic loss scaling, or an instance of a LossScale. The string &quot;dynamic&quot; equivalent to passing &lt;code&gt;DynamicLossScale()&lt;/code&gt;, and passing an int/float is equivalent to passing a FixedLossScale with the given loss scale.</source>
          <target state="translated">The loss scale to scale the loss and gradients. This can either be an int/float to use a fixed loss scale, the string &quot;dynamic&quot; to use dynamic loss scaling, or an instance of a LossScale. The string &quot;dynamic&quot; equivalent to passing &lt;code&gt;DynamicLossScale()&lt;/code&gt; , and passing an int/float is equivalent to passing a FixedLossScale with the given loss scale.</target>
        </trans-unit>
        <trans-unit id="1c182a3c24f8448fb2c7d3d37bb39bed65ff10d2" translate="yes" xml:space="preserve">
          <source>The loss scale will be potentially updated, based on the value of &lt;code&gt;grads&lt;/code&gt;. The tensor returned by calling this class is only updated when this function is evaluated.</source>
          <target state="translated">損失のスケールは、 &lt;code&gt;grads&lt;/code&gt; の値に基づいて更新される可能性があります。このクラスを呼び出すことによって返されるテンソルは、この関数が評価されるときにのみ更新されます。</target>
        </trans-unit>
        <trans-unit id="d57e591f877f94ccd0c69a35ed4f95a452a44b64" translate="yes" xml:space="preserve">
          <source>The loss, which will be multiplied by the loss scale. Can either be a tensor or a callable returning a tensor.</source>
          <target state="translated">損失は、損失スケールを乗じたものになります。テンソルか、テンソルを返す callable のどちらかになります。</target>
        </trans-unit>
        <trans-unit id="90f307f8c8cab35fd072b8a08ea2d9e8126898ba" translate="yes" xml:space="preserve">
          <source>The lower regularized incomplete Gamma function is defined as:</source>
          <target state="translated">下位正則化された不完全ガンマ関数は次のように定義される。</target>
        </trans-unit>
        <trans-unit id="901b07d42e65c9f0c403e10ea3c5514df3c63502" translate="yes" xml:space="preserve">
          <source>The main advantage of the graph rewrite (this function) is that it works even if you do not use Keras layers or any other part of Keras. The Keras mixed precision API requires models which use Keras layers, as it only inserts casts inside Keras layers and models. Another advantage is that the graph rewrite never results in a TypeError, which the Keras API may introduce if you do certain operations outside Keras. For example, the following will result in a TypeError if the Keras mixed precision API is enabled, as a float16 and float32 tensor will be added: &lt;code&gt;tf.keras.layers.Dense(2)(x) + tf.keras.layers.Dense(2, dtype=&quot;float32&quot;)(x)&lt;/code&gt;</source>
          <target state="translated">The main advantage of the graph rewrite (this function) is that it works even if you do not use Keras layers or any other part of Keras. The Keras mixed precision API requires models which use Keras layers, as it only inserts casts inside Keras layers and models. Another advantage is that the graph rewrite never results in a TypeError, which the Keras API may introduce if you do certain operations outside Keras. For example, the following will result in a TypeError if the Keras mixed precision API is enabled, as a float16 and float32 tensor will be added: &lt;code&gt;tf.keras.layers.Dense(2)(x) + tf.keras.layers.Dense(2, dtype=&quot;float32&quot;)(x)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f2793511554b8b49f5f134322351c8feaf894969" translate="yes" xml:space="preserve">
          <source>The main reason to subclass &lt;a href=&quot;layer&quot;&gt;&lt;code&gt;tf.keras.layers.Layer&lt;/code&gt;&lt;/a&gt; instead of using a &lt;code&gt;Lambda&lt;/code&gt; layer is saving and inspecting a Model. &lt;code&gt;Lambda&lt;/code&gt; layers are saved by serializing the Python bytecode, whereas subclassed Layers can be saved via overriding their &lt;code&gt;get_config&lt;/code&gt; method. Overriding &lt;code&gt;get_config&lt;/code&gt; improves the portability of Models. Models that rely on subclassed Layers are also often easier to visualize and reason about.</source>
          <target state="translated">&lt;code&gt;Lambda&lt;/code&gt; レイヤーを使用する代わりに&lt;a href=&quot;layer&quot;&gt; &lt;code&gt;tf.keras.layers.Layer&lt;/code&gt; &lt;/a&gt;をサブクラス化する主な理由は、モデルの保存と検査です。 &lt;code&gt;Lambda&lt;/code&gt; レイヤーはPythonバイトコードをシリアル化することで保存されますが、サブクラス化されたレイヤーは &lt;code&gt;get_config&lt;/code&gt; メソッドをオーバーライドすることで保存できます。 &lt;code&gt;get_config&lt;/code&gt; をオーバーライドすると、モデルの移植性が向上します。サブクラス化されたレイヤーに依存するモデルは、多くの場合、視覚化し、推論するのも簡単です。</target>
        </trans-unit>
        <trans-unit id="819f3cd059d735134db06c3d8502fabffae5741e" translate="yes" xml:space="preserve">
          <source>The main roles of the &lt;a href=&quot;../gfile&quot;&gt;&lt;code&gt;tf.io.gfile&lt;/code&gt;&lt;/a&gt; module are:</source>
          <target state="translated">The main roles of the &lt;a href=&quot;../gfile&quot;&gt; &lt;code&gt;tf.io.gfile&lt;/code&gt; &lt;/a&gt; module are:</target>
        </trans-unit>
        <trans-unit id="e62c58738b23223c2be9a210223b49cb5226c9b5" translate="yes" xml:space="preserve">
          <source>The main use case for this is to provide additional shape information that cannot be inferred from the graph alone.</source>
          <target state="translated">主な使用例は、グラフだけでは推論できない追加の形状情報を提供することです。</target>
        </trans-unit>
        <trans-unit id="4a2c99d4f1e6d03bbc1af13e3314d300799e01bf" translate="yes" xml:space="preserve">
          <source>The map vectorization options associated with the dataset. See &lt;a href=&quot;mapvectorizationoptions&quot;&gt;&lt;code&gt;tf.data.experimental.MapVectorizationOptions&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">データセットに関連付けられたマップのベクトル化オプション。詳細については、&lt;a href=&quot;mapvectorizationoptions&quot;&gt; &lt;code&gt;tf.data.experimental.MapVectorizationOptions&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="f8214e9e9da90e26f5fe7ae19cb9d8f2cd4e068c" translate="yes" xml:space="preserve">
          <source>The masked &lt;code&gt;IndexedSlices&lt;/code&gt; instance.</source>
          <target state="translated">マスクされた &lt;code&gt;IndexedSlices&lt;/code&gt; インスタンス。</target>
        </trans-unit>
        <trans-unit id="221a20910838d03246163841206f72d038ef571a" translate="yes" xml:space="preserve">
          <source>The matrix &lt;code&gt;a&lt;/code&gt; must, following any transpositions, be a tensor of rank &amp;gt;= 2, with &lt;code&gt;shape(a)[-1] == shape(b)[-1]&lt;/code&gt;, and &lt;code&gt;shape(a)[:-2]&lt;/code&gt; able to broadcast with &lt;code&gt;shape(b)[:-1]&lt;/code&gt;.</source>
          <target state="translated">行列 &lt;code&gt;a&lt;/code&gt; は、任意の転置の後、ランク&amp;gt; = 2のテンソルでなければならず、 &lt;code&gt;shape(a)[-1] == shape(b)[-1]&lt;/code&gt; であり、 &lt;code&gt;shape(a)[:-2]&lt;/code&gt; は &lt;code&gt;shape(b)[:-1]&lt;/code&gt; でブロードキャストします。</target>
        </trans-unit>
        <trans-unit id="fd71aa391cda25307463e674c4cbc2ea6a909c84" translate="yes" xml:space="preserve">
          <source>The matrix can be used with &lt;a href=&quot;../tensordot&quot;&gt;&lt;code&gt;tf.tensordot&lt;/code&gt;&lt;/a&gt; to convert an arbitrary rank &lt;code&gt;Tensor&lt;/code&gt; of linear-scale spectral bins into the mel scale.</source>
          <target state="translated">この行列を&lt;a href=&quot;../tensordot&quot;&gt; &lt;code&gt;tf.tensordot&lt;/code&gt; &lt;/a&gt;と併用して、線形スケールのスペクトルビンの任意のランク &lt;code&gt;Tensor&lt;/code&gt; をメルスケールに変換できます。</target>
        </trans-unit>
        <trans-unit id="11e987b7f304f6e3dd583d8302496f7bf0e8c7c9" translate="yes" xml:space="preserve">
          <source>The matrix columns represent the prediction labels and the rows represent the real labels. The confusion matrix is always a 2-D array of shape &lt;code&gt;[n, n]&lt;/code&gt;, where &lt;code&gt;n&lt;/code&gt; is the number of valid labels for a given classification task. Both prediction and labels must be 1-D arrays of the same shape in order for this function to work.</source>
          <target state="translated">行列の列は予測ラベルを表し、行は実際のラベルを表します。混同行列は常に形状 &lt;code&gt;[n, n]&lt;/code&gt; 2次元配列です。ここで、 &lt;code&gt;n&lt;/code&gt; は特定の分類タスクの有効なラベルの数です。この関数が機能するためには、予測とラベルの両方が同じ形状の1次元配列でなければなりません。</target>
        </trans-unit>
        <trans-unit id="1b5db825d45e0c9d1dc6abe9745f59c698b3a58a" translate="yes" xml:space="preserve">
          <source>The matrix square root is computed by first reducing the matrix to quasi-triangular form with the real Schur decomposition. The square root of the quasi-triangular matrix is then computed directly. Details of the algorithm can be found in: Nicholas J. Higham, &quot;Computing real square roots of a real matrix&quot;, Linear Algebra Appl., 1987.</source>
          <target state="translated">行列の平方根は,まず,行列を実数のSchur分解を用いて準三角形の形に還元することで求められます.その後,準三角行列の平方根が直接計算されます.アルゴリズムの詳細は以下を参照してください。Nicholas J.Higham,&quot;Computing real square roots of a real matrix&quot;,Linear Algebra Appl.</target>
        </trans-unit>
        <trans-unit id="9a3f4491229c91cec072bbea8b93dd0af684f6f0" translate="yes" xml:space="preserve">
          <source>The matrix_inv, i.e., &lt;code&gt;tf.matrix_inverse(tf.linalg.lu_reconstruct(lu, perm))&lt;/code&gt;.</source>
          <target state="translated">The matrix_inv, i.e., &lt;code&gt;tf.matrix_inverse(tf.linalg.lu_reconstruct(lu, perm))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3cbe11326425a2d54b10de9163c8a24f5b723b61" translate="yes" xml:space="preserve">
          <source>The maximum depth of the batch queue. Defaults to 10.</source>
          <target state="translated">バッチキューの最大深度。デフォルトは 10 です。</target>
        </trans-unit>
        <trans-unit id="5e52e55f2b2b641c09e44a69eccc168205a706b2" translate="yes" xml:space="preserve">
          <source>The maximum error in between the two Jacobians.</source>
          <target state="translated">2つのヤコビアンの間の最大誤差。</target>
        </trans-unit>
        <trans-unit id="3be13be49d81cebdf3179f6f054bd1716af0f051" translate="yes" xml:space="preserve">
          <source>The maximum number of iterations allowed to run in parallel at any given time. Note that this does not guarantee parallel execution.</source>
          <target state="translated">任意の時間に並行して実行できる反復回数の最大値。これは並列実行を保証するものではないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="29ead67ff92bddff9eff04834e8bb493908a2db7" translate="yes" xml:space="preserve">
          <source>The maximum number of recent checkpoint files to keep. As new files are created, older files are deleted. If &lt;code&gt;None&lt;/code&gt; or 0, all checkpoint files are kept. Defaults to 5 (that is, the 5 most recent checkpoint files are kept). If a saver is passed to the estimator, this argument will be ignored.</source>
          <target state="translated">The maximum number of recent checkpoint files to keep. As new files are created, older files are deleted. If &lt;code&gt;None&lt;/code&gt; or 0, all checkpoint files are kept. Defaults to 5 (that is, the 5 most recent checkpoint files are kept). If a saver is passed to the estimator, this argument will be ignored.</target>
        </trans-unit>
        <trans-unit id="c842279a5926425077d49c4d323753d5555a6974" translate="yes" xml:space="preserve">
          <source>The maximum number of seconds to wait between checkpoints. If left as &lt;code&gt;None&lt;/code&gt;, then the process will wait indefinitely.</source>
          <target state="translated">The maximum number of seconds to wait between checkpoints. If left as &lt;code&gt;None&lt;/code&gt; , then the process will wait indefinitely.</target>
        </trans-unit>
        <trans-unit id="5fec7fdc53285af99f3c39f517df820603ae9970" translate="yes" xml:space="preserve">
          <source>The maximum number of shards in int created taking precedence over &lt;code&gt;max_shard_bytes&lt;/code&gt;.</source>
          <target state="translated">The maximum number of shards in int created taking precedence over &lt;code&gt;max_shard_bytes&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ce69417dfa16ffede7fef0c558fc36b98c931ccd" translate="yes" xml:space="preserve">
          <source>The maximum size any given shard is allowed to be.</source>
          <target state="translated">与えられたシャードの最大サイズ。</target>
        </trans-unit>
        <trans-unit id="b2f9f6a5b1ba47e00d259277177486caa909f7c3" translate="yes" xml:space="preserve">
          <source>The maximum size of the vocabulary for this layer. If None, there is no cap on the size of the vocabulary.</source>
          <target state="translated">このレイヤーのボキャブラリーの最大サイズ。Noneの場合、語彙のサイズの上限はありません。</target>
        </trans-unit>
        <trans-unit id="bf7f7963ad951a38de619a169bd063732ab43414" translate="yes" xml:space="preserve">
          <source>The maximum size of the vocabulary for this layer. If None, there is no cap on the size of the vocabulary. Note that this vocabulary contains 1 OOV token, so the effective number of tokens is &lt;code&gt;(max_tokens - 1 - (1 if output == &quot;int&quot; else 0))&lt;/code&gt;.</source>
          <target state="translated">The maximum size of the vocabulary for this layer. If None, there is no cap on the size of the vocabulary. Note that this vocabulary contains 1 OOV token, so the effective number of tokens is &lt;code&gt;(max_tokens - 1 - (1 if output == &quot;int&quot; else 0))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="823dcf626318cd7da7d9199f74b8dc7942281b83" translate="yes" xml:space="preserve">
          <source>The maximum size of the vocabulary for this layer. If None, there is no cap on the size of the vocabulary. Note that this vocabulary includes the OOV and mask tokens, so the effective number of tokens is (max_tokens - num_oov_indices - (1 if mask_token else 0))</source>
          <target state="translated">このレイヤーのボキャブラリーの最大サイズ。None の場合、ボキャブラリーのサイズに上限はない。この語彙には OOV とマスクトークンが含まれているので、有効なトークンの数は (max_tokens-num_oov_indices-(1 if mask_token else 0))であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="fce588fe3287d94ea0532f096d110229f0b8aff4" translate="yes" xml:space="preserve">
          <source>The maximum size of the vocabulary for this layer. If None, there is no cap on the size of the vocabulary. Note that this vocabulary includes the OOV and mask values, so the effective number of values is (max_values - num_oov_values - (1 if mask_token else 0))</source>
          <target state="translated">このレイヤーのボキャブラリーの最大サイズ。None の場合、ボキャブラリーのサイズに上限はない。このボキャブラリーには OOV 値とマスク値が含まれているので、有効な値の数は (max_values-num_oov_values-(1 if mask_token else 0))であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="2c20357476750adc337729874b4e2eabc8868c3d" translate="yes" xml:space="preserve">
          <source>The mean and variance are calculated by aggregating the contents of &lt;code&gt;x&lt;/code&gt; across &lt;code&gt;axes&lt;/code&gt;. If &lt;code&gt;x&lt;/code&gt; is 1-D and &lt;code&gt;axes = [0]&lt;/code&gt; this is just the mean and variance of a vector.</source>
          <target state="translated">平均と分散は、 &lt;code&gt;x&lt;/code&gt; の内容を &lt;code&gt;axes&lt;/code&gt; 全体に集約することによって計算されます。場合 &lt;code&gt;x&lt;/code&gt; 1-Dとなる &lt;code&gt;axes = [0]&lt;/code&gt; これは単なる平均値とベクトルの分散です。</target>
        </trans-unit>
        <trans-unit id="e3746fb2d4eae6a4ec87d65fc23bec2fa55150f2" translate="yes" xml:space="preserve">
          <source>The mean of Student's T equals &lt;code&gt;loc&lt;/code&gt; if &lt;code&gt;df &amp;gt; 1&lt;/code&gt;, otherwise it is &lt;code&gt;NaN&lt;/code&gt;. If &lt;code&gt;self.allow_nan_stats=True&lt;/code&gt;, then an exception will be raised rather than returning &lt;code&gt;NaN&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;df &amp;gt; 1&lt;/code&gt; 場合、スチューデントのTの平均は &lt;code&gt;loc&lt;/code&gt; に等しく、それ以外の場合は &lt;code&gt;NaN&lt;/code&gt; です。 &lt;code&gt;self.allow_nan_stats=True&lt;/code&gt; の場合、 &lt;code&gt;NaN&lt;/code&gt; を返すのではなく、例外が発生します。</target>
        </trans-unit>
        <trans-unit id="66b167be0f051cc6e8d71c967e67b0309cb7feab" translate="yes" xml:space="preserve">
          <source>The meaning of &lt;code&gt;query&lt;/code&gt;, &lt;code&gt;value&lt;/code&gt; and &lt;code&gt;key&lt;/code&gt; depend on the application. In the case of text similarity, for example, &lt;code&gt;query&lt;/code&gt; is the sequence embeddings of the first piece of text and &lt;code&gt;value&lt;/code&gt; is the sequence embeddings of the second piece of text. &lt;code&gt;key&lt;/code&gt; is usually the same tensor as &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;query&lt;/code&gt; 、 &lt;code&gt;value&lt;/code&gt; 、および &lt;code&gt;key&lt;/code&gt; の意味は、アプリケーションによって異なります。たとえば、テキストの類似性の場合、 &lt;code&gt;query&lt;/code&gt; は最初のテキストのシーケンスの埋め込みであり、 &lt;code&gt;value&lt;/code&gt; は2番目のテキストのシーケンスの埋め込みです。 &lt;code&gt;key&lt;/code&gt; は通常、 &lt;code&gt;value&lt;/code&gt; と同じテンソルです。</target>
        </trans-unit>
        <trans-unit id="92510595be575a3f901083a76e505b27be4bea36" translate="yes" xml:space="preserve">
          <source>The meaning of setting &lt;code&gt;layer.trainable = False&lt;/code&gt; is to freeze the layer, i.e. its internal state will not change during training: its trainable weights will not be updated during &lt;code&gt;fit()&lt;/code&gt; or &lt;code&gt;train_on_batch()&lt;/code&gt;, and its state updates will not be run.</source>
          <target state="translated">&lt;code&gt;layer.trainable = False&lt;/code&gt; を設定する意味は、レイヤーをフリーズすることです。つまり、その内部状態はトレーニング中に変更されません。そのトレーニング可能な重みは、 &lt;code&gt;fit()&lt;/code&gt; または &lt;code&gt;train_on_batch()&lt;/code&gt; 中に更新されず、状態の更新は実行されません。</target>
        </trans-unit>
        <trans-unit id="528237c36c5e86dd6df7548b941e9ca56236a205" translate="yes" xml:space="preserve">
          <source>The message string describing the failure.</source>
          <target state="translated">失敗を説明するメッセージ文字列。</target>
        </trans-unit>
        <trans-unit id="529560d839d515582efcee9c67d4aa3e5b977208" translate="yes" xml:space="preserve">
          <source>The message to be logged.</source>
          <target state="translated">ログに記録されるメッセージ。</target>
        </trans-unit>
        <trans-unit id="927b26e1d502dee1491ea322ed177902d5b783af" translate="yes" xml:space="preserve">
          <source>The message to be printed if the test fails.</source>
          <target state="translated">テストが失敗した場合に表示されるメッセージ。</target>
        </trans-unit>
        <trans-unit id="dc3b5afc215b729af496233be8e56b7e96ac2370" translate="yes" xml:space="preserve">
          <source>The method is primarily intended for use by higher level checkpoint management utilities that use &lt;code&gt;write()&lt;/code&gt; instead of &lt;code&gt;save()&lt;/code&gt; and have their own mechanisms to number and track checkpoints.</source>
          <target state="translated">The method is primarily intended for use by higher level checkpoint management utilities that use &lt;code&gt;write()&lt;/code&gt; instead of &lt;code&gt;save()&lt;/code&gt; and have their own mechanisms to number and track checkpoints.</target>
        </trans-unit>
        <trans-unit id="ae04b245da8a7e16dadcfeccbc7fd1f3884fcfad" translate="yes" xml:space="preserve">
          <source>The method returns the path prefix of the newly created checkpoint files. This string can be passed directly to a call to &lt;code&gt;restore()&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、新しく作成されたチェックポイントファイルのパスプレフィックスを返します。この文字列は、 &lt;code&gt;restore()&lt;/code&gt; の呼び出しに直接渡すことができます。</target>
        </trans-unit>
        <trans-unit id="1836c8d92cb040c17ca773b41548d6aa87cf1d6f" translate="yes" xml:space="preserve">
          <source>The method sums gradients from all replicas in the presence of &lt;a href=&quot;../../../distribute/strategy&quot;&gt;&lt;code&gt;tf.distribute.Strategy&lt;/code&gt;&lt;/a&gt; by default. You can aggregate gradients yourself by passing &lt;code&gt;experimental_aggregate_gradients=False&lt;/code&gt;.</source>
          <target state="translated">The method sums gradients from all replicas in the presence of &lt;a href=&quot;../../../distribute/strategy&quot;&gt; &lt;code&gt;tf.distribute.Strategy&lt;/code&gt; &lt;/a&gt; by default. You can aggregate gradients yourself by passing &lt;code&gt;experimental_aggregate_gradients=False&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e0ac25102d39a598793fa8f0fe151f95b652dfdf" translate="yes" xml:space="preserve">
          <source>The method sums gradients from all replicas in the presence of &lt;a href=&quot;../../distribute/strategy&quot;&gt;&lt;code&gt;tf.distribute.Strategy&lt;/code&gt;&lt;/a&gt; by default. You can aggregate gradients yourself by passing &lt;code&gt;experimental_aggregate_gradients=False&lt;/code&gt;.</source>
          <target state="translated">The method sums gradients from all replicas in the presence of &lt;a href=&quot;../../distribute/strategy&quot;&gt; &lt;code&gt;tf.distribute.Strategy&lt;/code&gt; &lt;/a&gt; by default. You can aggregate gradients yourself by passing &lt;code&gt;experimental_aggregate_gradients=False&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6ff8c3ac6acac3abb6a93f8bb5141bf050b9a99b" translate="yes" xml:space="preserve">
          <source>The method to wrap.</source>
          <target state="translated">包む方法です。</target>
        </trans-unit>
        <trans-unit id="3c6e6621d848cf3b840ae66983d6900ad6f06a8b" translate="yes" xml:space="preserve">
          <source>The metric creates two local variables, &lt;code&gt;true_positives&lt;/code&gt; and &lt;code&gt;false_positives&lt;/code&gt; that are used to compute the precision. This value is ultimately returned as &lt;code&gt;precision&lt;/code&gt;, an idempotent operation that simply divides &lt;code&gt;true_positives&lt;/code&gt; by the sum of &lt;code&gt;true_positives&lt;/code&gt; and &lt;code&gt;false_positives&lt;/code&gt;.</source>
          <target state="translated">メトリックは、精度の計算に使用される2つのローカル変数、 &lt;code&gt;true_positives&lt;/code&gt; および &lt;code&gt;false_positives&lt;/code&gt; を作成します。この値は、最終的には &lt;code&gt;precision&lt;/code&gt; として返されます。これは、 &lt;code&gt;true_positives&lt;/code&gt; と &lt;code&gt;false_positives&lt;/code&gt; の合計でtrue_positivesを単純に除算する &lt;code&gt;true_positives&lt;/code&gt; 等演算です。</target>
        </trans-unit>
        <trans-unit id="a1847f02504cca83cac29940c7bc8134ccc574f2" translate="yes" xml:space="preserve">
          <source>The min and max can be the same size as &lt;code&gt;t&lt;/code&gt;, or broadcastable to that size.</source>
          <target state="translated">The min and max can be the same size as &lt;code&gt;t&lt;/code&gt; , or broadcastable to that size.</target>
        </trans-unit>
        <trans-unit id="c879ab9978d630c89fff8cae92e9db4343f09490" translate="yes" xml:space="preserve">
          <source>The minibatch size &lt;code&gt;N&lt;/code&gt; is extracted from &lt;code&gt;sparse_shape[0]&lt;/code&gt;.</source>
          <target state="translated">ミニバッチサイズ &lt;code&gt;N&lt;/code&gt; はsparse_shape &lt;code&gt;sparse_shape[0]&lt;/code&gt; から抽出されます。</target>
        </trans-unit>
        <trans-unit id="e7bc279c2507aa25ef22019845fdd46f52af29f0" translate="yes" xml:space="preserve">
          <source>The minimum number of seconds between yielding checkpoints.</source>
          <target state="translated">降伏チェックポイント間の最短秒数。</target>
        </trans-unit>
        <trans-unit id="e2ce5fd43a91250f68e4b68161729fe63f5fffc0" translate="yes" xml:space="preserve">
          <source>The minimum value to clip to. A scalar &lt;code&gt;Tensor&lt;/code&gt; or one that is broadcastable to the shape of &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">The minimum value to clip to. A scalar &lt;code&gt;Tensor&lt;/code&gt; or one that is broadcastable to the shape of &lt;code&gt;t&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="adafbd0cce3b5754618ae2da17c9902f6cae336a" translate="yes" xml:space="preserve">
          <source>The mode of a gamma distribution is &lt;code&gt;(shape - 1) / rate&lt;/code&gt; when &lt;code&gt;shape &amp;gt; 1&lt;/code&gt;, and &lt;code&gt;NaN&lt;/code&gt; otherwise. If &lt;code&gt;self.allow_nan_stats&lt;/code&gt; is &lt;code&gt;False&lt;/code&gt;, an exception will be raised rather than returning &lt;code&gt;NaN&lt;/code&gt;.</source>
          <target state="translated">ガンマ分布のモードである &lt;code&gt;(shape - 1) / rate&lt;/code&gt; 場合 &lt;code&gt;shape &amp;gt; 1&lt;/code&gt; 、及び &lt;code&gt;NaN&lt;/code&gt; に別段。 &lt;code&gt;self.allow_nan_stats&lt;/code&gt; が &lt;code&gt;False&lt;/code&gt; の場合、 &lt;code&gt;NaN&lt;/code&gt; を返すのではなく、例外が発生します。</target>
        </trans-unit>
        <trans-unit id="ccf3763dcb0dcb0536020350fdb380b642b68362" translate="yes" xml:space="preserve">
          <source>The model architecture, allowing to re-instantiate the model.</source>
          <target state="translated">モデルの再インスタンス化を可能にするモデルアーキテクチャ。</target>
        </trans-unit>
        <trans-unit id="2c5272bf28fc9b4f93ddcbb47262f8771af50748" translate="yes" xml:space="preserve">
          <source>The model weights.</source>
          <target state="translated">モデルの重み。</target>
        </trans-unit>
        <trans-unit id="ea7ad3d000098fbd9c3f8078136ad7545a66a1a5" translate="yes" xml:space="preserve">
          <source>The monitoring result is a light weight performance summary of your model execution. This method will block the caller thread until it receives the monitoring result. This method currently supports Cloud TPU only.</source>
          <target state="translated">モニタリング結果は、モデル実行の軽量なパフォーマンスサマリーです。このメソッドは、モニタリング結果を受け取るまで呼び出し元のスレッドをブロックします。このメソッドは現在Cloud TPUのみをサポートしています。</target>
        </trans-unit>
        <trans-unit id="ff3e822749aa45b217109835dbb8a4c4930f2cb5" translate="yes" xml:space="preserve">
          <source>The most basic RNN cell.</source>
          <target state="translated">最も基本的なRNN細胞。</target>
        </trans-unit>
        <trans-unit id="92ef4fa2dcf9047cf590c368e2e76fcb4cd1ce27" translate="yes" xml:space="preserve">
          <source>The most common initialization pattern is to use the convenience function &lt;code&gt;global_variables_initializer()&lt;/code&gt; to add an Op to the graph that initializes all the variables. You then run that Op after launching the graph.</source>
          <target state="translated">最も一般的な初期化パターンは、便利な関数 &lt;code&gt;global_variables_initializer()&lt;/code&gt; を使用して、すべての変数を初期化するOpをグラフに追加することです。次に、グラフを起動した後にそのOpを実行します。</target>
        </trans-unit>
        <trans-unit id="be28bd956ec3dd71f96903bf3e90304d770c19da" translate="yes" xml:space="preserve">
          <source>The most common use case for this function occurs when feature ids and their corresponding values are stored in &lt;code&gt;Example&lt;/code&gt; protos on disk. &lt;code&gt;parse_example&lt;/code&gt; will return a batch of ids and a batch of values, and this function joins them into a single logical &lt;code&gt;SparseTensor&lt;/code&gt; for use in functions such as &lt;code&gt;sparse_tensor_dense_matmul&lt;/code&gt;, &lt;code&gt;sparse_to_dense&lt;/code&gt;, etc.</source>
          <target state="translated">この関数の最も一般的な使用例は、機能IDとそれに対応する値がディスク上の &lt;code&gt;Example&lt;/code&gt; プロトに格納されている場合です。 &lt;code&gt;parse_example&lt;/code&gt; はIDのバッチと値のバッチを返し、この関数はそれらを1つの論理 &lt;code&gt;SparseTensor&lt;/code&gt; に結合して、 &lt;code&gt;sparse_tensor_dense_matmul&lt;/code&gt; 、 &lt;code&gt;sparse_to_dense&lt;/code&gt; などの関数で使用します。</target>
        </trans-unit>
        <trans-unit id="a69bd33774ebc03eef1cf8370253b0bcf30e7aa7" translate="yes" xml:space="preserve">
          <source>The moving average 'x' is updated with 'value' following:</source>
          <target state="translated">移動平均線'x'は'値'に続いて更新されます。</target>
        </trans-unit>
        <trans-unit id="76823a81079db8809cfb267b11ddd3da1ded660e" translate="yes" xml:space="preserve">
          <source>The moving average momentum.</source>
          <target state="translated">移動平均線のモメンタム。</target>
        </trans-unit>
        <trans-unit id="4c37b111e7c1a2dfc5ac3657ac3eb40f6697f662" translate="yes" xml:space="preserve">
          <source>The moving averages are computed using exponential decay. You specify the decay value when creating the &lt;code&gt;ExponentialMovingAverage&lt;/code&gt; object. The shadow variables are initialized with the same initial values as the trained variables. When you run the ops to maintain the moving averages, each shadow variable is updated with the formula:</source>
          <target state="translated">移動平均は指数関数的減衰を使用して計算されます。 &lt;code&gt;ExponentialMovingAverage&lt;/code&gt; オブジェクトを作成するときに、減衰値を指定します。シャドウ変数は、トレーニングされた変数と同じ初期値で初期化されます。opsを実行して移動平均を維持すると、各シャドウ変数は次の式で更新されます。</target>
        </trans-unit>
        <trans-unit id="f305dca235c43ee1a853f11ce26d4431d5e87ca7" translate="yes" xml:space="preserve">
          <source>The multiplier to use when increasing or decreasing the loss scale.</source>
          <target state="translated">損失規模を増減させるときに使用する乗数。</target>
        </trans-unit>
        <trans-unit id="3435f5d772da81bd99891e4904cc5b3c397d1c9f" translate="yes" xml:space="preserve">
          <source>The name argument that is passed to the op function.</source>
          <target state="translated">op関数に渡される名前の引数。</target>
        </trans-unit>
        <trans-unit id="d20e166c1cf227f369943da2e63973914a88b08e" translate="yes" xml:space="preserve">
          <source>The name associated with the object, or the default Python name if the object is not registered.</source>
          <target state="translated">オブジェクトに関連付けられた名前、またはオブジェクトが登録されていない場合はデフォルトのPython名。</target>
        </trans-unit>
        <trans-unit id="2171b8f310d13c802a9a28d101182783fe8adb9e" translate="yes" xml:space="preserve">
          <source>The name for an operation.</source>
          <target state="translated">操作の名前です。</target>
        </trans-unit>
        <trans-unit id="2717d81e9c492087a9d97bf3dcb31386b0e2f366" translate="yes" xml:space="preserve">
          <source>The name of a device to which elements will be copied.</source>
          <target state="translated">要素がコピーされるデバイスの名前。</target>
        </trans-unit>
        <trans-unit id="e102ebd7e44cf3878287ddf4c08d8cb2be4fd58f" translate="yes" xml:space="preserve">
          <source>The name of the &lt;code&gt;Operation&lt;/code&gt; to return.</source>
          <target state="translated">The name of the &lt;code&gt;Operation&lt;/code&gt; to return.</target>
        </trans-unit>
        <trans-unit id="aec966e4ab5b0c806f06d99f9dc3e1f466185982" translate="yes" xml:space="preserve">
          <source>The name of the &lt;code&gt;Tensor&lt;/code&gt; to return.</source>
          <target state="translated">The name of the &lt;code&gt;Tensor&lt;/code&gt; to return.</target>
        </trans-unit>
        <trans-unit id="94df2d413ae96a0a117fa46769022f06a44e6ff4" translate="yes" xml:space="preserve">
          <source>The name of the &lt;code&gt;TensorArray&lt;/code&gt; (even if passed in) is uniquified: each time a new &lt;code&gt;TensorArray&lt;/code&gt; is created at runtime it is assigned its own name for the duration of the run. This avoids name collisions if a &lt;code&gt;TensorArray&lt;/code&gt; is created within a &lt;code&gt;while_loop&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;TensorArray&lt;/code&gt; の名前は（渡された場合でも） &lt;code&gt;TensorArray&lt;/code&gt; されています。実行時に新しいTensorArrayが作成されるたびに、実行中に独自の名前が割り当てられます。場合、これは名前の衝突を回避 &lt;code&gt;TensorArray&lt;/code&gt; が内に作成され &lt;code&gt;while_loop&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f394dc9c1e1c5f94915c443c9936510156504edb" translate="yes" xml:space="preserve">
          <source>The name of the TPU job. Typically, this name is auto-inferred within TPUEstimator, however when using ClusterSpec propagation in more esoteric cluster configurations, you may need to specify the job name as a string.</source>
          <target state="translated">TPU ジョブの名前。通常、この名前は TPUEstimator 内で自動的に推測されますが、より複雑なクラスタ構成で ClusterSpec 伝搬を使用する場合は、ジョブ名を文字列で指定する必要があるかもしれません。</target>
        </trans-unit>
        <trans-unit id="a1aa3a17d239638bffd8da87470925d90fc14587" translate="yes" xml:space="preserve">
          <source>The name of the activation function.</source>
          <target state="translated">活性化機能の名前です。</target>
        </trans-unit>
        <trans-unit id="d1fad2a11c1fa88593c78a2b8dbc37f823e55dcb" translate="yes" xml:space="preserve">
          <source>The name of the attr to fetch.</source>
          <target state="translated">取得するattrの名前。</target>
        </trans-unit>
        <trans-unit id="51b48f4480def25ba4d61ddbb25309d908422157" translate="yes" xml:space="preserve">
          <source>The name of the attribute to change.</source>
          <target state="translated">変更する属性の名前。</target>
        </trans-unit>
        <trans-unit id="3411600001d2f7bf3a52d4bd93fdb012e4af3205" translate="yes" xml:space="preserve">
          <source>The name of the attribute to modify.</source>
          <target state="translated">変更する属性の名前です。</target>
        </trans-unit>
        <trans-unit id="dbb0bb41743f114fce1ea1f179c3a700f65b6093" translate="yes" xml:space="preserve">
          <source>The name of the decorator. If &lt;code&gt;None&lt;/code&gt;, the name of the function calling make_decorator.</source>
          <target state="translated">The name of the decorator. If &lt;code&gt;None&lt;/code&gt; , the name of the function calling make_decorator.</target>
        </trans-unit>
        <trans-unit id="8fcdbd427dc016b6defe717193d13e8a5ff2954b" translate="yes" xml:space="preserve">
          <source>The name of the device on which &lt;code&gt;values&lt;/code&gt; will be produced, or &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;values&lt;/code&gt; が生成されるデバイスの名前、または &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="37ecde1c1b33e8dfdb61f844e3753c1a790bb482" translate="yes" xml:space="preserve">
          <source>The name of the device on which this tensor will be produced, or None.</source>
          <target state="translated">このテンソルが生成されるデバイスの名前、または None。</target>
        </trans-unit>
        <trans-unit id="513390ceda7c6a57cd491aa38c353737462bdd7c" translate="yes" xml:space="preserve">
          <source>The name of the device to which this op has been assigned, if any.</source>
          <target state="translated">このオペアンプが割り当てられたデバイスの名前(もしあれば)。</target>
        </trans-unit>
        <trans-unit id="0484306d12f825b7f062712ebb91e1e5070c26cd" translate="yes" xml:space="preserve">
          <source>The name of the layer (string).</source>
          <target state="translated">レイヤーの名前(文字列)。</target>
        </trans-unit>
        <trans-unit id="0e0dea9bfe26a7beb65886a09d49cbd06a620222" translate="yes" xml:space="preserve">
          <source>The name of the local job.</source>
          <target state="translated">ローカルジョブの名前です。</target>
        </trans-unit>
        <trans-unit id="cf636fc4624183a99bcc4c7c7fbe0a44c0ebb8f7" translate="yes" xml:space="preserve">
          <source>The name of the module which registered the flag with this name. If no such module exists (i.e. no flag with this name exists), we return default.</source>
          <target state="translated">この名前のフラグを登録したモジュールの名前です。そのようなモジュールが存在しない場合(つまり、この名前のフラグが存在しない場合)、デフォルトを返します。</target>
        </trans-unit>
        <trans-unit id="d507fbefee6f858beaba994a2d5222c827f1ac97" translate="yes" xml:space="preserve">
          <source>The name of the new or existing variable.</source>
          <target state="translated">新規または既存の変数の名前。</target>
        </trans-unit>
        <trans-unit id="5bc9ed5993c993f81f4eb7f3f3150297cebf93a8" translate="yes" xml:space="preserve">
          <source>The name of the op.</source>
          <target state="translated">op.の名前です。</target>
        </trans-unit>
        <trans-unit id="48b66664c86691b5553fd1d2c5bdf4eaa5d9161f" translate="yes" xml:space="preserve">
          <source>The name of the operation to be created</source>
          <target state="translated">作成する操作の名前</target>
        </trans-unit>
        <trans-unit id="ca71906a25ae77a1092de8617dc7e418a294cb12" translate="yes" xml:space="preserve">
          <source>The name of the output &lt;code&gt;SparseTensor&lt;/code&gt;.</source>
          <target state="translated">The name of the output &lt;code&gt;SparseTensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2e6f9aa3bfdd3d1620c355dda8c15d6285fa32c9" translate="yes" xml:space="preserve">
          <source>The name of the output &lt;code&gt;Tensor&lt;/code&gt; (optional).</source>
          <target state="translated">The name of the output &lt;code&gt;Tensor&lt;/code&gt; (optional).</target>
        </trans-unit>
        <trans-unit id="c7f41644b081b946d6a6996c5793e8e0c8a0ca0c" translate="yes" xml:space="preserve">
          <source>The name of the returned tensor.</source>
          <target state="translated">返されたテンソルの名前。</target>
        </trans-unit>
        <trans-unit id="5d3b4cc387786491f2cb51bc2065fde0324f391f" translate="yes" xml:space="preserve">
          <source>The name of the scope itself can be captured by &lt;code&gt;with g.name_scope(...) as scope:&lt;/code&gt;, which stores the name of the scope in the variable &lt;code&gt;scope&lt;/code&gt;. This value can be used to name an operation that represents the overall result of executing the ops in a scope. For example:</source>
          <target state="translated">スコープ自体の名前は、 &lt;code&gt;with g.name_scope(...) as scope:&lt;/code&gt; キャプチャできます。これにより、スコープの名前が変数 &lt;code&gt;scope&lt;/code&gt; に格納されます。この値を使用して、スコープ内で操作を実行した結果全体を表す操作を指定できます。例えば：</target>
        </trans-unit>
        <trans-unit id="c5bdc797aad3e657271b859b7dc8d873a1c5776b" translate="yes" xml:space="preserve">
          <source>The name of the table.</source>
          <target state="translated">テーブルの名前です。</target>
        </trans-unit>
        <trans-unit id="29294a5bc0faead00c55b881e7f2f01d1f8fd3c6" translate="yes" xml:space="preserve">
          <source>The name of the trace event.</source>
          <target state="translated">トレースイベントの名前です。</target>
        </trans-unit>
        <trans-unit id="4f8f2953a3d445a0fc6a56065d426682fba17223" translate="yes" xml:space="preserve">
          <source>The name of the underlying accumulator.</source>
          <target state="translated">基礎となるアキュムレータの名前。</target>
        </trans-unit>
        <trans-unit id="96809ba43c27a83619ec011b30fe50853f001590" translate="yes" xml:space="preserve">
          <source>The name of the underlying queue.</source>
          <target state="translated">基底にあるキューの名前。</target>
        </trans-unit>
        <trans-unit id="f89f168ead7cdce407789bc51f70ca1fc8c5be20" translate="yes" xml:space="preserve">
          <source>The name of this &lt;code&gt;IndexedSlices&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;IndexedSlices&lt;/code&gt; の名前。</target>
        </trans-unit>
        <trans-unit id="da911221082c7da030b3afee2bb6138d5ed15e00" translate="yes" xml:space="preserve">
          <source>The name of this ExponentialMovingAverage object.</source>
          <target state="translated">このExponentialMovingAverageオブジェクトの名前。</target>
        </trans-unit>
        <trans-unit id="a0b8c507e7f0e7b6a1373421e05579d1965778f3" translate="yes" xml:space="preserve">
          <source>The name of this head.</source>
          <target state="translated">この頭の名前。</target>
        </trans-unit>
        <trans-unit id="d713b72d40825a59e98f4bc908a8370877bdd57f" translate="yes" xml:space="preserve">
          <source>The name of this variable.</source>
          <target state="translated">この変数の名前。</target>
        </trans-unit>
        <trans-unit id="1d01abc5e97d43035681b7621f742a7e0e4f87f3" translate="yes" xml:space="preserve">
          <source>The name or URL of the session master.</source>
          <target state="translated">セッションマスターの名前またはURL。</target>
        </trans-unit>
        <trans-unit id="22b1df8c09c11cf1299228c2a025d453b2932406" translate="yes" xml:space="preserve">
          <source>The name passed to &lt;a href=&quot;../../name_scope&quot;&gt;&lt;code&gt;tf.name_scope&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The name passed to &lt;a href=&quot;../../name_scope&quot;&gt; &lt;code&gt;tf.name_scope&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="647b627abb244e52e977dfb90e76736f5a70efdc" translate="yes" xml:space="preserve">
          <source>The name to look up.</source>
          <target state="translated">調べる名前。</target>
        </trans-unit>
        <trans-unit id="25e36e7449d4e0998fc78c6e3977716de004b31a" translate="yes" xml:space="preserve">
          <source>The name to serialize this class under in this package. If None, the class' name will be used.</source>
          <target state="translated">このパッケージでこのクラスをシリアライズする名前。None の場合は、クラス名が使用されます。</target>
        </trans-unit>
        <trans-unit id="2c8e14eb227eb8d0282158234a5e6ae09b22ded5" translate="yes" xml:space="preserve">
          <source>The name to use for the coordinator. Set to None if the coordinator should not be included in the computed ClusterSpec.</source>
          <target state="translated">コーディネータに使用する名前です。コーディネータが計算されたClusterSpecに含まれない場合はNoneに設定します。</target>
        </trans-unit>
        <trans-unit id="5beb388dc9de0f3a44e8c2ae92390e5cddbd00f3" translate="yes" xml:space="preserve">
          <source>The name to use when creating the execute operation.</source>
          <target state="translated">実行操作を作成する際に使用する名前です。</target>
        </trans-unit>
        <trans-unit id="be158487fb11e20f31b9a766e704ebc058b51521" translate="yes" xml:space="preserve">
          <source>The named axis labels may be any single character other than those having special meaning, namely &lt;code&gt;,.-&amp;gt;&lt;/code&gt;. The behavior of this Op is undefined if it receives an ill-formatted equation; since the validation is done at graph-building time, we omit format validation checks at runtime.</source>
          <target state="translated">The named axis labels may be any single character other than those having special meaning, namely &lt;code&gt;,.-&amp;gt;&lt;/code&gt; . The behavior of this Op is undefined if it receives an ill-formatted equation; since the validation is done at graph-building time, we omit format validation checks at runtime.</target>
        </trans-unit>
        <trans-unit id="947e2daa3bb98d0bc923e5ca008b708b99d1db05" translate="yes" xml:space="preserve">
          <source>The natural log of the determinant of &lt;code&gt;matrix&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;matrix&lt;/code&gt; の自然対数。</target>
        </trans-unit>
        <trans-unit id="ca6f16df867a9e980034d2567f42c641b28a79b7" translate="yes" xml:space="preserve">
          <source>The need for a manually selected global learning rate</source>
          <target state="translated">手動で選択したグローバル学習率の必要性</target>
        </trans-unit>
        <trans-unit id="e172fe7e51a351d69f78266150cbe93d41a966dd" translate="yes" xml:space="preserve">
          <source>The need for transposed convolutions generally arises from the desire to use a transformation going in the opposite direction of a normal convolution, i.e., from something that has the shape of the output of some convolution to something that has the shape of its input while maintaining a connectivity pattern that is compatible with said convolution.</source>
          <target state="translated">転置された畳み込みの必要性は、一般に、通常の畳み込みの反対方向に向かう変換、すなわち、ある畳み込みの出力の形状を有するものから、前記畳み込みと互換性のある接続パターンを維持しながら、その入力の形状を有するものへの変換を使用したいという願望から生じる。</target>
        </trans-unit>
        <trans-unit id="497bcc780928cec8678167a0943cfb8a236572bc" translate="yes" xml:space="preserve">
          <source>The nest is or contains a dict with non-sortable keys.</source>
          <target state="translated">ネストは、ソート不可能なキーを持つdictを含んでいるか、または含んでいます。</target>
        </trans-unit>
        <trans-unit id="87443d4ab1ed1b3ecff97672f0081e558c9e3e8c" translate="yes" xml:space="preserve">
          <source>The nested structure of &lt;code&gt;Tensor&lt;/code&gt;s to all-reduce. The structure must be compatible with &lt;a href=&quot;../nest&quot;&gt;&lt;code&gt;tf.nest&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The nested structure of &lt;code&gt;Tensor&lt;/code&gt; s to all-reduce. The structure must be compatible with &lt;a href=&quot;../nest&quot;&gt; &lt;code&gt;tf.nest&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="591766edefc12d264f15ba10d8ba1725a7aa8e44" translate="yes" xml:space="preserve">
          <source>The new axis location matches Python &lt;code&gt;list.insert(axis, 1)&lt;/code&gt;:</source>
          <target state="translated">The new axis location matches Python &lt;code&gt;list.insert(axis, 1)&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="958033fa33493f00248ba20803119af783c47f8d" translate="yes" xml:space="preserve">
          <source>The new batch size pulled from the queue.</source>
          <target state="translated">キューから引き出された新しいバッチサイズ。</target>
        </trans-unit>
        <trans-unit id="3db6116c7d99fcd620f590077cbf1f7679e81227" translate="yes" xml:space="preserve">
          <source>The new callable signature of this decorator.</source>
          <target state="translated">このデコレーターの新しい呼び出し可能なシグネチャー。</target>
        </trans-unit>
        <trans-unit id="a92087301e7ffb88316b9135c1aafd2aa583aa2a" translate="yes" xml:space="preserve">
          <source>The new default value.</source>
          <target state="translated">新しいデフォルト値です。</target>
        </trans-unit>
        <trans-unit id="e63348dbbced4923128564bd3253cc502100689d" translate="yes" xml:space="preserve">
          <source>The new generator will be initialized by one of the following ways, with decreasing precedence: (1) If &lt;code&gt;copy_from&lt;/code&gt; is not None, the new generator is initialized by copying information from another generator. (3) If &lt;code&gt;state&lt;/code&gt; and &lt;code&gt;alg&lt;/code&gt; are not None (they must be set together), the new generator is initialized by a state.</source>
          <target state="translated">新しいジェネレーターは、次のいずれかの方法で初期化され、優先順位が低くなります。（1） &lt;code&gt;copy_from&lt;/code&gt; がNoneでない場合、新しいジェネレーターは別のジェネレーターから情報をコピーすることによって初期化されます。（3） &lt;code&gt;state&lt;/code&gt; と &lt;code&gt;alg&lt;/code&gt; がNoneでない場合（一緒に設定する必要があります）、新しいジェネレーターはstateによって初期化されます。</target>
        </trans-unit>
        <trans-unit id="8cbbc58e1d6e45f7538d48a88e9145ff0816310e" translate="yes" xml:space="preserve">
          <source>The new generator.</source>
          <target state="translated">新しい発電機です。</target>
        </trans-unit>
        <trans-unit id="c92d3a1d88d5bb846fb6922638676753f654e62e" translate="yes" xml:space="preserve">
          <source>The new generators will be put on the current device (possible different from the old generator's), for example:</source>
          <target state="translated">新しい発電機は、例えば、現在の装置(古い発電機のものとは異なる可能性がある)に置かれる。</target>
        </trans-unit>
        <trans-unit id="aed9e7e391104d869576ed733d9adb3a806218e3" translate="yes" xml:space="preserve">
          <source>The new value for the attribute.</source>
          <target state="translated">属性の新しい値。</target>
        </trans-unit>
        <trans-unit id="b9b227961e3d04545a92b5ce44cb233f0e0e2e32" translate="yes" xml:space="preserve">
          <source>The new value of the attribute.</source>
          <target state="translated">属性の新しい値。</target>
        </trans-unit>
        <trans-unit id="e426c7afe47b5f55c3dfa85e599a773e3d38d777" translate="yes" xml:space="preserve">
          <source>The new variable is added to the graph collections listed in &lt;code&gt;collections&lt;/code&gt;, which defaults to &lt;code&gt;[GraphKeys.GLOBAL_VARIABLES]&lt;/code&gt;.</source>
          <target state="translated">新しい変数にリストされているグラフコレクションに追加される &lt;code&gt;collections&lt;/code&gt; 、デフォルト &lt;code&gt;[GraphKeys.GLOBAL_VARIABLES]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b23ad53a08722aede7339ef0814174529ec55158" translate="yes" xml:space="preserve">
          <source>The next element in the queue, i.e. a tuple &lt;code&gt;(inputs, targets)&lt;/code&gt; or &lt;code&gt;(inputs, targets, sample_weights)&lt;/code&gt;.</source>
          <target state="translated">キューの次の要素、つまりタプル &lt;code&gt;(inputs, targets)&lt;/code&gt; または &lt;code&gt;(inputs, targets, sample_weights)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="44b4a8428f7aea36b41515b3369e33369a93a616" translate="yes" xml:space="preserve">
          <source>The node to be assigned to a device. Could be either an ops.Operation or NodeDef.</source>
          <target state="translated">デバイスに割り当てるノード。ops.Operation または NodeDef のいずれかになります。</target>
        </trans-unit>
        <trans-unit id="8bc3974c53a4bc03fb9e4842cff39c86a0d8870a" translate="yes" xml:space="preserve">
          <source>The non-zero values in the represented dense tensor.</source>
          <target state="translated">表現された密テンソルの非ゼロ値。</target>
        </trans-unit>
        <trans-unit id="a794ea3a692cf3249d1fcc991ee60c5b4cf01417" translate="yes" xml:space="preserve">
          <source>The normal &lt;code&gt;ServingInputReceiver&lt;/code&gt; always returns a feature dict, even if it contains only one entry, and so can be used only with models that accept such a dict. For models that accept only a single raw feature, the &lt;code&gt;serving_input_receiver_fn&lt;/code&gt; provided to &lt;a href=&quot;../../compat/v1/estimator/estimator#export_saved_model&quot;&gt;&lt;code&gt;Estimator.export_saved_model()&lt;/code&gt;&lt;/a&gt; should return this &lt;code&gt;TensorServingInputReceiver&lt;/code&gt; instead. See: https://github.com/tensorflow/tensorflow/issues/11674</source>
          <target state="translated">通常の &lt;code&gt;ServingInputReceiver&lt;/code&gt; は、エントリが1つしか含まれていない場合でも常に機能ディクショナリを返すため、そのようなディクショナリを受け入れるモデルでのみ使用できます。唯一の生の機能を受け入れるモデルの場合、 &lt;code&gt;serving_input_receiver_fn&lt;/code&gt; に提供&lt;a href=&quot;../../compat/v1/estimator/estimator#export_saved_model&quot;&gt; &lt;code&gt;Estimator.export_saved_model()&lt;/code&gt; &lt;/a&gt;この返す必要があります &lt;code&gt;TensorServingInputReceiver&lt;/code&gt; を代わりに。参照：https://github.com/tensorflow/tensorflow/issues/11674</target>
        </trans-unit>
        <trans-unit id="991f940c882656d1963be8e5f9d6859e831fc269" translate="yes" xml:space="preserve">
          <source>The normalization to apply. &lt;code&gt;None&lt;/code&gt; for no normalization or &lt;code&gt;'ortho'&lt;/code&gt; for orthonormal normalization.</source>
          <target state="translated">The normalization to apply. &lt;code&gt;None&lt;/code&gt; for no normalization or &lt;code&gt;'ortho'&lt;/code&gt; for orthonormal normalization.</target>
        </trans-unit>
        <trans-unit id="8c37a70332a45acca66a9732b1b0e6e1956e2217" translate="yes" xml:space="preserve">
          <source>The normalizer values with same shape as predictions.</source>
          <target state="translated">予測値と同じ形状の正規化値。</target>
        </trans-unit>
        <trans-unit id="61b02be5d26057c5d50879cdbf7a93b5057253da" translate="yes" xml:space="preserve">
          <source>The number of batches in the Sequence.</source>
          <target state="translated">シーケンスのバッチ数。</target>
        </trans-unit>
        <trans-unit id="792c47def67649a01faf5dd32bfc0006287f5ca5" translate="yes" xml:space="preserve">
          <source>The number of bits for quantize training.</source>
          <target state="translated">量子化学習のビット数。</target>
        </trans-unit>
        <trans-unit id="1e8251a908793c7f7ac158d55fc205bd7b475f75" translate="yes" xml:space="preserve">
          <source>The number of classes, &lt;code&gt;K&lt;/code&gt;, must not exceed:</source>
          <target state="translated">クラスの数 &lt;code&gt;K&lt;/code&gt; は、以下を超えてはなりません。</target>
        </trans-unit>
        <trans-unit id="a0b5ca9e1bc6804bae0a759249d34d9c89546684" translate="yes" xml:space="preserve">
          <source>The number of columns of the output matrix. If it is not provided, the op assumes the output matrix is a square matrix and infers the matrix size from &lt;code&gt;d_lower&lt;/code&gt;, &lt;code&gt;d_upper&lt;/code&gt;, and the innermost dimension of &lt;code&gt;diagonal&lt;/code&gt;.</source>
          <target state="translated">The number of columns of the output matrix. If it is not provided, the op assumes the output matrix is a square matrix and infers the matrix size from &lt;code&gt;d_lower&lt;/code&gt; , &lt;code&gt;d_upper&lt;/code&gt; , and the innermost dimension of &lt;code&gt;diagonal&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4d08b3ea9208738ea9c6ff069ba01794b88c8ec9" translate="yes" xml:space="preserve">
          <source>The number of consecutive elements to pull from an input &lt;code&gt;Dataset&lt;/code&gt; before advancing to the next input &lt;code&gt;Dataset&lt;/code&gt;.</source>
          <target state="translated">The number of consecutive elements to pull from an input &lt;code&gt;Dataset&lt;/code&gt; before advancing to the next input &lt;code&gt;Dataset&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="26bbe52e7e5ab91d858fdf92eb9164c22baffaaa" translate="yes" xml:space="preserve">
          <source>The number of cores per replica.</source>
          <target state="translated">レプリカ1個あたりのコア数。</target>
        </trans-unit>
        <trans-unit id="14a13b9b3afa611575c6fded44823e34fb935055" translate="yes" xml:space="preserve">
          <source>The number of decimal places to compare.</source>
          <target state="translated">比較する小数点以下の桁数です。</target>
        </trans-unit>
        <trans-unit id="7dc06462d30b8a2c0735ca8850d3a620b646263e" translate="yes" xml:space="preserve">
          <source>The number of depthwise convolution output channels for each input channel. The total number of depthwise convolution output channels will be equal to &lt;code&gt;filters_in * depth_multiplier&lt;/code&gt;.</source>
          <target state="translated">The number of depthwise convolution output channels for each input channel. The total number of depthwise convolution output channels will be equal to &lt;code&gt;filters_in * depth_multiplier&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="973da0cb517d5a151fa65418511378c398a77944" translate="yes" xml:space="preserve">
          <source>The number of depthwise convolution output channels for each input channel. The total number of depthwise convolution output channels will be equal to &lt;code&gt;num_filters_in * depth_multiplier&lt;/code&gt;.</source>
          <target state="translated">The number of depthwise convolution output channels for each input channel. The total number of depthwise convolution output channels will be equal to &lt;code&gt;num_filters_in * depth_multiplier&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f1fb954517b208177e2433a3bd0d5008bff1f85f" translate="yes" xml:space="preserve">
          <source>The number of devices attached to this input pipeline. This will be automatically set by MultiDeviceIterator.</source>
          <target state="translated">この入力パイプラインに接続されているデバイスの数。これは MultiDeviceIterator によって自動的に設定されます。</target>
        </trans-unit>
        <trans-unit id="a4e68945735abb3b2e9d8c11a95d91c8a876e87a" translate="yes" xml:space="preserve">
          <source>The number of dimensions of the input tensors must match, and all dimensions except &lt;code&gt;axis&lt;/code&gt; must be equal.</source>
          <target state="translated">入力テンソルの次元数は一致している必要があり、 &lt;code&gt;axis&lt;/code&gt; を除くすべての次元は等しくなければなりません。</target>
        </trans-unit>
        <trans-unit id="d8c231051c2a82603951bb4be6326674a1e8aa3c" translate="yes" xml:space="preserve">
          <source>The number of elements each iterator being interleaved should buffer (similar to the &lt;code&gt;.prefetch()&lt;/code&gt; transformation for each interleaved iterator).</source>
          <target state="translated">The number of elements each iterator being interleaved should buffer (similar to the &lt;code&gt;.prefetch()&lt;/code&gt; transformation for each interleaved iterator).</target>
        </trans-unit>
        <trans-unit id="8c94708e0d399f895eb43d6150e45fd77b82a379" translate="yes" xml:space="preserve">
          <source>The number of elements in the file, if known.</source>
          <target state="translated">ファイル内の要素数(既知の場合)。</target>
        </trans-unit>
        <trans-unit id="b80ca01a0514c265b481f3eda4caaa27b83fdda1" translate="yes" xml:space="preserve">
          <source>The number of input &lt;code&gt;Dataset&lt;/code&gt;s to interleave from in parallel.</source>
          <target state="translated">The number of input &lt;code&gt;Dataset&lt;/code&gt; s to interleave from in parallel.</target>
        </trans-unit>
        <trans-unit id="e13e9c7600bcb73d445f6ddf6ab2c7a5b20cf4c7" translate="yes" xml:space="preserve">
          <source>The number of input elements to transform to iterators before they are needed for interleaving.</source>
          <target state="translated">インターリーブに必要となる前にイテレータに変換する入力要素の数。</target>
        </trans-unit>
        <trans-unit id="0eab278bde3870b804deae9229a39fcd34b7b41a" translate="yes" xml:space="preserve">
          <source>The number of iterations allowed to run in parallel. It must be a positive integer.</source>
          <target state="translated">並行して実行できる反復回数を指定します。正の整数でなければなりません。</target>
        </trans-unit>
        <trans-unit id="486c99e01cf220bcbab45ab943b6612bf5691de3" translate="yes" xml:space="preserve">
          <source>The number of out-of-vocabulary tokens to use; defaults to</source>
          <target state="translated">使用する語彙外トークンの数を指定します。</target>
        </trans-unit>
        <trans-unit id="ba07a119e82c4ff8c5cef8c905bb48f6f124a4db" translate="yes" xml:space="preserve">
          <source>The number of out-of-vocabulary values to use; defaults to</source>
          <target state="translated">使用する語彙外の値の数を指定します。</target>
        </trans-unit>
        <trans-unit id="a76e8c314c1da65707aae12379f6c7ff6a28dcd7" translate="yes" xml:space="preserve">
          <source>The number of parameters and number of multiply-adds can be modified by using the &lt;code&gt;alpha&lt;/code&gt; parameter, which increases/decreases the number of filters in each layer. By altering the image size and &lt;code&gt;alpha&lt;/code&gt; parameter, all 22 models from the paper can be built, with ImageNet weights provided.</source>
          <target state="translated">The number of parameters and number of multiply-adds can be modified by using the &lt;code&gt;alpha&lt;/code&gt; parameter, which increases/decreases the number of filters in each layer. By altering the image size and &lt;code&gt;alpha&lt;/code&gt; parameter, all 22 models from the paper can be built, with ImageNet weights provided.</target>
        </trans-unit>
        <trans-unit id="516b803f18d035a65572fcbdfc2900dc7b8d516a" translate="yes" xml:space="preserve">
          <source>The number of ragged dimensions in this ragged tensor value.</source>
          <target state="translated">このぼろぼろテンソル値のぼろぼろ寸法の数。</target>
        </trans-unit>
        <trans-unit id="04f639280f7ec10513cb4839cfeda1135a578887" translate="yes" xml:space="preserve">
          <source>The number of ragged dimensions in this ragged tensor.</source>
          <target state="translated">このぼろぼろテンソルのぼろぼろ寸法の数。</target>
        </trans-unit>
        <trans-unit id="87460175f8c6b31c8d362f42e4ca508e7497ab37" translate="yes" xml:space="preserve">
          <source>The number of replicas of the computation.</source>
          <target state="translated">計算の複製の数。</target>
        </trans-unit>
        <trans-unit id="4ca03556aba7a6aedb5ec7bb5f557eed2de6bf50" translate="yes" xml:space="preserve">
          <source>The number of rows in the constructed RaggedTensor. If not specified, then it defaults to &lt;code&gt;nvals/uniform_row_length&lt;/code&gt; (or &lt;code&gt;0&lt;/code&gt; if &lt;code&gt;uniform_row_length==0&lt;/code&gt;). &lt;code&gt;nrows&lt;/code&gt; only needs to be specified if &lt;code&gt;uniform_row_length&lt;/code&gt; might be zero. &lt;code&gt;uniform_row_length*nrows&lt;/code&gt; must be &lt;code&gt;nvals&lt;/code&gt;.</source>
          <target state="translated">The number of rows in the constructed RaggedTensor. If not specified, then it defaults to &lt;code&gt;nvals/uniform_row_length&lt;/code&gt; (or &lt;code&gt;0&lt;/code&gt; if &lt;code&gt;uniform_row_length==0&lt;/code&gt; ). &lt;code&gt;nrows&lt;/code&gt; only needs to be specified if &lt;code&gt;uniform_row_length&lt;/code&gt; might be zero. &lt;code&gt;uniform_row_length*nrows&lt;/code&gt; must be &lt;code&gt;nvals&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6ae2058fda59f914aa10436122a33d5b20b79d14" translate="yes" xml:space="preserve">
          <source>The number of rows of the output matrix. If it is not provided, the op assumes the output matrix is a square matrix and infers the matrix size from &lt;code&gt;d_lower&lt;/code&gt;, &lt;code&gt;d_upper&lt;/code&gt;, and the innermost dimension of &lt;code&gt;diagonal&lt;/code&gt;.</source>
          <target state="translated">The number of rows of the output matrix. If it is not provided, the op assumes the output matrix is a square matrix and infers the matrix size from &lt;code&gt;d_lower&lt;/code&gt; , &lt;code&gt;d_upper&lt;/code&gt; , and the innermost dimension of &lt;code&gt;diagonal&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f95cc9deb1ad31a316d21a1000cc42bf6795a45d" translate="yes" xml:space="preserve">
          <source>The number of seconds the infeed thread should wait before enqueueing the first batch. This helps avoid timeouts for models that require a long compilation time.</source>
          <target state="translated">最初のバッチをエンキューする前に infeed スレッドが待つべき秒数。これは、長いコンパイル時間を必要とするモデルのタイムアウトを避けるのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="8b14ac2c4857aac3f94fec3f43b6a18b61307e30" translate="yes" xml:space="preserve">
          <source>The number of shards.</source>
          <target state="translated">破片の数です。</target>
        </trans-unit>
        <trans-unit id="feba654d8cbad0859a90722bb20fd89543e94016" translate="yes" xml:space="preserve">
          <source>The number of steps after which the updated cluster centers are synced back to a master copy. Used only if &lt;code&gt;use_mini_batch=True&lt;/code&gt;. See explanation above.</source>
          <target state="translated">The number of steps after which the updated cluster centers are synced back to a master copy. Used only if &lt;code&gt;use_mini_batch=True&lt;/code&gt; . See explanation above.</target>
        </trans-unit>
        <trans-unit id="605dc8d4d33374c29a7f650a9b0f5eab0e0e6145" translate="yes" xml:space="preserve">
          <source>The number of tasks defined in the given job.</source>
          <target state="translated">与えられたジョブで定義されたタスクの数。</target>
        </trans-unit>
        <trans-unit id="7bc399a4786dff1562b68cd701307e615fd2d911" translate="yes" xml:space="preserve">
          <source>The number of threads enqueuing &lt;code&gt;tensor_list&lt;/code&gt;.</source>
          <target state="translated">The number of threads enqueuing &lt;code&gt;tensor_list&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f02da5b6da02a7c7e237c388ce04fe447f06fe0f" translate="yes" xml:space="preserve">
          <source>The number of threads enqueuing &lt;code&gt;tensors&lt;/code&gt;. The batching will be nondeterministic if &lt;code&gt;num_threads &amp;gt; 1&lt;/code&gt;.</source>
          <target state="translated">The number of threads enqueuing &lt;code&gt;tensors&lt;/code&gt; . The batching will be nondeterministic if &lt;code&gt;num_threads &amp;gt; 1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ac616f1e962121eef44a63281771c333c773f02b" translate="yes" xml:space="preserve">
          <source>The number of thresholds to use for matching the given sensitivity.</source>
          <target state="translated">指定された感度にマッチするために使用するしきい値の数。</target>
        </trans-unit>
        <trans-unit id="ce3752ac0167d41dbccfee2db45c450ff2ae474a" translate="yes" xml:space="preserve">
          <source>The number of thresholds to use for matching the given specificity.</source>
          <target state="translated">指定された特異性を一致させるために使用するしきい値の数。</target>
        </trans-unit>
        <trans-unit id="8e43e72ea1b04138c6081865e0dcfc5971740b57" translate="yes" xml:space="preserve">
          <source>The number of thresholds to use when discretizing the roc curve.</source>
          <target state="translated">roc曲線を離散化する際に使用するしきい値の数。</target>
        </trans-unit>
        <trans-unit id="b04f07fa32838fddf785b03c8a08de5c2a3e8304" translate="yes" xml:space="preserve">
          <source>The number of times this should be called before it is logged.</source>
          <target state="translated">これは、ログに記録される前に呼び出すべき回数です。</target>
        </trans-unit>
        <trans-unit id="1a2d5e323b8ac2af372dafbb2ccb4f737135220d" translate="yes" xml:space="preserve">
          <source>The numerics checking mechanism will cause any TensorFlow eager execution or graph execution to error out as soon as an op's output tensor contains infinity or NaN.</source>
          <target state="translated">数値チェック機構は、operの出力テンソルに無限大またはNaNが含まれるとすぐに、TensorFlowのイーガー実行またはグラフ実行をエラーアウトさせます。</target>
        </trans-unit>
        <trans-unit id="625fd6a720c05ff0edaf547e1f7c698308bb3918" translate="yes" xml:space="preserve">
          <source>The numpy &lt;code&gt;ndarray&lt;/code&gt;, or anything that can be converted into a numpy &lt;code&gt;ndarray&lt;/code&gt; (including Tensor).</source>
          <target state="translated">The numpy &lt;code&gt;ndarray&lt;/code&gt; , or anything that can be converted into a numpy &lt;code&gt;ndarray&lt;/code&gt; (including Tensor).</target>
        </trans-unit>
        <trans-unit id="4302dccd839f803738d3151980944012f9528e1e" translate="yes" xml:space="preserve">
          <source>The numpy dtype of values in this tensor.</source>
          <target state="translated">このテンソルの値のnumpy dtype。</target>
        </trans-unit>
        <trans-unit id="7a3478da2033233febed2c5abb6b940a69ae44f9" translate="yes" xml:space="preserve">
          <source>The object to look up.</source>
          <target state="translated">調べたいオブジェクト。</target>
        </trans-unit>
        <trans-unit id="4018ef2a9d807780c174adef5e5e353be6c00acd" translate="yes" xml:space="preserve">
          <source>The object whose attributes we want to modify.</source>
          <target state="translated">変更したい属性を持つオブジェクト。</target>
        </trans-unit>
        <trans-unit id="10073c85f700d07cd9e27b920a2bb28c0e1e6aa0" translate="yes" xml:space="preserve">
          <source>The object will be registered under the key 'package&amp;gt;name' where &lt;code&gt;name&lt;/code&gt;, defaults to the object name if not passed.</source>
          <target state="translated">オブジェクトは、キー 'package&amp;gt; name'の下に登録されます。ここで &lt;code&gt;name&lt;/code&gt; は、渡されない場合のデフォルトはオブジェクト名です。</target>
        </trans-unit>
        <trans-unit id="45d19e778f47f1e0cf9ddae2e351bf27f7263440" translate="yes" xml:space="preserve">
          <source>The old (deprecated) name for &lt;code&gt;axis&lt;/code&gt;.</source>
          <target state="translated">The old (deprecated) name for &lt;code&gt;axis&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bfeb840ee57e08986b18ad64fb148a52d19a3b93" translate="yes" xml:space="preserve">
          <source>The old (deprecated) name for axis.</source>
          <target state="translated">axis の古い (非推奨の)名前。</target>
        </trans-unit>
        <trans-unit id="ceae2a98903e4e9554b3ffa1be72b116c87afeec" translate="yes" xml:space="preserve">
          <source>The one-hot tensor.</source>
          <target state="translated">ワンホットテンソル。</target>
        </trans-unit>
        <trans-unit id="2214e2794dfd82c41f2566b3dfe3c682d8ae3fc2" translate="yes" xml:space="preserve">
          <source>The only change you have to do to the single program code is to indicate if the program is running as the &lt;em&gt;chief&lt;/em&gt;.</source>
          <target state="translated">単一のプログラムコードに対して行う必要がある唯一の変更は、プログラムが&lt;em&gt;チーフ&lt;/em&gt;として実行されているかどうかを示すことです。</target>
        </trans-unit>
        <trans-unit id="2ac713e042499abe0ad5ad2caf8a0b3b2c0f1068" translate="yes" xml:space="preserve">
          <source>The only difference with a regular &lt;code&gt;Session&lt;/code&gt; is that an &lt;code&gt;InteractiveSession&lt;/code&gt; installs itself as the default session on construction. The methods &lt;a href=&quot;../../tensor#eval&quot;&gt;&lt;code&gt;tf.Tensor.eval&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../operation#run&quot;&gt;&lt;code&gt;tf.Operation.run&lt;/code&gt;&lt;/a&gt; will use that session to run ops.</source>
          <target state="translated">通常の &lt;code&gt;Session&lt;/code&gt; との唯一の違いは、 &lt;code&gt;InteractiveSession&lt;/code&gt; が構築時にデフォルトセッションとしてそれ自体をインストールすることです。メソッド&lt;a href=&quot;../../tensor#eval&quot;&gt; &lt;code&gt;tf.Tensor.eval&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../../operation#run&quot;&gt; &lt;code&gt;tf.Operation.run&lt;/code&gt; &lt;/a&gt;は、そのセッションを使用して操作を実行します。</target>
        </trans-unit>
        <trans-unit id="31601f998aa3aad1333ec413e01d618a81800515" translate="yes" xml:space="preserve">
          <source>The only public method of a 'Flag' object is parse(), but it is typically only called by a 'FlagValues' object. The parse() method is a thin wrapper around the 'ArgumentParser' parse() method. The parsed value is saved in .value, and the .present attribute is updated. If this flag was already present, an Error is raised.</source>
          <target state="translated">Flag' オブジェクトの唯一のパブリックメソッドは parse()ですが、通常は 'FlagValues' オブジェクトからのみ呼び出されます。parse()メソッドは 'ArgumentParser' parse()メソッドの薄いラッパーです。解析された値は .value に保存され、.present 属性が更新されます。このフラグが既に存在していた場合、エラーが発生します。</target>
        </trans-unit>
        <trans-unit id="e1d57348a97b9a1a6578e16bf09a6e76a32d9952" translate="yes" xml:space="preserve">
          <source>The op also returns a count of how many entries in the new vocabulary were present in the old vocabulary, which is used to calculate the number of values to initialize in a weight matrix remapping</source>
          <target state="translated">opはまた,新しい語彙のエントリが古い語彙に何個存在したかのカウントを返します.</target>
        </trans-unit>
        <trans-unit id="2a51ce2977b54408b0ebf05f943b7e7ef7f2b4b9" translate="yes" xml:space="preserve">
          <source>The op blocks until sufficient (i.e., more than num_required) gradients have been accumulated. If the accumulator has already aggregated more than num_required gradients, it returns the average of the accumulated gradients. Also automatically increments the recorded global_step in the accumulator by 1, and resets the aggregate to 0.</source>
          <target state="translated">opは、十分な(すなわち、num_required以上の)グラデーションが蓄積されるまでブロックします。アキュムレータに蓄積されたグラデーションが num_required を超えている場合は、蓄積されたグラデーションの平均値を返します。また、アキュムレータに記録されているglobal_stepを自動的に1インクリメントし、 集計値を0にリセットします。</target>
        </trans-unit>
        <trans-unit id="f0ab6e564ddbe98c027618ff7ffc593086f5c97a" translate="yes" xml:space="preserve">
          <source>The op extracts fields from a serialized protocol buffers message into tensors.</source>
          <target state="translated">opは、シリアル化されたプロトコルバッファメッセージからフィールドをテンソルに抽出します。</target>
        </trans-unit>
        <trans-unit id="4524786c0641258f1c43ff84a36d1e64fc7c7b2a" translate="yes" xml:space="preserve">
          <source>The op isn't guaranteed to raise an error if the input matrix is not invertible. &lt;a href=&quot;../debugging/check_numerics&quot;&gt;&lt;code&gt;tf.debugging.check_numerics&lt;/code&gt;&lt;/a&gt; can be applied to the output to detect invertibility problems.</source>
          <target state="translated">入力行列が反転可能でない場合、演算でエラーが発生することは保証されていません。&lt;a href=&quot;../debugging/check_numerics&quot;&gt; &lt;code&gt;tf.debugging.check_numerics&lt;/code&gt; &lt;/a&gt;を出力に適用して、可逆性の問題を検出できます。</target>
        </trans-unit>
        <trans-unit id="7bd5e782cef1401f27f1a4ce3d8e792728deb240" translate="yes" xml:space="preserve">
          <source>The op name.</source>
          <target state="translated">オペの名前。</target>
        </trans-unit>
        <trans-unit id="03769badeb10027d149bea16946940ff275316cf" translate="yes" xml:space="preserve">
          <source>The op returns an error if no system is running.</source>
          <target state="translated">opは、システムが動作していない場合はエラーを返します。</target>
        </trans-unit>
        <trans-unit id="fb943cd0e3db6ad9fffc66a537388998786a4519" translate="yes" xml:space="preserve">
          <source>The op serializes protobuf messages provided in the input tensors.</source>
          <target state="translated">opは入力テンソルで提供されるprotobufメッセージをシリアライズします。</target>
        </trans-unit>
        <trans-unit id="b8b5527fcf850d5c166175ec39fd18231818c0f3" translate="yes" xml:space="preserve">
          <source>The op takes two lists, one of 2D &lt;code&gt;SparseTensor&lt;/code&gt; and one of 2D &lt;code&gt;Tensor&lt;/code&gt;, each representing features of one feature column. It outputs a 2D &lt;code&gt;SparseTensor&lt;/code&gt; with the batchwise crosses of these features.</source>
          <target state="translated">OP 2つのリスト、2Dの取り &lt;code&gt;SparseTensor&lt;/code&gt; および2Dの &lt;code&gt;Tensor&lt;/code&gt; 、1つの特徴の列の各々を表す特徴を。これらの機能のバッチ &lt;code&gt;SparseTensor&lt;/code&gt; を含む2DSparseTensorを出力します。</target>
        </trans-unit>
        <trans-unit id="1331b377f4a8a3fc8082f77642e632d68fc16e64" translate="yes" xml:space="preserve">
          <source>The op to colocate all created ops with, or &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">作成されたすべての操作を同じ場所に配置する操作、また &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6fc6099d0a9bbd2e8df15fdd3fb6314367cb02cc" translate="yes" xml:space="preserve">
          <source>The op to dequeue a token so the replicas can exit this batch and start the next one. This is executed by each replica.</source>
          <target state="translated">op は、レプリカがこのバッチを終了して次のバッチを開始できるようにトークンをデキューイングします。これは各レプリカで実行されます。</target>
        </trans-unit>
        <trans-unit id="f4c5664cfd278d67f9bbf9eb0ae9656ce1cd8f8e" translate="yes" xml:space="preserve">
          <source>The op uses LU decomposition with partial pivoting to compute the inverses.</source>
          <target state="translated">opは部分的なピボットを用いたLU分解を用いて逆数を計算しています。</target>
        </trans-unit>
        <trans-unit id="cdf5001b31416df4d7ddde7f5a11360958f3382b" translate="yes" xml:space="preserve">
          <source>The op will blocks until sufficient (i.e., more than num_required) gradients have been accumulated. If the accumulator has already aggregated more than num_required gradients, it will return its average of the accumulated gradients. Also automatically increments the recorded global_step in the accumulator by 1, and resets the aggregate to 0.</source>
          <target state="translated">opは、十分な(すなわち、num_required以上の)グラデーションが蓄積されるまでブロックします。アキュムレータが既にnum_requiredグラデーション以上のグラデーションを蓄積している場合は、蓄積されたグラデーションの平均値を返します。また、アキュムレータに記録されているglobal_stepを自動的に1インクリメントし、 集計値を0にリセットします。</target>
        </trans-unit>
        <trans-unit id="47e700a39a6284fa854225b8729284d0f8f18e3a" translate="yes" xml:space="preserve">
          <source>The operation blocks until sufficient number of gradients have been successfully applied to the accumulator.</source>
          <target state="translated">十分な数のグラデーションがアキュムレータに正常に適用されるまで動作がブロックされます。</target>
        </trans-unit>
        <trans-unit id="8790d3057b1a7dc53661bb4f237b850fe1057d19" translate="yes" xml:space="preserve">
          <source>The operation casts &lt;code&gt;x&lt;/code&gt; (in case of &lt;code&gt;Tensor&lt;/code&gt;) or &lt;code&gt;x.values&lt;/code&gt; (in case of &lt;code&gt;SparseTensor&lt;/code&gt; or &lt;code&gt;IndexedSlices&lt;/code&gt;) to &lt;code&gt;dtype&lt;/code&gt;.</source>
          <target state="translated">この操作は、 &lt;code&gt;x&lt;/code&gt; （ &lt;code&gt;Tensor&lt;/code&gt; の場合）または &lt;code&gt;x.values&lt;/code&gt; （ &lt;code&gt;SparseTensor&lt;/code&gt; または &lt;code&gt;IndexedSlices&lt;/code&gt; の場合）を &lt;code&gt;dtype&lt;/code&gt; にキャストします。</target>
        </trans-unit>
        <trans-unit id="776fb3f15a3fb7bc8e3ba0841d38241b6b787b08" translate="yes" xml:space="preserve">
          <source>The operation invoked by the &lt;a href=&quot;https://www.tensorflow.org/api_docs/python/tf/Tensor#__add__&quot;&gt;&lt;code&gt;Tensor.&lt;strong&gt;add&lt;/strong&gt;&lt;/code&gt;&lt;/a&gt; operator.</source>
          <target state="translated">&lt;a href=&quot;https://www.tensorflow.org/api_docs/python/tf/Tensor#__add__&quot;&gt; &lt;code&gt;Tensor.&lt;strong&gt;add&lt;/strong&gt;&lt;/code&gt; &lt;/a&gt;によって呼び出される操作。演算子を&lt;strong&gt;追加し&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="7306f5f9b2f16d84f1b9ff9bd10ca67995a18b69" translate="yes" xml:space="preserve">
          <source>The operation invoked by the &lt;a href=&quot;tensor#__add__&quot;&gt;&lt;code&gt;Tensor.&lt;strong&gt;add&lt;/strong&gt;&lt;/code&gt;&lt;/a&gt; operator.</source>
          <target state="translated">&lt;a href=&quot;tensor#__add__&quot;&gt; &lt;code&gt;Tensor.&lt;strong&gt;add&lt;/strong&gt;&lt;/code&gt; &lt;/a&gt;によって呼び出される操作。演算子を&lt;strong&gt;追加し&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="296ef5a55f3d72d1bc6447dffc6aa283d2bd9c3c" translate="yes" xml:space="preserve">
          <source>The operation invoked by the &lt;a href=&quot;tensor#__eq__&quot;&gt;&lt;code&gt;Tensor.&lt;strong&gt;eq&lt;/strong&gt;&lt;/code&gt;&lt;/a&gt; operator.</source>
          <target state="translated">&lt;a href=&quot;tensor#__eq__&quot;&gt; &lt;code&gt;Tensor.&lt;strong&gt;eq&lt;/strong&gt;&lt;/code&gt; &lt;/a&gt;によって呼び出される操作。&lt;strong&gt;eq&lt;/strong&gt;演算子。</target>
        </trans-unit>
        <trans-unit id="d125afae21f1524ca9020b80d01460cbb92b8a4d" translate="yes" xml:space="preserve">
          <source>The operation invoked by the &lt;a href=&quot;tensor#__ne__&quot;&gt;&lt;code&gt;Tensor.&lt;strong&gt;ne&lt;/strong&gt;&lt;/code&gt;&lt;/a&gt; operator.</source>
          <target state="translated">&lt;a href=&quot;tensor#__ne__&quot;&gt; &lt;code&gt;Tensor.&lt;strong&gt;ne&lt;/strong&gt;&lt;/code&gt; &lt;/a&gt;によって呼び出される操作。&lt;strong&gt;ne&lt;/strong&gt;演算子。</target>
        </trans-unit>
        <trans-unit id="93211cf6300703e21c3cdf804cff040a7b2a55a6" translate="yes" xml:space="preserve">
          <source>The operation logs a warning if we attempt to set to a time step that is lower than the accumulator's own time step.</source>
          <target state="translated">アキュムレータ自身のタイムス テップよりも低いタイムス テップに設定しようとした場合、この操作は警告を記録します。</target>
        </trans-unit>
        <trans-unit id="ec87d8afa16231d11efcb471f5e52a7d2a894559" translate="yes" xml:space="preserve">
          <source>The operation must run in the same address space as the Python program that calls &lt;a href=&quot;numpy_function&quot;&gt;&lt;code&gt;tf.numpy_function()&lt;/code&gt;&lt;/a&gt;. If you are using distributed TensorFlow, you must run a &lt;a href=&quot;distribute/server&quot;&gt;&lt;code&gt;tf.distribute.Server&lt;/code&gt;&lt;/a&gt; in the same process as the program that calls &lt;a href=&quot;numpy_function&quot;&gt;&lt;code&gt;tf.numpy_function&lt;/code&gt;&lt;/a&gt; you must pin the created operation to a device in that server (e.g. using &lt;code&gt;with tf.device():&lt;/code&gt;).</source>
          <target state="translated">操作は、&lt;a href=&quot;numpy_function&quot;&gt; &lt;code&gt;tf.numpy_function()&lt;/code&gt; &lt;/a&gt;を呼び出すPythonプログラムと同じアドレス空間で実行する必要があります。分散TensorFlowを使用している場合は、&lt;a href=&quot;distribute/server&quot;&gt; &lt;code&gt;tf.distribute.Server&lt;/code&gt; &lt;/a&gt;を呼び出すプログラムと同じプロセスでtf.distribute.Serverを実行する必要があります。作成したオペレーションをそのサーバーのデバイスにピン&lt;a href=&quot;numpy_function&quot;&gt; &lt;code&gt;tf.numpy_function&lt;/code&gt; &lt;/a&gt;する必要があります（例 &lt;code&gt;with tf.device():&lt;/code&gt; を使用）。）。</target>
        </trans-unit>
        <trans-unit id="2eb160b49a8c0e9200d47f580c46000b2caec03e" translate="yes" xml:space="preserve">
          <source>The operation must run in the same address space as the Python program that calls &lt;a href=&quot;py_func&quot;&gt;&lt;code&gt;tf.compat.v1.py_func()&lt;/code&gt;&lt;/a&gt;. If you are using distributed TensorFlow, you must run a &lt;a href=&quot;../../distribute/server&quot;&gt;&lt;code&gt;tf.distribute.Server&lt;/code&gt;&lt;/a&gt; in the same process as the program that calls &lt;a href=&quot;py_func&quot;&gt;&lt;code&gt;tf.compat.v1.py_func()&lt;/code&gt;&lt;/a&gt; and you must pin the created operation to a device in that server (e.g. using &lt;code&gt;with tf.device():&lt;/code&gt;).</source>
          <target state="translated">操作は、&lt;a href=&quot;py_func&quot;&gt; &lt;code&gt;tf.compat.v1.py_func()&lt;/code&gt; &lt;/a&gt;を呼び出すPythonプログラムと同じアドレス空間で実行する必要があります。分散TensorFlowを使用している場合は、&lt;a href=&quot;py_func&quot;&gt; &lt;code&gt;tf.compat.v1.py_func()&lt;/code&gt; &lt;/a&gt;を呼び出すプログラムと同じプロセスで&lt;a href=&quot;../../distribute/server&quot;&gt; &lt;code&gt;tf.distribute.Server&lt;/code&gt; &lt;/a&gt;を実行し、作成されたオペレーションをそのサーバーのデバイスにピン留めする必要があります（たとえば、 &lt;code&gt;with tf.device():&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="3cd48c99e2e66fcb5c484164b2f3d03eb702bcd9" translate="yes" xml:space="preserve">
          <source>The operation must run in the same address space as the Python program that calls &lt;a href=&quot;py_function&quot;&gt;&lt;code&gt;tf.py_function()&lt;/code&gt;&lt;/a&gt;. If you are using distributed TensorFlow, you must run a &lt;a href=&quot;distribute/server&quot;&gt;&lt;code&gt;tf.distribute.Server&lt;/code&gt;&lt;/a&gt; in the same process as the program that calls &lt;a href=&quot;py_function&quot;&gt;&lt;code&gt;tf.py_function()&lt;/code&gt;&lt;/a&gt; and you must pin the created operation to a device in that server (e.g. using &lt;code&gt;with tf.device():&lt;/code&gt;).</source>
          <target state="translated">操作は、&lt;a href=&quot;py_function&quot;&gt; &lt;code&gt;tf.py_function()&lt;/code&gt; &lt;/a&gt;を呼び出すPythonプログラムと同じアドレス空間で実行する必要があります。分散TensorFlowを使用している場合、&lt;a href=&quot;py_function&quot;&gt; &lt;code&gt;tf.py_function()&lt;/code&gt; &lt;/a&gt;を呼び出すプログラムと同じプロセスで&lt;a href=&quot;distribute/server&quot;&gt; &lt;code&gt;tf.distribute.Server&lt;/code&gt; &lt;/a&gt;を実行し、作成されたオペレーションをそのサーバーのデバイスにピン留めする必要があります（たとえば &lt;code&gt;with tf.device():&lt;/code&gt; 使用）（）：）。</target>
        </trans-unit>
        <trans-unit id="12a018d5761a73fb797a8185b603d78340c9da47" translate="yes" xml:space="preserve">
          <source>The operation of &lt;code&gt;raw_rnn&lt;/code&gt;, in pseudo-code, is basically the following:</source>
          <target state="translated">疑似コードでの &lt;code&gt;raw_rnn&lt;/code&gt; の操作は、基本的に次のとおりです。</target>
        </trans-unit>
        <trans-unit id="666e744ea2e81d27484651c5a90d39fe7463b5f8" translate="yes" xml:space="preserve">
          <source>The operation returns the cardinality of &lt;code&gt;dataset&lt;/code&gt;. The operation may return &lt;a href=&quot;../experimental#INFINITE_CARDINALITY&quot;&gt;&lt;code&gt;tf.data.experimental.INFINITE_CARDINALITY&lt;/code&gt;&lt;/a&gt; if &lt;code&gt;dataset&lt;/code&gt; contains an infinite number of elements or &lt;a href=&quot;../experimental#UNKNOWN_CARDINALITY&quot;&gt;&lt;code&gt;tf.data.experimental.UNKNOWN_CARDINALITY&lt;/code&gt;&lt;/a&gt; if the analysis fails to determine the number of elements in &lt;code&gt;dataset&lt;/code&gt; (e.g. when the dataset source is a file).</source>
          <target state="translated">この操作は、 &lt;code&gt;dataset&lt;/code&gt; のカーディナリティを返します。この操作は&lt;a href=&quot;../experimental#INFINITE_CARDINALITY&quot;&gt; &lt;code&gt;tf.data.experimental.INFINITE_CARDINALITY&lt;/code&gt; を&lt;/a&gt;返す場合がありますた場合 &lt;code&gt;dataset&lt;/code&gt; 要素または無限の数含ま&lt;a href=&quot;../experimental#UNKNOWN_CARDINALITY&quot;&gt; &lt;code&gt;tf.data.experimental.UNKNOWN_CARDINALITY&lt;/code&gt; の&lt;/a&gt;分析は、内の要素の数を決定するために失敗した場合 &lt;code&gt;dataset&lt;/code&gt; （例えば、データセットのソースがファイルである場合）。</target>
        </trans-unit>
        <trans-unit id="b1aa4d33454ed3399a3f83fe0b47437e589dd1db" translate="yes" xml:space="preserve">
          <source>The operation supports data types (for &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;dtype&lt;/code&gt;) of &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;float16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;. In case of casting from complex types (&lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;) to real types, only the real part of &lt;code&gt;x&lt;/code&gt; is returned. In case of casting from real types to complex types (&lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;), the imaginary part of the returned value is set to &lt;code&gt;0&lt;/code&gt;. The handling of complex types here matches the behavior of numpy.</source>
          <target state="translated">この操作は、 &lt;code&gt;uint8&lt;/code&gt; 、 &lt;code&gt;uint16&lt;/code&gt; 、 &lt;code&gt;uint32&lt;/code&gt; 、 &lt;code&gt;uint64&lt;/code&gt; 、 &lt;code&gt;int8&lt;/code&gt; 、 &lt;code&gt;int16&lt;/code&gt; 、 &lt;code&gt;int32&lt;/code&gt; 、 &lt;code&gt;int64&lt;/code&gt; 、 &lt;code&gt;float16&lt;/code&gt; 、 &lt;code&gt;float32&lt;/code&gt; 、 &lt;code&gt;float64&lt;/code&gt; 、 &lt;code&gt;complex64&lt;/code&gt; 、 &lt;code&gt;complex128&lt;/code&gt; 、（ &lt;code&gt;x&lt;/code&gt; および &lt;code&gt;dtype&lt;/code&gt; の）データ型をサポートします。 &lt;code&gt;bfloat16&lt;/code&gt; の。複合型（ &lt;code&gt;complex64&lt;/code&gt; 、 &lt;code&gt;complex128&lt;/code&gt; ）から実際の型にキャストする場合、 &lt;code&gt;x&lt;/code&gt; 実部のみが返されます。実際の型から複合型にキャストする場合（ &lt;code&gt;complex64&lt;/code&gt; 、 &lt;code&gt;complex128&lt;/code&gt; ）、戻り値の虚数部は &lt;code&gt;0&lt;/code&gt; に設定されます。ここでの複合型の処理は、numpyの動作と一致します。</target>
        </trans-unit>
        <trans-unit id="633cea8689c5cf5392fe403777889735793f4042" translate="yes" xml:space="preserve">
          <source>The operation that (conditionally) applies a gradient to the accumulator.</source>
          <target state="translated">(条件付きで)アキュムレータにグラデーションをかける操作。</target>
        </trans-unit>
        <trans-unit id="be412a34e6685ca321b38fae5794bdc3419b0f98" translate="yes" xml:space="preserve">
          <source>The operation that closes the queue.</source>
          <target state="translated">キューを閉じる操作。</target>
        </trans-unit>
        <trans-unit id="b2e5f0ceeecca2686d84b94bc3fa75e7225fc1f4" translate="yes" xml:space="preserve">
          <source>The operation that enqueues a batch of tuples of tensors to the queue.</source>
          <target state="translated">テンソルのタプルのバッチをキューに入れる操作。</target>
        </trans-unit>
        <trans-unit id="59123e207e4121d978f651d18670cf600162571e" translate="yes" xml:space="preserve">
          <source>The operation that enqueues a new tuple of tensors to the queue.</source>
          <target state="translated">新しいテンソルのタプルをキューに入れる操作。</target>
        </trans-unit>
        <trans-unit id="99898763428cef52c27daa776a42aecf7741168c" translate="yes" xml:space="preserve">
          <source>The operation that failed, if known.</source>
          <target state="translated">失敗した操作がわかっている場合は、失敗した操作。</target>
        </trans-unit>
        <trans-unit id="99d34ac6542deab6f4080fc89f4db33d67017bad" translate="yes" xml:space="preserve">
          <source>The operation that implements the reader.</source>
          <target state="translated">リーダーを実装する操作。</target>
        </trans-unit>
        <trans-unit id="21259fcd1f38c739e8e877f9049101d45ed6faeb" translate="yes" xml:space="preserve">
          <source>The operation that initializes the table.</source>
          <target state="translated">テーブルを初期化する操作です。</target>
        </trans-unit>
        <trans-unit id="88d1101fb9e57b49ac3b0eb22875a3459c4f2b28" translate="yes" xml:space="preserve">
          <source>The operation that should be applied to the RaggedTensor &lt;code&gt;flat_values&lt;/code&gt;. &lt;code&gt;op&lt;/code&gt; is typically an element-wise operation (such as math_ops.add), but any operation that preserves the size of the outermost dimension can be used. I.e., &lt;code&gt;shape[0]&lt;/code&gt; of the value returned by &lt;code&gt;op&lt;/code&gt; must match &lt;code&gt;shape[0]&lt;/code&gt; of the &lt;code&gt;RaggedTensor&lt;/code&gt;s' &lt;code&gt;flat_values&lt;/code&gt; tensors.</source>
          <target state="translated">RaggedTensorのに適用されるべき操作 &lt;code&gt;flat_values&lt;/code&gt; 。 &lt;code&gt;op&lt;/code&gt; は通常、要素ごとの操作（math_ops.addなど）ですが、最も外側の次元のサイズを保持する任意の操作を使用できます。すなわち、 &lt;code&gt;shape[0]&lt;/code&gt; によって返された値の &lt;code&gt;op&lt;/code&gt; 一致しなければならない &lt;code&gt;shape[0]&lt;/code&gt; の &lt;code&gt;RaggedTensor&lt;/code&gt; S' &lt;code&gt;flat_values&lt;/code&gt; のテンソルを。</target>
        </trans-unit>
        <trans-unit id="7d4203f69addf4215a9f75fa10050cf92a106167" translate="yes" xml:space="preserve">
          <source>The operation was aborted, typically due to a concurrent action.</source>
          <target state="translated">操作が中断されましたが、これは通常、同時進行の操作によるものです。</target>
        </trans-unit>
        <trans-unit id="182e7dce9af9390db25d63cce38f101933dc52f8" translate="yes" xml:space="preserve">
          <source>The operation works for the following input types:</source>
          <target state="translated">この操作は以下の入力タイプで動作します。</target>
        </trans-unit>
        <trans-unit id="8d2fbee8f6406df6777f5eab458e89a6b6c00fa3" translate="yes" xml:space="preserve">
          <source>The operator before inversion.</source>
          <target state="translated">逆転前の演算子です。</target>
        </trans-unit>
        <trans-unit id="dca167c313a3afe14fe0a9adc69f0f5e8d1c9afb" translate="yes" xml:space="preserve">
          <source>The operator before taking the adjoint.</source>
          <target state="translated">継ぎ足しを取る前の演算子です。</target>
        </trans-unit>
        <trans-unit id="dd77aed70dd9284b7d6c31fc643a9815d5df72eb" translate="yes" xml:space="preserve">
          <source>The optimization options associated with the dataset. See &lt;a href=&quot;experimental/optimizationoptions&quot;&gt;&lt;code&gt;tf.data.experimental.OptimizationOptions&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">データセットに関連付けられた最適化オプション。詳細については、&lt;a href=&quot;experimental/optimizationoptions&quot;&gt; &lt;code&gt;tf.data.experimental.OptimizationOptions&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="d41bfab8487c080f4a52aaa4180a3c960ee957f3" translate="yes" xml:space="preserve">
          <source>The optimizer adds nodes to the graph to collect gradients and pause the trainers until variables are updated. For the Parameter Server job:</source>
          <target state="translated">オプティマイザはグラフにノードを追加して勾配を収集し、変数が更新されるまでトレーナーを一時停止します。Parameter Server ジョブの場合。</target>
        </trans-unit>
        <trans-unit id="54fde7cedba37819ea597c67bd03d0eccd830d20" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;feed_dict&lt;/code&gt; argument allows the caller to override the value of tensors in the graph. Each key in &lt;code&gt;feed_dict&lt;/code&gt; can be one of the following types:</source>
          <target state="translated">オプションの &lt;code&gt;feed_dict&lt;/code&gt; 引数を使用すると、呼び出し元はグラフのテンソルの値をオーバーライドできます。 &lt;code&gt;feed_dict&lt;/code&gt; の各キーは、次のタイプのいずれかになります。</target>
        </trans-unit>
        <trans-unit id="802a640d90b4b6b27f2c21f94a40f0d9fba6af8f" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;feed_dict&lt;/code&gt; argument allows the caller to override the value of tensors in the graph. See run() for more information.</source>
          <target state="translated">オプションの &lt;code&gt;feed_dict&lt;/code&gt; 引数を使用すると、呼び出し元はグラフのテンソルの値をオーバーライドできます。詳細については、run（）を参照してください。</target>
        </trans-unit>
        <trans-unit id="eacc79006fb44e1fd531dba67ace0548202f07d4" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;num_updates&lt;/code&gt; parameter allows one to tweak the decay rate dynamically. It is typical to pass the count of training steps, usually kept in a variable that is incremented at each step, in which case the decay rate is lower at the start of training. This makes moving averages move faster. If passed, the actual decay rate used is:</source>
          <target state="translated">オプションの &lt;code&gt;num_updates&lt;/code&gt; パラメーターを使用すると、減衰率を動的に微調整できます。トレーニングステップのカウントを渡すのが一般的です。通常、各ステップで増分される変数に保持されます。この場合、減衰率はトレーニングの開始時に低くなります。これにより、移動平均がより速く移動します。合格した場合、実際に使用される減衰率は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="4d5f2024e82b1f112cdc773a7a0d099d108bab47" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;options&lt;/code&gt; argument expects a [&lt;code&gt;RunOptions&lt;/code&gt;] proto. The options allow controlling the behavior of this particular step (e.g. turning tracing on).</source>
          <target state="translated">オプションの &lt;code&gt;options&lt;/code&gt; 引数には、[ &lt;code&gt;RunOptions&lt;/code&gt; ]プロトが必要です。オプションを使用すると、この特定のステップの動作を制御できます（トレースをオンにするなど）。</target>
        </trans-unit>
        <trans-unit id="5dd8b71d547dc1502ab3faa2f08ccf41ba7e8b18" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;reshape&lt;/code&gt; argument, if &lt;code&gt;True&lt;/code&gt;, allows restoring a variable from a save file where the variable had a different shape, but the same number of elements and type. This is useful if you have reshaped a variable and want to reload it from an older checkpoint.</source>
          <target state="translated">オプションの &lt;code&gt;reshape&lt;/code&gt; 引数は、 &lt;code&gt;True&lt;/code&gt; の場合、変数の形状は同じですが、要素と型の数は同じである保存ファイルから変数を復元できます。これは、変数を再形成し、古いチェックポイントから再ロードする場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="e970942946ff441e315a637342ca6559423698ca" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;run_metadata&lt;/code&gt; argument expects a [&lt;code&gt;RunMetadata&lt;/code&gt;] proto. When appropriate, the non-Tensor output of this step will be collected there. For example, when users turn on tracing in &lt;code&gt;options&lt;/code&gt;, the profiled info will be collected into this argument and passed back.</source>
          <target state="translated">オプションの &lt;code&gt;run_metadata&lt;/code&gt; 引数には、[ &lt;code&gt;RunMetadata&lt;/code&gt; ]プロトが必要です。必要に応じて、このステップの非テンソル出力がそこで収集されます。たとえば、ユーザーが &lt;code&gt;options&lt;/code&gt; でトレースをオンにすると、プロファイルされた情報がこの引数に収集されて返されます。</target>
        </trans-unit>
        <trans-unit id="4463c9db10422ab0ce9fc83cbdf23e0b400b34c3" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;sharded&lt;/code&gt; argument, if &lt;code&gt;True&lt;/code&gt;, instructs the saver to shard checkpoints per device.</source>
          <target state="translated">オプションの &lt;code&gt;sharded&lt;/code&gt; 引数は、 &lt;code&gt;True&lt;/code&gt; の場合、デバイスごとにチェックポイントを分割するようにセーバーに指示します。</target>
        </trans-unit>
        <trans-unit id="9211a71d92ea323063ffa11455da47bbb168e612" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;signatures&lt;/code&gt; argument controls which methods in &lt;code&gt;obj&lt;/code&gt; will be available to programs which consume &lt;code&gt;SavedModel&lt;/code&gt;s, for example serving APIs. Python functions may be decorated with &lt;code&gt;@tf.function(input_signature=...)&lt;/code&gt; and passed as signatures directly, or lazily with a call to &lt;code&gt;get_concrete_function&lt;/code&gt; on the method decorated with &lt;code&gt;@tf.function&lt;/code&gt;.</source>
          <target state="translated">オプションの &lt;code&gt;signatures&lt;/code&gt; 引数は、例えばAPIを提供するなど、 &lt;code&gt;SavedModel&lt;/code&gt; を使用するプログラムが &lt;code&gt;obj&lt;/code&gt; のどのメソッドを使用できるかを制御します。Python関数は &lt;code&gt;@tf.function(input_signature=...)&lt;/code&gt; で装飾され、シグネチャとして直接渡されるか、 &lt;code&gt;@tf.function&lt;/code&gt; 装飾されたメソッドで &lt;code&gt;get_concrete_function&lt;/code&gt; を呼び出して遅延して渡されます。</target>
        </trans-unit>
        <trans-unit id="7b76c8215965b6d6548dad5cc3be42ab9b948c2e" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;signatures&lt;/code&gt; argument controls which methods in &lt;code&gt;obj&lt;/code&gt; will be available to programs which consume &lt;code&gt;SavedModel&lt;/code&gt;s, for example, serving APIs. Python functions may be decorated with &lt;code&gt;@tf.function(input_signature=...)&lt;/code&gt; and passed as signatures directly, or lazily with a call to &lt;code&gt;get_concrete_function&lt;/code&gt; on the method decorated with &lt;code&gt;@tf.function&lt;/code&gt;.</source>
          <target state="translated">オプションの &lt;code&gt;signatures&lt;/code&gt; 引数は、APIを提供するなど、 &lt;code&gt;SavedModel&lt;/code&gt; を使用するプログラムで &lt;code&gt;obj&lt;/code&gt; のどのメソッドを使用できるかを制御します。Python関数は、 &lt;code&gt;@tf.function(input_signature=...)&lt;/code&gt; して署名として直接渡すか、 &lt;code&gt;@tf.function&lt;/code&gt; デコレーションされたメソッドで &lt;code&gt;get_concrete_function&lt;/code&gt; を呼び出すことで遅延的に渡すことができます。</target>
        </trans-unit>
        <trans-unit id="5eb10eb93ba6242a60bc81190f01e4562cc7c7f2" translate="yes" xml:space="preserve">
          <source>The options are &quot;global&quot; in the sense they apply to the entire dataset. If options are set multiple times, they are merged as long as different options do not use different non-default values.</source>
          <target state="translated">オプションは、データセット全体に適用されるという意味で「グローバル」です。オプションが複数回設定されている場合は、 異なるオプションが異なるデフォルト以外の値を使用していない限り、それらはマージされます。</target>
        </trans-unit>
        <trans-unit id="839958c9eddae1511a49cbdd886b3f520fbec271" translate="yes" xml:space="preserve">
          <source>The order of output arguments here is &lt;code&gt;s&lt;/code&gt;, &lt;code&gt;u&lt;/code&gt;, &lt;code&gt;v&lt;/code&gt; when &lt;code&gt;compute_uv&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;, as opposed to &lt;code&gt;u&lt;/code&gt;, &lt;code&gt;s&lt;/code&gt;, &lt;code&gt;v&lt;/code&gt; for numpy.linalg.svd.</source>
          <target state="translated">ここで、出力引数の順序は &lt;code&gt;s&lt;/code&gt; 、 &lt;code&gt;u&lt;/code&gt; 、 &lt;code&gt;v&lt;/code&gt; &lt;code&gt;compute_uv&lt;/code&gt; がある &lt;code&gt;True&lt;/code&gt; とは反対に、 &lt;code&gt;u&lt;/code&gt; 、 &lt;code&gt;s&lt;/code&gt; 、 &lt;code&gt;v&lt;/code&gt; numpy.linalg.svdため。</target>
        </trans-unit>
        <trans-unit id="f3bc730bbfda16a7dd0623a512f8a88cc6217898" translate="yes" xml:space="preserve">
          <source>The original device on which &lt;code&gt;input_dataset&lt;/code&gt; will be placed.</source>
          <target state="translated">&lt;code&gt;input_dataset&lt;/code&gt; が配置される元のデバイス。</target>
        </trans-unit>
        <trans-unit id="18d387209dd33fca87db5f4de4ba44e61656b7a9" translate="yes" xml:space="preserve">
          <source>The original input to &lt;a href=&quot;lu&quot;&gt;&lt;code&gt;tf.linalg.lu&lt;/code&gt;&lt;/a&gt;, i.e., &lt;code&gt;x&lt;/code&gt; as in, &lt;code&gt;lu_reconstruct(*tf.linalg.lu(x))&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;lu&quot;&gt; &lt;code&gt;tf.linalg.lu&lt;/code&gt; &lt;/a&gt;への元の入力、つまり &lt;code&gt;x&lt;/code&gt; のように &lt;code&gt;lu_reconstruct(*tf.linalg.lu(x))&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="af401239a74cc22bb0656ceab277ae88265e81dd" translate="yes" xml:space="preserve">
          <source>The original method wrapped such that it enters the module's name scope.</source>
          <target state="translated">モジュールの名前のスコープに入るようにラップされたオリジナルのメソッド。</target>
        </trans-unit>
        <trans-unit id="f891d19803fb509490762be082d2f8ade6148c86" translate="yes" xml:space="preserve">
          <source>The original registered Flag objects can be retrieved through the use of the dictionary-like operator, &lt;strong&gt;getitem&lt;/strong&gt;: x = FLAGS['longname'] # access the registered Flag object</source>
          <target state="translated">オリジナルの登録フラグオブジェクトは、オペレータ辞書等、を使用することによって取得することができ&lt;strong&gt;GetItem関数&lt;/strong&gt; X = FLAGS [「LONGNAME」]＃アクセス登録フラグオブジェクト：</target>
        </trans-unit>
        <trans-unit id="b71549bb8296bfb172b0e5fa059a19b9055f4136" translate="yes" xml:space="preserve">
          <source>The other method &lt;code&gt;uniform&lt;/code&gt; only covers the range [minval, maxval), which cannot be &lt;code&gt;dtype&lt;/code&gt;'s full range because &lt;code&gt;maxval&lt;/code&gt; is of type &lt;code&gt;dtype&lt;/code&gt;.</source>
          <target state="translated">他の方法は &lt;code&gt;uniform&lt;/code&gt; のみすることができない範囲[MINVAL、MAXVAL）、カバー &lt;code&gt;dtype&lt;/code&gt; ためのフルレンジ &lt;code&gt;maxval&lt;/code&gt; 型のものである &lt;code&gt;dtype&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8d650eca6a136e51fc7375e0969bc2ea1115b2e2" translate="yes" xml:space="preserve">
          <source>The output &lt;code&gt;SparseTensor&lt;/code&gt; object's shape values for all dimensions but the first are the max across the input &lt;code&gt;SparseTensor&lt;/code&gt; objects' shape values for the corresponding dimensions. Its first shape value is &lt;code&gt;N&lt;/code&gt;, the minibatch size.</source>
          <target state="translated">すべての次元に対する出力 &lt;code&gt;SparseTensor&lt;/code&gt; オブジェクトの形状値。最初のものは、対応する次元に対する入力 &lt;code&gt;SparseTensor&lt;/code&gt; オブジェクトの形状値全体の最大値です。最初の形状値は &lt;code&gt;N&lt;/code&gt; （ミニバッチサイズ）です。</target>
        </trans-unit>
        <trans-unit id="f7899fd3a60fa39b01002b08a0bd2e514e0a6d60" translate="yes" xml:space="preserve">
          <source>The output &lt;code&gt;SparseTensor&lt;/code&gt; object's shape values for the original dimensions are the max across the input &lt;code&gt;SparseTensor&lt;/code&gt; objects' shape values for the corresponding dimensions. The new dimensions match the size of the batch.</source>
          <target state="translated">出力 &lt;code&gt;SparseTensor&lt;/code&gt; の元の寸法のオブジェクトの形状値は、入力を横切る最大である &lt;code&gt;SparseTensor&lt;/code&gt; の対応する寸法のためのオブジェクトの形状値。新しい寸法は、バッチのサイズと一致します。</target>
        </trans-unit>
        <trans-unit id="27cd935b967006cc01a667a4b3f9d0444d7da4c5" translate="yes" xml:space="preserve">
          <source>The output &lt;code&gt;SparseTensor&lt;/code&gt; will be in row-major order and will have the same shape as the input.</source>
          <target state="translated">出力 &lt;code&gt;SparseTensor&lt;/code&gt; は行優先順で、入力と同じ形状になります。</target>
        </trans-unit>
        <trans-unit id="3ed7c320b010e6441e9928df89e4f8feea635e72" translate="yes" xml:space="preserve">
          <source>The output &lt;code&gt;y&lt;/code&gt; has the same rank as &lt;code&gt;x&lt;/code&gt;. The shapes of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; satisfy: &lt;code&gt;y.shape[i] == x.shape[perm[i]] for i in [0, 1, ..., rank(x) - 1]&lt;/code&gt;</source>
          <target state="translated">出力 &lt;code&gt;y&lt;/code&gt; のランクは &lt;code&gt;x&lt;/code&gt; と同じです。 &lt;code&gt;x&lt;/code&gt; と &lt;code&gt;y&lt;/code&gt; の形状は次の条件を満たす： &lt;code&gt;y.shape[i] == x.shape[perm[i]] for i in [0, 1, ..., rank(x) - 1]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ac7bc3e3640548894477903c76a63029f0684b7b" translate="yes" xml:space="preserve">
          <source>The output &lt;code&gt;y&lt;/code&gt; has the same rank as &lt;code&gt;x&lt;/code&gt;. The shapes of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; satisfy: &lt;code&gt;y.shape[i] == x.shape[perm[i]] for i in [0, 1, ..., rank(x) - 1]&lt;/code&gt;&lt;code&gt;y[i,j,k,...,s,t,u] == conj(x[perm[i], perm[j], perm[k],...,perm[s], perm[t], perm[u]])&lt;/code&gt;</source>
          <target state="translated">出力 &lt;code&gt;y&lt;/code&gt; のランクは &lt;code&gt;x&lt;/code&gt; と同じです。 &lt;code&gt;x&lt;/code&gt; と &lt;code&gt;y&lt;/code&gt; の形状は次の条件を満たす： &lt;code&gt;y.shape[i] == x.shape[perm[i]] for i in [0, 1, ..., rank(x) - 1]&lt;/code&gt; &lt;code&gt;y[i,j,k,...,s,t,u] == conj(x[perm[i], perm[j], perm[k],...,perm[s], perm[t], perm[u]])&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="25a24380035e136d9ea98af6a346f119051ef56c" translate="yes" xml:space="preserve">
          <source>The output Tensor as described above, dimensions will vary based on the op provided.</source>
          <target state="translated">上記のような出力テンソルは、提供されるopに基づいて寸法が変化します。</target>
        </trans-unit>
        <trans-unit id="47c4d6134bd40a175fa44afa8f9b377d5850de3c" translate="yes" xml:space="preserve">
          <source>The output consists of two tensors LU and P containing the LU decomposition of all input submatrices &lt;code&gt;[..., :, :]&lt;/code&gt;. LU encodes the lower triangular and upper triangular factors.</source>
          <target state="translated">出力は、すべての入力部分行列 &lt;code&gt;[..., :, :]&lt;/code&gt; のLU分解を含む2つのテンソルLUおよびPで構成されます。LUは、下三角因子と上三角因子をエンコードします。</target>
        </trans-unit>
        <trans-unit id="797ecd44b1fb4a552924484c7a55ad507593ed55" translate="yes" xml:space="preserve">
          <source>The output dtype; defaults to &lt;a href=&quot;../../../tf#int64&quot;&gt;&lt;code&gt;tf.int64&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">出力dtype; デフォルトは&lt;a href=&quot;../../../tf#int64&quot;&gt; &lt;code&gt;tf.int64&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="31482f2ff54a3aa8fae10ccd117f3f60685fed5f" translate="yes" xml:space="preserve">
          <source>The output dtype; defaults to &lt;a href=&quot;../../tf#int64&quot;&gt;&lt;code&gt;tf.int64&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">出力dtype; デフォルトは&lt;a href=&quot;../../tf#int64&quot;&gt; &lt;code&gt;tf.int64&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="048c6e1cfd308f6012ab77e90cbc674670b136c0" translate="yes" xml:space="preserve">
          <source>The output elements are taken from the input at intervals given by the &lt;code&gt;rate&lt;/code&gt; argument, as in dilated convolutions.</source>
          <target state="translated">出力要素は、拡張されたたたみ込みの場合と同様に、 &lt;code&gt;rate&lt;/code&gt; 引数で指定された間隔で入力から取得されます。</target>
        </trans-unit>
        <trans-unit id="01cfec4a29cc69f6abe94502062c73070782ab76" translate="yes" xml:space="preserve">
          <source>The output elements will be resorted to preserve the sort order along increasing dimension number.</source>
          <target state="translated">出力要素は,次元数の増加に伴うソート順を保持するために利用されます.</target>
        </trans-unit>
        <trans-unit id="38c8f8944795768b987abf44161bc29810671bc1" translate="yes" xml:space="preserve">
          <source>The output is a tensor of rank &lt;code&gt;k+1&lt;/code&gt; with dimensions &lt;code&gt;[I, J, ..., L, M, N]&lt;/code&gt;. If &lt;code&gt;k&lt;/code&gt; is scalar or &lt;code&gt;k[0] == k[1]&lt;/code&gt;:</source>
          <target state="translated">出力は、次元が &lt;code&gt;[I, J, ..., L, M, N]&lt;/code&gt; のランク &lt;code&gt;k+1&lt;/code&gt; のテンソルです。場合 &lt;code&gt;k&lt;/code&gt; はスカラまたはある &lt;code&gt;k[0] == k[1]&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="b9f3b180f0596bc470d2fb79c1dedac7776f93d9" translate="yes" xml:space="preserve">
          <source>The output is a tensor of shape &lt;code&gt;[..., M, K]&lt;/code&gt;. If &lt;code&gt;adjoint&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt; then the innermost matrices in &lt;code&gt;output&lt;/code&gt; satisfy matrix equations &lt;code&gt;matrix[..., :, :] * output[..., :, :] = rhs[..., :, :]&lt;/code&gt;. If &lt;code&gt;adjoint&lt;/code&gt; is &lt;code&gt;False&lt;/code&gt; then the strictly then the innermost matrices in &lt;code&gt;output&lt;/code&gt; satisfy matrix equations &lt;code&gt;adjoint(matrix[..., i, k]) * output[..., k, j] = rhs[..., i, j]&lt;/code&gt;.</source>
          <target state="translated">出力は形状 &lt;code&gt;[..., M, K]&lt;/code&gt; テンソルです。 &lt;code&gt;adjoint&lt;/code&gt; が &lt;code&gt;True&lt;/code&gt; の場合、 &lt;code&gt;output&lt;/code&gt; の最も内側の行列は、行列方程式 &lt;code&gt;matrix[..., :, :] * output[..., :, :] = rhs[..., :, :]&lt;/code&gt; 満たします。 &lt;code&gt;adjoint&lt;/code&gt; が &lt;code&gt;False&lt;/code&gt; の場合、 &lt;code&gt;output&lt;/code&gt; の最も内側の行列は、行列方程式 &lt;code&gt;adjoint(matrix[..., i, k]) * output[..., k, j] = rhs[..., i, j]&lt;/code&gt; 満たします。 ]。</target>
        </trans-unit>
        <trans-unit id="1488da1cb166b21e2e086e4e08f96c22ee229379" translate="yes" xml:space="preserve">
          <source>The output is a tensor of shape &lt;code&gt;[..., M, N]&lt;/code&gt;. If &lt;code&gt;adjoint&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt; then the innermost matrices in &lt;code&gt;output&lt;/code&gt; satisfy matrix equations &lt;code&gt;matrix[..., :, :] * output[..., :, :] = rhs[..., :, :]&lt;/code&gt;. If &lt;code&gt;adjoint&lt;/code&gt; is &lt;code&gt;False&lt;/code&gt; then the strictly then the innermost matrices in &lt;code&gt;output&lt;/code&gt; satisfy matrix equations &lt;code&gt;adjoint(matrix[..., i, k]) * output[..., k, j] = rhs[..., i, j]&lt;/code&gt;.</source>
          <target state="translated">出力は形状 &lt;code&gt;[..., M, N]&lt;/code&gt; テンソルです。 &lt;code&gt;adjoint&lt;/code&gt; が &lt;code&gt;True&lt;/code&gt; の場合、 &lt;code&gt;output&lt;/code&gt; の最も内側の行列は行列方程式 &lt;code&gt;matrix[..., :, :] * output[..., :, :] = rhs[..., :, :]&lt;/code&gt; 満たします。 &lt;code&gt;adjoint&lt;/code&gt; が &lt;code&gt;False&lt;/code&gt; の場合、厳密に言えば、 &lt;code&gt;output&lt;/code&gt; の最も内側の行列は行列方程式 &lt;code&gt;adjoint(matrix[..., i, k]) * output[..., k, j] = rhs[..., i, j]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6768fd2c3c792ee19a1c494dc0c8f3d25ef95d97" translate="yes" xml:space="preserve">
          <source>The output is a tensor of shape &lt;code&gt;[..., M, N]&lt;/code&gt;. If &lt;code&gt;adjoint&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt; then the innermost matrices in output satisfy matrix equations &lt;code&gt;sum_k matrix[..., i, k] * output[..., k, j] = rhs[..., i, j]&lt;/code&gt;. If &lt;code&gt;adjoint&lt;/code&gt; is &lt;code&gt;False&lt;/code&gt; then the innermost matrices in output satisfy matrix equations &lt;code&gt;sum_k adjoint(matrix[..., i, k]) * output[..., k, j] = rhs[..., i, j]&lt;/code&gt;.</source>
          <target state="translated">出力は形状 &lt;code&gt;[..., M, N]&lt;/code&gt; テンソルです。 &lt;code&gt;adjoint&lt;/code&gt; が &lt;code&gt;True&lt;/code&gt; の場合、出力の最も内側の行列は行列方程式 &lt;code&gt;sum_k matrix[..., i, k] * output[..., k, j] = rhs[..., i, j]&lt;/code&gt; 満たします。 &lt;code&gt;adjoint&lt;/code&gt; が &lt;code&gt;False&lt;/code&gt; の場合、出力の最も内側の行列は行列方程式 &lt;code&gt;sum_k adjoint(matrix[..., i, k]) * output[..., k, j] = rhs[..., i, j]&lt;/code&gt; 満たします。</target>
        </trans-unit>
        <trans-unit id="24258a9b3cf1537928d726a4c142766d14a612d5" translate="yes" xml:space="preserve">
          <source>The output is a tensor of the same shape as &lt;code&gt;rhs&lt;/code&gt;: either &lt;code&gt;[..., M]&lt;/code&gt; or &lt;code&gt;[..., M, K]&lt;/code&gt;.</source>
          <target state="translated">出力は &lt;code&gt;rhs&lt;/code&gt; と同じ形状のテンソルです： &lt;code&gt;[..., M]&lt;/code&gt; または &lt;code&gt;[..., M, K]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7d3db7f6f2ef07d73508fa555433bf8d83a75eaa" translate="yes" xml:space="preserve">
          <source>The output is a tensor of the same shape as the input containing the Cholesky decompositions for all input submatrices &lt;code&gt;[..., :, :]&lt;/code&gt;.</source>
          <target state="translated">出力は、すべての入力部分行列 &lt;code&gt;[..., :, :]&lt;/code&gt; のコレスキー分解を含む入力と同じ形状のテンソルです。</target>
        </trans-unit>
        <trans-unit id="6194740e93c206c46e0bfecd7aa22357ddec1b58" translate="yes" xml:space="preserve">
          <source>The output is computed as follows:</source>
          <target state="translated">出力は以下のように計算されます。</target>
        </trans-unit>
        <trans-unit id="b74ff8ee45b0b8f3cea227a5cb8b0ca2512e0fa1" translate="yes" xml:space="preserve">
          <source>The output is:</source>
          <target state="translated">出力されます。</target>
        </trans-unit>
        <trans-unit id="02cc9038a532f36829ca3735f949f57712e9a776" translate="yes" xml:space="preserve">
          <source>The output locations corresponding to the implicitly zero elements in the sparse tensor will be zero (i.e., will not take up storage space), regardless of the contents of the dense tensor (even if it's +/-INF and that INF*0 == NaN).</source>
          <target state="translated">疎なテンソルの暗黙のゼロ要素に対応する出力位置は、密なテンソルの内容に関係なく(たとえそれが+/-INFであり、INF*0 ==NaNであっても)、ゼロになります(すなわち、記憶領域を占有しません)。</target>
        </trans-unit>
        <trans-unit id="4921b3c960168ec33230d0e2275991a2a480fee7" translate="yes" xml:space="preserve">
          <source>The output of &lt;a href=&quot;../compat/v1/estimator/estimator#evaluate&quot;&gt;&lt;code&gt;Estimator.evaluate&lt;/code&gt;&lt;/a&gt; on this checkpoint.</source>
          <target state="translated">このチェックポイントでの&lt;a href=&quot;../compat/v1/estimator/estimator#evaluate&quot;&gt; &lt;code&gt;Estimator.evaluate&lt;/code&gt; &lt;/a&gt;の出力。</target>
        </trans-unit>
        <trans-unit id="b30d98674beeba8558b72dc407638d1340b74552" translate="yes" xml:space="preserve">
          <source>The output of the 1-arg function that takes the &lt;code&gt;step&lt;/code&gt; is &lt;code&gt;values[0]&lt;/code&gt; when &lt;code&gt;step &amp;lt;= boundaries[0]&lt;/code&gt;, &lt;code&gt;values[1]&lt;/code&gt; when &lt;code&gt;step &amp;gt; boundaries[0]&lt;/code&gt; and &lt;code&gt;step &amp;lt;= boundaries[1]&lt;/code&gt;, ..., and values[-1] when &lt;code&gt;step &amp;gt; boundaries[-1]&lt;/code&gt;.</source>
          <target state="translated">かかる1引数関数の出力 &lt;code&gt;step&lt;/code&gt; ある &lt;code&gt;values[0]&lt;/code&gt; &lt;code&gt;step &amp;lt;= boundaries[0]&lt;/code&gt; 、 &lt;code&gt;values[1]&lt;/code&gt; &lt;code&gt;step &amp;gt; boundaries[0]&lt;/code&gt; と &lt;code&gt;step &amp;lt;= boundaries[1]&lt;/code&gt; 、...、そして、値 &lt;code&gt;step &amp;gt; boundaries[-1]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d04584f160db196293c2030ae17c2dacfbfcd30d" translate="yes" xml:space="preserve">
          <source>The output of this Op is a single bounding box that may be used to crop the original image. The output is returned as 3 tensors: &lt;code&gt;begin&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt; and &lt;code&gt;bboxes&lt;/code&gt;. The first 2 tensors can be fed directly into &lt;a href=&quot;../../../slice&quot;&gt;&lt;code&gt;tf.slice&lt;/code&gt;&lt;/a&gt; to crop the image. The latter may be supplied to &lt;a href=&quot;../../../image/draw_bounding_boxes&quot;&gt;&lt;code&gt;tf.image.draw_bounding_boxes&lt;/code&gt;&lt;/a&gt; to visualize what the bounding box looks like.</source>
          <target state="translated">このOpの出力は、元の画像のトリミングに使用できる単一の境界ボックスです。出力は、 &lt;code&gt;begin&lt;/code&gt; 、 &lt;code&gt;size&lt;/code&gt; 、および &lt;code&gt;bboxes&lt;/code&gt; の 3つのテンソルとして返されます。最初の2つのテンソルを&lt;a href=&quot;../../../slice&quot;&gt; &lt;code&gt;tf.slice&lt;/code&gt; &lt;/a&gt;に直接入力して、画像をトリミングできます。後者は、&lt;a href=&quot;../../../image/draw_bounding_boxes&quot;&gt; &lt;code&gt;tf.image.draw_bounding_boxes&lt;/code&gt; &lt;/a&gt;に提供して、境界ボックスがどのように見えるかを視覚化できます。</target>
        </trans-unit>
        <trans-unit id="cc8ae412cea3a206e259aeb86af6654e659ed171" translate="yes" xml:space="preserve">
          <source>The output of this Op is a single bounding box that may be used to crop the original image. The output is returned as 3 tensors: &lt;code&gt;begin&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt; and &lt;code&gt;bboxes&lt;/code&gt;. The first 2 tensors can be fed directly into &lt;a href=&quot;../slice&quot;&gt;&lt;code&gt;tf.slice&lt;/code&gt;&lt;/a&gt; to crop the image. The latter may be supplied to &lt;a href=&quot;../image/draw_bounding_boxes&quot;&gt;&lt;code&gt;tf.image.draw_bounding_boxes&lt;/code&gt;&lt;/a&gt; to visualize what the bounding box looks like.</source>
          <target state="translated">このOpの出力は、元の画像をトリミングするために使用できる単一の境界ボックスです。出力は、 &lt;code&gt;begin&lt;/code&gt; 、 &lt;code&gt;size&lt;/code&gt; 、 &lt;code&gt;bboxes&lt;/code&gt; の3つのテンソルとして返されます。最初の2つのテンソルを&lt;a href=&quot;../slice&quot;&gt; &lt;code&gt;tf.slice&lt;/code&gt; &lt;/a&gt;に直接フィードして、画像をトリミングできます。後者は、バウンディングボックスがどのように見えるかを視覚化するために、&lt;a href=&quot;../image/draw_bounding_boxes&quot;&gt; &lt;code&gt;tf.image.draw_bounding_boxes&lt;/code&gt; &lt;/a&gt;に提供される場合があります。</target>
        </trans-unit>
        <trans-unit id="5e995a951ce7a3cd16e04e8cd70419e327350a30" translate="yes" xml:space="preserve">
          <source>The output of this Op is a single bounding box that may be used to crop the original image. The output is returned as 3 tensors: &lt;code&gt;begin&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt; and &lt;code&gt;bboxes&lt;/code&gt;. The first 2 tensors can be fed directly into &lt;a href=&quot;../slice&quot;&gt;&lt;code&gt;tf.slice&lt;/code&gt;&lt;/a&gt; to crop the image. The latter may be supplied to &lt;a href=&quot;draw_bounding_boxes&quot;&gt;&lt;code&gt;tf.image.draw_bounding_boxes&lt;/code&gt;&lt;/a&gt; to visualize what the bounding box looks like.</source>
          <target state="translated">このOpの出力は、元の画像のトリミングに使用できる単一の境界ボックスです。出力は、 &lt;code&gt;begin&lt;/code&gt; 、 &lt;code&gt;size&lt;/code&gt; 、および &lt;code&gt;bboxes&lt;/code&gt; の 3つのテンソルとして返されます。最初の2つのテンソルを&lt;a href=&quot;../slice&quot;&gt; &lt;code&gt;tf.slice&lt;/code&gt; &lt;/a&gt;に直接入力して、画像をトリミングできます。後者は、&lt;a href=&quot;draw_bounding_boxes&quot;&gt; &lt;code&gt;tf.image.draw_bounding_boxes&lt;/code&gt; &lt;/a&gt;に提供して、境界ボックスがどのように見えるかを視覚化できます。</target>
        </trans-unit>
        <trans-unit id="867a41c15dc52766b0de85d04ee44344a9063866" translate="yes" xml:space="preserve">
          <source>The output of this method is a 3D &lt;code&gt;Tensor&lt;/code&gt; of shape &lt;code&gt;[batch_size, T, D]&lt;/code&gt;. &lt;code&gt;T&lt;/code&gt; is the maximum sequence length for this batch, which could differ from batch to batch.</source>
          <target state="translated">このメソッドの出力は、形状 &lt;code&gt;[batch_size, T, D]&lt;/code&gt; 3D &lt;code&gt;Tensor&lt;/code&gt; です。 &lt;code&gt;T&lt;/code&gt; はこのバッチの最大シーケンス長であり、バッチごとに異なる場合があります。</target>
        </trans-unit>
        <trans-unit id="753b9e20d6aac1628ca75bf0511c387d43eb2530" translate="yes" xml:space="preserve">
          <source>The output of this operation is a set of integers indexing into the input collection of bounding boxes representing the selected boxes. The bounding box coordinates corresponding to the selected indices can then be obtained using the &lt;code&gt;tf.gather operation&lt;/code&gt;. For example:</source>
          <target state="translated">この操作の出力は、選択されたボックスを表すバウンディングボックスの入力コレクションにインデックスを付ける整数のセットです。選択したインデックスに対応するバウンディングボックスの座標は、 &lt;code&gt;tf.gather operation&lt;/code&gt; を使用して取得できます。例えば：</target>
        </trans-unit>
        <trans-unit id="da6a14177a19f48147884875b20440b0d347e68f" translate="yes" xml:space="preserve">
          <source>The output shape is identical to the inputs', except along the concat dimension, where it is the sum of the inputs' sizes along that dimension.</source>
          <target state="translated">出力形状は入力形状と同じですが、コンカット次元に沿った以外は入力形状と同じで、その次元に沿った入力サイズの総和となります。</target>
        </trans-unit>
        <trans-unit id="3b30057b1110d4946855f0f7f77e28efcaa8cc94" translate="yes" xml:space="preserve">
          <source>The output shapes are compatible in a way that the first dimension of all tensors are the same and equal to the number of possible split nodes for each feature.</source>
          <target state="translated">出力形状は、すべてのテンソルの第1次元が同じであり、各特徴について分割可能なノードの数と等しくなるように互換性があります。</target>
        </trans-unit>
        <trans-unit id="3907a316796c56324c363351b8f0ffb1dbcb1c06" translate="yes" xml:space="preserve">
          <source>The output signature of &lt;code&gt;fn&lt;/code&gt;. Must be specified if &lt;code&gt;fn&lt;/code&gt;'s input and output signatures are different (i.e., if their structures, dtypes, or tensor types do not match). &lt;code&gt;fn_output_signature&lt;/code&gt; can be specified using any of the following:</source>
          <target state="translated">&lt;code&gt;fn&lt;/code&gt; の出力シグネチャ。 &lt;code&gt;fn&lt;/code&gt; の入力シグネチャと出力シグネチャが異なる場合（つまり、それらの構造、dtype、またはテンソルタイプが一致しない場合）に指定する必要があります。 &lt;code&gt;fn_output_signature&lt;/code&gt; は、次のいずれかを使用して指定できます。</target>
        </trans-unit>
        <trans-unit id="eac10a40d7ace5a75143c2fbccbd028ece77a9fb" translate="yes" xml:space="preserve">
          <source>The output slice &lt;code&gt;i&lt;/code&gt; along dimension &lt;code&gt;batch_axis&lt;/code&gt; is then given by input slice &lt;code&gt;i&lt;/code&gt;, with the first &lt;code&gt;seq_lengths[i]&lt;/code&gt; slices along dimension &lt;code&gt;seq_axis&lt;/code&gt; reversed.</source>
          <target state="translated">出力スライス &lt;code&gt;i&lt;/code&gt; 寸法に沿って &lt;code&gt;batch_axis&lt;/code&gt; は、入力スライスによって与えられる。 &lt;code&gt;i&lt;/code&gt; 最初で、 &lt;code&gt;seq_lengths[i]&lt;/code&gt; 次元に沿ってスライス &lt;code&gt;seq_axis&lt;/code&gt; を逆転させました。</target>
        </trans-unit>
        <trans-unit id="b24ce3e8aaca6570e3ec8cec6e775f6c5f2c52dd" translate="yes" xml:space="preserve">
          <source>The output slice &lt;code&gt;i&lt;/code&gt; along dimension &lt;code&gt;batch_dim&lt;/code&gt; is then given by input slice &lt;code&gt;i&lt;/code&gt;, with the first &lt;code&gt;seq_lengths[i]&lt;/code&gt; slices along dimension &lt;code&gt;seq_dim&lt;/code&gt; reversed.</source>
          <target state="translated">出力スライス &lt;code&gt;i&lt;/code&gt; 寸法に沿って &lt;code&gt;batch_dim&lt;/code&gt; は、入力スライスによって与えられる &lt;code&gt;i&lt;/code&gt; は、第一と &lt;code&gt;seq_lengths[i]&lt;/code&gt; 次元に沿ってスライス &lt;code&gt;seq_dim&lt;/code&gt; を逆転させました。</target>
        </trans-unit>
        <trans-unit id="76e5d3d89821526e9a3ed69b0fc0e5605bddfe28" translate="yes" xml:space="preserve">
          <source>The output stream, logging level, or file to print to. Defaults to sys.stderr, but sys.stdout, tf.compat.v1.logging.info, tf.compat.v1.logging.warning, tf.compat.v1.logging.error, absl.logging.info, absl.logging.warning and absl.logging.error are also supported. To print to a file, pass a string started with &quot;file://&quot; followed by the file path, e.g., &quot;file:///tmp/foo.out&quot;.</source>
          <target state="translated">出力ストリーム、ロギングレベル、または印刷先のファイル。デフォルトはsys.stderrですが、sys.stdout、tf.compat.v1.logging.info、tf.compat.v1.logging.warning、tf.compat.v1.logging.error、absl.logging.info、absl.logging.warning、absl.logging.errorもサポートされています。ファイルに印刷するには、&quot;file://&quot;で始まる文字列とファイルパスを渡します。</target>
        </trans-unit>
        <trans-unit id="098e1ce5365a1d1a1384c17c4ced06e659b0880f" translate="yes" xml:space="preserve">
          <source>The output subscripts must contain only labels appearing in at least one of the input subscripts. Furthermore, all dimensions mapping to the same axis label must be equal.</source>
          <target state="translated">出力添え字は、入力添え字の少なくとも 1 つに現れるラベルのみを含む必要があります。さらに、同じ軸ラベルにマッピングされたすべてのディメンジョンが等しくなければなりません。</target>
        </trans-unit>
        <trans-unit id="d0270145e0963e3fa6b4466fddef88fdbf60e481" translate="yes" xml:space="preserve">
          <source>The output tensor has shape &lt;code&gt;[1, 2, 2, 1]&lt;/code&gt; and value:</source>
          <target state="translated">出力テンソルの形状は &lt;code&gt;[1, 2, 2, 1]&lt;/code&gt; 1、2、2、1 ]で、値は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="aff644b1606cf977042c3f329c0b44912b343d5f" translate="yes" xml:space="preserve">
          <source>The output tensor has shape &lt;code&gt;[1, 2, 2, 3]&lt;/code&gt; and value:</source>
          <target state="translated">出力テンソルの形状は &lt;code&gt;[1, 2, 2, 3]&lt;/code&gt; 1、2、2、3 ]で、値は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="26ecc2d485656620c8ddae36c3377b136f2c8ef6" translate="yes" xml:space="preserve">
          <source>The output tensor has shape &lt;code&gt;[1, 4, 4, 1]&lt;/code&gt; and value:</source>
          <target state="translated">出力テンソルの形状は &lt;code&gt;[1, 4, 4, 1]&lt;/code&gt; 1、4、4、1 ]で、値は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="413cce56d7e73e0557f6955da012eeb198f78207" translate="yes" xml:space="preserve">
          <source>The output tensor has shape &lt;code&gt;[2, 2, 4, 1]&lt;/code&gt; and value:</source>
          <target state="translated">出力テンソルの形状は &lt;code&gt;[2, 2, 4, 1]&lt;/code&gt; 2、2、4、1 ]で、値は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="580524501d7754a464d140a489afd8a69565b7e8" translate="yes" xml:space="preserve">
          <source>The output tensor has shape &lt;code&gt;[4, 1, 1, 1]&lt;/code&gt; and value:</source>
          <target state="translated">出力テンソルの形状は &lt;code&gt;[4, 1, 1, 1]&lt;/code&gt; 4、1、1、1 ]で、値は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="43b93cea1c5beede2692779450404b22ddd16414" translate="yes" xml:space="preserve">
          <source>The output tensor has shape &lt;code&gt;[4, 1, 1, 3]&lt;/code&gt; and value:</source>
          <target state="translated">出力テンソルの形状は &lt;code&gt;[4, 1, 1, 3]&lt;/code&gt; 4、1、1、3 ]で、値は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="863590a97a6747705662d02c1d09d524c465ba85" translate="yes" xml:space="preserve">
          <source>The output tensor has shape &lt;code&gt;[4, 2, 2, 1]&lt;/code&gt; and value:</source>
          <target state="translated">出力テンソルの形状は &lt;code&gt;[4, 2, 2, 1]&lt;/code&gt; 4、2、2、1 ]で、値は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="951a2f1acb5ea54cd01c5c69fad552b3af0398ec" translate="yes" xml:space="preserve">
          <source>The output tensor has shape &lt;code&gt;[8, 1, 2, 1]&lt;/code&gt; and value:</source>
          <target state="translated">出力テンソルの形状は &lt;code&gt;[8, 1, 2, 1]&lt;/code&gt; 8、1、2、1 ]で、値は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="b991f9c184601aa1cf79a030dce35cd2e1811686" translate="yes" xml:space="preserve">
          <source>The output tensor has shape &lt;code&gt;[8, 1, 3, 1]&lt;/code&gt; and value:</source>
          <target state="translated">出力テンソルの形状は &lt;code&gt;[8, 1, 3, 1]&lt;/code&gt; 8、1、3、1 ]で、値は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="8a7212b9117e06db921246aafe5499cc8ff0cedb" translate="yes" xml:space="preserve">
          <source>The output tensor is 2-D or higher with shape &lt;code&gt;[..., r_o, c_o]&lt;/code&gt;, where:</source>
          <target state="translated">出力テンソルは2次元以上で、形状は &lt;code&gt;[..., r_o, c_o]&lt;/code&gt; 。ここで、</target>
        </trans-unit>
        <trans-unit id="c6dc975d4ffc27e7fe4b516c5e078460e61b472d" translate="yes" xml:space="preserve">
          <source>The output tensor is a tensor with dimensions described by 'size' whose values are extracted from 'input' starting at the offsets in 'begin'.</source>
          <target state="translated">出力テンソルは、'begin'のオフセットから始まる'input'から値が抽出された'size'で記述された次元を持つテンソルである。</target>
        </trans-unit>
        <trans-unit id="018a92a28c57571fe5c1edcfb924689c52abc4b8" translate="yes" xml:space="preserve">
          <source>The output tensor, of rank 3.</source>
          <target state="translated">ランク3の出力テンソル。</target>
        </trans-unit>
        <trans-unit id="1f5eef2e4414626524178eb10c4ab831f83220c9" translate="yes" xml:space="preserve">
          <source>The output tensor.</source>
          <target state="translated">出力テンソルです。</target>
        </trans-unit>
        <trans-unit id="f156d1cf6b13fd91d5c1751333de4bfa7481e5ec" translate="yes" xml:space="preserve">
          <source>The output tensors for the loop variables after the loop. If &lt;code&gt;return_same_structure&lt;/code&gt; is True, the return value has the same structure as &lt;code&gt;loop_vars&lt;/code&gt;. If &lt;code&gt;return_same_structure&lt;/code&gt; is False, the return value is a Tensor, TensorArray or IndexedSlice if the length of &lt;code&gt;loop_vars&lt;/code&gt; is 1, or a list otherwise.</source>
          <target state="translated">ループ後のループ変数の出力テンソル。場合 &lt;code&gt;return_same_structure&lt;/code&gt; が Trueで、戻り値は同じ構造を有する &lt;code&gt;loop_vars&lt;/code&gt; を。場合 &lt;code&gt;return_same_structure&lt;/code&gt; が虚偽であるの長さあれば、戻り値はテンソル、TensorArrayまたはIndexedSliceある &lt;code&gt;loop_vars&lt;/code&gt; は、そうでない場合1、またはリストです。</target>
        </trans-unit>
        <trans-unit id="0bda5fbd6b0783b500c1218ac7c4c0e7746a4905" translate="yes" xml:space="preserve">
          <source>The output tensors for the loop variables after the loop. The return value has the same structure as &lt;code&gt;loop_vars&lt;/code&gt;.</source>
          <target state="translated">ループ後のループ変数の出力テンソル。戻り値の構造は &lt;code&gt;loop_vars&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="5a54d6c5881e40fdc200259b55b1119a1261f8a4" translate="yes" xml:space="preserve">
          <source>The output type (&lt;code&gt;int32&lt;/code&gt; or &lt;code&gt;int64&lt;/code&gt;). Default is &lt;a href=&quot;../tf#int32&quot;&gt;&lt;code&gt;tf.int32&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">出力タイプ（ &lt;code&gt;int32&lt;/code&gt; または &lt;code&gt;int64&lt;/code&gt; ）。デフォルトは&lt;a href=&quot;../tf#int32&quot;&gt; &lt;code&gt;tf.int32&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="abf2d0fef772f974b83b58a081ba47917d2e0a4c" translate="yes" xml:space="preserve">
          <source>The output will be a 3x2 matrix:</source>
          <target state="translated">出力は3x2の行列になります。</target>
        </trans-unit>
        <trans-unit id="1bcada90c4c3eacc21413e8c1e200a0e90b07ffc" translate="yes" xml:space="preserve">
          <source>The output will then have shape &lt;code&gt;(32, 10, 32)&lt;/code&gt;.</source>
          <target state="translated">出力の形状は &lt;code&gt;(32, 10, 32)&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="6d23cb786d0f9d1271884eaa7c1f7cc8c8a656c8" translate="yes" xml:space="preserve">
          <source>The output will then have shape &lt;code&gt;(32, 10, 8)&lt;/code&gt;.</source>
          <target state="translated">出力の形状は &lt;code&gt;(32, 10, 8)&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="95238fe986246430e838c38242139b3ddafc69a1" translate="yes" xml:space="preserve">
          <source>The output(s) of the model. See Functional API example below.</source>
          <target state="translated">モデルの出力。下記のFunctional APIの例を参照してください。</target>
        </trans-unit>
        <trans-unit id="25ae41f4c527c0741341a2f8b321fd1e43f0f98b" translate="yes" xml:space="preserve">
          <source>The outputs are a deterministic function of &lt;code&gt;shape&lt;/code&gt; and &lt;code&gt;seed&lt;/code&gt;.</source>
          <target state="translated">出力は、 &lt;code&gt;shape&lt;/code&gt; と &lt;code&gt;seed&lt;/code&gt; 決定論的関数です。</target>
        </trans-unit>
        <trans-unit id="179a09c09a45e5c62e2dec3d73d951ec617567f3" translate="yes" xml:space="preserve">
          <source>The outputs are a deterministic function of &lt;code&gt;shape&lt;/code&gt;, &lt;code&gt;seed&lt;/code&gt;, &lt;code&gt;counts&lt;/code&gt;, and &lt;code&gt;probs&lt;/code&gt;.</source>
          <target state="translated">出力は、 &lt;code&gt;shape&lt;/code&gt; 、 &lt;code&gt;seed&lt;/code&gt; 、 &lt;code&gt;counts&lt;/code&gt; 、および &lt;code&gt;probs&lt;/code&gt; 決定論的関数です。</target>
        </trans-unit>
        <trans-unit id="d94bca360c8d84e96136112086d8b12a0b843587" translate="yes" xml:space="preserve">
          <source>The outputs are a deterministic function of &lt;code&gt;shape&lt;/code&gt;, &lt;code&gt;seed&lt;/code&gt;, &lt;code&gt;minval&lt;/code&gt;, and &lt;code&gt;maxval&lt;/code&gt;.</source>
          <target state="translated">出力は、決定論的関数である &lt;code&gt;shape&lt;/code&gt; 、 &lt;code&gt;seed&lt;/code&gt; 、 &lt;code&gt;minval&lt;/code&gt; 、および &lt;code&gt;maxval&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="94289abe2083c6f7cb75f0c826a60167f1e5c8a7" translate="yes" xml:space="preserve">
          <source>The outputs are a deterministic function of &lt;code&gt;shape&lt;/code&gt;, &lt;code&gt;seed&lt;/code&gt;, and &lt;code&gt;alpha&lt;/code&gt;.</source>
          <target state="translated">出力は、 &lt;code&gt;shape&lt;/code&gt; 、 &lt;code&gt;seed&lt;/code&gt; 、および &lt;code&gt;alpha&lt;/code&gt; 決定論的関数です。</target>
        </trans-unit>
        <trans-unit id="228f72119b53e369b51ce6a29a98f2313a7f281f" translate="yes" xml:space="preserve">
          <source>The outputs are a deterministic function of &lt;code&gt;shape&lt;/code&gt;, &lt;code&gt;seed&lt;/code&gt;, and &lt;code&gt;lam&lt;/code&gt;.</source>
          <target state="translated">出力は、 &lt;code&gt;shape&lt;/code&gt; 、 &lt;code&gt;seed&lt;/code&gt; 、および &lt;code&gt;lam&lt;/code&gt; の決定論的関数です。</target>
        </trans-unit>
        <trans-unit id="262b53d310948dd3d4d6f3d1b24c8027dcc78d4c" translate="yes" xml:space="preserve">
          <source>The outputs from all shards are concatenated back together along their 0-th dimension.</source>
          <target state="translated">すべてのシャードからの出力は、その0番目の次元に沿って連結されます。</target>
        </trans-unit>
        <trans-unit id="fec5d02e1747f7a22db33ab6777959dc638f2020" translate="yes" xml:space="preserve">
          <source>The outputs of functions used as &lt;code&gt;signatures&lt;/code&gt; must either be flat lists, in which case outputs will be numbered, or a dictionary mapping string keys to &lt;code&gt;Tensor&lt;/code&gt;, in which case the keys will be used to name outputs.</source>
          <target state="translated">&lt;code&gt;signatures&lt;/code&gt; として使用される関数の出力は、出力に番号が付けられるフラットリストであるか、文字列キーを &lt;code&gt;Tensor&lt;/code&gt; にマッピングする辞書である必要があります。この場合、キーは出力の名前付けに使用されます。</target>
        </trans-unit>
        <trans-unit id="3777ae82c580b33611793d1c79fb38091c169efb" translate="yes" xml:space="preserve">
          <source>The package that this class belongs to.</source>
          <target state="translated">このクラスが属するパッケージ。</target>
        </trans-unit>
        <trans-unit id="f4fe37226e907ad6b84032ccb7a1a60c428d9656" translate="yes" xml:space="preserve">
          <source>The padded size of each dimension D of the output is:</source>
          <target state="translated">出力された各次元Dのパッドサイズは</target>
        </trans-unit>
        <trans-unit id="a3493bda610bfabe1d614c17be7bea5bab6bc509" translate="yes" xml:space="preserve">
          <source>The padding algorithm, must be &quot;SAME&quot; or &quot;VALID&quot;. Defaults to &quot;SAME&quot;. See the &quot;returns&quot; section of &lt;a href=&quot;convolution&quot;&gt;&lt;code&gt;tf.nn.convolution&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">パディングアルゴリズムは、「SAME」または「VALID」である必要があります。デフォルトは「SAME」です。詳細については、&lt;a href=&quot;convolution&quot;&gt; &lt;code&gt;tf.nn.convolution&lt;/code&gt; の&lt;/a&gt;「returns」セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="94a793cb35afefaa9825726cef177d5eba1c0835" translate="yes" xml:space="preserve">
          <source>The padding algorithm, must be &quot;SAME&quot; or &quot;VALID&quot;. See the &quot;returns&quot; section of &lt;a href=&quot;../../../nn/convolution&quot;&gt;&lt;code&gt;tf.nn.convolution&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">パディングアルゴリズムは、「SAME」または「VALID」である必要があります。詳細については、&lt;a href=&quot;../../../nn/convolution&quot;&gt; &lt;code&gt;tf.nn.convolution&lt;/code&gt; の&lt;/a&gt;「returns」セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="82cf1bc0ef022c1c7dcb21d0cd3cf77bf756e7b4" translate="yes" xml:space="preserve">
          <source>The paper demonstrates the performance of MobileNets using &lt;code&gt;alpha&lt;/code&gt; values of 1.0 (also called 100 % MobileNet), 0.35, 0.5, 0.75, 1.0, 1.3, and 1.4 For each of these &lt;code&gt;alpha&lt;/code&gt; values, weights for 5 different input image sizes are provided (224, 192, 160, 128, and 96).</source>
          <target state="translated">このペーパーでは、 &lt;code&gt;alpha&lt;/code&gt; 値1.0（100％MobileNetとも呼ばれる）、0.35、0.5、0.75、1.0、1.3、および1.4を使用したMobileNetのパフォーマンスを示しています。これらの &lt;code&gt;alpha&lt;/code&gt; 値のそれぞれについて、5つの異なる入力画像サイズの重みが提供されます（224 、192、160、128、および96）。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
