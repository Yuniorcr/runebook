<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="tensorflow">
    <body>
      <group id="tensorflow">
        <trans-unit id="083730c076520c06f329b3a1d05a2c9ceace46aa" translate="yes" xml:space="preserve">
          <source>SpaceToBatch for N-D tensors of type T.</source>
          <target state="translated">T型のN-DテンソルのSpaceToBatchです。</target>
        </trans-unit>
        <trans-unit id="02dff74c4fb55771bcd9c6f3bae239b5c926752d" translate="yes" xml:space="preserve">
          <source>SpaceToBatchND</source>
          <target state="translated">SpaceToBatchND</target>
        </trans-unit>
        <trans-unit id="27c2f818204c82b7170206e8d239ed96f576808c" translate="yes" xml:space="preserve">
          <source>SpaceToDepth</source>
          <target state="translated">SpaceToDepth</target>
        </trans-unit>
        <trans-unit id="70947ab2fc979f29296aaef123d22483ba02139e" translate="yes" xml:space="preserve">
          <source>SpaceToDepth for tensors of type T.</source>
          <target state="translated">T型のテンソルのSpaceToDepthです。</target>
        </trans-unit>
        <trans-unit id="b32e033310ebd5e93b4041f5df9964210ade963a" translate="yes" xml:space="preserve">
          <source>Sparse Tensor Representation.</source>
          <target state="translated">疎なテンソル表現。</target>
        </trans-unit>
        <trans-unit id="297fd960fda1b45bfadfb929e956fa6dcd5df811" translate="yes" xml:space="preserve">
          <source>Sparse addition of two CSR matrices, C = alpha * A + beta * B.</source>
          <target state="translated">2つのCSR行列、C=alpha*A+beta*Bの疎な加算。</target>
        </trans-unit>
        <trans-unit id="fd6ed54737aabfc431d2acb0e85f89ee895aef63" translate="yes" xml:space="preserve">
          <source>Sparse categorical accuracy values.</source>
          <target state="translated">疎なカテゴリ精度値。</target>
        </trans-unit>
        <trans-unit id="a4f475eac216a4861e2e8977461d56eea5138d37" translate="yes" xml:space="preserve">
          <source>Sparse categorical crossentropy loss value.</source>
          <target state="translated">疎なカテゴリカルクロセントロピー損失値。</target>
        </trans-unit>
        <trans-unit id="069a9228c751a538f52a392a1cd0e50f26fac743" translate="yes" xml:space="preserve">
          <source>Sparse gradients are represented by &lt;code&gt;IndexedSlices&lt;/code&gt;.</source>
          <target state="translated">スパースグラデーションは &lt;code&gt;IndexedSlices&lt;/code&gt; で表されます。</target>
        </trans-unit>
        <trans-unit id="746eaddaf50318b240e02275edbdb2830f3ccb5c" translate="yes" xml:space="preserve">
          <source>Sparse top K categorical accuracy value.</source>
          <target state="translated">疎なトップKのカテゴリ精度値。</target>
        </trans-unit>
        <trans-unit id="fd4a8b5726a640c6ed69cf0e30bab1e6e2ffb32d" translate="yes" xml:space="preserve">
          <source>Sparse update '*var' as FOBOS algorithm with fixed learning rate.</source>
          <target state="translated">FOBOSアルゴリズムとしての疎な更新'*var'を学習率を固定化したもの。</target>
        </trans-unit>
        <trans-unit id="b1694f3eadba000742e82cef2fa78625d8e9076c" translate="yes" xml:space="preserve">
          <source>Sparse update entries in '&lt;em&gt;var' and '&lt;/em&gt;accum' according to FOBOS algorithm.</source>
          <target state="translated">FOBOSアルゴリズムに従って、「&lt;em&gt;var」および「&lt;/em&gt; accum」のスパース更新エントリ。</target>
        </trans-unit>
        <trans-unit id="a6309026e4e714f71ee3ee89779ccfe84cf4e87e" translate="yes" xml:space="preserve">
          <source>Sparse-matrix-multiplies two CSR matrices &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">スパース行列-2つのCSR行列 &lt;code&gt;a&lt;/code&gt; と &lt;code&gt;b&lt;/code&gt; を乗算します。</target>
        </trans-unit>
        <trans-unit id="8bfde9fc0aa278505d4dfa97aa1b467e722aa8e8" translate="yes" xml:space="preserve">
          <source>SparseAccumulatorApplyGradient</source>
          <target state="translated">SparseAccumulatorApplyGradient</target>
        </trans-unit>
        <trans-unit id="bdd7ea5381f2da5f60515c1c2776cf94f0431cbd" translate="yes" xml:space="preserve">
          <source>SparseAccumulatorTakeGradient</source>
          <target state="translated">SparseAccumulatorTakeGradient</target>
        </trans-unit>
        <trans-unit id="249f12388f8e22f1c462f0fdfc7611ab0874399a" translate="yes" xml:space="preserve">
          <source>SparseAdd</source>
          <target state="translated">SparseAdd</target>
        </trans-unit>
        <trans-unit id="dcc522bee3927102912fd66127381b4718966e6c" translate="yes" xml:space="preserve">
          <source>SparseAddGrad</source>
          <target state="translated">SparseAddGrad</target>
        </trans-unit>
        <trans-unit id="1cdfbb3c5ab2d562fe3c475ab94c701cb796104c" translate="yes" xml:space="preserve">
          <source>SparseApplyAdadelta</source>
          <target state="translated">SparseApplyAdadelta</target>
        </trans-unit>
        <trans-unit id="3d418cb7a1ad844d45b106ce39b28c8d703bbf1d" translate="yes" xml:space="preserve">
          <source>SparseApplyAdagrad</source>
          <target state="translated">SparseApplyAdagrad</target>
        </trans-unit>
        <trans-unit id="9367876d4671a0952c532dc60536c6bd51dfd3d3" translate="yes" xml:space="preserve">
          <source>SparseApplyAdagradDA</source>
          <target state="translated">SparseApplyAdagradDA</target>
        </trans-unit>
        <trans-unit id="3b6ee3d5c2961a35df0e0bcf97b22a79b8ea2cd1" translate="yes" xml:space="preserve">
          <source>SparseApplyAdagradV2</source>
          <target state="translated">SparseApplyAdagradV2</target>
        </trans-unit>
        <trans-unit id="b77eb40a01e4db883fe1ee8dd8dfe4307a2a1aaa" translate="yes" xml:space="preserve">
          <source>SparseApplyCenteredRMSProp</source>
          <target state="translated">SparseApplyCenteredRMSProp</target>
        </trans-unit>
        <trans-unit id="4877869e59f0ea0b186f27748e4f15df0c034e2d" translate="yes" xml:space="preserve">
          <source>SparseApplyFtrl</source>
          <target state="translated">SparseApplyFtrl</target>
        </trans-unit>
        <trans-unit id="800d3891ccb155f6396234527980fa18782b4933" translate="yes" xml:space="preserve">
          <source>SparseApplyFtrlV2</source>
          <target state="translated">SparseApplyFtrlV2</target>
        </trans-unit>
        <trans-unit id="a22f1b0250fab301e3982b2a1cdf630ee577baa8" translate="yes" xml:space="preserve">
          <source>SparseApplyMomentum</source>
          <target state="translated">SparseApplyMomentum</target>
        </trans-unit>
        <trans-unit id="43918531d5decd8bc5f29c17a5ab14d60c356787" translate="yes" xml:space="preserve">
          <source>SparseApplyProximalAdagrad</source>
          <target state="translated">SparseApplyProximalAdagrad</target>
        </trans-unit>
        <trans-unit id="c31a2accba554579538ec14c88a2c1d8888ed3f2" translate="yes" xml:space="preserve">
          <source>SparseApplyProximalGradientDescent</source>
          <target state="translated">SparseApplyProximalGradientDescent</target>
        </trans-unit>
        <trans-unit id="73ff23530143b457e0b5aa626f580af31cb2805a" translate="yes" xml:space="preserve">
          <source>SparseApplyRMSProp</source>
          <target state="translated">SparseApplyRMSProp</target>
        </trans-unit>
        <trans-unit id="69f1147a0bb3348ad6860c7cf47c3b1be2927cfc" translate="yes" xml:space="preserve">
          <source>SparseBincount</source>
          <target state="translated">SparseBincount</target>
        </trans-unit>
        <trans-unit id="9741604df92212d707cf823523096c0c10605504" translate="yes" xml:space="preserve">
          <source>SparseConcat</source>
          <target state="translated">SparseConcat</target>
        </trans-unit>
        <trans-unit id="e172228800bb4ef266cfae249360c9adb18c222b" translate="yes" xml:space="preserve">
          <source>SparseConditionalAccumulator</source>
          <target state="translated">SparseConditionalAccumulator</target>
        </trans-unit>
        <trans-unit id="343e97bcbfdc55326d10655662c2ff72f0e6c132" translate="yes" xml:space="preserve">
          <source>SparseCountSparseOutput</source>
          <target state="translated">SparseCountSparseOutput</target>
        </trans-unit>
        <trans-unit id="fc393f647312656ab5f2d94fea4751142ed63d03" translate="yes" xml:space="preserve">
          <source>SparseCross</source>
          <target state="translated">SparseCross</target>
        </trans-unit>
        <trans-unit id="b6bca69b1b714f2d3ea37d2437a5d444c90d3630" translate="yes" xml:space="preserve">
          <source>SparseCrossHashed</source>
          <target state="translated">SparseCrossHashed</target>
        </trans-unit>
        <trans-unit id="790117eab2ba1913ce866d879ee430b559bb3b5a" translate="yes" xml:space="preserve">
          <source>SparseCrossV2</source>
          <target state="translated">SparseCrossV2</target>
        </trans-unit>
        <trans-unit id="17b61339890f8722663e2e5f752e314dad0d56df" translate="yes" xml:space="preserve">
          <source>SparseDenseCwiseAdd</source>
          <target state="translated">SparseDenseCwiseAdd</target>
        </trans-unit>
        <trans-unit id="fc5f908a0a14da3d930f57bd0a310cc42f95c577" translate="yes" xml:space="preserve">
          <source>SparseDenseCwiseDiv</source>
          <target state="translated">SparseDenseCwiseDiv</target>
        </trans-unit>
        <trans-unit id="4fe72e75eb5b66d560741c8aa08e1d5c0f66c139" translate="yes" xml:space="preserve">
          <source>SparseDenseCwiseMul</source>
          <target state="translated">SparseDenseCwiseMul</target>
        </trans-unit>
        <trans-unit id="62f8d22d634ba8ed1c8905b6b404fb4b601cc5f7" translate="yes" xml:space="preserve">
          <source>SparseFillEmptyRows</source>
          <target state="translated">SparseFillEmptyRows</target>
        </trans-unit>
        <trans-unit id="ab7cf0e36f1467fdc9b3ae7d80d58d84eb0f1ab7" translate="yes" xml:space="preserve">
          <source>SparseFillEmptyRowsGrad</source>
          <target state="translated">SparseFillEmptyRowsGrad</target>
        </trans-unit>
        <trans-unit id="ce8bfa77ed4ac9f3fa1d2a359f566ebe70c39b48" translate="yes" xml:space="preserve">
          <source>SparseMatMul</source>
          <target state="translated">SparseMatMul</target>
        </trans-unit>
        <trans-unit id="3cf42c0cd63305eae39753b795996ee97fab383f" translate="yes" xml:space="preserve">
          <source>SparseMatrixAdd</source>
          <target state="translated">SparseMatrixAdd</target>
        </trans-unit>
        <trans-unit id="48528ac0c2faf4223200c626bfe3edf8ac895e5e" translate="yes" xml:space="preserve">
          <source>SparseMatrixMatMul</source>
          <target state="translated">SparseMatrixMatMul</target>
        </trans-unit>
        <trans-unit id="4279b19a5f9930f0874059a7e46ed173ba5ebe7f" translate="yes" xml:space="preserve">
          <source>SparseMatrixMul</source>
          <target state="translated">SparseMatrixMul</target>
        </trans-unit>
        <trans-unit id="523132d044bbb3d197acb20f4f4feae322e6bcd8" translate="yes" xml:space="preserve">
          <source>SparseMatrixNNZ</source>
          <target state="translated">SparseMatrixNNZ</target>
        </trans-unit>
        <trans-unit id="6c1c0e15bc3c654ae8df6e1f9f8a7ce64a24dfc9" translate="yes" xml:space="preserve">
          <source>SparseMatrixOrderingAMD</source>
          <target state="translated">SparseMatrixOrderingAMD</target>
        </trans-unit>
        <trans-unit id="73e04112a19a80bfa3d79ee64a1f963128da864e" translate="yes" xml:space="preserve">
          <source>SparseMatrixSoftmax</source>
          <target state="translated">SparseMatrixSoftmax</target>
        </trans-unit>
        <trans-unit id="7c621a154eb82c0067ca01796aba9cc0ee388e77" translate="yes" xml:space="preserve">
          <source>SparseMatrixSoftmaxGrad</source>
          <target state="translated">SparseMatrixSoftmaxGrad</target>
        </trans-unit>
        <trans-unit id="66a5c848777562b7ca7fb4cad812e026290aa1df" translate="yes" xml:space="preserve">
          <source>SparseMatrixSparseCholesky</source>
          <target state="translated">SparseMatrixSparseCholesky</target>
        </trans-unit>
        <trans-unit id="c3c5c7b84d2af8b9ef18ab0003ea1ce40ab4e4fc" translate="yes" xml:space="preserve">
          <source>SparseMatrixSparseMatMul</source>
          <target state="translated">SparseMatrixSparseMatMul</target>
        </trans-unit>
        <trans-unit id="54781178ca318ed50d0ca703e108a30afbeb1d7f" translate="yes" xml:space="preserve">
          <source>SparseMatrixTranspose</source>
          <target state="translated">SparseMatrixTranspose</target>
        </trans-unit>
        <trans-unit id="1906bd0dff1f0689566550297562246b450522c5" translate="yes" xml:space="preserve">
          <source>SparseMatrixZeros</source>
          <target state="translated">SparseMatrixZeros</target>
        </trans-unit>
        <trans-unit id="cf14b376c29c3c02d073e282519a42fad3b16c08" translate="yes" xml:space="preserve">
          <source>SparseReduceMax</source>
          <target state="translated">SparseReduceMax</target>
        </trans-unit>
        <trans-unit id="abe4ee718716b4f2e1444db7308390e1ee3ed7ac" translate="yes" xml:space="preserve">
          <source>SparseReduceMaxSparse</source>
          <target state="translated">SparseReduceMaxSparse</target>
        </trans-unit>
        <trans-unit id="0fd09e8caf8a4d6991cfd23e07910f3f9c598d41" translate="yes" xml:space="preserve">
          <source>SparseReduceSum</source>
          <target state="translated">SparseReduceSum</target>
        </trans-unit>
        <trans-unit id="30eac2752ce1ceab0de7a5545abdb8ca33742ae0" translate="yes" xml:space="preserve">
          <source>SparseReduceSumSparse</source>
          <target state="translated">SparseReduceSumSparse</target>
        </trans-unit>
        <trans-unit id="6339f44ab9a27d89470df90d3d6c053bd1d15396" translate="yes" xml:space="preserve">
          <source>SparseReorder</source>
          <target state="translated">SparseReorder</target>
        </trans-unit>
        <trans-unit id="db860331321faa0d2837c12e83a4dc71a4d1ea38" translate="yes" xml:space="preserve">
          <source>SparseReshape</source>
          <target state="translated">SparseReshape</target>
        </trans-unit>
        <trans-unit id="a02cc82cd67e5d1fd156cbcd34d472d5fc5ef081" translate="yes" xml:space="preserve">
          <source>SparseSegmentMean</source>
          <target state="translated">SparseSegmentMean</target>
        </trans-unit>
        <trans-unit id="26f1162ce1d82f470fd702e14f79d5e7c9e39609" translate="yes" xml:space="preserve">
          <source>SparseSegmentMeanGrad</source>
          <target state="translated">SparseSegmentMeanGrad</target>
        </trans-unit>
        <trans-unit id="5146d89f1fd003f0d5bc8a63fe20aa9844ce7202" translate="yes" xml:space="preserve">
          <source>SparseSegmentMeanWithNumSegments</source>
          <target state="translated">SparseSegmentMeanWithNumSegments</target>
        </trans-unit>
        <trans-unit id="3e4e8a4d496f5ca492077964d5dc9586fef486e1" translate="yes" xml:space="preserve">
          <source>SparseSegmentSqrtN</source>
          <target state="translated">SparseSegmentSqrtN</target>
        </trans-unit>
        <trans-unit id="ccba9de2aad7b2af6dbc3cdd0e9d48e92197309f" translate="yes" xml:space="preserve">
          <source>SparseSegmentSqrtNGrad</source>
          <target state="translated">SparseSegmentSqrtNGrad</target>
        </trans-unit>
        <trans-unit id="0c8b21214653614b8e14c4a9191ad289716fc3ed" translate="yes" xml:space="preserve">
          <source>SparseSegmentSqrtNWithNumSegments</source>
          <target state="translated">SparseSegmentSqrtNWithNumSegments</target>
        </trans-unit>
        <trans-unit id="f3f0a05296f1ec028f1ecacda18d19691113dd3f" translate="yes" xml:space="preserve">
          <source>SparseSegmentSum</source>
          <target state="translated">SparseSegmentSum</target>
        </trans-unit>
        <trans-unit id="4c106d8d638767bc6148f2ac91b51f75b015d9f8" translate="yes" xml:space="preserve">
          <source>SparseSegmentSumWithNumSegments</source>
          <target state="translated">SparseSegmentSumWithNumSegments</target>
        </trans-unit>
        <trans-unit id="bde3aa2f1ff79895c18f788c8aaa0a84703fc850" translate="yes" xml:space="preserve">
          <source>SparseSlice</source>
          <target state="translated">SparseSlice</target>
        </trans-unit>
        <trans-unit id="07ee0f62ef583185aec4e065c61c02f50b42d3e8" translate="yes" xml:space="preserve">
          <source>SparseSliceGrad</source>
          <target state="translated">SparseSliceGrad</target>
        </trans-unit>
        <trans-unit id="1e170979bb98e066666e1d7c02b1980ab0de0f1e" translate="yes" xml:space="preserve">
          <source>SparseSoftmax</source>
          <target state="translated">SparseSoftmax</target>
        </trans-unit>
        <trans-unit id="f1a6fa9f8ea7ca8850a5f1ec7eb72dfce8fcb36b" translate="yes" xml:space="preserve">
          <source>SparseSoftmaxCrossEntropyWithLogits</source>
          <target state="translated">SparseSoftmaxCrossEntropyWithLogits</target>
        </trans-unit>
        <trans-unit id="c1aadec295283e1c2e27af2edb9e7a99885ecfa2" translate="yes" xml:space="preserve">
          <source>SparseSparseMaximum</source>
          <target state="translated">SparseSparseMaximum</target>
        </trans-unit>
        <trans-unit id="0db7745b65e7336d0412c2ecedfd8e19202d9a9b" translate="yes" xml:space="preserve">
          <source>SparseSparseMinimum</source>
          <target state="translated">SparseSparseMinimum</target>
        </trans-unit>
        <trans-unit id="17f6a95e588289e6f27054ecb850364d5a4110d1" translate="yes" xml:space="preserve">
          <source>SparseSplit</source>
          <target state="translated">SparseSplit</target>
        </trans-unit>
        <trans-unit id="9cea8a4cddb4b8d1cc0732cca1c0b02187d2f314" translate="yes" xml:space="preserve">
          <source>SparseTensor (or dense Matrix) A, of rank 2.</source>
          <target state="translated">ランク2のスパーステンソル(または密行列)A。</target>
        </trans-unit>
        <trans-unit id="7b4c1d1909f9bc68a995624a409254a398966f07" translate="yes" xml:space="preserve">
          <source>SparseTensor is not supported. The return value of the decorated function must be a Tensor or a list/tuple of Tensors.</source>
          <target state="translated">SparseTensorはサポートされていません。デコレーション関数の戻り値はテンソルまたはテンソルのリスト/タプルでなければなりません。</target>
        </trans-unit>
        <trans-unit id="a1ffd7ce11921ece1834d4731c951cc910508d1f" translate="yes" xml:space="preserve">
          <source>SparseTensor referred by first key:</source>
          <target state="translated">最初のキーで参照される SparseTensor。</target>
        </trans-unit>
        <trans-unit id="1c32b414e828af630366a2f4a79388908c22a788" translate="yes" xml:space="preserve">
          <source>SparseTensor referred by second key:</source>
          <target state="translated">2 番目のキーで参照される SparseTensor。</target>
        </trans-unit>
        <trans-unit id="4b02c490105a73e4677e7af826183a355e348428" translate="yes" xml:space="preserve">
          <source>SparseTensorDenseAdd</source>
          <target state="translated">SparseTensorDenseAdd</target>
        </trans-unit>
        <trans-unit id="9b0e03d3f005e119dab66c03dae6ae4555a46d37" translate="yes" xml:space="preserve">
          <source>SparseTensorDenseMatMul</source>
          <target state="translated">SparseTensorDenseMatMul</target>
        </trans-unit>
        <trans-unit id="fd609f1385af3c0983488849c5d3db3d54dcdc0d" translate="yes" xml:space="preserve">
          <source>SparseTensorSliceDataset</source>
          <target state="translated">SparseTensorSliceDataset</target>
        </trans-unit>
        <trans-unit id="b5b086dcba335f8373b291889b402724c457e59d" translate="yes" xml:space="preserve">
          <source>SparseTensorToCSRSparseMatrix</source>
          <target state="translated">SparseTensorToCSRSparseMatrix</target>
        </trans-unit>
        <trans-unit id="fa5e3369b1a543faf6701e41ac2ec3d01253f981" translate="yes" xml:space="preserve">
          <source>SparseTensorValue(indices, values, dense_shape)</source>
          <target state="translated">SparseTensorValue(index,values,dense_shape)</target>
        </trans-unit>
        <trans-unit id="7abf55a16fe5d57246cc5925f0abff9c75820d59" translate="yes" xml:space="preserve">
          <source>SparseTensors</source>
          <target state="translated">SparseTensors</target>
        </trans-unit>
        <trans-unit id="a1633924cf157b2cfe630e97431895832f91082c" translate="yes" xml:space="preserve">
          <source>SparseToDense</source>
          <target state="translated">SparseToDense</target>
        </trans-unit>
        <trans-unit id="7c3a69501a810936e4544b3f411c791266754835" translate="yes" xml:space="preserve">
          <source>SparseToSparseSetOperation</source>
          <target state="translated">SparseToSparseSetOperation</target>
        </trans-unit>
        <trans-unit id="6ee93c8da33edf23834992d6432a8f0e409815de" translate="yes" xml:space="preserve">
          <source>Spatial 1D version of Dropout.</source>
          <target state="translated">ドロップアウトの空間1D版。</target>
        </trans-unit>
        <trans-unit id="44ada72cd6d79ae9c07a9cb3d7a9ed46bb7aa114" translate="yes" xml:space="preserve">
          <source>Spatial 2D version of Dropout.</source>
          <target state="translated">Dropoutの空間2D版。</target>
        </trans-unit>
        <trans-unit id="1b491fa379bdaddd72ebc9a3730d0e2efd96f9bc" translate="yes" xml:space="preserve">
          <source>Spatial 3D version of Dropout.</source>
          <target state="translated">Dropoutの空間3D版。</target>
        </trans-unit>
        <trans-unit id="c3f29e68c2f47d80899bc4477479be5589b1d283" translate="yes" xml:space="preserve">
          <source>Special math functions (like: &lt;a href=&quot;../../math/igamma&quot;&gt;&lt;code&gt;tf.math.igamma&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../math/zeta&quot;&gt;&lt;code&gt;tf.math.zeta&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">特別な数学関数（例：&lt;a href=&quot;../../math/igamma&quot;&gt; &lt;code&gt;tf.math.igamma&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../../math/zeta&quot;&gt; &lt;code&gt;tf.math.zeta&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="42e77439e21bd348d1d9ca7ffa4988277cfd7529" translate="yes" xml:space="preserve">
          <source>Special math functions (like: &lt;a href=&quot;math/igamma&quot;&gt;&lt;code&gt;tf.math.igamma&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;math/zeta&quot;&gt;&lt;code&gt;tf.math.zeta&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">特別な数学関数（例：&lt;a href=&quot;math/igamma&quot;&gt; &lt;code&gt;tf.math.igamma&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;math/zeta&quot;&gt; &lt;code&gt;tf.math.zeta&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="87fda649d275e8caddcb2a2ca9883319168cb531" translate="yes" xml:space="preserve">
          <source>Specifically, &lt;code&gt;grad = -dy * y*y&lt;/code&gt;, where &lt;code&gt;y = 1/x&lt;/code&gt;, and &lt;code&gt;dy&lt;/code&gt; is the corresponding input gradient.</source>
          <target state="translated">具体的には、 &lt;code&gt;grad = -dy * y*y&lt;/code&gt; 、ここで &lt;code&gt;y = 1/x&lt;/code&gt; であり、 &lt;code&gt;dy&lt;/code&gt; は対応する入力勾配です。</target>
        </trans-unit>
        <trans-unit id="9490a5aa68b217b343aa6c32a431a4354acf352d" translate="yes" xml:space="preserve">
          <source>Specifically, &lt;code&gt;grad = dy * (1 - y*y)&lt;/code&gt;, where &lt;code&gt;y = tanh(x)&lt;/code&gt;, and &lt;code&gt;dy&lt;/code&gt; is the corresponding input gradient.</source>
          <target state="translated">具体的には、 &lt;code&gt;grad = dy * (1 - y*y)&lt;/code&gt; 、ここで &lt;code&gt;y = tanh(x)&lt;/code&gt; であり、 &lt;code&gt;dy&lt;/code&gt; は対応する入力勾配です。</target>
        </trans-unit>
        <trans-unit id="b0eb3503a4569dc92b3286b553d1515046a20738" translate="yes" xml:space="preserve">
          <source>Specifically, &lt;code&gt;grad = dy * -0.5 * y^3&lt;/code&gt;, where &lt;code&gt;y = rsqrt(x)&lt;/code&gt;, and &lt;code&gt;dy&lt;/code&gt; is the corresponding input gradient.</source>
          <target state="translated">具体的には、 &lt;code&gt;grad = dy * -0.5 * y^3&lt;/code&gt; 、ここで &lt;code&gt;y = rsqrt(x)&lt;/code&gt; であり、 &lt;code&gt;dy&lt;/code&gt; は対応する入力勾配です。</target>
        </trans-unit>
        <trans-unit id="4b78cbd77beea0a2b3caee50e523d8e75b7b46c7" translate="yes" xml:space="preserve">
          <source>Specifically, &lt;code&gt;grad = dy * 0.5 / y&lt;/code&gt;, where &lt;code&gt;y = sqrt(x)&lt;/code&gt;, and &lt;code&gt;dy&lt;/code&gt; is the corresponding input gradient.</source>
          <target state="translated">具体的には、 &lt;code&gt;grad = dy * 0.5 / y&lt;/code&gt; 、ここで &lt;code&gt;y = sqrt(x)&lt;/code&gt; であり、 &lt;code&gt;dy&lt;/code&gt; は対応する入力勾配です。</target>
        </trans-unit>
        <trans-unit id="2ec8caad6d138b060540254f511fece75b9d2aa8" translate="yes" xml:space="preserve">
          <source>Specifically, &lt;code&gt;grad = dy * y * (1 - y)&lt;/code&gt;, where &lt;code&gt;y = sigmoid(x)&lt;/code&gt;, and &lt;code&gt;dy&lt;/code&gt; is the corresponding input gradient.</source>
          <target state="translated">具体的には、 &lt;code&gt;grad = dy * y * (1 - y)&lt;/code&gt; 、ここで &lt;code&gt;y = sigmoid(x)&lt;/code&gt; であり、 &lt;code&gt;dy&lt;/code&gt; は対応する入力勾配です。</target>
        </trans-unit>
        <trans-unit id="c7001c1ac0b17fbd7ca3a02ab7f20b52959b8e41" translate="yes" xml:space="preserve">
          <source>Specifically, &lt;code&gt;y = 1 / (1 + exp(-x))&lt;/code&gt;.</source>
          <target state="translated">具体的には、 &lt;code&gt;y = 1 / (1 + exp(-x))&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="954c9de28a55b63501fe0fe04e4bf1cb501e7df5" translate="yes" xml:space="preserve">
          <source>Specifically, &lt;code&gt;y = log(1 / (1 + exp(-x)))&lt;/code&gt;. For numerical stability, we use &lt;code&gt;y = -tf.nn.softplus(-x)&lt;/code&gt;.</source>
          <target state="translated">具体的には、 &lt;code&gt;y = log(1 / (1 + exp(-x)))&lt;/code&gt; です。数値の安定性のために、 &lt;code&gt;y = -tf.nn.softplus(-x)&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="6597172c93c2b702bcd7586ce5fa7c1bf3b6fa02" translate="yes" xml:space="preserve">
          <source>Specifically, in the case that &lt;code&gt;data_format&lt;/code&gt; does not start with &quot;NC&quot;, given a rank (N+2) &lt;code&gt;input&lt;/code&gt; Tensor of shape</source>
          <target state="translated">具体的には、 &lt;code&gt;data_format&lt;/code&gt; が「NC」で始まらない場合、ランク（N + 2）の &lt;code&gt;input&lt;/code&gt; Tensor of shapeが指定されます。</target>
        </trans-unit>
        <trans-unit id="4685e2fad46095eee9ba25a53c669f27eb8ab429" translate="yes" xml:space="preserve">
          <source>Specifically, returns &lt;code&gt;True&lt;/code&gt; if the dtype of &lt;code&gt;tensor&lt;/code&gt; is one of the following:</source>
          <target state="translated">具体的には、 &lt;code&gt;tensor&lt;/code&gt; のdtypeが次のいずれかである場合に &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="0556709f41308a40346ba1c586e66a03dc18eabe" translate="yes" xml:space="preserve">
          <source>Specifically, the op extracts patches of shape &lt;code&gt;sizes&lt;/code&gt; which are &lt;code&gt;strides&lt;/code&gt; apart in the input image. The output is subsampled using the &lt;code&gt;rates&lt;/code&gt; argument, in the same manner as &quot;atrous&quot; or &quot;dilated&quot; convolutions.</source>
          <target state="translated">形状の具体的には、OP抽出パッチ &lt;code&gt;sizes&lt;/code&gt; である &lt;code&gt;strides&lt;/code&gt; 離れた入力画像です。&quot;atrous&quot;または &quot;dilated&quot;たたみ込みと同じ方法で、 &lt;code&gt;rates&lt;/code&gt; 引数を使用して出力がサブサンプリングされます。</target>
        </trans-unit>
        <trans-unit id="fae6543b085f90e9db03167ac9f6f9969607441e" translate="yes" xml:space="preserve">
          <source>Specifically, this function implements single-machine multi-GPU data parallelism. It works in the following way:</source>
          <target state="translated">具体的には、この関数は、シングルマシン・マルチGPUデータ並列化を実装しています。以下のように動作します。</target>
        </trans-unit>
        <trans-unit id="4e9e8fdae6be8ea97754587f39987e492cd88c1c" translate="yes" xml:space="preserve">
          <source>Specification for the output of the layer. Defaults to &quot;binary&quot;. Values can be &quot;binary&quot;, &quot;count&quot; or &quot;tf-idf&quot;, configuring the layer as follows: &quot;binary&quot;: Outputs a single int array per batch, of either vocab_size or max_tokens size, containing 1s in all elements where the token mapped to that index exists at least once in the batch item. &quot;count&quot;: As &quot;binary&quot;, but the int array contains a count of the number of times the token at that index appeared in the batch item. &quot;tf-idf&quot;: As &quot;binary&quot;, but the TF-IDF algorithm is applied to find the value in each token slot.</source>
          <target state="translated">レイヤーの出力の指定。デフォルトは &quot;binary&quot; です。値は &quot;binary&quot;、&quot;count&quot;、&quot;tf-idf&quot; のいずれかで、以下のようにレイヤーを設定します。&quot;binary&quot;。このインデックスにマップされたトークンがバッチ項目の中に少なくとも一度は存在する場合、すべての要素に 1 を含む int 配列を出力します。&quot;count&quot;。バイナリ &quot;と同じですが、そのインデックスにマッピングされたトークンがバッチ項目に何回出現したかをカウントした整数配列を含みます。&quot;tf-idf&quot;:&quot;binary&quot; と同様です。binary&quot; と同様ですが、TF-IDF アルゴリズムが適用され、各トークンスロット内の値を見つけることができます。</target>
        </trans-unit>
        <trans-unit id="0c8f3483a76d71d8bb0d00a6d0eabe91ca24c35a" translate="yes" xml:space="preserve">
          <source>Specification of target device.</source>
          <target state="translated">対象となるデバイスの仕様。</target>
        </trans-unit>
        <trans-unit id="fb83322fdf8c262876d78cb727d403b2970f108f" translate="yes" xml:space="preserve">
          <source>Specified by &lt;code&gt;output_shape&lt;/code&gt; argument</source>
          <target state="translated">で指定された &lt;code&gt;output_shape&lt;/code&gt; 引数</target>
        </trans-unit>
        <trans-unit id="ea883e74b6a3843ac1a29b4ff2add9d3a018b23d" translate="yes" xml:space="preserve">
          <source>Specifies a TensorFlow value type.</source>
          <target state="translated">TensorFlowの値の種類を指定します。</target>
        </trans-unit>
        <trans-unit id="b14fa4e629580a37533f3fdd00fb901d2f01863b" translate="yes" xml:space="preserve">
          <source>Specifies additional arguments to be passed to the enclosing while_loop.</source>
          <target state="translated">囲むwhile_loopに渡す追加の引数を指定します。</target>
        </trans-unit>
        <trans-unit id="4f8e54eb07c8ef1f0bb9beb5c80869956ccc814c" translate="yes" xml:space="preserve">
          <source>Specifies how the initial cluster centers are chosen. One of the following: * a tensor or numpy array with the initial cluster centers. * a callable &lt;code&gt;f(inputs, k)&lt;/code&gt; that selects and returns up to &lt;code&gt;k&lt;/code&gt; centers from an input batch. &lt;code&gt;f&lt;/code&gt; is free to return any number of centers from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;k&lt;/code&gt;. It will be invoked on successive input batches as necessary until all &lt;code&gt;num_clusters&lt;/code&gt; centers are chosen.</source>
          <target state="translated">初期クラスターセンターの選択方法を指定します。次のいずれか：*初期クラスター中心を持つテンソルまたはnumpy配列。*入力バッチから最大 &lt;code&gt;k&lt;/code&gt; 個の中心を選択して返す呼び出し可能な &lt;code&gt;f(inputs, k)&lt;/code&gt; 。 &lt;code&gt;f&lt;/code&gt; は、 &lt;code&gt;0&lt;/code&gt; から &lt;code&gt;k&lt;/code&gt; までの任意の数の中心を自由に返すことができます。すべての &lt;code&gt;num_clusters&lt;/code&gt; センターが選択されるまで、必要に応じて連続する入力バッチで呼び出されます。</target>
        </trans-unit>
        <trans-unit id="9a48f07e1a4fe0d4805753bda46239c41d040c75" translate="yes" xml:space="preserve">
          <source>Specifies pooling operation, must be &quot;AVG&quot; or &quot;MAX&quot;.</source>
          <target state="translated">プーリング動作を指定し、&quot;AVG &quot;または &quot;MAX &quot;でなければなりません。</target>
        </trans-unit>
        <trans-unit id="50ddb4ee8c52d872568fecc64ff41f8830ff5dee" translate="yes" xml:space="preserve">
          <source>Specifies that a flag is a key flag for a module.</source>
          <target state="translated">フラグがモジュールのキーフラグであることを指定します。</target>
        </trans-unit>
        <trans-unit id="60e17bd62fb185088c8acaab226bfbeedef8f34c" translate="yes" xml:space="preserve">
          <source>Specifies that ops of type &lt;code&gt;op_type&lt;/code&gt; is not differentiable.</source>
          <target state="translated">タイプ &lt;code&gt;op_type&lt;/code&gt; の opsが区別できないことを指定します。</target>
        </trans-unit>
        <trans-unit id="12365a41b5aa31f5b19fd0fc0145e72191eee359" translate="yes" xml:space="preserve">
          <source>Specifies the Riemann summation method used (&lt;a href=&quot;https://en.wikipedia.org/wiki/Riemann_sum&quot;&gt;https://en.wikipedia.org/wiki/Riemann_sum&lt;/a&gt;): 'trapezoidal' [default] that applies the trapezoidal rule; 'careful_interpolation', a variant of it differing only by a more correct interpolation scheme for PR-AUC - interpolating (true/false) positives but not the ratio that is precision; 'minoring' that applies left summation for increasing intervals and right summation for decreasing intervals; 'majoring' that does the opposite. Note that 'careful_interpolation' is strictly preferred to 'trapezoidal' (to be deprecated soon) as it applies the same method for ROC, and a better one (see Davis &amp;amp; Goadrich 2006 for details) for the PR curve.</source>
          <target state="translated">使用するリーマン和法を指定し&lt;a href=&quot;https://en.wikipedia.org/wiki/Riemann_sum&quot;&gt;ます&lt;/a&gt;（https://en.wikipedia.org/wiki/Riemann_sum）： '台形' [デフォルト]台形公式を適用します。 'careful_interpolation'、PR-AUCのより正確な内挿スキームのみが異なるその変形-（真/偽）正の内挿。ただし、精度の比率は内挿しません。間隔を増やすために左の合計を適用し、間隔を減らすために右の合計を適用する「ミノリング」。反対のことをする「メジャー」。 'careful_interpolation'は、ROCに同じ方法を適用し、PR曲線にはより良い方法（詳細についてはDavis＆Goadrich 2006を参照）を適用するため、 '台形'（間もなく非推奨）よりも厳密に優先されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="a60e012592deb2a21071b5ebbba778d9c0dd8447" translate="yes" xml:space="preserve">
          <source>Specifies the address of the dispatcher.</source>
          <target state="translated">ディスパッチャのアドレスを指定します。</target>
        </trans-unit>
        <trans-unit id="847ad11bfeecb8d48ed0c0033c02e5d0d9d05fd9" translate="yes" xml:space="preserve">
          <source>Specifies the device for ops created/executed in this context.</source>
          <target state="translated">このコンテキストで作成/実行される操作のデバイスを指定します。</target>
        </trans-unit>
        <trans-unit id="8ab4832f2706bba7781b4a6050175a12aa0c94b9" translate="yes" xml:space="preserve">
          <source>Specifies the dimension to reduce along within each replica's tensor. Should typically be set to the batch dimension, or &lt;code&gt;None&lt;/code&gt; to only reduce across replicas (e.g. if the tensor has no batch dimension).</source>
          <target state="translated">各レプリカのテンソル内で縮小する次元を指定します。通常、バッチディメンションに設定するか、レプリカ全体でのみ削減する場合は[ &lt;code&gt;None&lt;/code&gt; に設定する必要があります（たとえば、テンソルにバッチディメンションがない場合）。</target>
        </trans-unit>
        <trans-unit id="77e8903838f80452c5cfc729dea4247083f92031" translate="yes" xml:space="preserve">
          <source>Specifies the length of each sequence in inputs. An int32 or int64 vector (tensor) size &lt;code&gt;[batch_size]&lt;/code&gt;, values in &lt;code&gt;[0, T)&lt;/code&gt;.</source>
          <target state="translated">入力の各シーケンスの長さを指定します。int32またはint64ベクトル（テンソル）サイズ &lt;code&gt;[batch_size]&lt;/code&gt; 、値は &lt;code&gt;[0, T)&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="bffd3a5beb6180a98107520a1a7fc723aca4ad2f" translate="yes" xml:space="preserve">
          <source>Specifies the method used to combine gradient terms. Accepted values are constants defined in the class &lt;code&gt;AggregationMethod&lt;/code&gt;.</source>
          <target state="translated">勾配項を組み合わせるために使用される方法を指定します。受け入れられる値は、クラス &lt;code&gt;AggregationMethod&lt;/code&gt; で定義された定数です。</target>
        </trans-unit>
        <trans-unit id="9c34ad5a470970817e09aaa324247d70e8e5125e" translate="yes" xml:space="preserve">
          <source>Specifies the method used to combine gradient terms. Valid values are defined in the class &lt;code&gt;AggregationMethod&lt;/code&gt;.</source>
          <target state="translated">勾配項を組み合わせるために使用される方法を指定します。有効な値は、クラス &lt;code&gt;AggregationMethod&lt;/code&gt; で定義されています。</target>
        </trans-unit>
        <trans-unit id="c88a50346386cac79e931b4315cf416e5d9625d6" translate="yes" xml:space="preserve">
          <source>Specifies the name of the curve to be computed, 'ROC' [default] or 'PR' for the Precision-Recall-curve.</source>
          <target state="translated">計算される曲線の名前を指定します。精度-リコール曲線の場合は「ROC」[デフォルト]または「PR」を指定します。</target>
        </trans-unit>
        <trans-unit id="a23f6051fc3fbb5815e141c943efca771d21b5b9" translate="yes" xml:space="preserve">
          <source>Specifies the ndim, dtype and shape of every input to a layer.</source>
          <target state="translated">レイヤーへの各入力のndim、dtype、形状を指定します。</target>
        </trans-unit>
        <trans-unit id="8cc45caf8664c056edb3d054f7a7d6ace966e2c1" translate="yes" xml:space="preserve">
          <source>Specifies the port to bind to.</source>
          <target state="translated">バインドするポートを指定します。</target>
        </trans-unit>
        <trans-unit id="957b15c5bf93ae8e6b374647a345a022bff4b9b6" translate="yes" xml:space="preserve">
          <source>Specifies the port to bind to. A value of 0 indicates that the worker can bind to any available port.</source>
          <target state="translated">バインド先のポートを指定します。値が 0 の場合、ワーカーは利用可能な任意のポートにバインドできます。</target>
        </trans-unit>
        <trans-unit id="025e8c546c0a504a0fad6b1b253252ae904bbad5" translate="yes" xml:space="preserve">
          <source>Specifies the rank, dtype and shape of every input to a layer.</source>
          <target state="translated">レイヤーへの各入力のランク、dtype、形状を指定します。</target>
        </trans-unit>
        <trans-unit id="479441c20bd6b05a03d87908a48b7f5bb9a7fc51" translate="yes" xml:space="preserve">
          <source>Specifies the response when an input string can't be converted using the indicated encoding. One of:</source>
          <target state="translated">入力文字列が指定されたエンコーディングで変換できない場合の応答を指定する。以下のいずれか。</target>
        </trans-unit>
        <trans-unit id="bf4af342c787b5318e7212cadbb826bc238bd9d4" translate="yes" xml:space="preserve">
          <source>Specifies the response when an invalid codepoint is encountered (optional). One of:</source>
          <target state="translated">無効なコードポイントが検出されたときの応答を指定します (オプション)。のいずれかを指定します。</target>
        </trans-unit>
        <trans-unit id="17dc1bc89affaacc3206c6d8f591c91199d8edfc" translate="yes" xml:space="preserve">
          <source>Specifies whether operations are executed synchronously or asynchronously.</source>
          <target state="translated">操作を同期的に実行するか非同期的に実行するかを指定します。</target>
        </trans-unit>
        <trans-unit id="86a70a978ffb3c314d3fa9e073f9f1ebb89c519c" translate="yes" xml:space="preserve">
          <source>Specifies which &lt;code&gt;PhysicalDevice&lt;/code&gt; objects are visible to the runtime. TensorFlow will only allocate memory and place operations on visible physical devices, as otherwise no &lt;code&gt;LogicalDevice&lt;/code&gt; will be created on them. By default all discovered devices are marked as visible.</source>
          <target state="translated">ランタイムに表示される &lt;code&gt;PhysicalDevice&lt;/code&gt; オブジェクトを指定します。TensorFlowはメモリを割り当て、可視の物理デバイスに操作を配置するだけです。それ以外の場合、 &lt;code&gt;LogicalDevice&lt;/code&gt; は作成されません。デフォルトでは、検出されたすべてのデバイスが可視としてマークされます。</target>
        </trans-unit>
        <trans-unit id="c1dc8e11dd50b0215e624b3b32a9d0f31a9f6f8b" translate="yes" xml:space="preserve">
          <source>Specify tensors to watch and their Jacobian-vector products.</source>
          <target state="translated">視聴するテンソルとそのヤコビアンベクトル積を指定します。</target>
        </trans-unit>
        <trans-unit id="1f87b90a8d7793941c1404a83aa800fc278fa4cb" translate="yes" xml:space="preserve">
          <source>Specify the hash_key that will be used by the &lt;code&gt;FingerprintCat64&lt;/code&gt; function to combine the crosses fingerprints on SparseCrossOp (optional).</source>
          <target state="translated">&lt;code&gt;FingerprintCat64&lt;/code&gt; 関数がSparseCrossOpでクロスフィンガープリントを組み合わせるために使用するhash_keyを指定します（オプション）。</target>
        </trans-unit>
        <trans-unit id="7cf0f0544b64dfcba20fcf156a1f0aae78a1fd62" translate="yes" xml:space="preserve">
          <source>Specify values using num_replicas_in_sync:</source>
          <target state="translated">num_replicas_in_syncで値を指定します。</target>
        </trans-unit>
        <trans-unit id="b24d687c3187080c59435b4fefd44a5993c81aed" translate="yes" xml:space="preserve">
          <source>Specify what input/output index should this be in the final stub. i.e. add(arg0, index=1); add(arg1, index=0) will make the final stub be as stub_func(inputs[arg1, arg0], outputs=[]) rather than the default call order based ordering.</source>
          <target state="translated">つまり、add(arg0,index=1);add(arg1,index=0)は、最終的なスタブをデフォルトの呼び出し順に基づいた順序ではなく、stub_func(inputs[arg1,arg0],outputs=[])のようにします。</target>
        </trans-unit>
        <trans-unit id="b5641c8d22b21d1e9602ce014b4719ee01c9c37b" translate="yes" xml:space="preserve">
          <source>Specifying &lt;code&gt;''&lt;/code&gt; requests an in-process session that does not use RPC.</source>
          <target state="translated">&lt;code&gt;''&lt;/code&gt; を指定すると、RPCを使用しないインプロセスセッションが要求されます。</target>
        </trans-unit>
        <trans-unit id="405b7de568617cf3ae840e38096fa116bfa8c971" translate="yes" xml:space="preserve">
          <source>Specifying &lt;code&gt;'grpc://hostname:port'&lt;/code&gt; requests a session that uses the RPC interface to a specific host, and also allows the in-process master to access remote tensorflow workers. Often, it is appropriate to pass &lt;code&gt;server.target&lt;/code&gt; (for some &lt;a href=&quot;../../../distribute/server&quot;&gt;&lt;code&gt;tf.distribute.Server&lt;/code&gt;&lt;/a&gt; named `server).</source>
          <target state="translated">&lt;code&gt;'grpc://hostname:port'&lt;/code&gt; を指定すると、特定のホストへのRPCインターフェースを使用するセッションが要求され、インプロセスマスターがリモートtensorflowワーカーにアクセスできるようになります。多くの場合、 &lt;code&gt;server.target&lt;/code&gt; を渡すことが適切です（`serverという名前の&lt;a href=&quot;../../../distribute/server&quot;&gt; &lt;code&gt;tf.distribute.Server&lt;/code&gt; の場合&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="26bd73b0bd8bb18d70c2dc4595792f67ad9856b4" translate="yes" xml:space="preserve">
          <source>Specifying &lt;code&gt;'local'&lt;/code&gt; requests a session that uses the RPC-based &quot;Master interface&quot; to run TensorFlow programs. See &lt;code&gt;tf.train.Server.create_local_server&lt;/code&gt; for details.</source>
          <target state="translated">&lt;code&gt;'local'&lt;/code&gt; 指定すると、RPCベースの「マスターインターフェース」を使用してTensorFlowプログラムを実行するセッションがリクエストされます。詳細については、 &lt;code&gt;tf.train.Server.create_local_server&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="72b9c3a0e97721293f2206fc621aa349b807f2d6" translate="yes" xml:space="preserve">
          <source>Specifying &lt;code&gt;fn&lt;/code&gt;'s output signature</source>
          <target state="translated">&lt;code&gt;fn&lt;/code&gt; の出力署名の指定</target>
        </trans-unit>
        <trans-unit id="b8f602869139be49c749576d1dc9c96beb1909a8" translate="yes" xml:space="preserve">
          <source>Spectrograms are a standard way of representing audio information as a series of slices of frequency information, one slice for each window of time. By joining these together into a sequence, they form a distinctive fingerprint of the sound over time.</source>
          <target state="translated">スペクトログラムは、オーディオ情報を周波数情報の一連のスライスとして表現する標準的な方法です。これらを連続して結合することで、時間の経過とともに音の特徴的な指紋を形成します。</target>
        </trans-unit>
        <trans-unit id="9f40272d442956261d256d21bfad29eabcf1fd09" translate="yes" xml:space="preserve">
          <source>Spence</source>
          <target state="translated">Spence</target>
        </trans-unit>
        <trans-unit id="5a083194f353eafeb3b58817d4b4ec44ca83f437" translate="yes" xml:space="preserve">
          <source>Spence's integral is defined as the integral of &lt;code&gt;log(t) / (1 - t)&lt;/code&gt; from &lt;code&gt;1&lt;/code&gt; to &lt;code&gt;x&lt;/code&gt;, with the domain of definition all non-negative real numbers.</source>
          <target state="translated">スペンスの積分は、 &lt;code&gt;1&lt;/code&gt; から &lt;code&gt;x&lt;/code&gt; までの &lt;code&gt;log(t) / (1 - t)&lt;/code&gt; の積分として定義され、定義域はすべて非負の実数です。</target>
        </trans-unit>
        <trans-unit id="fc8230b4119ad4b994db2324d71f4e0ae7ad932c" translate="yes" xml:space="preserve">
          <source>Split</source>
          <target state="translated">Split</target>
        </trans-unit>
        <trans-unit id="e8d93b14898782206a27c2f623c3e13068558d40" translate="yes" xml:space="preserve">
          <source>Split a &lt;code&gt;SparseTensor&lt;/code&gt; into &lt;code&gt;num_split&lt;/code&gt; tensors along &lt;code&gt;axis&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SparseTensor&lt;/code&gt; を &lt;code&gt;num_split&lt;/code&gt; 沿ってnum_splitテンソルに分割し &lt;code&gt;axis&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="48c476197d75a69934319a7ec0da01331434b536" translate="yes" xml:space="preserve">
          <source>Split a &lt;code&gt;SparseTensor&lt;/code&gt; into &lt;code&gt;num_split&lt;/code&gt; tensors along &lt;code&gt;axis&lt;/code&gt;. (deprecated arguments)</source>
          <target state="translated">&lt;code&gt;SparseTensor&lt;/code&gt; を &lt;code&gt;num_split&lt;/code&gt; 沿ってnum_splitテンソルに分割し &lt;code&gt;axis&lt;/code&gt; 。（廃止された引数）</target>
        </trans-unit>
        <trans-unit id="bcd7a6074afeef60305a9e51917dbd2dc92f5a1d" translate="yes" xml:space="preserve">
          <source>Split a &lt;code&gt;SparseTensor&lt;/code&gt; into &lt;code&gt;num_split&lt;/code&gt; tensors along one dimension.</source>
          <target state="translated">&lt;code&gt;SparseTensor&lt;/code&gt; を1つの次元に沿って &lt;code&gt;num_split&lt;/code&gt; テンソルに分割します。</target>
        </trans-unit>
        <trans-unit id="13b61710ceda0a0a714c192ec19ac0321dd2bcae" translate="yes" xml:space="preserve">
          <source>Split elements of &lt;code&gt;input&lt;/code&gt; based on &lt;code&gt;delimiter&lt;/code&gt; into a &lt;code&gt;SparseTensor&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;delimiter&lt;/code&gt; に基づいて &lt;code&gt;input&lt;/code&gt; 要素を &lt;code&gt;SparseTensor&lt;/code&gt; に分割します。</target>
        </trans-unit>
        <trans-unit id="da7b9513b11ddbf83b6b96223d58f5a656aa657d" translate="yes" xml:space="preserve">
          <source>Split elements of &lt;code&gt;input&lt;/code&gt; based on &lt;code&gt;sep&lt;/code&gt; into a &lt;code&gt;RaggedTensor&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sep&lt;/code&gt; に基づいて &lt;code&gt;input&lt;/code&gt; 要素を &lt;code&gt;RaggedTensor&lt;/code&gt; に分割します。</target>
        </trans-unit>
        <trans-unit id="58404bb00065199a0e549c463f07be748d39a794" translate="yes" xml:space="preserve">
          <source>Split elements of &lt;code&gt;input&lt;/code&gt; based on &lt;code&gt;sep&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sep&lt;/code&gt; に基づいて &lt;code&gt;input&lt;/code&gt; 要素を分割します。</target>
        </trans-unit>
        <trans-unit id="48ef48c846fb000283c6182d2a2c88def70c9079" translate="yes" xml:space="preserve">
          <source>Split elements of &lt;code&gt;source&lt;/code&gt; based on &lt;code&gt;delimiter&lt;/code&gt;. (deprecated arguments)</source>
          <target state="translated">&lt;code&gt;delimiter&lt;/code&gt; 基づいて &lt;code&gt;source&lt;/code&gt; 要素を分割します。（廃止された引数）</target>
        </trans-unit>
        <trans-unit id="2879700e56cee4a5b7ddb5f51a7d51aed2bf2ce6" translate="yes" xml:space="preserve">
          <source>Split elements of &lt;code&gt;source&lt;/code&gt; based on &lt;code&gt;sep&lt;/code&gt; into a &lt;code&gt;SparseTensor&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sep&lt;/code&gt; に基づく &lt;code&gt;source&lt;/code&gt; 要素を &lt;code&gt;SparseTensor&lt;/code&gt; に分割します。</target>
        </trans-unit>
        <trans-unit id="feeb0afbc717961d923c1bb6d0a2cbd2235c11fc" translate="yes" xml:space="preserve">
          <source>Split string elements of &lt;code&gt;input&lt;/code&gt; into bytes.</source>
          <target state="translated">&lt;code&gt;input&lt;/code&gt; 文字列要素をバイトに分割します。</target>
        </trans-unit>
        <trans-unit id="aa097d95cb8c468c0c8027f0bcc4ad10ac5a28da" translate="yes" xml:space="preserve">
          <source>Split the data from the input value into TensorArray elements.</source>
          <target state="translated">入力値からのデータをTensorArray要素に分割します。</target>
        </trans-unit>
        <trans-unit id="2ec109a46f53e7a89dab4ee2f80314ae2e476dd5" translate="yes" xml:space="preserve">
          <source>Split the values of a &lt;code&gt;Tensor&lt;/code&gt; into the TensorArray.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; の値をTensorArrayに分割します。</target>
        </trans-unit>
        <trans-unit id="42b3e6748ecf4c86019b4b13e8182aba35dd9f29" translate="yes" xml:space="preserve">
          <source>SplitV</source>
          <target state="translated">SplitV</target>
        </trans-unit>
        <trans-unit id="25a449ed54bd4c309837dbd3e75f82a964157ff4" translate="yes" xml:space="preserve">
          <source>Splits a tensor &lt;code&gt;value&lt;/code&gt; into a list of sub tensors.</source>
          <target state="translated">テンソル &lt;code&gt;value&lt;/code&gt; をサブテンソルのリストに分割します。</target>
        </trans-unit>
        <trans-unit id="b7c1a0f03767e59e59975d449f7708b9b5087c95" translate="yes" xml:space="preserve">
          <source>Splits a tensor into &lt;code&gt;num_split&lt;/code&gt; tensors along one dimension.</source>
          <target state="translated">テンソルを1次元に沿って &lt;code&gt;num_split&lt;/code&gt; テンソルに分割します。</target>
        </trans-unit>
        <trans-unit id="0d4979a7a7d36e70cdbdf010a56fd476f1189fb6" translate="yes" xml:space="preserve">
          <source>Splits a tensor into a list.</source>
          <target state="translated">テンソルをリストに分割します。</target>
        </trans-unit>
        <trans-unit id="2525a2c7ac0234994f7780711bb8b426b3f60464" translate="yes" xml:space="preserve">
          <source>Splits a tensor into sub tensors.</source>
          <target state="translated">テンソルをサブテンソルに分割します。</target>
        </trans-unit>
        <trans-unit id="270fb145355f34928eb378f975df5b66f170373b" translate="yes" xml:space="preserve">
          <source>Splits an RNG seed into &lt;code&gt;num&lt;/code&gt; new seeds by adding a leading axis.</source>
          <target state="translated">先行軸を追加することにより、RNGシードを &lt;code&gt;num&lt;/code&gt; 個の新しいシードに分割します。</target>
        </trans-unit>
        <trans-unit id="4d43c36bbfca1a538b2005f5a195827db6f584b5" translate="yes" xml:space="preserve">
          <source>Splits each rank-N &lt;a href=&quot;../../../../sparse/sparsetensor&quot;&gt;&lt;code&gt;tf.SparseTensor&lt;/code&gt;&lt;/a&gt; in this dataset row-wise. (deprecated)</source>
          <target state="translated">このデータセット内の各ランクN &lt;a href=&quot;../../../../sparse/sparsetensor&quot;&gt; &lt;code&gt;tf.SparseTensor&lt;/code&gt; &lt;/a&gt;を行ごとに分割します。（非推奨）</target>
        </trans-unit>
        <trans-unit id="9dd58b51a29333666bb6c49f7f55516391e02899" translate="yes" xml:space="preserve">
          <source>Splits each rank-N &lt;a href=&quot;../../../../sparse/sparsetensor&quot;&gt;&lt;code&gt;tf.sparse.SparseTensor&lt;/code&gt;&lt;/a&gt; in this dataset row-wise. (deprecated)</source>
          <target state="translated">このデータセットの各ランク&lt;a href=&quot;../../../../sparse/sparsetensor&quot;&gt; &lt;code&gt;tf.sparse.SparseTensor&lt;/code&gt; &lt;/a&gt;を行ごとに分割します。（非推奨）</target>
        </trans-unit>
        <trans-unit id="d2558021e23f8309108fd307b098699b10771f98" translate="yes" xml:space="preserve">
          <source>Splits each rank-N &lt;a href=&quot;../../../sparse/sparsetensor&quot;&gt;&lt;code&gt;tf.SparseTensor&lt;/code&gt;&lt;/a&gt; in this dataset row-wise. (deprecated)</source>
          <target state="translated">このデータセット内の各ランクN &lt;a href=&quot;../../../sparse/sparsetensor&quot;&gt; &lt;code&gt;tf.SparseTensor&lt;/code&gt; &lt;/a&gt;を行ごとに分割します。（非推奨）</target>
        </trans-unit>
        <trans-unit id="3a1226452887d9eff5446eb8c3b72d94a498f8cd" translate="yes" xml:space="preserve">
          <source>Splits each rank-N &lt;a href=&quot;../../../sparse/sparsetensor&quot;&gt;&lt;code&gt;tf.sparse.SparseTensor&lt;/code&gt;&lt;/a&gt; in this dataset row-wise. (deprecated)</source>
          <target state="translated">このデータセットの各ランク&lt;a href=&quot;../../../sparse/sparsetensor&quot;&gt; &lt;code&gt;tf.sparse.SparseTensor&lt;/code&gt; &lt;/a&gt;を行ごとに分割します。（非推奨）</target>
        </trans-unit>
        <trans-unit id="f4d1aaee79561119dd0a5d338e2a7ca4f1422ce7" translate="yes" xml:space="preserve">
          <source>Splits each string in &lt;code&gt;input&lt;/code&gt; into a sequence of Unicode code points.</source>
          <target state="translated">&lt;code&gt;input&lt;/code&gt; 各文字列を一連のUnicodeコードポイントに分割します。</target>
        </trans-unit>
        <trans-unit id="94584a38ee61d0af4ef0ac0752e5ef4eaa3d1dc9" translate="yes" xml:space="preserve">
          <source>Splits each string into a sequence of code points with start offsets.</source>
          <target state="translated">各文字列を開始オフセットのあるコードポイントの列に分割します。</target>
        </trans-unit>
        <trans-unit id="c47b3f827bb53db64e834684eba00cbf35296512" translate="yes" xml:space="preserve">
          <source>Splits elements of a dataset into multiple elements on the batch dimension. (deprecated)</source>
          <target state="translated">データセットの要素を,バッチ次元上で複数の要素に分割します.(廃止予定)</target>
        </trans-unit>
        <trans-unit id="b8bd28acaf2b895effd8654557c3dacbebf4a2c4" translate="yes" xml:space="preserve">
          <source>Splits elements of a dataset into multiple elements.</source>
          <target state="translated">データセットの要素を複数の要素に分割します。</target>
        </trans-unit>
        <trans-unit id="97aa05f8add5a99aac5af8515bc87ecc98cf108e" translate="yes" xml:space="preserve">
          <source>SqlDataset</source>
          <target state="translated">SqlDataset</target>
        </trans-unit>
        <trans-unit id="6bbb118b36018412cea4de47bc914f00685c9ac5" translate="yes" xml:space="preserve">
          <source>Sqrt</source>
          <target state="translated">Sqrt</target>
        </trans-unit>
        <trans-unit id="f51c4940eeb1c607be0038995aa17ad0642b145b" translate="yes" xml:space="preserve">
          <source>SqrtGrad</source>
          <target state="translated">SqrtGrad</target>
        </trans-unit>
        <trans-unit id="82810cb97184cf542141f811b63d90bc5de31d1b" translate="yes" xml:space="preserve">
          <source>Square</source>
          <target state="translated">Square</target>
        </trans-unit>
        <trans-unit id="1ae6dd836b1e60558f43e8ef31eda2b8306442d8" translate="yes" xml:space="preserve">
          <source>Squared hinge loss values. shape = &lt;code&gt;[batch_size, d0, .. dN-1]&lt;/code&gt;.</source>
          <target state="translated">二乗ヒンジ損失値。形状= &lt;code&gt;[batch_size, d0, .. dN-1]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f12d31a6bd87230a11338cd4f02ec5d2853d03df" translate="yes" xml:space="preserve">
          <source>SquaredDifference</source>
          <target state="translated">SquaredDifference</target>
        </trans-unit>
        <trans-unit id="92c9ea71c15cbb09e5ae60de5a8ab0f25d70a156" translate="yes" xml:space="preserve">
          <source>Squeeze</source>
          <target state="translated">Squeeze</target>
        </trans-unit>
        <trans-unit id="83e5a0d3d2ef19df258412a4d3ef3f9533b0c0c1" translate="yes" xml:space="preserve">
          <source>Stack</source>
          <target state="translated">Stack</target>
        </trans-unit>
        <trans-unit id="47dd9a3d44ce99e3bbd366c9c91a60fc96281e66" translate="yes" xml:space="preserve">
          <source>Stack Overflow</source>
          <target state="translated">スタックオーバーフロー</target>
        </trans-unit>
        <trans-unit id="bb2418f859198c7d1e798390c6339d300b7da63d" translate="yes" xml:space="preserve">
          <source>StackClose</source>
          <target state="translated">StackClose</target>
        </trans-unit>
        <trans-unit id="9f86bb372bf423c19d02b2f210bb8dd7938057cf" translate="yes" xml:space="preserve">
          <source>StackCloseV2</source>
          <target state="translated">StackCloseV2</target>
        </trans-unit>
        <trans-unit id="13caa61340d124de01583d0562b008d7dcf4eab1" translate="yes" xml:space="preserve">
          <source>StackPop</source>
          <target state="translated">StackPop</target>
        </trans-unit>
        <trans-unit id="9e82f03cbcf0bfde09bf1731036c4614799f312b" translate="yes" xml:space="preserve">
          <source>StackPopV2</source>
          <target state="translated">StackPopV2</target>
        </trans-unit>
        <trans-unit id="70c96797060f727c342a012ca5826333a270498a" translate="yes" xml:space="preserve">
          <source>StackPush</source>
          <target state="translated">StackPush</target>
        </trans-unit>
        <trans-unit id="9bc99bdb31798279909235b7267767b01b53463b" translate="yes" xml:space="preserve">
          <source>StackPushV2</source>
          <target state="translated">StackPushV2</target>
        </trans-unit>
        <trans-unit id="9801c21c3345eeaac64b9cbdf7297998a6db5c76" translate="yes" xml:space="preserve">
          <source>StackV2</source>
          <target state="translated">StackV2</target>
        </trans-unit>
        <trans-unit id="c3dcf86335eb4dcd9df560b318acb47a8f5d257d" translate="yes" xml:space="preserve">
          <source>Stacks a list of rank &lt;code&gt;R&lt;/code&gt; tensors into a rank &lt;code&gt;R+1&lt;/code&gt; tensor.</source>
          <target state="translated">ランク &lt;code&gt;R&lt;/code&gt; のテンソルのリストをランク &lt;code&gt;R+1&lt;/code&gt; テンソルにスタックします。</target>
        </trans-unit>
        <trans-unit id="a8f192bcec355d760ffbcfb5d4356d125221a71c" translate="yes" xml:space="preserve">
          <source>Stacks a list of rank-&lt;code&gt;R&lt;/code&gt; tensors into one rank-&lt;code&gt;(R+1)&lt;/code&gt; tensor in parallel.</source>
          <target state="translated">ランク &lt;code&gt;R&lt;/code&gt; のテンソルのリストを1つのランク &lt;code&gt;(R+1)&lt;/code&gt; テンソルに並列にスタックします。</target>
        </trans-unit>
        <trans-unit id="411d8e2a06e5fa2c606474dc5fbe557c7d2ba8bb" translate="yes" xml:space="preserve">
          <source>Stacks a list of rank-&lt;code&gt;R&lt;/code&gt; tensors into one rank-&lt;code&gt;(R+1)&lt;/code&gt; tensor.</source>
          <target state="translated">ランク &lt;code&gt;R&lt;/code&gt; テンソルのリストを1つのランク &lt;code&gt;(R+1)&lt;/code&gt; テンソルにスタックします。</target>
        </trans-unit>
        <trans-unit id="07a81968a5e580e3ddc7f3c1dfe616f113f25eb2" translate="yes" xml:space="preserve">
          <source>Stacks a list of rank-&lt;code&gt;R&lt;/code&gt; tensors into one rank-&lt;code&gt;(R+1)&lt;/code&gt;&lt;code&gt;RaggedTensor&lt;/code&gt;.</source>
          <target state="translated">rank- &lt;code&gt;R&lt;/code&gt; テンソルのリストを1つのrank- &lt;code&gt;(R+1)&lt;/code&gt; &lt;code&gt;RaggedTensor&lt;/code&gt; にスタックします。</target>
        </trans-unit>
        <trans-unit id="3788bdbf6e9fb45cf211dfdc64d81ab60ac56b11" translate="yes" xml:space="preserve">
          <source>Stacks all tensors in the list.</source>
          <target state="translated">リスト内のすべてのテンソルをスタックします。</target>
        </trans-unit>
        <trans-unit id="244b873bd8fa37f33bd8c2425d0c77e7748a72b7" translate="yes" xml:space="preserve">
          <source>Stacks dynamic partitions of a Tensor or RaggedTensor.</source>
          <target state="translated">TensorまたはRaggedTensorの動的なパーティションをスタックします。</target>
        </trans-unit>
        <trans-unit id="ca6d0e3aaa7d6cc0e9d9fe14eed28587f7ee1133" translate="yes" xml:space="preserve">
          <source>Stage</source>
          <target state="translated">Stage</target>
        </trans-unit>
        <trans-unit id="512ad68fcdcea5488ca457ac51e4251350f5a993" translate="yes" xml:space="preserve">
          <source>Stage (key, values) in the underlying container which behaves like a hashtable.</source>
          <target state="translated">ハッシュテーブルのように振る舞うコンテナのステージ (キー、値)。</target>
        </trans-unit>
        <trans-unit id="2e08c3cb63f032c8c16999eaeee9ece818cc3259" translate="yes" xml:space="preserve">
          <source>Stage (key, values) in the underlying container which behaves like a ordered</source>
          <target state="translated">コンテナ内のステージ (キー、値)は、順序付けられた</target>
        </trans-unit>
        <trans-unit id="150ca4d5bb87e9f662a9254d47d485e02e90e6f4" translate="yes" xml:space="preserve">
          <source>Stage values similar to a lightweight Enqueue.</source>
          <target state="translated">軽量なEnqueueに似たステージ値。</target>
        </trans-unit>
        <trans-unit id="e9db0ce530e0e3406692c3626215571ff7c1e17e" translate="yes" xml:space="preserve">
          <source>StageClear</source>
          <target state="translated">StageClear</target>
        </trans-unit>
        <trans-unit id="ca4cd8248268a1a015d8be8ae12c3f40b95b4e29" translate="yes" xml:space="preserve">
          <source>StagePeek</source>
          <target state="translated">StagePeek</target>
        </trans-unit>
        <trans-unit id="cfaff0bfbcd716db675c7ddfbebd0f108a568bca" translate="yes" xml:space="preserve">
          <source>StageSize</source>
          <target state="translated">StageSize</target>
        </trans-unit>
        <trans-unit id="65d8dacb9db9be4d466b11045f434d133a9ed75c" translate="yes" xml:space="preserve">
          <source>Standalone usage:</source>
          <target state="translated">独立した使用法。</target>
        </trans-unit>
        <trans-unit id="c79e6e247019a81999cc68e49d7a710622176286" translate="yes" xml:space="preserve">
          <source>Standard deviation is defined as,</source>
          <target state="translated">標準偏差は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="055d92b4a3c41965fe47264346978d7a3185cce9" translate="yes" xml:space="preserve">
          <source>Standard deviation of a tensor, alongside the specified axis.</source>
          <target state="translated">テンソルの標準偏差を、指定された軸と並べて表示します。</target>
        </trans-unit>
        <trans-unit id="f587ab06e00878820f1cd40292d41463c1c70da5" translate="yes" xml:space="preserve">
          <source>Standard deviation of the values.</source>
          <target state="translated">値の標準偏差。</target>
        </trans-unit>
        <trans-unit id="df9f5f66c6d3882cf2305d67d9a9474489134d03" translate="yes" xml:space="preserve">
          <source>Standard deviation.</source>
          <target state="translated">標準偏差。</target>
        </trans-unit>
        <trans-unit id="b2ed39a6edbebcf3314654280c568f2b853932b1" translate="yes" xml:space="preserve">
          <source>Standard layer keyword arguments.</source>
          <target state="translated">標準レイヤのキーワード引数。</target>
        </trans-unit>
        <trans-unit id="f057b861993d91873adb8d03059b68337b2c76e0" translate="yes" xml:space="preserve">
          <source>Standard names for Estimator model modes.</source>
          <target state="translated">Estimatorのモデルモードの標準的な名前です。</target>
        </trans-unit>
        <trans-unit id="4f99c39141bb3ddf1a7d22eeab71658b76e3cad1" translate="yes" xml:space="preserve">
          <source>Standard names to use for graph collections.</source>
          <target state="translated">グラフコレクションに使用する標準的な名前。</target>
        </trans-unit>
        <trans-unit id="594ca634eb315bc3997ded1357b2f6c715d7772e" translate="yes" xml:space="preserve">
          <source>Start a LooperThread that calls a function periodically.</source>
          <target state="translated">定期的に関数を呼び出すLooperThreadを起動します。</target>
        </trans-unit>
        <trans-unit id="8cc1738890613981c8b7dcd677549d1557fc8771" translate="yes" xml:space="preserve">
          <source>Start a profiler grpc server that listens to given port.</source>
          <target state="translated">指定されたポートをリッスンするプロファイラgrpcサーバを起動します。</target>
        </trans-unit>
        <trans-unit id="ae481343527e6347255947874b0d3ca086c0b48f" translate="yes" xml:space="preserve">
          <source>Start a profiler server before your model runs.</source>
          <target state="translated">モデルが実行される前にプロファイラサーバを起動します。</target>
        </trans-unit>
        <trans-unit id="15aa8e658d8f3e8d9e2bcd223fef378355b8f614" translate="yes" xml:space="preserve">
          <source>Start a step: fetch variables and compute gradients.</source>
          <target state="translated">ステップの開始:変数を取得し、勾配を計算します。</target>
        </trans-unit>
        <trans-unit id="08ad0056ecc29209217961803b2e9f7137506856" translate="yes" xml:space="preserve">
          <source>Start by either creating a &lt;a href=&quot;../data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; normally or using &lt;code&gt;tf.distribute.experimental_make_numpy_dataset&lt;/code&gt; to make a dataset out of a &lt;code&gt;numpy&lt;/code&gt; array.</source>
          <target state="translated">作成のいずれかの方法でスタート&lt;a href=&quot;../data/dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; を&lt;/a&gt;正常または使用 &lt;code&gt;tf.distribute.experimental_make_numpy_dataset&lt;/code&gt; の外のデータセットを作るために &lt;code&gt;numpy&lt;/code&gt; の配列。</target>
        </trans-unit>
        <trans-unit id="d86e406e531f06a60d2dee1e4984ec027b2308d0" translate="yes" xml:space="preserve">
          <source>Start the next batch.</source>
          <target state="translated">次のバッチを開始します。</target>
        </trans-unit>
        <trans-unit id="faf298f1e87c04adba60787926533cc120075122" translate="yes" xml:space="preserve">
          <source>Start the scope block.</source>
          <target state="translated">スコープブロックを開始します。</target>
        </trans-unit>
        <trans-unit id="8cbf1285faa03571413d56c285dbab6cefc1bca8" translate="yes" xml:space="preserve">
          <source>Start the standard services for 'sess'.</source>
          <target state="translated">sess」の標準サービスを開始します。</target>
        </trans-unit>
        <trans-unit id="6981642129cbd20083e772ec5f952609a47be106" translate="yes" xml:space="preserve">
          <source>Start the thread's activity.</source>
          <target state="translated">スレッドの活動を開始します。</target>
        </trans-unit>
        <trans-unit id="83b5898849275d244f9dc1b3986f7cb88a3fa122" translate="yes" xml:space="preserve">
          <source>Start threads for &lt;code&gt;QueueRunners&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;QueueRunners&lt;/code&gt; のスレッドを開始します。</target>
        </trans-unit>
        <trans-unit id="7757abbbe7e321194f81d9a698c1ecb45b2b9c1f" translate="yes" xml:space="preserve">
          <source>Start value.</source>
          <target state="translated">開始値。</target>
        </trans-unit>
        <trans-unit id="edf1fcfb7060b839d58846461c7fe9ea1192ffb9" translate="yes" xml:space="preserve">
          <source>Starts a trace to record computation graphs and profiling information.</source>
          <target state="translated">計算グラフとプロファイリング情報を記録するためのトレースを開始します。</target>
        </trans-unit>
        <trans-unit id="817af290c476c6f8d3234f21fb9c38bd1fc07a8f" translate="yes" xml:space="preserve">
          <source>Starts all queue runners collected in the graph. (deprecated)</source>
          <target state="translated">グラフに収集されたすべてのキューランナーを起動します。(廃止予定)</target>
        </trans-unit>
        <trans-unit id="9a073842c749604aad721fad057a4487748943cb" translate="yes" xml:space="preserve">
          <source>Starts profiling.</source>
          <target state="translated">プロファイリングを開始します。</target>
        </trans-unit>
        <trans-unit id="8263038cce7fa6e464120a6a80cc9bb67343087c" translate="yes" xml:space="preserve">
          <source>Starts reading from current position in file.</source>
          <target state="translated">ファイル内の現在位置から読み込みを開始します。</target>
        </trans-unit>
        <trans-unit id="e91bf74af9bf0945d6f92cab271e149069e0083c" translate="yes" xml:space="preserve">
          <source>Starts the handler's workers.</source>
          <target state="translated">ハンドラーのワーカーを起動します。</target>
        </trans-unit>
        <trans-unit id="d4baf635ff2545da5d38edb917b754f17529ea58" translate="yes" xml:space="preserve">
          <source>Starts this server.</source>
          <target state="translated">このサーバーを起動します。</target>
        </trans-unit>
        <trans-unit id="591c41300836381ed72d66bf8143018f27457ad0" translate="yes" xml:space="preserve">
          <source>Stateful kernels may mostly not be supported since these often imply a data dependency. We do support a limited set of such stateful kernels though (like RandomFoo, Variable operations like reads, etc).</source>
          <target state="translated">ステートフルカーネルはデータに依存することが多いので、ほとんどの場合サポートされていないかもしれません。しかし、このようなステートフルカーネルの限られたセットをサポートしています (RandomFoo やリードなどの変数操作など)。</target>
        </trans-unit>
        <trans-unit id="4342bc56c343c89819e7b2431ab23a0028e31c50" translate="yes" xml:space="preserve">
          <source>Stateful operations, such as variables and queues, can maintain their states on devices so that they can be shared by multiple processes. A resource container is a string name under which these stateful operations are tracked. These resources can be released or cleared with &lt;code&gt;tf.Session.reset()&lt;/code&gt;.</source>
          <target state="translated">変数やキューなどのステートフル操作は、デバイス上で状態を維持できるため、複数のプロセスで共有できます。リソースコンテナは、これらのステートフル操作が追跡される文字列名です。これらのリソースは、 &lt;code&gt;tf.Session.reset()&lt;/code&gt; で解放またはクリアできます。</target>
        </trans-unit>
        <trans-unit id="470ef7e99a337614d3db5e7652076ca064b44c15" translate="yes" xml:space="preserve">
          <source>StatefulPartitionedCall</source>
          <target state="translated">StatefulPartitionedCall</target>
        </trans-unit>
        <trans-unit id="3e37de8f63bc4ee60f3be4e85ed692c36857e712" translate="yes" xml:space="preserve">
          <source>StatefulRandomBinomial</source>
          <target state="translated">StatefulRandomBinomial</target>
        </trans-unit>
        <trans-unit id="c9b7d2eb544dfaea36a6f11fa92e198521d02005" translate="yes" xml:space="preserve">
          <source>StatefulStandardNormal</source>
          <target state="translated">StatefulStandardNormal</target>
        </trans-unit>
        <trans-unit id="81fde8de69ec89de50351aebb7a476ed6408ed1b" translate="yes" xml:space="preserve">
          <source>StatefulStandardNormalV2</source>
          <target state="translated">StatefulStandardNormalV2</target>
        </trans-unit>
        <trans-unit id="2f2e659f9901f6777985b151ad4525534d4ff174" translate="yes" xml:space="preserve">
          <source>StatefulTruncatedNormal</source>
          <target state="translated">StatefulTruncatedNormal</target>
        </trans-unit>
        <trans-unit id="5b821af7889af4e9f3257ea8cf754e075cffdc6e" translate="yes" xml:space="preserve">
          <source>StatefulUniform</source>
          <target state="translated">StatefulUniform</target>
        </trans-unit>
        <trans-unit id="82c149f3853fe2a317afd45b3a57b818140613cc" translate="yes" xml:space="preserve">
          <source>StatefulUniformFullInt</source>
          <target state="translated">StatefulUniformFullInt</target>
        </trans-unit>
        <trans-unit id="fc34236d34ea55b6b1e4e05151c5cbe7b61c1cec" translate="yes" xml:space="preserve">
          <source>StatefulUniformInt</source>
          <target state="translated">StatefulUniformInt</target>
        </trans-unit>
        <trans-unit id="9a5be03c78b5380456d3eb66c29b71560f1427ad" translate="yes" xml:space="preserve">
          <source>StatelessIf</source>
          <target state="translated">StatelessIf</target>
        </trans-unit>
        <trans-unit id="45132510ddf051811a2e24394d60f2e5cbea7eab" translate="yes" xml:space="preserve">
          <source>StatelessMultinomial</source>
          <target state="translated">StatelessMultinomial</target>
        </trans-unit>
        <trans-unit id="c4adeb6736a66e16e5b199d05b6621f01008cc01" translate="yes" xml:space="preserve">
          <source>StatelessParameterizedTruncatedNormal</source>
          <target state="translated">StatelessParameterizedTruncatedNormal</target>
        </trans-unit>
        <trans-unit id="75fcc4c39071e609cd8ee650d8b3400b45804982" translate="yes" xml:space="preserve">
          <source>StatelessRandomBinomial</source>
          <target state="translated">StatelessRandomBinomial</target>
        </trans-unit>
        <trans-unit id="2be875fe6eed06ce71c03f028353b5a43a7364da" translate="yes" xml:space="preserve">
          <source>StatelessRandomGammaV2</source>
          <target state="translated">StatelessRandomGammaV2</target>
        </trans-unit>
        <trans-unit id="9e89654ec3c6d5e575033fd786de3be638da65db" translate="yes" xml:space="preserve">
          <source>StatelessRandomNormal</source>
          <target state="translated">StatelessRandomNormal</target>
        </trans-unit>
        <trans-unit id="d81eafeb6cdf9395df654cfb583b88913f018ed0" translate="yes" xml:space="preserve">
          <source>StatelessRandomPoisson</source>
          <target state="translated">StatelessRandomPoisson</target>
        </trans-unit>
        <trans-unit id="851d3d772bf0ae03814d50f90821f5dfa67e9db3" translate="yes" xml:space="preserve">
          <source>StatelessRandomUniform</source>
          <target state="translated">StatelessRandomUniform</target>
        </trans-unit>
        <trans-unit id="f7c6203d54e3016f06d47a455931f43bd254c843" translate="yes" xml:space="preserve">
          <source>StatelessRandomUniformFullInt</source>
          <target state="translated">StatelessRandomUniformFullInt</target>
        </trans-unit>
        <trans-unit id="e52b17ca770e07ad440d4dfa41953cc45d340af1" translate="yes" xml:space="preserve">
          <source>StatelessRandomUniformInt</source>
          <target state="translated">StatelessRandomUniformInt</target>
        </trans-unit>
        <trans-unit id="7408ba89f68041305f5b199abd1d5483ceea075a" translate="yes" xml:space="preserve">
          <source>StatelessTruncatedNormal</source>
          <target state="translated">StatelessTruncatedNormal</target>
        </trans-unit>
        <trans-unit id="dc5919faf6612eb2b6e2b7d02b1712501f0e4398" translate="yes" xml:space="preserve">
          <source>StatelessWhile</source>
          <target state="translated">StatelessWhile</target>
        </trans-unit>
        <trans-unit id="2656236f800a76ebc0f7b49c14ff22e2c68fde8c" translate="yes" xml:space="preserve">
          <source>Static assert that values is a &quot;proper&quot; iterable.</source>
          <target state="translated">valuesが &quot;適切な &quot;イテレータブルであることを静的にアサートします。</target>
        </trans-unit>
        <trans-unit id="6404383a96f28b8d17ebe74b018f2fd9a3dfb2c4" translate="yes" xml:space="preserve">
          <source>StaticRegexFullMatch</source>
          <target state="translated">StaticRegexFullMatch</target>
        </trans-unit>
        <trans-unit id="a2f5bda1343921dac2592657a3c1bb673f354eb4" translate="yes" xml:space="preserve">
          <source>StaticRegexReplace</source>
          <target state="translated">StaticRegexReplace</target>
        </trans-unit>
        <trans-unit id="ffa05fac8dc7f5a7d7afa20754fed148f2437c90" translate="yes" xml:space="preserve">
          <source>Statically asserts that the given &lt;code&gt;Tensor&lt;/code&gt; is of the specified type.</source>
          <target state="translated">指定された &lt;code&gt;Tensor&lt;/code&gt; が指定されたタイプであることを静的に表明します。</target>
        </trans-unit>
        <trans-unit id="60df8ae87178e3ec5ce8d8d0fa30901d76174405" translate="yes" xml:space="preserve">
          <source>Stats return +/- infinity when it makes sense. E.g., the variance of a Cauchy distribution is infinity. However, sometimes the statistic is undefined, e.g., if a distribution's pdf does not achieve a maximum within the support of the distribution, the mode is undefined. If the mean is undefined, then by definition the variance is undefined. E.g. the mean for Student's T for df = 1 is undefined (no clear way to say it is either + or - infinity), so the variance = E[(X - mean)**2] is also undefined.</source>
          <target state="translated">統計は、意味がある場合には、+/-無限大を返します。例えば、コーシー分布の分散は無限大です。しかし、統計量が未定義な場合もあります。例えば、分布のpdfが分布のサポート内で最大値を達成しない場合、モードは未定義です。平均が未定義であれば,定義により分散は未定義である.例えば,df=1 の Student's T の平均は未定義です(+または-無限大であるという明確な方法はありません)ので,分散=E[(X-平均)**2]も未定義です.</target>
        </trans-unit>
        <trans-unit id="6962066f13db78a5ec454a5212c06058d2fdec79" translate="yes" xml:space="preserve">
          <source>StatsAggregatorHandle</source>
          <target state="translated">StatsAggregatorHandle</target>
        </trans-unit>
        <trans-unit id="bb4c77d29cd93db23e1093847eb5102b70ff53c6" translate="yes" xml:space="preserve">
          <source>StatsAggregatorHandleV2</source>
          <target state="translated">StatsAggregatorHandleV2</target>
        </trans-unit>
        <trans-unit id="85f41c0c302400d570031378359d9fb2792db5b3" translate="yes" xml:space="preserve">
          <source>StatsAggregatorSetSummaryWriter</source>
          <target state="translated">StatsAggregatorSetSummaryWriter</target>
        </trans-unit>
        <trans-unit id="251ca3e57b703ac164fa43b12aef4db8dcee18d5" translate="yes" xml:space="preserve">
          <source>StatsAggregatorSummary</source>
          <target state="translated">StatsAggregatorSummary</target>
        </trans-unit>
        <trans-unit id="925338de78ef990dae5c63810e8a9d9dde59c9df" translate="yes" xml:space="preserve">
          <source>Stay connected</source>
          <target state="translated">つながり続ける</target>
        </trans-unit>
        <trans-unit id="b2774225dd59a876c27c7596f3a484fcf70ccb49" translate="yes" xml:space="preserve">
          <source>Step after which to stop.</source>
          <target state="translated">止まった後のステップ。</target>
        </trans-unit>
        <trans-unit id="1322357c8c718a7318abf7389375bbcd8dbb4afc" translate="yes" xml:space="preserve">
          <source>Steps 2 through 4 are done automatically by class &lt;a href=&quot;../../../keras/optimizers/optimizer&quot;&gt;&lt;code&gt;tf.keras.optimizers.Optimizer&lt;/code&gt;&lt;/a&gt; if you call its &lt;a href=&quot;../../../keras/optimizers/optimizer#apply_gradients&quot;&gt;&lt;code&gt;tf.keras.optimizers.Optimizer.apply_gradients&lt;/code&gt;&lt;/a&gt; method in a replica context.</source>
          <target state="translated">ステップ2から4は、レプリカコンテキストで&lt;a href=&quot;../../../keras/optimizers/optimizer#apply_gradients&quot;&gt; &lt;code&gt;tf.keras.optimizers.Optimizer.apply_gradients&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すと、クラス&lt;a href=&quot;../../../keras/optimizers/optimizer&quot;&gt; &lt;code&gt;tf.keras.optimizers.Optimizer&lt;/code&gt; &lt;/a&gt;によって自動的に実行されます。</target>
        </trans-unit>
        <trans-unit id="22071530d6c4d9de4a3df64a6b62d022124955f6" translate="yes" xml:space="preserve">
          <source>Steps 2 through 4 are done automatically by class &lt;a href=&quot;../../../keras/optimizers/optimizer&quot;&gt;&lt;code&gt;tf.keras.optimizers.Optimizer&lt;/code&gt;&lt;/a&gt; if you call its &lt;a href=&quot;../../../keras/optimizers/optimizer#apply_gradients&quot;&gt;&lt;code&gt;tf.keras.optimizers.Optimizer.apply_gradients&lt;/code&gt;&lt;/a&gt; method in a replica context. They are also done automatically if you call an &lt;code&gt;assign*&lt;/code&gt; method on a (non sync-on-read) variable that was constructed with an aggregation method (which is used to determine the reduction used in step 3).</source>
          <target state="translated">手順2から4は、レプリカコンテキストで&lt;a href=&quot;../../../keras/optimizers/optimizer#apply_gradients&quot;&gt; &lt;code&gt;tf.keras.optimizers.Optimizer.apply_gradients&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すと、クラス&lt;a href=&quot;../../../keras/optimizers/optimizer&quot;&gt; &lt;code&gt;tf.keras.optimizers.Optimizer&lt;/code&gt; &lt;/a&gt;によって自動的に実行されます。また、集約メソッド（ステップ3で使用される削減を決定するために使用される）で構築された（sync-on-readではない）変数で &lt;code&gt;assign*&lt;/code&gt; メソッドを呼び出すと、これらは自動的に実行されます。</target>
        </trans-unit>
        <trans-unit id="2aba5eee442d591a15fb0bb2a0c84b437adb7da8" translate="yes" xml:space="preserve">
          <source>Steps 2 through 4 are done automatically by class &lt;a href=&quot;../keras/optimizers/optimizer&quot;&gt;&lt;code&gt;tf.keras.optimizers.Optimizer&lt;/code&gt;&lt;/a&gt; if you call its &lt;a href=&quot;../keras/optimizers/optimizer#apply_gradients&quot;&gt;&lt;code&gt;tf.keras.optimizers.Optimizer.apply_gradients&lt;/code&gt;&lt;/a&gt; method in a replica context.</source>
          <target state="translated">ステップ2から4は、レプリカコンテキストで&lt;a href=&quot;../keras/optimizers/optimizer#apply_gradients&quot;&gt; &lt;code&gt;tf.keras.optimizers.Optimizer.apply_gradients&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すと、クラス&lt;a href=&quot;../keras/optimizers/optimizer&quot;&gt; &lt;code&gt;tf.keras.optimizers.Optimizer&lt;/code&gt; &lt;/a&gt;によって自動的に実行されます。</target>
        </trans-unit>
        <trans-unit id="f210a94770e322853957792583d184bd18568f9b" translate="yes" xml:space="preserve">
          <source>Steps 2 through 4 are done automatically by class &lt;a href=&quot;../keras/optimizers/optimizer&quot;&gt;&lt;code&gt;tf.keras.optimizers.Optimizer&lt;/code&gt;&lt;/a&gt; if you call its &lt;a href=&quot;../keras/optimizers/optimizer#apply_gradients&quot;&gt;&lt;code&gt;tf.keras.optimizers.Optimizer.apply_gradients&lt;/code&gt;&lt;/a&gt; method in a replica context. They are also done automatically if you call an &lt;code&gt;assign*&lt;/code&gt; method on a (non sync-on-read) variable that was constructed with an aggregation method (which is used to determine the reduction used in step 3).</source>
          <target state="translated">手順2から4は、レプリカコンテキストで&lt;a href=&quot;../keras/optimizers/optimizer#apply_gradients&quot;&gt; &lt;code&gt;tf.keras.optimizers.Optimizer.apply_gradients&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すと、クラス&lt;a href=&quot;../keras/optimizers/optimizer&quot;&gt; &lt;code&gt;tf.keras.optimizers.Optimizer&lt;/code&gt; &lt;/a&gt;によって自動的に実行されます。また、集約メソッド（ステップ3で使用される削減を決定するために使用される）で構築された（sync-on-readではない）変数で &lt;code&gt;assign*&lt;/code&gt; メソッドを呼び出すと、これらは自動的に実行されます。</target>
        </trans-unit>
        <trans-unit id="85a411ea2f2761d1ddcb88eb51ad0e8e10187389" translate="yes" xml:space="preserve">
          <source>Stochastic Dual Coordinate Ascent helper for linear estimators.</source>
          <target state="translated">線形推定器のための確率的二重座標上昇ヘルパー。</target>
        </trans-unit>
        <trans-unit id="2e20f05c0478db17b96bfc4f1f237857a37fd196" translate="yes" xml:space="preserve">
          <source>Stochastic Gradient Descent with Warm Restarts: &lt;a href=&quot;https://openreview.net/forum?id=Skq89Scxx&amp;amp;noteId=Skq89Scxx&quot;&gt;Loshchilov et al., 2017&lt;/a&gt; (&lt;a href=&quot;https://openreview.net/pdf?id=Skq89Scxx&quot;&gt;pdf&lt;/a&gt;)</source>
          <target state="translated">ウォーム&lt;a href=&quot;https://openreview.net/forum?id=Skq89Scxx&amp;amp;noteId=Skq89Scxx&quot;&gt;リスタートを&lt;/a&gt;伴う確率的勾配降下法：Loshchilov et al。、2017（&lt;a href=&quot;https://openreview.net/pdf?id=Skq89Scxx&quot;&gt;pdf&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="5db97c77f8ae58c61c9d9965b48bf1937ae6418f" translate="yes" xml:space="preserve">
          <source>Stochastic gradient descent and momentum optimizer.</source>
          <target state="translated">確率的な勾配降下とモメンタムオプティマイザ。</target>
        </trans-unit>
        <trans-unit id="133b83393780c8ea9a29cf07bcedf37ff11c6738" translate="yes" xml:space="preserve">
          <source>Stop condition: In order to support both distributed and non-distributed configuration reliably, the only supported stop condition for model training is &lt;code&gt;train_spec.max_steps&lt;/code&gt;. If &lt;code&gt;train_spec.max_steps&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt;, the model is trained forever. &lt;em&gt;Use with care&lt;/em&gt; if model stop condition is different. For example, assume that the model is expected to be trained with one epoch of training data, and the training &lt;code&gt;input_fn&lt;/code&gt; is configured to throw &lt;code&gt;OutOfRangeError&lt;/code&gt; after going through one epoch, which stops the &lt;a href=&quot;../compat/v1/estimator/estimator#train&quot;&gt;&lt;code&gt;Estimator.train&lt;/code&gt;&lt;/a&gt;. For a three-training-worker distributed configuration, each training worker is likely to go through the whole epoch independently. So, the model will be trained with three epochs of training data instead of one epoch.</source>
          <target state="translated">停止条件：分散構成と非分散構成の両方を確実にサポートするために、モデルトレーニングでサポートされている停止条件は &lt;code&gt;train_spec.max_steps&lt;/code&gt; のみです。場合 &lt;code&gt;train_spec.max_steps&lt;/code&gt; はありません &lt;code&gt;None&lt;/code&gt; 、モデルが永遠に訓練を受けています。機種停止条件が異なる場合&lt;em&gt;はご注意ください&lt;/em&gt;。たとえば、モデルが1エポックのトレーニングデータでトレーニングされることが想定されており、トレーニング &lt;code&gt;input_fn&lt;/code&gt; が1エポックを通過した後に &lt;code&gt;OutOfRangeError&lt;/code&gt; をスローするように構成されていて、&lt;a href=&quot;../compat/v1/estimator/estimator#train&quot;&gt; &lt;code&gt;Estimator.train&lt;/code&gt; &lt;/a&gt;が停止したとします。。 3つのトレーニングワーカーの分散構成の場合、各トレーニングワーカーはエポック全体を個別に通過する可能性があります。したがって、モデルは1エポックではなく3エポックのトレーニングデータでトレーニングされます。</target>
        </trans-unit>
        <trans-unit id="0b73c19e56bb305894a3de5407fb01e4f9a8fe89" translate="yes" xml:space="preserve">
          <source>Stop the services and the coordinator.</source>
          <target state="translated">サービスやコーディネーターを止めて</target>
        </trans-unit>
        <trans-unit id="178bf5a0d6795a75dd8c77a8ab5f64c90f1e95c4" translate="yes" xml:space="preserve">
          <source>Stop training when a monitored metric has stopped improving.</source>
          <target state="translated">モニタリングされた指標が改善しなくなった場合は、トレーニングを中止してください。</target>
        </trans-unit>
        <trans-unit id="acaf908480f4f7513719d5d37193f12e822e8df4" translate="yes" xml:space="preserve">
          <source>Stop training when a monitored quantity has stopped improving.</source>
          <target state="translated">モニタリングした量が改善しなくなった場合は、トレーニングを中止してください。</target>
        </trans-unit>
        <trans-unit id="6bd0877ac923e27bfb355d76a07759435944808f" translate="yes" xml:space="preserve">
          <source>Stop value.</source>
          <target state="translated">ストップ値。</target>
        </trans-unit>
        <trans-unit id="04a2f3a1b1a88e057de7815aa5765999e45ceae0" translate="yes" xml:space="preserve">
          <source>StopGradient</source>
          <target state="translated">StopGradient</target>
        </trans-unit>
        <trans-unit id="5492e7af5bc227efd8741534cde9d83c515b2fee" translate="yes" xml:space="preserve">
          <source>StopIteration</source>
          <target state="translated">StopIteration</target>
        </trans-unit>
        <trans-unit id="7ca958edd4ae9334803b83d98f9fa435aceacaef" translate="yes" xml:space="preserve">
          <source>Stops and exports the active trace as a Summary and/or profile file.</source>
          <target state="translated">アクティブなトレースを停止し、サマリーおよび/またはプロファイルファイルとしてエクスポートします。</target>
        </trans-unit>
        <trans-unit id="55a9229e4f89292e865188cb6a0d2d8542aff987" translate="yes" xml:space="preserve">
          <source>Stops gradient computation.</source>
          <target state="translated">勾配計算を停止します。</target>
        </trans-unit>
        <trans-unit id="e4e14f4106f6a3870d0e38ef853369d42ee937fd" translate="yes" xml:space="preserve">
          <source>Stops running threads and wait for them to exit, if necessary.</source>
          <target state="translated">実行中のスレッドを停止し、必要に応じて終了するのを待ちます。</target>
        </trans-unit>
        <trans-unit id="fcd54636ab3abf45ce6ada0f0d4fc3e14d23ab86" translate="yes" xml:space="preserve">
          <source>Stops the current profiling session.</source>
          <target state="translated">現在のプロファイリングセッションを停止します。</target>
        </trans-unit>
        <trans-unit id="9b208b5f31ff1c56cafbcbee9b5e3c8091431b21" translate="yes" xml:space="preserve">
          <source>Stops the current trace and discards any collected information.</source>
          <target state="translated">現在のトレースを停止し、収集した情報を破棄します。</target>
        </trans-unit>
        <trans-unit id="2d87fc3a0f3a70413df9f203b126effeeeda2c89" translate="yes" xml:space="preserve">
          <source>Stops the trace and exports all metadata collected during the trace to the default SummaryWriter, if one has been set.</source>
          <target state="translated">トレースを停止し、トレース中に収集されたすべてのメタデータを、デフォルトの SummaryWriter が設定されている場合にエクスポートします。</target>
        </trans-unit>
        <trans-unit id="b06e8e16410bacae116aaf4c85d647ff5691dee0" translate="yes" xml:space="preserve">
          <source>Store the input tensor in the state of the current session.</source>
          <target state="translated">入力テンソルを現在のセッションの状態で保存します。</target>
        </trans-unit>
        <trans-unit id="498891dd84278fabc1afd5025cb9d7776029cb2e" translate="yes" xml:space="preserve">
          <source>Stores &lt;code&gt;value&lt;/code&gt; in the collection with the given &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">指定した &lt;code&gt;name&lt;/code&gt; コレクションに &lt;code&gt;value&lt;/code&gt; を格納します。</target>
        </trans-unit>
        <trans-unit id="7487de8aca0f8eb26902fa7d5921abad1adb56f6" translate="yes" xml:space="preserve">
          <source>Stores &lt;code&gt;value&lt;/code&gt; in the collections given by &lt;code&gt;names&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;names&lt;/code&gt; 指定されたコレクションに &lt;code&gt;value&lt;/code&gt; を格納します。</target>
        </trans-unit>
        <trans-unit id="a8ad5005cffff07e7ce60dc5e8a6e835ce897462" translate="yes" xml:space="preserve">
          <source>Stores two elements: &lt;code&gt;(c, h)&lt;/code&gt;, in that order. Where &lt;code&gt;c&lt;/code&gt; is the hidden state and &lt;code&gt;h&lt;/code&gt; is the output.</source>
          <target state="translated">&lt;code&gt;(c, h)&lt;/code&gt; 2つの要素をこの順序で格納します。ここで、 &lt;code&gt;c&lt;/code&gt; は非表示状態、 &lt;code&gt;h&lt;/code&gt; は出力です。</target>
        </trans-unit>
        <trans-unit id="d91fe2f0e655f4368f035ab16882f26aec617b28" translate="yes" xml:space="preserve">
          <source>Storing 2 bands of a 3x3 matrix. Note that first element in the second row is ignored due to the 'LEFT_RIGHT' padding.</source>
          <target state="translated">3x3 の行列の 2 つのバンドを格納します。2 行目の最初の要素は、'LEFT_RIGHT' パディングのため無視されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="7e2dcead89ab3619bfd615aad51c544f9429db86" translate="yes" xml:space="preserve">
          <source>Storing 2 superdiagonals of a 4x4 matrix. Because of the 'LEFT_RIGHT' padding the last element of the first row is ignored.</source>
          <target state="translated">4x4の行列の2つの超対角線を格納します。LEFT_RIGHT' パディングのため、最初の行の最後の要素は無視されます。</target>
        </trans-unit>
        <trans-unit id="a82e4ae2851cfeda98353075ffa62140368519f1" translate="yes" xml:space="preserve">
          <source>Str (default: &lt;code&gt;''&lt;/code&gt;). Prefix to use for filenames of saved pictures (only relevant if &lt;code&gt;save_to_dir&lt;/code&gt; is set).</source>
          <target state="translated">Str（デフォルト： &lt;code&gt;''&lt;/code&gt; ）。保存された画像のファイル名に使用するプレフィックス（ &lt;code&gt;save_to_dir&lt;/code&gt; が設定されている場合にのみ関連）。</target>
        </trans-unit>
        <trans-unit id="8ca55f830ec6dd6221a3560bb62ed0fa07fc6882" translate="yes" xml:space="preserve">
          <source>Str. Prefix to use for filenames of saved pictures (only relevant if &lt;code&gt;save_to_dir&lt;/code&gt; is set).</source>
          <target state="translated">Str。保存された画像のファイル名に使用するプレフィックス（ &lt;code&gt;save_to_dir&lt;/code&gt; が設定されている場合にのみ関連）。</target>
        </trans-unit>
        <trans-unit id="7c64f2665a01e26d35ae8ab108683aa71c9125b5" translate="yes" xml:space="preserve">
          <source>Strategies that intend to have an associated &lt;a href=&quot;../../../../distribute/cluster_resolver/clusterresolver&quot;&gt;&lt;code&gt;tf.distribute.cluster_resolver.ClusterResolver&lt;/code&gt;&lt;/a&gt; must set the relevant attribute, or override this property; otherwise, &lt;code&gt;None&lt;/code&gt; is returned by default. Those strategies should also provide information regarding what is returned by this property.</source>
          <target state="translated">&lt;a href=&quot;../../../../distribute/cluster_resolver/clusterresolver&quot;&gt; &lt;code&gt;tf.distribute.cluster_resolver.ClusterResolver&lt;/code&gt; を&lt;/a&gt;関連付けることを目的とする戦略では、関連する属性を設定するか、このプロパティをオーバーライドする必要があります。それ以外の場合、デフォルトでは &lt;code&gt;None&lt;/code&gt; が返されます。これらの戦略は、このプロパティによって返されるものに関する情報も提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="1c150005852c9b99b991127e9b0603b5216724ee" translate="yes" xml:space="preserve">
          <source>Strategies that intend to have an associated &lt;a href=&quot;../../../distribute/cluster_resolver/clusterresolver&quot;&gt;&lt;code&gt;tf.distribute.cluster_resolver.ClusterResolver&lt;/code&gt;&lt;/a&gt; must set the relevant attribute, or override this property; otherwise, &lt;code&gt;None&lt;/code&gt; is returned by default. Those strategies should also provide information regarding what is returned by this property.</source>
          <target state="translated">&lt;a href=&quot;../../../distribute/cluster_resolver/clusterresolver&quot;&gt; &lt;code&gt;tf.distribute.cluster_resolver.ClusterResolver&lt;/code&gt; を&lt;/a&gt;関連付けることを目的とする戦略では、関連する属性を設定するか、このプロパティをオーバーライドする必要があります。それ以外の場合、デフォルトでは &lt;code&gt;None&lt;/code&gt; が返されます。これらの戦略は、このプロパティによって返されるものに関する情報も提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="b65f23738d3d600c90b48a211073e4574e79d771" translate="yes" xml:space="preserve">
          <source>Strategies that intend to have an associated &lt;a href=&quot;../cluster_resolver/clusterresolver&quot;&gt;&lt;code&gt;tf.distribute.cluster_resolver.ClusterResolver&lt;/code&gt;&lt;/a&gt; must set the relevant attribute, or override this property; otherwise, &lt;code&gt;None&lt;/code&gt; is returned by default. Those strategies should also provide information regarding what is returned by this property.</source>
          <target state="translated">&lt;a href=&quot;../cluster_resolver/clusterresolver&quot;&gt; &lt;code&gt;tf.distribute.cluster_resolver.ClusterResolver&lt;/code&gt; を&lt;/a&gt;関連付けることを目的とする戦略では、関連する属性を設定するか、このプロパティをオーバーライドする必要があります。それ以外の場合、デフォルトでは &lt;code&gt;None&lt;/code&gt; が返されます。これらの戦略は、このプロパティによって返されるものに関する情報も提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="dce87deedac433f86019ae09a049c926cf20a63e" translate="yes" xml:space="preserve">
          <source>Strategies that intend to have an associated &lt;a href=&quot;cluster_resolver/clusterresolver&quot;&gt;&lt;code&gt;tf.distribute.cluster_resolver.ClusterResolver&lt;/code&gt;&lt;/a&gt; must set the relevant attribute, or override this property; otherwise, &lt;code&gt;None&lt;/code&gt; is returned by default. Those strategies should also provide information regarding what is returned by this property.</source>
          <target state="translated">&lt;a href=&quot;cluster_resolver/clusterresolver&quot;&gt; &lt;code&gt;tf.distribute.cluster_resolver.ClusterResolver&lt;/code&gt; を&lt;/a&gt;関連付けることを目的とする戦略では、関連する属性を設定するか、このプロパティをオーバーライドする必要があります。それ以外の場合、デフォルトでは &lt;code&gt;None&lt;/code&gt; が返されます。これらの戦略は、このプロパティによって返されるものに関する情報も提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="e1630086b72a99aef376059ae635df741b6845b2" translate="yes" xml:space="preserve">
          <source>Strategy to aggregate. Acceptable values are OpHint.AGGREGATE_FIRST, OpHint.AGGREGATE_LAST, and OpHint.AGGREGATE_STACK. Note, aggregate is only valid if tag is specified.</source>
          <target state="translated">集約するストラテジー。使用可能な値は、OpHint.AGGREGATE_FIRST、OpHint.AGGREGATE_LAST、およびOpHint.AGGREGATE_STACKです。注:集約は、tagが指定されている場合にのみ有効です。</target>
        </trans-unit>
        <trans-unit id="2dae3f8a26c540bddc508bd4fc20a264913a3400" translate="yes" xml:space="preserve">
          <source>Strict nesting also applies to combinations of &lt;code&gt;ForwardAccumulator&lt;/code&gt; and &lt;a href=&quot;../gradienttape&quot;&gt;&lt;code&gt;tf.GradientTape&lt;/code&gt;&lt;/a&gt;. More deeply nested &lt;code&gt;GradientTape&lt;/code&gt; objects will ignore the products of outer &lt;code&gt;ForwardAccumulator&lt;/code&gt; objects. This allows (for example) memory-efficient forward-over-backward computation of Hessian-vector products, where the inner &lt;code&gt;GradientTape&lt;/code&gt; would otherwise hold on to all intermediate JVPs:</source>
          <target state="translated">厳密なネストは、 &lt;code&gt;ForwardAccumulator&lt;/code&gt; と&lt;a href=&quot;../gradienttape&quot;&gt; &lt;code&gt;tf.GradientTape&lt;/code&gt; の&lt;/a&gt;組み合わせにも適用されます。より深くネストされた &lt;code&gt;GradientTape&lt;/code&gt; オブジェクトは、外側の &lt;code&gt;ForwardAccumulator&lt;/code&gt; オブジェクトの積を無視します。これにより、（たとえば）内側の &lt;code&gt;GradientTape&lt;/code&gt; が中間のすべてのJVPを保持する、ヘッセ行列積のメモリ効率の良い前方から後方への計算が可能になります。</target>
        </trans-unit>
        <trans-unit id="12a38590f790b0ac06d9406836155d6d1e3b3a6e" translate="yes" xml:space="preserve">
          <source>StridedSlice</source>
          <target state="translated">StridedSlice</target>
        </trans-unit>
        <trans-unit id="0df34b2d8e54fbf036d1b86fda2a402c4c2ebaca" translate="yes" xml:space="preserve">
          <source>StridedSliceAssign</source>
          <target state="translated">StridedSliceAssign</target>
        </trans-unit>
        <trans-unit id="47875586b3a2d66840adff7de5136b4e124e9604" translate="yes" xml:space="preserve">
          <source>StridedSliceGrad</source>
          <target state="translated">StridedSliceGrad</target>
        </trans-unit>
        <trans-unit id="dfd77fa0557e26459c08006318518445bec349dd" translate="yes" xml:space="preserve">
          <source>String (name of objective function), objective function or &lt;a href=&quot;../losses/loss&quot;&gt;&lt;code&gt;tf.keras.losses.Loss&lt;/code&gt;&lt;/a&gt; instance. See &lt;a href=&quot;../losses&quot;&gt;&lt;code&gt;tf.keras.losses&lt;/code&gt;&lt;/a&gt;. An objective function is any callable with the signature &lt;code&gt;loss = fn(y_true, y_pred)&lt;/code&gt;, where y_true = ground truth values with shape = &lt;code&gt;[batch_size, d0, .. dN]&lt;/code&gt;, except sparse loss functions such as sparse categorical crossentropy where shape = &lt;code&gt;[batch_size, d0, .. dN-1]&lt;/code&gt;. y_pred = predicted values with shape = &lt;code&gt;[batch_size, d0, .. dN]&lt;/code&gt;. It returns a weighted loss float tensor. If a custom &lt;code&gt;Loss&lt;/code&gt; instance is used and reduction is set to NONE, return value has the shape [batch_size, d0, .. dN-1] ie. per-sample or per-timestep loss values; otherwise, it is a scalar. If the model has multiple outputs, you can use a different loss on each output by passing a dictionary or a list of losses. The loss value that will be minimized by the model will then be the sum of all individual losses.</source>
          <target state="translated">文字列（目的関数の名前）、目的関数、または&lt;a href=&quot;../losses/loss&quot;&gt; &lt;code&gt;tf.keras.losses.Loss&lt;/code&gt; &lt;/a&gt;インスタンス。&lt;a href=&quot;../losses&quot;&gt; &lt;code&gt;tf.keras.losses&lt;/code&gt; を&lt;/a&gt;参照してください。目的関数は、署名 &lt;code&gt;loss = fn(y_true, y_pred)&lt;/code&gt; で呼び出し可能です。ここで、y_true =形状= &lt;code&gt;[batch_size, d0, .. dN]&lt;/code&gt; グラウンドトゥルース値です。ただし、形状= &lt;code&gt;[batch_size, d0, .. dN-1]&lt;/code&gt; 。 y_pred =形状= &lt;code&gt;[batch_size, d0, .. dN]&lt;/code&gt; 予測値。加重損失フロートテンソルを返します。カスタム &lt;code&gt;Loss&lt;/code&gt; 場合インスタンスが使用され、reductionがNONEに設定されている場合、戻り値の形状は[batch_size、d0、.. dN-1]です。サンプルごとまたはタイムステップごとの損失値。それ以外の場合は、スカラーです。モデルに複数の出力がある場合は、辞書または損失のリストを渡すことにより、出力ごとに異なる損失を使用できます。モデルによって最小化される損失値は、すべての個々の損失の合計になります。</target>
        </trans-unit>
        <trans-unit id="b60702a80c7edd9c6acd79c2add206069a42b97a" translate="yes" xml:space="preserve">
          <source>String (name of objective function), objective function or &lt;a href=&quot;losses/loss&quot;&gt;&lt;code&gt;tf.keras.losses.Loss&lt;/code&gt;&lt;/a&gt; instance. See &lt;a href=&quot;losses&quot;&gt;&lt;code&gt;tf.keras.losses&lt;/code&gt;&lt;/a&gt;. An objective function is any callable with the signature &lt;code&gt;loss = fn(y_true, y_pred)&lt;/code&gt;, where y_true = ground truth values with shape = &lt;code&gt;[batch_size, d0, .. dN]&lt;/code&gt;, except sparse loss functions such as sparse categorical crossentropy where shape = &lt;code&gt;[batch_size, d0, .. dN-1]&lt;/code&gt;. y_pred = predicted values with shape = &lt;code&gt;[batch_size, d0, .. dN]&lt;/code&gt;. It returns a weighted loss float tensor. If a custom &lt;code&gt;Loss&lt;/code&gt; instance is used and reduction is set to NONE, return value has the shape [batch_size, d0, .. dN-1] ie. per-sample or per-timestep loss values; otherwise, it is a scalar. If the model has multiple outputs, you can use a different loss on each output by passing a dictionary or a list of losses. The loss value that will be minimized by the model will then be the sum of all individual losses.</source>
          <target state="translated">文字列（目的関数の名前）、目的関数、または&lt;a href=&quot;losses/loss&quot;&gt; &lt;code&gt;tf.keras.losses.Loss&lt;/code&gt; &lt;/a&gt;インスタンス。&lt;a href=&quot;losses&quot;&gt; &lt;code&gt;tf.keras.losses&lt;/code&gt; を&lt;/a&gt;参照してください。目的関数は、署名 &lt;code&gt;loss = fn(y_true, y_pred)&lt;/code&gt; で呼び出し可能です。ここで、y_true =形状= &lt;code&gt;[batch_size, d0, .. dN]&lt;/code&gt; グラウンドトゥルース値です。ただし、形状= &lt;code&gt;[batch_size, d0, .. dN-1]&lt;/code&gt; 。 y_pred =形状= &lt;code&gt;[batch_size, d0, .. dN]&lt;/code&gt; 予測値。加重損失フロートテンソルを返します。カスタム &lt;code&gt;Loss&lt;/code&gt; 場合インスタンスが使用され、reductionがNONEに設定されている場合、戻り値の形状は[batch_size、d0、.. dN-1]です。サンプルごとまたはタイムステップごとの損失値。それ以外の場合は、スカラーです。モデルに複数の出力がある場合は、辞書または損失のリストを渡すことにより、出力ごとに異なる損失を使用できます。モデルによって最小化される損失値は、すべての個々の損失の合計になります。</target>
        </trans-unit>
        <trans-unit id="5f2dfe8ca8db07eb08debc2c7f9b696dd73b0fe5" translate="yes" xml:space="preserve">
          <source>String (name of optimizer) or optimizer instance. See &lt;a href=&quot;../optimizers&quot;&gt;&lt;code&gt;tf.keras.optimizers&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">文字列（オプティマイザーの名前）またはオプティマイザーインスタンス。&lt;a href=&quot;../optimizers&quot;&gt; &lt;code&gt;tf.keras.optimizers&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="922a30c15b8d3138b68b7d2b77a5cdd44f324ab2" translate="yes" xml:space="preserve">
          <source>String (name of optimizer) or optimizer instance. See &lt;a href=&quot;optimizers&quot;&gt;&lt;code&gt;tf.keras.optimizers&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">文字列（オプティマイザーの名前）またはオプティマイザーインスタンス。&lt;a href=&quot;optimizers&quot;&gt; &lt;code&gt;tf.keras.optimizers&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="1491a3bd88f9e10c7ce3a5a0f1112506bd8f631c" translate="yes" xml:space="preserve">
          <source>String denoting the name attribute of the input function</source>
          <target state="translated">入力関数の名前属性を表す文字列</target>
        </trans-unit>
        <trans-unit id="09a179a2e299df379d41ba596e3a17c3174c4727" translate="yes" xml:space="preserve">
          <source>String identifier.</source>
          <target state="translated">文字列識別子。</target>
        </trans-unit>
        <trans-unit id="9da9794e72722db1fc3be9ac6d15d7e99070a68b" translate="yes" xml:space="preserve">
          <source>String indicating which flip mode to use. Can be &quot;horizontal&quot;, &quot;vertical&quot;, or &quot;horizontal_and_vertical&quot;. Defaults to &quot;horizontal_and_vertical&quot;. &quot;horizontal&quot; is a left-right flip and &quot;vertical&quot; is a top-bottom flip.</source>
          <target state="translated">使用するフリップモードを示す文字列。horizontal&quot;、&quot;vertical&quot;、&quot;horizontal_and_vertical &quot;のいずれかを指定します。デフォルトは &quot;horizontal_and_vertical&quot; です。&quot;horizontal&quot; は左右反転、&quot;vertical&quot; は上下反転です。</target>
        </trans-unit>
        <trans-unit id="8219ddd9df81240d263b9ff43e77bbf9da8cf489" translate="yes" xml:space="preserve">
          <source>String key for weight values.</source>
          <target state="translated">重量値の文字列キー。</target>
        </trans-unit>
        <trans-unit id="7b4c8e7832ea4bb28fb1ecea1eb04c21acf3235a" translate="yes" xml:space="preserve">
          <source>String lengths of &lt;code&gt;input&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;input&lt;/code&gt; 文字列の長さ。</target>
        </trans-unit>
        <trans-unit id="a599dc6c9efa11184c777c15cffb542116b038e2" translate="yes" xml:space="preserve">
          <source>String message expected in the raised exception. For a raise exception e, expected_exception_message must equal str(e).</source>
          <target state="translated">発生した例外で期待される文字列メッセージ。発生した例外 e の場合、exception_message は str(e)と等しくなければなりません。</target>
        </trans-unit>
        <trans-unit id="bd7f3eb7d3d50c6e8c0a26f1d331b02f0bc5dc9a" translate="yes" xml:space="preserve">
          <source>String metric name.</source>
          <target state="translated">文字列のメトリック名。</target>
        </trans-unit>
        <trans-unit id="a30c1d22bb3f6422419875a2a58ff7fc57c21425" translate="yes" xml:space="preserve">
          <source>String name for the unicode encoding that should be used to decode each string.</source>
          <target state="translated">各文字列をデコードするために使われるべき unicode エンコーディングの文字列名。</target>
        </trans-unit>
        <trans-unit id="e29bfd02b922dbdbb018d7d60f863db98a6f0924" translate="yes" xml:space="preserve">
          <source>String name of the layer.</source>
          <target state="translated">レイヤーの文字列名。</target>
        </trans-unit>
        <trans-unit id="41c15ce36cf1b202bd7c9ed708074977a828206a" translate="yes" xml:space="preserve">
          <source>String or &lt;code&gt;pathlib.Path&lt;/code&gt; object, path to the saved model</source>
          <target state="translated">String or &lt;code&gt;pathlib.Path&lt;/code&gt; object, path to the saved model</target>
        </trans-unit>
        <trans-unit id="07997921f90be84e2eaf9af95300df1fbba2d9c7" translate="yes" xml:space="preserve">
          <source>String or &lt;code&gt;pathlib.Path&lt;/code&gt; object, path where to save the model</source>
          <target state="translated">String or &lt;code&gt;pathlib.Path&lt;/code&gt; object, path where to save the model</target>
        </trans-unit>
        <trans-unit id="dddf6e9408c091c8bde9c2f308bb3f33f6bb0e59" translate="yes" xml:space="preserve">
          <source>String or PathLike, path to the file to save the weights to. When saving in TensorFlow format, this is the prefix used for checkpoint files (multiple files are generated). Note that the '.h5' suffix causes weights to be saved in HDF5 format.</source>
          <target state="translated">String または PathLike、重みを保存するファイルへのパス。TensorFlow形式で保存する場合は、チェックポイントファイル(複数のファイルが生成される)に使用される接頭辞です。.h5'という接尾辞を付けると、HDF5形式で保存されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="9c2aad5c6a931d4c7513d72ecffc8d9eb68b3cc5" translate="yes" xml:space="preserve">
          <source>String paths to latest checkpoint files as they arrive.</source>
          <target state="translated">到着した最新のチェックポイントファイルへの文字列パス。</target>
        </trans-unit>
        <trans-unit id="07ddd1ca7db4978b8769d8dcb6b1beb11b88795b" translate="yes" xml:space="preserve">
          <source>String prefix to index.</source>
          <target state="translated">インデックスの文字列接頭辞。</target>
        </trans-unit>
        <trans-unit id="0bb258314d29446040973d8100f997aa2449fcf2" translate="yes" xml:space="preserve">
          <source>String prefix to use for saving sample images (if &lt;code&gt;save_to_dir&lt;/code&gt; is set).</source>
          <target state="translated">String prefix to use for saving sample images (if &lt;code&gt;save_to_dir&lt;/code&gt; is set).</target>
        </trans-unit>
        <trans-unit id="beb3dec21fc639d9c053646d7320a1d84ea43009" translate="yes" xml:space="preserve">
          <source>String representing checkpoint name/pattern from which to restore column weights. Required if &lt;code&gt;tensor_name_in_ckpt&lt;/code&gt; is not &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">String representing checkpoint name/pattern from which to restore column weights. Required if &lt;code&gt;tensor_name_in_ckpt&lt;/code&gt; is not &lt;code&gt;None&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1c86c0e80130b067fc9f045422638dd0c5401ef7" translate="yes" xml:space="preserve">
          <source>String tag to identify arguments that should be packed.</source>
          <target state="translated">パックされるべき引数を識別するための文字列タグ。</target>
        </trans-unit>
        <trans-unit id="aeb494b5d1b54f48ea849048d1edcfe06dd51044" translate="yes" xml:space="preserve">
          <source>String to Id table wrapper that assigns out-of-vocabulary keys to buckets.</source>
          <target state="translated">バケットに語彙外のキーを割り当てるIdテーブルラッパーへの文字列。</target>
        </trans-unit>
        <trans-unit id="179de94c59fa9ac14c23a48547e8133600523550" translate="yes" xml:space="preserve">
          <source>String used to separate elements in the CSV file.</source>
          <target state="translated">CSVファイルの要素を区切るための文字列です。</target>
        </trans-unit>
        <trans-unit id="a36b819797c20ea79fdf62ca6a301d30ac9580a7" translate="yes" xml:space="preserve">
          <source>String, 'pre' or 'post' (optional, defaults to 'pre'): pad either before or after each sequence.</source>
          <target state="translated">文字列、 'pre' または 'post' (オプ シ ョ ナル、 デフォルトは 'pre'):各シーケンスの前後いずれかのパッド。</target>
        </trans-unit>
        <trans-unit id="4eadb934587d5f2664960028affe43281d5dbf8c" translate="yes" xml:space="preserve">
          <source>String, 'pre' or 'post' (optional, defaults to 'pre'): remove values from sequences larger than &lt;code&gt;maxlen&lt;/code&gt;, either at the beginning or at the end of the sequences.</source>
          <target state="translated">String, 'pre' or 'post' (optional, defaults to 'pre'): remove values from sequences larger than &lt;code&gt;maxlen&lt;/code&gt; , either at the beginning or at the end of the sequences.</target>
        </trans-unit>
        <trans-unit id="48f4f911fb0543798c85eef202f511b5782f781f" translate="yes" xml:space="preserve">
          <source>String, &lt;code&gt;tf.keras.optimizers.*&lt;/code&gt; object, or callable that creates the optimizer to use for training. If not specified, will use &lt;code&gt;Ftrl&lt;/code&gt; as the default optimizer.</source>
          <target state="translated">String, &lt;code&gt;tf.keras.optimizers.*&lt;/code&gt; object, or callable that creates the optimizer to use for training. If not specified, will use &lt;code&gt;Ftrl&lt;/code&gt; as the default optimizer.</target>
        </trans-unit>
        <trans-unit id="67d39d70acdc880413877671e7f168fccf79fc21" translate="yes" xml:space="preserve">
          <source>String, PathLike, path to SavedModel or H5 file to save the model.</source>
          <target state="translated">String、PathLike、モデルを保存するSavedModelまたはH5ファイルへのパス。</target>
        </trans-unit>
        <trans-unit id="1ed59984dcb6b51bcf59ca42f056109f19a00deb" translate="yes" xml:space="preserve">
          <source>String, data type of returned Keras variable.</source>
          <target state="translated">文字列、返されるKeras変数のデータ型。</target>
        </trans-unit>
        <trans-unit id="aaa81af7916f61c4c8df3b14acde35215be76a44" translate="yes" xml:space="preserve">
          <source>String, dtype of &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">文字列、 &lt;code&gt;x&lt;/code&gt; の dtype 。</target>
        </trans-unit>
        <trans-unit id="a5789ff3dbd761a130ee438cdcb1928b66fdf0b3" translate="yes" xml:space="preserve">
          <source>String, dtype of returned Keras variable.</source>
          <target state="translated">文字列、返されるKeras変数のdtype。</target>
        </trans-unit>
        <trans-unit id="3e0ea604a5f3c39c4b642db98b9396055178bded" translate="yes" xml:space="preserve">
          <source>String, dtype of returned Keras variable. None uses the dtype of x.</source>
          <target state="translated">文字列、返されるKeras変数のdtype。どれもxのdtypeを使用しません。</target>
        </trans-unit>
        <trans-unit id="b66ae7000a46e9202544c5e1993d349d00e7ef78" translate="yes" xml:space="preserve">
          <source>String, dtype of returned tensor.</source>
          <target state="translated">String,返されたテンソルのdtype.</target>
        </trans-unit>
        <trans-unit id="b9c15ef536aef04dc820663f0662b5f156b76689" translate="yes" xml:space="preserve">
          <source>String, either (&lt;code&gt;'float16'&lt;/code&gt;, &lt;code&gt;'float32'&lt;/code&gt;, or &lt;code&gt;'float64'&lt;/code&gt;).</source>
          <target state="translated">String, either ( &lt;code&gt;'float16'&lt;/code&gt; , &lt;code&gt;'float32'&lt;/code&gt; , or &lt;code&gt;'float64'&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="1482a5171d848e7aceca5637e4e4c0ea940ef1ef" translate="yes" xml:space="preserve">
          <source>String, name for the variable to create.</source>
          <target state="translated">文字列、作成する変数の名前。</target>
        </trans-unit>
        <trans-unit id="b7a64beca13685d79562b0ff4d118c3028987a83" translate="yes" xml:space="preserve">
          <source>String, name of function.</source>
          <target state="translated">文字列、関数名。</target>
        </trans-unit>
        <trans-unit id="49869a86329cca78f60b6659ab4e804038b77670" translate="yes" xml:space="preserve">
          <source>String, name of layer.</source>
          <target state="translated">文字列、レイヤーの名前。</target>
        </trans-unit>
        <trans-unit id="382c3344acb6ff576ac953c3b3db965623add21b" translate="yes" xml:space="preserve">
          <source>String, name of returned Keras variable.</source>
          <target state="translated">文字列、返されるKeras変数の名前。</target>
        </trans-unit>
        <trans-unit id="aea48fb0ecc193f0989453b8eeb2b40be5fd519b" translate="yes" xml:space="preserve">
          <source>String, name to use for this layer.</source>
          <target state="translated">文字列、このレイヤーに使用する名前。</target>
        </trans-unit>
        <trans-unit id="ab74a953dea30e88d9ccf5105994b58a4ab4d210" translate="yes" xml:space="preserve">
          <source>String, one of &lt;code&gt;None&lt;/code&gt; (random initialization), 'imagenet' (pre-training on ImageNet), or the path to the weights file to be loaded.</source>
          <target state="translated">String, one of &lt;code&gt;None&lt;/code&gt; (random initialization), 'imagenet' (pre-training on ImageNet), or the path to the weights file to be loaded.</target>
        </trans-unit>
        <trans-unit id="4826fea045af2fba0ea512cfe48134e3e456d2b6" translate="yes" xml:space="preserve">
          <source>String, one of &lt;code&gt;channels_first&lt;/code&gt;, &lt;code&gt;channels_last&lt;/code&gt;.</source>
          <target state="translated">String, one of &lt;code&gt;channels_first&lt;/code&gt; , &lt;code&gt;channels_last&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="be43801f0bf9e3057814c43ae42f8fe0e04f00a3" translate="yes" xml:space="preserve">
          <source>String, optional pooling mode for feature extraction when &lt;code&gt;include_top&lt;/code&gt; is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">String, optional pooling mode for feature extraction when &lt;code&gt;include_top&lt;/code&gt; is &lt;code&gt;False&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7d0a89a07af47d312c838385adbba36734e9d422" translate="yes" xml:space="preserve">
          <source>String, path to save the model file. This is the directory in which the system stores temporary files to recover the model from jobs terminated unexpectedly. The directory cannot be reused elsewhere to store other checkpoints, e.g. by BackupAndRestore callback of another training, or by another callback (ModelCheckpoint) of the same training.</source>
          <target state="translated">文字列、モデルファイルを保存するパス。これは、システムが予期せず終了したジョブからモデルを回復するための一時ファイルを保存するディレクトリです。このディレクトリは、別のトレーニングのBackupAndRestoreコールバックや、同じトレーニングの別のコールバック(ModelCheckpoint)によって、他のチェックポイントを保存するために他の場所で再利用することはできません。</target>
        </trans-unit>
        <trans-unit id="ea9f5b6cc332ffad44ba87818cd1c1307282d6c3" translate="yes" xml:space="preserve">
          <source>String, path to the saved model</source>
          <target state="translated">文字列,保存されたモデルへのパス</target>
        </trans-unit>
        <trans-unit id="8ff3eca339aa26478965031d60242092bc17292c" translate="yes" xml:space="preserve">
          <source>String, path to the weights file to load. For weight files in TensorFlow format, this is the file prefix (the same as was passed to &lt;code&gt;save_weights&lt;/code&gt;).</source>
          <target state="translated">String, path to the weights file to load. For weight files in TensorFlow format, this is the file prefix (the same as was passed to &lt;code&gt;save_weights&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="a0a3d9cd808b86047665f49535c974af481846b3" translate="yes" xml:space="preserve">
          <source>String, path where to save the model</source>
          <target state="translated">文字列,モデルを保存するパス</target>
        </trans-unit>
        <trans-unit id="54bc218b3ac398424451a14065ba255b110489cd" translate="yes" xml:space="preserve">
          <source>String, the current default float type.</source>
          <target state="translated">String、現在のデフォルトの float 型。</target>
        </trans-unit>
        <trans-unit id="700c4a2ce847530565679aa57b1cd230cd218708" translate="yes" xml:space="preserve">
          <source>String, the interpolation method used when resizing images. Defaults to &lt;code&gt;bilinear&lt;/code&gt;. Supports &lt;code&gt;bilinear&lt;/code&gt;, &lt;code&gt;nearest&lt;/code&gt;, &lt;code&gt;bicubic&lt;/code&gt;, &lt;code&gt;area&lt;/code&gt;, &lt;code&gt;lanczos3&lt;/code&gt;, &lt;code&gt;lanczos5&lt;/code&gt;, &lt;code&gt;gaussian&lt;/code&gt;, &lt;code&gt;mitchellcubic&lt;/code&gt;.</source>
          <target state="translated">String, the interpolation method used when resizing images. Defaults to &lt;code&gt;bilinear&lt;/code&gt; . Supports &lt;code&gt;bilinear&lt;/code&gt; , &lt;code&gt;nearest&lt;/code&gt; , &lt;code&gt;bicubic&lt;/code&gt; , &lt;code&gt;area&lt;/code&gt; , &lt;code&gt;lanczos3&lt;/code&gt; , &lt;code&gt;lanczos5&lt;/code&gt; , &lt;code&gt;gaussian&lt;/code&gt; , &lt;code&gt;mitchellcubic&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6f9c5ee92c6d361af784e7600c5dac9c3eb02033" translate="yes" xml:space="preserve">
          <source>String, the interpolation method. Defaults to &lt;code&gt;bilinear&lt;/code&gt;. Supports &lt;code&gt;bilinear&lt;/code&gt;, &lt;code&gt;nearest&lt;/code&gt;, &lt;code&gt;bicubic&lt;/code&gt;, &lt;code&gt;area&lt;/code&gt;, &lt;code&gt;lanczos3&lt;/code&gt;, &lt;code&gt;lanczos5&lt;/code&gt;, &lt;code&gt;gaussian&lt;/code&gt;, &lt;code&gt;mitchellcubic&lt;/code&gt;</source>
          <target state="translated">String, the interpolation method. Defaults to &lt;code&gt;bilinear&lt;/code&gt; . Supports &lt;code&gt;bilinear&lt;/code&gt; , &lt;code&gt;nearest&lt;/code&gt; , &lt;code&gt;bicubic&lt;/code&gt; , &lt;code&gt;area&lt;/code&gt; , &lt;code&gt;lanczos3&lt;/code&gt; , &lt;code&gt;lanczos5&lt;/code&gt; , &lt;code&gt;gaussian&lt;/code&gt; , &lt;code&gt;mitchellcubic&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d8880beadf72da21a00dcda22ee241cb40151e95" translate="yes" xml:space="preserve">
          <source>String, the name of the layer.</source>
          <target state="translated">文字列、レイヤーの名前。</target>
        </trans-unit>
        <trans-unit id="306a7252965aceb9c80bc2d9d564d0950eadf9e3" translate="yes" xml:space="preserve">
          <source>String, the name of the layer. Layers with the same name will share weights, but to avoid mistakes we require reuse=True in such cases.</source>
          <target state="translated">文字列。同じ名前のレイヤーは重みを共有しますが、間違いを避けるためにこのような場合は reuse=True を指定します。</target>
        </trans-unit>
        <trans-unit id="dc45af0eb0a8519c084c858a7d6df00877d8c002" translate="yes" xml:space="preserve">
          <source>String, the name of the model.</source>
          <target state="translated">文字列、モデルの名前。</target>
        </trans-unit>
        <trans-unit id="131db5fdecbb06270579c19677a0deb4267c0711" translate="yes" xml:space="preserve">
          <source>String. All statistics recorded by the returned transformation will be associated with the given &lt;code&gt;tag&lt;/code&gt;.</source>
          <target state="translated">String. All statistics recorded by the returned transformation will be associated with the given &lt;code&gt;tag&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0e2c163e98ebde1c4b775234eb7f91017f7f98ff" translate="yes" xml:space="preserve">
          <source>String. Device of the &lt;code&gt;ps&lt;/code&gt; job. If empty no &lt;code&gt;ps&lt;/code&gt; job is used. Defaults to &lt;code&gt;ps&lt;/code&gt;.</source>
          <target state="translated">String. Device of the &lt;code&gt;ps&lt;/code&gt; job. If empty no &lt;code&gt;ps&lt;/code&gt; job is used. Defaults to &lt;code&gt;ps&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="635e2818e0535519379e2e8106b2dcc7adc92598" translate="yes" xml:space="preserve">
          <source>String. Device of the &lt;code&gt;worker&lt;/code&gt; job. If empty no &lt;code&gt;worker&lt;/code&gt; job is used.</source>
          <target state="translated">String. Device of the &lt;code&gt;worker&lt;/code&gt; job. If empty no &lt;code&gt;worker&lt;/code&gt; job is used.</target>
        </trans-unit>
        <trans-unit id="8fa03651cb80d37144397c6eefec120d8d602db1" translate="yes" xml:space="preserve">
          <source>String. Name of the evaluation if user needs to run multiple evaluations on different data sets. Metrics for different evaluations are saved in separate folders, and appear separately in tensorboard.</source>
          <target state="translated">文字列。異なるデータセットで複数の評価を実行する必要がある場合は、評価の名前を指定します。異なる評価のメトリクスは別々のフォルダに保存され、tensorboardでは別々に表示されます。</target>
        </trans-unit>
        <trans-unit id="4d8ec7cb126f294a0791f76e3890d9dbe6d20127" translate="yes" xml:space="preserve">
          <source>String. Optional name of the operation. Defaults to 'CosineDecay'.</source>
          <target state="translated">文字列。オプションで操作の名前を指定します。デフォルトは 'CosineDecay' です。</target>
        </trans-unit>
        <trans-unit id="41969b7d40b0a431e3776651c8f731373b3c1699" translate="yes" xml:space="preserve">
          <source>String. Optional name of the operation. Defaults to 'ExponentialDecay'.</source>
          <target state="translated">文字列。オプションで操作の名前を指定します。デフォルトは 'ExponentialDecay' です。</target>
        </trans-unit>
        <trans-unit id="bd3aef72e0071162206cbb9794849ce33602d497" translate="yes" xml:space="preserve">
          <source>String. Optional name of the operation. Defaults to 'ExponentialTimeDecay'.</source>
          <target state="translated">文字列。オプションで操作の名前を指定します。デフォルトは 'ExponentialTimeDecay' です。</target>
        </trans-unit>
        <trans-unit id="fa753c835c3d25b0cae4b5cc0333640920cea738" translate="yes" xml:space="preserve">
          <source>String. Optional name of the operation. Defaults to 'InverseTimeDecay'.</source>
          <target state="translated">文字列。オプションで操作の名前を指定します。デフォルトは 'InverseTimeDecay' です。</target>
        </trans-unit>
        <trans-unit id="7465226034591c401cb622ccc4f9e085415e76e9" translate="yes" xml:space="preserve">
          <source>String. Optional name of the operation. Defaults to 'LinearCosineDecay'.</source>
          <target state="translated">文字列。オプションで操作の名前を指定します。既定値は 'LinearCosineDecay' です。</target>
        </trans-unit>
        <trans-unit id="2d4173f116f1b7b724fa8b00d832a269481667d4" translate="yes" xml:space="preserve">
          <source>String. Optional name of the operation. Defaults to 'NoisyLinearCosineDecay'.</source>
          <target state="translated">文字列。オプションで操作の名前を指定します。デフォルトは 'NoisyLinearCosineDecay' です。</target>
        </trans-unit>
        <trans-unit id="82ac7fdff59fa998124494ff3d945f4a716d9118" translate="yes" xml:space="preserve">
          <source>String. Optional name of the operation. Defaults to 'PolynomialDecay'.</source>
          <target state="translated">文字列。オプションで操作の名前を指定します。デフォルトは 'PolynomialDecay' です。</target>
        </trans-unit>
        <trans-unit id="b0e6a5900cf7b56971451b84180201678131d209" translate="yes" xml:space="preserve">
          <source>String. Optional name of the operation. Defaults to 'SGDRDecay'.</source>
          <target state="translated">文字列。オプションで操作の名前を指定します。デフォルトは 'SGDRDecay' です。</target>
        </trans-unit>
        <trans-unit id="fcffada860c3a7681e6bbad8da4b271f0e103559" translate="yes" xml:space="preserve">
          <source>String. Optional name to use as a prefix when adding operations.</source>
          <target state="translated">文字列。オプションで、操作を追加する際のプレフィックスとして使用する名前を指定します。</target>
        </trans-unit>
        <trans-unit id="b5252b6081181d093fce188a54fcddad441142da" translate="yes" xml:space="preserve">
          <source>String. Optional prefix name to use for the name of ops added in &lt;code&gt;apply()&lt;/code&gt;.</source>
          <target state="translated">String. Optional prefix name to use for the name of ops added in &lt;code&gt;apply()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9505c77d12b5fb7c5835f90cb0f4a212e4267bee" translate="yes" xml:space="preserve">
          <source>String. Prefix of filenames created for the checkpoint.</source>
          <target state="translated">文字列。チェックポイント用に作成されたファイル名の接頭辞。</target>
        </trans-unit>
        <trans-unit id="8b50ed2af7b098b529bbc7279bbf5db9de65578d" translate="yes" xml:space="preserve">
          <source>String/value dictionary of initialization arguments to override with new values.</source>
          <target state="translated">新しい値でオーバーライドする初期化引数の文字列/値辞書。</target>
        </trans-unit>
        <trans-unit id="57e5867b01bfc07f9eb74efe89e78ace68c7ff5a" translate="yes" xml:space="preserve">
          <source>String: name of an optimizer</source>
          <target state="translated">文字列:オプティマイザの名前</target>
        </trans-unit>
        <trans-unit id="7db1b1d60bd8122756e09e6b21ea6f728c05bcf4" translate="yes" xml:space="preserve">
          <source>String; &lt;code&gt;'float16'&lt;/code&gt;, &lt;code&gt;'float32'&lt;/code&gt;, or &lt;code&gt;'float64'&lt;/code&gt;.</source>
          <target state="translated">String; &lt;code&gt;'float16'&lt;/code&gt; , &lt;code&gt;'float32'&lt;/code&gt; , or &lt;code&gt;'float64'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="69f7c6cdff842a2f8f4173078fe399f60f46bb4f" translate="yes" xml:space="preserve">
          <source>String; JSON field under which the data will be stored. The field is used only if the payload is sent within a form (i.e. send_as_json is set to False).</source>
          <target state="translated">String;データが格納される JSON フィールド。このフィールドは、ペイロードがフォーム内で送信される場合にのみ使用されます (つまり send_as_json が False に設定されている場合)。</target>
        </trans-unit>
        <trans-unit id="25991458a54b6b5c2c3bcfec9fbd218e33a7aa72" translate="yes" xml:space="preserve">
          <source>String; path relative to &lt;code&gt;root&lt;/code&gt; to which the events will be sent.</source>
          <target state="translated">String; path relative to &lt;code&gt;root&lt;/code&gt; to which the events will be sent.</target>
        </trans-unit>
        <trans-unit id="adb953e66a4b5ffefe52caaa7d0d498ef07d9647" translate="yes" xml:space="preserve">
          <source>String; root url of the target server.</source>
          <target state="translated">String;ターゲットサーバのルートURL。</target>
        </trans-unit>
        <trans-unit id="56b757ccca43c3d5c7122b7bf0be5d39f94aadf7" translate="yes" xml:space="preserve">
          <source>StringFormat</source>
          <target state="translated">StringFormat</target>
        </trans-unit>
        <trans-unit id="febc3a9504942ba66d2686cf86922d3cf5631c76" translate="yes" xml:space="preserve">
          <source>StringJoin</source>
          <target state="translated">StringJoin</target>
        </trans-unit>
        <trans-unit id="747a6d9f79ce26bfcb75595cb97a96bf75d5f237" translate="yes" xml:space="preserve">
          <source>StringLength</source>
          <target state="translated">StringLength</target>
        </trans-unit>
        <trans-unit id="ecf4b9136eb2c585e0aa43773e5e6a271f4470d9" translate="yes" xml:space="preserve">
          <source>StringLower</source>
          <target state="translated">StringLower</target>
        </trans-unit>
        <trans-unit id="e701cf755f940d71be4654653b031b62a6f90a39" translate="yes" xml:space="preserve">
          <source>StringNGrams</source>
          <target state="translated">StringNGrams</target>
        </trans-unit>
        <trans-unit id="b6b8c2f2fe292b14e30b9dc4b3d2d0d73d2b3c78" translate="yes" xml:space="preserve">
          <source>StringSplit</source>
          <target state="translated">StringSplit</target>
        </trans-unit>
        <trans-unit id="83d070fc52da8b7c49d1eec25e4840e7ac623a94" translate="yes" xml:space="preserve">
          <source>StringSplitV2</source>
          <target state="translated">StringSplitV2</target>
        </trans-unit>
        <trans-unit id="3447a6da016b573f4a9b57aa81505e26c81f4c33" translate="yes" xml:space="preserve">
          <source>StringStrip</source>
          <target state="translated">StringStrip</target>
        </trans-unit>
        <trans-unit id="2456fea4c53341cb4fa48e9be5e86cf767c91827" translate="yes" xml:space="preserve">
          <source>StringToHashBucket</source>
          <target state="translated">StringToHashBucket</target>
        </trans-unit>
        <trans-unit id="a315e5a8362dbfb1db15edd08ef7acd2d1adc141" translate="yes" xml:space="preserve">
          <source>StringToHashBucketFast</source>
          <target state="translated">StringToHashBucketFast</target>
        </trans-unit>
        <trans-unit id="a1ebd64aa8e6e6b490c1de5f8d0e189cfe523c84" translate="yes" xml:space="preserve">
          <source>StringToHashBucketStrong</source>
          <target state="translated">StringToHashBucketStrong</target>
        </trans-unit>
        <trans-unit id="17895bd3a37cd75adfc52553eed6e06dfb429e14" translate="yes" xml:space="preserve">
          <source>StringToNumber</source>
          <target state="translated">StringToNumber</target>
        </trans-unit>
        <trans-unit id="4bed54a5cbfb94f15143c106342c651aa6141d46" translate="yes" xml:space="preserve">
          <source>StringUpper</source>
          <target state="translated">StringUpper</target>
        </trans-unit>
        <trans-unit id="4783a53435e04475242288debdaae1f5d02699bf" translate="yes" xml:space="preserve">
          <source>Strings.</source>
          <target state="translated">Strings.</target>
        </trans-unit>
        <trans-unit id="66bf723a15be4c8e82544fa8db7d3459828330ba" translate="yes" xml:space="preserve">
          <source>Strip leading and trailing whitespaces from the Tensor.</source>
          <target state="translated">テンソルから先頭と末尾の空白を削除します。</target>
        </trans-unit>
        <trans-unit id="f350b1261d4080472d67731c5c9e2f0603eeb906" translate="yes" xml:space="preserve">
          <source>Structure to create or gather pieces commonly needed to train a model.</source>
          <target state="translated">モデルを訓練するために一般的に必要とされるピースを作成または収集するための構造。</target>
        </trans-unit>
        <trans-unit id="7c98ab4418a813d6b943f2b02fac0d62645ae018" translate="yes" xml:space="preserve">
          <source>Student's t-distribution.</source>
          <target state="translated">生徒のt分布。</target>
        </trans-unit>
        <trans-unit id="1f3c17ad45052c3c8faf844ec9d98e802f713c26" translate="yes" xml:space="preserve">
          <source>Sub</source>
          <target state="translated">Sub</target>
        </trans-unit>
        <trans-unit id="7ffaefd8b7f218faf62448be773733b362a94c3c" translate="yes" xml:space="preserve">
          <source>Subclasses are expected to implement a leading-underscore version of the same-named function. The argument signature should be identical except for the omission of &lt;code&gt;name=&quot;...&quot;&lt;/code&gt;. For example, to enable &lt;code&gt;log_prob(value, name=&quot;log_prob&quot;)&lt;/code&gt; a subclass should implement &lt;code&gt;_log_prob(value)&lt;/code&gt;.</source>
          <target state="translated">サブクラスは、同じ名前の関数の先行アンダースコアバージョンを実装することが期待されています。引数の署名は、 &lt;code&gt;name=&quot;...&quot;&lt;/code&gt; が省略されていることを除いて、同じである必要があります。たとえば、 &lt;code&gt;log_prob(value, name=&quot;log_prob&quot;)&lt;/code&gt; を有効にするには、サブクラスで &lt;code&gt;_log_prob(value)&lt;/code&gt; を実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="2a6721e7c506f9fb97672ded9cc77a3beb182cd0" translate="yes" xml:space="preserve">
          <source>Subclasses can append to public-level docstrings by providing docstrings for their method specializations. For example:</source>
          <target state="translated">サブクラスは、メソッドの専門化のために docstrings を提供することで、公開レベルの docstrings に追加することができます。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="7aec789137a8d9a01ede9775ea920d915b4cb613" translate="yes" xml:space="preserve">
          <source>Subclasses of &lt;a href=&quot;module&quot;&gt;&lt;code&gt;tf.Module&lt;/code&gt;&lt;/a&gt; can also take advantage of the &lt;code&gt;_flatten&lt;/code&gt; method which can be used to implement tracking of any other types.</source>
          <target state="translated">サブクラス&lt;a href=&quot;module&quot;&gt; &lt;code&gt;tf.Module&lt;/code&gt; は&lt;/a&gt;またを活用することができ &lt;code&gt;_flatten&lt;/code&gt; 任意の他の種類のトラッキングを実装するために使用することができる方法。</target>
        </trans-unit>
        <trans-unit id="6710338017625456fa4561184c0ed0ef98bc5b38" translate="yes" xml:space="preserve">
          <source>Subclasses of &lt;code&gt;LinearOperator&lt;/code&gt; provide access to common methods on a (batch) matrix, without the need to materialize the matrix. This allows:</source>
          <target state="translated">&lt;code&gt;LinearOperator&lt;/code&gt; のサブクラスは、マトリックスを具体化する必要なく、（バッチ）マトリックス上の一般的なメソッドへのアクセスを提供します。これにより、次のことが可能になります。</target>
        </trans-unit>
        <trans-unit id="42876d8a9661050716824a58ac5a82c08c248d20" translate="yes" xml:space="preserve">
          <source>Subclasses should also define a syntactic_help string which may be presented to the user to describe the form of the legal values.</source>
          <target state="translated">サブクラスは、法的な値の形式を記述するためにユーザーに提示される syntactic_help 文字列も定義しなければなりません。</target>
        </trans-unit>
        <trans-unit id="aea78081ca45ef2980de5a15e286ad2bbda54156" translate="yes" xml:space="preserve">
          <source>Subclasses should only implement the assert methods (e.g. &lt;code&gt;assert_non_singular&lt;/code&gt;) if they can be done in less than &lt;code&gt;O(N^3)&lt;/code&gt; time.</source>
          <target state="translated">サブクラスは、 &lt;code&gt;O(N^3)&lt;/code&gt; 時間未満で実行できる場合に限り、assertメソッド（ &lt;code&gt;assert_non_singular&lt;/code&gt; など）を実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="cf637286e0e32e92c7c31e4552b50b7fae1598ef" translate="yes" xml:space="preserve">
          <source>Subclasses should override class method &lt;code&gt;_param_shapes&lt;/code&gt; to return constant-valued tensors when constant values are fed.</source>
          <target state="translated">サブクラスは、クラスメソッド &lt;code&gt;_param_shapes&lt;/code&gt; をオーバーライドして、定数値が供給されたときに定数値のテンソルを返す必要があります。</target>
        </trans-unit>
        <trans-unit id="37df94753f92ace08cbf9f39640c831c989de432" translate="yes" xml:space="preserve">
          <source>Subclasses should override class method &lt;code&gt;_param_shapes&lt;/code&gt;.</source>
          <target state="translated">サブクラスはクラスメソッド &lt;code&gt;_param_shapes&lt;/code&gt; をオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="8ce7d0131be24554322a374d91443a37c9bff932" translate="yes" xml:space="preserve">
          <source>Subclasses should override for any actions to run.</source>
          <target state="translated">サブクラスは、実行するアクションのためにオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="a7a01ff259fb1b5c2717e8c75756ea59f3bfc673" translate="yes" xml:space="preserve">
          <source>Subclasses should override for any actions to run. This function should only be called during TRAIN mode.</source>
          <target state="translated">サブクラスは、実行するアクションのためにオーバーライドしなければなりません。この関数はTRAINモードの時にのみ呼び出されるべきです。</target>
        </trans-unit>
        <trans-unit id="82494d5df2327066831b19fcbdbc11f57f406da0" translate="yes" xml:space="preserve">
          <source>Subclassing</source>
          <target state="translated">Subclassing</target>
        </trans-unit>
        <trans-unit id="1bd00ac5a13e28040a2dcff4532ed95198cd4120" translate="yes" xml:space="preserve">
          <source>Subdirectory under the Keras cache dir where the file is saved. If an absolute path &lt;code&gt;/path/to/folder&lt;/code&gt; is specified the file will be saved at that location.</source>
          <target state="translated">Subdirectory under the Keras cache dir where the file is saved. If an absolute path &lt;code&gt;/path/to/folder&lt;/code&gt; is specified the file will be saved at that location.</target>
        </trans-unit>
        <trans-unit id="4ee2b1df95332be247a338e3703c536ed3849d29" translate="yes" xml:space="preserve">
          <source>Submodules are modules which are properties of this module, or found as properties of modules which are properties of this module (and so on).</source>
          <target state="translated">サブモジュールとは、このモジュールのプロパティであるモジュール、またはこのモジュールのプロパティであるモジュールのプロパティとして発見されたモジュールのことです(など)。</target>
        </trans-unit>
        <trans-unit id="51e80dcaa34f1399e616159858d058d947cd464a" translate="yes" xml:space="preserve">
          <source>Subset of data (&lt;code&gt;&quot;training&quot;&lt;/code&gt; or &lt;code&gt;&quot;validation&quot;&lt;/code&gt;) if &lt;code&gt;validation_split&lt;/code&gt; is set in &lt;code&gt;ImageDataGenerator&lt;/code&gt;.</source>
          <target state="translated">Subset of data ( &lt;code&gt;&quot;training&quot;&lt;/code&gt; or &lt;code&gt;&quot;validation&quot;&lt;/code&gt; ) if &lt;code&gt;validation_split&lt;/code&gt; is set in &lt;code&gt;ImageDataGenerator&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c5cde39c455412b7e41e71c23e1437f4bfaa5876" translate="yes" xml:space="preserve">
          <source>Subset of data (&lt;code&gt;&quot;training&quot;&lt;/code&gt; or &lt;code&gt;&quot;validation&quot;&lt;/code&gt;) if validation_split is set in ImageDataGenerator.</source>
          <target state="translated">Subset of data ( &lt;code&gt;&quot;training&quot;&lt;/code&gt; or &lt;code&gt;&quot;validation&quot;&lt;/code&gt; ) if validation_split is set in ImageDataGenerator.</target>
        </trans-unit>
        <trans-unit id="aeeea8448907cebd24c27fdb058a5a2b0063306c" translate="yes" xml:space="preserve">
          <source>Substr</source>
          <target state="translated">Substr</target>
        </trans-unit>
        <trans-unit id="165eb6fe055989673d9f7ff7fc05154aebafbb3c" translate="yes" xml:space="preserve">
          <source>Subtracts &lt;a href=&quot;../../indexedslices&quot;&gt;&lt;code&gt;tf.IndexedSlices&lt;/code&gt;&lt;/a&gt; from this variable.</source>
          <target state="translated">この変数から&lt;a href=&quot;../../indexedslices&quot;&gt; &lt;code&gt;tf.IndexedSlices&lt;/code&gt; &lt;/a&gt;を減算します。</target>
        </trans-unit>
        <trans-unit id="f35f0686291951a05d8c56e0435069d27921f5e4" translate="yes" xml:space="preserve">
          <source>Subtracts &lt;a href=&quot;indexedslices&quot;&gt;&lt;code&gt;tf.IndexedSlices&lt;/code&gt;&lt;/a&gt; from this variable.</source>
          <target state="translated">この変数から&lt;a href=&quot;indexedslices&quot;&gt; &lt;code&gt;tf.IndexedSlices&lt;/code&gt; &lt;/a&gt;を減算します。</target>
        </trans-unit>
        <trans-unit id="d0df54d59a0a8e3d7213b02b8f3dd1802f26c838" translate="yes" xml:space="preserve">
          <source>Subtracts &lt;code&gt;v&lt;/code&gt; into specified rows of &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">Subtracts &lt;code&gt;v&lt;/code&gt; into specified rows of &lt;code&gt;x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e4f3ceff40b4c6fedef3257e6fc955248332ea8b" translate="yes" xml:space="preserve">
          <source>Subtracts a value from the current value of a variable.</source>
          <target state="translated">変数の現在値から値を引きます。</target>
        </trans-unit>
        <trans-unit id="862f9417a21c1ab694eec964a2530921649cc05a" translate="yes" xml:space="preserve">
          <source>Subtracts a value from this variable.</source>
          <target state="translated">この変数から値を引きます。</target>
        </trans-unit>
        <trans-unit id="533efd56cc6494d580885f7e5b88d2e19d328bec" translate="yes" xml:space="preserve">
          <source>Subtracts sparse &lt;code&gt;updates&lt;/code&gt; from an existing tensor according to &lt;code&gt;indices&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;indices&lt;/code&gt; に従って、既存のテンソルからスパース &lt;code&gt;updates&lt;/code&gt; を差し引きます。</target>
        </trans-unit>
        <trans-unit id="07ea115f667714fdf889a4dd7b8b19a88c2c6a4c" translate="yes" xml:space="preserve">
          <source>Subtracts sparse updates from the variable referenced by &lt;code&gt;resource&lt;/code&gt;.</source>
          <target state="translated">Subtracts sparse updates from the variable referenced by &lt;code&gt;resource&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f7f817b1800d31c4059e5eec01c90ea508fa2de1" translate="yes" xml:space="preserve">
          <source>Subtracts sparse updates to a variable reference.</source>
          <target state="translated">変数参照への疎な更新を減算します。</target>
        </trans-unit>
        <trans-unit id="ffab6af063b75339c2da62f252c5b9fd21c5a8b2" translate="yes" xml:space="preserve">
          <source>Such a boolean flag does not take an argument. If a user wants to specify a false value explicitly, the long option beginning with 'no' must be used: i.e. --noflag</source>
          <target state="translated">このようなブール値フラグは引数を取りません。ユーザが明示的に false 値を指定したい場合は、'no' で始まる長いオプションを使用しなければなりません。</target>
        </trans-unit>
        <trans-unit id="148ca103270cd289f01e05a2353802e186d98b69" translate="yes" xml:space="preserve">
          <source>Suffix for &lt;code&gt;MetaGraphDef&lt;/code&gt; file. Defaults to 'meta'.</source>
          <target state="translated">Suffix for &lt;code&gt;MetaGraphDef&lt;/code&gt; file. Defaults to 'meta'.</target>
        </trans-unit>
        <trans-unit id="7134069c282a2f783eef48ab8ddea200ea10abe8" translate="yes" xml:space="preserve">
          <source>Suggest &lt;a href=&quot;tensorshape#as_list&quot;&gt;&lt;code&gt;TensorShape.as_list&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">Suggest &lt;a href=&quot;tensorshape#as_list&quot;&gt; &lt;code&gt;TensorShape.as_list&lt;/code&gt; &lt;/a&gt; instead.</target>
        </trans-unit>
        <trans-unit id="6a79dcd29d4b3b6000264a88496dc0b21c3bb9bd" translate="yes" xml:space="preserve">
          <source>Suitable for passing to &lt;a href=&quot;checkpoint#restore&quot;&gt;&lt;code&gt;tf.train.Checkpoint.restore&lt;/code&gt;&lt;/a&gt; to resume training.</source>
          <target state="translated">&lt;a href=&quot;checkpoint#restore&quot;&gt; &lt;code&gt;tf.train.Checkpoint.restore&lt;/code&gt; &lt;/a&gt;に渡してトレーニングを再開するのに適しています。</target>
        </trans-unit>
        <trans-unit id="fc9ce14b28c6f2c3b72caf056ca604b2b96f7d2b" translate="yes" xml:space="preserve">
          <source>Sum</source>
          <target state="translated">Sum</target>
        </trans-unit>
        <trans-unit id="0767ec9c89c14ac885f6aac10f61d8b491a9b0fe" translate="yes" xml:space="preserve">
          <source>Sum of concentration parameters.</source>
          <target state="translated">濃度パラメータの合計。</target>
        </trans-unit>
        <trans-unit id="8e620e3b949e70befef0ae092fde25014ac70320" translate="yes" xml:space="preserve">
          <source>Sum of last dim of concentration parameter.</source>
          <target state="translated">濃度パラメータの最後の一桁の和。</target>
        </trans-unit>
        <trans-unit id="828ac024d0a463272c3865c79e2c0bf52a749629" translate="yes" xml:space="preserve">
          <source>Sum of the values in a tensor, alongside the specified axis.</source>
          <target state="translated">テンソル内の値の合計を、指定した軸と並べて表示します。</target>
        </trans-unit>
        <trans-unit id="099c5812d8fa488a0e61fa106c074634bb1f9d7f" translate="yes" xml:space="preserve">
          <source>Sum the input tensor across replicas according to group_assignment.</source>
          <target state="translated">group_assignmentに従ってレプリカ間の入力テンソルを合計します。</target>
        </trans-unit>
        <trans-unit id="10af7e4de27c05194aa88c5baa285ca841cf04ab" translate="yes" xml:space="preserve">
          <source>Sum the weights of false positives.</source>
          <target state="translated">偽陽性の重みを合計します。</target>
        </trans-unit>
        <trans-unit id="2a3284e36f760f4254131fea54732c3ba499239f" translate="yes" xml:space="preserve">
          <source>Sum the weights of true_negatives.</source>
          <target state="translated">true_negativeの重みを合計します。</target>
        </trans-unit>
        <trans-unit id="42dd5be548c1e47f53fdb48f3d5c971ee04367e9" translate="yes" xml:space="preserve">
          <source>Sum the weights of true_positives.</source>
          <target state="translated">true_positivesの重みを合計します。</target>
        </trans-unit>
        <trans-unit id="8333177a21c8e3581d5ed83f3b343cfae98cec5f" translate="yes" xml:space="preserve">
          <source>Summarizes textual data.</source>
          <target state="translated">テキストデータを要約します。</target>
        </trans-unit>
        <trans-unit id="123b3029e4d453e7c92a3cd95aae0d58e4d73529" translate="yes" xml:space="preserve">
          <source>SummaryWriter</source>
          <target state="translated">SummaryWriter</target>
        </trans-unit>
        <trans-unit id="f32d5a3b17e614297417cc279a7ec1cd02274d65" translate="yes" xml:space="preserve">
          <source>Support</source>
          <target state="translated">Support</target>
        </trans-unit>
        <trans-unit id="b079c2d8619aadef5a47beee8545f1de33276597" translate="yes" xml:space="preserve">
          <source>Support class for stubbing methods out for unit testing.</source>
          <target state="translated">ユニットテストのためのメソッドをスタブアウトするためのサポートクラス。</target>
        </trans-unit>
        <trans-unit id="7c570510ec02530b48ce8c6a2822119f29cc294e" translate="yes" xml:space="preserve">
          <source>Support for training models.</source>
          <target state="translated">育成モデルのサポート。</target>
        </trans-unit>
        <trans-unit id="9f45023b45c5bcb0e2e566e86c212c8ad3099045" translate="yes" xml:space="preserve">
          <source>Support wide range of machine learning models. Since most heads can work with logits, they can support DNN, RNN, Wide, Wide&amp;amp;Deep, Global objectives, Gradient boosted trees and many other types of machine learning models.</source>
          <target state="translated">幅広い機械学習モデルをサポートします。ほとんどのヘッドはロジットを使用できるため、DNN、RNN、Wide、Wide＆Deep、Global Objectives、Gradient Boosted Tree、およびその他の多くのタイプの機械学習モデルをサポートできます。</target>
        </trans-unit>
        <trans-unit id="4e4c3ba1c4c9a5628bf53097a54a121b78c3ef2e" translate="yes" xml:space="preserve">
          <source>Supported Python entities include:</source>
          <target state="translated">サポートされているPythonエンティティは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="7ca7b2b776a1a659ec26ed62726c8ba0fc984e92" translate="yes" xml:space="preserve">
          <source>Supported Python entities include: * functions * classes * object methods</source>
          <target state="translated">サポートされている Python エンティティは以下の通りです。*関数*クラス*オブジェクトメソッド</target>
        </trans-unit>
        <trans-unit id="6a7904d43a7d7b78c5432b67ecbbf60280c81cd9" translate="yes" xml:space="preserve">
          <source>Supported attribute includes micros, bytes, occurrence, params, etc. &lt;a href=&quot;https://github.com/tensorflow/tensorflow/tree/master/tensorflow/core/profiler/g3doc/options.md&quot;&gt;https://github.com/tensorflow/tensorflow/tree/master/tensorflow/core/profiler/g3doc/options.md&lt;/a&gt;</source>
          <target state="translated">Supported attribute includes micros, bytes, occurrence, params, etc. &lt;a href=&quot;https://github.com/tensorflow/tensorflow/tree/master/tensorflow/core/profiler/g3doc/options.md&quot;&gt;https://github.com/tensorflow/tensorflow/tree/master/tensorflow/core/profiler/g3doc/options.md&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8ce9158bd839abeef632632d7ada1c1f6e0c0ccf" translate="yes" xml:space="preserve">
          <source>Supported attribute includes micros, bytes, occurrence, params, etc. https://github.com/tensorflow/tensorflow/tree/master/tensorflow/core/profiler/g3doc/options.md</source>
          <target state="translated">サポートされている属性には、マイクロ数、バイト数、発生数、パラメータなどがあります。 https://github.com/tensorflow/tensorflow/tree/master/tensorflow/core/profiler/g3doc/options.md</target>
        </trans-unit>
        <trans-unit id="385210a6e3ca5b33d8993c5d65a5be60d214884c" translate="yes" xml:space="preserve">
          <source>Supported image formats: jpeg, png, bmp, gif. Animated gifs are truncated to the first frame.</source>
          <target state="translated">サポートされている画像フォーマット。JPEG、PNG、BMP、GIF。アニメーションGIFは最初のフレームに切り捨てられます。</target>
        </trans-unit>
        <trans-unit id="9794d24ec85271049a86498f820c37d015564882" translate="yes" xml:space="preserve">
          <source>Supported types</source>
          <target state="translated">サポートされているタイプ</target>
        </trans-unit>
        <trans-unit id="be8759e614c84bf4aa1ab490c6a68e3e469c7bdd" translate="yes" xml:space="preserve">
          <source>Supported types:</source>
          <target state="translated">サポートされているタイプ。</target>
        </trans-unit>
        <trans-unit id="ebc61f82b2a83286b06fcc3b771ac98f59a64fd3" translate="yes" xml:space="preserve">
          <source>Supported values: 2 (CURT_HEALTH): Output a float32/64 tensor of shape [2]. The 1st element is the tensor_id, if provided, and -1 otherwise. The 2nd element is a bit which is set to 1 if the input tensor has an infinity or nan value, or zero otherwise.</source>
          <target state="translated">サポートされる値:2(CURT_HEALTH)。float32/64の形状のテンソル[2]を出力する。1番目の要素はtensor_id(提供されていれば)、そうでなければ-1である。2番目の要素はビットで、入力テンソルが無限大またはナノ値の場合は1、そうでない場合は0に設定される。</target>
        </trans-unit>
        <trans-unit id="f61dfa31d4cb3ff17788ec5b8346532ec118b4e9" translate="yes" xml:space="preserve">
          <source>Supports all values that can be represented as a string, including 1D iterables such as &lt;code&gt;np.ndarray&lt;/code&gt;.</source>
          <target state="translated">Supports all values that can be represented as a string, including 1D iterables such as &lt;code&gt;np.ndarray&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="abd5978641e98b805d5cc09691807cae3f3387cc" translate="yes" xml:space="preserve">
          <source>Supports all values that can be represented as a string, including 1D iterables such as np.ndarray.</source>
          <target state="translated">np.ndarrayのような1次元イテレーションを含む、文字列として表現できるすべての値をサポートします。</target>
        </trans-unit>
        <trans-unit id="104d684cf03eff52e2dbd8ee731bf94a0c3b8a59" translate="yes" xml:space="preserve">
          <source>Supports custom &lt;code&gt;loss_fn&lt;/code&gt;. &lt;code&gt;loss_fn&lt;/code&gt; takes &lt;code&gt;(labels, logits)&lt;/code&gt; or &lt;code&gt;(labels, logits, features, loss_reduction)&lt;/code&gt; as arguments and returns unreduced loss with shape &lt;code&gt;[D0, D1, ... DN, label_dimension]&lt;/code&gt;.</source>
          <target state="translated">カスタム &lt;code&gt;loss_fn&lt;/code&gt; をサポートします。 &lt;code&gt;loss_fn&lt;/code&gt; は、引数として &lt;code&gt;(labels, logits)&lt;/code&gt; または &lt;code&gt;(labels, logits, features, loss_reduction)&lt;/code&gt; を取り、形状 &lt;code&gt;[D0, D1, ... DN, label_dimension]&lt;/code&gt; 還元されていない損失を返します。</target>
        </trans-unit>
        <trans-unit id="a316cf92878313bf869404b90ceec201fde29a87" translate="yes" xml:space="preserve">
          <source>Supports loading into partitioned variables, which are represented as &lt;code&gt;'&amp;lt;variable&amp;gt;/part_&amp;lt;part #&amp;gt;'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;'&amp;lt;variable&amp;gt;/part_&amp;lt;part #&amp;gt;'&lt;/code&gt; として表されるパーティション変数へのロードをサポートします。</target>
        </trans-unit>
        <trans-unit id="e964d3014915281d079adadf918032ad21ee9376" translate="yes" xml:space="preserve">
          <source>Supports many numeric types and boolean.</source>
          <target state="translated">多くの数値型とブール値をサポートしています。</target>
        </trans-unit>
        <trans-unit id="f7d38c23447a54dd0a8a5a8f23ba246013d5bca2" translate="yes" xml:space="preserve">
          <source>Supports multidimensional indexing and slicing, with one restriction: indexing into a ragged inner dimension is not allowed. This case is problematic because the indicated value may exist in some rows but not others. In such cases, it's not obvious whether we should (1) report an IndexError; (2) use a default value; or (3) skip that value and return a tensor with fewer rows than we started with. Following the guiding principles of Python (&quot;In the face of ambiguity, refuse the temptation to guess&quot;), we simply disallow this operation.</source>
          <target state="translated">多次元インデックス作成とスライスをサポートしますが、1つの制限があります:ボロボロの内部次元へのインデックス作成は許可されていません。この場合、指定された値がいくつかの行には存在しても、他の行には存在しないことがあるため、問題があります。このような場合、(1)IndexErrorを報告するか、(2)デフォルト値を使用するか、(3)その値をスキップして、最初の行数よりも少ない行数のテンソルを返すかは明らかではありません。Pythonの指導原則(&quot;In the face of ambiguity,refuse the temptation to guess&quot;)に従って、この操作を単純に無効にします。</target>
        </trans-unit>
        <trans-unit id="465d7f75658c4dd0bcc894320c0de2a6164e5f1f" translate="yes" xml:space="preserve">
          <source>Suppose &lt;code&gt;H.shape = [B1,...,Bb, N0, N1, N2]&lt;/code&gt;, we say that &lt;code&gt;H&lt;/code&gt; is a Hermitian spectrum if, with &lt;code&gt;%&lt;/code&gt; meaning modulus division,</source>
          <target state="translated">仮定 &lt;code&gt;H.shape = [B1,...,Bb, N0, N1, N2]&lt;/code&gt; 、我々はと言う &lt;code&gt;H&lt;/code&gt; があればと、エルミートスペクトルである &lt;code&gt;%&lt;/code&gt; は、モジュラス部門を意味します</target>
        </trans-unit>
        <trans-unit id="f72a981b2d0bc9ee25053f2c6bb8efd804f77034" translate="yes" xml:space="preserve">
          <source>Suppose &lt;code&gt;H.shape = [B1,...,Bb, N0, N1]&lt;/code&gt;, we say that &lt;code&gt;H&lt;/code&gt; is a Hermitian spectrum if, with &lt;code&gt;%&lt;/code&gt; indicating modulus division,</source>
          <target state="translated">仮定 &lt;code&gt;H.shape = [B1,...,Bb, N0, N1]&lt;/code&gt; 、我々は、と言う &lt;code&gt;H&lt;/code&gt; を用いて、場合エルミートスペクトル &lt;code&gt;%&lt;/code&gt; 、モジュラス分割を示します</target>
        </trans-unit>
        <trans-unit id="69e9539be0d74edf27965ae7808985529de3daca" translate="yes" xml:space="preserve">
          <source>Suppose &lt;code&gt;H.shape = [B1,...,Bb, N]&lt;/code&gt;. We say that &lt;code&gt;H&lt;/code&gt; is a Hermitian spectrum if, with &lt;code&gt;%&lt;/code&gt; meaning modulus division,</source>
          <target state="translated">&lt;code&gt;H.shape = [B1,...,Bb, N]&lt;/code&gt; と仮定します。私たちは、と言う &lt;code&gt;H&lt;/code&gt; がして、場合エルミートスペクトルである &lt;code&gt;%&lt;/code&gt; 、モジュラス部門を意味します</target>
        </trans-unit>
        <trans-unit id="3f9b5e76df5dccbcc6983619f69ec6626d9745ba" translate="yes" xml:space="preserve">
          <source>Suppose &lt;code&gt;operator&lt;/code&gt; is a &lt;code&gt;LinearOperatorBlockLowerTriangular&lt;/code&gt; consisting of &lt;code&gt;D&lt;/code&gt; row-partitions and &lt;code&gt;D&lt;/code&gt; column-partitions, such that the total number of operators is &lt;code&gt;N = D * (D + 1) // 2&lt;/code&gt;.</source>
          <target state="translated">Suppose &lt;code&gt;operator&lt;/code&gt; is a &lt;code&gt;LinearOperatorBlockLowerTriangular&lt;/code&gt; consisting of &lt;code&gt;D&lt;/code&gt; row-partitions and &lt;code&gt;D&lt;/code&gt; column-partitions, such that the total number of operators is &lt;code&gt;N = D * (D + 1) // 2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9c13ea8e213e123c5d46aca6ff82c0ff6d54078b" translate="yes" xml:space="preserve">
          <source>Suppose &lt;code&gt;operator&lt;/code&gt; is a &lt;code&gt;LinearOperatorCirculant&lt;/code&gt; of shape &lt;code&gt;[N, N]&lt;/code&gt;, and &lt;code&gt;x.shape = [N, R]&lt;/code&gt;. Then</source>
          <target state="translated">仮定する &lt;code&gt;operator&lt;/code&gt; ある &lt;code&gt;LinearOperatorCirculant&lt;/code&gt; 形状の &lt;code&gt;[N, N]&lt;/code&gt; 、及び &lt;code&gt;x.shape = [N, R]&lt;/code&gt; 。その後</target>
        </trans-unit>
        <trans-unit id="c7ae0d4dbc265f3305695b532a6acdf5985ab031" translate="yes" xml:space="preserve">
          <source>Suppose &lt;code&gt;operator&lt;/code&gt; is a &lt;code&gt;LinearOperatorDiag&lt;/code&gt; of shape &lt;code&gt;[N, N]&lt;/code&gt;, and &lt;code&gt;x.shape = [N, R]&lt;/code&gt;. Then</source>
          <target state="translated">仮定する &lt;code&gt;operator&lt;/code&gt; ある &lt;code&gt;LinearOperatorDiag&lt;/code&gt; 形状の &lt;code&gt;[N, N]&lt;/code&gt; 、及び &lt;code&gt;x.shape = [N, R]&lt;/code&gt; 。その後</target>
        </trans-unit>
        <trans-unit id="0ba1a907b3f27c40ff85272978f14bd8fe9cc06b" translate="yes" xml:space="preserve">
          <source>Suppose &lt;code&gt;operator&lt;/code&gt; is a &lt;code&gt;LinearOperatorLowRankUpdate&lt;/code&gt; of shape &lt;code&gt;[M, N]&lt;/code&gt;, made from a rank &lt;code&gt;K&lt;/code&gt; update of &lt;code&gt;base_operator&lt;/code&gt; which performs &lt;code&gt;.matmul(x)&lt;/code&gt; on &lt;code&gt;x&lt;/code&gt; having &lt;code&gt;x.shape = [N, R]&lt;/code&gt; with &lt;code&gt;O(L_matmul*N*R)&lt;/code&gt; complexity (and similarly for &lt;code&gt;solve&lt;/code&gt;, &lt;code&gt;determinant&lt;/code&gt;. Then, if &lt;code&gt;x.shape = [N, R]&lt;/code&gt;,</source>
          <target state="translated">仮定する &lt;code&gt;operator&lt;/code&gt; ある &lt;code&gt;LinearOperatorLowRankUpdate&lt;/code&gt; 形状の &lt;code&gt;[M, N]&lt;/code&gt; ランクから作られた、 &lt;code&gt;K&lt;/code&gt; 用の更新 &lt;code&gt;base_operator&lt;/code&gt; 行う &lt;code&gt;.matmul(x)&lt;/code&gt; 上 &lt;code&gt;x&lt;/code&gt; を有する &lt;code&gt;x.shape = [N, R]&lt;/code&gt; と &lt;code&gt;O(L_matmul*N*R)&lt;/code&gt; の複雑さを（そして、同様に &lt;code&gt;solve&lt;/code&gt; 、 &lt;code&gt;determinant&lt;/code&gt; の場合。次に、 &lt;code&gt;x.shape = [N, R]&lt;/code&gt; 場合、</target>
        </trans-unit>
        <trans-unit id="0c77e9c8aaab3edc5678c3e6e549ae40d1713585" translate="yes" xml:space="preserve">
          <source>Suppose &lt;code&gt;operator&lt;/code&gt; is a &lt;code&gt;LinearOperatorLowerTriangular&lt;/code&gt; of shape &lt;code&gt;[N, N]&lt;/code&gt;, and &lt;code&gt;x.shape = [N, R]&lt;/code&gt;. Then</source>
          <target state="translated">仮定する &lt;code&gt;operator&lt;/code&gt; ある &lt;code&gt;LinearOperatorLowerTriangular&lt;/code&gt; 形状の &lt;code&gt;[N, N]&lt;/code&gt; 、及び &lt;code&gt;x.shape = [N, R]&lt;/code&gt; 。その後</target>
        </trans-unit>
        <trans-unit id="b2084687b2895669a5e72e33943c08a5a3724177" translate="yes" xml:space="preserve">
          <source>Suppose &lt;code&gt;operator&lt;/code&gt; is a &lt;code&gt;LinearOperatorTridiag&lt;/code&gt; of shape &lt;code&gt;[N, N]&lt;/code&gt;, and &lt;code&gt;x.shape = [N, R]&lt;/code&gt;. Then</source>
          <target state="translated">Suppose &lt;code&gt;operator&lt;/code&gt; is a &lt;code&gt;LinearOperatorTridiag&lt;/code&gt; of shape &lt;code&gt;[N, N]&lt;/code&gt; , and &lt;code&gt;x.shape = [N, R]&lt;/code&gt; . Then</target>
        </trans-unit>
        <trans-unit id="23ed1b4df71c9959792073ca5b67ae2e12e27635" translate="yes" xml:space="preserve">
          <source>Suppose head1.logits_dimension = 2 and head2.logits_dimension = 3. After</source>
          <target state="translated">head1.logits_dimension=2、head2.logits_dimension=3とします。その後</target>
        </trans-unit>
        <trans-unit id="1ed5b73f01ec764b2e1451778b0c4aa2a7352d61" translate="yes" xml:space="preserve">
          <source>Suppose that</source>
          <target state="translated">とすると</target>
        </trans-unit>
        <trans-unit id="5c269bc606f19d8edaa319f84a6c255fb252f362" translate="yes" xml:space="preserve">
          <source>Suppose that &lt;code&gt;elems&lt;/code&gt; is unpacked into &lt;code&gt;values&lt;/code&gt;, a list of tensors. The shape of the result tensor is &lt;code&gt;[len(values)] + fn(initializer, values[0]).shape&lt;/code&gt;. If reverse=True, it's fn(initializer, values[-1]).shape.</source>
          <target state="translated">その仮定 &lt;code&gt;elems&lt;/code&gt; に展開され &lt;code&gt;values&lt;/code&gt; 、テンソルのリストを。結果テンソルの形状は &lt;code&gt;[len(values)] + fn(initializer, values[0]).shape&lt;/code&gt; です。reverse = Trueの場合は、fn（initializer、values [-1]）。shapeです。</target>
        </trans-unit>
        <trans-unit id="d3c35f6ed89e8be18a5dda61c0fefcaae20da780" translate="yes" xml:space="preserve">
          <source>Suppose that &lt;code&gt;elems&lt;/code&gt; is unpacked into &lt;code&gt;values&lt;/code&gt;, a list of tensors. The shape of the result tensor is &lt;code&gt;[values.shape[0]] + fn(values[0]).shape&lt;/code&gt;.</source>
          <target state="translated">その仮定 &lt;code&gt;elems&lt;/code&gt; に展開され &lt;code&gt;values&lt;/code&gt; 、テンソルのリストを。結果テンソルの形状は &lt;code&gt;[values.shape[0]] + fn(values[0]).shape&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="dffca82b48f3566d75cc894aa925b53a25bf73ca" translate="yes" xml:space="preserve">
          <source>Suppose that &lt;code&gt;elems&lt;/code&gt; is unpacked into &lt;code&gt;values&lt;/code&gt;, a list of tensors. The shape of the result tensor is &lt;code&gt;fn(initializer, values[0]).shape&lt;/code&gt;.</source>
          <target state="translated">その仮定 &lt;code&gt;elems&lt;/code&gt; に展開され &lt;code&gt;values&lt;/code&gt; 、テンソルのリストを。結果テンソルの形状は &lt;code&gt;fn(initializer, values[0]).shape&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="3bdc81326d20683103cdcdb7d7d719aec67b18bc" translate="yes" xml:space="preserve">
          <source>Suppose that &lt;code&gt;elems&lt;/code&gt; is unpacked into &lt;code&gt;values&lt;/code&gt;, a list of tensors. The shape of the result tensor is fn(initializer, values[0]).shape`.</source>
          <target state="translated">その仮定 &lt;code&gt;elems&lt;/code&gt; に展開され &lt;code&gt;values&lt;/code&gt; 、テンソルのリストを。結果テンソルの形状はfn（initializer、values [0]）。shape`です。</target>
        </trans-unit>
        <trans-unit id="f480af4470b536307bbf09765cdc8e2696cc548a" translate="yes" xml:space="preserve">
          <source>Survival function.</source>
          <target state="translated">サバイバル機能。</target>
        </trans-unit>
        <trans-unit id="0de5ff9a96be0872c4a95318ce78eb85ff4766da" translate="yes" xml:space="preserve">
          <source>Svd</source>
          <target state="translated">Svd</target>
        </trans-unit>
        <trans-unit id="da92d85a6fc13c9b04db86132c713c6ff78d5eec" translate="yes" xml:space="preserve">
          <source>Swish activation function which returns &lt;code&gt;x*sigmoid(x)&lt;/code&gt;. It is a smooth, non-monotonic function that consistently matches or outperforms ReLU on deep networks, it is unbounded above and bounded below.</source>
          <target state="translated">Swish activation function which returns &lt;code&gt;x*sigmoid(x)&lt;/code&gt; . It is a smooth, non-monotonic function that consistently matches or outperforms ReLU on deep networks, it is unbounded above and bounded below.</target>
        </trans-unit>
        <trans-unit id="7a4332dc29f19a6318c112c9802095accf9482bc" translate="yes" xml:space="preserve">
          <source>Swish activation function, &lt;code&gt;swish(x) = x * sigmoid(x)&lt;/code&gt;.</source>
          <target state="translated">Swish activation function, &lt;code&gt;swish(x) = x * sigmoid(x)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3e44c920427e845df4958295eb8c3045b55fcfd5" translate="yes" xml:space="preserve">
          <source>Switch</source>
          <target state="translated">Switch</target>
        </trans-unit>
        <trans-unit id="3226a9be6189190c548f628801bd70aeb6bac060" translate="yes" xml:space="preserve">
          <source>Switch to cross-replica mode by calling &lt;code&gt;tf.distribute.get_replica_context().merge_call()&lt;/code&gt; with the updates and variables as arguments.</source>
          <target state="translated">引数として更新と変数を指定して &lt;code&gt;tf.distribute.get_replica_context().merge_call()&lt;/code&gt; を呼び出し、クロスレプリカモードに切り替えます。</target>
        </trans-unit>
        <trans-unit id="c82b9c388b0f25a72fdba537900d4ee1afe829a0" translate="yes" xml:space="preserve">
          <source>Switches between two operations depending on a scalar value.</source>
          <target state="translated">スカラー値に応じて2つの操作を切り替えます。</target>
        </trans-unit>
        <trans-unit id="4bd6d6747309915056dbba0e2193c97595c133f2" translate="yes" xml:space="preserve">
          <source>Symbolic tensors are allowed to pass through.</source>
          <target state="translated">シンボリックテンソルの通過が許可されています。</target>
        </trans-unit>
        <trans-unit id="030a01f5f589b63fb470abdc96d1262d3ad7cea8" translate="yes" xml:space="preserve">
          <source>SymbolicGradient</source>
          <target state="translated">SymbolicGradient</target>
        </trans-unit>
        <trans-unit id="0fb1fd52c55e655e07722932e23d7213a1f7639b" translate="yes" xml:space="preserve">
          <source>Synchronous training across multiple replicas on one machine.</source>
          <target state="translated">1台のマシン上で複数のレプリカにまたがる同期トレーニング。</target>
        </trans-unit>
        <trans-unit id="ed4aff47c3be607749bd2e1d76c1e799b5c23200" translate="yes" xml:space="preserve">
          <source>Synchronous training in TPU donuts or Pods.</source>
          <target state="translated">TPUドーナツやポッドでの同期訓練。</target>
        </trans-unit>
        <trans-unit id="08c3d58cad53f10c3d5bd02aff3f3ba1a7ff0e69" translate="yes" xml:space="preserve">
          <source>Synchronous training on TPUs and TPU Pods.</source>
          <target state="translated">TPUとTPUポッドの同期トレーニング。</target>
        </trans-unit>
        <trans-unit id="b9cb28847740ddfa22df77ecf9af53c7bcc458c9" translate="yes" xml:space="preserve">
          <source>System configuration library.</source>
          <target state="translated">システム構成ライブラリ。</target>
        </trans-unit>
        <trans-unit id="96dfaad4f747857beb41d1e85f4c6a845c40559b" translate="yes" xml:space="preserve">
          <source>T-shirt/top</source>
          <target state="translated">T-shirt/top</target>
        </trans-unit>
        <trans-unit id="c3c9fd8a607c0fc8d5f20ab08a585b5a769813a4" translate="yes" xml:space="preserve">
          <source>TFDecorator captures and exposes the wrapped target, and provides details about the current decorator.</source>
          <target state="translated">TFDecorator は、ラップされたターゲットをキャプチャして公開し、現在のデコレータの詳細を提供します。</target>
        </trans-unit>
        <trans-unit id="b0ae8b7e5c1a9027f31ac3b8b9a304ad1f03ee67" translate="yes" xml:space="preserve">
          <source>TFLiteConverter class.</source>
          <target state="translated">TFLiteConverterクラスです。</target>
        </trans-unit>
        <trans-unit id="40c2a70a8ac9081500125d800973c1f2856d001e" translate="yes" xml:space="preserve">
          <source>TFLiteConverter object.</source>
          <target state="translated">TFLiteConverterオブジェクトです。</target>
        </trans-unit>
        <trans-unit id="5a3f9ca39eb5977717f75ea98c14ebd341cb7b0c" translate="yes" xml:space="preserve">
          <source>TFRecord and tf.Example</source>
          <target state="translated">TFRecord と tf.Example</target>
        </trans-unit>
        <trans-unit id="c164b336cc47baa6a15ddd49c63091d7da6180d8" translate="yes" xml:space="preserve">
          <source>TFRecordDataset</source>
          <target state="translated">TFRecordDataset</target>
        </trans-unit>
        <trans-unit id="8df4b52fbc8864648ac860405c6438c112669392" translate="yes" xml:space="preserve">
          <source>TFRecordReader</source>
          <target state="translated">TFRecordReader</target>
        </trans-unit>
        <trans-unit id="17f974c4f4299c7c4142cb4b6284dff42f4a579e" translate="yes" xml:space="preserve">
          <source>TFRecordReaderV2</source>
          <target state="translated">TFRecordReaderV2</target>
        </trans-unit>
        <trans-unit id="32d34981bbb9299daf0163a123badc9ab99428e3" translate="yes" xml:space="preserve">
          <source>TFRecords is a binary format which is optimized for high throughput data retrieval, generally in conjunction with &lt;a href=&quot;../data&quot;&gt;&lt;code&gt;tf.data&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;TFRecordWriter&lt;/code&gt; is used to write serialized examples to a file for later consumption. The key steps are:</source>
          <target state="translated">TFRecords is a binary format which is optimized for high throughput data retrieval, generally in conjunction with &lt;a href=&quot;../data&quot;&gt; &lt;code&gt;tf.data&lt;/code&gt; &lt;/a&gt;. &lt;code&gt;TFRecordWriter&lt;/code&gt; is used to write serialized examples to a file for later consumption. The key steps are:</target>
        </trans-unit>
        <trans-unit id="00fd1de249e5cb7297b059142d08b24b2185a8f1" translate="yes" xml:space="preserve">
          <source>TFRecords tutorial</source>
          <target state="translated">TFRecords チュートリアル</target>
        </trans-unit>
        <trans-unit id="f2a1cfdc5a677069b65778d10bf6ba1ec74141b1" translate="yes" xml:space="preserve">
          <source>THIS CLASS IS DEPRECATED. Training with HDF5Matrix may not be optimized for performance, and might not work with every distribution strategy.</source>
          <target state="translated">このクラスは非推奨です。HDF5Matrixを使ったトレーニングはパフォーマンスのために最適化されていない可能性があり、すべてのディストリビューション戦略では動作しない可能性があります。</target>
        </trans-unit>
        <trans-unit id="ea3b5253f8acd939a0fcfcfde0d4f81758ceb6ec" translate="yes" xml:space="preserve">
          <source>THIS FUNCTION IS EXPERIMENTAL. Keras layers/models are the recommended APIs for logit and model composition.</source>
          <target state="translated">この関数は経験的なものです。Kerasレイヤ/モデルは、ロジットとモデル構成のために推奨されるAPIです。</target>
        </trans-unit>
        <trans-unit id="6e68009384c2a3495a678e12d2ac69897187a9e4" translate="yes" xml:space="preserve">
          <source>TIP: V2 is recommended as it is more flexible (eg: batching, etc).</source>
          <target state="translated">ヒント:より柔軟性が高い(例:バッチ処理など)ため、V2をお勧めします。</target>
        </trans-unit>
        <trans-unit id="86c515aa235c35a6dd43d1bb6f6bd5b2174b6173" translate="yes" xml:space="preserve">
          <source>TODO(phawkins): consider adding support for broadcasting Tensors passed as inputs.</source>
          <target state="translated">TODO(phawkins):入力として渡されたテンソルのブロードキャストのサポートの追加を検討。</target>
        </trans-unit>
        <trans-unit id="0670d6d1899b8c7a6ede58b5b723e5aff4b026c8" translate="yes" xml:space="preserve">
          <source>TODO: add doc.</source>
          <target state="translated">TODO:docを追加しました。</target>
        </trans-unit>
        <trans-unit id="6907e140b23b35d38f6441293f654f8fc707a293" translate="yes" xml:space="preserve">
          <source>TPU distribution strategy implementation.</source>
          <target state="translated">TPUの流通戦略の実施。</target>
        </trans-unit>
        <trans-unit id="c2e6d3a312671dc52e2d71bde402cdc7f8d14f6d" translate="yes" xml:space="preserve">
          <source>TPU embeddings do not support arbitrary Tensorflow optimizers and the main optimizer you use for your model will be ignored for the embedding table variables. Instead TPU embeddigns support a fixed set of predefined optimizers that you can select from and set the parameters of. These include adagrad, adam and stochastic gradient descent. Each supported optimizer has a &lt;code&gt;Parameters&lt;/code&gt; class in the &lt;a href=&quot;../../../../../tpu/experimental&quot;&gt;&lt;code&gt;tf.tpu.experimental&lt;/code&gt;&lt;/a&gt; namespace.</source>
          <target state="translated">TPU埋め込みは任意のTensorflowオプティマイザーをサポートしていないため、モデルに使用するメインオプティマイザーは埋め込みテーブル変数では無視されます。代わりに、TPU embeddignsは、ユーザーが選択してパラメーターを設定できる、事前定義されたオプティマイザーの固定セットをサポートしています。これらには、アダグラード、アダム、確率勾配降下法が含まれます。サポートされている各オプティマイザは、&lt;a href=&quot;../../../../../tpu/experimental&quot;&gt; &lt;code&gt;tf.tpu.experimental&lt;/code&gt; &lt;/a&gt;名前空間に &lt;code&gt;Parameters&lt;/code&gt; クラスを持っています。</target>
        </trans-unit>
        <trans-unit id="c46f66d84964d9d9b6cca0e4bf0d96c3c3563722" translate="yes" xml:space="preserve">
          <source>TPU evaluation only works on a single host (one TPU worker) except BROADCAST mode.</source>
          <target state="translated">TPU の評価は、BROADCAST モードを除き、単一ホスト(1 台の TPU ワーカー)でのみ動作します。</target>
        </trans-unit>
        <trans-unit id="608813e35435b00f9557600b0760339a8be2fba8" translate="yes" xml:space="preserve">
          <source>TPU prediction only works on a single host (one TPU worker).</source>
          <target state="translated">TPU予測は、1台のホスト(1人のTPUワーカー)でしか動作しません。</target>
        </trans-unit>
        <trans-unit id="bea46edc5a09b34d108296e7caa64c56863439a0" translate="yes" xml:space="preserve">
          <source>TPU related configuration required by &lt;code&gt;TPUEstimator&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;TPUEstimator&lt;/code&gt; に必要なTPU関連の構成。</target>
        </trans-unit>
        <trans-unit id="15462f6b704e5cb2f8f24f59de3042ec97404e38" translate="yes" xml:space="preserve">
          <source>TPU version of &lt;a href=&quot;../../../../feature_column/embedding_column&quot;&gt;&lt;code&gt;tf.compat.v1.feature_column.embedding_column&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../../../feature_column/embedding_column&quot;&gt; &lt;code&gt;tf.compat.v1.feature_column.embedding_column&lt;/code&gt; の&lt;/a&gt; TPUバージョン。</target>
        </trans-unit>
        <trans-unit id="9d40306c82f3b12d754e570cc8b1cc658af2d7ec" translate="yes" xml:space="preserve">
          <source>TPU version of &lt;a href=&quot;../../feature_column/shared_embedding_columns&quot;&gt;&lt;code&gt;tf.compat.v1.feature_column.shared_embedding_columns&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../feature_column/shared_embedding_columns&quot;&gt; &lt;code&gt;tf.compat.v1.feature_column.shared_embedding_columns&lt;/code&gt; の&lt;/a&gt; TPUバージョン。</target>
        </trans-unit>
        <trans-unit id="87bcdd18e5c8f3b283a01e8df873660ee1d3e88c" translate="yes" xml:space="preserve">
          <source>TPUClusterResolver supports the following distinct environments: Google Compute Engine Google Kubernetes Engine Google internal</source>
          <target state="translated">TPUClusterResolverは、以下のような明確な環境に対応しています。Google Compute エンジン Google Kubernetes エンジン Google 内部</target>
        </trans-unit>
        <trans-unit id="aa01338f3d5c86c9fcdb705e00f36f804bb0cc34" translate="yes" xml:space="preserve">
          <source>TPUCompilationResult</source>
          <target state="translated">TPUCompilationResult</target>
        </trans-unit>
        <trans-unit id="1bf6991a8244be8f112b91697481461e3dbf1f90" translate="yes" xml:space="preserve">
          <source>TPUEmbeddingActivations</source>
          <target state="translated">TPUEmbeddingActivations</target>
        </trans-unit>
        <trans-unit id="3090232b8a50e355f64d4b6a9078737dd646c783" translate="yes" xml:space="preserve">
          <source>TPUEstimator also supports training on CPU and GPU. You don't need to define a separate &lt;a href=&quot;../../../../estimator/estimator&quot;&gt;&lt;code&gt;tf.estimator.Estimator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">TPUEstimatorは、CPUとGPUのトレーニングもサポートしています。別の&lt;a href=&quot;../../../../estimator/estimator&quot;&gt; &lt;code&gt;tf.estimator.Estimator&lt;/code&gt; &lt;/a&gt;を定義する必要はありません。</target>
        </trans-unit>
        <trans-unit id="2ddc9467e5f271b2c256312505abf3c2d4c6b0c7" translate="yes" xml:space="preserve">
          <source>TPUEstimator handles many of the details of running on TPU devices, such as replicating inputs and models for each core, and returning to host periodically to run hooks.</source>
          <target state="translated">TPUEstimatorは、入力やモデルをコアごとに複製したり、定期的にホストに戻ってフックを実行したりと、TPUデバイス上での実行の多くの詳細を処理します。</target>
        </trans-unit>
        <trans-unit id="b7e3ce08e3020395f3645372f9a127852462deaa" translate="yes" xml:space="preserve">
          <source>TPUEstimator transforms a global batch size in params to a per-shard batch size when calling the &lt;code&gt;input_fn&lt;/code&gt; and &lt;code&gt;model_fn&lt;/code&gt;. Users should specify global batch size in constructor, and then get the batch size for each shard in &lt;code&gt;input_fn&lt;/code&gt; and &lt;code&gt;model_fn&lt;/code&gt; by &lt;code&gt;params['batch_size']&lt;/code&gt;.</source>
          <target state="translated">TPUEstimatorは、 &lt;code&gt;input_fn&lt;/code&gt; および &lt;code&gt;model_fn&lt;/code&gt; を呼び出すときに、paramsのグローバルバッチサイズをシャードごとのバッチサイズに変換します。ユーザーはコンストラクターでグローバルバッチサイズを指定し、次に &lt;code&gt;params['batch_size']&lt;/code&gt; によって &lt;code&gt;input_fn&lt;/code&gt; および &lt;code&gt;model_fn&lt;/code&gt; で各シャードのバッチサイズを取得する必要があります。</target>
        </trans-unit>
        <trans-unit id="b79ea6bd91e106b020941541f8a693784aab7f0d" translate="yes" xml:space="preserve">
          <source>TPUOrdinalSelector</source>
          <target state="translated">TPUOrdinalSelector</target>
        </trans-unit>
        <trans-unit id="db23d6b228f4f269c406951ac6f48bb9618723ba" translate="yes" xml:space="preserve">
          <source>TPUPartitionedCall</source>
          <target state="translated">TPUPartitionedCall</target>
        </trans-unit>
        <trans-unit id="4ce14a2bc1df9e5fd9f3b0ba5666724aeb5292a5" translate="yes" xml:space="preserve">
          <source>TPUReplicateMetadata</source>
          <target state="translated">TPUReplicateMetadata</target>
        </trans-unit>
        <trans-unit id="01f8296c3cd8091ece253f444c565756100968ff" translate="yes" xml:space="preserve">
          <source>TPUReplicatedInput</source>
          <target state="translated">TPUReplicatedInput</target>
        </trans-unit>
        <trans-unit id="732e12e781f76421b82f1f4357afe8f9aa493c90" translate="yes" xml:space="preserve">
          <source>TPUReplicatedOutput</source>
          <target state="translated">TPUReplicatedOutput</target>
        </trans-unit>
        <trans-unit id="d1c1e452ecf33031ed0f22504870118a774db89c" translate="yes" xml:space="preserve">
          <source>TRAIN / EVAL / PREDICT ModeKeys.</source>
          <target state="translated">TRAIN/EVAL/PREDICT ModeKeys.</target>
        </trans-unit>
        <trans-unit id="61da3e3ab775849343a5d8c98a22be9479f3edbc" translate="yes" xml:space="preserve">
          <source>Table initializer that takes two tensors for keys and values respectively.</source>
          <target state="translated">キーと値にそれぞれ2つのテンソルを取るテーブルのイニシャライザ。</target>
        </trans-unit>
        <trans-unit id="39242b58e44e50c227c356940f2f4790b1a6c7ad" translate="yes" xml:space="preserve">
          <source>Table initializers from a text file.</source>
          <target state="translated">テキストファイルからのテーブルイニシャライザ</target>
        </trans-unit>
        <trans-unit id="e9a99855991e9fba416a14570cf1cb6a0187f661" translate="yes" xml:space="preserve">
          <source>Table initializers given &lt;code&gt;keys&lt;/code&gt; and &lt;code&gt;values&lt;/code&gt; tensors.</source>
          <target state="translated">&lt;code&gt;keys&lt;/code&gt; と &lt;code&gt;values&lt;/code&gt; テンソルを指定したテーブル初期化子。</target>
        </trans-unit>
        <trans-unit id="0ca4ea5ec4f9fcdb5ef0036d59d590c2c4ae6ff3" translate="yes" xml:space="preserve">
          <source>TakeDataset</source>
          <target state="translated">TakeDataset</target>
        </trans-unit>
        <trans-unit id="2eab7790b3d93d34755a8f59c3c006f04c2bbed3" translate="yes" xml:space="preserve">
          <source>TakeManySparseFromTensorsMap</source>
          <target state="translated">TakeManySparseFromTensorsMap</target>
        </trans-unit>
        <trans-unit id="b6eea7b2143fd69da3f4217bcdfc5542d526b61f" translate="yes" xml:space="preserve">
          <source>TakeWhileDataset</source>
          <target state="translated">TakeWhileDataset</target>
        </trans-unit>
        <trans-unit id="c8cdf739c22a4d4562a4121cb9924e968d8c70c9" translate="yes" xml:space="preserve">
          <source>Takes &lt;code&gt;T&lt;/code&gt; elements of shapes</source>
          <target state="translated">Takes &lt;code&gt;T&lt;/code&gt; elements of shapes</target>
        </trans-unit>
        <trans-unit id="1af97a71a1a73644d18d0f047160d91771a21862" translate="yes" xml:space="preserve">
          <source>Takes a &lt;strong&gt;doc&lt;/strong&gt; string and reformats it as help.</source>
          <target state="translated">取り&lt;strong&gt;ドキュメントの&lt;/strong&gt;文字列やヘルプなど再フォーマットして。</target>
        </trans-unit>
        <trans-unit id="b5507e3c183afb3feb1fdd594429bbf04fe50d0d" translate="yes" xml:space="preserve">
          <source>Takes data &amp;amp; label arrays, generates batches of augmented data.</source>
          <target state="translated">データとラベルの配列を取り、拡張データのバッチを生成します。</target>
        </trans-unit>
        <trans-unit id="dc5dd136fb3e20832ac83739b0d79852faeb82ca" translate="yes" xml:space="preserve">
          <source>Takes input and builds independent forward and backward RNNs. The input_size of forward and backward cell must match. The initial state for both directions is zero by default (but can be set optionally) and no intermediate states are ever returned -- the network is fully unrolled for the given (passed in) length(s) of the sequence(s) or completely unrolled if length(s) is not given.</source>
          <target state="translated">入力を受け取り,独立した前方および後方のRNNを構築します.前方セルと後方セルの input_size は一致しなければならない.両方向の初期状態はデフォルトでは0であり(オプションで設定可能),中間状態は返されません --ネットワークは,与えられた(渡された)シーケンスの長さ(複数可)で完全に展開されます.</target>
        </trans-unit>
        <trans-unit id="14bd6c407f104bb9dbcadb64b98d00494166da7f" translate="yes" xml:space="preserve">
          <source>Takes the dataframe and the path to a directory + generates batches.</source>
          <target state="translated">データフレームとディレクトリへのパスを取り、バッチを生成します。</target>
        </trans-unit>
        <trans-unit id="53df57e552ce83928403023542fdf87dfd9006ea" translate="yes" xml:space="preserve">
          <source>Takes the dataframe and the path to a directory and generates batches of augmented/normalized data.</source>
          <target state="translated">データフレームとディレクトリへのパスを取り、拡張/正規化されたデータのバッチを生成します。</target>
        </trans-unit>
        <trans-unit id="90f2cc362e7961321edf03101ab5c11b209fdfe1" translate="yes" xml:space="preserve">
          <source>Takes the given number of completed elements from a barrier.</source>
          <target state="translated">指定された数の完成した要素をバリアから取り出します。</target>
        </trans-unit>
        <trans-unit id="271a488ff4179dc414b9d598c0dc902bde38633e" translate="yes" xml:space="preserve">
          <source>Takes the path to a directory &amp;amp; generates batches of augmented data.</source>
          <target state="translated">ディレクトリへのパスを取得し、拡張データのバッチを生成します。</target>
        </trans-unit>
        <trans-unit id="6a4bc3c503c1251fa317296676237f5dd2f5cbff" translate="yes" xml:space="preserve">
          <source>Takes vectors reverse_index_map, shaped &lt;code&gt;[N]&lt;/code&gt;, and grad_values, shaped &lt;code&gt;[N_full]&lt;/code&gt;, where &lt;code&gt;N_full &amp;gt;= N&lt;/code&gt; and copies data into either &lt;code&gt;d_values&lt;/code&gt; or &lt;code&gt;d_default_value&lt;/code&gt;. Here &lt;code&gt;d_values&lt;/code&gt; is shaped &lt;code&gt;[N]&lt;/code&gt; and &lt;code&gt;d_default_value&lt;/code&gt; is a scalar.</source>
          <target state="translated">Takes vectors reverse_index_map, shaped &lt;code&gt;[N]&lt;/code&gt; , and grad_values, shaped &lt;code&gt;[N_full]&lt;/code&gt; , where &lt;code&gt;N_full &amp;gt;= N&lt;/code&gt; and copies data into either &lt;code&gt;d_values&lt;/code&gt; or &lt;code&gt;d_default_value&lt;/code&gt; . Here &lt;code&gt;d_values&lt;/code&gt; is shaped &lt;code&gt;[N]&lt;/code&gt; and &lt;code&gt;d_default_value&lt;/code&gt; is a scalar.</target>
        </trans-unit>
        <trans-unit id="133552ebfbcce8310f8920695422699d5256bac9" translate="yes" xml:space="preserve">
          <source>Tan</source>
          <target state="translated">Tan</target>
        </trans-unit>
        <trans-unit id="19bff9fbbbadd7b339e0ee0ae1715d62fea9cae0" translate="yes" xml:space="preserve">
          <source>Tanh</source>
          <target state="translated">Tanh</target>
        </trans-unit>
        <trans-unit id="14112156ac08b6a92c0a75374052fff645e2bcc6" translate="yes" xml:space="preserve">
          <source>TanhGrad</source>
          <target state="translated">TanhGrad</target>
        </trans-unit>
        <trans-unit id="28e1f2599eedcaa4777b838dbc9cdf0483db19ef" translate="yes" xml:space="preserve">
          <source>Target data type of real-number arrays in the output file. Must be &lt;code&gt;{tf.float32, tf.uint8}&lt;/code&gt;. If &lt;code&gt;optimzations&lt;/code&gt; are provided, this parameter is ignored. (default tf.float32)</source>
          <target state="translated">Target data type of real-number arrays in the output file. Must be &lt;code&gt;{tf.float32, tf.uint8}&lt;/code&gt; . If &lt;code&gt;optimzations&lt;/code&gt; are provided, this parameter is ignored. (default tf.float32)</target>
        </trans-unit>
        <trans-unit id="7b3ddfa024079f3b2e31a83be781ac4fc1b50fc2" translate="yes" xml:space="preserve">
          <source>Target data type of real-number input arrays. Allows for a different type for input arrays. If an integer type is provided and &lt;code&gt;optimizations&lt;/code&gt; are not used, &lt;code&gt;quantized_inputs_stats&lt;/code&gt; must be provided. If &lt;code&gt;inference_type&lt;/code&gt; is tf.uint8, signaling conversion to a fully quantized model from a quantization-aware trained input model, then &lt;code&gt;inference_input_type&lt;/code&gt; defaults to tf.uint8. In all other cases, &lt;code&gt;inference_input_type&lt;/code&gt; defaults to tf.float32. Must be &lt;code&gt;{tf.float32, tf.uint8, tf.int8}&lt;/code&gt;</source>
          <target state="translated">Target data type of real-number input arrays. Allows for a different type for input arrays. If an integer type is provided and &lt;code&gt;optimizations&lt;/code&gt; are not used, &lt;code&gt;quantized_inputs_stats&lt;/code&gt; must be provided. If &lt;code&gt;inference_type&lt;/code&gt; is tf.uint8, signaling conversion to a fully quantized model from a quantization-aware trained input model, then &lt;code&gt;inference_input_type&lt;/code&gt; defaults to tf.uint8. In all other cases, &lt;code&gt;inference_input_type&lt;/code&gt; defaults to tf.float32. Must be &lt;code&gt;{tf.float32, tf.uint8, tf.int8}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="61e25ecfb7a5f990edbebe475f179877ca81f12c" translate="yes" xml:space="preserve">
          <source>Target data type of real-number output arrays. Allows for a different type for output arrays. If &lt;code&gt;inference_type&lt;/code&gt; is tf.uint8, signaling conversion to a fully quantized model from a quantization-aware trained output model, then &lt;code&gt;inference_output_type&lt;/code&gt; defaults to tf.uint8. In all other cases, &lt;code&gt;inference_output_type&lt;/code&gt; must be tf.float32, an error will be thrown otherwise. Must be &lt;code&gt;{tf.float32, tf.uint8, tf.int8}&lt;/code&gt;</source>
          <target state="translated">Target data type of real-number output arrays. Allows for a different type for output arrays. If &lt;code&gt;inference_type&lt;/code&gt; is tf.uint8, signaling conversion to a fully quantized model from a quantization-aware trained output model, then &lt;code&gt;inference_output_type&lt;/code&gt; defaults to tf.uint8. In all other cases, &lt;code&gt;inference_output_type&lt;/code&gt; must be tf.float32, an error will be thrown otherwise. Must be &lt;code&gt;{tf.float32, tf.uint8, tf.int8}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9c40e6458ec2129b4b29993fc7728baa2c9343c7" translate="yes" xml:space="preserve">
          <source>Target data. Like the input data &lt;code&gt;x&lt;/code&gt;, it could be either Numpy array(s) or TensorFlow tensor(s). It should be consistent with &lt;code&gt;x&lt;/code&gt; (you cannot have Numpy inputs and tensor targets, or inversely).</source>
          <target state="translated">Target data. Like the input data &lt;code&gt;x&lt;/code&gt; , it could be either Numpy array(s) or TensorFlow tensor(s). It should be consistent with &lt;code&gt;x&lt;/code&gt; (you cannot have Numpy inputs and tensor targets, or inversely).</target>
        </trans-unit>
        <trans-unit id="d28edc72ae59652ee027fff110b801175d024129" translate="yes" xml:space="preserve">
          <source>Target data. Like the input data &lt;code&gt;x&lt;/code&gt;, it could be either Numpy array(s) or TensorFlow tensor(s). It should be consistent with &lt;code&gt;x&lt;/code&gt; (you cannot have Numpy inputs and tensor targets, or inversely). If &lt;code&gt;x&lt;/code&gt; is a dataset, generator or &lt;a href=&quot;../utils/sequence&quot;&gt;&lt;code&gt;keras.utils.Sequence&lt;/code&gt;&lt;/a&gt; instance, &lt;code&gt;y&lt;/code&gt; should not be specified (since targets will be obtained from the iterator/dataset).</source>
          <target state="translated">Target data. Like the input data &lt;code&gt;x&lt;/code&gt; , it could be either Numpy array(s) or TensorFlow tensor(s). It should be consistent with &lt;code&gt;x&lt;/code&gt; (you cannot have Numpy inputs and tensor targets, or inversely). If &lt;code&gt;x&lt;/code&gt; is a dataset, generator or &lt;a href=&quot;../utils/sequence&quot;&gt; &lt;code&gt;keras.utils.Sequence&lt;/code&gt; &lt;/a&gt; instance, &lt;code&gt;y&lt;/code&gt; should not be specified (since targets will be obtained from the iterator/dataset).</target>
        </trans-unit>
        <trans-unit id="e0a687e930239141f64fb62935e1b697471281cb" translate="yes" xml:space="preserve">
          <source>Target data. Like the input data &lt;code&gt;x&lt;/code&gt;, it could be either Numpy array(s) or TensorFlow tensor(s). It should be consistent with &lt;code&gt;x&lt;/code&gt; (you cannot have Numpy inputs and tensor targets, or inversely). If &lt;code&gt;x&lt;/code&gt; is a dataset, generator or &lt;a href=&quot;utils/sequence&quot;&gt;&lt;code&gt;keras.utils.Sequence&lt;/code&gt;&lt;/a&gt; instance, &lt;code&gt;y&lt;/code&gt; should not be specified (since targets will be obtained from the iterator/dataset).</source>
          <target state="translated">Target data. Like the input data &lt;code&gt;x&lt;/code&gt; , it could be either Numpy array(s) or TensorFlow tensor(s). It should be consistent with &lt;code&gt;x&lt;/code&gt; (you cannot have Numpy inputs and tensor targets, or inversely). If &lt;code&gt;x&lt;/code&gt; is a dataset, generator or &lt;a href=&quot;utils/sequence&quot;&gt; &lt;code&gt;keras.utils.Sequence&lt;/code&gt; &lt;/a&gt; instance, &lt;code&gt;y&lt;/code&gt; should not be specified (since targets will be obtained from the iterator/dataset).</target>
        </trans-unit>
        <trans-unit id="76f5e236c2023fb769ce08a2055a875a37783f94" translate="yes" xml:space="preserve">
          <source>Target data. Like the input data &lt;code&gt;x&lt;/code&gt;, it could be either Numpy array(s) or TensorFlow tensor(s). It should be consistent with &lt;code&gt;x&lt;/code&gt; (you cannot have Numpy inputs and tensor targets, or inversely). If &lt;code&gt;x&lt;/code&gt; is a dataset, generator, or &lt;a href=&quot;../utils/sequence&quot;&gt;&lt;code&gt;keras.utils.Sequence&lt;/code&gt;&lt;/a&gt; instance, &lt;code&gt;y&lt;/code&gt; should not be specified (since targets will be obtained from &lt;code&gt;x&lt;/code&gt;).</source>
          <target state="translated">Target data. Like the input data &lt;code&gt;x&lt;/code&gt; , it could be either Numpy array(s) or TensorFlow tensor(s). It should be consistent with &lt;code&gt;x&lt;/code&gt; (you cannot have Numpy inputs and tensor targets, or inversely). If &lt;code&gt;x&lt;/code&gt; is a dataset, generator, or &lt;a href=&quot;../utils/sequence&quot;&gt; &lt;code&gt;keras.utils.Sequence&lt;/code&gt; &lt;/a&gt; instance, &lt;code&gt;y&lt;/code&gt; should not be specified (since targets will be obtained from &lt;code&gt;x&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="124a73f76ea9d935dce26078b03f265f6dcafe1e" translate="yes" xml:space="preserve">
          <source>Target data. Like the input data &lt;code&gt;x&lt;/code&gt;, it could be either Numpy array(s) or TensorFlow tensor(s). It should be consistent with &lt;code&gt;x&lt;/code&gt; (you cannot have Numpy inputs and tensor targets, or inversely). If &lt;code&gt;x&lt;/code&gt; is a dataset, generator, or &lt;a href=&quot;utils/sequence&quot;&gt;&lt;code&gt;keras.utils.Sequence&lt;/code&gt;&lt;/a&gt; instance, &lt;code&gt;y&lt;/code&gt; should not be specified (since targets will be obtained from &lt;code&gt;x&lt;/code&gt;).</source>
          <target state="translated">Target data. Like the input data &lt;code&gt;x&lt;/code&gt; , it could be either Numpy array(s) or TensorFlow tensor(s). It should be consistent with &lt;code&gt;x&lt;/code&gt; (you cannot have Numpy inputs and tensor targets, or inversely). If &lt;code&gt;x&lt;/code&gt; is a dataset, generator, or &lt;a href=&quot;utils/sequence&quot;&gt; &lt;code&gt;keras.utils.Sequence&lt;/code&gt; &lt;/a&gt; instance, &lt;code&gt;y&lt;/code&gt; should not be specified (since targets will be obtained from &lt;code&gt;x&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="af628ed5985a62b6169c1b32fe469e858bb5a962" translate="yes" xml:space="preserve">
          <source>Target height.</source>
          <target state="translated">目標の高さ。</target>
        </trans-unit>
        <trans-unit id="adf589a76f0f5d9e2bb86e8b2dde9f5095147f53" translate="yes" xml:space="preserve">
          <source>Target shape tuple.</source>
          <target state="translated">対象となる形状のタプル。</target>
        </trans-unit>
        <trans-unit id="ebc13cd2359f05591f34d4dd0c6c20c3be19247c" translate="yes" xml:space="preserve">
          <source>Target shape. Tuple of integers, does not include the samples dimension (batch size).</source>
          <target state="translated">ターゲットの形状。整数のタプルで、サンプル寸法(バッチサイズ)は含まれません。</target>
        </trans-unit>
        <trans-unit id="7d1fb71a5db68820664bf8bef7b6c55070db1b7d" translate="yes" xml:space="preserve">
          <source>Target width.</source>
          <target state="translated">目標の幅。</target>
        </trans-unit>
        <trans-unit id="33a027db88feecfd3ab027d6a00fe2cae9c3cf55" translate="yes" xml:space="preserve">
          <source>Targets corresponding to timesteps in &lt;code&gt;data&lt;/code&gt;. It should have same length as &lt;code&gt;data&lt;/code&gt;. &lt;code&gt;targets[i]&lt;/code&gt; should be the target corresponding to the window that starts at index &lt;code&gt;i&lt;/code&gt; (see example 2 below). Pass None if you don't have target data (in this case the dataset will only yield the input data).</source>
          <target state="translated">Targets corresponding to timesteps in &lt;code&gt;data&lt;/code&gt; . It should have same length as &lt;code&gt;data&lt;/code&gt; . &lt;code&gt;targets[i]&lt;/code&gt; should be the target corresponding to the window that starts at index &lt;code&gt;i&lt;/code&gt; (see example 2 below). Pass None if you don't have target data (in this case the dataset will only yield the input data).</target>
        </trans-unit>
        <trans-unit id="1ca63275fee9de8e1de06948cce8c928cfa17e6c" translate="yes" xml:space="preserve">
          <source>Task: The task index.</source>
          <target state="translated">タスク。タスクのインデックス。</target>
        </trans-unit>
        <trans-unit id="0d5c8c8a1221df9d08630309c4e00e480ca26a66" translate="yes" xml:space="preserve">
          <source>Temporarily stops recording operations on this tape.</source>
          <target state="translated">このテープの録音動作を一時的に停止します。</target>
        </trans-unit>
        <trans-unit id="7587797028f9f977f3dcc7f5d6cb4ce9b3c6d940" translate="yes" xml:space="preserve">
          <source>TemporaryVariable</source>
          <target state="translated">TemporaryVariable</target>
        </trans-unit>
        <trans-unit id="d86199f8c5e160f3763b898f782dff935a2b3f9d" translate="yes" xml:space="preserve">
          <source>Tensor by which to scale the input.</source>
          <target state="translated">入力をスケーリングするためのテンソル.</target>
        </trans-unit>
        <trans-unit id="86c1923b9f8f2d8f31711cb222572e1b5d8374b8" translate="yes" xml:space="preserve">
          <source>Tensor containing indices as described above.</source>
          <target state="translated">前記のような指標を含むテンソル。</target>
        </trans-unit>
        <trans-unit id="d9587e11eb6cecf6bcb21eaf3f92dfb4eae1e92e" translate="yes" xml:space="preserve">
          <source>Tensor contraction according to Einstein summation convention.</source>
          <target state="translated">アインシュタインの和算規則に従ったテンソル収縮。</target>
        </trans-unit>
        <trans-unit id="b284c7bc2378fc04ec8bfcb09803127b9f601fb1" translate="yes" xml:space="preserve">
          <source>Tensor contraction of a and b along specified axes and outer product.</source>
          <target state="translated">指定された軸と外積に沿ったa,bのテンソル収縮。</target>
        </trans-unit>
        <trans-unit id="38618f2d27b4f14fefef4170aa6ae920945a40f0" translate="yes" xml:space="preserve">
          <source>Tensor contraction over specified indices and outer product.</source>
          <target state="translated">指定された指数と外積上のテンソル収縮。</target>
        </trans-unit>
        <trans-unit id="0eb7922b93e36f198944524d3ccbd887eb62554c" translate="yes" xml:space="preserve">
          <source>Tensor holding edge maps for each channel. Returns a tensor with shape [batch_size, h, w, d, 2] where the last two dimensions hold [[dy[0], dx[0]], [dy[1], dx[1]], ..., [dy[d-1], dx[d-1]]] calculated using the Sobel filter.</source>
          <target state="translated">各チャンネルのエッジマップを保持するテンソル.形状 [batch_size,h,w,d,2]のテンソルを返します。ここで、最後の2次元はソーベルフィルタを用いて計算された[[dy[0],dx[0]],[dy[1],dx[1]],...[dy[d-1],dx[d-1]]を保持します。</target>
        </trans-unit>
        <trans-unit id="818277be4897b82afcda9bea946567f0db418a0a" translate="yes" xml:space="preserve">
          <source>Tensor index of input to set. This value can be gotten from the 'index' field in get_input_details.</source>
          <target state="translated">設定する入力のテンソルインデックス。この値は get_input_details の 'index' フィールドから取得できます。</target>
        </trans-unit>
        <trans-unit id="a57be7e6ceb7fe22d5efa47f9863a75198cb096e" translate="yes" xml:space="preserve">
          <source>Tensor index of tensor to get. This value can be gotten from the 'index' field in get_output_details.</source>
          <target state="translated">取得するテンソルのインデックス。この値はget_output_detailsの'index'フィールドから取得できます。</target>
        </trans-unit>
        <trans-unit id="6364407ec916483f74f70506b2ee490b75f44a0b" translate="yes" xml:space="preserve">
          <source>Tensor index of tensor to set. This value can be gotten from the 'index' field in get_input_details.</source>
          <target state="translated">設定するテンソルのインデックス。この値は get_input_details の 'index' フィールドから取得できます。</target>
        </trans-unit>
        <trans-unit id="492485b81d5a760e9c8620ce8eb6ed8ee8dddf55" translate="yes" xml:space="preserve">
          <source>Tensor input.</source>
          <target state="translated">テンソル入力。</target>
        </trans-unit>
        <trans-unit id="998135bad24dda7870bc2f0601f12e030cb5ca03" translate="yes" xml:space="preserve">
          <source>Tensor instance (with Keras metadata included).</source>
          <target state="translated">テンソルインスタンス(Kerasのメタデータを含む)。</target>
        </trans-unit>
        <trans-unit id="2c4735941ed18003c573a2a235a9bd64c4812ee5" translate="yes" xml:space="preserve">
          <source>Tensor of one-hot true targets.</source>
          <target state="translated">ワンホットの真のターゲットのテンソル。</target>
        </trans-unit>
        <trans-unit id="cf7f8d5bfd1434b76a643f6e9b82cc447c32d744" translate="yes" xml:space="preserve">
          <source>Tensor of predicted targets.</source>
          <target state="translated">予測されたターゲットのテンソル。</target>
        </trans-unit>
        <trans-unit id="f0de66290e43e92c8ce19f341ae3cc5eeaf8fc7f" translate="yes" xml:space="preserve">
          <source>Tensor of rank &amp;gt; max(spatial_dims).</source>
          <target state="translated">ランク&amp;gt; max（spatial_dims）のテンソル。</target>
        </trans-unit>
        <trans-unit id="a8c99199dc012dfb8db3fd6e6e71228915c2c735" translate="yes" xml:space="preserve">
          <source>Tensor of rank N+2, of shape &lt;code&gt;[batch_size] + input_spatial_shape + [num_channels]&lt;/code&gt; if &lt;code&gt;data_format&lt;/code&gt; does not start with &quot;NC&quot; (default), or &lt;code&gt;[batch_size, num_channels] + input_spatial_shape&lt;/code&gt; if data_format starts with &quot;NC&quot;. Pooling happens over the spatial dimensions only.</source>
          <target state="translated">形状のランクN + 2のテンソル、 &lt;code&gt;[batch_size] + input_spatial_shape + [num_channels]&lt;/code&gt; 場合 &lt;code&gt;data_format&lt;/code&gt; &quot;NC&quot;（デフォルト）、または始まらない &lt;code&gt;[batch_size, num_channels] + input_spatial_shape&lt;/code&gt; DATA_FORMATは&quot;NC&quot;で始まる場合。プーリングは、空間次元でのみ発生します。</target>
        </trans-unit>
        <trans-unit id="0847d9d94779e4f5295b4ffd5a07abb92c173543" translate="yes" xml:space="preserve">
          <source>Tensor of rank N+2, of shape &lt;code&gt;[batch_size] + input_spatial_shape + [num_channels]&lt;/code&gt; if data_format does not start with &quot;NC&quot; (default), or &lt;code&gt;[batch_size, num_channels] + input_spatial_shape&lt;/code&gt; if data_format starts with &quot;NC&quot;. Pooling happens over the spatial dimensions only.</source>
          <target state="translated">ランクN + 2のテンソル、形状 &lt;code&gt;[batch_size] + input_spatial_shape + [num_channels]&lt;/code&gt; data_formatが「NC」（デフォルト）で始まらない場合）、または &lt;code&gt;[batch_size, num_channels] + input_spatial_shape&lt;/code&gt; data_formatが「NC」で始まる場合）。プーリングは、空間次元でのみ発生します。</target>
        </trans-unit>
        <trans-unit id="cd4eaaecc52921b6ace4791b28568b11625a63a9" translate="yes" xml:space="preserve">
          <source>Tensor of rank N+2, of shape [batch_size] + output_spatial_shape + [num_channels]</source>
          <target state="translated">ランクN+2のテンソルで,形状が [batch_size]+output_spatial_shape+[num_channels]のもの.</target>
        </trans-unit>
        <trans-unit id="cb76e00fc954d9b6160cc47c8ab840677d6dc502" translate="yes" xml:space="preserve">
          <source>Tensor of same shape and dtype of input &lt;code&gt;x&lt;/code&gt;, with tanh activation: &lt;code&gt;tanh(x) = sinh(x)/cosh(x) = ((exp(x) - exp(-x))/(exp(x) + exp(-x)))&lt;/code&gt;.</source>
          <target state="translated">同じ形状のテンソルと入力 &lt;code&gt;x&lt;/code&gt; の dtype、tanhアクティベーションあり： &lt;code&gt;tanh(x) = sinh(x)/cosh(x) = ((exp(x) - exp(-x))/(exp(x) + exp(-x)))&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="991a78eea129e011b2fea5bcfc4bbdfae5ae6d89" translate="yes" xml:space="preserve">
          <source>Tensor of shape [batch, max value in seq_length]</source>
          <target state="translated">形状テンソル [バッチ,seq_lengthの最大値]のテンソル</target>
        </trans-unit>
        <trans-unit id="0ab2c569a3910220cc74fa58f8e584ae7ad42554" translate="yes" xml:space="preserve">
          <source>Tensor of shape [batch, max_seq_length] with repeated labels collapsed and padded to max_seq_length, eg: &lt;code&gt;[[A, A, B, B, A], [A, B, C, D, E]] =&amp;gt; [[A, B, A, 0, 0], [A, B, C, D, E]]&lt;/code&gt;</source>
          <target state="translated">繰り返しラベルが折りたたまれてmax_seq_lengthにパディングされた形状[batch、max_seq_length]のテンソル。例： &lt;code&gt;[[A, A, B, B, A], [A, B, C, D, E]] =&amp;gt; [[A, B, A, 0, 0], [A, B, C, D, E]]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="09b6de4a94ad48d9d7a5400cd4c0b4565ee41127" translate="yes" xml:space="preserve">
          <source>Tensor of shape [batch], sequence length of each batch element.</source>
          <target state="translated">形状のテンソル[バッチ]、各バッチ要素のシーケンス長。</target>
        </trans-unit>
        <trans-unit id="4711a72d6803380500da6cc386c6dc5e9e15af3f" translate="yes" xml:space="preserve">
          <source>Tensor of temporal data of shape &lt;code&gt;(samples, time, ...)&lt;/code&gt; (at least 3D), or nested tensors, and each of which has shape &lt;code&gt;(samples, time, ...)&lt;/code&gt;.</source>
          <target state="translated">形状 &lt;code&gt;(samples, time, ...)&lt;/code&gt; （少なくとも3D）、またはネストされたテンソルの時間データのテンソル。それぞれが形状 &lt;code&gt;(samples, time, ...)&lt;/code&gt; を持ちます。</target>
        </trans-unit>
        <trans-unit id="983824590fcdbd70ba29193fec6dfcd4f06040b1" translate="yes" xml:space="preserve">
          <source>Tensor of true targets.</source>
          <target state="translated">真のターゲットのテンソル。</target>
        </trans-unit>
        <trans-unit id="4ece434f42d02c35bcd9f0f22d16c9ace70e63c1" translate="yes" xml:space="preserve">
          <source>Tensor of updates to apply to &lt;code&gt;ref&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ref&lt;/code&gt; に適用する更新のテンソル。</target>
        </trans-unit>
        <trans-unit id="609226623d6804277472c985802ca7f821557acf" translate="yes" xml:space="preserve">
          <source>Tensor or SparseTensor whose name, dtype and shape are used to build the TensorInfo. For SparseTensors, the names of the three constituent Tensors are used.</source>
          <target state="translated">名前、dtype、形状がTensorInfoを構築するために使用されるTensorまたはSparseTensor。SparseTensorsの場合は、3つの構成テンソルの名前が使用されます。</target>
        </trans-unit>
        <trans-unit id="8bdb1abfaca3ce302ff13a33877ebf1f3b320f8a" translate="yes" xml:space="preserve">
          <source>Tensor or list of tensors to consider constant with respect to any other variable.</source>
          <target state="translated">他の任意の変数に関して定数を考慮するテンソルまたはテンソルのリスト。</target>
        </trans-unit>
        <trans-unit id="98d8b25344eaca65f119ba9ee81b8fffc77d72cc" translate="yes" xml:space="preserve">
          <source>Tensor or list of tensors.</source>
          <target state="translated">テンソルまたはテンソルのリスト。</target>
        </trans-unit>
        <trans-unit id="0e2d5b0d328618d8eea7c94cdd41745f06de90ef" translate="yes" xml:space="preserve">
          <source>Tensor or variable to resize.</source>
          <target state="translated">リサイズするテンソルまたは変数。</target>
        </trans-unit>
        <trans-unit id="d552fc19b0fcf59ac1126f970eb95210e83e9df8" translate="yes" xml:space="preserve">
          <source>Tensor or variable.</source>
          <target state="translated">テンソルまたは変数。</target>
        </trans-unit>
        <trans-unit id="67448d108f3268b1d5cbe74737caa0c2837d5856" translate="yes" xml:space="preserve">
          <source>Tensor to be differentiated.</source>
          <target state="translated">テンソルで差別化を図る。</target>
        </trans-unit>
        <trans-unit id="021c1126aa37ca96534d60a019fc5c258c8b005f" translate="yes" xml:space="preserve">
          <source>Tensor to check.</source>
          <target state="translated">チェックするテンソル。</target>
        </trans-unit>
        <trans-unit id="b6d15ec006a5175d233a822b263e83647bcf3a5b" translate="yes" xml:space="preserve">
          <source>Tensor to print.</source>
          <target state="translated">印刷するテンソル。</target>
        </trans-unit>
        <trans-unit id="5316e6de8e219f39a9950fe8aa6af256d69ae69b" translate="yes" xml:space="preserve">
          <source>Tensor to reverse.</source>
          <target state="translated">逆転するテンソル。</target>
        </trans-unit>
        <trans-unit id="09f3440d4c47db7469d3f1a64881a5b0f52622c8" translate="yes" xml:space="preserve">
          <source>Tensor type.</source>
          <target state="translated">テンソル型。</target>
        </trans-unit>
        <trans-unit id="f229fd06f270a1472ee5fc7d946ec114e17083e8" translate="yes" xml:space="preserve">
          <source>Tensor with dtype &lt;code&gt;dtype&lt;/code&gt;.</source>
          <target state="translated">dtype &lt;code&gt;dtype&lt;/code&gt; を使用したテンソル。</target>
        </trans-unit>
        <trans-unit id="3a5173388b5a1f32c8e6079ea1f65f9ee01338a1" translate="yes" xml:space="preserve">
          <source>Tensor with exponential activation: &lt;code&gt;exp(x)&lt;/code&gt;.</source>
          <target state="translated">指数関数的活性化を伴うテンソル： &lt;code&gt;exp(x)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5b127d103d72c024e0c3a7e4c213e3125d5bed59" translate="yes" xml:space="preserve">
          <source>Tensor with exponential activation: &lt;code&gt;exp(x)&lt;/code&gt;. Tensor will be of same shape and dtype of input &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">指数活性化によるテンソル： &lt;code&gt;exp(x)&lt;/code&gt; 。テンソルは入力 &lt;code&gt;x&lt;/code&gt; と同じ形状とdtypeになります。</target>
        </trans-unit>
        <trans-unit id="c04a1202ada48999add7a1b4944833aee2cdad3e" translate="yes" xml:space="preserve">
          <source>Tensor with one scalar loss entry per sample.</source>
          <target state="translated">サンプルごとに1つのスカラー損失エントリを持つテンソル。</target>
        </trans-unit>
        <trans-unit id="a1bcf3e6714689670e8871ddc1423b42db7d58cf" translate="yes" xml:space="preserve">
          <source>Tensor with same type and shape as &lt;code&gt;initializer&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;initializer&lt;/code&gt; と同じタイプと形状のテンソル。</target>
        </trans-unit>
        <trans-unit id="7eb3ed83767298c300168c3e7bea9ba8df3bf9a3" translate="yes" xml:space="preserve">
          <source>Tensor with shape (samples,1) containing the CTC loss of each element.</source>
          <target state="translated">各要素のCTC損失を含む形状のテンソル(samples,1)。</target>
        </trans-unit>
        <trans-unit id="d92f799e565170398cbb66590e4f41df4601a016" translate="yes" xml:space="preserve">
          <source>Tensor with shape &lt;code&gt;(samples, state_size)&lt;/code&gt; (no time dimension), containing the initial values for the states used in the step function. In the case that state_size is in a nested shape, the shape of initial_states will also follow the nested structure.</source>
          <target state="translated">ステップ関数で使用される状態の初期値を含む、形状 &lt;code&gt;(samples, state_size)&lt;/code&gt; （時間次元なし）のテンソル。state_sizeがネストされた形状である場合、initial_statesの形状もネストされた構造に従います。</target>
        </trans-unit>
        <trans-unit id="f08cd9217a6e1bd951c428dea94df7840878f58b" translate="yes" xml:space="preserve">
          <source>Tensor with shape [batch_size, h, w, d].</source>
          <target state="translated">形状[batch_size,h,w,d]を持つテンソル。</target>
        </trans-unit>
        <trans-unit id="c6e0a539edac6a669824128887ac83f25a022bed" translate="yes" xml:space="preserve">
          <source>Tensor with the sigmoid activation: &lt;code&gt;(1.0 / (1.0 + exp(-x)))&lt;/code&gt;. Tensor will be of same shape and dtype of input &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">シグモイド活性化によるテンソル： &lt;code&gt;(1.0 / (1.0 + exp(-x)))&lt;/code&gt; 。テンソルは入力 &lt;code&gt;x&lt;/code&gt; と同じ形状とdtypeになります。</target>
        </trans-unit>
        <trans-unit id="f77273548e1cf39fd9f7bfafc8ed98142db862b5" translate="yes" xml:space="preserve">
          <source>Tensor with the sigmoid activation: &lt;code&gt;1 / (1 + exp(-x))&lt;/code&gt;.</source>
          <target state="translated">シグモイド活性化を伴うテンソル： &lt;code&gt;1 / (1 + exp(-x))&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bc8bb92a9662cf2dd1d1e4ba1be3c7c09fd20d4e" translate="yes" xml:space="preserve">
          <source>Tensor with which to center the input.</source>
          <target state="translated">入力をセンタリングするテンソル。</target>
        </trans-unit>
        <trans-unit id="86989d8c3ba1ef406d202928da376f95029f14db" translate="yes" xml:space="preserve">
          <source>Tensor, output of softmax transformation (all values are non-negative and sum to 1).</source>
          <target state="translated">テンソル,softmax変換の出力 (すべての値は非負で1に和).</target>
        </trans-unit>
        <trans-unit id="e89226b175152427d7c493c32cfe624d665fd212" translate="yes" xml:space="preserve">
          <source>Tensor. The concentration parameter of the gamma distribution. Must be broadcastable with &lt;code&gt;beta&lt;/code&gt;, and broadcastable with the rightmost dimensions of &lt;code&gt;shape&lt;/code&gt;.</source>
          <target state="translated">テンソル。ガンマ分布の集中度パラメータ。 &lt;code&gt;beta&lt;/code&gt; で放送可能であり、 &lt;code&gt;shape&lt;/code&gt; 右端の寸法で放送可能である必要があります。</target>
        </trans-unit>
        <trans-unit id="cf3a3996cfe39ab309b04a925c58f1a0c1fd2078" translate="yes" xml:space="preserve">
          <source>Tensor. The counts of the binomial distribution. Must be broadcastable with &lt;code&gt;probs&lt;/code&gt;, and broadcastable with the rightmost dimensions of &lt;code&gt;shape&lt;/code&gt;.</source>
          <target state="translated">テンソル。二項分布のカウント。プロブでブロードキャスト可能で &lt;code&gt;probs&lt;/code&gt; 、 &lt;code&gt;shape&lt;/code&gt; 右端の寸法でブロードキャスト可能である必要があります。</target>
        </trans-unit>
        <trans-unit id="6d9890b70264751a0b9b7af3b211cc518a429f2e" translate="yes" xml:space="preserve">
          <source>Tensor. The inverse scale parameter of the gamma distribution. Must be broadcastable with &lt;code&gt;alpha&lt;/code&gt; and broadcastable with the rightmost dimensions of &lt;code&gt;shape&lt;/code&gt;.</source>
          <target state="translated">テンソル。ガンマ分布の逆スケールパラメータ。 &lt;code&gt;alpha&lt;/code&gt; でブロードキャスト可能であり、 &lt;code&gt;shape&lt;/code&gt; 右端の寸法でブロードキャスト可能である必要があります。</target>
        </trans-unit>
        <trans-unit id="49f8b43c304674d66e5a1e831386d270bfa0b3f1" translate="yes" xml:space="preserve">
          <source>Tensor. The probability of success for the binomial distribution. Must be broadcastable with &lt;code&gt;counts&lt;/code&gt; and broadcastable with the rightmost dimensions of &lt;code&gt;shape&lt;/code&gt;.</source>
          <target state="translated">テンソル。二項分布の成功の確率。 &lt;code&gt;counts&lt;/code&gt; でブロードキャスト可能であり、 &lt;code&gt;shape&lt;/code&gt; 右端の寸法でブロードキャスト可能である必要があります。</target>
        </trans-unit>
        <trans-unit id="25ae453d24d0a062206d224fce0e81c1a28a35c6" translate="yes" xml:space="preserve">
          <source>Tensor. The rate parameter &quot;lambda&quot; of the Poisson distribution. Shape must match the rightmost dimensions of &lt;code&gt;shape&lt;/code&gt;.</source>
          <target state="translated">テンソル。ポアソン分布のレートパラメータ「ラムダ」。形状は、 &lt;code&gt;shape&lt;/code&gt; の右端の寸法と一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="e8cfa50554daa966a4bf3a8b045b195bf8bcb8b8" translate="yes" xml:space="preserve">
          <source>TensorArray</source>
          <target state="translated">TensorArray</target>
        </trans-unit>
        <trans-unit id="9cd06a33d5cee5fdef49b04732933adce7406e6f" translate="yes" xml:space="preserve">
          <source>TensorArray gradient calls use an accumulator TensorArray object. If multiple gradients are calculated and run in the same session, the multiple gradient nodes may accidentally flow through the same accumulator TensorArray. This double counts and generally breaks the TensorArray gradient flow.</source>
          <target state="translated">TensorArrayのグラデーション呼び出しは、アキュムレータTensorArrayオブジェクトを使用します。複数のグラデーションが計算され、同じセッションで実行されている場合、複数のグラデーションノードが誤って同じアキュムレータTensorArrayを流れることがあります。これは二重にカウントされ、一般的にはTensorArrayのグラデーションの流れを壊します。</target>
        </trans-unit>
        <trans-unit id="e48afa0d245404da5744de2c8636a3f5d39cfbe8" translate="yes" xml:space="preserve">
          <source>TensorArrayClose</source>
          <target state="translated">TensorArrayClose</target>
        </trans-unit>
        <trans-unit id="5b15d2b760f150def025acec46e2c27cfee1a194" translate="yes" xml:space="preserve">
          <source>TensorArrayCloseV2</source>
          <target state="translated">TensorArrayCloseV2</target>
        </trans-unit>
        <trans-unit id="387b419ce30390584889b7475ce8b3ec47529f97" translate="yes" xml:space="preserve">
          <source>TensorArrayCloseV3</source>
          <target state="translated">TensorArrayCloseV3</target>
        </trans-unit>
        <trans-unit id="5cce057beabc2f9e2d52bcda9a2dd1007f597b54" translate="yes" xml:space="preserve">
          <source>TensorArrayConcat</source>
          <target state="translated">TensorArrayConcat</target>
        </trans-unit>
        <trans-unit id="893a2396c6886b0e2e7fadb065fc85958c5d2fe4" translate="yes" xml:space="preserve">
          <source>TensorArrayConcatV2</source>
          <target state="translated">TensorArrayConcatV2</target>
        </trans-unit>
        <trans-unit id="5f0e37d984cb996c87c1353e9d3cac4f56059b81" translate="yes" xml:space="preserve">
          <source>TensorArrayConcatV3</source>
          <target state="translated">TensorArrayConcatV3</target>
        </trans-unit>
        <trans-unit id="cde7b38270db7c0b9c0de6e1377158f2b6c50c32" translate="yes" xml:space="preserve">
          <source>TensorArrayGather</source>
          <target state="translated">TensorArrayGather</target>
        </trans-unit>
        <trans-unit id="409fc6439c35830bdd7ea17d0dfd1caae4f1c2c4" translate="yes" xml:space="preserve">
          <source>TensorArrayGatherV2</source>
          <target state="translated">TensorArrayGatherV2</target>
        </trans-unit>
        <trans-unit id="241f549311eb30a2a857f1aea1975640214d8a4c" translate="yes" xml:space="preserve">
          <source>TensorArrayGatherV3</source>
          <target state="translated">TensorArrayGatherV3</target>
        </trans-unit>
        <trans-unit id="761aefb90e9078ba089d2df6236ad882da9a2007" translate="yes" xml:space="preserve">
          <source>TensorArrayGrad</source>
          <target state="translated">TensorArrayGrad</target>
        </trans-unit>
        <trans-unit id="5ebf400b5e1373140bb24f6c6a99ef1ef9a1a8da" translate="yes" xml:space="preserve">
          <source>TensorArrayGradV2</source>
          <target state="translated">TensorArrayGradV2</target>
        </trans-unit>
        <trans-unit id="9be136465c053c3355da5dbd580d5f0883b5b2fd" translate="yes" xml:space="preserve">
          <source>TensorArrayGradV3</source>
          <target state="translated">TensorArrayGradV3</target>
        </trans-unit>
        <trans-unit id="9535f959112da37dbc6ef9e2abbdbb12a36ed126" translate="yes" xml:space="preserve">
          <source>TensorArrayGradWithShape</source>
          <target state="translated">TensorArrayGradWithShape</target>
        </trans-unit>
        <trans-unit id="6276b88ec6e0ea2cd2cfae403278a4c8fdf2b484" translate="yes" xml:space="preserve">
          <source>TensorArrayPack</source>
          <target state="translated">TensorArrayPack</target>
        </trans-unit>
        <trans-unit id="7f889e1897d306a796c336146bd972099f47ac16" translate="yes" xml:space="preserve">
          <source>TensorArrayRead</source>
          <target state="translated">TensorArrayRead</target>
        </trans-unit>
        <trans-unit id="62a8c9a8b4ca92a765a78074917c520e04e45da3" translate="yes" xml:space="preserve">
          <source>TensorArrayReadV2</source>
          <target state="translated">TensorArrayReadV2</target>
        </trans-unit>
        <trans-unit id="58de94649511599b80f46597798043eb3def567b" translate="yes" xml:space="preserve">
          <source>TensorArrayReadV3</source>
          <target state="translated">TensorArrayReadV3</target>
        </trans-unit>
        <trans-unit id="a853dee84c85c35795c3288b8fb9db2742f9d103" translate="yes" xml:space="preserve">
          <source>TensorArrayScatter</source>
          <target state="translated">TensorArrayScatter</target>
        </trans-unit>
        <trans-unit id="d37714a7f87ed455f276af6ee5c15df7773dcd38" translate="yes" xml:space="preserve">
          <source>TensorArrayScatterV2</source>
          <target state="translated">TensorArrayScatterV2</target>
        </trans-unit>
        <trans-unit id="b8401ae9a5bbe12db1bf0c06678280217e910372" translate="yes" xml:space="preserve">
          <source>TensorArrayScatterV3</source>
          <target state="translated">TensorArrayScatterV3</target>
        </trans-unit>
        <trans-unit id="25d813ebee7cd1073b3ae4cce1ff827658177cf1" translate="yes" xml:space="preserve">
          <source>TensorArraySize</source>
          <target state="translated">TensorArraySize</target>
        </trans-unit>
        <trans-unit id="21ab1149c6f7999ab8d64cc70350e337345fb786" translate="yes" xml:space="preserve">
          <source>TensorArraySizeV2</source>
          <target state="translated">TensorArraySizeV2</target>
        </trans-unit>
        <trans-unit id="24bcb6045cff760350060e92715cbd68488630cd" translate="yes" xml:space="preserve">
          <source>TensorArraySizeV3</source>
          <target state="translated">TensorArraySizeV3</target>
        </trans-unit>
        <trans-unit id="fbb5cce9e596e13305fdac67b26638bce1c4584a" translate="yes" xml:space="preserve">
          <source>TensorArraySplit</source>
          <target state="translated">TensorArraySplit</target>
        </trans-unit>
        <trans-unit id="dedb8370dfccba2844f92b3309582a012bb44347" translate="yes" xml:space="preserve">
          <source>TensorArraySplitV2</source>
          <target state="translated">TensorArraySplitV2</target>
        </trans-unit>
        <trans-unit id="5566e35be3ac1bad44a407c93409aff4050d635e" translate="yes" xml:space="preserve">
          <source>TensorArraySplitV3</source>
          <target state="translated">TensorArraySplitV3</target>
        </trans-unit>
        <trans-unit id="91f8fb74b6b10a5e4435fc1923081d04f76c7588" translate="yes" xml:space="preserve">
          <source>TensorArrayUnpack</source>
          <target state="translated">TensorArrayUnpack</target>
        </trans-unit>
        <trans-unit id="e0d8218dabbafbfa773400efade8fbff5f87b19e" translate="yes" xml:space="preserve">
          <source>TensorArrayV2</source>
          <target state="translated">TensorArrayV2</target>
        </trans-unit>
        <trans-unit id="a848f6657a20bf233e1497813eeb214d189175ef" translate="yes" xml:space="preserve">
          <source>TensorArrayV3</source>
          <target state="translated">TensorArrayV3</target>
        </trans-unit>
        <trans-unit id="059449a07f82b191b2b757ec228ea9591e698946" translate="yes" xml:space="preserve">
          <source>TensorArrayWrite</source>
          <target state="translated">TensorArrayWrite</target>
        </trans-unit>
        <trans-unit id="1616be38e66741c7ca653bf71c3c9d2753419306" translate="yes" xml:space="preserve">
          <source>TensorArrayWriteV2</source>
          <target state="translated">TensorArrayWriteV2</target>
        </trans-unit>
        <trans-unit id="6832628b3c921361a1ed6f81adf432bb9f0a06ad" translate="yes" xml:space="preserve">
          <source>TensorArrayWriteV3</source>
          <target state="translated">TensorArrayWriteV3</target>
        </trans-unit>
        <trans-unit id="0c870eac18cde0821e85a6e2e0cd690795d9b0f8" translate="yes" xml:space="preserve">
          <source>TensorBoard is a visualization tool provided with TensorFlow.</source>
          <target state="translated">TensorBoardはTensorFlowで提供されている可視化ツールです。</target>
        </trans-unit>
        <trans-unit id="d6c5b7495606642427d84d9560c2c6fa48e983ac" translate="yes" xml:space="preserve">
          <source>TensorBoard will pick the graph from the file and display it graphically so you can interactively explore the graph you built. You will usually pass the graph from the session in which you launched it:</source>
          <target state="translated">TensorBoard はファイルからグラフを選択してグラフィカルに表示するので、作成したグラフをインタラクティブに探索することができます。通常、グラフは起動したセッションから渡されます。</target>
        </trans-unit>
        <trans-unit id="f8342214fe44b1c0c83175be83a91f5e2a145745" translate="yes" xml:space="preserve">
          <source>TensorDataset</source>
          <target state="translated">TensorDataset</target>
        </trans-unit>
        <trans-unit id="91920dffa2de075aa71252ce246c4919ca2918b7" translate="yes" xml:space="preserve">
          <source>TensorFlow</source>
          <target state="translated">TensorFlow</target>
        </trans-unit>
        <trans-unit id="0aa8b8730f9d4ee0f6fd230f9d2510cbf8c53747" translate="yes" xml:space="preserve">
          <source>TensorFlow 1 version</source>
          <target state="translated">TensorFlow 1バージョン</target>
        </trans-unit>
        <trans-unit id="4e54099f7adc352258d80aa2a07931abd0dfaf7a" translate="yes" xml:space="preserve">
          <source>TensorFlow 1.x and 2.x</source>
          <target state="translated">TensorFlow 1.xと2.x</target>
        </trans-unit>
        <trans-unit id="895342c8e5449651b084f46f85af49138e2e8798" translate="yes" xml:space="preserve">
          <source>TensorFlow 2 quickstart for experts</source>
          <target state="translated">エキスパートのためのTensorFlow 2クイックスタート</target>
        </trans-unit>
        <trans-unit id="4d7a6f2a780bcce78ffe938ccead5b3061683157" translate="yes" xml:space="preserve">
          <source>TensorFlow Compiler Bridge (TF Bridge) is responsible for translating parts of TensorFlow graph into a form that can be accepted as an input by a backend compiler such as XLA.</source>
          <target state="translated">TensorFlow Compiler Bridge (TF Bridge)は、TensorFlow グラフの一部を XLA などのバックエンドコンパイラが入力として受け入れられる形に変換する役割を担っています。</target>
        </trans-unit>
        <trans-unit id="df64a2e128865b8108ebd54f1004aef489171bf7" translate="yes" xml:space="preserve">
          <source>TensorFlow Compiler Optimizations are responsible general graph level optimizations that in the current stack mostly done by Grappler graph optimizers.</source>
          <target state="translated">TensorFlowコンパイラ最適化は、現在のスタックではほとんどがグラップラーグラフオプティマイザによって行われている一般的なグラフレベルの最適化を担当しています。</target>
        </trans-unit>
        <trans-unit id="7c9fbc6a836283d6b77fb69cb71170fb5aa3025a" translate="yes" xml:space="preserve">
          <source>TensorFlow Function construction (e.g., compilation of Python functions decorated with @tf.function), the op types, names (if available), context, the input and output tensors, and the associated stack traces.</source>
          <target state="translated">TensorFlow関数の構築(例えば、@tf.functionで装飾されたPython関数のコンパイル)、op型、名前(利用可能な場合)、コンテキスト、入力テンソルと出力テンソル、および関連するスタックトレース。</target>
        </trans-unit>
        <trans-unit id="40fd32522d9e2bac50b01c2a54d090f0edc43fdf" translate="yes" xml:space="preserve">
          <source>TensorFlow Session.</source>
          <target state="translated">TensorFlow セッション。</target>
        </trans-unit>
        <trans-unit id="817a54d8521aedb8183452480ae1c26498fbd2da" translate="yes" xml:space="preserve">
          <source>TensorFlow can convert between images in RGB or HSV or YIQ.</source>
          <target state="translated">TensorFlowは、RGBまたはHSVまたはYIQで画像間の変換を行うことができます。</target>
        </trans-unit>
        <trans-unit id="5218d7001def4141ae436cbd9f4e4ab5c90eec24" translate="yes" xml:space="preserve">
          <source>TensorFlow can execute operations synchronously or asynchronously. If asynchronous execution is enabled, operations may return &quot;non-ready&quot; handles.</source>
          <target state="translated">TensorFlowは、操作を同期的にも非同期的にも実行することができます。非同期実行が有効な場合、操作は &quot;readyではない &quot;ハンドルを返すことがあります。</target>
        </trans-unit>
        <trans-unit id="6b177522823bac7fab49a3e953658eb26bd8be99" translate="yes" xml:space="preserve">
          <source>TensorFlow can utilize various devices such as the CPU or multiple GPUs for computation. Before initializing a local device for use, the user can customize certain properties of the device such as it's visibility or memory configuration.</source>
          <target state="translated">TensorFlowは、CPUや複数のGPUなど様々なデバイスを計算に利用することができます。ローカルデバイスを初期化して使用する前に、ユーザはデバイスの可視性やメモリ構成など、デバイスの特定のプロパティをカスタマイズすることができます。</target>
        </trans-unit>
        <trans-unit id="ed9b6265dc382d52218eef149b9d9551ba4b9fc9" translate="yes" xml:space="preserve">
          <source>TensorFlow defaults to eager execution. In the example below, the matrix multiplication results are calculated immediately.</source>
          <target state="translated">TensorFlowのデフォルトはイーガー実行です。下の例では、行列の乗算結果がすぐに計算されます。</target>
        </trans-unit>
        <trans-unit id="aeb6cbc7489405eda828caa72395bff0364182ee" translate="yes" xml:space="preserve">
          <source>TensorFlow does not support strides, &lt;a href=&quot;matrix_transpose&quot;&gt;&lt;code&gt;linalg.matrix_transpose&lt;/code&gt;&lt;/a&gt; returns a new tensor with the items permuted.</source>
          <target state="translated">TensorFlowはストライドをサポートしていません。linalg.matrix_transposeは、項目を&lt;a href=&quot;matrix_transpose&quot;&gt; &lt;code&gt;linalg.matrix_transpose&lt;/code&gt; &lt;/a&gt;た新しいテンソルを返します。</target>
        </trans-unit>
        <trans-unit id="9ab173e45e5b70ecdfa453b1565a9d48b4aea76c" translate="yes" xml:space="preserve">
          <source>TensorFlow does not support strides, so &lt;code&gt;transpose&lt;/code&gt; returns a new tensor with the items permuted.</source>
          <target state="translated">TensorFlowはストライドをサポートしていないため、 &lt;code&gt;transpose&lt;/code&gt; は項目を並べ替えた新しいテンソルを返します。</target>
        </trans-unit>
        <trans-unit id="7258b473d648b978f0063efc0c3f0fba649a7ae7" translate="yes" xml:space="preserve">
          <source>TensorFlow example</source>
          <target state="translated">TensorFlowの例</target>
        </trans-unit>
        <trans-unit id="80a5a18b376b7e19393c2007205799ec5fa64c3e" translate="yes" xml:space="preserve">
          <source>TensorFlow graph optimization with Grappler</source>
          <target state="translated">グラップラーを用いたTensorFlowグラフ最適化</target>
        </trans-unit>
        <trans-unit id="faa0af6a22961093bbe0a8dd50a78c706f27b26f" translate="yes" xml:space="preserve">
          <source>TensorFlow has been supporting a 3 week forward-compatibility window for programs compiled from source at HEAD.</source>
          <target state="translated">TensorFlowは、HEADでソースからコンパイルされたプログラムの3週間の前方互換性ウィンドウをサポートしています。</target>
        </trans-unit>
        <trans-unit id="d777d2e0001d30ab9c8068008f110317d36562d1" translate="yes" xml:space="preserve">
          <source>TensorFlow image datasets typically yield images that have each a different size. However, these images need to be batched before they can be processed by Keras layers. To be batched, images need to share the same height and width.</source>
          <target state="translated">TensorFlow画像データセットは、通常、それぞれが異なるサイズの画像を生成します。しかし、これらの画像は、Kerasレイヤで処理する前にバッチ処理する必要があります。バッチ処理を行うには、画像の高さと幅が同じである必要があります。</target>
        </trans-unit>
        <trans-unit id="72769cecd87d42b437dab4e9d4a607af2d9ab1dc" translate="yes" xml:space="preserve">
          <source>TensorFlow lacks support for unsigned integers. The ops represent uint64 types as a &lt;code&gt;DT_INT64&lt;/code&gt; with the same twos-complement bit pattern (the obvious way). Unsigned int32 values can be represented exactly by specifying type &lt;code&gt;DT_INT64&lt;/code&gt;, or using twos-complement if the caller specifies &lt;code&gt;DT_INT32&lt;/code&gt; in the &lt;code&gt;output_types&lt;/code&gt; attribute.</source>
          <target state="translated">TensorFlowは、符号なし整数をサポートしていません。opsは、uint64型を同じ2の補数ビットパターンを持つ &lt;code&gt;DT_INT64&lt;/code&gt; として表します（明白な方法）。符号なしint32値は、タイプ &lt;code&gt;DT_INT64&lt;/code&gt; を指定するか、呼び出し元が &lt;code&gt;output_types&lt;/code&gt; 属性で &lt;code&gt;DT_INT32&lt;/code&gt; を指定している場合は、2の補数を使用して正確に表すことができます。</target>
        </trans-unit>
        <trans-unit id="173be625ee6b740f87a6f6b6b09514fbf3c93296" translate="yes" xml:space="preserve">
          <source>TensorFlow multi-step profiler.</source>
          <target state="translated">TensorFlowマルチステッププロファイラ。</target>
        </trans-unit>
        <trans-unit id="810fc361befc14d32fdf0508d15d40661b9df85e" translate="yes" xml:space="preserve">
          <source>TensorFlow provides Ops to decode and encode JPEG and PNG formats. Encoded images are represented by scalar string Tensors, decoded images by 3-D uint8 tensors of shape &lt;code&gt;[height, width, channels]&lt;/code&gt;. (PNG also supports uint16.)</source>
          <target state="translated">TensorFlowは、JPEGおよびPNG形式をデコードおよびエンコードするためのOpsを提供します。エンコードされた画像はスカラー文字列テンソルで表され、デコードされた画像は形状 &lt;code&gt;[height, width, channels]&lt;/code&gt; 3次元uint8テンソルで表されます。（PNGはuint16もサポートしています。）</target>
        </trans-unit>
        <trans-unit id="8d014f833e885f8b8ed6b7a6c3ea673ead6d65d8" translate="yes" xml:space="preserve">
          <source>TensorFlow provides a variety of math functions including:</source>
          <target state="translated">TensorFlowは、以下のような様々な数学関数を提供しています。</target>
        </trans-unit>
        <trans-unit id="05d759537de08462c7cc6537b87ea9fe004eb7fb" translate="yes" xml:space="preserve">
          <source>TensorFlow provides functions to adjust images in various ways: brightness, contrast, hue, and saturation. Each adjustment can be done with predefined parameters or with random parameters picked from predefined intervals. Random adjustments are often useful to expand a training set and reduce overfitting.</source>
          <target state="translated">TensorFlowは、明るさ、コントラスト、色相、彩度など、さまざまな方法で画像を調整する機能を提供しています。各調整は、事前に定義されたパラメータで行うことも、事前に定義された間隔から選ばれたランダムなパラメータで行うこともできます。ランダム調整は、トレーニングセットを拡張したり、オーバーフィッティングを減らすのに役立つことが多いです。</target>
        </trans-unit>
        <trans-unit id="305519ec0cbf6a7bdfd33f052e7a4a788bce222c" translate="yes" xml:space="preserve">
          <source>TensorFlow provides several operations that you can use to perform common math computations on tensor segments. Here a segmentation is a partitioning of a tensor along the first dimension, i.e. it defines a mapping from the first dimension onto &lt;code&gt;segment_ids&lt;/code&gt;. The &lt;code&gt;segment_ids&lt;/code&gt; tensor should be the size of the first dimension, &lt;code&gt;d0&lt;/code&gt;, with consecutive IDs in the range &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;k&lt;/code&gt;, where &lt;code&gt;k&amp;lt;d0&lt;/code&gt;. In particular, a segmentation of a matrix tensor is a mapping of rows to segments.</source>
          <target state="translated">TensorFlowは、テンソルセグメントで一般的な数学計算を実行するために使用できるいくつかの操作を提供します。ここで、セグメンテーションは最初の次元に沿ったテンソルの分割です。つまり、セグメンテーションは最初の次元から &lt;code&gt;segment_ids&lt;/code&gt; へのマッピングを定義します。 &lt;code&gt;segment_ids&lt;/code&gt; はテンソルは、最初の次元の大きさでなければならない &lt;code&gt;d0&lt;/code&gt; 範囲で連続IDを持つ、 &lt;code&gt;0&lt;/code&gt; に &lt;code&gt;k&lt;/code&gt; 、 &lt;code&gt;k&amp;lt;d0&lt;/code&gt; 。特に、行列テンソルのセグメンテーションは、行からセグメントへのマッピングです。</target>
        </trans-unit>
        <trans-unit id="476649b1950b2c7e7e27717793935f815d493aa9" translate="yes" xml:space="preserve">
          <source>TensorFlow represents a sparse tensor as three separate dense tensors: &lt;code&gt;indices&lt;/code&gt;, &lt;code&gt;values&lt;/code&gt;, and &lt;code&gt;dense_shape&lt;/code&gt;. In Python, the three tensors are collected into a &lt;code&gt;SparseTensor&lt;/code&gt; class for ease of use. If you have separate &lt;code&gt;indices&lt;/code&gt;, &lt;code&gt;values&lt;/code&gt;, and &lt;code&gt;dense_shape&lt;/code&gt; tensors, wrap them in a &lt;code&gt;SparseTensor&lt;/code&gt; object before passing to the ops below.</source>
          <target state="translated">TensorFlowは、スパーステンソルを3つの個別の密なテンソル（ &lt;code&gt;indices&lt;/code&gt; 、 &lt;code&gt;values&lt;/code&gt; 、および &lt;code&gt;dense_shape&lt;/code&gt; ます。 Pythonでは、使いやすさのために3つのテンソルが &lt;code&gt;SparseTensor&lt;/code&gt; クラスに収集されます。個別の &lt;code&gt;indices&lt;/code&gt; 、 &lt;code&gt;values&lt;/code&gt; 、および &lt;code&gt;dense_shape&lt;/code&gt; テンソルがある場合は、 &lt;code&gt;SparseTensor&lt;/code&gt; に渡す前に、それらをSparseTensorオブジェクトでラップします。</target>
        </trans-unit>
        <trans-unit id="93ac22f1d8d8c79ba60c08da8c0008ff464ff4c0" translate="yes" xml:space="preserve">
          <source>TensorFlow supports eager execution and graph execution. In eager execution, operations are evaluated immediately. In graph execution, a computational graph is constructed for later evaluation.</source>
          <target state="translated">TensorFlowはイーガー実行とグラフ実行をサポートしています。イーガー実行では、操作は即座に評価されます。グラフ実行では、後で評価するための計算グラフが構築されます。</target>
        </trans-unit>
        <trans-unit id="4593f4895cde5cdd282a36ff87b191ba4a5be07b" translate="yes" xml:space="preserve">
          <source>TensorFlow task number.</source>
          <target state="translated">TensorFlowのタスク番号。</target>
        </trans-unit>
        <trans-unit id="cfe97f05011118b2f246778fd7ffc0ecc02ee0e1" translate="yes" xml:space="preserve">
          <source>TensorFlow v1.x</source>
          <target state="translated">TensorFlow v1.x</target>
        </trans-unit>
        <trans-unit id="4b29d24e09666b1f0ef1ab103840afdc0c926e9e" translate="yes" xml:space="preserve">
          <source>TensorFlow v2.x</source>
          <target state="translated">TensorFlow v2.x</target>
        </trans-unit>
        <trans-unit id="a37abf1551d5441ca76c6027db3d86fa63aa8e14" translate="yes" xml:space="preserve">
          <source>TensorListConcat</source>
          <target state="translated">TensorListConcat</target>
        </trans-unit>
        <trans-unit id="9d41439e87d18ad7171c9e3b746f68d812e8b749" translate="yes" xml:space="preserve">
          <source>TensorListConcatLists</source>
          <target state="translated">TensorListConcatLists</target>
        </trans-unit>
        <trans-unit id="90952ebbd845c00e33141b5dcaccba672fd8b16a" translate="yes" xml:space="preserve">
          <source>TensorListConcatV2</source>
          <target state="translated">TensorListConcatV2</target>
        </trans-unit>
        <trans-unit id="0150384f1b5e4edf5af3ad08c5cab8dd526ee269" translate="yes" xml:space="preserve">
          <source>TensorListElementShape</source>
          <target state="translated">TensorListElementShape</target>
        </trans-unit>
        <trans-unit id="cdd9f9a8bc65ad4ad29c78f8b1ac8b66375955c6" translate="yes" xml:space="preserve">
          <source>TensorListFromTensor</source>
          <target state="translated">TensorListFromTensor</target>
        </trans-unit>
        <trans-unit id="dccda28c8a3040666a26d581e6bff9f168ece9ed" translate="yes" xml:space="preserve">
          <source>TensorListGather</source>
          <target state="translated">TensorListGather</target>
        </trans-unit>
        <trans-unit id="14f3dc52acfcfff3731892c7d01ee64a418c4169" translate="yes" xml:space="preserve">
          <source>TensorListGetItem</source>
          <target state="translated">TensorListGetItem</target>
        </trans-unit>
        <trans-unit id="c633de63f737370e705311a9f3a8938e139b24c1" translate="yes" xml:space="preserve">
          <source>TensorListLength</source>
          <target state="translated">TensorListLength</target>
        </trans-unit>
        <trans-unit id="a2250cb1b710a1f3cf34e62c8442f009ae44283c" translate="yes" xml:space="preserve">
          <source>TensorListPopBack</source>
          <target state="translated">TensorListPopBack</target>
        </trans-unit>
        <trans-unit id="21dc1f858f8f8546ff6c946d65457ad1e70ac1af" translate="yes" xml:space="preserve">
          <source>TensorListPushBack</source>
          <target state="translated">TensorListPushBack</target>
        </trans-unit>
        <trans-unit id="c57aa7340950223e030e0b97560d8e844fcfa560" translate="yes" xml:space="preserve">
          <source>TensorListPushBackBatch</source>
          <target state="translated">TensorListPushBackBatch</target>
        </trans-unit>
        <trans-unit id="8d7a7c2a17556888a90e53b5d47d964c38f77da3" translate="yes" xml:space="preserve">
          <source>TensorListReserve</source>
          <target state="translated">TensorListReserve</target>
        </trans-unit>
        <trans-unit id="a0809d58d382f9660ac66090df2e7dc4c1af058e" translate="yes" xml:space="preserve">
          <source>TensorListResize</source>
          <target state="translated">TensorListResize</target>
        </trans-unit>
        <trans-unit id="9f7d48a1a8360230f6ee08bc4743f237e2a90127" translate="yes" xml:space="preserve">
          <source>TensorListScatter</source>
          <target state="translated">TensorListScatter</target>
        </trans-unit>
        <trans-unit id="5ef4e2392d5ace62fce6b70b140e7df79b18e2a5" translate="yes" xml:space="preserve">
          <source>TensorListScatterIntoExistingList</source>
          <target state="translated">TensorListScatterIntoExistingList</target>
        </trans-unit>
        <trans-unit id="ab1d1ae5b9041f12b6e7a508fcdf4083605dfcaa" translate="yes" xml:space="preserve">
          <source>TensorListScatterV2</source>
          <target state="translated">TensorListScatterV2</target>
        </trans-unit>
        <trans-unit id="e993c73c18f7b6952b82875362c2611a4be232ed" translate="yes" xml:space="preserve">
          <source>TensorListSetItem</source>
          <target state="translated">TensorListSetItem</target>
        </trans-unit>
        <trans-unit id="9c9c126fb3acac8b777f1e794c016d908aa9bf5d" translate="yes" xml:space="preserve">
          <source>TensorListSplit</source>
          <target state="translated">TensorListSplit</target>
        </trans-unit>
        <trans-unit id="0b9ee82f2975305d6b770c3c1857adf3aceb000d" translate="yes" xml:space="preserve">
          <source>TensorListStack</source>
          <target state="translated">TensorListStack</target>
        </trans-unit>
        <trans-unit id="fed44bee83c9b1a76c423eb2e2a741853427be80" translate="yes" xml:space="preserve">
          <source>TensorScatterAdd</source>
          <target state="translated">TensorScatterAdd</target>
        </trans-unit>
        <trans-unit id="2dfa8a2396bbd4ebc6bc447db7053f28e1905f3c" translate="yes" xml:space="preserve">
          <source>TensorScatterMax</source>
          <target state="translated">TensorScatterMax</target>
        </trans-unit>
        <trans-unit id="14be854fb30ff59fae71fbe9893d82ab1705bd06" translate="yes" xml:space="preserve">
          <source>TensorScatterMin</source>
          <target state="translated">TensorScatterMin</target>
        </trans-unit>
        <trans-unit id="4c72eeca84d96511d52c490157b087a2d312fb7d" translate="yes" xml:space="preserve">
          <source>TensorScatterSub</source>
          <target state="translated">TensorScatterSub</target>
        </trans-unit>
        <trans-unit id="9e8144c6742af4ddb9ddd9cc6b36fe8c13273100" translate="yes" xml:space="preserve">
          <source>TensorScatterUpdate</source>
          <target state="translated">TensorScatterUpdate</target>
        </trans-unit>
        <trans-unit id="a47222eb58bbdfce0fc55dcabde531b7c9adb406" translate="yes" xml:space="preserve">
          <source>TensorShape(None) is compatible with all shapes.</source>
          <target state="translated">TensorShape(None)はすべての形状に対応しています。</target>
        </trans-unit>
        <trans-unit id="bac8d5b9c3640fab327ab07d92ee55320fd3913d" translate="yes" xml:space="preserve">
          <source>TensorShape([1, 2, 3]) is the most specific TensorShape compatible with both TensorShape([1, 2, 3]) and TensorShape([1, 2, 3]). There are more less specific TensorShapes compatible with above mentioned TensorShapes, e.g. TensorShape([1, 2, None]), TensorShape(None).</source>
          <target state="translated">TensorShape([1,2,3])は、TensorShape([1,2,3])とTensorShape([1,2,3])の両方と互換性のある最も特異的なTensorShapeであり、TensorShape([1,2,3])は、TensorShape([1,2,3])と互換性のある最も特異的なTensorShapeである。上記のTensorShapeと互換性があるTensorShapeの中には、より特定性の低いTensorShapeもあり、例えば、TensorShape([1,2,None])、TensorShape(None)などがあります。</target>
        </trans-unit>
        <trans-unit id="0224569211f435d2df63b768abb6efc726a69d01" translate="yes" xml:space="preserve">
          <source>TensorShape([32, 784]) is compatible with itself, and also TensorShape([32, None]), TensorShape([None, 784]), TensorShape([None, None]) and TensorShape(None). It is not compatible with, for example, TensorShape([32, 1, 784]) or TensorShape([None]).</source>
          <target state="translated">TensorShape([32,784])は、それ自体と互換性があり、TensorShape([32,None])、TensorShape([None,784])、TensorShape([None,None])、TensorShape([None,None])、TensorShape(None)とも互換性があります。例えば、TensorShape([32,1,784])やTensorShape([None])とは互換性がありません。</target>
        </trans-unit>
        <trans-unit id="9d64401ff7bd3446564470a92463f73e24f52237" translate="yes" xml:space="preserve">
          <source>TensorShape([32, None]) is compatible with all two-dimensional shapes with size 32 in the 0th dimension, and also TensorShape([None, None]) and TensorShape(None). It is not compatible with, for example, TensorShape([32]), TensorShape([32, None, 1]) or TensorShape([64, None]).</source>
          <target state="translated">TensorShape([32,None])は、0次元のサイズ32のすべての2次元図形と互換性があり、TensorShape([None,None])やTensorShape(None)とも互換性があります。例えば、TensorShape([32])、TensorShape([32,None,1])、TensorShape([64,None])とは互換性がありません。</target>
        </trans-unit>
        <trans-unit id="59fc38face567505b51ef9cc1d627c3ec48e0458" translate="yes" xml:space="preserve">
          <source>TensorShape([None, 1]) is the most specific TensorShape compatible with both TensorShape([2, 1]) and TensorShape([5, 1]). Note that TensorShape(None) is also compatible with above mentioned TensorShapes.</source>
          <target state="translated">TensorShape([None,1])は、TensorShape([2,1])とTensorShape([5,1])の両方と互換性がある最も特殊なTensorShapeです。なお、TensorShape(None)は上記のTensorShapeとも互換性があります。</target>
        </trans-unit>
        <trans-unit id="0f0011d7d16cb288f3076f4ccc9f15a9b93ab18d" translate="yes" xml:space="preserve">
          <source>TensorShape([None, None]) is compatible with all two-dimensional shapes, such as TensorShape([32, 784]), and also TensorShape(None). It is not compatible with, for example, TensorShape([None]) or TensorShape([None, None, None]).</source>
          <target state="translated">TensorShape([None,None])は、TensorShape([32,784])やTensorShape(None)などのすべての二次元図形と互換性があります。TensorShape([None])やTensorShape([None,None,None,None])などとは互換性がありません。</target>
        </trans-unit>
        <trans-unit id="37305f95359127b9612e69d7d869649d989247fe" translate="yes" xml:space="preserve">
          <source>TensorSliceDataset</source>
          <target state="translated">TensorSliceDataset</target>
        </trans-unit>
        <trans-unit id="f8c7b9a4c989b1d10f82cf3a5da138bae1cecfa2" translate="yes" xml:space="preserve">
          <source>TensorStridedSliceUpdate</source>
          <target state="translated">TensorStridedSliceUpdate</target>
        </trans-unit>
        <trans-unit id="cb9605b0e23dcfcc6641ff9040f90cf6eae32f09" translate="yes" xml:space="preserve">
          <source>TensorSummary</source>
          <target state="translated">TensorSummary</target>
        </trans-unit>
        <trans-unit id="f1b1e925cc812364ca2646b501ac9b1813d7be72" translate="yes" xml:space="preserve">
          <source>TensorSummaryV2</source>
          <target state="translated">TensorSummaryV2</target>
        </trans-unit>
        <trans-unit id="eb7208ca53baf0c906efb86ab8419484372d57aa" translate="yes" xml:space="preserve">
          <source>Tensordot (also known as tensor contraction) sums the product of elements from &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; over the indices specified by &lt;code&gt;a_axes&lt;/code&gt; and &lt;code&gt;b_axes&lt;/code&gt;. The lists &lt;code&gt;a_axes&lt;/code&gt; and &lt;code&gt;b_axes&lt;/code&gt; specify those pairs of axes along which to contract the tensors. The axis &lt;code&gt;a_axes[i]&lt;/code&gt; of &lt;code&gt;a&lt;/code&gt; must have the same dimension as axis &lt;code&gt;b_axes[i]&lt;/code&gt; of &lt;code&gt;b&lt;/code&gt; for all &lt;code&gt;i&lt;/code&gt; in &lt;code&gt;range(0, len(a_axes))&lt;/code&gt;. The lists &lt;code&gt;a_axes&lt;/code&gt; and &lt;code&gt;b_axes&lt;/code&gt; must have identical length and consist of unique integers that specify valid axes for each of the tensors. Additionally outer product is supported by passing &lt;code&gt;axes=0&lt;/code&gt;.</source>
          <target state="translated">Tensordotは（もテンソル収縮としても知られている）からの要素の積合計と &lt;code&gt;b&lt;/code&gt; で指定されたインデックス上 &lt;code&gt;a_axes&lt;/code&gt; と &lt;code&gt;b_axes&lt;/code&gt; を。リスト &lt;code&gt;a_axes&lt;/code&gt; および &lt;code&gt;b_axes&lt;/code&gt; は、テンソルを縮小する軸のペアを指定します。軸 &lt;code&gt;a_axes[i]&lt;/code&gt; の軸と同じ寸法有していなければならない &lt;code&gt;b_axes[i]&lt;/code&gt; の &lt;code&gt;b&lt;/code&gt; すべてのため &lt;code&gt;i&lt;/code&gt; における &lt;code&gt;range(0, len(a_axes))&lt;/code&gt; 。 &lt;code&gt;a_axes&lt;/code&gt; と &lt;code&gt;b_axes&lt;/code&gt; のリスト &lt;code&gt;a&lt;/code&gt; &lt;code&gt;a&lt;/code&gt; は同じ長さで、各テンソルに有効な軸を指定する一意の整数で構成されている必要があります。さらに、 &lt;code&gt;axes=0&lt;/code&gt; を渡すことにより、外積がサポートされます。</target>
        </trans-unit>
        <trans-unit id="3da1e8a48fb9ee2ea5423ca2bee26f977fbfb800" translate="yes" xml:space="preserve">
          <source>Tensorflow 1.x and 2.x APIs</source>
          <target state="translated">Tensorflow 1.xと2.xのAPI</target>
        </trans-unit>
        <trans-unit id="a7bfa5dc3be3af3be0f8badf7fd5b14992033252" translate="yes" xml:space="preserve">
          <source>Tensorflow eager tensor, to be converted to dlpack capsule.</source>
          <target state="translated">テンソルフローのイーガーテンソル、dlpackカプセルに変換します。</target>
        </trans-unit>
        <trans-unit id="df64ef28dfdc0fed49d20c14d6e6f4dee9cf4df9" translate="yes" xml:space="preserve">
          <source>Tensorflow set operations.</source>
          <target state="translated">Tensorflowのセット操作。</target>
        </trans-unit>
        <trans-unit id="c78b40e19c215435bc3ed71dd1958e2bcae7efd3" translate="yes" xml:space="preserve">
          <source>Tensorlow Activation function denoted by input string.</source>
          <target state="translated">入力文字列で表されるテンソルロー活性化関数。</target>
        </trans-unit>
        <trans-unit id="08f39ae099e26b016733e9e9c40c5aeddf309f4f" translate="yes" xml:space="preserve">
          <source>Tensors are broadcast to all shards if they are lexically captured by &lt;code&gt;computation&lt;/code&gt;. e.g.,</source>
          <target state="translated">テンソルは、 &lt;code&gt;computation&lt;/code&gt; によって字句的に取得される場合、すべてのシャードにブロードキャストされます。例えば、</target>
        </trans-unit>
        <trans-unit id="1a8d4468d2d83e08e6b380dfdd980b18e8bfdfab" translate="yes" xml:space="preserve">
          <source>Tensors of input values. Can include &lt;code&gt;None&lt;/code&gt; elements, which will be ignored.</source>
          <target state="translated">入力値のテンソル。無視される &lt;code&gt;None&lt;/code&gt; 要素を含めることができます。</target>
        </trans-unit>
        <trans-unit id="bf0313234b1dcd5626309aecb9ec7ec9391ddedf" translate="yes" xml:space="preserve">
          <source>Tensors returned by the call to either &lt;code&gt;true_fn&lt;/code&gt; or &lt;code&gt;false_fn&lt;/code&gt;. If the callables return a singleton list, the element is extracted from the list.</source>
          <target state="translated">テンソルは、いずれかの呼び出しによって返さ &lt;code&gt;true_fn&lt;/code&gt; または &lt;code&gt;false_fn&lt;/code&gt; 。呼び出し可能オブジェクトがシングルトンリストを返す場合、要素はリストから抽出されます。</target>
        </trans-unit>
        <trans-unit id="a48b71c8b807b599bf508a6dbc5c09d5b67d8a03" translate="yes" xml:space="preserve">
          <source>Tensors where required information about the tensor is not found are not added to the list. This includes temporary tensors without a name.</source>
          <target state="translated">テンソルに関する必要な情報が見つからないテンソルはリストに追加されません。これには名前のない一時的なテンソルも含まれます。</target>
        </trans-unit>
        <trans-unit id="f7b5ca3ec5313c82b6abfc2564bf0e69a6804f5b" translate="yes" xml:space="preserve">
          <source>Tensors with the same shapes and dtypes as &lt;code&gt;primals&lt;/code&gt;, or None if no JVP is available.</source>
          <target state="translated">同じ形状とdtypesとテンソル &lt;code&gt;primals&lt;/code&gt; 、あるいは全くJVPが利用できない場合はなし。</target>
        </trans-unit>
        <trans-unit id="a55a275aa676930d9258569485d5b38eb1196630" translate="yes" xml:space="preserve">
          <source>Terms</source>
          <target state="translated">Terms</target>
        </trans-unit>
        <trans-unit id="f63302361128babd351769e59c1a4b3a6ec16f94" translate="yes" xml:space="preserve">
          <source>Test the model on a single batch of samples.</source>
          <target state="translated">1つのバッチのサンプルでモデルをテストします。</target>
        </trans-unit>
        <trans-unit id="bdf696f0dd4d97504f4a88d9e975e9f3294e8162" translate="yes" xml:space="preserve">
          <source>Testing.</source>
          <target state="translated">Testing.</target>
        </trans-unit>
        <trans-unit id="922aa0452fde3720fa66aa3c8e60b54fc1c9bf57" translate="yes" xml:space="preserve">
          <source>Tests if a variable has been initialized.</source>
          <target state="translated">変数が初期化されているかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="f458c872a2ebaf65e5d7df76b800c1d13ed30e7f" translate="yes" xml:space="preserve">
          <source>Tests whether &lt;code&gt;v&lt;/code&gt; was created while this strategy scope was active.</source>
          <target state="translated">この戦略スコープがアクティブな間に &lt;code&gt;v&lt;/code&gt; が作成されたかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="e0beba45f94aef1d128461a461734027a1cbdc6a" translate="yes" xml:space="preserve">
          <source>Text classification with TensorFlow Hub: Movie reviews</source>
          <target state="translated">TensorFlow Hubを使ったテキスト分類 映画のレビュー</target>
        </trans-unit>
        <trans-unit id="af2326670284928f1fa19c7cb38f5c886d723da5" translate="yes" xml:space="preserve">
          <source>Text classification with an RNN</source>
          <target state="translated">RNNによるテキスト分類</target>
        </trans-unit>
        <trans-unit id="666b2045ab57fe75e30e76d0ab8d952507d4bb84" translate="yes" xml:space="preserve">
          <source>Text classification with preprocessed text: Movie reviews</source>
          <target state="translated">前処理されたテキストを使ったテキスト分類 映画レビュー</target>
        </trans-unit>
        <trans-unit id="238cbda9697b2819cc76abe6b2dfc721f459f878" translate="yes" xml:space="preserve">
          <source>Text data summarized via this plugin will be visible in the Text Dashboard in TensorBoard. The standard TensorBoard Text Dashboard will render markdown in the strings, and will automatically organize 1d and 2d tensors into tables. If a tensor with more than 2 dimensions is provided, a 2d subarray will be displayed along with a warning message. (Note that this behavior is not intrinsic to the text summary api, but rather to the default TensorBoard text plugin.)</source>
          <target state="translated">このプラグインを介して要約されたテキストデータは、TensorBoardのテキストダッシュボードに表示されます。標準のTensorBoardのテキストダッシュボードは、文字列のマークダウンをレンダリングし、1次元と2次元のテンソルを自動的にテーブルに整理します。2次元以上のテンソルが提供された場合、2次元のサブアレイが警告メッセージと共に表示されます。(この動作は text summary api に固有のものではなく、デフォルトの TensorBoard テキストプラグインに固有のものであることに注意してください)。</target>
        </trans-unit>
        <trans-unit id="215d4fed2fcabcf3c40621205317566597794ae1" translate="yes" xml:space="preserve">
          <source>Text generation with an RNN</source>
          <target state="translated">RNNによるテキスト生成</target>
        </trans-unit>
        <trans-unit id="61400e23cf34d05c482b01eaced08ef2d8868035" translate="yes" xml:space="preserve">
          <source>Text tokenization utility class.</source>
          <target state="translated">テキストのトークン化ユーティリティクラス。</target>
        </trans-unit>
        <trans-unit id="fdb6f1dda58b475840646d14c94922eb6f72f336" translate="yes" xml:space="preserve">
          <source>Text vectorization layer.</source>
          <target state="translated">テキストベクトル化レイヤー。</target>
        </trans-unit>
        <trans-unit id="f1625deb08cd91b1818022a22d98396b875c5eb8" translate="yes" xml:space="preserve">
          <source>TextFileIndex.LINE_NUMBER means use the line number starting from zero, expects data type int64.</source>
          <target state="translated">TextFileIndex.LINE_NUMBERは0から始まる行番号を使用することを意味し、データ型はint64を想定しています。</target>
        </trans-unit>
        <trans-unit id="52639d0bc1ea1e6f18d19dfc84aced6fc473d4b7" translate="yes" xml:space="preserve">
          <source>TextFileIndex.WHOLE_LINE means use the whole line content, expects data type string.</source>
          <target state="translated">TextFileIndex.WHOLE_LINEは、全行の内容を使用することを意味し、データ型は文字列を想定しています。</target>
        </trans-unit>
        <trans-unit id="aae1af3abaa894b413f4b067008faeab65eabf5c" translate="yes" xml:space="preserve">
          <source>TextLineDataset</source>
          <target state="translated">TextLineDataset</target>
        </trans-unit>
        <trans-unit id="00504b1255a96c459911faa4e9c084086511e171" translate="yes" xml:space="preserve">
          <source>TextLineReader</source>
          <target state="translated">TextLineReader</target>
        </trans-unit>
        <trans-unit id="4b2c757da49259aded733326539b78214b6386f7" translate="yes" xml:space="preserve">
          <source>TextLineReaderV2</source>
          <target state="translated">TextLineReaderV2</target>
        </trans-unit>
        <trans-unit id="32a32db1543cdc3c626d9e433e0bcb624a120cf4" translate="yes" xml:space="preserve">
          <source>Tf1 Compatibility</source>
          <target state="translated">Tf1互換性</target>
        </trans-unit>
        <trans-unit id="3bd93c93ad7351313ce7fcdddf6eae9396528ebd" translate="yes" xml:space="preserve">
          <source>That is for rows we have grad for, we update var and accum as follows:</source>
          <target state="translated">つまり、grad for を持っている行については、以下のように var と accum を更新します。</target>
        </trans-unit>
        <trans-unit id="929ca813ba0d0e0e8019d57d723a975ded7a98c1" translate="yes" xml:space="preserve">
          <source>That is for rows we have grad for, we update var and accum as follows: accum += grad * grad prox_v = var prox_v -= lr * grad * (1 / sqrt(accum)) var = sign(prox_v)/(1+lr*l2) * max{|prox_v|-lr*l1,0}</source>
          <target state="translated">つまり、grad がある行については、var と accum を次のように更新します:accum +=grad*grad prox_v=var prox_v -=lr*grad*(1/sqrt(sum))var=sign(prox_v)/(1+lr*l2)*max{|prox_v|-lr*l1,0}var=sign(prox_v)/(1+lr*l2)*max{|prox_v|-lr*l1,0}.</target>
        </trans-unit>
        <trans-unit id="9ef1d3736ee1570a99e3839352b8be40fa69fa3b" translate="yes" xml:space="preserve">
          <source>That is for rows we have grad for, we update var and accum as follows: accum += grad * grad var -= lr * grad * (1 / sqrt(accum))</source>
          <target state="translated">つまり,gradがある行については,次のようにvarとsumを更新します:accum +=grad*grad var -=lr*grad*(1/sqrt(sum))</target>
        </trans-unit>
        <trans-unit id="e3002670e140323f193822e7322051db5b0796ae" translate="yes" xml:space="preserve">
          <source>That is for rows we have grad for, we update var as follows:</source>
          <target state="translated">それは我々がのためにグラデーションを持っている行のために、我々は次のようにvarを更新しています。</target>
        </trans-unit>
        <trans-unit id="87f1c5e604fe8b91203c415d93576c5c698bbe19" translate="yes" xml:space="preserve">
          <source>That is for rows we have grad for, we update var as follows: prox_v = var - alpha * grad var = sign(prox_v)/(1+alpha*l2) * max{|prox_v|-alpha*l1,0}</source>
          <target state="translated">つまり、我々は次のようにgradを持っている行のために、我々は次のようにvarを更新します:prox_v=var-alpha*grad var=sign(prox_v)/(1+α*l2)*max{|prox_v|-α*l1,0}。</target>
        </trans-unit>
        <trans-unit id="faa2fc81a8cc984f4e78327801816384e2824a57" translate="yes" xml:space="preserve">
          <source>That is for rows we have grad for, we update var, accum and linear as follows:</source>
          <target state="translated">つまり、grad forを持っている行については、以下のようにvar,accum,linearを更新します。</target>
        </trans-unit>
        <trans-unit id="edbeb8da53ac3780cd97043899b23bcb49bd08f0" translate="yes" xml:space="preserve">
          <source>That is for rows we have grad for, we update var, accum and linear as follows: accum_new = accum + grad * grad linear += grad - (accum_new^(-lr_power) - accum^(-lr_power)) / lr * var quadratic = 1.0 / (accum_new^(lr_power) * lr) + 2 * l2 var = (sign(linear) * l1 - linear) / quadratic if |linear| &amp;gt; l1 else 0.0 accum = accum_new</source>
          <target state="translated">つまり、gradがある行の場合、var、accum、linearを次のように更新します。accum_new= accum + grad * grad linear + = grad-（accum_new ^（-lr_power）-accum ^（-lr_power））/ lr * var二次= 1.0 /（accum_new ^（lr_power）* lr）+ 2 * l2 var =（sign（linear）* l1-linear）/二次if | linear | &amp;gt; l1 else 0.0 accum = accum_new</target>
        </trans-unit>
        <trans-unit id="ae53fa0352a639df9f5ce6648263083ffb0e5c21" translate="yes" xml:space="preserve">
          <source>That is for rows we have grad for, we update var, accum and linear as follows: grad_with_shrinkage = grad + 2 * l2_shrinkage * var accum_new = accum + grad * grad linear += grad_with_shrinkage - (accum_new^(-lr_power) - accum^(-lr_power)) / lr * var quadratic = 1.0 / (accum_new^(lr_power) * lr) + 2 * l2 var = (sign(linear) * l1 - linear) / quadratic if |linear| &amp;gt; l1 else 0.0 accum = accum_new</source>
          <target state="translated">つまり、gradがある行の場合、var、accum、linearを次のように更新します。grad_with_shrinkage= grad + 2 * l2_shrinkage * var accum_new = accum + grad * grad linear + = grad_with_shrinkage-（accum_new ^（-lr_power）-accum ^ （-lr_power））/ lr * var quadratic = 1.0 /（accum_new ^（lr_power）* lr）+ 2 * l2 var =（sign（linear）* l1-linear）/ quadratic if | linear | &amp;gt; l1 else 0.0 accum = accum_new</target>
        </trans-unit>
        <trans-unit id="1fa4e061d9d26a6b3da848e09b858d3702ecff6b" translate="yes" xml:space="preserve">
          <source>That is for rows we have grad for, we update var, accum and linear as follows: grad_with_shrinkage = grad + 2 * l2_shrinkage * var accum_new = accum + grad_with_shrinkage * grad_with_shrinkage linear += grad_with_shrinkage + (accum_new^(-lr_power) - accum^(-lr_power)) / lr * var quadratic = 1.0 / (accum_new^(lr_power) * lr) + 2 * l2 var = (sign(linear) * l1 - linear) / quadratic if |linear| &amp;gt; l1 else 0.0 accum = accum_new</source>
          <target state="translated">つまり、gradがある行の場合、var、accum、linearを次のように更新します。grad_with_shrinkage= grad + 2 * l2_shrinkage * var accum_new = accum + grad_with_shrinkage * grad_with_shrinkage linear + = grad_with_shrinkage +（accum_new ^（-lr_power）-accum ^ （-lr_power））/ lr * var quadratic = 1.0 /（accum_new ^（lr_power）* lr）+ 2 * l2 var =（sign（linear）* l1-linear）/ quadratic if | linear | &amp;gt; l1 else 0.0 accum = accum_new</target>
        </trans-unit>
        <trans-unit id="fad4058d06803c465e05d1c5344e342b15bc7c35" translate="yes" xml:space="preserve">
          <source>That is, the data from the input tensors is joined along the &lt;code&gt;axis&lt;/code&gt; dimension.</source>
          <target state="translated">つまり、入力テンソルからのデータは、 &lt;code&gt;axis&lt;/code&gt; 次元に沿って結合されます。</target>
        </trans-unit>
        <trans-unit id="99e979e2c9f35b245f91a4fcf123a371dda84688" translate="yes" xml:space="preserve">
          <source>The &quot;default&quot; behavior to is to output all intermediates when using v2 control flow inside Keras models in graph mode (possibly inside Estimators). This is needed to support taking gradients of v2 control flow. In graph mode, Keras can sometimes freeze the forward graph before the gradient computation which does not work for v2 control flow since it requires updating the forward ops to output the needed intermediates. We work around this by proactively outputting the needed intermediates when building the forward pass itself. Ideally any such extra tensors should be pruned out at runtime. However, if for any reason this doesn't work for you or if you have an inference-only model you can turn this behavior off using &lt;a href=&quot;output_all_intermediates&quot;&gt;&lt;code&gt;tf.compat.v1.experimental.output_all_intermediates(False)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">の「デフォルト」の動作は、グラフモードのKerasモデル内（おそらくEstimator内）でv2制御フローを使用するときにすべての中間体を出力することです。これは、v2制御フローの勾配の取得をサポートするために必要です。グラフモードでは、Kerasは、勾配計算の前にフォワードグラフをフリーズすることがあります。これは、必要な中間体を出力するためにフォワードオペレーションを更新する必要があるため、v2制御フローでは機能しません。フォワードパス自体を構築するときに必要な中間体を積極的に出力することで、これを回避します。理想的には、そのような余分なテンソルは実行時に削除する必要があります。ただし、何らかの理由でこれが機能しない場合、または推論のみのモデルがある場合は、&lt;a href=&quot;output_all_intermediates&quot;&gt; &lt;code&gt;tf.compat.v1.experimental.output_all_intermediates(False)&lt;/code&gt; &lt;/a&gt;を使用してこの動作をオフにすることができます。</target>
        </trans-unit>
        <trans-unit id="819444ab5f8a03046c9bdaef264812c5a336db87" translate="yes" xml:space="preserve">
          <source>The &quot;default&quot; behavior to is to output all intermediates when using v2 control flow inside Keras models in graph mode (possibly inside Estimators). This is needed to support taking gradients of v2 control flow. In graph mode, Keras can sometimes freeze the forward graph before the gradient computation which does not work for v2 control flow since it requires updating the forward ops to output the needed intermediates. We work around this by proactively outputting the needed intermediates when building the forward pass itself. Ideally any such extra tensors should be pruned out at runtime. However, if for any reason this doesn't work for you or if you have an infernce-only model you can turn this behavior off using &lt;a href=&quot;output_all_intermediates&quot;&gt;&lt;code&gt;tf.compat.v1.experimental.output_all_intermediates(False)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">「デフォルト」の動作は、グラフモードのKerasモデル内（おそらくEstimators内）でv2制御フローを使用するときにすべての中間物を出力することです。これは、v2制御フローの勾配の取得をサポートするために必要です。グラフモードでは、Kerasは勾配計算の前にフォワードグラフをフリーズすることがあります。これは、必要な中間体を出力するためにフォワードオペレーションを更新する必要があるため、v2制御フローでは機能しません。フォワードパス自体を構築するときに、必要な中間物を積極的に出力することで、これを回避します。理想的には、そのような余分なテンソルは実行時に取り除く必要があります。ただし、何らかの理由でこれが機能しない場合、または推論のみのモデルがある場合は、&lt;a href=&quot;output_all_intermediates&quot;&gt; &lt;code&gt;tf.compat.v1.experimental.output_all_intermediates(False)&lt;/code&gt; &lt;/a&gt;を使用してこの動作をオフにすることができます。</target>
        </trans-unit>
        <trans-unit id="0b9fa0a04a1154461443bf2e15e0c100a29ae547" translate="yes" xml:space="preserve">
          <source>The 'key' part of the state of a counter-based RNG.</source>
          <target state="translated">カウンターベースのRNGの状態の「鍵」の部分。</target>
        </trans-unit>
        <trans-unit id="3318a80b2f7ae85ea4618b44f96f90cdc30913bf" translate="yes" xml:space="preserve">
          <source>The 'step' here refers to the step defined by &lt;code&gt;Profiler.add_step()&lt;/code&gt; API.</source>
          <target state="translated">ここでの「ステップ」とは、 &lt;code&gt;Profiler.add_step()&lt;/code&gt; API によって定義されたステップを指します。</target>
        </trans-unit>
        <trans-unit id="32756cff4dc3fe86f44d1b62b470239afbc36f52" translate="yes" xml:space="preserve">
          <source>The -32768 to 32767 signed 16-bit values will be scaled to -1.0 to 1.0 in float.</source>
          <target state="translated">32768~32767の符号付き16ビット値は、floatで-1.0~1.0にスケーリングされます。</target>
        </trans-unit>
        <trans-unit id="a500fcca2783caaf16ae016a052e05e8f3aac0f1" translate="yes" xml:space="preserve">
          <source>The .value attribute of the registered 'Flag' objects can be accessed as attributes of this 'FlagValues' object, through &lt;strong&gt;getattr&lt;/strong&gt;. Both the long and short name of the original 'Flag' objects can be used to access its value: FLAGS.longname # parsed flag value FLAGS.x # parsed flag value (short name)</source>
          <target state="translated">登録済み「フラグ」オブジェクトの.VALUE属性がを通して、この「FlagValues」オブジェクトの属性としてアクセスすることができる&lt;strong&gt;GETATTR&lt;/strong&gt;。元の「フラグ」オブジェクトのロングネームとショートネームの両方を使用して、その値にアクセスできます。FLAGS.longname＃解析済みフラグ値FLAGS.x＃解析済みフラグ値（短い名前）</target>
        </trans-unit>
        <trans-unit id="310600070b5ce2b07429f189bd9cdba9eeaed7e3" translate="yes" xml:space="preserve">
          <source>The 4-D &lt;code&gt;input&lt;/code&gt; tensor is treated as a 3-D array of 1-D vectors (along the last dimension), and each vector is normalized independently. Within a given vector, each component is divided by the weighted, squared sum of inputs within &lt;code&gt;depth_radius&lt;/code&gt;. In detail,</source>
          <target state="translated">4次元 &lt;code&gt;input&lt;/code&gt; テンソルは、（最後の次元に沿った）1次元ベクトルの3次元配列として扱われ、各ベクトルは独立して正規化されます。与えられたベクトル内で、各コンポーネントは &lt;code&gt;depth_radius&lt;/code&gt; 内の入力の重み付き二乗和で除算されます。詳細に、</target>
        </trans-unit>
        <trans-unit id="0f0e683a1673564b6d46b0b9fa5e4680c1843f5c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../../data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; returned by &lt;code&gt;input_fn&lt;/code&gt; should have a per-replica batch size, which may be computed using &lt;code&gt;input_context.get_per_replica_batch_size&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../../../data/dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; は&lt;/a&gt;によって返さ &lt;code&gt;input_fn&lt;/code&gt; 用いて計算することができるあたりのレプリカバッチサイズ、有するべき &lt;code&gt;input_context.get_per_replica_batch_size&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="61826dd5bb7c2966f5aa2b8a6e3a8cdffb1d52d3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../../distribute/cluster_resolver/clusterresolver&quot;&gt;&lt;code&gt;tf.distribute.cluster_resolver.ClusterResolver&lt;/code&gt;&lt;/a&gt; may be useful when the user needs to access information such as the cluster spec, task type or task id. For example,</source>
          <target state="translated">&lt;a href=&quot;../../../../distribute/cluster_resolver/clusterresolver&quot;&gt; &lt;code&gt;tf.distribute.cluster_resolver.ClusterResolver&lt;/code&gt; は、&lt;/a&gt;ユーザは、クラスタ仕様、タスクタイプまたはタスクIDとアクセス情報を必要なときに有用であり得ます。例えば、</target>
        </trans-unit>
        <trans-unit id="457c92aa7bdffea8661a2def17f70e375b2b0d14" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; returned by &lt;code&gt;input_fn&lt;/code&gt; should have a per-replica batch size, which may be computed using &lt;code&gt;input_context.get_per_replica_batch_size&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../../data/dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; は&lt;/a&gt;によって返さ &lt;code&gt;input_fn&lt;/code&gt; 用いて計算することができるあたりのレプリカバッチサイズ、有するべき &lt;code&gt;input_context.get_per_replica_batch_size&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="16de01ef66472389e867ed7172f8cf19b9d12f37" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../distribute/cluster_resolver/clusterresolver&quot;&gt;&lt;code&gt;tf.distribute.cluster_resolver.ClusterResolver&lt;/code&gt;&lt;/a&gt; may be useful when the user needs to access information such as the cluster spec, task type or task id. For example,</source>
          <target state="translated">&lt;a href=&quot;../../../distribute/cluster_resolver/clusterresolver&quot;&gt; &lt;code&gt;tf.distribute.cluster_resolver.ClusterResolver&lt;/code&gt; は、&lt;/a&gt;ユーザは、クラスタ仕様、タスクタイプまたはタスクIDとアクセス情報を必要なときに有用であり得ます。例えば、</target>
        </trans-unit>
        <trans-unit id="c669108152980f350f27d9f945606a7f5042af07" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../compat&quot;&gt;&lt;code&gt;tf.compat&lt;/code&gt;&lt;/a&gt; module contains two sets of compatibility functions.</source>
          <target state="translated">&lt;a href=&quot;../../compat&quot;&gt; &lt;code&gt;tf.compat&lt;/code&gt; &lt;/a&gt;モジュールは、互換性機能の二組を含んでいます。</target>
        </trans-unit>
        <trans-unit id="7930784ff8dbb651a991e042e417bd9dc3a14eeb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../distribute/strategy&quot;&gt;&lt;code&gt;tf.distribute.Strategy&lt;/code&gt;&lt;/a&gt; this model was created under.</source>
          <target state="translated">&lt;a href=&quot;../../distribute/strategy&quot;&gt; &lt;code&gt;tf.distribute.Strategy&lt;/code&gt; &lt;/a&gt;このモデルをもとに作成されました。</target>
        </trans-unit>
        <trans-unit id="3fbdd965cada2455c5a4b44ca098e598d5cdf301" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../image&quot;&gt;&lt;code&gt;tf.image&lt;/code&gt;&lt;/a&gt; module contains various functions for image processing and decoding-encoding Ops.</source>
          <target state="translated">&lt;a href=&quot;../../image&quot;&gt; &lt;code&gt;tf.image&lt;/code&gt; の&lt;/a&gt;モジュールは、画像処理及び復号化コードオプスのための様々な機能を含んでいます。</target>
        </trans-unit>
        <trans-unit id="22402ac75618003d1c02e2a951e502bb27f99e5b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../cluster_resolver/clusterresolver&quot;&gt;&lt;code&gt;tf.distribute.cluster_resolver.ClusterResolver&lt;/code&gt;&lt;/a&gt; may be useful when the user needs to access information such as the cluster spec, task type or task id. For example,</source>
          <target state="translated">&lt;a href=&quot;../cluster_resolver/clusterresolver&quot;&gt; &lt;code&gt;tf.distribute.cluster_resolver.ClusterResolver&lt;/code&gt; は、&lt;/a&gt;ユーザは、クラスタ仕様、タスクタイプまたはタスクIDとアクセス情報を必要なときに有用であり得ます。例えば、</target>
        </trans-unit>
        <trans-unit id="381a5f266061634b6218e86a5278cc8e73b11bce" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../data&quot;&gt;&lt;code&gt;tf.data&lt;/code&gt;&lt;/a&gt; Python API creates instances of this op from &lt;a href=&quot;../data/dataset#interleave&quot;&gt;&lt;code&gt;Dataset.interleave()&lt;/code&gt;&lt;/a&gt; when the &lt;code&gt;num_parallel_calls&lt;/code&gt; parameter of that method is set to any value other than &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../data&quot;&gt; &lt;code&gt;tf.data&lt;/code&gt; &lt;/a&gt; PythonのAPIがこのオペアンプのインスタンスを作成&lt;a href=&quot;../data/dataset#interleave&quot;&gt; &lt;code&gt;Dataset.interleave()&lt;/code&gt; &lt;/a&gt; &lt;code&gt;num_parallel_calls&lt;/code&gt; のそのメソッドのパラメータは以外の値に設定されている &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f1692f604914f2012ce5644f6e1f92719dcce4ac" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../distribute/strategy&quot;&gt;&lt;code&gt;tf.distribute.Strategy&lt;/code&gt;&lt;/a&gt; this model was created under.</source>
          <target state="translated">&lt;a href=&quot;../distribute/strategy&quot;&gt; &lt;code&gt;tf.distribute.Strategy&lt;/code&gt; &lt;/a&gt;このモデルをもとに作成されました。</target>
        </trans-unit>
        <trans-unit id="d984abb5fd047cadea5d56f7490219cb30629a70" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../math/asin&quot;&gt;&lt;code&gt;tf.math.asin&lt;/code&gt;&lt;/a&gt; operation returns the inverse of &lt;a href=&quot;../math/sin&quot;&gt;&lt;code&gt;tf.math.sin&lt;/code&gt;&lt;/a&gt;, such that if &lt;code&gt;y = tf.math.sin(x)&lt;/code&gt; then, &lt;code&gt;x = tf.math.asin(y)&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../math/asin&quot;&gt; &lt;code&gt;tf.math.asin&lt;/code&gt; の&lt;/a&gt;運転復帰の逆&lt;a href=&quot;../math/sin&quot;&gt; &lt;code&gt;tf.math.sin&lt;/code&gt; &lt;/a&gt;、例えば、もし &lt;code&gt;y = tf.math.sin(x)&lt;/code&gt; 、次いで、 &lt;code&gt;x = tf.math.asin(y)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fb62e61562cfc798d007ffb505d7c927be8a3767" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../math/atan&quot;&gt;&lt;code&gt;tf.math.atan&lt;/code&gt;&lt;/a&gt; operation returns the inverse of &lt;a href=&quot;../math/tan&quot;&gt;&lt;code&gt;tf.math.tan&lt;/code&gt;&lt;/a&gt;, such that if &lt;code&gt;y = tf.math.tan(x)&lt;/code&gt; then, &lt;code&gt;x = tf.math.atan(y)&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../math/atan&quot;&gt; &lt;code&gt;tf.math.atan&lt;/code&gt; &lt;/a&gt;操作リターンの逆&lt;a href=&quot;../math/tan&quot;&gt; &lt;code&gt;tf.math.tan&lt;/code&gt; &lt;/a&gt;、例えば、もし &lt;code&gt;y = tf.math.tan(x)&lt;/code&gt; 、次いで、 &lt;code&gt;x = tf.math.atan(y)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="01d2d82dc787cbf3a2ae3987bb1b5d16410bae2e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../v1&quot;&gt;&lt;code&gt;compat.v1&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../v2&quot;&gt;&lt;code&gt;compat.v2&lt;/code&gt;&lt;/a&gt; submodules provide a complete copy of both the &lt;a href=&quot;../v1&quot;&gt;&lt;code&gt;v1&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../v2&quot;&gt;&lt;code&gt;v2&lt;/code&gt;&lt;/a&gt; APIs for backwards and forwards compatibility across TensorFlow versions 1.x and 2.x. See the &lt;a href=&quot;https://www.tensorflow.org/guide/migrate&quot;&gt;migration guide&lt;/a&gt; for details.</source>
          <target state="translated">&lt;a href=&quot;../v1&quot;&gt; &lt;code&gt;compat.v1&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../v2&quot;&gt; &lt;code&gt;compat.v2&lt;/code&gt; &lt;/a&gt;サブモジュールは、両方の完全なコピーを提供&lt;a href=&quot;../v1&quot;&gt; &lt;code&gt;v1&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../v2&quot;&gt; &lt;code&gt;v2&lt;/code&gt; &lt;/a&gt; TensorFlowのバージョン1.xおよび2.xの間で前後に互換性のためのAPIを 詳細については、&lt;a href=&quot;https://www.tensorflow.org/guide/migrate&quot;&gt;移行ガイド&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="988e4c84f8c74714ed58270532749c9a06a1161b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../v1&quot;&gt;&lt;code&gt;compat.v1&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;compat.v2&lt;/code&gt; submodules provide a complete copy of both the &lt;a href=&quot;../v1&quot;&gt;&lt;code&gt;v1&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;v2&lt;/code&gt; APIs for backwards and forwards compatibility across TensorFlow versions 1.x and 2.x. See the &lt;a href=&quot;https://www.tensorflow.org/guide/migrate&quot;&gt;migration guide&lt;/a&gt; for details.</source>
          <target state="translated">&lt;a href=&quot;../v1&quot;&gt; &lt;code&gt;compat.v1&lt;/code&gt; &lt;/a&gt;と &lt;code&gt;compat.v2&lt;/code&gt; サブモジュールは、両方の完全なコピーを提供&lt;a href=&quot;../v1&quot;&gt; &lt;code&gt;v1&lt;/code&gt; &lt;/a&gt;と &lt;code&gt;v2&lt;/code&gt; TensorFlowのバージョン1.xおよび2.xの間で前後に互換性のためのAPIを 詳細については、&lt;a href=&quot;https://www.tensorflow.org/guide/migrate&quot;&gt;移行ガイド&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="fbe9cc0c9957673c491ce6d30fbea4a26885b807" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;as_dtype&quot;&gt;&lt;code&gt;tf.as_dtype()&lt;/code&gt;&lt;/a&gt; function converts numpy types and string type names to a &lt;code&gt;DType&lt;/code&gt; object.</source>
          <target state="translated">&lt;a href=&quot;as_dtype&quot;&gt; &lt;code&gt;tf.as_dtype()&lt;/code&gt; &lt;/a&gt;関数は、にnumpyの種類と文字列型の名前を変換 &lt;code&gt;DType&lt;/code&gt; オブジェクト。</target>
        </trans-unit>
        <trans-unit id="32f6a4f580c3c6e3fc936c05d3cb6e72f0b9bb8c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;asin&quot;&gt;&lt;code&gt;tf.math.asin&lt;/code&gt;&lt;/a&gt; operation returns the inverse of &lt;a href=&quot;sin&quot;&gt;&lt;code&gt;tf.math.sin&lt;/code&gt;&lt;/a&gt;, such that if &lt;code&gt;y = tf.math.sin(x)&lt;/code&gt; then, &lt;code&gt;x = tf.math.asin(y)&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;asin&quot;&gt; &lt;code&gt;tf.math.asin&lt;/code&gt; の&lt;/a&gt;運転復帰の逆&lt;a href=&quot;sin&quot;&gt; &lt;code&gt;tf.math.sin&lt;/code&gt; &lt;/a&gt;、例えば、もし &lt;code&gt;y = tf.math.sin(x)&lt;/code&gt; 、次いで、 &lt;code&gt;x = tf.math.asin(y)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1fe608389d1e1d156ec65aaf39eda66bf4b6d78b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;atan&quot;&gt;&lt;code&gt;tf.math.atan&lt;/code&gt;&lt;/a&gt; operation returns the inverse of &lt;a href=&quot;tan&quot;&gt;&lt;code&gt;tf.math.tan&lt;/code&gt;&lt;/a&gt;, such that if &lt;code&gt;y = tf.math.tan(x)&lt;/code&gt; then, &lt;code&gt;x = tf.math.atan(y)&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;atan&quot;&gt; &lt;code&gt;tf.math.atan&lt;/code&gt; &lt;/a&gt;操作リターンの逆&lt;a href=&quot;tan&quot;&gt; &lt;code&gt;tf.math.tan&lt;/code&gt; &lt;/a&gt;、例えば、もし &lt;code&gt;y = tf.math.tan(x)&lt;/code&gt; 、次いで、 &lt;code&gt;x = tf.math.atan(y)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7383c15524c25652a8be0c20b2757d2d4dcf2ab3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;checkpoint&quot;&gt;&lt;code&gt;tf.train.Checkpoint&lt;/code&gt;&lt;/a&gt; instance to save and manage checkpoints for.</source>
          <target state="translated">チェックポイントを保存および管理するための&lt;a href=&quot;checkpoint&quot;&gt; &lt;code&gt;tf.train.Checkpoint&lt;/code&gt; &lt;/a&gt;インスタンス。</target>
        </trans-unit>
        <trans-unit id="7434949d112760b2d99fef94744aa31346652af1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;cluster_resolver/clusterresolver&quot;&gt;&lt;code&gt;tf.distribute.cluster_resolver.ClusterResolver&lt;/code&gt;&lt;/a&gt; may be useful when the user needs to access information such as the cluster spec, task type or task id. For example,</source>
          <target state="translated">&lt;a href=&quot;cluster_resolver/clusterresolver&quot;&gt; &lt;code&gt;tf.distribute.cluster_resolver.ClusterResolver&lt;/code&gt; は、&lt;/a&gt;ユーザは、クラスタ仕様、タスクタイプまたはタスクIDとアクセス情報を必要なときに有用であり得ます。例えば、</target>
        </trans-unit>
        <trans-unit id="377c0dfe96375de255d1078e440f823480e3a6ef" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;compat&quot;&gt;&lt;code&gt;tf.compat&lt;/code&gt;&lt;/a&gt; module contains two sets of compatibility functions.</source>
          <target state="translated">&lt;a href=&quot;compat&quot;&gt; &lt;code&gt;tf.compat&lt;/code&gt; &lt;/a&gt;モジュールは、互換性機能の二組を含んでいます。</target>
        </trans-unit>
        <trans-unit id="b3d73ba603d6fb92f75b91298f4942e6c40c7715" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;compat/v1&quot;&gt;&lt;code&gt;compat.v1&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;compat/v2&quot;&gt;&lt;code&gt;compat.v2&lt;/code&gt;&lt;/a&gt; submodules provide a complete copy of both the &lt;a href=&quot;compat/v1&quot;&gt;&lt;code&gt;v1&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;compat/v2&quot;&gt;&lt;code&gt;v2&lt;/code&gt;&lt;/a&gt; APIs for backwards and forwards compatibility across TensorFlow versions 1.x and 2.x. See the &lt;a href=&quot;https://www.tensorflow.org/guide/migrate&quot;&gt;migration guide&lt;/a&gt; for details.</source>
          <target state="translated">&lt;a href=&quot;compat/v1&quot;&gt; &lt;code&gt;compat.v1&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;compat/v2&quot;&gt; &lt;code&gt;compat.v2&lt;/code&gt; &lt;/a&gt;サブモジュールは、両方の完全なコピーを提供&lt;a href=&quot;compat/v1&quot;&gt; &lt;code&gt;v1&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;compat/v2&quot;&gt; &lt;code&gt;v2&lt;/code&gt; &lt;/a&gt; TensorFlowのバージョン1.xおよび2.xの間で前後に互換性のためのAPIを 詳細については、&lt;a href=&quot;https://www.tensorflow.org/guide/migrate&quot;&gt;移行ガイド&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="ca8181df14f66605275982b870e43d04f0771679" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;compat/v1&quot;&gt;&lt;code&gt;compat.v1&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;compat.v2&lt;/code&gt; submodules provide a complete copy of both the &lt;a href=&quot;compat/v1&quot;&gt;&lt;code&gt;v1&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;v2&lt;/code&gt; APIs for backwards and forwards compatibility across TensorFlow versions 1.x and 2.x. See the &lt;a href=&quot;https://www.tensorflow.org/guide/migrate&quot;&gt;migration guide&lt;/a&gt; for details.</source>
          <target state="translated">&lt;a href=&quot;compat/v1&quot;&gt; &lt;code&gt;compat.v1&lt;/code&gt; &lt;/a&gt;と &lt;code&gt;compat.v2&lt;/code&gt; サブモジュールは、両方の完全なコピーを提供&lt;a href=&quot;compat/v1&quot;&gt; &lt;code&gt;v1&lt;/code&gt; &lt;/a&gt;と &lt;code&gt;v2&lt;/code&gt; TensorFlowのバージョン1.xおよび2.xの間で前後に互換性のためのAPIを 詳細については、&lt;a href=&quot;https://www.tensorflow.org/guide/migrate&quot;&gt;移行ガイド&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="296ec246e39e89b77945b24475c46eb438f28485" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; API supports writing descriptive and efficient input pipelines. &lt;code&gt;Dataset&lt;/code&gt; usage follows a common pattern:</source>
          <target state="translated">&lt;a href=&quot;dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; の&lt;/a&gt;記述と効率的な入力パイプラインを書き込みAPIがサポートします。 &lt;code&gt;Dataset&lt;/code&gt; 使用は一般的なパターンに従います。</target>
        </trans-unit>
        <trans-unit id="8c3d4e4e633551f12e713ed696a5627504df6738" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;dtypes/dtype&quot;&gt;&lt;code&gt;tf.dtypes.DType&lt;/code&gt;&lt;/a&gt; specified by this type for the SparseTensor.</source>
          <target state="translated">&lt;a href=&quot;dtypes/dtype&quot;&gt; &lt;code&gt;tf.dtypes.DType&lt;/code&gt; は&lt;/a&gt; SparseTensorのために、このタイプで指定されました。</target>
        </trans-unit>
        <trans-unit id="70d5ec6de5836f215309b5a86984ea31fb17eefc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.tensorflow.org/code/tensorflow/core/protobuf/config.proto&quot;&gt;&lt;code&gt;ConfigProto&lt;/code&gt;&lt;/a&gt; protocol buffer exposes various configuration options for a session. For example, to create a session that uses soft constraints for device placement, and log the resulting placement decisions, create a session as follows:</source>
          <target state="translated">&lt;a href=&quot;https://www.tensorflow.org/code/tensorflow/core/protobuf/config.proto&quot;&gt; &lt;code&gt;ConfigProto&lt;/code&gt; の&lt;/a&gt;プロトコルバッファは、セッションのための様々な設定オプションを公開します。たとえば、デバイス配置にソフト制約を使用するセッションを作成し、結果の配置決定をログに記録するには、次のようにセッションを作成します。</target>
        </trans-unit>
        <trans-unit id="c5070704459494efabd9de46ea247ae08b2267c2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;image&quot;&gt;&lt;code&gt;tf.image&lt;/code&gt;&lt;/a&gt; module contains various functions for image processing and decoding-encoding Ops.</source>
          <target state="translated">&lt;a href=&quot;image&quot;&gt; &lt;code&gt;tf.image&lt;/code&gt; の&lt;/a&gt;モジュールは、画像処理及び復号化コードオプスのための様々な機能を含んでいます。</target>
        </trans-unit>
        <trans-unit id="828225ce38f2c2861420ded59d51ee7ae52b80d6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;policy&quot;&gt;&lt;code&gt;tf.keras.mixed_precision.experimental.Policy&lt;/code&gt;&lt;/a&gt; of the layer.</source>
          <target state="translated">レイヤーの&lt;a href=&quot;policy&quot;&gt; &lt;code&gt;tf.keras.mixed_precision.experimental.Policy&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ee6db31a7766468eec0b350c9fc9a1f275e8fb70" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;reshape&quot;&gt;&lt;code&gt;tf.reshape&lt;/code&gt;&lt;/a&gt; does not change the order of or the total number of elements in the tensor, and so it can reuse the underlying data buffer. This makes it a fast operation independent of how big of a tensor it is operating on.</source>
          <target state="translated">&lt;a href=&quot;reshape&quot;&gt; &lt;code&gt;tf.reshape&lt;/code&gt; は&lt;/a&gt;順又はテンソルの要素の合計数を変更せず、基礎となるデータ・バッファを再利用できるように。これにより、操作しているテンソルの大きさに関係なく、高速な操作になります。</target>
        </trans-unit>
        <trans-unit id="7963552cb54b1ec49bf3619d53b5f98fe3bf0679" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;summary&quot;&gt;&lt;code&gt;tf.summary&lt;/code&gt;&lt;/a&gt; module provides APIs for writing summary data. This data can be visualized in TensorBoard, the visualization toolkit that comes with TensorFlow. See the &lt;a href=&quot;https://www.tensorflow.org/tensorboard&quot;&gt;TensorBoard website&lt;/a&gt; for more detailed tutorials about how to use these APIs, or some quick examples below.</source>
          <target state="translated">&lt;a href=&quot;summary&quot;&gt; &lt;code&gt;tf.summary&lt;/code&gt; &lt;/a&gt;モジュールは、要約データを書き込むためのAPIを提供します。このデータは、TensorFlowに付属する可視化ツールキットであるTensorBoardで可視化できます。これらのAPIの使用方法に関する詳細なチュートリアル、または以下の簡単な例については、&lt;a href=&quot;https://www.tensorflow.org/tensorboard&quot;&gt;TensorBoard Webサイト&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="3a28a188c3e8accbc6798bb8b1a1cc55ac7affc9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;summarywriter&quot;&gt;&lt;code&gt;tf.summary.SummaryWriter&lt;/code&gt;&lt;/a&gt; resource to flush. The thread default will be used if this parameter is None. Otherwise a &lt;a href=&quot;../no_op&quot;&gt;&lt;code&gt;tf.no_op&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">&lt;a href=&quot;summarywriter&quot;&gt; &lt;code&gt;tf.summary.SummaryWriter&lt;/code&gt; の&lt;/a&gt;リソースをフラッシュします。このパラメーターがNoneの場合、スレッドのデフォルトが使用されます。それ以外の場合は、&lt;a href=&quot;../no_op&quot;&gt; &lt;code&gt;tf.no_op&lt;/code&gt; &lt;/a&gt;が返されます。</target>
        </trans-unit>
        <trans-unit id="24f9ea8adfa7610b42fddb644a5a51e051b8eaa7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;tensorshape&quot;&gt;&lt;code&gt;tf.TensorShape&lt;/code&gt;&lt;/a&gt; of elements in this TensorArray.</source>
          <target state="translated">この&lt;a href=&quot;tensorshape&quot;&gt; &lt;code&gt;tf.TensorShape&lt;/code&gt; &lt;/a&gt;の要素のtf.TensorShape。</target>
        </trans-unit>
        <trans-unit id="04e6781a375d8a3c0003a07e94ac44bcb3e616e5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;tensorshape&quot;&gt;&lt;code&gt;tf.TensorShape&lt;/code&gt;&lt;/a&gt; specified by this type for the SparseTensor.</source>
          <target state="translated">&lt;a href=&quot;tensorshape&quot;&gt; &lt;code&gt;tf.TensorShape&lt;/code&gt; は&lt;/a&gt; SparseTensorのために、このタイプで指定されました。</target>
        </trans-unit>
        <trans-unit id="66692c6576fc19dc600e497055779a41aa378ba7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AUTOGRAPH_VERBOSITY&lt;/code&gt; environment variable</source>
          <target state="translated">&lt;code&gt;AUTOGRAPH_VERBOSITY&lt;/code&gt; の環境変数</target>
        </trans-unit>
        <trans-unit id="5dca74f64b67802ef6255942a005b4b0e987ede6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;D&lt;/code&gt; dimensional DFT of this kernel is the frequency domain spectrum of this operator.</source>
          <target state="translated">このカーネルの &lt;code&gt;D&lt;/code&gt; 次元DFTは、この演算子の周波数領域スペクトルです。</target>
        </trans-unit>
        <trans-unit id="66b37f1319974cb5f0fa3b6a811c37b0c0727341" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DType&lt;/code&gt; of &lt;code&gt;Tensor&lt;/code&gt;s handled by this &lt;code&gt;Distribution&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DType&lt;/code&gt; の &lt;code&gt;Tensor&lt;/code&gt; 、このによって処理さsを &lt;code&gt;Distribution&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6bb640578d6cd791bb5862104fe6d0205745975e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DType&lt;/code&gt; of &lt;code&gt;Tensor&lt;/code&gt;s handled by this &lt;code&gt;LinearOperator&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DType&lt;/code&gt; の &lt;code&gt;Tensor&lt;/code&gt; sがこのによって処理さ &lt;code&gt;LinearOperator&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d9d4756bd9db645b28103af34e5194ce4953cfef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DType&lt;/code&gt; of elements in this tensor.</source>
          <target state="translated">このテンソルの要素の &lt;code&gt;DType&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="75ee899d1ba59ad3ee99fc46d3b07ccd0b0595f8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DType&lt;/code&gt; of the result matrix. Must be a floating point type.</source>
          <target state="translated">結果行列の &lt;code&gt;DType&lt;/code&gt; 。浮動小数点型である必要があります。</target>
        </trans-unit>
        <trans-unit id="b5ab67eadac883aa6725083774a80ae7132a5bd6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DType&lt;/code&gt; of this variable.</source>
          <target state="translated">この変数の &lt;code&gt;DType&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="53e90665615d6d49947adc54462569d15bfa77ff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DType&lt;/code&gt; of values in this tensor.</source>
          <target state="translated">このテンソルの値の &lt;code&gt;DType&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="002dd8c89bb7df3616a476af70ae5059fd25b6ed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Dataset&lt;/code&gt; containing the elements of this dataset for which &lt;code&gt;predicate&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Dataset&lt;/code&gt; そのため、このデータセットの要素を含む &lt;code&gt;predicate&lt;/code&gt; ある &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ee4829a0c603daeed835711034774800b5049669" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Dataset&lt;/code&gt; returned by applying &lt;code&gt;transformation_func&lt;/code&gt; to this dataset.</source>
          <target state="translated">この &lt;code&gt;Dataset&lt;/code&gt; に &lt;code&gt;transformation_func&lt;/code&gt; を適用して返されたデータセット。</target>
        </trans-unit>
        <trans-unit id="b7a67bba30f7a7c9709251275c277fca1bfce8ef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DeviceSpec&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DeviceSpec&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a0310f14b96c9ed2b643415080c07ecfa0544c1f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Estimator&lt;/code&gt; object wraps a model which is specified by a &lt;code&gt;model_fn&lt;/code&gt;, which, given inputs and a number of other parameters, returns the ops necessary to perform training, evaluation, or predictions.</source>
          <target state="translated">&lt;code&gt;Estimator&lt;/code&gt; オブジェクトは、で指定されたモデルラップ &lt;code&gt;model_fn&lt;/code&gt; 、入力および他のパラメータの数が与えられると、訓練、評価、又は予測を行うために必要なオペレーションを返します。</target>
        </trans-unit>
        <trans-unit id="196e0cebbe1e15bfa0065abbfc42918c9e99edb0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FileWriter&lt;/code&gt; class provides a mechanism to create an event file in a given directory and add summaries and events to it. The class updates the file contents asynchronously. This allows a training program to call methods to add data to the file directly from the training loop, without slowing down training.</source>
          <target state="translated">&lt;code&gt;FileWriter&lt;/code&gt; クラスは、指定されたディレクトリ内のイベントファイルを作成し、それを要約して、イベントを追加するためのメカニズムを提供します。クラスは非同期でファイルの内容を更新します。これにより、トレーニングプログラムはメソッドを呼び出して、トレーニングを遅くすることなく、トレーニングループから直接データをファイルに追加できます。</target>
        </trans-unit>
        <trans-unit id="196ae7d5b42d47f46f7482c41ead4515ecb54223" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Graph&lt;/code&gt; of this variable.</source>
          <target state="translated">この変数の &lt;code&gt;Graph&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="584ca58bfd11413a8b78de2539e6a0dc60006c1e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Graph&lt;/code&gt; that contains the index, value, and dense_shape tensors.</source>
          <target state="translated">&lt;code&gt;Graph&lt;/code&gt; 指標、値、およびdense_shapeテンソルが含まれています。</target>
        </trans-unit>
        <trans-unit id="5ca109a80501f1caf39360f020e2482be69cd6ee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Graph&lt;/code&gt; that contains the values, indices, and shape tensors.</source>
          <target state="translated">&lt;code&gt;Graph&lt;/code&gt; 値は、指数、及び形状テンソルを含有します。</target>
        </trans-unit>
        <trans-unit id="a3f124e19ecf06b5bede3c16429a910c11d7deff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Graph&lt;/code&gt; that contains this operation.</source>
          <target state="translated">&lt;code&gt;Graph&lt;/code&gt; この操作が含まれています。</target>
        </trans-unit>
        <trans-unit id="ca5e3e755e232a9bd4baefb017c11720d3cb6b8d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Graph&lt;/code&gt; that contains this tensor.</source>
          <target state="translated">&lt;code&gt;Graph&lt;/code&gt; このテンソルが含まれています。</target>
        </trans-unit>
        <trans-unit id="759d796b4b952d2596b86361f4e9520455ee1328" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Graph&lt;/code&gt; that the model will use.</source>
          <target state="translated">&lt;code&gt;Graph&lt;/code&gt; モデルが使用します。</target>
        </trans-unit>
        <trans-unit id="12834f0b5daa034b0698702e55e41fb711279722" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Graph&lt;/code&gt; to export. If &lt;code&gt;None&lt;/code&gt;, use the default graph.</source>
          <target state="translated">&lt;code&gt;Graph&lt;/code&gt; 輸出へ。 &lt;code&gt;None&lt;/code&gt; の場合、デフォルトのグラフを使用します。</target>
        </trans-unit>
        <trans-unit id="3a0f37ad85dc252ac5925abfae634853c02e8afc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GraphDef&lt;/code&gt; we expected.</source>
          <target state="translated">&lt;code&gt;GraphDef&lt;/code&gt; 我々が期待しました。</target>
        </trans-unit>
        <trans-unit id="b6d5d9570275d3383af7721887493926bb28e6bb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GraphDef&lt;/code&gt; we have.</source>
          <target state="translated">&lt;code&gt;GraphDef&lt;/code&gt; 我々は持っています。</target>
        </trans-unit>
        <trans-unit id="ad04e8ed6553bb23d3fbb8f177dc964899bc3ca0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IndexedSlices&lt;/code&gt; class is used principally in the definition of gradients for operations that have sparse gradients (e.g. &lt;a href=&quot;gather&quot;&gt;&lt;code&gt;tf.gather&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;IndexedSlices&lt;/code&gt; クラスがまばらな勾配（例えば持っている操作のための勾配の定義に主に使用されている&lt;a href=&quot;gather&quot;&gt; &lt;code&gt;tf.gather&lt;/code&gt; を&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="c19abf24b90c56611a87677ee0e44c98b82b9a43" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Lambda&lt;/code&gt; layer exists so that arbitrary TensorFlow functions can be used when constructing &lt;code&gt;Sequential&lt;/code&gt; and Functional API models. &lt;code&gt;Lambda&lt;/code&gt; layers are best suited for simple operations or quick experimentation. For more advanced use cases, follow &lt;a href=&quot;https://www.tensorflow.org/guide/keras/custom_layers_and_models&quot;&gt;this guide&lt;/a&gt; for subclassing &lt;a href=&quot;layer&quot;&gt;&lt;code&gt;tf.keras.layers.Layer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Lambda&lt;/code&gt; 層を構築する際に、任意のTensorFlow機能が使用できるように存在している &lt;code&gt;Sequential&lt;/code&gt; および機能APIモデル。 &lt;code&gt;Lambda&lt;/code&gt; レイヤーは、簡単な操作や迅速な実験に最適です。より高度なユースケースについては、&lt;a href=&quot;https://www.tensorflow.org/guide/keras/custom_layers_and_models&quot;&gt;このガイド&lt;/a&gt;に従って&lt;a href=&quot;layer&quot;&gt; &lt;code&gt;tf.keras.layers.Layer&lt;/code&gt; &lt;/a&gt;をサブクラス化してください。</target>
        </trans-unit>
        <trans-unit id="b67dd6295f95267a6fd766fa43e3a4f8445ff608" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Lambda&lt;/code&gt; layer exists so that arbitrary TensorFlow functions can be used when constructing &lt;code&gt;Sequential&lt;/code&gt; and Functional API models. &lt;code&gt;Lambda&lt;/code&gt; layers are best suited for simple operations or quick experimentation. For more advanced usecases, follow &lt;a href=&quot;https://www.tensorflow.org/guide/keras/custom_layers_and_models&quot;&gt;this guide&lt;/a&gt; for subclassing &lt;a href=&quot;layer&quot;&gt;&lt;code&gt;tf.keras.layers.Layer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Lambda&lt;/code&gt; 層を構築する際に、任意のTensorFlow機能が使用できるように存在している &lt;code&gt;Sequential&lt;/code&gt; および機能APIモデル。 &lt;code&gt;Lambda&lt;/code&gt; レイヤーは、単純な操作や迅速な実験に最適です。より高度なユースケースについては、&lt;a href=&quot;https://www.tensorflow.org/guide/keras/custom_layers_and_models&quot;&gt;このガイド&lt;/a&gt;に従って&lt;a href=&quot;layer&quot;&gt; &lt;code&gt;tf.keras.layers.Layer&lt;/code&gt; &lt;/a&gt;をサブクラス化してください。</target>
        </trans-unit>
        <trans-unit id="12b734c9cea4d788668e7d42b41afdea642fee23" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LinearOperatorIdentity&lt;/code&gt; is initialized with arguments defining &lt;code&gt;dtype&lt;/code&gt; and shape.</source>
          <target state="translated">&lt;code&gt;LinearOperatorIdentity&lt;/code&gt; を定義する引数で初期化され &lt;code&gt;dtype&lt;/code&gt; と形状を。</target>
        </trans-unit>
        <trans-unit id="d73311c5178545cf753217309588019e38f9d709" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LinearOperatorScaledIdentity&lt;/code&gt; is initialized with &lt;code&gt;num_rows&lt;/code&gt;, which determines the size of each identity matrix, and a &lt;code&gt;multiplier&lt;/code&gt;, which defines &lt;code&gt;dtype&lt;/code&gt;, batch shape, and scale of each matrix.</source>
          <target state="translated">&lt;code&gt;LinearOperatorScaledIdentity&lt;/code&gt; を用いて初期化される &lt;code&gt;num_rows&lt;/code&gt; 各単位行列のサイズを決定し、及び &lt;code&gt;multiplier&lt;/code&gt; 定義は、 &lt;code&gt;dtype&lt;/code&gt; 各行列の、バッチ形状、およびスケール。</target>
        </trans-unit>
        <trans-unit id="b6a140a1c911bc07b4bf6bf40190ce8128dc1514" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LinearOperatorZeros&lt;/code&gt; is initialized with arguments defining &lt;code&gt;dtype&lt;/code&gt; and shape.</source>
          <target state="translated">&lt;code&gt;LinearOperatorZeros&lt;/code&gt; を定義する引数で初期化され &lt;code&gt;dtype&lt;/code&gt; と形状を。</target>
        </trans-unit>
        <trans-unit id="b1f24df7eab694b0f1703da39cd73b8c86b688da" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LocallyConnected1D&lt;/code&gt; layer works similarly to the &lt;code&gt;Conv1D&lt;/code&gt; layer, except that weights are unshared, that is, a different set of filters is applied at each different patch of the input.</source>
          <target state="translated">&lt;code&gt;LocallyConnected1D&lt;/code&gt; の層と同様に機能 &lt;code&gt;Conv1D&lt;/code&gt; の層、重みは非共有であることを除いて、すなわち、フィルタの異なるセットは、入力のそれぞれ異なるパッチで適用されます。</target>
        </trans-unit>
        <trans-unit id="70697b9bab37838191095266898ffadfd97d828c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LocallyConnected2D&lt;/code&gt; layer works similarly to the &lt;code&gt;Conv2D&lt;/code&gt; layer, except that weights are unshared, that is, a different set of filters is applied at each different patch of the input.</source>
          <target state="translated">&lt;code&gt;LocallyConnected2D&lt;/code&gt; の層と同様に機能 &lt;code&gt;Conv2D&lt;/code&gt; の層、重みは非共有であることを除いて、すなわち、フィルタの異なるセットは、入力のそれぞれ異なるパッチで適用されます。</target>
        </trans-unit>
        <trans-unit id="b8fa1143a320d647d8e801e00a58c7e05a50565b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LossScale&lt;/code&gt; instance associated with this optimizer.</source>
          <target state="translated">&lt;code&gt;LossScale&lt;/code&gt; のこのオプティマイザに関連付けられたインスタンス。</target>
        </trans-unit>
        <trans-unit id="98a41775ad95ce382b63a77e41954693dabb7a8c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MetaGraphDef&lt;/code&gt; allows running the given graph via &lt;code&gt;saver.import_meta_graph()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MetaGraphDef&lt;/code&gt; を介して与えられるグラフを実行可能 &lt;code&gt;saver.import_meta_graph()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1d513aeb35380001cdceb5f916046f228692a7e2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MetaGraphDef&lt;/code&gt; protocol buffer loaded in the provided session. This can be used to further extract signature-defs, collection-defs, etc.</source>
          <target state="translated">&lt;code&gt;MetaGraphDef&lt;/code&gt; の提供セッションにロードされたプロトコルバッファ。これは、signature-defs、collection-defsなどをさらに抽出するために使用できます。</target>
        </trans-unit>
        <trans-unit id="0a898b11561ca53e71dbc4e0e1c53c10f9194a13" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MethodNameUpdater&lt;/code&gt; class provides the functionality to update the method name field in the signature_defs of the given SavedModel. For example, it can be used to replace the &lt;code&gt;predict&lt;/code&gt;&lt;code&gt;method_name&lt;/code&gt; to &lt;code&gt;regress&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MethodNameUpdater&lt;/code&gt; のクラスは、与えられたSavedModelのsignature_defsでメソッド名のフィールドを更新する機能を提供します。例えば、交換するために使用することができます &lt;code&gt;predict&lt;/code&gt; &lt;code&gt;method_name&lt;/code&gt; に &lt;code&gt;regress&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d7d321601f5768b6abd214deca3a0d8d37c530ba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Model&lt;/code&gt; these callbacks are used with.</source>
          <target state="translated">&lt;code&gt;Model&lt;/code&gt; これらのコールバックがで使用されています。</target>
        </trans-unit>
        <trans-unit id="cb465f350147752217292b36e4f6e8af3b681307" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NodeDef&lt;/code&gt; proto representing the op that failed.</source>
          <target state="translated">&lt;code&gt;NodeDef&lt;/code&gt; は失敗したオペアンプを表すPROTO。</target>
        </trans-unit>
        <trans-unit id="ff313cdcfce21b44585ea5f9a91a7a3dc6de0178" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Operation&lt;/code&gt; objects on which this op has a control dependency.</source>
          <target state="translated">この &lt;code&gt;Operation&lt;/code&gt; がコントロールに依存するOperationオブジェクト。</target>
        </trans-unit>
        <trans-unit id="87fc441eb7b6054082173c9f1ab6bf4c42c56cd4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Operation&lt;/code&gt; of this variable.</source>
          <target state="translated">この変数の &lt;code&gt;Operation&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4a9cda719e59cf9091cbf0d01fc46d4aaf72fff1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Operation&lt;/code&gt; that failed, or None.</source>
          <target state="translated">&lt;code&gt;Operation&lt;/code&gt; 失敗した、またはNone。</target>
        </trans-unit>
        <trans-unit id="438a9dc8c58e4a098826c43ea413784f9b3995d6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Operation&lt;/code&gt; that produces &lt;code&gt;values&lt;/code&gt; as an output.</source>
          <target state="translated">&lt;code&gt;Operation&lt;/code&gt; 生成 &lt;code&gt;values&lt;/code&gt; 出力として。</target>
        </trans-unit>
        <trans-unit id="b9d068224c3abe35b7ed380528fe996c78ebd4f5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Operation&lt;/code&gt; that produces this tensor as an output.</source>
          <target state="translated">&lt;code&gt;Operation&lt;/code&gt; 出力として、このテンソルを生成します。</target>
        </trans-unit>
        <trans-unit id="6f8ca71f67bffa4b0033f109d8e6e570e0590a7d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Operation&lt;/code&gt; type to create. This corresponds to the &lt;code&gt;OpDef.name&lt;/code&gt; field for the proto that defines the operation.</source>
          <target state="translated">&lt;code&gt;Operation&lt;/code&gt; タイプを作成します。これは、操作を定義するプロトの &lt;code&gt;OpDef.name&lt;/code&gt; フィールドに対応します。</target>
        </trans-unit>
        <trans-unit id="05c1129e9d0be24dc0a8495f7e24b9eaf32d0723" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Operation&lt;/code&gt; with the given &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;name&lt;/code&gt; の &lt;code&gt;Operation&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ae052b5d764dae51c83f77445f8c559127d647cd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PhysicalDevice&lt;/code&gt; to configure.</source>
          <target state="translated">&lt;code&gt;PhysicalDevice&lt;/code&gt; 設定します。</target>
        </trans-unit>
        <trans-unit id="207e00a2d0ea7a2feedfe3c413469ac89cde7bb0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;QueueRunner&lt;/code&gt;, combined with the &lt;code&gt;Coordinator&lt;/code&gt;, helps handle these issues.</source>
          <target state="translated">&lt;code&gt;QueueRunner&lt;/code&gt; と組み合わせて、 &lt;code&gt;Coordinator&lt;/code&gt; 、これらの問題を扱うことができます。</target>
        </trans-unit>
        <trans-unit id="c6875e1876426bfecf07e4b4acdb8ea569eea6f3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SavedModel&lt;/code&gt; contains:</source>
          <target state="translated">&lt;code&gt;SavedModel&lt;/code&gt; は含まれています：</target>
        </trans-unit>
        <trans-unit id="6f4f2790a6a7f05dc0c928fcd21f48c92ded1ee8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SavedModel&lt;/code&gt; saved by the &lt;code&gt;export_saved_model&lt;/code&gt; method does not include the cluster centers. However, the cluster centers may be retrieved by the latest checkpoint saved during training. Specifically,</source>
          <target state="translated">&lt;code&gt;SavedModel&lt;/code&gt; はで保存された &lt;code&gt;export_saved_model&lt;/code&gt; の方法クラスタの中心を含んでいません。ただし、クラスターセンターは、トレーニング中に保存された最新のチェックポイントによって取得できます。具体的には</target>
        </trans-unit>
        <trans-unit id="e6039bfa2164055554cd488d18e16d9f34bf9b47" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SavedModelBuilder&lt;/code&gt; class provides functionality to build a &lt;code&gt;SavedModel&lt;/code&gt; protocol buffer. Specifically, this allows multiple meta graphs to be saved as part of a single language-neutral &lt;code&gt;SavedModel&lt;/code&gt;, while sharing variables and assets.</source>
          <target state="translated">&lt;code&gt;SavedModelBuilder&lt;/code&gt; のクラスは、構築するための機能を提供し &lt;code&gt;SavedModel&lt;/code&gt; のプロトコルバッファを。具体的には、これにより、変数とアセットを共有しながら、 &lt;code&gt;SavedModel&lt;/code&gt; 単一の言語に依存しないSavedModelの一部として保存できます。</target>
        </trans-unit>
        <trans-unit id="7cd194d774bf843726a9b31fd8c5760738d54965" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Saver&lt;/code&gt; class adds ops to save and restore variables to and from &lt;em&gt;checkpoints&lt;/em&gt;. It also provides convenience methods to run these ops.</source>
          <target state="translated">&lt;code&gt;Saver&lt;/code&gt; クラスを保存し、にしてから変数を復元するためにOPSを追加し&lt;em&gt;、チェックポイント&lt;/em&gt;。また、これらの操作を実行するための便利なメソッドも提供します。</target>
        </trans-unit>
        <trans-unit id="20d59bb6bfa83ff7c6db0ed3d04afcb2605b70d8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SparseTensor&lt;/code&gt; can then be read out as part of a minibatch by passing the key as a vector element to &lt;code&gt;TakeManySparseFromTensorsMap&lt;/code&gt;. To ensure the correct &lt;code&gt;SparseTensorsMap&lt;/code&gt; is accessed, ensure that the same &lt;code&gt;container&lt;/code&gt; and &lt;code&gt;shared_name&lt;/code&gt; are passed to that Op. If no &lt;code&gt;shared_name&lt;/code&gt; is provided here, instead use the &lt;em&gt;name&lt;/em&gt; of the Operation created by calling &lt;code&gt;AddSparseToTensorsMap&lt;/code&gt; as the &lt;code&gt;shared_name&lt;/code&gt; passed to &lt;code&gt;TakeManySparseFromTensorsMap&lt;/code&gt;. Ensure the Operations are colocated.</source>
          <target state="translated">&lt;code&gt;SparseTensor&lt;/code&gt; はその後に、ベクトル要素としてのキー渡すことによってminibatchの一部として読み出すことができる &lt;code&gt;TakeManySparseFromTensorsMap&lt;/code&gt; を。正しい &lt;code&gt;SparseTensorsMap&lt;/code&gt; にアクセスできるようにするには、同じ &lt;code&gt;container&lt;/code&gt; と &lt;code&gt;shared_name&lt;/code&gt; がそのOpに渡されていることを確認してください。何場合 &lt;code&gt;shared_name&lt;/code&gt; がここで提供されていない、代わりに使う&lt;em&gt;名前&lt;/em&gt;動作を呼び出すことによって作成された &lt;code&gt;AddSparseToTensorsMap&lt;/code&gt; として &lt;code&gt;shared_name&lt;/code&gt; に渡さ &lt;code&gt;TakeManySparseFromTensorsMap&lt;/code&gt; を。オペレーションが同じ場所に配置されていることを確認します。</target>
        </trans-unit>
        <trans-unit id="e408353ec897db2100239f8ae8da9071b4cc1520" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SparseTensor&lt;/code&gt; must have rank &lt;code&gt;R&lt;/code&gt; greater than 1, and the first dimension is treated as the minibatch dimension. Elements of the &lt;code&gt;SparseTensor&lt;/code&gt; must be sorted in increasing order of this first dimension. The serialized &lt;code&gt;SparseTensor&lt;/code&gt; objects going into each row of &lt;code&gt;serialized_sparse&lt;/code&gt; will have rank &lt;code&gt;R-1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SparseTensor&lt;/code&gt; はランク持っている必要があり &lt;code&gt;R&lt;/code&gt; が1よりも大きいが、第一次元はminibatch次元として扱われます。 &lt;code&gt;SparseTensor&lt;/code&gt; の要素は、この最初の次元の昇順で並べ替える必要があります。シリアル化 &lt;code&gt;SparseTensor&lt;/code&gt; は、各列に入るオブジェクト &lt;code&gt;serialized_sparse&lt;/code&gt; ランク有するであろう &lt;code&gt;R-1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4996fa4000c885aea5b079a558bc6345b7b96a57" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SparseTensor&lt;/code&gt; must have rank &lt;code&gt;R&lt;/code&gt; greater than 1, and the first dimension is treated as the minibatch dimension. Elements of the &lt;code&gt;SparseTensor&lt;/code&gt; must be sorted in increasing order of this first dimension. The serialized &lt;code&gt;SparseTensor&lt;/code&gt; objects going into each row of the output &lt;code&gt;Tensor&lt;/code&gt; will have rank &lt;code&gt;R-1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SparseTensor&lt;/code&gt; はランク持っている必要があり &lt;code&gt;R&lt;/code&gt; が 1よりも大きいが、第一次元はminibatch次元として扱われます。 &lt;code&gt;SparseTensor&lt;/code&gt; の要素は、この最初の次元の昇順で並べ替える必要があります。出力 &lt;code&gt;Tensor&lt;/code&gt; の各行に入るシリアル化された &lt;code&gt;SparseTensor&lt;/code&gt; オブジェクトは、ランク &lt;code&gt;R-1&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="b42219c4a7badee8ff4052cb167c2aad9136d9f3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SparseTensor&lt;/code&gt; returned by this function has the following properties:</source>
          <target state="translated">&lt;code&gt;SparseTensor&lt;/code&gt; は、この関数によって返され、次のプロパティがあります。</target>
        </trans-unit>
        <trans-unit id="49917282a350971323ae841c4b9d435ada931dad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SparseTensor&lt;/code&gt; to split.</source>
          <target state="translated">&lt;code&gt;SparseTensor&lt;/code&gt; 分割します。</target>
        </trans-unit>
        <trans-unit id="947dab0c26a3057863d288f8b9978fb1f8fac21a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SparseTensor&lt;/code&gt; values can then be read out as part of a minibatch by passing the given keys as vector elements to &lt;code&gt;TakeManySparseFromTensorsMap&lt;/code&gt;. To ensure the correct &lt;code&gt;SparseTensorsMap&lt;/code&gt; is accessed, ensure that the same &lt;code&gt;container&lt;/code&gt; and &lt;code&gt;shared_name&lt;/code&gt; are passed to that Op. If no &lt;code&gt;shared_name&lt;/code&gt; is provided here, instead use the &lt;em&gt;name&lt;/em&gt; of the Operation created by calling &lt;code&gt;AddManySparseToTensorsMap&lt;/code&gt; as the &lt;code&gt;shared_name&lt;/code&gt; passed to &lt;code&gt;TakeManySparseFromTensorsMap&lt;/code&gt;. Ensure the Operations are colocated.</source>
          <target state="translated">&lt;code&gt;SparseTensor&lt;/code&gt; の値は、その後に、ベクトル要素として指定されたキーを渡すことによってminibatchの一部として読み出すことができる &lt;code&gt;TakeManySparseFromTensorsMap&lt;/code&gt; 。正しい &lt;code&gt;SparseTensorsMap&lt;/code&gt; にアクセスできるようにするには、同じ &lt;code&gt;container&lt;/code&gt; と &lt;code&gt;shared_name&lt;/code&gt; がそのOpに渡されていることを確認してください。何場合 &lt;code&gt;shared_name&lt;/code&gt; がここで提供されていない、代わりに使う&lt;em&gt;名前&lt;/em&gt;動作を呼び出すことによって作成された &lt;code&gt;AddManySparseToTensorsMap&lt;/code&gt; として &lt;code&gt;shared_name&lt;/code&gt; に渡さ &lt;code&gt;TakeManySparseFromTensorsMap&lt;/code&gt; を。オペレーションが同じ場所に配置されていることを確認します。</target>
        </trans-unit>
        <trans-unit id="ef8d47ae2cffd6a60717723743196db2da48e873" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SparseTensor&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SparseTensor&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eb84d767bf36de5116c226d433a45472c3fcd908" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Tensor&lt;/code&gt; from which to gather values. Must be at least rank &lt;code&gt;axis + 1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 値を収集するから。少なくともランク &lt;code&gt;axis + 1&lt;/code&gt; である必要があります。</target>
        </trans-unit>
        <trans-unit id="e61a9703a7b332edaa3d2a56d6128abb09ee039b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;Operation&lt;/code&gt; in the Graph corresponding to &lt;code&gt;obj&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;obj&lt;/code&gt; に対応するグラフの &lt;code&gt;Tensor&lt;/code&gt; または &lt;code&gt;Operation&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f6be4cc7d313052cfc6d80dad203087d37153e51" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Tensor&lt;/code&gt; to convert. Must have rank &lt;code&gt;ragged_rank + 1&lt;/code&gt; or higher.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 変換すること。ランク &lt;code&gt;ragged_rank + 1&lt;/code&gt; 以上である必要があります。</target>
        </trans-unit>
        <trans-unit id="4d80dc3d5783767a6f128de252a3040fe80eada2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Tensor&lt;/code&gt; to split.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 分割します。</target>
        </trans-unit>
        <trans-unit id="21aeac68c332c23a4035410d874f4d643b5e9753" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Tensor&lt;/code&gt; with the given &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;name&lt;/code&gt; の &lt;code&gt;Tensor&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="062bc5ef63073ebe0bba42c69dd60fbbac0ba11a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TensorShape&lt;/code&gt; of this variable.</source>
          <target state="translated">この変数の &lt;code&gt;TensorShape&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7d5f495d7cfc5ed68324d2dab206b4e7d15c1c2e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Variable()&lt;/code&gt; constructor requires an initial value for the variable, which can be a &lt;code&gt;Tensor&lt;/code&gt; of any type and shape. The initial value defines the type and shape of the variable. After construction, the type and shape of the variable are fixed. The value can be changed using one of the assign methods.</source>
          <target state="translated">&lt;code&gt;Variable()&lt;/code&gt; コンストラクタとすることができる変数の初期値が必要 &lt;code&gt;Tensor&lt;/code&gt; 任意のタイプおよび形状のを。初期値は、変数のタイプと形状を定義します。作成後、変数のタイプと形状は固定されます。値は、いずれかの割り当てメソッドを使用して変更できます。</target>
        </trans-unit>
        <trans-unit id="1083cab47ab61c7cdda4d83367b338d6c7e04350" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Variable()&lt;/code&gt; constructor requires an initial value for the variable, which can be a &lt;code&gt;Tensor&lt;/code&gt; of any type and shape. This initial value defines the type and shape of the variable. After construction, the type and shape of the variable are fixed. The value can be changed using one of the assign methods.</source>
          <target state="translated">&lt;code&gt;Variable()&lt;/code&gt; コンストラクタとすることができる変数の初期値が必要 &lt;code&gt;Tensor&lt;/code&gt; 任意のタイプおよび形状のを。この初期値は、変数のタイプと形状を定義します。作成後、変数のタイプと形状は固定されます。値は、いずれかの割り当てメソッドを使用して変更できます。</target>
        </trans-unit>
        <trans-unit id="127a5eff8bb10c7a9751d8d922f006229b0755c5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Variable&lt;/code&gt; for the slot if it was created, &lt;code&gt;None&lt;/code&gt; otherwise.</source>
          <target state="translated">スロットが作成された場合はその &lt;code&gt;Variable&lt;/code&gt; 、それ以外の場合は &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="368fe6644a57bbac64f15832c728e327af009d67" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Vocabulary&lt;/code&gt; object will performs the following mapping:</source>
          <target state="translated">&lt;code&gt;Vocabulary&lt;/code&gt; オブジェクトは、次のマッピングを行います。</target>
        </trans-unit>
        <trans-unit id="15c19d26fcfad74fc018f065f20a7fa6b9d26cfd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;X&lt;/code&gt; in &lt;code&gt;A @ X = RHS&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;X&lt;/code&gt; で &lt;code&gt;A @ X = RHS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="519c59ffc79a16af729e3142dd3abe9ca662d6c6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;accuracy&lt;/code&gt; function creates two local variables, &lt;code&gt;total&lt;/code&gt; and &lt;code&gt;count&lt;/code&gt; that are used to compute the frequency with which &lt;code&gt;predictions&lt;/code&gt; matches &lt;code&gt;labels&lt;/code&gt;. This frequency is ultimately returned as &lt;code&gt;accuracy&lt;/code&gt;: an idempotent operation that simply divides &lt;code&gt;total&lt;/code&gt; by &lt;code&gt;count&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;accuracy&lt;/code&gt; 関数は、2つのローカル変数、作成 &lt;code&gt;total&lt;/code&gt; と &lt;code&gt;count&lt;/code&gt; する頻度を計算するために使用される &lt;code&gt;predictions&lt;/code&gt; マッチ &lt;code&gt;labels&lt;/code&gt; 。この頻度は、最終的には &lt;code&gt;accuracy&lt;/code&gt; として返され &lt;code&gt;count&lt;/code&gt; 。 &lt;code&gt;total&lt;/code&gt; をカウントで単純に除算するべき等演算です。</target>
        </trans-unit>
        <trans-unit id="eb05150efdb907d6c2345164aacf0bfaba0751c2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;apply()&lt;/code&gt; method adds shadow copies of trained variables and add ops that maintain a moving average of the trained variables in their shadow copies. It is used when building the training model. The ops that maintain moving averages are typically run after each training step. The &lt;code&gt;average()&lt;/code&gt; and &lt;code&gt;average_name()&lt;/code&gt; methods give access to the shadow variables and their names. They are useful when building an evaluation model, or when restoring a model from a checkpoint file. They help use the moving averages in place of the last trained values for evaluations.</source>
          <target state="translated">&lt;code&gt;apply()&lt;/code&gt; メソッドは、訓練された変数のシャドウコピーを追加し、そのシャドウコピーに訓練された変数の移動平均を維持OPSを追加します。トレーニングモデルを構築するときに使用されます。移動平均を維持する操作は、通常、各トレーニングステップの後に実行されます。 &lt;code&gt;average()&lt;/code&gt; と &lt;code&gt;average_name()&lt;/code&gt; メソッドは、シャドウ変数とその名へのアクセスを与えます。これらは、評価モデルを構築するとき、またはチェックポイントファイルからモデルを復元するときに役立ちます。これらは、評価のために最後にトレーニングされた値の代わりに移動平均を使用するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="606eed9ef4b94263c255e5099fa91bbc0424bdd2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;apply()&lt;/code&gt; method has to be called to create shadow variables and add ops to maintain moving averages.</source>
          <target state="translated">&lt;code&gt;apply()&lt;/code&gt; メソッドは、シャドウ変数を作成し、移動平均を維持するためにOPSを追加するために呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="fc2517e9824df1742df7d5a7c8c3c56a268719aa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;auc&lt;/code&gt; function creates four local variables, &lt;code&gt;true_positives&lt;/code&gt;, &lt;code&gt;true_negatives&lt;/code&gt;, &lt;code&gt;false_positives&lt;/code&gt; and &lt;code&gt;false_negatives&lt;/code&gt; that are used to compute the AUC. To discretize the AUC curve, a linearly spaced set of thresholds is used to compute pairs of recall and precision values. The area under the ROC-curve is therefore computed using the height of the recall values by the false positive rate, while the area under the PR-curve is the computed using the height of the precision values by the recall.</source>
          <target state="translated">&lt;code&gt;auc&lt;/code&gt; 機能は、4つのローカル変数を作成し &lt;code&gt;true_positives&lt;/code&gt; 、 &lt;code&gt;true_negatives&lt;/code&gt; 、 &lt;code&gt;false_positives&lt;/code&gt; と &lt;code&gt;false_negatives&lt;/code&gt; AUCを計算するために使用されています。AUC曲線を離散化するには、線形間隔のしきい値のセットを使用して、再現率と精度の値のペアを計算します。したがって、ROC曲線の下の面積は、偽陽性率による再現値の高さを使用して計算され、PR曲線の下の面積は、再現値の精度値の高さを使用して計算されます。</target>
        </trans-unit>
        <trans-unit id="3fa0a25f6b40ef6dcf6f6a5e64ed998f56659d5e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;bad_color&lt;/code&gt; argument is the color to use in the generated images for non-finite input values. It is a &lt;code&gt;uint8&lt;/code&gt; 1-D tensor of length &lt;code&gt;channels&lt;/code&gt;. Each element must be in the range &lt;code&gt;[0, 255]&lt;/code&gt; (It represents the value of a pixel in the output image). Non-finite values in the input tensor are replaced by this tensor in the output image. The default value is the color red.</source>
          <target state="translated">&lt;code&gt;bad_color&lt;/code&gt; の引数が非有限の入力値に対して生成された画像に使用する色です。これは、長さ &lt;code&gt;channels&lt;/code&gt; &lt;code&gt;uint8&lt;/code&gt; 1 -Dテンソルです。各要素は &lt;code&gt;[0, 255]&lt;/code&gt; 範囲内にある必要があります（出力画像のピクセルの値を表します）。入力テンソルの非有限値は、出力画像のこのテンソルに置き換えられます。デフォルト値は赤です。</target>
        </trans-unit>
        <trans-unit id="8af58715c30e66d456c8d6905c0d5153fbdbbc7c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;band&lt;/code&gt; part is computed as follows: Assume &lt;code&gt;input&lt;/code&gt; has &lt;code&gt;k&lt;/code&gt; dimensions &lt;code&gt;[I, J, K, ..., M, N]&lt;/code&gt;, then the output is a tensor with the same shape where</source>
          <target state="translated">&lt;code&gt;band&lt;/code&gt; 次のように一部が計算されると仮定 &lt;code&gt;input&lt;/code&gt; 有する &lt;code&gt;k&lt;/code&gt; 個の寸法 &lt;code&gt;[I, J, K, ..., M, N]&lt;/code&gt; 、出力は、ここで同じ形状のテンソルであり、</target>
        </trans-unit>
        <trans-unit id="c1eb08b43ce7219e68f0c3bd3c76b2d17d8da595" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;branch_fns&lt;/code&gt; parameter is either a dict from &lt;code&gt;int&lt;/code&gt; to callables, or list of (&lt;code&gt;int&lt;/code&gt;, callable) pairs, or simply a list of callables (in which case the index is implicitly the key). The &lt;code&gt;branch_index&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; is used to select an element in &lt;code&gt;branch_fns&lt;/code&gt; with matching &lt;code&gt;int&lt;/code&gt; key, falling back to &lt;code&gt;default&lt;/code&gt; if none match, or &lt;code&gt;max(keys)&lt;/code&gt; if no &lt;code&gt;default&lt;/code&gt; is provided. The keys must form a contiguous set from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;len(branch_fns) - 1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;branch_fns&lt;/code&gt; から辞書のいずれかであるパラメータ &lt;code&gt;int&lt;/code&gt; 呼び出し可能に、または（のリスト &lt;code&gt;int&lt;/code&gt; 、呼び出し可能）ペア、または単に（インデックスが暗黙の鍵である場合）呼び出し可能オブジェクトのリスト。 &lt;code&gt;branch_index&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; の要素を選択するために使用される &lt;code&gt;branch_fns&lt;/code&gt; 一致すると &lt;code&gt;int&lt;/code&gt; 型に戻って立ち下がり、キーを &lt;code&gt;default&lt;/code&gt; なし一致する場合、または &lt;code&gt;max(keys)&lt;/code&gt; ない場合 &lt;code&gt;default&lt;/code&gt; 提供されません。キーは &lt;code&gt;0&lt;/code&gt; から &lt;code&gt;len(branch_fns) - 1&lt;/code&gt; -1までの連続したセットを形成する必要があります。</target>
        </trans-unit>
        <trans-unit id="191ea315ef50769cbc5f21b205a7c35e5f727b01" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;capacity&lt;/code&gt; argument controls the how long the prefetching is allowed to grow the queues.</source>
          <target state="translated">&lt;code&gt;capacity&lt;/code&gt; 引数は、プリフェッチがキューを成長させる期間を制御します。</target>
        </trans-unit>
        <trans-unit id="90470bf7983fc786e9b2f478b52410df3cb933b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;compact&lt;/code&gt; format is recommended as the one with best performance. In case you need to cast a tensor into a compact format manually, use &lt;a href=&quot;../gather_nd&quot;&gt;&lt;code&gt;tf.gather_nd&lt;/code&gt;&lt;/a&gt;. An example for a tensor of shape [m, m]:</source>
          <target state="translated">&lt;code&gt;compact&lt;/code&gt; フォーマットは、最高の性能を持つものとして推奨されています。テンソルをコンパクトフォーマットに手動でキャストする必要がある場合は、&lt;a href=&quot;../gather_nd&quot;&gt; &lt;code&gt;tf.gather_nd&lt;/code&gt; を&lt;/a&gt;使用します。形状[m、m]のテンソルの例：</target>
        </trans-unit>
        <trans-unit id="97f57a9366600ee779830b27b2d179f2f5db2b92" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;concentration&lt;/code&gt; represents mean total counts of class occurrence, i.e.,</source>
          <target state="translated">&lt;code&gt;concentration&lt;/code&gt; 、すなわちクラスの発生、の平均合計数を表し</target>
        </trans-unit>
        <trans-unit id="9c6e5ba01c6a262d3caec134364aed5a4ee8d794" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;condition&lt;/code&gt; tensor acts as a mask that chooses whether the corresponding element / row in the output should be taken from &lt;code&gt;x&lt;/code&gt; (if the element in &lt;code&gt;condition is True) or&lt;/code&gt;y` (if it is false).</source>
          <target state="translated">&lt;code&gt;condition&lt;/code&gt; テンソルをマスクとして作用する出力の対応する要素/行がから取らなければならないかどうかを選択し &lt;code&gt;x&lt;/code&gt; （の要素場合 &lt;code&gt;condition is True) or&lt;/code&gt; y`（それが偽である場合）。</target>
        </trans-unit>
        <trans-unit id="01ab58045b90ae07778088607a3eab393fc1bb6a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;condition&lt;/code&gt; tensor acts as a mask that chooses, based on the value at each element, whether the corresponding element / row in the output should be taken from &lt;code&gt;x&lt;/code&gt; (if true) or &lt;code&gt;y&lt;/code&gt; (if false).</source>
          <target state="translated">&lt;code&gt;condition&lt;/code&gt; テンソルは、出力に対応する要素/列から取るべきかどうかを各要素の値に基づいて選択し、そのマスクとして作用する &lt;code&gt;x&lt;/code&gt; （trueの場合）または &lt;code&gt;y&lt;/code&gt; （falseの場合）。</target>
        </trans-unit>
        <trans-unit id="facc94a32b1104f4cf40a2df2cff62adde7bf05f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;condition&lt;/code&gt; tensor must be a scalar if &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are scalars. If &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are vectors or higher rank, then &lt;code&gt;condition&lt;/code&gt; must be either a scalar, a vector with size matching the first dimension of &lt;code&gt;x&lt;/code&gt;, or must have the same shape as &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;condition&lt;/code&gt; 場合テンソルは、スカラである必要があり &lt;code&gt;x&lt;/code&gt; 及び &lt;code&gt;y&lt;/code&gt; スカラーです。場合 &lt;code&gt;x&lt;/code&gt; と &lt;code&gt;y&lt;/code&gt; ベクトル又は上位である場合、 &lt;code&gt;condition&lt;/code&gt; スカラー、最初の寸法に一致する寸法を有するベクターのいずれかでなければなら &lt;code&gt;x&lt;/code&gt; 、または同じ形状持っている必要があり &lt;code&gt;x&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9bfb9121150515c59120455c6322fe9bdac07ae9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;config&lt;/code&gt; argument can be passed &lt;a href=&quot;../../../estimator/runconfig&quot;&gt;&lt;code&gt;tf.estimator.RunConfig&lt;/code&gt;&lt;/a&gt; object containing information about the execution environment. It is passed on to the &lt;code&gt;model_fn&lt;/code&gt;, if the &lt;code&gt;model_fn&lt;/code&gt; has a parameter named &quot;config&quot; (and input functions in the same manner). If the &lt;code&gt;config&lt;/code&gt; parameter is not passed, it is instantiated by the &lt;code&gt;Estimator&lt;/code&gt;. Not passing config means that defaults useful for local execution are used. &lt;code&gt;Estimator&lt;/code&gt; makes config available to the model (for instance, to allow specialization based on the number of workers available), and also uses some of its fields to control internals, especially regarding checkpointing.</source>
          <target state="translated">&lt;code&gt;config&lt;/code&gt; 引数を渡すことができ&lt;a href=&quot;../../../estimator/runconfig&quot;&gt; &lt;code&gt;tf.estimator.RunConfig&lt;/code&gt; の&lt;/a&gt;実行環境に関する情報を含むオブジェクトを。これは、に渡され &lt;code&gt;model_fn&lt;/code&gt; 場合、 &lt;code&gt;model_fn&lt;/code&gt; は（同じようにして入力機能）「設定」という名前のパラメータがあります。場合は &lt;code&gt;config&lt;/code&gt; パラメータが渡されていない、それがによってインスタンス化される &lt;code&gt;Estimator&lt;/code&gt; 。 configを渡さないことは、ローカル実行に役立つデフォルトが使用されることを意味します。 &lt;code&gt;Estimator&lt;/code&gt; は、モデルでconfigを使用できるようにし（たとえば、使用可能なワーカーの数に基づいて特殊化できるようにする）、そのフィールドの一部を使用して、特にチェックポイントに関する内部を制御します。</target>
        </trans-unit>
        <trans-unit id="0bec4775822937a50bbd9f3cbf347be8160f7726" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;config&lt;/code&gt; argument can be passed &lt;a href=&quot;runconfig&quot;&gt;&lt;code&gt;tf.estimator.RunConfig&lt;/code&gt;&lt;/a&gt; object containing information about the execution environment. It is passed on to the &lt;code&gt;model_fn&lt;/code&gt;, if the &lt;code&gt;model_fn&lt;/code&gt; has a parameter named &quot;config&quot; (and input functions in the same manner). If the &lt;code&gt;config&lt;/code&gt; parameter is not passed, it is instantiated by the &lt;code&gt;Estimator&lt;/code&gt;. Not passing config means that defaults useful for local execution are used. &lt;code&gt;Estimator&lt;/code&gt; makes config available to the model (for instance, to allow specialization based on the number of workers available), and also uses some of its fields to control internals, especially regarding checkpointing.</source>
          <target state="translated">&lt;code&gt;config&lt;/code&gt; 引数を渡すことができ&lt;a href=&quot;runconfig&quot;&gt; &lt;code&gt;tf.estimator.RunConfig&lt;/code&gt; の&lt;/a&gt;実行環境に関する情報を含むオブジェクトを。これは、に渡され &lt;code&gt;model_fn&lt;/code&gt; 場合、 &lt;code&gt;model_fn&lt;/code&gt; は（同じようにして入力機能）「設定」という名前のパラメータがあります。場合は &lt;code&gt;config&lt;/code&gt; パラメータが渡されていない、それがによってインスタンス化される &lt;code&gt;Estimator&lt;/code&gt; 。 configを渡さないことは、ローカル実行に役立つデフォルトが使用されることを意味します。 &lt;code&gt;Estimator&lt;/code&gt; は、モデルでconfigを使用できるようにし（たとえば、使用可能なワーカーの数に基づいて特殊化できるようにする）、そのフィールドの一部を使用して、特にチェックポイントに関する内部を制御します。</target>
        </trans-unit>
        <trans-unit id="0aeca4b97eca00ef17635cebe947fcd9da586a15" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;context_features&lt;/code&gt; keys are associated with a &lt;code&gt;SequenceExample&lt;/code&gt; as a whole, independent of time / frame. In contrast, the &lt;code&gt;sequence_features&lt;/code&gt; keys provide a way to access variable-length data within the &lt;code&gt;FeatureList&lt;/code&gt; section of the &lt;code&gt;SequenceExample&lt;/code&gt; proto. While the shapes of &lt;code&gt;context_features&lt;/code&gt; values are fixed with respect to frame, the frame dimension (the first dimension) of &lt;code&gt;sequence_features&lt;/code&gt; values may vary between &lt;code&gt;SequenceExample&lt;/code&gt; protos, and even between &lt;code&gt;feature_list&lt;/code&gt; keys within the same &lt;code&gt;SequenceExample&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;context_features&lt;/code&gt; のキーが関連付けられている &lt;code&gt;SequenceExample&lt;/code&gt; 時間/フレームの全体、独立したとして。対照的に、 &lt;code&gt;sequence_features&lt;/code&gt; キーは、 &lt;code&gt;SequenceExample&lt;/code&gt; プロトの &lt;code&gt;FeatureList&lt;/code&gt; セクション内の可変長データにアクセスする方法を提供します。 &lt;code&gt;context_features&lt;/code&gt; 値の形状はフレームに関して固定されていますが、 &lt;code&gt;sequence_features&lt;/code&gt; 値のフレームディメンション（最初のディメンション）は、 &lt;code&gt;SequenceExample&lt;/code&gt; プロトの間で、さらには同じ &lt;code&gt;SequenceExample&lt;/code&gt; 内の &lt;code&gt;feature_list&lt;/code&gt; キーの間でも異なる場合があります。</target>
        </trans-unit>
        <trans-unit id="bb1682e2f681183d97e2a0110f16b4f60410e0df" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;coord&lt;/code&gt; argument is an optional coordinator that the threads will use to terminate together and report exceptions. If a coordinator is given, this method starts an additional thread to close the queue when the coordinator requests a stop.</source>
          <target state="translated">&lt;code&gt;coord&lt;/code&gt; 引数は、スレッドが一緒に終了し、例外を報告するために使用するオプションのコーディネーターです。コーディネーターが指定されている場合、このメソッドは、コーディネーターが停止を要求すると、追加のスレッドを開始してキューを閉じます。</target>
        </trans-unit>
        <trans-unit id="79d54183b850ac8c8ff0b7cfd536e56b95627d32" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cycle_length&lt;/code&gt; and &lt;code&gt;block_length&lt;/code&gt; arguments control the order in which elements are produced. &lt;code&gt;cycle_length&lt;/code&gt; controls the number of input elements that are processed concurrently. If you set &lt;code&gt;cycle_length&lt;/code&gt; to 1, this transformation will handle one input element at a time, and will produce identical results to &lt;a href=&quot;../../../../data/dataset#flat_map&quot;&gt;&lt;code&gt;tf.data.Dataset.flat_map&lt;/code&gt;&lt;/a&gt;. In general, this transformation will apply &lt;code&gt;map_func&lt;/code&gt; to &lt;code&gt;cycle_length&lt;/code&gt; input elements, open iterators on the returned &lt;code&gt;Dataset&lt;/code&gt; objects, and cycle through them producing &lt;code&gt;block_length&lt;/code&gt; consecutive elements from each iterator, and consuming the next input element each time it reaches the end of an iterator.</source>
          <target state="translated">&lt;code&gt;cycle_length&lt;/code&gt; と &lt;code&gt;block_length&lt;/code&gt; の引数は要素が生成される順序を制御します。 &lt;code&gt;cycle_length&lt;/code&gt; は、同時に処理される入力要素の数を制御します。 &lt;code&gt;cycle_length&lt;/code&gt; を1に設定すると、この変換は一度に1つの入力要素を処理し、&lt;a href=&quot;../../../../data/dataset#flat_map&quot;&gt; &lt;code&gt;tf.data.Dataset.flat_map&lt;/code&gt; &lt;/a&gt;と同じ結果を生成します。一般に、この変換は &lt;code&gt;map_func&lt;/code&gt; を &lt;code&gt;cycle_length&lt;/code&gt; 入力要素に適用し、返された &lt;code&gt;Dataset&lt;/code&gt; オブジェクトでイテレータを開き、それらを循環して &lt;code&gt;block_length&lt;/code&gt; を生成します 各反復子からの連続する要素、および反復子の終わりに到達するたびに次の入力要素を消費します。</target>
        </trans-unit>
        <trans-unit id="ee978764731ae2547628b468794cefc836bc4795" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cycle_length&lt;/code&gt; and &lt;code&gt;block_length&lt;/code&gt; arguments control the order in which elements are produced. &lt;code&gt;cycle_length&lt;/code&gt; controls the number of input elements that are processed concurrently. If you set &lt;code&gt;cycle_length&lt;/code&gt; to 1, this transformation will handle one input element at a time, and will produce identical results to &lt;a href=&quot;../../../data/dataset#flat_map&quot;&gt;&lt;code&gt;tf.data.Dataset.flat_map&lt;/code&gt;&lt;/a&gt;. In general, this transformation will apply &lt;code&gt;map_func&lt;/code&gt; to &lt;code&gt;cycle_length&lt;/code&gt; input elements, open iterators on the returned &lt;code&gt;Dataset&lt;/code&gt; objects, and cycle through them producing &lt;code&gt;block_length&lt;/code&gt; consecutive elements from each iterator, and consuming the next input element each time it reaches the end of an iterator.</source>
          <target state="translated">&lt;code&gt;cycle_length&lt;/code&gt; と &lt;code&gt;block_length&lt;/code&gt; の引数は要素が生成される順序を制御します。 &lt;code&gt;cycle_length&lt;/code&gt; は、同時に処理される入力要素の数を制御します。 &lt;code&gt;cycle_length&lt;/code&gt; を1に設定すると、この変換は一度に1つの入力要素を処理し、&lt;a href=&quot;../../../data/dataset#flat_map&quot;&gt; &lt;code&gt;tf.data.Dataset.flat_map&lt;/code&gt; &lt;/a&gt;と同じ結果を生成します。一般に、この変換は &lt;code&gt;map_func&lt;/code&gt; を &lt;code&gt;cycle_length&lt;/code&gt; 入力要素に適用し、返された &lt;code&gt;Dataset&lt;/code&gt; オブジェクトでイテレータを開き、それらを循環して &lt;code&gt;block_length&lt;/code&gt; を生成します 各反復子からの連続する要素、および反復子の終わりに到達するたびに次の入力要素を消費します。</target>
        </trans-unit>
        <trans-unit id="04f48577e80fcfb603fa15b3b9e05181dd539f9e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cycle_length&lt;/code&gt; and &lt;code&gt;block_length&lt;/code&gt; arguments control the order in which elements are produced. &lt;code&gt;cycle_length&lt;/code&gt; controls the number of input elements that are processed concurrently. If you set &lt;code&gt;cycle_length&lt;/code&gt; to 1, this transformation will handle one input element at a time, and will produce identical results to &lt;a href=&quot;../dataset#flat_map&quot;&gt;&lt;code&gt;tf.data.Dataset.flat_map&lt;/code&gt;&lt;/a&gt;. In general, this transformation will apply &lt;code&gt;map_func&lt;/code&gt; to &lt;code&gt;cycle_length&lt;/code&gt; input elements, open iterators on the returned &lt;code&gt;Dataset&lt;/code&gt; objects, and cycle through them producing &lt;code&gt;block_length&lt;/code&gt; consecutive elements from each iterator, and consuming the next input element each time it reaches the end of an iterator.</source>
          <target state="translated">&lt;code&gt;cycle_length&lt;/code&gt; と &lt;code&gt;block_length&lt;/code&gt; の引数は要素が生成される順序を制御します。 &lt;code&gt;cycle_length&lt;/code&gt; は、同時に処理される入力要素の数を制御します。 &lt;code&gt;cycle_length&lt;/code&gt; を1に設定すると、この変換は一度に1つの入力要素を処理し、&lt;a href=&quot;../dataset#flat_map&quot;&gt; &lt;code&gt;tf.data.Dataset.flat_map&lt;/code&gt; &lt;/a&gt;と同じ結果を生成します。一般に、この変換は &lt;code&gt;map_func&lt;/code&gt; を &lt;code&gt;cycle_length&lt;/code&gt; 入力要素に適用し、返された &lt;code&gt;Dataset&lt;/code&gt; オブジェクトでイテレータを開き、それらを循環して &lt;code&gt;block_length&lt;/code&gt; を生成します 各反復子からの連続する要素、および反復子の終わりに到達するたびに次の入力要素を消費します。</target>
        </trans-unit>
        <trans-unit id="eccbe3ff90cfb1e82cccca44957962bdd5ce30cd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cycle_length&lt;/code&gt; and &lt;code&gt;block_length&lt;/code&gt; arguments control the order in which elements are produced. &lt;code&gt;cycle_length&lt;/code&gt; controls the number of input elements that are processed concurrently. If you set &lt;code&gt;cycle_length&lt;/code&gt; to 1, this transformation will handle one input element at a time, and will produce identical results to &lt;a href=&quot;dataset#flat_map&quot;&gt;&lt;code&gt;tf.data.Dataset.flat_map&lt;/code&gt;&lt;/a&gt;. In general, this transformation will apply &lt;code&gt;map_func&lt;/code&gt; to &lt;code&gt;cycle_length&lt;/code&gt; input elements, open iterators on the returned &lt;code&gt;Dataset&lt;/code&gt; objects, and cycle through them producing &lt;code&gt;block_length&lt;/code&gt; consecutive elements from each iterator, and consuming the next input element each time it reaches the end of an iterator.</source>
          <target state="translated">&lt;code&gt;cycle_length&lt;/code&gt; と &lt;code&gt;block_length&lt;/code&gt; の引数は要素が生成される順序を制御します。 &lt;code&gt;cycle_length&lt;/code&gt; は、同時に処理される入力要素の数を制御します。 &lt;code&gt;cycle_length&lt;/code&gt; を1に設定すると、この変換は一度に1つの入力要素を処理し、&lt;a href=&quot;dataset#flat_map&quot;&gt; &lt;code&gt;tf.data.Dataset.flat_map&lt;/code&gt; &lt;/a&gt;と同じ結果を生成します。一般に、この変換は &lt;code&gt;map_func&lt;/code&gt; を &lt;code&gt;cycle_length&lt;/code&gt; 入力要素に適用し、返された &lt;code&gt;Dataset&lt;/code&gt; オブジェクトでイテレータを開き、それらを循環して &lt;code&gt;block_length&lt;/code&gt; を生成します 各反復子からの連続する要素、および反復子の終わりに到達するたびに次の入力要素を消費します。</target>
        </trans-unit>
        <trans-unit id="cdd71fb6bd2b9b57b19cddd99579978c6dafa2a7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;data_format&lt;/code&gt; attr specifies the layout of the input and output tensors with the following options: &quot;NHWC&quot;: &lt;code&gt;[ batch, height, width, channels ]&lt;/code&gt; &quot;NCHW&quot;: &lt;code&gt;[ batch, channels, height, width ]&lt;/code&gt; &quot;NCHW_VECT_C&quot;: &lt;code&gt;qint8 [ batch, channels / 4, height, width, 4 ]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;data_format&lt;/code&gt; 指定ATTR以下のオプションを使用して入力と出力テンソルのレイアウト：「NHWC」： &lt;code&gt;[ batch, height, width, channels ]&lt;/code&gt; 「NCHW」： &lt;code&gt;[ batch, channels, height, width ]&lt;/code&gt; 「NCHW_VECT_C」： &lt;code&gt;qint8 [ batch, channels / 4, height, width, 4 ]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cf61f37ebe9cd16d3f414cb7f7236218bfbaff74" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dataset_fn&lt;/code&gt; should take an &lt;a href=&quot;../../../../distribute/inputcontext&quot;&gt;&lt;code&gt;tf.distribute.InputContext&lt;/code&gt;&lt;/a&gt; instance where information about batching and input replication can be accessed.</source>
          <target state="translated">&lt;code&gt;dataset_fn&lt;/code&gt; が取るべき&lt;a href=&quot;../../../../distribute/inputcontext&quot;&gt; &lt;code&gt;tf.distribute.InputContext&lt;/code&gt; の&lt;/a&gt;バッチと入力複製についての情報にアクセスできるインスタンス。</target>
        </trans-unit>
        <trans-unit id="5cd12fa44d77e3c12fe697b0db4b93e48339e374" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dataset_fn&lt;/code&gt; should take an &lt;a href=&quot;../../../../distribute/inputcontext&quot;&gt;&lt;code&gt;tf.distribute.InputContext&lt;/code&gt;&lt;/a&gt; instance where information about batching and input replication can be accessed:</source>
          <target state="translated">&lt;code&gt;dataset_fn&lt;/code&gt; が取るべき&lt;a href=&quot;../../../../distribute/inputcontext&quot;&gt; &lt;code&gt;tf.distribute.InputContext&lt;/code&gt; の&lt;/a&gt;バッチと入力複製についての情報にアクセスできるインスタンス。</target>
        </trans-unit>
        <trans-unit id="9df9bee262df9fe514f64dc1a1738a7cc92c1df5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dataset_fn&lt;/code&gt; should take an &lt;a href=&quot;../../../distribute/inputcontext&quot;&gt;&lt;code&gt;tf.distribute.InputContext&lt;/code&gt;&lt;/a&gt; instance where information about batching and input replication can be accessed.</source>
          <target state="translated">&lt;code&gt;dataset_fn&lt;/code&gt; が取るべき&lt;a href=&quot;../../../distribute/inputcontext&quot;&gt; &lt;code&gt;tf.distribute.InputContext&lt;/code&gt; の&lt;/a&gt;バッチと入力複製についての情報にアクセスできるインスタンス。</target>
        </trans-unit>
        <trans-unit id="0e86d0834b58ce3b47a884a1d468afe9d9201946" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dataset_fn&lt;/code&gt; should take an &lt;a href=&quot;../../../distribute/inputcontext&quot;&gt;&lt;code&gt;tf.distribute.InputContext&lt;/code&gt;&lt;/a&gt; instance where information about batching and input replication can be accessed:</source>
          <target state="translated">&lt;code&gt;dataset_fn&lt;/code&gt; が取るべき&lt;a href=&quot;../../../distribute/inputcontext&quot;&gt; &lt;code&gt;tf.distribute.InputContext&lt;/code&gt; の&lt;/a&gt;バッチと入力複製についての情報にアクセスできるインスタンス。</target>
        </trans-unit>
        <trans-unit id="dab43a435b361f56a83a42c04da29fda060c86e3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dataset_fn&lt;/code&gt; should take an &lt;a href=&quot;../inputcontext&quot;&gt;&lt;code&gt;tf.distribute.InputContext&lt;/code&gt;&lt;/a&gt; instance where information about batching and input replication can be accessed.</source>
          <target state="translated">&lt;code&gt;dataset_fn&lt;/code&gt; が取るべき&lt;a href=&quot;../inputcontext&quot;&gt; &lt;code&gt;tf.distribute.InputContext&lt;/code&gt; の&lt;/a&gt;バッチと入力複製についての情報にアクセスできるインスタンス。</target>
        </trans-unit>
        <trans-unit id="f7ca657c4395755383bc81fcb9f2b453ce90db09" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dataset_fn&lt;/code&gt; should take an &lt;a href=&quot;../inputcontext&quot;&gt;&lt;code&gt;tf.distribute.InputContext&lt;/code&gt;&lt;/a&gt; instance where information about batching and input replication can be accessed:</source>
          <target state="translated">&lt;code&gt;dataset_fn&lt;/code&gt; が取るべき&lt;a href=&quot;../inputcontext&quot;&gt; &lt;code&gt;tf.distribute.InputContext&lt;/code&gt; の&lt;/a&gt;バッチと入力複製についての情報にアクセスできるインスタンス。</target>
        </trans-unit>
        <trans-unit id="75909f06c6cc8457169ade05db9b253d9c1c919e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dataset_fn&lt;/code&gt; should take an &lt;a href=&quot;inputcontext&quot;&gt;&lt;code&gt;tf.distribute.InputContext&lt;/code&gt;&lt;/a&gt; instance where information about batching and input replication can be accessed.</source>
          <target state="translated">&lt;code&gt;dataset_fn&lt;/code&gt; が取るべき&lt;a href=&quot;inputcontext&quot;&gt; &lt;code&gt;tf.distribute.InputContext&lt;/code&gt; の&lt;/a&gt;バッチと入力複製についての情報にアクセスできるインスタンス。</target>
        </trans-unit>
        <trans-unit id="6fde1903f8238ad03f3998edc676b8256c4d75c5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dataset_fn&lt;/code&gt; should take an &lt;a href=&quot;inputcontext&quot;&gt;&lt;code&gt;tf.distribute.InputContext&lt;/code&gt;&lt;/a&gt; instance where information about batching and input replication can be accessed:</source>
          <target state="translated">&lt;code&gt;dataset_fn&lt;/code&gt; が取るべき&lt;a href=&quot;inputcontext&quot;&gt; &lt;code&gt;tf.distribute.InputContext&lt;/code&gt; の&lt;/a&gt;バッチと入力複製についての情報にアクセスできるインスタンス。</target>
        </trans-unit>
        <trans-unit id="f20e1c4521e0296106d88f47b84176329b10342a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;decode_proto&lt;/code&gt; op extracts fields from a serialized protocol buffers message into tensors. The fields in &lt;code&gt;field_names&lt;/code&gt; are decoded and converted to the corresponding &lt;code&gt;output_types&lt;/code&gt; if possible.</source>
          <target state="translated">&lt;code&gt;decode_proto&lt;/code&gt; の opはテンソルにシリアライズプロトコルバッファメッセージからフィールドを抽出します。 &lt;code&gt;field_names&lt;/code&gt; のフィールドはデコードされ、可能な場合は対応する &lt;code&gt;output_types&lt;/code&gt; に変換されます。</target>
        </trans-unit>
        <trans-unit id="61bfd7600a5bc08577b34e4662502a0cb1a1a96f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;decorator_func&lt;/code&gt; argument with new metadata attached.</source>
          <target state="translated">&lt;code&gt;decorator_func&lt;/code&gt; の新しいメタデータを持つ引数が取り付けられています。</target>
        </trans-unit>
        <trans-unit id="a514f3a1501df389c97cb427fbd5d632c8c0d4a6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;default_value&lt;/code&gt; is used for keys not present in the table.</source>
          <target state="translated">&lt;code&gt;default_value&lt;/code&gt; テーブルに存在しないキーのために使用されています。</target>
        </trans-unit>
        <trans-unit id="8f256cc69c0f762014c0c50a38e920065363cfb4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;descriptor_source&lt;/code&gt; attribute selects the source of protocol descriptors to consult when looking up &lt;code&gt;message_type&lt;/code&gt;. This may be:</source>
          <target state="translated">&lt;code&gt;descriptor_source&lt;/code&gt; の属性が見上げたときに相談するプロトコル記述子のソースを選択 &lt;code&gt;message_type&lt;/code&gt; 。これは：</target>
        </trans-unit>
        <trans-unit id="9a92bd94cb0af3355b6f29220671131a1d4a6adc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;device_name_or_function&lt;/code&gt; argument may either be a device name string, a device function, or None:</source>
          <target state="translated">&lt;code&gt;device_name_or_function&lt;/code&gt; の引数には、いずれかのデバイス名文字列、デバイス機能、またはNoneことがあります</target>
        </trans-unit>
        <trans-unit id="537653ccd6821ffd71800f167aa318e3dcab8cd9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dtype&lt;/code&gt; of arguments to this operator. Default: &lt;code&gt;float32&lt;/code&gt;. Allowed dtypes: &lt;code&gt;float16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;.</source>
          <target state="translated">この演算子の引数の &lt;code&gt;dtype&lt;/code&gt; 。デフォルト： &lt;code&gt;float32&lt;/code&gt; 。許可されるdtype： &lt;code&gt;float16&lt;/code&gt; 、 &lt;code&gt;float32&lt;/code&gt; 、 &lt;code&gt;float64&lt;/code&gt; 、 &lt;code&gt;complex64&lt;/code&gt; 、 &lt;code&gt;complex128&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e71cc421951f39f5835ed5689f2aee145d82f7db" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dtype&lt;/code&gt; of the serialized &lt;code&gt;SparseTensor&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;dtype&lt;/code&gt; シリアル化されたの &lt;code&gt;SparseTensor&lt;/code&gt; のオブジェクト。</target>
        </trans-unit>
        <trans-unit id="47ba9064da69708316fb10e82e7071f7b240dc2d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dtype&lt;/code&gt; to use for serialization.</source>
          <target state="translated">&lt;code&gt;dtype&lt;/code&gt; シリアライズに使用します。</target>
        </trans-unit>
        <trans-unit id="19b121f477789a4199014186a6e228b0aa000947" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;enqueuer.get()&lt;/code&gt; should be an infinite stream of datas.</source>
          <target state="translated">&lt;code&gt;enqueuer.get()&lt;/code&gt; は、 DATASの無限ストリームであるべきです。</target>
        </trans-unit>
        <trans-unit id="ba25e9ca24f7a14bb1417a2fb32d4c4e26d77827" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;error_codes_pb2.Code&lt;/code&gt; describing the error.</source>
          <target state="translated">&lt;code&gt;error_codes_pb2.Code&lt;/code&gt; エラーを説明します。</target>
        </trans-unit>
        <trans-unit id="ae1bab6951216e7b0f3d9533c0fe4cef0e27a5dc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;fetches&lt;/code&gt; argument may be a single graph element, or an arbitrarily nested list, tuple, namedtuple, dict, or OrderedDict containing graph elements at its leaves. A graph element can be one of the following types:</source>
          <target state="translated">&lt;code&gt;fetches&lt;/code&gt; 引数は、単一のグラフ要素、または任意にネストされたリスト、タプル、namedtuple、辞書、又はその葉のグラフ要素を含むOrderedDictであってもよいです。グラフ要素は、次のタイプのいずれかです。</target>
        </trans-unit>
        <trans-unit id="785d7e8c57af0973369bcb00a38fc045b0c9ae7b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;file_pattern&lt;/code&gt; argument should be a small number of glob patterns. If your filenames have already been globbed, use &lt;a href=&quot;../../../../data/dataset#from_tensor_slices&quot;&gt;&lt;code&gt;Dataset.from_tensor_slices(filenames)&lt;/code&gt;&lt;/a&gt; instead, as re-globbing every filename with &lt;code&gt;list_files&lt;/code&gt; may result in poor performance with remote storage systems.</source>
          <target state="translated">&lt;code&gt;file_pattern&lt;/code&gt; 引数は、globパターンの小さな数でなければなりません。あなたのファイル名がすでにグロビングされ、使用されている場合は&lt;a href=&quot;../../../../data/dataset#from_tensor_slices&quot;&gt; &lt;code&gt;Dataset.from_tensor_slices(filenames)&lt;/code&gt; &lt;/a&gt;などの代わりに、とのすべてのファイル名の再グロブ &lt;code&gt;list_files&lt;/code&gt; は、リモートストレージシステムとパフォーマンスの低下をもたらすことができます。</target>
        </trans-unit>
        <trans-unit id="ae29332866e5bc8b9ee07b134fda5a738b8021d6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;file_pattern&lt;/code&gt; argument should be a small number of glob patterns. If your filenames have already been globbed, use &lt;a href=&quot;../../../data/dataset#from_tensor_slices&quot;&gt;&lt;code&gt;Dataset.from_tensor_slices(filenames)&lt;/code&gt;&lt;/a&gt; instead, as re-globbing every filename with &lt;code&gt;list_files&lt;/code&gt; may result in poor performance with remote storage systems.</source>
          <target state="translated">&lt;code&gt;file_pattern&lt;/code&gt; 引数は、globパターンの小さな数でなければなりません。あなたのファイル名がすでにグロビングされ、使用されている場合は&lt;a href=&quot;../../../data/dataset#from_tensor_slices&quot;&gt; &lt;code&gt;Dataset.from_tensor_slices(filenames)&lt;/code&gt; &lt;/a&gt;などの代わりに、とのすべてのファイル名の再グロブ &lt;code&gt;list_files&lt;/code&gt; は、リモートストレージシステムとパフォーマンスの低下をもたらすことができます。</target>
        </trans-unit>
        <trans-unit id="3f18a1c227e50f0bcfa83536b4f1a61f14aca11e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;file_pattern&lt;/code&gt; argument should be a small number of glob patterns. If your filenames have already been globbed, use &lt;a href=&quot;../dataset#from_tensor_slices&quot;&gt;&lt;code&gt;Dataset.from_tensor_slices(filenames)&lt;/code&gt;&lt;/a&gt; instead, as re-globbing every filename with &lt;code&gt;list_files&lt;/code&gt; may result in poor performance with remote storage systems.</source>
          <target state="translated">&lt;code&gt;file_pattern&lt;/code&gt; 引数は、globパターンの小さな数でなければなりません。あなたのファイル名がすでにグロビングされ、使用されている場合は&lt;a href=&quot;../dataset#from_tensor_slices&quot;&gt; &lt;code&gt;Dataset.from_tensor_slices(filenames)&lt;/code&gt; &lt;/a&gt;などの代わりに、とのすべてのファイル名の再グロブ &lt;code&gt;list_files&lt;/code&gt; は、リモートストレージシステムとパフォーマンスの低下をもたらすことができます。</target>
        </trans-unit>
        <trans-unit id="a5d371bf05fee9ac34c79b3ecb1708c225ca7a5e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;file_pattern&lt;/code&gt; argument should be a small number of glob patterns. If your filenames have already been globbed, use &lt;a href=&quot;dataset#from_tensor_slices&quot;&gt;&lt;code&gt;Dataset.from_tensor_slices(filenames)&lt;/code&gt;&lt;/a&gt; instead, as re-globbing every filename with &lt;code&gt;list_files&lt;/code&gt; may result in poor performance with remote storage systems.</source>
          <target state="translated">&lt;code&gt;file_pattern&lt;/code&gt; 引数は、globパターンの小さな数でなければなりません。あなたのファイル名がすでにグロビングされ、使用されている場合は&lt;a href=&quot;dataset#from_tensor_slices&quot;&gt; &lt;code&gt;Dataset.from_tensor_slices(filenames)&lt;/code&gt; &lt;/a&gt;などの代わりに、とのすべてのファイル名の再グロブ &lt;code&gt;list_files&lt;/code&gt; は、リモートストレージシステムとパフォーマンスの低下をもたらすことができます。</target>
        </trans-unit>
        <trans-unit id="f25ee43478700a03ff3a05bac5462d710345efcc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;file_pattern&lt;/code&gt; argument should be a small number of glob patterns. If your filenames have already been globbed, use &lt;a href=&quot;https://www.tensorflow.org/api_docs/python/tf/data/Dataset#from_tensor_slices&quot;&gt;&lt;code&gt;Dataset.from_tensor_slices(filenames)&lt;/code&gt;&lt;/a&gt; instead, as re-globbing every filename with &lt;code&gt;list_files&lt;/code&gt; may result in poor performance with remote storage systems.</source>
          <target state="translated">&lt;code&gt;file_pattern&lt;/code&gt; 引数は、globパターンの小さな数でなければなりません。あなたのファイル名がすでにグロビングされ、使用されている場合は&lt;a href=&quot;https://www.tensorflow.org/api_docs/python/tf/data/Dataset#from_tensor_slices&quot;&gt; &lt;code&gt;Dataset.from_tensor_slices(filenames)&lt;/code&gt; &lt;/a&gt;などの代わりに、とのすべてのファイル名の再グロブ &lt;code&gt;list_files&lt;/code&gt; は、リモートストレージシステムとパフォーマンスの低下をもたらすことができます。</target>
        </trans-unit>
        <trans-unit id="ae4fe9c389bd86de17fd613b2cb617cf5b34971a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;generator&lt;/code&gt; argument must be a callable object that returns an object that supports the &lt;code&gt;iter()&lt;/code&gt; protocol (e.g. a generator function). The elements generated by &lt;code&gt;generator&lt;/code&gt; must be compatible with the given &lt;code&gt;output_types&lt;/code&gt; and (optional) &lt;code&gt;output_shapes&lt;/code&gt; arguments.</source>
          <target state="translated">&lt;code&gt;generator&lt;/code&gt; 引数はサポートを返すオブジェクトという呼び出し可能オブジェクトでなければなりません &lt;code&gt;iter()&lt;/code&gt; プロトコル（例えばAジェネレータ機能）。 &lt;code&gt;generator&lt;/code&gt; によって生成される要素は、指定された &lt;code&gt;output_types&lt;/code&gt; および（オプション） &lt;code&gt;output_shapes&lt;/code&gt; 引数と互換性がある必要があります。</target>
        </trans-unit>
        <trans-unit id="d34ef9051018aee7b571f4ddcf30ab7cfc4276af" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;get_losses_for&lt;/code&gt; method allows to retrieve the losses relevant to a specific set of inputs.</source>
          <target state="translated">&lt;code&gt;get_losses_for&lt;/code&gt; 方法は、入力の特定のセットに関連する損失を取得することができます。</target>
        </trans-unit>
        <trans-unit id="c06d13d8339819e2aa27ef381a46e85c67ddba64" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;get_updates_for&lt;/code&gt; method allows to retrieve the updates relevant to a specific set of inputs.</source>
          <target state="translated">&lt;code&gt;get_updates_for&lt;/code&gt; 方法は、入力の特定のセットに関連するアップデートを取得することができます。</target>
        </trans-unit>
        <trans-unit id="44b891813820eae94e521e3bee74123211ca55a5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;identifier&lt;/code&gt; may be the string name of a loss function or &lt;code&gt;Loss&lt;/code&gt; class.</source>
          <target state="translated">&lt;code&gt;identifier&lt;/code&gt; 損失関数または列名でも &lt;code&gt;Loss&lt;/code&gt; クラス。</target>
        </trans-unit>
        <trans-unit id="180e3dd70a4fcebb6b3fd2497d1a388123d7f672" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;identifier&lt;/code&gt; may be the string name of a metric function or class.</source>
          <target state="translated">&lt;code&gt;identifier&lt;/code&gt; メトリック関数やクラスの文字列名かもしれません。</target>
        </trans-unit>
        <trans-unit id="ec9647e5e43640fc561f86326ed66d7b1839d523" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ignore_longer_outputs_than_inputs&lt;/code&gt; option allows to specify the behavior of the CTCLoss when dealing with sequences that have longer outputs than inputs. If true, the CTCLoss will simply return zero gradient for those items, otherwise an InvalidArgument error is returned, stopping training.</source>
          <target state="translated">&lt;code&gt;ignore_longer_outputs_than_inputs&lt;/code&gt; オプションは、入力よりも長い出力を有する配列を扱うときCTCLossの動作を指定することができます。trueの場合、CTCLossはこれらのアイテムの勾配をゼロで返すだけです。それ以外の場合は、InvalidArgumentエラーが返され、トレーニングが停止します。</target>
        </trans-unit>
        <trans-unit id="3e77ea3b32e4a62532979c99f1006fa100924b5f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;indices&lt;/code&gt;, &lt;code&gt;values&lt;/code&gt;, and &lt;code&gt;shapes&lt;/code&gt; lists must have the same length.</source>
          <target state="translated">&lt;code&gt;indices&lt;/code&gt; 、 &lt;code&gt;values&lt;/code&gt; 、および &lt;code&gt;shapes&lt;/code&gt; リストは、同じ長さでなければなりません。</target>
        </trans-unit>
        <trans-unit id="8cca3019d062a9892e2676ec309dbc9e2a90d317" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;input&lt;/code&gt; tensor has shape &lt;code&gt;[batch, in_height, in_width, depth]&lt;/code&gt; and the &lt;code&gt;filter&lt;/code&gt; tensor has shape &lt;code&gt;[filter_height, filter_width, depth]&lt;/code&gt;, i.e., each input channel is processed independently of the others with its own structuring function. The &lt;code&gt;output&lt;/code&gt; tensor has shape &lt;code&gt;[batch, out_height, out_width, depth]&lt;/code&gt;. The spatial dimensions of the output tensor depend on the &lt;code&gt;padding&lt;/code&gt; algorithm. We currently only support the default &quot;NHWC&quot; &lt;code&gt;data_format&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;input&lt;/code&gt; テンソル形状た &lt;code&gt;[batch, in_height, in_width, depth]&lt;/code&gt; と &lt;code&gt;filter&lt;/code&gt; テンソルの形状有する &lt;code&gt;[filter_height, filter_width, depth]&lt;/code&gt; 、すなわち、各入力チャンネルは、それ自身の構造化機能を他とは独立に処理されます。 &lt;code&gt;output&lt;/code&gt; テンソルの形状有する &lt;code&gt;[batch, out_height, out_width, depth]&lt;/code&gt; 。出力テンソルの空間次元は、 &lt;code&gt;padding&lt;/code&gt; アルゴリズムに依存します。現在、デフォルトの「NHWC」 &lt;code&gt;data_format&lt;/code&gt; のみをサポートしています。</target>
        </trans-unit>
        <trans-unit id="e66cb3e17296e0dbd7031b533b7074c9bfdfef6b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;input&lt;/code&gt; tensor has shape &lt;code&gt;[batch, in_height, in_width, depth]&lt;/code&gt; and the &lt;code&gt;filters&lt;/code&gt; tensor has shape &lt;code&gt;[filter_height, filter_width, depth]&lt;/code&gt;, i.e., each input channel is processed independently of the others with its own structuring function. The &lt;code&gt;output&lt;/code&gt; tensor has shape &lt;code&gt;[batch, out_height, out_width, depth]&lt;/code&gt;. The spatial dimensions of the output tensor depend on the &lt;code&gt;padding&lt;/code&gt; algorithm. We currently only support the default &quot;NHWC&quot; &lt;code&gt;data_format&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;input&lt;/code&gt; テンソルの形状有する &lt;code&gt;[batch, in_height, in_width, depth]&lt;/code&gt; と &lt;code&gt;filters&lt;/code&gt; の形状を有するテンソル &lt;code&gt;[filter_height, filter_width, depth]&lt;/code&gt; 、すなわち、各入力チャンネルは、それ自身の構造化機能を他とは独立に処理されます。 &lt;code&gt;output&lt;/code&gt; テンソルの形状有する &lt;code&gt;[batch, out_height, out_width, depth]&lt;/code&gt; 。出力テンソルの空間次元は、 &lt;code&gt;padding&lt;/code&gt; アルゴリズムに依存します。現在、デフォルトの「NHWC」 &lt;code&gt;data_format&lt;/code&gt; のみをサポートしています。</target>
        </trans-unit>
        <trans-unit id="e9d4ca3ee4fe9c49bd0cf7e45805bfee3864ac7b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;input&lt;/code&gt; tensor may have rank &lt;code&gt;4&lt;/code&gt; or higher, where shape dimensions &lt;code&gt;[:-3]&lt;/code&gt; are considered batch dimensions (&lt;code&gt;batch_shape&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;input&lt;/code&gt; テンソルはランクている可能性が &lt;code&gt;4&lt;/code&gt; 以上、形状寸法 &lt;code&gt;[:-3]&lt;/code&gt; バッチの大きさ（と考えられる &lt;code&gt;batch_shape&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="17d78b23014241429cebda7a7ed18dd11ac18169" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;input_fn&lt;/code&gt; should take an &lt;a href=&quot;../../../../distribute/inputcontext&quot;&gt;&lt;code&gt;tf.distribute.InputContext&lt;/code&gt;&lt;/a&gt; object where information about batching and input sharding can be accessed:</source>
          <target state="translated">&lt;code&gt;input_fn&lt;/code&gt; が取るべき&lt;a href=&quot;../../../../distribute/inputcontext&quot;&gt; &lt;code&gt;tf.distribute.InputContext&lt;/code&gt; の&lt;/a&gt;バッチと入力シャーディングについての情報にアクセスできるオブジェクト。</target>
        </trans-unit>
        <trans-unit id="5a7667b672c0fb6a912c80d541aa0d63d101f97d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;input_fn&lt;/code&gt; should take an &lt;a href=&quot;../../../distribute/inputcontext&quot;&gt;&lt;code&gt;tf.distribute.InputContext&lt;/code&gt;&lt;/a&gt; object where information about batching and input sharding can be accessed:</source>
          <target state="translated">&lt;code&gt;input_fn&lt;/code&gt; が取るべき&lt;a href=&quot;../../../distribute/inputcontext&quot;&gt; &lt;code&gt;tf.distribute.InputContext&lt;/code&gt; の&lt;/a&gt;バッチと入力シャーディングについての情報にアクセスできるオブジェクト。</target>
        </trans-unit>
        <trans-unit id="659e1fc33dd53c3ed2709a794415182888957e1f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;inputs&lt;/code&gt; Tensor's innermost dimension size, &lt;code&gt;num_classes&lt;/code&gt;, represents &lt;code&gt;num_labels + 1&lt;/code&gt; classes, where num_labels is the number of true labels, and the largest value &lt;code&gt;(num_classes - 1)&lt;/code&gt; is reserved for the blank label.</source>
          <target state="translated">&lt;code&gt;inputs&lt;/code&gt; テンソルの最も内側の寸法サイズ、 &lt;code&gt;num_classes&lt;/code&gt; 表し、 &lt;code&gt;num_labels + 1&lt;/code&gt; num_labelsが真のラベルの数、および最大値であるクラス &lt;code&gt;(num_classes - 1)&lt;/code&gt; ブランクラベルのために予約されています。</target>
        </trans-unit>
        <trans-unit id="52852cb960e86780103624fe955f152ef384049d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;job_name&lt;/code&gt; argument allows jobs to be shared across multiple datasets. Instead of each dataset creating its own job, all datasets with the same &lt;code&gt;job_name&lt;/code&gt; will consume from the same job. A new job will be created for each iteration of the dataset (with each repetition of &lt;a href=&quot;../../dataset#repeat&quot;&gt;&lt;code&gt;Dataset.repeat&lt;/code&gt;&lt;/a&gt; counting as a new iteration). Suppose two training workers (in either a single client or multi-client setup) iterate over the below dataset, and there is a single tf.data worker:</source>
          <target state="translated">&lt;code&gt;job_name&lt;/code&gt; 引数は、ジョブは複数のデータセット間で共有することができます。各データセットが独自のジョブを作成する代わりに、同じ &lt;code&gt;job_name&lt;/code&gt; を持つすべてのデータセットが同じジョブから消費します。データセットの反復ごとに新しいジョブが作成されます（&lt;a href=&quot;../../dataset#repeat&quot;&gt; &lt;code&gt;Dataset.repeat&lt;/code&gt; の&lt;/a&gt;反復ごとに新しい反復としてカウントされます）。2人のトレーニングワーカー（シングルクライアントまたはマルチクライアントセットアップのいずれか）が以下のデータセットを反復処理し、単一のtf.dataワーカーが存在するとします。</target>
        </trans-unit>
        <trans-unit id="54adbaacaf1b1235d65bae24606d9417fde02168" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;job_name&lt;/code&gt;, &lt;code&gt;task_index&lt;/code&gt;, and &lt;code&gt;protocol&lt;/code&gt; arguments are optional, and override any information provided in &lt;code&gt;server_or_cluster_def&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;job_name&lt;/code&gt; 、 &lt;code&gt;task_index&lt;/code&gt; 、及び &lt;code&gt;protocol&lt;/code&gt; 引数は任意であり、中に提供された情報オーバーライド &lt;code&gt;server_or_cluster_def&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="e82bdbf23648ae7e356f1b9921da5131f1b83a9b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;k&lt;/code&gt; largest elements along each last dimensional slice.</source>
          <target state="translated">&lt;code&gt;k&lt;/code&gt; の各最後次元スライスに沿って最大の要素。</target>
        </trans-unit>
        <trans-unit id="c3533500524684a2c4cc98267eb7938138431a62" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;key&lt;/code&gt; data type.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; のデータ型。</target>
        </trans-unit>
        <trans-unit id="19f499068ceec21634d06f2a52769f688704a6e5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;keys&lt;/code&gt; data type. Used when &lt;code&gt;keys&lt;/code&gt; is a python array.</source>
          <target state="translated">&lt;code&gt;keys&lt;/code&gt; データ型。 &lt;code&gt;keys&lt;/code&gt; がPython配列の場合に使用されます。</target>
        </trans-unit>
        <trans-unit id="a121b1c952b1d66b82abf663f7114cd18e26ce58" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;labels&lt;/code&gt; shape must match &lt;code&gt;logits&lt;/code&gt;, namely &lt;code&gt;[D0, D1, ... DN, label_dimension]&lt;/code&gt;. If &lt;code&gt;label_dimension=1&lt;/code&gt;, shape &lt;code&gt;[D0, D1, ... DN]&lt;/code&gt; is also supported.</source>
          <target state="translated">&lt;code&gt;labels&lt;/code&gt; 形状が一致している必要があり &lt;code&gt;logits&lt;/code&gt; 、すなわち &lt;code&gt;[D0, D1, ... DN, label_dimension]&lt;/code&gt; 。 &lt;code&gt;label_dimension=1&lt;/code&gt; の場合、形状 &lt;code&gt;[D0, D1, ... DN]&lt;/code&gt; もサポートされます。</target>
        </trans-unit>
        <trans-unit id="1a7473ff7ad3c16ed4893e43c01e352fd1f3c9c8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;labels&lt;/code&gt; shape must match &lt;code&gt;logits&lt;/code&gt;, namely &lt;code&gt;[D0, D1, ... DN]&lt;/code&gt; or &lt;code&gt;[D0, D1, ... DN, 1]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;labels&lt;/code&gt; 形状が一致している必要があり &lt;code&gt;logits&lt;/code&gt; 、すなわち &lt;code&gt;[D0, D1, ... DN]&lt;/code&gt; または &lt;code&gt;[D0, D1, ... DN, 1]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="337997246db8337cb34ef7810fd235c2b2595916" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;load&lt;/code&gt; operation requires the session in which to restore the graph definition and variables, the tags used to identify the meta graph def to load and the location of the SavedModel.</source>
          <target state="translated">&lt;code&gt;load&lt;/code&gt; 動作は、グラフの定義及び変数、負荷及びSavedModelの場所にDEFメタグラフを識別するために使用されるタグを復元するためにどのセッションを必要とします。</target>
        </trans-unit>
        <trans-unit id="7d30c15fc4a153c98926b67d30f2faeb014c1e26" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;local_init_op&lt;/code&gt; is an &lt;code&gt;Operation&lt;/code&gt; that is run always after a new session was created. If &lt;code&gt;None&lt;/code&gt;, this step is skipped.</source>
          <target state="translated">&lt;code&gt;local_init_op&lt;/code&gt; は、ある &lt;code&gt;Operation&lt;/code&gt; 新しいセッションが作成された後に必ず実行されます。 &lt;code&gt;None&lt;/code&gt; の場合、このステップはスキップされます。</target>
        </trans-unit>
        <trans-unit id="d1f6127575bb783a396c88c5a17bc09e9f309fd2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;logs&lt;/code&gt; dictionary that callback methods take as argument will contain keys for quantities relevant to the current batch or epoch (see method-specific docstrings).</source>
          <target state="translated">&lt;code&gt;logs&lt;/code&gt; 引数が現在のバッチまたはエポック（メソッド固有のドキュメンテーション文字列を参照）に関連した量のためのキーが含まれていますように、そのコールバックメソッドが取る辞書。</target>
        </trans-unit>
        <trans-unit id="2701808169cb5f6edee74183d83e4eef575157e2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;logs&lt;/code&gt; dictionary that callback methods take as argument will contain keys for quantities relevant to the current batch or epoch.</source>
          <target state="translated">&lt;code&gt;logs&lt;/code&gt; コールバックメソッドは、現在のバッチまたはエポックに関連する量のためのキーが含まれています、引数として取ることを辞書。</target>
        </trans-unit>
        <trans-unit id="fc148a0836cef52be69ad741735a0b91ff403bfd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;loss_collection&lt;/code&gt; argument is ignored when executing eagerly. Consider holding on to the return value or collecting losses via a &lt;a href=&quot;../../../keras/model&quot;&gt;&lt;code&gt;tf.keras.Model&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;loss_collection&lt;/code&gt; の熱心実行時に引数は無視されます。戻り値を保持するか、&lt;a href=&quot;../../../keras/model&quot;&gt; &lt;code&gt;tf.keras.Model&lt;/code&gt; &lt;/a&gt;を介して損失を収集することを検討してください。</target>
        </trans-unit>
        <trans-unit id="0afc68c6d1107a5abc809b22cf778d4900b10f1f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;max_intra_op_parallelism&lt;/code&gt; attr, which defaults to 1, can be used to limit the intra op parallelism. To limit inter-op parallelism, a user can set a private threadpool on the dataset using &lt;a href=&quot;../data/options&quot;&gt;&lt;code&gt;tf.data.Options&lt;/code&gt;&lt;/a&gt;'s &lt;code&gt;ThreadingOptions&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;max_intra_op_parallelism&lt;/code&gt; のイントラOP並列処理を制限するために使用することができる1デフォルト、ATTR、。&lt;a href=&quot;../data/options&quot;&gt; &lt;code&gt;tf.data.Options&lt;/code&gt; &lt;/a&gt;間の並列処理を制限するために、ユーザーはtf.data.Optionsの &lt;code&gt;ThreadingOptions&lt;/code&gt; を使用してデータセットにプライベートスレッドプールを設定できます。</target>
        </trans-unit>
        <trans-unit id="1e3ee2c38e78144a1138ef9d3009b14144429a19" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mean&lt;/code&gt; function creates two local variables, &lt;code&gt;total&lt;/code&gt; and &lt;code&gt;count&lt;/code&gt; that are used to compute the average of &lt;code&gt;values&lt;/code&gt;. This average is ultimately returned as &lt;code&gt;mean&lt;/code&gt; which is an idempotent operation that simply divides &lt;code&gt;total&lt;/code&gt; by &lt;code&gt;count&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;mean&lt;/code&gt; 関数は、2つのローカル変数、作成 &lt;code&gt;total&lt;/code&gt; と &lt;code&gt;count&lt;/code&gt; の平均値を計算するために使用される &lt;code&gt;values&lt;/code&gt; 。この平均は、最終的に平均として返され &lt;code&gt;mean&lt;/code&gt; これは、単純に &lt;code&gt;total&lt;/code&gt; を &lt;code&gt;count&lt;/code&gt; 除算するべき等演算です。</target>
        </trans-unit>
        <trans-unit id="9d502617cdf652bd304ad5b305d7afe67fbd9b64" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mean_absolute_error&lt;/code&gt; function creates two local variables, &lt;code&gt;total&lt;/code&gt; and &lt;code&gt;count&lt;/code&gt; that are used to compute the mean absolute error. This average is weighted by &lt;code&gt;weights&lt;/code&gt;, and it is ultimately returned as &lt;code&gt;mean_absolute_error&lt;/code&gt;: an idempotent operation that simply divides &lt;code&gt;total&lt;/code&gt; by &lt;code&gt;count&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;mean_absolute_error&lt;/code&gt; の機能は、2つのローカル変数、作成 &lt;code&gt;total&lt;/code&gt; と &lt;code&gt;count&lt;/code&gt; 平均絶対誤差を計算するために使用されています。この平均値は、で重み付けされ &lt;code&gt;weights&lt;/code&gt; 、それが最終的として返され &lt;code&gt;mean_absolute_error&lt;/code&gt; ：冪等操作だけで分割することを &lt;code&gt;total&lt;/code&gt; で &lt;code&gt;count&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5274af314d757e1ddc8b38db5fa05ae667819167" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mean_cosine_distance&lt;/code&gt; function creates two local variables, &lt;code&gt;total&lt;/code&gt; and &lt;code&gt;count&lt;/code&gt; that are used to compute the average cosine distance between &lt;code&gt;predictions&lt;/code&gt; and &lt;code&gt;labels&lt;/code&gt;. This average is weighted by &lt;code&gt;weights&lt;/code&gt;, and it is ultimately returned as &lt;code&gt;mean_distance&lt;/code&gt;, which is an idempotent operation that simply divides &lt;code&gt;total&lt;/code&gt; by &lt;code&gt;count&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;mean_cosine_distance&lt;/code&gt; の機能は、2つのローカル変数、作成 &lt;code&gt;total&lt;/code&gt; と &lt;code&gt;count&lt;/code&gt; との間の平均コサイン距離を計算するために使用される &lt;code&gt;predictions&lt;/code&gt; と &lt;code&gt;labels&lt;/code&gt; 。この平均値は、で重み付けされ &lt;code&gt;weights&lt;/code&gt; 、それが最終的として返され &lt;code&gt;mean_distance&lt;/code&gt; 単に分けること冪等操作で、 &lt;code&gt;total&lt;/code&gt; で &lt;code&gt;count&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="336c620aa42f01c6ce6a5a126282c5957ed048ef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mean_relative_error&lt;/code&gt; function creates two local variables, &lt;code&gt;total&lt;/code&gt; and &lt;code&gt;count&lt;/code&gt; that are used to compute the mean relative absolute error. This average is weighted by &lt;code&gt;weights&lt;/code&gt;, and it is ultimately returned as &lt;code&gt;mean_relative_error&lt;/code&gt;: an idempotent operation that simply divides &lt;code&gt;total&lt;/code&gt; by &lt;code&gt;count&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;mean_relative_error&lt;/code&gt; の機能は、2つのローカル変数、作成 &lt;code&gt;total&lt;/code&gt; と &lt;code&gt;count&lt;/code&gt; 平均相対絶対誤差を計算するために使用されます。この平均値は、で重み付けされ &lt;code&gt;weights&lt;/code&gt; 、それが最終的として返され &lt;code&gt;mean_relative_error&lt;/code&gt; ：冪等操作だけで分割することを &lt;code&gt;total&lt;/code&gt; で &lt;code&gt;count&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="67c2bbcc205906b964a9ff8ac3199c6be162fe51" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mean_squared_error&lt;/code&gt; function creates two local variables, &lt;code&gt;total&lt;/code&gt; and &lt;code&gt;count&lt;/code&gt; that are used to compute the mean squared error. This average is weighted by &lt;code&gt;weights&lt;/code&gt;, and it is ultimately returned as &lt;code&gt;mean_squared_error&lt;/code&gt;: an idempotent operation that simply divides &lt;code&gt;total&lt;/code&gt; by &lt;code&gt;count&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;mean_squared_error&lt;/code&gt; の機能は、2つのローカル変数、作成 &lt;code&gt;total&lt;/code&gt; と &lt;code&gt;count&lt;/code&gt; 平均二乗誤差を計算するために使用されています。この平均値は、で重み付けされ &lt;code&gt;weights&lt;/code&gt; 、それが最終的として返され &lt;code&gt;mean_squared_error&lt;/code&gt; ：冪等操作だけで分割することを &lt;code&gt;total&lt;/code&gt; で &lt;code&gt;count&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3b117bfd9e6e5a2c416636178e1f60670fea3d28" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mean_tensor&lt;/code&gt; function creates two local variables, &lt;code&gt;total_tensor&lt;/code&gt; and &lt;code&gt;count_tensor&lt;/code&gt; that are used to compute the average of &lt;code&gt;values&lt;/code&gt;. This average is ultimately returned as &lt;code&gt;mean&lt;/code&gt; which is an idempotent operation that simply divides &lt;code&gt;total&lt;/code&gt; by &lt;code&gt;count&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;mean_tensor&lt;/code&gt; の機能は、2つのローカル変数、作成 &lt;code&gt;total_tensor&lt;/code&gt; と &lt;code&gt;count_tensor&lt;/code&gt; の平均値を計算するために使用される &lt;code&gt;values&lt;/code&gt; 。この平均は、最終的に平均として返され &lt;code&gt;mean&lt;/code&gt; これは、単純に &lt;code&gt;total&lt;/code&gt; を &lt;code&gt;count&lt;/code&gt; 除算するべき等演算です。</target>
        </trans-unit>
        <trans-unit id="7c200f71e36ea6a98c41ca94cc97dfe77978a644" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;method&lt;/code&gt; argument expects an item from the &lt;a href=&quot;resizemethod&quot;&gt;&lt;code&gt;image.ResizeMethod&lt;/code&gt;&lt;/a&gt; enum, or the string equivalent. The options are:</source>
          <target state="translated">&lt;code&gt;method&lt;/code&gt; 引数からアイテムを期待&lt;a href=&quot;resizemethod&quot;&gt; &lt;code&gt;image.ResizeMethod&lt;/code&gt; の&lt;/a&gt;列挙、または文字列同等。オプションは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="359effe1a8bd137a123edc648170974d6a070045" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;method&lt;/code&gt; can be one of:</source>
          <target state="translated">&lt;code&gt;method&lt;/code&gt; のいずれかになります。</target>
        </trans-unit>
        <trans-unit id="61901168dd1572e51930a90d2c41288724617770" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;min_after_dequeue&lt;/code&gt; argument allows the caller to specify a minimum number of elements that will remain in the queue after a &lt;code&gt;dequeue&lt;/code&gt; or &lt;code&gt;dequeue_many&lt;/code&gt; operation completes, to ensure a minimum level of mixing of elements. This invariant is maintained by blocking those operations until sufficient elements have been enqueued. The &lt;code&gt;min_after_dequeue&lt;/code&gt; argument is ignored after the queue has been closed.</source>
          <target state="translated">&lt;code&gt;min_after_dequeue&lt;/code&gt; 引数は、発信者が後にキューに残る要素の最小数を指定することを可能にする &lt;code&gt;dequeue&lt;/code&gt; または &lt;code&gt;dequeue_many&lt;/code&gt; 要素の混合の最小レベルを確保するために、動作完了を。この不変条件は、十分な要素がエンキューされるまでこれらの操作をブロックすることによって維持されます。 &lt;code&gt;min_after_dequeue&lt;/code&gt; キューが閉じられた後に引数は無視されます。</target>
        </trans-unit>
        <trans-unit id="87f93cdb7fe70e84bf2c6a1f629508cf097e91cf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;model_fn&lt;/code&gt; with following signature: &lt;code&gt;def model_fn(features, labels, mode, config)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;model_fn&lt;/code&gt; ：次のシグネチャと &lt;code&gt;def model_fn(features, labels, mode, config)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6b0f2d1521a662066e2e88bb2088b1a4f0eee648" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; argument determines the compute and variable dtype, the default loss scale, and has no additional effect on the Policy. The compute and variable dtypes can only be specified through &lt;code&gt;name&lt;/code&gt;, and cannot be specified directly.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; 引数は、コンピューティングおよび変数DTYPE、デフォルト損失の規模を決定し、ポリシーに追加の効果がありません。計算および変数のdtypeは &lt;code&gt;name&lt;/code&gt; を介してのみ指定でき、直接指定することはできません。</target>
        </trans-unit>
        <trans-unit id="caae61aec33371ff4b676bc337e8ca5b2b3735d7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; argument will be interpreted as follows:</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; 引数は次のとおりに解釈されます。</target>
        </trans-unit>
        <trans-unit id="3f5d6d961f52c53a04a1f2df011d2c611359581d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;node_def_pb2.NodeDef&lt;/code&gt; proto representing the op that failed, if known; otherwise None.</source>
          <target state="translated">&lt;code&gt;node_def_pb2.NodeDef&lt;/code&gt; は知られている場合、失敗したオペアンプを表すPROTO。それ以外の場合はなし。</target>
        </trans-unit>
        <trans-unit id="ff799851115a4d2209de0937f04e1ab56cdaa6e1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ops.Operation&lt;/code&gt; that failed, if known; otherwise None.</source>
          <target state="translated">&lt;code&gt;ops.Operation&lt;/code&gt; 知られている場合は、失敗しました。それ以外の場合はなし。</target>
        </trans-unit>
        <trans-unit id="0bb4358003786fb876ae7af1510a743596ce0c00" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;output&lt;/code&gt; is a string &lt;code&gt;Tensor&lt;/code&gt; of the same shape as &lt;code&gt;bytes&lt;/code&gt;, each element containing the decompressed data from the corresponding element in &lt;code&gt;bytes&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;output&lt;/code&gt; 文字列である &lt;code&gt;Tensor&lt;/code&gt; と同じ形状の &lt;code&gt;bytes&lt;/code&gt; 、の対応する要素から伸張データを含む各要素 &lt;code&gt;bytes&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5b4d4c43eca0087042a4ac89a69f9618fa9ccf44" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;padding&lt;/code&gt; argument has no effect on the size of each patch, it determines how many patches are extracted. If &lt;code&gt;VALID&lt;/code&gt;, only patches which are fully contained in the input image are included. If &lt;code&gt;SAME&lt;/code&gt;, all patches whose starting point is inside the input are included, and areas outside the input default to zero.</source>
          <target state="translated">&lt;code&gt;padding&lt;/code&gt; 引数は、各パッチのサイズには影響しません、それは多くのパッチが抽出される方法を決定します。 &lt;code&gt;VALID&lt;/code&gt; の場合、入力イメージに完全に含まれているパッチのみが含まれます。 &lt;code&gt;SAME&lt;/code&gt; の場合、開始点が入力の内側にあるすべてのパッチが含まれ、入力の外側の領域はデフォルトでゼロになります。</target>
        </trans-unit>
        <trans-unit id="5d6511601b9be092f62183d45376bcdd0b07ca55" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;params&lt;/code&gt; argument contains hyperparameters. It is passed to the &lt;code&gt;model_fn&lt;/code&gt;, if the &lt;code&gt;model_fn&lt;/code&gt; has a parameter named &quot;params&quot;, and to the input functions in the same manner. &lt;code&gt;Estimator&lt;/code&gt; only passes params along, it does not inspect it. The structure of &lt;code&gt;params&lt;/code&gt; is therefore entirely up to the developer.</source>
          <target state="translated">&lt;code&gt;params&lt;/code&gt; 引数には、ハイパーが含まれています。これは、 &lt;code&gt;model_fn&lt;/code&gt; に「params」という名前のパラメーターがある場合、 &lt;code&gt;model_fn&lt;/code&gt; に渡され、同じ方法で入力関数に渡されます。 &lt;code&gt;Estimator&lt;/code&gt; はパラメーターを渡すだけで、検査はしません。したがって、 &lt;code&gt;params&lt;/code&gt; の構造は完全に開発者次第です。</target>
        </trans-unit>
        <trans-unit id="9d95e516d4f18ca77f6adc9dd062547aed852bf4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;partition_strategy&lt;/code&gt; is always &lt;code&gt;&quot;div&quot;&lt;/code&gt; currently. This means that we assign ids to partitions in a contiguous manner. For instance, 13 ids are split across 5 partitions as: &lt;code&gt;[[0, 1, 2], [3, 4, 5], [6, 7, 8], [9, 10], [11, 12]]&lt;/code&gt;</source>
          <target state="translated">現在、 &lt;code&gt;partition_strategy&lt;/code&gt; は常に &lt;code&gt;&quot;div&quot;&lt;/code&gt; です。これは、連続した方法でパーティションにIDを割り当てることを意味します。たとえば、13のIDは次のように5つのパーティションに分割されます： &lt;code&gt;[[0, 1, 2], [3, 4, 5], [6, 7, 8], [9, 10], [11, 12]]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="52630b2e3206fda8f0264a5aa2143342644368d9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;percentage_below&lt;/code&gt; function creates two local variables, &lt;code&gt;total&lt;/code&gt; and &lt;code&gt;count&lt;/code&gt; that are used to compute the percentage of &lt;code&gt;values&lt;/code&gt; that fall below &lt;code&gt;threshold&lt;/code&gt;. This rate is weighted by &lt;code&gt;weights&lt;/code&gt;, and it is ultimately returned as &lt;code&gt;percentage&lt;/code&gt; which is an idempotent operation that simply divides &lt;code&gt;total&lt;/code&gt; by &lt;code&gt;count&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;percentage_below&lt;/code&gt; 機能は、2つのローカル変数、作成 &lt;code&gt;total&lt;/code&gt; と &lt;code&gt;count&lt;/code&gt; の割合を計算するために使用されている &lt;code&gt;values&lt;/code&gt; を下回る &lt;code&gt;threshold&lt;/code&gt; 。このレートはで重み付けされ &lt;code&gt;weights&lt;/code&gt; 、それが最終的として返される &lt;code&gt;percentage&lt;/code&gt; 単純に分けること冪等操作で &lt;code&gt;total&lt;/code&gt; で &lt;code&gt;count&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7ff7ad77d0b4964b4f1ddd1a1b58d2783393a3a7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;precision&lt;/code&gt; function creates two local variables, &lt;code&gt;true_positives&lt;/code&gt; and &lt;code&gt;false_positives&lt;/code&gt;, that are used to compute the precision. This value is ultimately returned as &lt;code&gt;precision&lt;/code&gt;, an idempotent operation that simply divides &lt;code&gt;true_positives&lt;/code&gt; by the sum of &lt;code&gt;true_positives&lt;/code&gt; and &lt;code&gt;false_positives&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;precision&lt;/code&gt; 関数は2つのローカル変数、作成 &lt;code&gt;true_positives&lt;/code&gt; と &lt;code&gt;false_positives&lt;/code&gt; 精度を計算するために使用されます。この値は、最終的には &lt;code&gt;precision&lt;/code&gt; として返されます。これは、 &lt;code&gt;true_positives&lt;/code&gt; と &lt;code&gt;false_positives&lt;/code&gt; の合計でtrue_positivesを単純に除算する &lt;code&gt;true_positives&lt;/code&gt; 等演算です。</target>
        </trans-unit>
        <trans-unit id="5dd1225edff0d711a1d881f6569af599477db82d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;precision_at_thresholds&lt;/code&gt; function creates four local variables, &lt;code&gt;true_positives&lt;/code&gt;, &lt;code&gt;true_negatives&lt;/code&gt;, &lt;code&gt;false_positives&lt;/code&gt; and &lt;code&gt;false_negatives&lt;/code&gt; for various values of thresholds. &lt;code&gt;precision[i]&lt;/code&gt; is defined as the total weight of values in &lt;code&gt;predictions&lt;/code&gt; above &lt;code&gt;thresholds[i]&lt;/code&gt; whose corresponding entry in &lt;code&gt;labels&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;, divided by the total weight of values in &lt;code&gt;predictions&lt;/code&gt; above &lt;code&gt;thresholds[i]&lt;/code&gt; (&lt;code&gt;true_positives[i] / (true_positives[i] + false_positives[i])&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;precision_at_thresholds&lt;/code&gt; の機能は、4つのローカル変数、作成 &lt;code&gt;true_positives&lt;/code&gt; 、 &lt;code&gt;true_negatives&lt;/code&gt; 、 &lt;code&gt;false_positives&lt;/code&gt; と &lt;code&gt;false_negatives&lt;/code&gt; を閾値の種々の値について。 &lt;code&gt;precision[i]&lt;/code&gt; 、値の合計重量として定義される &lt;code&gt;predictions&lt;/code&gt; 上記 &lt;code&gt;thresholds[i]&lt;/code&gt; を持つ対応するエントリ内の &lt;code&gt;labels&lt;/code&gt; である &lt;code&gt;True&lt;/code&gt; に値の合計重量で割った &lt;code&gt;predictions&lt;/code&gt; 上記 &lt;code&gt;thresholds[i]&lt;/code&gt; （ &lt;code&gt;true_positives[i] / (true_positives[i] + false_positives[i])&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="6eefdf49a7cc35e9901e07fb1fbbe5c8a0436241" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pred_fn_pairs&lt;/code&gt; parameter is a dict or list of pairs of size N. Each pair contains a boolean scalar tensor and a python callable that creates the tensors to be returned if the boolean evaluates to True. &lt;code&gt;default&lt;/code&gt; is a callable generating a list of tensors. All the callables in &lt;code&gt;pred_fn_pairs&lt;/code&gt; as well as &lt;code&gt;default&lt;/code&gt; (if provided) should return the same number and types of tensors.</source>
          <target state="translated">&lt;code&gt;pred_fn_pairs&lt;/code&gt; 各ペアはブーリアンスカラーテンソルとテンソルを作成するPython呼び出し可能が含まれている辞書やサイズNのペアのリストをあるパラメータがTrueにブール評価された場合に返されます。 &lt;code&gt;default&lt;/code&gt; は、テンソルのリストを生成する呼び出し可能です。 &lt;code&gt;pred_fn_pairs&lt;/code&gt; のすべての呼び出し可能オブジェクトと &lt;code&gt;default&lt;/code&gt; （提供されている場合）は、同じ数とタイプのテンソルを返す必要があります。</target>
        </trans-unit>
        <trans-unit id="34976fcb5528295e8ddc3902a61df136b0d0ffdf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pred_fn_pairs&lt;/code&gt; parameter is a list of pairs of size N. Each pair contains a boolean scalar tensor and a python callable that creates the tensors to be returned if the boolean evaluates to True. &lt;code&gt;default&lt;/code&gt; is a callable generating a list of tensors. All the callables in &lt;code&gt;pred_fn_pairs&lt;/code&gt; as well as &lt;code&gt;default&lt;/code&gt; (if provided) should return the same number and types of tensors.</source>
          <target state="translated">&lt;code&gt;pred_fn_pairs&lt;/code&gt; のパラメータは、サイズNのペアのリストで、各ペアはブーリアンスカラーテンソルとTrueにブール評価された場合に返されるテンソルを作成するPython呼び出し可能が含まれています。 &lt;code&gt;default&lt;/code&gt; は、テンソルのリストを生成する呼び出し可能です。 &lt;code&gt;pred_fn_pairs&lt;/code&gt; のすべての呼び出し可能オブジェクトと &lt;code&gt;default&lt;/code&gt; （提供されている場合）は、同じ数とタイプのテンソルを返す必要があります。</target>
        </trans-unit>
        <trans-unit id="93cb2f4ffc1343d3e578716fa0f2259765515b7b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;predicate&lt;/code&gt; function must return a scalar boolean and accept the following arguments:</source>
          <target state="translated">&lt;code&gt;predicate&lt;/code&gt; 関数は、スカラーブール値を返し、次の引数を受け入れなければなりません。</target>
        </trans-unit>
        <trans-unit id="9f193e11e3c3d02548a087c0b651e12da6960ea6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;processing_mode&lt;/code&gt; argument controls what data is produced by a tf.data service job. Currently, the only supported mode is &quot;parallel_epochs&quot;.</source>
          <target state="translated">&lt;code&gt;processing_mode&lt;/code&gt; のtf.dataサービスジョブによって生成されたどのデータ引数を制御します。現在、サポートされているモードは「parallel_epochs」のみです。</target>
        </trans-unit>
        <trans-unit id="1b86bcbbc0d3b8196c89c0939e24a5f7427c39be" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ragged_to_dense&lt;/code&gt; op creates a dense tensor from a list of row partition tensors, a value vector, and default values. If the shape is unspecified, the minimal shape required to contain all the elements in the ragged tensor (the natural shape) will be used. If some dimensions are left unspecified, then the size of the natural shape is used in that dimension.</source>
          <target state="translated">&lt;code&gt;ragged_to_dense&lt;/code&gt; のOPは、行パーティションテンソル、値ベクトル、およびデフォルト値のリストから稠密テンソルを作成します。形状が指定されていない場合、不規則テンソルのすべての要素を含むために必要な最小限の形状（自然な形状）が使用されます。一部の寸法が指定されていない場合は、自然な形状のサイズがその寸法で使用されます。</target>
        </trans-unit>
        <trans-unit id="5afdb3b995f3b29ea4cf73eec10f30fcac05b0a2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reader_func&lt;/code&gt; argument can be used to specify a custom order in which elements should be loaded from the individual shards. The &lt;code&gt;reader_func&lt;/code&gt; is expected to take a single argument -- a dataset of datasets, each containing elements of one of the shards -- and return a dataset of elements. For example, the order of shards can be shuffled when loading them as follows:</source>
          <target state="translated">&lt;code&gt;reader_func&lt;/code&gt; 引数は要素は、個々の破片からロードされるべきでカスタムオーダーを指定するために使用することができます。 &lt;code&gt;reader_func&lt;/code&gt; は、データセットのデータセット、破片の1をそれぞれ含有する要素- -と要素のデータセットを返す単一の引数を取ることが期待されています。たとえば、シャードをロードするときに、次のようにシャードの順序をシャッフルできます。</target>
        </trans-unit>
        <trans-unit id="968a8378fc8eb3fdd1fb2170f34eb48e9c1bec93" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ready_for_local_init_op&lt;/code&gt; is an &lt;code&gt;Operation&lt;/code&gt; used to check if the model is ready to run local_init_op. The model is considered ready if that operation returns an empty 1D string tensor. If the operation returns a non empty 1D string tensor, the elements are concatenated and used to indicate to the user why the model is not ready.</source>
          <target state="translated">&lt;code&gt;ready_for_local_init_op&lt;/code&gt; がある &lt;code&gt;Operation&lt;/code&gt; 、モデルがlocal_init_opを実行する準備ができているかどうかを確認するために使用しました。その操作が空の1D文字列テンソルを返す場合、モデルは準備ができていると見なされます。操作が空でない1D文字列テンソルを返す場合、要素は連結され、モデルが準備できていない理由をユーザーに示すために使用されます。</target>
        </trans-unit>
        <trans-unit id="8200e403875e28ce9b4147cac96db59b27a581ff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ready_op&lt;/code&gt; is an &lt;code&gt;Operation&lt;/code&gt; used to check if the model is ready. The model is considered ready if that operation returns an empty 1D string tensor. If the operation returns a non empty 1D string tensor, the elements are concatenated and used to indicate to the user why the model is not ready.</source>
          <target state="translated">&lt;code&gt;ready_op&lt;/code&gt; はある &lt;code&gt;Operation&lt;/code&gt; モデルが準備ができているかどうかを確認するために使用します。その操作が空の1D文字列テンソルを返す場合、モデルは準備ができていると見なされます。操作が空でない1D文字列テンソルを返す場合、要素は連結され、モデルが準備できていない理由をユーザーに示すために使用されます。</target>
        </trans-unit>
        <trans-unit id="6e2627a0b13cf79619cf55143c1bafbedffc6df2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;recall&lt;/code&gt; function creates two local variables, &lt;code&gt;true_positives&lt;/code&gt; and &lt;code&gt;false_negatives&lt;/code&gt;, that are used to compute the recall. This value is ultimately returned as &lt;code&gt;recall&lt;/code&gt;, an idempotent operation that simply divides &lt;code&gt;true_positives&lt;/code&gt; by the sum of &lt;code&gt;true_positives&lt;/code&gt; and &lt;code&gt;false_negatives&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;recall&lt;/code&gt; 機能は、2つのローカル変数、作成 &lt;code&gt;true_positives&lt;/code&gt; と &lt;code&gt;false_negatives&lt;/code&gt; リコールを計算するために使用されています、。この値は最終的に、 &lt;code&gt;recall&lt;/code&gt; として返されます。これは、 &lt;code&gt;true_positives&lt;/code&gt; を &lt;code&gt;false_negatives&lt;/code&gt; の合計で単純に除算する &lt;code&gt;true_positives&lt;/code&gt; 等演算です。</target>
        </trans-unit>
        <trans-unit id="bb44adc5fb4d7d2974a8444bc13883fdc576fe0e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;recall_at_thresholds&lt;/code&gt; function creates four local variables, &lt;code&gt;true_positives&lt;/code&gt;, &lt;code&gt;true_negatives&lt;/code&gt;, &lt;code&gt;false_positives&lt;/code&gt; and &lt;code&gt;false_negatives&lt;/code&gt; for various values of thresholds. &lt;code&gt;recall[i]&lt;/code&gt; is defined as the total weight of values in &lt;code&gt;predictions&lt;/code&gt; above &lt;code&gt;thresholds[i]&lt;/code&gt; whose corresponding entry in &lt;code&gt;labels&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;, divided by the total weight of &lt;code&gt;True&lt;/code&gt; values in &lt;code&gt;labels&lt;/code&gt; (&lt;code&gt;true_positives[i] / (true_positives[i] + false_negatives[i])&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;recall_at_thresholds&lt;/code&gt; の機能は、4つのローカル変数、作成 &lt;code&gt;true_positives&lt;/code&gt; 、 &lt;code&gt;true_negatives&lt;/code&gt; 、 &lt;code&gt;false_positives&lt;/code&gt; と &lt;code&gt;false_negatives&lt;/code&gt; を閾値の種々の値について。 &lt;code&gt;recall[i]&lt;/code&gt; 、値の合計重量として定義される &lt;code&gt;predictions&lt;/code&gt; 上記 &lt;code&gt;thresholds[i]&lt;/code&gt; を持つ対応するエントリ内の &lt;code&gt;labels&lt;/code&gt; である &lt;code&gt;True&lt;/code&gt; の総重量で割った、 &lt;code&gt;True&lt;/code&gt; の値 &lt;code&gt;labels&lt;/code&gt; （ &lt;code&gt;true_positives[i] / (true_positives[i] + false_negatives[i])&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="1de524f73c4314e7c1d91fd220ad1d6d3224de54" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reverse&lt;/code&gt; and &lt;code&gt;exclusive&lt;/code&gt; kwargs can also be combined:</source>
          <target state="translated">&lt;code&gt;reverse&lt;/code&gt; と &lt;code&gt;exclusive&lt;/code&gt; kwargsからも組み合わせることができます。</target>
        </trans-unit>
        <trans-unit id="7095d9dae674a6139b14cf56a48942249fb95a3a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;root_mean_squared_error&lt;/code&gt; function creates two local variables, &lt;code&gt;total&lt;/code&gt; and &lt;code&gt;count&lt;/code&gt; that are used to compute the root mean squared error. This average is weighted by &lt;code&gt;weights&lt;/code&gt;, and it is ultimately returned as &lt;code&gt;root_mean_squared_error&lt;/code&gt;: an idempotent operation that takes the square root of the division of &lt;code&gt;total&lt;/code&gt; by &lt;code&gt;count&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;root_mean_squared_error&lt;/code&gt; の機能は、2つのローカル変数、作成 &lt;code&gt;total&lt;/code&gt; と &lt;code&gt;count&lt;/code&gt; 根平均二乗誤差を計算するために使用されています。この平均値は、で重み付けされ &lt;code&gt;weights&lt;/code&gt; 、それが最終的として返され &lt;code&gt;root_mean_squared_error&lt;/code&gt; ：の部門の平方根とるべき等の操作 &lt;code&gt;total&lt;/code&gt; で &lt;code&gt;count&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7881e064a0f67020a02c8653b63784b07ff64c62" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;row_splits&lt;/code&gt; tensor indicates where the codepoints and start offsets for each input string begin and end within the &lt;code&gt;char_values&lt;/code&gt; and &lt;code&gt;char_to_byte_starts&lt;/code&gt; tensors. In particular, the values for the &lt;code&gt;i&lt;/code&gt;th string (in row-major order) are stored in the slice &lt;code&gt;[row_splits[i]:row_splits[i+1]]&lt;/code&gt;. Thus:</source>
          <target state="translated">&lt;code&gt;row_splits&lt;/code&gt; コードポイントと以内に開始及び終了それぞれの入力文字列のオフセットを開始示しテンソル &lt;code&gt;char_values&lt;/code&gt; と &lt;code&gt;char_to_byte_starts&lt;/code&gt; のテンソル。特に、 &lt;code&gt;i&lt;/code&gt; 番目の文字列の値（行 &lt;code&gt;[row_splits[i]:row_splits[i+1]]&lt;/code&gt; 順）はスライス[row_splits [i]：row_splits [i +1]]に格納されます。したがって：</target>
        </trans-unit>
        <trans-unit id="01e6fbf0499b79f1cde87a483276287ea014214c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;row_splits&lt;/code&gt; tensor indicates where the codepoints for each input string begin and end within the &lt;code&gt;char_values&lt;/code&gt; tensor. In particular, the values for the &lt;code&gt;i&lt;/code&gt;th string (in row-major order) are stored in the slice &lt;code&gt;[row_splits[i]:row_splits[i+1]]&lt;/code&gt;. Thus:</source>
          <target state="translated">&lt;code&gt;row_splits&lt;/code&gt; 各入力文字列のためのコードポイントが始まると内端場所を示すテンソル &lt;code&gt;char_values&lt;/code&gt; のテンソル。特に、 &lt;code&gt;i&lt;/code&gt; 番目の文字列の値（行 &lt;code&gt;[row_splits[i]:row_splits[i+1]]&lt;/code&gt; 順）はスライス[row_splits [i]：row_splits [i +1]]に格納されます。したがって：</target>
        </trans-unit>
        <trans-unit id="458e5a2574272cd3d33b7c903a0b4f0ec7f14636" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;run_context&lt;/code&gt; argument is a &lt;code&gt;SessionRunContext&lt;/code&gt; that provides information about the upcoming &lt;code&gt;run()&lt;/code&gt; call: the originally requested op/tensors, the TensorFlow Session.</source>
          <target state="translated">&lt;code&gt;run_context&lt;/code&gt; 引数がある &lt;code&gt;SessionRunContext&lt;/code&gt; 、今後の情報提供 &lt;code&gt;run()&lt;/code&gt; 最初に要求OP /テンソル、TensorFlowセッション：コールを。</target>
        </trans-unit>
        <trans-unit id="cf828e3dc7b5c6afebb2a4e95b3f86639dbbc64b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;run_context&lt;/code&gt; argument is the same one send to &lt;code&gt;before_run&lt;/code&gt; call. &lt;code&gt;run_context.request_stop()&lt;/code&gt; can be called to stop the iteration.</source>
          <target state="translated">&lt;code&gt;run_context&lt;/code&gt; の引数は同じに1センドある &lt;code&gt;before_run&lt;/code&gt; コール。 &lt;code&gt;run_context.request_stop()&lt;/code&gt; を呼び出して、反復を停止できます。</target>
        </trans-unit>
        <trans-unit id="94f5d1df32e6ce942188c9ddfd764b608ff17856" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;run_values&lt;/code&gt; argument contains results of requested ops/tensors by &lt;code&gt;before_run()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;run_values&lt;/code&gt; の引数は、によって要求されたオペレーション/テンソルの結果が含まれています &lt;code&gt;before_run()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="be802e4b5940c54925a16198fd046cde07510ef1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;save_path&lt;/code&gt; argument is typically a value previously returned from a &lt;code&gt;save()&lt;/code&gt; call, or a call to &lt;code&gt;latest_checkpoint()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;save_path&lt;/code&gt; の引数は、通常、以前から返された値である &lt;code&gt;save()&lt;/code&gt; の呼び出し、またはの呼び出し &lt;code&gt;latest_checkpoint()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f865f0bbd1d6f2fff1a5c15f6500c2a842d180ca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;seed&lt;/code&gt; argument produces a deterministic sequence of tensors across multiple calls. To repeat that sequence, use &lt;a href=&quot;set_seed&quot;&gt;&lt;code&gt;tf.random.set_seed&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;seed&lt;/code&gt; 引数には、複数の呼び出し間でテンソルの決定論的シーケンスを生成します。そのシーケンスを繰り返すには、&lt;a href=&quot;set_seed&quot;&gt; &lt;code&gt;tf.random.set_seed&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="cd56b7af0c6b81f60b1e8953cb5fa5a8ea87a447" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sensitivity_at_specificity&lt;/code&gt; function creates four local variables, &lt;code&gt;true_positives&lt;/code&gt;, &lt;code&gt;true_negatives&lt;/code&gt;, &lt;code&gt;false_positives&lt;/code&gt; and &lt;code&gt;false_negatives&lt;/code&gt; that are used to compute the sensitivity at the given specificity value. The threshold for the given specificity value is computed and used to evaluate the corresponding sensitivity.</source>
          <target state="translated">&lt;code&gt;sensitivity_at_specificity&lt;/code&gt; の機能は、4つのローカル変数、作成 &lt;code&gt;true_positives&lt;/code&gt; 、 &lt;code&gt;true_negatives&lt;/code&gt; 、 &lt;code&gt;false_positives&lt;/code&gt; と &lt;code&gt;false_negatives&lt;/code&gt; 所定の特異値での感度を計算するために使用されます。指定された特異度値のしきい値が計算され、対応する感度を評価するために使用されます。</target>
        </trans-unit>
        <trans-unit id="e87df8700aa595c22c3204338d3a54c757320ca4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sequence&lt;/code&gt; format is recommended as the one with the best performance.</source>
          <target state="translated">&lt;code&gt;sequence&lt;/code&gt; フォーマットは最高の性能を持つものとして推奨されています。</target>
        </trans-unit>
        <trans-unit id="4c2d41a4697cb394d4d9e0620c83a904374239b4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;session&lt;/code&gt; argument can be used in case the hook wants to run final ops, such as saving a last checkpoint.</source>
          <target state="translated">&lt;code&gt;session&lt;/code&gt; 引数は、フックは、このような最後のチェックポイントを保存するなど、最終的なOPSを、実行したい場合にも使用することができます。</target>
        </trans-unit>
        <trans-unit id="8c5409b22ac50361a38c4e5620fb792814a952ea" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;session&lt;/code&gt; argument to the constructor makes the returned &lt;code&gt;FileWriter&lt;/code&gt; a compatibility layer over new graph-based summaries (&lt;code&gt;tf.contrib.summary&lt;/code&gt;). Crucially, this means the underlying writer resource and events file will be shared with any other &lt;code&gt;FileWriter&lt;/code&gt; using the same &lt;code&gt;session&lt;/code&gt; and &lt;code&gt;logdir&lt;/code&gt;, and with any &lt;code&gt;tf.contrib.summary.SummaryWriter&lt;/code&gt; in this session using the the same shared resource name (which by default scoped to the logdir). If no such resource exists, one will be created using the remaining arguments to this constructor, but if one already exists those arguments are ignored. In either case, ops will be added to &lt;code&gt;session.graph&lt;/code&gt; to control the underlying file writer resource. See &lt;code&gt;tf.contrib.summary&lt;/code&gt; for more details.</source>
          <target state="translated">コンストラクターへの &lt;code&gt;session&lt;/code&gt; 引数により、返される &lt;code&gt;FileWriter&lt;/code&gt; が新しいグラフベースの要約（ &lt;code&gt;tf.contrib.summary&lt;/code&gt; ）に対する互換性レイヤーになります。重要なことに、これは、基になるライターリソースとイベントファイルが、同じ &lt;code&gt;session&lt;/code&gt; と &lt;code&gt;logdir&lt;/code&gt; を使用する他の &lt;code&gt;FileWriter&lt;/code&gt; と共有され、同じセッションで同じ共有リソース名を使用するすべての &lt;code&gt;tf.contrib.summary.SummaryWriter&lt;/code&gt; と共有されることを意味します。 logdirに）。そのようなリソースが存在しない場合は、このコンストラクタへの残りの引数を使用して作成されますが、既に存在する場合、それらの引数は無視されます。どちらの場合も、opsは &lt;code&gt;session.graph&lt;/code&gt; に追加されます基になるファイルライターリソースを制御します。詳細については、 &lt;code&gt;tf.contrib.summary&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="97ff29fadf0e70b89b34fdebe66a53feae7519dd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;set_verbosity&lt;/code&gt; function</source>
          <target state="translated">&lt;code&gt;set_verbosity&lt;/code&gt; の機能</target>
        </trans-unit>
        <trans-unit id="303d3a64650f2563c6f2537d372e68f6d33680c2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;shape&lt;/code&gt; argument to &lt;code&gt;Variable&lt;/code&gt;'s constructor allows you to construct a variable with a less defined shape than its &lt;code&gt;initial_value&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Variable&lt;/code&gt; のコンストラクタの &lt;code&gt;shape&lt;/code&gt; 引数を使用すると、 &lt;code&gt;initial_value&lt;/code&gt; よりも定義された形状が少ない変数を作成できます。</target>
        </trans-unit>
        <trans-unit id="995bb7427d25ed39381d1e3024a81d1388decd49" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;shape&lt;/code&gt; must be 1-D and the operation returns a tensor with shape &lt;code&gt;shape&lt;/code&gt; filled with the values of &lt;code&gt;tensor&lt;/code&gt;. In this case, the number of elements implied by &lt;code&gt;shape&lt;/code&gt; must be the same as the number of elements in &lt;code&gt;tensor&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;shape&lt;/code&gt; 1次元でなければならず、操作は、形状とテンソルを返す &lt;code&gt;shape&lt;/code&gt; の値で満たさ &lt;code&gt;tensor&lt;/code&gt; 。この場合、 &lt;code&gt;shape&lt;/code&gt; によって示される要素の数は、 &lt;code&gt;tensor&lt;/code&gt; の要素の数と同じである必要があります。</target>
        </trans-unit>
        <trans-unit id="5096c5e057bb7371bd8b3aaa5fa49bb7491933b2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;shape_and_slice&lt;/code&gt; input has the same format as the elements of the &lt;code&gt;shapes_and_slices&lt;/code&gt; input of the &lt;code&gt;SaveSlices&lt;/code&gt; op.</source>
          <target state="translated">&lt;code&gt;shape_and_slice&lt;/code&gt; の入力の要素と同じ形式は &lt;code&gt;shapes_and_slices&lt;/code&gt; 用の入力 &lt;code&gt;SaveSlices&lt;/code&gt; のオペアンプを。</target>
        </trans-unit>
        <trans-unit id="c69ff0d563e037b396ab2e9976bb7ebc62fb1134" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;shapes&lt;/code&gt; argument must be specified; each component of a queue element must have the respective shape. Shapes of fixed rank but variable size are allowed by setting any shape dimension to None. In this case, the inputs' shape may vary along the given dimension, and &lt;code&gt;dequeue_many&lt;/code&gt; will pad the given dimension with zeros up to the maximum shape of all elements in the given batch.</source>
          <target state="translated">&lt;code&gt;shapes&lt;/code&gt; 引数を指定する必要があります。キュー要素の各コンポーネントは、それぞれの形状を持っている必要があります。固定次元であるが可変サイズの形状は、任意の形状寸法をなしに設定することで許可されます。この場合、入力の形状は指定された次元に沿って変化する可能性があり、 &lt;code&gt;dequeue_many&lt;/code&gt; は、指定されたバッチ内のすべての要素の最大形状まで、指定された次元にゼロを埋めます。</target>
        </trans-unit>
        <trans-unit id="ab0ab5c8b4fa1e59681b582306920e3555e0b84e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;shift&lt;/code&gt; argument determines the number of input elements by which the window moves on each iteration. If windows and elements are both numbered starting at 0, the first element in window &lt;code&gt;k&lt;/code&gt; will be element &lt;code&gt;k * shift&lt;/code&gt; of the input dataset. In particular, the first element of the first window will always be the first element of the input dataset.</source>
          <target state="translated">&lt;code&gt;shift&lt;/code&gt; 引数は、ウィンドウが各反復に移動することによって、入力要素の数を決定します。ウィンドウと要素の両方に0から始まる番号が付けられている場合、ウィンドウ &lt;code&gt;k&lt;/code&gt; の最初の要素は要素 &lt;code&gt;k * shift&lt;/code&gt; 入力データセットのシフトになります。特に、最初のウィンドウの最初の要素は、常に入力データセットの最初の要素になります。</target>
        </trans-unit>
        <trans-unit id="c8ead13fa637337db4285f46038ea1a1a7e03519" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;shift&lt;/code&gt; argument determines the number of input elements by which the window moves on each iteration. The first element in the &lt;code&gt;k&lt;/code&gt;th window will be element</source>
          <target state="translated">&lt;code&gt;shift&lt;/code&gt; 引数は、ウィンドウが各反復に移動することによって、入力要素の数を決定します。 &lt;code&gt;k&lt;/code&gt; 番目のウィンドウの最初の要素は要素になります</target>
        </trans-unit>
        <trans-unit id="6d1e6359fd2b9322b254250e0bc1bdb6607c603e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sizes&lt;/code&gt; tensor specifies repeat counts for each field. The repeat count (last dimension) of a each tensor in &lt;code&gt;values&lt;/code&gt; must be greater than or equal to corresponding repeat count in &lt;code&gt;sizes&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sizes&lt;/code&gt; を指定テンソルは、各フィールドのカウントを繰り返します。 &lt;code&gt;values&lt;/code&gt; 各テンソルの繰り返し数（最後の次元）は、対応する &lt;code&gt;sizes&lt;/code&gt; 繰り返し数以上でなければなりません。</target>
        </trans-unit>
        <trans-unit id="6881b3cf0171ded834c55d240775c14753ca1a7e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sparse_combiner&lt;/code&gt; argument works as follows For example, for two features represented as the categorical columns:</source>
          <target state="translated">&lt;code&gt;sparse_combiner&lt;/code&gt; の引数は、として、カテゴリ列として表される2つの機能のために、例えば次の作品：</target>
        </trans-unit>
        <trans-unit id="a8e8fe9df97a94b949937ed1f21ec89b558385be" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;specificity_at_sensitivity&lt;/code&gt; function creates four local variables, &lt;code&gt;true_positives&lt;/code&gt;, &lt;code&gt;true_negatives&lt;/code&gt;, &lt;code&gt;false_positives&lt;/code&gt; and &lt;code&gt;false_negatives&lt;/code&gt; that are used to compute the specificity at the given sensitivity value. The threshold for the given sensitivity value is computed and used to evaluate the corresponding specificity.</source>
          <target state="translated">&lt;code&gt;specificity_at_sensitivity&lt;/code&gt; の機能は、4つのローカル変数、作成 &lt;code&gt;true_positives&lt;/code&gt; 、 &lt;code&gt;true_negatives&lt;/code&gt; 、 &lt;code&gt;false_positives&lt;/code&gt; と &lt;code&gt;false_negatives&lt;/code&gt; 所定の感度値において特異性を計算するために使用されます。所定の感度値のしきい値が計算され、対応する特異性を評価するために使用されます。</target>
        </trans-unit>
        <trans-unit id="cb73b0594146c19de95fb48de33a2ddca84ec873" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;stride&lt;/code&gt; argument determines the stride of the input elements, and the &lt;code&gt;shift&lt;/code&gt; argument determines the shift of the window.</source>
          <target state="translated">&lt;code&gt;stride&lt;/code&gt; 引数は、入力要素のストライドを決定し、 &lt;code&gt;shift&lt;/code&gt; 引数は、ウィンドウのシフトを決定します。</target>
        </trans-unit>
        <trans-unit id="a74f9dc305f1b43559e657d172a2c2d77ebf9598" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;tag&lt;/code&gt; argument is a scalar &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. It is used to build the &lt;code&gt;tag&lt;/code&gt; of the summary values:</source>
          <target state="translated">&lt;code&gt;tag&lt;/code&gt; 引数は、スカラーである &lt;code&gt;Tensor&lt;/code&gt; 型の &lt;code&gt;string&lt;/code&gt; 。サマリー値の &lt;code&gt;tag&lt;/code&gt; を作成するために使用されます。</target>
        </trans-unit>
        <trans-unit id="2cdbc2357c63bcb39a39386eb4f06b9794007481" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;tag&lt;/code&gt; in the outputted Summary.Value protobufs is generated based on the name, with a suffix depending on the max_outputs setting:</source>
          <target state="translated">出力されたSummary.Valueprotobufsの &lt;code&gt;tag&lt;/code&gt; は、名前に基づいて生成され、max_outputs設定に応じて接尾辞が付けられます。</target>
        </trans-unit>
        <trans-unit id="7cb863ed936a846c83669117e5a427aa5ac1c932" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;tensors_list&lt;/code&gt; argument is a list of tuples of tensors, or a list of dictionaries of tensors. Each element in the list is treated similarly to the &lt;code&gt;tensors&lt;/code&gt; argument of &lt;a href=&quot;batch&quot;&gt;&lt;code&gt;tf.compat.v1.train.batch()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;tensors_list&lt;/code&gt; の引数は、テンソルのタプルのリスト、またはテンソルの辞書のリストです。リスト内の各要素は、と同様に処理された &lt;code&gt;tensors&lt;/code&gt; の引数&lt;a href=&quot;batch&quot;&gt; &lt;code&gt;tf.compat.v1.train.batch()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="410a750f639c5f1de66d97c0804239f72c4604d0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;tensors_list&lt;/code&gt; argument is a list of tuples of tensors, or a list of dictionaries of tensors. Each element in the list is treated similarly to the &lt;code&gt;tensors&lt;/code&gt; argument of &lt;a href=&quot;shuffle_batch&quot;&gt;&lt;code&gt;tf.compat.v1.train.shuffle_batch()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;tensors_list&lt;/code&gt; の引数は、テンソルのタプルのリスト、またはテンソルの辞書のリストです。リスト内の各要素は、と同様に処理された &lt;code&gt;tensors&lt;/code&gt; の引数&lt;a href=&quot;shuffle_batch&quot;&gt; &lt;code&gt;tf.compat.v1.train.shuffle_batch()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e8643ae6bb3114dbfb70eef96843715bb87d8ebd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;timeout&lt;/code&gt; argument is the maximum number of seconds to block waiting for a new checkpoint. It is used in combination with the &lt;code&gt;timeout_fn&lt;/code&gt; as follows:</source>
          <target state="translated">&lt;code&gt;timeout&lt;/code&gt; 引数には、新しいチェックポイントを待ってブロックする最大秒数です。次のように、 &lt;code&gt;timeout_fn&lt;/code&gt; と組み合わせて使用​​されます。</target>
        </trans-unit>
        <trans-unit id="807f1f04969e4f2ae0883a825c647b1f0d8a39fc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;type&lt;/code&gt; parameter denotes the type of the matrix elements. Both &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; must have the same type. The supported types are: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt; and &lt;code&gt;complex128&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; パラメータは、行列の要素の種類を示しています。 &lt;code&gt;a&lt;/code&gt; と &lt;code&gt;b&lt;/code&gt; の両方が同じタイプである必要があります。サポートされるタイプは次のとおりです。 &lt;code&gt;float32&lt;/code&gt; 、 &lt;code&gt;float64&lt;/code&gt; 型、 &lt;code&gt;complex64&lt;/code&gt; と &lt;code&gt;complex128&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8e399b2f0589b0205025fb98a811a310105aeb18" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;type&lt;/code&gt; parameter denotes the type of the matrix elements. The supported types are: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt; and &lt;code&gt;complex128&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; パラメータは、行列の要素の種類を示しています。サポートされるタイプは次のとおりです。 &lt;code&gt;float32&lt;/code&gt; 、 &lt;code&gt;float64&lt;/code&gt; 型、 &lt;code&gt;complex64&lt;/code&gt; と &lt;code&gt;complex128&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1c6a77ac96bac9f8fce1798d1188124dbf4505e6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;value&lt;/code&gt; data type.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; データ型。</target>
        </trans-unit>
        <trans-unit id="972185be83406631ec3872d41f4d67b45194a05d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;value&lt;/code&gt; tensor has shape &lt;code&gt;[batch, in_height, in_width, depth]&lt;/code&gt; and the &lt;code&gt;filters&lt;/code&gt; tensor has shape &lt;code&gt;[filters_height, filters_width, depth]&lt;/code&gt;, i.e., each input channel is processed independently of the others with its own structuring function. The &lt;code&gt;output&lt;/code&gt; tensor has shape &lt;code&gt;[batch, out_height, out_width, depth]&lt;/code&gt;. The spatial dimensions of the output tensor depend on the &lt;code&gt;padding&lt;/code&gt; algorithm. We currently only support the default &quot;NHWC&quot; &lt;code&gt;data_format&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; テンソルの形状有する &lt;code&gt;[batch, in_height, in_width, depth]&lt;/code&gt; と &lt;code&gt;filters&lt;/code&gt; の形状を有するテンソル &lt;code&gt;[filters_height, filters_width, depth]&lt;/code&gt; 、すなわち、各入力チャンネルは、それ自身の構造化機能を他とは独立に処理されます。 &lt;code&gt;output&lt;/code&gt; テンソルの形状有する &lt;code&gt;[batch, out_height, out_width, depth]&lt;/code&gt; 。出力テンソルの空間次元は、 &lt;code&gt;padding&lt;/code&gt; アルゴリズムに依存します。現在、デフォルトの「NHWC」 &lt;code&gt;data_format&lt;/code&gt; のみをサポートしています。</target>
        </trans-unit>
        <trans-unit id="9754d069f440bf7569706c44c08fdac07bea1efd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;value&lt;/code&gt; tensor has shape &lt;code&gt;[batch, in_height, in_width, depth]&lt;/code&gt; and the &lt;code&gt;kernel&lt;/code&gt; tensor has shape &lt;code&gt;[kernel_height, kernel_width, depth]&lt;/code&gt;, i.e., each input channel is processed independently of the others with its own structuring function. The &lt;code&gt;output&lt;/code&gt; tensor has shape &lt;code&gt;[batch, out_height, out_width, depth]&lt;/code&gt;. The spatial dimensions of the output tensor depend on the &lt;code&gt;padding&lt;/code&gt; algorithm. We currently only support the default &quot;NHWC&quot; &lt;code&gt;data_format&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; テンソルの形状有する &lt;code&gt;[batch, in_height, in_width, depth]&lt;/code&gt; と &lt;code&gt;kernel&lt;/code&gt; テンソルの形状有する &lt;code&gt;[kernel_height, kernel_width, depth]&lt;/code&gt; 、すなわち、各入力チャンネルは、それ自身の構造化機能を他とは独立に処理されます。 &lt;code&gt;output&lt;/code&gt; テンソルの形状有する &lt;code&gt;[batch, out_height, out_width, depth]&lt;/code&gt; 。出力テンソルの空間次元は、 &lt;code&gt;padding&lt;/code&gt; アルゴリズムに依存します。現在、デフォルトの「NHWC」 &lt;code&gt;data_format&lt;/code&gt; のみをサポートしています。</target>
        </trans-unit>
        <trans-unit id="8e0daa2997898655580fac130d0dbe55448f0e54" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;values&lt;/code&gt; data type. Used when &lt;code&gt;values&lt;/code&gt; is a python array.</source>
          <target state="translated">&lt;code&gt;values&lt;/code&gt; データ型。 &lt;code&gt;values&lt;/code&gt; がPython配列の場合に使用されます。</target>
        </trans-unit>
        <trans-unit id="7671379c01d658910f965c7fbeadd766859617c9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;x&lt;/code&gt;, and &lt;code&gt;y&lt;/code&gt; tensors must all have the same shape, and the output will also have that shape.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 、および &lt;code&gt;y&lt;/code&gt; テンソルは、全て同じ形状を有する必要があり、出力は、その形状を有しているであろう。</target>
        </trans-unit>
        <trans-unit id="0e0b84cabe53e9e5c6c0da1ca87fa0c58be00cc6" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;EM&lt;/em&gt; algorithm where the &lt;em&gt;M-step&lt;/em&gt; should not involve backpropagation through the output of the &lt;em&gt;E-step&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;EM&lt;/em&gt;アルゴリズム&lt;em&gt;M-ステップは、&lt;/em&gt;出力を通じてバックプロパゲーションを伴うべきではありません&lt;em&gt;E-ステップ&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="b18ff4b0c03781a21c34b4aa7c91c48fe6607e87" translate="yes" xml:space="preserve">
          <source>The API also assigns ops in tf.compat.v1.trainable_variables() an op type called '_trainable_variables'. The API also logs 'flops' statistics for ops with op.RegisterStatistics() defined. flops calculation depends on Tensor shapes defined in 'graph', which might not be complete. 'run_meta', if provided, completes the shape information with best effort.</source>
          <target state="translated">API は tf.compat.v1.trainable_variables()の op に '_trainable_variables' という op タイプを割り当てています。また、op.RegisterStatistics()が定義されているopの統計情報'flops'もログに記録されます。run_meta' が提供されている場合は、最善の努力で形状情報を補完します。</target>
        </trans-unit>
        <trans-unit id="35cdea1353819951b9d17d1a0b3f4b3c895f479c" translate="yes" xml:space="preserve">
          <source>The API symbol is not intended to be called by users directly and does appear in TensorFlow's generated documentation.</source>
          <target state="translated">APIシンボルはユーザーが直接呼び出すことを意図したものではなく、TensorFlowの生成されたドキュメントにも登場します。</target>
        </trans-unit>
        <trans-unit id="6d0fc1f05596c2c92bd92cba556fe327b716c416" translate="yes" xml:space="preserve">
          <source>The Bernoulli distribution with &lt;code&gt;probs&lt;/code&gt; parameter, i.e., the probability of a &lt;code&gt;1&lt;/code&gt; outcome (vs a &lt;code&gt;0&lt;/code&gt; outcome).</source>
          <target state="translated">ベルヌーイ分布 &lt;code&gt;probs&lt;/code&gt; パラメータ、すなわち、確率 &lt;code&gt;1&lt;/code&gt; つの（VS結果 &lt;code&gt;0&lt;/code&gt; の結果）。</target>
        </trans-unit>
        <trans-unit id="9353ab8095bc0b0b24b3be126e8e9c7fb1f1ad3d" translate="yes" xml:space="preserve">
          <source>The Beta distribution is defined over the &lt;code&gt;(0, 1)&lt;/code&gt; interval using parameters &lt;code&gt;concentration1&lt;/code&gt; (aka &quot;alpha&quot;) and &lt;code&gt;concentration0&lt;/code&gt; (aka &quot;beta&quot;).</source>
          <target state="translated">ベータ分布は &lt;code&gt;(0, 1)&lt;/code&gt; パラメーター &lt;code&gt;concentration1&lt;/code&gt; （別名「アルファ」）および &lt;code&gt;concentration0&lt;/code&gt; 0（別名「ベータ」）を使用して、（0、1）間隔で定義されます。</target>
        </trans-unit>
        <trans-unit id="eeb17415817c833db2a71ea4466b394324558027" translate="yes" xml:space="preserve">
          <source>The C++ FileSystem API supports multiple file system implementations, including local files, Google Cloud Storage (using a &lt;code&gt;gs://&lt;/code&gt; prefix, and HDFS (using an &lt;code&gt;hdfs://&lt;/code&gt; prefix). TensorFlow exports these as &lt;code&gt;tf.io.gfile&lt;/code&gt;, so that you can use these implementations for saving and loading checkpoints, writing to TensorBoard logs, and accessing training data (among other uses). However, if all your files are local, you can use the regular Python file API without any problem.</source>
          <target state="translated">C ++ FileSystem APIは、ローカルファイル、Google Cloud Storage（ &lt;code&gt;gs://&lt;/code&gt; プレフィックスを使用）、HDFS（ &lt;code&gt;hdfs://&lt;/code&gt; プレフィックスを使用）など、複数のファイルシステム実装をサポートします。TensorFlowはこれらを &lt;code&gt;tf.io.gfile&lt;/code&gt; としてエクスポートするため、これらの実装を使用して、チェックポイントの保存と読み込み、TensorBoardログへの書き込み、トレーニングデータへのアクセス（その他の用途など）を行うことができます。ただし、すべてのファイルがローカルの場合は、通常のPythonファイルAPIを問題なく使用できます。</target>
        </trans-unit>
        <trans-unit id="abea42cad220fd20eda787ac80e243e2cf47e13d" translate="yes" xml:space="preserve">
          <source>The Categorical distribution is closely related to the &lt;code&gt;OneHotCategorical&lt;/code&gt; and &lt;code&gt;Multinomial&lt;/code&gt; distributions. The Categorical distribution can be intuited as generating samples according to &lt;code&gt;argmax{ OneHotCategorical(probs) }&lt;/code&gt; itself being identical to &lt;code&gt;argmax{ Multinomial(probs, total_count=1) }&lt;/code&gt;.</source>
          <target state="translated">カテゴリ分布は、 &lt;code&gt;OneHotCategorical&lt;/code&gt; および &lt;code&gt;Multinomial&lt;/code&gt; 分布と密接に関連しています。カテゴリー分布は、 &lt;code&gt;argmax{ OneHotCategorical(probs) }&lt;/code&gt; 自体が &lt;code&gt;argmax{ Multinomial(probs, total_count=1) }&lt;/code&gt; と同一であることに応じてサンプルを生成するように直感的に使用できます。</target>
        </trans-unit>
        <trans-unit id="6c2637ba9bb0ae73ad068069b2445eb1bf971490" translate="yes" xml:space="preserve">
          <source>The Categorical distribution is parameterized by either probabilities or log-probabilities of a set of &lt;code&gt;K&lt;/code&gt; classes. It is defined over the integers &lt;code&gt;{0, 1, ..., K}&lt;/code&gt;.</source>
          <target state="translated">カテゴリー分布は、 &lt;code&gt;K&lt;/code&gt; クラスのセットの確率または対数確率のいずれかによってパラメーター化されます。整数 &lt;code&gt;{0, 1, ..., K}&lt;/code&gt; 定義されます。</target>
        </trans-unit>
        <trans-unit id="90df9f68f1bf90b37500c909eccb4526c5231678" translate="yes" xml:space="preserve">
          <source>The Class &lt;a href=&quot;../../image/resizemethod&quot;&gt;&lt;code&gt;tf.image.ResizeMethod&lt;/code&gt;&lt;/a&gt; provides various resize methods like &lt;code&gt;bilinear&lt;/code&gt;, &lt;code&gt;nearest_neighbor&lt;/code&gt;.</source>
          <target state="translated">クラス&lt;a href=&quot;../../image/resizemethod&quot;&gt; &lt;code&gt;tf.image.ResizeMethod&lt;/code&gt; &lt;/a&gt;は、 &lt;code&gt;bilinear&lt;/code&gt; 、 &lt;code&gt;nearest_neighbor&lt;/code&gt; などのさまざまなサイズ変更メソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="ba0e0e764a04f5d3663fdeffe26bef760c621f01" translate="yes" xml:space="preserve">
          <source>The Class &lt;a href=&quot;image/resizemethod&quot;&gt;&lt;code&gt;tf.image.ResizeMethod&lt;/code&gt;&lt;/a&gt; provides various resize methods like &lt;code&gt;bilinear&lt;/code&gt;, &lt;code&gt;nearest_neighbor&lt;/code&gt;.</source>
          <target state="translated">クラス&lt;a href=&quot;image/resizemethod&quot;&gt; &lt;code&gt;tf.image.ResizeMethod&lt;/code&gt; &lt;/a&gt;は、 &lt;code&gt;bilinear&lt;/code&gt; 、 &lt;code&gt;nearest_neighbor&lt;/code&gt; などのさまざまなサイズ変更メソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="a66f064277a2e3928ce326dffecdba70543ff622" translate="yes" xml:space="preserve">
          <source>The ClusterResolver will then use the parameters to query the Cloud TPU APIs for the IP addresses and ports of each Cloud TPU listed.</source>
          <target state="translated">その後、ClusterResolverはパラメータを使用して、リストされた各Cloud TPUのIPアドレスとポートについてCloud TPU APIをクエリします。</target>
        </trans-unit>
        <trans-unit id="345e361eb29b1a63bf06b68ef8175eed879cd43c" translate="yes" xml:space="preserve">
          <source>The Coordinator can be useful if you want to run multiple threads during your training.</source>
          <target state="translated">コーディネーターは、トレーニング中に複数のスレッドを走らせたい場合に便利です。</target>
        </trans-unit>
        <trans-unit id="625b1613ee5ff0ad2573b9f62d520cc8545d17ac" translate="yes" xml:space="preserve">
          <source>The DCT type to perform. Must be 1, 2, 3 or 4.</source>
          <target state="translated">実行するDCTタイプ。1、2、3または4でなければなりません。</target>
        </trans-unit>
        <trans-unit id="751bb659f3927cb28c8460bf1418a1772ceee9d2" translate="yes" xml:space="preserve">
          <source>The DType of an element in the resulting &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="translated">結果の &lt;code&gt;Tensor&lt;/code&gt; の要素のDType 。</target>
        </trans-unit>
        <trans-unit id="762ae5bf9871f156d31ebbf73968a3d2925b8520" translate="yes" xml:space="preserve">
          <source>The Dirichlet distribution is defined over the &lt;a href=&quot;https://en.wikipedia.org/wiki/Simplex&quot;&gt;&lt;code&gt;(k-1)&lt;/code&gt;-simplex&lt;/a&gt; using a positive, length-&lt;code&gt;k&lt;/code&gt; vector &lt;code&gt;concentration&lt;/code&gt; (&lt;code&gt;k &amp;gt; 1&lt;/code&gt;). The Dirichlet is identically the Beta distribution when &lt;code&gt;k = 2&lt;/code&gt;.</source>
          <target state="translated">ディリクレ分布は、長さ &lt;code&gt;k&lt;/code&gt; の正のベクトル &lt;code&gt;concentration&lt;/code&gt; （ &lt;code&gt;k &amp;gt; 1&lt;/code&gt; ）を使用して&lt;a href=&quot;https://en.wikipedia.org/wiki/Simplex&quot;&gt; &lt;code&gt;(k-1)&lt;/code&gt; シンプレックス&lt;/a&gt;上で定義されます。ディリクレは、 &lt;code&gt;k = 2&lt;/code&gt; 場合のベータ分布と同じです。</target>
        </trans-unit>
        <trans-unit id="e30884de69ccdd0148c69a6e73300256037fabed" translate="yes" xml:space="preserve">
          <source>The Dirichlet is a distribution over the open &lt;code&gt;(k-1)&lt;/code&gt;-simplex, i.e.,</source>
          <target state="translated">ディリクレは、オープン &lt;code&gt;(k-1)&lt;/code&gt; シンプレックス上の分布です。つまり、</target>
        </trans-unit>
        <trans-unit id="2e41a41e81118c558d85cbc4587e8d93ce2121bf" translate="yes" xml:space="preserve">
          <source>The Dirichlet-Multinomial distribution is parameterized by a (batch of) length-&lt;code&gt;K&lt;/code&gt;&lt;code&gt;concentration&lt;/code&gt; vectors (&lt;code&gt;K &amp;gt; 1&lt;/code&gt;) and a &lt;code&gt;total_count&lt;/code&gt; number of trials, i.e., the number of trials per draw from the DirichletMultinomial. It is defined over a (batch of) length-&lt;code&gt;K&lt;/code&gt; vector &lt;code&gt;counts&lt;/code&gt; such that &lt;code&gt;tf.reduce_sum(counts, -1) = total_count&lt;/code&gt;. The Dirichlet-Multinomial is identically the Beta-Binomial distribution when &lt;code&gt;K = 2&lt;/code&gt;.</source>
          <target state="translated">ディリクレ多項式分布は、長さ &lt;code&gt;K&lt;/code&gt; &lt;code&gt;concentration&lt;/code&gt; ベクトル（バッチ）（ &lt;code&gt;K &amp;gt; 1&lt;/code&gt; ）および試行の &lt;code&gt;total_count&lt;/code&gt; 数、つまり、ディリクレ多項式からのドローごとの試行数によってパラメーター化されます。これは、 &lt;code&gt;tf.reduce_sum(counts, -1) = total_count&lt;/code&gt; ような、長さ &lt;code&gt;K&lt;/code&gt; のベクトル &lt;code&gt;counts&lt;/code&gt; （のバッチ）で定義されます。ディリクレ多項式は、 &lt;code&gt;K = 2&lt;/code&gt; ときのベータ二項分布と同じです。</target>
        </trans-unit>
        <trans-unit id="0e283a7e839668d96942d9fe27b03aceff70e822" translate="yes" xml:space="preserve">
          <source>The Dirichlet-Multinomial is a distribution over &lt;code&gt;K&lt;/code&gt;-class counts, i.e., a length-&lt;code&gt;K&lt;/code&gt; vector of non-negative integer &lt;code&gt;counts = n = [n_0, ..., n_{K-1}]&lt;/code&gt;.</source>
          <target state="translated">ディリクレ多項式は、 &lt;code&gt;K&lt;/code&gt; クラスカウントの分布です。つまり、非負の整数 &lt;code&gt;counts = n = [n_0, ..., n_{K-1}]&lt;/code&gt; 長さ &lt;code&gt;K&lt;/code&gt; のベクトル= n = [n_0、...、n_ {K-1}]です。</target>
        </trans-unit>
        <trans-unit id="d6acb7167c1696c912c8e5dfb6364d325b6dc9c6" translate="yes" xml:space="preserve">
          <source>The Dropout layer randomly sets input units to 0 with a frequency of &lt;code&gt;rate&lt;/code&gt; at each step during training time, which helps prevent overfitting. Inputs not set to 0 are scaled up by 1/(1 - rate) such that the sum over all inputs is unchanged.</source>
          <target state="translated">ドロップアウトレイヤーは、トレーニング時間中の各ステップで &lt;code&gt;rate&lt;/code&gt; 頻度で入力ユニットをランダムに0に設定します。これにより、過剰適合を防ぐことができます。0に設定されていない入力は、すべての入力の合計が変更されないように、1 /（1-レート）でスケールアップされます。</target>
        </trans-unit>
        <trans-unit id="f02fcb57d9bed9fe1cb9e26959ca7e29bea23df5" translate="yes" xml:space="preserve">
          <source>The Exponential distribution is a special case of the Gamma distribution, i.e.,</source>
          <target state="translated">指数分布はガンマ分布の特殊なケースです。</target>
        </trans-unit>
        <trans-unit id="e6f3e5f56915f923971b04b2d769299865559dab" translate="yes" xml:space="preserve">
          <source>The Exponential distribution is parameterized by an event &lt;code&gt;rate&lt;/code&gt; parameter.</source>
          <target state="translated">指数分布は、イベント &lt;code&gt;rate&lt;/code&gt; パラメーターによってパラメーター化されます。</target>
        </trans-unit>
        <trans-unit id="e2d0890a7adeefe2d23082f4a11de8d57d4d1ed8" translate="yes" xml:space="preserve">
          <source>The Exponential distribution uses a &lt;code&gt;rate&lt;/code&gt; parameter, or &quot;inverse scale&quot;, which can be intuited as,</source>
          <target state="translated">指数分布では、次のように直感的に解釈できる &lt;code&gt;rate&lt;/code&gt; パラメータまたは「逆スケール」を使用します。</target>
        </trans-unit>
        <trans-unit id="c27a80541a728b960073681030d112b982bbe70e" translate="yes" xml:space="preserve">
          <source>The Exponential integral is defined as the integral of &lt;code&gt;exp(t) / t&lt;/code&gt; from &lt;code&gt;-inf&lt;/code&gt; to &lt;code&gt;x&lt;/code&gt;, with the domain of definition all positive real numbers.</source>
          <target state="translated">指数積分は、 &lt;code&gt;-inf&lt;/code&gt; から &lt;code&gt;x&lt;/code&gt; までの &lt;code&gt;exp(t) / t&lt;/code&gt; の積分として定義され、定義域はすべて正の実数です。</target>
        </trans-unit>
        <trans-unit id="e6af11365287945f3c89476436217914d9696a41" translate="yes" xml:space="preserve">
          <source>The Fresnel cosine integral is defined as the integral of &lt;code&gt;cos(t^2)&lt;/code&gt; from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;x&lt;/code&gt;, with the domain of definition all real numbers.</source>
          <target state="translated">フレネル余弦積分は、 &lt;code&gt;0&lt;/code&gt; から &lt;code&gt;x&lt;/code&gt; までの &lt;code&gt;cos(t^2)&lt;/code&gt; の積分として定義され、定義域はすべて実数です。</target>
        </trans-unit>
        <trans-unit id="024c3990be40c756db4eb49b431ef0ccfe9b4c3d" translate="yes" xml:space="preserve">
          <source>The Fresnel cosine integral is odd.</source>
          <target state="translated">フレネル余弦積分は奇数です。</target>
        </trans-unit>
        <trans-unit id="fc2218a2e44fae16a68dd6449b12be71bd410e0a" translate="yes" xml:space="preserve">
          <source>The Fresnel sine integral is defined as the integral of &lt;code&gt;sin(t^2)&lt;/code&gt; from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;x&lt;/code&gt;, with the domain of definition all real numbers.</source>
          <target state="translated">フレネル正弦積分は、 &lt;code&gt;0&lt;/code&gt; から &lt;code&gt;x&lt;/code&gt; までの &lt;code&gt;sin(t^2)&lt;/code&gt; の積分として定義され、定義域はすべて実数です。</target>
        </trans-unit>
        <trans-unit id="b076c591ecece6b841a18c0467c2055d9c7a690a" translate="yes" xml:space="preserve">
          <source>The GCE API object returned by the googleapiclient.discovery function. (Default: discovery.build('compute', 'v1')). If you specify a custom service object, then the credentials parameter will be ignored.</source>
          <target state="translated">googleapiclient.discovery 関数が返す GCE API オブジェクト。(デフォルト:discovery.build('compute','v1'))。カスタムサービスオブジェクトを指定した場合は、 credentials パラメータは無視されます。</target>
        </trans-unit>
        <trans-unit id="1518eee2906925a93ae1d93256f98d5eb688bbaf" translate="yes" xml:space="preserve">
          <source>The GCE API object returned by the googleapiclient.discovery function. If you specify a custom service object, then the credentials parameter will be ignored.</source>
          <target state="translated">googleapiclient.discovery 関数が返す GCE API オブジェクト。カスタムサービスオブジェクトを指定した場合は、 credentials パラメータは無視されます。</target>
        </trans-unit>
        <trans-unit id="609d4d600899851c7fc93aa7a4ce757600207e0c" translate="yes" xml:space="preserve">
          <source>The Gamma distribution is defined over positive real numbers using parameters &lt;code&gt;concentration&lt;/code&gt; (aka &quot;alpha&quot;) and &lt;code&gt;rate&lt;/code&gt; (aka &quot;beta&quot;).</source>
          <target state="translated">ガンマ分布は、 &lt;code&gt;concentration&lt;/code&gt; （別名「アルファ」）および &lt;code&gt;rate&lt;/code&gt; （別名「ベータ」）を使用して、正の実数に対して定義されます。</target>
        </trans-unit>
        <trans-unit id="79a61f2d86901aebd84ad8b2d9002905d13b2a9f" translate="yes" xml:space="preserve">
          <source>The Glorot normal initializer, also called Xavier normal initializer.</source>
          <target state="translated">グロロットの通常のイニシャライザで、ザビエルの通常のイニシャライザとも呼ばれています。</target>
        </trans-unit>
        <trans-unit id="9d823ca2ee407bbabe7dc4bda0e7dfaa683e7ffd" translate="yes" xml:space="preserve">
          <source>The Glorot uniform initializer, also called Xavier uniform initializer.</source>
          <target state="translated">グロロットのユニフォームイニシャライザで、ザビエルのユニフォームイニシャライザとも呼ばれています。</target>
        </trans-unit>
        <trans-unit id="10c27f35329e2804c14ef129a0fd65ea4a51e512" translate="yes" xml:space="preserve">
          <source>The GraphDef of the sub-graph.</source>
          <target state="translated">サブグラフのGraphDef。</target>
        </trans-unit>
        <trans-unit id="216c6a790806834283ef828e6ca13d0147897e6b" translate="yes" xml:space="preserve">
          <source>The GraphDef version information of this graph.</source>
          <target state="translated">このグラフのGraphDefバージョン情報です。</target>
        </trans-unit>
        <trans-unit id="89e14da68e001e83bf42d756cbdf87502820c4f8" translate="yes" xml:space="preserve">
          <source>The Grayscale tensor to convert. The last dimension must be size 1.</source>
          <target state="translated">変換するグレースケールテンソル。最後の寸法はサイズ1でなければなりません。</target>
        </trans-unit>
        <trans-unit id="482d4cd0e1abf7bb59d9b3a8592f133a7b8d6585" translate="yes" xml:space="preserve">
          <source>The Hessian is a matrix of second-order partial derivatives of a scalar tensor (see &lt;a href=&quot;https://en.wikipedia.org/wiki/Hessian_matrix&quot;&gt;https://en.wikipedia.org/wiki/Hessian_matrix&lt;/a&gt; for more details).</source>
          <target state="translated">ヘッセ行列は、スカラーテンソルの2次偏導関数の行列です（詳細については、&lt;a href=&quot;https://en.wikipedia.org/wiki/Hessian_matrix&quot;&gt;https：//en.wikipedia.org/wiki/Hessian_matrix&lt;/a&gt;を参照してください）。</target>
        </trans-unit>
        <trans-unit id="655c4658cd7a0d63da53a13b211c6ef8e7cc1af3" translate="yes" xml:space="preserve">
          <source>The Hessian is a matrix of second-order partial derivatives of a scalar tensor (see https://en.wikipedia.org/wiki/Hessian_matrix for more details).</source>
          <target state="translated">ヘシアンは、スカラーテンソルの2次部分導関数の行列です(詳細は https://en.wikipedia.org/wiki/Hessian_matrix を参照)。</target>
        </trans-unit>
        <trans-unit id="d81e5e619b3ab76ee0da2d228e26df5c365438e4" translate="yes" xml:space="preserve">
          <source>The Hurwitz zeta function is defined as:</source>
          <target state="translated">Hurwitz zeta関数は次のように定義されています。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
