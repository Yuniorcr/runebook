<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="cpp">
    <body>
      <group id="cpp">
        <trans-unit id="9bc197059b24585d8edbad3d296b4d67170908fc" translate="yes" xml:space="preserve">
          <source>the identifiers that are &lt;a href=&quot;../keywords&quot;&gt;keywords&lt;/a&gt; cannot be used for other purposes;</source>
          <target state="translated">&lt;a href=&quot;../keywords&quot;&gt;キーワードで&lt;/a&gt;ある識別子を他の目的に使用することはできません。</target>
        </trans-unit>
        <trans-unit id="65eb1c73a141218778d6e0836426bcf2192c638f" translate="yes" xml:space="preserve">
          <source>the identifiers that begin with an underscore are reserved in the global namespace.</source>
          <target state="translated">アンダースコアで始まる識別子はグローバル名前空間で予約されています。</target>
        </trans-unit>
        <trans-unit id="bb1aaa65b75c573cbcc26211a648ef98dc0bb488" translate="yes" xml:space="preserve">
          <source>the identifiers that begin with an underscore followed by an uppercase letter are reserved;</source>
          <target state="translated">アンダースコアの後に大文字で始まる識別子は予約されています。</target>
        </trans-unit>
        <trans-unit id="616be92332fad4740f42680eba2f680d27363e0e" translate="yes" xml:space="preserve">
          <source>the identifiers with a double underscore anywhere are reserved;</source>
          <target state="translated">は予約されています。</target>
        </trans-unit>
        <trans-unit id="d0a322dbbb44477a7e96a1019dbf6f25c15710e3" translate="yes" xml:space="preserve">
          <source>the imaginary component of &lt;code&gt;z&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;z&lt;/code&gt; の虚数成分。</target>
        </trans-unit>
        <trans-unit id="90a575e11335a91326de40856e2d959c848b92c7" translate="yes" xml:space="preserve">
          <source>the imaginary part</source>
          <target state="translated">虚部</target>
        </trans-unit>
        <trans-unit id="605eb75e3ff1095d044a16ceba85e96d6c6a8c89" translate="yes" xml:space="preserve">
          <source>the implicitly-declared move assignment operator would not be defined as deleted,</source>
          <target state="translated">を使用すると、暗黙のうちに宣言された移動代入演算子は削除されないと定義されます。</target>
        </trans-unit>
        <trans-unit id="2dce5c220680d8fc898dc71c4e1adccc853d083e" translate="yes" xml:space="preserve">
          <source>the implicitly-declared move constructor is not defined as</source>
          <target state="translated">のように暗黙的に宣言された移動コンストラクタが定義されていません。</target>
        </trans-unit>
        <trans-unit id="74e17893a23978096cbd041250a369ad0d7fca8d" translate="yes" xml:space="preserve">
          <source>the increment term (c).</source>
          <target state="translated">インクリメント項(c)を</target>
        </trans-unit>
        <trans-unit id="d570ad89e9c44d3639ab75bae9f60f4ceaa9331f" translate="yes" xml:space="preserve">
          <source>the index of the bucket to access</source>
          <target state="translated">アクセスするバケットのインデックス</target>
        </trans-unit>
        <trans-unit id="ad4ae8c67310eaf71814deb617a2f5dc897a303c" translate="yes" xml:space="preserve">
          <source>the index of the bucket to examine</source>
          <target state="translated">検査するバケツのインデックス</target>
        </trans-unit>
        <trans-unit id="07535aed059eee7f7b1665942823f0f35e33ae82" translate="yes" xml:space="preserve">
          <source>the index of the element to access</source>
          <target state="translated">アクセスする要素のインデックス</target>
        </trans-unit>
        <trans-unit id="1197dd45bf4a1539a99fd3f5b13578ae3fc98e5d" translate="yes" xml:space="preserve">
          <source>the index of the element to be returned</source>
          <target state="translated">返される要素のインデックス</target>
        </trans-unit>
        <trans-unit id="b4629cca1d45bc38369b5968be57e86ee00376ac" translate="yes" xml:space="preserve">
          <source>the index of the first character to append</source>
          <target state="translated">追加する最初の文字のインデックス</target>
        </trans-unit>
        <trans-unit id="c90639dfec7aa436629be3f0e2652b4c77639326" translate="yes" xml:space="preserve">
          <source>the index of the submatch that should be returned. &quot;0&quot; represents the entire match, and &quot;-1&quot; represents the parts that are not matched (e.g, the stuff between matches).</source>
          <target state="translated">返されるサブマッチのインデックス。&quot;0&quot; はマッチ全体を表し、&quot;-1&quot; はマッチしない部分 (マッチの間の部分など)を表します。</target>
        </trans-unit>
        <trans-unit id="255aed15b6043c62235dfa0e4df4b126c19bf3c8" translate="yes" xml:space="preserve">
          <source>the initial buffer to use</source>
          <target state="translated">使用する初期バッファ</target>
        </trans-unit>
        <trans-unit id="f35c2523bc5437767a03c7b8503ec91484fdc9be" translate="yes" xml:space="preserve">
          <source>the initial seed sequence represented as a pair of input iterators whose &lt;code&gt;&lt;a href=&quot;../../../iterator/iterator_traits&quot;&gt;std::iterator_traits&lt;/a&gt;&amp;lt;&amp;gt;::value_type&lt;/code&gt; is an integer type</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../../iterator/iterator_traits&quot;&gt;std::iterator_traits&lt;/a&gt;&amp;lt;&amp;gt;::value_type&lt;/code&gt; が整数型である入力反復子のペアとして表される初期シードシーケンス</target>
        </trans-unit>
        <trans-unit id="d44f1a36f649da23359a4e6f0ca3224b8d226307" translate="yes" xml:space="preserve">
          <source>the initial size of the dynamically allocated buffer</source>
          <target state="translated">動的に割り当てられたバッファの初期サイズ</target>
        </trans-unit>
        <trans-unit id="92976c332faa834122ed3d11c1c528450dcc6889" translate="yes" xml:space="preserve">
          <source>the initial value</source>
          <target state="translated">初期値</target>
        </trans-unit>
        <trans-unit id="f5e17d1dd0efe94d3241d52b345fe6a4919f36ca" translate="yes" xml:space="preserve">
          <source>the initial value (optional)</source>
          <target state="translated">初期値</target>
        </trans-unit>
        <trans-unit id="d0c2479a1406de801810c2f27450995340ad695c" translate="yes" xml:space="preserve">
          <source>the initial value of the character conversion state</source>
          <target state="translated">文字変換状態の初期値</target>
        </trans-unit>
        <trans-unit id="9426b14a23c5b9ddcb9db21fe3dd3114cd8356d1" translate="yes" xml:space="preserve">
          <source>the initial value of the generalized sum</source>
          <target state="translated">一般化された和の初期値</target>
        </trans-unit>
        <trans-unit id="0903c8dbcff11db81f0c29193aa2a5fe372cb738" translate="yes" xml:space="preserve">
          <source>the initial value to initialize every element of the array</source>
          <target state="translated">配列の各要素を初期化する初期値</target>
        </trans-unit>
        <trans-unit id="353efe7cab0195fd2eefe89b3f87f01206273d28" translate="yes" xml:space="preserve">
          <source>the initialization is direct-list-initialization</source>
          <target state="translated">初期化はダイレクトリスト初期化</target>
        </trans-unit>
        <trans-unit id="467d74c2d5d2673205f268312b0a0387d1c09b7c" translate="yes" xml:space="preserve">
          <source>the initializer list has only a single element</source>
          <target state="translated">初期化リストには単一の要素しかありません。</target>
        </trans-unit>
        <trans-unit id="7eacf9d4db8829589f1eac342ff1fbe0b1190554" translate="yes" xml:space="preserve">
          <source>the initializer list to pass to the constructor</source>
          <target state="translated">コンストラクタに渡す初期化リスト。</target>
        </trans-unit>
        <trans-unit id="cfc416f709f89704e173306825488dee4294d376" translate="yes" xml:space="preserve">
          <source>the input character sequence, represented as &lt;code&gt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::basic_string&lt;/a&gt;&lt;/code&gt; or character array</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::basic_string&lt;/a&gt;&lt;/code&gt; または文字配列として表される入力文字シーケンス</target>
        </trans-unit>
        <trans-unit id="55ce994d6c79cc02cd24ce30b027e785e247fb41" translate="yes" xml:space="preserve">
          <source>the input character sequence, represented as a pair of iterators</source>
          <target state="translated">入力文字列で,イテレータのペアで表されます.</target>
        </trans-unit>
        <trans-unit id="c0586c2b6d26c4da80c668e1f9d6dd84d9993c0e" translate="yes" xml:space="preserve">
          <source>the integer type that can be accessed as an atomic entity from an asynchronous signal handler</source>
          <target state="translated">非同期シグナルハンドラからアトミックエンティティとしてアクセスできる整数型</target>
        </trans-unit>
        <trans-unit id="0fbc24083c047d86ab24c779b5e5d50cf8cec764" translate="yes" xml:space="preserve">
          <source>the invocation of &lt;code&gt;std::raise&lt;/code&gt; and</source>
          <target state="translated">&lt;code&gt;std::raise&lt;/code&gt; 呼び出しと</target>
        </trans-unit>
        <trans-unit id="0f780001b147ea4a4f95f379a30e2d25a3044403" translate="yes" xml:space="preserve">
          <source>the iterator type to retrieve properties for</source>
          <target state="translated">のプロパティを取得するためのイテレータ型</target>
        </trans-unit>
        <trans-unit id="608e41fc99a02c7c04595d9f8c90ff8a4a8ba9f4" translate="yes" xml:space="preserve">
          <source>the key of the element to find</source>
          <target state="translated">見つけるための要素のキー</target>
        </trans-unit>
        <trans-unit id="eda85a8078dc041121de2c265716b9cb2c20715a" translate="yes" xml:space="preserve">
          <source>the key used both to look up and to insert if not found</source>
          <target state="translated">見つからなかった場合の検索と挿入に使われるキー</target>
        </trans-unit>
        <trans-unit id="3bb08ea723581fee950dc34fa73cbbf074e9d041" translate="yes" xml:space="preserve">
          <source>the keyword &lt;a href=&quot;../keyword/class&quot;&gt;class&lt;/a&gt;, &lt;a href=&quot;../keyword/struct&quot;&gt;struct&lt;/a&gt;, or &lt;a href=&quot;../keyword/union&quot;&gt;union&lt;/a&gt;, followed by template name with template arguments (optionally &lt;a href=&quot;name#Qualified_identifiers&quot;&gt;qualified&lt;/a&gt;, optionally using &lt;a href=&quot;dependent_name&quot;&gt;template disambiguator&lt;/a&gt;), previously defined as the name of a class template.</source>
          <target state="translated">キーワード&lt;a href=&quot;../keyword/class&quot;&gt;class&lt;/a&gt;、&lt;a href=&quot;../keyword/struct&quot;&gt;struct&lt;/a&gt;、または&lt;a href=&quot;../keyword/union&quot;&gt;union&lt;/a&gt;、その後にテンプレート引数が付いたテンプレート名が続きます（オプションで&lt;a href=&quot;name#Qualified_identifiers&quot;&gt;修飾&lt;/a&gt;、オプションで&lt;a href=&quot;dependent_name&quot;&gt;template disambiguator&lt;/a&gt;を使用）。以前はクラステンプレートの名前として定義されていました。</target>
        </trans-unit>
        <trans-unit id="5ed91ae9737bb2700f3586972d4eb44da518da6a" translate="yes" xml:space="preserve">
          <source>the keyword &lt;a href=&quot;../keyword/class&quot;&gt;class&lt;/a&gt;, &lt;a href=&quot;../keyword/struct&quot;&gt;struct&lt;/a&gt;, or &lt;a href=&quot;../keyword/union&quot;&gt;union&lt;/a&gt;, followed by the identifier (optionally &lt;a href=&quot;name#Qualified_identifiers&quot;&gt;qualified&lt;/a&gt;), previously defined as the name of a class, struct, or union.</source>
          <target state="translated">キーワード&lt;a href=&quot;../keyword/class&quot;&gt;class&lt;/a&gt;、&lt;a href=&quot;../keyword/struct&quot;&gt;struct&lt;/a&gt;、または&lt;a href=&quot;../keyword/union&quot;&gt;union&lt;/a&gt;、その後に識別子（オプションで&lt;a href=&quot;name#Qualified_identifiers&quot;&gt;修飾&lt;/a&gt;）が続きます。これは、以前にクラス、struct、またはunionの名前として定義されたものです。</target>
        </trans-unit>
        <trans-unit id="65b06b95555188dbe4cc12a25d32469db841ab87" translate="yes" xml:space="preserve">
          <source>the keyword &lt;a href=&quot;../keyword/enum&quot;&gt;enum&lt;/a&gt; followed by the identifier (optionally &lt;a href=&quot;name#Qualified_identifiers&quot;&gt;qualified&lt;/a&gt;), previously declared as the name of an enumeration.</source>
          <target state="translated">列挙型の名前として以前に宣言された、キーワード&lt;a href=&quot;../keyword/enum&quot;&gt;enumと&lt;/a&gt;それに続く識別子（オプションで&lt;a href=&quot;name#Qualified_identifiers&quot;&gt;修飾&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="98f09a4eed99719737de5a0b551d04b31b5f806b" translate="yes" xml:space="preserve">
          <source>the keyword &lt;code&gt;typename&lt;/code&gt; may be used as necessary to resolve &lt;a href=&quot;dependent_name&quot;&gt;dependent names&lt;/a&gt;, when the using-declaration introduces a member type from a base class into a class template</source>
          <target state="translated">using-declarationが基本クラスからクラステンプレートにメンバー型を導入する場合、キーワード &lt;code&gt;typename&lt;/code&gt; は&lt;a href=&quot;dependent_name&quot;&gt;依存名&lt;/a&gt;を解決するために必要に応じて使用できます</target>
        </trans-unit>
        <trans-unit id="543b1d800d5e38e6ef3373dc76327e83dc7c234f" translate="yes" xml:space="preserve">
          <source>the keyword &lt;code&gt;virtual&lt;/code&gt;</source>
          <target state="translated">キーワード &lt;code&gt;virtual&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="494452c2e0c6d0482a5c663bb41d041d8bd70346" translate="yes" xml:space="preserve">
          <source>the language linkage is the same (e.g. the include file isn't inside an extern &quot;C&quot; block)</source>
          <target state="translated">言語リンクは同じです (例:インクルードファイルは外部の &quot;C&quot; ブロックの中にはありません)</target>
        </trans-unit>
        <trans-unit id="fccd08680588f8064c33a98a50e1243015e54cbf" translate="yes" xml:space="preserve">
          <source>the largest integer power of 10 that is a valid finite floating-point value</source>
          <target state="translated">10の最大整数の累乗で有効な有限浮動小数点値</target>
        </trans-unit>
        <trans-unit id="fa1b2d92ae0a54d735db221ba7de256212cc4fa1" translate="yes" xml:space="preserve">
          <source>the largest possible &lt;code&gt;time_point&lt;/code&gt;.</source>
          <target state="translated">可能な最大の &lt;code&gt;time_point&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0667c901c5ac78a2e6d2e4f87a4d8e4908220497" translate="yes" xml:space="preserve">
          <source>the largest valid value of wchar_t</source>
          <target state="translated">wchar_t の最大有効値</target>
        </trans-unit>
        <trans-unit id="fcab5baee4730601db19c2ac97930ac4ddbf89e6" translate="yes" xml:space="preserve">
          <source>the largest value of &lt;code&gt;Elem&lt;/code&gt; that this facet will read or write without error</source>
          <target state="translated">このファセットがエラーなしで読み書きする &lt;code&gt;Elem&lt;/code&gt; の最大値</target>
        </trans-unit>
        <trans-unit id="9a6f605cd322af7a5a7e5df1ab249e20d0bd2b34" translate="yes" xml:space="preserve">
          <source>the largest value that can be passed to &lt;code&gt;A::allocate()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;A::allocate()&lt;/code&gt; 渡すことができる最大値</target>
        </trans-unit>
        <trans-unit id="bfbff4157cb10d38a78f7ea3588922058aa609b8" translate="yes" xml:space="preserve">
          <source>the last &lt;code&gt;memory_order_seq_cst&lt;/code&gt; modification of M that appears before X in the single total order</source>
          <target state="translated">単一の合計順序でXの前に現れるMの最後の &lt;code&gt;memory_order_seq_cst&lt;/code&gt; 変更</target>
        </trans-unit>
        <trans-unit id="f3dc6b8a4f57f9237c65781615908b2ac8206b2f" translate="yes" xml:space="preserve">
          <source>the last character is \n</source>
          <target state="translated">最後の文字は</target>
        </trans-unit>
        <trans-unit id="8dd17807ab234612e4739378e3d84cf60c9280ad" translate="yes" xml:space="preserve">
          <source>the last element to inspect or modify.</source>
          <target state="translated">検査または修正する最後の要素。</target>
        </trans-unit>
        <trans-unit id="c9517a28efe61524718f6b3e6057ee62018fba8c" translate="yes" xml:space="preserve">
          <source>the last remaining &lt;code&gt;shared_ptr&lt;/code&gt; owning the object is assigned another pointer via &lt;code&gt;&lt;a href=&quot;shared_ptr/operator=&quot;&gt;operator=&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;shared_ptr/reset&quot;&gt;reset()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">オブジェクトを所有する最後に残った &lt;code&gt;shared_ptr&lt;/code&gt; には、 &lt;code&gt;&lt;a href=&quot;shared_ptr/operator=&quot;&gt;operator=&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;shared_ptr/reset&quot;&gt;reset()&lt;/a&gt;&lt;/code&gt; を介して別のポインターが割り当てられます。</target>
        </trans-unit>
        <trans-unit id="bab419c845b4fe2e5916baf7dae9cc8e912df41a" translate="yes" xml:space="preserve">
          <source>the last remaining &lt;code&gt;shared_ptr&lt;/code&gt; owning the object is destroyed;</source>
          <target state="translated">オブジェクトを所有する最後に残った &lt;code&gt;shared_ptr&lt;/code&gt; は破棄されます。</target>
        </trans-unit>
        <trans-unit id="902d453531f134d47150f59e13a8f08237ed377e" translate="yes" xml:space="preserve">
          <source>the least upper bound on the values potentially returned by &lt;code&gt;x&lt;/code&gt;&amp;rsquo;s &lt;code&gt;operator()&lt;/code&gt;, as determined by the current values of &lt;code&gt;x&lt;/code&gt;&amp;rsquo;s parameters</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; のパラメータの現在の値によって決定される、 &lt;code&gt;x&lt;/code&gt; の &lt;code&gt;operator()&lt;/code&gt; によって返される可能性のある値の最小の上限</target>
        </trans-unit>
        <trans-unit id="67460d23d60af21c70056796f2dccd9dbb624046" translate="yes" xml:space="preserve">
          <source>the left-hand &lt;code&gt;shared_ptr&lt;/code&gt; to compare</source>
          <target state="translated">比較する左側の &lt;code&gt;shared_ptr&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="65cf9766c96e49a2379067d24bc2220e5a62249c" translate="yes" xml:space="preserve">
          <source>the length of &lt;code&gt;str&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;str&lt;/code&gt; の長さ</target>
        </trans-unit>
        <trans-unit id="ff29324649b243c746932a3097c9f6a9ba378d04" translate="yes" xml:space="preserve">
          <source>the length of the character sequence</source>
          <target state="translated">文字列の長さ</target>
        </trans-unit>
        <trans-unit id="61cd857cef4af7a8db589653f51e1ef59e49bb0b" translate="yes" xml:space="preserve">
          <source>the length of the sequence to search for</source>
          <target state="translated">探索するシーケンスの長さ</target>
        </trans-unit>
        <trans-unit id="5fc0d196fe2de7c806c0a6d3f8c4a9afd3157de4" translate="yes" xml:space="preserve">
          <source>the library functions &lt;code&gt;&lt;a href=&quot;../math/round&quot;&gt;std::round&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../math/round&quot;&gt;std::lround&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../math/round&quot;&gt;std::llround&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../math/ceil&quot;&gt;std::ceil&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../math/floor&quot;&gt;std::floor&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../math/trunc&quot;&gt;std::trunc&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">ライブラリ関数 &lt;code&gt;&lt;a href=&quot;../math/round&quot;&gt;std::round&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;../math/round&quot;&gt;std::lround&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;../math/round&quot;&gt;std::llround&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;../math/ceil&quot;&gt;std::ceil&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;../math/floor&quot;&gt;std::floor&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;../math/trunc&quot;&gt;std::trunc&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="290d0fe2d88a0e50e813327bf1ec1489712b4633" translate="yes" xml:space="preserve">
          <source>the library rounding functions &lt;code&gt;&lt;a href=&quot;../math/nearbyint&quot;&gt;std::nearbyint&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../math/rint&quot;&gt;std::rint&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../math/rint&quot;&gt;std::lrint&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">ライブラリ丸め機能は &lt;code&gt;&lt;a href=&quot;../math/nearbyint&quot;&gt;std::nearbyint&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;../math/rint&quot;&gt;std::rint&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;../math/rint&quot;&gt;std::lrint&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3d84e3c576992b60cb3cee6b895b6088cddd77e5" translate="yes" xml:space="preserve">
          <source>the lifetime of the array has begun and not ended</source>
          <target state="translated">アレイの寿命が始まったのであって,終わったのではない</target>
        </trans-unit>
        <trans-unit id="f1db21345a261662b6baa16f8b76f11a3144244f" translate="yes" xml:space="preserve">
          <source>the lifetime of the containing object has begun and not ended</source>
          <target state="translated">含むオブジェクトのライフタイムが開始されており、終了していません。</target>
        </trans-unit>
        <trans-unit id="0aeb87c08c271e2e9d76249ae6810d5489c57e82" translate="yes" xml:space="preserve">
          <source>the locale category used to identify the facets to merge with &lt;code&gt;other&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;other&lt;/code&gt; とマージするファセットを識別するために使用されるロケールカテゴリ</target>
        </trans-unit>
        <trans-unit id="ce28e42f47ccd9e65e90a3650e73a043e943298e" translate="yes" xml:space="preserve">
          <source>the locale object associated with the stream.</source>
          <target state="translated">ストリームに関連付けられたロケールオブジェクト。</target>
        </trans-unit>
        <trans-unit id="b3427c85a072550346de81bb2d45c511f3fbd2b9" translate="yes" xml:space="preserve">
          <source>the locale object to query</source>
          <target state="translated">問い合わせ先のロケールオブジェクト</target>
        </trans-unit>
        <trans-unit id="383d8b6751baa727d5cca61d2cd2ef8defab2871" translate="yes" xml:space="preserve">
          <source>the locale to imbue</source>
          <target state="translated">染み込ませるためのロケール</target>
        </trans-unit>
        <trans-unit id="914e7cc3d87c2df76dc953ede2db1be9fd785fa8" translate="yes" xml:space="preserve">
          <source>the locale to imbue the stream with</source>
          <target state="translated">流れを汲むロケール</target>
        </trans-unit>
        <trans-unit id="d7a9230dbad3d9464af5dc657d34213a86369b0c" translate="yes" xml:space="preserve">
          <source>the lock associated with the condition variable &lt;code&gt;cond&lt;/code&gt;</source>
          <target state="translated">条件変数 &lt;code&gt;cond&lt;/code&gt; に関連付けられたロック</target>
        </trans-unit>
        <trans-unit id="4e31524c8262a0e6e733cefe3251fbe6af1233b0" translate="yes" xml:space="preserve">
          <source>the lock to swap the state with</source>
          <target state="translated">と状態を入れ替えるためのロックを</target>
        </trans-unit>
        <trans-unit id="1cac8848e870d1048a28c815d22052684e095e74" translate="yes" xml:space="preserve">
          <source>the lock-free boolean atomic type</source>
          <target state="translated">ロックフリーのブール原子型</target>
        </trans-unit>
        <trans-unit id="38cf804da9979b575b0ed9f71a8c7a80569147a2" translate="yes" xml:space="preserve">
          <source>the lookup of non-member function &lt;code&gt;get&lt;/code&gt; performed by &lt;a href=&quot;structured_binding&quot;&gt;structured binding declaration&lt;/a&gt; for tuple-like types</source>
          <target state="translated">非メンバ関数の参照は &lt;code&gt;get&lt;/code&gt; によって実行される&lt;a href=&quot;structured_binding&quot;&gt;構造化バインディング宣言&lt;/a&gt;型のタプルなどのために</target>
        </trans-unit>
        <trans-unit id="ba2adcc22ad0724ab289525b96a15fad39d239ac" translate="yes" xml:space="preserve">
          <source>the lookup of non-member functions &lt;code&gt;begin&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; performed by the &lt;a href=&quot;range-for&quot;&gt;range-for&lt;/a&gt; loop if member lookup fails</source>
          <target state="translated">メンバーの検索が失敗した場合に、&lt;a href=&quot;range-for&quot;&gt;範囲外&lt;/a&gt;ループによって実行される非メンバー関数の検索の &lt;code&gt;begin&lt;/code&gt; と &lt;code&gt;end&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dccf457d197b29e7bbc729dfa81ec77d8f85e9d1" translate="yes" xml:space="preserve">
          <source>the lower bound of the interval sequence</source>
          <target state="translated">区間列の下界</target>
        </trans-unit>
        <trans-unit id="7b84a524ce910042df6f675ec437d12ac23d40d5" translate="yes" xml:space="preserve">
          <source>the managing &lt;code&gt;unique_ptr&lt;/code&gt; object is assigned another pointer via &lt;code&gt;&lt;a href=&quot;unique_ptr/operator=&quot;&gt;operator=&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;unique_ptr/reset&quot;&gt;reset()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">管理する &lt;code&gt;unique_ptr&lt;/code&gt; オブジェクトには、 &lt;code&gt;&lt;a href=&quot;unique_ptr/operator=&quot;&gt;operator=&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;unique_ptr/reset&quot;&gt;reset()&lt;/a&gt;&lt;/code&gt; を介して別のポインターが割り当てられます。</target>
        </trans-unit>
        <trans-unit id="e584aa44ae5ca2378b69aacb450af758723646d8" translate="yes" xml:space="preserve">
          <source>the managing &lt;code&gt;unique_ptr&lt;/code&gt; object is destroyed</source>
          <target state="translated">管理する &lt;code&gt;unique_ptr&lt;/code&gt; オブジェクトが破棄されます</target>
        </trans-unit>
        <trans-unit id="68722827aecacc7ee97e3256eed6528b3d58824b" translate="yes" xml:space="preserve">
          <source>the match flags of type &lt;code&gt;&lt;a href=&quot;match_flag_type&quot;&gt;std::regex_constants::match_flag_type&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">タイプ &lt;code&gt;&lt;a href=&quot;match_flag_type&quot;&gt;std::regex_constants::match_flag_type&lt;/a&gt;&lt;/code&gt; の一致フラグ</target>
        </trans-unit>
        <trans-unit id="9dad6bd94fcf302d443bb88461333ae90e1dfe5d" translate="yes" xml:space="preserve">
          <source>the match results</source>
          <target state="translated">試合結果</target>
        </trans-unit>
        <trans-unit id="4482325a01ce62e7df84ffda6f52e61156bbb7f3" translate="yes" xml:space="preserve">
          <source>the match_results objects whose contents will be swapped</source>
          <target state="translated">内容がスワップされる match_results オブジェクト。</target>
        </trans-unit>
        <trans-unit id="9790a6683fe30d201a88b37951a035af5fc5495a" translate="yes" xml:space="preserve">
          <source>the mathematical result is finite, but becomes infinite after rounding, or becomes the largest representable finite value after rounding down</source>
          <target state="translated">有限値</target>
        </trans-unit>
        <trans-unit id="916fd8a70e547d8531a9a589cf4b77bcdd97e3ff" translate="yes" xml:space="preserve">
          <source>the mathematical result of the function is exactly infinite or undefined</source>
          <target state="translated">関数の数学的な結果が正に無限大または不定である</target>
        </trans-unit>
        <trans-unit id="15a3f235905aa2acd470f53b352868a95fa04d98" translate="yes" xml:space="preserve">
          <source>the memory location where the object will be placed.</source>
          <target state="translated">オブジェクトが配置されるメモリの位置を指定します。</target>
        </trans-unit>
        <trans-unit id="230c22f3774d96566c723fdb50ed7b0b6384ed44" translate="yes" xml:space="preserve">
          <source>the memory ordering executed by this fence</source>
          <target state="translated">このフェンスで実行されるメモリ順序</target>
        </trans-unit>
        <trans-unit id="593066f6bb8f8fa31c4dd514f9d8e2ccc0c95258" translate="yes" xml:space="preserve">
          <source>the memory sycnhronization ordering for this operation: all values are permitted.</source>
          <target state="translated">この操作のためのメモリサイクロン化の順序:すべての値が許可されます。</target>
        </trans-unit>
        <trans-unit id="582eddc33f74b3694b6e147dd6ebe0a6db0c4738" translate="yes" xml:space="preserve">
          <source>the memory synchronization order for this operation</source>
          <target state="translated">この操作のためのメモリ同期順序</target>
        </trans-unit>
        <trans-unit id="31b6fec16934d87b9b20159b3d8157accc502dfc" translate="yes" xml:space="preserve">
          <source>the memory synchronization ordering for both operations</source>
          <target state="translated">両方の操作のためのメモリ同期順序</target>
        </trans-unit>
        <trans-unit id="4dc6570f70c2e6a4dc8bdb7be2f4627c1d92a816" translate="yes" xml:space="preserve">
          <source>the memory synchronization ordering for the load operation if the comparison fails. Cannot be &lt;code&gt;&lt;a href=&quot;../memory_order&quot;&gt;std::memory_order_release&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../memory_order&quot;&gt;std::memory_order_acq_rel&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">比較が失敗した場合のロード操作のメモリ同期順序。 &lt;code&gt;&lt;a href=&quot;../memory_order&quot;&gt;std::memory_order_release&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;../memory_order&quot;&gt;std::memory_order_acq_rel&lt;/a&gt;&lt;/code&gt; できません</target>
        </trans-unit>
        <trans-unit id="3bc40b809d45344c01e560fa6cceda0d52a26206" translate="yes" xml:space="preserve">
          <source>the memory synchronization ordering for the load operation if the comparison fails. Cannot be &lt;code&gt;&lt;a href=&quot;../memory_order&quot;&gt;std::memory_order_release&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../memory_order&quot;&gt;std::memory_order_acq_rel&lt;/a&gt;&lt;/code&gt; and cannot specify stronger ordering than &lt;code&gt;success&lt;/code&gt;(until C++17)</source>
          <target state="translated">比較が失敗した場合のロード操作のメモリ同期順序。することはできません &lt;code&gt;&lt;a href=&quot;../memory_order&quot;&gt;std::memory_order_release&lt;/a&gt;&lt;/code&gt; か &lt;code&gt;&lt;a href=&quot;../memory_order&quot;&gt;std::memory_order_acq_rel&lt;/a&gt;&lt;/code&gt; とより強い順序を指定することはできません &lt;code&gt;success&lt;/code&gt; （C ++ 17まで）</target>
        </trans-unit>
        <trans-unit id="06f882a61b804d2a9e07767d0fd1c39fa191ac44" translate="yes" xml:space="preserve">
          <source>the memory synchronization ordering for the load operation if the comparison fails. Cannot be &lt;code&gt;&lt;a href=&quot;memory_order&quot;&gt;std::memory_order_release&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;memory_order&quot;&gt;std::memory_order_acq_rel&lt;/a&gt;&lt;/code&gt; and cannot specify stronger ordering than &lt;code&gt;succ&lt;/code&gt;(until C++17)</source>
          <target state="translated">比較が失敗した場合のロード操作のメモリ同期順序。することはできません &lt;code&gt;&lt;a href=&quot;memory_order&quot;&gt;std::memory_order_release&lt;/a&gt;&lt;/code&gt; か &lt;code&gt;&lt;a href=&quot;memory_order&quot;&gt;std::memory_order_acq_rel&lt;/a&gt;&lt;/code&gt; とより強い順序を指定することはできません &lt;code&gt;succ&lt;/code&gt; （17 ++ Cまでの）</target>
        </trans-unit>
        <trans-unit id="0e9c575ec69afbfaf2dae419a5b270ac59c464cb" translate="yes" xml:space="preserve">
          <source>the memory synchronization ordering for the read-modify-write operation if the comparison succeeds. All values are permitted.</source>
          <target state="translated">比較が成功した場合のリード・モディファイ・ライト動作のメモリ同期順序。すべての値が許可されています。</target>
        </trans-unit>
        <trans-unit id="3e2c90a0148e57ca331de00ec2f76efcec1d9f1e" translate="yes" xml:space="preserve">
          <source>the memory synchronization ordering for this operation</source>
          <target state="translated">この操作のためのメモリ同期順序</target>
        </trans-unit>
        <trans-unit id="0c6ecd42d64b629ffa56d74d2857d924b481a240" translate="yes" xml:space="preserve">
          <source>the memory synchronization ordering for this operation (cannot be &lt;code&gt;&lt;a href=&quot;../memory_order&quot;&gt;std::memory_order_consume&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../memory_order&quot;&gt;std::memory_order_acquire&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;../memory_order&quot;&gt;std::memory_order_acq_rel&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="translated">この操作のメモリ同期の順序（ &lt;code&gt;&lt;a href=&quot;../memory_order&quot;&gt;std::memory_order_consume&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;../memory_order&quot;&gt;std::memory_order_acquire&lt;/a&gt;&lt;/code&gt; 、または &lt;code&gt;&lt;a href=&quot;../memory_order&quot;&gt;std::memory_order_acq_rel&lt;/a&gt;&lt;/code&gt; は使用できません）</target>
        </trans-unit>
        <trans-unit id="00728729df324b15f382eee55d4c699997cc7a51" translate="yes" xml:space="preserve">
          <source>the memory synchronization ordering for this operation: all values are permitted.</source>
          <target state="translated">この操作のためのメモリ同期順序:すべての値が許可されます。</target>
        </trans-unit>
        <trans-unit id="a15275fb8292cf446e1154475193b0512fbd20a2" translate="yes" xml:space="preserve">
          <source>the memory synchronization ordering for this operation: only &lt;code&gt;&lt;a href=&quot;memory_order&quot;&gt;std::memory_order_relaxed&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;memory_order&quot;&gt;std::memory_order_consume&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;memory_order&quot;&gt;std::memory_order_acquire&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;memory_order&quot;&gt;std::memory_order_seq_cst&lt;/a&gt;&lt;/code&gt; are permitted.</source>
          <target state="translated">この操作のメモリ同期順序： &lt;code&gt;&lt;a href=&quot;memory_order&quot;&gt;std::memory_order_relaxed&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;memory_order&quot;&gt;std::memory_order_consume&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;memory_order&quot;&gt;std::memory_order_acquire&lt;/a&gt;&lt;/code&gt; 、および &lt;code&gt;&lt;a href=&quot;memory_order&quot;&gt;std::memory_order_seq_cst&lt;/a&gt;&lt;/code&gt; が許可されます。</target>
        </trans-unit>
        <trans-unit id="c8e13cc00ce6c34cd6a413cfb690a4be043d5a1d" translate="yes" xml:space="preserve">
          <source>the memory synchronization ordering for this operation: only &lt;code&gt;&lt;a href=&quot;memory_order&quot;&gt;std::memory_order_relaxed&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;memory_order&quot;&gt;std::memory_order_release&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;memory_order&quot;&gt;std::memory_order_seq_cst&lt;/a&gt;&lt;/code&gt; are permitted.</source>
          <target state="translated">この操作のメモリ同期順序： &lt;code&gt;&lt;a href=&quot;memory_order&quot;&gt;std::memory_order_relaxed&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;memory_order&quot;&gt;std::memory_order_release&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;memory_order&quot;&gt;std::memory_order_seq_cst&lt;/a&gt;&lt;/code&gt; が許可されます。</target>
        </trans-unit>
        <trans-unit id="44663eb508f8ceaf7853003a519766b9656ff43d" translate="yes" xml:space="preserve">
          <source>the memory synchronization ordering for this operation: only &lt;code&gt;&lt;a href=&quot;memory_order&quot;&gt;std::memory_order_relaxed&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;memory_order&quot;&gt;std::memory_order_release&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;memory_order&quot;&gt;std::memory_order_seq_cst&lt;/a&gt;&lt;/code&gt; are permitted.</source>
          <target state="translated">この操作のメモリ同期順序： &lt;code&gt;&lt;a href=&quot;memory_order&quot;&gt;std::memory_order_relaxed&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;memory_order&quot;&gt;std::memory_order_release&lt;/a&gt;&lt;/code&gt; 、または &lt;code&gt;&lt;a href=&quot;memory_order&quot;&gt;std::memory_order_seq_cst&lt;/a&gt;&lt;/code&gt; が許可されます。</target>
        </trans-unit>
        <trans-unit id="fd5bf15ade95d888b971e466cef6e889c38f86cf" translate="yes" xml:space="preserve">
          <source>the minimum size of the first buffer to allocate; must be greater than zero</source>
          <target state="translated">割り当てる最初のバッファの最小サイズ。</target>
        </trans-unit>
        <trans-unit id="dc2cf37b254f707edc573e690575fae3ac7a222c" translate="yes" xml:space="preserve">
          <source>the modulus term (m).</source>
          <target state="translated">弾性率項(m)である。</target>
        </trans-unit>
        <trans-unit id="1bf33e2d5b5a15d3f1ccf54636a162da51aec0ca" translate="yes" xml:space="preserve">
          <source>the monetary format type</source>
          <target state="translated">貨幣形</target>
        </trans-unit>
        <trans-unit id="8c2583856098e498208db28b37e47395eb37393d" translate="yes" xml:space="preserve">
          <source>the move assignment operator selected for every direct base of &lt;code&gt;T&lt;/code&gt; is trivial;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; のすべての直接の基数に対して選択される移動割り当て演算子は簡単です。</target>
        </trans-unit>
        <trans-unit id="89f461449f66d3189abcc7a0939040abccfedad3" translate="yes" xml:space="preserve">
          <source>the move assignment operator selected for every non-static class type (or array of class type) member of &lt;code&gt;T&lt;/code&gt; is trivial;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; のすべての非静的クラス型（またはクラス型の配列）メンバーに対して選択された移動代入演算子は簡単です。</target>
        </trans-unit>
        <trans-unit id="3997e621bcb4fef424cb76f10fbc1e001ba8cea9" translate="yes" xml:space="preserve">
          <source>the move constructor selected for every direct base of &lt;code&gt;T&lt;/code&gt; is trivial;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; の直接ベースごとに選択される移動コンストラクターは簡単です。</target>
        </trans-unit>
        <trans-unit id="bc17620efddb4b46d55a2a9d695ff5ac1fde5830" translate="yes" xml:space="preserve">
          <source>the move constructor selected for every non-static class type (or array of class type) member of &lt;code&gt;T&lt;/code&gt; is trivial;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; のすべての非静的クラス型（またはクラス型の配列）メンバーに対して選択された移動コンストラクターは簡単です。</target>
        </trans-unit>
        <trans-unit id="02d676cbd56837413074b619fa82f1d4b166f18c" translate="yes" xml:space="preserve">
          <source>the multiplier term (a).</source>
          <target state="translated">の乗算項(a)を</target>
        </trans-unit>
        <trans-unit id="1a7399e180e667a1fc2ac58859f92898c37f1e5c" translate="yes" xml:space="preserve">
          <source>the name of a previously-declared class type, optionally &lt;a href=&quot;name#Qualified_identifiers&quot;&gt;qualified&lt;/a&gt;, or an identifier not previously declared as a type name</source>
          <target state="translated">以前に宣言されたクラス型の名前、オプションで&lt;a href=&quot;name#Qualified_identifiers&quot;&gt;修飾&lt;/a&gt;、または以前に型名として宣言されていない識別子</target>
        </trans-unit>
        <trans-unit id="1a013f3355377e1a4a6114adf10351bd7188552d" translate="yes" xml:space="preserve">
          <source>the name of a previously-declared enumeration type, optionally &lt;a href=&quot;name#Qualified_identifiers&quot;&gt;qualified&lt;/a&gt;</source>
          <target state="translated">以前に宣言された列挙型の名前、オプションで&lt;a href=&quot;name#Qualified_identifiers&quot;&gt;修飾&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bfd51c626154bd835814a2e19db84ba2902edfbf" translate="yes" xml:space="preserve">
          <source>the name of a variable, a function, a &lt;a href=&quot;template_parameters#Non-type_template_parameter&quot;&gt;template parameter object&lt;/a&gt;(since C++20), or a data member, regardless of type, such as &lt;code&gt;&lt;a href=&quot;../io/cin&quot;&gt;std::cin&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../io/manip/endl&quot;&gt;std::endl&lt;/a&gt;&lt;/code&gt;. Even if the variable's type is rvalue reference, the expression consisting of its name is an lvalue expression;</source>
          <target state="translated">変数、関数の名前&lt;a href=&quot;template_parameters#Non-type_template_parameter&quot;&gt;テンプレートパラメータオブジェクト&lt;/a&gt;などにかかわらず、型の（C ++ 20以降）、またはデータメンバー、 &lt;code&gt;&lt;a href=&quot;../io/cin&quot;&gt;std::cin&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;../io/manip/endl&quot;&gt;std::endl&lt;/a&gt;&lt;/code&gt; 。変数のタイプが右辺値参照である場合でも、その名前で構成される式は左辺値式です。</target>
        </trans-unit>
        <trans-unit id="34837f330494b411df85f026c0386e0679f2e9a3" translate="yes" xml:space="preserve">
          <source>the name of the bit field that is being declared. The name is optional: nameless bitfields introduce the specified number of bits of padding</source>
          <target state="translated">宣言されているビットフィールドの名前。名前はオプションです:名前のないビットフィールドは、指定されたビット数のパディングを導入します。</target>
        </trans-unit>
        <trans-unit id="c08f156f487c02a069b9158644ea45245953e471" translate="yes" xml:space="preserve">
          <source>the name of the class template followed by template argument list for the partial specialization, where each argument is equivalent to its corresponding parameter</source>
          <target state="translated">クラステンプレートの名前の後に,部分的な特殊化のためのテンプレート引数リストが続きます.</target>
        </trans-unit>
        <trans-unit id="37db9c12cc8f56b55b95fe76745626998ee6fc07" translate="yes" xml:space="preserve">
          <source>the name of the class that's being defined. Optionally &lt;a href=&quot;name#Qualified_identifiers&quot;&gt;qualified&lt;/a&gt;, optionally followed by keyword &lt;a href=&quot;../keyword/final&quot;&gt;final&lt;/a&gt;. The name may be omitted, in which case the class is unnamed (note that unnamed class cannot be &lt;a href=&quot;final&quot;&gt;final&lt;/a&gt;)</source>
          <target state="translated">定義されているクラスの名前。オプションで&lt;a href=&quot;name#Qualified_identifiers&quot;&gt;修飾し&lt;/a&gt;、オプションでキーワード&lt;a href=&quot;../keyword/final&quot;&gt;finalを&lt;/a&gt;続けます。名前は省略できます。その場合、クラスには名前がありません（名前のないクラスは&lt;a href=&quot;final&quot;&gt;finalに&lt;/a&gt;できないことに注意してください）。</target>
        </trans-unit>
        <trans-unit id="f7df9b56f58a5b7ef94af76d2a8639c00d8725bc" translate="yes" xml:space="preserve">
          <source>the name of the class that's being defined. Optionally prepended by nested-name-specifier (sequence of names and scope-resolution operators, ending with scope-resolution operator), optionally followed by keyword &lt;a href=&quot;../keyword/final&quot;&gt;final&lt;/a&gt;. The name may be omitted, in which case the class is unnamed (note that unnamed class cannot be final)</source>
          <target state="translated">定義されているクラスの名前。必要に応じて、入れ子になった名前指定子（名前とスコープ解決演算子のシーケンス、スコープ解決演算子で終わる）を前に付け、オプションでキーワード&lt;a href=&quot;../keyword/final&quot;&gt;finalを&lt;/a&gt;続けます。名前は省略できます。その場合、クラスには名前がありません（名前のないクラスはfinalにできないことに注意してください）。</target>
        </trans-unit>
        <trans-unit id="de796765bdf229cfee3abd7814e045850d23dea0" translate="yes" xml:space="preserve">
          <source>the name of the enumeration that's being declared. If present, and if this declaration is a re-declaration, it may be preceded by nested-name-specifier(since C++11): sequence of names and scope-resolution operators &lt;code&gt;::&lt;/code&gt;, ending with scope-resolution operator. The name can be omitted only in unscoped enumeration declarations</source>
          <target state="translated">宣言されている列挙の名前。存在し、この宣言が再宣言である場合、その前に入れ子になった名前指定子（C ++ 11以降）が続く場合があります。名前とスコープ解決演算子のシーケンス &lt;code&gt;::&lt;/code&gt; で、スコープ解決演算子で終わります。名前は、スコープ外の列挙宣言でのみ省略できます</target>
        </trans-unit>
        <trans-unit id="da3bce322c3431b58e29a5ee61f2d63c164e27a4" translate="yes" xml:space="preserve">
          <source>the name of the file to be opened</source>
          <target state="translated">開くファイルの名前</target>
        </trans-unit>
        <trans-unit id="e6bab3b7ea0e8899e7c777c88e0b21ddfd7df85c" translate="yes" xml:space="preserve">
          <source>the name of the locale</source>
          <target state="translated">ロケール名</target>
        </trans-unit>
        <trans-unit id="53bd1cea4f0e8dee7e4e8ad199e3dd087d0394b6" translate="yes" xml:space="preserve">
          <source>the name of the union that's being defined. Optionally prepended by nested-name-specifier (sequence of names and scope-resolution operators, ending with scope-resolution operator). The name may be omitted, in which case the union is</source>
          <target state="translated">定義されている組合の名前。オプションで nested-name-specifier (名前とスコープ解決演算子のシーケンスで、スコープ解決演算子で終わる)が前に付加されます。名前を省略することもできます。</target>
        </trans-unit>
        <trans-unit id="816b835cf144901fb9b30d6f03362da81d2251b8" translate="yes" xml:space="preserve">
          <source>the name that is introduced by this declaration, which becomes either a type name (1) or a template name (2)</source>
          <target state="translated">この宣言によって導入される名前で、型名(1)またはテンプレート名(2)のいずれかになります。</target>
        </trans-unit>
        <trans-unit id="e8f928bc756995aa9fa44f17f972cdadba11e535" translate="yes" xml:space="preserve">
          <source>the named parameter preceding the first variable parameter</source>
          <target state="translated">最初の変数パラメータの前にある名前付きパラメータ</target>
        </trans-unit>
        <trans-unit id="3182b3c8790174d74336244b05979effb0602023" translate="yes" xml:space="preserve">
          <source>the new global C++ locale</source>
          <target state="translated">新しいグローバル C++ロケール</target>
        </trans-unit>
        <trans-unit id="d9cf477b8251e9e9b54e20069c4a267e30527192" translate="yes" xml:space="preserve">
          <source>the new locale</source>
          <target state="translated">新ロケール</target>
        </trans-unit>
        <trans-unit id="6c4d1fb6e9ed2542cc7c0312c608e8016066f62c" translate="yes" xml:space="preserve">
          <source>the new object is of the same type as the original object (ignoring cv-qualification).</source>
          <target state="translated">新しいオブジェクトは,元のオブジェクトと同じ型です(cv-qualification は無視されます).</target>
        </trans-unit>
        <trans-unit id="295410e779c2b18aa2181f25f1d5b1c8cf690c75" translate="yes" xml:space="preserve">
          <source>the new object is of the same type as the original object (ignoring the top-level cv-qualifiers)</source>
          <target state="translated">新しいオブジェクトは,元のオブジェクトと同じ型です(トップレベルの cv-qualifiers は無視されます).</target>
        </trans-unit>
        <trans-unit id="488800abf52c4228d9b23c15b6752454b3296414" translate="yes" xml:space="preserve">
          <source>the new size of the container</source>
          <target state="translated">コンテナの新しいサイズ</target>
        </trans-unit>
        <trans-unit id="ed3de8f229556afe5962d3499efc757e4158f1e7" translate="yes" xml:space="preserve">
          <source>the new synchronization setting</source>
          <target state="translated">新同期設定</target>
        </trans-unit>
        <trans-unit id="b017f5832c8779fc65da8f6473dc9a43667a5331" translate="yes" xml:space="preserve">
          <source>the next available character &lt;code&gt;c&lt;/code&gt; in the input sequence is &lt;code&gt;delim&lt;/code&gt;, as determined by &lt;code&gt;Traits::eq_int_type(Traits::to_int_type(c), delim)&lt;/code&gt;. The delimiter character is extracted and discarded. This test is disabled if &lt;code&gt;delim&lt;/code&gt; is &lt;code&gt;Traits::eof()&lt;/code&gt;</source>
          <target state="translated">入力シーケンスで次に使用可能な文字 &lt;code&gt;c&lt;/code&gt; は、 &lt;code&gt;delim&lt;/code&gt; です。これは、 &lt;code&gt;Traits::eq_int_type(Traits::to_int_type(c), delim)&lt;/code&gt; によって決定されます。区切り文字は抽出されて破棄されます。 &lt;code&gt;delim&lt;/code&gt; が &lt;code&gt;Traits::eof()&lt;/code&gt; 場合、このテストは無効になります</target>
        </trans-unit>
        <trans-unit id="07e96e08576561c57bea9715a0f011eb5f08a56c" translate="yes" xml:space="preserve">
          <source>the next available character &lt;code&gt;c&lt;/code&gt; in the input sequence is not whitespace as determined by &lt;code&gt;std::isspace(c, is.getloc())&lt;/code&gt;. The non-whitespace character is not extracted.</source>
          <target state="translated">入力シーケンスで次に使用可能な文字 &lt;code&gt;c&lt;/code&gt; は、 &lt;code&gt;std::isspace(c, is.getloc())&lt;/code&gt; によって決定される空白文字ではありません。非空白文字は抽出されません。</target>
        </trans-unit>
        <trans-unit id="59bfcde6365665cb649af998af08a6c8afa86710" translate="yes" xml:space="preserve">
          <source>the next available character &lt;code&gt;c&lt;/code&gt; is the delimiter, as determined by &lt;code&gt;Traits::eq(c, delim)&lt;/code&gt;. The delimiter is extracted (unlike &lt;a href=&quot;get&quot;&gt;&lt;code&gt;basic_istream::get()&lt;/code&gt;&lt;/a&gt;) and counted towards &lt;code&gt;gcount()&lt;/code&gt;, but is not stored.</source>
          <target state="translated">次に使用可能な文字 &lt;code&gt;c&lt;/code&gt; は、 &lt;code&gt;Traits::eq(c, delim)&lt;/code&gt; によって決定される区切り文字です。区切り文字は抽出され（&lt;a href=&quot;get&quot;&gt; &lt;code&gt;basic_istream::get()&lt;/code&gt; &lt;/a&gt;とは異なり &lt;code&gt;gcount()&lt;/code&gt; 、gcount（）に対してカウントされますが、保存されません。</target>
        </trans-unit>
        <trans-unit id="444ed4aed54ef47f6d7522951659530110e1ea92" translate="yes" xml:space="preserve">
          <source>the next available character on the input stream is not a whitespace character, as tested by the &lt;code&gt;&lt;a href=&quot;../locale/ctype&quot;&gt;std::ctype&lt;/a&gt;&lt;/code&gt; facet of the locale currently imbued in this input stream. The non-whitespace character is not extracted.</source>
          <target state="translated">入力ストリームで次に利用可能な文字は、現在この入力ストリームに組み込まれているロケールの &lt;code&gt;&lt;a href=&quot;../locale/ctype&quot;&gt;std::ctype&lt;/a&gt;&lt;/code&gt; ファセットでテストされているように、空白文字ではありません。非空白文字は抽出されません。</target>
        </trans-unit>
        <trans-unit id="0b8c5b06325c793c55237d0b57fa73948fdfe704" translate="yes" xml:space="preserve">
          <source>the next available input character &lt;code&gt;c&lt;/code&gt; equals &lt;code&gt;delim&lt;/code&gt;, as determined by &lt;code&gt;Traits::eq(c, delim)&lt;/code&gt;. This character is not extracted (unlike &lt;a href=&quot;getline&quot;&gt;&lt;code&gt;basic_istream::getline()&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">次に使用可能な入力文字 &lt;code&gt;c&lt;/code&gt; は &lt;code&gt;delim&lt;/code&gt; に等しく、これは &lt;code&gt;Traits::eq(c, delim)&lt;/code&gt; によって決定されます。この文字は抽出されません（&lt;a href=&quot;getline&quot;&gt; &lt;code&gt;basic_istream::getline()&lt;/code&gt; &lt;/a&gt;とは異なります）</target>
        </trans-unit>
        <trans-unit id="df54cd6a1436cc89eec9681b273683e50bd93b18" translate="yes" xml:space="preserve">
          <source>the next available input character &lt;code&gt;c&lt;/code&gt; equals &lt;code&gt;delim&lt;/code&gt;, as determined by &lt;code&gt;Traits::eq(c, delim)&lt;/code&gt;. This character is not extracted.</source>
          <target state="translated">次に使用可能な入力文字 &lt;code&gt;c&lt;/code&gt; は &lt;code&gt;delim&lt;/code&gt; に等しく、これは &lt;code&gt;Traits::eq(c, delim)&lt;/code&gt; によって決定されます。この文字は抽出されません。</target>
        </trans-unit>
        <trans-unit id="f8d60b2c50aab60aa6d793363a2cbb6575522fbe" translate="yes" xml:space="preserve">
          <source>the next character is neither &lt;code&gt;is.widen('0')&lt;/code&gt; nor &lt;code&gt;is.widen('1')&lt;/code&gt;.</source>
          <target state="translated">次の文字は &lt;code&gt;is.widen('0')&lt;/code&gt; でも &lt;code&gt;is.widen('1')&lt;/code&gt; でもありません。</target>
        </trans-unit>
        <trans-unit id="dd1fb99ced3b849f0e230eec5aed5a78e160750c" translate="yes" xml:space="preserve">
          <source>the next multibyte character to be stored would exceed &lt;code&gt;len&lt;/code&gt;. &lt;code&gt;src&lt;/code&gt; is set to point at the first unconverted wide character. This condition is not checked if &lt;code&gt;dst==&lt;a href=&quot;../../types/null&quot;&gt;NULL&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">格納される次のマルチバイト文字は &lt;code&gt;len&lt;/code&gt; を超えます。 &lt;code&gt;src&lt;/code&gt; は、変換されていない最初のワイド文字を指すように設定されています。 &lt;code&gt;dst==&lt;a href=&quot;../../types/null&quot;&gt;NULL&lt;/a&gt;&lt;/code&gt; 場合、この条件はチェックされません。</target>
        </trans-unit>
        <trans-unit id="e760e6bbd706d40f9ba46f158d24b6be3d814313" translate="yes" xml:space="preserve">
          <source>the next variable parameter in &lt;code&gt;ap&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ap&lt;/code&gt; の次の変数パラメーター。</target>
        </trans-unit>
        <trans-unit id="0970326e052ea9676c702d2c99a01e58551ce0d7" translate="yes" xml:space="preserve">
          <source>the next wide character to be stored would exceed &lt;code&gt;len&lt;/code&gt;. &lt;code&gt;src&lt;/code&gt; is set to point at the beginning of the first unconverted multibyte character. This condition is not checked if &lt;code&gt;dst==&lt;a href=&quot;../../types/null&quot;&gt;NULL&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">次に格納されるワイド文字は &lt;code&gt;len&lt;/code&gt; を超えます。 &lt;code&gt;src&lt;/code&gt; は、変換されていない最初のマルチバイト文字の先頭を指すように設定されます。 &lt;code&gt;dst==&lt;a href=&quot;../../types/null&quot;&gt;NULL&lt;/a&gt;&lt;/code&gt; 場合、この条件はチェックされません。</target>
        </trans-unit>
        <trans-unit id="57e37baa16671bb24810fbaffaaf637988956d47" translate="yes" xml:space="preserve">
          <source>the non-explicit conversion functions from &lt;code&gt;S&lt;/code&gt; and its base classes (unless hidden) to &lt;code&gt;T&lt;/code&gt; or class derived from &lt;code&gt;T&lt;/code&gt; or a reference to such. If this copy-initialization is part of the direct-initialization sequence of</source>
          <target state="translated">&lt;code&gt;S&lt;/code&gt; とその基本クラス（非表示でない場合）から &lt;code&gt;T&lt;/code&gt; への非明示的な変換関数、または &lt;code&gt;T&lt;/code&gt; から派生したクラス、またはそのようなクラスへの参照。このコピー初期化が直接初期化シーケンスの一部である場合</target>
        </trans-unit>
        <trans-unit id="ce2d92c706daf5f4f3d3e300db3869dba026e3be" translate="yes" xml:space="preserve">
          <source>the non-explicit user-defined conversion functions of &lt;code&gt;S&lt;/code&gt; and its base classes (unless hidden) that produce type &lt;code&gt;T&lt;/code&gt; or a type convertible to &lt;code&gt;T&lt;/code&gt; by a &lt;a href=&quot;implicit_cast&quot;&gt;standard conversion sequence&lt;/a&gt;, or a reference to such type. cv qualifiers on the returned type are ignored for the purpose of selecting candidate functions.</source>
          <target state="translated">タイプ &lt;code&gt;T&lt;/code&gt; または&lt;a href=&quot;implicit_cast&quot;&gt;標準の変換シーケンス&lt;/a&gt;によって &lt;code&gt;T&lt;/code&gt; に変換可能なタイプ、またはそのようなタイプへの参照を生成する、 &lt;code&gt;S&lt;/code&gt; およびその基本クラス（非表示でない場合）の非明示的なユーザー定義変換関数 返される型のcv修飾子は、候補関数を選択するために無視されます。</target>
        </trans-unit>
        <trans-unit id="2c400820275bb4a1e4cfb3d66f529196c3940b6e" translate="yes" xml:space="preserve">
          <source>the non-explicit user-defined conversion functions of &lt;code&gt;S&lt;/code&gt; and its base classes (unless hidden) to the type</source>
          <target state="translated">&lt;code&gt;S&lt;/code&gt; とその基本クラス（非表示でない場合）の型への明示的なユーザー定義変換関数</target>
        </trans-unit>
        <trans-unit id="5e946d9b2a259c397fd4478cb0648b675b2d008d" translate="yes" xml:space="preserve">
          <source>the non-static data members of its member anonymous unions;</source>
          <target state="translated">そのメンバーである匿名組合の非静的データメンバー。</target>
        </trans-unit>
        <trans-unit id="ae5444dc6d7aea9fd27ed5da85447458d09fc5e0" translate="yes" xml:space="preserve">
          <source>the null-terminated character string to be inserted into the stream after each output</source>
          <target state="translated">各出力の後にストリームに挿入されるヌル文字で終端する文字列。</target>
        </trans-unit>
        <trans-unit id="35d57cddc6f234f81239052a43e077ac704b0489" translate="yes" xml:space="preserve">
          <source>the number base</source>
          <target state="translated">数基底</target>
        </trans-unit>
        <trans-unit id="82af2cb2921e5e4dce52af8de0126864cb6afe6b" translate="yes" xml:space="preserve">
          <source>the number of &lt;code&gt;shared_ptr&lt;/code&gt; instances managing the current object or &lt;code&gt;​0​&lt;/code&gt; if there is no managed object.</source>
          <target state="translated">数 &lt;code&gt;shared_ptr&lt;/code&gt; インスタンスは、現在のオブジェクトまたは管理 &lt;code&gt;​0​&lt;/code&gt; 管理対象オブジェクトが存在しない場合。</target>
        </trans-unit>
        <trans-unit id="c73ca5be309fc10ce899393355cf572b3d45a2bc" translate="yes" xml:space="preserve">
          <source>the number of &lt;code&gt;shared_ptr&lt;/code&gt;s that own the managed object;</source>
          <target state="translated">管理対象オブジェクトを所有する &lt;code&gt;shared_ptr&lt;/code&gt; の数。</target>
        </trans-unit>
        <trans-unit id="4599a71ac9dfa05a6d8f9cc251d8617162c9218c" translate="yes" xml:space="preserve">
          <source>the number of &lt;code&gt;weak_ptr&lt;/code&gt;s that refer to the managed object.</source>
          <target state="translated">管理対象オブジェクトを参照する &lt;code&gt;weak_ptr&lt;/code&gt; の数。</target>
        </trans-unit>
        <trans-unit id="a354ded02e2c4657b44f9e255ed2acd4049f13ad" translate="yes" xml:space="preserve">
          <source>the number of CharT elements in the user-provided buffer</source>
          <target state="translated">ユーザーが提供するバッファ内の CharT 要素の数</target>
        </trans-unit>
        <trans-unit id="a06a9776ef5bfbb7e8c4e610b1f639ac9ed00b20" translate="yes" xml:space="preserve">
          <source>the number of CharT elements in the user-provided buffer or zero</source>
          <target state="translated">ユーザーが提供するバッファ内の CharT 要素の数、またはゼロ</target>
        </trans-unit>
        <trans-unit id="25297f7ce8a0d5ea9a312be07eba02b2ff33fc5e" translate="yes" xml:space="preserve">
          <source>the number of bits the generated numbers should have</source>
          <target state="translated">生成される数値が持つべきビット数</target>
        </trans-unit>
        <trans-unit id="11a09f553a3e492f2fd940b2b08b8f942d80d65e" translate="yes" xml:space="preserve">
          <source>the number of bits to allocate storage for</source>
          <target state="translated">のためにストレージを割り当てるビット数</target>
        </trans-unit>
        <trans-unit id="d6350e4185e4378cf8d2c2a8bbc66b8f98c504ab" translate="yes" xml:space="preserve">
          <source>the number of bytes &lt;code&gt;[1...n]&lt;/code&gt; of the multibyte character successfully converted from &lt;code&gt;s&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;s&lt;/code&gt; から正常に変換されたマルチバイト文字のバイト数 &lt;code&gt;[1...n]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="90ec49260fce691d95da7e5d016fd69601c49a07" translate="yes" xml:space="preserve">
          <source>the number of bytes in the get area (if pbeg is null) or in the put area (if pbeg is not null) of the user-provided array</source>
          <target state="translated">ユーザが提供する配列の get 領域 (pbeg が NULL の場合)または put 領域 (pbeg が NULL でない場合)のバイト数。</target>
        </trans-unit>
        <trans-unit id="0d2e96e7824c544a1c881bfb8d0908065078643a" translate="yes" xml:space="preserve">
          <source>the number of bytes in the range</source>
          <target state="translated">範囲内のバイト数</target>
        </trans-unit>
        <trans-unit id="b221d5487d6fc359e31372456c399c5e77e76fff" translate="yes" xml:space="preserve">
          <source>the number of bytes in the range, same value as previously used with &lt;code&gt;&lt;a href=&quot;declare_no_pointers&quot;&gt;std::declare_no_pointers&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">範囲内のバイト数。以前に &lt;code&gt;&lt;a href=&quot;declare_no_pointers&quot;&gt;std::declare_no_pointers&lt;/a&gt;&lt;/code&gt; 使用されていたのと同じ値</target>
        </trans-unit>
        <trans-unit id="98b583c5a7a46cdb9cfb500bf34ebc44b3384b22" translate="yes" xml:space="preserve">
          <source>the number of bytes in the user-provided buffer</source>
          <target state="translated">ユーザー提供バッファのバイト数</target>
        </trans-unit>
        <trans-unit id="255b1706d886083cbb675bd4de6b2959a0ec5ab0" translate="yes" xml:space="preserve">
          <source>the number of bytes originally allocated</source>
          <target state="translated">元々割り当てられていたバイト数</target>
        </trans-unit>
        <trans-unit id="795479b82e95c525e23d22b8da5d75f3ead52c5f" translate="yes" xml:space="preserve">
          <source>the number of bytes to allocate</source>
          <target state="translated">割り当てるバイト数</target>
        </trans-unit>
        <trans-unit id="a4650eba636889bbba136ae9c5b4b530fbe8725f" translate="yes" xml:space="preserve">
          <source>the number of characters to analyze</source>
          <target state="translated">解析対象文字数</target>
        </trans-unit>
        <trans-unit id="b95dea6573d468f5e0766b2cf5e73d6182e1e02f" translate="yes" xml:space="preserve">
          <source>the number of characters to compare from each character string</source>
          <target state="translated">各文字列から比較する文字数</target>
        </trans-unit>
        <trans-unit id="7a5a0066c30459bb51d26e79540fc1678462ff4d" translate="yes" xml:space="preserve">
          <source>the number of characters to copy</source>
          <target state="translated">コピー文字数</target>
        </trans-unit>
        <trans-unit id="60c12e93895d53e94580df8ffdc55bdbda620ee0" translate="yes" xml:space="preserve">
          <source>the number of densities</source>
          <target state="translated">密数</target>
        </trans-unit>
        <trans-unit id="218e0778fa7f3b40abaea676aceeb85d18682d9b" translate="yes" xml:space="preserve">
          <source>the number of digits after the decimal point to display in a monetary quantity</source>
          <target state="translated">小数点以下</target>
        </trans-unit>
        <trans-unit id="68dd91ccc2a74e71df691874588ac5114df484af" translate="yes" xml:space="preserve">
          <source>the number of digits after the decimal point to display in an international monetary quantity</source>
          <target state="translated">小数点以下の桁数</target>
        </trans-unit>
        <trans-unit id="1a60b4b93986f97476c7948a1f5f58b8813dfad4" translate="yes" xml:space="preserve">
          <source>the number of dimensions of &lt;code&gt;T&lt;/code&gt; or zero</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; またはゼロの次元数</target>
        </trans-unit>
        <trans-unit id="0db520278ee4694187ba8c190a1e8dbfd5257819" translate="yes" xml:space="preserve">
          <source>the number of elements along the &lt;code&gt;N&lt;/code&gt;th dimension of &lt;code&gt;T&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; の &lt;code&gt;N&lt;/code&gt; 番目の次元に沿った要素の数</target>
        </trans-unit>
        <trans-unit id="73845dfa53ddf7e0f27a2a321ed061e9e75d8505" translate="yes" xml:space="preserve">
          <source>the number of elements in the initializer list.</source>
          <target state="translated">初期化リストの要素数。</target>
        </trans-unit>
        <trans-unit id="9970f345e3233f532871c567697108ea557398e7" translate="yes" xml:space="preserve">
          <source>the number of elements in the sequence, or &lt;code&gt;std::dynamic_extent&lt;/code&gt; if dynamic</source>
          <target state="translated">シーケンスの要素数、または動的の場合は &lt;code&gt;std::dynamic_extent&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="773673fa6e28fee2898cb88d27f06faefe3334c1" translate="yes" xml:space="preserve">
          <source>the number of elements in the slice</source>
          <target state="translated">スライス内の要素数</target>
        </trans-unit>
        <trans-unit id="9a0b8800dd326bf591c290ee87005fb6bc6d6485" translate="yes" xml:space="preserve">
          <source>the number of elements to apply the function to</source>
          <target state="translated">関数を適用する要素の数</target>
        </trans-unit>
        <trans-unit id="c560990d88daf672b4160f6beb98253f8a748190" translate="yes" xml:space="preserve">
          <source>the number of elements to construct</source>
          <target state="translated">要素数</target>
        </trans-unit>
        <trans-unit id="81f1662694ad4631a09141522ca06b9c0c93552b" translate="yes" xml:space="preserve">
          <source>the number of elements to destroy</source>
          <target state="translated">壊すべき要素数</target>
        </trans-unit>
        <trans-unit id="b7db48bd0e3920c1efb87a9f941b6935c4f25420" translate="yes" xml:space="preserve">
          <source>the number of elements to initialize</source>
          <target state="translated">初期化する要素数</target>
        </trans-unit>
        <trans-unit id="10ea2dcbc381af2c0ef82dbba5a3522e53427be9" translate="yes" xml:space="preserve">
          <source>the number of hours</source>
          <target state="translated">じかん</target>
        </trans-unit>
        <trans-unit id="2a37c8b78496a110425afe04d2d740fec645931a" translate="yes" xml:space="preserve">
          <source>the number of levels &lt;code&gt;n&lt;/code&gt; is the same for both pointers;</source>
          <target state="translated">レベル &lt;code&gt;n&lt;/code&gt; は両方のポインタで同じです。</target>
        </trans-unit>
        <trans-unit id="b4ec8201a6f3daf6cf0ac8d570cfc9061b7870b7" translate="yes" xml:space="preserve">
          <source>the number of microseconds</source>
          <target state="translated">マイクロ秒</target>
        </trans-unit>
        <trans-unit id="c6bb5714c9d6303bf2f3a723dee9e4f40c7e3b7e" translate="yes" xml:space="preserve">
          <source>the number of milliseconds</source>
          <target state="translated">ミリ秒数</target>
        </trans-unit>
        <trans-unit id="ad2da7113934a03644d1747b09d32b5bad2a8d57" translate="yes" xml:space="preserve">
          <source>the number of minutes</source>
          <target state="translated">分数</target>
        </trans-unit>
        <trans-unit id="711d8f37307545eda107dd54c0f0b82620a82a30" translate="yes" xml:space="preserve">
          <source>the number of nanoseconds</source>
          <target state="translated">ナノ秒数</target>
        </trans-unit>
        <trans-unit id="8bc005ffa0a0ff82f17772bbc9ad2625189c0b10" translate="yes" xml:space="preserve">
          <source>the number of objects for which the memory was allocated</source>
          <target state="translated">メモリが割り当てられたオブジェクトの数</target>
        </trans-unit>
        <trans-unit id="25fd4f3d613855be655f2eb7c2112df6bab0a4d2" translate="yes" xml:space="preserve">
          <source>the number of objects originally allocated</source>
          <target state="translated">もともと割り当てられていたオブジェクトの数</target>
        </trans-unit>
        <trans-unit id="2d2fa6e6eed2eee987067d78842ea69028e38062" translate="yes" xml:space="preserve">
          <source>the number of objects the storage was allocated for</source>
          <target state="translated">ストレージに割り当てられたオブジェクトの数</target>
        </trans-unit>
        <trans-unit id="8404e15d5c543c1c6821e517575dcdc4f30de23f" translate="yes" xml:space="preserve">
          <source>the number of objects to allocate storage for</source>
          <target state="translated">にストレージを割り当てるオブジェクトの数</target>
        </trans-unit>
        <trans-unit id="8c57d37f1cb3a1aaa353c58c4f51744567a21647" translate="yes" xml:space="preserve">
          <source>the number of positions between successive elements in the slice</source>
          <target state="translated">スライス内の連続した要素間の位置の数</target>
        </trans-unit>
        <trans-unit id="575b21d1c792f7337a402d98f7b38726d831e432" translate="yes" xml:space="preserve">
          <source>the number of positions to shift</source>
          <target state="translated">繰り上がり数</target>
        </trans-unit>
        <trans-unit id="28e4b14eb7b17d37625a743251c36dea28ac084b" translate="yes" xml:space="preserve">
          <source>the number of references that link to the facet</source>
          <target state="translated">ファセットにリンクしている参照数</target>
        </trans-unit>
        <trans-unit id="126d23fca6e1ee7004ad0d016c2d0e80b8065361" translate="yes" xml:space="preserve">
          <source>the number of seconds</source>
          <target state="translated">秒数</target>
        </trans-unit>
        <trans-unit id="54f06f4a490e95eb4a477b036f73274a9f72c9ca" translate="yes" xml:space="preserve">
          <source>the number of the objects to be read</source>
          <target state="translated">読み取るオブジェクトの数</target>
        </trans-unit>
        <trans-unit id="0fe7666a02da5ff8906becdf3018a43e27306c81" translate="yes" xml:space="preserve">
          <source>the number of the objects to be written</source>
          <target state="translated">書き込まれるオブジェクトの数</target>
        </trans-unit>
        <trans-unit id="53feaa8a151eef13ae96a35f0686282b97592951" translate="yes" xml:space="preserve">
          <source>the number of used numbers per block, &lt;code&gt;R&lt;/code&gt;</source>
          <target state="translated">ブロックごとに使用される数の数、 &lt;code&gt;R&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1f2cfad6de59854b5f197be6276c228611384881" translate="yes" xml:space="preserve">
          <source>the number of used numbers per block. Must be greater than 0 and not greater than &lt;code&gt;P&lt;/code&gt;</source>
          <target state="translated">ブロックあたりの使用数。0より大きく、 &lt;code&gt;P&lt;/code&gt; 以下である必要があります</target>
        </trans-unit>
        <trans-unit id="7a8cff8ebe35e7f55b8fdb8b5a6b2b48f358546b" translate="yes" xml:space="preserve">
          <source>the object from which the &lt;a href=&quot;../../named_req/callable&quot;&gt;Callable&lt;/a&gt; object held by the wrapper is constructed</source>
          <target state="translated">そこからオブジェクト&lt;a href=&quot;../../named_req/callable&quot;&gt;呼び出し可能&lt;/a&gt;ラッパーに保持された物体が構築されます</target>
        </trans-unit>
        <trans-unit id="9c46645a3df2caf7af7cf56c74ca33b06eb928d6" translate="yes" xml:space="preserve">
          <source>the object or function), or</source>
          <target state="translated">オブジェクトまたは関数)、または</target>
        </trans-unit>
        <trans-unit id="4df582c3c420ce0cd15b6e783ee38b0bddc8f2f8" translate="yes" xml:space="preserve">
          <source>the object referred to by &lt;code&gt;fun()&lt;/code&gt; is not modified by either expression above.</source>
          <target state="translated">&lt;code&gt;fun()&lt;/code&gt; によって参照されるオブジェクトは、上記のいずれの式によっても変更されません。</target>
        </trans-unit>
        <trans-unit id="d1ac6b8294bb093b662607694d34fe804d142d0b" translate="yes" xml:space="preserve">
          <source>the object to acquire address of</source>
          <target state="translated">のアドレスを取得するオブジェクト</target>
        </trans-unit>
        <trans-unit id="ab35b6de0e782ed2c67936822abdba840969d095" translate="yes" xml:space="preserve">
          <source>the object to be forwarded</source>
          <target state="translated">転送先</target>
        </trans-unit>
        <trans-unit id="f591bc6dc4ab0fcda645613adb12b594cc18a53e" translate="yes" xml:space="preserve">
          <source>the object to be hashed</source>
          <target state="translated">ハッシュ化されるオブジェクト</target>
        </trans-unit>
        <trans-unit id="f2e9edc27076fa73d3ea19f059d4d38f5378f3ba" translate="yes" xml:space="preserve">
          <source>the object to be moved</source>
          <target state="translated">移動体</target>
        </trans-unit>
        <trans-unit id="c3bec46e56bd2c59b5549f64274f1c333e11e4d9" translate="yes" xml:space="preserve">
          <source>the object to be moved or copied</source>
          <target state="translated">移動・コピー対象物</target>
        </trans-unit>
        <trans-unit id="010622515a484a2955f6c5aa700cb1185727d92c" translate="yes" xml:space="preserve">
          <source>the object to insert</source>
          <target state="translated">挿入対象</target>
        </trans-unit>
        <trans-unit id="cfd39fe77337f523f688c209387b94bead767ac0" translate="yes" xml:space="preserve">
          <source>the operand of a cast or conversion to (possibly cv-qualified) &lt;code&gt;unsigned char&lt;/code&gt;or &lt;a href=&quot;../types/byte&quot;&gt;&lt;code&gt;std::byte&lt;/code&gt;&lt;/a&gt;(since C++17),</source>
          <target state="translated">キャストのオペランド、または（おそらくcv修飾された） &lt;code&gt;unsigned char&lt;/code&gt; または&lt;a href=&quot;../types/byte&quot;&gt; &lt;code&gt;std::byte&lt;/code&gt; &lt;/a&gt;への変換（C ++ 17以降）、</target>
        </trans-unit>
        <trans-unit id="84bbfd69f218fb27e9ac45336317909fd6e0781c" translate="yes" xml:space="preserve">
          <source>the operand of a unary ! operator with the resulting expression being the entire controlling expression of &lt;a href=&quot;../../language/if&quot;&gt;if&lt;/a&gt;, &lt;a href=&quot;../../language/switch&quot;&gt;switch&lt;/a&gt;, &lt;a href=&quot;../../language/while&quot;&gt;while&lt;/a&gt;, &lt;a href=&quot;../../language/do&quot;&gt;do-while&lt;/a&gt;, &lt;a href=&quot;../../language/for&quot;&gt;for&lt;/a&gt;.</source>
          <target state="translated">単項のオペランド！結果の式が&lt;a href=&quot;../../language/if&quot;&gt;if&lt;/a&gt;、&lt;a href=&quot;../../language/switch&quot;&gt;switch&lt;/a&gt;、&lt;a href=&quot;../../language/while&quot;&gt;while&lt;/a&gt;、&lt;a href=&quot;../../language/do&quot;&gt;do-while&lt;/a&gt;、&lt;a href=&quot;../../language/for&quot;&gt;forの&lt;/a&gt;制御式全体である演算子。</target>
        </trans-unit>
        <trans-unit id="671dbc417a9d0f883d38870671e08a64b88191fa" translate="yes" xml:space="preserve">
          <source>the operands of the built-in logical operators &lt;code&gt;!&lt;/code&gt;, &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; and &lt;code&gt;||&lt;/code&gt;;</source>
          <target state="translated">組み込みの論理演算子のオペランド &lt;code&gt;!&lt;/code&gt; 、 &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; および &lt;code&gt;||&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="05131ecd72c3cf1a44095ffb781ce239363b26c4" translate="yes" xml:space="preserve">
          <source>the optional modifier that may appear between &lt;code&gt;%&lt;/code&gt; and the conversion specifier</source>
          <target state="translated">&lt;code&gt;%&lt;/code&gt; と変換指定子の間に表示されるオプションの修飾子</target>
        </trans-unit>
        <trans-unit id="4492204dacfed7fe2b42f221f7dcae3bb4772894" translate="yes" xml:space="preserve">
          <source>the order of the function</source>
          <target state="translated">関数の順序</target>
        </trans-unit>
        <trans-unit id="5fbf55aa0ea8aca781bbb016e01c94a5e29f0aa8" translate="yes" xml:space="preserve">
          <source>the order of the polynomial, a value of unsigned integer type</source>
          <target state="translated">多項式の次数、符号なし整数型の値</target>
        </trans-unit>
        <trans-unit id="f0942fc6ed4ff4c136769c69b74ce49a1cfed2c6" translate="yes" xml:space="preserve">
          <source>the original object was a most derived object of type T and the new object is a most derived object of type T (that is, they are not base class subobjects).</source>
          <target state="translated">元のオブジェクトはT型の最派生オブジェクトであり、新しいオブジェクトはT型の最派生オブジェクトです(つまり、それらは基底クラスのサブオブジェクトではありません)。</target>
        </trans-unit>
        <trans-unit id="e5defad4c8592a2e85562ffd9f210b2efc86458a" translate="yes" xml:space="preserve">
          <source>the other argument of arithmetic addition</source>
          <target state="translated">他引数</target>
        </trans-unit>
        <trans-unit id="ff79d3cb9e86a9cadba1cc14e992558caf2a31df" translate="yes" xml:space="preserve">
          <source>the other argument of arithmetic subtraction</source>
          <target state="translated">他引数</target>
        </trans-unit>
        <trans-unit id="717fbac25105914e4146a38262480c0fe81f7db4" translate="yes" xml:space="preserve">
          <source>the other argument of bitwise AND</source>
          <target state="translated">ビットごとのANDのもう一方の引数</target>
        </trans-unit>
        <trans-unit id="4f53d7427fa56126418a894bf603a85166fa4458" translate="yes" xml:space="preserve">
          <source>the other argument of bitwise OR</source>
          <target state="translated">ビットごとのORのもう一方の引数</target>
        </trans-unit>
        <trans-unit id="b0ac6c4828f7cd602e3d6d842f0050ad5bbbb915" translate="yes" xml:space="preserve">
          <source>the other argument of bitwise XOR</source>
          <target state="translated">ビットごとのXORのもう一方の引数</target>
        </trans-unit>
        <trans-unit id="30d29be2d4b066365577700ead7d45b829f75bd4" translate="yes" xml:space="preserve">
          <source>the out-parameter where the parsed value is stored if successful</source>
          <target state="translated">成功した場合に解析された値が格納される out-parameter</target>
        </trans-unit>
        <trans-unit id="591a7f0152ed3f343409ad82d24f7e1419862360" translate="yes" xml:space="preserve">
          <source>the output iterator where the samples are written. Must not be in the [first;last) range</source>
          <target state="translated">サンプルが書き込まれる出力イテレータ.first;last)の範囲内にあってはいけません。</target>
        </trans-unit>
        <trans-unit id="873b893ee45f47d865499a0eba6b92b7fe3921d4" translate="yes" xml:space="preserve">
          <source>the output shown was observed on an older version of gcc.</source>
          <target state="translated">表示されている出力は、古いバージョンの gcc で観測されました。</target>
        </trans-unit>
        <trans-unit id="3777c2301ebd17dcd484dea8d7d45e2069ae3e3b" translate="yes" xml:space="preserve">
          <source>the output stream</source>
          <target state="translated">しゅつりょくのながれ</target>
        </trans-unit>
        <trans-unit id="5a2a5e742fcb567001ca0ac2588ae257f9c4e371" translate="yes" xml:space="preserve">
          <source>the output stream buffer to be accessed by this iterator</source>
          <target state="translated">このイテレータがアクセスする出力ストリームバッファ。</target>
        </trans-unit>
        <trans-unit id="55294bc1a4e795bf657387e7f9194ff98db9e692" translate="yes" xml:space="preserve">
          <source>the output stream to be accessed by this iterator</source>
          <target state="translated">このイテレータがアクセスする出力ストリーム。</target>
        </trans-unit>
        <trans-unit id="397bc82d9a0a49f17748f49ef1abd2eed5eeb09a" translate="yes" xml:space="preserve">
          <source>the output stream whose rdbuf() will be accessed by this iterator</source>
          <target state="translated">このイテレータによって rdbuf()がアクセスされる出力ストリーム。</target>
        </trans-unit>
        <trans-unit id="e4739321674c9e5d77b46870ed905e524d529bf5" translate="yes" xml:space="preserve">
          <source>the overloads are added</source>
          <target state="translated">オーバーロードが追加されました。</target>
        </trans-unit>
        <trans-unit id="cd5858ee51b20f7d62aa0b87119e5b1184920f81" translate="yes" xml:space="preserve">
          <source>the pair whose two members are the constructor arguments for &lt;code&gt;T1&lt;/code&gt; and &lt;code&gt;T2&lt;/code&gt;</source>
          <target state="translated">2つのメンバーが &lt;code&gt;T1&lt;/code&gt; および &lt;code&gt;T2&lt;/code&gt; のコンストラクター引数であるペア</target>
        </trans-unit>
        <trans-unit id="24713d954a11456d3fe11ed69d90e38350f3f9fc" translate="yes" xml:space="preserve">
          <source>the parameter declaration of a &lt;a href=&quot;lambda&quot;&gt;lambda expression&lt;/a&gt;: &lt;code&gt;[](auto&amp;amp;&amp;amp;){}&lt;/code&gt;. Such lambda expression is a</source>
          <target state="translated">&lt;a href=&quot;lambda&quot;&gt;ラムダ式&lt;/a&gt;のパラメーター宣言： &lt;code&gt;[](auto&amp;amp;&amp;amp;){}&lt;/code&gt; 。そのようなラムダ式は</target>
        </trans-unit>
        <trans-unit id="374ab1a62fcacd5f61ee1953844c960babab120a" translate="yes" xml:space="preserve">
          <source>the parameters (all copied by value)</source>
          <target state="translated">パラメータ (すべて値でコピーされたもの)</target>
        </trans-unit>
        <trans-unit id="40111f45547e2fef5f9bd510d681de3c56de41ee" translate="yes" xml:space="preserve">
          <source>the parameters to pass on invocation of the stored task</source>
          <target state="translated">ストアドタスクの呼び出し時に渡すパラメータ</target>
        </trans-unit>
        <trans-unit id="d22aa415189d0d851b3c96d4ccb994128ad72049" translate="yes" xml:space="preserve">
          <source>the partitioned range of elements to examine</source>
          <target state="translated">検査する要素の分割範囲</target>
        </trans-unit>
        <trans-unit id="90ae1896c5738c4788e932ebb6e85ac128c35b63" translate="yes" xml:space="preserve">
          <source>the path to a directory to copy the attributes from</source>
          <target state="translated">から属性をコピーするディレクトリへのパス。</target>
        </trans-unit>
        <trans-unit id="750766acd03c59c6cc0ddd959ce161c2eb98061c" translate="yes" xml:space="preserve">
          <source>the path to append to the parent path of the currently stored path</source>
          <target state="translated">現在保存されているパスの親パスに追加するパス。</target>
        </trans-unit>
        <trans-unit id="6e82df398cf78bbf41681eefcb5ffc41dd58b4c0" translate="yes" xml:space="preserve">
          <source>the path to the new directory to create</source>
          <target state="translated">を作成する新しいディレクトリへのパス</target>
        </trans-unit>
        <trans-unit id="14c5d6f9e36bd5c8fc833add26036a9528f9a719" translate="yes" xml:space="preserve">
          <source>the paths to compare</source>
          <target state="translated">比べ道</target>
        </trans-unit>
        <trans-unit id="2bab0e7d72a0ee06e09417817d315fae2367a1ef" translate="yes" xml:space="preserve">
          <source>the pending recursion flag (accessible with &lt;a href=&quot;recursive_directory_iterator/recursion_pending&quot;&gt;&lt;code&gt;recursion_pending()&lt;/code&gt;&lt;/a&gt;, may be combined with the directory options to save space)</source>
          <target state="translated">保留中の再帰フラグ（以下でアクセス可能） &lt;a href=&quot;recursive_directory_iterator/recursion_pending&quot;&gt; &lt;code&gt;recursion_pending()&lt;/code&gt; &lt;/a&gt;でスペースを節約するためにディレクトリオプションと組み合わせることができます）</target>
        </trans-unit>
        <trans-unit id="34005927ff0a6ee6266e094b56d4083e73bf3e8d" translate="yes" xml:space="preserve">
          <source>the plus sign is not recognized outside of the exponent (only the minus sign is permitted at the beginning)</source>
          <target state="translated">プラス記号は指数の外では認識されません(先頭のマイナス記号だけが許されます)。</target>
        </trans-unit>
        <trans-unit id="2e3dc1c20c3be016c8afc2dbc25edd6c804acb92" translate="yes" xml:space="preserve">
          <source>the pointer &lt;code&gt;p&lt;/code&gt; represents the address &lt;code&gt;A&lt;/code&gt; of a byte in memory</source>
          <target state="translated">ポインタ &lt;code&gt;p&lt;/code&gt; は、メモリ内のバイトのアドレス &lt;code&gt;A&lt;/code&gt; を表します</target>
        </trans-unit>
        <trans-unit id="71d281744bc0566abdc3a6bccdaa09b5cc19f995" translate="yes" xml:space="preserve">
          <source>the pointer literal</source>
          <target state="translated">ポインタリテラル</target>
        </trans-unit>
        <trans-unit id="6e47bc1701aa88541c21c886cc7855b6960f765b" translate="yes" xml:space="preserve">
          <source>the pointer literal which specifies a null pointer value (C++11)</source>
          <target state="translated">ヌルポインタの値を指定するポインタリテラル (C++11)</target>
        </trans-unit>
        <trans-unit id="910f58ae9665a2c4ed9057f33611fc6b4846c7bd" translate="yes" xml:space="preserve">
          <source>the pointer of type &lt;code&gt;T*&lt;/code&gt; prepared by the container</source>
          <target state="translated">型のポインタ &lt;code&gt;T*&lt;/code&gt; コンテナによって準備されたT *</target>
        </trans-unit>
        <trans-unit id="c0de43ded8637d87060167bed7e58644e13881f9" translate="yes" xml:space="preserve">
          <source>the pointer previously returned by &lt;code&gt;&lt;a href=&quot;get_temporary_buffer&quot;&gt;std::get_temporary_buffer&lt;/a&gt;&lt;/code&gt; and not invalidated by an earlier call to &lt;code&gt;return_temporary_buffer&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;get_temporary_buffer&quot;&gt;std::get_temporary_buffer&lt;/a&gt;&lt;/code&gt; によって以前に返されたポインタれ、以前の &lt;code&gt;return_temporary_buffer&lt;/code&gt; の呼び出しによって無効にされていないポインター</target>
        </trans-unit>
        <trans-unit id="247f6308566d7c947ba5722c1a3db0083474c66b" translate="yes" xml:space="preserve">
          <source>the pointer to be inserted into &lt;code&gt;os&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;os&lt;/code&gt; に挿入されるポインタ</target>
        </trans-unit>
        <trans-unit id="2ae257970aa53e892373c334a4856e81cdc6235f" translate="yes" xml:space="preserve">
          <source>the position of the bit to flip</source>
          <target state="translated">跳ね上げ位置</target>
        </trans-unit>
        <trans-unit id="69f6ceed61164ee2996036b2f0734e6ba8c5b414" translate="yes" xml:space="preserve">
          <source>the position of the bit to set</source>
          <target state="translated">設定ビット位置</target>
        </trans-unit>
        <trans-unit id="b7f92e4aba98e02b949e286cac7175294117f99e" translate="yes" xml:space="preserve">
          <source>the position of the bit to set (least significant to most significant)</source>
          <target state="translated">設定するビットの位置(最下位から最上位まで</target>
        </trans-unit>
        <trans-unit id="abc7d65f4aee6aedbadf4e062a2d619f305d4c9a" translate="yes" xml:space="preserve">
          <source>the position of the first element</source>
          <target state="translated">第1の要素の位置</target>
        </trans-unit>
        <trans-unit id="d5ef3ac0db7f8fb17f259ec82f9cd4072071079d" translate="yes" xml:space="preserve">
          <source>the precision before the call to the function.</source>
          <target state="translated">関数を呼び出す前の精度を指定します。</target>
        </trans-unit>
        <trans-unit id="66d1273dd425373591c433b40d903dff1ce8ddc7" translate="yes" xml:space="preserve">
          <source>the predicate in a &lt;a href=&quot;static_assert&quot;&gt;&lt;code&gt;static_assert&lt;/code&gt;&lt;/a&gt; declaration;</source>
          <target state="translated">の述語 &lt;a href=&quot;static_assert&quot;&gt; &lt;code&gt;static_assert&lt;/code&gt; &lt;/a&gt;宣言の。</target>
        </trans-unit>
        <trans-unit id="ecdb88f8f9f513ec1a13d1afdea46238b550b534" translate="yes" xml:space="preserve">
          <source>the predicate of a &lt;a href=&quot;attributes/contract&quot;&gt;contract attribute&lt;/a&gt;.</source>
          <target state="translated">の述語 &lt;a href=&quot;attributes/contract&quot;&gt;契約属性の&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cbbb2cc7526c63bbc59f6a9ef66d5fa783698366" translate="yes" xml:space="preserve">
          <source>the predicate used to filter out elements of &lt;code&gt;base_&lt;/code&gt;</source>
          <target state="translated">の要素を除外するために使用される述語 &lt;code&gt;base_&lt;/code&gt; の除外</target>
        </trans-unit>
        <trans-unit id="20cd8cc07290b5ed427651ffc817b5805288392e" translate="yes" xml:space="preserve">
          <source>the projection of &lt;code&gt;z&lt;/code&gt; onto the Riemann sphere.</source>
          <target state="translated">の投影 &lt;code&gt;z&lt;/code&gt; リーマン球へ z。</target>
        </trans-unit>
        <trans-unit id="931a603686d7ad78624d461e30ce67e52868b4fb" translate="yes" xml:space="preserve">
          <source>the promise object</source>
          <target state="translated">約束の対象</target>
        </trans-unit>
        <trans-unit id="eef3cec1dd203144ca3ddf39897a89c7ff888f17" translate="yes" xml:space="preserve">
          <source>the promise to swap with</source>
          <target state="translated">スワップの約束</target>
        </trans-unit>
        <trans-unit id="56fb4a5bec6225980bb8dbb0f1ec1b880e00f65d" translate="yes" xml:space="preserve">
          <source>the qualified name is always considered to name &lt;code&gt;C&lt;/code&gt;'s constructor. Such a name can only be used in the declaration of a constructor (e.g. in a friend constructor declaration, a constructor template specialization, constructor template instantiation, or constructor definition) or be used to inherit constructors(since C++11).</source>
          <target state="translated">修飾名は常に &lt;code&gt;C&lt;/code&gt; と見なされますのコンストラクターのます。そのような名前は、コンストラクターの宣言（たとえば、フレンドコンストラクター宣言、コンストラクターテンプレートの特殊化、コンストラクターテンプレートのインスタンス化、またはコンストラクター定義）でのみ使用できます（またはC ++ 11以降）。</target>
        </trans-unit>
        <trans-unit id="648aa98766315a1e43a2fedff47e2704826d6711" translate="yes" xml:space="preserve">
          <source>the radix (integer base) used by the representation of all three floating-point types</source>
          <target state="translated">三つの浮動小数点型の表現に使用される基数 (整数基底)。</target>
        </trans-unit>
        <trans-unit id="1befb3c24d5baf8237a7059dd25e2839fcc303a6" translate="yes" xml:space="preserve">
          <source>the radix or integer base used by the representation of the given type</source>
          <target state="translated">指定された型の表現で使用される基数または整数基底。</target>
        </trans-unit>
        <trans-unit id="7d3588c031c378e6a29cb79746aab73c6941df75" translate="yes" xml:space="preserve">
          <source>the random number generator used as the source of randomness</source>
          <target state="translated">乱数発生器</target>
        </trans-unit>
        <trans-unit id="2f0862f386c2a80a70a9fa3f92dad7c3df5e655b" translate="yes" xml:space="preserve">
          <source>the range of characters to assign</source>
          <target state="translated">割り当てる文字の範囲</target>
        </trans-unit>
        <trans-unit id="8414c735c738b58e4a3770ec8c6569dca7deca03" translate="yes" xml:space="preserve">
          <source>the range of elements</source>
          <target state="translated">ようそはんい</target>
        </trans-unit>
        <trans-unit id="4aa29a3b01f03077079fbd32044c588dfa04f9dd" translate="yes" xml:space="preserve">
          <source>the range of elements defining the heap to modify</source>
          <target state="translated">変更するヒープを定義する要素の範囲</target>
        </trans-unit>
        <trans-unit id="327546daad0fd5de815b3ce676276fd016f11ef0" translate="yes" xml:space="preserve">
          <source>the range of elements defining the numbers to use as weights. The type of the elements referred by &lt;code&gt;InputIterator&lt;/code&gt; must be convertible to &lt;code&gt;double&lt;/code&gt;</source>
          <target state="translated">重みとして使用する数値を定義する要素の範囲。 &lt;code&gt;InputIterator&lt;/code&gt; によって参照される要素の型は、 &lt;code&gt;double&lt;/code&gt; に変換可能でなければなりません</target>
        </trans-unit>
        <trans-unit id="fa7c1548cfda1aa720566ca8af5e4ad23a888924" translate="yes" xml:space="preserve">
          <source>the range of elements defining the valid nonempty heap to modify</source>
          <target state="translated">変更する有効な空でないヒープを定義する要素の範囲。</target>
        </trans-unit>
        <trans-unit id="2ca02d3cb64e1940989f21d264bbcbbcf4725b88" translate="yes" xml:space="preserve">
          <source>the range of elements to apply the algorithm to</source>
          <target state="translated">アルゴリズムを適用する要素の範囲</target>
        </trans-unit>
        <trans-unit id="00267a3ac5fde253cd47e36c304fdec1391bbcc5" translate="yes" xml:space="preserve">
          <source>the range of elements to check</source>
          <target state="translated">チェック対象の要素範囲</target>
        </trans-unit>
        <trans-unit id="67422bce8fb8a4f92507b7bb4301e8e3da7a10f1" translate="yes" xml:space="preserve">
          <source>the range of elements to compare</source>
          <target state="translated">比較対象の要素範囲</target>
        </trans-unit>
        <trans-unit id="c56a47b8f803601806da6160664bf272a16db12e" translate="yes" xml:space="preserve">
          <source>the range of elements to copy</source>
          <target state="translated">コピーする要素の範囲</target>
        </trans-unit>
        <trans-unit id="1912eecd61264bbf25650256fb3e597e51249ad4" translate="yes" xml:space="preserve">
          <source>the range of elements to destroy</source>
          <target state="translated">壊す要素の範囲</target>
        </trans-unit>
        <trans-unit id="8f7b5f635ad5fa461c5e1af6d24bbd4cdc44ad09" translate="yes" xml:space="preserve">
          <source>the range of elements to examine</source>
          <target state="translated">検討範囲</target>
        </trans-unit>
        <trans-unit id="88e47ef83571f9e698482a7b39d4f496a5622050" translate="yes" xml:space="preserve">
          <source>the range of elements to fill with sequentially increasing values starting with value</source>
          <target state="translated">値から順に増加する値で塗りつぶす要素の範囲</target>
        </trans-unit>
        <trans-unit id="b29f257fed843f1dfcb822328ff795babde57d30" translate="yes" xml:space="preserve">
          <source>the range of elements to generate</source>
          <target state="translated">生成する要素の範囲</target>
        </trans-unit>
        <trans-unit id="94060f899f49167b66222127ed5d99b278fcf6a9" translate="yes" xml:space="preserve">
          <source>the range of elements to insert</source>
          <target state="translated">挿入する要素の範囲</target>
        </trans-unit>
        <trans-unit id="3890ee93c07b599067df7f01f6a501a88288347b" translate="yes" xml:space="preserve">
          <source>the range of elements to insert, can't be iterators into container for which insert is called</source>
          <target state="translated">は挿入する要素の範囲を指定し、挿入が呼び出されるコンテナへのイテレータにすることはできません。</target>
        </trans-unit>
        <trans-unit id="5b6636e4c552fed55ae0629e7757135cb8d2c047" translate="yes" xml:space="preserve">
          <source>the range of elements to make the heap from</source>
          <target state="translated">からヒープを作るための要素の範囲</target>
        </trans-unit>
        <trans-unit id="cef18ee957c2c0677d77f5f41f4f8656160ffaab" translate="yes" xml:space="preserve">
          <source>the range of elements to modify</source>
          <target state="translated">修正する要素の範囲</target>
        </trans-unit>
        <trans-unit id="c329671d71481bda8a5fb2c1dc196460a1ef07f0" translate="yes" xml:space="preserve">
          <source>the range of elements to move</source>
          <target state="translated">移動範囲</target>
        </trans-unit>
        <trans-unit id="7f27eaab93d02f3bd6d0af14a9091173b45c1f19" translate="yes" xml:space="preserve">
          <source>the range of elements to move from &lt;code&gt;other&lt;/code&gt; to &lt;code&gt;*this&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;other&lt;/code&gt; から &lt;code&gt;*this&lt;/code&gt; に移動する要素の範囲</target>
        </trans-unit>
        <trans-unit id="cb9c686eaba9f1fed98873af2ca0004d4cd693f0" translate="yes" xml:space="preserve">
          <source>the range of elements to permute</source>
          <target state="translated">パーミュレートする要素の範囲</target>
        </trans-unit>
        <trans-unit id="9836e6c73ef312b7e320e7d454a4592547a99fa2" translate="yes" xml:space="preserve">
          <source>the range of elements to process</source>
          <target state="translated">処理対象となる要素の範囲</target>
        </trans-unit>
        <trans-unit id="71ffe669391c641ceead031d8c32b9b465d6f702" translate="yes" xml:space="preserve">
          <source>the range of elements to reorder</source>
          <target state="translated">要素の並び替え範囲</target>
        </trans-unit>
        <trans-unit id="f2eb22f06d93f821e8f8c105fd4da10a84cf0ecc" translate="yes" xml:space="preserve">
          <source>the range of elements to reverse</source>
          <target state="translated">反転させる要素の範囲</target>
        </trans-unit>
        <trans-unit id="390f40fa45a7d7bbbb2dfbb9642f8c6606a64e5c" translate="yes" xml:space="preserve">
          <source>the range of elements to search for</source>
          <target state="translated">探索する要素の範囲</target>
        </trans-unit>
        <trans-unit id="9e67e6fafe9e58f3c7ce342dbf7135d114df0e73" translate="yes" xml:space="preserve">
          <source>the range of elements to shuffle randomly</source>
          <target state="translated">ランダムにシャッフルする要素の範囲</target>
        </trans-unit>
        <trans-unit id="5ca6ecb4f476170a509b58fe83618426d3d1c5c3" translate="yes" xml:space="preserve">
          <source>the range of elements to sort</source>
          <target state="translated">ソートする要素の範囲</target>
        </trans-unit>
        <trans-unit id="ae1a6193867bccca52bf2e5a74db50189b6caf77" translate="yes" xml:space="preserve">
          <source>the range of elements to sum</source>
          <target state="translated">和算する要素の範囲</target>
        </trans-unit>
        <trans-unit id="eb8fec78f0d96b05dad1102c7c7abdadf4f108aa" translate="yes" xml:space="preserve">
          <source>the range of elements to transfer from &lt;code&gt;other&lt;/code&gt; to &lt;code&gt;*this&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;other&lt;/code&gt; から &lt;code&gt;*this&lt;/code&gt; に転送する要素の範囲</target>
        </trans-unit>
        <trans-unit id="d20ebbde4d96417563f52af38dc7c1e27c971c8d" translate="yes" xml:space="preserve">
          <source>the range of the elements to copy</source>
          <target state="translated">コピーする要素の範囲</target>
        </trans-unit>
        <trans-unit id="52094c432481fb0fde3878478d54e17ca51870c9" translate="yes" xml:space="preserve">
          <source>the range of the elements to examine</source>
          <target state="translated">調べる要素の範囲</target>
        </trans-unit>
        <trans-unit id="9b4ec291e20c90048aad917fb86e4ca0762f4405" translate="yes" xml:space="preserve">
          <source>the range of the elements to initialize</source>
          <target state="translated">初期化する要素の範囲</target>
        </trans-unit>
        <trans-unit id="49c2aefbfb6c621c5cefd25240bfea97e59e8eb8" translate="yes" xml:space="preserve">
          <source>the range of the elements to move</source>
          <target state="translated">移動範囲</target>
        </trans-unit>
        <trans-unit id="ac6f5413e2e2aeb3487b0e32bfa38ec4c92b8e51" translate="yes" xml:space="preserve">
          <source>the range to apply the function to</source>
          <target state="translated">関数を適用する範囲</target>
        </trans-unit>
        <trans-unit id="d595f9f727bfda1f665a267c25a1c0c17717bff2" translate="yes" xml:space="preserve">
          <source>the range to copy the elements from</source>
          <target state="translated">の要素をコピーする範囲を指定します。</target>
        </trans-unit>
        <trans-unit id="5633a75e4a2f7ae08bbd858afeb17a4fe7908dcd" translate="yes" xml:space="preserve">
          <source>the real component of &lt;code&gt;z&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;z&lt;/code&gt; の実数成分。</target>
        </trans-unit>
        <trans-unit id="f097a59b20cd616f830deec78a401529b6460fda" translate="yes" xml:space="preserve">
          <source>the real part</source>
          <target state="translated">ほんとうのところ</target>
        </trans-unit>
        <trans-unit id="05c5ba629c804d41629e6f94956a9478bea45786" translate="yes" xml:space="preserve">
          <source>the recursion depth counter (accessible with &lt;a href=&quot;recursive_directory_iterator/depth&quot;&gt;&lt;code&gt;depth()&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">再帰深度カウンター（&lt;a href=&quot;recursive_directory_iterator/depth&quot;&gt; &lt;code&gt;depth()&lt;/code&gt; で&lt;/a&gt;アクセス可能）</target>
        </trans-unit>
        <trans-unit id="268ad851e3a1f69a479e11bffef8ae4c1953bcd3" translate="yes" xml:space="preserve">
          <source>the referenced/pointed-to class in the return type of &lt;code&gt;Base::f()&lt;/code&gt; must be a unambiguous and accessible direct or indirect base class of the referenced/pointed-to class of the return type of &lt;code&gt;Derived::f()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Base::f()&lt;/code&gt; の戻り値型の参照先/参照先クラスは、 &lt;code&gt;Derived::f()&lt;/code&gt; 戻り値型の参照先/参照先クラスの明確でアクセス可能な直接または間接の基本クラスである必要があります。</target>
        </trans-unit>
        <trans-unit id="fd1d272f27d15e09f43865ab8318ab7d5974bcb5" translate="yes" xml:space="preserve">
          <source>the regex replacement format string, exact syntax depends on the value of &lt;code&gt;flags&lt;/code&gt;</source>
          <target state="translated">正規表現の置換フォーマット文字列、正確な構文は &lt;code&gt;flags&lt;/code&gt; の値によって異なります</target>
        </trans-unit>
        <trans-unit id="736f77c0e8e115154104167bf933dc4ca6542029" translate="yes" xml:space="preserve">
          <source>the regular expression</source>
          <target state="translated">正規表現</target>
        </trans-unit>
        <trans-unit id="9b3cee814169a07f2932aec10aaeabb1edff8472" translate="yes" xml:space="preserve">
          <source>the regular expression to swap with</source>
          <target state="translated">と入れ替える正規表現</target>
        </trans-unit>
        <trans-unit id="3b6bde6d244afe8b946ed620a65159116d7ff8dd" translate="yes" xml:space="preserve">
          <source>the rest of the monetary string.</source>
          <target state="translated">貨幣の残りの文字列</target>
        </trans-unit>
        <trans-unit id="f211f83e21b7d00362526dc01b1d9b5285dcad4e" translate="yes" xml:space="preserve">
          <source>the result has to be rounded to fit in the destination type</source>
          <target state="translated">結果は、出力先の型に収まるように丸められなければなりません。</target>
        </trans-unit>
        <trans-unit id="d4d9c6aa199e9862ca7fe309576c43d5f8a0f16c" translate="yes" xml:space="preserve">
          <source>the result is explicitly converted to void when R is cv void</source>
          <target state="translated">R が cv void の場合,結果は明示的に void に変換されます.</target>
        </trans-unit>
        <trans-unit id="c7bc09bee945ba483a85abd46684fb111adfa046" translate="yes" xml:space="preserve">
          <source>the result is non-zero, but becomes zero after rounding, or becomes subnormal with a loss of precision</source>
          <target state="translated">結果がゼロではないが、丸めた後にゼロになるか、精度を落として亜正規になる。</target>
        </trans-unit>
        <trans-unit id="9225a2f4966234e7b96ec9cf2144a6e71d24c078" translate="yes" xml:space="preserve">
          <source>the result of &lt;a href=&quot;decltype&quot;&gt;decltype&lt;/a&gt; applied to a type-dependent expression</source>
          <target state="translated">型依存の式に適用された&lt;a href=&quot;decltype&quot;&gt;decltype&lt;/a&gt;の結果</target>
        </trans-unit>
        <trans-unit id="6f2237fe92b495b49830747d8c6888b8f9a02059" translate="yes" xml:space="preserve">
          <source>the result of &lt;a href=&quot;typeid&quot;&gt;typeid&lt;/a&gt;;</source>
          <target state="translated">&lt;a href=&quot;typeid&quot;&gt;typeid&lt;/a&gt;の結果。</target>
        </trans-unit>
        <trans-unit id="019e38064502c746bb109b6380c1cdc46bd77caa" translate="yes" xml:space="preserve">
          <source>the result of any floating-point expression other than cast and assignment may have range and precision of a floating-point type different from the type of the expression (see &lt;code&gt;&lt;a href=&quot;../types/climits/flt_eval_method&quot;&gt;FLT_EVAL_METHOD&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="translated">キャストと代入以外の浮動小数点式の結果には、式の型とは異なる浮動小数点型の範囲と精度が含まれる場合があります（ &lt;code&gt;&lt;a href=&quot;../types/climits/flt_eval_method&quot;&gt;FLT_EVAL_METHOD&lt;/a&gt;&lt;/code&gt; を参照）。</target>
        </trans-unit>
        <trans-unit id="98e08b40ca78e69bd429c12939746cee4074f176" translate="yes" xml:space="preserve">
          <source>the result of applying the decay type conversions to &lt;code&gt;T&lt;/code&gt;</source>
          <target state="translated">減衰型変換を &lt;code&gt;T&lt;/code&gt; に適用した結果</target>
        </trans-unit>
        <trans-unit id="e2fd1ff5120de4682d076416268a61c3b4eef752" translate="yes" xml:space="preserve">
          <source>the result of the earlier floating-point operation was subnormal with a loss of precision</source>
          <target state="translated">先の浮動小数点演算の結果が精度を落とした亜正常値であった場合</target>
        </trans-unit>
        <trans-unit id="d47df55886a0baaba3be8480bf359bfd26d1df54" translate="yes" xml:space="preserve">
          <source>the result of the earlier floating-point operation was too large to be representable</source>
          <target state="translated">浮動小数点演算の結果が大きすぎて表現できなかった</target>
        </trans-unit>
        <trans-unit id="313a31644da4ce1525afa2292630731284acbccb" translate="yes" xml:space="preserve">
          <source>the result of the last operation A that modified M, which appears before B in the single total order</source>
          <target state="translated">M を修正した最後の操作 A の結果で、単一の合計順序で B の前に現れます。</target>
        </trans-unit>
        <trans-unit id="52f630b7c611ab1232572c49966607cd20a92fff" translate="yes" xml:space="preserve">
          <source>the result type of 3-way comparison that supports all 6 operators and is not substitutable</source>
          <target state="translated">すべての6つの演算子をサポートし、代用できない3元比較の結果型</target>
        </trans-unit>
        <trans-unit id="80e7304f38643b6bbb92e130c6d0114aa2864566" translate="yes" xml:space="preserve">
          <source>the result type of 3-way comparison that supports all 6 operators and is substitutable</source>
          <target state="translated">すべての6つの演算子をサポートし、代替可能な3元比較の結果型</target>
        </trans-unit>
        <trans-unit id="7526e0aa2d5cecfd7d1958189684f0109ff77454" translate="yes" xml:space="preserve">
          <source>the result type of 3-way comparison that supports all 6 operators, is not substitutable, and allows incomparable values</source>
          <target state="translated">すべての6つの演算子をサポートし、置換可能ではなく、比較可能な値を許容する3元比較の結果型です。</target>
        </trans-unit>
        <trans-unit id="8d35125f7867b31faa82bd950da54184ec5b0cb3" translate="yes" xml:space="preserve">
          <source>the result type of 3-way comparison that supports only equality/inequality and is not substitutable</source>
          <target state="translated">等価/不等式のみをサポートし、代替不可能な三元比較の結果型</target>
        </trans-unit>
        <trans-unit id="32d8e875ed863712bf0a171a40e79fb789e26a4c" translate="yes" xml:space="preserve">
          <source>the result type of 3-way comparison that supports only equality/inequality and is substitutable</source>
          <target state="translated">等価/不等式のみをサポートし、代替可能な三元比較の結果型</target>
        </trans-unit>
        <trans-unit id="890a5f4ef199ab1176818eb4d253fb452462c4cb" translate="yes" xml:space="preserve">
          <source>the return from it and runs on the same thread as &lt;code&gt;std::raise&lt;/code&gt;. Execution of the handlers for other signals is</source>
          <target state="translated">それから戻り、 &lt;code&gt;std::raise&lt;/code&gt; と同じスレッドで実行されます。他のシグナルのハンドラーの実行は</target>
        </trans-unit>
        <trans-unit id="8cafbe98380dc3e2b560a7c38f0e39afc1b0c8f5" translate="yes" xml:space="preserve">
          <source>the return object obtained earlier is returned to the caller/resumer, after implicit conversion to the return type of the coroutine, if necessary.</source>
          <target state="translated">先に取得した戻り値オブジェクトは,必要に応じてコルーチンの戻り値型に暗黙的に変換された後,呼び出し元/受信者に返されます.</target>
        </trans-unit>
        <trans-unit id="9d1a3de90d1527ee727a249fa886aefe295d7742" translate="yes" xml:space="preserve">
          <source>the return object or provider gives up its reference to its shared state; and</source>
          <target state="translated">戻り値のオブジェクトまたはプロバイダは、その共有状態への参照を放棄します。</target>
        </trans-unit>
        <trans-unit id="8cb81d62deb1346e45a9d98c57c9b6b6e7f85fe5" translate="yes" xml:space="preserve">
          <source>the return type of &lt;code&gt;Derived::f()&lt;/code&gt; must be equally or less &lt;a href=&quot;cv&quot;&gt; cv-qualified&lt;/a&gt; than the return type of &lt;code&gt;Base::f()&lt;/code&gt;.</source>
          <target state="translated">戻り型 &lt;code&gt;Derived::f()&lt;/code&gt; 等しく又はそれ以下である必要があり&lt;a href=&quot;cv&quot;&gt;、CV修飾&lt;/a&gt;の戻り型よりも &lt;code&gt;Base::f()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="475c3256e0c0b06a7aa0f4574b2f19501a2a86e6" translate="yes" xml:space="preserve">
          <source>the return type of &lt;code&gt;Fi&lt;/code&gt; is &lt;code&gt;C&lt;/code&gt; followed by the template parameters of the class template enclosed in &amp;lt;&amp;gt;</source>
          <target state="translated">&lt;code&gt;Fi&lt;/code&gt; の戻り値の型は &lt;code&gt;C&lt;/code&gt; で、&amp;lt;&amp;gt;で囲まれたクラステンプレートのテンプレートパラメータが続きます</target>
        </trans-unit>
        <trans-unit id="6e9c61b2d093ce8e3ad604642e0b61782c40a05a" translate="yes" xml:space="preserve">
          <source>the return type of &lt;code&gt;pm&lt;/code&gt; if &lt;code&gt;pm&lt;/code&gt; is a pointer to member function, not defined for pointer to member object</source>
          <target state="translated">&lt;code&gt;pm&lt;/code&gt; がメンバー関数へのポインターであり、メンバーオブジェクトへのポインターに対して定義されていない場合、 &lt;code&gt;pm&lt;/code&gt; の戻りの型</target>
        </trans-unit>
        <trans-unit id="705c1fcb1366f93bdd4dcc1716f1da62e455b2c1" translate="yes" xml:space="preserve">
          <source>the return type of closure's operator() was only deduced if lambda body contains a single return</source>
          <target state="translated">の戻り値の型は、ラムダボディに単一の戻り値が含まれている場合にのみ、クロージャの operator()の戻り値の型が推論されました。</target>
        </trans-unit>
        <trans-unit id="f8cb4dc83c41f16b3afd7a56eadd60356a82dd89" translate="yes" xml:space="preserve">
          <source>the return type of the &lt;a href=&quot;../named_req/callable&quot;&gt;Callable&lt;/a&gt; type &lt;code&gt;F&lt;/code&gt; if invoked with the arguments &lt;code&gt;ArgTypes...&lt;/code&gt;. Only defined if F can be called with the arguments &lt;code&gt;ArgTypes...&lt;/code&gt; in unevaluated context.(since C++14)</source>
          <target state="translated">引数 &lt;code&gt;ArgTypes...&lt;/code&gt; 呼び出された場合、&lt;a href=&quot;../named_req/callable&quot;&gt;呼び出し可能&lt;/a&gt;タイプ &lt;code&gt;F&lt;/code&gt; の戻りタイプ。未評価のコンテキストで引数 &lt;code&gt;ArgTypes...&lt;/code&gt; してFを呼び出せる場合にのみ定義されます。（C ++ 14以降）</target>
        </trans-unit>
        <trans-unit id="0b7a695bb9aa3af1c4af6417305e4d2cb73a3640" translate="yes" xml:space="preserve">
          <source>the return type with specifiers, as in the &lt;a href=&quot;declarations&quot;&gt;declaration grammar&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;declarations&quot;&gt;宣言文法の&lt;/a&gt;ように、指定子付きの戻りの型</target>
        </trans-unit>
        <trans-unit id="309085e2344abba52a77e554c66cca520e68fa12" translate="yes" xml:space="preserve">
          <source>the returned value depends only on the value of &lt;code&gt;k&lt;/code&gt;for the duration of the program(since C++14)</source>
          <target state="translated">戻り値は、プログラム期間中の &lt;code&gt;k&lt;/code&gt; の値のみに依存します（C ++ 14以降）</target>
        </trans-unit>
        <trans-unit id="1bad0a4e7a7ee2a9e671364c08cd46f73ebbb4bc" translate="yes" xml:space="preserve">
          <source>the right operand of the comma operator,</source>
          <target state="translated">カンマ演算子の右オペランド。</target>
        </trans-unit>
        <trans-unit id="6fc7f06dd464d80c9f5125827545e1ed0667ef8f" translate="yes" xml:space="preserve">
          <source>the right-hand &lt;code&gt;shared_ptr&lt;/code&gt; to compare</source>
          <target state="translated">比較する右側の &lt;code&gt;shared_ptr&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0c47c6fdc6176466c403472bf6037a272dee4470" translate="yes" xml:space="preserve">
          <source>the same atomic variable. Other threads can see different order of memory accesses than either or both of the synchronized threads.</source>
          <target state="translated">が同じアトミック変数を使用していることを示しています。他のスレッドは、同期したスレッドのどちらか、または両方とは異なるメモリアクセスの順序を見ることができます。</target>
        </trans-unit>
        <trans-unit id="f54ef8c767af7ffa7d879ed992a2cdb09598549e" translate="yes" xml:space="preserve">
          <source>the same directory as &lt;code&gt;old_p&lt;/code&gt; or a hardlink to it: nothing is done in this case</source>
          <target state="translated">&lt;code&gt;old_p&lt;/code&gt; またはそれへのハードリンクと同じディレクトリ：この場合は何も行われません</target>
        </trans-unit>
        <trans-unit id="01ec8c4dc713daba032ae5e9009efadbb3edd3d9" translate="yes" xml:space="preserve">
          <source>the same file as &lt;code&gt;old_p&lt;/code&gt; or a hardlink to it: nothing is done in this case</source>
          <target state="translated">&lt;code&gt;old_p&lt;/code&gt; またはそれへのハードリンクと同じファイル：この場合は何も行われません</target>
        </trans-unit>
        <trans-unit id="4d1e86fbe93e0317262575c23c3a708ed842764d" translate="yes" xml:space="preserve">
          <source>the searcher encapsulating the search algorithm and the pattern to look for</source>
          <target state="translated">探索者は、探索アルゴリズムと探索パターンをカプセル化しています。</target>
        </trans-unit>
        <trans-unit id="3e2f75862138f4c5d5f89a30befe65d5b0d0e23b" translate="yes" xml:space="preserve">
          <source>the second function template has the same template parameters as the second partial specialization and has just one function parameter whose type is a class template specialization with all the template arguments from the second partial specialization.</source>
          <target state="translated">2番目の関数テンプレートは、2番目の部分的な特殊化と同じテンプレートパラメータを持ち、2番目の部分的な特殊化からのすべてのテンプレート引数を持つクラステンプレート特殊化の型を持つ1つの関数パラメータだけを持っています。</target>
        </trans-unit>
        <trans-unit id="645c70ae8754d08645bef93f2d819df0fc438583" translate="yes" xml:space="preserve">
          <source>the second input sorted range</source>
          <target state="translated">第2入力ソート範囲</target>
        </trans-unit>
        <trans-unit id="3a91a76da1c148e861f7c53ca7be0797bb0e77df" translate="yes" xml:space="preserve">
          <source>the second or third operand of a conditional expression,</source>
          <target state="translated">条件式の2番目または3番目のオペランド。</target>
        </trans-unit>
        <trans-unit id="f1f91ff2ddec3e10271adf45adf32deb2572d1c8" translate="yes" xml:space="preserve">
          <source>the second range of elements to examine</source>
          <target state="translated">第二の検討対象となる要素の範囲</target>
        </trans-unit>
        <trans-unit id="04765bf7fe0b94e2e13e5a65486aa2d99087b8f3" translate="yes" xml:space="preserve">
          <source>the second range of elements to merge</source>
          <target state="translated">マージする要素の第二範囲</target>
        </trans-unit>
        <trans-unit id="7c00b9ae5783f29016a045454dbb74833f7c9fb4" translate="yes" xml:space="preserve">
          <source>the second range of the elements</source>
          <target state="translated">要素の第二範囲</target>
        </trans-unit>
        <trans-unit id="424d9a1f014fa472fe45f91b5248f8deb3dd5d4c" translate="yes" xml:space="preserve">
          <source>the second range of the elements to compare</source>
          <target state="translated">比較する要素の第二の範囲</target>
        </trans-unit>
        <trans-unit id="6ba96a9ae0c447ad527b9290bdb8075f86efc9f1" translate="yes" xml:space="preserve">
          <source>the second range to compare</source>
          <target state="translated">比較する第二の範囲</target>
        </trans-unit>
        <trans-unit id="4520b7d453f329ec0aed31e2d20980d7eaa462a8" translate="yes" xml:space="preserve">
          <source>the second sorted range of elements</source>
          <target state="translated">二番目にソートされた要素の範囲</target>
        </trans-unit>
        <trans-unit id="6c3c772b8c915366274423c5efee8828b8add0da" translate="yes" xml:space="preserve">
          <source>the second string to compare</source>
          <target state="translated">比較する二番目の文字列</target>
        </trans-unit>
        <trans-unit id="6697e0e96b984ccea97efa2f72fb67c7a4e4041a" translate="yes" xml:space="preserve">
          <source>the seed value</source>
          <target state="translated">種子値</target>
        </trans-unit>
        <trans-unit id="3ad8a54275ae8a037b0fe7802ef200b43e28dd5a" translate="yes" xml:space="preserve">
          <source>the sequence of characters returned by moneypunct::curr_symbol is required</source>
          <target state="translated">moneypunct::curr_symbolによって返される文字のシーケンスが必要です.</target>
        </trans-unit>
        <trans-unit id="9a490677b32a0c2f4f69ca6eee22cae4ca6af15f" translate="yes" xml:space="preserve">
          <source>the sequence of submatch indices that should be iterated over within each match, may include the special value -1 for the non-matched fragments</source>
          <target state="translated">各マッチ内で反復処理されるべきサブマッチインデックスのシーケンスで、マッチしていないフラグメントに対しては特別な値 -1 を含むことがあります。</target>
        </trans-unit>
        <trans-unit id="648ffc25f4a182d2792effc88cf7dfe83967807b" translate="yes" xml:space="preserve">
          <source>the shared state contains a deferred function, so the result will be computed only when explicitly requested</source>
          <target state="translated">には遅延関数が含まれているため、結果は明示的に要求された場合にのみ計算されます。</target>
        </trans-unit>
        <trans-unit id="7a7d0614fe54ad9f12cb43ae09cae92d2961f4cd" translate="yes" xml:space="preserve">
          <source>the shared state did not become ready before specified timeout duration has passed</source>
          <target state="translated">指定されたタイムアウト時間が経過する前に共有状態の準備ができませんでした。</target>
        </trans-unit>
        <trans-unit id="80d19c075417d7a5d3717002d8bf9b934e4a2752" translate="yes" xml:space="preserve">
          <source>the shared state is ready</source>
          <target state="translated">共有状態の準備ができました</target>
        </trans-unit>
        <trans-unit id="1556a7fa00bf56811cc76e661ddd189d30d19f42" translate="yes" xml:space="preserve">
          <source>the signal handler calls any function within the standard library, except</source>
          <target state="translated">シグナルハンドラは、標準ライブラリ内の任意の関数を呼び出します。</target>
        </trans-unit>
        <trans-unit id="a7e746f790713464d06ce05b6babf4f4bbc52027" translate="yes" xml:space="preserve">
          <source>the signal handler refers to any object with static storage duration that is not &lt;code&gt;&lt;a href=&quot;../../atomic/atomic&quot;&gt;std::atomic&lt;/a&gt;&lt;/code&gt;(since C++11) or &lt;code&gt;volatile &lt;a href=&quot;sig_atomic_t&quot;&gt;std::sig_atomic_t&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">シグナルハンドラーは、 &lt;code&gt;&lt;a href=&quot;../../atomic/atomic&quot;&gt;std::atomic&lt;/a&gt;&lt;/code&gt; （C ++ 11以降）または &lt;code&gt;volatile &lt;a href=&quot;sig_atomic_t&quot;&gt;std::sig_atomic_t&lt;/a&gt;&lt;/code&gt; ではない静的ストレージ期間のオブジェクトを参照します。</target>
        </trans-unit>
        <trans-unit id="e46612d42950748622225d2297a9bc0d880c395b" translate="yes" xml:space="preserve">
          <source>the signal handler. This must be one of the following:</source>
          <target state="translated">シグナルハンドラを使用します。これは次のいずれかでなければなりません。</target>
        </trans-unit>
        <trans-unit id="aba5ce98d14072321ec810a79353dbb206e3fb46" translate="yes" xml:space="preserve">
          <source>the signal to be sent. It can be an implementation-defined value or one of the following values:</source>
          <target state="translated">送信する信号。実装で定義された値か、以下の値のいずれかになります。</target>
        </trans-unit>
        <trans-unit id="871d7500b2222edc01c1a9b8a54792b2efd68b87" translate="yes" xml:space="preserve">
          <source>the signal to set the signal handler to. It can be an implementation-defined value or one of the following values:</source>
          <target state="translated">シグナルハンドラを設定するシグナル。これは、実装で定義された値か、以下の値のいずれかになります。</target>
        </trans-unit>
        <trans-unit id="96c9c5779031056951b184498e2e4043a3c95637" translate="yes" xml:space="preserve">
          <source>the signed integer type corresponding to &lt;code&gt;T&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; に対応する符号付き整数型</target>
        </trans-unit>
        <trans-unit id="ea9d44def09dc566743eb49a9202e33a14b14b8d" translate="yes" xml:space="preserve">
          <source>the size of a block. Must be greater than 0.</source>
          <target state="translated">ブロックのサイズを指定します。0より大きくなければなりません。</target>
        </trans-unit>
        <trans-unit id="a371ec7638a55938016df91b015b3c9eeee57726" translate="yes" xml:space="preserve">
          <source>the size of coroutine frame is known at the call site</source>
          <target state="translated">呼び出し先でコアチンフレームの大きさがわかる</target>
        </trans-unit>
        <trans-unit id="836db327cc7da845c2b357037a699eb913994530" translate="yes" xml:space="preserve">
          <source>the size of the array to construct</source>
          <target state="translated">を構築するための配列のサイズ</target>
        </trans-unit>
        <trans-unit id="430543a6738fa5474d5447bdca98e323c7a081a4" translate="yes" xml:space="preserve">
          <source>the size of the block, &lt;code&gt;P&lt;/code&gt;</source>
          <target state="translated">ブロックのサイズ、 &lt;code&gt;P&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c2aac59d39fd37fbecd741ccdcba6b55f6ca2c67" translate="yes" xml:space="preserve">
          <source>the size of the buffer in which to operate</source>
          <target state="translated">動作するバッファのサイズ</target>
        </trans-unit>
        <trans-unit id="0a43e45d35493f8a7c7c19cbc4b1395fb4188700" translate="yes" xml:space="preserve">
          <source>the size of the container</source>
          <target state="translated">壺の大きさ</target>
        </trans-unit>
        <trans-unit id="b9cc65289acd79ce9fc0633c5954dc6f81c5d888" translate="yes" xml:space="preserve">
          <source>the size of the initial buffer; cannot be greater than the number of bytes in &lt;code&gt;buffer&lt;/code&gt;</source>
          <target state="translated">初期バッファのサイズ。 &lt;code&gt;buffer&lt;/code&gt; のバイト数を超えることはできません</target>
        </trans-unit>
        <trans-unit id="712d687382f3355ae5eb908dd0f866becf3537aa" translate="yes" xml:space="preserve">
          <source>the size of the internal table, &lt;code&gt;K&lt;/code&gt;</source>
          <target state="translated">内部テーブルのサイズ &lt;code&gt;K&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e41d9b0086c15a1e9cfaad0ee678171861ecc1d6" translate="yes" xml:space="preserve">
          <source>the size of the internal table. Must be greater than 0</source>
          <target state="translated">内部テーブルのサイズを指定します。0よりも大きくなければなりません。</target>
        </trans-unit>
        <trans-unit id="da98cf8d5b8e4ec2a37952cef92108b6b1bd1b8e" translate="yes" xml:space="preserve">
          <source>the size of the storage to be aligned</source>
          <target state="translated">揃えるストレージのサイズ</target>
        </trans-unit>
        <trans-unit id="2b5da65adf2e60984aff22c7aac04e13ccf49606" translate="yes" xml:space="preserve">
          <source>the size that was passed to the matching allocation function</source>
          <target state="translated">マッチング割り当て関数に渡されたサイズ</target>
        </trans-unit>
        <trans-unit id="211f023fbca009e3d0b3bcd74e9cc8be14fbdec6" translate="yes" xml:space="preserve">
          <source>the smallest negative power of ten that is a valid normalized floating-point value</source>
          <target state="translated">正規化された浮動小数点値である10の最小負のべき乗</target>
        </trans-unit>
        <trans-unit id="3538f3f29fc7da34cd2fb988f58f86e07ce2bfd0" translate="yes" xml:space="preserve">
          <source>the smallest possible &lt;code&gt;time_point&lt;/code&gt;.</source>
          <target state="translated">可能な最小の &lt;code&gt;time_point&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1d79bf1bb0dcc23e574c108e545dc0a9ae86ee6a" translate="yes" xml:space="preserve">
          <source>the smallest valid value of wchar_t</source>
          <target state="translated">wchar_t の最小有効値</target>
        </trans-unit>
        <trans-unit id="179f2240b1087f8c0c8089660801c22d13f638fd" translate="yes" xml:space="preserve">
          <source>the sorted range of elements to examine</source>
          <target state="translated">検査する要素の並べ替え範囲</target>
        </trans-unit>
        <trans-unit id="43f25f4bd729a7198de612ebd5b479c95b8a92f7" translate="yes" xml:space="preserve">
          <source>the sorted range of elements to search for</source>
          <target state="translated">検索する要素のソート範囲</target>
        </trans-unit>
        <trans-unit id="1d1aa1486eb2375e55f71b4a9d550aef8fff0053" translate="yes" xml:space="preserve">
          <source>the source &lt;code&gt;&lt;a href=&quot;va_list&quot;&gt;va_list&lt;/a&gt;&lt;/code&gt; that will be used to initialize &lt;code&gt;dest&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;dest&lt;/code&gt; の初期化に使用されるソースの &lt;code&gt;&lt;a href=&quot;va_list&quot;&gt;va_list&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6511faee8f4e49304e69a7f8df4a1192c5a0e8f6" translate="yes" xml:space="preserve">
          <source>the specification is needed because a defaulted special member function needs to check it in order to decide its own exception specification (this takes place only when the specification of the defaulted special member function is, itself, needed).</source>
          <target state="translated">が必要なのは、デフォルトの特殊メンバ関数が自分自身の例外仕様を決定するためにそれをチェックする必要があるからです(これは、デフォルトの特殊メンバ関数の仕様自体が必要な場合にのみ行われます)。</target>
        </trans-unit>
        <trans-unit id="abcf3d6a8d5637ec9013ad37685639425addee95" translate="yes" xml:space="preserve">
          <source>the specification is needed to compare to another function declaration (e.g. on an virtual function overrider or on an explicit specialization of a function template)</source>
          <target state="translated">他の関数宣言と比較する必要がある場合(仮想関数のオーバーライダーや関数テンプレートの明示的な特殊化など)。</target>
        </trans-unit>
        <trans-unit id="7149cc96838cc58dd5fb458830a7a7077810e2ed" translate="yes" xml:space="preserve">
          <source>the specified &lt;code&gt;sleep_duration&lt;/code&gt;.</source>
          <target state="translated">指定 &lt;code&gt;sleep_duration&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c0619551da9e3175e8ab547eaa7b45199246b44e" translate="yes" xml:space="preserve">
          <source>the specified member is not a non-type where a non-type is required</source>
          <target state="translated">指定されたメンバーが非型が必要とされる非型ではない場合</target>
        </trans-unit>
        <trans-unit id="af559c549774aee32175493bfb05c24687492c17" translate="yes" xml:space="preserve">
          <source>the specified member is not a template where a template is required</source>
          <target state="translated">指定されたメンバーは、テンプレートが必要なテンプレートではありません。</target>
        </trans-unit>
        <trans-unit id="e041a6d202d35b14616aa736f11f8cea86d63661" translate="yes" xml:space="preserve">
          <source>the specified member is not a type where a type is required</source>
          <target state="translated">指定されたメンバーが型が必要な型ではない場合</target>
        </trans-unit>
        <trans-unit id="fc1a62fe7f781042c06d542cd56052376eb2d9c9" translate="yes" xml:space="preserve">
          <source>the squared magnitude of &lt;code&gt;z&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;z&lt;/code&gt; の二乗の大きさ。</target>
        </trans-unit>
        <trans-unit id="b38c857373e57e24a2f1254a1287a6351062521c" translate="yes" xml:space="preserve">
          <source>the start of the matching sequence</source>
          <target state="translated">マッチングシーケンスの開始点</target>
        </trans-unit>
        <trans-unit id="1263f88fc9fb21d887f1cba4dc12f53ccb769f7d" translate="yes" xml:space="preserve">
          <source>the start of the sequence that matched &lt;a href=&quot;http://en.cppreference.com/w/cpp/regex/ecmascript#Sub-expressions&quot;&gt;marked sub-expression&lt;/a&gt; n, or &lt;code&gt;last&lt;/code&gt; if the subexpression did not participate in the match</source>
          <target state="translated">&lt;a href=&quot;http://en.cppreference.com/w/cpp/regex/ecmascript#Sub-expressions&quot;&gt;マークされた部分式&lt;/a&gt; nに一致したシーケンスの開始、または部分式が一致に参加しなかった場合は &lt;code&gt;last&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dbe01af41f08634a95840af54c4aef774beefa27" translate="yes" xml:space="preserve">
          <source>the starting value</source>
          <target state="translated">開始値</target>
        </trans-unit>
        <trans-unit id="3d7c4ec123e66d4a8e97f56338284ebbe3dafaf0" translate="yes" xml:space="preserve">
          <source>the storage for the new object exactly overlays the storage location which the original object occupied</source>
          <target state="translated">新しいオブジェクトのストレージは、元のオブジェクトが占有していたストレージの位置を正確にオーバーレイします。</target>
        </trans-unit>
        <trans-unit id="a91bbea90bc466601b5fdd54263670f37118da0b" translate="yes" xml:space="preserve">
          <source>the storage for the new object exactly overlays the storage of the original object</source>
          <target state="translated">新しいオブジェクトのストレージは、元のオブジェクトのストレージと正確に重なっています。</target>
        </trans-unit>
        <trans-unit id="fafda314f70d8912169a5c369f3a1ce56ca7a8bf" translate="yes" xml:space="preserve">
          <source>the storage for the new object fits entirely within the array</source>
          <target state="translated">は、新しいオブジェクトのストレージが配列内に完全に収まるようにします。</target>
        </trans-unit>
        <trans-unit id="3c6f4ebce29d0edc9ebf3ddafd569ab8b87ecd76" translate="yes" xml:space="preserve">
          <source>the stored comparator</source>
          <target state="translated">格納比較器</target>
        </trans-unit>
        <trans-unit id="a9aae17daa4dfa70057455f585d842fe3dcb5fe9" translate="yes" xml:space="preserve">
          <source>the stored pointer (one returned by &lt;code&gt;get()&lt;/code&gt;);</source>
          <target state="translated">格納されたポインタ（ &lt;code&gt;get()&lt;/code&gt; によって返されるポインタ）</target>
        </trans-unit>
        <trans-unit id="337a7a59fbce332ce88ddcced36ce1c04a495b68" translate="yes" xml:space="preserve">
          <source>the stored pointer of the &lt;code&gt;shared_ptr&lt;/code&gt; it was constructed from.</source>
          <target state="translated">構築元の &lt;code&gt;shared_ptr&lt;/code&gt; の格納されたポインタ</target>
        </trans-unit>
        <trans-unit id="e93dbdca3ebedba526db5c700541da905beeb735" translate="yes" xml:space="preserve">
          <source>the stream to get data from</source>
          <target state="translated">からデータを取得するためのストリーム</target>
        </trans-unit>
        <trans-unit id="8ac13892697ab0ca98c181a329541ea7afbcc11e" translate="yes" xml:space="preserve">
          <source>the strictest alignment requirement of all &lt;code&gt;Types&lt;/code&gt;</source>
          <target state="translated">すべての &lt;code&gt;Types&lt;/code&gt; 最も厳しい配置要件</target>
        </trans-unit>
        <trans-unit id="ce16181256bf85cd760131f35c7b6095394b67b6" translate="yes" xml:space="preserve">
          <source>the string to be inserted or extracted</source>
          <target state="translated">挿入または抽出される文字列</target>
        </trans-unit>
        <trans-unit id="f13904d2297ecb6c6a33156795c87fbd1ae6946b" translate="yes" xml:space="preserve">
          <source>the string to convert</source>
          <target state="translated">変換する文字列</target>
        </trans-unit>
        <trans-unit id="1a130308d2e502bb472b678038a0739e54d978aa" translate="yes" xml:space="preserve">
          <source>the string to insert or extract</source>
          <target state="translated">挿抜文字列</target>
        </trans-unit>
        <trans-unit id="94cdd8d6cb04f8e3242e5e46494df87424ae8dd7" translate="yes" xml:space="preserve">
          <source>the string to look up in the catalog (if the catalog uses string look-up) and also the string to return in case of a failure</source>
          <target state="translated">カタログで検索する文字列 (カタログが文字列検索を使用している場合)と、失敗した場合に返す文字列を指定します。</target>
        </trans-unit>
        <trans-unit id="c963fd19828ecd8611db1d243b110f5c9edcaaa2" translate="yes" xml:space="preserve">
          <source>the string to put the data into</source>
          <target state="translated">データを入れる文字列</target>
        </trans-unit>
        <trans-unit id="8678b9100fb995c6fe777b4e6b1921e739b65180" translate="yes" xml:space="preserve">
          <source>the string used as international currency name in the current C locale</source>
          <target state="translated">現在の C ロケールで国際通貨名として使用されている文字列</target>
        </trans-unit>
        <trans-unit id="38dd6b067fdbc915f9ac81180d0ff07272343318" translate="yes" xml:space="preserve">
          <source>the strongest common comparison category (as defined above)</source>
          <target state="translated">最強共通比較項目</target>
        </trans-unit>
        <trans-unit id="250acda975d5360186797558ca9cf23f43408049" translate="yes" xml:space="preserve">
          <source>the strongest comparison category to which all of the given types can be converted</source>
          <target state="translated">与えられたすべての型を変換できる最強の比較カテゴリ</target>
        </trans-unit>
        <trans-unit id="8eb412bc6ebdfef6be7cd0ac5189767cd4d744de" translate="yes" xml:space="preserve">
          <source>the subsequent successful lock operations on the same object.</source>
          <target state="translated">同じオブジェクトに対するその後のロック操作が成功したかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="8e5f286e5f18a4432e57bc08d6d9d3cc353e1276" translate="yes" xml:space="preserve">
          <source>the successful return from the first function that is waiting on the shared state, or with the return of the last function that releases the shared state, whichever comes first.</source>
          <target state="translated">共有状態で待機している最初の関数からの戻り値、または共有状態を解放する最後の関数からの戻り値のうち、どちらか早い方の値を返します。</target>
        </trans-unit>
        <trans-unit id="74ee21a7a3d55e3fa2e60ad953b09ef90bc1220e" translate="yes" xml:space="preserve">
          <source>the symbol used for currency in the current C locale</source>
          <target state="translated">現在の C ロケールで使用されている通貨記号</target>
        </trans-unit>
        <trans-unit id="9f02a9d8e286413f4cf590625c6b02070f064a7c" translate="yes" xml:space="preserve">
          <source>the target character range to apply the regex to, given as iterators</source>
          <target state="translated">正規表現を適用する対象の文字範囲をイテレータで指定します。</target>
        </trans-unit>
        <trans-unit id="aed33b2f4958ce4ec73b53734e39f5cba568e050" translate="yes" xml:space="preserve">
          <source>the target string, given as a &lt;code&gt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::basic_string&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::basic_string&lt;/a&gt;&lt;/code&gt; として与えられるターゲット文字列</target>
        </trans-unit>
        <trans-unit id="2f0ae0b5fa38695f60ac9bf15eae845d3990085c" translate="yes" xml:space="preserve">
          <source>the target string, given as a null-terminated C-style string</source>
          <target state="translated">ヌル文字で終端するCスタイルの文字列として与えられるターゲット文字列。</target>
        </trans-unit>
        <trans-unit id="0d8caa2b3abf32a7e51782e712bfabc2bc88c1c1" translate="yes" xml:space="preserve">
          <source>the task is executed on the calling thread the first time its result is requested (lazy evaluation)</source>
          <target state="translated">タスクは、その結果が最初に要求されたときに呼び出されたスレッドで実行されます (遅延評価)。</target>
        </trans-unit>
        <trans-unit id="e28add4cb13d441d03625908eb3e57ce4533765b" translate="yes" xml:space="preserve">
          <source>the template arguments that were either deduced elsewhere or explicitly specified. If a template parameter is used only in non-deduced contexts and is not explicitly specified, template argument deduction fails.</source>
          <target state="translated">は、他の場所で推論されたか、明示的に指定されたテンプレート引数を使用します。テンプレートパラメータが非推論コンテキストでのみ使用され、明示的に指定されていない場合、テンプレート引数の推論は失敗します。</target>
        </trans-unit>
        <trans-unit id="66a225bef79538dee311cdd4b54678b8436fbe8b" translate="yes" xml:space="preserve">
          <source>the template name is a template parameter, or</source>
          <target state="translated">テンプレート名がテンプレートパラメータであるか</target>
        </trans-unit>
        <trans-unit id="bb2a0bfcbaabbf1e12bd7cae7740d747f08e2e05" translate="yes" xml:space="preserve">
          <source>the template parameter &lt;code&gt;a&lt;/code&gt;, the conditional xor-mask.</source>
          <target state="translated">テンプレートパラメータ &lt;code&gt;a&lt;/code&gt; 、条件付きxor-mask。</target>
        </trans-unit>
        <trans-unit id="9c211be6bcc572d6ef51dcb9edb6ac9935b2db2e" translate="yes" xml:space="preserve">
          <source>the template parameter &lt;code&gt;b&lt;/code&gt;, fourth component of the bit-scrambling (tempering) matrix</source>
          <target state="translated">テンプレートパラメータ &lt;code&gt;b&lt;/code&gt; 、ビットスクランブル（テンパリング）行列の4番目のコンポーネント</target>
        </trans-unit>
        <trans-unit id="dca41ac2c17d0df21471eca2c3bd68c4728d5312" translate="yes" xml:space="preserve">
          <source>the template parameter &lt;code&gt;c&lt;/code&gt;, sixth component of the bit-scrambling (tempering) matrix</source>
          <target state="translated">テンプレートパラメータ &lt;code&gt;c&lt;/code&gt; 、ビットスクランブル（テンパリング）行列の6番目のコンポーネント</target>
        </trans-unit>
        <trans-unit id="5bc065090b2dc85ec8bf3bd473aab15022db4f4e" translate="yes" xml:space="preserve">
          <source>the template parameter &lt;code&gt;d&lt;/code&gt;, second component of the bit-scrambling (tempering) matrix</source>
          <target state="translated">テンプレートパラメータ &lt;code&gt;d&lt;/code&gt; 、ビットスクランブル（テンパリング）行列の2番目のコンポーネント</target>
        </trans-unit>
        <trans-unit id="03864f29422726fce88496b91e328ec575e03359" translate="yes" xml:space="preserve">
          <source>the template parameter &lt;code&gt;f&lt;/code&gt;</source>
          <target state="translated">テンプレートパラメータ &lt;code&gt;f&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7c499b37c24fbc81c6a6bc3fd92a330455af8846" translate="yes" xml:space="preserve">
          <source>the template parameter &lt;code&gt;l&lt;/code&gt;, seventh component of the bit-scrambling (tempering) matrix</source>
          <target state="translated">テンプレートパラメータ &lt;code&gt;l&lt;/code&gt; 、ビットスクランブル（テンパリング）行列の7番目のコンポーネント</target>
        </trans-unit>
        <trans-unit id="200be1071b55c0ee08570b4dda6b3c66e63ef5a4" translate="yes" xml:space="preserve">
          <source>the template parameter &lt;code&gt;m&lt;/code&gt;</source>
          <target state="translated">テンプレートパラメータ &lt;code&gt;m&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="48c7c3086ec92b4fd79bab05374c65d97d45cf75" translate="yes" xml:space="preserve">
          <source>the template parameter &lt;code&gt;n&lt;/code&gt;. The engine state is &lt;code&gt;n&lt;/code&gt; values of &lt;code&gt;UIntType&lt;/code&gt;</source>
          <target state="translated">テンプレートパラメータ &lt;code&gt;n&lt;/code&gt; 。エンジンの状態は &lt;code&gt;UIntType&lt;/code&gt; の &lt;code&gt;n&lt;/code&gt; 個の値です</target>
        </trans-unit>
        <trans-unit id="c65b413835b4aaddeb932367bcf79c8176d361a6" translate="yes" xml:space="preserve">
          <source>the template parameter &lt;code&gt;r&lt;/code&gt;, also known as the twist value.</source>
          <target state="translated">テンプレートパラメータ &lt;code&gt;r&lt;/code&gt; はツイスト値とも呼ばれます。</target>
        </trans-unit>
        <trans-unit id="94ed1fbee7afc5fb76f9c71011988d87ce529426" translate="yes" xml:space="preserve">
          <source>the template parameter &lt;code&gt;s&lt;/code&gt;, third component of the bit-scrambling (tempering) matrix</source>
          <target state="translated">テンプレートパラメータ &lt;code&gt;s&lt;/code&gt; 、ビットスクランブル（テンパリング）行列の3番目のコンポーネント</target>
        </trans-unit>
        <trans-unit id="211d3b2259da39e04082eeb16038a598d0493e29" translate="yes" xml:space="preserve">
          <source>the template parameter &lt;code&gt;t&lt;/code&gt;, fifth component of the bit-scrambling (tempering) matrix</source>
          <target state="translated">テンプレートパラメータ &lt;code&gt;t&lt;/code&gt; 、ビットスクランブル（テンパリング）行列の5番目のコンポーネント</target>
        </trans-unit>
        <trans-unit id="c8b808e9b3a76a4fe515f3c4d38d8068aed46249" translate="yes" xml:space="preserve">
          <source>the template parameter &lt;code&gt;u&lt;/code&gt;, first component of the bit-scrambling (tempering) matrix</source>
          <target state="translated">テンプレートパラメーター &lt;code&gt;u&lt;/code&gt; 、ビットスクランブル（テンパリング）行列の最初のコンポーネント</target>
        </trans-unit>
        <trans-unit id="a13efaf059a79c834ee47a4a9e38bada0fe63116" translate="yes" xml:space="preserve">
          <source>the template parameter &lt;code&gt;w&lt;/code&gt;, determines the range of values generated by the engine.</source>
          <target state="translated">テンプレートパラメータ &lt;code&gt;w&lt;/code&gt; は、エンジンによって生成される値の範囲を決定します。</target>
        </trans-unit>
        <trans-unit id="9b22fdfa5044d4118fcde19c4f189539846aef0d" translate="yes" xml:space="preserve">
          <source>the thread to swap with</source>
          <target state="translated">入れ替え糸</target>
        </trans-unit>
        <trans-unit id="ea4b718a7e303a3efc470f5670b01db9bb805af7" translate="yes" xml:space="preserve">
          <source>the three rules above apply to every default argument used in each definition</source>
          <target state="translated">上記の3つのルールは、それぞれの定義で使用されるすべてのデフォルト引数に適用されます。</target>
        </trans-unit>
        <trans-unit id="8e56359fea560171f128fbec9f6bbb8a8693dd6e" translate="yes" xml:space="preserve">
          <source>the tied stream pointer (see &lt;a href=&quot;basic_ios/tie&quot;&gt;&lt;code&gt;tie()&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;basic_ios/tie&quot;&gt; &lt;code&gt;tie()&lt;/code&gt; &lt;/a&gt;ストリームポインタ（tie（）を参照）</target>
        </trans-unit>
        <trans-unit id="d3090db0db7406d9515ba2c72e46efa59adc0ea2" translate="yes" xml:space="preserve">
          <source>the time point for which conversion was attempted</source>
          <target state="translated">変換が試みられた時点</target>
        </trans-unit>
        <trans-unit id="42ad5b7330e45d759960f2da881b14d566f89bf8" translate="yes" xml:space="preserve">
          <source>the trivial type suitable for storage of any type from &lt;code&gt;Types&lt;/code&gt;</source>
          <target state="translated">タイプから任意のタイプのストレージに適した自明な &lt;code&gt;Types&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="703e7f6dd0163e632d1f23f740eccba27451b110" translate="yes" xml:space="preserve">
          <source>the type &lt;code&gt;&lt;a href=&quot;../types/nullptr_t&quot;&gt;std::nullptr_t&lt;/a&gt;&lt;/code&gt;(since C++11) (see also &lt;code&gt;&lt;a href=&quot;../types/is_null_pointer&quot;&gt;std::is_null_pointer&lt;/a&gt;&lt;/code&gt;);</source>
          <target state="translated">タイプ &lt;code&gt;&lt;a href=&quot;../types/nullptr_t&quot;&gt;std::nullptr_t&lt;/a&gt;&lt;/code&gt; （C ++ 11以降）（ &lt;code&gt;&lt;a href=&quot;../types/is_null_pointer&quot;&gt;std::is_null_pointer&lt;/a&gt;&lt;/code&gt; も参照）</target>
        </trans-unit>
        <trans-unit id="e8953022b4170e7ef1f5b38a04710f04d36f4c3f" translate="yes" xml:space="preserve">
          <source>the type &lt;code&gt;B&lt;/code&gt;</source>
          <target state="translated">タイプ &lt;code&gt;B&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="20526a2ff8d43e026a931b50b025e476318d4ffe" translate="yes" xml:space="preserve">
          <source>the type &lt;code&gt;T&lt;/code&gt;</source>
          <target state="translated">タイプ &lt;code&gt;T&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="31160f001f60781949ef2a22ec59d12ba5898faa" translate="yes" xml:space="preserve">
          <source>the type &lt;code&gt;T&lt;/code&gt; with the cv-qualifier</source>
          <target state="translated">タイプ &lt;code&gt;T&lt;/code&gt; とcv-qualifier</target>
        </trans-unit>
        <trans-unit id="ea457e23226509f2bda9f7f3ca841238d64aecce" translate="yes" xml:space="preserve">
          <source>the type &lt;code&gt;T&lt;/code&gt; without cv-qualifier</source>
          <target state="translated">cv-qualifierのないタイプ &lt;code&gt;T&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="08aa10e204ff75770f277033fe94a3462437e2b1" translate="yes" xml:space="preserve">
          <source>the type &lt;code&gt;bool&lt;/code&gt; can be converted to &lt;code&gt;int&lt;/code&gt; with the value &lt;code&gt;false&lt;/code&gt; becoming &lt;code&gt;​0​&lt;/code&gt; and &lt;code&gt;true&lt;/code&gt; becoming &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">型 &lt;code&gt;bool&lt;/code&gt; に変換することができます &lt;code&gt;int&lt;/code&gt; 型の値で &lt;code&gt;false&lt;/code&gt; になって &lt;code&gt;​0​&lt;/code&gt; と &lt;code&gt;true&lt;/code&gt; になってきて &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="45632bd8703a07a55a98dc296005cfc580eda5e7" translate="yes" xml:space="preserve">
          <source>the type &lt;code&gt;bool&lt;/code&gt;;</source>
          <target state="translated">タイプ &lt;code&gt;bool&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="9d5b829e8f27728864c4bbb30f9c31abe782ce33" translate="yes" xml:space="preserve">
          <source>the type &lt;code&gt;char8_t&lt;/code&gt;</source>
          <target state="translated">タイプ &lt;code&gt;char8_t&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a7b734a17ab336139e155c24b4ddaa940b5688f8" translate="yes" xml:space="preserve">
          <source>the type &lt;code&gt;void&lt;/code&gt; (possibly &lt;a href=&quot;cv&quot;&gt;cv&lt;/a&gt;-qualified);</source>
          <target state="translated">タイプ &lt;code&gt;void&lt;/code&gt; （おそらく&lt;a href=&quot;cv&quot;&gt;cv&lt;/a&gt; -qualified）;</target>
        </trans-unit>
        <trans-unit id="bb1b1eb79a163d097ef9f299119006e0d78fbe00" translate="yes" xml:space="preserve">
          <source>the type &lt;code&gt;void&lt;/code&gt; (see also &lt;code&gt;&lt;a href=&quot;../types/is_void&quot;&gt;std::is_void&lt;/a&gt;&lt;/code&gt;);</source>
          <target state="translated">タイプ &lt;code&gt;void&lt;/code&gt; （ &lt;code&gt;&lt;a href=&quot;../types/is_void&quot;&gt;std::is_void&lt;/a&gt;&lt;/code&gt; も参照）</target>
        </trans-unit>
        <trans-unit id="a5e9212470b1373e120154a82d536e3686d152e4" translate="yes" xml:space="preserve">
          <source>the type does not contain the specified member</source>
          <target state="translated">型には指定されたメンバが含まれていません。</target>
        </trans-unit>
        <trans-unit id="411969c84b7cab2dd677e86df0ee59fc1eaef7dc" translate="yes" xml:space="preserve">
          <source>the type in a &lt;a href=&quot;new&quot;&gt;new expression&lt;/a&gt; that does not parenthesize its type;</source>
          <target state="translated">型を括弧で囲まない&lt;a href=&quot;new&quot;&gt;新しい式の&lt;/a&gt;型。</target>
        </trans-unit>
        <trans-unit id="f9f5801ee866520702f3eff76a3ff7323a69331c" translate="yes" xml:space="preserve">
          <source>the type in the declaration of a &lt;a href=&quot;template_parameters#Non-type_template_parameter&quot;&gt;non-type template parameter&lt;/a&gt;;</source>
          <target state="translated">&lt;a href=&quot;template_parameters#Non-type_template_parameter&quot;&gt;非型テンプレートパラメータの&lt;/a&gt;宣言内の型。</target>
        </trans-unit>
        <trans-unit id="96fe21861284abbf04623331e95ae963361e1e0b" translate="yes" xml:space="preserve">
          <source>the type of &lt;code&gt;I&lt;/code&gt;th alternative of the variant, where &lt;code&gt;I&lt;/code&gt; must be in &lt;code&gt;[0, sizeof...(Types))&lt;/code&gt;, otherwise the program is ill-formed.</source>
          <target state="translated">バリアントの &lt;code&gt;I&lt;/code&gt; 番目の代替のタイプ。ここで、 &lt;code&gt;[0, sizeof...(Types))&lt;/code&gt; &lt;code&gt;I&lt;/code&gt; 必要があります。そうでない場合、プログラムの形式が正しくありません。</target>
        </trans-unit>
        <trans-unit id="ffe6b43e187c05a5c836ddb51d7596c080e34eab" translate="yes" xml:space="preserve">
          <source>the type of &lt;code&gt;I&lt;/code&gt;th element of the tuple, where &lt;code&gt;I&lt;/code&gt; is in &lt;code&gt;[0, sizeof...(Types))&lt;/code&gt;</source>
          <target state="translated">タイプ &lt;code&gt;I&lt;/code&gt; タプルの番目の要素、 &lt;code&gt;I&lt;/code&gt; はである &lt;code&gt;[0, sizeof...(Types))&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="326107803ad7792e145de92b86cd6db0b57d5f72" translate="yes" xml:space="preserve">
          <source>the type of &lt;code&gt;T::m&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;T::m&lt;/code&gt; タイプ</target>
        </trans-unit>
        <trans-unit id="b66ef4e71af7d307d1e49038d43a7cd88a9e48fa" translate="yes" xml:space="preserve">
          <source>the type of &lt;code&gt;X&lt;/code&gt; is the same as &lt;code&gt;T&lt;/code&gt;, ignoring cv-qualifiers at every level</source>
          <target state="translated">&lt;code&gt;X&lt;/code&gt; のタイプは &lt;code&gt;T&lt;/code&gt; と同じで、すべてのレベルのcv-qualifiersを無視します</target>
        </trans-unit>
        <trans-unit id="a4876c7e2cec5c3b5ab130e9a583c55735fcc631" translate="yes" xml:space="preserve">
          <source>the type of a &lt;a href=&quot;template_parameters#Non-type_template_parameter&quot;&gt;non-type template parameter&lt;/a&gt;</source>
          <target state="translated">タイプの&lt;a href=&quot;template_parameters#Non-type_template_parameter&quot;&gt;非型テンプレートパラメータ&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8a52c80ea83c8ba4a7c3dfbb49a2f0eafde56dc3" translate="yes" xml:space="preserve">
          <source>the type of a file</source>
          <target state="translated">ファイルの種類</target>
        </trans-unit>
        <trans-unit id="da3abd318a79093c11f242a0b5ecfd9fbc169ec6" translate="yes" xml:space="preserve">
          <source>the type of elements of the array</source>
          <target state="translated">配列の要素の型</target>
        </trans-unit>
        <trans-unit id="994fdd49a5256c208212c84888e8c7014a7d0ff8" translate="yes" xml:space="preserve">
          <source>the type of elements of the span, i.e., &lt;code&gt;T&lt;/code&gt;</source>
          <target state="translated">スパンの要素のタイプ、つまり &lt;code&gt;T&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fc6b5049d2e390ff8be82cb79cbe183da5a426ae" translate="yes" xml:space="preserve">
          <source>the type of the element of &lt;code&gt;T&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; の要素の型</target>
        </trans-unit>
        <trans-unit id="2e34aa866c0d92aa6c1baa25c29e1bd4e6bf5fb4" translate="yes" xml:space="preserve">
          <source>the type of the elements. The type must meet the &lt;a href=&quot;../named_req/numerictype&quot;&gt;NumericType&lt;/a&gt; requirements</source>
          <target state="translated">要素のタイプ。タイプは&lt;a href=&quot;../named_req/numerictype&quot;&gt;NumericType&lt;/a&gt;要件を満たしている必要があります</target>
        </trans-unit>
        <trans-unit id="1e1b177653d362c83095ada155c645170c8963ad" translate="yes" xml:space="preserve">
          <source>the type of the function called by &lt;code&gt;&lt;a href=&quot;../error/exception/unexpected&quot;&gt;std::unexpected&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../error/exception/unexpected&quot;&gt;std::unexpected&lt;/a&gt;&lt;/code&gt; によって呼び出される関数のタイプ</target>
        </trans-unit>
        <trans-unit id="559f285cf0d63e26489b8d2451f74c48ffed91f6" translate="yes" xml:space="preserve">
          <source>the type of the function called by &lt;code&gt;&lt;a href=&quot;../error/terminate&quot;&gt;std::terminate&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../error/terminate&quot;&gt;std::terminate&lt;/a&gt;&lt;/code&gt; によって呼び出される関数のタイプ</target>
        </trans-unit>
        <trans-unit id="8d70d3c7a137a12e5e99871ef5123da4690d939c" translate="yes" xml:space="preserve">
          <source>the type of the function called by &lt;code&gt;&lt;a href=&quot;error/exception/unexpected&quot;&gt;std::unexpected&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;error/exception/unexpected&quot;&gt;std::unexpected&lt;/a&gt;&lt;/code&gt; によって呼び出される関数のタイプ</target>
        </trans-unit>
        <trans-unit id="d3d6a18a06a84cae75355662ac1c73878c3a65fd" translate="yes" xml:space="preserve">
          <source>the type of the function called by &lt;code&gt;&lt;a href=&quot;error/terminate&quot;&gt;std::terminate&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;error/terminate&quot;&gt;std::terminate&lt;/a&gt;&lt;/code&gt; によって呼び出される関数のタイプ</target>
        </trans-unit>
        <trans-unit id="bf3771dc43f7ba8d3361f57096f1f461f45c940f" translate="yes" xml:space="preserve">
          <source>the type of the function called by &lt;code&gt;&lt;a href=&quot;terminate&quot;&gt;std::terminate&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;terminate&quot;&gt;std::terminate&lt;/a&gt;&lt;/code&gt; によって呼び出される関数のタイプ</target>
        </trans-unit>
        <trans-unit id="ccac22470063fe75732ec2d81e9851e861b6d3d9" translate="yes" xml:space="preserve">
          <source>the type of the function called by &lt;code&gt;&lt;a href=&quot;unexpected&quot;&gt;std::unexpected&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unexpected&quot;&gt;std::unexpected&lt;/a&gt;&lt;/code&gt; によって呼び出される関数のタイプ</target>
        </trans-unit>
        <trans-unit id="da7555aaf808ea2bc00b24e998aa21a4d6b003cb" translate="yes" xml:space="preserve">
          <source>the type of the function called by &lt;code&gt;std::terminate&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;std::terminate&lt;/code&gt; によって呼び出される関数のタイプ</target>
        </trans-unit>
        <trans-unit id="74d720ee56d96edbfc852437b6b5b645d0fcde46" translate="yes" xml:space="preserve">
          <source>the type of the function called by &lt;code&gt;std::unexpected&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;std::unexpected&lt;/code&gt; によって呼び出される関数のタイプ</target>
        </trans-unit>
        <trans-unit id="e1b7162910b74017e12f4b54320839d372dc4c49" translate="yes" xml:space="preserve">
          <source>the type of the generated random numbers. The type must be unsigned integral type.</source>
          <target state="translated">生成される乱数の型を指定します。型は符号なし積分型でなければなりません。</target>
        </trans-unit>
        <trans-unit id="47ec4c35efb9f26fbd75e30d7010cf112cd34c39" translate="yes" xml:space="preserve">
          <source>the type of the mutex to lock. The type must meet the &lt;a href=&quot;../named_req/basiclockable&quot;&gt;BasicLockable&lt;/a&gt; requirements</source>
          <target state="translated">ロックするミューテックスのタイプ。タイプは&lt;a href=&quot;../named_req/basiclockable&quot;&gt;BasicLockable&lt;/a&gt;要件を満たしている必要があります</target>
        </trans-unit>
        <trans-unit id="bbe6689f5dc21ed0258d7d14ea5c8253920339a8" translate="yes" xml:space="preserve">
          <source>the type of the next parameter in &lt;code&gt;ap&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ap&lt;/code&gt; の次のパラメーターのタイプ</target>
        </trans-unit>
        <trans-unit id="06ffccfae410639635823718509130f556050dec" translate="yes" xml:space="preserve">
          <source>the type of the null pointer literal &lt;a href=&quot;../language/nullptr&quot;&gt;&lt;code&gt;nullptr&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">nullポインタリテラル&lt;a href=&quot;../language/nullptr&quot;&gt; &lt;code&gt;nullptr&lt;/code&gt; の型&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8efa7010963f32a9378f8542f0d4aab9b3ae0d1f" translate="yes" xml:space="preserve">
          <source>the type of the null pointer literal &lt;a href=&quot;language/nullptr&quot;&gt;&lt;code&gt;nullptr&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">nullポインタリテラル&lt;a href=&quot;language/nullptr&quot;&gt; &lt;code&gt;nullptr&lt;/code&gt; の型&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8aa24bf2c90d98ec7d4ca5531ebcc2ace408eb79" translate="yes" xml:space="preserve">
          <source>the type of the null pointer literal &lt;strong&gt;&lt;code&gt;nullptr&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">nullポインタリテラル&lt;strong&gt; &lt;code&gt;nullptr&lt;/code&gt; の型&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="64e9ee097abe89d0bb2512ac95c82e202b19fdc7" translate="yes" xml:space="preserve">
          <source>the type of the original object is not const-qualified</source>
          <target state="translated">元のオブジェクトの型が const-qualified ではありません。</target>
        </trans-unit>
        <trans-unit id="b036eff769e21e83112fbd3386efe8749ba89b5c" translate="yes" xml:space="preserve">
          <source>the type of the parameter set, see &lt;a href=&quot;../../named_req/randomnumberdistribution&quot;&gt;RandomNumberDistribution&lt;/a&gt;.</source>
          <target state="translated">パラメータセットのタイプ&lt;a href=&quot;../../named_req/randomnumberdistribution&quot;&gt;。RandomNumberDistributionを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="a1fe113f21e9714b747166f23e72f4df3346d456" translate="yes" xml:space="preserve">
          <source>the type of the shared mutex to lock. The type must meet the &lt;a href=&quot;../named_req/sharedmutex&quot;&gt;SharedMutex&lt;/a&gt; requirements</source>
          <target state="translated">ロックする共有ミューテックスのタイプ。タイプは&lt;a href=&quot;../named_req/sharedmutex&quot;&gt;SharedMutex&lt;/a&gt;要件を満たしている必要があります</target>
        </trans-unit>
        <trans-unit id="51008cdfcee303c009ed51290ad78512e6080c05" translate="yes" xml:space="preserve">
          <source>the type of the value contained in &lt;code&gt;optional&lt;/code&gt; object</source>
          <target state="translated">&lt;code&gt;optional&lt;/code&gt; オブジェクトに含まれる値のタイプ</target>
        </trans-unit>
        <trans-unit id="b6d31fda43fd51d975c1e67a9c2bd40f9791d2b8" translate="yes" xml:space="preserve">
          <source>the type of the value to manage initialization state for. The type must be a object type and model &lt;a href=&quot;../concepts/copyconstructible&quot;&gt;&lt;code&gt;CopyConstructible&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">初期化状態を管理する値のタイプ。タイプはオブジェクトタイプであり、モデル&lt;a href=&quot;../concepts/copyconstructible&quot;&gt; &lt;code&gt;CopyConstructible&lt;/code&gt; である&lt;/a&gt;必要があります</target>
        </trans-unit>
        <trans-unit id="8fa0560dc8c9145d3e5b326711c796eba40013db" translate="yes" xml:space="preserve">
          <source>the type of the value to manage initialization state for. The type must meet the requirements of &lt;a href=&quot;../named_req/destructible&quot;&gt;Destructible&lt;/a&gt;</source>
          <target state="translated">初期化状態を管理する値のタイプ。タイプは&lt;a href=&quot;../named_req/destructible&quot;&gt;Destructible&lt;/a&gt;の要件を満たしている必要があります</target>
        </trans-unit>
        <trans-unit id="2146cc1ef7f434466860ec95aa3baeeb583ab716" translate="yes" xml:space="preserve">
          <source>the type of the values that can be obtained by dereferencing the iterator. This type should be &lt;code&gt;void&lt;/code&gt; for output iterators.</source>
          <target state="translated">イテレータを逆参照することで取得できる値の型。このタイプは、出力反復子では &lt;code&gt;void&lt;/code&gt; である必要があります。</target>
        </trans-unit>
        <trans-unit id="39f94f4cae34cead2631a60e6d7bc2a98da5fb35" translate="yes" xml:space="preserve">
          <source>the type of the wrapped engine</source>
          <target state="translated">ラップされたエンジンのタイプ</target>
        </trans-unit>
        <trans-unit id="6240e7ad320310b8a5c49b3a3b9300618b0d8c8b" translate="yes" xml:space="preserve">
          <source>the type pointed to by &lt;code&gt;T&lt;/code&gt; or &lt;code&gt;T&lt;/code&gt; if it's not a pointer</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; または &lt;code&gt;T&lt;/code&gt; が指す型でない場合はTが指す型</target>
        </trans-unit>
        <trans-unit id="5d6d785cd83945011b7c9572a483251310697f36" translate="yes" xml:space="preserve">
          <source>the type referred by &lt;code&gt;T&lt;/code&gt; or &lt;code&gt;T&lt;/code&gt; if it is not a reference</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; または &lt;code&gt;T&lt;/code&gt; が参照でない場合はTによって参照される型</target>
        </trans-unit>
        <trans-unit id="942dd82efddec48637cc0c94461ea41ab0f0ec5a" translate="yes" xml:space="preserve">
          <source>the type referred by &lt;code&gt;T&lt;/code&gt; or &lt;code&gt;T&lt;/code&gt; itself if it is not a reference, with top-level cv-qualifiers removed</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; または &lt;code&gt;T&lt;/code&gt; 自体が参照でない場合はT自体が参照する型。トップレベルのcv修飾子は削除されています。</target>
        </trans-unit>
        <trans-unit id="0cd829a185e59b97becab806bf3c9e1114e1d7f7" translate="yes" xml:space="preserve">
          <source>the type representing the shift state</source>
          <target state="translated">シフト状態を表す型</target>
        </trans-unit>
        <trans-unit id="595125d79675c0825033e588ed8c2f771e25af34" translate="yes" xml:space="preserve">
          <source>the type-id in an &lt;a href=&quot;type_alias&quot;&gt;alias declaration&lt;/a&gt;;</source>
          <target state="translated">&lt;a href=&quot;type_alias&quot;&gt;エイリアス宣言&lt;/a&gt;のtype-id ;</target>
        </trans-unit>
        <trans-unit id="18a314a2a06ef392140bd11a8cb35af5fc91f11b" translate="yes" xml:space="preserve">
          <source>the type-id of a &lt;a href=&quot;static_cast&quot;&gt;&lt;code&gt;static_cast&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;dynamic_cast&quot;&gt;&lt;code&gt;dynamic_cast&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;const_cast&quot;&gt;&lt;code&gt;const_cast&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;reinterpret_cast&quot;&gt;&lt;code&gt;reinterpret_cast&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">タイプID &lt;a href=&quot;static_cast&quot;&gt; &lt;code&gt;static_cast&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;dynamic_cast&quot;&gt; &lt;code&gt;dynamic_cast&lt;/code&gt; を&lt;/a&gt;、&lt;a href=&quot;const_cast&quot;&gt; &lt;code&gt;const_cast&lt;/code&gt; を&lt;/a&gt;、または&lt;a href=&quot;reinterpret_cast&quot;&gt; &lt;code&gt;reinterpret_cast&lt;/code&gt; は&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c4b86c5cf23787a0faefd34b0e7a645e0511c2bb" translate="yes" xml:space="preserve">
          <source>the types of the alternatives supported by the &lt;code&gt;variant&lt;/code&gt; object</source>
          <target state="translated">&lt;code&gt;variant&lt;/code&gt; オブジェクトがサポートする代替のタイプ</target>
        </trans-unit>
        <trans-unit id="3f54986dae61bf20db69af681cdfcdf85eca9bf3" translate="yes" xml:space="preserve">
          <source>the types of the elements that the pair stores.</source>
          <target state="translated">ペアが格納する要素の種類を指定します。</target>
        </trans-unit>
        <trans-unit id="05bbac986e4d83603b73b296241601062c54f090" translate="yes" xml:space="preserve">
          <source>the types of the elements that the tuple stores. Empty list is supported.</source>
          <target state="translated">タプルが格納する要素の型を指定します。空のリストをサポートしています。</target>
        </trans-unit>
        <trans-unit id="bd4f82e49330237fd33813f48a901f5329020ce0" translate="yes" xml:space="preserve">
          <source>the types of the mutexes to lock. The types must meet the &lt;a href=&quot;../named_req/lockable&quot;&gt;Lockable&lt;/a&gt; requirements unless &lt;code&gt;sizeof...(MutexTypes)==1&lt;/code&gt;, in which case the only type must meet &lt;a href=&quot;../named_req/basiclockable&quot;&gt;BasicLockable&lt;/a&gt;</source>
          <target state="translated">ロックするミューテックスのタイプ。種類は満たさなければならない&lt;a href=&quot;../named_req/lockable&quot;&gt;ロック可能な&lt;/a&gt;場合を除き要件を &lt;code&gt;sizeof...(MutexTypes)==1&lt;/code&gt; 、その場合にのみタイプが満たさなければならない&lt;a href=&quot;../named_req/basiclockable&quot;&gt;BasicLockableを&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a9ee2e31f5ec399866fad5a31f34ae174f75a939" translate="yes" xml:space="preserve">
          <source>the types that may be stored in this variant. All types must be (possibly cv-qualified) non-array object types.</source>
          <target state="translated">このバリアントに格納される可能性のある型を指定します。すべての型は,(おそらく cv-qualified された)非配列オブジェクト型でなければなりません.</target>
        </trans-unit>
        <trans-unit id="8ffbeb1713bb3d9726e72fe17b37732409267565" translate="yes" xml:space="preserve">
          <source>the underlying container</source>
          <target state="translated">下位コンテナ</target>
        </trans-unit>
        <trans-unit id="b13c9cd00e63210389ceb45ec30aa5ab1613d519" translate="yes" xml:space="preserve">
          <source>the underlying type of &lt;code&gt;T&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; の基礎となる型</target>
        </trans-unit>
        <trans-unit id="cff594ede85e62ff452ffda7534ca6f522a447ee" translate="yes" xml:space="preserve">
          <source>the underlying view.</source>
          <target state="translated">の根底にある見解です。</target>
        </trans-unit>
        <trans-unit id="64aa012befa0e94e4d6ec1ee3e72fd770ae258c9" translate="yes" xml:space="preserve">
          <source>the unsigned integer type corresponding to &lt;code&gt;T&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; に対応する符号なし整数型</target>
        </trans-unit>
        <trans-unit id="84f5b7479200e3d980d924b81b76449f846df23d" translate="yes" xml:space="preserve">
          <source>the upper bound of the interval sequence</source>
          <target state="translated">区間列の上界</target>
        </trans-unit>
        <trans-unit id="bc914723462457a2c255e7d792dc93a4803b2177" translate="yes" xml:space="preserve">
          <source>the upstream memory resource to use</source>
          <target state="translated">上流のメモリリソースを使用するための</target>
        </trans-unit>
        <trans-unit id="1f2f723075f6a24a01abd5ace7e2f503c0347134" translate="yes" xml:space="preserve">
          <source>the upstream memory resource to use; must point to a valid memory resource</source>
          <target state="translated">使用する上流のメモリリソースを指定します。</target>
        </trans-unit>
        <trans-unit id="fdcea37b7d8db12ab02a7dfdf059509bfffcecad" translate="yes" xml:space="preserve">
          <source>the validity of iterators obtained from the object denoted by &lt;code&gt;E&lt;/code&gt; is not tied to the lifetime of that object.</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; で示されるオブジェクトから取得された反復子の有効性は、そのオブジェクトの存続期間とは関係ありません。</target>
        </trans-unit>
        <trans-unit id="3a8377e104b6c2ded3be0b47a722f88d8a173ee6" translate="yes" xml:space="preserve">
          <source>the value &lt;code&gt;10&lt;/code&gt; sets &lt;code&gt;&lt;a href=&quot;../ios_base/fmtflags&quot;&gt;std::ios_base::dec&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">値 &lt;code&gt;10&lt;/code&gt; は &lt;code&gt;&lt;a href=&quot;../ios_base/fmtflags&quot;&gt;std::ios_base::dec&lt;/a&gt;&lt;/code&gt; 設定します。</target>
        </trans-unit>
        <trans-unit id="3eeb5c5b484dc48e2cfa1d16071ea11f631a2e8e" translate="yes" xml:space="preserve">
          <source>the value &lt;code&gt;16&lt;/code&gt; sets &lt;code&gt;basefield&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;../ios_base/fmtflags&quot;&gt;std::ios_base::hex&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">値 &lt;code&gt;16&lt;/code&gt; は、 &lt;code&gt;basefield&lt;/code&gt; を &lt;code&gt;&lt;a href=&quot;../ios_base/fmtflags&quot;&gt;std::ios_base::hex&lt;/a&gt;&lt;/code&gt; 設定します</target>
        </trans-unit>
        <trans-unit id="8f843bfb965f5fd4cb51fd9a8fea0126ffb0f6f0" translate="yes" xml:space="preserve">
          <source>the value &lt;code&gt;8&lt;/code&gt; sets &lt;code&gt;&lt;a href=&quot;../ios_base/fmtflags&quot;&gt;std::ios_base::oct&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">値 &lt;code&gt;8&lt;/code&gt; は &lt;code&gt;&lt;a href=&quot;../ios_base/fmtflags&quot;&gt;std::ios_base::oct&lt;/a&gt;&lt;/code&gt; 設定します</target>
        </trans-unit>
        <trans-unit id="4d006e2e889c6aa3fda1035e3fab0538f805d3cb" translate="yes" xml:space="preserve">
          <source>the value &lt;code&gt;false&lt;/code&gt; resumes the current coroutine.</source>
          <target state="translated">値 &lt;code&gt;false&lt;/code&gt; は、現在のコルーチンを再開します。</target>
        </trans-unit>
        <trans-unit id="5eb05e77052c4bb4676f429f1ded772732903528" translate="yes" xml:space="preserve">
          <source>the value &lt;code&gt;true&lt;/code&gt; returns control to the caller/resumer of the current coroutine</source>
          <target state="translated">値 &lt;code&gt;true&lt;/code&gt; は、現在のコルーチンの呼び出し元/再開者に制御を返します</target>
        </trans-unit>
        <trans-unit id="487b5db9b9a1b05373e81a0ea07c85ae55b12539" translate="yes" xml:space="preserve">
          <source>the value is smaller than the number of array elements provided in &lt;a href=&quot;aggregate_initialization&quot;&gt;the brace-enclosed initializer&lt;/a&gt; (including the terminating &lt;code&gt;'\0'&lt;/code&gt; on a &lt;a href=&quot;string_literal&quot;&gt;string literal&lt;/a&gt;).</source>
          <target state="translated">値内に設けられた配列要素の数よりも小さい&lt;a href=&quot;aggregate_initialization&quot;&gt;括弧で囲まれた初期化子&lt;/a&gt;（終端を含む &lt;code&gt;'\0'&lt;/code&gt; で&lt;a href=&quot;string_literal&quot;&gt;文字列リテラル&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="b1078374af57e307e468e60380a8bb92947070f2" translate="yes" xml:space="preserve">
          <source>the value of &lt;code&gt;mask&lt;/code&gt; identifying alphabetic character classification</source>
          <target state="translated">アルファベット文字の分類を識別する &lt;code&gt;mask&lt;/code&gt; の値</target>
        </trans-unit>
        <trans-unit id="0007ae0a3b354839a886bf67a335fd784dde0495" translate="yes" xml:space="preserve">
          <source>the value of &lt;code&gt;mask&lt;/code&gt; identifying blank character classification</source>
          <target state="translated">空白文字分類を識別する &lt;code&gt;mask&lt;/code&gt; の値</target>
        </trans-unit>
        <trans-unit id="41a4a04759a021c53109f832767bc182d8de7bfe" translate="yes" xml:space="preserve">
          <source>the value of &lt;code&gt;mask&lt;/code&gt; identifying control character classification</source>
          <target state="translated">制御文字分類を識別する &lt;code&gt;mask&lt;/code&gt; の値</target>
        </trans-unit>
        <trans-unit id="86f8c0c74a02434551425b39d4f88b33f80822b5" translate="yes" xml:space="preserve">
          <source>the value of &lt;code&gt;mask&lt;/code&gt; identifying digit character classification</source>
          <target state="translated">数字の文字分類を識別する &lt;code&gt;mask&lt;/code&gt; の値</target>
        </trans-unit>
        <trans-unit id="642cbd9b4171b2dad21162789b3e5522868176c1" translate="yes" xml:space="preserve">
          <source>the value of &lt;code&gt;mask&lt;/code&gt; identifying hexadecimal digit character classification</source>
          <target state="translated">16進数の文字分類を識別する &lt;code&gt;mask&lt;/code&gt; の値</target>
        </trans-unit>
        <trans-unit id="6a42c8b5c27a624fcc0048895a44b102454f4ac4" translate="yes" xml:space="preserve">
          <source>the value of &lt;code&gt;mask&lt;/code&gt; identifying lowercase character classification</source>
          <target state="translated">小文字の分類を識別する &lt;code&gt;mask&lt;/code&gt; の値</target>
        </trans-unit>
        <trans-unit id="94e39cfac34366dd68466e25ae1293be085593e2" translate="yes" xml:space="preserve">
          <source>the value of &lt;code&gt;mask&lt;/code&gt; identifying printable character classification</source>
          <target state="translated">印刷可能な文字分類を識別する &lt;code&gt;mask&lt;/code&gt; の値</target>
        </trans-unit>
        <trans-unit id="3303ba18d287bd5c68d47d92f64ce39c8f710604" translate="yes" xml:space="preserve">
          <source>the value of &lt;code&gt;mask&lt;/code&gt; identifying punctuation character classification</source>
          <target state="translated">句読文字の分類を識別する &lt;code&gt;mask&lt;/code&gt; の値</target>
        </trans-unit>
        <trans-unit id="d5cf9d59729baca268232c888a839a023f2cf730" translate="yes" xml:space="preserve">
          <source>the value of &lt;code&gt;mask&lt;/code&gt; identifying uppercase character classification</source>
          <target state="translated">大文字の分類を識別する &lt;code&gt;mask&lt;/code&gt; の値</target>
        </trans-unit>
        <trans-unit id="29e977814d39ad0634c137e69d1ff8d5dd0034b3" translate="yes" xml:space="preserve">
          <source>the value of &lt;code&gt;mask&lt;/code&gt; identifying whitespace character classification</source>
          <target state="translated">空白文字分類を識別する &lt;code&gt;mask&lt;/code&gt; の値</target>
        </trans-unit>
        <trans-unit id="9c3997783293f5619d3ab41319a495676b62cc82" translate="yes" xml:space="preserve">
          <source>the value of elements to remove</source>
          <target state="translated">削除する要素の値</target>
        </trans-unit>
        <trans-unit id="22acbe534fe31cd4db60c01f40d6a8027451a214" translate="yes" xml:space="preserve">
          <source>the value of elements to replace</source>
          <target state="translated">置換する要素の値</target>
        </trans-unit>
        <trans-unit id="fa4e06140ada3faa27e31f9ae8eb825292a74635" translate="yes" xml:space="preserve">
          <source>the value of the element to append</source>
          <target state="translated">追加する要素の値</target>
        </trans-unit>
        <trans-unit id="2e08005a66b7fe15c1eacc126c0cbd536dd4b321" translate="yes" xml:space="preserve">
          <source>the value of the element to prepend</source>
          <target state="translated">前置する要素の値</target>
        </trans-unit>
        <trans-unit id="37afe80b82c24477d9e2d416fd0fe1d0ffed9d7b" translate="yes" xml:space="preserve">
          <source>the value of the element to push</source>
          <target state="translated">プッシュする要素の値</target>
        </trans-unit>
        <trans-unit id="3bd0f086766c468833ccc7cfc4cdc13251817265" translate="yes" xml:space="preserve">
          <source>the value of the elements not to copy</source>
          <target state="translated">コピーしない要素の値</target>
        </trans-unit>
        <trans-unit id="6828ac706c5b35deaafcb7ee81cd71c79cdcd745" translate="yes" xml:space="preserve">
          <source>the value of the elements to search for</source>
          <target state="translated">探索する要素の値</target>
        </trans-unit>
        <trans-unit id="21a513aaf364af2b75f31e7cdd2cc3d9bbb14095" translate="yes" xml:space="preserve">
          <source>the value of the expression is larger than some implementation-defined limit;</source>
          <target state="translated">式の値が実装で定義された制限値よりも大きい場合。</target>
        </trans-unit>
        <trans-unit id="d6e966ba32bc3d95a34ca9af3dbd1ffc6fc7ab2c" translate="yes" xml:space="preserve">
          <source>the value of the imaginary number</source>
          <target state="translated">虚数の値</target>
        </trans-unit>
        <trans-unit id="32ce75ce7fcd39e75dcc37dc0d85a7aa9c15214b" translate="yes" xml:space="preserve">
          <source>the value of the key to examine</source>
          <target state="translated">調べるキーの値</target>
        </trans-unit>
        <trans-unit id="1d36106f60abb6e6c9be471ffd15e067b8e74a4e" translate="yes" xml:space="preserve">
          <source>the value stored in the object is a compile-time constant and certain other conditions are satisfied (see &lt;a href=&quot;definition#ODR-use&quot;&gt;ODR-use&lt;/a&gt;)</source>
          <target state="translated">オブジェクトに格納されている値はコンパイル時の定数であり、その他の特定の条件が満たされている（&lt;a href=&quot;definition#ODR-use&quot;&gt;ODRの使用を&lt;/a&gt;参照）</target>
        </trans-unit>
        <trans-unit id="0a0835301ee33304c6f66f9ecd0048a48b9197d5" translate="yes" xml:space="preserve">
          <source>the value to add to the value stored in the atomic object</source>
          <target state="translated">原子オブジェクトに格納されている値に追加する値</target>
        </trans-unit>
        <trans-unit id="10f918ccd5a5bc8b382c487835091860439fb4b4" translate="yes" xml:space="preserve">
          <source>the value to assign to &lt;code&gt;obj&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;obj&lt;/code&gt; に割り当てる値</target>
        </trans-unit>
        <trans-unit id="6587891ecdb39d88cbffc22fd5bca948f324104c" translate="yes" xml:space="preserve">
          <source>the value to assign to the elements</source>
          <target state="translated">要素に割り当てる値</target>
        </trans-unit>
        <trans-unit id="929979705572ed103a6d09ee63456538569678e8" translate="yes" xml:space="preserve">
          <source>the value to be assigned</source>
          <target state="translated">わりあて値</target>
        </trans-unit>
        <trans-unit id="9d6d483d3fce1da78159df9377059e626da548a3" translate="yes" xml:space="preserve">
          <source>the value to bitwise AND to the value stored in the atomic object</source>
          <target state="translated">に格納されている値にビット単位でANDする値を指定します。</target>
        </trans-unit>
        <trans-unit id="b58741382ce78cf992742a9d28cbedab94012ea3" translate="yes" xml:space="preserve">
          <source>the value to bitwise OR to the value stored in the atomic object</source>
          <target state="translated">に格納されている値をビット単位でORします。</target>
        </trans-unit>
        <trans-unit id="831e1fb2d2a8f76e3ff507790cc64c11dcb0a7d3" translate="yes" xml:space="preserve">
          <source>the value to bitwise XOR to the value stored in the atomic object</source>
          <target state="translated">アトミックオブジェクトに格納されている値をビット単位でXORします。</target>
        </trans-unit>
        <trans-unit id="4bc2d41581d53885864c6335275b234c3a3eab7d" translate="yes" xml:space="preserve">
          <source>the value to clamp</source>
          <target state="translated">留め金値</target>
        </trans-unit>
        <trans-unit id="6f4bfb51b249e7af5290c610a9aefcb5fd80ed4c" translate="yes" xml:space="preserve">
          <source>the value to construct optional object with</source>
          <target state="translated">でオプションのオブジェクトを構築するための値</target>
        </trans-unit>
        <trans-unit id="fc81387735e07f2bbb831aa159dcefa90b30a6f0" translate="yes" xml:space="preserve">
          <source>the value to construct the elements with</source>
          <target state="translated">で要素を構築するための値</target>
        </trans-unit>
        <trans-unit id="c7b26c526682595b8021126e9886e4090a4b4a71" translate="yes" xml:space="preserve">
          <source>the value to convert to its string representation</source>
          <target state="translated">文字列表現に変換する値</target>
        </trans-unit>
        <trans-unit id="511de5e8b84029a7d41799d25c7b8aca5d398aa8" translate="yes" xml:space="preserve">
          <source>the value to copy or move from</source>
          <target state="translated">からコピーまたは移動する値</target>
        </trans-unit>
        <trans-unit id="55fbe74b5ac6cab37c015101fca512ef7b746aeb" translate="yes" xml:space="preserve">
          <source>the value to initialize atomic object with</source>
          <target state="translated">でアトミックオブジェクトを初期化する値</target>
        </trans-unit>
        <trans-unit id="bfba618c9860821fef4785448ddc4b0229aecfbc" translate="yes" xml:space="preserve">
          <source>the value to initialize each element with</source>
          <target state="translated">で各要素を初期化する値</target>
        </trans-unit>
        <trans-unit id="d36d6184935ac75ef101b75a438e51c6f79cef64" translate="yes" xml:space="preserve">
          <source>the value to initialize elements of the container with</source>
          <target state="translated">でコンテナの要素を初期化する値。</target>
        </trans-unit>
        <trans-unit id="c64eed28dd245ea3c7997678a2811ade902073a4" translate="yes" xml:space="preserve">
          <source>the value to initialize the elements with</source>
          <target state="translated">で要素を初期化する値</target>
        </trans-unit>
        <trans-unit id="a2769dd7adcb7583c12d16b38814fd271864e733" translate="yes" xml:space="preserve">
          <source>the value to initialize the new elements with</source>
          <target state="translated">で新しい要素を初期化するための値</target>
        </trans-unit>
        <trans-unit id="475de19fce18620a77d8bdeecb14051fa7328553" translate="yes" xml:space="preserve">
          <source>the value to insert</source>
          <target state="translated">挿入値</target>
        </trans-unit>
        <trans-unit id="2d8d74b8db18ae15d4479ac20b0b494540e4e1a6" translate="yes" xml:space="preserve">
          <source>the value to insert or assign</source>
          <target state="translated">挿入または代入する値</target>
        </trans-unit>
        <trans-unit id="67732e4fe4709c2be02a92cc1c9761decf18bfe9" translate="yes" xml:space="preserve">
          <source>the value to return from &lt;code&gt;&lt;a href=&quot;setjmp&quot;&gt;setjmp&lt;/a&gt;&lt;/code&gt;. If it is equal to &lt;code&gt;​0​&lt;/code&gt;, &lt;code&gt;1&lt;/code&gt; is used instead</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;setjmp&quot;&gt;setjmp&lt;/a&gt;&lt;/code&gt; から返す値。それに等しい場合 &lt;code&gt;​0​&lt;/code&gt; 、 &lt;code&gt;1&lt;/code&gt; が代わりに使用され</target>
        </trans-unit>
        <trans-unit id="014504900419f6aa94ceab7a3b1cfff8ea9e95e5" translate="yes" xml:space="preserve">
          <source>the value to search for</source>
          <target state="translated">けんさくち</target>
        </trans-unit>
        <trans-unit id="f2bd1ec8e5bb053c29fc339be55f0f8b904156a8" translate="yes" xml:space="preserve">
          <source>the value to set the bit to</source>
          <target state="translated">ビットに設定する値</target>
        </trans-unit>
        <trans-unit id="3f98fa9ead4fa6fd97b4795083136edfd6d6b20a" translate="yes" xml:space="preserve">
          <source>the value to set the imaginary part to</source>
          <target state="translated">虚数部を設定する値</target>
        </trans-unit>
        <trans-unit id="8402a122f469f19da108301737a0a564402e315b" translate="yes" xml:space="preserve">
          <source>the value to set the real part to</source>
          <target state="translated">実部を設定するための値</target>
        </trans-unit>
        <trans-unit id="e49ebb7a68f9bed22269786df49040d635e59d81" translate="yes" xml:space="preserve">
          <source>the value to store in the atomic object</source>
          <target state="translated">原子オブジェクトに格納する値</target>
        </trans-unit>
        <trans-unit id="8452a9dddbb3cb7f80f5d6ba8420b82694114bdc" translate="yes" xml:space="preserve">
          <source>the value to store in the atomic object if it is as expected</source>
          <target state="translated">期待通りであれば、アトミックオブジェクトに格納する値</target>
        </trans-unit>
        <trans-unit id="d76e842bf4bb77c6875b3b8a279765bb588aa59d" translate="yes" xml:space="preserve">
          <source>the value to store in the the referenced object if it is as expected</source>
          <target state="translated">期待通りであれば、参照されるオブジェクトに格納する値を指定します。</target>
        </trans-unit>
        <trans-unit id="29ed5707d06d95e401518fb55560f707e965dadf" translate="yes" xml:space="preserve">
          <source>the value to store into the atomic variable</source>
          <target state="translated">原子変数に格納する値</target>
        </trans-unit>
        <trans-unit id="0fd54e773972a5dd0067f8f1b773a27bfb55f37b" translate="yes" xml:space="preserve">
          <source>the value to store into the referenced object</source>
          <target state="translated">参照されるオブジェクトに格納する値</target>
        </trans-unit>
        <trans-unit id="6e25873836d59f05e6e7550784a742d40ff19efa" translate="yes" xml:space="preserve">
          <source>the value to subtract from the value stored in the atomic object</source>
          <target state="translated">原子オブジェクトに格納されている値から減算する値</target>
        </trans-unit>
        <trans-unit id="b47d953b5e219711b6a4daac3d4ff9f4654f7e84" translate="yes" xml:space="preserve">
          <source>the value to use as replacement</source>
          <target state="translated">置き換え値</target>
        </trans-unit>
        <trans-unit id="f00b096ebb10b390e1f4442d3aca40e0c192417a" translate="yes" xml:space="preserve">
          <source>the value to use as the copy constructor argument</source>
          <target state="translated">コピーコンストラクタの引数として使用する値。</target>
        </trans-unit>
        <trans-unit id="346ea3143060a198489f942c34f64151c7f12e7c" translate="yes" xml:space="preserve">
          <source>the value to use in case &lt;code&gt;*this&lt;/code&gt; is empty</source>
          <target state="translated">&lt;code&gt;*this&lt;/code&gt; が空の場合に使用する値</target>
        </trans-unit>
        <trans-unit id="ab0fcd960ec9adb72e0eb52728a528b5aa45e052" translate="yes" xml:space="preserve">
          <source>the values to be swapped</source>
          <target state="translated">スワップする値</target>
        </trans-unit>
        <trans-unit id="bf1eab9565d60cd878f916476fafecea8833a116" translate="yes" xml:space="preserve">
          <source>the values to compare</source>
          <target state="translated">比較値</target>
        </trans-unit>
        <trans-unit id="4ce9c8d2d77d0d5d5ffbc2fa01683bfddaf300b3" translate="yes" xml:space="preserve">
          <source>the values to construct the pair from</source>
          <target state="translated">からペアを構築するための値を</target>
        </trans-unit>
        <trans-unit id="c86ddf1e3e6b4d694d5e46d3f8b98dde3d3634a1" translate="yes" xml:space="preserve">
          <source>the view to be inserted</source>
          <target state="translated">挿入するビュー</target>
        </trans-unit>
        <trans-unit id="875bcc197c9e2cbdc5e62c3e8ae91eb29c4376ac" translate="yes" xml:space="preserve">
          <source>the wide character to classify</source>
          <target state="translated">ぶんるいのひろいもじ</target>
        </trans-unit>
        <trans-unit id="5aef15fdeddc80063d2561dea4d95964ad226341" translate="yes" xml:space="preserve">
          <source>the wide character to convert</source>
          <target state="translated">幅文字</target>
        </trans-unit>
        <trans-unit id="17e2794e6829569ed6035bb667ee25d44bb412b3" translate="yes" xml:space="preserve">
          <source>the wide character to map</source>
          <target state="translated">広域文字</target>
        </trans-unit>
        <trans-unit id="3cb1764c7eb3244a5c76bedb5b74e4cb3bae3bbf" translate="yes" xml:space="preserve">
          <source>the year value</source>
          <target state="translated">年値</target>
        </trans-unit>
        <trans-unit id="d140758559ffbadc100026c0e2ab49a80c9874f7" translate="yes" xml:space="preserve">
          <source>then a</source>
          <target state="translated">而して</target>
        </trans-unit>
        <trans-unit id="b2617470862413620244f3f61d17c91d9bdd20e9" translate="yes" xml:space="preserve">
          <source>then return &lt;code&gt;os.str()&lt;/code&gt;.</source>
          <target state="translated">次に &lt;code&gt;os.str()&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="f95a94b4cce328a4c8dc261815af24224b605f29" translate="yes" xml:space="preserve">
          <source>then the compiler will declare a move assignment operator as an &lt;code&gt;inline public&lt;/code&gt; member of its class with the signature &lt;code&gt;T&amp;amp; T::operator=(T&amp;amp;&amp;amp;)&lt;/code&gt;.</source>
          <target state="translated">次に、コンパイラーは、移動割り当て演算子を、シグニチャー &lt;code&gt;T&amp;amp; T::operator=(T&amp;amp;&amp;amp;)&lt;/code&gt; 持つクラスの &lt;code&gt;inline public&lt;/code&gt; メンバーとして宣言します。ます。</target>
        </trans-unit>
        <trans-unit id="2a7144b8259369059b509bed3c0984a93c4b43ba" translate="yes" xml:space="preserve">
          <source>then the compiler will declare a move constructor as a non-&lt;a href=&quot;explicit&quot;&gt;explicit&lt;/a&gt;&lt;code&gt;inline public&lt;/code&gt; member of its class with the signature &lt;code&gt;T::T(T&amp;amp;&amp;amp;)&lt;/code&gt;.</source>
          <target state="translated">次に、コンパイラはmoveコンストラクタを、シグネチャ &lt;code&gt;T::T(T&amp;amp;&amp;amp;)&lt;/code&gt; 持つそのクラスの非&lt;a href=&quot;explicit&quot;&gt;明示的な&lt;/a&gt; &lt;code&gt;inline public&lt;/code&gt; メンバーとして宣言します。</target>
        </trans-unit>
        <trans-unit id="b4172b571c41cdf45b39646bd51a59e31685d482" translate="yes" xml:space="preserve">
          <source>then the empty string is returned.</source>
          <target state="translated">の場合は空の文字列が返されます。</target>
        </trans-unit>
        <trans-unit id="12960009d6b3b723aa9b6ec43e0bfc2aa10c1f13" translate="yes" xml:space="preserve">
          <source>then.</source>
          <target state="translated">then.</target>
        </trans-unit>
        <trans-unit id="f24d46bbed06973d180e207d5b704497ebd80478" translate="yes" xml:space="preserve">
          <source>there are at most as many arguments as there are parameters or a parameter is a template parameter pack,</source>
          <target state="translated">パラメータの数だけ引数があるか、パラメータがテンプレートのパラメータパックになっています。</target>
        </trans-unit>
        <trans-unit id="26c3254c068d53fa499dbae8c471846aa4b8dc9b" translate="yes" xml:space="preserve">
          <source>there are no overloads for const tuple&amp;amp;&amp;amp;</source>
          <target state="translated">const tuple &amp;amp;&amp;amp;のオーバーロードはありません</target>
        </trans-unit>
        <trans-unit id="257beb64d76a0f95798a5565507b200252fa56d8" translate="yes" xml:space="preserve">
          <source>there are no user-declared &lt;a href=&quot;as_operator&quot;&gt;copy assignment operators&lt;/a&gt;;</source>
          <target state="translated">ユーザーが宣言した&lt;a href=&quot;as_operator&quot;&gt;コピー代入演算子&lt;/a&gt;はありません。</target>
        </trans-unit>
        <trans-unit id="5dcccf3268f0cf4aece39e70ee78a7fe4a6654dc" translate="yes" xml:space="preserve">
          <source>there are no user-declared &lt;a href=&quot;copy_constructor&quot;&gt;copy constructors&lt;/a&gt;;</source>
          <target state="translated">ユーザーが宣言した&lt;a href=&quot;copy_constructor&quot;&gt;コピーコンストラクター&lt;/a&gt;はありません。</target>
        </trans-unit>
        <trans-unit id="3ced47853b23cdd63dd7de7f5de1f3cf29675ba0" translate="yes" xml:space="preserve">
          <source>there are no user-declared &lt;a href=&quot;destructor&quot;&gt;destructors&lt;/a&gt;;</source>
          <target state="translated">ユーザーが宣言した&lt;a href=&quot;destructor&quot;&gt;デストラクタ&lt;/a&gt;はありません。</target>
        </trans-unit>
        <trans-unit id="0a44e24915d63d72704097d352fbdcd94f64fc33" translate="yes" xml:space="preserve">
          <source>there are no user-declared &lt;a href=&quot;move_operator&quot;&gt;move assignment operators&lt;/a&gt;;</source>
          <target state="translated">ユーザーが宣言した&lt;a href=&quot;move_operator&quot;&gt;移動代入演算子&lt;/a&gt;はありません。</target>
        </trans-unit>
        <trans-unit id="43f8a4b73ef50cf1144e1aae288633121b810772" translate="yes" xml:space="preserve">
          <source>there are no user-declared copy assignment operators;</source>
          <target state="translated">ユーザー定義のコピー代入演算子はありません。</target>
        </trans-unit>
        <trans-unit id="02ac95b7936cb2ab06956aa2c6512104f073a432" translate="yes" xml:space="preserve">
          <source>there are no user-declared copy constructors;</source>
          <target state="translated">には、ユーザーが宣言したコピーコンストラクタはありません。</target>
        </trans-unit>
        <trans-unit id="17c56a50d2a4a0fef3982aa92777155d436a3bcb" translate="yes" xml:space="preserve">
          <source>there are no user-declared destructors;</source>
          <target state="translated">には、ユーザが宣言したデストラクタはありません。</target>
        </trans-unit>
        <trans-unit id="ede2db4fa6d66d07fbad88a19b4f35d3dce722c4" translate="yes" xml:space="preserve">
          <source>there are no user-declared move constructors;</source>
          <target state="translated">ユーザー定義の移動コンストラクタはありません。</target>
        </trans-unit>
        <trans-unit id="bd43ffe7d68dadeb063504f379d9485a07b0525e" translate="yes" xml:space="preserve">
          <source>there exists a value &lt;code&gt;n&lt;/code&gt; of type &lt;code&gt;difference_type&lt;/code&gt; such that &lt;code&gt;a+n==b&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;a+n==b&lt;/code&gt; ような、 &lt;code&gt;difference_type&lt;/code&gt; 型の値 &lt;code&gt;n&lt;/code&gt; が存在する</target>
        </trans-unit>
        <trans-unit id="5c202253e67e3ebef30b9dfca70762d3eed96e13" translate="yes" xml:space="preserve">
          <source>there exists an atomic read Y (with any memory order)</source>
          <target state="translated">アトミックリードYが存在する</target>
        </trans-unit>
        <trans-unit id="b5cb33369f1f4e61a6ebcd37178d2721cac8880e" translate="yes" xml:space="preserve">
          <source>there exists an atomic store X (with any memory order)</source>
          <target state="translated">アトミックストアXがある</target>
        </trans-unit>
        <trans-unit id="293dfc973671335613b44c93b37ec111edfb339c" translate="yes" xml:space="preserve">
          <source>there exists an object</source>
          <target state="translated">ある</target>
        </trans-unit>
        <trans-unit id="441e8fccef00a248a31581991bbb3904a9154ce5" translate="yes" xml:space="preserve">
          <source>there exists at least one set of argument values such that an invocation of the function could be an evaluated subexpression of a &lt;a href=&quot;constant_expression#Core_constant_expressions&quot;&gt;core constant expression&lt;/a&gt;(for constructors, use in a &lt;a href=&quot;constant_initialization&quot;&gt;constant initializer&lt;/a&gt; is sufficient)(since C++14). No diagnostic is required for a violation of this bullet.</source>
          <target state="translated">関数の呼び出しが&lt;a href=&quot;constant_expression#Core_constant_expressions&quot;&gt;コア定数&lt;/a&gt;式の評価された部分式になるような引数値のセットが少なくとも1つ存在する（コンストラクターの場合、&lt;a href=&quot;constant_initialization&quot;&gt;定数初期化子&lt;/a&gt;での使用で十分です）（C ++ 14以降）。この弾丸の違反には診断は必要ありません。</target>
        </trans-unit>
        <trans-unit id="c6442959e6fd0e4b473cb29bc07dba0b5142a316" translate="yes" xml:space="preserve">
          <source>there is a &lt;code&gt;memory_order_seq_cst&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;atomic_thread_fence&quot;&gt;std::atomic_thread_fence&lt;/a&gt;&lt;/code&gt; X such that A is</source>
          <target state="translated">そこにある &lt;code&gt;memory_order_seq_cst&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;atomic_thread_fence&quot;&gt;std::atomic_thread_fence&lt;/a&gt;&lt;/code&gt; X Aがあるようには、</target>
        </trans-unit>
        <trans-unit id="2d4c922c7ebeeb561cf58801898a0bade8325e96" translate="yes" xml:space="preserve">
          <source>there is a wrapped stream (the wrapped streambuf pointer is not null)</source>
          <target state="translated">ラップされたストリームがある (ラップされた streambuf ポインタは null ではありません)</target>
        </trans-unit>
        <trans-unit id="9180aec95ccacf9b305e955c09186295702e2467" translate="yes" xml:space="preserve">
          <source>there is an argument for each non-deducible non-pack parameter that does not have a default template-argument,</source>
          <target state="translated">デフォルトのテンプレート引数を持たない非可算用の各パックパラメータに引数があります。</target>
        </trans-unit>
        <trans-unit id="0e6e124a0c68093777d5061339b0a2bf7b4a7c9c" translate="yes" xml:space="preserve">
          <source>there is no smaller array object that satisfies these constraints.</source>
          <target state="translated">これらの制約を満たすより小さい配列オブジェクトは存在しません。</target>
        </trans-unit>
        <trans-unit id="1222bf9b360fa71a7dc92ae7081472a68cbd037f" translate="yes" xml:space="preserve">
          <source>there was not enough memory to convert the expression into a finite state machine</source>
          <target state="translated">式を有限状態マシンに変換するのに十分なメモリがありませんでした。</target>
        </trans-unit>
        <trans-unit id="29f49018888579f7a9da33872c448360bf426cdb" translate="yes" xml:space="preserve">
          <source>there was not enough memory to perform a match</source>
          <target state="translated">メモリが足りない</target>
        </trans-unit>
        <trans-unit id="c2da24675492d1e176e247502628b84e8f7b3790" translate="yes" xml:space="preserve">
          <source>these actions will not block for the shared state to become ready, except that it may block if all of the following are true: the shared state was created by a call to std::async, the shared state is not yet ready, and this was the last reference to the shared state.</source>
          <target state="translated">これらのアクションは、以下のすべてが真である場合にブロックされる可能性があることを除いて、共有状態がレディになるまでブロックされません。</target>
        </trans-unit>
        <trans-unit id="f24426b9ff82a9ecca01636f4317d4a7fdba1697" translate="yes" xml:space="preserve">
          <source>theta</source>
          <target state="translated">theta</target>
        </trans-unit>
        <trans-unit id="99b37090b4203536667244fa9f162d967d9b4688" translate="yes" xml:space="preserve">
          <source>they are</source>
          <target state="translated">彼等は</target>
        </trans-unit>
        <trans-unit id="a9fc1e1cd34a46597a553ed9f240e5560ab4b686" translate="yes" xml:space="preserve">
          <source>they are &lt;a href=&quot;../container/vector/end&quot;&gt;past-the-end iterators&lt;/a&gt; (including pointers past the end of an array) or &lt;a href=&quot;../container/forward_list/before_begin&quot;&gt;before-begin iterators&lt;/a&gt;. Such iterators may be dereferenceable in a particular implementation, but the library never assumes that they are.</source>
          <target state="translated">これらは、終わりを過ぎた&lt;a href=&quot;../container/vector/end&quot;&gt;反復子&lt;/a&gt;（配列の終わりを過ぎたポインタを含む）または&lt;a href=&quot;../container/forward_list/before_begin&quot;&gt;開始前の反復子&lt;/a&gt;です。そのようなイテレータは特定の実装で逆参照可能かもしれませんが、ライブラリはそれらがそうであると決して仮定しません。</target>
        </trans-unit>
        <trans-unit id="1aeabe0dee2cf020208ae9b31c66e6b1da98a1f0" translate="yes" xml:space="preserve">
          <source>they are both arrays of the same size or both arrays of unknown bound, and the array element types are similar.</source>
          <target state="translated">は,両方とも同じサイズの配列であるか,または両方ともバインド不明の配列であり,配列要素の型は似ています.</target>
        </trans-unit>
        <trans-unit id="4b72dd751904080a17797dd0ca927e581b039d29" translate="yes" xml:space="preserve">
          <source>they are both pointers to member of the same class, and the types of the pointed-to members are similar; or</source>
          <target state="translated">これらは両方とも同じクラスのメンバへのポインタであり、ポインタ先のメンバの型は似ています。</target>
        </trans-unit>
        <trans-unit id="0d97df1bd4435cfcfa0d0a64ee1edd9ca05f9a04" translate="yes" xml:space="preserve">
          <source>they are both pointers, and the pointed-to types are similar; or</source>
          <target state="translated">はどちらもポインタであり、point-to型は似ています。</target>
        </trans-unit>
        <trans-unit id="8ee6ffcd92af670dc64f8e4a736a3e9e9b81a057" translate="yes" xml:space="preserve">
          <source>they are declared in the same scope</source>
          <target state="translated">は同じスコープで宣言されています。</target>
        </trans-unit>
        <trans-unit id="2d976501b4405fcd9279ffdfa76235f87de9a25d" translate="yes" xml:space="preserve">
          <source>they are the same object, or</source>
          <target state="translated">同一のものであるか</target>
        </trans-unit>
        <trans-unit id="9b8c42c46228ac9b045d599a378338483c7deec2" translate="yes" xml:space="preserve">
          <source>they are the same type; or</source>
          <target state="translated">が同じタイプであること。</target>
        </trans-unit>
        <trans-unit id="978f9fa477aeec65fed97d7adb29b0790a79e595" translate="yes" xml:space="preserve">
          <source>they have identical template parameter lists</source>
          <target state="translated">これらは同一のテンプレートパラメータリストを持っています。</target>
        </trans-unit>
        <trans-unit id="e9d2a7f62681f13ac1f1fdfa7ec4b2448dad6961" translate="yes" xml:space="preserve">
          <source>they have the same name</source>
          <target state="translated">同姓同名</target>
        </trans-unit>
        <trans-unit id="19615d43988fbfcb720872f3faec5f2aabe0a0ae" translate="yes" xml:space="preserve">
          <source>they prevent the defaulted default constructor</source>
          <target state="translated">は、デフォルトのデフォルトのコンストラクタである</target>
        </trans-unit>
        <trans-unit id="395ac9e69aff9388428d59fa02af994ee003d40a" translate="yes" xml:space="preserve">
          <source>they were &lt;a href=&quot;../container#Iterator_invalidation&quot;&gt;invalidated&lt;/a&gt; by one of the iterator-invalidating operations on the sequence to which they refer.</source>
          <target state="translated">それらは、それらが参照するシーケンスに対するイテレーター無効化操作の1つによって&lt;a href=&quot;../container#Iterator_invalidation&quot;&gt;無効に&lt;/a&gt;されました。</target>
        </trans-unit>
        <trans-unit id="c2543fff3bfa6f144c2f06a7de6cd10c0b650cae" translate="yes" xml:space="preserve">
          <source>this</source>
          <target state="translated">this</target>
        </trans-unit>
        <trans-unit id="592ca2106796d41af56a140143fa733a9b23cefa" translate="yes" xml:space="preserve">
          <source>this example uses iteration depth to calculate the indentation of a directory tree printout.</source>
          <target state="translated">この例では、反復の深さを使用して、ディレクトリツリーのプリントアウトのインデントを計算しています。</target>
        </trans-unit>
        <trans-unit id="bc88ceb2993039facc31c74f6ede65ccff326899" translate="yes" xml:space="preserve">
          <source>this facet is non-converting, no output written</source>
          <target state="translated">このファセットは変換されず、出力は書き込まれません。</target>
        </trans-unit>
        <trans-unit id="c8f0d95e898412cd9a6623182cfe53a105a447d7" translate="yes" xml:space="preserve">
          <source>this function was in &amp;lt;utility&amp;gt; and used &lt;code&gt;&lt;a href=&quot;../error/error_code&quot;&gt;std::error_code&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">この関数は&amp;lt;utility&amp;gt;にあり、 &lt;code&gt;&lt;a href=&quot;../error/error_code&quot;&gt;std::error_code&lt;/a&gt;&lt;/code&gt; を使用しました</target>
        </trans-unit>
        <trans-unit id="53bb6eb5de168084f6b0c055ab5eec5b2e67826b" translate="yes" xml:space="preserve">
          <source>this lock operation (equivalent to release-acquire &lt;code&gt;&lt;a href=&quot;../atomic/memory_order&quot;&gt;std::memory_order&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="translated">このロック操作（release-acquire &lt;code&gt;&lt;a href=&quot;../atomic/memory_order&quot;&gt;std::memory_order&lt;/a&gt;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="e369165f8bca2dda7c613596c31e2c0c50f00b9e" translate="yes" xml:space="preserve">
          <source>this operation (equivalent to release-acquire &lt;code&gt;&lt;a href=&quot;../atomic/memory_order&quot;&gt;std::memory_order&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">この操作（release-acquire &lt;code&gt;&lt;a href=&quot;../atomic/memory_order&quot;&gt;std::memory_order&lt;/a&gt;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="a20618cec7eec6d66b258110fa0816ce17afa3c6" translate="yes" xml:space="preserve">
          <source>this operation (equivalent to release-acquire &lt;code&gt;&lt;a href=&quot;../atomic/memory_order&quot;&gt;std::memory_order&lt;/a&gt;&lt;/code&gt;). &lt;code&gt;lock()&lt;/code&gt; does not synchronize with a failed &lt;code&gt;try_lock()&lt;/code&gt;</source>
          <target state="translated">この操作（release-acquire &lt;code&gt;&lt;a href=&quot;../atomic/memory_order&quot;&gt;std::memory_order&lt;/a&gt;&lt;/code&gt; ）。 &lt;code&gt;lock()&lt;/code&gt; は失敗した &lt;code&gt;try_lock()&lt;/code&gt; と同期しません</target>
        </trans-unit>
        <trans-unit id="3856401bf77cfc4c8ed83ed683538cac69d09a21" translate="yes" xml:space="preserve">
          <source>this pointer</source>
          <target state="translated">ほんポインター</target>
        </trans-unit>
        <trans-unit id="c581cedb14681ce3ea796b7918afc5fc91d4c8be" translate="yes" xml:space="preserve">
          <source>thousands_sep</source>
          <target state="translated">thousands_sep</target>
        </trans-unit>
        <trans-unit id="c283e375ed8cebf3b8d1b5101fd51bb522961656" translate="yes" xml:space="preserve">
          <source>thread</source>
          <target state="translated">thread</target>
        </trans-unit>
        <trans-unit id="49f87fa717d9ab3d00db74286c791ce426f9a2d4" translate="yes" xml:space="preserve">
          <source>thread exit, for objects with thread-local storage duration</source>
          <target state="translated">スレッドローカルストレージの持続時間を持つオブジェクトのためのスレッド終了</target>
        </trans-unit>
        <trans-unit id="4b02fa5bfd1d1e258df010d19ecd0e205d8eecb5" translate="yes" xml:space="preserve">
          <source>thread identifier</source>
          <target state="translated">スレッド識別子</target>
        </trans-unit>
        <trans-unit id="356672a7912e0d87ecb101f01f2d4fa6a3dc32f2" translate="yes" xml:space="preserve">
          <source>thread identifiers to compare</source>
          <target state="translated">比較するスレッド識別子</target>
        </trans-unit>
        <trans-unit id="8033b8d0fca2b4d2b437aa88449fe6f5f198b902" translate="yes" xml:space="preserve">
          <source>thread local</source>
          <target state="translated">スレッドローカル</target>
        </trans-unit>
        <trans-unit id="7eb35d5dd558e140bed8dd3698f0da62c52ab524" translate="yes" xml:space="preserve">
          <source>thread waiting conditions</source>
          <target state="translated">スレッド待ち条件</target>
        </trans-unit>
        <trans-unit id="8a3b74f0788364740a42246c084ae2c851661fc8" translate="yes" xml:space="preserve">
          <source>thread_local</source>
          <target state="translated">thread_local</target>
        </trans-unit>
        <trans-unit id="0d1748e040f9b50b918a01e89b1c84d56c13f88d" translate="yes" xml:space="preserve">
          <source>threads whose states to swap</source>
          <target state="translated">スワップするスレッド</target>
        </trans-unit>
        <trans-unit id="752353369bb43ee6ac0b9089bfdab6d5024a4395" translate="yes" xml:space="preserve">
          <source>three-way comparison (C++20)</source>
          <target state="translated">三者比較</target>
        </trans-unit>
        <trans-unit id="f793522355b5ef88da6d4d202946d3f8289dc953" translate="yes" xml:space="preserve">
          <source>throw</source>
          <target state="translated">throw</target>
        </trans-unit>
        <trans-unit id="a8123e752c97735c7c07fec2333aae5ea03d828a" translate="yes" xml:space="preserve">
          <source>throw expression</source>
          <target state="translated">スロー式</target>
        </trans-unit>
        <trans-unit id="861ef3ca84916b7880b64f0164a9baee5ae09ab2" translate="yes" xml:space="preserve">
          <source>throw from a local variable dtor could skip return value destructor</source>
          <target state="translated">ローカル変数からのスロー dtor は戻り値をスキップする可能性がある デストラクタ</target>
        </trans-unit>
        <trans-unit id="a4bd772158bb739599deed6b5bfc9ce00f181d91" translate="yes" xml:space="preserve">
          <source>throw operator</source>
          <target state="translated">スローえんざんし</target>
        </trans-unit>
        <trans-unit id="babb1ad5f39462a6cadaae210475bd46412de916" translate="yes" xml:space="preserve">
          <source>throw-expression</source>
          <target state="translated">throw-expression</target>
        </trans-unit>
        <trans-unit id="7fe0f60aa0a0e1dfc519073897539718282b5ac7" translate="yes" xml:space="preserve">
          <source>throw_with_nested</source>
          <target state="translated">throw_with_nested</target>
        </trans-unit>
        <trans-unit id="5920d4bd448376daaf21b06bf6ddd76e3e5ac79a" translate="yes" xml:space="preserve">
          <source>throws &lt;code&gt;&lt;a href=&quot;../../error/overflow_error/overflow_error&quot;&gt;std::overflow_error&lt;/a&gt;&lt;/code&gt; if the value can not be represented in &lt;code&gt;unsigned long&lt;/code&gt;.</source>
          <target state="translated">値が &lt;code&gt;unsigned long&lt;/code&gt; で表現できない場合、 &lt;code&gt;&lt;a href=&quot;../../error/overflow_error/overflow_error&quot;&gt;std::overflow_error&lt;/a&gt;&lt;/code&gt; スローします。</target>
        </trans-unit>
        <trans-unit id="0876abb0e076ceaf9b59a6b0a794891edce8a215" translate="yes" xml:space="preserve">
          <source>throws an exception</source>
          <target state="translated">例外が発生します</target>
        </trans-unit>
        <trans-unit id="7e2501805465ed9f8d11d9a7612717f2b6db562d" translate="yes" xml:space="preserve">
          <source>throws its argument with &lt;code&gt;&lt;a href=&quot;../../error/nested_exception&quot;&gt;std::nested_exception&lt;/a&gt;&lt;/code&gt; mixed in</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../error/nested_exception&quot;&gt;std::nested_exception&lt;/a&gt;&lt;/code&gt; 混合して引数をスローします</target>
        </trans-unit>
        <trans-unit id="bc8709cde40bfcb9625fce575396b2c6bffa964c" translate="yes" xml:space="preserve">
          <source>throws its argument with &lt;code&gt;&lt;a href=&quot;../error/nested_exception&quot;&gt;std::nested_exception&lt;/a&gt;&lt;/code&gt; mixed in</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../error/nested_exception&quot;&gt;std::nested_exception&lt;/a&gt;&lt;/code&gt; 混合して引数をスローします</target>
        </trans-unit>
        <trans-unit id="22fac9c553f2c3979ff7e920e87d77625563e894" translate="yes" xml:space="preserve">
          <source>throws its argument with &lt;code&gt;&lt;a href=&quot;error/nested_exception&quot;&gt;std::nested_exception&lt;/a&gt;&lt;/code&gt; mixed in</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;error/nested_exception&quot;&gt;std::nested_exception&lt;/a&gt;&lt;/code&gt; 混合して引数をスローします</target>
        </trans-unit>
        <trans-unit id="f8aed2de56a7c8f17fcd6b5e69c704296c943909" translate="yes" xml:space="preserve">
          <source>throws its argument with &lt;code&gt;&lt;a href=&quot;nested_exception&quot;&gt;std::nested_exception&lt;/a&gt;&lt;/code&gt; mixed in</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;nested_exception&quot;&gt;std::nested_exception&lt;/a&gt;&lt;/code&gt; 混合して引数をスローします</target>
        </trans-unit>
        <trans-unit id="07b657068d6fa82343fc57de36536497e50a0235" translate="yes" xml:space="preserve">
          <source>throws its argument with &lt;code&gt;std::nested_exception&lt;/code&gt; mixed in</source>
          <target state="translated">&lt;code&gt;std::nested_exception&lt;/code&gt; 混合して引数をスローします</target>
        </trans-unit>
        <trans-unit id="237a671e15600cdb83cb2ffb597cdc60a1d8af1d" translate="yes" xml:space="preserve">
          <source>throws the exception from a &lt;code&gt;&lt;a href=&quot;../error/nested_exception&quot;&gt;std::nested_exception&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../error/nested_exception&quot;&gt;std::nested_exception&lt;/a&gt;&lt;/code&gt; から例外をスローします</target>
        </trans-unit>
        <trans-unit id="9bc7b2ac3a0cd327f41a747e7e573f8d0094df1c" translate="yes" xml:space="preserve">
          <source>throws the exception from a &lt;code&gt;&lt;a href=&quot;error/nested_exception&quot;&gt;std::nested_exception&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;error/nested_exception&quot;&gt;std::nested_exception&lt;/a&gt;&lt;/code&gt; から例外をスローします</target>
        </trans-unit>
        <trans-unit id="a822833070c48497f880461ab7dea2db4a1212e2" translate="yes" xml:space="preserve">
          <source>throws the exception from a &lt;code&gt;&lt;a href=&quot;nested_exception&quot;&gt;std::nested_exception&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;nested_exception&quot;&gt;std::nested_exception&lt;/a&gt;&lt;/code&gt; から例外をスローします</target>
        </trans-unit>
        <trans-unit id="43d6546b38dbc289905a587dc3c372a612bd9575" translate="yes" xml:space="preserve">
          <source>throws the exception from a &lt;code&gt;std::nested_exception&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;std::nested_exception&lt;/code&gt; から例外をスローします</target>
        </trans-unit>
        <trans-unit id="fe0f3fdc67362191a35b214971c131130b4d541a" translate="yes" xml:space="preserve">
          <source>throws the exception from an &lt;code&gt;&lt;a href=&quot;../../error/exception_ptr&quot;&gt;std::exception_ptr&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../error/exception_ptr&quot;&gt;std::exception_ptr&lt;/a&gt;&lt;/code&gt; から例外をスローします</target>
        </trans-unit>
        <trans-unit id="34c05b4252ad1b311913933c73b3eba9b54656a0" translate="yes" xml:space="preserve">
          <source>throws the exception from an &lt;code&gt;&lt;a href=&quot;../error/exception_ptr&quot;&gt;std::exception_ptr&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../error/exception_ptr&quot;&gt;std::exception_ptr&lt;/a&gt;&lt;/code&gt; から例外をスローします</target>
        </trans-unit>
        <trans-unit id="162adc601fc6c1ffc2a694bee6e623c14b25b91a" translate="yes" xml:space="preserve">
          <source>throws the exception from an &lt;code&gt;&lt;a href=&quot;error/exception_ptr&quot;&gt;std::exception_ptr&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;error/exception_ptr&quot;&gt;std::exception_ptr&lt;/a&gt;&lt;/code&gt; から例外をスローします</target>
        </trans-unit>
        <trans-unit id="50a62a19cc143856b912847e6c342156be57ed5b" translate="yes" xml:space="preserve">
          <source>throws the exception from an &lt;code&gt;&lt;a href=&quot;exception_ptr&quot;&gt;std::exception_ptr&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;exception_ptr&quot;&gt;std::exception_ptr&lt;/a&gt;&lt;/code&gt; から例外をスローします</target>
        </trans-unit>
        <trans-unit id="3d8e185831f9b347b4e5c435b8e37af8d22564cd" translate="yes" xml:space="preserve">
          <source>throws the exception from an &lt;code&gt;std::exception_ptr&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;std::exception_ptr&lt;/code&gt; から例外をスローします</target>
        </trans-unit>
        <trans-unit id="029533f2c129f5c81addd6eb8c761f83edac6eae" translate="yes" xml:space="preserve">
          <source>throws the stored exception</source>
          <target state="translated">蓄積された例外をスローします。</target>
        </trans-unit>
        <trans-unit id="32b0e924ccb6867386ea14d46802c4d1975849d5" translate="yes" xml:space="preserve">
          <source>tick count argument for mixed-argument operators</source>
          <target state="translated">混合引数演算子の目盛り数引数</target>
        </trans-unit>
        <trans-unit id="d2aac84308e80b4fb63b151dc37c7c4a2e32fe22" translate="yes" xml:space="preserve">
          <source>tie</source>
          <target state="translated">tie</target>
        </trans-unit>
        <trans-unit id="714eea0f4c980736bde0065fe73f573487f08e3a" translate="yes" xml:space="preserve">
          <source>time</source>
          <target state="translated">time</target>
        </trans-unit>
        <trans-unit id="5ee654da7fdad986729d16493dd51f3260ec0875" translate="yes" xml:space="preserve">
          <source>time duration to sleep</source>
          <target state="translated">ねるまでの時間</target>
        </trans-unit>
        <trans-unit id="6fdc314de1c74669e0f68a388c4cb90881449461" translate="yes" xml:space="preserve">
          <source>time in seconds and nanoseconds</source>
          <target state="translated">秒ナノ秒</target>
        </trans-unit>
        <trans-unit id="801082a09e99fa8c2d436d76b42939e8190227c1" translate="yes" xml:space="preserve">
          <source>time point to convert</source>
          <target state="translated">換算時点</target>
        </trans-unit>
        <trans-unit id="ccf8253dd3e4b38fe5416fc6a893df43758688dc" translate="yes" xml:space="preserve">
          <source>time point to round down</source>
          <target state="translated">切り捨て時</target>
        </trans-unit>
        <trans-unit id="e8d93b8fa8fe05648d9f344a3d708a2e89b379e9" translate="yes" xml:space="preserve">
          <source>time point to round to nearest</source>
          <target state="translated">四捨五入</target>
        </trans-unit>
        <trans-unit id="49cd5e316149283b9c3bf70448c2940df166a496" translate="yes" xml:space="preserve">
          <source>time points</source>
          <target state="translated">時点</target>
        </trans-unit>
        <trans-unit id="5c3e8cb4bdf52a8cec8cafdd60578b76095c5db6" translate="yes" xml:space="preserve">
          <source>time points to compare</source>
          <target state="translated">比較する時間点</target>
        </trans-unit>
        <trans-unit id="d0826f180dc5705f9b64556eb1c27b290595501b" translate="yes" xml:space="preserve">
          <source>time points to extract difference from</source>
          <target state="translated">差分を抽出するタイムポイント</target>
        </trans-unit>
        <trans-unit id="c459a6062c3cb40c0a923706334f504e26cd92f3" translate="yes" xml:space="preserve">
          <source>time since epoch type</source>
          <target state="translated">以後の時間</target>
        </trans-unit>
        <trans-unit id="ec7f747d55baba7aa22017765bbc43747f33d458" translate="yes" xml:space="preserve">
          <source>time to block until</source>
          <target state="translated">までブロックタイム</target>
        </trans-unit>
        <trans-unit id="dab727671bf55713e7b464e15937082fb0671671" translate="yes" xml:space="preserve">
          <source>time_base</source>
          <target state="translated">time_base</target>
        </trans-unit>
        <trans-unit id="8330e137b46a83f2f0a2e0c1c5ef4c0134ad49a8" translate="yes" xml:space="preserve">
          <source>time_beg, time_end</source>
          <target state="translated">時間_beg,時間_end</target>
        </trans-unit>
        <trans-unit id="62b5f56de6d904a82779926115c3a092ee0ef55b" translate="yes" xml:space="preserve">
          <source>time_get</source>
          <target state="translated">time_get</target>
        </trans-unit>
        <trans-unit id="4e01473b5b94ac027ae63fbed2a8634baa2c451d" translate="yes" xml:space="preserve">
          <source>time_get_byname</source>
          <target state="translated">time_get_byname</target>
        </trans-unit>
        <trans-unit id="805efaf0ad1f32fab085311ebbf91dc9e46e7f89" translate="yes" xml:space="preserve">
          <source>time_of_day</source>
          <target state="translated">time_of_day</target>
        </trans-unit>
        <trans-unit id="f2d26f7b0295e5fd1c5aad17a46d6533907cd38d" translate="yes" xml:space="preserve">
          <source>time_point</source>
          <target state="translated">time_point</target>
        </trans-unit>
        <trans-unit id="b4b719737427e84e38b1097c4b179ea6002d57e1" translate="yes" xml:space="preserve">
          <source>time_point_cast</source>
          <target state="translated">time_point_cast</target>
        </trans-unit>
        <trans-unit id="b92d616c012b4ca204cc7bc5f47251d77b59e4e5" translate="yes" xml:space="preserve">
          <source>time_ptr</source>
          <target state="translated">time_ptr</target>
        </trans-unit>
        <trans-unit id="633a5dce7b589d116b380474eaf2d5ff29b8479b" translate="yes" xml:space="preserve">
          <source>time_put</source>
          <target state="translated">time_put</target>
        </trans-unit>
        <trans-unit id="44f991da7b05da0eb4717a3e2b43acad664f4ed6" translate="yes" xml:space="preserve">
          <source>time_put_byname</source>
          <target state="translated">time_put_byname</target>
        </trans-unit>
        <trans-unit id="68d88b14ab167a440a41eadc5bfbf64d656ada8c" translate="yes" xml:space="preserve">
          <source>time_since_epoch</source>
          <target state="translated">time_since_epoch</target>
        </trans-unit>
        <trans-unit id="325545ab4ce58b5c9901ed0fb9e55b5f5dd2a42c" translate="yes" xml:space="preserve">
          <source>time_t</source>
          <target state="translated">time_t</target>
        </trans-unit>
        <trans-unit id="77612c1a30e59e4ebd0819c5003ffdac9b353def" translate="yes" xml:space="preserve">
          <source>time_zone</source>
          <target state="translated">time_zone</target>
        </trans-unit>
        <trans-unit id="625ccc2bfe5ae7e2b92fe29b21b5a11081c28d84" translate="yes" xml:space="preserve">
          <source>timed_mutex</source>
          <target state="translated">timed_mutex</target>
        </trans-unit>
        <trans-unit id="e5b50f472e3b0a3a4cf2c7cb6f5f6bfa69a46ad9" translate="yes" xml:space="preserve">
          <source>timeout_duration</source>
          <target state="translated">timeout_duration</target>
        </trans-unit>
        <trans-unit id="740e65d80ca80ce7e07659551baf884ea9689995" translate="yes" xml:space="preserve">
          <source>timeout_time</source>
          <target state="translated">timeout_time</target>
        </trans-unit>
        <trans-unit id="0f4779b86a80a574430a8abc3f8ca299f2d6fe09" translate="yes" xml:space="preserve">
          <source>times to compare</source>
          <target state="translated">ひきあわせタイムス</target>
        </trans-unit>
        <trans-unit id="be884e02e4768daff1e0767cb17eb829ff448438" translate="yes" xml:space="preserve">
          <source>timespec</source>
          <target state="translated">timespec</target>
        </trans-unit>
        <trans-unit id="bceb6b36fd7a877b7e3103f9e0a1654c67393780" translate="yes" xml:space="preserve">
          <source>timespec_get</source>
          <target state="translated">timespec_get</target>
        </trans-unit>
        <trans-unit id="2c981b815c6ab0376f3b3a1a1ad0fdbf1c0605e3" translate="yes" xml:space="preserve">
          <source>tinyness_before</source>
          <target state="translated">tinyness_before</target>
        </trans-unit>
        <trans-unit id="a547db31280d14f095c760a23a7523d0b1e55fe6" translate="yes" xml:space="preserve">
          <source>tm</source>
          <target state="translated">tm</target>
        </trans-unit>
        <trans-unit id="77ce0b8ce4cdff3ee820493a59c36379bbccdf51" translate="yes" xml:space="preserve">
          <source>tmb</source>
          <target state="translated">tmb</target>
        </trans-unit>
        <trans-unit id="7856988903cb6f9b1e8c44315fcc780abf2cd6b2" translate="yes" xml:space="preserve">
          <source>tmpfile</source>
          <target state="translated">tmpfile</target>
        </trans-unit>
        <trans-unit id="102acf75547aa83dec59b4fdf55fc88b9269087d" translate="yes" xml:space="preserve">
          <source>tmpnam</source>
          <target state="translated">tmpnam</target>
        </trans-unit>
        <trans-unit id="4374aaee247fb237ce6c97d5c8d64bbe474d16de" translate="yes" xml:space="preserve">
          <source>to</source>
          <target state="translated">to</target>
        </trans-unit>
        <trans-unit id="6db310da202f85e4dc82dea4e657ae87344352b7" translate="yes" xml:space="preserve">
          <source>to (has the same effect as) &lt;code&gt;filter_view{E, P}&lt;/code&gt; for any suitable subexpressions &lt;code&gt;E&lt;/code&gt; and &lt;code&gt;P&lt;/code&gt;.</source>
          <target state="translated">任意の適切な部分式 &lt;code&gt;E&lt;/code&gt; および &lt;code&gt;P&lt;/code&gt; の &lt;code&gt;filter_view{E, P}&lt;/code&gt; に（同じ効果があります）。</target>
        </trans-unit>
        <trans-unit id="f269ba28fffc0a553134a53015c77bba5a66fe4e" translate="yes" xml:space="preserve">
          <source>to (has the same effect as) &lt;code&gt;iota_view{E}&lt;/code&gt; and &lt;code&gt;iota_view{E, F}&lt;/code&gt; respectively for any suitable subexpressions &lt;code&gt;E&lt;/code&gt; and &lt;code&gt;F&lt;/code&gt;</source>
          <target state="translated">任意の適切な部分式 &lt;code&gt;E&lt;/code&gt; および &lt;code&gt;F&lt;/code&gt; について、それぞれ &lt;code&gt;iota_view{E}&lt;/code&gt; および &lt;code&gt;iota_view{E, F}&lt;/code&gt; に（同じ効果をもたらします）</target>
        </trans-unit>
        <trans-unit id="b0360b2c2c7c19af16fba012cb12207240a2c9b1" translate="yes" xml:space="preserve">
          <source>to +2N-1</source>
          <target state="translated">に+2N-1</target>
        </trans-unit>
        <trans-unit id="93e082fc58aa0a7b1a72eba0d3f88a9e0938534a" translate="yes" xml:space="preserve">
          <source>to &lt;code&gt;buffer&lt;/code&gt; and the</source>
          <target state="translated">するための &lt;code&gt;buffer&lt;/code&gt; と</target>
        </trans-unit>
        <trans-unit id="be8220ea17ea45428d1661bd830d52509b1fdba7" translate="yes" xml:space="preserve">
          <source>to &lt;code&gt;buffer_size&lt;/code&gt; (but not less than 1). Then increase the</source>
          <target state="translated">&lt;code&gt;buffer_size&lt;/code&gt; （ただし1以上）。次に、</target>
        </trans-unit>
        <trans-unit id="1554643ad5eac667a4c6dbf124bd2ccd1e4d6d53" translate="yes" xml:space="preserve">
          <source>to &lt;code&gt;key&lt;/code&gt; or &lt;code&gt;x&lt;/code&gt;, which is either 1 or 0 for (1).</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; または &lt;code&gt;x&lt;/code&gt; （1）のために1または0です。</target>
        </trans-unit>
        <trans-unit id="0774435a625468ef7c7bd4ae611ca059dc2b9c75" translate="yes" xml:space="preserve">
          <source>to &lt;code&gt;key&lt;/code&gt; or &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; または &lt;code&gt;x&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2d7e8e15a7faffd17b8cc3e5a4376b852c3a5200" translate="yes" xml:space="preserve">
          <source>to &lt;code&gt;rhs&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rhs&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="949a5bbef10a5fa08f239d1bbb5ab606f85340bc" translate="yes" xml:space="preserve">
          <source>to &lt;code&gt;std::function&lt;/code&gt;.</source>
          <target state="translated">するために &lt;code&gt;std::function&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b8886222d0f73ac2e51acf48f9b3ebcbe68ef67f" translate="yes" xml:space="preserve">
          <source>to &lt;code&gt;v&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;v&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e0f015ae46c681dc5b654c589da959d9e2a7dd31" translate="yes" xml:space="preserve">
          <source>to a size no smaller than &lt;code&gt;initial_size&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;initial_size&lt;/code&gt; 以上のサイズに。</target>
        </trans-unit>
        <trans-unit id="a39c92bef5215cffe239033fe2d7bcc8609c4bb8" translate="yes" xml:space="preserve">
          <source>to an implementation-defined size.</source>
          <target state="translated">を実装で定義されたサイズに変更します。</target>
        </trans-unit>
        <trans-unit id="fcb0f13af95a472ae0a8d77196532ecf705dc2c2" translate="yes" xml:space="preserve">
          <source>to be ignored</source>
          <target state="translated">無視される</target>
        </trans-unit>
        <trans-unit id="19877b0e55597803344001ad0c9371f4b48d7876" translate="yes" xml:space="preserve">
          <source>to data2</source>
          <target state="translated">にデータ2</target>
        </trans-unit>
        <trans-unit id="9f4d2728afe3216eac554746de5a71faf6719fcf" translate="yes" xml:space="preserve">
          <source>to indicate these requirements.</source>
          <target state="translated">これらの要件を示すために</target>
        </trans-unit>
        <trans-unit id="1c0ea110eea7ba8ccdd4a712a9fcf57ef2076e89" translate="yes" xml:space="preserve">
          <source>to nearest; same meaning as &lt;code&gt;&lt;a href=&quot;../../numeric/fenv/fe_round&quot;&gt;FE_TONEAREST&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">最も近い; &lt;code&gt;&lt;a href=&quot;../../numeric/fenv/fe_round&quot;&gt;FE_TONEAREST&lt;/a&gt;&lt;/code&gt; と同じ意味</target>
        </trans-unit>
        <trans-unit id="e81f5364086625a172df65cc403c50e78c1a90f9" translate="yes" xml:space="preserve">
          <source>to null and the</source>
          <target state="translated">をヌルにして</target>
        </trans-unit>
        <trans-unit id="e93a567747d005646386c3c6c5eda1348762ac92" translate="yes" xml:space="preserve">
          <source>to pointer &lt;code&gt;q&lt;/code&gt;, &lt;code&gt;p&amp;lt;=q&lt;/code&gt; and &lt;code&gt;p&amp;gt;=q&lt;/code&gt; both yield &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;p&amp;lt;q&lt;/code&gt; and &lt;code&gt;p&amp;gt;q&lt;/code&gt; both yield &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">ポインター &lt;code&gt;q&lt;/code&gt; に対して、 &lt;code&gt;p&amp;lt;=q&lt;/code&gt; および &lt;code&gt;p&amp;gt;=q&lt;/code&gt; はどちらも &lt;code&gt;true&lt;/code&gt; を生成し、 &lt;code&gt;p&amp;lt;q&lt;/code&gt; および &lt;code&gt;p&amp;gt;q&lt;/code&gt; は両方とも &lt;code&gt;false&lt;/code&gt; を生成します。</target>
        </trans-unit>
        <trans-unit id="0df52fed8091861afb5509a1fbf98dee90d6fca5" translate="yes" xml:space="preserve">
          <source>to pointer-to-function</source>
          <target state="translated">へのポインタ関数</target>
        </trans-unit>
        <trans-unit id="c7689f9f41bda873c197bd8ae2e2e1f3a504147f" translate="yes" xml:space="preserve">
          <source>to produce reference to cv-/ref-qualified function types.</source>
          <target state="translated">cv-/ref-修飾された関数型への参照を生成します.</target>
        </trans-unit>
        <trans-unit id="fcc9576c4eac2199d0f9e005eb0358fde28954bb" translate="yes" xml:space="preserve">
          <source>to read the character from</source>
          <target state="translated">から文字を読み取るために</target>
        </trans-unit>
        <trans-unit id="43e0ac1f4e1e8160b0775e7cf293a70c73089c07" translate="yes" xml:space="preserve">
          <source>to read the wide character from</source>
          <target state="translated">からワイド文字を読み取ることができます。</target>
        </trans-unit>
        <trans-unit id="44dbfb7a24d72a836d2e3045da2f8bd63164640f" translate="yes" xml:space="preserve">
          <source>to reference-to-function</source>
          <target state="translated">さんしょうかんすうへ</target>
        </trans-unit>
        <trans-unit id="b03a7a5822060f50bcec994cd21f8605c4f3cb02" translate="yes" xml:space="preserve">
          <source>to reference-to-pointer-to-function</source>
          <target state="translated">への参照対ポインタ対機能</target>
        </trans-unit>
        <trans-unit id="46dab804c4fedd3c1cb8707445abf74d7f559c78" translate="yes" xml:space="preserve">
          <source>to replenish the pool. The chunk size obtained increases geometrically.</source>
          <target state="translated">にプールを補充します。得られたチャンクサイズは幾何学的に増加する。</target>
        </trans-unit>
        <trans-unit id="26565fb5a8ebb8e2649c2b8393c71896f78e5f24" translate="yes" xml:space="preserve">
          <source>to specify the target type in &lt;a href=&quot;expressions#Conversions&quot;&gt;cast expressions&lt;/a&gt;;</source>
          <target state="translated">&lt;a href=&quot;expressions#Conversions&quot;&gt;キャスト式で&lt;/a&gt;ターゲットタイプを指定します。</target>
        </trans-unit>
        <trans-unit id="73df9f053bbc2a979b0ee4a6e1c8328ad3904c15" translate="yes" xml:space="preserve">
          <source>to the declaration inside the class (see &lt;a href=&quot;function_template#Function_template_overloading&quot;&gt;function template overloading&lt;/a&gt; for the definition of equivalency), otherwise it is considered to be an overload.</source>
          <target state="translated">クラス内の宣言に&lt;a href=&quot;function_template#Function_template_overloading&quot;&gt;追加&lt;/a&gt;します（同値の定義については、関数テンプレートのオーバーロードを参照）。それ以外の場合は、オーバーロードと見なされます。</target>
        </trans-unit>
        <trans-unit id="492650142e7427aae56c3c8d2312ddbce3f01bcc" translate="yes" xml:space="preserve">
          <source>to the magnitude of the integral quotient of &lt;code&gt;x/y&lt;/code&gt;, where n is an implementation-defined integer greater than or equal to 3).</source>
          <target state="translated">&lt;code&gt;x/y&lt;/code&gt; の積分商の大きさに。ここで、nは、3以上の実装定義の整数です。</target>
        </trans-unit>
        <trans-unit id="8e44ef7184506170082f636a5f9f22759f2b4379" translate="yes" xml:space="preserve">
          <source>to the same file system object. Thus &lt;code&gt;equivalent(&quot;a&quot;, &quot;b&quot;)&lt;/code&gt; will return &lt;code&gt;true&lt;/code&gt; if the paths resolve to the same file.</source>
          <target state="translated">同じファイルシステムオブジェクトに。したがって、パスが同じファイルに解決される場合、 &lt;code&gt;equivalent(&quot;a&quot;, &quot;b&quot;)&lt;/code&gt; は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="ea25f5675ac3d8c05f0fd6fb3ee8d4247b4fa9d4" translate="yes" xml:space="preserve">
          <source>to the second</source>
          <target state="translated">第二に</target>
        </trans-unit>
        <trans-unit id="ca9220b2f02d68499f1e58655053dea8c81251cb" translate="yes" xml:space="preserve">
          <source>to the specified argument, which is either 1 or 0 since this container does not allow duplicates.</source>
          <target state="translated">このコンテナは重複を許可していないため、指定された引数に 1 または 0 を指定します。</target>
        </trans-unit>
        <trans-unit id="89ea4ed7ad726916b317eee72b421cf963789bd4" translate="yes" xml:space="preserve">
          <source>to the specified argument.</source>
          <target state="translated">を指定された引数に変換します。</target>
        </trans-unit>
        <trans-unit id="5882e8f249928b040726d91f1ab0cddd2ef01b90" translate="yes" xml:space="preserve">
          <source>to the specified type &lt;code&gt;T&lt;/code&gt;. Note that explicit conversion functions are not considered, even though they are considered in contextual conversions to bool.(since C++11).</source>
          <target state="translated">指定された型 &lt;code&gt;T&lt;/code&gt; に。明示的な変換関数は、boolへのコンテキスト変換で考慮されますが、考慮されないことに注意してください。（C ++ 11以降）</target>
        </trans-unit>
        <trans-unit id="08bac3ce83848ad32cf9f9e861e304470e875276" translate="yes" xml:space="preserve">
          <source>to the type determined by decl-specifier-seq&lt;code&gt;S&lt;/code&gt;.</source>
          <target state="translated">decl-specifier-seq &lt;code&gt;S&lt;/code&gt; によって決定されるタイプに。</target>
        </trans-unit>
        <trans-unit id="7340b9878dd431d26d156223ba1d1fb43df07de1" translate="yes" xml:space="preserve">
          <source>to the value &lt;code&gt;x&lt;/code&gt;. This overload only participates in overload resolution if the qualified-id &lt;code&gt;Compare::is_transparent&lt;/code&gt; is valid and denotes a type. It allows calling this function without constructing an instance of &lt;code&gt;Key&lt;/code&gt;</source>
          <target state="translated">値 &lt;code&gt;x&lt;/code&gt; に。このオーバーロードは、qualified-id &lt;code&gt;Compare::is_transparent&lt;/code&gt; が有効で、タイプを示す場合にのみ、オーバーロードの解決に参加します。 &lt;code&gt;Key&lt;/code&gt; のインスタンスを作成せずにこの関数を呼び出すことができます</target>
        </trans-unit>
        <trans-unit id="378292ba7fe9f85b020e724243d345ff7606ce36" translate="yes" xml:space="preserve">
          <source>to the value &lt;code&gt;x&lt;/code&gt;. This overload only participates in overload resolution if the qualified-id &lt;code&gt;Compare::is_transparent&lt;/code&gt; is valid and denotes a type. It allows calling this function without constructing an instance of &lt;code&gt;Key&lt;/code&gt;.</source>
          <target state="translated">値 &lt;code&gt;x&lt;/code&gt; に。このオーバーロードは、qualified-id &lt;code&gt;Compare::is_transparent&lt;/code&gt; が有効で、タイプを示す場合にのみ、オーバーロードの解決に参加します。 &lt;code&gt;Key&lt;/code&gt; のインスタンスを作成せずにこの関数を呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="3db5758455eff6103deb2ee772f8656c885262c2" translate="yes" xml:space="preserve">
          <source>to the value &lt;code&gt;x&lt;/code&gt;. This overload only participates in overload resolution if the qualified-id &lt;code&gt;Compare::is_transparent&lt;/code&gt; is valid and denotes a type. They allow calling this function without constructing an instance of &lt;code&gt;Key&lt;/code&gt;.</source>
          <target state="translated">値 &lt;code&gt;x&lt;/code&gt; に。このオーバーロードは、qualified-id &lt;code&gt;Compare::is_transparent&lt;/code&gt; が有効で、タイプを示す場合にのみ、オーバーロードの解決に参加します。 &lt;code&gt;Key&lt;/code&gt; のインスタンスを作成せずにこの関数を呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="67244eedcb3d6c46224938e06c061729d83122fc" translate="yes" xml:space="preserve">
          <source>to the value &lt;code&gt;x&lt;/code&gt;. This overload only participates in overload resolution if the qualified-id &lt;code&gt;Hash::transparent_key_equal&lt;/code&gt; is valid and denotes a type. This assumes that such Hash is callable with both K and Key type, and that its key_equal is transparent, which, together, allows calling this function without constructing an instance of &lt;code&gt;Key&lt;/code&gt;.</source>
          <target state="translated">値 &lt;code&gt;x&lt;/code&gt; に。このオーバーロードは、修飾ID &lt;code&gt;Hash::transparent_key_equal&lt;/code&gt; が有効で、タイプを示す場合にのみ、オーバーロードの解決に参加します。これは、そのようなハッシュがKとKeyタイプの両方で呼び出し可能であり、そのkey_equalが透過的であることを前提としています。これにより、 &lt;code&gt;Key&lt;/code&gt; のインスタンスを構築せずにこの関数を呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="478e0ebb2dc0eaa91197748753764a8199e0cc3c" translate="yes" xml:space="preserve">
          <source>to the value pointed to by the argument. The specification may not contain any</source>
          <target state="translated">を引数で指された値に変換します。仕様書には</target>
        </trans-unit>
        <trans-unit id="3014aba76cb288a57bc0e046b1b857ac88375c6b" translate="yes" xml:space="preserve">
          <source>to_address</source>
          <target state="translated">to_address</target>
        </trans-unit>
        <trans-unit id="d2f7fe6e2f6e60d453567c25bff8416a301d4943" translate="yes" xml:space="preserve">
          <source>to_array</source>
          <target state="translated">to_array</target>
        </trans-unit>
        <trans-unit id="350047fcbb14f8a1474100386cc9457ab40ab209" translate="yes" xml:space="preserve">
          <source>to_bytes</source>
          <target state="translated">to_bytes</target>
        </trans-unit>
        <trans-unit id="1a54758ac67941f4b0b4afa0e3e0431cbe0beb9c" translate="yes" xml:space="preserve">
          <source>to_char_type</source>
          <target state="translated">to_char_type</target>
        </trans-unit>
        <trans-unit id="491b8229f4c6b48c235017e9f6f46e810b622247" translate="yes" xml:space="preserve">
          <source>to_chars</source>
          <target state="translated">to_chars</target>
        </trans-unit>
        <trans-unit id="f613cafd4feff19ac2d405da805e4f67ee6db0ed" translate="yes" xml:space="preserve">
          <source>to_int_type</source>
          <target state="translated">to_int_type</target>
        </trans-unit>
        <trans-unit id="4e2b26cbc8b06d2c651bab95ca2ab2df5732cc31" translate="yes" xml:space="preserve">
          <source>to_local</source>
          <target state="translated">to_local</target>
        </trans-unit>
        <trans-unit id="520abb300a372d28f5f569189661cab1d683bda1" translate="yes" xml:space="preserve">
          <source>to_stream</source>
          <target state="translated">to_stream</target>
        </trans-unit>
        <trans-unit id="e3748e8b33d5eae9817c59185bc16fd9bdaa251a" translate="yes" xml:space="preserve">
          <source>to_stream (std::chrono::file_time)</source>
          <target state="translated">to_stream (std::chrono::file_time)</target>
        </trans-unit>
        <trans-unit id="9231a53ec7672eab5d8a97d68729dc35141ecfcd" translate="yes" xml:space="preserve">
          <source>to_stream (std::chrono::gps_time)</source>
          <target state="translated">to_stream (std::chrono::gps_time)</target>
        </trans-unit>
        <trans-unit id="ca299574f7cde46ee69bb8ec5bb670d8c14ea3e1" translate="yes" xml:space="preserve">
          <source>to_stream (std::chrono::local_time)</source>
          <target state="translated">to_stream (std::chrono::local_time)</target>
        </trans-unit>
        <trans-unit id="50c895db7c388af9d3e546996a2637efc2f06401" translate="yes" xml:space="preserve">
          <source>to_stream (std::chrono::sys_time)</source>
          <target state="translated">to_stream (std::chrono::sys_time)</target>
        </trans-unit>
        <trans-unit id="ea6f1e41cee686daed80204691000723857ff2ef" translate="yes" xml:space="preserve">
          <source>to_stream (std::chrono::tai_time)</source>
          <target state="translated">to_stream (std::chrono::tai_time)</target>
        </trans-unit>
        <trans-unit id="870b892fd3a80524b326c2f15957561059f17597" translate="yes" xml:space="preserve">
          <source>to_stream (std::chrono::utc_time)</source>
          <target state="translated">to_stream (std::chrono::utc_time)</target>
        </trans-unit>
        <trans-unit id="af7f1a02b64a3ecfa66317236510ab7fa89ee9b8" translate="yes" xml:space="preserve">
          <source>to_string</source>
          <target state="translated">to_string</target>
        </trans-unit>
        <trans-unit id="9060ef832f8945439141859d2dbe2bb66112f178" translate="yes" xml:space="preserve">
          <source>to_sys</source>
          <target state="translated">to_sys</target>
        </trans-unit>
        <trans-unit id="9206b965f33cf43559a52e652fee09c2bb6ce349" translate="yes" xml:space="preserve">
          <source>to_sysfrom_sys</source>
          <target state="translated">to_sysfrom_sys</target>
        </trans-unit>
        <trans-unit id="186edc32c892745be6c3df35e11a47a32cd901de" translate="yes" xml:space="preserve">
          <source>to_time_t</source>
          <target state="translated">to_time_t</target>
        </trans-unit>
        <trans-unit id="820c124d5f2d2371db1262bbb4c0860618398a07" translate="yes" xml:space="preserve">
          <source>to_ullong</source>
          <target state="translated">to_ullong</target>
        </trans-unit>
        <trans-unit id="e9a3ca16119e3e6555401e4263ce75c08a758044" translate="yes" xml:space="preserve">
          <source>to_ulong</source>
          <target state="translated">to_ulong</target>
        </trans-unit>
        <trans-unit id="411eb09da48cff77aa02f833e70b4f838f1c0bea" translate="yes" xml:space="preserve">
          <source>to_utc</source>
          <target state="translated">to_utc</target>
        </trans-unit>
        <trans-unit id="a2e696e0ea7607cb6882429638477fd0ef6fa1cf" translate="yes" xml:space="preserve">
          <source>to_utcfrom_utc</source>
          <target state="translated">to_utcfrom_utc</target>
        </trans-unit>
        <trans-unit id="7582204087253c2018ad93bd58da6ee11ce9e1a3" translate="yes" xml:space="preserve">
          <source>to_wstring</source>
          <target state="translated">to_wstring</target>
        </trans-unit>
        <trans-unit id="e9556d0389ffe0b8b83d5c42e088f8c0c22ce08c" translate="yes" xml:space="preserve">
          <source>toggles the values of bits</source>
          <target state="translated">ビットの値を切り替えます。</target>
        </trans-unit>
        <trans-unit id="f6bbc53e34ffd4310894969a0936aa6bdac2d994" translate="yes" xml:space="preserve">
          <source>tolower</source>
          <target state="translated">tolower</target>
        </trans-unit>
        <trans-unit id="10c5c148b1b8b2e3ab7d69d6770ac9f9fc153d4c" translate="yes" xml:space="preserve">
          <source>tolower(std::locale)</source>
          <target state="translated">tolower(std::locale)</target>
        </trans-unit>
        <trans-unit id="af2c7b4ca07ae6c74d261bc745e174df8ab3ffef" translate="yes" xml:space="preserve">
          <source>top</source>
          <target state="translated">top</target>
        </trans-unit>
        <trans-unit id="d8f49b4452eabe7d41277ec29b04b39810a10687" translate="yes" xml:space="preserve">
          <source>totalOrder</source>
          <target state="translated">totalOrder</target>
        </trans-unit>
        <trans-unit id="87742fceb0dd4fef619ba0d9169e86c55151b9c4" translate="yes" xml:space="preserve">
          <source>toupper</source>
          <target state="translated">toupper</target>
        </trans-unit>
        <trans-unit id="3b7cf23935b3bd7d50e762a910fc371b03ea8cc5" translate="yes" xml:space="preserve">
          <source>toupper(std::locale)</source>
          <target state="translated">toupper(std::locale)</target>
        </trans-unit>
        <trans-unit id="9e2d795029dc690b93011f2fe0fb943958982618" translate="yes" xml:space="preserve">
          <source>toward zero; same meaning as &lt;code&gt;&lt;a href=&quot;../../numeric/fenv/fe_round&quot;&gt;FE_TOWARDZERO&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">ゼロに向かって; &lt;code&gt;&lt;a href=&quot;../../numeric/fenv/fe_round&quot;&gt;FE_TOWARDZERO&lt;/a&gt;&lt;/code&gt; と同じ意味</target>
        </trans-unit>
        <trans-unit id="ac7a72f9b7214d1ad6fc59b275ad04a292d49151" translate="yes" xml:space="preserve">
          <source>towards negative infinity; same meaning as &lt;code&gt;&lt;a href=&quot;../../numeric/fenv/fe_round&quot;&gt;FE_DOWNWARD&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">負の無限大に向かって; &lt;code&gt;&lt;a href=&quot;../../numeric/fenv/fe_round&quot;&gt;FE_DOWNWARD&lt;/a&gt;&lt;/code&gt; と同じ意味</target>
        </trans-unit>
        <trans-unit id="9934b9218a3137c6bcffa697eccca7b6c3deaf0d" translate="yes" xml:space="preserve">
          <source>towards positive infinity; same meaning as &lt;code&gt;&lt;a href=&quot;../../numeric/fenv/fe_round&quot;&gt;FE_UPWARD&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">正の無限大に向かって; &lt;code&gt;&lt;a href=&quot;../../numeric/fenv/fe_round&quot;&gt;FE_UPWARD&lt;/a&gt;&lt;/code&gt; と同じ意味</target>
        </trans-unit>
        <trans-unit id="ebee664fddeda680a4ba0ecaebe3c26e1dc4576d" translate="yes" xml:space="preserve">
          <source>towctrans</source>
          <target state="translated">towctrans</target>
        </trans-unit>
        <trans-unit id="5557aec3dd4896410834a425f72a02e70842e155" translate="yes" xml:space="preserve">
          <source>towlower</source>
          <target state="translated">towlower</target>
        </trans-unit>
        <trans-unit id="f4de21af59d7f9442d760b7a3d07bb5145eed685" translate="yes" xml:space="preserve">
          <source>towupper</source>
          <target state="translated">towupper</target>
        </trans-unit>
        <trans-unit id="903a0bf658baaaa89463ba893c88ae9c0be5a9bb" translate="yes" xml:space="preserve">
          <source>tp</source>
          <target state="translated">tp</target>
        </trans-unit>
        <trans-unit id="33fd482bf1f7717e9ccba32912dd6c9ff189050a" translate="yes" xml:space="preserve">
          <source>trailing &quot;/&quot; and &quot;/.&quot; are handled incorrectly</source>
          <target state="translated">の後に続く &quot;/&quot; と &quot;/.&quot; は正しく処理されません。</target>
        </trans-unit>
        <trans-unit id="a1b77f9dace96d32b2ac0e9103c23f34e79ae0b0" translate="yes" xml:space="preserve">
          <source>trailing(C++11)</source>
          <target state="translated">trailing(C++11)</target>
        </trans-unit>
        <trans-unit id="61d5e42e2e3387711f45a6bb85b606c4aa4e66b1" translate="yes" xml:space="preserve">
          <source>trailing-allocator convention</source>
          <target state="translated">トレイリング割付器規約</target>
        </trans-unit>
        <trans-unit id="9fb9c9f6c8914b77fb597d48b6bb0c9eca222d2c" translate="yes" xml:space="preserve">
          <source>traits class defining how to convert time points of one clock to another</source>
          <target state="translated">形質クラス</target>
        </trans-unit>
        <trans-unit id="12c6454906c8e25868101637d891ff97daf32f60" translate="yes" xml:space="preserve">
          <source>traits class for time zone pointers used by &lt;a href=&quot;chrono/zoned_time&quot;&gt;&lt;code&gt;zoned_time&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;chrono/zoned_time&quot;&gt; &lt;code&gt;zoned_time&lt;/code&gt; &lt;/a&gt;によって使用されるタイムゾーンポインターの特性クラス</target>
        </trans-unit>
        <trans-unit id="f9a3feadb1b1de086189bde29b7e634ca2132ad0" translate="yes" xml:space="preserve">
          <source>traits class specifying the operations on the character type</source>
          <target state="translated">文字型に対する操作を指定する traits クラス</target>
        </trans-unit>
        <trans-unit id="6bec2db32e7d84d1f67e6739054b98808c0a7b19" translate="yes" xml:space="preserve">
          <source>transfers execution back to the caller/resumer.</source>
          <target state="translated">は、実行を呼び出し元/受信者に転送します。</target>
        </trans-unit>
        <trans-unit id="1dc1cc4ba09248f1c15b1a8d9091f8aca5615900" translate="yes" xml:space="preserve">
          <source>transfers ownership from another &lt;code&gt;auto_ptr&lt;/code&gt;</source>
          <target state="translated">別の &lt;code&gt;auto_ptr&lt;/code&gt; から所有権を譲渡します</target>
        </trans-unit>
        <trans-unit id="e96a298b3ab8fd9652ff796ade851556771b5868" translate="yes" xml:space="preserve">
          <source>transfers the shared state from &lt;code&gt;*this&lt;/code&gt; to a &lt;a href=&quot;shared_future&quot;&gt;&lt;code&gt;shared_future&lt;/code&gt;&lt;/a&gt; and returns it</source>
          <target state="translated">共有状態を &lt;code&gt;*this&lt;/code&gt; から&lt;a href=&quot;shared_future&quot;&gt; &lt;code&gt;shared_future&lt;/code&gt; に転送&lt;/a&gt;して返します</target>
        </trans-unit>
        <trans-unit id="dd8ce13ad1ba5d660b1c242d9f2cb063a8429155" translate="yes" xml:space="preserve">
          <source>transform</source>
          <target state="translated">transform</target>
        </trans-unit>
        <trans-unit id="7a57daee03483112165f6f65a4a7f2e279a497f0" translate="yes" xml:space="preserve">
          <source>transform a string so that strcmp would produce the same result as strcoll</source>
          <target state="translated">strcmp が strcoll と同じ結果になるように文字列を変換します。</target>
        </trans-unit>
        <trans-unit id="a2dc8b6fc74fd2d4e19679aa8e33779d50077e85" translate="yes" xml:space="preserve">
          <source>transform a wide string so that wcscmp would produce the same result as wcscoll</source>
          <target state="translated">wcscmp が wcscoll と同じ結果になるように幅の広い文字列を変換します。</target>
        </trans-unit>
        <trans-unit id="9c2f67117d0ffd6318720b74954df49671a7b574" translate="yes" xml:space="preserve">
          <source>transform_exclusive_scan</source>
          <target state="translated">transform_exclusive_scan</target>
        </trans-unit>
        <trans-unit id="2715870063057af49a4be8214c841c2b86218a50" translate="yes" xml:space="preserve">
          <source>transform_inclusive_scan</source>
          <target state="translated">transform_inclusive_scan</target>
        </trans-unit>
        <trans-unit id="5ccd77f3dd404824952287ccaf5923fc930e9107" translate="yes" xml:space="preserve">
          <source>transform_primary</source>
          <target state="translated">transform_primary</target>
        </trans-unit>
        <trans-unit id="ae2dc288af74870a85e49dd91cc040b2c2d00df1" translate="yes" xml:space="preserve">
          <source>transform_reduce</source>
          <target state="translated">transform_reduce</target>
        </trans-unit>
        <trans-unit id="61a02c2a20c62fcc3ce296aafabfa0f212a65dd7" translate="yes" xml:space="preserve">
          <source>transform_reduce can be used to parallelize &lt;code&gt;&lt;a href=&quot;inner_product&quot;&gt;std::inner_product&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">transform_reduceを使用して &lt;code&gt;&lt;a href=&quot;inner_product&quot;&gt;std::inner_product&lt;/a&gt;&lt;/code&gt; を並列化できます。</target>
        </trans-unit>
        <trans-unit id="624a7660892ca4d6afd888207fd0c5d788719f9f" translate="yes" xml:space="preserve">
          <source>transform_viewview::transform</source>
          <target state="translated">transform_viewview::transform</target>
        </trans-unit>
        <trans-unit id="44e3cae80eab0e9751399a460bac44e499d2f10e" translate="yes" xml:space="preserve">
          <source>transformed</source>
          <target state="translated">transformed</target>
        </trans-unit>
        <trans-unit id="a4596ed6b0af8a8bfe2873fc6b6ce46b5af57273" translate="yes" xml:space="preserve">
          <source>transformed to tuples of references to avoid copy</source>
          <target state="translated">コピーを避けるために参照のタプルに変換されます。</target>
        </trans-unit>
        <trans-unit id="9edde81f876efe5a00214338d06bca763511498b" translate="yes" xml:space="preserve">
          <source>transforms a string so that collation can be replaced by comparison</source>
          <target state="translated">文字列を変換し、照合が比較で置き換えられるようにします。</target>
        </trans-unit>
        <trans-unit id="3ed950b3c38343e562625cbaf3e2fc908ebdbd59" translate="yes" xml:space="preserve">
          <source>translate</source>
          <target state="translated">translate</target>
        </trans-unit>
        <trans-unit id="c88fcd8207fe3a36a944a080829a555054a39d40" translate="yes" xml:space="preserve">
          <source>translate_nocase</source>
          <target state="translated">translate_nocase</target>
        </trans-unit>
        <trans-unit id="43e8c321f5c901fe222c48b4761cff61006a3771" translate="yes" xml:space="preserve">
          <source>translates the character representing a numeric digit into an integral value</source>
          <target state="translated">数値の桁を表す文字を積分値に変換します。</target>
        </trans-unit>
        <trans-unit id="038e6f38d030592b5261539667e7c8aefae12693" translate="yes" xml:space="preserve">
          <source>transparent</source>
          <target state="translated">transparent</target>
        </trans-unit>
        <trans-unit id="9d095842d626b71ccf267be9fd7b84e2470f286a" translate="yes" xml:space="preserve">
          <source>trap representation</source>
          <target state="translated">トラップ表現</target>
        </trans-unit>
        <trans-unit id="fdeb606021fe09545651eb68329d5f4d0b6d5110" translate="yes" xml:space="preserve">
          <source>traps</source>
          <target state="translated">traps</target>
        </trans-unit>
        <trans-unit id="282735bb67ea81a0943a2d80e7a23ca90c3b0993" translate="yes" xml:space="preserve">
          <source>treat_as_floating_point</source>
          <target state="translated">treat_as_floating_point</target>
        </trans-unit>
        <trans-unit id="d4a5606868d5f75161f5faef5aba115fe3815a2f" translate="yes" xml:space="preserve">
          <source>tries to lock the associated &lt;a href=&quot;../../named_req/timedlockable&quot;&gt;TimedLockable&lt;/a&gt; mutex, returns if the mutex has been unavailable until specified time point has been reached</source>
          <target state="translated">関連付けられた&lt;a href=&quot;../../named_req/timedlockable&quot;&gt;TimedLockable&lt;/a&gt;ミューテックスをロックしようとし、指定された時点に達するまでミューテックスが利用できなかった場合に戻ります</target>
        </trans-unit>
        <trans-unit id="c9531cb7c7d5f1651c2b18339b06184c1a55ad75" translate="yes" xml:space="preserve">
          <source>tries to lock the associated &lt;a href=&quot;../named_req/timedlockable&quot;&gt;TimedLockable&lt;/a&gt; mutex, returns if the mutex has been unavailable until specified time point has been reached</source>
          <target state="translated">関連付けられた&lt;a href=&quot;../named_req/timedlockable&quot;&gt;TimedLockable&lt;/a&gt;ミューテックスをロックしようとし、指定された時点に達するまでミューテックスが利用できなかった場合に戻ります</target>
        </trans-unit>
        <trans-unit id="620ab56ced21358a7b70eddd3db6b4957ef6f37b" translate="yes" xml:space="preserve">
          <source>tries to lock the associated mutex</source>
          <target state="translated">は関連するミューテックスをロックしようとします。</target>
        </trans-unit>
        <trans-unit id="a12e463f5b5a7ace170a66cf4f6c5b0449ec4f3c" translate="yes" xml:space="preserve">
          <source>tries to lock the associated mutex, for the specified duration</source>
          <target state="translated">は、指定された期間、関連するミューテックスをロックしようとします。</target>
        </trans-unit>
        <trans-unit id="24bc810d3bc919b45cf440ceeda11642ef3d3e38" translate="yes" xml:space="preserve">
          <source>tries to lock the associated mutex, returns if the mutex is not available</source>
          <target state="translated">は関連するミューテックスをロックしようとします。</target>
        </trans-unit>
        <trans-unit id="df81b0e6637db03d53be993b4ddaf072da76220b" translate="yes" xml:space="preserve">
          <source>tries to lock the associated mutex, until a specified time point</source>
          <target state="translated">は指定された時点まで、関連するミューテックスをロックしようとします。</target>
        </trans-unit>
        <trans-unit id="a5574cff789ca17ff47386dea83a041d018055a4" translate="yes" xml:space="preserve">
          <source>tries to lock the mutex for shared ownership, returns if the mutex has been</source>
          <target state="translated">はミューテックスを共有所有権のためにロックしようとします。</target>
        </trans-unit>
        <trans-unit id="9a7b71304f949d79b8627a509d9a1cea66e7820c" translate="yes" xml:space="preserve">
          <source>tries to lock the mutex for shared ownership, returns if the mutex is not available</source>
          <target state="translated">はミューテックスを共有所有権のためにロックしようとします。</target>
        </trans-unit>
        <trans-unit id="50973be8a5dd95c4c61e590a0bdadc869d59e00c" translate="yes" xml:space="preserve">
          <source>tries to lock the mutex, returns if the mutex has been</source>
          <target state="translated">はミューテックスをロックしようとします。</target>
        </trans-unit>
        <trans-unit id="648d13808a41ccce8fe932721fe5cf1b6dc14395" translate="yes" xml:space="preserve">
          <source>tries to lock the mutex, returns if the mutex is not available</source>
          <target state="translated">はミューテックスをロックしようとします。</target>
        </trans-unit>
        <trans-unit id="75066ce2cd8a974d226438e67982366762dd489b" translate="yes" xml:space="preserve">
          <source>trivial implicit copy/move assignment</source>
          <target state="translated">些細な暗黙のコピー/移動代入</target>
        </trans-unit>
        <trans-unit id="0d8d619ca17ac65da87730daa8079cfe89b74f72" translate="yes" xml:space="preserve">
          <source>trivial implicit default/copy/move constructor</source>
          <target state="translated">些細な暗黙のデフォルト/コピー/移動コンストラクタ</target>
        </trans-unit>
        <trans-unit id="e9e7b34ce7313dcf9d0bdd2682b2086a47e97362" translate="yes" xml:space="preserve">
          <source>trivial implicit destructor</source>
          <target state="translated">些細な暗黙のデストラクタ</target>
        </trans-unit>
        <trans-unit id="53de36c87c3ec13f458430338cd1bc4db3e29370" translate="yes" xml:space="preserve">
          <source>trivial type with alignment requirement as great as any other scalar type</source>
          <target state="translated">アラインメントが必要なスカラ型</target>
        </trans-unit>
        <trans-unit id="3ad00419899a3bb8728023a960a51ec554adb2dd" translate="yes" xml:space="preserve">
          <source>trivial types (see also &lt;code&gt;&lt;a href=&quot;../types/is_trivial&quot;&gt;std::is_trivial&lt;/a&gt;&lt;/code&gt;), POD types (see also &lt;code&gt;&lt;a href=&quot;../types/is_pod&quot;&gt;std::is_pod&lt;/a&gt;&lt;/code&gt;), literal types (see also &lt;code&gt;&lt;a href=&quot;../types/is_literal_type&quot;&gt;std::is_literal_type&lt;/a&gt;&lt;/code&gt;), and other categories listed in the &lt;a href=&quot;../types&quot;&gt; the type traits library&lt;/a&gt; or as &lt;a href=&quot;../named_req&quot;&gt;named type requirements&lt;/a&gt;.</source>
          <target state="translated">些細なタイプは（も参照 &lt;code&gt;&lt;a href=&quot;../types/is_trivial&quot;&gt;std::is_trivial&lt;/a&gt;&lt;/code&gt; PODタイプは（も参照） &lt;code&gt;&lt;a href=&quot;../types/is_pod&quot;&gt;std::is_pod&lt;/a&gt;&lt;/code&gt; 、）リテラルのタイプ（も参照 &lt;code&gt;&lt;a href=&quot;../types/is_literal_type&quot;&gt;std::is_literal_type&lt;/a&gt;&lt;/code&gt; ）、とに記載されている他のカテゴリ&lt;a href=&quot;../types&quot;&gt;型特性ライブラリ&lt;/a&gt;またはとして&lt;a href=&quot;../named_req&quot;&gt;名前付きの型の要件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5ffe533b830f08a0326348a9160afafc8ada44db" translate="yes" xml:space="preserve">
          <source>true</source>
          <target state="translated">true</target>
        </trans-unit>
        <trans-unit id="4f598ae96ec1577c79a5e583d205093bea86c445" translate="yes" xml:space="preserve">
          <source>true if the referred-to filesystem object exists.</source>
          <target state="translated">参照先のファイルシステムオブジェクトが存在する場合は真。</target>
        </trans-unit>
        <trans-unit id="cda1f4c31d1994c8d89520abf0fffa4e6bdef5f1" translate="yes" xml:space="preserve">
          <source>true if the referred-to filesystem object is a FIFO or pipe file, false otherwise.</source>
          <target state="translated">参照先のファイルシステムオブジェクトが FIFO またはパイプファイルの場合は true、そうでない場合は false です。</target>
        </trans-unit>
        <trans-unit id="cfa7635e24de5ac450a7d1ed4fd3b6152a3f09a1" translate="yes" xml:space="preserve">
          <source>true if the referred-to filesystem object is a block device, false otherwise.</source>
          <target state="translated">参照先のファイルシステムオブジェクトがブロックデバイスの場合はtrue、そうでない場合はfalseです。</target>
        </trans-unit>
        <trans-unit id="82ba51ae8005571f1e86389f0ddf52b1bcd0bc6e" translate="yes" xml:space="preserve">
          <source>true if the referred-to filesystem object is a character device, false otherwise.</source>
          <target state="translated">参照先のファイルシステムオブジェクトが文字デバイスの場合はtrue、そうでない場合はfalseです。</target>
        </trans-unit>
        <trans-unit id="516ae95c37396f499c604787ce45cf010400e687" translate="yes" xml:space="preserve">
          <source>true if the referred-to filesystem object is a directory, false otherwise.</source>
          <target state="translated">参照先のファイルシステムオブジェクトがディレクトリの場合はtrue、そうでない場合はfalseです。</target>
        </trans-unit>
        <trans-unit id="f19612ecfa32777f07ccccb10a999895769bc74a" translate="yes" xml:space="preserve">
          <source>true if the referred-to filesystem object is a named socket, false otherwise.</source>
          <target state="translated">参照先のファイルシステムオブジェクトが名前付きソケットの場合はtrue、そうでない場合はfalseです。</target>
        </trans-unit>
        <trans-unit id="751357a31c18ab90c33d408121d9dd8fed3afb90" translate="yes" xml:space="preserve">
          <source>true if the referred-to filesystem object is a regular file, false otherwise.</source>
          <target state="translated">参照先のファイルシステムオブジェクトが通常のファイルであればtrue、そうでなければfalseです。</target>
        </trans-unit>
        <trans-unit id="99e0233c30c8a6f77952f38a2c4a9aa3ff38f2e4" translate="yes" xml:space="preserve">
          <source>true if the referred-to filesystem object is a symlink, false otherwise.</source>
          <target state="translated">参照先のファイルシステムオブジェクトがシンボリックリンクの場合はtrue、そうでない場合はfalseです。</target>
        </trans-unit>
        <trans-unit id="e67d0983e1d1a2f91b081c4f1d1a49fa3d209543" translate="yes" xml:space="preserve">
          <source>true if the referred-to filesystem object is an</source>
          <target state="translated">参照先のファイルシステムオブジェクトが</target>
        </trans-unit>
        <trans-unit id="f0a1fdb0e610cc9a0c6d781b3546272427e4179a" translate="yes" xml:space="preserve">
          <source>truenamefalsename</source>
          <target state="translated">truenamefalsename</target>
        </trans-unit>
        <trans-unit id="df443944df7d1f0151edb69ac9dba5f281296eb8" translate="yes" xml:space="preserve">
          <source>trunctruncftruncl</source>
          <target state="translated">trunctruncftruncl</target>
        </trans-unit>
        <trans-unit id="3240aa0fe3ca15051680641a59e8d7b61c286b23" translate="yes" xml:space="preserve">
          <source>try</source>
          <target state="translated">try</target>
        </trans-unit>
        <trans-unit id="f993a55210c2a98ad58afa67973ba243e33bca48" translate="yes" xml:space="preserve">
          <source>try to acquire ownership of the mutex without blocking</source>
          <target state="translated">ブロックせずにミューテックスの所有権を取得しようとする</target>
        </trans-unit>
        <trans-unit id="7eaab58ea4109345f842e5039ce49504f61b254d" translate="yes" xml:space="preserve">
          <source>try-block</source>
          <target state="translated">try-block</target>
        </trans-unit>
        <trans-unit id="1fc9e70a0b16271608a3bd37ff0ced5a5df4ae1d" translate="yes" xml:space="preserve">
          <source>try-catch block</source>
          <target state="translated">トライキャッチブロック</target>
        </trans-unit>
        <trans-unit id="af938cbfa476f87c85cb4792ff0ea3829f935df6" translate="yes" xml:space="preserve">
          <source>try_emplace</source>
          <target state="translated">try_emplace</target>
        </trans-unit>
        <trans-unit id="e2cd80cae777c16da6ba7e4827589eb64dca150c" translate="yes" xml:space="preserve">
          <source>try_lock</source>
          <target state="translated">try_lock</target>
        </trans-unit>
        <trans-unit id="3b03bbf528e20ed0cb1e387fc36d0e56620d694d" translate="yes" xml:space="preserve">
          <source>try_lock_for</source>
          <target state="translated">try_lock_for</target>
        </trans-unit>
        <trans-unit id="c35ccb52d54390700f94e81e48bf498f36f94218" translate="yes" xml:space="preserve">
          <source>try_lock_shared</source>
          <target state="translated">try_lock_shared</target>
        </trans-unit>
        <trans-unit id="148ad98dd4a719122a3c07fc67b592aa60d0cbac" translate="yes" xml:space="preserve">
          <source>try_lock_shared_for</source>
          <target state="translated">try_lock_shared_for</target>
        </trans-unit>
        <trans-unit id="532b9c51ebc1cd2b29609e5232ec14b7cde4b8c6" translate="yes" xml:space="preserve">
          <source>try_lock_shared_until</source>
          <target state="translated">try_lock_shared_until</target>
        </trans-unit>
        <trans-unit id="577cc5b06d880c38c1d8555c95ff56e2974df3b9" translate="yes" xml:space="preserve">
          <source>try_lock_until</source>
          <target state="translated">try_lock_until</target>
        </trans-unit>
        <trans-unit id="4402abb98f9559cbfb6d73029f928227b498069b" translate="yes" xml:space="preserve">
          <source>ts</source>
          <target state="translated">ts</target>
        </trans-unit>
        <trans-unit id="49f80ea5aacfb5a957337dc906635fccbde446fc" translate="yes" xml:space="preserve">
          <source>tuple</source>
          <target state="translated">tuple</target>
        </trans-unit>
        <trans-unit id="2b998a81b29a7c9abb5a9b57a99e5ee3b5cd9dd5" translate="yes" xml:space="preserve">
          <source>tuple accesses specified element</source>
          <target state="translated">指定された要素にアクセスするタプル</target>
        </trans-unit>
        <trans-unit id="d38d39fdcbeb88ef8486f316904a8ec367a37573" translate="yes" xml:space="preserve">
          <source>tuple of arguments to pass to the constructors of T's .first</source>
          <target state="translated">T の .first のコンストラクタに渡す引数のタプル。</target>
        </trans-unit>
        <trans-unit id="fe25c4d162d0818773a75b3518f813f94ce61405" translate="yes" xml:space="preserve">
          <source>tuple of arguments to pass to the constructors of T's .second</source>
          <target state="translated">T の .second のコンストラクタに渡す引数のタプル。</target>
        </trans-unit>
        <trans-unit id="59d3936e0e3ba29abc7ec72b09d110ac5a638614" translate="yes" xml:space="preserve">
          <source>tuple of constructor arguments to initialize the first element of this pair</source>
          <target state="translated">このペアの最初の要素を初期化するためのコンストラクタ引数のタプル</target>
        </trans-unit>
        <trans-unit id="6b8f89eb0260ba35600e4dba5f04135b5aecf963" translate="yes" xml:space="preserve">
          <source>tuple of constructor arguments to initialize the second element of this pair</source>
          <target state="translated">このペアの二番目の要素を初期化するためのコンストラクタ引数のタプル</target>
        </trans-unit>
        <trans-unit id="a29f184e26642ef347d7e2d2217dbfe042fdcb7d" translate="yes" xml:space="preserve">
          <source>tuple of values to swap</source>
          <target state="translated">スワップする値のタプル</target>
        </trans-unit>
        <trans-unit id="994cb888f053efae20d3f3f89f13c8f33b68d348" translate="yes" xml:space="preserve">
          <source>tuple to replace the contents of this tuple</source>
          <target state="translated">タプルの内容を置き換えるためのタプル</target>
        </trans-unit>
        <trans-unit id="34a7b93340f2aa81ef5bc9839c6c1e83c261e56c" translate="yes" xml:space="preserve">
          <source>tuple whose contents to extract</source>
          <target state="translated">抽出対象タプル</target>
        </trans-unit>
        <trans-unit id="77fe17925f6e8bd3fcdd2d28083f2da5d3344cc5" translate="yes" xml:space="preserve">
          <source>tuple whose elements to be used as arguments to &lt;code&gt;f&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;f&lt;/code&gt; の引数として使用される要素を持つタプル</target>
        </trans-unit>
        <trans-unit id="85c3846c4cb3b18a4f575b869cc9959a7c66c051" translate="yes" xml:space="preserve">
          <source>tuple whose elements to be used as arguments to the constructor of &lt;code&gt;T&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; のコンストラクタへの引数として使用される要素を持つタプル</target>
        </trans-unit>
        <trans-unit id="21739a91196235cb9d609180d202447904e49303" translate="yes" xml:space="preserve">
          <source>tuple_cat</source>
          <target state="translated">tuple_cat</target>
        </trans-unit>
        <trans-unit id="3ea440b8fb3a5ae5a99d27e1d52fd689a9462976" translate="yes" xml:space="preserve">
          <source>tuple_element</source>
          <target state="translated">tuple_element</target>
        </trans-unit>
        <trans-unit id="540335d2bd999f6fac6172ac6ae53a8ac51c1d28" translate="yes" xml:space="preserve">
          <source>tuple_size</source>
          <target state="translated">tuple_size</target>
        </trans-unit>
        <trans-unit id="26d6fb43d4155df15d2014dea72dfa58a0e7e816" translate="yes" xml:space="preserve">
          <source>tuples to compare</source>
          <target state="translated">比較するタプル</target>
        </trans-unit>
        <trans-unit id="5fcb5fa090a3d69e67a63d3012d7da5d4ff01a4c" translate="yes" xml:space="preserve">
          <source>tuples whose contents to swap</source>
          <target state="translated">スワップするタプル</target>
        </trans-unit>
        <trans-unit id="4e407a5be3646ee79a91784a6d20d9265cb13c1c" translate="yes" xml:space="preserve">
          <source>turns a max heap into a range of elements sorted in ascending order</source>
          <target state="translated">maxヒープを昇順にソートされた要素の範囲に変換します。</target>
        </trans-unit>
        <trans-unit id="f99abcfae6c3ce6d22597f95ad6ef260d31527a6" translate="yes" xml:space="preserve">
          <source>twice</source>
          <target state="translated">twice</target>
        </trans-unit>
        <trans-unit id="339584e977195cfdf03b7e0ba927ddec5d7e0e2a" translate="yes" xml:space="preserve">
          <source>two constructors may cause ambiguities in class template argument deduction</source>
          <target state="translated">2 つのコンストラクタは、クラステンプレートの引数の推論で曖昧さを引き起こす可能性があります。</target>
        </trans-unit>
        <trans-unit id="5df20c59054b4244b7320781fe0117173afe4770" translate="yes" xml:space="preserve">
          <source>two members of type &lt;code&gt;value_type&lt;/code&gt;, with the same member access, holding the real and the imaginary components respectively (e.g. LLVM libc++).</source>
          <target state="translated">タイプが &lt;code&gt;value_type&lt;/code&gt; の 2つのメンバー。同じメンバーアクセスで、実数部と虚数部をそれぞれ保持します（LLVM libc ++など）。</target>
        </trans-unit>
        <trans-unit id="b4e78f60f45b588975957d5df07cf592980dbc73" translate="yes" xml:space="preserve">
          <source>tx_exception</source>
          <target state="translated">tx_exception</target>
        </trans-unit>
        <trans-unit id="d0a3e7f81a9885e99049d1cae0336d269d5e47a9" translate="yes" xml:space="preserve">
          <source>type</source>
          <target state="translated">type</target>
        </trans-unit>
        <trans-unit id="6bd64dbd12e6b0ab5061ed37e4e63e25ad0cccd1" translate="yes" xml:space="preserve">
          <source>type aliasing</source>
          <target state="translated">タイプエイリアシング</target>
        </trans-unit>
        <trans-unit id="5d116ea8769c5e4e0b752565e54498420b3bbcff" translate="yes" xml:space="preserve">
          <source>type and non-static data members of reference or pointer type in a non-type template parameter of class type and its subobjects(since C++20) cannot refer to/be the address of.</source>
          <target state="translated">クラス型およびそのサブオブジェクトの非型テンプレート・パラメータ内の参照型またはポインタ型の型および非静的データ・メンバ(C++20以降)は、そのアドレスを参照することができません/アドレスにすることができません。</target>
        </trans-unit>
        <trans-unit id="99a7c1cb3f5ec4e59ca30290c4ada194e3c80de1" translate="yes" xml:space="preserve">
          <source>type can be converted to a pointer to &lt;code&gt;const volatile&lt;/code&gt;;</source>
          <target state="translated">型は &lt;code&gt;const volatile&lt;/code&gt; へのポインタに変換できます。</target>
        </trans-unit>
        <trans-unit id="a1d33ae57348aec6445c7df96500e3ae6f9551e8" translate="yes" xml:space="preserve">
          <source>type can be converted to a pointer to &lt;code&gt;const&lt;/code&gt;;</source>
          <target state="translated">型は &lt;code&gt;const&lt;/code&gt; へのポインタに変換できます。</target>
        </trans-unit>
        <trans-unit id="433a8a9e3998611a7b0860eebb5d9cb42fa55fb5" translate="yes" xml:space="preserve">
          <source>type can be converted to a pointer to &lt;code&gt;volatile&lt;/code&gt;;</source>
          <target state="translated">タイプは &lt;code&gt;volatile&lt;/code&gt; へのポインタに変換できます。</target>
        </trans-unit>
        <trans-unit id="f848d5c2783c2d218a7dc53108a686160548b914" translate="yes" xml:space="preserve">
          <source>type can be converted to reference/pointer to &lt;code&gt;const volatile&lt;/code&gt;</source>
          <target state="translated">型は参照/ポインタに変換して &lt;code&gt;const volatile&lt;/code&gt; にできます</target>
        </trans-unit>
        <trans-unit id="7fb1123ec2ab53f5a00ea62b40518bfb309a8641" translate="yes" xml:space="preserve">
          <source>type can be converted to reference/pointer to &lt;code&gt;const&lt;/code&gt;</source>
          <target state="translated">型は &lt;code&gt;const&lt;/code&gt; への参照/ポインターに変換できます</target>
        </trans-unit>
        <trans-unit id="6039047964fc2934c850c1b54cb933a0b0a563a0" translate="yes" xml:space="preserve">
          <source>type can be converted to reference/pointer to &lt;code&gt;volatile&lt;/code&gt;</source>
          <target state="translated">型は参照/ポインタから &lt;code&gt;volatile&lt;/code&gt; 変換できます</target>
        </trans-unit>
        <trans-unit id="176642b349350c4c7354d328bccb02b4c4aa6fd0" translate="yes" xml:space="preserve">
          <source>type describing the result of inserting a &lt;code&gt;node_type&lt;/code&gt;, a specialization of</source>
          <target state="translated">挿入の結果記述タイプ &lt;code&gt;node_type&lt;/code&gt; 、の専門</target>
        </trans-unit>
        <trans-unit id="b9fd95ca94e3d6ec189785ea576ad831f75a4960" translate="yes" xml:space="preserve">
          <source>type information object</source>
          <target state="translated">かたじょうほうたいしょうたい</target>
        </trans-unit>
        <trans-unit id="8010b51ca2e2501d56ef0aa427ac026857bfcbdc" translate="yes" xml:space="preserve">
          <source>type is one of the following types (optionally cv-qualified, the qualifiers are ignored):</source>
          <target state="translated">type は,以下のいずれかの型です(オプションで cv-qualified,修飾子は無視されます).</target>
        </trans-unit>
        <trans-unit id="cf3776cc1e7502c59bab21c2126afbaed2e4ae28" translate="yes" xml:space="preserve">
          <source>type mismatch avoided</source>
          <target state="translated">型の不一致回避</target>
        </trans-unit>
        <trans-unit id="d408310452ab1521398cfe71fc94d6c9bc850b5a" translate="yes" xml:space="preserve">
          <source>type of MP1 and MP2. Otherwise, if T2 is derived from T1, then the composite pointer type is the cv-combined type of MP2 and MP1. 6) if the types of the operands P1 and P2 are multi-level mixed pointer and pointer to member types with the same number of levels that only differ by cv-qualifications at any of the levels, the composite pointer type is the cv-combined type of P1 and P2</source>
          <target state="translated">の型であることを示します.そうでなければ、T2がT1から派生したものであれば、複合ポインタの型は、MP2とMP1のcv-composed typeとなります。6)オペランドP1,P2の型が,いずれかのレベルでcv-qualificationによってのみ異なる同数のレベルを持つメンバ型への多レベル混合ポインタおよびポインタである場合,複合ポインタ型はP1,P2のcv-combined型となります。</target>
        </trans-unit>
        <trans-unit id="5adcb7d774e048f7b37abf2351637f6264cbb552" translate="yes" xml:space="preserve">
          <source>type of P1 and P2. Otherwise, if T2 is a base class of T1, then the composite pointer type is the</source>
          <target state="translated">の型であることを示します。そうでなければ、T2がT1の基底クラスであれば、複合ポインタ型は</target>
        </trans-unit>
        <trans-unit id="f2d4dabb92891a565532e3ad400ba1386ce85fe1" translate="yes" xml:space="preserve">
          <source>type of P2 and P1. 5) If the types of the operands are MP1, pointer to member of T1 of type (possibly cv-qualified) U1 and MP2, pointer to member of T2 of type (possibly cv-qualified) U2, and if T1 is the same as or derived from T2, then the composite pointer type is the</source>
          <target state="translated">の型のメンバへのポインタです.5)オペランドの型がMP1、型(cv-qualified)U1のT1のメンバへのポインタMP2、型(cv-qualified)U2のT2のメンバへのポインタMP2であり、T1がT2と同じか、T2から派生したものである場合、複合ポインタの型は</target>
        </trans-unit>
        <trans-unit id="453c6a7e0bef473f96ff0ecf2ee02921be07b7ed" translate="yes" xml:space="preserve">
          <source>type of the file status</source>
          <target state="translated">ファイル状態の種類</target>
        </trans-unit>
        <trans-unit id="a7afead193c6c9ed8c6f2dc146ec8f17709acfd9" translate="yes" xml:space="preserve">
          <source>type of two pointer types P1 and P2 is a type P3 that has the same number of levels and type at every level as P1, except that cv-qualifications at every level are set as follows:</source>
          <target state="translated">2つのポインタ型P1,P2の型は、各レベルのcv-qualificationsが以下のように設定されていることを除いて、P1と同じレベル数と各レベルの型を持つ型P3である。</target>
        </trans-unit>
        <trans-unit id="37916b7a0a79528399d271ac4a1ca0d70188b5fe" translate="yes" xml:space="preserve">
          <source>type requirements</source>
          <target state="translated">タイプ要件</target>
        </trans-unit>
        <trans-unit id="b13d328df684e912412036eef090bc13df5deb1e" translate="yes" xml:space="preserve">
          <source>type traits</source>
          <target state="translated">がたけいしつ</target>
        </trans-unit>
        <trans-unit id="247b28142cde40b1a5fbf175360daa1fbc7f0dbe" translate="yes" xml:space="preserve">
          <source>type used to pass alignment to alignment-aware allocation and deallocation functions</source>
          <target state="translated">アライメントを考慮した割り当ておよび解放関数にアライメントを渡すために使用される型</target>
        </trans-unit>
        <trans-unit id="cd92d11aca8d7ce75b94adfb17153479d4e776b5" translate="yes" xml:space="preserve">
          <source>type whose underlying type is fixed can be converted to its underlying type, and, if the underlying type is also subject to integral promotion, to the promoted underlying type. Conversion to the unpromoted underlying type is better for the purposes of &lt;a href=&quot;overload_resolution&quot;&gt;overload resolution&lt;/a&gt;;</source>
          <target state="translated">基になる型が固定されている型は、基になる型に変換できます。また、基になる型が整数昇格の対象である場合は、昇格される基になる型に変換できます。昇格されていない基本型への変換は、&lt;a href=&quot;overload_resolution&quot;&gt;オーバーロードの解決の&lt;/a&gt;ために優れています。</target>
        </trans-unit>
        <trans-unit id="36e5ac603bd5ab421fe62d86d9f2ebfc85fa7d40" translate="yes" xml:space="preserve">
          <source>type, &lt;a href=&quot;const_cast&quot;&gt;const_cast&lt;/a&gt; must be used.</source>
          <target state="translated">タイプ、&lt;a href=&quot;const_cast&quot;&gt;const_castを&lt;/a&gt;使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="82c4d3946f347b6480c566b41d73327e84d02550" translate="yes" xml:space="preserve">
          <source>type, capable of holding all information needed to control a C I/O stream</source>
          <target state="translated">型で、C I/O ストリームを制御するために必要なすべての情報を保持することができます。</target>
        </trans-unit>
        <trans-unit id="417db9471794d4df021bdb15260f334b49769347" translate="yes" xml:space="preserve">
          <source>type, capable of uniquely specifying a position in a file</source>
          <target state="translated">型で、ファイル内の位置を一意に指定することができます。</target>
        </trans-unit>
        <trans-unit id="cc40a669554c9e099c65f8e65c140e8fe7f92a50" translate="yes" xml:space="preserve">
          <source>type-constraint</source>
          <target state="translated">type-constraint</target>
        </trans-unit>
        <trans-unit id="c51f449b114c5ada6c7072b6c3795aeb7df82a07" translate="yes" xml:space="preserve">
          <source>type-constraint&lt;code&gt;...&lt;/code&gt;name(optional)</source>
          <target state="translated">type-constraint&lt;code&gt;...&lt;/code&gt;name(optional)</target>
        </trans-unit>
        <trans-unit id="b2c14ecee8a0624fde9f43cbb5329f26ac5e3b61" translate="yes" xml:space="preserve">
          <source>type-constraint&lt;code&gt;auto&lt;/code&gt;</source>
          <target state="translated">type-constraint&lt;code&gt;auto&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a71eff1b97efebf914f0b4aac2001eb8c155feac" translate="yes" xml:space="preserve">
          <source>type-constraint&lt;code&gt;decltype(auto)&lt;/code&gt;</source>
          <target state="translated">type-constraint&lt;code&gt;decltype(auto)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0e0f99a62a14972ff664853c0e39424c483ab1a5" translate="yes" xml:space="preserve">
          <source>type-constraintname(optional)</source>
          <target state="translated">type-constraintname(optional)</target>
        </trans-unit>
        <trans-unit id="544090391a87a713fe239ed7b048f63c7373a7dc" translate="yes" xml:space="preserve">
          <source>type-constraintname(optional)&lt;code&gt;=&lt;/code&gt;default</source>
          <target state="translated">type-constraintname(optional)&lt;code&gt;=&lt;/code&gt;default</target>
        </trans-unit>
        <trans-unit id="0b9da87700e82b5b9b35451f71ef1f36ef678d37" translate="yes" xml:space="preserve">
          <source>type-id</source>
          <target state="translated">type-id</target>
        </trans-unit>
        <trans-unit id="aaab7df19e9d473ed5a7e1d07b43795c50502ad2" translate="yes" xml:space="preserve">
          <source>type-parameter-key is either &lt;code&gt;typename&lt;/code&gt; or &lt;code&gt;class&lt;/code&gt;. There is no difference between these keywords in a type template parameter declaration.</source>
          <target state="translated">type-parameter-keyは &lt;code&gt;typename&lt;/code&gt; または &lt;code&gt;class&lt;/code&gt; のいずれかです。タイプテンプレートパラメータ宣言では、これらのキーワードに違いはありません。</target>
        </trans-unit>
        <trans-unit id="9b85bd12ccdb452b5139156cf413be8fc27cdbd8" translate="yes" xml:space="preserve">
          <source>type-parameter-key&lt;code&gt;...&lt;/code&gt;name(optional)</source>
          <target state="translated">type-parameter-key&lt;code&gt;...&lt;/code&gt;name(optional)</target>
        </trans-unit>
        <trans-unit id="5b6cd845791b0f4423d82a93365962568ae4a2ad" translate="yes" xml:space="preserve">
          <source>type-parameter-keyname(optional)</source>
          <target state="translated">type-parameter-keyname(optional)</target>
        </trans-unit>
        <trans-unit id="45b142ce0b996b5e6125b3ea7670030b554df336" translate="yes" xml:space="preserve">
          <source>type-parameter-keyname(optional)&lt;code&gt;= &lt;/code&gt;default</source>
          <target state="translated">type-parameter-keyname（オプション） &lt;code&gt;= &lt;/code&gt; デフォルト</target>
        </trans-unit>
        <trans-unit id="b16d50f3e052483520e645a3ceae7a5e5f76c368" translate="yes" xml:space="preserve">
          <source>type-safe access to the contained object</source>
          <target state="translated">含まれるオブジェクトへの型安全アクセス</target>
        </trans-unit>
        <trans-unit id="6c250cbd9f60c71f45443ec3e9723d26e7345097" translate="yes" xml:space="preserve">
          <source>type-specifier-seq</source>
          <target state="translated">type-specifier-seq</target>
        </trans-unit>
        <trans-unit id="c375df1c8b1071fa689242efab90c58fbde4992a" translate="yes" xml:space="preserve">
          <source>type. That is, the file exists, but is neither regular file, nor directory nor a symlink.</source>
          <target state="translated">タイプのファイルが存在することを意味します。つまり、ファイルは存在するが、通常のファイルでもディレクトリでもシンボリックリンクでもないということです。</target>
        </trans-unit>
        <trans-unit id="a58fcbbfa97e75c97c98308de4462cfa33724458" translate="yes" xml:space="preserve">
          <source>type; if the type is array type, alignment requirement of the element type is returned.</source>
          <target state="translated">typeが配列型の場合は,要素の型のアラインメント要件を返します.</target>
        </trans-unit>
        <trans-unit id="7261f260059c1d26e6cac331c3db573e8a0d93f6" translate="yes" xml:space="preserve">
          <source>type&lt;code&gt;...&lt;/code&gt;Args(optional)</source>
          <target state="translated">type&lt;code&gt;...&lt;/code&gt;Args(optional)</target>
        </trans-unit>
        <trans-unit id="dbd5c7d8beb38e7e7079c65b81d49f23b8fe525e" translate="yes" xml:space="preserve">
          <source>type&lt;code&gt;...&lt;/code&gt;name(optional)</source>
          <target state="translated">type&lt;code&gt;...&lt;/code&gt;name(optional)</target>
        </trans-unit>
        <trans-unit id="eee97e204fb1f63fb64f8cebfea1217c69c52fef" translate="yes" xml:space="preserve">
          <source>type_identity</source>
          <target state="translated">type_identity</target>
        </trans-unit>
        <trans-unit id="624b7eedfa9506b48f91daddd2d4eccdf24820db" translate="yes" xml:space="preserve">
          <source>type_index</source>
          <target state="translated">type_index</target>
        </trans-unit>
        <trans-unit id="1ce20d0b7e29581da2ce0ab6dced2d74f29ffebc" translate="yes" xml:space="preserve">
          <source>type_info</source>
          <target state="translated">type_info</target>
        </trans-unit>
        <trans-unit id="902349b54d1eaaa82cce892d47aa682be86edf1d" translate="yes" xml:space="preserve">
          <source>type_traits</source>
          <target state="translated">type_traits</target>
        </trans-unit>
        <trans-unit id="6dc2082b65ff3a9aefc09caca29756531dea041a" translate="yes" xml:space="preserve">
          <source>typedef</source>
          <target state="translated">typedef</target>
        </trans-unit>
        <trans-unit id="03fb93fe45f947d8264a7d2a25a2527f41022502" translate="yes" xml:space="preserve">
          <source>typedef declaration</source>
          <target state="translated">タイプデフ宣言</target>
        </trans-unit>
        <trans-unit id="82e85f8edbd66efa529ef3e57e70c8c99f296dfb" translate="yes" xml:space="preserve">
          <source>typedef specifier</source>
          <target state="translated">型付き指定子</target>
        </trans-unit>
        <trans-unit id="5a8d37351ca8a6a7739b030036a7e7089e1f8853" translate="yes" xml:space="preserve">
          <source>typeid</source>
          <target state="translated">typeid</target>
        </trans-unit>
        <trans-unit id="d968f356b5a6eae45d75748ee7f02cf587704a41" translate="yes" xml:space="preserve">
          <source>typeid operator</source>
          <target state="translated">タイプID演算子</target>
        </trans-unit>
        <trans-unit id="ddb3886ab904f48e4cba5b9b57da37c65a9ae749" translate="yes" xml:space="preserve">
          <source>typeindex</source>
          <target state="translated">typeindex</target>
        </trans-unit>
        <trans-unit id="85de7fd42ab4dcb24c0b6080e1e6e07a08df4a4d" translate="yes" xml:space="preserve">
          <source>typeinfo</source>
          <target state="translated">typeinfo</target>
        </trans-unit>
        <trans-unit id="59376f156b3fdd5b49d225b533ddbdda715129cf" translate="yes" xml:space="preserve">
          <source>typename</source>
          <target state="translated">typename</target>
        </trans-unit>
        <trans-unit id="fdef5b2a6a23a2165a9966d60ad3d18c86826462" translate="yes" xml:space="preserve">
          <source>typename specifier</source>
          <target state="translated">型名指定子</target>
        </trans-unit>
        <trans-unit id="e0429b3cc3fe5497b2ceef2651a2b094863700a9" translate="yes" xml:space="preserve">
          <source>typename(optional)</source>
          <target state="translated">typename(optional)</target>
        </trans-unit>
        <trans-unit id="2e573721ad813c586e4c0f069cedb3781d4480da" translate="yes" xml:space="preserve">
          <source>typename(optional)&lt;code&gt;= &lt;/code&gt;default</source>
          <target state="translated">typename（オプション） &lt;code&gt;= &lt;/code&gt; デフォルト</target>
        </trans-unit>
        <trans-unit id="db1a524e1236d9f26dfda90831f4b3d501554133" translate="yes" xml:space="preserve">
          <source>types that include pointers/references to array of unknown bound can't be parameters</source>
          <target state="translated">未知の境界の配列へのポインタ/参照を含む型はパラメータにできません。</target>
        </trans-unit>
        <trans-unit id="db36ba9ef177504471e9fdc2f6cd38a3460a5c7e" translate="yes" xml:space="preserve">
          <source>types. In particular, the following conversions are allowed:</source>
          <target state="translated">の型に変換することができます。特に、以下の変換が許可されています。</target>
        </trans-unit>
        <trans-unit id="881d33ccc5e17f2a6c8a0c79c706d9762638cc56" translate="yes" xml:space="preserve">
          <source>tzdb</source>
          <target state="translated">tzdb</target>
        </trans-unit>
        <trans-unit id="4971144a4266e99643bb9ac0a132186c175bb1d1" translate="yes" xml:space="preserve">
          <source>tzdb_list</source>
          <target state="translated">tzdb_list</target>
        </trans-unit>
        <trans-unit id="51e69892ab49df85c6230ccc57f8e1d1606caccc" translate="yes" xml:space="preserve">
          <source>u</source>
          <target state="translated">u</target>
        </trans-unit>
        <trans-unit id="ddf56384c42b8447ebb4d0d1bc2bbcafc77c0aea" translate="yes" xml:space="preserve">
          <source>u8path</source>
          <target state="translated">u8path</target>
        </trans-unit>
        <trans-unit id="e6b3ed3ca1de24d7c75444ca4797e29ef7808ae9" translate="yes" xml:space="preserve">
          <source>ud-suffix</source>
          <target state="translated">ud-suffix</target>
        </trans-unit>
        <trans-unit id="33907e57a1062506cc18a690b542d3ea6f9ce239" translate="yes" xml:space="preserve">
          <source>uflow</source>
          <target state="translated">uflow</target>
        </trans-unit>
        <trans-unit id="e7b5cb820ceb5a263de9be29d9102d8022e6c65a" translate="yes" xml:space="preserve">
          <source>uint8_tuint16_tuint32_tuint64_t</source>
          <target state="translated">uint8_tuint16_tuint32_tuint64_t</target>
        </trans-unit>
        <trans-unit id="8c9dd904bee92dc329a756fa87dce75248053776" translate="yes" xml:space="preserve">
          <source>uint_fast8_tuint_fast16_tuint_fast32_tuint_fast64_t</source>
          <target state="translated">uint_fast8_tuint_fast16_tuint_fast32_tuint_fast64_t</target>
        </trans-unit>
        <trans-unit id="7ab30736250caebaa415ec5090b48697abb4efb7" translate="yes" xml:space="preserve">
          <source>uint_least8_tuint_least16_tuint_least32_tuint_least64_t</source>
          <target state="translated">uint_least8_tuint_least16_tuint_least32_tuint_least64_t</target>
        </trans-unit>
        <trans-unit id="d71ab777d41f48a45a5d9d0eb21640076c14e79d" translate="yes" xml:space="preserve">
          <source>uintmax_t</source>
          <target state="translated">uintmax_t</target>
        </trans-unit>
        <trans-unit id="74e1a6ffffc390db559b4975b55796d988b20db6" translate="yes" xml:space="preserve">
          <source>uintptr_t</source>
          <target state="translated">uintptr_t</target>
        </trans-unit>
        <trans-unit id="02c46e4ddf363ed287e2995c2a41fc1ba3b673f9" translate="yes" xml:space="preserve">
          <source>unary &lt;a href=&quot;../named_req/functionobject&quot;&gt;FunctionObject&lt;/a&gt; that will be applied to each element of the input range. The return type must be acceptable as input to &lt;code&gt;binary_op&lt;/code&gt;</source>
          <target state="translated">入力範囲の各要素に適用される単項&lt;a href=&quot;../named_req/functionobject&quot;&gt;FunctionObject&lt;/a&gt;。戻りの型は、 &lt;code&gt;binary_op&lt;/code&gt; への入力として受け入れ可能でなければなりません</target>
        </trans-unit>
        <trans-unit id="b3370d580b1fcb202f8f70112bc4827a1508c9ab" translate="yes" xml:space="preserve">
          <source>unary &lt;a href=&quot;../named_req/functionobject&quot;&gt;FunctionObject&lt;/a&gt; that will be applied to each element of the input range. The return type must be acceptable as input to &lt;code&gt;binary_op&lt;/code&gt;.</source>
          <target state="translated">入力範囲の各要素に適用される単項&lt;a href=&quot;../named_req/functionobject&quot;&gt;FunctionObject&lt;/a&gt;。戻り値の型は、 &lt;code&gt;binary_op&lt;/code&gt; への入力として受け入れられる必要があります。</target>
        </trans-unit>
        <trans-unit id="758c496d534277408b682dc8b9c08c8a825413e7" translate="yes" xml:space="preserve">
          <source>unary minus</source>
          <target state="translated">単項マイナス</target>
        </trans-unit>
        <trans-unit id="48940f9d07a4b12cb9f65a5fa911d159938aabca" translate="yes" xml:space="preserve">
          <source>unary operation function object that will be applied.</source>
          <target state="translated">適用される単項演算関数オブジェクト。</target>
        </trans-unit>
        <trans-unit id="18130f1c3863f5bed8e2f9f254b2a9f47674720e" translate="yes" xml:space="preserve">
          <source>unary plus</source>
          <target state="translated">単項プラス</target>
        </trans-unit>
        <trans-unit id="e5ab8c4837bbd1f2bcb3eec5d30a252e4e962717" translate="yes" xml:space="preserve">
          <source>unary predicate</source>
          <target state="translated">単項述語</target>
        </trans-unit>
        <trans-unit id="18e5bbfca7127dee899111daaf859012550ffef8" translate="yes" xml:space="preserve">
          <source>unary predicate .</source>
          <target state="translated">単項述語</target>
        </trans-unit>
        <trans-unit id="74d37341e13c29bd8385e869dffe2e3e8854cb99" translate="yes" xml:space="preserve">
          <source>unary predicate which returns ​&lt;code&gt;false&lt;/code&gt; for the required element.</source>
          <target state="translated">返す単項述語 &lt;code&gt;false&lt;/code&gt; 必要な要素について。</target>
        </trans-unit>
        <trans-unit id="507ec850a7763a8b06ff20ec33ab552cc9594f56" translate="yes" xml:space="preserve">
          <source>unary predicate which returns ​&lt;code&gt;true&lt;/code&gt; for the elements expected to be found in the beginning of the range.</source>
          <target state="translated">返す単項述語 &lt;code&gt;true&lt;/code&gt; の要素については、範囲の先頭に見出されることが期待されます。</target>
        </trans-unit>
        <trans-unit id="fbfeca5238e64b0436ecd5a0cc5f8265bf9c4ae2" translate="yes" xml:space="preserve">
          <source>unary predicate which returns ​&lt;code&gt;true&lt;/code&gt; for the elements found in the beginning of the range.</source>
          <target state="translated">返す単項述語 &lt;code&gt;true&lt;/code&gt; の要素については、範囲の始まりで見つかりました。</target>
        </trans-unit>
        <trans-unit id="1f2ffc588e231fc02573480b0fcb4a83997e1b60" translate="yes" xml:space="preserve">
          <source>unary predicate which returns ​&lt;code&gt;true&lt;/code&gt; for the required element.</source>
          <target state="translated">返す単項述語 &lt;code&gt;true&lt;/code&gt; に必要な要素のために。</target>
        </trans-unit>
        <trans-unit id="a7d0c2002d2650f1cea475b1ca985ca9f695f5a4" translate="yes" xml:space="preserve">
          <source>unary predicate which returns ​&lt;code&gt;true&lt;/code&gt; for the required elements.</source>
          <target state="translated">返す単項述語 &lt;code&gt;true&lt;/code&gt; 必要な要素のために。</target>
        </trans-unit>
        <trans-unit id="8fae4b698d9f31caacc165dadac299b65834fbdd" translate="yes" xml:space="preserve">
          <source>unary predicate which returns ​&lt;code&gt;true&lt;/code&gt; if the element should be erased.</source>
          <target state="translated">返す単項述語 &lt;code&gt;true&lt;/code&gt; 要素を消去する必要がある場合。</target>
        </trans-unit>
        <trans-unit id="95b1abe85e5089414553c18dea45ec465063c626" translate="yes" xml:space="preserve">
          <source>unary predicate which returns ​&lt;code&gt;true&lt;/code&gt; if the element should be ordered before other elements.</source>
          <target state="translated">返す単項述語 &lt;code&gt;true&lt;/code&gt; 要素が他の要素の前に発注する必要があります。</target>
        </trans-unit>
        <trans-unit id="10034e6ccdab008db5df8f31fa62d62f76433ff3" translate="yes" xml:space="preserve">
          <source>unary predicate which returns ​&lt;code&gt;true&lt;/code&gt; if the element should be placed in d_first_true.</source>
          <target state="translated">返す単項述語 &lt;code&gt;true&lt;/code&gt; 要素がd_first_trueに配置する必要があります。</target>
        </trans-unit>
        <trans-unit id="dbb140f528158a502bde9011d73b219d94d84246" translate="yes" xml:space="preserve">
          <source>unary predicate which returns ​&lt;code&gt;true&lt;/code&gt; if the element should be removed.</source>
          <target state="translated">返す単項述語 &lt;code&gt;true&lt;/code&gt; 要素を削除する必要があります。</target>
        </trans-unit>
        <trans-unit id="83b4ab61734f719f5739bbf8a3442812e1290d60" translate="yes" xml:space="preserve">
          <source>unary predicate which returns ​&lt;code&gt;true&lt;/code&gt; if the element value should be replaced.</source>
          <target state="translated">返す単項述語 &lt;code&gt;true&lt;/code&gt; 要素の値を交換する必要がある場合。</target>
        </trans-unit>
        <trans-unit id="6a395431c0f027dae836bc29cda9cc18460d1fc4" translate="yes" xml:space="preserve">
          <source>unary_function</source>
          <target state="translated">unary_function</target>
        </trans-unit>
        <trans-unit id="fe68c1bab6be7151989a4177de754a18ae566d80" translate="yes" xml:space="preserve">
          <source>unary_negate</source>
          <target state="translated">unary_negate</target>
        </trans-unit>
        <trans-unit id="658375f1977756ebecf7c347be6dfa74cf8f46d9" translate="yes" xml:space="preserve">
          <source>unary_op</source>
          <target state="translated">unary_op</target>
        </trans-unit>
        <trans-unit id="3fe64293edd4673d030fc9eb0f5c23426e272907" translate="yes" xml:space="preserve">
          <source>unavailable for the specified timeout duration</source>
          <target state="translated">指定されたタイムアウト時間内に利用できない</target>
        </trans-unit>
        <trans-unit id="9d52e1d77e42e525f2f80d3d0cafafba9ac3f7b1" translate="yes" xml:space="preserve">
          <source>unavailable until specified time point has been reached</source>
          <target state="translated">指定された時間に達するまで利用できません</target>
        </trans-unit>
        <trans-unit id="025036f44d6b3998d0f3716c1a219c52749302e7" translate="yes" xml:space="preserve">
          <source>unbuffered</source>
          <target state="translated">unbuffered</target>
        </trans-unit>
        <trans-unit id="35775ae6c1cb7eccc2aaae13d39aa535d5d5c6fd" translate="yes" xml:space="preserve">
          <source>uncaught_exceptionuncaught_exceptions</source>
          <target state="translated">uncaught_exceptionuncaught_exceptions</target>
        </trans-unit>
        <trans-unit id="8012ff51a005eaa8ed8f4c08ccdce580f462fff6" translate="yes" xml:space="preserve">
          <source>unchanged</source>
          <target state="translated">unchanged</target>
        </trans-unit>
        <trans-unit id="ad21d637eb6997e03bf4492371678b6e04201515" translate="yes" xml:space="preserve">
          <source>unclear if cv-qualified &lt;code&gt;void&lt;/code&gt; and class types are literal types</source>
          <target state="translated">cv修飾された &lt;code&gt;void&lt;/code&gt; とクラス型がリテラル型であるかどうか不明</target>
        </trans-unit>
        <trans-unit id="790bab128198dbba0cc9472e65b1a007e8f7c285" translate="yes" xml:space="preserve">
          <source>unclear if deleted or inaccessible conversion function prevents conversion in ?:,</source>
          <target state="translated">削除されたかアクセスできない変換機能があると、 ?</target>
        </trans-unit>
        <trans-unit id="3a018104ebf7637ef757428c6af5364b571e8d86" translate="yes" xml:space="preserve">
          <source>unclear what header defines &lt;code&gt;u16streampos&lt;/code&gt; and &lt;code&gt;u32streampos&lt;/code&gt; or what their definitions are</source>
          <target state="translated">&lt;code&gt;u16streampos&lt;/code&gt; および &lt;code&gt;u32streampos&lt;/code&gt; を定義するヘッダー、またはそれらの定義が不明</target>
        </trans-unit>
        <trans-unit id="80de588afaeedd5f85264db00b67822765bcfa8d" translate="yes" xml:space="preserve">
          <source>unclear whether const-qualified variable template</source>
          <target state="translated">const修飾変数テンプレートかどうか不明</target>
        </trans-unit>
        <trans-unit id="cb29d1564b7b57c6f0a1c14033c8022808eedd8b" translate="yes" xml:space="preserve">
          <source>undeclare_no_pointers</source>
          <target state="translated">undeclare_no_pointers</target>
        </trans-unit>
        <trans-unit id="a13a550cb7c5dc0ab722bd59cbe6d93f37e6be0b" translate="yes" xml:space="preserve">
          <source>undeclare_reachable</source>
          <target state="translated">undeclare_reachable</target>
        </trans-unit>
        <trans-unit id="964eb66863424d49de610621450a3a6e50d56aa4" translate="yes" xml:space="preserve">
          <source>undefined behavior</source>
          <target state="translated">未定義動作</target>
        </trans-unit>
        <trans-unit id="b7fd100bd780fe9ff837673fd6ed31a0e4ae8ef3" translate="yes" xml:space="preserve">
          <source>undefined behavior was permitted, and all pointer subtraction was prohibited</source>
          <target state="translated">未定義の動作が許可され、すべてのポインタの減算が禁止されました。</target>
        </trans-unit>
        <trans-unit id="36e14f2c6b35cc9a0321a033c591b6ea1d4e4a21" translate="yes" xml:space="preserve">
          <source>underflow</source>
          <target state="translated">underflow</target>
        </trans-unit>
        <trans-unit id="d1ffe9b51d79c4fa460a3f0bb750525787098915" translate="yes" xml:space="preserve">
          <source>underflow_error</source>
          <target state="translated">underflow_error</target>
        </trans-unit>
        <trans-unit id="7d3c885bb29894be2b0b2f33bfba50654fc50a9a" translate="yes" xml:space="preserve">
          <source>underlying error code in the enumeration associated with &lt;code&gt;ecat&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ecat&lt;/code&gt; に関連付けられた列挙の根本的なエラーコード</target>
        </trans-unit>
        <trans-unit id="c83f2176546e5fc8d598ee3cded9b836da26a41e" translate="yes" xml:space="preserve">
          <source>underlying type</source>
          <target state="translated">きそがた</target>
        </trans-unit>
        <trans-unit id="26b3ef7e642dd1be49e10e6fb078a546cabbd995" translate="yes" xml:space="preserve">
          <source>underlying_type</source>
          <target state="translated">underlying_type</target>
        </trans-unit>
        <trans-unit id="9f78dc2da954ec4eed371daeae0fe0402144c934" translate="yes" xml:space="preserve">
          <source>unescaped_character</source>
          <target state="translated">unescaped_character</target>
        </trans-unit>
        <trans-unit id="e0b1d4f0ead7eed46f8ca735962106d5aeaa3919" translate="yes" xml:space="preserve">
          <source>unevaluated context use allowed</source>
          <target state="translated">未評価コンテキスト使用許可</target>
        </trans-unit>
        <trans-unit id="0a2a5152adb565126f85fdab04522e823af06a02" translate="yes" xml:space="preserve">
          <source>unevaluated uses of non-static data members not allowed</source>
          <target state="translated">静的でないデータメンバの評価されない使用は許可されていません</target>
        </trans-unit>
        <trans-unit id="fd2a27641c8303d93c5ee84d3dff15107feab6cf" translate="yes" xml:space="preserve">
          <source>unexpected</source>
          <target state="translated">unexpected</target>
        </trans-unit>
        <trans-unit id="80c6d0646dd1138223bbb984ffbb2c0eac261d7f" translate="yes" xml:space="preserve">
          <source>unexpected_handler</source>
          <target state="translated">unexpected_handler</target>
        </trans-unit>
        <trans-unit id="3fbaf3f32f1357d3cc62915fedf90d2cbf00dcf0" translate="yes" xml:space="preserve">
          <source>unextracts a character</source>
          <target state="translated">抜き文字</target>
        </trans-unit>
        <trans-unit id="0a02e4f0b1c22fb0c4a3ae2c83d0825cb6f2e4cd" translate="yes" xml:space="preserve">
          <source>unget</source>
          <target state="translated">unget</target>
        </trans-unit>
        <trans-unit id="8b77486db5e737dfba2f215ad3f09d26e7574ce4" translate="yes" xml:space="preserve">
          <source>ungetc</source>
          <target state="translated">ungetc</target>
        </trans-unit>
        <trans-unit id="bb5232ef1dfe04c3af31a86dc6a93ed8923d3a2d" translate="yes" xml:space="preserve">
          <source>ungetwc</source>
          <target state="translated">ungetwc</target>
        </trans-unit>
        <trans-unit id="175dc4e7331759ae14a1d1d1c7a43a3ae4a26f17" translate="yes" xml:space="preserve">
          <source>uniform random bit generator</source>
          <target state="translated">一様乱数ビット発生器</target>
        </trans-unit>
        <trans-unit id="b1d5ce9806ecdfb706d551bc915eb30bee952be4" translate="yes" xml:space="preserve">
          <source>uniform_int_distribution</source>
          <target state="translated">uniform_int_distribution</target>
        </trans-unit>
        <trans-unit id="fbe1ef844309107ffa464eae2f5d337150cbbad1" translate="yes" xml:space="preserve">
          <source>uniform_real_distribution</source>
          <target state="translated">uniform_real_distribution</target>
        </trans-unit>
        <trans-unit id="9f273eeff4382670d8c507ff3346d75a43a1349e" translate="yes" xml:space="preserve">
          <source>uninitialized_construct_using_allocator</source>
          <target state="translated">uninitialized_construct_using_allocator</target>
        </trans-unit>
        <trans-unit id="a6e4b316ebdc3cee6477f6f1779c1e9bf1ac782d" translate="yes" xml:space="preserve">
          <source>uninitialized_copy</source>
          <target state="translated">uninitialized_copy</target>
        </trans-unit>
        <trans-unit id="a0277f798cfd5c087f1fbe2550e952b23c00ff83" translate="yes" xml:space="preserve">
          <source>uninitialized_copy_n</source>
          <target state="translated">uninitialized_copy_n</target>
        </trans-unit>
        <trans-unit id="10c7087ed04f30491c3b209aba5c6bf5a7f871f5" translate="yes" xml:space="preserve">
          <source>uninitialized_default_construct</source>
          <target state="translated">uninitialized_default_construct</target>
        </trans-unit>
        <trans-unit id="a83370ca50fa3679a055a76ff4b52f8f1085b0d1" translate="yes" xml:space="preserve">
          <source>uninitialized_default_construct_n</source>
          <target state="translated">uninitialized_default_construct_n</target>
        </trans-unit>
        <trans-unit id="cd97423c5aff9470ea035c9b09bdbe3b2ecff6b0" translate="yes" xml:space="preserve">
          <source>uninitialized_fill</source>
          <target state="translated">uninitialized_fill</target>
        </trans-unit>
        <trans-unit id="469b23ff6cc07f5b84def4d705601b6bd78d0075" translate="yes" xml:space="preserve">
          <source>uninitialized_fill_n</source>
          <target state="translated">uninitialized_fill_n</target>
        </trans-unit>
        <trans-unit id="224f896bf55c6f421311a3052fc5ae9d69f01eac" translate="yes" xml:space="preserve">
          <source>uninitialized_move</source>
          <target state="translated">uninitialized_move</target>
        </trans-unit>
        <trans-unit id="805476cab25b8ad3b909d357ef2f842a1f2200ec" translate="yes" xml:space="preserve">
          <source>uninitialized_move_n</source>
          <target state="translated">uninitialized_move_n</target>
        </trans-unit>
        <trans-unit id="d212597aed0089b150433bc1f84952d4770f7372" translate="yes" xml:space="preserve">
          <source>uninitialized_value_construct</source>
          <target state="translated">uninitialized_value_construct</target>
        </trans-unit>
        <trans-unit id="d05dd703dff77f5cc297e3db79e43fb1dc51593f" translate="yes" xml:space="preserve">
          <source>uninitialized_value_construct_n</source>
          <target state="translated">uninitialized_value_construct_n</target>
        </trans-unit>
        <trans-unit id="67ad5a07a2b999e38f2228365318c33459ab727a" translate="yes" xml:space="preserve">
          <source>union</source>
          <target state="translated">union</target>
        </trans-unit>
        <trans-unit id="cac83341626b77e8876df545686110beef47fcac" translate="yes" xml:space="preserve">
          <source>union-like class</source>
          <target state="translated">ユニオンライクラス</target>
        </trans-unit>
        <trans-unit id="58037c0078d5f54e15e638cc0dd882a570b13c50" translate="yes" xml:space="preserve">
          <source>unique</source>
          <target state="translated">unique</target>
        </trans-unit>
        <trans-unit id="f7945cce8117d2be35a01d30d6f899e06cd4af41" translate="yes" xml:space="preserve">
          <source>unique type to look up</source>
          <target state="translated">固有種</target>
        </trans-unit>
        <trans-unit id="126c807ac8cfa577ddbca9e38e4002f1a9c9d7bf" translate="yes" xml:space="preserve">
          <source>unique_copy</source>
          <target state="translated">unique_copy</target>
        </trans-unit>
        <trans-unit id="dc6434ca9996cc83a0338afdb0b5dd8e8806c0bb" translate="yes" xml:space="preserve">
          <source>unique_lock</source>
          <target state="translated">unique_lock</target>
        </trans-unit>
        <trans-unit id="b54f40286198514e088bc8c63f115596bb8b6ec2" translate="yes" xml:space="preserve">
          <source>unique_ptr</source>
          <target state="translated">unique_ptr</target>
        </trans-unit>
        <trans-unit id="a9dab6b627511bec982459a355cbc6e384948883" translate="yes" xml:space="preserve">
          <source>unitbufnounitbuf</source>
          <target state="translated">unitbufnounitbuf</target>
        </trans-unit>
        <trans-unit id="9c1aeb2b04c9f1414d6272be8e4404571f4cb008" translate="yes" xml:space="preserve">
          <source>universal character name</source>
          <target state="translated">万能文字名</target>
        </trans-unit>
        <trans-unit id="043a3d1e3ac6b253053e7d0c3ade1fe9433b1279" translate="yes" xml:space="preserve">
          <source>universal character name, as defined in &lt;a href=&quot;escape&quot;&gt;escape sequences&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;escape&quot;&gt;エスケープシーケンスで&lt;/a&gt;定義されているユニバーサルキャラクター名</target>
        </trans-unit>
        <trans-unit id="2c715f2bee7985b7af5e05832508edc0c55e4a9e" translate="yes" xml:space="preserve">
          <source>unknown specialization</source>
          <target state="translated">未知専門</target>
        </trans-unit>
        <trans-unit id="e057301a2bd95cffda8e36495573f2d17ed89d10" translate="yes" xml:space="preserve">
          <source>unless signed integer overflow is defined to wrap</source>
          <target state="translated">符号付き整数オーバーフローが定義されていない限り</target>
        </trans-unit>
        <trans-unit id="41a2a5dd737d764f2c1be5ae777c86bc34030380" translate="yes" xml:space="preserve">
          <source>unless.</source>
          <target state="translated">unless.</target>
        </trans-unit>
        <trans-unit id="eff8ec10351afe6a12d58df3e9c71e363a37ee55" translate="yes" xml:space="preserve">
          <source>unlikely</source>
          <target state="translated">unlikely</target>
        </trans-unit>
        <trans-unit id="8ec4981102569463be3512984154c66c098b92c5" translate="yes" xml:space="preserve">
          <source>unlock</source>
          <target state="translated">unlock</target>
        </trans-unit>
        <trans-unit id="eb0a1c53e8d1137d0db1e7f50bfb5c280505c000" translate="yes" xml:space="preserve">
          <source>unlock_shared</source>
          <target state="translated">unlock_shared</target>
        </trans-unit>
        <trans-unit id="9d833939e15a9324410166db36e52b54193a5906" translate="yes" xml:space="preserve">
          <source>unlocks the associated mutex</source>
          <target state="translated">関連するミューテックスのロックを解除します。</target>
        </trans-unit>
        <trans-unit id="0ed598e17a30a3ebe7cbda0172c4459f9d5627d0" translate="yes" xml:space="preserve">
          <source>unlocks the associated mutex, if owned</source>
          <target state="translated">所有している場合は、関連するミューテックスのロックを解除します。</target>
        </trans-unit>
        <trans-unit id="693ef779b227bb3d1daac7e302e992cb427fea5b" translate="yes" xml:space="preserve">
          <source>unlocks the mutex</source>
          <target state="translated">ミューテックスのロックを解除する</target>
        </trans-unit>
        <trans-unit id="53ea6c3168f934be82e1b73e063fb7bc4abf425b" translate="yes" xml:space="preserve">
          <source>unlocks the mutex (shared ownership)</source>
          <target state="translated">ミューテックスのロックを解除します。</target>
        </trans-unit>
        <trans-unit id="1345c2ae74c36fe6a424651eaef822f36c0f38c1" translate="yes" xml:space="preserve">
          <source>unlocks the mutex, if owned, and acquires ownership of another</source>
          <target state="translated">所有している場合はミューテックスのロックを解除し、他のミューテックスの所有権を取得します。</target>
        </trans-unit>
        <trans-unit id="867b9a00623e417b4844f0dffcffb808848bad58" translate="yes" xml:space="preserve">
          <source>unnamed</source>
          <target state="translated">unnamed</target>
        </trans-unit>
        <trans-unit id="2ac502fa54173d59873effaebeb316eadbb02050" translate="yes" xml:space="preserve">
          <source>unnamed-namespace-definition</source>
          <target state="translated">unnamed-namespace-definition</target>
        </trans-unit>
        <trans-unit id="f6543242d1e57b263b165298cebc45e40852b155" translate="yes" xml:space="preserve">
          <source>unnecessary &lt;code&gt;dynamic_cast&lt;/code&gt; was performed</source>
          <target state="translated">不要な &lt;code&gt;dynamic_cast&lt;/code&gt; が実行されました</target>
        </trans-unit>
        <trans-unit id="4241cdc3f3b79dee6ff1fc022d73a6e82ae55325" translate="yes" xml:space="preserve">
          <source>unnecessary overloads provided</source>
          <target state="translated">不必要な過負荷が提供される</target>
        </trans-unit>
        <trans-unit id="2e7a0e58d4eb7753451b42d0eda5f17f720169da" translate="yes" xml:space="preserve">
          <source>unordered containers to compare</source>
          <target state="translated">比較のための順序のないコンテナ</target>
        </trans-unit>
        <trans-unit id="99b69c331f1635f9d3d4553dbd570561d5a6df23" translate="yes" xml:space="preserve">
          <source>unordered(inline constexpr)</source>
          <target state="translated">順番なし(インライン constexpr)</target>
        </trans-unit>
        <trans-unit id="6633608ebd1200dbc6897e9f6ee7c0709c309fd3" translate="yes" xml:space="preserve">
          <source>unordered_map</source>
          <target state="translated">unordered_map</target>
        </trans-unit>
        <trans-unit id="2add1fba585b5b6a732602ccf605b695935b969b" translate="yes" xml:space="preserve">
          <source>unordered_multimap</source>
          <target state="translated">unordered_multimap</target>
        </trans-unit>
        <trans-unit id="b554a66f8de4b345b5560aa3bb73038e3ecd6ad9" translate="yes" xml:space="preserve">
          <source>unordered_multiset</source>
          <target state="translated">unordered_multiset</target>
        </trans-unit>
        <trans-unit id="4b009c02677ff5ca6ea147eb8c22fef626b5b58b" translate="yes" xml:space="preserve">
          <source>unordered_set</source>
          <target state="translated">unordered_set</target>
        </trans-unit>
        <trans-unit id="53455d0f66a33389006668755c09552ecde1a3d3" translate="yes" xml:space="preserve">
          <source>unpack a pair returned by set.insert(), but only save the boolean.</source>
          <target state="translated">set.insert()によって返されたペアを展開します。</target>
        </trans-unit>
        <trans-unit id="fb97909cd15b95b5396ac489a36ee3f71d963588" translate="yes" xml:space="preserve">
          <source>unqualified</source>
          <target state="translated">unqualified</target>
        </trans-unit>
        <trans-unit id="7083d62b9d793134a7c10d3a61e378fecda46abd" translate="yes" xml:space="preserve">
          <source>unqualified definition in an outer namespace could define an entity declared,</source>
          <target state="translated">外部の名前空間での修飾されていない定義は、宣言されたエンティティを定義する可能性があります。</target>
        </trans-unit>
        <trans-unit id="a1863e588054a65c63941df4f8b7cad56cdf6e71" translate="yes" xml:space="preserve">
          <source>unqualified defns always refers to its namespace</source>
          <target state="translated">unqualified defns は常に名前空間を参照します。</target>
        </trans-unit>
        <trans-unit id="6fe5a62d77c9b61369bec56934f63ac8f6aadfb9" translate="yes" xml:space="preserve">
          <source>unqualified id-expressions</source>
          <target state="translated">非限定ID式</target>
        </trans-unit>
        <trans-unit id="cfa0749333847f6f914e53a7a89f5a473ec9c19a" translate="yes" xml:space="preserve">
          <source>unqualified name lookup for the name &lt;code&gt;std&lt;/code&gt;, which finds the declaration of namespace std in the header &lt;code&gt;&amp;lt;iostream&amp;gt;&lt;/code&gt;</source>
          <target state="translated">ヘッダー &lt;code&gt;&amp;lt;iostream&amp;gt;&lt;/code&gt; で名前空間stdの宣言を見つける、名前 &lt;code&gt;std&lt;/code&gt; の非修飾名ルックアップ</target>
        </trans-unit>
        <trans-unit id="eedf9c7b24f619bcb706aa2ef5b84283fdcdcb76" translate="yes" xml:space="preserve">
          <source>unqualified-id</source>
          <target state="translated">unqualified-id</target>
        </trans-unit>
        <trans-unit id="e6ce8b20587867948a28ce0960db184cc53a506a" translate="yes" xml:space="preserve">
          <source>unqualified-idattr(optional)</source>
          <target state="translated">unqualified-idattr(optional)</target>
        </trans-unit>
        <trans-unit id="a7920d8ed43a5d4a2523f230fb2de5a1a9027bd5" translate="yes" xml:space="preserve">
          <source>unreachable_sentinel_t</source>
          <target state="translated">unreachable_sentinel_t</target>
        </trans-unit>
        <trans-unit id="b8ae0aa01bb3cf254bb35b9eb3884127609bf250" translate="yes" xml:space="preserve">
          <source>unscoped enumeration</source>
          <target state="translated">アンスコープ列挙</target>
        </trans-unit>
        <trans-unit id="ad25b81df17bc55d118ac1c9f6367bcf0b26e442" translate="yes" xml:space="preserve">
          <source>unscoped enumeration type</source>
          <target state="translated">アンスコープ列挙型</target>
        </trans-unit>
        <trans-unit id="dfc3f049f835cc7c90a22a708892dea41f3f11a9" translate="yes" xml:space="preserve">
          <source>unsequenced</source>
          <target state="translated">unsequenced</target>
        </trans-unit>
        <trans-unit id="f962268f5849ea89fe0bd54dc67c04129fb505a2" translate="yes" xml:space="preserve">
          <source>unsetf</source>
          <target state="translated">unsetf</target>
        </trans-unit>
        <trans-unit id="aa81750b23852766b6c1312c52c74e8e43376ec7" translate="yes" xml:space="preserve">
          <source>unshift</source>
          <target state="translated">unshift</target>
        </trans-unit>
        <trans-unit id="9861ca25819cf567c1a1412d7e7cec57941c3856" translate="yes" xml:space="preserve">
          <source>unsigned</source>
          <target state="translated">unsigned</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
