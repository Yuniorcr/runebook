<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="cpp">
    <body>
      <group id="cpp">
        <trans-unit id="0740f71b8b3e615ee44922b091c7288ef86d4d22" translate="yes" xml:space="preserve">
          <source>std::unordered_set&amp;lt;Key,Hash,KeyEqual,Allocator&amp;gt;::count</source>
          <target state="translated">std::unordered_set&amp;lt;Key,Hash,KeyEqual,Allocator&amp;gt;::count</target>
        </trans-unit>
        <trans-unit id="9245da4bae935db9fc4c811f5b22a8e12f505bcc" translate="yes" xml:space="preserve">
          <source>std::unordered_set&amp;lt;Key,Hash,KeyEqual,Allocator&amp;gt;::emplace</source>
          <target state="translated">std::unordered_set&amp;lt;Key,Hash,KeyEqual,Allocator&amp;gt;::emplace</target>
        </trans-unit>
        <trans-unit id="2e3f68bcc01eb4412e5cadbda534b97ecfee75dd" translate="yes" xml:space="preserve">
          <source>std::unordered_set&amp;lt;Key,Hash,KeyEqual,Allocator&amp;gt;::emplace_hint</source>
          <target state="translated">std::unordered_set&amp;lt;Key,Hash,KeyEqual,Allocator&amp;gt;::emplace_hint</target>
        </trans-unit>
        <trans-unit id="279f50ed1b899cc9121b4d27b98a293b2cbf269a" translate="yes" xml:space="preserve">
          <source>std::unordered_set&amp;lt;Key,Hash,KeyEqual,Allocator&amp;gt;::empty</source>
          <target state="translated">std::unordered_set&amp;lt;Key,Hash,KeyEqual,Allocator&amp;gt;::empty</target>
        </trans-unit>
        <trans-unit id="4b8423d9695d9848ffd520b8cc056b5a28c4022b" translate="yes" xml:space="preserve">
          <source>std::unordered_set&amp;lt;Key,Hash,KeyEqual,Allocator&amp;gt;::end(size_type), std::unordered_set&amp;lt;Key,Hash,KeyEqual,Allocator&amp;gt;::cend(size_type)</source>
          <target state="translated">std :: unordered_set &amp;lt;Key、Hash、KeyEqual、Allocator&amp;gt; :: end（size_type）、std :: unordered_set &amp;lt;Key、Hash、KeyEqual、Allocator&amp;gt; :: cend（size_type）</target>
        </trans-unit>
        <trans-unit id="ba869c020df9e1fb1a7cbc719b65561150faae39" translate="yes" xml:space="preserve">
          <source>std::unordered_set&amp;lt;Key,Hash,KeyEqual,Allocator&amp;gt;::end, std::unordered_set&amp;lt;Key,Hash,KeyEqual,Allocator&amp;gt;::cend</source>
          <target state="translated">std :: unordered_set &amp;lt;Key、Hash、KeyEqual、Allocator&amp;gt; :: end、std :: unordered_set &amp;lt;Key、Hash、KeyEqual、Allocator&amp;gt; :: cend</target>
        </trans-unit>
        <trans-unit id="304baa78a1357fbacfbc4674533d249647f9e545" translate="yes" xml:space="preserve">
          <source>std::unordered_set&amp;lt;Key,Hash,KeyEqual,Allocator&amp;gt;::equal_range</source>
          <target state="translated">std::unordered_set&amp;lt;Key,Hash,KeyEqual,Allocator&amp;gt;::equal_range</target>
        </trans-unit>
        <trans-unit id="aeb6b5997fdb8960a01eec607f02b91bac2dde0d" translate="yes" xml:space="preserve">
          <source>std::unordered_set&amp;lt;Key,Hash,KeyEqual,Allocator&amp;gt;::erase</source>
          <target state="translated">std::unordered_set&amp;lt;Key,Hash,KeyEqual,Allocator&amp;gt;::erase</target>
        </trans-unit>
        <trans-unit id="ed506e9e3f6ebd57f1098481c1074a3d55801e9f" translate="yes" xml:space="preserve">
          <source>std::unordered_set&amp;lt;Key,Hash,KeyEqual,Allocator&amp;gt;::extract</source>
          <target state="translated">std::unordered_set&amp;lt;Key,Hash,KeyEqual,Allocator&amp;gt;::extract</target>
        </trans-unit>
        <trans-unit id="69a7996341cf0a0ffe77bfb2ef2281a96c53868f" translate="yes" xml:space="preserve">
          <source>std::unordered_set&amp;lt;Key,Hash,KeyEqual,Allocator&amp;gt;::find</source>
          <target state="translated">std::unordered_set&amp;lt;Key,Hash,KeyEqual,Allocator&amp;gt;::find</target>
        </trans-unit>
        <trans-unit id="b5b448fce353622ac80a714108f1b78f7cd729e7" translate="yes" xml:space="preserve">
          <source>std::unordered_set&amp;lt;Key,Hash,KeyEqual,Allocator&amp;gt;::get_allocator</source>
          <target state="translated">std::unordered_set&amp;lt;Key,Hash,KeyEqual,Allocator&amp;gt;::get_allocator</target>
        </trans-unit>
        <trans-unit id="3cf6f4f05b4c262ec3403a3409a9bf5a97d01c14" translate="yes" xml:space="preserve">
          <source>std::unordered_set&amp;lt;Key,Hash,KeyEqual,Allocator&amp;gt;::hash_function</source>
          <target state="translated">std::unordered_set&amp;lt;Key,Hash,KeyEqual,Allocator&amp;gt;::hash_function</target>
        </trans-unit>
        <trans-unit id="0dcef9709e3a2ddd96ae3e34daca0944a53f7055" translate="yes" xml:space="preserve">
          <source>std::unordered_set&amp;lt;Key,Hash,KeyEqual,Allocator&amp;gt;::insert</source>
          <target state="translated">std::unordered_set&amp;lt;Key,Hash,KeyEqual,Allocator&amp;gt;::insert</target>
        </trans-unit>
        <trans-unit id="a61c2a05b00d11274133c0cfc89ded23c8c33446" translate="yes" xml:space="preserve">
          <source>std::unordered_set&amp;lt;Key,Hash,KeyEqual,Allocator&amp;gt;::key_eq</source>
          <target state="translated">std::unordered_set&amp;lt;Key,Hash,KeyEqual,Allocator&amp;gt;::key_eq</target>
        </trans-unit>
        <trans-unit id="fbdb1c2552dabbc4c9b49eb6e58685c87601818c" translate="yes" xml:space="preserve">
          <source>std::unordered_set&amp;lt;Key,Hash,KeyEqual,Allocator&amp;gt;::load_factor</source>
          <target state="translated">std::unordered_set&amp;lt;Key,Hash,KeyEqual,Allocator&amp;gt;::load_factor</target>
        </trans-unit>
        <trans-unit id="b50e285e4587045393b63690b343fb0c1ca91403" translate="yes" xml:space="preserve">
          <source>std::unordered_set&amp;lt;Key,Hash,KeyEqual,Allocator&amp;gt;::max_bucket_count</source>
          <target state="translated">std::unordered_set&amp;lt;Key,Hash,KeyEqual,Allocator&amp;gt;::max_bucket_count</target>
        </trans-unit>
        <trans-unit id="16cdb2ae1b0e300fd79d4a47a00aa4755d8658c0" translate="yes" xml:space="preserve">
          <source>std::unordered_set&amp;lt;Key,Hash,KeyEqual,Allocator&amp;gt;::max_load_factor</source>
          <target state="translated">std::unordered_set&amp;lt;Key,Hash,KeyEqual,Allocator&amp;gt;::max_load_factor</target>
        </trans-unit>
        <trans-unit id="c9008d42ffc896b392accfa1f239827f3e3dd443" translate="yes" xml:space="preserve">
          <source>std::unordered_set&amp;lt;Key,Hash,KeyEqual,Allocator&amp;gt;::max_size</source>
          <target state="translated">std::unordered_set&amp;lt;Key,Hash,KeyEqual,Allocator&amp;gt;::max_size</target>
        </trans-unit>
        <trans-unit id="7b1f516fe0085fa0b28d296036a9682188dd8052" translate="yes" xml:space="preserve">
          <source>std::unordered_set&amp;lt;Key,Hash,KeyEqual,Allocator&amp;gt;::merge</source>
          <target state="translated">std::unordered_set&amp;lt;Key,Hash,KeyEqual,Allocator&amp;gt;::merge</target>
        </trans-unit>
        <trans-unit id="f02f65e0b0178fc4e73378065c6f7313baa9201d" translate="yes" xml:space="preserve">
          <source>std::unordered_set&amp;lt;Key,Hash,KeyEqual,Allocator&amp;gt;::operator=</source>
          <target state="translated">std::unordered_set&amp;lt;Key,Hash,KeyEqual,Allocator&amp;gt;::operator=</target>
        </trans-unit>
        <trans-unit id="f012aabbac75a0e1252b5e69c2f30f4bbd94f756" translate="yes" xml:space="preserve">
          <source>std::unordered_set&amp;lt;Key,Hash,KeyEqual,Allocator&amp;gt;::rehash</source>
          <target state="translated">std::unordered_set&amp;lt;Key,Hash,KeyEqual,Allocator&amp;gt;::rehash</target>
        </trans-unit>
        <trans-unit id="5df6f84f8e2f244446e46f1d1af3d2c89069a466" translate="yes" xml:space="preserve">
          <source>std::unordered_set&amp;lt;Key,Hash,KeyEqual,Allocator&amp;gt;::reserve</source>
          <target state="translated">std::unordered_set&amp;lt;Key,Hash,KeyEqual,Allocator&amp;gt;::reserve</target>
        </trans-unit>
        <trans-unit id="96cd5878557ed590b378a2133eceaf2db398b8b7" translate="yes" xml:space="preserve">
          <source>std::unordered_set&amp;lt;Key,Hash,KeyEqual,Allocator&amp;gt;::size</source>
          <target state="translated">std::unordered_set&amp;lt;Key,Hash,KeyEqual,Allocator&amp;gt;::size</target>
        </trans-unit>
        <trans-unit id="e8f407ad528e9d5ff94d00764c71f99ae940674d" translate="yes" xml:space="preserve">
          <source>std::unordered_set&amp;lt;Key,Hash,KeyEqual,Allocator&amp;gt;::swap</source>
          <target state="translated">std::unordered_set&amp;lt;Key,Hash,KeyEqual,Allocator&amp;gt;::swap</target>
        </trans-unit>
        <trans-unit id="0ab1c3ca30bbb2e0a8f33963d4ce07536ac011f0" translate="yes" xml:space="preserve">
          <source>std::unordered_set&amp;lt;Key,Hash,KeyEqual,Allocator&amp;gt;::unordered_set</source>
          <target state="translated">std::unordered_set&amp;lt;Key,Hash,KeyEqual,Allocator&amp;gt;::unordered_set</target>
        </trans-unit>
        <trans-unit id="dfd5d4ec1e2db34e66ff3c33911c879cb24d37f3" translate="yes" xml:space="preserve">
          <source>std::unordered_set&amp;lt;Key,Hash,KeyEqual,Allocator&amp;gt;::~unordered_set</source>
          <target state="translated">std::unordered_set&amp;lt;Key,Hash,KeyEqual,Allocator&amp;gt;::~unordered_set</target>
        </trans-unit>
        <trans-unit id="61ddf554ed581de311c7edc3fc72304ebd441c1d" translate="yes" xml:space="preserve">
          <source>std::unordered_set::bucket</source>
          <target state="translated">std::unordered_set::bucket</target>
        </trans-unit>
        <trans-unit id="ba728a8ef98b4e46ff32f5ea86fa5b8afd5d1d5b" translate="yes" xml:space="preserve">
          <source>std::unordered_set::bucket_count</source>
          <target state="translated">std::unordered_set::bucket_count</target>
        </trans-unit>
        <trans-unit id="4b9b3aefe9ad07f3909fad2d776b8c6df8280aa4" translate="yes" xml:space="preserve">
          <source>std::unordered_set::bucket_size</source>
          <target state="translated">std::unordered_set::bucket_size</target>
        </trans-unit>
        <trans-unit id="d352bad13a49ba24923651c94ddbe5f9c02a64e4" translate="yes" xml:space="preserve">
          <source>std::unordered_set::cbegin</source>
          <target state="translated">std::unordered_set::cbegin</target>
        </trans-unit>
        <trans-unit id="0eeab795808e33590146f8736a4b63f842101e8a" translate="yes" xml:space="preserve">
          <source>std::unordered_set::clear</source>
          <target state="translated">std::unordered_set::clear</target>
        </trans-unit>
        <trans-unit id="c49129c6b22d6e163113c00f5aa6f3f8179bf31d" translate="yes" xml:space="preserve">
          <source>std::unordered_set::contains</source>
          <target state="translated">std::unordered_set::contains</target>
        </trans-unit>
        <trans-unit id="d3c8685acd08eec67ba24f87fd41c3452aab368c" translate="yes" xml:space="preserve">
          <source>std::unordered_set::count</source>
          <target state="translated">std::unordered_set::count</target>
        </trans-unit>
        <trans-unit id="0c7a74abb34a12740512584fbdfee22a34aa49ca" translate="yes" xml:space="preserve">
          <source>std::unordered_set::emplace</source>
          <target state="translated">std::unordered_set::emplace</target>
        </trans-unit>
        <trans-unit id="3d2ce216c31412b50e62a922b193d53af95904f3" translate="yes" xml:space="preserve">
          <source>std::unordered_set::emplace_hint</source>
          <target state="translated">std::unordered_set::emplace_hint</target>
        </trans-unit>
        <trans-unit id="2139ba145467cc913f86293eb147592ecb84f0c7" translate="yes" xml:space="preserve">
          <source>std::unordered_set::empty</source>
          <target state="translated">std::unordered_set::empty</target>
        </trans-unit>
        <trans-unit id="a1ff3eb9c043b5d6c6b79e0d8d8e6750fb1a130e" translate="yes" xml:space="preserve">
          <source>std::unordered_set::end</source>
          <target state="translated">std::unordered_set::end</target>
        </trans-unit>
        <trans-unit id="0da409030e7ffbd2762ea223aa337a88f5df46c1" translate="yes" xml:space="preserve">
          <source>std::unordered_set::end(size_type)</source>
          <target state="translated">std::unordered_set::end(size_type)</target>
        </trans-unit>
        <trans-unit id="9de31a4cb67f70c6a9392903fcfe4c361f2144db" translate="yes" xml:space="preserve">
          <source>std::unordered_set::equal_range</source>
          <target state="translated">std::unordered_set::equal_range</target>
        </trans-unit>
        <trans-unit id="95181ec2d4a75fc9f8eb067cdde27eaafcd8f232" translate="yes" xml:space="preserve">
          <source>std::unordered_set::erase</source>
          <target state="translated">std::unordered_set::erase</target>
        </trans-unit>
        <trans-unit id="f967fd982dc571f09c0940a2d2f685e61c30b460" translate="yes" xml:space="preserve">
          <source>std::unordered_set::extract</source>
          <target state="translated">std::unordered_set::extract</target>
        </trans-unit>
        <trans-unit id="6078c300de02289b2b15a8bb6f6f2f0c4fb795b3" translate="yes" xml:space="preserve">
          <source>std::unordered_set::find</source>
          <target state="translated">std::unordered_set::find</target>
        </trans-unit>
        <trans-unit id="76cac004303316ae5a1781211a22fdca556d084b" translate="yes" xml:space="preserve">
          <source>std::unordered_set::get_allocator</source>
          <target state="translated">std::unordered_set::get_allocator</target>
        </trans-unit>
        <trans-unit id="6102624b82578bbd641f90b520f90e31b1230b69" translate="yes" xml:space="preserve">
          <source>std::unordered_set::hash_function</source>
          <target state="translated">std::unordered_set::hash_function</target>
        </trans-unit>
        <trans-unit id="56bd259a6db13eb6ed72d60a06a4fb2dd84628ba" translate="yes" xml:space="preserve">
          <source>std::unordered_set::insert</source>
          <target state="translated">std::unordered_set::insert</target>
        </trans-unit>
        <trans-unit id="2c64e0d71abe91973397ef27ed25981faf6ea9f0" translate="yes" xml:space="preserve">
          <source>std::unordered_set::key_eq</source>
          <target state="translated">std::unordered_set::key_eq</target>
        </trans-unit>
        <trans-unit id="ceb7ab51bd95141e9f9c04d12dd65a3853c60b83" translate="yes" xml:space="preserve">
          <source>std::unordered_set::load_factor</source>
          <target state="translated">std::unordered_set::load_factor</target>
        </trans-unit>
        <trans-unit id="2cc64f17c32a6d1dbfe5a41f72eeba4261f67790" translate="yes" xml:space="preserve">
          <source>std::unordered_set::max_bucket_count</source>
          <target state="translated">std::unordered_set::max_bucket_count</target>
        </trans-unit>
        <trans-unit id="e362c35d57f48ecacf3e371643651e2ba0dc1faa" translate="yes" xml:space="preserve">
          <source>std::unordered_set::max_load_factor</source>
          <target state="translated">std::unordered_set::max_load_factor</target>
        </trans-unit>
        <trans-unit id="6c9e42fcbe284de5fceab381103a0df83ecaa166" translate="yes" xml:space="preserve">
          <source>std::unordered_set::max_size</source>
          <target state="translated">std::unordered_set::max_size</target>
        </trans-unit>
        <trans-unit id="ab2d523527ba818e7f1f44f4ed5983d7a45a83eb" translate="yes" xml:space="preserve">
          <source>std::unordered_set::merge</source>
          <target state="translated">std::unordered_set::merge</target>
        </trans-unit>
        <trans-unit id="6ff590ca733e26618e417d4e2b3064d9438054e0" translate="yes" xml:space="preserve">
          <source>std::unordered_set::operator=</source>
          <target state="translated">std::unordered_set::operator=</target>
        </trans-unit>
        <trans-unit id="fc80a2456e987de4c774bf00fe930b2de537cb07" translate="yes" xml:space="preserve">
          <source>std::unordered_set::rehash</source>
          <target state="translated">std::unordered_set::rehash</target>
        </trans-unit>
        <trans-unit id="44637a136527cec2323f9a65ba572f1512a78241" translate="yes" xml:space="preserve">
          <source>std::unordered_set::reserve</source>
          <target state="translated">std::unordered_set::reserve</target>
        </trans-unit>
        <trans-unit id="94bc42d4394df28d75d54d941673c7b9729c7d8d" translate="yes" xml:space="preserve">
          <source>std::unordered_set::size</source>
          <target state="translated">std::unordered_set::size</target>
        </trans-unit>
        <trans-unit id="450f1086178f15f2ef5be0e50788c334c2cfb18f" translate="yes" xml:space="preserve">
          <source>std::unordered_set::swap</source>
          <target state="translated">std::unordered_set::swap</target>
        </trans-unit>
        <trans-unit id="741ba1b36c85f3f3034f8c5038ddc96ad471b03c" translate="yes" xml:space="preserve">
          <source>std::unordered_set::unordered_set</source>
          <target state="translated">std::unordered_set::unordered_set</target>
        </trans-unit>
        <trans-unit id="3780ae7aa9e23bcd31d290d5f3c63c38c2db8ed3" translate="yes" xml:space="preserve">
          <source>std::unordered_set::~unordered_set</source>
          <target state="translated">std::unordered_set::~unordered_set</target>
        </trans-unit>
        <trans-unit id="3ea0a87f0529a54532faca2c8e53d1504d20f774" translate="yes" xml:space="preserve">
          <source>std::unwrap_ref_decay</source>
          <target state="translated">std::unwrap_ref_decay</target>
        </trans-unit>
        <trans-unit id="ba4c962434f4f7f8e9bb014fff9bf01b19f3d6c7" translate="yes" xml:space="preserve">
          <source>std::unwrap_reference, std::unwrap_ref_decay</source>
          <target state="translated">std::unwrap_reference,std::unwrap_ref_decay</target>
        </trans-unit>
        <trans-unit id="c738cca0d55bf2961ba0c9b255bf5992838e833a" translate="yes" xml:space="preserve">
          <source>std::upper_bound</source>
          <target state="translated">std::upper_bound</target>
        </trans-unit>
        <trans-unit id="cc0694e1533ef0611c52f620ad09ca7a6caa11c2" translate="yes" xml:space="preserve">
          <source>std::uppercase</source>
          <target state="translated">std::uppercase</target>
        </trans-unit>
        <trans-unit id="3d6a126e7c10e7a5176bce6eafa829073ac0d5fd" translate="yes" xml:space="preserve">
          <source>std::uppercase, std::nouppercase</source>
          <target state="translated">std::大文字、std::nouppercase</target>
        </trans-unit>
        <trans-unit id="589463e00203601a63833d2516f84aa946841b24" translate="yes" xml:space="preserve">
          <source>std::use_facet</source>
          <target state="translated">std::use_facet</target>
        </trans-unit>
        <trans-unit id="28bf129dd988f78e073c3c02ec1fcdeaea7327c5" translate="yes" xml:space="preserve">
          <source>std::uses_allocator</source>
          <target state="translated">std::uses_allocator</target>
        </trans-unit>
        <trans-unit id="3a85ec30e2e1197be898f80c0e06e702ff41e8a0" translate="yes" xml:space="preserve">
          <source>std::uses_allocator&amp;lt;std::function&amp;gt;</source>
          <target state="translated">std::uses_allocator&amp;lt;std::function&amp;gt;</target>
        </trans-unit>
        <trans-unit id="d665b6871237758e21f3a55df0702b43c77542e7" translate="yes" xml:space="preserve">
          <source>std::uses_allocator&amp;lt;std::packaged_task&amp;gt;</source>
          <target state="translated">std::uses_allocator&amp;lt;std::packaged_task&amp;gt;</target>
        </trans-unit>
        <trans-unit id="05325bbe7b79f93ce916f1c342f0c00f971293e9" translate="yes" xml:space="preserve">
          <source>std::uses_allocator&amp;lt;std::priority_queue&amp;gt;</source>
          <target state="translated">std::uses_allocator&amp;lt;std::priority_queue&amp;gt;</target>
        </trans-unit>
        <trans-unit id="2566e76f49b0fed50bef79d6bb5ed21b0650f947" translate="yes" xml:space="preserve">
          <source>std::uses_allocator&amp;lt;std::promise&amp;gt;</source>
          <target state="translated">std::uses_allocator&amp;lt;std::promise&amp;gt;</target>
        </trans-unit>
        <trans-unit id="315fe9f6619fc56df893be01c121c3a65c67f691" translate="yes" xml:space="preserve">
          <source>std::uses_allocator&amp;lt;std::queue&amp;gt;</source>
          <target state="translated">std::uses_allocator&amp;lt;std::queue&amp;gt;</target>
        </trans-unit>
        <trans-unit id="5b604af1c11bd6231a7961a0d572a63be2f0ccfe" translate="yes" xml:space="preserve">
          <source>std::uses_allocator&amp;lt;std::stack&amp;gt;</source>
          <target state="translated">std::uses_allocator&amp;lt;std::stack&amp;gt;</target>
        </trans-unit>
        <trans-unit id="cada8858bad8820c064cc271b51dabf8d3abe9df" translate="yes" xml:space="preserve">
          <source>std::uses_allocator&amp;lt;std::tuple&amp;gt;</source>
          <target state="translated">std::uses_allocator&amp;lt;std::tuple&amp;gt;</target>
        </trans-unit>
        <trans-unit id="0e15fc3fb557727ba04e6ddc94d2d8ecb85e6d31" translate="yes" xml:space="preserve">
          <source>std::uses_allocator&lt;small&gt;&amp;lt;std::function&amp;gt;&lt;/small&gt;</source>
          <target state="translated">std::uses_allocator&lt;small&gt;&amp;lt;std::function&amp;gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="104dbc91848c2f1b7383e85fd6da03b6eb92d3d3" translate="yes" xml:space="preserve">
          <source>std::uses_allocator&lt;small&gt;&amp;lt;std::priority_queue&amp;gt;&lt;/small&gt;</source>
          <target state="translated">std::uses_allocator&lt;small&gt;&amp;lt;std::priority_queue&amp;gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="80666c082b03574ad72ef795912a51e9a11dfb40" translate="yes" xml:space="preserve">
          <source>std::uses_allocator&lt;small&gt;&amp;lt;std::queue&amp;gt;&lt;/small&gt;</source>
          <target state="translated">std::uses_allocator&lt;small&gt;&amp;lt;std::queue&amp;gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="131faf6a162183c1cccfe7fb594a777c0a5b22af" translate="yes" xml:space="preserve">
          <source>std::uses_allocator&lt;small&gt;&amp;lt;std::stack&amp;gt;&lt;/small&gt;</source>
          <target state="translated">std::uses_allocator&lt;small&gt;&amp;lt;std::stack&amp;gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="21b52ae0294522048e74fb5fefff218a4dd5612f" translate="yes" xml:space="preserve">
          <source>std::uses_allocator&lt;small&gt;&amp;lt;std::tuple&amp;gt;&lt;/small&gt;</source>
          <target state="translated">std::uses_allocator&lt;small&gt;&amp;lt;std::tuple&amp;gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="38728e10bbd6ff1298aa597ebf85be65b64de5db" translate="yes" xml:space="preserve">
          <source>std::uses_allocator_construction_args</source>
          <target state="translated">std::uses_allocator_construction_args</target>
        </trans-unit>
        <trans-unit id="4535383d3da888f0c9038785c11915d12c82ad62" translate="yes" xml:space="preserve">
          <source>std::va_list</source>
          <target state="translated">std::va_list</target>
        </trans-unit>
        <trans-unit id="9368045950614b7f65b7b418ac1080c47baf18a1" translate="yes" xml:space="preserve">
          <source>std::valarray</source>
          <target state="translated">std::valarray</target>
        </trans-unit>
        <trans-unit id="929318d686cf6618b9aba9d65d331c68979a165e" translate="yes" xml:space="preserve">
          <source>std::valarray&amp;lt;T&amp;gt;::apply</source>
          <target state="translated">std::valarray&amp;lt;T&amp;gt;::apply</target>
        </trans-unit>
        <trans-unit id="98374053443d341b61ec5c3973ac3ef613218de3" translate="yes" xml:space="preserve">
          <source>std::valarray&amp;lt;T&amp;gt;::cshift</source>
          <target state="translated">std::valarray&amp;lt;T&amp;gt;::cshift</target>
        </trans-unit>
        <trans-unit id="31d2849c2edf86119a7cd5ee145e8a435a4a8fe5" translate="yes" xml:space="preserve">
          <source>std::valarray&amp;lt;T&amp;gt;::max</source>
          <target state="translated">std::valarray&amp;lt;T&amp;gt;::max</target>
        </trans-unit>
        <trans-unit id="a799d6283a9fa81a7d08f5413b566718804e1f5c" translate="yes" xml:space="preserve">
          <source>std::valarray&amp;lt;T&amp;gt;::min</source>
          <target state="translated">std::valarray&amp;lt;T&amp;gt;::min</target>
        </trans-unit>
        <trans-unit id="5d4e1bb0891011ef6693435ea4908a24b241d47b" translate="yes" xml:space="preserve">
          <source>std::valarray&amp;lt;T&amp;gt;::operator+,-,~,!</source>
          <target state="translated">std::valarray&amp;lt;T&amp;gt;::operator+,-,~,!</target>
        </trans-unit>
        <trans-unit id="6c5dbe391806c026646bbfc3ee83719ad6885e54" translate="yes" xml:space="preserve">
          <source>std::valarray&amp;lt;T&amp;gt;::operator+=,-=,*=,/=,%=,&amp;amp;=,|=,&amp;lt;&amp;lt;=,&amp;gt;&amp;gt;=</source>
          <target state="translated">std::valarray&amp;lt;T&amp;gt;::operator+=,-=,*=,/=,%=,&amp;amp;=,|=,&amp;lt;&amp;lt;=,&amp;gt;&amp;gt;=</target>
        </trans-unit>
        <trans-unit id="c1895f9c74a706ed9190d36cfb2c5e24d9f53b29" translate="yes" xml:space="preserve">
          <source>std::valarray&amp;lt;T&amp;gt;::operator=</source>
          <target state="translated">std::valarray&amp;lt;T&amp;gt;::operator=</target>
        </trans-unit>
        <trans-unit id="58709bf863a0041dd6c5f9402e171779fac61a62" translate="yes" xml:space="preserve">
          <source>std::valarray&amp;lt;T&amp;gt;::operator[]</source>
          <target state="translated">std::valarray&amp;lt;T&amp;gt;::operator[]</target>
        </trans-unit>
        <trans-unit id="f493a436941c561216316145bcce97b5bce70097" translate="yes" xml:space="preserve">
          <source>std::valarray&amp;lt;T&amp;gt;::resize</source>
          <target state="translated">std::valarray&amp;lt;T&amp;gt;::resize</target>
        </trans-unit>
        <trans-unit id="f890d3c7d45e991f10cd7dcb88607156815bbb2d" translate="yes" xml:space="preserve">
          <source>std::valarray&amp;lt;T&amp;gt;::shift</source>
          <target state="translated">std::valarray&amp;lt;T&amp;gt;::shift</target>
        </trans-unit>
        <trans-unit id="13c9a746453c9d2aac1b0cbfba3be0eacc99e25e" translate="yes" xml:space="preserve">
          <source>std::valarray&amp;lt;T&amp;gt;::size</source>
          <target state="translated">std::valarray&amp;lt;T&amp;gt;::size</target>
        </trans-unit>
        <trans-unit id="16f686d4a46a28182b06d09ae989942cba54aee1" translate="yes" xml:space="preserve">
          <source>std::valarray&amp;lt;T&amp;gt;::sum</source>
          <target state="translated">std::valarray&amp;lt;T&amp;gt;::sum</target>
        </trans-unit>
        <trans-unit id="88c10d25fb8420d365f2477e760fead26ffa19e1" translate="yes" xml:space="preserve">
          <source>std::valarray&amp;lt;T&amp;gt;::swap</source>
          <target state="translated">std::valarray&amp;lt;T&amp;gt;::swap</target>
        </trans-unit>
        <trans-unit id="ea85b01faf0123cfd8413933289a83c1374ea256" translate="yes" xml:space="preserve">
          <source>std::valarray&amp;lt;T&amp;gt;::valarray</source>
          <target state="translated">std::valarray&amp;lt;T&amp;gt;::valarray</target>
        </trans-unit>
        <trans-unit id="828606836ee69cfab79de591fdb84715e6641c9a" translate="yes" xml:space="preserve">
          <source>std::valarray&amp;lt;T&amp;gt;::~valarray</source>
          <target state="translated">std::valarray&amp;lt;T&amp;gt;::~valarray</target>
        </trans-unit>
        <trans-unit id="f3c7a63c5ab62f7c20821a41f88afe634d05a072" translate="yes" xml:space="preserve">
          <source>std::valarray::apply</source>
          <target state="translated">std::valarray::apply</target>
        </trans-unit>
        <trans-unit id="41e567aa99a01d06fd383e0f35cfd017a8a78941" translate="yes" xml:space="preserve">
          <source>std::valarray::cshift</source>
          <target state="translated">std::valarray::cshift</target>
        </trans-unit>
        <trans-unit id="545b126d82d07771016af81002d7b6d458a5cfe4" translate="yes" xml:space="preserve">
          <source>std::valarray::max</source>
          <target state="translated">std::valarray::max</target>
        </trans-unit>
        <trans-unit id="9d542ada99d5edeb7cc071a4c619665146daf7d7" translate="yes" xml:space="preserve">
          <source>std::valarray::min</source>
          <target state="translated">std::valarray::min</target>
        </trans-unit>
        <trans-unit id="43f314b0cf1d8dc1d7b9c9682b22c786ed76f36c" translate="yes" xml:space="preserve">
          <source>std::valarray::operator=</source>
          <target state="translated">std::valarray::operator=</target>
        </trans-unit>
        <trans-unit id="2f7efafcd4c5536361302a6da2f36b52671278fe" translate="yes" xml:space="preserve">
          <source>std::valarray::operator[]</source>
          <target state="translated">std::valarray::operator[]</target>
        </trans-unit>
        <trans-unit id="eecd3240869ba7f3865137a16596fa54593d7a97" translate="yes" xml:space="preserve">
          <source>std::valarray::operators</source>
          <target state="translated">std::valarray::operators</target>
        </trans-unit>
        <trans-unit id="ea0f79137dd1902ee3644e144b8044c5bac89437" translate="yes" xml:space="preserve">
          <source>std::valarray::resize</source>
          <target state="translated">std::valarray::resize</target>
        </trans-unit>
        <trans-unit id="6ac2787794f2597b15a8d4325a86a26ba263e920" translate="yes" xml:space="preserve">
          <source>std::valarray::shift</source>
          <target state="translated">std::valarray::shift</target>
        </trans-unit>
        <trans-unit id="f4c9b690ca66a46cd9e8eb8f3685a3e925df19a9" translate="yes" xml:space="preserve">
          <source>std::valarray::size</source>
          <target state="translated">std::valarray::size</target>
        </trans-unit>
        <trans-unit id="52f236c8c31743a961332fc7db6612d1f63d76c7" translate="yes" xml:space="preserve">
          <source>std::valarray::sum</source>
          <target state="translated">std::valarray::sum</target>
        </trans-unit>
        <trans-unit id="39aacce201ebf6c52315883c66be371ae1278f2e" translate="yes" xml:space="preserve">
          <source>std::valarray::swap</source>
          <target state="translated">std::valarray::swap</target>
        </trans-unit>
        <trans-unit id="f62151184694edbf48591223a3dbfc3521eac001" translate="yes" xml:space="preserve">
          <source>std::valarray::valarray</source>
          <target state="translated">std::valarray::valarray</target>
        </trans-unit>
        <trans-unit id="f3312bb00f2b078a4528e14a8ae456512d4265ad" translate="yes" xml:space="preserve">
          <source>std::valarray::~valarray</source>
          <target state="translated">std::valarray::~valarray</target>
        </trans-unit>
        <trans-unit id="bde564c71c3870d7f43877f3947044dedcee2bde" translate="yes" xml:space="preserve">
          <source>std::variant</source>
          <target state="translated">std::variant</target>
        </trans-unit>
        <trans-unit id="3597abb57a66c24c51f8e4d7a0ce611bfbb97a4f" translate="yes" xml:space="preserve">
          <source>std::variant&amp;lt;Types...&amp;gt;::emplace</source>
          <target state="translated">std::variant&amp;lt;Types...&amp;gt;::emplace</target>
        </trans-unit>
        <trans-unit id="86b4c6eb9a69c38d25e02dae607a1487084ae0bf" translate="yes" xml:space="preserve">
          <source>std::variant&amp;lt;Types...&amp;gt;::index</source>
          <target state="translated">std::variant&amp;lt;Types...&amp;gt;::index</target>
        </trans-unit>
        <trans-unit id="17fff7a17b5d3a0cdf7317b0b1a3b75786084b9f" translate="yes" xml:space="preserve">
          <source>std::variant&amp;lt;Types...&amp;gt;::swap</source>
          <target state="translated">std::variant&amp;lt;Types...&amp;gt;::swap</target>
        </trans-unit>
        <trans-unit id="44b27b7c5e0a7c66245e870095d712214c9c1e63" translate="yes" xml:space="preserve">
          <source>std::variant&amp;lt;Types...&amp;gt;::valueless_by_exception</source>
          <target state="translated">std::variant&amp;lt;Types...&amp;gt;::valueless_by_exception</target>
        </trans-unit>
        <trans-unit id="a30e9d01851e2acd3fa62189f2de00d4446480bb" translate="yes" xml:space="preserve">
          <source>std::variant&amp;lt;Types...&amp;gt;::variant</source>
          <target state="translated">std::variant&amp;lt;Types...&amp;gt;::variant</target>
        </trans-unit>
        <trans-unit id="f2fd93f9050790d8df4276aa05512dc5a5d28b62" translate="yes" xml:space="preserve">
          <source>std::variant&amp;lt;Types...&amp;gt;::~variant</source>
          <target state="translated">std::variant&amp;lt;Types...&amp;gt;::~variant</target>
        </trans-unit>
        <trans-unit id="89ce85dbdfea0d7f78b5388c7425a35fdb2dd444" translate="yes" xml:space="preserve">
          <source>std::variant::emplace</source>
          <target state="translated">std::variant::emplace</target>
        </trans-unit>
        <trans-unit id="0b100774f7aa61c95475259fe02f5fb4cb4929f7" translate="yes" xml:space="preserve">
          <source>std::variant::index</source>
          <target state="translated">std::variant::index</target>
        </trans-unit>
        <trans-unit id="d392ec1368240baa289cfa6e437ed13d37b7be08" translate="yes" xml:space="preserve">
          <source>std::variant::operator=</source>
          <target state="translated">std::variant::operator=</target>
        </trans-unit>
        <trans-unit id="5f6444dd3d873b0d842778ca60aa64d6dada0788" translate="yes" xml:space="preserve">
          <source>std::variant::swap</source>
          <target state="translated">std::variant::swap</target>
        </trans-unit>
        <trans-unit id="81cbfef3008a3930c202d2ac6690e3d3beb0e88f" translate="yes" xml:space="preserve">
          <source>std::variant::valueless_by_exception</source>
          <target state="translated">std::variant::valueless_by_exception</target>
        </trans-unit>
        <trans-unit id="fb3ff7d6b3f0c44079429d7bce5bc0dc78383d3e" translate="yes" xml:space="preserve">
          <source>std::variant::variant</source>
          <target state="translated">std::variant::variant</target>
        </trans-unit>
        <trans-unit id="b4f9eff265386ec549dd4403cbd7525996ae2190" translate="yes" xml:space="preserve">
          <source>std::variant::~variant</source>
          <target state="translated">std::variant::~variant</target>
        </trans-unit>
        <trans-unit id="f0c6effd83225be32469afd4fc8a46525f69705d" translate="yes" xml:space="preserve">
          <source>std::variant_alternative, std::variant_alternative_t</source>
          <target state="translated">std::variant_alternative,std::variant_alternative_t</target>
        </trans-unit>
        <trans-unit id="7e5c9d7b8fa62b090ee0b3069909faa78cbdd09e" translate="yes" xml:space="preserve">
          <source>std::variant_alternative_t</source>
          <target state="translated">std::variant_alternative_t</target>
        </trans-unit>
        <trans-unit id="9f0da9256e10d5bf3c09018506871abba3e1479b" translate="yes" xml:space="preserve">
          <source>std::variant_npos</source>
          <target state="translated">std::variant_npos</target>
        </trans-unit>
        <trans-unit id="e9e3b4598d1c42907db85e60364f4baecb1fadd3" translate="yes" xml:space="preserve">
          <source>std::variant_size, std::variant_size_v</source>
          <target state="translated">std::variant_size,std::variant_size_v</target>
        </trans-unit>
        <trans-unit id="db83dc5dba02bf6efbb2176f86f46cde37cb02c7" translate="yes" xml:space="preserve">
          <source>std::variant_size_v</source>
          <target state="translated">std::variant_size_v</target>
        </trans-unit>
        <trans-unit id="b96923e27fc77d813c83ceae5561392c3da28bbc" translate="yes" xml:space="preserve">
          <source>std::vector</source>
          <target state="translated">std::vector</target>
        </trans-unit>
        <trans-unit id="bf858e3a4d40d27171f58a7d1c7d8d94b7de839a" translate="yes" xml:space="preserve">
          <source>std::vector&amp;lt;T,Allocator&amp;gt;::assign</source>
          <target state="translated">std::vector&amp;lt;T,Allocator&amp;gt;::assign</target>
        </trans-unit>
        <trans-unit id="40edc41ce7e435a73e75f09192a87e3f46ad62c7" translate="yes" xml:space="preserve">
          <source>std::vector&amp;lt;T,Allocator&amp;gt;::at</source>
          <target state="translated">std::vector&amp;lt;T,Allocator&amp;gt;::at</target>
        </trans-unit>
        <trans-unit id="0ad62d7355fa6a792cdd8b6d9c8b8f92836582fc" translate="yes" xml:space="preserve">
          <source>std::vector&amp;lt;T,Allocator&amp;gt;::back</source>
          <target state="translated">std::vector&amp;lt;T,Allocator&amp;gt;::back</target>
        </trans-unit>
        <trans-unit id="eda81920c57a02890d8afc1de590cb0e381305af" translate="yes" xml:space="preserve">
          <source>std::vector&amp;lt;T,Allocator&amp;gt;::begin, std::vector&amp;lt;T,Allocator&amp;gt;::cbegin</source>
          <target state="translated">std :: vector &amp;lt;T、Allocator&amp;gt; :: begin、std :: vector &amp;lt;T、Allocator&amp;gt; :: cbegin</target>
        </trans-unit>
        <trans-unit id="bee0c8f500238ec683501a04c4e123c80110e894" translate="yes" xml:space="preserve">
          <source>std::vector&amp;lt;T,Allocator&amp;gt;::capacity</source>
          <target state="translated">std::vector&amp;lt;T,Allocator&amp;gt;::capacity</target>
        </trans-unit>
        <trans-unit id="604d647443b418a38d84618590eb552f49d5ae1a" translate="yes" xml:space="preserve">
          <source>std::vector&amp;lt;T,Allocator&amp;gt;::clear</source>
          <target state="translated">std::vector&amp;lt;T,Allocator&amp;gt;::clear</target>
        </trans-unit>
        <trans-unit id="2703b24fbe18ad0aec78ca1032ef438a97b43a04" translate="yes" xml:space="preserve">
          <source>std::vector&amp;lt;T,Allocator&amp;gt;::data</source>
          <target state="translated">std::vector&amp;lt;T,Allocator&amp;gt;::data</target>
        </trans-unit>
        <trans-unit id="aa31595e1c7239ce7d4a908a223a711f37e02bc7" translate="yes" xml:space="preserve">
          <source>std::vector&amp;lt;T,Allocator&amp;gt;::emplace</source>
          <target state="translated">std::vector&amp;lt;T,Allocator&amp;gt;::emplace</target>
        </trans-unit>
        <trans-unit id="7846fd885cc9327812a01f114a70b530441c50e8" translate="yes" xml:space="preserve">
          <source>std::vector&amp;lt;T,Allocator&amp;gt;::emplace_back</source>
          <target state="translated">std::vector&amp;lt;T,Allocator&amp;gt;::emplace_back</target>
        </trans-unit>
        <trans-unit id="138ea3ca89f04bf2f725174e1903422a8f7ad5e0" translate="yes" xml:space="preserve">
          <source>std::vector&amp;lt;T,Allocator&amp;gt;::empty</source>
          <target state="translated">std::vector&amp;lt;T,Allocator&amp;gt;::empty</target>
        </trans-unit>
        <trans-unit id="74b31aacfcb0cde036a0243da21aa6d90ba9fd0a" translate="yes" xml:space="preserve">
          <source>std::vector&amp;lt;T,Allocator&amp;gt;::end, std::vector&amp;lt;T,Allocator&amp;gt;::cend</source>
          <target state="translated">std :: vector &amp;lt;T、Allocator&amp;gt; :: end、std :: vector &amp;lt;T、Allocator&amp;gt; :: cend</target>
        </trans-unit>
        <trans-unit id="2caf40402c94a49b2b09c3e89760994cbba8c37c" translate="yes" xml:space="preserve">
          <source>std::vector&amp;lt;T,Allocator&amp;gt;::erase</source>
          <target state="translated">std::vector&amp;lt;T,Allocator&amp;gt;::erase</target>
        </trans-unit>
        <trans-unit id="a8b6c3667c21e49e1ae1e714b8d086ebbd95866f" translate="yes" xml:space="preserve">
          <source>std::vector&amp;lt;T,Allocator&amp;gt;::front</source>
          <target state="translated">std::vector&amp;lt;T,Allocator&amp;gt;::front</target>
        </trans-unit>
        <trans-unit id="c28e888bc327578c7e59be6f7421c5df622375c6" translate="yes" xml:space="preserve">
          <source>std::vector&amp;lt;T,Allocator&amp;gt;::get_allocator</source>
          <target state="translated">std::vector&amp;lt;T,Allocator&amp;gt;::get_allocator</target>
        </trans-unit>
        <trans-unit id="d0e462bd60ac60fdc4ff55843c59f878424558b4" translate="yes" xml:space="preserve">
          <source>std::vector&amp;lt;T,Allocator&amp;gt;::insert</source>
          <target state="translated">std::vector&amp;lt;T,Allocator&amp;gt;::insert</target>
        </trans-unit>
        <trans-unit id="772d6d664f276a1ce18eadab19eb59de5e8c3694" translate="yes" xml:space="preserve">
          <source>std::vector&amp;lt;T,Allocator&amp;gt;::max_size</source>
          <target state="translated">std::vector&amp;lt;T,Allocator&amp;gt;::max_size</target>
        </trans-unit>
        <trans-unit id="e8e42964c443db8e24168f61bcfe7a33b512bfa5" translate="yes" xml:space="preserve">
          <source>std::vector&amp;lt;T,Allocator&amp;gt;::operator=</source>
          <target state="translated">std::vector&amp;lt;T,Allocator&amp;gt;::operator=</target>
        </trans-unit>
        <trans-unit id="044c3009775ca2c0b994eb9298794a99a5994445" translate="yes" xml:space="preserve">
          <source>std::vector&amp;lt;T,Allocator&amp;gt;::operator[]</source>
          <target state="translated">std::vector&amp;lt;T,Allocator&amp;gt;::operator[]</target>
        </trans-unit>
        <trans-unit id="cbb25c85be3427fb055e8c79d3af61e6a4bae2f0" translate="yes" xml:space="preserve">
          <source>std::vector&amp;lt;T,Allocator&amp;gt;::pop_back</source>
          <target state="translated">std::vector&amp;lt;T,Allocator&amp;gt;::pop_back</target>
        </trans-unit>
        <trans-unit id="344b7257bbeea5c706f98fdb40af7c4a9dc9d172" translate="yes" xml:space="preserve">
          <source>std::vector&amp;lt;T,Allocator&amp;gt;::push_back</source>
          <target state="translated">std::vector&amp;lt;T,Allocator&amp;gt;::push_back</target>
        </trans-unit>
        <trans-unit id="1cbdffc22565f9c6fab5ea03738bb9a6ffb3f0a1" translate="yes" xml:space="preserve">
          <source>std::vector&amp;lt;T,Allocator&amp;gt;::rbegin, std::vector&amp;lt;T,Allocator&amp;gt;::crbegin</source>
          <target state="translated">std :: vector &amp;lt;T、Allocator&amp;gt; :: rbegin、std :: vector &amp;lt;T、Allocator&amp;gt; :: crbegin</target>
        </trans-unit>
        <trans-unit id="c20ff8fc57e5d7e82700a1c9323c830a26ab49f7" translate="yes" xml:space="preserve">
          <source>std::vector&amp;lt;T,Allocator&amp;gt;::rend, std::vector&amp;lt;T,Allocator&amp;gt;::crend</source>
          <target state="translated">std :: vector &amp;lt;T、Allocator&amp;gt; :: rend、std :: vector &amp;lt;T、Allocator&amp;gt; :: crend</target>
        </trans-unit>
        <trans-unit id="42fdca9474f428755770352751174272dac75e8f" translate="yes" xml:space="preserve">
          <source>std::vector&amp;lt;T,Allocator&amp;gt;::reserve</source>
          <target state="translated">std::vector&amp;lt;T,Allocator&amp;gt;::reserve</target>
        </trans-unit>
        <trans-unit id="eda731691883bd4f39ee187d25f9b8fd7bb887a3" translate="yes" xml:space="preserve">
          <source>std::vector&amp;lt;T,Allocator&amp;gt;::resize</source>
          <target state="translated">std::vector&amp;lt;T,Allocator&amp;gt;::resize</target>
        </trans-unit>
        <trans-unit id="b3a289deb30697000b60c664e6bb5a3b998449d1" translate="yes" xml:space="preserve">
          <source>std::vector&amp;lt;T,Allocator&amp;gt;::shrink_to_fit</source>
          <target state="translated">std::vector&amp;lt;T,Allocator&amp;gt;::shrink_to_fit</target>
        </trans-unit>
        <trans-unit id="53e9fcc67057082c199c523ddc3aefcbe9ba181d" translate="yes" xml:space="preserve">
          <source>std::vector&amp;lt;T,Allocator&amp;gt;::size</source>
          <target state="translated">std::vector&amp;lt;T,Allocator&amp;gt;::size</target>
        </trans-unit>
        <trans-unit id="778f1778c10d53e284f5b9acfa1f1a36c60637d5" translate="yes" xml:space="preserve">
          <source>std::vector&amp;lt;T,Allocator&amp;gt;::swap</source>
          <target state="translated">std::vector&amp;lt;T,Allocator&amp;gt;::swap</target>
        </trans-unit>
        <trans-unit id="d4a40b69e5682339cf7811c3589405a34dd0f75b" translate="yes" xml:space="preserve">
          <source>std::vector&amp;lt;T,Allocator&amp;gt;::vector</source>
          <target state="translated">std::vector&amp;lt;T,Allocator&amp;gt;::vector</target>
        </trans-unit>
        <trans-unit id="c5ef0d3d5a948dfc0c8e135639396edee4d92e90" translate="yes" xml:space="preserve">
          <source>std::vector&amp;lt;T,Allocator&amp;gt;::~vector</source>
          <target state="translated">std::vector&amp;lt;T,Allocator&amp;gt;::~vector</target>
        </trans-unit>
        <trans-unit id="5ec726661e9c612e5b02e41a07f7d4b5cdd2492f" translate="yes" xml:space="preserve">
          <source>std::vector&amp;lt;bool&amp;gt;</source>
          <target state="translated">std::vector&amp;lt;bool&amp;gt;</target>
        </trans-unit>
        <trans-unit id="671f24eb77f1beb896b771584706d0243e89cb90" translate="yes" xml:space="preserve">
          <source>std::vector&amp;lt;bool&amp;gt;::reference</source>
          <target state="translated">std::vector&amp;lt;bool&amp;gt;::reference</target>
        </trans-unit>
        <trans-unit id="7adfb0f2f46b34be7f9884090190b362fc815eba" translate="yes" xml:space="preserve">
          <source>std::vector&amp;lt;bool&amp;gt;::reference::flip</source>
          <target state="translated">std::vector&amp;lt;bool&amp;gt;::reference::flip</target>
        </trans-unit>
        <trans-unit id="108e7ec5a8d7bb97ab42d1d79a6d74e91eb9b895" translate="yes" xml:space="preserve">
          <source>std::vector&amp;lt;bool&amp;gt;::reference::operator bool</source>
          <target state="translated">std :: vector &amp;lt;bool&amp;gt; :: reference :: operator bool</target>
        </trans-unit>
        <trans-unit id="49bf430d09375407ace302137d8b12bda890ffd2" translate="yes" xml:space="preserve">
          <source>std::vector&amp;lt;bool&amp;gt;::reference::operator=</source>
          <target state="translated">std::vector&amp;lt;bool&amp;gt;::reference::operator=</target>
        </trans-unit>
        <trans-unit id="c186e081cd55f1efffa96e3173ba7a3bfa253b37" translate="yes" xml:space="preserve">
          <source>std::vector&amp;lt;bool&amp;gt;::reference::~reference</source>
          <target state="translated">std::vector&amp;lt;bool&amp;gt;::reference::~reference</target>
        </trans-unit>
        <trans-unit id="693b98627bf5a796725ea3574e45604b6d5423d6" translate="yes" xml:space="preserve">
          <source>std::vector&amp;lt;bool,Allocator&amp;gt;::flip</source>
          <target state="translated">std::vector&amp;lt;bool,Allocator&amp;gt;::flip</target>
        </trans-unit>
        <trans-unit id="fa1e1e5853b1674d348a1aeafba3d68f394b09d3" translate="yes" xml:space="preserve">
          <source>std::vector&amp;lt;bool,Allocator&amp;gt;::swap</source>
          <target state="translated">std::vector&amp;lt;bool,Allocator&amp;gt;::swap</target>
        </trans-unit>
        <trans-unit id="851148cdade71d3d0a80bfb704d9ad9304b198f0" translate="yes" xml:space="preserve">
          <source>std::vector::assign</source>
          <target state="translated">std::vector::assign</target>
        </trans-unit>
        <trans-unit id="d05d3f729c980dfd7ed02d2ff86b82e7902a0c3e" translate="yes" xml:space="preserve">
          <source>std::vector::at</source>
          <target state="translated">std::vector::at</target>
        </trans-unit>
        <trans-unit id="7e556a8953c4261d94cc19b3be6ff166d8ca10e4" translate="yes" xml:space="preserve">
          <source>std::vector::back</source>
          <target state="translated">std::vector::back</target>
        </trans-unit>
        <trans-unit id="a3572b921fc78aa88cff8cab20bff3bc7ef4d63d" translate="yes" xml:space="preserve">
          <source>std::vector::capacity</source>
          <target state="translated">std::vector::capacity</target>
        </trans-unit>
        <trans-unit id="460f9f243c825a22b45f292e39c6e5e1a56ab334" translate="yes" xml:space="preserve">
          <source>std::vector::cbegin</source>
          <target state="translated">std::vector::cbegin</target>
        </trans-unit>
        <trans-unit id="ff0f6151be376cd0d70a0bb5169017bc32854cd9" translate="yes" xml:space="preserve">
          <source>std::vector::clear</source>
          <target state="translated">std::vector::clear</target>
        </trans-unit>
        <trans-unit id="a5e194d9e8fbeafa8407c9815ab55a588b496009" translate="yes" xml:space="preserve">
          <source>std::vector::data</source>
          <target state="translated">std::vector::data</target>
        </trans-unit>
        <trans-unit id="af6a179a9927cb00a823380ba6a8bdcff562e7d0" translate="yes" xml:space="preserve">
          <source>std::vector::emplace</source>
          <target state="translated">std::vector::emplace</target>
        </trans-unit>
        <trans-unit id="5ec7ba640b0ee4bbb0e28c20bf4c48d41e50b89f" translate="yes" xml:space="preserve">
          <source>std::vector::emplace_back</source>
          <target state="translated">std::vector::emplace_back</target>
        </trans-unit>
        <trans-unit id="b4fc7fa6a09253db6816e42ecb3fa7fb2092274a" translate="yes" xml:space="preserve">
          <source>std::vector::empty</source>
          <target state="translated">std::vector::empty</target>
        </trans-unit>
        <trans-unit id="5ba0a8af5bbe4469d13e8671990f4eb82768d53a" translate="yes" xml:space="preserve">
          <source>std::vector::end</source>
          <target state="translated">std::vector::end</target>
        </trans-unit>
        <trans-unit id="9e394e168116d605d02f47919a861f469154c8ec" translate="yes" xml:space="preserve">
          <source>std::vector::erase</source>
          <target state="translated">std::vector::erase</target>
        </trans-unit>
        <trans-unit id="41b0e1c5db3a5bb5bdb09141ea7f29fda7c3fa57" translate="yes" xml:space="preserve">
          <source>std::vector::flip</source>
          <target state="translated">std::vector::flip</target>
        </trans-unit>
        <trans-unit id="eed861422eb61c62e7b8581b62bd5c8034a40a24" translate="yes" xml:space="preserve">
          <source>std::vector::front</source>
          <target state="translated">std::vector::front</target>
        </trans-unit>
        <trans-unit id="71aed48fadb615bcf5dc929814c416d7bc80d883" translate="yes" xml:space="preserve">
          <source>std::vector::get_allocator</source>
          <target state="translated">std::vector::get_allocator</target>
        </trans-unit>
        <trans-unit id="79cc6dec3c5805826336aeab2219555227277e84" translate="yes" xml:space="preserve">
          <source>std::vector::insert</source>
          <target state="translated">std::vector::insert</target>
        </trans-unit>
        <trans-unit id="6e85e2d53b59d991ebb7996ba76db6d293105f30" translate="yes" xml:space="preserve">
          <source>std::vector::max_size</source>
          <target state="translated">std::vector::max_size</target>
        </trans-unit>
        <trans-unit id="f738b24a32e95d8a3797f2a58ba099acf9f9483d" translate="yes" xml:space="preserve">
          <source>std::vector::operator=</source>
          <target state="translated">std::vector::operator=</target>
        </trans-unit>
        <trans-unit id="bcd7824108d5f422cc2de2247000a35586c7244f" translate="yes" xml:space="preserve">
          <source>std::vector::operator[]</source>
          <target state="translated">std::vector::operator[]</target>
        </trans-unit>
        <trans-unit id="4f4524bd683677a0dae8a8a3ae0fe4f7da9a6d82" translate="yes" xml:space="preserve">
          <source>std::vector::pop_back</source>
          <target state="translated">std::vector::pop_back</target>
        </trans-unit>
        <trans-unit id="45030051bbd7cae45701819f2212fd73366c0d8a" translate="yes" xml:space="preserve">
          <source>std::vector::push_back</source>
          <target state="translated">std::vector::push_back</target>
        </trans-unit>
        <trans-unit id="2c88a084d0f81caa2a24b9e7ae081aa8bbcdf775" translate="yes" xml:space="preserve">
          <source>std::vector::rbegin</source>
          <target state="translated">std::vector::rbegin</target>
        </trans-unit>
        <trans-unit id="b3250ca37ce454ef62208c73063a3d44886c8935" translate="yes" xml:space="preserve">
          <source>std::vector::reference</source>
          <target state="translated">std::vector::reference</target>
        </trans-unit>
        <trans-unit id="db34bf5dce962f8923c8fc9863de0d325ea3f7a1" translate="yes" xml:space="preserve">
          <source>std::vector::rend</source>
          <target state="translated">std::vector::rend</target>
        </trans-unit>
        <trans-unit id="6be7a7796e571ec22eae3f9a8c9ce9ed0986f394" translate="yes" xml:space="preserve">
          <source>std::vector::reserve</source>
          <target state="translated">std::vector::reserve</target>
        </trans-unit>
        <trans-unit id="7377e588eda31f0d98f62bac9c183a16863f35f8" translate="yes" xml:space="preserve">
          <source>std::vector::resize</source>
          <target state="translated">std::vector::resize</target>
        </trans-unit>
        <trans-unit id="d1b244e72334f911ff23a49a71c6faff8d495fd2" translate="yes" xml:space="preserve">
          <source>std::vector::shrink_to_fit</source>
          <target state="translated">std::vector::shrink_to_fit</target>
        </trans-unit>
        <trans-unit id="4928c6aa4d0492adc6e48cd9ebda81fd244bfd5b" translate="yes" xml:space="preserve">
          <source>std::vector::size</source>
          <target state="translated">std::vector::size</target>
        </trans-unit>
        <trans-unit id="118897d7b1ad4b1ae9671e4912bda7744210cf31" translate="yes" xml:space="preserve">
          <source>std::vector::swap</source>
          <target state="translated">std::vector::swap</target>
        </trans-unit>
        <trans-unit id="bcb05555aefc1bceb9b4a11816d9afe17900d1b5" translate="yes" xml:space="preserve">
          <source>std::vector::vector</source>
          <target state="translated">std::vector::vector</target>
        </trans-unit>
        <trans-unit id="61b10ba76aba9fe9020c732fdd8ef325e4c0a58c" translate="yes" xml:space="preserve">
          <source>std::vector::~vector</source>
          <target state="translated">std::vector::~vector</target>
        </trans-unit>
        <trans-unit id="684dd96761ff53922f94ec415e5a1546ba3b6e25" translate="yes" xml:space="preserve">
          <source>std::visit</source>
          <target state="translated">std::visit</target>
        </trans-unit>
        <trans-unit id="c27f799a38dc78ab1225cf1a2acf1189b3746c1d" translate="yes" xml:space="preserve">
          <source>std::void_t</source>
          <target state="translated">std::void_t</target>
        </trans-unit>
        <trans-unit id="73a6af1d0dd6faf5dcf6f1866ac0c41a93de00f6" translate="yes" xml:space="preserve">
          <source>std::vprintf, std::vfprintf, std::vsprintf, std::vsnprintf</source>
          <target state="translated">std::vprintf,std::vfprintf,std::vsprintf,std::vsnprintf</target>
        </trans-unit>
        <trans-unit id="1de7131c201f8bf2c2192c1562d306ba70200fb4" translate="yes" xml:space="preserve">
          <source>std::vscanf, std::vfscanf, std::vsscanf</source>
          <target state="translated">std::vscanf,std::vfscanf,std::vsscanf</target>
        </trans-unit>
        <trans-unit id="4fb2284cc080059c3b6b48345d961711eaced4be" translate="yes" xml:space="preserve">
          <source>std::vsprintf</source>
          <target state="translated">std::vsprintf</target>
        </trans-unit>
        <trans-unit id="38100bc671015eda807b0f5e996b5e1b39270ae0" translate="yes" xml:space="preserve">
          <source>std::vsscanf</source>
          <target state="translated">std::vsscanf</target>
        </trans-unit>
        <trans-unit id="9dcfec1720b3cc90f6dd2df8be7ff7a930a20837" translate="yes" xml:space="preserve">
          <source>std::vwprintf</source>
          <target state="translated">std::vwprintf</target>
        </trans-unit>
        <trans-unit id="6e2a997a21099951067778d953da37acbe73a8e9" translate="yes" xml:space="preserve">
          <source>std::vwprintf, std::vfwprintf, std::vswprintf</source>
          <target state="translated">std::vwprintf,std::vfwprintf,std::vswprintf</target>
        </trans-unit>
        <trans-unit id="3704eff5b2bdcac31bb13ec91ff982832dfdf6ea" translate="yes" xml:space="preserve">
          <source>std::vwscanf</source>
          <target state="translated">std::vwscanf</target>
        </trans-unit>
        <trans-unit id="0f9cd7e869439b8b7216a82e706895212e877722" translate="yes" xml:space="preserve">
          <source>std::vwscanf, std::vfwscanf, std::vswscanf</source>
          <target state="translated">std::vwscanf,std::vfwscanf,std::vswscanf</target>
        </trans-unit>
        <trans-unit id="2b0015f3b72b21f67d1dc5d5b9e9707994213a26" translate="yes" xml:space="preserve">
          <source>std::wbuffer_convert</source>
          <target state="translated">std::wbuffer_convert</target>
        </trans-unit>
        <trans-unit id="78f13784f3d69c498a17b33534cda038cfb2d4a2" translate="yes" xml:space="preserve">
          <source>std::wbuffer_convert&amp;lt;Codecvt,Elem,Tr&amp;gt;::rdbuf</source>
          <target state="translated">std::wbuffer_convert&amp;lt;Codecvt,Elem,Tr&amp;gt;::rdbuf</target>
        </trans-unit>
        <trans-unit id="f05927ade70f562e745b6d1965dcdb0c8a3e88b6" translate="yes" xml:space="preserve">
          <source>std::wbuffer_convert&amp;lt;Codecvt,Elem,Tr&amp;gt;::state</source>
          <target state="translated">std::wbuffer_convert&amp;lt;Codecvt,Elem,Tr&amp;gt;::state</target>
        </trans-unit>
        <trans-unit id="24bcb5ce17b295f86e9ba226a95a8b9f4016746d" translate="yes" xml:space="preserve">
          <source>std::wbuffer_convert&amp;lt;Codecvt,Elem,Tr&amp;gt;::wbuffer_convert</source>
          <target state="translated">std::wbuffer_convert&amp;lt;Codecvt,Elem,Tr&amp;gt;::wbuffer_convert</target>
        </trans-unit>
        <trans-unit id="5e34e5a7a14c7de16ee75e878612dda8a828b9e1" translate="yes" xml:space="preserve">
          <source>std::wbuffer_convert&amp;lt;Codecvt,Elem,Tr&amp;gt;::~wbuffer_convert</source>
          <target state="translated">std::wbuffer_convert&amp;lt;Codecvt,Elem,Tr&amp;gt;::~wbuffer_convert</target>
        </trans-unit>
        <trans-unit id="0b17eb08771078c44f61b0a0fc886cbb57e1ad6c" translate="yes" xml:space="preserve">
          <source>std::wbuffer_convert::rdbuf</source>
          <target state="translated">std::wbuffer_convert::rdbuf</target>
        </trans-unit>
        <trans-unit id="6d0ee09f48b99689bd485a5de3a6c4654136d153" translate="yes" xml:space="preserve">
          <source>std::wbuffer_convert::state</source>
          <target state="translated">std::wbuffer_convert::state</target>
        </trans-unit>
        <trans-unit id="28632c07fc1da8dbe39c81638fa112d4ff5b7481" translate="yes" xml:space="preserve">
          <source>std::wbuffer_convert::wbuffer_convert</source>
          <target state="translated">std::wbuffer_convert::wbuffer_convert</target>
        </trans-unit>
        <trans-unit id="c99f040b42c6f0556afc56786c01c83d10d3ba55" translate="yes" xml:space="preserve">
          <source>std::wbuffer_convert::~wbuffer_convert</source>
          <target state="translated">std::wbuffer_convert::~wbuffer_convert</target>
        </trans-unit>
        <trans-unit id="17a7fb69b78c8b1685277b14420992c3cb6ebd31" translate="yes" xml:space="preserve">
          <source>std::wcerr</source>
          <target state="translated">std::wcerr</target>
        </trans-unit>
        <trans-unit id="76df5c5fb3bd45aefc1e12d5004eee4b41ee39f1" translate="yes" xml:space="preserve">
          <source>std::wcin</source>
          <target state="translated">std::wcin</target>
        </trans-unit>
        <trans-unit id="ce2943f95a5cce9cf418e7101b1d60dd0a5258f3" translate="yes" xml:space="preserve">
          <source>std::wclog</source>
          <target state="translated">std::wclog</target>
        </trans-unit>
        <trans-unit id="8b1817e71e19c16a7eac43de7451044f00c8a6d5" translate="yes" xml:space="preserve">
          <source>std::wcout</source>
          <target state="translated">std::wcout</target>
        </trans-unit>
        <trans-unit id="6c3bd3c46675cf0ef9c6e87a02e2d501061c42e1" translate="yes" xml:space="preserve">
          <source>std::wcrtomb</source>
          <target state="translated">std::wcrtomb</target>
        </trans-unit>
        <trans-unit id="d909cb3379c0401671c2cc927654f22e6b72890b" translate="yes" xml:space="preserve">
          <source>std::wcscat</source>
          <target state="translated">std::wcscat</target>
        </trans-unit>
        <trans-unit id="36153ce3ad21b4bbe9bce2b87022c9c60554688f" translate="yes" xml:space="preserve">
          <source>std::wcschr</source>
          <target state="translated">std::wcschr</target>
        </trans-unit>
        <trans-unit id="90ab84a1ba185918bd416dd732f12efa787b8160" translate="yes" xml:space="preserve">
          <source>std::wcscmp</source>
          <target state="translated">std::wcscmp</target>
        </trans-unit>
        <trans-unit id="2c0a70e12cc9843a7384e2ef01040178646d3c10" translate="yes" xml:space="preserve">
          <source>std::wcscoll</source>
          <target state="translated">std::wcscoll</target>
        </trans-unit>
        <trans-unit id="4b17855506e842cd9fd8386b6c36690cdf7b9e22" translate="yes" xml:space="preserve">
          <source>std::wcscpy</source>
          <target state="translated">std::wcscpy</target>
        </trans-unit>
        <trans-unit id="7036ae1e7b4e36f85b2b82d860b10589c04a6f99" translate="yes" xml:space="preserve">
          <source>std::wcscspn</source>
          <target state="translated">std::wcscspn</target>
        </trans-unit>
        <trans-unit id="be5abca3ed7d6abdad20898ae2635ac59a513461" translate="yes" xml:space="preserve">
          <source>std::wcsftime</source>
          <target state="translated">std::wcsftime</target>
        </trans-unit>
        <trans-unit id="af929f5f50b62e37306b9b073ccc03fffc8a4d7b" translate="yes" xml:space="preserve">
          <source>std::wcslen</source>
          <target state="translated">std::wcslen</target>
        </trans-unit>
        <trans-unit id="88d203d9bb41fb654d4d67787919fc710d6a28ea" translate="yes" xml:space="preserve">
          <source>std::wcsncat</source>
          <target state="translated">std::wcsncat</target>
        </trans-unit>
        <trans-unit id="693b95ec6ab6f6654308878eacc3db5af717deb6" translate="yes" xml:space="preserve">
          <source>std::wcsncmp</source>
          <target state="translated">std::wcsncmp</target>
        </trans-unit>
        <trans-unit id="a73170b5dfbd6ee6983a38fa6b50e20a0aa1a501" translate="yes" xml:space="preserve">
          <source>std::wcsncpy</source>
          <target state="translated">std::wcsncpy</target>
        </trans-unit>
        <trans-unit id="3cc71adcd0755f95004c834685b18b4100739523" translate="yes" xml:space="preserve">
          <source>std::wcspbrk</source>
          <target state="translated">std::wcspbrk</target>
        </trans-unit>
        <trans-unit id="ed0138d30b7c053eed83e1c7cb7021a9b889f1d8" translate="yes" xml:space="preserve">
          <source>std::wcsrchr</source>
          <target state="translated">std::wcsrchr</target>
        </trans-unit>
        <trans-unit id="9ab4dd65478d65e8f0ddba4cb930eae151eddb8e" translate="yes" xml:space="preserve">
          <source>std::wcsrtombs</source>
          <target state="translated">std::wcsrtombs</target>
        </trans-unit>
        <trans-unit id="93007ef4b174ddbf33c2e1dc83d922779a39cdb7" translate="yes" xml:space="preserve">
          <source>std::wcsspn</source>
          <target state="translated">std::wcsspn</target>
        </trans-unit>
        <trans-unit id="28e22ccb1b4bedf8a85edacc1e6a6b54f9822d21" translate="yes" xml:space="preserve">
          <source>std::wcsstr</source>
          <target state="translated">std::wcsstr</target>
        </trans-unit>
        <trans-unit id="d6732f7fbcec90e22da561a031b8d373a3ecfb79" translate="yes" xml:space="preserve">
          <source>std::wcstof, std::wcstod, std::wcstold</source>
          <target state="translated">std::wcstof,std::wcstod,std::wcstold</target>
        </trans-unit>
        <trans-unit id="49a9e23c34b08ab5484528ff8c79a1e2b94b7ab3" translate="yes" xml:space="preserve">
          <source>std::wcstoimax, std::wcstoumax</source>
          <target state="translated">std::wcstoimax,std::wcstoumax</target>
        </trans-unit>
        <trans-unit id="f1f6b9c1d35512cf0cfe4bd0eee9bba753c38896" translate="yes" xml:space="preserve">
          <source>std::wcstok</source>
          <target state="translated">std::wcstok</target>
        </trans-unit>
        <trans-unit id="94f866824895f234eca9da07bdd8f4788efbdebb" translate="yes" xml:space="preserve">
          <source>std::wcstol, std::wcstoll</source>
          <target state="translated">std::wcstol,std::wcstoll</target>
        </trans-unit>
        <trans-unit id="de93eee450bd764d0b8a24589789cf713406e7ee" translate="yes" xml:space="preserve">
          <source>std::wcstold</source>
          <target state="translated">std::wcstold</target>
        </trans-unit>
        <trans-unit id="10462d763ab4af15d8c0743d82e6cb6e4e030ea7" translate="yes" xml:space="preserve">
          <source>std::wcstoll</source>
          <target state="translated">std::wcstoll</target>
        </trans-unit>
        <trans-unit id="27d70c0334bfc6e635c35982199775f202aa3489" translate="yes" xml:space="preserve">
          <source>std::wcstombs</source>
          <target state="translated">std::wcstombs</target>
        </trans-unit>
        <trans-unit id="7b4f2e0e46255a0a8760766a07d324d900a23fc2" translate="yes" xml:space="preserve">
          <source>std::wcstoul, std::wcstoull</source>
          <target state="translated">std::wcstoul,std::wcstoull</target>
        </trans-unit>
        <trans-unit id="851dac8878c8234b62528bdc88d21292649df450" translate="yes" xml:space="preserve">
          <source>std::wcstoull</source>
          <target state="translated">std::wcstoull</target>
        </trans-unit>
        <trans-unit id="07b40a14e54032062541d1cd2353f9acde69276a" translate="yes" xml:space="preserve">
          <source>std::wcstoumax</source>
          <target state="translated">std::wcstoumax</target>
        </trans-unit>
        <trans-unit id="b97b69fc2dc02b507b9e02a966a5d1ef224e320b" translate="yes" xml:space="preserve">
          <source>std::wcsxfrm</source>
          <target state="translated">std::wcsxfrm</target>
        </trans-unit>
        <trans-unit id="ce17c36ef2e730a2f2ccb89695fea7f078d31dca" translate="yes" xml:space="preserve">
          <source>std::wctob</source>
          <target state="translated">std::wctob</target>
        </trans-unit>
        <trans-unit id="4d1392a641ca9e2c62f281bd0b62531b80643315" translate="yes" xml:space="preserve">
          <source>std::wctomb</source>
          <target state="translated">std::wctomb</target>
        </trans-unit>
        <trans-unit id="8a9b9525677440f3a125037fa334501bb0ce3c71" translate="yes" xml:space="preserve">
          <source>std::wctrans</source>
          <target state="translated">std::wctrans</target>
        </trans-unit>
        <trans-unit id="80eff65e0a5f652b6c469b20c668253c04837bab" translate="yes" xml:space="preserve">
          <source>std::wctype</source>
          <target state="translated">std::wctype</target>
        </trans-unit>
        <trans-unit id="026a027c4671d7ae7f359400603d2b915fccc9af" translate="yes" xml:space="preserve">
          <source>std::weak_equal</source>
          <target state="translated">std::weak_equal</target>
        </trans-unit>
        <trans-unit id="0743b6fe1103d661f2c264da01d4570679b42c97" translate="yes" xml:space="preserve">
          <source>std::weak_equality</source>
          <target state="translated">std::weak_equality</target>
        </trans-unit>
        <trans-unit id="f0fc3dbecae897424267fc5e3bcfd1927252c5e4" translate="yes" xml:space="preserve">
          <source>std::weak_order</source>
          <target state="translated">std::weak_order</target>
        </trans-unit>
        <trans-unit id="3f002c784b8520047a2d205b59c660e33aeeb1ee" translate="yes" xml:space="preserve">
          <source>std::weak_ordering</source>
          <target state="translated">std::weak_ordering</target>
        </trans-unit>
        <trans-unit id="662455ec5c166c3d0e683102d28161bcce7cc387" translate="yes" xml:space="preserve">
          <source>std::weak_ordering::operator partial_ordering</source>
          <target state="translated">std::weak_ordering::演算子 partial_ordering</target>
        </trans-unit>
        <trans-unit id="bf96053cb72a1d2d99fd84b04a66888b54a6080f" translate="yes" xml:space="preserve">
          <source>std::weak_ordering::operator weak_equality</source>
          <target state="translated">std::weak_ordering::演算子weak_equality</target>
        </trans-unit>
        <trans-unit id="d564b112043c348ff6f5014b097d0acfa0c0be2b" translate="yes" xml:space="preserve">
          <source>std::weak_ptr</source>
          <target state="translated">std::weak_ptr</target>
        </trans-unit>
        <trans-unit id="f6f9cb2e82b11fc346f345ecb32c566cf97bd0d7" translate="yes" xml:space="preserve">
          <source>std::weak_ptr&amp;lt;T&amp;gt;::expired</source>
          <target state="translated">std::weak_ptr&amp;lt;T&amp;gt;::expired</target>
        </trans-unit>
        <trans-unit id="92d282d9b80770d5b1ae86f891015d6e6fc21446" translate="yes" xml:space="preserve">
          <source>std::weak_ptr&amp;lt;T&amp;gt;::lock</source>
          <target state="translated">std::weak_ptr&amp;lt;T&amp;gt;::lock</target>
        </trans-unit>
        <trans-unit id="7adc7556f000bcd46bae5a7bdf19441ea334ca9d" translate="yes" xml:space="preserve">
          <source>std::weak_ptr&amp;lt;T&amp;gt;::operator=</source>
          <target state="translated">std::weak_ptr&amp;lt;T&amp;gt;::operator=</target>
        </trans-unit>
        <trans-unit id="8f69992629561148f21ecde748f23f73eea8cc52" translate="yes" xml:space="preserve">
          <source>std::weak_ptr&amp;lt;T&amp;gt;::owner_before</source>
          <target state="translated">std::weak_ptr&amp;lt;T&amp;gt;::owner_before</target>
        </trans-unit>
        <trans-unit id="f52bb7ceb98cdbe7278b0698ad677329800be0ae" translate="yes" xml:space="preserve">
          <source>std::weak_ptr&amp;lt;T&amp;gt;::reset</source>
          <target state="translated">std::weak_ptr&amp;lt;T&amp;gt;::reset</target>
        </trans-unit>
        <trans-unit id="a37a8c6638e6c539d10c1815e5eff00d6e9e5a55" translate="yes" xml:space="preserve">
          <source>std::weak_ptr&amp;lt;T&amp;gt;::swap</source>
          <target state="translated">std::weak_ptr&amp;lt;T&amp;gt;::swap</target>
        </trans-unit>
        <trans-unit id="437da72fbebeb762ae8eecc9f7f959c9b3a7ae26" translate="yes" xml:space="preserve">
          <source>std::weak_ptr&amp;lt;T&amp;gt;::use_count</source>
          <target state="translated">std::weak_ptr&amp;lt;T&amp;gt;::use_count</target>
        </trans-unit>
        <trans-unit id="20a8c5c7c84128fbf3b89ca5050262bf052a5495" translate="yes" xml:space="preserve">
          <source>std::weak_ptr&amp;lt;T&amp;gt;::weak_ptr</source>
          <target state="translated">std::weak_ptr&amp;lt;T&amp;gt;::weak_ptr</target>
        </trans-unit>
        <trans-unit id="92f1b796235b9301aff5130ae087f921ec6466e4" translate="yes" xml:space="preserve">
          <source>std::weak_ptr&amp;lt;T&amp;gt;::~weak_ptr</source>
          <target state="translated">std::weak_ptr&amp;lt;T&amp;gt;::~weak_ptr</target>
        </trans-unit>
        <trans-unit id="efe93462f51b8541eb50f860d640bada18922009" translate="yes" xml:space="preserve">
          <source>std::weak_ptr::expired</source>
          <target state="translated">std::weak_ptr::expired</target>
        </trans-unit>
        <trans-unit id="857b127171065f0dbf108e37153b7dd5e4c7b2ff" translate="yes" xml:space="preserve">
          <source>std::weak_ptr::lock</source>
          <target state="translated">std::weak_ptr::lock</target>
        </trans-unit>
        <trans-unit id="e6205fc190d3427c8966b10594ece5eda4e1fac9" translate="yes" xml:space="preserve">
          <source>std::weak_ptr::operator=</source>
          <target state="translated">std::weak_ptr::operator=</target>
        </trans-unit>
        <trans-unit id="ab052f2fd069a7271b12b6d1b1e41e0700a79d36" translate="yes" xml:space="preserve">
          <source>std::weak_ptr::owner_before</source>
          <target state="translated">std::weak_ptr::owner_before</target>
        </trans-unit>
        <trans-unit id="a4ef4018926a109e274b511465ccea87bf3ac556" translate="yes" xml:space="preserve">
          <source>std::weak_ptr::reset</source>
          <target state="translated">std::weak_ptr::reset</target>
        </trans-unit>
        <trans-unit id="77870a3001e0e5e4cd2818fa97c5f7229429c36a" translate="yes" xml:space="preserve">
          <source>std::weak_ptr::swap</source>
          <target state="translated">std::weak_ptr::swap</target>
        </trans-unit>
        <trans-unit id="cabe5f2e7ab87379bd37815d8a1e13cfcfb254f2" translate="yes" xml:space="preserve">
          <source>std::weak_ptr::use_count</source>
          <target state="translated">std::weak_ptr::use_count</target>
        </trans-unit>
        <trans-unit id="690e83d6f1b74fdb823a8b2e52087deb2b07f30d" translate="yes" xml:space="preserve">
          <source>std::weak_ptr::weak_ptr</source>
          <target state="translated">std::weak_ptr::weak_ptr</target>
        </trans-unit>
        <trans-unit id="74115dbbc3edd1b8fc136f846400d7cb56f8e951" translate="yes" xml:space="preserve">
          <source>std::weak_ptr::~weak_ptr</source>
          <target state="translated">std::weak_ptr::~weak_ptr</target>
        </trans-unit>
        <trans-unit id="463579896bec41fff0b54cb7ad708713f19e27ca" translate="yes" xml:space="preserve">
          <source>std::weibull_distribution</source>
          <target state="translated">std::weibull_distribution</target>
        </trans-unit>
        <trans-unit id="f0892fe37c07fc82ed68e64835451bd05f8bddfa" translate="yes" xml:space="preserve">
          <source>std::weibull_distribution&amp;lt;RealType&amp;gt;::a, b</source>
          <target state="translated">std :: weibull_distribution &amp;lt;RealType&amp;gt; :: a、b</target>
        </trans-unit>
        <trans-unit id="560abbeafbef34f462f56eb9dc99401c4d9bedac" translate="yes" xml:space="preserve">
          <source>std::weibull_distribution&amp;lt;RealType&amp;gt;::max</source>
          <target state="translated">std::weibull_distribution&amp;lt;RealType&amp;gt;::max</target>
        </trans-unit>
        <trans-unit id="5bcd427155f660a59c89cf7ed5a8f34c47e96962" translate="yes" xml:space="preserve">
          <source>std::weibull_distribution&amp;lt;RealType&amp;gt;::min</source>
          <target state="translated">std::weibull_distribution&amp;lt;RealType&amp;gt;::min</target>
        </trans-unit>
        <trans-unit id="3ab6fe746bc907968fd5706c406885a06e962e85" translate="yes" xml:space="preserve">
          <source>std::weibull_distribution&amp;lt;RealType&amp;gt;::operator()</source>
          <target state="translated">std::weibull_distribution&amp;lt;RealType&amp;gt;::operator()</target>
        </trans-unit>
        <trans-unit id="cd2b8b48d25089b05beea383b19841e0accba5f1" translate="yes" xml:space="preserve">
          <source>std::weibull_distribution&amp;lt;RealType&amp;gt;::param</source>
          <target state="translated">std::weibull_distribution&amp;lt;RealType&amp;gt;::param</target>
        </trans-unit>
        <trans-unit id="93afef7b9ccdc612525984fec9a15f7cf4705dd6" translate="yes" xml:space="preserve">
          <source>std::weibull_distribution&amp;lt;RealType&amp;gt;::reset</source>
          <target state="translated">std::weibull_distribution&amp;lt;RealType&amp;gt;::reset</target>
        </trans-unit>
        <trans-unit id="973a7dbcf2f7aaebfa666c24f2f489c494994835" translate="yes" xml:space="preserve">
          <source>std::weibull_distribution&amp;lt;RealType&amp;gt;::weibull_distribution</source>
          <target state="translated">std::weibull_distribution&amp;lt;RealType&amp;gt;::weibull_distribution</target>
        </trans-unit>
        <trans-unit id="8f1504a7b233e5be32d39dcc05b5c1f13e81b4a7" translate="yes" xml:space="preserve">
          <source>std::weibull_distribution::a</source>
          <target state="translated">std::weibull_distribution::a</target>
        </trans-unit>
        <trans-unit id="55908e9c69de5947a02bd1b9117488eecfa202be" translate="yes" xml:space="preserve">
          <source>std::weibull_distribution::max</source>
          <target state="translated">std::weibull_distribution::max</target>
        </trans-unit>
        <trans-unit id="78f7a40fbe13b97607503b7f38eeeb37ef55d53e" translate="yes" xml:space="preserve">
          <source>std::weibull_distribution::min</source>
          <target state="translated">std::weibull_distribution::min</target>
        </trans-unit>
        <trans-unit id="473a136257a9d2d2cfa3f9d40ac67dcf74a7c3dc" translate="yes" xml:space="preserve">
          <source>std::weibull_distribution::operator()</source>
          <target state="translated">std::weibull_distribution::operator()</target>
        </trans-unit>
        <trans-unit id="3b72ae2b803280580bc23aab8e54e165d0f2c025" translate="yes" xml:space="preserve">
          <source>std::weibull_distribution::param</source>
          <target state="translated">std::weibull_distribution::param</target>
        </trans-unit>
        <trans-unit id="e52d714c0922351b5f112945445b3518416f61be" translate="yes" xml:space="preserve">
          <source>std::weibull_distribution::reset</source>
          <target state="translated">std::weibull_distribution::reset</target>
        </trans-unit>
        <trans-unit id="8de2b2fd0727a782c11b3957c8d4f700d35720be" translate="yes" xml:space="preserve">
          <source>std::weibull_distribution::weibull_distribution</source>
          <target state="translated">std::weibull_distribution::weibull_distribution</target>
        </trans-unit>
        <trans-unit id="549c32c8d767206ba0658bd53b413c2e328dc919" translate="yes" xml:space="preserve">
          <source>std::wmemchr</source>
          <target state="translated">std::wmemchr</target>
        </trans-unit>
        <trans-unit id="f2fa2d21eee87feb4e5d5313c2e9dfbde5ef5dd8" translate="yes" xml:space="preserve">
          <source>std::wmemcmp</source>
          <target state="translated">std::wmemcmp</target>
        </trans-unit>
        <trans-unit id="51f27e0744b00b53f4fa4bcffe55831dd5b4a4c1" translate="yes" xml:space="preserve">
          <source>std::wmemcpy</source>
          <target state="translated">std::wmemcpy</target>
        </trans-unit>
        <trans-unit id="3d60f22d9477324a78b461833eb7e4701f4347b2" translate="yes" xml:space="preserve">
          <source>std::wmemmove</source>
          <target state="translated">std::wmemmove</target>
        </trans-unit>
        <trans-unit id="e9ed8d73461d9591808245d2268dce37bed52878" translate="yes" xml:space="preserve">
          <source>std::wmemset</source>
          <target state="translated">std::wmemset</target>
        </trans-unit>
        <trans-unit id="ee6a359f4f1b73f3cf4893326a04ac2f790986ea" translate="yes" xml:space="preserve">
          <source>std::wprintf</source>
          <target state="translated">std::wprintf</target>
        </trans-unit>
        <trans-unit id="3cfb1053d8c59e24f7db6d454d328307c3cb7f30" translate="yes" xml:space="preserve">
          <source>std::wprintf, std::fwprintf, std::swprintf</source>
          <target state="translated">std::wprintf,std::fwprintf,std::swprintf</target>
        </trans-unit>
        <trans-unit id="add44c5d324b2d8dc6cd3f39cfec3941780bda54" translate="yes" xml:space="preserve">
          <source>std::ws</source>
          <target state="translated">std::ws</target>
        </trans-unit>
        <trans-unit id="98fce8e19cb509e1fd2f59289cad6f5bc468ff0f" translate="yes" xml:space="preserve">
          <source>std::wscanf</source>
          <target state="translated">std::wscanf</target>
        </trans-unit>
        <trans-unit id="8ab8e384f07488dcbb2d342190fe53902dd23550" translate="yes" xml:space="preserve">
          <source>std::wscanf, std::fwscanf, std::swscanf</source>
          <target state="translated">std::wscanf,std::fwscanf,std::swscanf</target>
        </trans-unit>
        <trans-unit id="543a7db2afed212b0fdfc929ae213c9f9d8576ae" translate="yes" xml:space="preserve">
          <source>std::wstring_convert</source>
          <target state="translated">std::wstring_convert</target>
        </trans-unit>
        <trans-unit id="f1bd443d4aaa2541e87b3280ce560ab78d4f6bf5" translate="yes" xml:space="preserve">
          <source>std::wstring_convert&amp;lt;Codecvt,Elem,Wide_alloc,Byte_alloc&amp;gt;:: ~wstring_convert</source>
          <target state="translated">std :: wstring_convert &amp;lt;Codecvt、Elem、Wide_alloc、Byte_alloc&amp;gt; ::〜wstring_convert</target>
        </trans-unit>
        <trans-unit id="8d6a835e6956d4f2c83cefe00402a9bc3aa9f5fd" translate="yes" xml:space="preserve">
          <source>std::wstring_convert&amp;lt;Codecvt,Elem,Wide_alloc,Byte_alloc&amp;gt;::converted</source>
          <target state="translated">std::wstring_convert&amp;lt;Codecvt,Elem,Wide_alloc,Byte_alloc&amp;gt;::converted</target>
        </trans-unit>
        <trans-unit id="099dfa7e126beb053cbeda2288e626b18897d2a1" translate="yes" xml:space="preserve">
          <source>std::wstring_convert&amp;lt;Codecvt,Elem,Wide_alloc,Byte_alloc&amp;gt;::from_bytes</source>
          <target state="translated">std::wstring_convert&amp;lt;Codecvt,Elem,Wide_alloc,Byte_alloc&amp;gt;::from_bytes</target>
        </trans-unit>
        <trans-unit id="0033e12c6ba3f5159296dc3a690245d903ae4792" translate="yes" xml:space="preserve">
          <source>std::wstring_convert&amp;lt;Codecvt,Elem,Wide_alloc,Byte_alloc&amp;gt;::state</source>
          <target state="translated">std::wstring_convert&amp;lt;Codecvt,Elem,Wide_alloc,Byte_alloc&amp;gt;::state</target>
        </trans-unit>
        <trans-unit id="39898a5c53365be3911e8c84aac5c2833319ae33" translate="yes" xml:space="preserve">
          <source>std::wstring_convert&amp;lt;Codecvt,Elem,Wide_alloc,Byte_alloc&amp;gt;::to_bytes</source>
          <target state="translated">std::wstring_convert&amp;lt;Codecvt,Elem,Wide_alloc,Byte_alloc&amp;gt;::to_bytes</target>
        </trans-unit>
        <trans-unit id="34cc275317575d8bab842e1a22863d7b7961f38f" translate="yes" xml:space="preserve">
          <source>std::wstring_convert&amp;lt;Codecvt,Elem,Wide_alloc,Byte_alloc&amp;gt;::wstring_convert</source>
          <target state="translated">std::wstring_convert&amp;lt;Codecvt,Elem,Wide_alloc,Byte_alloc&amp;gt;::wstring_convert</target>
        </trans-unit>
        <trans-unit id="337afdeaf2f484669487cba11f53361d49dc221d" translate="yes" xml:space="preserve">
          <source>std::wstring_convert:: ~wstring_convert</source>
          <target state="translated">std::wstring_convert:.~wstring_convert</target>
        </trans-unit>
        <trans-unit id="9aeaefcd4014718745163410b081f247f0fd83bf" translate="yes" xml:space="preserve">
          <source>std::wstring_convert::converted</source>
          <target state="translated">std::wstring_convert::converted</target>
        </trans-unit>
        <trans-unit id="f4524f9302a4cc63b5005ce86ec976da868e6761" translate="yes" xml:space="preserve">
          <source>std::wstring_convert::from_bytes</source>
          <target state="translated">std::wstring_convert::from_bytes</target>
        </trans-unit>
        <trans-unit id="c2b4d0425930e5f3c8e08ebaff86fb49c9c07e9f" translate="yes" xml:space="preserve">
          <source>std::wstring_convert::state</source>
          <target state="translated">std::wstring_convert::state</target>
        </trans-unit>
        <trans-unit id="57ca8fa101f9b3a0b28bceb5ebd731b1a19548ee" translate="yes" xml:space="preserve">
          <source>std::wstring_convert::to_bytes</source>
          <target state="translated">std::wstring_convert::to_bytes</target>
        </trans-unit>
        <trans-unit id="ceba5e6192909a049d483154fe60cf83f882b2cf" translate="yes" xml:space="preserve">
          <source>std::wstring_convert::wstring_convert</source>
          <target state="translated">std::wstring_convert::wstring_convert</target>
        </trans-unit>
        <trans-unit id="5492226ca4f5fafdf732bd9fbd3f63cc28f442ad" translate="yes" xml:space="preserve">
          <source>std_name</source>
          <target state="translated">std_name</target>
        </trans-unit>
        <trans-unit id="185fc1ef3fe91517feeb5c6d7906ae8f9c51db70" translate="yes" xml:space="preserve">
          <source>stddev</source>
          <target state="translated">stddev</target>
        </trans-unit>
        <trans-unit id="2820990657ac8ffea91c83471562359da461629e" translate="yes" xml:space="preserve">
          <source>stdexcept</source>
          <target state="translated">stdexcept</target>
        </trans-unit>
        <trans-unit id="5b38b5eae67339b37d73ec6e92bdf1f9379406ba" translate="yes" xml:space="preserve">
          <source>stdinstdoutstderr</source>
          <target state="translated">stdinstdoutstderr</target>
        </trans-unit>
        <trans-unit id="e8402c081a4da657ef8810b2d65b11ee77577684" translate="yes" xml:space="preserve">
          <source>steady clock flag, always &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">定常クロックフラグ、常に &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0263402ac557343a0fc5d5b8c7321a2eca6c8c9e" translate="yes" xml:space="preserve">
          <source>steady_clock</source>
          <target state="translated">steady_clock</target>
        </trans-unit>
        <trans-unit id="e1d3fe39d1cbbfb4f67a0c16fbd6728253c96c1d" translate="yes" xml:space="preserve">
          <source>stem</source>
          <target state="translated">stem</target>
        </trans-unit>
        <trans-unit id="6fd0defdd1c19095847f2f708896a9d83ebce80c" translate="yes" xml:space="preserve">
          <source>stofstodstold</source>
          <target state="translated">stofstodstold</target>
        </trans-unit>
        <trans-unit id="bcee360db2b384b86c8692bc02924e64ecb0cdbf" translate="yes" xml:space="preserve">
          <source>stoistolstoll</source>
          <target state="translated">stoistolstoll</target>
        </trans-unit>
        <trans-unit id="469a3c734557021ffb3a27711d3e7341ce549d08" translate="yes" xml:space="preserve">
          <source>stops the execution of the current thread for a specified time duration</source>
          <target state="translated">指定した時間の間、現在のスレッドの実行を停止します。</target>
        </trans-unit>
        <trans-unit id="42722dbb26cd0f08fff6ede7883b7ef1b012fb5e" translate="yes" xml:space="preserve">
          <source>stops the execution of the current thread until a specified time point</source>
          <target state="translated">は、指定された時点まで現在のスレッドの実行を停止します。</target>
        </trans-unit>
        <trans-unit id="258a840bf6fb2c3dc1fa8283a06c385cd2cc9cc1" translate="yes" xml:space="preserve">
          <source>storage duration</source>
          <target state="translated">きおくじかん</target>
        </trans-unit>
        <trans-unit id="65ea83c1931c480598e62d08c8e44f87b34a4041" translate="yes" xml:space="preserve">
          <source>storage duration and</source>
          <target state="translated">保存期間と</target>
        </trans-unit>
        <trans-unit id="d3b30adc43e96cde97dbd7558dac446848f39334" translate="yes" xml:space="preserve">
          <source>storage duration are destroyed.</source>
          <target state="translated">保存期間が破壊されます。</target>
        </trans-unit>
        <trans-unit id="a46c8c09789b6971840a73f57557cc4238cc7e99" translate="yes" xml:space="preserve">
          <source>storage duration specifiers</source>
          <target state="translated">記憶域持続時間指定子</target>
        </trans-unit>
        <trans-unit id="d03018fb4276d158d9e7a206b043e6351737d956" translate="yes" xml:space="preserve">
          <source>storage duration.</source>
          <target state="translated">ストレージの持続時間。</target>
        </trans-unit>
        <trans-unit id="0954e3e70aa2202a1b57322d1f1ebb6ee765c2bd" translate="yes" xml:space="preserve">
          <source>storage duration. Also hints to the compiler to place the object in the processor's register. (deprecated)</source>
          <target state="translated">ストレージの持続時間を指定します。また、プロセッサのレジスタにオブジェクトを配置するようにコンパイラにヒントを与えます。(廃止予定)</target>
        </trans-unit>
        <trans-unit id="567157eb41696b503b61b50dd58861fda527e440" translate="yes" xml:space="preserve">
          <source>storage duration. The storage for the object is allocated and deallocated per request by using &lt;a href=&quot;../memory&quot;&gt;dynamic memory allocation&lt;/a&gt; functions. See &lt;a href=&quot;new&quot;&gt;new-expression&lt;/a&gt; for details on initialization of objects with this storage duration.</source>
          <target state="translated">保存期間。オブジェクトのストレージは、&lt;a href=&quot;../memory&quot;&gt;動的メモリ割り当て&lt;/a&gt;関数を使用して、要求ごとに割り当ておよび割り当て解除されます。参照してください&lt;a href=&quot;new&quot;&gt;new式&lt;/a&gt;この保存期間を持つオブジェクトの初期化の詳細については、を。</target>
        </trans-unit>
        <trans-unit id="ac250a4e97b39c92c81c6a14638f645abf9e166d" translate="yes" xml:space="preserve">
          <source>storage duration. The storage for the object is allocated at the beginning of the enclosing code block and deallocated at the end. All local objects have this storage duration, except those declared &lt;code&gt;static&lt;/code&gt;, &lt;code&gt;extern&lt;/code&gt; or &lt;code&gt;thread_local&lt;/code&gt;.</source>
          <target state="translated">保存期間。オブジェクトのストレージは、囲んでいるコードブロックの先頭に割り当てられ、最後に割り当て解除されます。 &lt;code&gt;static&lt;/code&gt; 、 &lt;code&gt;extern&lt;/code&gt; 、または &lt;code&gt;thread_local&lt;/code&gt; として宣言されているものを除き、すべてのローカルオブジェクトにはこの保存期間があります。</target>
        </trans-unit>
        <trans-unit id="b4599ba39a83ca4fc20aaf6e92bb9efa970efb68" translate="yes" xml:space="preserve">
          <source>storage duration. The storage for the object is allocated when the program begins and deallocated when the program ends. Only one instance of the object exists. All objects declared at namespace scope (including global namespace) have this storage duration, plus those declared with &lt;code&gt;static&lt;/code&gt; or &lt;code&gt;extern&lt;/code&gt;. See &lt;a href=&quot;initialization#Non-local_variables&quot;&gt;Non-local variables&lt;/a&gt; and &lt;a href=&quot;storage_duration#Static_local_variables&quot;&gt;Static local variables&lt;/a&gt; for details on initialization of objects with this storage duration.</source>
          <target state="translated">保存期間。オブジェクトのストレージは、プログラムの開始時に割り当てられ、プログラムの終了時に割り当て解除されます。オブジェクトのインスタンスは1つだけ存在します。ネームスペーススコープ（グローバルネームスペースを含む）で宣言されたすべてのオブジェクトは、この保存期間に加えて、 &lt;code&gt;static&lt;/code&gt; または &lt;code&gt;extern&lt;/code&gt; で宣言されたオブジェクトを持ちます。参照&lt;a href=&quot;initialization#Non-local_variables&quot;&gt;非ローカル変数&lt;/a&gt;と&lt;a href=&quot;storage_duration#Static_local_variables&quot;&gt;静的ローカル変数&lt;/a&gt;、この貯蔵期間を持つオブジェクトの初期化の詳細については。</target>
        </trans-unit>
        <trans-unit id="6e5cb03bfc880cf619caddfdfb7634f85865fcfb" translate="yes" xml:space="preserve">
          <source>storage duration. The storage for the object is allocated when the thread begins and deallocated when the thread ends. Each thread has its own instance of the object. Only objects declared &lt;code&gt;thread_local&lt;/code&gt; have this storage duration. &lt;code&gt;thread_local&lt;/code&gt; can appear together with &lt;code&gt;static&lt;/code&gt; or &lt;code&gt;extern&lt;/code&gt; to adjust linkage. See &lt;a href=&quot;initialization#Non-local_variables&quot;&gt;Non-local variables&lt;/a&gt; for details on initialization of objects with this storage duration.</source>
          <target state="translated">保存期間。オブジェクトのストレージは、スレッドの開始時に割り当てられ、スレッドの終了時に割り当て解除されます。各スレッドには、オブジェクトの独自のインスタンスがあります。 &lt;code&gt;thread_local&lt;/code&gt; として宣言されたオブジェクトのみがこの保存期間を持ちます。 &lt;code&gt;thread_local&lt;/code&gt; は &lt;code&gt;static&lt;/code&gt; または &lt;code&gt;extern&lt;/code&gt; と一緒に表示して、リンケージを調整できます。参照してください&lt;a href=&quot;initialization#Non-local_variables&quot;&gt;非ローカル変数&lt;/a&gt;、この保存期間を持つオブジェクトの初期化の詳細については、を。</target>
        </trans-unit>
        <trans-unit id="3a21295d813c26eb287fc6b59454fb37858d63e6" translate="yes" xml:space="preserve">
          <source>store</source>
          <target state="translated">store</target>
        </trans-unit>
        <trans-unit id="3ee9a4996ca14a8f2bc28005bc439cc89600024a" translate="yes" xml:space="preserve">
          <source>stores a reference in a new &lt;code&gt;std::reference_wrapper&lt;/code&gt; object</source>
          <target state="translated">参照を新しい &lt;code&gt;std::reference_wrapper&lt;/code&gt; オブジェクトに格納します</target>
        </trans-unit>
        <trans-unit id="3f7c1d4896c945fe9dfdeb88b60e8ecedf981925" translate="yes" xml:space="preserve">
          <source>stores a value for asynchronous retrieval</source>
          <target state="translated">非同期検索用の値を格納します。</target>
        </trans-unit>
        <trans-unit id="d1731b38a630353a6ebdfe5494dc4b00ffb62703" translate="yes" xml:space="preserve">
          <source>stores a value into an atomic object</source>
          <target state="translated">アトミックオブジェクトに値を格納します。</target>
        </trans-unit>
        <trans-unit id="02347aa87e7382924a9a7be80d09b91a2aca282f" translate="yes" xml:space="preserve">
          <source>stores a value into the object referenced by an &lt;code&gt;atomic_ref&lt;/code&gt; object</source>
          <target state="translated">&lt;code&gt;atomic_ref&lt;/code&gt; オブジェクトによって参照されるオブジェクトに値を格納します</target>
        </trans-unit>
        <trans-unit id="148452e1b6e5ca42f27a81e5069cc2bb67944255" translate="yes" xml:space="preserve">
          <source>stores and manipulates sequences of characters</source>
          <target state="translated">文字列の記憶と操作</target>
        </trans-unit>
        <trans-unit id="00cefc2d12de072aa47013b49640371c50e07f55" translate="yes" xml:space="preserve">
          <source>stossc</source>
          <target state="translated">stossc</target>
        </trans-unit>
        <trans-unit id="ac97ccfc3ee39ca77a51f7f34b71ed00a3f0db3c" translate="yes" xml:space="preserve">
          <source>stoulstoull</source>
          <target state="translated">stoulstoull</target>
        </trans-unit>
        <trans-unit id="3442496b96dd01591a8cd44b1eec1368ab728aba" translate="yes" xml:space="preserve">
          <source>str</source>
          <target state="translated">str</target>
        </trans-unit>
        <trans-unit id="cfaf9574c952d521bcc2483f6bb89afd9e57f984" translate="yes" xml:space="preserve">
          <source>str_end</source>
          <target state="translated">str_end</target>
        </trans-unit>
        <trans-unit id="9d60fa19b28fcd5e8305f24bec643de572d7264f" translate="yes" xml:space="preserve">
          <source>strbuf</source>
          <target state="translated">strbuf</target>
        </trans-unit>
        <trans-unit id="4ad96f473a804e5077780e51723c447b2926c7e1" translate="yes" xml:space="preserve">
          <source>strcat</source>
          <target state="translated">strcat</target>
        </trans-unit>
        <trans-unit id="e82adcb13528b782e1040740340ce98a75be1dbe" translate="yes" xml:space="preserve">
          <source>strchr</source>
          <target state="translated">strchr</target>
        </trans-unit>
        <trans-unit id="3289abc05c29277963cd4055ebe06c540bfdc397" translate="yes" xml:space="preserve">
          <source>strcmp</source>
          <target state="translated">strcmp</target>
        </trans-unit>
        <trans-unit id="4812d5b749885b54d2618689a123964b5aa09c1b" translate="yes" xml:space="preserve">
          <source>strcoll</source>
          <target state="translated">strcoll</target>
        </trans-unit>
        <trans-unit id="f21c6fecef7a3274c82450856cda386f24b86510" translate="yes" xml:space="preserve">
          <source>strcpy</source>
          <target state="translated">strcpy</target>
        </trans-unit>
        <trans-unit id="b19cb789dfc18ed9f979e5ba61857c83a4a1b537" translate="yes" xml:space="preserve">
          <source>strcspn</source>
          <target state="translated">strcspn</target>
        </trans-unit>
        <trans-unit id="c82e3d7279efa3eca576370af952c815d48ce41f" translate="yes" xml:space="preserve">
          <source>stream</source>
          <target state="translated">stream</target>
        </trans-unit>
        <trans-unit id="030146c31ce09e25c2434079c6de9bfc9ad16e1c" translate="yes" xml:space="preserve">
          <source>stream buffer iterators to compare</source>
          <target state="translated">比較するためのストリームバッファイテレータ</target>
        </trans-unit>
        <trans-unit id="618dc494567ecbc96404e90c3ed028bbcd560a46" translate="yes" xml:space="preserve">
          <source>stream buffer to assign</source>
          <target state="translated">割り当てるストリームバッファ</target>
        </trans-unit>
        <trans-unit id="18d0903ee12330b4b845cc5c9382f4ed36e6684b" translate="yes" xml:space="preserve">
          <source>stream buffer to associate to</source>
          <target state="translated">関連付けるストリームバッファ</target>
        </trans-unit>
        <trans-unit id="deb906ace1dbc6b7edf9f2196037f3351e0d4593" translate="yes" xml:space="preserve">
          <source>stream buffer to exchange contents with</source>
          <target state="translated">ストリームバッファ</target>
        </trans-unit>
        <trans-unit id="43dacf074af457bf2747b435832439e2343b7319" translate="yes" xml:space="preserve">
          <source>stream buffer to initialize the iterator with</source>
          <target state="translated">でイテレータを初期化します。</target>
        </trans-unit>
        <trans-unit id="eb12370673be8cb189f04e10b972a684577703bf" translate="yes" xml:space="preserve">
          <source>stream buffer to read the content to</source>
          <target state="translated">にコンテンツを読み込むためのストリームバッファ</target>
        </trans-unit>
        <trans-unit id="ff09501037ba15c503ae4ae6a836eb3d647b9df1" translate="yes" xml:space="preserve">
          <source>stream error flags object that is modified by this function to indicate errors</source>
          <target state="translated">エラーを示すためにこの関数によって修正されるストリームエラーフラグオブジェクト</target>
        </trans-unit>
        <trans-unit id="85e9849537c363611bcb448e41c41f0642da9621" translate="yes" xml:space="preserve">
          <source>stream error state flags to set. It can be a combination of the following constants:</source>
          <target state="translated">ストリームエラー状態フラグを設定します。以下の定数の組み合わせになります。</target>
        </trans-unit>
        <trans-unit id="c6b611fe5ba81c8055d0fb37e489873ddb660191" translate="yes" xml:space="preserve">
          <source>stream exception</source>
          <target state="translated">流れの例外</target>
        </trans-unit>
        <trans-unit id="b5c9aa2fc056a2457161f1672d9d91854cf79f44" translate="yes" xml:space="preserve">
          <source>stream extraction</source>
          <target state="translated">流れ出し</target>
        </trans-unit>
        <trans-unit id="3521e549372fa1cdf947036d9cc5c5f49acb2f51" translate="yes" xml:space="preserve">
          <source>stream insertion</source>
          <target state="translated">ストリーム挿入</target>
        </trans-unit>
        <trans-unit id="8afe96bd76ddca7210daa4be3a4f03043e91c1d4" translate="yes" xml:space="preserve">
          <source>stream insertion and extraction operators are often declared as non-member friends.</source>
          <target state="translated">ストリームの挿入・抽出演算子は、非メンバーのフレンドとして宣言されていることが多いです。</target>
        </trans-unit>
        <trans-unit id="26a079c00e1da8451d244937b9d9b8504e8a3867" translate="yes" xml:space="preserve">
          <source>stream iterators to compare</source>
          <target state="translated">ストリームイテレータを比較する</target>
        </trans-unit>
        <trans-unit id="c1072e8ebfe80e00ae1548566152f36b81497b61" translate="yes" xml:space="preserve">
          <source>stream open mode type</source>
          <target state="translated">ストリームオープンモード型</target>
        </trans-unit>
        <trans-unit id="e2f74d2b6ed648198d570a2f6609f8ebe958e138" translate="yes" xml:space="preserve">
          <source>stream position, such as one obtained by &lt;code&gt;&lt;a href=&quot;seekoff&quot;&gt;seekoff()&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;seekpos()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;seekoff&quot;&gt;seekoff()&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;seekpos()&lt;/code&gt; によって取得される位置などのストリーム位置</target>
        </trans-unit>
        <trans-unit id="f4c74428fd24b00bd30d49f4af82c1ba98eba501" translate="yes" xml:space="preserve">
          <source>stream to exchange the state with</source>
          <target state="translated">ストリームで状態を交換します。</target>
        </trans-unit>
        <trans-unit id="8f8e0ef0b43b215dcddcd9e34171511a49125128" translate="yes" xml:space="preserve">
          <source>stream to initialize the istream_iterator with</source>
          <target state="translated">ストリームを使用して istream_iterator を</target>
        </trans-unit>
        <trans-unit id="2134a4ca5c5f63768f886e6c0d8130cf241b7e6e" translate="yes" xml:space="preserve">
          <source>stream to obtain the stream buffer from</source>
          <target state="translated">からストリームバッファを取得するために</target>
        </trans-unit>
        <trans-unit id="011f9465eba1bd8fd046ebac42f0f5890e959152" translate="yes" xml:space="preserve">
          <source>stream to perform input on</source>
          <target state="translated">ストリーム</target>
        </trans-unit>
        <trans-unit id="874b9c4b34d761b3703ed5eafddf6a721f783d81" translate="yes" xml:space="preserve">
          <source>stream to perform output on</source>
          <target state="translated">ストリーム</target>
        </trans-unit>
        <trans-unit id="3dfa8b69494bebe465003ad10eac43b2c92b7881" translate="yes" xml:space="preserve">
          <source>stream to retrieve the formatting information from</source>
          <target state="translated">ストリームからフォーマット情報を取得するために</target>
        </trans-unit>
        <trans-unit id="01c0a97d27426d7612cfc35eaaaf7e431f84603d" translate="yes" xml:space="preserve">
          <source>streambuf</source>
          <target state="translated">streambuf</target>
        </trans-unit>
        <trans-unit id="51032f427fbe8dd8ccc0581cc22ae16b9cad74b8" translate="yes" xml:space="preserve">
          <source>streambuf to initialize with</source>
          <target state="translated">で初期化する streambuf</target>
        </trans-unit>
        <trans-unit id="d50270d70931e3dcfca7cf7e357be5073efdf2bd" translate="yes" xml:space="preserve">
          <source>streambuffer to use as output sequence</source>
          <target state="translated">しゅつりょくシーケンスとして使用するストリームバッファ</target>
        </trans-unit>
        <trans-unit id="6f6a91022a0210122013ab0bbc007aad9659e185" translate="yes" xml:space="preserve">
          <source>streambuffer to use as underlying device</source>
          <target state="translated">ベースデバイスとして使用するストリームバッファ</target>
        </trans-unit>
        <trans-unit id="afd303aef87f29b87f56654fc6f23026216d61a5" translate="yes" xml:space="preserve">
          <source>streamoff</source>
          <target state="translated">streamoff</target>
        </trans-unit>
        <trans-unit id="39bab19fea3fa07bbc86d13c06628d81e15279ed" translate="yes" xml:space="preserve">
          <source>streams whose state to swap</source>
          <target state="translated">スワップする状態のストリーム</target>
        </trans-unit>
        <trans-unit id="117dd6714f333ebf4c5f0d3d2a614807bda08dfa" translate="yes" xml:space="preserve">
          <source>streamsize</source>
          <target state="translated">streamsize</target>
        </trans-unit>
        <trans-unit id="e76d2a3073c61d4064cdadf379a2b29b2d2f5ccc" translate="yes" xml:space="preserve">
          <source>strerror</source>
          <target state="translated">strerror</target>
        </trans-unit>
        <trans-unit id="de093aaea82fd740ecd7cb7be06ae3f527748ad2" translate="yes" xml:space="preserve">
          <source>strftime</source>
          <target state="translated">strftime</target>
        </trans-unit>
        <trans-unit id="480839692df2a763f6cb41d281c4dd9dccb3674c" translate="yes" xml:space="preserve">
          <source>strict total ordering</source>
          <target state="translated">厳密な全体順序</target>
        </trans-unit>
        <trans-unit id="81a9f9f8b62976e36b230986c6abfb242cf02e4f" translate="yes" xml:space="preserve">
          <source>strict weak ordering relation</source>
          <target state="translated">厳密弱順序関係</target>
        </trans-unit>
        <trans-unit id="0dc89f85b619068818f6ffc8b793a74773a52f83" translate="yes" xml:space="preserve">
          <source>stride</source>
          <target state="translated">stride</target>
        </trans-unit>
        <trans-unit id="9d72b127e05a7cc353505a2aae47e14135e95559" translate="yes" xml:space="preserve">
          <source>strides</source>
          <target state="translated">strides</target>
        </trans-unit>
        <trans-unit id="ecb252044b5ea0f679ee78ec1a12904739e2904d" translate="yes" xml:space="preserve">
          <source>string</source>
          <target state="translated">string</target>
        </trans-unit>
        <trans-unit id="ca198cabdc8db864997d87129e02d50404c7a21e" translate="yes" xml:space="preserve">
          <source>string containing characters to assign</source>
          <target state="translated">割り当て文字列</target>
        </trans-unit>
        <trans-unit id="0821acf8eda28e8e4485c48cb250cc8ab920a7df" translate="yes" xml:space="preserve">
          <source>string conversions such as &lt;code&gt;&lt;a href=&quot;../../string/byte/strtof&quot;&gt;std::strtod&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../../io/c/printf&quot;&gt;std::printf&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../string/byte/strtof&quot;&gt;std::strtod&lt;/a&gt;&lt;/code&gt; や &lt;code&gt;&lt;a href=&quot;../../io/c/printf&quot;&gt;std::printf&lt;/a&gt;&lt;/code&gt; などの文字列変換</target>
        </trans-unit>
        <trans-unit id="c19794b7607678ae43dcac2f70ac5e4d74a5ed6c" translate="yes" xml:space="preserve">
          <source>string identifying characters to search for</source>
          <target state="translated">検索対象文字列</target>
        </trans-unit>
        <trans-unit id="9bc224db834d4d5d5c88404f063d0c00be8e1528" translate="yes" xml:space="preserve">
          <source>string literal</source>
          <target state="translated">文字列リテラル</target>
        </trans-unit>
        <trans-unit id="a1f8f61560ab051d18ded06b1bb36823b256accc" translate="yes" xml:space="preserve">
          <source>string literal operator template</source>
          <target state="translated">文字列リテラル演算子テンプレート</target>
        </trans-unit>
        <trans-unit id="d9a0fd03162250e6c83ad7990c36fe1f00219ab6" translate="yes" xml:space="preserve">
          <source>string or string view to append</source>
          <target state="translated">追加する文字列または文字列ビュー</target>
        </trans-unit>
        <trans-unit id="b57cd5e40e5c76bd5a11db4c7206f180e0c58d78" translate="yes" xml:space="preserve">
          <source>string stream to move from</source>
          <target state="translated">移動先の文字列ストリーム</target>
        </trans-unit>
        <trans-unit id="00f6d444ab4e07559d29f6cef009c00b6dc9a28f" translate="yes" xml:space="preserve">
          <source>string to append</source>
          <target state="translated">付け足し文字列</target>
        </trans-unit>
        <trans-unit id="f23ebc533456178360350c92f6d5284869ffbb67" translate="yes" xml:space="preserve">
          <source>string to assign</source>
          <target state="translated">割り当て文字列</target>
        </trans-unit>
        <trans-unit id="2450fa07f4341e4adac240ae9361dd3326958593" translate="yes" xml:space="preserve">
          <source>string to be used as source to initialize the characters with</source>
          <target state="translated">で文字を初期化するためのソースとして使用される文字列</target>
        </trans-unit>
        <trans-unit id="743a94db11c63dc3811377e76954cb9fd71ebbc9" translate="yes" xml:space="preserve">
          <source>string to be used as source to initialize the string with</source>
          <target state="translated">で文字列を初期化するためのソースとして使用される文字列</target>
        </trans-unit>
        <trans-unit id="014ab0591221266431b7c93b09e303b8e574aec2" translate="yes" xml:space="preserve">
          <source>string to exchange the contents with</source>
          <target state="translated">文字列と内容を交換するために</target>
        </trans-unit>
        <trans-unit id="f12be7477e2b12989b9a6f307dd1b300c5fc87c0" translate="yes" xml:space="preserve">
          <source>string to insert</source>
          <target state="translated">挿入する文字列</target>
        </trans-unit>
        <trans-unit id="e7aa3238e43392ab67f9fd4b55ec3c26e92bf878" translate="yes" xml:space="preserve">
          <source>string to search for</source>
          <target state="translated">検索用の文字列</target>
        </trans-unit>
        <trans-unit id="084820704e7cd8d38763c8b57fa8a1b638298865" translate="yes" xml:space="preserve">
          <source>string to use as initial contents of the string stream</source>
          <target state="translated">文字列ストリームの初期コンテンツとして使用する文字列</target>
        </trans-unit>
        <trans-unit id="62218010e5a34a041388f7d6f364aee16e27faf3" translate="yes" xml:space="preserve">
          <source>string to use for replacement</source>
          <target state="translated">置き換え文字列</target>
        </trans-unit>
        <trans-unit id="f69d64c7c72bb303db246c8fa2c6ebf38c0c3e7e" translate="yes" xml:space="preserve">
          <source>string used to initialize the bitset</source>
          <target state="translated">ビットセットの初期化に使用される文字列</target>
        </trans-unit>
        <trans-unit id="32069a84e164f50b9c29c6e07d0c88fc879ff39e" translate="yes" xml:space="preserve">
          <source>string-literal</source>
          <target state="translated">string-literal</target>
        </trans-unit>
        <trans-unit id="d5600f067e8412dc47f25d70c3a916d910214789" translate="yes" xml:space="preserve">
          <source>string-literalud-suffix</source>
          <target state="translated">string-literalud-suffix</target>
        </trans-unit>
        <trans-unit id="4f8555754e5bd7953b038e19b7f7efe1a1bfcc39" translate="yes" xml:space="preserve">
          <source>string_view</source>
          <target state="translated">string_view</target>
        </trans-unit>
        <trans-unit id="15b86fd5b15b679e96320473e0d6b1501fa04d00" translate="yes" xml:space="preserve">
          <source>strings whose contents to compare</source>
          <target state="translated">比較対象の文字列</target>
        </trans-unit>
        <trans-unit id="45e6bfc5d5bd9759b881d4d0422f10851fccf175" translate="yes" xml:space="preserve">
          <source>strings whose contents to swap</source>
          <target state="translated">スワップする内容の文字列</target>
        </trans-unit>
        <trans-unit id="36b55dbb4fb9995f63df002be373baaeb6665ae9" translate="yes" xml:space="preserve">
          <source>stringwstringu8stringu16stringu32string</source>
          <target state="translated">stringwstringu8stringu16stringu32string</target>
        </trans-unit>
        <trans-unit id="6c19df52f4536474beeb594b4c186a34750bfbba" translate="yes" xml:space="preserve">
          <source>strlen</source>
          <target state="translated">strlen</target>
        </trans-unit>
        <trans-unit id="b9a3d1d31a9c0286d8a27feaf45dac65d87a6258" translate="yes" xml:space="preserve">
          <source>strncat</source>
          <target state="translated">strncat</target>
        </trans-unit>
        <trans-unit id="1452b37a8c42bfdb3f5e5ad5e6db8d4ec3c05dc1" translate="yes" xml:space="preserve">
          <source>strncmp</source>
          <target state="translated">strncmp</target>
        </trans-unit>
        <trans-unit id="97769ab411139b6b8a2dec456364fa5186a4a091" translate="yes" xml:space="preserve">
          <source>strncpy</source>
          <target state="translated">strncpy</target>
        </trans-unit>
        <trans-unit id="7ca94650c4b9745c62f77694246c2c6c68710074" translate="yes" xml:space="preserve">
          <source>strong structural equality</source>
          <target state="translated">強構造的平等</target>
        </trans-unit>
        <trans-unit id="6e2837a6122279bc97e6bc52c5fee06f8f82baa1" translate="yes" xml:space="preserve">
          <source>strong_equal</source>
          <target state="translated">strong_equal</target>
        </trans-unit>
        <trans-unit id="7ca4d0846fa22e60bc88df02a5cd7b43c98525ac" translate="yes" xml:space="preserve">
          <source>strong_equality</source>
          <target state="translated">strong_equality</target>
        </trans-unit>
        <trans-unit id="e52ec356b8f699bc83b5fd73fc7d0e102e617c93" translate="yes" xml:space="preserve">
          <source>strong_order</source>
          <target state="translated">strong_order</target>
        </trans-unit>
        <trans-unit id="bbbc3f31fe583dc526c01c7da82df281d0b8071a" translate="yes" xml:space="preserve">
          <source>strong_ordering</source>
          <target state="translated">strong_ordering</target>
        </trans-unit>
        <trans-unit id="e02db13c706543aa9ac8af200d565814c85283ed" translate="yes" xml:space="preserve">
          <source>strongly happens-before</source>
          <target state="translated">已むに已まれず</target>
        </trans-unit>
        <trans-unit id="83f143739d403e0b952decd540ca7b1d15e706b2" translate="yes" xml:space="preserve">
          <source>stroperator string_type</source>
          <target state="translated">ストロペレータ文字列型</target>
        </trans-unit>
        <trans-unit id="6c7bfb0d1a481934467d1515266ace98bb8488e2" translate="yes" xml:space="preserve">
          <source>strpbrk</source>
          <target state="translated">strpbrk</target>
        </trans-unit>
        <trans-unit id="74020e4c7b38368e509a4c70eab2f0f4ffddf86f" translate="yes" xml:space="preserve">
          <source>strrchr</source>
          <target state="translated">strrchr</target>
        </trans-unit>
        <trans-unit id="2f05ae62158f750d3fd487964b171c1e68e58e2c" translate="yes" xml:space="preserve">
          <source>strspn</source>
          <target state="translated">strspn</target>
        </trans-unit>
        <trans-unit id="5886180d00b45c0cda775277994ebb81198af915" translate="yes" xml:space="preserve">
          <source>strstr</source>
          <target state="translated">strstr</target>
        </trans-unit>
        <trans-unit id="72346b617b9f71a4ea90225eb9def1f6f623d96f" translate="yes" xml:space="preserve">
          <source>strstream</source>
          <target state="translated">strstream</target>
        </trans-unit>
        <trans-unit id="38f50a12c2dff37507079f9dabf7ec587d7edced" translate="yes" xml:space="preserve">
          <source>strstreambuf</source>
          <target state="translated">strstreambuf</target>
        </trans-unit>
        <trans-unit id="2a984c121b6efb400b9d340372a10cd09262e941" translate="yes" xml:space="preserve">
          <source>strtofstrtodstrtold</source>
          <target state="translated">strtofstrtodstrtold</target>
        </trans-unit>
        <trans-unit id="d4931e62f7bff7b20a62ade93c357b7348f8e9c3" translate="yes" xml:space="preserve">
          <source>strtoimaxstrtoumax</source>
          <target state="translated">strtoimaxstrtoumax</target>
        </trans-unit>
        <trans-unit id="dad2f887a8ea1d34aac73388bf6d8a40bae7ce3a" translate="yes" xml:space="preserve">
          <source>strtok</source>
          <target state="translated">strtok</target>
        </trans-unit>
        <trans-unit id="4dc2dbb4a3241c975df311882649fdf9029038a5" translate="yes" xml:space="preserve">
          <source>strtolstrtoll</source>
          <target state="translated">strtolstrtoll</target>
        </trans-unit>
        <trans-unit id="a22cd29917eed6036bd52f949b366f08304029e2" translate="yes" xml:space="preserve">
          <source>strtoul strtoull</source>
          <target state="translated">ストルトゥールストルトゥール</target>
        </trans-unit>
        <trans-unit id="d118e5a3cc15b182d1286373a60c787e58d3166f" translate="yes" xml:space="preserve">
          <source>struct</source>
          <target state="translated">struct</target>
        </trans-unit>
        <trans-unit id="8ebdc69f31f5f5d3f691d7c13f21f4d3c04b5430" translate="yes" xml:space="preserve">
          <source>structs with volatile members are trivially copyable</source>
          <target state="translated">揮発性のメンバを持つ構造体は、簡単にコピー可能です。</target>
        </trans-unit>
        <trans-unit id="228ed98858ed5bbc6d92f478301d1bca4cb3ce61" translate="yes" xml:space="preserve">
          <source>structs with volatile members were trivially copyable</source>
          <target state="translated">揮発性のあるメンバーを持つ構造体は、些細なことでもコピー可能でした。</target>
        </trans-unit>
        <trans-unit id="9466e45d36185dbf7c2725cf1e0c9c38598171e6" translate="yes" xml:space="preserve">
          <source>structure type, return of the &lt;code&gt;&lt;a href=&quot;../numeric/math/div&quot;&gt;std::div&lt;/a&gt;&lt;/code&gt; function</source>
          <target state="translated">構造タイプ、 &lt;code&gt;&lt;a href=&quot;../numeric/math/div&quot;&gt;std::div&lt;/a&gt;&lt;/code&gt; 関数の戻り値</target>
        </trans-unit>
        <trans-unit id="dbf69db054b2c4947cda90ea13d03026fa8ade23" translate="yes" xml:space="preserve">
          <source>structure type, return of the &lt;code&gt;&lt;a href=&quot;../numeric/math/div&quot;&gt;std::imaxdiv&lt;/a&gt;&lt;/code&gt; function</source>
          <target state="translated">構造タイプ、 &lt;code&gt;&lt;a href=&quot;../numeric/math/div&quot;&gt;std::imaxdiv&lt;/a&gt;&lt;/code&gt; 関数の戻り値</target>
        </trans-unit>
        <trans-unit id="fdd9364c06da77be8fde36f0d8fcb52c8487aa91" translate="yes" xml:space="preserve">
          <source>structure type, return of the &lt;code&gt;&lt;a href=&quot;../numeric/math/div&quot;&gt;std::ldiv&lt;/a&gt;&lt;/code&gt; function</source>
          <target state="translated">構造タイプ、 &lt;code&gt;&lt;a href=&quot;../numeric/math/div&quot;&gt;std::ldiv&lt;/a&gt;&lt;/code&gt; 関数の戻り値</target>
        </trans-unit>
        <trans-unit id="8aa899fda5ee3014b6132d3392217d5c20ef53af" translate="yes" xml:space="preserve">
          <source>structure type, return of the &lt;code&gt;&lt;a href=&quot;../numeric/math/div&quot;&gt;std::lldiv&lt;/a&gt;&lt;/code&gt; function</source>
          <target state="translated">構造タイプ、 &lt;code&gt;&lt;a href=&quot;../numeric/math/div&quot;&gt;std::lldiv&lt;/a&gt;&lt;/code&gt; 関数の戻り値</target>
        </trans-unit>
        <trans-unit id="23a5cb1c98ef9df3718ae21114a0c6d70370888e" translate="yes" xml:space="preserve">
          <source>structure type, return of the &lt;code&gt;&lt;a href=&quot;math/div&quot;&gt;std::div&lt;/a&gt;&lt;/code&gt; function</source>
          <target state="translated">構造タイプ、 &lt;code&gt;&lt;a href=&quot;math/div&quot;&gt;std::div&lt;/a&gt;&lt;/code&gt; 関数の戻り値</target>
        </trans-unit>
        <trans-unit id="3acee9d701562fc254d78760e17f0f50206fafb1" translate="yes" xml:space="preserve">
          <source>structure type, return of the &lt;code&gt;&lt;a href=&quot;math/div&quot;&gt;std::imaxdiv&lt;/a&gt;&lt;/code&gt; function</source>
          <target state="translated">構造タイプ、 &lt;code&gt;&lt;a href=&quot;math/div&quot;&gt;std::imaxdiv&lt;/a&gt;&lt;/code&gt; 関数の戻り値</target>
        </trans-unit>
        <trans-unit id="2bf0ba44165250002e152d2c55ec6c300af8d6cf" translate="yes" xml:space="preserve">
          <source>structure type, return of the &lt;code&gt;&lt;a href=&quot;math/div&quot;&gt;std::ldiv&lt;/a&gt;&lt;/code&gt; function</source>
          <target state="translated">構造タイプ、 &lt;code&gt;&lt;a href=&quot;math/div&quot;&gt;std::ldiv&lt;/a&gt;&lt;/code&gt; 関数の戻り値</target>
        </trans-unit>
        <trans-unit id="27882d920e66065efa063e6b3546dd75816cc090" translate="yes" xml:space="preserve">
          <source>structure type, return of the &lt;code&gt;&lt;a href=&quot;math/div&quot;&gt;std::lldiv&lt;/a&gt;&lt;/code&gt; function</source>
          <target state="translated">構造タイプ、 &lt;code&gt;&lt;a href=&quot;math/div&quot;&gt;std::lldiv&lt;/a&gt;&lt;/code&gt; 関数の戻り値</target>
        </trans-unit>
        <trans-unit id="c2847d3feded1d41060c4eb0cc35fd0765775026" translate="yes" xml:space="preserve">
          <source>structured binding declaration</source>
          <target state="translated">構造化結合宣言</target>
        </trans-unit>
        <trans-unit id="fac8428928a6d525e5c2c2c24288ee5e11f20c5b" translate="yes" xml:space="preserve">
          <source>structured bindings</source>
          <target state="translated">構造化バインディング</target>
        </trans-unit>
        <trans-unit id="a5492aced1d1abc48f71d4b0008428cd833f9666" translate="yes" xml:space="preserve">
          <source>strxfrm</source>
          <target state="translated">strxfrm</target>
        </trans-unit>
        <trans-unit id="f1981af373d98135c0966aaf08eaa6fd55c09455" translate="yes" xml:space="preserve">
          <source>student_t_distribution</source>
          <target state="translated">student_t_distribution</target>
        </trans-unit>
        <trans-unit id="c3dd351bcfa7e34be0c014f83486d0a785e2abe5" translate="yes" xml:space="preserve">
          <source>sub_match</source>
          <target state="translated">sub_match</target>
        </trans-unit>
        <trans-unit id="b4fc850f81d2e354f4ab0c9892393349580aaf35" translate="yes" xml:space="preserve">
          <source>submatch</source>
          <target state="translated">submatch</target>
        </trans-unit>
        <trans-unit id="b8dcdeb6656f8c2f704e5ad26f89a0710e292fed" translate="yes" xml:space="preserve">
          <source>submatches</source>
          <target state="translated">submatches</target>
        </trans-unit>
        <trans-unit id="48c3883e89fe31a7c8d6286005c9164ce3207954" translate="yes" xml:space="preserve">
          <source>subnormal</source>
          <target state="translated">subnormal</target>
        </trans-unit>
        <trans-unit id="832c96dd459e81ccc22f73492aa50e87f038b768" translate="yes" xml:space="preserve">
          <source>subobjects</source>
          <target state="translated">subobjects</target>
        </trans-unit>
        <trans-unit id="16833d9acee11c8ebcb625b1cebba007d73e58d1" translate="yes" xml:space="preserve">
          <source>subrange</source>
          <target state="translated">subrange</target>
        </trans-unit>
        <trans-unit id="df85a3fa4cab8cb59c20a9638f3c316f42a1cd49" translate="yes" xml:space="preserve">
          <source>subscript</source>
          <target state="translated">subscript</target>
        </trans-unit>
        <trans-unit id="7e396f5ca36c1a6ce13dbd23dce1a0ed75fb68fd" translate="yes" xml:space="preserve">
          <source>subscripting an array rvalue resulted in lvalue</source>
          <target state="translated">配列 rvalue を添え字にすると lvalue になります。</target>
        </trans-unit>
        <trans-unit id="181ab3a1791ff5fc589c393df83edd6937bd931d" translate="yes" xml:space="preserve">
          <source>subspan</source>
          <target state="translated">subspan</target>
        </trans-unit>
        <trans-unit id="d0fb56ce199aa106b03724e03b249269585710d1" translate="yes" xml:space="preserve">
          <source>substitution failure</source>
          <target state="translated">置換失敗</target>
        </trans-unit>
        <trans-unit id="b00fb8eeec4073a07d6134b8b97544cc4be94122" translate="yes" xml:space="preserve">
          <source>substitution is performed</source>
          <target state="translated">置換が行われる</target>
        </trans-unit>
        <trans-unit id="1a7fcb58656f61628c9c0507f553928f5ccbc010" translate="yes" xml:space="preserve">
          <source>substitution of each template argument into the following template parameters (if any) succeeds, and</source>
          <target state="translated">各テンプレート引数を以下のテンプレートパラメータに代入することに成功します(もしあれば)。</target>
        </trans-unit>
        <trans-unit id="72face471a629a5739e9760b45e749a5dab417a1" translate="yes" xml:space="preserve">
          <source>substr</source>
          <target state="translated">substr</target>
        </trans-unit>
        <trans-unit id="b8faf4d398f9f8c22db0a6b8276ca0f21670b959" translate="yes" xml:space="preserve">
          <source>subsume</source>
          <target state="translated">subsume</target>
        </trans-unit>
        <trans-unit id="fe0bcc980c6db6269847b067bbf660b331f1fb67" translate="yes" xml:space="preserve">
          <source>subtract_with_carry_engine</source>
          <target state="translated">subtract_with_carry_engine</target>
        </trans-unit>
        <trans-unit id="148d46fb75d907f1fd6bcb109cb532d2ed504a21" translate="yes" xml:space="preserve">
          <source>subtraction</source>
          <target state="translated">subtraction</target>
        </trans-unit>
        <trans-unit id="32c7e8ab112f8f017c09c8ba993718065132093d" translate="yes" xml:space="preserve">
          <source>subtraction assignment</source>
          <target state="translated">減算代入</target>
        </trans-unit>
        <trans-unit id="4cf23ad545aa398822494629576ad9b1e21ccafe" translate="yes" xml:space="preserve">
          <source>subtracts a non-atomic value from an atomic object and obtains the previous value of the atomic</source>
          <target state="translated">は、原子オブジェクトから原子以外の値を引き、原子の前の値を取得します。</target>
        </trans-unit>
        <trans-unit id="cbde0ba4d7df59cd23db03f13b6a8aecd0a4c6cd" translate="yes" xml:space="preserve">
          <source>subtracts two &lt;code&gt;ratio&lt;/code&gt; objects at compile-time</source>
          <target state="translated">コンパイル時に2つの &lt;code&gt;ratio&lt;/code&gt; オブジェクトを減算します</target>
        </trans-unit>
        <trans-unit id="3343b5b8a2b4cdd0786c194a5a7c802d49824ae0" translate="yes" xml:space="preserve">
          <source>succ</source>
          <target state="translated">succ</target>
        </trans-unit>
        <trans-unit id="53a5687cb26dc41f2ab4033e97e13adefd3740d6" translate="yes" xml:space="preserve">
          <source>success</source>
          <target state="translated">success</target>
        </trans-unit>
        <trans-unit id="52e914cf66dfa3d924282b56a4ac495878d412cf" translate="yes" xml:space="preserve">
          <source>successful execution of a program</source>
          <target state="translated">プログラム成功</target>
        </trans-unit>
        <trans-unit id="131cc9b81a14732af5940e3520be33b02a5126bc" translate="yes" xml:space="preserve">
          <source>such init is ill-formed</source>
          <target state="translated">そのようなinitは形が悪い</target>
        </trans-unit>
        <trans-unit id="a4edf4602df6d76a4a602894ed46dd37d24fbd4d" translate="yes" xml:space="preserve">
          <source>such specializations are forbidden</source>
          <target state="translated">斯様な専門化は禁じられている</target>
        </trans-unit>
        <trans-unit id="fdca81ff0033bd52e01e0c38528c9264aeefc4ea" translate="yes" xml:space="preserve">
          <source>such that</source>
          <target state="translated">ほどに</target>
        </trans-unit>
        <trans-unit id="35dbe21e91d42f19fee9ad5a0c19e929a8589aff" translate="yes" xml:space="preserve">
          <source>such that.</source>
          <target state="translated">そのような</target>
        </trans-unit>
        <trans-unit id="10cd69e5ac1b3f64b4fd6c1ff667b74fdd801a3d" translate="yes" xml:space="preserve">
          <source>such types are allowed</source>
          <target state="translated">このような型が許可されています</target>
        </trans-unit>
        <trans-unit id="d0f96de8d17f2d027b268946d5227b8ce6d69b7f" translate="yes" xml:space="preserve">
          <source>such uses are allowed</source>
          <target state="translated">しようがきく</target>
        </trans-unit>
        <trans-unit id="ec87faca4cbad909219bbcea9dbbe370a9f8c690" translate="yes" xml:space="preserve">
          <source>suffix</source>
          <target state="translated">suffix</target>
        </trans-unit>
        <trans-unit id="58b768cc1cc35edf853a5c40e1918871a55ccd09" translate="yes" xml:space="preserve">
          <source>suffix iterator</source>
          <target state="translated">サフィックスイテレータ</target>
        </trans-unit>
        <trans-unit id="ae756647b6002c47e1614a4a3cf9434a18951f73" translate="yes" xml:space="preserve">
          <source>suffix, if present, is one of &lt;code&gt;f&lt;/code&gt;, &lt;code&gt;F&lt;/code&gt;, &lt;code&gt;l&lt;/code&gt;, or &lt;code&gt;L&lt;/code&gt;. The suffix determines the type of the floating-point literal:</source>
          <target state="translated">サフィックスが存在する場合は、 &lt;code&gt;f&lt;/code&gt; 、 &lt;code&gt;F&lt;/code&gt; 、 &lt;code&gt;l&lt;/code&gt; 、または &lt;code&gt;L&lt;/code&gt; のいずれかです。接尾辞は、浮動小数点リテラルのタイプを決定します。</target>
        </trans-unit>
        <trans-unit id="54a00030f0e0dd466ade4932f4c1e4c35348da36" translate="yes" xml:space="preserve">
          <source>suggests that the implementation reschedule execution of threads</source>
          <target state="translated">は、実装がスレッドの実行をリスケジュールすることを示唆しています。</target>
        </trans-unit>
        <trans-unit id="e9dff3557ded7414ae530834de7011f1388d202a" translate="yes" xml:space="preserve">
          <source>sum</source>
          <target state="translated">sum</target>
        </trans-unit>
        <trans-unit id="fc547405c26ae5616fa305b55d7aff0e99b28e82" translate="yes" xml:space="preserve">
          <source>sums up a range of elements</source>
          <target state="translated">要素の範囲をまとめる</target>
        </trans-unit>
        <trans-unit id="08517d94f15db916c3c89e7b27d88e3a91e6715c" translate="yes" xml:space="preserve">
          <source>sungetc</source>
          <target state="translated">sungetc</target>
        </trans-unit>
        <trans-unit id="fe28b88ef9e93d78f44bacf7dd37f36c2fecf9bc" translate="yes" xml:space="preserve">
          <source>supplied at construction. The size of buffers obtained follows a geometric progression.</source>
          <target state="translated">建設時に供給される。得られた緩衝材の大きさは、幾何学的な進行に従う。</target>
        </trans-unit>
        <trans-unit id="a09337464b15bc3f8c253cc193ff5154d926f56d" translate="yes" xml:space="preserve">
          <source>supplies implementation-dependent library information</source>
          <target state="translated">実装依存のライブラリ情報を提供します。</target>
        </trans-unit>
        <trans-unit id="85988b082eb7826b107e7e4c36983e024be46f48" translate="yes" xml:space="preserve">
          <source>suppresses compiler warnings on unused entities, if any</source>
          <target state="translated">使用されていないエンティティがある場合は、コンパイラの警告を抑制します。</target>
        </trans-unit>
        <trans-unit id="e354577c2952694a19201f1e7839a0fc72d28970" translate="yes" xml:space="preserve">
          <source>surrogate call function</source>
          <target state="translated">サロゲートコール機能</target>
        </trans-unit>
        <trans-unit id="0a6190df9675de3c18b12fd3fc97648581780661" translate="yes" xml:space="preserve">
          <source>sv</source>
          <target state="translated">sv</target>
        </trans-unit>
        <trans-unit id="ade3217578be1546a1b2a6827e4b13aa6d48d141" translate="yes" xml:space="preserve">
          <source>swap</source>
          <target state="translated">swap</target>
        </trans-unit>
        <trans-unit id="e5d54233f907817146961a933b0c98bb8687d402" translate="yes" xml:space="preserve">
          <source>swap the values referenced by two dereferenceable objects</source>
          <target state="translated">2つの参照可能なオブジェクトで参照される値を入れ替えます。</target>
        </trans-unit>
        <trans-unit id="23971f62cfe2fd8ee02a150548044e13bfc565ca" translate="yes" xml:space="preserve">
          <source>swap(std::filesystem::path)</source>
          <target state="translated">swap(std::filesystem::path)</target>
        </trans-unit>
        <trans-unit id="2c8d87774f1e922acd35e8035d1a91f0474c44f5" translate="yes" xml:space="preserve">
          <source>swap_ranges</source>
          <target state="translated">swap_ranges</target>
        </trans-unit>
        <trans-unit id="933a600a6146793134748371bad42894cca424a9" translate="yes" xml:space="preserve">
          <source>swapping multi-dimensional arrays can never be &lt;code&gt;noexcept&lt;/code&gt; due to name lookup problems</source>
          <target state="translated">名前検索の問題のため、多次元配列の交換は決して &lt;code&gt;noexcept&lt;/code&gt; はありません</target>
        </trans-unit>
        <trans-unit id="9c90bf3e68b2e57aa6b85ac65e216a5a9436f6d9" translate="yes" xml:space="preserve">
          <source>swaps state with another &lt;code&gt;&lt;a href=&quot;../unique_lock&quot;&gt;std::unique_lock&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">状態を別の &lt;code&gt;&lt;a href=&quot;../unique_lock&quot;&gt;std::unique_lock&lt;/a&gt;&lt;/code&gt; と交換します</target>
        </trans-unit>
        <trans-unit id="e0d22c5f690e2e6b4cba1ce915026040fd824a3b" translate="yes" xml:space="preserve">
          <source>swaps state with another &lt;code&gt;std::unique_lock&lt;/code&gt;</source>
          <target state="translated">状態を別の &lt;code&gt;std::unique_lock&lt;/code&gt; と交換します</target>
        </trans-unit>
        <trans-unit id="c76acb91eeb3ddd2f46a14572407780bf536471b" translate="yes" xml:space="preserve">
          <source>swaps stream objects, except for the associated buffer</source>
          <target state="translated">は、関連するバッファを除いて、ストリームオブジェクトをスワップします。</target>
        </trans-unit>
        <trans-unit id="33e307d70c53a596ea9a34c66931a680bdae2a44" translate="yes" xml:space="preserve">
          <source>swaps the contents</source>
          <target state="translated">の内容を入れ替えます。</target>
        </trans-unit>
        <trans-unit id="47d09aaea302de77a39f01f37ce1704c6070cca8" translate="yes" xml:space="preserve">
          <source>swaps the contents of two &lt;code&gt;tuple&lt;/code&gt;s</source>
          <target state="translated">2つの &lt;code&gt;tuple&lt;/code&gt; の内容を交換します</target>
        </trans-unit>
        <trans-unit id="47aee1bbf121d6f5f3c47dca42246abb1b5beb29" translate="yes" xml:space="preserve">
          <source>swaps the data members with another shared_lock</source>
          <target state="translated">データメンバーを別のshared_lockと交換します。</target>
        </trans-unit>
        <trans-unit id="0bb6954bc133434d78c1c22c9110e2a1e48bf5ac" translate="yes" xml:space="preserve">
          <source>swaps the elements pointed to by two iterators</source>
          <target state="translated">は、2つのイテレータが指す要素を入れ替えます。</target>
        </trans-unit>
        <trans-unit id="c67a3813935541e8d7e84fca5962660baaa20a35" translate="yes" xml:space="preserve">
          <source>swaps the managed objects</source>
          <target state="translated">管理されているオブジェクトを交換します。</target>
        </trans-unit>
        <trans-unit id="12726a6783b4361c73f1d14ed2f0f0720ad13615" translate="yes" xml:space="preserve">
          <source>swaps the values of two objects</source>
          <target state="translated">は、2つのオブジェクトの値を入れ替えます。</target>
        </trans-unit>
        <trans-unit id="b83a63e96e1874f912b3e244265fb993e96f02fb" translate="yes" xml:space="preserve">
          <source>swaps two &lt;code&gt;any&lt;/code&gt; objects</source>
          <target state="translated">スワップ2 &lt;code&gt;any&lt;/code&gt; オブジェクト</target>
        </trans-unit>
        <trans-unit id="8c51d9f22436946f3b4835e46263d274a375a1a5" translate="yes" xml:space="preserve">
          <source>swaps two &lt;code&gt;std::vector&amp;lt;bool&amp;gt;::reference&lt;/code&gt;s</source>
          <target state="translated">スワップ2つ &lt;code&gt;std::vector&amp;lt;bool&amp;gt;::reference&lt;/code&gt; S</target>
        </trans-unit>
        <trans-unit id="ac5d75d9712b7f98a381d5c2ace89f794cb5fd63" translate="yes" xml:space="preserve">
          <source>swaps two basic_filebuf objects</source>
          <target state="translated">2 つの basic_filebuf オブジェクトをスワップします。</target>
        </trans-unit>
        <trans-unit id="0ce9c6745095b1e8b51b427653e39f9852827f95" translate="yes" xml:space="preserve">
          <source>swaps two basic_streambuf objects</source>
          <target state="translated">2 つの basic_streambuf オブジェクトをスワップします。</target>
        </trans-unit>
        <trans-unit id="9bb6685a3af6de00838c2cd2e7930a7351bd9c4d" translate="yes" xml:space="preserve">
          <source>swaps two basic_stringbuf objects</source>
          <target state="translated">2つのbasic_stringbufオブジェクトをスワップします。</target>
        </trans-unit>
        <trans-unit id="a42df90d928c123ba7f1e672ddf735e5a92103ba" translate="yes" xml:space="preserve">
          <source>swaps two basic_syncbuf objects</source>
          <target state="translated">2つのbasic_syncbufオブジェクトをスワップします。</target>
        </trans-unit>
        <trans-unit id="f686202d7f13ce2a36abd9b75d4a7414ee8b4608" translate="yes" xml:space="preserve">
          <source>swaps two file streams</source>
          <target state="translated">二つのファイルストリームを入れ替えます</target>
        </trans-unit>
        <trans-unit id="450d3bb8d6bae90480987dfb338c8a12273e7479" translate="yes" xml:space="preserve">
          <source>swaps two paths</source>
          <target state="translated">二通りを入れ替える</target>
        </trans-unit>
        <trans-unit id="63106ac91246fbe71c9ac08caf7ac6e989a393d3" translate="yes" xml:space="preserve">
          <source>swaps two promise objects</source>
          <target state="translated">二つの約束オブジェクトを入れ替えます。</target>
        </trans-unit>
        <trans-unit id="7e2908ead2dbd0a4e5b063b8237479a4710ea105" translate="yes" xml:space="preserve">
          <source>swaps two ranges of elements</source>
          <target state="translated">要素の2つの範囲を入れ替えます</target>
        </trans-unit>
        <trans-unit id="de86033c2f461e38a0459c5543dc817687abd849" translate="yes" xml:space="preserve">
          <source>swaps two string streams</source>
          <target state="translated">二つの文字列ストリームを入れ替えます</target>
        </trans-unit>
        <trans-unit id="21725eb269446c9b5135f804fb74ba494a707e27" translate="yes" xml:space="preserve">
          <source>swaps two task objects</source>
          <target state="translated">二つのタスクオブジェクトを入れ替えます</target>
        </trans-unit>
        <trans-unit id="e6bf8fa9bf72620004ebca94a63b832d3860837e" translate="yes" xml:space="preserve">
          <source>swaps two thread objects</source>
          <target state="translated">二つのスレッドオブジェクトを入れ替えます</target>
        </trans-unit>
        <trans-unit id="3ad2b76ffeaaf2b5987c64cbad982c438f14b776" translate="yes" xml:space="preserve">
          <source>swaps with another &lt;code&gt;&lt;a href=&quot;../basic_ios&quot;&gt;std::basic_ios&lt;/a&gt;&lt;/code&gt; except for &lt;code&gt;rdbuf&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../basic_ios&quot;&gt;std::basic_ios&lt;/a&gt;&lt;/code&gt; を除く別のstd :: basic_iosと交換し &lt;code&gt;rdbuf&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fc7baab24652bd134d3e46fcc11642ea2279eccc" translate="yes" xml:space="preserve">
          <source>swaps with another &lt;code&gt;std::basic_ios&lt;/code&gt; except for &lt;code&gt;rdbuf&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;std::basic_ios&lt;/code&gt; を除く別のstd :: basic_iosと交換し &lt;code&gt;rdbuf&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="337886af07434e288cee9947b9348ca6b714566f" translate="yes" xml:space="preserve">
          <source>swaps with another valarray</source>
          <target state="translated">他の値配列と入れ替わります。</target>
        </trans-unit>
        <trans-unit id="f572e1cfd404560e7420e0be7ddc30aa56932f3e" translate="yes" xml:space="preserve">
          <source>swaps with another variant</source>
          <target state="translated">異形のものと入れ替わる</target>
        </trans-unit>
        <trans-unit id="01ba7992f85de477e8e630428eb5ed14769f9155" translate="yes" xml:space="preserve">
          <source>switch</source>
          <target state="translated">switch</target>
        </trans-unit>
        <trans-unit id="a5788b30c0048567ebb31bde44a772c814958a84" translate="yes" xml:space="preserve">
          <source>switch statement</source>
          <target state="translated">スイッチ文</target>
        </trans-unit>
        <trans-unit id="31a970df8ca29f9e7e46fd9794aa77db8cda36c8" translate="yes" xml:space="preserve">
          <source>switches a file stream between wide character I/O and narrow character I/O</source>
          <target state="translated">ファイルストリームをワイド文字I/Oとナロー文字I/Oの間で切り替えます。</target>
        </trans-unit>
        <trans-unit id="cb300c43a77badc097c3e396ef6181c975e16cbe" translate="yes" xml:space="preserve">
          <source>switches between textual and numeric representation of booleans</source>
          <target state="translated">ブーリアンのテキストと数値表現を切り替えます。</target>
        </trans-unit>
        <trans-unit id="247175b14de46873cbab86c9cb13396c410e3309" translate="yes" xml:space="preserve">
          <source>sx&amp;radic;2 &amp;pi;</source>
          <target state="translated">sx&amp;radic;2&amp;pi;</target>
        </trans-unit>
        <trans-unit id="cbdd67cccd954b26841bfbaeffd4a5db21b28743" translate="yes" xml:space="preserve">
          <source>symbolic link</source>
          <target state="translated">シンボリックリンク</target>
        </trans-unit>
        <trans-unit id="bef0155e10e6f66edd47a483578e4531881bdc75" translate="yes" xml:space="preserve">
          <source>symlink_status of the file designated by this directory entry</source>
          <target state="translated">このディレクトリエントリで指定されたファイルの symlink_status</target>
        </trans-unit>
        <trans-unit id="6b387ced110858dcbcda36edb044dc18f91a0894" translate="yes" xml:space="preserve">
          <source>sync</source>
          <target state="translated">sync</target>
        </trans-unit>
        <trans-unit id="24dfafc0ed08e2bedefafc32929ebe604b4773af" translate="yes" xml:space="preserve">
          <source>sync stream buffer to exchange contents with</source>
          <target state="translated">と内容を交換するための同期ストリームバッファ</target>
        </trans-unit>
        <trans-unit id="e5af7d58e10b170ce6a1081c602b41b07be73ce5" translate="yes" xml:space="preserve">
          <source>sync_with_stdio</source>
          <target state="translated">sync_with_stdio</target>
        </trans-unit>
        <trans-unit id="e39e815cecbe36daaaa5ca750adc365a5c0b5527" translate="yes" xml:space="preserve">
          <source>synchronization state before the call to the function.</source>
          <target state="translated">関数を呼び出す前の同期化状態を</target>
        </trans-unit>
        <trans-unit id="6dd9295ddfe8faa449053a19aa1592910572f6b7" translate="yes" xml:space="preserve">
          <source>synchronize-with</source>
          <target state="translated">synchronize-with</target>
        </trans-unit>
        <trans-unit id="0a975f6959933d4d37a975ab8c0af40fba1fc194" translate="yes" xml:space="preserve">
          <source>synchronized output device wrapper</source>
          <target state="translated">同期出力装置ラッパー</target>
        </trans-unit>
        <trans-unit id="d1d41f99a855e14816b60d971a06da2341170522" translate="yes" xml:space="preserve">
          <source>synchronized output stream wrapper</source>
          <target state="translated">同期出力ストリームラッパー</target>
        </trans-unit>
        <trans-unit id="0009694ccc5fe1eac724c97830d621907c6374ed" translate="yes" xml:space="preserve">
          <source>synchronized-with</source>
          <target state="translated">synchronized-with</target>
        </trans-unit>
        <trans-unit id="dea673d36ac685cedf9355831c4df0f37bfb519f" translate="yes" xml:space="preserve">
          <source>synchronized_pool_resource</source>
          <target state="translated">synchronized_pool_resource</target>
        </trans-unit>
        <trans-unit id="a9f741f49e62a0cd0bc1daa043b80426e35c3e21" translate="yes" xml:space="preserve">
          <source>synchronizes an output stream with the actual file</source>
          <target state="translated">出力ストリームを実際のファイルと同期させます。</target>
        </trans-unit>
        <trans-unit id="1eb1a96e0471b66cc70430cf1a786bee9871eeea" translate="yes" xml:space="preserve">
          <source>synchronizes the buffers with the associated character sequence</source>
          <target state="translated">バッファを関連する文字列と同期させます。</target>
        </trans-unit>
        <trans-unit id="e442784bb5c3234096cd401f769a6a7b2aecd19d" translate="yes" xml:space="preserve">
          <source>synchronizes with</source>
          <target state="translated">同期</target>
        </trans-unit>
        <trans-unit id="7beea6aeb9dbf7d5e26632bf5ba07a432e4f86f9" translate="yes" xml:space="preserve">
          <source>synchronizes with the underlying storage device</source>
          <target state="translated">基盤となるストレージデバイスと同期しています。</target>
        </trans-unit>
        <trans-unit id="171fc527c94a35f1c0ec7f329136c331d7cb3b7c" translate="yes" xml:space="preserve">
          <source>synchronizes-with</source>
          <target state="translated">synchronizes-with</target>
        </trans-unit>
        <trans-unit id="8729d909d8bff6259b744902aa4a045117b346ed" translate="yes" xml:space="preserve">
          <source>syncstream</source>
          <target state="translated">syncstream</target>
        </trans-unit>
        <trans-unit id="5262cc2063758bd10838680666281bfee43e2f16" translate="yes" xml:space="preserve">
          <source>synonym of &lt;code&gt;Od&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Od&lt;/code&gt; の同意語</target>
        </trans-unit>
        <trans-unit id="343006be5ed1ee66df3a7846ab7a6004acff5d9f" translate="yes" xml:space="preserve">
          <source>synonym of &lt;code&gt;a&lt;/code&gt;</source>
          <target state="translated">の同義語 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="13b40e00a3b25ce3317f26b62df514a927da5276" translate="yes" xml:space="preserve">
          <source>synonym of &lt;code&gt;b&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;b&lt;/code&gt; の同意語</target>
        </trans-unit>
        <trans-unit id="0e5ac08a7bbc5b663171d5dbcf52e63c62dcb84c" translate="yes" xml:space="preserve">
          <source>synonym of &lt;code&gt;d&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;d&lt;/code&gt; の同意語</target>
        </trans-unit>
        <trans-unit id="17b27bce79a058897a5233a349e16641aca8c658" translate="yes" xml:space="preserve">
          <source>syntax described above, library functions that are defined to accept &quot;detected format&quot; accept path names in both formats: a detected format argument is taken to be in the generic format if and only if it matches the generic format but is not acceptable to the operating system as a native path. On those OS where native format differs between pathnames of directories and pathnames of files, a generic pathname is treated as a directory path if it ends on a directory separator and a regular file otherwise.</source>
          <target state="translated">上で説明した構文では、&quot;検出された形式 &quot;を受け入れるように定義されたライブラリ関数は、両方の形式のパス名を受け入れます。ディレクトリのパス名とファイルのパス名でネイティブフォーマットが異なるOS上では、汎用パス名はディレクトリセパレータで終わる場合はディレクトリパスとして扱われ、そうでない場合は通常のファイルとして扱われます。</target>
        </trans-unit>
        <trans-unit id="e2c82b6ef5b6ffc2393042e783bf22c81584fde3" translate="yes" xml:space="preserve">
          <source>syntax that is different from the portable</source>
          <target state="translated">移植可能な</target>
        </trans-unit>
        <trans-unit id="9d1bd5d24b6fc5dc31fa0b0b0dc7f9ac35398aeb" translate="yes" xml:space="preserve">
          <source>syntax_option_type</source>
          <target state="translated">syntax_option_type</target>
        </trans-unit>
        <trans-unit id="7dcc49a78fdadc3e689b7c54704552b571d7c6d2" translate="yes" xml:space="preserve">
          <source>sys_info</source>
          <target state="translated">sys_info</target>
        </trans-unit>
        <trans-unit id="317f1e761f2faa8da781a4762b9dcc2c5cad209a" translate="yes" xml:space="preserve">
          <source>system</source>
          <target state="translated">system</target>
        </trans-unit>
        <trans-unit id="e613365c69e0709bec2c03c4b1c968f5c1427234" translate="yes" xml:space="preserve">
          <source>system clock time point to convert</source>
          <target state="translated">変換するシステムクロックの時間点</target>
        </trans-unit>
        <trans-unit id="73c0ec86702b474e81ba3b3362afff070528b152" translate="yes" xml:space="preserve">
          <source>system wide:</source>
          <target state="translated">システムワイド。</target>
        </trans-unit>
        <trans-unit id="e5324511e707c8494793aae32350e2567b29bb98" translate="yes" xml:space="preserve">
          <source>system-specific locale identifier. Can be &lt;code&gt;&quot;&quot;&lt;/code&gt; for the user-preferred locale or &lt;code&gt;&quot;C&quot;&lt;/code&gt; for the minimal locale</source>
          <target state="translated">システム固有のロケール識別子。することができ &lt;code&gt;&quot;&quot;&lt;/code&gt; ユーザー優先ロケールまたはのための &lt;code&gt;&quot;C&quot;&lt;/code&gt; 最小限のロケールの</target>
        </trans-unit>
        <trans-unit id="e1257248cecbfcaf4bbabc4378afb4ebcf5075d1" translate="yes" xml:space="preserve">
          <source>system_category</source>
          <target state="translated">system_category</target>
        </trans-unit>
        <trans-unit id="43cd8002bfda8c140780adf992f1c0f44dee155b" translate="yes" xml:space="preserve">
          <source>system_clock</source>
          <target state="translated">system_clock</target>
        </trans-unit>
        <trans-unit id="d1bb6e29f92ca41d05b11eccf3087bc1e0e6d9a5" translate="yes" xml:space="preserve">
          <source>system_error</source>
          <target state="translated">system_error</target>
        </trans-unit>
        <trans-unit id="c57c8e6d6a0517959598de2c08de5cf8daa440ce" translate="yes" xml:space="preserve">
          <source>sz</source>
          <target state="translated">sz</target>
        </trans-unit>
        <trans-unit id="8efd86fb78a56a5145ed7739dcb00c78581c5375" translate="yes" xml:space="preserve">
          <source>t</source>
          <target state="translated">t</target>
        </trans-unit>
        <trans-unit id="990e53e902400b7161e1030ee92ef861b18ad96e" translate="yes" xml:space="preserve">
          <source>t, u</source>
          <target state="translated">t</target>
        </trans-unit>
        <trans-unit id="8868f3789c606dce6f51424af2fe37818737c78c" translate="yes" xml:space="preserve">
          <source>tab (&lt;code&gt;\t&lt;/code&gt;)</source>
          <target state="translated">タブ（ &lt;code&gt;\t&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="c3ee137d4f22eb06ed1351d644f3674592c90836" translate="yes" xml:space="preserve">
          <source>table</source>
          <target state="translated">table</target>
        </trans-unit>
        <trans-unit id="5e9b60f69165f32f8930843ca718e10fdee30c52" translate="yes" xml:space="preserve">
          <source>tag</source>
          <target state="translated">tag</target>
        </trans-unit>
        <trans-unit id="d1fa337eb13df7404a6948f07ff3829e8eabeaec" translate="yes" xml:space="preserve">
          <source>tag class indicating the</source>
          <target state="translated">タグクラス</target>
        </trans-unit>
        <trans-unit id="deb120685185ac588f3b30b4438dc7b4eb20b492" translate="yes" xml:space="preserve">
          <source>tag constants used to specify locking strategy</source>
          <target state="translated">ロック戦略を指定するために使用されるタグ定数</target>
        </trans-unit>
        <trans-unit id="0d164361a17c3fb3033e1f01474fe260a5ccac1a" translate="yes" xml:space="preserve">
          <source>tag parameter used to select constructors with different locking strategies</source>
          <target state="translated">タグパラメータは、異なるロック戦略を持つコンストラクタを選択するために使用されます。</target>
        </trans-unit>
        <trans-unit id="da779724c3cfff723e0eb9bfe185ce9fc35d0d49" translate="yes" xml:space="preserve">
          <source>tag parameter used to select non-locking version of the constructor</source>
          <target state="translated">コンストラクタの非ロックバージョンを選択するためのタグパラメータ</target>
        </trans-unit>
        <trans-unit id="848e2770562fe30f08850948a82e98ea12cdcad0" translate="yes" xml:space="preserve">
          <source>tag type used to identify destroying-delete overloads of operator delete</source>
          <target state="translated">削除演算子の破壊削除オーバーロードを識別するためのタグ型</target>
        </trans-unit>
        <trans-unit id="02616b3d617b495a779770898acc170e2cb49b30" translate="yes" xml:space="preserve">
          <source>tag type used to select allocator-aware constructor overloads</source>
          <target state="translated">アロケータを意識したコンストラクタのオーバーロードを選択するためのタグ型</target>
        </trans-unit>
        <trans-unit id="31f580d15fe4a931afb729c555a3aacf59abbcf5" translate="yes" xml:space="preserve">
          <source>tag type used to select an non-throwing</source>
          <target state="translated">タグ型</target>
        </trans-unit>
        <trans-unit id="bc9e9b219c85456192e10191380983c23ed9db82" translate="yes" xml:space="preserve">
          <source>tag type used to select correct function overload for piecewise construction</source>
          <target state="translated">タグ型</target>
        </trans-unit>
        <trans-unit id="2f2b6e3eea234220c798680aee098377dab178c5" translate="yes" xml:space="preserve">
          <source>tag type used to specify locking strategy</source>
          <target state="translated">ロック戦略を指定するためのタグ型</target>
        </trans-unit>
        <trans-unit id="d5c1cb8e2891cd5e8f687a543c93062c4aeaafa1" translate="yes" xml:space="preserve">
          <source>tags to alter behavior of the standard codecvt facets</source>
          <target state="translated">タグを使用して、標準のコーデックvtファセットの動作を変更します。</target>
        </trans-unit>
        <trans-unit id="61044301ef52864d9d853ed299e057b36fbb62fc" translate="yes" xml:space="preserve">
          <source>tai_clock</source>
          <target state="translated">tai_clock</target>
        </trans-unit>
        <trans-unit id="89e378ef13da0477285fe0215d062cb1eb5ab0fa" translate="yes" xml:space="preserve">
          <source>take_viewview::take</source>
          <target state="translated">take_viewview::take</target>
        </trans-unit>
        <trans-unit id="b7d39258b3016a2b17c8e6ee41d6eb2d08237dd6" translate="yes" xml:space="preserve">
          <source>taking address of incomplete type that overloads address-of was undefined behavior</source>
          <target state="translated">アドレスのオーバーロードが不完全な型のアドレスを取ることは未定義の動作でした。</target>
        </trans-unit>
        <trans-unit id="c839b01dda369ddb3cd350804d6cbbe82e00c73e" translate="yes" xml:space="preserve">
          <source>tan(std::complex)</source>
          <target state="translated">tan(std::complex)</target>
        </trans-unit>
        <trans-unit id="527801329a84a0b46698b77ef977bc9882a84ff3" translate="yes" xml:space="preserve">
          <source>tan(std::valarray)</source>
          <target state="translated">tan(std::valarray)</target>
        </trans-unit>
        <trans-unit id="c5aed2a3170e20a3c835dd39f31785111354cf04" translate="yes" xml:space="preserve">
          <source>tanh(std::complex)</source>
          <target state="translated">tanh(std::complex)</target>
        </trans-unit>
        <trans-unit id="eaf271588e726a0805cadb733f69e6146e195fd4" translate="yes" xml:space="preserve">
          <source>tanh(std::valarray)</source>
          <target state="translated">tanh(std::valarray)</target>
        </trans-unit>
        <trans-unit id="b57e89cb37d54bba593dd3acaeccc48a02978165" translate="yes" xml:space="preserve">
          <source>tanhtanhftanhl</source>
          <target state="translated">tanhtanhftanhl</target>
        </trans-unit>
        <trans-unit id="bfd9b112ebdfe2d1d52a5fdffb38cca83b52c9b9" translate="yes" xml:space="preserve">
          <source>tantanftanl</source>
          <target state="translated">tantanftanl</target>
        </trans-unit>
        <trans-unit id="0e8a3ad980ec179856012b7eecf4327e99cd44cd" translate="yes" xml:space="preserve">
          <source>target</source>
          <target state="translated">target</target>
        </trans-unit>
        <trans-unit id="5cf7c43d75a41c0f035587199f6ed8627a7eee7a" translate="yes" xml:space="preserve">
          <source>target &lt;code&gt;any&lt;/code&gt; object</source>
          <target state="translated">&lt;code&gt;any&lt;/code&gt; オブジェクトをターゲットに</target>
        </trans-unit>
        <trans-unit id="4e7ea5d578e98283b7d02b4f68dfb55a95931479" translate="yes" xml:space="preserve">
          <source>target constructor</source>
          <target state="translated">ターゲットコンストラクタ</target>
        </trans-unit>
        <trans-unit id="b590305c14926b3b4bcc3e76d5c4026e2bd0f329" translate="yes" xml:space="preserve">
          <source>target path for the move/rename operation</source>
          <target state="translated">移動/リネーム操作の対象パス</target>
        </trans-unit>
        <trans-unit id="a61bc9865def95bc1eb2c31cf124d54a3ae64974" translate="yes" xml:space="preserve">
          <source>target type</source>
          <target state="translated">対象型</target>
        </trans-unit>
        <trans-unit id="b152960220089efb9dfd04267b0ec6030b08b8cc" translate="yes" xml:space="preserve">
          <source>target_type</source>
          <target state="translated">target_type</target>
        </trans-unit>
        <trans-unit id="3e0e9d16eef20f33735bea2a576c45728b2ad8f9" translate="yes" xml:space="preserve">
          <source>tbl</source>
          <target state="translated">tbl</target>
        </trans-unit>
        <trans-unit id="600f6c1246eea12f8c90a4c8b915daa455f2fc29" translate="yes" xml:space="preserve">
          <source>tellg</source>
          <target state="translated">tellg</target>
        </trans-unit>
        <trans-unit id="0d33446e153194a92e970e97c7519d5d8a437833" translate="yes" xml:space="preserve">
          <source>tellp</source>
          <target state="translated">tellp</target>
        </trans-unit>
        <trans-unit id="5509aea2c363bac162edd0c77eaff0e2772cf8a1" translate="yes" xml:space="preserve">
          <source>temp_directory_path</source>
          <target state="translated">temp_directory_path</target>
        </trans-unit>
        <trans-unit id="3226ecbe650213a49cd03ae67140750e4f340083" translate="yes" xml:space="preserve">
          <source>template</source>
          <target state="translated">template</target>
        </trans-unit>
        <trans-unit id="130f87a0322d9a70d3c436f72ea680cce47693d9" translate="yes" xml:space="preserve">
          <source>template &amp;lt;class U&amp;gt; using rebind</source>
          <target state="translated">再バインドを使用したテンプレート&amp;lt;クラスU&amp;gt;</target>
        </trans-unit>
        <trans-unit id="16bc6b6b4758f55b9be8587d96f9ab4464debe9a" translate="yes" xml:space="preserve">
          <source>template argument deduction</source>
          <target state="translated">ひな形引数演繹</target>
        </trans-unit>
        <trans-unit id="e2ad122dcf695d5c1b9266941cb5565412b1f7db" translate="yes" xml:space="preserve">
          <source>template definition</source>
          <target state="translated">テンプレート定義</target>
        </trans-unit>
        <trans-unit id="6f02b38d4820d54f4494d798f90be23a8b25a62c" translate="yes" xml:space="preserve">
          <source>template instantiation</source>
          <target state="translated">テンプレートインスタンス化</target>
        </trans-unit>
        <trans-unit id="0bd32cb877fd5cfe3c171f8e28532a6880669ec9" translate="yes" xml:space="preserve">
          <source>template name with template arguments (optionally &lt;a href=&quot;name#Qualified_identifiers&quot;&gt;qualified&lt;/a&gt;, optionally using &lt;a href=&quot;dependent_name&quot;&gt;template disambiguator&lt;/a&gt;)</source>
          <target state="translated">テンプレート引数を使用したテンプレート名（オプションで&lt;a href=&quot;name#Qualified_identifiers&quot;&gt;修飾&lt;/a&gt;、オプションで&lt;a href=&quot;dependent_name&quot;&gt;テンプレートのあいまいさ&lt;/a&gt;を使用）</target>
        </trans-unit>
        <trans-unit id="b9698e0c481f535c8c2719b3d45782c39ffc0542" translate="yes" xml:space="preserve">
          <source>template name without template arguments (optionally &lt;a href=&quot;name#Qualified_identifiers&quot;&gt;qualified&lt;/a&gt;): see &lt;a href=&quot;deduction_guide&quot;&gt;class template argument deduction&lt;/a&gt;</source>
          <target state="translated">テンプレート引数なしのテンプレート名（オプションで&lt;a href=&quot;name#Qualified_identifiers&quot;&gt;修飾&lt;/a&gt;）：&lt;a href=&quot;deduction_guide&quot;&gt;クラステンプレート引数の推定を&lt;/a&gt;参照</target>
        </trans-unit>
        <trans-unit id="a2853cbdbc971502a3422ef579fb69b6044e7c70" translate="yes" xml:space="preserve">
          <source>template parameter</source>
          <target state="translated">テンプレートパラメタ</target>
        </trans-unit>
        <trans-unit id="e554aad8a12acf76237edfab281a413261d1eb6a" translate="yes" xml:space="preserve">
          <source>template parameter could not be used in non-type arg expressions other than id-expressions</source>
          <target state="translated">id式以外の非型のarg式ではtemplateパラメータが使用できませんでした。</target>
        </trans-unit>
        <trans-unit id="63e3daa1734c3b4e76f5a1da86a2f18aff9da80f" translate="yes" xml:space="preserve">
          <source>template parameter object</source>
          <target state="translated">テンプレートパラメタオブジェクト</target>
        </trans-unit>
        <trans-unit id="3814aff1071c289f3d8574f2dc980072f35f91da" translate="yes" xml:space="preserve">
          <source>template parameters of &lt;code&gt;Fi&lt;/code&gt; are the template parameters of &lt;code&gt;C&lt;/code&gt; followed (if &lt;code&gt;Ci&lt;/code&gt; is a constructor template) by the template parameters of &lt;code&gt;Ci&lt;/code&gt; (default template arguments are included too)</source>
          <target state="translated">テンプレートパラメータ &lt;code&gt;Fi&lt;/code&gt; はのテンプレートパラメータである &lt;code&gt;C&lt;/code&gt; は（場合、続い &lt;code&gt;Ci&lt;/code&gt; はコンストラクタテンプレートである）のテンプレートパラメータによって &lt;code&gt;Ci&lt;/code&gt; （デフォルトテンプレート引数があまりにも含まれます）</target>
        </trans-unit>
        <trans-unit id="f1b9b6e49a93b73407320f658bb224e251baaae4" translate="yes" xml:space="preserve">
          <source>template&amp;lt; class U &amp;gt; using rebind</source>
          <target state="translated">template &amp;lt;クラスU&amp;gt;再バインドを使用</target>
        </trans-unit>
        <trans-unit id="e5ec8b037a724a1091982dcf5b3fb224c5f4f0a9" translate="yes" xml:space="preserve">
          <source>template-1 is at least as specialized as template-2 for all types</source>
          <target state="translated">テンプレート1は、少なくともすべてのタイプのテンプレート2に特化しています。</target>
        </trans-unit>
        <trans-unit id="e1c5384f84d2012964d170ec6d961af39f365534" translate="yes" xml:space="preserve">
          <source>template-1 is more specialized than template-2 for some types</source>
          <target state="translated">テンプレート1はテンプレート2よりも一部のタイプに特化しています。</target>
        </trans-unit>
        <trans-unit id="ee0612ac66eb64c6d87a5c0edd6dafc0cbf3aa48" translate="yes" xml:space="preserve">
          <source>template-2 is not more specialized than template-1 for any types OR is not at least as specialized for any types</source>
          <target state="translated">テンプレート2は,どのようなタイプに対してもテンプレート1よりも専門的ではないか,または,どのようなタイプに対しても少なくとも専門的ではない。</target>
        </trans-unit>
        <trans-unit id="05d788a5e373a30e855c6a95960ef8a804cad04e" translate="yes" xml:space="preserve">
          <source>template-id</source>
          <target state="translated">template-id</target>
        </trans-unit>
        <trans-unit id="9fbc971e72bcd819ef43f67a89e21ae99537ee9e" translate="yes" xml:space="preserve">
          <source>template-name</source>
          <target state="translated">template-name</target>
        </trans-unit>
        <trans-unit id="e8e2cec515a867adff5793b45d991de9afef775d" translate="yes" xml:space="preserve">
          <source>template-name&lt;code&gt;&amp;lt;&lt;/code&gt;parameter-list&lt;code&gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">template-name&lt;code&gt;&amp;lt;&lt;/code&gt;parameter-list&lt;code&gt;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9021dc99d61d7fba2dd44f5434ca53278d244ac5" translate="yes" xml:space="preserve">
          <source>template-name&lt;code&gt;( &lt;/code&gt;expressions(optional)&lt;code&gt;) &lt;/code&gt;</source>
          <target state="translated">テンプレート名 &lt;code&gt;( &lt;/code&gt; 式（オプション） &lt;code&gt;) &lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bd59b4679edd4c1aeec85be99af4eb46cbbe77de" translate="yes" xml:space="preserve">
          <source>template-name&lt;code&gt;{ &lt;/code&gt;expressions(optional)&lt;code&gt;} &lt;/code&gt;</source>
          <target state="translated">テンプレート名 &lt;code&gt;{ &lt;/code&gt; 式（オプション） &lt;code&gt;} &lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9b66765d172c2b6b1f26916232b5a53fa5e35713" translate="yes" xml:space="preserve">
          <source>template-parameter-list</source>
          <target state="translated">template-parameter-list</target>
        </trans-unit>
        <trans-unit id="7981a4e7e9bdc02180a3c3d1a6b2adf0ba424b1c" translate="yes" xml:space="preserve">
          <source>templates</source>
          <target state="translated">templates</target>
        </trans-unit>
        <trans-unit id="e261fbd24a6484c58a56a1cf2750b8e0ddf8fada" translate="yes" xml:space="preserve">
          <source>terminate</source>
          <target state="translated">terminate</target>
        </trans-unit>
        <trans-unit id="ea25cc4ff44ea21a2d5c15497bf62de46c5286fb" translate="yes" xml:space="preserve">
          <source>terminate_handler</source>
          <target state="translated">terminate_handler</target>
        </trans-unit>
        <trans-unit id="709ff4977a3ae52d3d552b03d3fd95ebbc5059bd" translate="yes" xml:space="preserve">
          <source>termination request, sent to the program</source>
          <target state="translated">終了要求</target>
        </trans-unit>
        <trans-unit id="25c39fdf82c85896cff7a22b0b6f55e28bc03808" translate="yes" xml:space="preserve">
          <source>termination, is returned. In other cases implementation-defined status value is returned.</source>
          <target state="translated">終了した場合に返されます。それ以外の場合は、実装定義のステータス値が返されます。</target>
        </trans-unit>
        <trans-unit id="e4326ca988e5392fb540ae503a156070370642bd" translate="yes" xml:space="preserve">
          <source>ternary conditional</source>
          <target state="translated">三項条件付き</target>
        </trans-unit>
        <trans-unit id="a94a8fe5ccb19ba61c4c0873d391e987982fbbd3" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="translated">test</target>
        </trans-unit>
        <trans-unit id="de0a00662e0d91262a84e4196fd64d0a9d6a0ccb" translate="yes" xml:space="preserve">
          <source>test whether a class represents an execution policy</source>
          <target state="translated">クラスが実行ポリシーを表すかどうかをテストする</target>
        </trans-unit>
        <trans-unit id="dc1d72d80770cea49a1f114fc3688d4930a6879e" translate="yes" xml:space="preserve">
          <source>test_and_set</source>
          <target state="translated">test_and_set</target>
        </trans-unit>
        <trans-unit id="02c1aaff0a677a39444dfce910c175b5c8321742" translate="yes" xml:space="preserve">
          <source>tests if both &lt;code&gt;istreambuf_iterator&lt;/code&gt;s are end-of-stream or if both are valid</source>
          <target state="translated">両方の &lt;code&gt;istreambuf_iterator&lt;/code&gt; がストリームの終わりか、または両方が有効かどうかをテストします</target>
        </trans-unit>
        <trans-unit id="377eb122c92b8b4515217b042d297c7c1ec35cdf" translate="yes" xml:space="preserve">
          <source>tests if output failed</source>
          <target state="translated">出力が失敗した場合のテスト</target>
        </trans-unit>
        <trans-unit id="214fd9694cc228172213052dd12c8b7b669bf084" translate="yes" xml:space="preserve">
          <source>tests if the facet encodes an identity conversion for all valid argument values</source>
          <target state="translated">は、すべての有効な引数値に対して、ファセットが同一性変換をエンコードしているかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="c61682ce9a0adb3967ede46056e2890456bb1f35" translate="yes" xml:space="preserve">
          <source>tests if the lhs compares greater or equal than rhs</source>
          <target state="translated">lhs が rhs より大きいか等しいかをテストします。</target>
        </trans-unit>
        <trans-unit id="bc9676a357f14487c5779520d32b42c044286740" translate="yes" xml:space="preserve">
          <source>tests if the lhs compares greater than rhs</source>
          <target state="translated">lhs が rhs よりも大きいかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="7c57c3569f0763c3f26c18986fd6512f25f84e34" translate="yes" xml:space="preserve">
          <source>tests if the lhs compares less or equal than rhs</source>
          <target state="translated">lhs が rhs より小さいか等しいかをテストします。</target>
        </trans-unit>
        <trans-unit id="6034bb67ecf3b4f17f1521f8bc9d08f1c85e930d" translate="yes" xml:space="preserve">
          <source>tests if the lhs compares less than rhs</source>
          <target state="translated">lhs が rhs よりも小さいかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="67ad5a389a3eabe2e43251c35856f3bebba4e702" translate="yes" xml:space="preserve">
          <source>tests if the two arguments compare equal</source>
          <target state="translated">は、2つの引数が等しいかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="b90bd8a0d4680ffdef1183c3ede079041c370116" translate="yes" xml:space="preserve">
          <source>tests if the two arguments do not compare equal</source>
          <target state="translated">は、2つの引数が同じではない場合にテストします。</target>
        </trans-unit>
        <trans-unit id="0e6f974ad3d0034920a507c8a6218f9f13e5d367" translate="yes" xml:space="preserve">
          <source>tests whether the lock owns its associated mutex</source>
          <target state="translated">ロックが関連するミューテックスを所有しているかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="5f8e41f1f00fb8373b980fd1613658225927436c" translate="yes" xml:space="preserve">
          <source>text stream</source>
          <target state="translated">テキストストリーム</target>
        </trans-unit>
        <trans-unit id="f436e5daad5543b213f8189613f2d5d22fcdd817" translate="yes" xml:space="preserve">
          <source>text that could be used to explain the rationale for deprecation and/or to suggest a replacing entity</source>
          <target state="translated">非推奨の根拠を説明するため、及び/又は代替となる実体を提案するために使用される可能性のあるテキスト</target>
        </trans-unit>
        <trans-unit id="cc945f6541fab65d51684f79e37ebb9d4c40c558" translate="yes" xml:space="preserve">
          <source>tgammatgammaftgammal</source>
          <target state="translated">tgammatgammaftgammal</target>
        </trans-unit>
        <trans-unit id="46088f7a9fe9ee73cd050dbff2898093be1eba46" translate="yes" xml:space="preserve">
          <source>th captured &lt;a href=&quot;http://en.cppreference.com/w/cpp/regex/ecmascript#Sub-expressions&quot;&gt;marked subexpression&lt;/a&gt;).</source>
          <target state="translated">&lt;a href=&quot;http://en.cppreference.com/w/cpp/regex/ecmascript#Sub-expressions&quot;&gt;マーク&lt;/a&gt;された部分式をキャプチャしました）。</target>
        </trans-unit>
        <trans-unit id="bbb1cd639dcfb6e4c9d7bc0fdc803459f041ec8b" translate="yes" xml:space="preserve">
          <source>th equivalent key group. Proprotional to</source>
          <target state="translated">番目に相当するキーグループ。にプロプロプロショナル</target>
        </trans-unit>
        <trans-unit id="fe7f6908d818598bf01eb648a783e140412d5b35" translate="yes" xml:space="preserve">
          <source>th sub-match is returned.</source>
          <target state="translated">番目のサブマッチが返されます。</target>
        </trans-unit>
        <trans-unit id="713c66a64f8fd0ae26fafcb73d2025ed883895cb" translate="yes" xml:space="preserve">
          <source>than (i.e. greater or equal to) &lt;code&gt;value&lt;/code&gt;, or &lt;code&gt;last&lt;/code&gt; if no such element is found.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; よりも大きい（つまり、value以上）、またはそのような要素が見つからない場合は &lt;code&gt;last&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="00fa43c2709aecb964955dc890864e34da296edd" translate="yes" xml:space="preserve">
          <source>than (i.e. is ordered</source>
          <target state="translated">よりも</target>
        </trans-unit>
        <trans-unit id="2c7c11422ec301ef94d8a86606f3e8d04d7f523c" translate="yes" xml:space="preserve">
          <source>than (i.e. is ordered before) the second.</source>
          <target state="translated">よりも(つまり2番目よりも)先に注文されています。</target>
        </trans-unit>
        <trans-unit id="4acee181658460a828dc1c21f8c20f6140cb8595" translate="yes" xml:space="preserve">
          <source>than &lt;code&gt;*b&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;*b&lt;/code&gt; より。</target>
        </trans-unit>
        <trans-unit id="b32f11bfdc06fa1999976e386e5b641fc9c2797c" translate="yes" xml:space="preserve">
          <source>than &lt;code&gt;b&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">より &lt;code&gt;b&lt;/code&gt; 、 &lt;code&gt;false&lt;/code&gt; そう。</target>
        </trans-unit>
        <trans-unit id="028edae1234efa3e20a5adf3862fe549f5fd11cb" translate="yes" xml:space="preserve">
          <source>than &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;b&lt;/code&gt; よりも。</target>
        </trans-unit>
        <trans-unit id="3c8499a94b335359ed6e26768d49311f5818cfca" translate="yes" xml:space="preserve">
          <source>than &lt;code&gt;key&lt;/code&gt; and another pointing to the first element</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; と最初の要素を指す別のものより</target>
        </trans-unit>
        <trans-unit id="fe39e96055caf604944bbb1df841039febe8708c" translate="yes" xml:space="preserve">
          <source>than &lt;code&gt;key&lt;/code&gt; and the second pointing to the first element</source>
          <target state="translated">より &lt;code&gt;key&lt;/code&gt; 最初の要素に対する第2のポインティング</target>
        </trans-unit>
        <trans-unit id="e49e2a889c3f7b7f1c22acfaaaf0533a13933971" translate="yes" xml:space="preserve">
          <source>than &lt;code&gt;key&lt;/code&gt;, past-the-end (see &lt;code&gt;&lt;a href=&quot;end&quot;&gt;end()&lt;/a&gt;&lt;/code&gt;) iterator is returned as the first element. Similarly if there are no elements</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; より、過去の終わり（ &lt;code&gt;&lt;a href=&quot;end&quot;&gt;end()&lt;/a&gt;&lt;/code&gt; を参照）イテレータが最初の要素として返されます。同様に要素がない場合</target>
        </trans-unit>
        <trans-unit id="49760d44a5fe9ef2599407bbebe50e285fd13d1a" translate="yes" xml:space="preserve">
          <source>than &lt;code&gt;key&lt;/code&gt;, past-the-end iterator is returned as the second element.</source>
          <target state="translated">より &lt;code&gt;key&lt;/code&gt; 、過去エンドイテレータは、第二の要素として返されます。</target>
        </trans-unit>
        <trans-unit id="f440a52d9fc34d3d995afefd1639b87099f20664" translate="yes" xml:space="preserve">
          <source>than &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; より。</target>
        </trans-unit>
        <trans-unit id="abd6107c59ef574d769aa585a1d20c0b6c84d059" translate="yes" xml:space="preserve">
          <source>than &lt;code&gt;key&lt;/code&gt;. Alternatively, the first iterator may be obtained with &lt;code&gt;&lt;a href=&quot;lower_bound&quot;&gt;lower_bound()&lt;/a&gt;&lt;/code&gt;, and the second with &lt;code&gt;&lt;a href=&quot;upper_bound&quot;&gt;upper_bound()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; より。あるいは、最初の反復子を用いて得ることができる &lt;code&gt;&lt;a href=&quot;lower_bound&quot;&gt;lower_bound()&lt;/a&gt;&lt;/code&gt; とを有する第二 &lt;code&gt;&lt;a href=&quot;upper_bound&quot;&gt;upper_bound()&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e94c51e132cf830ff2254133583b645fa8988f51" translate="yes" xml:space="preserve">
          <source>than &lt;code&gt;key&lt;/code&gt;. If no such element is found, a past-the-end iterator (see &lt;code&gt;&lt;a href=&quot;end&quot;&gt;end()&lt;/a&gt;&lt;/code&gt;) is returned.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; より。そのような要素が見つからない場合、過去の終わりのイテレータ（ &lt;code&gt;&lt;a href=&quot;end&quot;&gt;end()&lt;/a&gt;&lt;/code&gt; を参照）が返されます。</target>
        </trans-unit>
        <trans-unit id="c95bcc59eae2db04001656cf4dd766cadc9437d8" translate="yes" xml:space="preserve">
          <source>than &lt;code&gt;key&lt;/code&gt;. If no such element is found, past-the-end (see &lt;code&gt;&lt;a href=&quot;end&quot;&gt;end()&lt;/a&gt;&lt;/code&gt;) iterator is returned.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; より。そのような要素が見つからない場合、過去の終わり（ &lt;code&gt;&lt;a href=&quot;end&quot;&gt;end()&lt;/a&gt;&lt;/code&gt; を参照）反復子が返されます。</target>
        </trans-unit>
        <trans-unit id="586f3430743bdc3c8dc1600d5cfd2cf6779f44ae" translate="yes" xml:space="preserve">
          <source>than &lt;code&gt;rhs&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rhs&lt;/code&gt; より。</target>
        </trans-unit>
        <trans-unit id="ae13692a7d30a7d15145913f60c0021b64884039" translate="yes" xml:space="preserve">
          <source>than &lt;code&gt;v&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;v&lt;/code&gt; より</target>
        </trans-unit>
        <trans-unit id="9a57835d530dcb861a29aba5823e4fcc94dccd2a" translate="yes" xml:space="preserve">
          <source>than &lt;code&gt;value&lt;/code&gt; and another pointing to the first element</source>
          <target state="translated">より &lt;code&gt;value&lt;/code&gt; と最初の要素への別のポインティング</target>
        </trans-unit>
        <trans-unit id="8342e8dd8ae9e54d632fa2209e26dcc0268cd3dd" translate="yes" xml:space="preserve">
          <source>than &lt;code&gt;value&lt;/code&gt; and the second pointing to the first element</source>
          <target state="translated">より &lt;code&gt;value&lt;/code&gt; と最初の要素に対する第2のポインティング</target>
        </trans-unit>
        <trans-unit id="87cff8adebf318204e7d800c0edfbf5498881aca" translate="yes" xml:space="preserve">
          <source>than &lt;code&gt;value&lt;/code&gt;, &lt;code&gt;last&lt;/code&gt; is returned as the first element. Similarly if there are no elements</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; より、 &lt;code&gt;last&lt;/code&gt; が最初の要素として返されます。同様に要素がない場合</target>
        </trans-unit>
        <trans-unit id="a28e98635500b750acf8033d0750e3df5f6eba7b" translate="yes" xml:space="preserve">
          <source>than &lt;code&gt;value&lt;/code&gt;, &lt;code&gt;last&lt;/code&gt; is returned as the second element.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; より、 &lt;code&gt;last&lt;/code&gt; が2番目の要素として返されます。</target>
        </trans-unit>
        <trans-unit id="b6bbd3b3bc7dcd09da33f27e3ab18cae37e7839a" translate="yes" xml:space="preserve">
          <source>than &lt;code&gt;value&lt;/code&gt;, or &lt;code&gt;last&lt;/code&gt; if no such element is found.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; より、またはそのような要素が見つからない場合は &lt;code&gt;last&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cfb80e509900a1e263cceea5a305dce4197d07f5" translate="yes" xml:space="preserve">
          <source>than &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; より。</target>
        </trans-unit>
        <trans-unit id="25c36e45e440f6ac117a41e4c5282c1d02db7272" translate="yes" xml:space="preserve">
          <source>than &lt;code&gt;value&lt;/code&gt;. The first iterator may be alternatively obtained with &lt;code&gt;&lt;a href=&quot;lower_bound&quot;&gt;std::lower_bound()&lt;/a&gt;&lt;/code&gt;, the second - with &lt;code&gt;&lt;a href=&quot;upper_bound&quot;&gt;std::upper_bound()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; より。代替的に得ることができる最初の反復子 &lt;code&gt;&lt;a href=&quot;lower_bound&quot;&gt;std::lower_bound()&lt;/a&gt;&lt;/code&gt; 、第二-と &lt;code&gt;&lt;a href=&quot;upper_bound&quot;&gt;std::upper_bound()&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="643a8634bc65077c55cfee24ea995e252aac69d9" translate="yes" xml:space="preserve">
          <source>than D2.</source>
          <target state="translated">D2よりも</target>
        </trans-unit>
        <trans-unit id="d92199ac558e69e863a56427d7b93beb9069709b" translate="yes" xml:space="preserve">
          <source>than a certain value</source>
          <target state="translated">一定値以上</target>
        </trans-unit>
        <trans-unit id="2273ec147e3af76a32e6d7ce838dac0e67e7df81" translate="yes" xml:space="preserve">
          <source>than a pointer &lt;code&gt;q&lt;/code&gt;, then &lt;code&gt;p&amp;gt;=q&lt;/code&gt;, &lt;code&gt;p&amp;gt;q&lt;/code&gt;, &lt;code&gt;q&amp;lt;=p&lt;/code&gt;, and &lt;code&gt;q&amp;lt;p&lt;/code&gt; all yield &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;p&amp;lt;=q&lt;/code&gt;, &lt;code&gt;p&amp;lt;q&lt;/code&gt;, &lt;code&gt;q&amp;gt;=p&lt;/code&gt;, and &lt;code&gt;q&amp;gt;p&lt;/code&gt; all yield &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">ポインタより &lt;code&gt;q&lt;/code&gt; 、次いで &lt;code&gt;p&amp;gt;=q&lt;/code&gt; 、 &lt;code&gt;p&amp;gt;q&lt;/code&gt; 、 &lt;code&gt;q&amp;lt;=p&lt;/code&gt; 、および &lt;code&gt;q&amp;lt;p&lt;/code&gt; 全収率 &lt;code&gt;true&lt;/code&gt; と &lt;code&gt;p&amp;lt;=q&lt;/code&gt; 、 &lt;code&gt;p&amp;lt;q&lt;/code&gt; 、 &lt;code&gt;q&amp;gt;=p&lt;/code&gt; 、及び &lt;code&gt;q&amp;gt;p&lt;/code&gt; 全収率 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="903269f6a9861743056d1553db23a392ac65558d" translate="yes" xml:space="preserve">
          <source>than a standard conversion sequence &lt;code&gt;S2&lt;/code&gt; if</source>
          <target state="translated">標準の変換シーケンス &lt;code&gt;S2&lt;/code&gt; よりも</target>
        </trans-unit>
        <trans-unit id="78b88d6a1cb72d2ae73acc752292873e4895efe1" translate="yes" xml:space="preserve">
          <source>than a user-defined conversion sequence &lt;code&gt;U2&lt;/code&gt; if they call the same constructor/user-defined conversion function or initialize the same class with aggregate-initialization, and in either case the second standard conversion sequence in &lt;code&gt;U1&lt;/code&gt; is better than the second standard conversion sequence in &lt;code&gt;U2&lt;/code&gt;</source>
          <target state="translated">同じコンストラクター/ユーザー定義の変換関数を呼び出すか、集約初期化で同じクラスを初期化する場合、ユーザー定義の変換シーケンス &lt;code&gt;U2&lt;/code&gt; よりも、どちらの場合でも、 &lt;code&gt;U1&lt;/code&gt; の2番目の標準変換シーケンスは、2番目の標準変換シーケンスよりも優れています。 &lt;code&gt;U2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5599b91fc5f11e87ec143b6c236be86eeaf6f503" translate="yes" xml:space="preserve">
          <source>than a user-defined conversion sequence or an ellipsis conversion sequence.</source>
          <target state="translated">は,ユーザ定義の変換シーケンスやエリプシス変換シーケンスよりも</target>
        </trans-unit>
        <trans-unit id="f5ba644aeca736eea3b1566e4e70da83610c9a35" translate="yes" xml:space="preserve">
          <source>than an &lt;a href=&quot;variadic_arguments&quot;&gt;ellipsis conversion&lt;/a&gt; sequence</source>
          <target state="translated">より&lt;a href=&quot;variadic_arguments&quot;&gt;省略記号変換&lt;/a&gt;シーケンス</target>
        </trans-unit>
        <trans-unit id="23bb9a194ce423d661bf2fdea360ec9efd13530c" translate="yes" xml:space="preserve">
          <source>than any non-empty range.</source>
          <target state="translated">空でない範囲よりも</target>
        </trans-unit>
        <trans-unit id="5c757520efdd95c0d29e609301d52c67c7d59ab2" translate="yes" xml:space="preserve">
          <source>than data2</source>
          <target state="translated">データ2より</target>
        </trans-unit>
        <trans-unit id="f3cae98dd45b18c134035b7c854f9ab3c075936c" translate="yes" xml:space="preserve">
          <source>than list-initialization sequence &lt;code&gt;L2&lt;/code&gt; if &lt;code&gt;L1&lt;/code&gt; initializes an &lt;code&gt;&lt;a href=&quot;../utility/initializer_list&quot;&gt;std::initializer_list&lt;/a&gt;&lt;/code&gt; parameter, while &lt;code&gt;L2&lt;/code&gt; does not.</source>
          <target state="translated">&lt;code&gt;L1&lt;/code&gt; が &lt;code&gt;&lt;a href=&quot;../utility/initializer_list&quot;&gt;std::initializer_list&lt;/a&gt;&lt;/code&gt; パラメータを初期化する場合、リスト初期化シーケンス &lt;code&gt;L2&lt;/code&gt; よりも、 &lt;code&gt;L2&lt;/code&gt; は初期化しません。</target>
        </trans-unit>
        <trans-unit id="a73ccb2c4e5dac7bed0cc47ccba15d49db6d44f3" translate="yes" xml:space="preserve">
          <source>than list-initialization sequence &lt;code&gt;L2&lt;/code&gt; if the corresponding parameters are references to arrays, and L1 converts to type &quot;array of N1 T,&quot; L2 converts to type &quot;array of N2 T&quot;, and N1 is smaller than N2.</source>
          <target state="translated">対応するパラメータが配列への参照であり、L1が「N1 Tの配列」型に変換され、L2が「N2 Tの配列」型に変換され、N1がN2より小さい場合は、リスト初期化シーケンス &lt;code&gt;L2&lt;/code&gt; より。</target>
        </trans-unit>
        <trans-unit id="4f27e9fad05e2a42d02ace28ac12ef77c04b21e3" translate="yes" xml:space="preserve">
          <source>than or</source>
          <target state="translated">以上</target>
        </trans-unit>
        <trans-unit id="35689882e3311c9dc01dc96a527bacb30486b45a" translate="yes" xml:space="preserve">
          <source>than the contents of &lt;code&gt;rhs&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt; otherwise</source>
          <target state="translated">&lt;code&gt;rhs&lt;/code&gt; の内容よりも、それ以外の場合は &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f3580ae7a1202164261839ea30788515bf7fe084" translate="yes" xml:space="preserve">
          <source>than the corresponding implicit conversion for that argument of F2</source>
          <target state="translated">のその引数に対応する暗黙の変換よりも</target>
        </trans-unit>
        <trans-unit id="bbd1f18aa4f63dedde67df89e4caa8aa50abc5eb" translate="yes" xml:space="preserve">
          <source>than the given key</source>
          <target state="translated">与えられたキーよりも</target>
        </trans-unit>
        <trans-unit id="850208f99772eb9d171c506335a7e08c9d06a1f0" translate="yes" xml:space="preserve">
          <source>than the given value</source>
          <target state="translated">与えられた値よりも</target>
        </trans-unit>
        <trans-unit id="1df9136e137b038b95a8bc44184b263b6081eeb3" translate="yes" xml:space="preserve">
          <source>than the implicit conversions for all arguments of F2, and.</source>
          <target state="translated">F2のすべての引数に対する暗黙の変換よりも</target>
        </trans-unit>
        <trans-unit id="31bbec0fb464dd87ac3c922a74de16ce5e08f07b" translate="yes" xml:space="preserve">
          <source>than the other character sequence, zero if the both underlying character sequences are equal, greater than zero if this sub_match is</source>
          <target state="translated">が他の文字列よりも大きく、両方の文字列が等しい場合は0、このサブマッチが</target>
        </trans-unit>
        <trans-unit id="8b97fab2e885b2a6c62c84ff598f77653b323119" translate="yes" xml:space="preserve">
          <source>than the other character sequence.</source>
          <target state="translated">他の文字列よりも</target>
        </trans-unit>
        <trans-unit id="259d25ad59115493ac9f001f49a15d870293e1a7" translate="yes" xml:space="preserve">
          <source>than the other.</source>
          <target state="translated">他のものよりも</target>
        </trans-unit>
        <trans-unit id="2a5c7cf162dd7192f32ccc12e98bc0460d63e62c" translate="yes" xml:space="preserve">
          <source>than the second</source>
          <target state="translated">二番目より</target>
        </trans-unit>
        <trans-unit id="fbbf7c2e21d27e8878703ae28d144fdd70a2d367" translate="yes" xml:space="preserve">
          <source>than the second and zero if the arguments are equal.</source>
          <target state="translated">の値が2番目の値よりも大きく、引数が等しい場合は0になります。</target>
        </trans-unit>
        <trans-unit id="f288ee94da73cb635d94f3648bf4bc33ed06d838" translate="yes" xml:space="preserve">
          <source>than the second and zero if the arguments are equal. &lt;code&gt;key&lt;/code&gt; is passed as the first argument, an element from the array as the second.</source>
          <target state="translated">2番目よりも、引数が等しい場合はゼロ。 &lt;code&gt;key&lt;/code&gt; は最初の引数として渡され、配列の要素は2番目の引数として渡されます。</target>
        </trans-unit>
        <trans-unit id="06095571d57f5ea42e137806eb5eb8b4af97693b" translate="yes" xml:space="preserve">
          <source>than the second range &lt;code&gt;[first2, last2)&lt;/code&gt;.</source>
          <target state="translated">2番目の範囲よりも &lt;code&gt;[first2, last2)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5cd67ae1b18508276288afab6f89e9c423209937" translate="yes" xml:space="preserve">
          <source>than the second,</source>
          <target state="translated">2つ目よりも</target>
        </trans-unit>
        <trans-unit id="b79f5f2a0218659098b15944cd2efd2b20db3538" translate="yes" xml:space="preserve">
          <source>than the second.</source>
          <target state="translated">2つ目よりも</target>
        </trans-unit>
        <trans-unit id="a880aa2d4ce0b0e8a63e6ad2a17a93c892855687" translate="yes" xml:space="preserve">
          <source>than the standard conversion sequence from the return type of F2</source>
          <target state="translated">の戻り値型からの標準変換シーケンスよりも</target>
        </trans-unit>
        <trans-unit id="fce7b2e217c8dc7d542e805119901b976932b315" translate="yes" xml:space="preserve">
          <source>that an object &lt;code&gt;t&lt;/code&gt; may be &quot;moved from&quot;, i.e. allowing the efficient transfer of resources from &lt;code&gt;t&lt;/code&gt; to another object.</source>
          <target state="translated">オブジェクト &lt;code&gt;t&lt;/code&gt; は「から移動」できる、つまり &lt;code&gt;t&lt;/code&gt; から別のオブジェクトへのリソースの効率的な転送を可能にする。</target>
        </trans-unit>
        <trans-unit id="c4aa8d0955805e262518d7f0b0b76c1f81c62c3a" translate="yes" xml:space="preserve">
          <source>that are then divided into blocks of uniform size.</source>
          <target state="translated">その後、均一な大きさのブロックに分割されます。</target>
        </trans-unit>
        <trans-unit id="ebbd513f9998fc8c1faa2d3b55e510fbccc71c27" translate="yes" xml:space="preserve">
          <source>that has.</source>
          <target state="translated">それは持っています。</target>
        </trans-unit>
        <trans-unit id="054bc76fbf995827062117d1b1c0b40693605e93" translate="yes" xml:space="preserve">
          <source>that is not a &lt;a href=&quot;bit_field&quot;&gt;bit field&lt;/a&gt;and not marked &lt;code&gt;[[&lt;a href=&quot;attributes/no_unique_address&quot;&gt;no_unique_address&lt;/a&gt;]]&lt;/code&gt;(since C++20) is required to be non-zero (the size of a base class subobject may be zero even without &lt;code&gt;[[no_unique_address]]&lt;/code&gt;(since C++20): see &lt;a href=&quot;ebo&quot;&gt;empty base optimization&lt;/a&gt;).</source>
          <target state="translated">それはない&lt;a href=&quot;bit_field&quot;&gt;ビットフィールド&lt;/a&gt;とマークされていない &lt;code&gt;[[&lt;a href=&quot;attributes/no_unique_address&quot;&gt;no_unique_address&lt;/a&gt;]]&lt;/code&gt; （C ++ 20以降）非ゼロであることが要求される（基本クラスのサブオブジェクトのサイズもせずにゼロとすることができる &lt;code&gt;[[no_unique_address]]&lt;/code&gt; C +ので（ +20）：&lt;a href=&quot;ebo&quot;&gt;空の基本最適化を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="7bb221a8ec783767cfb199b7ecc5e4b18073c8e6" translate="yes" xml:space="preserve">
          <source>that is not a member of the</source>
          <target state="translated">になっていないものは</target>
        </trans-unit>
        <trans-unit id="8f86b9e9b4307c540fa6a5d0b8b8770d4dde240b" translate="yes" xml:space="preserve">
          <source>that it will add to the lookup.</source>
          <target state="translated">のように、検索に追加されます。</target>
        </trans-unit>
        <trans-unit id="e5cc63ab0939c215c87075e8069ae1ae1b02393c" translate="yes" xml:space="preserve">
          <source>that names the inline namespace is implicitly inserted in the enclosing namespace (similar to the implicit using-directive for the unnamed namespace)</source>
          <target state="translated">インライン名前空間を指定すると、その名前空間を囲む名前空間に暗黙的に挿入されます (名前のない名前空間の暗黙的な使用ディレクティブと同様です)。</target>
        </trans-unit>
        <trans-unit id="073d1a5b878a024db71d51202282c6cf35c0d596" translate="yes" xml:space="preserve">
          <source>that refers to</source>
          <target state="translated">指す</target>
        </trans-unit>
        <trans-unit id="01a981c37412583a9522d7030b8243c87933ad74" translate="yes" xml:space="preserve">
          <source>that serves request for different block sizes. Each pool manages a collection of</source>
          <target state="translated">は、異なるブロックサイズのリクエストに対応しています。各プールは</target>
        </trans-unit>
        <trans-unit id="9f080b716e6069bc12486c484b0081982f395284" translate="yes" xml:space="preserve">
          <source>that specifies the size of the argument</source>
          <target state="translated">引数のサイズを指定する</target>
        </trans-unit>
        <trans-unit id="878ea2d8feea45be6a3c7a74f4a9e4c4f6fc1093" translate="yes" xml:space="preserve">
          <source>that specifies the size of the receiving argument, that is, the actual destination type. This affects the conversion accuracy and overflow rules. The default destination type is different for each conversion type (see table below).</source>
          <target state="translated">これは、受信引数のサイズ、つまり実際の宛先型を指定するものです。これは,変換精度とオーバーフロールールに影響を与えます。デフォルトの宛先型は,変換タイプごとに異なります(下の表を参照)。</target>
        </trans-unit>
        <trans-unit id="dd57ce683be0ee86adaac28c95607ebc2e34764a" translate="yes" xml:space="preserve">
          <source>that uses an expression that is non-modifying for some constant lvalue operand also implicitly requires additional variations of that expression that accept a non-constant lvalue or (possibly constant) rvalue for the given operand unless such an expression variation is explicitly required with differing semantics. These</source>
          <target state="translated">定数のlvalueオペランドに対して非修正的な式を使用する場合、そのような式のバリエーションが明示的に異なるセマンティクスで要求されない限り、与えられたオペランドに対して非定数のlvalueまたは(おそらく定数の)rvalueを受け入れる式の追加のバリエーションも暗黙のうちに要求されます。これらの</target>
        </trans-unit>
        <trans-unit id="bbccdf2efb33b52e6c9d0a14dd70b2d415fbea6e" translate="yes" xml:space="preserve">
          <source>the</source>
          <target state="translated">the</target>
        </trans-unit>
        <trans-unit id="1cf0cb5a00b950ecf8c96a12970d8ab18a57c151" translate="yes" xml:space="preserve">
          <source>the 16-bit character to convert</source>
          <target state="translated">変換する16ビット文字</target>
        </trans-unit>
        <trans-unit id="49ea3c2c802304943cdb63fd456a5f3c7bc0d902" translate="yes" xml:space="preserve">
          <source>the 32-bit character to convert</source>
          <target state="translated">変換する32ビット文字</target>
        </trans-unit>
        <trans-unit id="48f195f4b49ac71d1c67353e004f58e15b1dffb0" translate="yes" xml:space="preserve">
          <source>the &lt;a href=&quot;../named_req/lockable&quot;&gt;Lockable&lt;/a&gt; objects to lock</source>
          <target state="translated">&lt;a href=&quot;../named_req/lockable&quot;&gt;ロック&lt;/a&gt;するLockableオブジェクト</target>
        </trans-unit>
        <trans-unit id="752a097bfd69b329a87559e0d49ffa8d8ae0139b" translate="yes" xml:space="preserve">
          <source>the &lt;a href=&quot;auto&quot;&gt;auto specifier&lt;/a&gt; cannot be used in a non-static data member declaration (although it is allowed for static data members that are &lt;a href=&quot;static#Constant_static_members&quot;&gt;initialized in the class definition&lt;/a&gt;).</source>
          <target state="translated">&lt;a href=&quot;auto&quot;&gt;自動指定子は&lt;/a&gt;（それがされた静的データメンバに許可されているが、非静的データメンバ宣言で使用することができない&lt;a href=&quot;static#Constant_static_members&quot;&gt;クラス定義で初期化&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="ca6476221a55f7a0e2c7c3749d5d3f4f219affb4" translate="yes" xml:space="preserve">
          <source>the &lt;a href=&quot;consteval&quot;&gt;&lt;code&gt;consteval&lt;/code&gt;&lt;/a&gt; specifier, only allowed in function and function template declarations.</source>
          <target state="translated">&lt;a href=&quot;consteval&quot;&gt; &lt;code&gt;consteval&lt;/code&gt; &lt;/a&gt;指定子は、のみの機能と関数テンプレートの宣言では許可します。</target>
        </trans-unit>
        <trans-unit id="837a365361d21a052599754a8ef6f5e1cd38f8a2" translate="yes" xml:space="preserve">
          <source>the &lt;a href=&quot;constexpr&quot;&gt;&lt;code&gt;constexpr&lt;/code&gt;&lt;/a&gt; specifier, only allowed in variable definitions, function and function template declarations, and the declaration of static data members of literal type.</source>
          <target state="translated">&lt;a href=&quot;constexpr&quot;&gt; &lt;code&gt;constexpr&lt;/code&gt; のが&lt;/a&gt;唯一の変数定義、関数と関数テンプレート宣言で許可指定子、およびリテラルタイプの静的データメンバの宣言。</target>
        </trans-unit>
        <trans-unit id="641bd7a14770ff3c44b2073e6034cf4026e06402" translate="yes" xml:space="preserve">
          <source>the &lt;a href=&quot;dependent_name#Lookup_rules&quot;&gt;dependent name lookup&lt;/a&gt; from the point of template instantiation.</source>
          <target state="translated">テンプレートのインスタンス化のポイントからの&lt;a href=&quot;dependent_name#Lookup_rules&quot;&gt;依存名ルックアップ&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b6fe604f460b957f05bb0dc9bed4759429ebcdb8" translate="yes" xml:space="preserve">
          <source>the &lt;a href=&quot;eval_order&quot;&gt;full-expression&lt;/a&gt; of its initialization, including all implicit conversions, constructors calls, etc, must be a &lt;a href=&quot;constant_expression&quot;&gt;constant expression&lt;/a&gt;</source>
          <target state="translated">すべての暗黙的な変換、コンストラクター呼び出しなどを含む、その初期化の&lt;a href=&quot;eval_order&quot;&gt;完全式&lt;/a&gt;は&lt;a href=&quot;constant_expression&quot;&gt;定数式&lt;/a&gt;でなければなりません</target>
        </trans-unit>
        <trans-unit id="ddb020af1d0011679c7707242ff70ef7a6d992cd" translate="yes" xml:space="preserve">
          <source>the &lt;a href=&quot;friend&quot;&gt;&lt;code&gt;friend&lt;/code&gt;&lt;/a&gt; specifier, allowed in class and function declarations.</source>
          <target state="translated">クラスと関数の宣言で許可されている&lt;a href=&quot;friend&quot;&gt; &lt;code&gt;friend&lt;/code&gt; &lt;/a&gt;指定子。</target>
        </trans-unit>
        <trans-unit id="8dbeb387a54e59f697dc73a74fbeab974c89b642" translate="yes" xml:space="preserve">
          <source>the &lt;a href=&quot;inline&quot;&gt;&lt;code&gt;inline&lt;/code&gt;&lt;/a&gt; specifier is also allowed on variable declarations.</source>
          <target state="translated">&lt;a href=&quot;inline&quot;&gt; &lt;code&gt;inline&lt;/code&gt; &lt;/a&gt;指定子はまた、変数宣言では許可されています。</target>
        </trans-unit>
        <trans-unit id="0dcfde3cc6ac1aab112171d0705920f67ada034b" translate="yes" xml:space="preserve">
          <source>the &lt;a href=&quot;overloaded_address&quot;&gt;address of a non-template function&lt;/a&gt; in an overload set</source>
          <target state="translated">オーバーロードセット内の&lt;a href=&quot;overloaded_address&quot;&gt;非テンプレート関数&lt;/a&gt;のアドレス</target>
        </trans-unit>
        <trans-unit id="1d1beff1c479277b656b0fbaa9bb7cd2f9ce1661" translate="yes" xml:space="preserve">
          <source>the &lt;a href=&quot;this&quot;&gt;&lt;code&gt;this&lt;/code&gt;&lt;/a&gt; pointer, except in a &lt;code&gt;constexpr&lt;/code&gt; function or a &lt;code&gt;constexpr&lt;/code&gt; constructor that is being evaluated as part of the expression</source>
          <target state="translated">&lt;a href=&quot;this&quot;&gt; &lt;code&gt;this&lt;/code&gt; &lt;/a&gt;ポインタを除い &lt;code&gt;constexpr&lt;/code&gt; のの機能又は &lt;code&gt;constexpr&lt;/code&gt; のの式の一部として評価されているコンストラクタ</target>
        </trans-unit>
        <trans-unit id="55c46a43088bdcf75364ee115297d9d00e417fe5" translate="yes" xml:space="preserve">
          <source>the &lt;a href=&quot;this&quot;&gt;&lt;code&gt;this&lt;/code&gt;&lt;/a&gt; pointer;</source>
          <target state="translated">&lt;a href=&quot;this&quot;&gt; &lt;code&gt;this&lt;/code&gt; &lt;/a&gt;ポインタ;</target>
        </trans-unit>
        <trans-unit id="e5bf02532ed164bb0c995dca1367e3d9ab872a78" translate="yes" xml:space="preserve">
          <source>the &lt;a href=&quot;typedef&quot;&gt;&lt;code&gt;typedef&lt;/code&gt;&lt;/a&gt; specifier. If present, the entire declaration is a &lt;a href=&quot;typedef&quot;&gt;typedef declaration&lt;/a&gt; and each declarator introduces a new type name, not an object or a function.</source>
          <target state="translated">&lt;a href=&quot;typedef&quot;&gt; &lt;code&gt;typedef&lt;/code&gt; &lt;/a&gt;指定子。存在する場合、宣言全体が&lt;a href=&quot;typedef&quot;&gt;typedef宣言で&lt;/a&gt;あり、各宣言子はオブジェクトや関数ではなく、新しい型名を導入します。</target>
        </trans-unit>
        <trans-unit id="796001b0e3ec6e4062618c188d597120eec615f1" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;&lt;a href=&quot;../error/error_condition&quot;&gt;std::error_condition&lt;/a&gt;&lt;/code&gt; enumeration listing all standard &lt;a href=&quot;cerrno&quot;&gt;&lt;code&gt;&amp;lt;cerrno&amp;gt;&lt;/code&gt;&lt;/a&gt; macro constants</source>
          <target state="translated">すべての標準の&lt;a href=&quot;cerrno&quot;&gt; &lt;code&gt;&amp;lt;cerrno&amp;gt;&lt;/code&gt; &lt;/a&gt;マクロ定数をリストする &lt;code&gt;&lt;a href=&quot;../error/error_condition&quot;&gt;std::error_condition&lt;/a&gt;&lt;/code&gt; 列挙</target>
        </trans-unit>
        <trans-unit id="52055035816393e1b6f7c77b4ccf7566a20e3fb8" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;&lt;a href=&quot;../shared_ptr&quot;&gt;std::shared_ptr&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../weak_ptr&quot;&gt;std::weak_ptr&lt;/a&gt;&lt;/code&gt; to be compared</source>
          <target state="translated">比較する &lt;code&gt;&lt;a href=&quot;../shared_ptr&quot;&gt;std::shared_ptr&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;../weak_ptr&quot;&gt;std::weak_ptr&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b42a3a081ca4663c450c2d6abde7a4afa9d3f00b" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;&lt;a href=&quot;basic_regex&quot;&gt;std::basic_regex&lt;/a&gt;&lt;/code&gt; that will be matched against the input sequence</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;basic_regex&quot;&gt;std::basic_regex&lt;/a&gt;&lt;/code&gt; 入力列と照合されます</target>
        </trans-unit>
        <trans-unit id="7a3e34bbc2e8446b78f7dc094f7925a52fbb5a55" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;&lt;a href=&quot;basic_regex&quot;&gt;std::regex&lt;/a&gt;&lt;/code&gt; that should be applied to the target character sequence</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;basic_regex&quot;&gt;std::regex&lt;/a&gt;&lt;/code&gt; 対象の文字列に適用されなければなりません</target>
        </trans-unit>
        <trans-unit id="b13fa9ba7c769f14600bd7d72a042cfd9437b5ca" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;&lt;a href=&quot;error/error_condition&quot;&gt;std::error_condition&lt;/a&gt;&lt;/code&gt; enumeration listing all standard &lt;a href=&quot;header/cerrno&quot;&gt;&lt;code&gt;&amp;lt;cerrno&amp;gt;&lt;/code&gt;&lt;/a&gt; macro constants</source>
          <target state="translated">すべての標準の&lt;a href=&quot;header/cerrno&quot;&gt; &lt;code&gt;&amp;lt;cerrno&amp;gt;&lt;/code&gt; &lt;/a&gt;マクロ定数をリストする &lt;code&gt;&lt;a href=&quot;error/error_condition&quot;&gt;std::error_condition&lt;/a&gt;&lt;/code&gt; 列挙</target>
        </trans-unit>
        <trans-unit id="0844b7b4902b1407e404c1fc3e4f9b1c4ec51a6a" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;&lt;a href=&quot;error_condition&quot;&gt;std::error_condition&lt;/a&gt;&lt;/code&gt; enumeration listing all standard &lt;a href=&quot;../header/cerrno&quot;&gt;&lt;code&gt;&amp;lt;cerrno&amp;gt;&lt;/code&gt;&lt;/a&gt; macro constants</source>
          <target state="translated">すべての標準の&lt;a href=&quot;../header/cerrno&quot;&gt; &lt;code&gt;&amp;lt;cerrno&amp;gt;&lt;/code&gt; &lt;/a&gt;マクロ定数をリストする &lt;code&gt;&lt;a href=&quot;error_condition&quot;&gt;std::error_condition&lt;/a&gt;&lt;/code&gt; 列挙</target>
        </trans-unit>
        <trans-unit id="445eb2b5b5383d4d26f8fce0e579ad578bc9eca9" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;basic_ios&lt;/code&gt; object to exchange the state with</source>
          <target state="translated">状態を交換するための &lt;code&gt;basic_ios&lt;/code&gt; オブジェクト</target>
        </trans-unit>
        <trans-unit id="d8774818df80501ba31f685b580313eaeda05da2" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;basic_ios&lt;/code&gt; object to transfer the state from</source>
          <target state="translated">状態を転送する &lt;code&gt;basic_ios&lt;/code&gt; オブジェクト</target>
        </trans-unit>
        <trans-unit id="6196b4c7924673b66d38a52acca20b5f285e20f0" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;enum&lt;/code&gt; keyword must be used to refer to an &lt;a href=&quot;enum&quot;&gt;enumeration type&lt;/a&gt; (whether scoped or unscoped)</source>
          <target state="translated">&lt;code&gt;enum&lt;/code&gt; キーワードを参照するために使用されなければならない&lt;a href=&quot;enum&quot;&gt;列挙型&lt;/a&gt;（スコープまたはスコープ外かどうか）</target>
        </trans-unit>
        <trans-unit id="e74b9546ce3e5777b851db182f60e85cf8fcd08f" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;match_results&lt;/code&gt; to swap with</source>
          <target state="translated">スワップする &lt;code&gt;match_results&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2eaad06277d25c40b6473125648dba1afb7a676b" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;noexcept&lt;/code&gt; specification is ill-formed</source>
          <target state="translated">&lt;code&gt;noexcept&lt;/code&gt; 仕様の形式が正しくありません</target>
        </trans-unit>
        <trans-unit id="6ba9c73d180674b07c012d63919ea881aaae0c65" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;optional&lt;/code&gt; object to exchange the contents with</source>
          <target state="translated">コンテンツを交換する &lt;code&gt;optional&lt;/code&gt; オブジェクト</target>
        </trans-unit>
        <trans-unit id="9717b77ba851a7817cba3ad7c84d04a91b8e3979" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;std::packaged_task&lt;/code&gt; to move from</source>
          <target state="translated">移動する &lt;code&gt;std::packaged_task&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f456f1d7fb780b801f9ecd00030e0e9df869dd4f" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;union&lt;/code&gt;class-key must be used to refer to a &lt;a href=&quot;union&quot;&gt;union&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;union&lt;/code&gt; 、クラスのキーは、を参照するために使用されなければならない&lt;a href=&quot;union&quot;&gt;労働組合&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8817f100d185417065712f931df4495b35fd7090" translate="yes" xml:space="preserve">
          <source>the C++ type system overview</source>
          <target state="translated">C++型システムの概要</target>
        </trans-unit>
        <trans-unit id="72293ea121ba4e2a5025fcad9526244f408ac64b" translate="yes" xml:space="preserve">
          <source>the IO stream error codes</source>
          <target state="translated">IOストリームエラーコード</target>
        </trans-unit>
        <trans-unit id="71135a89d8a7a5be72c217b30823fc2fbb1e7081" translate="yes" xml:space="preserve">
          <source>the LC_CTYPE category, obtained from a call to &lt;code&gt;&lt;a href=&quot;wctype&quot;&gt;std::wctype&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;wctype&quot;&gt;std::wctype&lt;/a&gt;&lt;/code&gt; 呼び出しから取得したLC_CTYPEカテゴリー</target>
        </trans-unit>
        <trans-unit id="4f290dcde29d8c2696610a8d43c030bcd272c90e" translate="yes" xml:space="preserve">
          <source>the LC_CTYPE mapping, obtained from a call to &lt;code&gt;&lt;a href=&quot;wctrans&quot;&gt;std::wctrans&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;wctrans&quot;&gt;std::wctrans&lt;/a&gt;&lt;/code&gt; 呼び出しから取得したLC_CTYPEマッピング</target>
        </trans-unit>
        <trans-unit id="3b15e34691bef55babc5c694ed47a037fc13c3b9" translate="yes" xml:space="preserve">
          <source>the POD type of at least size &lt;code&gt;Len&lt;/code&gt; with alignment requirement &lt;code&gt;Align&lt;/code&gt;</source>
          <target state="translated">少なくとも &lt;code&gt;Len&lt;/code&gt; のPODタイプ、位置合わせ要件 &lt;code&gt;Align&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6ddea6ef31c4d559a76fc3c0432c54cb30f8638f" translate="yes" xml:space="preserve">
          <source>the UTF-8 code unit to convert</source>
          <target state="translated">変換するためのUTF-8コード単位</target>
        </trans-unit>
        <trans-unit id="212206d5aa405bf3089086eb3f6cae80a854f48f" translate="yes" xml:space="preserve">
          <source>the absolute numeric monetary value is required</source>
          <target state="translated">絶対数的な金額が必要</target>
        </trans-unit>
        <trans-unit id="1b6510bc571ff67f8a53ba8f9b65ce7ca336bda9" translate="yes" xml:space="preserve">
          <source>the alignment originally allocated</source>
          <target state="translated">元々割り当てられていたアライメント</target>
        </trans-unit>
        <trans-unit id="21db0b2626456cb559888aab962671cefb2867e7" translate="yes" xml:space="preserve">
          <source>the alignment to use</source>
          <target state="translated">使用するアライメント</target>
        </trans-unit>
        <trans-unit id="17cd817cef3f6d45af56c8d046ef7615e957377d" translate="yes" xml:space="preserve">
          <source>the allocator (type-erased);</source>
          <target state="translated">アロケータ(型消し)を使用しています。</target>
        </trans-unit>
        <trans-unit id="08f5db1cd240c81cf59f61394b8d3797c6fd3a3d" translate="yes" xml:space="preserve">
          <source>the allocator to pass to the constructor of the member &lt;code&gt;std::basic_syncbuf&lt;/code&gt;</source>
          <target state="translated">メンバー &lt;code&gt;std::basic_syncbuf&lt;/code&gt; コンストラクターに渡すアロケーター</target>
        </trans-unit>
        <trans-unit id="517961ecd2a752e21de11e74d4b07b77c9e2cdbe" translate="yes" xml:space="preserve">
          <source>the allocator to use for temporary storage</source>
          <target state="translated">一時記憶用アロケータ</target>
        </trans-unit>
        <trans-unit id="b345cf77f9aa26b9a006769c7e3cbe9608573526" translate="yes" xml:space="preserve">
          <source>the allocator to use when storing the task</source>
          <target state="translated">タスクを格納する際に使用するアロケータ</target>
        </trans-unit>
        <trans-unit id="9c5dab4b1eec911f3d5195f2f7d4da1c165fc538" translate="yes" xml:space="preserve">
          <source>the allocator to use.</source>
          <target state="translated">を使用するアロケータを指定します。</target>
        </trans-unit>
        <trans-unit id="c7e4f0ee2a8e167c29a4d8cf2ebe8a6b3247b789" translate="yes" xml:space="preserve">
          <source>the argument for the arithmetic operation</source>
          <target state="translated">算術演算の引数</target>
        </trans-unit>
        <trans-unit id="48d86cbd9aafa8c6524d7aa17158ca8eb2dae0b3" translate="yes" xml:space="preserve">
          <source>the argument is outside the range in which the operation is mathematically defined (the description of &lt;a href=&quot;../math&quot;&gt;each function&lt;/a&gt; lists the required domain errors)</source>
          <target state="translated">引数が演算が数学的に定義されている範囲外です（&lt;a href=&quot;../math&quot;&gt;各関数&lt;/a&gt;の説明に必要なドメインエラーがリストされています）</target>
        </trans-unit>
        <trans-unit id="8cec15b3bcd8fcec1941620b40b66c6b00db6ec6" translate="yes" xml:space="preserve">
          <source>the argument of the &lt;a href=&quot;delete&quot;&gt;delete-expression&lt;/a&gt; (&lt;code&gt;T&lt;/code&gt; is any object pointer type);</source>
          <target state="translated">&lt;a href=&quot;delete&quot;&gt;delete-expression&lt;/a&gt;の引数（ &lt;code&gt;T&lt;/code&gt; は任意のオブジェクトポインター型）。</target>
        </trans-unit>
        <trans-unit id="d8e97950f390163e7697b50dd43a1f9489b76e07" translate="yes" xml:space="preserve">
          <source>the argument of the function</source>
          <target state="translated">関数の引数</target>
        </trans-unit>
        <trans-unit id="cf3713bfaa50c15690bf47c08a5594e823a7678e" translate="yes" xml:space="preserve">
          <source>the argument of the function)</source>
          <target state="translated">関数の引数)</target>
        </trans-unit>
        <trans-unit id="a2336ee232a40b9ecba11f3c9be5153ba780ea68" translate="yes" xml:space="preserve">
          <source>the argument, a value of a floating-point or integral type</source>
          <target state="translated">引数には、浮動小数点型または積分型の値を指定します。</target>
        </trans-unit>
        <trans-unit id="5e5f26eaebde8a31bbbd68c032b9bef1e4129d5e" translate="yes" xml:space="preserve">
          <source>the arguments are copied and/or moved before invocation</source>
          <target state="translated">呼び出しの前に引数がコピーされたり移動されたりします。</target>
        </trans-unit>
        <trans-unit id="195c7d15d07d22fa81cfbcb72221eefda8001765" translate="yes" xml:space="preserve">
          <source>the arguments to compare: either both complex numbers or one complex and one scalar of matching type (&lt;code&gt;float&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;long double&lt;/code&gt;)</source>
          <target state="translated">比較する引数：両方の複素数、または一致する型の1つの複素数と1つのスカラー（ &lt;code&gt;float&lt;/code&gt; 、 &lt;code&gt;double&lt;/code&gt; 、 &lt;code&gt;long double&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="0a6ba2f5f7c040998b4fe8d14c22ce808fa141a7" translate="yes" xml:space="preserve">
          <source>the arguments to forward to the the constructor of &lt;code&gt;U&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;U&lt;/code&gt; のコンストラクターに転送する引数</target>
        </trans-unit>
        <trans-unit id="b2bb815f00c93b63bfe4fa2a9e9d34c2550cb9cd" translate="yes" xml:space="preserve">
          <source>the arguments to pass to T's constructor</source>
          <target state="translated">T のコンストラクタに渡す引数</target>
        </trans-unit>
        <trans-unit id="b82fca0bf3141cc6f23fee7d75f0aeb408a5d66d" translate="yes" xml:space="preserve">
          <source>the arguments to pass to the constructor</source>
          <target state="translated">コンストラクタに渡す引数</target>
        </trans-unit>
        <trans-unit id="cf558dba5001350f1960e5946b365eb1afaaa949" translate="yes" xml:space="preserve">
          <source>the arguments: either both complex numbers or one complex and one scalar of matching type (&lt;code&gt;float&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;long double&lt;/code&gt;)</source>
          <target state="translated">引数：両方の複素数または一致する型の1つの複素数と1つのスカラー（ &lt;code&gt;float&lt;/code&gt; 、 &lt;code&gt;double&lt;/code&gt; 、 &lt;code&gt;long double&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="46007ee0e699043b79dc69a5b313ecf8f1285a1b" translate="yes" xml:space="preserve">
          <source>the array bound cannot be deduced in a new expression</source>
          <target state="translated">は、新しい式では配列の境界を推論することができません。</target>
        </trans-unit>
        <trans-unit id="c5f5368a9a03f8de4fddf3478cbff611290f7e35" translate="yes" xml:space="preserve">
          <source>the array index</source>
          <target state="translated">配列インデックス</target>
        </trans-unit>
        <trans-unit id="88b1f68ae41748017c3b04afe371d6b245f7eec6" translate="yes" xml:space="preserve">
          <source>the assignment operator</source>
          <target state="translated">代入演算子</target>
        </trans-unit>
        <trans-unit id="77c0070626d140184bc416b10ca4e2ccde14a2ff" translate="yes" xml:space="preserve">
          <source>the assignment operator is deleted</source>
          <target state="translated">代入演算子が削除されます。</target>
        </trans-unit>
        <trans-unit id="879ca92c4d7d25d56b71d5b66fae9ff1d92a4100" translate="yes" xml:space="preserve">
          <source>the associated allocator.</source>
          <target state="translated">に関連付けられたアロケータを使用します。</target>
        </trans-unit>
        <trans-unit id="c6e1bbddec48a7fadb45a2e22400b74e0bbdf265" translate="yes" xml:space="preserve">
          <source>the associated stream buffer pointer (see &lt;a href=&quot;basic_ios/rdbuf&quot;&gt;&lt;code&gt;rdbuf()&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">関連するストリームバッファポインタ（&lt;a href=&quot;basic_ios/rdbuf&quot;&gt; &lt;code&gt;rdbuf()&lt;/code&gt; を&lt;/a&gt;参照）</target>
        </trans-unit>
        <trans-unit id="ede127f458a5b0f9ba53d17e5a668c8f32a1a999" translate="yes" xml:space="preserve">
          <source>the asynchronous task abandoned its shared state</source>
          <target state="translated">非同期タスクが共有状態を放棄した場合</target>
        </trans-unit>
        <trans-unit id="e7488eef6a4f5081bb7bca81c811518c0b9dfd3e" translate="yes" xml:space="preserve">
          <source>the atomic store from the point of view of thread A, become</source>
          <target state="translated">スレッドAから見たアトミックストアが</target>
        </trans-unit>
        <trans-unit id="99e50e8dbb41a4fcefe746614a6bf7a2c9dfe58d" translate="yes" xml:space="preserve">
          <source>the base class for all facet categories: each facet of any category is derived from this type</source>
          <target state="translated">すべてのファセットカテゴリの基底クラス:カテゴリの各ファセットはこの型から派生します。</target>
        </trans-unit>
        <trans-unit id="d631a7b866e7ec75314e75e14a39a5350cba8b8d" translate="yes" xml:space="preserve">
          <source>the basic_istream object from which to assign to &lt;code&gt;*this&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;*this&lt;/code&gt; に割り当てるbasic_istreamオブジェクト</target>
        </trans-unit>
        <trans-unit id="04c84bb122c8fe8b2ea9d18315560c145e76313d" translate="yes" xml:space="preserve">
          <source>the basic_ostream object from which to assign to &lt;code&gt;*this&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;*this&lt;/code&gt; に割り当てるbasic_ostreamオブジェクト</target>
        </trans-unit>
        <trans-unit id="532816d4491aa7a3f158f8e253d302ef5ca3e3fa" translate="yes" xml:space="preserve">
          <source>the beginning of a stream</source>
          <target state="translated">冒頭</target>
        </trans-unit>
        <trans-unit id="ac7790c407a8a8a63224740ef6c91e0960b812e8" translate="yes" xml:space="preserve">
          <source>the beginning of the destination range</source>
          <target state="translated">宛先範囲の先頭</target>
        </trans-unit>
        <trans-unit id="1f4449309c236dff913a03b8ccb19689305b0995" translate="yes" xml:space="preserve">
          <source>the beginning of the destination range, may be equal to &lt;code&gt;first1&lt;/code&gt; or &lt;code&gt;first2&lt;/code&gt;</source>
          <target state="translated">宛先範囲の開始 &lt;code&gt;first1&lt;/code&gt; または &lt;code&gt;first2&lt;/code&gt; と等しい場合があります</target>
        </trans-unit>
        <trans-unit id="96a28b30d03a0c1712ccb31b71515e74899f7ea0" translate="yes" xml:space="preserve">
          <source>the beginning of the destination range, may be equal to &lt;code&gt;first&lt;/code&gt;</source>
          <target state="translated">先範囲の始まりは、に等しくすることができる &lt;code&gt;first&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e0670cf655a58d725fc4f4efcc68041c56a8e0ac" translate="yes" xml:space="preserve">
          <source>the beginning of the destination range.</source>
          <target state="translated">は、送信先の範囲の先頭になります。</target>
        </trans-unit>
        <trans-unit id="832e3db402b1f75100661e89460f411f25ca4c32" translate="yes" xml:space="preserve">
          <source>the beginning of the destination range. The behavior is undefined if &lt;code&gt;d_first&lt;/code&gt; is within the range &lt;code&gt;[first, last)&lt;/code&gt;. In this case, &lt;code&gt;&lt;a href=&quot;move_backward&quot;&gt;std::move_backward&lt;/a&gt;&lt;/code&gt; may be used instead of &lt;a href=&quot;move#top&quot;&gt; std::move&lt;/a&gt;.</source>
          <target state="translated">宛先範囲の始まり。 &lt;code&gt;d_first&lt;/code&gt; が &lt;code&gt;[first, last)&lt;/code&gt; 範囲内の場合の動作は未定義です。この場合、 &lt;code&gt;&lt;a href=&quot;move_backward&quot;&gt;std::move_backward&lt;/a&gt;&lt;/code&gt; 代わりに&lt;a href=&quot;move#top&quot;&gt;std :: &lt;/a&gt;move_backwardを使用できます。</target>
        </trans-unit>
        <trans-unit id="6e56a5f7e59ad2710abf913c42b865f7cd48713f" translate="yes" xml:space="preserve">
          <source>the beginning of the destination range; may be equal to &lt;code&gt;first&lt;/code&gt;</source>
          <target state="translated">宛先範囲の開始。 &lt;code&gt;first&lt;/code&gt; に等しいかもしれません</target>
        </trans-unit>
        <trans-unit id="2e92411bec1850ddc8a95a0be72014760f2fedef" translate="yes" xml:space="preserve">
          <source>the beginning of the first sorted range</source>
          <target state="translated">最初にソートされた範囲の先頭</target>
        </trans-unit>
        <trans-unit id="6ec26690d4cf3c80eefb4673380fe17c6caa6680" translate="yes" xml:space="preserve">
          <source>the beginning of the original range</source>
          <target state="translated">元の範囲の始点</target>
        </trans-unit>
        <trans-unit id="483175508242ec1e03ac59078fcb87faf19655f6" translate="yes" xml:space="preserve">
          <source>the beginning of the output range for the elements that do not satisfy p</source>
          <target state="translated">を満たしていない要素の出力範囲の開始点</target>
        </trans-unit>
        <trans-unit id="83fde3194835f7847933f785f62d559436c08897" translate="yes" xml:space="preserve">
          <source>the beginning of the output range for the elements that satisfy p</source>
          <target state="translated">を満たす要素の出力範囲の先頭を示します.</target>
        </trans-unit>
        <trans-unit id="9297f2a911ce1baacd10e6fd67af88a253132416" translate="yes" xml:space="preserve">
          <source>the beginning of the range of elements to copy from</source>
          <target state="translated">からコピーする要素の範囲の先頭</target>
        </trans-unit>
        <trans-unit id="438690bb43266deda561761ed0b01c7c2ba09f5d" translate="yes" xml:space="preserve">
          <source>the beginning of the range of elements to destroy</source>
          <target state="translated">潰しの手始め</target>
        </trans-unit>
        <trans-unit id="6f60785fe6f75d5ca4d7a10c1d863f330c3c4214" translate="yes" xml:space="preserve">
          <source>the beginning of the range of elements to generate</source>
          <target state="translated">を生成するための要素の範囲の先頭</target>
        </trans-unit>
        <trans-unit id="cec77fdab433c9d3af59778b5e099f3656e2db79" translate="yes" xml:space="preserve">
          <source>the beginning of the range of elements to initialize</source>
          <target state="translated">初期化する要素の範囲の先頭</target>
        </trans-unit>
        <trans-unit id="fb9008eaacad7050474eebbc5ed3cd4cb95e7586" translate="yes" xml:space="preserve">
          <source>the beginning of the range of elements to modify</source>
          <target state="translated">修正する要素の範囲の先頭</target>
        </trans-unit>
        <trans-unit id="7b7abed042f4ee7f1f8690d78f2fd5fbfab072b7" translate="yes" xml:space="preserve">
          <source>the beginning of the range of the elements to copy</source>
          <target state="translated">コピーする要素の範囲の先頭</target>
        </trans-unit>
        <trans-unit id="fd70bb487922c858aa7f363d44a73848bf5a6abe" translate="yes" xml:space="preserve">
          <source>the beginning of the range of the elements to initialize</source>
          <target state="translated">初期化する要素の範囲の先頭</target>
        </trans-unit>
        <trans-unit id="373964afa3afdd501d7c769c05e5aabdfe8411d5" translate="yes" xml:space="preserve">
          <source>the beginning of the range of the elements to move</source>
          <target state="translated">移動する要素の範囲の始まり</target>
        </trans-unit>
        <trans-unit id="30a1b0a3366d11151ab53a69486c4222155118fe" translate="yes" xml:space="preserve">
          <source>the beginning of the range to apply the function to</source>
          <target state="translated">関数を適用する範囲の先頭を指定します。</target>
        </trans-unit>
        <trans-unit id="d2454ce2c419617fc0f7723049c4a357921b55af" translate="yes" xml:space="preserve">
          <source>the beginning of the second range of elements</source>
          <target state="translated">序の口</target>
        </trans-unit>
        <trans-unit id="09fbbf2622d2b82e2722cf2f22034bbca3ad6658" translate="yes" xml:space="preserve">
          <source>the beginning of the second range of elements to transform</source>
          <target state="translated">変換するための第二の範囲の要素の始まり</target>
        </trans-unit>
        <trans-unit id="af59f5c9dee65418eb3b4af853ee19f492f28148" translate="yes" xml:space="preserve">
          <source>the behavior is only unspecified</source>
          <target state="translated">挙動不詳</target>
        </trans-unit>
        <trans-unit id="a2140284a4af5618833e45cbfceabbc14c9827ad" translate="yes" xml:space="preserve">
          <source>the best match for a template template argument</source>
          <target state="translated">テンプレートテンプレートの引数に最適な</target>
        </trans-unit>
        <trans-unit id="80adb90fefde4a48a84cbeb39c514826e98d817f" translate="yes" xml:space="preserve">
          <source>the best viable candidate for a non-template function in &lt;a href=&quot;overload_resolution&quot;&gt;overload resolution&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;overload_resolution&quot;&gt;オーバーロードの解決&lt;/a&gt;における非テンプレート関数の実行可能な最良の候補</target>
        </trans-unit>
        <trans-unit id="e736a2cc0ba4631736c23402c6342392d2ef07e8" translate="yes" xml:space="preserve">
          <source>the bitmask obtained from one or several calls to lookup_classname()</source>
          <target state="translated">lookup_classname()の 1 回または複数回の呼び出しで得られたビットマスク。</target>
        </trans-unit>
        <trans-unit id="8abedf4789556cd6cf03a4682463268530f0c7be" translate="yes" xml:space="preserve">
          <source>the bitset on the left-hand side of the operator</source>
          <target state="translated">演算子の左側にあるビットセット</target>
        </trans-unit>
        <trans-unit id="167d18dd97780d07a79002b09bea5d72910f64ec" translate="yes" xml:space="preserve">
          <source>the bitset on the right-hand side of the operator</source>
          <target state="translated">演算子の右側にあるビットセット</target>
        </trans-unit>
        <trans-unit id="8760c761a38169c5014fffa399d8777d9d197e11" translate="yes" xml:space="preserve">
          <source>the bitset to be read or written</source>
          <target state="translated">読み書きされるビットセット</target>
        </trans-unit>
        <trans-unit id="e29cea8496cbe95dfa342fd116ad969649382620" translate="yes" xml:space="preserve">
          <source>the body of the lambda &lt;a href=&quot;definition#ODR-use&quot;&gt;odr-uses&lt;/a&gt; the variable or the &lt;code&gt;this&lt;/code&gt; pointer</source>
          <target state="translated">ラムダの本体&lt;a href=&quot;definition#ODR-use&quot;&gt;ODRは、使用する&lt;/a&gt;変数や &lt;code&gt;this&lt;/code&gt; ポインタを</target>
        </trans-unit>
        <trans-unit id="0c0bc402523625180a01cb650d62a51e6f77c47a" translate="yes" xml:space="preserve">
          <source>the bound</source>
          <target state="translated">境界線</target>
        </trans-unit>
        <trans-unit id="3a1ec4a7310fec015e921f7e4819f321fcda8f70" translate="yes" xml:space="preserve">
          <source>the bound (defaults to &lt;code&gt;std::unreachable_sentinel_t&lt;/code&gt;).</source>
          <target state="translated">境界（デフォルトは &lt;code&gt;std::unreachable_sentinel_t&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="f60d3b0c46416400b55d305f82e57e249671cafa" translate="yes" xml:space="preserve">
          <source>the boundaries to clamp &lt;code&gt;v&lt;/code&gt; to</source>
          <target state="translated">&lt;code&gt;v&lt;/code&gt; をクランプする境界</target>
        </trans-unit>
        <trans-unit id="a904451cfb0f3fb053cda997fe43b5eb32c3ba72" translate="yes" xml:space="preserve">
          <source>the brace-enclosed &lt;a href=&quot;statements#Compound_statements&quot;&gt;sequence of statements&lt;/a&gt; that constitutes the body of a function</source>
          <target state="translated">関数の本体を構成する中括弧で囲まれた&lt;a href=&quot;statements#Compound_statements&quot;&gt;一連のステートメント&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4d65aaa353126b431b11a691f9bef4e25a792f26" translate="yes" xml:space="preserve">
          <source>the brace-enclosed &lt;a href=&quot;statements#Compound_statements&quot;&gt;sequence of statements&lt;/a&gt; that constututes the body of a function</source>
          <target state="translated">関数の本体を構成する中括弧で囲まれた&lt;a href=&quot;statements#Compound_statements&quot;&gt;一連のステートメント&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7afdbb77981fddfe61a5bafdb1d9f70c6c2e6d52" translate="yes" xml:space="preserve">
          <source>the byte type</source>
          <target state="translated">バイトがた</target>
        </trans-unit>
        <trans-unit id="63ee22e4eee1fa7b42a92ffba7ca112a1610a232" translate="yes" xml:space="preserve">
          <source>the call to &lt;a href=&quot;../basic_streambuf/pubsync&quot;&gt;&lt;code&gt;pubsync()&lt;/code&gt;&lt;/a&gt;, if requested, also completed successfully.</source>
          <target state="translated">&lt;a href=&quot;../basic_streambuf/pubsync&quot;&gt; &lt;code&gt;pubsync()&lt;/code&gt; の&lt;/a&gt;呼び出し（要求された場合）も正常に完了しました。</target>
        </trans-unit>
        <trans-unit id="a1559f8e6949a0d416db2d8ee006852f573afbdf" translate="yes" xml:space="preserve">
          <source>the callable target (function, member function, lambda-expression, functor) to execute</source>
          <target state="translated">実行するための呼び出し可能なターゲット (関数、メンバ関数、ラムダ式、ファンクタ)</target>
        </trans-unit>
        <trans-unit id="8b76e272b642315774cbf57032dfadd9127585a2" translate="yes" xml:space="preserve">
          <source>the category of error</source>
          <target state="translated">誤りの範疇</target>
        </trans-unit>
        <trans-unit id="b635c1cb4c2d9c742ba5aa8fb0bc65e7bdca154a" translate="yes" xml:space="preserve">
          <source>the category of the iterator. Must be one of &lt;a href=&quot;iterator_tags&quot;&gt;iterator category tags&lt;/a&gt;.</source>
          <target state="translated">イテレータのカテゴリ。&lt;a href=&quot;iterator_tags&quot;&gt;イテレータカテゴリタグの&lt;/a&gt; 1つである必要があります。</target>
        </trans-unit>
        <trans-unit id="afeefc028f3b72c1ef97ac12777b18efdc7c978d" translate="yes" xml:space="preserve">
          <source>the character &lt;code&gt;~&lt;/code&gt; followed by a &lt;a href=&quot;decltype&quot;&gt;decltype&lt;/a&gt; specifier, such as &lt;code&gt;~decltype(str)&lt;/code&gt;.</source>
          <target state="translated">文字 &lt;code&gt;~&lt;/code&gt; 後に、 &lt;code&gt;~decltype(str)&lt;/code&gt; などの&lt;a href=&quot;decltype&quot;&gt;decltype&lt;/a&gt;指定子が続きます。</target>
        </trans-unit>
        <trans-unit id="0929fc19150f48f11aeaa7de9387fa0f341a80ed" translate="yes" xml:space="preserve">
          <source>the character &lt;code&gt;~&lt;/code&gt; followed by a class name, such as &lt;code&gt;~MyClass&lt;/code&gt;;</source>
          <target state="translated">文字 &lt;code&gt;~&lt;/code&gt; 後に &lt;code&gt;~MyClass&lt;/code&gt; などのクラス名が続きます。</target>
        </trans-unit>
        <trans-unit id="ec0cd8e0e05a1c7b38fede062055947e2c23262b" translate="yes" xml:space="preserve">
          <source>the character sequence &lt;code&gt;&quot;&quot;&lt;/code&gt; followed, without a space, by the character sequence that becomes the ud-suffix. This special syntax makes it possible to use language keywords and &lt;a href=&quot;../keywords&quot;&gt;reserved identifiers&lt;/a&gt; as ud-suffixes, and is used by the declaration of &lt;code&gt;operator &quot;&quot;if&lt;/code&gt; from the header &lt;code&gt;&amp;lt;complex&amp;gt;&lt;/code&gt;. Note that using this form does not change the rules that user-defined literal operators must begin with an underscore: declarations such as &lt;code&gt;operator &quot;&quot;if&lt;/code&gt; may only appear as part of a standard library header. However, it allows the use of an underscore followed by a capital letter (which is otherwise a &lt;a href=&quot;name&quot;&gt;reserved identifier&lt;/a&gt;)</source>
          <target state="translated">文字シーケンス &lt;code&gt;&quot;&quot;&lt;/code&gt; の後に、スペースなしで、ud接尾辞になる文字シーケンスが続きます。この特別な構文により、言語キーワードと&lt;a href=&quot;../keywords&quot;&gt;予約済み識別子&lt;/a&gt;をud-suffixとして使用できるようになり、ヘッダー &lt;code&gt;&amp;lt;complex&amp;gt;&lt;/code&gt; の &lt;code&gt;operator &quot;&quot;if&lt;/code&gt; 宣言で使用されます。この形式を使用しても、ユーザー定義のリテラル演算子がアンダースコアで始まる必要があるというルールは変更されないことに注意してください。 &lt;code&gt;operator &quot;&quot;if&lt;/code&gt; などの宣言は、標準ライブラリヘッダーの一部としてのみ表示される場合があります。ただし、アンダースコアの後に大文字を使用できます（それ以外の場合は&lt;a href=&quot;name&quot;&gt;予約済みの識別子です&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="5d8995b227b2b5bd46a8f288978236b34deefbad" translate="yes" xml:space="preserve">
          <source>the character stream to read from</source>
          <target state="translated">読み取る文字ストリーム</target>
        </trans-unit>
        <trans-unit id="c4e82e377f9b63d6ed297b80f52a7882a2d948ff" translate="yes" xml:space="preserve">
          <source>the character stream to write to</source>
          <target state="translated">書き込み先の文字ストリーム</target>
        </trans-unit>
        <trans-unit id="6ad5708e56790ae357d3cbf10c7721472e548c80" translate="yes" xml:space="preserve">
          <source>the character that may represent a digit</source>
          <target state="translated">すうじ</target>
        </trans-unit>
        <trans-unit id="7755c73c86612b87768dbf0c241097b7d3517747" translate="yes" xml:space="preserve">
          <source>the character that names a conversion specifier</source>
          <target state="translated">変換指定子の名前を付ける文字</target>
        </trans-unit>
        <trans-unit id="6f80835b790e5f0f4e6d46f6e1364f2b8ed1daa3" translate="yes" xml:space="preserve">
          <source>the character to append</source>
          <target state="translated">付字</target>
        </trans-unit>
        <trans-unit id="79129b0ba8b5f3145f33d36c27dc7260a95c0322" translate="yes" xml:space="preserve">
          <source>the character to classify</source>
          <target state="translated">分類文字</target>
        </trans-unit>
        <trans-unit id="454f153095b3dd31b0dfed9298a1d25b562b7b86" translate="yes" xml:space="preserve">
          <source>the character to insert</source>
          <target state="translated">挿し字</target>
        </trans-unit>
        <trans-unit id="3e6fb54659095dd32402c9bff3772cc630392364" translate="yes" xml:space="preserve">
          <source>the character to put back, or Traits::eof() to indicate that backing up of the get area is requested</source>
          <target state="translated">あるいは、取得領域のバックアップが要求されていることを示すための Traits::eoof()</target>
        </trans-unit>
        <trans-unit id="e7d2ffd8f2fbe80880ade9a151155a96cae7f7bc" translate="yes" xml:space="preserve">
          <source>the character to search for</source>
          <target state="translated">さがしもじ</target>
        </trans-unit>
        <trans-unit id="3e9447d10782f08535b6d910540db26d6ee35b3f" translate="yes" xml:space="preserve">
          <source>the character to store in the put area</source>
          <target state="translated">置き場所に格納する文字</target>
        </trans-unit>
        <trans-unit id="d3b03a5d5342eff30e868b2d3a6fd33567465653" translate="yes" xml:space="preserve">
          <source>the character to use as fill character</source>
          <target state="translated">塗りつぶし文字</target>
        </trans-unit>
        <trans-unit id="681edba6167a5c0ac8c5187bbd88c1de330de3f8" translate="yes" xml:space="preserve">
          <source>the character to use as the delimiter, defaults to &lt;code&gt;&quot;&lt;/code&gt;</source>
          <target state="translated">区切り文字として使用する文字。デフォルトは &lt;code&gt;&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="01692d5c6912031fad2382fabd2d7387d9ab75e1" translate="yes" xml:space="preserve">
          <source>the character to use as the escape character, defaults to &lt;code&gt;\&lt;/code&gt;</source>
          <target state="translated">エスケープ文字として使用する文字。デフォルトは &lt;code&gt;\&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7bb6f7fc77055c0f4465fb10fd648589cd4fbd8c" translate="yes" xml:space="preserve">
          <source>the character used as the decimal point</source>
          <target state="translated">小数点</target>
        </trans-unit>
        <trans-unit id="9e04eb0408133080b226a309c2100c6f2a3ac967" translate="yes" xml:space="preserve">
          <source>the character used to separate groups of digits before the decimal point</source>
          <target state="translated">小数点以下の桁を区切る文字</target>
        </trans-unit>
        <trans-unit id="d8ca83424321a8302337db9250b3ebc87a321bdc" translate="yes" xml:space="preserve">
          <source>the class must have no virtual base classes</source>
          <target state="translated">クラスは仮想基底クラスを持っていない必要があります。</target>
        </trans-unit>
        <trans-unit id="1c6e2bebe6bd39105ae5234121743518b3817c6f" translate="yes" xml:space="preserve">
          <source>the clock with the shortest tick period available</source>
          <target state="translated">ティッククロック</target>
        </trans-unit>
        <trans-unit id="d6e6ded6e33ed4f0b43521b75349a09eaa970630" translate="yes" xml:space="preserve">
          <source>the closure type of a lambda expression that appears in the declaration of a templated entity</source>
          <target state="translated">テンプレート化されたエンティティの宣言に現れるラムダ式のクロージャタイプ。</target>
        </trans-unit>
        <trans-unit id="f9d4bd81efe6b1647c82c8d1e5b04bebe31efb18" translate="yes" xml:space="preserve">
          <source>the common reference type for all &lt;code&gt;T...&lt;/code&gt;</source>
          <target state="translated">すべての &lt;code&gt;T...&lt;/code&gt; 共通の参照タイプ...</target>
        </trans-unit>
        <trans-unit id="3100f44ed64294fe7e76494cb9210b73233ded6b" translate="yes" xml:space="preserve">
          <source>the common type for all &lt;code&gt;T...&lt;/code&gt;</source>
          <target state="translated">すべての &lt;code&gt;T...&lt;/code&gt; 共通のタイプ...</target>
        </trans-unit>
        <trans-unit id="c084d204cb4405efc0eefffa4e5c2b3010385f03" translate="yes" xml:space="preserve">
          <source>the comparison function object</source>
          <target state="translated">比較関数オブジェクト</target>
        </trans-unit>
        <trans-unit id="723a599b7a43db441d10063d25c36267e9c9c3bc" translate="yes" xml:space="preserve">
          <source>the comparison function object to initialize the underlying comparison functor</source>
          <target state="translated">比較関数オブジェクトを使用して、基礎となる比較ファンクタを初期化します。</target>
        </trans-unit>
        <trans-unit id="6fe35be82a99c1b9cbeb733f009c35c11a949f06" translate="yes" xml:space="preserve">
          <source>the complex number argument</source>
          <target state="translated">複素数引数</target>
        </trans-unit>
        <trans-unit id="46e52bcb784e5084579a80704247e85de8522848" translate="yes" xml:space="preserve">
          <source>the complex number to be inserted or extracted</source>
          <target state="translated">抜き出し複素数</target>
        </trans-unit>
        <trans-unit id="4aa36e4de2e2bb7053edccdf69045bf03c2a2b08" translate="yes" xml:space="preserve">
          <source>the complexity of an attempted match exceeded a predefined level</source>
          <target state="translated">一致の試みの複雑さが事前に定義されたレベルを超えていた場合</target>
        </trans-unit>
        <trans-unit id="7d0983cf7c30a2be540b2fe92f44bb8049c7669d" translate="yes" xml:space="preserve">
          <source>the condition variable to notify at thread exit</source>
          <target state="translated">スレッド終了時に通知する条件変数</target>
        </trans-unit>
        <trans-unit id="c2bf31b5816da26dee291e7d118c3a8dab588252" translate="yes" xml:space="preserve">
          <source>the condition variable was awakened by timeout expiration</source>
          <target state="translated">タイムアウト満了で条件変数が覚醒した</target>
        </trans-unit>
        <trans-unit id="be994babe450edd5310ce1f31c842146697fbbcd" translate="yes" xml:space="preserve">
          <source>the condition variable was awakened with &lt;code&gt;notify_all&lt;/code&gt;, &lt;code&gt;notify_one&lt;/code&gt;, or spuriously</source>
          <target state="translated">条件変数が &lt;code&gt;notify_all&lt;/code&gt; 、 &lt;code&gt;notify_one&lt;/code&gt; 、または誤って起動された</target>
        </trans-unit>
        <trans-unit id="ade10615adfd8495567450ce9c825c724f3f7222" translate="yes" xml:space="preserve">
          <source>the constant value 2</source>
          <target state="translated">定数値2</target>
        </trans-unit>
        <trans-unit id="5606b08dafd49924cb894f957b3544bf9aea7b09" translate="yes" xml:space="preserve">
          <source>the constant value &lt;code&gt;5489u&lt;/code&gt;</source>
          <target state="translated">一定の値 &lt;code&gt;5489u&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b94243d3f329294a65c4aebc4bcd7609d798cd36" translate="yes" xml:space="preserve">
          <source>the constraint expression in the</source>
          <target state="translated">の制約式は</target>
        </trans-unit>
        <trans-unit id="84fa9935a56005ff9e2ce4b02341eb9916a01ce2" translate="yes" xml:space="preserve">
          <source>the constraint expression in the trailing</source>
          <target state="translated">制約式の末尾にある</target>
        </trans-unit>
        <trans-unit id="b256e7d3f490084a5e5e7383b027ec70c1c32e0c" translate="yes" xml:space="preserve">
          <source>the constraint expression introduced for each constrained template parameter, in order of appearance;</source>
          <target state="translated">各制約付きテンプレートパラメータに対して導入された制約式を,外観の順に並べたものです.</target>
        </trans-unit>
        <trans-unit id="0cd9b521bc7c473ec63ea9f581ad030771d46ee8" translate="yes" xml:space="preserve">
          <source>the constructor acquires the resource and establishes all class invariants or throws an exception if that cannot be done,</source>
          <target state="translated">コンストラクタはリソースを取得してクラスの不変性を確立するか、それができない場合は例外をスローします。</target>
        </trans-unit>
        <trans-unit id="f6fc90facd016f76bd1de874e968f76a775c52e0" translate="yes" xml:space="preserve">
          <source>the constructor arguments to pass to &lt;code&gt;a.construct()&lt;/code&gt; or to placement-new</source>
          <target state="translated">&lt;code&gt;a.construct()&lt;/code&gt; またはPlacement -new に渡すコンストラクター引数</target>
        </trans-unit>
        <trans-unit id="4b59defcf852f3e24632523a528f7069c0193770" translate="yes" xml:space="preserve">
          <source>the constructor arguments to pass to the constructor of &lt;code&gt;T1&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;T1&lt;/code&gt; のコンストラクターに渡すコンストラクター引数</target>
        </trans-unit>
        <trans-unit id="e2b15a49cbfe933fcce98e2de9f3da22a739d123" translate="yes" xml:space="preserve">
          <source>the constructor arguments to pass to the constructor of &lt;code&gt;T2&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;T2&lt;/code&gt; のコンストラクターに渡すコンストラクター引数</target>
        </trans-unit>
        <trans-unit id="e7603802d55696587a253f6c40ba5970f1afccbb" translate="yes" xml:space="preserve">
          <source>the constructor arguments to pass to the constructor of &lt;code&gt;T&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; のコンストラクターに渡すコンストラクター引数</target>
        </trans-unit>
        <trans-unit id="ac3c3b177d4842bd91cf91d63966b49cd94d2f97" translate="yes" xml:space="preserve">
          <source>the constructor arguments to use</source>
          <target state="translated">使用するコンストラクタの引数を指定します。</target>
        </trans-unit>
        <trans-unit id="b27a3db164ad07368954daa1ac324b729766b275" translate="yes" xml:space="preserve">
          <source>the constructor body must be either deleted or defaulted or contain only the following:</source>
          <target state="translated">コンストラクタのボディは削除するかデフォルトにするか、以下の内容のみを含める必要があります。</target>
        </trans-unit>
        <trans-unit id="fc51f41b2653bf9c9bb2a001ce350a6361912107" translate="yes" xml:space="preserve">
          <source>the constructor body must satisfy the constraints for the body of a constexpr function</source>
          <target state="translated">コンストラクタのボディはconstexpr関数のボディに対する制約を満たさなければなりません。</target>
        </trans-unit>
        <trans-unit id="d2c34d3d3c65d1ee808d9cb6274564df129b48a4" translate="yes" xml:space="preserve">
          <source>the constructor must not have a &lt;a href=&quot;function-try-block&quot;&gt;function-try-block&lt;/a&gt;</source>
          <target state="translated">コンストラクターに&lt;a href=&quot;function-try-block&quot;&gt;function-try-block&lt;/a&gt;があってはなりません</target>
        </trans-unit>
        <trans-unit id="cca37ad19189e882107b01a60970a48093f1ecb9" translate="yes" xml:space="preserve">
          <source>the constructors of &lt;code&gt;T&lt;/code&gt; are examined and the best match is selected by overload resolution. The constructor is then called to initialize the object.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; のコンストラクターが調べられ、オーバーロードの解決によって最良の一致が選択されます。次に、コンストラクターが呼び出され、オブジェクトが初期化されます。</target>
        </trans-unit>
        <trans-unit id="26319ee99d64d0f780bbc2f18ed8fa743055bd35" translate="yes" xml:space="preserve">
          <source>the contents of &lt;code&gt;rhs&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt; otherwise</source>
          <target state="translated">&lt;code&gt;rhs&lt;/code&gt; の内容、それ以外の場合は &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0ffcfc4bddf544f464d4e9759af0289b5fac4533" translate="yes" xml:space="preserve">
          <source>the contents of shared state were already accessed through &lt;code&gt;&lt;a href=&quot;future&quot;&gt;std::future&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">共有状態のコンテンツには、すでに &lt;code&gt;&lt;a href=&quot;future&quot;&gt;std::future&lt;/a&gt;&lt;/code&gt; 介してアクセスされていました</target>
        </trans-unit>
        <trans-unit id="0f60f55b90ed5dbae650b01b11112cc79ee836d9" translate="yes" xml:space="preserve">
          <source>the contents of the null-terminated byte string pointed to by &lt;code&gt;s&lt;/code&gt;, followed by &lt;code&gt;&quot;: &quot;&lt;/code&gt; (unless &lt;code&gt;s&lt;/code&gt; is a null pointer or the character pointed to by &lt;code&gt;s&lt;/code&gt; is the null character)</source>
          <target state="translated">&lt;code&gt;s&lt;/code&gt; が指すnullで終了するバイト文字列の内容と、それに続く &lt;code&gt;&quot;: &quot;&lt;/code&gt; （ &lt;code&gt;s&lt;/code&gt; がnullポインターであるか、 &lt;code&gt;s&lt;/code&gt; が指す文字がnull文字である場合を除く）</target>
        </trans-unit>
        <trans-unit id="b6e07e3d10c28d2b644eddc737fc2dc6ed4447ca" translate="yes" xml:space="preserve">
          <source>the context of a preprocessor directive:</source>
          <target state="translated">プリプロセッサディレクティブのコンテキストを指定します。</target>
        </trans-unit>
        <trans-unit id="91ece1ffbe7487845a71e62528dd49f0c4816e05" translate="yes" xml:space="preserve">
          <source>the controlling expression of &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, &lt;code&gt;for&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;if&lt;/code&gt; 、 &lt;code&gt;while&lt;/code&gt; 、 &lt;code&gt;for&lt;/code&gt; の制御式。</target>
        </trans-unit>
        <trans-unit id="5bb29261c440be8b56f3448b589fb6a37bc84afe" translate="yes" xml:space="preserve">
          <source>the controlling expression of the &lt;a href=&quot;switch&quot;&gt;&lt;code&gt;switch&lt;/code&gt;&lt;/a&gt; statement (&lt;code&gt;T&lt;/code&gt; is any integral or enumeration type).</source>
          <target state="translated">&lt;a href=&quot;switch&quot;&gt; &lt;code&gt;switch&lt;/code&gt; &lt;/a&gt;ステートメントの制御式（ &lt;code&gt;T&lt;/code&gt; は整数型または列挙型です）。</target>
        </trans-unit>
        <trans-unit id="82eee14238c34d0b74ea443c2cfcd549b0f6a65b" translate="yes" xml:space="preserve">
          <source>the conversion function for captureless lambdas had unspecified exception specification</source>
          <target state="translated">キャプチャレスラムダのための変換関数に不特定の例外仕様があった</target>
        </trans-unit>
        <trans-unit id="e8185c2f0cda37d1694bdeba1e24d1fd9c478c8d" translate="yes" xml:space="preserve">
          <source>the conversion is non-narrowing</source>
          <target state="translated">換算は非狭義</target>
        </trans-unit>
        <trans-unit id="d2a7d7e1069adf8ef05244c53e7a1eca75362e9f" translate="yes" xml:space="preserve">
          <source>the conversion must also be valid in a constant expression</source>
          <target state="translated">変換は定数式でも有効でなければなりません。</target>
        </trans-unit>
        <trans-unit id="fc39be4c94bd56857f989928e201f128d580d129" translate="yes" xml:space="preserve">
          <source>the conversion occurs in an &lt;a href=&quot;expressions#Unevaluated_expressions&quot;&gt;unevaluated context&lt;/a&gt;(outside an &lt;a href=&quot;consteval&quot;&gt;immediate invocation&lt;/a&gt;)(since C++20), such as an operand of &lt;code&gt;sizeof&lt;/code&gt;, &lt;code&gt;noexcept&lt;/code&gt;, &lt;code&gt;decltype&lt;/code&gt;,(since C++11) or the static form of &lt;code&gt;typeid&lt;/code&gt;</source>
          <target state="translated">変換はで起こる&lt;a href=&quot;expressions#Unevaluated_expressions&quot;&gt;未評価コンテキスト&lt;/a&gt;（外部&lt;a href=&quot;consteval&quot;&gt;即時呼び出し&lt;/a&gt;ようのオペランドとして、（++ 20 C以降）） &lt;code&gt;sizeof&lt;/code&gt; 、 &lt;code&gt;noexcept&lt;/code&gt; 、 &lt;code&gt;decltype&lt;/code&gt; 、（C ++ 11以降）またはスタティック形 &lt;code&gt;typeid&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2c8ba4aa552b66061fae4abef712e26aa5d1d5de" translate="yes" xml:space="preserve">
          <source>the converted integer.</source>
          <target state="translated">変換された整数。</target>
        </trans-unit>
        <trans-unit id="86fa5760495aa002f763604106df7985e8d70e87" translate="yes" xml:space="preserve">
          <source>the converted string.</source>
          <target state="translated">変換された文字列。</target>
        </trans-unit>
        <trans-unit id="99de4a021082425d8d72294c2b080e879784e7f4" translate="yes" xml:space="preserve">
          <source>the copy assignment operator is deleted</source>
          <target state="translated">コピー代入演算子は削除されます。</target>
        </trans-unit>
        <trans-unit id="55bfab09c4746dc38bf12c2bb8de9c9dfbed8795" translate="yes" xml:space="preserve">
          <source>the copy assignment operator selected for every direct base of &lt;code&gt;T&lt;/code&gt; is trivial;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; の直接基数ごとに選択されるコピー代入演算子は簡単です。</target>
        </trans-unit>
        <trans-unit id="c951ca625a5d3574bf636350712bc6695bf32c99" translate="yes" xml:space="preserve">
          <source>the copy assignment operator selected for every non-static class type (or array of class type) member of &lt;code&gt;T&lt;/code&gt; is trivial;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; のすべての非静的クラス型（またはクラス型の配列）メンバーに対して選択されたコピー代入演算子は簡単です。</target>
        </trans-unit>
        <trans-unit id="a6855dcf52b23da2329aa9a9bf0a23e0088a9e0f" translate="yes" xml:space="preserve">
          <source>the copy constructor and function call operator of &lt;code&gt;BinaryPredicate&lt;/code&gt; or &lt;code&gt;Hash&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;BinaryPredicate&lt;/code&gt; または &lt;code&gt;Hash&lt;/code&gt; のコピーコンストラクターおよび関数呼び出し演算子。</target>
        </trans-unit>
        <trans-unit id="96f270c9f5c6639da0abe3a5b029135121bd373b" translate="yes" xml:space="preserve">
          <source>the copy constructor of &lt;code&gt;RandomIt1&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;RandomIt1&lt;/code&gt; のコピーコンストラクタ。</target>
        </trans-unit>
        <trans-unit id="2bc2449c5fa538bac8dcd2c8ce1284d682902c3e" translate="yes" xml:space="preserve">
          <source>the copy constructor or function call operator of &lt;code&gt;BinaryPredicate&lt;/code&gt; or &lt;code&gt;Hash&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;BinaryPredicate&lt;/code&gt; または &lt;code&gt;Hash&lt;/code&gt; のコピーコンストラクターまたは関数呼び出し演算子。</target>
        </trans-unit>
        <trans-unit id="d950fec035756c5b763c142fec9a248428eb7ff0" translate="yes" xml:space="preserve">
          <source>the copy constructor selected for every direct base of &lt;code&gt;T&lt;/code&gt; is trivial;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; のすべての直接の基数に対して選択されたコピーコンストラクタは簡単です。</target>
        </trans-unit>
        <trans-unit id="251998a62010889a728d70aeee3c5634e8a07932" translate="yes" xml:space="preserve">
          <source>the copy constructor selected for every non-static class type (or array of class type) member of &lt;code&gt;T&lt;/code&gt; is trivial;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; のすべての非静的クラス型（またはクラス型の配列）メンバーに対して選択されたコピーコンストラクターは簡単です。</target>
        </trans-unit>
        <trans-unit id="37e63329a5d8d2d0c525e454c0b4725551e88b38" translate="yes" xml:space="preserve">
          <source>the corresponding successful return from &lt;code&gt;join()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;join()&lt;/code&gt; からの対応する成功した戻り。</target>
        </trans-unit>
        <trans-unit id="82d41874e3b50d063d5b54951cc29da4d0c45d7e" translate="yes" xml:space="preserve">
          <source>the current position of stream position indicator</source>
          <target state="translated">ストリーム位置表示器の現在位置</target>
        </trans-unit>
        <trans-unit id="fbe70fee6125bfaf041dc76e8d40fc8bef24f362" translate="yes" xml:space="preserve">
          <source>the current value.</source>
          <target state="translated">が現在の値になります。</target>
        </trans-unit>
        <trans-unit id="a06669b602d87f2a9b66486700829eb3ecbc49a5" translate="yes" xml:space="preserve">
          <source>the data consist only of printing characters and the control characters &lt;code&gt;\t&lt;/code&gt; and &lt;code&gt;\n&lt;/code&gt; (in particular, on Windows OS, the character &lt;code&gt;'\0x1A'&lt;/code&gt; terminates input)</source>
          <target state="translated">データは、印刷文字と制御文字 &lt;code&gt;\t&lt;/code&gt; および &lt;code&gt;\n&lt;/code&gt; のみで構成されます（特に、Windows OSでは、文字 &lt;code&gt;'\0x1A'&lt;/code&gt; は入力を終了します）</target>
        </trans-unit>
        <trans-unit id="dae3c92fc34412fadbead6e7d195a1916190b73d" translate="yes" xml:space="preserve">
          <source>the data to be inserted into &lt;code&gt;os&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;os&lt;/code&gt; に挿入されるデータ</target>
        </trans-unit>
        <trans-unit id="9a2c03c8d81d5f6808ba151d7e25181ab63389c3" translate="yes" xml:space="preserve">
          <source>the day value</source>
          <target state="translated">日価</target>
        </trans-unit>
        <trans-unit id="f8b615b505acc474dcf26b90c7fd105fe825ec60" translate="yes" xml:space="preserve">
          <source>the declarator</source>
          <target state="translated">宣言者</target>
        </trans-unit>
        <trans-unit id="8faf1cd7a60ed5c77c5307434eb8d942ba49877d" translate="yes" xml:space="preserve">
          <source>the default allocator</source>
          <target state="translated">デフォルトアロケータ</target>
        </trans-unit>
        <trans-unit id="0b343c6f27ffae0b79356a5e6e02df07f77375d4" translate="yes" xml:space="preserve">
          <source>the default constructor is explicit</source>
          <target state="translated">デフォルトのコンストラクタは明示的です。</target>
        </trans-unit>
        <trans-unit id="b31af7b2c60a6b75fbe7d5fc1290ae91d83373c7" translate="yes" xml:space="preserve">
          <source>the default constructor, copy constructor, and copy assignment operator of the value type of &lt;code&gt;RandomIt1&lt;/code&gt;; or</source>
          <target state="translated">&lt;code&gt;RandomIt1&lt;/code&gt; の値タイプのデフォルトのコンストラクター、コピーコンストラクター、およびコピー代入演算子。または</target>
        </trans-unit>
        <trans-unit id="e33bdf5e96c853ab255795d7ef1017cda1c5704a" translate="yes" xml:space="preserve">
          <source>the default constructor, copy constructor, or copy assignment operator of the value type of &lt;code&gt;RandomIt1&lt;/code&gt;; or</source>
          <target state="translated">&lt;code&gt;RandomIt1&lt;/code&gt; の値タイプのデフォルトコンストラクタ、コピーコンストラクタ、またはコピー割り当て演算子。または</target>
        </trans-unit>
        <trans-unit id="c83f08b10c083bae0d66a640bdcc2cf040227b44" translate="yes" xml:space="preserve">
          <source>the default precision is not known</source>
          <target state="translated">デフォルトの精度は不明です。</target>
        </trans-unit>
        <trans-unit id="26bec4c97195d80b7acc6616e5a7dfcd2de49103" translate="yes" xml:space="preserve">
          <source>the default rounding direction is not known</source>
          <target state="translated">デフォルトの丸めの方向がわからない</target>
        </trans-unit>
        <trans-unit id="711d57425973797d8eded1f791a81af26422ebf6" translate="yes" xml:space="preserve">
          <source>the default seed (&lt;code&gt;1&lt;/code&gt;).</source>
          <target state="translated">デフォルトのシード（ &lt;code&gt;1&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="28e2702418d6ce655bbe15640863632c2a6acbca" translate="yes" xml:space="preserve">
          <source>the degree of the polymonial, a value of unsigned integer type</source>
          <target state="translated">符号なし整数型の値。</target>
        </trans-unit>
        <trans-unit id="d9a862cca657173f3cefdcf6d20ee60f7c45b851" translate="yes" xml:space="preserve">
          <source>the degree of the polynomial</source>
          <target state="translated">多項式の次数</target>
        </trans-unit>
        <trans-unit id="c38930f5b659e4ff9b2f3debd459ea50ba57a6ed" translate="yes" xml:space="preserve">
          <source>the degree of the polynomial, a value of unsigned integer type</source>
          <target state="translated">多項式の次数、符号なし整数型の値</target>
        </trans-unit>
        <trans-unit id="e12cf27abc828fb8294e0d2f571898f3b6b4e3cc" translate="yes" xml:space="preserve">
          <source>the deleted copy assignment operator took reference to non-const</source>
          <target state="translated">削除されたコピー代入演算子は、コンスタントでないものを参照していました。</target>
        </trans-unit>
        <trans-unit id="c8cf602b2a9a8ed2ec3802fa584b68f69b660790" translate="yes" xml:space="preserve">
          <source>the deleted copy constructor took reference to non-const</source>
          <target state="translated">削除されたコピーのコンストラクタは、const ではない</target>
        </trans-unit>
        <trans-unit id="b2a4ee058f80dc81ab0ce3217d41b60e7b23e5c6" translate="yes" xml:space="preserve">
          <source>the deleter (type-erased);</source>
          <target state="translated">削除人(タイプ消し)になっています。</target>
        </trans-unit>
        <trans-unit id="689b9a6c445687c9b2295067f7cae104a5480990" translate="yes" xml:space="preserve">
          <source>the delimiter character</source>
          <target state="translated">くぎりもじ</target>
        </trans-unit>
        <trans-unit id="77793961bec3f67eb6f766c3e9cef0365f990d3b" translate="yes" xml:space="preserve">
          <source>the desired alignment</source>
          <target state="translated">目的の位置合わせ</target>
        </trans-unit>
        <trans-unit id="90e2376ea8728e56c4f333b8c7b379d9e0fb953b" translate="yes" xml:space="preserve">
          <source>the desired number of objects</source>
          <target state="translated">お目当ての数</target>
        </trans-unit>
        <trans-unit id="7c512750b66fe3fc00661d2f511c9017a6061804" translate="yes" xml:space="preserve">
          <source>the destruction of local variables of the block enclosing the return statement.</source>
          <target state="translated">戻り値文を囲むブロックのローカル変数の破棄を行います。</target>
        </trans-unit>
        <trans-unit id="01dde6917232ebc6380bfbd1d16349ad2f220785" translate="yes" xml:space="preserve">
          <source>the destructor is protected virtual</source>
          <target state="translated">デストラクタは保護されています。</target>
        </trans-unit>
        <trans-unit id="9a6fdb01f130132a341167fdabee09959813416c" translate="yes" xml:space="preserve">
          <source>the destructor releases the resource and never throws exceptions;</source>
          <target state="translated">デストラクタはリソースを解放し、例外を投げません。</target>
        </trans-unit>
        <trans-unit id="9e4a500989348f8d6cc89c13775be0e0a44ec12e" translate="yes" xml:space="preserve">
          <source>the difference between two &lt;code&gt;&lt;a href=&quot;fpos&quot;&gt;std::fpos&lt;/a&gt;&lt;/code&gt; objects is a value of type &lt;code&gt;std::streamoff&lt;/code&gt;</source>
          <target state="translated">2つの &lt;code&gt;&lt;a href=&quot;fpos&quot;&gt;std::fpos&lt;/a&gt;&lt;/code&gt; オブジェクトの違いは &lt;code&gt;std::streamoff&lt;/code&gt; 型の値です</target>
        </trans-unit>
        <trans-unit id="e0dc1bfead6a19d3c017527b664368595ed0bfaf" translate="yes" xml:space="preserve">
          <source>the dimensions in &lt;a href=&quot;../language/new&quot;&gt;new-expressions&lt;/a&gt; other than the first</source>
          <target state="translated">最初以外の&lt;a href=&quot;../language/new&quot;&gt;新しい式&lt;/a&gt;の次元</target>
        </trans-unit>
        <trans-unit id="6feead2453beb167dd07a007d56a26e056096b19" translate="yes" xml:space="preserve">
          <source>the dimensions in &lt;a href=&quot;new&quot;&gt;new-expressions&lt;/a&gt; other than the first</source>
          <target state="translated">最初以外の&lt;a href=&quot;new&quot;&gt;新しい式&lt;/a&gt;の次元</target>
        </trans-unit>
        <trans-unit id="842131b78dd7f7a8b75a47dd540b4f2fa1ea714c" translate="yes" xml:space="preserve">
          <source>the directory options used at construction (accessible with &lt;a href=&quot;recursive_directory_iterator/options&quot;&gt;&lt;code&gt;options()&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">構築時に使用されるディレクトリオプション（&lt;a href=&quot;recursive_directory_iterator/options&quot;&gt; &lt;code&gt;options()&lt;/code&gt; で&lt;/a&gt;アクセス可能）</target>
        </trans-unit>
        <trans-unit id="750186f6c24f2a572e24c610bb21efab83be1437" translate="yes" xml:space="preserve">
          <source>the distribution parameter set</source>
          <target state="translated">分布パラメータ集合</target>
        </trans-unit>
        <trans-unit id="f8d550f1bee023fd02f919e04f15289bb0be031f" translate="yes" xml:space="preserve">
          <source>the duration argument for mixed-argument operators</source>
          <target state="translated">混合引数演算子の持続時間引数</target>
        </trans-unit>
        <trans-unit id="c0cc6d78d998079eeecc367221d620111a6363e1" translate="yes" xml:space="preserve">
          <source>the effect of A</source>
          <target state="translated">アの効果</target>
        </trans-unit>
        <trans-unit id="5042ee92b8c844269011e15f7e4be548f9998b9f" translate="yes" xml:space="preserve">
          <source>the element that should appear at the beginning of the rotated range</source>
          <target state="translated">回転範囲の先頭に表示される要素</target>
        </trans-unit>
        <trans-unit id="591984b460a8de097e1324f332a8318e9b1954ca" translate="yes" xml:space="preserve">
          <source>the element to transfer from &lt;code&gt;other&lt;/code&gt; to &lt;code&gt;*this&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;other&lt;/code&gt; から &lt;code&gt;*this&lt;/code&gt; に転送する要素</target>
        </trans-unit>
        <trans-unit id="83998378592fa1c021b48f206a8fa622873ec249" translate="yes" xml:space="preserve">
          <source>the encoding is not state-dependent, no termination sequence necessary</source>
          <target state="translated">エンコーディングは状態に依存しないので、終端シーケンスは必要ありません。</target>
        </trans-unit>
        <trans-unit id="bee8591b8a42bd18b54a8566f845f59e3d7ef5be" translate="yes" xml:space="preserve">
          <source>the end of the first sorted range and the beginning of the second</source>
          <target state="translated">最初のソートされた範囲の終わりと、2番目の範囲の始まりを表す</target>
        </trans-unit>
        <trans-unit id="9ac8349ca73f2ef41b87c96e6a983ceeca36e93e" translate="yes" xml:space="preserve">
          <source>the end of the matching sequence</source>
          <target state="translated">末尾</target>
        </trans-unit>
        <trans-unit id="852c90b0f545c154b844801847e99d8a383de135" translate="yes" xml:space="preserve">
          <source>the end of the original range</source>
          <target state="translated">本末転倒</target>
        </trans-unit>
        <trans-unit id="56df37a8afc91357fcaeffa9a4a9c266488ac92f" translate="yes" xml:space="preserve">
          <source>the end of the second sorted range</source>
          <target state="translated">二番目のソートされた範囲の終わり</target>
        </trans-unit>
        <trans-unit id="cab1f9e523739d81d87f5af49458f067da43f27d" translate="yes" xml:space="preserve">
          <source>the end of the sequence that matched &lt;a href=&quot;http://en.cppreference.com/w/cpp/regex/ecmascript#Sub-expressions&quot;&gt;marked sub-expression&lt;/a&gt; n, or &lt;code&gt;last&lt;/code&gt; if the subexpression did not participate in the match</source>
          <target state="translated">&lt;a href=&quot;http://en.cppreference.com/w/cpp/regex/ecmascript#Sub-expressions&quot;&gt;マークされた部分式&lt;/a&gt; n と一致したシーケンスの終わり、または部分式が一致に参加しなかった場合は &lt;code&gt;last&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6a4380845a8f832c0e5f1409d83cb0b82e17300c" translate="yes" xml:space="preserve">
          <source>the end of the stream is reached, in which case &lt;code&gt;failbit&lt;/code&gt; and &lt;code&gt;eofbit&lt;/code&gt; are set and if the stream is on for exceptions on one of these bits, &lt;a href=&quot;../io/ios_base/failure&quot;&gt;&lt;code&gt;ios_base::failure&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">ストリームの終わりに達した場合。この場合、 &lt;code&gt;failbit&lt;/code&gt; と &lt;code&gt;eofbit&lt;/code&gt; が設定され、これらのビットのいずれかで例外が発生してストリームがオンの場合、&lt;a href=&quot;../io/ios_base/failure&quot;&gt; &lt;code&gt;ios_base::failure&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="23159a37a31a42a5b3f3ef42db54e7f667fb16fe" translate="yes" xml:space="preserve">
          <source>the end-of-file condition occurs in the stream &lt;code&gt;is&lt;/code&gt;</source>
          <target state="translated">ファイルの終わり条件がストリームで発生した &lt;code&gt;is&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="65577a588b56d42c17280bd68be2d124ca96af22" translate="yes" xml:space="preserve">
          <source>the ending of a stream</source>
          <target state="translated">流れの終着点</target>
        </trans-unit>
        <trans-unit id="1c0fbdc1aac62fdc58b11cddc41390e832254abf" translate="yes" xml:space="preserve">
          <source>the entire controlling expression of &lt;a href=&quot;../../language/if&quot;&gt;if&lt;/a&gt;, &lt;a href=&quot;../../language/switch&quot;&gt;switch&lt;/a&gt;, &lt;a href=&quot;../../language/while&quot;&gt;while&lt;/a&gt;, &lt;a href=&quot;../../language/do&quot;&gt;do-while&lt;/a&gt;, &lt;a href=&quot;../../language/for&quot;&gt;for&lt;/a&gt;</source>
          <target state="translated">発現制御全体の&lt;a href=&quot;../../language/if&quot;&gt;場合は&lt;/a&gt;、&lt;a href=&quot;../../language/switch&quot;&gt;スイッチ&lt;/a&gt;、&lt;a href=&quot;../../language/while&quot;&gt;一方で&lt;/a&gt;、&lt;a href=&quot;../../language/do&quot;&gt;やる-しばらく&lt;/a&gt;、&lt;a href=&quot;../../language/for&quot;&gt; forの&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="61670eee64b36dbc487d61f1aeca5c8d1dfae2e0" translate="yes" xml:space="preserve">
          <source>the entire expression of an &lt;a href=&quot;../../language/statements#Expression_statements&quot;&gt;expression statement&lt;/a&gt; (possibly cast to &lt;code&gt;void&lt;/code&gt;).</source>
          <target state="translated">&lt;a href=&quot;../../language/statements#Expression_statements&quot;&gt;式ステートメント&lt;/a&gt;の式全体（おそらく &lt;code&gt;void&lt;/code&gt; にキャストされます））。</target>
        </trans-unit>
        <trans-unit id="d0aafbbd26fd3bb0a569c0c0d0bbaf578f773898" translate="yes" xml:space="preserve">
          <source>the enumeration is either scoped or unscoped with underlying type fixed</source>
          <target state="translated">列挙がスコープされているか、スコープされていないかのどちらかで、基礎となる型が固定されています。</target>
        </trans-unit>
        <trans-unit id="712a1de6e6839ecedf7580cbfccc34a2da4b8c09" translate="yes" xml:space="preserve">
          <source>the exception object to rethrow</source>
          <target state="translated">投げなおす例外オブジェクト</target>
        </trans-unit>
        <trans-unit id="b3e46b39ec690a4b51561c418e126e32c13dbf22" translate="yes" xml:space="preserve">
          <source>the exception object to throw</source>
          <target state="translated">投げられる例外オブジェクト</target>
        </trans-unit>
        <trans-unit id="a9b46f6e327cb2184928be139e8d86fe4d114fac" translate="yes" xml:space="preserve">
          <source>the exception specification exception on the lambda-expression applies to the function-call operator or operator template.</source>
          <target state="translated">ラムダ式の例外指定例外は、関数呼び出し演算子または演算子テンプレートに適用されます。</target>
        </trans-unit>
        <trans-unit id="166ac11bef32f64e817c576c817f380253c469a5" translate="yes" xml:space="preserve">
          <source>the exception thrown when invoking an empty &lt;code&gt;&lt;a href=&quot;../function&quot;&gt;std::function&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">空の &lt;code&gt;&lt;a href=&quot;../function&quot;&gt;std::function&lt;/a&gt;&lt;/code&gt; を呼び出すときにスローされる例外</target>
        </trans-unit>
        <trans-unit id="8de3e4e306a46791d16415cf7e27fb927d9986a7" translate="yes" xml:space="preserve">
          <source>the exception thrown when invoking an empty &lt;code&gt;&lt;a href=&quot;../utility/functional/function&quot;&gt;std::function&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">空の &lt;code&gt;&lt;a href=&quot;../utility/functional/function&quot;&gt;std::function&lt;/a&gt;&lt;/code&gt; を呼び出すときにスローされる例外</target>
        </trans-unit>
        <trans-unit id="ffa625a201a7c3b32a47fe3548281cccfb070dd8" translate="yes" xml:space="preserve">
          <source>the exception thrown when invoking an empty &lt;code&gt;&lt;a href=&quot;functional/function&quot;&gt;std::function&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">空の &lt;code&gt;&lt;a href=&quot;functional/function&quot;&gt;std::function&lt;/a&gt;&lt;/code&gt; を呼び出すときにスローされる例外</target>
        </trans-unit>
        <trans-unit id="c03d09842e27d89a58aa7e2bfe41b8c19f5bbb5e" translate="yes" xml:space="preserve">
          <source>the exception thrown when invoking an empty &lt;code&gt;std::function&lt;/code&gt;</source>
          <target state="translated">空を呼び出すときにスローされる例外 &lt;code&gt;std::function&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="47731fd5e216208d87ccce2a065380190b7b908c" translate="yes" xml:space="preserve">
          <source>the execution policy to use. See &lt;a href=&quot;../algorithm/execution_policy_tag_t&quot;&gt;execution policy&lt;/a&gt; for details.</source>
          <target state="translated">使用する実行ポリシー。詳細については、&lt;a href=&quot;../algorithm/execution_policy_tag_t&quot;&gt;実行ポリシー&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="964f72a692474490d8a9462e1774f815763d0d78" translate="yes" xml:space="preserve">
          <source>the execution policy to use. See &lt;a href=&quot;execution_policy_tag_t&quot;&gt;execution policy&lt;/a&gt; for details.</source>
          <target state="translated">使用する実行ポリシー。詳細については、&lt;a href=&quot;execution_policy_tag_t&quot;&gt;実行ポリシー&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="811c5615c1fcf0d57355a133904809e50ed8935f" translate="yes" xml:space="preserve">
          <source>the expression &lt;code&gt;E1 = {E2}&lt;/code&gt; is equivalent to &lt;code&gt;E1 = T{E2}&lt;/code&gt;, where &lt;code&gt;T&lt;/code&gt; is the type of &lt;code&gt;E1&lt;/code&gt;.</source>
          <target state="translated">式 &lt;code&gt;E1 = {E2}&lt;/code&gt; は &lt;code&gt;E1 = T{E2}&lt;/code&gt; {E2}と同等です。ここで、 &lt;code&gt;T&lt;/code&gt; は &lt;code&gt;E1&lt;/code&gt; のタイプです。</target>
        </trans-unit>
        <trans-unit id="ef3213f752d5b605e22845b6fe557f211ad2a29d" translate="yes" xml:space="preserve">
          <source>the expression &lt;code&gt;E1 = {}&lt;/code&gt; is equivalent to &lt;code&gt;E1 = T{}&lt;/code&gt;, where &lt;code&gt;T&lt;/code&gt; is the type of &lt;code&gt;E1&lt;/code&gt;.</source>
          <target state="translated">式 &lt;code&gt;E1 = {}&lt;/code&gt; は &lt;code&gt;E1 = T{}&lt;/code&gt; {}と同等です。ここで、 &lt;code&gt;T&lt;/code&gt; は &lt;code&gt;E1&lt;/code&gt; のタイプです。</target>
        </trans-unit>
        <trans-unit id="06cdeb920f440dbaa174e75a087dfa78451740ef" translate="yes" xml:space="preserve">
          <source>the expression contains an invalid back reference</source>
          <target state="translated">式に無効な後方参照が含まれています。</target>
        </trans-unit>
        <trans-unit id="51b202cdef8263a5bf9ef4ec14d619698d53f00a" translate="yes" xml:space="preserve">
          <source>the expression contains an invalid character class name</source>
          <target state="translated">式に無効な文字クラス名が含まれています。</target>
        </trans-unit>
        <trans-unit id="c20a366daffbb3fa3170ce96b71d75799f1a5964" translate="yes" xml:space="preserve">
          <source>the expression contains an invalid character range (e.g. [b-a])</source>
          <target state="translated">式に無効な文字範囲が含まれている (例:[b-a]など)</target>
        </trans-unit>
        <trans-unit id="952a969045fd4142441246de9115d8a7d0d5bf90" translate="yes" xml:space="preserve">
          <source>the expression contains an invalid collating element name</source>
          <target state="translated">式に無効な照合要素名が含まれています。</target>
        </trans-unit>
        <trans-unit id="d3d2d9ed3735778d383ab0c39329af024b481682" translate="yes" xml:space="preserve">
          <source>the expression contains an invalid escaped character or a trailing escape</source>
          <target state="translated">式に無効なエスケープ文字または末尾のエスケープが含まれています。</target>
        </trans-unit>
        <trans-unit id="2faf74e1993cb0eb4c30d68cca7d7250acc13c88" translate="yes" xml:space="preserve">
          <source>the expression contains an invalid range in a {} expression</source>
          <target state="translated">式に無効な範囲が含まれています。</target>
        </trans-unit>
        <trans-unit id="2a569b49d6035f2ae68b91d50f196cb17193a4db" translate="yes" xml:space="preserve">
          <source>the expression contains mismatched curly braces ('{' and '}')</source>
          <target state="translated">式に不一致の中括弧 ('{' と '}')が含まれています。</target>
        </trans-unit>
        <trans-unit id="82b66f65ccca2fbd65d3fc92504c174b7fea9d90" translate="yes" xml:space="preserve">
          <source>the expression contains mismatched parentheses ('(' and ')')</source>
          <target state="translated">式に不一致の括弧が含まれています ('(' と ')')</target>
        </trans-unit>
        <trans-unit id="87cf6ed0c64e0b634f44c571b7584681455cc692" translate="yes" xml:space="preserve">
          <source>the expression contains mismatched square brackets ('[' and ']')</source>
          <target state="translated">式に不一致の角括弧が含まれています ('['と']')</target>
        </trans-unit>
        <trans-unit id="adb6ee2e21a71655ce3ce1d3878df29511f9247b" translate="yes" xml:space="preserve">
          <source>the expression in a &lt;a href=&quot;noexcept_spec&quot;&gt;&lt;code&gt;noexcept&lt;/code&gt;&lt;/a&gt; specifier;</source>
          <target state="translated">&lt;a href=&quot;noexcept_spec&quot;&gt; &lt;code&gt;noexcept&lt;/code&gt; &lt;/a&gt;指定子内の式。</target>
        </trans-unit>
        <trans-unit id="98a32d22ef81936e3d7da9c0afbb3fbd941f1e06" translate="yes" xml:space="preserve">
          <source>the expression in an &lt;a href=&quot;explicit&quot;&gt;&lt;code&gt;explicit&lt;/code&gt;&lt;/a&gt; specifier;</source>
          <target state="translated">&lt;a href=&quot;explicit&quot;&gt; &lt;code&gt;explicit&lt;/code&gt; &lt;/a&gt;指定子での式。</target>
        </trans-unit>
        <trans-unit id="04be1273329b7f8895a0a3f57fd9b981d8d77189" translate="yes" xml:space="preserve">
          <source>the expression is of class type and its value after user-defined conversion function and before the &lt;a href=&quot;implicit_cast&quot;&gt;second standard conversion&lt;/a&gt; is negative;</source>
          <target state="translated">式はクラス型で、ユーザー定義の変換関数の後、&lt;a href=&quot;implicit_cast&quot;&gt;2番目の標準変換&lt;/a&gt;が負になる前の値。</target>
        </trans-unit>
        <trans-unit id="52a234301e8def2e354211af3328de3fc7b44229" translate="yes" xml:space="preserve">
          <source>the expression is of non-class type and its value before conversion to &lt;code&gt;&lt;a href=&quot;../types/size_t&quot;&gt;std::size_t&lt;/a&gt;&lt;/code&gt; is negative;</source>
          <target state="translated">式は非クラス型であり、 &lt;code&gt;&lt;a href=&quot;../types/size_t&quot;&gt;std::size_t&lt;/a&gt;&lt;/code&gt; への変換前の値は負です。</target>
        </trans-unit>
        <trans-unit id="4eb1cc55582965121177b53cf384afd98f146a46" translate="yes" xml:space="preserve">
          <source>the expression is well-formed in unevaluated context</source>
          <target state="translated">式は評価されていないコンテキストではよくできています。</target>
        </trans-unit>
        <trans-unit id="35e6b41245f613f58cc65e5e4cf96556b7a1ae0c" translate="yes" xml:space="preserve">
          <source>the expression whose return value is to be removed from a dependency tree</source>
          <target state="translated">戻り値が依存関係ツリーから削除される式</target>
        </trans-unit>
        <trans-unit id="ade8e4e6b250d9d7725be12bd92ac7bad793b209" translate="yes" xml:space="preserve">
          <source>the expressions in their requires-clauses that follow the function declarators, if present, are equivalent</source>
          <target state="translated">は、関数宣言子に続くrequire-clausの式があれば、それと等価です。</target>
        </trans-unit>
        <trans-unit id="fb2eec564dcb61227fd0f028b7a67f89d95b9a57" translate="yes" xml:space="preserve">
          <source>the expressions in their requires-clauses that follow the template parameter lists, if present, are equivalent</source>
          <target state="translated">は、テンプレートのパラメータリストに続くrequire-clausの中の式が存在する場合には、等価です。</target>
        </trans-unit>
        <trans-unit id="c76eec307a091575ea680e9e56f9b5400338cf81" translate="yes" xml:space="preserve">
          <source>the expressions involving template parameters in their return types and parameter lists are</source>
          <target state="translated">戻り値の型とパラメータリストにテンプレートパラメータを含む式は</target>
        </trans-unit>
        <trans-unit id="364fae8b7cdfc970284e3be9ada0faa629fc9fdf" translate="yes" xml:space="preserve">
          <source>the extension to replace with</source>
          <target state="translated">に置き換える拡張子</target>
        </trans-unit>
        <trans-unit id="a9f88fb6a095c4a22f8983e65d1fd605a29a8c49" translate="yes" xml:space="preserve">
          <source>the facet index type: each facet class must declare or inherit a public static member of this type</source>
          <target state="translated">ファセットインデックス型:各ファセットクラスは、この型のパブリックスタティックメンバを宣言するか継承しなければなりません。</target>
        </trans-unit>
        <trans-unit id="d869d4ac362068b4bbf3966befe76be3d413c52b" translate="yes" xml:space="preserve">
          <source>the file exists but its type could not be determined</source>
          <target state="translated">ファイルは存在するが、そのタイプを決定できませんでした。</target>
        </trans-unit>
        <trans-unit id="0de5ebbab94fc885c54d41b77f0aca5cc14a7819" translate="yes" xml:space="preserve">
          <source>the file name to open; &lt;code&gt;s&lt;/code&gt; must point to a null-terminated string</source>
          <target state="translated">開くファイル名。 &lt;code&gt;s&lt;/code&gt; はnullで終わる文字列を指す必要があります</target>
        </trans-unit>
        <trans-unit id="e297ef2181d227a54e027cacde0002575f4bc342" translate="yes" xml:space="preserve">
          <source>the file opening mode, a binary OR of the &lt;code&gt;&lt;a href=&quot;../ios_base&quot;&gt;std::ios_base&lt;/a&gt;&lt;/code&gt; modes</source>
          <target state="translated">ファイルを開くモード、 &lt;code&gt;&lt;a href=&quot;../ios_base&quot;&gt;std::ios_base&lt;/a&gt;&lt;/code&gt; モードのバイナリOR</target>
        </trans-unit>
        <trans-unit id="6dd58c8832798e05ccae57b34f4724632cdb1710" translate="yes" xml:space="preserve">
          <source>the file stream to check</source>
          <target state="translated">ファイルストリームをチェックする</target>
        </trans-unit>
        <trans-unit id="d0dc9ae51de96b882c0136ea78d000718e6988d9" translate="yes" xml:space="preserve">
          <source>the file stream to close</source>
          <target state="translated">ファイルストリームを閉じる</target>
        </trans-unit>
        <trans-unit id="466ce090a6ed700cc6cd657d99f3986aad3315f3" translate="yes" xml:space="preserve">
          <source>the file stream to modify</source>
          <target state="translated">変更するファイルストリーム</target>
        </trans-unit>
        <trans-unit id="3b605eb2486bc00069d3b6c24385338a253c5b9b" translate="yes" xml:space="preserve">
          <source>the file stream to set the buffer to</source>
          <target state="translated">にバッファを設定するためにファイルストリームを</target>
        </trans-unit>
        <trans-unit id="59b09ecdf963c1677b7f106968a997be3647a06b" translate="yes" xml:space="preserve">
          <source>the file stream to set the buffer to.</source>
          <target state="translated">バッファを設定するファイルストリームを指定します。</target>
        </trans-unit>
        <trans-unit id="f602341be14b79f94dfdaf59c3cf43f624a531f3" translate="yes" xml:space="preserve">
          <source>the file stream to write out</source>
          <target state="translated">書き出すファイルストリーム</target>
        </trans-unit>
        <trans-unit id="38acc15862c5759b50b5cc12258b30e0a205afde" translate="yes" xml:space="preserve">
          <source>the file to reset the error flags for</source>
          <target state="translated">のエラーフラグをリセットするために</target>
        </trans-unit>
        <trans-unit id="0042635aad2105cb513c5b0abfc760905957951a" translate="yes" xml:space="preserve">
          <source>the fill character (see &lt;a href=&quot;basic_ios/fill&quot;&gt;&lt;code&gt;fill()&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">フィル文字（&lt;a href=&quot;basic_ios/fill&quot;&gt; &lt;code&gt;fill()&lt;/code&gt; を&lt;/a&gt;参照）</target>
        </trans-unit>
        <trans-unit id="b4bcbb25990e769fc557ad3f81856e2ed58e7faa" translate="yes" xml:space="preserve">
          <source>the fill character before the call to the function.</source>
          <target state="translated">関数を呼び出す前の塗りつぶし文字を指定します。</target>
        </trans-unit>
        <trans-unit id="cc8fa6ff9c0eec14b909b2114d76a017fb4f1a18" translate="yes" xml:space="preserve">
          <source>the first element can be removed using &lt;code&gt;&lt;a href=&quot;pop_heap&quot;&gt;std::pop_heap&lt;/a&gt;()&lt;/code&gt;</source>
          <target state="translated">最初の要素は &lt;code&gt;&lt;a href=&quot;pop_heap&quot;&gt;std::pop_heap&lt;/a&gt;()&lt;/code&gt; （）を使用して削除できます</target>
        </trans-unit>
        <trans-unit id="2a44c415efe23ee524da894f3c1117dd06d89b0d" translate="yes" xml:space="preserve">
          <source>the first element can be removed using &lt;code&gt;std::pop_heap()&lt;/code&gt;</source>
          <target state="translated">最初の要素は &lt;code&gt;std::pop_heap()&lt;/code&gt; を使用して削除できます</target>
        </trans-unit>
        <trans-unit id="fb325805ac50ea41a7301055de704424504b9570" translate="yes" xml:space="preserve">
          <source>the first function template has the same template parameters as the first partial specialization and has just one function parameter, whose type is a class template specialization with all the template arguments from the first partial specialization</source>
          <target state="translated">最初の関数テンプレートは,最初の部分特殊化と同じテンプレートパラメータを持ち,1つの関数パラメータだけを持ちます.</target>
        </trans-unit>
        <trans-unit id="f1b2ecc1c6e7c53935d0a6a1ca989d3028303f85" translate="yes" xml:space="preserve">
          <source>the first input sorted range</source>
          <target state="translated">最初の入力ソート範囲</target>
        </trans-unit>
        <trans-unit id="17359d629ff2b1f92cad69d46d67af31aed807fb" translate="yes" xml:space="preserve">
          <source>the first of the characters returned by moneypunct::positive_sign or moneypunct::negative_sign is required</source>
          <target state="translated">moneypunct::positive_sign または moneypunct::negative_sign が返す文字の最初の文字が必要です。</target>
        </trans-unit>
        <trans-unit id="8d03830d66dd51928097577c96a0b2c037420113" translate="yes" xml:space="preserve">
          <source>the first operand of the conditional operator &lt;code&gt;?:&lt;/code&gt;;</source>
          <target state="translated">条件演算子の第1オペランド &lt;code&gt;?:&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="2ae40b367295f62dcfe4cde815d6b8e29532a3ec" translate="yes" xml:space="preserve">
          <source>the first range of elements</source>
          <target state="translated">第一要素範囲</target>
        </trans-unit>
        <trans-unit id="78f05bf8fc62a5ae6ab616ebe364e81362ce0ee9" translate="yes" xml:space="preserve">
          <source>the first range of elements to examine</source>
          <target state="translated">第一の検討対象となる要素</target>
        </trans-unit>
        <trans-unit id="2db380634b53df4ffbb9371c9cd50ee5f4514953" translate="yes" xml:space="preserve">
          <source>the first range of elements to merge</source>
          <target state="translated">マージする最初の要素範囲</target>
        </trans-unit>
        <trans-unit id="ee8742ff1feee1c55b7144e8bd29e7a8be76fa8e" translate="yes" xml:space="preserve">
          <source>the first range of elements to swap</source>
          <target state="translated">スワップする要素の最初の範囲</target>
        </trans-unit>
        <trans-unit id="43a651cc3bb73ad85503105f0681938d426a0904" translate="yes" xml:space="preserve">
          <source>the first range of elements to transform</source>
          <target state="translated">変換する要素の最初の範囲</target>
        </trans-unit>
        <trans-unit id="a6e51f74620268790b7d93020c412914b67801d9" translate="yes" xml:space="preserve">
          <source>the first range of the elements</source>
          <target state="translated">要素の第一範囲</target>
        </trans-unit>
        <trans-unit id="c74304e128aa539f93ea09582d01a85412f1eba2" translate="yes" xml:space="preserve">
          <source>the first range of the elements to compare</source>
          <target state="translated">比較する要素の最初の範囲</target>
        </trans-unit>
        <trans-unit id="6cfdfc755a62e38a494207123223b015f5dac4ce" translate="yes" xml:space="preserve">
          <source>the first read is performed in the constructor</source>
          <target state="translated">最初の読み込みはコンストラクタ</target>
        </trans-unit>
        <trans-unit id="750444e995e4648829554d9bfda1634a52f8256c" translate="yes" xml:space="preserve">
          <source>the first read may be deferred to the first dereferencing</source>
          <target state="translated">は、最初の読み取りを最初の参照解除に延期することができます。</target>
        </trans-unit>
        <trans-unit id="012f8520848bef5d35cccdec3d8ff29884e0eb8f" translate="yes" xml:space="preserve">
          <source>the first sorted range of elements</source>
          <target state="translated">最初にソートされた要素の範囲</target>
        </trans-unit>
        <trans-unit id="32241fb88e324591aa508d7b4993a9345b9fcdc3" translate="yes" xml:space="preserve">
          <source>the first string to compare</source>
          <target state="translated">比較する最初の文字列</target>
        </trans-unit>
        <trans-unit id="3293e8d160144362f2dc71f30c7ad22aff323cbe" translate="yes" xml:space="preserve">
          <source>the first type &lt;code&gt;Bi&lt;/code&gt; in &lt;code&gt;B1, ..., BN&lt;/code&gt; for which &lt;code&gt;bool(Bi::value) == false&lt;/code&gt;, or &lt;code&gt;BN&lt;/code&gt; if there is no such type.</source>
          <target state="translated">第一のタイプ &lt;code&gt;Bi&lt;/code&gt; における &lt;code&gt;B1, ..., BN&lt;/code&gt; のための &lt;code&gt;bool(Bi::value) == false&lt;/code&gt; 、または &lt;code&gt;BN&lt;/code&gt; そのようなタイプが存在しない場合。</target>
        </trans-unit>
        <trans-unit id="525592b06f79c8b66ff704602e61a6e9682c57a2" translate="yes" xml:space="preserve">
          <source>the first type &lt;code&gt;Bi&lt;/code&gt; in &lt;code&gt;B1, ..., BN&lt;/code&gt; for which &lt;code&gt;bool(Bi::value) == true&lt;/code&gt;, or &lt;code&gt;BN&lt;/code&gt; if there is no such type.</source>
          <target state="translated">第一のタイプ &lt;code&gt;Bi&lt;/code&gt; で &lt;code&gt;B1, ..., BN&lt;/code&gt; れる &lt;code&gt;bool(Bi::value) == true&lt;/code&gt; 、又は &lt;code&gt;BN&lt;/code&gt; そのような型が存在しない場合。</target>
        </trans-unit>
        <trans-unit id="c9853d6ceeb5f5217d2d31d976e5005ce614a656" translate="yes" xml:space="preserve">
          <source>the following are true:</source>
          <target state="translated">といったことが当てはまります。</target>
        </trans-unit>
        <trans-unit id="300931c9ba9d009da43265b906ddd9348062f553" translate="yes" xml:space="preserve">
          <source>the following expression is well-formed:</source>
          <target state="translated">次の式がよくできています。</target>
        </trans-unit>
        <trans-unit id="e42bcea2b10d46b2b6c266629ed575f89091ded8" translate="yes" xml:space="preserve">
          <source>the following expressions are valid and have their specified effects:</source>
          <target state="translated">以下の式が有効で、指定された効果があります。</target>
        </trans-unit>
        <trans-unit id="09562c6fc3f14ce9429998cad7912fd51f705762" translate="yes" xml:space="preserve">
          <source>the format contains variable items (week day, Julian day, etc), or this function is not implemented</source>
          <target state="translated">フォーマットに変数項目 (曜日、ユリウス日など)が含まれているか、この関数が実装されていません。</target>
        </trans-unit>
        <trans-unit id="78801c121c35fee319a658d862d72538c902a6b3" translate="yes" xml:space="preserve">
          <source>the formatting flags before the call to the function.</source>
          <target state="translated">関数を呼び出す前に書式設定フラグを指定します。</target>
        </trans-unit>
        <trans-unit id="6382330770e2431a8a4ed6c0b459c5c9300113b6" translate="yes" xml:space="preserve">
          <source>the function &lt;code&gt;A::f&lt;/code&gt; is not a function template, but is still considered to be templated.</source>
          <target state="translated">関数 &lt;code&gt;A::f&lt;/code&gt; は関数テンプレートではありませんが、テンプレート化されていると見なされます。</target>
        </trans-unit>
        <trans-unit id="2430dabaca237f527452ee9dfb5952987c81fbdf" translate="yes" xml:space="preserve">
          <source>the function body must &lt;b&gt;not&lt;/b&gt; contain:</source>
          <target state="translated">関数本体には以下&lt;b&gt;を&lt;/b&gt;含めることは&lt;b&gt;でき&lt;/b&gt;ませ&lt;b&gt;ん&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="a0eab6b839a360e6787dca35602898a04f5fdb29" translate="yes" xml:space="preserve">
          <source>the function body must be either deleted or defaulted or contain only the following:</source>
          <target state="translated">関数本体は削除されるかデフォルトになるか、以下の内容のみを含まなければなりません。</target>
        </trans-unit>
        <trans-unit id="98ee5e274eb1572c118aa4c1c7a598df05420804" translate="yes" xml:space="preserve">
          <source>the function is &lt;a href=&quot;definition#ODR-use&quot;&gt;odr-used&lt;/a&gt;</source>
          <target state="translated">関数が&lt;a href=&quot;definition#ODR-use&quot;&gt;odrで使用されている&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="19851cd9f4f3bc14ba1d1b3de2194ef0745345b3" translate="yes" xml:space="preserve">
          <source>the function is named by an id-expression (either directly or as part of member access or pointer-to-member access expression), the set of potential exceptions of the named function is added to the list.</source>
          <target state="translated">関数がid式によって命名された場合(直接、またはメンバーアクセス式またはポインタからメンバーへのアクセス式の一部として)、命名された関数の潜在的な例外のセットがリストに追加されます。</target>
        </trans-unit>
        <trans-unit id="0690949a279da8f821483a095168addbde1eb7ab" translate="yes" xml:space="preserve">
          <source>the function object used to initialize &lt;code&gt;*this&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;*this&lt;/code&gt; の初期化に使用される関数オブジェクト</target>
        </trans-unit>
        <trans-unit id="8d518998941d9612e534edc144379527f624814b" translate="yes" xml:space="preserve">
          <source>the function parameters of &lt;code&gt;Fi&lt;/code&gt; are the constructor parameters</source>
          <target state="translated">&lt;code&gt;Fi&lt;/code&gt; の関数パラメーターはコンストラクターパラメーターです。</target>
        </trans-unit>
        <trans-unit id="308a8e686ef4e0027a01fbe49b5957504450ab14" translate="yes" xml:space="preserve">
          <source>the function which will be called on event, supplied as a function pointer of type &lt;a href=&quot;event_callback&quot;&gt;event_callback&lt;/a&gt;</source>
          <target state="translated">イベント時に呼び出される関数。タイプ&lt;a href=&quot;event_callback&quot;&gt;event_callbackの&lt;/a&gt;関数ポインターとして提供されます。</target>
        </trans-unit>
        <trans-unit id="171b23f57db777e41c78f27b69b3b99a619cf155" translate="yes" xml:space="preserve">
          <source>the function would be odr-used but appears in an unevaluated operand</source>
          <target state="translated">関数はODRが使用されますが、評価されていないオペランドに現れます。</target>
        </trans-unit>
        <trans-unit id="f1579b786d4fef30ea731f3794a637183b1d538e" translate="yes" xml:space="preserve">
          <source>the glvalue has the type &lt;code&gt;&lt;a href=&quot;../types/nullptr_t&quot;&gt;std::nullptr_t&lt;/a&gt;&lt;/code&gt;: in this case the resulting prvalue is the null pointer constant &lt;code&gt;nullptr&lt;/code&gt;.</source>
          <target state="translated">glvalueの型は &lt;code&gt;&lt;a href=&quot;../types/nullptr_t&quot;&gt;std::nullptr_t&lt;/a&gt;&lt;/code&gt; です。この場合、結果のprvalueはnullポインター定数 &lt;code&gt;nullptr&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="5a3d33714cdcab8a6577daee1a590f17287f6f00" translate="yes" xml:space="preserve">
          <source>the greatest lower bound on the values potentially returned by &lt;code&gt;x&lt;/code&gt;&amp;rsquo;s &lt;code&gt;operator()&lt;/code&gt;, as determined by the current values of &lt;code&gt;x&lt;/code&gt;&amp;rsquo;s parameters</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; のパラメータの現在の値によって決定される、 &lt;code&gt;x&lt;/code&gt; の &lt;code&gt;operator()&lt;/code&gt; によって返される可能性のある値の最大の下限</target>
        </trans-unit>
        <trans-unit id="b4c0421bbc79d95f928cca4c832ba728f7dc4bef" translate="yes" xml:space="preserve">
          <source>the hash value of the key</source>
          <target state="translated">キーのハッシュ値</target>
        </trans-unit>
        <trans-unit id="fcddf85db5591e9444ad918bf9a4ff76f0ddeacb" translate="yes" xml:space="preserve">
          <source>the hint, logarithmic in the size of the container otherwise.</source>
          <target state="translated">ヒント、そうでない場合はコンテナのサイズを対数で表します。</target>
        </trans-unit>
        <trans-unit id="b2b50fb9e708fbc8a19b4658236defad616aedf2" translate="yes" xml:space="preserve">
          <source>the identifier to use as the ud-suffix for the user-defined literals that will call this function. Must begin with the underscore &lt;code&gt;_&lt;/code&gt;: the suffixes that do not begin with the underscore are reserved for the literal operators provided by the standard library.</source>
          <target state="translated">この関数を呼び出すユーザー定義のリテラルのud-suffixとして使用する識別子。アンダースコア &lt;code&gt;_&lt;/code&gt; で始まる必要があります。アンダースコアで始まらない接尾辞は、標準ライブラリが提供するリテラル演算子用に予約されています。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
