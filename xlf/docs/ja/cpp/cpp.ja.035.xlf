<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="cpp">
    <body>
      <group id="cpp">
        <trans-unit id="8d07f80e7dbfc97b1156074a7866a7a793515243" translate="yes" xml:space="preserve">
          <source>standard error</source>
          <target state="translated">標準誤差</target>
        </trans-unit>
        <trans-unit id="e5686157368d2df58773beb644a610f517771b40" translate="yes" xml:space="preserve">
          <source>standard error code</source>
          <target state="translated">標準エラーコード</target>
        </trans-unit>
        <trans-unit id="70e45f56eb33207018c8e5883fc6a4f221213f4d" translate="yes" xml:space="preserve">
          <source>standard input</source>
          <target state="translated">標準入力</target>
        </trans-unit>
        <trans-unit id="d7c0c6c5d69fa32ec9f353be38a82385967941aa" translate="yes" xml:space="preserve">
          <source>standard layout type</source>
          <target state="translated">標準配置型</target>
        </trans-unit>
        <trans-unit id="6181e44aa8486f9ac40310fd60c5db0b0797fa3f" translate="yes" xml:space="preserve">
          <source>standard library undefined behavior was required to be diagnosed</source>
          <target state="translated">標準ライブラリの未定義動作を診断する必要があった</target>
        </trans-unit>
        <trans-unit id="cb928405ffae1be03b357040aa4ee2480642c374" translate="yes" xml:space="preserve">
          <source>standard log</source>
          <target state="translated">標準対数</target>
        </trans-unit>
        <trans-unit id="3274795ac31bb184ae0b1014a3522405cf2ddc99" translate="yes" xml:space="preserve">
          <source>standard macros and typedefs</source>
          <target state="translated">標準マクロと型定義子</target>
        </trans-unit>
        <trans-unit id="4b3d8188f850a8011c324a9ccfa32a4ba9050624" translate="yes" xml:space="preserve">
          <source>standard output</source>
          <target state="translated">標準出力</target>
        </trans-unit>
        <trans-unit id="10c11ef088dcb392743eeff45c7971d11ca69ace" translate="yes" xml:space="preserve">
          <source>standardized way to query properties of arithmetic types</source>
          <target state="translated">算術型のプロパティを問い合わせる標準化された方法</target>
        </trans-unit>
        <trans-unit id="2b020927d3c6eb407223a1baa3d6ce3597a3f88d" translate="yes" xml:space="preserve">
          <source>start</source>
          <target state="translated">start</target>
        </trans-unit>
        <trans-unit id="a80967234388da3e73d41f4d8a6888f4f877c661" translate="yes" xml:space="preserve">
          <source>start + (size-1)*stride</source>
          <target state="translated">スタート+(サイズ1)*歩幅</target>
        </trans-unit>
        <trans-unit id="f6480cab08ca47ff84222e5f34cdbd8fd2fddc0d" translate="yes" xml:space="preserve">
          <source>start + 0*stride</source>
          <target state="translated">スタート+0*ストライド</target>
        </trans-unit>
        <trans-unit id="cf34bede06e4c415ea5b9be8b6e1f1e07d745623" translate="yes" xml:space="preserve">
          <source>start + 1*stride</source>
          <target state="translated">スタート+1*ストライド</target>
        </trans-unit>
        <trans-unit id="7a3ae9ff08f747e4c9ca5ab6cf4a2c4d5d9ffbad" translate="yes" xml:space="preserve">
          <source>start of the substring that is going to be replaced</source>
          <target state="translated">置換される部分文字列の先頭</target>
        </trans-unit>
        <trans-unit id="88347a80bbaddb3869579152cb70ba25240a29ae" translate="yes" xml:space="preserve">
          <source>start of the substring to replace with</source>
          <target state="translated">で置換する部分文字列の先頭</target>
        </trans-unit>
        <trans-unit id="b673cdd176cc10019687caa863730100ce89ec0d" translate="yes" xml:space="preserve">
          <source>starting reference count</source>
          <target state="translated">開始基準数</target>
        </trans-unit>
        <trans-unit id="80d4f0d88fba984ff4f28f3ded1ecfdf95bd93f5" translate="yes" xml:space="preserve">
          <source>starts_with</source>
          <target state="translated">starts_with</target>
        </trans-unit>
        <trans-unit id="aa4a5f8125f234182e2dea92805afdfb747a86be" translate="yes" xml:space="preserve">
          <source>state</source>
          <target state="translated">state</target>
        </trans-unit>
        <trans-unit id="0d0efa81781b48ee47fb11739b1f18551b365447" translate="yes" xml:space="preserve">
          <source>state implies that all match results have been fully established.</source>
          <target state="translated">の状態は、すべてのマッチ結果が完全に確立されていることを意味します。</target>
        </trans-unit>
        <trans-unit id="2275af56a265eca1f40d6e58601c979402e6af72" translate="yes" xml:space="preserve">
          <source>state of the stream type</source>
          <target state="translated">ストリームタイプの状態</target>
        </trans-unit>
        <trans-unit id="bbb930cc426507ed3f6b7c343c75dd0e041494b7" translate="yes" xml:space="preserve">
          <source>statement</source>
          <target state="translated">statement</target>
        </trans-unit>
        <trans-unit id="c629d25f09f8410f5a8adead4ab8224eba3915e6" translate="yes" xml:space="preserve">
          <source>statement is always executed at least once, even if expression always yields false. If it should not execute in this case, a &lt;a href=&quot;while&quot;&gt;while&lt;/a&gt; or &lt;a href=&quot;for&quot;&gt;for&lt;/a&gt; loop may be used.</source>
          <target state="translated">式が常にfalseを返す場合でも、ステートメントは常に少なくとも1回実行されます。この場合に実行しない場合は、&lt;a href=&quot;while&quot;&gt;while&lt;/a&gt;または&lt;a href=&quot;for&quot;&gt;for&lt;/a&gt;ループを使用できます。</target>
        </trans-unit>
        <trans-unit id="33b9a086722b33aa7be25638c4496c0ba9c88be2" translate="yes" xml:space="preserve">
          <source>statement-false</source>
          <target state="translated">statement-false</target>
        </trans-unit>
        <trans-unit id="29da54ff0bb4d126eb289da3d9a5702f90977e78" translate="yes" xml:space="preserve">
          <source>statement-true</source>
          <target state="translated">statement-true</target>
        </trans-unit>
        <trans-unit id="845b634dd2388e3014b2c6e3c2e96a0dce0f4368" translate="yes" xml:space="preserve">
          <source>statement.</source>
          <target state="translated">statement.</target>
        </trans-unit>
        <trans-unit id="a381562afa0e16c5548e829b2f1a659a8c2e7c11" translate="yes" xml:space="preserve">
          <source>static</source>
          <target state="translated">static</target>
        </trans-unit>
        <trans-unit id="b97da387b18a680ee451b78f0ad4ade3e81f54a3" translate="yes" xml:space="preserve">
          <source>static assert declarations</source>
          <target state="translated">せいてきアサート宣言</target>
        </trans-unit>
        <trans-unit id="8490ebbb71f3926b7f3a8b8f313f60ffe1d1430c" translate="yes" xml:space="preserve">
          <source>static assertion</source>
          <target state="translated">せいてきアサーション</target>
        </trans-unit>
        <trans-unit id="42d08f9d21dea44c978c5adf66272b6fa7e6eb9a" translate="yes" xml:space="preserve">
          <source>static const std::size_t  table_size</source>
          <target state="translated">static const std::size_t table_size</target>
        </trans-unit>
        <trans-unit id="111baa3a217b1f9788d219780c408a32846d2522" translate="yes" xml:space="preserve">
          <source>static constant of type &lt;code&gt;T&lt;/code&gt; with value &lt;code&gt;v&lt;/code&gt;</source>
          <target state="translated">値が &lt;code&gt;v&lt;/code&gt; のタイプ &lt;code&gt;T&lt;/code&gt; の静的定数</target>
        </trans-unit>
        <trans-unit id="8cd7dee04774d07dd35f2f57d1ad8a3689bc7d1a" translate="yes" xml:space="preserve">
          <source>static contiguous array</source>
          <target state="translated">静的連続配列</target>
        </trans-unit>
        <trans-unit id="a4567d159f7525d9f165beafa8ce2c667298a31a" translate="yes" xml:space="preserve">
          <source>static data members</source>
          <target state="translated">スタティックデータメンバ</target>
        </trans-unit>
        <trans-unit id="e5f9d69fb7c6999ebd3915cbb521e3614b1f3058" translate="yes" xml:space="preserve">
          <source>static members</source>
          <target state="translated">スタティックメンバー</target>
        </trans-unit>
        <trans-unit id="88d3d7be82e7e4e39c0d8cee5b68c0051d022934" translate="yes" xml:space="preserve">
          <source>static std::locale::id id</source>
          <target state="translated">static std::locale::id id id</target>
        </trans-unit>
        <trans-unit id="81c8cc978d7da6177dc44aff6c24bd2297bc5388" translate="yes" xml:space="preserve">
          <source>static storage duration with &lt;i&gt;external&lt;/i&gt; linkage specifier</source>
          <target state="translated">&lt;i&gt;外部&lt;/i&gt;リンケージ指定子を使用した静的ストレージ期間</target>
        </trans-unit>
        <trans-unit id="e016617c1868e6eb43a3c607b928198796cf8b48" translate="yes" xml:space="preserve">
          <source>static type</source>
          <target state="translated">静的型</target>
        </trans-unit>
        <trans-unit id="9f3c943e76226f076e5e3b081fac556b6d7f47f2" translate="yes" xml:space="preserve">
          <source>static_assert</source>
          <target state="translated">static_assert</target>
        </trans-unit>
        <trans-unit id="b629f765a786910d88ee02c3aad277721cd1bb68" translate="yes" xml:space="preserve">
          <source>static_assert also allowed</source>
          <target state="translated">static_assert も許可されています。</target>
        </trans-unit>
        <trans-unit id="b07a87de0d75e1f3a716ff5035e105216d98e310" translate="yes" xml:space="preserve">
          <source>static_cast</source>
          <target state="translated">static_cast</target>
        </trans-unit>
        <trans-unit id="d75940779c1002b16bef62102e55f243e5aaa573" translate="yes" xml:space="preserve">
          <source>static_cast conversion</source>
          <target state="translated">スタティックキャスト変換</target>
        </trans-unit>
        <trans-unit id="e7a2277320c0d3bafd9bb9a76451283714f29656" translate="yes" xml:space="preserve">
          <source>static_pointer_castdynamic_pointer_castconst_pointer_castreinterpret_pointer_cast</source>
          <target state="translated">static_pointer_castdynamic_pointer_castconst_pointer_castreinterpret_pointer_cast</target>
        </trans-unit>
        <trans-unit id="48a3661d846478fa991a825ebd10b78671444b5b" translate="yes" xml:space="preserve">
          <source>status</source>
          <target state="translated">status</target>
        </trans-unit>
        <trans-unit id="f868271ebb37ad48aeebb85635f4a71d8e5393b6" translate="yes" xml:space="preserve">
          <source>status of the file designated by this directory entry</source>
          <target state="translated">このディレクトリエントリで指定されたファイルの状態</target>
        </trans-unit>
        <trans-unit id="c4d0ff26a235282ce3c4336c51b2367b2ca2b621" translate="yes" xml:space="preserve">
          <source>status_known</source>
          <target state="translated">status_known</target>
        </trans-unit>
        <trans-unit id="371b985f7bd31a77b7e599327bb807e9c8c8fd70" translate="yes" xml:space="preserve">
          <source>statussymlink_status</source>
          <target state="translated">statussymlink_status</target>
        </trans-unit>
        <trans-unit id="9f1780d48e43376ed0815e8a504a5decdc680413" translate="yes" xml:space="preserve">
          <source>std::Assignable</source>
          <target state="translated">std::Assignable</target>
        </trans-unit>
        <trans-unit id="53d43aa01a9226ab52a843b9b2137bfe0f7b1109" translate="yes" xml:space="preserve">
          <source>std::Boolean</source>
          <target state="translated">std::Boolean</target>
        </trans-unit>
        <trans-unit id="bc0850599394c8fdc1fc8f442a9ecc767034bb00" translate="yes" xml:space="preserve">
          <source>std::Common</source>
          <target state="translated">std::Common</target>
        </trans-unit>
        <trans-unit id="a738f5b6416308a8257a9c792f9af9794f476951" translate="yes" xml:space="preserve">
          <source>std::CommonReference</source>
          <target state="translated">std::CommonReference</target>
        </trans-unit>
        <trans-unit id="f6bad52d97825f560a8f972eff964da6b9cfc6bd" translate="yes" xml:space="preserve">
          <source>std::Constructible</source>
          <target state="translated">std::Constructible</target>
        </trans-unit>
        <trans-unit id="650aec1a71bf11e2834771f8eee8593ec9734ff3" translate="yes" xml:space="preserve">
          <source>std::ConvertibleTo</source>
          <target state="translated">std::ConvertibleTo</target>
        </trans-unit>
        <trans-unit id="6517bf3263e363c13784c49be1b59f2198630599" translate="yes" xml:space="preserve">
          <source>std::CopyConstructible</source>
          <target state="translated">std::CopyConstructible</target>
        </trans-unit>
        <trans-unit id="68f1106ae80feb7173ac8fe2bd1f0c550ab15945" translate="yes" xml:space="preserve">
          <source>std::Copyable</source>
          <target state="translated">std::Copyable</target>
        </trans-unit>
        <trans-unit id="262586ae31ea46b0bc37da227dfcc0e6ab22e078" translate="yes" xml:space="preserve">
          <source>std::DefaultConstructible</source>
          <target state="translated">std::DefaultConstructible</target>
        </trans-unit>
        <trans-unit id="8987cf745f9cce1afb4f5d9513f833e2179e7afc" translate="yes" xml:space="preserve">
          <source>std::DerivedFrom</source>
          <target state="translated">std::DerivedFrom</target>
        </trans-unit>
        <trans-unit id="61e9328e93017101fba6392eef44b1b2e79b00a7" translate="yes" xml:space="preserve">
          <source>std::Destructible</source>
          <target state="translated">std::Destructible</target>
        </trans-unit>
        <trans-unit id="a14ec4003e576b74cc15e4e6c1bf3f297f8977a7" translate="yes" xml:space="preserve">
          <source>std::EqualityComparableWith</source>
          <target state="translated">std::EqualityComparableWith</target>
        </trans-unit>
        <trans-unit id="2651b27526657b650f54a474b8ea51fd317b0c59" translate="yes" xml:space="preserve">
          <source>std::Integral</source>
          <target state="translated">std::Integral</target>
        </trans-unit>
        <trans-unit id="e3a3a3ae21198c376f477ceb0b5fd3b16f17dca1" translate="yes" xml:space="preserve">
          <source>std::Invocable, std::RegularInvocable</source>
          <target state="translated">std::Invocable,std::RegularInvocable</target>
        </trans-unit>
        <trans-unit id="f40a11ad7a8502b358ebc4b9c53a8fd2de44e826" translate="yes" xml:space="preserve">
          <source>std::Movable</source>
          <target state="translated">std::Movable</target>
        </trans-unit>
        <trans-unit id="7db2359732b5e7e4fc46abca5b7594bb0377f7ce" translate="yes" xml:space="preserve">
          <source>std::MoveConstructible</source>
          <target state="translated">std::MoveConstructible</target>
        </trans-unit>
        <trans-unit id="d8e258582eea5dd9e0bcb7b1df3dd3e4109a8e04" translate="yes" xml:space="preserve">
          <source>std::Predicate</source>
          <target state="translated">std::Predicate</target>
        </trans-unit>
        <trans-unit id="1439e9a49988289daf4a5edc4c229c2092dd98ce" translate="yes" xml:space="preserve">
          <source>std::Regular</source>
          <target state="translated">std::Regular</target>
        </trans-unit>
        <trans-unit id="0eb8e2f425ba265e6b695d2125a7c724d3512927" translate="yes" xml:space="preserve">
          <source>std::RegularInvocable</source>
          <target state="translated">std::RegularInvocable</target>
        </trans-unit>
        <trans-unit id="63291b6e337913d4857f82ffbaa9e4ca60ca7bf3" translate="yes" xml:space="preserve">
          <source>std::Relation</source>
          <target state="translated">std::Relation</target>
        </trans-unit>
        <trans-unit id="0dc3cae762232090dd786dbe19d8a45042d77667" translate="yes" xml:space="preserve">
          <source>std::Same</source>
          <target state="translated">std::Same</target>
        </trans-unit>
        <trans-unit id="9afd9050520793dbdfedd080e3a1e28ad8fd2bfb" translate="yes" xml:space="preserve">
          <source>std::Semiregular</source>
          <target state="translated">std::Semiregular</target>
        </trans-unit>
        <trans-unit id="628b72294fe78ff3c42dfb95215978dfe6b6361e" translate="yes" xml:space="preserve">
          <source>std::SignedIntegral</source>
          <target state="translated">std::SignedIntegral</target>
        </trans-unit>
        <trans-unit id="1b606d2bc9f4cbbf6c8ea4e86f158be1ec9f0fed" translate="yes" xml:space="preserve">
          <source>std::StrictTotallyOrdered, std::StrictTotallyOrderedWith</source>
          <target state="translated">std::StrictTotallyOrdered,std::StrictTotallyOrderedWith</target>
        </trans-unit>
        <trans-unit id="98201cfa8c9c4879a6094e0f585ee34e4bf0be45" translate="yes" xml:space="preserve">
          <source>std::StrictTotallyOrderedWith</source>
          <target state="translated">std::StrictTotallyOrderedWith</target>
        </trans-unit>
        <trans-unit id="05ff31ed984e7fc9c0de7aca0b276fe51a39f6c1" translate="yes" xml:space="preserve">
          <source>std::StrictWeakOrder</source>
          <target state="translated">std::StrictWeakOrder</target>
        </trans-unit>
        <trans-unit id="12bdc427e101a6f439bd26cd0d1b265370520c44" translate="yes" xml:space="preserve">
          <source>std::Swappable, std::SwappableWith</source>
          <target state="translated">std::Swappable,std::SwappableWith</target>
        </trans-unit>
        <trans-unit id="7f7f0cc80769d85901fc9916a8b2f9789e2c883b" translate="yes" xml:space="preserve">
          <source>std::SwappableWith</source>
          <target state="translated">std::SwappableWith</target>
        </trans-unit>
        <trans-unit id="a2f21e12013d1c944dabaa2a0d4d6673c8a587da" translate="yes" xml:space="preserve">
          <source>std::UniformRandomBitGenerator</source>
          <target state="translated">std::UniformRandomBitGenerator</target>
        </trans-unit>
        <trans-unit id="7a77586d970a51694473a1317e1e35e7a78e4ebe" translate="yes" xml:space="preserve">
          <source>std::UnsignedIntegral</source>
          <target state="translated">std::UnsignedIntegral</target>
        </trans-unit>
        <trans-unit id="0874b8d71acac8ae941345df57f8656e87b0aedd" translate="yes" xml:space="preserve">
          <source>std::_Exit</source>
          <target state="translated">std::_Exit</target>
        </trans-unit>
        <trans-unit id="af235f6785acbf9188ed98fd8953ff6face5a2b0" translate="yes" xml:space="preserve">
          <source>std::abort</source>
          <target state="translated">std::abort</target>
        </trans-unit>
        <trans-unit id="1b744c6baa5716b672b3387be480ffceb1935896" translate="yes" xml:space="preserve">
          <source>std::abs(float), std::fabs, std::fabsf, std::fabsl</source>
          <target state="translated">std::abs(float),std::fabs,std::fabsf,std::fabsl</target>
        </trans-unit>
        <trans-unit id="8d075b579b3496821d888eeff369f287d1854d90" translate="yes" xml:space="preserve">
          <source>std::abs(std::complex)</source>
          <target state="translated">std::abs(std::complex)</target>
        </trans-unit>
        <trans-unit id="834abaaa4289908af7f1416c413286fdce26686d" translate="yes" xml:space="preserve">
          <source>std::abs(std::valarray)</source>
          <target state="translated">std::abs(std::valarray)</target>
        </trans-unit>
        <trans-unit id="24faf042716fc214e4d82e1a2df0bdfef738a167" translate="yes" xml:space="preserve">
          <source>std::abs, std::labs, std::llabs, std::imaxabs</source>
          <target state="translated">std::abs,std::labs,std::llabs,std::imaxabs</target>
        </trans-unit>
        <trans-unit id="dd34ad266cad068eed68954dd23814d506148a01" translate="yes" xml:space="preserve">
          <source>std::accumulate</source>
          <target state="translated">std::accumulate</target>
        </trans-unit>
        <trans-unit id="9cfd97873b306404a83df90773901029f48a3c61" translate="yes" xml:space="preserve">
          <source>std::acos(std::complex)</source>
          <target state="translated">std::acos(std::complex)</target>
        </trans-unit>
        <trans-unit id="c8f68403bcd9b481abf09187ec671c648bbbde87" translate="yes" xml:space="preserve">
          <source>std::acos(std::valarray)</source>
          <target state="translated">std::acos(std::valarray)</target>
        </trans-unit>
        <trans-unit id="012c50d18dfbfb86aeb178503d86ac4e67c28968" translate="yes" xml:space="preserve">
          <source>std::acos, std::acosf, std::acosl</source>
          <target state="translated">std::acos,std::acosf,std::acosl</target>
        </trans-unit>
        <trans-unit id="49934b063138a23e4057684f42e559ad186b5600" translate="yes" xml:space="preserve">
          <source>std::acosh(std::complex)</source>
          <target state="translated">std::acosh(std::complex)</target>
        </trans-unit>
        <trans-unit id="39f689a0c06f3419e3245380bb4014667106230d" translate="yes" xml:space="preserve">
          <source>std::acosh, std::acoshf, std::acoshl</source>
          <target state="translated">std::acosh,std::acoshf,std::acoshl</target>
        </trans-unit>
        <trans-unit id="ae38d4cec26f4c22b8dc219d8f28f65e2e322925" translate="yes" xml:space="preserve">
          <source>std::acoshl</source>
          <target state="translated">std::acoshl</target>
        </trans-unit>
        <trans-unit id="65c8ae5d1d787b037c127db59818710611cfd6eb" translate="yes" xml:space="preserve">
          <source>std::acosl</source>
          <target state="translated">std::acosl</target>
        </trans-unit>
        <trans-unit id="f2e7601ea59644e56882dbe1012ced6945f9c678" translate="yes" xml:space="preserve">
          <source>std::add_cv, std::add_const, std::add_volatile</source>
          <target state="translated">std::add_cv,std::add_const,std::add_volatile</target>
        </trans-unit>
        <trans-unit id="fcaf763e5384b7949dfc2d41c97d1e6aa201a637" translate="yes" xml:space="preserve">
          <source>std::add_lvalue_reference, std::add_rvalue_reference</source>
          <target state="translated">std::add_lvalue_reference,std::add_rvalue_reference</target>
        </trans-unit>
        <trans-unit id="8a06d88236293d5cb61b6a6d9b879dba9d8a1211" translate="yes" xml:space="preserve">
          <source>std::add_pointer</source>
          <target state="translated">std::add_pointer</target>
        </trans-unit>
        <trans-unit id="ac1134c5a47deaa3301c3220a9585d67f48b6105" translate="yes" xml:space="preserve">
          <source>std::add_rvalue_reference</source>
          <target state="translated">std::add_rvalue_reference</target>
        </trans-unit>
        <trans-unit id="bfdb118e650faebee1408dc521db539bbd9317bc" translate="yes" xml:space="preserve">
          <source>std::add_volatile</source>
          <target state="translated">std::add_volatile</target>
        </trans-unit>
        <trans-unit id="bedf798a9259d5ca532436162057b21515281365" translate="yes" xml:space="preserve">
          <source>std::addressof</source>
          <target state="translated">std::addressof</target>
        </trans-unit>
        <trans-unit id="e562148f7b10fd1191186f509ae3e6b1a8a65a19" translate="yes" xml:space="preserve">
          <source>std::adjacent_difference</source>
          <target state="translated">std::adjacent_difference</target>
        </trans-unit>
        <trans-unit id="38a9ed72b108c1efef13a098bf7868567d6fc844" translate="yes" xml:space="preserve">
          <source>std::adjacent_find</source>
          <target state="translated">std::adjacent_find</target>
        </trans-unit>
        <trans-unit id="93115b4577c2ff9c137c8cbf03c1b5aaffe56cc7" translate="yes" xml:space="preserve">
          <source>std::advance</source>
          <target state="translated">std::advance</target>
        </trans-unit>
        <trans-unit id="ff2ceb2dd54aa84849d32c390e1a42937491a989" translate="yes" xml:space="preserve">
          <source>std::align</source>
          <target state="translated">std::align</target>
        </trans-unit>
        <trans-unit id="0a39afd8e6c5e57dd9f2d533306f7d8c28feba38" translate="yes" xml:space="preserve">
          <source>std::align_val_t</source>
          <target state="translated">std::align_val_t</target>
        </trans-unit>
        <trans-unit id="de1749a04e8ae2c24a3c9072c2514899fd519c4a" translate="yes" xml:space="preserve">
          <source>std::aligned_alloc</source>
          <target state="translated">std::aligned_alloc</target>
        </trans-unit>
        <trans-unit id="2c74cbb1fb2e394cd37838b97878c5eca14a53ef" translate="yes" xml:space="preserve">
          <source>std::aligned_storage</source>
          <target state="translated">std::aligned_storage</target>
        </trans-unit>
        <trans-unit id="3879e59ed8673954c93e7a58d9d4c4600aa7bd05" translate="yes" xml:space="preserve">
          <source>std::aligned_union</source>
          <target state="translated">std::aligned_union</target>
        </trans-unit>
        <trans-unit id="bc9248c84e5aa5e3217e452d2a7f1850ae6a519d" translate="yes" xml:space="preserve">
          <source>std::alignment_of</source>
          <target state="translated">std::alignment_of</target>
        </trans-unit>
        <trans-unit id="4ebb04a872e4145267abd2833cff428d510ae6d3" translate="yes" xml:space="preserve">
          <source>std::all_of, std::any_of, std::none_of</source>
          <target state="translated">std::all_of,std::any_of,std::none_of</target>
        </trans-unit>
        <trans-unit id="a2ddda1835db11e4a575dea169ac8211d9f116cc" translate="yes" xml:space="preserve">
          <source>std::allocate_shared, std::allocate_shared_default_init</source>
          <target state="translated">std::allocate_shared,std::allocate_shared_default_init</target>
        </trans-unit>
        <trans-unit id="808d89785baa52e08bbd7c8f17256d7ef199bcb7" translate="yes" xml:space="preserve">
          <source>std::allocate_shared_default_init</source>
          <target state="translated">std::allocate_shared_default_init</target>
        </trans-unit>
        <trans-unit id="f503615a4331dce6daeee50499f226621f379a49" translate="yes" xml:space="preserve">
          <source>std::allocator</source>
          <target state="translated">std::allocator</target>
        </trans-unit>
        <trans-unit id="3594a795ab510fc3e761adb1d303962b8ac0ae80" translate="yes" xml:space="preserve">
          <source>std::allocator&amp;lt;T&amp;gt;::address</source>
          <target state="translated">std::allocator&amp;lt;T&amp;gt;::address</target>
        </trans-unit>
        <trans-unit id="38b74d3622e9c0e8d999ccd21698f6af12b40330" translate="yes" xml:space="preserve">
          <source>std::allocator&amp;lt;T&amp;gt;::allocate</source>
          <target state="translated">std::allocator&amp;lt;T&amp;gt;::allocate</target>
        </trans-unit>
        <trans-unit id="20ad6fad9c1baf89137a871f8a595a06804abf2d" translate="yes" xml:space="preserve">
          <source>std::allocator&amp;lt;T&amp;gt;::allocator</source>
          <target state="translated">std::allocator&amp;lt;T&amp;gt;::allocator</target>
        </trans-unit>
        <trans-unit id="373d6f0dcf519783b3722d8f2443f5cb45f7f94d" translate="yes" xml:space="preserve">
          <source>std::allocator&amp;lt;T&amp;gt;::construct</source>
          <target state="translated">std::allocator&amp;lt;T&amp;gt;::construct</target>
        </trans-unit>
        <trans-unit id="03bde8ceabea80da18b8178711831d252c142ad2" translate="yes" xml:space="preserve">
          <source>std::allocator&amp;lt;T&amp;gt;::deallocate</source>
          <target state="translated">std::allocator&amp;lt;T&amp;gt;::deallocate</target>
        </trans-unit>
        <trans-unit id="61155896afa8735ad78ad712d18920477f6a0464" translate="yes" xml:space="preserve">
          <source>std::allocator&amp;lt;T&amp;gt;::destroy</source>
          <target state="translated">std::allocator&amp;lt;T&amp;gt;::destroy</target>
        </trans-unit>
        <trans-unit id="7c3e36ad04b7e35f5f3dc929058b5d52f90fa1aa" translate="yes" xml:space="preserve">
          <source>std::allocator&amp;lt;T&amp;gt;::max_size</source>
          <target state="translated">std::allocator&amp;lt;T&amp;gt;::max_size</target>
        </trans-unit>
        <trans-unit id="4126c2132c6abe55deecd968179c8dfc93450f8f" translate="yes" xml:space="preserve">
          <source>std::allocator&amp;lt;T&amp;gt;::~allocator</source>
          <target state="translated">std::allocator&amp;lt;T&amp;gt;::~allocator</target>
        </trans-unit>
        <trans-unit id="39b980d2935259b25915a3b7cbd84ff97025e2d6" translate="yes" xml:space="preserve">
          <source>std::allocator::address</source>
          <target state="translated">std::allocator::address</target>
        </trans-unit>
        <trans-unit id="afecca4f6dd583127e42e24ef6b0af0417295db7" translate="yes" xml:space="preserve">
          <source>std::allocator::allocate</source>
          <target state="translated">std::allocator::allocate</target>
        </trans-unit>
        <trans-unit id="f4b256a960253ecc5d2d12623f706b6a20b074d8" translate="yes" xml:space="preserve">
          <source>std::allocator::allocator</source>
          <target state="translated">std::allocator::allocator</target>
        </trans-unit>
        <trans-unit id="feb370d90ac46c37ed9b549c9426d1eddc58f2ac" translate="yes" xml:space="preserve">
          <source>std::allocator::construct</source>
          <target state="translated">std::allocator::construct</target>
        </trans-unit>
        <trans-unit id="5e90dcaa03a46197c25ece01610d328d039da537" translate="yes" xml:space="preserve">
          <source>std::allocator::deallocate</source>
          <target state="translated">std::allocator::deallocate</target>
        </trans-unit>
        <trans-unit id="75236e3b9553e52b12c6174c29d13dcdff4f93b0" translate="yes" xml:space="preserve">
          <source>std::allocator::destroy</source>
          <target state="translated">std::allocator::destroy</target>
        </trans-unit>
        <trans-unit id="b3ede241228e5a7fa193bcc3238b4e6a3a11b799" translate="yes" xml:space="preserve">
          <source>std::allocator::max_size</source>
          <target state="translated">std::allocator::max_size</target>
        </trans-unit>
        <trans-unit id="9e3a182ae1acbe8da7a4592f44b9aad7598b6c39" translate="yes" xml:space="preserve">
          <source>std::allocator::~allocator</source>
          <target state="translated">std::allocator::~allocator</target>
        </trans-unit>
        <trans-unit id="2df7ce062b39619f268781ed39c9dba86d49a0c2" translate="yes" xml:space="preserve">
          <source>std::allocator_arg</source>
          <target state="translated">std::allocator_arg</target>
        </trans-unit>
        <trans-unit id="feb05530089234566561db304ec819a3c5755129" translate="yes" xml:space="preserve">
          <source>std::allocator_arg_t</source>
          <target state="translated">std::allocator_arg_t</target>
        </trans-unit>
        <trans-unit id="90e0a4fae3614fc9bc5018f9ea6f497f4ff53929" translate="yes" xml:space="preserve">
          <source>std::allocator_traits</source>
          <target state="translated">std::allocator_traits</target>
        </trans-unit>
        <trans-unit id="f71d80ad46be1dabe2f7290cd8bffd4020f2da8a" translate="yes" xml:space="preserve">
          <source>std::allocator_traits&amp;lt;Alloc&amp;gt;::allocate</source>
          <target state="translated">std::allocator_traits&amp;lt;Alloc&amp;gt;::allocate</target>
        </trans-unit>
        <trans-unit id="89adfa34043ddc7f3cf54d4bca760383a9b44410" translate="yes" xml:space="preserve">
          <source>std::allocator_traits&amp;lt;Alloc&amp;gt;::construct</source>
          <target state="translated">std::allocator_traits&amp;lt;Alloc&amp;gt;::construct</target>
        </trans-unit>
        <trans-unit id="24940473945a31a8ca52eb07e0be2d7d8ab06501" translate="yes" xml:space="preserve">
          <source>std::allocator_traits&amp;lt;Alloc&amp;gt;::deallocate</source>
          <target state="translated">std::allocator_traits&amp;lt;Alloc&amp;gt;::deallocate</target>
        </trans-unit>
        <trans-unit id="208f024368f7da2b222c707f2c090b570fd90aa8" translate="yes" xml:space="preserve">
          <source>std::allocator_traits&amp;lt;Alloc&amp;gt;::destroy</source>
          <target state="translated">std::allocator_traits&amp;lt;Alloc&amp;gt;::destroy</target>
        </trans-unit>
        <trans-unit id="bbad41730c17c21761fa9b91478382366c99e0d4" translate="yes" xml:space="preserve">
          <source>std::allocator_traits&amp;lt;Alloc&amp;gt;::max_size</source>
          <target state="translated">std::allocator_traits&amp;lt;Alloc&amp;gt;::max_size</target>
        </trans-unit>
        <trans-unit id="a421516d0a61d75d930d9b8f675b46dc4660ba5f" translate="yes" xml:space="preserve">
          <source>std::allocator_traits&amp;lt;Alloc&amp;gt;::select_on_container_copy_construction</source>
          <target state="translated">std::allocator_traits&amp;lt;Alloc&amp;gt;::select_on_container_copy_construction</target>
        </trans-unit>
        <trans-unit id="db66f7a407f8822f44c1662eeeeda90d6feb4259" translate="yes" xml:space="preserve">
          <source>std::allocator_traits::allocate</source>
          <target state="translated">std::allocator_traits::allocate</target>
        </trans-unit>
        <trans-unit id="473e6aa9ae1e91083d5b550a52419e8214a92350" translate="yes" xml:space="preserve">
          <source>std::allocator_traits::construct</source>
          <target state="translated">std::allocator_traits::construct</target>
        </trans-unit>
        <trans-unit id="c97ef358b31edc9a763737a4ea5ff2b8e28155cc" translate="yes" xml:space="preserve">
          <source>std::allocator_traits::deallocate</source>
          <target state="translated">std::allocator_traits::deallocate</target>
        </trans-unit>
        <trans-unit id="258fe3115166b6cddc00f59718081f5568c8331b" translate="yes" xml:space="preserve">
          <source>std::allocator_traits::destroy</source>
          <target state="translated">std::allocator_traits::destroy</target>
        </trans-unit>
        <trans-unit id="d725e0c5b1f43768b2cfc1edd8d2632cf10beca7" translate="yes" xml:space="preserve">
          <source>std::allocator_traits::max_size</source>
          <target state="translated">std::allocator_traits::max_size</target>
        </trans-unit>
        <trans-unit id="42c737c453fffec56d3549f0f929b1e4641d265b" translate="yes" xml:space="preserve">
          <source>std::allocator_traits::select_on_container_copy_construction</source>
          <target state="translated">std::allocator_traits::select_on_container_copy_construction</target>
        </trans-unit>
        <trans-unit id="ffa6eb1ee44ce3578ea5e1a3dc9df7cff30b56ac" translate="yes" xml:space="preserve">
          <source>std::any</source>
          <target state="translated">std::any</target>
        </trans-unit>
        <trans-unit id="467883d389cdfd960eef2783c1a1b5310d44f18c" translate="yes" xml:space="preserve">
          <source>std::any::any</source>
          <target state="translated">std::any::any</target>
        </trans-unit>
        <trans-unit id="4a4da4a0de98ed1093d6a4eb34edcc69dab0ddb8" translate="yes" xml:space="preserve">
          <source>std::any::emplace</source>
          <target state="translated">std::any::emplace</target>
        </trans-unit>
        <trans-unit id="b80677467e7594bccc5ca7eb94bbecaaec98ad32" translate="yes" xml:space="preserve">
          <source>std::any::has_value</source>
          <target state="translated">std::any::has_value</target>
        </trans-unit>
        <trans-unit id="b92e123c33bd3300711c17be4f23388c93d56a9c" translate="yes" xml:space="preserve">
          <source>std::any::operator=</source>
          <target state="translated">std::any::operator=</target>
        </trans-unit>
        <trans-unit id="c77cbe303ffa93744bb9f2e4c349e07db2f598f8" translate="yes" xml:space="preserve">
          <source>std::any::reset</source>
          <target state="translated">std::any::reset</target>
        </trans-unit>
        <trans-unit id="20b6a8b7753bb2585568dc18a359842a9131e88d" translate="yes" xml:space="preserve">
          <source>std::any::swap</source>
          <target state="translated">std::any::swap</target>
        </trans-unit>
        <trans-unit id="a00f0206f8bcc7e8b047dd705125e5828da32d72" translate="yes" xml:space="preserve">
          <source>std::any::type</source>
          <target state="translated">std::any::type</target>
        </trans-unit>
        <trans-unit id="757d2313416c5c6242373c411a1aeef08ecfe7d0" translate="yes" xml:space="preserve">
          <source>std::any::~any</source>
          <target state="translated">std::any::~any</target>
        </trans-unit>
        <trans-unit id="72bcc5075cfdaa3990109e74aba816f973bac3ae" translate="yes" xml:space="preserve">
          <source>std::any_cast</source>
          <target state="translated">std::any_cast</target>
        </trans-unit>
        <trans-unit id="bbfbcab98d1cc97eabcb80a235ac7d3f2f0254b6" translate="yes" xml:space="preserve">
          <source>std::apply</source>
          <target state="translated">std::apply</target>
        </trans-unit>
        <trans-unit id="2f4a09be17f6c7802fa23eac542b6b8caa2e2d43" translate="yes" xml:space="preserve">
          <source>std::arg(std::complex)</source>
          <target state="translated">std::arg(std::complex)</target>
        </trans-unit>
        <trans-unit id="574589d991454695b19256cc56fc8f8a093eb5c6" translate="yes" xml:space="preserve">
          <source>std::array</source>
          <target state="translated">std::array</target>
        </trans-unit>
        <trans-unit id="fffabe91a7c66fb34b9705c0263ab29e907b240f" translate="yes" xml:space="preserve">
          <source>std::array&amp;lt;T,N&amp;gt;::at</source>
          <target state="translated">std::array&amp;lt;T,N&amp;gt;::at</target>
        </trans-unit>
        <trans-unit id="9813e0401418454e78d2cc4ea472445e6af4416c" translate="yes" xml:space="preserve">
          <source>std::array&amp;lt;T,N&amp;gt;::back</source>
          <target state="translated">std::array&amp;lt;T,N&amp;gt;::back</target>
        </trans-unit>
        <trans-unit id="029f1510e97910b0eee67e5df1a8cdd05efc0d7f" translate="yes" xml:space="preserve">
          <source>std::array&amp;lt;T,N&amp;gt;::begin, std::array&amp;lt;T,N&amp;gt;::cbegin</source>
          <target state="translated">std :: array &amp;lt;T、N&amp;gt; :: begin、std :: array &amp;lt;T、N&amp;gt; :: cbegin</target>
        </trans-unit>
        <trans-unit id="476f9365fa21d545ff9e6e060465271de163b51f" translate="yes" xml:space="preserve">
          <source>std::array&amp;lt;T,N&amp;gt;::data</source>
          <target state="translated">std::array&amp;lt;T,N&amp;gt;::data</target>
        </trans-unit>
        <trans-unit id="aa83295bc2d4e1422f00a1095f9d935294b3c682" translate="yes" xml:space="preserve">
          <source>std::array&amp;lt;T,N&amp;gt;::empty</source>
          <target state="translated">std::array&amp;lt;T,N&amp;gt;::empty</target>
        </trans-unit>
        <trans-unit id="0558a527dfe4653a4b985369880c50172e26ae3c" translate="yes" xml:space="preserve">
          <source>std::array&amp;lt;T,N&amp;gt;::end, std::array&amp;lt;T,N&amp;gt;::cend</source>
          <target state="translated">std :: array &amp;lt;T、N&amp;gt; :: end、std :: array &amp;lt;T、N&amp;gt; :: cend</target>
        </trans-unit>
        <trans-unit id="4c23307150149337f0cda794ef1c5b02775263a6" translate="yes" xml:space="preserve">
          <source>std::array&amp;lt;T,N&amp;gt;::fill</source>
          <target state="translated">std::array&amp;lt;T,N&amp;gt;::fill</target>
        </trans-unit>
        <trans-unit id="36fe43da334ab1574d4e36eb4348271868b7c8f0" translate="yes" xml:space="preserve">
          <source>std::array&amp;lt;T,N&amp;gt;::front</source>
          <target state="translated">std::array&amp;lt;T,N&amp;gt;::front</target>
        </trans-unit>
        <trans-unit id="a06951ac18c7d44792f625e03efffe9d59ec40d6" translate="yes" xml:space="preserve">
          <source>std::array&amp;lt;T,N&amp;gt;::max_size</source>
          <target state="translated">std::array&amp;lt;T,N&amp;gt;::max_size</target>
        </trans-unit>
        <trans-unit id="3d4b9290b9964e3a717810498249f4dcf1409caf" translate="yes" xml:space="preserve">
          <source>std::array&amp;lt;T,N&amp;gt;::operator[]</source>
          <target state="translated">std::array&amp;lt;T,N&amp;gt;::operator[]</target>
        </trans-unit>
        <trans-unit id="75d301789bef2cf2d856c05b567e54ac9656b607" translate="yes" xml:space="preserve">
          <source>std::array&amp;lt;T,N&amp;gt;::rbegin, std::array&amp;lt;T,N&amp;gt;::crbegin</source>
          <target state="translated">std :: array &amp;lt;T、N&amp;gt; :: rbegin、std :: array &amp;lt;T、N&amp;gt; :: crbegin</target>
        </trans-unit>
        <trans-unit id="beb9d0df446538798922349b20a65edf2a97eb21" translate="yes" xml:space="preserve">
          <source>std::array&amp;lt;T,N&amp;gt;::rend, std::array&amp;lt;T,N&amp;gt;::crend</source>
          <target state="translated">std :: array &amp;lt;T、N&amp;gt; :: rend、std :: array &amp;lt;T、N&amp;gt; :: crend</target>
        </trans-unit>
        <trans-unit id="17d8826886713e52fcb981fea22f68a58ca2f7e5" translate="yes" xml:space="preserve">
          <source>std::array&amp;lt;T,N&amp;gt;::size</source>
          <target state="translated">std::array&amp;lt;T,N&amp;gt;::size</target>
        </trans-unit>
        <trans-unit id="9cae59f76d59d904b20796123201c94754b52913" translate="yes" xml:space="preserve">
          <source>std::array&amp;lt;T,N&amp;gt;::swap</source>
          <target state="translated">std::array&amp;lt;T,N&amp;gt;::swap</target>
        </trans-unit>
        <trans-unit id="99c8f301084f0d799f770637d6dd22d7607a2cbf" translate="yes" xml:space="preserve">
          <source>std::array::at</source>
          <target state="translated">std::array::at</target>
        </trans-unit>
        <trans-unit id="a14447f5b78aa85cc00b7ec3091f0d7955331b18" translate="yes" xml:space="preserve">
          <source>std::array::back</source>
          <target state="translated">std::array::back</target>
        </trans-unit>
        <trans-unit id="322611d536cf7a851fc47d8bd3202c3b01069577" translate="yes" xml:space="preserve">
          <source>std::array::cbegin</source>
          <target state="translated">std::array::cbegin</target>
        </trans-unit>
        <trans-unit id="70473172ed959ea1e0934f98c83965bcb4cbaef6" translate="yes" xml:space="preserve">
          <source>std::array::data</source>
          <target state="translated">std::array::data</target>
        </trans-unit>
        <trans-unit id="29b9c36eae65b24623e51647188f74a1406c096e" translate="yes" xml:space="preserve">
          <source>std::array::empty</source>
          <target state="translated">std::array::empty</target>
        </trans-unit>
        <trans-unit id="63bb171e5cdfb5c6f7c82f6fd893a4cb8ba04e6e" translate="yes" xml:space="preserve">
          <source>std::array::end</source>
          <target state="translated">std::array::end</target>
        </trans-unit>
        <trans-unit id="659ea8af11fbe0eafc64d2a7386abfc638ae9939" translate="yes" xml:space="preserve">
          <source>std::array::fill</source>
          <target state="translated">std::array::fill</target>
        </trans-unit>
        <trans-unit id="61a40e5ce20d177e7049a96d0dcf498529fa83ca" translate="yes" xml:space="preserve">
          <source>std::array::front</source>
          <target state="translated">std::array::front</target>
        </trans-unit>
        <trans-unit id="73180ff3fbb60a11e94c4996f6c39f240cd88172" translate="yes" xml:space="preserve">
          <source>std::array::max_size</source>
          <target state="translated">std::array::max_size</target>
        </trans-unit>
        <trans-unit id="a13ad3fe8bfec4a84307299322a17e1aa0426939" translate="yes" xml:space="preserve">
          <source>std::array::operator[]</source>
          <target state="translated">std::array::operator[]</target>
        </trans-unit>
        <trans-unit id="3f074f832ab830722d7009d97c29a65abd4fe345" translate="yes" xml:space="preserve">
          <source>std::array::rbegin</source>
          <target state="translated">std::array::rbegin</target>
        </trans-unit>
        <trans-unit id="751d9eb08b2337e4a5adfa780e8b48adb789db12" translate="yes" xml:space="preserve">
          <source>std::array::rend</source>
          <target state="translated">std::array::rend</target>
        </trans-unit>
        <trans-unit id="93eb8c775558490a40bf288f6c8852bc6bb0dec3" translate="yes" xml:space="preserve">
          <source>std::array::size</source>
          <target state="translated">std::array::size</target>
        </trans-unit>
        <trans-unit id="583f4b3973d3ffaca540bdafcc382b2f9cb6743b" translate="yes" xml:space="preserve">
          <source>std::array::swap</source>
          <target state="translated">std::array::swap</target>
        </trans-unit>
        <trans-unit id="5c7f856dbc9a50946e4bc8349764ab78c916ed7c" translate="yes" xml:space="preserve">
          <source>std::as_bytes, std::as_writable_bytes</source>
          <target state="translated">std::as_bytes,std::as_writable_bytes</target>
        </trans-unit>
        <trans-unit id="27a2d91e4407eb7bcc4629b732954828d5c088d0" translate="yes" xml:space="preserve">
          <source>std::as_const</source>
          <target state="translated">std::as_const</target>
        </trans-unit>
        <trans-unit id="3f0af856ed40b3ced733347063cb9c16fbf007a8" translate="yes" xml:space="preserve">
          <source>std::as_writable_bytes</source>
          <target state="translated">std::as_writable_bytes</target>
        </trans-unit>
        <trans-unit id="f9cab3f4d12ef9afbd659f548987608c3e80fe6d" translate="yes" xml:space="preserve">
          <source>std::asctime</source>
          <target state="translated">std::asctime</target>
        </trans-unit>
        <trans-unit id="72c66a2c8f7abb2c9699c0b01750fbd500c3d0e9" translate="yes" xml:space="preserve">
          <source>std::asin(std::complex)</source>
          <target state="translated">std::asin(std::complex)</target>
        </trans-unit>
        <trans-unit id="533a62aac43506f92db30dbff194c1b4cf0d812d" translate="yes" xml:space="preserve">
          <source>std::asin(std::valarray)</source>
          <target state="translated">std::asin(std::valarray)</target>
        </trans-unit>
        <trans-unit id="90c709595c5382d7c7a804868b42c3be650a7b12" translate="yes" xml:space="preserve">
          <source>std::asin, std::asinf, std::asinl</source>
          <target state="translated">std::asin,std::asinf,std::asinl</target>
        </trans-unit>
        <trans-unit id="eda962a21f50f295641775a86a42e18b33eb458e" translate="yes" xml:space="preserve">
          <source>std::asinh(std::complex)</source>
          <target state="translated">std::asinh(std::complex)</target>
        </trans-unit>
        <trans-unit id="5b6e0bf01bdd17f3480827483b7416676f18c389" translate="yes" xml:space="preserve">
          <source>std::asinh, std::asinhf, std::asinhl</source>
          <target state="translated">std::asinh,std::asinhf,std::asinhl</target>
        </trans-unit>
        <trans-unit id="448ff06ef4d39fe98b49dcfcdc56ae8efc223246" translate="yes" xml:space="preserve">
          <source>std::asinhl</source>
          <target state="translated">std::asinhl</target>
        </trans-unit>
        <trans-unit id="0d08651fa05f4bc804c9ff170b2dd775a3dbf774" translate="yes" xml:space="preserve">
          <source>std::asinl</source>
          <target state="translated">std::asinl</target>
        </trans-unit>
        <trans-unit id="a6487ca6cc0af199cee115cc111bcfe9fea66735" translate="yes" xml:space="preserve">
          <source>std::assoc_laguerre, std::assoc_laguerref, std::assoc_laguerrel</source>
          <target state="translated">std::assoc_laguerre,std::assoc_laguerref,std::assoc_laguerrel</target>
        </trans-unit>
        <trans-unit id="be04c4e42a89944707fde378385fe0a7b2c164ca" translate="yes" xml:space="preserve">
          <source>std::assoc_laguerrel</source>
          <target state="translated">std::assoc_laguerrel</target>
        </trans-unit>
        <trans-unit id="34dfb6a47c0909f0e9388f94a5224720029fd2e1" translate="yes" xml:space="preserve">
          <source>std::assoc_legendre, std::assoc_legendref, std::assoc_legendrel</source>
          <target state="translated">std::assoc_legendre,std::assoc_legendref,std::assoc_legendrel</target>
        </trans-unit>
        <trans-unit id="2d71d6266d453f1424c709cf358c6decdcefdde7" translate="yes" xml:space="preserve">
          <source>std::assoc_legendrel</source>
          <target state="translated">std::assoc_legendrel</target>
        </trans-unit>
        <trans-unit id="e303fc719a64ed807247cfd4fce6b8f26bc4d0ca" translate="yes" xml:space="preserve">
          <source>std::assume_aligned</source>
          <target state="translated">std::assume_aligned</target>
        </trans-unit>
        <trans-unit id="a72d737cf67731a9e21432c747ea200895c4ea1f" translate="yes" xml:space="preserve">
          <source>std::async</source>
          <target state="translated">std::async</target>
        </trans-unit>
        <trans-unit id="d94596658dfab42e9a0297506044a107e3e45cf5" translate="yes" xml:space="preserve">
          <source>std::at_quick_exit</source>
          <target state="translated">std::at_quick_exit</target>
        </trans-unit>
        <trans-unit id="d33eb0e46f215bf9cdaf5aed64cdc2cd68ed8d73" translate="yes" xml:space="preserve">
          <source>std::atan(std::complex)</source>
          <target state="translated">std::atan(std::complex)</target>
        </trans-unit>
        <trans-unit id="bf55ac9b0ef0faa087f08e851d37ef93492de243" translate="yes" xml:space="preserve">
          <source>std::atan(std::valarray)</source>
          <target state="translated">std::atan(std::valarray)</target>
        </trans-unit>
        <trans-unit id="4010348198d12b3473f17bb29e5e70d268dca387" translate="yes" xml:space="preserve">
          <source>std::atan, std::atanf, std::atanl</source>
          <target state="translated">std::atan,std::atanf,std::atanl</target>
        </trans-unit>
        <trans-unit id="90aa2bd1e09a0f13f93e7c3beadb87315f14481b" translate="yes" xml:space="preserve">
          <source>std::atan2(std::valarray)</source>
          <target state="translated">std::atan2(std::valarray)</target>
        </trans-unit>
        <trans-unit id="071232492d1c4f61268dc65d40de7fb93e895615" translate="yes" xml:space="preserve">
          <source>std::atan2, std::atan2f, std::atan2l</source>
          <target state="translated">std::atan2,std::atan2f,std::atan2l</target>
        </trans-unit>
        <trans-unit id="3ec06f2f70e6c5cf11c83f682d577a326180d1d5" translate="yes" xml:space="preserve">
          <source>std::atan2l</source>
          <target state="translated">std::atan2l</target>
        </trans-unit>
        <trans-unit id="ca9b84fe07128c9d11bbab433cc522898cceab78" translate="yes" xml:space="preserve">
          <source>std::atanh(std::complex)</source>
          <target state="translated">std::atanh(std::complex)</target>
        </trans-unit>
        <trans-unit id="0eefbd5c3bc398f28dafe60b049c5eae935a8214" translate="yes" xml:space="preserve">
          <source>std::atanh, std::atanh, std::atanhl</source>
          <target state="translated">std::atanh,std::atanh,std::atanhl</target>
        </trans-unit>
        <trans-unit id="7a6b16c0ca881c27a0274b2c093ff254334b9ac4" translate="yes" xml:space="preserve">
          <source>std::atanhl</source>
          <target state="translated">std::atanhl</target>
        </trans-unit>
        <trans-unit id="84861f4ae5eafba1cb44dc041755861860ac7ded" translate="yes" xml:space="preserve">
          <source>std::atanl</source>
          <target state="translated">std::atanl</target>
        </trans-unit>
        <trans-unit id="f2f09f1af7a30b6af1126842b8b8d02a32f8ce28" translate="yes" xml:space="preserve">
          <source>std::atexit</source>
          <target state="translated">std::atexit</target>
        </trans-unit>
        <trans-unit id="07366ebeceb3b3abe97819c630d901f670403081" translate="yes" xml:space="preserve">
          <source>std::atof</source>
          <target state="translated">std::atof</target>
        </trans-unit>
        <trans-unit id="0c453bade5009b8fafc4b88b422ebb22916c6815" translate="yes" xml:space="preserve">
          <source>std::atoi, std::atol, std::atoll</source>
          <target state="translated">std::atoi,std::atol,std::atoll</target>
        </trans-unit>
        <trans-unit id="202f483346f3b6fece0cdc24307ff6c437265f56" translate="yes" xml:space="preserve">
          <source>std::atoll</source>
          <target state="translated">std::atoll</target>
        </trans-unit>
        <trans-unit id="c4887850a3f2e67da5f6453b5d313bc32dfd6b4d" translate="yes" xml:space="preserve">
          <source>std::atomic</source>
          <target state="translated">std::atomic</target>
        </trans-unit>
        <trans-unit id="43edd8d3cd4c26918c0b05911a8a0747e4ea4f87" translate="yes" xml:space="preserve">
          <source>std::atomic is neither copyable nor movable.</source>
          <target state="translated">std::atomicはコピーも移動もできません。</target>
        </trans-unit>
        <trans-unit id="0007efff239238e80ecf4bd9849c1a51e9f110ff" translate="yes" xml:space="preserve">
          <source>std::atomic&amp;lt;T&amp;gt;::atomic</source>
          <target state="translated">std::atomic&amp;lt;T&amp;gt;::atomic</target>
        </trans-unit>
        <trans-unit id="2a1a7d785ddcbc1efa7bacd811edc4de082b69f9" translate="yes" xml:space="preserve">
          <source>std::atomic&amp;lt;T&amp;gt;::compare_exchange_weak, std::atomic&amp;lt;T&amp;gt;::compare_exchange_strong</source>
          <target state="translated">std :: atomic &amp;lt;T&amp;gt; :: compare_exchange_weak、std :: atomic &amp;lt;T&amp;gt; :: compare_exchange_strong</target>
        </trans-unit>
        <trans-unit id="36a4ad7a711c7d0d461f092db0b0da9f9f7dad8d" translate="yes" xml:space="preserve">
          <source>std::atomic&amp;lt;T&amp;gt;::exchange</source>
          <target state="translated">std::atomic&amp;lt;T&amp;gt;::exchange</target>
        </trans-unit>
        <trans-unit id="b521e3b2a60311b6779211c6f1170d31959b428c" translate="yes" xml:space="preserve">
          <source>std::atomic&amp;lt;T&amp;gt;::fetch_add</source>
          <target state="translated">std::atomic&amp;lt;T&amp;gt;::fetch_add</target>
        </trans-unit>
        <trans-unit id="f498d1cb4783ff74c1459abf7273f1d1fb9b130f" translate="yes" xml:space="preserve">
          <source>std::atomic&amp;lt;T&amp;gt;::fetch_and</source>
          <target state="translated">std::atomic&amp;lt;T&amp;gt;::fetch_and</target>
        </trans-unit>
        <trans-unit id="8012c29b1a4ae7ecc2866fdf3ad97c2d10b4233f" translate="yes" xml:space="preserve">
          <source>std::atomic&amp;lt;T&amp;gt;::fetch_or</source>
          <target state="translated">std::atomic&amp;lt;T&amp;gt;::fetch_or</target>
        </trans-unit>
        <trans-unit id="f8c5ec2fa5b466fc7067c641b1be898af18fbfd1" translate="yes" xml:space="preserve">
          <source>std::atomic&amp;lt;T&amp;gt;::fetch_sub</source>
          <target state="translated">std::atomic&amp;lt;T&amp;gt;::fetch_sub</target>
        </trans-unit>
        <trans-unit id="0b398dd55cb42008f4cff993dee158e8481691fe" translate="yes" xml:space="preserve">
          <source>std::atomic&amp;lt;T&amp;gt;::fetch_xor</source>
          <target state="translated">std::atomic&amp;lt;T&amp;gt;::fetch_xor</target>
        </trans-unit>
        <trans-unit id="4df816349f798a1ef44b955334b1ba428d2da11b" translate="yes" xml:space="preserve">
          <source>std::atomic&amp;lt;T&amp;gt;::is_always_lock_free</source>
          <target state="translated">std::atomic&amp;lt;T&amp;gt;::is_always_lock_free</target>
        </trans-unit>
        <trans-unit id="ba8afbebf16b1d999578534acd0b91a827927ae0" translate="yes" xml:space="preserve">
          <source>std::atomic&amp;lt;T&amp;gt;::is_lock_free</source>
          <target state="translated">std::atomic&amp;lt;T&amp;gt;::is_lock_free</target>
        </trans-unit>
        <trans-unit id="6bddc89d52ec13875291763727ea68a22f043273" translate="yes" xml:space="preserve">
          <source>std::atomic&amp;lt;T&amp;gt;::load</source>
          <target state="translated">std::atomic&amp;lt;T&amp;gt;::load</target>
        </trans-unit>
        <trans-unit id="9b8ce4d627601c8e39efef4dd0af1aa3d98e7ec2" translate="yes" xml:space="preserve">
          <source>std::atomic&amp;lt;T&amp;gt;::operator T</source>
          <target state="translated">std :: atomic &amp;lt;T&amp;gt; :: operator T</target>
        </trans-unit>
        <trans-unit id="a777ceeaab792fdc6590866631951245ac664f03" translate="yes" xml:space="preserve">
          <source>std::atomic&amp;lt;T&amp;gt;::operator++,++(int),--,--(int)</source>
          <target state="translated">std::atomic&amp;lt;T&amp;gt;::operator++,++(int),--,--(int)</target>
        </trans-unit>
        <trans-unit id="1c2b0cec40088c5da2141d8ce234d67ab50be435" translate="yes" xml:space="preserve">
          <source>std::atomic&amp;lt;T&amp;gt;::operator+=,-=,&amp;amp;=,|=,^=</source>
          <target state="translated">std::atomic&amp;lt;T&amp;gt;::operator+=,-=,&amp;amp;=,|=,^=</target>
        </trans-unit>
        <trans-unit id="de1998e0e5476295b0537496d780d59629242db6" translate="yes" xml:space="preserve">
          <source>std::atomic&amp;lt;T&amp;gt;::operator=</source>
          <target state="translated">std::atomic&amp;lt;T&amp;gt;::operator=</target>
        </trans-unit>
        <trans-unit id="3d11b25073990060df7f6e36ccb7812199d5a5fb" translate="yes" xml:space="preserve">
          <source>std::atomic&amp;lt;T&amp;gt;::store</source>
          <target state="translated">std::atomic&amp;lt;T&amp;gt;::store</target>
        </trans-unit>
        <trans-unit id="eaacdf6fb747ebd70d203e93d0540b5c8f239529" translate="yes" xml:space="preserve">
          <source>std::atomic&amp;lt;std::shared_ptr&amp;gt;</source>
          <target state="translated">std::atomic&amp;lt;std::shared_ptr&amp;gt;</target>
        </trans-unit>
        <trans-unit id="6733af75a576cbf549ba4ee064db8cad89ecb0a7" translate="yes" xml:space="preserve">
          <source>std::atomic&amp;lt;std::weak_ptr&amp;gt;</source>
          <target state="translated">std::atomic&amp;lt;std::weak_ptr&amp;gt;</target>
        </trans-unit>
        <trans-unit id="bad9bc0a851aa3f20fc7829379b3d35aae2a079e" translate="yes" xml:space="preserve">
          <source>std::atomic(std::shared_ptr)</source>
          <target state="translated">std::atomic(std::shared_ptr)</target>
        </trans-unit>
        <trans-unit id="45b802ccc5db39365c62914aa60ff9222d1b43b0" translate="yes" xml:space="preserve">
          <source>std::atomic(std::weak_ptr)</source>
          <target state="translated">std::atomic(std::weak_ptr)</target>
        </trans-unit>
        <trans-unit id="11461f851781703901db839a5bad268e04c24800" translate="yes" xml:space="preserve">
          <source>std::atomic::atomic</source>
          <target state="translated">std::atomic::atomic</target>
        </trans-unit>
        <trans-unit id="3bafb61c7c1f74da45063da238c0727e10785482" translate="yes" xml:space="preserve">
          <source>std::atomic::compare_exchange_weak</source>
          <target state="translated">std::atomic::compare_exchange_weak</target>
        </trans-unit>
        <trans-unit id="a83d4ae1e3373436c6aa95795d6689fff472bb22" translate="yes" xml:space="preserve">
          <source>std::atomic::exchange</source>
          <target state="translated">std::atomic::exchange</target>
        </trans-unit>
        <trans-unit id="f743ade012da261a0d49b8c3c06beea7a5c60a7a" translate="yes" xml:space="preserve">
          <source>std::atomic::fetch_add</source>
          <target state="translated">std::atomic::fetch_add</target>
        </trans-unit>
        <trans-unit id="f89ce369577111cc834162d34dd0a04c0e176747" translate="yes" xml:space="preserve">
          <source>std::atomic::fetch_and</source>
          <target state="translated">std::atomic::fetch_and</target>
        </trans-unit>
        <trans-unit id="e08b6b280e92023dee8dceb8b5384c188cc0dcff" translate="yes" xml:space="preserve">
          <source>std::atomic::fetch_or</source>
          <target state="translated">std::atomic::fetch_or</target>
        </trans-unit>
        <trans-unit id="bb06112b8293e605ed87c461864a5e5b116cddc5" translate="yes" xml:space="preserve">
          <source>std::atomic::fetch_sub</source>
          <target state="translated">std::atomic::fetch_sub</target>
        </trans-unit>
        <trans-unit id="c1e4fa26b33d6bb3435718f99eb1777816b6a6f5" translate="yes" xml:space="preserve">
          <source>std::atomic::fetch_xor</source>
          <target state="translated">std::atomic::fetch_xor</target>
        </trans-unit>
        <trans-unit id="ae766deaaeaf130152944cfe16c155193f6db56c" translate="yes" xml:space="preserve">
          <source>std::atomic::is_always_lock_free</source>
          <target state="translated">std::atomic::is_always_lock_free</target>
        </trans-unit>
        <trans-unit id="44f5507aa23d4262beaaa2e848cb450f83ebca11" translate="yes" xml:space="preserve">
          <source>std::atomic::is_lock_free</source>
          <target state="translated">std::atomic::is_lock_free</target>
        </trans-unit>
        <trans-unit id="3ac85cf21187ef3b87dfacab5f6e8332fce2174e" translate="yes" xml:space="preserve">
          <source>std::atomic::load</source>
          <target state="translated">std::atomic::load</target>
        </trans-unit>
        <trans-unit id="5c8f1eee5de635839799d0a6155c5d9bc544def1" translate="yes" xml:space="preserve">
          <source>std::atomic::operator T</source>
          <target state="translated">std::atomic::演算子T</target>
        </trans-unit>
        <trans-unit id="3c8be488b02d314d476919556182152723eb02fd" translate="yes" xml:space="preserve">
          <source>std::atomic::operator=</source>
          <target state="translated">std::atomic::operator=</target>
        </trans-unit>
        <trans-unit id="06f9d1d1dac209a0e40065b2ee0cc22ce76dd9ab" translate="yes" xml:space="preserve">
          <source>std::atomic::operators</source>
          <target state="translated">std::atomic::operators</target>
        </trans-unit>
        <trans-unit id="e1c0859428ea402777f3457dcea1929ae31fb9ae" translate="yes" xml:space="preserve">
          <source>std::atomic::operators (int)</source>
          <target state="translated">std::atomic::演算子</target>
        </trans-unit>
        <trans-unit id="ae744f8a2e8831416ba03f9d090c398608b0e46a" translate="yes" xml:space="preserve">
          <source>std::atomic::store</source>
          <target state="translated">std::atomic::store</target>
        </trans-unit>
        <trans-unit id="0e930f8e1356348c951463759056056c037a576a" translate="yes" xml:space="preserve">
          <source>std::atomic&lt;small&gt;(std::shared_ptr)&lt;/small&gt;</source>
          <target state="translated">std::atomic&lt;small&gt;(std::shared_ptr)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c0c03a7b111b72f5fa8703b1a9b80e2ee8d41630" translate="yes" xml:space="preserve">
          <source>std::atomic&lt;small&gt;(std::weak_ptr)&lt;/small&gt;</source>
          <target state="translated">std::atomic&lt;small&gt;(std::weak_ptr)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d47daba11a3059c07e9172bc8f971697f00358bb" translate="yes" xml:space="preserve">
          <source>std::atomic_...</source>
          <target state="translated">std::atomic_...</target>
        </trans-unit>
        <trans-unit id="67b8b74bad62ae9797393b603d5e35366e35b02a" translate="yes" xml:space="preserve">
          <source>std::atomic_...&amp;lt;std::shared_ptr&amp;gt;</source>
          <target state="translated">std::atomic_...&amp;lt;std::shared_ptr&amp;gt;</target>
        </trans-unit>
        <trans-unit id="60c273034dd739d44428a5c146946051b42d10ee" translate="yes" xml:space="preserve">
          <source>std::atomic_compare_exchange_weak(std::shared_ptr) std::atomic_compare_exchange_strong(std::shared_ptr)</source>
          <target state="translated">std::atomic_compare_exchange_weak(std::shared_ptr)std::atomic_compare_exchange_strong(std::shared_ptr)</target>
        </trans-unit>
        <trans-unit id="59ddcaa0859d2ce78cdbbf32b2093b74b67326a2" translate="yes" xml:space="preserve">
          <source>std::atomic_compare_exchange_weak, std::atomic_compare_exchange_strong, std::atomic_compare_exchange_weak_explicit, std::atomic_compare_exchange_strong_explicit</source>
          <target state="translated">std::atomic_compare_exchange_weak,std::atomic_compare_exchange_strong,std::atomic_compare_exchange_weak_explicit,std::atomic_compare_exchange_strong_explicit</target>
        </trans-unit>
        <trans-unit id="43ceca15c270606d0e67eeff8cb599fdd0d72435" translate="yes" xml:space="preserve">
          <source>std::atomic_compare_exchange_weak_explicit</source>
          <target state="translated">std::atomic_compare_exchange_weak_explicit</target>
        </trans-unit>
        <trans-unit id="8f06a96e7dda20b3cb3b0a1f5387c296fc24d616" translate="yes" xml:space="preserve">
          <source>std::atomic_exchange(std::shared_ptr) std::atomic_exchange_explicit(std::shared_ptr)</source>
          <target state="translated">std::atomic_exchange(std::shared_ptr)std::atomic_exchange_explicit(std::shared_ptr)</target>
        </trans-unit>
        <trans-unit id="a7d920ef099db8bd0b3d18c29549f41ca1ab5807" translate="yes" xml:space="preserve">
          <source>std::atomic_exchange, std::atomic_exchange_explicit</source>
          <target state="translated">std::atomic_exchange,std::atomic_exchange_explicit</target>
        </trans-unit>
        <trans-unit id="88e6f63180fe976cd71a4b2dfb8f3e973a5655e0" translate="yes" xml:space="preserve">
          <source>std::atomic_exchange_explicit</source>
          <target state="translated">std::atomic_exchange_explicit</target>
        </trans-unit>
        <trans-unit id="e5a1c47efb24f97309059a079036f0bc373ab936" translate="yes" xml:space="preserve">
          <source>std::atomic_fetch_add, std::atomic_fetch_add_explicit</source>
          <target state="translated">std::atomic_fetch_add,std::atomic_fetch_add_explicit</target>
        </trans-unit>
        <trans-unit id="603b93ea70ff5fb4e9c417a51ff304ae4095ec8e" translate="yes" xml:space="preserve">
          <source>std::atomic_fetch_add_explicit</source>
          <target state="translated">std::atomic_fetch_add_explicit</target>
        </trans-unit>
        <trans-unit id="6c3746e9839f648f5d7576cc897917fcf53db7c1" translate="yes" xml:space="preserve">
          <source>std::atomic_fetch_and, std::atomic_fetch_and_explicit</source>
          <target state="translated">std::atomic_fetch_and,std::atomic_fetch_and_explicit</target>
        </trans-unit>
        <trans-unit id="555541e7760862063d5e7aba2ea0ae1f4ee0cb96" translate="yes" xml:space="preserve">
          <source>std::atomic_fetch_and_explicit</source>
          <target state="translated">std::atomic_fetch_and_explicit</target>
        </trans-unit>
        <trans-unit id="bfb79e7679dd9bc8b305b302b996bc204d80426b" translate="yes" xml:space="preserve">
          <source>std::atomic_fetch_or, std::atomic_fetch_or_explicit</source>
          <target state="translated">std::atomic_fetch_or,std::atomic_fetch_or_explicit</target>
        </trans-unit>
        <trans-unit id="c06b7135036c32c46a34a691c3106bdf00c6fe86" translate="yes" xml:space="preserve">
          <source>std::atomic_fetch_or_explicit</source>
          <target state="translated">std::atomic_fetch_or_explicit</target>
        </trans-unit>
        <trans-unit id="45eedad163bc9727814ed4a2261772c2a0ccafa8" translate="yes" xml:space="preserve">
          <source>std::atomic_fetch_sub, std::atomic_fetch_sub_explicit</source>
          <target state="translated">std::atomic_fetch_sub,std::atomic_fetch_sub_explicit</target>
        </trans-unit>
        <trans-unit id="8e036e6841aae96f45d25d745ac7d2531b803d1e" translate="yes" xml:space="preserve">
          <source>std::atomic_fetch_sub_explicit</source>
          <target state="translated">std::atomic_fetch_sub_explicit</target>
        </trans-unit>
        <trans-unit id="ae3b3b83cc8cad2d8346b64c2494663b41ad76f6" translate="yes" xml:space="preserve">
          <source>std::atomic_fetch_xor, std::atomic_fetch_xor_explicit</source>
          <target state="translated">std::atomic_fetch_xor,std::atomic_fetch_xor_explicit</target>
        </trans-unit>
        <trans-unit id="7d89b90cead24e7ef7432f8308eee92aa26cb6ae" translate="yes" xml:space="preserve">
          <source>std::atomic_fetch_xor_explicit</source>
          <target state="translated">std::atomic_fetch_xor_explicit</target>
        </trans-unit>
        <trans-unit id="7e2f7cca50e416a31bad6796cb916d1921ac8808" translate="yes" xml:space="preserve">
          <source>std::atomic_flag</source>
          <target state="translated">std::atomic_flag</target>
        </trans-unit>
        <trans-unit id="119918d509cfb0f9e550951f90cf90e53b064c94" translate="yes" xml:space="preserve">
          <source>std::atomic_flag::atomic_flag</source>
          <target state="translated">std::atomic_flag::atomic_flag</target>
        </trans-unit>
        <trans-unit id="fd289165f3e9f303d061b81aaeffaef039640e2a" translate="yes" xml:space="preserve">
          <source>std::atomic_flag::clear</source>
          <target state="translated">std::atomic_flag::clear</target>
        </trans-unit>
        <trans-unit id="af8ec38247c2c881e05ad47cc510ae4f74e62372" translate="yes" xml:space="preserve">
          <source>std::atomic_flag::operator=</source>
          <target state="translated">std::atomic_flag::operator=</target>
        </trans-unit>
        <trans-unit id="e780c42b52ee8910bad39ff9f882b0f4f51dcd9a" translate="yes" xml:space="preserve">
          <source>std::atomic_flag::test_and_set</source>
          <target state="translated">std::atomic_flag::test_and_set</target>
        </trans-unit>
        <trans-unit id="bfeca2f321e627c21904804ca5fa42d1a87cf8ef" translate="yes" xml:space="preserve">
          <source>std::atomic_flag_clear, std::atomic_flag_clear_explicit</source>
          <target state="translated">std::atomic_flag_clear,std::atomic_flag_clear_explicit</target>
        </trans-unit>
        <trans-unit id="d68ab2688030e9db36ab4c0d334f2bb0054665a7" translate="yes" xml:space="preserve">
          <source>std::atomic_flag_clear_explicit</source>
          <target state="translated">std::atomic_flag_clear_explicit</target>
        </trans-unit>
        <trans-unit id="e6e861ab209f610287597f03924731353ea34a1d" translate="yes" xml:space="preserve">
          <source>std::atomic_flag_test_and_set, std::atomic_flag_test_and_set_explicit</source>
          <target state="translated">std::atomic_flag_test_and_set,std::atomic_flag_test_and_set_explicit</target>
        </trans-unit>
        <trans-unit id="09199e43d3384ce1d286fd4a6861c13fb73ad361" translate="yes" xml:space="preserve">
          <source>std::atomic_flag_test_and_set_explicit</source>
          <target state="translated">std::atomic_flag_test_and_set_explicit</target>
        </trans-unit>
        <trans-unit id="32b46a3f3c0562037c9148200319b9c3c8a5260d" translate="yes" xml:space="preserve">
          <source>std::atomic_init</source>
          <target state="translated">std::atomic_init</target>
        </trans-unit>
        <trans-unit id="0b5c913e228dff7553c3492539c6a653a136b8fa" translate="yes" xml:space="preserve">
          <source>std::atomic_is_lock_free</source>
          <target state="translated">std::atomic_is_lock_free</target>
        </trans-unit>
        <trans-unit id="7426f36407c130af5cad77532821bc261b06b13d" translate="yes" xml:space="preserve">
          <source>std::atomic_is_lock_free(std::shared_ptr)</source>
          <target state="translated">std::atomic_is_lock_free(std::shared_ptr)</target>
        </trans-unit>
        <trans-unit id="026645c3ac317a0e48a4dd0d663e4abd2ef81f8f" translate="yes" xml:space="preserve">
          <source>std::atomic_is_lock_free(std::shared_ptr)std::atomic_load(std::shared_ptr)std::atomic_load_explicit(std::shared_ptr)std::atomic_store(std::shared_ptr)std::atomic_store_explicit(std::shared_ptr)std::atomic_exchange(std::shared_ptr)std::atomic_exchange_explicit(std::shared_ptr)std::atomic_compare_exchange_weak(std::shared_ptr)std::atomic_compare_exchange_strong(std::shared_ptr)std::atomic_compare_exchange_weak_explicit(std::shared_ptr)std::atomic_compare_exchange_strong_explicit(std::shared_ptr)</source>
          <target state="translated">std::atomic_is_lock_free(std::shared_ptr)std::atomic_load(std::shared_ptr)std::atomic_load_explicit(std::shared_ptr)std::atomic_store(std::shared_ptr)std::atomic_store_explicit(std::shared_ptr)std::atomic_exchange(std::shared_ptr)std::atomic_exchange_explicit(std::shared_ptr)std::atomic_compare_exchange_weak(std::shared_ptr)std::atomic_compare_exchange_strong(std::shared_ptr)std::atomic_compare_exchange_weak_explicit(std::shared_ptr)std::atomic_compare_exchange_strong_explicit(std::shared_ptr)</target>
        </trans-unit>
        <trans-unit id="55cae8dd1ff2297223d3bf6a846f81b0978fa307" translate="yes" xml:space="preserve">
          <source>std::atomic_is_lock_free, ATOMIC_xxx_LOCK_FREE</source>
          <target state="translated">std::atomic_is_lock_free,ATOMIC_xxx_LOCK_FREE</target>
        </trans-unit>
        <trans-unit id="2e962929c1c8531648847ed5c86a307a7d618ead" translate="yes" xml:space="preserve">
          <source>std::atomic_load(std::shared_ptr) std::atomic_load_explicit(std::shared_ptr)</source>
          <target state="translated">std::atomic_load(std::shared_ptr)std::atomic_load_explicit(std::shared_ptr)</target>
        </trans-unit>
        <trans-unit id="55166d8450edf36fc113690f1866fc1148f479e4" translate="yes" xml:space="preserve">
          <source>std::atomic_load, std::atomic_load_explicit</source>
          <target state="translated">std::atomic_load,std::atomic_load_explicit</target>
        </trans-unit>
        <trans-unit id="be7eebcc934c6735d6fb076633dc69508b560626" translate="yes" xml:space="preserve">
          <source>std::atomic_load_explicit</source>
          <target state="translated">std::atomic_load_explicit</target>
        </trans-unit>
        <trans-unit id="f76a78a964457c8c2b64dc145c952e1825e06291" translate="yes" xml:space="preserve">
          <source>std::atomic_ref</source>
          <target state="translated">std::atomic_ref</target>
        </trans-unit>
        <trans-unit id="59ec267629744f951451bb88466f724fece9c100" translate="yes" xml:space="preserve">
          <source>std::atomic_ref&amp;lt;T&amp;gt;::atomic_ref</source>
          <target state="translated">std::atomic_ref&amp;lt;T&amp;gt;::atomic_ref</target>
        </trans-unit>
        <trans-unit id="fa6757cbcd5d88628b3579275e664270b038da6e" translate="yes" xml:space="preserve">
          <source>std::atomic_ref&amp;lt;T&amp;gt;::compare_exchange_weak, std::atomic_ref&amp;lt;T&amp;gt;::compare_exchange_strong</source>
          <target state="translated">std :: atomic_ref &amp;lt;T&amp;gt; :: compare_exchange_weak、std :: atomic_ref &amp;lt;T&amp;gt; :: compare_exchange_strong</target>
        </trans-unit>
        <trans-unit id="b8ba2f811eb8defdcac936c4ad6d2b85d8124f86" translate="yes" xml:space="preserve">
          <source>std::atomic_ref&amp;lt;T&amp;gt;::exchange</source>
          <target state="translated">std::atomic_ref&amp;lt;T&amp;gt;::exchange</target>
        </trans-unit>
        <trans-unit id="d63e01c7bfb1aad996eb7086e2265d17937ed0d1" translate="yes" xml:space="preserve">
          <source>std::atomic_ref&amp;lt;T&amp;gt;::fetch_add</source>
          <target state="translated">std::atomic_ref&amp;lt;T&amp;gt;::fetch_add</target>
        </trans-unit>
        <trans-unit id="81456a5347eb552d886467b0af6c9885e2b8817f" translate="yes" xml:space="preserve">
          <source>std::atomic_ref&amp;lt;T&amp;gt;::fetch_and</source>
          <target state="translated">std::atomic_ref&amp;lt;T&amp;gt;::fetch_and</target>
        </trans-unit>
        <trans-unit id="19dd8aad3426ac861e85636cde3093327195a05d" translate="yes" xml:space="preserve">
          <source>std::atomic_ref&amp;lt;T&amp;gt;::fetch_or</source>
          <target state="translated">std::atomic_ref&amp;lt;T&amp;gt;::fetch_or</target>
        </trans-unit>
        <trans-unit id="da9befb0421cc0fe5d2cde493f2cab6d3766a83a" translate="yes" xml:space="preserve">
          <source>std::atomic_ref&amp;lt;T&amp;gt;::fetch_sub</source>
          <target state="translated">std::atomic_ref&amp;lt;T&amp;gt;::fetch_sub</target>
        </trans-unit>
        <trans-unit id="41bdbd20b3737610dd4a3a67f8076c0870b8d444" translate="yes" xml:space="preserve">
          <source>std::atomic_ref&amp;lt;T&amp;gt;::fetch_xor</source>
          <target state="translated">std::atomic_ref&amp;lt;T&amp;gt;::fetch_xor</target>
        </trans-unit>
        <trans-unit id="ac97e923eaf56ad074d6f852d45468111368e3a1" translate="yes" xml:space="preserve">
          <source>std::atomic_ref&amp;lt;T&amp;gt;::is_always_lock_free</source>
          <target state="translated">std::atomic_ref&amp;lt;T&amp;gt;::is_always_lock_free</target>
        </trans-unit>
        <trans-unit id="c45fa94836f5f7b15b2b303e96f974acfcc7cf38" translate="yes" xml:space="preserve">
          <source>std::atomic_ref&amp;lt;T&amp;gt;::is_lock_free</source>
          <target state="translated">std::atomic_ref&amp;lt;T&amp;gt;::is_lock_free</target>
        </trans-unit>
        <trans-unit id="528f1835bc497381961b2a38285527dd8110b478" translate="yes" xml:space="preserve">
          <source>std::atomic_ref&amp;lt;T&amp;gt;::load</source>
          <target state="translated">std::atomic_ref&amp;lt;T&amp;gt;::load</target>
        </trans-unit>
        <trans-unit id="365e1fb716a1086c163c0494ed16663af5a0747e" translate="yes" xml:space="preserve">
          <source>std::atomic_ref&amp;lt;T&amp;gt;::operator T</source>
          <target state="translated">std :: atomic_ref &amp;lt;T&amp;gt; :: operator T</target>
        </trans-unit>
        <trans-unit id="a60b2c46b9df5596363cbd4c366baa1a91ca5c80" translate="yes" xml:space="preserve">
          <source>std::atomic_ref&amp;lt;T&amp;gt;::operator++,++(int),--,--(int)</source>
          <target state="translated">std::atomic_ref&amp;lt;T&amp;gt;::operator++,++(int),--,--(int)</target>
        </trans-unit>
        <trans-unit id="28ff7a3a1364cb1acc79bb62a9efbfdbd980af23" translate="yes" xml:space="preserve">
          <source>std::atomic_ref&amp;lt;T&amp;gt;::operator+=,-=,&amp;amp;=,|=,^=</source>
          <target state="translated">std::atomic_ref&amp;lt;T&amp;gt;::operator+=,-=,&amp;amp;=,|=,^=</target>
        </trans-unit>
        <trans-unit id="95d4275ce5b0058d62a3809a9432670168d034ba" translate="yes" xml:space="preserve">
          <source>std::atomic_ref&amp;lt;T&amp;gt;::operator=</source>
          <target state="translated">std::atomic_ref&amp;lt;T&amp;gt;::operator=</target>
        </trans-unit>
        <trans-unit id="2368b3f150ca210e941fe8726011a5d0df624178" translate="yes" xml:space="preserve">
          <source>std::atomic_ref&amp;lt;T&amp;gt;::required_alignment</source>
          <target state="translated">std::atomic_ref&amp;lt;T&amp;gt;::required_alignment</target>
        </trans-unit>
        <trans-unit id="0f4bdd9fe3ebdf93c1c51af477ca648750ab7a10" translate="yes" xml:space="preserve">
          <source>std::atomic_ref&amp;lt;T&amp;gt;::store</source>
          <target state="translated">std::atomic_ref&amp;lt;T&amp;gt;::store</target>
        </trans-unit>
        <trans-unit id="6faaec95b783d59fca9b395da2e50f09e7af51b6" translate="yes" xml:space="preserve">
          <source>std::atomic_ref::atomic_ref</source>
          <target state="translated">std::atomic_ref::atomic_ref</target>
        </trans-unit>
        <trans-unit id="ff52cdb46d36fadf918cd89560a8857536dc6523" translate="yes" xml:space="preserve">
          <source>std::atomic_ref::compare_exchange_weak</source>
          <target state="translated">std::atomic_ref::compare_exchange_weak</target>
        </trans-unit>
        <trans-unit id="c490e04d65d62172e0b0dddd410d6bdaff5ca33e" translate="yes" xml:space="preserve">
          <source>std::atomic_ref::exchange</source>
          <target state="translated">std::atomic_ref::exchange</target>
        </trans-unit>
        <trans-unit id="c9f68c467b6148fdf13b8cf9d10e94467b1bc1ea" translate="yes" xml:space="preserve">
          <source>std::atomic_ref::fetch_add</source>
          <target state="translated">std::atomic_ref::fetch_add</target>
        </trans-unit>
        <trans-unit id="38bd0b64a57f543353ba381e3e9db6343951ed1e" translate="yes" xml:space="preserve">
          <source>std::atomic_ref::fetch_and</source>
          <target state="translated">std::atomic_ref::fetch_and</target>
        </trans-unit>
        <trans-unit id="cd5a626d626ea0e9839e62d7c7a2d0e508b8bb0a" translate="yes" xml:space="preserve">
          <source>std::atomic_ref::fetch_or</source>
          <target state="translated">std::atomic_ref::fetch_or</target>
        </trans-unit>
        <trans-unit id="e6ee3ed0885b489c8bc3503aab5946735fd86e3c" translate="yes" xml:space="preserve">
          <source>std::atomic_ref::fetch_sub</source>
          <target state="translated">std::atomic_ref::fetch_sub</target>
        </trans-unit>
        <trans-unit id="dccbac358b27829cf31608e8b017b3ba086c0acf" translate="yes" xml:space="preserve">
          <source>std::atomic_ref::fetch_xor</source>
          <target state="translated">std::atomic_ref::fetch_xor</target>
        </trans-unit>
        <trans-unit id="6f0dfcba7250f9e2a9d47b96e63472b4f5474f2f" translate="yes" xml:space="preserve">
          <source>std::atomic_ref::is_always_lock_free</source>
          <target state="translated">std::atomic_ref::is_always_lock_free</target>
        </trans-unit>
        <trans-unit id="1d1b37bd3237e4be5cd042e3d21a344ba6dae37a" translate="yes" xml:space="preserve">
          <source>std::atomic_ref::is_lock_free</source>
          <target state="translated">std::atomic_ref::is_lock_free</target>
        </trans-unit>
        <trans-unit id="3586b288f49377bd387c113a9ee1d2d833f4c608" translate="yes" xml:space="preserve">
          <source>std::atomic_ref::load</source>
          <target state="translated">std::atomic_ref::load</target>
        </trans-unit>
        <trans-unit id="ef79b1797443ab4364fbf4175cb8e1a57bcab2b3" translate="yes" xml:space="preserve">
          <source>std::atomic_ref::operator T</source>
          <target state="translated">std::atomic_ref::演算子T</target>
        </trans-unit>
        <trans-unit id="72ec42082e5352c5dec2387e38949e93c64b967a" translate="yes" xml:space="preserve">
          <source>std::atomic_ref::operator=</source>
          <target state="translated">std::atomic_ref::operator=</target>
        </trans-unit>
        <trans-unit id="1e84e73e3ebaee6ac41f0cfc0c3dc69f0e03538a" translate="yes" xml:space="preserve">
          <source>std::atomic_ref::operators</source>
          <target state="translated">std::atomic_ref::operators</target>
        </trans-unit>
        <trans-unit id="3d566f3871118c02ee560080313475bd873b9da4" translate="yes" xml:space="preserve">
          <source>std::atomic_ref::operators (int)</source>
          <target state="translated">std::atomic_ref::演算子</target>
        </trans-unit>
        <trans-unit id="b594fd25ee601ff6c0a69409d45268fc66c308c7" translate="yes" xml:space="preserve">
          <source>std::atomic_ref::required_alignment</source>
          <target state="translated">std::atomic_ref::required_alignment</target>
        </trans-unit>
        <trans-unit id="5fa10b0919a31baeba00cc2e5882d3d886526d3e" translate="yes" xml:space="preserve">
          <source>std::atomic_ref::store</source>
          <target state="translated">std::atomic_ref::store</target>
        </trans-unit>
        <trans-unit id="a833fbedf15fdfd4100a4b23617922a92815fcd0" translate="yes" xml:space="preserve">
          <source>std::atomic_signal_fence</source>
          <target state="translated">std::atomic_signal_fence</target>
        </trans-unit>
        <trans-unit id="d4ea0736b66c80a7504b4124ed2632228a7f74b2" translate="yes" xml:space="preserve">
          <source>std::atomic_store(std::shared_ptr) std::atomic_store_explicit(std::shared_ptr)</source>
          <target state="translated">std::atomic_store(std::shared_ptr)std::atomic_store_explicit(std::shared_ptr)</target>
        </trans-unit>
        <trans-unit id="9324efa038be54a6f917132dfa2b5184570478b5" translate="yes" xml:space="preserve">
          <source>std::atomic_store, std::atomic_store_explicit</source>
          <target state="translated">std::atomic_store,std::atomic_store_explicit</target>
        </trans-unit>
        <trans-unit id="a03d9196c309730e6cb9632809b3b14ebcdb8445" translate="yes" xml:space="preserve">
          <source>std::atomic_store_explicit</source>
          <target state="translated">std::atomic_store_explicit</target>
        </trans-unit>
        <trans-unit id="e519c78c598d81f80c53e12194f4d19ea3f7fe1e" translate="yes" xml:space="preserve">
          <source>std::atomic_thread_fence</source>
          <target state="translated">std::atomic_thread_fence</target>
        </trans-unit>
        <trans-unit id="31b6e88c0aa576723c0c327438b35501172fbe47" translate="yes" xml:space="preserve">
          <source>std::auto_ptr</source>
          <target state="translated">std::auto_ptr</target>
        </trans-unit>
        <trans-unit id="5d287d24392cb9c0b654945d5c711ce73c01b14e" translate="yes" xml:space="preserve">
          <source>std::auto_ptr&amp;lt;T&amp;gt;::auto_ptr</source>
          <target state="translated">std::auto_ptr&amp;lt;T&amp;gt;::auto_ptr</target>
        </trans-unit>
        <trans-unit id="916658da062681ceebf17f01ea6e5353d883741b" translate="yes" xml:space="preserve">
          <source>std::auto_ptr&amp;lt;T&amp;gt;::get</source>
          <target state="translated">std::auto_ptr&amp;lt;T&amp;gt;::get</target>
        </trans-unit>
        <trans-unit id="8c7a05083816796a015034947d7eea872dcb97b2" translate="yes" xml:space="preserve">
          <source>std::auto_ptr&amp;lt;T&amp;gt;::operator auto_ptr&amp;lt;Y&amp;gt;</source>
          <target state="translated">std :: auto_ptr &amp;lt;T&amp;gt; :: operator auto_ptr &amp;lt;Y&amp;gt;</target>
        </trans-unit>
        <trans-unit id="f9d37b782b8e7c6a08fd5536a298f1335ad9b827" translate="yes" xml:space="preserve">
          <source>std::auto_ptr&amp;lt;T&amp;gt;::operator*, std::auto_ptr&amp;lt;T&amp;gt;::operator-&amp;gt;</source>
          <target state="translated">std :: auto_ptr &amp;lt;T&amp;gt; :: operator *、std :: auto_ptr &amp;lt;T&amp;gt; :: operator-&amp;gt;</target>
        </trans-unit>
        <trans-unit id="1e3c9e87674ac432c19757f1f613a066a4882c4e" translate="yes" xml:space="preserve">
          <source>std::auto_ptr&amp;lt;T&amp;gt;::operator=</source>
          <target state="translated">std::auto_ptr&amp;lt;T&amp;gt;::operator=</target>
        </trans-unit>
        <trans-unit id="714649776a6e8d8de6e228474bb51847df9d4d38" translate="yes" xml:space="preserve">
          <source>std::auto_ptr&amp;lt;T&amp;gt;::release</source>
          <target state="translated">std::auto_ptr&amp;lt;T&amp;gt;::release</target>
        </trans-unit>
        <trans-unit id="300c8479e1ccfe8ebf729dcd070a62cefb1ebe6f" translate="yes" xml:space="preserve">
          <source>std::auto_ptr&amp;lt;T&amp;gt;::reset</source>
          <target state="translated">std::auto_ptr&amp;lt;T&amp;gt;::reset</target>
        </trans-unit>
        <trans-unit id="613a56ed5bd7030de7db50d0dd2b587ec8d96d47" translate="yes" xml:space="preserve">
          <source>std::auto_ptr&amp;lt;T&amp;gt;::~auto_ptr</source>
          <target state="translated">std::auto_ptr&amp;lt;T&amp;gt;::~auto_ptr</target>
        </trans-unit>
        <trans-unit id="4f0c8ba9be8ee81bab00fb40a1fcf8ea349f05b8" translate="yes" xml:space="preserve">
          <source>std::auto_ptr::auto_ptr</source>
          <target state="translated">std::auto_ptr::auto_ptr</target>
        </trans-unit>
        <trans-unit id="d64b6d1d5d83f27d67843cf28abbc0c3cf07a374" translate="yes" xml:space="preserve">
          <source>std::auto_ptr::get</source>
          <target state="translated">std::auto_ptr::get</target>
        </trans-unit>
        <trans-unit id="bf8d2202d3b9239d486abd455d9351f26c4fd219" translate="yes" xml:space="preserve">
          <source>std::auto_ptr::operator auto_ptr&amp;lt;Y&amp;gt;</source>
          <target state="translated">std :: auto_ptr :: operator auto_ptr &amp;lt;Y&amp;gt;</target>
        </trans-unit>
        <trans-unit id="d5bfd61101b16ff61644409d918e9fb7d71c316b" translate="yes" xml:space="preserve">
          <source>std::auto_ptr::operator=</source>
          <target state="translated">std::auto_ptr::operator=</target>
        </trans-unit>
        <trans-unit id="7b782074af01b77ac6a4ca5ef916cf8c858199a0" translate="yes" xml:space="preserve">
          <source>std::auto_ptr::operators</source>
          <target state="translated">std::auto_ptr::operators</target>
        </trans-unit>
        <trans-unit id="9ef1943c3526ec7d35aca641170ed6503c9e1416" translate="yes" xml:space="preserve">
          <source>std::auto_ptr::release</source>
          <target state="translated">std::auto_ptr::release</target>
        </trans-unit>
        <trans-unit id="d9695bf7e56209c841b3587232474fa8a354eacd" translate="yes" xml:space="preserve">
          <source>std::auto_ptr::reset</source>
          <target state="translated">std::auto_ptr::reset</target>
        </trans-unit>
        <trans-unit id="798684ce2f1228548671c1672a4e87f4fcdfe8ea" translate="yes" xml:space="preserve">
          <source>std::auto_ptr::~auto_ptr</source>
          <target state="translated">std::auto_ptr::~auto_ptr</target>
        </trans-unit>
        <trans-unit id="da46f65d0e998c7e2bead60a313150c21bb90c9a" translate="yes" xml:space="preserve">
          <source>std::back_insert_iterator</source>
          <target state="translated">std::back_insert_iterator</target>
        </trans-unit>
        <trans-unit id="8f1c7ba6355a1be8bf730e9de015f149ca815282" translate="yes" xml:space="preserve">
          <source>std::back_insert_iterator&amp;lt;Container&amp;gt;::back_insert_iterator</source>
          <target state="translated">std::back_insert_iterator&amp;lt;Container&amp;gt;::back_insert_iterator</target>
        </trans-unit>
        <trans-unit id="1b7a9b34ff9e1d926494f7b95cfe47e66dd7ca88" translate="yes" xml:space="preserve">
          <source>std::back_insert_iterator&amp;lt;Container&amp;gt;::operator*</source>
          <target state="translated">std::back_insert_iterator&amp;lt;Container&amp;gt;::operator*</target>
        </trans-unit>
        <trans-unit id="0f939fb49ff32ecd3642b98703e599358d8489ed" translate="yes" xml:space="preserve">
          <source>std::back_insert_iterator&amp;lt;Container&amp;gt;::operator=</source>
          <target state="translated">std::back_insert_iterator&amp;lt;Container&amp;gt;::operator=</target>
        </trans-unit>
        <trans-unit id="0af692ca1b98c3a8715910b38cb87402dffff7dc" translate="yes" xml:space="preserve">
          <source>std::back_insert_iterator::back_insert_iterator</source>
          <target state="translated">std::back_insert_iterator::back_insert_iterator</target>
        </trans-unit>
        <trans-unit id="c0ebdf5e62cfb2a7e1b4d966b378ba36500ef5ae" translate="yes" xml:space="preserve">
          <source>std::back_insert_iterator::operator*</source>
          <target state="translated">std::back_insert_iterator::operator*</target>
        </trans-unit>
        <trans-unit id="39d87e95b718f7ea3c392d56618d248c9633d063" translate="yes" xml:space="preserve">
          <source>std::back_insert_iterator::operator=</source>
          <target state="translated">std::back_insert_iterator::operator=</target>
        </trans-unit>
        <trans-unit id="9ce395ac68bf83fca37d2062dccf58d75296678f" translate="yes" xml:space="preserve">
          <source>std::back_inserter</source>
          <target state="translated">std::back_inserter</target>
        </trans-unit>
        <trans-unit id="37ef44b9153f30e31f5739b1abd4c936a2eb613e" translate="yes" xml:space="preserve">
          <source>std::bad_alloc</source>
          <target state="translated">std::bad_alloc</target>
        </trans-unit>
        <trans-unit id="58fee03f39e59fe52f593fcc44e04bf9e72064f3" translate="yes" xml:space="preserve">
          <source>std::bad_alloc::bad_alloc</source>
          <target state="translated">std::bad_alloc::bad_alloc</target>
        </trans-unit>
        <trans-unit id="a2f9b1cd60808bf68962a9b59d5836cb62ed3fd7" translate="yes" xml:space="preserve">
          <source>std::bad_alloc::operator=</source>
          <target state="translated">std::bad_alloc::operator=</target>
        </trans-unit>
        <trans-unit id="badbda8571f422eb282a8b784279f2f28d1a333b" translate="yes" xml:space="preserve">
          <source>std::bad_alloc::what</source>
          <target state="translated">std::bad_alloc::what</target>
        </trans-unit>
        <trans-unit id="50b07e53978e11709cda898b7e1851b68e64b7b9" translate="yes" xml:space="preserve">
          <source>std::bad_any_cast</source>
          <target state="translated">std::bad_any_cast</target>
        </trans-unit>
        <trans-unit id="770dfafc97ec7d90fb60e3d3e039a7053ea5afb8" translate="yes" xml:space="preserve">
          <source>std::bad_array_new_length</source>
          <target state="translated">std::bad_array_new_length</target>
        </trans-unit>
        <trans-unit id="48948f0284c9f0a404228c9bea6fa61a055b6dcd" translate="yes" xml:space="preserve">
          <source>std::bad_array_new_length::bad_array_new_length</source>
          <target state="translated">std::bad_array_new_length::bad_array_new_length</target>
        </trans-unit>
        <trans-unit id="510c35dbfcf73e1e13bf7c8f14a868ff6f7723dc" translate="yes" xml:space="preserve">
          <source>std::bad_cast</source>
          <target state="translated">std::bad_cast</target>
        </trans-unit>
        <trans-unit id="3d9b2490df81b72757b6932b55dbeafb417b767f" translate="yes" xml:space="preserve">
          <source>std::bad_cast::bad_cast</source>
          <target state="translated">std::bad_cast::bad_cast</target>
        </trans-unit>
        <trans-unit id="bb3ec99854fb78ffbf4e2002c8776d43afae9795" translate="yes" xml:space="preserve">
          <source>std::bad_exception</source>
          <target state="translated">std::bad_exception</target>
        </trans-unit>
        <trans-unit id="b0a12af885d6569362e240220a06dc7f66a1466e" translate="yes" xml:space="preserve">
          <source>std::bad_exception::bad_exception</source>
          <target state="translated">std::bad_exception::bad_exception</target>
        </trans-unit>
        <trans-unit id="bb8e67b9747ccc9d76535637ac0c9cdb57d98970" translate="yes" xml:space="preserve">
          <source>std::bad_exception::operator=</source>
          <target state="translated">std::bad_exception::operator=</target>
        </trans-unit>
        <trans-unit id="2d0ccdf8f0d389b9404e103be20f7f81d89a15ee" translate="yes" xml:space="preserve">
          <source>std::bad_exception::what</source>
          <target state="translated">std::bad_exception::what</target>
        </trans-unit>
        <trans-unit id="cb6e1902b9d0a67714b21d854d14d96c41d5ee80" translate="yes" xml:space="preserve">
          <source>std::bad_function_call</source>
          <target state="translated">std::bad_function_call</target>
        </trans-unit>
        <trans-unit id="bec39085e35e49db15425ab79e602c8be9acf931" translate="yes" xml:space="preserve">
          <source>std::bad_function_call::bad_function_call()</source>
          <target state="translated">std::bad_function_call::bad_function_call()</target>
        </trans-unit>
        <trans-unit id="c45d5d2188d9dd26482566a54f80e4d54bdde100" translate="yes" xml:space="preserve">
          <source>std::bad_optional_access</source>
          <target state="translated">std::bad_optional_access</target>
        </trans-unit>
        <trans-unit id="b4c33b4d406ff85107675b498695e24fe7269aa8" translate="yes" xml:space="preserve">
          <source>std::bad_typeid</source>
          <target state="translated">std::bad_typeid</target>
        </trans-unit>
        <trans-unit id="3ca3ac984ef1fa116e19e6019df84c9887c6713b" translate="yes" xml:space="preserve">
          <source>std::bad_typeid::bad_typeid</source>
          <target state="translated">std::bad_typeid::bad_typeid</target>
        </trans-unit>
        <trans-unit id="c4b9a04330be0883bb4455390b52c3dea12cc09b" translate="yes" xml:space="preserve">
          <source>std::bad_variant_access</source>
          <target state="translated">std::bad_variant_access</target>
        </trans-unit>
        <trans-unit id="5f93de512f5b41818242fa2a1cda7e1a98d17202" translate="yes" xml:space="preserve">
          <source>std::bad_variant_access ::bad_variant_access()</source>
          <target state="translated">std::bad_variant_access ::bad_variant_access()</target>
        </trans-unit>
        <trans-unit id="bb4d34f1ee1363b0d448a277ea7520247faea860" translate="yes" xml:space="preserve">
          <source>std::bad_weak_ptr</source>
          <target state="translated">std::bad_weak_ptr</target>
        </trans-unit>
        <trans-unit id="593831e68680d552d43b96808537eebc1414c781" translate="yes" xml:space="preserve">
          <source>std::bad_weak_ptr ::bad_weak_ptr()</source>
          <target state="translated">std::bad_weak_ptr ::bad_weak_ptr()</target>
        </trans-unit>
        <trans-unit id="4b078745fd209999fb554665ca677f5b042d959c" translate="yes" xml:space="preserve">
          <source>std::basic_filebuf</source>
          <target state="translated">std::basic_filebuf</target>
        </trans-unit>
        <trans-unit id="00397b0262948286652de811b43ecd68e8866630" translate="yes" xml:space="preserve">
          <source>std::basic_filebuf&amp;lt;CharT,Traits&amp;gt;::basic_filebuf</source>
          <target state="translated">std::basic_filebuf&amp;lt;CharT,Traits&amp;gt;::basic_filebuf</target>
        </trans-unit>
        <trans-unit id="668d02a091d021f1b35cc4e47ddbd16e8e5e56a0" translate="yes" xml:space="preserve">
          <source>std::basic_filebuf&amp;lt;CharT,Traits&amp;gt;::close</source>
          <target state="translated">std::basic_filebuf&amp;lt;CharT,Traits&amp;gt;::close</target>
        </trans-unit>
        <trans-unit id="8aa07029104a6ffcf3cb68bd8d64d06280bf4ac2" translate="yes" xml:space="preserve">
          <source>std::basic_filebuf&amp;lt;CharT,Traits&amp;gt;::imbue</source>
          <target state="translated">std::basic_filebuf&amp;lt;CharT,Traits&amp;gt;::imbue</target>
        </trans-unit>
        <trans-unit id="5f52241dc17ab16ad54694cddecfb2c7b13ccb7f" translate="yes" xml:space="preserve">
          <source>std::basic_filebuf&amp;lt;CharT,Traits&amp;gt;::is_open</source>
          <target state="translated">std::basic_filebuf&amp;lt;CharT,Traits&amp;gt;::is_open</target>
        </trans-unit>
        <trans-unit id="3a8e7fa0bf437d4d368fa505d410f924530cfc7b" translate="yes" xml:space="preserve">
          <source>std::basic_filebuf&amp;lt;CharT,Traits&amp;gt;::open</source>
          <target state="translated">std::basic_filebuf&amp;lt;CharT,Traits&amp;gt;::open</target>
        </trans-unit>
        <trans-unit id="a71f13a5d3889c3390af2691a1393223ed7e18ed" translate="yes" xml:space="preserve">
          <source>std::basic_filebuf&amp;lt;CharT,Traits&amp;gt;::operator=</source>
          <target state="translated">std::basic_filebuf&amp;lt;CharT,Traits&amp;gt;::operator=</target>
        </trans-unit>
        <trans-unit id="1877597754a6faffce3e8e4119b0091ea1a966d7" translate="yes" xml:space="preserve">
          <source>std::basic_filebuf&amp;lt;CharT,Traits&amp;gt;::overflow</source>
          <target state="translated">std::basic_filebuf&amp;lt;CharT,Traits&amp;gt;::overflow</target>
        </trans-unit>
        <trans-unit id="fd27e4480e4ed5f8707e964094619a0286dbb012" translate="yes" xml:space="preserve">
          <source>std::basic_filebuf&amp;lt;CharT,Traits&amp;gt;::pbackfail</source>
          <target state="translated">std::basic_filebuf&amp;lt;CharT,Traits&amp;gt;::pbackfail</target>
        </trans-unit>
        <trans-unit id="9c19ecbb0f50f0483ddcdbad944fd89f2ca01b40" translate="yes" xml:space="preserve">
          <source>std::basic_filebuf&amp;lt;CharT,Traits&amp;gt;::seekoff</source>
          <target state="translated">std::basic_filebuf&amp;lt;CharT,Traits&amp;gt;::seekoff</target>
        </trans-unit>
        <trans-unit id="be95c68f185a59859fcaae60ba049bdbefeca015" translate="yes" xml:space="preserve">
          <source>std::basic_filebuf&amp;lt;CharT,Traits&amp;gt;::seekpos</source>
          <target state="translated">std::basic_filebuf&amp;lt;CharT,Traits&amp;gt;::seekpos</target>
        </trans-unit>
        <trans-unit id="da5bd2a22113475d4daebb3d40a08c104397c86d" translate="yes" xml:space="preserve">
          <source>std::basic_filebuf&amp;lt;CharT,Traits&amp;gt;::setbuf</source>
          <target state="translated">std::basic_filebuf&amp;lt;CharT,Traits&amp;gt;::setbuf</target>
        </trans-unit>
        <trans-unit id="84ad32b38483010db073b17ea250c82bed1c4ef7" translate="yes" xml:space="preserve">
          <source>std::basic_filebuf&amp;lt;CharT,Traits&amp;gt;::showmanyc</source>
          <target state="translated">std::basic_filebuf&amp;lt;CharT,Traits&amp;gt;::showmanyc</target>
        </trans-unit>
        <trans-unit id="934a6a33fdce3821182ec5d21c739ef6023552a0" translate="yes" xml:space="preserve">
          <source>std::basic_filebuf&amp;lt;CharT,Traits&amp;gt;::swap</source>
          <target state="translated">std::basic_filebuf&amp;lt;CharT,Traits&amp;gt;::swap</target>
        </trans-unit>
        <trans-unit id="18346c4783956b4d1df2c48ed38d933f926577a9" translate="yes" xml:space="preserve">
          <source>std::basic_filebuf&amp;lt;CharT,Traits&amp;gt;::sync</source>
          <target state="translated">std::basic_filebuf&amp;lt;CharT,Traits&amp;gt;::sync</target>
        </trans-unit>
        <trans-unit id="07c9068ceacee5325713fe849f072c02d3f3ba95" translate="yes" xml:space="preserve">
          <source>std::basic_filebuf&amp;lt;CharT,Traits&amp;gt;::uflow</source>
          <target state="translated">std::basic_filebuf&amp;lt;CharT,Traits&amp;gt;::uflow</target>
        </trans-unit>
        <trans-unit id="ea3425a47b704aa5d59702fe9d414bdd31613000" translate="yes" xml:space="preserve">
          <source>std::basic_filebuf&amp;lt;CharT,Traits&amp;gt;::underflow</source>
          <target state="translated">std::basic_filebuf&amp;lt;CharT,Traits&amp;gt;::underflow</target>
        </trans-unit>
        <trans-unit id="b3eeb79aa40a2243211258c51cd3ccd4af4bffca" translate="yes" xml:space="preserve">
          <source>std::basic_filebuf&amp;lt;CharT,Traits&amp;gt;::~basic_filebuf</source>
          <target state="translated">std::basic_filebuf&amp;lt;CharT,Traits&amp;gt;::~basic_filebuf</target>
        </trans-unit>
        <trans-unit id="c09dddb0f87945d1ab1b5ed13d3757857bfc0240" translate="yes" xml:space="preserve">
          <source>std::basic_filebuf::basic_filebuf</source>
          <target state="translated">std::basic_filebuf::basic_filebuf</target>
        </trans-unit>
        <trans-unit id="4ca38b2d3bad14c673819c92ee6bb3b9081d4347" translate="yes" xml:space="preserve">
          <source>std::basic_filebuf::close</source>
          <target state="translated">std::basic_filebuf::close</target>
        </trans-unit>
        <trans-unit id="2abedad2efd7e2c2fbe98cfb72db46c311715b01" translate="yes" xml:space="preserve">
          <source>std::basic_filebuf::imbue</source>
          <target state="translated">std::basic_filebuf::imbue</target>
        </trans-unit>
        <trans-unit id="412b7a9c0fb9d3819bf599c6f212095f13c3877d" translate="yes" xml:space="preserve">
          <source>std::basic_filebuf::is_open</source>
          <target state="translated">std::basic_filebuf::is_open</target>
        </trans-unit>
        <trans-unit id="9f1125a682755d336042bf918ee76ee3b0e01359" translate="yes" xml:space="preserve">
          <source>std::basic_filebuf::open</source>
          <target state="translated">std::basic_filebuf::open</target>
        </trans-unit>
        <trans-unit id="0ee47fa6ad536cade49c1add7b35aeef812aab5a" translate="yes" xml:space="preserve">
          <source>std::basic_filebuf::operator=</source>
          <target state="translated">std::basic_filebuf::operator=</target>
        </trans-unit>
        <trans-unit id="977b8edbe64889d71743123a8323af07a36c4bfd" translate="yes" xml:space="preserve">
          <source>std::basic_filebuf::overflow</source>
          <target state="translated">std::basic_filebuf::overflow</target>
        </trans-unit>
        <trans-unit id="31a65e674a767d2934f7bdb43a36e70478d77b26" translate="yes" xml:space="preserve">
          <source>std::basic_filebuf::pbackfail</source>
          <target state="translated">std::basic_filebuf::pbackfail</target>
        </trans-unit>
        <trans-unit id="c1e5dc2607c699cb39318943f606a1f88bfe3e32" translate="yes" xml:space="preserve">
          <source>std::basic_filebuf::seekoff</source>
          <target state="translated">std::basic_filebuf::seekoff</target>
        </trans-unit>
        <trans-unit id="500e7d8b4f31581f9e709986685ae962d4389b09" translate="yes" xml:space="preserve">
          <source>std::basic_filebuf::seekpos</source>
          <target state="translated">std::basic_filebuf::seekpos</target>
        </trans-unit>
        <trans-unit id="dfe88eaa0899702010c527f89b595ef9ac53e14f" translate="yes" xml:space="preserve">
          <source>std::basic_filebuf::setbuf</source>
          <target state="translated">std::basic_filebuf::setbuf</target>
        </trans-unit>
        <trans-unit id="9edca3599a8b4d4a2f6cd6221fbf32ed6a0b7d6d" translate="yes" xml:space="preserve">
          <source>std::basic_filebuf::showmanyc</source>
          <target state="translated">std::basic_filebuf::showmanyc</target>
        </trans-unit>
        <trans-unit id="e033ebe57c0f365708e0ce590a720f996f0f21b1" translate="yes" xml:space="preserve">
          <source>std::basic_filebuf::swap</source>
          <target state="translated">std::basic_filebuf::swap</target>
        </trans-unit>
        <trans-unit id="fb350dab9eb9a188db97a00d878148f24203d488" translate="yes" xml:space="preserve">
          <source>std::basic_filebuf::sync</source>
          <target state="translated">std::basic_filebuf::sync</target>
        </trans-unit>
        <trans-unit id="f2b39cf195bd5acacc9eaf9338e4c1517efdc7ee" translate="yes" xml:space="preserve">
          <source>std::basic_filebuf::uflow</source>
          <target state="translated">std::basic_filebuf::uflow</target>
        </trans-unit>
        <trans-unit id="9bd3f2b0f40d72726904f77ebf3aa6882efed91f" translate="yes" xml:space="preserve">
          <source>std::basic_filebuf::underflow</source>
          <target state="translated">std::basic_filebuf::underflow</target>
        </trans-unit>
        <trans-unit id="5aed4333ccde8979fea7c104b5240a9f6ad64f09" translate="yes" xml:space="preserve">
          <source>std::basic_filebuf::~basic_filebuf</source>
          <target state="translated">std::basic_filebuf::~basic_filebuf</target>
        </trans-unit>
        <trans-unit id="93ea9ff27c78355968dbd4f1e087bf2f72526998" translate="yes" xml:space="preserve">
          <source>std::basic_fstream</source>
          <target state="translated">std::basic_fstream</target>
        </trans-unit>
        <trans-unit id="d214811639672e2f857af73782aea3a2269c4bae" translate="yes" xml:space="preserve">
          <source>std::basic_fstream&amp;lt;CharT,Traits&amp;gt;::basic_fstream</source>
          <target state="translated">std::basic_fstream&amp;lt;CharT,Traits&amp;gt;::basic_fstream</target>
        </trans-unit>
        <trans-unit id="99393c343dd1bf82f79e24c63a9648e19a3815d7" translate="yes" xml:space="preserve">
          <source>std::basic_fstream&amp;lt;CharT,Traits&amp;gt;::close</source>
          <target state="translated">std::basic_fstream&amp;lt;CharT,Traits&amp;gt;::close</target>
        </trans-unit>
        <trans-unit id="80b68561f908ae6ce5ddd294115994904ba9df49" translate="yes" xml:space="preserve">
          <source>std::basic_fstream&amp;lt;CharT,Traits&amp;gt;::is_open</source>
          <target state="translated">std::basic_fstream&amp;lt;CharT,Traits&amp;gt;::is_open</target>
        </trans-unit>
        <trans-unit id="2f42e173c68bcceab5db856e754d7be7ca504f61" translate="yes" xml:space="preserve">
          <source>std::basic_fstream&amp;lt;CharT,Traits&amp;gt;::open</source>
          <target state="translated">std::basic_fstream&amp;lt;CharT,Traits&amp;gt;::open</target>
        </trans-unit>
        <trans-unit id="a241bb88226303a095045b930b8708d672b6b7ba" translate="yes" xml:space="preserve">
          <source>std::basic_fstream&amp;lt;CharT,Traits&amp;gt;::operator=</source>
          <target state="translated">std::basic_fstream&amp;lt;CharT,Traits&amp;gt;::operator=</target>
        </trans-unit>
        <trans-unit id="aa257f1565e692b8f09551e290d999ee6f7aa394" translate="yes" xml:space="preserve">
          <source>std::basic_fstream&amp;lt;CharT,Traits&amp;gt;::rdbuf</source>
          <target state="translated">std::basic_fstream&amp;lt;CharT,Traits&amp;gt;::rdbuf</target>
        </trans-unit>
        <trans-unit id="adcd17b388132c96b174497399772296e4235aff" translate="yes" xml:space="preserve">
          <source>std::basic_fstream&amp;lt;CharT,Traits&amp;gt;::swap</source>
          <target state="translated">std::basic_fstream&amp;lt;CharT,Traits&amp;gt;::swap</target>
        </trans-unit>
        <trans-unit id="abc1b372fe2caeada09f45728e7b6272e23394f0" translate="yes" xml:space="preserve">
          <source>std::basic_fstream::basic_fstream</source>
          <target state="translated">std::basic_fstream::basic_fstream</target>
        </trans-unit>
        <trans-unit id="d35abda6c35627ec8e5663e81db16444f344e472" translate="yes" xml:space="preserve">
          <source>std::basic_fstream::close</source>
          <target state="translated">std::basic_fstream::close</target>
        </trans-unit>
        <trans-unit id="2d8e471c0c6c98f159cca57ea802150d25c50185" translate="yes" xml:space="preserve">
          <source>std::basic_fstream::is_open</source>
          <target state="translated">std::basic_fstream::is_open</target>
        </trans-unit>
        <trans-unit id="4b24a4427d08288b12f23080c9a8d1c5ba2ff359" translate="yes" xml:space="preserve">
          <source>std::basic_fstream::open</source>
          <target state="translated">std::basic_fstream::open</target>
        </trans-unit>
        <trans-unit id="ae18cd223637918b9abe90d01629f95b28372788" translate="yes" xml:space="preserve">
          <source>std::basic_fstream::operator=</source>
          <target state="translated">std::basic_fstream::operator=</target>
        </trans-unit>
        <trans-unit id="3e6ff24f5f90b9714c967a6919b603305221f3f5" translate="yes" xml:space="preserve">
          <source>std::basic_fstream::rdbuf</source>
          <target state="translated">std::basic_fstream::rdbuf</target>
        </trans-unit>
        <trans-unit id="04fc1f88824ce0c8bb46abc7c0176999128d63c3" translate="yes" xml:space="preserve">
          <source>std::basic_fstream::swap</source>
          <target state="translated">std::basic_fstream::swap</target>
        </trans-unit>
        <trans-unit id="1a9defc742ebb4241d9c8744db0e08490284ce56" translate="yes" xml:space="preserve">
          <source>std::basic_ifstream</source>
          <target state="translated">std::basic_ifstream</target>
        </trans-unit>
        <trans-unit id="9e43c5893c9a7363f2db59892784e5db34e726b6" translate="yes" xml:space="preserve">
          <source>std::basic_ifstream&amp;lt;CharT,Traits&amp;gt;::basic_ifstream</source>
          <target state="translated">std::basic_ifstream&amp;lt;CharT,Traits&amp;gt;::basic_ifstream</target>
        </trans-unit>
        <trans-unit id="3369b2461b67308179cd0592cdff381bd63fbfcc" translate="yes" xml:space="preserve">
          <source>std::basic_ifstream&amp;lt;CharT,Traits&amp;gt;::close</source>
          <target state="translated">std::basic_ifstream&amp;lt;CharT,Traits&amp;gt;::close</target>
        </trans-unit>
        <trans-unit id="c06f17b49d1492afba9ccebc4f0af04953f54124" translate="yes" xml:space="preserve">
          <source>std::basic_ifstream&amp;lt;CharT,Traits&amp;gt;::is_open</source>
          <target state="translated">std::basic_ifstream&amp;lt;CharT,Traits&amp;gt;::is_open</target>
        </trans-unit>
        <trans-unit id="17d8dfb87756aa6a0683544fb24dddee1a3d6371" translate="yes" xml:space="preserve">
          <source>std::basic_ifstream&amp;lt;CharT,Traits&amp;gt;::open</source>
          <target state="translated">std::basic_ifstream&amp;lt;CharT,Traits&amp;gt;::open</target>
        </trans-unit>
        <trans-unit id="d9cd2fe88d3f0d2fc47854a98331f0631cebd848" translate="yes" xml:space="preserve">
          <source>std::basic_ifstream&amp;lt;CharT,Traits&amp;gt;::operator=</source>
          <target state="translated">std::basic_ifstream&amp;lt;CharT,Traits&amp;gt;::operator=</target>
        </trans-unit>
        <trans-unit id="3338bc470049d2c8b769c1e2c192c6d181ac0f20" translate="yes" xml:space="preserve">
          <source>std::basic_ifstream&amp;lt;CharT,Traits&amp;gt;::rdbuf</source>
          <target state="translated">std::basic_ifstream&amp;lt;CharT,Traits&amp;gt;::rdbuf</target>
        </trans-unit>
        <trans-unit id="62c428a77756853e6fd3e49d79f7638aa3c14423" translate="yes" xml:space="preserve">
          <source>std::basic_ifstream&amp;lt;CharT,Traits&amp;gt;::swap</source>
          <target state="translated">std::basic_ifstream&amp;lt;CharT,Traits&amp;gt;::swap</target>
        </trans-unit>
        <trans-unit id="93389cfc269c533c3786ddb456e3245225adad1f" translate="yes" xml:space="preserve">
          <source>std::basic_ifstream::basic_ifstream</source>
          <target state="translated">std::basic_ifstream::basic_ifstream</target>
        </trans-unit>
        <trans-unit id="02c4a7346dcb945cde22a40290b7c59c21ee33a9" translate="yes" xml:space="preserve">
          <source>std::basic_ifstream::close</source>
          <target state="translated">std::basic_ifstream::close</target>
        </trans-unit>
        <trans-unit id="309218e5a4c602c6974d42f060507a639825a485" translate="yes" xml:space="preserve">
          <source>std::basic_ifstream::is_open</source>
          <target state="translated">std::basic_ifstream::is_open</target>
        </trans-unit>
        <trans-unit id="58ff556899f2eb104fb241ead72e476274d761fd" translate="yes" xml:space="preserve">
          <source>std::basic_ifstream::open</source>
          <target state="translated">std::basic_ifstream::open</target>
        </trans-unit>
        <trans-unit id="8f5905a576544b00f85dd0e6438ec235edfd57f2" translate="yes" xml:space="preserve">
          <source>std::basic_ifstream::operator=</source>
          <target state="translated">std::basic_ifstream::operator=</target>
        </trans-unit>
        <trans-unit id="c76177c5ff48f2210174462dc089b9a5a4897a22" translate="yes" xml:space="preserve">
          <source>std::basic_ifstream::rdbuf</source>
          <target state="translated">std::basic_ifstream::rdbuf</target>
        </trans-unit>
        <trans-unit id="504477b74d87696ad941c4cc43f82ccd677b33be" translate="yes" xml:space="preserve">
          <source>std::basic_ifstream::swap</source>
          <target state="translated">std::basic_ifstream::swap</target>
        </trans-unit>
        <trans-unit id="827a979af3c805ea40d8ab412fa5fdc92faa9e41" translate="yes" xml:space="preserve">
          <source>std::basic_ios</source>
          <target state="translated">std::basic_ios</target>
        </trans-unit>
        <trans-unit id="91c0f3e93ebbe45cd98ea6e49867c2e51aa2f1c3" translate="yes" xml:space="preserve">
          <source>std::basic_ios&amp;lt;CharT,Traits&amp;gt;::bad</source>
          <target state="translated">std::basic_ios&amp;lt;CharT,Traits&amp;gt;::bad</target>
        </trans-unit>
        <trans-unit id="16401642a83b293fa30ccf47681886c76714aa99" translate="yes" xml:space="preserve">
          <source>std::basic_ios&amp;lt;CharT,Traits&amp;gt;::basic_ios</source>
          <target state="translated">std::basic_ios&amp;lt;CharT,Traits&amp;gt;::basic_ios</target>
        </trans-unit>
        <trans-unit id="c2140a3c4ed31825bd64af4fb043cde42d5668fa" translate="yes" xml:space="preserve">
          <source>std::basic_ios&amp;lt;CharT,Traits&amp;gt;::clear</source>
          <target state="translated">std::basic_ios&amp;lt;CharT,Traits&amp;gt;::clear</target>
        </trans-unit>
        <trans-unit id="3cce5895282dcdb98f37b93fd42830e970a5b0d5" translate="yes" xml:space="preserve">
          <source>std::basic_ios&amp;lt;CharT,Traits&amp;gt;::copyfmt</source>
          <target state="translated">std::basic_ios&amp;lt;CharT,Traits&amp;gt;::copyfmt</target>
        </trans-unit>
        <trans-unit id="4a19349e64d1ab7b7dacdeefa7234aa4bb325c08" translate="yes" xml:space="preserve">
          <source>std::basic_ios&amp;lt;CharT,Traits&amp;gt;::eof</source>
          <target state="translated">std::basic_ios&amp;lt;CharT,Traits&amp;gt;::eof</target>
        </trans-unit>
        <trans-unit id="86fdf38771f915e7c3f87459bfad02a5bb1a705a" translate="yes" xml:space="preserve">
          <source>std::basic_ios&amp;lt;CharT,Traits&amp;gt;::exceptions</source>
          <target state="translated">std::basic_ios&amp;lt;CharT,Traits&amp;gt;::exceptions</target>
        </trans-unit>
        <trans-unit id="abc872f9c2c74443a82070082af0bf354545cede" translate="yes" xml:space="preserve">
          <source>std::basic_ios&amp;lt;CharT,Traits&amp;gt;::fail</source>
          <target state="translated">std::basic_ios&amp;lt;CharT,Traits&amp;gt;::fail</target>
        </trans-unit>
        <trans-unit id="14ac25a53db41441eef96ae655b815aebbc71a2d" translate="yes" xml:space="preserve">
          <source>std::basic_ios&amp;lt;CharT,Traits&amp;gt;::fill</source>
          <target state="translated">std::basic_ios&amp;lt;CharT,Traits&amp;gt;::fill</target>
        </trans-unit>
        <trans-unit id="d4c0e36098cf77c98be49a2195cf81e21f6b0727" translate="yes" xml:space="preserve">
          <source>std::basic_ios&amp;lt;CharT,Traits&amp;gt;::good</source>
          <target state="translated">std::basic_ios&amp;lt;CharT,Traits&amp;gt;::good</target>
        </trans-unit>
        <trans-unit id="e2c9e41fe14cd6ee034d92f07e56eb91c32959a4" translate="yes" xml:space="preserve">
          <source>std::basic_ios&amp;lt;CharT,Traits&amp;gt;::imbue</source>
          <target state="translated">std::basic_ios&amp;lt;CharT,Traits&amp;gt;::imbue</target>
        </trans-unit>
        <trans-unit id="19f0b06f535fb873da16e21103e1424091fb4090" translate="yes" xml:space="preserve">
          <source>std::basic_ios&amp;lt;CharT,Traits&amp;gt;::init</source>
          <target state="translated">std::basic_ios&amp;lt;CharT,Traits&amp;gt;::init</target>
        </trans-unit>
        <trans-unit id="a4e46c0dbc807cbecd35076c68f7ee5ceb29ce8d" translate="yes" xml:space="preserve">
          <source>std::basic_ios&amp;lt;CharT,Traits&amp;gt;::move</source>
          <target state="translated">std::basic_ios&amp;lt;CharT,Traits&amp;gt;::move</target>
        </trans-unit>
        <trans-unit id="689590040203e1b22ddf37f74a2d839fd477f336" translate="yes" xml:space="preserve">
          <source>std::basic_ios&amp;lt;CharT,Traits&amp;gt;::narrow</source>
          <target state="translated">std::basic_ios&amp;lt;CharT,Traits&amp;gt;::narrow</target>
        </trans-unit>
        <trans-unit id="745ca04218e9500d2cc926af87a76d8192de5bcf" translate="yes" xml:space="preserve">
          <source>std::basic_ios&amp;lt;CharT,Traits&amp;gt;::operator bool</source>
          <target state="translated">std :: basic_ios &amp;lt;CharT、Traits&amp;gt; :: operator bool</target>
        </trans-unit>
        <trans-unit id="01e5738d2ca4b7371e647ecb1455b0deb44cd93b" translate="yes" xml:space="preserve">
          <source>std::basic_ios&amp;lt;CharT,Traits&amp;gt;::operator!</source>
          <target state="translated">std::basic_ios&amp;lt;CharT,Traits&amp;gt;::operator!</target>
        </trans-unit>
        <trans-unit id="98be22dc0a6291cde3b3387514bf8bc22614197f" translate="yes" xml:space="preserve">
          <source>std::basic_ios&amp;lt;CharT,Traits&amp;gt;::rdbuf</source>
          <target state="translated">std::basic_ios&amp;lt;CharT,Traits&amp;gt;::rdbuf</target>
        </trans-unit>
        <trans-unit id="34f34f8b9d395647f8e0c0ad073918a788ea23a3" translate="yes" xml:space="preserve">
          <source>std::basic_ios&amp;lt;CharT,Traits&amp;gt;::rdstate</source>
          <target state="translated">std::basic_ios&amp;lt;CharT,Traits&amp;gt;::rdstate</target>
        </trans-unit>
        <trans-unit id="d44b84fcdafb122c901369a9ee3f0393551dedf3" translate="yes" xml:space="preserve">
          <source>std::basic_ios&amp;lt;CharT,Traits&amp;gt;::set_rdbuf</source>
          <target state="translated">std::basic_ios&amp;lt;CharT,Traits&amp;gt;::set_rdbuf</target>
        </trans-unit>
        <trans-unit id="c4a1fbef6777b7fc57e74bfd593ba9659fe170ad" translate="yes" xml:space="preserve">
          <source>std::basic_ios&amp;lt;CharT,Traits&amp;gt;::setstate</source>
          <target state="translated">std::basic_ios&amp;lt;CharT,Traits&amp;gt;::setstate</target>
        </trans-unit>
        <trans-unit id="c8fb2c9b1ff0b910c92941c3c60fe9f38078e8aa" translate="yes" xml:space="preserve">
          <source>std::basic_ios&amp;lt;CharT,Traits&amp;gt;::swap</source>
          <target state="translated">std::basic_ios&amp;lt;CharT,Traits&amp;gt;::swap</target>
        </trans-unit>
        <trans-unit id="51abe784c185d9ac1e33ee00f3f01f4a8ee800ee" translate="yes" xml:space="preserve">
          <source>std::basic_ios&amp;lt;CharT,Traits&amp;gt;::tie</source>
          <target state="translated">std::basic_ios&amp;lt;CharT,Traits&amp;gt;::tie</target>
        </trans-unit>
        <trans-unit id="93ad8d72916aa7068ada7f3a6b3687034ba48463" translate="yes" xml:space="preserve">
          <source>std::basic_ios&amp;lt;CharT,Traits&amp;gt;::widen</source>
          <target state="translated">std::basic_ios&amp;lt;CharT,Traits&amp;gt;::widen</target>
        </trans-unit>
        <trans-unit id="0470e7e341abe5d2ad6be612d499b787284f06d7" translate="yes" xml:space="preserve">
          <source>std::basic_ios&amp;lt;CharT,Traits&amp;gt;::~basic_ios</source>
          <target state="translated">std::basic_ios&amp;lt;CharT,Traits&amp;gt;::~basic_ios</target>
        </trans-unit>
        <trans-unit id="fb66a83e08c0f196509b1283ba9bf1c770178768" translate="yes" xml:space="preserve">
          <source>std::basic_ios::bad</source>
          <target state="translated">std::basic_ios::bad</target>
        </trans-unit>
        <trans-unit id="2a8556030b761ed86e001de91a0e71f73ab58e9a" translate="yes" xml:space="preserve">
          <source>std::basic_ios::basic_ios</source>
          <target state="translated">std::basic_ios::basic_ios</target>
        </trans-unit>
        <trans-unit id="bb76fed6cc3540e2d501eead9eb881f3a67b0015" translate="yes" xml:space="preserve">
          <source>std::basic_ios::clear</source>
          <target state="translated">std::basic_ios::clear</target>
        </trans-unit>
        <trans-unit id="93c0d68586bb4e21f3b7118d5079eaf2caec4be3" translate="yes" xml:space="preserve">
          <source>std::basic_ios::copyfmt</source>
          <target state="translated">std::basic_ios::copyfmt</target>
        </trans-unit>
        <trans-unit id="ae6c74c07ee27e3b85abbb2eee2c88cc5c8c3731" translate="yes" xml:space="preserve">
          <source>std::basic_ios::eof</source>
          <target state="translated">std::basic_ios::eof</target>
        </trans-unit>
        <trans-unit id="743a6022e630e4f3166051e5ad5e7dabc2bc4a18" translate="yes" xml:space="preserve">
          <source>std::basic_ios::exceptions</source>
          <target state="translated">std::basic_ios::exceptions</target>
        </trans-unit>
        <trans-unit id="8c343b22d4fc63adbd93e959825d4a6f4005ddd4" translate="yes" xml:space="preserve">
          <source>std::basic_ios::fail</source>
          <target state="translated">std::basic_ios::fail</target>
        </trans-unit>
        <trans-unit id="da0457a99e200d7dfea7d1f551d2bbb5ed4a67ca" translate="yes" xml:space="preserve">
          <source>std::basic_ios::fill</source>
          <target state="translated">std::basic_ios::fill</target>
        </trans-unit>
        <trans-unit id="73119c660a09f52bfa059df0127b5a0c07d9944e" translate="yes" xml:space="preserve">
          <source>std::basic_ios::good</source>
          <target state="translated">std::basic_ios::good</target>
        </trans-unit>
        <trans-unit id="0d74559592125ea73cffaea9cda8a6d9d5cb70a5" translate="yes" xml:space="preserve">
          <source>std::basic_ios::imbue</source>
          <target state="translated">std::basic_ios::imbue</target>
        </trans-unit>
        <trans-unit id="f7fce7d382f79b0c8444e1af59477359b5730026" translate="yes" xml:space="preserve">
          <source>std::basic_ios::init</source>
          <target state="translated">std::basic_ios::init</target>
        </trans-unit>
        <trans-unit id="2ae81307dc80e4ab7bc589daa93d12130b67b21b" translate="yes" xml:space="preserve">
          <source>std::basic_ios::move</source>
          <target state="translated">std::basic_ios::move</target>
        </trans-unit>
        <trans-unit id="08de2594bca67b8ecbcfc214418e6621f769347f" translate="yes" xml:space="preserve">
          <source>std::basic_ios::narrow</source>
          <target state="translated">std::basic_ios::narrow</target>
        </trans-unit>
        <trans-unit id="c897f3a74b284a7c15215d5805090808b720a61e" translate="yes" xml:space="preserve">
          <source>std::basic_ios::operator bool</source>
          <target state="translated">std::basic_ios::演算子 bool</target>
        </trans-unit>
        <trans-unit id="bbbfecfdcadde46734d826f20ed0693b589a65e2" translate="yes" xml:space="preserve">
          <source>std::basic_ios::operator!</source>
          <target state="translated">std::basic_ios::operator!</target>
        </trans-unit>
        <trans-unit id="bb94cd876cae2d8e34b737e4a18164d3261d205e" translate="yes" xml:space="preserve">
          <source>std::basic_ios::rdbuf</source>
          <target state="translated">std::basic_ios::rdbuf</target>
        </trans-unit>
        <trans-unit id="f5e55a7cbd28089c8b467f823c1bf91e5cec9920" translate="yes" xml:space="preserve">
          <source>std::basic_ios::rdstate</source>
          <target state="translated">std::basic_ios::rdstate</target>
        </trans-unit>
        <trans-unit id="1636833115d3b9196614eaf0902489bfefd0837b" translate="yes" xml:space="preserve">
          <source>std::basic_ios::set_rdbuf</source>
          <target state="translated">std::basic_ios::set_rdbuf</target>
        </trans-unit>
        <trans-unit id="6808796d9a574d3912b5808556d2a95c4f041288" translate="yes" xml:space="preserve">
          <source>std::basic_ios::setstate</source>
          <target state="translated">std::basic_ios::setstate</target>
        </trans-unit>
        <trans-unit id="b4fce85e61c491c41c3939c701be4e3bca70a006" translate="yes" xml:space="preserve">
          <source>std::basic_ios::swap</source>
          <target state="translated">std::basic_ios::swap</target>
        </trans-unit>
        <trans-unit id="5b29b92de9df779ae484a0aaf1e60a72ac6345f7" translate="yes" xml:space="preserve">
          <source>std::basic_ios::tie</source>
          <target state="translated">std::basic_ios::tie</target>
        </trans-unit>
        <trans-unit id="4bd346772f8b20457434349e7aa41b457d309835" translate="yes" xml:space="preserve">
          <source>std::basic_ios::widen</source>
          <target state="translated">std::basic_ios::widen</target>
        </trans-unit>
        <trans-unit id="a8668fe4314852c89a2d7f59e45746c8afc8d5b5" translate="yes" xml:space="preserve">
          <source>std::basic_ios::~basic_ios</source>
          <target state="translated">std::basic_ios::~basic_ios</target>
        </trans-unit>
        <trans-unit id="160ca9d51188207c7d0e4a8015cd399189af60bb" translate="yes" xml:space="preserve">
          <source>std::basic_iostream</source>
          <target state="translated">std::basic_iostream</target>
        </trans-unit>
        <trans-unit id="feba437650d25b0ba9e7b4a252e7de0d7ac593c1" translate="yes" xml:space="preserve">
          <source>std::basic_iostream&amp;lt;CharT,Traits&amp;gt;::basic_iostream</source>
          <target state="translated">std::basic_iostream&amp;lt;CharT,Traits&amp;gt;::basic_iostream</target>
        </trans-unit>
        <trans-unit id="7a6ecdf373bb50e7a5fb927c6d2cc449e89435f6" translate="yes" xml:space="preserve">
          <source>std::basic_iostream&amp;lt;CharT,Traits&amp;gt;::operator=</source>
          <target state="translated">std::basic_iostream&amp;lt;CharT,Traits&amp;gt;::operator=</target>
        </trans-unit>
        <trans-unit id="91f942285cbc937eb582cd4a231fd39dba31c15d" translate="yes" xml:space="preserve">
          <source>std::basic_iostream&amp;lt;CharT,Traits&amp;gt;::swap</source>
          <target state="translated">std::basic_iostream&amp;lt;CharT,Traits&amp;gt;::swap</target>
        </trans-unit>
        <trans-unit id="393fc9fe3c1c3a5e05986e891961adc9a55b5e9c" translate="yes" xml:space="preserve">
          <source>std::basic_iostream&amp;lt;CharT,Traits&amp;gt;::~basic_iostream</source>
          <target state="translated">std::basic_iostream&amp;lt;CharT,Traits&amp;gt;::~basic_iostream</target>
        </trans-unit>
        <trans-unit id="f910a28a4f6c56093dcb80259a0a45e552559d18" translate="yes" xml:space="preserve">
          <source>std::basic_iostream::basic_iostream</source>
          <target state="translated">std::basic_iostream::basic_iostream</target>
        </trans-unit>
        <trans-unit id="3d51ce436f289e56f0f5b6c883d898f271f46bc7" translate="yes" xml:space="preserve">
          <source>std::basic_iostream::operator=</source>
          <target state="translated">std::basic_iostream::operator=</target>
        </trans-unit>
        <trans-unit id="3b82e181bc82f9eb5f2ea5199a3190dbcb3f4a7e" translate="yes" xml:space="preserve">
          <source>std::basic_iostream::swap</source>
          <target state="translated">std::basic_iostream::swap</target>
        </trans-unit>
        <trans-unit id="61f75ddd4ee8a7d702ef5c935bae808213ce8eef" translate="yes" xml:space="preserve">
          <source>std::basic_iostream::~basic_iostream</source>
          <target state="translated">std::basic_iostream::~basic_iostream</target>
        </trans-unit>
        <trans-unit id="a48b1a26da6887fdd483d040848f89eb9d961be7" translate="yes" xml:space="preserve">
          <source>std::basic_istream</source>
          <target state="translated">std::basic_istream</target>
        </trans-unit>
        <trans-unit id="1e8c3fb601e598438cb0cfa016c37025b2a6c8b5" translate="yes" xml:space="preserve">
          <source>std::basic_istream&amp;lt;CharT,Traits&amp;gt;::basic_istream</source>
          <target state="translated">std::basic_istream&amp;lt;CharT,Traits&amp;gt;::basic_istream</target>
        </trans-unit>
        <trans-unit id="7e194a9866c59434b3d174bfc43b9fa2201e3fef" translate="yes" xml:space="preserve">
          <source>std::basic_istream&amp;lt;CharT,Traits&amp;gt;::gcount</source>
          <target state="translated">std::basic_istream&amp;lt;CharT,Traits&amp;gt;::gcount</target>
        </trans-unit>
        <trans-unit id="40f91ee30ef96525fc85f1daca11bb97915d96b0" translate="yes" xml:space="preserve">
          <source>std::basic_istream&amp;lt;CharT,Traits&amp;gt;::get</source>
          <target state="translated">std::basic_istream&amp;lt;CharT,Traits&amp;gt;::get</target>
        </trans-unit>
        <trans-unit id="45960d7112582e217c12151ccf310e73c722d275" translate="yes" xml:space="preserve">
          <source>std::basic_istream&amp;lt;CharT,Traits&amp;gt;::getline</source>
          <target state="translated">std::basic_istream&amp;lt;CharT,Traits&amp;gt;::getline</target>
        </trans-unit>
        <trans-unit id="724d18185b7ad6953ed2f973d4f54c293fa875e7" translate="yes" xml:space="preserve">
          <source>std::basic_istream&amp;lt;CharT,Traits&amp;gt;::ignore</source>
          <target state="translated">std::basic_istream&amp;lt;CharT,Traits&amp;gt;::ignore</target>
        </trans-unit>
        <trans-unit id="f87fc9b2c4efe0826c379e9d1327b32955c34bca" translate="yes" xml:space="preserve">
          <source>std::basic_istream&amp;lt;CharT,Traits&amp;gt;::operator&amp;gt;&amp;gt;</source>
          <target state="translated">std::basic_istream&amp;lt;CharT,Traits&amp;gt;::operator&amp;gt;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="6c2c19c6e9c0b107c8772e8d912d04015b19f5cb" translate="yes" xml:space="preserve">
          <source>std::basic_istream&amp;lt;CharT,Traits&amp;gt;::operator=</source>
          <target state="translated">std::basic_istream&amp;lt;CharT,Traits&amp;gt;::operator=</target>
        </trans-unit>
        <trans-unit id="32ebf20d3ff4de85096f0d4bae72177031e40617" translate="yes" xml:space="preserve">
          <source>std::basic_istream&amp;lt;CharT,Traits&amp;gt;::peek</source>
          <target state="translated">std::basic_istream&amp;lt;CharT,Traits&amp;gt;::peek</target>
        </trans-unit>
        <trans-unit id="b1cfcfa1428376aba962531fe88aaf0dd9f5f648" translate="yes" xml:space="preserve">
          <source>std::basic_istream&amp;lt;CharT,Traits&amp;gt;::putback</source>
          <target state="translated">std::basic_istream&amp;lt;CharT,Traits&amp;gt;::putback</target>
        </trans-unit>
        <trans-unit id="1432ea29ad778f054001b4c6b0fb3444988e5b88" translate="yes" xml:space="preserve">
          <source>std::basic_istream&amp;lt;CharT,Traits&amp;gt;::read</source>
          <target state="translated">std::basic_istream&amp;lt;CharT,Traits&amp;gt;::read</target>
        </trans-unit>
        <trans-unit id="020c65834963dd2c2145b431c1449ef841df0a11" translate="yes" xml:space="preserve">
          <source>std::basic_istream&amp;lt;CharT,Traits&amp;gt;::readsome</source>
          <target state="translated">std::basic_istream&amp;lt;CharT,Traits&amp;gt;::readsome</target>
        </trans-unit>
        <trans-unit id="997a54cea1534ea817c7760edadfc8879906430e" translate="yes" xml:space="preserve">
          <source>std::basic_istream&amp;lt;CharT,Traits&amp;gt;::seekg</source>
          <target state="translated">std::basic_istream&amp;lt;CharT,Traits&amp;gt;::seekg</target>
        </trans-unit>
        <trans-unit id="0a0faaee9071d0b3294e88995654fbf808552d1f" translate="yes" xml:space="preserve">
          <source>std::basic_istream&amp;lt;CharT,Traits&amp;gt;::sentry</source>
          <target state="translated">std::basic_istream&amp;lt;CharT,Traits&amp;gt;::sentry</target>
        </trans-unit>
        <trans-unit id="b0cf904bf50fa103ad6a86cebc08a72a202c685a" translate="yes" xml:space="preserve">
          <source>std::basic_istream&amp;lt;CharT,Traits&amp;gt;::swap</source>
          <target state="translated">std::basic_istream&amp;lt;CharT,Traits&amp;gt;::swap</target>
        </trans-unit>
        <trans-unit id="8236e902f0e29e7b1d05b4571769e1d6f9a12dc1" translate="yes" xml:space="preserve">
          <source>std::basic_istream&amp;lt;CharT,Traits&amp;gt;::sync</source>
          <target state="translated">std::basic_istream&amp;lt;CharT,Traits&amp;gt;::sync</target>
        </trans-unit>
        <trans-unit id="ab44779a9fbdb7c67adb93b69f96da7e3d761fe2" translate="yes" xml:space="preserve">
          <source>std::basic_istream&amp;lt;CharT,Traits&amp;gt;::tellg</source>
          <target state="translated">std::basic_istream&amp;lt;CharT,Traits&amp;gt;::tellg</target>
        </trans-unit>
        <trans-unit id="218becb364266599b171be6f866aebb1af086873" translate="yes" xml:space="preserve">
          <source>std::basic_istream&amp;lt;CharT,Traits&amp;gt;::unget</source>
          <target state="translated">std::basic_istream&amp;lt;CharT,Traits&amp;gt;::unget</target>
        </trans-unit>
        <trans-unit id="c9965f26b91ab1114e2725612bdffa30f3c475fb" translate="yes" xml:space="preserve">
          <source>std::basic_istream&amp;lt;CharT,Traits&amp;gt;::~basic_istream</source>
          <target state="translated">std::basic_istream&amp;lt;CharT,Traits&amp;gt;::~basic_istream</target>
        </trans-unit>
        <trans-unit id="a444673bce794264f0c88c4e8abc0d9a6839c8ee" translate="yes" xml:space="preserve">
          <source>std::basic_istream::basic_istream</source>
          <target state="translated">std::basic_istream::basic_istream</target>
        </trans-unit>
        <trans-unit id="40c36ea8db45c53c9b7b936bf817e88c1f31d90e" translate="yes" xml:space="preserve">
          <source>std::basic_istream::gcount</source>
          <target state="translated">std::basic_istream::gcount</target>
        </trans-unit>
        <trans-unit id="45ec53546dea7924f034f9bb06cb567a2c2533a0" translate="yes" xml:space="preserve">
          <source>std::basic_istream::get</source>
          <target state="translated">std::basic_istream::get</target>
        </trans-unit>
        <trans-unit id="0547c3e6783605763912747f29af0b6c6a6d2bbf" translate="yes" xml:space="preserve">
          <source>std::basic_istream::getline</source>
          <target state="translated">std::basic_istream::getline</target>
        </trans-unit>
        <trans-unit id="37b2831999b57a9734adbcc54fe1300f9c590b8a" translate="yes" xml:space="preserve">
          <source>std::basic_istream::ignore</source>
          <target state="translated">std::basic_istream::ignore</target>
        </trans-unit>
        <trans-unit id="c9ad83cb6de1ee7af6a66551831367b5bbc4c89f" translate="yes" xml:space="preserve">
          <source>std::basic_istream::operator&amp;gt;&amp;gt;</source>
          <target state="translated">std::basic_istream::operator&amp;gt;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="d6cd5f470cae318e47839ffd77a52b903e355d3e" translate="yes" xml:space="preserve">
          <source>std::basic_istream::operator=</source>
          <target state="translated">std::basic_istream::operator=</target>
        </trans-unit>
        <trans-unit id="ffcf7a53223bbb8a7744f196b730837ccb9c77da" translate="yes" xml:space="preserve">
          <source>std::basic_istream::peek</source>
          <target state="translated">std::basic_istream::peek</target>
        </trans-unit>
        <trans-unit id="bceb72458fe23a02f9d7a8650fb384b4f4e81cd5" translate="yes" xml:space="preserve">
          <source>std::basic_istream::putback</source>
          <target state="translated">std::basic_istream::putback</target>
        </trans-unit>
        <trans-unit id="581a21cefcc90c07244ebb98857de4060bb9a4a7" translate="yes" xml:space="preserve">
          <source>std::basic_istream::read</source>
          <target state="translated">std::basic_istream::read</target>
        </trans-unit>
        <trans-unit id="26dd18e6aa28f0ad2ab13b6b45c21ebd53900514" translate="yes" xml:space="preserve">
          <source>std::basic_istream::readsome</source>
          <target state="translated">std::basic_istream::readsome</target>
        </trans-unit>
        <trans-unit id="ce6efc6029ae0c068f247ff0a3e07c690fe839b6" translate="yes" xml:space="preserve">
          <source>std::basic_istream::seekg</source>
          <target state="translated">std::basic_istream::seekg</target>
        </trans-unit>
        <trans-unit id="6015b9be37d77cffdac6cc57f2de360d6325bc46" translate="yes" xml:space="preserve">
          <source>std::basic_istream::sentry</source>
          <target state="translated">std::basic_istream::sentry</target>
        </trans-unit>
        <trans-unit id="df8e56f0468a346a698f18e4a670db35971464a9" translate="yes" xml:space="preserve">
          <source>std::basic_istream::sentry::operator bool</source>
          <target state="translated">std::basic_istream::sentry::operator bool</target>
        </trans-unit>
        <trans-unit id="413b443216223ad569e0c8a34d3b9c30ade7105a" translate="yes" xml:space="preserve">
          <source>std::basic_istream::sentry::sentry</source>
          <target state="translated">std::basic_istream::sentry::sentry</target>
        </trans-unit>
        <trans-unit id="9f0c8a836d922ca1149b558776036e7a9fc4f745" translate="yes" xml:space="preserve">
          <source>std::basic_istream::sentry::~sentry</source>
          <target state="translated">std::basic_istream::sentry::~sentry</target>
        </trans-unit>
        <trans-unit id="a4d092abfbdeb045b47cc7fd45908a865ebf8e99" translate="yes" xml:space="preserve">
          <source>std::basic_istream::swap</source>
          <target state="translated">std::basic_istream::swap</target>
        </trans-unit>
        <trans-unit id="1ee0e3940c32789fa036c842a11fd573ec79fb0b" translate="yes" xml:space="preserve">
          <source>std::basic_istream::sync</source>
          <target state="translated">std::basic_istream::sync</target>
        </trans-unit>
        <trans-unit id="a88c52d504c0fa3acc80555a83fcda16739ee181" translate="yes" xml:space="preserve">
          <source>std::basic_istream::tellg</source>
          <target state="translated">std::basic_istream::tellg</target>
        </trans-unit>
        <trans-unit id="4105b6d9d7d10df6fedea2a0a2bf89d7cad762e5" translate="yes" xml:space="preserve">
          <source>std::basic_istream::unget</source>
          <target state="translated">std::basic_istream::unget</target>
        </trans-unit>
        <trans-unit id="0f25d45e6b6ee5dbb529807375cb748e2919e890" translate="yes" xml:space="preserve">
          <source>std::basic_istream::~basic_istream</source>
          <target state="translated">std::basic_istream::~basic_istream</target>
        </trans-unit>
        <trans-unit id="1894e9430e12b09039e4d4a962c0514019f2d7bc" translate="yes" xml:space="preserve">
          <source>std::basic_istringstream</source>
          <target state="translated">std::basic_istringstream</target>
        </trans-unit>
        <trans-unit id="e9556e4a1f66a6d21af449fd7f4d991bc72baf44" translate="yes" xml:space="preserve">
          <source>std::basic_istringstream&amp;lt;CharT,Traits,Allocator&amp;gt;::basic_istringstream</source>
          <target state="translated">std::basic_istringstream&amp;lt;CharT,Traits,Allocator&amp;gt;::basic_istringstream</target>
        </trans-unit>
        <trans-unit id="160a37eb42e57b3dbc05753486cb785edf04b595" translate="yes" xml:space="preserve">
          <source>std::basic_istringstream&amp;lt;CharT,Traits,Allocator&amp;gt;::str</source>
          <target state="translated">std::basic_istringstream&amp;lt;CharT,Traits,Allocator&amp;gt;::str</target>
        </trans-unit>
        <trans-unit id="d634c5baddfe8ac3a1f3159e6084410914ace82f" translate="yes" xml:space="preserve">
          <source>std::basic_istringstream::basic_istringstream</source>
          <target state="translated">std::basic_istringstream::basic_istringstream</target>
        </trans-unit>
        <trans-unit id="1dc3012c5c637036828f9ccf76cdc0412844173c" translate="yes" xml:space="preserve">
          <source>std::basic_istringstream::operator=</source>
          <target state="translated">std::basic_istringstream::operator=</target>
        </trans-unit>
        <trans-unit id="8b8fb73f25f1f224a8c50e381fbf2159dfa3f77c" translate="yes" xml:space="preserve">
          <source>std::basic_istringstream::rdbuf</source>
          <target state="translated">std::basic_istringstream::rdbuf</target>
        </trans-unit>
        <trans-unit id="e17c5ce68c2181fda32a606cf2e66c06038f1d50" translate="yes" xml:space="preserve">
          <source>std::basic_istringstream::str</source>
          <target state="translated">std::basic_istringstream::str</target>
        </trans-unit>
        <trans-unit id="98606c9383c936f66cfa45f4484facf32287db3d" translate="yes" xml:space="preserve">
          <source>std::basic_istringstream::swap</source>
          <target state="translated">std::basic_istringstream::swap</target>
        </trans-unit>
        <trans-unit id="0e5776eba0ece87f198cef7590598997ced7b407" translate="yes" xml:space="preserve">
          <source>std::basic_ofstream</source>
          <target state="translated">std::basic_ofstream</target>
        </trans-unit>
        <trans-unit id="d5f613ccfef7812f09957b7f8748df525f6704b0" translate="yes" xml:space="preserve">
          <source>std::basic_ofstream&amp;lt;CharT,Traits&amp;gt;::basic_ofstream</source>
          <target state="translated">std::basic_ofstream&amp;lt;CharT,Traits&amp;gt;::basic_ofstream</target>
        </trans-unit>
        <trans-unit id="f3615a58ea667bc3ef2c7ae3cbe4e1fcc34c4d06" translate="yes" xml:space="preserve">
          <source>std::basic_ofstream&amp;lt;CharT,Traits&amp;gt;::close</source>
          <target state="translated">std::basic_ofstream&amp;lt;CharT,Traits&amp;gt;::close</target>
        </trans-unit>
        <trans-unit id="b963c99f358d501f3d973d64e17b6c4843909228" translate="yes" xml:space="preserve">
          <source>std::basic_ofstream&amp;lt;CharT,Traits&amp;gt;::is_open</source>
          <target state="translated">std::basic_ofstream&amp;lt;CharT,Traits&amp;gt;::is_open</target>
        </trans-unit>
        <trans-unit id="a5b33b5b29cdc923d881ef547a1374cc68125d7a" translate="yes" xml:space="preserve">
          <source>std::basic_ofstream&amp;lt;CharT,Traits&amp;gt;::open</source>
          <target state="translated">std::basic_ofstream&amp;lt;CharT,Traits&amp;gt;::open</target>
        </trans-unit>
        <trans-unit id="ead80350eef7c285e4516acbe64449de1c064b61" translate="yes" xml:space="preserve">
          <source>std::basic_ofstream&amp;lt;CharT,Traits&amp;gt;::operator=</source>
          <target state="translated">std::basic_ofstream&amp;lt;CharT,Traits&amp;gt;::operator=</target>
        </trans-unit>
        <trans-unit id="500ec2e7f4b3faeee6a359c8260caf0ecd696f8d" translate="yes" xml:space="preserve">
          <source>std::basic_ofstream&amp;lt;CharT,Traits&amp;gt;::rdbuf</source>
          <target state="translated">std::basic_ofstream&amp;lt;CharT,Traits&amp;gt;::rdbuf</target>
        </trans-unit>
        <trans-unit id="d38714cdebb90c9ac12799902e54f5f01978ff49" translate="yes" xml:space="preserve">
          <source>std::basic_ofstream&amp;lt;CharT,Traits&amp;gt;::swap</source>
          <target state="translated">std::basic_ofstream&amp;lt;CharT,Traits&amp;gt;::swap</target>
        </trans-unit>
        <trans-unit id="b42dc18832bf6e199fefb8a9c527e59dd431f07c" translate="yes" xml:space="preserve">
          <source>std::basic_ofstream::basic_ofstream</source>
          <target state="translated">std::basic_ofstream::basic_ofstream</target>
        </trans-unit>
        <trans-unit id="b7676ae6876239e28ec3e7de93b8a22aecfe4a87" translate="yes" xml:space="preserve">
          <source>std::basic_ofstream::close</source>
          <target state="translated">std::basic_ofstream::close</target>
        </trans-unit>
        <trans-unit id="19cea41dde8666e23a0ba7fbb5f231d2b7e164a2" translate="yes" xml:space="preserve">
          <source>std::basic_ofstream::is_open</source>
          <target state="translated">std::basic_ofstream::is_open</target>
        </trans-unit>
        <trans-unit id="193611f65338125a0a3e5f32932942b7eaa16ee4" translate="yes" xml:space="preserve">
          <source>std::basic_ofstream::open</source>
          <target state="translated">std::basic_ofstream::open</target>
        </trans-unit>
        <trans-unit id="be6cfa85b838b442b8b6267b5c7f6cae6e733fc8" translate="yes" xml:space="preserve">
          <source>std::basic_ofstream::operator=</source>
          <target state="translated">std::basic_ofstream::operator=</target>
        </trans-unit>
        <trans-unit id="a4b98ee74cfa0adc0a24590e39c8f15f1b6f3f13" translate="yes" xml:space="preserve">
          <source>std::basic_ofstream::rdbuf</source>
          <target state="translated">std::basic_ofstream::rdbuf</target>
        </trans-unit>
        <trans-unit id="d3c6490ccba1c98867fca18327392f6d23b5cf73" translate="yes" xml:space="preserve">
          <source>std::basic_ofstream::swap</source>
          <target state="translated">std::basic_ofstream::swap</target>
        </trans-unit>
        <trans-unit id="593fabf644ed49e7cdb1c64a39f756c4eac0bcd5" translate="yes" xml:space="preserve">
          <source>std::basic_ostream</source>
          <target state="translated">std::basic_ostream</target>
        </trans-unit>
        <trans-unit id="2f4203672561e5d560d234557a1ab15b7937aa95" translate="yes" xml:space="preserve">
          <source>std::basic_ostream&amp;lt;CharT,Traits&amp;gt;::basic_ostream</source>
          <target state="translated">std::basic_ostream&amp;lt;CharT,Traits&amp;gt;::basic_ostream</target>
        </trans-unit>
        <trans-unit id="a8ae5f049b355489b7524f55714a3482ea6bf07e" translate="yes" xml:space="preserve">
          <source>std::basic_ostream&amp;lt;CharT,Traits&amp;gt;::flush</source>
          <target state="translated">std::basic_ostream&amp;lt;CharT,Traits&amp;gt;::flush</target>
        </trans-unit>
        <trans-unit id="7e9359c5e802c5290bb6b82ecf25968a2c4b01ab" translate="yes" xml:space="preserve">
          <source>std::basic_ostream&amp;lt;CharT,Traits&amp;gt;::operator&amp;lt;&amp;lt;</source>
          <target state="translated">std::basic_ostream&amp;lt;CharT,Traits&amp;gt;::operator&amp;lt;&amp;lt;</target>
        </trans-unit>
        <trans-unit id="1d6b1b3a2b1c282048f42b94e8b0765c8fd1240f" translate="yes" xml:space="preserve">
          <source>std::basic_ostream&amp;lt;CharT,Traits&amp;gt;::operator=</source>
          <target state="translated">std::basic_ostream&amp;lt;CharT,Traits&amp;gt;::operator=</target>
        </trans-unit>
        <trans-unit id="38e1f762b94c14a7ada2015f5a2c7bf2125be18c" translate="yes" xml:space="preserve">
          <source>std::basic_ostream&amp;lt;CharT,Traits&amp;gt;::put</source>
          <target state="translated">std::basic_ostream&amp;lt;CharT,Traits&amp;gt;::put</target>
        </trans-unit>
        <trans-unit id="397371041a754fe0be360644f19fbf73a122a185" translate="yes" xml:space="preserve">
          <source>std::basic_ostream&amp;lt;CharT,Traits&amp;gt;::seekp</source>
          <target state="translated">std::basic_ostream&amp;lt;CharT,Traits&amp;gt;::seekp</target>
        </trans-unit>
        <trans-unit id="768daa154a70a6dbeba0eb6bb82a057c432b62b9" translate="yes" xml:space="preserve">
          <source>std::basic_ostream&amp;lt;CharT,Traits&amp;gt;::sentry</source>
          <target state="translated">std::basic_ostream&amp;lt;CharT,Traits&amp;gt;::sentry</target>
        </trans-unit>
        <trans-unit id="36815664053cfbe3a6342241fd3f1b54ae5e5dc6" translate="yes" xml:space="preserve">
          <source>std::basic_ostream&amp;lt;CharT,Traits&amp;gt;::swap</source>
          <target state="translated">std::basic_ostream&amp;lt;CharT,Traits&amp;gt;::swap</target>
        </trans-unit>
        <trans-unit id="6caf04d011da22724a2220db10d93ffe58b248b1" translate="yes" xml:space="preserve">
          <source>std::basic_ostream&amp;lt;CharT,Traits&amp;gt;::tellp</source>
          <target state="translated">std::basic_ostream&amp;lt;CharT,Traits&amp;gt;::tellp</target>
        </trans-unit>
        <trans-unit id="e7ba2078b192035243f2395d1b8fcd9b586c4d52" translate="yes" xml:space="preserve">
          <source>std::basic_ostream&amp;lt;CharT,Traits&amp;gt;::write</source>
          <target state="translated">std::basic_ostream&amp;lt;CharT,Traits&amp;gt;::write</target>
        </trans-unit>
        <trans-unit id="65dc4b03ae22d7c26fff11bca4172864d7c1668e" translate="yes" xml:space="preserve">
          <source>std::basic_ostream&amp;lt;CharT,Traits&amp;gt;::~basic_ostream</source>
          <target state="translated">std::basic_ostream&amp;lt;CharT,Traits&amp;gt;::~basic_ostream</target>
        </trans-unit>
        <trans-unit id="8cedaa0092e415d8ba3d3ed89099d90bd1c6729e" translate="yes" xml:space="preserve">
          <source>std::basic_ostream::basic_ostream</source>
          <target state="translated">std::basic_ostream::basic_ostream</target>
        </trans-unit>
        <trans-unit id="49a3443133520a76bb0077b1a8739b7585c8e3f4" translate="yes" xml:space="preserve">
          <source>std::basic_ostream::flush</source>
          <target state="translated">std::basic_ostream::flush</target>
        </trans-unit>
        <trans-unit id="05b37ad65af6a0a989e1da76cecf1c7a581d7003" translate="yes" xml:space="preserve">
          <source>std::basic_ostream::operator&amp;lt;&amp;lt;</source>
          <target state="translated">std::basic_ostream::operator&amp;lt;&amp;lt;</target>
        </trans-unit>
        <trans-unit id="8120f2a938de006ec9ea794c49af415a62f7d6ae" translate="yes" xml:space="preserve">
          <source>std::basic_ostream::operator=</source>
          <target state="translated">std::basic_ostream::operator=</target>
        </trans-unit>
        <trans-unit id="46e25b1ed7bc17d0b34b7cc0a9799d0aaa016862" translate="yes" xml:space="preserve">
          <source>std::basic_ostream::put</source>
          <target state="translated">std::basic_ostream::put</target>
        </trans-unit>
        <trans-unit id="9b7cbb3d87d3c90c637070eff18d78f415b056b1" translate="yes" xml:space="preserve">
          <source>std::basic_ostream::seekp</source>
          <target state="translated">std::basic_ostream::seekp</target>
        </trans-unit>
        <trans-unit id="80130cd32a82c7855691d020dab97f08a2654233" translate="yes" xml:space="preserve">
          <source>std::basic_ostream::sentry</source>
          <target state="translated">std::basic_ostream::sentry</target>
        </trans-unit>
        <trans-unit id="a36a2522da503fa1367429fe6532e97384020184" translate="yes" xml:space="preserve">
          <source>std::basic_ostream::sentry::operator bool</source>
          <target state="translated">std::basic_ostream::sentry::operator bool</target>
        </trans-unit>
        <trans-unit id="5a015c61d38a5244335b365699c59de1bd39a8b3" translate="yes" xml:space="preserve">
          <source>std::basic_ostream::sentry::sentry</source>
          <target state="translated">std::basic_ostream::sentry::sentry</target>
        </trans-unit>
        <trans-unit id="b00d9518137fe60c7a9c051a11b4b889fdbfdb24" translate="yes" xml:space="preserve">
          <source>std::basic_ostream::sentry::~sentry</source>
          <target state="translated">std::basic_ostream::sentry::~sentry</target>
        </trans-unit>
        <trans-unit id="0f75c5d571823816e5c1eb77cc7968694b13dab1" translate="yes" xml:space="preserve">
          <source>std::basic_ostream::swap</source>
          <target state="translated">std::basic_ostream::swap</target>
        </trans-unit>
        <trans-unit id="62adc33899fb9d01f4b03ec91f6611ed15cbedc5" translate="yes" xml:space="preserve">
          <source>std::basic_ostream::tellp</source>
          <target state="translated">std::basic_ostream::tellp</target>
        </trans-unit>
        <trans-unit id="50bfcd3b69c70c48a3dddbf008bbbab7bd69849f" translate="yes" xml:space="preserve">
          <source>std::basic_ostream::write</source>
          <target state="translated">std::basic_ostream::write</target>
        </trans-unit>
        <trans-unit id="3b1486659ebd14be4c1d7126421f572132bdcf0e" translate="yes" xml:space="preserve">
          <source>std::basic_ostream::~basic_ostream</source>
          <target state="translated">std::basic_ostream::~basic_ostream</target>
        </trans-unit>
        <trans-unit id="5239a0c84b7ff32d470e8a73b5ab1a75091a984f" translate="yes" xml:space="preserve">
          <source>std::basic_ostringstream</source>
          <target state="translated">std::basic_ostringstream</target>
        </trans-unit>
        <trans-unit id="d1c5aeb2b1395e90259f38c64b19dedc2df3fb95" translate="yes" xml:space="preserve">
          <source>std::basic_ostringstream&amp;lt;CharT,Traits,Allocator&amp;gt;::basic_ostringstream</source>
          <target state="translated">std::basic_ostringstream&amp;lt;CharT,Traits,Allocator&amp;gt;::basic_ostringstream</target>
        </trans-unit>
        <trans-unit id="922bb967d1927264fd2548852d04463e46834a47" translate="yes" xml:space="preserve">
          <source>std::basic_ostringstream&amp;lt;CharT,Traits,Allocator&amp;gt;::str</source>
          <target state="translated">std::basic_ostringstream&amp;lt;CharT,Traits,Allocator&amp;gt;::str</target>
        </trans-unit>
        <trans-unit id="8403487b852c3ca3846981808452eb5e007af48b" translate="yes" xml:space="preserve">
          <source>std::basic_ostringstream::basic_ostringstream</source>
          <target state="translated">std::basic_ostringstream::basic_ostringstream</target>
        </trans-unit>
        <trans-unit id="aca283dde30441eaeb1a7c6c3f0f8205f1b74c3d" translate="yes" xml:space="preserve">
          <source>std::basic_ostringstream::operator=</source>
          <target state="translated">std::basic_ostringstream::operator=</target>
        </trans-unit>
        <trans-unit id="bf19be0132072d80f34f301397e4954e82f4d391" translate="yes" xml:space="preserve">
          <source>std::basic_ostringstream::rdbuf</source>
          <target state="translated">std::basic_ostringstream::rdbuf</target>
        </trans-unit>
        <trans-unit id="bcf943203e682f80bcf26e8baae2b0dc5e37d867" translate="yes" xml:space="preserve">
          <source>std::basic_ostringstream::str</source>
          <target state="translated">std::basic_ostringstream::str</target>
        </trans-unit>
        <trans-unit id="68a487fdc5b0fec1551018dd88a6f790cd2b5ce6" translate="yes" xml:space="preserve">
          <source>std::basic_ostringstream::swap</source>
          <target state="translated">std::basic_ostringstream::swap</target>
        </trans-unit>
        <trans-unit id="d7979cff38597094d016ec8140245190bc94ff0d" translate="yes" xml:space="preserve">
          <source>std::basic_osyncstream</source>
          <target state="translated">std::basic_osyncstream</target>
        </trans-unit>
        <trans-unit id="80ed1f66195a3bfd10cf48ee1bdbf2f838e6ea0f" translate="yes" xml:space="preserve">
          <source>std::basic_osyncstream&amp;lt;CharT,Traits,Allocator&amp;gt;::basic_osyncstream</source>
          <target state="translated">std::basic_osyncstream&amp;lt;CharT,Traits,Allocator&amp;gt;::basic_osyncstream</target>
        </trans-unit>
        <trans-unit id="c8f4baac6c39d9a55350fb72bcdf283bd05bdd3c" translate="yes" xml:space="preserve">
          <source>std::basic_osyncstream&amp;lt;CharT,Traits,Allocator&amp;gt;::emit</source>
          <target state="translated">std::basic_osyncstream&amp;lt;CharT,Traits,Allocator&amp;gt;::emit</target>
        </trans-unit>
        <trans-unit id="a0da9851c21f495d01c549e8320f71c14f08f1aa" translate="yes" xml:space="preserve">
          <source>std::basic_osyncstream&amp;lt;CharT,Traits,Allocator&amp;gt;::get_wrapped</source>
          <target state="translated">std::basic_osyncstream&amp;lt;CharT,Traits,Allocator&amp;gt;::get_wrapped</target>
        </trans-unit>
        <trans-unit id="28a9ba6ade455c5e4892f78f3d92f1ad3eff599f" translate="yes" xml:space="preserve">
          <source>std::basic_osyncstream&amp;lt;CharT,Traits,Allocator&amp;gt;::operator=</source>
          <target state="translated">std::basic_osyncstream&amp;lt;CharT,Traits,Allocator&amp;gt;::operator=</target>
        </trans-unit>
        <trans-unit id="3284d6135af2171dce8086d5bf433e71db348d4b" translate="yes" xml:space="preserve">
          <source>std::basic_osyncstream&amp;lt;CharT,Traits,Allocator&amp;gt;::rdbuf</source>
          <target state="translated">std::basic_osyncstream&amp;lt;CharT,Traits,Allocator&amp;gt;::rdbuf</target>
        </trans-unit>
        <trans-unit id="fade9b55d76437089c3fb535e9eb53b3199c13b8" translate="yes" xml:space="preserve">
          <source>std::basic_osyncstream&amp;lt;CharT,Traits,Allocator&amp;gt;::~basic_osyncstream</source>
          <target state="translated">std::basic_osyncstream&amp;lt;CharT,Traits,Allocator&amp;gt;::~basic_osyncstream</target>
        </trans-unit>
        <trans-unit id="79231e44a883c72aee4bca0ca601b851c43808d7" translate="yes" xml:space="preserve">
          <source>std::basic_osyncstream::basic_osyncstream</source>
          <target state="translated">std::basic_osyncstream::basic_osyncstream</target>
        </trans-unit>
        <trans-unit id="50d164a7aeba2c2e32a583ba78d865fbc0dce725" translate="yes" xml:space="preserve">
          <source>std::basic_osyncstream::emit</source>
          <target state="translated">std::basic_osyncstream::emit</target>
        </trans-unit>
        <trans-unit id="75f658b2336ee17aa261b8d4f6833e160c7168b6" translate="yes" xml:space="preserve">
          <source>std::basic_osyncstream::get_wrapped</source>
          <target state="translated">std::basic_osyncstream::get_wrapped</target>
        </trans-unit>
        <trans-unit id="7ace8abb3a062bc5a8c0c1783702506e9c61ff8b" translate="yes" xml:space="preserve">
          <source>std::basic_osyncstream::operator=</source>
          <target state="translated">std::basic_osyncstream::operator=</target>
        </trans-unit>
        <trans-unit id="f0ecd00a8b7d1c646d8819e5c20d466a2ac6a1ab" translate="yes" xml:space="preserve">
          <source>std::basic_osyncstream::rdbuf</source>
          <target state="translated">std::basic_osyncstream::rdbuf</target>
        </trans-unit>
        <trans-unit id="b7267d499d1ebef7f5af2785262c2a5ea1fd9833" translate="yes" xml:space="preserve">
          <source>std::basic_osyncstream::~basic_osyncstream</source>
          <target state="translated">std::basic_osyncstream::~basic_osyncstream</target>
        </trans-unit>
        <trans-unit id="df09edd80d46699b2c4a881d60128461c50562b8" translate="yes" xml:space="preserve">
          <source>std::basic_regex</source>
          <target state="translated">std::basic_regex</target>
        </trans-unit>
        <trans-unit id="b8565fef8309b679be97511578acfc2a382a1df6" translate="yes" xml:space="preserve">
          <source>std::basic_regex constants</source>
          <target state="translated">std::basic_regex 定数</target>
        </trans-unit>
        <trans-unit id="7d9d2ca36e1f5dccde3fbb8936e7f3dfb5e4daee" translate="yes" xml:space="preserve">
          <source>std::basic_regex&amp;lt;CharT,Traits&amp;gt;::assign</source>
          <target state="translated">std::basic_regex&amp;lt;CharT,Traits&amp;gt;::assign</target>
        </trans-unit>
        <trans-unit id="3b99a12d5a04bf80c7e2fb06e5656568cae2f554" translate="yes" xml:space="preserve">
          <source>std::basic_regex&amp;lt;CharT,Traits&amp;gt;::basic_regex</source>
          <target state="translated">std::basic_regex&amp;lt;CharT,Traits&amp;gt;::basic_regex</target>
        </trans-unit>
        <trans-unit id="af217758c8cdc2b211e21e3a6a022ab4b6e01f98" translate="yes" xml:space="preserve">
          <source>std::basic_regex&amp;lt;CharT,Traits&amp;gt;::flags</source>
          <target state="translated">std::basic_regex&amp;lt;CharT,Traits&amp;gt;::flags</target>
        </trans-unit>
        <trans-unit id="05596177fb0a4933834630c1b464b2d8e98ac47c" translate="yes" xml:space="preserve">
          <source>std::basic_regex&amp;lt;CharT,Traits&amp;gt;::getloc</source>
          <target state="translated">std::basic_regex&amp;lt;CharT,Traits&amp;gt;::getloc</target>
        </trans-unit>
        <trans-unit id="89781742d29fe97ba8affc2b9d42c28fea5a40c2" translate="yes" xml:space="preserve">
          <source>std::basic_regex&amp;lt;CharT,Traits&amp;gt;::imbue</source>
          <target state="translated">std::basic_regex&amp;lt;CharT,Traits&amp;gt;::imbue</target>
        </trans-unit>
        <trans-unit id="1288749c7d212950d1e3a26c25d5f40e0444135b" translate="yes" xml:space="preserve">
          <source>std::basic_regex&amp;lt;CharT,Traits&amp;gt;::mark_count</source>
          <target state="translated">std::basic_regex&amp;lt;CharT,Traits&amp;gt;::mark_count</target>
        </trans-unit>
        <trans-unit id="0c4d1377a5867c770b1fd90a1d960b630788c61b" translate="yes" xml:space="preserve">
          <source>std::basic_regex&amp;lt;CharT,Traits&amp;gt;::operator=</source>
          <target state="translated">std::basic_regex&amp;lt;CharT,Traits&amp;gt;::operator=</target>
        </trans-unit>
        <trans-unit id="c3399400bab6af1828a9a7d87565908528c52567" translate="yes" xml:space="preserve">
          <source>std::basic_regex&amp;lt;CharT,Traits&amp;gt;::swap</source>
          <target state="translated">std::basic_regex&amp;lt;CharT,Traits&amp;gt;::swap</target>
        </trans-unit>
        <trans-unit id="1f0eee7baa2c2f21ae259b0ef4deb201fed6d32d" translate="yes" xml:space="preserve">
          <source>std::basic_regex&amp;lt;CharT,Traits&amp;gt;::~basic_regex</source>
          <target state="translated">std::basic_regex&amp;lt;CharT,Traits&amp;gt;::~basic_regex</target>
        </trans-unit>
        <trans-unit id="604bedbf7e14e02feb5f2c64e1723e43df45d1c1" translate="yes" xml:space="preserve">
          <source>std::basic_regex::assign</source>
          <target state="translated">std::basic_regex::assign</target>
        </trans-unit>
        <trans-unit id="b6c17ebc086fb6978c82044b716555df2ee967fd" translate="yes" xml:space="preserve">
          <source>std::basic_regex::basic_regex</source>
          <target state="translated">std::basic_regex::basic_regex</target>
        </trans-unit>
        <trans-unit id="18f47a97c8e4018fe19212814dbb248d086ea502" translate="yes" xml:space="preserve">
          <source>std::basic_regex::flags</source>
          <target state="translated">std::basic_regex::flags</target>
        </trans-unit>
        <trans-unit id="e54aba4a36ad8ddf7cd737e8421ceeb850696773" translate="yes" xml:space="preserve">
          <source>std::basic_regex::getloc</source>
          <target state="translated">std::basic_regex::getloc</target>
        </trans-unit>
        <trans-unit id="73410bfe8e23da46a73ad8e6683ddcbab687b917" translate="yes" xml:space="preserve">
          <source>std::basic_regex::imbue</source>
          <target state="translated">std::basic_regex::imbue</target>
        </trans-unit>
        <trans-unit id="444945398d073549a50b472f89dba8926626a38d" translate="yes" xml:space="preserve">
          <source>std::basic_regex::mark_count</source>
          <target state="translated">std::basic_regex::mark_count</target>
        </trans-unit>
        <trans-unit id="d7478ab0f6ddf0eb674527171bfbca6b9a24434d" translate="yes" xml:space="preserve">
          <source>std::basic_regex::operator=</source>
          <target state="translated">std::basic_regex::operator=</target>
        </trans-unit>
        <trans-unit id="594ba761a8badd37bbe4dbaffe20495fdcec5e15" translate="yes" xml:space="preserve">
          <source>std::basic_regex::swap</source>
          <target state="translated">std::basic_regex::swap</target>
        </trans-unit>
        <trans-unit id="749c48ba69a5a9910cbeaa169e44f6964d59b87a" translate="yes" xml:space="preserve">
          <source>std::basic_regex::~basic_regex</source>
          <target state="translated">std::basic_regex::~basic_regex</target>
        </trans-unit>
        <trans-unit id="2845ae3171681fa677869053d7864c3d3c707c50" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf</source>
          <target state="translated">std::basic_streambuf</target>
        </trans-unit>
        <trans-unit id="133e92968c5b7087ad15fda8f82f2427b49e5c7b" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::basic_streambuf</source>
          <target state="translated">std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::basic_streambuf</target>
        </trans-unit>
        <trans-unit id="97f23b3c4d4d8551e46debd0584e7c6973b5630d" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::eback, gptr, egptr</source>
          <target state="translated">std :: basic_streambuf &amp;lt;CharT、Traits&amp;gt; :: eback、gptr、egptr</target>
        </trans-unit>
        <trans-unit id="cd43142285374ef2b0dc9ebf5735e2da65ad0310" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::gbump</source>
          <target state="translated">std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::gbump</target>
        </trans-unit>
        <trans-unit id="3ac8496163206eff29efbae108ea33423d155da4" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::getloc</source>
          <target state="translated">std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::getloc</target>
        </trans-unit>
        <trans-unit id="b8b5e83b2f51398b6fcdcaba7f39f0cca9bbe97b" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::in_avail</source>
          <target state="translated">std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::in_avail</target>
        </trans-unit>
        <trans-unit id="bc74685b86c50fd1ab8df8aa6aeff81842e4fc63" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::operator=</source>
          <target state="translated">std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::operator=</target>
        </trans-unit>
        <trans-unit id="f3eddfb458496838c5c522c918ed820ece7a88c1" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::overflow</source>
          <target state="translated">std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::overflow</target>
        </trans-unit>
        <trans-unit id="856ed9beabcec02261cadc77f2df5d29b085c076" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::pbackfail</source>
          <target state="translated">std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::pbackfail</target>
        </trans-unit>
        <trans-unit id="bfc155dbf2ef5527eedeffeb06a1898ddfa0cd22" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::pbase, std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::pptr, std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::epptr</source>
          <target state="translated">std :: basic_streambuf &amp;lt;CharT、Traits&amp;gt; :: pbase、std :: basic_streambuf &amp;lt;CharT、Traits&amp;gt; :: pptr、std :: basic_streambuf &amp;lt;CharT、Traits&amp;gt; :: epptr</target>
        </trans-unit>
        <trans-unit id="7ff6c7c02a0763ee37bb2e86dc1a9d35c4a6cf33" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::pbump</source>
          <target state="translated">std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::pbump</target>
        </trans-unit>
        <trans-unit id="1571e242fd12a8a30189ee92d2f103064e0ec0f7" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::pubimbue, std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::imbue</source>
          <target state="translated">std :: basic_streambuf &amp;lt;CharT、Traits&amp;gt; :: pubimbue、std :: basic_streambuf &amp;lt;CharT、Traits&amp;gt; :: imbue</target>
        </trans-unit>
        <trans-unit id="3c290ebf3a774ae0e31199c8bca708ebc14bfb57" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::pubseekoff, std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::seekoff</source>
          <target state="translated">std :: basic_streambuf &amp;lt;CharT、Traits&amp;gt; :: pubseekoff、std :: basic_streambuf &amp;lt;CharT、Traits&amp;gt; :: seekoff</target>
        </trans-unit>
        <trans-unit id="299c206ed44fecef1c82ca38bb5112c8a28343ba" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::pubseekpos, std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::seekpos</source>
          <target state="translated">std :: basic_streambuf &amp;lt;CharT、Traits&amp;gt; :: pubseekpos、std :: basic_streambuf &amp;lt;CharT、Traits&amp;gt; :: seekpos</target>
        </trans-unit>
        <trans-unit id="f7c03777f2a389a99d63341a59dba33a72f81b9f" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::pubsetbuf, std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::setbuf</source>
          <target state="translated">std :: basic_streambuf &amp;lt;CharT、Traits&amp;gt; :: pubsetbuf、std :: basic_streambuf &amp;lt;CharT、Traits&amp;gt; :: setbuf</target>
        </trans-unit>
        <trans-unit id="8fd4554ecdf6b01a17fb176343239bc83519b20b" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::pubsync, std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::sync</source>
          <target state="translated">std :: basic_streambuf &amp;lt;CharT、Traits&amp;gt; :: pubsync、std :: basic_streambuf &amp;lt;CharT、Traits&amp;gt; :: sync</target>
        </trans-unit>
        <trans-unit id="5a41fa0754372b64ee242d681477dba47eff674a" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::sbumpc</source>
          <target state="translated">std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::sbumpc</target>
        </trans-unit>
        <trans-unit id="c3e2082ffdefa4f57687175fd010ca8cb6314b52" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::setg</source>
          <target state="translated">std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::setg</target>
        </trans-unit>
        <trans-unit id="6c10da1e321fc6273f253ac1cd3c5cd86642a8bd" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::setp</source>
          <target state="translated">std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::setp</target>
        </trans-unit>
        <trans-unit id="2ee19af22e60936f454ab71beb723ded10d60ead" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::sgetc</source>
          <target state="translated">std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::sgetc</target>
        </trans-unit>
        <trans-unit id="e1cb9bcd0525013a19956ddc03435e7b150aa300" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::sgetn, std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::xsgetn</source>
          <target state="translated">std :: basic_streambuf &amp;lt;CharT、Traits&amp;gt; :: sgetn、std :: basic_streambuf &amp;lt;CharT、Traits&amp;gt; :: xsgetn</target>
        </trans-unit>
        <trans-unit id="952db86dec72719b3cafdf3db4ac593814c684ea" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::showmanyc</source>
          <target state="translated">std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::showmanyc</target>
        </trans-unit>
        <trans-unit id="9325dd633dc5e6864032d88337c12c52872bfc2f" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::snextc</source>
          <target state="translated">std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::snextc</target>
        </trans-unit>
        <trans-unit id="ce974d282754a6af9779903e7a372dfe322fced2" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::sputbackc</source>
          <target state="translated">std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::sputbackc</target>
        </trans-unit>
        <trans-unit id="d76892ab977da2e20d48f7187f5a4094b3896586" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::sputc</source>
          <target state="translated">std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::sputc</target>
        </trans-unit>
        <trans-unit id="0609cbdd814b50057f118e7ae21415caded74b59" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::sputn, std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::xsputn</source>
          <target state="translated">std :: basic_streambuf &amp;lt;CharT、Traits&amp;gt; :: sputn、std :: basic_streambuf &amp;lt;CharT、Traits&amp;gt; :: xsputn</target>
        </trans-unit>
        <trans-unit id="5893ffb97b82b1c638bdaecfc22a2c569e4c91e5" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::sungetc</source>
          <target state="translated">std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::sungetc</target>
        </trans-unit>
        <trans-unit id="9dc89c5378b03da12f03759e1ed505b81da4b266" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::swap</source>
          <target state="translated">std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::swap</target>
        </trans-unit>
        <trans-unit id="cd29081e714b7b9b92311258ee3fe76159d997aa" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::uflow</source>
          <target state="translated">std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::uflow</target>
        </trans-unit>
        <trans-unit id="59d0d441a916e99cf0a582d8acfc0939ccc4e259" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::underflow</source>
          <target state="translated">std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::underflow</target>
        </trans-unit>
        <trans-unit id="5e7b52b59ed2ff48c2ad3346974bce184fb50970" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::~basic_streambuf</source>
          <target state="translated">std::basic_streambuf&amp;lt;CharT,Traits&amp;gt;::~basic_streambuf</target>
        </trans-unit>
        <trans-unit id="e93aa3ff708eeecdbbfb31f31e82b125f4a37f5f" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf::basic_streambuf</source>
          <target state="translated">std::basic_streambuf::basic_streambuf</target>
        </trans-unit>
        <trans-unit id="e0a1309be76c8fccf18afe89b8272cbf4b0c5983" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf::eback</source>
          <target state="translated">std::basic_streambuf::eback</target>
        </trans-unit>
        <trans-unit id="495fd058eac21aac736c2c6951d8954ec4384910" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf::gbump</source>
          <target state="translated">std::basic_streambuf::gbump</target>
        </trans-unit>
        <trans-unit id="e1f4e38419578f8ab1b391e380cb5b0f56aee444" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf::getloc</source>
          <target state="translated">std::basic_streambuf::getloc</target>
        </trans-unit>
        <trans-unit id="b92a327f2d8bc565ca44593a556a54f2583b79cd" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf::in_avail</source>
          <target state="translated">std::basic_streambuf::in_avail</target>
        </trans-unit>
        <trans-unit id="78c8755ceb5a053fc3653d1f52d8af193a36196b" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf::operator=</source>
          <target state="translated">std::basic_streambuf::operator=</target>
        </trans-unit>
        <trans-unit id="ee34c8a4f8a200741dd441e492a520a49bd895c6" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf::overflow</source>
          <target state="translated">std::basic_streambuf::overflow</target>
        </trans-unit>
        <trans-unit id="748fcd4d136d38e8baf803790a9b1aaea19d7fbd" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf::pbackfail</source>
          <target state="translated">std::basic_streambuf::pbackfail</target>
        </trans-unit>
        <trans-unit id="ea5e633e232b80f71842ee1555192ce66a3e1f43" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf::pbump</source>
          <target state="translated">std::basic_streambuf::pbump</target>
        </trans-unit>
        <trans-unit id="6dd0556764574bfef00863d607497d3451ec2859" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf::pptr</source>
          <target state="translated">std::basic_streambuf::pptr</target>
        </trans-unit>
        <trans-unit id="821ca094eadaf78c0c4ab51342d2286233cbd8f1" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf::pubimbue</source>
          <target state="translated">std::basic_streambuf::pubimbue</target>
        </trans-unit>
        <trans-unit id="4cf8865565dd1f7f76c27c817605c895422eaff3" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf::sbumpc</source>
          <target state="translated">std::basic_streambuf::sbumpc</target>
        </trans-unit>
        <trans-unit id="99ef13aee2f6ba3a47745df02dfabdcb43faedff" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf::seekoff</source>
          <target state="translated">std::basic_streambuf::seekoff</target>
        </trans-unit>
        <trans-unit id="d6596d3e8d1f5a3dd785d866b330328ce26a708c" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf::seekpos</source>
          <target state="translated">std::basic_streambuf::seekpos</target>
        </trans-unit>
        <trans-unit id="feeae216c02ea8e26bba894a747dee3254d287c5" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf::setbuf</source>
          <target state="translated">std::basic_streambuf::setbuf</target>
        </trans-unit>
        <trans-unit id="00c34a54029865faffff9535e332e57ba85b8d35" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf::setg</source>
          <target state="translated">std::basic_streambuf::setg</target>
        </trans-unit>
        <trans-unit id="2903a61455d1c6d7f5d95d64c82906a5e69a4e1b" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf::setp</source>
          <target state="translated">std::basic_streambuf::setp</target>
        </trans-unit>
        <trans-unit id="159266993545895789d9369e23c05373b2ff7fab" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf::sgetc</source>
          <target state="translated">std::basic_streambuf::sgetc</target>
        </trans-unit>
        <trans-unit id="c88b406e5b8588d815c05d00446a32fffa27c178" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf::showmanyc</source>
          <target state="translated">std::basic_streambuf::showmanyc</target>
        </trans-unit>
        <trans-unit id="cf4fd3e8f383e9f1c18764dd73f6910979ca5508" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf::snextc</source>
          <target state="translated">std::basic_streambuf::snextc</target>
        </trans-unit>
        <trans-unit id="4761f4247aff030b2fa92d448644d236e8d22c21" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf::sputbackc</source>
          <target state="translated">std::basic_streambuf::sputbackc</target>
        </trans-unit>
        <trans-unit id="819f699fdf9c61d3978d7e8e7f492057b7c3207a" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf::sputc</source>
          <target state="translated">std::basic_streambuf::sputc</target>
        </trans-unit>
        <trans-unit id="9b2b2b47fc1af35ef11604b4f62fd1b73681878a" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf::sungetc</source>
          <target state="translated">std::basic_streambuf::sungetc</target>
        </trans-unit>
        <trans-unit id="c2a14683b57455bfe0c7d7efac0af72a439caffa" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf::swap</source>
          <target state="translated">std::basic_streambuf::swap</target>
        </trans-unit>
        <trans-unit id="a5e331406d3e32a2f95b1924018a8982b9e0ce84" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf::sync</source>
          <target state="translated">std::basic_streambuf::sync</target>
        </trans-unit>
        <trans-unit id="126f27ef33981b734182be9a10d6bac1efa36c8a" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf::uflow</source>
          <target state="translated">std::basic_streambuf::uflow</target>
        </trans-unit>
        <trans-unit id="dd33431942f3b6c2aac7479382d90f648eedbb0b" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf::underflow</source>
          <target state="translated">std::basic_streambuf::underflow</target>
        </trans-unit>
        <trans-unit id="4551759b8cb98d931d55ccb40999a76fbc495dee" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf::xsgetn</source>
          <target state="translated">std::basic_streambuf::xsgetn</target>
        </trans-unit>
        <trans-unit id="ce6966702021ab80b8258dc9fadc21b38fb5758e" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf::xsputn</source>
          <target state="translated">std::basic_streambuf::xsputn</target>
        </trans-unit>
        <trans-unit id="17b02fc41777cd6ca7be37158b31ac8fed2ce755" translate="yes" xml:space="preserve">
          <source>std::basic_streambuf::~basic_streambuf</source>
          <target state="translated">std::basic_streambuf::~basic_streambuf</target>
        </trans-unit>
        <trans-unit id="f543d526c7a23100fa8173af0676e13456570b9a" translate="yes" xml:space="preserve">
          <source>std::basic_string</source>
          <target state="translated">std::basic_string</target>
        </trans-unit>
        <trans-unit id="41ccba3f10cfcd53821dcdd1298c20e2512eb980" translate="yes" xml:space="preserve">
          <source>std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::append</source>
          <target state="translated">std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::append</target>
        </trans-unit>
        <trans-unit id="e5285e9d0141b9ce949dfd333f81b4bb2ff25e51" translate="yes" xml:space="preserve">
          <source>std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::assign</source>
          <target state="translated">std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::assign</target>
        </trans-unit>
        <trans-unit id="3f2d4386349dac797d06bf1be8ef4a49a4a9a95c" translate="yes" xml:space="preserve">
          <source>std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::at</source>
          <target state="translated">std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::at</target>
        </trans-unit>
        <trans-unit id="17106104082bc715cbce4d3ad60cc068c992a624" translate="yes" xml:space="preserve">
          <source>std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::back</source>
          <target state="translated">std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::back</target>
        </trans-unit>
        <trans-unit id="9b675f13208fdea9e8f99f0e027e456d1c16cc47" translate="yes" xml:space="preserve">
          <source>std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::basic_string</source>
          <target state="translated">std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::basic_string</target>
        </trans-unit>
        <trans-unit id="25c712cfaa8d2d1cdcd833c7bb9b1d654d9bd149" translate="yes" xml:space="preserve">
          <source>std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::begin, std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::cbegin</source>
          <target state="translated">std :: basic_string &amp;lt;CharT、Traits、Allocator&amp;gt; :: begin、std :: basic_string &amp;lt;CharT、Traits、Allocator&amp;gt; :: cbegin</target>
        </trans-unit>
        <trans-unit id="9b9906b5d3259d5162024037610c386cce715a3d" translate="yes" xml:space="preserve">
          <source>std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::c_str</source>
          <target state="translated">std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::c_str</target>
        </trans-unit>
        <trans-unit id="ae25687bfb7062901d145044c044fd30a7ccc098" translate="yes" xml:space="preserve">
          <source>std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::capacity</source>
          <target state="translated">std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::capacity</target>
        </trans-unit>
        <trans-unit id="1849f1788eb952f6030e2f10660e19fafb6e70a9" translate="yes" xml:space="preserve">
          <source>std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::clear</source>
          <target state="translated">std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::clear</target>
        </trans-unit>
        <trans-unit id="d09740c49585c5aa0e57d3aead4f8817f82266a0" translate="yes" xml:space="preserve">
          <source>std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::compare</source>
          <target state="translated">std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::compare</target>
        </trans-unit>
        <trans-unit id="f0f52b607f6ec9db6936fd6603a12e28d206e27a" translate="yes" xml:space="preserve">
          <source>std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::copy</source>
          <target state="translated">std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::copy</target>
        </trans-unit>
        <trans-unit id="1f5c410cf081b58a6290df13d9efae4db5a4a94f" translate="yes" xml:space="preserve">
          <source>std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::data</source>
          <target state="translated">std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::data</target>
        </trans-unit>
        <trans-unit id="a9984276ccd1a579ab193f0c110ffdeeb481046c" translate="yes" xml:space="preserve">
          <source>std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::empty</source>
          <target state="translated">std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::empty</target>
        </trans-unit>
        <trans-unit id="e37e3bab5a9f94c871b257f9c43e7ebb7ba11415" translate="yes" xml:space="preserve">
          <source>std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::end, std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::cend</source>
          <target state="translated">std :: basic_string &amp;lt;CharT、Traits、Allocator&amp;gt; :: end、std :: basic_string &amp;lt;CharT、Traits、Allocator&amp;gt; :: cend</target>
        </trans-unit>
        <trans-unit id="7ccb00b9561183407561555a8d8d77a940270a30" translate="yes" xml:space="preserve">
          <source>std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::ends_with</source>
          <target state="translated">std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::ends_with</target>
        </trans-unit>
        <trans-unit id="de97ad4e19cc575d925ba70f37d854072a55cad4" translate="yes" xml:space="preserve">
          <source>std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::erase</source>
          <target state="translated">std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::erase</target>
        </trans-unit>
        <trans-unit id="aa0e9d009810b5cb019bc8758e3bece1243355f8" translate="yes" xml:space="preserve">
          <source>std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::find</source>
          <target state="translated">std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::find</target>
        </trans-unit>
        <trans-unit id="b049dda5fe0caf0df2e145e3637503beea27fd2a" translate="yes" xml:space="preserve">
          <source>std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::find_first_not_of</source>
          <target state="translated">std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::find_first_not_of</target>
        </trans-unit>
        <trans-unit id="8872969fb4c11fe3b5d928b35b076efdd10bd693" translate="yes" xml:space="preserve">
          <source>std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::find_first_of</source>
          <target state="translated">std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::find_first_of</target>
        </trans-unit>
        <trans-unit id="4122f4b5bf3693cf5cd9e1035bfab76b76d95e6f" translate="yes" xml:space="preserve">
          <source>std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::find_last_not_of</source>
          <target state="translated">std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::find_last_not_of</target>
        </trans-unit>
        <trans-unit id="cde26aa9b5814f48eae49a8e3725f823fbc8fe49" translate="yes" xml:space="preserve">
          <source>std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::find_last_of</source>
          <target state="translated">std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::find_last_of</target>
        </trans-unit>
        <trans-unit id="75dd3114445804a0f208f92b3a80ec4fbd70db8e" translate="yes" xml:space="preserve">
          <source>std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::front</source>
          <target state="translated">std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::front</target>
        </trans-unit>
        <trans-unit id="355a8e1d7f6b2bcfff6f2ace136e7bae5d0549bf" translate="yes" xml:space="preserve">
          <source>std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::get_allocator</source>
          <target state="translated">std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::get_allocator</target>
        </trans-unit>
        <trans-unit id="1168bcca5aff07a38307c0f13149e898eb3ce64b" translate="yes" xml:space="preserve">
          <source>std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::insert</source>
          <target state="translated">std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::insert</target>
        </trans-unit>
        <trans-unit id="afca17f032757460e40a2a50610dd7694c283e60" translate="yes" xml:space="preserve">
          <source>std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::max_size</source>
          <target state="translated">std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::max_size</target>
        </trans-unit>
        <trans-unit id="b74845bdb1b199da447413fa3234930e0d315d42" translate="yes" xml:space="preserve">
          <source>std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::npos</source>
          <target state="translated">std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::npos</target>
        </trans-unit>
        <trans-unit id="2ee4bef1b61140bb65c9cf5d7b736ab4e0c79ab6" translate="yes" xml:space="preserve">
          <source>std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::operator basic_string_view</source>
          <target state="translated">std :: basic_string &amp;lt;CharT、Traits、Allocator&amp;gt; :: operator basic_string_view</target>
        </trans-unit>
        <trans-unit id="9285c34507ba22277d94eaba11efd93c518532c6" translate="yes" xml:space="preserve">
          <source>std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::operator=</source>
          <target state="translated">std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::operator=</target>
        </trans-unit>
        <trans-unit id="7e70d83e0cf97bdf4646ffcd5e60d84efeffef35" translate="yes" xml:space="preserve">
          <source>std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::operator[]</source>
          <target state="translated">std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::operator[]</target>
        </trans-unit>
        <trans-unit id="7d1240a112add200264361b42cc40e612c32de10" translate="yes" xml:space="preserve">
          <source>std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::pop_back</source>
          <target state="translated">std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::pop_back</target>
        </trans-unit>
        <trans-unit id="f03df82acaf50adbf11f75c8240273ded4443c9d" translate="yes" xml:space="preserve">
          <source>std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::push_back</source>
          <target state="translated">std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::push_back</target>
        </trans-unit>
        <trans-unit id="e20a7e866a5dfd4c5050a0e961997e8e13d1d7d8" translate="yes" xml:space="preserve">
          <source>std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::rbegin, std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::crbegin</source>
          <target state="translated">std :: basic_string &amp;lt;CharT、Traits、Allocator&amp;gt; :: rbegin、std :: basic_string &amp;lt;CharT、Traits、Allocator&amp;gt; :: crbegin</target>
        </trans-unit>
        <trans-unit id="a4e2c44887e1a81aa89f404c45c06d260525c7c8" translate="yes" xml:space="preserve">
          <source>std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::rend, std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::crend</source>
          <target state="translated">std :: basic_string &amp;lt;CharT、Traits、Allocator&amp;gt; :: rend、std :: basic_string &amp;lt;CharT、Traits、Allocator&amp;gt; :: crend</target>
        </trans-unit>
        <trans-unit id="546e313457f90066d6558801788a7d7f45f9e07e" translate="yes" xml:space="preserve">
          <source>std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::replace</source>
          <target state="translated">std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::replace</target>
        </trans-unit>
        <trans-unit id="045dbb8b785c8c485de671de3096b1ad75de613b" translate="yes" xml:space="preserve">
          <source>std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::reserve</source>
          <target state="translated">std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::reserve</target>
        </trans-unit>
        <trans-unit id="345c3bce16b9cb9ca278d8a571aec93941d940fd" translate="yes" xml:space="preserve">
          <source>std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::resize</source>
          <target state="translated">std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::resize</target>
        </trans-unit>
        <trans-unit id="c045401c5f1975d54a8602f8b37ed3101965c923" translate="yes" xml:space="preserve">
          <source>std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::rfind</source>
          <target state="translated">std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::rfind</target>
        </trans-unit>
        <trans-unit id="ba112ec06c988f1b9ba5f1748be880fb935aae49" translate="yes" xml:space="preserve">
          <source>std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::shrink_to_fit</source>
          <target state="translated">std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::shrink_to_fit</target>
        </trans-unit>
        <trans-unit id="69fe1ab6e6bee7e7b3f3cc4096b1b1a34ce710ae" translate="yes" xml:space="preserve">
          <source>std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::size, std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::length</source>
          <target state="translated">std :: basic_string &amp;lt;CharT、Traits、Allocator&amp;gt; :: size、std :: basic_string &amp;lt;CharT、Traits、Allocator&amp;gt; :: length</target>
        </trans-unit>
        <trans-unit id="8bb6a5c90f877181ea1dcb2c7cb93d939a27e72e" translate="yes" xml:space="preserve">
          <source>std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::starts_with</source>
          <target state="translated">std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::starts_with</target>
        </trans-unit>
        <trans-unit id="4da764df453f3e7e8be77547cbe6e0a8925a142e" translate="yes" xml:space="preserve">
          <source>std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::substr</source>
          <target state="translated">std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::substr</target>
        </trans-unit>
        <trans-unit id="8a5cdac3fc98eaaf3ceb4f668e2dc2709e5ece8c" translate="yes" xml:space="preserve">
          <source>std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::swap</source>
          <target state="translated">std::basic_string&amp;lt;CharT,Traits,Allocator&amp;gt;::swap</target>
        </trans-unit>
        <trans-unit id="503a2f63480c18d551563c4df89026c6ba6c3c8d" translate="yes" xml:space="preserve">
          <source>std::basic_string::append</source>
          <target state="translated">std::basic_string::append</target>
        </trans-unit>
        <trans-unit id="0066a27a33fb145ab94d289abf465c83c17b23d3" translate="yes" xml:space="preserve">
          <source>std::basic_string::assign</source>
          <target state="translated">std::basic_string::assign</target>
        </trans-unit>
        <trans-unit id="8fd0ffa299724896661b73b36c034d9a91220972" translate="yes" xml:space="preserve">
          <source>std::basic_string::at</source>
          <target state="translated">std::basic_string::at</target>
        </trans-unit>
        <trans-unit id="da3663f4194d86e9fd94f57028fea14c8c450fa3" translate="yes" xml:space="preserve">
          <source>std::basic_string::back</source>
          <target state="translated">std::basic_string::back</target>
        </trans-unit>
        <trans-unit id="e8d8d77d8291bf84f01bcb4c2ed791c2040eece8" translate="yes" xml:space="preserve">
          <source>std::basic_string::basic_string</source>
          <target state="translated">std::basic_string::basic_string</target>
        </trans-unit>
        <trans-unit id="5cb7fe3675cda2c8f78abee8336739e2a05a30b1" translate="yes" xml:space="preserve">
          <source>std::basic_string::c_str</source>
          <target state="translated">std::basic_string::c_str</target>
        </trans-unit>
        <trans-unit id="0fb3f84fa4b6d18722cf381de643f53a1c22acf6" translate="yes" xml:space="preserve">
          <source>std::basic_string::capacity</source>
          <target state="translated">std::basic_string::capacity</target>
        </trans-unit>
        <trans-unit id="35888c1a292bb02a7fa91ab6f608e6c4c7ffd50c" translate="yes" xml:space="preserve">
          <source>std::basic_string::cbegin</source>
          <target state="translated">std::basic_string::cbegin</target>
        </trans-unit>
        <trans-unit id="1ffe1e5d8d182d60e738f9508d41e93d648b6b64" translate="yes" xml:space="preserve">
          <source>std::basic_string::clear</source>
          <target state="translated">std::basic_string::clear</target>
        </trans-unit>
        <trans-unit id="2e6fc573c4c5b04cb9046f1e6b408ebbe7803c9d" translate="yes" xml:space="preserve">
          <source>std::basic_string::compare</source>
          <target state="translated">std::basic_string::compare</target>
        </trans-unit>
        <trans-unit id="d0d2b79b87f23555f918cb8ffb5519e982c9c62e" translate="yes" xml:space="preserve">
          <source>std::basic_string::copy</source>
          <target state="translated">std::basic_string::copy</target>
        </trans-unit>
        <trans-unit id="896601792029772a493deddfc024d6a3bdb295ae" translate="yes" xml:space="preserve">
          <source>std::basic_string::data</source>
          <target state="translated">std::basic_string::data</target>
        </trans-unit>
        <trans-unit id="52d93b4ea85836f6dfee2e4d9f7f457f16b1e136" translate="yes" xml:space="preserve">
          <source>std::basic_string::empty</source>
          <target state="translated">std::basic_string::empty</target>
        </trans-unit>
        <trans-unit id="40b5c8b2c5c9a0f82dd0860ff4ae8b1468f3598a" translate="yes" xml:space="preserve">
          <source>std::basic_string::end</source>
          <target state="translated">std::basic_string::end</target>
        </trans-unit>
        <trans-unit id="d9a8bac2af2b9fc8c354507b472af4a55849ba95" translate="yes" xml:space="preserve">
          <source>std::basic_string::ends_with</source>
          <target state="translated">std::basic_string::ends_with</target>
        </trans-unit>
        <trans-unit id="60dbe07cfd91e3805c8de6ff1380da2fb84d11dc" translate="yes" xml:space="preserve">
          <source>std::basic_string::erase</source>
          <target state="translated">std::basic_string::erase</target>
        </trans-unit>
        <trans-unit id="73efbb96d08436e16f13d97a79b6f7748e84d75b" translate="yes" xml:space="preserve">
          <source>std::basic_string::find</source>
          <target state="translated">std::basic_string::find</target>
        </trans-unit>
        <trans-unit id="85da0a78d17d03f49a92be3cd1e8ad1bad514443" translate="yes" xml:space="preserve">
          <source>std::basic_string::find_first_not_of</source>
          <target state="translated">std::basic_string::find_first_not_of</target>
        </trans-unit>
        <trans-unit id="74bff189b538e9f64ce76123d4ada1113a17c22d" translate="yes" xml:space="preserve">
          <source>std::basic_string::find_first_of</source>
          <target state="translated">std::basic_string::find_first_of</target>
        </trans-unit>
        <trans-unit id="cfe8343c08c7f32e6a8319ed9000e4cbc1c7df82" translate="yes" xml:space="preserve">
          <source>std::basic_string::find_last_not_of</source>
          <target state="translated">std::basic_string::find_last_not_of</target>
        </trans-unit>
        <trans-unit id="2ff7e773760e4224967a1c6efe97ba6af78544e7" translate="yes" xml:space="preserve">
          <source>std::basic_string::find_last_of</source>
          <target state="translated">std::basic_string::find_last_of</target>
        </trans-unit>
        <trans-unit id="09d4f39ab8bb0dbd8c02f8601a7ed7b5acbf7cf9" translate="yes" xml:space="preserve">
          <source>std::basic_string::front</source>
          <target state="translated">std::basic_string::front</target>
        </trans-unit>
        <trans-unit id="4380fd30c8854a1145923587655526b0b7142e49" translate="yes" xml:space="preserve">
          <source>std::basic_string::get_allocator</source>
          <target state="translated">std::basic_string::get_allocator</target>
        </trans-unit>
        <trans-unit id="0dccc3d939bfde03b8e6c4a8ef4a94489f0d4fba" translate="yes" xml:space="preserve">
          <source>std::basic_string::insert</source>
          <target state="translated">std::basic_string::insert</target>
        </trans-unit>
        <trans-unit id="77144b4c9de7ec0269a997ef972fd14dc92b6782" translate="yes" xml:space="preserve">
          <source>std::basic_string::max_size</source>
          <target state="translated">std::basic_string::max_size</target>
        </trans-unit>
        <trans-unit id="3cb8828da9ab61d0e3c89a1806bf29fcaf5e35d7" translate="yes" xml:space="preserve">
          <source>std::basic_string::npos</source>
          <target state="translated">std::basic_string::npos</target>
        </trans-unit>
        <trans-unit id="a0d595ea9c3f2cb22b4c42bec031350f0a25c186" translate="yes" xml:space="preserve">
          <source>std::basic_string::operator basic_string_view</source>
          <target state="translated">std::basic_string::演算子 basic_string_view</target>
        </trans-unit>
        <trans-unit id="edd9b9d30770d5077ad850a6d3494e6a96a65f8f" translate="yes" xml:space="preserve">
          <source>std::basic_string::operator=</source>
          <target state="translated">std::basic_string::operator=</target>
        </trans-unit>
        <trans-unit id="77b3446090950f45d38dc1dedbe85d1f858ac429" translate="yes" xml:space="preserve">
          <source>std::basic_string::operator[]</source>
          <target state="translated">std::basic_string::operator[]</target>
        </trans-unit>
        <trans-unit id="5e265377ae07061124ebd103d804457472e17eec" translate="yes" xml:space="preserve">
          <source>std::basic_string::pop_back</source>
          <target state="translated">std::basic_string::pop_back</target>
        </trans-unit>
        <trans-unit id="dff89757b8a2062b1b80b342300473644e59a7e0" translate="yes" xml:space="preserve">
          <source>std::basic_string::push_back</source>
          <target state="translated">std::basic_string::push_back</target>
        </trans-unit>
        <trans-unit id="ca2773fa93a5ead00320cde3eb3405acd9b70505" translate="yes" xml:space="preserve">
          <source>std::basic_string::rbegin</source>
          <target state="translated">std::basic_string::rbegin</target>
        </trans-unit>
        <trans-unit id="50616d64c80b43af15ccab8290f677f9ba1d2985" translate="yes" xml:space="preserve">
          <source>std::basic_string::rend</source>
          <target state="translated">std::basic_string::rend</target>
        </trans-unit>
        <trans-unit id="b27bda6b5396396ce23e1d2e4a64ce174b154da7" translate="yes" xml:space="preserve">
          <source>std::basic_string::replace</source>
          <target state="translated">std::basic_string::replace</target>
        </trans-unit>
        <trans-unit id="55a4a826ca43fb3fd7e83a6399cc77965fcddeb9" translate="yes" xml:space="preserve">
          <source>std::basic_string::reserve</source>
          <target state="translated">std::basic_string::reserve</target>
        </trans-unit>
        <trans-unit id="54bc88851ecefeddbeffacc5cb2fd393f7d24558" translate="yes" xml:space="preserve">
          <source>std::basic_string::resize</source>
          <target state="translated">std::basic_string::resize</target>
        </trans-unit>
        <trans-unit id="64a98fdb51bce84e0c8f88a6ee139af2043f58b6" translate="yes" xml:space="preserve">
          <source>std::basic_string::rfind</source>
          <target state="translated">std::basic_string::rfind</target>
        </trans-unit>
        <trans-unit id="1534a025ba79f737ea5191c25ca55dd4f89003bc" translate="yes" xml:space="preserve">
          <source>std::basic_string::shrink_to_fit</source>
          <target state="translated">std::basic_string::shrink_to_fit</target>
        </trans-unit>
        <trans-unit id="5ef9156794496b79e4257defc930c5ec017fd2fd" translate="yes" xml:space="preserve">
          <source>std::basic_string::size</source>
          <target state="translated">std::basic_string::size</target>
        </trans-unit>
        <trans-unit id="2726bfd7e1a914648c0ba297d5bf1fe51fd92dd1" translate="yes" xml:space="preserve">
          <source>std::basic_string::starts_with</source>
          <target state="translated">std::basic_string::starts_with</target>
        </trans-unit>
        <trans-unit id="a398f8f9d4ba9c6af1c2533f5d4aa5c7c5834e28" translate="yes" xml:space="preserve">
          <source>std::basic_string::substr</source>
          <target state="translated">std::basic_string::substr</target>
        </trans-unit>
        <trans-unit id="13a178829cb6066e623a2a7ccbab9e1921c85bd6" translate="yes" xml:space="preserve">
          <source>std::basic_string::swap</source>
          <target state="translated">std::basic_string::swap</target>
        </trans-unit>
        <trans-unit id="13a3def52d5223cb8ffd927ff87bd558ba249b12" translate="yes" xml:space="preserve">
          <source>std::basic_string_view</source>
          <target state="translated">std::basic_string_view</target>
        </trans-unit>
        <trans-unit id="8fa534b5dcb4822c75a30bd5be79e5da5599d1a3" translate="yes" xml:space="preserve">
          <source>std::basic_string_view&amp;lt;CharT,Traits&amp;gt;::at</source>
          <target state="translated">std::basic_string_view&amp;lt;CharT,Traits&amp;gt;::at</target>
        </trans-unit>
        <trans-unit id="f457685c240474121fbae735e8749b31e4debdf1" translate="yes" xml:space="preserve">
          <source>std::basic_string_view&amp;lt;CharT,Traits&amp;gt;::back</source>
          <target state="translated">std::basic_string_view&amp;lt;CharT,Traits&amp;gt;::back</target>
        </trans-unit>
        <trans-unit id="58b74f5ca08378037c8f023ffdc24be1cc68ad38" translate="yes" xml:space="preserve">
          <source>std::basic_string_view&amp;lt;CharT,Traits&amp;gt;::basic_string_view</source>
          <target state="translated">std::basic_string_view&amp;lt;CharT,Traits&amp;gt;::basic_string_view</target>
        </trans-unit>
        <trans-unit id="2ca5148fbd9ff9b58c2c62cb76491fb9c90567bf" translate="yes" xml:space="preserve">
          <source>std::basic_string_view&amp;lt;CharT,Traits&amp;gt;::begin, std::basic_string_view&amp;lt;CharT,Traits&amp;gt;::cbegin</source>
          <target state="translated">std :: basic_string_view &amp;lt;CharT、Traits&amp;gt; :: begin、std :: basic_string_view &amp;lt;CharT、Traits&amp;gt; :: cbegin</target>
        </trans-unit>
        <trans-unit id="61d5247353dbb69040256292d7c380b37278e03f" translate="yes" xml:space="preserve">
          <source>std::basic_string_view&amp;lt;CharT,Traits&amp;gt;::compare</source>
          <target state="translated">std::basic_string_view&amp;lt;CharT,Traits&amp;gt;::compare</target>
        </trans-unit>
        <trans-unit id="5e76de692e0d24254b378df45e9c75679f92680c" translate="yes" xml:space="preserve">
          <source>std::basic_string_view&amp;lt;CharT,Traits&amp;gt;::copy</source>
          <target state="translated">std::basic_string_view&amp;lt;CharT,Traits&amp;gt;::copy</target>
        </trans-unit>
        <trans-unit id="1f181d4943278ab0a2b8f90a63c1448e127e66bc" translate="yes" xml:space="preserve">
          <source>std::basic_string_view&amp;lt;CharT,Traits&amp;gt;::data</source>
          <target state="translated">std::basic_string_view&amp;lt;CharT,Traits&amp;gt;::data</target>
        </trans-unit>
        <trans-unit id="75437a1d080bfc708526f2cb466e5e6050f85495" translate="yes" xml:space="preserve">
          <source>std::basic_string_view&amp;lt;CharT,Traits&amp;gt;::empty</source>
          <target state="translated">std::basic_string_view&amp;lt;CharT,Traits&amp;gt;::empty</target>
        </trans-unit>
        <trans-unit id="cf59d0e3cb28c815dab5874defb740c10fb3587b" translate="yes" xml:space="preserve">
          <source>std::basic_string_view&amp;lt;CharT,Traits&amp;gt;::end, std::basic_string_view&amp;lt;CharT,Traits&amp;gt;::cend</source>
          <target state="translated">std :: basic_string_view &amp;lt;CharT、Traits&amp;gt; :: end、std :: basic_string_view &amp;lt;CharT、Traits&amp;gt; :: cend</target>
        </trans-unit>
        <trans-unit id="e000b00724fd4cacf3294d6425844ef1ff876288" translate="yes" xml:space="preserve">
          <source>std::basic_string_view&amp;lt;CharT,Traits&amp;gt;::ends_with</source>
          <target state="translated">std::basic_string_view&amp;lt;CharT,Traits&amp;gt;::ends_with</target>
        </trans-unit>
        <trans-unit id="50e1bb175ce44fc490ddeddad3ade92dab658d85" translate="yes" xml:space="preserve">
          <source>std::basic_string_view&amp;lt;CharT,Traits&amp;gt;::find</source>
          <target state="translated">std::basic_string_view&amp;lt;CharT,Traits&amp;gt;::find</target>
        </trans-unit>
        <trans-unit id="c71dfbfd1898c98ac4811da3222db5bfb6a4bf35" translate="yes" xml:space="preserve">
          <source>std::basic_string_view&amp;lt;CharT,Traits&amp;gt;::find_first_not_of</source>
          <target state="translated">std::basic_string_view&amp;lt;CharT,Traits&amp;gt;::find_first_not_of</target>
        </trans-unit>
        <trans-unit id="0277ab8cbe3832e5217c868666b7db98a8d80580" translate="yes" xml:space="preserve">
          <source>std::basic_string_view&amp;lt;CharT,Traits&amp;gt;::find_first_of</source>
          <target state="translated">std::basic_string_view&amp;lt;CharT,Traits&amp;gt;::find_first_of</target>
        </trans-unit>
        <trans-unit id="d66a9a8ec6590cd60fbf980089bdf16b22e34765" translate="yes" xml:space="preserve">
          <source>std::basic_string_view&amp;lt;CharT,Traits&amp;gt;::find_last_not_of</source>
          <target state="translated">std::basic_string_view&amp;lt;CharT,Traits&amp;gt;::find_last_not_of</target>
        </trans-unit>
        <trans-unit id="09a36768ca2ed83e2f4edb70b17395f40c977bbf" translate="yes" xml:space="preserve">
          <source>std::basic_string_view&amp;lt;CharT,Traits&amp;gt;::find_last_of</source>
          <target state="translated">std::basic_string_view&amp;lt;CharT,Traits&amp;gt;::find_last_of</target>
        </trans-unit>
        <trans-unit id="52b4c95394a6c8f306923fbb838c42dbcbefa71e" translate="yes" xml:space="preserve">
          <source>std::basic_string_view&amp;lt;CharT,Traits&amp;gt;::front</source>
          <target state="translated">std::basic_string_view&amp;lt;CharT,Traits&amp;gt;::front</target>
        </trans-unit>
        <trans-unit id="0ab9509ff8e1eede0d64e6b5f9ad903947db0461" translate="yes" xml:space="preserve">
          <source>std::basic_string_view&amp;lt;CharT,Traits&amp;gt;::max_size</source>
          <target state="translated">std::basic_string_view&amp;lt;CharT,Traits&amp;gt;::max_size</target>
        </trans-unit>
        <trans-unit id="aaae5d4bfc31602e369dd59fb75ec682b6d80c1c" translate="yes" xml:space="preserve">
          <source>std::basic_string_view&amp;lt;CharT,Traits&amp;gt;::npos</source>
          <target state="translated">std::basic_string_view&amp;lt;CharT,Traits&amp;gt;::npos</target>
        </trans-unit>
        <trans-unit id="665f4813fd6c09d00c790506db7390c3af1fcbc2" translate="yes" xml:space="preserve">
          <source>std::basic_string_view&amp;lt;CharT,Traits&amp;gt;::operator=</source>
          <target state="translated">std::basic_string_view&amp;lt;CharT,Traits&amp;gt;::operator=</target>
        </trans-unit>
        <trans-unit id="64900e3da3fd337ba9677b79436c79d1409042bc" translate="yes" xml:space="preserve">
          <source>std::basic_string_view&amp;lt;CharT,Traits&amp;gt;::operator[]</source>
          <target state="translated">std::basic_string_view&amp;lt;CharT,Traits&amp;gt;::operator[]</target>
        </trans-unit>
        <trans-unit id="c15f96046f9c6bf8f8eb1aab8fdfbbbf74bdcb66" translate="yes" xml:space="preserve">
          <source>std::basic_string_view&amp;lt;CharT,Traits&amp;gt;::rbegin, std::basic_string_view&amp;lt;CharT,Traits&amp;gt;::crbegin</source>
          <target state="translated">std :: basic_string_view &amp;lt;CharT、Traits&amp;gt; :: rbegin、std :: basic_string_view &amp;lt;CharT、Traits&amp;gt; :: crbegin</target>
        </trans-unit>
        <trans-unit id="693f52c9a387ebd9fe2ace4da9a6ce2d0a9c35a7" translate="yes" xml:space="preserve">
          <source>std::basic_string_view&amp;lt;CharT,Traits&amp;gt;::remove_prefix</source>
          <target state="translated">std::basic_string_view&amp;lt;CharT,Traits&amp;gt;::remove_prefix</target>
        </trans-unit>
        <trans-unit id="3eafe764f87aa81182bbd014f5c616491966b8c0" translate="yes" xml:space="preserve">
          <source>std::basic_string_view&amp;lt;CharT,Traits&amp;gt;::remove_suffix</source>
          <target state="translated">std::basic_string_view&amp;lt;CharT,Traits&amp;gt;::remove_suffix</target>
        </trans-unit>
        <trans-unit id="97ab1d93a983f161af8b56f7017cd1eece70d33e" translate="yes" xml:space="preserve">
          <source>std::basic_string_view&amp;lt;CharT,Traits&amp;gt;::rend, std::basic_string_view&amp;lt;CharT,Traits&amp;gt;::crend</source>
          <target state="translated">std :: basic_string_view &amp;lt;CharT、Traits&amp;gt; :: rend、std :: basic_string_view &amp;lt;CharT、Traits&amp;gt; :: crend</target>
        </trans-unit>
        <trans-unit id="08de1b749b17f6a9137373dff6f923a0a121e2fd" translate="yes" xml:space="preserve">
          <source>std::basic_string_view&amp;lt;CharT,Traits&amp;gt;::rfind</source>
          <target state="translated">std::basic_string_view&amp;lt;CharT,Traits&amp;gt;::rfind</target>
        </trans-unit>
        <trans-unit id="a017ca9801a85bf9e45790c97aa56eb17063a5e0" translate="yes" xml:space="preserve">
          <source>std::basic_string_view&amp;lt;CharT,Traits&amp;gt;::size, std::basic_string_view&amp;lt;CharT,Traits&amp;gt;::length</source>
          <target state="translated">std :: basic_string_view &amp;lt;CharT、Traits&amp;gt; :: size、std :: basic_string_view &amp;lt;CharT、Traits&amp;gt; :: length</target>
        </trans-unit>
        <trans-unit id="b022788a24c42b7d04855cf84057c52a991f26ee" translate="yes" xml:space="preserve">
          <source>std::basic_string_view&amp;lt;CharT,Traits&amp;gt;::starts_with</source>
          <target state="translated">std::basic_string_view&amp;lt;CharT,Traits&amp;gt;::starts_with</target>
        </trans-unit>
        <trans-unit id="f62f2fca36aaa780bfc8f9cb57e1ebd20c0e64f3" translate="yes" xml:space="preserve">
          <source>std::basic_string_view&amp;lt;CharT,Traits&amp;gt;::substr</source>
          <target state="translated">std::basic_string_view&amp;lt;CharT,Traits&amp;gt;::substr</target>
        </trans-unit>
        <trans-unit id="c71cbe0a85bb4c3265664d33373788bc94d151d7" translate="yes" xml:space="preserve">
          <source>std::basic_string_view&amp;lt;CharT,Traits&amp;gt;::swap</source>
          <target state="translated">std::basic_string_view&amp;lt;CharT,Traits&amp;gt;::swap</target>
        </trans-unit>
        <trans-unit id="013382d6036f325c9921524b0a05e1ec249a9532" translate="yes" xml:space="preserve">
          <source>std::basic_string_view::at</source>
          <target state="translated">std::basic_string_view::at</target>
        </trans-unit>
        <trans-unit id="e4be47dbcbc50b7eb485dac2f619020870da2f09" translate="yes" xml:space="preserve">
          <source>std::basic_string_view::back</source>
          <target state="translated">std::basic_string_view::back</target>
        </trans-unit>
        <trans-unit id="55fafeed2b2c051aa87e2653f5f3dfb245aea1e6" translate="yes" xml:space="preserve">
          <source>std::basic_string_view::basic_string_view</source>
          <target state="translated">std::basic_string_view::basic_string_view</target>
        </trans-unit>
        <trans-unit id="826d5d5f09162d10ada9fa82fbefe4bbfb1d0522" translate="yes" xml:space="preserve">
          <source>std::basic_string_view::cbegin</source>
          <target state="translated">std::basic_string_view::cbegin</target>
        </trans-unit>
        <trans-unit id="b0e8abbbd9231c9c539f04f0f0bca757a1b32343" translate="yes" xml:space="preserve">
          <source>std::basic_string_view::compare</source>
          <target state="translated">std::basic_string_view::compare</target>
        </trans-unit>
        <trans-unit id="12dbc7d86059b166921169902cf4fb176c8db149" translate="yes" xml:space="preserve">
          <source>std::basic_string_view::copy</source>
          <target state="translated">std::basic_string_view::copy</target>
        </trans-unit>
        <trans-unit id="e874615840ff5418730ca302b8ddd04d2be87c23" translate="yes" xml:space="preserve">
          <source>std::basic_string_view::data</source>
          <target state="translated">std::basic_string_view::data</target>
        </trans-unit>
        <trans-unit id="8469ce105f3d9e108dc471e8686c61cfc2785a72" translate="yes" xml:space="preserve">
          <source>std::basic_string_view::empty</source>
          <target state="translated">std::basic_string_view::empty</target>
        </trans-unit>
        <trans-unit id="2e7b1c2e2bdfd0b1be9842f6a66f3192dec48fe2" translate="yes" xml:space="preserve">
          <source>std::basic_string_view::end</source>
          <target state="translated">std::basic_string_view::end</target>
        </trans-unit>
        <trans-unit id="9bc5ed40ac9572770b91afd651717e2b4afe313d" translate="yes" xml:space="preserve">
          <source>std::basic_string_view::ends_with</source>
          <target state="translated">std::basic_string_view::ends_with</target>
        </trans-unit>
        <trans-unit id="cee0ec7c015d6d155b3d9a9de3934ce5088ffd5a" translate="yes" xml:space="preserve">
          <source>std::basic_string_view::find</source>
          <target state="translated">std::basic_string_view::find</target>
        </trans-unit>
        <trans-unit id="1fd5201954d0cd1a8057c4adec4fa64230c02548" translate="yes" xml:space="preserve">
          <source>std::basic_string_view::find_first_not_of</source>
          <target state="translated">std::basic_string_view::find_first_not_of</target>
        </trans-unit>
        <trans-unit id="78265d154bffaf841ddd34e40e087973f555f13c" translate="yes" xml:space="preserve">
          <source>std::basic_string_view::find_first_of</source>
          <target state="translated">std::basic_string_view::find_first_of</target>
        </trans-unit>
        <trans-unit id="5695058c0db163bfac514d54c88199bb008fd780" translate="yes" xml:space="preserve">
          <source>std::basic_string_view::find_last_not_of</source>
          <target state="translated">std::basic_string_view::find_last_not_of</target>
        </trans-unit>
        <trans-unit id="976a2912696ed7eb8b9ef2d493adfb6e9812a62f" translate="yes" xml:space="preserve">
          <source>std::basic_string_view::find_last_of</source>
          <target state="translated">std::basic_string_view::find_last_of</target>
        </trans-unit>
        <trans-unit id="e9567a5436aa953eadb2142d102f9db5c7d33709" translate="yes" xml:space="preserve">
          <source>std::basic_string_view::front</source>
          <target state="translated">std::basic_string_view::front</target>
        </trans-unit>
        <trans-unit id="c464cc711046da05f5ecc6076949ac7c21195dce" translate="yes" xml:space="preserve">
          <source>std::basic_string_view::max_size</source>
          <target state="translated">std::basic_string_view::max_size</target>
        </trans-unit>
        <trans-unit id="884247cf41b00f78b24f3dd32a592a8da7bca54b" translate="yes" xml:space="preserve">
          <source>std::basic_string_view::npos</source>
          <target state="translated">std::basic_string_view::npos</target>
        </trans-unit>
        <trans-unit id="de026d737eb8e8c093415e9b8d1ae747dcc73a77" translate="yes" xml:space="preserve">
          <source>std::basic_string_view::operator=</source>
          <target state="translated">std::basic_string_view::operator=</target>
        </trans-unit>
        <trans-unit id="f6f3a0f9fa6860bfe9c6a39bb74c032397fab2e5" translate="yes" xml:space="preserve">
          <source>std::basic_string_view::operator[]</source>
          <target state="translated">std::basic_string_view::operator[]</target>
        </trans-unit>
        <trans-unit id="9c4a2801991eeb47262dd67c2a2dbbecc5086b56" translate="yes" xml:space="preserve">
          <source>std::basic_string_view::rbegin</source>
          <target state="translated">std::basic_string_view::rbegin</target>
        </trans-unit>
        <trans-unit id="6ada46a9eea5302985231042764bb509d63a85b9" translate="yes" xml:space="preserve">
          <source>std::basic_string_view::remove_prefix</source>
          <target state="translated">std::basic_string_view::remove_prefix</target>
        </trans-unit>
        <trans-unit id="c3b7b64915687fc03fb93ace48a6f902e5a151aa" translate="yes" xml:space="preserve">
          <source>std::basic_string_view::remove_suffix</source>
          <target state="translated">std::basic_string_view::remove_suffix</target>
        </trans-unit>
        <trans-unit id="51ec3ed321b93d5c3b25de2993058d0312270364" translate="yes" xml:space="preserve">
          <source>std::basic_string_view::rend</source>
          <target state="translated">std::basic_string_view::rend</target>
        </trans-unit>
        <trans-unit id="0e2b512ac067c9a9e919f454ae41c35bc1057eb4" translate="yes" xml:space="preserve">
          <source>std::basic_string_view::rfind</source>
          <target state="translated">std::basic_string_view::rfind</target>
        </trans-unit>
        <trans-unit id="174c2314892520bcdc65e016a94b584685d47a2d" translate="yes" xml:space="preserve">
          <source>std::basic_string_view::size</source>
          <target state="translated">std::basic_string_view::size</target>
        </trans-unit>
        <trans-unit id="1e7b6c848a26b90e6e21ebef497c1db237d75f59" translate="yes" xml:space="preserve">
          <source>std::basic_string_view::starts_with</source>
          <target state="translated">std::basic_string_view::starts_with</target>
        </trans-unit>
        <trans-unit id="04f6a605a610087918ec417643262dc5a492a21c" translate="yes" xml:space="preserve">
          <source>std::basic_string_view::substr</source>
          <target state="translated">std::basic_string_view::substr</target>
        </trans-unit>
        <trans-unit id="918685ec8c92bf5ba84db4aba850235c74d9cbea" translate="yes" xml:space="preserve">
          <source>std::basic_string_view::swap</source>
          <target state="translated">std::basic_string_view::swap</target>
        </trans-unit>
        <trans-unit id="ad85d298673e66e9808dfbb936190044ff67f6e0" translate="yes" xml:space="preserve">
          <source>std::basic_stringbuf</source>
          <target state="translated">std::basic_stringbuf</target>
        </trans-unit>
        <trans-unit id="160f590629a56f6a7046a8ba82a2b09eac86ed43" translate="yes" xml:space="preserve">
          <source>std::basic_stringbuf&amp;lt;CharT,Traits,Allocator&amp;gt;::basic_stringbuf</source>
          <target state="translated">std::basic_stringbuf&amp;lt;CharT,Traits,Allocator&amp;gt;::basic_stringbuf</target>
        </trans-unit>
        <trans-unit id="9101894003888f5c7a173167ea5291bd28d8e1c1" translate="yes" xml:space="preserve">
          <source>std::basic_stringbuf&amp;lt;CharT,Traits,Allocator&amp;gt;::operator=</source>
          <target state="translated">std::basic_stringbuf&amp;lt;CharT,Traits,Allocator&amp;gt;::operator=</target>
        </trans-unit>
        <trans-unit id="c03312bad9ee52ebbf290efe3738e0b94150f151" translate="yes" xml:space="preserve">
          <source>std::basic_stringbuf&amp;lt;CharT,Traits,Allocator&amp;gt;::overflow</source>
          <target state="translated">std::basic_stringbuf&amp;lt;CharT,Traits,Allocator&amp;gt;::overflow</target>
        </trans-unit>
        <trans-unit id="3ff92bdfcaf226a656cc1d52dac961aebcfd08aa" translate="yes" xml:space="preserve">
          <source>std::basic_stringbuf&amp;lt;CharT,Traits,Allocator&amp;gt;::pbackfail</source>
          <target state="translated">std::basic_stringbuf&amp;lt;CharT,Traits,Allocator&amp;gt;::pbackfail</target>
        </trans-unit>
        <trans-unit id="58219e6f47096902df333298bb679e47ed832477" translate="yes" xml:space="preserve">
          <source>std::basic_stringbuf&amp;lt;CharT,Traits,Allocator&amp;gt;::seekoff</source>
          <target state="translated">std::basic_stringbuf&amp;lt;CharT,Traits,Allocator&amp;gt;::seekoff</target>
        </trans-unit>
        <trans-unit id="d11a00dbca8268025a908294acb33bd752e08ed2" translate="yes" xml:space="preserve">
          <source>std::basic_stringbuf&amp;lt;CharT,Traits,Allocator&amp;gt;::seekpos</source>
          <target state="translated">std::basic_stringbuf&amp;lt;CharT,Traits,Allocator&amp;gt;::seekpos</target>
        </trans-unit>
        <trans-unit id="0103cdf1cc47d25ffb63a35c8c54b66e5505eb9f" translate="yes" xml:space="preserve">
          <source>std::basic_stringbuf&amp;lt;CharT,Traits,Allocator&amp;gt;::setbuf</source>
          <target state="translated">std::basic_stringbuf&amp;lt;CharT,Traits,Allocator&amp;gt;::setbuf</target>
        </trans-unit>
        <trans-unit id="df3a808b73bff8c22da1254888da43f007895243" translate="yes" xml:space="preserve">
          <source>std::basic_stringbuf&amp;lt;CharT,Traits,Allocator&amp;gt;::str</source>
          <target state="translated">std::basic_stringbuf&amp;lt;CharT,Traits,Allocator&amp;gt;::str</target>
        </trans-unit>
        <trans-unit id="0711bccebb0162babf20f533d497405c0d57da14" translate="yes" xml:space="preserve">
          <source>std::basic_stringbuf&amp;lt;CharT,Traits,Allocator&amp;gt;::swap</source>
          <target state="translated">std::basic_stringbuf&amp;lt;CharT,Traits,Allocator&amp;gt;::swap</target>
        </trans-unit>
        <trans-unit id="5bb8e1ce9ccfbfd7e91378b15e15fad36f155a43" translate="yes" xml:space="preserve">
          <source>std::basic_stringbuf&amp;lt;CharT,Traits,Allocator&amp;gt;::underflow</source>
          <target state="translated">std::basic_stringbuf&amp;lt;CharT,Traits,Allocator&amp;gt;::underflow</target>
        </trans-unit>
        <trans-unit id="7589cee37e81fbebbd3b08d14957d8517e45b4d2" translate="yes" xml:space="preserve">
          <source>std::basic_stringbuf::basic_stringbuf</source>
          <target state="translated">std::basic_stringbuf::basic_stringbuf</target>
        </trans-unit>
        <trans-unit id="d007df28ff4c77bf51d874a445a72e01dd7f59fc" translate="yes" xml:space="preserve">
          <source>std::basic_stringbuf::operator=</source>
          <target state="translated">std::basic_stringbuf::operator=</target>
        </trans-unit>
        <trans-unit id="db383128be5bd45c95000446e0a8c569922f336b" translate="yes" xml:space="preserve">
          <source>std::basic_stringbuf::overflow</source>
          <target state="translated">std::basic_stringbuf::overflow</target>
        </trans-unit>
        <trans-unit id="bfca8c790a2c589375e0ce01da5bafa20b18e93a" translate="yes" xml:space="preserve">
          <source>std::basic_stringbuf::pbackfail</source>
          <target state="translated">std::basic_stringbuf::pbackfail</target>
        </trans-unit>
        <trans-unit id="2870ef5e113b4d35db77f7856808062c707fd6ad" translate="yes" xml:space="preserve">
          <source>std::basic_stringbuf::seekoff</source>
          <target state="translated">std::basic_stringbuf::seekoff</target>
        </trans-unit>
        <trans-unit id="f71bb43e04eef2c8d71cca235394ed2c24a0c62b" translate="yes" xml:space="preserve">
          <source>std::basic_stringbuf::seekpos</source>
          <target state="translated">std::basic_stringbuf::seekpos</target>
        </trans-unit>
        <trans-unit id="029aeebecd348ae0b70cfff90e446567aa26068a" translate="yes" xml:space="preserve">
          <source>std::basic_stringbuf::setbuf</source>
          <target state="translated">std::basic_stringbuf::setbuf</target>
        </trans-unit>
        <trans-unit id="2cc06febc4d95f9ee6c8460f0cf054126bb7164c" translate="yes" xml:space="preserve">
          <source>std::basic_stringbuf::str</source>
          <target state="translated">std::basic_stringbuf::str</target>
        </trans-unit>
        <trans-unit id="6f6f5baa5d2662b976f88aa79d54da81c2a9dacf" translate="yes" xml:space="preserve">
          <source>std::basic_stringbuf::swap</source>
          <target state="translated">std::basic_stringbuf::swap</target>
        </trans-unit>
        <trans-unit id="4d4adc414409ba73a894a6623191489d74a3ff9d" translate="yes" xml:space="preserve">
          <source>std::basic_stringbuf::underflow</source>
          <target state="translated">std::basic_stringbuf::underflow</target>
        </trans-unit>
        <trans-unit id="90fd71c3f774128efa6412f13cee58f8976f79f5" translate="yes" xml:space="preserve">
          <source>std::basic_stringstream</source>
          <target state="translated">std::basic_stringstream</target>
        </trans-unit>
        <trans-unit id="8a6042d44c1f97ec7ea9e661d1a5378f83210cdc" translate="yes" xml:space="preserve">
          <source>std::basic_stringstream&amp;lt;CharT,Traits,Allocator&amp;gt;::basic_stringstream</source>
          <target state="translated">std::basic_stringstream&amp;lt;CharT,Traits,Allocator&amp;gt;::basic_stringstream</target>
        </trans-unit>
        <trans-unit id="50dcbdaffe1e041e2f12f98a3bdd323b0ca1f6fd" translate="yes" xml:space="preserve">
          <source>std::basic_stringstream&amp;lt;CharT,Traits,Allocator&amp;gt;::str</source>
          <target state="translated">std::basic_stringstream&amp;lt;CharT,Traits,Allocator&amp;gt;::str</target>
        </trans-unit>
        <trans-unit id="d687f05b4d1ae8fc8c5d427f12ae4396ac492ba6" translate="yes" xml:space="preserve">
          <source>std::basic_stringstream::basic_stringstream</source>
          <target state="translated">std::basic_stringstream::basic_stringstream</target>
        </trans-unit>
        <trans-unit id="bb7feeaf441dc538607cbda3d85cc624fb2d5303" translate="yes" xml:space="preserve">
          <source>std::basic_stringstream::operator=</source>
          <target state="translated">std::basic_stringstream::operator=</target>
        </trans-unit>
        <trans-unit id="03ecaa6aab2a76ef5decaebc23b5ee7af72f2537" translate="yes" xml:space="preserve">
          <source>std::basic_stringstream::rdbuf</source>
          <target state="translated">std::basic_stringstream::rdbuf</target>
        </trans-unit>
        <trans-unit id="4b2d3ee6fa6cf65fad5071c8310fb780246ef357" translate="yes" xml:space="preserve">
          <source>std::basic_stringstream::str</source>
          <target state="translated">std::basic_stringstream::str</target>
        </trans-unit>
        <trans-unit id="eecff8a6f957d16df4e1aa992b381d4a0c6154ab" translate="yes" xml:space="preserve">
          <source>std::basic_stringstream::swap</source>
          <target state="translated">std::basic_stringstream::swap</target>
        </trans-unit>
        <trans-unit id="16ad3112a473d4cece18699cbd04e3056e4be779" translate="yes" xml:space="preserve">
          <source>std::basic_syncbuf</source>
          <target state="translated">std::basic_syncbuf</target>
        </trans-unit>
        <trans-unit id="b67039c90e3215fe4beeb242a4ec81f56b6d5baf" translate="yes" xml:space="preserve">
          <source>std::basic_syncbuf&amp;lt;CharT,Traits,Allocator&amp;gt;::basic_syncbuf</source>
          <target state="translated">std::basic_syncbuf&amp;lt;CharT,Traits,Allocator&amp;gt;::basic_syncbuf</target>
        </trans-unit>
        <trans-unit id="1f61af2f10bf39b8e68d9468a1e1e163c293756b" translate="yes" xml:space="preserve">
          <source>std::basic_syncbuf&amp;lt;CharT,Traits,Allocator&amp;gt;::emit</source>
          <target state="translated">std::basic_syncbuf&amp;lt;CharT,Traits,Allocator&amp;gt;::emit</target>
        </trans-unit>
        <trans-unit id="a1bc26e034afdd38631ba285d423dcbee2637fe3" translate="yes" xml:space="preserve">
          <source>std::basic_syncbuf&amp;lt;CharT,Traits,Allocator&amp;gt;::get_allocator</source>
          <target state="translated">std::basic_syncbuf&amp;lt;CharT,Traits,Allocator&amp;gt;::get_allocator</target>
        </trans-unit>
        <trans-unit id="5e9bfc1fab89d8c44c406fbd6b7f2deb5c4da7b7" translate="yes" xml:space="preserve">
          <source>std::basic_syncbuf&amp;lt;CharT,Traits,Allocator&amp;gt;::get_wrapped</source>
          <target state="translated">std::basic_syncbuf&amp;lt;CharT,Traits,Allocator&amp;gt;::get_wrapped</target>
        </trans-unit>
        <trans-unit id="35b6377a5aad89fe7124d1650e0cc3e1cceb3de7" translate="yes" xml:space="preserve">
          <source>std::basic_syncbuf&amp;lt;CharT,Traits,Allocator&amp;gt;::operator=</source>
          <target state="translated">std::basic_syncbuf&amp;lt;CharT,Traits,Allocator&amp;gt;::operator=</target>
        </trans-unit>
        <trans-unit id="24606945630fe669e27af3ecabadf182463990f5" translate="yes" xml:space="preserve">
          <source>std::basic_syncbuf&amp;lt;CharT,Traits,Allocator&amp;gt;::set_emit_on_sync</source>
          <target state="translated">std::basic_syncbuf&amp;lt;CharT,Traits,Allocator&amp;gt;::set_emit_on_sync</target>
        </trans-unit>
        <trans-unit id="47d120489e497b1ea5dc71193e9ebc784ad8a4f3" translate="yes" xml:space="preserve">
          <source>std::basic_syncbuf&amp;lt;CharT,Traits,Allocator&amp;gt;::swap</source>
          <target state="translated">std::basic_syncbuf&amp;lt;CharT,Traits,Allocator&amp;gt;::swap</target>
        </trans-unit>
        <trans-unit id="761d19ce97e6fe6b25b68102cd0dc2c0f68a629d" translate="yes" xml:space="preserve">
          <source>std::basic_syncbuf&amp;lt;CharT,Traits,Allocator&amp;gt;::sync</source>
          <target state="translated">std::basic_syncbuf&amp;lt;CharT,Traits,Allocator&amp;gt;::sync</target>
        </trans-unit>
        <trans-unit id="83852f23a9fa9c71945b629982538b0ea93612ba" translate="yes" xml:space="preserve">
          <source>std::basic_syncbuf&amp;lt;CharT,Traits,Allocator&amp;gt;::~basic_syncbuf</source>
          <target state="translated">std::basic_syncbuf&amp;lt;CharT,Traits,Allocator&amp;gt;::~basic_syncbuf</target>
        </trans-unit>
        <trans-unit id="b4cbc6bb77faf37c2b35d9137f6d28139d787dec" translate="yes" xml:space="preserve">
          <source>std::basic_syncbuf::basic_syncbuf</source>
          <target state="translated">std::basic_syncbuf::basic_syncbuf</target>
        </trans-unit>
        <trans-unit id="acc3fc143da6ebb072f158b674da156564c58930" translate="yes" xml:space="preserve">
          <source>std::basic_syncbuf::emit</source>
          <target state="translated">std::basic_syncbuf::emit</target>
        </trans-unit>
        <trans-unit id="6f09b7f3402ee4ba869719fc2ef52db54d244f4c" translate="yes" xml:space="preserve">
          <source>std::basic_syncbuf::get_allocator</source>
          <target state="translated">std::basic_syncbuf::get_allocator</target>
        </trans-unit>
        <trans-unit id="59b4edac35535aa2e894e1fc26423942cd8ee07d" translate="yes" xml:space="preserve">
          <source>std::basic_syncbuf::get_wrapped</source>
          <target state="translated">std::basic_syncbuf::get_wrapped</target>
        </trans-unit>
        <trans-unit id="dcf30496ee3f370be23354f6b4b8142984a52113" translate="yes" xml:space="preserve">
          <source>std::basic_syncbuf::operator=</source>
          <target state="translated">std::basic_syncbuf::operator=</target>
        </trans-unit>
        <trans-unit id="7698df535d2602866070a94cc7c31a80f1c3e4fe" translate="yes" xml:space="preserve">
          <source>std::basic_syncbuf::set_emit_on_sync</source>
          <target state="translated">std::basic_syncbuf::set_emit_on_sync</target>
        </trans-unit>
        <trans-unit id="7ae062fb6b87c77bc4a02f9c06e1b49caa886dee" translate="yes" xml:space="preserve">
          <source>std::basic_syncbuf::swap</source>
          <target state="translated">std::basic_syncbuf::swap</target>
        </trans-unit>
        <trans-unit id="30ea8cdbd43faa5eb38d46138410e4b274813b31" translate="yes" xml:space="preserve">
          <source>std::basic_syncbuf::sync</source>
          <target state="translated">std::basic_syncbuf::sync</target>
        </trans-unit>
        <trans-unit id="4a1f0e4c7843fbe32321429269bec96ced435918" translate="yes" xml:space="preserve">
          <source>std::basic_syncbuf::~basic_syncbuf</source>
          <target state="translated">std::basic_syncbuf::~basic_syncbuf</target>
        </trans-unit>
        <trans-unit id="63b4f5e7b6c973313cdbca2c5d4fb2d2fd48e1f4" translate="yes" xml:space="preserve">
          <source>std::begin(std::initializer_list)</source>
          <target state="translated">std::begin(std::initializer_list)</target>
        </trans-unit>
        <trans-unit id="20fb91b3a7c91ad88464585e3a78dacf607a8812" translate="yes" xml:space="preserve">
          <source>std::begin(std::valarray)</source>
          <target state="translated">std::begin(std::valarray)</target>
        </trans-unit>
        <trans-unit id="69dc4e400c9f241c69f414068114dec3c73fc647" translate="yes" xml:space="preserve">
          <source>std::begin, std::cbegin</source>
          <target state="translated">std::begin,std::cbegin</target>
        </trans-unit>
        <trans-unit id="ea23a8addd4e7ef35c68cd969fb46c7b7a442cca" translate="yes" xml:space="preserve">
          <source>std::begin&lt;small&gt;(std::initializer_list)&lt;/small&gt;</source>
          <target state="translated">std::begin&lt;small&gt;(std::initializer_list)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="8c7de77ca6b593efcd6f6e3af61aa8ef6363b7ab" translate="yes" xml:space="preserve">
          <source>std::begin&lt;small&gt;(std::valarray)&lt;/small&gt;</source>
          <target state="translated">std::begin&lt;small&gt;(std::valarray)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="fdd23ec6d5c12d18306ba89243bb2745b3d87e40" translate="yes" xml:space="preserve">
          <source>std::bernoulli_distribution</source>
          <target state="translated">std::bernoulli_distribution</target>
        </trans-unit>
        <trans-unit id="aad242145c28fe3bce8626c2acdef6a0f03a1153" translate="yes" xml:space="preserve">
          <source>std::bernoulli_distribution::bernoulli_distribution</source>
          <target state="translated">std::bernoulli_distribution::bernoulli_distribution</target>
        </trans-unit>
        <trans-unit id="4d380e0a03b11f39078a236756c53bcc9e3b3ed4" translate="yes" xml:space="preserve">
          <source>std::bernoulli_distribution::max</source>
          <target state="translated">std::bernoulli_distribution::max</target>
        </trans-unit>
        <trans-unit id="fb81f3b83e49e10fb8b758e327088a267189b3cd" translate="yes" xml:space="preserve">
          <source>std::bernoulli_distribution::min</source>
          <target state="translated">std::bernoulli_distribution::min</target>
        </trans-unit>
        <trans-unit id="180e86f54042f1a2ff09d5645ae92d6587facec9" translate="yes" xml:space="preserve">
          <source>std::bernoulli_distribution::operator()</source>
          <target state="translated">std::bernoulli_distribution::operator()</target>
        </trans-unit>
        <trans-unit id="1bac6bddda64643bb89ff81ed14a00a1f4a3237f" translate="yes" xml:space="preserve">
          <source>std::bernoulli_distribution::p</source>
          <target state="translated">std::bernoulli_distribution::p</target>
        </trans-unit>
        <trans-unit id="14ac3335a2530ef4d5d5dbf5cb64ebba179a0a4a" translate="yes" xml:space="preserve">
          <source>std::bernoulli_distribution::param</source>
          <target state="translated">std::bernoulli_distribution::param</target>
        </trans-unit>
        <trans-unit id="50251ec3562e44b82ea7dea562c84931968d504e" translate="yes" xml:space="preserve">
          <source>std::bernoulli_distribution::reset</source>
          <target state="translated">std::bernoulli_distribution::reset</target>
        </trans-unit>
        <trans-unit id="9fad2b41ad9fd3241afdb360d78ea842e32249a7" translate="yes" xml:space="preserve">
          <source>std::beta, std::betaf, std::betal</source>
          <target state="translated">std::beta,std::betaf,std::betal</target>
        </trans-unit>
        <trans-unit id="2226d32208f8880d54192c4069f17ac3783404d0" translate="yes" xml:space="preserve">
          <source>std::betal</source>
          <target state="translated">std::betal</target>
        </trans-unit>
        <trans-unit id="6c1d6208e8c9c7df69138681a4b1ac47b509da1f" translate="yes" xml:space="preserve">
          <source>std::binary_function</source>
          <target state="translated">std::binary_function</target>
        </trans-unit>
        <trans-unit id="593b47775c8c8e8edbb03174f89c8c993dd9a647" translate="yes" xml:space="preserve">
          <source>std::binary_negate</source>
          <target state="translated">std::binary_negate</target>
        </trans-unit>
        <trans-unit id="15d3826c33956b912d23d276d1d9c674790d05cc" translate="yes" xml:space="preserve">
          <source>std::binary_negate::binary_negate</source>
          <target state="translated">std::binary_negate::binary_negate</target>
        </trans-unit>
        <trans-unit id="75d9e9e4df64eb2b6e95b1385c6c2324abfc4bbf" translate="yes" xml:space="preserve">
          <source>std::binary_negate::operator()</source>
          <target state="translated">std::binary_negate::operator()</target>
        </trans-unit>
        <trans-unit id="6601fdb3426986168dd85055c6f6a278fd54b44b" translate="yes" xml:space="preserve">
          <source>std::binary_search</source>
          <target state="translated">std::binary_search</target>
        </trans-unit>
        <trans-unit id="72a6328d7e222fb19d261cce833d6f498cd6ef9d" translate="yes" xml:space="preserve">
          <source>std::bind</source>
          <target state="translated">std::bind</target>
        </trans-unit>
        <trans-unit id="45fac99c70c196f224583c9fbe90f81412846871" translate="yes" xml:space="preserve">
          <source>std::bind1st, std::bind2nd</source>
          <target state="translated">std::bind1st,std::bind2nd</target>
        </trans-unit>
        <trans-unit id="ce44e1051758ee9792bbdedaa2c6915d42ef11b4" translate="yes" xml:space="preserve">
          <source>std::bind2nd</source>
          <target state="translated">std::bind2nd</target>
        </trans-unit>
        <trans-unit id="22f50d88c2e10b199b09e138f9f125b524e6d8e5" translate="yes" xml:space="preserve">
          <source>std::bind_front</source>
          <target state="translated">std::bind_front</target>
        </trans-unit>
        <trans-unit id="5072a1bfc365d8e11bca4cc27a8faf015db6813f" translate="yes" xml:space="preserve">
          <source>std::binder1st, std::binder2nd</source>
          <target state="translated">std::binder1st,std::binder2nd</target>
        </trans-unit>
        <trans-unit id="2cf2e27c76b82033af74dd01df52d2b949540902" translate="yes" xml:space="preserve">
          <source>std::binder2nd</source>
          <target state="translated">std::binder2nd</target>
        </trans-unit>
        <trans-unit id="62e5a723e31085e615c05e77d7e7f97883cca276" translate="yes" xml:space="preserve">
          <source>std::binomial_distribution</source>
          <target state="translated">std::binomial_distribution</target>
        </trans-unit>
        <trans-unit id="890c052a760df61ba11af7bb6a479724fe40e306" translate="yes" xml:space="preserve">
          <source>std::binomial_distribution&amp;lt;IntType&amp;gt;::binomial_distribution</source>
          <target state="translated">std::binomial_distribution&amp;lt;IntType&amp;gt;::binomial_distribution</target>
        </trans-unit>
        <trans-unit id="cde37425a893beec33dfa6aef42767cfcb18f255" translate="yes" xml:space="preserve">
          <source>std::binomial_distribution&amp;lt;IntType&amp;gt;::max</source>
          <target state="translated">std::binomial_distribution&amp;lt;IntType&amp;gt;::max</target>
        </trans-unit>
        <trans-unit id="1e2390c860ece83d98cc58a2ab9539f0080c3f03" translate="yes" xml:space="preserve">
          <source>std::binomial_distribution&amp;lt;IntType&amp;gt;::min</source>
          <target state="translated">std::binomial_distribution&amp;lt;IntType&amp;gt;::min</target>
        </trans-unit>
        <trans-unit id="1301061d7f9707b19a0ef9a46e979513dff84d8b" translate="yes" xml:space="preserve">
          <source>std::binomial_distribution&amp;lt;IntType&amp;gt;::operator()</source>
          <target state="translated">std::binomial_distribution&amp;lt;IntType&amp;gt;::operator()</target>
        </trans-unit>
        <trans-unit id="0d5ff9cbaf51270abd8cf442123b6a3368ef5812" translate="yes" xml:space="preserve">
          <source>std::binomial_distribution&amp;lt;IntType&amp;gt;::p, t</source>
          <target state="translated">std :: binomial_distribution &amp;lt;IntType&amp;gt; :: p、t</target>
        </trans-unit>
        <trans-unit id="ddc775c2c3ef215081e54869a155c9a62710d275" translate="yes" xml:space="preserve">
          <source>std::binomial_distribution&amp;lt;IntType&amp;gt;::param</source>
          <target state="translated">std::binomial_distribution&amp;lt;IntType&amp;gt;::param</target>
        </trans-unit>
        <trans-unit id="f74e12ad2053956c38346f29fa261fd4112d91e2" translate="yes" xml:space="preserve">
          <source>std::binomial_distribution&amp;lt;IntType&amp;gt;::reset</source>
          <target state="translated">std::binomial_distribution&amp;lt;IntType&amp;gt;::reset</target>
        </trans-unit>
        <trans-unit id="518a6669d009b3e20d738f16771719403ceedf96" translate="yes" xml:space="preserve">
          <source>std::binomial_distribution::binomial_distribution</source>
          <target state="translated">std::binomial_distribution::binomial_distribution</target>
        </trans-unit>
        <trans-unit id="91dab55d33b2e75ca60e168c452047c036d21ead" translate="yes" xml:space="preserve">
          <source>std::binomial_distribution::max</source>
          <target state="translated">std::binomial_distribution::max</target>
        </trans-unit>
        <trans-unit id="d43625d38f1f8de4ffb9373a23569f30b754cbe3" translate="yes" xml:space="preserve">
          <source>std::binomial_distribution::min</source>
          <target state="translated">std::binomial_distribution::min</target>
        </trans-unit>
        <trans-unit id="91a4ed6ffe472055a78d2655b593a4150ce3122b" translate="yes" xml:space="preserve">
          <source>std::binomial_distribution::operator()</source>
          <target state="translated">std::binomial_distribution::operator()</target>
        </trans-unit>
        <trans-unit id="14dbfa66b4648b47f3f2f1208d7b3f8bd0d57955" translate="yes" xml:space="preserve">
          <source>std::binomial_distribution::p</source>
          <target state="translated">std::binomial_distribution::p</target>
        </trans-unit>
        <trans-unit id="c55bd4c390f16c4fe2a8865fda311145a275b016" translate="yes" xml:space="preserve">
          <source>std::binomial_distribution::param</source>
          <target state="translated">std::binomial_distribution::param</target>
        </trans-unit>
        <trans-unit id="dc7c8bdb97c40ac689085cd381b40a07b108212f" translate="yes" xml:space="preserve">
          <source>std::binomial_distribution::reset</source>
          <target state="translated">std::binomial_distribution::reset</target>
        </trans-unit>
        <trans-unit id="1072f8b16488c99ac4bc2ce19c01a40d491bb45c" translate="yes" xml:space="preserve">
          <source>std::bit_and</source>
          <target state="translated">std::bit_and</target>
        </trans-unit>
        <trans-unit id="f33bf035048652db0d76d4da42da2c93c38e1fec" translate="yes" xml:space="preserve">
          <source>std::bit_and&amp;lt;&amp;gt;::operator()</source>
          <target state="translated">std::bit_and&amp;lt;&amp;gt;::operator()</target>
        </trans-unit>
        <trans-unit id="ae6cf05ebfa68c0884dc81256115ddb30644dcf6" translate="yes" xml:space="preserve">
          <source>std::bit_and&amp;lt;void&amp;gt;</source>
          <target state="translated">std::bit_and&amp;lt;void&amp;gt;</target>
        </trans-unit>
        <trans-unit id="22cc2128c1878d06369d0c3130e2c46fd8ceda5f" translate="yes" xml:space="preserve">
          <source>std::bit_and::operator()</source>
          <target state="translated">std::bit_and::operator()</target>
        </trans-unit>
        <trans-unit id="ae57e27b58e8715ee0631bb1a26c16fdaf2e42c5" translate="yes" xml:space="preserve">
          <source>std::bit_cast</source>
          <target state="translated">std::bit_cast</target>
        </trans-unit>
        <trans-unit id="29ad3e02f6959aaca8263bd3e1ca883fc5b4fdc0" translate="yes" xml:space="preserve">
          <source>std::bit_not</source>
          <target state="translated">std::bit_not</target>
        </trans-unit>
        <trans-unit id="8a6d02bb11085b4701ce08876d5097c3819feb14" translate="yes" xml:space="preserve">
          <source>std::bit_not&amp;lt;&amp;gt;::operator()</source>
          <target state="translated">std::bit_not&amp;lt;&amp;gt;::operator()</target>
        </trans-unit>
        <trans-unit id="94f7de300e19bd46446912aae54b788ce2b979d8" translate="yes" xml:space="preserve">
          <source>std::bit_not&amp;lt;void&amp;gt;</source>
          <target state="translated">std::bit_not&amp;lt;void&amp;gt;</target>
        </trans-unit>
        <trans-unit id="cb5129e74c6f6f539623b510832758f855055dc0" translate="yes" xml:space="preserve">
          <source>std::bit_not::operator()</source>
          <target state="translated">std::bit_not::operator()</target>
        </trans-unit>
        <trans-unit id="981a1d40a43e5e54443fdd7d10908aa624009d10" translate="yes" xml:space="preserve">
          <source>std::bit_or</source>
          <target state="translated">std::bit_or</target>
        </trans-unit>
        <trans-unit id="546366dfc8b7cc9d6114fcedc3e379658ac76c14" translate="yes" xml:space="preserve">
          <source>std::bit_or&amp;lt;&amp;gt;::operator()</source>
          <target state="translated">std::bit_or&amp;lt;&amp;gt;::operator()</target>
        </trans-unit>
        <trans-unit id="be1279b92dc82796a5c42e13af6987e91aff9403" translate="yes" xml:space="preserve">
          <source>std::bit_or&amp;lt;void&amp;gt;</source>
          <target state="translated">std::bit_or&amp;lt;void&amp;gt;</target>
        </trans-unit>
        <trans-unit id="ba7788a0c4db7b6514bad99e0a2282fd871388f2" translate="yes" xml:space="preserve">
          <source>std::bit_or::operator()</source>
          <target state="translated">std::bit_or::operator()</target>
        </trans-unit>
        <trans-unit id="a2b226b4769e7f43eb1d0b7e6314477b2a6774de" translate="yes" xml:space="preserve">
          <source>std::bit_xor</source>
          <target state="translated">std::bit_xor</target>
        </trans-unit>
        <trans-unit id="65a8024f701dc47b7f2cf015424d17534a5164a4" translate="yes" xml:space="preserve">
          <source>std::bit_xor&amp;lt;&amp;gt;::operator()</source>
          <target state="translated">std::bit_xor&amp;lt;&amp;gt;::operator()</target>
        </trans-unit>
        <trans-unit id="35a76c33628207581d3180be33d6c3c763837809" translate="yes" xml:space="preserve">
          <source>std::bit_xor&amp;lt;void&amp;gt;</source>
          <target state="translated">std::bit_xor&amp;lt;void&amp;gt;</target>
        </trans-unit>
        <trans-unit id="2c41e02fbdff0c6cdc7a057afa2c0520e3ae3875" translate="yes" xml:space="preserve">
          <source>std::bit_xor::operator()</source>
          <target state="translated">std::bit_xor::operator()</target>
        </trans-unit>
        <trans-unit id="3ff0b9170ecafafed92d3a4ba0b781dd1c86716b" translate="yes" xml:space="preserve">
          <source>std::bitset</source>
          <target state="translated">std::bitset</target>
        </trans-unit>
        <trans-unit id="de13263cd5e1863e8e03c5843e9c1866129964d3" translate="yes" xml:space="preserve">
          <source>std::bitset&amp;lt;N&amp;gt;::all, std::bitset&amp;lt;N&amp;gt;::any, std::bitset&amp;lt;N&amp;gt;::none</source>
          <target state="translated">std :: bitset &amp;lt;N&amp;gt; :: all、std :: bitset &amp;lt;N&amp;gt; :: any、std :: bitset &amp;lt;N&amp;gt; :: none</target>
        </trans-unit>
        <trans-unit id="bd3a5b77e9950e65e71035f5089af786587a8c65" translate="yes" xml:space="preserve">
          <source>std::bitset&amp;lt;N&amp;gt;::bitset</source>
          <target state="translated">std::bitset&amp;lt;N&amp;gt;::bitset</target>
        </trans-unit>
        <trans-unit id="95c2b4dc1f880e244fb8cf1b0a3db40b5cda8364" translate="yes" xml:space="preserve">
          <source>std::bitset&amp;lt;N&amp;gt;::count</source>
          <target state="translated">std::bitset&amp;lt;N&amp;gt;::count</target>
        </trans-unit>
        <trans-unit id="2ba3482be53fdc5ea29d22511dfc7eb31dee0447" translate="yes" xml:space="preserve">
          <source>std::bitset&amp;lt;N&amp;gt;::flip</source>
          <target state="translated">std::bitset&amp;lt;N&amp;gt;::flip</target>
        </trans-unit>
        <trans-unit id="151e5236a18a209c4fb97487935e1583060a2f1e" translate="yes" xml:space="preserve">
          <source>std::bitset&amp;lt;N&amp;gt;::operator&amp;amp;=,|=,^=,~</source>
          <target state="translated">std::bitset&amp;lt;N&amp;gt;::operator&amp;amp;=,|=,^=,~</target>
        </trans-unit>
        <trans-unit id="bb168934d543f6bc549162ef0301eddbd5a97e44" translate="yes" xml:space="preserve">
          <source>std::bitset&amp;lt;N&amp;gt;::operator&amp;lt;&amp;lt;,&amp;lt;&amp;lt;=,&amp;gt;&amp;gt;,&amp;gt;&amp;gt;=</source>
          <target state="translated">std::bitset&amp;lt;N&amp;gt;::operator&amp;lt;&amp;lt;,&amp;lt;&amp;lt;=,&amp;gt;&amp;gt;,&amp;gt;&amp;gt;=</target>
        </trans-unit>
        <trans-unit id="3e3844526b67a680a665cfa366cffbe3d1e70e07" translate="yes" xml:space="preserve">
          <source>std::bitset&amp;lt;N&amp;gt;::operator[]</source>
          <target state="translated">std::bitset&amp;lt;N&amp;gt;::operator[]</target>
        </trans-unit>
        <trans-unit id="2e91c97ce8476e4c9e01abc56e3d6a9b0393971f" translate="yes" xml:space="preserve">
          <source>std::bitset&amp;lt;N&amp;gt;::reference</source>
          <target state="translated">std::bitset&amp;lt;N&amp;gt;::reference</target>
        </trans-unit>
        <trans-unit id="e467ffcb58621ca9b3c3f5fd16d88e876e66cf31" translate="yes" xml:space="preserve">
          <source>std::bitset&amp;lt;N&amp;gt;::reference::flip</source>
          <target state="translated">std::bitset&amp;lt;N&amp;gt;::reference::flip</target>
        </trans-unit>
        <trans-unit id="550b2ce95731d4b9ca4ae41f112fe6f29974fc56" translate="yes" xml:space="preserve">
          <source>std::bitset&amp;lt;N&amp;gt;::reference::operator bool</source>
          <target state="translated">std :: bitset &amp;lt;N&amp;gt; :: reference :: operator bool</target>
        </trans-unit>
        <trans-unit id="06d987aff4a5ce1946c6f667a9608bc43540e8f3" translate="yes" xml:space="preserve">
          <source>std::bitset&amp;lt;N&amp;gt;::reference::operator=</source>
          <target state="translated">std::bitset&amp;lt;N&amp;gt;::reference::operator=</target>
        </trans-unit>
        <trans-unit id="e918f9cdf000682aacd2383d71e23e81d00aa600" translate="yes" xml:space="preserve">
          <source>std::bitset&amp;lt;N&amp;gt;::reference::operator~</source>
          <target state="translated">std::bitset&amp;lt;N&amp;gt;::reference::operator~</target>
        </trans-unit>
        <trans-unit id="9aacb3a5b59e9f070832b001d6e2f3333195f120" translate="yes" xml:space="preserve">
          <source>std::bitset&amp;lt;N&amp;gt;::reference::~reference</source>
          <target state="translated">std::bitset&amp;lt;N&amp;gt;::reference::~reference</target>
        </trans-unit>
        <trans-unit id="d5619c84eeb782b2ae541aacb039a8ed5ef88b42" translate="yes" xml:space="preserve">
          <source>std::bitset&amp;lt;N&amp;gt;::reset</source>
          <target state="translated">std::bitset&amp;lt;N&amp;gt;::reset</target>
        </trans-unit>
        <trans-unit id="e81e119dc8620239f546c6a3addcba61ff7e091d" translate="yes" xml:space="preserve">
          <source>std::bitset&amp;lt;N&amp;gt;::set</source>
          <target state="translated">std::bitset&amp;lt;N&amp;gt;::set</target>
        </trans-unit>
        <trans-unit id="2b97e9dff76b62e5a528e369d69f6ae0336ea097" translate="yes" xml:space="preserve">
          <source>std::bitset&amp;lt;N&amp;gt;::size</source>
          <target state="translated">std::bitset&amp;lt;N&amp;gt;::size</target>
        </trans-unit>
        <trans-unit id="7accb55185873cffe878b7803122f53177bbce8c" translate="yes" xml:space="preserve">
          <source>std::bitset&amp;lt;N&amp;gt;::test</source>
          <target state="translated">std::bitset&amp;lt;N&amp;gt;::test</target>
        </trans-unit>
        <trans-unit id="a4a8e49b93b05e1f626d0988011eb89bf91198fc" translate="yes" xml:space="preserve">
          <source>std::bitset&amp;lt;N&amp;gt;::to_string</source>
          <target state="translated">std::bitset&amp;lt;N&amp;gt;::to_string</target>
        </trans-unit>
        <trans-unit id="a65ee6efe7b8f7f9db2693f7279ab5e92b998099" translate="yes" xml:space="preserve">
          <source>std::bitset&amp;lt;N&amp;gt;::to_ullong</source>
          <target state="translated">std::bitset&amp;lt;N&amp;gt;::to_ullong</target>
        </trans-unit>
        <trans-unit id="1d02cc69bc9c178788222718fd4bdcaa2493de6e" translate="yes" xml:space="preserve">
          <source>std::bitset&amp;lt;N&amp;gt;::to_ulong</source>
          <target state="translated">std::bitset&amp;lt;N&amp;gt;::to_ulong</target>
        </trans-unit>
        <trans-unit id="2331142fe6e5adf9d3d4531c0bf9651ef2bf340b" translate="yes" xml:space="preserve">
          <source>std::bitset::bitset</source>
          <target state="translated">std::bitset::bitset</target>
        </trans-unit>
        <trans-unit id="563910813850230acd2ea01d0144e5ce51dc6efe" translate="yes" xml:space="preserve">
          <source>std::bitset::count</source>
          <target state="translated">std::bitset::count</target>
        </trans-unit>
        <trans-unit id="a8898ff7b332b39b0421f419c0d0045065ec4614" translate="yes" xml:space="preserve">
          <source>std::bitset::flip</source>
          <target state="translated">std::bitset::flip</target>
        </trans-unit>
        <trans-unit id="9bcd0799e274e50b7a974d76cad8aeb6e3aae870" translate="yes" xml:space="preserve">
          <source>std::bitset::none</source>
          <target state="translated">std::bitset::none</target>
        </trans-unit>
        <trans-unit id="80446ea38597b52d4dfb676175770527c3ced942" translate="yes" xml:space="preserve">
          <source>std::bitset::operator[]</source>
          <target state="translated">std::bitset::operator[]</target>
        </trans-unit>
        <trans-unit id="923971e5685236b2eed3545f7e5c6a424bc7e310" translate="yes" xml:space="preserve">
          <source>std::bitset::operators</source>
          <target state="translated">std::bitset::operators</target>
        </trans-unit>
        <trans-unit id="d8cf9caf049a73e5a78d5f6f0cec7b825f9ee59a" translate="yes" xml:space="preserve">
          <source>std::bitset::reference</source>
          <target state="translated">std::bitset::reference</target>
        </trans-unit>
        <trans-unit id="e97f64b4878cf0f56fc4ddb1e93bde107fb0df5a" translate="yes" xml:space="preserve">
          <source>std::bitset::reset</source>
          <target state="translated">std::bitset::reset</target>
        </trans-unit>
        <trans-unit id="b9a654a8086ba4c97c13d5a9c813e50ad62082bc" translate="yes" xml:space="preserve">
          <source>std::bitset::set</source>
          <target state="translated">std::bitset::set</target>
        </trans-unit>
        <trans-unit id="8ed3ff3e719fdd31217fd093bcc8dca78998811e" translate="yes" xml:space="preserve">
          <source>std::bitset::size</source>
          <target state="translated">std::bitset::size</target>
        </trans-unit>
        <trans-unit id="85cd3fbf04c4d62d34a9f4c6c319ea8a84c468ad" translate="yes" xml:space="preserve">
          <source>std::bitset::test</source>
          <target state="translated">std::bitset::test</target>
        </trans-unit>
        <trans-unit id="3641a7d1f1deb8c428de198a66692f6d1a795f5d" translate="yes" xml:space="preserve">
          <source>std::bitset::to_string</source>
          <target state="translated">std::bitset::to_string</target>
        </trans-unit>
        <trans-unit id="8df048e9719e914061ce76a1f5998d5d64a2da6e" translate="yes" xml:space="preserve">
          <source>std::bitset::to_ullong</source>
          <target state="translated">std::bitset::to_ullong</target>
        </trans-unit>
        <trans-unit id="a41e47cd5e3fe3fabf58dfc635c0b6bd48441af7" translate="yes" xml:space="preserve">
          <source>std::bitset::to_ulong</source>
          <target state="translated">std::bitset::to_ulong</target>
        </trans-unit>
        <trans-unit id="f62e362307e3f8d83657006a076a99c5fdfabeb1" translate="yes" xml:space="preserve">
          <source>std::boolalpha, std::noboolalpha</source>
          <target state="translated">std::boolalpha,std::noboolalpha</target>
        </trans-unit>
        <trans-unit id="5cdef794bfa9c5f9a9b87e09d8e703bb44667d7f" translate="yes" xml:space="preserve">
          <source>std::boyer_moore_horspool_searcher</source>
          <target state="translated">std::boyer_moore_horspool_searcher</target>
        </trans-unit>
        <trans-unit id="175a260a436d67fd49a892618b25415e2501d29f" translate="yes" xml:space="preserve">
          <source>std::boyer_moore_horspool_searcher::boyer_moore_horspool_searcher</source>
          <target state="translated">std::boyer_moore_horspool_searcher::boyer_moore_horspool_searcher</target>
        </trans-unit>
        <trans-unit id="00821165030ad3ad5f43c12b4688575841935e44" translate="yes" xml:space="preserve">
          <source>std::boyer_moore_horspool_searcher::operator()</source>
          <target state="translated">std::boyer_moore_horspool_searcher::operator()</target>
        </trans-unit>
        <trans-unit id="83e0bf91d9ed126125b564af865ac05c375f7393" translate="yes" xml:space="preserve">
          <source>std::boyer_moore_searcher</source>
          <target state="translated">std::boyer_moore_searcher</target>
        </trans-unit>
        <trans-unit id="2c09b1a50f8d3d158a863d53151f7722789995d1" translate="yes" xml:space="preserve">
          <source>std::boyer_moore_searcher::boyer_moore_searcher</source>
          <target state="translated">std::boyer_moore_searcher::boyer_moore_searcher</target>
        </trans-unit>
        <trans-unit id="2040bb642ba1391c4068de53beb97660cd6c7b88" translate="yes" xml:space="preserve">
          <source>std::boyer_moore_searcher::operator()</source>
          <target state="translated">std::boyer_moore_searcher::operator()</target>
        </trans-unit>
        <trans-unit id="9b70aadcc0e904e4aa1cb76046a0ae0ef9bb5c65" translate="yes" xml:space="preserve">
          <source>std::bsearch</source>
          <target state="translated">std::bsearch</target>
        </trans-unit>
        <trans-unit id="0d576532a33fc1db6b3b16a3037eb006abac7c02" translate="yes" xml:space="preserve">
          <source>std::btowc</source>
          <target state="translated">std::btowc</target>
        </trans-unit>
        <trans-unit id="4b966f9297d4111dce8a60ad12eb4c9e1ea25ece" translate="yes" xml:space="preserve">
          <source>std::byte</source>
          <target state="translated">std::byte</target>
        </trans-unit>
        <trans-unit id="516c8314fd756464bc0ffff897edbca18b70237c" translate="yes" xml:space="preserve">
          <source>std::c16rtomb</source>
          <target state="translated">std::c16rtomb</target>
        </trans-unit>
        <trans-unit id="49f957bb304a7fda91b99a3c53b5373cf7b73e04" translate="yes" xml:space="preserve">
          <source>std::c32rtomb</source>
          <target state="translated">std::c32rtomb</target>
        </trans-unit>
        <trans-unit id="36fa9f787d6a53b0125603f2baa84b4c724bd3f4" translate="yes" xml:space="preserve">
          <source>std::c8rtomb</source>
          <target state="translated">std::c8rtomb</target>
        </trans-unit>
        <trans-unit id="61e604fec090bbe5ddf4026d54d33e849c154e12" translate="yes" xml:space="preserve">
          <source>std::call_once</source>
          <target state="translated">std::call_once</target>
        </trans-unit>
        <trans-unit id="d91a73ae7e96e00471ceadae93863be02297a581" translate="yes" xml:space="preserve">
          <source>std::calloc</source>
          <target state="translated">std::calloc</target>
        </trans-unit>
        <trans-unit id="628b5253eef114dad471c6cd1ff425b816619075" translate="yes" xml:space="preserve">
          <source>std::cauchy_distribution</source>
          <target state="translated">std::cauchy_distribution</target>
        </trans-unit>
        <trans-unit id="8d6d4b2ec09910210a4010842f7844f6d1fb1d84" translate="yes" xml:space="preserve">
          <source>std::cauchy_distribution&amp;lt;RealType&amp;gt;::a, b</source>
          <target state="translated">std :: cauchy_distribution &amp;lt;RealType&amp;gt; :: a、b</target>
        </trans-unit>
        <trans-unit id="88b7e754713c3b115c797f136ffe417e383bf0f2" translate="yes" xml:space="preserve">
          <source>std::cauchy_distribution&amp;lt;RealType&amp;gt;::cauchy_distribution</source>
          <target state="translated">std::cauchy_distribution&amp;lt;RealType&amp;gt;::cauchy_distribution</target>
        </trans-unit>
        <trans-unit id="d00cf59ef9528ea6ab6f4c03ec1f57cac46e769c" translate="yes" xml:space="preserve">
          <source>std::cauchy_distribution&amp;lt;RealType&amp;gt;::max</source>
          <target state="translated">std::cauchy_distribution&amp;lt;RealType&amp;gt;::max</target>
        </trans-unit>
        <trans-unit id="5bc624881a4d33c915f3d3367220fd95105cd16c" translate="yes" xml:space="preserve">
          <source>std::cauchy_distribution&amp;lt;RealType&amp;gt;::min</source>
          <target state="translated">std::cauchy_distribution&amp;lt;RealType&amp;gt;::min</target>
        </trans-unit>
        <trans-unit id="af677fe5ebee95e7fabce33a7c2f12f52ba2ab54" translate="yes" xml:space="preserve">
          <source>std::cauchy_distribution&amp;lt;RealType&amp;gt;::operator()</source>
          <target state="translated">std::cauchy_distribution&amp;lt;RealType&amp;gt;::operator()</target>
        </trans-unit>
        <trans-unit id="754a8cdb99ffe1399faf29d265d5b7d27c9bef01" translate="yes" xml:space="preserve">
          <source>std::cauchy_distribution&amp;lt;RealType&amp;gt;::param</source>
          <target state="translated">std::cauchy_distribution&amp;lt;RealType&amp;gt;::param</target>
        </trans-unit>
        <trans-unit id="eb105386ab58bc524f32768d6edd84284f117077" translate="yes" xml:space="preserve">
          <source>std::cauchy_distribution&amp;lt;RealType&amp;gt;::reset</source>
          <target state="translated">std::cauchy_distribution&amp;lt;RealType&amp;gt;::reset</target>
        </trans-unit>
        <trans-unit id="9a7c0b5d7d4ee10f549a39cad093ab60838e43d2" translate="yes" xml:space="preserve">
          <source>std::cauchy_distribution::a</source>
          <target state="translated">std::cauchy_distribution::a</target>
        </trans-unit>
        <trans-unit id="24f5b02ee1b631f66324b007a288ee857f4b5160" translate="yes" xml:space="preserve">
          <source>std::cauchy_distribution::cauchy_distribution</source>
          <target state="translated">std::cauchy_distribution::cauchy_distribution</target>
        </trans-unit>
        <trans-unit id="beae79a5b2fb79f0fcd2f8ac0120a1431d92c54b" translate="yes" xml:space="preserve">
          <source>std::cauchy_distribution::max</source>
          <target state="translated">std::cauchy_distribution::max</target>
        </trans-unit>
        <trans-unit id="65fb1ece4c93f2a1b49c6d0adaa4d294dec7d2db" translate="yes" xml:space="preserve">
          <source>std::cauchy_distribution::min</source>
          <target state="translated">std::cauchy_distribution::min</target>
        </trans-unit>
        <trans-unit id="e21d1aa68fcb78c0f2d0ab216327a069c217f6df" translate="yes" xml:space="preserve">
          <source>std::cauchy_distribution::operator()</source>
          <target state="translated">std::cauchy_distribution::operator()</target>
        </trans-unit>
        <trans-unit id="51f3cd407d148450aa01307f066fd8ce5f05cf57" translate="yes" xml:space="preserve">
          <source>std::cauchy_distribution::param</source>
          <target state="translated">std::cauchy_distribution::param</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
