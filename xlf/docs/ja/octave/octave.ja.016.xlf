<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="octave">
    <body>
      <group id="octave">
        <trans-unit id="ba0851fb1954a70764e8b77d65094d09cb13d687" translate="yes" xml:space="preserve">
          <source>No value is &lt;var&gt;NaN&lt;/var&gt;, and each is less than or equal to the preceding one.</source>
          <target state="translated">&lt;var&gt;NaN&lt;/var&gt; の値はなく、それぞれが前の値以下です。</target>
        </trans-unit>
        <trans-unit id="a82c96fb909676ef2fabd2ca6e89958daa889a4d" translate="yes" xml:space="preserve">
          <source>No value is &lt;var&gt;NaN&lt;/var&gt;, and each is less than the preceding one.</source>
          <target state="translated">&lt;var&gt;NaN&lt;/var&gt; の値はなく、それぞれが前の値よりも小さい。</target>
        </trans-unit>
        <trans-unit id="b73d86eec6b7b63b813d25542b98aac5e19b48a6" translate="yes" xml:space="preserve">
          <source>No value is a &lt;code&gt;NaN&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NaN&lt;/code&gt; の値はありません。</target>
        </trans-unit>
        <trans-unit id="95b3a0d9327c7ba474a5a776f95cb444a21e6777" translate="yes" xml:space="preserve">
          <source>No value is zero.</source>
          <target state="translated">値が0になることはありません。</target>
        </trans-unit>
        <trans-unit id="94ffead924eb1e443d114e54895c55ec4af0114f" translate="yes" xml:space="preserve">
          <source>No warnings or error messages are printed while &lt;var&gt;body&lt;/var&gt; is executing. If an error does occur during the execution of &lt;var&gt;body&lt;/var&gt;, &lt;var&gt;cleanup&lt;/var&gt; can use the functions &lt;code&gt;lasterr&lt;/code&gt; or &lt;code&gt;lasterror&lt;/code&gt; to access the text of the message that would have been printed, as well as its identifier. The alternative form,</source>
          <target state="translated">&lt;var&gt;body&lt;/var&gt; の実行中に警告やエラーメッセージは出力されません。 &lt;var&gt;body&lt;/var&gt; の実行中にエラーが発生した場合、 &lt;var&gt;cleanup&lt;/var&gt; は関数 &lt;code&gt;lasterr&lt;/code&gt; または &lt;code&gt;lasterror&lt;/code&gt; を使用して、出力されたメッセージのテキストとその識別子にアクセスできます。代替フォーム、</target>
        </trans-unit>
        <trans-unit id="853dbfd8e521ebcbcc0869aebddd7a34ad1a5d36" translate="yes" xml:space="preserve">
          <source>Non-blocking mode.</source>
          <target state="translated">ノンブロッキングモード。</target>
        </trans-unit>
        <trans-unit id="8ab356ddf4ef01e4c187f0b171433ad89a72e987" translate="yes" xml:space="preserve">
          <source>Non-diagonal entries of &lt;var&gt;L&lt;/var&gt; are set to 0 unless</source>
          <target state="translated">&lt;var&gt;L&lt;/var&gt; の非対角エントリは、0に設定されます。</target>
        </trans-unit>
        <trans-unit id="f01491990d98f9d2ad10583e5d0ebe771f48998f" translate="yes" xml:space="preserve">
          <source>Non-diagonal entries of &lt;var&gt;U&lt;/var&gt; are set to 0 unless</source>
          <target state="translated">&lt;var&gt;U&lt;/var&gt; の非対角要素は0に設定されます。</target>
        </trans-unit>
        <trans-unit id="59b30e58a2b59bf53379325e0b366a70e8a80995" translate="yes" xml:space="preserve">
          <source>Non-integers are rounded to integers before display. Only the real part of complex numbers is displayed.</source>
          <target state="translated">非整数は整数に丸めてから表示します。複素数の実数部分のみ表示されます。</target>
        </trans-unit>
        <trans-unit id="c9bed96a54ad52ea4754287d4e84d1987aac7081" translate="yes" xml:space="preserve">
          <source>Non-negative relative tolerance for single precision. If the absolute tolerance is zero, the relative tolerance must be greater than or equal to &lt;code&gt;max&amp;nbsp;(50*eps,&amp;nbsp;0.5e-28)&lt;/code&gt;.</source>
          <target state="translated">単精度の負でない相対許容誤差。絶対許容誤差がゼロの場合、相対許容誤差は &lt;code&gt;max&amp;nbsp;(50*eps,&amp;nbsp;0.5e-28)&lt;/code&gt; 以上でなければなりません。</target>
        </trans-unit>
        <trans-unit id="6e7e57032b159eb71b047fe7e23b9a49243d18cd" translate="yes" xml:space="preserve">
          <source>Non-negative relative tolerance. If the absolute tolerance is zero, the relative tolerance must be greater than or equal to &lt;code&gt;max&amp;nbsp;(50*eps,&amp;nbsp;0.5e-28)&lt;/code&gt;.</source>
          <target state="translated">非負の相対許容誤差。絶対許容誤差がゼロの場合、相対許容誤差は &lt;code&gt;max&amp;nbsp;(50*eps,&amp;nbsp;0.5e-28)&lt;/code&gt; 以上でなければなりません。</target>
        </trans-unit>
        <trans-unit id="6eef6648406c333a4035cd5e60d0bf2ecf2606d7" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">None</target>
        </trans-unit>
        <trans-unit id="8585773db22810078b09932f42fe2e8b64abf091" translate="yes" xml:space="preserve">
          <source>None 4.4.0</source>
          <target state="translated">なし 4.4.0</target>
        </trans-unit>
        <trans-unit id="7bf708f3ec0578aacb5fb5fe2b7a207f82aff0b3" translate="yes" xml:space="preserve">
          <source>Nonlinear Equations</source>
          <target state="translated">非線形方程式</target>
        </trans-unit>
        <trans-unit id="7c84a6851d364487a47570de2ea33f13c2df1c3c" translate="yes" xml:space="preserve">
          <source>Nonlinear Programming</source>
          <target state="translated">非線形プログラミング</target>
        </trans-unit>
        <trans-unit id="2bcc1e172b7a8d3c0379e39c064dee22d5b4e334" translate="yes" xml:space="preserve">
          <source>Normal font</source>
          <target state="translated">通常のフォント</target>
        </trans-unit>
        <trans-unit id="0d8e47face11cf04737acd0b40311ad2816eaac6" translate="yes" xml:space="preserve">
          <source>Normal output.</source>
          <target state="translated">通常の出力です。</target>
        </trans-unit>
        <trans-unit id="e1a9da721bd2349f1a91a7779d8cca0c286bf8e8" translate="yes" xml:space="preserve">
          <source>Normal return.</source>
          <target state="translated">ノーマルリターン。</target>
        </trans-unit>
        <trans-unit id="2ec9b7560a90c24e35162d5c8e65e6f7b90f2f60" translate="yes" xml:space="preserve">
          <source>Normally, Octave is used interactively by running the program &amp;lsquo;</source>
          <target state="translated">通常、Octaveはプログラムを実行してインタラクティブに使用されます '</target>
        </trans-unit>
        <trans-unit id="56c2a202a564b53fbf65dc0bc4cd6d6171b3da49" translate="yes" xml:space="preserve">
          <source>Normally, calls to &lt;code&gt;autoload&lt;/code&gt; appear in PKG_ADD script files that are evaluated when a directory is added to Octave&amp;rsquo;s load path. To avoid having to hardcode directory names in &lt;var&gt;file&lt;/var&gt;, if &lt;var&gt;file&lt;/var&gt; is in the same directory as the PKG_ADD script then</source>
          <target state="translated">通常、 &lt;code&gt;autoload&lt;/code&gt; 呼び出しは、ディレクトリがOctaveのロードパスに追加されたときに評価されるPKG_ADDスクリプトファイルに表示されます。 &lt;var&gt;file&lt;/var&gt; にディレクトリ名をハードコーディングする必要をなくすために、 &lt;var&gt;file&lt;/var&gt; がPKG_ADDスクリプトと同じディレクトリにある場合</target>
        </trans-unit>
        <trans-unit id="9dc319baabbad4fe33972c73bfdebbe0dcdc0c0d" translate="yes" xml:space="preserve">
          <source>Normally, high-level plot functions like &lt;code&gt;plot&lt;/code&gt; or &lt;code&gt;mesh&lt;/code&gt; call &lt;code&gt;newplot&lt;/code&gt; to determine whether the state of the target axes should be initialized (the default) or if subsequent plots should be drawn on top of previous ones. To have two plots drawn over one another, use the &lt;code&gt;hold&lt;/code&gt; function or manually change the axes &lt;a href=&quot;axes-properties#XREFaxesnextplot&quot;&gt;nextplot&lt;/a&gt; property. For example,</source>
          <target state="translated">通常、 &lt;code&gt;plot&lt;/code&gt; や &lt;code&gt;mesh&lt;/code&gt; のような高水準のプロット関数は、 &lt;code&gt;newplot&lt;/code&gt; を呼び出して、ターゲットの座標軸の状態を初期化するか（デフォルト）、後続のプロットを前のプロットの上に描画するかを決定します。 2つのプロットを重ねて描画するには、関数 &lt;code&gt;hold&lt;/code&gt; を使用するか、座標軸の&lt;a href=&quot;axes-properties#XREFaxesnextplot&quot;&gt;nextplot&lt;/a&gt;プロパティを手動で変更します。例えば、</target>
        </trans-unit>
        <trans-unit id="678772a2bf7e5a5b9ac7552c02a2e83a05a7fd46" translate="yes" xml:space="preserve">
          <source>Normally, no output is displayed by the pager until just before Octave is ready to print the top level prompt, or read from the standard input (for example, by using the &lt;code&gt;fscanf&lt;/code&gt; or &lt;code&gt;scanf&lt;/code&gt; functions). This means that there may be some delay before any output appears on your screen if you have asked Octave to perform a significant amount of work with a single command statement. The function &lt;code&gt;fflush&lt;/code&gt; may be used to force output to be sent to the pager (or any other stream) immediately.</source>
          <target state="translated">通常、ページャーは、Octaveが最上位のプロンプトを印刷するか、標準入力から読み取る（ &lt;code&gt;fscanf&lt;/code&gt; 関数や &lt;code&gt;scanf&lt;/code&gt; 関数を使用するなど）準備ができる直前まで、出力を表示しません。つまり、1つのコマンドステートメントでかなりの量の作業を実行するようOctaveに依頼した場合、画面に出力が表示されるまでに遅延が生じる可能性があります。関数 &lt;code&gt;fflush&lt;/code&gt; を使用すると、出力を強制的にポケットベル（またはその他のストリーム）にすぐに送信できます。</target>
        </trans-unit>
        <trans-unit id="6f0cbe8fae3fbbba6a96a38234aa52b94503c4a3" translate="yes" xml:space="preserve">
          <source>Normally, you evaluate expressions simply by typing them at the Octave prompt, or by asking Octave to interpret commands that you have saved in a file.</source>
          <target state="translated">通常,式を評価するには,単にOctaveのプロンプトでタイプするか,ファイルに保存したコマンドを解釈するようにOctaveに依頼します。</target>
        </trans-unit>
        <trans-unit id="3eda3e1687285d454ec364da08964cd921521516" translate="yes" xml:space="preserve">
          <source>Normally, you will want to pass some information to the functions you define. The syntax for passing parameters to a function in Octave is</source>
          <target state="translated">通常,あなたが定義した関数にいくつかの情報を渡したいと思うでしょう。Octaveの関数にパラメータを渡す構文は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="736a03d3935b846bb2525ea51ed0d1f43165330e" translate="yes" xml:space="preserve">
          <source>Not all fields are available on all systems. If it is not possible to get CPU time statistics, the CPU time slots are set to zero. Other missing data are replaced by NaN. The list of possible fields is:</source>
          <target state="translated">すべてのフィールドがすべてのシステムで利用できるわけではありません。CPU時間の統計が取れない場合、CPU時間スロットは0に設定されます。その他の欠落したデータはNaNに置き換えられます。可能なフィールドのリストは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="0a50502dee9682851ad0951986e6ddf455de05e0" translate="yes" xml:space="preserve">
          <source>Not constrained.</source>
          <target state="translated">拘束されていない。</target>
        </trans-unit>
        <trans-unit id="b498326e15a92ae0d8b8c9b12f4c1b41ff6d4998" translate="yes" xml:space="preserve">
          <source>Not equal to</source>
          <target state="translated">と同じではない</target>
        </trans-unit>
        <trans-unit id="070bb0c55df0c75c1caf517de5c6fefdebb6f90a" translate="yes" xml:space="preserve">
          <source>Not supported, only for &lt;small&gt;MATLAB&lt;/small&gt; compatibility.</source>
          <target state="translated">サポートされず、&lt;small&gt;MATLAB&lt;/small&gt;互換性のみ。</target>
        </trans-unit>
        <trans-unit id="95cdf23a732c6b17568c114011f8aed47def32a9" translate="yes" xml:space="preserve">
          <source>Note about user-supplied Jacobians: As an inherent property of the algorithm, a Jacobian is always requested for a solution vector whose residual vector is already known, and it is the last accepted successful step. Often this will be one of the last two calls, but not always. If the savings by reusing intermediate results from residual calculation in Jacobian calculation are significant, the best strategy is to employ &lt;code&gt;OutputFcn&lt;/code&gt;: After a vector is evaluated for residuals, if &lt;code&gt;OutputFcn&lt;/code&gt; is called with that vector, then the intermediate results should be saved for future Jacobian evaluation, and should be kept until a Jacobian evaluation is requested or until &lt;code&gt;OutputFcn&lt;/code&gt; is called with a different vector, in which case they should be dropped in favor of this most recent vector. A short example how this can be achieved follows:</source>
          <target state="translated">ユーザー指定のヤコビアンに関する注意：アルゴリズムの固有のプロパティとして、ヤコビアンは常に、残差ベクトルが既知である解ベクトルに対して要求され、これは最後に受け入れられた成功したステップです。多くの場合、これは最後の2つの呼び出しの1つになりますが、常にそうであるとは限りません。ヤコビアンの計算に残留計算から中間結果を再利用することでコスト削減が重要である場合は、最善の戦略は、採用することである &lt;code&gt;OutputFcn&lt;/code&gt; を：ベクトルが残差のために評価された後ならば、 &lt;code&gt;OutputFcn&lt;/code&gt; のは、そのベクトルと呼ばれ、その後、中間結果は、今後のヤコビアンのために保存する必要があります評価、およびヤコビアン評価が要求されるまで、または &lt;code&gt;OutputFcn&lt;/code&gt; まで保持する必要があります別のベクトルで呼び出されます。その場合、この最新のベクトルを優先してドロップする必要があります。これを実現する簡単な例を次に示します。</target>
        </trans-unit>
        <trans-unit id="61b9165e7866678b22733e3544ae299705c6e534" translate="yes" xml:space="preserve">
          <source>Note also that &lt;var&gt;U&lt;/var&gt; and &lt;var&gt;T&lt;/var&gt; are not unique.</source>
          <target state="translated">&lt;var&gt;U&lt;/var&gt; と &lt;var&gt;T&lt;/var&gt; は一意ではないことにも注意してください。</target>
        </trans-unit>
        <trans-unit id="9e71bed1a6c7ee17bbf1f31039b1d95d9e2e4adc" translate="yes" xml:space="preserve">
          <source>Note here the elegant use of the double colon to replace the call to the &lt;code&gt;reshape&lt;/code&gt; function.</source>
          <target state="translated">ここでは、 &lt;code&gt;reshape&lt;/code&gt; 関数の呼び出しを置き換えるための二重コロンのエレガントな使用法に注意してください。</target>
        </trans-unit>
        <trans-unit id="06c5e84aaab5e9d2f448f8e80bb28b3f004fe8ed" translate="yes" xml:space="preserve">
          <source>Note in the example the use of the &lt;code&gt;mxDuplicateArray&lt;/code&gt; function. This is needed as the &lt;code&gt;mxArray&lt;/code&gt; pointer returned by &lt;code&gt;mxGetCell&lt;/code&gt; might be deallocated. The inverse function to &lt;code&gt;mxGetCell&lt;/code&gt;, used for setting Cell values, is &lt;code&gt;mxSetCell&lt;/code&gt; and is defined as</source>
          <target state="translated">例では &lt;code&gt;mxDuplicateArray&lt;/code&gt; 関数の使用に注意してください。これは必要とされ &lt;code&gt;mxArray&lt;/code&gt; で返されたポインタ &lt;code&gt;mxGetCell&lt;/code&gt; が割り当て解除される可能性があります。Cell値の設定に使用される &lt;code&gt;mxGetCell&lt;/code&gt; の逆関数は &lt;code&gt;mxSetCell&lt;/code&gt; であり、次のように定義されます。</target>
        </trans-unit>
        <trans-unit id="da5b870679158a8dc429765e73588de68e861a6b" translate="yes" xml:space="preserve">
          <source>Note that &amp;lsquo;</source>
          <target state="translated">ご了承ください '</target>
        </trans-unit>
        <trans-unit id="c3a48c37def5629c5dfd7a716fec4030aeac1781" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;atexit&lt;/code&gt; only removes the first occurrence of a function from the list, so if a function was placed in the list multiple times with &lt;code&gt;atexit&lt;/code&gt;, it must also be removed from the list multiple times.</source>
          <target state="translated">そのノート &lt;code&gt;atexit&lt;/code&gt; 機能のみを有するリストで複数回配置したのであれば、リストから関数の最初の発生を除去する &lt;code&gt;atexit&lt;/code&gt; 、それはまた、リストから複数回除去されなければなりません。</target>
        </trans-unit>
        <trans-unit id="faaf0dd9ed9824765b7dd4a0f775d9f80b08066e" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;bitshift (int8 (-1), -1)&lt;/code&gt; is &lt;code&gt;-1&lt;/code&gt; since the bit representation of &lt;code&gt;-1&lt;/code&gt; in the &lt;code&gt;int8&lt;/code&gt; data type is &lt;code&gt;[1, 1,
1, 1, 1, 1, 1, 1]&lt;/code&gt;.</source>
          <target state="translated">なお、 &lt;code&gt;bitshift (int8 (-1), -1)&lt;/code&gt; であり、 &lt;code&gt;-1&lt;/code&gt; のビット表現ので &lt;code&gt;-1&lt;/code&gt; で &lt;code&gt;int8&lt;/code&gt; データ型である &lt;code&gt;[1, 1, 1, 1, 1, 1, 1, 1]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="56c917dbf59cde2c1d60444fa481354b2df27acc" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;char (&lt;var&gt;fun&lt;/var&gt;)&lt;/code&gt; is equivalent to &lt;code&gt;formula (&lt;var&gt;fun&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;char (&lt;var&gt;fun&lt;/var&gt;)&lt;/code&gt; は &lt;code&gt;formula (&lt;var&gt;fun&lt;/var&gt;)&lt;/code&gt; と同等であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="5ee5fbc46ff777487145cc61fc59c9e83b4dd557" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;feof&lt;/code&gt; will only return 1 if the end of the file has already been encountered, not if the next read operation will result in an end-of-file condition.</source>
          <target state="translated">&lt;code&gt;feof&lt;/code&gt; は、ファイルの終わりにすでに達している場合にのみ1を返すことに注意してください。次の読み取り操作でファイルの終わり条件が発生する場合はそうではありません。</target>
        </trans-unit>
        <trans-unit id="39d77c5f87c7e52dd3e430773159231f81fe5109" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;ferror&lt;/code&gt; indicates if an error has already occurred, not whether the next operation will result in an error condition.</source>
          <target state="translated">&lt;code&gt;ferror&lt;/code&gt; は、次の操作がエラー状態になるかどうかではなく、エラーがすでに発生しているかどうかを示すことに注意してください。</target>
        </trans-unit>
        <trans-unit id="2d13fe33c4c53babd9f7c98cb2c5acec550ea720" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;isinteger&amp;nbsp;(14)&lt;/code&gt; is false because numeric constants in Octave are double precision floating point values.</source>
          <target state="translated">Octaveの数値定数は倍精度浮動小数点値であるため、 &lt;code&gt;isinteger&amp;nbsp;(14)&lt;/code&gt; はfalseであることに注意してください。</target>
        </trans-unit>
        <trans-unit id="156f6e80ece71c8c52bfb708ecf1abff3bd02a7c" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;popen2&lt;/code&gt;, unlike &lt;code&gt;popen&lt;/code&gt;, will not &quot;reap&quot; the child process. If you don&amp;rsquo;t use &lt;code&gt;waitpid&lt;/code&gt; to check the child&amp;rsquo;s exit status, it will linger until Octave exits.</source>
          <target state="translated">&lt;code&gt;popen2&lt;/code&gt; は、 &lt;code&gt;popen&lt;/code&gt; とは異なり、子プロセスを「取得」しないことに注意してください。子の終了ステータスを確認するために &lt;code&gt;waitpid&lt;/code&gt; を使用しない場合、Octaveが終了するまで待機します。</target>
        </trans-unit>
        <trans-unit id="0c44927646862d5aea06933b3fba6b206acc50df" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;sign (-0.0)&lt;/code&gt; is 0. Although IEEE 754 floating point allows zero to be signed, 0.0 and -0.0 compare equal. If you must test whether zero is signed, use the &lt;code&gt;signbit&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;sign (-0.0)&lt;/code&gt; は0であることに注意してください。IEEE754浮動小数点ではゼロに符号を付けることができますが、0.0と-0.0は同等です。ゼロが署名されているかどうかをテストする必要がある場合は、 &lt;code&gt;signbit&lt;/code&gt; 関数を使用します。</target>
        </trans-unit>
        <trans-unit id="9a182c7889b09758bcba8d4035ce32e0f5339f02" translate="yes" xml:space="preserve">
          <source>Note that &lt;small&gt;MATLAB&lt;/small&gt; does not strictly follow this principle and converts assumed zeros to numerical zeros in certain cases, while not doing so in other cases. As of today, there are no intentions to mimic such behavior in Octave.</source>
          <target state="translated">注意&lt;small&gt;MATLABは、&lt;/small&gt;厳密にこの原則に従っていません。また、他の例ではそうではないながら変換は、特定の場合には数値のゼロにゼロを想定しました。現在のところ、Octaveでそのような動作を模倣する意図はありません。</target>
        </trans-unit>
        <trans-unit id="841900be87543570d976967dc3fab597ab97f68e" translate="yes" xml:space="preserve">
          <source>Note that &lt;var&gt;U&lt;/var&gt; should be an upper-triangular matrix with positive diagonal elements. &lt;code&gt;chol2inv (&lt;var&gt;U&lt;/var&gt;)&lt;/code&gt; provides &lt;code&gt;inv (&lt;var&gt;U&lt;/var&gt;'*&lt;var&gt;U&lt;/var&gt;)&lt;/code&gt; but it is much faster than using &lt;code&gt;inv&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;U&lt;/var&gt; は正の対角要素を持つ上三角行列でなければならないことに注意してください。 &lt;code&gt;chol2inv (&lt;var&gt;U&lt;/var&gt;)&lt;/code&gt; を提供 &lt;code&gt;inv (&lt;var&gt;U&lt;/var&gt;'*&lt;var&gt;U&lt;/var&gt;)&lt;/code&gt; が、それははるかに高速使うより &lt;code&gt;inv&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="44aa1c2d89ea15b63ebb6c81fdd694e68ae33149" translate="yes" xml:space="preserve">
          <source>Note that &lt;var&gt;observed&lt;/var&gt; and &lt;var&gt;expected&lt;/var&gt; can be scalars, vectors, matrices, strings, cell arrays, or structures.</source>
          <target state="translated">なお、 &lt;var&gt;observed&lt;/var&gt; と &lt;var&gt;expected&lt;/var&gt; スカラー、ベクトル、行列、文字列、セル配列、または構造とすることができます。</target>
        </trans-unit>
        <trans-unit id="463ee03c6a5f677cc33b2997ccb27566c852dcd3" translate="yes" xml:space="preserve">
          <source>Note that NA always compares not equal to NA (NA != NA). To find NA values, use the &lt;code&gt;isna&lt;/code&gt; function.</source>
          <target state="translated">NAは常にNAと等しくないことに注意してください（NA！= NA）。NA値を見つけるには、 &lt;code&gt;isna&lt;/code&gt; 関数を使用します。</target>
        </trans-unit>
        <trans-unit id="26b6342e77070034236e1166982b92d9717cb699" translate="yes" xml:space="preserve">
          <source>Note that NaN always compares not equal to NaN (NaN != NaN). This behavior is specified by the IEEE standard for floating point arithmetic. To find NaN values, use the &lt;code&gt;isnan&lt;/code&gt; function.</source>
          <target state="translated">NaNは常にNaNと等しくないことに注意してください（NaN！= NaN）。この動作は、IEEE標準の浮動小数点演算で指定されています。NaN値を見つけるには、 &lt;code&gt;isnan&lt;/code&gt; 関数を使用します。</target>
        </trans-unit>
        <trans-unit id="79f4aa95440e5d844467a3327ff6c177001ddde7" translate="yes" xml:space="preserve">
          <source>Note that Octave does not implement pass by reference; Therefore, to modify an object requires an assignment statement using the return value from the &lt;code&gt;set&lt;/code&gt; method.</source>
          <target state="translated">Octaveは参照渡しを実装しないことに注意してください。したがって、オブジェクトを変更するには、 &lt;code&gt;set&lt;/code&gt; メソッドからの戻り値を使用した割り当てステートメントが必要です。</target>
        </trans-unit>
        <trans-unit id="72181781aaecafc4c7759247d5937ccf3c484b90" translate="yes" xml:space="preserve">
          <source>Note that Octave does not try to look up the definition of any identifier until it needs to evaluate it. This means that Octave will compile the following statements if they appear in a script file, or are typed at the command line,</source>
          <target state="translated">Octaveは,それを評価する必要があるまで,任意の識別子の定義を調べようとしないことに注意してください。これは,以下の文がスクリプトファイルに現れた場合,あるいはコマンドラインで入力された場合,Octaveはコンパイルすることを意味します。</target>
        </trans-unit>
        <trans-unit id="9bff13e707fd56bc06e487983afa83771c5ed401" translate="yes" xml:space="preserve">
          <source>Note that Octave may print the elements in any order.</source>
          <target state="translated">Octaveは任意の順序で要素を表示することができることに注意してください。</target>
        </trans-unit>
        <trans-unit id="23f420a2c4696fe4dde03dfed91e2f525de564fa" translate="yes" xml:space="preserve">
          <source>Note that Octave tends to crop unused memory at the first opportunity for sparse objects. Thus, in general the value of &lt;code&gt;nzmax&lt;/code&gt; will be the same as &lt;code&gt;nnz&lt;/code&gt; except for some cases of user-created sparse objects.</source>
          <target state="translated">Octaveはスパースオブジェクトの最初の機会に未使用のメモリをトリミングする傾向があることに注意してください。したがって、一般に、 &lt;code&gt;nzmax&lt;/code&gt; の値は、ユーザーが作成したスパースオブジェクトの場合を除いて、 &lt;code&gt;nnz&lt;/code&gt; と同じになります。</target>
        </trans-unit>
        <trans-unit id="dd0f71a8cb14210b954c715cd19173d3ed145834" translate="yes" xml:space="preserve">
          <source>Note that all previous variables and values are lost when a new shared block is declared.</source>
          <target state="translated">新しい共有ブロックが宣言されると、それまでのすべての変数と値が失われることに注意してください。</target>
        </trans-unit>
        <trans-unit id="7747786ac9a2adecc77e34ae15ca00a8628e461c" translate="yes" xml:space="preserve">
          <source>Note that because Octave used some CPU time to start, it is reasonable to check to see if &lt;code&gt;cputime&lt;/code&gt; works by checking to see if the total CPU time used is nonzero.</source>
          <target state="translated">Octaveは起動にある程度のCPU時間を使用したため、使用された合計CPU時間がゼロ以外であるかどうかを確認することによって &lt;code&gt;cputime&lt;/code&gt; が機能するかどうかを確認するのが妥当です。</target>
        </trans-unit>
        <trans-unit id="bfd60461004995fc31cbdc610eb028645accfe20" translate="yes" xml:space="preserve">
          <source>Note that because Octave&amp;rsquo;s element-by-element operators begin with a &amp;lsquo;</source>
          <target state="translated">Octaveの要素ごとの演算子は 'で始まるため、</target>
        </trans-unit>
        <trans-unit id="6cf99de3986d44ff891f155da70c758a04ed6590" translate="yes" xml:space="preserve">
          <source>Note that because of numerical errors in the constraint functions due to round-off and integration error, &lt;small&gt;DASRT&lt;/small&gt; may return false roots, or return the same root at two or more nearly equal values of &lt;var&gt;T&lt;/var&gt;. If such false roots are suspected, the user should consider smaller error tolerances or higher precision in the evaluation of the constraint functions.</source>
          <target state="translated">丸め誤差と積分誤差による制約関数の数値誤差のため、&lt;small&gt;DASRT&lt;/small&gt;は誤った根を返すか、 &lt;var&gt;T&lt;/var&gt; の 2つ以上のほぼ等しい値で同じ根を返す場合があります。このような偽のルートが疑われる場合、ユーザーは制約関数の評価で許容誤差を小さくするか精度を高くすることを検討する必要があります。</target>
        </trans-unit>
        <trans-unit id="23be6a3c453a0108f8db2a124ce9beb2cc841f30" translate="yes" xml:space="preserve">
          <source>Note that both increasing and decreasing the number of nonzero elements in a sparse matrix is expensive as it involves memory reallocation. Also because parts of the matrix, though not its entirety, exist as old and new copies at the same time, additional memory is needed. Therefore, if possible avoid changing capacity.</source>
          <target state="translated">疎な行列の非ゼロ要素の数を増やしたり減らしたりすることは,メモリの再割り当てを伴うため,コストがかかることに注意してください.また,行列全体ではありませんが,行列の一部が古いコピーと新しいコピーとして同時に存在するため,追加のメモリが必要になります.したがって,可能であれば,容量の変更は避けなければなりません.</target>
        </trans-unit>
        <trans-unit id="c1e97dee3a117679df381d8abebc6dbd0acd154c" translate="yes" xml:space="preserve">
          <source>Note that calculated wisdom will be lost when restarting Octave. However, the wisdom data can be reloaded if it is saved to a file as described above. Saved wisdom files should not be used on different platforms since they will not be efficient and the point of calculating the wisdom is lost.</source>
          <target state="translated">Octaveを再起動すると計算された知恵は失われることに注意してください。しかし,上記のようにファイルに保存しておけば,知恵のデータをリロードすることができます.保存された知恵ファイルは効率が悪くなり,知恵を計算するポイントが失われるので,異なるプラットフォームでは使用しないでください.</target>
        </trans-unit>
        <trans-unit id="33577f935031ca5daa96b0459ffa038b0aea67da" translate="yes" xml:space="preserve">
          <source>Note that cell arrays are used less often in standard oct-files and so the</source>
          <target state="translated">セル配列は標準のオクトファイルではあまり使われていないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="290e273a97ec1132e1ec3934091a8aac8a5845d9" translate="yes" xml:space="preserve">
          <source>Note that demo blocks cannot use any shared variables. This is so that they can be executed by themselves, ignoring all other tests.</source>
          <target state="translated">デモブロックでは共有変数を使用できないことに注意してください。これは、他のすべてのテストを無視してそれ自身で実行できるようにするためです。</target>
        </trans-unit>
        <trans-unit id="6199219a2f9e04f6eb745b9c5d302a0f9120a278" translate="yes" xml:space="preserve">
          <source>Note that for compatibility with &lt;small&gt;MATLAB&lt;/small&gt;, all objects have a minimum of two dimensions and row vectors are left unchanged.</source>
          <target state="translated">&lt;small&gt;MATLAB&lt;/small&gt;との互換性のために、すべてのオブジェクトは2次元以上で、行ベクトルは変更されないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="403ee1766470a62a2b73f63c4f66deb90e78dd57" translate="yes" xml:space="preserve">
          <source>Note that for performance reasons it is better to use handles to existing Octave functions, rather than to define anonymous functions which wrap an existing function. The integration of &lt;code&gt;sin (x)&lt;/code&gt; is 5X faster if the code is written as</source>
          <target state="translated">パフォーマンス上の理由から、既存の関数をラップする無名関数を定義するよりも、既存のOctave関数へのハンドルを使用する方が良いことに注意してください。コードが次のように記述されている場合、 &lt;code&gt;sin (x)&lt;/code&gt; の統合は5倍速くなります</target>
        </trans-unit>
        <trans-unit id="b6ee064847b24ef5182950c24e085ce5c44427e6" translate="yes" xml:space="preserve">
          <source>Note that for some of these choices, the window size at the boundaries is not the same as for the central part, and &lt;var&gt;fcn&lt;/var&gt; must work in these cases.</source>
          <target state="translated">これらの選択の一部では、境界でのウィンドウサイズが中央部分のウィンドウサイズと同じではなく、これらの場合に &lt;var&gt;fcn&lt;/var&gt; が機能する必要があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="2c6be4a26ea935f01a87fb7807f97b4f2d1f3ce1" translate="yes" xml:space="preserve">
          <source>Note that for symbolic links, &lt;code&gt;dir&lt;/code&gt; returns information about the file that the symbolic link points to rather than the link itself. However, if the link points to a nonexistent file, &lt;code&gt;dir&lt;/code&gt; returns information about the link.</source>
          <target state="translated">シンボリックリンクの場合、 &lt;code&gt;dir&lt;/code&gt; は、リンク自体ではなく、シンボリックリンクが指すファイルに関する情報を返すことに注意してください。ただし、リンクが存在しないファイルを指している場合、 &lt;code&gt;dir&lt;/code&gt; はリンクに関する情報を返します。</target>
        </trans-unit>
        <trans-unit id="7a7a7aad7888d1a30fb1f888f339da8216270064" translate="yes" xml:space="preserve">
          <source>Note that if &lt;var&gt;code&lt;/var&gt; runs successfully, rather than failing, the error printed is:</source>
          <target state="translated">&lt;var&gt;code&lt;/var&gt; が失敗するのではなく、正常に実行される場合、出力されるエラーは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="a0661d87ee99507d8648d461be182e9c6bc9647b" translate="yes" xml:space="preserve">
          <source>Note that in conditional contexts (like the test clause of &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;while&lt;/code&gt; statements) Octave treats the test as if you had typed &lt;code&gt;all (all (condition))&lt;/code&gt;.</source>
          <target state="translated">条件付きコンテキスト（ &lt;code&gt;if&lt;/code&gt; および &lt;code&gt;while&lt;/code&gt; ステートメントのtest節のような）では、Octaveはテストを &lt;code&gt;all (all (condition))&lt;/code&gt; 入力したかのように扱うことに注意してください。</target>
        </trans-unit>
        <trans-unit id="43560cc269e8fa116f51a01e5abad26b5f96381d" translate="yes" xml:space="preserve">
          <source>Note that in some situations it is more efficient to read the entire contents of a file and then process it, than it is to read it line by line. This has the potential advantage of removing the loop in the above code.</source>
          <target state="translated">状況によっては、ファイルを一行ずつ読み込むよりも、ファイルの内容全体を読み込んでから処理した方が効率的であることに注意してください。これは、上記のコードのループを取り除くという潜在的な利点を持っています。</target>
        </trans-unit>
        <trans-unit id="f12402a34d48dade196988656912876bb2f95cd1" translate="yes" xml:space="preserve">
          <source>Note that in the above example for &lt;code&gt;cstrcat&lt;/code&gt;, the white space originates from the internal representation of the strings in a string array (see &lt;a href=&quot;character-arrays#Character-Arrays&quot;&gt;Character Arrays&lt;/a&gt;).</source>
          <target state="translated">注上記の例では、その &lt;code&gt;cstrcat&lt;/code&gt; （参照、文字列配列内の文字列の内部表現からホワイトスペース発信&lt;a href=&quot;character-arrays#Character-Arrays&quot;&gt;文字アレイ&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="c5f696bd33d09fda8121e0d4b4eee4db247d9b33" translate="yes" xml:space="preserve">
          <source>Note that it is not possible to use function handles or inline functions within a mex-file.</source>
          <target state="translated">関数ハンドルやインライン関数を mex-file 内で使用することはできないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="2eb718f27a65348ab9f562789aa342e04c7b0baa" translate="yes" xml:space="preserve">
          <source>Note that it is not possible to use function handles within a mex-file.</source>
          <target state="translated">mex-file内で関数ハンドルを使用することはできないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="94e320a8e494c9b902c468804501876a921ed398" translate="yes" xml:space="preserve">
          <source>Note that it is permissible to use a 1-D index with a multi-dimensional object (also called linear indexing). In this case, the elements of the multi-dimensional array are taken in column-first order like Fortran. That is, the columns of the array are imagined to be stacked on top of each other to form a column vector and then the single linear index is applied to this vector.</source>
          <target state="translated">多次元オブジェクトで1次元インデックスを使用することが許されていることに注意してください(線形インデックスとも呼ばれます)。この場合,多次元配列の要素はFortranのように列優先で取ります.つまり,配列の列は,互いに重ねて列ベクトルを形成すると想像され,このベクトルには単一の線形インデックスが適用されます.</target>
        </trans-unit>
        <trans-unit id="849b6b7c53ee78440ce53ec360d1e65a235c64a6" translate="yes" xml:space="preserve">
          <source>Note that octave must be compiled with multi-threaded &lt;small&gt;FFTW&lt;/small&gt; support for this feature. The number of processors available to the current process is used per default.</source>
          <target state="translated">オクターブは、この機能のマルチスレッド&lt;small&gt;FFTW&lt;/small&gt;サポートでコンパイルする必要があることに注意してください。現在のプロセスで使用可能なプロセッサの数がデフォルトで使用されます。</target>
        </trans-unit>
        <trans-unit id="4ccf85eacc727d518f7f5180953798506dc9684c" translate="yes" xml:space="preserve">
          <source>Note that only the structure of the matrix is used in this calculation based on a Dulmage-Mendelsohn permutation to block triangular form. As such the numerical rank of the matrix &lt;var&gt;S&lt;/var&gt; is bounded by &lt;code&gt;sprank (&lt;var&gt;S&lt;/var&gt;) &amp;gt;= rank (&lt;var&gt;S&lt;/var&gt;)&lt;/code&gt;. Ignoring floating point errors &lt;code&gt;sprank (&lt;var&gt;S&lt;/var&gt;) == rank (&lt;var&gt;S&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="translated">この計算では、三角構造をブロックするためのDulmage-Mendelsohn置換に基づく行列の構造のみが使用されることに注意してください。したがって、行列 &lt;var&gt;S&lt;/var&gt; の数値ランクは、 &lt;code&gt;sprank (&lt;var&gt;S&lt;/var&gt;) &amp;gt;= rank (&lt;var&gt;S&lt;/var&gt;)&lt;/code&gt; によって制限されます。浮動小数点エラーを無視します &lt;code&gt;sprank (&lt;var&gt;S&lt;/var&gt;) == rank (&lt;var&gt;S&lt;/var&gt;)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a3332cc93481fcc27319109e5d7a2231a73a07b9" translate="yes" xml:space="preserve">
          <source>Note that ordinary structure syntax &lt;code&gt;&lt;var&gt;s&lt;/var&gt;.foo bar = 42&lt;/code&gt; cannot be used here, as the field name is not a valid Octave identifier because of the space character. Using arbitrary strings for field names is incompatible with &lt;small&gt;MATLAB&lt;/small&gt;, and this usage will emit a warning if the warning ID &lt;code&gt;Octave:language-extension&lt;/code&gt; is enabled. See &lt;a href=&quot;issuing-warnings#XREFwarning_005fids&quot;&gt;warning_ids&lt;/a&gt;.</source>
          <target state="translated">フィールド名はスペース文字のため有効なOctave識別子ではないため、通常の構造構文 &lt;code&gt;&lt;var&gt;s&lt;/var&gt;.foo bar = 42&lt;/code&gt; はここでは使用できないことに注意してください。フィールド名に任意の文字列を使用することは&lt;small&gt;MATLAB&lt;/small&gt;と互換性がなく、警告ID &lt;code&gt;Octave:language-extension&lt;/code&gt; が有効な場合、この使用法は警告を発します。&lt;a href=&quot;issuing-warnings#XREFwarning_005fids&quot;&gt;warning_idsを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="23b3bfaa4d6091a4c072151ae220b2afd0343694" translate="yes" xml:space="preserve">
          <source>Note that parameters of the Octave type &lt;code&gt;double&lt;/code&gt; are implicitly converted into the Java type &lt;code&gt;double&lt;/code&gt; and the Octave type (array of) &lt;code&gt;char&lt;/code&gt; is converted into the java type &lt;code&gt;String&lt;/code&gt;. A Java object created by &lt;a href=&quot;java-interface-functions#XREFjavaObject&quot;&gt;javaObject&lt;/a&gt; is never automatically converted into an Octave type but remains a Java object. It can be assigned to an Octave variable.</source>
          <target state="translated">オクターブタイプのパラメータは、そのノート &lt;code&gt;double&lt;/code&gt; 暗黙のJavaに変換され、入力 &lt;code&gt;double&lt;/code&gt; 及びオクターブタイプ（アレイ） &lt;code&gt;char&lt;/code&gt; Javaの型に変換される &lt;code&gt;String&lt;/code&gt; 。&lt;a href=&quot;java-interface-functions#XREFjavaObject&quot;&gt;javaObject&lt;/a&gt;によって作成されたJavaオブジェクトは、自動的にOctave型に変換されることはありませんが、Javaオブジェクトのままです。オクターブ変数に割り当てることができます。</target>
        </trans-unit>
        <trans-unit id="e386b43a679e5ab0d561ec343c4f066793171b15" translate="yes" xml:space="preserve">
          <source>Note that per default the output argument(s) are arrays of the same size as the input arguments. Input arguments that are singleton (1x1) cells will be automatically expanded to the size of the other arguments.</source>
          <target state="translated">デフォルトでは、出力引数は入力引数と同じサイズの配列であることに注意してください。シングルトン(1x1)セルである入力引数は、自動的に他の引数のサイズに展開されます。</target>
        </trans-unit>
        <trans-unit id="bd6f56d4cd72afa13a880da7318cbfd0587d0415" translate="yes" xml:space="preserve">
          <source>Note that regardless of the value set for &lt;code&gt;output_precision&lt;/code&gt;, the number of digits of precision displayed is limited to 16 for double precision values and 7 for single precision values.</source>
          <target state="translated">&lt;code&gt;output_precision&lt;/code&gt; に設定された値に関係なく、表示される精度の桁数は、倍精度値の場合は16、単精度値の場合は7に制限されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="4283770704b790ec805c19ea0ed3aa57cf475099" translate="yes" xml:space="preserve">
          <source>Note that some operating systems may place a limit on the number of characters that are recognized after &amp;lsquo;</source>
          <target state="translated">一部のオペレーティングシステムでは、後に認識される文字数に制限を設ける場合があることに注意してください '</target>
        </trans-unit>
        <trans-unit id="e36a773ef709e536a82e2d886a7cd51f572df233" translate="yes" xml:space="preserve">
          <source>Note that the &amp;lsquo;</source>
          <target state="translated">'</target>
        </trans-unit>
        <trans-unit id="228cf5ce411e402e51050e1a342ee8149da5d23b" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;FIRfilter&lt;/code&gt;&amp;rsquo;s display method relies on the &lt;code&gt;disp&lt;/code&gt; method from the &lt;code&gt;polynomial&lt;/code&gt; class to actually display the filter coefficients. Furthermore, note that in the &lt;code&gt;display&lt;/code&gt; method it makes sense to start the method with the line &lt;code&gt;&lt;code&gt;printf (&quot;%s =&quot;, inputname (1))&lt;/code&gt;&lt;/code&gt; to be consistent with the rest of Octave which prints the variable name to be displayed followed by the value. In general it is not recommended to overload the &lt;code&gt;display&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;FIRfilter&lt;/code&gt; の表示メソッドは、 &lt;code&gt;polynomial&lt;/code&gt; クラスの &lt;code&gt;disp&lt;/code&gt; メソッドに依存して、実際にフィルター係数を表示することに注意してください。さらに、 &lt;code&gt;display&lt;/code&gt; メソッドでは、 &lt;code&gt;&lt;code&gt;printf (&quot;%s =&quot;, inputname (1))&lt;/code&gt;&lt;/code&gt; の行でメソッドを開始して、表示される変数名を出力するOctaveの残りの部分と一貫するようにすると意味があることに注意してください。値。一般に、 &lt;code&gt;display&lt;/code&gt; 機能をオーバーロードすることは推奨されません。</target>
        </trans-unit>
        <trans-unit id="a6ed75b60e03ac6029e001f4be1fd72fd94fb3c9" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;elseif&lt;/code&gt; keyword must not be spelled &lt;code&gt;else if&lt;/code&gt;, as is allowed in Fortran. If it is, the space between the &lt;code&gt;else&lt;/code&gt; and &lt;code&gt;if&lt;/code&gt; will tell Octave to treat this as a new &lt;code&gt;if&lt;/code&gt; statement within another &lt;code&gt;if&lt;/code&gt; statement&amp;rsquo;s &lt;code&gt;else&lt;/code&gt; clause. For example, if you write</source>
          <target state="translated">注意 &lt;code&gt;elseif&lt;/code&gt; キーワードが綴られてはならない &lt;code&gt;else if&lt;/code&gt; のようにFortranで許可されています、。もしそうなら、 &lt;code&gt;else&lt;/code&gt; と &lt;code&gt;if&lt;/code&gt; の間のスペースはOctaveにこれを別の &lt;code&gt;if&lt;/code&gt; ステートメントの &lt;code&gt;else&lt;/code&gt; 節内の新しい &lt;code&gt;if&lt;/code&gt; ステートメントとして扱うように指示します。たとえば、</target>
        </trans-unit>
        <trans-unit id="4d0fad6a5336a6e37ba73d78f237be4246718b0c" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;global&lt;/code&gt; qualifier extends only to the next end-of-statement indicator which could be a comma (&amp;lsquo;</source>
          <target state="translated">&lt;code&gt;global&lt;/code&gt; 修飾子は、コンマ（ '）である可能性のある次のステートメント終了インジケーターにのみ拡張されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="ca3e6530489520f59234689425691294586390b6" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;sparse_auto_mutate&lt;/code&gt; option is incompatible with &lt;small&gt;MATLAB&lt;/small&gt;, and so it is off by default.</source>
          <target state="translated">&lt;code&gt;sparse_auto_mutate&lt;/code&gt; オプションは&lt;small&gt;MATLAB&lt;/small&gt;と互換性がないため、デフォルトではオフになっていることに注意してください。</target>
        </trans-unit>
        <trans-unit id="8711780e101c67b78853043ee91ca22f484e7a3f" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;subsref&lt;/code&gt; and &lt;code&gt;subsasgn&lt;/code&gt; methods always receive the whole index chain, while they usually handle only the first element. It is the responsibility of these methods to handle the rest of the chain (if needed), usually by forwarding it again to &lt;code&gt;subsref&lt;/code&gt; or &lt;code&gt;subsasgn&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;subsref&lt;/code&gt; メソッドと &lt;code&gt;subsasgn&lt;/code&gt; メソッドは常にインデックスチェーン全体を受け取りますが、通常は最初の要素のみを処理することに注意してください。チェーンの残りの部分を処理する（必要な場合）には、通常、再度 &lt;code&gt;subsref&lt;/code&gt; または &lt;code&gt;subsasgn&lt;/code&gt; に転送することにより、これらのメソッドの責任です。</target>
        </trans-unit>
        <trans-unit id="61711dea7e3a5c88021166213f136fade81e1eb5" translate="yes" xml:space="preserve">
          <source>Note that the application &lt;code&gt;standalone&lt;/code&gt; will be dynamically linked against the Octave libraries and any Octave support libraries. The above allows the Octave math libraries to be used by an application. It does not, however, allow the script files, oct-files, or built-in functions of Octave to be used by the application. To do that, the Octave interpreter needs to be initialized first. An example of how to do this can then be seen in the code</source>
          <target state="translated">&lt;code&gt;standalone&lt;/code&gt; のアプリケーションは、OctaveライブラリおよびOctaveサポートライブラリに対して動的にリンクされることに注意してください。上記により、アプリケーションでOctave数学ライブラリを使用できるようになります。ただし、スクリプトファイル、octファイル、またはOctaveの組み込み関数をアプリケーションで使用することはできません。そのためには、まずOctaveインタープリターを初期化する必要があります。これを行う方法の例は、コードで確認できます</target>
        </trans-unit>
        <trans-unit id="2b59acef35e16400f3261752e3e03084ab50ef1b" translate="yes" xml:space="preserve">
          <source>Note that the code is displayed before it is executed so that a simple comment at the end suffices for labeling what is being shown. For plots, labeling can also be done with &lt;code&gt;title&lt;/code&gt; or &lt;code&gt;text&lt;/code&gt;. It is generally &lt;strong&gt;not&lt;/strong&gt; necessary to use &lt;code&gt;disp&lt;/code&gt; or &lt;code&gt;printf&lt;/code&gt; within the demo.</source>
          <target state="translated">コードが実行される前に表示されるため、表示されているものにラベルを付けるために、末尾の単純なコメントで十分です。プロットの場合、ラベル付けは &lt;code&gt;title&lt;/code&gt; または &lt;code&gt;text&lt;/code&gt; 行うこともできます。通常、デモ内で &lt;code&gt;disp&lt;/code&gt; または &lt;code&gt;printf&lt;/code&gt; を使用する必要はあり&lt;strong&gt;ません&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="2117fd30f25d3f4609013e39a0fddd19a0a9776e" translate="yes" xml:space="preserve">
          <source>Note that the eigenvalues &lt;var&gt;z&lt;/var&gt; are the zeros of the matrix polynomial. &lt;var&gt;z&lt;/var&gt; is a row vector with &lt;code&gt;&lt;var&gt;n&lt;/var&gt;*&lt;var&gt;l&lt;/var&gt;&lt;/code&gt; elements. &lt;var&gt;v&lt;/var&gt; is a matrix (&lt;var&gt;n&lt;/var&gt; x &lt;var&gt;n&lt;/var&gt;*&lt;var&gt;l&lt;/var&gt;) with columns that correspond to the eigenvectors.</source>
          <target state="translated">固有値 &lt;var&gt;z&lt;/var&gt; は行列多項式の零点であることに注意してください。 &lt;var&gt;z&lt;/var&gt; は、 &lt;code&gt;&lt;var&gt;n&lt;/var&gt;*&lt;var&gt;l&lt;/var&gt;&lt;/code&gt; 要素を持つ行ベクトルです。 &lt;var&gt;v&lt;/var&gt; は、固有ベクトルに対応する列を持つ行列（ &lt;var&gt;n&lt;/var&gt; x &lt;var&gt;n&lt;/var&gt; * &lt;var&gt;l&lt;/var&gt; ）です。</target>
        </trans-unit>
        <trans-unit id="6cb03a6094bbd3d33933c02a2d53ef7d4dbff450" translate="yes" xml:space="preserve">
          <source>Note that the following relations hold:</source>
          <target state="translated">以下の関係が成り立つことに注意してください。</target>
        </trans-unit>
        <trans-unit id="f0b26df5c4322629ef528d8a709cc7811301c8f6" translate="yes" xml:space="preserve">
          <source>Note that the formulation of the integrand uses the element-by-element operator &lt;code&gt;./&lt;/code&gt; and all user functions to &lt;code&gt;quadgk&lt;/code&gt; should do the same.</source>
          <target state="translated">被積分関数の定式化は要素 &lt;code&gt;quadgk&lt;/code&gt; 演算子 &lt;code&gt;./&lt;/code&gt; を使用し、quadgkへのすべてのユーザー関数は同じようにする必要があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="1145741b11843243567d80169c5fad7a1350c0eb" translate="yes" xml:space="preserve">
          <source>Note that the function name definition is not explicitly included in &lt;code&gt;mexFunction&lt;/code&gt; and so there can only be a single &lt;code&gt;mexFunction&lt;/code&gt; entry point per file. Instead, the name of the function as seen in Octave is determined by the name of the mex-file itself minus the extension. If the above function is in the file</source>
          <target state="translated">関数名の定義は &lt;code&gt;mexFunction&lt;/code&gt; に明示的に含まれていないため、ファイルごとに1 つの &lt;code&gt;mexFunction&lt;/code&gt; エントリポイントしか存在できないことに注意してください。代わりに、Octaveに表示される関数の名前は、拡張子を除いたmexファイル自体の名前によって決まります。上記の関数がファイルにある場合</target>
        </trans-unit>
        <trans-unit id="2d897b1db95de2ddd0f59a41ddb75cebed7913e8" translate="yes" xml:space="preserve">
          <source>Note that the indices do not have to be scalar numbers. For example,</source>
          <target state="translated">インデックスはスカラー数である必要はないことに注意してください。例えば</target>
        </trans-unit>
        <trans-unit id="60b2914bf560a976e6e49d4a11403656f14baa8e" translate="yes" xml:space="preserve">
          <source>Note that the matrix type will be discovered automatically on the first attempt to solve a linear equation involving &lt;var&gt;A&lt;/var&gt;. Therefore &lt;code&gt;matrix_type&lt;/code&gt; is only useful to give Octave hints of the matrix type. Incorrectly defining the matrix type will result in incorrect results from solutions of linear equations; it is entirely &lt;strong&gt;the responsibility of the user&lt;/strong&gt; to correctly identify the matrix type.</source>
          <target state="translated">&lt;var&gt;A&lt;/var&gt; を含む線形方程式を最初に解こうとすると、行列タイプが自動的に検出されることに注意してください。したがって、 &lt;code&gt;matrix_type&lt;/code&gt; は、マトリックスタイプのオクターブヒントを提供する場合にのみ役立ちます。行列タイプを誤って定義すると、線形方程式の解から誤った結果が生じます。完全にある&lt;strong&gt;利用者の責任&lt;/strong&gt;正しくマトリクス型を識別するために。</target>
        </trans-unit>
        <trans-unit id="00be1aa8ba0c432cb655465c429a33e5ef27f378" translate="yes" xml:space="preserve">
          <source>Note that the maximum total number of Newton iterations allowed is &lt;code&gt;MXNIT*MXNJ*MXNH&lt;/code&gt; if the &lt;code&gt;&quot;compute consistent initial
condition&quot;&lt;/code&gt; option has been set to 1 and &lt;code&gt;MXNIT*MXNJ&lt;/code&gt; if it is set to 2.</source>
          <target state="translated">許可ニュートン反復の最大合計数であることに注意してください &lt;code&gt;MXNIT*MXNJ*MXNH&lt;/code&gt; 場合は &lt;code&gt;&quot;compute consistent initial condition&quot;&lt;/code&gt; オプションは、1とするように設定されている &lt;code&gt;MXNIT*MXNJ&lt;/code&gt; それが2に設定されている場合。</target>
        </trans-unit>
        <trans-unit id="ca332db47e2c5502aced85b19febe64c0c7ff526" translate="yes" xml:space="preserve">
          <source>Note that the output from &lt;code&gt;disp&lt;/code&gt; always ends with a newline.</source>
          <target state="translated">&lt;code&gt;disp&lt;/code&gt; からの出力は常に改行で終わることに注意してください。</target>
        </trans-unit>
        <trans-unit id="77a1eb03c2be1c71908492ca8508273ac22c8525" translate="yes" xml:space="preserve">
          <source>Note that the output from &lt;code&gt;fdisp&lt;/code&gt; always ends with a newline.</source>
          <target state="translated">&lt;code&gt;fdisp&lt;/code&gt; からの出力は常に改行で終わることに注意してください。</target>
        </trans-unit>
        <trans-unit id="2bda46be44096d4bb0502e6c815f899b0a4a4820" translate="yes" xml:space="preserve">
          <source>Note that the return value of &lt;code&gt;29&lt;/code&gt; means that the breakpoint was effectively set to line 29. The status of breakpoints in a function can be queried with &lt;code&gt;dbstatus&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;29&lt;/code&gt; の戻り値は、ブレークポイントが行29に効果的に設定されたことを意味することに注意してください。関数内のブレークポイントのステータスは、 &lt;code&gt;dbstatus&lt;/code&gt; で照会できます。</target>
        </trans-unit>
        <trans-unit id="2755ba6814f7a6260a1f59fb4e6436df65f13098" translate="yes" xml:space="preserve">
          <source>Note that the return value of the constructor must be the output of the &lt;code&gt;class&lt;/code&gt; function. The first argument to the &lt;code&gt;class&lt;/code&gt; function is a structure and the second is the name of the class itself. An example of calling the class constructor to create an instance is</source>
          <target state="translated">コンストラクターの戻り値は、 &lt;code&gt;class&lt;/code&gt; 関数の出力でなければならないことに注意してください。 &lt;code&gt;class&lt;/code&gt; 関数の最初の引数は構造体で、2番目の引数はクラス自体の名前です。クラスコンストラクターを呼び出してインスタンスを作成する例を次に示します。</target>
        </trans-unit>
        <trans-unit id="10019b334871cdac6b76aa602f580ab570717489" translate="yes" xml:space="preserve">
          <source>Note that the same result as in the above example could be achieved by:</source>
          <target state="translated">上記の例と同じ結果が得られることに注意してください。</target>
        </trans-unit>
        <trans-unit id="db2a2afc8eb171d81a8ec3a847c866298bebf49f" translate="yes" xml:space="preserve">
          <source>Note that the sample code always provides for the case in which no arguments are supplied. This is important because Octave will call a constructor with no arguments when loading objects from saved files in order to determine the inheritance structure.</source>
          <target state="translated">サンプルコードは常に引数が与えられない場合を提供していることに注意してください。これは,Octaveが保存されたファイルからオブジェクトをロードする際に,継承構造を決定するために,引数のないコンストラクタを呼び出すために重要です。</target>
        </trans-unit>
        <trans-unit id="25faf02b54f7cfc15ae78608d6489e0fcede447c" translate="yes" xml:space="preserve">
          <source>Note that the test case above usually requires twice the memory, if &lt;var&gt;a&lt;/var&gt; and &lt;var&gt;b&lt;/var&gt; are not assigned by &lt;code&gt;a = b = &amp;hellip;&lt;/code&gt;. Note further, that the data type &lt;code&gt;single&lt;/code&gt; has a precision of about 23 binary bits. In this particular example no rounding errors occur.</source>
          <target state="translated">上記のテストケースで &lt;var&gt;a&lt;/var&gt; 、 &lt;var&gt;b&lt;/var&gt; とbが &lt;code&gt;a = b = &amp;hellip;&lt;/code&gt; によって割り当てられていない場合、通常は2倍のメモリが必要であることに注意してください。さらに、データ型 &lt;code&gt;single&lt;/code&gt; の精度は約23バイナリビットであることに注意してください。この特定の例では、丸め誤差は発生しません。</target>
        </trans-unit>
        <trans-unit id="c7994d2bbd75b75324f96ce051ec00ec3a7f1ce9" translate="yes" xml:space="preserve">
          <source>Note that the total number of elements in the original matrix (&lt;code&gt;prod (size (&lt;var&gt;A&lt;/var&gt;))&lt;/code&gt;) must match the total number of elements in the new matrix (&lt;code&gt;prod ([&lt;var&gt;m&lt;/var&gt; &lt;var&gt;n&lt;/var&gt; &amp;hellip;])&lt;/code&gt;).</source>
          <target state="translated">元の行列の要素の総数（ &lt;code&gt;prod (size (&lt;var&gt;A&lt;/var&gt;))&lt;/code&gt; ）は、新しい行列の要素の総数（ &lt;code&gt;prod ([&lt;var&gt;m&lt;/var&gt; &lt;var&gt;n&lt;/var&gt; &amp;hellip;])&lt;/code&gt; ）と一致する必要があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="2e69b3089d76542dcd5969d99f46ffa124bae2d2" translate="yes" xml:space="preserve">
          <source>Note that the true result is &lt;em&gt;+/- sqrt(5)&lt;/em&gt; which is roughly &lt;em&gt;+/- 2.2361&lt;/em&gt;.</source>
          <target state="translated">実際の結果は&lt;em&gt;+/- sqrt（5）&lt;/em&gt;であり、おおよそ&lt;em&gt;+/- 2.2361で&lt;/em&gt;あることに注意してください。</target>
        </trans-unit>
        <trans-unit id="a0b650af9d0617ea74f861dbb14e255c18c785bd" translate="yes" xml:space="preserve">
          <source>Note that the upper (or lower, if the increment is negative) bound on the range is not always included in the set of values, and that ranges defined by floating point values can produce surprising results because Octave uses floating point arithmetic to compute the values in the range. If it is important to include the endpoints of a range and the number of elements is known, you should use the &lt;code&gt;linspace&lt;/code&gt; function instead (see &lt;a href=&quot;special-utility-matrices#Special-Utility-Matrices&quot;&gt;Special Utility Matrices&lt;/a&gt;).</source>
          <target state="translated">範囲の上限（または増分が負の場合は下限）が値のセットに常に含まれるとは限らないことに注意してください。また、Octaveは浮動小数点演算を使用して値を計算するため、浮動小数点値で定義された範囲は驚くべき結果をもたらす可能性があります範囲内。範囲の端点を含めることが重要であり、要素の数がわかっている場合は、代わりに関数 &lt;code&gt;linspace&lt;/code&gt; を使用する必要があります（&lt;a href=&quot;special-utility-matrices#Special-Utility-Matrices&quot;&gt;特別なユーティリティ行列を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="55f7b5bc82b1db20cb74f6a08cb90aa819614046" translate="yes" xml:space="preserve">
          <source>Note that these functions do significant error checking and so in some circumstances the user might prefer to access the data of the array or matrix directly through the &lt;code&gt;fortran_vec&lt;/code&gt; method discussed below.</source>
          <target state="translated">これらの関数は重要なエラーチェックを行うため、状況によっては、以下で説明する &lt;code&gt;fortran_vec&lt;/code&gt; メソッドを介して配列または行列のデータに直接アクセスすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="a2e4c8a79ff02a65e5217b7bcdabacd50154ee2c" translate="yes" xml:space="preserve">
          <source>Note that this does not enable the &lt;code&gt;Octave:language-extension&lt;/code&gt; warning, which you might want if you want to be told about writing code that works in Octave but not &lt;small&gt;MATLAB&lt;/small&gt; (see &lt;a href=&quot;issuing-warnings#XREFwarning&quot;&gt;warning&lt;/a&gt;, &lt;a href=&quot;issuing-warnings#XREFwarning_005fids&quot;&gt;warning_ids&lt;/a&gt;).</source>
          <target state="translated">これは &lt;code&gt;Octave:language-extension&lt;/code&gt; 警告を有効にしないことに注意してください。これは、&lt;small&gt;MATLABでは&lt;/small&gt;なくOctaveで機能するコードの記述&lt;a href=&quot;issuing-warnings#XREFwarning_005fids&quot;&gt;について通知し&lt;/a&gt;たい場合に必要になる可能性があります（&lt;a href=&quot;issuing-warnings#XREFwarning&quot;&gt;warning&lt;/a&gt;、warning_idsを参照）。</target>
        </trans-unit>
        <trans-unit id="d0794545d8f18a0052e326536ca4f9f030e563a3" translate="yes" xml:space="preserve">
          <source>Note that this function could not have been written using the &lt;code&gt;break&lt;/code&gt; statement to exit the loop once a nonzero value is found without adding extra logic to avoid printing the message if the vector does contain a nonzero element.</source>
          <target state="translated">この関数は、ベクターにゼロ以外の要素が含まれている場合にメッセージが出力されないようにロジックを追加せずに、ゼロ以外の値が見つかると、 &lt;code&gt;break&lt;/code&gt; ステートメントを使用してループを終了するように記述できなかったことに注意してください。</target>
        </trans-unit>
        <trans-unit id="210dbb15aacc730d0dae1e899ae8e36a57111121" translate="yes" xml:space="preserve">
          <source>Note that this function evaluates &lt;code&gt;nargin&lt;/code&gt; on the caller.</source>
          <target state="translated">この関数は呼び出し側の &lt;code&gt;nargin&lt;/code&gt; を評価することに注意してください。</target>
        </trans-unit>
        <trans-unit id="2aafdff8d7afeb4f9c4ba48c75c3414aa473c301" translate="yes" xml:space="preserve">
          <source>Note that this function is particularly useful for sparse matrices, as it extracts the nonzero elements as vectors, which can then be used to create the original matrix. For example:</source>
          <target state="translated">この関数は,非ゼロ要素をベクトルとして抽出し,元の行列を作成するために利用できるので,疎な行列に特に有用であることに注意してください.例えば,以下のようになります.</target>
        </trans-unit>
        <trans-unit id="07935c316367fad63be584bb1fc61d01a185cf31" translate="yes" xml:space="preserve">
          <source>Note that this is only meant to be an example of calling user-supplied functions and should not be taken too seriously. In addition to using a more robust algorithm, any serious code would check the number and type of all the arguments, ensure that the supplied function really was a function, etc. See &lt;a href=&quot;predicates-for-numeric-objects#Predicates-for-Numeric-Objects&quot;&gt;Predicates for Numeric Objects&lt;/a&gt;, for a list of predicates for numeric objects, and see &lt;a href=&quot;status-of-variables#Status-of-Variables&quot;&gt;Status of Variables&lt;/a&gt;, for a description of the &lt;code&gt;exist&lt;/code&gt; function.</source>
          <target state="translated">これは、ユーザー提供の関数を呼び出す例にすぎず、あまり真剣に受け止めてはならないことに注意してください。より堅牢なアルゴリズムを使用することに加えて、深刻なコードはすべての引数の数と型をチェックし、指定された関数が実際に関数であることを確認します。&lt;a href=&quot;predicates-for-numeric-objects#Predicates-for-Numeric-Objects&quot;&gt;数値オブジェクト&lt;/a&gt;の述語のリストについては、数値オブジェクトの述語を参照してください。また、 &lt;code&gt;exist&lt;/code&gt; 関数の説明については、&lt;a href=&quot;status-of-variables#Status-of-Variables&quot;&gt;変数のステータスを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="8af54d33e5b3f631df6133cc27f05aa4d6a783f3" translate="yes" xml:space="preserve">
          <source>Note that this is the representation of these elements with the first row and column assumed to start at zero, while in Octave itself the row and column indexing starts at one. Thus the number of elements in the &lt;var&gt;i&lt;/var&gt;-th column is given by &lt;code&gt;&lt;var&gt;cidx&lt;/var&gt; (&lt;var&gt;i&lt;/var&gt; + 1) -
&lt;var&gt;cidx&lt;/var&gt; (&lt;var&gt;i&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="translated">これはこれらの要素の表現であり、最初の行と列がゼロから始まると想定されていることに注意してください。一方、Octave自体では、行と列のインデックス付けは1から始まります。したがって、 &lt;var&gt;i&lt;/var&gt; 番目の列の要素の数は &lt;code&gt;&lt;var&gt;cidx&lt;/var&gt; (&lt;var&gt;i&lt;/var&gt; + 1) - &lt;var&gt;cidx&lt;/var&gt; (&lt;var&gt;i&lt;/var&gt;)&lt;/code&gt; 与えられます。</target>
        </trans-unit>
        <trans-unit id="9fd495e3915708c8614fcce984eacb66c771283b" translate="yes" xml:space="preserve">
          <source>Note that this is the same as writing &lt;code&gt;val(:, 1:2) = 0&lt;/code&gt;.</source>
          <target state="translated">これは &lt;code&gt;val(:, 1:2) = 0&lt;/code&gt; を書き込むのと同じであることに注意してください。</target>
        </trans-unit>
        <trans-unit id="535f6fb9b5ed3833406e222160e724cc9dc8ca5f" translate="yes" xml:space="preserve">
          <source>Note that this is the same as writing &lt;code&gt;val(:, 1:2)&lt;/code&gt;.</source>
          <target state="translated">これは &lt;code&gt;val(:, 1:2)&lt;/code&gt; と同じであることに注意してください。</target>
        </trans-unit>
        <trans-unit id="8048ebb2eef8f070f2a774757a82504a7921fd5f" translate="yes" xml:space="preserve">
          <source>Note that unlike &lt;code&gt;strcmp&lt;/code&gt;, this function requires that &lt;var&gt;filepath1&lt;/var&gt; and &lt;var&gt;filepath2&lt;/var&gt; exist, as well as point to the same location, in order to return true.</source>
          <target state="translated">&lt;code&gt;strcmp&lt;/code&gt; とは異なり、この関数では、trueを返すために、 &lt;var&gt;filepath1&lt;/var&gt; と &lt;var&gt;filepath2&lt;/var&gt; が存在し、同じ場所を指している必要があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="00cff69b5cb775729d63a2a0f414564d52dbdba6" translate="yes" xml:space="preserve">
          <source>Note that user classes &lt;em&gt;always&lt;/em&gt; have higher precedence than built-in Octave types. Thus, marking the polynomial class higher than the &lt;code&gt;&quot;double&quot;&lt;/code&gt; class is not actually necessary.</source>
          <target state="translated">ユーザークラス&lt;em&gt;は&lt;/em&gt;、組み込みのOctaveタイプより&lt;em&gt;常に&lt;/em&gt;優先されることに注意してください。したがって、 &lt;code&gt;&quot;double&quot;&lt;/code&gt; クラスよりも高い多項式クラスをマークすることは実際には必要ありません。</target>
        </trans-unit>
        <trans-unit id="f70900913cdce10686cc0a6bb647c4e627c01a2b" translate="yes" xml:space="preserve">
          <source>Note that version &lt;code&gt;&quot;1.1-test2&quot;&lt;/code&gt; will compare as greater than &lt;code&gt;&quot;1.1-test10&quot;&lt;/code&gt;. Also, since the numeric part is compared first, &lt;code&gt;&quot;a&quot;&lt;/code&gt; compares less than &lt;code&gt;&quot;1a&quot;&lt;/code&gt; because the second string starts with a numeric part even though &lt;code&gt;double (&quot;a&quot;)&lt;/code&gt; is greater than &lt;code&gt;double (&quot;1&quot;).&lt;/code&gt;</source>
          <target state="translated">バージョン &lt;code&gt;&quot;1.1-test2&quot;&lt;/code&gt; は &lt;code&gt;&quot;1.1-test10&quot;&lt;/code&gt; より大きいと比較されることに注意してください。また、数値部分が最初に比較されるため、2番目の文字列は、2 &lt;code&gt;double (&quot;a&quot;)&lt;/code&gt; が &lt;code&gt;double (&quot;1&quot;).&lt;/code&gt; よりも大きいにもかかわらず、数値部分で始まるため、 &lt;code&gt;&quot;a&quot;&lt;/code&gt; は &lt;code&gt;&quot;1a&quot;&lt;/code&gt; 未満と比較されます。</target>
        </trans-unit>
        <trans-unit id="60d307e3e43b200c7f2daf6d1061150f7b9efa4b" translate="yes" xml:space="preserve">
          <source>Note that when Octave is started from an executable script, the built-in function &lt;code&gt;argv&lt;/code&gt; returns a cell array containing the command line arguments passed to the executable Octave script, not the arguments passed to the Octave interpreter on the &amp;lsquo;</source>
          <target state="translated">Octaveが実行可能スクリプトから起動された場合、組み込み関数 &lt;code&gt;argv&lt;/code&gt; は、実行可能Octaveスクリプトに渡されたコマンドライン引数を含むセル配列を返します。Octaveインタープリターに渡された引数ではありません。</target>
        </trans-unit>
        <trans-unit id="da349bc1f431a8408fc04e38c184a1ab5e996cb9" translate="yes" xml:space="preserve">
          <source>Note that when Octave prints the value of a structure that contains other structures, only a few levels are displayed. For example:</source>
          <target state="translated">Octaveが他の構造体を含む構造体の値を表示するとき,いくつかのレベルだけが表示されることに注意してください。例えば,以下のようになります。</target>
        </trans-unit>
        <trans-unit id="dbfad04950632b2e7aae6e021435f9f0802af74d" translate="yes" xml:space="preserve">
          <source>Note the type &lt;code&gt;mwSize&lt;/code&gt; used above, and also &lt;code&gt;mwIndex&lt;/code&gt;, are defined as the native precision of the indexing in Octave on the platform on which the mex-file is built. This allows both 32- and 64-bit platforms to support mex-files. &lt;code&gt;mwSize&lt;/code&gt; is used to define array dimensions and the maximum number or elements, while &lt;code&gt;mwIndex&lt;/code&gt; is used to define indexing into arrays.</source>
          <target state="translated">タイプ注 &lt;code&gt;mwSize&lt;/code&gt; は上記で使用し、また &lt;code&gt;mwIndex&lt;/code&gt; 、MEXファイルが構築されているプラットフォーム上にオクターブにおけるインデキシングのネイティブ精度として定義されます。これにより、32ビットと64ビットの両方のプラットフォームでmexファイルをサポートできます。 &lt;code&gt;mwSize&lt;/code&gt; は配列の次元と最大数または要素を定義するために使用され、 &lt;code&gt;mwIndex&lt;/code&gt; は配列へのインデックスを定義するために使用されます。</target>
        </trans-unit>
        <trans-unit id="2a66bf129d08c7249a582bcb8effea7424a8e789" translate="yes" xml:space="preserve">
          <source>Note the usage of colon indexing to flatten an intermediate result into a column vector. This is a common vectorization trick.</source>
          <target state="translated">中間結果を列ベクトルに平坦化するためにコロンインデックスを使用していることに注意してください。これは一般的なベクトル化のトリックです。</target>
        </trans-unit>
        <trans-unit id="3f8f8477f072a9b44e5db8a7585629240b385140" translate="yes" xml:space="preserve">
          <source>Note the usage of permute to match the dimensions of the &lt;code&gt;[0.8, 0.9, 1.2]&lt;/code&gt; vector with &lt;code&gt;img&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;[0.8, 0.9, 1.2]&lt;/code&gt; 0.8、0.9、1.2 ]ベクトルの次元を &lt;code&gt;img&lt;/code&gt; と一致させるためのpermuteの使用法に注意してください。</target>
        </trans-unit>
        <trans-unit id="2c53952e09a8c01b420716fc60878b19d16507d2" translate="yes" xml:space="preserve">
          <source>Note the use of the &amp;lsquo;dot&amp;rsquo; forms of the operators. This is not necessary for the &lt;code&gt;quad&lt;/code&gt; integrator, but is required by the other integrators. In any case, it makes it much easier to generate a set of points for plotting because it is possible to call the function with a vector argument to produce a vector result.</source>
          <target state="translated">演算子の「ドット」形式の使用に注意してください。これは &lt;code&gt;quad&lt;/code&gt; 積分器には必要ありませんが、他の積分器には必要です。いずれの場合も、ベクトル引数を使用して関数を呼び出してベクトル結果を生成することができるため、プロット用のポイントのセットを生成することがはるかに簡単になります。</target>
        </trans-unit>
        <trans-unit id="900ee21b43648ac8a082db521a256ab742c54fc7" translate="yes" xml:space="preserve">
          <source>Note this is just a variation on convolution, with the parameters reversed and &lt;var&gt;b&lt;/var&gt; rotated 180 degrees.</source>
          <target state="translated">これは、たたみ込みのバリエーションであり、パラメーターを逆にし、 &lt;var&gt;b&lt;/var&gt; を 180度回転したものです。</target>
        </trans-unit>
        <trans-unit id="b06131c576ed8cc38fe51366a29f7953f4c6080a" translate="yes" xml:space="preserve">
          <source>Note, however, that both types of strings are represented by the &lt;code&gt;charNDArray&lt;/code&gt; type, and so when assigning to an &lt;code&gt;octave_value&lt;/code&gt;, the type of string should be specified. For example:</source>
          <target state="translated">ただし、文字列の両方のタイプはで表されること &lt;code&gt;charNDArray&lt;/code&gt; のタイプ、およびに割り当てる際に &lt;code&gt;octave_value&lt;/code&gt; 、文字列の種類が指定されなければなりません。例えば：</target>
        </trans-unit>
        <trans-unit id="74111d5dd6bf634ab7690e6ecf78b418038ea362" translate="yes" xml:space="preserve">
          <source>Note, that the above can also be achieved like this:</source>
          <target state="translated">なお、上記のようなことも可能です。</target>
        </trans-unit>
        <trans-unit id="7e1e64a5130efed8366e156a802caff24f68ff8e" translate="yes" xml:space="preserve">
          <source>Note: &lt;code&gt;fullfile&lt;/code&gt; does not perform any validation of the resulting full filename.</source>
          <target state="translated">注： &lt;code&gt;fullfile&lt;/code&gt; は、結果の完全なファイル名の検証を行いません。</target>
        </trans-unit>
        <trans-unit id="3d773bae94b5210702730ed1d6d0933760dff579" translate="yes" xml:space="preserve">
          <source>Note: &lt;code&gt;quadcc&lt;/code&gt; is a general purpose quadrature algorithm and, as such, may be less efficient for a smooth or otherwise well-behaved integrand than other methods such as &lt;code&gt;quadgk&lt;/code&gt;.</source>
          <target state="translated">注： &lt;code&gt;quadcc&lt;/code&gt; は汎用の直交アルゴリズムであり、そのため、 &lt;code&gt;quadgk&lt;/code&gt; などの他の方法よりも、滑らかな、または他の方法で正常に動作する被積分関数に対して効率が悪い場合があります。</target>
        </trans-unit>
        <trans-unit id="633e6bc793899748b65b9a8ecf4a38d6c8aef60e" translate="yes" xml:space="preserve">
          <source>Note: &lt;code&gt;quadv&lt;/code&gt; is written in Octave&amp;rsquo;s scripting language and can be used recursively in &lt;code&gt;dblquad&lt;/code&gt; and &lt;code&gt;triplequad&lt;/code&gt;, unlike the &lt;code&gt;quad&lt;/code&gt; function.</source>
          <target state="translated">注： &lt;code&gt;quadv&lt;/code&gt; はOctaveのスクリプト言語で &lt;code&gt;dblquad&lt;/code&gt; おり、関数 &lt;code&gt;quad&lt;/code&gt; とは異なり、dblquadおよび &lt;code&gt;triplequad&lt;/code&gt; で再帰的に使用できます。</target>
        </trans-unit>
        <trans-unit id="219d2ca3f50554ac106f43e2050c600373cf0885" translate="yes" xml:space="preserve">
          <source>Note: &lt;code&gt;qz&lt;/code&gt; performs permutation balancing, but not scaling (see &lt;a href=&quot;basic-matrix-functions#XREFbalance&quot;&gt;balance&lt;/a&gt;), which may be lead to less accurate results than &lt;code&gt;eig&lt;/code&gt;. The order of output arguments was selected for compatibility with &lt;small&gt;MATLAB&lt;/small&gt;.</source>
          <target state="translated">注： &lt;code&gt;qz&lt;/code&gt; は順列バランシングを実行しますが、スケーリング（&lt;a href=&quot;basic-matrix-functions#XREFbalance&quot;&gt;バランスを&lt;/a&gt;参照）は実行しません。これにより、 &lt;code&gt;eig&lt;/code&gt; よりも正確な結果が得られない可能性があります。出力引数の順序は、&lt;small&gt;MATLAB&lt;/small&gt;との互換性のために選択されました。</target>
        </trans-unit>
        <trans-unit id="8df0482c9d861b48697790ef03c698d2c7fc8a98" translate="yes" xml:space="preserve">
          <source>Note: &lt;var&gt;n&lt;/var&gt; must be a scalar greater than or equal to 3. If you supply &lt;var&gt;n&lt;/var&gt; less than 3, magic returns either a nonmagic square, or else the degenerate magic squares 1 and [].</source>
          <target state="translated">注： &lt;var&gt;n&lt;/var&gt; は3以上のスカラーでなければなりません。3未満の &lt;var&gt;n&lt;/var&gt; を指定した場合、magicは非魔法の正方形、または退化した魔法の正方形1および[]を返します。</target>
        </trans-unit>
        <trans-unit id="05d2965c014c837d087db29411a93d5d540ef640" translate="yes" xml:space="preserve">
          <source>Note: For compatibility with &lt;small&gt;MATLAB&lt;/small&gt; a line is drawn through all data points. However, most scientific errorbar plots are a scatter plot of points with errorbars. To accomplish this, add a marker style to the &lt;var&gt;fmt&lt;/var&gt; argument such as &lt;code&gt;&quot;.&quot;&lt;/code&gt;. Alternatively, remove the line by modifying the returned graphic handle with &lt;code&gt;set (h, &quot;linestyle&quot;, &quot;none&quot;)&lt;/code&gt;.</source>
          <target state="translated">注：&lt;small&gt;MATLABとの&lt;/small&gt;互換性のために、すべてのデータポイントを通る線が描画されます。ただし、ほとんどの科学的なエラーバープロットは、エラーバーのある点の散布図です。これを行うには、 &lt;code&gt;&quot;.&quot;&lt;/code&gt; などのマーカースタイルを &lt;var&gt;fmt&lt;/var&gt; 引数に追加します。。または、返されたグラフィックハンドルを &lt;code&gt;set (h, &quot;linestyle&quot;, &quot;none&quot;)&lt;/code&gt; 変更して行を削除します。</target>
        </trans-unit>
        <trans-unit id="eb1c29a862d495d925177df64fe02deb501ee0e2" translate="yes" xml:space="preserve">
          <source>Note: For compatibility, this function uses the &lt;small&gt;MATLAB&lt;/small&gt; definition of the exponential integral. Most other sources refer to this particular value as &lt;em&gt;E_1 (x)&lt;/em&gt;, and the exponential integral as</source>
          <target state="translated">注：互換性のために、この関数は指数積分の&lt;small&gt;MATLAB&lt;/small&gt;定義を使用します。他のほとんどのソースでは、この特定の値を&lt;em&gt;E_1（x）&lt;/em&gt;と呼び、指数積分を次のように呼びます。</target>
        </trans-unit>
        <trans-unit id="a2b5f78e539df59edf23d3100fc43834b618f6e8" translate="yes" xml:space="preserve">
          <source>Note: If &lt;code&gt;sum (&lt;var&gt;x&lt;/var&gt;) &amp;le; 1&lt;/code&gt; then the elements of &lt;var&gt;x&lt;/var&gt; are interpreted as percentages directly and are not normalized by &lt;code&gt;sum
(x)&lt;/code&gt;. Furthermore, if the sum is less than 1 then there will be a missing slice in the pie plot to represent the missing, unspecified percentage.</source>
          <target state="translated">注： &lt;code&gt;sum (&lt;var&gt;x&lt;/var&gt;) &amp;le; 1&lt;/code&gt; 場合、 &lt;var&gt;x&lt;/var&gt; の要素は直接パーセンテージとして解釈され、 &lt;code&gt;sum (x)&lt;/code&gt; によって正規化されません。さらに、合計が1未満の場合、円グラフに欠けているスライスがあり、欠けている不​​特定のパーセンテージを表します。</target>
        </trans-unit>
        <trans-unit id="31cd487a7eb19e0f451296d6e08323b642967e38" translate="yes" xml:space="preserve">
          <source>Note: If there are no tick marks for an axes then there can be no labels.</source>
          <target state="translated">注:軸に目盛りがない場合、ラベルは存在しないことがあります。</target>
        </trans-unit>
        <trans-unit id="d80e5f2eb25d596e2bb4ef15b56b1a068082f5d8" translate="yes" xml:space="preserve">
          <source>Note: If you need a specific number of primes you can use the fact that the distance from one prime to the next is, on average, proportional to the logarithm of the prime. Integrating, one finds that there are about &lt;em&gt;k&lt;/em&gt; primes less than k*log (5*k).</source>
          <target state="translated">注：特定の数の素数が必要な場合は、ある素数から次の素数までの距離が平均して素数の対数に比例するという事実を利用できます。統合すると、k * log（5 * k）未満の約&lt;em&gt;k個の&lt;/em&gt;素数があることがわかります。</target>
        </trans-unit>
        <trans-unit id="6786826d7e4d01f9c656010935df125ded702461" translate="yes" xml:space="preserve">
          <source>Note: If you need to find the minimum of a single variable function it is probably better to use &lt;code&gt;fminbnd&lt;/code&gt;.</source>
          <target state="translated">注：単一の変数関数の最小値を見つける必要がある場合は、おそらく &lt;code&gt;fminbnd&lt;/code&gt; を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="ea0155c906e3d8ba6845e4b1dc195d61fb21f301" translate="yes" xml:space="preserve">
          <source>Note: If you only have a single nonlinear equation of one variable, using &lt;code&gt;fzero&lt;/code&gt; is usually a much better idea.</source>
          <target state="translated">注：1つの変数の非線形方程式が1つしかない場合は、通常、 &lt;code&gt;fzero&lt;/code&gt; を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="0ee355e067ed0692c6aee777e9e4b58b1489fba0" translate="yes" xml:space="preserve">
          <source>Note: The Givens matrix represents a counterclockwise rotation of a 2-D plane and can be used to introduce zeros into a matrix prior to complete factorization.</source>
          <target state="translated">注意:Givens 行列は,2次元平面の反時計回りの回転を表し,完全な因数分解の前に行列にゼロを導入するために利用できます.</target>
        </trans-unit>
        <trans-unit id="c5790e6a67a79fe70215760d6b42e26c2bad0f71" translate="yes" xml:space="preserve">
          <source>Note: The exact appearance of the surface can be controlled with the &lt;code&gt;shading&lt;/code&gt; command or by using &lt;code&gt;set&lt;/code&gt; to control surface object properties.</source>
          <target state="translated">注：サーフェスの正確な外観は、 &lt;code&gt;shading&lt;/code&gt; コマンドを使用するか、 &lt;code&gt;set&lt;/code&gt; を使用してサーフェスオブジェクトのプロパティを制御することで制御できます。</target>
        </trans-unit>
        <trans-unit id="182699fe184551d6fcd557c94dcbea9f12e3613f" translate="yes" xml:space="preserve">
          <source>Note: This variable is only used when Octave is initializing itself. Modifying it during a running session of Octave will have no effect.</source>
          <target state="translated">注意:この変数は,Octaveがそれ自身を初期化しているときにのみ使用されます。Octaveの実行中のセッション中にこれを変更しても何の影響もありません。</target>
        </trans-unit>
        <trans-unit id="c57d231c618e8a007e9932c95738534f7c8d0c99" translate="yes" xml:space="preserve">
          <source>Note: To find the current axes without creating a new axes object if it does not exist, query the &lt;code&gt;&quot;CurrentAxes&quot;&lt;/code&gt; property of a figure.</source>
          <target state="translated">メモ：存在しない場合に新しいAxesオブジェクトを作成せずに現在のAxesを見つけるには、Figureの &lt;code&gt;&quot;CurrentAxes&quot;&lt;/code&gt; プロパティをクエリします。</target>
        </trans-unit>
        <trans-unit id="21c2ef88933ddd4b4501a0924d316c6bc3ddd4d8" translate="yes" xml:space="preserve">
          <source>Note: To find the current figure without creating a new one if it does not exist, query the &lt;code&gt;&quot;CurrentFigure&quot;&lt;/code&gt; property of the root graphics object.</source>
          <target state="translated">注：存在しない場合に新しいFigureを作成せずに現在のFigureを見つけるには、ルートグラフィックスオブジェクトの &lt;code&gt;&quot;CurrentFigure&quot;&lt;/code&gt; プロパティをクエリします。</target>
        </trans-unit>
        <trans-unit id="3c63c680c4b0e6ef8be7d1a2ce98bee5113c756f" translate="yes" xml:space="preserve">
          <source>Note: Using &lt;code&gt;repelem&lt;/code&gt; with a vector &lt;var&gt;x&lt;/var&gt; and a vector for &lt;var&gt;R_j&lt;/var&gt; is equivalent to Run Length Decoding.</source>
          <target state="translated">注：使用 &lt;code&gt;repelem&lt;/code&gt; をベクトルで &lt;var&gt;x&lt;/var&gt; 用とベクトル &lt;var&gt;R_j&lt;/var&gt; は、ランレングス復号化と等価です。</target>
        </trans-unit>
        <trans-unit id="17cf046b6855b90f72c006824e96e3cc58878235" translate="yes" xml:space="preserve">
          <source>Note: When loading a package, &lt;code&gt;pkg&lt;/code&gt; will automatically try to load any unloaded dependencies as well, unless the</source>
          <target state="translated">注：パッケージをロードするとき、 &lt;code&gt;pkg&lt;/code&gt; は、アンロードされた依存関係も自動的にロードしようとします。</target>
        </trans-unit>
        <trans-unit id="6eeb826e3cfa5ea4df58eaf35749fe08596fbe8c" translate="yes" xml:space="preserve">
          <source>Note: because &lt;code&gt;quad&lt;/code&gt; is written in Fortran it cannot be called recursively. This prevents its use in integrating over more than one variable by routines &lt;code&gt;dblquad&lt;/code&gt; and &lt;code&gt;triplequad&lt;/code&gt;.</source>
          <target state="translated">注： &lt;code&gt;quad&lt;/code&gt; はFortranで記述されているため、再帰的に呼び出すことはできません。これにより、ルーチン &lt;code&gt;dblquad&lt;/code&gt; および &lt;code&gt;triplequad&lt;/code&gt; による複数の変数の統合での使用が防止されます。</target>
        </trans-unit>
        <trans-unit id="a13a315cd5b49404d8655a654b30468771483dab" translate="yes" xml:space="preserve">
          <source>Note: only CSV files containing numeric data can be read.</source>
          <target state="translated">注:数値データを含むCSVファイルのみ読み込み可能です。</target>
        </trans-unit>
        <trans-unit id="ac09060b6ba1262e5b19423a76ad1c1170416774" translate="yes" xml:space="preserve">
          <source>Note: the following only applies to systems that have 64-bit pointers. Configuring Octave with</source>
          <target state="translated">注:以下は64ビットポインタを持つシステムにのみ適用されます。でOctaveを設定する</target>
        </trans-unit>
        <trans-unit id="30f8d2e38ed8c7f3b974a2540fdd14e163822c37" translate="yes" xml:space="preserve">
          <source>Notes for the C Programmer</source>
          <target state="translated">Cプログラマーのための注意事項</target>
        </trans-unit>
        <trans-unit id="9c3befe7e22c8667bc957541f49b0ee79970b588" translate="yes" xml:space="preserve">
          <source>Notes:</source>
          <target state="translated">Notes:</target>
        </trans-unit>
        <trans-unit id="e51443fffacab700dcc08997d3c849facc3f9f48" translate="yes" xml:space="preserve">
          <source>Notice how</source>
          <target state="translated">どのように注意してください。</target>
        </trans-unit>
        <trans-unit id="25c93ad777b8cfda842f8a619a74942eb77ed1f6" translate="yes" xml:space="preserve">
          <source>Notice that the first value appears to be 0 when it is actually 1. Because of the possibility for confusion you should be careful about enabling &lt;code&gt;fixed_point_format&lt;/code&gt;.</source>
          <target state="translated">実際の値が1の場合、最初の値は0に見えることに注意してください。混乱を招く可能性があるため、 &lt;code&gt;fixed_point_format&lt;/code&gt; を有効にする場合は注意が必要です。</target>
        </trans-unit>
        <trans-unit id="09f8c359cd07d3bb7f5499d88d1fc5ec4b244667" translate="yes" xml:space="preserve">
          <source>Notice that the size of the returned object in a given dimension is equal to the number of elements in the index expression for that dimension. In the code above, the first index component (&lt;code&gt;[1, 2]&lt;/code&gt;) was specified as a row vector, but its shape is unimportant. The important fact is that the component specified two values, and hence the result must have a size of two in the first dimension; and because the first dimension corresponds to rows, the overall result is a column vector.</source>
          <target state="translated">特定の次元で返されるオブジェクトのサイズは、その次元のインデックス式の要素数に等しいことに注意してください。上記のコードでは、最初のインデックスコンポーネント（ &lt;code&gt;[1, 2]&lt;/code&gt; ）は行ベクトルとして指定されていますが、その形状は重要ではありません。重要な事実は、コンポーネントが2つの値を指定しているため、結果は最初の次元で2のサイズでなければならないということです。最初の次元は行に対応するため、全体的な結果は列ベクトルになります。</target>
        </trans-unit>
        <trans-unit id="272c7440ddc9e59e92363c27905abc8872737316" translate="yes" xml:space="preserve">
          <source>Notice that there is no special syntax for sharing &lt;var&gt;x&lt;/var&gt;. This can lead to problems with accidental variable sharing between a parent function and its child. While normally variables are inherited, child function parameters and return values are local to the child function.</source>
          <target state="translated">&lt;var&gt;x&lt;/var&gt; を共有するための特別な構文はないことに注意してください。これにより、親関数とその子の間で変数が誤って共有されるという問題が発生する可能性があります。通常、変数は継承されますが、子関数のパラメーターと戻り値は子関数に対してローカルです。</target>
        </trans-unit>
        <trans-unit id="e4033a819b7bc6bd331e68eb166aeb0fd8b57f3e" translate="yes" xml:space="preserve">
          <source>Notice the blank lines, except for the &amp;lsquo;</source>
          <target state="translated">空行に注意してください。</target>
        </trans-unit>
        <trans-unit id="2af5314679ea13bd0c9e99d933a68373c4377661" translate="yes" xml:space="preserve">
          <source>Now consider the function &lt;code&gt;foobar&lt;/code&gt; that uses variables &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt;. &lt;code&gt;foobar&lt;/code&gt; calls a nested function &lt;code&gt;foo&lt;/code&gt; which takes &lt;var&gt;x&lt;/var&gt; as a parameter and returns &lt;var&gt;y&lt;/var&gt;. &lt;code&gt;foo&lt;/code&gt; then calls &lt;code&gt;bat&lt;/code&gt; which does some computation.</source>
          <target state="translated">ここで、変数 &lt;var&gt;x&lt;/var&gt; および &lt;var&gt;y&lt;/var&gt; を使用する関数 &lt;code&gt;foobar&lt;/code&gt; について考えます。 &lt;code&gt;foobar&lt;/code&gt; は、ネストされた関数 &lt;code&gt;foo&lt;/code&gt; を呼び出します。これは、パラメーターとして &lt;var&gt;x&lt;/var&gt; を取り、 &lt;var&gt;y&lt;/var&gt; を返します。次に &lt;code&gt;foo&lt;/code&gt; は、計算を行う &lt;code&gt;bat&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="9aa141c6944770e4bc1df4850ca4bc42ba53b767" translate="yes" xml:space="preserve">
          <source>Now let&amp;rsquo;s take a look at &lt;code&gt;bar&lt;/code&gt;. For this, we start a fresh profiling session (&lt;code&gt;profile on&lt;/code&gt; does this; the old data is removed before the profiler is restarted):</source>
          <target state="translated">では、 &lt;code&gt;bar&lt;/code&gt; 見てみましょう。このため、新しいプロファイリングセッションを開始し &lt;code&gt;profile on&lt;/code&gt; （プロファイリングはこれを行います。プロファイラーが再起動される前に古いデータが削除されます）。</target>
        </trans-unit>
        <trans-unit id="0c1f9352e1fa38faa39862688bd277f18b10d9c1" translate="yes" xml:space="preserve">
          <source>Null characters are replaced by spaces. All other character data are treated as non-white space.</source>
          <target state="translated">ヌル文字はスペースに置き換えられます。それ以外の文字データはすべて非ホワイトスペースとして扱われます。</target>
        </trans-unit>
        <trans-unit id="1379b906a7147ba93bdfbaa15c5aef0a7b89d5b4" translate="yes" xml:space="preserve">
          <source>NumChannels</source>
          <target state="translated">NumChannels</target>
        </trans-unit>
        <trans-unit id="4c4ae8549bdd6b57fda67f540fccb59bf2da0821" translate="yes" xml:space="preserve">
          <source>Number of audio channels.</source>
          <target state="translated">オーディオチャンネル数。</target>
        </trans-unit>
        <trans-unit id="f7b569270fa7cf545e3daa2078b79a4d8a87e109" translate="yes" xml:space="preserve">
          <source>Number of bits per channel per pixel.</source>
          <target state="translated">1ピクセルあたりのチャネルあたりのビット数。</target>
        </trans-unit>
        <trans-unit id="a482d7ae0209a142a8b59bb4bef1aea4823f47d4" translate="yes" xml:space="preserve">
          <source>Number of bits per sample.</source>
          <target state="translated">サンプルあたりのビット数。</target>
        </trans-unit>
        <trans-unit id="cb3a42704d48c93225d003f13ee5f75af388c6a7" translate="yes" xml:space="preserve">
          <source>Number of bits per sample. Valid values are 8, 16, 24, and 32. Default is 16.</source>
          <target state="translated">サンプルあたりのビット数。有効な値は8、16、24、32です。デフォルトは16です。</target>
        </trans-unit>
        <trans-unit id="53c2869b9ff6e04239a31feefc0384d551c4f389" translate="yes" xml:space="preserve">
          <source>Number of block input operations.</source>
          <target state="translated">ブロック入力操作の数。</target>
        </trans-unit>
        <trans-unit id="8e14a8556077dced385703df8d7e402c6b98c875" translate="yes" xml:space="preserve">
          <source>Number of block output operations.</source>
          <target state="translated">ブロック出力の操作数。</target>
        </trans-unit>
        <trans-unit id="dc9766a0ce4c6c2bd84b9b0c553fb9ed010e6a28" translate="yes" xml:space="preserve">
          <source>Number of blocks allocated for file.</source>
          <target state="translated">ファイルに割り当てられたブロック数。</target>
        </trans-unit>
        <trans-unit id="078e75a951cd6a15779c766e0c964309a290f9c2" translate="yes" xml:space="preserve">
          <source>Number of bytes of the image on disk</source>
          <target state="translated">ディスク上のイメージのバイト数</target>
        </trans-unit>
        <trans-unit id="447236baca27a6e02336f66a79c4752995ba2f55" translate="yes" xml:space="preserve">
          <source>Number of function evaluations.</source>
          <target state="translated">機能の評価数。</target>
        </trans-unit>
        <trans-unit id="955f5570b7c98b384b7e2b08add2530406bedd76" translate="yes" xml:space="preserve">
          <source>Number of involuntary context switches.</source>
          <target state="translated">不随意のコンテキストスイッチの数。</target>
        </trans-unit>
        <trans-unit id="6a3a1dbd595a33e9726bdba62317897e3b5cf655" translate="yes" xml:space="preserve">
          <source>Number of iterations through loop.</source>
          <target state="translated">ループを通過する反復回数。</target>
        </trans-unit>
        <trans-unit id="284f6755358deb1f0a1e9db8b3e5159e56acbc06" translate="yes" xml:space="preserve">
          <source>Number of iterations to loop an animation.</source>
          <target state="translated">アニメーションをループさせるための反復回数。</target>
        </trans-unit>
        <trans-unit id="f384a316605f75a383767b2835085db7b74e838f" translate="yes" xml:space="preserve">
          <source>Number of links.</source>
          <target state="translated">リンクの数。</target>
        </trans-unit>
        <trans-unit id="fc87ec0ac8e37c7fc068e510b997ef1ee6856686" translate="yes" xml:space="preserve">
          <source>Number of major page faults.</source>
          <target state="translated">主要なページの不具合の数。</target>
        </trans-unit>
        <trans-unit id="a2990ab798b25b8069e15bd97eb8de8808148ffe" translate="yes" xml:space="preserve">
          <source>Number of messages received.</source>
          <target state="translated">受信したメッセージの数。</target>
        </trans-unit>
        <trans-unit id="0b8dff6db1a8014de826d9c6e455c2945141a357" translate="yes" xml:space="preserve">
          <source>Number of messages sent.</source>
          <target state="translated">送信されたメッセージの数</target>
        </trans-unit>
        <trans-unit id="4e8d18d406763d2331966314d41c713407869622" translate="yes" xml:space="preserve">
          <source>Number of minor page faults.</source>
          <target state="translated">細かいページフォルトの数。</target>
        </trans-unit>
        <trans-unit id="de70dc41e6c9ca2ab53f31170baf5404b7e12596" translate="yes" xml:space="preserve">
          <source>Number of polynomial pieces or intervals, &lt;code&gt;&lt;var&gt;n&lt;/var&gt; = length (&lt;var&gt;x&lt;/var&gt;) - 1&lt;/code&gt;.</source>
          <target state="translated">多項式の断片または区間の数、 &lt;code&gt;&lt;var&gt;n&lt;/var&gt; = length (&lt;var&gt;x&lt;/var&gt;) - 1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0abbed6ceaed6b0ef7d1242880a62214ba404218" translate="yes" xml:space="preserve">
          <source>Number of polynomials defined for each interval.</source>
          <target state="translated">各区間について定義された多項式の数。</target>
        </trans-unit>
        <trans-unit id="2b0eb7fb7ed03e1edc1cd1894543c4e602a0679d" translate="yes" xml:space="preserve">
          <source>Number of samples in the file.</source>
          <target state="translated">ファイル内のサンプル数。</target>
        </trans-unit>
        <trans-unit id="23802b12eba5bf52222daf7618d9080d6672d6f8" translate="yes" xml:space="preserve">
          <source>Number of signals received.</source>
          <target state="translated">受信した信号の数。</target>
        </trans-unit>
        <trans-unit id="d48162b102e51945da510d0ce624a12eeb33e2ab" translate="yes" xml:space="preserve">
          <source>Number of successful iterations.</source>
          <target state="translated">成功した反復の数。</target>
        </trans-unit>
        <trans-unit id="b3fd116f99cfd774f98fc182623d68320caa82ff" translate="yes" xml:space="preserve">
          <source>Number of swaps.</source>
          <target state="translated">スワップ数。</target>
        </trans-unit>
        <trans-unit id="670b1eece5adae94311dde1613b7ab5683969df0" translate="yes" xml:space="preserve">
          <source>Number of voluntary context switches.</source>
          <target state="translated">任意のコンテキストスイッチの数。</target>
        </trans-unit>
        <trans-unit id="61ab31b0fd02c04fd15d995d651f5234adc7acf8" translate="yes" xml:space="preserve">
          <source>Numbered Lists</source>
          <target state="translated">番号付きリスト</target>
        </trans-unit>
        <trans-unit id="bbd4eb640e547e16f715615ea7d7559693029459" translate="yes" xml:space="preserve">
          <source>Numbered list item 1</source>
          <target state="translated">番号付きリスト項目1</target>
        </trans-unit>
        <trans-unit id="2fe85f5396c04c7ba92db5fa2b35ef0a8da666c0" translate="yes" xml:space="preserve">
          <source>Numbered list item 2</source>
          <target state="translated">番号付きリスト項目2</target>
        </trans-unit>
        <trans-unit id="ecbf98f12718d91a9917c6400607e0aba69196f6" translate="yes" xml:space="preserve">
          <source>Numeric Data Types</source>
          <target state="translated">数値データ型</target>
        </trans-unit>
        <trans-unit id="85e8584849f0bcf8769cfbc1c5474bb2addc0bc3" translate="yes" xml:space="preserve">
          <source>Numeric Input Conversions</source>
          <target state="translated">数値入力変換</target>
        </trans-unit>
        <trans-unit id="836f61f911dcbc7f53329897414e5c540abd1122" translate="yes" xml:space="preserve">
          <source>Numeric Objects</source>
          <target state="translated">数値オブジェクト</target>
        </trans-unit>
        <trans-unit id="66b9b1ae70227b5262a4a4ec61a65282efedc23f" translate="yes" xml:space="preserve">
          <source>Numeric arrays are converted to character strings.</source>
          <target state="translated">数値配列は文字列に変換されます。</target>
        </trans-unit>
        <trans-unit id="c3f659ce49f8c005092c6eadb8e7e19f7ef2635f" translate="yes" xml:space="preserve">
          <source>Numeric day of month (padded with zeros)</source>
          <target state="translated">数字の月の曜日(ゼロでパディングされている</target>
        </trans-unit>
        <trans-unit id="d2dba491fc6347c68d3f0dc3869f89865ce33d6b" translate="yes" xml:space="preserve">
          <source>Numeric modifiers (a nonstandard extension):</source>
          <target state="translated">数値修飾子(非標準の拡張子)。</target>
        </trans-unit>
        <trans-unit id="e148e5432ced9c76654ac72315e8a9c8dd444e57" translate="yes" xml:space="preserve">
          <source>Numeric month number (padded with zeros)</source>
          <target state="translated">数字の月数(ゼロでパディングされたもの</target>
        </trans-unit>
        <trans-unit id="716e51118f484adc22ce1016cace91b2b65ed1f2" translate="yes" xml:space="preserve">
          <source>Numeric value comprising either a floating point or integer value.</source>
          <target state="translated">浮動小数点または整数値からなる数値。</target>
        </trans-unit>
        <trans-unit id="65dc788df910c4f9bf0271a363091ed2054e6151" translate="yes" xml:space="preserve">
          <source>Numerical Integration</source>
          <target state="translated">数値積分</target>
        </trans-unit>
        <trans-unit id="0645dc6a0f3f3689ac482bfc0b68ed14271f502a" translate="yes" xml:space="preserve">
          <source>Numerical Recipes in C</source>
          <target state="translated">C言語での数値レシピ</target>
        </trans-unit>
        <trans-unit id="6ff8d55719d7c371657467541985ddd3261ac9e4" translate="yes" xml:space="preserve">
          <source>Numerical Recipes in Fortran 77</source>
          <target state="translated">Fortran 77の数値レシピ</target>
        </trans-unit>
        <trans-unit id="797518de90d766fbbab787b7d0bfbd1d049cb551" translate="yes" xml:space="preserve">
          <source>Numerical Solution of Initial-Value Problems in Differential-Algebraic Equations</source>
          <target state="translated">微分代数方程式の初期値問題の数値解法</target>
        </trans-unit>
        <trans-unit id="1cf4e21ff3ff00de65062cbb0047cfcf34b6123c" translate="yes" xml:space="preserve">
          <source>Numerical instability.</source>
          <target state="translated">数値的に不安定。</target>
        </trans-unit>
        <trans-unit id="3b7bae0d49e673b6d12503bd57c600bf24309a90" translate="yes" xml:space="preserve">
          <source>Numerical integration based on Gaussian quadrature.</source>
          <target state="translated">ガウスの二乗法に基づく数値積分。</target>
        </trans-unit>
        <trans-unit id="2e24000809e4a641506b8964e99b744f8057a822" translate="yes" xml:space="preserve">
          <source>Numerical integration of data using the trapezoidal method.</source>
          <target state="translated">台形法を用いたデータの数値積分。</target>
        </trans-unit>
        <trans-unit id="be3286a435d4d7e194a40be72a97365cb22b488d" translate="yes" xml:space="preserve">
          <source>Numerical integration using adaptive Clenshaw-Curtis rules.</source>
          <target state="translated">適応的クレンショー・カーティス則を用いた数値積分</target>
        </trans-unit>
        <trans-unit id="355d4128a9eff139189d8c6de3872a16569ce28b" translate="yes" xml:space="preserve">
          <source>Numerical integration using an adaptive Gauss-Konrod rule.</source>
          <target state="translated">適応的ガウス・コンロッド則を用いた数値積分.</target>
        </trans-unit>
        <trans-unit id="c36d43591de916b7b4194e23997c370674732e82" translate="yes" xml:space="preserve">
          <source>Numerical integration using an adaptive Lobatto rule.</source>
          <target state="translated">適応的なLobattoルールを用いた数値積分。</target>
        </trans-unit>
        <trans-unit id="6a1d6f38701fc04115ea88092e070da4c71aed0c" translate="yes" xml:space="preserve">
          <source>Numerical integration using an adaptive vectorized Simpson&amp;rsquo;s rule.</source>
          <target state="translated">適応ベクトル化されたシンプソンの法則を使用した数値積分。</target>
        </trans-unit>
        <trans-unit id="983bc7c897d3606bb7b6104379512714a517c8cb" translate="yes" xml:space="preserve">
          <source>Numerically evaluate the double integral of &lt;var&gt;f&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;f&lt;/var&gt; の二重積分を数値的に評価します。</target>
        </trans-unit>
        <trans-unit id="565d7f21a744f01f09842093e232360d87277e63" translate="yes" xml:space="preserve">
          <source>Numerically evaluate the integral of &lt;var&gt;f&lt;/var&gt; from &lt;var&gt;a&lt;/var&gt; to &lt;var&gt;b&lt;/var&gt; using Fortran routines from &lt;small&gt;QUADPACK&lt;/small&gt;.</source>
          <target state="translated">&lt;small&gt;QUADPACKの&lt;/small&gt; Fortranルーチンを使用し &lt;var&gt;a&lt;/var&gt; 、 &lt;var&gt;b&lt;/var&gt; からbへの &lt;var&gt;f&lt;/var&gt; の積分を数値的に評価します。&lt;small&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="a37d7640712c9837c6e885ec522cd047a2bfbe5a" translate="yes" xml:space="preserve">
          <source>Numerically evaluate the integral of &lt;var&gt;f&lt;/var&gt; from &lt;var&gt;a&lt;/var&gt; to &lt;var&gt;b&lt;/var&gt; using adaptive Gauss-Konrod quadrature.</source>
          <target state="translated">適応Gauss-Konrod求積法を使用し &lt;var&gt;a&lt;/var&gt; 、 &lt;var&gt;b&lt;/var&gt; からbへの &lt;var&gt;f&lt;/var&gt; の積分を数値的に評価します。</target>
        </trans-unit>
        <trans-unit id="e18be83852bbf01aeb9c3f0f062cd129a267c551" translate="yes" xml:space="preserve">
          <source>Numerically evaluate the integral of &lt;var&gt;f&lt;/var&gt; from &lt;var&gt;a&lt;/var&gt; to &lt;var&gt;b&lt;/var&gt; using adaptive Gauss-Kronrod quadrature.</source>
          <target state="translated">適応ガウス-クロンロッド直交法を使用し &lt;var&gt;a&lt;/var&gt; 、 &lt;var&gt;b&lt;/var&gt; からbまでの &lt;var&gt;f&lt;/var&gt; の積分を数値的に評価します。</target>
        </trans-unit>
        <trans-unit id="fef00ecf019f6651a4b6db1365f42a8804074634" translate="yes" xml:space="preserve">
          <source>Numerically evaluate the integral of &lt;var&gt;f&lt;/var&gt; from &lt;var&gt;a&lt;/var&gt; to &lt;var&gt;b&lt;/var&gt; using adaptive quadrature.</source>
          <target state="translated">適応求積法を使用し &lt;var&gt;a&lt;/var&gt; 、 &lt;var&gt;b&lt;/var&gt; からbへの &lt;var&gt;f&lt;/var&gt; の積分を数値的に評価します。</target>
        </trans-unit>
        <trans-unit id="2966036cb500e8f432e8af9de9672919a7008ab5" translate="yes" xml:space="preserve">
          <source>Numerically evaluate the integral of &lt;var&gt;f&lt;/var&gt; from &lt;var&gt;a&lt;/var&gt; to &lt;var&gt;b&lt;/var&gt; using an adaptive Lobatto rule.</source>
          <target state="translated">数値の整数評価 &lt;var&gt;f&lt;/var&gt; からする &lt;var&gt;b&lt;/var&gt; の適応のLobatto規則を使用します。 &lt;var&gt;a&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="a0c56872e0c7486d660053b9e934553f12410258" translate="yes" xml:space="preserve">
          <source>Numerically evaluate the integral of &lt;var&gt;f&lt;/var&gt; from &lt;var&gt;a&lt;/var&gt; to &lt;var&gt;b&lt;/var&gt; using an adaptive Simpson&amp;rsquo;s rule.</source>
          <target state="translated">数値の整数に評価 &lt;var&gt;f&lt;/var&gt; からする &lt;var&gt;b&lt;/var&gt; の適応シンプソンのルールを使用して。 &lt;var&gt;a&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="4496d2d819a96173c1cea8fbcee7c39d420ce202" translate="yes" xml:space="preserve">
          <source>Numerically evaluate the integral of &lt;var&gt;f&lt;/var&gt; from &lt;var&gt;a&lt;/var&gt; to &lt;var&gt;b&lt;/var&gt; using doubly-adaptive Clenshaw-Curtis quadrature.</source>
          <target state="translated">二重適応Clenshaw-Curtis求積法を使用し &lt;var&gt;a&lt;/var&gt; 、 &lt;var&gt;b&lt;/var&gt; からbへの &lt;var&gt;f&lt;/var&gt; の積分を数値的に評価します。</target>
        </trans-unit>
        <trans-unit id="239fb86db852d54ddaa5a6a18a6e43d2d09202a7" translate="yes" xml:space="preserve">
          <source>Numerically evaluate the integral of points &lt;var&gt;y&lt;/var&gt; using the trapezoidal method.</source>
          <target state="translated">台形法を使用して、点 &lt;var&gt;y&lt;/var&gt; の積分を数値的に評価します。</target>
        </trans-unit>
        <trans-unit id="230c0a6b5025209de3c0b6534ce845b42eb158b9" translate="yes" xml:space="preserve">
          <source>Numerically evaluate the three-dimensional integral of &lt;var&gt;f&lt;/var&gt; using adaptive quadrature over the three-dimensional domain defined by &lt;var&gt;xa&lt;/var&gt;, &lt;var&gt;xb&lt;/var&gt;, &lt;var&gt;ya&lt;/var&gt;, &lt;var&gt;yb&lt;/var&gt;, &lt;var&gt;za&lt;/var&gt;, &lt;var&gt;zb&lt;/var&gt; (scalars may be finite or infinite). Additionally, &lt;var&gt;ya&lt;/var&gt; and &lt;var&gt;yb&lt;/var&gt; may be scalar functions of &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;za&lt;/var&gt;, and &lt;var&gt;zb&lt;/var&gt; maybe be scalar functions of &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt;, allowing for integration over non-rectangular domains.</source>
          <target state="translated">&lt;var&gt;xa&lt;/var&gt; 、 &lt;var&gt;xb&lt;/var&gt; 、 &lt;var&gt;ya&lt;/var&gt; 、 &lt;var&gt;yb&lt;/var&gt; 、 &lt;var&gt;za&lt;/var&gt; 、 &lt;var&gt;zb&lt;/var&gt; （スカラーは有限または無限の場合があります）で定義された3次元領域 &lt;var&gt;f&lt;/var&gt; 適応求積法を使用して、fの 3次元積分を数値的に評価します。さらに、 &lt;var&gt;ya&lt;/var&gt; と &lt;var&gt;yb&lt;/var&gt; は &lt;var&gt;x&lt;/var&gt; と &lt;var&gt;za&lt;/var&gt; のスカラー関数であり、 &lt;var&gt;zb&lt;/var&gt; は &lt;var&gt;x&lt;/var&gt; と &lt;var&gt;y&lt;/var&gt; のスカラー関数であり、長方形以外のドメインでの統合を可能にします。</target>
        </trans-unit>
        <trans-unit id="1ec898331b91a42bfdacca2274bb1c89984aff8f" translate="yes" xml:space="preserve">
          <source>Numerically evaluate the triple integral of &lt;var&gt;f&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;f&lt;/var&gt; の三重積分を数値的に評価します。</target>
        </trans-unit>
        <trans-unit id="17177ffb23d8ad7b0ef5a9173f105f15dba7c150" translate="yes" xml:space="preserve">
          <source>Numerically evaluate the two-dimensional integral of &lt;var&gt;f&lt;/var&gt; using adaptive quadrature over the two-dimensional domain defined by &lt;var&gt;xa&lt;/var&gt;, &lt;var&gt;xb&lt;/var&gt;, &lt;var&gt;ya&lt;/var&gt;, &lt;var&gt;yb&lt;/var&gt; (scalars may be finite or infinite). Additionally, &lt;var&gt;ya&lt;/var&gt; and &lt;var&gt;yb&lt;/var&gt; may be scalar functions of &lt;var&gt;x&lt;/var&gt;, allowing for integration over non-rectangular domains.</source>
          <target state="translated">&lt;var&gt;xa&lt;/var&gt; 、 &lt;var&gt;xb&lt;/var&gt; 、 &lt;var&gt;ya&lt;/var&gt; 、 &lt;var&gt;yb&lt;/var&gt; （スカラーは有限または無限の場合があります）で定義された2次元領域で適応求積法を使用して、 &lt;var&gt;f&lt;/var&gt; の 2次元積分を数値的に評価します。さらに、 &lt;var&gt;ya&lt;/var&gt; と &lt;var&gt;yb&lt;/var&gt; は &lt;var&gt;x&lt;/var&gt; のスカラー関数であり、長方形以外のドメインでの統合を可能にします。</target>
        </trans-unit>
        <trans-unit id="ee8287f411936babccdc36a20035ba1be5d79b09" translate="yes" xml:space="preserve">
          <source>Numerically evaluate the two-dimensional integral of &lt;var&gt;f&lt;/var&gt; using adaptive quadrature over the two-dimensional domain defined by &lt;var&gt;xa&lt;/var&gt;, &lt;var&gt;xb&lt;/var&gt;, &lt;var&gt;ya&lt;/var&gt;, &lt;var&gt;yb&lt;/var&gt; using tiled integration. Additionally, &lt;var&gt;ya&lt;/var&gt; and &lt;var&gt;yb&lt;/var&gt; may be scalar functions of &lt;var&gt;x&lt;/var&gt;, allowing for the integration over non-rectangular domains.</source>
          <target state="translated">タイル積分を使用して &lt;var&gt;xa&lt;/var&gt; 、 &lt;var&gt;xb&lt;/var&gt; 、 &lt;var&gt;ya&lt;/var&gt; 、 &lt;var&gt;yb&lt;/var&gt; で定義された2次元ドメイン &lt;var&gt;f&lt;/var&gt; 適応求積法を使用して、fの 2次元積分を数値的に評価します。さらに、 &lt;var&gt;ya&lt;/var&gt; と &lt;var&gt;yb&lt;/var&gt; は &lt;var&gt;x&lt;/var&gt; のスカラー関数であり、長方形以外のドメインでの統合を可能にします。</target>
        </trans-unit>
        <trans-unit id="08a914cde05039694ef0194d9ee79ff9a79dde33" translate="yes" xml:space="preserve">
          <source>O</source>
          <target state="translated">O</target>
        </trans-unit>
        <trans-unit id="929a2a357f8a1c35996e70cfe09813b3cefe1b48" translate="yes" xml:space="preserve">
          <source>OCTAVE_EXEC_HOME</source>
          <target state="translated">OCTAVE_EXEC_HOME</target>
        </trans-unit>
        <trans-unit id="9634bfdb2a7f979066eb80190e051ee4f88e8643" translate="yes" xml:space="preserve">
          <source>OCTAVE_EXEC_HOME ()</source>
          <target state="translated">OCTAVE_EXEC_HOME ()</target>
        </trans-unit>
        <trans-unit id="13062bcd8bfe7900a85a6cfc0e0d6b08ff4576fc" translate="yes" xml:space="preserve">
          <source>OCTAVE_HOME</source>
          <target state="translated">OCTAVE_HOME</target>
        </trans-unit>
        <trans-unit id="41f1becb5f56a10c42a5b35b050c537a798445b4" translate="yes" xml:space="preserve">
          <source>OCTAVE_HOME ()</source>
          <target state="translated">OCTAVE_HOME ()</target>
        </trans-unit>
        <trans-unit id="0ea145db1efd226c1ce819ca8c2401356dab4a6c" translate="yes" xml:space="preserve">
          <source>OCTAVE_HOME/share/octave/octave_packages</source>
          <target state="translated">OCTAVE_HOME/share/octave/octave_packages</target>
        </trans-unit>
        <trans-unit id="634a3c75535f9cb2e350a8335de09fab95407d0a" translate="yes" xml:space="preserve">
          <source>OCTAVE_HOME/share/octave/packages/</source>
          <target state="translated">OCTAVE_HOME/share/octave/packages/</target>
        </trans-unit>
        <trans-unit id="c8f3aa86d3c56652874688d66116e4c560a1abd1" translate="yes" xml:space="preserve">
          <source>OCTAVE_VERSION</source>
          <target state="translated">OCTAVE_VERSION</target>
        </trans-unit>
        <trans-unit id="6a11b7e4f2ae60ac95fae1693cb178531bb23c84" translate="yes" xml:space="preserve">
          <source>OCTAVE_VERSION ()</source>
          <target state="translated">OCTAVE_VERSION ()</target>
        </trans-unit>
        <trans-unit id="366d7600ff8e830561be33d122a5a381d153239f" translate="yes" xml:space="preserve">
          <source>ODEPACK, A Systematized Collection of ODE Solvers</source>
          <target state="translated">ODEPACK,ODEソルバーの体系化されたコレクション</target>
        </trans-unit>
        <trans-unit id="e287fe3bf7a7323f24daa4b18571d5b40966a374" translate="yes" xml:space="preserve">
          <source>ODEPACK, a Systematized Collection of ODE Solvers</source>
          <target state="translated">システム化されたODEソルバーのコレクションであるODEPACK</target>
        </trans-unit>
        <trans-unit id="d5a11ed73c112b24777ada90a65982f29d4bf36f" translate="yes" xml:space="preserve">
          <source>OLS applies to the multivariate model &lt;em&gt;&lt;var&gt;y&lt;/var&gt; = &lt;var&gt;x&lt;/var&gt;*&lt;var&gt;b&lt;/var&gt; + &lt;var&gt;e&lt;/var&gt;&lt;/em&gt; where &lt;em&gt;&lt;var&gt;y&lt;/var&gt;&lt;/em&gt; is a &lt;em&gt;t&lt;/em&gt;-by-&lt;em&gt;p&lt;/em&gt; matrix, &lt;em&gt;&lt;var&gt;x&lt;/var&gt;&lt;/em&gt; is a &lt;em&gt;t&lt;/em&gt;-by-&lt;em&gt;k&lt;/em&gt; matrix, &lt;var&gt;b&lt;/var&gt; is a &lt;em&gt;k&lt;/em&gt;-by-&lt;em&gt;p&lt;/em&gt; matrix, and &lt;var&gt;e&lt;/var&gt; is a &lt;em&gt;t&lt;/em&gt;-by-&lt;em&gt;p&lt;/em&gt; matrix.</source>
          <target state="translated">OLSは、多変量モデルに適用され&lt;em&gt; &lt;var&gt;y&lt;/var&gt; = &lt;var&gt;x&lt;/var&gt; * &lt;var&gt;b&lt;/var&gt; + &lt;var&gt;e&lt;/var&gt; &lt;/em&gt;&lt;em&gt; &lt;var&gt;y&lt;/var&gt; が&lt;/em&gt;あり&lt;em&gt;、T&lt;/em&gt;行列&lt;em&gt;Pの&lt;/em&gt;行列、&lt;em&gt; &lt;var&gt;x&lt;/var&gt; &lt;/em&gt;のA &lt;em&gt;T&lt;/em&gt;行列&lt;em&gt;K&lt;/em&gt;行列、 &lt;var&gt;b&lt;/var&gt; はある&lt;em&gt;K&lt;/em&gt;行列&lt;em&gt;Pの&lt;/em&gt;行列、及び &lt;var&gt;e&lt;/var&gt; ある&lt;em&gt;T&lt;/em&gt; - by- &lt;em&gt;p&lt;/em&gt;行列。</target>
        </trans-unit>
        <trans-unit id="9beeba965ae8dfbfff40f9bb14dd3916873ca225" translate="yes" xml:space="preserve">
          <source>O_APPEND</source>
          <target state="translated">O_APPEND</target>
        </trans-unit>
        <trans-unit id="17d0cf14f6e349ac4aa723a66957698e9b9984c2" translate="yes" xml:space="preserve">
          <source>O_ASYNC</source>
          <target state="translated">O_ASYNC</target>
        </trans-unit>
        <trans-unit id="551e86440c2fc23584e79c81d816311d1cd7c1b6" translate="yes" xml:space="preserve">
          <source>O_CREAT</source>
          <target state="translated">O_CREAT</target>
        </trans-unit>
        <trans-unit id="4c2fbe88ccc156499e1adb5569ddb4a71e2a0944" translate="yes" xml:space="preserve">
          <source>O_NONBLOCK</source>
          <target state="translated">O_NONBLOCK</target>
        </trans-unit>
        <trans-unit id="6b98d858d2924137b3235aac1a8c08bfc9133a35" translate="yes" xml:space="preserve">
          <source>O_RDONLY</source>
          <target state="translated">O_RDONLY</target>
        </trans-unit>
        <trans-unit id="c310f2acb3ba3dfeb4d20e8e79d6eaa2e6a620c3" translate="yes" xml:space="preserve">
          <source>O_RDWR</source>
          <target state="translated">O_RDWR</target>
        </trans-unit>
        <trans-unit id="2ee322829f78f74d8bacf972b329ca8066c9a6c7" translate="yes" xml:space="preserve">
          <source>O_SYNC</source>
          <target state="translated">O_SYNC</target>
        </trans-unit>
        <trans-unit id="60d427cc4901c6b5961edbe1559f7dc23bdae45c" translate="yes" xml:space="preserve">
          <source>O_WRONLY</source>
          <target state="translated">O_WRONLY</target>
        </trans-unit>
        <trans-unit id="07708492bfc313a2d4c1a65586cf08860f242165" translate="yes" xml:space="preserve">
          <source>Object Groups</source>
          <target state="translated">オブジェクトグループ</target>
        </trans-unit>
        <trans-unit id="e2e3a80c4bd8a468bcd99583c85e67abc6426be7" translate="yes" xml:space="preserve">
          <source>Object Oriented Programming</source>
          <target state="translated">オブジェクト指向プログラミング</target>
        </trans-unit>
        <trans-unit id="f3ea0cec0c2345a3d4bfa234564bd7b24cfaec4a" translate="yes" xml:space="preserve">
          <source>Object Sizes</source>
          <target state="translated">オブジェクトのサイズ</target>
        </trans-unit>
        <trans-unit id="f03118a419af3015951b0cdc9a81c6ef27b59a85" translate="yes" xml:space="preserve">
          <source>Object display</source>
          <target state="translated">オブジェクト表示</target>
        </trans-unit>
        <trans-unit id="7185a816b170aaf26aea6ea3a663c4fe54e6852a" translate="yes" xml:space="preserve">
          <source>Object files that will be dynamically loaded.</source>
          <target state="translated">動的に読み込まれるオブジェクトファイル。</target>
        </trans-unit>
        <trans-unit id="18b0adc5153ead23a95c0f4851034b28e618b670" translate="yes" xml:space="preserve">
          <source>Object properties have two classes of default values, &lt;em&gt;factory defaults&lt;/em&gt; (the initial values) and &lt;em&gt;user-defined defaults&lt;/em&gt;, which may override the factory defaults.</source>
          <target state="translated">オブジェクトプロパティには、&lt;em&gt;工場出荷時のデフォルト&lt;/em&gt;（初期値）と&lt;em&gt;ユーザー定義のデフォルトの&lt;/em&gt; 2つのクラスのデフォルト値があります。これらは工場出荷時のデフォルトをオーバーライドする場合があります。</target>
        </trans-unit>
        <trans-unit id="e8329cabcc08630996a6467719297a92742a3dba" translate="yes" xml:space="preserve">
          <source>Object properties that are modified by a method of an handle class are changed persistently:</source>
          <target state="translated">ハンドルクラスのメソッドによって変更されたオブジェクトのプロパティは、永続的に変更されます。</target>
        </trans-unit>
        <trans-unit id="9f2d503d3035fc1dcc0f5a9aac1311e2e54b6c49" translate="yes" xml:space="preserve">
          <source>Objective function lower limit reached.</source>
          <target state="translated">目的関数の下限値に達しました。</target>
        </trans-unit>
        <trans-unit id="9eb4cb540437c416d8978c7c11b7c402253cb48c" translate="yes" xml:space="preserve">
          <source>Objective function upper limit reached.</source>
          <target state="translated">目的関数の上限に達しました。</target>
        </trans-unit>
        <trans-unit id="c0a7089616a7d65a2cf4e020b8fb54723e2b8441" translate="yes" xml:space="preserve">
          <source>Objects can also be used themselves as the index in a subscripted expression and this is controlled by the &lt;code&gt;subsindex&lt;/code&gt; function.</source>
          <target state="translated">オブジェクトは、添え字付きの式のインデックスとしても使用でき、これは &lt;code&gt;subsindex&lt;/code&gt; 関数によって制御されます。</target>
        </trans-unit>
        <trans-unit id="35b1b358c8308a5ba55d2ea7ae2ec90a15771e68" translate="yes" xml:space="preserve">
          <source>Objects can be indexed with parentheses or braces, either like &lt;code&gt;&lt;var&gt;obj&lt;/var&gt;(&lt;var&gt;idx&lt;/var&gt;)&lt;/code&gt; or like &lt;code&gt;&lt;var&gt;obj&lt;/var&gt;{&lt;var&gt;idx&lt;/var&gt;}&lt;/code&gt;, or even like &lt;code&gt;&lt;var&gt;obj&lt;/var&gt;(&lt;var&gt;idx&lt;/var&gt;).&lt;var&gt;field&lt;/var&gt;&lt;/code&gt;. However, it is up to the programmer to decide what this indexing actually means. In the case of the polynomial class &lt;code&gt;&lt;var&gt;p&lt;/var&gt;(&lt;var&gt;n&lt;/var&gt;)&lt;/code&gt; might mean either the coefficient of the &lt;var&gt;n&lt;/var&gt;-th power of the polynomial, or it might be the evaluation of the polynomial at &lt;var&gt;n&lt;/var&gt;. The meaning of this subscripted referencing is determined by the &lt;code&gt;subsref&lt;/code&gt; method.</source>
          <target state="translated">オブジェクトは、括弧または中括弧で索引付けすることができるいずれかのような &lt;code&gt;&lt;var&gt;obj&lt;/var&gt;(&lt;var&gt;idx&lt;/var&gt;)&lt;/code&gt; 等 &lt;code&gt;&lt;var&gt;obj&lt;/var&gt;{&lt;var&gt;idx&lt;/var&gt;}&lt;/code&gt; 、あるいはなど &lt;code&gt;&lt;var&gt;obj&lt;/var&gt;(&lt;var&gt;idx&lt;/var&gt;).&lt;var&gt;field&lt;/var&gt;&lt;/code&gt; 。ただし、このインデックス付けが実際に何を意味するかを決定するのはプログラマの責任です。多項式クラスの場合には &lt;code&gt;&lt;var&gt;p&lt;/var&gt;(&lt;var&gt;n&lt;/var&gt;)&lt;/code&gt; の係数のいずれかを意味するかもしれない &lt;var&gt;n&lt;/var&gt; 多項式の乗を、またはそれは、多項式の評価かもしれない &lt;var&gt;n&lt;/var&gt; 。この添え字付き参照の意味は、 &lt;code&gt;subsref&lt;/code&gt; メソッドによって決定されます。</target>
        </trans-unit>
        <trans-unit id="c22d3a61b6841c87b8bff2ea8a414fde862267dc" translate="yes" xml:space="preserve">
          <source>Objects may also be matched by comparing a regular expression to the property values, where property values that match &lt;code&gt;regexp (&lt;var&gt;prop_value&lt;/var&gt;, &lt;var&gt;pattern&lt;/var&gt;)&lt;/code&gt; are returned.</source>
          <target state="translated">オブジェクトは、正規表現をプロパティ値と比較することによっても一致する場合があり、 &lt;code&gt;regexp (&lt;var&gt;prop_value&lt;/var&gt;, &lt;var&gt;pattern&lt;/var&gt;)&lt;/code&gt; 一致するプロパティ値が返されます。</target>
        </trans-unit>
        <trans-unit id="bebfd10ba2e24623b36f3cac6376dfffdb470321" translate="yes" xml:space="preserve">
          <source>Objects of class double or single are floating-point objects.</source>
          <target state="translated">クラスdoubleやsingleのオブジェクトは浮動小数点型のオブジェクトです。</target>
        </trans-unit>
        <trans-unit id="ea7fc7a21764798370a9ec1fc6c65fab9fe386ff" translate="yes" xml:space="preserve">
          <source>Oblique Font</source>
          <target state="translated">斜体フォント</target>
        </trans-unit>
        <trans-unit id="bbed3f48f80959f39c7cd39c3a706e8c0b5ee208" translate="yes" xml:space="preserve">
          <source>Observe that the syntax is optimized for struct &lt;strong&gt;arrays&lt;/strong&gt;. Consider the following examples:</source>
          <target state="translated">構文がstruct &lt;strong&gt;配列&lt;/strong&gt;用に最適化されていることを確認してください。次の例を検討してください。</target>
        </trans-unit>
        <trans-unit id="8757910ae66489ff6adf6314346236e31cc5462e" translate="yes" xml:space="preserve">
          <source>Obsolete Function</source>
          <target state="translated">廃止された機能</target>
        </trans-unit>
        <trans-unit id="23cceb4e79d2ef6858582724a2040283e184e0d7" translate="yes" xml:space="preserve">
          <source>Obsolete Functions</source>
          <target state="translated">廃止された機能</target>
        </trans-unit>
        <trans-unit id="b9bd703638ca235686c6726eee3bd3e545f03514" translate="yes" xml:space="preserve">
          <source>Occasionally a block of tests will depend on having optional functionality in Octave. Before testing such blocks the availability of the required functionality must be checked. A &lt;code&gt;%!testif HAVE_XXX&lt;/code&gt; block will only be run if Octave was compiled with functionality &amp;lsquo;</source>
          <target state="translated">テストのブロックは、Octaveにオプション機能があるかどうかに依存する場合があります。このようなブロックをテストする前に、必要な機能の可用性を確認する必要があります。 &lt;code&gt;%!testif HAVE_XXX&lt;/code&gt; Octaveが機能してコンパイルされた場合、ブロックは「実行されます</target>
        </trans-unit>
        <trans-unit id="4e754e96b4b25a9b256a7b27fe69e76ec2bb7a1f" translate="yes" xml:space="preserve">
          <source>Oct-Files</source>
          <target state="translated">Oct-Files</target>
        </trans-unit>
        <trans-unit id="50ed1c66c5500c0b695ad6ba1590534b15fc91f6" translate="yes" xml:space="preserve">
          <source>Oct-files are pieces of C++ code that have been compiled with the Octave API into a dynamically loadable object. They take their name from the file which contains the object which has the extension</source>
          <target state="translated">Oct-fileは,Octave APIでコンパイルされて動的にロード可能なオブジェクトになったC++コードの断片です。それらは,拡張子が</target>
        </trans-unit>
        <trans-unit id="103165a25eab02f49a4433a5673b29e0c77532f2" translate="yes" xml:space="preserve">
          <source>Octave</source>
          <target state="translated">Octave</target>
        </trans-unit>
        <trans-unit id="231fc7868abd91cedf99cde1ddd1bb5c58be0284" translate="yes" xml:space="preserve">
          <source>Octave Workspace Windows</source>
          <target state="translated">オクターブワークスペース Windows</target>
        </trans-unit>
        <trans-unit id="cdaa3795ddbd449b699ab46137dfd38696119203" translate="yes" xml:space="preserve">
          <source>Octave also allows you customize the details of when, where, and how history is saved.</source>
          <target state="translated">Octaveはまた、いつ、どこで、どのように履歴が保存されるかの詳細をカスタマイズすることができます。</target>
        </trans-unit>
        <trans-unit id="8a458dfb7ba82ae0e47593df41f4716869c170bf" translate="yes" xml:space="preserve">
          <source>Octave also has a function that makes it possible to get a single character from the keyboard without requiring the user to type a carriage return.</source>
          <target state="translated">また、Octaveには、キーボードからキャリッジリターンを入力しなくても1文字を取得できる機能があります。</target>
        </trans-unit>
        <trans-unit id="9d49ad6d1f0ba3e20830487a3f6a81ab87e70e12" translate="yes" xml:space="preserve">
          <source>Octave also includes &lt;small&gt;DASSL&lt;/small&gt;, an earlier version of &lt;small&gt;DASPK&lt;/small&gt;, and &lt;small&gt;DASRT&lt;/small&gt;, which can be used to solve DAEs with constraints (stopping conditions).</source>
          <target state="translated">オクターブはまた、&lt;small&gt;DASSL&lt;/small&gt;、以前のバージョンの&lt;small&gt;DASPK&lt;/small&gt;、及び&lt;small&gt;DASRT&lt;/small&gt;制約（停止条件）と微分代数方程式を解くために使用することができます。</target>
        </trans-unit>
        <trans-unit id="dc002dd876ebb1f1b765950ee3a8f6cbd020adea" translate="yes" xml:space="preserve">
          <source>Octave also includes several functions which return information about the command line, including the number of arguments and all of the options.</source>
          <target state="translated">Octaveはまた,引数の数やすべてのオプションを含むコマンドラインに関する情報を返すいくつかの関数を含んでいます。</target>
        </trans-unit>
        <trans-unit id="d6108428891fe32675834387d892d04589e172c0" translate="yes" xml:space="preserve">
          <source>Octave also includes the ability to embed test and demonstration code for a function within the code itself (see &lt;a href=&quot;test-and-demo-functions#Test-and-Demo-Functions&quot;&gt;Test and Demo Functions&lt;/a&gt;). This can be used from within oct-files (or in fact any file) with certain provisos. First, the test and demo functions of Octave look for &lt;code&gt;%!&lt;/code&gt; as the first two characters of a line to identify test and demonstration code. This is a requirement for oct-files as well. In addition, the test and demonstration code must be wrapped in a comment block to avoid it being interpreted by the compiler. Finally, the Octave test and demonstration code must have access to the original source code of the oct-file&amp;mdash;not just the compiled code&amp;mdash;as the tests are stripped from the compiled code. An example in an oct-file might be</source>
          <target state="translated">Octaveには、コード自体に関数のテストコードとデモコードを埋め込む機能も含まれています（「&lt;a href=&quot;test-and-demo-functions#Test-and-Demo-Functions&quot;&gt;テスト関数とデモ関数&lt;/a&gt;」を参照）。これは、特定の条件付きのoctファイル（または実際には任意のファイル）内から使用できます。まず、Octaveのテストおよびデモ機能は &lt;code&gt;%!&lt;/code&gt; 探します。テストおよびデモンストレーションコードを識別するための行の最初の2文字として。これは、octファイルの要件でもあります。さらに、コンパイラーによって解釈されないように、テストおよびデモンストレーションコードをコメントブロックで囲む必要があります。最後に、テストはコンパイル済みコードから削除されるため、Octaveテストおよびデモコードは、コンパイル済みコードだけでなく、octファイルの元のソースコードにアクセスできる必要があります。 octファイルの例は</target>
        </trans-unit>
        <trans-unit id="b34a7ce8bb0ee0da3f1df65319eb689a00a90451" translate="yes" xml:space="preserve">
          <source>Octave also includes the ability to left-shift and right-shift values bitwise.</source>
          <target state="translated">Octaveには、ビット単位で値を左シフト、右シフトする機能も含まれています。</target>
        </trans-unit>
        <trans-unit id="9613e54f074912022e7b29e6d603f20fee1d4841" translate="yes" xml:space="preserve">
          <source>Octave also includes the basic bitwise &amp;rsquo;and&amp;rsquo;, &amp;rsquo;or&amp;rsquo;, and &amp;rsquo;exclusive or&amp;rsquo; operators.</source>
          <target state="translated">Octaveには、ビット単位の基本的な「and」、「or」、「exclusive or」演算子も含まれています。</target>
        </trans-unit>
        <trans-unit id="3cfa2258fd1af4f19eb3055ce3de87f348f298d5" translate="yes" xml:space="preserve">
          <source>Octave also provides a set of solvers for initial value problems for Ordinary Differential Equations that have a &lt;small&gt;MATLAB&lt;/small&gt;-compatible interface. The options for this class of methods are set using the functions.</source>
          <target state="translated">Octaveには、&lt;small&gt;MATLAB&lt;/small&gt;互換のインターフェイスを持つ常微分方程式の初期値問題のソルバーセットも用意されています。このクラスのメソッドのオプションは、関数を使用して設定されます。</target>
        </trans-unit>
        <trans-unit id="9f5c89260ca5f2166e7118a51a1ab63228ed627e" translate="yes" xml:space="preserve">
          <source>Octave also provides a set of solvers for initial value problems for ordinary differential equations (ODEs) that have a &lt;small&gt;MATLAB&lt;/small&gt;-compatible interface. The options for this class of methods are set using the functions.</source>
          <target state="translated">Octaveは、&lt;small&gt;MATLAB&lt;/small&gt;互換のインターフェイスを持つ常微分方程式（ODE）の初期値問題のソルバーのセットも提供します。このクラスのメソッドのオプションは、関数を使用して設定されます。</target>
        </trans-unit>
        <trans-unit id="1f8e9422f7b796a347ed25eefb6c4311aad8e98f" translate="yes" xml:space="preserve">
          <source>Octave also provides several very low-level Unix-like functions which can also be used for starting subprocesses, but you should probably only use them if you can&amp;rsquo;t find any way to do what you need with the higher-level functions.</source>
          <target state="translated">Octaveには、サブプロセスの開始にも使用できる非常に低レベルのUnixライクな関数もいくつか用意されていますが、高レベルの関数で必要なことを実行する方法が見つからない場合にのみ使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="2a739dad68d05b6ba15ecdef154148391de46f9b" translate="yes" xml:space="preserve">
          <source>Octave also provides the following character class test functions patterned after the functions in the standard C library. They all operate on string arrays and return matrices of zeros and ones. Elements that are nonzero indicate that the condition was true for the corresponding character in the string array. For example:</source>
          <target state="translated">Octaveは,標準Cライブラリの関数に倣って,以下の文字クラステスト関数も提供しています。これらはすべて文字列配列を操作し,0と1の行列を返します。0以外の要素は,文字列配列内の対応する文字に対して条件が真であることを示します。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="333dcf5326aa44041e4390a94168f9e9c83de405" translate="yes" xml:space="preserve">
          <source>Octave also provides tools to produce and work with movie frame structures. Those structures encapsulate the image data (&lt;code&gt;&quot;cdata&quot;&lt;/code&gt; field) together with the corresponding colormap (&lt;code&gt;&quot;colormap&quot;&lt;/code&gt; field).</source>
          <target state="translated">Octaveは、ムービーフレーム構造を作成および操作するためのツールも提供します。これらの構造は、対応するカラーマップ（ &lt;code&gt;&quot;colormap&quot;&lt;/code&gt; フィールド）とともに画像データ（ &lt;code&gt;&quot;cdata&quot;&lt;/code&gt; フィールド）をカプセル化します。</target>
        </trans-unit>
        <trans-unit id="fe90117ac9f8be738269da153b6c254231c04ed4" translate="yes" xml:space="preserve">
          <source>Octave also supports linear least squares minimization. That is, Octave can find the parameter &lt;em&gt;b&lt;/em&gt; such that the model &lt;em&gt;y = x*b&lt;/em&gt; fits data &lt;em&gt;(x,y)&lt;/em&gt; as well as possible, assuming zero-mean Gaussian noise. If the noise is assumed to be isotropic the problem can be solved using the &amp;lsquo;</source>
          <target state="translated">Octaveは線形最小二乗最小化もサポートしています。つまり、Octaveは、ゼロ平均ガウスノイズを想定して、モデル&lt;em&gt;y = x * bが&lt;/em&gt;データ&lt;em&gt;（x、y）に&lt;/em&gt;できるだけ適合するようにパラメーター&lt;em&gt;b&lt;/em&gt;を見つけることができます。ノイズが等方性であると想定されている場合、問題は '&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="244a04f2381f5ff0e08934279a337ffeee4195d1" translate="yes" xml:space="preserve">
          <source>Octave and &lt;small&gt;MATLAB&lt;/small&gt; are very similar, but handle Java slightly different. Therefore it may be necessary to detect the environment and use the appropriate functions. The following function can be used to detect the environment. Due to the persistent variable it can be called repeatedly without a heavy performance hit.</source>
          <target state="translated">Octaveと&lt;small&gt;MATLAB&lt;/small&gt;は非常に似ていますが、Javaの処理が少し異なります。したがって、環境を検出して適切な機能を使用する必要がある場合があります。次の機能を使用して、環境を検出できます。永続変数により、パフォーマンスに大きな影響を与えることなく繰り返し呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="f522f5dc48317f00761d5558a6e940ab44d08192" translate="yes" xml:space="preserve">
          <source>Octave and other binaries that people will want to run directly.</source>
          <target state="translated">Octaveや他のバイナリを直接実行したいと思う人がいるでしょう。</target>
        </trans-unit>
        <trans-unit id="3500701cfa630ed25785a1bf21759d4d4ef49217" translate="yes" xml:space="preserve">
          <source>Octave automatically switches to scientific notation when values become very large or very small. This guarantees that you will see several significant figures for every value in a matrix. If you would prefer to see all values in a matrix printed in a fixed point format, you can set the built-in variable &lt;code&gt;fixed_point_format&lt;/code&gt; to a nonzero value. But doing so is not recommended, because it can produce output that can easily be misinterpreted.</source>
          <target state="translated">値が非常に大きくまたは非常に小さくなると、Octaveは自動的に科学表記に切り替わります。これにより、マトリックスのすべての値に対していくつかの重要な数値が表示されることが保証されます。マトリックス内のすべての値を固定小数点形式で表示したい場合は、組み込み変数 &lt;code&gt;fixed_point_format&lt;/code&gt; をゼロ以外の値に設定できます。ただし、誤って解釈される可能性のある出力が生成される可能性があるため、そうすることはお勧めできません。</target>
        </trans-unit>
        <trans-unit id="4cf18272d7975512c5e829a762a1de590b162000" translate="yes" xml:space="preserve">
          <source>Octave automatically switches to scientific notation when values become very large or very small. This guarantees that you will see several significant figures for every value in a matrix. If you would prefer to see all values in a matrix printed in a fixed point format, you can use the function &lt;code&gt;fixed_point_format&lt;/code&gt;. But doing so is not recommended, because it can produce output that can easily be misinterpreted.</source>
          <target state="translated">値が非常に大きくなったり小さくなったりすると、Octaveは自動的に科学的記数法に切り替わります。これにより、マトリックス内のすべての値に対していくつかの有効数字が表示されることが保証されます。固定小数点形式で出力された行列のすべての値を表示したい場合は、関数 &lt;code&gt;fixed_point_format&lt;/code&gt; を使用できます。ただし、そうすることはお勧めできません。誤解されやすい出力が生成される可能性があるためです。</target>
        </trans-unit>
        <trans-unit id="730258944b504da55bf0d797abc34064c3bc40a2" translate="yes" xml:space="preserve">
          <source>Octave built-in functions are intended to generate valid sparse matrices, with no duplicate entries, with ascending row indices of the nonzeros in each column, with a non-negative number of entries in each column (!) and so on. If a matrix is invalid, then &lt;small&gt;COLAMD&lt;/small&gt; may or may not be able to continue. If there are duplicate entries (a row index appears two or more times in the same column) or if the row indices in a column are out of order, then &lt;small&gt;COLAMD&lt;/small&gt; can correct these errors by ignoring the duplicate entries and sorting each column of its internal copy of the matrix &lt;var&gt;S&lt;/var&gt; (the input matrix &lt;var&gt;S&lt;/var&gt; is not repaired, however). If a matrix is invalid in other ways then &lt;small&gt;COLAMD&lt;/small&gt; cannot continue, an error message is printed, and no output arguments (&lt;var&gt;p&lt;/var&gt; or &lt;var&gt;stats&lt;/var&gt;) are returned. &lt;small&gt;COLAMD&lt;/small&gt; is thus a simple way to check a sparse matrix to see if it&amp;rsquo;s valid.</source>
          <target state="translated">Octave組み込み関数は、重複するエントリがなく、各列に非ゼロの行インデックスが昇順であり、各列に負でない数のエントリがある（！）など、有効なスパース行列を生成することを目的としています。マトリックスが無効な場合、&lt;small&gt;COLAMD&lt;/small&gt;は続行できる場合とできない場合があります。重複するエントリがある場合（行インデックスが同じ列に2回以上表示される場合）、または列の行インデックスが順不同である場合、&lt;small&gt;COLAMD&lt;/small&gt;は重複するエントリを無視して内部の各列をソートすることにより、これらのエラーを修正できます行列 &lt;var&gt;S&lt;/var&gt; のコピー（ただし、入力行列 &lt;var&gt;S&lt;/var&gt; は修復されません）。他の方法でマトリックスが無効な場合、&lt;small&gt;COLAMD&lt;/small&gt;続行できません。エラーメッセージが出力され、出力引数（ &lt;var&gt;p&lt;/var&gt; または &lt;var&gt;stats&lt;/var&gt; ）は返されません。したがって、&lt;small&gt;COLAMD&lt;/small&gt;は、スパース行列が有効かどうかを確認するための簡単な方法です。</target>
        </trans-unit>
        <trans-unit id="35a41873985d021f8658f6337c50a04c73f3c673" translate="yes" xml:space="preserve">
          <source>Octave built-in functions are intended to generate valid sparse matrices, with no duplicate entries, with ascending row indices of the nonzeros in each column, with a non-negative number of entries in each column (!) and so on. If a matrix is invalid, then SYMAMD may or may not be able to continue. If there are duplicate entries (a row index appears two or more times in the same column) or if the row indices in a column are out of order, then SYMAMD can correct these errors by ignoring the duplicate entries and sorting each column of its internal copy of the matrix S (the input matrix S is not repaired, however). If a matrix is invalid in other ways then SYMAMD cannot continue, an error message is printed, and no output arguments (&lt;var&gt;p&lt;/var&gt; or &lt;var&gt;stats&lt;/var&gt;) are returned. SYMAMD is thus a simple way to check a sparse matrix to see if it&amp;rsquo;s valid.</source>
          <target state="translated">Octave組み込み関数は、重複するエントリがなく、各列に非ゼロの行インデックスが昇順であり、各列に負でない数のエントリがある（！）など、有効なスパース行列を生成することを目的としています。マトリックスが無効な場合、SYMAMDは続行できる場合とできない場合があります。重複するエントリがある場合（行インデックスが同じ列に2回以上表示される場合）、または列の行インデックスが順不同である場合、SYMAMDは重複するエントリを無視して内部の各列をソートすることにより、これらのエラーを修正できます行列Sのコピー（ただし、入力行列Sは修復されません）。マトリックスが他の方法で無効である場合、SYMAMDは続行できず、エラーメッセージが出力され、出力引数（ &lt;var&gt;p&lt;/var&gt; または &lt;var&gt;stats&lt;/var&gt; ）が返されます。したがって、SYMAMDはスパース行列をチェックして、それが有効かどうかを確認する簡単な方法です。</target>
        </trans-unit>
        <trans-unit id="41172b7d8d8143d4d17eaa8b5aef6840a789d2d2" translate="yes" xml:space="preserve">
          <source>Octave can also perform general nonlinear minimization using a successive quadratic programming solver.</source>
          <target state="translated">Octaveは,逐次二次計画法ソルバーを使用して一般的な非線形最小化を実行することもできます。</target>
        </trans-unit>
        <trans-unit id="3b4334795cb3885442037ba8e27da14938ebb0ff" translate="yes" xml:space="preserve">
          <source>Octave can also read and write matrices text files such as comma separated lists.</source>
          <target state="translated">Octaveは,カンマ区切りのリストなどの行列テキストファイルを読み書きすることもできます。</target>
        </trans-unit>
        <trans-unit id="f20c7e1c7b576f2ab728e9df19716b8b5ac1d1ca" translate="yes" xml:space="preserve">
          <source>Octave can also solve Quadratic Programming problems, this is</source>
          <target state="translated">Octaveは二次関数計画法の問題を解くこともできます。</target>
        </trans-unit>
        <trans-unit id="96f2e74981f8cea7c071f7c015ec49ff429b6c17" translate="yes" xml:space="preserve">
          <source>Octave can communicate with websites across the Internet. The &lt;code&gt;web&lt;/code&gt; function will launch an external web browser to interactively view a site. The remaining functions&amp;mdash;&lt;code&gt;urlread&lt;/code&gt;, &lt;code&gt;urlwrite&lt;/code&gt;, &lt;code&gt;webread&lt;/code&gt;, &lt;code&gt;webwrite&lt;/code&gt;&amp;mdash;are internal Octave functions which can import or export data to/from Octave and a website identified by a URL (Uniform Resource Locator).</source>
          <target state="translated">Octaveは、インターネットを介してWebサイトと通信できます。 &lt;code&gt;web&lt;/code&gt; 機能は、対話的にサイトを表示するには、外部のウェブブラウザを起動します。残りの関数（ &lt;code&gt;urlread&lt;/code&gt; 、 &lt;code&gt;urlwrite&lt;/code&gt; 、 &lt;code&gt;webread&lt;/code&gt; 、 &lt;code&gt;webwrite&lt;/code&gt; )は、OctaveおよびURL（Uniform Resource Locator）で識別されるWebサイトとの間でデータをインポートまたはエクスポートできる内部Octave関数です。</target>
        </trans-unit>
        <trans-unit id="07c0cb77373a36cc32e20e24334d80a0c0b9ae9a" translate="yes" xml:space="preserve">
          <source>Octave can display more than one plot in a single figure. The simplest way to do this is to use the &lt;code&gt;subplot&lt;/code&gt; function to divide the plot area into a series of subplot windows that are indexed by an integer. For example,</source>
          <target state="translated">Octaveは、1つの図に複数のプロットを表示できます。これを行う最も簡単な方法は、関数 &lt;code&gt;subplot&lt;/code&gt; を使用して、整数でインデックスが付けられた一連のサブプロットウィンドウにプロットエリアを分割することです。例えば、</target>
        </trans-unit>
        <trans-unit id="6406bf9f10997f9cacf96ef93be7f06cdc5df139" translate="yes" xml:space="preserve">
          <source>Octave can easily be used for basic numerical calculations. Octave knows about arithmetic operations (+,-,*,/), exponentiation (^), natural logarithms/exponents (log, exp), and the trigonometric functions (sin, cos, &amp;hellip;). Moreover, Octave calculations work on real or imaginary numbers (i,j). In addition, some mathematical constants such as the base of the natural logarithm (e) and the ratio of a circle&amp;rsquo;s circumference to its diameter (pi) are pre-defined.</source>
          <target state="translated">Octaveは基本的な数値計算に簡単に使用できます。Octaveは算術演算（+、-、*、/）、指数（^）、自然対数/指数（log、exp）、および三角関数（sin、cos、&amp;hellip;）を認識しています。さらに、オクターブ計算は実数または虚数（i、j）で機能します。さらに、自然対数の底（e）や円の円周と直径（pi）の比率など、いくつかの数学定数が事前定義されています。</target>
        </trans-unit>
        <trans-unit id="a3e598971a56e6526f674cdce1bfc4cab4d58b05" translate="yes" xml:space="preserve">
          <source>Octave can find the roots of a given polynomial. This is done by computing the companion matrix of the polynomial (see the &lt;code&gt;compan&lt;/code&gt; function for a definition), and then finding its eigenvalues.</source>
          <target state="translated">Octaveは与えられた多項式の根を見つけることができます。これは、（参照多項式のコンパニオン行列を計算することによって行われる &lt;code&gt;compan&lt;/code&gt; 定義するための機能）、およびその固有値を求めます。</target>
        </trans-unit>
        <trans-unit id="9f1432abb8ea6436fb1e2122bdd395cdf5023d3a" translate="yes" xml:space="preserve">
          <source>Octave can generate random numbers from a large number of distributions. The random number generators are based on the random number generators described in &lt;a href=&quot;special-utility-matrices#Special-Utility-Matrices&quot;&gt;Special Utility Matrices&lt;/a&gt;.</source>
          <target state="translated">Octaveは多数の分布から乱数を生成できます。乱数ジェネレータは、&lt;a href=&quot;special-utility-matrices#Special-Utility-Matrices&quot;&gt;特別なユーティリティマトリックスで&lt;/a&gt;説明されている乱数ジェネレータに基づいています。</target>
        </trans-unit>
        <trans-unit id="0039818b25bd219c45fc747ed0402a5feca3c580" translate="yes" xml:space="preserve">
          <source>Octave can plot a function from a function handle or string defining the function without the user needing to explicitly create the data to be plotted. The function &lt;code&gt;fplot&lt;/code&gt; also generates two-dimensional plots with linear axes using a function name and limits for the range of the x-coordinate instead of the x and y data. For example,</source>
          <target state="translated">Octaveは、ユーザーがプロットするデータを明示的に作成しなくても、関数ハンドルまたは関数を定義する文字列から関数をプロットできます。関数 &lt;code&gt;fplot&lt;/code&gt; は、xおよびyデータの代わりに、関数名とx座標の範囲の制限を使用して、線形軸を持つ2次元プロットも生成します。例えば、</target>
        </trans-unit>
        <trans-unit id="6d207520d65dc7fb68be18eda2fea83f7b6f470c" translate="yes" xml:space="preserve">
          <source>Octave can plot a function from a function handle, inline function, or string defining the function without the user needing to explicitly create the data to be plotted. The function &lt;code&gt;fplot&lt;/code&gt; also generates two-dimensional plots with linear axes using a function name and limits for the range of the x-coordinate instead of the x and y data. For example,</source>
          <target state="translated">Octaveは、ユーザーがプロットするデータを明示的に作成する必要なく、関数ハンドル、インライン関数、または関数を定義する文字列から関数をプロットできます。関数 &lt;code&gt;fplot&lt;/code&gt; は、xおよびyデータの代わりに関数名とx座標の範囲の範囲を使用して、線形軸をもつ2次元プロットも生成します。例えば、</target>
        </trans-unit>
        <trans-unit id="dffef3fcbe50efa6cc22d4090b65ba79e9061012" translate="yes" xml:space="preserve">
          <source>Octave can read and write binary data using the functions &lt;code&gt;fread&lt;/code&gt; and &lt;code&gt;fwrite&lt;/code&gt;, which are patterned after the standard C functions with the same names. They are able to automatically swap the byte order of integer data and convert among the supported floating point formats as the data are read.</source>
          <target state="translated">Octaveは、関数 &lt;code&gt;fread&lt;/code&gt; と &lt;code&gt;fwrite&lt;/code&gt; を使用してバイナリデータの読み取りと書き込みを行うことができます。これらは、同じ名前の標準C関数に倣ってパターン化されています。それらは整数データのバイトオーダーを自動的に交換し、データが読み込まれるときにサポートされている浮動小数点フォーマット間で変換することができます。</target>
        </trans-unit>
        <trans-unit id="3908f1ccbdeae0c4004cc4fe5317981d34b63026" translate="yes" xml:space="preserve">
          <source>Octave can solve Linear Programming problems using the &lt;code&gt;glpk&lt;/code&gt; function. That is, Octave can solve</source>
          <target state="translated">Octaveは関数 &lt;code&gt;glpk&lt;/code&gt; を使用して線形計画問題を解くことができます。つまり、Octaveは</target>
        </trans-unit>
        <trans-unit id="acb3ed8648f6721f04bc45a1a1fc6b1ac5573025" translate="yes" xml:space="preserve">
          <source>Octave can solve sets of nonlinear equations of the form</source>
          <target state="translated">Octaveは,次の形式の非線形方程式の集合を解くことができます。</target>
        </trans-unit>
        <trans-unit id="cc2eb79877fe8596efcd519ab48404eabd6c384e" translate="yes" xml:space="preserve">
          <source>Octave comes with functions for computing the derivative and the integral of a polynomial. The functions &lt;code&gt;polyder&lt;/code&gt; and &lt;code&gt;polyint&lt;/code&gt; both return new polynomials describing the result. As an example we&amp;rsquo;ll compute the definite integral of &lt;em&gt;p(x) = x^2 + 1&lt;/em&gt; from 0 to 3.</source>
          <target state="translated">Octaveには、多項式の微分と積分を計算するための関数が付属しています。関数 &lt;code&gt;polyder&lt;/code&gt; と &lt;code&gt;polyint&lt;/code&gt; はどちらも、結果を表す新しい多項式を返します。例として、&lt;em&gt;p（x）= x ^ 2 + 1&lt;/em&gt;の定積分を0から3まで計算します。</target>
        </trans-unit>
        <trans-unit id="110b618e7c872db073ce1404691e98888747d50f" translate="yes" xml:space="preserve">
          <source>Octave comes with good support for various kinds of interpolation, most of which are described in &lt;a href=&quot;interpolation#Interpolation&quot;&gt;Interpolation&lt;/a&gt;. One simple alternative to the functions described in the aforementioned chapter, is to fit a single polynomial, or a piecewise polynomial (spline) to some given data points. To avoid a highly fluctuating polynomial, one most often wants to fit a low-order polynomial to data. This usually means that it is necessary to fit the polynomial in a least-squares sense, which just is what the &lt;code&gt;polyfit&lt;/code&gt; function does.</source>
          <target state="translated">Octaveはで説明されているほとんどが補間の各種のために良いサポートが付属して&lt;a href=&quot;interpolation#Interpolation&quot;&gt;補間&lt;/a&gt;。前述の章で説明した関数の簡単な代替手段の1つは、単一の多項式または区分的多項式（スプライン）を特定のデータポイントに適合させることです。変動の激しい多項式を回避するために、低次多項式をデータに近似することが最もよくあります。これは通常、多項式を最小二乗法で近似する必要があることを意味します。これは、 &lt;code&gt;polyfit&lt;/code&gt; が行うことです。</target>
        </trans-unit>
        <trans-unit id="bc213aaef9c2247bf4085cc25819ab89fb813c72" translate="yes" xml:space="preserve">
          <source>Octave comes with several built-in functions for computing the integral of a function numerically (termed quadrature). These functions all solve 1-dimensional integration problems.</source>
          <target state="translated">Octaveには、関数の積分を数値的に計算するためのいくつかの関数が組み込まれています(求積と呼ばれています)。これらの関数はすべて1次元の積分問題を解いています。</target>
        </trans-unit>
        <trans-unit id="326996bb8c2b3299e2eb7efe284c6e92834d54b8" translate="yes" xml:space="preserve">
          <source>Octave comes with support for solving various kinds of optimization problems. Specifically Octave can solve problems in Linear Programming, Quadratic Programming, Nonlinear Programming, and Linear Least Squares Minimization.</source>
          <target state="translated">Octaveは,様々な種類の最適化問題を解くためのサポートを備えています。具体的には,Octaveは線形計画法,二次計画法,非線形計画法,および線形最小化の問題を解くことができます。</target>
        </trans-unit>
        <trans-unit id="6688b3e6574ef398e2f000cdee22c93474ccbf8c" translate="yes" xml:space="preserve">
          <source>Octave configuration variables as above, but currently unused by &lt;code&gt;mkoctfile&lt;/code&gt;.</source>
          <target state="translated">上記のOctave構成変数ですが、現在 &lt;code&gt;mkoctfile&lt;/code&gt; では使用されていません。</target>
        </trans-unit>
        <trans-unit id="59ecb2acb4c11a523f6bcd5ce2d8f26ead9ceacd" translate="yes" xml:space="preserve">
          <source>Octave configuration variables that are provided for informational purposes only. Except for &amp;lsquo;</source>
          <target state="translated">情報提供のみを目的として提供されるオクターブ構成変数。を除いて '</target>
        </trans-unit>
        <trans-unit id="43cdcc3b75568997ff6fea38a8c2c2d83245d0a2" translate="yes" xml:space="preserve">
          <source>Octave configuration variables that users may override with environment variables. These are used in commands that &lt;code&gt;mkoctfile&lt;/code&gt; executes.</source>
          <target state="translated">ユーザーが環境変数で上書きできるOctave構成変数。これらは、 &lt;code&gt;mkoctfile&lt;/code&gt; が実行するコマンドで使用されます。</target>
        </trans-unit>
        <trans-unit id="09f3e95c10e47200ef3a7a462781b93b2efe96ec" translate="yes" xml:space="preserve">
          <source>Octave does &lt;strong&gt;not&lt;/strong&gt; yet implement &lt;small&gt;MATLAB&lt;/small&gt;&amp;rsquo;s v7.3 binary data format.</source>
          <target state="translated">Octaveは、&lt;small&gt;MATLAB&lt;/small&gt;のv7.3バイナリデータ形式をまだ実装してい&lt;strong&gt;ませ&lt;/strong&gt;ん。&lt;small&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ce918ce83922bf2c45f328972cb119f00983f7d3" translate="yes" xml:space="preserve">
          <source>Octave does not require you to load function definitions from files before using them. You simply need to put the function definitions in a place where Octave can find them.</source>
          <target state="translated">Octaveは,関数定義を使用する前にファイルから関数定義をロードする必要はありません。単に,関数定義をOctaveが見つけられる場所に置く必要があります。</target>
        </trans-unit>
        <trans-unit id="d3bad1d85ac0fe79d38b3e762fa038ef7bbd5017" translate="yes" xml:space="preserve">
          <source>Octave has a number of functions for managing sets of data. A set is defined as a collection of unique elements and is typically represented by a vector of numbers sorted in ascending order. Any vector or matrix can be converted to a set by removing duplicates through the use of the &lt;code&gt;unique&lt;/code&gt; function. However, it isn&amp;rsquo;t necessary to explicitly create a set as all of the functions which operate on sets will convert their input to a set before proceeding.</source>
          <target state="translated">Octaveには、データのセットを管理するための多くの機能があります。セットは一意の要素のコレクションとして定義され、通常、昇順で並べ替えられた数値のベクトルで表されます。 &lt;code&gt;unique&lt;/code&gt; 関数を使用して重複を削除することにより、ベクトルまたは行列をセットに変換できます。ただし、セットを操作するすべての関数は入力をセットに変換してから続行するため、セットを明示的に作成する必要はありません。</target>
        </trans-unit>
        <trans-unit id="d61552fecbf5e7d3f9cb82d4e00b4df3ed2e6147" translate="yes" xml:space="preserve">
          <source>Octave has a provision for attaching application-defined data to a graphics handle. The data can be anything which is meaningful to the application, and will be completely ignored by Octave.</source>
          <target state="translated">Octaveは,アプリケーション定義のデータをグラフィックスハンドルにアタッチするための規定を持っています。そのデータは,アプリケーションにとって意味のあるものであれば何でもよく,Octaveによって完全に無視されます。</target>
        </trans-unit>
        <trans-unit id="82fff1feb92c7da903d3a2aaa47a21cd417bba63" translate="yes" xml:space="preserve">
          <source>Octave has an extensive help facility. The same documentation that is available in printed form is also available from the Octave prompt, because both forms of the documentation are created from the same input file.</source>
          <target state="translated">Octaveには豊富なヘルプ機能があります。両方の形式の文書が同じ入力ファイルから作成されるので,印刷された形式で利用可能な同じ文書もOctaveプロンプトから利用可能です。</target>
        </trans-unit>
        <trans-unit id="4eac8ba1df7a11fd89738d621c80607c49b93e32" translate="yes" xml:space="preserve">
          <source>Octave has built-in functions for solving nonlinear differential equations of the form</source>
          <target state="translated">Octaveには,次の形式の非線形微分方程式を解くための関数が組み込まれています。</target>
        </trans-unit>
        <trans-unit id="dbbb0006313f2c93716737dbc0f46bca5827f479" translate="yes" xml:space="preserve">
          <source>Octave has built-in functions for solving ordinary differential equations, and differential-algebraic equations. All solvers are based on reliable ODE routines written in Fortran.</source>
          <target state="translated">Octaveは常微分方程式や微分代数方程式を解くための関数を内蔵しています。すべてのソルバはFortranで書かれた信頼性の高いODEルーチンに基づいています。</target>
        </trans-unit>
        <trans-unit id="212b077f5a867ed2b28bb02b63c5abdd5ed098d0" translate="yes" xml:space="preserve">
          <source>Octave has built-in support for logical values, i.e., variables that are either &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;. When comparing two variables, the result will be a logical value whose value depends on whether or not the comparison is true.</source>
          <target state="translated">Octaveには、論理値、つまり &lt;code&gt;true&lt;/code&gt; または &lt;code&gt;false&lt;/code&gt; の変数に対するサポートが組み込まれています。2つの変数を比較すると、結果は論理値になり、その値は比較が真であるかどうかに依存します。</target>
        </trans-unit>
        <trans-unit id="b7347d2e7b4a992d2593573f02ebfa44957e6a8a" translate="yes" xml:space="preserve">
          <source>Octave has functions for computing the Probability Density Function (PDF), the Cumulative Distribution function (CDF), and the quantile (the inverse of the CDF) for arbitrary user-defined distributions (discrete) and for experimental data (empirical).</source>
          <target state="translated">Octaveは,任意のユーザ定義分布(離散分布)と実験データ(経験的分布)に対する確率密度関数(PDF),累積分布関数(CDF),分位値(CDFの逆数)を計算する関数を持っています。</target>
        </trans-unit>
        <trans-unit id="2b1e2bccd5587b5fdd521db27b64a3655ddea50d" translate="yes" xml:space="preserve">
          <source>Octave has support for various statistical methods. The emphasis is on basic descriptive statistics, but the Octave Forge statistics package includes probability distributions, statistical tests, random number generation, and much more.</source>
          <target state="translated">Octaveは様々な統計手法をサポートしています。基本的な記述統計に重点が置かれていますが,Octave Forge統計パッケージには,確率分布,統計検定,乱数生成などが含まれています。</target>
        </trans-unit>
        <trans-unit id="f8d6acf2828d38d660afd74b89632b69a2ebfb74" translate="yes" xml:space="preserve">
          <source>Octave has the ability to create user-defined classes&amp;mdash;including the capabilities of operator and function overloading. Classes can protect internal properties so that they may not be altered accidentally which facilitates data encapsulation. In addition, rules can be created to address the issue of class precedence in mixed class operations.</source>
          <target state="translated">Octaveには、オペレーターや関数のオーバーロード機能など、ユーザー定義のクラスを作成する機能があります。クラスは内部プロパティを保護して、誤って変更されないようにし、データのカプセル化を容易にします。さらに、混合クラス操作でのクラス優先順位の問題に対処するためのルールを作成できます。</target>
        </trans-unit>
        <trans-unit id="8b56e7748db824b1b70e960c3c3b32ccfef4b866" translate="yes" xml:space="preserve">
          <source>Octave has the functions &lt;code&gt;triplot&lt;/code&gt;, &lt;code&gt;trimesh&lt;/code&gt;, and &lt;code&gt;trisurf&lt;/code&gt; to plot the Delaunay triangulation of a 2-dimensional set of points. &lt;code&gt;tetramesh&lt;/code&gt; will plot the triangulation of a 3-dimensional set of points.</source>
          <target state="translated">Octaveには、2組の点のDelaunay三角形分割をプロットする関数 &lt;code&gt;triplot&lt;/code&gt; 、 &lt;code&gt;trimesh&lt;/code&gt; 、および &lt;code&gt;trisurf&lt;/code&gt; があります。 &lt;code&gt;tetramesh&lt;/code&gt; は、3次元の点のセットの三角形分割をプロットします。</target>
        </trans-unit>
        <trans-unit id="1820bb4a8dba35ca503a6085262a8efc4556497f" translate="yes" xml:space="preserve">
          <source>Octave has three functions that make it easy to prompt users for input. The &lt;code&gt;input&lt;/code&gt; and &lt;code&gt;menu&lt;/code&gt; functions are normally used for managing an interactive dialog with a user, and the &lt;code&gt;keyboard&lt;/code&gt; function is normally used for doing simple debugging.</source>
          <target state="translated">Octaveには、ユーザーに入力を促すのを容易にする3つの関数があります。 &lt;code&gt;input&lt;/code&gt; や &lt;code&gt;menu&lt;/code&gt; の機能は通常、ユーザーとのインタラクティブな対話を管理するために使用され、 &lt;code&gt;keyboard&lt;/code&gt; 機能は通常、簡単なデバッグを行うために使用されます。</target>
        </trans-unit>
        <trans-unit id="0f38bfe34ae989704a9ca4abe249702cfaa2fc20" translate="yes" xml:space="preserve">
          <source>Octave includes a built-in debugger to aid in the development of scripts. This can be used to interrupt the execution of an Octave script at a certain point, or when certain conditions are met. Once execution has stopped, and debug mode is entered, the symbol table at the point where execution has stopped can be examined and modified to check for errors.</source>
          <target state="translated">Octaveには,スクリプトの開発を支援するための組み込みのデバッガが含まれています。これは,ある時点で,またはある条件が満たされたときにOctaveスクリプトの実行を中断するために使用することができます。いったん実行が停止してデバッグモードに入ると,実行が停止した時点のシンボルテーブルを調べたり,エラーをチェックするために修正したりすることができます。</target>
        </trans-unit>
        <trans-unit id="278b9b59fa3fc06e0be6ffdfbd63e2013644090e" translate="yes" xml:space="preserve">
          <source>Octave includes a number of functions to allow the integration of testing and demonstration code in the source code of the functions themselves.</source>
          <target state="translated">Octaveは,関数自体のソースコードにテストコードとデモコードを統合できるようにするために,いくつかの関数を含んでいます。</target>
        </trans-unit>
        <trans-unit id="15c99b511eff2d7803b79eea304df50e36b8e58d" translate="yes" xml:space="preserve">
          <source>Octave includes a polymorphic solver for sparse matrices, where the exact solver used to factorize the matrix, depends on the properties of the sparse matrix itself. Generally, the cost of determining the matrix type is small relative to the cost of factorizing the matrix itself, but in any case the matrix type is cached once it is calculated, so that it is not re-determined each time it is used in a linear equation.</source>
          <target state="translated">Octaveには,疎な行列のための多相ソルバーが含まれており,行列を因数分解するために使用される正確なソルバーは,疎な行列自体の性質に依存します。一般的に,行列の型を決定するためのコストは,行列自体を因数分解するためのコストに比べて小さいですが,どのような場合でも,行列の型は一度計算されるとキャッシュされるので,一次方程式で使用されるたびに再決定されることはありません.</target>
        </trans-unit>
        <trans-unit id="135e3c5cc173770c3767b41493b972b462a2d196" translate="yes" xml:space="preserve">
          <source>Octave includes a polymorphic solver that selects an appropriate matrix factorization depending on the properties of the matrix itself. Generally, the cost of determining the matrix type is small relative to the cost of factorizing the matrix itself. In any case the matrix type is cached once it is calculated so that it is not re-determined each time it is used in a linear equation.</source>
          <target state="translated">Octaveには,行列自体の特性に応じて適切な行列因数分解を選択する多相ソルバーが含まれています.一般的に,行列の型を決定するコストは,行列自体を因数分解するコストに比べて小さいです.どのような場合でも,行列の型は一度計算されるとキャッシュされるので,一次方程式で使用されるたびに再決定されることはありません。</target>
        </trans-unit>
        <trans-unit id="00aeca59c49f4e685c2ef7aeb8e3340620fa7f50" translate="yes" xml:space="preserve">
          <source>Octave includes an interface to allow legacy mex-files to be compiled and used with Octave. This interface can also be used to share compiled code between Octave and &lt;small&gt;MATLAB&lt;/small&gt; users. However, as mex-files expose &lt;small&gt;MATLAB&lt;/small&gt;&amp;rsquo;s internal API, and the internal structure of Octave is different, a mex-file can never have the same performance in Octave as the equivalent oct-file. In particular, to support the manner in which variables are passed to mex functions there are a significant number of additional copies of memory blocks when invoking or returning from a mex-file function. For this reason, it is recommended that any new code be written with the oct-file interface previously discussed.</source>
          <target state="translated">Octaveには、従来のmexファイルをコンパイルしてOctaveで使用できるようにするインターフェイスが含まれています。このインターフェイスは、Octave ユーザーと&lt;small&gt;MATLAB&lt;/small&gt;ユーザーの間でコンパイルされたコードを共有するためにも使用できます。ただし、me​​x-fileは&lt;small&gt;MATLAB&lt;/small&gt;の内部APIを公開し、Octaveの内部構造が異なるため、mex-fileがOctaveで同等のoct-fileと同じパフォーマンスになることはありません。特に、変数がmex関数に渡される方法をサポートするために、mex-file関数を呼び出すとき、または関数mex-fileから戻るときに、メモリブロックのかなりの数の追加コピーがあります。このため、前述のoct-fileインターフェイスを使用して新しいコードを記述することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="210865fd55d1320f5e30e9a74478014f91423629" translate="yes" xml:space="preserve">
          <source>Octave includes many utility functions for copying, moving, renaming, and deleting files; for creating, reading, and deleting directories; for retrieving status information on files; and for manipulating file and path names.</source>
          <target state="translated">Octaveには,ファイルのコピー,移動,名前変更,削除,ディレクトリの作成,読み込み,削除,ファイルのステータス情報の取得,ファイル名とパス名の操作のための多くのユーティリティ関数が含まれています。</target>
        </trans-unit>
        <trans-unit id="018abc0bf50994f18df3bd22216cf7e19dc7caa1" translate="yes" xml:space="preserve">
          <source>Octave includes several functions for computing the integral of functions of multiple variables. This procedure can generally be performed by creating a function that integrates &lt;em&gt;f&lt;/em&gt; with respect to &lt;em&gt;x&lt;/em&gt;, and then integrates that function with respect to &lt;em&gt;y&lt;/em&gt;. This procedure can be performed manually using the following example which integrates the function:</source>
          <target state="translated">Octaveには、複数の変数の関数の積分を計算するためのいくつかの関数が含まれています。この手順は一般に、&lt;em&gt;x&lt;/em&gt;に関して&lt;em&gt;f&lt;/em&gt;を積分し、次に&lt;em&gt;y&lt;/em&gt;に関してその関数を積分する関数を作成することによって実行できます。この手順は、機能を統合する次の例を使用して手動で実行できます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="71cbe1e7f6c413abae36f1b2ace2795c137a98c6" translate="yes" xml:space="preserve">
          <source>Octave includes several functions for printing error and warning messages. When you write functions that need to take special action when they encounter abnormal conditions, you should print the error messages using the functions described in this chapter.</source>
          <target state="translated">Octaveには,エラーメッセージや警告メッセージを印刷するためのいくつかの関数が含まれています。異常な状態に遭遇したときに特別な処置をとる必要がある関数を書くときは,この章で説明した関数を使ってエラーメッセージを印刷しなければなりません。</target>
        </trans-unit>
        <trans-unit id="3dc7bb0acede4d538bf500235230b303a5c93f76" translate="yes" xml:space="preserve">
          <source>Octave includes some high-level commands like &lt;code&gt;system&lt;/code&gt; and &lt;code&gt;popen&lt;/code&gt; for starting subprocesses. If you want to run another program to perform some task and then look at its output, you will probably want to use these functions.</source>
          <target state="translated">Octaveには、サブプロセスを開始するための &lt;code&gt;system&lt;/code&gt; や &lt;code&gt;popen&lt;/code&gt; などの高レベルのコマンドがいくつか含まれています。別のプログラムを実行してタスクを実行し、その出力を確認する場合は、これらの関数を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="d0d7cd712c8f1956172fcee760124e2a613727de" translate="yes" xml:space="preserve">
          <source>Octave includes support for organizing data in structures. The current implementation uses an associative array with indices limited to strings, but the syntax is more like C-style structures.</source>
          <target state="translated">Octaveは,データを構造体で整理するためのサポートを含んでいます。現在の実装では,文字列に限定したインデックスを持つ連想配列を使用していますが,構文はよりCスタイルの構造体に似ています。</target>
        </trans-unit>
        <trans-unit id="70bfd80965cec4b97db4706f6bc2c4e70b100160" translate="yes" xml:space="preserve">
          <source>Octave includes support for single precision data types, and most of the functions in Octave accept single precision values and return single precision answers. A single precision variable is created with the &lt;code&gt;single&lt;/code&gt; function.</source>
          <target state="translated">Octaveは単精度データ型のサポートを含み、Octaveのほとんどの関数は単精度値を受け入れ、単精度の回答を返します。単精度変数は、 &lt;code&gt;single&lt;/code&gt; 関数で作成されます。</target>
        </trans-unit>
        <trans-unit id="5bb9076336ff5332da40081e13bd28f92a3e5633" translate="yes" xml:space="preserve">
          <source>Octave includes support for three different mechanisms to contain arbitrary data types in the same variable: Structures, which are C-like, and are indexed with named fields; containers.Map objects, which store data in key/value pairs; and cell arrays, where each element of the array can have a different data type and or shape. Multiple input arguments and return values of functions are organized as another data container, the comma separated list.</source>
          <target state="translated">Octaveは,同じ変数に任意のデータ型を格納するための3つの異なるメカニズムをサポートしています。構造体はC言語に似ていて,名前付きフィールドでインデックス化されています。コンテナ.マップオブジェクトは,キーと値のペアでデータを格納します。複数の入力引数と関数の戻り値は、別のデータコンテナであるカンマ区切りリストとして編成されます。</target>
        </trans-unit>
        <trans-unit id="51a41e16280423f939223964aed1f8d533fe9890" translate="yes" xml:space="preserve">
          <source>Octave is a fairly large program with many build dependencies. You may be able to find pre-packaged versions of the dependencies distributed as part of your system, or you may have to build some or all of them yourself.</source>
          <target state="translated">Octaveは,多くのビルド依存関係を持つかなり大きなプログラムです。あなたのシステムの一部として配布されている依存関係の事前にパッケージ化されたバージョンを見つけることができるかもしれませんし、あなた自身でそれらのいくつかまたはすべてをビルドしなければならないかもしれません。</target>
        </trans-unit>
        <trans-unit id="62fe38e92c0abb3317c778d148f94347bfea82a7" translate="yes" xml:space="preserve">
          <source>Octave is a fantastic language for solving many problems in science and engineering. However, it is not the only computer language and there are times when you may want to use code written in other languages. Good reasons for doing so include: 1) not re-inventing the wheel; existing function libraries which have been thoroughly tested and debugged or large scale simulation codebases are a good example, 2) accessing unique capabilities of a different language; for example the well-known regular expression functions of Perl (but don&amp;rsquo;t do that because &lt;code&gt;regexp&lt;/code&gt; already exists in Octave).</source>
          <target state="translated">Octaveは、科学と工学における多くの問題を解決するための素晴らしい言語です。ただし、これは唯一のコンピューター言語ではなく、他の言語で記述されたコードを使用したい場合があります。そうするための正当な理由は次のとおりです。1）ホイールを再発明しないこと。徹底的にテストおよびデバッグされた既存の関数ライブラリまたは大規模なシミュレーションコードベースが良い例です。2）異なる言語の独自の機能にアクセスします。たとえば、よく知られているPerlの正規表現関数（ただし、 &lt;code&gt;regexp&lt;/code&gt; はOctaveに既に存在するため、そうしないでください）。</target>
        </trans-unit>
        <trans-unit id="ce4441ff0bbdf4d512390f489496d887057c6a2b" translate="yes" xml:space="preserve">
          <source>Octave is a weakly typed programming language. Thus it is possible to call a function with arguments, that probably cause errors or might have undesirable side effects. For example calling a string processing function with a huge sparse matrix.</source>
          <target state="translated">Octaveは型付けが弱いプログラミング言語です。そのため,おそらくエラーを起こしたり,望ましくない副作用をもたらす可能性のある引数を持った関数を呼び出すことが可能です。例えば,巨大な疎な行列を持つ文字列処理関数を呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="adf3eacd15fd3f74e2d1ae726bc30bf0bba3cdca" translate="yes" xml:space="preserve">
          <source>Octave is able to produce output for various printers, bitmaps, and vector formats by using Ghostscript. For bitmap and printer output anti-aliasing is applied using Ghostscript&amp;rsquo;s TextAlphaBits and GraphicsAlphaBits options. The default number of bits are 4 and 1 respectively. Allowed values for &lt;var&gt;N&lt;/var&gt; are 1, 2, or 4.</source>
          <target state="translated">Octaveは、Ghostscriptを使用して、さまざまなプリンター、ビットマップ、およびベクター形式の出力を生成できます。ビットマップおよびプリンター出力の場合、GhostscriptのTextAlphaBitsおよびGraphicsAlphaBitsオプションを使用してアンチエイリアスが適用されます。デフォルトのビット数は、それぞれ4と1です。 &lt;var&gt;N&lt;/var&gt; の許容値は1、2、または4です。</target>
        </trans-unit>
        <trans-unit id="fd7b960db8753a3a9d7ff3d654d826f75ff530c4" translate="yes" xml:space="preserve">
          <source>Octave is capable of storing strings up to &lt;em&gt;2^{31} - 1&lt;/em&gt; in length. However for &lt;small&gt;MATLAB&lt;/small&gt; compatibility all variable, function, and structure field names should be shorter than the length returned by &lt;code&gt;namelengthmax&lt;/code&gt;. In particular, variables stored to a &lt;small&gt;MATLAB&lt;/small&gt; file format (</source>
          <target state="translated">Octaveは、最大&lt;em&gt;2 ^ {31}-1の&lt;/em&gt;長さの文字列を格納できます。ただし、&lt;small&gt;MATLABとの&lt;/small&gt;互換性のために、すべての変数、関数、および構造体のフィールド名は、 &lt;code&gt;namelengthmax&lt;/code&gt; によって返される長さよりも短くする必要があります。特に、&lt;small&gt;MATLAB&lt;/small&gt;ファイル形式（</target>
        </trans-unit>
        <trans-unit id="85999ce56b6f29313f5e006b3eb74c17ab2f0a86" translate="yes" xml:space="preserve">
          <source>Octave is principally a batch or command-line language. However, it does offer some features for constructing graphical interfaces that interact with users.</source>
          <target state="translated">Octaveは主にバッチまたはコマンドライン言語です。しかし,ユーザと対話するグラフィカルインタフェースを構築するためのいくつかの機能を提供します。</target>
        </trans-unit>
        <trans-unit id="829406248f29f6dc75dd10aac9fe663d81054511" translate="yes" xml:space="preserve">
          <source>Octave normally keeps track of the commands you type so that you can recall previous commands to edit or execute them again. When you exit Octave, the most recent commands you have typed, up to the number specified by the variable &lt;code&gt;history_size&lt;/code&gt;, are saved in a file. When Octave starts, it loads an initial list of commands from the file named by the variable &lt;code&gt;history_file&lt;/code&gt;.</source>
          <target state="translated">Octaveは通常、以前に入力したコマンドを再呼び出しして編集または再実行できるように、入力したコマンドを追跡します。Octaveを終了すると、変数 &lt;code&gt;history_size&lt;/code&gt; で指定された数まで入力した最新のコマンドがファイルに保存されます。Octaveが起動すると、変数 &lt;code&gt;history_file&lt;/code&gt; で指定されたファイルからコマンドの初期リストをロードします。</target>
        </trans-unit>
        <trans-unit id="1f670e2aaf24907b9580fed2a8c2b6307a7fa48f" translate="yes" xml:space="preserve">
          <source>Octave ordinarily examines the properties of the matrix &lt;var&gt;A&lt;/var&gt; and chooses a solver that best matches the matrix. By passing a structure &lt;var&gt;opts&lt;/var&gt; to &lt;code&gt;linsolve&lt;/code&gt; you can inform Octave directly about the matrix &lt;var&gt;A&lt;/var&gt;. In this case Octave will skip the matrix examination and proceed directly to solving the linear system.</source>
          <target state="translated">Octaveは通常、行列 &lt;var&gt;A&lt;/var&gt; のプロパティを調べ、行列に最もよく一致するソルバーを選択します。構造体 &lt;var&gt;opts&lt;/var&gt; を &lt;code&gt;linsolve&lt;/code&gt; に渡すことにより、行列 &lt;var&gt;A&lt;/var&gt; についてOctaveに直接通知できます。この場合、Octaveは行列の検査をスキップし、線形システムの解決に直接進みます。</target>
        </trans-unit>
        <trans-unit id="7572c372d92aedfc2254bafe3feaf510e3ea626e" translate="yes" xml:space="preserve">
          <source>Octave provides a few functions for dealing with audio data. An audio &amp;lsquo;sample&amp;rsquo; is a single output value from an A/D converter, i.e., a small integer number (usually 8 or 16 bits), and audio data is just a series of such samples. It can be characterized by three parameters: the sampling rate (measured in samples per second or Hz, e.g., 8000 or 44100), the number of bits per sample (e.g., 8 or 16), and the number of channels (1 for mono, 2 for stereo, etc.).</source>
          <target state="translated">Octaveは、オーディオデータを処理するためのいくつかの関数を提供します。オーディオの「サンプル」は、A / Dコンバーターからの単一の出力値、つまり小さな整数（通常は8ビットまたは16ビット）であり、オーディオデータはそのような一連のサンプルにすぎません。サンプリングレート（1秒あたりのサンプル数またはHzで測定される、たとえば8000または44100）、サンプルあたりのビット数（たとえば、8または16）、およびチャネル数（1はモノラル） 、ステレオの場合は2など）。</target>
        </trans-unit>
        <trans-unit id="0032553bf5737c923a77294358959a19432de2da" translate="yes" xml:space="preserve">
          <source>Octave provides a number of functions for the manipulation of numeric values on a bit by bit basis. The basic functions to set and obtain the values of individual bits are &lt;code&gt;bitset&lt;/code&gt; and &lt;code&gt;bitget&lt;/code&gt;.</source>
          <target state="translated">Octaveは、数値をビットごとに操作するための多数の関数を提供します。個々のビットの値を設定および取得するための基本的な関数は、 &lt;code&gt;bitset&lt;/code&gt; および &lt;code&gt;bitget&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="a5ee7fca567e728fe1b9e7f568cfdbf017901748" translate="yes" xml:space="preserve">
          <source>Octave provides several ways of recovering from errors. There are &lt;code&gt;try&lt;/code&gt;/&lt;code&gt;catch&lt;/code&gt; blocks, &lt;code&gt;unwind_protect&lt;/code&gt;/&lt;code&gt;unwind_protect_cleanup&lt;/code&gt; blocks, and finally the &lt;code&gt;onCleanup&lt;/code&gt; command.</source>
          <target state="translated">Octaveはエラーから回復するいくつかの方法を提供します。あります &lt;code&gt;try&lt;/code&gt; / &lt;code&gt;catch&lt;/code&gt; ブロック、 &lt;code&gt;unwind_protect&lt;/code&gt; / &lt;code&gt;unwind_protect_cleanup&lt;/code&gt; ブロック、そして最終的に &lt;code&gt;onCleanup&lt;/code&gt; のコマンドは。</target>
        </trans-unit>
        <trans-unit id="4f4dbb8878dd5ff1e78a6c7f03130d99401b03ba" translate="yes" xml:space="preserve">
          <source>Octave provides simple means to create many different types of two- and three-dimensional plots using high-level functions.</source>
          <target state="translated">Octaveは,高レベルの関数を使って多くの異なるタイプの2次元および3次元プロットを作成するための簡単な手段を提供します。</target>
        </trans-unit>
        <trans-unit id="bdb96dc7e31d4fa19beb5dee155c4e6e9d519464" translate="yes" xml:space="preserve">
          <source>Octave provides special treatment of real and complex rectangular diagonal matrices, as well as permutation matrices. They are stored as special objects, using efficient storage and algorithms, facilitating writing both readable and efficient matrix algebra expressions in the Octave language. The special treatment may be disabled by using the functions &lt;em&gt;disable_diagonal_matrix&lt;/em&gt; and &lt;em&gt;disable_permutation_matrix&lt;/em&gt;.</source>
          <target state="translated">Octaveは、実数および複素数の長方形対角行列と順列行列の特別な扱いを提供します。それらは、効率的なストレージとアルゴリズムを使用して特別なオブジェクトとして保存され、Octave言語で読みやすく効率的な行列代数式を簡単に記述できます。関数&lt;em&gt;disable_diagonal_matrix&lt;/em&gt;および&lt;em&gt;disable_permutation_matrix&lt;/em&gt;を使用して、特別な処理を無効にすることができます。</target>
        </trans-unit>
        <trans-unit id="293a1d120578b59b37dd32386a36046af0dcf38d" translate="yes" xml:space="preserve">
          <source>Octave provides the &lt;code&gt;scanf&lt;/code&gt;, &lt;code&gt;fscanf&lt;/code&gt;, and &lt;code&gt;sscanf&lt;/code&gt; functions to read formatted input. There are two forms of each of these functions. One can be used to extract vectors of data from a file, and the other is more &amp;lsquo;C-like&amp;rsquo;.</source>
          <target state="translated">Octaveは、フォーマットされた入力を読み取るための &lt;code&gt;scanf&lt;/code&gt; 、 &lt;code&gt;fscanf&lt;/code&gt; 、および &lt;code&gt;sscanf&lt;/code&gt; 関数を提供します。これらの各関数には2つの形式があります。1つはファイルからデータのベクトルを抽出するために使用でき、もう1つはより「C風」です。</target>
        </trans-unit>
        <trans-unit id="64be205ad4eee0e94f10ebcd23086045879d6fad" translate="yes" xml:space="preserve">
          <source>Octave provides the following trigonometric functions where angles are specified in degrees. These functions produce true zeros at the appropriate intervals rather than the small round-off error that occurs when using radians. For example:</source>
          <target state="translated">Octaveは,角度が度で指定されている場合,以下の三角関数を提供します。これらの関数は,ラジアンを使用したときに発生する小さな丸め誤差ではなく,適切な間隔で真のゼロを生成します。例えば,以下のようになります。</target>
        </trans-unit>
        <trans-unit id="7bdc599659ddba73d44d01a8950f5bd9868d8f7b" translate="yes" xml:space="preserve">
          <source>Octave provides the following trigonometric functions where angles are specified in radians. To convert from degrees to radians multiply by &lt;code&gt;pi/180&lt;/code&gt; or use the &lt;code&gt;deg2rad&lt;/code&gt; function. For example, &lt;code&gt;sin (30 * pi/180)&lt;/code&gt; returns the sine of 30 degrees. As an alternative, Octave provides a number of trigonometric functions which work directly on an argument specified in degrees. These functions are named after the base trigonometric function with a &amp;lsquo;</source>
          <target state="translated">Octaveは、角度がラジアンで指定される次の三角関数を提供します。度からラジアンに変換するには、 &lt;code&gt;pi/180&lt;/code&gt; を掛けるか、関数 &lt;code&gt;deg2rad&lt;/code&gt; を使用します。たとえば、 &lt;code&gt;sin (30 * pi/180)&lt;/code&gt; は30度のサインを返します。代わりに、Octaveは、度で指定された引数を直接処理する多数の三角関数を提供します。これらの関数は、 '</target>
        </trans-unit>
        <trans-unit id="b81e09aefceaa90ef2995cec4cf2a9e40c1786e9" translate="yes" xml:space="preserve">
          <source>Octave provides two commands for initializing Readline and thereby changing the command line behavior.</source>
          <target state="translated">Octaveは、Readlineを初期化し、それによってコマンドラインの動作を変更するための2つのコマンドを提供します。</target>
        </trans-unit>
        <trans-unit id="2e63863a7ea082a5dc10c3d7e2a2d145d8dff737" translate="yes" xml:space="preserve">
          <source>Octave reports two kinds of errors for invalid programs.</source>
          <target state="translated">Octaveは、無効なプログラムに対して2種類のエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="a01c77d03d84b85da1b09bb9630e9f60f394fc3a" translate="yes" xml:space="preserve">
          <source>Octave requires approximately 1.4 GB of disk storage to unpack and compile from source (significantly less, 400 MB, if you don&amp;rsquo;t compile with debugging symbols). To compile without debugging symbols try the command</source>
          <target state="translated">Octaveは、ソースからアンパックしてコンパイルするために約1.4 GBのディスクストレージを必要とします（デバッグシンボルを使用してコンパイルしない場合は、大幅に少ない400 MB）。シンボルをデバッグせずにコンパイルするには、次のコマンドを試してください</target>
        </trans-unit>
        <trans-unit id="34628d169c7387d8aaa5d7c883aa02e4e25ec98a" translate="yes" xml:space="preserve">
          <source>Octave searches the &lt;var&gt;static classpath&lt;/var&gt; first, and then the &lt;var&gt;dynamic classpath&lt;/var&gt;. Classes appearing in the &lt;var&gt;static classpath&lt;/var&gt;, as well as in the &lt;var&gt;dynamic classpath&lt;/var&gt;, will therefore be found in the &lt;var&gt;static classpath&lt;/var&gt; and loaded from this location. Classes which will be used frequently, or must be available to all users, should be added to the &lt;var&gt;static classpath&lt;/var&gt;. The &lt;var&gt;static classpath&lt;/var&gt; is populated once from the contents of a plain text file named</source>
          <target state="translated">Octaveは最初に &lt;var&gt;static classpath&lt;/var&gt; 検索し、次に &lt;var&gt;dynamic classpath&lt;/var&gt; 検索します。現れるクラス &lt;var&gt;static classpath&lt;/var&gt; と同様に、 &lt;var&gt;dynamic classpath&lt;/var&gt; 、それゆえに見出される &lt;var&gt;static classpath&lt;/var&gt; と、この位置からロードされました。頻繁に使用されるクラス、またはすべてのユーザーが使用できる必要がある &lt;var&gt;static classpath&lt;/var&gt; は、静的クラスパスに追加する必要があります。 &lt;var&gt;static classpath&lt;/var&gt; 名前のプレーンテキストファイルの内容からいったん取り込まれます</target>
        </trans-unit>
        <trans-unit id="55da10af0b117b25a4c80d8a4f97b4b9b984d6e1" translate="yes" xml:space="preserve">
          <source>Octave simply treats audio data as vectors of samples (non-mono data are not supported yet). It is assumed that audio files using linear encoding have one of the extensions</source>
          <target state="translated">Octaveは単にオーディオデータをサンプルのベクトルとして扱います(非モノデータはまだサポートされていません)。線形エンコーディングを使用するオーディオファイルは、拡張子</target>
        </trans-unit>
        <trans-unit id="fe4f3f45b22fcf7fc6fe4224dad0e01d074af6a2" translate="yes" xml:space="preserve">
          <source>Octave supplies the &lt;code&gt;hash&lt;/code&gt; function to calculate hash values of strings and files, the latter in combination with the &lt;code&gt;fileread&lt;/code&gt; function. The &lt;code&gt;hash&lt;/code&gt; function supports the most common used cryptographic hash functions, namely MD5 and SHA-1.</source>
          <target state="translated">Octaveは、文字列とファイルのハッシュ値を計算するための &lt;code&gt;hash&lt;/code&gt; 関数を &lt;code&gt;fileread&lt;/code&gt; ます。後者は、fileread関数と組み合わせて使用されます。 &lt;code&gt;hash&lt;/code&gt; 関数は、最も一般的に使用される暗号ハッシュ関数、すなわち、MD5とSHA-1をサポートします。</target>
        </trans-unit>
        <trans-unit id="c8dc6cbbbfbb6a3d3e1bac99fa27914fdb933e90" translate="yes" xml:space="preserve">
          <source>Octave supports a limited form of exception handling modeled after the unwind-protect form of Lisp.</source>
          <target state="translated">Octaveは,Lispのunwind-protect形式に倣った限定的な例外処理をサポートしています。</target>
        </trans-unit>
        <trans-unit id="8a324e24696f8f7877fc5cfd9ad269179b94ddaf" translate="yes" xml:space="preserve">
          <source>Octave supports a number of different array and matrix classes, the majority of which are based on the &lt;code&gt;Array&lt;/code&gt; class. The exception are the sparse matrix types discussed separately below. There are three basic matrix types:</source>
          <target state="translated">Octaveは多くの異なる配列と行列クラスをサポートしており、その大部分は &lt;code&gt;Array&lt;/code&gt; クラスに基づいています。例外は、以下で個別に説明する疎行列タイプです。3つの基本的なマトリックスタイプがあります。</target>
        </trans-unit>
        <trans-unit id="9e40296bdafa8e08dfb2f398583456dec756f063" translate="yes" xml:space="preserve">
          <source>Octave supports a wide range of functions for manipulating strings. Since a string is just a matrix, simple manipulations can be accomplished using standard operators. The following example shows how to replace all blank characters with underscores.</source>
          <target state="translated">Octaveは,文字列を操作するための幅広い関数をサポートしています。文字列は単なる行列なので,標準的な演算子を使って簡単な操作を行うことができます。以下の例は,すべての空白文字をアンダースコアに置き換える方法を示しています。</target>
        </trans-unit>
        <trans-unit id="1c7d287822fe7c6ea86ea83b1c743f75466ee313" translate="yes" xml:space="preserve">
          <source>Octave supports conversion from the RGB color system to the HSV color system and vice versa. It is also possible to convert from a color RGB image to a grayscale image.</source>
          <target state="translated">OctaveはRGB色系からHSV色系への変換をサポートしており,その逆もサポートしています。また,カラーRGB画像からグレースケール画像への変換も可能です。</target>
        </trans-unit>
        <trans-unit id="6753f6c4ec75e4115747993cc2bb585398ae2522" translate="yes" xml:space="preserve">
          <source>Octave supports five different adaptive quadrature algorithms for computing the integral of a function &lt;em&gt;f&lt;/em&gt; over the interval from &lt;em&gt;a&lt;/em&gt; to &lt;em&gt;b&lt;/em&gt;. These are</source>
          <target state="translated">Octaveは、&lt;em&gt;a&lt;/em&gt;から&lt;em&gt;b&lt;/em&gt;までの区間で関数&lt;em&gt;fの&lt;/em&gt;積分を計算するための5つの異なる適応求積アルゴリズムをサポートしています。これらは&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5974861830de526a6f34cff14a9218e0533caba8" translate="yes" xml:space="preserve">
          <source>Octave supports integer matrices as an alternative to using double precision. It is possible to use both signed and unsigned integers represented by 8, 16, 32, or 64 bits. It should be noted that most computations require floating point data, meaning that integers will often change type when involved in numeric computations. For this reason integers are most often used to store data, and not for calculations.</source>
          <target state="translated">Octaveは倍精度を使用する代わりに整数行列をサポートしています。8,16,32,64ビットで表される符号付き整数と符号なし整数の両方を使用することができます。ほとんどの計算は浮動小数点データを必要としますが、これは整数が数値計算に関与すると型が変わることが多いことを意味しています。この理由から、整数はほとんどの場合、データを格納するのに使用され、計算のためではない。</target>
        </trans-unit>
        <trans-unit id="44a853743c09a7d03ffa0c753d02bd2c5f72992b" translate="yes" xml:space="preserve">
          <source>Octave supports profiling of code execution on a per-function level. If profiling is enabled, each call to a function (supporting built-ins, operators, functions in oct- and mex-files, user-defined functions in Octave code and anonymous functions) is recorded while running Octave code. After that, this data can aid in analyzing the code behavior, and is in particular helpful for finding &amp;ldquo;hot spots&amp;rdquo; in the code which use up a lot of computation time and are the best targets to spend optimization efforts on.</source>
          <target state="translated">Octaveは関数ごとのレベルでのコード実行のプロファイリングをサポートしています。プロファイリングが有効になっている場合、Octaveコードの実行中に、関数（組み込み、演算子、octファイルとmexファイルの関数、Octaveコードのユーザー定義関数、無名関数をサポート）への各呼び出しが記録されます。その後、このデータはコードの動作を分析するのに役立ちます。特に、コード内で多くの計算時間を消費し、最適化の取り組みに費やすのに最適なターゲットである「ホットスポット」を見つけるのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="bab572673131ba951363bf1992d3c1afb946aade" translate="yes" xml:space="preserve">
          <source>Octave supports several basic set operations. Octave can compute the union, intersection, and difference of two sets. Octave also supports the &lt;em&gt;Exclusive Or&lt;/em&gt; set operation.</source>
          <target state="translated">Octaveはいくつかの基本的な集合演算をサポートしています。Octaveは、2つのセットの和集合、交差、および差異を計算できます。Octaveは、&lt;em&gt;排他的&lt;/em&gt;論理和演算もサポートしています。</target>
        </trans-unit>
        <trans-unit id="0ed1507300ed7b1edfdbb9b392cf0d6fc60ce68e" translate="yes" xml:space="preserve">
          <source>Octave supports several methods for one-dimensional interpolation, most of which are described in this section. &lt;a href=&quot;polynomial-interpolation#Polynomial-Interpolation&quot;&gt;Polynomial Interpolation&lt;/a&gt; and &lt;a href=&quot;interpolation-on-scattered-data#Interpolation-on-Scattered-Data&quot;&gt;Interpolation on Scattered Data&lt;/a&gt; describe additional methods.</source>
          <target state="translated">Octaveは1次元補間のいくつかの方法をサポートしています。そのほとんどはこのセクションで説明されています。&lt;a href=&quot;polynomial-interpolation#Polynomial-Interpolation&quot;&gt;多項式補間&lt;/a&gt;と&lt;a href=&quot;interpolation-on-scattered-data#Interpolation-on-Scattered-Data&quot;&gt;散在データの補間で&lt;/a&gt;は、追加の方法について説明しています。</target>
        </trans-unit>
        <trans-unit id="22dbe7dad72fb07b939998a39ff428eb12edc9d6" translate="yes" xml:space="preserve">
          <source>Octave supports several ways of reading and writing data to or from the prompt or a file. The simplest functions for data Input and Output (I/O) are easy to use, but only provide limited control of how data is processed. For more control, a set of functions modeled after the C standard library are also provided by Octave.</source>
          <target state="translated">Octaveは,プロンプトやファイルとの間でデータを読み書きするいくつかの方法をサポートしています。データ入出力(I/O)のための最も単純な関数は使いやすいですが,データがどのように処理されるかの限定的な制御しか提供しません。より多くの制御のために,C標準ライブラリをモデルにした一連の関数もOctaveによって提供されています。</target>
        </trans-unit>
        <trans-unit id="4cf89050d99c61364e1b17c265831bf26ce6b24c" translate="yes" xml:space="preserve">
          <source>Octave supports the FTP protocol through an object-oriented interface. Use the function &lt;code&gt;ftp&lt;/code&gt; to create an FTP object which represents the connection. All FTP functions take an FTP object as the first argument.</source>
          <target state="translated">Octaveはオブジェクト指向のインターフェースを通じてFTPプロトコルをサポートしています。関数 &lt;code&gt;ftp&lt;/code&gt; を使用して、接続を表すFTPオブジェクトを作成します。すべてのFTP関数は、最初の引数としてFTPオブジェクトを受け取ります。</target>
        </trans-unit>
        <trans-unit id="cac581385965f6291a31d66307a3f5b7118e26d5" translate="yes" xml:space="preserve">
          <source>Octave supports three means to stop execution based on the values set in the functions &lt;code&gt;debug_on_interrupt&lt;/code&gt;, &lt;code&gt;debug_on_warning&lt;/code&gt;, and &lt;code&gt;debug_on_error&lt;/code&gt;.</source>
          <target state="translated">Octaveは、関数 &lt;code&gt;debug_on_interrupt&lt;/code&gt; 、 &lt;code&gt;debug_on_warning&lt;/code&gt; 、および &lt;code&gt;debug_on_error&lt;/code&gt; に設定された値に基づいて実行を停止する3つの手段をサポートしています。</target>
        </trans-unit>
        <trans-unit id="d25c1f5a8f2d6ecf0769bc27644f45a49cb405fd" translate="yes" xml:space="preserve">
          <source>Octave supports various helpful statistical functions. Many are useful as initial steps to prepare a data set for further analysis. Others provide different measures from those of the basic descriptive statistics.</source>
          <target state="translated">Octaveは,様々な有用な統計関数をサポートしています。その多くは,さらなる分析のためにデータセットを準備するための最初のステップとして有用である。その他のものは,基本的な記述統計量とは異なる尺度を提供する。</target>
        </trans-unit>
        <trans-unit id="6a02bf7ebed745360a01f35a921d2942ca8e5ea3" translate="yes" xml:space="preserve">
          <source>Octave supports various kinds of conversions between strings and numbers. As an example, it is possible to convert a string containing a hexadecimal number to a floating point number.</source>
          <target state="translated">Octaveは,文字列と数値との間の様々な種類の変換をサポートしています。例えば,16進数を含む文字列を浮動小数点数に変換することができます。</target>
        </trans-unit>
        <trans-unit id="8123c6ac04bccf9ca73cafd68e2d34bf03c33efc" translate="yes" xml:space="preserve">
          <source>Octave uses standard mathematical notation with the advantage over low-level languages that operators may act on scalars, vector, matrices, or N-dimensional arrays. For example, to multiply the matrix &lt;code&gt;A&lt;/code&gt; by a scalar value, type the command</source>
          <target state="translated">Octaveは、演算子がスカラー、ベクトル、行列、またはN次元配列に作用する可能性がある低レベル言語よりも優れている標準の数学表記を使用します。たとえば、行列 &lt;code&gt;A&lt;/code&gt; にスカラー値を乗算するには、次のコマンドを入力します。</target>
        </trans-unit>
        <trans-unit id="7f9e4d86d8ccfe15f26bd2d4eda5c6498b8a92bb" translate="yes" xml:space="preserve">
          <source>Octave uses the &lt;small&gt;FFTW&lt;/small&gt; libraries to perform FFT computations. When Octave starts up and initializes the &lt;small&gt;FFTW&lt;/small&gt; libraries, they read a system wide file (on a Unix system, it is typically</source>
          <target state="translated">Octaveは&lt;small&gt;FFTW&lt;/small&gt;ライブラリを使用してFFT計算を実行します。Octaveが起動して&lt;small&gt;FFTW&lt;/small&gt;ライブラリを初期化すると、システム全体のファイルを読み取ります（Unixシステムでは、通常</target>
        </trans-unit>
        <trans-unit id="dfa7bd84c40b62d16aebe6bf9fe40428dba2472f" translate="yes" xml:space="preserve">
          <source>Octave uses the C library trigonometric functions. It is expected that these functions are defined by the ISO/IEC 9899 Standard. This Standard is available at: &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1124.pdf&quot;&gt;http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1124.pdf&lt;/a&gt;. Section F.9.1 deals with the trigonometric functions. The behavior of most of the functions is relatively straightforward. However, there are some exceptions to the standard behavior. Many of the exceptions involve the behavior for -0. The most complex case is atan2. Octave exactly implements the behavior given in the Standard. Including &lt;code&gt;atan2(+- 0, 0)&lt;/code&gt; returns &lt;code&gt;+- pi&lt;/code&gt;.</source>
          <target state="translated">OctaveはCライブラリの三角関数を使用します。これらの機能は、ISO / IEC 9899規格によって定義されることが期待されています。この標準は、&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1124.pdf&quot;&gt;http&lt;/a&gt; : //www.open-std.org/jtc1/sc22/wg14/www/docs/n1124.pdfで入手できます。セクションF.9.1では、三角関数を扱います。ほとんどの関数の動作は比較的単純です。ただし、標準の動作にはいくつかの例外があります。例外の多くには、-0の動作が含まれます。最も複雑なケースはatan2です。 Octaveは、標準で規定されている動作を正確に実装します。 &lt;code&gt;atan2(+- 0, 0)&lt;/code&gt; を含めると、 &lt;code&gt;+- pi&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="c0d2c88344db37c68bc5520901bf4e60c119ace8" translate="yes" xml:space="preserve">
          <source>Octave uses the GNU Readline library for command-line editing and history features. Readline is very flexible and can be modified through a configuration file of commands (See the GNU Readline library for the exact command syntax). The default configuration file is normally</source>
          <target state="translated">Octaveはコマンドライン編集と履歴機能のためにGNU Readlineライブラリを使用しています。Readlineは非常に柔軟で、コマンドの設定ファイルを通して変更することができます(正確なコマンド構文についてはGNU Readlineライブラリを参照してください)。デフォルトの設定ファイルは通常</target>
        </trans-unit>
        <trans-unit id="8be244500df5dba9bc2f5802de6526b7c492acba" translate="yes" xml:space="preserve">
          <source>Octave uses the GNU Readline library to provide an extensive set of command-line editing and history features. Only the most common features are described in this manual. In addition, all of the editing functions can be bound to different key strokes at the user&amp;rsquo;s discretion. This manual assumes no changes from the default Emacs bindings. See the GNU Readline Library manual for more information on customizing Readline and for a complete feature list.</source>
          <target state="translated">Octaveは、GNU Readlineライブラリを使用して、コマンドライン編集と履歴機能の広範なセットを提供します。このマニュアルでは、最も一般的な機能のみを説明しています。さらに、すべての編集機能をユーザーの裁量でさまざまなキーストロークにバインドできます。このマニュアルでは、デフォルトのEmacsバインディングからの変更はないと想定しています。Readlineのカスタマイズの詳細と完全な機能リストについては、GNU Readline Libraryマニュアルを参照してください。</target>
        </trans-unit>
        <trans-unit id="098119fe1235a13cd6360eca3af507186b5c79fa" translate="yes" xml:space="preserve">
          <source>Octave waits for the external command to finish before returning the exit status of the program in &lt;var&gt;status&lt;/var&gt; and any output in &lt;var&gt;text&lt;/var&gt;.</source>
          <target state="translated">Octaveは中のプログラムの終了ステータスを返す前にフィニッシュに外部コマンドを待ち &lt;var&gt;status&lt;/var&gt; とで任意の出力 &lt;var&gt;text&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="6aad76a9c14e6cca222c85ffa499ca801052b32a" translate="yes" xml:space="preserve">
          <source>Octave will automatically create a separate window to display the plot.</source>
          <target state="translated">Octaveは、プロットを表示するための別ウィンドウを自動的に作成します。</target>
        </trans-unit>
        <trans-unit id="80db0c4525873e91e22f0969190e4d5af7c08814" translate="yes" xml:space="preserve">
          <source>Octave will call &lt;var&gt;fcn&lt;/var&gt; with the name of the function that requires the component and a string describing the missing component. The hook function should return an error message to be displayed.</source>
          <target state="translated">Octaveはコンポーネントを必要とする関数の名前と不足しているコンポーネントを説明する文字列で &lt;var&gt;fcn&lt;/var&gt; を呼び出します。フック関数は、表示されるエラーメッセージを返す必要があります。</target>
        </trans-unit>
        <trans-unit id="a3b4fd971a882c17d17cee0744109c0839d7e9d1" translate="yes" xml:space="preserve">
          <source>Octave will expect additional input to complete the first &lt;code&gt;if&lt;/code&gt; statement. If you are using Octave interactively, it will continue to prompt you for additional input. If Octave is reading this input from a file, it may complain about missing or mismatched &lt;code&gt;end&lt;/code&gt; statements, or, if you have not used the more specific &lt;code&gt;end&lt;/code&gt; statements (&lt;code&gt;endif&lt;/code&gt;, &lt;code&gt;endfor&lt;/code&gt;, etc.), it may simply produce incorrect results, without producing any warning messages.</source>
          <target state="translated">Octaveは最初の &lt;code&gt;if&lt;/code&gt; ステートメントを完了するために追加の入力を期待します。Octaveをインタラクティブに使用している場合は、引き続き追加の入力を求めるプロンプトが表示されます。Octaveがこの入力をファイルから読み取っている場合は、 &lt;code&gt;end&lt;/code&gt; ステートメントの欠落または不一致について文句を言う可能性があります。または、より具体的な &lt;code&gt;end&lt;/code&gt; ステートメント（ &lt;code&gt;endif&lt;/code&gt; 、 &lt;code&gt;endfor&lt;/code&gt; など）を使用していない場合は、生成せずに誤った結果を生成するだけかもしれません警告メッセージ。</target>
        </trans-unit>
        <trans-unit id="7d22bec9a8bf5312ed5998b0709395eb3554c043" translate="yes" xml:space="preserve">
          <source>Octave will respond by printing the matrix in neatly aligned columns. Octave uses a comma or space to separate entries in a row, and a semicolon or carriage return to separate one row from the next. Ending a command with a semicolon tells Octave not to print the result of the command. For example,</source>
          <target state="translated">Octaveは,行列をきれいに整列された列で印刷することで応答します。Octaveは,行内の項目を区切るためにカンマやスペースを使用し,ある行と次の行を区切るためにセミコロンやキャリッジリターンを使用します。コマンドをセミコロンで終わらせると,Octaveはコマンドの結果を印刷しないように指示します。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="c58771d0f26c94d3e2533fabf9a61a5cb45c50bc" translate="yes" xml:space="preserve">
          <source>Octave will respond immediately with a message like this:</source>
          <target state="translated">オクターブはこのようなメッセージですぐに対応してくれます。</target>
        </trans-unit>
        <trans-unit id="67e516e83fb117dc24ad3955c16e2bf3cde992fd" translate="yes" xml:space="preserve">
          <source>Octave will respond with</source>
          <target state="translated">オクターブは次のように反応します。</target>
        </trans-unit>
        <trans-unit id="c29002aa9f9b9423b58e880a4d21cf408b0ceea4" translate="yes" xml:space="preserve">
          <source>Octave&amp;rsquo;s 64-bit index support is activated with the configure option</source>
          <target state="translated">Octaveの64ビットインデックスサポートは、構成オプションでアクティブ化されます</target>
        </trans-unit>
        <trans-unit id="a6fca4813022b29fb947a8b698273c42e035510e" translate="yes" xml:space="preserve">
          <source>Octave&amp;rsquo;s &lt;code&gt;do-until&lt;/code&gt; statement looks like this:</source>
          <target state="translated">Octaveの &lt;code&gt;do-until&lt;/code&gt; ステートメントは次のようになります。</target>
        </trans-unit>
        <trans-unit id="8a13ab72b1ae6927505b680cba4e5365aaef7e67" translate="yes" xml:space="preserve">
          <source>Octave&amp;rsquo;s &lt;code&gt;strftime&lt;/code&gt; function supports a superset of the ANSI C field specifiers.</source>
          <target state="translated">Octaveの &lt;code&gt;strftime&lt;/code&gt; 関数は、ANSI Cフィールド指定子のスーパーセットをサポートしています。</target>
        </trans-unit>
        <trans-unit id="3baeced29bbc45e297033f1fd5f2f024fe6a4d10" translate="yes" xml:space="preserve">
          <source>Octave&amp;rsquo;s &lt;code&gt;while&lt;/code&gt; statement looks like this:</source>
          <target state="translated">Octaveの &lt;code&gt;while&lt;/code&gt; ステートメントは次のようになります。</target>
        </trans-unit>
        <trans-unit id="5925c14e96500b036d09abf936927b72969c5018" translate="yes" xml:space="preserve">
          <source>Octave&amp;rsquo;s C-style input and output functions provide most of the functionality of the C programming language&amp;rsquo;s standard I/O library. The argument lists for some of the input functions are slightly different, however, because Octave has no way of passing arguments by reference.</source>
          <target state="translated">OctaveのCスタイルの入出力関数は、Cプログラミング言語の標準I / Oライブラリのほとんどの機能を提供します。ただし、一部の入力関数の引数リストは少し異なります。これは、Octaveが引数を参照で渡す方法がないためです。</target>
        </trans-unit>
        <trans-unit id="afa71bad1e028dbe6c884ca2688f0fd57402ea60" translate="yes" xml:space="preserve">
          <source>Octave&amp;rsquo;s built-in numeric objects include real, complex, and integer scalars and matrices. All built-in floating point numeric data is currently stored as double precision numbers. On systems that use the IEEE floating point format, values in the range of approximately 2.2251e-308 to 1.7977e+308 can be stored, and the relative precision is approximately 2.2204e-16. The exact values are given by the variables &lt;code&gt;realmin&lt;/code&gt;, &lt;code&gt;realmax&lt;/code&gt;, and &lt;code&gt;eps&lt;/code&gt;, respectively.</source>
          <target state="translated">Octaveの組み込み数値オブジェクトには、実数、複素数、整数のスカラーと行列が含まれます。すべての組み込み浮動小数点数値データは現在、倍精度数として格納されています。IEEE浮動小数点形式を使用するシステムでは、約2.2251e-308〜1.7977e + 308の範囲の値を格納でき、相対精度は約2.2204e-16です。正確な値は、変数 &lt;code&gt;realmin&lt;/code&gt; 、 &lt;code&gt;realmax&lt;/code&gt; 、および &lt;code&gt;eps&lt;/code&gt; でそれぞれ与えられます。</target>
        </trans-unit>
        <trans-unit id="148ceac42e95895f5a8c68e4ae0aaec870f2bd73" translate="yes" xml:space="preserve">
          <source>Octave&amp;rsquo;s cell type is also available from within oct-files. A cell array is just an &lt;code&gt;Array&lt;/code&gt; of &lt;code&gt;octave_value&lt;/code&gt;s, and thus each element of the cell array can be treated like any other &lt;code&gt;octave_value&lt;/code&gt;. A simple example is</source>
          <target state="translated">Octaveのセルタイプは、octファイル内からも利用できます。セル配列は &lt;code&gt;octave_value&lt;/code&gt; の &lt;code&gt;Array&lt;/code&gt; にすぎないため、セル配列の各要素は他の &lt;code&gt;octave_value&lt;/code&gt; と同様に扱うことができます。簡単な例は</target>
        </trans-unit>
        <trans-unit id="c212080d92131d4ed00bdb2fc5f05ed4e9d6ee00" translate="yes" xml:space="preserve">
          <source>Octave&amp;rsquo;s core set of functions for manipulating time values are patterned after the corresponding functions from the standard C library. Several of these functions use a data structure for time that includes the following elements:</source>
          <target state="translated">時間値を操作するためのOctaveのコア関数セットは、標準Cライブラリの対応する関数に基づいてパターン化されています。これらの関数のいくつかは、次の要素を含む時間のデータ構造を使用します。</target>
        </trans-unit>
        <trans-unit id="f3c4606d39f335774a550e36b9e2430ceab8470c" translate="yes" xml:space="preserve">
          <source>Octave&amp;rsquo;s data structure type can help you to organize related objects of different types. The current implementation uses an associative array with indices limited to strings, but the syntax is more like C-style structures.</source>
          <target state="translated">Octaveのデータ構造タイプは、さまざまなタイプの関連オブジェクトを整理するのに役立ちます。現在の実装では、インデックスが文字列に制限された連想配列を使用していますが、構文はCスタイルの構造に似ています。</target>
        </trans-unit>
        <trans-unit id="2194a74b13a6c18595f3353f7a9d1a30ebb46e7d" translate="yes" xml:space="preserve">
          <source>Octave&amp;rsquo;s diary feature allows you to keep a log of all or part of an interactive session by recording the input you type and the output that Octave produces in a separate file.</source>
          <target state="translated">Octaveの日記機能を使用すると、入力した入力とOctaveが生成する出力を別のファイルに記録することで、インタラクティブセッションのすべてまたは一部のログを保持できます。</target>
        </trans-unit>
        <trans-unit id="28f7ded71adc94a9a9c50bc941043181b6951088" translate="yes" xml:space="preserve">
          <source>Octave&amp;rsquo;s group database functions return information in a structure with the following fields.</source>
          <target state="translated">Octaveのグループデータベース関数は、以下のフィールドを持つ構造で情報を返します。</target>
        </trans-unit>
        <trans-unit id="8c01bba7f1dc965636411af2be2a8e48c0bad732" translate="yes" xml:space="preserve">
          <source>Octave&amp;rsquo;s password database functions return information in a structure with the following fields.</source>
          <target state="translated">Octaveのパスワードデータベース関数は、次のフィールドを持つ構造で情報を返します。</target>
        </trans-unit>
        <trans-unit id="4efe86d6e23a737da69f978ee7e15e9b92e74d8f" translate="yes" xml:space="preserve">
          <source>Octave&amp;rsquo;s path prior to changes by any octaverc file.</source>
          <target state="translated">octavercファイルによる変更前のOctaveのパス。</target>
        </trans-unit>
        <trans-unit id="35322c978b543d1086f612d86148e5f88b2e8586" translate="yes" xml:space="preserve">
          <source>Octave&amp;rsquo;s system-wide startup file.</source>
          <target state="translated">Octaveのシステム全体の起動ファイル。</target>
        </trans-unit>
        <trans-unit id="e28a20bde270cc86b03a1ff2fd469b82dafbf1e8" translate="yes" xml:space="preserve">
          <source>Octave&amp;rsquo;s ubiquitous lazily-copied pass-by-value semantics implies a problem for performance of user-defined &lt;code&gt;subsasgn&lt;/code&gt; methods. Imagine the following call to &lt;code&gt;subsasgn&lt;/code&gt;</source>
          <target state="translated">Octaveのユビキタスな遅延コピーされた値渡しのセマンティクスは、ユーザー定義の &lt;code&gt;subsasgn&lt;/code&gt; メソッドのパフォーマンスに問題があることを意味します。次の &lt;code&gt;subsasgn&lt;/code&gt; の呼び出しを想像してください。</target>
        </trans-unit>
        <trans-unit id="b363f8705a46584721b007c4b79d144146877c35" translate="yes" xml:space="preserve">
          <source>Of course, if the bug is that the interpreter gets a fatal signal, then one can&amp;rsquo;t miss it. But if the bug is incorrect output, we might not notice unless it is glaringly wrong.</source>
          <target state="translated">もちろん、インタープリターが致命的なシグナルを受け取るというバグの場合、それを見逃すことはできません。しかし、バグが誤った出力である場合、それが明らかに間違っていない限り、私たちは気付かないかもしれません。</target>
        </trans-unit>
        <trans-unit id="ff9f34d402fb2c777d8a837e5ebeecf133bd07e1" translate="yes" xml:space="preserve">
          <source>Of course, it is not always possible to know the number of nonzero elements prior to filling a matrix. For this reason the additional unused storage of a sparse matrix can be removed after its creation with the &lt;code&gt;maybe_compress&lt;/code&gt; function. In addition to deallocating unused storage, &lt;code&gt;maybe_compress&lt;/code&gt; can also remove zero elements from the matrix. The removal of zero elements from the matrix is controlled by setting the argument of the &lt;code&gt;maybe_compress&lt;/code&gt; function to be &lt;code&gt;true&lt;/code&gt;. However, the cost of removing the zeros is high because it implies re-sorting the elements. If possible, it is better for the user to avoid adding the unnecessary zeros in the first place. An example of the use of &lt;code&gt;maybe_compress&lt;/code&gt; is</source>
          <target state="translated">もちろん、行列を埋める前に、非ゼロ要素の数を常に知ることができるとは限りません。このため、スパースマトリックスの未使用の追加ストレージは、 &lt;code&gt;maybe_compress&lt;/code&gt; 関数で作成した後で削除できます。未使用のストレージの割り当てを解除することに加えて、 &lt;code&gt;maybe_compress&lt;/code&gt; は行列からゼロ要素を削除することもできます。行列からのゼロ要素の削除は、 &lt;code&gt;maybe_compress&lt;/code&gt; 関数の引数を &lt;code&gt;true&lt;/code&gt; に設定することによって制御されます。ただし、要素の再ソートを意味するため、ゼロを削除するコストは高くなります。可能であれば、最初に不要なゼロを追加しないことをお勧めします。 &lt;code&gt;maybe_compress&lt;/code&gt; の使用例は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="7b736905d1424538b57b87b5ff920aa3bf947b95" translate="yes" xml:space="preserve">
          <source>Offset from UTC (&amp;plusmn;hhmm), or nothing if no time zone is determinable.</source>
          <target state="translated">UTCからのオフセット（&amp;plusmn;hhmm）、またはタイムゾーンが決定できない場合は何もない。</target>
        </trans-unit>
        <trans-unit id="eb311ad3789b6d54187c5576755a1b07d395b7e5" translate="yes" xml:space="preserve">
          <source>Often it is useful to find the minimum value of a function rather than just the zeroes where it crosses the x-axis. &lt;code&gt;fminbnd&lt;/code&gt; is designed for the simpler, but very common, case of a univariate function where the interval to search is bounded. For unbounded minimization of a function with potentially many variables use &lt;code&gt;fminunc&lt;/code&gt; or &lt;code&gt;fminsearch&lt;/code&gt;. The two functions use different internal algorithms and some knowledge of the objective function is required. For functions which can be differentiated, &lt;code&gt;fminunc&lt;/code&gt; is appropriate. For functions with discontinuities, or for which a gradient search would fail, use &lt;code&gt;fminsearch&lt;/code&gt;. See &lt;a href=&quot;optimization#Optimization&quot;&gt;Optimization&lt;/a&gt;, for minimization with the presence of constraint functions. Note that searches can be made for maxima by simply inverting the objective function (&lt;code&gt;Fto_max = -Fto_min&lt;/code&gt;).</source>
          <target state="translated">多くの場合、x軸と交差するゼロだけではなく、関数の最小値を見つけると便利です。 &lt;code&gt;fminbnd&lt;/code&gt; は、検索する間隔が制限されている単変量関数のより単純ですが非常に一般的なケース用に設計されています。潜在的に多くの変数を持つ関数の無制限の最小化には、 &lt;code&gt;fminunc&lt;/code&gt; または &lt;code&gt;fminsearch&lt;/code&gt; を使用します。2つの関数は異なる内部アルゴリズムを使用し、目的関数の知識が必要です。区別できる関数には、 &lt;code&gt;fminunc&lt;/code&gt; が適しています。不連続性のある関数、または勾配探索が失敗する関数の場合、 &lt;code&gt;fminsearch&lt;/code&gt; を使用します。&lt;a href=&quot;optimization#Optimization&quot;&gt;最適化を&lt;/a&gt;参照、制約関数の存在による最小化。目的関数を反転するだけで最大値を検索できることに注意してください（ &lt;code&gt;Fto_max = -Fto_min&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="c654507ffc44ab281840ff9b19bd7c0bade7d999" translate="yes" xml:space="preserve">
          <source>Often people omit facts because they think they know what causes the problem and they conclude that some details don&amp;rsquo;t matter. Thus, you might assume that the name of the variable you use in an example does not matter. Well, probably it doesn&amp;rsquo;t, but one cannot be sure. Perhaps the bug is a stray memory reference which happens to fetch from the location where that name is stored in memory; perhaps, if the name were different, the contents of that location would fool the interpreter into doing the right thing despite the bug. Play it safe and give a specific, complete example.</source>
          <target state="translated">多くの場合、問題の原因はわかっていると考え、一部の詳細は重要ではないと結論を下して、事実を省略します。したがって、例で使用する変数の名前は重要ではないと考えるかもしれません。まあ、そうではないかもしれませんが、確かなことはありません。おそらく、そのバグは、その名前がメモリに格納されている場所から偶然にフェッチされる、メモリの参照に関するものです。おそらく、名前が異なる場合、その場所の内容は、バグにもかかわらず、通訳をだまして正しいことをさせるでしょう。安全にプレーし、具体的で完全な例を挙げてください。</target>
        </trans-unit>
        <trans-unit id="d168c9755b75a77ddf79de49c70a8e37ffdb0841" translate="yes" xml:space="preserve">
          <source>Often people who encounter a bug spend a lot of time investigating which changes to the input file will make the bug go away and which changes will not affect it. Such information is usually not necessary to enable us to fix bugs in Octave, but if you can find a simpler example to report &lt;em&gt;instead&lt;/em&gt; of the original one, that is a convenience. Errors in the output will be easier to spot, running under the debugger will take less time, etc. Most Octave bugs involve just one function, so the most straightforward way to simplify an example is to delete all the function definitions except the one in which the bug occurs.</source>
          <target state="translated">多くの場合、バグに遭遇した人は、入力ファイルへのどの変更がバグを解消し、どの変更が影響を及ぼさないかを調査するのに多くの時間を費やします。このような情報は通常、Octaveのバグを修正するために必要ではありませんが、元の例の&lt;em&gt;代わり&lt;/em&gt;に報告する簡単な例を見つけることができれば、それは便利です。出力のエラーは特定しやすくなり、デバッガーでの実行にかかる時間が短くなります。ほとんどのOctaveのバグには関数が1つだけ含まれるため、例を簡略化する最も簡単な方法は、関数定義を除くすべての関数定義を削除することです。バグが発生します。</target>
        </trans-unit>
        <trans-unit id="acc371207039287d6cf7d5d628e0c1ae99220148" translate="yes" xml:space="preserve">
          <source>Often the observed symptom is incorrect output when your program is run. Unfortunately, this is not enough information unless the program is short and simple. It is very helpful if you can include an explanation of the expected output, and why the actual output is incorrect.</source>
          <target state="translated">しばしば観察される症状は、プログラムを実行したときに誤った出力をしていることです。残念ながら、プログラムが短くシンプルなものでない限り、これは十分な情報ではありません。予想される出力の説明と、なぜ実際の出力が正しくないのかの説明を入れていただけると非常に助かります。</target>
        </trans-unit>
        <trans-unit id="a73110f8381ef0ce6d02d65680e7183ceefa040d" translate="yes" xml:space="preserve">
          <source>Older versions of Octave used a different random number generator. The new generator is used by default as it is significantly faster than the old generator, and produces random numbers with a significantly longer cycle time. However, in some circumstances it might be desirable to obtain the same random sequences as produced by the old generators. To do this the keyword &lt;code&gt;&quot;seed&quot;&lt;/code&gt; is used to specify that the old generators should be used, as in</source>
          <target state="translated">Octaveの古いバージョンでは、別の乱数ジェネレータが使用されていました。新しいジェネレーターは、古いジェネレーターより大幅に高速で、サイクルタイムが大幅に長い乱数を生成するため、デフォルトで使用されます。ただし、状況によっては、古いジェネレータによって生成されたものと同じランダムシーケンスを取得することが望ましい場合があります。これを行うには、キーワード &lt;code&gt;&quot;seed&quot;&lt;/code&gt; を使用して、次のように古いジェネレーターを使用するように指定します。</target>
        </trans-unit>
        <trans-unit id="6efc6f4f94c6eb32f2076913073fc7d61f1a5c40" translate="yes" xml:space="preserve">
          <source>On 64-bit systems, Octave uses 64-bit integers for indexing arrays by default. If the configure script determines that your &lt;small&gt;BLAS&lt;/small&gt; library uses 32-bit integers, then operations using the following libraries are limited to arrays with dimensions that are smaller than &lt;em&gt;2^{31}&lt;/em&gt; elements:</source>
          <target state="translated">64ビットシステムでは、Octaveはデフォルトで配列のインデックス付けに64ビット整数を使用します。&lt;small&gt;BLAS&lt;/small&gt;ライブラリが32ビット整数を使用するとconfigureスクリプトが判断した場合、次のライブラリを使用する操作は、&lt;em&gt;2 ^ {31}&lt;/em&gt;要素より小さい次元を持つ配列に制限されます。</target>
        </trans-unit>
        <trans-unit id="c270d77dc8d4758dde671c1f5006dbe565eb6007" translate="yes" xml:space="preserve">
          <source>On FreeBSD systems Octave may hang while initializing some internal constants. The fix appears to be to use</source>
          <target state="translated">FreeBSDシステムでは、いくつかの内部定数の初期化中にOctaveがハングすることがあります。これを修正するには</target>
        </trans-unit>
        <trans-unit id="79fb3a2269180dfd25bd318965dcbd28e1fe2a22" translate="yes" xml:space="preserve">
          <source>On NeXT systems, if you get errors like this:</source>
          <target state="translated">NeXTシステムでは、このようなエラーが発生した場合。</target>
        </trans-unit>
        <trans-unit id="6d130be75348633d275d33e7772009456a98560a" translate="yes" xml:space="preserve">
          <source>On NeXT systems, linking to</source>
          <target state="translated">NeXT システムでは</target>
        </trans-unit>
        <trans-unit id="5621332b5527b9ea2c74af286a0125d9a528e299" translate="yes" xml:space="preserve">
          <source>On UNIX-like systems it is possible to make both per-user and system-wide installations of a package. If the user performing the installation is &lt;code&gt;root&lt;/code&gt; the packages will be installed in a system-wide directory that defaults to</source>
          <target state="translated">UNIXライクなシステムでは、パッケージをユーザー単位でインストールすることも、システム全体にインストールすることもできます。インストールを実行するユーザーが &lt;code&gt;root&lt;/code&gt; の場合、パッケージはシステム全体のディレクトリにインストールされ、デフォルトで</target>
        </trans-unit>
        <trans-unit id="8fb1f22e52b2f474004b4bd34e62211a2b9441e2" translate="yes" xml:space="preserve">
          <source>On Windows platforms, Octave uses software rendering for the OpenGL graphics toolkits (&lt;code&gt;&quot;qt&quot;&lt;/code&gt; and &lt;code&gt;&quot;fltk&quot;&lt;/code&gt;) by default. This is done to avoid rendering and printing issues due to imperfect OpenGL driver implementations for diverse graphic cards from different vendors. As a down-side, software rendering might be considerably slower than hardware accelerated rendering. To permanently switch back to hardware accelerated rendering with your graphic card drivers, rename the following file while Octave is closed:</source>
          <target state="translated">Windowsプラットフォームでは、OctaveはデフォルトでOpenGLグラフィックツールキット（ &lt;code&gt;&quot;qt&quot;&lt;/code&gt; および &lt;code&gt;&quot;fltk&quot;&lt;/code&gt; ）のソフトウェアレンダリングを使用します。これは、異なるベンダーの多様なグラフィックカード用の不完全なOpenGLドライバ実装によるレンダリングと印刷の問題を回避するために行われます。欠点として、ソフトウェアレンダリングはハードウェアアクセラレーションレンダリングよりもかなり遅くなる可能性があります。グラフィックカードドライバーを使用してハードウェアアクセラレートレンダリングに永続的に切り替えるには、Octaveが閉じている間に次のファイルの名前を変更します。</target>
        </trans-unit>
        <trans-unit id="5412596609b575f326d82b89cbdd1db02e1dc200" translate="yes" xml:space="preserve">
          <source>On Windows systems, while forward slash file separators do work, they are replaced by backslashes; in addition drive letters are stripped of leading file separators to obtain a valid file path.</source>
          <target state="translated">Windows システムでは、前方スラッシュのファイルセパレータは機能しますが、それらはバックスラッシュに置き換えられます。</target>
        </trans-unit>
        <trans-unit id="a65fca6e325832ab1be88028eb26010f4bf6ffbc" translate="yes" xml:space="preserve">
          <source>On Windows, return the value of the registry key &lt;var&gt;subkey&lt;/var&gt; from the root key &lt;var&gt;rootkey&lt;/var&gt;. You can specify the name of the queried registry value with the optional argument &lt;var&gt;valuename&lt;/var&gt;. Otherwise, if called with only two arguments or &lt;var&gt;valuename&lt;/var&gt; is empty, then the default value of &lt;var&gt;subkey&lt;/var&gt; is returned. If the registry value is of type &lt;code&gt;&quot;REG_DWORD&quot;&lt;/code&gt; then &lt;var&gt;value&lt;/var&gt; is of class int32. If the value is of the type &lt;code&gt;&quot;REG_SZ&quot;&lt;/code&gt; or &lt;code&gt;&quot;REG_EXPAND_SZ&quot;&lt;/code&gt; a string is returned.</source>
          <target state="translated">Windowsでは、ルートキー &lt;var&gt;rootkey&lt;/var&gt; からレジストリキー &lt;var&gt;subkey&lt;/var&gt; 値を返します。オプションの引数 &lt;var&gt;valuename&lt;/var&gt; を使用して、照会されたレジストリ値の名前を指定できます。それ以外の場合、2つの引数のみで呼び出されるか、 &lt;var&gt;valuename&lt;/var&gt; が空の場合、 &lt;var&gt;subkey&lt;/var&gt; のデフォルト値が返されます。レジストリ値のタイプが &lt;code&gt;&quot;REG_DWORD&quot;&lt;/code&gt; 場合、 &lt;var&gt;value&lt;/var&gt; はクラスint32です。値が &lt;code&gt;&quot;REG_SZ&quot;&lt;/code&gt; または &lt;code&gt;&quot;REG_EXPAND_SZ&quot;&lt;/code&gt; タイプの場合、文字列が返されます。</target>
        </trans-unit>
        <trans-unit id="aaa94d01a1f7879bb46d786a18eaf5e78923f878" translate="yes" xml:space="preserve">
          <source>On exit, &lt;var&gt;y&lt;/var&gt; is a unit vector such that:</source>
          <target state="translated">終了時、 &lt;var&gt;y&lt;/var&gt; は次のような単位ベクトルです。</target>
        </trans-unit>
        <trans-unit id="d64ce774742d252dd10b1d855a7061306cc0eaac" translate="yes" xml:space="preserve">
          <source>On exit, the function returns &lt;var&gt;x&lt;/var&gt;, the approximate minimum point, and &lt;var&gt;fval&lt;/var&gt;, the function evaluated &lt;var&gt;x&lt;/var&gt;.</source>
          <target state="translated">関数は終了時に、おおよその最小点である &lt;var&gt;x&lt;/var&gt; と、 &lt;var&gt;x&lt;/var&gt; を評価した関数である &lt;var&gt;fval&lt;/var&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="c0d8b6f7acd7bc16597dd4c46d60facb0ae9db87" translate="yes" xml:space="preserve">
          <source>On exit, the function returns &lt;var&gt;x&lt;/var&gt;, the approximate zero point, and &lt;var&gt;fval&lt;/var&gt;, the function evaluated at &lt;var&gt;x&lt;/var&gt;.</source>
          <target state="translated">終了時に、関数の戻り &lt;var&gt;x&lt;/var&gt; は、おおよそ零点を、および &lt;var&gt;fval&lt;/var&gt; 、で評価関数 &lt;var&gt;x&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="4bae3301f8bf9a8b8e99e45c0ce8c0f9258d231a" translate="yes" xml:space="preserve">
          <source>On exit, the function returns &lt;var&gt;x&lt;/var&gt;, the minimum point, and &lt;var&gt;fval&lt;/var&gt;, the function value at the minimum.</source>
          <target state="translated">関数は終了時に、最小点である &lt;var&gt;x&lt;/var&gt; と最小値での関数値である &lt;var&gt;fval&lt;/var&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="244beb5a171a0831569412566a2af631ca2a2e40" translate="yes" xml:space="preserve">
          <source>On most systems, Octave is started with the shell command &amp;lsquo;</source>
          <target state="translated">ほとんどのシステムでは、Octaveはシェルコマンド '</target>
        </trans-unit>
        <trans-unit id="c9993e70428bf93953df568efd7ff830a2e69578" translate="yes" xml:space="preserve">
          <source>On most systems, this is equivalent to &lt;code&gt;getenv (&quot;HOME&quot;)&lt;/code&gt;. On Windows systems, if the environment variable &lt;code&gt;HOME&lt;/code&gt; is not set then it is equivalent to &lt;code&gt;fullfile (getenv (&quot;HOMEDRIVE&quot;), getenv (&quot;HOMEPATH&quot;))&lt;/code&gt;</source>
          <target state="translated">ほとんどのシステムでは、これは &lt;code&gt;getenv (&quot;HOME&quot;)&lt;/code&gt; と同等です。Windowsシステムでは、環境変数 &lt;code&gt;HOME&lt;/code&gt; が設定されていない場合、それは &lt;code&gt;fullfile (getenv (&quot;HOMEDRIVE&quot;), getenv (&quot;HOMEPATH&quot;))&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="af9580cc68007dbafa727ff1f5b6143a3b2ef6da" translate="yes" xml:space="preserve">
          <source>On most terminals, you can also use the up and down arrow keys in place of</source>
          <target state="translated">ほとんどの端末では、上矢印キーと下矢印キーの代わりに</target>
        </trans-unit>
        <trans-unit id="448e25ee06d3e6134b6d8a97a45804aa908d0a0b" translate="yes" xml:space="preserve">
          <source>On non-Windows platforms this function fails with an error.</source>
          <target state="translated">Windows 以外のプラットフォームでは、この関数はエラーで失敗します。</target>
        </trans-unit>
        <trans-unit id="a7b96faf41513dd9b40acd021758d6ca2be5f023" translate="yes" xml:space="preserve">
          <source>On output, &lt;var&gt;nest&lt;/var&gt; is the desired estimate, &lt;var&gt;v&lt;/var&gt; and &lt;var&gt;w&lt;/var&gt; are vectors such that &lt;code&gt;&lt;var&gt;w&lt;/var&gt; = &lt;var&gt;A&lt;/var&gt; * &lt;var&gt;v&lt;/var&gt;&lt;/code&gt;, with &lt;code&gt;norm (&lt;var&gt;w&lt;/var&gt;, 1)&lt;/code&gt; = &lt;code&gt;&lt;var&gt;c&lt;/var&gt; * norm (&lt;var&gt;v&lt;/var&gt;, 1)&lt;/code&gt;. &lt;var&gt;iter&lt;/var&gt; contains in &lt;code&gt;&lt;var&gt;iter&lt;/var&gt;(1)&lt;/code&gt; the number of iterations (the maximum is hardcoded to 5) and in &lt;code&gt;&lt;var&gt;iter&lt;/var&gt;(2)&lt;/code&gt; the total number of products &lt;code&gt;&lt;var&gt;A&lt;/var&gt; * &lt;var&gt;x&lt;/var&gt;&lt;/code&gt; or &lt;code&gt;&lt;var&gt;A&lt;/var&gt;' * &lt;var&gt;x&lt;/var&gt;&lt;/code&gt; performed by the algorithm.</source>
          <target state="translated">出力では、 &lt;var&gt;nest&lt;/var&gt; は希望する推定値、 &lt;var&gt;v&lt;/var&gt; と &lt;var&gt;w&lt;/var&gt; は &lt;code&gt;&lt;var&gt;w&lt;/var&gt; = &lt;var&gt;A&lt;/var&gt; * &lt;var&gt;v&lt;/var&gt;&lt;/code&gt; で、 &lt;code&gt;norm (&lt;var&gt;w&lt;/var&gt;, 1)&lt;/code&gt; = &lt;code&gt;&lt;var&gt;c&lt;/var&gt; * norm (&lt;var&gt;v&lt;/var&gt;, 1)&lt;/code&gt; ベクトルです。 &lt;var&gt;iter&lt;/var&gt; には、 &lt;code&gt;&lt;var&gt;iter&lt;/var&gt;(1)&lt;/code&gt; の反復回数（最大値は5にハードコードされています）が含まれ、 &lt;code&gt;&lt;var&gt;iter&lt;/var&gt;(2)&lt;/code&gt; には、アルゴリズムによって実行された積 &lt;code&gt;&lt;var&gt;A&lt;/var&gt; * &lt;var&gt;x&lt;/var&gt;&lt;/code&gt; または &lt;code&gt;&lt;var&gt;A&lt;/var&gt;' * &lt;var&gt;x&lt;/var&gt;&lt;/code&gt; の総数が含まれます。</target>
        </trans-unit>
        <trans-unit id="56dc721ae2b31a74a7e479b2125e35700eb73c69" translate="yes" xml:space="preserve">
          <source>On return, &lt;var&gt;info&lt;/var&gt; is set to</source>
          <target state="translated">戻ったとき、 &lt;var&gt;info&lt;/var&gt; は</target>
        </trans-unit>
        <trans-unit id="7bfb6ff4ae83c31558564497c3266cb3b3e61289" translate="yes" xml:space="preserve">
          <source>On return, &lt;var&gt;x&lt;/var&gt; is the location of the minimum and &lt;var&gt;fval&lt;/var&gt; contains the value of the objective function at &lt;var&gt;x&lt;/var&gt;.</source>
          <target state="translated">戻ったとき、 &lt;var&gt;x&lt;/var&gt; は最小値の位置であり、 &lt;var&gt;fval&lt;/var&gt; には &lt;var&gt;x&lt;/var&gt; での目的関数の値が含まれている。</target>
        </trans-unit>
        <trans-unit id="764f4d33381b94a346c4c12ec0945e8f4f6d507c" translate="yes" xml:space="preserve">
          <source>On some DEC alpha systems there may be a problem with the &lt;code&gt;libdxml&lt;/code&gt; library, resulting in floating point errors and/or segmentation faults in the linear algebra routines called by Octave. If you encounter such problems, then you should modify the configure script so that &lt;code&gt;SPECIAL_MATH_LIB&lt;/code&gt; is not set to &lt;code&gt;-ldxml&lt;/code&gt;.</source>
          <target state="translated">一部のDECアルファシステムでは、 &lt;code&gt;libdxml&lt;/code&gt; ライブラリに問題がある可能性があり、その結果、Octaveによって呼び出される線形代数ルーチンで浮動小数点エラーやセグメンテーションエラーが発生します。このような問題が発生した場合は、構成スクリプトを変更して、 &lt;code&gt;SPECIAL_MATH_LIB&lt;/code&gt; が &lt;code&gt;-ldxml&lt;/code&gt; に設定されないようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="e17b2de5d6904b91ef18d4debd0836acb1504591" translate="yes" xml:space="preserve">
          <source>On some SCO systems, &lt;code&gt;info&lt;/code&gt; fails to compile if &lt;code&gt;HAVE_TERMIOS_H&lt;/code&gt; is defined in</source>
          <target state="translated">一部のSCOシステムでは、 &lt;code&gt;HAVE_TERMIOS_H&lt;/code&gt; がで定義されている場合、 &lt;code&gt;info&lt;/code&gt; はコンパイルに失敗します</target>
        </trans-unit>
        <trans-unit id="a90d68183e9bdaa17e9dc0cda30a68350c7dc00c" translate="yes" xml:space="preserve">
          <source>On some systems the &lt;code&gt;SIG_IGN&lt;/code&gt; macro is defined to be something like this:</source>
          <target state="translated">一部のシステムでは、 &lt;code&gt;SIG_IGN&lt;/code&gt; マクロは次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="a68a0b2690f3397ecfca722b6757620e7d388ae3" translate="yes" xml:space="preserve">
          <source>On some systems you can obtain many of Octave&amp;rsquo;s build dependencies automatically. The commands for doing this vary by system. Similarly, the names of pre-compiled packages vary by system and do not always match exactly the names listed in &lt;a href=&quot;build-tools#Build-Tools&quot;&gt;Build Tools&lt;/a&gt; and &lt;a href=&quot;external-packages#External-Packages&quot;&gt;External Packages&lt;/a&gt;.</source>
          <target state="translated">一部のシステムでは、Octaveのビルド依存関係の多くを自動的に取得できます。これを行うためのコマンドはシステムによって異なります。同様に、プリコンパイルされたパッケージの名前はシステムによって異なり、&lt;a href=&quot;build-tools#Build-Tools&quot;&gt;ビルドツール&lt;/a&gt;と&lt;a href=&quot;external-packages#External-Packages&quot;&gt;外部パッケージに&lt;/a&gt;リストされている名前と必ずしも正確に一致するとは限りません。</target>
        </trans-unit>
        <trans-unit id="4cb74c598597e0f92be47be8e95a0aa17cfe660f" translate="yes" xml:space="preserve">
          <source>On systems that support job control, you can suspend Octave by sending it a &lt;code&gt;SIGTSTP&lt;/code&gt; signal, usually by typing</source>
          <target state="translated">ジョブ制御をサポートするシステムでは、通常は次のように入力して &lt;code&gt;SIGTSTP&lt;/code&gt; シグナルを送信することにより、Octaveを一時停止できます。</target>
        </trans-unit>
        <trans-unit id="1420cb9694bb10345b6a9b8e6824674edaa3bd25" translate="yes" xml:space="preserve">
          <source>On systems where the reference &lt;small&gt;BLAS&lt;/small&gt; library is used the following matrix-by-vector multiplication incorrectly handles NaN values of the form &lt;code&gt;NaN * 0&lt;/code&gt;.</source>
          <target state="translated">参照&lt;small&gt;BLAS&lt;/small&gt;ライブラリが使用されているシステムでは、次の行列とベクトルの乗算が &lt;code&gt;NaN * 0&lt;/code&gt; 形式のNaN値を誤って処理します。</target>
        </trans-unit>
        <trans-unit id="1af3772783e3704e3dc24adc1abc9038a9725c72" translate="yes" xml:space="preserve">
          <source>On systems with &lt;code&gt;apt-get&lt;/code&gt; (Debian, Ubuntu, etc.), you may be able to install most of the tools and external packages using a command similar to</source>
          <target state="translated">&lt;code&gt;apt-get&lt;/code&gt; を備えたシステム（Debian、Ubuntuなど）では、次のようなコマンドを使用して、ほとんどのツールと外部パッケージをインストールできる場合があります。</target>
        </trans-unit>
        <trans-unit id="614329c751f1c42ee7ba089a91f20cef6b560dfe" translate="yes" xml:space="preserve">
          <source>On systems with &lt;code&gt;yum&lt;/code&gt; (Fedora, Red Hat, etc.), you may be able to install most of the tools and external packages using a command similar to</source>
          <target state="translated">&lt;code&gt;yum&lt;/code&gt; を備えたシステム（Fedora、Red Hatなど）では、次のようなコマンドを使用して、ほとんどのツールと外部パッケージをインストールできる場合があります。</target>
        </trans-unit>
        <trans-unit id="c9ee4d752ef3ecd6c6371c4bc5eb16d53bd99c51" translate="yes" xml:space="preserve">
          <source>On the contrary, if &lt;code&gt;&quot;double&quot;&lt;/code&gt; is given, the operation is performed in double precision even for single precision inputs.</source>
          <target state="translated">逆に &lt;code&gt;&quot;double&quot;&lt;/code&gt; を指定すると、単精度入力でも倍精度で演算されます。</target>
        </trans-unit>
        <trans-unit id="322f5f341a6f14c5ef963fc797cb9613ccc4405d" translate="yes" xml:space="preserve">
          <source>On the other hand, once you have shown people where to find the change, you need not explain its purpose. Thus, if you add a new function, all you need to say about it is that it is new. If you feel that the purpose needs explaining, it probably does&amp;mdash;but the explanation will be much more useful if you put it in comments in the code.</source>
          <target state="translated">一方、変更の場所を人々に示したら、その目的を説明する必要はありません。したがって、新しい関数を追加する場合、それについて言う必要があるのは、それが新しいということだけです。目的を説明する必要があると思われる場合は、おそらく説明しますが、コード内のコメントに含めると、説明がはるかに役立ちます。</target>
        </trans-unit>
        <trans-unit id="054360e603a255e7b6a8f982437b213f64d463f7" translate="yes" xml:space="preserve">
          <source>Once a constructor and display method exist, it is possible to create an instance of the class. It is also possible to check the class type and examine the underlying structure.</source>
          <target state="translated">コンストラクタと表示メソッドが存在すれば、クラスのインスタンスを作成することができます。また、クラスの型を確認して、その下の構造を調べることも可能です。</target>
        </trans-unit>
        <trans-unit id="ecbfcb0565dcc8d998ddb2b67b1c2924fff1fc55" translate="yes" xml:space="preserve">
          <source>Once a file has been opened for writing a string can be written to the file using the &lt;code&gt;fputs&lt;/code&gt; function. The following example shows how to write the string &amp;lsquo;</source>
          <target state="translated">ファイルを開いて書き込みを行うと、関数 &lt;code&gt;fputs&lt;/code&gt; を使用して文字列をファイルに書き込むことができます。次の例は、文字列「</target>
        </trans-unit>
        <trans-unit id="7c172d37d41d6d71b4ca74d7819fd7c878af0f37" translate="yes" xml:space="preserve">
          <source>Once a file has been opened its status can be acquired. As an example the &lt;code&gt;feof&lt;/code&gt; functions determines if the end of the file has been reached. This can be very useful when reading small parts of a file at a time. The following example shows how to read one line at a time from a file until the end has been reached.</source>
          <target state="translated">ファイルを開くと、そのステータスを取得できます。例として、 &lt;code&gt;feof&lt;/code&gt; 関数はファイルの終わりに達したかどうかを判別します。これは、ファイルの小さな部分を一度に読み取る場合に非常に役立ちます。次の例は、ファイルから最後に達するまで、一度に1行ずつ読み取る方法を示しています。</target>
        </trans-unit>
        <trans-unit id="383a8e9a73eb4c09c952ed29a4a3797ae1fd21be" translate="yes" xml:space="preserve">
          <source>Once a property in added to an &lt;code&gt;hggroup&lt;/code&gt;, it is not linked to any other property of either the children of the group, or any other graphics object. Add so to control the way in which this newly added property is used, the &lt;code&gt;addlistener&lt;/code&gt; function is used to define a callback function that is executed when the property is altered.</source>
          <target state="translated">プロパティが &lt;code&gt;hggroup&lt;/code&gt; に追加されると、そのプロパティは、グループの子または他のグラフィックスオブジェクトのいずれかの他のプロパティにはリンクされません。追加して、この新しく追加されたプロパティの使用方法を制御するには、 &lt;code&gt;addlistener&lt;/code&gt; 関数を使用して、プロパティが変更されたときに実行されるコールバック関数を定義します。</target>
        </trans-unit>
        <trans-unit id="6c7e8b255551d3ba35f55c6b4d5342c51c2f853d" translate="yes" xml:space="preserve">
          <source>Once an object has been created it is natural to find out what fields the object has, and to read (get) and write (set) them.</source>
          <target state="translated">オブジェクトが作成されたら、そのオブジェクトがどのようなフィールドを持っているかを調べ、それを読み取ったり(取得したり)、書き込んだり(設定したり)するのは当然のことです。</target>
        </trans-unit>
        <trans-unit id="8e5ddd6b2c15db4cb685362fca6462753bf853c3" translate="yes" xml:space="preserve">
          <source>Once one or more variables have been saved to a file, they can be read into memory using the &lt;code&gt;load&lt;/code&gt; command.</source>
          <target state="translated">1つ以上の変数がファイルに保存されると、 &lt;code&gt;load&lt;/code&gt; コマンドを使用してそれらをメモリに読み込むことができます。</target>
        </trans-unit>
        <trans-unit id="855968a99a08ab63d162c92e45455b2056c9f74b" translate="yes" xml:space="preserve">
          <source>Once the GNU Info browser is running, help for using it is available using the command</source>
          <target state="translated">GNU Infoブラウザが実行されていると、それを使うためのヘルプがコマンドを使って利用できます。</target>
        </trans-unit>
        <trans-unit id="6baf57478cad1de3a094a62f4d373ac5b9de538b" translate="yes" xml:space="preserve">
          <source>Once the end of data has been reached, &lt;code&gt;getgrent&lt;/code&gt; returns 0.</source>
          <target state="translated">データの終わりに到達すると、 &lt;code&gt;getgrent&lt;/code&gt; は0を返します。</target>
        </trans-unit>
        <trans-unit id="faa1e6214bddbef30bf45f4895094653bcc853c3" translate="yes" xml:space="preserve">
          <source>Once the end of the data has been reached, &lt;code&gt;getpwent&lt;/code&gt; returns 0.</source>
          <target state="translated">データの終わりに到達すると、 &lt;code&gt;getpwent&lt;/code&gt; は0を返します。</target>
        </trans-unit>
        <trans-unit id="06ead81a2ee80e5387d4397fde87b1779f322d1e" translate="yes" xml:space="preserve">
          <source>Once this function is defined, you can ask Octave to evaluate it by typing the name of the function.</source>
          <target state="translated">この関数が定義されると,関数の名前を入力することで,Octaveにそれを評価するように求めることができます。</target>
        </trans-unit>
        <trans-unit id="4bf06dd012888169c6479043f9d0da72ad8c18aa" translate="yes" xml:space="preserve">
          <source>Once you have learned Octave, you may want to write self-contained Octave scripts, using the &amp;lsquo;</source>
          <target state="translated">Octaveを学習したら、 'を使用して自己完結型のOctaveスクリプトを記述できます。</target>
        </trans-unit>
        <trans-unit id="302844c1400b06037c34e7bbd711d266691961bd" translate="yes" xml:space="preserve">
          <source>Once you have successfully compiled Octave, run &lt;code&gt;make install&lt;/code&gt;.</source>
          <target state="translated">Octaveのコンパイルに成功したら、 &lt;code&gt;make install&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="58ea4fdf32c4543112311658f8ef5792e4f449fe" translate="yes" xml:space="preserve">
          <source>Once you know the name of the function you wish to use, you can get more help on the function by simply including the name as an argument to help. For example,</source>
          <target state="translated">使いたい関数の名前がわかったら、その名前をヘルプの引数に含めるだけで、その関数についてより多くのヘルプを得ることができます。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="b5079d0436d7d0ff4478902db7b87ac5c5b6c603" translate="yes" xml:space="preserve">
          <source>One additional complication of strings in Octave is the difference between single quoted and double quoted strings. To find out if an &lt;code&gt;octave_value&lt;/code&gt; contains a single or double quoted string use one of the predicate tests shown below.</source>
          <target state="translated">Octaveでの文字列のもう1つの複雑な点は、単一引用符付き文字列と二重引用符付き文字列の違いです。 &lt;code&gt;octave_value&lt;/code&gt; に一重引用符または二重引用符で囲まれた文字列が含まれているかどうかを確認するには、以下に示す述語テストのいずれかを使用します。</target>
        </trans-unit>
        <trans-unit id="080bec73f3571cc8433591497b2b2e2b806a7180" translate="yes" xml:space="preserve">
          <source>One advantage of using the &lt;code&gt;switch&lt;/code&gt; statement compared to using &lt;code&gt;if&lt;/code&gt; statements is that the &lt;var&gt;label&lt;/var&gt;s can be strings. If an &lt;code&gt;if&lt;/code&gt; statement is used it is &lt;em&gt;not&lt;/em&gt; possible to write</source>
          <target state="translated">&lt;code&gt;if&lt;/code&gt; ステートメントを使用する場合と比較して &lt;code&gt;switch&lt;/code&gt; ステートメントを使用する利点の1つは、 &lt;var&gt;label&lt;/var&gt; sを文字列にできることです。 &lt;code&gt;if&lt;/code&gt; ステートメントを使用する場合、次のように書くことは&lt;em&gt;できません。&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9e972ffbe45931633d2ef8b7151cf81d41790928" translate="yes" xml:space="preserve">
          <source>One can insert LaTeX inline math, surrounded by single &amp;lsquo;</source>
          <target state="translated">単一で囲まれたLaTeXインライン数学を挿入できます '</target>
        </trans-unit>
        <trans-unit id="5893b0d6845f8c0863e38df2953a2eb80d0c85cd" translate="yes" xml:space="preserve">
          <source>One can perform exactly the same operations on Cell arrays in mex-files as in oct-files. An example that duplicates the function of the</source>
          <target state="translated">mex-files のセル配列に対しては、Oct-files と全く同じ操作を行うことができます。の機能を複製した例があります。</target>
        </trans-unit>
        <trans-unit id="64442627b907dbc4da65f7edb2a448a7b6f48b53" translate="yes" xml:space="preserve">
          <source>One can see, that even a &lt;code&gt;java.lang.Double&lt;/code&gt; is not converted to an Octave &lt;code&gt;double&lt;/code&gt;, when created by &lt;a href=&quot;java-interface-functions#XREFjavaObject&quot;&gt;javaObject&lt;/a&gt;. But ambiguities might arise, if the Java classes &lt;code&gt;java.lang.Double&lt;/code&gt; or &lt;code&gt;double&lt;/code&gt; are parameters of a method (or a constructor). In this case they can be converted into one another, depending on the context.</source>
          <target state="translated">&lt;a href=&quot;java-interface-functions#XREFjavaObject&quot;&gt;javaObject&lt;/a&gt;によって作成された場合、 &lt;code&gt;java.lang.Double&lt;/code&gt; でさえOctave &lt;code&gt;double&lt;/code&gt; に変換されないことがわかります。ただし、Javaクラス &lt;code&gt;java.lang.Double&lt;/code&gt; または &lt;code&gt;double&lt;/code&gt; がメソッド（またはコンストラクター）のパラメーターである場合は、あいまいさが生じる可能性があります。この場合、コンテキストに応じて、相互に変換できます。</target>
        </trans-unit>
        <trans-unit id="28cc2d537c662aed82db7809e480880aa1b8f607" translate="yes" xml:space="preserve">
          <source>One common use of cell arrays is to store multiple strings in the same variable. It is also possible to store multiple strings in a character matrix by letting each row be a string. This, however, introduces the problem that all strings must be of equal length. Therefore, it is recommended to use cell arrays to store multiple strings. For cases, where the character matrix representation is required for an operation, there are several functions that convert a cell array of strings to a character array and back. &lt;code&gt;char&lt;/code&gt; and &lt;code&gt;strvcat&lt;/code&gt; convert cell arrays to a character array (see &lt;a href=&quot;concatenating-strings#Concatenating-Strings&quot;&gt;Concatenating Strings&lt;/a&gt;), while the function &lt;code&gt;cellstr&lt;/code&gt; converts a character array to a cell array of strings:</source>
          <target state="translated">セル配列の一般的な用途の1つは、複数の文字列を同じ変数に格納することです。各行を文字列にすることで、文字マトリックスに複数の文字列を格納することもできます。ただし、これにより、すべての文字列が同じ長さでなければならないという問題が生じます。したがって、セル配列を使用して複数の文字列を格納することをお勧めします。操作に文字行列表現が必要な場合、文字列のセル配列を文字配列に変換したり、元に戻したりする関数がいくつかあります。 &lt;code&gt;char&lt;/code&gt; と &lt;code&gt;strvcat&lt;/code&gt; はセル配列を文字配列に変換します（「文字列の&lt;a href=&quot;concatenating-strings#Concatenating-Strings&quot;&gt;連結&lt;/a&gt;」を参照）。一方、関数 &lt;code&gt;cellstr&lt;/code&gt; は文字配列を文字列のセル配列に変換します。</target>
        </trans-unit>
        <trans-unit id="fed86725087e68440c010d0987378a8ba697fd6e" translate="yes" xml:space="preserve">
          <source>One difficulty of commands occurs when one of the string input arguments is stored in a variable. Because Octave can&amp;rsquo;t tell the difference between a variable name and an ordinary string, it is not possible to pass a variable as input to a command. In such a situation a command must be called as a function. For example:</source>
          <target state="translated">文字列入力引数の1つが変数に格納されている場合、コマンドの1つの問題が発生します。Octaveは変数名と通常の文字列の違いを認識できないため、コマンドへの入力として変数を渡すことはできません。このような状況では、コマンドを関数として呼び出す必要があります。例えば：</target>
        </trans-unit>
        <trans-unit id="917eb3f3ed94cf96b287d64bf43e862e9b733acc" translate="yes" xml:space="preserve">
          <source>One further advantage of using cell arrays to store multiple strings is that most functions for string manipulations included with Octave support this representation. As an example, it is possible to compare one string with many others using the &lt;code&gt;strcmp&lt;/code&gt; function. If one of the arguments to this function is a string and the other is a cell array of strings, each element of the cell array will be compared to the string argument:</source>
          <target state="translated">セル配列を使用して複数の文字列を格納するもう1つの利点は、Octaveに含まれている文字列操作用のほとんどの関数がこの表現をサポートしていることです。例として、 &lt;code&gt;strcmp&lt;/code&gt; 関数を使用して、1つの文字列を他の多くの文字列と比較することが可能です。この関数の引数の1つが文字列で、もう1つが文字列のセル配列の場合、セル配列の各要素は文字列引数と比較されます。</target>
        </trans-unit>
        <trans-unit id="53d61e462ca4ef9ec8e275892ec7f8287bfaa6a0" translate="yes" xml:space="preserve">
          <source>One kluge around this problem is to extract</source>
          <target state="translated">この問題を回避するための一つのクルージュは、抽出することです。</target>
        </trans-unit>
        <trans-unit id="7e3f32f5a450b4eefda350fb8960fc28aa48abc2" translate="yes" xml:space="preserve">
          <source>One principal goal of descriptive statistics is to represent the essence of a large data set concisely. Octave provides the mean, median, and mode functions which all summarize a data set with just a single number corresponding to the central tendency of the data.</source>
          <target state="translated">記述統計の主な目的の1つは,大きなデータセットの本質を簡潔に表現することである。Octaveは,平均,中央値,モード関数を提供し,これらはすべてデータの中心傾向に対応するたった一つの数値でデータ集合を要約している。</target>
        </trans-unit>
        <trans-unit id="8e126edecc03b4a7d977d1c93c86de0a1004c3ce" translate="yes" xml:space="preserve">
          <source>One relevant question is, what happens when a character matrix is created from strings of different length. The answer is that Octave puts blank characters at the end of strings shorter than the longest string. It is possible to use a different character than the blank character using the &lt;code&gt;string_fill_char&lt;/code&gt; function.</source>
          <target state="translated">関連する質問の1つは、文字マトリックスが異なる長さの文字列から作成されるとどうなるかです。その答えは、Octaveは、最長の文字列よりも短い文字列の末尾に空白文字を配置することです。 &lt;code&gt;string_fill_char&lt;/code&gt; 関数を使用して、空白文字とは異なる文字を使用することができます。</target>
        </trans-unit>
        <trans-unit id="a20d150b55253eb13ce2dd8cb0270c36d67f254a" translate="yes" xml:space="preserve">
          <source>One restriction for persistent variables is, that neither input nor output arguments of a function can be persistent:</source>
          <target state="translated">永続変数の制限の一つは、関数の入力引数も出力引数も永続化できないということです。</target>
        </trans-unit>
        <trans-unit id="438be17a9f009165e43555808cc4e1799bd84dbf" translate="yes" xml:space="preserve">
          <source>One use of sparse matrices is in graph theory, where the interconnections between nodes are represented as an adjacency matrix. That is, if the i-th node in a graph is connected to the j-th node. Then the ij-th node (and in the case of undirected graphs the ji-th node) of the sparse adjacency matrix is nonzero. If each node is then associated with a set of coordinates, then the &lt;em&gt;gplot&lt;/em&gt; command can be used to graphically display the interconnections between nodes.</source>
          <target state="translated">スパース行列の1つの使用法はグラフ理論であり、ノード間の相互接続は隣接行列として表されます。つまり、グラフのi番目のノードがj番目のノードに接続されている場合です。その場合、疎な隣接行列のij番目のノード（無向グラフの場合はji番目のノード）はゼロではありません。次に、各ノードが座標のセットに関連付けられている場合、&lt;em&gt;gplot&lt;/em&gt;コマンドを使用して、ノード間の相互接続をグラフィカルに表示できます。</target>
        </trans-unit>
        <trans-unit id="dc3ac91f24ed27fbda70406a299eebcfe8ef5622" translate="yes" xml:space="preserve">
          <source>One-dimensional Interpolation</source>
          <target state="translated">一次元補間</target>
        </trans-unit>
        <trans-unit id="8ed1c8b841605358b59c251edca0102c1451452c" translate="yes" xml:space="preserve">
          <source>One-dimensional interpolation.</source>
          <target state="translated">一次元補間。</target>
        </trans-unit>
        <trans-unit id="444da8bd773d6cdbdb2bc50334cf3eeae9bc3eff" translate="yes" xml:space="preserve">
          <source>Only figures that are modified will be updated. The &lt;code&gt;refresh&lt;/code&gt; function can also be used to cause an update of the current figure, even if it is not modified.</source>
          <target state="translated">変更された図形のみが更新されます。 &lt;code&gt;refresh&lt;/code&gt; 機能も、それが修正されていない場合でも、現在の図の更新を引き起こすために使用することができます。</target>
        </trans-unit>
        <trans-unit id="b4ebab3d4baee77698372613b1a24e64a8487a06" translate="yes" xml:space="preserve">
          <source>Only valid for GIF images, control how successive frames are rendered (how the preceding frame is disposed of) when creating a GIF animation. Values can be &lt;code&gt;&quot;doNotSpecify&quot;&lt;/code&gt;, &lt;code&gt;&quot;leaveInPlace&quot;&lt;/code&gt;, &lt;code&gt;&quot;restoreBG&quot;&lt;/code&gt;, or &lt;code&gt;&quot;restorePrevious&quot;&lt;/code&gt;. For non-GIF files, value is an empty string.</source>
          <target state="translated">GIF画像に対してのみ有効です。GIFアニメーションを作成するときに、連続するフレームのレンダリング方法（前のフレームの破棄方法）を制御します。値は &lt;code&gt;&quot;doNotSpecify&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;leaveInPlace&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;restoreBG&quot;&lt;/code&gt; 、または &lt;code&gt;&quot;restorePrevious&quot;&lt;/code&gt; です。GIF以外のファイルの場合、値は空の文字列です。</target>
        </trans-unit>
        <trans-unit id="a2c38a6050c2a5618c992096cc7be25f6d82fcfe" translate="yes" xml:space="preserve">
          <source>Open &lt;var&gt;url&lt;/var&gt; in the default system web browser.</source>
          <target state="translated">デフォルトのシステムWebブラウザで &lt;var&gt;url&lt;/var&gt; を開きます。</target>
        </trans-unit>
        <trans-unit id="174bb82dff8a4a7f0eb94a396cfc6e85c46e2647" translate="yes" xml:space="preserve">
          <source>Open a GUI dialog for selecting a directory.</source>
          <target state="translated">ディレクトリを選択するためのGUIダイアログを開きます。</target>
        </trans-unit>
        <trans-unit id="ad82da5cfe3e56b7dcbd8e0555eb0f7b0d5128cc" translate="yes" xml:space="preserve">
          <source>Open a GUI dialog for selecting a file and return the filename &lt;var&gt;fname&lt;/var&gt;, the path to this file &lt;var&gt;fpath&lt;/var&gt;, and the filter index &lt;var&gt;fltidx&lt;/var&gt;.</source>
          <target state="translated">ファイルを選択するためのGUIダイアログを開き、ファイル名 &lt;var&gt;fname&lt;/var&gt; 、このファイルへのパス &lt;var&gt;fpath&lt;/var&gt; 、およびフィルターインデックス &lt;var&gt;fltidx&lt;/var&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="94e898edfbb5f5eacd0ddafd3ee43f7e68557db9" translate="yes" xml:space="preserve">
          <source>Open a GUI dialog for selecting a file.</source>
          <target state="translated">ファイルを選択するためのGUIダイアログを開きます。</target>
        </trans-unit>
        <trans-unit id="8c474671d06e4980f7bf0db54e5397e91b2b60da" translate="yes" xml:space="preserve">
          <source>Open a file for low-level I/O or query open files and file descriptors.</source>
          <target state="translated">低レベルI/Oのためにファイルを開いたり、オープンファイルやファイルディスクリプタを照会したりします。</target>
        </trans-unit>
        <trans-unit id="4fe8123223ed699a6cb1a52c25c9ce09f33f3209" translate="yes" xml:space="preserve">
          <source>Open a file for reading or writing. The previous contents are discarded.</source>
          <target state="translated">読み書き用のファイルを開きます。それまでの内容は破棄されます。</target>
        </trans-unit>
        <trans-unit id="6e2de2381cfe62f21924e01b2fc221e24d0bb00b" translate="yes" xml:space="preserve">
          <source>Open a file for reading.</source>
          <target state="translated">読み込み用のファイルを開きます。</target>
        </trans-unit>
        <trans-unit id="e0ef55a51000ae08edb050dd45393c6a74e1b928" translate="yes" xml:space="preserve">
          <source>Open a file for writing. The previous contents are discarded.</source>
          <target state="translated">書き込み用のファイルを開きます。それまでの内容は破棄されます。</target>
        </trans-unit>
        <trans-unit id="b047ab4500e7f52e807f2dd362b3bef33743411d" translate="yes" xml:space="preserve">
          <source>Open a font selection dialog.</source>
          <target state="translated">フォント選択ダイアログを開きます。</target>
        </trans-unit>
        <trans-unit id="ab5ce3d95899c9a3cf8ef9ccb89c0e9f7a716980" translate="yes" xml:space="preserve">
          <source>Open a new figure window and plot the solution of an ode problem at each time step during the integration.</source>
          <target state="translated">新しい図のウィンドウを開き、積分中の各時間ステップで頌栄問題の解をプロットします。</target>
        </trans-unit>
        <trans-unit id="26f4521155eb167b2c49e1bab65529e7c5ab13e5" translate="yes" xml:space="preserve">
          <source>Open an existing file for reading and writing.</source>
          <target state="translated">既存のファイルを開いて読み書きします。</target>
        </trans-unit>
        <trans-unit id="035c8b99b52e844eabbdb9dbba561af68f910ec8" translate="yes" xml:space="preserve">
          <source>Open file in the editor. No &lt;var&gt;output&lt;/var&gt; value is returned.</source>
          <target state="translated">エディターでファイルを開きます。 &lt;var&gt;output&lt;/var&gt; 値は返されません。</target>
        </trans-unit>
        <trans-unit id="3e2894170bd34a9550fd02467e0e37b0aec41a1e" translate="yes" xml:space="preserve">
          <source>Open for reading and writing.</source>
          <target state="translated">読書や書き込みのためにオープンにしています。</target>
        </trans-unit>
        <trans-unit id="403acccd1de142676f8269755bdc38e166ec8c81" translate="yes" xml:space="preserve">
          <source>Open for reading only.</source>
          <target state="translated">読書専用に公開しています。</target>
        </trans-unit>
        <trans-unit id="769044816a004cc7834fa219411cb74c7418c416" translate="yes" xml:space="preserve">
          <source>Open for writing only.</source>
          <target state="translated">書き込み専用のオープンです。</target>
        </trans-unit>
        <trans-unit id="7c4bc8eff9d9fc5d113237c6bbc2054356552edc" translate="yes" xml:space="preserve">
          <source>Open or create a file for reading or writing at the end of the file.</source>
          <target state="translated">ファイルの最後に読み書き用のファイルを開いたり、作成したりします。</target>
        </trans-unit>
        <trans-unit id="6b9b0bf85d4626622ee9f6b61c3b6e8e7e5a873b" translate="yes" xml:space="preserve">
          <source>Open or create a file for writing at the end of the file.</source>
          <target state="translated">ファイルの最後に書き込み用のファイルを開くか、作成します。</target>
        </trans-unit>
        <trans-unit id="07087e1b1b01fc8ae3772fbafbb991c0ac612355" translate="yes" xml:space="preserve">
          <source>Open the data file with &lt;code&gt;load&lt;/code&gt;. If no return value &lt;var&gt;output&lt;/var&gt; is requested, variables are loaded in the base workspace. Otherwise &lt;var&gt;output&lt;/var&gt; will be a structure containing loaded data. See &lt;a href=&quot;simple-file-i_002fo#XREFload&quot;&gt;load function&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;load&lt;/code&gt; でデータファイルを開きます。戻り値の &lt;var&gt;output&lt;/var&gt; が要求されない場合、変数はベースワークスペースに読み込まれます。それ以外の場合、 &lt;var&gt;output&lt;/var&gt; はロードされたデータを含む構造になります。&lt;a href=&quot;simple-file-i_002fo#XREFload&quot;&gt;load関数を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="7e2fcec7edbeac0657f68d38282c1161b91ff062" translate="yes" xml:space="preserve">
          <source>Open the figure with &lt;code&gt;hgload&lt;/code&gt;. See &lt;a href=&quot;printing-and-saving-plots#XREFhgload&quot;&gt;hgload function&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;hgload&lt;/code&gt; で図を開きます。&lt;a href=&quot;printing-and-saving-plots#XREFhgload&quot;&gt;hgload関数を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="73e841ccece4923a6b5d4705fe33eca698fff3b9" translate="yes" xml:space="preserve">
          <source>Open the figure with hgload. See &lt;a href=&quot;printing-and-saving-plots#XREFhgload&quot;&gt;hgload function&lt;/a&gt;.</source>
          <target state="translated">hgloadでFigureを開きます。&lt;a href=&quot;printing-and-saving-plots#XREFhgload&quot;&gt;hgload関数を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="542e2463bd734aed4e76019190bd84e77b39ac55" translate="yes" xml:space="preserve">
          <source>Open the file &lt;var&gt;file&lt;/var&gt; in Octave or in an external application based on the file type as determined by the filename extension.</source>
          <target state="translated">ファイル名拡張子によって決定されるファイルタイプに基づいて、Octaveまたは外部アプリケーションでファイル &lt;var&gt;file&lt;/var&gt; を開きます。</target>
        </trans-unit>
        <trans-unit id="8ae1fdd1f8d72b933257128d207678f153c26ecb" translate="yes" xml:space="preserve">
          <source>Open the variable &lt;var&gt;name&lt;/var&gt; in the graphical Variable Editor.</source>
          <target state="translated">グラフィカルな変数エディターで変数 &lt;var&gt;name&lt;/var&gt; を開きます。</target>
        </trans-unit>
        <trans-unit id="64772f9d09ee3b76e5bdf35aaa7583343125a29f" translate="yes" xml:space="preserve">
          <source>OpenGL</source>
          <target state="translated">OpenGL</target>
        </trans-unit>
        <trans-unit id="b707a701135ca61c167d02640a48788275f569bf" translate="yes" xml:space="preserve">
          <source>OpenGL to PostScript printing library (&lt;a href=&quot;https://www.geuz.org/gl2ps/&quot;&gt;https://www.geuz.org/gl2ps/&lt;/a&gt;). gl2ps is required for printing when using OpenGL-based graphics toolkits (currently either FLTK or Qt).</source>
          <target state="translated">OpenGL to PostScript印刷ライブラリ（&lt;a href=&quot;https://www.geuz.org/gl2ps/&quot;&gt;https://www.geuz.org/gl2ps/&lt;/a&gt;）。OpenGLベースのグラフィックツールキット（現在はFLTKまたはQt）を使用する場合、印刷にはgl2psが必要です。</target>
        </trans-unit>
        <trans-unit id="93b15520fdb15949b25b4231f94a87ccae6c8c73" translate="yes" xml:space="preserve">
          <source>Opening a file that is already open simply opens it again and returns a separate file id. It is not an error to open a file several times, though writing to the same file through several different file ids may produce unexpected results.</source>
          <target state="translated">すでに開いているファイルを開くことは、単にそれを再度開いて別のファイル ID を返すだけです。複数回ファイルを開いてもエラーにはなりませんが、複数の異なるファイル ID を使って同じファイルに書き込むと、予期しない結果になることがあります。</target>
        </trans-unit>
        <trans-unit id="7bce6ddc686d0c9b7e39ff96a3dc97bbbc372eb7" translate="yes" xml:space="preserve">
          <source>Opening and Closing Files</source>
          <target state="translated">ファイルの開閉</target>
        </trans-unit>
        <trans-unit id="4676755a8e864a5233b4553b758fa5e21ce07175" translate="yes" xml:space="preserve">
          <source>Openings and Closings</source>
          <target state="translated">開店・閉店</target>
        </trans-unit>
        <trans-unit id="11351ad3dcfe8e582a069661d8aef262e58e5646" translate="yes" xml:space="preserve">
          <source>Operate along the dimension specified, rather than the default of the first non-singleton dimension.</source>
          <target state="translated">シングルトンではない最初のディメンジョンの既定値ではなく、指定されたディメンジョンに沿って操作します。</target>
        </trans-unit>
        <trans-unit id="a7eeb0f16aa43e2ef5db63d07e15bdd9d2ce75ca" translate="yes" xml:space="preserve">
          <source>Operate on the axes in handle &lt;var&gt;hax&lt;/var&gt; instead of the current axes.</source>
          <target state="translated">現在の座標軸の代わりにハンドル &lt;var&gt;hax&lt;/var&gt; の座標軸を操作します。</target>
        </trans-unit>
        <trans-unit id="430d32076eb256f0fb1db5fd1333254c368ef1ba" translate="yes" xml:space="preserve">
          <source>Operation</source>
          <target state="translated">Operation</target>
        </trans-unit>
        <trans-unit id="a1ad787f952fcdc3bd8cb5eea146aade98386f6c" translate="yes" xml:space="preserve">
          <source>Operator Index</source>
          <target state="translated">オペレータインデックス</target>
        </trans-unit>
        <trans-unit id="f299c884a708c75ca75144e361f0c5cf282b235f" translate="yes" xml:space="preserve">
          <source>Operator Overloading</source>
          <target state="translated">オペレータのオーバーロード</target>
        </trans-unit>
        <trans-unit id="5ab53f8310f5b3d7c33f42f382419ed45034e50e" translate="yes" xml:space="preserve">
          <source>Operator Precedence</source>
          <target state="translated">オペレーターの前例</target>
        </trans-unit>
        <trans-unit id="9613126de85534b0c1f67629abbe8a2dea694a77" translate="yes" xml:space="preserve">
          <source>Operators such as &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, or &lt;code&gt;*&lt;/code&gt; can be used on the majority of the matrix and array types. In addition there are a number of methods that are of interest only for matrices such as &lt;code&gt;transpose&lt;/code&gt;, &lt;code&gt;hermitian&lt;/code&gt;, &lt;code&gt;solve&lt;/code&gt;, etc.</source>
          <target state="translated">&lt;code&gt;+&lt;/code&gt; 、 &lt;code&gt;-&lt;/code&gt; 、または &lt;code&gt;*&lt;/code&gt; などの演算子は、行列および配列型の大部分で使用できます。また唯一のような行列に関心のある多くの方法がある &lt;code&gt;transpose&lt;/code&gt; 、 &lt;code&gt;hermitian&lt;/code&gt; 、 &lt;code&gt;solve&lt;/code&gt; 、など</target>
        </trans-unit>
        <trans-unit id="9dffec10edd114b8652ff4f141d73e34d8dcccc3" translate="yes" xml:space="preserve">
          <source>Optimally choose between fixed point and exponential format based on the magnitude of the number. For example, with the &amp;lsquo;</source>
          <target state="translated">数値の大きさに基づいて、固定小数点形式と指数形式のどちらかを最適に選択します。たとえば、 '</target>
        </trans-unit>
        <trans-unit id="fdf5e093149fa15365c797b12b39a00d5ec3a138" translate="yes" xml:space="preserve">
          <source>Optimization</source>
          <target state="translated">Optimization</target>
        </trans-unit>
        <trans-unit id="e31d972229de381b461860014dd710856361917a" translate="yes" xml:space="preserve">
          <source>Option</source>
          <target state="translated">Option</target>
        </trans-unit>
        <trans-unit id="c891dd822e02e600098522c6dade357a7adc8307" translate="yes" xml:space="preserve">
          <source>Option to disable vectorized integration, forcing Octave to use only scalar inputs when calling the integrand. The default value is &lt;var&gt;false&lt;/var&gt;.</source>
          <target state="translated">ベクトル化された統合を無効にするオプション。被積分関数を呼び出すときにOctaveがスカラー入力のみを使用するように強制します。デフォルト値は &lt;var&gt;false&lt;/var&gt; です。</target>
        </trans-unit>
        <trans-unit id="cadc14af5c0b4c645ec9151900cceb26f51a0a39" translate="yes" xml:space="preserve">
          <source>Optional &lt;var&gt;property&lt;/var&gt;/&lt;var&gt;value&lt;/var&gt; pairs are passed directly to the underlying text objects.</source>
          <target state="translated">オプションの &lt;var&gt;property&lt;/var&gt; / &lt;var&gt;value&lt;/var&gt; ペアは、基になるテキストオブジェクトに直接渡されます。</target>
        </trans-unit>
        <trans-unit id="8df6108398af0f9376b3f9c4cf96c1b3d43d82f5" translate="yes" xml:space="preserve">
          <source>Optional keyword describing the package (if no</source>
          <target state="translated">パッケージを記述するオプションのキーワード (ない場合)</target>
        </trans-unit>
        <trans-unit id="9c892e7673bbdd1aaa14f43a68fd07865055bb34" translate="yes" xml:space="preserve">
          <source>Optional list of homepages related to the package.</source>
          <target state="translated">パッケージに関連するホームページの任意リスト。</target>
        </trans-unit>
        <trans-unit id="ceaa61b9606a03fbcae2c9c9cfdedfe206b23c63" translate="yes" xml:space="preserve">
          <source>Optional list of known problems.</source>
          <target state="translated">既知の問題のオプションリスト。</target>
        </trans-unit>
        <trans-unit id="1b9985c6b3bf0d934d5f4e8d43efa60479e4c36f" translate="yes" xml:space="preserve">
          <source>Optional numeric argument &lt;var&gt;format_repeat&lt;/var&gt; can be used for limiting the number of items read:</source>
          <target state="translated">オプションの数値引数 &lt;var&gt;format_repeat&lt;/var&gt; を使用して、読み取るアイテムの数を制限できます。</target>
        </trans-unit>
        <trans-unit id="1a51271c36afece15062a003e98d9691c7beeb13" translate="yes" xml:space="preserve">
          <source>Optional property/value pairs are passed directly to the underlying patch objects.</source>
          <target state="translated">オプションのプロパティ/値のペアは、基礎となるパッチオブジェクトに直接渡されます。</target>
        </trans-unit>
        <trans-unit id="4e3ca7aef0721502c13c2604caad273343019e1d" translate="yes" xml:space="preserve">
          <source>Optional property/value pairs are passed directly to the underlying patch objects. The full list of properties is documented at &lt;a href=&quot;patch-properties#Patch-Properties&quot;&gt;Patch Properties&lt;/a&gt;.</source>
          <target state="translated">オプションのプロパティ/値のペアは、基になるパッチオブジェクトに直接渡されます。プロパティの完全なリストは、&lt;a href=&quot;patch-properties#Patch-Properties&quot;&gt;パッチのプロパティに&lt;/a&gt;記載されています。</target>
        </trans-unit>
        <trans-unit id="25339f78bd52812c353d87e097402c06257b1f74" translate="yes" xml:space="preserve">
          <source>Optional property/value pairs are passed directly to the underlying text objects.</source>
          <target state="translated">オプションのプロパティ/値のペアは、基礎となるテキストオブジェクトに直接渡されます。</target>
        </trans-unit>
        <trans-unit id="96afd3d4fa5347b2958dce8c80c49d5abc7616b3" translate="yes" xml:space="preserve">
          <source>Optional property/value pairs may be specified to control the appearance of the plot.</source>
          <target state="translated">オプションのプロパティ/値のペアは、プロットの外観を制御するために指定することができます。</target>
        </trans-unit>
        <trans-unit id="48f280b318505b2631bf3ea7539904692a6516bc" translate="yes" xml:space="preserve">
          <source>Optional property/value pairs may be specified to control the appearance of the plot. The full list of properties is documented at &lt;a href=&quot;line-properties#Line-Properties&quot;&gt;Line Properties&lt;/a&gt;.</source>
          <target state="translated">オプションのプロパティ/値のペアを指定して、プロットの外観を制御できます。プロパティの完全なリストは、LinePropertiesに記載されてい&lt;a href=&quot;line-properties#Line-Properties&quot;&gt;ます&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="52449767e068a682855fb63392e95c8f220d5261" translate="yes" xml:space="preserve">
          <source>Optional property/value pairs may be used to control the appearance of the text.</source>
          <target state="translated">オプシ ョ ナルなプ ロ パテ ィ/値の対を用いて、 テキス ト の外観を制御す る こ と がで き ます。</target>
        </trans-unit>
        <trans-unit id="1cb9a959101e7cec10fdd35b7fe8571acb6047b3" translate="yes" xml:space="preserve">
          <source>Optional return arguments &lt;var&gt;v1&lt;/var&gt;, &amp;hellip;, contain integer vectors such that,</source>
          <target state="translated">オプションの戻り引数 &lt;var&gt;v1&lt;/var&gt; 、&amp;hellip;、には、次のような整数ベクトルが含まれます。</target>
        </trans-unit>
        <trans-unit id="a52732471aa2bdf24f724507f9111e2c222b9cc5" translate="yes" xml:space="preserve">
          <source>Optionally the color of the mesh can be specified independently of &lt;var&gt;z&lt;/var&gt; by supplying a color matrix, &lt;var&gt;c&lt;/var&gt;.</source>
          <target state="translated">オプションで、メッシュの色は、カラーマトリックス &lt;var&gt;c&lt;/var&gt; を指定することにより、 &lt;var&gt;z&lt;/var&gt; とは無関係に指定できます。</target>
        </trans-unit>
        <trans-unit id="da9065db293ae6f0d0d3cb289cef82a454b29ce8" translate="yes" xml:space="preserve">
          <source>Optionally, &lt;code&gt;fminunc&lt;/code&gt; can return a structure with convergence statistics (&lt;var&gt;output&lt;/var&gt;), the output gradient (&lt;var&gt;grad&lt;/var&gt;) at the solution &lt;var&gt;x&lt;/var&gt;, and approximate Hessian (&lt;var&gt;hess&lt;/var&gt;) at the solution &lt;var&gt;x&lt;/var&gt;.</source>
          <target state="translated">必要に応じて、 &lt;code&gt;fminunc&lt;/code&gt; のは、収束統計（と構造を返すことができる &lt;var&gt;output&lt;/var&gt; ）、出力勾配（ &lt;var&gt;grad&lt;/var&gt; 溶液で） &lt;var&gt;x&lt;/var&gt; 、及び近似のヘッセ行列（ &lt;var&gt;hess&lt;/var&gt; 溶液で） &lt;var&gt;x&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="9f40625cdc22c919fe37d56bf253d2d8ac85c930" translate="yes" xml:space="preserve">
          <source>Optionally, &lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;, and &lt;var&gt;z&lt;/var&gt; can be supplied to represent the set of coordinates of &lt;var&gt;v&lt;/var&gt;. They can either be matrices of the same size as &lt;var&gt;v&lt;/var&gt; or vectors with sizes according to the dimensions of &lt;var&gt;v&lt;/var&gt;, in which case they are expanded to matrices (see &lt;a href=&quot;#XREFmeshgrid&quot;&gt;meshgrid&lt;/a&gt;).</source>
          <target state="translated">オプションで、 &lt;var&gt;x&lt;/var&gt; 、 &lt;var&gt;y&lt;/var&gt; 、および &lt;var&gt;z&lt;/var&gt; を指定して、 &lt;var&gt;v&lt;/var&gt; の座標のセットを表すことができます。彼らはどちらかと同じサイズの行列とすることができる &lt;var&gt;v&lt;/var&gt; の大きさに応じてサイズを有するまたはベクター &lt;var&gt;v&lt;/var&gt; それらは行列に拡張された場合には、（参照&lt;a href=&quot;#XREFmeshgrid&quot;&gt;関数meshgridを&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="bbf3c34491a3203d7c62826f519f18744d2d7713" translate="yes" xml:space="preserve">
          <source>Optionally, a patch handle &lt;var&gt;p&lt;/var&gt; can be given as the last input argument to all function call variations and the vertex data will be extracted from the isosurface patch object. Finally, if no output argument is given then the colors of the patch given by the patch handle &lt;var&gt;p&lt;/var&gt; are changed.</source>
          <target state="translated">オプションで、すべての関数呼び出しバリエーションの最後の入力引数としてパッチハンドル &lt;var&gt;p&lt;/var&gt; を指定でき、頂点データは等値面パッチオブジェクトから抽出されます。最後に、出力引数が指定されていない場合、パッチハンドル &lt;var&gt;p&lt;/var&gt; によって指定されたパッチの色が変更されます。</target>
        </trans-unit>
        <trans-unit id="9a944312b92b3d8212d8ea20227cf1d2785b3e5a" translate="yes" xml:space="preserve">
          <source>Optionally, if indices &lt;var&gt;idx1&lt;/var&gt;, &lt;var&gt;idx2&lt;/var&gt;, &amp;hellip; are supplied, return the number of elements that would result from the indexing</source>
          <target state="translated">必要に応じて、インデックス &lt;var&gt;idx1&lt;/var&gt; 、 &lt;var&gt;idx2&lt;/var&gt; 、&amp;hellip;が指定されている場合、インデックス作成の結果として得られる要素の数を返します</target>
        </trans-unit>
        <trans-unit id="f56a4d6968d583da8e88355a3cb26ceab461f957" translate="yes" xml:space="preserve">
          <source>Optionally, one can specify the number of iterations &lt;var&gt;iter&lt;/var&gt;, the updating factor &lt;var&gt;gamma&lt;/var&gt;, and initial values &lt;em&gt;a0&lt;/em&gt; and &lt;em&gt;b0&lt;/em&gt; for the scoring algorithm.</source>
          <target state="translated">オプションで、反復回数 &lt;var&gt;iter&lt;/var&gt; 、更新係数 &lt;var&gt;gamma&lt;/var&gt; 、およびスコアリングアルゴリズムの初期値&lt;em&gt;a0&lt;/em&gt;と&lt;em&gt;b0&lt;/em&gt;を指定できます。</target>
        </trans-unit>
        <trans-unit id="2c936444d53a01aa8bb3a8a4193ee1b659cd1f24" translate="yes" xml:space="preserve">
          <source>Optionally, row-pivoted updating can be used by supplying a row permutation (pivoting) matrix &lt;var&gt;P&lt;/var&gt;; in that case, an updated permutation matrix is returned. Note that if &lt;var&gt;L&lt;/var&gt;, &lt;var&gt;U&lt;/var&gt;, &lt;var&gt;P&lt;/var&gt; is a pivoted LU factorization as obtained by &lt;code&gt;lu&lt;/code&gt;:</source>
          <target state="translated">オプションで、行置換（ピボット）行列 &lt;var&gt;P&lt;/var&gt; を指定することにより、行ピボット更新を使用できます。その場合、更新された置換行列が返されます。場合なお、 &lt;var&gt;L&lt;/var&gt; 、 &lt;var&gt;U&lt;/var&gt; 、 &lt;var&gt;P&lt;/var&gt; は、によって得られるピボットLU分解である &lt;code&gt;lu&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="b09d38972425f4589fe1b4f8ee7449c654e3c292" translate="yes" xml:space="preserve">
          <source>Optionally, the color of the mesh can be specified independently of &lt;var&gt;z&lt;/var&gt; by supplying &lt;var&gt;c&lt;/var&gt;, which is a vector for colormap data, or a matrix with three columns for RGB data. The number of colors specified in &lt;var&gt;c&lt;/var&gt; must either equal the number of vertices in &lt;var&gt;z&lt;/var&gt; or the number of triangles in &lt;var&gt;tri&lt;/var&gt;.</source>
          <target state="translated">オプションで、メッシュの色は、カラーマップデータのベクトルである &lt;var&gt;c&lt;/var&gt; 、またはRGBデータの3列の行列を指定することにより、 &lt;var&gt;z&lt;/var&gt; とは無関係に指定できます。 &lt;var&gt;c&lt;/var&gt; で指定される色の数は、 &lt;var&gt;z&lt;/var&gt; の頂点の数または &lt;var&gt;tri&lt;/var&gt; の三角形の数と等しくなければなりません。</target>
        </trans-unit>
        <trans-unit id="fe3d35c8f1fc42c8465b0503471c904431d5d2b5" translate="yes" xml:space="preserve">
          <source>Optionally, the color of the mesh can be specified independently of &lt;var&gt;z&lt;/var&gt; by supplying &lt;var&gt;c&lt;/var&gt;, which is a vector for colormap data, or a matrix with three columns for RGB data. The number of colors specified in &lt;var&gt;c&lt;/var&gt; must either equal the number of vertices in &lt;var&gt;z&lt;/var&gt; or the number of triangles in &lt;var&gt;tri&lt;/var&gt;. When specifying the color at each vertex the triangle will be colored according to the color of the first vertex only (see patch documentation and the &lt;code&gt;&quot;FaceColor&quot;&lt;/code&gt; property when set to &lt;code&gt;&quot;flat&quot;&lt;/code&gt;).</source>
          <target state="translated">オプションで、メッシュの色は、カラーマップデータのベクトルである &lt;var&gt;c&lt;/var&gt; 、またはRGBデータの3列の行列を指定することにより、 &lt;var&gt;z&lt;/var&gt; とは無関係に指定できます。 &lt;var&gt;c&lt;/var&gt; で指定される色の数は、 &lt;var&gt;z&lt;/var&gt; の頂点の数または &lt;var&gt;tri&lt;/var&gt; の三角形の数と等しくなければなりません。各頂点の色を指定するとき、三角形は最初の頂点の色のみに従って色付けされます（パッチのドキュメントおよび &lt;code&gt;&quot;flat&quot;&lt;/code&gt; に設定されている場合は &lt;code&gt;&quot;FaceColor&quot;&lt;/code&gt; プロパティを参照）。</target>
        </trans-unit>
        <trans-unit id="4acd821b15ba3d025f877a6b8c8cb1148865df30" translate="yes" xml:space="preserve">
          <source>Optionally, the color of the mesh can be specified independently of &lt;var&gt;z&lt;/var&gt; by supplying a color matrix, &lt;var&gt;c&lt;/var&gt;.</source>
          <target state="translated">オプションで、メッシュの色は、カラーマトリックス &lt;var&gt;c&lt;/var&gt; を指定することにより、 &lt;var&gt;z&lt;/var&gt; とは無関係に指定できます。</target>
        </trans-unit>
        <trans-unit id="10f9ccb081c9765c7d605a93e7f6c77e5334e02f" translate="yes" xml:space="preserve">
          <source>Optionally, the color of the surface can be specified independently of &lt;var&gt;z&lt;/var&gt; by supplying a color matrix, &lt;var&gt;c&lt;/var&gt;.</source>
          <target state="translated">必要に応じて、カラーマトリックス &lt;var&gt;c&lt;/var&gt; を指定することにより、 &lt;var&gt;z&lt;/var&gt; とは無関係に表面の色を指定できます。</target>
        </trans-unit>
        <trans-unit id="20bd54ea5e0230e65d71ca416e32ca246cf769ce" translate="yes" xml:space="preserve">
          <source>Optionally, the reduced set of coordinates are returned in &lt;var&gt;nx&lt;/var&gt;, &lt;var&gt;ny&lt;/var&gt;, and &lt;var&gt;nz&lt;/var&gt;, respectively.</source>
          <target state="translated">オプションで、削減された座標セットがそれぞれ &lt;var&gt;nx&lt;/var&gt; 、 &lt;var&gt;ny&lt;/var&gt; 、および &lt;var&gt;nz&lt;/var&gt; で返されます。</target>
        </trans-unit>
        <trans-unit id="deaec9f68b4c086abc6f944c23480c3a5c401e7d" translate="yes" xml:space="preserve">
          <source>Options and pattern syntax are the same as for the &lt;code&gt;who&lt;/code&gt; command.</source>
          <target state="translated">オプションとパターン構文は、 &lt;code&gt;who&lt;/code&gt; コマンドの場合と同じです。</target>
        </trans-unit>
        <trans-unit id="3fdbd8aceb8bd40ff5c59471636fe949cd779eb3" translate="yes" xml:space="preserve">
          <source>Options for the search are provided in the parameter &lt;var&gt;options&lt;/var&gt; using the function &lt;code&gt;optimset&lt;/code&gt;. Currently, &lt;code&gt;fminsearch&lt;/code&gt; accepts the options: &lt;code&gt;&quot;Display&quot;&lt;/code&gt;, &lt;code&gt;&quot;FunValCheck&quot;&lt;/code&gt;,&lt;code&gt;&quot;MaxFunEvals&quot;&lt;/code&gt;, &lt;code&gt;&quot;MaxIter&quot;&lt;/code&gt;, &lt;code&gt;&quot;OutputFcn&quot;&lt;/code&gt;, &lt;code&gt;&quot;TolFun&quot;&lt;/code&gt;, &lt;code&gt;&quot;TolX&quot;&lt;/code&gt;.</source>
          <target state="translated">検索のオプションは、関数 &lt;code&gt;optimset&lt;/code&gt; を使用してパラメーター &lt;var&gt;options&lt;/var&gt; 提供されます。現在、 &lt;code&gt;fminsearch&lt;/code&gt; はオプションを受け入れます： &lt;code&gt;&quot;Display&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;FunValCheck&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;MaxFunEvals&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;MaxIter&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;OutputFcn&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;TolFun&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;TolX&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ff65cdcd025bd29560e5c935435f271d82c0a6cb" translate="yes" xml:space="preserve">
          <source>Options in addition to those of &lt;code&gt;regexp&lt;/code&gt; are</source>
          <target state="translated">&lt;code&gt;regexp&lt;/code&gt; オプションに加えて、次のオプションがあります。</target>
        </trans-unit>
        <trans-unit id="f7a77f3a34a3ef3bd0d6b90af1beb6494ec66170" translate="yes" xml:space="preserve">
          <source>Options include</source>
          <target state="translated">オプションには以下が含まれます。</target>
        </trans-unit>
        <trans-unit id="00fcdda14949d42c1610edfba9ca80d41d59564f" translate="yes" xml:space="preserve">
          <source>Or:</source>
          <target state="translated">Or:</target>
        </trans-unit>
        <trans-unit id="cd30ee32c21575c35be6bfd23c3a358912dd2fc5" translate="yes" xml:space="preserve">
          <source>Order of the polynomial plus 1.</source>
          <target state="translated">多項式の次数プラス1。</target>
        </trans-unit>
        <trans-unit id="281ec1156c6ccadb921f2cf082077e844d3d5619" translate="yes" xml:space="preserve">
          <source>Ordinary Differential Equation (ODE) solver.</source>
          <target state="translated">常微分方程式(ODE)ソルバー。</target>
        </trans-unit>
        <trans-unit id="65f83ada4b52d5238c857e47116cfeb3a275e9aa" translate="yes" xml:space="preserve">
          <source>Ordinary Differential Equations</source>
          <target state="translated">常微分方程式</target>
        </trans-unit>
        <trans-unit id="799e46e9d0727965b0e10bbe0f8d6b93d0275abc" translate="yes" xml:space="preserve">
          <source>Ordinary characters in the template string are simply written to the output stream as-is, while &lt;em&gt;conversion specifications&lt;/em&gt; introduced by a &amp;lsquo;</source>
          <target state="translated">テンプレート文字列内の通常の文字は、単に出力ストリームに書き込まれるよう-で、一方、&lt;em&gt;変換仕様は&lt;/em&gt;によって導入&quot;</target>
        </trans-unit>
        <trans-unit id="4a82e30a71707bc866f480e5446b8e5aba4a31f1" translate="yes" xml:space="preserve">
          <source>Ordinary least squares (OLS) estimation.</source>
          <target state="translated">通常の最小二乗(OLS)推定。</target>
        </trans-unit>
        <trans-unit id="9378ccb682fa93afb7ad931b0c494ed6e36db5fc" translate="yes" xml:space="preserve">
          <source>Organization of Functions Distributed with Octave</source>
          <target state="translated">オクターブで分散された関数の編成</target>
        </trans-unit>
        <trans-unit id="86e4e3875420cdee95d08d4472073493729a7aee" translate="yes" xml:space="preserve">
          <source>Orientation</source>
          <target state="translated">Orientation</target>
        </trans-unit>
        <trans-unit id="065b3e5abd7e188034b29e97efee02a039527bb2" translate="yes" xml:space="preserve">
          <source>Original author of the package.</source>
          <target state="translated">パッケージの原作者。</target>
        </trans-unit>
        <trans-unit id="98ec88e8fd25454bdaff5cf51f3b73e55f3c6809" translate="yes" xml:space="preserve">
          <source>Orthogonal Collocation</source>
          <target state="translated">直交コロケーション</target>
        </trans-unit>
        <trans-unit id="04ac74d518c1ad2f5c98316a114407ac65060505" translate="yes" xml:space="preserve">
          <source>Orthogonalize a given column vector &lt;var&gt;x&lt;/var&gt; with respect to a set of orthonormal vectors comprising the columns of &lt;var&gt;v&lt;/var&gt; using the modified Gram-Schmidt method.</source>
          <target state="translated">変更されたグラムシュミット法を使用して、 &lt;var&gt;v&lt;/var&gt; の列を構成する直交正規ベクトルのセットに対して、指定された列ベクトル &lt;var&gt;x&lt;/var&gt; を直交化します。</target>
        </trans-unit>
        <trans-unit id="6e6a6f2086bb5fe5dbfd17d8d5f502d48759834b" translate="yes" xml:space="preserve">
          <source>Other</source>
          <target state="translated">Other</target>
        </trans-unit>
        <trans-unit id="72e666054fba9ad235c49f3d557118d731e0b7cf" translate="yes" xml:space="preserve">
          <source>Other Output Conversions</source>
          <target state="translated">その他の出力変換</target>
        </trans-unit>
        <trans-unit id="d1a9c24d467b017c5a27a8cf9012495e4ca9733d" translate="yes" xml:space="preserve">
          <source>Other characters in the template string that are not part of conversion specifications must match characters in the input stream exactly; if this is not the case, a matching failure occurs.</source>
          <target state="translated">変換仕様の一部ではないテンプレート文字列内の他の文字は,入力ストリーム内の文字と正確に一致しなければなりません。</target>
        </trans-unit>
        <trans-unit id="cb1400f3ef22e71625b32389f111acd45ad6d2ea" translate="yes" xml:space="preserve">
          <source>Other dependencies</source>
          <target state="translated">その他の依存関係</target>
        </trans-unit>
        <trans-unit id="9f4ecb2bd203be5438fd03386320ab8cc639bc02" translate="yes" xml:space="preserve">
          <source>Other elements (if any):</source>
          <target state="translated">その他の要素(あれば)。</target>
        </trans-unit>
        <trans-unit id="e73063e31fc80948341f066823ba76fd05b9f3e5" translate="yes" xml:space="preserve">
          <source>Other events: &lt;code&gt;evt&lt;/code&gt; is a class &lt;code&gt;double&lt;/code&gt; empty matrix.</source>
          <target state="translated">その他のイベント： &lt;code&gt;evt&lt;/code&gt; はクラス &lt;code&gt;double&lt;/code&gt; の空行列です。</target>
        </trans-unit>
        <trans-unit id="1bd50078c56aeee38a11d45a31872518a01f9484" translate="yes" xml:space="preserve">
          <source>Other file types are opened in the appropriate external application.</source>
          <target state="translated">その他のファイルタイプは、適切な外部アプリケーションで開きます。</target>
        </trans-unit>
        <trans-unit id="e8b1895a77dc86fcc773b38735ac91cd66e42e47" translate="yes" xml:space="preserve">
          <source>Other functions in the mex interface for handling character strings are &lt;code&gt;mxCreateString&lt;/code&gt;, &lt;code&gt;mxArrayToString&lt;/code&gt;, and &lt;code&gt;mxCreateCharMatrixFromStrings&lt;/code&gt;. In a mex-file, a character string is considered to be a vector rather than a matrix. This is perhaps an arbitrary distinction as the data in the &lt;code&gt;mxArray&lt;/code&gt; for the matrix is consecutive in any case.</source>
          <target state="translated">文字列を処理するためのmexインターフェイスの他の関数は、 &lt;code&gt;mxCreateString&lt;/code&gt; 、 &lt;code&gt;mxArrayToString&lt;/code&gt; 、および &lt;code&gt;mxCreateCharMatrixFromStrings&lt;/code&gt; です。mexファイルでは、文字列は行列ではなくベクトルと見なされます。マトリックスの &lt;code&gt;mxArray&lt;/code&gt; のデータはいずれにせよ連続しているため、これはおそらく任意の区別です。</target>
        </trans-unit>
        <trans-unit id="f03951cbcf3fcb868d882b8a0b382401d118ca5c" translate="yes" xml:space="preserve">
          <source>Other functions of interest that directly create sparse matrices, are &lt;em&gt;diag&lt;/em&gt; or its generalization &lt;em&gt;spdiags&lt;/em&gt;, that can take the definition of the diagonals of the matrix and create the sparse matrix that corresponds to this. For example,</source>
          <target state="translated">疎行列を直接作成する他の関心のある関数は、&lt;em&gt;diag&lt;/em&gt;またはその一般化&lt;em&gt;spdiags&lt;/em&gt;です。これは、行列の対角線の定義を取得して、これに対応する疎行列を作成できます。例えば、</target>
        </trans-unit>
        <trans-unit id="ad7efd9d0cb4c2f985724c8f6787db3f9c6e67ca" translate="yes" xml:space="preserve">
          <source>Other functions that can create two-dimensional plots directly from a function include &lt;code&gt;ezplot&lt;/code&gt;, &lt;code&gt;ezcontour&lt;/code&gt;, &lt;code&gt;ezcontourf&lt;/code&gt; and &lt;code&gt;ezpolar&lt;/code&gt;.</source>
          <target state="translated">関数から直接2次元プロットを作成できる他の関数には、 &lt;code&gt;ezplot&lt;/code&gt; 、 &lt;code&gt;ezcontour&lt;/code&gt; 、 &lt;code&gt;ezcontourf&lt;/code&gt; 、および &lt;code&gt;ezpolar&lt;/code&gt; があります。</target>
        </trans-unit>
        <trans-unit id="8b0aaeb21f734705a2df1843476683e8226d79b1" translate="yes" xml:space="preserve">
          <source>Other functions that can manipulate the fields of a structure are given below.</source>
          <target state="translated">その他、構造体のフィールドを操作できる関数を以下に示します。</target>
        </trans-unit>
        <trans-unit id="cfc838f6de0a559fd35aa785e555f30effee9967" translate="yes" xml:space="preserve">
          <source>Other systems may require a different solution.</source>
          <target state="translated">他のシステムでは、別のソリューションが必要になる場合があります。</target>
        </trans-unit>
        <trans-unit id="7c9f6a685f824bbc60bc424db941455d49a3da7a" translate="yes" xml:space="preserve">
          <source>Other techniques for speeding up code</source>
          <target state="translated">コードを高速化するための他のテクニック</target>
        </trans-unit>
        <trans-unit id="1bd7dd6e890e036fc3fc6246a21fce1ab496d6f4" translate="yes" xml:space="preserve">
          <source>Otherwise you can select the type of annotation and then set its position using either &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; coordinates for line-based annotations or a position vector &lt;var&gt;pos&lt;/var&gt; for others. In either case, coordinates are interpreted using the &lt;code&gt;&quot;units&quot;&lt;/code&gt; property of the annotation object. The default is &lt;code&gt;&quot;normalized&quot;&lt;/code&gt;, which means the lower left hand corner of the figure has coordinates &amp;lsquo;</source>
          <target state="translated">それ以外の場合は、注釈のタイプを選択し、ラインベースの注釈の場合は &lt;var&gt;x&lt;/var&gt; 座標と &lt;var&gt;y&lt;/var&gt; 座標を使用して、その他の場合は位置ベクトル &lt;var&gt;pos&lt;/var&gt; を使用して位置を設定できます。どちらの場合でも、座標は注釈オブジェクトの &lt;code&gt;&quot;units&quot;&lt;/code&gt; プロパティを使用して解釈されます。デフォルトは &lt;code&gt;&quot;normalized&quot;&lt;/code&gt; です。これは、図の左下隅に座標があることを意味します '</target>
        </trans-unit>
        <trans-unit id="dface01c8354d3052818c20d8359775424a28367" translate="yes" xml:space="preserve">
          <source>Otherwise, Octave buffers its output and waits until just before the prompt is printed to flush it to the pager.</source>
          <target state="translated">そうでなければ,Octaveはその出力をバッファリングして,プロンプトが印刷される直前まで待って,それをページャーに流します。</target>
        </trans-unit>
        <trans-unit id="d2fd49236a06dee5b0893241e0ea3bb3550f4cba" translate="yes" xml:space="preserve">
          <source>Otherwise, if the &lt;small&gt;BLAS&lt;/small&gt; library uses 64-bit integers, the result is:</source>
          <target state="translated">それ以外の場合、&lt;small&gt;BLAS&lt;/small&gt;ライブラリが64ビット整数を使用すると、結果は次のようになります。</target>
        </trans-unit>
        <trans-unit id="057f4d46ac4a14ed754648663ad0a76553e5098e" translate="yes" xml:space="preserve">
          <source>Out-of-date functions which will eventually be removed from Octave.</source>
          <target state="translated">最終的にOctaveから削除される予定の古い機能。</target>
        </trans-unit>
        <trans-unit id="d80c806bef95f4b75b8efdfe4c0dc12914d0bf1d" translate="yes" xml:space="preserve">
          <source>Output &lt;var&gt;p&lt;/var&gt; is a matrix of pair-wise p-values testing for the null hypothesis of a correlation coefficient of zero.</source>
          <target state="translated">出力 &lt;var&gt;p&lt;/var&gt; は、相関係数がゼロの帰無仮説を検定するペアワイズp値の行列です。</target>
        </trans-unit>
        <trans-unit id="a9c0b35dbe656d30a66928a0be6f739de926416c" translate="yes" xml:space="preserve">
          <source>Output &lt;var&gt;r&lt;/var&gt; is a matrix of Pearson&amp;rsquo;s product moment correlation coefficients for each pair of variables.</source>
          <target state="translated">出力 &lt;var&gt;r&lt;/var&gt; は、変数の各ペアのピアソンの積率相関係数の行列です。</target>
        </trans-unit>
        <trans-unit id="2095ef3b892ff0a571346681811aa238f4cf380b" translate="yes" xml:space="preserve">
          <source>Output Conversion Syntax</source>
          <target state="translated">出力変換構文</target>
        </trans-unit>
        <trans-unit id="3dccd4d60b52b95a8592398b979605dc104c35ce" translate="yes" xml:space="preserve">
          <source>Output Conversion for Matrices</source>
          <target state="translated">行列の出力変換</target>
        </trans-unit>
        <trans-unit id="4c79c7bc55bf83f90f31b4f9daa845caf091eeac" translate="yes" xml:space="preserve">
          <source>Output Simplification:</source>
          <target state="translated">出力の簡素化。</target>
        </trans-unit>
        <trans-unit id="7d8b9e6861354a438f5f0db2c8330ef1f31fbacd" translate="yes" xml:space="preserve">
          <source>Output class and size will be the same as input.</source>
          <target state="translated">出力クラスとサイズは入力と同じになります。</target>
        </trans-unit>
        <trans-unit id="5242150095cdab7f1b2dcf7c67c382b108c1598a" translate="yes" xml:space="preserve">
          <source>Output delay, in seconds. This parameter specifies how long the solver should delay sending information about the solution to the standard output.</source>
          <target state="translated">出力遅延時間を秒単位で指定します。このパラメータは、ソルバーが解に関する情報を標準出力に送信するのを遅らせる時間を指定します。</target>
        </trans-unit>
        <trans-unit id="9d255f786af27922e50295ca9563d9a5f574d80a" translate="yes" xml:space="preserve">
          <source>Output filename. Default extension is</source>
          <target state="translated">出力ファイル名。デフォルトの拡張子は</target>
        </trans-unit>
        <trans-unit id="120c911dc5cf494cd09bee7c44f0b75f35d1a9b6" translate="yes" xml:space="preserve">
          <source>Output filename. Default extension is .oct (or .mex if &amp;lsquo;</source>
          <target state="translated">出力ファイル名。デフォルトの拡張子は.oct（または.mexの場合は '</target>
        </trans-unit>
        <trans-unit id="07dd07307cd8f12e4aeebf6817d2fb609ca3acb4" translate="yes" xml:space="preserve">
          <source>Output frequency, in iterations. This parameter specifies how frequently the solver sends information about the solution to the standard output.</source>
          <target state="translated">出力頻度を繰り返しで指定します。このパラメータは、ソルバーが解に関する情報を標準出力に送る頻度を指定します。</target>
        </trans-unit>
        <trans-unit id="e8fea362fb814625bff6a8b18b37d3c9330aa74a" translate="yes" xml:space="preserve">
          <source>Output that comes directly from Fortran functions is not sent through the pager and may appear out of sequence with other output that is sent through the pager. One way to avoid this is to force pending output to be flushed before calling a function that will produce output from within Fortran functions. To do this, use the command</source>
          <target state="translated">Fortran 関数から直接送られてくる出力は、ページャーを通して送られず、ページャーを通して送られてくる他の出力と順番がずれているように見えるかもしれません。これを避ける一つの方法は、Fortran 関数内から出力を生成する関数を呼び出す前に、保留中の出力を強制的にフラッシュさせることです。これを行うには、コマンド</target>
        </trans-unit>
        <trans-unit id="273c07a2ddda725eb107641dd521d6490980283a" translate="yes" xml:space="preserve">
          <source>Output values:</source>
          <target state="translated">出力値。</target>
        </trans-unit>
        <trans-unit id="bcf532e4ed9932529f2e31de7244bc65d89ee711" translate="yes" xml:space="preserve">
          <source>Output will be of class double unless &lt;var&gt;x&lt;/var&gt; is of class single, in which case the output will also be single.</source>
          <target state="translated">&lt;var&gt;x&lt;/var&gt; がsingleクラスでない限り、出力はdouble クラスになります。この場合、出力もsingleになります。</target>
        </trans-unit>
        <trans-unit id="73ff9af9e2a015de3abdf0f6edca46911e696ce8" translate="yes" xml:space="preserve">
          <source>Output will be of class double.</source>
          <target state="translated">出力はdoubleクラスになります。</target>
        </trans-unit>
        <trans-unit id="e4dba4c41ac6b2563a0bab8ad283afdd060e2e0f" translate="yes" xml:space="preserve">
          <source>Output will be the same class as &lt;var&gt;x&lt;/var&gt; unless &lt;var&gt;x&lt;/var&gt; is of class logical in which case it returns of class double.</source>
          <target state="translated">&lt;var&gt;x&lt;/var&gt; が論理クラスでない場合、出力は &lt;var&gt;x&lt;/var&gt; と同じクラスになります。この場合、クラスはdoubleを返します。</target>
        </trans-unit>
        <trans-unit id="24f10aadaa52f4e720b2e3344cc1381aaf95a0a9" translate="yes" xml:space="preserve">
          <source>OutputFcn</source>
          <target state="translated">OutputFcn</target>
        </trans-unit>
        <trans-unit id="d194a466682bec852b700cb306488f0f939a7f9b" translate="yes" xml:space="preserve">
          <source>Outputs (see Golub and Van Loan):</source>
          <target state="translated">出力(ゴルブとバンローンを参照)。</target>
        </trans-unit>
        <trans-unit id="5bf142bb2f446f857579d2924f23ea84dcb50575" translate="yes" xml:space="preserve">
          <source>Outputs &lt;var&gt;lci&lt;/var&gt; and &lt;var&gt;hci&lt;/var&gt; are matrices containing, respectively, the lower and higher bounds of the 95% confidence interval of each correlation coefficient.</source>
          <target state="translated">出力 &lt;var&gt;lci&lt;/var&gt; と &lt;var&gt;hci&lt;/var&gt; は、各相関係数の95％信頼区間の下限と上限をそれぞれ含む行列です。</target>
        </trans-unit>
        <trans-unit id="6ee76fa98a639a0ac269010b7032639b0a171647" translate="yes" xml:space="preserve">
          <source>Outputs:</source>
          <target state="translated">Outputs:</target>
        </trans-unit>
        <trans-unit id="d81a12cf1c1c198f4d88512d77d63440dc080f8f" translate="yes" xml:space="preserve">
          <source>Overflow, return &lt;code&gt;Inf&lt;/code&gt;.</source>
          <target state="translated">オーバーフロー、 &lt;code&gt;Inf&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="1b924bffa2a4b8e31aa222a3611f060b498221e8" translate="yes" xml:space="preserve">
          <source>Overloading Objects</source>
          <target state="translated">オブジェクトのオーバーロード</target>
        </trans-unit>
        <trans-unit id="f4611b92fd135eb050f7cf8b766c894275797460" translate="yes" xml:space="preserve">
          <source>Overloading and Autoloading</source>
          <target state="translated">オーバーロードとオートロード</target>
        </trans-unit>
        <trans-unit id="511993d3c99719e38a6779073019dacd7178ddb9" translate="yes" xml:space="preserve">
          <source>P</source>
          <target state="translated">P</target>
        </trans-unit>
        <trans-unit id="95d53785e6f7a71be22d70fb236ce4a3ac54b1a1" translate="yes" xml:space="preserve">
          <source>P = campos ()</source>
          <target state="translated">P=フィールド()</target>
        </trans-unit>
        <trans-unit id="d822b2c97d3d0379aba40f5b98580fa4cbdae945" translate="yes" xml:space="preserve">
          <source>P = cart2pol (&amp;hellip;)</source>
          <target state="translated">P = cart2pol（&amp;hellip;）</target>
        </trans-unit>
        <trans-unit id="7013d89da66b60db58eca204074b06924558cbdc" translate="yes" xml:space="preserve">
          <source>PAGER</source>
          <target state="translated">PAGER</target>
        </trans-unit>
        <trans-unit id="6da178eab7d7236b3359af6e4e70cab5f2163e50" translate="yes" xml:space="preserve">
          <source>PAGER (new_val, &quot;local&quot;)</source>
          <target state="translated">PAGER (new_val,&quot;local&quot;)</target>
        </trans-unit>
        <trans-unit id="4f19b23f066d11502292f68caf7612c99f5cdfd9" translate="yes" xml:space="preserve">
          <source>PAGER_FLAGS</source>
          <target state="translated">PAGER_FLAGS</target>
        </trans-unit>
        <trans-unit id="f11fc3cd8b61ec1301b5cd1fad2cf932847ad6fd" translate="yes" xml:space="preserve">
          <source>PAGER_FLAGS (new_val, &quot;local&quot;)</source>
          <target state="translated">PAGER_FLAGS (new_val,&quot;local&quot;)</target>
        </trans-unit>
        <trans-unit id="b16905a41ac6e888a70144b3cc10eb3a64381bf4" translate="yes" xml:space="preserve">
          <source>PBMplus</source>
          <target state="translated">PBMplus</target>
        </trans-unit>
        <trans-unit id="a6c1bf1f4b3ef9fd2aa5aee8cbaab8d2ebabc0cd" translate="yes" xml:space="preserve">
          <source>PCRE</source>
          <target state="translated">PCRE</target>
        </trans-unit>
        <trans-unit id="d613d88cb2d86f484f6f82d44ac1fc60722abe20" translate="yes" xml:space="preserve">
          <source>PDF</source>
          <target state="translated">PDF</target>
        </trans-unit>
        <trans-unit id="e64b5c379fae19a7692e572e5be6989575f87188" translate="yes" xml:space="preserve">
          <source>PKG_ADD</source>
          <target state="translated">PKG_ADD</target>
        </trans-unit>
        <trans-unit id="e6a67088e638f4e7e9f0d682570147c6a9f473d8" translate="yes" xml:space="preserve">
          <source>PKG_ADD and PKG_DEL Directives</source>
          <target state="translated">PKG_ADD および PKG_DEL ディレクティブ</target>
        </trans-unit>
        <trans-unit id="d69c6859d12bde7538d9f66dfedd0d3cb89b3447" translate="yes" xml:space="preserve">
          <source>PKG_DEL</source>
          <target state="translated">PKG_DEL</target>
        </trans-unit>
        <trans-unit id="0c95dc6163ff0d09e82f44e7c50db7ad6b089bf3" translate="yes" xml:space="preserve">
          <source>PM</source>
          <target state="translated">PM</target>
        </trans-unit>
        <trans-unit id="ef16a101e58c0497f51ba0262586e1cd267c25c7" translate="yes" xml:space="preserve">
          <source>POSDEF</source>
          <target state="translated">POSDEF</target>
        </trans-unit>
        <trans-unit id="1742f5d553c9486f0066268c92d9d826ca42c2ec" translate="yes" xml:space="preserve">
          <source>PROJECTS</source>
          <target state="translated">PROJECTS</target>
        </trans-unit>
        <trans-unit id="bea1acbf4638d6493b1a6d117690fc3e80d92c39" translate="yes" xml:space="preserve">
          <source>PS1</source>
          <target state="translated">PS1</target>
        </trans-unit>
        <trans-unit id="0d0d733c63131e26521c87e34a4c7c7e58ec4102" translate="yes" xml:space="preserve">
          <source>PS1 (new_val, &quot;local&quot;)</source>
          <target state="translated">PS1 (new_val,&quot;local&quot;)</target>
        </trans-unit>
        <trans-unit id="6c36a3937cd34e1cc700738b4a3722e6fe8cc7da" translate="yes" xml:space="preserve">
          <source>PS2</source>
          <target state="translated">PS2</target>
        </trans-unit>
        <trans-unit id="357e45f212c1c222a80f41df224f1df36a24f476" translate="yes" xml:space="preserve">
          <source>PS2 (new_val, &quot;local&quot;)</source>
          <target state="translated">PS2 (new_val,&quot;local&quot;)</target>
        </trans-unit>
        <trans-unit id="19bb016b89021c10df6bd858a1255a4cae9181cb" translate="yes" xml:space="preserve">
          <source>PS4</source>
          <target state="translated">PS4</target>
        </trans-unit>
        <trans-unit id="be0311ceeb068b8964968afabcb1d8619ad702e2" translate="yes" xml:space="preserve">
          <source>PS4 (new_val, &quot;local&quot;)</source>
          <target state="translated">PS4 (new_val,&quot;local&quot;)</target>
        </trans-unit>
        <trans-unit id="511b9575d5cf67793c535d5d39acaf7b8a5b467c" translate="yes" xml:space="preserve">
          <source>P_tmpdir</source>
          <target state="translated">P_tmpdir</target>
        </trans-unit>
        <trans-unit id="3c27fc4f3f7dd8ed685661dac90215f1c03bcf99" translate="yes" xml:space="preserve">
          <source>P_tmpdir ()</source>
          <target state="translated">P_tmpdir ()</target>
        </trans-unit>
        <trans-unit id="06f1be165f8e6d87025c580e3195f7b9cca8a30a" translate="yes" xml:space="preserve">
          <source>Pack the list of files and directories specified in &lt;var&gt;files&lt;/var&gt; into the TAR archive &lt;var&gt;tarfile&lt;/var&gt;.</source>
          <target state="translated">で指定されたファイルとディレクトリのリストをパックし &lt;var&gt;files&lt;/var&gt; tarアーカイブに &lt;var&gt;tarfile&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="a32e79a64de6c70a1930573c40e28cd460f172bc" translate="yes" xml:space="preserve">
          <source>Package for Makefile generation (&lt;a href=&quot;https://www.gnu.org/software/automake&quot;&gt;https://www.gnu.org/software/automake&lt;/a&gt;). Automake is required if you modify Octave&amp;rsquo;s &lt;code&gt;Makefile.am&lt;/code&gt; files or other files that they depend on.</source>
          <target state="translated">Makefile生成用のパッケージ（&lt;a href=&quot;https://www.gnu.org/software/automake&quot;&gt;https://www.gnu.org/software/automake&lt;/a&gt;）。Octaveの &lt;code&gt;Makefile.am&lt;/code&gt; ファイルまたはそれらが依存するその他のファイルを変更する場合、Automakeが必要です。</target>
        </trans-unit>
        <trans-unit id="702b45d9fdc3d391d1b978c11f96a492507cae4c" translate="yes" xml:space="preserve">
          <source>Package for building software libraries (&lt;a href=&quot;https://www.gnu.org/software/libtool&quot;&gt;https://www.gnu.org/software/libtool&lt;/a&gt;). Libtool is required by Automake.</source>
          <target state="translated">ソフトウェアライブラリをビルドするためのパッケージ（&lt;a href=&quot;https://www.gnu.org/software/libtool&quot;&gt;https://www.gnu.org/software/libtool&lt;/a&gt;）。libmakeはAutomakeに必要です。</target>
        </trans-unit>
        <trans-unit id="81daea90262d060c6fe3836ec59f609c079c7c76" translate="yes" xml:space="preserve">
          <source>Package for generating online and print documentation (&lt;a href=&quot;https://www.gnu.org/software/texinfo&quot;&gt;https://www.gnu.org/software/texinfo&lt;/a&gt;). You will need Texinfo to build Octave&amp;rsquo;s documentation or if you modify the documentation source files or the docstring of any Octave function.</source>
          <target state="translated">オンラインおよび印刷ドキュメントを生成するためのパッケージ（&lt;a href=&quot;https://www.gnu.org/software/texinfo&quot;&gt;https://www.gnu.org/software/texinfo&lt;/a&gt;）。Octaveのドキュメントをビルドする場合、またはドキュメントのソースファイルまたはOctave関数のdocstringを変更する場合は、Texinfoが必要になります。</target>
        </trans-unit>
        <trans-unit id="7789bca9b1552814ae49d43d379e79d903922c99" translate="yes" xml:space="preserve">
          <source>Package for software configuration (&lt;a href=&quot;https://www.gnu.org/software/autoconf&quot;&gt;https://www.gnu.org/software/autoconf&lt;/a&gt;). Autoconf is required if you modify Octave&amp;rsquo;s &lt;code&gt;configure.ac&lt;/code&gt; file or other files that it requires.</source>
          <target state="translated">ソフトウェア構成用パッケージ（&lt;a href=&quot;https://www.gnu.org/software/autoconf&quot;&gt;https://www.gnu.org/software/autoconf&lt;/a&gt;）。Octaveの &lt;code&gt;configure.ac&lt;/code&gt; ファイルまたはその他の必要なファイルを変更する場合、Autoconfが必要です。</target>
        </trans-unit>
        <trans-unit id="c689064e225ed6d9d35a69735a7d975f505335e7" translate="yes" xml:space="preserve">
          <source>Package for the containers classes.</source>
          <target state="translated">コンテナクラスのパッケージです。</target>
        </trans-unit>
        <trans-unit id="4dc72b11e75daa2876feee4e4803128f61f63cd0" translate="yes" xml:space="preserve">
          <source>Package manager for installing external packages of functions in Octave.</source>
          <target state="translated">Octaveに関数の外部パッケージをインストールするためのパッケージマネージャです。</target>
        </trans-unit>
        <trans-unit id="b4fd3a510593d27795cd6ac06dbb5de83821371f" translate="yes" xml:space="preserve">
          <source>Package name.</source>
          <target state="translated">パッケージ名。</target>
        </trans-unit>
        <trans-unit id="0a999012ffb87b3edac99adbdfc498b12831a1e2" translate="yes" xml:space="preserve">
          <source>Packages</source>
          <target state="translated">Packages</target>
        </trans-unit>
        <trans-unit id="f31fc073fd48cdbf6758c2fb43bae2968df38bb5" translate="yes" xml:space="preserve">
          <source>Packages can be installed globally (i.e., for all users of the system) or locally (i.e., for the current user only).</source>
          <target state="translated">パッケージは、グローバルに (すなわち、システムの全ユーザに対して)またはローカルに (すなわち、現在のユーザに対してのみ)インストールすることができます。</target>
        </trans-unit>
        <trans-unit id="a76ca5ed7296ec608a6a29ceefabf66813e7b9f9" translate="yes" xml:space="preserve">
          <source>Packages might depend on external software and/or other packages. To be able to install such packages, these dependencies should be installed beforehand. A package that depends on other package(s) can still be installed using the</source>
          <target state="translated">パッケージは、外部ソフトウェアや他のパッケージに依存している場合があります。そのようなパッケージをインストールできるようにするためには、これらの依存関係をあらかじめインストールしておく必要があります。他のパッケージに依存しているパッケージをインストールするには</target>
        </trans-unit>
        <trans-unit id="6f9919e4d8cdb932a1e34b40d3d924503e481f85" translate="yes" xml:space="preserve">
          <source>Packages must be loaded before they can be used. When loading a package, Octave performs the following tasks:</source>
          <target state="translated">パッケージは,使用する前にロードしなければなりません。パッケージをロードするとき,Octaveは以下のタスクを実行します。</target>
        </trans-unit>
        <trans-unit id="d5084b10b81403837b20413ab7b1cde8e46546c6" translate="yes" xml:space="preserve">
          <source>Pad the field with spaces.</source>
          <target state="translated">フィールドにスペースを入れてください。</target>
        </trans-unit>
        <trans-unit id="0f02891eac7a4ce3172d8083ac92a369b4277091" translate="yes" xml:space="preserve">
          <source>Pad the field with zeros instead of spaces. The zeros are placed after any indication of sign or base. This flag is ignored if the &amp;lsquo;</source>
          <target state="translated">スペースではなくゼロでフィールドを埋めます。ゼロは、符号またはベースの表示の後に配置されます。このフラグは、 '</target>
        </trans-unit>
        <trans-unit id="41469e9ddada5476d1a4cc5a91f168e9db620793" translate="yes" xml:space="preserve">
          <source>Pad the field with zeros instead of spaces; the zeros are placed after any sign. This flag is ignored if the &amp;lsquo;</source>
          <target state="translated">スペースではなくゼロでフィールドを埋めます。ゼロは符号の後に置かれます。このフラグは、 '</target>
        </trans-unit>
        <trans-unit id="9c7ddadf79ea7d35a514f5c55e9836ca3b36ce10" translate="yes" xml:space="preserve">
          <source>Paging Screen Output</source>
          <target state="translated">ページング画面出力</target>
        </trans-unit>
        <trans-unit id="641d649570dc441124490269c1fa511402d7a1ab" translate="yes" xml:space="preserve">
          <source>Parse and evaluate the string &lt;var&gt;try&lt;/var&gt; as if it were an Octave program, while capturing the output into the return variable &lt;var&gt;s&lt;/var&gt;.</source>
          <target state="translated">解析と文字列の評価 &lt;var&gt;try&lt;/var&gt; 、それはオクターブプログラムであるかのように戻り変数に出力をキャプチャしながら、 &lt;var&gt;s&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="a9cfd01ac624c8c656401f5222cdc35d5759e007" translate="yes" xml:space="preserve">
          <source>Parse and execute the contents of &lt;var&gt;file&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;file&lt;/var&gt; の内容を解析して実行します。</target>
        </trans-unit>
        <trans-unit id="3f71921f7b7aabc849d3234b96ec45b94b5bac6d" translate="yes" xml:space="preserve">
          <source>Parse the line specification &lt;var&gt;style&lt;/var&gt; and return the line style, color, and markers given.</source>
          <target state="translated">ライン仕様 &lt;var&gt;style&lt;/var&gt; を解析し、指定されたラインスタイル、色、マーカーを返します。</target>
        </trans-unit>
        <trans-unit id="99e8d59cc3df8b430d50608f8ed6c845016b6ed0" translate="yes" xml:space="preserve">
          <source>Parse the string &lt;var&gt;try&lt;/var&gt; and evaluate it as if it were an Octave program.</source>
          <target state="translated">文字列のパース &lt;var&gt;try&lt;/var&gt; 、それがオクターブプログラムであるかのようにそれを評価します。</target>
        </trans-unit>
        <trans-unit id="eab7ef163b5139d15b38bc24d50243ab27038233" translate="yes" xml:space="preserve">
          <source>Parsed word corresponding to the first specifier are returned in the first output argument and likewise for the rest of the specifiers.</source>
          <target state="translated">最初の出力引数には、最初の指定子に対応するパースされた単語が返され、残りの指定子についても同様に返されます。</target>
        </trans-unit>
        <trans-unit id="3a2c58b7d85f02aecb129b8d0afb6890bf48d9a6" translate="yes" xml:space="preserve">
          <source>Parsed words corresponding to the first specifier are returned in the first output argument and likewise for the rest of the specifiers.</source>
          <target state="translated">最初の指定子に対応する構文解析された単語が最初の出力引数に返され、残りの指定子についても同様に返されます。</target>
        </trans-unit>
        <trans-unit id="1b3cf5033ed01a4fcbff3f2957e66cfe44af45a9" translate="yes" xml:space="preserve">
          <source>Parser</source>
          <target state="translated">Parser</target>
        </trans-unit>
        <trans-unit id="2d0793bf078fc43ffdc40c790ce05957c3399723" translate="yes" xml:space="preserve">
          <source>Parser generator (&lt;a href=&quot;https://www.gnu.org/software/bison&quot;&gt;https://www.gnu.org/software/bison&lt;/a&gt;). You will need Bison if you modify the &lt;code&gt;oct-parse.yy&lt;/code&gt; source file or if you delete the files that are generated from it.</source>
          <target state="translated">パーサージェネレーター（&lt;a href=&quot;https://www.gnu.org/software/bison&quot;&gt;https://www.gnu.org/software/bison&lt;/a&gt;）。 &lt;code&gt;oct-parse.yy&lt;/code&gt; ソースファイルを変更する場合、またはそこから生成されたファイルを削除する場合は、Bisonが必要です。</target>
        </trans-unit>
        <trans-unit id="0d5e212ae4f22f5c9f21a39658a192dcd84d8ee0" translate="yes" xml:space="preserve">
          <source>Parsing Arguments</source>
          <target state="translated">引数の解析</target>
        </trans-unit>
        <trans-unit id="66717bde0183029e61bff0318f9f7d6bb688af4c" translate="yes" xml:space="preserve">
          <source>Partial Pivoting in the Computation of Krylov Subspaces of Large Sparse Systems</source>
          <target state="translated">大規模スパース系のクリロフ部分空間の計算における部分ピボッティング</target>
        </trans-unit>
        <trans-unit id="72bfb44673c3dfc8a748dc1d1fe83bbd72cbb265" translate="yes" xml:space="preserve">
          <source>Partial movement of data may still occur, but in general the assignment will be more memory and time efficient under these circumstances. In particular, it is possible to efficiently build a pre-allocated sparse matrix from a contiguous block of columns.</source>
          <target state="translated">データの部分的な移動は依然として発生する可能性がありますが、一般的には、このような状況下では、割り当てはより多くのメモリと時間の効率的なものになります。特に、列の連続したブロックから事前に割り当てられた疎な行列を効率的に構築することが可能です。</target>
        </trans-unit>
        <trans-unit id="b4bba057e022a1753c81797cc2b0e51629d94446" translate="yes" xml:space="preserve">
          <source>Particular output arguments, or the order of the output arguments, can be selected by additional &lt;var&gt;opt&lt;/var&gt; arguments. These are strings and the correspondence between the output arguments and the optional argument are</source>
          <target state="translated">特定の出力引数、または出力引数の順序は、追加の &lt;var&gt;opt&lt;/var&gt; 引数で選択できます。これらは文字列であり、出力引数とオプション引数の間の対応は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="1cfcb6d506ce6f13c4ffd4af20ec6c27834af87d" translate="yes" xml:space="preserve">
          <source>Parts of &lt;var&gt;str&lt;/var&gt; are considered comments and will be skipped. &lt;var&gt;value&lt;/var&gt; is the comment style and can be any of the following.</source>
          <target state="translated">&lt;var&gt;str&lt;/var&gt; の一部はコメントと見なされ、スキップされます。 &lt;var&gt;value&lt;/var&gt; はコメントスタイルで、次のいずれかになります。</target>
        </trans-unit>
        <trans-unit id="73215612b19fc4f23fec7f26a504ec634cb7234d" translate="yes" xml:space="preserve">
          <source>Pass options to the assembler like &quot;-Wa,OPTION&quot;.</source>
          <target state="translated">Wa,OPTION &quot;のようにオプションをアセンブラに渡す。</target>
        </trans-unit>
        <trans-unit id="6559bc9561e90927ad694c746c3ebcde8d6229bd" translate="yes" xml:space="preserve">
          <source>Pass options to the linker like &quot;-Wl,-rpath=&amp;hellip;&quot;. The quotes are needed since commas are interpreted as command separators.</source>
          <target state="translated">「-Wl、-rpath =&amp;hellip;」のようなオプションをリンカーに渡します。コンマはコマンドの区切り文字として解釈されるため、引用符が必要です。</target>
        </trans-unit>
        <trans-unit id="23598d0324587c28dfef1bb6887694660d549be5" translate="yes" xml:space="preserve">
          <source>Pass the following options to &lt;code&gt;make&lt;/code&gt; to enable 64-bit integers for &lt;small&gt;BLAS&lt;/small&gt; library calls. On 64-bit Windows systems, use &lt;code&gt;-DLONGBLAS=&quot;long long&quot;&lt;/code&gt; instead.</source>
          <target state="translated">次のオプションを渡し &lt;code&gt;make&lt;/code&gt; ための64ビット整数有効にするために&lt;small&gt;BLASの&lt;/small&gt;ライブラリコールを。64ビットWindowsシステムでは、代わりに &lt;code&gt;-DLONGBLAS=&quot;long long&quot;&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="1608adc027c1eee32f21e3ddfb3e19ba1e76e05d" translate="yes" xml:space="preserve">
          <source>Passing a global variable in a function parameter list will make a local copy and &lt;em&gt;not&lt;/em&gt; modify the global value. For example, given the function</source>
          <target state="translated">関数パラメーターリストでグローバル変数を渡すと、ローカルコピーが作成され、グローバル値&lt;em&gt;は&lt;/em&gt;変更され&lt;em&gt;ません&lt;/em&gt;。たとえば、関数が与えられた</target>
        </trans-unit>
        <trans-unit id="88a1bcf1b9f837754ff3c88e7968d3849a88ae78" translate="yes" xml:space="preserve">
          <source>Passing a global variable in a function parameter list will make a local copy and not modify the global value. For example, given the function</source>
          <target state="translated">関数のパラメータリストでグローバル変数を渡すと、ローカルコピーが作成され、グローバル値は変更されません。例えば、関数</target>
        </trans-unit>
        <trans-unit id="8be3c943b1609fffbfc51aad666d0a04adf83c9d" translate="yes" xml:space="preserve">
          <source>Password</source>
          <target state="translated">Password</target>
        </trans-unit>
        <trans-unit id="db303556b7d0922868cb9e70c396e2ad40ccc2fc" translate="yes" xml:space="preserve">
          <source>Password Database Functions</source>
          <target state="translated">パスワードデータベース機能</target>
        </trans-unit>
        <trans-unit id="72e1342fad3b69ad7ce1ab46622dd811b6ebbd2c" translate="yes" xml:space="preserve">
          <source>Patch Properties</source>
          <target state="translated">パッチのプロパティ</target>
        </trans-unit>
        <trans-unit id="fe93f68eb9936e3bddc21cbead5fe2981ab489d4" translate="yes" xml:space="preserve">
          <source>Pause recording with audiorecorder object &lt;var&gt;recorder&lt;/var&gt;.</source>
          <target state="translated">audiorecorderオブジェクト &lt;var&gt;recorder&lt;/var&gt; 録音を一時停止します。</target>
        </trans-unit>
        <trans-unit id="1135ebe5e4bad209ab1280dc95b79102860a7c41" translate="yes" xml:space="preserve">
          <source>Pause the audioplayer &lt;var&gt;player&lt;/var&gt;.</source>
          <target state="translated">audioplayer &lt;var&gt;player&lt;/var&gt; 一時停止します。</target>
        </trans-unit>
        <trans-unit id="55498f973f3202b12fdb97f1545c46a104ca0888" translate="yes" xml:space="preserve">
          <source>Perfect hash function generator (&lt;a href=&quot;https://www.gnu.org/software/gperf&quot;&gt;https://www.gnu.org/software/gperf&lt;/a&gt;). You will need gperf if you modify the &lt;code&gt;octave.gperf&lt;/code&gt; file or if you delete the file that is generated from it.</source>
          <target state="translated">完璧なハッシュ関数ジェネレーター（&lt;a href=&quot;https://www.gnu.org/software/gperf&quot;&gt;https://www.gnu.org/software/gperf&lt;/a&gt;）。 &lt;code&gt;octave.gperf&lt;/code&gt; ファイルを変更する場合、または生成されたファイルを削除する場合は、gperfが必要です。</target>
        </trans-unit>
        <trans-unit id="3e499c41153cd425720f088027a7cf759cd73cac" translate="yes" xml:space="preserve">
          <source>Perform &lt;var&gt;n&lt;/var&gt;-dimensional interpolation, where &lt;var&gt;n&lt;/var&gt; is at least two.</source>
          <target state="translated">実行 &lt;var&gt;n&lt;/var&gt; 次元補間、 &lt;var&gt;n&lt;/var&gt; は少なくとも2です。</target>
        </trans-unit>
        <trans-unit id="56d7543d10034ea06fb00a45cc3eac8578f7ea9b" translate="yes" xml:space="preserve">
          <source>Perform a Dulmage-Mendelsohn permutation of the sparse matrix &lt;var&gt;S&lt;/var&gt;.</source>
          <target state="translated">スパース行列 &lt;var&gt;S&lt;/var&gt; の Dulmage-Mendelsohn置換を実行します。</target>
        </trans-unit>
        <trans-unit id="93e987cf7a3c9b114de165427f53ff67f919529a" translate="yes" xml:space="preserve">
          <source>Perform a generalized least squares estimation for the multivariate model &lt;em&gt;&lt;var&gt;y&lt;/var&gt; = &lt;var&gt;x&lt;/var&gt;*&lt;var&gt;B&lt;/var&gt; + &lt;var&gt;E&lt;/var&gt;&lt;/em&gt; where &lt;var&gt;y&lt;/var&gt; is a &lt;em&gt;t&lt;/em&gt;-by-&lt;em&gt;p&lt;/em&gt; matrix, &lt;var&gt;x&lt;/var&gt; is a &lt;em&gt;t&lt;/em&gt;-by-&lt;em&gt;k&lt;/em&gt; matrix, &lt;var&gt;b&lt;/var&gt; is a &lt;em&gt;k&lt;/em&gt;-by-&lt;em&gt;p&lt;/em&gt; matrix and &lt;var&gt;e&lt;/var&gt; is a &lt;em&gt;t&lt;/em&gt;-by-&lt;em&gt;p&lt;/em&gt; matrix.</source>
          <target state="translated">多変量モデル&lt;em&gt; &lt;var&gt;y&lt;/var&gt; = &lt;var&gt;x&lt;/var&gt; * &lt;var&gt;B&lt;/var&gt; + &lt;var&gt;E&lt;/var&gt; の&lt;/em&gt;一般化最小二乗推定を実行し&lt;em&gt;ます。&lt;/em&gt;ここで、 &lt;var&gt;y&lt;/var&gt; は&lt;em&gt;t&lt;/em&gt;行&lt;em&gt;p&lt;/em&gt;列の行列、 &lt;var&gt;x&lt;/var&gt; は&lt;em&gt;t&lt;/em&gt;行&lt;em&gt;k&lt;/em&gt;列の行列、 &lt;var&gt;b&lt;/var&gt; は&lt;em&gt;k&lt;/em&gt;行&lt;em&gt;p&lt;/em&gt;列の行列、 &lt;var&gt;e&lt;/var&gt; は&lt;em&gt;トン&lt;/em&gt;行列&lt;em&gt;Pの&lt;/em&gt;行列。</target>
        </trans-unit>
        <trans-unit id="9afa59a272bb3f7c3387108f9033f924791595f4" translate="yes" xml:space="preserve">
          <source>Perform a shift of the vector &lt;var&gt;x&lt;/var&gt;, for use with the &lt;code&gt;fft&lt;/code&gt; and &lt;code&gt;ifft&lt;/code&gt; functions, in order to move the frequency 0 to the center of the vector or matrix.</source>
          <target state="translated">周波数0をベクトルまたは行列の中心に移動するために、 &lt;code&gt;ifft&lt;/code&gt; &lt;code&gt;fft&lt;/code&gt; およびifftで使用するために、ベクトル &lt;var&gt;x&lt;/var&gt; のシフトを実行します。</target>
        </trans-unit>
        <trans-unit id="36ead6c8531287959234a2ac02013d6c743465a4" translate="yes" xml:space="preserve">
          <source>Perform a symbolic factorization analysis of the sparse matrix &lt;var&gt;S&lt;/var&gt;.</source>
          <target state="translated">スパース行列 &lt;var&gt;S&lt;/var&gt; のシンボリック因数分解分析を実行します。</target>
        </trans-unit>
        <trans-unit id="cdec05c05388d6562019752700eb3dc9645117b6" translate="yes" xml:space="preserve">
          <source>Perform built-in self-tests from the first file in the loadpath matching &lt;var&gt;name&lt;/var&gt;.</source>
          <target state="translated">ビルトイン行うセルフテストロードパスマッチングの最初のファイルから &lt;var&gt;name&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="79230485fa240e56e2023f6deff427b25ff10056" translate="yes" xml:space="preserve">
          <source>Perform indexing of matrices in a cell array.</source>
          <target state="translated">セル配列内の行列のインデックス付けを行います.</target>
        </trans-unit>
        <trans-unit id="9ac3d471c3190ed3a84fee708ff6af346cad48d4" translate="yes" xml:space="preserve">
          <source>Perform one step of the Durbin-Levinson algorithm.</source>
          <target state="translated">ダービン-レビンソンアルゴリズムの1つのステップを実行します。</target>
        </trans-unit>
        <trans-unit id="d6745c9a7b222b9dfde95726f38537c490345927" translate="yes" xml:space="preserve">
          <source>Perform the built-in self tests contained in all functions provided by the named packages. For example:</source>
          <target state="translated">指定されたパッケージが提供するすべての関数に含まれる組み込みの自己テストを実行します。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="46d636faf0bfb7ba3e46fb6a8aff3db2f4d21a36" translate="yes" xml:space="preserve">
          <source>Perform the subscripted assignment operation according to the subscript specified by &lt;var&gt;idx&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;idx&lt;/var&gt; で指定された添え字に従って、添え字付き代入演算を実行します。</target>
        </trans-unit>
        <trans-unit id="32cda6d112b25a5de8d56cafd5cdb81cf5c00474" translate="yes" xml:space="preserve">
          <source>Perform the subscripted element selection operation on &lt;var&gt;val&lt;/var&gt; according to the subscript specified by &lt;var&gt;idx&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;idx&lt;/var&gt; で指定された添え字に従って、 &lt;var&gt;val&lt;/var&gt; に対して添え字付き要素の選択操作を実行します。</target>
        </trans-unit>
        <trans-unit id="8171f3ec60a13989a1980c1195a73f9714984d5d" translate="yes" xml:space="preserve">
          <source>Perform tilde expansion on &lt;var&gt;string&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;string&lt;/var&gt; でチルダ拡張を実行します。</target>
        </trans-unit>
        <trans-unit id="d05cca67a80fadcca4bd8ff96a0aa4760ef04c06" translate="yes" xml:space="preserve">
          <source>Performance should generally &lt;strong&gt;not&lt;/strong&gt; be a reason for using compiled extensions. Although compiled extensions can run faster, particularly if they replace a loop in Octave code, this is almost never the best path to take. First, there are many techniques to speed up Octave performance while remaining within the language. Second, Octave is a high-level language that makes it easy to perform common mathematical tasks. Giving that up means shifting the focus from solving the real problem to solving a computer programming problem. It means returning to low-level constructs such as pointers, memory management, mathematical overflow/underflow, etc. Because of the low level nature, and the fact that the compiled code is executed outside of Octave, there is the very real possibility of crashing the interpreter and losing work.</source>
          <target state="translated">パフォーマンスは、一般的にすべき&lt;strong&gt;ではありません&lt;/strong&gt;コンパイルされた拡張機能を使用する理由になります。コンパイルされた拡張機能はより高速に実行できますが、特にそれらがOctaveコードのループを置き換える場合、これはほとんど最善の方法ではありません。まず、言語内にとどまりながらOctaveのパフォーマンスを高速化する多くの手法があります。第二に、Octaveは、一般的な数学タスクを簡単に実行できるようにする高水準言語です。それをあきらめることは、本当の問題を解決することから、コンピュータープログラミングの問題を解決することに焦点を移すことを意味します。これは、ポインター、メモリ管理、数学的オーバーフロー/アンダーフローなどの低レベルの構造に戻ることを意味します。低レベルの性質と、コンパイルされたコードがOctaveの外部で実行されるため、クラッシュの可能性が非常に高い通訳と失業。</target>
        </trans-unit>
        <trans-unit id="03529f9e15319610ff504c9ffa1c12861a485955" translate="yes" xml:space="preserve">
          <source>Permission is granted to copy and distribute modified versions of this manual under the conditions for verbatim copying, provided that the entire resulting derived work is distributed under the terms of a permission notice identical to this one.</source>
          <target state="translated">このマニュアルの改変版を、そのままの条件で複製し、配布することを許可しますが、結果として得られた著作物全体をこの許可通知と同じ条件で配布することを条件とします。</target>
        </trans-unit>
        <trans-unit id="34257256c997b69b94581785e289e8ff5b515396" translate="yes" xml:space="preserve">
          <source>Permission is granted to copy and distribute modified versions of this manual under the conditions for verbatim copying, provided that the entire resulting derived work is distributed under the terms of a permission notice identical to this one.Permission is granted to copy and distribute translations of this manual into another language, under the above conditions for modified versions.</source>
          <target state="translated">本書の翻訳版を他の言語に翻訳したものを、上記の条件のもとに複製して頒布することを許可します。</target>
        </trans-unit>
        <trans-unit id="310f4800f7688099c746de38ac2379c33972bafc" translate="yes" xml:space="preserve">
          <source>Permission is granted to copy and distribute translations of this manual into another language, under the above conditions for modified versions.</source>
          <target state="translated">このマニュアルを他の言語に翻訳したものをコピーして配布することを許可することは、修正されたバージョンについては上記の条件のもとで許可されています。</target>
        </trans-unit>
        <trans-unit id="b55058bf8c1756bd73c8b193920b58712830dc7d" translate="yes" xml:space="preserve">
          <source>Permission is granted to make and distribute verbatim copies of this manual provided the copyright notice and this permission notice are preserved on all copies.</source>
          <target state="translated">本マニュアルの著作権表示とこの許可表示をすべての複製物に保存することを条件に、本マニュアルの複製物を作成し、そのまま配布することを許可します。</target>
        </trans-unit>
        <trans-unit id="c1f42044ed749346efaab249e690a71c532f7bf7" translate="yes" xml:space="preserve">
          <source>Permutation Matrix Functions</source>
          <target state="translated">順列行列関数</target>
        </trans-unit>
        <trans-unit id="95e18cf3db13744cf859f11017aa32e2ac010991" translate="yes" xml:space="preserve">
          <source>Permute only; do not scale.</source>
          <target state="translated">パーミュレートのみで、スケールしないでください。</target>
        </trans-unit>
        <trans-unit id="4244e0ed3284a75347a53933cde65606169b0893" translate="yes" xml:space="preserve">
          <source>Permuted Diagonal matrix. The permutation does not need to be specifically indicated, as the structure of the matrix explicitly gives this. (Sparse matrices only)</source>
          <target state="translated">順列対角行列.行列の構造が明示的に与えているので,並べ替えは特に指定する必要はありません.(疎な行列のみ)</target>
        </trans-unit>
        <trans-unit id="7151ba3741649b13ae8a02c24966300578290565" translate="yes" xml:space="preserve">
          <source>Persistent Variables</source>
          <target state="translated">永続的な変数</target>
        </trans-unit>
        <trans-unit id="603a6125a71127ab0aa7165dbdef70a21f38e624" translate="yes" xml:space="preserve">
          <source>Persistent variable.</source>
          <target state="translated">永続的な変数。</target>
        </trans-unit>
        <trans-unit id="3b5a153c3b8b965960d620577a6151e26e4a5173" translate="yes" xml:space="preserve">
          <source>Piecewise cubic Hermite interpolating polynomial&amp;mdash;shape-preserving interpolation with smooth first derivative (not implemented yet).</source>
          <target state="translated">区分的3次エルミート補間多項式&amp;mdash;滑らかな1次導関数を使用した形状保持補間（まだ実装されていません）。</target>
        </trans-unit>
        <trans-unit id="25634d740e45dcf573c54b522b336a6d2ab5fbed" translate="yes" xml:space="preserve">
          <source>Piecewise cubic Hermite interpolating polynomial&amp;mdash;shape-preserving interpolation with smooth first derivative.</source>
          <target state="translated">区分的3次エルミート補間多項式&amp;mdash;滑らかな1次導関数を使用した形状保持補間。</target>
        </trans-unit>
        <trans-unit id="ca1a3897532276a35f01f88a92d364ce0c5c83a9" translate="yes" xml:space="preserve">
          <source>Pivot threshold for factorization. It can range between 0 (diagonal pivoting) and 1 (default), where the maximum magnitude entry in the column is chosen to be the pivot.</source>
          <target state="translated">因数分解のピボット閾値.0 (対角線ピボット)から 1 (デフォルト)までの範囲で設定できます.</target>
        </trans-unit>
        <trans-unit id="e747fa4c217260291d005ab537dfd9e66e16c602" translate="yes" xml:space="preserve">
          <source>Place a single string after one mouse click</source>
          <target state="translated">マウスを1回クリックした後に1つの文字列を配置</target>
        </trans-unit>
        <trans-unit id="c0cf541e51b3d8238fa503289b2de8a778773fb7" translate="yes" xml:space="preserve">
          <source>Place label text to the left of the keys</source>
          <target state="translated">ラベルテキストをキーの左に配置</target>
        </trans-unit>
        <trans-unit id="ee83118fd3fd550afa0baae6b9579c437eb38123" translate="yes" xml:space="preserve">
          <source>Place label text to the right of the keys (default)</source>
          <target state="translated">ラベルテキストをキーの右側に配置する(デフォルト</target>
        </trans-unit>
        <trans-unit id="f83433c61faffdf13358d5b8f06d287100ad05a9" translate="yes" xml:space="preserve">
          <source>Place text on the current figure using the mouse.</source>
          <target state="translated">マウスを使って現在の図の上にテキストを配置します。</target>
        </trans-unit>
        <trans-unit id="932026005fe86f8c595f8001e3a31d05ba88c996" translate="yes" xml:space="preserve">
          <source>Place the colorbar above the plot.</source>
          <target state="translated">プロットの上にカラーバーを配置します。</target>
        </trans-unit>
        <trans-unit id="8aadb4e7c270e710e01d3a3fd8ba10e17aafc96f" translate="yes" xml:space="preserve">
          <source>Place the colorbar at the bottom of the plot.</source>
          <target state="translated">プロットの下部にカラーバーを配置します。</target>
        </trans-unit>
        <trans-unit id="a7c8731601b3feb048422261042e725d3f8a65e6" translate="yes" xml:space="preserve">
          <source>Place the colorbar at the top of the plot.</source>
          <target state="translated">プロットの上部にカラーバーを配置します。</target>
        </trans-unit>
        <trans-unit id="0e575556e226a4234afedb504cab374d1380a121" translate="yes" xml:space="preserve">
          <source>Place the colorbar inside the plot to the left.</source>
          <target state="translated">プロットの内側にカラーバーを左に配置します。</target>
        </trans-unit>
        <trans-unit id="1d49e8ef11811976abe82fb279f8c9975b4af0a5" translate="yes" xml:space="preserve">
          <source>Place the colorbar inside the plot to the right.</source>
          <target state="translated">プロットの内側にカラーバーを右に配置します。</target>
        </trans-unit>
        <trans-unit id="321120315b5592447e9ec5d38554f14ec4005ea7" translate="yes" xml:space="preserve">
          <source>Place the colorbar outside the plot to the left.</source>
          <target state="translated">プロットの外側のカラーバーを左に配置します。</target>
        </trans-unit>
        <trans-unit id="5f9a43241cf0386318fa7e7a38a3ccde723b0e68" translate="yes" xml:space="preserve">
          <source>Place the colorbar outside the plot to the right. This is the default.</source>
          <target state="translated">カラーバーをプロットの外側に右側に配置します。これがデフォルトです。</target>
        </trans-unit>
        <trans-unit id="f1596e3b9952b1cc77ef8476e652e995ae5f0f40" translate="yes" xml:space="preserve">
          <source>Place the colorbar under the plot.</source>
          <target state="translated">プロットの下にカラーバーを配置します。</target>
        </trans-unit>
        <trans-unit id="92df82530581dc005ccfbeb17093cea981e61122" translate="yes" xml:space="preserve">
          <source>Place two strings after two mouse clicks</source>
          <target state="translated">マウスを2回クリックした後に2つの文字列を配置</target>
        </trans-unit>
        <trans-unit id="cd9024d6d928ae5cedea04da3729fc8fa1187db5" translate="yes" xml:space="preserve">
          <source>Place two strings, each with two lines, after two mouse clicks</source>
          <target state="translated">マウスを2回クリックした後に、2つの文字列をそれぞれ2行ずつ配置します。</target>
        </trans-unit>
        <trans-unit id="647182bbe8a20baeed610954da64732a31161aa0" translate="yes" xml:space="preserve">
          <source>Play a movie defined by an array of frame structures.</source>
          <target state="translated">フレーム構造の配列で定義されたムービーを再生します。</target>
        </trans-unit>
        <trans-unit id="6cd2c37aee065e05bc1861af67fe4d91134fb9af" translate="yes" xml:space="preserve">
          <source>Play audio data &lt;var&gt;y&lt;/var&gt; at sample rate &lt;var&gt;fs&lt;/var&gt; to the default audio device.</source>
          <target state="translated">オーディオデータ &lt;var&gt;y&lt;/var&gt; をサンプルレート &lt;var&gt;fs&lt;/var&gt; で既定のオーディオデバイスに再生します。</target>
        </trans-unit>
        <trans-unit id="2a523dc42152e60f835ecab2fd5a7a4a505b12e9" translate="yes" xml:space="preserve">
          <source>Play audio stored in the audioplayer object &lt;var&gt;player&lt;/var&gt; with blocking.</source>
          <target state="translated">ブロックされたaudioplayerオブジェクト &lt;var&gt;player&lt;/var&gt; 保存されているオーディオを再生します。</target>
        </trans-unit>
        <trans-unit id="c0273284b33c82e51362116252eb24d3617b4071" translate="yes" xml:space="preserve">
          <source>Play audio stored in the audioplayer object &lt;var&gt;player&lt;/var&gt; without blocking.</source>
          <target state="translated">ブロックせずに、audioplayerオブジェクト &lt;var&gt;player&lt;/var&gt; 格納されているオーディオを再生します。</target>
        </trans-unit>
        <trans-unit id="71385cb71a4278a75a8d4a85e637892e31d6795c" translate="yes" xml:space="preserve">
          <source>Play the audio recorded in &lt;var&gt;recorder&lt;/var&gt; and return a corresponding audioplayer object.</source>
          <target state="translated">&lt;var&gt;recorder&lt;/var&gt; 記録されたオーディオを再生し、対応するaudioplayerオブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="a90d2c2fe1f01538de72946f8c10f4cd3905be8d" translate="yes" xml:space="preserve">
          <source>Play the movie &lt;code&gt;abs (&lt;var&gt;n&lt;/var&gt;(1)&lt;/code&gt; times alternatively in forward and backward order.</source>
          <target state="translated">ムービーを &lt;code&gt;abs (&lt;var&gt;n&lt;/var&gt;(1)&lt;/code&gt; 回、順方向と逆順で交互に再生します。</target>
        </trans-unit>
        <trans-unit id="1cb100e7cdea9e4e5f29b0d860b9b7fba5ad3822" translate="yes" xml:space="preserve">
          <source>Play the movie &lt;var&gt;n&lt;/var&gt;(1) times.</source>
          <target state="translated">ムービーを &lt;var&gt;n&lt;/var&gt; （1）回再生します。</target>
        </trans-unit>
        <trans-unit id="c8e3087049119a4af5ed19e263821d62be8e8365" translate="yes" xml:space="preserve">
          <source>Playback</source>
          <target state="translated">Playback</target>
        </trans-unit>
        <trans-unit id="c33378acde5396fdfa222e08acc95ab34601660b" translate="yes" xml:space="preserve">
          <source>Player Properties</source>
          <target state="translated">プレイヤーのプロパティ</target>
        </trans-unit>
        <trans-unit id="f193b2242b6707240f995120ce45ec19f0d7091f" translate="yes" xml:space="preserve">
          <source>Plot Annotations</source>
          <target state="translated">プロットアノテーション</target>
        </trans-unit>
        <trans-unit id="b3aea7eeb4558a7a4916f4d0c6fdd4806619b09f" translate="yes" xml:space="preserve">
          <source>Plot a 2-D function in polar coordinates.</source>
          <target state="translated">極座標で2次元関数をプロットします。</target>
        </trans-unit>
        <trans-unit id="3bb58ad3be30ba5fb14c9edb99ea3b5c5a96d4c6" translate="yes" xml:space="preserve">
          <source>Plot a 2-D pie chart.</source>
          <target state="translated">2次元円グラフをプロットします。</target>
        </trans-unit>
        <trans-unit id="7b5b99364a017fd64fd45c8e3e04059b638ccd98" translate="yes" xml:space="preserve">
          <source>Plot a 2-D stem graph.</source>
          <target state="translated">2次元ステムグラフをプロットします。</target>
        </trans-unit>
        <trans-unit id="710fc9ac51085371ad3037bf3a8873c26681488c" translate="yes" xml:space="preserve">
          <source>Plot a 2-D triangular mesh.</source>
          <target state="translated">2次元の三角メッシュをプロットします。</target>
        </trans-unit>
        <trans-unit id="66e12d156cad40240e6f74f6f8884130feeb8de3" translate="yes" xml:space="preserve">
          <source>Plot a 2-D vector field with arrows.</source>
          <target state="translated">2次元ベクトル場を矢印でプロットします。</target>
        </trans-unit>
        <trans-unit id="e68e51d92b1aaeec67ff0f54476d5b374885c523" translate="yes" xml:space="preserve">
          <source>Plot a 3-D ellipsoid.</source>
          <target state="translated">3次元楕円体をプロットします。</target>
        </trans-unit>
        <trans-unit id="d7e0386e9871a8882b1649e0147a7705d4f0b57e" translate="yes" xml:space="preserve">
          <source>Plot a 3-D pie chart.</source>
          <target state="translated">3D円グラフをプロットします。</target>
        </trans-unit>
        <trans-unit id="3f05fee61d80244aa8e7aa725c5c1611def9b7c7" translate="yes" xml:space="preserve">
          <source>Plot a 3-D stem graph.</source>
          <target state="translated">3Dステムグラフをプロットします。</target>
        </trans-unit>
        <trans-unit id="eef16a1d0a0bf0ff3d70843196a3a5c7e17d45a7" translate="yes" xml:space="preserve">
          <source>Plot a 3-D surface mesh with underlying contour lines.</source>
          <target state="translated">輪郭線の下にある3次元表面メッシュをプロットします。</target>
        </trans-unit>
        <trans-unit id="b4dd9d8e0e59f55e06bc9ce460da6a4b76a90764" translate="yes" xml:space="preserve">
          <source>Plot a 3-D surface mesh.</source>
          <target state="translated">3次元の表面メッシュをプロットします。</target>
        </trans-unit>
        <trans-unit id="e146eef1528b39874d353f5932ba68dd7c3727e4" translate="yes" xml:space="preserve">
          <source>Plot a 3-D surface using shading based on various lighting models.</source>
          <target state="translated">様々な照明モデルに基づいたシェーディングを使用して、3D サーフェスをプロットします。</target>
        </trans-unit>
        <trans-unit id="07a042c91bfc207c4a84ae3ae9fcbef9a9d7611a" translate="yes" xml:space="preserve">
          <source>Plot a 3-D triangular surface.</source>
          <target state="translated">三次元の三角面をプロットします。</target>
        </trans-unit>
        <trans-unit id="c9c5d33ed77576ef9c5e713e8f8d81d663d74084" translate="yes" xml:space="preserve">
          <source>Plot a 3-D triangular wireframe mesh.</source>
          <target state="translated">三次元の三角ワイヤーフレームのメッシュをプロットします。</target>
        </trans-unit>
        <trans-unit id="232401a389dae5e6d31fc8e2068ce3b9b57d2236" translate="yes" xml:space="preserve">
          <source>Plot a 3-D unit cylinder.</source>
          <target state="translated">3次元単位の円柱をプロットします。</target>
        </trans-unit>
        <trans-unit id="d0e124a482ac495a300b96d025c7119d8df331a4" translate="yes" xml:space="preserve">
          <source>Plot a 3-D unit sphere.</source>
          <target state="translated">3次元単位球体をプロットします。</target>
        </trans-unit>
        <trans-unit id="cbe91f628211ccc516fcbf5004ebebf7538623b5" translate="yes" xml:space="preserve">
          <source>Plot a 3-D vector field with arrows.</source>
          <target state="translated">3次元ベクトルフィールドを矢印でプロットします。</target>
        </trans-unit>
        <trans-unit id="7cc0160a993737096aa9373ff76cda1ddacf35a4" translate="yes" xml:space="preserve">
          <source>Plot a 3-D waterfall plot.</source>
          <target state="translated">3次元の滝をプロットします。</target>
        </trans-unit>
        <trans-unit id="d718a31b4a7acf92c3d811499581ffb7a1308161" translate="yes" xml:space="preserve">
          <source>Plot a 3-D wireframe mesh with a surrounding curtain.</source>
          <target state="translated">3Dワイヤーフレームのメッシュを周囲のカーテンでプロットします。</target>
        </trans-unit>
        <trans-unit id="65d5762daffcd16be6ab9a7821c65f54baa61a83" translate="yes" xml:space="preserve">
          <source>Plot a 3-D wireframe mesh with underlying contour lines.</source>
          <target state="translated">3Dワイヤーフレームメッシュを等高線でプロットします。</target>
        </trans-unit>
        <trans-unit id="3343a1c5bbc31f808a19ff8333a54e572c8a5e01" translate="yes" xml:space="preserve">
          <source>Plot a 3-D wireframe mesh.</source>
          <target state="translated">3Dワイヤーフレームのメッシュをプロットします。</target>
        </trans-unit>
        <trans-unit id="5cab8bf5e20dd160c666251df15282eacd05b316" translate="yes" xml:space="preserve">
          <source>Plot a function &lt;var&gt;fn&lt;/var&gt; within the range defined by &lt;var&gt;limits&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;limits&lt;/var&gt; で定義された範囲内で関数 &lt;var&gt;fn&lt;/var&gt; をプロットします。</target>
        </trans-unit>
        <trans-unit id="5ec1a338b1f0f45c5154a36dfd8f1b85eb96afd9" translate="yes" xml:space="preserve">
          <source>Plot a function with lots of local maxima and minima.</source>
          <target state="translated">局所的な最大値と最小値の多い関数をプロットします。</target>
        </trans-unit>
        <trans-unit id="02109df1b23ea737f4ffa3a52cf676241871578e" translate="yes" xml:space="preserve">
          <source>Plot a graph defined by &lt;var&gt;A&lt;/var&gt; and &lt;var&gt;xy&lt;/var&gt; in the graph theory sense.</source>
          <target state="translated">グラフ理論の意味で、 &lt;var&gt;A&lt;/var&gt; と &lt;var&gt;xy&lt;/var&gt; で定義されたグラフをプロットします。</target>
        </trans-unit>
        <trans-unit id="19423b451cb3b339d1a3eb6d5dc256bc32346711" translate="yes" xml:space="preserve">
          <source>Plot a parametrically defined curve in three dimensions.</source>
          <target state="translated">パラメトリックに定義された曲線を3次元でプロットします。</target>
        </trans-unit>
        <trans-unit id="4a61fa141ca0421769288ddfa21c6cda5531269a" translate="yes" xml:space="preserve">
          <source>Plot an angular histogram.</source>
          <target state="translated">角度ヒストグラムをプロットします。</target>
        </trans-unit>
        <trans-unit id="19f519f6651aebac32d7e6e287842a091c444a3d" translate="yes" xml:space="preserve">
          <source>Plot level curves (contour lines) of the matrix &lt;var&gt;z&lt;/var&gt; and fill the region between lines with colors from the current colormap.</source>
          <target state="translated">行列 &lt;var&gt;z&lt;/var&gt; のレベル曲線（等高線）をプロットし、線の間の領域を現在のカラーマップの色で塗りつぶします。</target>
        </trans-unit>
        <trans-unit id="8ee90b844be29bb839e684767d254979a6d78993" translate="yes" xml:space="preserve">
          <source>Plot level curves (contour lines) of the matrix &lt;var&gt;z&lt;/var&gt;, using the contour matrix &lt;var&gt;c&lt;/var&gt; computed by &lt;code&gt;contourc&lt;/code&gt; from the same arguments; see the latter for their interpretation.</source>
          <target state="translated">同じ引数から &lt;code&gt;contourc&lt;/code&gt; によって計算された等高線行列 &lt;var&gt;c&lt;/var&gt; を使用して、行列 &lt;var&gt;z&lt;/var&gt; のレベル曲線（等高線）をプロットします。それらの解釈については、後者を参照してください。</target>
        </trans-unit>
        <trans-unit id="b1d70d8a2bc72fe3880dba5512d9511fd4a52d5f" translate="yes" xml:space="preserve">
          <source>Plot size in pixels for raster formats including PNG, JPEG, PNG, and (unusually (SVG)). For all vector formats, including PDF, PS, and EPS, the plot size is specified in points. This option is equivalent to changing the width and height of the output by setting the figure property &lt;code&gt;paperposition(3:4)&lt;/code&gt;. When using the command form of the print function you must quote the &lt;var&gt;xsize&lt;/var&gt;,&lt;var&gt;ysize&lt;/var&gt; option to prevent the Octave interpreter from recognizing the embedded comma (&amp;rsquo;,&amp;rsquo;). For example, by writing &quot;-S640,480&quot;.</source>
          <target state="translated">PNG、JPEG、PNG、および（通常は（SVG））などのラスター形式のサイズをピクセルでプロットします。 PDF、PS、EPSを含むすべてのベクトル形式では、プロットサイズはポイントで指定されます。このオプションは、図のプロパティ &lt;code&gt;paperposition(3:4)&lt;/code&gt; を設定して出力の幅と高さを変更するのと同じです。 print関数のコマンド形式を使用するときは、 &lt;var&gt;xsize&lt;/var&gt; 、 &lt;var&gt;ysize&lt;/var&gt; オプションを引用符で囲んで、Octaveインタープリターが埋め込まれたコンマ（ '、'）を認識しないようにする必要があります。たとえば、 &quot;-S640,480&quot;と記述します。</target>
        </trans-unit>
        <trans-unit id="f93356b206cb01c52c1bb2c86760879ec01b1e7e" translate="yes" xml:space="preserve">
          <source>Plot size in pixels for raster formats including PNG, JPEG, PNG, and &lt;em&gt;unusually&lt;/em&gt; SVG. For all vector formats, including PDF, PS, and EPS, the plot size is specified in points. This option is equivalent to changing the width and height of the output by setting the figure property &lt;code&gt;paperposition(3:4)&lt;/code&gt;. When using the command form of the print function you must quote the &lt;var&gt;xsize&lt;/var&gt;,&lt;var&gt;ysize&lt;/var&gt; option to prevent the Octave interpreter from recognizing the embedded comma (&amp;rsquo;,&amp;rsquo;). For example, by writing &quot;-S640,480&quot;.</source>
          <target state="translated">PNG、JPEG、PNG、および&lt;em&gt;異常に&lt;/em&gt;SVGを含むラスター形式のピクセル単位のプロットサイズ。 PDF、PS、EPSを含むすべてのベクター形式で、プロットサイズはポイントで指定されます。このオプションは、figureプロパティ &lt;code&gt;paperposition(3:4)&lt;/code&gt; を設定して出力の幅と高さを変更するのと同じです。 print関数のコマンド形式を使用する場合は、 &lt;var&gt;xsize&lt;/var&gt; 、 &lt;var&gt;ysize&lt;/var&gt; オプションを引用符で囲んで、Octaveインタープリターが埋め込まれたコンマ（ '、'）を認識しないようにする必要があります。たとえば、「-S640,480」と書くと。</target>
        </trans-unit>
        <trans-unit id="e51107bc0efbf6ae2cdf91d9db29f8f8cbfadb6b" translate="yes" xml:space="preserve">
          <source>Plot slices of 3-D data/scalar fields.</source>
          <target state="translated">3次元データ/スカラーフィールドのスライスをプロットします。</target>
        </trans-unit>
        <trans-unit id="822f1dba638485d90a1a17a64dbc0a6f00c68df6" translate="yes" xml:space="preserve">
          <source>Plot streamlines of 2-D or 3-D vector fields.</source>
          <target state="translated">2次元または3次元のベクトルフィールドの流線をプロットします。</target>
        </trans-unit>
        <trans-unit id="c72e00c26e3c5deec6c5c25b70b751f2f301102e" translate="yes" xml:space="preserve">
          <source>Plot streamlines of a 2-D or 3-D vector field given by &lt;code&gt;[&lt;var&gt;u&lt;/var&gt;, &lt;var&gt;v&lt;/var&gt;]&lt;/code&gt; or &lt;code&gt;[&lt;var&gt;u&lt;/var&gt;, &lt;var&gt;v&lt;/var&gt;, &lt;var&gt;w&lt;/var&gt;]&lt;/code&gt;. The vector field is defined over a rectangular grid given by &lt;code&gt;[&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;]&lt;/code&gt; or &lt;code&gt;[&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;, &lt;var&gt;z&lt;/var&gt;]&lt;/code&gt;. The streamlines start at the seed points &lt;code&gt;[&lt;var&gt;sx&lt;/var&gt;, &lt;var&gt;sy&lt;/var&gt;]&lt;/code&gt; or &lt;code&gt;[&lt;var&gt;sx&lt;/var&gt;, &lt;var&gt;sy&lt;/var&gt;, &lt;var&gt;sz&lt;/var&gt;]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;[&lt;var&gt;u&lt;/var&gt;, &lt;var&gt;v&lt;/var&gt;]&lt;/code&gt; または &lt;code&gt;[&lt;var&gt;u&lt;/var&gt;, &lt;var&gt;v&lt;/var&gt;, &lt;var&gt;w&lt;/var&gt;]&lt;/code&gt; 与えられる2次元または3次元のベクトル場の流線をプロットします。ベクトル場は、 &lt;code&gt;[&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;]&lt;/code&gt; または &lt;code&gt;[&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;, &lt;var&gt;z&lt;/var&gt;]&lt;/code&gt; 与えられる長方形グリッド上で定義されます。流線はシードポイント &lt;code&gt;[&lt;var&gt;sx&lt;/var&gt;, &lt;var&gt;sy&lt;/var&gt;]&lt;/code&gt; または &lt;code&gt;[&lt;var&gt;sx&lt;/var&gt;, &lt;var&gt;sy&lt;/var&gt;, &lt;var&gt;sz&lt;/var&gt;]&lt;/code&gt; から始まります。</target>
        </trans-unit>
        <trans-unit id="93f305fb0e2cbabfc1911dfbb721ada150d14586" translate="yes" xml:space="preserve">
          <source>Plot the (&lt;var&gt;u&lt;/var&gt;, &lt;var&gt;v&lt;/var&gt;) components of a vector field at the grid points defined by (&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;). If the grid is uniform then &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; can be specified as vectors and &lt;code&gt;meshgrid&lt;/code&gt; is used to create the 2-D grid.</source>
          <target state="translated">（ &lt;var&gt;x&lt;/var&gt; 、 &lt;var&gt;y&lt;/var&gt; ）で定義されたグリッド点でベクトル場の（ &lt;var&gt;u&lt;/var&gt; 、 &lt;var&gt;v&lt;/var&gt; ）成分をプロットします。グリッドが均一の場合、 &lt;var&gt;x&lt;/var&gt; および &lt;var&gt;y&lt;/var&gt; をベクトルとして指定でき、 &lt;code&gt;meshgrid&lt;/code&gt; を使用して2次元グリッドを作成します。</target>
        </trans-unit>
        <trans-unit id="2546df41007ae342a8e0f2fc75a05d5e79ca14bc" translate="yes" xml:space="preserve">
          <source>Plot the (&lt;var&gt;u&lt;/var&gt;, &lt;var&gt;v&lt;/var&gt;, &lt;var&gt;w&lt;/var&gt;) components of a vector field at the grid points defined by (&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;, &lt;var&gt;z&lt;/var&gt;). If the grid is uniform then &lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;, and &lt;var&gt;z&lt;/var&gt; can be specified as vectors and &lt;code&gt;meshgrid&lt;/code&gt; is used to create the 3-D grid.</source>
          <target state="translated">（ &lt;var&gt;x&lt;/var&gt; 、 &lt;var&gt;y&lt;/var&gt; 、 &lt;var&gt;z&lt;/var&gt; ）で定義されたグリッド点にあるベクトルフィールドの（ &lt;var&gt;u&lt;/var&gt; 、 &lt;var&gt;v&lt;/var&gt; 、 &lt;var&gt;w&lt;/var&gt; ）成分をプロットします。グリッドが均一である場合、 &lt;var&gt;x&lt;/var&gt; 、 &lt;var&gt;y&lt;/var&gt; 、および &lt;var&gt;z&lt;/var&gt; をベクトルとして指定でき、 &lt;code&gt;meshgrid&lt;/code&gt; を使用して3次元グリッドを作成します。</target>
        </trans-unit>
        <trans-unit id="977baf7ac8aab649da818218f5b9d8e2c675ce95" translate="yes" xml:space="preserve">
          <source>Plot the 2-D curve defined by the function &lt;var&gt;f&lt;/var&gt;.</source>
          <target state="translated">関数 &lt;var&gt;f&lt;/var&gt; で定義された2次元曲線をプロットします。</target>
        </trans-unit>
        <trans-unit id="4d40079f05e9e78b38045e65e2692d3632ab1244" translate="yes" xml:space="preserve">
          <source>Plot the &lt;code&gt;(&lt;var&gt;u&lt;/var&gt;, &lt;var&gt;v&lt;/var&gt;)&lt;/code&gt; components of a vector field emanating from equidistant points on the x-axis.</source>
          <target state="translated">x軸上の等間隔の点から発するベクトル場の &lt;code&gt;(&lt;var&gt;u&lt;/var&gt;, &lt;var&gt;v&lt;/var&gt;)&lt;/code&gt; 成分をプロットします。</target>
        </trans-unit>
        <trans-unit id="c918f92086b1739faf1dd8e402d5881e639d2b86" translate="yes" xml:space="preserve">
          <source>Plot the &lt;code&gt;(&lt;var&gt;u&lt;/var&gt;, &lt;var&gt;v&lt;/var&gt;)&lt;/code&gt; components of a vector field emanating from the origin of a polar plot.</source>
          <target state="translated">極座標プロットの原点から発するベクトル場の &lt;code&gt;(&lt;var&gt;u&lt;/var&gt;, &lt;var&gt;v&lt;/var&gt;)&lt;/code&gt; 成分をプロットします。</target>
        </trans-unit>
        <trans-unit id="23b684a592e8fc79a3d44828bf8a14d1cc3633eb" translate="yes" xml:space="preserve">
          <source>Plot the RGB line profile of the colormap for each of the channels (red, green and blue) with the plot lines colored appropriately. Each line represents the intensity of an RGB component across the colormap.</source>
          <target state="translated">各チャンネル(赤、緑、青)のカラーマップの RGB ラインプロファイルをプロットします。各線は、カラーマップ全体のRGB成分の強度を表しています。</target>
        </trans-unit>
        <trans-unit id="cfc29fd26aa06e08bfbdc5eb247964c956aa103c" translate="yes" xml:space="preserve">
          <source>Plot the Voronoi diagram of points &lt;code&gt;(&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="translated">点 &lt;code&gt;(&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt; のボロノイ図をプロットします。</target>
        </trans-unit>
        <trans-unit id="8f18f1660ae317e7ff730380238a8d18b7b48f83" translate="yes" xml:space="preserve">
          <source>Plot the components of a colormap.</source>
          <target state="translated">カラーマップの構成要素をプロットします。</target>
        </trans-unit>
        <trans-unit id="2bac6807a2bf2599271105623d5dce3e4b344655" translate="yes" xml:space="preserve">
          <source>Plot the contour lines of a function.</source>
          <target state="translated">関数の等高線をプロットします。</target>
        </trans-unit>
        <trans-unit id="33ce66fd97a01846ad5e40a15407dc5334bec7db" translate="yes" xml:space="preserve">
          <source>Plot the elimination tree of the matrix &lt;var&gt;A&lt;/var&gt; or &lt;code&gt;&lt;var&gt;A&lt;/var&gt;+&lt;var&gt;A&lt;/var&gt;'&lt;/code&gt; if &lt;var&gt;A&lt;/var&gt; in not symmetric.</source>
          <target state="translated">&lt;var&gt;A&lt;/var&gt; が対称でない場合、行列 &lt;var&gt;A&lt;/var&gt; の消去木または &lt;code&gt;&lt;var&gt;A&lt;/var&gt;+&lt;var&gt;A&lt;/var&gt;'&lt;/code&gt; プロットします。</target>
        </trans-unit>
        <trans-unit id="777e2eee3cea17e267cb9d058f2e755c96567bad" translate="yes" xml:space="preserve">
          <source>Plot the familiar 3-D sombrero function.</source>
          <target state="translated">おなじみの立体ソンブレロ機能をプロット。</target>
        </trans-unit>
        <trans-unit id="6ddd12fe13473c25e2def32a7e4827fc289b35db" translate="yes" xml:space="preserve">
          <source>Plot the filled contour lines of a function.</source>
          <target state="translated">関数の塗りつぶされた等高線をプロットします。</target>
        </trans-unit>
        <trans-unit id="c5ec8de4bdce3e0962322964c21c6a70cf3ba7c5" translate="yes" xml:space="preserve">
          <source>Plot the magnitude and phase response of &lt;var&gt;h&lt;/var&gt; rather than returning them.</source>
          <target state="translated">&lt;var&gt;h&lt;/var&gt; の大きさと位相応答を返すのではなく、プロットします。</target>
        </trans-unit>
        <trans-unit id="9d221ab550417b83e0e8737a0aaecb000dbf722e" translate="yes" xml:space="preserve">
          <source>Plot the magnitude and phase response of &lt;var&gt;h&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;h&lt;/var&gt; の振幅と位相応答をプロットします。</target>
        </trans-unit>
        <trans-unit id="9d16494121b234bfff5745b1739e2c1a4183eb12" translate="yes" xml:space="preserve">
          <source>Plot the mesh and contour lines defined by a function.</source>
          <target state="translated">関数で定義されたメッシュと等高線をプロットします。</target>
        </trans-unit>
        <trans-unit id="588239bb2bd98dcb370d4f5250bd955cb29cf74c" translate="yes" xml:space="preserve">
          <source>Plot the mesh defined by a function.</source>
          <target state="translated">関数で定義されたメッシュをプロットします。</target>
        </trans-unit>
        <trans-unit id="d30b91826f10ac5ce96c699c4943aa2738436384" translate="yes" xml:space="preserve">
          <source>Plot the sparsity pattern of the sparse matrix &lt;var&gt;x&lt;/var&gt;.</source>
          <target state="translated">スパース行列 &lt;var&gt;x&lt;/var&gt; のスパースパターンをプロットします。</target>
        </trans-unit>
        <trans-unit id="5cfed021690484cdf00dd5c9ef329fc2495cbaee" translate="yes" xml:space="preserve">
          <source>Plot the surface and contour lines defined by a function.</source>
          <target state="translated">関数で定義されたサーフェスと等高線をプロットします。</target>
        </trans-unit>
        <trans-unit id="6525b0d8fc2e48c65a83b37bbc055d3ba7ebe292" translate="yes" xml:space="preserve">
          <source>Plot the surface defined by a function.</source>
          <target state="translated">関数で定義された曲面をプロットします。</target>
        </trans-unit>
        <trans-unit id="fa4e1f83f2c04a264ad3c6cd9097433ab4c4dfb3" translate="yes" xml:space="preserve">
          <source>Plot tubes scaled by the divergence along streamlines.</source>
          <target state="translated">流線に沿った発散によってスケールされたチューブをプロットします。</target>
        </trans-unit>
        <trans-unit id="1e080ce195a561d7a6f9658774fb7dda72909a64" translate="yes" xml:space="preserve">
          <source>Plot two sets of data with independent y-axes and a common x-axis.</source>
          <target state="translated">独立したy軸と共通のx軸を持つ2つのデータセットをプロットします。</target>
        </trans-unit>
        <trans-unit id="d1431a1959fe1196c8f4695eb0b5b4cd6d881195" translate="yes" xml:space="preserve">
          <source>Plotting</source>
          <target state="translated">Plotting</target>
        </trans-unit>
        <trans-unit id="298a35262a3d74fa1b69a5ca381925acfc3d2019" translate="yes" xml:space="preserve">
          <source>Plotting on top of Images</source>
          <target state="translated">画像の上にプロット</target>
        </trans-unit>
        <trans-unit id="730c094248f4bf4e8ebaf008c955d725b6d50a83" translate="yes" xml:space="preserve">
          <source>Plotting the Triangulation</source>
          <target state="translated">三角測量のプロット</target>
        </trans-unit>
        <trans-unit id="bdfc615ed0da0f3e70a23236a672528e44b15b6f" translate="yes" xml:space="preserve">
          <source>Poisson Distribution</source>
          <target state="translated">魚の分布</target>
        </trans-unit>
        <trans-unit id="289c31232e55e5427685eb6dd444c9003d6eda61" translate="yes" xml:space="preserve">
          <source>Polynomial Interpolation</source>
          <target state="translated">多項式補間</target>
        </trans-unit>
        <trans-unit id="db6c3353797d89b4c0fc2f4805663a1dfe001e99" translate="yes" xml:space="preserve">
          <source>Polynomial Manipulations</source>
          <target state="translated">多項式の操作</target>
        </trans-unit>
        <trans-unit id="bdc852a04e52e6af67574114fa80093d888eaa86" translate="yes" xml:space="preserve">
          <source>Polynomial coefficients for points in sample interval. &lt;code&gt;&lt;var&gt;p&lt;/var&gt;(&lt;var&gt;i&lt;/var&gt;, :)&lt;/code&gt; contains the coefficients for the polynomial over interval &lt;var&gt;i&lt;/var&gt; ordered from highest to lowest degree. If &lt;code&gt;&lt;var&gt;d&lt;/var&gt; &amp;gt; 1&lt;/code&gt;, then &lt;var&gt;p&lt;/var&gt; is a matrix of size &lt;code&gt;[&lt;var&gt;n&lt;/var&gt;*prod(&lt;var&gt;d&lt;/var&gt;) &lt;var&gt;m&lt;/var&gt;]&lt;/code&gt;, where the &lt;code&gt;&lt;var&gt;i&lt;/var&gt; + (1:&lt;var&gt;d&lt;/var&gt;)&lt;/code&gt; rows are the coefficients of all the &lt;var&gt;d&lt;/var&gt; polynomials in the interval &lt;var&gt;i&lt;/var&gt;.</source>
          <target state="translated">サンプル間隔のポイントの多項式係数。 &lt;code&gt;&lt;var&gt;p&lt;/var&gt;(&lt;var&gt;i&lt;/var&gt;, :)&lt;/code&gt; は、最高次から最低次の順に並べられた間隔 &lt;var&gt;i&lt;/var&gt; での多項式の係数を含みます。場合 &lt;code&gt;&lt;var&gt;d&lt;/var&gt; &amp;gt; 1&lt;/code&gt; 、次いで &lt;var&gt;p&lt;/var&gt; はサイズの行列であり、 &lt;code&gt;[&lt;var&gt;n&lt;/var&gt;*prod(&lt;var&gt;d&lt;/var&gt;) &lt;var&gt;m&lt;/var&gt;]&lt;/code&gt; 、ここで、 &lt;code&gt;&lt;var&gt;i&lt;/var&gt; + (1:&lt;var&gt;d&lt;/var&gt;)&lt;/code&gt; の行は、すべての係数である &lt;var&gt;d&lt;/var&gt; 間隔の多項式 &lt;var&gt;i&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="89a46693301c5693687f523b55b4d37023611672" translate="yes" xml:space="preserve">
          <source>PortAudio</source>
          <target state="translated">PortAudio</target>
        </trans-unit>
        <trans-unit id="ccaccd4fada514b2cbf659526d3072ecf581265f" translate="yes" xml:space="preserve">
          <source>PortAudio (&lt;a href=&quot;http://www.portaudio.com/&quot;&gt;http://www.portaudio.com/&lt;/a&gt;) provides a very simple API for recording and/or playing sound using a simple callback function or a blocking read/write interface. It is required for the audio processing functions &lt;code&gt;audioplayer&lt;/code&gt;, &lt;code&gt;audiorecorder&lt;/code&gt;, and &lt;code&gt;audiodevinfo&lt;/code&gt;.</source>
          <target state="translated">PortAudio（&lt;a href=&quot;http://www.portaudio.com/&quot;&gt;http://www.portaudio.com/&lt;/a&gt;）は、単純なコールバック関数またはブロック化された読み取り/書き込みインターフェースを使用して、サウンドを録音または再生するための非常に単純なAPIを提供します。これは、オーディオ処理関数 &lt;code&gt;audioplayer&lt;/code&gt; 、 &lt;code&gt;audiorecorder&lt;/code&gt; 、および &lt;code&gt;audiodevinfo&lt;/code&gt; に必要です。</target>
        </trans-unit>
        <trans-unit id="9c1704c3bf01a85da027dcb0f19f88e067800ee8" translate="yes" xml:space="preserve">
          <source>Portable Document Format</source>
          <target state="translated">ポータブルドキュメント形式</target>
        </trans-unit>
        <trans-unit id="ae3684b637d6673b960c946fc996759a44945c70" translate="yes" xml:space="preserve">
          <source>Portable Document Format. The &lt;code&gt;pdf&lt;/code&gt; device formats the figure for printing on paper. The size of the surrounding page and the position of the figure inside the page are defined by the &lt;a href=&quot;figure-properties#XREFfigurepaperorientation&quot;&gt;paper* figure properties&lt;/a&gt;.</source>
          <target state="translated">ポータブルドキュメントフォーマット。 &lt;code&gt;pdf&lt;/code&gt; デバイスは、紙に印刷するための図をフォーマットします。周囲のページのサイズとページ内の図の位置は、&lt;a href=&quot;figure-properties#XREFfigurepaperorientation&quot;&gt;paper *図のプロパティ&lt;/a&gt;によって定義されます。</target>
        </trans-unit>
        <trans-unit id="b6f115149e4405d841c0fdf7834b25bacb4cf5f1" translate="yes" xml:space="preserve">
          <source>Portable Document Format. The &lt;code&gt;pdfcrop&lt;/code&gt; device removes the default surrounding page.</source>
          <target state="translated">ポータブルドキュメントフォーマット。 &lt;code&gt;pdfcrop&lt;/code&gt; のデバイスは、デフォルトの周囲のページを削除します。</target>
        </trans-unit>
        <trans-unit id="d5b03f07d6cf7673c0c508e75120b4ec69b949d9" translate="yes" xml:space="preserve">
          <source>Portable GUI toolkit (&lt;a href=&quot;http://www.fltk.org&quot;&gt;http://www.fltk.org&lt;/a&gt;). FLTK can be used to provide windows for Octave&amp;rsquo;s OpenGL-based graphics functions.</source>
          <target state="translated">ポータブルGUIツールキット（&lt;a href=&quot;http://www.fltk.org&quot;&gt;http://www.fltk.org&lt;/a&gt;）。FLTKを使用して、OctaveのOpenGLベースのグラフィックス機能用のウィンドウを提供できます。</target>
        </trans-unit>
        <trans-unit id="5c220227521a5713ee84faf960a2c8b828bf3301" translate="yes" xml:space="preserve">
          <source>Portable GUI toolkit (&lt;a href=&quot;http://www.fltk.org&quot;&gt;http://www.fltk.org&lt;/a&gt;). FLTK is currently used to provide windows for Octave&amp;rsquo;s OpenGL-based graphics functions.</source>
          <target state="translated">ポータブルGUIツールキット（&lt;a href=&quot;http://www.fltk.org&quot;&gt;http://www.fltk.org&lt;/a&gt;）。FLTKは現在、OctaveのOpenGLベースのグラフィック機能にウィンドウを提供するために使用されています。</target>
        </trans-unit>
        <trans-unit id="0655d96b4660aed951fededfbd01c7c59119ecd3" translate="yes" xml:space="preserve">
          <source>Portable Network Graphics</source>
          <target state="translated">ポータブルネットワークグラフィックス</target>
        </trans-unit>
        <trans-unit id="3432b68b664f8ad9233f8387e77b6263bcf7757d" translate="yes" xml:space="preserve">
          <source>Portable Network Graphics image</source>
          <target state="translated">ポータブルネットワークグラフィックスイメージ</target>
        </trans-unit>
        <trans-unit id="71cf4f31be700637efaf53fb78dee46aa1bce75f" translate="yes" xml:space="preserve">
          <source>Portable Pixel Map file format</source>
          <target state="translated">ポータブルピクセルマップファイル形式</target>
        </trans-unit>
        <trans-unit id="ba5af7c0b2d95fec5441a7837e46913bf4152cc3" translate="yes" xml:space="preserve">
          <source>Portable font engine (&lt;a href=&quot;https://www.freetype.org&quot;&gt;https://www.freetype.org&lt;/a&gt;). FreeType is used to perform font rendering for Octave&amp;rsquo;s OpenGL-based graphics functions.</source>
          <target state="translated">ポータブルフォントエンジン（&lt;a href=&quot;https://www.freetype.org&quot;&gt;https://www.freetype.org&lt;/a&gt;）。FreeTypeは、OctaveのOpenGLベースのグラフィック関数のフォントレンダリングを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="2467aeb9fed997bfa0ce27ed7c0716b3f74b088b" translate="yes" xml:space="preserve">
          <source>Position numbering for offsets begins with 1. If &lt;var&gt;offset&lt;/var&gt; is negative, extraction starts that far from the end of the string.</source>
          <target state="translated">オフセットの位置番号は1から始まります &lt;var&gt;offset&lt;/var&gt; が負の場合、抽出は文字列の最後からその位置から始まります。</target>
        </trans-unit>
        <trans-unit id="09f9eea00f277aec557282eec6c7c3be9951a348" translate="yes" xml:space="preserve">
          <source>Position of the light source.</source>
          <target state="translated">光源の位置。</target>
        </trans-unit>
        <trans-unit id="9188b85f0abfdeeb351c7fd4f26e40e3262cca2c" translate="yes" xml:space="preserve">
          <source>Position of x tick marks. Setting &lt;code&gt;xtick&lt;/code&gt; also forces the &lt;code&gt;xtickmode&lt;/code&gt; property to be set to &lt;code&gt;&quot;manual&quot;&lt;/code&gt;.</source>
          <target state="translated">x目盛りの位置。 &lt;code&gt;xtick&lt;/code&gt; を設定すると、 &lt;code&gt;xtickmode&lt;/code&gt; プロパティも強制的に &lt;code&gt;&quot;manual&quot;&lt;/code&gt; に設定されます。</target>
        </trans-unit>
        <trans-unit id="f19cdfd01e7e00324b3fff28c0b0c362ec49f2d9" translate="yes" xml:space="preserve">
          <source>Position of y tick marks. Setting &lt;code&gt;ytick&lt;/code&gt; also forces the &lt;code&gt;ytickmode&lt;/code&gt; property to be set to &lt;code&gt;&quot;manual&quot;&lt;/code&gt;.</source>
          <target state="translated">y目盛りの位置。設定 &lt;code&gt;ytick&lt;/code&gt; はまた、強制的に &lt;code&gt;ytickmode&lt;/code&gt; のプロパティに設定されるように &lt;code&gt;&quot;manual&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6f53e063e1afc0f30363b0387db0979eb21be9e6" translate="yes" xml:space="preserve">
          <source>Position of z tick marks. Setting &lt;code&gt;ztick&lt;/code&gt; also forces the &lt;code&gt;ztickmode&lt;/code&gt; property to be set to &lt;code&gt;&quot;manual&quot;&lt;/code&gt;.</source>
          <target state="translated">z目盛りの位置。 &lt;code&gt;ztick&lt;/code&gt; を設定すると、 &lt;code&gt;ztickmode&lt;/code&gt; プロパティも強制的に &lt;code&gt;&quot;manual&quot;&lt;/code&gt; に設定されます。</target>
        </trans-unit>
        <trans-unit id="9c9c657a3cf769cd89dc5642fcc74a04253c39e6" translate="yes" xml:space="preserve">
          <source>Position the light source exactly</source>
          <target state="translated">光源を正確に配置する</target>
        </trans-unit>
        <trans-unit id="2a05a50d2be010f211df5e28f030436f08fff5eb" translate="yes" xml:space="preserve">
          <source>Possible &lt;var&gt;opts&lt;/var&gt; fields (set value to true/false):</source>
          <target state="translated">可能な &lt;var&gt;opts&lt;/var&gt; フィールド（値をtrue / falseに設定）：</target>
        </trans-unit>
        <trans-unit id="7b49650ba8abc0719b0fd974d3a86f78193e5708" translate="yes" xml:space="preserve">
          <source>Possible features are:</source>
          <target state="translated">可能な機能は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="6c52c8b554c1d3a8dd7a42d815189071db37a289" translate="yes" xml:space="preserve">
          <source>Possible operators are &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;==&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt; or &lt;code&gt;&amp;gt;&lt;/code&gt;. If the part of the dependency in &lt;code&gt;()&lt;/code&gt; is missing, any version of the package is acceptable. Multiple dependencies can be defined as a comma separated list.</source>
          <target state="translated">可能な演算子は &lt;code&gt;&amp;lt;&lt;/code&gt; 、 &lt;code&gt;&amp;lt;=&lt;/code&gt; 、 &lt;code&gt;==&lt;/code&gt; 、 &lt;code&gt;&amp;gt;=&lt;/code&gt; または &lt;code&gt;&amp;gt;&lt;/code&gt; です。 &lt;code&gt;()&lt;/code&gt; の依存関係の一部が欠落している場合は、パッケージのどのバージョンでも問題ありません。複数の依存関係は、コンマ区切りのリストとして定義できます。</target>
        </trans-unit>
        <trans-unit id="768afd5a7f523273ae4ea082c13adf89bc4aed46" translate="yes" xml:space="preserve">
          <source>Possible recognized features are:</source>
          <target state="translated">認識可能な機能は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="e3305d277f13e5cf9a4d09cbcdd58d102391bf3d" translate="yes" xml:space="preserve">
          <source>Possible values for &lt;var&gt;pos&lt;/var&gt; as a string are</source>
          <target state="translated">文字列としての &lt;var&gt;pos&lt;/var&gt; の可能な値は、</target>
        </trans-unit>
        <trans-unit id="0febe614e7fb6a9c7e763525b31dd9ddf490bd08" translate="yes" xml:space="preserve">
          <source>Possible values for &lt;var&gt;type&lt;/var&gt; are</source>
          <target state="translated">&lt;var&gt;type&lt;/var&gt; 可能な値は、</target>
        </trans-unit>
        <trans-unit id="b11760ac6da60641aa26ac00dba5c1716b0a232e" translate="yes" xml:space="preserve">
          <source>PostScript</source>
          <target state="translated">PostScript</target>
        </trans-unit>
        <trans-unit id="f2616d2af60e6d5daeaa3c1e0cceb779ce36dc99" translate="yes" xml:space="preserve">
          <source>PostScript (level 1 and 2, mono and color). The OpenGL-based graphics toolkits always generate PostScript level 3.0 and have limited support for text.</source>
          <target state="translated">PostScript(レベル1と2、モノラルとカラー)。OpenGLベースのグラフィックツールキットは常にPostScriptレベル3.0を生成し、テキストのサポートは限られています。</target>
        </trans-unit>
        <trans-unit id="a1eba35dc0fe736475de1071f716d7fa407fd6e0" translate="yes" xml:space="preserve">
          <source>Power operator. If &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; are both scalars, this operator returns &lt;var&gt;x&lt;/var&gt; raised to the power &lt;var&gt;y&lt;/var&gt;. If &lt;var&gt;x&lt;/var&gt; is a scalar and &lt;var&gt;y&lt;/var&gt; is a square matrix, the result is computed using an eigenvalue expansion. If &lt;var&gt;x&lt;/var&gt; is a square matrix, the result is computed by repeated multiplication if &lt;var&gt;y&lt;/var&gt; is an integer, and by an eigenvalue expansion if &lt;var&gt;y&lt;/var&gt; is not an integer. An error results if both &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; are matrices.</source>
          <target state="translated">パワーオペレーター。場合 &lt;var&gt;x&lt;/var&gt; と &lt;var&gt;y&lt;/var&gt; 両方ともスカラーであり、このオペレータ戻り、 &lt;var&gt;x&lt;/var&gt; は電源に上げ &lt;var&gt;y&lt;/var&gt; 。場合 &lt;var&gt;x&lt;/var&gt; スカラーであり、 &lt;var&gt;y&lt;/var&gt; が正方行列であり、結果は固有値展開を使用して計算されます。場合 &lt;var&gt;x&lt;/var&gt; が正方行列である場合、結果を繰り返し乗算することによって計算され &lt;var&gt;y&lt;/var&gt; 整数であり、固有値展開によって場合 &lt;var&gt;y&lt;/var&gt; 整数でありません。 &lt;var&gt;x&lt;/var&gt; と &lt;var&gt;y&lt;/var&gt; の両方が行列の場合、エラーが発生します。</target>
        </trans-unit>
        <trans-unit id="e5d95062f329a8e44e3ea54186b8c3468778516a" translate="yes" xml:space="preserve">
          <source>Precedence of Objects</source>
          <target state="translated">オブジェクトの優先順位</target>
        </trans-unit>
        <trans-unit id="29b8af6211d405f0e71d1833831fcff437c8facf" translate="yes" xml:space="preserve">
          <source>Predicates for Numeric Objects</source>
          <target state="translated">数値オブジェクトの述語</target>
        </trans-unit>
        <trans-unit id="707ddefda8b9d501a1d63dad3fcb74d0cb28b51a" translate="yes" xml:space="preserve">
          <source>Preface</source>
          <target state="translated">Preface</target>
        </trans-unit>
        <trans-unit id="a51669e4fa696bc4e2a2b847317651859d159135" translate="yes" xml:space="preserve">
          <source>Preformatted Code</source>
          <target state="translated">プリフォーマットされたコード</target>
        </trans-unit>
        <trans-unit id="42e9c2ceb637ab849d47e13acc2b43d0b037daec" translate="yes" xml:space="preserve">
          <source>Preformatted Text</source>
          <target state="translated">プリフォーマットされたテキスト</target>
        </trans-unit>
        <trans-unit id="c85ec437fbcbf2a939eab892523cfad6bcf2ebf5" translate="yes" xml:space="preserve">
          <source>Preliminary balancing is on.</source>
          <target state="translated">事前のバランシングがオンになっています。</target>
        </trans-unit>
        <trans-unit id="1e9d51b632d4a5bb9f9acabf3a91b2bfe6685123" translate="yes" xml:space="preserve">
          <source>Prepare graphics engine to produce a new plot.</source>
          <target state="translated">新しいプロットを生成するためのグラフィックエンジンを準備します。</target>
        </trans-unit>
        <trans-unit id="3e44a83d89a4796f4f038bc4956e43df2e0f9d32" translate="yes" xml:space="preserve">
          <source>Prepend the scalar value &lt;var&gt;c&lt;/var&gt; to the vector &lt;var&gt;x&lt;/var&gt; until it is of length &lt;var&gt;l&lt;/var&gt;. If &lt;var&gt;c&lt;/var&gt; is not given, a value of 0 is used.</source>
          <target state="translated">長さが &lt;var&gt;l&lt;/var&gt; になるまで、スカラー値 &lt;var&gt;c&lt;/var&gt; をベクトル &lt;var&gt;x&lt;/var&gt; の前に追加します。 &lt;var&gt;c&lt;/var&gt; が指定されていない場合は、値0が使用されます。</target>
        </trans-unit>
        <trans-unit id="939baf00cfde8b9ce6bb7751242fb53a137d3d57" translate="yes" xml:space="preserve">
          <source>Previous versions of Octave accepted an optional second argument, &lt;code&gt;&quot;global&quot;&lt;/code&gt;, that caused str2func to ignore locally visible functions. This option is no longer supported.</source>
          <target state="translated">Octaveの以前のバージョンでは、オプションの2番目の引数 &lt;code&gt;&quot;global&quot;&lt;/code&gt; を受け入れていたため、str2funcはローカルに表示される関数を無視していました。このオプションはサポートされなくなりました。</target>
        </trans-unit>
        <trans-unit id="dc05d11e60e0fced08ef4e61bc891dcf93623c6a" translate="yes" xml:space="preserve">
          <source>Pricing option (for both primal and dual simplex):</source>
          <target state="translated">価格設定オプション(プライマルとデュアルシンプレックスの両方)。</target>
        </trans-unit>
        <trans-unit id="0cde65a96e66e3212b720d194237e767698098e2" translate="yes" xml:space="preserve">
          <source>Print &lt;var&gt;prompt&lt;/var&gt; and wait for user input.</source>
          <target state="translated">印刷 &lt;var&gt;prompt&lt;/var&gt; とユーザの入力を待ちます。</target>
        </trans-unit>
        <trans-unit id="49c980ebf9035b798666f828b6f814098af71a5a" translate="yes" xml:space="preserve">
          <source>Print a &amp;lsquo;</source>
          <target state="translated">「を印刷する</target>
        </trans-unit>
        <trans-unit id="58922db24c201f8c3fdca10778733ae90d331a93" translate="yes" xml:space="preserve">
          <source>Print a floating-point number in either normal (fixed-point) or exponential notation, whichever is more appropriate for its magnitude. &amp;lsquo;</source>
          <target state="translated">浮動小数点数を、通常（固定小数点）または指数表記のいずれか、その大きさに適した方で出力します。」</target>
        </trans-unit>
        <trans-unit id="2ed61991883db2517153057b7dfe85e68a846291" translate="yes" xml:space="preserve">
          <source>Print a floating-point number in exponential notation. &amp;lsquo;</source>
          <target state="translated">浮動小数点数を指数表記で出力します。」</target>
        </trans-unit>
        <trans-unit id="b0c0767315dd58a67e8643a65c0a065e6ca392e1" translate="yes" xml:space="preserve">
          <source>Print a floating-point number in normal (fixed-point) notation. See &lt;a href=&quot;floating_002dpoint-conversions#Floating_002dPoint-Conversions&quot;&gt;Floating-Point Conversions&lt;/a&gt;, for details.</source>
          <target state="translated">浮動小数点数を通常の（固定小数点）表記で出力します。詳細については、&lt;a href=&quot;floating_002dpoint-conversions#Floating_002dPoint-Conversions&quot;&gt;浮動小数点変換&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="2b592e532518c55a1dc771941b6e290a7f7c5156" translate="yes" xml:space="preserve">
          <source>Print a list of which files have been opened, and whether they are open for reading, writing, or both.</source>
          <target state="translated">どのファイルが開かれているか、読み込み、書き込み、またはその両方のために開かれているかどうかのリストを印刷します。</target>
        </trans-unit>
        <trans-unit id="b71c6e13d09c38ff10f196d2c6dc2808493676ce" translate="yes" xml:space="preserve">
          <source>Print a literal &amp;lsquo;</source>
          <target state="translated">リテラルを印刷する '</target>
        </trans-unit>
        <trans-unit id="dbbb1ea7db8aa73a24f0dc31b0bb64581cf68571" translate="yes" xml:space="preserve">
          <source>Print a rational approximation, i.e., values are approximated as the ratio of small integers. For example, with the &amp;lsquo;</source>
          <target state="translated">有理近似を出力します。つまり、値は小さな整数の比として近似されます。たとえば、 '</target>
        </trans-unit>
        <trans-unit id="19f59a0401873473657319d2a998e8ae3e38320e" translate="yes" xml:space="preserve">
          <source>Print a single character. See &lt;a href=&quot;other-output-conversions#Other-Output-Conversions&quot;&gt;Other Output Conversions&lt;/a&gt;.</source>
          <target state="translated">単一の文字を印刷します。&lt;a href=&quot;other-output-conversions#Other-Output-Conversions&quot;&gt;その他の出力変換を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="4cb278b8e0bd2e5da5852c8822dd7075118a615b" translate="yes" xml:space="preserve">
          <source>Print a string. See &lt;a href=&quot;other-output-conversions#Other-Output-Conversions&quot;&gt;Other Output Conversions&lt;/a&gt;.</source>
          <target state="translated">文字列を出力します。&lt;a href=&quot;other-output-conversions#Other-Output-Conversions&quot;&gt;その他の出力変換を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="654855b2a1642595ca5a6ca53f5e38295ff0663c" translate="yes" xml:space="preserve">
          <source>Print a summary message when all tests pass, or print an error with the results of the first bad test when a failure occurs. Don&amp;rsquo;t run tests which require user interaction.</source>
          <target state="translated">すべてのテストに合格したときに要約メッセージを出力するか、障害が発生したときに最初の不良テストの結果とともにエラーを出力します。ユーザーの操作を必要とするテストを実行しないでください。</target>
        </trans-unit>
        <trans-unit id="fc5167ca4f2d2e2224d3cbab3907d82d0caa5a58" translate="yes" xml:space="preserve">
          <source>Print a summary of the options recognized by the configure script.</source>
          <target state="translated">configure スクリプトで認識されたオプションの概要を印刷します。</target>
        </trans-unit>
        <trans-unit id="9d7274a0e4591685877578256b2266486777a673" translate="yes" xml:space="preserve">
          <source>Print an integer as a signed decimal number. See &lt;a href=&quot;integer-conversions#Integer-Conversions&quot;&gt;Integer Conversions&lt;/a&gt;, for details. &amp;lsquo;</source>
          <target state="translated">整数を符号付き10進数として出力します。詳細については、&lt;a href=&quot;integer-conversions#Integer-Conversions&quot;&gt;整数変換&lt;/a&gt;を参照してください。」</target>
        </trans-unit>
        <trans-unit id="2869d39005b83028ff0e6a44413f70eec5f25272" translate="yes" xml:space="preserve">
          <source>Print an integer as an unsigned decimal number. See &lt;a href=&quot;integer-conversions#Integer-Conversions&quot;&gt;Integer Conversions&lt;/a&gt;, for details.</source>
          <target state="translated">整数を符号なし10進数として出力します。詳細については、&lt;a href=&quot;integer-conversions#Integer-Conversions&quot;&gt;整数変換&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="b3f412e2f5fdc4a6de6060822d01bcb77f21c581" translate="yes" xml:space="preserve">
          <source>Print an integer as an unsigned hexadecimal number. &amp;lsquo;</source>
          <target state="translated">整数を符号なし16進数として出力します。」</target>
        </trans-unit>
        <trans-unit id="bb69ae94f4b5f5281a5b1064240e36d42637c461" translate="yes" xml:space="preserve">
          <source>Print an integer as an unsigned octal number. See &lt;a href=&quot;integer-conversions#Integer-Conversions&quot;&gt;Integer Conversions&lt;/a&gt;, for details.</source>
          <target state="translated">整数を符号なし8進数として出力します。詳細については、&lt;a href=&quot;integer-conversions#Integer-Conversions&quot;&gt;整数変換&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="0aa98506213ee0c5475ec4cbb996159377ee0393" translate="yes" xml:space="preserve">
          <source>Print configuration variable VAR. There are three categories of variables:</source>
          <target state="translated">印刷設定変数 VAR。変数には3つのカテゴリがあります。</target>
        </trans-unit>
        <trans-unit id="b5f80e5448fd9bc23045c1bc21e9f0b5d727035f" translate="yes" xml:space="preserve">
          <source>Print optional arguments under the control of the template string &lt;var&gt;template&lt;/var&gt; to the stream &lt;code&gt;stdout&lt;/code&gt; and return the number of characters printed.</source>
          <target state="translated">テンプレート文字列 &lt;var&gt;template&lt;/var&gt; の制御下にあるオプションの引数をストリーム &lt;code&gt;stdout&lt;/code&gt; に出力し、出力された文字数を返します。</target>
        </trans-unit>
        <trans-unit id="560de7d0032d3ebbe64f30b3cdeb7d0eb5dc8d8c" translate="yes" xml:space="preserve">
          <source>Print or return a string of the form &lt;var&gt;cpu&lt;/var&gt;-&lt;var&gt;vendor&lt;/var&gt;-&lt;var&gt;os&lt;/var&gt; that identifies the type of computer that Octave is running on.</source>
          <target state="translated">Octaveが実行されているコンピューターのタイプを識別する &lt;var&gt;cpu&lt;/var&gt; - &lt;var&gt;vendor&lt;/var&gt; - &lt;var&gt;os&lt;/var&gt; 形式の文字列を出力または返します。</target>
        </trans-unit>
        <trans-unit id="722c17b735c86b5846e476163dc571e8d2e35aac" translate="yes" xml:space="preserve">
          <source>Print out profiler data (execution time, number of calls) for the most critical &lt;var&gt;n&lt;/var&gt; functions. The results are sorted in descending order by the total time spent in each function. If &lt;var&gt;n&lt;/var&gt; is unspecified it defaults to 20.</source>
          <target state="translated">最も重要な &lt;var&gt;n&lt;/var&gt; 個の関数のプロファイラーデータ（実行時間、呼び出し数）を出力します。結果は、各関数で費やされた合計時間の降順でソートされます。もし &lt;var&gt;n&lt;/var&gt; は 20に指定されていない、それはデフォルトです。</target>
        </trans-unit>
        <trans-unit id="5b8e9554b24f576108c7c063ba12ab653da48e76" translate="yes" xml:space="preserve">
          <source>Print output in free format, without trying to line up columns of matrices on the decimal point. This is a raw format equivalent to the C++ code &lt;code&gt;std::cout &amp;lt;&amp;lt; &lt;var&gt;variable&lt;/var&gt;&lt;/code&gt;. In general, the result is a presentation with 6 significant digits where unnecessary precision (such as trailing zeros for integers) is suppressed. Complex numbers are formatted as numeric pairs like this &amp;lsquo;</source>
          <target state="translated">小数点に行列の列を並べようとせずに、自由な形式で出力を印刷します。これは、C ++コード &lt;code&gt;std::cout &amp;lt;&amp;lt; &lt;var&gt;variable&lt;/var&gt;&lt;/code&gt; と同等の未加工形式です。一般に、結果は6桁の有効数字で表され、不必要な精度（整数の後続ゼロなど）が抑制されます。複素数は次のように数値ペアとしてフォーマットされます '</target>
        </trans-unit>
        <trans-unit id="2dbac64b9f0d67a5f6748a7e33b975a8044faee6" translate="yes" xml:space="preserve">
          <source>Print short help message and exit.</source>
          <target state="translated">短いヘルプメッセージを印刷して終了します。</target>
        </trans-unit>
        <trans-unit id="bebfa3744ab82b0d13af4c565ac9423312f1a388" translate="yes" xml:space="preserve">
          <source>Print solver statistics after simulation.</source>
          <target state="translated">シミュレーション後にソルバーの統計情報を印刷します。</target>
        </trans-unit>
        <trans-unit id="67b11cebcd0c3e8ca579e6641062d30f3089c06d" translate="yes" xml:space="preserve">
          <source>Print the bit representation of numbers as stored in memory. For example, the value of &lt;code&gt;pi&lt;/code&gt; is</source>
          <target state="translated">メモリに格納されている数値のビット表現を出力します。たとえば、 &lt;code&gt;pi&lt;/code&gt; の値は</target>
        </trans-unit>
        <trans-unit id="6ef5061742dca44b20c8db8cfad9cbcf4bb35876" translate="yes" xml:space="preserve">
          <source>Print the hexadecimal representation of numbers as they are stored in memory. For example, on a workstation which stores 8 byte real values in IEEE format with the least significant byte first, the value of &lt;code&gt;pi&lt;/code&gt; when printed in &lt;code&gt;native-hex&lt;/code&gt; format is &lt;code&gt;400921fb54442d18&lt;/code&gt;.</source>
          <target state="translated">数値がメモリに格納されるときに、数値の16進表現を出力します。たとえば、8バイトの実数値を最下位バイトから先にIEEE形式で格納するワークステーションでは、 &lt;code&gt;native-hex&lt;/code&gt; 形式で &lt;code&gt;400921fb54442d18&lt;/code&gt; た場合の &lt;code&gt;pi&lt;/code&gt; の値は400921fb54442d18です。</target>
        </trans-unit>
        <trans-unit id="85b4c2dfdcc816474382cd32f6bc1a7b49d6f111" translate="yes" xml:space="preserve">
          <source>Print the program version number and exit.</source>
          <target state="translated">プログラムのバージョン番号を印刷して終了します。</target>
        </trans-unit>
        <trans-unit id="87f36ca8461274074f6821130a5bc3a716719bd7" translate="yes" xml:space="preserve">
          <source>Print the usage message for the function &lt;var&gt;name&lt;/var&gt;.</source>
          <target state="translated">関数 &lt;var&gt;name&lt;/var&gt; 使用法メッセージを出力します。</target>
        </trans-unit>
        <trans-unit id="3d169b7abf5fcf333d6aeea3566396c9898b9ebe" translate="yes" xml:space="preserve">
          <source>Print variable in a format appropriate for a currency (fixed format with two digits to the right of the decimal point). Only the real part of a variable is displayed, as the imaginary part makes no sense for a currency.</source>
          <target state="translated">通貨に適した形式(小数点以下2桁の固定形式)で変数を表示します。虚数部は通貨では意味がないので、変数の実数部のみを表示します。</target>
        </trans-unit>
        <trans-unit id="dbf7f30dc26e7c866ba99a747f907ee084e9f3cd" translate="yes" xml:space="preserve">
          <source>Print warning if a single quote character is used to introduce a string constant. By default, the &lt;code&gt;Octave:single-quote-string&lt;/code&gt; warning is disabled.</source>
          <target state="translated">文字列定数の導入に一重引用符が使用されている場合、警告を出力します。デフォルトでは、 &lt;code&gt;Octave:single-quote-string&lt;/code&gt; 警告は無効になっています。</target>
        </trans-unit>
        <trans-unit id="7a6b1548a2d675aac6b8cc5bf3f21face171df0c" translate="yes" xml:space="preserve">
          <source>Print warning if commas or semicolons might be inserted automatically in literal matrices. By default, the &lt;code&gt;Octave:separator-insert&lt;/code&gt; warning is disabled.</source>
          <target state="translated">コンマまたはセミコロンがリテラル行列に自動的に挿入される可能性がある場合に警告を出力します。デフォルトでは、 &lt;code&gt;Octave:separator-insert&lt;/code&gt; 警告は無効になっています。</target>
        </trans-unit>
        <trans-unit id="b6b8dee587ab1f499d55322ddd3a80261b4c5a0b" translate="yes" xml:space="preserve">
          <source>Print warnings when using features that are unique to the Octave language and that may still be missing in &lt;small&gt;MATLAB&lt;/small&gt;. By default, the &lt;code&gt;Octave:language-extension&lt;/code&gt; warning is disabled. The</source>
          <target state="translated">Octave言語に固有で、&lt;small&gt;MATLABに&lt;/small&gt;はまだ存在しない機能を使用するときに警告を出力します。デフォルトでは、 &lt;code&gt;Octave:language-extension&lt;/code&gt; 警告は無効になっています。の</target>
        </trans-unit>
        <trans-unit id="8ccedf5a8ea780671c6a52974e6be904b03133b1" translate="yes" xml:space="preserve">
          <source>Printing Notation</source>
          <target state="translated">印刷表記法</target>
        </trans-unit>
        <trans-unit id="1f1fd4f742bd04ecd668b0a2bdd8a077473f2678" translate="yes" xml:space="preserve">
          <source>Printing and Saving Plots</source>
          <target state="translated">プロットの印刷と保存</target>
        </trans-unit>
        <trans-unit id="6e4884c02006da068c570bcf96ea9fcfd84ca58a" translate="yes" xml:space="preserve">
          <source>Printing level of debugging information of the solvers (default 0)</source>
          <target state="translated">ソルバのデバッグ情報の印刷レベル (デフォルト 0)</target>
        </trans-unit>
        <trans-unit id="abca24c8dcb89599696f4e78e95c3e9df053fbc0" translate="yes" xml:space="preserve">
          <source>Prints attributes of variables (g=global, p=persistent, f=formal parameter).</source>
          <target state="translated">変数の属性(g=グローバル、p=パーシステント、f=フォーマルパラメータ)を表示します。</target>
        </trans-unit>
        <trans-unit id="2e5613e8cd11e301a35cb9766aa053bf6b03d11c" translate="yes" xml:space="preserve">
          <source>Prints attributes of variables (g=global, p=persistent, f=formal parameter, a=automatic variable).</source>
          <target state="translated">変数の属性を表示します(g=グローバル、p=パーシステント、f=形式パラメータ、a=自動変数)。</target>
        </trans-unit>
        <trans-unit id="9fdb758b341586b4dd1af422ab4605813d027420" translate="yes" xml:space="preserve">
          <source>Prints class names of variables.</source>
          <target state="translated">変数のクラス名を表示します。</target>
        </trans-unit>
        <trans-unit id="5d704fa7e4e742a39ff8aa3bb45b0df217a257c6" translate="yes" xml:space="preserve">
          <source>Prints dimensions of variables.</source>
          <target state="translated">変数の寸法を印刷します。</target>
        </trans-unit>
        <trans-unit id="b62c12ee0050f1992989323fbf0f5b558a51f0e2" translate="yes" xml:space="preserve">
          <source>Prints elements held by variables.</source>
          <target state="translated">変数が保持する要素を印刷します。</target>
        </trans-unit>
        <trans-unit id="4cbf0e26082e8bb9b6a86a61cd032b1c1961d462" translate="yes" xml:space="preserve">
          <source>Prints number of bytes occupied by variables.</source>
          <target state="translated">変数が占有しているバイト数を表示します。</target>
        </trans-unit>
        <trans-unit id="d73b14d89c0b881bccb3e951de748b3d4a9bce82" translate="yes" xml:space="preserve">
          <source>Prints type names of variables.</source>
          <target state="translated">変数の型名を表示します。</target>
        </trans-unit>
        <trans-unit id="745d75f36141901afbda0c6910ace6144526a959" translate="yes" xml:space="preserve">
          <source>Prints variable names.</source>
          <target state="translated">変数名を表示します。</target>
        </trans-unit>
        <trans-unit id="076284456230944c467751d26ff41c3d11c31de0" translate="yes" xml:space="preserve">
          <source>Private Functions</source>
          <target state="translated">プライベート機能</target>
        </trans-unit>
        <trans-unit id="cd63d478d2f08e55033b4949d840404e94bcb74a" translate="yes" xml:space="preserve">
          <source>Private function A function defined within a private directory of the directory which contains the current function.</source>
          <target state="translated">プライベート関数 カレント関数を含むディレクトリのプライベートディレクトリ内で定義された関数。</target>
        </trans-unit>
        <trans-unit id="e7d86e8e87b7bcd687da4553ef2bea00f22a45e8" translate="yes" xml:space="preserve">
          <source>Private functions.</source>
          <target state="translated">プライベートな機能です。</target>
        </trans-unit>
        <trans-unit id="b02e66f435f8f91763cf923471357d821729fc98" translate="yes" xml:space="preserve">
          <source>Probable full positive definite matrix.</source>
          <target state="translated">確率的に完全な正定値行列。</target>
        </trans-unit>
        <trans-unit id="8d6e4d66ecb422060a36e368bc820601bb9762fa" translate="yes" xml:space="preserve">
          <source>Probably nothing special needs to be done for the following dependencies. If you discover that something does need to be done, please submit a bug report.</source>
          <target state="translated">以下の依存関係については、おそらく特に何もする必要はありません。何かする必要があることを発見した場合は、バグレポートを提出してください。</target>
        </trans-unit>
        <trans-unit id="548d02011140dbe127ffab9a0ea4e176ddf5eaf3" translate="yes" xml:space="preserve">
          <source>Problem has no feasible solution.</source>
          <target state="translated">問題には実現可能な解決策がない。</target>
        </trans-unit>
        <trans-unit id="5483e46c140a40e55f029a48edf828ba489bc36a" translate="yes" xml:space="preserve">
          <source>Problem has no unbounded solution.</source>
          <target state="translated">問題には束縛のない解がない。</target>
        </trans-unit>
        <trans-unit id="34e2c0b7aa164c61fc0f4066f80ad65020191f00" translate="yes" xml:space="preserve">
          <source>Process ID Information</source>
          <target state="translated">プロセスID情報</target>
        </trans-unit>
        <trans-unit id="546bb7fc46177ef7de8724cdb23248c912e7ab1f" translate="yes" xml:space="preserve">
          <source>Process, Group, and User IDs</source>
          <target state="translated">プロセス、グループ、ユーザーID</target>
        </trans-unit>
        <trans-unit id="dea6cfff09d7f2fcbab64b3f3439732fee66c966" translate="yes" xml:space="preserve">
          <source>Processing Data in Cell Arrays</source>
          <target state="translated">セルアレイでのデータ処理</target>
        </trans-unit>
        <trans-unit id="0d926209aed467fd092a080530d1d6ccaa48ef60" translate="yes" xml:space="preserve">
          <source>Processing Data in Structures</source>
          <target state="translated">構造体でのデータ処理</target>
        </trans-unit>
        <trans-unit id="321d6e5c8c4279c6c7a6783c61f2a5fcf14f3e25" translate="yes" xml:space="preserve">
          <source>Produce 2-D plots on a double logarithm axis with errorbars.</source>
          <target state="translated">エラーバー付きの二重対数軸で2次元プロットを作成します。</target>
        </trans-unit>
        <trans-unit id="ae44e6504cd65c9c79d75096b91a805bf41fc7f1" translate="yes" xml:space="preserve">
          <source>Produce 2-D plots using a logarithmic scale for the x-axis and errorbars at each data point.</source>
          <target state="translated">各データポイントのx軸とエラーバーに対数スケールを使用して2Dプロットを作成します。</target>
        </trans-unit>
        <trans-unit id="83bdb79c5c30b2977bf94e3e73a59e881a09af29" translate="yes" xml:space="preserve">
          <source>Produce 2-D plots using a logarithmic scale for the y-axis and errorbars at each data point.</source>
          <target state="translated">各データポイントのy軸とエラーバーに対数スケールを使用して2Dプロットを作成します。</target>
        </trans-unit>
        <trans-unit id="4cc28541feb867408b4955a786c182a650c9d93b" translate="yes" xml:space="preserve">
          <source>Produce 2-D plots.</source>
          <target state="translated">2Dプロットを作成します。</target>
        </trans-unit>
        <trans-unit id="06ff2d49cacf2e7671e9d3085109c7848be3206c" translate="yes" xml:space="preserve">
          <source>Produce 3-D plots.</source>
          <target state="translated">3Dプロットを作成します。</target>
        </trans-unit>
        <trans-unit id="df0a70bbbfd264174933e79160c57b1104010f39" translate="yes" xml:space="preserve">
          <source>Produce a 2-D density plot.</source>
          <target state="translated">2次元密度プロットを作成します。</target>
        </trans-unit>
        <trans-unit id="0fee0b6e1477bfd43da9dd957b46ffa73c1588c3" translate="yes" xml:space="preserve">
          <source>Produce a 2-D plot using a logarithmic scale for the x-axis.</source>
          <target state="translated">x軸に対数スケールを使用して2Dプロットを作成します。</target>
        </trans-unit>
        <trans-unit id="a41b0ebae3d203012ffcb43eae12da5ec45db4ba" translate="yes" xml:space="preserve">
          <source>Produce a 2-D plot using a logarithmic scale for the y-axis.</source>
          <target state="translated">y軸に対数スケールを使用して2Dプロットを作成します。</target>
        </trans-unit>
        <trans-unit id="161f1b23076b994a8a3b56b5f6843a512e70f1ed" translate="yes" xml:space="preserve">
          <source>Produce a 2-D plot using logarithmic scales for both axes.</source>
          <target state="translated">両軸の対数スケールを使用して2次元プロットを作成します。</target>
        </trans-unit>
        <trans-unit id="c25010672af6676afbe47dbf1c6f309f90aae46f" translate="yes" xml:space="preserve">
          <source>Produce a bar graph from two vectors of X-Y data.</source>
          <target state="translated">X-Yデータの2つのベクトルから棒グラフを作成します。</target>
        </trans-unit>
        <trans-unit id="d5e0b6af576d0addb2fe7c995463687a6e1ae227" translate="yes" xml:space="preserve">
          <source>Produce a beep from the speaker (or visual bell).</source>
          <target state="translated">スピーカー(または視覚的なベル)からビープ音を発生させます。</target>
        </trans-unit>
        <trans-unit id="7d15ef1fdf19910d1a06a41a50f6a88f76dd1a29" translate="yes" xml:space="preserve">
          <source>Produce a graph of tree or forest.</source>
          <target state="translated">木や森のグラフを作成する。</target>
        </trans-unit>
        <trans-unit id="456422951c3c0615f1cda8b8184d655b8a3ff086" translate="yes" xml:space="preserve">
          <source>Produce a horizontal bar graph from two vectors of X-Y data.</source>
          <target state="translated">X-Yデータの2つのベクトルから水平棒グラフを作成します。</target>
        </trans-unit>
        <trans-unit id="9f7378502d58157a2cd6025bf4378e8b803331cb" translate="yes" xml:space="preserve">
          <source>Produce a simple comet style animation along the trajectory provided by the input coordinate vectors (&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;).</source>
          <target state="translated">入力座標ベクトル（ &lt;var&gt;x&lt;/var&gt; 、 &lt;var&gt;y&lt;/var&gt; ）によって提供される軌道に沿って、単純な彗星スタイルのアニメーションを生成します。</target>
        </trans-unit>
        <trans-unit id="ac042e968fb6cf9ca33a18024f82e9c136499f3e" translate="yes" xml:space="preserve">
          <source>Produce a simple comet style animation along the trajectory provided by the input coordinate vectors (&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;, &lt;var&gt;z&lt;/var&gt;).</source>
          <target state="translated">入力座標ベクトル（ &lt;var&gt;x&lt;/var&gt; 、 &lt;var&gt;y&lt;/var&gt; 、 &lt;var&gt;z&lt;/var&gt; ）によって提供される軌道に沿って単純な彗星スタイルのアニメーションを生成します。</target>
        </trans-unit>
        <trans-unit id="daee35de56fdcdafb1d2dfbbf9e61eac9a1bf547" translate="yes" xml:space="preserve">
          <source>Produce a stairstep plot.</source>
          <target state="translated">階段状のプロットを作成します。</target>
        </trans-unit>
        <trans-unit id="f69990152efc52692fe5373c72110f7c7733af7d" translate="yes" xml:space="preserve">
          <source>Produce an error if observed is not the same as expected but equality comparison for numeric data uses a tolerance &lt;var&gt;tol&lt;/var&gt;.</source>
          <target state="translated">観測値が予想と同じではないが、数値データの等値比較では許容誤差 &lt;var&gt;tol&lt;/var&gt; を使用する場合、エラーを生成します。</target>
        </trans-unit>
        <trans-unit id="6edeffffb9134feb33da0a818db009d3051c3a02" translate="yes" xml:space="preserve">
          <source>Produce an error if observed is not the same as expected.</source>
          <target state="translated">観測値が期待したものと異なる場合にエラーを発生させます。</target>
        </trans-unit>
        <trans-unit id="a86e3c2ce434567a537cdfe46a20506dacd109c3" translate="yes" xml:space="preserve">
          <source>Produce an error if the specified condition is not met.</source>
          <target state="translated">指定された条件が満たされていない場合にエラーを発生させます。</target>
        </trans-unit>
        <trans-unit id="d0f1d0b31cf378d693b0ed0a90ea75c61b61c830" translate="yes" xml:space="preserve">
          <source>Produce histogram counts or plots.</source>
          <target state="translated">ヒストグラムのカウントまたはプロットを作成します。</target>
        </trans-unit>
        <trans-unit id="f12a4dc1394e73c66a68adfaf0eb3aa62b842cf2" translate="yes" xml:space="preserve">
          <source>Product of elements along dimension &lt;var&gt;dim&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;dim&lt;/var&gt; 次元の要素の積。</target>
        </trans-unit>
        <trans-unit id="85d77459b3a14f7050517564444e1685d47e494d" translate="yes" xml:space="preserve">
          <source>Products of Polynomials</source>
          <target state="translated">多項式の積</target>
        </trans-unit>
        <trans-unit id="45de47c8ef7abace6dd1a9045f83774f18191798" translate="yes" xml:space="preserve">
          <source>Profiler Example</source>
          <target state="translated">プロファイラの例</target>
        </trans-unit>
        <trans-unit id="cea5295b78ec1b99a624dda73a7e6d10f18cdf3f" translate="yes" xml:space="preserve">
          <source>Profiling</source>
          <target state="translated">Profiling</target>
        </trans-unit>
        <trans-unit id="3b00eac76327c3e5d5f4375c2a1983b491f81449" translate="yes" xml:space="preserve">
          <source>Programming Note. &lt;code&gt;nargout&lt;/code&gt; does not work for built-in functions and returns -1 for all anonymous functions.</source>
          <target state="translated">プログラミングノート。 &lt;code&gt;nargout&lt;/code&gt; は組み込み関数では機能せず、すべての無名関数に対して-1を返します。</target>
        </trans-unit>
        <trans-unit id="dcae03099fa99e2f54586a8d2c2c33201c622e2b" translate="yes" xml:space="preserve">
          <source>Programming Note: &lt;code&gt;center&lt;/code&gt; has obvious application for normalizing statistical data. It is also useful for improving the precision of general numerical calculations. Whenever there is a large value that is common to a batch of data, the mean can be subtracted off, the calculation performed, and then the mean added back to obtain the final answer.</source>
          <target state="translated">プログラミングの注意： &lt;code&gt;center&lt;/code&gt; は、統計データを正規化するための明らかなアプリケーションがあります。また、一般的な数値計算の精度を向上させるためにも役立ちます。データのバッチに共通する大きな値がある場合は常に、平均を差し引いて計算を実行し、平均を加算して最終的な回答を得ることができます。</target>
        </trans-unit>
        <trans-unit id="20e2a16fccd3236b9b8135f742b0bc7f344cf75b" translate="yes" xml:space="preserve">
          <source>Programming Note: &lt;code&gt;deal&lt;/code&gt; is often used with comma separated lists derived from cell arrays or structures. This is unnecessary as the interpreter can perform the same action without the overhead of a function call. For example:</source>
          <target state="translated">プログラミング上の注意： &lt;code&gt;deal&lt;/code&gt; は、セル配列または構造から派生したコンマ区切りのリストでよく使用されます。インタープリターは関数呼び出しのオーバーヘッドなしで同じアクションを実行できるため、これは不要です。例えば：</target>
        </trans-unit>
        <trans-unit id="da5945745297396014641b64f8e04d022a81e930" translate="yes" xml:space="preserve">
          <source>Programming Note: &lt;code&gt;erase&lt;/code&gt; deletes the first instance of a pattern in a string when there are overlapping occurrences. For example:</source>
          <target state="translated">プログラミング上の注意：重複した出現がある場合、 &lt;code&gt;erase&lt;/code&gt; は文字列内のパターンの最初のインスタンスを削除します。例えば：</target>
        </trans-unit>
        <trans-unit id="a1d6bcd8bab6b7ac273f65fe7cb6cbe229bc60f5" translate="yes" xml:space="preserve">
          <source>Programming Note: &lt;code&gt;isprime&lt;/code&gt; is appropriate if the maximum value in &lt;var&gt;x&lt;/var&gt; is not too large (&amp;lt; 1e15). For larger values special purpose factorization code should be used.</source>
          <target state="translated">プログラミングの注意： &lt;var&gt;x&lt;/var&gt; の最大値が大きすぎない（&amp;lt;1e15）場合は、 &lt;code&gt;isprime&lt;/code&gt; が適切です。値が大きい場合は、特別な目的の分解コードを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="713ab7f411e9d1ce57a163c085b1a81ddd584f9c" translate="yes" xml:space="preserve">
          <source>Programming Note: &lt;code&gt;meshgrid&lt;/code&gt; is restricted to 2-D or 3-D grid generation. The &lt;code&gt;ndgrid&lt;/code&gt; function will generate 1-D through N-D grids. However, the functions are not completely equivalent. If &lt;var&gt;x&lt;/var&gt; is a vector of length M and &lt;var&gt;y&lt;/var&gt; is a vector of length N, then &lt;code&gt;meshgrid&lt;/code&gt; will produce an output grid which is NxM. &lt;code&gt;ndgrid&lt;/code&gt; will produce an output which is MxN (transpose) for the same input. Some core functions expect &lt;code&gt;meshgrid&lt;/code&gt; input and others expect &lt;code&gt;ndgrid&lt;/code&gt; input. Check the documentation for the function in question to determine the proper input format.</source>
          <target state="translated">プログラミング上の注意： &lt;code&gt;meshgrid&lt;/code&gt; は、2次元または3次元グリッドの生成に制限されています。 &lt;code&gt;ndgrid&lt;/code&gt; 関数はNDグリッドを介して1-Dを生成します。ただし、機能は完全に同等ではありません。場合 &lt;var&gt;x&lt;/var&gt; 長さMのベクトルであり、 &lt;var&gt;y&lt;/var&gt; は長さNのベクトルであり、その後、 &lt;code&gt;meshgrid&lt;/code&gt; N&amp;times;M個であり、出力グリッドを生成します。 &lt;code&gt;ndgrid&lt;/code&gt; は、同じ入力に対してMxN（転置）である出力を生成します。いくつかのコア機能は期待 &lt;code&gt;meshgrid&lt;/code&gt; 入力し、他の人が期待する &lt;code&gt;ndgrid&lt;/code&gt; 入力を。問題の関数のドキュメントをチェックして、適切な入力形式を確認してください。</target>
        </trans-unit>
        <trans-unit id="1d82167ec70a0a0abb71bde1d5d2938d0719c172" translate="yes" xml:space="preserve">
          <source>Programming Note: &lt;code&gt;nargin&lt;/code&gt; does not work on compiled functions (</source>
          <target state="translated">プログラミング上の注意： &lt;code&gt;nargin&lt;/code&gt; はコンパイルされた関数では機能しません（</target>
        </trans-unit>
        <trans-unit id="67356ed11ed255ac9c81ead3e4069e3bcfa6a185" translate="yes" xml:space="preserve">
          <source>Programming Note: &lt;code&gt;ndgrid&lt;/code&gt; is very similar to the function &lt;code&gt;meshgrid&lt;/code&gt; except that the first two dimensions are transposed in comparison to &lt;code&gt;meshgrid&lt;/code&gt;. Some core functions expect &lt;code&gt;meshgrid&lt;/code&gt; input and others expect &lt;code&gt;ndgrid&lt;/code&gt; input. Check the documentation for the function in question to determine the proper input format.</source>
          <target state="translated">プログラミング注： &lt;code&gt;ndgrid&lt;/code&gt; は機能に非常に似ている &lt;code&gt;meshgrid&lt;/code&gt; 最初の2次元のと比較して転置されていることを除い &lt;code&gt;meshgrid&lt;/code&gt; 。いくつかのコア機能は期待 &lt;code&gt;meshgrid&lt;/code&gt; 入力し、他の人が期待する &lt;code&gt;ndgrid&lt;/code&gt; 入力を。問題の関数のドキュメントをチェックして、適切な入力形式を確認してください。</target>
        </trans-unit>
        <trans-unit id="df54fea6f94e9944b4009df951d5718e0becad6d" translate="yes" xml:space="preserve">
          <source>Programming Note: &lt;code&gt;ppval&lt;/code&gt; evaluates polynomials at &lt;code&gt;&lt;var&gt;xi&lt;/var&gt; - &lt;var&gt;breaks&lt;/var&gt;(i)&lt;/code&gt;, i.e., it subtracts the lower endpoint of the current interval from &lt;var&gt;xi&lt;/var&gt;. This must be taken into account when creating piecewise polynomials objects with &lt;code&gt;mkpp&lt;/code&gt;.</source>
          <target state="translated">プログラミング上の注意： &lt;code&gt;ppval&lt;/code&gt; は &lt;code&gt;&lt;var&gt;xi&lt;/var&gt; - &lt;var&gt;breaks&lt;/var&gt;(i)&lt;/code&gt; で多項式を評価します。つまり、現在の区間の下端点を &lt;var&gt;xi&lt;/var&gt; から差し引きます。これは、 &lt;code&gt;mkpp&lt;/code&gt; で区分的多項式オブジェクトを作成するときに考慮する必要があります。</target>
        </trans-unit>
        <trans-unit id="5499848629bb6c2d4322bba462f6dfc3272172f7" translate="yes" xml:space="preserve">
          <source>Programming Note: &lt;code&gt;shg&lt;/code&gt; is equivalent to &lt;code&gt;figure (gcf)&lt;/code&gt; assuming that a current figure exists.</source>
          <target state="translated">プログラミングの注意： &lt;code&gt;shg&lt;/code&gt; は、現在の図が存在する場合の &lt;code&gt;figure (gcf)&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="090578a1e1e407a976a1a2a2abbea5120f6e54bc" translate="yes" xml:space="preserve">
          <source>Programming Note: &lt;code&gt;whitebg&lt;/code&gt; operates by changing the color properties of the children of the specified figures. Only objects with a single color are affected. For example, a patch with a single &lt;code&gt;&quot;FaceColor&quot;&lt;/code&gt; will be changed, but a patch with shading (&lt;code&gt;&quot;interp&quot;&lt;/code&gt;) will not be modified. For inversion, the new color is simply the inversion in RGB space: &lt;code&gt;&lt;var&gt;cnew&lt;/var&gt; = [1-&lt;var&gt;R&lt;/var&gt; 1-&lt;var&gt;G&lt;/var&gt; 1-&lt;var&gt;B&lt;/var&gt;]&lt;/code&gt;. When a color is specified, the axes and figure are set to the new color, and the color of child objects are then adjusted to have some contrast (visibility) against the new background.</source>
          <target state="translated">プログラミング上の注意： &lt;code&gt;whitebg&lt;/code&gt; は、指定されたFigureの子のカラープロパティを変更することによって動作します。単色のオブジェクトのみが影響を受けます。たとえば、単一の &lt;code&gt;&quot;FaceColor&quot;&lt;/code&gt; を持つパッチは変更されますが、シェーディング（ &lt;code&gt;&quot;interp&quot;&lt;/code&gt; ）を持つパッチは変更されません。反転の場合、新しい色は単にRGB空間での反転です： &lt;code&gt;&lt;var&gt;cnew&lt;/var&gt; = [1-&lt;var&gt;R&lt;/var&gt; 1-&lt;var&gt;G&lt;/var&gt; 1-&lt;var&gt;B&lt;/var&gt;]&lt;/code&gt; 。色が指定されると、AxesとFigureは新しい色に設定され、子オブジェクトの色は新しい背景に対してコントラスト（可視性）を持つように調整されます。</target>
        </trans-unit>
        <trans-unit id="5191e57b20ed70cda5d21cc1ced560754918537d" translate="yes" xml:space="preserve">
          <source>Programming Note: All non-numeric values (NaNs) of &lt;var&gt;x&lt;/var&gt; are ignored.</source>
          <target state="translated">プログラミングの注意： &lt;var&gt;x&lt;/var&gt; のすべての非数値（NaN）は無視されます。</target>
        </trans-unit>
        <trans-unit id="45ab8872d82185d8c7effa883b7593163a133fac" translate="yes" xml:space="preserve">
          <source>Programming Note: An hggroup is a way to group base graphics objects such as line objects or patch objects into a single unit which can react appropriately. For example, the individual lines of a contour plot are collected into a single hggroup so that they can be made visible/invisible with a single command, &lt;code&gt;set (hg_handle, &quot;visible&quot;, &quot;off&quot;)&lt;/code&gt;.</source>
          <target state="translated">プログラミング上の注意：hggroupは、lineオブジェクトやpatchオブジェクトなどの基本グラフィックスオブジェクトを、適切に反応できる単一のユニットにグループ化する方法です。たとえば、等高線図の個々の線は1つのhggroupに収集され、1つのコマンド &lt;code&gt;set (hg_handle, &quot;visible&quot;, &quot;off&quot;)&lt;/code&gt; 表示/非表示にできます。</target>
        </trans-unit>
        <trans-unit id="f5bfb31ba35ef53ef2d8c2661876a2bfc1914ce9" translate="yes" xml:space="preserve">
          <source>Programming Note: Because the named file is not opened by &lt;code&gt;tempname&lt;/code&gt;, it is possible, though relatively unlikely, that it will not be available by the time your program attempts to open it. If this is a concern, see &lt;code&gt;tmpfile&lt;/code&gt;.</source>
          <target state="translated">プログラミング上の注意：名前付きファイルは &lt;code&gt;tempname&lt;/code&gt; によって開かれないため、比較的可能性は低いですが、プログラムがファイルを開こうとするときには利用できない可能性があります。これが問題になる場合は、 &lt;code&gt;tmpfile&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="0a9dfb33c4d9f64f7fe8681d5c6ec1f3215e9c3e" translate="yes" xml:space="preserve">
          <source>Programming Note: Deleting graphics objects is the proper way to remove features from a plot without clearing the entire figure.</source>
          <target state="translated">プログラミングノート:グラフィックオブジェクトを削除することは、図全体をクリアせずにプロットから特徴を削除する適切な方法です。</target>
        </trans-unit>
        <trans-unit id="42ab0c17b2130ab9eae6f1a8223a266ec94ec7cd" translate="yes" xml:space="preserve">
          <source>Programming Note: Flushing is useful for ensuring that all pending output makes it to the screen before some other event occurs. For example, it is always a good idea to flush the standard output stream before calling &lt;code&gt;input&lt;/code&gt;.</source>
          <target state="translated">プログラミング上の注意：フラッシュは、他のイベントが発生する前に、保留中のすべての出力が確実に画面に出力されるようにするのに役立ちます。たとえば、 &lt;code&gt;input&lt;/code&gt; を呼び出す前に、常に標準出力ストリームをフラッシュすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="d02abc1946d7e465fe8eb09884304202aa55f163" translate="yes" xml:space="preserve">
          <source>Programming Note: If &lt;var&gt;name&lt;/var&gt; is implemented by a buggy .oct/.mex file, calling &lt;var&gt;exist&lt;/var&gt; may cause Octave to crash. To maintain high performance, Octave trusts .oct/.mex files instead of sandboxing them.</source>
          <target state="translated">プログラミング上の注意： &lt;var&gt;name&lt;/var&gt; がバグの多い.oct / .mexファイルによって実装されている場合、existを呼び出すとOctaveがクラッシュ &lt;var&gt;exist&lt;/var&gt; 可能性があります。高いパフォーマンスを維持するために、Octaveはサンドボックス化する代わりに.oct / .mexファイルを信頼します。</target>
        </trans-unit>
        <trans-unit id="265050d0dc990d1d335a4aa77ef42c8c943c288c" translate="yes" xml:space="preserve">
          <source>Programming Note: It is often more useful to test for a specific object type. To determine if a handle belongs to a graphics object use &lt;code&gt;ishghandle&lt;/code&gt; or &lt;code&gt;isgraphics&lt;/code&gt;. To determine if a handle belongs to a Java object use &lt;code&gt;isjava&lt;/code&gt;.</source>
          <target state="translated">プログラミング上の注意：特定のオブジェクトタイプをテストする方が便利な場合があります。ハンドルがグラフィックスオブジェクトに属しているかどうかを判別するには、 &lt;code&gt;ishghandle&lt;/code&gt; または &lt;code&gt;isgraphics&lt;/code&gt; を使用します。ハンドルがJavaオブジェクトに属しているかどうかを判別するには、 &lt;code&gt;isjava&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="61466f97220761ffeb54e0dad494ee756df768dd" translate="yes" xml:space="preserve">
          <source>Programming Note: Octave always reserves memory for at least one value, even if &lt;var&gt;nz&lt;/var&gt; is 0.</source>
          <target state="translated">プログラミング上の注意： &lt;var&gt;nz&lt;/var&gt; が0の場合でも、Octaveは常に少なくとも1つの値のためにメモリを予約します。</target>
        </trans-unit>
        <trans-unit id="8867204d194fba1badb1f23fdbb43b1e2fab0727" translate="yes" xml:space="preserve">
          <source>Programming Note: Octave does not yet implement string arrays so this function will always return false.</source>
          <target state="translated">プログラミング上の注意:Octaveはまだ文字列配列を実装していないので,この関数は常にfalseを返します。</target>
        </trans-unit>
        <trans-unit id="79e9af0541093bb123670be233639071fdd1f786" translate="yes" xml:space="preserve">
          <source>Programming Note: Octave tends to crop unused memory at the first opportunity for sparse objects. Thus, in general the value of &lt;code&gt;nzmax&lt;/code&gt; will be the same as &lt;code&gt;nnz&lt;/code&gt;, except for some cases of user-created sparse objects.</source>
          <target state="translated">プログラミング上の注意：Octaveは、スパースオブジェクトの最初の機会に未使用のメモリをトリミングする傾向があります。したがって、一般に、 &lt;code&gt;nzmax&lt;/code&gt; の値は、ユーザーが作成したスパースオブジェクトの場合を除いて、 &lt;code&gt;nnz&lt;/code&gt; と同じになります。</target>
        </trans-unit>
        <trans-unit id="3333abda3596c1257e50a6b4554415eb7dff11f7" translate="yes" xml:space="preserve">
          <source>Programming Note: On systems that don&amp;rsquo;t use FontConfig natively (all but Linux), the font cache is built when Octave is installed. You will need to run &lt;code&gt;system (&quot;fc-cache -fv&quot;)&lt;/code&gt; manually after installing new fonts.</source>
          <target state="translated">プログラミング上の注意：FontConfigをネイティブに使用しないシステム（Linuxを除くすべて）では、Octaveのインストール時にフォントキャッシュが構築されます。新しいフォントをインストールした後、 &lt;code&gt;system (&quot;fc-cache -fv&quot;)&lt;/code&gt; 手動で実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="5b176dcdda5571bee4de12e9c64d09eed5e7ea61" translate="yes" xml:space="preserve">
          <source>Programming Note: Property names are returned if the &lt;code&gt;GetAccess&lt;/code&gt; attribute is public and if the &lt;code&gt;Hidden&lt;/code&gt; attribute is false.</source>
          <target state="translated">プログラミング上の注意： &lt;code&gt;GetAccess&lt;/code&gt; 属性がパブリックで、 &lt;code&gt;Hidden&lt;/code&gt; 属性がfalseの場合、プロパティ名が返されます。</target>
        </trans-unit>
        <trans-unit id="ed055ec545c1f0ffb0c275814b27f4caf9ef341b" translate="yes" xml:space="preserve">
          <source>Programming Note: The &lt;code&gt;xlim&lt;/code&gt; function operates by modifying the &lt;code&gt;&quot;xlim&quot;&lt;/code&gt; and &lt;code&gt;&quot;xlimmode&quot;&lt;/code&gt; properties of an axes object. These properties can be directly inspected and altered with &lt;code&gt;get&lt;/code&gt;/&lt;code&gt;set&lt;/code&gt;.</source>
          <target state="translated">注プログラミング： &lt;code&gt;xlim&lt;/code&gt; 機能は変更することによって動作する &lt;code&gt;&quot;xlim&quot;&lt;/code&gt; 及び &lt;code&gt;&quot;xlimmode&quot;&lt;/code&gt; Axesオブジェクトのプロパティを。これらのプロパティは、 &lt;code&gt;get&lt;/code&gt; / &lt;code&gt;set&lt;/code&gt; を使用して直接検査および変更できます。</target>
        </trans-unit>
        <trans-unit id="127ad4383c5db9aa6c69b31ec3eafc7b87a986cf" translate="yes" xml:space="preserve">
          <source>Programming Note: The ability of &lt;code&gt;lookfor&lt;/code&gt; to correctly identify the first sentence of the help text is dependent on the format of the function&amp;rsquo;s help. All Octave core functions are correctly formatted, but the same can not be guaranteed for external packages and user-supplied functions. Therefore, the use of the &lt;code&gt;&quot;-all&quot;&lt;/code&gt; argument may be necessary to find related functions that are not a part of Octave.</source>
          <target state="translated">プログラミングの注意：ヘルプテキストの最初の文を正しく識別するための &lt;code&gt;lookfor&lt;/code&gt; の機能は、関数のヘルプの形式に依存します。すべてのOctaveコア関数は正しくフォーマットされていますが、外部パッケージとユーザー提供の関数については同じことが保証されていません。したがって、 &lt;code&gt;&quot;-all&quot;&lt;/code&gt; 引数の使用は、Octaveの一部ではない関連関数を見つけるために必要になる場合があります。</target>
        </trans-unit>
        <trans-unit id="e765509a6a8fb5531ab1388adc58760f20610d22" translate="yes" xml:space="preserve">
          <source>Programming Note: The color axis affects the display of image, patch, and surface graphics objects, but &lt;strong&gt;only&lt;/strong&gt; if the &lt;code&gt;&quot;cdata&quot;&lt;/code&gt; property has indexed data and the &lt;code&gt;&quot;cdatamapping&quot;&lt;/code&gt; property is set to &lt;code&gt;&quot;scaled&quot;&lt;/code&gt;. Graphic objects with true color &lt;code&gt;cdata&lt;/code&gt;, or &lt;code&gt;&quot;direct&quot;&lt;/code&gt;&lt;code&gt;cdatamapping&lt;/code&gt; are not affected.</source>
          <target state="translated">プログラミングの注意： &lt;code&gt;&quot;cdatamapping&quot;&lt;/code&gt; は、イメージ、パッチ、および表面グラフィックスオブジェクトの表示に影響しますが、 &lt;code&gt;&quot;cdata&quot;&lt;/code&gt; プロパティにインデックス付きデータがあり、&quot;cdatamapping&quot;プロパティが &lt;code&gt;&quot;scaled&quot;&lt;/code&gt; に設定されている場合&lt;strong&gt;のみ&lt;/strong&gt;です。トゥルーカラー &lt;code&gt;cdata&lt;/code&gt; または &lt;code&gt;&quot;direct&quot;&lt;/code&gt; &lt;code&gt;cdatamapping&lt;/code&gt; のグラフィックオブジェクトは影響を受けません。</target>
        </trans-unit>
        <trans-unit id="1e93e1c1be04c70218fa66ab4579f87c6bd1b3a7" translate="yes" xml:space="preserve">
          <source>Programming Note: The command &lt;code&gt;clear &lt;var&gt;name&lt;/var&gt;&lt;/code&gt; only clears the variable &lt;var&gt;name&lt;/var&gt; when both a variable and a (shadowed) function named &lt;var&gt;name&lt;/var&gt; are currently defined. For example, suppose you have defined a function &lt;code&gt;foo&lt;/code&gt;, and then hidden it by performing the assignment &lt;code&gt;foo = 2&lt;/code&gt;. Executing the command &lt;code&gt;clear foo&lt;/code&gt; once will clear the variable definition and restore the definition of &lt;code&gt;foo&lt;/code&gt; as a function. Executing &lt;code&gt;clear foo&lt;/code&gt; a second time will clear the function definition.</source>
          <target state="translated">注：プログラミングコマンド &lt;code&gt;clear &lt;var&gt;name&lt;/var&gt;&lt;/code&gt; 唯一の変数クリア &lt;var&gt;name&lt;/var&gt; 変数と命名（シャドーイング）機能の両方際に &lt;var&gt;name&lt;/var&gt; 現在定義されています。たとえば、関数 &lt;code&gt;foo&lt;/code&gt; を定義し、割り当て &lt;code&gt;foo = 2&lt;/code&gt; 実行して非表示にしたとします。コマンド &lt;code&gt;clear foo&lt;/code&gt; を 1回実行すると、変数の定義がクリアされ、 &lt;code&gt;foo&lt;/code&gt; の定義が関数として復元されます。 &lt;code&gt;clear foo&lt;/code&gt; をもう一度実行すると、関数定義がクリアされます。</target>
        </trans-unit>
        <trans-unit id="b5db261852b5c7e61f36d2a5e8a01fc09f0352c4" translate="yes" xml:space="preserve">
          <source>Programming Note: The full list of properties is documented at &lt;a href=&quot;axes-properties#Axes-Properties&quot;&gt;Axes Properties&lt;/a&gt;.</source>
          <target state="translated">プログラミングのメモ：プロパティの完全なリストは、&lt;a href=&quot;axes-properties#Axes-Properties&quot;&gt;Axesプロパティに&lt;/a&gt;記載されています。</target>
        </trans-unit>
        <trans-unit id="da0558bb53f3ff4aba5abd8309d8ab9d284c52e3" translate="yes" xml:space="preserve">
          <source>Programming Note: The full list of properties is documented at &lt;a href=&quot;figure-properties#Figure-Properties&quot;&gt;Figure Properties&lt;/a&gt;.</source>
          <target state="translated">プログラミングのメモ：プロパティの完全なリストは、&lt;a href=&quot;figure-properties#Figure-Properties&quot;&gt;図のプロパティに&lt;/a&gt;記載されています。</target>
        </trans-unit>
        <trans-unit id="69fad1865b0be5a2bb55abeb3408fe41f1d89e0b" translate="yes" xml:space="preserve">
          <source>Programming Note: The full list of properties is documented at &lt;a href=&quot;light-properties#Light-Properties&quot;&gt;Light Properties&lt;/a&gt;.</source>
          <target state="translated">プログラミングの注意：プロパティの完全なリストは、&lt;a href=&quot;light-properties#Light-Properties&quot;&gt;ライトプロパティに&lt;/a&gt;記載されています。</target>
        </trans-unit>
        <trans-unit id="805df15726c523e874bcd44fd6d34479b8512add" translate="yes" xml:space="preserve">
          <source>Programming Note: The full list of properties is documented at &lt;a href=&quot;line-properties#Line-Properties&quot;&gt;Line Properties&lt;/a&gt;.</source>
          <target state="translated">プログラミングのメモ：プロパティの完全なリストは、&lt;a href=&quot;line-properties#Line-Properties&quot;&gt;ラインプロパティに&lt;/a&gt;記載されています。</target>
        </trans-unit>
        <trans-unit id="00329311904c28ba4a2c707d4cb705a9bd8bc973" translate="yes" xml:space="preserve">
          <source>Programming Note: The full list of properties is documented at &lt;a href=&quot;patch-properties#Patch-Properties&quot;&gt;Patch Properties&lt;/a&gt;. Useful patch properties include: &lt;code&gt;&quot;cdata&quot;&lt;/code&gt;, &lt;code&gt;&quot;edgecolor&quot;&lt;/code&gt;, &lt;code&gt;&quot;facecolor&quot;&lt;/code&gt;, &lt;code&gt;&quot;faces&quot;&lt;/code&gt;, and &lt;code&gt;&quot;facevertexcdata&quot;&lt;/code&gt;.</source>
          <target state="translated">プログラミングのメモ：プロパティの完全なリストは、&lt;a href=&quot;patch-properties#Patch-Properties&quot;&gt;パッチプロパティに&lt;/a&gt;記載されています。有用なパッチプロパティには、 &lt;code&gt;&quot;cdata&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;edgecolor&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;facecolor&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;faces&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;facevertexcdata&quot;&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="31dcf1181c1d9bf57fb28af557d538e3fb858af8" translate="yes" xml:space="preserve">
          <source>Programming Note: The full list of properties is documented at &lt;a href=&quot;surface-properties#Surface-Properties&quot;&gt;Surface Properties&lt;/a&gt;.</source>
          <target state="translated">プログラミングのメモ：プロパティの完全なリストは、「&lt;a href=&quot;surface-properties#Surface-Properties&quot;&gt;サーフェスプロパティ&lt;/a&gt;」に記載されています。</target>
        </trans-unit>
        <trans-unit id="f03cace68d537b902bceec654c4871be272db8d5" translate="yes" xml:space="preserve">
          <source>Programming Note: The full list of properties is documented at &lt;a href=&quot;text-properties#Text-Properties&quot;&gt;Text Properties&lt;/a&gt;.</source>
          <target state="translated">プログラミングのメモ：プロパティの完全なリストは、&lt;a href=&quot;text-properties#Text-Properties&quot;&gt;テキストプロパティに&lt;/a&gt;記載されています。</target>
        </trans-unit>
        <trans-unit id="1fd95ea31c99d6ef1649aadc942630318d864be7" translate="yes" xml:space="preserve">
          <source>Programming Note: The gamma function can grow quite large even for small input values. In many cases it may be preferable to use the natural logarithm of the gamma function (&lt;code&gt;gammaln&lt;/code&gt;) in calculations to minimize loss of precision. The final result is then &lt;code&gt;exp (&lt;var&gt;result_using_gammaln&lt;/var&gt;).&lt;/code&gt;</source>
          <target state="translated">プログラミングの注意：小さな入力値でも、ガンマ関数は非常に大きくなる可能性があります。多くの場合、精度の低下を最小限に抑えるために、計算でガンマ関数（ &lt;code&gt;gammaln&lt;/code&gt; ）の自然対数を使用することが望ましい場合があります。最終結果は &lt;code&gt;exp (&lt;var&gt;result_using_gammaln&lt;/var&gt;).&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="855ccdd6c0d89a1fd0fc53933756ba82d37f3bc2" translate="yes" xml:space="preserve">
          <source>Programming Note: The input flag &lt;code&gt;&quot;legacy&quot;&lt;/code&gt; changes the algorithm to be compatible with &lt;small&gt;MATLAB&lt;/small&gt; releases prior to R2012b.</source>
          <target state="translated">プログラミングノート：入力フラグ &lt;code&gt;&quot;legacy&quot;&lt;/code&gt; は、R2012bより前の&lt;small&gt;MATLAB&lt;/small&gt;リリースと互換性があるようにアルゴリズムを変更します。</target>
        </trans-unit>
        <trans-unit id="233d0f1c141ccedfaa1796a4f6d1bd5c05897cb9" translate="yes" xml:space="preserve">
          <source>Programming Note: The maximum length of &lt;var&gt;v&lt;/var&gt; should be less than or equal to 10 to limit memory consumption.</source>
          <target state="translated">プログラミングの注意：メモリの消費を制限するには、 &lt;var&gt;v&lt;/var&gt; の最大長を10以下にする必要があります。</target>
        </trans-unit>
        <trans-unit id="c59315054cd20bfd94e58278150abae86468a112" translate="yes" xml:space="preserve">
          <source>Programming Note: The property &lt;code&gt;&quot;outdim&quot;&lt;/code&gt; can be used to save memory when the output of &lt;var&gt;fcn&lt;/var&gt; has many dimensions, or when a wrapper to the base function that selects the desired outputs is too costly. When memory is not an issue, the easiest way to select output dimensions is to first calculate the complete result with &lt;code&gt;movfun&lt;/code&gt; and then filter that result with indexing. If code complexity is not an issue then a wrapper can be created using anonymous functions. For example, if &lt;code&gt;basefcn&lt;/code&gt; is a function returning a &lt;var&gt;K&lt;/var&gt;-dimensional row output, and only dimension &lt;var&gt;D&lt;/var&gt; is desired, then the following wrapper could be used.</source>
          <target state="translated">プログラミングの注意：プロパティ &lt;code&gt;&quot;outdim&quot;&lt;/code&gt; は、 &lt;var&gt;fcn&lt;/var&gt; の出力に多くの次元がある場合、または目的の出力を選択する基本関数へのラッパーのコストが高すぎる場合に、メモリを節約するために使用できます。メモリが問題ではない場合、出力ディメンションを選択する最も簡単な方法は、最初に &lt;code&gt;movfun&lt;/code&gt; で完全な結果を計算し、次にその結果をインデックス付けでフィルターすることです。コードの複雑さが問題でない場合は、匿名関数を使用してラッパーを作成できます。たとえば、 &lt;code&gt;basefcn&lt;/code&gt; が &lt;var&gt;K&lt;/var&gt; 次元の行出力を返す関数であり、 &lt;var&gt;D&lt;/var&gt; 次元のみが必要な場合は、次のラッパーを使用できます。</target>
        </trans-unit>
        <trans-unit id="a92eb09803f33df0859cc760d9f3b95976add55a" translate="yes" xml:space="preserve">
          <source>Programming Note: The root graphics object is identified by the special handle value of 0. At some point this unique value may change, but code can be made resistant to future changes by using &lt;code&gt;groot&lt;/code&gt; which is guaranteed to always return the root graphics object.</source>
          <target state="translated">プログラミングの注意：ルートグラフィックスオブジェクトは、特別なハンドル値0によって識別されます。ある時点でこの一意の値は変更される可能性がありますが、常にルートグラフィックスオブジェクトを返すことが保証されている &lt;code&gt;groot&lt;/code&gt; を使用することで、コードを将来の変更に耐えることができます。</target>
        </trans-unit>
        <trans-unit id="163b08ce0af5e986bec76fb8e87e14db5e992517" translate="yes" xml:space="preserve">
          <source>Programming Note: The use of &lt;code&gt;inline&lt;/code&gt; is discouraged and it may be removed from a future version of Octave. The preferred way to create functions from strings is through the use of anonymous functions (see &lt;a href=&quot;anonymous-functions#Anonymous-Functions&quot;&gt;Anonymous Functions&lt;/a&gt;) or &lt;code&gt;str2func&lt;/code&gt;.</source>
          <target state="translated">プログラミング上の注意： &lt;code&gt;inline&lt;/code&gt; の使用は推奨されておらず、Octaveの将来のバージョンから削除される可能性があります。文字列から関数を作成するための好ましい方法は、無名関数を使用するものである（参照&lt;a href=&quot;anonymous-functions#Anonymous-Functions&quot;&gt;無名関数&lt;/a&gt;または） &lt;code&gt;str2func&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ead824a8b2a3cecab6fedbe21511850e4f498686" translate="yes" xml:space="preserve">
          <source>Programming Note: The value returned by &lt;code&gt;P_tmpdir&lt;/code&gt; is always the default location. This value may not agree with that returned from &lt;code&gt;tempdir&lt;/code&gt; if the user has overridden the default with the &lt;code&gt;TMPDIR&lt;/code&gt; environment variable.</source>
          <target state="translated">プログラミング上の注意： &lt;code&gt;P_tmpdir&lt;/code&gt; によって返される値は常にデフォルトの場所です。ユーザーが &lt;code&gt;TMPDIR&lt;/code&gt; 環境変数でデフォルトをオーバーライドした場合、この値は &lt;code&gt;tempdir&lt;/code&gt; から返される値と一致しない可能性があります。</target>
        </trans-unit>
        <trans-unit id="d0e140b6e8fe275fac5602a7c564c440099596cf" translate="yes" xml:space="preserve">
          <source>Programming Note: The value returned by this function is not necessarily the same as the one returned by &lt;code&gt;gcbo&lt;/code&gt; during callback execution. An executing callback can be interrupted by another callback and the current object may be changed.</source>
          <target state="translated">プログラミングの注意：この関数によって返される値は、コールバックの実行中に &lt;code&gt;gcbo&lt;/code&gt; によって返される値と必ずしも同じではありません。実行中のコールバックは別のコールバックによって中断される可能性があり、現在のオブジェクトが変更される可能性があります。</target>
        </trans-unit>
        <trans-unit id="2d4819e1b9cfcac4e498b159d87d7fdf58fc4f9a" translate="yes" xml:space="preserve">
          <source>Programming Note: This function is a wrapper which calls &lt;code&gt;movfun&lt;/code&gt;. For additional options and documentation, See &lt;a href=&quot;#XREFmovfun&quot;&gt;movfun&lt;/a&gt;.</source>
          <target state="translated">プログラミング上の注意：この関数は &lt;code&gt;movfun&lt;/code&gt; を呼び出すラッパーです。その他のオプションとドキュメントについては、&lt;a href=&quot;#XREFmovfun&quot;&gt;movfunを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="2c6a16c9e562e8311a8e9af368ed2eecca235522" translate="yes" xml:space="preserve">
          <source>Programming Note: This function is a wrapper which calls &lt;code&gt;movfun&lt;/code&gt;. For additional options and documentation, see &lt;a href=&quot;#XREFmovfun&quot;&gt;movfun&lt;/a&gt;.</source>
          <target state="translated">プログラミング上の注意：この関数は、 &lt;code&gt;movfun&lt;/code&gt; を呼び出すラッパーです。追加のオプションとドキュメントについては、&lt;a href=&quot;#XREFmovfun&quot;&gt;movfunを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="067ceae99eb145e65b6f241f29bb50fcbc5ca071" translate="yes" xml:space="preserve">
          <source>Programming Note: This function is provided for &lt;small&gt;MATLAB&lt;/small&gt; compatibility, but recycling is not implemented in Octave. To help avoid accidental data loss an error will be raised if an attempt is made to enable file recycling.</source>
          <target state="translated">プログラミングの注意：この関数は、&lt;small&gt;MATLAB&lt;/small&gt;互換性のために提供されていますが、リサイクルはOctaveに実装されていません。偶発的なデータ損失を回避するために、ファイルのリサイクルを有効にしようとするとエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="493819fad72546590cc60faa11144d1b6bf056dd" translate="yes" xml:space="preserve">
          <source>Programming Note: This function relies on the object &lt;var&gt;val&lt;/var&gt; having a conversion method named &lt;var&gt;type&lt;/var&gt;. User-defined classes may implement only a subset of the full list of types shown above. In that case, it may be necessary to call cast twice in order to reach the desired type. For example, the conversion to double is nearly always implemented, but the conversion to uint8 might not be. In that case, the following code will work</source>
          <target state="translated">プログラミング上の注意：この関数は、 &lt;var&gt;type&lt;/var&gt; という名前の変換メソッドを持つオブジェクト &lt;var&gt;val&lt;/var&gt; に依存しています。ユーザー定義クラスは、上記のタイプの完全なリストのサブセットのみを実装できます。その場合、目的のタイプに到達するためにキャストを2回呼び出す必要がある場合があります。たとえば、doubleへの変換はほぼ常に実装されますが、uint8への変換は実装されない場合があります。その場合、次のコードが機能します</target>
        </trans-unit>
        <trans-unit id="62e059d69c5ed271d29f49bd0d240350f3e1e368" translate="yes" xml:space="preserve">
          <source>Programming Note: When calculating the binomial coefficient &lt;code&gt;nchoosek&lt;/code&gt; works only for non-negative, integer arguments. Use &lt;code&gt;bincoeff&lt;/code&gt; for non-integer and negative scalar arguments, or for computing many binomial coefficients at once with vector inputs for &lt;var&gt;n&lt;/var&gt; or &lt;var&gt;k&lt;/var&gt;.</source>
          <target state="translated">プログラミングの注意：二項係数 &lt;code&gt;nchoosek&lt;/code&gt; を計算する場合、非負の整数引数に対してのみ機能します。非整数および負のスカラー引数の場合、または &lt;var&gt;n&lt;/var&gt; または &lt;var&gt;k&lt;/var&gt; のベクトル入力で一度に多くの二項係数を計算する場合は、 &lt;code&gt;bincoeff&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="7432363be42d36a176246b081bdf0e3d0f31ed73" translate="yes" xml:space="preserve">
          <source>Programming Note: When producing graphics for final publication use &lt;code&gt;print&lt;/code&gt; or &lt;code&gt;saveas&lt;/code&gt;. When it is important to be able to continue to edit a figure as an Octave object, use &lt;code&gt;hgsave&lt;/code&gt;/&lt;code&gt;hgload&lt;/code&gt;.</source>
          <target state="translated">プログラミング上の注意：最終的な出版物のためにグラフィックを作成するときは、 &lt;code&gt;print&lt;/code&gt; または &lt;code&gt;saveas&lt;/code&gt; を使用してください。FigureをOctaveオブジェクトとして引き続き編集できることが重要な場合は、 &lt;code&gt;hgsave&lt;/code&gt; / &lt;code&gt;hgload&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="03057c562129f95cb34dfec186ff1bd1922ccacc" translate="yes" xml:space="preserve">
          <source>Programming Note: When specifying bin centers with the &lt;var&gt;bins&lt;/var&gt; input, the edges for bins 2 to N-1 are spaced so that &lt;code&gt;&lt;var&gt;bins&lt;/var&gt;(i)&lt;/code&gt; is centered between the edges. The final edge is drawn halfway between bin N and bin 1. This guarantees that all input &lt;var&gt;th&lt;/var&gt; will be placed into one of the bins, but also means that for some combinations bin 1 and bin N may not be centered on the user&amp;rsquo;s given values.</source>
          <target state="translated">プログラミングの注意： &lt;var&gt;bins&lt;/var&gt; 入力でビンの中心を指定する場合、ビン2からN-1 のエッジは、 &lt;code&gt;&lt;var&gt;bins&lt;/var&gt;(i)&lt;/code&gt; がエッジの中央にくるように間隔を空けて配置されます。最終エッジこの保証は、すべての入力こと半ビンNとビン1との間に描かれ &lt;var&gt;th&lt;/var&gt; ビンの一つに配置されるだけでなく、いくつかの組み合わせビン1とビンNに対するユーザの所定の値を中心としなくてもよいことを意味します。</target>
        </trans-unit>
        <trans-unit id="8f04f6e80e7847ee4b1b7db05b432a8df14bf3ff" translate="yes" xml:space="preserve">
          <source>Programming Note: While global variables occasionally are the right solution to a coding problem, modern best practice discourages their use. Code which relies on global variables may behave unpredictably between different users and can be difficult to debug. This is because global variables can introduce systemic changes so that localizing a bug to a particular function, or to a particular loop within a function, becomes difficult.</source>
          <target state="translated">プログラミング上の注意:グローバル変数がコーディングの問題に対する正しい解決策になることもありますが、 最近のベストプラクティスでは、グローバル変数の使用は推奨されていません。グローバル変数に依存したコードは、異なるユーザ間で予測できない振る舞いをしたり、 デバッグが困難になったりすることがあります。これは、グローバル変数がシステミックな変化をもたらす可能性があるため、バグを特定の関数や関数内の特定のループに局所化することが困難になるからです。</target>
        </trans-unit>
        <trans-unit id="5ce341c81135a13a679372a6ec23bc048ad5f80d" translate="yes" xml:space="preserve">
          <source>Programming Note: With one output &lt;code&gt;rat&lt;/code&gt; produces a string which is a continued fraction expansion. To produce a string which is a simple fraction (one numerator, one denominator) use &lt;code&gt;rats&lt;/code&gt;.</source>
          <target state="translated">プログラミングの注意：1つの出力で、 &lt;code&gt;rat&lt;/code&gt; は継続的な分数展開である文字列を生成します。単純な分数（1つの分子、1つの分母）である文字列を生成するには、 &lt;code&gt;rats&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="dd90310e33e438335b0c64d312483aae889487fd" translate="yes" xml:space="preserve">
          <source>Programming Note: char inputs may behave strangely because of the interaction between chars and cellstrings when calling &lt;code&gt;ismember&lt;/code&gt; on them. But it will probably &quot;do what you mean&quot; if you just use it naturally. To guarantee operation, convert all char arrays to cellstrings with &lt;code&gt;cellstr&lt;/code&gt;.</source>
          <target state="translated">プログラミング上の注意：char入力は、 &lt;code&gt;ismember&lt;/code&gt; を呼び出すときに、charとcellstringの間の相互作用のために、奇妙に動作する場合があります。しかし、それを自然に使用すれば、おそらく「あなたが意味することをする」でしょう。動作を保証するには、すべてのchar配列を &lt;code&gt;cellstr&lt;/code&gt; を使用してcellstringに変換します。</target>
        </trans-unit>
        <trans-unit id="14cdbc62e9375cf1ae0804cf9a6710522cd6670e" translate="yes" xml:space="preserve">
          <source>Programming Note: if you are only using &lt;code&gt;eval&lt;/code&gt; as an error-capturing mechanism, rather than for the execution of arbitrary code strings, Consider using try/catch blocks or unwind_protect/unwind_protect_cleanup blocks instead. These techniques have higher performance and don&amp;rsquo;t introduce the security considerations that the evaluation of arbitrary code does.</source>
          <target state="translated">プログラミングの注意：任意のコード文字列の実行ではなく、エラーキャプチャメカニズムとして &lt;code&gt;eval&lt;/code&gt; のみを使用している場合は、代わりにtry / catchブロックまたはunwind_protect / unwind_protect_cleanupブロックの使用を検討してください。これらの手法はパフォーマンスが高く、任意のコードの評価で行われるセキュリティ上の考慮事項が導入されていません。</target>
        </trans-unit>
        <trans-unit id="799a8c866c6ede37972dcce97cca24ea8cedca0e" translate="yes" xml:space="preserve">
          <source>Programming Note: nth_element encapsulates the C++ standard library algorithms nth_element and partial_sort. On average, the complexity of the operation is O(M*log(K)), where &lt;code&gt;M&amp;nbsp;=&amp;nbsp;size&amp;nbsp;(&lt;var&gt;x&lt;/var&gt;,&amp;nbsp;&lt;var&gt;dim&lt;/var&gt;)&lt;/code&gt; and &lt;code&gt;K&amp;nbsp;=&amp;nbsp;length&amp;nbsp;(&lt;var&gt;n&lt;/var&gt;)&lt;/code&gt;. This function is intended for cases where the ratio K/M is small; otherwise, it may be better to use &lt;code&gt;sort&lt;/code&gt;.</source>
          <target state="translated">プログラミング上の注意：nth_elementは、C ++標準ライブラリアルゴリズムnth_elementおよびpartial_sortをカプセル化します。平均して、操作の複雑さはO（M * log（K））です。ここで、 &lt;code&gt;M&amp;nbsp;=&amp;nbsp;size&amp;nbsp;(&lt;var&gt;x&lt;/var&gt;,&amp;nbsp;&lt;var&gt;dim&lt;/var&gt;)&lt;/code&gt; および &lt;code&gt;K&amp;nbsp;=&amp;nbsp;length&amp;nbsp;(&lt;var&gt;n&lt;/var&gt;)&lt;/code&gt; です。この関数は、比率K / Mが小さい場合を対象としています。それ以外の場合は、 &lt;code&gt;sort&lt;/code&gt; を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="d0321f5426950b65063982b7af768bfad7f269eb" translate="yes" xml:space="preserve">
          <source>Programming Note: the code is a wrapper to the corresponding &lt;small&gt;LAPACK&lt;/small&gt; dggsvd and zggsvd routines.</source>
          <target state="translated">プログラミング上の注意：コードは、対応する&lt;small&gt;LAPACK&lt;/small&gt; dggsvdおよびzggsvdルーチンのラッパーです。</target>
        </trans-unit>
        <trans-unit id="edd71db6c3a8f1ae8fceff521469b155ad0e7183" translate="yes" xml:space="preserve">
          <source>Programming Notes:</source>
          <target state="translated">プログラミングノート。</target>
        </trans-unit>
        <trans-unit id="8a33e03607b5aa7d4b183dc5923892fee46cbe4b" translate="yes" xml:space="preserve">
          <source>Programming Notes: &lt;code&gt;humps&lt;/code&gt; has two local maxima located near &lt;var&gt;x&lt;/var&gt; = 0.300 and 0.893, a local minimum near &lt;var&gt;x&lt;/var&gt; = 0.637, and zeros near &lt;var&gt;x&lt;/var&gt; = -0.132 and 1.300. &lt;code&gt;humps&lt;/code&gt; is a useful function for testing algorithms which find zeros or local minima and maxima.</source>
          <target state="translated">プログラミング上の注意： &lt;code&gt;humps&lt;/code&gt; には、 &lt;var&gt;x&lt;/var&gt; = 0.300と0.893の近くに2つの極大、 &lt;var&gt;x&lt;/var&gt; = 0.637の近くに極小、 &lt;var&gt;x&lt;/var&gt; = -0.132と1.300の近くにゼロがあります。 &lt;code&gt;humps&lt;/code&gt; は、ゼロまたは極小値と極大値を見つけるアルゴリズムをテストするための便利な関数です。</target>
        </trans-unit>
        <trans-unit id="61f8c996f270b46f11502047700fa812d42d02cf" translate="yes" xml:space="preserve">
          <source>Programming Notes: Depending on the operating system and file system, the same file or folder can be referred to with different paths. In particular, paths on the Windows platform may differ in case (</source>
          <target state="translated">プログラミング上の注意事項。オペレーティングシステムやファイルシステムによって、同じファイルやフォルダを異なるパスで参照することができます。特に、Windowsプラットフォーム上ではパスが異なる場合があります(</target>
        </trans-unit>
        <trans-unit id="9cc9f43744a0de7bacc020abf1efbb0fd9458f69" translate="yes" xml:space="preserve">
          <source>Programming Notes: If there are singularities within the integration region it is best to split the integral and place the singularities on the boundary.</source>
          <target state="translated">プログラミングの注意点.積分領域内に特異点がある場合、積分を分割して特異点を境界に配置するのがよいでしょう。</target>
        </trans-unit>
        <trans-unit id="f6c34f2a792d6e1d981dbd01ba4ab0f4c5071ad7" translate="yes" xml:space="preserve">
          <source>Programming Notes: Routines from &lt;small&gt;LAPACK&lt;/small&gt; are used for full matrices and code from &lt;small&gt;UMFPACK&lt;/small&gt; is used for sparse matrices.</source>
          <target state="translated">プログラミング上の注意：&lt;small&gt;LAPACKの&lt;/small&gt;ルーチンは完全行列に使用され、&lt;small&gt;UMFPACKの&lt;/small&gt;コードは疎行列に使用されます。</target>
        </trans-unit>
        <trans-unit id="4d1d1a9363ebccf23f3103a2642b6e2960598df3" translate="yes" xml:space="preserve">
          <source>Programming Notes: The applied formula is</source>
          <target state="translated">プログラミングの注意点。適用される式は</target>
        </trans-unit>
        <trans-unit id="b98616bf2151ce0509c2cb67dec75400aeba7dd5" translate="yes" xml:space="preserve">
          <source>Programming Notes: The command &lt;code&gt;clear &lt;var&gt;name&lt;/var&gt;&lt;/code&gt; only clears the variable &lt;var&gt;name&lt;/var&gt; when both a variable and a (shadowed) function named &lt;var&gt;name&lt;/var&gt; are currently defined. For example, suppose you have defined a function &lt;code&gt;foo&lt;/code&gt;, and then hidden it by performing the assignment &lt;code&gt;foo = 2&lt;/code&gt;. Executing the command &lt;code&gt;clear foo&lt;/code&gt; once will clear the variable definition and restore the definition of &lt;code&gt;foo&lt;/code&gt; as a function. Executing &lt;code&gt;clear foo&lt;/code&gt; a second time will clear the function definition.</source>
          <target state="translated">プログラミング上の注意：コマンド &lt;code&gt;clear &lt;var&gt;name&lt;/var&gt;&lt;/code&gt; は、変数と &lt;var&gt;name&lt;/var&gt; という名前の（シャドウされた）関数の両方が現在定義されている場合にのみ変数 &lt;var&gt;name&lt;/var&gt; クリアします。たとえば、関数 &lt;code&gt;foo&lt;/code&gt; を定義し、割り当て &lt;code&gt;foo = 2&lt;/code&gt; 実行して関数を非表示にしたとします。コマンド &lt;code&gt;clear foo&lt;/code&gt; 1回実行すると、変数の定義がクリアされ、 &lt;code&gt;foo&lt;/code&gt; の定義が関数として復元されます。 &lt;code&gt;clear foo&lt;/code&gt; をもう一度実行すると、関数定義がクリアされます。</target>
        </trans-unit>
        <trans-unit id="3e90a771bd0311a8ad627c9aaa9c53447ffcc823" translate="yes" xml:space="preserve">
          <source>Programming Notes: The full list of properties is documented at &lt;a href=&quot;text-properties#Text-Properties&quot;&gt;Text Properties&lt;/a&gt;.</source>
          <target state="translated">プログラミングノート：プロパティの完全なリストは、&lt;a href=&quot;text-properties#Text-Properties&quot;&gt;テキストプロパティに&lt;/a&gt;記載されています。</target>
        </trans-unit>
        <trans-unit id="3b353314dbb7c05f0001a5fcc4eb2a3b414afa10" translate="yes" xml:space="preserve">
          <source>Programming Notes: The input flag &lt;code&gt;&quot;legacy&quot;&lt;/code&gt; changes the algorithm to be compatible with &lt;small&gt;MATLAB&lt;/small&gt; releases prior to R2012b. Specifically, The index ordering flag is changed to &lt;code&gt;&quot;last&quot;&lt;/code&gt;, and the shape of the outputs &lt;var&gt;i&lt;/var&gt;, &lt;var&gt;j&lt;/var&gt; will follow the shape of the input &lt;var&gt;x&lt;/var&gt; rather than always being column vectors.</source>
          <target state="translated">プログラミングノート：入力フラグ &lt;code&gt;&quot;legacy&quot;&lt;/code&gt; は、R2012bより前の&lt;small&gt;MATLAB&lt;/small&gt;リリースと互換性があるようにアルゴリズムを変更します。具体的には、インデックス順序フラグが &lt;code&gt;&quot;last&quot;&lt;/code&gt; 変更され、出力 &lt;var&gt;i&lt;/var&gt; 、 &lt;var&gt;j&lt;/var&gt; の形状は、常に列ベクトルではなく、入力 &lt;var&gt;x&lt;/var&gt; の形状に従います。</target>
        </trans-unit>
        <trans-unit id="4ab815067d12012c8e07667e46d34d38fc30cce8" translate="yes" xml:space="preserve">
          <source>Programming Notes: The search for a minimum is restricted to be in the finite interval bound by &lt;var&gt;a&lt;/var&gt; and &lt;var&gt;b&lt;/var&gt;. If you have only one initial point to begin searching from then you will need to use an unconstrained minimization algorithm such as &lt;code&gt;fminunc&lt;/code&gt; or &lt;code&gt;fminsearch&lt;/code&gt;. &lt;code&gt;fminbnd&lt;/code&gt; internally uses a Golden Section search strategy.</source>
          <target state="translated">プログラミング上の注意：最小値の検索は、 &lt;var&gt;a&lt;/var&gt; と &lt;var&gt;b&lt;/var&gt; によって制限された有限区間内に制限されています。検索を開始する最初のポイントが1つしかない場合は、 &lt;code&gt;fminunc&lt;/code&gt; や &lt;code&gt;fminsearch&lt;/code&gt; などの制約のない最小化アルゴリズムを使用する必要があります。 &lt;code&gt;fminbnd&lt;/code&gt; は内部的にゴールデンセクション検索戦略を使用しています。</target>
        </trans-unit>
        <trans-unit id="3a54870aacf1a141cdef33c8ea582e80e79c772e" translate="yes" xml:space="preserve">
          <source>Programming Notes: When calculating with floating point numbers (double, single), values within a few eps of an integer will be rounded to that integer before computation for compatibility with &lt;small&gt;MATLAB&lt;/small&gt;. Any floating point integers greater than &lt;code&gt;flintmax&lt;/code&gt; (2^53 for double) will not compute correctly. For larger integer values convert the input to &lt;code&gt;uint64&lt;/code&gt; before calling this function.</source>
          <target state="translated">プログラミング上の注意：浮動小数点数（double、single）で計算する場合、&lt;small&gt;MATLAB&lt;/small&gt;との互換性のために、整数の数eps内の値は計算前にその整数に丸められます。 &lt;code&gt;flintmax&lt;/code&gt; （doubleの場合は2 ^ 53）より大きい浮動小数点整数は正しく計算されません。より大きな整数値の場合、この関数を呼び出す前に入力を &lt;code&gt;uint64&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="151fcb771556728ca2f9f2085e8378e1e5453822" translate="yes" xml:space="preserve">
          <source>Progress Bar</source>
          <target state="translated">プログレスバー</target>
        </trans-unit>
        <trans-unit id="d62b4f111950ba1ed04dd200858558c208d02bea" translate="yes" xml:space="preserve">
          <source>Promotion and Demotion of Data Types</source>
          <target state="translated">データ型の普及と降格</target>
        </trans-unit>
        <trans-unit id="bc6c88db2f0703a9e2461a4a8060ccf1cb881998" translate="yes" xml:space="preserve">
          <source>Properties</source>
          <target state="translated">Properties</target>
        </trans-unit>
        <trans-unit id="241f05186275f7c3a30ba754f138dff0d6bbf853" translate="yes" xml:space="preserve">
          <source>Properties of &lt;code&gt;axes&lt;/code&gt; objects (see &lt;a href=&quot;graphics-objects#XREFaxes&quot;&gt;axes&lt;/a&gt;):</source>
          <target state="translated">プロパティ &lt;code&gt;axes&lt;/code&gt; オブジェクト（参照&lt;a href=&quot;graphics-objects#XREFaxes&quot;&gt;軸&lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="b639cf09c7c1722d0497325b4f62fe3b43aeec9f" translate="yes" xml:space="preserve">
          <source>Properties of &lt;code&gt;figure&lt;/code&gt; objects (see &lt;a href=&quot;multiple-plot-windows#XREFfigure&quot;&gt;figure&lt;/a&gt;):</source>
          <target state="translated">プロパティ &lt;code&gt;figure&lt;/code&gt; オブジェクト（参照&lt;a href=&quot;multiple-plot-windows#XREFfigure&quot;&gt;数字を&lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="8ecb7ec52746396a7f22a54ec9974592b9afecdf" translate="yes" xml:space="preserve">
          <source>Properties of &lt;code&gt;image&lt;/code&gt; objects (see &lt;a href=&quot;displaying-images#XREFimage&quot;&gt;image&lt;/a&gt;):</source>
          <target state="translated">プロパティ &lt;code&gt;image&lt;/code&gt; オブジェクト（参照&lt;a href=&quot;displaying-images#XREFimage&quot;&gt;画像&lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="e482abc240f371b321fd5e9a3444fdcc4c835540" translate="yes" xml:space="preserve">
          <source>Properties of &lt;code&gt;legend&lt;/code&gt; objects (see &lt;a href=&quot;plot-annotations#XREFlegend&quot;&gt;legend&lt;/a&gt;):</source>
          <target state="translated">プロパティ &lt;code&gt;legend&lt;/code&gt; オブジェクト（参照&lt;a href=&quot;plot-annotations#XREFlegend&quot;&gt;凡例を&lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="0218fdecdf5fbe55ed1ee3d402d98738054a419d" translate="yes" xml:space="preserve">
          <source>Properties of &lt;code&gt;light&lt;/code&gt; objects (see &lt;a href=&quot;graphics-objects#XREFlight&quot;&gt;light&lt;/a&gt;):</source>
          <target state="translated">プロパティの &lt;code&gt;light&lt;/code&gt; のオブジェクト（参照&lt;a href=&quot;graphics-objects#XREFlight&quot;&gt;光&lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="7c9abe8bd46d2db8d39125172a5de63e93141bcb" translate="yes" xml:space="preserve">
          <source>Properties of &lt;code&gt;line&lt;/code&gt; objects (see &lt;a href=&quot;graphics-objects#XREFline&quot;&gt;line&lt;/a&gt;):</source>
          <target state="translated">プロパティ &lt;code&gt;line&lt;/code&gt; オブジェクト（参照&lt;a href=&quot;graphics-objects#XREFline&quot;&gt;ラインを&lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="d3045d0560f32aee153844e346d4430c7c1c871e" translate="yes" xml:space="preserve">
          <source>Properties of &lt;code&gt;patch&lt;/code&gt; objects (see &lt;a href=&quot;graphics-objects#XREFpatch&quot;&gt;patch&lt;/a&gt;):</source>
          <target state="translated">性質 &lt;code&gt;patch&lt;/code&gt; オブジェクト（参照&lt;a href=&quot;graphics-objects#XREFpatch&quot;&gt;パッチ&lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="b287185fb93ef9f8cac88f1c123cc79f24a62032" translate="yes" xml:space="preserve">
          <source>Properties of &lt;code&gt;surface&lt;/code&gt; objects (see &lt;a href=&quot;graphics-objects#XREFsurface&quot;&gt;surface&lt;/a&gt;):</source>
          <target state="translated">性質 &lt;code&gt;surface&lt;/code&gt; オブジェクト（参照&lt;a href=&quot;graphics-objects#XREFsurface&quot;&gt;面&lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="9c60994b6260b2f09c9455084667f08b86c0270e" translate="yes" xml:space="preserve">
          <source>Properties of &lt;code&gt;text&lt;/code&gt; objects (see &lt;a href=&quot;plot-annotations#XREFtext&quot;&gt;text&lt;/a&gt;):</source>
          <target state="translated">プロパティ &lt;code&gt;text&lt;/code&gt; オブジェクト（参照&lt;a href=&quot;plot-annotations#XREFtext&quot;&gt;テキストを&lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="9e1e46d8e23e077ac289da5b1fa9dd10ba73ff66" translate="yes" xml:space="preserve">
          <source>Properties of &lt;code&gt;uibuttongroup&lt;/code&gt; objects (see &lt;a href=&quot;ui-elements#XREFuibuttongroup&quot;&gt;uibuttongroup&lt;/a&gt;):</source>
          <target state="translated">プロパティ &lt;code&gt;uibuttongroup&lt;/code&gt; オブジェクト（参照&lt;a href=&quot;ui-elements#XREFuibuttongroup&quot;&gt;uibuttongroupの&lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="29e7e202129bf2a1a5c4f03dd477f30f1f857553" translate="yes" xml:space="preserve">
          <source>Properties of &lt;code&gt;uicontextmenu&lt;/code&gt; objects (see &lt;a href=&quot;ui-elements#XREFuicontextmenu&quot;&gt;uicontextmenu&lt;/a&gt;):</source>
          <target state="translated">性質 &lt;code&gt;uicontextmenu&lt;/code&gt; （参照オブジェクト&lt;a href=&quot;ui-elements#XREFuicontextmenu&quot;&gt;たUicontextmenuを&lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="aa7aa6cf8c153009cbf77985f57a6a14bafccb0d" translate="yes" xml:space="preserve">
          <source>Properties of &lt;code&gt;uicontrol&lt;/code&gt; objects (see &lt;a href=&quot;ui-elements#XREFuicontrol&quot;&gt;uicontrol&lt;/a&gt;):</source>
          <target state="translated">プロパティ &lt;code&gt;uicontrol&lt;/code&gt; オブジェクト（参照&lt;a href=&quot;ui-elements#XREFuicontrol&quot;&gt;するuicontrolを&lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="434bbf08bec6b869ee67888e84163b8aedd6c2a1" translate="yes" xml:space="preserve">
          <source>Properties of &lt;code&gt;uimenu&lt;/code&gt; objects (see &lt;a href=&quot;ui-elements#XREFuimenu&quot;&gt;uimenu&lt;/a&gt;):</source>
          <target state="translated">プロパティ &lt;code&gt;uimenu&lt;/code&gt; （参照オブジェクト&lt;a href=&quot;ui-elements#XREFuimenu&quot;&gt;のUimenuを&lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="873e569a7ee9ddc37e0829a32ba0997d47425f8b" translate="yes" xml:space="preserve">
          <source>Properties of &lt;code&gt;uipanel&lt;/code&gt; objects (see &lt;a href=&quot;ui-elements#XREFuipanel&quot;&gt;uipanel&lt;/a&gt;):</source>
          <target state="translated">プロパティ &lt;code&gt;uipanel&lt;/code&gt; オブジェクト（参照&lt;a href=&quot;ui-elements#XREFuipanel&quot;&gt;のUipanelを&lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="5aaa6d4fe74a8ba373ce9f7e146acc08a62ae5d1" translate="yes" xml:space="preserve">
          <source>Properties of &lt;code&gt;uipushtool&lt;/code&gt; objects (see &lt;a href=&quot;ui-elements#XREFuipushtool&quot;&gt;uipushtool&lt;/a&gt;):</source>
          <target state="translated">プロパティ &lt;code&gt;uipushtool&lt;/code&gt; のオブジェクト（参照&lt;a href=&quot;ui-elements#XREFuipushtool&quot;&gt;uipushtoolを&lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="cafd85cf591a2b83e48d81e7e7278a86e2d97a09" translate="yes" xml:space="preserve">
          <source>Properties of &lt;code&gt;uitable&lt;/code&gt; objects (see &lt;a href=&quot;ui-elements#XREFuitable&quot;&gt;uitable&lt;/a&gt;):</source>
          <target state="translated">性質 &lt;code&gt;uitable&lt;/code&gt; のオブジェクト（参照&lt;a href=&quot;ui-elements#XREFuitable&quot;&gt;のuitable&lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="81f8e72ce6dcaa3f32c3e792ec27b84f570a4641" translate="yes" xml:space="preserve">
          <source>Properties of &lt;code&gt;uitoggletool&lt;/code&gt; objects (see &lt;a href=&quot;ui-elements#XREFuitoggletool&quot;&gt;uitoggletool&lt;/a&gt;):</source>
          <target state="translated">プロパティ &lt;code&gt;uitoggletool&lt;/code&gt; のオブジェクト（参照&lt;a href=&quot;ui-elements#XREFuitoggletool&quot;&gt;uitoggletoolを&lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="93d3e679448f52f219dde8977cbab43ec10dcea2" translate="yes" xml:space="preserve">
          <source>Properties of &lt;code&gt;uitoolbar&lt;/code&gt; objects (see &lt;a href=&quot;ui-elements#XREFuitoolbar&quot;&gt;uitoolbar&lt;/a&gt;):</source>
          <target state="translated">プロパティ &lt;code&gt;uitoolbar&lt;/code&gt; のオブジェクト（参照&lt;a href=&quot;ui-elements#XREFuitoolbar&quot;&gt;uitoolbar&lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="e47979ec069f56005efcd2bd097160d6b51f1bca" translate="yes" xml:space="preserve">
          <source>Properties of the root graphics object:</source>
          <target state="translated">ルートグラフィックスオブジェクトのプロパティ。</target>
        </trans-unit>
        <trans-unit id="86bde8390bbf590f08ecc86bc934c68dfe1c82f0" translate="yes" xml:space="preserve">
          <source>Properties of uibuttongroup objects are documented at &lt;a href=&quot;uibuttongroup-properties#Uibuttongroup-Properties&quot;&gt;Uibuttongroup Properties&lt;/a&gt;.</source>
          <target state="translated">uibuttongroupオブジェクトのプロパティは、&lt;a href=&quot;uibuttongroup-properties#Uibuttongroup-Properties&quot;&gt;Uibuttongroupプロパティに&lt;/a&gt;記載されています。</target>
        </trans-unit>
        <trans-unit id="92279cf6161acba3f8e09e2e20c60d6005c662a3" translate="yes" xml:space="preserve">
          <source>Properties of uicontrol objects are documented at &lt;a href=&quot;uicontrol-properties#Uicontrol-Properties&quot;&gt;Uicontrol Properties&lt;/a&gt;.</source>
          <target state="translated">uicontrolオブジェクトのプロパティはUicontrolプロパティに記載されて&lt;a href=&quot;uicontrol-properties#Uicontrol-Properties&quot;&gt;います&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a1dd9431cb546841f4242ea0a9a9e40e88b5adfc" translate="yes" xml:space="preserve">
          <source>Properties of uitable objects are documented at &lt;a href=&quot;uitable-properties#Uitable-Properties&quot;&gt;Uitable Properties&lt;/a&gt;.</source>
          <target state="translated">Uitableオブジェクトのプロパティは、&lt;a href=&quot;uitable-properties#Uitable-Properties&quot;&gt;Uitableプロパティに&lt;/a&gt;記載されています。</target>
        </trans-unit>
        <trans-unit id="a3b543d935912589a282f3ba2b142bcc88b6dbb6" translate="yes" xml:space="preserve">
          <source>Property listeners are executed (in order of registration) when the property is set. The new value is already available when the listeners are executed.</source>
          <target state="translated">プロパティのリスナーは、プロパティが設定されると(登録順に)実行されます。リスナーが実行されたときには、すでに新しい値が利用できるようになっています。</target>
        </trans-unit>
        <trans-unit id="5cd2d5fef539f9e7e4a8c253b41597139e210aaa" translate="yes" xml:space="preserve">
          <source>Provide a TIFF preview.</source>
          <target state="translated">TIFFプレビューを提供します。</target>
        </trans-unit>
        <trans-unit id="c776cf4873067f4df6dee956d0816ed4eb1b4319" translate="yes" xml:space="preserve">
          <source>Provide a metafile preview.</source>
          <target state="translated">メタファーのプレビューを提供します。</target>
        </trans-unit>
        <trans-unit id="ebfe311e7d433472917ddd1c1deff51e77d198b3" translate="yes" xml:space="preserve">
          <source>Provide a pict preview.</source>
          <target state="translated">ピクトプレビューを提供します。</target>
        </trans-unit>
        <trans-unit id="af4ab05cf378f561951067634a3bdef427f9de1d" translate="yes" xml:space="preserve">
          <source>Provide an interchange preview.</source>
          <target state="translated">インターチェンジのプレビューを提供します。</target>
        </trans-unit>
        <trans-unit id="89600ec67aca37a834af719cfe1c6b256e16b7b5" translate="yes" xml:space="preserve">
          <source>Provide detailed information on currently defined variables matching the given patterns.</source>
          <target state="translated">与えられたパターンに一致する現在定義されている変数の詳細情報を提供する。</target>
        </trans-unit>
        <trans-unit id="5ef3f089f11941c8cc6c60ef1fc1a3e043c8725c" translate="yes" xml:space="preserve">
          <source>Public domain.</source>
          <target state="translated">パブリックドメイン。</target>
        </trans-unit>
        <trans-unit id="a8c10b532ca9504e2209a84ff9207338a4aa685e" translate="yes" xml:space="preserve">
          <source>Publish Octave Script Files</source>
          <target state="translated">Octaveスクリプトファイルの発行</target>
        </trans-unit>
        <trans-unit id="ec6846e233fdf9f5353f58bb54612f15cdc7183d" translate="yes" xml:space="preserve">
          <source>Publishing Markup</source>
          <target state="translated">出版マークアップ</target>
        </trans-unit>
        <trans-unit id="c3156e00d3c2588c639e0d3cf6821258b05761c7" translate="yes" xml:space="preserve">
          <source>Q</source>
          <target state="translated">Q</target>
        </trans-unit>
        <trans-unit id="e1d6b67ef5b1e41c9fd6531478f56412d8debb60" translate="yes" xml:space="preserve">
          <source>Q3</source>
          <target state="translated">Q3</target>
        </trans-unit>
        <trans-unit id="9e6d61087e655216d3c5df8dde0166e8ffb4d2e2" translate="yes" xml:space="preserve">
          <source>Q3-00</source>
          <target state="translated">Q3-00</target>
        </trans-unit>
        <trans-unit id="bef2ff1ca0c6dd98cc68543bcb41f7fe8120665d" translate="yes" xml:space="preserve">
          <source>Q3-2000</source>
          <target state="translated">Q3-2000</target>
        </trans-unit>
        <trans-unit id="8ced7394313f44ead4f61300f16b8aa6ee7acaca" translate="yes" xml:space="preserve">
          <source>QMR: a quasi-minimal residual method for non-Hermitian linear systems</source>
          <target state="translated">QMR:非ヘルミティア線形系の準極小残差法</target>
        </trans-unit>
        <trans-unit id="dd25958f8b1834e86b1c10a2c773118740ce2428" translate="yes" xml:space="preserve">
          <source>QQ</source>
          <target state="translated">QQ</target>
        </trans-unit>
        <trans-unit id="3a39711bc3b6c322ce700af4292a651d195c1697" translate="yes" xml:space="preserve">
          <source>QQ-YY</source>
          <target state="translated">QQ-YY</target>
        </trans-unit>
        <trans-unit id="396773ecdc2d1ac974a5a8ff7d84f05520694476" translate="yes" xml:space="preserve">
          <source>QQ-YYYY</source>
          <target state="translated">QQ-YYYY</target>
        </trans-unit>
        <trans-unit id="587091ede8b2b506051033e65bc21dd2036d2af8" translate="yes" xml:space="preserve">
          <source>QR factorization updating library (&lt;a href=&quot;https://sourceforge.net/projects/qrupdate&quot;&gt;https://sourceforge.net/projects/qrupdate&lt;/a&gt;). QRUPDATE is used to provide improved performance for the functions &lt;code&gt;qrdelete&lt;/code&gt;, &lt;code&gt;qrinsert&lt;/code&gt;, &lt;code&gt;qrshift&lt;/code&gt;, and &lt;code&gt;qrupdate&lt;/code&gt;.</source>
          <target state="translated">QR分解更新ライブラリ（&lt;a href=&quot;https://sourceforge.net/projects/qrupdate&quot;&gt;https://sourceforge.net/projects/qrupdate&lt;/a&gt;）。QRUPDATEは、関数 &lt;code&gt;qrdelete&lt;/code&gt; 、 &lt;code&gt;qrinsert&lt;/code&gt; 、 &lt;code&gt;qrshift&lt;/code&gt; 、および &lt;code&gt;qrupdate&lt;/code&gt; のパフォーマンスを向上させるために使用されます。</target>
        </trans-unit>
        <trans-unit id="35abf55fdca4694b2e1773132f240efce4bc1ef5" translate="yes" xml:space="preserve">
          <source>QRUPDATE</source>
          <target state="translated">QRUPDATE</target>
        </trans-unit>
        <trans-unit id="f4beebd0474163ae366376f1e0eb35660ebe85f9" translate="yes" xml:space="preserve">
          <source>QRUPDATE (&lt;a href=&quot;https://sourceforge.net/projects/qrupdate&quot;&gt;https://sourceforge.net/projects/qrupdate&lt;/a&gt;)</source>
          <target state="translated">QRUPDATE（&lt;a href=&quot;https://sourceforge.net/projects/qrupdate&quot;&gt;https://sourceforge.net/projects/qrupdate&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="8d8d4544a488cb58ca2ee2ba8f3b20b6f42d0bc4" translate="yes" xml:space="preserve">
          <source>QScintilla</source>
          <target state="translated">QScintilla</target>
        </trans-unit>
        <trans-unit id="63137dd5e11b33e0c02a9968c9aa020051e187d3" translate="yes" xml:space="preserve">
          <source>Qhull</source>
          <target state="translated">Qhull</target>
        </trans-unit>
        <trans-unit id="f0dafd66688809160d2a8d417bc4da22e4b20ba2" translate="yes" xml:space="preserve">
          <source>Qhull (&lt;a href=&quot;http://www.qhull.org&quot;&gt;http://www.qhull.org&lt;/a&gt;)</source>
          <target state="translated">Qhull（&lt;a href=&quot;http://www.qhull.org&quot;&gt;http://www.qhull.org&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="fbeba94c4e9b16a43991c5615fab8c4406d33231" translate="yes" xml:space="preserve">
          <source>Qt</source>
          <target state="translated">Qt</target>
        </trans-unit>
        <trans-unit id="ba89819da74063b47e5a5ad909129c3f1e805368" translate="yes" xml:space="preserve">
          <source>Quadratic Programming</source>
          <target state="translated">二次プログラミング</target>
        </trans-unit>
        <trans-unit id="a60f2c73604f623449f263e78f5857849ad5e429" translate="yes" xml:space="preserve">
          <source>Quality</source>
          <target state="translated">Quality</target>
        </trans-unit>
        <trans-unit id="8858a2d98c63957c8ed3aa430777e12c8a6cda0e" translate="yes" xml:space="preserve">
          <source>Quality setting for the Ogg Vorbis compressor. Values can range between 0 and 100 with 100 being the highest quality setting. Default is 75.</source>
          <target state="translated">Ogg Vorbis コンプレッサーの品質設定。値は 0 から 100 の間で設定でき、100 が最高品質の設定となります。デフォルトは 75 です。</target>
        </trans-unit>
        <trans-unit id="33ca8edc129102d67e323dd879141807a58d42d4" translate="yes" xml:space="preserve">
          <source>Quantile</source>
          <target state="translated">Quantile</target>
        </trans-unit>
        <trans-unit id="7a08449fe902cf7a9bf3a0a5e6db58d99fb7add8" translate="yes" xml:space="preserve">
          <source>Query names or value from the Windows registry.</source>
          <target state="translated">Windows レジストリから名前または値を取得します。</target>
        </trans-unit>
        <trans-unit id="3913b3d59fa0353c58f6767e6bd8fa7855973438" translate="yes" xml:space="preserve">
          <source>Query or set color axis limits for plots.</source>
          <target state="translated">プロットの色軸の制限値を取得または設定します。</target>
        </trans-unit>
        <trans-unit id="8db410b42283a6217cb13fdbbafaa052c36e7515" translate="yes" xml:space="preserve">
          <source>Query or set options for the function &lt;code&gt;daspk&lt;/code&gt;.</source>
          <target state="translated">関数 &lt;code&gt;daspk&lt;/code&gt; のクエリまたはオプションの設定。</target>
        </trans-unit>
        <trans-unit id="9bd02b3a36a1198e76253c3ef0027342df95bd9d" translate="yes" xml:space="preserve">
          <source>Query or set options for the function &lt;code&gt;dasrt&lt;/code&gt;.</source>
          <target state="translated">関数 &lt;code&gt;dasrt&lt;/code&gt; のオプションを照会または設定します。</target>
        </trans-unit>
        <trans-unit id="9b68914e4bd5d2f1f1a3b1d57ec3a9a846b14dae" translate="yes" xml:space="preserve">
          <source>Query or set options for the function &lt;code&gt;dassl&lt;/code&gt;.</source>
          <target state="translated">関数 &lt;code&gt;dassl&lt;/code&gt; のオプションを照会または設定します。</target>
        </trans-unit>
        <trans-unit id="47d10d869d63aa1b05290621d965da21b4482dd8" translate="yes" xml:space="preserve">
          <source>Query or set options for the function &lt;code&gt;lsode&lt;/code&gt;.</source>
          <target state="translated">関数 &lt;code&gt;lsode&lt;/code&gt; のオプションを照会または設定します。</target>
        </trans-unit>
        <trans-unit id="836f622c48c4cd2a05dff1bcfeefcc3a2664731b" translate="yes" xml:space="preserve">
          <source>Query or set options for the function &lt;code&gt;quad&lt;/code&gt;.</source>
          <target state="translated">関数 &lt;code&gt;quad&lt;/code&gt; のクエリまたはオプションの設定。</target>
        </trans-unit>
        <trans-unit id="fe9c4b8ee18fefe3f1f6cde9337f1c8dce66f5e0" translate="yes" xml:space="preserve">
          <source>Query or set the character string used to prefix output produced when echoing commands is enabled.</source>
          <target state="translated">コマンドのエコー出力が有効な場合に出力されるプレフィックスに使用される文字列を問い合わせるか、設定します。</target>
        </trans-unit>
        <trans-unit id="80939c140f1ed05921299c8b0f70ebf05421740a" translate="yes" xml:space="preserve">
          <source>Query or set the current colormap.</source>
          <target state="translated">現在のカラーマップをクエリまたは設定します。</target>
        </trans-unit>
        <trans-unit id="d036740e2d775e91a6d6582551bc478fe7b70e7e" translate="yes" xml:space="preserve">
          <source>Query or set the data aspect ratio of the current axes.</source>
          <target state="translated">現在の軸のデータのアスペクト比を取得または設定します。</target>
        </trans-unit>
        <trans-unit id="7f525530484780166ed2f2ac39c4526b38a20f17" translate="yes" xml:space="preserve">
          <source>Query or set the default graphics toolkit which is assigned to new figures.</source>
          <target state="translated">新しい図形に割り当てられるデフォルトのグラフィックツールキットを問い合わせたり、設定したりします。</target>
        </trans-unit>
        <trans-unit id="36ebb2e8c620221695493d894fd4cd075cdef55c" translate="yes" xml:space="preserve">
          <source>Query or set the format string used by the command &lt;code&gt;whos&lt;/code&gt;.</source>
          <target state="translated">コマンド &lt;code&gt;whos&lt;/code&gt; で使用されるフォーマット文字列を照会または設定します。</target>
        </trans-unit>
        <trans-unit id="fe2d56c6a5dee032aabd80080c4fc5e6f93f8bab" translate="yes" xml:space="preserve">
          <source>Query or set the internal character variable that is appended to successful command-line completion attempts.</source>
          <target state="translated">成功したコマンドライン補完の試行に付加される内部文字変数をクエリまたは設定します。</target>
        </trans-unit>
        <trans-unit id="b2a56ce9646aa7eef85a0a27c47b062be87a06be" translate="yes" xml:space="preserve">
          <source>Query or set the internal flag for &lt;code&gt;subsasgn&lt;/code&gt; method call optimizations.</source>
          <target state="translated">&lt;code&gt;subsasgn&lt;/code&gt; メソッド呼び出しの最適化のために内部フラグを照会または設定します。</target>
        </trans-unit>
        <trans-unit id="b46aa447dbb07739a1d076057f49a6d796055e95" translate="yes" xml:space="preserve">
          <source>Query or set the internal limit on the number of times a function may be called recursively.</source>
          <target state="translated">関数が再帰的に呼び出される回数の内部制限を問い合わせるか設定します。</target>
        </trans-unit>
        <trans-unit id="88c49e01df14f83733aa00bc41071216f99950c2" translate="yes" xml:space="preserve">
          <source>Query or set the internal variable that controls how integer classes are converted when &lt;code&gt;java_matrix_autoconversion&lt;/code&gt; is enabled.</source>
          <target state="translated">&lt;code&gt;java_matrix_autoconversion&lt;/code&gt; が有効な場合の整数クラスの変換方法を制御する内部変数を照会または設定します。</target>
        </trans-unit>
        <trans-unit id="30f953a282997093fa15923e163f5fd53c66b2e6" translate="yes" xml:space="preserve">
          <source>Query or set the internal variable that controls whether Java arrays are automatically converted to Octave matrices.</source>
          <target state="translated">Java配列が自動的にOctave行列に変換されるかどうかを制御する内部変数を問い合わせるか設定します。</target>
        </trans-unit>
        <trans-unit id="96c2dd49d24be9c2c3ca99ff3579f6a08a0a06e4" translate="yes" xml:space="preserve">
          <source>Query or set the internal variable that controls whether Octave checks the time stamp on files each time it looks up functions defined in function files.</source>
          <target state="translated">関数ファイルで定義された関数を検索するたびに,Octaveがファイル上のタイムスタンプをチェックするかどうかを制御する内部変数を問い合わせるか,設定します。</target>
        </trans-unit>
        <trans-unit id="b8c57c981a090873521d5d1cf73ecd69fdee8d1b" translate="yes" xml:space="preserve">
          <source>Query or set the internal variable that controls whether Octave sends output to the pager as soon as it is available.</source>
          <target state="translated">Octaveが利用可能になるとすぐに出力をページャに送信するかどうかを制御する内部変数を問い合わせるか設定します。</target>
        </trans-unit>
        <trans-unit id="9967545425cee15894a47fe06ca7ad050486f041" translate="yes" xml:space="preserve">
          <source>Query or set the internal variable that controls whether Octave tries to save all current variables to the file</source>
          <target state="translated">Octaveがすべての現在の変数をファイルに保存しようとするかどうかを制御する内部変数を問い合わせるか設定します。</target>
        </trans-unit>
        <trans-unit id="689864d240f12ba603cd1aa42198548027cc6b25" translate="yes" xml:space="preserve">
          <source>Query or set the internal variable that controls whether Octave will add additional help information to the end of the output from the &lt;code&gt;help&lt;/code&gt; command and usage messages for built-in commands.</source>
          <target state="translated">Octaveが &lt;code&gt;help&lt;/code&gt; コマンドからの出力と組み込みコマンドの使用法メッセージの最後に追加のヘルプ情報を追加するかどうかを制御する内部変数を照会または設定します。</target>
        </trans-unit>
        <trans-unit id="94609243cdd708ebd54deb0239d9d2af355e82ea" translate="yes" xml:space="preserve">
          <source>Query or set the internal variable that controls whether Octave will ask for confirmation before recursively removing a directory tree.</source>
          <target state="translated">ディレクトリツリーを再帰的に削除する前にOctaveが確認を求めるかどうかを制御する内部変数を問い合わせるか設定します。</target>
        </trans-unit>
        <trans-unit id="f3027db9125958fee8de61b778cccdf0b4f75fb7" translate="yes" xml:space="preserve">
          <source>Query or set the internal variable that controls whether Octave will automatically mutate sparse matrices to full matrices to save memory.</source>
          <target state="translated">Octaveがメモリを節約するために,疎な行列を自動的に完全な行列に変異させるかどうかを制御する内部変数を問い合わせるか設定します。</target>
        </trans-unit>
        <trans-unit id="87103558753747de26ba55148d598d7293402d92" translate="yes" xml:space="preserve">
          <source>Query or set the internal variable that controls whether Octave will try to enter debugging mode when it receives an interrupt signal (typically generated with</source>
          <target state="translated">割り込み信号を受信したときにOctaveがデバッグモードに入ろうとするかどうかを制御する内部変数を問い合わせるか設定します。</target>
        </trans-unit>
        <trans-unit id="d82719b1282b847894b853b3b9ca9f0ef600cdc6" translate="yes" xml:space="preserve">
          <source>Query or set the internal variable that controls whether Octave will try to enter the debugger when a warning is encountered.</source>
          <target state="translated">警告が発生したときにOctaveがデバッガに入ろうとするかどうかを制御する内部変数を問い合わせるか設定します。</target>
        </trans-unit>
        <trans-unit id="caf0de6c4ddd91feaed6827ede7143bfe5ff8037" translate="yes" xml:space="preserve">
          <source>Query or set the internal variable that controls whether Octave will try to enter the debugger when an error is encountered.</source>
          <target state="translated">エラーが発生したときにOctaveがデバッガに入ろうとするかどうかを制御する内部変数を問い合わせるか設定します。</target>
        </trans-unit>
        <trans-unit id="d4a97b88e79d2ff2e6a0665e6dde782408d71628" translate="yes" xml:space="preserve">
          <source>Query or set the internal variable that controls whether Octave will try to ring the terminal bell before printing an error message.</source>
          <target state="translated">エラーメッセージを印刷する前にOctaveがターミナルベルを鳴らそうとするかどうかを制御する内部変数を問い合わせるか設定します。</target>
        </trans-unit>
        <trans-unit id="5823e06b143a99fe940afa09e38f520eef80936b" translate="yes" xml:space="preserve">
          <source>Query or set the internal variable that controls whether Octave will use a scaled format to print matrix values.</source>
          <target state="translated">Octaveが行列値を印刷するためにスケーリングされた形式を使用するかどうかを制御する内部変数を問い合わせるか設定します。</target>
        </trans-unit>
        <trans-unit id="c00f1fa17657b9ea3262c4df9303c06bee326ad1" translate="yes" xml:space="preserve">
          <source>Query or set the internal variable that controls whether commands entered on the command line are saved in the history file.</source>
          <target state="translated">コマンドラインで入力したコマンドを履歴ファイルに保存するかどうかを制御する内部変数を問い合わせるか設定します。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
