<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="octave">
    <body>
      <group id="octave">
        <trans-unit id="20a2adde0d428013580a70a69dfc8f97b2b514df" translate="yes" xml:space="preserve">
          <source>A cell array of the text of each match</source>
          <target state="translated">各マッチのテキストのセル配列</target>
        </trans-unit>
        <trans-unit id="1c10230c31340d160a0726bd737369f6d70896ca" translate="yes" xml:space="preserve">
          <source>A cell array of the text of each token matched</source>
          <target state="translated">一致した各トークンのテキストのセル配列</target>
        </trans-unit>
        <trans-unit id="804a4b969cf639438a5c9d63325c8db54b748f7c" translate="yes" xml:space="preserve">
          <source>A cell array with strings labeling each text field. This input is required.</source>
          <target state="translated">各テキストフィールドに文字列をラベル付けしたセル配列。この入力は必須です。</target>
        </trans-unit>
        <trans-unit id="60768aee531853bde5980abe23be0f11e87e5e55" translate="yes" xml:space="preserve">
          <source>A character indicating a plot marker to be place at each data point, or &lt;code&gt;&quot;none&quot;&lt;/code&gt;, meaning no markers should be displayed.</source>
          <target state="translated">各データポイントに配置するプロットマーカーを示す文字、または &lt;code&gt;&quot;none&quot;&lt;/code&gt; 。マーカーを表示しないことを意味します。</target>
        </trans-unit>
        <trans-unit id="c6edc281ed7a767d350675192ea7f0f5bdaff890" translate="yes" xml:space="preserve">
          <source>A character string in Octave consists of a sequence of characters enclosed in either double-quote or single-quote marks. Internally, Octave currently stores strings as matrices of characters. All the indexing operations that work for matrix objects also work for strings.</source>
          <target state="translated">Octaveにおける文字列は,ダブルクオートまたはシングルクオートで囲まれた文字列で構成されています。内部的には,Octaveは現在文字列を文字の行列として格納しています。行列オブジェクトに対して機能するすべてのインデックス操作は,文字列に対しても機能します。</target>
        </trans-unit>
        <trans-unit id="454b211075f26c520aab980df4383d67fa1baa3b" translate="yes" xml:space="preserve">
          <source>A character string in Octave is just a special &lt;code&gt;Array&lt;/code&gt; class. Consider the example:</source>
          <target state="translated">Octaveの文字列は、特別な &lt;code&gt;Array&lt;/code&gt; クラスです。例を考えてみましょう：</target>
        </trans-unit>
        <trans-unit id="55539bfd5bcc005999a972bb7993264b7c1eaac9" translate="yes" xml:space="preserve">
          <source>A character that specifies the conversion to be applied.</source>
          <target state="translated">適用する変換を指定する文字。</target>
        </trans-unit>
        <trans-unit id="ab08ef09ce125040b510336f563f78fbbf7ff430" translate="yes" xml:space="preserve">
          <source>A class may be a child of more than one class (see &lt;a href=&quot;built_002din-data-types#XREFclass&quot;&gt;class&lt;/a&gt;), and inheritance may be nested. There is no limitation to the number of parents or the level of nesting other than memory or other physical issues.</source>
          <target state="translated">クラスは複数のクラスの子である場合があり（&lt;a href=&quot;built_002din-data-types#XREFclass&quot;&gt;classを&lt;/a&gt;参照）、継承がネストされる場合があります。メモリやその他の物理的な問題以外に、親の数やネストのレベルに制限はありません。</target>
        </trans-unit>
        <trans-unit id="a5b00e0d427b225dd79290c293d1cb5de1996835" translate="yes" xml:space="preserve">
          <source>A clear understanding might be had by considering an example of how the above applies to an example matrix. Consider the matrix</source>
          <target state="translated">上記がどのように行列の例に当てはまるかの例を考えることで、明確な理解が得られるかもしれません。行列を考えてみましょう</target>
        </trans-unit>
        <trans-unit id="b0bd76e61dd3e6e3cdf1dddfc8350238d72efdb7" translate="yes" xml:space="preserve">
          <source>A colon (&amp;lsquo;</source>
          <target state="translated">コロン（ '</target>
        </trans-unit>
        <trans-unit id="b7c26c8ed7bedbd3585cde8eb0b3f20655c38a74" translate="yes" xml:space="preserve">
          <source>A color in HSV space is represented by hue, saturation and value (brightness) levels in a cylindrical coordinate system. Hue is the azimuth and describes the dominant color. Saturation is the radial distance and gives the amount of hue mixed into the color. Value is the height and is the amount of light in the color.</source>
          <target state="translated">HSV 空間における色は色相・彩度・値(明度)レベルで円筒座標系上で表現されます。色相は方位であり、 支配的な色を表します。彩度は半径方向の距離であり、 色に混ざった色相の量を表します。値は高さであり、色に含まれる光の量を表します。</target>
        </trans-unit>
        <trans-unit id="0071f2555301f34a4291008ac6c84b4aa495f16a" translate="yes" xml:space="preserve">
          <source>A color in the RGB space consists of red, green, and blue intensities.</source>
          <target state="translated">RGB空間の色は、赤、緑、青の濃さで構成されています。</target>
        </trans-unit>
        <trans-unit id="55ef44c20401ef330e2bef64ba9e61d49de7fb3c" translate="yes" xml:space="preserve">
          <source>A color property. &lt;var&gt;arg&lt;/var&gt; contains the default color value. When no default color is given, the property is set to black. An optional second string argument may be given to specify an additional set of accepted string values (like a radio property).</source>
          <target state="translated">色のプロパティ。 &lt;var&gt;arg&lt;/var&gt; にはデフォルトのカラー値が含まれています。デフォルトの色が指定されていない場合、プロパティは黒に設定されます。オプションの2番目の文字列引数を指定して、追加の受け入れられる文字列値のセットを指定できます（ラジオプロパティなど）。</target>
        </trans-unit>
        <trans-unit id="681cdf5941055c04944bef031b35f21e027075fe" translate="yes" xml:space="preserve">
          <source>A color value setting the text color for this menu entry.</source>
          <target state="translated">このメニュー項目のテキストの色を設定する色の値。</target>
        </trans-unit>
        <trans-unit id="e117aeda74dc853cf9096341ace527e06b1086ee" translate="yes" xml:space="preserve">
          <source>A colorbar displays the current colormap along with numerical rulings so that the color scale can be interpreted.</source>
          <target state="translated">カラーバーは、カラースケールを解釈できるように、現在のカラーマップを数値の罫線とともに表示します。</target>
        </trans-unit>
        <trans-unit id="99e38ebc894dc9f178086caddb5e36c4dbbfc049" translate="yes" xml:space="preserve">
          <source>A colormap is a real matrix, of class single or double, with 3 columns. Each row represents a single color. The 3 columns contain red, green, and blue intensities respectively.</source>
          <target state="translated">colormapは、3列のシングルまたはダブルクラスの実数行列です。各行は1つの色を表します。3つの列にはそれぞれ赤、緑、青の強度が含まれています。</target>
        </trans-unit>
        <trans-unit id="63e76adadfa4176fdb27d7c3b89f77b12d1c091a" translate="yes" xml:space="preserve">
          <source>A colour scheme for the display of astronomical intensity images</source>
          <target state="translated">天体強度画像を表示するための配色</target>
        </trans-unit>
        <trans-unit id="4a90888cae8288c082dc80e77ea02b777c10001c" translate="yes" xml:space="preserve">
          <source>A column array containing the objective function coefficients.</source>
          <target state="translated">対物関数の係数を含む列の配列。</target>
        </trans-unit>
        <trans-unit id="c670cbfad4c767d752687c65b6ea608deb71e87b" translate="yes" xml:space="preserve">
          <source>A column array containing the right-hand side value for each constraint in the constraint matrix.</source>
          <target state="translated">制約行列の各制約の右辺の値を含む列配列.</target>
        </trans-unit>
        <trans-unit id="295af7d6cafd4ae5305291a8c9c49e118f04621c" translate="yes" xml:space="preserve">
          <source>A column array containing the types of the variables.</source>
          <target state="translated">変数の型を含むカラム配列。</target>
        </trans-unit>
        <trans-unit id="2ee64cd36a1be89b46d893bdebf4a8fa151fca68" translate="yes" xml:space="preserve">
          <source>A column vector is a 2-D array for which &lt;code&gt;size (&lt;var&gt;x&lt;/var&gt;)&lt;/code&gt; returns &lt;code&gt;[N,&amp;nbsp;1]&lt;/code&gt; with non-negative N.</source>
          <target state="translated">列ベクトルは、 &lt;code&gt;size (&lt;var&gt;x&lt;/var&gt;)&lt;/code&gt; が負でない &lt;code&gt;[N,&amp;nbsp;1]&lt;/code&gt; を返す2次元配列です。</target>
        </trans-unit>
        <trans-unit id="1688403c905798b3c11fdc1a4de1bb0d3aa8893b" translate="yes" xml:space="preserve">
          <source>A common application for sparse matrices is in the solution of Finite Element Models. Finite element models allow numerical solution of partial differential equations that do not have closed form solutions, typically because of the complex shape of the domain.</source>
          <target state="translated">疎な行列の一般的なアプリケーションは、有限要素モデルの解法です。有限要素モデルを使用すると、閉じた形の解を持たない偏微分方程式を数値的に解くことができますが、これは通常、ドメインの形状が複雑であるためです。</target>
        </trans-unit>
        <trans-unit id="db6a0b3e577acb16b6e2b4641575933fc96c321b" translate="yes" xml:space="preserve">
          <source>A common example of when it does become necessary to convert ranges into vectors occurs when they appear within a vector (i.e., inside square brackets). For instance, whereas</source>
          <target state="translated">範囲をベクトルに変換する必要がある場合の一般的な例としては、範囲がベクトル内に現れる場合(すなわち、角括弧内に現れる場合)があります。例えば</target>
        </trans-unit>
        <trans-unit id="035924cb9dd2edcef395fdcbb9d8144f2f1ae083" translate="yes" xml:space="preserve">
          <source>A common text for engineering courses is G. Strang,</source>
          <target state="translated">工学系の授業でよく使われるテキストは、G.Strangです。</target>
        </trans-unit>
        <trans-unit id="941a2144b9cf79bd9e39fcb22caf03af4d8df4df" translate="yes" xml:space="preserve">
          <source>A common use of &lt;code&gt;mlock&lt;/code&gt; is to prevent persistent variables from being removed from memory, as the following example shows:</source>
          <target state="translated">&lt;code&gt;mlock&lt;/code&gt; の一般的な用途は、次の例に示すように、永続変数がメモリから削除されないようにすることです。</target>
        </trans-unit>
        <trans-unit id="12460cbec28d2114582b2bf40cffec65ae687b22" translate="yes" xml:space="preserve">
          <source>A compatibility wrapper function that will choose between &lt;code&gt;quadv&lt;/code&gt; and &lt;code&gt;quadgk&lt;/code&gt; depending on the integrand and options chosen.</source>
          <target state="translated">選択した被積分関数とオプションに応じて &lt;code&gt;quadv&lt;/code&gt; と &lt;code&gt;quadgk&lt;/code&gt; の間で選択する互換性ラッパー関数。</target>
        </trans-unit>
        <trans-unit id="b2756815221829e67112a55f6ac1a94555374fb9" translate="yes" xml:space="preserve">
          <source>A complete description of the command line editing capability is given in this manual, see &lt;a href=&quot;command-line-editing#Command-Line-Editing&quot;&gt;Command Line Editing&lt;/a&gt;.</source>
          <target state="translated">コマンドライン編集機能の完全な説明は、このマニュアルに記載されています。&lt;a href=&quot;command-line-editing#Command-Line-Editing&quot;&gt;コマンドライン編集を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="ee9a34a24a2aab6ef2af0e58d918b103eff51e5a" translate="yes" xml:space="preserve">
          <source>A complete example showing the capabilities of text printing using the</source>
          <target state="translated">を使用したテキスト印刷の機能を示す完全な例です。</target>
        </trans-unit>
        <trans-unit id="ae032f00f218a6e7a6e660d5e2cfa65046112f61" translate="yes" xml:space="preserve">
          <source>A complete input file that will reproduce the bug.</source>
          <target state="translated">バグを再現する完全な入力ファイル。</target>
        </trans-unit>
        <trans-unit id="dbf0ad9336807af39f4067da1d30865c58a062ef" translate="yes" xml:space="preserve">
          <source>A complete list of any modifications you have made to the interpreter source.</source>
          <target state="translated">インタープリタのソースに変更を加えた場合の完全なリスト。</target>
        </trans-unit>
        <trans-unit id="b402ea3a353c36ccbf82dd88a9b4048cc948b617" translate="yes" xml:space="preserve">
          <source>A complex array class defined in</source>
          <target state="translated">で定義されている複合配列クラス</target>
        </trans-unit>
        <trans-unit id="942861a100c0a359877a2a51d32ac80959118251" translate="yes" xml:space="preserve">
          <source>A complex matrix class defined in</source>
          <target state="translated">で定義されている複素行列クラス</target>
        </trans-unit>
        <trans-unit id="03bdafc4f6f4120fd03b1522123f0b323b4cb8f9" translate="yes" xml:space="preserve">
          <source>A complex sparse matrix class</source>
          <target state="translated">複素疎な行列クラス</target>
        </trans-unit>
        <trans-unit id="abb63d9fc1386ec4a2bdd078f60b0bba93573864" translate="yes" xml:space="preserve">
          <source>A computational procedure for incomplete gamma functions</source>
          <target state="translated">不完全ガンマ関数の計算手順</target>
        </trans-unit>
        <trans-unit id="2480cd5e57d5abd30562a0898aa625d2fe1ad48f" translate="yes" xml:space="preserve">
          <source>A consequence is that &amp;ldquo;pulling back&amp;rdquo; on the up vector does not pitch the camera view (as that would require changing the target). Setting the up vector is thus typically used only to roll the camera. A more intuitive command for this purpose is &lt;a href=&quot;#XREFcamroll&quot;&gt;camroll&lt;/a&gt;.</source>
          <target state="translated">結果として、アップベクトルを「引き戻す」と、カメラビューがピッチングされません（ターゲットを変更する必要があるため）。したがって、アップベクトルの設定は、通常、カメラを回転させるためにのみ使用されます。この目的のためのより直感的なコマンドは&lt;a href=&quot;#XREFcamroll&quot;&gt;camroll&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="35cffa37fefe8d6e3ef4e2be483a05804584af43" translate="yes" xml:space="preserve">
          <source>A consequence is that &amp;ldquo;pulling back&amp;rdquo; on the up vector does not pitch the camera view (as that would require changing the target). Setting the up vector is thus typically used only to roll the camera. A more intuitive command for this purpose is see &lt;a href=&quot;#XREFcamroll&quot;&gt;camroll&lt;/a&gt;.</source>
          <target state="translated">結果として、上向きベクトルを「引き戻す」と、カメラのビューがピッチングされなくなります（ターゲットを変更する必要があるため）。したがって、アップベクトルの設定は通常、カメラを回転させるためにのみ使用されます。この目的のためのより直感的なコマンドは&lt;a href=&quot;#XREFcamroll&quot;&gt;camrollを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="3b1d5b2fcafe6ce128a7bb71d7101fcdab50f3dd" translate="yes" xml:space="preserve">
          <source>A constant spacing between two points can be provided by the &lt;var&gt;s&lt;/var&gt; parameter. If &lt;var&gt;s&lt;/var&gt; is a scalar, it is assumed to be the spacing for all dimensions. Otherwise, separate values of the spacing can be supplied by the &lt;var&gt;x&lt;/var&gt;, &amp;hellip; arguments. Scalar values specify an equidistant spacing. Vector values for the &lt;var&gt;x&lt;/var&gt;, &amp;hellip; arguments specify the coordinate for that dimension. The length must match their respective dimension of &lt;var&gt;m&lt;/var&gt;.</source>
          <target state="translated">2つのポイント間の一定の間隔は、 &lt;var&gt;s&lt;/var&gt; パラメータで指定できます。 &lt;var&gt;s&lt;/var&gt; がスカラーの場合、すべての次元の間隔と見なされます。それ以外の場合は、間隔の個別の値を &lt;var&gt;x&lt;/var&gt; 、&amp;hellip;引数で指定できます。スカラー値は、等間隔の間隔を指定します。 &lt;var&gt;x&lt;/var&gt; 、&amp;hellip;引数のベクトル値は、その次元の座標を指定します。長さは、それぞれの &lt;var&gt;m&lt;/var&gt; の次元と一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="f5a15400c0317900c62a4253f589df6fa96abee1" translate="yes" xml:space="preserve">
          <source>A continuous variable.</source>
          <target state="translated">連続変数です。</target>
        </trans-unit>
        <trans-unit id="b64015e364344274f8cc02f91e54e4ad638fe182" translate="yes" xml:space="preserve">
          <source>A dash-dot line.</source>
          <target state="translated">ダッシュドットのライン。</target>
        </trans-unit>
        <trans-unit id="c39bac862d481be037715714bb5001566351a675" translate="yes" xml:space="preserve">
          <source>A data (matrix) property. &lt;var&gt;arg&lt;/var&gt; contains the default data value. When no default value is given, the data is initialized to the empty matrix.</source>
          <target state="translated">データ（行列）プロパティ。 &lt;var&gt;arg&lt;/var&gt; にはデフォルトのデータ値が含まれています。デフォルト値が指定されていない場合、データは空の行列に初期化されます。</target>
        </trans-unit>
        <trans-unit id="2b9acd744f4c58a34c5645ff2443d70f7e284e42" translate="yes" xml:space="preserve">
          <source>A data structure containing the following fields:</source>
          <target state="translated">以下のフィールドを含むデータ構造体。</target>
        </trans-unit>
        <trans-unit id="31dd06d1955ff5aae1285ddded19bd64c12ac500" translate="yes" xml:space="preserve">
          <source>A date vector is a row vector with six members, representing the year, month, day, hour, minute, and seconds respectively.</source>
          <target state="translated">日付ベクトルは、年、月、日、時、分、秒をそれぞれ表す6つのメンバを持つ行ベクトルです。</target>
        </trans-unit>
        <trans-unit id="ba23eed9640232b83c71d3f4c038396b9054bf80" translate="yes" xml:space="preserve">
          <source>A description of the envelope of the bug.</source>
          <target state="translated">バグのエンベロープの説明。</target>
        </trans-unit>
        <trans-unit id="93bbcb3bdb9e968249cd8ad1bd6b1d446a8657f2" translate="yes" xml:space="preserve">
          <source>A description of what behavior you observe that you believe is incorrect. For example, &quot;The interpreter gets a fatal signal,&quot; or, &quot;The output produced at line 208 is incorrect.&quot;</source>
          <target state="translated">どのような動作を観察して、正しくないと思うかを説明します。例えば、&quot;インタプリタが致命的なシグナルを取得した&quot;、&quot;208 行目で生成された出力が正しくない&quot; などです。</target>
        </trans-unit>
        <trans-unit id="c72c5903ff9532d253711f6aafe52e9bab4ac07b" translate="yes" xml:space="preserve">
          <source>A diagonal matrix can also be transposed or conjugate-transposed, giving the expected result. Extracting a leading submatrix of a diagonal matrix, i.e., &lt;code&gt;D(1:m,1:n)&lt;/code&gt;, will produce a diagonal matrix, other indexing expressions will implicitly convert to full matrix.</source>
          <target state="translated">対角行列は転置または共役転置することもでき、期待される結果が得られます。対角行列の先頭のサブ行列、つまり &lt;code&gt;D(1:m,1:n)&lt;/code&gt; 抽出すると、対角行列が生成され、他のインデックス式は暗黙的に完全行列に変換されます。</target>
        </trans-unit>
        <trans-unit id="5dbda6360c640d99bd6d7b5644dc9f5ee7efcd96" translate="yes" xml:space="preserve">
          <source>A diagonal matrix is defined as a matrix that has zero entries outside the main diagonal; that is, &lt;code&gt;D(i,j) == 0&lt;/code&gt; if &lt;code&gt;i != j&lt;/code&gt;. Most often, square diagonal matrices are considered; however, the definition can equally be applied to non-square matrices, in which case we usually speak of a rectangular diagonal matrix.</source>
          <target state="translated">対角行列は、主対角の外側のエントリがゼロの行列として定義されます。つまり、 &lt;code&gt;i != j&lt;/code&gt; 場合、 &lt;code&gt;D(i,j) == 0&lt;/code&gt; です。ほとんどの場合、正方対角行列が考慮されます。ただし、この定義は非正方行列にも同様に適用できます。その場合、通常、長方形の対角行列について説明します。</target>
        </trans-unit>
        <trans-unit id="cfca3ce13bc9362b43c32a9099b8825c43b2f2bd" translate="yes" xml:space="preserve">
          <source>A difference between the oct-file interface to structures and the mex-file version is that the functions to operate on structures in mex-files directly include an &lt;code&gt;index&lt;/code&gt; over the elements of the arrays of elements per &lt;code&gt;field&lt;/code&gt;; Whereas, the oct-file structure includes a Cell Array per field of the structure.</source>
          <target state="translated">構造体へのoct-fileインターフェイスとmex-fileバージョンの違いは、mex-filesの構造体を操作する関数には、 &lt;code&gt;field&lt;/code&gt; ごとの要素の配列の要素に対する &lt;code&gt;index&lt;/code&gt; 直接含まれていることです。一方、octファイル構造には、構造のフィールドごとにセル配列が含まれます。</target>
        </trans-unit>
        <trans-unit id="37d02b4ac8a4c10741808a258ba6eb73a9256ce0" translate="yes" xml:space="preserve">
          <source>A directory name or path name</source>
          <target state="translated">ディレクトリ名またはパス名</target>
        </trans-unit>
        <trans-unit id="b9eb4d05d4e071a7937cef862c44c7090eba678c" translate="yes" xml:space="preserve">
          <source>A documentation cache is generated for all functions in &lt;var&gt;directory&lt;/var&gt; which may be a single string or a cell array of strings. The cache is used to speed up the function &lt;code&gt;lookfor&lt;/code&gt;.</source>
          <target state="translated">ドキュメントキャッシュは、単一の文字列または文字列のセル配列である &lt;var&gt;directory&lt;/var&gt; 内のすべての関数に対して生成されます。キャッシュは、関数 &lt;code&gt;lookfor&lt;/code&gt; を高速化するために使用されます。</target>
        </trans-unit>
        <trans-unit id="2db886fd458e14ab9f4f594f252e60c06844a984" translate="yes" xml:space="preserve">
          <source>A double precision array class defined in</source>
          <target state="translated">で定義されている倍精度配列クラス</target>
        </trans-unit>
        <trans-unit id="a5d4b80359110471e7dab263d7d4684d6538e500" translate="yes" xml:space="preserve">
          <source>A double precision matrix class defined in</source>
          <target state="translated">で定義されている倍精度の行列クラス</target>
        </trans-unit>
        <trans-unit id="801fe23c4c8b1c014fcb2fdc2a32bfd8dbbd2c77" translate="yes" xml:space="preserve">
          <source>A double precision sparse matrix class</source>
          <target state="translated">倍精度の疎な行列クラス</target>
        </trans-unit>
        <trans-unit id="bd5395f26dc70404075523a2c5f28f31b7dccd79" translate="yes" xml:space="preserve">
          <source>A figure window.</source>
          <target state="translated">図のウィンドウ。</target>
        </trans-unit>
        <trans-unit id="f5426a4ce5b762c7a8f0e15d7381d4ba834c06ff" translate="yes" xml:space="preserve">
          <source>A filename with spaces.txt</source>
          <target state="translated">ファイル名に spaces.txt を指定した場合</target>
        </trans-unit>
        <trans-unit id="68c95ed3dfd85fe88904aa31ec2dc7b64ce95803" translate="yes" xml:space="preserve">
          <source>A filled polygon, currently limited to two dimensions.</source>
          <target state="translated">塗りつぶされた多角形で、現在は二次元に制限されています。</target>
        </trans-unit>
        <trans-unit id="054b6597c06a3e64f093740eaaddb84177f9bb63" translate="yes" xml:space="preserve">
          <source>A fixed set of functions are &lt;em&gt;built-in&lt;/em&gt;, which means they are available in every Octave program. The &lt;code&gt;sqrt&lt;/code&gt; function is one of these. In addition, you can define your own functions. See &lt;a href=&quot;functions-and-scripts#Functions-and-Scripts&quot;&gt;Functions and Scripts&lt;/a&gt;, for information about how to do this.</source>
          <target state="translated">関数の固定セットが&lt;em&gt;組み込まれ&lt;/em&gt;ています。つまり、すべてのOctaveプログラムで使用できます。 &lt;code&gt;sqrt&lt;/code&gt; 機能は、これらのいずれかです。さらに、独自の関数を定義できます。これを行う方法については、&lt;a href=&quot;functions-and-scripts#Functions-and-Scripts&quot;&gt;関数とスクリプトを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="686d6532b613192ff6f34f402ab65568b8de6e7e" translate="yes" xml:space="preserve">
          <source>A free (unbounded) constraint (the constraint is ignored).</source>
          <target state="translated">自由な(拘束されていない)制約(制約は無視される)。</target>
        </trans-unit>
        <trans-unit id="8ceb4c40643cf8e2d8832e436bbab55515b95210" translate="yes" xml:space="preserve">
          <source>A full format string is:</source>
          <target state="translated">フルフォーマットの文字列です。</target>
        </trans-unit>
        <trans-unit id="b8f3304cc1f77c43c57e3fe820db2694782e8f15" translate="yes" xml:space="preserve">
          <source>A function file may contain secondary functions called &lt;em&gt;subfunctions&lt;/em&gt;. These secondary functions are only visible to the other functions in the same function file. For example, a file</source>
          <target state="translated">関数ファイルには、&lt;em&gt;サブ&lt;/em&gt;関数と呼ばれる二次関数が含まれる場合があります。これらの2次関数は、同じ関数ファイル内の他の関数にのみ表示されます。たとえば、ファイル</target>
        </trans-unit>
        <trans-unit id="0ed122a887a24a515b17391f1a46a31f8869f4e4" translate="yes" xml:space="preserve">
          <source>A function handle is a pointer to another function and is defined with the syntax</source>
          <target state="translated">関数ハンドルは別の関数へのポインタで、構文</target>
        </trans-unit>
        <trans-unit id="ab8e2ddd3b09e4f37d34d49984fa6a35df38938e" translate="yes" xml:space="preserve">
          <source>A function handle to confirm if a file is of the specified format.</source>
          <target state="translated">指定した形式のファイルかどうかを確認するための関数ハンドルです。</target>
        </trans-unit>
        <trans-unit id="364404b55551df46478307eeabff830759b647c7" translate="yes" xml:space="preserve">
          <source>A function handle to obtain image information of the specified format.</source>
          <target state="translated">指定されたフォーマットの画像情報を取得するための関数ハンドル。</target>
        </trans-unit>
        <trans-unit id="24ebf279aced20dda8b5424c6d7338b7c87a0140" translate="yes" xml:space="preserve">
          <source>A function handle to open files the specified format.</source>
          <target state="translated">指定した形式のファイルを開くための関数ハンドルです。</target>
        </trans-unit>
        <trans-unit id="e62a153b1558dc304e583a7dcb3dc3745c3a628a" translate="yes" xml:space="preserve">
          <source>A function handle to write if a file is of the specified format.</source>
          <target state="translated">指定した形式のファイルであるかどうかを書き込むための関数ハンドル。</target>
        </trans-unit>
        <trans-unit id="5f0a0d3602a15b2207a0cd98cc59a8c585c757b6" translate="yes" xml:space="preserve">
          <source>A function may be abstracted and referenced via a function handle acquired using the special operator &amp;lsquo;</source>
          <target state="translated">関数は、特殊な演算子を使用して取得した関数ハンドルを介して抽象化および参照できます '</target>
        </trans-unit>
        <trans-unit id="f3cad8adcf5d78ef02a7d3a21f9e080af6be1ca6" translate="yes" xml:space="preserve">
          <source>A function much similar to &lt;code&gt;fputs&lt;/code&gt; is available for writing data to the screen. The &lt;code&gt;puts&lt;/code&gt; function works just like &lt;code&gt;fputs&lt;/code&gt; except it doesn&amp;rsquo;t take a file pointer as its input.</source>
          <target state="translated">画面にデータを書き込むために、 &lt;code&gt;fputs&lt;/code&gt; によく似た関数を使用できます。 &lt;code&gt;puts&lt;/code&gt; 同じような作品に機能 &lt;code&gt;fputs&lt;/code&gt; を、その入力としてファイルポインタを取らない点が異なります。</target>
        </trans-unit>
        <trans-unit id="582e025475f6a5d02a75a22ce4c469cc52a54312" translate="yes" xml:space="preserve">
          <source>A further constraint on the sparse matrix storage used by Octave is that all elements in the rows are stored in increasing order of their row index, which makes certain operations faster. However, it imposes the need to sort the elements on the creation of sparse matrices. Having disordered elements is potentially an advantage in that it makes operations such as concatenating two sparse matrices together easier and faster, however it adds complexity and speed problems elsewhere.</source>
          <target state="translated">Octaveによって使用される疎な行列の記憶に関するさらなる制約は,行内のすべての要素がその行のインデッ クスの高い順に記憶されることであり,これはある種の操作を高速化します。しかし,これは,疎な行列の作成時に要素をソートする必要性を課しています。無秩序な要素を持つことは,2つの疎な行列を連結するなどの操作をより簡単かつ高速にするという点で,潜在的な利点がありますが,他の場所では複雑さと速度の問題が追加されます。</target>
        </trans-unit>
        <trans-unit id="e13894eaead38d53d6f36de386b8f38a0e5f74b6" translate="yes" xml:space="preserve">
          <source>A general recommendation for users unfamiliar with these techniques is to use the function &lt;code&gt;repmat&lt;/code&gt; for replicating smaller arrays into bigger ones, which uses such tricks.</source>
          <target state="translated">これらの手法に慣れていないユーザーに対する一般的な推奨事項は、関数 &lt;code&gt;repmat&lt;/code&gt; を使用して、小さい配列を大きい配列に複製し、そのようなトリックを使用することです。</target>
        </trans-unit>
        <trans-unit id="0dcec2ca4569b2a4e18469d3dfaa691c89b82d65" translate="yes" xml:space="preserve">
          <source>A generalization of the function &lt;code&gt;diag&lt;/code&gt;.</source>
          <target state="translated">関数 &lt;code&gt;diag&lt;/code&gt; の一般化。</target>
        </trans-unit>
        <trans-unit id="3dbee173e332e5c99b2a3a1328a55f5396b45190" translate="yes" xml:space="preserve">
          <source>A global installation (package available to all users) is forced, even if the user doesn&amp;rsquo;t normally have system privileges.</source>
          <target state="translated">ユーザーに通常システム権限がない場合でも、グローバルインストール（すべてのユーザーが利用できるパッケージ）が強制されます。</target>
        </trans-unit>
        <trans-unit id="19161f9604f1d61305ac7f62d8b531f0231a2100" translate="yes" xml:space="preserve">
          <source>A global variable may only be initialized once in a &lt;code&gt;global&lt;/code&gt; statement. For example, after executing the following code</source>
          <target state="translated">グローバル変数は、 &lt;code&gt;global&lt;/code&gt; ステートメントで一度だけ初期化できます。たとえば、次のコードを実行した後</target>
        </trans-unit>
        <trans-unit id="60dd6403b95057f8a4c43a9bfa01f90e73080ed2" translate="yes" xml:space="preserve">
          <source>A handle property. This kind of property holds the handle of a graphics object. &lt;var&gt;arg&lt;/var&gt; contains the default handle value. When no default value is given, the property is initialized to the empty matrix.</source>
          <target state="translated">ハンドルプロパティ。この種類のプロパティは、グラフィックスオブジェクトのハンドルを保持します。 &lt;var&gt;arg&lt;/var&gt; には、デフォルトのハンドル値が含まれています。デフォルト値が指定されていない場合、プロパティは空の行列に初期化されます。</target>
        </trans-unit>
        <trans-unit id="27d728422847dc3ad34dcaed93aaebf774cfa448" translate="yes" xml:space="preserve">
          <source>A legend is implemented as an additional axes object with the &lt;code&gt;tag&lt;/code&gt; property set to &lt;code&gt;&quot;legend&quot;&lt;/code&gt;. Properties of the legend object may be manipulated directly by using &lt;code&gt;set&lt;/code&gt;.</source>
          <target state="translated">凡例は、 &lt;code&gt;tag&lt;/code&gt; プロパティが &lt;code&gt;&quot;legend&quot;&lt;/code&gt; に設定された追加のAxesオブジェクトとして実装されます。凡例オブジェクトのプロパティは、 &lt;code&gt;set&lt;/code&gt; を使用して直接操作できます。</target>
        </trans-unit>
        <trans-unit id="0975e6d34467e02bd2ab618eb1bc363017b71293" translate="yes" xml:space="preserve">
          <source>A light object has the following properties which alter the appearance of the plot.</source>
          <target state="translated">ライトオブジェクトは、プロットの外観を変化させる以下の特性を持っています。</target>
        </trans-unit>
        <trans-unit id="a1140b71d332685184ec8f6ba1bd89e6364edc19" translate="yes" xml:space="preserve">
          <source>A light object used for lighting effects on patches and surfaces.</source>
          <target state="translated">パッチや表面の照明効果に使用されるライトオブジェクト。</target>
        </trans-unit>
        <trans-unit id="5d4a394ddc07084f1a810731b239ff11b84d8201" translate="yes" xml:space="preserve">
          <source>A line in two or three dimensions.</source>
          <target state="translated">2次元または3次元の線。</target>
        </trans-unit>
        <trans-unit id="81e453d39f45cba6dab10b5c9a2efcd9f9f37519" translate="yes" xml:space="preserve">
          <source>A link starting with &amp;lsquo;</source>
          <target state="translated">'で始まるリンク</target>
        </trans-unit>
        <trans-unit id="a23de715efb48a1650ea08a445b7572ec30627c1" translate="yes" xml:space="preserve">
          <source>A list of default values to place in each text field. It must be a cell array of strings with the same size as &lt;var&gt;prompt&lt;/var&gt;.</source>
          <target state="translated">各テキストフィールドに配置するデフォルト値のリスト。これは、 &lt;var&gt;prompt&lt;/var&gt; と同じサイズの文字列のセル配列でなければなりません。</target>
        </trans-unit>
        <trans-unit id="237eee3248f440f14e359f0c718126f5449202ad" translate="yes" xml:space="preserve">
          <source>A list of graphic handles can also be passed as the first argument. In this case, the properties of these handles and all child &lt;code&gt;patch&lt;/code&gt; and &lt;code&gt;surface&lt;/code&gt; objects will be updated.</source>
          <target state="translated">グラフィックハンドルのリストを最初の引数として渡すこともできます。この場合、これらのハンドルとすべての子 &lt;code&gt;patch&lt;/code&gt; および &lt;code&gt;surface&lt;/code&gt; オブジェクトのプロパティが更新されます。</target>
        </trans-unit>
        <trans-unit id="aaf98d776d983431ce711c89c1cdb67f92bfb207" translate="yes" xml:space="preserve">
          <source>A list of ideas for future enhancements is distributed with Octave. See the file</source>
          <target state="translated">将来の拡張のためのアイデアのリストがOctaveと一緒に配布されています。ファイルを参照してください。</target>
        </trans-unit>
        <trans-unit id="355f66d6e206e944e255ab0441e43c187b7dc600" translate="yes" xml:space="preserve">
          <source>A list of other Octave packages that this package depends on. This can include dependencies on particular versions, with a format</source>
          <target state="translated">このパッケージが依存する他のOctaveパッケージのリスト。これは、特定のバージョンへの依存関係を含むことができます。</target>
        </trans-unit>
        <trans-unit id="438148b2faed871538a1b8cc93519c64df6563f6" translate="yes" xml:space="preserve">
          <source>A list of the basic &lt;code&gt;Matrix&lt;/code&gt; and &lt;code&gt;Array&lt;/code&gt; types, the methods to extract these from an &lt;code&gt;octave_value&lt;/code&gt;, and the associated header file is listed below.</source>
          <target state="translated">基本的な &lt;code&gt;Matrix&lt;/code&gt; および &lt;code&gt;Array&lt;/code&gt; タイプのリスト、 &lt;code&gt;octave_value&lt;/code&gt; からこれらを抽出するメソッド、および関連するヘッダーファイルを以下に示します。</target>
        </trans-unit>
        <trans-unit id="273a87f975fe7ab5d3fd0095e893471231d94f6f" translate="yes" xml:space="preserve">
          <source>A local installation (package available only to current user) is forced, even if the user has system privileges.</source>
          <target state="translated">ユーザーがシステム権限を持っていても、ローカルインストール(現在のユーザーのみが利用可能なパッケージ)が強制的に行われます。</target>
        </trans-unit>
        <trans-unit id="84384e9e91a9afc956d6134a6ea8fa6aa3b88f58" translate="yes" xml:space="preserve">
          <source>A long description of the file format.</source>
          <target state="translated">ファイル形式の長い説明。</target>
        </trans-unit>
        <trans-unit id="fb3cbaf97d8fc4567b42ae741142ffc40785adab" translate="yes" xml:space="preserve">
          <source>A lower triangular matrix has nonzero entries only on the main diagonal and below.</source>
          <target state="translated">下位三角行列は、主対角線上とその下にのみ非ゼロのエントリを持つ。</target>
        </trans-unit>
        <trans-unit id="a08d1659acd8b181d2f9942666ae5232f802c11a" translate="yes" xml:space="preserve">
          <source>A magic square is an arrangement of the integers &lt;code&gt;1:n^2&lt;/code&gt; such that the row sums, column sums, and diagonal sums are all equal to the same value.</source>
          <target state="translated">魔方陣とは、行の合計、列の合計、および対角の合計がすべて同じ値になるような整数 &lt;code&gt;1:n^2&lt;/code&gt; 配置です。</target>
        </trans-unit>
        <trans-unit id="880abe1e4b24a17f0236bb90192357dd17501aa2" translate="yes" xml:space="preserve">
          <source>A marker is plotted at each point defined by the coordinates in the vectors &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt;.</source>
          <target state="translated">マーカーは、ベクトル &lt;var&gt;x&lt;/var&gt; と &lt;var&gt;y&lt;/var&gt; の座標によって定義される各点にプロットされます。</target>
        </trans-unit>
        <trans-unit id="d3997dd6f656e40e3ba67b87d9a39ecb521016c8" translate="yes" xml:space="preserve">
          <source>A marker is plotted at each point defined by the coordinates in the vectors &lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;, and &lt;var&gt;z&lt;/var&gt;.</source>
          <target state="translated">マーカーは、ベクトル &lt;var&gt;x&lt;/var&gt; 、 &lt;var&gt;y&lt;/var&gt; 、 &lt;var&gt;z&lt;/var&gt; の座標によって定義される各点にプロットされます。</target>
        </trans-unit>
        <trans-unit id="876475c07c00dc7cd4ed839842e43be39fdcfa46" translate="yes" xml:space="preserve">
          <source>A matrix containing the RGB color map for the current axes.</source>
          <target state="translated">現在の軸のRGBカラーマップを含む行列。</target>
        </trans-unit>
        <trans-unit id="876edf03a06d0eabd3dd0306688bac1841eaf4f5" translate="yes" xml:space="preserve">
          <source>A matrix containing the constraints coefficients.</source>
          <target state="translated">制約係数を含む行列。</target>
        </trans-unit>
        <trans-unit id="802149ca824936990503708821b1fe2917189f2b" translate="yes" xml:space="preserve">
          <source>A matrix is an object with two dimensions (&lt;code&gt;ndims (&lt;var&gt;x&lt;/var&gt;) == 2&lt;/code&gt;) for which &lt;code&gt;size (&lt;var&gt;x&lt;/var&gt;)&lt;/code&gt; returns &lt;code&gt;[M,&amp;nbsp;N]&lt;/code&gt; with non-negative M and N.</source>
          <target state="translated">行列は、2次元（ &lt;code&gt;ndims (&lt;var&gt;x&lt;/var&gt;) == 2&lt;/code&gt; ）のオブジェクトであり、 &lt;code&gt;size (&lt;var&gt;x&lt;/var&gt;)&lt;/code&gt; は非負のMとNで &lt;code&gt;[M,&amp;nbsp;N]&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="62846ffff2be8b38f9b545d9b1b8507ba545fb81" translate="yes" xml:space="preserve">
          <source>A matrix is skew-Hermitian if the complex conjugate transpose of the matrix is equal to the negative of the original matrix: &lt;code&gt;&lt;var&gt;A&lt;/var&gt;&amp;nbsp;==&amp;nbsp;-&lt;var&gt;A&lt;/var&gt;'&lt;/code&gt;. If a tolerance is given then the calculation is &lt;code&gt;norm (&lt;var&gt;A&lt;/var&gt; + &lt;var&gt;A&lt;/var&gt;', Inf) / norm (&lt;var&gt;A&lt;/var&gt;, Inf) &amp;lt; &lt;var&gt;tol&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="translated">行列の複素共役転置が元の行列の負の値に等しい場合、行列はスキューエルミート行列です： &lt;code&gt;&lt;var&gt;A&lt;/var&gt;&amp;nbsp;==&amp;nbsp;-&lt;var&gt;A&lt;/var&gt;'&lt;/code&gt; 。許容誤差が指定されている場合、計算は &lt;code&gt;norm (&lt;var&gt;A&lt;/var&gt; + &lt;var&gt;A&lt;/var&gt;', Inf) / norm (&lt;var&gt;A&lt;/var&gt;, Inf) &amp;lt; &lt;var&gt;tol&lt;/var&gt;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ccaf76ee0469cafe57bb22b54ef72432b3602c73" translate="yes" xml:space="preserve">
          <source>A matrix is skew-symmetric if the transpose of the matrix is equal to the negative of the original matrix: &lt;code&gt;&lt;var&gt;A&lt;/var&gt;&amp;nbsp;==&amp;nbsp;-&lt;var&gt;A&lt;/var&gt;.'&lt;/code&gt;. If a tolerance is given then skew-symmetry is determined by &lt;code&gt;norm (&lt;var&gt;A&lt;/var&gt; + &lt;var&gt;A&lt;/var&gt;.', Inf) / norm (&lt;var&gt;A&lt;/var&gt;, Inf) &amp;lt; &lt;var&gt;tol&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="translated">行列の転置が元の行列の負の値に等しい場合、行列は非対称である： &lt;code&gt;&lt;var&gt;A&lt;/var&gt;&amp;nbsp;==&amp;nbsp;-&lt;var&gt;A&lt;/var&gt;.'&lt;/code&gt; 。許容誤差が指定されている場合、スキュー対称性は &lt;code&gt;norm (&lt;var&gt;A&lt;/var&gt; + &lt;var&gt;A&lt;/var&gt;.', Inf) / norm (&lt;var&gt;A&lt;/var&gt;, Inf) &amp;lt; &lt;var&gt;tol&lt;/var&gt;&lt;/code&gt; によって決定されます。</target>
        </trans-unit>
        <trans-unit id="1fe3ea2614e4b44da3fa3bb47dd21a91f578c695" translate="yes" xml:space="preserve">
          <source>A matrix may have one or both dimensions zero, and operations on empty matrices are handled as described by Carl de Boor in</source>
          <target state="translated">行列は片方または両方の次元がゼロの場合があり、空の行列に対する操作は、Carl de Boor が</target>
        </trans-unit>
        <trans-unit id="57c4e353d8dffa3d72a1b7a1522d6ed41d683ce4" translate="yes" xml:space="preserve">
          <source>A matrix type that stores only the nonzero elements is generally called sparse. It is the purpose of this document to discuss the basics of the storage and creation of sparse matrices and the fundamental operations on them.</source>
          <target state="translated">0 以外の要素のみを格納する行列型は,一般に疎と呼ばれます.このドキュメントの目的は,疎な行列の保存と作成の基本と,その基本的な操作について説明することです.</target>
        </trans-unit>
        <trans-unit id="5b209221a2ff70a222661f4577821f9408840c79" translate="yes" xml:space="preserve">
          <source>A maximum of &lt;code&gt;length (&lt;var&gt;y0&lt;/var&gt;)&lt;/code&gt; components between &lt;var&gt;fixed_y0&lt;/var&gt; and &lt;var&gt;fixed_yp0&lt;/var&gt; may be chosen as fixed values.</source>
          <target state="translated">&lt;var&gt;fixed_y0&lt;/var&gt; と &lt;var&gt;fixed_yp0&lt;/var&gt; の間の最大 &lt;code&gt;length (&lt;var&gt;y0&lt;/var&gt;)&lt;/code&gt; コンポーネントを固定値として選択できます。</target>
        </trans-unit>
        <trans-unit id="d0c0fc7805755a7e41eaa111621b7acc9ecbc7bc" translate="yes" xml:space="preserve">
          <source>A message will be displayed as each of the startup files is read if you invoke Octave with the</source>
          <target state="translated">Octaveを</target>
        </trans-unit>
        <trans-unit id="bdf5cd13fbcc80a2f7ffca2e8d21f1b78822b807" translate="yes" xml:space="preserve">
          <source>A method taking either an argument of type &lt;code&gt;dim_vector&lt;/code&gt;, or, in the case of a matrix, two arguments of type &lt;code&gt;octave_idx_type&lt;/code&gt; defining the number of rows and columns in the matrix.</source>
          <target state="translated">&lt;code&gt;dim_vector&lt;/code&gt; 型の引数、または行列の場合は、行列の行と列の数を定義する &lt;code&gt;octave_idx_type&lt;/code&gt; 型の2つの引数を取るメソッド。</target>
        </trans-unit>
        <trans-unit id="a034e359305036861d8e9cdd6e40654beea0f35c" translate="yes" xml:space="preserve">
          <source>A mouse button was pressed</source>
          <target state="translated">マウスボタンが押された</target>
        </trans-unit>
        <trans-unit id="25e7fa639e4ac37c46720d056922d3437f614e9a" translate="yes" xml:space="preserve">
          <source>A mouse button was released</source>
          <target state="translated">マウスボタンが解除されました</target>
        </trans-unit>
        <trans-unit id="c56190b5097e09dc25cddb63e861ca133713bbc8" translate="yes" xml:space="preserve">
          <source>A movie frame is simply a struct with the fields &lt;code&gt;&quot;cdata&quot;&lt;/code&gt; and &lt;code&gt;&quot;colormap&quot;&lt;/code&gt;.</source>
          <target state="translated">ムービーフレームは、フィールド &lt;code&gt;&quot;cdata&quot;&lt;/code&gt; および &lt;code&gt;&quot;colormap&quot;&lt;/code&gt; colormap&quot;を持つ単純な構造体です。</target>
        </trans-unit>
        <trans-unit id="6613fba3ee21879a3ed0169fda0b297a558ee707" translate="yes" xml:space="preserve">
          <source>A natural part of image processing is visualization of an image. The most basic function for this is the &lt;code&gt;imshow&lt;/code&gt; function that shows the image given in the first input argument.</source>
          <target state="translated">画像処理の自然な部分は、画像の視覚化です。このための最も基本的な関数は、最初の入力引数で指定されたイメージを表示する &lt;code&gt;imshow&lt;/code&gt; 関数です。</target>
        </trans-unit>
        <trans-unit id="8668a137df2f43e8c9c400858d8ce1881cbeda4d" translate="yes" xml:space="preserve">
          <source>A newline is not required between the &lt;code&gt;do&lt;/code&gt; keyword and the body; but using one makes the program clearer unless the body is very simple.</source>
          <target state="translated">&lt;code&gt;do&lt;/code&gt; キーワードと本文の間に改行は不要です。しかし、1つを使用すると、本体が非常に単純でない限り、プログラムがより明確になります。</target>
        </trans-unit>
        <trans-unit id="da05b6bc5dc58d23df4f188ff04aba97d394bd97" translate="yes" xml:space="preserve">
          <source>A newline is not required between the condition and the body; but using one makes the program clearer unless the body is very simple.</source>
          <target state="translated">コンディションと身体の間に改行は必要ありませんが、1つを使うことで、よっぽどシンプルな身体でない限り、プログラムがより明確になります。</target>
        </trans-unit>
        <trans-unit id="f06fa6dee029880a80ed3523217d7de2614a58e8" translate="yes" xml:space="preserve">
          <source>A non-negative scalar &lt;var&gt;alpha&lt;/var&gt; for incomplete Cholesky factorization of &lt;code&gt;&lt;var&gt;A&lt;/var&gt; + &lt;var&gt;alpha&lt;/var&gt; * diag (diag (&lt;var&gt;A&lt;/var&gt;))&lt;/code&gt; instead of &lt;var&gt;A&lt;/var&gt;. This can be useful when &lt;var&gt;A&lt;/var&gt; is not positive definite. The default value is 0.</source>
          <target state="translated">非負スカラー &lt;var&gt;alpha&lt;/var&gt; の不完全コレスキー分解のための &lt;code&gt;&lt;var&gt;A&lt;/var&gt; + &lt;var&gt;alpha&lt;/var&gt; * diag (diag (&lt;var&gt;A&lt;/var&gt;))&lt;/code&gt; の代わりに、 &lt;var&gt;A&lt;/var&gt; 。これは、 &lt;var&gt;A&lt;/var&gt; が正定でない場合に役立ちます。デフォルト値は0です。</target>
        </trans-unit>
        <trans-unit id="9d70682b8ccf24c8c116d29a8ce361956dfb1a54" translate="yes" xml:space="preserve">
          <source>A non-negative scalar specifying the drop tolerance for factorization if performing ICT. The default value is 0 which produces the complete Cholesky factorization.</source>
          <target state="translated">ICTを実行する場合の因数分解のドロップ・トレランスを指定する非負のスカラー.デフォルト値は0で,完全なコレスキー因数分解を行います.</target>
        </trans-unit>
        <trans-unit id="0a5d849ccd6af7dd2503258069c7984796ee6bcf" translate="yes" xml:space="preserve">
          <source>A non-negative scalar specifying the drop tolerance for factorization. The default value is 0 which produces the complete LU factorization.</source>
          <target state="translated">因数分解のドロップ・トレランスを指定する非負のスカラー.デフォルト値は0で,完全なLU因数分解を行います.</target>
        </trans-unit>
        <trans-unit id="bdcc7a0a1176e71582f5e7fa4f965fba11a63831" translate="yes" xml:space="preserve">
          <source>A note on terminology: &amp;ldquo;broadcasting&amp;rdquo; is the term popularized by the Numpy numerical environment in the Python programming language. In other programming languages and environments, broadcasting may also be known as &lt;em&gt;binary singleton expansion&lt;/em&gt; (BSX, in &lt;small&gt;MATLAB&lt;/small&gt;, and the origin of the name of the &lt;code&gt;bsxfun&lt;/code&gt; function), &lt;em&gt;recycling&lt;/em&gt; (R programming language), &lt;em&gt;single-instruction multiple data&lt;/em&gt; (SIMD), or &lt;em&gt;replication&lt;/em&gt;.</source>
          <target state="translated">用語に関する注記：「ブロードキャスティング」は、Pythonプログラミング言語のNumpy数値環境によって一般化された用語です。他のプログラミング言語および環境では、ブロードキャストは&lt;em&gt;バイナリシングルトン拡張&lt;/em&gt;（BSX、&lt;small&gt;MATLAB&lt;/small&gt;、および &lt;code&gt;bsxfun&lt;/code&gt; 関数の名前の由来）、&lt;em&gt;リサイクル&lt;/em&gt;（Rプログラミング言語）、&lt;em&gt;単一命令複数データ&lt;/em&gt;（SIMD）としても知られてい&lt;em&gt;ます&lt;/em&gt;。または&lt;em&gt;レプリケーション&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="fef0bcaeee1b91d74a0eb68bc4ea5fa850d0ba5d" translate="yes" xml:space="preserve">
          <source>A null string (&quot;&quot;) input to &lt;code&gt;error&lt;/code&gt; will be ignored and the code will continue running as if the statement were a NOP. This is for compatibility with &lt;small&gt;MATLAB&lt;/small&gt;. It also makes it possible to write code such as</source>
          <target state="translated">&lt;code&gt;error&lt;/code&gt; へのnull文字列（ &quot;&quot;）入力は無視され、ステートメントがNOPであるかのようにコードは実行を継続します。これは、&lt;small&gt;MATLAB&lt;/small&gt;との互換性のためです。また、次のようなコードを作成することもできます。</target>
        </trans-unit>
        <trans-unit id="3fe70b77179968f141c8807bcedbec7dd07eeab7" translate="yes" xml:space="preserve">
          <source>A number of Octave high level plot functions return groups of other graphics objects or they return graphics objects that have their properties linked in such a way that changes to one of the properties results in changes in the others. A graphic object that groups other objects is an &lt;code&gt;hggroup&lt;/code&gt;</source>
          <target state="translated">多くのOctave高レベルプロット関数は、他のグラフィックスオブジェクトのグループを返すか、プロパティの1つに変更を加えると他のプロパティも変更されるようにプロパティがリンクされたグラフィックスオブジェクトを返します。他のオブジェクトをグループ化するグラフィックオブジェクトは &lt;code&gt;hggroup&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ac9cf4841f0b266db5d9c7eec35acab8ee0b8037" translate="yes" xml:space="preserve">
          <source>A number specifying the size of the marker. The default is 1. A value of 2 is twice as large as the default, etc.</source>
          <target state="translated">マーカーのサイズを指定する数値。デフォルトは1で、2を指定すると2倍の大きさになります。</target>
        </trans-unit>
        <trans-unit id="046ca79528461655d58118b4f81ceead7e9d7811" translate="yes" xml:space="preserve">
          <source>A number specifying the width of the line. The default is 1. A value of 2 is twice as wide as the default, etc.</source>
          <target state="translated">線の幅を指定する数値。デフォルトは1で、2の値を指定すると2倍の幅になるなどの効果があります。</target>
        </trans-unit>
        <trans-unit id="7af2a03caeaf5901efd25cd0134e5507059b9f6a" translate="yes" xml:space="preserve">
          <source>A one line description of the package.</source>
          <target state="translated">パッケージの一行説明。</target>
        </trans-unit>
        <trans-unit id="0fff21ff3c5e0d1105f326c82aef44681998a1fb" translate="yes" xml:space="preserve">
          <source>A one paragraph description of the package.</source>
          <target state="translated">パッケージの説明を1段落で。</target>
        </trans-unit>
        <trans-unit id="749a452f1917958d41c1cf02c0f96234502ff3fa" translate="yes" xml:space="preserve">
          <source>A particular problem of sparse matrices comes about due to the fact that as the zeros are not stored, the sign-bit of these zeros is equally not stored. In certain cases the sign-bit of zero is important. For example:</source>
          <target state="translated">疎な行列の特定の問題は、ゼロが格納されていないので、これらのゼロの符号ビットも同様に格納されていないという事実に起因しています。特定のケースでは,ゼロの符号ビットが重要です.例えば</target>
        </trans-unit>
        <trans-unit id="59d0e965cb3e2e472eb068ed0fd7276fd890b0b9" translate="yes" xml:space="preserve">
          <source>A patch for the bug. Patches can be helpful, but if you find a bug, you should report it, even if you cannot send a fix for the problem.</source>
          <target state="translated">バグに対するパッチです。パッチは役に立つかもしれませんが、バグを見つけたら、問題の修正プログラムを送ることができなくても、そのバグを報告してください。</target>
        </trans-unit>
        <trans-unit id="05df32b4928ea8e5c03620a27636a8925e40b40f" translate="yes" xml:space="preserve">
          <source>A permutation matrix can also be returned from the built-in functions &lt;em&gt;lu&lt;/em&gt; and &lt;em&gt;qr&lt;/em&gt;, if a pivoted factorization is requested.</source>
          <target state="translated">ピボット分解が要求された場合、置換行列は組み込み関数&lt;em&gt;lu&lt;/em&gt;および&lt;em&gt;qr&lt;/em&gt;から返すこともできます。</target>
        </trans-unit>
        <trans-unit id="10f787f5f1d612987bba65895204e32619c243b1" translate="yes" xml:space="preserve">
          <source>A permutation matrix can be transposed (or conjugate-transposed, which is the same, because a permutation matrix is never complex), inverting the permutation, or equivalently, turning a row-permutation matrix into a column-permutation one. For permutation matrices, transpose is equivalent to inversion, thus &lt;code&gt;P\M&lt;/code&gt; is equivalent to &lt;code&gt;P'*M&lt;/code&gt;. Transpose of a permutation matrix (or inverse) is a constant-time operation, flipping only a flag internally, and thus the choice between the two above equivalent expressions for inverse permuting is completely up to the user&amp;rsquo;s taste.</source>
          <target state="translated">置換行列は転置できます（または、転置行列は複雑ではないため、共役転置でも同じです）、置換を反転するか、同等に、行置換行列を列置換行列に変換できます。置換行列の場合、転置は反転と同じです。したがって、 &lt;code&gt;P\M&lt;/code&gt; は &lt;code&gt;P'*M&lt;/code&gt; と同じです。置換行列（または逆行列）の転置は一定時間の演算であり、フラグのみを内部で反転します。したがって、逆置換の上記の2つの同等の式のどちらを選択するかは、ユーザーの好み次第です。</target>
        </trans-unit>
        <trans-unit id="4e81a270e124e0cef9dce12f0610418fa896b0aa" translate="yes" xml:space="preserve">
          <source>A permutation matrix is defined as a square matrix that has a single element equal to unity in each row and each column; all other elements are zero. That is, there exists a permutation (vector) &lt;code&gt;p&lt;/code&gt; such that &lt;code&gt;P(i,j) == 1&lt;/code&gt; if &lt;code&gt;j == p(i)&lt;/code&gt; and &lt;code&gt;P(i,j) == 0&lt;/code&gt; otherwise.</source>
          <target state="translated">順列行列は、各行と各列の単一性に等しい単一の要素を持つ正方行列として定義されます。他のすべての要素はゼロです。すなわち、順列（ベクトル）が存在する &lt;code&gt;p&lt;/code&gt; ように &lt;code&gt;P(i,j) == 1&lt;/code&gt; であれば &lt;code&gt;j == p(i)&lt;/code&gt; 及び &lt;code&gt;P(i,j) == 0&lt;/code&gt; そうでない場合に。</target>
        </trans-unit>
        <trans-unit id="5172efe6bd439987aa3d770f9a060753bd1e71c0" translate="yes" xml:space="preserve">
          <source>A positive &lt;var&gt;k&lt;/var&gt; leads to a left shift; A negative value to a right shift.</source>
          <target state="translated">正の &lt;var&gt;k&lt;/var&gt; は左シフトにつながります。右シフトに対して負の値。</target>
        </trans-unit>
        <trans-unit id="ccada10b3ac099a3cccac6c6a5278ea950e38c89" translate="yes" xml:space="preserve">
          <source>A prime number is conventionally defined as a positive integer greater than 1 (e.g., 2, 3, &amp;hellip;) which is divisible only by itself and 1. Octave extends this definition to include both negative integers and complex values. A negative integer is prime if its positive counterpart is prime. This is equivalent to &lt;code&gt;isprime (abs (x))&lt;/code&gt;.</source>
          <target state="translated">素数は通常、1より大きい正の整数として定義されます（たとえば、2、3、&amp;hellip;）。これは、それ自体と1でのみ割り切れることができます。Octaveは、この定義を拡張して、負の整数と複素数値の両方を含みます。正の対応物が素数である場合、負の整数は素数です。これは &lt;code&gt;isprime (abs (x))&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="894a4321b5694298a6fa7d739925292632045ff8" translate="yes" xml:space="preserve">
          <source>A radio property that can have the values &lt;code&gt;&quot;on&quot;&lt;/code&gt; or &lt;code&gt;&quot;off&quot;&lt;/code&gt; that flags whether the contours to plot are to be filled.</source>
          <target state="translated">プロットするコンターを塗りつぶすかどうかを示す &lt;code&gt;&quot;on&quot;&lt;/code&gt; または &lt;code&gt;&quot;off&quot;&lt;/code&gt; の値を持つことができるラジオプロパティ。</target>
        </trans-unit>
        <trans-unit id="9f4db59002920effe685164ac31a79c68e4a38bc" translate="yes" xml:space="preserve">
          <source>A rational approximation to a floating point number is a simple fraction with numerator &lt;var&gt;N&lt;/var&gt; and denominator &lt;var&gt;D&lt;/var&gt; such that &lt;code&gt;&lt;var&gt;x&lt;/var&gt; = &lt;var&gt;N&lt;/var&gt;/&lt;var&gt;D&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="translated">浮動小数点数の有理数近似は、分子 &lt;var&gt;N&lt;/var&gt; と分母 &lt;var&gt;D&lt;/var&gt; が &lt;code&gt;&lt;var&gt;x&lt;/var&gt; = &lt;var&gt;N&lt;/var&gt;/&lt;var&gt;D&lt;/var&gt;&lt;/code&gt; ある単純な分数です。</target>
        </trans-unit>
        <trans-unit id="5b7d850accb4d6fabe8a78c8431b972457d5d952" translate="yes" xml:space="preserve">
          <source>A read only property that contains the data return by &lt;code&gt;contourc&lt;/code&gt; used to create the contours of the plot.</source>
          <target state="translated">プロットの等高線を作成するために使用される &lt;code&gt;contourc&lt;/code&gt; によって返されるデータを含む読み取り専用プロパティ。</target>
        </trans-unit>
        <trans-unit id="69e04189193089ae517b20c2d237c918a44b23d2" translate="yes" xml:space="preserve">
          <source>A repeat instruction &lt;var&gt;R_j&lt;/var&gt; must either be a scalar or a vector. If the instruction is a scalar then each component of &lt;var&gt;x&lt;/var&gt; in dimension &lt;var&gt;j&lt;/var&gt; is repeated &lt;var&gt;R_j&lt;/var&gt; times. If the instruction is a vector then it must have the same number of elements as the corresponding dimension &lt;var&gt;j&lt;/var&gt; of &lt;var&gt;x&lt;/var&gt;. In this case, the &lt;var&gt;k&lt;/var&gt;th component of dimension &lt;var&gt;j&lt;/var&gt; is repeated &lt;code&gt;&lt;var&gt;R_j&lt;/var&gt;(&lt;var&gt;k&lt;/var&gt;)&lt;/code&gt; times.</source>
          <target state="translated">繰り返し命令 &lt;var&gt;R_j&lt;/var&gt; は、スカラーまたはベクトルでなければなりません。命令がスカラーの場合、次元 &lt;var&gt;j&lt;/var&gt; の &lt;var&gt;x&lt;/var&gt; の各コンポーネントは &lt;var&gt;R_j&lt;/var&gt; 回繰り返されます。命令がベクトルの場合、要素の数は &lt;var&gt;x&lt;/var&gt; の対応する次元 &lt;var&gt;j&lt;/var&gt; と同じでなければなりません。この場合、次元 &lt;var&gt;j&lt;/var&gt; の &lt;var&gt;k&lt;/var&gt; 番目の成分は &lt;code&gt;&lt;var&gt;R_j&lt;/var&gt;(&lt;var&gt;k&lt;/var&gt;)&lt;/code&gt; （ &lt;var&gt;k&lt;/var&gt; ）回繰り返されます。</target>
        </trans-unit>
        <trans-unit id="94218839f0f416b86774956970dc89278b1b27f3" translate="yes" xml:space="preserve">
          <source>A row vector is a 2-D array for which &lt;code&gt;size (&lt;var&gt;x&lt;/var&gt;)&lt;/code&gt; returns &lt;code&gt;[1,&amp;nbsp;N]&lt;/code&gt; with non-negative N.</source>
          <target state="translated">行ベクトルは、 &lt;code&gt;size (&lt;var&gt;x&lt;/var&gt;)&lt;/code&gt; が負でない &lt;code&gt;[1,&amp;nbsp;N]&lt;/code&gt; を返す2次元配列です。</target>
        </trans-unit>
        <trans-unit id="9d45094648ec6971abaccf23276021d7fb2816eb" translate="yes" xml:space="preserve">
          <source>A row vector that selects which dimensions of the calculation will appear in the output &lt;var&gt;y&lt;/var&gt;. This is only useful when &lt;var&gt;fcn&lt;/var&gt; returns an N-dimensional array in Format 1. The default is to return all output dimensions.</source>
          <target state="translated">出力 &lt;var&gt;y&lt;/var&gt; に表示される計算の次元を選択する行ベクトル。これは、 &lt;var&gt;fcn&lt;/var&gt; がフォーマット1のN次元配列を返す場合にのみ役立ちます。デフォルトでは、すべての出力次元が返されます。</target>
        </trans-unit>
        <trans-unit id="ebf103c27e763ab76f8f02db9c5ba3e5d70235e6" translate="yes" xml:space="preserve">
          <source>A sample usage of &lt;code&gt;mysparse&lt;/code&gt; is</source>
          <target state="translated">&lt;code&gt;mysparse&lt;/code&gt; の使用例は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="c4aa2642c1fb9d6e349c04dbd562bccaab99ff75" translate="yes" xml:space="preserve">
          <source>A scalar double property. &lt;var&gt;arg&lt;/var&gt; contains the default value.</source>
          <target state="translated">スカラーdoubleプロパティ。 &lt;var&gt;arg&lt;/var&gt; にはデフォルト値が含まれています。</target>
        </trans-unit>
        <trans-unit id="ea338826aab9d3ac5d3cf2db5b5dc296ed8745aa" translate="yes" xml:space="preserve">
          <source>A scalar is an object with two dimensions for which &lt;code&gt;size (&lt;var&gt;x&lt;/var&gt;)&lt;/code&gt; returns &lt;code&gt;[1,&amp;nbsp;1]&lt;/code&gt;.</source>
          <target state="translated">スカラーは、 &lt;code&gt;size (&lt;var&gt;x&lt;/var&gt;)&lt;/code&gt; が &lt;code&gt;[1,&amp;nbsp;1]&lt;/code&gt; 返す2次元のオブジェクトです。</target>
        </trans-unit>
        <trans-unit id="1e8fb51b130b07ce737c414d4008a1b870e3c24b" translate="yes" xml:space="preserve">
          <source>A script file also differs from a function file in that the variables named in a script file are not local variables, but are in the same scope as the other variables that are visible on the command line.</source>
          <target state="translated">また、スクリプトファイルは関数ファイルとは異なり、スクリプトファイル内で名前が付けられた変数はローカル変数ではなく、コマンドライン上で表示される他の変数と同じスコープ内にあるという点でも異なります。</target>
        </trans-unit>
        <trans-unit id="8754228e7ba2fb5bfeaab5c8e64bc2d86c833015" translate="yes" xml:space="preserve">
          <source>A script file is a file containing (almost) any sequence of Octave commands. It is read and evaluated just as if you had typed each command at the Octave prompt, and provides a convenient way to perform a sequence of commands that do not logically belong inside a function.</source>
          <target state="translated">スクリプトファイルは,Octaveコマンドの(ほぼ)任意のシーケンスを含むファイルです。これは,Octaveプロンプトで各コマンドを入力したかのように読み込まれ評価され,関数内に論理的に属さない一連のコマンドを実行するための便利な方法を提供します。</target>
        </trans-unit>
        <trans-unit id="06e1a90b4660ebca36e9c79a5596b38ddc22ad5e" translate="yes" xml:space="preserve">
          <source>A second use of indexing is to speed up code. Indexing is a fast operation and judicious use of it can reduce the requirement for looping over individual array elements, which is a slow operation.</source>
          <target state="translated">インデックスの2つ目の用途は、コードの高速化です。インデックス化は高速な操作であり、それを賢く使うことで、遅い操作である個々の配列要素をループさせる必要性を減らすことができます。</target>
        </trans-unit>
        <trans-unit id="741f4f59979ad695e8715f9bbd0aa7e5c54c43b5" translate="yes" xml:space="preserve">
          <source>A section is started by typing &amp;lsquo;</source>
          <target state="translated">セクションを開始するには、「</target>
        </trans-unit>
        <trans-unit id="464c66725542d8fd8ec18f2c159070c499c7a82c" translate="yes" xml:space="preserve">
          <source>A section starting in the first line of the document, followed by another start of a section that might be empty, is interpreted as a document title and introduction text.</source>
          <target state="translated">文書の最初の行で始まるセクションの後に、空になりそうなセクションの別の開始が続くと、文書のタイトルと紹介文として解釈されます。</target>
        </trans-unit>
        <trans-unit id="8d4602359e44015b9f8f6cf54deb5b42c08fbfa9" translate="yes" xml:space="preserve">
          <source>A set of axes. This object is a child of a figure object and may be a parent of line, text, image, patch, surface, or light objects.</source>
          <target state="translated">軸の集合。このオブジェクトは図形オブジェクトの子であり、線、テキスト、画像、パッチ、サーフェス、またはライトオブジェクトの親になることがあります。</target>
        </trans-unit>
        <trans-unit id="77c1f2b6fba48df815c63eaf3a1207fea9c4605b" translate="yes" xml:space="preserve">
          <source>A significant difference between &lt;code&gt;interpn&lt;/code&gt; and the other two multi-dimensional interpolation functions is the fashion in which the dimensions are treated. For &lt;code&gt;interp2&lt;/code&gt; and &lt;code&gt;interp3&lt;/code&gt;, the y-axis is considered to be the columns of the matrix, whereas the x-axis corresponds to the rows of the array. As Octave indexes arrays in column major order, the first dimension of any array is the columns, and so &lt;code&gt;interpn&lt;/code&gt; effectively reverses the &amp;rsquo;x&amp;rsquo; and &amp;rsquo;y&amp;rsquo; dimensions. Consider the example,</source>
          <target state="translated">&lt;code&gt;interpn&lt;/code&gt; と他の2つの多次元補間関数の大きな違いは、次元の処理方法です。以下のために &lt;code&gt;interp2&lt;/code&gt; と &lt;code&gt;interp3&lt;/code&gt; を、y軸は、アレイの行へx軸対応一方、行列の列であると考えられます。Octaveは列をメジャー順に配列にインデックスを付けるので、配列の最初の次元は列なので、 &lt;code&gt;interpn&lt;/code&gt; は「x」と「y」の次元を効果的に逆にします。例を考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="4fe58535f02b307832ea659219b9dbefb8113607" translate="yes" xml:space="preserve">
          <source>A similar function &lt;code&gt;run&lt;/code&gt; exists for calling user script files, that are not necessarily on the user path</source>
          <target state="translated">同様の関数 &lt;code&gt;run&lt;/code&gt; が、ユーザーパス上にあるとは限らない、ユーザースクリプトファイルを呼び出すために存在します。</target>
        </trans-unit>
        <trans-unit id="ea2162a3f58581870b73603346de0063ada4fe71" translate="yes" xml:space="preserve">
          <source>A simple example comes from chemistry and the need to obtain balanced chemical equations. Consider the burning of hydrogen and oxygen to produce water.</source>
          <target state="translated">簡単な例は、化学から来ており、バランスのとれた化学式を得る必要があります。水素と酸素を燃やして水を作ることを考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="366cad87b39df44591f105f809ee0e3afe252a9f" translate="yes" xml:space="preserve">
          <source>A simple example demonstrating the use of structures within oct-files is</source>
          <target state="translated">オクトファイル内での構造体の使用を示す簡単な例は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="f8f8e391b3304e6ad3aec99007fb937313aa2c9b" translate="yes" xml:space="preserve">
          <source>A simple way of preventing the above from happening is to create a temporary constant version of the sparse matrix. Note that only the container for the sparse matrix will be copied, while the actual representation of the data will be shared between the two versions of the sparse matrix; This is not a costly operation. The example above, re-written to prevent sparse-to-dense conversion, is</source>
          <target state="translated">上記のようなことが起こらないようにする簡単な方法は,疎な行列の一時的な定数バージョンを作成することです.疎な行列のコンテナだけがコピーされ,データの実際の表現は,2つのバージョンの疎な行列の間で共有されることに注意してください;これは,コストのかかる操作ではありません.上の例は,疎な行列から密な行列への変換を防ぐために書き直されたものです.</target>
        </trans-unit>
        <trans-unit id="1a232969e74ea01cbd885e3ef5912841f816e579" translate="yes" xml:space="preserve">
          <source>A single dimension of the return matrix may be left unspecified and Octave will determine its size automatically. An empty matrix ([]) is used to flag the unspecified dimension.</source>
          <target state="translated">戻り行列の1次元は,指定されないままにしておくことができ,Octaveはそのサイズを自動的に決定します。空の行列([])は,指定されていない次元にフラグを立てるために使用されます。</target>
        </trans-unit>
        <trans-unit id="bdb7f6d956fd1624df1e812b9d72f101f4160a36" translate="yes" xml:space="preserve">
          <source>A single dynamically linked file might define several functions. However, as Octave searches for functions based on the functions filename, Octave needs a manner in which to find each of the functions in the dynamically linked file. On operating systems that support symbolic links, it is possible to create a symbolic link to the original file for each of the functions which it contains.</source>
          <target state="translated">単一の動的にリンクされたファイルは,いくつかの関数を定義しているかもしれません。しかし,Octaveが関数ファイル名に基づいて関数を検索するので,Octaveは,動的にリンクされたファイルの中の各関数を見つける方法を必要とします。シンボリックリンクをサポートするオペレーティングシステム上では,それが含む関数のそれぞれに対 して,元のファイルへのシンボリックリンクを作成することが可能です。</target>
        </trans-unit>
        <trans-unit id="c1e06450a49a0c2fe77d0fafe65d3410358b5d9a" translate="yes" xml:space="preserve">
          <source>A single file extension &lt;code&gt;&quot;*.ext&quot;&lt;/code&gt;</source>
          <target state="translated">単一のファイル拡張子 &lt;code&gt;&quot;*.ext&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ea54309ffd7f73d15e80b8ab8fa3e3b6c4638801" translate="yes" xml:space="preserve">
          <source>A single file extension. Example: &lt;code&gt;uiputfile (&quot;*.ext&quot;)&lt;/code&gt;</source>
          <target state="translated">単一のファイル拡張子。例： &lt;code&gt;uiputfile (&quot;*.ext&quot;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4eadc5147d1db017fb10ae51f12569648ee5ff77" translate="yes" xml:space="preserve">
          <source>A single statement may not be enough of an example&amp;mdash;the bug might depend on other details that are missing from the single statement where the error finally occurs.</source>
          <target state="translated">単一のステートメントでは十分な例ではない可能性があります。バグは、エラーが最終的に発生する単一のステートメントから欠落している他の詳細に依存している場合があります。</target>
        </trans-unit>
        <trans-unit id="1546f7635196668d2cc7578a223310b6f38f1120" translate="yes" xml:space="preserve">
          <source>A slightly more complex example of &lt;code&gt;varargin&lt;/code&gt; is a function &lt;code&gt;print_arguments&lt;/code&gt; that prints all input arguments. Such a function can be defined like this</source>
          <target state="translated">&lt;code&gt;varargin&lt;/code&gt; のもう少し複雑な例は、すべての入力引数を出力する関数 &lt;code&gt;print_arguments&lt;/code&gt; です。このような関数は次のように定義できます</target>
        </trans-unit>
        <trans-unit id="6725c15f56367c35b6d6b022eaee02395ea6105e" translate="yes" xml:space="preserve">
          <source>A sparse boolean matrix whose structure is that of the Cholesky factorization as determined by &lt;var&gt;typ&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;typ&lt;/var&gt; によって決定されるコレスキー分解の構造を持つスパースブール行列。</target>
        </trans-unit>
        <trans-unit id="c62f9fa30258d36224514df212dffdadc55712fb" translate="yes" xml:space="preserve">
          <source>A special case of broadcasting that may be familiar is when all dimensions of the array being broadcast are 1, i.e., the array is a scalar. Thus for example, operations like &lt;code&gt;x - 42&lt;/code&gt; and &lt;code&gt;max
(x, 2)&lt;/code&gt; are basic examples of broadcasting.</source>
          <target state="translated">よく知られているブロードキャストの特殊なケースは、ブロードキャストされるアレイのすべての次元が1の場合、つまり、アレイがスカラーの場合です。したがって、たとえば、 &lt;code&gt;x - 42&lt;/code&gt; や &lt;code&gt;max (x, 2)&lt;/code&gt; などの操作は、ブロードキャストの基本的な例です。</target>
        </trans-unit>
        <trans-unit id="a3597f16fbe80b50385888f4698a91512a605c27" translate="yes" xml:space="preserve">
          <source>A special form of the &lt;code&gt;for&lt;/code&gt; statement allows you to loop over all the elements of a structure:</source>
          <target state="translated">&lt;code&gt;for&lt;/code&gt; ステートメントの特殊な形式を使用すると、構造のすべての要素をループできます。</target>
        </trans-unit>
        <trans-unit id="b64d8733c32dbc141aae89769142ad175178cd93" translate="yes" xml:space="preserve">
          <source>A specified logical operator may be used between &lt;var&gt;prop_name&lt;/var&gt;, &lt;var&gt;prop_value&lt;/var&gt; pairs. The supported logical operators are: &lt;code&gt;&quot;-and&quot;&lt;/code&gt;, &lt;code&gt;&quot;-or&quot;&lt;/code&gt;, &lt;code&gt;&quot;-xor&quot;&lt;/code&gt;, &lt;code&gt;&quot;-not&quot;&lt;/code&gt;. Example code to locate all figure and axes objects is</source>
          <target state="translated">指定された論理演算子は、 &lt;var&gt;prop_name&lt;/var&gt; と &lt;var&gt;prop_value&lt;/var&gt; のペアの間で使用できます。サポートされる論理演算子は以下のとおりです。 &lt;code&gt;&quot;-and&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;-or&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;-xor&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;-not&quot;&lt;/code&gt; 。すべてのFigureおよびAxesオブジェクトを見つけるためのサンプルコードは</target>
        </trans-unit>
        <trans-unit id="247e4d8a569dfb5457d0f2ad98d12ce5e395fe3a" translate="yes" xml:space="preserve">
          <source>A square array is a 2-D object for which &lt;code&gt;size (&lt;var&gt;x&lt;/var&gt;)&lt;/code&gt; returns &lt;code&gt;[N,&amp;nbsp;N]&lt;/code&gt; where N is a non-negative integer.</source>
          <target state="translated">正方形配列は、 &lt;code&gt;size (&lt;var&gt;x&lt;/var&gt;)&lt;/code&gt; が &lt;code&gt;[N,&amp;nbsp;N]&lt;/code&gt; 返す2次元オブジェクトです。ここで、Nは非負の整数です。</target>
        </trans-unit>
        <trans-unit id="80fe009815af64c05a168911fd0e47d1c490779d" translate="yes" xml:space="preserve">
          <source>A string array is a data type that stores strings (row vectors of characters) at each element in the array. It is distinct from character arrays which are N-dimensional arrays where each element is a single 1x1 character. It is also distinct from cell arrays of strings which store strings at each element, but use cell indexing &amp;lsquo;</source>
          <target state="translated">文字列配列は、配列の各要素に文字列（文字の行ベクトル）を格納するデータ型です。これは、各要素が単一の1x1文字であるN次元配列である文字配列とは異なります。また、各要素に文字列を格納する文字列のセル配列とは異なりますが、セルインデックスを使用します '</target>
        </trans-unit>
        <trans-unit id="d280177b44fc499656b8fad42980123998406840" translate="yes" xml:space="preserve">
          <source>A string containing the key combination together with CTRL to execute this menu entry (e.g., &lt;code&gt;&quot;x&quot;&lt;/code&gt; for CTRL+x).</source>
          <target state="translated">このメニューエントリを実行するためのCTRLとキーの組み合わせを含む文字列（たとえば、CTRL + xの場合は &lt;code&gt;&quot;x&quot;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="11473e300b42571ceb0d8860375604c7732af315" translate="yes" xml:space="preserve">
          <source>A string containing the label for this menu entry. A &lt;code&gt;&quot;&amp;amp;&quot;&lt;/code&gt;-symbol can be used to mark the &lt;code&gt;&quot;accelerator&quot;&lt;/code&gt; character (e.g., &lt;code&gt;&quot;E&amp;amp;xit&quot;&lt;/code&gt;)</source>
          <target state="translated">このメニューエントリのラベルを含む文字列。 &lt;code&gt;&quot;&amp;amp;&quot;&lt;/code&gt; -symbolをマークするために使用することができ &lt;code&gt;&quot;accelerator&quot;&lt;/code&gt; の文字（例えば、 &lt;code&gt;&quot;E&amp;amp;xit&quot;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="13c22056b7b7ae01c5ed4f0ef9e75034c65dac10" translate="yes" xml:space="preserve">
          <source>A string is returned if &lt;var&gt;template&lt;/var&gt; specifies only character conversions.</source>
          <target state="translated">&lt;var&gt;template&lt;/var&gt; 文字変換のみを指定している場合、文字列が返されます。</target>
        </trans-unit>
        <trans-unit id="c7bace0a403241de19c07a07e6cad29cdf559de0" translate="yes" xml:space="preserve">
          <source>A string property with a limited set of accepted values. The first argument must be a string with all accepted values separated by a vertical bar (&amp;rsquo;|&amp;rsquo;). The default value can be marked by enclosing it with a &amp;rsquo;{&amp;rsquo; &amp;rsquo;}&amp;rsquo; pair. The default value may also be given as an optional second string argument.</source>
          <target state="translated">受け入れられる値の制限されたセットを持つ文字列プロパティ。最初の引数は、受け入れ可能なすべての値が縦棒（ '|'）で区切られたストリングでなければなりません。デフォルト値は、 '{' '}'ペアで囲むことによりマークできます。デフォルト値は、オプションの2番目の文字列引数として指定することもできます。</target>
        </trans-unit>
        <trans-unit id="6c332a4ac079cce393ef90ca8f020101385dd42c" translate="yes" xml:space="preserve">
          <source>A string property. &lt;var&gt;arg&lt;/var&gt; contains the default string value.</source>
          <target state="translated">文字列プロパティ。 &lt;var&gt;arg&lt;/var&gt; にはデフォルトの文字列値が含まれています。</target>
        </trans-unit>
        <trans-unit id="8548824d7d6d8941d5b2f200b42998797917e3d9" translate="yes" xml:space="preserve">
          <source>A string specifying the method of integration to use to solve the ODE system. Valid values are</source>
          <target state="translated">ODE システムを解くために使用する統合方法を指定する文字列。有効な値は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="5ad885f2de5ee526d84a503678ffc0c4440dd333" translate="yes" xml:space="preserve">
          <source>A struct with geotagging information retrieved from the Exif tag.</source>
          <target state="translated">Exif タグから取得したジオタグ情報を持つ構造体。</target>
        </trans-unit>
        <trans-unit id="29ceab86692c7428bfcf898197bedf30dc0b0fec" translate="yes" xml:space="preserve">
          <source>A struct with information retrieved from the Exif tag.</source>
          <target state="translated">Exifタグから取得した情報を持つ構造体。</target>
        </trans-unit>
        <trans-unit id="01b5f6a88a72f9fe25f14d92b2a89ed4ed269c18" translate="yes" xml:space="preserve">
          <source>A structure array is a particular instance of a structure, where each of the fields of the structure is represented by a cell array. Each of these cell arrays has the same dimensions. Conceptually, a structure array can also be seen as an array of structures with identical fields. An example of the creation of a structure array is</source>
          <target state="translated">構造体配列は構造体の特定のインスタンスであり、構造体の各フィールドはセル配列で表されます。これらのセル配列のそれぞれは同じ次元を持っています。概念的には、構造体の配列は、同じフィールドを持つ構造体の配列として見ることもできます。構造体の配列を作成する例を以下に示します。</target>
        </trans-unit>
        <trans-unit id="00848104e76f370b94e55e23ada6df4b1ef250ee" translate="yes" xml:space="preserve">
          <source>A structure containing information on where the message occurred. This may be an empty structure if the information cannot be obtained. The fields of the structure are:</source>
          <target state="translated">メッセージが発生した場所に関する情報を含む構造体。情報が得られない場合は空の構造体になることがあります。構造体のフィールドは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="afffec128f2cec4ccdbab6d3ff3e0151670292c6" translate="yes" xml:space="preserve">
          <source>A structure containing the following parameters used to define the behavior of solver. Missing elements in the structure take on default values, so you only need to set the elements that you wish to change from the default.</source>
          <target state="translated">ソルバーの動作を定義するために使用される以下のパラメータを含む構造体。構造体の中で欠落している要素はデフォルト値を取るので、デフォルトから変更したい要素だけを設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="3622f981a8c7b590bb7be0445a118c3b23b1efad" translate="yes" xml:space="preserve">
          <source>A structure containing the system CPU time used. The structure has the elements &lt;code&gt;sec&lt;/code&gt; (seconds) &lt;code&gt;usec&lt;/code&gt; (microseconds).</source>
          <target state="translated">使用されたシステムCPU時間を含む構造。構造には、 &lt;code&gt;sec&lt;/code&gt; （秒）、 &lt;code&gt;usec&lt;/code&gt; （マイクロ秒）の要素があります。</target>
        </trans-unit>
        <trans-unit id="62f4f36a56b89f46d36b14b87481ca9e5e1836b0" translate="yes" xml:space="preserve">
          <source>A structure containing the text of each matched named token, with the name being used as the fieldname. A named token is denoted by &lt;code&gt;(?&amp;lt;name&amp;gt;&amp;hellip;)&lt;/code&gt;.</source>
          <target state="translated">一致する各名前付きトークンのテキストを含む構造。名前はフィールド名として使用されます。名前付きトークンは &lt;code&gt;(?&amp;lt;name&amp;gt;&amp;hellip;)&lt;/code&gt; で示されます。</target>
        </trans-unit>
        <trans-unit id="026c578a70b2dba180a0a93ea57400a36403f475" translate="yes" xml:space="preserve">
          <source>A structure containing the user CPU time used. The structure has the elements &lt;code&gt;sec&lt;/code&gt; (seconds) &lt;code&gt;usec&lt;/code&gt; (microseconds).</source>
          <target state="translated">使用されたユーザーCPU時間を含む構造。構造には、 &lt;code&gt;sec&lt;/code&gt; （秒）、 &lt;code&gt;usec&lt;/code&gt; （マイクロ秒）の要素があります。</target>
        </trans-unit>
        <trans-unit id="6b6219e800f7360ad148cb19ca993ed342801592" translate="yes" xml:space="preserve">
          <source>A structure in Octave is a map between a number of fields represented and their values. The Standard Template Library &lt;code&gt;map&lt;/code&gt; class is used, with the pair consisting of a &lt;code&gt;std::string&lt;/code&gt; and an Octave &lt;code&gt;Cell&lt;/code&gt; variable.</source>
          <target state="translated">Octaveの構造は、表現されたいくつかのフィールドとそれらの値の間のマップです。標準テンプレートライブラリ &lt;code&gt;map&lt;/code&gt; クラスが使用され、ペアは &lt;code&gt;std::string&lt;/code&gt; とOctave &lt;code&gt;Cell&lt;/code&gt; 変数で構成されます。</target>
        </trans-unit>
        <trans-unit id="a49a97d83f27a99c910d665ab991a7baa42766c1" translate="yes" xml:space="preserve">
          <source>A structure or structure array &lt;var&gt;warning_struct&lt;/var&gt;, with fields &lt;code&gt;&quot;state&quot;&lt;/code&gt; and &lt;code&gt;&quot;identifier&quot;&lt;/code&gt;, may be given as an input to achieve equivalent results. The following example shows how to temporarily disable a warning and then restore its original state:</source>
          <target state="translated">同等の結果を得るには、フィールド &lt;code&gt;&quot;state&quot;&lt;/code&gt; と &lt;code&gt;&quot;identifier&quot;&lt;/code&gt; 持つ構造または構造配列 &lt;var&gt;warning_struct&lt;/var&gt; を入力として指定できます。次の例は、警告を一時的に無効にしてから元の状態に戻す方法を示しています。</target>
        </trans-unit>
        <trans-unit id="61742c227154417d89297281bcce7e4e5e8fedc5" translate="yes" xml:space="preserve">
          <source>A structure returned from &lt;code&gt;optimset&lt;/code&gt; or an empty matrix to indicate that defaults should be used.</source>
          <target state="translated">デフォルトを使用する必要があることを示すために &lt;code&gt;optimset&lt;/code&gt; または空の行列から返される構造。</target>
        </trans-unit>
        <trans-unit id="77727e267c4e7dc95534c4bd88fd84e670cce812" translate="yes" xml:space="preserve">
          <source>A structure with two fields:</source>
          <target state="translated">2つのフィールドを持つ構造体。</target>
        </trans-unit>
        <trans-unit id="0dd3c12dfff1f5676697c204a39c14c0443cbab2" translate="yes" xml:space="preserve">
          <source>A summary view of a data set can be generated quickly with the &lt;code&gt;statistics&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;statistics&lt;/code&gt; 機能を使用すると、データセットの概要ビューをすばやく生成できます。</target>
        </trans-unit>
        <trans-unit id="1654365fc4120066cc09c7c36a0dd5f8d454f221" translate="yes" xml:space="preserve">
          <source>A third boolean argument &lt;var&gt;hilev&lt;/var&gt; can be passed to specify whether the function should preserve listeners/callbacks, e.g., for legends or hggroups. The default is false.</source>
          <target state="translated">3番目のブール引数 &lt;var&gt;hilev&lt;/var&gt; を渡して、関数がリスナーやコールバックを保存するかどうかを指定できます（例：凡例またはhggroups）。デフォルトはfalseです。</target>
        </trans-unit>
        <trans-unit id="6d75f5f81f67ea31a3056ffa68bec8f8f19bac01" translate="yes" xml:space="preserve">
          <source>A third means of creating a sparse matrix is to work directly with the data in compressed row format. An example of this advanced technique might be</source>
          <target state="translated">疎な行列を作成する第三の方法は,圧縮された行形式のデータを直接扱うことです.この高度な手法の例としては,次のようなものがあります.</target>
        </trans-unit>
        <trans-unit id="362eede00ee117b0165de172e4502b345561eadc" translate="yes" xml:space="preserve">
          <source>A three-dimensional surface.</source>
          <target state="translated">立体的な表面。</target>
        </trans-unit>
        <trans-unit id="7d713206f596ccf7d007e35a28a723f3a87709a4" translate="yes" xml:space="preserve">
          <source>A trivial example which redefines the &lt;code&gt;sin&lt;/code&gt; function to be the &lt;code&gt;cos&lt;/code&gt; function shows how &lt;code&gt;builtin&lt;/code&gt; works.</source>
          <target state="translated">&lt;code&gt;sin&lt;/code&gt; 関数を &lt;code&gt;cos&lt;/code&gt; 関数に再定義する簡単な例は、 &lt;code&gt;builtin&lt;/code&gt; 関数がどのように機能するかを示しています。</target>
        </trans-unit>
        <trans-unit id="24198dcd1fc096f9713d1489a3433c09f093abdc" translate="yes" xml:space="preserve">
          <source>A tube diameter of zero corresponds to the smallest scaling value along the streamline and the largest tube diameter corresponds to the largest scaling value.</source>
          <target state="translated">チューブ径がゼロの場合は、流線に沿った最小のスケーリング値に対応し、最大のチューブ径は最大のスケーリング値に対応します。</target>
        </trans-unit>
        <trans-unit id="07dd706fc8b0e02a221851a1d480f3f47ef063bc" translate="yes" xml:space="preserve">
          <source>A typical case is &lt;var&gt;A&lt;/var&gt; defined by &lt;code&gt;&lt;var&gt;b&lt;/var&gt; ^ &lt;var&gt;m&lt;/var&gt;&lt;/code&gt;, in which the result &lt;code&gt;&lt;var&gt;A&lt;/var&gt; * &lt;var&gt;x&lt;/var&gt;&lt;/code&gt; can be computed without even forming explicitly &lt;code&gt;&lt;var&gt;b&lt;/var&gt; ^ &lt;var&gt;m&lt;/var&gt;&lt;/code&gt; by:</source>
          <target state="translated">典型的なケースは &lt;code&gt;&lt;var&gt;b&lt;/var&gt; ^ &lt;var&gt;m&lt;/var&gt;&lt;/code&gt; ^ &lt;var&gt;m&lt;/var&gt; で定義された &lt;var&gt;A&lt;/var&gt; であり、結果 &lt;code&gt;&lt;var&gt;A&lt;/var&gt; * &lt;var&gt;x&lt;/var&gt;&lt;/code&gt; * &lt;var&gt;x&lt;/var&gt; は次のように明示的に &lt;code&gt;&lt;var&gt;b&lt;/var&gt; ^ &lt;var&gt;m&lt;/var&gt;&lt;/code&gt; ^ &lt;var&gt;m&lt;/var&gt; を形成することなく計算できます。</target>
        </trans-unit>
        <trans-unit id="c9554a73a78de665b6f0e5b92b864e88f99cd2f9" translate="yes" xml:space="preserve">
          <source>A uibuttongroup is used to group uicontrol objects.</source>
          <target state="translated">uibuttongroupは、uicontrolオブジェクトをグループ化するために使用されます。</target>
        </trans-unit>
        <trans-unit id="d8bf838c2d61fd48e54d3eafee45392924c63e3d" translate="yes" xml:space="preserve">
          <source>A uicontrol object is used to create simple interactive controls such as push buttons, checkboxes, edit and list controls.</source>
          <target state="translated">uicontrol オブジェクトは、プッシュボタン、チェックボックス、編集、リストコントロールなどのシンプルなインタラクティブコントロールを作成するために使用されます。</target>
        </trans-unit>
        <trans-unit id="8c6c19554ecbfcb080f1804219276384229fb304" translate="yes" xml:space="preserve">
          <source>A uitable object is used to show tables of data in a figure window.</source>
          <target state="translated">uitableオブジェクトは、図ウィンドウにデータの表を表示するために使用されます。</target>
        </trans-unit>
        <trans-unit id="35bc901d80ea5d20ae94e0755c10f785b8cec64d" translate="yes" xml:space="preserve">
          <source>A user-defined function executed once per algorithm iteration.</source>
          <target state="translated">アルゴリズムの繰り返しごとに1回実行されるユーザ定義の関数。</target>
        </trans-unit>
        <trans-unit id="593b4854610faabcd2c42950cb43c354620583f6" translate="yes" xml:space="preserve">
          <source>A user-defined string to label the graphics object.</source>
          <target state="translated">グラフィックスオブジェクトにラベルを付けるためのユーザー定義の文字列。</target>
        </trans-unit>
        <trans-unit id="eab3b35792ebb0ae6fee1465a1ed36ff02a7821f" translate="yes" xml:space="preserve">
          <source>A valid function name is like a valid variable name: a sequence of letters, digits and underscores, not starting with a digit. Functions share the same pool of names as variables.</source>
          <target state="translated">有効な関数名は、有効な変数名のようなものです。関数は変数と同じ名前のプールを共有しています。</target>
        </trans-unit>
        <trans-unit id="26cc2105a675ed992a28eb44ca3b7b30e648efaf" translate="yes" xml:space="preserve">
          <source>A valid variable name is a sequence of letters, digits, and underscores that does not begin with a digit.</source>
          <target state="translated">有効な変数名は、桁で始まらない文字、数字、アンダースコアのシーケンスです。</target>
        </trans-unit>
        <trans-unit id="e3c5ea4cc3fb875a4964217ece1831d1461100c7" translate="yes" xml:space="preserve">
          <source>A valid variable name is composed of letters, digits, and underscores (&quot;_&quot;), and the first character must not be a digit.</source>
          <target state="translated">有効な変数名は、文字、数字、アンダースコア(&quot;_&quot;)で構成され、最初の文字は数字であってはなりません。</target>
        </trans-unit>
        <trans-unit id="53946557f5f64abe69989902436664c06811255e" translate="yes" xml:space="preserve">
          <source>A value of 1 or true instructs &lt;code&gt;textscan&lt;/code&gt; to concatenate consecutive columns of the same class in the output cell array. A value of 0 or false (default) leaves output in distinct columns.</source>
          <target state="translated">1またはtrueの値は、出力セル配列内の同じクラスの連続する列を連結するように &lt;code&gt;textscan&lt;/code&gt; に指示します。値0またはfalse（デフォルト）は、出力を別個の列に残します。</target>
        </trans-unit>
        <trans-unit id="34dcb175bd5d9a421d85c56f430a7a6174cd08f9" translate="yes" xml:space="preserve">
          <source>A value of &lt;code&gt;info = 1&lt;/code&gt; indicates that the solution has converged.</source>
          <target state="translated">&lt;code&gt;info = 1&lt;/code&gt; 値は、解が収束したことを示します。</target>
        </trans-unit>
        <trans-unit id="da4de0acd3d1feb3b3ac6044c929af6ca2da983c" translate="yes" xml:space="preserve">
          <source>A value of &lt;var&gt;zf&lt;/var&gt; larger than 1 &amp;ldquo;zooms in&amp;rdquo; such that the scene appears magnified:</source>
          <target state="translated">1より大きい &lt;var&gt;zf&lt;/var&gt; の値は、シーンが拡大して見えるように「ズームイン」します。</target>
        </trans-unit>
        <trans-unit id="9d110e1d04f6cf5d9b6b0f0a914c44adc1362658" translate="yes" xml:space="preserve">
          <source>A value smaller than 1 &amp;ldquo;zooms out&amp;rdquo; so the camera can see more of the scene:</source>
          <target state="translated">1より小さい値は「ズームアウト」するため、カメラはより多くのシーンを見ることができます。</target>
        </trans-unit>
        <trans-unit id="15475e7f2c9146b71ba5831226c9706d2dce001e" translate="yes" xml:space="preserve">
          <source>A variable is declared global by using a &lt;code&gt;global&lt;/code&gt; declaration statement. The following statements are all global declarations.</source>
          <target state="translated">変数は、 &lt;code&gt;global&lt;/code&gt; 宣言ステートメントを使用してグローバルに宣言されます。次のステートメントはすべてグローバル宣言です。</target>
        </trans-unit>
        <trans-unit id="598ab3f2a6f2cc2835f65ec9919fd9d05793875c" translate="yes" xml:space="preserve">
          <source>A variable may be declared global using a &lt;code&gt;global&lt;/code&gt; declaration statement. The following statements are all global declarations.</source>
          <target state="translated">変数は、 &lt;code&gt;global&lt;/code&gt; 宣言ステートメントを使用してグローバルに宣言できます。次のステートメントはすべてグローバル宣言です。</target>
        </trans-unit>
        <trans-unit id="e683463cccc9697f714f248e06aa83d3db37c3f7" translate="yes" xml:space="preserve">
          <source>A variable name is a valid expression by itself. It represents the variable&amp;rsquo;s current value. Variables are given new values with &lt;em&gt;assignment operators&lt;/em&gt; and &lt;em&gt;increment operators&lt;/em&gt;. See &lt;a href=&quot;assignment-ops#Assignment-Ops&quot;&gt;Assignment Expressions&lt;/a&gt;.</source>
          <target state="translated">変数名はそれ自体が有効な式です。変数の現在の値を表します。変数には、&lt;em&gt;代入演算子&lt;/em&gt;と&lt;em&gt;増分演算&lt;/em&gt;&lt;em&gt;子&lt;/em&gt;を使用して新しい値が与えられ&lt;em&gt;ます&lt;/em&gt;。&lt;a href=&quot;assignment-ops#Assignment-Ops&quot;&gt;割り当て式を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="f27e18c0dfe9836e51b7b8e773d8cddd499a3397" translate="yes" xml:space="preserve">
          <source>A variable that has been declared &lt;em&gt;global&lt;/em&gt; may be accessed from within a function body without having to pass it as a formal parameter.</source>
          <target state="translated">&lt;em&gt;グローバル&lt;/em&gt;として宣言された変数は、仮引数として渡さなくても、関数本体内からアクセスできます。</target>
        </trans-unit>
        <trans-unit id="fe18d6d8a4b85c1c946678b73fe67049ae473367" translate="yes" xml:space="preserve">
          <source>A variable that has been declared &lt;em&gt;persistent&lt;/em&gt; within a function will retain its contents in memory between subsequent calls to the same function. The difference between persistent variables and global variables is that persistent variables are local in scope to a particular function and are not visible elsewhere.</source>
          <target state="translated">関数内で&lt;em&gt;永続的&lt;/em&gt;であると宣言された変数は、同じ関数への後続の呼び出し間でその内容をメモリに保持します。永続変数とグローバル変数の違いは、永続変数は特定の関数のスコープ内でローカルであり、他の場所には表示されないことです。</target>
        </trans-unit>
        <trans-unit id="eea06a58e04a54c6901a0549a692694ec079119e" translate="yes" xml:space="preserve">
          <source>A vector is a 2-D array where one of the dimensions is equal to 1 (either 1xN or Nx1). As a consequence of this definition, a 1x1 array (a scalar) is also a vector.</source>
          <target state="translated">ベクトルは,次元の1つが1に等しい2次元配列です(1xNまたはNx1).この定義の結果として,1x1 の配列(スカラー)もベクトルになります.</target>
        </trans-unit>
        <trans-unit id="81281e8d079c716bc4b2e4ef6f0ee14872d0695c" translate="yes" xml:space="preserve">
          <source>A vector is a 2-D array where one of the dimensions is equal to 1. As a consequence a 1x1 array, or scalar, is also a vector.</source>
          <target state="translated">ベクトルは,次元の1つが1に等しい2次元配列です.結果として,1x1の配列,またはスカラもまたベクトルです.</target>
        </trans-unit>
        <trans-unit id="682dd16f45c06577f1eb9953aeddb4234eaa1814" translate="yes" xml:space="preserve">
          <source>A vector of the following parameters that can be used to control the initial condition calculation.</source>
          <target state="translated">初期条件の計算を制御するために使用できる以下のパラメータのベクトル。</target>
        </trans-unit>
        <trans-unit id="7ca41dd2218026e088dd1d939d575d54cede09b0" translate="yes" xml:space="preserve">
          <source>A vector of the same length as the state specifying the type of inequality constraint. Each element of the vector corresponds to an element of the state and should be assigned one of the following codes</source>
          <target state="translated">不等式制約の種類を指定する状態と同じ長さのベクトル。ベクトルの各要素は状態の要素に対応しており、以下のコードのいずれかを割り当てる必要があります。</target>
        </trans-unit>
        <trans-unit id="9f199fa859ed65bd938e6430f7ffca1f9ed6e086" translate="yes" xml:space="preserve">
          <source>A vector of the same length as the state vector. A nonzero element indicates that the corresponding element of the state vector is an algebraic variable (i.e., its derivative does not appear explicitly in the equation set).</source>
          <target state="translated">状態ベクトルと同じ長さのベクトル.ゼロ以外の要素は状態ベクトルの対応する要素が代数変数であることを示します(すなわち、その微分が式集合の中に明示的に現れません)。</target>
        </trans-unit>
        <trans-unit id="a9a0eab9ea62c522fdca03fcad41d97d73edfef5" translate="yes" xml:space="preserve">
          <source>A very basic &lt;code&gt;classdef&lt;/code&gt; value class (see &lt;a href=&quot;value-classes-vs_002e-handle-classes#Value-Classes-vs_002e-Handle-Classes&quot;&gt;Value Classes vs. Handle Classes&lt;/a&gt;) is defined by:</source>
          <target state="translated">非常に基本的な &lt;code&gt;classdef&lt;/code&gt; 値クラス（&lt;a href=&quot;value-classes-vs_002e-handle-classes#Value-Classes-vs_002e-Handle-Classes&quot;&gt;値クラスとハンドルクラスを&lt;/a&gt;参照）は、次のように定義されます。</target>
        </trans-unit>
        <trans-unit id="d64b123d4fc154f5110f49676a6f0a04ff0ba1e6" translate="yes" xml:space="preserve">
          <source>A very common programming pattern is to increment an existing variable with a given value, like this</source>
          <target state="translated">非常に一般的なプログラミングパターンは、次のように既存の変数を与えられた値でインクリメントすることです。</target>
        </trans-unit>
        <trans-unit id="0443587797679798ef5c3a1d2b129a3696b67408" translate="yes" xml:space="preserve">
          <source>A very specific form of polynomial interpretation is the Pad&amp;eacute; approximant. For control systems, a continuous-time delay can be modeled very simply with the approximant.</source>
          <target state="translated">多項式解釈の非常に具体的な形式は、パデ近似です。制御システムの場合、連続時間遅延は近似を使用して非常に簡単にモデル化できます。</target>
        </trans-unit>
        <trans-unit id="daa7f93fc1224f787fc7ef92319f6663a241012f" translate="yes" xml:space="preserve">
          <source>A waterfall plot is similar to a &lt;code&gt;meshz&lt;/code&gt; plot except only mesh lines for the rows of &lt;var&gt;z&lt;/var&gt; (x-values) are shown.</source>
          <target state="translated">ウォーターフォールプロットは、 &lt;var&gt;z&lt;/var&gt; （x値）の行のメッシュ線のみが表示されることを除いて、 &lt;code&gt;meshz&lt;/code&gt; プロットに似ています。</target>
        </trans-unit>
        <trans-unit id="259c81bbd57f396fff94bc9cdafadf886513f1db" translate="yes" xml:space="preserve">
          <source>A-F</source>
          <target state="translated">A-F</target>
        </trans-unit>
        <trans-unit id="45f39029bce507261d4c051f0faa5cdd041338ef" translate="yes" xml:space="preserve">
          <source>A. George, J.W.H. Liu.</source>
          <target state="translated">A.ジョージ、J.</target>
        </trans-unit>
        <trans-unit id="d6b0b631033856bb20a8ad2ea0168279fbed5060" translate="yes" xml:space="preserve">
          <source>A.1 Oct-Files</source>
          <target state="translated">A.1 オクトファイル</target>
        </trans-unit>
        <trans-unit id="fa728181fe8a7c48fd7d8bf9dfdda6b29b463196" translate="yes" xml:space="preserve">
          <source>A.1.1 Getting Started with Oct-Files</source>
          <target state="translated">A.1.1 Oct-Filesを使い始めよう</target>
        </trans-unit>
        <trans-unit id="4281b650a5a1a2fe5d556d9e6809cbca52f44955" translate="yes" xml:space="preserve">
          <source>A.1.10 Allocating Local Memory in Oct-Files</source>
          <target state="translated">A.1.10 Oct-Fileでのローカルメモリの割り当て</target>
        </trans-unit>
        <trans-unit id="38ab2f2b0a1074471c96948743b2320ce0f1d29b" translate="yes" xml:space="preserve">
          <source>A.1.11 Input Parameter Checking in Oct-Files</source>
          <target state="translated">A.1.11 Oct-Filesでの入力パラメータチェック</target>
        </trans-unit>
        <trans-unit id="1f972d102739122ee0d7da57a881169d3181f3db" translate="yes" xml:space="preserve">
          <source>A.1.12 Exception and Error Handling in Oct-Files</source>
          <target state="translated">A.1.12 Oct-Fileの例外とエラー処理</target>
        </trans-unit>
        <trans-unit id="cabc0c05131e93631993cd0f24a89aa0e0f4afcb" translate="yes" xml:space="preserve">
          <source>A.1.13 Documentation and Testing of Oct-Files</source>
          <target state="translated">A.1.13 Oct-Fileの文書化とテスト</target>
        </trans-unit>
        <trans-unit id="5d8d1e8ba980f935b3d669f24ff7b87043319e34" translate="yes" xml:space="preserve">
          <source>A.1.2 Matrices and Arrays in Oct-Files</source>
          <target state="translated">A.1.2 Oct-Fileの行列と配列</target>
        </trans-unit>
        <trans-unit id="30d30c7e055ac71f79c35ac6432524657515b570" translate="yes" xml:space="preserve">
          <source>A.1.3 Character Strings in Oct-Files</source>
          <target state="translated">A.1.3 Oct-Fileの文字列</target>
        </trans-unit>
        <trans-unit id="a613bff926cf4353392d5feaedb015143856cb91" translate="yes" xml:space="preserve">
          <source>A.1.4 Cell Arrays in Oct-Files</source>
          <target state="translated">A.1.4 オクトファイルのセルアレイ</target>
        </trans-unit>
        <trans-unit id="46bb3ce7ca344be861d81f82c586476437519d66" translate="yes" xml:space="preserve">
          <source>A.1.5 Structures in Oct-Files</source>
          <target state="translated">A.1.5 Oct-Filesの構造</target>
        </trans-unit>
        <trans-unit id="1ba145acd37d7519673a0370650a95425165fb05" translate="yes" xml:space="preserve">
          <source>A.1.6 Sparse Matrices in Oct-Files</source>
          <target state="translated">A.1.6 Oct-Fileのスパース行列</target>
        </trans-unit>
        <trans-unit id="d524851544c0f0113d4fbb3d037e63f19156bd6b" translate="yes" xml:space="preserve">
          <source>A.1.6.1 Array and Sparse Class Differences</source>
          <target state="translated">A.1.6.1 配列と疎なクラスの違い</target>
        </trans-unit>
        <trans-unit id="aaf330ccec1e5312f5b5c94d11a398ae63ffed01" translate="yes" xml:space="preserve">
          <source>A.1.6.2 Creating Sparse Matrices in Oct-Files</source>
          <target state="translated">A.1.6.2 Oct-Fileでのスパース行列の作成</target>
        </trans-unit>
        <trans-unit id="c6309b0cc128cabd43e9850f98ddf5a65614aaf0" translate="yes" xml:space="preserve">
          <source>A.1.6.3 Using Sparse Matrices in Oct-Files</source>
          <target state="translated">A.1.6.3 Oct-Fileでのスパース行列の使用</target>
        </trans-unit>
        <trans-unit id="92b830b335894c43ae499fefae7b187b77c8999a" translate="yes" xml:space="preserve">
          <source>A.1.7 Accessing Global Variables in Oct-Files</source>
          <target state="translated">A.1.7 Oct-Fileでのグローバル変数へのアクセス</target>
        </trans-unit>
        <trans-unit id="79db6457460d54709920892b7b2546ccbb0493d8" translate="yes" xml:space="preserve">
          <source>A.1.8 Calling Octave Functions from Oct-Files</source>
          <target state="translated">A.1.8 Oct-FileからのOctave関数の呼び出し</target>
        </trans-unit>
        <trans-unit id="78c9c0806c945f0388cf61f63c02a68c1ec46f17" translate="yes" xml:space="preserve">
          <source>A.1.9 Calling External Code from Oct-Files</source>
          <target state="translated">A.1.9 Oct-Fileからの外部コードの呼び出し</target>
        </trans-unit>
        <trans-unit id="460b59dc11f6b741abf14b80ba426d2a41d70f8e" translate="yes" xml:space="preserve">
          <source>A.2 Mex-Files</source>
          <target state="translated">A.2 メックスファイル</target>
        </trans-unit>
        <trans-unit id="45c648501f38b62934427a88ec849017400d7eb0" translate="yes" xml:space="preserve">
          <source>A.2.1 Getting Started with Mex-Files</source>
          <target state="translated">A.2.1 Mex-Filesを始めるには</target>
        </trans-unit>
        <trans-unit id="b783c3ddf67defdca89401aef2099a09ace11e73" translate="yes" xml:space="preserve">
          <source>A.2.2 Working with Matrices and Arrays in Mex-Files</source>
          <target state="translated">A.2.2 Mex-Fileでの行列と配列の操作</target>
        </trans-unit>
        <trans-unit id="e254aa98863467a647154401a0d5a6a005efc472" translate="yes" xml:space="preserve">
          <source>A.2.3 Character Strings in Mex-Files</source>
          <target state="translated">A.2.3 Mex-Files の文字列</target>
        </trans-unit>
        <trans-unit id="37e2c68053d712051f7b75a29cdd67b81735b1d4" translate="yes" xml:space="preserve">
          <source>A.2.4 Cell Arrays with Mex-Files</source>
          <target state="translated">A.2.4 メックスファイルを用いたセルアレイ</target>
        </trans-unit>
        <trans-unit id="0d9c9fb28fb61d8f1e386306ee2e1f1c800fb97d" translate="yes" xml:space="preserve">
          <source>A.2.5 Structures with Mex-Files</source>
          <target state="translated">A.2.5 Mex-Filesを用いた構造物</target>
        </trans-unit>
        <trans-unit id="e2368d10b248ec8e67b1e48109353fc3a0099340" translate="yes" xml:space="preserve">
          <source>A.2.6 Sparse Matrices with Mex-Files</source>
          <target state="translated">A.2.6 Mex-Fileを用いた疎行列</target>
        </trans-unit>
        <trans-unit id="133e5d4c69596732dbd721e36c5319b621acb930" translate="yes" xml:space="preserve">
          <source>A.2.7 Calling Other Functions in Mex-Files</source>
          <target state="translated">A.2.7 Mex-File での他の関数の呼び出し</target>
        </trans-unit>
        <trans-unit id="25be3ec0679600c1a9518086ca072bf3113fb232" translate="yes" xml:space="preserve">
          <source>A.3 Standalone Programs</source>
          <target state="translated">A.3 スタンドアロンプログラム</target>
        </trans-unit>
        <trans-unit id="74765498848b63cf4512d394f8bbe630ef326f97" translate="yes" xml:space="preserve">
          <source>A.4 Java Interface</source>
          <target state="translated">A.4 Javaインタフェース</target>
        </trans-unit>
        <trans-unit id="b79eddb437e87d2d095dba3c45379fbe5012a798" translate="yes" xml:space="preserve">
          <source>A.4.1 Making Java Classes Available</source>
          <target state="translated">A.4.1 Javaクラスを利用可能にする</target>
        </trans-unit>
        <trans-unit id="f33b832eadf7ec8b16a413a39e7cbc3e04d27517" translate="yes" xml:space="preserve">
          <source>A.4.2 How to use Java from within Octave</source>
          <target state="translated">A.4.2 Octave内からJavaを使用する方法</target>
        </trans-unit>
        <trans-unit id="c7a5c7d825d6ffa8abbb3fc9ab3765b636264d44" translate="yes" xml:space="preserve">
          <source>A.4.3 Set up the JVM</source>
          <target state="translated">A.4.3 JVMのセットアップ</target>
        </trans-unit>
        <trans-unit id="0b125b6c5446b02ac34845e3746c52933ea07ae8" translate="yes" xml:space="preserve">
          <source>A.4.4 Java Interface Functions</source>
          <target state="translated">A.4.4 Javaインタフェース関数</target>
        </trans-unit>
        <trans-unit id="90c94b8aec75d497fa0d2a1de48c1a6a5fc31d26" translate="yes" xml:space="preserve">
          <source>AA = balance (A)</source>
          <target state="translated">AA=残高(A</target>
        </trans-unit>
        <trans-unit id="4d5155328e7a0f5b9a25fab509b88fb27da00c1e" translate="yes" xml:space="preserve">
          <source>AA = balance (A, opt)</source>
          <target state="translated">AA=バランス(A、オプト</target>
        </trans-unit>
        <trans-unit id="970093678b182127f60bb51b8af2c94d539eca3a" translate="yes" xml:space="preserve">
          <source>ABCDEF</source>
          <target state="translated">ABCDEF</target>
        </trans-unit>
        <trans-unit id="a85e90f9835e6411e691ebde65582614cea81732" translate="yes" xml:space="preserve">
          <source>ALT</source>
          <target state="translated">ALT</target>
        </trans-unit>
        <trans-unit id="80d305c58f97edfae92a3627f5a66d9bef4d8d46" translate="yes" xml:space="preserve">
          <source>AM</source>
          <target state="translated">AM</target>
        </trans-unit>
        <trans-unit id="31d6178a7eb20a16d12a4af4b47a5307ab8e83d9" translate="yes" xml:space="preserve">
          <source>API for portable 2-D and 3-D graphics (&lt;a href=&quot;https://www.opengl.org&quot;&gt;https://www.opengl.org&lt;/a&gt;). An OpenGL implementation can be used to provide a renderer for Octave&amp;rsquo;s graphics functions. Octave&amp;rsquo;s OpenGL-based graphics functions usually outperform the gnuplot-based graphics functions because plot data can be rendered directly instead of sending data and commands to gnuplot for interpretation and rendering. Since Octave 4.0, the default graphics renderer (&lt;code&gt;&quot;qt&quot;&lt;/code&gt;) has been OpenGL-based.</source>
          <target state="translated">ポータブル2Dおよび3Dグラフィックス用のAPI（&lt;a href=&quot;https://www.opengl.org&quot;&gt;https://www.opengl.org&lt;/a&gt;）。OpenGL実装を使用して、Octaveのグラフィック関数のレンダラーを提供できます。OctaveのOpenGLベースのグラフィックス関数は通常gnuplotベースのグラフィックス関数よりも優れています。これは、解釈とレンダリングのためにデータとコマンドをgnuplotに送信する代わりに、プロットデータを直接レンダリングできるためです。Octave 4.0以降、デフォルトのグラフィックスレンダラー（ &lt;code&gt;&quot;qt&quot;&lt;/code&gt; ）はOpenGLベースになっています。</target>
        </trans-unit>
        <trans-unit id="2b881d2b6da4b4575dab68553d054ad1e2015236" translate="yes" xml:space="preserve">
          <source>API for portable 2-D and 3-D graphics (&lt;a href=&quot;https://www.opengl.org&quot;&gt;https://www.opengl.org&lt;/a&gt;). An OpenGL implementation is required to provide Octave&amp;rsquo;s OpenGL-based graphics functions. Octave&amp;rsquo;s OpenGL-based graphics functions usually outperform the gnuplot-based graphics functions because plot data can be rendered directly instead of sending data and commands to gnuplot for interpretation and rendering.</source>
          <target state="translated">ポータブル2Dおよび3Dグラフィック用のAPI（&lt;a href=&quot;https://www.opengl.org&quot;&gt;https://www.opengl.org&lt;/a&gt;）。OctaveのOpenGLベースのグラフィックス機能を提供するには、OpenGL実装が必要です。OctaveのOpenGLベースのグラフィックス関数は通常、gnuplotベースのグラフィックス関数よりも優れています。これは、解釈とレンダリングのためにgnuplotにデータとコマンドを送信する代わりに、プロットデータを直接レンダリングできるためです。</target>
        </trans-unit>
        <trans-unit id="02827c241b6c10e63aac33285f392dba4c9d9516" translate="yes" xml:space="preserve">
          <source>ARPACK</source>
          <target state="translated">ARPACK</target>
        </trans-unit>
        <trans-unit id="5ea03c1bb5afb762d11ebe051e1afc8aecb94aa2" translate="yes" xml:space="preserve">
          <source>ASCII art</source>
          <target state="translated">アスキーアート</target>
        </trans-unit>
        <trans-unit id="7f6e23b8c1040563ad15c608f791c2b83583275f" translate="yes" xml:space="preserve">
          <source>ASCII mode is only appropriate for text files as it will convert the remote host&amp;rsquo;s newline representation to the local host&amp;rsquo;s newline representation.</source>
          <target state="translated">ASCIIモードは、リモートホストの改行表現をローカルホストの改行表現に変換するため、テキストファイルにのみ適しています。</target>
        </trans-unit>
        <trans-unit id="30d5416e04f324c64bf4b2fe43eaafd2066316e0" translate="yes" xml:space="preserve">
          <source>ASCII table</source>
          <target state="translated">アスキー表</target>
        </trans-unit>
        <trans-unit id="47e3b0927170e8b515ab89d87e624e31169ba9ae" translate="yes" xml:space="preserve">
          <source>ATLAS instead of reference &lt;small&gt;BLAS&lt;/small&gt; and &lt;small&gt;LAPACK&lt;/small&gt;</source>
          <target state="translated">参照&lt;small&gt;BLAS&lt;/small&gt;および&lt;small&gt;LAPACKの&lt;/small&gt;代わりにATLAS&lt;small&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="348d8b740f7c7e0db6f55b151cd3dba93727b311" translate="yes" xml:space="preserve">
          <source>AWK, sed, and other Unix utilities</source>
          <target state="translated">AWK,sed,その他の Unix ユーティリティ</target>
        </trans-unit>
        <trans-unit id="da2dbf9d6ee8e87e354d7d154c12e5b2c6a652cc" translate="yes" xml:space="preserve">
          <source>A_LO = tril (A)</source>
          <target state="translated">A_LO=トリル(A</target>
        </trans-unit>
        <trans-unit id="e8c07093389a0517d27bc9ced00aef1676005603" translate="yes" xml:space="preserve">
          <source>A_LO = tril (A, k)</source>
          <target state="translated">A_LO=tril (A,k)</target>
        </trans-unit>
        <trans-unit id="1ad95f28a217e1ca7d8984230875bb6bf3302181" translate="yes" xml:space="preserve">
          <source>A_LO = tril (A, k, pack)</source>
          <target state="translated">A_LO=tril (A,k,pack)</target>
        </trans-unit>
        <trans-unit id="6b7c0d6059af0be9730ca0b2a4c34c5e500a00f7" translate="yes" xml:space="preserve">
          <source>A_UP = triu (A)</source>
          <target state="translated">A_UP=triu (A)</target>
        </trans-unit>
        <trans-unit id="7e58c7ef3126e46c2f00e5eaf7b06cdaad3cb310" translate="yes" xml:space="preserve">
          <source>A_UP = triu (A, k)</source>
          <target state="translated">A_UP=triu (A,k)</target>
        </trans-unit>
        <trans-unit id="ef7eae80e60e14c2821813d461061c334424698a" translate="yes" xml:space="preserve">
          <source>A_UP = triu (A, k, pack)</source>
          <target state="translated">A_UP=triu (A,k,pack)</target>
        </trans-unit>
        <trans-unit id="c3b1354957064f90a14a0b8903ae1bce0e675785" translate="yes" xml:space="preserve">
          <source>Abbreviated month name</source>
          <target state="translated">月名の略称</target>
        </trans-unit>
        <trans-unit id="ee20eabfa2c5006473fff9d5c8e63492799e01ab" translate="yes" xml:space="preserve">
          <source>Abbreviated weekday name</source>
          <target state="translated">平日の略称</target>
        </trans-unit>
        <trans-unit id="d0fc0c86fcd7a1b25e429341cf282cf553bde304" translate="yes" xml:space="preserve">
          <source>Absolute Central Moment. The moment about the mean ignoring sign defined as</source>
          <target state="translated">絶対中心モーメント。として定義された平均無視符号に関するモーメント。</target>
        </trans-unit>
        <trans-unit id="35b97d430a042dd803c2cb8f67aff430165b40d6" translate="yes" xml:space="preserve">
          <source>Absolute Raw Moment. The moment about zero ignoring sign defined as</source>
          <target state="translated">絶対生モーメント。次のように定義された符号を無視したゼロに関するモーメント</target>
        </trans-unit>
        <trans-unit id="cc6f394660f89f88adf29c49fc23e43fb09bf612" translate="yes" xml:space="preserve">
          <source>Absolute error tolerance.</source>
          <target state="translated">絶対的な誤差の許容範囲。</target>
        </trans-unit>
        <trans-unit id="40e9a41fce87fb50f39ad6444090c076c945f2d5" translate="yes" xml:space="preserve">
          <source>Absolute tolerance for single precision; may be zero for pure relative error test.</source>
          <target state="translated">単精度の絶対許容差;純粋な相対誤差テストではゼロになることがあります。</target>
        </trans-unit>
        <trans-unit id="5c2e7f86ba1a6450ae36178abd54ce12cbb423f4" translate="yes" xml:space="preserve">
          <source>Absolute tolerance used to check if the current basic solution is dual feasible. It is not recommended that you change this parameter unless you have a detailed understanding of its purpose.</source>
          <target state="translated">現在の基本解がデュアル・フィージビリティーであるかどうかをチェックするために使用される絶対的な許容値です。このパラメータの目的を詳細に理解していない限り、このパラメータを変更することはお勧めしません。</target>
        </trans-unit>
        <trans-unit id="cb3f347f6a683bfecd235d44eda71cfe9ce6365c" translate="yes" xml:space="preserve">
          <source>Absolute tolerance. May be either vector or scalar. If a vector, it must match the dimension of the state vector, and the relative tolerance must also be a vector of the same length.</source>
          <target state="translated">絶対的な許容範囲。ベクトルでもスカラでもよい。ベクトルの場合は、状態ベクトルの次元と一致しなければならず、相対的な許容範囲も同じ長さのベクトルでなければなりません。</target>
        </trans-unit>
        <trans-unit id="8ced34df7d9d2c2c1c20e8ac426e28108151c8b1" translate="yes" xml:space="preserve">
          <source>Absolute tolerance. May be either vector or scalar. If a vector, it must match the dimension of the state vector.</source>
          <target state="translated">絶対的な許容範囲。ベクトルでもスカラでもよい。ベクトルの場合は、状態ベクトルの次元と一致しなければなりません。</target>
        </trans-unit>
        <trans-unit id="4add528287ed1e7af2dc1c034890d6704563f0c1" translate="yes" xml:space="preserve">
          <source>Absolute tolerance; may be zero for pure relative error test.</source>
          <target state="translated">絶対許容差;純粋な相対誤差テストではゼロになることがあります。</target>
        </trans-unit>
        <trans-unit id="a5dfdefe44f85179e1f26cf32a070b93b187c70a" translate="yes" xml:space="preserve">
          <source>Abstract Window Toolkit for GUIs.</source>
          <target state="translated">GUI用の抽象ウィンドウツールキット。</target>
        </trans-unit>
        <trans-unit id="9a35b0d370c4ab723ff7fea9b08e600af198011a" translate="yes" xml:space="preserve">
          <source>Accept the current line regardless of where the cursor is. If the line is non-empty, add it to the history list. If the line was a history line, then restore the history line to its original state.</source>
          <target state="translated">カーソルの位置に関係なく、現在の行を受け入れます。行が空でない場合は、その行を履歴リストに追加します。行が履歴行であった場合は、履歴行を元の状態に戻す。</target>
        </trans-unit>
        <trans-unit id="7c168b32789f6553d5cac525f1f61786730bbb8e" translate="yes" xml:space="preserve">
          <source>Access via Handle</source>
          <target state="translated">ハンドルからのアクセス</target>
        </trans-unit>
        <trans-unit id="cc9aa0b74f357b6a47a0de409d63b615fb54a5c7" translate="yes" xml:space="preserve">
          <source>Accessing Global Variables in Oct-Files</source>
          <target state="translated">Oct-Fileでのグローバル変数へのアクセス</target>
        </trans-unit>
        <trans-unit id="e140449fab408364162fe133f9c2a1c9cd956b58" translate="yes" xml:space="preserve">
          <source>Accessing multiple elements of a cell array with the &amp;lsquo;</source>
          <target state="translated">'を使用してセル配列の複数の要素にアクセスする</target>
        </trans-unit>
        <trans-unit id="4131041b474b3b65a2c3f23311e04559f53738e2" translate="yes" xml:space="preserve">
          <source>Accessing the fields of the structure can then be performed with &lt;code&gt;mxGetField&lt;/code&gt; and &lt;code&gt;mxSetField&lt;/code&gt; or alternatively with the &lt;code&gt;mxGetFieldByNumber&lt;/code&gt; and &lt;code&gt;mxSetFieldByNumber&lt;/code&gt; functions.</source>
          <target state="translated">構造体のフィールドへのアクセスは、 &lt;code&gt;mxGetField&lt;/code&gt; および &lt;code&gt;mxSetField&lt;/code&gt; 、あるいは &lt;code&gt;mxGetFieldByNumber&lt;/code&gt; および &lt;code&gt;mxSetFieldByNumber&lt;/code&gt; 関数を使用して実行できます。</target>
        </trans-unit>
        <trans-unit id="96cb4fd1198a5fe5f8986be2f436c95576818651" translate="yes" xml:space="preserve">
          <source>According to broadcasting rules, if one operand is a scalar and the other is a matrix, the scalar is compared to each element of the matrix in turn, and the result is the same size as the matrix.</source>
          <target state="translated">放送ルールによれば、一方のオペランドがスカラーで他方のオペランドが行列の場合、スカラーは行列の各要素と順番に比較され、結果は行列と同じ大きさになる。</target>
        </trans-unit>
        <trans-unit id="20272651e1709ece1f65c33e2d84c4babba6caaa" translate="yes" xml:space="preserve">
          <source>Accordingly, with &lt;a href=&quot;java-interface-functions#XREFjava_005fset&quot;&gt;java_set&lt;/a&gt; the value of a field can be set. Note that only public Java fields are accessible from within Octave.</source>
          <target state="translated">したがって、&lt;a href=&quot;java-interface-functions#XREFjava_005fset&quot;&gt;java_set&lt;/a&gt;を使用してフィールドの値を設定できます。Octave内からアクセスできるのはパブリックJavaフィールドのみであることに注意してください。</target>
        </trans-unit>
        <trans-unit id="cb406e59fc6ba0ecc95f653b5397477c34802d77" translate="yes" xml:space="preserve">
          <source>Accumulation</source>
          <target state="translated">Accumulation</target>
        </trans-unit>
        <trans-unit id="41c954926825139112b6857a16f1df9f0b98506c" translate="yes" xml:space="preserve">
          <source>Accumulation functions</source>
          <target state="translated">蓄積機能</target>
        </trans-unit>
        <trans-unit id="b0ebcfe59f276beb7f6238d812ac61ce48d3d9c0" translate="yes" xml:space="preserve">
          <source>Acknowledgements</source>
          <target state="translated">Acknowledgements</target>
        </trans-unit>
        <trans-unit id="97c89a4d6630adeb18fa12ba9976a31413fe293e" translate="yes" xml:space="preserve">
          <source>Action</source>
          <target state="translated">Action</target>
        </trans-unit>
        <trans-unit id="0aca286f20ef283339ca9b7aaa2c65ea156c2b8b" translate="yes" xml:space="preserve">
          <source>Adaptive Quadrature - Revisited</source>
          <target state="translated">適応直交法-再訪</target>
        </trans-unit>
        <trans-unit id="8277c41fb8ab45c4ced9ea46bbece603fc99db57" translate="yes" xml:space="preserve">
          <source>Adaptive quadrature is used to minimize the estimate of error until the following is satisfied:</source>
          <target state="translated">以下の条件を満たすまで誤差の推定値を最小化するために、適応的な求積法が使用されます。</target>
        </trans-unit>
        <trans-unit id="a150512502495212d823b60991dff9611b40a1cc" translate="yes" xml:space="preserve">
          <source>Add &lt;var&gt;clspath&lt;/var&gt; to the beginning of the dynamic class path of the Java virtual machine.</source>
          <target state="translated">Java仮想マシンの動的クラスパスの先頭に &lt;var&gt;clspath&lt;/var&gt; を追加します。</target>
        </trans-unit>
        <trans-unit id="55ce6be8ca2c86ee92b5a51e291923c59cb3d05a" translate="yes" xml:space="preserve">
          <source>Add &lt;var&gt;clspath&lt;/var&gt; to the dynamic class path of the Java virtual machine.</source>
          <target state="translated">Java仮想マシンの動的クラスパスに &lt;var&gt;clspath&lt;/var&gt; を追加します。</target>
        </trans-unit>
        <trans-unit id="879b53ad5a722f32a68eb7064ff8d3ce3d2039fa" translate="yes" xml:space="preserve">
          <source>Add &lt;var&gt;q&lt;/var&gt; amount of time (with units &lt;var&gt;f&lt;/var&gt;) to the serial datenum, &lt;var&gt;d&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;q&lt;/var&gt; の時間（単位は &lt;var&gt;f&lt;/var&gt; ）をシリアル日付番号 &lt;var&gt;d&lt;/var&gt; に追加します。</target>
        </trans-unit>
        <trans-unit id="43e2ba9f12ee92e4f78e14bca5f744ed6be529cb" translate="yes" xml:space="preserve">
          <source>Add a colorbar to the current axes.</source>
          <target state="translated">現在の軸にカラーバーを追加します。</target>
        </trans-unit>
        <trans-unit id="61be8243e9fae69b929a5f59899248f5302e2e9e" translate="yes" xml:space="preserve">
          <source>Add a light object to a figure using a simple interface.</source>
          <target state="translated">シンプルなインターフェースを使用して、図にライトオブジェクトを追加します。</target>
        </trans-unit>
        <trans-unit id="78e82477acc2b502535583ed8b0d0573ce8f814c" translate="yes" xml:space="preserve">
          <source>Add a light object to a plot</source>
          <target state="translated">プロットにライトオブジェクトを追加</target>
        </trans-unit>
        <trans-unit id="324ea96072bbf0b36a7b834ea4d2c0f79965a7d8" translate="yes" xml:space="preserve">
          <source>Add a light object to the current axes using spherical coordinates.</source>
          <target state="translated">球面座標を使用して、現在の軸にライトオブジェクトを追加します。</target>
        </trans-unit>
        <trans-unit id="cb1ebbeb12fcbbcbf913bf2108dddcefc6ef637b" translate="yes" xml:space="preserve">
          <source>Add a preview to EPS files. Supported formats are:</source>
          <target state="translated">EPSファイルにプレビューを追加します。サポートされている形式は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="9600040742d629a96651e34887a7c5740c064915" translate="yes" xml:space="preserve">
          <source>Add date-formatted tick labels to an axis.</source>
          <target state="translated">軸に日付書式の目盛りラベルを追加します。</target>
        </trans-unit>
        <trans-unit id="3adaf8b35f792a489a1dcc79b2ef465b99db9ca8" translate="yes" xml:space="preserve">
          <source>Add labels to the contours of a contour plot.</source>
          <target state="translated">等高線プロットの等高線にラベルを追加します。</target>
        </trans-unit>
        <trans-unit id="ffad07fcac178b407fb7c82bfe7427b2c86ee525" translate="yes" xml:space="preserve">
          <source>Add named directories to the function search path.</source>
          <target state="translated">関数の検索パスに名前付きディレクトリを追加します。</target>
        </trans-unit>
        <trans-unit id="98d306cc0a765430a03982138b7a8d070384e10e" translate="yes" xml:space="preserve">
          <source>Add named packages to the path. After loading a package it is possible to use the functions provided by the package. For example,</source>
          <target state="translated">名前付きパッケージをパスに追加します。パッケージをロードした後、そのパッケージが提供する関数を使用することができます。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="3ca5125a3c707438e18febebf18aee97545b21a3" translate="yes" xml:space="preserve">
          <source>Add new graphic objects to the current axes. This is equivalent to &lt;code&gt;hold on&lt;/code&gt;.</source>
          <target state="translated">現在のAxesに新しいグラフィックオブジェクトを追加します。これは &lt;code&gt;hold on&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="3283decac4594df00240d64107fe2f91443742c3" translate="yes" xml:space="preserve">
          <source>Add new graphic objects to the current figure.</source>
          <target state="translated">現在の図に新しいグラフィックオブジェクトを追加します。</target>
        </trans-unit>
        <trans-unit id="2a791b855afd05212ce0bc6d5f42921c38618676" translate="yes" xml:space="preserve">
          <source>Add path to the head of the search path for function files. The value of &lt;var&gt;path&lt;/var&gt; specified on the command line will override any value of &lt;code&gt;OCTAVE_PATH&lt;/code&gt; found in the environment, but not any commands in the system or user startup files that set the internal load path through one of the path functions.</source>
          <target state="translated">関数ファイルの検索パスの先頭にパスを追加します。コマンドラインで指定された &lt;var&gt;path&lt;/var&gt; の値は、環境で見つかった &lt;code&gt;OCTAVE_PATH&lt;/code&gt; の値をオーバーライドしますが、パス関数の1つを介して内部ロードパスを設定するシステムまたはユーザースタートアップファイルのコマンドはオーバーライドしません。</target>
        </trans-unit>
        <trans-unit id="7a9897248425c5ea9626590b3d439db7b7dbbf4e" translate="yes" xml:space="preserve">
          <source>Add path to the head of the search path for images. The value of &lt;var&gt;path&lt;/var&gt; specified on the command line will override any value of &lt;code&gt;OCTAVE_IMAGE_PATH&lt;/code&gt; found in the environment, but not any commands in the system or user startup files that call the &lt;code&gt;IMAGE_PATH&lt;/code&gt; function.</source>
          <target state="translated">画像の検索パスの先頭にパスを追加します。コマンドラインで指定された &lt;var&gt;path&lt;/var&gt; の値は、環境で見つかった &lt;code&gt;OCTAVE_IMAGE_PATH&lt;/code&gt; の値を上書きしますが、 &lt;code&gt;IMAGE_PATH&lt;/code&gt; 関数を呼び出すシステムまたはユーザー起動ファイルのコマンドは上書きしません。</target>
        </trans-unit>
        <trans-unit id="34c543ec65ad15e531f515c8d8948cb70e028815" translate="yes" xml:space="preserve">
          <source>Add path to the head of the search path for images. The value of &lt;var&gt;path&lt;/var&gt; specified on the command line will override any value of &lt;code&gt;OCTAVE_IMAGE_PATH&lt;/code&gt; found in the environment, but not any commands in the system or user startup files that set the built-in variable &lt;code&gt;IMAGE_PATH&lt;/code&gt;.</source>
          <target state="translated">画像の検索パスの先頭にパスを追加します。コマンドラインで指定された &lt;var&gt;path&lt;/var&gt; の値は、環境で見つかった &lt;code&gt;OCTAVE_IMAGE_PATH&lt;/code&gt; の値を上書きしますが、組み込み変数 &lt;code&gt;IMAGE_PATH&lt;/code&gt; を設定するシステムまたはユーザースタートアップファイルのコマンドは上書きしません。</target>
        </trans-unit>
        <trans-unit id="ae85965efd5530db8784e81826e67076f4f8cdb2" translate="yes" xml:space="preserve">
          <source>Add the definition DEF to the compiler call.</source>
          <target state="translated">コンパイラの呼び出しに定義defを追加します。</target>
        </trans-unit>
        <trans-unit id="ad3b4ad5dbca88facc141f912bfed37f1f7cfeff" translate="yes" xml:space="preserve">
          <source>Add the include directory DIR to compile commands.</source>
          <target state="translated">コマンドをコンパイルするためのインクルードディレクトリDIRを追加します。</target>
        </trans-unit>
        <trans-unit id="12f0d799ba7506e33276904ca250787235593693" translate="yes" xml:space="preserve">
          <source>Add the library LIB to the link command.</source>
          <target state="translated">リンクコマンドにライブラリLIBを追加します。</target>
        </trans-unit>
        <trans-unit id="b5f536f080c667ea2399171f9fc48031a06e8890" translate="yes" xml:space="preserve">
          <source>Add the library directory DIR to the link command.</source>
          <target state="translated">リンクコマンドにライブラリディレクトリDIRを追加します。</target>
        </trans-unit>
        <trans-unit id="5be1e4a8ccc211070580d179fc88fbdde71cd6da" translate="yes" xml:space="preserve">
          <source>Add the named function or function handle &lt;var&gt;fcn&lt;/var&gt; to the list of functions to call periodically when Octave is waiting for input.</source>
          <target state="translated">名前付き関数または関数ハンドル &lt;var&gt;fcn&lt;/var&gt; を関数のリストに追加して、Octaveが入力を待機しているときに定期的に呼び出すようにします。</target>
        </trans-unit>
        <trans-unit id="54c6c5096f88c87560cc837ac713b736fe6c5ffd" translate="yes" xml:space="preserve">
          <source>Add the next character that you type to the line verbatim. This is how to insert things like</source>
          <target state="translated">入力した次の文字を、その行に逐語的に追加します。のようなものを挿入する方法です。</target>
        </trans-unit>
        <trans-unit id="e8e1b1a2971a46ddb7e3ff8664d2e0cca97e8bfa" translate="yes" xml:space="preserve">
          <source>Add the preference &lt;var&gt;pref&lt;/var&gt; and associated value &lt;var&gt;val&lt;/var&gt; to the named preference group &lt;var&gt;group&lt;/var&gt;.</source>
          <target state="translated">名前付き設定グループ &lt;var&gt;group&lt;/var&gt; に設定 &lt;var&gt;pref&lt;/var&gt; と関連する値 &lt;var&gt;val&lt;/var&gt; を追加します。</target>
        </trans-unit>
        <trans-unit id="de908bf0b6dcbd04ab0ef94e1df703689cbfff34" translate="yes" xml:space="preserve">
          <source>Add the run-time path to the link command.</source>
          <target state="translated">linkコマンドにランタイムパスを追加します。</target>
        </trans-unit>
        <trans-unit id="62c11c7ee6a6629ff679734433348e9c1ac4c955" translate="yes" xml:space="preserve">
          <source>Adding &amp;rsquo;*&amp;rsquo; to the start of any method above forces &lt;code&gt;interp1&lt;/code&gt; to assume that &lt;var&gt;x&lt;/var&gt; is uniformly spaced, and only &lt;code&gt;&lt;var&gt;x&lt;/var&gt;(1)&lt;/code&gt; and &lt;code&gt;&lt;var&gt;x&lt;/var&gt;(2)&lt;/code&gt; are referenced. This is usually faster, and is never slower. The default method is &lt;code&gt;&quot;linear&quot;&lt;/code&gt;.</source>
          <target state="translated">上記のメソッドの先頭に「*」を追加すると、 &lt;code&gt;interp1&lt;/code&gt; は &lt;var&gt;x&lt;/var&gt; が等間隔に配置され、 &lt;code&gt;&lt;var&gt;x&lt;/var&gt;(1)&lt;/code&gt; と &lt;code&gt;&lt;var&gt;x&lt;/var&gt;(2)&lt;/code&gt; のみが参照されると想定します。これは通常より速く、決して遅くなることはありません。デフォルトの方法は &lt;code&gt;&quot;linear&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="4b5b5fb67d93f9117697b055a69f9c8a816d57f4" translate="yes" xml:space="preserve">
          <source>Adding a diagonal matrix to a full matrix only operates on the diagonal elements. Thus,</source>
          <target state="translated">完全な行列に対角線の行列を追加すると、対角線の要素に対してのみ動作します。したがって</target>
        </trans-unit>
        <trans-unit id="b3fd2af17cba49a75302698893fdd47663d6a322" translate="yes" xml:space="preserve">
          <source>Addition. If both operands are matrices, the number of rows and columns must both agree, or they must be broadcastable to the same shape.</source>
          <target state="translated">加算です。オペランドが両方とも行列である場合、行と列の数が両方とも一致しなければならないか、同じ形状にブロードキャスト可能でなければなりません。</target>
        </trans-unit>
        <trans-unit id="0447d6bfd09800b82881120f781f5d1d3e23b435" translate="yes" xml:space="preserve">
          <source>Additional Calling Syntaxes</source>
          <target state="translated">追加の呼び出し構文</target>
        </trans-unit>
        <trans-unit id="c056418031dbea0f66c1f5fb72666941f6b6b787" translate="yes" xml:space="preserve">
          <source>Additional arguments &lt;var&gt;p1&lt;/var&gt;, etc., are passed directly to the function &lt;var&gt;f&lt;/var&gt;. To use default values for &lt;var&gt;tol&lt;/var&gt; and &lt;var&gt;trace&lt;/var&gt;, one may pass empty matrices ([]).</source>
          <target state="translated">追加の引数 &lt;var&gt;p1&lt;/var&gt; などは、関数 &lt;var&gt;f&lt;/var&gt; に直接渡されます。 &lt;var&gt;tol&lt;/var&gt; と &lt;var&gt;trace&lt;/var&gt; にデフォルト値を使用するには、空の行列（[]）を渡します。</target>
        </trans-unit>
        <trans-unit id="a9c5027f7e50f04ff05bb5b67ba152f31fda5505" translate="yes" xml:space="preserve">
          <source>Additional arguments are summarized below.</source>
          <target state="translated">追加の論拠は以下にまとめられています。</target>
        </trans-unit>
        <trans-unit id="a049381559e8c336efe4fa460310ed899b58f5f7" translate="yes" xml:space="preserve">
          <source>Additional arguments determine the shape of the return matrix. When no arguments are specified a single random integer is returned. If one argument &lt;var&gt;n&lt;/var&gt; is specified then a square matrix (&lt;var&gt;n&lt;/var&gt; x &lt;var&gt;n&lt;/var&gt;) is returned. Two or more arguments will return a multi-dimensional matrix (&lt;var&gt;m&lt;/var&gt; x &lt;var&gt;n&lt;/var&gt; x &amp;hellip;).</source>
          <target state="translated">追加の引数は、戻り行列の形状を決定します。引数を指定しないと、単一のランダムな整数が返されます。1つの引数 &lt;var&gt;n&lt;/var&gt; を指定すると、正方行列（ &lt;var&gt;n&lt;/var&gt; x &lt;var&gt;n&lt;/var&gt; ）が返されます。2つ以上の引数が多次元行列（ &lt;var&gt;m&lt;/var&gt; x &lt;var&gt;n&lt;/var&gt; x&amp;hellip;）を返します。</target>
        </trans-unit>
        <trans-unit id="9ef9910eac39a9c0f67a9df782f0603c3119bbe0" translate="yes" xml:space="preserve">
          <source>Additional arguments name a list of parent classes from which the new class is derived.</source>
          <target state="translated">追加の引数には、新しいクラスが派生する親クラスのリストを指定します。</target>
        </trans-unit>
        <trans-unit id="f4f92256872764d03337f006920f18898026ed14" translate="yes" xml:space="preserve">
          <source>Additional arguments to pass to the external plotting program may also be given. The default value is &lt;code&gt;&quot;gnuplot&quot;&lt;/code&gt; with no additional arguments. See &lt;a href=&quot;installation#Installation&quot;&gt;Installation&lt;/a&gt;.</source>
          <target state="translated">外部プロットプログラムに渡す追加の引数も指定できます。デフォルト値は &lt;code&gt;&quot;gnuplot&quot;&lt;/code&gt; で、追加の引数はありません。&lt;a href=&quot;installation#Installation&quot;&gt;インストールを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="3dcf1e434ce0ea6fd932801239e8679840dcb922" translate="yes" xml:space="preserve">
          <source>Additional arguments, are passed directly to &lt;var&gt;f&lt;/var&gt;. To use the default value for &lt;var&gt;tol&lt;/var&gt; or &lt;var&gt;quadf&lt;/var&gt; one may pass &lt;code&gt;':'&lt;/code&gt; or an empty matrix ([]).</source>
          <target state="translated">追加の引数は直接 &lt;var&gt;f&lt;/var&gt; に渡されます。 &lt;var&gt;tol&lt;/var&gt; または &lt;var&gt;quadf&lt;/var&gt; のデフォルト値を使用するには、 &lt;code&gt;':'&lt;/code&gt; または空の行列（[]）を渡します。</target>
        </trans-unit>
        <trans-unit id="be5674f80d63a4d9c55960001e7afefb5cbae95f" translate="yes" xml:space="preserve">
          <source>Additional devices are supported by Ghostscript. Some examples are:</source>
          <target state="translated">追加のデバイスはGhostscriptでサポートされています。いくつかの例があります。</target>
        </trans-unit>
        <trans-unit id="f8388cd8f249e3ebcce51ac26721d45380f0470f" translate="yes" xml:space="preserve">
          <source>Additional information about the size of the facets of a Voronoi diagram, and which points of a set of points is in a polygon can be had with the &lt;code&gt;polyarea&lt;/code&gt; and &lt;code&gt;inpolygon&lt;/code&gt; functions respectively.</source>
          <target state="translated">ボロノイ図のファセットのサイズ、およびポイントセットのどのポイントがポリゴン内にあるかに関する追加情報は、それぞれ &lt;code&gt;inpolygon&lt;/code&gt; 関数とinpolygon関数で &lt;code&gt;polyarea&lt;/code&gt; できます。</target>
        </trans-unit>
        <trans-unit id="d53bc593ae8a7a39ddeafe46e37c20844631bcdf" translate="yes" xml:space="preserve">
          <source>Additional name/value argument pairs may be used to specify the following options:</source>
          <target state="translated">追加の名前/値の引数ペアを使用して、以下のオプションを指定することができます。</target>
        </trans-unit>
        <trans-unit id="0ccdb138a5a80e383ad88458acf2e7443dcfb0f1" translate="yes" xml:space="preserve">
          <source>Additional optional parameters can be specified using &lt;code&gt;&quot;&lt;var&gt;property&lt;/var&gt;&quot;, &lt;var&gt;value&lt;/var&gt;&lt;/code&gt; pairs. Valid properties are:</source>
          <target state="translated">追加のオプションパラメータは &lt;code&gt;&quot;&lt;var&gt;property&lt;/var&gt;&quot;, &lt;var&gt;value&lt;/var&gt;&lt;/code&gt; 「 &lt;var&gt;property&lt;/var&gt; 」と &lt;var&gt;value&lt;/var&gt; ペアを使用して指定できます。有効なプロパティは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="9f11388a950a6d807a292ab20b4aff4c6c9992d8" translate="yes" xml:space="preserve">
          <source>Additional options can be passed for &lt;small&gt;MATLAB&lt;/small&gt; compatibility, but are ignored.</source>
          <target state="translated">&lt;small&gt;MATLABとの&lt;/small&gt;互換性のために追加のオプションを渡すことができますが、無視されます。</target>
        </trans-unit>
        <trans-unit id="daa496df3eabaf4a93148f5ed3ede5535f297f1d" translate="yes" xml:space="preserve">
          <source>Additional property/value pairs are passed directly to the underlying axes object.</source>
          <target state="translated">追加のプロパティ/値のペアは、基礎となる軸オブジェクトに直接渡されます。</target>
        </trans-unit>
        <trans-unit id="e6a2f7d27a832e29a53a29343dcd1bd24a09ea3f" translate="yes" xml:space="preserve">
          <source>Additional property/value pairs are passed directly to the underlying axes object. The full list of properties is documented at &lt;a href=&quot;axes-properties#Axes-Properties&quot;&gt;Axes Properties&lt;/a&gt;.</source>
          <target state="translated">追加のプロパティ/値のペアは、基になるAxesオブジェクトに直接渡されます。プロパティの完全なリストは、&lt;a href=&quot;axes-properties#Axes-Properties&quot;&gt;AxesPropertiesに&lt;/a&gt;記載されています。</target>
        </trans-unit>
        <trans-unit id="d0d4f6fad9867c22a5c45d5b7658eddf4cc2e764" translate="yes" xml:space="preserve">
          <source>Additional property/value pairs are passed directly to the underlying patch object.</source>
          <target state="translated">追加のプロパティ/値のペアは、基礎となるパッチオブジェクトに直接渡されます。</target>
        </trans-unit>
        <trans-unit id="e573914d7ded986fc344a5caaeb065a05a6922f0" translate="yes" xml:space="preserve">
          <source>Additional property/value pairs are passed directly to the underlying patch object. The full list of properties is documented at &lt;a href=&quot;patch-properties#Patch-Properties&quot;&gt;Patch Properties&lt;/a&gt;.</source>
          <target state="translated">追加のプロパティ/値のペアは、基になるパッチオブジェクトに直接渡されます。プロパティの完全なリストは、&lt;a href=&quot;patch-properties#Patch-Properties&quot;&gt;パッチのプロパティに&lt;/a&gt;記載されています。</target>
        </trans-unit>
        <trans-unit id="398a9dc30f978f6d3a9ee61f7cdcb15641aa76bc" translate="yes" xml:space="preserve">
          <source>Additional property/value pairs are passed to the underlying patch command.</source>
          <target state="translated">追加のプロパティ/値のペアは、基礎となるパッチコマンドに渡されます。</target>
        </trans-unit>
        <trans-unit id="2a901691ad810b6de416ad21da1d924a87067d6b" translate="yes" xml:space="preserve">
          <source>Additional property/value pairs are passed to the underlying patch command. The full list of properties is documented at &lt;a href=&quot;patch-properties#Patch-Properties&quot;&gt;Patch Properties&lt;/a&gt;.</source>
          <target state="translated">追加のプロパティ/値のペアは、基になるパッチコマンドに渡されます。プロパティの完全なリストは、&lt;a href=&quot;patch-properties#Patch-Properties&quot;&gt;パッチのプロパティに&lt;/a&gt;記載されています。</target>
        </trans-unit>
        <trans-unit id="4c6d5d74b09fadf8c28b8a4eee3a50a0129e0f07" translate="yes" xml:space="preserve">
          <source>Additional property/value pairs that are valid properties of text objects can be given and are passed to the underlying text objects. Moreover, the contour group property &lt;code&gt;&quot;LabelSpacing&quot;&lt;/code&gt; is available which determines the spacing between labels on a contour to be specified. The default is 144 points, or 2 inches.</source>
          <target state="translated">テキストオブジェクトの有効なプロパティである追加のプロパティ/値のペアを指定して、基になるテキストオブジェクトに渡すことができます。また、指定するコンターのラベル間の間隔を決定するコンターグループプロパティ &lt;code&gt;&quot;LabelSpacing&quot;&lt;/code&gt; が利用できます。デフォルトは144ポイント、つまり2インチです。</target>
        </trans-unit>
        <trans-unit id="7d78329de6560cff7813a234a9c28a35edcc5234" translate="yes" xml:space="preserve">
          <source>Additional supported options: &lt;code&gt;milu&lt;/code&gt;, &lt;code&gt;droptol&lt;/code&gt;, &lt;code&gt;udiag&lt;/code&gt;, &lt;code&gt;thresh&lt;/code&gt;.</source>
          <target state="translated">追加でサポートされているオプション： &lt;code&gt;milu&lt;/code&gt; 、 &lt;code&gt;droptol&lt;/code&gt; 、 &lt;code&gt;udiag&lt;/code&gt; 、 &lt;code&gt;thresh&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1c745654b9906d5c131c23d43944958f3034f969" translate="yes" xml:space="preserve">
          <source>Additional supported options: &lt;code&gt;milu&lt;/code&gt;, &lt;code&gt;droptol&lt;/code&gt;.</source>
          <target state="translated">追加でサポートされているオプション： &lt;code&gt;milu&lt;/code&gt; 、 &lt;code&gt;droptol&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b14ce03e4375fad9f8983abe7abff68737ed8482" translate="yes" xml:space="preserve">
          <source>Additional supported options: &lt;code&gt;milu&lt;/code&gt;.</source>
          <target state="translated">追加でサポートされているオプション： &lt;code&gt;milu&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d54f28fc0f350be5930e3fd10c6ac11b27a91c4c" translate="yes" xml:space="preserve">
          <source>Additional user arguments can be passed to callback functions, and will be passed after the two default arguments. For example:</source>
          <target state="translated">追加のユーザー引数をコールバック関数に渡すことができ、2つのデフォルト引数の後に渡されます。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="515ad67c1542a0d57511a34069d52ed97b7d9edb" translate="yes" xml:space="preserve">
          <source>Additionally two trademark symbols are supported, just embrace the letters &amp;lsquo;</source>
          <target state="translated">さらに、2つの商標記号がサポートされています。</target>
        </trans-unit>
        <trans-unit id="c022cd87e430568a7ae691aefd7f5a998252aba2" translate="yes" xml:space="preserve">
          <source>Additionally, &lt;code&gt;cellfun&lt;/code&gt; accepts an arbitrary function &lt;var&gt;func&lt;/var&gt; in the form of an inline function, function handle, or the name of a function (in a character string). The function can take one or more arguments, with the inputs arguments given by &lt;var&gt;C&lt;/var&gt;, &lt;var&gt;D&lt;/var&gt;, etc. Equally the function can return one or more output arguments. For example:</source>
          <target state="translated">さらに、 &lt;code&gt;cellfun&lt;/code&gt; は、インライン関数、関数ハンドル、または関数名（文字列）の形式で任意の関数 &lt;var&gt;func&lt;/var&gt; を受け入れます。関数は1つ以上の引数を取ることができ、入力引数は &lt;var&gt;C&lt;/var&gt; 、 &lt;var&gt;D&lt;/var&gt; などによって与えられます。同様に、関数は1つ以上の出力引数を返すことができます。例えば：</target>
        </trans-unit>
        <trans-unit id="a9be1fcff9ad8364f038df91bcf677fdc5c68732" translate="yes" xml:space="preserve">
          <source>Additionally, &lt;code&gt;material&lt;/code&gt; can be called with a single output argument. If called without input arguments, a column cell vector &lt;var&gt;mtypes&lt;/var&gt; with the strings for all available materials is returned. If the one input argument &lt;var&gt;mtype_string&lt;/var&gt; is the name of a material, a 1x5 cell vector &lt;var&gt;refl_props&lt;/var&gt; with the reflectance properties of that material is returned. In both cases, no graphic properties are changed.</source>
          <target state="translated">さらに、 &lt;code&gt;material&lt;/code&gt; は単一の出力引数で呼び出すことができます。入力引数なしで呼び出された場合、すべての使用可能なマテリアルの文字列を &lt;var&gt;mtypes&lt;/var&gt; 列セルベクトルmtypesが返されます。1つの入力引数 &lt;var&gt;mtype_string&lt;/var&gt; がマテリアルの名前である場合、そのマテリアルの反射特性を持つ1x5セルベクトル &lt;var&gt;refl_props&lt;/var&gt; が返されます。どちらの場合も、グラフィックプロパティは変更されません。</target>
        </trans-unit>
        <trans-unit id="fcf6256a04236645edd2c3597571bb4e474cd348" translate="yes" xml:space="preserve">
          <source>Additionally, class methods can be defined as functions in a folder of the same name as the class prepended with the &amp;lsquo;</source>
          <target state="translated">さらに、クラスメソッドは、 'を前に付けたクラスと同じ名前のフォルダー内の関数として定義できます。</target>
        </trans-unit>
        <trans-unit id="ab22ed17a10b08a585d69a547c574f55303cb3c3" translate="yes" xml:space="preserve">
          <source>Additionally, if &lt;code&gt;sparse_auto_mutate&lt;/code&gt; is true, all sparse functions test the amount of memory occupied by the sparse matrix to see if the amount of storage used is larger than the amount used by the full equivalent. Therefore &lt;code&gt;speye (2) * 1&lt;/code&gt; will return a full matrix as the memory used is smaller for the full version than the sparse version.</source>
          <target state="translated">さらに、 &lt;code&gt;sparse_auto_mutate&lt;/code&gt; がtrueの場合、すべてのスパース関数はスパースマトリックスによって占有されているメモリの量をテストして、使用されるストレージの量が完全な同等のものによって使用される量よりも大きいかどうかを確認します。したがって、 &lt;code&gt;speye (2) * 1&lt;/code&gt; は、使用されるメモリがスパースバージョンよりもフルバージョンの方が小さいため、完全な行列を返します。</target>
        </trans-unit>
        <trans-unit id="8f87b2c82d9d62268375625d6e240de0e96cd08b" translate="yes" xml:space="preserve">
          <source>Additionally, if &lt;var&gt;i&lt;/var&gt; is a requested output then one of &lt;code&gt;&quot;first&quot;&lt;/code&gt; or &lt;code&gt;&quot;last&quot;&lt;/code&gt; may be given as an input. If &lt;code&gt;&quot;last&quot;&lt;/code&gt; is specified, return the highest possible indices in &lt;var&gt;i&lt;/var&gt;, otherwise, if &lt;code&gt;&quot;first&quot;&lt;/code&gt; is specified, return the lowest. The default is &lt;code&gt;&quot;last&quot;&lt;/code&gt;.</source>
          <target state="translated">さらに、 &lt;var&gt;i&lt;/var&gt; が要求された出力である場合、 &lt;code&gt;&quot;first&quot;&lt;/code&gt; または &lt;code&gt;&quot;last&quot;&lt;/code&gt; いずれかを入力として指定できます。 &lt;code&gt;&quot;last&quot;&lt;/code&gt; が指定されている場合は、 &lt;var&gt;i&lt;/var&gt; の最大のインデックスを返します。それ以外の場合は、 &lt;code&gt;&quot;first&quot;&lt;/code&gt; が指定されている場合は、最小のインデックスを返します。デフォルトは &lt;code&gt;&quot;last&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="f66573b3453b3713e434a873e0d31da28a29f6b6" translate="yes" xml:space="preserve">
          <source>Additionally, if &lt;var&gt;i&lt;/var&gt; is a requested output then one of the flags &lt;code&gt;&quot;first&quot;&lt;/code&gt; or &lt;code&gt;&quot;last&quot;&lt;/code&gt; may be given. If &lt;code&gt;&quot;last&quot;&lt;/code&gt; is specified, return the highest possible indices in &lt;var&gt;i&lt;/var&gt;, otherwise, if &lt;code&gt;&quot;first&quot;&lt;/code&gt; is specified, return the lowest. The default is &lt;code&gt;&quot;first&quot;&lt;/code&gt;.</source>
          <target state="translated">さらに、 &lt;var&gt;i&lt;/var&gt; が要求された出力である場合、フラグ &lt;code&gt;&quot;first&quot;&lt;/code&gt; または &lt;code&gt;&quot;last&quot;&lt;/code&gt; いずれかを指定できます。 &lt;code&gt;&quot;last&quot;&lt;/code&gt; が指定されている場合は、 &lt;var&gt;i&lt;/var&gt; で可能な最高のインデックスを返します。それ以外の場合は、 &lt;code&gt;&quot;first&quot;&lt;/code&gt; が指定されている場合は、最低のインデックスを返します。デフォルトは &lt;code&gt;&quot;first&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="8d78940b21ee1dd185d630447ba0dc0de8b771b3" translate="yes" xml:space="preserve">
          <source>Additionally, index expressions also use lazy copying when Octave can determine that the indexed portion is contiguous in memory. For example:</source>
          <target state="translated">さらに、インデックス式は、Octaveがインデックス化された部分がメモリ上で連続していると判断できる場合には、遅延コピーも使用します。例えば,以下のようになります。</target>
        </trans-unit>
        <trans-unit id="ada3ae8d5c162a74f6cacc83c9333bbf64090272" translate="yes" xml:space="preserve">
          <source>Additionally, the following libraries use &lt;code&gt;int&lt;/code&gt; internally, so maximum problem sizes are always limited:</source>
          <target state="translated">さらに、次のライブラリは内部で &lt;code&gt;int&lt;/code&gt; を使用するため、最大問題サイズは常に制限されます。</target>
        </trans-unit>
        <trans-unit id="f42b9f41d68a0c627b7960f7f3b335fb5ea2fba1" translate="yes" xml:space="preserve">
          <source>Additionally, the following tools may be needed:</source>
          <target state="translated">さらに、以下のようなツールが必要になる場合があります。</target>
        </trans-unit>
        <trans-unit id="3b16d8a8319cfdc2d14b5c7422ef0c5cd635ce76" translate="yes" xml:space="preserve">
          <source>Additionally, there are dialog boxes for displaying help messages, warnings, or errors, and for getting text input from the user.</source>
          <target state="translated">さらに、ヘルプメッセージ、警告、エラーを表示するためのダイアログボックスや、ユーザーからのテキスト入力を取得するためのダイアログボックスがあります。</target>
        </trans-unit>
        <trans-unit id="5989a9e3e7f0c0f12db2d04ad60c803606686d4c" translate="yes" xml:space="preserve">
          <source>Additionally, you may append a &lt;code&gt;&quot;z&quot;&lt;/code&gt; to the mode string to open a gzipped file for reading or writing. For this to be successful, you must also open the file in binary mode.</source>
          <target state="translated">さらに、モード文字列に &lt;code&gt;&quot;z&quot;&lt;/code&gt; を追加して、読み取りまたは書き込み用にgzip圧縮されたファイルを開くことができます。これを成功させるには、ファイルをバイナリモードで開く必要もあります。</target>
        </trans-unit>
        <trans-unit id="962125c11e58f2ce0df60653f29ed2ecfc7c2353" translate="yes" xml:space="preserve">
          <source>Administrating Packages</source>
          <target state="translated">パッケージの管理</target>
        </trans-unit>
        <trans-unit id="844469f2b8d8412b5a4567e479daba7bde6a4013" translate="yes" xml:space="preserve">
          <source>Adobe Illustrator (obsolete for Gnuplot versions &amp;gt; 4.2)</source>
          <target state="translated">Adobe Illustrator（Gnuplotバージョン&amp;gt; 4.2では廃止）</target>
        </trans-unit>
        <trans-unit id="e4a9df64655f2d3ba6fe67579fc92c420e65f624" translate="yes" xml:space="preserve">
          <source>Advanced Indexing</source>
          <target state="translated">高度なインデックス作成</target>
        </trans-unit>
        <trans-unit id="1f295b836324624013c2fbd24b9174c066cc0e28" translate="yes" xml:space="preserve">
          <source>Advanced Plotting</source>
          <target state="translated">高度なプロッティング</target>
        </trans-unit>
        <trans-unit id="788fdafb40ba6d1020611357d53041215158e1c3" translate="yes" xml:space="preserve">
          <source>After a successful computation, the value of &lt;var&gt;istate&lt;/var&gt; will be 2 (consistent with the Fortran version of &lt;small&gt;LSODE&lt;/small&gt;).</source>
          <target state="translated">計算が成功すると、 &lt;var&gt;istate&lt;/var&gt; の値は2になります（&lt;small&gt;LSODEの&lt;/small&gt; Fortranバージョンと&lt;small&gt;一致&lt;/small&gt;）。</target>
        </trans-unit>
        <trans-unit id="55f6c75e576a28a1e5cf7461b47f52b55d9ce764" translate="yes" xml:space="preserve">
          <source>After a successful computation, the value of &lt;var&gt;istate&lt;/var&gt; will be greater than zero (consistent with the Fortran version of &lt;small&gt;DASPK&lt;/small&gt;).</source>
          <target state="translated">計算が成功すると、 &lt;var&gt;istate&lt;/var&gt; の値はゼロより大きくなります（&lt;small&gt;DASPKの&lt;/small&gt; Fortranバージョンと&lt;small&gt;一致します&lt;/small&gt;）。</target>
        </trans-unit>
        <trans-unit id="dbcfce5ac023b52cbebc3cff1463b5bd3e886e83" translate="yes" xml:space="preserve">
          <source>After a successful computation, the value of &lt;var&gt;istate&lt;/var&gt; will be greater than zero (consistent with the Fortran version of &lt;small&gt;DASSL&lt;/small&gt;).</source>
          <target state="translated">計算が成功すると、 &lt;var&gt;istate&lt;/var&gt; の値はゼロより大きくなります（&lt;small&gt;DASSLの&lt;/small&gt; Fortranバージョンと一致します）。</target>
        </trans-unit>
        <trans-unit id="8a5225740c7352fc38d6ca22b150550b62db8195" translate="yes" xml:space="preserve">
          <source>After all of the calling forms have been enumerated, the next line is a concise one-sentence summary of the function.</source>
          <target state="translated">すべての呼び出しフォームが列挙された後、次の行は関数の簡潔な一文要約です。</target>
        </trans-unit>
        <trans-unit id="641a80d7ffb9950b564ac7e884afdbc9b019fcde" translate="yes" xml:space="preserve">
          <source>After being marked as deprecated for two major releases, the following functions have been removed from Octave. The third column of the table shows the version of Octave in which the function was removed. Prior to removal, each function in the list was marked as deprecated for at least two major releases. All deprecated functions issue warnings explaining that they will be removed in a future version of Octave, and which function should be used instead.</source>
          <target state="translated">2つのメジャーリリースで非推奨とマークされた後,以下の関数がOctaveから削除されました。表の3番目の列は,その関数が削除されたOctaveのバージョンを示しています。除去される前に,リストの各関数は少なくとも2つのメジャーリリースで非推奨とマークされていました。すべての非推奨関数は,それらがOctaveの将来のバージョンで削除されることと,その代わりにどの関数を使用すべきかを説明する警告を発行します。</target>
        </trans-unit>
        <trans-unit id="abc1edab849dacf46a1cba1b85f77fed9b76108a" translate="yes" xml:space="preserve">
          <source>After defining the function API with these methods, the supplied arguments can be parsed with the &lt;code&gt;parse&lt;/code&gt; method and the parsing results accessed with the &lt;code&gt;Results&lt;/code&gt; accessor.</source>
          <target state="translated">これらのメソッドで関数APIを定義した後、指定された引数を &lt;code&gt;parse&lt;/code&gt; メソッドで解析し、 &lt;code&gt;Results&lt;/code&gt; アクセサーを使用して結果を解析できます。</target>
        </trans-unit>
        <trans-unit id="99b07fc25798c1fd795d08592620f454adfcdc79" translate="yes" xml:space="preserve">
          <source>After importing, the data may need to be transformed before further analysis. The &lt;code&gt;rescale&lt;/code&gt; function can shift and normalize a data set to a specified range.</source>
          <target state="translated">インポート後、さらに分析する前にデータを変換する必要がある場合があります。 &lt;code&gt;rescale&lt;/code&gt; 関数は、指定された範囲へのデータセットをシフトし、正規化することができます。</target>
        </trans-unit>
        <trans-unit id="839498171800fa5ea000f805ff788ab3e54e1f07" translate="yes" xml:space="preserve">
          <source>After the &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; arguments there can be 1, 2, or 4 parameters specifying the error values depending on the nature of the error values and the plot format &lt;var&gt;fmt&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;x&lt;/var&gt; 引数と &lt;var&gt;y&lt;/var&gt; 引数の後には、エラー値の性質とプロット形式 &lt;var&gt;fmt&lt;/var&gt; に応じて、エラー値を指定する1、2、または4つのパラメーターがあります。</target>
        </trans-unit>
        <trans-unit id="1419b4e9c9752e71c3a8086c187f2b0e48163032" translate="yes" xml:space="preserve">
          <source>After the summary there may be documentation on the inputs and outputs, examples of function usage, notes about the algorithm used, and references to related functions.</source>
          <target state="translated">概要の後には、入力と出力に関する文書、関数の使用例、使用されているアルゴリズムに関する注意事項、関連する関数への参照があるかもしれません。</target>
        </trans-unit>
        <trans-unit id="c0cf853f06f2de9c5afaa1218c6eb1669049f05f" translate="yes" xml:space="preserve">
          <source>After this expression is executed, the variable &lt;code&gt;z&lt;/code&gt; has the value 1. Whatever old value &lt;code&gt;z&lt;/code&gt; had before the assignment is forgotten. The &amp;lsquo;</source>
          <target state="translated">この式が実行されると、変数 &lt;code&gt;z&lt;/code&gt; の値は1になります。割り当て前の古い値 &lt;code&gt;z&lt;/code&gt; の値はすべて忘れられます。「</target>
        </trans-unit>
        <trans-unit id="4525c3bb93922857e95ef3a494c6d62d6903eeeb" translate="yes" xml:space="preserve">
          <source>After this it is possible to evaluate &lt;em&gt;f&lt;/em&gt; at any &lt;em&gt;x&lt;/em&gt; by writing &lt;code&gt;f(x)&lt;/code&gt;.</source>
          <target state="translated">この後、 &lt;code&gt;f(x)&lt;/code&gt; を記述することにより、任意の&lt;em&gt;xで&lt;/em&gt;&lt;em&gt;f&lt;/em&gt;を評価できます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bb8ec5278747e54be417fa72b0b6c6cb050b1b57" translate="yes" xml:space="preserve">
          <source>After this the directory &amp;lsquo;</source>
          <target state="translated">この後、ディレクトリ '</target>
        </trans-unit>
        <trans-unit id="3434417a8e169ae6812ea314999d1fcfdbeb322e" translate="yes" xml:space="preserve">
          <source>Algebraic eigenvalue balancing uses standard &lt;small&gt;LAPACK&lt;/small&gt; routines.</source>
          <target state="translated">代数固有値バランシングは、標準の&lt;small&gt;LAPACK&lt;/small&gt;ルーチンを使用します。</target>
        </trans-unit>
        <trans-unit id="6a038ebb6b16de1f4f549a1da48813e0c5e468a5" translate="yes" xml:space="preserve">
          <source>Algorithm Note: &lt;code&gt;condest&lt;/code&gt; uses a randomized algorithm to approximate the 1-norms. Therefore, if consistent results are required, the &lt;code&gt;&quot;state&quot;&lt;/code&gt; of the random generator should be fixed before invoking &lt;code&gt;condest&lt;/code&gt;.</source>
          <target state="translated">アルゴリズム注： &lt;code&gt;condest&lt;/code&gt; は、ランダム化アルゴリズムを使用して1ノルムを近似します。したがって、一貫した結果が必要な場合は、ランダムジェネレーターの &lt;code&gt;&quot;state&quot;&lt;/code&gt; を &lt;code&gt;condest&lt;/code&gt; を呼び出す前に修正する必要があります。</target>
        </trans-unit>
        <trans-unit id="1a14c3f1cf2d2b159d6561496ca82e4227c694b1" translate="yes" xml:space="preserve">
          <source>Algorithm Note: &lt;code&gt;normest1&lt;/code&gt; uses random numbers during evaluation. Therefore, if consistent results are required, the &lt;code&gt;&quot;state&quot;&lt;/code&gt; of the random generator should be fixed before invoking &lt;code&gt;normest1&lt;/code&gt;.</source>
          <target state="translated">アルゴリズム注： &lt;code&gt;normest1&lt;/code&gt; は、評価中に乱数を使用します。したがって、一貫した結果が必要な場合は、 &lt;code&gt;normest1&lt;/code&gt; を呼び出す前に、ランダムジェネレーターの &lt;code&gt;&quot;state&quot;&lt;/code&gt; を修正する必要があります。</target>
        </trans-unit>
        <trans-unit id="6806c0072d1a259c2daf56e6e8cc3c76d85a0ec3" translate="yes" xml:space="preserve">
          <source>Algorithm Notes: The &lt;small&gt;LAPACK&lt;/small&gt; library provides two routines for calculating the full singular value decomposition (left and right singular matrices as well as singular values). When calculating just the singular values the following discussion is not relevant.</source>
          <target state="translated">アルゴリズムに関する注記：&lt;small&gt;LAPACK&lt;/small&gt;ライブラリーは、完全な特異値分解（左および右の特異行列と特異値）を計算するための2つのルーチンを提供します。特異値のみを計算する場合、以下の説明は関係ありません。</target>
        </trans-unit>
        <trans-unit id="371282deef3cff30ed747af4d31c617cf9bce453" translate="yes" xml:space="preserve">
          <source>Algorithm Notes: When calculating the full decomposition (left and right singular matrices in addition to singular values) there is a choice of two routines in &lt;small&gt;LAPACK&lt;/small&gt;. The default routine used by Octave is &lt;code&gt;gesvd&lt;/code&gt;. The alternative is &lt;code&gt;gesdd&lt;/code&gt; which is 5X faster, but may use more memory and may be inaccurate for some input matrices. See the documentation for &lt;code&gt;svd_driver&lt;/code&gt; for more information on choosing a driver.</source>
          <target state="translated">アルゴリズムに関する注意：完全な分解（特異値に加えて左右の特異行列）を計算する場合、&lt;small&gt;LAPACKでは&lt;/small&gt; 2つのルーチンを選択できます。Octaveが使用するデフォルトのルーチンは &lt;code&gt;gesvd&lt;/code&gt; です。代わりの方法は &lt;code&gt;gesdd&lt;/code&gt; で5倍高速ですが、より多くのメモリを使用し、一部の入力行列では不正確になる場合があります。ドライバーの選択の詳細については、 &lt;code&gt;svd_driver&lt;/code&gt; のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="661238701f984d64e82da00db553696522487eb6" translate="yes" xml:space="preserve">
          <source>Algorithm taken from Golub and Van Loan,</source>
          <target state="translated">アルゴリズムはGolubとVan Loanから取得しました。</target>
        </trans-unit>
        <trans-unit id="04f7320c8d82a21ae8fd727c2ed0cf8b44ef5bd2" translate="yes" xml:space="preserve">
          <source>Algorithm terminated by &lt;code&gt;OutputFcn&lt;/code&gt;.</source>
          <target state="translated">アルゴリズムは &lt;code&gt;OutputFcn&lt;/code&gt; によって終了しました。</target>
        </trans-unit>
        <trans-unit id="3b0e292233723cf707d87dc7097f15f9c24a5c28" translate="yes" xml:space="preserve">
          <source>Algorithm: The normal vectors are calculated by taking the cross product of the diagonals of each of the quadrilateral faces in the meshgrid to find the normal vectors at the center of each face. Next, for each meshgrid point the four nearest normal vectors are averaged to obtain the final normal to the surface at the meshgrid point.</source>
          <target state="translated">アルゴリズム。法線ベクトルは、各面の中心にある法線ベクトルを見つけるために、メッシュグリッド内の四角形の各面の対角線の積を取ることによって計算されます。次に、各メッシュグリッド点について、4つの最も近い法線ベクトルが平均化され、メッシュグリッド点での表面への最終的な法線が得られます。</target>
        </trans-unit>
        <trans-unit id="7f119bec6d5a8e053f754a7e2b1d94bbd4f0d3c3" translate="yes" xml:space="preserve">
          <source>All Java-based routines are run in the JVM&amp;rsquo;s shared memory pool, a dedicated and separate part of memory claimed by the JVM from your computer&amp;rsquo;s total memory (which comprises physical RAM and virtual memory / swap space on hard disk).</source>
          <target state="translated">すべてのJavaベースのルーチンは、JVMの共有メモリプールで実行されます。これは、コンピューターの合計メモリ（ハードディスク上の物理RAMと仮想メモリ/スワップスペースで構成される）から、JVMが要求するメモリの専用部分です。</target>
        </trans-unit>
        <trans-unit id="59fd70f263ae2af6687c8d258c203bd2b5cf3aa4" translate="yes" xml:space="preserve">
          <source>All annotation objects share two properties:</source>
          <target state="translated">すべての注釈オブジェクトは、2つのプロパティを共有しています。</target>
        </trans-unit>
        <trans-unit id="834c6527da85cf6750d2cd832415588861b48472" translate="yes" xml:space="preserve">
          <source>All arguments must be numeric and either two-dimensional matrices or scalars. If any argument is of type sparse, the output will also be sparse.</source>
          <target state="translated">すべての引数は数値であり、2次元の行列かスカラでなければなりません。いずれかの引数がスパース型の場合、出力もスパースになります。</target>
        </trans-unit>
        <trans-unit id="0444ce038e1824a2bbbf841fa9363a2c73719f6a" translate="yes" xml:space="preserve">
          <source>All arguments must be the same size or scalar. For arrays, the greatest common divisor is calculated for each element individually. All elements must be ordinary or Gaussian (complex) integers. Note that for Gaussian integers, the gcd is only unique up to a phase factor (multiplication by 1, -1, i, or -i), so an arbitrary greatest common divisor among the four possible is returned.</source>
          <target state="translated">すべての引数は同じサイズかスカラでなければなりません。配列の場合、最大公約数は各要素に対して個別に計算されます。すべての要素は,通常の整数かガウス(複素)整数でなければなりません.ガウシアン整数の場合、gcdは位相因子(1,-1,i,-iによる乗算)までしか一意ではないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="b5c2f9d97ae998668068d4dda3ca7d062aaea08e" translate="yes" xml:space="preserve">
          <source>All characters in the pattern, including whitespace, are significant and are used in pattern matching. (default)</source>
          <target state="translated">空白を含むパターン内のすべての文字は有効であり、パターンマッチングで使用されます。(デフォルト)</target>
        </trans-unit>
        <trans-unit id="5b67bcc8a9ffbfd036fb1d77f059428298340caf" translate="yes" xml:space="preserve">
          <source>All class methods must be defined within &lt;code&gt;methods&lt;/code&gt; blocks. An exception to this rule is described at the end of this subsection. Those &lt;code&gt;methods&lt;/code&gt; blocks can have additional attributes specifying the access rights or whether the methods are static, i.e., methods that can be called without creating an object of that class.</source>
          <target state="translated">すべてのクラスメソッドは、 &lt;code&gt;methods&lt;/code&gt; ブロック内で定義する必要があります。この規則の例外については、このサブセクションの最後で説明します。これらの &lt;code&gt;methods&lt;/code&gt; ブロックには、アクセス権またはメソッドが静的であるかどうか、つまり、そのクラスのオブジェクトを作成せずに呼び出すことができるメソッドかどうかを指定する追加の属性を含めることができます。</target>
        </trans-unit>
        <trans-unit id="fd937bc3ec90d0214bccf9fd40e16800778c571c" translate="yes" xml:space="preserve">
          <source>All class properties must be defined within &lt;code&gt;properties&lt;/code&gt; blocks. The definition of a default value for a property is optional and can be omitted. The default initial value for each class property is &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">すべてのクラスプロパティは、 &lt;code&gt;properties&lt;/code&gt; ブロック内で定義する必要があります。プロパティのデフォルト値の定義はオプションであり、省略できます。各クラスプロパティのデフォルトの初期値は &lt;code&gt;[]&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="9f2c5033a0a28630bdbcea0a3d524ec7bb330533" translate="yes" xml:space="preserve">
          <source>All device formats accepted by &lt;code&gt;print&lt;/code&gt; may be used. Common formats are:</source>
          <target state="translated">&lt;code&gt;print&lt;/code&gt; 受け入れられているすべてのデバイス形式を使用できます。一般的な形式は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="187e841129e58a6f630d680147332484c236c093" translate="yes" xml:space="preserve">
          <source>All elements must be numeric and of the same size or scalar.</source>
          <target state="translated">すべての要素は数値で、同じサイズまたはスカラーでなければなりません。</target>
        </trans-unit>
        <trans-unit id="6ee94ae72ac7689fd84fe05054a6972bcb4baa33" translate="yes" xml:space="preserve">
          <source>All future commands issued during the current Octave session will be written to this new file (if the current setting of &lt;code&gt;history_save&lt;/code&gt; allows for this).</source>
          <target state="translated">現在のOctaveセッション中に発行される今後のすべてのコマンドは、この新しいファイルに書き込まれます（ &lt;code&gt;history_save&lt;/code&gt; の現在の設定でこれが許可されている場合）。</target>
        </trans-unit>
        <trans-unit id="6eab0b3414ce217c15c996c14a9def3a23a65d5a" translate="yes" xml:space="preserve">
          <source>All key-value pairs given (&lt;var&gt;name1&lt;/var&gt;, &lt;var&gt;value1&lt;/var&gt;, &amp;hellip;) are added as pairs of query parameters to the body of request method (&lt;code&gt;get&lt;/code&gt;, &lt;code&gt;post&lt;/code&gt;, &lt;code&gt;put&lt;/code&gt;, etc.).</source>
          <target state="translated">指定されたすべてのキーと値のペア（ &lt;var&gt;name1&lt;/var&gt; 、 &lt;var&gt;value1&lt;/var&gt; 、&amp;hellip;）は、クエリパラメーターのペアとしてリクエストメソッドの本体（ &lt;code&gt;get&lt;/code&gt; 、 &lt;code&gt;post&lt;/code&gt; 、 &lt;code&gt;put&lt;/code&gt; など）に追加されます。</target>
        </trans-unit>
        <trans-unit id="a61352eadb23427b1379bd7a6751c258363778c1" translate="yes" xml:space="preserve">
          <source>All key-value pairs given (&lt;var&gt;name1&lt;/var&gt;, &lt;var&gt;value1&lt;/var&gt;, &amp;hellip;) are appended as query parameters to &lt;var&gt;url&lt;/var&gt;. To place a query in the body of the message, use &lt;code&gt;webwrite&lt;/code&gt;. The web service defines the acceptable query parameters.</source>
          <target state="translated">指定されたすべてのキーと値のペア（ &lt;var&gt;name1&lt;/var&gt; 、 &lt;var&gt;value1&lt;/var&gt; 、&amp;hellip;）は、クエリパラメータとして &lt;var&gt;url&lt;/var&gt; に追加されます。メッセージの本文にクエリを配置するには、 &lt;code&gt;webwrite&lt;/code&gt; を使用します。Webサービスは、受け入れ可能なクエリパラメータを定義します。</target>
        </trans-unit>
        <trans-unit id="ce23de831afed44b2b7ba24a9661a822cce05c80" translate="yes" xml:space="preserve">
          <source>All libraries and header files will be installed in subdirectories of &lt;code&gt;$prefix64&lt;/code&gt; (you must choose the location of this directory).</source>
          <target state="translated">すべてのライブラリとヘッダーファイルは、 &lt;code&gt;$prefix64&lt;/code&gt; サブディレクトリにインストールされます（このディレクトリの場所を選択する必要があります）。</target>
        </trans-unit>
        <trans-unit id="b2c6271553eaf5a21eda5e02fb3f713d1aff5bcc" translate="yes" xml:space="preserve">
          <source>All of Octave&amp;rsquo;s comparison operators return a value of 1 if the comparison is true, or 0 if it is false. For matrix values, they all work on an element-by-element basis. Broadcasting rules apply. See &lt;a href=&quot;broadcasting#Broadcasting&quot;&gt;Broadcasting&lt;/a&gt;. For example:</source>
          <target state="translated">Octaveのすべての比較演算子は、比較が真の場合は1、偽の場合は0を返します。行列値の場合、これらはすべて要素ごとに機能します。放送ルールが適用されます。&lt;a href=&quot;broadcasting#Broadcasting&quot;&gt;Broadcastingを&lt;/a&gt;参照してください。例えば：</target>
        </trans-unit>
        <trans-unit id="281a4cde8876e88cd9eebce4d5efcd73c817ef21" translate="yes" xml:space="preserve">
          <source>All of the file formats supported by &lt;code&gt;save&lt;/code&gt; and &lt;code&gt;load&lt;/code&gt; are supported. In certain circumstances a user class might contain a field that it doesn&amp;rsquo;t make sense to save, or a field that needs to be initialized before it is saved. This can be done with the &lt;code&gt;saveobj&lt;/code&gt; method of the class.</source>
          <target state="translated">&lt;code&gt;save&lt;/code&gt; と &lt;code&gt;load&lt;/code&gt; サポートされているすべてのファイル形式がサポートされています。特定の状況では、ユーザークラスには、保存しても意味のないフィールドや、保存する前に初期化する必要のあるフィールドが含まれている場合があります。これは、クラスの &lt;code&gt;saveobj&lt;/code&gt; メソッドで実行できます。</target>
        </trans-unit>
        <trans-unit id="2c3cd487c3023f1c9dc2910a66a26a1c36ab61d6" translate="yes" xml:space="preserve">
          <source>All of the group objects contain data source parameters. There are string parameters that contain an expression that is evaluated to update the relevant data property of the group when the &lt;code&gt;refreshdata&lt;/code&gt; function is called.</source>
          <target state="translated">すべてのグループオブジェクトには、データソースパラメータが含まれています。 &lt;code&gt;refreshdata&lt;/code&gt; 関数が呼び出されたときにグループの関連データプロパティを更新するために評価される式を含む文字列パラメーターがあります。</target>
        </trans-unit>
        <trans-unit id="dfed15f906c112b3880ca4df1723f046f6353c24" translate="yes" xml:space="preserve">
          <source>All of the solvers above, can calculate an estimate of the condition number. This can be used to detect numerical stability problems in the solution and force a minimum norm solution to be used. However, for narrow banded, triangular or diagonal matrices, the cost of calculating the condition number is significant, and can in fact exceed the cost of factoring the matrix. Therefore the condition number is not calculated in these cases, and Octave relies on simpler techniques to detect singular matrices or the underlying &lt;small&gt;LAPACK&lt;/small&gt; code in the case of banded matrices.</source>
          <target state="translated">上記のすべてのソルバーは、条件数の推定を計算できます。これを使用して、解の数値安定性の問題を検出し、最小ノルム解を強制的に使用することができます。ただし、狭帯域、三角形、または対角行列の場合、条件数を計算するコストは重要であり、実際には行列を因数分解するコストを超える可能性があります。したがって、これらの場合、条件数は計算されません。Octaveは、特異行列またはバンド行列の場合は、基礎となる&lt;small&gt;LAPACK&lt;/small&gt;コードを検出するためのより単純な手法に依存しています。</target>
        </trans-unit>
        <trans-unit id="65d916acd80875a1f75263b4d97e9982475eb7f7" translate="yes" xml:space="preserve">
          <source>All of these classes inherit from the &lt;code&gt;Sparse&amp;lt;T&amp;gt;&lt;/code&gt; template class, and so all have similar capabilities and usage. The &lt;code&gt;Sparse&amp;lt;T&amp;gt;&lt;/code&gt; class was based on Octave&amp;rsquo;s &lt;code&gt;Array&amp;lt;T&amp;gt;&lt;/code&gt; class and users familiar with Octave&amp;rsquo;s &lt;code&gt;Array&lt;/code&gt; classes will be comfortable with the use of the sparse classes.</source>
          <target state="translated">これらのクラスはすべて &lt;code&gt;Sparse&amp;lt;T&amp;gt;&lt;/code&gt; テンプレートクラスを継承しているため、同様の機能と使用法があります。 &lt;code&gt;Sparse&amp;lt;T&amp;gt;&lt;/code&gt; クラスは、Octaveのに基づいていた &lt;code&gt;Array&amp;lt;T&amp;gt;&lt;/code&gt; Octaveの精通クラスとユーザー &lt;code&gt;Array&lt;/code&gt; クラスは、スパースクラスの使用と快適になります。</target>
        </trans-unit>
        <trans-unit id="ad08aebcd0b52cdeb1bb4bef053c641e7119e568" translate="yes" xml:space="preserve">
          <source>All string concatenation functions except &lt;code&gt;cstrcat&lt;/code&gt; also accept cell array data (see &lt;a href=&quot;cell-arrays#Cell-Arrays&quot;&gt;Cell Arrays&lt;/a&gt;). &lt;code&gt;char&lt;/code&gt; and &lt;code&gt;strvcat&lt;/code&gt; convert cell arrays into character arrays, while &lt;code&gt;strcat&lt;/code&gt; concatenates within the cells of the cell arrays:</source>
          <target state="translated">&lt;code&gt;cstrcat&lt;/code&gt; を除くすべての文字列連結関数は、セル配列データも受け入れます（「&lt;a href=&quot;cell-arrays#Cell-Arrays&quot;&gt;セル配列&lt;/a&gt;」を参照）。 &lt;code&gt;char&lt;/code&gt; と &lt;code&gt;strvcat&lt;/code&gt; はセル配列を文字配列に変換しますが、 &lt;code&gt;strcat&lt;/code&gt; はセル配列のセル内で連結します。</target>
        </trans-unit>
        <trans-unit id="0f3a40951eeb78de3cc90cdef1849350b6fe743f" translate="yes" xml:space="preserve">
          <source>All string concatenation functions except &lt;code&gt;cstrcat&lt;/code&gt; convert numerical input into character data by taking the corresponding UTF-8 character for each element (or multi-byte sequence), as in the following example:</source>
          <target state="translated">次の例のように、 &lt;code&gt;cstrcat&lt;/code&gt; を除くすべての文字列連結関数は、各要素（またはマルチバイトシーケンス）に対応するUTF-8文字を取得することにより、数値入力を文字データに変換します。</target>
        </trans-unit>
        <trans-unit id="799f25a17379f0338e26cde214b90d45b7a39777" translate="yes" xml:space="preserve">
          <source>All strings must be UTF-8 encoded.</source>
          <target state="translated">すべての文字列はUTF-8でエンコードされている必要があります。</target>
        </trans-unit>
        <trans-unit id="cf5b3bfcb21e33f16f7c1137c09da9ee8b201fe9" translate="yes" xml:space="preserve">
          <source>All text objects&amp;mdash;such as titles, labels, legends, and text&amp;mdash;include the property &lt;code&gt;&quot;interpreter&quot;&lt;/code&gt; that determines the manner in which special control sequences in the text are rendered.</source>
          <target state="translated">タイトル、ラベル、凡例、テキストなどのすべてのテキストオブジェクトには、テキスト内の特別な制御シーケンスのレンダリング方法を決定するプロパティ &lt;code&gt;&quot;interpreter&quot;&lt;/code&gt; が含まれています。</target>
        </trans-unit>
        <trans-unit id="3177ef5712b612668b1bb2519090db4503fe8aec" translate="yes" xml:space="preserve">
          <source>All values are either 1 or 0.</source>
          <target state="translated">すべての値は1または0です。</target>
        </trans-unit>
        <trans-unit id="7634a12ac1795ba0fd2c8722648167afc44cd883" translate="yes" xml:space="preserve">
          <source>All values are even numbers.</source>
          <target state="translated">すべての値は偶数です。</target>
        </trans-unit>
        <trans-unit id="08e42afd3636a4a42ff70f3cfc33a46392064073" translate="yes" xml:space="preserve">
          <source>All values are finite.</source>
          <target state="translated">すべての値は有限です。</target>
        </trans-unit>
        <trans-unit id="72531d05a4ed320e3eb62d70eccfd94e5ebe5e41" translate="yes" xml:space="preserve">
          <source>All values are greater than or equal to the following value in &lt;var&gt;attributes&lt;/var&gt;.</source>
          <target state="translated">すべての値は、 &lt;var&gt;attributes&lt;/var&gt; 次の値以上です。</target>
        </trans-unit>
        <trans-unit id="c9cfb4ca92ebfc6ccc3ef997938f87f1cd9b232e" translate="yes" xml:space="preserve">
          <source>All values are greater than the following value in &lt;var&gt;attributes&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;attributes&lt;/var&gt; すべての値が次の値よりも大きい。</target>
        </trans-unit>
        <trans-unit id="8571946361c12f538f21f309d8adfc2c5e7e8d6b" translate="yes" xml:space="preserve">
          <source>All values are integer. This is different than using &lt;code&gt;isinteger&lt;/code&gt; which only checks its an integer type. This checks that each value in &lt;var&gt;A&lt;/var&gt; is an integer value, i.e., it has no decimal part.</source>
          <target state="translated">すべての値は整数です。これは、整数型のみをチェックする &lt;code&gt;isinteger&lt;/code&gt; を使用する場合とは異なります。これは、 &lt;var&gt;A&lt;/var&gt; の各値が整数値であること、つまり小数部がないことを確認します。</target>
        </trans-unit>
        <trans-unit id="b51b7ea97a42119fcc4c6acfcf6b6c26f528095a" translate="yes" xml:space="preserve">
          <source>All values are less than or equal to the following value in &lt;var&gt;attributes&lt;/var&gt;.</source>
          <target state="translated">すべての値は、 &lt;var&gt;attributes&lt;/var&gt; 次の値以下です。</target>
        </trans-unit>
        <trans-unit id="16dcd2c824855921381f915bd9097c09997cdade" translate="yes" xml:space="preserve">
          <source>All values are less than the following value in &lt;var&gt;attributes&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;attributes&lt;/var&gt; すべての値が次の値よりも小さい。</target>
        </trans-unit>
        <trans-unit id="d8905c18a451acd417d9df1f3a25516a544eeac9" translate="yes" xml:space="preserve">
          <source>All values are non negative.</source>
          <target state="translated">すべての値は非負である。</target>
        </trans-unit>
        <trans-unit id="2f2130b8e346bf5e611f2a322630572f7bc35a34" translate="yes" xml:space="preserve">
          <source>All values are odd numbers.</source>
          <target state="translated">すべての値は奇数です。</target>
        </trans-unit>
        <trans-unit id="89302b20f7e0a4c0b29d3ec66e02189044cf67ee" translate="yes" xml:space="preserve">
          <source>All values are positive.</source>
          <target state="translated">全ての価値観がプラスになります。</target>
        </trans-unit>
        <trans-unit id="37bcbd071270436c045c69cafd051dd84716b227" translate="yes" xml:space="preserve">
          <source>All values in a colormap should be in the [0 1] range but this is not enforced. Each function must decide what to do for values outside this range.</source>
          <target state="translated">colormap内のすべての値は[0 1]の範囲内にあるべきですが、これは強制されていません。各関数は、この範囲外の値をどうするかを決定しなければなりません。</target>
        </trans-unit>
        <trans-unit id="00a5abeb88bf1a5568fa6d95d30ba0ef21681182" translate="yes" xml:space="preserve">
          <source>All versions of Octave include a number of built-in data types, including real and complex scalars and matrices, character strings, a data structure type, and an array that can contain all data types.</source>
          <target state="translated">Octaveのすべてのバージョンは,実数および複素数のスカラーと行列,文字列,データ構造型,およびすべてのデータ型を含むことができる配列を含む多くの組み込みデータ型を含んでいます。</target>
        </trans-unit>
        <trans-unit id="186e070f6498d226f60012137d4651bef8700d48" translate="yes" xml:space="preserve">
          <source>Allocating Local Memory in Oct-Files</source>
          <target state="translated">Oct-Fileでのローカルメモリの割り当て</target>
        </trans-unit>
        <trans-unit id="33ee4043a19743c4727e0be61554857ca54d83e6" translate="yes" xml:space="preserve">
          <source>Allocating memory within an oct-file might seem easy, as the C++ new/delete operators can be used. However, in that case great care must be taken to avoid memory leaks. The preferred manner in which to allocate memory for use locally is to use the &lt;code&gt;OCTAVE_LOCAL_BUFFER&lt;/code&gt; macro. An example of its use is</source>
          <target state="translated">C ++のnew / delete演算子を使用できるため、octファイル内にメモリを割り当てるのは簡単に思えるかもしれません。ただし、その場合、メモリリークを回避するために細心の注意を払う必要があります。ローカルで使用するためにメモリを割り当てる好ましい方法は、 &lt;code&gt;OCTAVE_LOCAL_BUFFER&lt;/code&gt; マクロを使用することです。その使用例は</target>
        </trans-unit>
        <trans-unit id="b8449c23501a6b1b8a83c9b4fb3bd94c67025210" translate="yes" xml:space="preserve">
          <source>Allows for printing transparent graphics objects in PDF format. For PostScript formats the presence of any transparent object will cause the output to be rasterized.</source>
          <target state="translated">透過グ ラ フ ィ ッ ク オブジ ェ ク ト を PDF 形式で印刷する こ と がで き ます。PostScript 形式の場合、 透過オブジェクトがあると出力はラスタライズされます。</target>
        </trans-unit>
        <trans-unit id="58061aa544398a798e33181a443b15b7746fab16" translate="yes" xml:space="preserve">
          <source>Alpha</source>
          <target state="translated">Alpha</target>
        </trans-unit>
        <trans-unit id="f981014fd674358f8df4fcacb07ecca0179e92d7" translate="yes" xml:space="preserve">
          <source>Alpha (transparency) channel for the image. This must be a matrix with same class, and number of rows and columns of &lt;var&gt;img&lt;/var&gt;. In case of a multipage image, the size of the 4th dimension must also match and the third dimension must be a singleton. By default, image will be completely opaque.</source>
          <target state="translated">画像のアルファ（透明度）チャネル。これは、同じクラス、および &lt;var&gt;img&lt;/var&gt; の行と列の数を持つ行列でなければなりません。複数ページの画像の場合、4番目の次元のサイズも一致し、3番目の次元はシングルトンでなければなりません。デフォルトでは、画像は完全に不透明になります。</target>
        </trans-unit>
        <trans-unit id="41f2f9040e936dcce2fc219a26f2e349dd4eae0b" translate="yes" xml:space="preserve">
          <source>Also exploit broadcasting in these elementwise operators both to avoid looping and unnecessary intermediate memory allocations. See &lt;a href=&quot;broadcasting#Broadcasting&quot;&gt;Broadcasting&lt;/a&gt;.</source>
          <target state="translated">また、これらの要素ごとの演算子のブロードキャストを利用して、ループと不要な中間メモリ割り当てを回避します。&lt;a href=&quot;broadcasting#Broadcasting&quot;&gt;Broadcastingを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="a9a42fc813c916de0c4c0023f6e182425878fd0f" translate="yes" xml:space="preserve">
          <source>Also for compatibility with &lt;small&gt;MATLAB&lt;/small&gt;, return the right-hand side of the range (10^&lt;var&gt;b&lt;/var&gt;) when just a single value is requested.</source>
          <target state="translated">また、&lt;small&gt;MATLAB&lt;/small&gt;との互換性のために、単一の値のみが要求された場合は、範囲の右側（10 ^ &lt;var&gt;b&lt;/var&gt; ）を返します。</target>
        </trans-unit>
        <trans-unit id="4dac732148aff2a880ecbec9bebd1c58a571c34c" translate="yes" xml:space="preserve">
          <source>Also included in Octave&amp;rsquo;s geometry functions are primitive functions to enable vector rotations in 3-dimensional space. Separate functions are provided for rotation about each of the principle axes, &lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;, and &lt;var&gt;z&lt;/var&gt;. According to Euler&amp;rsquo;s rotation theorem, any arbitrary rotation, &lt;var&gt;R&lt;/var&gt;, of any vector, &lt;var&gt;p&lt;/var&gt;, can be expressed as a product of the three principle rotations:</source>
          <target state="translated">Octaveのジオメトリ関数には、3次元空間でのベクトル回転を可能にするプリミティブ関数も含まれています。主軸 &lt;var&gt;x&lt;/var&gt; 、 &lt;var&gt;y&lt;/var&gt; 、 &lt;var&gt;z&lt;/var&gt; のそれぞれを中心に回転するための個別の関数が用意されています。オイラーの回転定理によれば、任意のベクトル &lt;var&gt;p&lt;/var&gt; の任意の回転 &lt;var&gt;R&lt;/var&gt; は、次の3つの主回転の積として表すことができます。</target>
        </trans-unit>
        <trans-unit id="6e30f44f4edbcd99dceb62c1073e3f8920289606" translate="yes" xml:space="preserve">
          <source>Also, a diagonal matrix &lt;var&gt;D&lt;/var&gt; can be multiplied or divided by a scalar, or raised to a scalar power if it is square, producing diagonal matrix result in all cases.</source>
          <target state="translated">また、対角行列 &lt;var&gt;D&lt;/var&gt; をスカラーで乗算または除算したり、正方行列の場合はスカラー乗にして、すべての場合に対角行列の結果を生成したりできます。</target>
        </trans-unit>
        <trans-unit id="b006a81485382ac577a1c2e330c78bb0395d8867" translate="yes" xml:space="preserve">
          <source>Also, note that Octave always reserves storage for at least one value. Thus, for empty matrices &lt;code&gt;nnz&lt;/code&gt; will report 0, but &lt;code&gt;nzmax&lt;/code&gt; will report 1.</source>
          <target state="translated">また、Octaveは常に少なくとも1つの値のストレージを予約することに注意してください。したがって、空の行列の場合、 &lt;code&gt;nnz&lt;/code&gt; は0を報告しますが、 &lt;code&gt;nzmax&lt;/code&gt; は1を報告します。</target>
        </trans-unit>
        <trans-unit id="95178adf4329231651fa8791e5df4b1025cdd224" translate="yes" xml:space="preserve">
          <source>Also, the test for positive definiteness is a low-cost test for a Hermitian matrix with a real positive diagonal. This does not guarantee that the matrix is positive definite, but only that it is a probable candidate. When such a matrix is factorized, a Cholesky factorization is first attempted, and if that fails the matrix is then treated with an LU factorization. Once the matrix has been factorized, &lt;code&gt;matrix_type&lt;/code&gt; will return the correct classification of the matrix.</source>
          <target state="translated">また、正定性の検定は、正の対角を持つエルミート行列の低コストの検定です。これは、行列が正定であることを保証するのではなく、それが有望な候補であることだけを保証します。このような行列が因数分解されると、コレスキー因数分解が最初に試行され、失敗した場合、行列はLU因数分解で処理されます。行列が因数分解されると、 &lt;code&gt;matrix_type&lt;/code&gt; は行列の正しい分類を返します。</target>
        </trans-unit>
        <trans-unit id="1fc7e3b04227eb297b02088cb371c91dbb89a143" translate="yes" xml:space="preserve">
          <source>Alternate Names</source>
          <target state="translated">代替名</target>
        </trans-unit>
        <trans-unit id="121a637fc5053be9a698bd7d66175550da00821c" translate="yes" xml:space="preserve">
          <source>Alternation operator. Match one of a choice of regular expressions. The alternatives must be delimited by the grouping operator &lt;code&gt;()&lt;/code&gt; above.</source>
          <target state="translated">代替演算子。選択した正規表現のいずれかに一致します。選択肢は、上記のグループ化演算子 &lt;code&gt;()&lt;/code&gt; で区切る必要があります。</target>
        </trans-unit>
        <trans-unit id="fa9500290cf4dd90d9eac7daf3711abcb335db5d" translate="yes" xml:space="preserve">
          <source>Alternatively the multiplicity may be defined explicitly, for example,</source>
          <target state="translated">あるいは、多重性を明示的に定義することもできます。</target>
        </trans-unit>
        <trans-unit id="bf4115bd0824a2245809f545062b162e83d91b94" translate="yes" xml:space="preserve">
          <source>Alternatively, a value of 128 (&lt;code&gt;GLP_SF_AUTO&lt;/code&gt;) may be also specified, in which case the routine chooses the scaling options automatically.</source>
          <target state="translated">または、128（ &lt;code&gt;GLP_SF_AUTO&lt;/code&gt; ）の値も指定できます。この場合、ルーチンはスケーリングオプションを自動的に選択します。</target>
        </trans-unit>
        <trans-unit id="077ed198293526ca5fecdf1bccfe48248ddd0aef" translate="yes" xml:space="preserve">
          <source>Alternatively, properties of &lt;code&gt;quadgk&lt;/code&gt; can be passed to the function as pairs &lt;code&gt;&quot;&lt;var&gt;prop&lt;/var&gt;&quot;, &lt;var&gt;val&lt;/var&gt;&lt;/code&gt;. Valid properties are</source>
          <target state="translated">代わりに、 &lt;code&gt;quadgk&lt;/code&gt; のプロパティを &lt;code&gt;&quot;&lt;var&gt;prop&lt;/var&gt;&quot;, &lt;var&gt;val&lt;/var&gt;&lt;/code&gt; ペアとして関数に渡すことができます。有効なプロパティは</target>
        </trans-unit>
        <trans-unit id="d3bd9811e9bbfc37c76498323081f47ef77de878" translate="yes" xml:space="preserve">
          <source>Alternatively, the output of the &lt;code&gt;lasterror&lt;/code&gt; function can be found in a variable indicated immediately after the &lt;code&gt;catch&lt;/code&gt; keyword, as in the example below showing how to redirect an error as a warning:</source>
          <target state="translated">または、次の例のようにエラーを警告としてリダイレクトする方法を示すように、 &lt;code&gt;lasterror&lt;/code&gt; 関数の出力は、 &lt;code&gt;catch&lt;/code&gt; キーワードの直後に示される変数で見つけることができます。</target>
        </trans-unit>
        <trans-unit id="71502ea642ba0592772df69eb88dac6cb37b6257" translate="yes" xml:space="preserve">
          <source>Alternatively, to process the data in a structure, the structure might be converted to another type of container before being treated.</source>
          <target state="translated">あるいは、構造体のデータを処理するために、構造体は、処理される前に別のタイプの容器に変換されてもよい。</target>
        </trans-unit>
        <trans-unit id="b0f05f40e955d7c8bb417fb376c9feb031d2915f" translate="yes" xml:space="preserve">
          <source>Alternatively, use (?-i) in the pattern.</source>
          <target state="translated">あるいは、パターンの中で(?-i)を使用することもできます。</target>
        </trans-unit>
        <trans-unit id="824fa3406fb2c65537840c88d54d28700ee16049" translate="yes" xml:space="preserve">
          <source>Alternatively, use (?-m) in the pattern.</source>
          <target state="translated">あるいは、パターンの中で(?-m)を使用することもできます。</target>
        </trans-unit>
        <trans-unit id="8a14f17eee4fd5d9bedd432119f8f1bc2d745487" translate="yes" xml:space="preserve">
          <source>Alternatively, use (?-s) in the pattern.</source>
          <target state="translated">あるいは、パターンの中で(?-s)を使うこともできます。</target>
        </trans-unit>
        <trans-unit id="f81375a4a22742fd5705b3dd28b44b88da68c4fb" translate="yes" xml:space="preserve">
          <source>Alternatively, use (?-x) in the pattern.</source>
          <target state="translated">あるいは、パターンの中で(?-x)を使うこともできます。</target>
        </trans-unit>
        <trans-unit id="77ddcef3cfee78cc188521debfcc5abe7a4488ea" translate="yes" xml:space="preserve">
          <source>Alternatively, use (?i) in the pattern.</source>
          <target state="translated">あるいは、パターンの中で(?i)を使用することもできます。</target>
        </trans-unit>
        <trans-unit id="7c19c090750b7f6f6c86e5c6dae6cb53ec549aca" translate="yes" xml:space="preserve">
          <source>Alternatively, use (?m) in the pattern.</source>
          <target state="translated">あるいは、パターンの中で(?m)を使うこともできます。</target>
        </trans-unit>
        <trans-unit id="cde05e446744374d61ff29b661cec22696621784" translate="yes" xml:space="preserve">
          <source>Alternatively, use (?s) in the pattern.</source>
          <target state="translated">あるいは、パターンの中で(?s)を使うこともできます。</target>
        </trans-unit>
        <trans-unit id="ceae955858dc811f18b53f87b25096ee16409252" translate="yes" xml:space="preserve">
          <source>Alternatively, use (?x) in the pattern.</source>
          <target state="translated">あるいは、パターンの中で(?x)を使用することもできます。</target>
        </trans-unit>
        <trans-unit id="121468f624f9ae46c7a35ed43b80d3f3b4ab7ce1" translate="yes" xml:space="preserve">
          <source>Alternatively, we can concatenate &lt;var&gt;A&lt;/var&gt; and &lt;var&gt;B&lt;/var&gt; along the second dimension in the following way:</source>
          <target state="translated">あるいは、次の方法で2番目の次元に沿って &lt;var&gt;A&lt;/var&gt; と &lt;var&gt;B&lt;/var&gt; を連結できます。</target>
        </trans-unit>
        <trans-unit id="fee23f60853bbef76a80126789cfed098beb343c" translate="yes" xml:space="preserve">
          <source>Alternatively, you can write the full or relative path to the file.</source>
          <target state="translated">あるいは、ファイルへのフルパスまたは相対パスを書き込むこともできます。</target>
        </trans-unit>
        <trans-unit id="223c53cb8047eab49ffd374fddce0f029f7cea43" translate="yes" xml:space="preserve">
          <source>Alternatively, you can write the full path to the graphic.</source>
          <target state="translated">あるいは、グラフィックへのフルパスを書くこともできます。</target>
        </trans-unit>
        <trans-unit id="a558192348c479f96efbe53d84a57d9061633caf" translate="yes" xml:space="preserve">
          <source>Although &lt;code&gt;quad&lt;/code&gt; returns a nonzero value for &lt;var&gt;ier&lt;/var&gt;, the result is reasonably accurate (to see why, examine what happens to the result if you move the lower bound to 0.1, then 0.01, then 0.001, etc.).</source>
          <target state="translated">けれども &lt;code&gt;quad&lt;/code&gt; にゼロ以外の値を返す &lt;var&gt;ier&lt;/var&gt; 、結果が合理的に正確である（あなたがして、その後0.1、0.01、0.001、などに下限移動した場合、結果がどうなるかを調べて、理由を知るために）。</target>
        </trans-unit>
        <trans-unit id="8b3b4062d69d5d309d82bfeb03464c53dd22722a" translate="yes" xml:space="preserve">
          <source>Although Octave does not automatically report an error if you call a function with more arguments than expected, doing so probably indicates that something is wrong. Octave also does not automatically report an error if a function is called with too few arguments, but any attempt to use a variable that has not been given a value will result in an error. To avoid such problems and to provide useful messages, we check for both possibilities and issue our own error message.</source>
          <target state="translated">Octaveは,期待されているよりも多くの引数を持つ関数を呼び出しても,自動的にエラーを報告しませんが,そうすることは,おそらく何かが間違っていることを示しています。Octaveはまた,関数が少なすぎる引数で呼び出されても自動的にエラーを報告しませんが,値が与えられていない変数を使おうとするとエラーになります。そのような問題を避け,有用なメッセージを提供するために,我々は両方の可能性をチェックし,我々自身のエラーメッセージを発行します。</target>
        </trans-unit>
        <trans-unit id="9f6dd2601f20dff450738b52b2b8965bf7c1010f" translate="yes" xml:space="preserve">
          <source>Although Octave normally executes commands from script files that have the name</source>
          <target state="translated">Octaveは通常,以下の名前を持つスクリプトファイルからコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="64d02394d8491d30ebf55b85a1780be43be7c00f" translate="yes" xml:space="preserve">
          <source>Although Octave uses a compressed column format, it should be noted that compressed row formats are equally possible. However, in the context of mixed operations between mixed sparse and dense matrices, it makes sense that the elements of the sparse matrices are in the same order as the dense matrices. Octave stores dense matrices in column major ordering, and so sparse matrices are equally stored in this manner.</source>
          <target state="translated">Octaveは圧縮列形式を使用していますが,圧縮行形式も同様に可能であることに注意する必要があります。しかし,疎な行列と密な行列の混合演算の文脈では,疎な行列の要素が密な行列と同じ順序であることは理にかなっています。Octaveは密な行列を列のメジャー順序で格納しますので,疎な行列はこの方法で等しく格納されます。</target>
        </trans-unit>
        <trans-unit id="4aae2b32782cb9c195decaa2c9b384ce48d2fdf4" translate="yes" xml:space="preserve">
          <source>Although a range constant specifies a row vector, Octave does &lt;em&gt;not&lt;/em&gt; normally convert range constants to vectors unless it is necessary to do so. This allows you to write a constant like &lt;code&gt;1 : 10000&lt;/code&gt; without using 80,000 bytes of storage on a typical 32-bit workstation.</source>
          <target state="translated">範囲定数は行ベクトルを指定しますが、必要がない限り、Octaveは通常、範囲定数をベクトルに変換しませ&lt;em&gt;ん&lt;/em&gt;。これにより、典型的な32ビットワークステーションで80,000バイトのストレージを使用せずに、 &lt;code&gt;1 : 10000&lt;/code&gt; ような定数を書き込むことができます。</target>
        </trans-unit>
        <trans-unit id="ab40642a93ef7bf8976394282eb6975e7eb06296" translate="yes" xml:space="preserve">
          <source>Although accepted, the argument &lt;var&gt;-completenames&lt;/var&gt; is silently ignored. Octave always returns absolute filenames.</source>
          <target state="translated">受け入れられますが、引数 &lt;var&gt;-completenames&lt;/var&gt; は暗黙的に無視されます。Octaveは常に絶対ファイル名を返します。</target>
        </trans-unit>
        <trans-unit id="0116371776f0f1e5b4fa4d80259bf73f34e7857b" translate="yes" xml:space="preserve">
          <source>Although default values may be set for any object, they are set in parent objects and apply to child objects, of the specified object type. For example, setting the default &lt;code&gt;color&lt;/code&gt; property of &lt;code&gt;line&lt;/code&gt; objects to &lt;code&gt;&quot;green&quot;&lt;/code&gt;, for the &lt;code&gt;root&lt;/code&gt; object, will result in all &lt;code&gt;line&lt;/code&gt; objects inheriting the &lt;code&gt;color&lt;/code&gt;&lt;code&gt;&quot;green&quot;&lt;/code&gt; as the default value.</source>
          <target state="translated">デフォルト値は任意のオブジェクトに設定できますが、指定したオブジェクトタイプの親オブジェクトに設定され、子オブジェクトに適用されます。たとえば、 &lt;code&gt;root&lt;/code&gt; オブジェクトの &lt;code&gt;line&lt;/code&gt; オブジェクトのデフォルトの &lt;code&gt;color&lt;/code&gt; プロパティを &lt;code&gt;&quot;green&quot;&lt;/code&gt; に設定すると、すべての &lt;code&gt;line&lt;/code&gt; オブジェクトがデフォルト値として &lt;code&gt;&quot;green&quot;&lt;/code&gt; の &lt;code&gt;color&lt;/code&gt; 継承します。</target>
        </trans-unit>
        <trans-unit id="7fcea970358542f476aee95176a7850810f9a3c9" translate="yes" xml:space="preserve">
          <source>Although it is possible to put comment lines into keyboard-composed, throw-away Octave programs, it usually isn&amp;rsquo;t very useful because the purpose of a comment is to help you or another person understand the program at a later time.</source>
          <target state="translated">キーボードで構成された使い捨てのOctaveプログラムにコメント行を入れることは可能ですが、コメントの目的は、後であなたや他の人がプログラムを理解するのに役立つため、通常はあまり役に立ちません。</target>
        </trans-unit>
        <trans-unit id="582d8065b739806feefdb65885c8b86b11703a75" translate="yes" xml:space="preserve">
          <source>Although it is possible to rewrite all &lt;code&gt;for&lt;/code&gt; loops as &lt;code&gt;while&lt;/code&gt; loops, the Octave language has both statements because often a &lt;code&gt;for&lt;/code&gt; loop is both less work to type and more natural to think of. Counting the number of iterations is very common in loops and it can be easier to think of this counting as part of looping rather than as something to do inside the loop.</source>
          <target state="translated">すべての &lt;code&gt;for&lt;/code&gt; ループを &lt;code&gt;while&lt;/code&gt; ループのように書き直すことは可能ですが、多くの場合、 &lt;code&gt;for&lt;/code&gt; ループは入力する作業が少なく、考えるのが自然であるため、Octave言語には両方のステートメントがあります。ループでは反復回数を数えることは非常に一般的であり、この数え方は、ループ内で行うものとしてではなく、ループの一部として考える方が簡単です。</target>
        </trans-unit>
        <trans-unit id="037be7fedd216678bd6b4094e017b9c5e7410e1c" translate="yes" xml:space="preserve">
          <source>Although the user should only include</source>
          <target state="translated">ユーザーは</target>
        </trans-unit>
        <trans-unit id="ce6def5ca0362c3fd7df452292e849eb426c7480" translate="yes" xml:space="preserve">
          <source>Although there cannot be multiple entry points in a single mex-file, one can use the &lt;code&gt;mexFunctionName&lt;/code&gt; function to determine what name the mex-file was called with. This can be used to alter the behavior of the mex-file based on the function name. For example, if</source>
          <target state="translated">1つのmex-fileに複数のエントリポイントを &lt;code&gt;mexFunctionName&lt;/code&gt; ことはできませんが、mexFunctionName関数を使用して、mex-fileの呼び出しに使用された名前を判別できます。これを使用して、関数名に基づいてmexファイルの動作を変更できます。たとえば、</target>
        </trans-unit>
        <trans-unit id="5c036b3e5ba98c506a21c362ad281332a2e1bffc" translate="yes" xml:space="preserve">
          <source>Although this is inconsistent with the normal behavior of Octave&amp;rsquo;s lexer, which usually prefers to break the input into tokens by preferring the longest possible match at any given point, it is more useful in this case.</source>
          <target state="translated">これは、Octaveのレクサーの通常の動作と一致していませんが、通常、任意の時点で可能な限り最長の一致を優先することにより、入力をトークンに分割することを優先しますが、この場合はより便利です。</target>
        </trans-unit>
        <trans-unit id="e326bab85042418bda6a4b4504b5fe93f49ba59a" translate="yes" xml:space="preserve">
          <source>Always include a plus or minus sign in the result.</source>
          <target state="translated">結果には必ずプラスまたはマイナス記号を入れてください。</target>
        </trans-unit>
        <trans-unit id="2327a47c9dcd85492cbba0eeb5581a7188ee36e9" translate="yes" xml:space="preserve">
          <source>Always include a proper bug report for the problem you think you have fixed. We need to convince ourselves that the change is right before installing it. Even if it is right, we might have trouble judging it if we don&amp;rsquo;t have a way to reproduce the problem.</source>
          <target state="translated">修正したと思われる問題については、必ず適切なバグレポートを含めてください。インストールする前に、変更が正しいことを納得させる必要があります。たとえそれが正しいとしても、問題を再現する方法がないと、判断が難しい場合があります。</target>
        </trans-unit>
        <trans-unit id="0ab8cf4009eb348e2778d880e86ec80daf370091" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;assignment&lt;/em&gt; is an expression that stores a new value into a variable. For example, the following expression assigns the value 1 to the variable &lt;code&gt;z&lt;/code&gt;:</source>
          <target state="translated">&lt;em&gt;割り当ては、&lt;/em&gt;変数に新しい値を格納式です。たとえば、次の式は値1を変数 &lt;code&gt;z&lt;/code&gt; に割り当てます。</target>
        </trans-unit>
        <trans-unit id="731ae279391efa26177273a2bf8dea62a48f4444" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;element-by-element boolean expression&lt;/em&gt; is a combination of comparison expressions using the boolean operators &amp;ldquo;or&amp;rdquo; (&amp;lsquo;</source>
          <target state="translated">&lt;em&gt;要素ごとのブール式は&lt;/em&gt;「ブール演算子を使用して比較式の組み合わせである「または」（</target>
        </trans-unit>
        <trans-unit id="af9d6714f31a689d6ebcfc7ac7ed41c91234e7b2" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;index expression&lt;/em&gt; allows you to reference or extract selected elements of a vector, a matrix (2-D), or a higher-dimensional array.</source>
          <target state="translated">&lt;em&gt;インデックス式は、&lt;/em&gt;あなたが参照またはベクトルの抽出選択された要素、マトリックス（2-D）、またはより高い次元配列することを可能にします。</target>
        </trans-unit>
        <trans-unit id="c83ea985af8c01cb3c8ab65bb7cc6794d16ed1c1" translate="yes" xml:space="preserve">
          <source>An Empty Exercise</source>
          <target state="translated">空の運動</target>
        </trans-unit>
        <trans-unit id="34db31be21bf71bd1bf88901949c545c6d5a2176" translate="yes" xml:space="preserve">
          <source>An Improved Incomplete Cholesky Factorization</source>
          <target state="translated">改良された不完全コレスキー因数分解</target>
        </trans-unit>
        <trans-unit id="ae03158082cb06cd288fa53135959985a4bb2758" translate="yes" xml:space="preserve">
          <source>An additional input argument &lt;var&gt;thres&lt;/var&gt;, that defines the pivoting threshold can be given. &lt;var&gt;thres&lt;/var&gt; can be a scalar, in which case it defines the &lt;small&gt;UMFPACK&lt;/small&gt; pivoting tolerance for both symmetric and unsymmetric cases. If &lt;var&gt;thres&lt;/var&gt; is a 2-element vector, then the first element defines the pivoting tolerance for the unsymmetric &lt;small&gt;UMFPACK&lt;/small&gt; pivoting strategy and the second for the symmetric strategy. By default, the values defined by &lt;code&gt;spparms&lt;/code&gt; are used ([0.1, 0.001]).</source>
          <target state="translated">ピボットしきい値を定義 &lt;var&gt;thres&lt;/var&gt; 追加の入力引数thresを指定できます。 &lt;var&gt;thres&lt;/var&gt; はスカラーにすることができます。その場合、対称と非対称の両方の場合の&lt;small&gt;UMFPACK&lt;/small&gt;ピボット許容値が定義されます。場合 &lt;var&gt;thres&lt;/var&gt; 2要素ベクトルであり、その後、最初の要素は、非対称のために旋回公差定義&lt;small&gt;UMFPACKの&lt;/small&gt;旋回戦略および対称戦略の秒。デフォルトでは、 &lt;code&gt;spparms&lt;/code&gt; によって定義された値が使用されます（[ 0.1、0.001 ]）。</target>
        </trans-unit>
        <trans-unit id="042dbd2774917a28c326141303c32522dc08fa71" translate="yes" xml:space="preserve">
          <source>An additional input argument &lt;var&gt;thresh&lt;/var&gt; that defines the pivoting threshold can be given. &lt;var&gt;thresh&lt;/var&gt; can be a scalar, in which case it defines the &lt;small&gt;UMFPACK&lt;/small&gt; pivoting tolerance for both symmetric and unsymmetric cases. If &lt;var&gt;thresh&lt;/var&gt; is a 2-element vector, then the first element defines the pivoting tolerance for the unsymmetric &lt;small&gt;UMFPACK&lt;/small&gt; pivoting strategy and the second for the symmetric strategy. By default, the values defined by &lt;code&gt;spparms&lt;/code&gt; are used ([0.1, 0.001]).</source>
          <target state="translated">付加的な入力引数 &lt;var&gt;thresh&lt;/var&gt; 旋回閾値を定義する与えることができます。 &lt;var&gt;thresh&lt;/var&gt; はスカラーにすることができます。その場合、対称と非対称の両方の場合の&lt;small&gt;UMFPACK&lt;/small&gt;ピボット許容値を定義し&lt;small&gt;ます&lt;/small&gt;。場合 &lt;var&gt;thresh&lt;/var&gt; 2要素ベクトルであり、その後、最初の要素は、非対称のために旋回公差定義&lt;small&gt;UMFPACK&lt;/small&gt;戦略および対称戦略の第二の枢動を。デフォルトでは、 &lt;code&gt;spparms&lt;/code&gt; によって定義された値が使用されます（[ 0.1、0.001 ]）。</target>
        </trans-unit>
        <trans-unit id="8edab744da9cb281c04ed05b0101a7f26d1614d6" translate="yes" xml:space="preserve">
          <source>An alternative expression to evaluate, so that the speed of two expressions can be directly compared. The default is &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">2つの式の速度を直接比較できるように、評価する代替式。デフォルトは &lt;code&gt;[]&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="cc8a046f7cd194a75b4487f3e9b7b50b571aa0e0" translate="yes" xml:space="preserve">
          <source>An alternative is to convert the data to a different container, such as a matrix or a data structure. Depending on the data this is possible using the &lt;code&gt;cell2mat&lt;/code&gt; and &lt;code&gt;cell2struct&lt;/code&gt; functions.</source>
          <target state="translated">別の方法は、データをマトリックスやデータ構造などの別のコンテナーに変換することです。データに応じて、これは使用可能です &lt;code&gt;cell2mat&lt;/code&gt; と &lt;code&gt;cell2struct&lt;/code&gt; 機能を。</target>
        </trans-unit>
        <trans-unit id="9f78da024542da3774bad17477031346178f0048" translate="yes" xml:space="preserve">
          <source>An array containing the lower bound on each of the variables. If &lt;var&gt;lb&lt;/var&gt; is not supplied, the default lower bound for the variables is zero.</source>
          <target state="translated">各変数の下限を含む配列。 &lt;var&gt;lb&lt;/var&gt; が指定されていない場合、変数のデフォルトの下限はゼロです。</target>
        </trans-unit>
        <trans-unit id="2d255ad15690054d728f93115349d3f600dd0515" translate="yes" xml:space="preserve">
          <source>An array containing the upper bound on each of the variables. If &lt;var&gt;ub&lt;/var&gt; is not supplied, the default upper bound is assumed to be infinite.</source>
          <target state="translated">各変数の上限を含む配列。 &lt;var&gt;ub&lt;/var&gt; が指定されていない場合、デフォルトの上限は無限であると見なされます。</target>
        </trans-unit>
        <trans-unit id="62b2647e5df91ccc118cc5e116c8952eb7abf652" translate="yes" xml:space="preserve">
          <source>An array of characters containing the sense of each constraint in the constraint matrix. Each element of the array may be one of the following values</source>
          <target state="translated">制約行列の各制約の意味を含む文字の配列。配列の各要素は、以下の値のいずれかになります。</target>
        </trans-unit>
        <trans-unit id="d8a7732b6ec6b1bf76e5763d812ceef942ebf0d0" translate="yes" xml:space="preserve">
          <source>An array of pointers to input arguments.</source>
          <target state="translated">入力引数へのポインタの配列。</target>
        </trans-unit>
        <trans-unit id="dcb0cfdf3e9f6d25482bdcbdfb9b945b63084f5b" translate="yes" xml:space="preserve">
          <source>An array of pointers to return arguments.</source>
          <target state="translated">引数を返すポインタの配列。</target>
        </trans-unit>
        <trans-unit id="61f3b3d1e2d9fee505e437056e292c18f010fd8e" translate="yes" xml:space="preserve">
          <source>An array with &amp;lsquo;</source>
          <target state="translated">'を含む配列</target>
        </trans-unit>
        <trans-unit id="20cd1faa36fe658299e37385173eb8e20247a122" translate="yes" xml:space="preserve">
          <source>An assignment is an expression, so it has a value. Thus, &lt;code&gt;z = 1&lt;/code&gt; as an expression has the value 1. One consequence of this is that you can write multiple assignments together:</source>
          <target state="translated">代入は式なので、値があります。したがって、式としての &lt;code&gt;z = 1&lt;/code&gt; の値は1です。これの1つの結果は、複数の割り当てを一緒に記述できることです。</target>
        </trans-unit>
        <trans-unit id="adb423ef1f1253007a9e6bdcfc772c9224db76bd" translate="yes" xml:space="preserve">
          <source>An attempt is made to approximate the cost of individual operations, but it is wildly inaccurate. You can improve the stability somewhat by doing more work for each &lt;code&gt;n&lt;/code&gt;. For example:</source>
          <target state="translated">個々の操作のコストを概算する試みが行われますが、非常に不正確です。各 &lt;code&gt;n&lt;/code&gt; に対してより多くの作業を行うことにより、安定性をある程度向上させることができます。例えば：</target>
        </trans-unit>
        <trans-unit id="d322d7aad27d5ff129532e6d9d788a38d33983e3" translate="yes" xml:space="preserve">
          <source>An easy way to get an overview over the collected data is &lt;code&gt;profshow&lt;/code&gt;. This function takes the profiler data returned by &lt;code&gt;profile&lt;/code&gt; as input and prints a flat profile, for instance:</source>
          <target state="translated">収集されたデータの概要を取得する簡単な方法は、 &lt;code&gt;profshow&lt;/code&gt; です。この関数は、 &lt;code&gt;profile&lt;/code&gt; から返されたプロファイラーデータを入力として受け取り、フラットプロファイルを出力します。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="6f14f47bbd2f72d2b8ff1fc96a133d299eaf0475" translate="yes" xml:space="preserve">
          <source>An equality constraint (&lt;code&gt;A(i,:)*x = b(i)&lt;/code&gt;).</source>
          <target state="translated">等式制約（ &lt;code&gt;A(i,:)*x = b(i)&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="930632f11da558ed2d8ce54cb74b171e78f8577b" translate="yes" xml:space="preserve">
          <source>An equivalent definition is</source>
          <target state="translated">同等の定義は</target>
        </trans-unit>
        <trans-unit id="142edce8df3f66c69797450fc3cb15d161f5463b" translate="yes" xml:space="preserve">
          <source>An equivalent form of the equation is:</source>
          <target state="translated">等価な式は次のようになります。</target>
        </trans-unit>
        <trans-unit id="4a0894e26fe38065d5c7303590f648361f46fceb" translate="yes" xml:space="preserve">
          <source>An error is something that occurs when a program is in a state where it doesn&amp;rsquo;t make sense to continue. An example is when a function is called with too few input arguments. In this situation the function should abort with an error message informing the user of the lacking input arguments.</source>
          <target state="translated">エラーは、プログラムが続行しても意味がない状態にあるときに発生するものです。例として、入力引数が少なすぎる関数が呼び出された場合があります。この状況では、入力引数がないことをユーザーに通知するエラーメッセージが表示され、関数は異常終了するはずです。</target>
        </trans-unit>
        <trans-unit id="4ad0088143ec609dfada6eac9ccb16f329ccb23e" translate="yes" xml:space="preserve">
          <source>An error message is printed if the dimensions of the arguments do not agree, or if either argument is complex.</source>
          <target state="translated">引数の寸法が一致しない場合や、どちらかの引数が複雑な場合は、エラーメッセージが表示されます。</target>
        </trans-unit>
        <trans-unit id="3a2dbd11f236c7b267f6afb505591963ca2e57bb" translate="yes" xml:space="preserve">
          <source>An error results if the dimensions of the arguments do not agree, or if either of the arguments is complex.</source>
          <target state="translated">引数の次元が一致しない場合や、どちらかの引数が複雑な場合にエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="d9feda69a1da376b6e0e4db8b529ba427c6c8f84" translate="yes" xml:space="preserve">
          <source>An event such as &lt;code&gt;error&lt;/code&gt;, &lt;code&gt;interrupt&lt;/code&gt;, or &lt;code&gt;warning&lt;/code&gt; (see &lt;a href=&quot;#XREFdbstop&quot;&gt;dbstop&lt;/a&gt; for details).</source>
          <target state="translated">&lt;code&gt;error&lt;/code&gt; 、 &lt;code&gt;interrupt&lt;/code&gt; 、 &lt;code&gt;warning&lt;/code&gt; などのイベント（詳細は&lt;a href=&quot;#XREFdbstop&quot;&gt;dbstop&lt;/a&gt;を参照）。</target>
        </trans-unit>
        <trans-unit id="eb10238ee462a2f0aa005bda9a15e4dcbf2f8632" translate="yes" xml:space="preserve">
          <source>An example &lt;code&gt;mtimes&lt;/code&gt; method for the polynomial class might look like</source>
          <target state="translated">多項式クラスの &lt;code&gt;mtimes&lt;/code&gt; メソッドの例は次のようになります。</target>
        </trans-unit>
        <trans-unit id="b454614c1d6c2080c5f1e40e570f6d2183d56bb4" translate="yes" xml:space="preserve">
          <source>An example from Octave&amp;rsquo;s built-in char class demonstrates the interpreter behavior when &lt;code&gt;isnull&lt;/code&gt; is used correctly.</source>
          <target state="translated">Octaveの組み込みcharクラスの例は、 &lt;code&gt;isnull&lt;/code&gt; が正しく使用されている場合のインタープリターの動作を示しています。</target>
        </trans-unit>
        <trans-unit id="f7c9154e4f3285c20cd1a5698154cdc3f62be239" translate="yes" xml:space="preserve">
          <source>An example of a &lt;code&gt;disp&lt;/code&gt; method for the polynomial class might be</source>
          <target state="translated">多項式クラスの &lt;code&gt;disp&lt;/code&gt; メソッドの例は、</target>
        </trans-unit>
        <trans-unit id="8c60bb5baf993c4cb06b1af2b784e8dbfe22c95d" translate="yes" xml:space="preserve">
          <source>An example of a Delaunay triangulation of a set of points is</source>
          <target state="translated">点の集合を三角測量したデローネの例は</target>
        </trans-unit>
        <trans-unit id="837bfa09b234102e6c7d3771546315554d5e1920" translate="yes" xml:space="preserve">
          <source>An example of an isosurface geometry with different additional coloring:</source>
          <target state="translated">色付けを変えたアイソサーフェスジオメトリの例。</target>
        </trans-unit>
        <trans-unit id="509dc5e401ec88e5e90de15e1f97d0383d9abafe" translate="yes" xml:space="preserve">
          <source>An example of calling &lt;code&gt;sqp&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;sqp&lt;/code&gt; を呼び出す例：</target>
        </trans-unit>
        <trans-unit id="9110feebb8525ae98a7cc49cd865d4159823f02b" translate="yes" xml:space="preserve">
          <source>An example of creating and filling a matrix might be</source>
          <target state="translated">マトリックスの作成と塗りつぶしの例は次のようになります。</target>
        </trans-unit>
        <trans-unit id="1d29901b0350f56d61f67a45a13ed1402e93e174" translate="yes" xml:space="preserve">
          <source>An example of its expected output is</source>
          <target state="translated">期待される出力の例としては</target>
        </trans-unit>
        <trans-unit id="3864d6aa35fadbf8e9dc09e20c865e4e8c7e4a07" translate="yes" xml:space="preserve">
          <source>An example of its use is</source>
          <target state="translated">その使用例としては</target>
        </trans-unit>
        <trans-unit id="f5ac892548f98118376dd81f4bbb59c86c71888b" translate="yes" xml:space="preserve">
          <source>An example of its use is:</source>
          <target state="translated">その使用例としては</target>
        </trans-unit>
        <trans-unit id="409f2f44e66e502812d8921c06692c5a6e500b5c" translate="yes" xml:space="preserve">
          <source>An example of the behavior of this function within Octave is then</source>
          <target state="translated">Octave内でのこの関数の動作の例を以下に示します。</target>
        </trans-unit>
        <trans-unit id="71b2e01c80ae1ba47a9a2b9a4b57b92ad4fea99f" translate="yes" xml:space="preserve">
          <source>An example of the inclusion of a Fortran function in an oct-file is given in the following example, where the C++ wrapper is</source>
          <target state="translated">オクトファイルにFortran関数を含める例を次の例に示します。</target>
        </trans-unit>
        <trans-unit id="87e3592bfdace1c7b422f27f4990371a0bf8150b" translate="yes" xml:space="preserve">
          <source>An example of the use of &lt;code&gt;accumdim&lt;/code&gt; is:</source>
          <target state="translated">&lt;code&gt;accumdim&lt;/code&gt; の使用例は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="a67251afc115dd65cea7e7c1326d709077ca77bc" translate="yes" xml:space="preserve">
          <source>An example of the use of &lt;code&gt;clabel&lt;/code&gt; is</source>
          <target state="translated">&lt;code&gt;clabel&lt;/code&gt; の使用例は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="ed89fd614b170c06b8247ab69d595cdbabe9b1ba" translate="yes" xml:space="preserve">
          <source>An example of the use of &lt;code&gt;convhull&lt;/code&gt; is</source>
          <target state="translated">&lt;code&gt;convhull&lt;/code&gt; の使用例は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="f667bc9d7aac151bc55a892698052921ed010e92" translate="yes" xml:space="preserve">
          <source>An example of the use of &lt;code&gt;dsearch&lt;/code&gt;, using the above values of &lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt; and &lt;var&gt;tri&lt;/var&gt; is</source>
          <target state="translated">上記の &lt;var&gt;x&lt;/var&gt; 、 &lt;var&gt;y&lt;/var&gt; 、 &lt;var&gt;tri&lt;/var&gt; の値を使用した &lt;code&gt;dsearch&lt;/code&gt; の使用例は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="ec9d5d0b295584ff0cbe9a78c27d1475a2833d38" translate="yes" xml:space="preserve">
          <source>An example of the use of &lt;code&gt;inpolygon&lt;/code&gt; might be</source>
          <target state="translated">使用例 &lt;code&gt;inpolygon&lt;/code&gt; があるかもしれません</target>
        </trans-unit>
        <trans-unit id="e17fa3fbc9e340be225536aac353a461f1bc8640" translate="yes" xml:space="preserve">
          <source>An example of the use of &lt;code&gt;interp1&lt;/code&gt; is</source>
          <target state="translated">&lt;code&gt;interp1&lt;/code&gt; の使用例は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="a1a00245455632973f90d8cd5f2cb5b23e3f4c6e" translate="yes" xml:space="preserve">
          <source>An example of the use of &lt;code&gt;linkprop&lt;/code&gt; is</source>
          <target state="translated">&lt;code&gt;linkprop&lt;/code&gt; の使用例は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="c551479e132bb0d8b94ed78e7ad695423a28f3fd" translate="yes" xml:space="preserve">
          <source>An example of the use of &lt;code&gt;pareto&lt;/code&gt; is</source>
          <target state="translated">&lt;code&gt;pareto&lt;/code&gt; の使用例は</target>
        </trans-unit>
        <trans-unit id="e0ea37a407a3591b5629fabed57792f08d7bc2fa" translate="yes" xml:space="preserve">
          <source>An example of the use of &lt;code&gt;polyarea&lt;/code&gt; might be</source>
          <target state="translated">使用例 &lt;code&gt;polyarea&lt;/code&gt; があるかもしれません</target>
        </trans-unit>
        <trans-unit id="90304dbd4871b7c21f3a2f65a9636ab2aa0e1440" translate="yes" xml:space="preserve">
          <source>An example of the use of &lt;code&gt;refreshdata&lt;/code&gt; is:</source>
          <target state="translated">&lt;code&gt;refreshdata&lt;/code&gt; の使用例は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="7d725df488235c39bc14945aa7cc2331adfb83c3" translate="yes" xml:space="preserve">
          <source>An example of the use of &lt;code&gt;surfnorm&lt;/code&gt; is</source>
          <target state="translated">&lt;code&gt;surfnorm&lt;/code&gt; の使用例は</target>
        </trans-unit>
        <trans-unit id="2d964c1b35cbe8b074de009746a8edc9d797bdfb" translate="yes" xml:space="preserve">
          <source>An example of the use of &lt;code&gt;tsearch&lt;/code&gt; can be seen with the simple triangulation</source>
          <target state="translated">&lt;code&gt;tsearch&lt;/code&gt; の使用例は、単純な三角形分割で見ることができます</target>
        </trans-unit>
        <trans-unit id="a266f1e02f6e56c7faf177f8e3ec712d79dea077" translate="yes" xml:space="preserve">
          <source>An example of the use of &lt;code&gt;voronoi&lt;/code&gt; is</source>
          <target state="translated">&lt;code&gt;voronoi&lt;/code&gt; の使用例は</target>
        </trans-unit>
        <trans-unit id="0a69badd1d9b3e2b8ad1cacd573ac218fe45a03d" translate="yes" xml:space="preserve">
          <source>An example of the use of the &lt;code&gt;griddata&lt;/code&gt; function is</source>
          <target state="translated">&lt;code&gt;griddata&lt;/code&gt; 関数の使用例は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="8709434c4a8bed9b2de2f98b92218806ddbc2204" translate="yes" xml:space="preserve">
          <source>An example of the use of these two functions might be</source>
          <target state="translated">この2つの関数の使用例としては、次のようなものが考えられます。</target>
        </trans-unit>
        <trans-unit id="2de686f5f3f72b2597d8174b321d5366d86dfc04" translate="yes" xml:space="preserve">
          <source>An example of the use of this function is</source>
          <target state="translated">この関数の使用例としては</target>
        </trans-unit>
        <trans-unit id="78eb9063c36130840abd2e2b1a281ea8dd8277ef" translate="yes" xml:space="preserve">
          <source>An example of the use of typecast on a little-endian machine is</source>
          <target state="translated">リトルエンディアンマシンでのタイプキャストの使用例としては</target>
        </trans-unit>
        <trans-unit id="b06adcc3821076a34254fd6d22054cddc4202082" translate="yes" xml:space="preserve">
          <source>An example that demonstrates how to work with arbitrary real or complex double precision arrays is given by the file</source>
          <target state="translated">任意の実数または複素数の倍精度配列をどのように扱うかを示す例は、以下のファイルにあります。</target>
        </trans-unit>
        <trans-unit id="d45ab12c55f50c7b6036aef936964903bab65d69" translate="yes" xml:space="preserve">
          <source>An example that demonstrates the use of structures in a mex-file can be found in the file</source>
          <target state="translated">mexファイルでの構造体の使用を示す例は、ファイル</target>
        </trans-unit>
        <trans-unit id="92ca08f5090c863887d83f6aa6fa69ab7ddf4323" translate="yes" xml:space="preserve">
          <source>An explicit conversion to a full matrix can be requested using the built-in function &lt;em&gt;full&lt;/em&gt;. It should also be noted that the diagonal and permutation matrix objects will cache the result of the conversion after it is first requested (explicitly or implicitly), so that subsequent conversions will be very cheap.</source>
          <target state="translated">組み込み関数&lt;em&gt;full&lt;/em&gt;を使用して、完全な行列への明示的な変換を要求できます。また、対角行列と順列行列オブジェクトは、最初に要求された後（明示的または暗黙的に）変換の結果をキャッシュするため、その後の変換は非常に安価になります。</target>
        </trans-unit>
        <trans-unit id="8a647a9b2cb7446677be2c2e03adb32604edea60" translate="yes" xml:space="preserve">
          <source>An expression can serve as a statement on its own. Most other kinds of statements contain one or more expressions which specify data to be operated on. As in other languages, expressions in Octave include variables, array references, constants, and function calls, as well as combinations of these with various operators.</source>
          <target state="translated">式はそれ自体がステートメントとして機能することができます。他のほとんどの種類の文は,操作されるデータを指定する1つ以上の式を含んでいます。他の言語と同様に,Octaveの式には,変数,配列参照,定数,関数呼び出しのほか,様々な 演算子とこれらの組み合わせが含まれます。</target>
        </trans-unit>
        <trans-unit id="aceccf2b5118f99183fabf6f1bbb59ce6f86536f" translate="yes" xml:space="preserve">
          <source>An important use of the Delaunay tessellation is that it can be used to interpolate from scattered data to an arbitrary set of points. To do this the N-simplex of the known set of points is calculated with &lt;code&gt;delaunay&lt;/code&gt; or &lt;code&gt;delaunayn&lt;/code&gt;. Then the simplices in to which the desired points are found are identified. Finally the vertices of the simplices are used to interpolate to the desired points. The functions that perform this interpolation are &lt;code&gt;griddata&lt;/code&gt;, &lt;code&gt;griddata3&lt;/code&gt; and &lt;code&gt;griddatan&lt;/code&gt;.</source>
          <target state="translated">Delaunayテッセレーションの重要な用途は、散在データから任意のポイントセットに補間するために使用できることです。これを行うには、既知の点のセットのNシンプレックスを &lt;code&gt;delaunay&lt;/code&gt; または &lt;code&gt;delaunayn&lt;/code&gt; で計算します。次に、目的のポイントが見つかるシンプレックスが特定されます。最後に、シンプレックスの頂点を使用して、目的のポイントに補間します。この補間を実行する関数は、 &lt;code&gt;griddata&lt;/code&gt; 、 &lt;code&gt;griddata3&lt;/code&gt; 、および &lt;code&gt;griddatan&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="97a62449540788f87f3332ffd1e6de5d004e5d9c" translate="yes" xml:space="preserve">
          <source>An index expression consists of a set of parentheses enclosing &lt;em&gt;M&lt;/em&gt; expressions separated by commas. Each individual index value, or component, is used for the respective dimension of the object that it is applied to. In other words, the first index component is used for the first dimension (rows) of the object, the second index component is used for the second dimension (columns) of the object, and so on. The number of index components &lt;em&gt;M&lt;/em&gt; defines the dimensionality of the index expression. An index with two components would be referred to as a 2-D index because it has two dimensions.</source>
          <target state="translated">インデックス式は、コンマで区切られた&lt;em&gt;M&lt;/em&gt;式を囲む括弧のセットで構成されます。個々のインデックス値またはコンポーネントは、それが適用されるオブジェクトのそれぞれの次元に使用されます。つまり、最初のインデックスコンポーネントはオブジェクトの最初の次元（行）に使用され、2番目のインデックスコンポーネントはオブジェクトの2番目の次元（列）に使用されます。インデックスコンポーネントの数&lt;em&gt;M&lt;/em&gt;は、インデックス式の次元を定義します。 2つのコンポーネントを持つインデックスは、2次元であるため、2-Dインデックスと呼ばれます。</target>
        </trans-unit>
        <trans-unit id="43071e6b301277959a8ecebda1b2fc0137866f8e" translate="yes" xml:space="preserve">
          <source>An indexed image consists of an M-by-N matrix of integers and a C-by-3 color map. Each integer corresponds to an index in the color map, and each row in the color map corresponds to an RGB color. The color map must be of class &lt;code&gt;double&lt;/code&gt; with values between 0 and 1.</source>
          <target state="translated">インデックス付きイメージは、整数のM行N列の行列とC行3列のカラーマップで構成されます。各整数はカラーマップのインデックスに対応し、カラーマップの各行はRGBカラーに対応します。カラーマップは、クラス &lt;code&gt;double&lt;/code&gt; で、値は0〜1でなければなりません。</target>
        </trans-unit>
        <trans-unit id="0bc591c08ea4625b4a1edd2d524b93a18ebff480" translate="yes" xml:space="preserve">
          <source>An indicator of convergence. 0 indicates that the iteration count was exceeded, and therefore convergence was not reached; &amp;gt;0 indicates that the algorithm converged. (The algorithm is stable and will converge given enough iterations.)</source>
          <target state="translated">収束の指標。0は反復回数を超えたため、収束に到達しなかったことを示します。&amp;gt; 0は、アルゴリズムが収束したことを示します。（アルゴリズムは安定しており、十分な反復があれば収束します。）</target>
        </trans-unit>
        <trans-unit id="2d78f78b406be5883f7e5f4d01420a36f33502e1" translate="yes" xml:space="preserve">
          <source>An inequality constraint with an upper bound (&lt;code&gt;A(i,:)*x &amp;lt;= b(i)&lt;/code&gt;).</source>
          <target state="translated">上限のある不等式制約（ &lt;code&gt;A(i,:)*x &amp;lt;= b(i)&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="eb13a8f3ed331d6062cd91596eed788516ca9d25" translate="yes" xml:space="preserve">
          <source>An inequality constraint with both upper and lower bounds (&lt;code&gt;A(i,:)*x &amp;gt;= -b(i)&lt;/code&gt;) &lt;em&gt;and&lt;/em&gt; (&lt;code&gt;A(i,:)*x &amp;lt;= b(i)&lt;/code&gt;).</source>
          <target state="translated">上限と下限の両方を持つ不等式制約（ &lt;code&gt;A(i,:)*x &amp;gt;= -b(i)&lt;/code&gt; ）&lt;em&gt;および&lt;/em&gt;（ &lt;code&gt;A(i,:)*x &amp;lt;= b(i)&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="9735e0e8646b14c8606582272c81a4187878afed" translate="yes" xml:space="preserve">
          <source>An inequality with a lower bound (&lt;code&gt;A(i,:)*x &amp;gt;= b(i)&lt;/code&gt;).</source>
          <target state="translated">下限のある不等式（ &lt;code&gt;A(i,:)*x &amp;gt;= b(i)&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="bf0d4cab65ebdaaefaa3a62a11750262388b909a" translate="yes" xml:space="preserve">
          <source>An inline function is created from a string containing the function body using the &lt;code&gt;inline&lt;/code&gt; function. The following code defines the function &lt;em&gt;f(x) = x^2 + 2&lt;/em&gt;.</source>
          <target state="translated">インライン関数は、 &lt;code&gt;inline&lt;/code&gt; 関数を使用して、関数本体を含む文字列から作成されます。次のコードは、関数&lt;em&gt;f（x）= x ^ 2 + 2を&lt;/em&gt;定義します。</target>
        </trans-unit>
        <trans-unit id="f92075a96bc69dd2dc303414b3df4a2d10476b33" translate="yes" xml:space="preserve">
          <source>An integer indicating the status of the solution.</source>
          <target state="translated">解の状態を示す整数。</target>
        </trans-unit>
        <trans-unit id="9e68ee25eeccb1070cf40b7dd826c54506897963" translate="yes" xml:space="preserve">
          <source>An integer variable.</source>
          <target state="translated">整数変数。</target>
        </trans-unit>
        <trans-unit id="53b0d72a404885a677a811eb0275069b7a662974" translate="yes" xml:space="preserve">
          <source>An isosurface connects points with the same value and is analogous to a contour plot, but in three dimensions.</source>
          <target state="translated">等値面は、同じ値を持つ点を結んだもので、等高線図に似ていますが、3次元です。</target>
        </trans-unit>
        <trans-unit id="438e3383149f3b2a6ee11a52edd5b51c17f9a6bc" translate="yes" xml:space="preserve">
          <source>An m-file for the differential equation used above is included with the Octave distribution in the examples directory under the name</source>
          <target state="translated">上記で使用した微分方程式のためのmファイルが,examplesディレクトリのOctaveディストリビューションに含まれています。</target>
        </trans-unit>
        <trans-unit id="f0d1fed9943ed5cc011442277da5a18974af0d16" translate="yes" xml:space="preserve">
          <source>An object can be resized to more dimensions than it has; in such case the missing dimensions are assumed to be 1. Resizing an object to fewer dimensions is not possible.</source>
          <target state="translated">オブジェクトは、それが持っている寸法よりも多くの寸法にリサイズすることができます;その場合、欠落している寸法は1と仮定されます。オブジェクトをより少ない寸法にリサイズすることはできません。</target>
        </trans-unit>
        <trans-unit id="642809894817d6eb67f19198707729fc951a942c" translate="yes" xml:space="preserve">
          <source>An object of class &lt;code&gt;polynomial2&lt;/code&gt; is created by calling the class constructor:</source>
          <target state="translated">クラス &lt;code&gt;polynomial2&lt;/code&gt; のオブジェクトは、クラスコンストラクターを呼び出すことによって作成されます。</target>
        </trans-unit>
        <trans-unit id="5bdff866fbf225060652ab613dc4adba83d1bafc" translate="yes" xml:space="preserve">
          <source>An obvious way to do this is by storing the elements of the matrix as triplets, with two elements being their position in the array (rows and column) and the third being the data itself. This is conceptually easy to grasp, but requires more storage than is strictly needed.</source>
          <target state="translated">これを行う明白な方法は,行列の要素を三重項として格納し,2 つの要素を配列内の位置(行と列)とし,3 つ目の要素をデータそのものとすることです.これは概念的には簡単に理解できますが,厳密には必要以上のストレージが必要になります.</target>
        </trans-unit>
        <trans-unit id="42aa0b746728e1e7e403f4aad1dee1fdbefc1f49" translate="yes" xml:space="preserve">
          <source>An optional &lt;em&gt;flag character&lt;/em&gt; &amp;lsquo;</source>
          <target state="translated">オプションの&lt;em&gt;フラグ文字&lt;/em&gt; '</target>
        </trans-unit>
        <trans-unit id="6142a364090dc92b87518e7550aa380d074220b5" translate="yes" xml:space="preserve">
          <source>An optional &lt;em&gt;precision&lt;/em&gt; to specify the number of digits to be written for the numeric conversions. If the precision is specified, it consists of a period (&amp;lsquo;</source>
          <target state="translated">数値変換のために書き込まれる桁数を指定するオプションの&lt;em&gt;精度&lt;/em&gt;。精度が指定されている場合、それはピリオド（ '</target>
        </trans-unit>
        <trans-unit id="2f068cbd116007a9236a7ec48d88483acfbf4ed7" translate="yes" xml:space="preserve">
          <source>An optional &lt;em&gt;type modifier character&lt;/em&gt;. This character is ignored by Octave&amp;rsquo;s &lt;code&gt;printf&lt;/code&gt; function, but is recognized to provide compatibility with the C language &lt;code&gt;printf&lt;/code&gt;.</source>
          <target state="translated">オプションの&lt;em&gt;タイプ修飾子&lt;/em&gt;。この文字はOctaveの &lt;code&gt;printf&lt;/code&gt; 関数では無視されますが、C言語の &lt;code&gt;printf&lt;/code&gt; との互換性を提供するために認識されています。</target>
        </trans-unit>
        <trans-unit id="7464ea666c2917755eaaaa559c0b87c25aea84a1" translate="yes" xml:space="preserve">
          <source>An optional decimal integer specifying the &lt;em&gt;minimum field width&lt;/em&gt;. If the normal conversion produces fewer characters than this, the field is padded with spaces to the specified width. This is a &lt;em&gt;minimum&lt;/em&gt; value; if the normal conversion produces more characters than this, the field is &lt;em&gt;not&lt;/em&gt; truncated. Normally, the output is right-justified within the field.</source>
          <target state="translated">&lt;em&gt;最小フィールド幅を&lt;/em&gt;指定するオプションの10進整数。通常の変換で生成される文字数がこれより少ない場合、フィールドは指定された幅になるまでスペースが埋め込まれます。これは&lt;em&gt;最小&lt;/em&gt;値です。通常の変換でこれより多くの文字が生成される場合、フィールドは切り捨てられ&lt;em&gt;ません&lt;/em&gt;。通常、出力はフィールド内で右寄せされます。</target>
        </trans-unit>
        <trans-unit id="717908376056e6eb6e0056decb5b94860998a095" translate="yes" xml:space="preserve">
          <source>An optional decimal integer that specifies the &lt;em&gt;maximum field width&lt;/em&gt;. Reading of characters from the input stream stops either when this maximum is reached or when a non-matching character is found, whichever happens first. Most conversions discard initial whitespace characters, and these discarded characters don&amp;rsquo;t count towards the maximum field width. Conversions that do not discard initial whitespace are explicitly documented.</source>
          <target state="translated">&lt;em&gt;最大フィールド幅&lt;/em&gt;を指定するオプションの10進整数。入力ストリームからの文字の読み取りは、この最大値に達したとき、または一致しない文字が見つかったときのいずれかが最初に発生したときに停止します。ほとんどの変換では最初の空白文字が破棄され、これらの破棄された文字は最大フィールド幅にカウントされません。初期の空白を破棄しない変換は明示的に文書化されています。</target>
        </trans-unit>
        <trans-unit id="b97540ec7eb22ec0a6570303acc7d52393482fde" translate="yes" xml:space="preserve">
          <source>An optional directory containing any files that are directly installed by the package. Typically this will include any &lt;code&gt;m&lt;/code&gt;-files.</source>
          <target state="translated">パッケージによって直接インストールされるファイルを含むオプションのディレクトリ。通常、これには &lt;code&gt;m&lt;/code&gt; ファイルが含まれます。</target>
        </trans-unit>
        <trans-unit id="62fb6180f16181388a0e3b8b832282927d75f39c" translate="yes" xml:space="preserve">
          <source>An optional directory containing code that must be built prior to the packages installation. The Octave package manager will execute</source>
          <target state="translated">パッケージのインストール前にビルドしなければならないコードを含むオプションのディレクトリです。Octaveパッケージマネージャは</target>
        </trans-unit>
        <trans-unit id="7ed92f9bc81d3a174dd3a8039d26b014d0f436ee" translate="yes" xml:space="preserve">
          <source>An optional directory containing documentation for the package. The files in this directory will be directly installed in a sub-directory of the installed package for future reference.</source>
          <target state="translated">パッケージのドキュメントを含むオプションのディレクトリ。このディレクトリのファイルは、将来の参照のために、 インストールされたパッケージのサブディレクトリに直接インストールされます。</target>
        </trans-unit>
        <trans-unit id="c8a8cab7c0dcb0249b3adf2ee850ad1beabd76ac" translate="yes" xml:space="preserve">
          <source>An optional directory containing files that will be added to the Octave &lt;code&gt;EXEC_PATH&lt;/code&gt; when the package is loaded. This might contain external scripts, etc., called by functions within the package.</source>
          <target state="translated">パッケージのロード時にOctave &lt;code&gt;EXEC_PATH&lt;/code&gt; に追加されるファイルを含むオプションのディレクトリ。これには、パッケージ内の関数によって呼び出される外部スクリプトなどが含まれる場合があります。</target>
        </trans-unit>
        <trans-unit id="d64675f8404b546961006103bae24c4a9f5c8762" translate="yes" xml:space="preserve">
          <source>An optional field with the column number at which the error occurred</source>
          <target state="translated">エラーが発生した列番号を持つオプションのフィールド</target>
        </trans-unit>
        <trans-unit id="34b3e4f70e08888b7529e1b0e7e6a44d3b5a78da" translate="yes" xml:space="preserve">
          <source>An optional file that includes commands that are run when the package is added to the users path. Note that &lt;code&gt;PKG_ADD&lt;/code&gt; directives in the source code of the package will also be added to this file by the Octave package manager. Note that symbolic links are to be avoided in packages, as symbolic links do not exist on some file systems, and so a typical use for this file is the replacement of the symbolic link</source>
          <target state="translated">パッケージがユーザーパスに追加されたときに実行されるコマンドを含むオプションファイル。パッケージのソースコード内の &lt;code&gt;PKG_ADD&lt;/code&gt; ディレクティブも、Octaveパッケージマネージャーによってこのファイルに追加されることに注意してください。一部のファイルシステムにはシンボリックリンクが存在しないため、シンボリックリンクはパッケージでは避けてください。このファイルの一般的な用途は、シンボリックリンクの置き換えです。</target>
        </trans-unit>
        <trans-unit id="c16664f3c7fca472009141fd6268917393cf3e17" translate="yes" xml:space="preserve">
          <source>An optional file that includes commands that are run when the package is removed from the users path. Note that &lt;code&gt;PKG_DEL&lt;/code&gt; directives in the source code of the package will also be added to this file by the Octave package manager. See &lt;a href=&quot;pkg_005fadd-and-pkg_005fdel-directives#PKG_005fADD-and-PKG_005fDEL-Directives&quot;&gt;PKG_ADD and PKG_DEL Directives&lt;/a&gt;, for details on &lt;code&gt;PKG_DEL&lt;/code&gt; directives.</source>
          <target state="translated">パッケージがユーザーパスから削除されたときに実行されるコマンドを含むオプションファイル。パッケージのソースコード内の &lt;code&gt;PKG_DEL&lt;/code&gt; ディレクティブも、Octaveパッケージマネージャーによってこのファイルに追加されることに注意してください。参照&lt;a href=&quot;pkg_005fadd-and-pkg_005fdel-directives#PKG_005fADD-and-PKG_005fDEL-Directives&quot;&gt;はpkg_addとPKG_DELディレクティブ&lt;/a&gt;の詳細については、 &lt;code&gt;PKG_DEL&lt;/code&gt; のディレクティブ。</target>
        </trans-unit>
        <trans-unit id="068eb6236dd6baf0de6e501c8582dd69f4f99f0e" translate="yes" xml:space="preserve">
          <source>An optional final argument, which must be a string or cell array of strings, contains options passed to the underlying qhull command. See the documentation for the Qhull library for details &lt;a href=&quot;http://www.qhull.org/html/qh-quick.htm#options&quot;&gt;http://www.qhull.org/html/qh-quick.htm#options&lt;/a&gt;. The default option is &lt;code&gt;{&quot;Qt&quot;}&lt;/code&gt;.</source>
          <target state="translated">オプションの最後の引数は、文字列または文字列のセル配列でなければならず、基礎となるqhullコマンドに渡されるオプションを含みます。詳細については、Qhullライブラリのドキュメント&lt;a href=&quot;http://www.qhull.org/html/qh-quick.htm#options&quot;&gt;http://www.qhull.org/html/qh-quick.htm#options&lt;/a&gt;を参照してください。デフォルトのオプションは &lt;code&gt;{&quot;Qt&quot;}&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="5e6f7da8e817a925653db04505f5c8e9fc9a57a1" translate="yes" xml:space="preserve">
          <source>An optional final argument, which must be a string or cell array of strings, contains options passed to the underlying qhull command. See the documentation for the Qhull library for details &lt;a href=&quot;http://www.qhull.org/html/qh-quick.htm#options&quot;&gt;http://www.qhull.org/html/qh-quick.htm#options&lt;/a&gt;. The default options are &lt;code&gt;{&quot;Qt&quot;, &quot;Qbb&quot;, &quot;Qc&quot;, &quot;Qz&quot;}&lt;/code&gt;.</source>
          <target state="translated">オプションの最後の引数は、文字列または文字列のセル配列でなければならず、基礎となるqhullコマンドに渡されるオプションを含みます。詳細については、Qhullライブラリのドキュメント&lt;a href=&quot;http://www.qhull.org/html/qh-quick.htm#options&quot;&gt;http://www.qhull.org/html/qh-quick.htm#options&lt;/a&gt;を参照してください。デフォルトのオプションは &lt;code&gt;{&quot;Qt&quot;, &quot;Qbb&quot;, &quot;Qc&quot;, &quot;Qz&quot;}&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="1756db6c076589390ea7feae8740428d259acb83" translate="yes" xml:space="preserve">
          <source>An optional final argument, which must be a string or cell array of strings, contains options passed to the underlying qhull command. See the documentation for the Qhull library for details &lt;a href=&quot;http://www.qhull.org/html/qh-quick.htm#options&quot;&gt;http://www.qhull.org/html/qh-quick.htm#options&lt;/a&gt;. The default options are &lt;code&gt;{&quot;Qt&quot;, &quot;Qbb&quot;, &quot;Qc&quot;}&lt;/code&gt;. If Qhull fails for 2-D input the triangulation is attempted again with the options &lt;code&gt;{&quot;Qt&quot;, &quot;Qbb&quot;, &quot;Qc&quot;, &quot;Qz&quot;}&lt;/code&gt; which may result in reduced accuracy.</source>
          <target state="translated">オプションのfinal引数は、文字列または文字列のセル配列である必要があり、基になるqhullコマンドに渡されるオプションが含まれています。詳細については、Qhullライブラリのドキュメントを参照して&lt;a href=&quot;http://www.qhull.org/html/qh-quick.htm#options&quot;&gt;くださいhttp://www.qhull.org/html/qh-quick.htm#options&lt;/a&gt;。デフォルトのオプションは &lt;code&gt;{&quot;Qt&quot;, &quot;Qbb&quot;, &quot;Qc&quot;}&lt;/code&gt; です。 Qhullが2D入力で失敗した場合、オプション &lt;code&gt;{&quot;Qt&quot;, &quot;Qbb&quot;, &quot;Qc&quot;, &quot;Qz&quot;}&lt;/code&gt; を使用して三角測量が再試行されるため、精度が低下する可能性があります。</target>
        </trans-unit>
        <trans-unit id="32d4fc1a31ba9bfdd10ea16cd2c5f1133f518935" translate="yes" xml:space="preserve">
          <source>An optional list of &lt;var&gt;property&lt;/var&gt;/&lt;var&gt;value&lt;/var&gt; pairs can be used to change the appearance of the created title text object.</source>
          <target state="translated">オプションのリスト &lt;var&gt;property&lt;/var&gt; / &lt;var&gt;value&lt;/var&gt; ペアが作成されたタイトルテキストオブジェクトの外観を変更するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="e27fd7425ff27ee8e5036a98f16b4d71e0309998" translate="yes" xml:space="preserve">
          <source>An optional list of &lt;var&gt;property&lt;/var&gt;/&lt;var&gt;value&lt;/var&gt; pairs can be used to change the properties of the created text label.</source>
          <target state="translated">オプションのリスト &lt;var&gt;property&lt;/var&gt; / &lt;var&gt;value&lt;/var&gt; ペアが作成されたテキストラベルのプロパティを変更するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="a5124ee277bc9953f09bc1515165ec9e36203c28" translate="yes" xml:space="preserve">
          <source>An optional range specification can be used to list only a portion of the file. The special keyword &lt;code&gt;&quot;end&quot;&lt;/code&gt; is a valid line number specification for the last line of the file.</source>
          <target state="translated">オプションの範囲指定を使用して、ファイルの一部のみをリストできます。特別なキーワード &lt;code&gt;&quot;end&quot;&lt;/code&gt; は、ファイルの最終行の有効な行番号指定です。</target>
        </trans-unit>
        <trans-unit id="b5c3072cff6c2e3fb063cacff763796433e946cf" translate="yes" xml:space="preserve">
          <source>An optional second argument, which must be a string or cell array of strings, contains options passed to the underlying qhull command. See the documentation for the Qhull library for details &lt;a href=&quot;http://www.qhull.org/html/qh-quick.htm#options&quot;&gt;http://www.qhull.org/html/qh-quick.htm#options&lt;/a&gt;.</source>
          <target state="translated">文字列または文字列のセル配列でなければならないオプションの2番目の引数には、基になるqhullコマンドに渡されるオプションが含まれます。詳細については、Qhullライブラリのドキュメント&lt;a href=&quot;http://www.qhull.org/html/qh-quick.htm#options&quot;&gt;http://www.qhull.org/html/qh-quick.htm#options&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="913971c06348ec643be6bf4d8cab8a7fd6bd6447" translate="yes" xml:space="preserve">
          <source>An optional second argument, which must be a string or cell array of strings, contains options passed to the underlying qhull command. See the documentation for the Qhull library for details &lt;a href=&quot;http://www.qhull.org/html/qh-quick.htm#options&quot;&gt;http://www.qhull.org/html/qh-quick.htm#options&lt;/a&gt;. The default options depend on the dimension of the input:</source>
          <target state="translated">文字列または文字列のセル配列でなければならないオプションの2番目の引数には、基になるqhullコマンドに渡されるオプションが含まれます。詳細については、Qhullライブラリのドキュメント&lt;a href=&quot;http://www.qhull.org/html/qh-quick.htm#options&quot;&gt;http://www.qhull.org/html/qh-quick.htm#options&lt;/a&gt;を参照してください。デフォルトのオプションは、入力の次元によって異なります。</target>
        </trans-unit>
        <trans-unit id="18cd347d8ff985aa6c0071db16eea4aa7e30be3c" translate="yes" xml:space="preserve">
          <source>An optional short description of the used license (e.g., GPL version 3 or newer). This is optional since the file</source>
          <target state="translated">使用されているライセンスのオプションの短い説明 (例:GPL バージョン 3 または新しいもの)。これはオプションです。</target>
        </trans-unit>
        <trans-unit id="0a13b61661ef4d1d1a783560533fe5b4794934c3" translate="yes" xml:space="preserve">
          <source>An optional sixth argument specifies the specular exponent (spread) &lt;var&gt;se&lt;/var&gt;. If not given, &lt;var&gt;se&lt;/var&gt; defaults to 10.</source>
          <target state="translated">オプションの6番目の引数は、鏡面指数（拡散） &lt;var&gt;se&lt;/var&gt; を指定します。指定しない場合、 &lt;var&gt;se&lt;/var&gt; のデフォルトは10です。</target>
        </trans-unit>
        <trans-unit id="d8c492d0e2298093b9ff194505a48e7623726ad9" translate="yes" xml:space="preserve">
          <source>An optional structure containing the following parameter(s) used to define the behavior of the solver. Missing elements in the structure take on default values, so you only need to set the elements that you wish to change from the default.</source>
          <target state="translated">ソルバーの動作を定義するために使用される以下のパラメータを含むオプションの構造体。構造体にない要素はデフォルト値を取るので、デフォルトから変更したい要素だけを設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="a2208ee04c913e350c4fd5b07ddd2d2d229ee32d" translate="yes" xml:space="preserve">
          <source>An optional third argument &lt;code&gt;&quot;enable&quot;&lt;/code&gt; or &lt;code&gt;&quot;disable&quot;&lt;/code&gt; is accepted but ignored.</source>
          <target state="translated">オプションの3番目の引数 &lt;code&gt;&quot;enable&quot;&lt;/code&gt; または &lt;code&gt;&quot;disable&quot;&lt;/code&gt; は受け入れられますが、無視されます。</target>
        </trans-unit>
        <trans-unit id="1a51cad8576067be21e3c9672827d40116a05f56" translate="yes" xml:space="preserve">
          <source>An optional timeout can be specified using the property &lt;code&gt;&quot;timeout&quot;&lt;/code&gt;. This timeout value is the number of seconds to wait for the condition to be true. &lt;var&gt;timeout&lt;/var&gt; must be at least 1. If a smaller value is specified, a warning is issued and a value of 1 is used instead. If the timeout value is not an integer, it is truncated towards 0.</source>
          <target state="translated">オプションのタイムアウトは、プロパティ &lt;code&gt;&quot;timeout&quot;&lt;/code&gt; を使用して指定できます。このタイムアウト値は、条件がtrueになるまで待機する秒数です。 &lt;var&gt;timeout&lt;/var&gt; は少なくとも1でなければなりません。これより小さい値を指定すると、警告が発行され、代わりに値1が使用されます。タイムアウト値が整数でない場合、0に向かって切り捨てられます。</target>
        </trans-unit>
        <trans-unit id="042a17c1ea683e5b80e4f43c8e0533a31b65c058" translate="yes" xml:space="preserve">
          <source>An optional type modifier character. This character is ignored by Octave&amp;rsquo;s &lt;code&gt;scanf&lt;/code&gt; function, but is recognized to provide compatibility with the C language &lt;code&gt;scanf&lt;/code&gt;.</source>
          <target state="translated">オプションのタイプ修飾文字。この文字はOctaveの &lt;code&gt;scanf&lt;/code&gt; 関数では無視されますが、C言語の &lt;code&gt;scanf&lt;/code&gt; との互換性を提供するために認識されています。</target>
        </trans-unit>
        <trans-unit id="2f805701f60830df81d1bd20c5335d7cd8eaea1c" translate="yes" xml:space="preserve">
          <source>An scalar value containing the relative menu position. The entry with the lowest value is at the first position starting from left or top.</source>
          <target state="translated">メニューの相対的な位置を含むスカラー値。値が最も小さいエントリは、左または上から始まる最初の位置にあります。</target>
        </trans-unit>
        <trans-unit id="26e308e8f3909aeff9873f75e92c3d168a850719" translate="yes" xml:space="preserve">
          <source>An un-typed property. This kind of property can hold any octave value. &lt;var&gt;args&lt;/var&gt; contains the default value.</source>
          <target state="translated">型指定されていないプロパティ。この種類のプロパティは、任意のオクターブ値を保持できます。 &lt;var&gt;args&lt;/var&gt; にはデフォルト値が含まれています。</target>
        </trans-unit>
        <trans-unit id="7e328161ae176b367a2dd68c96a3f87166c5d4c9" translate="yes" xml:space="preserve">
          <source>An upper triangular matrix has nonzero entries only on the main diagonal and above.</source>
          <target state="translated">上三角行列は、主対角線上にのみ非ゼロのエントリを持ちます。</target>
        </trans-unit>
        <trans-unit id="88ff5d2ec4d3de1bf4958c2936f676d71d7b9337" translate="yes" xml:space="preserve">
          <source>Anchoring operators. Requires pattern to occur at the start (&lt;code&gt;^&lt;/code&gt;) or end (&lt;code&gt;$&lt;/code&gt;) of the string.</source>
          <target state="translated">アンカー演算子。文字列の先頭（ &lt;code&gt;^&lt;/code&gt; ）または末尾（ &lt;code&gt;$&lt;/code&gt; ）でパターンが発生する必要があります。</target>
        </trans-unit>
        <trans-unit id="bd8dc56a79af20a3be2a63f12609fb0c43443053" translate="yes" xml:space="preserve">
          <source>And to compute the hash value of a file, e.g., &lt;code&gt;file = &quot;file.txt&quot;&lt;/code&gt;, call &lt;code&gt;hash&lt;/code&gt; in combination with the &lt;code&gt;fileread&lt;/code&gt;:</source>
          <target state="translated">そして、ファイルのハッシュ値を計算するには、例えば &lt;code&gt;file = &quot;file.txt&quot;&lt;/code&gt; 、 &lt;code&gt;hash&lt;/code&gt; を &lt;code&gt;fileread&lt;/code&gt; と組み合わせて呼び出します：</target>
        </trans-unit>
        <trans-unit id="f01b669a536a4f381b943a718310d3ef2819edc9" translate="yes" xml:space="preserve">
          <source>And, here is how to &lt;em&gt;yank&lt;/em&gt; the text back into the line. Yanking means to copy the most-recently-killed text from the kill buffer.</source>
          <target state="translated">そして、これがテキストを行に&lt;em&gt;ヤンク&lt;/em&gt;する方法です。ヤンキングとは、最後にキルされたテキストをキルバッファからコピーすることです。</target>
        </trans-unit>
        <trans-unit id="d3b8cad38b939ab2e626fb472109be3b187ccb54" translate="yes" xml:space="preserve">
          <source>Anonymous Function Handle</source>
          <target state="translated">匿名関数ハンドル</target>
        </trans-unit>
        <trans-unit id="6f497993755de46018a5ff1778be3f6bc999629d" translate="yes" xml:space="preserve">
          <source>Anonymous Functions</source>
          <target state="translated">匿名機能</target>
        </trans-unit>
        <trans-unit id="abc1203d9d051a13ccc429e49cded3efce0acb17" translate="yes" xml:space="preserve">
          <source>Anonymous functions are defined using the syntax</source>
          <target state="translated">匿名関数は、以下の構文を使用して定義されます。</target>
        </trans-unit>
        <trans-unit id="86c8d4349d09fa2b8df21b3095b8e1bc53f536f4" translate="yes" xml:space="preserve">
          <source>Another advanced use of linear indexing is to create arrays filled with a single value. This can be done by using an index of ones on a scalar value. The result is an object with the dimensions of the index expression and every element equal to the original scalar. For example, the following statements</source>
          <target state="translated">線形インデキシングのもう一つの高度な使用法は、単一の値で満たされた配列を作成することです。これはスカラ値に1のインデックスを使用することで行うことができます。その結果、インデックス式の次元を持ち、すべての要素が元のスカラ値と等しいオブジェクトが得られます。例えば、以下の文は</target>
        </trans-unit>
        <trans-unit id="f5938799b5dc9e3884a33e90847c72f62cc781de" translate="yes" xml:space="preserve">
          <source>Another class of error message occurs at evaluation time. These errors are called &lt;em&gt;run-time errors&lt;/em&gt;, or sometimes &lt;em&gt;evaluation errors&lt;/em&gt;, because they occur when your program is being &lt;em&gt;run&lt;/em&gt;, or &lt;em&gt;evaluated&lt;/em&gt;. For example, if after correcting the mistake in the previous function definition, you type</source>
          <target state="translated">別のクラスのエラーメッセージが評価時に発生します。これらのエラーは、プログラムの&lt;em&gt;実行&lt;/em&gt;時または&lt;em&gt;評価&lt;/em&gt;時に発生するため、&lt;em&gt;実行時エラー&lt;/em&gt;、または場合によっては&lt;em&gt;評価エラー&lt;/em&gt;と呼ば&lt;em&gt;れ&lt;/em&gt;ます。たとえば、前の関数定義の誤りを修正した後、次のように入力したとします。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9d7e751e171bca6d4def5f9f2f251f6cfa35eaaf" translate="yes" xml:space="preserve">
          <source>Another example for decomposition is a finite difference matrix used to solve a boundary value problem on the unit square.</source>
          <target state="translated">分解の別の例としては、単位平方上の境界値問題を解くために使用される有限差分行列がある。</target>
        </trans-unit>
        <trans-unit id="20869813e88a7246f9c4ab8972c8ea0386ef40b3" translate="yes" xml:space="preserve">
          <source>Another example of where comma separated lists are used is in the creation of a new array with &lt;code&gt;[]&lt;/code&gt; (see &lt;a href=&quot;matrices#Matrices&quot;&gt;Matrices&lt;/a&gt;) or the creation of a cell array with &lt;code&gt;{}&lt;/code&gt; (see &lt;a href=&quot;basic-usage-of-cell-arrays#Basic-Usage-of-Cell-Arrays&quot;&gt;Basic Usage of Cell Arrays&lt;/a&gt;). In the expressions</source>
          <target state="translated">コンマ区切りのリストが使用されるもう1つの例は、 &lt;code&gt;[]&lt;/code&gt; を使用した新しい配列の作成（&lt;a href=&quot;matrices#Matrices&quot;&gt;マトリックスを&lt;/a&gt;参照）または &lt;code&gt;{}&lt;/code&gt; を&lt;a href=&quot;basic-usage-of-cell-arrays#Basic-Usage-of-Cell-Arrays&quot;&gt;使用&lt;/a&gt;したセル配列の作成（セル配列の基本的な使用法を参照）です。式で</target>
        </trans-unit>
        <trans-unit id="5a150d3d73ac2c4a70a02ece534874375a79ee79" translate="yes" xml:space="preserve">
          <source>Another example, where the result is a multi-dimensional 3-D array and the default value (zero) appears in the output:</source>
          <target state="translated">別の例では、結果が多次元3次元配列であり、デフォルト値(ゼロ)が出力されます。</target>
        </trans-unit>
        <trans-unit id="b0b1b9a16e9d0cd5f189e3bfcbdfdc320a8fe838" translate="yes" xml:space="preserve">
          <source>Another important feature of Octave is its ability to react to the user typing</source>
          <target state="translated">Octaveのもう一つの重要な特徴は,ユーザが入力すると反応する能力です。</target>
        </trans-unit>
        <trans-unit id="c628bf874c9da9a656dccc9a2da73737ea87690f" translate="yes" xml:space="preserve">
          <source>Another possible workaround is to use the command</source>
          <target state="translated">もう一つの回避策は、コマンド</target>
        </trans-unit>
        <trans-unit id="b685e1b321be84b2b89601415b342394207d8f67" translate="yes" xml:space="preserve">
          <source>Another set of command-line editing functions use Meta characters. To type</source>
          <target state="translated">コマンドライン編集機能のもう一つのセットは、メタ文字を使用しています。以下のように入力します。</target>
        </trans-unit>
        <trans-unit id="ddc2e1f929a1740efcc02657b7c4bebe6386189b" translate="yes" xml:space="preserve">
          <source>Another simple way of setting a breakpoint in an Octave script is the use of the &lt;code&gt;keyboard&lt;/code&gt; function.</source>
          <target state="translated">Octaveスクリプトでブレークポイントを設定するもう1つの簡単な方法は、 &lt;code&gt;keyboard&lt;/code&gt; 機能の使用です。</target>
        </trans-unit>
        <trans-unit id="82ee445a41ce8c5b0fdfe756f72683a3adc6ea9d" translate="yes" xml:space="preserve">
          <source>Another typical sparse matrix that is often needed is a random distribution of random elements. The functions &lt;em&gt;sprand&lt;/em&gt; and &lt;em&gt;sprandn&lt;/em&gt; perform this for uniform and normal random distributions of elements. They have exactly the same calling convention, where &lt;code&gt;sprand (&lt;var&gt;r&lt;/var&gt;, &lt;var&gt;c&lt;/var&gt;,
&lt;var&gt;d&lt;/var&gt;)&lt;/code&gt;, creates an &lt;var&gt;r&lt;/var&gt;-by-&lt;var&gt;c&lt;/var&gt; sparse matrix with a density of filled elements of &lt;var&gt;d&lt;/var&gt;.</source>
          <target state="translated">しばしば必要となるもう1つの典型的なスパース行列は、ランダム要素のランダム分布です。関数&lt;em&gt;sprand&lt;/em&gt;および&lt;em&gt;sprandnは&lt;/em&gt;、これを要素の均一および正規のランダム分布に対して実行します。それらは正確に同じ呼び出し規約有する &lt;code&gt;sprand (&lt;var&gt;r&lt;/var&gt;, &lt;var&gt;c&lt;/var&gt;, &lt;var&gt;d&lt;/var&gt;)&lt;/code&gt; 、作成 &lt;var&gt;r&lt;/var&gt; 行列 &lt;var&gt;c&lt;/var&gt; の充填要素の密度が疎な行列 &lt;var&gt;d&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="bea9d6275b6d0486e6c4c0c421ca6bb891756eee" translate="yes" xml:space="preserve">
          <source>Another use of the hashing function is to check for file integrity. The user can check the hash of the file against a known value and find if the file they have is the same as the one that the original hash was produced with.</source>
          <target state="translated">ハッシュ関数のもう一つの用途は、ファイルの整合性をチェックすることです。ユーザーはファイルのハッシュを既知の値と照合して、元のハッシュが生成されたものと同じかどうかを調べます。</target>
        </trans-unit>
        <trans-unit id="ab5127e2f8647249a1274dabfef6a2cd5b20b5e7" translate="yes" xml:space="preserve">
          <source>Another very basic function is &lt;em&gt;nnz&lt;/em&gt; that returns the number of nonzero entries there are in a sparse matrix, while the function &lt;em&gt;nzmax&lt;/em&gt; returns the amount of storage allocated to the sparse matrix. Note that Octave tends to crop unused memory at the first opportunity for sparse objects. There are some cases of user created sparse objects where the value returned by &lt;em&gt;nzmax&lt;/em&gt; will not be the same as &lt;em&gt;nnz&lt;/em&gt;, but in general they will give the same result. The function &lt;em&gt;spstats&lt;/em&gt; returns some basic statistics on the columns of a sparse matrix including the number of elements, the mean and the variance of each column.</source>
          <target state="translated">もう1つの非常に基本的な関数は、疎行列にあるゼロ以外のエントリの数を返す&lt;em&gt;nnz&lt;/em&gt;ですが、関数&lt;em&gt;nzmax&lt;/em&gt;は疎行列に割り当てられたストレージの量を返します。 Octaveはスパースオブジェクトの最初の機会に未使用のメモリをトリミングする傾向があることに注意してください。で返される値は、スパースオブジェクト作成したユーザーのいくつかの例があります&lt;em&gt;nzmaxは&lt;/em&gt;同じではありません&lt;em&gt;NNZ&lt;/em&gt;が、一般的に、彼らは同じ結果が得られますが。関数&lt;em&gt;spstats&lt;/em&gt;は、要素の数、各列の平均および分散を含む疎行列の列に関するいくつかの基本的な統計を返します。</target>
        </trans-unit>
        <trans-unit id="df5d7576073476e3cf0aefde52193d31e110d60f" translate="yes" xml:space="preserve">
          <source>Another way to add files to the &lt;var&gt;dynamic classpath&lt;/var&gt; exclusively for your user account is to use the file</source>
          <target state="translated">ユーザーアカウント専用の &lt;var&gt;dynamic classpath&lt;/var&gt; ファイルを追加する別の方法は、ファイルを使用することです</target>
        </trans-unit>
        <trans-unit id="d8b2bc932226a4af3e7938621b793728c8c67dc3" translate="yes" xml:space="preserve">
          <source>Any &lt;var&gt;y&lt;/var&gt; values that use a window extending beyond the original data array are deleted. For example, with a 10-element data vector and a window of length 3, the output will contain only 8 elements. The first element would require calculating the function over indices &lt;code&gt;[0,&amp;nbsp;1,&amp;nbsp;2]&lt;/code&gt; and is therefore discarded. The last element would require calculating the function over indices &lt;code&gt;[9,&amp;nbsp;10,&amp;nbsp;11]&lt;/code&gt; and is therefore discarded.</source>
          <target state="translated">元のデータ配列を超えるウィンドウを使用する &lt;var&gt;y&lt;/var&gt; 値はすべて削除されます。たとえば、10要素のデータベクトルと長さ3のウィンドウの場合、出力には8要素しか含まれません。最初の要素は、インデックス &lt;code&gt;[0,&amp;nbsp;1,&amp;nbsp;2]&lt;/code&gt; 関数を計算する必要があるため、破棄されます。最後の要素は、インデックス &lt;code&gt;[9,&amp;nbsp;10,&amp;nbsp;11]&lt;/code&gt; 関数を計算する必要があるため、破棄されます。</target>
        </trans-unit>
        <trans-unit id="1ebd88c689dc0c3bd33e1f9bb4231364709e1c8f" translate="yes" xml:space="preserve">
          <source>Any Octave function can be overloaded, and this allows an object-specific version of a function to be called as needed. A pertinent example for the polynomial class might be to overload the &lt;code&gt;polyval&lt;/code&gt; function.</source>
          <target state="translated">Octave関数はオーバーロードすることができ、これにより、必要に応じてオブジェクト固有の関数バージョンを呼び出すことができます。多項式クラスの適切な例は、 &lt;code&gt;polyval&lt;/code&gt; 関数をオーバーロードすることです。</target>
        </trans-unit>
        <trans-unit id="a88c127406cff3937549e2d49dccd696c5c9e288" translate="yes" xml:space="preserve">
          <source>Any additional arguments are passed directly to &lt;var&gt;func&lt;/var&gt;. The total number of arguments to call &lt;var&gt;func&lt;/var&gt; with can be passed in &lt;var&gt;ntot&lt;/var&gt;; by default &lt;var&gt;ntot&lt;/var&gt; is &lt;var&gt;n&lt;/var&gt;. The input &lt;var&gt;n&lt;/var&gt; can also be a vector of indices of the output, in which case the output will be a cell array of the requested output arguments.</source>
          <target state="translated">追加の引数は直接 &lt;var&gt;func&lt;/var&gt; に渡されます。 &lt;var&gt;func&lt;/var&gt; を呼び出す引数の総数は &lt;var&gt;ntot&lt;/var&gt; で渡すことができます。デフォルトでは、 &lt;var&gt;ntot&lt;/var&gt; は &lt;var&gt;n&lt;/var&gt; です。入力 &lt;var&gt;n&lt;/var&gt; は出力のインデックスのベクトルにすることもできます。その場合、出力は要求された出力引数のセル配列になります。</target>
        </trans-unit>
        <trans-unit id="0e7449b87fb3fd68fbea28e1f5bac142702612d6" translate="yes" xml:space="preserve">
          <source>Any additional arguments are passed to the &lt;code&gt;error&lt;/code&gt; function for processing.</source>
          <target state="translated">追加の引数は、処理のために &lt;code&gt;error&lt;/code&gt; 関数に渡されます。</target>
        </trans-unit>
        <trans-unit id="d1c41e909fb699ad44338933b2cd674782306f70" translate="yes" xml:space="preserve">
          <source>Any arguments after the first are passed as inputs to the named function. For example,</source>
          <target state="translated">最初の引数以降の引数は、指定された関数の入力として渡されます。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="7f04b6b12506a51de23e7d02e2cb5c92a77fd09b" translate="yes" xml:space="preserve">
          <source>Any arguments which follow &lt;var&gt;x0&lt;/var&gt; are treated as parameters, and passed in an appropriate manner to any of the functions (&lt;var&gt;Afun&lt;/var&gt; or &lt;var&gt;Mfun&lt;/var&gt;) or that have been given to &lt;code&gt;bicg&lt;/code&gt;.</source>
          <target state="translated">続く引数 &lt;var&gt;x0&lt;/var&gt; 関数（のいずれかにパラメータとして扱われ、適切な方法で渡される &lt;var&gt;Afun&lt;/var&gt; または &lt;var&gt;Mfun&lt;/var&gt; に与えられているか） &lt;code&gt;bicg&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="03a620864a775100876d3a42459eb790ac0334b6" translate="yes" xml:space="preserve">
          <source>Any bound (&lt;var&gt;A&lt;/var&gt;, &lt;var&gt;b&lt;/var&gt;, &lt;var&gt;lb&lt;/var&gt;, &lt;var&gt;ub&lt;/var&gt;, &lt;var&gt;A_in&lt;/var&gt;, &lt;var&gt;A_lb&lt;/var&gt;, &lt;var&gt;A_ub&lt;/var&gt;) may be set to the empty matrix (&lt;code&gt;[]&lt;/code&gt;) if not present. The constraints &lt;var&gt;A&lt;/var&gt; and &lt;var&gt;A_in&lt;/var&gt; are matrices with each row representing a single constraint. The other bounds are scalars or vectors depending on the number of constraints. The algorithm is faster if the initial guess is feasible.</source>
          <target state="translated">存在しない場合は、任意の境界（ &lt;var&gt;A&lt;/var&gt; 、 &lt;var&gt;b&lt;/var&gt; 、 &lt;var&gt;lb&lt;/var&gt; 、 &lt;var&gt;ub&lt;/var&gt; 、 &lt;var&gt;A_in&lt;/var&gt; 、 &lt;var&gt;A_lb&lt;/var&gt; 、 &lt;var&gt;A_ub&lt;/var&gt; ）を空の行列（ &lt;code&gt;[]&lt;/code&gt; ）に設定できます。制約 &lt;var&gt;A&lt;/var&gt; および &lt;var&gt;A_in&lt;/var&gt; は、各行が単一の制約を表す行列です。その他の境界は、制約の数に応じてスカラーまたはベクトルです。初期推測が可能であれば、アルゴリズムはより高速です。</target>
        </trans-unit>
        <trans-unit id="5b536e07023e0802f82108dd15d02c6c7ef1ae27" translate="yes" xml:space="preserve">
          <source>Any character in &lt;var&gt;value&lt;/var&gt; will be interpreted as whitespace and trimmed; The default value for whitespace is &lt;code&gt;&quot;
\b\r\n\t&quot;&lt;/code&gt; (note the space). Unless whitespace is set to &lt;code&gt;&quot;&quot;&lt;/code&gt; (empty) AND at least one &lt;code&gt;&quot;%s&quot;&lt;/code&gt; format conversion specifier is supplied, a space is always part of whitespace.</source>
          <target state="translated">&lt;var&gt;value&lt;/var&gt; 文字はすべて空白として解釈され、削除されます。空白のデフォルト値は &lt;code&gt;&quot; \b\r\n\t&quot;&lt;/code&gt; （スペースに注意）です。空白が &lt;code&gt;&quot;&quot;&lt;/code&gt; （空）に設定され、かつ少なくとも1つの &lt;code&gt;&quot;%s&quot;&lt;/code&gt; 形式変換指定子が指定されていない限り、スペースは常に空白の一部です。</target>
        </trans-unit>
        <trans-unit id="4cd0890a6e81f8088b353f70802b4d6e93844150" translate="yes" xml:space="preserve">
          <source>Any character in &lt;var&gt;value&lt;/var&gt; will be interpreted as whitespace and trimmed; the string defining whitespace must be enclosed in double quotes for proper processing of special characters like &lt;code&gt;&quot;\t&quot;&lt;/code&gt;. In each data field, multiple consecutive whitespace characters are collapsed into one space and leading and trailing whitespace is removed. The default value for whitespace is &lt;code&gt;&quot;
\b\r\n\t&quot;&lt;/code&gt; (note the space). Whitespace is always added to the set of delimiter characters unless at least one &lt;code&gt;&quot;%s&quot;&lt;/code&gt; format conversion specifier is supplied; in that case only whitespace explicitly specified in &lt;code&gt;&quot;delimiter&quot;&lt;/code&gt; is retained as delimiter and removed from the set of whitespace characters. If whitespace characters are to be kept as-is (in e.g., strings), specify an empty value (i.e., &lt;code&gt;&quot;&quot;&lt;/code&gt;) for &lt;code&gt;&quot;whitespace&quot;&lt;/code&gt;; obviously, whitespace cannot be a delimiter then.</source>
          <target state="translated">&lt;var&gt;value&lt;/var&gt; 文字はすべて空白として解釈され、削除されます。 &lt;code&gt;&quot;\t&quot;&lt;/code&gt; ような特殊文字を適切に処理するには、空白を定義する文字列を二重引用符で囲む必要があります。各データフィールドでは、連続する複数の空白文字が1つのスペースに折りたたまれ、先頭と末尾の空白が削除されます。空白のデフォルト値は &lt;code&gt;&quot; \b\r\n\t&quot;&lt;/code&gt; （スペースに注意）です。少なくとも1つの &lt;code&gt;&quot;%s&quot;&lt;/code&gt; 形式変換指定子が指定されていない限り、空白は常に区切り文字のセットに追加されます。その場合、 &lt;code&gt;&quot;delimiter&quot;&lt;/code&gt; で明示的に指定された空白のみ区切り文字として保持され、空白文字のセットから削除されます。空白文字をそのまま（文字列など）保持する場合は、 &lt;code&gt;&quot;whitespace&quot;&lt;/code&gt; に空の値（つまり &lt;code&gt;&quot;&quot;&lt;/code&gt; ）を指定します。明らかに、空白は区切り文字にはなり得ません。</target>
        </trans-unit>
        <trans-unit id="a01fae8061435d03e635d9c720ad45690d9251ed" translate="yes" xml:space="preserve">
          <source>Any character in &lt;var&gt;value&lt;/var&gt; will be used to split &lt;var&gt;str&lt;/var&gt; into words (default value = any whitespace). Note that whitespace is implicitly added to the set of delimiter characters unless a &lt;code&gt;&quot;%s&quot;&lt;/code&gt; format conversion specifier is supplied; see &lt;code&gt;&quot;whitespace&quot;&lt;/code&gt; parameter below. The set of delimiter characters cannot be empty; if needed Octave substitutes a space as delimiter.</source>
          <target state="translated">&lt;var&gt;value&lt;/var&gt; 任意の文字を使用して &lt;var&gt;str&lt;/var&gt; を単語に分割します（デフォルト値=空白）。 &lt;code&gt;&quot;%s&quot;&lt;/code&gt; フォーマット変換指定子が指定されていない限り、空白は暗黙的に区切り文字のセットに追加されることに注意してください。以下の &lt;code&gt;&quot;whitespace&quot;&lt;/code&gt; パラメータを参照してください。区切り文字のセットは空にできません。必要に応じて、オクターブはスペースを区切り文字として置き換えます。</target>
        </trans-unit>
        <trans-unit id="2a80ee399af36d7665d0593f6cd0078fe204a785" translate="yes" xml:space="preserve">
          <source>Any function that the nested function&amp;rsquo;s parent can call</source>
          <target state="translated">ネストされた関数の親が呼び出すことができるすべての関数</target>
        </trans-unit>
        <trans-unit id="bedeae656f4af1d698b0042d8c29ef0ed92e6300" translate="yes" xml:space="preserve">
          <source>Any names identified are returned in a cell array of strings. The array is empty if no variables were found.</source>
          <target state="translated">識別された名前は、文字列のセル配列で返されます。変数が見つからなかった場合、配列は空になります。</target>
        </trans-unit>
        <trans-unit id="7acc98c5dc330351bbfb90cdd130301b1a52997b" translate="yes" xml:space="preserve">
          <source>Any nonzero values will be converted to true (1) while zero values will be converted to false (0). The non-numeric value NaN cannot be converted and will produce an error.</source>
          <target state="translated">ゼロ以外の値は真(1)に変換され、ゼロの値は偽(0)に変換されます。数値以外のNaNは変換できず、エラーとなります。</target>
        </trans-unit>
        <trans-unit id="0d2f42c46053e6b98b6c5c0616ed1fa0043207f7" translate="yes" xml:space="preserve">
          <source>Any number of &lt;code&gt;elseif&lt;/code&gt; clauses may appear. Each condition is tested in turn, and if one is found to be true, its corresponding &lt;var&gt;body&lt;/var&gt; is executed. If none of the conditions are true and the &lt;code&gt;else&lt;/code&gt; clause is present, its body is executed. Only one &lt;code&gt;else&lt;/code&gt; clause may appear, and it must be the last part of the statement.</source>
          <target state="translated">&lt;code&gt;elseif&lt;/code&gt; 句はいくつあってもかまいません。各条件が順番にテストされ、条件が真であることが判明した場合、対応する &lt;var&gt;body&lt;/var&gt; が実行されます。いずれの条件も満たさず、 &lt;code&gt;else&lt;/code&gt; 句が存在する場合、その本体が実行されます。 &lt;code&gt;else&lt;/code&gt; 句は1つだけ指定でき、ステートメントの最後の部分でなければなりません。</target>
        </trans-unit>
        <trans-unit id="0f14dd003c7de0dcdd66407a267bdab5b34bbe03" translate="yes" xml:space="preserve">
          <source>Any number of data sets (&lt;var&gt;x1&lt;/var&gt;,&lt;var&gt;y1&lt;/var&gt;, &lt;var&gt;x2&lt;/var&gt;,&lt;var&gt;y2&lt;/var&gt;, &amp;hellip;) may appear as long as they are separated by a format string &lt;var&gt;fmt&lt;/var&gt;.</source>
          <target state="translated">フォーマット文字列 &lt;var&gt;fmt&lt;/var&gt; で区切られている限り、任意の数のデータセット（ &lt;var&gt;x1&lt;/var&gt; 、 &lt;var&gt;y1&lt;/var&gt; 、 &lt;var&gt;x2&lt;/var&gt; 、 &lt;var&gt;y2&lt;/var&gt; 、&amp;hellip;）が表示されます。</target>
        </trans-unit>
        <trans-unit id="e3fb9213059a07c930a988c14846db1d8f9d9944" translate="yes" xml:space="preserve">
          <source>Any numeric entries in a cell array will be converted to text using &lt;code&gt;sprintf (&quot;%g&quot;)&lt;/code&gt;. For more precise control of the appearance convert any numeric entries to strings using &lt;code&gt;num2str&lt;/code&gt;, &lt;code&gt;sprintf&lt;/code&gt;, etc., before calling &lt;code&gt;text&lt;/code&gt;.</source>
          <target state="translated">セル配列の数値エントリは、 &lt;code&gt;sprintf (&quot;%g&quot;)&lt;/code&gt; を使用してテキストに変換されます。外観をより正確に制御するには、 &lt;code&gt;text&lt;/code&gt; 呼び出す前に、 &lt;code&gt;num2str&lt;/code&gt; 、 &lt;code&gt;sprintf&lt;/code&gt; などを使用して数値エントリを文字列に変換します。</target>
        </trans-unit>
        <trans-unit id="1c1f34477633978630c1fe3e0bba850b6e5566f2" translate="yes" xml:space="preserve">
          <source>Any optional &lt;var&gt;format&lt;/var&gt; specified by the programmer is used without modification. This is in contrast to &lt;small&gt;MATLAB&lt;/small&gt; which tampers with the &lt;var&gt;format&lt;/var&gt; based on internal heuristics.</source>
          <target state="translated">プログラマーが指定したオプションの &lt;var&gt;format&lt;/var&gt; は、変更せずに使用されます。これは、内部のヒューリスティックに基づいて &lt;var&gt;format&lt;/var&gt; を改ざんする&lt;small&gt;MATLAB&lt;/small&gt;とは対照的です。</target>
        </trans-unit>
        <trans-unit id="fe5402275658b415e4102e7f053526b6bcfe3f47" translate="yes" xml:space="preserve">
          <source>Any optional arguments are passed directly to &lt;code&gt;dlmread&lt;/code&gt; (see &lt;a href=&quot;#XREFdlmread&quot;&gt;dlmread&lt;/a&gt;).</source>
          <target state="translated">オプションの引数は、 &lt;code&gt;dlmread&lt;/code&gt; に直接渡されます（&lt;a href=&quot;#XREFdlmread&quot;&gt;dlmreadを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="8c1fc66e01e41afc838d723175933fea8e364187" translate="yes" xml:space="preserve">
          <source>Any optional arguments are passed directly to &lt;code&gt;dlmwrite&lt;/code&gt; (see &lt;a href=&quot;#XREFdlmwrite&quot;&gt;dlmwrite&lt;/a&gt;).</source>
          <target state="translated">オプションの引数は &lt;code&gt;dlmwrite&lt;/code&gt; に直接渡されます（&lt;a href=&quot;#XREFdlmwrite&quot;&gt;dlmwriteを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="05e72ae03c5ea858f40fd99676376ddf8bfb9feb" translate="yes" xml:space="preserve">
          <source>Any parameter whose name contains the name of a type (e.g., &lt;var&gt;integer&lt;/var&gt; or &lt;var&gt;matrix&lt;/var&gt;) is expected to be of that type. Parameters named &lt;var&gt;object&lt;/var&gt; may be of any type. Parameters with other sorts of names (e.g., &lt;var&gt;new_file&lt;/var&gt;) are discussed specifically in the description of the function. In some sections, features common to parameters of several functions are described at the beginning.</source>
          <target state="translated">名前に型の名前（例： &lt;var&gt;integer&lt;/var&gt; または &lt;var&gt;matrix&lt;/var&gt; ）が含まれているパラメーターは、その型であることが期待されます。 &lt;var&gt;object&lt;/var&gt; という名前のパラメーターは、どのタイプでもかまいません。他の種類の名前を持つパラメータ（たとえば、 &lt;var&gt;new_file&lt;/var&gt; ）は、関数の説明で具体的に説明されています。一部のセクションでは、いくつかの関数のパラメーターに共通する機能が最初に説明されています。</target>
        </trans-unit>
        <trans-unit id="a0752ca92310b35f0f03538b641f4008591a7342" translate="yes" xml:space="preserve">
          <source>Any previously existing axes that would be (partly) covered by the newly created axes are deleted.</source>
          <target state="translated">新しく作成された軸によって(部分的に)カバーされるであろう以前に存在していた軸はすべて削除されます。</target>
        </trans-unit>
        <trans-unit id="7bd20b1575ab57d02ef4606acf85cbc3344433e0" translate="yes" xml:space="preserve">
          <source>Any property/value input pairs are assigned to the surface object.</source>
          <target state="translated">任意のプロパティ/値の入力ペアがサーフェスオブジェクトに割り当てられます。</target>
        </trans-unit>
        <trans-unit id="266d5ce5eecf16d546468d7ab0379244e2371bef" translate="yes" xml:space="preserve">
          <source>Any property/value input pairs are assigned to the surface object. The full list of properties is documented at &lt;a href=&quot;surface-properties#Surface-Properties&quot;&gt;Surface Properties&lt;/a&gt;.</source>
          <target state="translated">プロパティ/値の入力ペアはすべて、サーフェスオブジェクトに割り当てられます。プロパティの完全なリストは、SurfacePropertiesに記載されてい&lt;a href=&quot;surface-properties#Surface-Properties&quot;&gt;ます&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3c46413cb45e4b0a5aa4b3a95b3806f405beb90b" translate="yes" xml:space="preserve">
          <source>Any property/value pairs are passed directly to the underlying axes object.</source>
          <target state="translated">すべてのプロパティ/値のペアは、基礎となる軸オブジェクトに直接渡されます。</target>
        </trans-unit>
        <trans-unit id="517aa74f8db8319afe61080f9fa4b0c0d900b70d" translate="yes" xml:space="preserve">
          <source>Any property/value pairs are passed directly to the underlying axes object. The full list of properties is documented at &lt;a href=&quot;axes-properties#Axes-Properties&quot;&gt;Axes Properties&lt;/a&gt;.</source>
          <target state="translated">プロパティと値のペアはすべて、基になるAxesオブジェクトに直接渡されます。プロパティの完全なリストは、&lt;a href=&quot;axes-properties#Axes-Properties&quot;&gt;AxesPropertiesに&lt;/a&gt;記載されています。</target>
        </trans-unit>
        <trans-unit id="7ea6c4b21c98787ef5fe1c21062b107c262c74a3" translate="yes" xml:space="preserve">
          <source>Any property/value pairs are passed directly to the underlying patch object.</source>
          <target state="translated">すべてのプロパティ/値のペアは、基礎となるパッチオブジェクトに直接渡されます。</target>
        </trans-unit>
        <trans-unit id="577243ed587c2daae7a3168422a4514d6aa32c38" translate="yes" xml:space="preserve">
          <source>Any property/value pairs are passed directly to the underlying patch object. The full list of properties is documented at &lt;a href=&quot;patch-properties#Patch-Properties&quot;&gt;Patch Properties&lt;/a&gt;.</source>
          <target state="translated">プロパティと値のペアはすべて、基になるパッチオブジェクトに直接渡されます。プロパティの完全なリストは、&lt;a href=&quot;patch-properties#Patch-Properties&quot;&gt;パッチのプロパティに&lt;/a&gt;記載されています。</target>
        </trans-unit>
        <trans-unit id="7de4c5a09fa7d7626ba5a3e6376d14aa5379781a" translate="yes" xml:space="preserve">
          <source>Any property/value pairs are passed directly to the underlying surface object.</source>
          <target state="translated">すべてのプロパティ/値のペアは、基礎となるサーフェスオブジェクトに直接渡されます。</target>
        </trans-unit>
        <trans-unit id="2272817ca585cb65830e0f74399d87ba475fde84" translate="yes" xml:space="preserve">
          <source>Any property/value pairs are passed directly to the underlying surface object. The full list of properties is documented at &lt;a href=&quot;surface-properties#Surface-Properties&quot;&gt;Surface Properties&lt;/a&gt;.</source>
          <target state="translated">プロパティと値のペアはすべて、基になるサーフェスオブジェクトに直接渡されます。プロパティの完全なリストは、SurfacePropertiesに記載されてい&lt;a href=&quot;surface-properties#Surface-Properties&quot;&gt;ます&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e884eb9afce20f4c0a05ec8a451867948b52dcff" translate="yes" xml:space="preserve">
          <source>Any provided property value pairs will override the default values of the created uibuttongroup object.</source>
          <target state="translated">与えられたプロパティ値のペアは、作成された uibuttongroup オブジェクトのデフォルト値を上書きします。</target>
        </trans-unit>
        <trans-unit id="91e0163f5226495a134001b955499540b9bfe7ed" translate="yes" xml:space="preserve">
          <source>Any provided property value pairs will override the default values of the created uicontextmenu object.</source>
          <target state="translated">与えられたプロパティ値のペアは、作成されたuicontextmenuオブジェクトのデフォルト値を上書きします。</target>
        </trans-unit>
        <trans-unit id="33ac3f23f17fd7c53bccf7b6768616e40a3c4e86" translate="yes" xml:space="preserve">
          <source>Any provided property value pairs will override the default values of the created uicontrol object.</source>
          <target state="translated">提供されたプロパティ値のペアは、作成されたuicontrolオブジェクトのデフォルト値を上書きします。</target>
        </trans-unit>
        <trans-unit id="8ce214aa7effbdb8123633c5f0f09bfe7dda598b" translate="yes" xml:space="preserve">
          <source>Any provided property value pairs will override the default values of the created uipanel object.</source>
          <target state="translated">指定されたプロパティ値のペアは、作成されたuipanelオブジェクトのデフォルト値を上書きします。</target>
        </trans-unit>
        <trans-unit id="6778f392d0a91a7c5bd06f7c55c30e80ac4c9634" translate="yes" xml:space="preserve">
          <source>Any provided property value pairs will override the default values of the created uipushtool object.</source>
          <target state="translated">指定されたプロパティ値のペアは、作成されたuipushtoolオブジェクトのデフォルト値を上書きします。</target>
        </trans-unit>
        <trans-unit id="683babd9c3b4fc92f8149efb9152304712e22ff9" translate="yes" xml:space="preserve">
          <source>Any provided property value pairs will override the default values of the created uitable object.</source>
          <target state="translated">提供されたプロパティ値のペアは、作成されたuitableオブジェクトのデフォルト値を上書きします。</target>
        </trans-unit>
        <trans-unit id="3453097880a525558fa32f268ec0850ffbe385e8" translate="yes" xml:space="preserve">
          <source>Any provided property value pairs will override the default values of the created uitoggletool object.</source>
          <target state="translated">指定されたプロパティ値のペアは、作成された uitoggletool オブジェクトのデフォルト値を上書きします。</target>
        </trans-unit>
        <trans-unit id="d4a8d9efa0cf1951967ee91ac6ff2a8fa329ed79" translate="yes" xml:space="preserve">
          <source>Any provided property value pairs will override the default values of the created uitoolbar object.</source>
          <target state="translated">指定されたプロパティ値のペアは、作成されたuitoolbarオブジェクトのデフォルト値を上書きします。</target>
        </trans-unit>
        <trans-unit id="ab55b769bb01999de6283227ebfa868bc3d035a0" translate="yes" xml:space="preserve">
          <source>Any regular function can be used as a command if it accepts string input arguments. For example:</source>
          <target state="translated">文字列の入力引数を受け付ける場合は、どのような正規関数でもコマンドとして使用できます。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="a2ae784793c90209ea4152a82cf5e08cf0046fb5" translate="yes" xml:space="preserve">
          <source>Any string arguments must be passed after the other arguments.</source>
          <target state="translated">文字列の引数は、他の引数の後に渡さなければなりません。</target>
        </trans-unit>
        <trans-unit id="0a70576cb2454ee72de24e1de2a08d1467072aca" translate="yes" xml:space="preserve">
          <source>Any string input arguments must be passed after all other arguments.</source>
          <target state="translated">文字列入力の引数は、他のすべての引数の後に渡されなければなりません。</target>
        </trans-unit>
        <trans-unit id="7f8b6dc0ff4763144265beae30c349e123255d1d" translate="yes" xml:space="preserve">
          <source>Any text between the continuation marker and the newline character is ignored. For example, the statement</source>
          <target state="translated">継続マーカと改行文字の間のテキストはすべて無視されます。例えば</target>
        </trans-unit>
        <trans-unit id="03b413c82483754433f6a032c4981c78f267979e" translate="yes" xml:space="preserve">
          <source>Any variables that are not found in the argument list are inherited from the enclosing scope. Anonymous functions are useful for creating simple unnamed functions from expressions or for wrapping calls to other functions to adapt them for use by functions like &lt;code&gt;quad&lt;/code&gt;. For example,</source>
          <target state="translated">引数リストにない変数は、それを囲むスコープから継承されます。無名関数は、式から名前のない単純な関数を作成する場合や、他の関数の呼び出しをラップして &lt;code&gt;quad&lt;/code&gt; などの関数で使用できるようにそれらを適合させる場合に役立ちます。例えば、</target>
        </trans-unit>
        <trans-unit id="fee9be0b919e26eb4b29a40a0875f59884b4a380" translate="yes" xml:space="preserve">
          <source>Any whitespace character in the template causes any number of whitespace characters in the input stream to be read and discarded. The whitespace characters that are matched need not be exactly the same whitespace characters that appear in the template string. For example, write &amp;lsquo;</source>
          <target state="translated">テンプレートに空白文字があると、入力ストリームの任意の数の空白文字が読み取られて破棄されます。一致する空白文字は、テンプレート文字列に現れる空白文字とまったく同じである必要はありません。たとえば、「</target>
        </trans-unit>
        <trans-unit id="d87445df0d78a575f5a3fac67957013479640f05" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by &lt;code&gt;NaN&lt;/code&gt;. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = &lt;var&gt;fcn&lt;/var&gt; ([NaN, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = &lt;var&gt;fcn&lt;/var&gt; ([&lt;var&gt;x&lt;/var&gt;(end-1:end), NaN])&lt;/code&gt;. This option usually results in &lt;var&gt;y&lt;/var&gt; having &lt;code&gt;NaN&lt;/code&gt; values at the boundaries, although it is influenced by how &lt;var&gt;fcn&lt;/var&gt; handles &lt;code&gt;NaN&lt;/code&gt;, and also by the property &lt;code&gt;&quot;nancond&quot;&lt;/code&gt;.</source>
          <target state="translated">データ配列外のウィンドウ要素はすべて &lt;code&gt;NaN&lt;/code&gt; に置き換えられます。たとえば、ウィンドウの長さが3の場合、 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = &lt;var&gt;fcn&lt;/var&gt; ([NaN, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; と &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = &lt;var&gt;fcn&lt;/var&gt; ([&lt;var&gt;x&lt;/var&gt;(end-1:end), NaN])&lt;/code&gt; 。このオプションは、通常、その結果 &lt;var&gt;y&lt;/var&gt; 持つ &lt;code&gt;NaN&lt;/code&gt; それがどのように影響を受けているが、境界での値を &lt;var&gt;fcn&lt;/var&gt; ハンドル &lt;code&gt;NaN&lt;/code&gt; 、また、プロパティで &lt;code&gt;&quot;nancond&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c36cb0bc63ca0870744281bb42821bd4eebb1535" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by &lt;code&gt;NaN&lt;/code&gt;. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = mad ([NaN, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = mad ([&lt;var&gt;x&lt;/var&gt;(end-1:end), NaN])&lt;/code&gt;. This option usually results in &lt;var&gt;y&lt;/var&gt; having &lt;code&gt;NaN&lt;/code&gt; values at the boundaries, although it is influenced by how &lt;code&gt;mad&lt;/code&gt; handles &lt;code&gt;NaN&lt;/code&gt;, and also by the property &lt;code&gt;&quot;nancond&quot;&lt;/code&gt;.</source>
          <target state="translated">データ配列外のウィンドウ要素はすべて &lt;code&gt;NaN&lt;/code&gt; に置き換えられます。たとえば、長さが3のウィンドウの場合、 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = mad ([NaN, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; と &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = mad ([&lt;var&gt;x&lt;/var&gt;(end-1:end), NaN])&lt;/code&gt; 。このオプションは通常、境界に &lt;code&gt;NaN&lt;/code&gt; 値を持つ &lt;var&gt;y&lt;/var&gt; になりますが、 &lt;code&gt;mad&lt;/code&gt; が &lt;code&gt;NaN&lt;/code&gt; を処理する方法、およびプロパティ &lt;code&gt;&quot;nancond&quot;&lt;/code&gt; にも影響されます。</target>
        </trans-unit>
        <trans-unit id="11a545da923049093680f7389acfd80be1da6388" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by &lt;code&gt;NaN&lt;/code&gt;. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = max ([NaN, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = max ([&lt;var&gt;x&lt;/var&gt;(end-1:end), NaN])&lt;/code&gt;. This option usually results in &lt;var&gt;y&lt;/var&gt; having &lt;code&gt;NaN&lt;/code&gt; values at the boundaries, although it is influenced by how &lt;code&gt;max&lt;/code&gt; handles &lt;code&gt;NaN&lt;/code&gt;, and also by the property &lt;code&gt;&quot;nancond&quot;&lt;/code&gt;.</source>
          <target state="translated">データ配列外のウィンドウ要素はすべて &lt;code&gt;NaN&lt;/code&gt; に置き換えられます。たとえば、ウィンドウの長さが3の場合、 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = max ([NaN, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; と &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = max ([&lt;var&gt;x&lt;/var&gt;(end-1:end), NaN])&lt;/code&gt; 。このオプションは通常、境界で &lt;code&gt;NaN&lt;/code&gt; 値を持つ &lt;var&gt;y&lt;/var&gt; になりますが、 &lt;code&gt;max&lt;/code&gt; が &lt;code&gt;NaN&lt;/code&gt; を処理する方法と、プロパティ &lt;code&gt;&quot;nancond&quot;&lt;/code&gt; にも影響されます。</target>
        </trans-unit>
        <trans-unit id="e4d30f02f495a07cf81f13b0f53b5cff48ca3bc1" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by &lt;code&gt;NaN&lt;/code&gt;. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = mean ([NaN, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = mean ([&lt;var&gt;x&lt;/var&gt;(end-1:end), NaN])&lt;/code&gt;. This option usually results in &lt;var&gt;y&lt;/var&gt; having &lt;code&gt;NaN&lt;/code&gt; values at the boundaries, although it is influenced by how &lt;code&gt;mean&lt;/code&gt; handles &lt;code&gt;NaN&lt;/code&gt;, and also by the property &lt;code&gt;&quot;nancond&quot;&lt;/code&gt;.</source>
          <target state="translated">データ配列外のウィンドウ要素はすべて &lt;code&gt;NaN&lt;/code&gt; に置き換えられます。たとえば、長さが3のウィンドウの場合、 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = mean ([NaN, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; 、および &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = mean ([&lt;var&gt;x&lt;/var&gt;(end-1:end), NaN])&lt;/code&gt; 。このオプションは通常、 &lt;var&gt;y&lt;/var&gt; が境界で &lt;code&gt;NaN&lt;/code&gt; 値を持つことになりますが、 &lt;code&gt;mean&lt;/code&gt; が &lt;code&gt;NaN&lt;/code&gt; を処理する方法と、プロパティ &lt;code&gt;&quot;nancond&quot;&lt;/code&gt; にも影響されます。</target>
        </trans-unit>
        <trans-unit id="2d47fa88fbec15348aa10f30e2ac76e889442020" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by &lt;code&gt;NaN&lt;/code&gt;. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = min ([NaN, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = min ([&lt;var&gt;x&lt;/var&gt;(end-1:end), NaN])&lt;/code&gt;. This option usually results in &lt;var&gt;y&lt;/var&gt; having &lt;code&gt;NaN&lt;/code&gt; values at the boundaries, although it is influenced by how &lt;code&gt;min&lt;/code&gt; handles &lt;code&gt;NaN&lt;/code&gt;, and also by the property &lt;code&gt;&quot;nancond&quot;&lt;/code&gt;.</source>
          <target state="translated">データ配列外のウィンドウ要素はすべて &lt;code&gt;NaN&lt;/code&gt; に置き換えられます。たとえば、長さが3のウィンドウの場合、 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = min ([NaN, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; と &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = min ([&lt;var&gt;x&lt;/var&gt;(end-1:end), NaN])&lt;/code&gt; 。このオプションは通常、境界で &lt;code&gt;NaN&lt;/code&gt; 値を持つ &lt;var&gt;y&lt;/var&gt; になりますが、 &lt;code&gt;min&lt;/code&gt; が &lt;code&gt;NaN&lt;/code&gt; を処理する方法と、プロパティ &lt;code&gt;&quot;nancond&quot;&lt;/code&gt; にも影響されます。</target>
        </trans-unit>
        <trans-unit id="65aafdb27d1d064a76017620684968c6048f938d" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by &lt;code&gt;NaN&lt;/code&gt;. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movmedian ([NaN, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movmedian ([&lt;var&gt;x&lt;/var&gt;(end-1:end), NaN])&lt;/code&gt;. This option usually results in &lt;var&gt;y&lt;/var&gt; having &lt;code&gt;NaN&lt;/code&gt; values at the boundaries, although it is influenced by how &lt;code&gt;movmedian&lt;/code&gt; handles &lt;code&gt;NaN&lt;/code&gt;, and also by the property &lt;code&gt;&quot;nancond&quot;&lt;/code&gt;.</source>
          <target state="translated">データ配列外のウィンドウ要素はすべて &lt;code&gt;NaN&lt;/code&gt; に置き換えられます。たとえば、ウィンドウの長さが3の場合、 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movmedian ([NaN, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; と &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movmedian ([&lt;var&gt;x&lt;/var&gt;(end-1:end), NaN])&lt;/code&gt; 。このオプションは通常、境界に &lt;code&gt;NaN&lt;/code&gt; 値を持つ &lt;var&gt;y&lt;/var&gt; になりますが、 &lt;code&gt;movmedian&lt;/code&gt; が &lt;code&gt;NaN&lt;/code&gt; を処理する方法や、プロパティ &lt;code&gt;&quot;nancond&quot;&lt;/code&gt; にも影響されます。</target>
        </trans-unit>
        <trans-unit id="515fe98706e10f237bea9bdc49e9992cae09aaa3" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by &lt;code&gt;NaN&lt;/code&gt;. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movprod ([NaN, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movprod ([&lt;var&gt;x&lt;/var&gt;(end-1:end), NaN])&lt;/code&gt;. This option usually results in &lt;var&gt;y&lt;/var&gt; having &lt;code&gt;NaN&lt;/code&gt; values at the boundaries, although it is influenced by how &lt;code&gt;movprod&lt;/code&gt; handles &lt;code&gt;NaN&lt;/code&gt;, and also by the property &lt;code&gt;&quot;nancond&quot;&lt;/code&gt;.</source>
          <target state="translated">データ配列外のウィンドウ要素はすべて &lt;code&gt;NaN&lt;/code&gt; に置き換えられます。たとえば、ウィンドウの長さが3の場合、 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movprod ([NaN, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; と &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movprod ([&lt;var&gt;x&lt;/var&gt;(end-1:end), NaN])&lt;/code&gt; 。このオプションは通常、境界に &lt;code&gt;NaN&lt;/code&gt; 値を持つ &lt;var&gt;y&lt;/var&gt; になりますが、 &lt;code&gt;movprod&lt;/code&gt; が &lt;code&gt;NaN&lt;/code&gt; を処理する方法と、プロパティ &lt;code&gt;&quot;nancond&quot;&lt;/code&gt; にも影響されます。</target>
        </trans-unit>
        <trans-unit id="e011efc6ffab8709546427830ac228a7b6938a8d" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by &lt;code&gt;NaN&lt;/code&gt;. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movstd ([NaN, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movstd ([&lt;var&gt;x&lt;/var&gt;(end-1:end), NaN])&lt;/code&gt;. This option usually results in &lt;var&gt;y&lt;/var&gt; having &lt;code&gt;NaN&lt;/code&gt; values at the boundaries, although it is influenced by how &lt;code&gt;movstd&lt;/code&gt; handles &lt;code&gt;NaN&lt;/code&gt;, and also by the property &lt;code&gt;&quot;nancond&quot;&lt;/code&gt;.</source>
          <target state="translated">データ配列外のウィンドウ要素はすべて &lt;code&gt;NaN&lt;/code&gt; に置き換えられます。たとえば、ウィンドウの長さが3の場合、 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movstd ([NaN, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; と &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movstd ([&lt;var&gt;x&lt;/var&gt;(end-1:end), NaN])&lt;/code&gt; 。このオプションは通常、境界で &lt;code&gt;NaN&lt;/code&gt; 値を持つ &lt;var&gt;y&lt;/var&gt; になりますが、 &lt;code&gt;movstd&lt;/code&gt; が &lt;code&gt;NaN&lt;/code&gt; を処理する方法と、プロパティ &lt;code&gt;&quot;nancond&quot;&lt;/code&gt; にも影響されます。</target>
        </trans-unit>
        <trans-unit id="84e87b2e0a6ebe9258d2d7c74d2e0ad596d14013" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by &lt;code&gt;NaN&lt;/code&gt;. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movsum ([NaN, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movsum ([&lt;var&gt;x&lt;/var&gt;(end-1:end), NaN])&lt;/code&gt;. This option usually results in &lt;var&gt;y&lt;/var&gt; having &lt;code&gt;NaN&lt;/code&gt; values at the boundaries, although it is influenced by how &lt;code&gt;movsum&lt;/code&gt; handles &lt;code&gt;NaN&lt;/code&gt;, and also by the property &lt;code&gt;&quot;nancond&quot;&lt;/code&gt;.</source>
          <target state="translated">データ配列外のウィンドウ要素はすべて &lt;code&gt;NaN&lt;/code&gt; に置き換えられます。たとえば、長さが3のウィンドウの場合、 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movsum ([NaN, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; と &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movsum ([&lt;var&gt;x&lt;/var&gt;(end-1:end), NaN])&lt;/code&gt; 。このオプションは通常、境界に &lt;code&gt;NaN&lt;/code&gt; 値を持つ &lt;var&gt;y&lt;/var&gt; になりますが、 &lt;code&gt;movsum&lt;/code&gt; が &lt;code&gt;NaN&lt;/code&gt; を処理する方法と、プロパティ &lt;code&gt;&quot;nancond&quot;&lt;/code&gt; にも影響されます。</target>
        </trans-unit>
        <trans-unit id="5e89560fa0199ae349fcac5e0c527b18e30c12dd" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by &lt;code&gt;NaN&lt;/code&gt;. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = var ([NaN, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = var ([&lt;var&gt;x&lt;/var&gt;(end-1:end), NaN])&lt;/code&gt;. This option usually results in &lt;var&gt;y&lt;/var&gt; having &lt;code&gt;NaN&lt;/code&gt; values at the boundaries, although it is influenced by how &lt;code&gt;var&lt;/code&gt; handles &lt;code&gt;NaN&lt;/code&gt;, and also by the property &lt;code&gt;&quot;nancond&quot;&lt;/code&gt;.</source>
          <target state="translated">データ配列外のウィンドウ要素はすべて &lt;code&gt;NaN&lt;/code&gt; に置き換えられます。たとえば、長さが3のウィンドウの場合、 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = var ([NaN, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; 、および &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = var ([&lt;var&gt;x&lt;/var&gt;(end-1:end), NaN])&lt;/code&gt; 。このオプションは通常、境界で &lt;code&gt;NaN&lt;/code&gt; 値を持つ &lt;var&gt;y&lt;/var&gt; になりますが、 &lt;code&gt;var&lt;/code&gt; が &lt;code&gt;NaN&lt;/code&gt; を処理する方法、およびプロパティ &lt;code&gt;&quot;nancond&quot;&lt;/code&gt; にも影響されます。</target>
        </trans-unit>
        <trans-unit id="3b94420e0085284480c2e238c9ee0b237e5c2d70" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by the specified value &lt;var&gt;user_value&lt;/var&gt; which must be a numeric scalar. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = &lt;var&gt;fcn&lt;/var&gt; ([&lt;var&gt;user_value&lt;/var&gt;, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = &lt;var&gt;fcn&lt;/var&gt; ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;user_value&lt;/var&gt;])&lt;/code&gt;. A common choice for &lt;var&gt;user_value&lt;/var&gt; is 0.</source>
          <target state="translated">データ配列の外側のウィンドウ要素はすべて、指定された値 &lt;var&gt;user_value&lt;/var&gt; で置き換えられます。user_valueは数値スカラーでなければなりません。たとえば、長さが3のウィンドウの場合、 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = &lt;var&gt;fcn&lt;/var&gt; ([&lt;var&gt;user_value&lt;/var&gt;, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; と &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = &lt;var&gt;fcn&lt;/var&gt; ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;user_value&lt;/var&gt;])&lt;/code&gt; 。 &lt;var&gt;user_value&lt;/var&gt; の一般的な選択は0です。</target>
        </trans-unit>
        <trans-unit id="977733638e3c21088f20de9db4b65e4ddcd835c3" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by the specified value &lt;var&gt;user_value&lt;/var&gt; which must be a numeric scalar. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = mad ([&lt;var&gt;user_value&lt;/var&gt;, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = mad ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;user_value&lt;/var&gt;])&lt;/code&gt;. A common choice for &lt;var&gt;user_value&lt;/var&gt; is 0.</source>
          <target state="translated">データ配列の外側のウィンドウ要素はすべて、指定された値 &lt;var&gt;user_value&lt;/var&gt; で置き換えられます。user_valueは数値スカラーでなければなりません。たとえば、ウィンドウの長さが3の場合、 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = mad ([&lt;var&gt;user_value&lt;/var&gt;, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; と &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = mad ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;user_value&lt;/var&gt;])&lt;/code&gt; 。 &lt;var&gt;user_value&lt;/var&gt; の一般的な選択は0です。</target>
        </trans-unit>
        <trans-unit id="b68064036ed699ad1e76bb311cad85c803452e34" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by the specified value &lt;var&gt;user_value&lt;/var&gt; which must be a numeric scalar. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = max ([&lt;var&gt;user_value&lt;/var&gt;, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = max ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;user_value&lt;/var&gt;])&lt;/code&gt;. A common choice for &lt;var&gt;user_value&lt;/var&gt; is 0.</source>
          <target state="translated">データ配列の外側のウィンドウ要素はすべて、指定された値 &lt;var&gt;user_value&lt;/var&gt; で置き換えられます。user_valueは数値スカラーでなければなりません。たとえば、長さが3のウィンドウの場合、 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = max ([&lt;var&gt;user_value&lt;/var&gt;, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; 、および &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = max ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;user_value&lt;/var&gt;])&lt;/code&gt; 。 &lt;var&gt;user_value&lt;/var&gt; の一般的な選択は0です。</target>
        </trans-unit>
        <trans-unit id="3ef90177bb1de3bda627e83ddac5074a03a8f492" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by the specified value &lt;var&gt;user_value&lt;/var&gt; which must be a numeric scalar. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = mean ([&lt;var&gt;user_value&lt;/var&gt;, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = mean ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;user_value&lt;/var&gt;])&lt;/code&gt;. A common choice for &lt;var&gt;user_value&lt;/var&gt; is 0.</source>
          <target state="translated">データ配列の外側のウィンドウ要素はすべて、指定された値 &lt;var&gt;user_value&lt;/var&gt; で置き換えられます。user_valueは数値スカラーでなければなりません。たとえば、長さが3のウィンドウの場合、 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = mean ([&lt;var&gt;user_value&lt;/var&gt;, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; 、および &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = mean ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;user_value&lt;/var&gt;])&lt;/code&gt; 。 &lt;var&gt;user_value&lt;/var&gt; の一般的な選択は0です。</target>
        </trans-unit>
        <trans-unit id="23eb80fb927c7da1ab295362edfc03a239fd527b" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by the specified value &lt;var&gt;user_value&lt;/var&gt; which must be a numeric scalar. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = min ([&lt;var&gt;user_value&lt;/var&gt;, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = min ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;user_value&lt;/var&gt;])&lt;/code&gt;. A common choice for &lt;var&gt;user_value&lt;/var&gt; is 0.</source>
          <target state="translated">データ配列の外側のウィンドウ要素はすべて、指定された値 &lt;var&gt;user_value&lt;/var&gt; で置き換えられます。user_valueは数値スカラーでなければなりません。たとえば、長さが3のウィンドウの場合、 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = min ([&lt;var&gt;user_value&lt;/var&gt;, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; 、および &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = min ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;user_value&lt;/var&gt;])&lt;/code&gt; 。 &lt;var&gt;user_value&lt;/var&gt; の一般的な選択は0です。</target>
        </trans-unit>
        <trans-unit id="d7283e1d47832eff3f7bfd27e81f7b8efc25b565" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by the specified value &lt;var&gt;user_value&lt;/var&gt; which must be a numeric scalar. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movmedian ([&lt;var&gt;user_value&lt;/var&gt;, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movmedian ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;user_value&lt;/var&gt;])&lt;/code&gt;. A common choice for &lt;var&gt;user_value&lt;/var&gt; is 0.</source>
          <target state="translated">データ配列の外側のウィンドウ要素はすべて、指定された値 &lt;var&gt;user_value&lt;/var&gt; で置き換えられます。user_valueは数値スカラーでなければなりません。たとえば、ウィンドウの長さが3の場合、 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movmedian ([&lt;var&gt;user_value&lt;/var&gt;, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; と &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movmedian ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;user_value&lt;/var&gt;])&lt;/code&gt; 。 &lt;var&gt;user_value&lt;/var&gt; の一般的な選択は0です。</target>
        </trans-unit>
        <trans-unit id="04013ec3b0d3d58c3e3ff09f8dab2baa41b6245e" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by the specified value &lt;var&gt;user_value&lt;/var&gt; which must be a numeric scalar. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movprod ([&lt;var&gt;user_value&lt;/var&gt;, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movprod ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;user_value&lt;/var&gt;])&lt;/code&gt;. A common choice for &lt;var&gt;user_value&lt;/var&gt; is 0.</source>
          <target state="translated">データ配列の外側のウィンドウ要素はすべて、指定された値 &lt;var&gt;user_value&lt;/var&gt; で置き換えられます。user_valueは数値スカラーでなければなりません。たとえば、長さが3のウィンドウの場合、 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movprod ([&lt;var&gt;user_value&lt;/var&gt;, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; と &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movprod ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;user_value&lt;/var&gt;])&lt;/code&gt; 。 &lt;var&gt;user_value&lt;/var&gt; の一般的な選択は0です。</target>
        </trans-unit>
        <trans-unit id="8b19cbd6e368c9e9ed7a5179b9a0e6b5a973dc24" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by the specified value &lt;var&gt;user_value&lt;/var&gt; which must be a numeric scalar. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movstd ([&lt;var&gt;user_value&lt;/var&gt;, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movstd ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;user_value&lt;/var&gt;])&lt;/code&gt;. A common choice for &lt;var&gt;user_value&lt;/var&gt; is 0.</source>
          <target state="translated">データ配列の外側のウィンドウ要素はすべて、指定された値 &lt;var&gt;user_value&lt;/var&gt; で置き換えられます。user_valueは数値スカラーでなければなりません。たとえば、ウィンドウの長さが3の場合、 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movstd ([&lt;var&gt;user_value&lt;/var&gt;, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; と &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movstd ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;user_value&lt;/var&gt;])&lt;/code&gt; 。 &lt;var&gt;user_value&lt;/var&gt; の一般的な選択は0です。</target>
        </trans-unit>
        <trans-unit id="315607fc12097f7e35d0777f9140e1d41569b812" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by the specified value &lt;var&gt;user_value&lt;/var&gt; which must be a numeric scalar. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movsum ([&lt;var&gt;user_value&lt;/var&gt;, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movsum ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;user_value&lt;/var&gt;])&lt;/code&gt;. A common choice for &lt;var&gt;user_value&lt;/var&gt; is 0.</source>
          <target state="translated">データ配列の外側のウィンドウ要素はすべて、指定された値 &lt;var&gt;user_value&lt;/var&gt; で置き換えられます。user_valueは数値スカラーでなければなりません。たとえば、ウィンドウの長さが3の場合、 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movsum ([&lt;var&gt;user_value&lt;/var&gt;, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; と &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movsum ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;user_value&lt;/var&gt;])&lt;/code&gt; 。 &lt;var&gt;user_value&lt;/var&gt; の一般的な選択は0です。</target>
        </trans-unit>
        <trans-unit id="fa1be8814eefc11fdf75a52c5d61e5714474442a" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by the specified value &lt;var&gt;user_value&lt;/var&gt; which must be a numeric scalar. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = var ([&lt;var&gt;user_value&lt;/var&gt;, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = var ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;user_value&lt;/var&gt;])&lt;/code&gt;. A common choice for &lt;var&gt;user_value&lt;/var&gt; is 0.</source>
          <target state="translated">データ配列の外側のウィンドウ要素はすべて、指定された値 &lt;var&gt;user_value&lt;/var&gt; で置き換えられます。user_valueは数値スカラーでなければなりません。たとえば、ウィンドウの長さが3の場合、 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = var ([&lt;var&gt;user_value&lt;/var&gt;, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; と &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = var ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;user_value&lt;/var&gt;])&lt;/code&gt; 。 &lt;var&gt;user_value&lt;/var&gt; の一般的な選択は0です。</target>
        </trans-unit>
        <trans-unit id="cf511c880116f88bbea251680131f1fd6974234d" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by the value of &lt;var&gt;x&lt;/var&gt; at the boundary. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = &lt;var&gt;fcn&lt;/var&gt; ([&lt;var&gt;x&lt;/var&gt;(1), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = &lt;var&gt;fcn&lt;/var&gt; ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(end)])&lt;/code&gt;.</source>
          <target state="translated">データ配列外のウィンドウ要素は、境界で &lt;var&gt;x&lt;/var&gt; の値に置き換えられます。たとえば、ウィンドウの長さが3の場合、 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = &lt;var&gt;fcn&lt;/var&gt; ([&lt;var&gt;x&lt;/var&gt;(1), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; と &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = &lt;var&gt;fcn&lt;/var&gt; ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(end)])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9cd5893382406b6e4c450d76d1a9d4e3abe9990c" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by the value of &lt;var&gt;x&lt;/var&gt; at the boundary. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = mad ([&lt;var&gt;x&lt;/var&gt;(1), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = mad ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(end)])&lt;/code&gt;.</source>
          <target state="translated">データ配列外のウィンドウ要素は、境界で &lt;var&gt;x&lt;/var&gt; の値に置き換えられます。たとえば、長さが3のウィンドウの場合、 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = mad ([&lt;var&gt;x&lt;/var&gt;(1), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; 、および &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = mad ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(end)])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="730462b50a4a7d6e71ecfd1c9b8fcbce1d7cf213" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by the value of &lt;var&gt;x&lt;/var&gt; at the boundary. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = max ([&lt;var&gt;x&lt;/var&gt;(1), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = max ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(end)])&lt;/code&gt;.</source>
          <target state="translated">データ配列外のウィンドウ要素は、境界で &lt;var&gt;x&lt;/var&gt; の値に置き換えられます。たとえば、ウィンドウの長さが3の場合、 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = max ([&lt;var&gt;x&lt;/var&gt;(1), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; であり、 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = max ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(end)])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6b214b07a0d58cd526a32ea652f0d96375f9e839" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by the value of &lt;var&gt;x&lt;/var&gt; at the boundary. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = mean ([&lt;var&gt;x&lt;/var&gt;(1), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = mean ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(end)])&lt;/code&gt;.</source>
          <target state="translated">データ配列外のウィンドウ要素は、境界で &lt;var&gt;x&lt;/var&gt; の値に置き換えられます。たとえば、ウィンドウの長さが3の場合、 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = mean ([&lt;var&gt;x&lt;/var&gt;(1), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; であり、 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = mean ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(end)])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8c1397db3476234e9136f784be193ea6692bcfc5" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by the value of &lt;var&gt;x&lt;/var&gt; at the boundary. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = min ([&lt;var&gt;x&lt;/var&gt;(1), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = min ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(end)])&lt;/code&gt;.</source>
          <target state="translated">データ配列外のウィンドウ要素は、境界で &lt;var&gt;x&lt;/var&gt; の値に置き換えられます。たとえば、ウィンドウの長さが3の場合、 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = min ([&lt;var&gt;x&lt;/var&gt;(1), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; であり、 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = min ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(end)])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="160e488f1edd0c0a1d93c206f81ae18700b55302" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by the value of &lt;var&gt;x&lt;/var&gt; at the boundary. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movmedian ([&lt;var&gt;x&lt;/var&gt;(1), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movmedian ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(end)])&lt;/code&gt;.</source>
          <target state="translated">データ配列外のウィンドウ要素は、境界で &lt;var&gt;x&lt;/var&gt; の値に置き換えられます。たとえば、ウィンドウの長さが3の場合、 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movmedian ([&lt;var&gt;x&lt;/var&gt;(1), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; と &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movmedian ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(end)])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2b32fbe3c2b888f1d8074aaa1be3ecbd59e13ad8" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by the value of &lt;var&gt;x&lt;/var&gt; at the boundary. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movprod ([&lt;var&gt;x&lt;/var&gt;(1), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movprod ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(end)])&lt;/code&gt;.</source>
          <target state="translated">データ配列外のウィンドウ要素は、境界で &lt;var&gt;x&lt;/var&gt; の値に置き換えられます。たとえば、ウィンドウの長さが3の場合、 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movprod ([&lt;var&gt;x&lt;/var&gt;(1), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; と &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movprod ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(end)])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9bde744ba860d983f73301c06b1969ceac63a076" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by the value of &lt;var&gt;x&lt;/var&gt; at the boundary. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movstd ([&lt;var&gt;x&lt;/var&gt;(1), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movstd ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(end)])&lt;/code&gt;.</source>
          <target state="translated">データ配列外のウィンドウ要素は、境界で &lt;var&gt;x&lt;/var&gt; の値に置き換えられます。たとえば、ウィンドウの長さが3の場合、 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movstd ([&lt;var&gt;x&lt;/var&gt;(1), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; と &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movstd ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(end)])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ab36fc5bb5b9c563dc1202c2981dfd0d111244b1" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by the value of &lt;var&gt;x&lt;/var&gt; at the boundary. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movsum ([&lt;var&gt;x&lt;/var&gt;(1), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movsum ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(end)])&lt;/code&gt;.</source>
          <target state="translated">データ配列外のウィンドウ要素は、境界で &lt;var&gt;x&lt;/var&gt; の値に置き換えられます。たとえば、ウィンドウの長さが3の場合、 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movsum ([&lt;var&gt;x&lt;/var&gt;(1), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; と &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movsum ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(end)])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="14171bb1b91b98c410779fc56ba49f330a2dd3d5" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by the value of &lt;var&gt;x&lt;/var&gt; at the boundary. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = var ([&lt;var&gt;x&lt;/var&gt;(1), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = var ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(end)])&lt;/code&gt;.</source>
          <target state="translated">データ配列外のウィンドウ要素は、境界で &lt;var&gt;x&lt;/var&gt; の値に置き換えられます。たとえば、ウィンドウの長さが3の場合、 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = var ([&lt;var&gt;x&lt;/var&gt;(1), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; と &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = var ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(end)])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="545c638e77e6f6dba64f975a55126c1183566af5" translate="yes" xml:space="preserve">
          <source>Apart from the string concatenation functions (see &lt;a href=&quot;concatenating-strings#Concatenating-Strings&quot;&gt;Concatenating Strings&lt;/a&gt;) which cast numerical data to the corresponding UTF-8 encoded characters, there are several functions that format numerical data as strings. &lt;code&gt;mat2str&lt;/code&gt; and &lt;code&gt;num2str&lt;/code&gt; convert real or complex matrices, while &lt;code&gt;int2str&lt;/code&gt; converts integer matrices. &lt;code&gt;int2str&lt;/code&gt; takes the real part of complex values and round fractional values to integer. A more flexible way to format numerical data as strings is the &lt;code&gt;sprintf&lt;/code&gt; function (see &lt;a href=&quot;formatted-output#Formatted-Output&quot;&gt;Formatted Output&lt;/a&gt;, &lt;a href=&quot;formatted-output#XREFsprintf&quot;&gt;sprintf&lt;/a&gt;).</source>
          <target state="translated">別に文字列連結関数から（参照&lt;a href=&quot;concatenating-strings#Concatenating-Strings&quot;&gt;連結ストリング&lt;/a&gt;対応するUTF-8でエンコードされた文字の数値データキャスト）、文字列としてフォーマット数値データをそのいくつかの機能があります。 &lt;code&gt;mat2str&lt;/code&gt; と &lt;code&gt;num2str&lt;/code&gt; は実数または複素数の行列を変換し、 &lt;code&gt;int2str&lt;/code&gt; は整数行列を変換します。 &lt;code&gt;int2str&lt;/code&gt; は、複素数値の実部を取り、小数値を整数に丸めます。数値データを文字列としてフォーマットするためのより柔軟な方法は、 &lt;code&gt;sprintf&lt;/code&gt; 関数です（&lt;a href=&quot;formatted-output#Formatted-Output&quot;&gt;Formatted Output&lt;/a&gt;、&lt;a href=&quot;formatted-output#XREFsprintf&quot;&gt;sprintfを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="785a6da4cd10e6657994c3b3db962696d27c8392" translate="yes" xml:space="preserve">
          <source>Append PostScript or PDF output to an existing file of the same type.</source>
          <target state="translated">PostScriptまたはPDF出力を、同じタイプの既存のファイルに追加します。</target>
        </trans-unit>
        <trans-unit id="fca25ad0c003bd064eefcf4ae7631b81f01f034d" translate="yes" xml:space="preserve">
          <source>Append a &lt;code&gt;&quot;t&quot;&lt;/code&gt; to the mode string to open the file in text mode or a &lt;code&gt;&quot;b&quot;&lt;/code&gt; to open in binary mode. On Windows systems, text mode reading and writing automatically converts linefeeds to the appropriate line end character for the system (carriage-return linefeed on Windows). The default when no mode is specified is binary.</source>
          <target state="translated">モード文字列に &lt;code&gt;&quot;t&quot;&lt;/code&gt; を追加してファイルをテキストモードで開くか、 &lt;code&gt;&quot;b&quot;&lt;/code&gt; を追加してバイナリモードで開きます。Windowsシステムでは、テキストモードの読み取りと書き込みにより、ラインフィードがシステムの適切なラインエンド文字に自動的に変換されます（Windowsではキャリッジリターンのラインフィード）。モードが指定されていない場合のデフォルトはバイナリです。</target>
        </trans-unit>
        <trans-unit id="76e04db00f9d563e8a44f8584d52d9de84897e3e" translate="yes" xml:space="preserve">
          <source>Append on each write.</source>
          <target state="translated">各書き込みに付記してください。</target>
        </trans-unit>
        <trans-unit id="fcd15fbe76d1ad70f714f8e23c265874bb25a2bb" translate="yes" xml:space="preserve">
          <source>Append the scalar value &lt;var&gt;c&lt;/var&gt; to the vector &lt;var&gt;x&lt;/var&gt; until it is of length &lt;var&gt;l&lt;/var&gt;. If &lt;var&gt;c&lt;/var&gt; is not given, a value of 0 is used.</source>
          <target state="translated">長さが &lt;var&gt;l&lt;/var&gt; になるまで、スカラー値 &lt;var&gt;c&lt;/var&gt; をベクトル &lt;var&gt;x&lt;/var&gt; に追加します。 &lt;var&gt;c&lt;/var&gt; が指定されていない場合は、値0が使用されます。</target>
        </trans-unit>
        <trans-unit id="cc9f1bb350cd58ad799225f61b97f0b24ad0032e" translate="yes" xml:space="preserve">
          <source>Append to the destination instead of overwriting.</source>
          <target state="translated">上書きではなく、宛先に追加します。</target>
        </trans-unit>
        <trans-unit id="f7054aac1696ded8ac9bfacb9f5cf76d334f375f" translate="yes" xml:space="preserve">
          <source>Appendix A External Code Interface</source>
          <target state="translated">付録A 外部コードインタフェース</target>
        </trans-unit>
        <trans-unit id="b21f037da0ba45a7ed4e479dbfd59644ad04ab9e" translate="yes" xml:space="preserve">
          <source>Appendix B Test and Demo Functions</source>
          <target state="translated">付録B テスト・デモ機能</target>
        </trans-unit>
        <trans-unit id="08d70a0baa22ef5ef39c2d25e1fddab95e34397c" translate="yes" xml:space="preserve">
          <source>Appendix C Obsolete Functions</source>
          <target state="translated">付録C 廃止された機能</target>
        </trans-unit>
        <trans-unit id="04ef7133e2155dd4201b5a2afeb50c4f04292dc6" translate="yes" xml:space="preserve">
          <source>Appendix D Known Causes of Trouble</source>
          <target state="translated">付録 D トラブルの既知の原因</target>
        </trans-unit>
        <trans-unit id="c61a2f23d53216631bdfee427af8b5e03b525002" translate="yes" xml:space="preserve">
          <source>Appendix E Installing Octave</source>
          <target state="translated">付録 E オクターブのインストール</target>
        </trans-unit>
        <trans-unit id="797e750e19093eb16b699bdddb57638dfd00d35d" translate="yes" xml:space="preserve">
          <source>Appendix F Grammar and Parser</source>
          <target state="translated">付録F 文法とパーサー</target>
        </trans-unit>
        <trans-unit id="c17a2ab66c214e2003d542184dcb51e72a9bf238" translate="yes" xml:space="preserve">
          <source>Appendix G GNU GENERAL PUBLIC LICENSE</source>
          <target state="translated">付録G GNU一般公衆使用権</target>
        </trans-unit>
        <trans-unit id="54f6630ceb611f3fceceda2a230f65f7f5a6ff1e" translate="yes" xml:space="preserve">
          <source>Application Note: If &lt;var&gt;x&lt;/var&gt; is not specified then unit spacing will be used. To scale the integral to the correct value you must multiply by the actual spacing value (deltaX).</source>
          <target state="translated">適用上の注意： &lt;var&gt;x&lt;/var&gt; が指定されていない場合、単位間隔が使用されます。積分を正しい値にスケーリングするには、実際の間隔値（deltaX）を掛ける必要があります。</target>
        </trans-unit>
        <trans-unit id="816c84617b41a721d5f438b924dd8db1e9c51d20" translate="yes" xml:space="preserve">
          <source>Application Note: If &lt;var&gt;x&lt;/var&gt; is not specified then unit spacing will be used. To scale the integral to the correct value you must multiply by the actual spacing value (deltaX). As an example, the integral of &lt;em&gt;x^3&lt;/em&gt; over the range [0, 1] is &lt;em&gt;x^4/4&lt;/em&gt; or 0.25. The following code uses &lt;code&gt;trapz&lt;/code&gt; to calculate the integral in three different ways.</source>
          <target state="translated">適用上の注意： &lt;var&gt;x&lt;/var&gt; が指定されていない場合、単位間隔が使用されます。積分を正しい値にスケーリングするには、実際の間隔値（deltaX）を掛ける必要があります。一例として、の積分&lt;em&gt;X ^ 3&lt;/em&gt;範囲[0、1]上であり&lt;em&gt;、X ^ 4月4日&lt;/em&gt;または0.25。次のコードは、 &lt;code&gt;trapz&lt;/code&gt; を使用して、3つの異なる方法で積分を計算します。</target>
        </trans-unit>
        <trans-unit id="f3f8827aa94cef2d328ca131ad741f65913d0c4f" translate="yes" xml:space="preserve">
          <source>Application Notes: If the objective function is a single nonlinear equation of one variable then using &lt;code&gt;fminbnd&lt;/code&gt; is usually a better choice.</source>
          <target state="translated">アプリケーションノート：目的関数が1つの変数の単一の非線形方程式である場合、通常は &lt;code&gt;fminbnd&lt;/code&gt; を使用する方が適切です。</target>
        </trans-unit>
        <trans-unit id="d46a5f93b7313f2025a9e027bed811a2cfd7f7e8" translate="yes" xml:space="preserve">
          <source>Application-defined Data</source>
          <target state="translated">アプリケーション定義データ</target>
        </trans-unit>
        <trans-unit id="135e357067c784380e6421d4b046311ab5356ea1" translate="yes" xml:space="preserve">
          <source>Applied Numerical Linear Algebra</source>
          <target state="translated">応用数値線形代数</target>
        </trans-unit>
        <trans-unit id="70a4c7664dad814e1c6749b6e9505c00d073333c" translate="yes" xml:space="preserve">
          <source>Apply a 1-D digital filter to the data &lt;var&gt;x&lt;/var&gt;.</source>
          <target state="translated">1次元デジタルフィルターをデータ &lt;var&gt;x&lt;/var&gt; に適用します。</target>
        </trans-unit>
        <trans-unit id="e73565dee1a1f7600c0f54242050730fa35c87c8" translate="yes" xml:space="preserve">
          <source>Apply a binary function &lt;var&gt;f&lt;/var&gt; element-by-element to two array arguments &lt;var&gt;A&lt;/var&gt; and &lt;var&gt;B&lt;/var&gt;, expanding singleton dimensions in either input argument as necessary.</source>
          <target state="translated">バイナリ関数 &lt;var&gt;f&lt;/var&gt; を要素ごとに2つの配列引数 &lt;var&gt;A&lt;/var&gt; および &lt;var&gt;B&lt;/var&gt; に適用し、必要に応じていずれかの入力引数のシングルトン次元を拡張します。</target>
        </trans-unit>
        <trans-unit id="aa781854fb0fdffb9cfdc7526b54d027900e556f" translate="yes" xml:space="preserve">
          <source>Apply function &lt;var&gt;fcn&lt;/var&gt; to a moving window of length &lt;var&gt;wlen&lt;/var&gt; on data &lt;var&gt;x&lt;/var&gt;.</source>
          <target state="translated">関数 &lt;var&gt;fcn&lt;/var&gt; をデータ &lt;var&gt;x&lt;/var&gt; 上の長さ &lt;var&gt;wlen&lt;/var&gt; の移動ウィンドウに適用します。</target>
        </trans-unit>
        <trans-unit id="66dc3ae413a56066aedc7ced05df36a683878e28" translate="yes" xml:space="preserve">
          <source>Apply the 2-D FIR filter &lt;var&gt;b&lt;/var&gt; to &lt;var&gt;x&lt;/var&gt;.</source>
          <target state="translated">2次元FIRフィルター &lt;var&gt;b&lt;/var&gt; を &lt;var&gt;x&lt;/var&gt; に適用します。</target>
        </trans-unit>
        <trans-unit id="f8e284d58526d8b58ca23cc14b15ae04fa4f7c79" translate="yes" xml:space="preserve">
          <source>Applying functions to arrays, cells, and structs</source>
          <target state="translated">配列、セル、および構造体への関数の適用</target>
        </trans-unit>
        <trans-unit id="db74573c6b8ecf6daef655a0518bb6cb43617e62" translate="yes" xml:space="preserve">
          <source>Architecture-independent data files.</source>
          <target state="translated">アーキテクチャに依存しないデータファイル。</target>
        </trans-unit>
        <trans-unit id="b1fa1729ef721d04daf66856816f1037c664412f" translate="yes" xml:space="preserve">
          <source>Area Series</source>
          <target state="translated">エリアシリーズ</target>
        </trans-unit>
        <trans-unit id="166c8b53c91f66554c4fa75df1e6cc3ea15ab01b" translate="yes" xml:space="preserve">
          <source>Area plot of the columns of &lt;var&gt;y&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;y&lt;/var&gt; の列の面積プロット。</target>
        </trans-unit>
        <trans-unit id="7dff5f4d0b9314271352bb4fb936d10262b72e8a" translate="yes" xml:space="preserve">
          <source>Area series objects are created by the &lt;code&gt;area&lt;/code&gt; function. Each of the &lt;code&gt;hggroup&lt;/code&gt; elements contains a single patch object. The properties of the area series are</source>
          <target state="translated">エリアシリーズオブジェクトは、 &lt;code&gt;area&lt;/code&gt; 関数によって作成されます。各 &lt;code&gt;hggroup&lt;/code&gt; 要素には、単一のpatchオブジェクトが含まれています。エリアシリーズのプロパティは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="b3c989acda843efdf73d28fc1e1a6b325fe930d3" translate="yes" xml:space="preserve">
          <source>Arguments are</source>
          <target state="translated">引数は</target>
        </trans-unit>
        <trans-unit id="05a731380a967a2c5a3851a4eb179164e25c5d3b" translate="yes" xml:space="preserve">
          <source>Arguments are concatenated vertically. The returned values are padded with blanks as needed to make each row of the string array have the same length. Empty input strings are significant and will concatenated in the output.</source>
          <target state="translated">引数は縦に連結されます。返された値は、文字列配列の各行が同じ長さになるように必要に応じて空白でパディングされます。空の入力文字列は重要な意味を持ち、出力では連結されます。</target>
        </trans-unit>
        <trans-unit id="3e5b8fb05cf7b99948f41362471af5904f8067a7" translate="yes" xml:space="preserve">
          <source>Arguments are concatenated vertically. The returned values are padded with blanks as needed to make each row of the string array have the same length. Unlike &lt;code&gt;char&lt;/code&gt;, empty strings are removed and will not appear in the output.</source>
          <target state="translated">引数は垂直方向に連結されます。文字列配列の各行が同じ長さになるように、必要に応じて戻り値に空白が埋め込まれます。 &lt;code&gt;char&lt;/code&gt; とは異なり、空の文字列は削除され、出力には表示されません。</target>
        </trans-unit>
        <trans-unit id="f61143896c17a8c7fc42c21ffd016d48186d390c" translate="yes" xml:space="preserve">
          <source>Arguments may also be given in groups of three as</source>
          <target state="translated">のように3つのグループで引数を与えることもできます。</target>
        </trans-unit>
        <trans-unit id="45f053dc732762c8c17889da40821807b746247b" translate="yes" xml:space="preserve">
          <source>Arithmetic</source>
          <target state="translated">Arithmetic</target>
        </trans-unit>
        <trans-unit id="6104f39ed22a2cd32e98536a3447a01c4b9f4781" translate="yes" xml:space="preserve">
          <source>Arithmetic Operators</source>
          <target state="translated">算術演算子</target>
        </trans-unit>
        <trans-unit id="b33de5df78f2a08fc527ef7f0d1ac51c58e59944" translate="yes" xml:space="preserve">
          <source>Arithmetic Ops</source>
          <target state="translated">算術演算装置</target>
        </trans-unit>
        <trans-unit id="86b945e8e0a46c9e60aa419ec1c8956ece4c3997" translate="yes" xml:space="preserve">
          <source>Array and Sparse Class Differences</source>
          <target state="translated">配列とスパースクラスの違い</target>
        </trans-unit>
        <trans-unit id="b2b28ba6fc9eb24544f23790c336166701491eeb" translate="yes" xml:space="preserve">
          <source>Array.cc</source>
          <target state="translated">Array.cc</target>
        </trans-unit>
        <trans-unit id="6dd6586b554db2bae862864e25cb2fbf8353d787" translate="yes" xml:space="preserve">
          <source>ArrayFormat</source>
          <target state="translated">ArrayFormat</target>
        </trans-unit>
        <trans-unit id="be3537a50fe2a3161040eaf751da1bb42cb54fed" translate="yes" xml:space="preserve">
          <source>Arrays may also be concatenated horizontally using the syntax for creating new matrices. For example:</source>
          <target state="translated">配列は、新しい行列を作成するための構文を使用して水平方向に連結することもできます。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="cf220baf3f296541731fd734637bb91c7b88290d" translate="yes" xml:space="preserve">
          <source>Arrays may also be concatenated vertically using the syntax for creating new matrices. For example:</source>
          <target state="translated">配列は、新しい行列を作成するための構文を使用して縦に連結することもできます。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="0cf604cb001bdc6112fda3affb0c7674d1c4481b" translate="yes" xml:space="preserve">
          <source>Arrows</source>
          <target state="translated">Arrows</target>
        </trans-unit>
        <trans-unit id="6c3f3d3203630ce74ffd9609307833fc4f052892" translate="yes" xml:space="preserve">
          <source>Artist</source>
          <target state="translated">Artist</target>
        </trans-unit>
        <trans-unit id="1c89f3a885dfe7cece78890101c6b0af957926e4" translate="yes" xml:space="preserve">
          <source>Artist name.</source>
          <target state="translated">アーティスト名。</target>
        </trans-unit>
        <trans-unit id="2f29c23a7415d1170721d53776b5b3c6caa40e96" translate="yes" xml:space="preserve">
          <source>As a complex example consider a parent function &lt;code&gt;ex_top&lt;/code&gt; with two child functions, &lt;code&gt;ex_a&lt;/code&gt; and &lt;code&gt;ex_b&lt;/code&gt;. In addition, &lt;code&gt;ex_a&lt;/code&gt; has two more child functions, &lt;code&gt;ex_aa&lt;/code&gt; and &lt;code&gt;ex_ab&lt;/code&gt;. For example:</source>
          <target state="translated">複雑な例として、親機能を考慮 &lt;code&gt;ex_top&lt;/code&gt; 2つの関数、と &lt;code&gt;ex_a&lt;/code&gt; と &lt;code&gt;ex_b&lt;/code&gt; を。さらに、 &lt;code&gt;ex_a&lt;/code&gt; には &lt;code&gt;ex_aa&lt;/code&gt; と &lt;code&gt;ex_ab&lt;/code&gt; の 2つの子関数があります。例えば：</target>
        </trans-unit>
        <trans-unit id="09ec4198a968407eb1f63463fd157b6dbada87fc" translate="yes" xml:space="preserve">
          <source>As a consequence of using &lt;code&gt;quadcc&lt;/code&gt;, &lt;code&gt;quadgk&lt;/code&gt;, and &lt;code&gt;quadv&lt;/code&gt;, certain option combinations are not supported. Currently, &lt;code&gt;&quot;ArrayValued&quot;&lt;/code&gt; cannot be combined with &lt;code&gt;&quot;RelTol&quot;&lt;/code&gt; or &lt;code&gt;&quot;Waypoints&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;quadcc&lt;/code&gt; 、 &lt;code&gt;quadgk&lt;/code&gt; 、および &lt;code&gt;quadv&lt;/code&gt; を使用した結果、特定のオプションの組み合わせはサポートされません。現在、 &lt;code&gt;&quot;ArrayValued&quot;&lt;/code&gt; と組み合わせることはできません &lt;code&gt;&quot;RelTol&quot;&lt;/code&gt; または &lt;code&gt;&quot;Waypoints&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fc3435493aefa988b7deecd5e677269bd49effa1" translate="yes" xml:space="preserve">
          <source>As a general rule, functions should already be written with matrix arguments in mind and should consider whole matrix operations in a vectorized manner. Sometimes, writing functions in this way appears difficult or impossible for various reasons. For those situations, Octave provides facilities for applying a function to each element of an array, cell, or struct.</source>
          <target state="translated">一般的なルールとして,関数はすでに行列の引数を念頭に置いて書かれており,行列全体の演算をベクトル化した方法で考慮しなければなりません.時々,このように関数を書くことが,様々な理由で困難に見えたり,不可能に見えたりします。このような状況に対して,Octaveは,配列,セル,構造体の各要素に関数を適用する機能を提供しています。</target>
        </trans-unit>
        <trans-unit id="3b32bbe19e2dd11f2f004787fd53ae11b98e11b8" translate="yes" xml:space="preserve">
          <source>As a less trivial example, instead of</source>
          <target state="translated">些細な例として、代わりに</target>
        </trans-unit>
        <trans-unit id="12a7a92c9e870593841c1a9c287f8a16df89aa1e" translate="yes" xml:space="preserve">
          <source>As a measure of dispersion, &lt;code&gt;mad&lt;/code&gt; is less affected by outliers than &lt;code&gt;std&lt;/code&gt;.</source>
          <target state="translated">分散の尺度として、 &lt;code&gt;mad&lt;/code&gt; は &lt;code&gt;std&lt;/code&gt; よりも外れ値の影響を受けません。</target>
        </trans-unit>
        <trans-unit id="9e9ca23be9dfdfe1fc501b7f10e1ed9abc725a52" translate="yes" xml:space="preserve">
          <source>As a measure of dispersion, the interquartile range is less affected by outliers than either &lt;code&gt;range&lt;/code&gt; or &lt;code&gt;std&lt;/code&gt;.</source>
          <target state="translated">分散の尺度として、四分位範囲は &lt;code&gt;range&lt;/code&gt; または &lt;code&gt;std&lt;/code&gt; よりも外れ値の影響を受けません。</target>
        </trans-unit>
        <trans-unit id="f6c3df4bf76c8b43914248e395aa4103e7fce5b4" translate="yes" xml:space="preserve">
          <source>As a simple example, consider a function &lt;code&gt;func1&lt;/code&gt;, that calls a helper function &lt;code&gt;func2&lt;/code&gt; to do much of the work. For example:</source>
          <target state="translated">簡単な例として、ヘルパー関数 &lt;code&gt;func2&lt;/code&gt; を呼び出してほとんどの作業を行う関数 &lt;code&gt;func1&lt;/code&gt; を考えてみましょう。例えば：</target>
        </trans-unit>
        <trans-unit id="b2e2b18eaa83e0c9d5290952ead6863c5c9e120f" translate="yes" xml:space="preserve">
          <source>As a simple example, consider a parent function &lt;code&gt;foo&lt;/code&gt;, that calls a nested child function &lt;code&gt;bar&lt;/code&gt;, with a shared variable &lt;var&gt;x&lt;/var&gt;.</source>
          <target state="translated">簡単な例として、ネストされた子関数 &lt;code&gt;bar&lt;/code&gt; を呼び出す親関数 &lt;code&gt;foo&lt;/code&gt; と、共有変数 &lt;var&gt;x&lt;/var&gt; を考えます。</target>
        </trans-unit>
        <trans-unit id="f29cc37901037889138af15eb06b84a6120281cb" translate="yes" xml:space="preserve">
          <source>As a trivial example of an executable Octave script, you might create a text file named</source>
          <target state="translated">実行可能なOctaveスクリプトの些細な例として,以下の名前のテキストファイルを作成することができます。</target>
        </trans-unit>
        <trans-unit id="987a2d94e278347043dcf1e864584af5459d7426" translate="yes" xml:space="preserve">
          <source>As a trivial example of the use of &lt;em&gt;gplot&lt;/em&gt; consider the example,</source>
          <target state="translated">&lt;em&gt;gplot&lt;/em&gt;の使用の簡単な例として、例を考えます。</target>
        </trans-unit>
        <trans-unit id="0ef7f30ad482324293bea5ddd1ea783efb60f8e0" translate="yes" xml:space="preserve">
          <source>As all of the mixed operators and functions between full and sparse matrices exist, in general this does not cause any problems. However, one area where it does cause a problem is where a sparse matrix is promoted to a full matrix, where subsequent operations would resparsify the matrix. Such cases are rare, but can be artificially created, for example &lt;code&gt;(fliplr (speye (3)) + speye (3)) - speye (3)&lt;/code&gt; gives a full matrix when it should give a sparse one. In general, where such cases occur, they impose only a small memory penalty.</source>
          <target state="translated">完全行列と疎行列の間にすべての混合演算子と関数が存在するため、一般にこれは問題を引き起こしません。ただし、問題が発生する領域の1つは、スパースマトリックスが完全なマトリックスに昇格し、その後の操作でマトリックスが再スパース化されることです。このようなケースはまれですが、人工的に作成できます。たとえば、 &lt;code&gt;(fliplr (speye (3)) + speye (3)) - speye (3)&lt;/code&gt; は、スパース行列が必要なときに完全な行列を提供します。一般に、このようなケースが発生した場合、メモリのペナルティはほんのわずかです。</target>
        </trans-unit>
        <trans-unit id="5ec435e47be535a5e7479891777d2962b2024622" translate="yes" xml:space="preserve">
          <source>As alternatives to &lt;code&gt;validateattributes&lt;/code&gt; there are several shorter convenience functions to check for individual properties.</source>
          <target state="translated">&lt;code&gt;validateattributes&lt;/code&gt; の代わりに、個々のプロパティをチェックするためのより短い便利な関数がいくつかあります。</target>
        </trans-unit>
        <trans-unit id="0d74dbc515358047da0f33d8e47e4b89affc242c" translate="yes" xml:space="preserve">
          <source>As an alternative to creating empty cell arrays, and then filling them, it is possible to convert numerical arrays into cell arrays using the &lt;code&gt;num2cell&lt;/code&gt;, &lt;code&gt;mat2cell&lt;/code&gt; and &lt;code&gt;cellslices&lt;/code&gt; functions.</source>
          <target state="translated">空のセル配列を作成してそれらを埋める代わりに、 &lt;code&gt;num2cell&lt;/code&gt; 、 &lt;code&gt;mat2cell&lt;/code&gt; 、および &lt;code&gt;cellslices&lt;/code&gt; 関数を使用して数値配列をセル配列に変換することができます。</target>
        </trans-unit>
        <trans-unit id="379aa916a20c78330871da39b87e0b4765e1ff6d" translate="yes" xml:space="preserve">
          <source>As an example the following code creates a 3-by-3 matrix and saves it to the file &amp;lsquo;</source>
          <target state="translated">例として、次のコードは3行3列の行列を作成し、ファイルに保存します '</target>
        </trans-unit>
        <trans-unit id="7b07da704fff56fc5dbbf8c170487299b278b2a0" translate="yes" xml:space="preserve">
          <source>As an example the following function sets the first output argument to 1, the second to 2, and so on.</source>
          <target state="translated">例として、以下の関数では、第1引数の出力を1に、第2引数の出力を2に設定しています。</target>
        </trans-unit>
        <trans-unit id="1cc9ba3f444ef5f2a70c370287d23a7b3c9d81c8" translate="yes" xml:space="preserve">
          <source>As an example,</source>
          <target state="translated">一例として。</target>
        </trans-unit>
        <trans-unit id="8781fd74ffb5a82423179e7699ae05335023ee73" translate="yes" xml:space="preserve">
          <source>As an example, the first sentence of this help text is</source>
          <target state="translated">例として、このヘルプテキストの最初の文は</target>
        </trans-unit>
        <trans-unit id="a6e146d6547e763a1564126ef2e5e76827e3fdcb" translate="yes" xml:space="preserve">
          <source>As an example, the following code creates a cell array containing a string and a 2-by-2 random matrix</source>
          <target state="translated">例として、以下のコードは、文字列と 2 行 2 列のランダムな行列を含むセル配列を作成します。</target>
        </trans-unit>
        <trans-unit id="4b8262ecba7c8ac34e193390f08964eaf8160da3" translate="yes" xml:space="preserve">
          <source>As an example, the following code finds the roots of the quadratic polynomial</source>
          <target state="translated">例として、次のコードは二次多項式の根を求めます。</target>
        </trans-unit>
        <trans-unit id="83a4883d1f70e4af48bb29539be1c969656831d9" translate="yes" xml:space="preserve">
          <source>As an example, the following function implements a variant of the classic &amp;ldquo;Hello, World&amp;rdquo; program.</source>
          <target state="translated">例として、次の関数は、古典的な「Hello、World」プログラムのバリアントを実装します。</target>
        </trans-unit>
        <trans-unit id="8cc35a062b942448fb52571461dfcdfa78da8558" translate="yes" xml:space="preserve">
          <source>As before, the leading comments provide documentation for the class constructor. This constructor is very similar to the polynomial class constructor, except that a polynomial object is passed as the third argument to the &lt;code&gt;class&lt;/code&gt; function, telling Octave that the &lt;code&gt;FIRfilter&lt;/code&gt; class will be derived from the polynomial class. The FIR filter class itself does not have any data fields, but it must provide a struct to the &lt;code&gt;class&lt;/code&gt; function. Given that the &lt;code&gt;@polynomial&lt;/code&gt; constructor will add an element named &lt;var&gt;polynomial&lt;/var&gt; to the object struct, the &lt;code&gt;@FIRfilter&lt;/code&gt; just initializes a struct with a dummy field &lt;var&gt;polynomial&lt;/var&gt; which will later be overwritten.</source>
          <target state="translated">前と同様に、先頭のコメントはクラスコンストラクターのドキュメントを提供します。このコンストラクターは多項式クラスコンストラクターに非常に似ていますが、多項式オブジェクトが &lt;code&gt;class&lt;/code&gt; 関数の3番目の引数として渡され、 &lt;code&gt;FIRfilter&lt;/code&gt; クラスが多項式クラスから派生することをOctaveに伝えます。 FIRフィルタークラス自体にはデータフィールドはありませんが、 &lt;code&gt;class&lt;/code&gt; 関数に構造体を提供する必要があります。ことを考えると &lt;code&gt;@polynomial&lt;/code&gt; コンストラクタは、名前の要素を追加します &lt;var&gt;polynomial&lt;/var&gt; オブジェクト構造体への、 &lt;code&gt;@FIRfilter&lt;/code&gt; はちょうどダミーフィールドを持つ構造体を初期化 &lt;var&gt;polynomial&lt;/var&gt; 後に上書きされます。</target>
        </trans-unit>
        <trans-unit id="ef77266db1a7e956b160d5a034980e268cc5d556" translate="yes" xml:space="preserve">
          <source>As can be seen in the example:</source>
          <target state="translated">例を見てもわかるように</target>
        </trans-unit>
        <trans-unit id="bb51504a0135ec8118149cf2a323900588425f5a" translate="yes" xml:space="preserve">
          <source>As can be seen, floating point values are rounded to the nearest integer when converted.</source>
          <target state="translated">このように、浮動小数点値は変換時に最も近い整数に丸められます。</target>
        </trans-unit>
        <trans-unit id="951e6deb900be2bc2c48a839c097a70a85f60b8a" translate="yes" xml:space="preserve">
          <source>As can be seen, the &lt;a href=&quot;object-sizes#XREFsize&quot;&gt;size&lt;/a&gt; function also works for cell arrays. As do other functions describing the size of an object, such as &lt;a href=&quot;object-sizes#XREFlength&quot;&gt;length&lt;/a&gt;, &lt;a href=&quot;object-sizes#XREFnumel&quot;&gt;numel&lt;/a&gt;, &lt;a href=&quot;object-sizes#XREFrows&quot;&gt;rows&lt;/a&gt;, and &lt;a href=&quot;object-sizes#XREFcolumns&quot;&gt;columns&lt;/a&gt;.</source>
          <target state="translated">見てわかるように、&lt;a href=&quot;object-sizes#XREFsize&quot;&gt;サイズ&lt;/a&gt;関数はセル配列に対しても機能します。などのようなオブジェクトの大きさを説明する他の機能、実行&lt;a href=&quot;object-sizes#XREFlength&quot;&gt;長さ&lt;/a&gt;、&lt;a href=&quot;object-sizes#XREFnumel&quot;&gt;numelの&lt;/a&gt;、&lt;a href=&quot;object-sizes#XREFrows&quot;&gt;行&lt;/a&gt;、および&lt;a href=&quot;object-sizes#XREFcolumns&quot;&gt;列を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8ad090857abf167623bfedd4c309920b078b23d1" translate="yes" xml:space="preserve">
          <source>As discussed in the chapter on Sparse Matrices, the values of the sparse matrix are stored in increasing column-major ordering. Although the data passed by the user need not respect this requirement, pre-sorting the data will significantly speed up creation of the sparse matrix.</source>
          <target state="translated">疎行列の章で議論されているように,疎行列の値は,カラム-メジャーの順序を増やして格納されます.ユーザから渡されたデータはこの条件を満たす必要はありませんが,データを事前にソートすることで,疎な行列の作成を大幅に高速化することができます.</target>
        </trans-unit>
        <trans-unit id="b05f183977f05cc10b2363b5caf182097847fbac" translate="yes" xml:space="preserve">
          <source>As for struct arrays and numerical arrays, the empty matrix &amp;lsquo;</source>
          <target state="translated">構造体配列と数値配列については、空の行列 '</target>
        </trans-unit>
        <trans-unit id="5515685ad20e9e32a72430b92df394f9069c45d3" translate="yes" xml:space="preserve">
          <source>As has been already said, diagonal and permutation matrices make it possible to use efficient algorithms while preserving natural linear algebra syntax. This section describes in detail the operations that are treated specially when performed on these special matrix objects.</source>
          <target state="translated">すでに述べたように、対角行列と順列行列は、自然な線形代数の構文を維持しつつ、効率的なアルゴリズムを使用することを可能にします。ここでは、これらの特殊な行列オブジェクトに対して実行されるときに特別に扱われる操作について詳しく説明します。</target>
        </trans-unit>
        <trans-unit id="8563818455d8e7fee883f075fb938f0a421a6fe6" translate="yes" xml:space="preserve">
          <source>As has been mentioned above (see &lt;a href=&quot;indexing-cell-arrays#Indexing-Cell-Arrays&quot;&gt;Indexing Cell Arrays&lt;/a&gt;), elements of a cell array can be extracted into a comma separated list with the &lt;code&gt;{&lt;/code&gt; and &lt;code&gt;}&lt;/code&gt; operators. By surrounding this list with &lt;code&gt;[&lt;/code&gt; and &lt;code&gt;]&lt;/code&gt;, it can be concatenated into an array. For example:</source>
          <target state="translated">上記のように（&lt;a href=&quot;indexing-cell-arrays#Indexing-Cell-Arrays&quot;&gt;セル配列のインデックス付けを&lt;/a&gt;参照）、セル配列の要素は、 &lt;code&gt;{&lt;/code&gt; および &lt;code&gt;}&lt;/code&gt; 演算子を使用して、コンマ区切りのリストに抽出できます。このリストを &lt;code&gt;[&lt;/code&gt; および &lt;code&gt;]&lt;/code&gt; で囲むことで、配列に連結できます。例えば：</target>
        </trans-unit>
        <trans-unit id="d8065d12669ae3cf310f671a0e8017f4d4d84ca5" translate="yes" xml:space="preserve">
          <source>As in form 2 above, but allows ordering of generalized eigenpairs for, e.g., solution of discrete time algebraic Riccati equations. Form 3 is not available for complex matrices, and does not compute the generalized eigenvectors &lt;var&gt;V&lt;/var&gt;, &lt;var&gt;W&lt;/var&gt;, nor the orthogonal matrix &lt;var&gt;Q&lt;/var&gt;.</source>
          <target state="translated">上記の形式2と同じですが、たとえば、離散時間代数リカッチ方程式の解の一般化された固有ペアの順序付けを許可します。フォーム3は、複雑な行列には使用できず、一般化固有ベクトル &lt;var&gt;V&lt;/var&gt; 、 &lt;var&gt;W&lt;/var&gt; 、および直交行列 &lt;var&gt;Q&lt;/var&gt; を計算しません。</target>
        </trans-unit>
        <trans-unit id="8109571f660c3a1b3b14c6ffc15c030649b059cd" translate="yes" xml:space="preserve">
          <source>As mentioned before, method and constructor parameters are converted automatically between Octave and Java types, if appropriate. For functions this is also true with return values, whereas for constructors this is not.</source>
          <target state="translated">前述したように,メソッドとコンストラクタのパラメータは,適切な場合には,Octave型とJava型の間で自動的に変換されます。関数については,これは戻り値についても同様ですが,コンストラクタについてはそうではありません。</target>
        </trans-unit>
        <trans-unit id="83ad02a5a78c66e6c9c4352b3dace5b9a3aab261" translate="yes" xml:space="preserve">
          <source>As mex-files do not make the distinction between single and double quoted strings that Octave does, there is perhaps less complexity in the use of strings and character matrices. An example of their use that parallels the demo in</source>
          <target state="translated">mex-filesは、Octaveが行うシングルとダブル引用符で囲まれた文字列の区別をしないように、文字列と文字列行列の使用には、おそらくあまり複雑ではありません。のデモに類似したそれらの使用例があります。</target>
        </trans-unit>
        <trans-unit id="3989ecc58210427e176a5c4bca0e9ce6297d4176" translate="yes" xml:space="preserve">
          <source>As run-time measurement of the algorithm can be expensive, this is a compromise where &lt;code&gt;&quot;measure&quot;&lt;/code&gt; is used for transforms up to the size of 8192 and beyond that the &lt;code&gt;&quot;estimate&quot;&lt;/code&gt; method is used.</source>
          <target state="translated">アルゴリズムの実行時測定は高価になる可能性があるため、これは &lt;code&gt;&quot;measure&quot;&lt;/code&gt; が8192のサイズまでの変換に使用され、 &lt;code&gt;&quot;estimate&quot;&lt;/code&gt; メソッドが使用される場合を超える妥協です。</target>
        </trans-unit>
        <trans-unit id="5b971e6a2999aebf3e2ceb0c7d0b5ccbfc39ee02" translate="yes" xml:space="preserve">
          <source>As shown in see &lt;a href=&quot;basic-usage-of-cell-arrays#Basic-Usage-of-Cell-Arrays&quot;&gt;Basic Usage of Cell Arrays&lt;/a&gt; elements can be extracted from cell arrays using the &amp;lsquo;</source>
          <target state="translated">に示すように&lt;a href=&quot;basic-usage-of-cell-arrays#Basic-Usage-of-Cell-Arrays&quot;&gt;、セル配列の基本的な使用法は&lt;/a&gt;、 'を使用してセル配列から要素を抽出できます。</target>
        </trans-unit>
        <trans-unit id="a1344418f2df1ee3d5e1b95eda82961e19d5fd03" translate="yes" xml:space="preserve">
          <source>As the example shows, a variable may be declared persistent using a &lt;code&gt;persistent&lt;/code&gt; declaration statement. The following statements are all persistent declarations.</source>
          <target state="translated">例が示すように、変数は &lt;code&gt;persistent&lt;/code&gt; 宣言ステートメントを使用して永続宣言できます。次のステートメントはすべて永続的な宣言です。</target>
        </trans-unit>
        <trans-unit id="52ff63ef2fe86f645fff04de5bf44d5bb07a7b55" translate="yes" xml:space="preserve">
          <source>As the matrix &lt;var&gt;s&lt;/var&gt; is symmetric indefinite it can be factorized with &lt;code&gt;lu&lt;/code&gt;, and the minimum norm solution can therefore be found without the need for a &lt;code&gt;qr&lt;/code&gt; factorization. As the residual error will be &lt;code&gt;zeros (&lt;var&gt;m&lt;/var&gt;, &lt;var&gt;m&lt;/var&gt;)&lt;/code&gt; for underdetermined problems, and example can be</source>
          <target state="translated">行列 &lt;var&gt;s&lt;/var&gt; は不定対称であるため、 &lt;code&gt;lu&lt;/code&gt; で因数分解でき、 &lt;code&gt;qr&lt;/code&gt; 因数分解を必要とせずに最小ノルム解を見つけることができます。残差エラーは、未決定の問題の場合は &lt;code&gt;zeros (&lt;var&gt;m&lt;/var&gt;, &lt;var&gt;m&lt;/var&gt;)&lt;/code&gt; ため、例は次のようになります。</target>
        </trans-unit>
        <trans-unit id="e5fed57584402eae9a5ca127620d2ea585be8c82" translate="yes" xml:space="preserve">
          <source>As the maximum value that can be represented by a number is important for bit manipulation, particularly when forming masks, Octave supplies two utility functions: &lt;code&gt;flintmax&lt;/code&gt; for floating point integers, and &lt;code&gt;intmax&lt;/code&gt; for integer objects (&lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, etc.).</source>
          <target state="translated">：数値で表すことができる最大値は、ビット操作のために重要であるようにマスクを形成する際に、特に、オクターブは、二つのユーティリティ関数供給する &lt;code&gt;flintmax&lt;/code&gt; 浮動小数点整数の、および &lt;code&gt;intmax&lt;/code&gt; Integerオブジェクト（のため &lt;code&gt;uint8&lt;/code&gt; 、 &lt;code&gt;int64&lt;/code&gt; 等）。</target>
        </trans-unit>
        <trans-unit id="004a63bcbd1917bb95c20299c83a11a6f5543261" translate="yes" xml:space="preserve">
          <source>As with all other specific &lt;code&gt;end&lt;/code&gt; keywords, &lt;code&gt;endswitch&lt;/code&gt; may be replaced by &lt;code&gt;end&lt;/code&gt;, but you can get better diagnostics if you use the specific forms.</source>
          <target state="translated">他のすべての特定の &lt;code&gt;end&lt;/code&gt; キーワードと &lt;code&gt;endswitch&lt;/code&gt; 、endswitchは &lt;code&gt;end&lt;/code&gt; に置き換えることができますが、特定の形式を使用すると、より良い診断を得ることができます。</target>
        </trans-unit>
        <trans-unit id="7beeea040a3fdcaf58f04dd8cf4a4b4bad772bc9" translate="yes" xml:space="preserve">
          <source>As with numerical arrays several elements of a cell array can be extracted by indexing with a vector of indexes</source>
          <target state="translated">数値配列と同様に,セル配列のいくつかの要素は,インデックスのベクトルを用いてインデックスを作成することで抽出することができます.</target>
        </trans-unit>
        <trans-unit id="30037aa3f29274ac3c5a68a87b1c28efd3ffd30d" translate="yes" xml:space="preserve">
          <source>As with subfunctions, only the first nested function in a file may be called from the outside. Inside a function the rules are more complicated. In general a nested function may call:</source>
          <target state="translated">サブ関数と同様に、ファイル内の最初の入れ子になっている関数だけが外部から呼び出すことができます。関数の内部では、ルールはより複雑になります。一般的には、入れ子になった関数は</target>
        </trans-unit>
        <trans-unit id="2911d4f8ac8d2b9cc855ef63de94b8204fe9e01b" translate="yes" xml:space="preserve">
          <source>As with the &amp;lsquo;</source>
          <target state="translated">と同様に</target>
        </trans-unit>
        <trans-unit id="6b4ffb649f660d620e5f4267e473537468861ee4" translate="yes" xml:space="preserve">
          <source>As you can see in the table below, now we have both profiles mixed together.</source>
          <target state="translated">下の表にあるように、今は両方のプロファイルが混在しています。</target>
        </trans-unit>
        <trans-unit id="ec2350003bc172557bf248c9cdfb5600698542b9" translate="yes" xml:space="preserve">
          <source>Ask the user a yes-or-no question.</source>
          <target state="translated">ユーザーにイエスかノーかの質問をしてください。</target>
        </trans-unit>
        <trans-unit id="531353464a67c31ead2961c722aaed6b017db968" translate="yes" xml:space="preserve">
          <source>Aspect Ratio</source>
          <target state="translated">アスペクト比</target>
        </trans-unit>
        <trans-unit id="a306c153c190c90e2673adae89cd26c750e56db2" translate="yes" xml:space="preserve">
          <source>Assign &lt;var&gt;value&lt;/var&gt; to &lt;var&gt;varname&lt;/var&gt; in context &lt;var&gt;context&lt;/var&gt;, which may be either &lt;code&gt;&quot;base&quot;&lt;/code&gt; or &lt;code&gt;&quot;caller&quot;&lt;/code&gt;.</source>
          <target state="translated">コンテキスト &lt;var&gt;context&lt;/var&gt; の &lt;var&gt;varname&lt;/var&gt; に &lt;var&gt;value&lt;/var&gt; を割り当てます。これは、 &lt;code&gt;&quot;base&quot;&lt;/code&gt; または &lt;code&gt;&quot;caller&quot;&lt;/code&gt; いずれかです。</target>
        </trans-unit>
        <trans-unit id="3fd686cd9d6a1f044e1fb6823c1198d0fd31e1c0" translate="yes" xml:space="preserve">
          <source>Assign the next lowest unused integer as the Figure number.</source>
          <target state="translated">次に低い未使用の整数を図番に代入します。</target>
        </trans-unit>
        <trans-unit id="ca57d608b20067757de8d38388702587d3d125a7" translate="yes" xml:space="preserve">
          <source>Assigning an empty matrix &amp;lsquo;</source>
          <target state="translated">空の行列の割り当て '</target>
        </trans-unit>
        <trans-unit id="189a360acd54a816d97440bd5b81415301add5c9" translate="yes" xml:space="preserve">
          <source>Assigning an object of that class to another variable essentially creates a new object:</source>
          <target state="translated">そのクラスのオブジェクトを別の変数に代入すると、本質的に新しいオブジェクトが作成されます。</target>
        </trans-unit>
        <trans-unit id="6cd6e2e234bfd5cae202f1db73fd1b75ebb021d4" translate="yes" xml:space="preserve">
          <source>Assignment Expressions</source>
          <target state="translated">課題表現</target>
        </trans-unit>
        <trans-unit id="cc0f1fc15c1c09c7dd76f2ac6a4133ca9c6cebce" translate="yes" xml:space="preserve">
          <source>Assignment Ops</source>
          <target state="translated">アサインメントオペレーション</target>
        </trans-unit>
        <trans-unit id="03d091b0430c54456baa7987eab19ac12846440b" translate="yes" xml:space="preserve">
          <source>Assignment of a scalar to an indexed matrix sets all of the elements that are referenced by the indices to the scalar value. For example, if &lt;code&gt;a&lt;/code&gt; is a matrix with at least two columns,</source>
          <target state="translated">インデックス付き行列へのスカラーの割り当ては、インデックスによって参照されるすべての要素をスカラー値に設定します。たとえば、 &lt;code&gt;a&lt;/code&gt; が2列以上の行列の場合、</target>
        </trans-unit>
        <trans-unit id="f2d1ffae68fd99613a8c968ea146c836d4a790ae" translate="yes" xml:space="preserve">
          <source>Assignments can store string values also. For example, the following expression would store the value &lt;code&gt;&quot;this food is good&quot;&lt;/code&gt; in the variable &lt;code&gt;message&lt;/code&gt;:</source>
          <target state="translated">割り当てには文字列値も格納できます。たとえば、次の式は、変数 &lt;code&gt;&quot;this food is good&quot;&lt;/code&gt; を変数 &lt;code&gt;message&lt;/code&gt; に格納します。</target>
        </trans-unit>
        <trans-unit id="7540b4571015a49362deccfc856f6dcba31b5caa" translate="yes" xml:space="preserve">
          <source>Assume &lt;var&gt;D&lt;/var&gt; is a diagonal matrix. If &lt;var&gt;M&lt;/var&gt; is a full matrix, then &lt;code&gt;D*M&lt;/code&gt; will scale the rows of &lt;var&gt;M&lt;/var&gt;. That means, if &lt;code&gt;S = D*M&lt;/code&gt;, then for each pair of indices i,j it holds</source>
          <target state="translated">&lt;var&gt;D&lt;/var&gt; が対角行列であると仮定します。場合 &lt;var&gt;M&lt;/var&gt; がフル行列で、次に &lt;code&gt;D*M&lt;/code&gt; は、列スケーリングます &lt;var&gt;M&lt;/var&gt; を。つまり、 &lt;code&gt;S = D*M&lt;/code&gt; 場合、インデックスi、jの各ペアに対して、</target>
        </trans-unit>
        <trans-unit id="3b7b9da2443e1642f6cb527f563ed76edd29fbbc" translate="yes" xml:space="preserve">
          <source>Assume creation of a MEX file. Set the default output extension to</source>
          <target state="translated">MEXファイルの作成を想定しています。デフォルトの出力拡張子を</target>
        </trans-unit>
        <trans-unit id="c65fbe94af9801d238e23d6ca5e58cfd5ae7c1a3" translate="yes" xml:space="preserve">
          <source>Assume we are creating a MEX file. Set the default output extension to &quot;.mex&quot;.</source>
          <target state="translated">mexファイルを作成しているとします。デフォルトの出力拡張子を&quot;.mex &quot;に設定します。</target>
        </trans-unit>
        <trans-unit id="ec9215947e20c196f3797afb25e4e824ce1f8a38" translate="yes" xml:space="preserve">
          <source>Assuming &lt;var&gt;data&lt;/var&gt; is the structure with profile data returned by &lt;code&gt;profile (&lt;code&gt;&quot;info&quot;&lt;/code&gt;)&lt;/code&gt;, this command opens an interactive prompt that can be used to explore the call-tree. Type</source>
          <target state="translated">&lt;var&gt;data&lt;/var&gt; が &lt;code&gt;profile (&lt;code&gt;&quot;info&quot;&lt;/code&gt;)&lt;/code&gt; によって返されるプロファイルデータの構造であると仮定すると、このコマンドは、呼び出しツリーを探索するために使用できるインタラクティブプロンプトを開きます。タイプ</target>
        </trans-unit>
        <trans-unit id="f2ebba349727e4c4f6b8ebc85273cbce8485acce" translate="yes" xml:space="preserve">
          <source>Assuming a package is available in the file</source>
          <target state="translated">ファイル内にパッケージがあると仮定して</target>
        </trans-unit>
        <trans-unit id="907707adf71d7f167381e8aa25ed55b4a31f509f" translate="yes" xml:space="preserve">
          <source>Assuming one of the two versions is in xcorr_orig, this would compare their speed and their output values. Note that the FFT version is not exact, so one must specify an acceptable tolerance on the comparison &lt;code&gt;100*eps&lt;/code&gt;. In this case, the comparison should be computed relatively, as &lt;code&gt;abs ((&lt;var&gt;x&lt;/var&gt; - &lt;var&gt;y&lt;/var&gt;) ./ &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt; rather than absolutely as &lt;code&gt;abs (&lt;var&gt;x&lt;/var&gt; - &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="translated">2つのバージョンのうちの1つがxcorr_origにあると仮定すると、これはそれらの速度と出力値を比較します。FFTのバージョンは正確ではないので、 &lt;code&gt;100*eps&lt;/code&gt; の比較で許容範囲を指定する必要があることに注意してください。この場合、比較は絶対的に &lt;code&gt;abs (&lt;var&gt;x&lt;/var&gt; - &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt; &lt;var&gt;x&lt;/var&gt; - &lt;var&gt;y&lt;/var&gt; ）としてではなく、 &lt;code&gt;abs ((&lt;var&gt;x&lt;/var&gt; - &lt;var&gt;y&lt;/var&gt;) ./ &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt; として相対的に計算する必要があります。</target>
        </trans-unit>
        <trans-unit id="659d6578c4bbe51b3949d9acadfb353fbc527198" translate="yes" xml:space="preserve">
          <source>Asymptotic expansions of integrals</source>
          <target state="translated">積分の漸近展開</target>
        </trans-unit>
        <trans-unit id="489e70109e67cf9da0e282567e7dfa75ecfec0d5" translate="yes" xml:space="preserve">
          <source>Asynchronous I/O.</source>
          <target state="translated">非同期I/O。</target>
        </trans-unit>
        <trans-unit id="dc391cc3f13c2d1ba43b1d05210efcc2205b3c63" translate="yes" xml:space="preserve">
          <source>At boundary points a linear extrapolation is applied. Interior points are calculated with the first approximation of the numerical gradient</source>
          <target state="translated">境界点では線形外挿が適用されます。内側の点は、数値勾配の最初の近似を用いて計算されます.</target>
        </trans-unit>
        <trans-unit id="e09e4cfa5c6d67d985bdecbc93e768bedc36c136" translate="yes" xml:space="preserve">
          <source>At the Octave prompt, you can recall, edit, and reissue previous commands using Emacs- or vi-style editing commands. The default keybindings use Emacs-style commands. For example, to recall the previous command, press</source>
          <target state="translated">Octaveプロンプトでは、Emacs形式またはvi形式の編集コマンドを使用して、以前のコマンドを呼び出し、編集し、再発行することができます。デフォルトのキーバインドはEmacsスタイルのコマンドを使用します。例えば,前のコマンドを呼び出すには</target>
        </trans-unit>
        <trans-unit id="1ba0ebd253393b46f7f37dd3cb7b73c7ba2bd295" translate="yes" xml:space="preserve">
          <source>Attempt to do completion on the text before the cursor. Octave can complete the names of commands and variables.</source>
          <target state="translated">カーソル前のテキストの補完を試みます。Octaveはコマンドや変数の名前を補完することができます。</target>
        </trans-unit>
        <trans-unit id="bc9a688c50df2134fab59236d1d7d6111fd51b6d" translate="yes" xml:space="preserve">
          <source>Attr</source>
          <target state="translated">Attr</target>
        </trans-unit>
        <trans-unit id="e71a2208ed5bc70195d4f4557e27c46db0f46753" translate="yes" xml:space="preserve">
          <source>Attributes of the listed variable. Possible attributes are:</source>
          <target state="translated">リストされた変数の属性。可能な属性は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="6112bb3d4f536eeddaffe62936110e516b6dc2d4" translate="yes" xml:space="preserve">
          <source>Audio Data Processing</source>
          <target state="translated">オーディオデータ処理</target>
        </trans-unit>
        <trans-unit id="d0173f060cb84f63aa0413b729d6ffc2add577da" translate="yes" xml:space="preserve">
          <source>Audio Device Information</source>
          <target state="translated">オーディオデバイス情報</target>
        </trans-unit>
        <trans-unit id="080f79316949a9e07dc0883ac20f46acd6e0a11f" translate="yes" xml:space="preserve">
          <source>Audio File Utilities</source>
          <target state="translated">オーディオファイルユーティリティ</target>
        </trans-unit>
        <trans-unit id="d1a38ff5778dfebcee2d83b7a439ca8af36cf609" translate="yes" xml:space="preserve">
          <source>Audio Player</source>
          <target state="translated">オーディオプレーヤー</target>
        </trans-unit>
        <trans-unit id="71d679f85c0c8c94a04689538a1ebabad48f5f78" translate="yes" xml:space="preserve">
          <source>Audio Processing</source>
          <target state="translated">オーディオ処理</target>
        </trans-unit>
        <trans-unit id="b617b95518631fb1c6bd28a5dbb483e86328deed" translate="yes" xml:space="preserve">
          <source>Audio Recorder</source>
          <target state="translated">オーディオレコーダー</target>
        </trans-unit>
        <trans-unit id="090dd204be937031f0583112c2868975f6ec34fb" translate="yes" xml:space="preserve">
          <source>Audio bit rate. Unused, only present for compatibility with &lt;small&gt;MATLAB&lt;/small&gt;.</source>
          <target state="translated">オーディオビットレート。未使用&lt;small&gt;。MATLAB&lt;/small&gt;との互換性のためにのみ存在します。</target>
        </trans-unit>
        <trans-unit id="966e1c01b68c2a16eb1aa2d30f83acb9d15ba557" translate="yes" xml:space="preserve">
          <source>Audio compression method. Unused, only present for compatibility with &lt;small&gt;MATLAB&lt;/small&gt;.</source>
          <target state="translated">オーディオ圧縮方式。未使用&lt;small&gt;。MATLAB&lt;/small&gt;との互換性のためにのみ存在します。</target>
        </trans-unit>
        <trans-unit id="b04aeef845e3861638e504adcb4f668cf12abe2a" translate="yes" xml:space="preserve">
          <source>AutoCAD</source>
          <target state="translated">AutoCAD</target>
        </trans-unit>
        <trans-unit id="b01b9fec9455ce34ab215dbec35d30eb12df4dcf" translate="yes" xml:space="preserve">
          <source>AutoScaling</source>
          <target state="translated">AutoScaling</target>
        </trans-unit>
        <trans-unit id="b7c5b72aa8a6927d492531b41a0e0c02361f3f2e" translate="yes" xml:space="preserve">
          <source>Autoconf</source>
          <target state="translated">Autoconf</target>
        </trans-unit>
        <trans-unit id="5c63f189bfa4620322275fe623ef650118078ebf" translate="yes" xml:space="preserve">
          <source>Autoload function A function that is marked as autoloaded with See &lt;a href=&quot;overloading-and-autoloading#XREFautoload&quot;&gt;autoload&lt;/a&gt;.</source>
          <target state="translated">オートロード機能「&lt;a href=&quot;overloading-and-autoloading#XREFautoload&quot;&gt;オート&lt;/a&gt;ロード」を参照して、オートロードとしてマークされている機能。</target>
        </trans-unit>
        <trans-unit id="c3421d4a78809d07993dde32b7c98e16e2ccaec4" translate="yes" xml:space="preserve">
          <source>Automake</source>
          <target state="translated">Automake</target>
        </trans-unit>
        <trans-unit id="d7ff22d92e3a987c11769ecfc151156e0cecc1e3" translate="yes" xml:space="preserve">
          <source>Automatic Variable: ans</source>
          <target state="translated">自動変数:ans</target>
        </trans-unit>
        <trans-unit id="fd5bc0d1730bfbb7199bbd6f0496869d55478ae4" translate="yes" xml:space="preserve">
          <source>Automatic variable. An automatic variable is one created by the interpreter, for example &lt;code&gt;argn&lt;/code&gt;.</source>
          <target state="translated">自動変数。自動変数は、インタープリターによって作成された変数です（例： &lt;code&gt;argn&lt;/code&gt; )。</target>
        </trans-unit>
        <trans-unit id="83e2fa299a5fe4eca74b46c1ef20ea54fac2731a" translate="yes" xml:space="preserve">
          <source>Available commands:</source>
          <target state="translated">利用可能なコマンド。</target>
        </trans-unit>
        <trans-unit id="50394b9343099c6412f9782fe8989b9e0006bf6a" translate="yes" xml:space="preserve">
          <source>Avoid calling &lt;code&gt;eval&lt;/code&gt; or &lt;code&gt;feval&lt;/code&gt; excessively. Parsing input or looking up the name of a function in the symbol table are relatively expensive operations.</source>
          <target state="translated">&lt;code&gt;eval&lt;/code&gt; または &lt;code&gt;feval&lt;/code&gt; を過度に呼び出すことは避けてください。入力の解析またはシンボルテーブル内の関数の名前の検索は、比較的負荷の高い操作です。</target>
        </trans-unit>
        <trans-unit id="ff8112ba81d3bb955ad3f67e3515c7357c915ffc" translate="yes" xml:space="preserve">
          <source>Avoid computing costly intermediate results multiple times. Octave currently does not eliminate common subexpressions. Also, certain internal computation results are cached for variables. For instance, if a matrix variable is used multiple times as an index, checking the indices (and internal conversion to integers) is only done once.</source>
          <target state="translated">コストのかかる中間結果を複数回計算することを避けます。Octaveは現在のところ,一般的な副式を排除していません。また,ある種の内部計算結果は,変数に対してキャッシュされます。例えば,行列変数がインデックスとして複数回使用される場合,インデックスのチェック(および内部の整数への変換)は一度だけ行われます。</target>
        </trans-unit>
        <trans-unit id="472cff45d0b0c70e9519038fcbd6de38a9f430c9" translate="yes" xml:space="preserve">
          <source>Avoid deep recursion. Function calls to m-file functions carry a relatively significant overhead, so rewriting a recursion as a loop often helps. Also, note that the maximum level of recursion is limited.</source>
          <target state="translated">深い再帰を避ける。m-file 関数への関数呼び出しは比較的大きなオーバーヘッドを伴うため、再帰をループとして書き換えることはしばしば助けになります。また、再帰の最大レベルには制限があることにも注意してください。</target>
        </trans-unit>
        <trans-unit id="0556ca1d709248ee926a8bec8dc3258822f05cca" translate="yes" xml:space="preserve">
          <source>Avoid resizing matrices unnecessarily. When building a single result matrix from a series of calculations, set the size of the result matrix first, then insert values into it. Write</source>
          <target state="translated">行列のサイズを不必要に変更しないようにします。一連の計算から単一の結果行列を作成する場合、最初に結果行列のサイズを設定してから値を挿入します。書いてください。</target>
        </trans-unit>
        <trans-unit id="c103ede19b013bb4a32e10aaa64c58a55fa93a1e" translate="yes" xml:space="preserve">
          <source>Axes NextPlot</source>
          <target state="translated">アクスNextPlot</target>
        </trans-unit>
        <trans-unit id="7de316d49deb5ccab36aebd65a0be58a16c62a1a" translate="yes" xml:space="preserve">
          <source>Axes Properties</source>
          <target state="translated">アクシーズプロパティ</target>
        </trans-unit>
        <trans-unit id="0dc0548be57f1a671655372582948b6ecb8792e2" translate="yes" xml:space="preserve">
          <source>Axis Configuration</source>
          <target state="translated">軸構成</target>
        </trans-unit>
        <trans-unit id="dd3b5cebd43f7c9a1446a99cde28692621195356" translate="yes" xml:space="preserve">
          <source>A~spaces.txt</source>
          <target state="translated">A~spaces.txt</target>
        </trans-unit>
        <trans-unit id="ae4f281df5a5d0ff3cad6371f76d5c29b6d953ec" translate="yes" xml:space="preserve">
          <source>B</source>
          <target state="translated">B</target>
        </trans-unit>
        <trans-unit id="9fc88ae6272f67a869d2dbb01436ad99b0ba5b02" translate="yes" xml:space="preserve">
          <source>B = rescale (&amp;hellip;, &quot;inputmax&quot;, inmax)</source>
          <target state="translated">B =再スケール（&amp;hellip;、 &quot;inputmax&quot;、inmax）</target>
        </trans-unit>
        <trans-unit id="3359712613ab7d5863c2affed6709d9b7e9fd783" translate="yes" xml:space="preserve">
          <source>B = rescale (&amp;hellip;, &quot;inputmin&quot;, inmin)</source>
          <target state="translated">B =再スケール（&amp;hellip;、 &quot;inputmin&quot;、inmin）</target>
        </trans-unit>
        <trans-unit id="c463d6c5fd9704a3bb08ecbeb44cdcee883745ab" translate="yes" xml:space="preserve">
          <source>B = rescale (A)</source>
          <target state="translated">B=リスケール(A</target>
        </trans-unit>
        <trans-unit id="10685ffbb9b9ccc7d09ac0ef06cdb0ab690e1ec3" translate="yes" xml:space="preserve">
          <source>B = rescale (A, l, u)</source>
          <target state="translated">B=rescale (A,l,u)</target>
        </trans-unit>
        <trans-unit id="d2c70185da8e36a4190565c01ff3c846d72ed5de" translate="yes" xml:space="preserve">
          <source>B = spdiags (A)</source>
          <target state="translated">B=SPDIAGS(A</target>
        </trans-unit>
        <trans-unit id="a08d8c4286c3416e30d8afcaa554bc33cf5bcc2e" translate="yes" xml:space="preserve">
          <source>B = spdiags (A, d)</source>
          <target state="translated">B=spdiags(A,d</target>
        </trans-unit>
        <trans-unit id="ffdd9097b8d95cfcaa4687dc68aba4f8af1b5829" translate="yes" xml:space="preserve">
          <source>B.1 Test Functions</source>
          <target state="translated">B.1 テスト機能</target>
        </trans-unit>
        <trans-unit id="b6d102d7fc931aaf9968a1bf73fea9155bd264c7" translate="yes" xml:space="preserve">
          <source>B.2 Demonstration Functions</source>
          <target state="translated">B.2 デモンストレーション機能</target>
        </trans-unit>
        <trans-unit id="fcdb4dba5c8e978271b1486512050573279d7d90" translate="yes" xml:space="preserve">
          <source>BACKSPACE</source>
          <target state="translated">BACKSPACE</target>
        </trans-unit>
        <trans-unit id="7067ed76949bf39af33598b214b1f9a97c9257df" translate="yes" xml:space="preserve">
          <source>BDemonstration Functions</source>
          <target state="translated">BDデモ機能</target>
        </trans-unit>
        <trans-unit id="c7243d04c977df0309eee7b50ccaddc2665154ee" translate="yes" xml:space="preserve">
          <source>BLAS</source>
          <target state="translated">BLAS</target>
        </trans-unit>
        <trans-unit id="62d5aeef9ec51abb2a106e7d794566b651ddbe62" translate="yes" xml:space="preserve">
          <source>BSD-style license without advertising clause.</source>
          <target state="translated">広告条項のないBSDスタイルのライセンス。</target>
        </trans-unit>
        <trans-unit id="4db3729812553d37ad47bfa7e32aa86c887a9a40" translate="yes" xml:space="preserve">
          <source>BTest Functions</source>
          <target state="translated">BTest 関数</target>
        </trans-unit>
        <trans-unit id="726c946b4e4b045dde2893b0fca04a81b3904c76" translate="yes" xml:space="preserve">
          <source>Background Information: This function is called by an ode solver function if it was specified in the &lt;code&gt;&quot;OutputFcn&quot;&lt;/code&gt; property of an options structure created with &lt;code&gt;odeset&lt;/code&gt;. The ode solver will initially call the function with the syntax &lt;code&gt;odeplot ([&lt;var&gt;tfirst&lt;/var&gt;, &lt;var&gt;tlast&lt;/var&gt;], &lt;var&gt;y0&lt;/var&gt;, &quot;init&quot;)&lt;/code&gt;. The function initializes internal variables, creates a new figure window, and sets the x limits of the plot. Subsequently, at each time step during the integration the ode solver calls &lt;code&gt;odeplot (&lt;var&gt;t&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;, [])&lt;/code&gt;. At the end of the solution the ode solver calls &lt;code&gt;odeplot ([], [], &quot;done&quot;)&lt;/code&gt; so that odeplot can perform any clean-up actions required.</source>
          <target state="translated">背景情報：この関数は、 &lt;code&gt;odeset&lt;/code&gt; で作成されたオプション構造体の &lt;code&gt;&quot;OutputFcn&quot;&lt;/code&gt; プロパティで指定されている場合、odeソルバー関数によって呼び出されます。 odeソルバーは、最初に &lt;code&gt;odeplot ([&lt;var&gt;tfirst&lt;/var&gt;, &lt;var&gt;tlast&lt;/var&gt;], &lt;var&gt;y0&lt;/var&gt;, &quot;init&quot;)&lt;/code&gt; &lt;var&gt;tfirst&lt;/var&gt; 、 &lt;var&gt;tlast&lt;/var&gt; ]、 &lt;var&gt;y0&lt;/var&gt; 、 &quot;init&quot;）という構文で関数を呼び出します。この関数は、内部変数を初期化し、新しいFigureウィンドウを作成し、プロットのx範囲を設定します。続いて、積分中の各タイムステップで、odeソルバーは &lt;code&gt;odeplot (&lt;var&gt;t&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;, [])&lt;/code&gt; &lt;var&gt;t&lt;/var&gt; 、 &lt;var&gt;y&lt;/var&gt; 、[]）を呼び出します。ソリューションの最後に、odeソルバーは &lt;code&gt;odeplot ([], [], &quot;done&quot;)&lt;/code&gt; 呼び出します odeplotが必要なクリーンアップアクションを実行できるようにします。</target>
        </trans-unit>
        <trans-unit id="1ecc6ca439d6c5e58174068ccc0bd9b416174b53" translate="yes" xml:space="preserve">
          <source>Background: A matrix is Hermitian if the complex conjugate transpose of the matrix is equal to the original matrix: &lt;code&gt;&lt;var&gt;A&lt;/var&gt;&amp;nbsp;==&amp;nbsp;&lt;var&gt;A&lt;/var&gt;'&lt;/code&gt;. If a tolerance is given then the calculation is &lt;code&gt;norm (&lt;var&gt;A&lt;/var&gt; - &lt;var&gt;A&lt;/var&gt;', Inf) / norm (&lt;var&gt;A&lt;/var&gt;, Inf) &amp;lt; &lt;var&gt;tol&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="translated">背景：行列の複素共役転置が元の行列 &lt;code&gt;&lt;var&gt;A&lt;/var&gt;&amp;nbsp;==&amp;nbsp;&lt;var&gt;A&lt;/var&gt;'&lt;/code&gt; と等しい場合、行列はエルミート行列です。許容誤差が指定されている場合、計算は &lt;code&gt;norm (&lt;var&gt;A&lt;/var&gt; - &lt;var&gt;A&lt;/var&gt;', Inf) / norm (&lt;var&gt;A&lt;/var&gt;, Inf) &amp;lt; &lt;var&gt;tol&lt;/var&gt;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="67c3a16132d003dc408b34c6ab620faee5509e26" translate="yes" xml:space="preserve">
          <source>Background: A matrix is symmetric if the transpose of the matrix is equal to the original matrix: &lt;code&gt;&lt;var&gt;A&lt;/var&gt;&amp;nbsp;==&amp;nbsp;&lt;var&gt;A&lt;/var&gt;.'&lt;/code&gt;. If a tolerance is given then symmetry is determined by &lt;code&gt;norm (&lt;var&gt;A&lt;/var&gt; - &lt;var&gt;A&lt;/var&gt;.', Inf) / norm (&lt;var&gt;A&lt;/var&gt;, Inf) &amp;lt; &lt;var&gt;tol&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="translated">背景：行列の転置が元の行列と等しい場合、行列は対称です： &lt;code&gt;&lt;var&gt;A&lt;/var&gt;&amp;nbsp;==&amp;nbsp;&lt;var&gt;A&lt;/var&gt;.'&lt;/code&gt; 。許容誤差が指定されている場合、対称性は &lt;code&gt;norm (&lt;var&gt;A&lt;/var&gt; - &lt;var&gt;A&lt;/var&gt;.', Inf) / norm (&lt;var&gt;A&lt;/var&gt;, Inf) &amp;lt; &lt;var&gt;tol&lt;/var&gt;&lt;/code&gt; によって決定されます。</target>
        </trans-unit>
        <trans-unit id="525fc4c444936301ffe7b85e39191ca3a8af59a9" translate="yes" xml:space="preserve">
          <source>Background: A positive definite matrix has eigenvalues which are all greater than zero. A positive semi-definite matrix has eigenvalues which are all greater than or equal to zero. The matrix &lt;var&gt;A&lt;/var&gt; is very likely to be positive semi-definite if the following two conditions hold for a suitably small tolerance &lt;var&gt;tol&lt;/var&gt;.</source>
          <target state="translated">背景：正定行列には、すべてゼロより大きい固有値があります。正の半定行列には、すべてゼロ以上の固有値があります。次の2つの条件が適切に小さい許容誤差 &lt;var&gt;tol&lt;/var&gt; に当てはまる場合、行列 &lt;var&gt;A&lt;/var&gt; は正の半定値である可能性が非常に高くなります。</target>
        </trans-unit>
        <trans-unit id="2f8b7aa251aa0adb65af89ded753ff22c8abf8b2" translate="yes" xml:space="preserve">
          <source>Background: Array elements can be specified either by a linear index which starts at 1 and runs through the number of elements in the array, or they may be specified with subscripts for the row, column, page, etc. The functions &lt;code&gt;ind2sub&lt;/code&gt; and &lt;code&gt;sub2ind&lt;/code&gt; interconvert between the two forms.</source>
          <target state="translated">背景：配列要素は、1から始まり、配列内の要素の数を実行する線形インデックスによって指定するか、行、列、ページなどの添え字を使用して指定できます。関数 &lt;code&gt;ind2sub&lt;/code&gt; および &lt;code&gt;sub2ind&lt;/code&gt; interconvert 2つのフォームの間。</target>
        </trans-unit>
        <trans-unit id="8a072b76d13bf1b21aef3b62c0c5a52ce4df96e5" translate="yes" xml:space="preserve">
          <source>Background: The QR factorization has applications in the solution of least squares problems</source>
          <target state="translated">背景には以下のようなものがあります。QR因数分解は、最小二乗問題の解法に応用されています。</target>
        </trans-unit>
        <trans-unit id="375e6cef116c18815d1f3cc43298cfb82ef22dc2" translate="yes" xml:space="preserve">
          <source>Backtracking technique option (for MIP only):</source>
          <target state="translated">バックトラックテクニックオプション(MIPのみ)。</target>
        </trans-unit>
        <trans-unit id="9c63fe664ee19ec45f508543d1a17026f2d840be" translate="yes" xml:space="preserve">
          <source>Balance the matrix &lt;var&gt;A&lt;/var&gt; to reduce numerical errors in future calculations.</source>
          <target state="translated">行列 &lt;var&gt;A&lt;/var&gt; のバランスを取り、将来の計算における数値誤差を減らします。</target>
        </trans-unit>
        <trans-unit id="60d394246b3915d97f9bf77cf001892566876bc6" translate="yes" xml:space="preserve">
          <source>Banded matrix with the band size of &lt;var&gt;nl&lt;/var&gt; below the diagonal and &lt;var&gt;nu&lt;/var&gt; above it. If &lt;var&gt;nl&lt;/var&gt; and &lt;var&gt;nu&lt;/var&gt; are 1, then the matrix is tridiagonal and treated with specialized code. In addition the matrix can be marked as probably a positive definite. (Sparse matrices only)</source>
          <target state="translated">対角線の下に &lt;var&gt;nl&lt;/var&gt; 、上に &lt;var&gt;nu&lt;/var&gt; のバンドサイズを持つバンド行列。場合 &lt;var&gt;nl&lt;/var&gt; と &lt;var&gt;nu&lt;/var&gt; 1であり、次いで、マトリックスは三重対角と特殊コードで処理されます。さらに、マトリックスはおそらく正定としてマークできます。（スパース行列のみ）</target>
        </trans-unit>
        <trans-unit id="cf220ef7bb90a13a328a54e14da11c5a5b7eb35c" translate="yes" xml:space="preserve">
          <source>Bar Series</source>
          <target state="translated">バーシリーズ</target>
        </trans-unit>
        <trans-unit id="b28939a2097a9143a4110936db75a6a1b204e4df" translate="yes" xml:space="preserve">
          <source>Bar series objects are created by the &lt;code&gt;bar&lt;/code&gt; or &lt;code&gt;barh&lt;/code&gt; functions. Each &lt;code&gt;hggroup&lt;/code&gt; element contains a single patch object. The properties of the bar series are</source>
          <target state="translated">棒シリーズオブジェクトは、関数 &lt;code&gt;bar&lt;/code&gt; または &lt;code&gt;barh&lt;/code&gt; によって作成されます。各 &lt;code&gt;hggroup&lt;/code&gt; 要素には、単一のpatchオブジェクトが含まれています。棒シリーズの特性は</target>
        </trans-unit>
        <trans-unit id="961bc31035eeda2aab252fceeb567cc8d9b8ef59" translate="yes" xml:space="preserve">
          <source>Barber, C.B., Dobkin, D.P., and Huhdanpaa, H.T.,</source>
          <target state="translated">バーバー、C.B.、ドブキン、D.P.、およびHuhdanpaa、H.T.。</target>
        </trans-unit>
        <trans-unit id="2bce76b8ced092d41b9c4af738e6086a1ffa555e" translate="yes" xml:space="preserve">
          <source>Bars are stacked so that each X value has a single bar composed of multiple segments.</source>
          <target state="translated">棒グラフは、各X値が複数のセグメントで構成された単一の棒グラフを持つように積み重ねられます。</target>
        </trans-unit>
        <trans-unit id="879797c59c373c24d42462664c63c4671c26107b" translate="yes" xml:space="preserve">
          <source>Bars are stacked so that each Y value has a single bar composed of multiple segments.</source>
          <target state="translated">バーは、各Y値が複数のセグメントで構成された単一のバーを持つように積み重ねられます。</target>
        </trans-unit>
        <trans-unit id="e58ccf8eaf93e1479e91be552e6a5c6a5fadedeb" translate="yes" xml:space="preserve">
          <source>Base64 and Binary Data Transmission</source>
          <target state="translated">Base64とバイナリデータ伝送</target>
        </trans-unit>
        <trans-unit id="8de5c4a92b32357c9851e6825f043d685887e0f2" translate="yes" xml:space="preserve">
          <source>Basic Input and Output</source>
          <target state="translated">基本入出力</target>
        </trans-unit>
        <trans-unit id="2d2e27808a28441dbbed0d3390417aa95ef3b5ce" translate="yes" xml:space="preserve">
          <source>Basic Linear Algebra Subroutine library. Accelerated &lt;small&gt;BLAS&lt;/small&gt; libraries such as OpenBLAS (&lt;a href=&quot;https://www.openblas.net/&quot;&gt;https://www.openblas.net/&lt;/a&gt;) or ATLAS (&lt;a href=&quot;http://math-atlas.sourceforge.net&quot;&gt;http://math-atlas.sourceforge.net&lt;/a&gt;) are recommended for best performance. The reference implementation (&lt;a href=&quot;http://www.netlib.org/blas&quot;&gt;http://www.netlib.org/blas&lt;/a&gt;) is slow, unmaintained, and suffers from certain bugs in corner case inputs.</source>
          <target state="translated">基本的な線形代数サブルーチンライブラリ。最高のパフォーマンスを得るには、OpenBLAS（&lt;a href=&quot;https://www.openblas.net/&quot;&gt;https://www.openblas.net/&lt;/a&gt;）またはATLAS（&lt;a href=&quot;http://math-atlas.sourceforge.net&quot;&gt;http://math-atlas.sourceforge.net&lt;/a&gt;）などの高速化された&lt;small&gt;BLAS&lt;/small&gt;ライブラリが推奨されます。リファレンス実装（&lt;a href=&quot;http://www.netlib.org/blas&quot;&gt;http://www.netlib.org/blas&lt;/a&gt;）は遅く、メンテナンスされておらず、コーナーケース入力の特定のバグに悩まされています。</target>
        </trans-unit>
        <trans-unit id="8a00c0a675f6cf3eab4ed98155c65341a29a0926" translate="yes" xml:space="preserve">
          <source>Basic Matrix Functions</source>
          <target state="translated">基本的な行列関数</target>
        </trans-unit>
        <trans-unit id="c998c3676e25ae6bc1531d84a9285f62330786f3" translate="yes" xml:space="preserve">
          <source>Basic Operators and Functions on Sparse Matrices</source>
          <target state="translated">疎行列の基本的な演算子と関数</target>
        </trans-unit>
        <trans-unit id="b2987ea9019eddd834b7476d352eb69a8b1eb45c" translate="yes" xml:space="preserve">
          <source>Basic Statistical Functions</source>
          <target state="translated">基本的な統計関数</target>
        </trans-unit>
        <trans-unit id="41db8258da7fde0c1376c29ef7b86dbb4249ec41" translate="yes" xml:space="preserve">
          <source>Basic Unix system utilities are required for building Octave. All will be available with any modern Unix system and also on Windows with either Cygwin or MinGW and MSYS.</source>
          <target state="translated">Octaveを構築するためには,基本的なUnixシステムユーティリティが必要です。すべてのユーティリティは,最新のUnixシステムで利用可能であり,Cygwin,MinGW,MSYSのいずれかのWindowsでも利用可能です。</target>
        </trans-unit>
        <trans-unit id="b20cbc384159fd820ed034fd3615298ec09f5902" translate="yes" xml:space="preserve">
          <source>Basic Usage</source>
          <target state="translated">基本的な使い方</target>
        </trans-unit>
        <trans-unit id="f28c73652a86f7f4c93d8081035c91de8f764946" translate="yes" xml:space="preserve">
          <source>Basic Usage and Examples</source>
          <target state="translated">基本的な使い方と例文</target>
        </trans-unit>
        <trans-unit id="4581904814b3b721f0fd83a306bff03d8e2f02a9" translate="yes" xml:space="preserve">
          <source>Basic Usage of Cell Arrays</source>
          <target state="translated">セルアレイの基本的な使い方</target>
        </trans-unit>
        <trans-unit id="f8ff45cb27924860bb94b463bdbabcc29c6ecac1" translate="yes" xml:space="preserve">
          <source>Basic Vectorization</source>
          <target state="translated">基本的なベクトル化</target>
        </trans-unit>
        <trans-unit id="eb606240d1882d7b20153d872bcf546ce6bc40bf" translate="yes" xml:space="preserve">
          <source>Basic techniques for code optimization</source>
          <target state="translated">コード最適化のための基本テクニック</target>
        </trans-unit>
        <trans-unit id="8fdc2bc9c7ca828f912becc5b6df272b3ca27c9a" translate="yes" xml:space="preserve">
          <source>Basic text formatting is supported inside sections, see the example given below:</source>
          <target state="translated">基本的なテキストの書式設定はセクション内でサポートされています。</target>
        </trans-unit>
        <trans-unit id="3b90776a06e35fdd0d053b9cf250b3c723736571" translate="yes" xml:space="preserve">
          <source>Basically, a URL is written between an opening &amp;lsquo;</source>
          <target state="translated">基本的に、URLは開始 '</target>
        </trans-unit>
        <trans-unit id="ddff41080993b42afb80e7f106d3cccf60d73d7d" translate="yes" xml:space="preserve">
          <source>Batch mode is enabled by either 1) specifying a logfile using the third argument &lt;var&gt;fname&lt;/var&gt; or &lt;var&gt;fid&lt;/var&gt;, or 2) requesting an output argument such as &lt;var&gt;success&lt;/var&gt;, &lt;var&gt;n&lt;/var&gt;, etc.</source>
          <target state="translated">バッチモードを有効にするには、1）3番目の引数 &lt;var&gt;fname&lt;/var&gt; または &lt;var&gt;fid&lt;/var&gt; を使用してログファイルを指定するか、2） &lt;var&gt;success&lt;/var&gt; 、 &lt;var&gt;n&lt;/var&gt; などの出力引数を要求します。</target>
        </trans-unit>
        <trans-unit id="7fbdf661d49afafc5ac40d42d8c5cced3a494bf9" translate="yes" xml:space="preserve">
          <source>Be aware of lazy copies (copy-on-write).    When a copy of an object is created, the data is not immediately copied, but rather shared. The actual copying is postponed until the copied data needs to be modified. For example:</source>
          <target state="translated">遅延コピー(コピーオンライト)に注意しましょう。オブジェクトのコピーが作成されると、データはすぐにコピーされるのではなく、共有されます。実際のコピーは、コピーされたデータを変更する必要があるまで延期されます。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="c9722830db1ba306da44ceeb175c4bc642edee1e" translate="yes" xml:space="preserve">
          <source>Be precise about these changes&amp;mdash;show a context diff for them.</source>
          <target state="translated">これらの変更について正確に説明してください。それらのコンテキストの違いを示してください。</target>
        </trans-unit>
        <trans-unit id="ab37523154499435330c8f82a80275c72a272d97" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;assert&lt;/code&gt; is so frequently used alone in a test block, there is a shorthand form:</source>
          <target state="translated">ため &lt;code&gt;assert&lt;/code&gt; 頻繁試験ブロックに単独で使用される、簡略形があります。</target>
        </trans-unit>
        <trans-unit id="42dda19769c5c356f0388a32203b0d98be01da14" translate="yes" xml:space="preserve">
          <source>Because compilation is a costly operation it does not make sense to employ JIT when the loop count is low. By default only loops with greater than 1000 iterations will be accelerated.</source>
          <target state="translated">コンパイルはコストのかかる作業なので、ループ数が少ない場合はJITを採用する意味がありません。デフォルトでは、1000回以上の繰り返しを持つループのみが高速化されます。</target>
        </trans-unit>
        <trans-unit id="eac75969a1a296933f78fe6e0c8a80815a058e6f" translate="yes" xml:space="preserve">
          <source>Because many other languages provide C or C++ APIs it is relatively simple to build bridges between Octave and other languages. This is also a way to bridge to hardware resources which often have device drivers written in C.</source>
          <target state="translated">他の多くの言語がCやC++のAPIを提供しているので,Octaveと他の言語との間のブリッジを構築するのは比較的簡単です。これは,しばしばCで書かれたデバイスドライバを持っているハードウェアリソースへのブリッジの方法でもあります。</target>
        </trans-unit>
        <trans-unit id="a16518a59e5cc57cf848762028e4f35fe263ce42" translate="yes" xml:space="preserve">
          <source>Because oct-files are compiled functions they open up the possibility of crashing Octave through careless function calls or memory faults. It is quite important that each and every function have a sufficient level of parameter checking to ensure that Octave behaves well.</source>
          <target state="translated">oct-fileはコンパイルされた関数なので,不注意な関数呼び出しやメモリ障害によってOctaveがクラッシュする可能性があります。各関数が,Octaveが正常に動作することを確実にするために,十分なレベルのパラメー タ検査を行うことが非常に重要です。</target>
        </trans-unit>
        <trans-unit id="722617bc35c223f610ad609bf73304b8577676f5" translate="yes" xml:space="preserve">
          <source>Because there is a space after &amp;lsquo;</source>
          <target state="translated">後にスペースがあるので '</target>
        </trans-unit>
        <trans-unit id="e260bc2cd21931564989aa55e80e5554ca25fd19" translate="yes" xml:space="preserve">
          <source>Because there may be output waiting to be displayed by the pager, it is a good idea to always call &lt;code&gt;fflush (stdout)&lt;/code&gt; before calling &lt;code&gt;input&lt;/code&gt;. This will ensure that all pending output is written to the screen before your prompt.</source>
          <target state="translated">ページャーによって表示されるのを待っている出力があるかもしれないので、 &lt;code&gt;input&lt;/code&gt; を呼び出す前に常に &lt;code&gt;fflush (stdout)&lt;/code&gt; 呼び出すことは良い考えです。これにより、保留中のすべての出力がプロンプトの前に画面に書き込まれるようになります。</target>
        </trans-unit>
        <trans-unit id="ac8ac8470b9e50cf881db223202bb12df8b79ca7" translate="yes" xml:space="preserve">
          <source>Becker, R. A., Chambers, J. M. and Wilks, A. R. (1988) The New S Language. Wadsworth &amp;amp; Brooks/Cole.</source>
          <target state="translated">ベッカー、RA、チェンバーズ、JMおよびウィルクス、AR（1988）新しいS言語。Wadsworth＆Brooks / Cole。</target>
        </trans-unit>
        <trans-unit id="65eb0a4917174ca38ad73262aa449fba60bad620" translate="yes" xml:space="preserve">
          <source>Before computing the Fourier transform, one of the following windows is applied:</source>
          <target state="translated">フーリエ変換を計算する前に、以下のいずれかのウィンドウを適用します。</target>
        </trans-unit>
        <trans-unit id="1f070b7123334f4e6a5ee75e3105b5f059e00d1c" translate="yes" xml:space="preserve">
          <source>Before going further, you should first determine if you really need to bother writing code outside of Octave.</source>
          <target state="translated">これ以上進む前に、まず、あなたが本当にOctave以外のコードをわざわざ書く必要があるかどうかを判断すべきです。</target>
        </trans-unit>
        <trans-unit id="0c43eb48bf7018313ef9a06f84908d66a01c79c4" translate="yes" xml:space="preserve">
          <source>Before you evaluate an expression you need to substitute the values of the variables used in the expression. These are stored in the symbol table. Whenever the interpreter starts a new function it saves the current symbol table and creates a new one, initializing it with the list of function parameters and a couple of predefined variables such as &lt;code&gt;nargin&lt;/code&gt;. Expressions inside the function use the new symbol table.</source>
          <target state="translated">式を評価する前に、式で使用されている変数の値を置き換える必要があります。これらはシンボルテーブルに格納されます。インタープリターが新しい関数を開始するたびに、現在のシンボルテーブルを保存して新しいものを作成し、関数パラメーターのリストと &lt;code&gt;nargin&lt;/code&gt; などのいくつかの定義済み変数で初期化します。関数内の式は新しいシンボルテーブルを使用します。</target>
        </trans-unit>
        <trans-unit id="69385ac472d5822d09bb47bdba028415397cf7c6" translate="yes" xml:space="preserve">
          <source>Begins a new line by printing the equivalent of a carriage return followed by a line feed.</source>
          <target state="translated">キャリッジリターンに相当するものを印刷して改行を開始します。</target>
        </trans-unit>
        <trans-unit id="7c89f79fedb780dc8797d572949970af2bd3bf91" translate="yes" xml:space="preserve">
          <source>Below is an example of creating a small sparse matrix using the first technique</source>
          <target state="translated">以下に,最初の手法を用いて小さな疎な行列を作成する例を示します.</target>
        </trans-unit>
        <trans-unit id="8b890884bb782672a4e1cbc2450c921c4c0a7525" translate="yes" xml:space="preserve">
          <source>Below, we will give a short example of a profiler session. See &lt;a href=&quot;profiling#Profiling&quot;&gt;Profiling&lt;/a&gt;, for the documentation of the profiler functions in detail. Consider the code:</source>
          <target state="translated">以下に、プロファイラーセッションの短い例を示します。プロファイラ関数の詳細については、&lt;a href=&quot;profiling#Profiling&quot;&gt;プロファイリングを&lt;/a&gt;参照してください。コードを考えてみましょう：</target>
        </trans-unit>
        <trans-unit id="92c4bb4aa69642ea28c3f4bd8479c0e6dac8a18e" translate="yes" xml:space="preserve">
          <source>Besides common arithmetic operations, several functions of two arguments also broadcast. The full list of functions and operators that broadcast is</source>
          <target state="translated">一般的な算術演算の他に、2つの引数のいくつかの関数もブロードキャストします。ブロードキャストする関数と演算子の完全なリストは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="f37822362fd6ce4c84d3d2504319c2f2326368c0" translate="yes" xml:space="preserve">
          <source>Besides line properties, the arrowhead can be customized using &lt;code&gt;&quot;headlength&quot;&lt;/code&gt;, &lt;code&gt;&quot;headwidth&quot;&lt;/code&gt;, and &lt;code&gt;&quot;headstyle&quot;&lt;/code&gt; properties. Supported values for &lt;code&gt;&quot;headstyle&quot;&lt;/code&gt; property are: [&lt;code&gt;&quot;diamond&quot;&lt;/code&gt; | &lt;code&gt;&quot;ellipse&quot;&lt;/code&gt; | &lt;code&gt;&quot;plain&quot;&lt;/code&gt; | &lt;code&gt;&quot;rectangle&quot;&lt;/code&gt; | &lt;code&gt;&quot;vback1&quot;&lt;/code&gt; | &lt;code&gt;&quot;{vback2}&quot;&lt;/code&gt; | &lt;code&gt;&quot;vback3&quot;&lt;/code&gt;]</source>
          <target state="translated">線のプロパティに加えて、 &lt;code&gt;&quot;headlength&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;headwidth&quot;&lt;/code&gt; 、および &lt;code&gt;&quot;headstyle&quot;&lt;/code&gt; プロパティを使用して矢印をカスタマイズできます。 &lt;code&gt;&quot;headstyle&quot;&lt;/code&gt; プロパティでサポートされている値は次のとおりです：[ &lt;code&gt;&quot;diamond&quot;&lt;/code&gt; | &lt;code&gt;&quot;ellipse&quot;&lt;/code&gt; | &lt;code&gt;&quot;plain&quot;&lt;/code&gt; | &lt;code&gt;&quot;rectangle&quot;&lt;/code&gt; | &lt;code&gt;&quot;vback1&quot;&lt;/code&gt; | &lt;code&gt;&quot;{vback2}&quot;&lt;/code&gt; | &lt;code&gt;&quot;vback3&quot;&lt;/code&gt; ]</target>
        </trans-unit>
        <trans-unit id="6d9ea4ce1f533fd02f131ae77908d593a8054c60" translate="yes" xml:space="preserve">
          <source>Besides special glyphs, the formatting of the text can be changed within the string by using the codes</source>
          <target state="translated">特殊なグリフの他にも、文字列内ではコードを用いてテキストの書式を変更することができます。</target>
        </trans-unit>
        <trans-unit id="6590782bb7d4e4a3e1b487c0373613995a013879" translate="yes" xml:space="preserve">
          <source>Besides the above mentioned files, a package can also contain one or more of the following directories:</source>
          <target state="translated">上記のファイルの他に、パッケージには以下のディレクトリが含まれています。</target>
        </trans-unit>
        <trans-unit id="cff9d15874f2e14a910c8161aeb7ed33a01f47b5" translate="yes" xml:space="preserve">
          <source>Besides the index operator &lt;code&gt;&quot;.&quot;&lt;/code&gt;, Octave can use dynamic naming &lt;code&gt;&quot;(var)&quot;&lt;/code&gt; or the &lt;code&gt;struct&lt;/code&gt; function to create structures. Dynamic naming uses the string value of a variable as the field name. For example:</source>
          <target state="translated">インデックス演算子 &lt;code&gt;&quot;.&quot;&lt;/code&gt; 加えて。、Octaveは動的命名 &lt;code&gt;&quot;(var)&quot;&lt;/code&gt; または &lt;code&gt;struct&lt;/code&gt; 関数を使用して構造を作成できます。動的命名では、変数の文字列値をフィールド名として使用します。例えば：</target>
        </trans-unit>
        <trans-unit id="6cd55df52e8edd7615ca160e37f6cae69c7c3b1e" translate="yes" xml:space="preserve">
          <source>Besides the least-squares estimate matrix &lt;var&gt;x&lt;/var&gt; (p-by-k), the function also returns &lt;var&gt;stdx&lt;/var&gt; (p-by-k), the error standard deviation of estimated &lt;var&gt;x&lt;/var&gt;; &lt;var&gt;mse&lt;/var&gt; (k-by-1), the estimated data error covariance scale factors (&lt;em&gt;\sigma^2&lt;/em&gt;); and &lt;var&gt;S&lt;/var&gt; (p-by-p, or p-by-p-by-k if k &amp;gt; 1), the error covariance of &lt;var&gt;x&lt;/var&gt;.</source>
          <target state="translated">最小二乗推定行列 &lt;var&gt;x&lt;/var&gt; （p 行k 列）のほかに、関数は &lt;var&gt;stdx&lt;/var&gt; （p行k 列）、推定 &lt;var&gt;x&lt;/var&gt; の誤差標準偏差も返します。 &lt;var&gt;mse&lt;/var&gt; （k行1 列）、推定データ誤差の共分散スケール係数（&lt;em&gt;\ sigma ^ 2&lt;/em&gt;）; および &lt;var&gt;S&lt;/var&gt; （P-によって-P、またはp行p行K K&amp;gt; 1の場合）の誤差共分散 &lt;var&gt;x&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="43d40388e2c253600caf75ba2177cf52b4f83ae6" translate="yes" xml:space="preserve">
          <source>Besides the number of arguments, inputs can be checked for various properties. &lt;code&gt;validatestring&lt;/code&gt; is used for string arguments and &lt;code&gt;validateattributes&lt;/code&gt; for numeric arguments.</source>
          <target state="translated">引数の数に加えて、さまざまなプロパティの入力をチェックできます。 &lt;code&gt;validatestring&lt;/code&gt; は文字列引数に使用され、 &lt;code&gt;validateattributes&lt;/code&gt; は数値引数に使用されます。</target>
        </trans-unit>
        <trans-unit id="0c94f17566f6c0360163dd66cd409d45c71e1c72" translate="yes" xml:space="preserve">
          <source>Best local bound.</source>
          <target state="translated">最高のローカルバウンド。</target>
        </trans-unit>
        <trans-unit id="54e1cc05c077025217a7482d3305fb438fd3160d" translate="yes" xml:space="preserve">
          <source>Best projection heuristic.</source>
          <target state="translated">最高の投影ヒューリスティック。</target>
        </trans-unit>
        <trans-unit id="7fd543cab75c3d933ad6279566277ef039895cdb" translate="yes" xml:space="preserve">
          <source>Beware of resorting to broadcasting if a simpler operation will suffice. For matrices &lt;var&gt;a&lt;/var&gt; and &lt;var&gt;b&lt;/var&gt;, consider the following:</source>
          <target state="translated">簡単な操作で十分な場合は、ブロードキャストに頼らないように注意してください。行列 &lt;var&gt;a&lt;/var&gt; および &lt;var&gt;b&lt;/var&gt; については、以下を考慮してください。</target>
        </trans-unit>
        <trans-unit id="0006711ce28b361c5dc45f3fb2a1b35e309ab1b2" translate="yes" xml:space="preserve">
          <source>Beyond speed and memory issues, there have been instances where some input matrices were not accurately decomposed by &lt;code&gt;gesdd&lt;/code&gt;. See currently active bug &lt;a href=&quot;https://savannah.gnu.org/bugs/?55564&quot;&gt;https://savannah.gnu.org/bugs/?55564&lt;/a&gt;. Until these accuracy issues are resolved in a new version of the &lt;small&gt;LAPACK&lt;/small&gt; library, the default driver in Octave has been set to &lt;code&gt;&quot;gesvd&quot;&lt;/code&gt;.</source>
          <target state="translated">速度とメモリの問題を超えて、一部の入力行列が &lt;code&gt;gesdd&lt;/code&gt; によって正確に分解されない場合がありました。現在アクティブなバグ&lt;a href=&quot;https://savannah.gnu.org/bugs/?55564&quot;&gt;https://savannah.gnu.org/bugs/?55564を&lt;/a&gt;参照してください。&lt;small&gt;LAPACK&lt;/small&gt;ライブラリの新しいバージョンでこれらの精度の問題が解決されるまで、Octaveのデフォルトドライバーは &lt;code&gt;&quot;gesvd&quot;&lt;/code&gt; に設定されています。</target>
        </trans-unit>
        <trans-unit id="077a15b13db556c78b4bfbf28994d6f478f129e0" translate="yes" xml:space="preserve">
          <source>Binary I/O</source>
          <target state="translated">バイナリI/O</target>
        </trans-unit>
        <trans-unit id="e00df53002d6983ff503c9df80c8975eaf3cd2ab" translate="yes" xml:space="preserve">
          <source>Binary Operators</source>
          <target state="translated">バイナリ演算子</target>
        </trans-unit>
        <trans-unit id="41bcf8d0c84c0854259a1353a132c4c559c54d2b" translate="yes" xml:space="preserve">
          <source>Binary addition</source>
          <target state="translated">バイナリ加算</target>
        </trans-unit>
        <trans-unit id="c78e01e2df9d76ad94ccfa1ca5c9239d5818c7de" translate="yes" xml:space="preserve">
          <source>Binary subtraction</source>
          <target state="translated">二項減算</target>
        </trans-unit>
        <trans-unit id="4915a22bd9a4e5302c4d2d785671382b8a5d633f" translate="yes" xml:space="preserve">
          <source>Bison</source>
          <target state="translated">Bison</target>
        </trans-unit>
        <trans-unit id="6bcf5eeb72876c131fd59448a2cc74c116262fe0" translate="yes" xml:space="preserve">
          <source>Bit Manipulations</source>
          <target state="translated">ビット操作</target>
        </trans-unit>
        <trans-unit id="208abe95f61bdca28d01c97a63d789ede7dec51c" translate="yes" xml:space="preserve">
          <source>BitDepth</source>
          <target state="translated">BitDepth</target>
        </trans-unit>
        <trans-unit id="444f408bc523de1ebe62775a099237e6a577819f" translate="yes" xml:space="preserve">
          <source>BitRate</source>
          <target state="translated">BitRate</target>
        </trans-unit>
        <trans-unit id="57332e55aa80ed1cac49621fb28fcd571f920a7c" translate="yes" xml:space="preserve">
          <source>Bits that are shifted out of either end of the value are lost. Octave also uses arithmetic shifts, where the sign bit of the value is kept during a right shift. For example:</source>
          <target state="translated">値のどちらかの端からシフトされたビットは失われます。Octaveはまた、値の符号ビットが右シフト中も保持される算術シフトを使用します。例えば、次のようになります。</target>
        </trans-unit>
        <trans-unit id="dfa0da40dfa459d5e0371427f8a8d6065ad539cb" translate="yes" xml:space="preserve">
          <source>BitsPerSample</source>
          <target state="translated">BitsPerSample</target>
        </trans-unit>
        <trans-unit id="c1b38fad085dd3509a88635aa132e51044b4666a" translate="yes" xml:space="preserve">
          <source>Block Comments</source>
          <target state="translated">ブロックコメント</target>
        </trans-unit>
        <trans-unit id="5dffd0bdb173cfa60dace4ab47d5ffd8318adfce" translate="yes" xml:space="preserve">
          <source>Block type summary:</source>
          <target state="translated">ブロックタイプのまとめ。</target>
        </trans-unit>
        <trans-unit id="7d44bc449c2a26374800a503f10f3d8949505f40" translate="yes" xml:space="preserve">
          <source>Blue</source>
          <target state="translated">Blue</target>
        </trans-unit>
        <trans-unit id="bf04002b0249875f43eaf26f9729ac08bdbee8a3" translate="yes" xml:space="preserve">
          <source>Bold font</source>
          <target state="translated">太字フォント</target>
        </trans-unit>
        <trans-unit id="c9ac379f83771407fb1e0d78aaf3f7b5adc6706f" translate="yes" xml:space="preserve">
          <source>Boolean Expressions</source>
          <target state="translated">ブール式</target>
        </trans-unit>
        <trans-unit id="021e8c0cb1cf42de5aefc725da1276c9e67ad800" translate="yes" xml:space="preserve">
          <source>Boolean. &lt;code&gt;idx(i)&lt;/code&gt; is a logical 1 or 0, indicating whether &lt;code&gt;y(i)&lt;/code&gt; is contained in table or not.</source>
          <target state="translated">ブール。 &lt;code&gt;idx(i)&lt;/code&gt; は論理値1または0で、 &lt;code&gt;y(i)&lt;/code&gt; がテーブルに含まれているかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="722d7d26114bf5209d2a70ccadac37a8f4e15e24" translate="yes" xml:space="preserve">
          <source>Both &lt;small&gt;GLPK&lt;/small&gt; and Qhull use &lt;code&gt;int&lt;/code&gt; internally so maximum problem sizes may be limited.</source>
          <target state="translated">&lt;small&gt;GLPK&lt;/small&gt;とQhullはどちらも内部で &lt;code&gt;int&lt;/code&gt; を使用するため、問題の最大サイズが制限される場合があります。</target>
        </trans-unit>
        <trans-unit id="b903c35898c83e85af4a489c32799aabf17f53db" translate="yes" xml:space="preserve">
          <source>Both &lt;var&gt;dim&lt;/var&gt; and &lt;var&gt;opt&lt;/var&gt; are optional. If both are supplied, either may appear first.</source>
          <target state="translated">&lt;var&gt;dim&lt;/var&gt; と &lt;var&gt;opt&lt;/var&gt; はどちらもオプションです。両方が指定されている場合、どちらかが最初に表示されます。</target>
        </trans-unit>
        <trans-unit id="71499a4de5921f796e800de6bbc78afa630df957" translate="yes" xml:space="preserve">
          <source>Both &lt;var&gt;minargs&lt;/var&gt; and &lt;var&gt;maxargs&lt;/var&gt; must be numeric scalars. Zero, Inf, and negative are all valid, and they can have the same value.</source>
          <target state="translated">&lt;var&gt;minargs&lt;/var&gt; と &lt;var&gt;maxargs&lt;/var&gt; はどちらも数値スカラーでなければなりません。Zero、Inf、negativeはすべて有効であり、同じ値を持つことができます。</target>
        </trans-unit>
        <trans-unit id="9b01a758d9ebdf7327fb3ea751d38958b41778df" translate="yes" xml:space="preserve">
          <source>Both &lt;var&gt;minargs&lt;/var&gt; and &lt;var&gt;maxargs&lt;/var&gt; must be scalar numeric values. Zero, Inf, and negative values are all allowed, and &lt;var&gt;minargs&lt;/var&gt; and &lt;var&gt;maxargs&lt;/var&gt; may be equal.</source>
          <target state="translated">&lt;var&gt;minargs&lt;/var&gt; と &lt;var&gt;maxargs&lt;/var&gt; はどちらもスカラー数値でなければなりません。ゼロ、Inf、および負の値はすべて許可され、 &lt;var&gt;minargs&lt;/var&gt; と &lt;var&gt;maxargs&lt;/var&gt; は等しい場合があります。</target>
        </trans-unit>
        <trans-unit id="ff52f594471b0880a2ec0ed17a669501e3810285" translate="yes" xml:space="preserve">
          <source>Both &lt;var&gt;val&lt;/var&gt; and &lt;var&gt;type&lt;/var&gt; are typically one of the following built-in classes:</source>
          <target state="translated">両方 &lt;var&gt;val&lt;/var&gt; と &lt;var&gt;type&lt;/var&gt; 一般的にビルトインクラス次のいずれかです：</target>
        </trans-unit>
        <trans-unit id="ab2f4ecf9c471b68979ea9dacaba1f0a8fce1bdf" translate="yes" xml:space="preserve">
          <source>Both Ends, with one more from the high-end if &lt;var&gt;k&lt;/var&gt; is odd (valid only for real symmetric problems).</source>
          <target state="translated">両端、 &lt;var&gt;k&lt;/var&gt; が奇数の場合は上限からもう1つ（真の対称問題でのみ有効）。</target>
        </trans-unit>
        <trans-unit id="e6a83418918232199a380993f16406c3b736545a" translate="yes" xml:space="preserve">
          <source>Both arrays can be broadcast across each other, for example, all pairwise differences of the elements of a vector with itself:</source>
          <target state="translated">両方の配列は、例えば、それ自身とのベクトルの要素のすべてのペアワイズの差分など、互いにブロードキャストすることができます。</target>
        </trans-unit>
        <trans-unit id="ceae212444a6d3257be5ec168eded3328930237e" translate="yes" xml:space="preserve">
          <source>Both function files and script files end with an extension of .m, for &lt;small&gt;MATLAB&lt;/small&gt; compatibility. If you want more than one independent functions in a file, it must be a script file (see &lt;a href=&quot;script-files#Script-Files&quot;&gt;Script Files&lt;/a&gt;), and to use these functions you must execute the script file before you can use the functions that are in the script file.</source>
          <target state="translated">関数ファイルとスクリプトファイルはどちらも、&lt;small&gt;MATLABとの&lt;/small&gt;互換性のために拡張子.mで終わります。ファイルに複数の独立した関数が必要な場合は、スクリプトファイルである必要があります（&lt;a href=&quot;script-files#Script-Files&quot;&gt;スクリプトファイルを&lt;/a&gt;参照）。これらの関数を使用するには、スクリプトファイル内の関数を使用する前にスクリプトファイルを実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="f56dd23b94f903210d7d506fc9594ca3e84f09ec" translate="yes" xml:space="preserve">
          <source>Both parameters are optional. The default cycle time is 5 seconds and the default increment is 2. If the option &lt;code&gt;&quot;inf&quot;&lt;/code&gt; is given then cycle continuously until</source>
          <target state="translated">どちらのパラメーターもオプションです。デフォルトのサイクルタイムは5秒で、デフォルトの増分は2です。オプション &lt;code&gt;&quot;inf&quot;&lt;/code&gt; が指定されている場合は、</target>
        </trans-unit>
        <trans-unit id="9a888bd8c11a9db6c604f8bfa7eb4320f863b828" translate="yes" xml:space="preserve">
          <source>Both the class of &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;class&lt;/var&gt; must be one of the built-in numeric classes:</source>
          <target state="translated">クラスの両方 &lt;var&gt;x&lt;/var&gt; と &lt;var&gt;class&lt;/var&gt; 組み込み数値クラスのいずれかである必要があります。</target>
        </trans-unit>
        <trans-unit id="25854a99e6b80e1bb8ca35c4d2b39c25d82a1fd8" translate="yes" xml:space="preserve">
          <source>Bottom center of the screen.</source>
          <target state="translated">画面下中央。</target>
        </trans-unit>
        <trans-unit id="c116fa7ee9cd5f76e854c7be300e0ac5ae08731e" translate="yes" xml:space="preserve">
          <source>Bottom left of the screen.</source>
          <target state="translated">画面の左下。</target>
        </trans-unit>
        <trans-unit id="41c31aff3bdb356f51c0334d6484dd4810f1ba65" translate="yes" xml:space="preserve">
          <source>Bottom right of the screen.</source>
          <target state="translated">画面の右下。</target>
        </trans-unit>
        <trans-unit id="234ddc71255560f5941e6823ac161189e2dd916b" translate="yes" xml:space="preserve">
          <source>Branching technique option (for MIP only):</source>
          <target state="translated">分岐テクニックオプション(MIPのみ)。</target>
        </trans-unit>
        <trans-unit id="4783e8f8fb67f8a1efa54f0096e73e1b6c14414c" translate="yes" xml:space="preserve">
          <source>Breadth first search.</source>
          <target state="translated">最初の検索の幅。</target>
        </trans-unit>
        <trans-unit id="21a8752f2df54d656b09cd2a499cb3a3403ec7ca" translate="yes" xml:space="preserve">
          <source>Breakpoints</source>
          <target state="translated">Breakpoints</target>
        </trans-unit>
        <trans-unit id="6b48ce4f975aaaf9874e30444b8700ed9a99ff23" translate="yes" xml:space="preserve">
          <source>Breakpoints and events can be removed using the &lt;code&gt;dbclear&lt;/code&gt; command with the same syntax.</source>
          <target state="translated">ブレークポイントとイベントは、同じ構文で &lt;code&gt;dbclear&lt;/code&gt; コマンドを使用して削除できます。</target>
        </trans-unit>
        <trans-unit id="b8ec9debbea70409e7c84058d4d402587950524b" translate="yes" xml:space="preserve">
          <source>Breakpoints can be set in any m-file function by using the &lt;code&gt;dbstop&lt;/code&gt; function.</source>
          <target state="translated">ブレークポイントは、 &lt;code&gt;dbstop&lt;/code&gt; 関数を使用して、任意のmファイル関数で設定できます。</target>
        </trans-unit>
        <trans-unit id="258c704e79dc1bf48a7380f4c49adc52c02becd6" translate="yes" xml:space="preserve">
          <source>Breakpoints in class methods are also supported (e.g., &lt;code&gt;dbstop (&quot;@class/method&quot;)&lt;/code&gt;). However, breakpoints cannot be set in built-in functions (e.g., &lt;code&gt;sin&lt;/code&gt;, etc.) or dynamically loaded functions (i.e., oct-files).</source>
          <target state="translated">クラスメソッドのブレークポイントもサポートされています（例： &lt;code&gt;dbstop (&quot;@class/method&quot;)&lt;/code&gt; ）。ただし、組み込み関数（たとえば、 &lt;code&gt;sin&lt;/code&gt; など）または動的に読み込まれる関数（つまり、octファイル）にはブレークポイントを設定できません。</target>
        </trans-unit>
        <trans-unit id="0942bb5a4441b343a13f41ebf4c66d8c71ce141e" translate="yes" xml:space="preserve">
          <source>Brighten or darken a colormap.</source>
          <target state="translated">カラーマップを明るくしたり暗くしたりします。</target>
        </trans-unit>
        <trans-unit id="ba459229366746c447e3cdf752eb917433152cfe" translate="yes" xml:space="preserve">
          <source>Broadcasting</source>
          <target state="translated">Broadcasting</target>
        </trans-unit>
        <trans-unit id="2daf09a1afcb280d9158a2e1d494316ef2d65c85" translate="yes" xml:space="preserve">
          <source>Broadcasting is only applied if either of the two broadcasting conditions hold. As usual, however, broadcasting does not apply when two dimensions differ and neither is 1:</source>
          <target state="translated">ブロードキャストは、2つのブロードキャスト条件のいずれかが成立した場合にのみ適用される。ただし、通常通り、2つの次元が異なり、どちらも1ではない場合は放送は適用されません。</target>
        </trans-unit>
        <trans-unit id="4bb44b8fcd5f972d66798a325e6edfcf831b4545" translate="yes" xml:space="preserve">
          <source>Broadcasting operations</source>
          <target state="translated">放送事業</target>
        </trans-unit>
        <trans-unit id="7998a199dad89184b0d7f47d9b8c768ff088a18e" translate="yes" xml:space="preserve">
          <source>Broadcasting refers to how Octave binary operators and functions behave when their matrix or array operands or arguments differ in size. Since version 3.6.0, Octave now automatically broadcasts vectors, matrices, and arrays when using elementwise binary operators and functions. Broadly speaking, smaller arrays are &amp;ldquo;broadcast&amp;rdquo; across the larger one, until they have a compatible shape. The rule is that corresponding array dimensions must either</source>
          <target state="translated">ブロードキャストとは、行列または配列のオペランドまたは引数のサイズが異なる場合のOctaveの2項演算子と関数の動作を指します。バージョン3.6.0以降、Octaveは要素ごとの2項演算子と関数を使用するときに、ベクトル、行列、配列を自動的にブロードキャストするようになりました。大まかに言えば、互換性のある形状になるまで、小さなアレイは大きなアレイ全体に「ブロードキャスト」されます。ルールは、対応する配列の次元は、</target>
        </trans-unit>
        <trans-unit id="c3fa58ef984bb622b8d7739cec913fac4ccb7e05" translate="yes" xml:space="preserve">
          <source>Bug Criteria</source>
          <target state="translated">バグ基準</target>
        </trans-unit>
        <trans-unit id="cb16822f3ab4a4b7c7befbf6b7a12d0f7072950e" translate="yes" xml:space="preserve">
          <source>Bug Reporting</source>
          <target state="translated">バグ報告</target>
        </trans-unit>
        <trans-unit id="5affe70bdb77ae83462885545ace5d26f56e1f9a" translate="yes" xml:space="preserve">
          <source>Bug Tracker</source>
          <target state="translated">バグトラッカー</target>
        </trans-unit>
        <trans-unit id="654ffe48f6054af226250c2aa3867b5fc4c80bcc" translate="yes" xml:space="preserve">
          <source>Bugs we will fix later.</source>
          <target state="translated">バグは後ほど修正します。</target>
        </trans-unit>
        <trans-unit id="b12796477825be21e0fc36e92270e069f8d1cb37" translate="yes" xml:space="preserve">
          <source>Build a binary form of a package or packages. The binary file produced will itself be an Octave package that can be installed normally with &lt;code&gt;pkg&lt;/code&gt;. The form of the command to build a binary package is</source>
          <target state="translated">パッケージのバイナリ形式をビルドします。生成されるバイナリファイルは、それ自体が通常の &lt;code&gt;pkg&lt;/code&gt; でインストールできるOctaveパッケージになります。バイナリパッケージをビルドするコマンドの形式は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="a0a0b4f30ab735572d6583fa2a8ab076525f9f12" translate="yes" xml:space="preserve">
          <source>Build a block diagonal matrix from &lt;var&gt;A&lt;/var&gt;, &lt;var&gt;B&lt;/var&gt;, &lt;var&gt;C&lt;/var&gt;, &amp;hellip;</source>
          <target state="translated">&lt;var&gt;A&lt;/var&gt; 、 &lt;var&gt;B&lt;/var&gt; 、 &lt;var&gt;C&lt;/var&gt; 、&amp;hellip; からブロック対角行列を作成します</target>
        </trans-unit>
        <trans-unit id="c5c66e57bb624e27f930330c3f8f24e51e9b9350" translate="yes" xml:space="preserve">
          <source>Build complete filename from separate parts.</source>
          <target state="translated">別々のパーツから完全なファイル名を構築します。</target>
        </trans-unit>
        <trans-unit id="9d914bfcf1c5bc9e6b83d3232349cae23d392f30" translate="yes" xml:space="preserve">
          <source>Building</source>
          <target state="translated">Building</target>
        </trans-unit>
        <trans-unit id="9f84d190c99bd0598c321d2cd6819d63839611df" translate="yes" xml:space="preserve">
          <source>Built-in Data Types</source>
          <target state="translated">組み込みのデータ型</target>
        </trans-unit>
        <trans-unit id="11c3f8cf90856dbe699ea2937502614fba4e9278" translate="yes" xml:space="preserve">
          <source>Built-in function A function that is a part of core Octave such as &lt;code&gt;numel&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt;, etc.</source>
          <target state="translated">組み込み関数 &lt;code&gt;numel&lt;/code&gt; 、 &lt;code&gt;size&lt;/code&gt; など、コアOctaveの一部である関数。</target>
        </trans-unit>
        <trans-unit id="d705258c54e6079321beb65fed2aa198e0303783" translate="yes" xml:space="preserve">
          <source>Bulleted Lists</source>
          <target state="translated">箇条書きリスト</target>
        </trans-unit>
        <trans-unit id="7d4cb0e146f77e11529c9b57fd08de6a7d684954" translate="yes" xml:space="preserve">
          <source>Bulleted list item 1</source>
          <target state="translated">箇条書きのリスト項目1</target>
        </trans-unit>
        <trans-unit id="f066ae62705afea5aae04013092815d6e76c8d4d" translate="yes" xml:space="preserve">
          <source>Bulleted list item 2</source>
          <target state="translated">箇条書きのリスト項目2</target>
        </trans-unit>
        <trans-unit id="34e548126447e7062d73743793702d1807c4d367" translate="yes" xml:space="preserve">
          <source>But it is if you preallocate the cell array &lt;code&gt;y&lt;/code&gt;:</source>
          <target state="translated">しかし、これはセル配列 &lt;code&gt;y&lt;/code&gt; を事前に割り当てている場合です。</target>
        </trans-unit>
        <trans-unit id="f119e0c4d55a5dfec8b9cdba7d14582da7a325f4" translate="yes" xml:space="preserve">
          <source>But that also means that you might have to assign the output of a method that changes properties back to the object manually:</source>
          <target state="translated">しかし、それはプロパティを変更するメソッドの出力を手動でオブジェクトに戻さなければならないかもしれないことも意味します。</target>
        </trans-unit>
        <trans-unit id="23b7ac3eea6a52085a1485e9bf3b47956be7d286" translate="yes" xml:space="preserve">
          <source>But this does not give much information about where this time is spent; for instance, whether the single call to &lt;code&gt;expm&lt;/code&gt; is more expensive or the recursive time-stepping itself. To get a more detailed picture, we can use the profiler.</source>
          <target state="translated">しかし、これはこの時間が費やされている場所についての多くの情報を提供しません。たとえば、 &lt;code&gt;expm&lt;/code&gt; の1回の呼び出しの方が負荷が高いか、それとも再帰的な時間ステップ自体か。より詳細な画像を取得するには、プロファイラーを使用できます。</target>
        </trans-unit>
        <trans-unit id="d38d9e471d0fb0266f6b23abbd19a5209ba07580" translate="yes" xml:space="preserve">
          <source>ButtonDownFcn: called if a mouse button is pressed while the pointer is over this object. Note, that the gnuplot interface does not implement this callback.</source>
          <target state="translated">ButtonDownFcn:ポインタがこのオブジェクトの上にあるときにマウスのボタンが押された場合に呼び出されます。gnuplot インターフェースはこのコールバックを実装していないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="015c5677e1c1704f69ec1b0d0d2c2df7a5e2fa0a" translate="yes" xml:space="preserve">
          <source>By convention,</source>
          <target state="translated">慣例では</target>
        </trans-unit>
        <trans-unit id="00146ce017cc4b6620457111ff066e8e709ef408" translate="yes" xml:space="preserve">
          <source>By default (&lt;var&gt;c&lt;/var&gt; omitted, or a particular column unspecified in &lt;var&gt;c&lt;/var&gt;) an ascending sort order is used. However, if elements of &lt;var&gt;c&lt;/var&gt; are negative then the corresponding column is sorted in descending order. If the elements of &lt;var&gt;A&lt;/var&gt; are strings then a lexicographical sort is used.</source>
          <target state="translated">デフォルトでは（ &lt;var&gt;c&lt;/var&gt; 省略、または &lt;var&gt;c&lt;/var&gt; で指定されていない特定の列）、昇順のソート順が使用されます。ただし、 &lt;var&gt;c&lt;/var&gt; の要素が負の場合、対応する列は降順で並べ替えられます。 &lt;var&gt;A&lt;/var&gt; の要素が文字列の場合、辞書式ソートが使用されます。</target>
        </trans-unit>
        <trans-unit id="798056cb67e6778b14d87df0411474bab87fb92b" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;accumarray&lt;/code&gt; returns a full matrix. If &lt;var&gt;issparse&lt;/var&gt; is logically true, then a sparse matrix is returned instead.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;accumarray&lt;/code&gt; は完全な行列を返します。場合 &lt;var&gt;issparse&lt;/var&gt; が論理的に真である場合、スパース行列が代わりに返されます。</target>
        </trans-unit>
        <trans-unit id="911638c977b41d139e84fa7812600964e2105884" translate="yes" xml:space="preserve">
          <source>By default &lt;var&gt;S&lt;/var&gt; is assumed to be symmetric and the symmetric elimination tree is returned. The argument &lt;var&gt;typ&lt;/var&gt; controls whether a symmetric or column elimination tree is returned. Valid values of &lt;var&gt;typ&lt;/var&gt; are &lt;code&gt;&quot;sym&quot;&lt;/code&gt; or &lt;code&gt;&quot;col&quot;&lt;/code&gt;, for symmetric or column elimination tree respectively.</source>
          <target state="translated">デフォルトでは、 &lt;var&gt;S&lt;/var&gt; は対称であると見なされ、対称除去木が返されます。引数 &lt;var&gt;typ&lt;/var&gt; は、対称または列消去ツリーを返すかどうかを制御します。有効な値 &lt;var&gt;typ&lt;/var&gt; ある &lt;code&gt;&quot;sym&quot;&lt;/code&gt; または &lt;code&gt;&quot;col&quot;&lt;/code&gt; それぞれ対称または列消去ツリーのため、。</target>
        </trans-unit>
        <trans-unit id="c5143ed57319349283a1f8a77fb3839c1fe085c0" translate="yes" xml:space="preserve">
          <source>By default callback functions are queued (they are executed one after the other in the event queue) unless the &lt;code&gt;drawnow&lt;/code&gt;, &lt;code&gt;figure&lt;/code&gt;, &lt;code&gt;waitfor&lt;/code&gt;, &lt;code&gt;getframe&lt;/code&gt;, or &lt;code&gt;pause&lt;/code&gt; functions are used. If an executing callback invokes one of those functions, it causes Octave to flush the event queue, which results in the executing callback being interrupted.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;drawnow&lt;/code&gt; 、 &lt;code&gt;figure&lt;/code&gt; 、 &lt;code&gt;waitfor&lt;/code&gt; 、 &lt;code&gt;getframe&lt;/code&gt; 、または &lt;code&gt;pause&lt;/code&gt; 関数が使用されていない限り、コールバック関数はキューに入れられます（イベントキューで順番に実行されます）。実行中のコールバックがこれらの関数の1つを呼び出すと、Octaveはイベントキューをフラッシュし、その結果、実行中のコールバックが中断されます。</target>
        </trans-unit>
        <trans-unit id="a56364265536193758c75afd28c9b94f8360dfb7" translate="yes" xml:space="preserve">
          <source>By default installed packages are not available from the Octave prompt, but it is possible to control this using the &lt;code&gt;pkg load&lt;/code&gt; and &lt;code&gt;pkg unload&lt;/code&gt; commands. The functions from a package can be added to the Octave path by typing</source>
          <target state="translated">デフォルトでは、インストールされたパッケージはOctaveプロンプトからは利用できませんが、 &lt;code&gt;pkg load&lt;/code&gt; および &lt;code&gt;pkg unload&lt;/code&gt; コマンドを使用してこれを制御することが可能です。次のように入力して、パッケージの関数をOctaveパスに追加できます。</target>
        </trans-unit>
        <trans-unit id="a0f43f0328e9708b882c4896f046a6014fdf97f5" translate="yes" xml:space="preserve">
          <source>By default the arguments are evaluated with &lt;code&gt;feval (@plot, &lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt;. However the type of plot can be modified with the &lt;var&gt;fun&lt;/var&gt; argument, in which case the plots are generated by &lt;code&gt;feval (&lt;var&gt;fun&lt;/var&gt;, &lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt;. &lt;var&gt;fun&lt;/var&gt; can be a function handle, an inline function, or a string of a function name.</source>
          <target state="translated">デフォルトでは、引数は &lt;code&gt;feval (@plot, &lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt; 評価されます。ただし、プロットのタイプは &lt;var&gt;fun&lt;/var&gt; 引数で変更できます。この場合、プロットは &lt;code&gt;feval (&lt;var&gt;fun&lt;/var&gt;, &lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt; によって生成されます。 &lt;var&gt;fun&lt;/var&gt; は、関数ハンドル、インライン関数、または関数名の文字列です。</target>
        </trans-unit>
        <trans-unit id="7f59e43a905190e7beb0413e84a6573138a05215" translate="yes" xml:space="preserve">
          <source>By default the complex pairs are sorted along the first non-singleton dimension of &lt;var&gt;z&lt;/var&gt;. If &lt;var&gt;dim&lt;/var&gt; is specified, then the complex pairs are sorted along this dimension.</source>
          <target state="translated">デフォルトでは、複素数ペアは &lt;var&gt;z&lt;/var&gt; の最初の1でない次元に沿ってソートされます。 &lt;var&gt;dim&lt;/var&gt; が指定されている場合、複素数ペアはこの次元に沿ってソートされます。</target>
        </trans-unit>
        <trans-unit id="0bda86c3cd61039ba6b9a4b1a6a08fa849229b39" translate="yes" xml:space="preserve">
          <source>By default the values are displayed with the name of the variable &lt;var&gt;c&lt;/var&gt;. However, this name can be replaced with the variable &lt;var&gt;name&lt;/var&gt;. For example:</source>
          <target state="translated">デフォルトでは、値は変数 &lt;var&gt;c&lt;/var&gt; の名前で表示されます。ただし、この名前は変数 &lt;var&gt;name&lt;/var&gt; に置き換えることができます。例えば：</target>
        </trans-unit>
        <trans-unit id="7f0cc2c3dfa642100bcdb50d982ffbb73ce3005c" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;&lt;var&gt;p&lt;/var&gt; = 2&lt;/code&gt; is used which implies a (relatively slow) singular value decomposition. Other possible selections are &lt;code&gt;&lt;var&gt;p&lt;/var&gt; = 1, Inf, &quot;fro&quot;&lt;/code&gt; which are generally faster. See &lt;code&gt;norm&lt;/code&gt; for a full discussion of possible &lt;var&gt;p&lt;/var&gt; values.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;&lt;var&gt;p&lt;/var&gt; = 2&lt;/code&gt; が使用され、（比較的遅い）特異値分解を意味します。その他の可能な選択は、 &lt;code&gt;&lt;var&gt;p&lt;/var&gt; = 1, Inf, &quot;fro&quot;&lt;/code&gt; で、一般的に高速です。可能な &lt;var&gt;p&lt;/var&gt; 値の詳細については、 &lt;code&gt;norm&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="1d9170dd699561c9ab7aba216d9995243893c298" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;eigs&lt;/code&gt; solve the equation where is the corresponding eigenvector. If given the positive definite matrix &lt;var&gt;B&lt;/var&gt; then &lt;code&gt;eigs&lt;/code&gt; solves the general eigenvalue equation</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;eigs&lt;/code&gt; は方程式を解きます。ここで、は対応する固有ベクトルです。正定行列 &lt;var&gt;B&lt;/var&gt; が与えられた場合、 &lt;code&gt;eigs&lt;/code&gt; は一般的な固有値方程式を解きます</target>
        </trans-unit>
        <trans-unit id="e7ebccfa3e2c0399c46601b4c99a927c2dad3626" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;ichol&lt;/code&gt; uses only the lower triangle of &lt;var&gt;A&lt;/var&gt; and produces a lower triangular factor &lt;var&gt;L&lt;/var&gt; such that &lt;code&gt;L*L'&lt;/code&gt; approximates &lt;var&gt;A&lt;/var&gt;.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;ichol&lt;/code&gt; は &lt;var&gt;A&lt;/var&gt; の下三角のみを使用し、 &lt;code&gt;L*L'&lt;/code&gt; &lt;var&gt;A&lt;/var&gt; に近似するような下三角因子 &lt;var&gt;L&lt;/var&gt; を生成します。</target>
        </trans-unit>
        <trans-unit id="54099468baa3e6972f8efbd022985d80fa0d109e" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;lookfor&lt;/code&gt; looks for &lt;var&gt;str&lt;/var&gt; in just the first sentence of the help string for each function found. The entire help text of each function can be searched by using the &lt;code&gt;&quot;-all&quot;&lt;/code&gt; argument. All searches are case insensitive.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;lookfor&lt;/code&gt; は、見つかった各関数のヘルプ文字列の最初の文だけで &lt;var&gt;str&lt;/var&gt; を探します。各関数のヘルプテキスト全体は、 &lt;code&gt;&quot;-all&quot;&lt;/code&gt; 引数を使用して検索できます。すべての検索では大文字と小文字が区別されません。</target>
        </trans-unit>
        <trans-unit id="4245eb185865c1d9d2b01ec31984d659e850cf27" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;ode23&lt;/code&gt; uses an adaptive timestep with the &lt;code&gt;integrate_adaptive&lt;/code&gt; algorithm. The tolerance for the timestep computation may be changed by using the options &lt;code&gt;&quot;RelTol&quot;&lt;/code&gt; and &lt;code&gt;&quot;AbsTol&quot;&lt;/code&gt;.</source>
          <target state="translated">既定では、 &lt;code&gt;ode23&lt;/code&gt; は、 &lt;code&gt;integrate_adaptive&lt;/code&gt; アルゴリズムで適応タイムステップを使用します。タイムステップ計算の許容誤差は、オプション &lt;code&gt;&quot;RelTol&quot;&lt;/code&gt; および &lt;code&gt;&quot;AbsTol&quot;&lt;/code&gt; を使用して変更できます。</target>
        </trans-unit>
        <trans-unit id="a6e7d49b7c2225c2a5fb05f109668206696fb5ae" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;ode23s&lt;/code&gt; uses an adaptive timestep with the &lt;code&gt;integrate_adaptive&lt;/code&gt; algorithm. The tolerance for the timestep computation may be changed by using the options &lt;code&gt;&quot;RelTol&quot;&lt;/code&gt; and &lt;code&gt;&quot;AbsTol&quot;&lt;/code&gt;.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;ode23s&lt;/code&gt; は &lt;code&gt;integrate_adaptive&lt;/code&gt; アルゴリズムで適応タイムステップを使用します。タイムステップ計算の許容誤差は、オプション &lt;code&gt;&quot;RelTol&quot;&lt;/code&gt; および &lt;code&gt;&quot;AbsTol&quot;&lt;/code&gt; を使用して変更できます。</target>
        </trans-unit>
        <trans-unit id="95a060989155db8cdee80642f11c52faf944240b" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;ode45&lt;/code&gt; uses an adaptive timestep with the &lt;code&gt;integrate_adaptive&lt;/code&gt; algorithm. The tolerance for the timestep computation may be changed by using the options &lt;code&gt;&quot;RelTol&quot;&lt;/code&gt; and &lt;code&gt;&quot;AbsTol&quot;&lt;/code&gt;.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;ode45&lt;/code&gt; は、 &lt;code&gt;integrate_adaptive&lt;/code&gt; アルゴリズムで適応タイムステップを使用します。タイムステップ計算の許容誤差は、オプション &lt;code&gt;&quot;RelTol&quot;&lt;/code&gt; および &lt;code&gt;&quot;AbsTol&quot;&lt;/code&gt; を使用して変更できます。</target>
        </trans-unit>
        <trans-unit id="2690c437693dc3d9d7db3f328bad57c86d05518a" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;rande&lt;/code&gt; uses the Marsaglia and Tsang &amp;ldquo;Ziggurat technique&amp;rdquo; to transform from a uniform to an exponential distribution.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;rande&lt;/code&gt; はMarsagliaおよびTsangの「Zigguratテクニック」を使用して、一様分布から指数分布に変換します。</target>
        </trans-unit>
        <trans-unit id="2f57bce0568aba3827b242d08bdc5806545b452d" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;randn&lt;/code&gt; uses the Marsaglia and Tsang &amp;ldquo;Ziggurat technique&amp;rdquo; to transform from a uniform to a normal distribution.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;randn&lt;/code&gt; はMarsagliaおよびTsangの「Zigguratテクニック」を使用して、一様分布から正規分布に変換します。</target>
        </trans-unit>
        <trans-unit id="771057781c712bb823f17511b113b57a83ae32d5" translate="yes" xml:space="preserve">
          <source>By default, &lt;var&gt;filename&lt;/var&gt; is &lt;code&gt;&quot;Untitled.fig&quot;&lt;/code&gt;. If a full path is not specified, the file opened will be the first one encountered in the load path. If &lt;var&gt;filename&lt;/var&gt; is not found and does not have an extension, a search will take place for the first file in the load path with extension &lt;code&gt;&quot;.fig&quot;&lt;/code&gt; or &lt;code&gt;&quot;.ofig&quot;&lt;/code&gt;, in that order.</source>
          <target state="translated">デフォルトでは、 &lt;var&gt;filename&lt;/var&gt; は &lt;code&gt;&quot;Untitled.fig&quot;&lt;/code&gt; です。フルパスが指定されていない場合、開かれるファイルは、ロードパスで最初に見つかったファイルになります。 &lt;var&gt;filename&lt;/var&gt; が見つからず、拡張子がない場合は、ロードパス内で拡張子が &lt;code&gt;&quot;.fig&quot;&lt;/code&gt; または &lt;code&gt;&quot;.ofig&quot;&lt;/code&gt; の最初のファイルがこの順序で検索されます。</target>
        </trans-unit>
        <trans-unit id="45871410def70663d261c62363fb4f54949d2622" translate="yes" xml:space="preserve">
          <source>By default, &lt;var&gt;format&lt;/var&gt; is</source>
          <target state="translated">デフォルトでは、 &lt;var&gt;format&lt;/var&gt; は</target>
        </trans-unit>
        <trans-unit id="c748c4c7f2122f0a5b33e4ea60f964d04c4a81e0" translate="yes" xml:space="preserve">
          <source>By default, &lt;var&gt;mode&lt;/var&gt; is &lt;code&gt;&quot;ascend&quot;&lt;/code&gt;. NaNs are treated in the same manner as &lt;code&gt;sort&lt;/code&gt;.</source>
          <target state="translated">デフォルトでは、 &lt;var&gt;mode&lt;/var&gt; は &lt;code&gt;&quot;ascend&quot;&lt;/code&gt; です。NaNは &lt;code&gt;sort&lt;/code&gt; と同じように扱われます。</target>
        </trans-unit>
        <trans-unit id="c1e381c3192c19cd2c093bc57365d36ecbea474c" translate="yes" xml:space="preserve">
          <source>By default, &lt;var&gt;mode&lt;/var&gt; is &lt;code&gt;&quot;ascending&quot;&lt;/code&gt;. NaNs are treated in the same manner as &lt;code&gt;sort&lt;/code&gt;.</source>
          <target state="translated">デフォルトでは、 &lt;var&gt;mode&lt;/var&gt; は &lt;code&gt;&quot;ascending&quot;&lt;/code&gt; です。NaNは &lt;code&gt;sort&lt;/code&gt; と同じように扱われます。</target>
        </trans-unit>
        <trans-unit id="962e7405ade926a43a02d49216368a102fe31670" translate="yes" xml:space="preserve">
          <source>By default, &lt;var&gt;tail&lt;/var&gt; is &lt;code&gt;&quot;lower&quot;&lt;/code&gt; and the incomplete beta function integrated from 0 to &lt;var&gt;x&lt;/var&gt; is computed. If &lt;var&gt;tail&lt;/var&gt; is &lt;code&gt;&quot;upper&quot;&lt;/code&gt; then the complementary function integrated from &lt;var&gt;x&lt;/var&gt; to 1 is calculated. The two choices are related by</source>
          <target state="translated">デフォルトでは、 &lt;var&gt;tail&lt;/var&gt; は &lt;code&gt;&quot;lower&quot;&lt;/code&gt; あり、0から &lt;var&gt;x&lt;/var&gt; まで積分された不完全ベータ関数が計算されます。場合 &lt;var&gt;tail&lt;/var&gt; である &lt;code&gt;&quot;upper&quot;&lt;/code&gt; 、次いでから集積相補関数 &lt;var&gt;x&lt;/var&gt; 1が計算されます。2つの選択肢は、</target>
        </trans-unit>
        <trans-unit id="8fda712be761f4b66125d33d2d184d2fdcabba1f" translate="yes" xml:space="preserve">
          <source>By default, &lt;var&gt;tail&lt;/var&gt; is &lt;code&gt;&quot;lower&quot;&lt;/code&gt; and the incomplete gamma function integrated from 0 to &lt;var&gt;x&lt;/var&gt; is computed. If &lt;var&gt;tail&lt;/var&gt; is &lt;code&gt;&quot;upper&quot;&lt;/code&gt; then the complementary function integrated from &lt;var&gt;x&lt;/var&gt; to infinity is calculated.</source>
          <target state="translated">デフォルトでは、 &lt;var&gt;tail&lt;/var&gt; は &lt;code&gt;&quot;lower&quot;&lt;/code&gt; 、0から &lt;var&gt;x&lt;/var&gt; まで積分された不完全なガンマ関数が計算されます。場合は &lt;var&gt;tail&lt;/var&gt; ある &lt;code&gt;&quot;upper&quot;&lt;/code&gt; 、その後から統合補完機能 &lt;var&gt;x&lt;/var&gt; 無限大には計算されます。</target>
        </trans-unit>
        <trans-unit id="77aaf68055c6e56c3400b712e43ffbc0c79469a0" translate="yes" xml:space="preserve">
          <source>By default, &lt;var&gt;tail&lt;/var&gt; is &lt;code&gt;&quot;lower&quot;&lt;/code&gt; and the inverse of the incomplete beta function integrated from 0 to &lt;var&gt;x&lt;/var&gt; is computed. If &lt;var&gt;tail&lt;/var&gt; is &lt;code&gt;&quot;upper&quot;&lt;/code&gt; then the complementary function integrated from &lt;var&gt;x&lt;/var&gt; to 1 is inverted.</source>
          <target state="translated">デフォルトでは、 &lt;var&gt;tail&lt;/var&gt; は &lt;code&gt;&quot;lower&quot;&lt;/code&gt; なり、0から &lt;var&gt;x&lt;/var&gt; に積分された不完全ベータ関数の逆が計算されます。場合は &lt;var&gt;tail&lt;/var&gt; ある &lt;code&gt;&quot;upper&quot;&lt;/code&gt; 、その後から統合補完機能 &lt;var&gt;x&lt;/var&gt; 1には反転しています。</target>
        </trans-unit>
        <trans-unit id="960e5788edd8f03b5140d1f398117baa0b86b060" translate="yes" xml:space="preserve">
          <source>By default, &lt;var&gt;tail&lt;/var&gt; is &lt;code&gt;&quot;lower&quot;&lt;/code&gt; and the inverse of the incomplete gamma function integrated from 0 to &lt;var&gt;x&lt;/var&gt; is computed. If &lt;var&gt;tail&lt;/var&gt; is &lt;code&gt;&quot;upper&quot;&lt;/code&gt;, then the complementary function integrated from &lt;var&gt;x&lt;/var&gt; to infinity is inverted.</source>
          <target state="translated">デフォルトでは、 &lt;var&gt;tail&lt;/var&gt; は &lt;code&gt;&quot;lower&quot;&lt;/code&gt; 、0から &lt;var&gt;x&lt;/var&gt; に積分された不完全なガンマ関数の逆が計算されます。 &lt;var&gt;tail&lt;/var&gt; が &lt;code&gt;&quot;upper&quot;&lt;/code&gt; の場合、 &lt;var&gt;x&lt;/var&gt; から無限大に積分される相補関数が反転されます。</target>
        </trans-unit>
        <trans-unit id="27ad8a664f24c5645d584b7da4b1e8d378a867b2" translate="yes" xml:space="preserve">
          <source>By default, &lt;var&gt;y&lt;/var&gt; is automatically normalized to the range [-1, 1]. If the range [&lt;var&gt;ymin&lt;/var&gt;, &lt;var&gt;ymax&lt;/var&gt;] is given, then elements of &lt;var&gt;y&lt;/var&gt; that fall within the range &lt;var&gt;ymin&lt;/var&gt; &amp;le; &lt;var&gt;y&lt;/var&gt; &amp;le; &lt;var&gt;ymax&lt;/var&gt; are scaled to the range [-1, 1] instead.</source>
          <target state="translated">デフォルトでは、 &lt;var&gt;y&lt;/var&gt; は自動的に範囲[-1、1]に正規化されます。範囲[場合 &lt;var&gt;ymin&lt;/var&gt; 、 &lt;var&gt;ymax&lt;/var&gt; ]が与えられ、その後の要素 &lt;var&gt;y&lt;/var&gt; が範囲内に入るその &lt;var&gt;ymin&lt;/var&gt; &amp;le; &lt;var&gt;y&lt;/var&gt; &amp;le; &lt;var&gt;ymax&lt;/var&gt; 範囲にスケーリングされた[-1、1]の代わりに。</target>
        </trans-unit>
        <trans-unit id="99f84dc3782311b359b3fffc87181c379a31df75" translate="yes" xml:space="preserve">
          <source>By default, Octave displays 5 significant digits in a human readable form (option &amp;lsquo;</source>
          <target state="translated">デフォルトでは、Octaveは5桁の有効数字を人間が読める形式で表示します（オプション '</target>
        </trans-unit>
        <trans-unit id="05063acf2fe1c0cb572eb7c9e74c0154d501fcb0" translate="yes" xml:space="preserve">
          <source>By default, Octave refreshes the plot window when a prompt is printed, or when waiting for input. The &lt;code&gt;drawnow&lt;/code&gt; function is used to cause a plot window to be updated.</source>
          <target state="translated">デフォルトでは、プロンプトが出力されたとき、または入力を待っているときに、Octaveはプロットウィンドウを更新します。 &lt;code&gt;drawnow&lt;/code&gt; 機能は、プロットウィンドウが更新させるために使用されます。</target>
        </trans-unit>
        <trans-unit id="9992b8aea62671d12e43172ccacc3f47113d0b07" translate="yes" xml:space="preserve">
          <source>By default, Octave&amp;rsquo;s image IO functions (&lt;code&gt;imread&lt;/code&gt;, &lt;code&gt;imwrite&lt;/code&gt;, and &lt;code&gt;imfinfo&lt;/code&gt;) use the &lt;code&gt;GraphicsMagick&lt;/code&gt; library for their operations. This means a vast number of image formats is supported but considering the large amount of image formats in science and its commonly closed nature, it is impossible to have a library capable of reading them all. Because of this, the function &lt;code&gt;imformats&lt;/code&gt; keeps a configurable list of available formats, their extensions, and what functions should the image IO functions use. This allows one to expand Octave&amp;rsquo;s image IO capabilities by creating functions aimed at acting on specific file formats.</source>
          <target state="translated">デフォルトでは、OctaveのイメージIO関数（ &lt;code&gt;imread&lt;/code&gt; 、 &lt;code&gt;imwrite&lt;/code&gt; 、および &lt;code&gt;imfinfo&lt;/code&gt; ）は、操作に &lt;code&gt;GraphicsMagick&lt;/code&gt; ライブラリを使用します。これは、膨大な数の画像フォーマットがサポートされていることを意味しますが、科学における大量の画像フォーマットとその一般的な閉鎖性を考慮すると、それらすべてを読み取ることができるライブラリーを持つことは不可能です。このため、関数 &lt;code&gt;imformats&lt;/code&gt; は、使用可能な形式、それらの拡張子、およびイメージIO関数が使用する必要がある関数の構成可能なリストを保持します。これにより、特定のファイル形式で動作することを目的とした関数を作成することにより、OctaveのイメージIO機能を拡張できます。</target>
        </trans-unit>
        <trans-unit id="21de4a7ffd6af095ca4fad3f748e62bc3d65fda2" translate="yes" xml:space="preserve">
          <source>By default, PDF inherits the same limitations as PostScript. For an enhanced output with complete text support and basic transparency, use the</source>
          <target state="translated">デフォルトでは、PDF は PostScript と同じ制限を継承します。完全なテキストサポートと基本的な透過性を備えた強化された出力には</target>
        </trans-unit>
        <trans-unit id="a90b2e0839829076fd1af76568f267aa7e4d66fc" translate="yes" xml:space="preserve">
          <source>By default, all contours are labeled. However, the contours to label can be specified by the vector &lt;var&gt;v&lt;/var&gt;. If the &lt;code&gt;&quot;manual&quot;&lt;/code&gt; argument is given then the contours to label can be selected with the mouse.</source>
          <target state="translated">デフォルトでは、すべての等高線にラベルが付けられます。ただし、ラベルを付ける等高線は、ベクトル &lt;var&gt;v&lt;/var&gt; で指定できます。場合は &lt;code&gt;&quot;manual&quot;&lt;/code&gt; 引数が指定されたラベルの輪郭をマウスで選択することができます。</target>
        </trans-unit>
        <trans-unit id="34d9754aafa7435658c5a76b6aff00e485aba87d" translate="yes" xml:space="preserve">
          <source>By default, configure looks for the best &lt;small&gt;BLAS&lt;/small&gt; matrix libraries on your system, including optimized implementations such as the free ATLAS 3.0, as well as vendor-tuned libraries. (The use of an optimized &lt;small&gt;BLAS&lt;/small&gt; will generally result in several-times faster matrix operations.) Use this option to specify a particular &lt;small&gt;BLAS&lt;/small&gt; library that Octave should use.</source>
          <target state="translated">デフォルトでは、configureは、無料のATLAS 3.0などの最適化された実装やベンダー調整ライブラリを含む、システムで最高の&lt;small&gt;BLAS&lt;/small&gt;マトリックスライブラリを探します。（通常、最適化された&lt;small&gt;BLAS&lt;/small&gt;を使用すると、行列演算が数倍高速になります。）このオプションを使用して、Octaveが使用する特定の&lt;small&gt;BLAS&lt;/small&gt;ライブラリを指定します。</target>
        </trans-unit>
        <trans-unit id="705ae32b51a1b1945fa2fc7ac0aaae142c0de76d" translate="yes" xml:space="preserve">
          <source>By default, configure looks for the best &lt;small&gt;LAPACK&lt;/small&gt; matrix libraries on your system, including optimized implementations such as the free ATLAS 3.0, as well as vendor-tuned libraries. (The use of an optimized &lt;small&gt;LAPACK&lt;/small&gt; will generally result in several-times faster matrix operations.) Use this option to specify a particular &lt;small&gt;LAPACK&lt;/small&gt; library that Octave should use.</source>
          <target state="translated">デフォルトでは、configureは、無料のATLAS 3.0などの最適化された実装やベンダーが調整したライブラリなど、システム上で最適な&lt;small&gt;LAPACK&lt;/small&gt;マトリックスライブラリを探します。（最適化された&lt;small&gt;LAPACK&lt;/small&gt;を使用すると、通常、行列演算が数倍高速になります。）このオプションを使用して、Octaveが使用する特定の&lt;small&gt;LAPACK&lt;/small&gt;ライブラリーを指定します。</target>
        </trans-unit>
        <trans-unit id="6ca2e87d532774d938b9da16a847665c9e9163ab" translate="yes" xml:space="preserve">
          <source>By default, dimensions of the empty matrix are printed along with the empty matrix symbol, &amp;lsquo;</source>
          <target state="translated">デフォルトでは、空行列の次元は、空行列記号 'とともに印刷されます。</target>
        </trans-unit>
        <trans-unit id="b6816a83578a0690161e75de3a0d133670e8ab9a" translate="yes" xml:space="preserve">
          <source>By default, high level plotting functions such as &lt;code&gt;plot&lt;/code&gt; reset and redefine axes properties independently from the defaults. An example of such property is the axes &lt;code&gt;box&lt;/code&gt; property: it is set &lt;code&gt;on&lt;/code&gt; by high level 2-D graphics functions regardless of the property &lt;code&gt;&quot;defaultaxesbox&quot;&lt;/code&gt;. Use the &lt;code&gt;hold&lt;/code&gt; function to prevent this behavior:</source>
          <target state="translated">既定では、 &lt;code&gt;plot&lt;/code&gt; などの高レベルのプロット関数は、デフォルトとは独立して軸のプロパティをリセットおよび再定義します。そのようなプロパティの例は、Axes &lt;code&gt;box&lt;/code&gt; プロパティです。これは、プロパティ &lt;code&gt;&quot;defaultaxesbox&quot;&lt;/code&gt; に関係なく、高レベルの2次元グラフィックス関数によって設定 &lt;code&gt;on&lt;/code&gt; れます。この動作を防ぐには、 &lt;code&gt;hold&lt;/code&gt; 機能を使用します。</target>
        </trans-unit>
        <trans-unit id="671bfd99983ad0f62c56aee5bdaaef606eaba638" translate="yes" xml:space="preserve">
          <source>By default, if there is only one input argument, &lt;var&gt;format&lt;/var&gt; is</source>
          <target state="translated">デフォルトでは、入力引数が1つしかない場合、 &lt;var&gt;format&lt;/var&gt; は</target>
        </trans-unit>
        <trans-unit id="4c8ab8ebab05f4de3892eb2b5a0cd876413a08d3" translate="yes" xml:space="preserve">
          <source>By default, in the example &lt;var&gt;prop4&lt;/var&gt;, properties are not constant and have public read and write access.</source>
          <target state="translated">デフォルトでは、例の &lt;var&gt;prop4&lt;/var&gt; では、プロパティは一定ではなく、パブリックの読み取りおよび書き込みアクセス権を持っています。</target>
        </trans-unit>
        <trans-unit id="3cd04ebbeb34449f4ca033db3c8023f7e5f6a6ea" translate="yes" xml:space="preserve">
          <source>By default, integers are read as 32-bit quantities. With the &amp;lsquo;</source>
          <target state="translated">デフォルトでは、整数は32ビット量として読み取られます。とともに '</target>
        </trans-unit>
        <trans-unit id="a778586cc92007126dab49bd24000a45ad2eff82" translate="yes" xml:space="preserve">
          <source>By default, only variables visible in the local scope are displayed.</source>
          <target state="translated">デフォルトでは、ローカルスコープで表示される変数のみが表示されます。</target>
        </trans-unit>
        <trans-unit id="d002bc66f22ec4aab067d6f7808f3cfa269450c3" translate="yes" xml:space="preserve">
          <source>By default, recognized file types are</source>
          <target state="translated">デフォルトでは、認識されるファイルタイプは</target>
        </trans-unit>
        <trans-unit id="49f69b060c5ed1ed2a65a686a7f1152fe8a92811" translate="yes" xml:space="preserve">
          <source>By default, return an empty string if the &lt;var&gt;n&lt;/var&gt;-th argument is not a valid variable name. If the optional argument &lt;var&gt;ids_only&lt;/var&gt; is false, return the text of the argument even if it is not a valid variable name.</source>
          <target state="translated">デフォルトでは、 &lt;var&gt;n&lt;/var&gt; 番目の引数が有効な変数名でない場合は空の文字列を返します。オプションの引数 &lt;var&gt;ids_only&lt;/var&gt; がfalseの場合、有効な変数名でなくても、引数のテキストを返します。</target>
        </trans-unit>
        <trans-unit id="903f4f5babb2c841da82c2520f28144fbb2488e7" translate="yes" xml:space="preserve">
          <source>By default, the &lt;code&gt;&quot;closerequestfcn&quot;&lt;/code&gt; property of a new plot figure points to this function.</source>
          <target state="translated">デフォルトでは、新しいプロット図の &lt;code&gt;&quot;closerequestfcn&quot;&lt;/code&gt; プロパティはこの関数を指します。</target>
        </trans-unit>
        <trans-unit id="53f66db3502863ae4dd3d11c7110cc7b185b83dd" translate="yes" xml:space="preserve">
          <source>By default, the &lt;code&gt;Octave:abbreviated-property-match&lt;/code&gt; warning is enabled.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;Octave:abbreviated-property-match&lt;/code&gt; 警告が有効になっています。</target>
        </trans-unit>
        <trans-unit id="332aa18004c12617323ed812f41a8b94880dfa78" translate="yes" xml:space="preserve">
          <source>By default, the &lt;code&gt;Octave:assign-as-truth-value&lt;/code&gt; warning is enabled.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;Octave:assign-as-truth-value&lt;/code&gt; 警告が有効になっています。</target>
        </trans-unit>
        <trans-unit id="0d79b932ac250e11cad8e0baeaae0e1a5f807d69" translate="yes" xml:space="preserve">
          <source>By default, the &lt;code&gt;Octave:built-in-variable-assignment&lt;/code&gt; warning is enabled.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;Octave:built-in-variable-assignment&lt;/code&gt; 警告が有効になっています。</target>
        </trans-unit>
        <trans-unit id="83aa9346bf7eb6dabc6891a94ca3f1d13e9f2ada" translate="yes" xml:space="preserve">
          <source>By default, the &lt;code&gt;Octave:glyph-render&lt;/code&gt; warning is enabled.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;Octave:glyph-render&lt;/code&gt; 警告は有効になっています。</target>
        </trans-unit>
        <trans-unit id="fbe06b60aa6cc0728710e1111b011062dec73da2" translate="yes" xml:space="preserve">
          <source>By default, the &lt;code&gt;Octave:logical-conversion&lt;/code&gt; warning is enabled.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;Octave:logical-conversion&lt;/code&gt; 警告は有効になっています。</target>
        </trans-unit>
        <trans-unit id="38ec8bc6aecb9ef8458702bea5a486faa9dd7324" translate="yes" xml:space="preserve">
          <source>By default, the &lt;code&gt;Octave:missing-glyph&lt;/code&gt; warning is enabled.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;Octave:missing-glyph&lt;/code&gt; 警告は有効になっています。</target>
        </trans-unit>
        <trans-unit id="863d3f4558135a7d484b08579eb4d1f2c580920d" translate="yes" xml:space="preserve">
          <source>By default, the &lt;code&gt;Octave:neg-dim-as-zero&lt;/code&gt; warning is disabled.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;Octave:neg-dim-as-zero&lt;/code&gt; 警告は無効になっています。</target>
        </trans-unit>
        <trans-unit id="88c1718bdd9aeaa3071ee3a4bbc60e2da024a065" translate="yes" xml:space="preserve">
          <source>By default, the &lt;code&gt;Octave:nested-functions-coerced&lt;/code&gt; warning is enabled.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;Octave:nested-functions-coerced&lt;/code&gt; 警告が有効になっています。</target>
        </trans-unit>
        <trans-unit id="bc31875ba86dec477a9d9822f3a870c3b5668982" translate="yes" xml:space="preserve">
          <source>By default, the &lt;code&gt;Octave:noninteger-range-as-index&lt;/code&gt; warning is enabled.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;Octave:noninteger-range-as-index&lt;/code&gt; 警告が有効になっています。</target>
        </trans-unit>
        <trans-unit id="6ba074f81796bab81d04489e79994a5f8786ac29" translate="yes" xml:space="preserve">
          <source>By default, the &lt;code&gt;Octave:recursive-path-search&lt;/code&gt; warning is enabled.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;Octave:recursive-path-search&lt;/code&gt; 警告は有効になっています。</target>
        </trans-unit>
        <trans-unit id="609a28d01f6efc0ff571b55dd83d004da305eb7f" translate="yes" xml:space="preserve">
          <source>By default, the &lt;code&gt;Octave:shadowed-function&lt;/code&gt; warning is enabled.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;Octave:shadowed-function&lt;/code&gt; 警告が有効になっています。</target>
        </trans-unit>
        <trans-unit id="f5fb7de433e437c3badc922d3019334ebf403252" translate="yes" xml:space="preserve">
          <source>By default, the &lt;code&gt;Octave:sqrtm:SingularMatrix&lt;/code&gt; warning is enabled.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;Octave:sqrtm:SingularMatrix&lt;/code&gt; 警告は有効になっています。</target>
        </trans-unit>
        <trans-unit id="c14280ad33dcc143fb9089c26ad09de0daf18b09" translate="yes" xml:space="preserve">
          <source>By default, the camera is oriented so that &amp;ldquo;up&amp;rdquo; corresponds to the positive z-axis:</source>
          <target state="translated">デフォルトでは、カメラは「上」が正のz軸に対応するように向けられています。</target>
        </trans-unit>
        <trans-unit id="a9c6919b997095d5b36131a897e4c0a83ae76d24" translate="yes" xml:space="preserve">
          <source>By default, the generator is initialized from &lt;code&gt;/dev/urandom&lt;/code&gt; if it is available, otherwise from CPU time, wall clock time, and the current fraction of a second. Note that this differs from &lt;small&gt;MATLAB&lt;/small&gt;, which always initializes the state to the same state at startup. To obtain behavior comparable to &lt;small&gt;MATLAB&lt;/small&gt;, initialize with a deterministic state vector in Octave&amp;rsquo;s startup files (see &lt;a href=&quot;startup-files#Startup-Files&quot;&gt;Startup Files&lt;/a&gt;).</source>
          <target state="translated">デフォルトでは、ジェネレーターは &lt;code&gt;/dev/urandom&lt;/code&gt; （使用可能な場合）から初期化されます。それ以外の場合は、CPU時間、実時間、および現在の秒の小数部分から初期化されます。これは、起動時に常に状態を同じ状態に初期化する&lt;small&gt;MATLAB&lt;/small&gt;とは異なることに注意してください。&lt;small&gt;MATLAB&lt;/small&gt;と同等の動作を得るには、Octaveのスタートアップファイルで確定的な状態ベクトルで初期化します（「&lt;a href=&quot;startup-files#Startup-Files&quot;&gt;スタートアップファイル」を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="f47378aa96931f9ba6708afb4f2c89fa56e1321d" translate="yes" xml:space="preserve">
          <source>By default, the input array is interpreted as a hexadecimal number representing a double precision value. If fewer than 16 characters are given the strings are right padded with &lt;code&gt;'0'&lt;/code&gt; characters.</source>
          <target state="translated">デフォルトでは、入力配列は倍精度値を表す16進数として解釈されます。16文字未満が指定された場合、文字列は &lt;code&gt;'0'&lt;/code&gt; 文字で右側が埋め込まれます。</target>
        </trans-unit>
        <trans-unit id="176a5672060ec46f89dea6759cd36615efb0a697" translate="yes" xml:space="preserve">
          <source>By default, the option</source>
          <target state="translated">デフォルトでは</target>
        </trans-unit>
        <trans-unit id="83a5fcdb9f3c330ee418cac02ea34df92f250c8a" translate="yes" xml:space="preserve">
          <source>By default, these commands affect the current axis; alternatively, an axis can be specified by the optional argument &lt;var&gt;ax&lt;/var&gt;.</source>
          <target state="translated">デフォルトでは、これらのコマンドは現在の軸に影響します。または、オプションの引数 &lt;var&gt;ax&lt;/var&gt; で軸を指定することもできます。</target>
        </trans-unit>
        <trans-unit id="3803a40c878156f4d9d1817b93326275e04f6f01" translate="yes" xml:space="preserve">
          <source>By default, this command affects the current axis; alternatively, an axis can be specified by the optional argument &lt;var&gt;hax&lt;/var&gt;.</source>
          <target state="translated">デフォルトでは、このコマンドは現在の軸に影響します。または、オプションの引数 &lt;var&gt;hax&lt;/var&gt; で軸を指定することもできます。</target>
        </trans-unit>
        <trans-unit id="8a45cdc61d443f1d99e6a8e08a1a5cac63e13810" translate="yes" xml:space="preserve">
          <source>ByteOrder</source>
          <target state="translated">ByteOrder</target>
        </trans-unit>
        <trans-unit id="8e5fdab92dece79d7629d6d901687613ddc6ab5a" translate="yes" xml:space="preserve">
          <source>Bytes</source>
          <target state="translated">Bytes</target>
        </trans-unit>
        <trans-unit id="32096c2e0eff33d844ee6d675407ace18289357d" translate="yes" xml:space="preserve">
          <source>C</source>
          <target state="translated">C</target>
        </trans-unit>
        <trans-unit id="0bc3ee1876a596878e3b6f64a584499448527564" translate="yes" xml:space="preserve">
          <source>C = bitset (A, n)</source>
          <target state="translated">C=ビットセット(A,n</target>
        </trans-unit>
        <trans-unit id="6a14e061408d2bf9ce4fa57907726c8da1da7eb6" translate="yes" xml:space="preserve">
          <source>C = bitset (A, n, val)</source>
          <target state="translated">C=ビットセット (A,n,val)</target>
        </trans-unit>
        <trans-unit id="e49d4ba5e4f8e74b8eccb88ded467291b3d8cdea" translate="yes" xml:space="preserve">
          <source>C = convn (A, B)</source>
          <target state="translated">C=convn(A,B</target>
        </trans-unit>
        <trans-unit id="2ee56f1597039f0b9837b8eacbd7f39c2bc0e447" translate="yes" xml:space="preserve">
          <source>C = convn (A, B, shape)</source>
          <target state="translated">C=convn(A,B,形状</target>
        </trans-unit>
        <trans-unit id="a9cff0dea4c5615f3d244f70fc41d49a166f30d0" translate="yes" xml:space="preserve">
          <source>C = mat2cell (A, dim1, dim2, &amp;hellip;, dimi, &amp;hellip;, dimn)</source>
          <target state="translated">C = mat2cell（A、dim1、dim2、&amp;hellip;、dimi、&amp;hellip;、dimn）</target>
        </trans-unit>
        <trans-unit id="eff896167a3787020f945f29769f29ee26792001" translate="yes" xml:space="preserve">
          <source>C = mat2cell (A, rowdim)</source>
          <target state="translated">C=mat2cell(A,rowdim</target>
        </trans-unit>
        <trans-unit id="6d5936ed6831a60d9118acd6694b3c622d5cc3a3" translate="yes" xml:space="preserve">
          <source>C = num2cell (A)</source>
          <target state="translated">C=num2cell(A</target>
        </trans-unit>
        <trans-unit id="aee17e6afe750b9904c9af574c8dcf51e245e12c" translate="yes" xml:space="preserve">
          <source>C = num2cell (A, dim)</source>
          <target state="translated">C=num2cell (A,dim)</target>
        </trans-unit>
        <trans-unit id="c2ff6b3bd4be98cd506086c628c6692a3c32651f" translate="yes" xml:space="preserve">
          <source>C = pol2cart (&amp;hellip;)</source>
          <target state="translated">C = pol2cart（&amp;hellip;）</target>
        </trans-unit>
        <trans-unit id="91ad1dcb0e3c947d73baf8f19711b26e69e8ffee" translate="yes" xml:space="preserve">
          <source>C = sph2cart (&amp;hellip;)</source>
          <target state="translated">C = sph2cart（&amp;hellip;）</target>
        </trans-unit>
        <trans-unit id="dc6905c704e24a018f82d99af5a9d4f63edd339b" translate="yes" xml:space="preserve">
          <source>C = textscan (fid, format)</source>
          <target state="translated">C=テキストスキャン (fid、フォーマット)</target>
        </trans-unit>
        <trans-unit id="c74328f8d7d2c9eb405920deafc77f983d267db9" translate="yes" xml:space="preserve">
          <source>C = textscan (fid, format, param, value, &amp;hellip;)</source>
          <target state="translated">C = textscan（fid、format、param、value、&amp;hellip;）</target>
        </trans-unit>
        <trans-unit id="5330c52434a7a542d487b2fefe26a4e93bf25efd" translate="yes" xml:space="preserve">
          <source>C = textscan (fid, format, repeat)</source>
          <target state="translated">C=テキストスキャン (fid、フォーマット、リピート)</target>
        </trans-unit>
        <trans-unit id="1e860ebaeca49904601901c0a83c1d94888d6d51" translate="yes" xml:space="preserve">
          <source>C = textscan (fid, format, repeat, param, value, &amp;hellip;)</source>
          <target state="translated">C = textscan（fid、format、repeat、param、value、&amp;hellip;）</target>
        </trans-unit>
        <trans-unit id="0ec7dec0586e51e6953d05dbeca4355dde4cff31" translate="yes" xml:space="preserve">
          <source>C = textscan (str, &amp;hellip;)</source>
          <target state="translated">C = textscan（str、&amp;hellip;）</target>
        </trans-unit>
        <trans-unit id="b3779eb92018083a391f9b20829772ba736116c7" translate="yes" xml:space="preserve">
          <source>C = who (&quot;pattern&quot;, &amp;hellip;)</source>
          <target state="translated">C =だれ（ &quot;パターン&quot;、&amp;hellip;）</target>
        </trans-unit>
        <trans-unit id="80bcac8adff318084c8e98ed8e46417354a83b80" translate="yes" xml:space="preserve">
          <source>C++, C, and Fortran compilers</source>
          <target state="translated">C++、C、Fortran コンパイラ</target>
        </trans-unit>
        <trans-unit id="17c711c5f24857e82930fb87a0780c4e69756903" translate="yes" xml:space="preserve">
          <source>C-/</source>
          <target state="translated">C-/</target>
        </trans-unit>
        <trans-unit id="84a189415a8ed8940815fea4b9d77692a6ff22eb" translate="yes" xml:space="preserve">
          <source>C-Style I/O Functions</source>
          <target state="translated">C-スタイルI/O機能</target>
        </trans-unit>
        <trans-unit id="5ec9d3dadc7abaeb1f5f16db2365b2aeb6a2f74b" translate="yes" xml:space="preserve">
          <source>C-_</source>
          <target state="translated">C-_</target>
        </trans-unit>
        <trans-unit id="3bff8fb1aa290267671b1c50e3b32db24f00b295" translate="yes" xml:space="preserve">
          <source>C-a</source>
          <target state="translated">C-a</target>
        </trans-unit>
        <trans-unit id="c204a76fc3c1123c96b13dd7ec922d02d4b00e91" translate="yes" xml:space="preserve">
          <source>C-b</source>
          <target state="translated">C-b</target>
        </trans-unit>
        <trans-unit id="b3b7965656c0921692a30673d7781acd51c4eed9" translate="yes" xml:space="preserve">
          <source>C-c</source>
          <target state="translated">C-c</target>
        </trans-unit>
        <trans-unit id="1d8e75405de8be939b05db3eef9ab4daa516674d" translate="yes" xml:space="preserve">
          <source>C-d</source>
          <target state="translated">C-d</target>
        </trans-unit>
        <trans-unit id="a7ef1e89e28b60bd53a0a5ab746fbcd131fdf224" translate="yes" xml:space="preserve">
          <source>C-e</source>
          <target state="translated">C-e</target>
        </trans-unit>
        <trans-unit id="dd71d43937255c2ba419c077fa824865f8267186" translate="yes" xml:space="preserve">
          <source>C-f</source>
          <target state="translated">C-f</target>
        </trans-unit>
        <trans-unit id="a8d14a9f4bc55d9a8a84935ad37682321efb17a6" translate="yes" xml:space="preserve">
          <source>C-h</source>
          <target state="translated">C-h</target>
        </trans-unit>
        <trans-unit id="d5eeac2f32301e2b964f421e02a44c5afa000881" translate="yes" xml:space="preserve">
          <source>C-k</source>
          <target state="translated">C-k</target>
        </trans-unit>
        <trans-unit id="2fef5b5a274737535a312ecc5d6b8de717c1cb77" translate="yes" xml:space="preserve">
          <source>C-l</source>
          <target state="translated">C-l</target>
        </trans-unit>
        <trans-unit id="aa3408adf600065cf33c17971e8cdd9f76e5d785" translate="yes" xml:space="preserve">
          <source>C-n</source>
          <target state="translated">C-n</target>
        </trans-unit>
        <trans-unit id="332268c029d8126391ff9151361238bdf44870d8" translate="yes" xml:space="preserve">
          <source>C-p</source>
          <target state="translated">C-p</target>
        </trans-unit>
        <trans-unit id="1666955c646a9bb3fabdb2404112bd45b66ccb34" translate="yes" xml:space="preserve">
          <source>C-q</source>
          <target state="translated">C-q</target>
        </trans-unit>
        <trans-unit id="74b18abb702cb69395f60707416dd8e1f9e92a32" translate="yes" xml:space="preserve">
          <source>C-r</source>
          <target state="translated">C-r</target>
        </trans-unit>
        <trans-unit id="78540d990eb5e51e46b3d550d8999b517398872e" translate="yes" xml:space="preserve">
          <source>C-s</source>
          <target state="translated">C-s</target>
        </trans-unit>
        <trans-unit id="68b4cf03a08cd7bf7acc0d39d68cca6ef0f409f3" translate="yes" xml:space="preserve">
          <source>C-t</source>
          <target state="translated">C-t</target>
        </trans-unit>
        <trans-unit id="0a23d9de112f4305bbf7d308788b4615cc11e2a2" translate="yes" xml:space="preserve">
          <source>C-v</source>
          <target state="translated">C-v</target>
        </trans-unit>
        <trans-unit id="8e0be97e2cc76979d93e15014888863a6e79a7af" translate="yes" xml:space="preserve">
          <source>C-w</source>
          <target state="translated">C-w</target>
        </trans-unit>
        <trans-unit id="f286461016d3e4db77e8a575a1f55b2d71886961" translate="yes" xml:space="preserve">
          <source>C-y</source>
          <target state="translated">C-y</target>
        </trans-unit>
        <trans-unit id="acbbb692ba3dcc7f0dd54066ac8990ff1950dc9c" translate="yes" xml:space="preserve">
          <source>C-z</source>
          <target state="translated">C-z</target>
        </trans-unit>
        <trans-unit id="43180da43f2637477932872d2d5fc136913ff600" translate="yes" xml:space="preserve">
          <source>C.T. Kelley,</source>
          <target state="translated">C.T.ケリー</target>
        </trans-unit>
        <trans-unit id="45eeb8d006b7750ef8b9a5c95a126e79ee0a3130" translate="yes" xml:space="preserve">
          <source>C:\Octave\Octave-&lt;var&gt;version&lt;/var&gt;</source>
          <target state="translated">C:\Octave\Octave-&lt;var&gt;version&lt;/var&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
