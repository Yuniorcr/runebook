<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="27da418dc7160824d1f1cea0c0a27285c46f89f4" translate="yes" xml:space="preserve">
          <source>Looks like this:</source>
          <target state="translated">こんな感じです。</target>
        </trans-unit>
        <trans-unit id="3ccb11078ce15c4dd0a5f138c01c353d8c2f4351" translate="yes" xml:space="preserve">
          <source>Looks up ACCOUNT on SYSTEM and returns the domain name the SID and the SID type.</source>
          <target state="translated">ACCOUNTをSYSTEM上で検索し、ドメイン名のSIDとSIDタイプを返します。</target>
        </trans-unit>
        <trans-unit id="8f3ed7a3dfb53ef1d6f3759b748f942473d585fb" translate="yes" xml:space="preserve">
          <source>Looks up SID on SYSTEM and returns the account name, domain name, and the SID type.</source>
          <target state="translated">SYSTEM上のSIDを検索し、アカウント名、ドメイン名、およびSIDタイプを返します。</target>
        </trans-unit>
        <trans-unit id="4835cdf08a9f25eb81b07f89910dd3550584f529" translate="yes" xml:space="preserve">
          <source>Looks up the definition of a given &quot;DOS&quot; device name, yielding the active Windows NT native device name along with any currently dormant definitions.</source>
          <target state="translated">指定された &quot;DOS &quot;デバイス名の定義を検索し、アクティブなWindows NTネイティブデバイス名と現在休止中の定義を取得します。</target>
        </trans-unit>
        <trans-unit id="150d86722bc6a43c75ceadbe33863f7ae1a8f8cf" translate="yes" xml:space="preserve">
          <source>Looks up the type of the lexical variable at position</source>
          <target state="translated">位置にある語彙変数の型を調べます。</target>
        </trans-unit>
        <trans-unit id="998c8ddbb7e6740fa96f3b9ca124537de52289c1" translate="yes" xml:space="preserve">
          <source>Looks up the type of the lexical variable at position &lt;code&gt;po&lt;/code&gt; in the currently-compiling pad. If the variable is typed, the stash of the class to which it is typed is returned. If not, &lt;code&gt;NULL&lt;/code&gt; is returned.</source>
          <target state="translated">現在コンパイル中のパッドの位置 &lt;code&gt;po&lt;/code&gt; で字句変数のタイプを検索します。変数が入力された場合、変数が入力されたクラスのstashが返されます。そうでない場合は、 &lt;code&gt;NULL&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="7dba7dbb2ccc77afc11256e6171420abb3f68326" translate="yes" xml:space="preserve">
          <source>Lookup and return a reference to the entry for &lt;code&gt;MACHINE&lt;/code&gt; . If &lt;code&gt;LOGIN&lt;/code&gt; is given then the entry returned will have the given login. If &lt;code&gt;LOGIN&lt;/code&gt; is not given then the first entry in the .netrc file for &lt;code&gt;MACHINE&lt;/code&gt; will be returned.</source>
          <target state="translated">&lt;code&gt;MACHINE&lt;/code&gt; のエントリへの参照を検索して返します。場合は &lt;code&gt;LOGIN&lt;/code&gt; 与えられた後、返されたエントリは、与えられたログインを持つことになります。 &lt;code&gt;LOGIN&lt;/code&gt; が指定されていない場合、 &lt;code&gt;MACHINE&lt;/code&gt; の.netrcファイルの最初のエントリが返されます。</target>
        </trans-unit>
        <trans-unit id="65d5fef357946c73156ad1815637c8d7d629904a" translate="yes" xml:space="preserve">
          <source>Lookup and return a reference to the entry for &lt;code&gt;MACHINE&lt;/code&gt;. If &lt;code&gt;LOGIN&lt;/code&gt; is given then the entry returned will have the given login. If &lt;code&gt;LOGIN&lt;/code&gt; is not given then the first entry in the .netrc file for &lt;code&gt;MACHINE&lt;/code&gt; will be returned.</source>
          <target state="translated">&lt;code&gt;MACHINE&lt;/code&gt; のエントリへの参照を検索して返します。場合は &lt;code&gt;LOGIN&lt;/code&gt; 与えられた後、返されたエントリは、与えられたログインを持つことになります。 &lt;code&gt;LOGIN&lt;/code&gt; が指定されていない場合、 &lt;code&gt;MACHINE&lt;/code&gt; の.netrcファイルの最初のエントリが返されます。</target>
        </trans-unit>
        <trans-unit id="e27af5395111fe3fb113c2e3d566816c9450bb06" translate="yes" xml:space="preserve">
          <source>Lookup for connect()</source>
          <target state="translated">connect()の検索</target>
        </trans-unit>
        <trans-unit id="cfef537fd2855cc3dbc568fc189f69bf8fa670d8" translate="yes" xml:space="preserve">
          <source>Loop Control</source>
          <target state="translated">ループ制御</target>
        </trans-unit>
        <trans-unit id="4394b7785cf8e6687ab901e849d752a278fd046b" translate="yes" xml:space="preserve">
          <source>Loop control statements don't work in an &lt;code&gt;if&lt;/code&gt; or &lt;code&gt;unless&lt;/code&gt; , since they aren't loops. You can double the braces to make them such, though.</source>
          <target state="translated">ループ制御ステートメントは、ループではないため、 &lt;code&gt;if&lt;/code&gt; または &lt;code&gt;unless&lt;/code&gt; で機能しません。ただし、中かっこを2倍にしてそのようにすることもできます。</target>
        </trans-unit>
        <trans-unit id="48c6bd9b37d87812f90fc0d2ca6f3d53c5a09810" translate="yes" xml:space="preserve">
          <source>Loop control statements don't work in an &lt;code&gt;if&lt;/code&gt; or &lt;code&gt;unless&lt;/code&gt;, since they aren't loops. You can double the braces to make them such, though.</source>
          <target state="translated">ループ制御ステートメントは、ループではないため、 &lt;code&gt;if&lt;/code&gt; または &lt;code&gt;unless&lt;/code&gt; では機能しません。ただし、中括弧を2倍にして、そのようにすることができます。</target>
        </trans-unit>
        <trans-unit id="ee5406a6fab87283992041afaf3d98b63358ce87" translate="yes" xml:space="preserve">
          <source>Losing Overloading</source>
          <target state="translated">負けのオーバーロード</target>
        </trans-unit>
        <trans-unit id="255b929d8a79cd2d34f3195e7105f962e8ff4cfe" translate="yes" xml:space="preserve">
          <source>Loss of information</source>
          <target state="translated">情報の喪失</target>
        </trans-unit>
        <trans-unit id="0af71f661f40a0d4f6c6a167f0b101bbfc974cb4" translate="yes" xml:space="preserve">
          <source>Lost precision when %s %f by 1</source>
          <target state="translated">s %s %f が 1 のとき、精度が失われました。</target>
        </trans-unit>
        <trans-unit id="cfc0d37079134dcffb425a52ede17bc5bc48e470" translate="yes" xml:space="preserve">
          <source>Lots of junk will go past as gdb reads in the relevant source files and libraries, and then:</source>
          <target state="translated">gdbが関連するソースファイルやライブラリを読み込んでいるうちに、多くのジャンクが通り過ぎてしまいます。</target>
        </trans-unit>
        <trans-unit id="cbf5af644412cf3c7e29c07a134f4f07b457d268" translate="yes" xml:space="preserve">
          <source>Lots of this documentation is duplicated from &lt;a href=&quot;Pod::Man&quot;&gt;Pod::Man&lt;/a&gt;.</source>
          <target state="translated">このドキュメントの多くは、&lt;a href=&quot;Pod::Man&quot;&gt;Pod :: Man&lt;/a&gt;から複製されています。</target>
        </trans-unit>
        <trans-unit id="085dc9408c5b1c58693c372e333c4354a4cec51f" translate="yes" xml:space="preserve">
          <source>Lots of this documentation is duplicated from &lt;a href=&quot;pod/man&quot;&gt;Pod::Man&lt;/a&gt;.</source>
          <target state="translated">このドキュメントの多くは、&lt;a href=&quot;pod/man&quot;&gt;Pod :: Man&lt;/a&gt;から複製されたものです。</target>
        </trans-unit>
        <trans-unit id="ab1f1ddd535328223bedffdfeaa44f30147b00a6" translate="yes" xml:space="preserve">
          <source>Lots. See</source>
          <target state="translated">たくさん 見てください</target>
        </trans-unit>
        <trans-unit id="05699eeb34507ef8b7729483cad54f68e5da82dd" translate="yes" xml:space="preserve">
          <source>Low-Level Interface to bzip2 compression library</source>
          <target state="translated">bzip2 圧縮ライブラリへの低レベルなインタフェース</target>
        </trans-unit>
        <trans-unit id="daa6640df64c8d3fd04d48a86e9c6104202745fc" translate="yes" xml:space="preserve">
          <source>Low-Level Interface to zlib compression library</source>
          <target state="translated">zlib 圧縮ライブラリへの低レベルなインタフェース</target>
        </trans-unit>
        <trans-unit id="a0c4ed2cdac85f3556324d12104692afb5867488" translate="yes" xml:space="preserve">
          <source>Low-level File Opens via sysopen</source>
          <target state="translated">低レベルのファイルを sysopen で開く</target>
        </trans-unit>
        <trans-unit id="bbbd1cb27a00deeb8c66f6ae061bb29e0862f1bd" translate="yes" xml:space="preserve">
          <source>Low-level access to Win32 system API calls for files/dirs.</source>
          <target state="translated">ファイル/ディレクトリのWin32システムAPIコールへの低レベルアクセス。</target>
        </trans-unit>
        <trans-unit id="e8c85a684a62b80d06983e6e12e35335310bc09b" translate="yes" xml:space="preserve">
          <source>Low-level layer that calls &lt;code&gt;&lt;a href=&quot;functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;lseek&lt;/code&gt; , etc.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;lseek&lt;/code&gt; などを呼び出す低レベルのレイヤー</target>
        </trans-unit>
        <trans-unit id="7f89e9304454a9ca27d4f058ae1ff5cae7d7d44b" translate="yes" xml:space="preserve">
          <source>Low-level layer that calls &lt;code&gt;read&lt;/code&gt;, &lt;code&gt;write&lt;/code&gt;, &lt;code&gt;lseek&lt;/code&gt;, etc.</source>
          <target state="translated">&lt;code&gt;read&lt;/code&gt; 、 &lt;code&gt;write&lt;/code&gt; 、 &lt;code&gt;lseek&lt;/code&gt; などを呼び出す低レベルのレイヤー。</target>
        </trans-unit>
        <trans-unit id="55c868659706d4acf0f9a3d5d20af059cb10c22a" translate="yes" xml:space="preserve">
          <source>Low-level socket functions</source>
          <target state="translated">低レベルソケット機能</target>
        </trans-unit>
        <trans-unit id="abf8ce4a5f4a2b06b346bb8ef9b168681a52fab2" translate="yes" xml:space="preserve">
          <source>Lowercase_Letter</source>
          <target state="translated">Lowercase_Letter</target>
        </trans-unit>
        <trans-unit id="a99d83c11e02cb19d312201ee35e6930d1ab9ee1" translate="yes" xml:space="preserve">
          <source>Lowers the reference count of the pad name list.</source>
          <target state="translated">パッド名リストの参照カウントを下げます。</target>
        </trans-unit>
        <trans-unit id="1b905a464c50eff889d1fabd4387275f0c86db4f" translate="yes" xml:space="preserve">
          <source>Lowers the reference count of the pad name.</source>
          <target state="translated">パッド名の参照カウントを下げます。</target>
        </trans-unit>
        <trans-unit id="64d41b1df2cdae534f1fdacc800338a809f214c6" translate="yes" xml:space="preserve">
          <source>Lowest level layer which provides basic PerlIO operations in terms of UNIX/POSIX numeric file descriptor calls (open(), read(), write(), lseek(), close()).</source>
          <target state="translated">UNIX/POSIX数値ファイル記述子呼び出し(open(),read(),write(),lseek(),close()の観点からPerlIOの基本的な操作を提供する最下層。)</target>
        </trans-unit>
        <trans-unit id="46baacdecc30fd8131a5c1a06a482d538e74c4c5" translate="yes" xml:space="preserve">
          <source>Lowest level layer which provides basic PerlIO operations in terms of UNIX/POSIX numeric file descriptor calls (open(), read(), write(), lseek(), close()). It is used even on non-Unix architectures, and most other layers operate on top of it.</source>
          <target state="translated">UNIX/POSIX の数値ファイル記述子呼び出し(open(),read(),write(),lseek(),close())の観点から PerlIO の基本的な操作を提供する最下層。非 Unix アーキテクチャでも使用され、他のほとんどのレイヤはその上で動作します。</target>
        </trans-unit>
        <trans-unit id="8f76153b489235de1b7ba0a13f749867749dbd1e" translate="yes" xml:space="preserve">
          <source>Lukas Eklund &amp;lt;leklund@gmail.com&amp;gt;</source>
          <target state="translated">Lukas Eklund &amp;lt;leklund@gmail.com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="16b73d35c25cb2d87aaa9bb21b4aedfa85686027" translate="yes" xml:space="preserve">
          <source>Luther Huffman, lutherh@stratcom.com, Strategic Computer Solutions, Inc.</source>
          <target state="translated">Luther Huffman,lutherh@stratcom.com,Strategic Computer Solutions,Inc.</target>
        </trans-unit>
        <trans-unit id="992354f36023a64134d9045affe474e73e18db31" translate="yes" xml:space="preserve">
          <source>Luvverly! and to fix this we declare all variables explicitly and now our script looks like this:</source>
          <target state="translated">これを修正するために、すべての変数を明示的に宣言し、スクリプトは以下のようになりました。</target>
        </trans-unit>
        <trans-unit id="dc6aa5975bc24ec633f5fcc8f9ccf2766d7ad7e9" translate="yes" xml:space="preserve">
          <source>Lvalue casts</source>
          <target state="translated">L値がキャストされます。</target>
        </trans-unit>
        <trans-unit id="c819825aaf49d2c99e8f8f2add24599bfbddb1a0" translate="yes" xml:space="preserve">
          <source>Lvalue subroutines</source>
          <target state="translated">L値サブルーチン</target>
        </trans-unit>
        <trans-unit id="a77fcba977d5eb923b72725f6d5dc4fe49dee064" translate="yes" xml:space="preserve">
          <source>Lvalue subroutines are convenient, but you have to keep in mind that, when used with objects, they may violate encapsulation. A normal mutator can check the supplied argument before setting the attribute it is protecting, an lvalue subroutine cannot. If you require any special processing when storing and retrieving the values, consider using the CPAN module Sentinel or something similar.</source>
          <target state="translated">Lvalueサブルーチンは便利ですが、オブジェクトと一緒に使うとカプセル化に抵触する可能性があることを覚えておかなければなりません。通常のミューテータは、保護する属性を設定する前に与えられた引数をチェックすることができますが、lvalueサブルーチンはそれができません。値を格納したり取得したりする際に特別な処理が必要な場合は、CPANモジュールのSentinelなどを使用することを検討してください。</target>
        </trans-unit>
        <trans-unit id="01157c3907a273e426b801b96bad325cfefca606" translate="yes" xml:space="preserve">
          <source>Lzma (method 14)</source>
          <target state="translated">Lzma(方法14</target>
        </trans-unit>
        <trans-unit id="53448a46968767fc3dc24857326ec00bf716b8a2" translate="yes" xml:space="preserve">
          <source>Lzma Compression Options</source>
          <target state="translated">Lzma 圧縮オプション</target>
        </trans-unit>
        <trans-unit id="c63ae6dd4fc9f9dda66970e827d13f7c73fe841c" translate="yes" xml:space="preserve">
          <source>M</source>
          <target state="translated">M</target>
        </trans-unit>
        <trans-unit id="c716084845f60944f0ccfd3046e9665113c093b0" translate="yes" xml:space="preserve">
          <source>MAGIC</source>
          <target state="translated">MAGIC</target>
        </trans-unit>
        <trans-unit id="9bc0ed9c361a62773b779bac20ca83bc337097db" translate="yes" xml:space="preserve">
          <source>MAGICXS</source>
          <target state="translated">MAGICXS</target>
        </trans-unit>
        <trans-unit id="15c8cbe6eb1479a64e132c9d7a73db9ce6a8aab3" translate="yes" xml:space="preserve">
          <source>MAILING LIST</source>
          <target state="translated">メールリスト</target>
        </trans-unit>
        <trans-unit id="b3b45a6a598ee27528bae4158cd460e7b0cab066" translate="yes" xml:space="preserve">
          <source>MAIN API EXPORTS</source>
          <target state="translated">主なAPIエクスポート</target>
        </trans-unit>
        <trans-unit id="f672ec1a25cdbb81af49b4e2e09eb665a197b037" translate="yes" xml:space="preserve">
          <source>MAIN METHODS</source>
          <target state="translated">主な方法</target>
        </trans-unit>
        <trans-unit id="7bee61cc4b2ff6ceaa5bf2c847f0465ac92786f6" translate="yes" xml:space="preserve">
          <source>MAIN SEARCH METHODS</source>
          <target state="translated">主な検索方法</target>
        </trans-unit>
        <trans-unit id="b2bcf80339bb8c2f5b627482d7224ef03323abc9" translate="yes" xml:space="preserve">
          <source>MAINTAINER</source>
          <target state="translated">MAINTAINER</target>
        </trans-unit>
        <trans-unit id="572378cf179c50ade4591b0f42a539fe3de5c4ba" translate="yes" xml:space="preserve">
          <source>MAINTAINERS</source>
          <target state="translated">MAINTAINERS</target>
        </trans-unit>
        <trans-unit id="a573378dd124c5aff03b74a9a4dee3c0207dd14a" translate="yes" xml:space="preserve">
          <source>MAINTENANCE AND SUPPORT</source>
          <target state="translated">メンテナンスとサポート</target>
        </trans-unit>
        <trans-unit id="381f8b8847a78b52a5c355f7a396ec94cdfb3fe2" translate="yes" xml:space="preserve">
          <source>MAINTENANCE BRANCHES</source>
          <target state="translated">メンテナンスブランチ</target>
        </trans-unit>
        <trans-unit id="5f4395a75c71fe04b6156d6290da65a27f17e138" translate="yes" xml:space="preserve">
          <source>MAKE</source>
          <target state="translated">MAKE</target>
        </trans-unit>
        <trans-unit id="0124d424fb4888dc5f53bb1ef59aaa8406bebab8" translate="yes" xml:space="preserve">
          <source>MAKE ASSERTIONS -&amp;gt; SEND EVENTS</source>
          <target state="translated">アサーションを作成-&amp;gt;イベントを送信</target>
        </trans-unit>
        <trans-unit id="c8c08604e5e552ec9e9c63c71fc8f4ef53453d1a" translate="yes" xml:space="preserve">
          <source>MAKE ON CYGWIN</source>
          <target state="translated">メークオンCYGWIN</target>
        </trans-unit>
        <trans-unit id="1f0292102c8114ed4accdb4b3187dd3355fe606e" translate="yes" xml:space="preserve">
          <source>MAKE PROBLEMS.</source>
          <target state="translated">MAKE PROBLEMS.</target>
        </trans-unit>
        <trans-unit id="606cfc5f8f22b0f666e90c16494ce8cfe5172b45" translate="yes" xml:space="preserve">
          <source>MAKE TEST</source>
          <target state="translated">メークテスト</target>
        </trans-unit>
        <trans-unit id="4197ed452e3e67bf334841bde4210f984cf23e44" translate="yes" xml:space="preserve">
          <source>MAKEAPERL</source>
          <target state="translated">MAKEAPERL</target>
        </trans-unit>
        <trans-unit id="df6262932ccb109dce90e30936b4e6b9e6d0d4c2" translate="yes" xml:space="preserve">
          <source>MAKEFILE_OLD</source>
          <target state="translated">MAKEFILE_OLD</target>
        </trans-unit>
        <trans-unit id="d33b61e914eef018d44c2af2392dd8a8bb3f0814" translate="yes" xml:space="preserve">
          <source>MAKEMAKER: path to the MakeMaker module.</source>
          <target state="translated">MAKEMAKER:MakeMaker モジュールへのパス。</target>
        </trans-unit>
        <trans-unit id="fba0fd0dd60434c9d108881cdd60c2cfbd09f893" translate="yes" xml:space="preserve">
          <source>MAN PAGES</source>
          <target state="translated">人のページ</target>
        </trans-unit>
        <trans-unit id="c64d5c48751d39c885c4bcdfb24a588e7e222136" translate="yes" xml:space="preserve">
          <source>MAN1PODS</source>
          <target state="translated">MAN1PODS</target>
        </trans-unit>
        <trans-unit id="c7fb89700825cc5dfcebfd44326a8eec88015a73" translate="yes" xml:space="preserve">
          <source>MAN3PODS</source>
          <target state="translated">MAN3PODS</target>
        </trans-unit>
        <trans-unit id="41d43d8ceb08d1444c2cfb5b56c19af1bc2840bf" translate="yes" xml:space="preserve">
          <source>MANAGING FORMATTERS</source>
          <target state="translated">フォーマットの管理</target>
        </trans-unit>
        <trans-unit id="9ae61f13c66eb261147f9d4b1d89a27b5c697890" translate="yes" xml:space="preserve">
          <source>MANIFEST</source>
          <target state="translated">MANIFEST</target>
        </trans-unit>
        <trans-unit id="ee43e9094077d72c1da72a9a91b89d3593977bf3" translate="yes" xml:space="preserve">
          <source>MANIFEST ON CYGWIN</source>
          <target state="translated">サイグウィンのマニフェスト</target>
        </trans-unit>
        <trans-unit id="99aec53b52aee7fd41e057b43112a2b07b20b1fa" translate="yes" xml:space="preserve">
          <source>MANIFEST.SKIP</source>
          <target state="translated">MANIFEST.SKIP</target>
        </trans-unit>
        <trans-unit id="93ba9a2acb7ece879d6eae4b3780b55ff65e53c6" translate="yes" xml:space="preserve">
          <source>MANIFEST.bak</source>
          <target state="translated">MANIFEST.bak</target>
        </trans-unit>
        <trans-unit id="71154a1d58b708083b1b8a9a53cc03dfaac27380" translate="yes" xml:space="preserve">
          <source>MAP DATA</source>
          <target state="translated">地図データ</target>
        </trans-unit>
        <trans-unit id="b315cd523ae2ef826dbad53529ba6c9c2ad21ff1" translate="yes" xml:space="preserve">
          <source>MAPPING</source>
          <target state="translated">MAPPING</target>
        </trans-unit>
        <trans-unit id="209ca025362fc9c148579a1bf701af6d3fbee6d2" translate="yes" xml:space="preserve">
          <source>MAP_TARGET</source>
          <target state="translated">MAP_TARGET</target>
        </trans-unit>
        <trans-unit id="20b7a63446bb07c65998bdd386758cc1d4e47490" translate="yes" xml:space="preserve">
          <source>MARK</source>
          <target state="translated">MARK</target>
        </trans-unit>
        <trans-unit id="ce71241b2af9817fe6f961964423ded83b2b2446" translate="yes" xml:space="preserve">
          <source>MATCH</source>
          <target state="translated">MATCH</target>
        </trans-unit>
        <trans-unit id="34a4dfce34585d297b90edd353506556851a5017" translate="yes" xml:space="preserve">
          <source>MATH</source>
          <target state="translated">MATH</target>
        </trans-unit>
        <trans-unit id="72a965b84fe5d8bf2c44aadc341ef716b1bb9f90" translate="yes" xml:space="preserve">
          <source>MATH LIBRARY</source>
          <target state="translated">数学ライブラリ</target>
        </trans-unit>
        <trans-unit id="7b186e235f284107df6b4dbe6060d2b6a5d9f1e5" translate="yes" xml:space="preserve">
          <source>MAX</source>
          <target state="translated">MAX</target>
        </trans-unit>
        <trans-unit id="792fd2692b3061f3e55fd6e6d06b2216b2041c0f" translate="yes" xml:space="preserve">
          <source>MAXCOMPLEN is the maximum length of a filename component (the part between two backslashes) on this file system.</source>
          <target state="translated">MAXCOMPLEN は、このファイルシステム上のファイル名のコンポーネント (2 つのバックスラッシュの間の部分)の最大長です。</target>
        </trans-unit>
        <trans-unit id="f68525ad751f8a1d932458c4c58a214bdf0b30e9" translate="yes" xml:space="preserve">
          <source>MEDIUM</source>
          <target state="translated">MEDIUM</target>
        </trans-unit>
        <trans-unit id="f4b1c471ce1efbe25d7232b293140a21b7fea826" translate="yes" xml:space="preserve">
          <source>MEMORY</source>
          <target state="translated">MEMORY</target>
        </trans-unit>
        <trans-unit id="cdf5b879eba064baae0d94237dbf7820fdcbb018" translate="yes" xml:space="preserve">
          <source>MEMORY DEBUGGERS</source>
          <target state="translated">メモリデバッガ</target>
        </trans-unit>
        <trans-unit id="e31b925235cc3be7fd5e0670fdc195273a9cff6f" translate="yes" xml:space="preserve">
          <source>MEMORY STORE</source>
          <target state="translated">メモリストア</target>
        </trans-unit>
        <trans-unit id="4c1e46b92295867a7e3aedb69823f567f1577697" translate="yes" xml:space="preserve">
          <source>MERGE STRATEGIES</source>
          <target state="translated">戦略の統合</target>
        </trans-unit>
        <trans-unit id="af3e8367fd77b35795f6a4515a82e2821f81990d" translate="yes" xml:space="preserve">
          <source>MESSAGE-SPEC</source>
          <target state="translated">MESSAGE-SPEC</target>
        </trans-unit>
        <trans-unit id="c459b150dd079f2662d2dc95f57ad127cc7aa8df" translate="yes" xml:space="preserve">
          <source>META CHARACTERS</source>
          <target state="translated">メタキャラクタ</target>
        </trans-unit>
        <trans-unit id="e3b3cae38e87b40132568c5a00d9fdb4dbf0d028" translate="yes" xml:space="preserve">
          <source>META Concerns</source>
          <target state="translated">METAの懸念事項</target>
        </trans-unit>
        <trans-unit id="a0396a803e296b3603471fd9fe995f4d3b469448" translate="yes" xml:space="preserve">
          <source>META-KEY RESTRICTIONS</source>
          <target state="translated">メタキー制限</target>
        </trans-unit>
        <trans-unit id="4a6da301633ce81aa21cac64ffb95d87c6894995" translate="yes" xml:space="preserve">
          <source>META.json</source>
          <target state="translated">META.json</target>
        </trans-unit>
        <trans-unit id="3b7f8f92275828b66b32cb6c6aeb61e73c1d7587" translate="yes" xml:space="preserve">
          <source>META.yml</source>
          <target state="translated">META.yml</target>
        </trans-unit>
        <trans-unit id="b763622141e2fabeb07a88720f777618ff14ff8f" translate="yes" xml:space="preserve">
          <source>META_ADD</source>
          <target state="translated">META_ADD</target>
        </trans-unit>
        <trans-unit id="ffea654c220d2875e7a864f30439535466d152eb" translate="yes" xml:space="preserve">
          <source>META_MERGE</source>
          <target state="translated">META_MERGE</target>
        </trans-unit>
        <trans-unit id="296be0aba5c6db10945a86505a9c35adbc0a5da7" translate="yes" xml:space="preserve">
          <source>METHOD CALLING</source>
          <target state="translated">メソッド呼び出し</target>
        </trans-unit>
        <trans-unit id="7541f2ddbea83515621139a06393c2c41632b2df" translate="yes" xml:space="preserve">
          <source>METHODS</source>
          <target state="translated">METHODS</target>
        </trans-unit>
        <trans-unit id="7347dda2b461e7f991ef3bb4cbeac4cccce22688" translate="yes" xml:space="preserve">
          <source>METHODS AND FIELDS</source>
          <target state="translated">方法とフィールド</target>
        </trans-unit>
        <trans-unit id="3cb215be859943e6d7b15dec190189887d7849cd" translate="yes" xml:space="preserve">
          <source>METHODS FOR PARSING AND PROCESSING</source>
          <target state="translated">解析および処理の方法</target>
        </trans-unit>
        <trans-unit id="e6e31389588ce3a302e9399908d50ba1bc9b2ff6" translate="yes" xml:space="preserve">
          <source>METHODS SUBCLASSES MAY IMPLEMENT OR OVERRIDE</source>
          <target state="translated">サブクラスのメソッドは、これを実装するか、またはこれをオーバーライドしてもよい。</target>
        </trans-unit>
        <trans-unit id="ab46e61362be7095bd0ecea299cf9afde867e32c" translate="yes" xml:space="preserve">
          <source>METHODS SUBCLASSES MUST IMPLEMENT</source>
          <target state="translated">サブクラスが実装しなければならない方法</target>
        </trans-unit>
        <trans-unit id="bac1668d54ba3469d07436c3cb4d6c63921e8439" translate="yes" xml:space="preserve">
          <source>MILLIONS OF MACROS</source>
          <target state="translated">数百万のマクロ</target>
        </trans-unit>
        <trans-unit id="8c54fa1663ec8e58feaa0f76d0ad16806f96497d" translate="yes" xml:space="preserve">
          <source>MIME 'B' and 'Q' header encoding</source>
          <target state="translated">MIME 'B' および 'Q' ヘッダーのエンコーディング</target>
        </trans-unit>
        <trans-unit id="f0186eb413ae0fe1b04a58826d46062c8207cd98" translate="yes" xml:space="preserve">
          <source>MIME (Multipurpose Internet Mail Extensions)</source>
          <target state="translated">MIME (Multipurpose Internet Mail Extensions)</target>
        </trans-unit>
        <trans-unit id="448dc4536185fa521763a707f1aaa251c78a81e2" translate="yes" xml:space="preserve">
          <source>MIME encoding for an unstructured email header</source>
          <target state="translated">構造化されていない電子メールヘッダ用の MIME エンコーディング</target>
        </trans-unit>
        <trans-unit id="ced61424802296ffb38430fa8f0fab4da3883207" translate="yes" xml:space="preserve">
          <source>MIME::Base64</source>
          <target state="translated">MIME::Base64</target>
        </trans-unit>
        <trans-unit id="7fe3ea65bc04a88102c03df5c340d4e7c1520d18" translate="yes" xml:space="preserve">
          <source>MIME::Base64 - Encoding and decoding of base64 strings</source>
          <target state="translated">MIME::Base64-base64 文字列のエンコードとデコードを行う</target>
        </trans-unit>
        <trans-unit id="7ffae17f904a8de9b8c01b15e74d1504ffbc2043" translate="yes" xml:space="preserve">
          <source>MIME::QuotedPrint</source>
          <target state="translated">MIME::QuotedPrint</target>
        </trans-unit>
        <trans-unit id="65095920906e9bf0fe024eb72fdfbbe098341dd5" translate="yes" xml:space="preserve">
          <source>MIME::QuotedPrint - Encoding and decoding of quoted-printable strings</source>
          <target state="translated">MIME::QuotedPrint-引用符で印刷可能な文字列のエンコードとデコードを行う</target>
        </trans-unit>
        <trans-unit id="7f1f9a719a9f150e508497c923f92b8123e37935" translate="yes" xml:space="preserve">
          <source>MIME_ENCODING</source>
          <target state="translated">MIME_ENCODING</target>
        </trans-unit>
        <trans-unit id="79b8daea186e0e9dd2d8665c8e357ddbbf0a21c4" translate="yes" xml:space="preserve">
          <source>MIN_PERL_VERSION</source>
          <target state="translated">MIN_PERL_VERSION</target>
        </trans-unit>
        <trans-unit id="8d9cb354f1b92318e37511c8328e0bfc3a396a31" translate="yes" xml:space="preserve">
          <source>MISC</source>
          <target state="translated">MISC</target>
        </trans-unit>
        <trans-unit id="fbc28147d7dae55d07ef20379522673d2cd4aff7" translate="yes" xml:space="preserve">
          <source>MISCELLANEOUS</source>
          <target state="translated">MISCELLANEOUS</target>
        </trans-unit>
        <trans-unit id="0e2957d871def6ecf380e593a975af27f56d18ea" translate="yes" xml:space="preserve">
          <source>MISCELLANEOUS TRICKS</source>
          <target state="translated">ミセラブルなトリック</target>
        </trans-unit>
        <trans-unit id="8727bad0374de5d99b1e6473dee31baa8ae41493" translate="yes" xml:space="preserve">
          <source>MKTEMP FUNCTIONS</source>
          <target state="translated">MKTEMP機能</target>
        </trans-unit>
        <trans-unit id="38de91e68bd653a65240e9601577373f8b2878b4" translate="yes" xml:space="preserve">
          <source>MM_REVISION: ExtUtils::MakeMaker version control revision (for backwards compat)</source>
          <target state="translated">MM_REVISION:ExtUtils::MakeMaker のバージョン管理リビジョン(下位互換用</target>
        </trans-unit>
        <trans-unit id="065dc1eef187bb989bef804cda0869075be856b3" translate="yes" xml:space="preserve">
          <source>MM_VERSION: ExtUtils::MakeMaker Version</source>
          <target state="translated">MM_VERSION:ExtUtils::MakeMaker のバージョン</target>
        </trans-unit>
        <trans-unit id="b630876e2ee4a66e53ca42c0024ca639bccd9170" translate="yes" xml:space="preserve">
          <source>MM_VMS_REVISION is for backwards compatibility before MM_VMS had a $VERSION.</source>
          <target state="translated">MM_VMS_REVISIONは、MM_VMSが$VERSIONを持つ以前の下位互換性のためのものです。</target>
        </trans-unit>
        <trans-unit id="5a5019b6901ec4e0159788b99019a468b1278f03" translate="yes" xml:space="preserve">
          <source>MODE</source>
          <target state="translated">MODE</target>
        </trans-unit>
        <trans-unit id="11d727b07a2ef2f226c24b7b3ca7ffbcc8a440f3" translate="yes" xml:space="preserve">
          <source>MODIFICATION HISTORY</source>
          <target state="translated">変更履歴</target>
        </trans-unit>
        <trans-unit id="3506eba054bea9f2aa92527050cd8aa61b12595f" translate="yes" xml:space="preserve">
          <source>MODIFY_</source>
          <target state="translated">MODIFY_</target>
        </trans-unit>
        <trans-unit id="66bffe2295ae671e5d45439c77216938c792414b" translate="yes" xml:space="preserve">
          <source>MODULE</source>
          <target state="translated">MODULE</target>
        </trans-unit>
        <trans-unit id="a3e25a142bc9338d99e21ddb92754631acdb233f" translate="yes" xml:space="preserve">
          <source>MODULENAME is the Perl module name, e.g. Devel::SelfStubber, NOT 'Devel/SelfStubber' or 'Devel/SelfStubber.pm'.</source>
          <target state="translated">MODULENAME は Perl モジュール名で、例えば Devel::SelfStubber のように 'Devel/SelfStubber' や 'Devel/SelfStubber.pm' ではありません。</target>
        </trans-unit>
        <trans-unit id="479396de59be987e42108d35e44f4b59dc1b4a9e" translate="yes" xml:space="preserve">
          <source>MODULES</source>
          <target state="translated">MODULES</target>
        </trans-unit>
        <trans-unit id="630e8cd715da84adcb106243940c860db346e2eb" translate="yes" xml:space="preserve">
          <source>MODULES USED</source>
          <target state="translated">使用モジュール</target>
        </trans-unit>
        <trans-unit id="b3c85e8affa5446d487b201bbc63d337d6d7f54d" translate="yes" xml:space="preserve">
          <source>MOD[=bar,baz]</source>
          <target state="translated">MOD[=bar,baz]</target>
        </trans-unit>
        <trans-unit id="c47b9589ffc380689e211aa66dac2ba8473cc24a" translate="yes" xml:space="preserve">
          <source>MONO CASE then sort data (for non-digits, non-underscore)</source>
          <target state="translated">MONO CASEを使用して、データをソートします(非桁数、非アンダースコアの場合)。</target>
        </trans-unit>
        <trans-unit id="b537891a9c0b5c8f4e6ee16a9ec71caca75f6730" translate="yes" xml:space="preserve">
          <source>MORAL</source>
          <target state="translated">MORAL</target>
        </trans-unit>
        <trans-unit id="2c624e5265a05c5d2c6e21783801e9896aa0132f" translate="yes" xml:space="preserve">
          <source>MORE</source>
          <target state="translated">MORE</target>
        </trans-unit>
        <trans-unit id="bc4fc594140fde77e059ad4498ad554e3cbee3e9" translate="yes" xml:space="preserve">
          <source>MORE ELABORATE RECORDS</source>
          <target state="translated">MORE ELABORATE RECORDS</target>
        </trans-unit>
        <trans-unit id="64bf6c143dc817670181bbd264688b3acbcd5d5a" translate="yes" xml:space="preserve">
          <source>MORE EXAMPLES</source>
          <target state="translated">その他の例</target>
        </trans-unit>
        <trans-unit id="9ad9881a7f17afaec8c4ae609d85b1187596ee5b" translate="yes" xml:space="preserve">
          <source>MORE INFORMATION</source>
          <target state="translated">その他の情報</target>
        </trans-unit>
        <trans-unit id="76991e71012a76451fe2a0cc0849f44f697181ec" translate="yes" xml:space="preserve">
          <source>MORE READING FOR GUTS HACKERS</source>
          <target state="translated">ガッツハッカーのための他の読み物</target>
        </trans-unit>
        <trans-unit id="e7fd50abbfbafe75448c31d50672233d0a7980c6" translate="yes" xml:space="preserve">
          <source>MOREMAGIC</source>
          <target state="translated">MOREMAGIC</target>
        </trans-unit>
        <trans-unit id="abdd28bdcd2ff588ed4391e2849b71273a64ab04" translate="yes" xml:space="preserve">
          <source>MRO Functions</source>
          <target state="translated">MRO機能</target>
        </trans-unit>
        <trans-unit id="b105d95acedcd0df5c653c0e1be8aac0aa3534a5" translate="yes" xml:space="preserve">
          <source>MS-DOS</source>
          <target state="translated">MS-DOS</target>
        </trans-unit>
        <trans-unit id="304ff724cf80bd1102c4a52a83e37a5a11d51edf" translate="yes" xml:space="preserve">
          <source>MSG_BCAST, MSG_OOB, MSG_TRUNC, ...</source>
          <target state="translated">MSG_BCAST,MSG_OOB,MSG_TRUNC,...</target>
        </trans-unit>
        <trans-unit id="95ed316aead6f0a90227220b98ed2c6a72173129" translate="yes" xml:space="preserve">
          <source>MSWin32 case-tolerance depends on GetVolumeInformation() $ouFsFlags == FS_CASE_SENSITIVE, indicating the case significance when comparing file specifications. Since XP FS_CASE_SENSITIVE is effectively disabled for the NT subsubsystem. See &lt;a href=&quot;http://cygwin.com/ml/cygwin/2007-07/msg00891.html&quot;&gt;http://cygwin.com/ml/cygwin/2007-07/msg00891.html&lt;/a&gt; Default: 1</source>
          <target state="translated">MSWin32の大文字と小文字の区別は、GetVolumeInformation（）$ ouFsFlags == FS_CASE_SENSITIVEに依存します。これは、ファイル仕様を比較するときの大文字と小文字の区別を示します。XP FS_CASE_SENSITIVEは、NTサブシステムでは事実上無効になっているためです。&lt;a href=&quot;http://cygwin.com/ml/cygwin/2007-07/msg00891.html&quot;&gt;http://cygwin.com/ml/cygwin/2007-07/msg00891.htmlを&lt;/a&gt;参照してください。デフォルト：1</target>
        </trans-unit>
        <trans-unit id="46b420891abbe816108b89b151663fa05cb3b237" translate="yes" xml:space="preserve">
          <source>MULTI-OCTET CHARACTER SETS</source>
          <target state="translated">マルチオクテットキャラクターセット</target>
        </trans-unit>
        <trans-unit id="1157801a76643907eaa464d8d8b432b909f3f592" translate="yes" xml:space="preserve">
          <source>MULTICALL</source>
          <target state="translated">MULTICALL</target>
        </trans-unit>
        <trans-unit id="410655851813ae42e29a8af5e0c4bbe60816fe96" translate="yes" xml:space="preserve">
          <source>MULTITHREADED APPLICATIONS</source>
          <target state="translated">マルチスレッドアプリケーション</target>
        </trans-unit>
        <trans-unit id="112f1bc5464cbf86ad8abc28805d58542d252dc7" translate="yes" xml:space="preserve">
          <source>MUST decode</source>
          <target state="translated">マストデコード</target>
        </trans-unit>
        <trans-unit id="f3f97d4e65bbf8e05b9d2003dabed48039672a9b" translate="yes" xml:space="preserve">
          <source>MUST return the octet sequence representing</source>
          <target state="translated">を表すオクテットシーケンスを返さなければならない[MUST]。</target>
        </trans-unit>
        <trans-unit id="f37495c410f3672ad3b7e5f75ff69fe1801eda14" translate="yes" xml:space="preserve">
          <source>MUST return the string representing the IANA charset name of the encoding.</source>
          <target state="translated">エンコーディングの IANA charset 名を表す文字列を返さなければならない (MUST)。</target>
        </trans-unit>
        <trans-unit id="df44e8bf9f5bb85b1c861873578524b02eaca16a" translate="yes" xml:space="preserve">
          <source>MUST return the string representing the canonical name of the encoding.</source>
          <target state="translated">エンコーディングの正式名称を表す文字列を返さなければならない[MUST]。</target>
        </trans-unit>
        <trans-unit id="4a6d2a5fac9fc009e8ef2c66dccfa9c0e7765210" translate="yes" xml:space="preserve">
          <source>MUST return the string that</source>
          <target state="translated">の文字列を返さなければなりません(MUST)。</target>
        </trans-unit>
        <trans-unit id="d2008ef579d429eb9f21f1dee25cb60d820de1c0" translate="yes" xml:space="preserve">
          <source>MUTATION</source>
          <target state="translated">MUTATION</target>
        </trans-unit>
        <trans-unit id="bcbdfcff47f36a4bd295e8dcb4203d07f1343372" translate="yes" xml:space="preserve">
          <source>MYEXTLIB</source>
          <target state="translated">MYEXTLIB</target>
        </trans-unit>
        <trans-unit id="8a1a4fa060cab0b9420887b26bf1330d0275e0dd" translate="yes" xml:space="preserve">
          <source>MYMETA.json</source>
          <target state="translated">MYMETA.json</target>
        </trans-unit>
        <trans-unit id="2f5e6a42d1d484cbbde0efe806d130305e765ea2" translate="yes" xml:space="preserve">
          <source>MYMETA.yml</source>
          <target state="translated">MYMETA.yml</target>
        </trans-unit>
        <trans-unit id="c83e0148da9329e1a74fae48edd72325f87db2ab" translate="yes" xml:space="preserve">
          <source>MY_CXT</source>
          <target state="translated">MY_CXT</target>
        </trans-unit>
        <trans-unit id="c92b11ff7ab5a4c5fd081db7883c7b3a71c6ef70" translate="yes" xml:space="preserve">
          <source>MY_CXT REFERENCE</source>
          <target state="translated">MY_CXT リファレンス</target>
        </trans-unit>
        <trans-unit id="71c4b4f77dd6aa81ae33d939a92a8e29b5de3e34" translate="yes" xml:space="preserve">
          <source>MY_CXT_CLONE</source>
          <target state="translated">MY_CXT_CLONE</target>
        </trans-unit>
        <trans-unit id="8f9145c9f6a580d204ffb3a2156f8854c633e0db" translate="yes" xml:space="preserve">
          <source>MY_CXT_INIT</source>
          <target state="translated">MY_CXT_INIT</target>
        </trans-unit>
        <trans-unit id="b0c38180ec37e61376fb7d95221d9077a44d5cc9" translate="yes" xml:space="preserve">
          <source>MY_CXT_INIT_INTERP(my_perl)</source>
          <target state="translated">MY_CXT_INIT_INTERP(my_perl)</target>
        </trans-unit>
        <trans-unit id="8d47e1fdc3a026db13eae6a6b125df6ba8c7928c" translate="yes" xml:space="preserve">
          <source>MY_CXT_KEY</source>
          <target state="translated">MY_CXT_KEY</target>
        </trans-unit>
        <trans-unit id="61ad4287cd41e2e97ad96a7d5cba5a661af2c472" translate="yes" xml:space="preserve">
          <source>MY_LIB_DIR defaults to '.' if not present.</source>
          <target state="translated">MY_LIB_DIR が存在しない場合、デフォルトは '.' です。</target>
        </trans-unit>
        <trans-unit id="9790a85a1a9e58a2ddd68bd085adb9c931b1b046" translate="yes" xml:space="preserve">
          <source>Mac OS 9 and earlier used &lt;code&gt;:&lt;/code&gt; as a path separator instead of &lt;code&gt;/&lt;/code&gt;.</source>
          <target state="translated">Mac OS 9以前を使用 &lt;code&gt;:&lt;/code&gt; &lt;code&gt;/&lt;/code&gt; の代わりにパス区切り文字として。</target>
        </trans-unit>
        <trans-unit id="b48af28979910507a72300805b16b39786c09205" translate="yes" xml:space="preserve">
          <source>Mac OS X</source>
          <target state="translated">マックオーエスエックス</target>
        </trans-unit>
        <trans-unit id="9208982d7e71273ee9421bf88e0b53b6ad837f35" translate="yes" xml:space="preserve">
          <source>Mac OS X 10.5 &quot;Leopard&quot; and above do not require the 'u' variant.</source>
          <target state="translated">Mac OS X 10.5 &quot;Leopard&quot; 以上では、'u' バリアントは必要ありません。</target>
        </trans-unit>
        <trans-unit id="27e0400e4107eec8c9b3ecfab19987f0725198d4" translate="yes" xml:space="preserve">
          <source>Mac OS X documentation on syslog, &lt;a href=&quot;http://developer.apple.com/documentation/Darwin/Reference/ManPages/man3/syslog.3.html&quot;&gt;http://developer.apple.com/documentation/Darwin/Reference/ManPages/man3/syslog.3.html&lt;/a&gt;</source>
          <target state="translated">syslog上のMac OS Xのドキュメント、&lt;a href=&quot;http://developer.apple.com/documentation/Darwin/Reference/ManPages/man3/syslog.3.html&quot;&gt;http：//developer.apple.com/documentation/Darwin/Reference/ManPages/man3/syslog.3.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a4c0bf3f7dab7b087f55de5614ca5cbaddeea9b9" translate="yes" xml:space="preserve">
          <source>Mac OS X ships with a dynamically-loaded libperl, but the default for this release is to compile a static libperl. The reason for this is pre-binding. Dynamic libraries can be pre-bound to a specific address in memory in order to decrease load time. To do this, one needs to be aware of the location and size of all previously-loaded libraries. Apple collects this information as part of their overall OS build process, and thus has easy access to it when building Perl, but ordinary users would need to go to a great deal of effort to obtain the information needed for pre-binding.</source>
          <target state="translated">Mac OS X には動的にロードされた libperl が同梱されていますが、このリリースのデフォルトは静的な libperl をコンパイルすることになっています。その理由は、プレバインドです。動的ライブラリは、ロード時間を短縮するために、メモリ内の特定のアドレスにプレバインドすることができます。これを行うには、以前にロードされたすべてのライブラリの位置とサイズを認識する必要があります。Apple は OS のビルドプロセス全体の一部としてこの情報を収集していますので、Perl をビルドする際に簡単にアクセスすることができますが、一般のユーザはプレバインディングに必要な情報を得るために多大な努力をする必要があります。</target>
        </trans-unit>
        <trans-unit id="0343b2a40016db738fa670b19df9f47fc227d16f" translate="yes" xml:space="preserve">
          <source>Mac OS X.</source>
          <target state="translated">Mac OS Xです。</target>
        </trans-unit>
        <trans-unit id="05365d617a6f81e5ccef6d039b61942e2b328dfe" translate="yes" xml:space="preserve">
          <source>MacOS's epoch is midnight January 1st, 1904. VMS's is midnight, November 17th, 1858, but vmsperl emulates the Unix epoch so it's not a problem.</source>
          <target state="translated">MacOSのエポックは1904年1月1日午前0時です。VMSのは1858年11月17日の真夜中ですが、vmsperlはUnixのエポックをエミュレートしているので問題ありません。</target>
        </trans-unit>
        <trans-unit id="546928a146336cd7f40c7bb8263ae0c9584726db" translate="yes" xml:space="preserve">
          <source>Macintosh encodings don't seem to be registered in such entities as IANA. &quot;Canonical&quot; names in Encode are based upon Apple's Tech Note 1150. See &lt;a href=&quot;http://developer.apple.com/technotes/tn/tn1150.html&quot;&gt;http://developer.apple.com/technotes/tn/tn1150.html&lt;/a&gt; for details.</source>
          <target state="translated">MacintoshエンコーディングはIANAなどのエンティティに登録されていないようです。Encodeの「正規の」名前は、AppleのTech Note 1150に基づいています。詳細については、&lt;a href=&quot;http://developer.apple.com/technotes/tn/tn1150.html&quot;&gt;http&lt;/a&gt;：//developer.apple.com/technotes/tn/tn1150.htmlを参照してください。</target>
        </trans-unit>
        <trans-unit id="e813bad999ce5a75f4490c8ed14ec07ab9d63a2d" translate="yes" xml:space="preserve">
          <source>Macro to declare an XSUB and its C parameter list explicitly exporting the symbols.</source>
          <target state="translated">XSUBとそのCパラメータリストを宣言してシンボルを明示的にエクスポートするマクロです。</target>
        </trans-unit>
        <trans-unit id="3f0040307b52caa52d747905fa724ed6b830cee4" translate="yes" xml:space="preserve">
          <source>Macro to declare an XSUB and its C parameter list without exporting the symbols. This is handled by &lt;code&gt;xsubpp&lt;/code&gt; and generally preferable over exporting the XSUB symbols unnecessarily.</source>
          <target state="translated">シンボルをエクスポートせずにXSUBとそのCパラメーターリストを宣言するマクロ。これは &lt;code&gt;xsubpp&lt;/code&gt; によって処理され、不必要にXSUBシンボルをエクスポートするよりも一般的に望ましい方法です。</target>
        </trans-unit>
        <trans-unit id="1376083aeef8a0b2b3a5461de74e71c6974c467b" translate="yes" xml:space="preserve">
          <source>Macro to declare an XSUB and its C parameter list. This is handled by &lt;code&gt;xsubpp&lt;/code&gt; . It is the same as using the more explicit XS_EXTERNAL macro.</source>
          <target state="translated">XSUBとそのCパラメータリストを宣言するマクロ。これは &lt;code&gt;xsubpp&lt;/code&gt; によって処理されます。これは、より明示的なXS_EXTERNALマクロを使用するのと同じです。</target>
        </trans-unit>
        <trans-unit id="e18a81f50de73a3bc24953bde393f35d1ef8d9ce" translate="yes" xml:space="preserve">
          <source>Macro to declare an XSUB and its C parameter list. This is handled by &lt;code&gt;xsubpp&lt;/code&gt;. It is the same as using the more explicit &lt;code&gt;XS_EXTERNAL&lt;/code&gt; macro.</source>
          <target state="translated">XSUBとそのCパラメータリストを宣言するマクロ。これは &lt;code&gt;xsubpp&lt;/code&gt; によって処理されます。これは、より明示的な &lt;code&gt;XS_EXTERNAL&lt;/code&gt; マクロを使用するのと同じです。</target>
        </trans-unit>
        <trans-unit id="7aea32d1102862e7b6b0c8089588079d1bf46bd9" translate="yes" xml:space="preserve">
          <source>Macro to verify that a PM module's $VERSION variable matches the XS module's &lt;code&gt;XS_VERSION&lt;/code&gt; variable. This is usually handled automatically by &lt;code&gt;xsubpp&lt;/code&gt; . See &lt;a href=&quot;perlxs#The-VERSIONCHECK%3a-Keyword&quot;&gt;The VERSIONCHECK: Keyword in perlxs&lt;/a&gt;.</source>
          <target state="translated">PMモジュールの$ VERSION変数がXSモジュールの &lt;code&gt;XS_VERSION&lt;/code&gt; 変数と一致することを確認するマクロ。これは通常、 &lt;code&gt;xsubpp&lt;/code&gt; によって自動的に処理されます。&lt;a href=&quot;perlxs#The-VERSIONCHECK%3a-Keyword&quot;&gt;VERSIONCHECK：perlxsのキーワードを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="d7597f0d069d4377113f05c6161af543ea57a3c7" translate="yes" xml:space="preserve">
          <source>Macro to verify that a PM module's &lt;code&gt;$VERSION&lt;/code&gt; variable matches the XS module's &lt;code&gt;XS_VERSION&lt;/code&gt; variable. This is usually handled automatically by &lt;code&gt;xsubpp&lt;/code&gt;. See &lt;a href=&quot;perlxs#The-VERSIONCHECK%3A-Keyword&quot;&gt;&quot;The VERSIONCHECK: Keyword&quot; in perlxs&lt;/a&gt;.</source>
          <target state="translated">PMモジュールの &lt;code&gt;$VERSION&lt;/code&gt; 変数がXSモジュールの &lt;code&gt;XS_VERSION&lt;/code&gt; 変数と一致することを確認するマクロ。これは通常、 &lt;code&gt;xsubpp&lt;/code&gt; によって自動的に処理されます。&lt;a href=&quot;perlxs#The-VERSIONCHECK%3A-Keyword&quot;&gt;perlxsの「VERSIONCHECK：キーワード」を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="66fb64fe6d247cc13c8ba2ecc02f6b2d75c4b93f" translate="yes" xml:space="preserve">
          <source>Macro to verify that the perl api version an XS module has been compiled against matches the api version of the perl interpreter it's being loaded into.</source>
          <target state="translated">XS モジュールがコンパイルされた perl の api バージョンが、読み込まれた perl インタプリタの api バージョンと一致しているかどうかを確認するためのマクロです。</target>
        </trans-unit>
        <trans-unit id="899bd694d29ace1be956ab35177075021977560b" translate="yes" xml:space="preserve">
          <source>Macros</source>
          <target state="translated">Macros</target>
        </trans-unit>
        <trans-unit id="8f66f4521e615face2c94f9f782a4b88e0deefae" translate="yes" xml:space="preserve">
          <source>Macros that have string constants and their arguments as substrings of the string constants</source>
          <target state="translated">文字列定数とその引数を文字列定数の部分文字列として持つマクロ</target>
        </trans-unit>
        <trans-unit id="25a3c890eb4b69b9115b7b04758963775564c7b0" translate="yes" xml:space="preserve">
          <source>Made 'dynamic_config' mandatory to reduce confusion</source>
          <target state="translated">混乱を減らすために 'dynamic_config' を必須とした</target>
        </trans-unit>
        <trans-unit id="696a489ce86f443d3bd7f260f57fe68b0f5e0740" translate="yes" xml:space="preserve">
          <source>Magic Autogeneration</source>
          <target state="translated">マジックオートジェネレーション</target>
        </trans-unit>
        <trans-unit id="5b951438b2b5824d83645ebbc34942743d54e18e" translate="yes" xml:space="preserve">
          <source>Magic Variables</source>
          <target state="translated">魔法の変数</target>
        </trans-unit>
        <trans-unit id="88fd65fe2e12d0229bfa9aa8c0f337c8c7a34525" translate="yes" xml:space="preserve">
          <source>Magic Virtual Tables</source>
          <target state="translated">魔法の仮想テーブル</target>
        </trans-unit>
        <trans-unit id="2de64b7079eac3534ed35bf9a982a56cf8fb08a0" translate="yes" xml:space="preserve">
          <source>Magic autogeneration increases the potential for inadvertently creating self-referential structures. Currently Perl will not free self-referential structures until cycles are explicitly broken. For example,</source>
          <target state="translated">魔法の自動生成は、自己参照的な構造を不用意に作成する可能性を高めます。現在のところ、Perl はサイクルが明示的に壊れるまで自己参照構造を解放しません。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="2e0ebd98fa5e6d797bebdd2c2d2dbacb085a7bcb" translate="yes" xml:space="preserve">
          <source>Magic constants</source>
          <target state="translated">魔法定数</target>
        </trans-unit>
        <trans-unit id="9331d05bb9a05caf542c2c62dec84da956dc266b" translate="yes" xml:space="preserve">
          <source>Magical Functions</source>
          <target state="translated">魔法のような機能</target>
        </trans-unit>
        <trans-unit id="680b5ac69f610dca4407e4b841e7311dee05c4d1" translate="yes" xml:space="preserve">
          <source>Magical list constants are not supported</source>
          <target state="translated">魔法のリスト定数はサポートされていません。</target>
        </trans-unit>
        <trans-unit id="4bc605047ccd6740cec0a34132f6861a236ee5db" translate="yes" xml:space="preserve">
          <source>Magical values and references can be made into constants at compile time, allowing for way cool stuff like this. (These error numbers aren't totally portable, alas.)</source>
          <target state="translated">魔法の値や参照はコンパイル時に定数にすることができ、このようなクールなものを作ることができます。(残念ながら、これらのエラー番号は完全に移植性があるわけではありません)</target>
        </trans-unit>
        <trans-unit id="df66650e348a506121860cd76f075780d1c6aedd" translate="yes" xml:space="preserve">
          <source>Mail and Usenet News</source>
          <target state="translated">メールとユーズネットニュース</target>
        </trans-unit>
        <trans-unit id="c9124b10840a3572bd767d51874576c37a45a513" translate="yes" xml:space="preserve">
          <source>MailList.U</source>
          <target state="translated">MailList.U</target>
        </trans-unit>
        <trans-unit id="56482927c5fda76aa41942ba11941327d4620c99" translate="yes" xml:space="preserve">
          <source>Mailing Lists and Newsgroups</source>
          <target state="translated">メーリングリストとニュースグループ</target>
        </trans-unit>
        <trans-unit id="d2a1123e6461654a07e49c2ea0e3f5b116e7bf06" translate="yes" xml:space="preserve">
          <source>Mailing list</source>
          <target state="translated">メーリングリスト</target>
        </trans-unit>
        <trans-unit id="d50c2a333e418a4af64720c969c0846d34975a97" translate="yes" xml:space="preserve">
          <source>Mailing list for Perl on OS/390</source>
          <target state="translated">OS/390のPerl用メーリングリスト</target>
        </trans-unit>
        <trans-unit id="8422598c648ad701facadb193807fe8a68e5374e" translate="yes" xml:space="preserve">
          <source>Mailing list: cpan-testers-discuss@perl.org</source>
          <target state="translated">メーリングリスト:cpan-testers-discuss@perl.org</target>
        </trans-unit>
        <trans-unit id="34f27bf89d43b27b257ba6f69d1461ec437f5745" translate="yes" xml:space="preserve">
          <source>Main Perl library</source>
          <target state="translated">主なPerlライブラリ</target>
        </trans-unit>
        <trans-unit id="e42a6ff891c095b97c9c8d1876b99ab388267a2b" translate="yes" xml:space="preserve">
          <source>Mainly listed here to shut up the pitiful screams of the pod coverage tests. They keep me awake at night.</source>
          <target state="translated">主にここに掲載されているのは、ポッドカバーテストの哀れな叫び声を黙らせるためだ。夜も眠れない</target>
        </trans-unit>
        <trans-unit id="5bb034a4bb66b7bb5137187d878df13fb04beae4" translate="yes" xml:space="preserve">
          <source>Mainly used to exclude version control administrative directories and base-level</source>
          <target state="translated">主にバージョン管理の管理ディレクトリとベースレベルを除外するために使用されます。</target>
        </trans-unit>
        <trans-unit id="2a025894cae9180557ea2537add4f6943dbc4f8b" translate="yes" xml:space="preserve">
          <source>Mainly used to exclude version control administrative directories from installation.</source>
          <target state="translated">主にバージョン管理ディレクトリをインストールから除外するために使用されます。</target>
        </trans-unit>
        <trans-unit id="af2040fc4cdf263d0853758e669e36927b733e94" translate="yes" xml:space="preserve">
          <source>Maintain Round Trip Integrity</source>
          <target state="translated">往復の完全性を維持する</target>
        </trans-unit>
        <trans-unit id="6cc92c03b00f2d20d0dd8de351bcdf848cd97ae9" translate="yes" xml:space="preserve">
          <source>Maintained by Ken Williams &amp;lt;KWILLIAMS@cpan.org&amp;gt;</source>
          <target state="translated">ケンウィリアムス&amp;lt;KWILLIAMS@cpan.org&amp;gt;が保守</target>
        </trans-unit>
        <trans-unit id="809e72cee268c819612dba25360f847662fc4877" translate="yes" xml:space="preserve">
          <source>Maintained by Michael G Schwern</source>
          <target state="translated">保守担当者:Michael G Schwern</target>
        </trans-unit>
        <trans-unit id="3d8d67b0bc713d08e1431289fef2c4da24e0a6d9" translate="yes" xml:space="preserve">
          <source>Maintained by Michael G Schwern &lt;code&gt;schwern@pobox.com&lt;/code&gt; within the ExtUtils-MakeMaker package and, as a separate CPAN package, by Randy Kobes &lt;code&gt;r.kobes@uwinnipeg.ca&lt;/code&gt; .</source>
          <target state="translated">Michael G Schwern &lt;code&gt;schwern@pobox.com&lt;/code&gt; がExtUtils-MakeMakerパッケージ内で、別のCPANパッケージとしてRandy Kobes &lt;code&gt;r.kobes@uwinnipeg.ca&lt;/code&gt; が管理しています。</target>
        </trans-unit>
        <trans-unit id="d8d07256ae5a012857da9cd78f0221bd4cddaeb8" translate="yes" xml:space="preserve">
          <source>Maintained by Michael G Schwern &lt;code&gt;schwern@pobox.com&lt;/code&gt; within the ExtUtils-MakeMaker package and, as a separate CPAN package, by Randy Kobes &lt;code&gt;r.kobes@uwinnipeg.ca&lt;/code&gt;.</source>
          <target state="translated">ExtUtils-MakeMakerパッケージ内のMichaelG Schwern &lt;code&gt;schwern@pobox.com&lt;/code&gt; によって維持され、別個のCPANパッケージとして、Randy Kobesr.kobes@uwinnipeg.caによって &lt;code&gt;r.kobes@uwinnipeg.ca&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="7fabc766fc2d9f0543a1727cc606d915b6b064d9" translate="yes" xml:space="preserve">
          <source>Maintained by Peter John Acklam &amp;lt;pjacklam@gmail.com&amp;lt;gt&amp;gt;, 2014-.</source>
          <target state="translated">Peter John Acklam &amp;lt;pjacklam@gmail.com &amp;lt;gt&amp;gt;、2014年-によって維持されています。</target>
        </trans-unit>
        <trans-unit id="471bc1c750a06353374af1e53ce3ea6cd2e96c5b" translate="yes" xml:space="preserve">
          <source>Maintained by Peter John Acklam &amp;lt;pjacklam@online.no&amp;gt; 2011-</source>
          <target state="translated">Peter John Acklam &amp;lt;pjacklam@online.no&amp;gt; 2011-によって保守されています</target>
        </trans-unit>
        <trans-unit id="66e8214c4bf741c76a84a61b0611d2148c0182fd" translate="yes" xml:space="preserve">
          <source>Maintained by:</source>
          <target state="translated">保守担当者</target>
        </trans-unit>
        <trans-unit id="0fb7ae643e6e22eda1f0c20766a595198d76696b" translate="yes" xml:space="preserve">
          <source>Maintained since 1996 by The Perl Porters &amp;lt;</source>
          <target state="translated">The Perl Portersによって1996年から維持されています&amp;lt;</target>
        </trans-unit>
        <trans-unit id="643bbd5f57059016b08fdfc7624d83297d263211" translate="yes" xml:space="preserve">
          <source>Maintainer note:</source>
          <target state="translated">メンテナーノート。</target>
        </trans-unit>
        <trans-unit id="8a3300746df857e116a8c0e1c6dce416561209ca" translate="yes" xml:space="preserve">
          <source>Maintainer of the CPAN release is Steffen Mueller &amp;lt;smueller@cpan.org&amp;gt;. Contact him with technical difficulties with respect to the packaging of the CPAN module.</source>
          <target state="translated">CPANリリースのメンテナーはSteffen Mueller &amp;lt;smueller@cpan.org&amp;gt;です。CPANモジュールのパッケージングに関する技術的な問題については、彼に連絡してください。</target>
        </trans-unit>
        <trans-unit id="430b90ac2c360a8a68d16871970bc138c6d2cbdd" translate="yes" xml:space="preserve">
          <source>Maintainer of the CPAN release is Steffen Mueller (smueller@cpan.org). Contact him with technical difficulties with respect to the packaging of the CPAN module.</source>
          <target state="translated">CPANリリースの管理者はSteffen Mueller (smueller@cpan.org)です。CPANモジュールのパッケージングに関する技術的な問題については、彼に連絡してください。</target>
        </trans-unit>
        <trans-unit id="b4afb7f985f5bfec03da261851d526768b0a7bd1" translate="yes" xml:space="preserve">
          <source>Maintainer of the CPAN release: Steffen Mueller &amp;lt;smueller@cpan.org&amp;gt;</source>
          <target state="translated">CPANリリースのメンテナ：Steffen Mueller &amp;lt;smueller@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="53ca95cbad19caeb958b071a4ed842e8b82f2816" translate="yes" xml:space="preserve">
          <source>Maintainer: Alexandr Ciornii &amp;lt;alexchornyATgmail.com&amp;gt;.</source>
          <target state="translated">メンテナー：Alexandr Ciornii &amp;lt;alexchornyATgmail.com&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="619bd6770e2cd62e7bc43b49020d0710c816e356" translate="yes" xml:space="preserve">
          <source>Maintainer: The Perl5-Porters &amp;lt;perl5-porters@perl.org&amp;gt;</source>
          <target state="translated">メンテナ：Perl5-Porters &amp;lt;perl5-porters@perl.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="5ce563e21b8be07e4d9e4006d6894792ae6105a5" translate="yes" xml:space="preserve">
          <source>Maintainers</source>
          <target state="translated">Maintainers</target>
        </trans-unit>
        <trans-unit id="2a2a346bb89ad48931388628d64c4379a03e9c7a" translate="yes" xml:space="preserve">
          <source>Maintainers.pl</source>
          <target state="translated">Maintainers.pl</target>
        </trans-unit>
        <trans-unit id="82aa676cb87f65983d0f9f426c9258e2f5ab0e48" translate="yes" xml:space="preserve">
          <source>Maintainers.pm</source>
          <target state="translated">Maintainers.pm</target>
        </trans-unit>
        <trans-unit id="9c61980ffa7774c0d3835c4f170771e00a8354d6" translate="yes" xml:space="preserve">
          <source>Maintaining a bundle definition file means keeping track of two things: dependencies and interactivity. CPAN.pm sometimes fails on calculating dependencies because not all modules define all MakeMaker attributes correctly, so a bundle definition file should specify prerequisites as early as possible. On the other hand, it's annoying that so many distributions need some interactive configuring. So what you can try to accomplish in your private bundle file is to have the packages that need to be configured early in the file and the gentle ones later, so you can go out for coffee after a few minutes and leave CPAN.pm to churn away unattended.</source>
          <target state="translated">バンドル定義ファイルを維持するということは、依存性とインタラクティブ性という2つのことを把握しておくことを意味します。すべてのモジュールがすべての MakeMaker 属性を正しく定義しているわけではないので、CPAN.pm は依存性の計算に失敗することがあります。一方で、多くのディストリビューションがインタラクティブな設定を必要としているのは腹立たしいことです。そこで、プライベートバンドルファイルで達成しようとすることは、設定が必要なパッケージは早い段階で、穏やかなパッケージは後回しにして、数分後にコーヒーを飲みに行って、CPAN.pm を放置しておくことです。</target>
        </trans-unit>
        <trans-unit id="683b0250521f89ab5a7d8609ffca71e78293a058" translate="yes" xml:space="preserve">
          <source>Maintaining a persistent interpreter</source>
          <target state="translated">永続的なインタプリタの維持</target>
        </trans-unit>
        <trans-unit id="e88a9990f5d2ac06c40799dcdbc0bd3efadf5b36" translate="yes" xml:space="preserve">
          <source>Maintaining multiple interpreter instances</source>
          <target state="translated">複数のインタープリタインスタンスの管理</target>
        </trans-unit>
        <trans-unit id="b029f6d7dda6875610cf345a0d379a80456960cd" translate="yes" xml:space="preserve">
          <source>Maintaining the urllist parameter</source>
          <target state="translated">urllist パラメータのメンテナンス</target>
        </trans-unit>
        <trans-unit id="6f70b10eb8a3bbc7f2d0b2c546e6531ac6d2bbc3" translate="yes" xml:space="preserve">
          <source>Maintenance is now done by cperl &lt;a href=&quot;http://perl11.org/cperl&quot;&gt;http://perl11.org/cperl&lt;/a&gt;</source>
          <target state="translated">メンテナンスはcperlhttp &lt;a href=&quot;http://perl11.org/cperl&quot;&gt;：&lt;/a&gt; //perl11.org/cperlによって行われるようになりました</target>
        </trans-unit>
        <trans-unit id="ecb8b463e1c71f307f7fc72628792a15f4e1bd31" translate="yes" xml:space="preserve">
          <source>Maintenance is now done by the perl5-porters</source>
          <target state="translated">メンテナンスは perl5-porters によって行われるようになりました。</target>
        </trans-unit>
        <trans-unit id="181c04cdf23fecb3236b336490e5b2cafa1a0b7f" translate="yes" xml:space="preserve">
          <source>Maintenance versions should only be altered to add critical bug fixes, see &lt;a href=&quot;perlpolicy&quot;&gt;perlpolicy&lt;/a&gt;.</source>
          <target state="translated">メンテナンスバージョンは、重大なバグ修正を追加するためにのみ変更する必要があります&lt;a href=&quot;perlpolicy&quot;&gt;。perlpolicyを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="3ed12a7152f7b0abf838c20d65d39c62ba0a8766" translate="yes" xml:space="preserve">
          <source>Makamaka Hannyaharamitu, &amp;lt;makamaka[at]cpan.org&amp;gt;</source>
          <target state="translated">Makamaka Hannyaharamitu, &amp;lt;makamaka[at]cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="a94431ee22f05f141107f9355ed3127d0f0c4d5a" translate="yes" xml:space="preserve">
          <source>Make</source>
          <target state="translated">Make</target>
        </trans-unit>
        <trans-unit id="890209e34ccf3fc03b7d07817868a97cdbfea649" translate="yes" xml:space="preserve">
          <source>Make Rule 1</source>
          <target state="translated">ルール1を作る</target>
        </trans-unit>
        <trans-unit id="c7128fd2836e77abc7fc2fd97115996dd6b6b258" translate="yes" xml:space="preserve">
          <source>Make Rule 2</source>
          <target state="translated">ルール2を作る</target>
        </trans-unit>
        <trans-unit id="04eff5d74d7ffc64b3c7d9b1b09aff266f1e0a57" translate="yes" xml:space="preserve">
          <source>Make a bootstrap file for use by DynaLoader</source>
          <target state="translated">DynaLoaderで使用するためのブートストラップファイルを作成します。</target>
        </trans-unit>
        <trans-unit id="1b789b62a7dc7a41add071dab3e403c719b4a9f2" translate="yes" xml:space="preserve">
          <source>Make a lightweight callback. See &lt;a href=&quot;perlcall#LIGHTWEIGHT-CALLBACKS&quot;&gt;&quot;LIGHTWEIGHT CALLBACKS&quot; in perlcall&lt;/a&gt;.</source>
          <target state="translated">軽量のコールバックを作成します。&lt;a href=&quot;perlcall#LIGHTWEIGHT-CALLBACKS&quot;&gt;perlcallの「LIGHTWEIGHTCALLBACKS」を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="5a9fad7783334940c292ba0169f35e46fcaae627" translate="yes" xml:space="preserve">
          <source>Make a lightweight callback. See &lt;a href=&quot;perlcall#LIGHTWEIGHT-CALLBACKS&quot;&gt;LIGHTWEIGHT CALLBACKS in perlcall&lt;/a&gt;.</source>
          <target state="translated">軽量のコールバックを作成します。&lt;a href=&quot;perlcall#LIGHTWEIGHT-CALLBACKS&quot;&gt;perlcallのLIGHTWEIGHT CALLBACKSを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="9cb6efc54c38064ba236700f9dcc12b0629e07ff" translate="yes" xml:space="preserve">
          <source>Make a new &lt;a href=&quot;TAP::Parser::Grammar&quot;&gt;TAP::Parser::Grammar&lt;/a&gt; object and return it. Passes through any arguments given.</source>
          <target state="translated">新しい&lt;a href=&quot;TAP::Parser::Grammar&quot;&gt;TAP :: Parser :: Grammar&lt;/a&gt;オブジェクトを作成して返します。指定された引数を渡します。</target>
        </trans-unit>
        <trans-unit id="f15e6a07de5aec5f1e96a02e428c35fecd418678" translate="yes" xml:space="preserve">
          <source>Make a new &lt;a href=&quot;TAP::Parser::IteratorFactory&quot;&gt;TAP::Parser::IteratorFactory&lt;/a&gt; object and return it. Passes through any arguments given.</source>
          <target state="translated">新しい&lt;a href=&quot;TAP::Parser::IteratorFactory&quot;&gt;TAP :: Parser :: IteratorFactory&lt;/a&gt;オブジェクトを作成し、それを返します。指定された引数を渡します。</target>
        </trans-unit>
        <trans-unit id="ea4827e6585683095f4c0885205596b5426a5ef3" translate="yes" xml:space="preserve">
          <source>Make a new &lt;a href=&quot;TAP::Parser::Result&quot;&gt;TAP::Parser::Result&lt;/a&gt; object using the parser's &lt;a href=&quot;TAP::Parser::ResultFactory&quot;&gt;TAP::Parser::ResultFactory&lt;/a&gt;, and return it. Passes through any arguments given.</source>
          <target state="translated">パーサーの&lt;a href=&quot;TAP::Parser::ResultFactory&quot;&gt;TAP :: Parser :: ResultFactory&lt;/a&gt;を使用して新しい&lt;a href=&quot;TAP::Parser::Result&quot;&gt;TAP :: Parser :: Result&lt;/a&gt;オブジェクトを作成し、それを返します。指定された引数を渡します。</target>
        </trans-unit>
        <trans-unit id="2b212bd484216f27062e119a0984e12eb2f1ca4b" translate="yes" xml:space="preserve">
          <source>Make a new &lt;a href=&quot;parser/grammar&quot;&gt;TAP::Parser::Grammar&lt;/a&gt; object and return it. Passes through any arguments given.</source>
          <target state="translated">新しい&lt;a href=&quot;parser/grammar&quot;&gt;TAP :: Parser :: Grammar&lt;/a&gt;オブジェクトを作成して返します。指定された引数を渡します。</target>
        </trans-unit>
        <trans-unit id="d5ad132f57df20c380d03727edf6efc89d530812" translate="yes" xml:space="preserve">
          <source>Make a new &lt;a href=&quot;parser/iteratorfactory&quot;&gt;TAP::Parser::IteratorFactory&lt;/a&gt; object and return it. Passes through any arguments given.</source>
          <target state="translated">新しい&lt;a href=&quot;parser/iteratorfactory&quot;&gt;TAP :: Parser :: IteratorFactory&lt;/a&gt;オブジェクトを作成し、それを返します。指定された引数を渡します。</target>
        </trans-unit>
        <trans-unit id="fa28fa8c90cb86c9b3f8c83899652b5dd29ba4e0" translate="yes" xml:space="preserve">
          <source>Make a new &lt;a href=&quot;parser/result&quot;&gt;TAP::Parser::Result&lt;/a&gt; object using the parser's &lt;a href=&quot;parser/resultfactory&quot;&gt;TAP::Parser::ResultFactory&lt;/a&gt;, and return it. Passes through any arguments given.</source>
          <target state="translated">パーサーの&lt;a href=&quot;parser/resultfactory&quot;&gt;TAP :: Parser :: ResultFactory&lt;/a&gt;を使用して新しい&lt;a href=&quot;parser/result&quot;&gt;TAP :: Parser :: Result&lt;/a&gt;オブジェクトを作成し、それを返します。指定された引数を渡します。</target>
        </trans-unit>
        <trans-unit id="3a0cb5edb690cd6db709e001b8158abfba90d3f9" translate="yes" xml:space="preserve">
          <source>Make a new parser and display formatter session. Typically used and/or overridden in subclasses.</source>
          <target state="translated">新しいパーサと表示フォーマッタのセッションを作成します。通常、サブクラスで使用されたり、オーバーライドされたりします。</target>
        </trans-unit>
        <trans-unit id="f4f6bf31d70d3b5261f262791889974009fba962" translate="yes" xml:space="preserve">
          <source>Make and return a complete copy of the cop hints hash</source>
          <target state="translated">警官のヒントのハッシュの完全なコピーを作成して返す</target>
        </trans-unit>
        <trans-unit id="ad04abc96b9c23f58bf05411355a885d67609d70" translate="yes" xml:space="preserve">
          <source>Make and return a complete copy of the cop hints hash &lt;code&gt;cophh&lt;/code&gt;.</source>
          <target state="translated">警官のヒントハッシュ &lt;code&gt;cophh&lt;/code&gt; の完全なコピーを作成して返します。</target>
        </trans-unit>
        <trans-unit id="5b886b01d91d82d72977b5c37dc6c5f47e7167a8" translate="yes" xml:space="preserve">
          <source>Make bsd_glob() return an error (GLOB_NOSPACE) when the pattern expands to a size bigger than the system constant &lt;code&gt;ARG_MAX&lt;/code&gt; (usually found in limits.h). If your system does not define this constant, bsd_glob() uses &lt;code&gt;sysconf(_SC_ARG_MAX)&lt;/code&gt; or &lt;code&gt;_POSIX_ARG_MAX&lt;/code&gt; where available (in that order). You can inspect these values using the standard &lt;code&gt;POSIX&lt;/code&gt; extension.</source>
          <target state="translated">パターンがシステム定数 &lt;code&gt;ARG_MAX&lt;/code&gt; （通常はlimits.hにあります）よりも大きいサイズに拡張されたときに、bsd_glob（）がエラー（GLOB_NOSPACE）を返すようにします。システムでこの定数が定義されていない場合、bsd_glob（）は &lt;code&gt;sysconf(_SC_ARG_MAX)&lt;/code&gt; または &lt;code&gt;_POSIX_ARG_MAX&lt;/code&gt; （使用可能な場合）を（この順序で）使用します。これらの値は、標準の &lt;code&gt;POSIX&lt;/code&gt; 拡張を使用して検査できます。</target>
        </trans-unit>
        <trans-unit id="08523af5b76fef9eaed2b77615eb4a213597d67b" translate="yes" xml:space="preserve">
          <source>Make functions faster by trading space for time</source>
          <target state="translated">空間と時間をトレードして機能を高速化</target>
        </trans-unit>
        <trans-unit id="6103567e9e837abb5d1943da6a6814ed98577b8b" translate="yes" xml:space="preserve">
          <source>Make pattern matching case-insensitive.</source>
          <target state="translated">パターンマッチングの大文字と小文字を区別しないようにします。</target>
        </trans-unit>
        <trans-unit id="4b434c4028abbf501b87f9ee8429bc6772c12c60" translate="yes" xml:space="preserve">
          <source>Make perl executable and create a symlink for libperl:</source>
          <target state="translated">perlを実行可能にし、libperl用のシンボリックリンクを作成します。</target>
        </trans-unit>
        <trans-unit id="cb00e29cd519edaa5436add62cd37675b6854ffa" translate="yes" xml:space="preserve">
          <source>Make some changes, build perl and test your changes, then commit them to your local branch. Then push your local branch to a remote smoke-me branch:</source>
          <target state="translated">変更を加え、Perl をビルドしてテストを行い、ローカルブランチにコミットします。そして、ローカルブランチをリモートの smoke-me ブランチにプッシュします。</target>
        </trans-unit>
        <trans-unit id="c9c4fd59ea8eb511f1da67cfee226b250f7a4749" translate="yes" xml:space="preserve">
          <source>Make sure &lt;a href=&quot;#gethostbyname-NAME&quot;&gt;&lt;code&gt;gethostbyname&lt;/code&gt;&lt;/a&gt; is called in SCALAR context and that its return value is checked for definedness.</source>
          <target state="translated">&lt;a href=&quot;#gethostbyname-NAME&quot;&gt; &lt;code&gt;gethostbyname&lt;/code&gt; &lt;/a&gt;がSCALARコンテキストで呼び出され、その戻り値が定義されているかどうかがチェックされていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="631c39697ec2fc47f9fdac3b73868b5eac8535e4" translate="yes" xml:space="preserve">
          <source>Make sure &lt;code&gt;&lt;a href=&quot;functions/gethostbyname&quot;&gt;gethostbyname()&lt;/a&gt;&lt;/code&gt; is called in SCALAR context and that its return value is checked for definedness.</source>
          <target state="translated">確認してください &lt;code&gt;&lt;a href=&quot;functions/gethostbyname&quot;&gt;gethostbyname()&lt;/a&gt;&lt;/code&gt; スカラーコンテキストで、その戻り値が定義済みかをチェックされていることと呼ばれています。</target>
        </trans-unit>
        <trans-unit id="1af92bfd9067c908f166333d8740f6095af6a588" translate="yes" xml:space="preserve">
          <source>Make sure &lt;code&gt;&lt;a href=&quot;gethostbyname&quot;&gt;gethostbyname()&lt;/a&gt;&lt;/code&gt; is called in SCALAR context and that its return value is checked for definedness.</source>
          <target state="translated">確認してください &lt;code&gt;&lt;a href=&quot;gethostbyname&quot;&gt;gethostbyname()&lt;/a&gt;&lt;/code&gt; スカラーコンテキストで、その戻り値が定義済みかをチェックされていることと呼ばれています。</target>
        </trans-unit>
        <trans-unit id="9aee806c3df793514446c4364ffe009cca7c0176" translate="yes" xml:space="preserve">
          <source>Make sure that &lt;code&gt;CPAN.pm&lt;/code&gt; can download files from CPAN. If not, you may need to manually install &lt;code&gt;Net::FTP&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;CPAN.pm&lt;/code&gt; がCPANからファイルをダウンロードできることを確認してください。そうでない場合は、手動で &lt;code&gt;Net::FTP&lt;/code&gt; インストールする必要があります。</target>
        </trans-unit>
        <trans-unit id="3ab54a8b3ec25f60b45ddf50dac5e3bb5f61317d" translate="yes" xml:space="preserve">
          <source>Make sure that &lt;code&gt;CPAN.pm&lt;/code&gt; can download files from CPAN. If not, you may need to manually install &lt;code&gt;Net::FTP&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CPAN.pm&lt;/code&gt; がCPANからファイルをダウンロードできることを確認してください。そうでない場合は、 &lt;code&gt;Net::FTP&lt;/code&gt; を手動でインストールする必要があります。</target>
        </trans-unit>
        <trans-unit id="d90bf5e032808a1790937eefc282a0216577eb91" translate="yes" xml:space="preserve">
          <source>Make sure that the directory &lt;b&gt;above&lt;/b&gt; the directory with manpages is on our &lt;code&gt;MANPATH&lt;/code&gt; , like this</source>
          <target state="translated">次の&lt;b&gt;ように&lt;/b&gt;、マンページがあるディレクトリの&lt;b&gt;上&lt;/b&gt;のディレクトリが &lt;code&gt;MANPATH&lt;/code&gt; にあることを確認してください</target>
        </trans-unit>
        <trans-unit id="a8decd758e6ca0f6998ca613347958cb822b733d" translate="yes" xml:space="preserve">
          <source>Make sure that the directory &lt;b&gt;above&lt;/b&gt; the directory with manpages is on our &lt;code&gt;MANPATH&lt;/code&gt;, like this</source>
          <target state="translated">マンページのあるディレクトリの&lt;b&gt;上&lt;/b&gt;のディレクトリが、次のように &lt;code&gt;MANPATH&lt;/code&gt; &lt;b&gt;上に&lt;/b&gt;あることを確認してください。</target>
        </trans-unit>
        <trans-unit id="6d62a68cc52f846e8b7cd7e34bad20513f656424" translate="yes" xml:space="preserve">
          <source>Make sure that the installed modules are actually installed in the location of the new Perl, and are not inherited from entries of @INC given for inheritance from the older versions of Perl: set &lt;code&gt;PERLLIB_582_PREFIX&lt;/code&gt; to redirect the new version of Perl to a new location, and copy the installed files to this new location. Redo the tests to make sure that the versions of modules inherited from older versions of Perl are not needed.</source>
          <target state="translated">インストールされているモジュールが新しいPerlの場所に実際にインストールされており、古いバージョンのPerlから継承するために指定された@INCのエントリから継承されていないことを確認します。新しいバージョンのPerlを新しい場所にリダイレクトするには、 &lt;code&gt;PERLLIB_582_PREFIX&lt;/code&gt; を設定します。インストールされたファイルをこの新しい場所にコピーします。テストをやり直して、古いバージョンのPerlから継承したモジュールのバージョンが不要であることを確認します。</target>
        </trans-unit>
        <trans-unit id="8e40ae3a79feffa50f9360f35cfc29b12c2563ad" translate="yes" xml:space="preserve">
          <source>Make sure that you &lt;code&gt;make realclean&lt;/code&gt; in your copy of Perl to remove any build artifacts, or you may get a confusing result.</source>
          <target state="translated">あなたがいることを確認してください &lt;code&gt;make realclean&lt;/code&gt; 任意のビルド成果物を取り除くためのPerlのコピーに、またはあなたが混乱の結果を得ることができます。</target>
        </trans-unit>
        <trans-unit id="c48620eee0813f53db06b1d13fb05c7d0b30ec92" translate="yes" xml:space="preserve">
          <source>Make sure that your module has a license, and that the full text of it is included in the distribution (unless it's a common one and the terms of the license don't require you to include it).</source>
          <target state="translated">あなたのモジュールがライセンスを持っていることと、その全文が配布物に含まれていることを確認してください(一般的なもので、ライセンスの条件が含まれている必要がない場合は別です)。</target>
        </trans-unit>
        <trans-unit id="b4b22689c7f11757036113b227d7cdc8128156e0" translate="yes" xml:space="preserve">
          <source>Make sure the commit message describes your change in a single sentence. For example, &quot;Fixed spelling errors in perlhack.pod&quot;.</source>
          <target state="translated">コミットメッセージには、変更点を一文で記述するようにしてください。例えば、「perlhack.podのスペルミスを修正しました。</target>
        </trans-unit>
        <trans-unit id="31c004e759b68f9d5539083901242f08c624a89b" translate="yes" xml:space="preserve">
          <source>Make sure the newlines for the modules are in Mac format, not Unix format. If they are not then you might have decompressed them incorrectly. Check your decompression and unpacking utilities settings to make sure they are translating text files properly.</source>
          <target state="translated">モジュールの改行が Unix フォーマットではなく Mac フォーマットであることを確認してください。もしそうでない場合は、間違って解凍されている可能性があります。解凍と解凍ユーティリティの設定をチェックして、テキストファイルが適切に変換されていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="0da095bfcf60a5da0d5078d4fb200d212838fa47" translate="yes" xml:space="preserve">
          <source>Make sure the patch is not reversed (the first argument to diff is typically the original file, the second argument your changed file). Make sure you test your patch by applying it with &lt;code&gt;git am&lt;/code&gt; or the &lt;code&gt;patch&lt;/code&gt; program before you send it on its way. Try to follow the same style as the code you are trying to patch. Make sure your patch really does work (&lt;code&gt;make test&lt;/code&gt; , if the thing you're patching is covered by Perl's test suite).</source>
          <target state="translated">パッチが元に戻されていないことを確認してください（diffの最初の引数は通常、元のファイルで、2番目の引数は変更されたファイルです）。 &lt;code&gt;patch&lt;/code&gt; を送信する前に、 &lt;code&gt;git am&lt;/code&gt; またはパッチプログラムを使用してパッチをテストしてください。パッチしようとしているコードと同じスタイルに従うようにしてください。パッチが実際に機能することを確認してください（パッチを適用するものがPerlのテストスイートでカバーされている場合は、 &lt;code&gt;make test&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="bda29a86fe66e1909a0c4600719933cf688a2cb2" translate="yes" xml:space="preserve">
          <source>Make sure the patch is not reversed (the first argument to diff is typically the original file, the second argument your changed file). Make sure you test your patch by applying it with &lt;code&gt;git am&lt;/code&gt; or the &lt;code&gt;patch&lt;/code&gt; program before you send it on its way. Try to follow the same style as the code you are trying to patch. Make sure your patch really does work (&lt;code&gt;make test&lt;/code&gt;, if the thing you're patching is covered by Perl's test suite).</source>
          <target state="translated">パッチが逆になっていないことを確認してください（diffの最初の引数は通常元のファイルで、2番目の引数は変更されたファイルです）。 &lt;code&gt;patch&lt;/code&gt; を送信する前に、必ず &lt;code&gt;git am&lt;/code&gt; またはパッチプログラムを使用してパッチをテストしてください。パッチを適用しようとしているコードと同じスタイルに従うようにしてください。必ず（あなたのパッチが実際に作業してください &lt;code&gt;make test&lt;/code&gt; 事はあなただパッチングはPerlのテストスイートで覆われている場合、）。</target>
        </trans-unit>
        <trans-unit id="6fe3ef49c50e09399f8e7e0ae50f650120ed9ba3" translate="yes" xml:space="preserve">
          <source>Make sure the path to the build directory does not contain spaces. The build usually works in this circumstance, but some tests will fail.</source>
          <target state="translated">ビルドディレクトリへのパスにスペースが含まれていないことを確認してください。このような状況でも通常はビルドは動作しますが、いくつかのテストは失敗します。</target>
        </trans-unit>
        <trans-unit id="b12b8debe1b2db03630198cf21bf4b854e3bc2a9" translate="yes" xml:space="preserve">
          <source>Make sure to read about creating modules in &lt;a href=&quot;perlmod&quot;&gt;perlmod&lt;/a&gt; and the perils of indirect objects in &lt;a href=&quot;perlobj#Method-Invocation&quot;&gt;&quot;Method Invocation&quot; in perlobj&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;perlmod&quot;&gt;perlmod&lt;/a&gt;でのモジュールの作成と、perlobjの&lt;a href=&quot;perlobj#Method-Invocation&quot;&gt;「メソッド呼び出し」で&lt;/a&gt;の間接オブジェクトの危険性について必ずお読みください。</target>
        </trans-unit>
        <trans-unit id="b25e9d6769a32bda0cb16adea51fc9a9577bd44e" translate="yes" xml:space="preserve">
          <source>Make sure to read about creating modules in &lt;a href=&quot;perlmod&quot;&gt;perlmod&lt;/a&gt; and the perils of indirect objects in &lt;a href=&quot;perlobj#Method-Invocation&quot;&gt;Method Invocation in perlobj&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;perlmod&quot;&gt;perlmod&lt;/a&gt;でのモジュールの作成、および&lt;a href=&quot;perlobj#Method-Invocation&quot;&gt;perlobjのメソッド呼び出しでの&lt;/a&gt;間接オブジェクトの危険について必ずお読みください。</target>
        </trans-unit>
        <trans-unit id="83ed513e31fceec21b34e65bf0ccb8e2f135bfc2" translate="yes" xml:space="preserve">
          <source>Make sure you are in the &quot;win32&quot; subdirectory under the perl toplevel. This directory contains a &quot;Makefile&quot; that will work with versions of nmake that come with Visual C++ or the Windows SDK, and a GNU make &quot;GNUmakefile&quot; or dmake &quot;makefile.mk&quot; that will work for all supported compilers. The defaults in the gmake and dmake makefile are setup to build using MinGW/gcc.</source>
          <target state="translated">perl toplevel の下の &quot;win32&quot; サブディレクトリにあることを確認してください。このディレクトリには、Visual C++や Windows SDK に付属する nmake のバージョンで動作する &quot;Makefile&quot; と、サポートされている全てのコンパイラで動作する GNU make &quot;GNUmakefile&quot; や dmake &quot;makefile.mk&quot; が含まれています。gmake と dmake makefile のデフォルトは MinGW/gcc を使ってビルドするように設定されています。</target>
        </trans-unit>
        <trans-unit id="c9bbcc12fd16263e19bc5318e960269249316b2e" translate="yes" xml:space="preserve">
          <source>Make sure you are in the &quot;win32&quot; subdirectory under the perl toplevel. This directory contains a &quot;Makefile&quot; that will work with versions of nmake that come with Visual C++ or the Windows SDK, and a dmake &quot;makefile.mk&quot; that will work for all supported compilers. The defaults in the dmake makefile are setup to build using MinGW/gcc.</source>
          <target state="translated">perl toplevelの下の &quot;win32 &quot;サブディレクトリにあることを確認してください。このディレクトリには、Visual C++や Windows SDK に付属している nmake のバージョンで動作する &quot;Makefile&quot; と、サポートされている全てのコンパイラで動作する dmake &quot;makefile.mk&quot; が含まれています。dmake makefile のデフォルトは MinGW/gcc を使ってビルドするように設定されています。</target>
        </trans-unit>
        <trans-unit id="b578a0bba566a5e009cf7a1e8f93afb16265f4fa" translate="yes" xml:space="preserve">
          <source>Make sure you choose an appropriate name for your module early on. This will help people find and remember your module, and make programming with your module more intuitive.</source>
          <target state="translated">早めにモジュールの適切な名前を選択するようにしてください。そうすることで、人々がモジュールを見つけて覚えやすくなり、モジュールを使ったプログラミングをより直感的に行うことができるようになります。</target>
        </trans-unit>
        <trans-unit id="b8dca7eb87954059e67d6baf9d117854dccfc284" translate="yes" xml:space="preserve">
          <source>Make sure you have MMS (from Digital) or the freeware MMK ( available from MadGoat at &lt;a href=&quot;http://www.madgoat.com&quot;&gt;http://www.madgoat.com&lt;/a&gt; ). Then type this to create the DESCRIP.MMS for the module:</source>
          <target state="translated">MMS（Digital製）またはフリーウェアMMK（MadGoatの&lt;a href=&quot;http://www.madgoat.com&quot;&gt;http://www.madgoat.com&lt;/a&gt;から入手可能）があることを確認してください。次に、次のように入力して、モジュールのDESCRIP.MMSを作成します。</target>
        </trans-unit>
        <trans-unit id="41203b5dff78423d936ef4a4e1c0f8291555b765" translate="yes" xml:space="preserve">
          <source>Make sure you have a good commit message. See &lt;a href=&quot;perlhack#Commit-message&quot;&gt;&quot;Commit message&quot; in perlhack&lt;/a&gt; for details.</source>
          <target state="translated">適切なコミットメッセージがあることを確認してください。詳細については&lt;a href=&quot;perlhack#Commit-message&quot;&gt;、perlhackの「コミットメッセージ」&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="45bcb550cc19143c5e8dd91291c0c6d1da90642e" translate="yes" xml:space="preserve">
          <source>Make sure you have the appropriate permissions to install the module in your Perl 5 library directory. Often, you'll need to be root.</source>
          <target state="translated">Perl 5 のライブラリディレクトリにモジュールをインストールするための適切なパーミッションを持っていることを確認してください。多くの場合、root になる必要があります。</target>
        </trans-unit>
        <trans-unit id="8c6288609b67d4900e3a7acdb0708c647b7ddea0" translate="yes" xml:space="preserve">
          <source>Make sure you use a tab and not spaces on the lines beginning with &quot;$(AR)&quot; and &quot;$(RANLIB)&quot;. Make will not function properly if you use spaces. It has also been reported that the &quot;cr&quot; argument to $(AR) is unnecessary on Win32 systems.</source>
          <target state="translated">(AR)」や「$(RANLIB)」で始まる行には、スペースを使わずにタブを使用してください。スペースを使うとMakeが正常に動作しません。また、Win32 システムでは $(AR)の &quot;cr&quot; 引数が不要であることが報告されています。</target>
        </trans-unit>
        <trans-unit id="6aa0752b0b4c6627413012df0488bf1ad6b435f3" translate="yes" xml:space="preserve">
          <source>Make sure your PATH includes the compiler (/opt/SUNWspro/bin/ if you're using Sun's compiler) as well as /usr/ccs/bin/ to pick up the other development tools (such as make, ar, as, and ld). Make sure your path either doesn't include /usr/ucb or that it includes it after the compiler and compiler tools and other standard Solaris directories. You definitely don't want /usr/ucb/cc.</source>
          <target state="translated">PATH にコンパイラ (Sun のコンパイラを使用している場合は /opt/SUNWspro/bin/)と /usr/ccs/bin/が含まれていて、他の開発ツール (make,ar,as,ld など)を拾うことができることを確認してください。パスに /usr/ucb が含まれていないか、コンパイラやコンパイラツール、その他の Solaris の標準的なディレクトリの後に /usr/ucb が含まれていることを確認してください。/usr/ucb/cc は絶対に避けてください。</target>
        </trans-unit>
        <trans-unit id="da98ff8151fcc7f9259493c3bc630b4f6abd18b6" translate="yes" xml:space="preserve">
          <source>Make sure your gcc is good for &lt;code&gt;-Zomf&lt;/code&gt; linking: run &lt;code&gt;omflibs&lt;/code&gt; script in</source>
          <target state="translated">gccが &lt;code&gt;-Zomf&lt;/code&gt; リンクに適していることを確認します &lt;code&gt;omflibs&lt;/code&gt; スクリプトを実行します。</target>
        </trans-unit>
        <trans-unit id="a248163580a9e29ef4a7312495856815f271337b" translate="yes" xml:space="preserve">
          <source>Make the first argument a copy of the second, then delete the original. The target SV physically takes over ownership of the body of the source SV and inherits its flags; however, the target keeps any magic it owns, and any magic in the source is discarded. Note that this is a rather specialist SV copying operation; most of the time you'll want to use &lt;code&gt;sv_setsv&lt;/code&gt; or one of its many macro front-ends.</source>
          <target state="translated">最初の引数を2番目の引数のコピーにしてから、元の引数を削除します。ターゲットSVはソースSVの本体の所有権を物理的に引き継ぎ、そのフラグを継承します。ただし、ターゲットは所有するすべての魔法を保持し、ソース内のすべての魔法は破棄されます。これはかなり専門的なSVコピー操作であることに注意してください。ほとんどの場合、 &lt;code&gt;sv_setsv&lt;/code&gt; またはその多数のマクロフロントエンドの1つを使用します。</target>
        </trans-unit>
        <trans-unit id="f4bb5d8584647cb5cbfe371da2ee93cc6742e08f" translate="yes" xml:space="preserve">
          <source>Make the most of the opportunity.</source>
          <target state="translated">この機会を最大限に活用しましょう。</target>
        </trans-unit>
        <trans-unit id="0aff0a17d7bda6c607f6b94065807887a26ea78b" translate="yes" xml:space="preserve">
          <source>Make the specified modules.</source>
          <target state="translated">指定されたモジュールを作成します。</target>
        </trans-unit>
        <trans-unit id="87a3a748935c5363a3cfdc69fbfc39c4592f4900" translate="yes" xml:space="preserve">
          <source>Make the string $content be the content for the file named $file.</source>
          <target state="translated">文字列 $content を、$file という名前のファイルの内容にします。</target>
        </trans-unit>
        <trans-unit id="b14a5a45500c708bfc2adecf45938f8ddfc95c0a" translate="yes" xml:space="preserve">
          <source>Make updating the '1..42' string unnecessary. Or make sure that you update it.</source>
          <target state="translated">'1.42'の文字列の更新を不要にする。または、必ず更新するようにしてください。</target>
        </trans-unit>
        <trans-unit id="fec86bec8c09394515f33cb2e0c1c11e1bbbc3fc" translate="yes" xml:space="preserve">
          <source>Make your change</source>
          <target state="translated">あなたの変更を行う</target>
        </trans-unit>
        <trans-unit id="596d9cf2b55f30476a38bd041bc47cf1626a134d" translate="yes" xml:space="preserve">
          <source>Make your module use the Test::Tester::Capture object instead of the Test::Builder one. How to do this depends on your module but assuming that your module holds the Test::Builder object in $Test and that all your test routines access it through $Test then providing a function something like this</source>
          <target state="translated">モジュールで Test::Builder オブジェクトの代わりに Test::Tester::Capture オブジェクトを使用するようにします。これをどのように行うかはモジュールによりますが、モジュールがTest::Builderオブジェクトを$Testに保持しており、すべてのテストルーチンが$Testを通してこれにアクセスすると仮定して、以下のような関数を提供することになります。</target>
        </trans-unit>
        <trans-unit id="951e86d639f2ed613d02f1c077ce05396f017abb" translate="yes" xml:space="preserve">
          <source>MakeMaker (as of 6.31) and Module::Build (as of 0.28) both can install to the same locations using the &quot;install_base&quot; concept. See &lt;a href=&quot;../makemaker#INSTALL_BASE&quot;&gt;INSTALL_BASE in ExtUtils::MakeMaker&lt;/a&gt; for details. To get MM and MB to install to the same location simply set INSTALL_BASE in MM and &lt;code&gt;--install_base&lt;/code&gt; in MB to the same location.</source>
          <target state="translated">MakeMaker（6.31以降）とModule :: Build（0.28以降）はどちらも、「install_base」の概念を使用して同じ場所にインストールできます。詳細について&lt;a href=&quot;../makemaker#INSTALL_BASE&quot;&gt;は、ExtUtils :: MakeMakerのINSTALL_BASE&lt;/a&gt;を参照してください。MMとMBを同じ場所にインストールするには、MMのINSTALL_BASEとMBの &lt;code&gt;--install_base&lt;/code&gt; を同じ場所に設定するだけです。</target>
        </trans-unit>
        <trans-unit id="5c9d90bcb0e3741266cfc2e63ed8d7436fe1c84f" translate="yes" xml:space="preserve">
          <source>MakeMaker (as of 6.31) and Module::Build (as of 0.28) both can install to the same locations using the &quot;install_base&quot; concept. See &lt;a href=&quot;ExtUtils::MakeMaker#INSTALL_BASE&quot;&gt;&quot;INSTALL_BASE&quot; in ExtUtils::MakeMaker&lt;/a&gt; for details. To get MM and MB to install to the same location simply set INSTALL_BASE in MM and &lt;code&gt;--install_base&lt;/code&gt; in MB to the same location.</source>
          <target state="translated">MakeMaker（6.31以降）とModule :: Build（0.28以降）はどちらも、「install_base」の概念を使用して同じ場所にインストールできます。詳細について&lt;a href=&quot;ExtUtils::MakeMaker#INSTALL_BASE&quot;&gt;は、ExtUtils :: MakeMakerの「INSTALL_BASE」&lt;/a&gt;を参照してください。MMとMBを同じ場所にインストールするには、MMのINSTALL_BASEとMBの &lt;code&gt;--install_base&lt;/code&gt; を同じ場所に設定するだけです。</target>
        </trans-unit>
        <trans-unit id="f57976a42f4d4f108960d3047b05d9b0bd7410ad" translate="yes" xml:space="preserve">
          <source>MakeMaker also checks for any files matching glob(&quot;t/*.t&quot;). It will execute all matching files in alphabetical order via the &lt;a href=&quot;../test/harness&quot;&gt;Test::Harness&lt;/a&gt; module with the &lt;code&gt;-I&lt;/code&gt; switches set correctly.</source>
          <target state="translated">MakeMakerは、glob（ &quot;t / *。t&quot;）に一致するファイルもチェックします。 &lt;code&gt;-I&lt;/code&gt; スイッチが正しく設定されている&lt;a href=&quot;../test/harness&quot;&gt;Test :: Harness&lt;/a&gt;モジュールを介して、すべての一致するファイルをアルファベット順に実行します。</target>
        </trans-unit>
        <trans-unit id="181073f157ed87afd7d4a36cdc4890d3df65a53c" translate="yes" xml:space="preserve">
          <source>MakeMaker also checks for any files matching glob(&quot;t/*.t&quot;). It will execute all matching files in alphabetical order via the &lt;a href=&quot;Test::Harness&quot;&gt;Test::Harness&lt;/a&gt; module with the &lt;code&gt;-I&lt;/code&gt; switches set correctly.</source>
          <target state="translated">MakeMakerは、glob（ &quot;t / *。t&quot;）に一致するファイルもチェックします。 &lt;code&gt;-I&lt;/code&gt; スイッチが正しく設定された&lt;a href=&quot;Test::Harness&quot;&gt;Test :: Harness&lt;/a&gt;モジュールを介して、一致するすべてのファイルをアルファベット順に実行します。</target>
        </trans-unit>
        <trans-unit id="ea4d9ecb21fe83e2ef44aa02cc6eba3ee3c63cf7" translate="yes" xml:space="preserve">
          <source>MakeMaker also honors the MAKE environment variable. This parameter takes precedence.</source>
          <target state="translated">MakeMaker は環境変数 MAKE にも対応しています。このパラメータが優先されます。</target>
        </trans-unit>
        <trans-unit id="6ce95146fa946e6764eac19b0f7702edb2af3abd" translate="yes" xml:space="preserve">
          <source>MakeMaker can run programs to generate files for you at build time. By default any file named *.PL (except Makefile.PL and Build.PL) in the top level directory will be assumed to be a Perl program and run passing its own basename in as an argument. For example...</source>
          <target state="translated">MakeMaker は、ビルド時にファイルを生成するプログラムを実行することができます。デフォルトでは、トップレベルのディレクトリにある *.PL (Makefile.PL と Build.PL を除く)という名前のファイルは、Perl プログラムとみなされ、引数に自身のベースネームを渡して実行されます。例えば...</target>
        </trans-unit>
        <trans-unit id="0b27f17fb6be8902dd15dc474df4292373ebba16" translate="yes" xml:space="preserve">
          <source>MakeMaker can run programs to generate files for you at build time. By default any file named *.PL (except Makefile.PL and Build.PL) in the top level directory will be assumed to be a Perl program and run passing its own basename in as an argument. This basename is actually a build target, and there is an intention, but not a requirement, that the *.PL file make the file passed to to as an argument. For example...</source>
          <target state="translated">MakeMaker は、ビルド時にファイルを生成するプログラムを実行することができます。デフォルトでは、トップレベルのディレクトリにある *.PL という名前のファイル (Makefile.PL と Build.PL を除く)は、Perl プログラムとみなされ、自身のベースネームを引数として渡して実行されます。このベースネームは実際にはビルドターゲットであり、 *.PL ファイルが引数として渡されたファイルを実行することを意図していますが、必須ではありません。例えば...</target>
        </trans-unit>
        <trans-unit id="f4a59e2381035838e81553acd07a6dbd71a643d2" translate="yes" xml:space="preserve">
          <source>MakeMaker checks for the existence of a file named</source>
          <target state="translated">という名前のファイルが存在するかどうかをチェックします。</target>
        </trans-unit>
        <trans-unit id="7e46986c8cad84d029006573feccd2e12b58af53" translate="yes" xml:space="preserve">
          <source>MakeMaker comes with a default MANIFEST.SKIP to avoid things like version control directories and backup files. Specifying your own will override this default.</source>
          <target state="translated">MakeMaker には、バージョン管理ディレクトリやバックアップファイルのようなものを避けるために、デフォルトの MANIFEST.SKIP が用意されています。自分で指定することで、このデフォルトは上書きされます。</target>
        </trans-unit>
        <trans-unit id="9177c899e90b4ecb1a9e016234bba13b638eedd6" translate="yes" xml:space="preserve">
          <source>MakeMaker gives you much more freedom than needed to configure internal variables and get different results. It is worth mentioning that make(1) also lets you configure most of the variables that are used in the Makefile. But in the majority of situations this will not be necessary, and should only be done if the author of a package recommends it (or you know what you're doing).</source>
          <target state="translated">MakeMaker は、内部変数を設定するのに必要な以上に自由度が高く、異なる結果を得ることができます。make(1)は Makefile で使われているほとんどの変数を設定できることにも言及する価値があります。しかし、大抵の場合、これは必要ないでしょうし、パッケージの作者が推奨している場合にのみ行うべきです (あるいは、あなたが何をしているか分かっている場合)。</target>
        </trans-unit>
        <trans-unit id="666dfa9a2df2803aca52ee89b75129726d38981a" translate="yes" xml:space="preserve">
          <source>MakeMaker modules are installed using this simple mantra</source>
          <target state="translated">MakeMaker モジュールのインストールには、次のようなシンプルなマントラを使用します。</target>
        </trans-unit>
        <trans-unit id="6eebe1cd37eee2ec321b36b14411ecc5f97674e6" translate="yes" xml:space="preserve">
          <source>MakeMaker needs to know, or to guess, where certain things are located. Especially INST_LIB and INST_ARCHLIB (where to put the files during the make(1) run), PERL_LIB and PERL_ARCHLIB (where to read existing modules from), and PERL_INC (header files and &lt;code&gt;libperl*.*&lt;/code&gt;).</source>
          <target state="translated">MakeMakerは、特定のものがどこにあるかを知るか、または推測する必要があります。特にINST_LIBとINST_ARCHLIB（make（1）の実行中にファイルを置く場所）、PERL_LIBとPERL_ARCHLIB（既存のモジュールを読み取る場所）、およびPERL_INC（ヘッダーファイルと &lt;code&gt;libperl*.*&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="1794fe2317715149406a57e4edb43a113c75b0e3" translate="yes" xml:space="preserve">
          <source>MakeMaker object hierarchy (real)</source>
          <target state="translated">MakeMaker のオブジェクト階層(実数</target>
        </trans-unit>
        <trans-unit id="5c459908262333c218dd37bde4b33c42a42bd948" translate="yes" xml:space="preserve">
          <source>MakeMaker object hierarchy (simplified)</source>
          <target state="translated">MakeMaker のオブジェクト階層(簡易版</target>
        </trans-unit>
        <trans-unit id="955e1b765c6718c7db11e68ac1240b76cf36838e" translate="yes" xml:space="preserve">
          <source>MakeMaker will figure out if an extension contains linkable code anywhere down the directory tree, and will set this variable accordingly, but you can speed it up a very little bit if you define this boolean variable yourself.</source>
          <target state="translated">MakeMaker は、拡張機能にリンク可能なコードが含まれているかどうかを判断し、それに応じてこの変数を設定しますが、このブール変数を自分で定義することで、少しだけ高速化することができます。</target>
        </trans-unit>
        <trans-unit id="4bbacb6ac277a541e0abc4615218907895ae391a" translate="yes" xml:space="preserve">
          <source>MakeMaker will turn it into an array with one element.</source>
          <target state="translated">MakeMakerでは1つの要素を持つ配列に変換してくれます。</target>
        </trans-unit>
        <trans-unit id="e6de50a7c31889077966d7620ec5db61a68c67cc" translate="yes" xml:space="preserve">
          <source>MakeMaker.pm uses the architecture-specific information from Config.pm. In addition it evaluates architecture specific hints files in a &lt;code&gt;hints/&lt;/code&gt; directory. The hints files are expected to be named like their counterparts in &lt;code&gt;PERL_SRC/hints&lt;/code&gt; , but with an &lt;code&gt;.pl&lt;/code&gt; file name extension (eg. &lt;code&gt;next_3_2.pl&lt;/code&gt; ). They are simply &lt;code&gt;&lt;a href=&quot;../functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;ed by MakeMaker within the WriteMakefile() subroutine, and can be used to execute commands as well as to include special variables. The rules which hintsfile is chosen are the same as in Configure.</source>
          <target state="translated">MakeMaker.pmは、Config.pmからのアーキテクチャ固有の情報を使用します。さらに、 &lt;code&gt;hints/&lt;/code&gt; ディレクトリ内のアーキテクチャ固有のヒントファイルを評価します。ヒントファイルは、 &lt;code&gt;PERL_SRC/hints&lt;/code&gt; の対応するファイルと同じように名前を付ける必要がありますが、ファイル名拡張子は &lt;code&gt;.pl&lt;/code&gt; （例： &lt;code&gt;next_3_2.pl&lt;/code&gt; ）です。これらはWriteMakefile（）サブルーチン内でMakeMakerによって単に &lt;code&gt;&lt;a href=&quot;../functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; され、コマンドを実行したり、特殊変数を含めたりするために使用できます。ヒントファイルが選択されるルールは、構成と同じです。</target>
        </trans-unit>
        <trans-unit id="85ffcac06be8bba3c10e447c47204872c6672f8a" translate="yes" xml:space="preserve">
          <source>MakeMaker.pm uses the architecture-specific information from Config.pm. In addition it evaluates architecture specific hints files in a &lt;code&gt;hints/&lt;/code&gt; directory. The hints files are expected to be named like their counterparts in &lt;code&gt;PERL_SRC/hints&lt;/code&gt;, but with an &lt;code&gt;.pl&lt;/code&gt; file name extension (eg. &lt;code&gt;next_3_2.pl&lt;/code&gt;). They are simply &lt;code&gt;eval&lt;/code&gt;ed by MakeMaker within the WriteMakefile() subroutine, and can be used to execute commands as well as to include special variables. The rules which hintsfile is chosen are the same as in Configure.</source>
          <target state="translated">MakeMaker.pmは、Config.pmからのアーキテクチャ固有の情報を使用します。さらに、 &lt;code&gt;hints/&lt;/code&gt; ディレクトリ内のアーキテクチャ固有のヒントファイルを評価します。ヒントファイルは、 &lt;code&gt;PERL_SRC/hints&lt;/code&gt; 対応するファイルと同じように名前が付けられていることが期待されますが、ファイル名拡張子は &lt;code&gt;.pl&lt;/code&gt; です（例： &lt;code&gt;next_3_2.pl&lt;/code&gt; ）。これらは、WriteMakefile（）サブルーチン内でMakeMakerによって簡単に &lt;code&gt;eval&lt;/code&gt; され、コマンドの実行や特別な変数の組み込みに使用できます。ヒントファイルが選択されるルールは、構成の場合と同じです。</target>
        </trans-unit>
        <trans-unit id="836efb6e25a091dcb4ff8e1dbb2f0be6a5cbf14c" translate="yes" xml:space="preserve">
          <source>Makefile</source>
          <target state="translated">Makefile</target>
        </trans-unit>
        <trans-unit id="a6a4139b0f32af1594c237ebe008acaf8217f505" translate="yes" xml:space="preserve">
          <source>Makefile.PL</source>
          <target state="translated">Makefile.PL</target>
        </trans-unit>
        <trans-unit id="7b63f64a9d58c97e157e981bc21fc3592f84d63a" translate="yes" xml:space="preserve">
          <source>Makefile.SH</source>
          <target state="translated">Makefile.SH</target>
        </trans-unit>
        <trans-unit id="7703506e8273da38efd2a8cfe539dd5151c3f507" translate="yes" xml:space="preserve">
          <source>Makefile.aperl</source>
          <target state="translated">Makefile.aperl</target>
        </trans-unit>
        <trans-unit id="c9fdff62ddc7b582d9333af8bb3618798e22507b" translate="yes" xml:space="preserve">
          <source>Makefile.ce</source>
          <target state="translated">Makefile.ce</target>
        </trans-unit>
        <trans-unit id="f59062c8b44c1bb393273cea0b6483c724adc359" translate="yes" xml:space="preserve">
          <source>Makes LZMA compression a lot slower, but a small compression gain.</source>
          <target state="translated">LZMAの圧縮を遅くしますが、圧縮ゲインは小さくなります。</target>
        </trans-unit>
        <trans-unit id="42141d0e6f7cf55bf1aa53a30a2f72e384ff774e" translate="yes" xml:space="preserve">
          <source>Makes a deep copy of the object.</source>
          <target state="translated">オブジェクトの深いコピーを作成します。</target>
        </trans-unit>
        <trans-unit id="1ff909c4c06b83ac514fd30202e92170c2be88e6" translate="yes" xml:space="preserve">
          <source>Makes a distdir first, and runs a &lt;code&gt;perl Makefile.PL&lt;/code&gt; , a make, and a make test in that directory.</source>
          <target state="translated">最初にdistdirを作成し、そのディレクトリで &lt;code&gt;perl Makefile.PL&lt;/code&gt; 、make、およびmakeテストを実行します。</target>
        </trans-unit>
        <trans-unit id="8128104f9c2607926a021874ef102e7bc1c7d502" translate="yes" xml:space="preserve">
          <source>Makes a distdir first, and runs a &lt;code&gt;perl Makefile.PL&lt;/code&gt;, a make, and a make test in that directory.</source>
          <target state="translated">最初にdistdirを作成し、そのディレクトリで &lt;code&gt;perl Makefile.PL&lt;/code&gt; 、make、およびmakeテストを実行します。</target>
        </trans-unit>
        <trans-unit id="0126aa7337111c40fd3d8ee768267099e88c4e18" translate="yes" xml:space="preserve">
          <source>Makes an idhash from the argument, which must be a hash.</source>
          <target state="translated">引数からidhashを作成します。</target>
        </trans-unit>
        <trans-unit id="0c2559af9d3a61aae60ee275b6a01f1105ed29e6" translate="yes" xml:space="preserve">
          <source>Makes files exist, with current timestamp</source>
          <target state="translated">現在のタイムスタンプでファイルを存在させます。</target>
        </trans-unit>
        <trans-unit id="277c90e53937992c5799a554ef17ea6240ac0378" translate="yes" xml:space="preserve">
          <source>Makes sure at run time that the object file (derived from the &lt;code&gt;.xs&lt;/code&gt; file) and the &lt;code&gt;.pm&lt;/code&gt; files have the same version number. Default is true.</source>
          <target state="translated">実行時に、オブジェクトファイル（ &lt;code&gt;.xs&lt;/code&gt; ファイルから派生）と &lt;code&gt;.pm&lt;/code&gt; ファイルのバージョン番号が同じであることを確認します。デフォルトはtrueです。</target>
        </trans-unit>
        <trans-unit id="53d81221f3002a7a58139dee2348d32bcaf0b4e5" translate="yes" xml:space="preserve">
          <source>Makes the entry in the table completely ignorable; i.e. as if the weights were zero at all level.</source>
          <target state="translated">表のエントリを完全に無視できるようにします。</target>
        </trans-unit>
        <trans-unit id="6ce592c7c5a83ac8509be2294340cdf6b4e97842" translate="yes" xml:space="preserve">
          <source>Makes the thread unjoinable, and causes any eventual return value to be discarded. When the program exits, any detached threads that are still running are silently terminated.</source>
          <target state="translated">スレッドを結合不能にし、最終的な戻り値を破棄します。プログラムが終了すると、まだ実行中の切り離されたスレッドは静かに終了します。</target>
        </trans-unit>
        <trans-unit id="5a6eb05f63da2ef0fda20fc271a95dd2522c3f73" translate="yes" xml:space="preserve">
          <source>Maketext and gettext have a notable difference: gettext is in C, accessible thru C library calls, whereas Maketext is in Perl, and really can't work without a Perl interpreter (although I suppose something like it could be written for C). Accidents of history (and not necessarily lucky ones) have made C++ the most common language for the implementation of applications like word processors, Web browsers, and even many in-house applications like custom query systems. Current conditions make it somewhat unlikely that the next one of any of these kinds of applications will be written in Perl, albeit clearly more for reasons of custom and inertia than out of consideration of what is the right tool for the job.</source>
          <target state="translated">Maketext と gettext には顕著な違いがあります:gettext は C 言語で、C ライブラリの呼び出しからアクセスできます。歴史上の偶然(そして必ずしも幸運なことではありませんが)により、C++はワードプロセッサやウェブブラウザ、さらにはカスタムクエリシステムのような多くの社内アプリケーションを実装するための最も一般的な言語となりました。現在の状況では、このような種類のアプリケーションのうち、次の1つがPerlで書かれる可能性はやや低くなっていますが、明らかに仕事に適したツールとは何かを考えるよりも、カスタムや惰性の理由からです。</target>
        </trans-unit>
        <trans-unit id="f1346f72588900d324cb2f158adbed7a88d53077" translate="yes" xml:space="preserve">
          <source>Making</source>
          <target state="translated">Making</target>
        </trans-unit>
        <trans-unit id="c20d8b723d9ceaa1b7e38a56a86d1d8e27a837d5" translate="yes" xml:space="preserve">
          <source>Making Perl on AmigaOS</source>
          <target state="translated">AmigaOSでPerlを作る</target>
        </trans-unit>
        <trans-unit id="4fbad71d4049f75dae54b6a49e4082e7c3867bbe" translate="yes" xml:space="preserve">
          <source>Making References</source>
          <target state="translated">参考文献の作成</target>
        </trans-unit>
        <trans-unit id="b3d460b24ff971356f57aa8043b7e5b49b73273b" translate="yes" xml:space="preserve">
          <source>Making a human-readable string out of an address</source>
          <target state="translated">アドレスから人間が読める文字列を作る</target>
        </trans-unit>
        <trans-unit id="ec8a39930df65d8d70bb72152bc2ebfcb5ef6f12" translate="yes" xml:space="preserve">
          <source>Making a system call for each byte you want to read is not very efficient (to put it mildly) but is the simplest to explain and works reasonably well.</source>
          <target state="translated">読みたいバイトごとにシステムコールをするのは、あまり効率的ではありませんが(控えめに言っても)、説明するのが一番簡単で、それなりに動作します。</target>
        </trans-unit>
        <trans-unit id="6bc23e8c3bea5e39366cc40e690baa6e822bc4b0" translate="yes" xml:space="preserve">
          <source>Making executables with a custom collection of statically loaded extensions</source>
          <target state="translated">スタティックにロードされた拡張機能のカスタムコレクションで実行可能ファイルを作成する</target>
        </trans-unit>
        <trans-unit id="cebf6e10212157e6416340db92e3bf9d920a30bf" translate="yes" xml:space="preserve">
          <source>Making executables with a custom search-paths</source>
          <target state="translated">カスタム検索パスで実行ファイルを作成する</target>
        </trans-unit>
        <trans-unit id="a0f26bb1828a797c6495fc430a1532f4f3524259" translate="yes" xml:space="preserve">
          <source>Making things worse is that UTF-8 support was a later addition to the regex engine (as it was to perl) and this necessarily made things a lot more complicated. Obviously it is easier to design a regex engine with Unicode support in mind from the beginning than it is to retrofit it to one that wasn't.</source>
          <target state="translated">さらに悪いことに、UTF-8 のサポートは (Perl の場合と同様に)regex エンジンに後から追加されたものであり、これは必然的に物事をより複雑にしています。Unicode サポートを念頭に置いた正規表現エンジンを最初から設計する方が、そうでないものに後付けするよりも明らかに簡単です。</target>
        </trans-unit>
        <trans-unit id="a78f322195b8416c4ac155ecbbc78299380d03d5" translate="yes" xml:space="preserve">
          <source>Making up your own directives breaks compatibility with other Pod formatters, in a way that using &quot;=for</source>
          <target state="translated">独自のディレクティブを作成すると、他のPodフォーマッタとの互換性が失われます。</target>
        </trans-unit>
        <trans-unit id="bf00c544b1ffc6b4c5073f7dd35eacd07c2aa8d1" translate="yes" xml:space="preserve">
          <source>Making your module threadsafe</source>
          <target state="translated">モジュールのスレッドセーフ化</target>
        </trans-unit>
        <trans-unit id="24e9d209d23730e356bf6cdf6439fa711205639d" translate="yes" xml:space="preserve">
          <source>Malcolm Beattie, &lt;code&gt;mbeattie@sable.ox.ac.uk&lt;/code&gt;</source>
          <target state="translated">Malcolm Beattie、 &lt;code&gt;mbeattie@sable.ox.ac.uk&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9b41df4a623efa0a4562a894886ab9c56b063a3e" translate="yes" xml:space="preserve">
          <source>Malcolm Beattie, &lt;code&gt;mbeattie@sable.ox.ac.uk&lt;/code&gt; Reini Urban &lt;code&gt;rurban@cpan.org&lt;/code&gt;</source>
          <target state="translated">Malcolm Beattie、 &lt;code&gt;mbeattie@sable.ox.ac.uk&lt;/code&gt; Urban &lt;code&gt;rurban@cpan.org&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="19631f035a3084a6fe635dc5c4bba7828f7afbd3" translate="yes" xml:space="preserve">
          <source>Malcolm Beattie, mbeattie@sable.ox.ac.uk.</source>
          <target state="translated">マルコム・ビーティー、mbeattie@sable.ox.ac.uk。</target>
        </trans-unit>
        <trans-unit id="a0e351e0c684eaf1740f72fcfc804df5ea2bda20" translate="yes" xml:space="preserve">
          <source>Malformed PERLLIB_PREFIX</source>
          <target state="translated">不正なPERLLIB_PREFIX</target>
        </trans-unit>
        <trans-unit id="95bfcc7f20890119ba5507d8e4b227db1bf7b616" translate="yes" xml:space="preserve">
          <source>Malformed UTF-16 surrogate</source>
          <target state="translated">変形したUTF-16サロゲート</target>
        </trans-unit>
        <trans-unit id="76d7492febbbbb102be4a6084b9574c6324cf62a" translate="yes" xml:space="preserve">
          <source>Malformed UTF-8</source>
          <target state="translated">不正な UTF-8</target>
        </trans-unit>
        <trans-unit id="840809324950f1542de4d0696f6aa6d5b081a4b2" translate="yes" xml:space="preserve">
          <source>Malformed UTF-8 character%s</source>
          <target state="translated">不正な UTF-8 文字%s</target>
        </trans-unit>
        <trans-unit id="f86646a5e724c4c0935d99ba9fa1363951791303" translate="yes" xml:space="preserve">
          <source>Malformed UTF-8 returned by \N{%s} immediately after '%s'</source>
          <target state="translated">Malformed UTF-8 returned by \N{%s}immediately after '%s'。</target>
        </trans-unit>
        <trans-unit id="3629da68a2c9e61eb2ed5a9305a630d15d03a5fd" translate="yes" xml:space="preserve">
          <source>Malformed UTF-8 string in &quot;%s&quot;</source>
          <target state="translated">s&quot; での不正な UTF-8 文字列です。</target>
        </trans-unit>
        <trans-unit id="6c75c74bdc6a4b14a7b5100d51b32e10dbf5f347" translate="yes" xml:space="preserve">
          <source>Malformed UTF-8 string in '%c' format in unpack</source>
          <target state="translated">unpack で '%c' 形式の UTF-8 文字列が不正な形式です。</target>
        </trans-unit>
        <trans-unit id="88cc49e1e61c18146c03f559c55b4b5ca3c7443d" translate="yes" xml:space="preserve">
          <source>Malformed UTF-8 string in pack</source>
          <target state="translated">パック内の不正な UTF-8 文字列</target>
        </trans-unit>
        <trans-unit id="ebe2537af48af16788aae98b0417a1713098f07e" translate="yes" xml:space="preserve">
          <source>Malformed UTF-8 string in unpack</source>
          <target state="translated">unpack での不正な UTF-8 文字列</target>
        </trans-unit>
        <trans-unit id="eceeeccb5dcd41d822277f4b9a9a892eb9541d0a" translate="yes" xml:space="preserve">
          <source>Malformed integer in [] in pack</source>
          <target state="translated">パック内の []での不正な整数</target>
        </trans-unit>
        <trans-unit id="791860e6c4e8eb2c20a1be93f5c34476ec1a52b9" translate="yes" xml:space="preserve">
          <source>Malformed integer in [] in unpack</source>
          <target state="translated">unpack の []での不正な整数</target>
        </trans-unit>
        <trans-unit id="5b8c467b1ea34859e334a2f3c6542838d86881fb" translate="yes" xml:space="preserve">
          <source>Malformed prototype for %s: %s</source>
          <target state="translated">s の型落ちしたプロトタイプ:%s</target>
        </trans-unit>
        <trans-unit id="1c0e8bc778fcc6e629304edc324bee00f7f54935" translate="yes" xml:space="preserve">
          <source>Malloc Issues with perl on Solaris.</source>
          <target state="translated">Solaris 上の perl での Malloc の問題。</target>
        </trans-unit>
        <trans-unit id="118d45651d8f268c43f0d79ab0bbae66d29235b4" translate="yes" xml:space="preserve">
          <source>Malloc in Irix</source>
          <target state="translated">アイリックスのマロック</target>
        </trans-unit>
        <trans-unit id="25b61228c020a688cfd6c5a06fa24fca08bfdf7b" translate="yes" xml:space="preserve">
          <source>Manage .packlist files</source>
          <target state="translated">.packlistファイルの管理</target>
        </trans-unit>
        <trans-unit id="35931f68fb7263b16c5ab46a487b802fec9cd2f9" translate="yes" xml:space="preserve">
          <source>Managing Unknown Symbols</source>
          <target state="translated">未知のシンボルの管理</target>
        </trans-unit>
        <trans-unit id="a55abc0bd6c1b774adb064c2106381d9bf863837" translate="yes" xml:space="preserve">
          <source>Mandatory named arguments: Either &lt;code&gt;typemap =&amp;gt; $another_typemap_obj&lt;/code&gt; or &lt;code&gt;file =&amp;gt; $path_to_typemap_file&lt;/code&gt; but not both.</source>
          <target state="translated">必須の名前付き引数： &lt;code&gt;typemap =&amp;gt; $another_typemap_obj&lt;/code&gt; または &lt;code&gt;file =&amp;gt; $path_to_typemap_file&lt;/code&gt; いずれかですが、両方ではありません。</target>
        </trans-unit>
        <trans-unit id="ce16d065fa0516da01a691954a3b7eedd61a0753" translate="yes" xml:space="preserve">
          <source>Mandatory named arguments: The &lt;code&gt;ctype&lt;/code&gt; of the entry.</source>
          <target state="translated">必須の名前付き引数：エントリの &lt;code&gt;ctype&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="58aaf34da96668087981ecd9c92610d9f0dca398" translate="yes" xml:space="preserve">
          <source>Mandatory named arguments: The &lt;code&gt;xstype&lt;/code&gt; of the entry or the &lt;code&gt;ctype&lt;/code&gt; of the typemap that can be used to find the &lt;code&gt;xstype&lt;/code&gt;. To wit, the following pieces of code are equivalent:</source>
          <target state="translated">必須の名前付き引数：エントリの &lt;code&gt;xstype&lt;/code&gt; または &lt;code&gt;xstype&lt;/code&gt; の検索に使用できるタイプマップの &lt;code&gt;ctype&lt;/code&gt; 。つまり、次のコードは同等です。</target>
        </trans-unit>
        <trans-unit id="a99b477f4c3ec9d1fec66aced41b9bbadd1b95f7" translate="yes" xml:space="preserve">
          <source>Mandatory named arguments: The &lt;code&gt;xstype&lt;/code&gt; of the entry or the &lt;code&gt;ctype&lt;/code&gt; of the typemap that can be used to resolve the &lt;code&gt;xstype&lt;/code&gt;. (See above for an example.)</source>
          <target state="translated">必須の名前付き引数： &lt;code&gt;xstype&lt;/code&gt; エントリのか &lt;code&gt;ctype&lt;/code&gt; 解決するために使用することができるタイプマップの &lt;code&gt;xstype&lt;/code&gt; を。（例については、上記を参照してください。）</target>
        </trans-unit>
        <trans-unit id="94f5d715eb57168bf68f55ea9554b6cf192f682a" translate="yes" xml:space="preserve">
          <source>Mandatory parameter follows optional parameter</source>
          <target state="translated">オプションのパラメータに続く必須パラメータ</target>
        </trans-unit>
        <trans-unit id="04f195c5450e541e2f347f3f01dadb29f21cee9c" translate="yes" xml:space="preserve">
          <source>Mandatory section; should be a comma-separated list of programs or functions documented by this POD page, such as:</source>
          <target state="translated">必須セクション;このPODページで文書化されたプログラムまたは機能のリストをコンマで区切ってください。</target>
        </trans-unit>
        <trans-unit id="95b5420abf959d7eeb8c5172873e22e522cf809a" translate="yes" xml:space="preserve">
          <source>Manipulate @INC at compile time</source>
          <target state="translated">コンパイル時に@INCを操作する</target>
        </trans-unit>
        <trans-unit id="95363fed4c5c92c85bfefb937ad574a5059a5ae7" translate="yes" xml:space="preserve">
          <source>Manipulate Perl symbols and their names</source>
          <target state="translated">Perl のシンボルとその名前を操作する</target>
        </trans-unit>
        <trans-unit id="a8c36443cbda2a6067ad5c937b50ce063c2df504" translate="yes" xml:space="preserve">
          <source>Manipulate threads in Perl (for old code only)</source>
          <target state="translated">Perl でスレッドを操作する (古いコードのみ)</target>
        </trans-unit>
        <trans-unit id="8a33f921aa98603ac2e48c7701dc159e3e29d6c1" translate="yes" xml:space="preserve">
          <source>Manipulating Opsets</source>
          <target state="translated">オペレーションセットの操作</target>
        </trans-unit>
        <trans-unit id="2b13545245f98ef36404c536b49d9995e39a33e1" translate="yes" xml:space="preserve">
          <source>Manpages</source>
          <target state="translated">Manpages</target>
        </trans-unit>
        <trans-unit id="9f704bb02675db15a09798f0c1baac9cf37ee338" translate="yes" xml:space="preserve">
          <source>Manpages for Perl and utilities</source>
          <target state="translated">Perl とユーティリティの管理画面</target>
        </trans-unit>
        <trans-unit id="c6b4a6c33e94dc77d759627b76f10310db491611" translate="yes" xml:space="preserve">
          <source>Manpages for Perl modules</source>
          <target state="translated">Perlモジュールの管理画面</target>
        </trans-unit>
        <trans-unit id="2c5bfd7444f7b80d647fb722cd55c67b0650aba4" translate="yes" xml:space="preserve">
          <source>Manpages for Perl on AmigaOS</source>
          <target state="translated">AmigaOSでのPerlのためのマニュアルページ</target>
        </trans-unit>
        <trans-unit id="d013bfb63d4447b01e40780ba1cecae093576e1b" translate="yes" xml:space="preserve">
          <source>Manual Pages</source>
          <target state="translated">マニュアルページ</target>
        </trans-unit>
        <trans-unit id="9cec485eab07667ef580f14404756c7cdf469fd8" translate="yes" xml:space="preserve">
          <source>Manual binary installation</source>
          <target state="translated">マニュアルバイナリインストール</target>
        </trans-unit>
        <trans-unit id="572276926686cc7cc3f5283d7ffd30b0fe5dbb1a" translate="yes" xml:space="preserve">
          <source>Manual page indexers are often extremely picky about the format of this section, so don't put anything in it except this line. Every program or function documented by this POD page should be listed, separated by a comma and a space. For a Perl module, just give the module name. A single dash, and only a single dash, should separate the list of programs or functions from the description. Do not use any markup such as C&amp;lt;&amp;gt; or B&amp;lt;&amp;gt; anywhere in this line. Functions should not be qualified with &lt;code&gt;()&lt;/code&gt; or the like. The description should ideally fit on a single line, even if a man program replaces the dash with a few tabs.</source>
          <target state="translated">マニュアルページインデクサーは、このセクションの形式について非常にうるさいことが多いので、この行以外には何も入れないでください。このPODページに記載されているすべてのプログラムまたは関数は、コンマとスペースで区切ってリストする必要があります。 Perlモジュールの場合は、モジュール名を指定するだけです。 1つのダッシュ、および1つのダッシュだけで、プログラムまたは関数のリストと説明を区別する必要があります。この行のどこにもC &amp;lt;&amp;gt;やB &amp;lt;&amp;gt;などのマークアップを使用しないでください。関数は &lt;code&gt;()&lt;/code&gt; などで修飾しないでください。 manプログラムがダッシュをいくつかのタブに置き換えても、説明は1行に収まるのが理想的です。</target>
        </trans-unit>
        <trans-unit id="00b4c0e2070e1a2565707d57c993afbbae4c0c2e" translate="yes" xml:space="preserve">
          <source>Manual: FAQs</source>
          <target state="translated">マニュアル。よくある質問</target>
        </trans-unit>
        <trans-unit id="db75f57bcc4f9ed3d56d92896abd677a771bded6" translate="yes" xml:space="preserve">
          <source>Manual: Overview</source>
          <target state="translated">マニュアルです。概要</target>
        </trans-unit>
        <trans-unit id="950d94e419183f62360b7a18d309980db9dca27b" translate="yes" xml:space="preserve">
          <source>Manual: Tutorials</source>
          <target state="translated">マニュアル チュートリアル</target>
        </trans-unit>
        <trans-unit id="ac0e5ddc596dea92cba4c0e2c3555f39d4f7c5f0" translate="yes" xml:space="preserve">
          <source>Manually put</source>
          <target state="translated">手動で置く</target>
        </trans-unit>
        <trans-unit id="4fddc764751f961b3d597ce52116c4021c09dadd" translate="yes" xml:space="preserve">
          <source>Manually setting hints from within your program</source>
          <target state="translated">プログラム内から手動でヒントを設定する</target>
        </trans-unit>
        <trans-unit id="c84207b4c45d8ef84a1d774f5c8bf8efd5fcd50a" translate="yes" xml:space="preserve">
          <source>Many &lt;code&gt;AUTOLOAD&lt;/code&gt; routines load in a definition for the requested subroutine using eval(), then execute that subroutine using a special form of goto() that erases the stack frame of the &lt;code&gt;AUTOLOAD&lt;/code&gt; routine without a trace. (See the source to the standard module documented in &lt;a href=&quot;autoloader&quot;&gt;AutoLoader&lt;/a&gt;, for example.) But an &lt;code&gt;AUTOLOAD&lt;/code&gt; routine can also just emulate the routine and never define it. For example, let's pretend that a function that wasn't defined should just invoke &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; with those arguments. All you'd do is:</source>
          <target state="translated">多くの &lt;code&gt;AUTOLOAD&lt;/code&gt; ルーチンは、eval（）を使用して要求されたサブルーチンの定義をロードし、トレースなしで &lt;code&gt;AUTOLOAD&lt;/code&gt; ルーチンのスタックフレームを消去する特別な形式のgoto（）を使用してそのサブルーチンを実行します。（たとえば、&lt;a href=&quot;autoloader&quot;&gt;AutoLoader&lt;/a&gt;に文書化されている標準モジュールのソースを参照してください。）ただし、 &lt;code&gt;AUTOLOAD&lt;/code&gt; ルーチンは、ルーチンをエミュレートするだけで、定義することはできません。たとえば、定義されていない関数が、これらの引数を使用して &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; を呼び出すだけであると仮定します。あなたがするすべては：</target>
        </trans-unit>
        <trans-unit id="1a7290a6ed663a7c77bc4c6109fa00f035bb42d3" translate="yes" xml:space="preserve">
          <source>Many &lt;code&gt;AUTOLOAD&lt;/code&gt; routines load in a definition for the requested subroutine using eval(), then execute that subroutine using a special form of goto() that erases the stack frame of the &lt;code&gt;AUTOLOAD&lt;/code&gt; routine without a trace. (See the source to the standard module documented in &lt;a href=&quot;autoloader&quot;&gt;AutoLoader&lt;/a&gt;, for example.) But an &lt;code&gt;AUTOLOAD&lt;/code&gt; routine can also just emulate the routine and never define it. For example, let's pretend that a function that wasn't defined should just invoke &lt;code&gt;system&lt;/code&gt; with those arguments. All you'd do is:</source>
          <target state="translated">多くの &lt;code&gt;AUTOLOAD&lt;/code&gt; ルーチンは、eval（）を使用して要求されたサブルーチンの定義をロードし、その後、トレースなしで &lt;code&gt;AUTOLOAD&lt;/code&gt; ルーチンのスタックフレームを消去する特別な形式のgoto（）を使用してそのサブルーチンを実行します。 （たとえば、&lt;a href=&quot;autoloader&quot;&gt;AutoLoader&lt;/a&gt;に記載されている標準モジュールのソースを参照してください。）ただし、 &lt;code&gt;AUTOLOAD&lt;/code&gt; ルーチンは、ルーチンをエミュレートするだけで、定義することはできません。たとえば、定義されていない関数がそれらの引数を使用して &lt;code&gt;system&lt;/code&gt; を呼び出す必要があるとしましょう。あなたがすることは：</target>
        </trans-unit>
        <trans-unit id="077443aca86ab6f4e2738e61b48baa6af4d5929a" translate="yes" xml:space="preserve">
          <source>Many &lt;code&gt;TAP::*&lt;/code&gt; classes have a</source>
          <target state="translated">多くの &lt;code&gt;TAP::*&lt;/code&gt; クラスには</target>
        </trans-unit>
        <trans-unit id="ff6afc71dae16e6a2fa7c473b44e2b45df859fad" translate="yes" xml:space="preserve">
          <source>Many Test2 developers and users lurk on &lt;a href=&quot;irc://irc.perl.org/#perl-qa&quot;&gt;irc://irc.perl.org/#perl-qa&lt;/a&gt; and &lt;a href=&quot;irc://irc.perl.org/#toolchain&quot;&gt;irc://irc.perl.org/#toolchain&lt;/a&gt;. We also have a slack team that can be joined by anyone with an &lt;code&gt;@cpan.org&lt;/code&gt; email address &lt;a href=&quot;https://perl-test2.slack.com/&quot;&gt;https://perl-test2.slack.com/&lt;/a&gt; If you do not have an &lt;code&gt;@cpan.org&lt;/code&gt; email you can ask for a slack invite by emailing Chad Granum &amp;lt;exodist@cpan.org&amp;gt;.</source>
          <target state="translated">多くのTest2開発者とユーザーは、&lt;a href=&quot;irc://irc.perl.org/#perl-qa&quot;&gt;irc：//irc.perl.org/#perl-qa&lt;/a&gt;と&lt;a href=&quot;irc://irc.perl.org/#toolchain&quot;&gt;irc：//irc.perl.org/#toolchainに潜んでい&lt;/a&gt;ます。また、 &lt;code&gt;@cpan.org&lt;/code&gt; 電子メールアドレス&lt;a href=&quot;https://perl-test2.slack.com/&quot;&gt;https://perl-test2.slack.com/を&lt;/a&gt;持っている人なら誰でも参加できるSlackチームがあります。@ cpan.orgの電子メールがない場合は、 &lt;code&gt;@cpan.org&lt;/code&gt; 招待を依頼できます。 Chad Granum &amp;lt;exodist@cpan.org&amp;gt;に電子メールを送信します。</target>
        </trans-unit>
        <trans-unit id="7697e7d09f9c98694e67e6f7f7b568fc62b09264" translate="yes" xml:space="preserve">
          <source>Many Unicode properties have more than one name (or alias). &lt;code&gt;prop_invmap&lt;/code&gt; understands all of these, including Perl extensions to them. Ambiguities are resolved as described above for &lt;a href=&quot;#prop_aliases%28%29&quot;&gt;&quot;prop_aliases()&quot;&lt;/a&gt; (except if a property has both a complete mapping, and a binary &lt;code&gt;Y&lt;/code&gt;/&lt;code&gt;N&lt;/code&gt; mapping, then specifying the property name prefixed by &lt;code&gt;&quot;is&quot;&lt;/code&gt; causes the binary one to be returned). The Perl internal property &quot;Perl_Decimal_Digit, described below, is also accepted. An empty list is returned if the property name is unknown. See &lt;a href=&quot;perluniprops#Properties-accessible-through-Unicode%3A%3AUCD&quot;&gt;&quot;Properties accessible through Unicode::UCD&quot; in perluniprops&lt;/a&gt; for the properties acceptable as inputs to this function.</source>
          <target state="translated">多くのUnicodeプロパティには、複数の名前（またはエイリアス）があります。 &lt;code&gt;prop_invmap&lt;/code&gt; は、Perl拡張機能を含め、これらすべてを理解します。上述したように曖昧さが解決される&lt;a href=&quot;#prop_aliases%28%29&quot;&gt;「prop_aliases（）」&lt;/a&gt;（プロパティは、完全なマッピング、およびバイナリの両方がある場合を除き、 &lt;code&gt;Y&lt;/code&gt; / &lt;code&gt;N&lt;/code&gt; のその後で始まるプロパティ名を指定するマッピングを、 &lt;code&gt;&quot;is&quot;&lt;/code&gt; 引き起こすバイナリ1が返されます）。以下で説明するPerl内部プロパティ「Perl_Decimal_Digit」も受け入れられます。プロパティ名が不明な場合は空のリストが返されます。この関数への入力として受け入れられるプロパティについては&lt;a href=&quot;perluniprops#Properties-accessible-through-Unicode%3A%3AUCD&quot;&gt;、perlunipropsの「Unicode :: UCDを介してアクセス可能なプロパティ」を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="d7a6d0011c1051ce0333abc0265080896a481453" translate="yes" xml:space="preserve">
          <source>Many Unicode properties have more than one name (or alias). &lt;code&gt;prop_invmap&lt;/code&gt; understands all of these, including Perl extensions to them. Ambiguities are resolved as described above for &lt;a href=&quot;#prop_aliases()&quot;&gt;prop_aliases()&lt;/a&gt;. The Perl internal property &quot;Perl_Decimal_Digit, described below, is also accepted. An empty list is returned if the property name is unknown. See &lt;a href=&quot;../perluniprops#Properties-accessible-through-Unicode%3a%3aUCD&quot;&gt;Properties accessible through Unicode::UCD in perluniprops&lt;/a&gt; for the properties acceptable as inputs to this function.</source>
          <target state="translated">多くのUnicodeプロパティには、複数の名前（またはエイリアス）があります。 &lt;code&gt;prop_invmap&lt;/code&gt; は、Perl拡張を含め、これらすべてを理解します。あいまいさは、上記の&lt;a href=&quot;#prop_aliases()&quot;&gt;prop_aliases（）の&lt;/a&gt;説明に従って解決されます。Perlの内部プロパティ「Perl_Decimal_Digit」（以下で説明）も受け入れられます。プロパティ名が不明な場合は空のリストが返されます。この関数への入力として受け入れ可能なプロパティについては&lt;a href=&quot;../perluniprops#Properties-accessible-through-Unicode%3a%3aUCD&quot;&gt;、perlunipropsのUnicode :: UCDを介してアクセス可能なプロパティを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="33c4abda8cada5094d54134f3094015df454f077" translate="yes" xml:space="preserve">
          <source>Many applications contain some Perl code that could be reused.</source>
          <target state="translated">多くのアプリケーションには、再利用可能な Perl コードが含まれています。</target>
        </trans-unit>
        <trans-unit id="48c7aff02ac4959c101106add7455533fff396df" translate="yes" xml:space="preserve">
          <source>Many built-in functions may be overridden, though this should be tried only occasionally and for good reason. Typically this might be done by a package attempting to emulate missing built-in functionality on a non-Unix system.</source>
          <target state="translated">多くの組み込み関数はオーバーライドされるかもしれませんが、これはたまにしか試してはいけませんし、 正当な理由があるからです。一般的に、これは、Unix 以外のシステム上で不足している組み込み機能をエミュレートしようとするパッケージによって行われるかもしれません。</target>
        </trans-unit>
        <trans-unit id="294c60617a28cb2d00c28e138e9bdc873720df06" translate="yes" xml:space="preserve">
          <source>Many cases of using &lt;code&gt;&lt;a href=&quot;../functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt; in a conditional can be written using &lt;code&gt;any&lt;/code&gt; instead, as it can short-circuit after the first true result.</source>
          <target state="translated">条件付きで &lt;code&gt;&lt;a href=&quot;../functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt; を使用する多くの場合は、最初の真の結果の後で短絡する可能性があるため、代わりに &lt;code&gt;any&lt;/code&gt; を使用して記述できます。</target>
        </trans-unit>
        <trans-unit id="8f257ebd5355ea10d707c95712fc0e9530be11ec" translate="yes" xml:space="preserve">
          <source>Many cases of using &lt;code&gt;grep&lt;/code&gt; in a conditional can be written using &lt;code&gt;any&lt;/code&gt; instead, as it can short-circuit after the first true result.</source>
          <target state="translated">条件付きで &lt;code&gt;grep&lt;/code&gt; を使用する多くのケースは、最初の真の結果の後で短絡する可能性があるため、代わりに &lt;code&gt;any&lt;/code&gt; を使用して記述できます。</target>
        </trans-unit>
        <trans-unit id="c53c00d79c1b4a5caf2dbf3b1b3871ad968ba47e" translate="yes" xml:space="preserve">
          <source>Many cities around the world have local Perl Mongers chapters. A Perl Mongers chapter is a local user group which typically holds regular in-person meetings, both social and technical; helps organize local conferences, workshops, and hackathons; and provides a mailing list or other continual contact method for its members to keep in touch.</source>
          <target state="translated">世界中の多くの都市には、Perl Mongers の支部があります。Perl Mongers の支部は、一般的には交流会や技術的なミーティングを定期的に開催しているローカルのユーザグループで、ローカルのカンファレンスやワークショップ、ハッカソンの開催を支援しています。</target>
        </trans-unit>
        <trans-unit id="1333a5caee67ed3743b1573e310fc69a41dedbcf" translate="yes" xml:space="preserve">
          <source>Many forms are mutually un-intelligible in spoken media. Notable forms: {ar-ae} UAE Arabic; {ar-bh} Bahrain Arabic; {ar-dz} Algerian Arabic; {ar-eg} Egyptian Arabic; {ar-iq} Iraqi Arabic; {ar-jo} Jordanian Arabic; {ar-kw} Kuwait Arabic; {ar-lb} Lebanese Arabic; {ar-ly} Libyan Arabic; {ar-ma} Moroccan Arabic; {ar-om} Omani Arabic; {ar-qa} Qatari Arabic; {ar-sa} Sauda Arabic; {ar-sy} Syrian Arabic; {ar-tn} Tunisian Arabic; {ar-ye} Yemen Arabic.</source>
          <target state="translated">話し言葉のメディアでは、多くの形式が相互に理解できない。注目すべき形。ar-ae}。UAEアラビア語;{ar-bh}。バーレーン・アラビア語;{ar-dz}。アルジェリア語アラビア語;{ar-eg}。エジプト・アラビア語;{ar-iq}。イラク・アラビア語;{ar-jo}。ヨルダン語アラビア語;{ar-kw}。クウェート・アラビア語;{ar-lb}。レバノン語アラビア語;{ar-ly}リビア語アラビア語;{ar-ma}モロッコ語アラビア語;{ar-om}オマーン語アラビア語;{ar-qa}。カタール語アラビア語;{ar-sa}。サウジアラビア・アラビア語;{ar-sy}シリア・アラビア語;{ar-tn}アラビア語 チュニジア・アラビア語;{ar-ye}.イエメン・アラビア語</target>
        </trans-unit>
        <trans-unit id="22b65de1b1ff16b769feb6a461c534e2b3b49857" translate="yes" xml:space="preserve">
          <source>Many forms are mutually un-intelligible in spoken media. Notable forms: {zh-Hans} Chinese, in simplified script; {zh-Hant} Chinese, in traditional script; {zh-tw} Taiwan Chinese; {zh-cn} PRC Chinese; {zh-sg} Singapore Chinese; {zh-mo} Macau Chinese; {zh-hk} Hong Kong Chinese; {zh-guoyu} Mandarin [Putonghua/Guoyu]; {zh-hakka} Hakka [formerly &quot;i-hakka&quot;]; {zh-min} Hokkien; {zh-min-nan} Southern Hokkien; {zh-wuu} Shanghaiese; {zh-xiang} Hunanese; {zh-gan} Gan; {zh-yue} Cantonese.</source>
          <target state="translated">話し言葉のメディアでは、多くの形式が相互に理解できない。注目すべき形。簡体字の{zh-Hans}中国語;{zh-Hant}中国語 漢文 台湾華人;{zh-cn}。中国語;{zh-sg}シンガポール語 マカオ語 香港語;{zh-guoyu}北京語 [Putonghua/Guoyu];{zh-hakka}香港語 はっか [旧称:i-hakka];{zh-min}.ホッキエン 南北紀語;{zh-wuu}上海語;{zh-xiang}上海語 湖南語 ガン;{zh-yue}広東語。</target>
        </trans-unit>
        <trans-unit id="453c2424198e6c72c7985d52564f33ad8ed6bde5" translate="yes" xml:space="preserve">
          <source>Many functions have some kind of reference manipulation as part of their purpose. Sometimes this is documented in terms of ownership of references, and sometimes it is (less helpfully) documented in terms of changes to reference counts. For example, the &lt;a href=&quot;perlapi#newRV_inc&quot;&gt;newRV_inc()&lt;/a&gt; function is documented to create a new RV (with reference count 1) and increment the reference count of the referent that was supplied by the caller. This is best understood as creating a new reference to the referent, which is owned by the created RV, and returning to the caller ownership of the sole reference to the RV. The &lt;a href=&quot;perlapi#newRV_noinc&quot;&gt;newRV_noinc()&lt;/a&gt; function instead does not increment the reference count of the referent, but the RV nevertheless ends up owning a reference to the referent. It is therefore implied that the caller of &lt;code&gt;newRV_noinc()&lt;/code&gt; is relinquishing a reference to the referent, making this conceptually a more complicated operation even though it does less to the data structures.</source>
          <target state="translated">多くの関数には、その目的の一部として、ある種の参照操作があります。これは、参照の所有権の観点から文書化されている場合もあれば、参照数の変更の観点から文書化されている場合もあります。たとえば、&lt;a href=&quot;perlapi#newRV_inc&quot;&gt;newRV_inc（）&lt;/a&gt;関数は、新しいRV（参照カウント1）を作成し、呼び出し元によって提供された指示対象の参照カウントをインクリメントするように文書化されています。これは、作成されたRVが所有する指示対象への新しい参照を作成し、RVへの唯一の参照の呼び出し元の所有権に戻ることとして最もよく理解されます。&lt;a href=&quot;perlapi#newRV_noinc&quot;&gt;newRV_noinc（）&lt;/a&gt;関数は、代わりに参照先の参照カウントをインクリメントしませんが、RVはそれにもかかわらず、参照先への参照を所有して終わります。したがって、の発信者は &lt;code&gt;newRV_noinc()&lt;/code&gt; は指示対象への参照を放棄しているため、データ構造への影響は少ないものの、概念的にはより複雑な操作になっています。</target>
        </trans-unit>
        <trans-unit id="ce036cf5b80f30684cc79c208c3479e5b4b012ed" translate="yes" xml:space="preserve">
          <source>Many good books have been written about Perl--see the section later in &lt;a href=&quot;perlfaq2&quot;&gt;perlfaq2&lt;/a&gt; for more details.</source>
          <target state="translated">Perlについては多くの優れた本が書かれています。詳細については、&lt;a href=&quot;perlfaq2&quot;&gt;perlfaq2の後半&lt;/a&gt;のセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="daec66bc8e44bcc2464b1a0d6c4a9145c9a7595a" translate="yes" xml:space="preserve">
          <source>Many members of the community have a Perl-related blog on this site. If you'd like to join them, you can sign up for free.</source>
          <target state="translated">このサイトでは、多くのメンバーがPerl関連のブログを開設しています。参加したい場合は、無料でサインアップできます。</target>
        </trans-unit>
        <trans-unit id="a71a9a58452bd2f82710c97492e2e55820847a42" translate="yes" xml:space="preserve">
          <source>Many modules are included in the Perl distribution. These are described below, and all end in</source>
          <target state="translated">Perl のディストリビューションには多くのモジュールが含まれています。これらのモジュールは以下に説明します。</target>
        </trans-unit>
        <trans-unit id="1f04b4ad6b9470f5a4263506a665427c873dff64" translate="yes" xml:space="preserve">
          <source>Many modules make use of &lt;code&gt;AUTOLOAD&lt;/code&gt; ing for constant subroutines to avoid having to compile and waste memory on rarely used values (see &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt; for details on constant subroutines). Calls to such constant subroutines are not optimized away at compile time because they can't be checked at compile time for constancy.</source>
          <target state="translated">多くのモジュールは、定数サブルーチンの &lt;code&gt;AUTOLOAD&lt;/code&gt; を使用して、めったに使用されない値のコンパイルとメモリの浪費を回避します（定数サブルーチンの詳細については、&lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt;を参照してください）。このような定数サブルーチンの呼び出しは、コンパイル時に不変性をチェックできないため、コンパイル時に最適化されません。</target>
        </trans-unit>
        <trans-unit id="730337ad35302b76d62b0f02a8d67322d180f0d7" translate="yes" xml:space="preserve">
          <source>Many modules make use of &lt;code&gt;AUTOLOAD&lt;/code&gt;ing for constant subroutines to avoid having to compile and waste memory on rarely used values (see &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt; for details on constant subroutines). Calls to such constant subroutines are not optimized away at compile time because they can't be checked at compile time for constancy.</source>
          <target state="translated">多くのモジュールは、定数サブルーチンに &lt;code&gt;AUTOLOAD&lt;/code&gt; を使用して、めったに使用されない値でコンパイルしてメモリを浪費する必要を&lt;a href=&quot;perlsub&quot;&gt;なくし&lt;/a&gt;ます（定数サブルーチンの詳細については、perlsubを参照してください）。このような定数サブルーチンの呼び出しは、コンパイル時に定数をチェックできないため、コンパイル時に最適化されません。</target>
        </trans-unit>
        <trans-unit id="77a0e7ba88e55cf427d9e31a53ffbec21a7210c5" translate="yes" xml:space="preserve">
          <source>Many more features</source>
          <target state="translated">他にも多くの機能があります。</target>
        </trans-unit>
        <trans-unit id="bd64827a8fe9cbce8371a7bcfdacc99021bfba74" translate="yes" xml:space="preserve">
          <source>Many of Perl's syntactic elements are &lt;b&gt;optional&lt;/b&gt;. Rather than requiring you to put parentheses around every function call and declare every variable, you can often leave such explicit elements off and Perl will figure out what you meant. This is known as &lt;b&gt;Do What I Mean&lt;/b&gt;, abbreviated &lt;b&gt;DWIM&lt;/b&gt;. It allows programmers to be &lt;b&gt;lazy&lt;/b&gt; and to code in a style with which they are comfortable.</source>
          <target state="translated">Perlの構文要素の多くは&lt;b&gt;オプションです&lt;/b&gt;。すべての関数呼び出しを括弧で囲んですべての変数を宣言するように要求するのではなく、そのような明示的な要素をオフにしておくと、Perlが意図したとおりに理解することができます。これは、&lt;b&gt;DWIM&lt;/b&gt;と略される&lt;b&gt;Do What I Mean&lt;/b&gt;として知られてい&lt;b&gt;ます&lt;/b&gt;。これにより、プログラマは&lt;b&gt;怠惰に&lt;/b&gt;なり、快適なスタイルでコーディングできます。&lt;b&gt;&lt;/b&gt;&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="a80a79f26d84c2cb761d54166d1d73c391965f8f" translate="yes" xml:space="preserve">
          <source>Many of the comments in the existing code ignore the possibility of EBCDIC, and may be wrong therefore, even if the code works. This is actually a tribute to the successful transparent insertion of being able to handle EBCDIC without having to change pre-existing code.</source>
          <target state="translated">既存のコードのコメントの多くはEBCDICの可能性を無視しており、コードが動作していてもそれゆえに間違っている可能性があります。実はこれは、既存のコードを変更することなくEBCDICを扱えるという透明挿入に成功したことへのオマージュなのです。</target>
        </trans-unit>
        <trans-unit id="9898a42f1ac737909964257112ee94f7d9cf02b3" translate="yes" xml:space="preserve">
          <source>Many of the examples which follow will concentrate on creating an interface between Perl and the ONC+ RPC bind library functions. The rpcb_gettime() function is used to demonstrate many features of the XS language. This function has two parameters; the first is an input parameter and the second is an output parameter. The function also returns a status value.</source>
          <target state="translated">以下の多くの例では、PerlとONC+RPCバインドライブラリ関数とのインタフェースを作成することに重点を置いています。rpcb_gettime()関数はXS言語の多くの機能を示すために使われています。この関数には2つのパラメータがあり、1つ目は入力パラメータ、2つ目は出力パラメータです。この関数は,ステータス値も返します。</target>
        </trans-unit>
        <trans-unit id="921520a4912c2671d68673bde14f85005a75001d" translate="yes" xml:space="preserve">
          <source>Many of the functions and methods listed below take a list of operators as parameters. Most operator lists can be made up of several types of element. Each element can be one of</source>
          <target state="translated">以下に列挙する関数やメソッドの多くは、演算子のリストをパラメータとして取ります。ほとんどの演算子リストは、いくつかのタイプの要素で構成することができます。各要素は以下のいずれかになります。</target>
        </trans-unit>
        <trans-unit id="7ce44f55ac189a65855572d397cff0134d70bf83" translate="yes" xml:space="preserve">
          <source>Many of the functions in this module return a Benchmark object, or in the case of &lt;code&gt;timethese()&lt;/code&gt; , a reference to a hash, the values of which are Benchmark objects. This is useful if you want to store or further process results from Benchmark functions.</source>
          <target state="translated">このモジュールの関数の多くは、Benchmarkオブジェクト、または &lt;code&gt;timethese()&lt;/code&gt; の場合はハッシュへの参照を返し、その値はBenchmarkオブジェクトです。これは、ベンチマーク機能の結果を保存したり、さらに処理したりする場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="0de1482c88cef756f8728fbc7e608916bb4e2062" translate="yes" xml:space="preserve">
          <source>Many of the functions in this module return a Benchmark object, or in the case of &lt;code&gt;timethese()&lt;/code&gt;, a reference to a hash, the values of which are Benchmark objects. This is useful if you want to store or further process results from Benchmark functions.</source>
          <target state="translated">このモジュールの関数の多くは、ベンチマークオブジェクトを返します &lt;code&gt;timethese()&lt;/code&gt; 場合は、ハッシュへの参照を返します。ハッシュの値はベンチマークオブジェクトです。これは、ベンチマーク関数からの結果を保存またはさらに処理する場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="f7fa695823c4cf174fe101c150852b83035705c8" translate="yes" xml:space="preserve">
          <source>Many of these fit entirely into 8 bits, using ASCII as 0-127, while specifying what 128-255 mean, and not using anything above 255. Thus, these are single-byte (or octet if you prefer) character sets. One important one (since Unicode is a superset of it) is the ISO 8859-1 character set.</source>
          <target state="translated">これらの多くは完全に8ビットに収まり、ASCIIを0-127として使用しながら、128-255の意味を指定し、255以上のものは使用しません。このように、これらはシングルバイト(お好みであればオクテット)の文字セットです。重要なものとしては、(Unicode はそのスーパーセットなので)ISO 8859-1 文字セットがあります。</target>
        </trans-unit>
        <trans-unit id="0b3bf50d1b5911ce9e6512eaf6849f76aed2a52f" translate="yes" xml:space="preserve">
          <source>Many of these functions are not safe in a multi-threaded environment where more than one thread can be using them. In particular, functions like &lt;code&gt;getpwent()&lt;/code&gt; iterate per-process and not per-thread, so if two threads are simultaneously iterating, neither will get all the records.</source>
          <target state="translated">これらの関数の多くは、複数のスレッドがそれらを使用できるマルチスレッド環境では安全ではありません。特に、 &lt;code&gt;getpwent()&lt;/code&gt; のような関数は、スレッドごとではなくプロセスごとに反復するため、2つのスレッドが同時に反復している場合、どちらもすべてのレコードを取得しません。</target>
        </trans-unit>
        <trans-unit id="05f3b55f18e683ceb0e20e5811ee8daf9fe6a35d" translate="yes" xml:space="preserve">
          <source>Many older Pod parsers did not accept a line consisting of spaces/tabs and then a newline as a blank line. The only lines they considered blank were lines consisting of</source>
          <target state="translated">多くの古いPodパーサーは、スペース/タブと改行からなる行を空行として受け付けませんでした。彼らが空行とみなすのは</target>
        </trans-unit>
        <trans-unit id="77b79be2ba71305e951ed06673ece959275013dd" translate="yes" xml:space="preserve">
          <source>Many older Pod translators require the lines before every Pod command and after every Pod command (including &quot;=cut&quot;!) to be a blank line. Having something like this:</source>
          <target state="translated">多くの古いPodトランスレータは、すべてのPodコマンドの前とPodコマンドの後の行(&quot;=cut &quot;を含む!)を空行にする必要があります。このようなものを持つことで</target>
        </trans-unit>
        <trans-unit id="5fdba737024348a43ba7029975783958d0026e67" translate="yes" xml:space="preserve">
          <source>Many operations return &lt;a href=&quot;#undef-EXPR&quot;&gt;&lt;code&gt;undef&lt;/code&gt;&lt;/a&gt; to indicate failure, end of file, system error, uninitialized variable, and other exceptional conditions. This function allows you to distinguish &lt;a href=&quot;#undef-EXPR&quot;&gt;&lt;code&gt;undef&lt;/code&gt;&lt;/a&gt; from other values. (A simple Boolean test will not distinguish among &lt;a href=&quot;#undef-EXPR&quot;&gt;&lt;code&gt;undef&lt;/code&gt;&lt;/a&gt;, zero, the empty string, and &lt;code&gt;&quot;0&quot;&lt;/code&gt;, which are all equally false.) Note that since &lt;a href=&quot;#undef-EXPR&quot;&gt;&lt;code&gt;undef&lt;/code&gt;&lt;/a&gt; is a valid scalar, its presence doesn't</source>
          <target state="translated">多くの操作は&lt;a href=&quot;#undef-EXPR&quot;&gt; &lt;code&gt;undef&lt;/code&gt; &lt;/a&gt;を返し、失敗、ファイルの終わり、システムエラー、初期化されていない変数、およびその他の例外的な状態を示します。この関数を使用すると、&lt;a href=&quot;#undef-EXPR&quot;&gt; &lt;code&gt;undef&lt;/code&gt; &lt;/a&gt;を他の値と区別できます。（単純なブールテストでは、&lt;a href=&quot;#undef-EXPR&quot;&gt; &lt;code&gt;undef&lt;/code&gt; &lt;/a&gt;、ゼロ、空の文字列、および &lt;code&gt;&quot;0&quot;&lt;/code&gt; はすべて同じように偽です。）&lt;a href=&quot;#undef-EXPR&quot;&gt; &lt;code&gt;undef&lt;/code&gt; &lt;/a&gt;は有効なスカラーであるため、その存在は区別されないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="a404450a4f0d183d7e5d43b166d410dc6203e579" translate="yes" xml:space="preserve">
          <source>Many operations return &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; to indicate failure, end of file, system error, uninitialized variable, and other exceptional conditions. This function allows you to distinguish &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; from other values. (A simple Boolean test will not distinguish among &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;, zero, the empty string, and &lt;code&gt;&quot;0&quot;&lt;/code&gt; , which are all equally false.) Note that since &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is a valid scalar, its presence doesn't</source>
          <target state="translated">多くの操作は、失敗、ファイルの終わり、システムエラー、初期化されていない変数、およびその他の例外条件を示すために &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; を返します。この関数を使用すると、 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; を他の値と区別できます。（単純なブールテストでは、 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 、ゼロ、空の文字列、および &lt;code&gt;&quot;0&quot;&lt;/code&gt; は区別されません。これらはすべて等しくfalseです。） &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; は有効なスカラーであるため、その存在は</target>
        </trans-unit>
        <trans-unit id="98e1178b6db9a17ccdf3a94478a8066c1df5bc3a" translate="yes" xml:space="preserve">
          <source>Many operations return &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; to indicate failure, end of file, system error, uninitialized variable, and other exceptional conditions. This function allows you to distinguish &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; from other values. (A simple Boolean test will not distinguish among &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;, zero, the empty string, and &lt;code&gt;&quot;0&quot;&lt;/code&gt; , which are all equally false.) Note that since &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is a valid scalar, its presence doesn't</source>
          <target state="translated">多くの操作は、失敗、ファイルの終わり、システムエラー、初期化されていない変数、およびその他の例外条件を示すために &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; を返します。この関数を使用すると、 &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; を他の値と区別できます。（単純なブールテストでは、 &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 、ゼロ、空の文字列、および &lt;code&gt;&quot;0&quot;&lt;/code&gt; は区別されません。これらはすべて等しくfalseです。） &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; は有効なスカラーであるため、その存在は</target>
        </trans-unit>
        <trans-unit id="2dfa8b77d5259786f771a6e4ace0bfcdbd85aa18" translate="yes" xml:space="preserve">
          <source>Many operators can be combined with a &lt;code&gt;=&lt;/code&gt; as follows:</source>
          <target state="translated">多くの演算子は、次のように &lt;code&gt;=&lt;/code&gt; と組み合わせることができます。</target>
        </trans-unit>
        <trans-unit id="a7edb2d97b3af3ae2394d677e142e5033e9352fd" translate="yes" xml:space="preserve">
          <source>Many operators can be overloaded for objects. See &lt;a href=&quot;overload&quot;&gt;overload&lt;/a&gt;.</source>
          <target state="translated">多くのオペレーターはオブジェクトに対してオーバーロードできます。&lt;a href=&quot;overload&quot;&gt;オーバーロードを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="a0786026e69f66286ea639842ce2404d2adc40ac" translate="yes" xml:space="preserve">
          <source>Many people contributed in one or more ways to the final beast, see the file CREDITS for an (incomplete) list. If you miss your name, please drop me a mail. Thank you!</source>
          <target state="translated">多くの人が一つ以上の方法で最後の獣に貢献してくれました。もしあなたの名前を見落としていたら、私にメールを送ってください。ありがとうございました。</target>
        </trans-unit>
        <trans-unit id="3cd694c993c7766c158f0bde0cae8406dd835121" translate="yes" xml:space="preserve">
          <source>Many people enter the CPAN shell by running the &lt;a href=&quot;cpan&quot;&gt;cpan&lt;/a&gt; utility program which is installed in the same directory as perl itself. So if you have this directory in your PATH variable (or some equivalent in your operating system) then typing &lt;code&gt;cpan&lt;/code&gt; in a console window will work for you as well. Above that the utility provides several commandline shortcuts.</source>
          <target state="translated">多くの人は、perl自体と同じディレクトリにインストールされている&lt;a href=&quot;cpan&quot;&gt;cpan&lt;/a&gt;ユーティリティプログラムを実行してCPANシェルに入ります。したがって、この変数がPATH変数（またはオペレーティングシステムの同等のもの）にある場合は、コンソールウィンドウで &lt;code&gt;cpan&lt;/code&gt; と入力しても機能します。上記のユーティリティは、いくつかのコマンドラインショートカットを提供します。</target>
        </trans-unit>
        <trans-unit id="cf066e941decde490ba46743ad80acc7ad0c1d13" translate="yes" xml:space="preserve">
          <source>Many platforms, quite rightly so, will give you a core dump instead of a pony if the p happens not to be correctly aligned.</source>
          <target state="translated">多くの台は、当然のようにPが揃わないとポニーの代わりにコアダンプを出してくれます。</target>
        </trans-unit>
        <trans-unit id="ad441fa89d95482888ef0338d65a9d30f90b64d7" translate="yes" xml:space="preserve">
          <source>Many popular C extension modules do not come bundled (at least, not completely) due to their sizes, volatility, or simply lack of time for adequate testing and configuration across the multitude of platforms on which Perl was beta-tested. You are encouraged to look for them on CPAN (described below), or using web search engines like Alta Vista or Google.</source>
          <target state="translated">多くの人気のある C 拡張モジュールは、(少なくとも完全には)バンドルされていません。その大きさ、不安定性、あるいは Perl がベータテストされた多数のプラットフォームで十分なテストや設定を行う時間がないという理由からです。CPAN (以下に説明します)で探すか、Alta Vista や Google のようなウェブ検索エンジンを使うことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="65b9676d9f89e15e127ab7753c58e60a602e2704" translate="yes" xml:space="preserve">
          <source>Many popular C extension modules do not come bundled (at least, not completely) due to their sizes, volatility, or simply lack of time for adequate testing and configuration across the multitude of platforms on which Perl was beta-tested. You are encouraged to look for them on CPAN (described below), or using web search engines like Google or DuckDuckGo.</source>
          <target state="translated">多くの人気のある C 拡張モジュールは、(少なくとも完全には)バンドルされていません。その大きさ、不安定性、あるいは Perl がベータテストされた多数のプラットフォームで十分なテストや設定を行う時間がないという理由からです。これらのモジュールを CPAN (以下に説明します)で探すか、Google や DuckDuckGo のようなウェブ検索エンジンを使うことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="bdd710785412d1136d5d2fe923caa1de40582889" translate="yes" xml:space="preserve">
          <source>Many porters are also active on the &lt;a href=&quot;irc://irc.perl.org/#p5p&quot;&gt;irc://irc.perl.org/#p5p&lt;/a&gt; channel. Feel free to join the channel and ask questions about hacking on the Perl core.</source>
          <target state="translated">多くのポーターも&lt;a href=&quot;irc://irc.perl.org/#p5p&quot;&gt;irc：//irc.perl.org/#p5p&lt;/a&gt;チャネルでアクティブです。気軽にチャネルに参加して、Perlコアのハッキングについて質問してください。</target>
        </trans-unit>
        <trans-unit id="1b93f4b5b9979ea7052f6313958e026f6e2ea4a2" translate="yes" xml:space="preserve">
          <source>Many regular expression constructs don't work on EBCDIC platforms.</source>
          <target state="translated">多くの正規表現構文はEBCDICプラットフォームでは動作しません。</target>
        </trans-unit>
        <trans-unit id="2c09ff3401dc02f5920da9178fc87b7ee9d234ec" translate="yes" xml:space="preserve">
          <source>Many system or library calls set &lt;code&gt;errno&lt;/code&gt; if they fail, to indicate the cause of failure. They usually do &lt;b&gt;not&lt;/b&gt; set &lt;code&gt;errno&lt;/code&gt; to zero if they succeed. This means &lt;code&gt;errno&lt;/code&gt; , hence &lt;code&gt;$!&lt;/code&gt; , is meaningful only</source>
          <target state="translated">多くのシステムコールまたはライブラリコールは、失敗した場合に &lt;code&gt;errno&lt;/code&gt; を設定して、失敗の原因を示します。成功した場合、通常、 &lt;code&gt;errno&lt;/code&gt; をゼロに設定し&lt;b&gt;ません&lt;/b&gt;。これは &lt;code&gt;errno&lt;/code&gt; を意味するため、 &lt;code&gt;$!&lt;/code&gt; 、意味があるだけ</target>
        </trans-unit>
        <trans-unit id="d15215c411905dc2055f214138f50c4dd6d3b024" translate="yes" xml:space="preserve">
          <source>Many system or library calls set &lt;code&gt;errno&lt;/code&gt; if they fail, to indicate the cause of failure. They usually do &lt;b&gt;not&lt;/b&gt; set &lt;code&gt;errno&lt;/code&gt; to zero if they succeed. This means &lt;code&gt;errno&lt;/code&gt;, hence &lt;code&gt;$!&lt;/code&gt;, is meaningful only</source>
          <target state="translated">多くのシステムまたはライブラリの呼び出しは、失敗した場合に &lt;code&gt;errno&lt;/code&gt; を設定して、失敗の原因を示します。通常、成功した場合、 &lt;code&gt;errno&lt;/code&gt; をゼロに設定し&lt;b&gt;ません&lt;/b&gt;。これは &lt;code&gt;errno&lt;/code&gt; を意味するため、 &lt;code&gt;$!&lt;/code&gt; 、意味があるのは</target>
        </trans-unit>
        <trans-unit id="c790c1897e3e898f761b95151fd508249c16664d" translate="yes" xml:space="preserve">
          <source>Many systems (DOS, VMS ODS-2) cannot have more than one &lt;code&gt;.&lt;/code&gt; in their filenames.</source>
          <target state="translated">多くのシステム（DOS、VMS ODS-2）は、複数のを持つことはできません &lt;code&gt;.&lt;/code&gt; ファイル名に。</target>
        </trans-unit>
        <trans-unit id="7efce1a3865da7dfdc9c988fdb8235136031c9dd" translate="yes" xml:space="preserve">
          <source>Many thanks to Florian Ragwitz for administration and packaging assistance, to John Tromp for bug reports, to Jonathan Roy for bug reports and suggestions, to Michael Schwern for other bug reports and patches, to Mike Cariaso for helping me to figure out the Right Thing to Do About Expiration, to Joshua Gerth, Joshua Chamas, Jonathan Roy (again), Mark D. Anderson, and Andrew Johnson for more suggestions about expiration, to Brent Powers for the Memoize::ExpireLRU module, to Ariel Scolnicov for delightful messages about the Fibonacci function, to Dion Almaer for thought-provoking suggestions about the default normalizer, to Walt Mankowski and Kurt Starsinic for much help investigating problems under threaded Perl, to Alex Dudkevich for reporting the bug in prototyped functions and for checking my patch, to Tony Bass for many helpful suggestions, to Jonathan Roy (again) for finding a use for &lt;code&gt;unmemoize()&lt;/code&gt; , to Philippe Verdret for enlightening discussion of &lt;code&gt;Hook::PrePostCall&lt;/code&gt; , to Nat Torkington for advice I ignored, to Chris Nandor for portability advice, to Randal Schwartz for suggesting the '&lt;code&gt;flush_cache&lt;/code&gt; function, and to Jenda Krynicky for being a light in the world.</source>
          <target state="translated">管理とパッケージ化の支援についてはFlorian Ragwitzへ、バグレポートについてはJohn Trompへ、バグレポートと提案についてはJonathan Royへ、その他のバグレポートとパッチについてはMichael Schwernへ、正しいことを理解するのを手伝ってくれたMike Cariasoへ感謝します。有効期限について、ジョシュアガース、ジョシュアチャマス、ジョナサンロイ（再度）、マークD.アンダーソン、およびアンドリュージョンソンに、Mren​​tize :: ExpireLRUモジュールのブレントパワーズに、アリエルコルニコフに、フィボナッチ関数、デフォルトのノーマライザに関する示唆に富む提案についてはDion Almaer、スレッド化されたPerlでの問題の調査に多くの助けをしてくれたWalt MankowskiとKurt Starsinic、プロトタイプ関数のバグの報告とパッチのチェックについてはAlex Dudkevichへ、Tony Bassへ多くの役立つ提案のために、Jonathan Roy（再び）の用途を見つけて &lt;code&gt;unmemoize()&lt;/code&gt; 、 &lt;code&gt;Hook::PrePostCall&lt;/code&gt; 啓蒙的議論についてはPhilippe Verdretへ、私が無視したアドバイスについてはNat Torkingtonへ、移植性についてのアドバイスについてはChris &lt;code&gt;flush_cache&lt;/code&gt; 、「flush_cache関数を提案するためのRandal Schwartzへ、そして、世界。</target>
        </trans-unit>
        <trans-unit id="08e2587ccaa6d7cfd0ff49e65ee53ee4cc5fb187" translate="yes" xml:space="preserve">
          <source>Many thanks to Florian Ragwitz for administration and packaging assistance, to John Tromp for bug reports, to Jonathan Roy for bug reports and suggestions, to Michael Schwern for other bug reports and patches, to Mike Cariaso for helping me to figure out the Right Thing to Do About Expiration, to Joshua Gerth, Joshua Chamas, Jonathan Roy (again), Mark D. Anderson, and Andrew Johnson for more suggestions about expiration, to Brent Powers for the Memoize::ExpireLRU module, to Ariel Scolnicov for delightful messages about the Fibonacci function, to Dion Almaer for thought-provoking suggestions about the default normalizer, to Walt Mankowski and Kurt Starsinic for much help investigating problems under threaded Perl, to Alex Dudkevich for reporting the bug in prototyped functions and for checking my patch, to Tony Bass for many helpful suggestions, to Jonathan Roy (again) for finding a use for &lt;code&gt;unmemoize()&lt;/code&gt;, to Philippe Verdret for enlightening discussion of &lt;code&gt;Hook::PrePostCall&lt;/code&gt;, to Nat Torkington for advice I ignored, to Chris Nandor for portability advice, to Randal Schwartz for suggesting the '&lt;code&gt;flush_cache&lt;/code&gt; function, and to Jenda Krynicky for being a light in the world.</source>
          <target state="translated">管理とパッケージングの支援をしてくれたFlorianRagwitz、バグレポートと提案をしてくれたJohn Tromp、バグレポートと提案をしてくれたJonathan Roy、その他のバグレポートとパッチをくれたMichael Schwern、正しいことを理解するのを手伝ってくれたMikeCariasoに感謝します。有効期限については、Joshua Gerth、Joshua Chamas、Jonathan Roy（再び）、Mark D. Anderson、Andrew Johnsonに、有効期限についての詳細な提案を、Brent Powers for the Memoize :: ExpireLRUモジュールに、ArielScolnicovにFibonacci関数、デフォルトのノーマライザーに関する示唆に富む提案をしてくれたDion Almaer、スレッド化されたPerlでの問題の調査に大いに役立つWaltMankowskiとKurtStarsinic、プロトタイプ関数のバグを報告してパッチをチェックしてくれたAlex Dudkevich、Tony Bass多くの役立つ提案については、ジョナサンロイ（再び）の用途を見つけるために &lt;code&gt;unmemoize()&lt;/code&gt; 、 &lt;code&gt;Hook::PrePostCall&lt;/code&gt; 啓蒙的な議論のためのPhilippeVerdret 、無視したアドバイスのためのNat Torkington、移植性のアドバイスのためのChris &lt;code&gt;flush_cache&lt;/code&gt; 、 ' flush_cache関数を提案するためのRandalSchwartz、そしてライトインであるためのJenda Krynicky世界。</target>
        </trans-unit>
        <trans-unit id="ab478f3efc840eebab919dff1b9512286f70c10c" translate="yes" xml:space="preserve">
          <source>Map</source>
          <target state="translated">Map</target>
        </trans-unit>
        <trans-unit id="0b06a5289fc2a1842dff3a88be9b7be213a3d5b9" translate="yes" xml:space="preserve">
          <source>Map ASCII unchanged.</source>
          <target state="translated">マップASCIIは変更なし。</target>
        </trans-unit>
        <trans-unit id="6cd0cefd9b93740b2ce288b59bbfa2506b7603b6" translate="yes" xml:space="preserve">
          <source>Map Perl operating system names to generic types</source>
          <target state="translated">Perl オペレーティングシステム名を汎用型にマッピング</target>
        </trans-unit>
        <trans-unit id="7d32a75bc17a4709e9d1141d1ebfa60b6cd43879" translate="yes" xml:space="preserve">
          <source>Map always returns a list, which can be assigned to a hash such that the elements become key/value pairs. See &lt;a href=&quot;../perldata&quot;&gt;perldata&lt;/a&gt; for more details.</source>
          <target state="translated">Mapは常にリストを返します。これは、要素がキー/値のペアになるようなハッシュに割り当てることができます。詳細は&lt;a href=&quot;../perldata&quot;&gt;perldata&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="b5dd04ccd71f6dc1b0c4b39870ec7fbae4d0141a" translate="yes" xml:space="preserve">
          <source>Map always returns a list, which can be assigned to a hash such that the elements become key/value pairs. See &lt;a href=&quot;perldata&quot;&gt;perldata&lt;/a&gt; for more details.</source>
          <target state="translated">Mapは常にリストを返します。これは、要素がキー/値のペアになるようなハッシュに割り当てることができます。詳細は&lt;a href=&quot;perldata&quot;&gt;perldata&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="3a9b87b1050e7882b468c1ddc762f864cd1b3ca5" translate="yes" xml:space="preserve">
          <source>Map such a character set that consists of 94 or 96 powered by N members by adding 0x80 to each byte.</source>
          <target state="translated">各バイトに 0x80 を加算して、N メンバーが 94 または 96 をパワーとする文字セットをマッピングします。</target>
        </trans-unit>
        <trans-unit id="d4fa0aeb10d9944cd20c23c3471632b3053b6c36" translate="yes" xml:space="preserve">
          <source>Mapping \x00 to '@' causes too much pain everywhere.</source>
          <target state="translated">Mapping ¶x00 to '@' causes too much pain everywhere.</target>
        </trans-unit>
        <trans-unit id="b05d51e1bee28ea12c20512307467a2c4ee871f8" translate="yes" xml:space="preserve">
          <source>Maps certain Unicode code points to their legacy Japanese cell-phone values</source>
          <target state="translated">特定の Unicode コードポイントを日本の携帯電話のレガシー値にマップします。</target>
        </trans-unit>
        <trans-unit id="67c10042685d0de63983cda038f2ff8c2785c051" translate="yes" xml:space="preserve">
          <source>Maps from names (as in &lt;code&gt;E&amp;lt;&lt;i&gt;name&lt;/i&gt;&amp;gt;&lt;/code&gt;) like &quot;eacute&quot; or &quot;sol&quot; to the Unicode value that each stands for. For example, &lt;code&gt;$Name2character_number{'eacute'}&lt;/code&gt; is 201, and &lt;code&gt;$Name2character_number{'eacute'}&lt;/code&gt; is 8364. You get the correct Unicode value, regardless of the version of Perl you're using -- which differs from &lt;code&gt;%Name2character&lt;/code&gt; 's behavior under pre-5.7 Perls.</source>
          <target state="translated">「Ecute」や「​​sol」などの名前（ &lt;code&gt;E&amp;lt;&lt;i&gt;name&lt;/i&gt;&amp;gt;&lt;/code&gt; ）から、それぞれが表すUnicode値にマップします。たとえば、 &lt;code&gt;$Name2character_number{'eacute'}&lt;/code&gt; は201、 &lt;code&gt;$Name2character_number{'eacute'}&lt;/code&gt; は8364です。使用しているPerlのバージョンに関係なく、正しいUnicode値を取得します。これは &lt;code&gt;%Name2character&lt;/code&gt; の値とは異なります。5.7より前のPerlでの動作。</target>
        </trans-unit>
        <trans-unit id="9536673c9e3743e558f91c5129ada427b7fd5a55" translate="yes" xml:space="preserve">
          <source>Maps from names (as in &lt;code&gt;E&amp;lt;&lt;i&gt;name&lt;/i&gt;&amp;gt;&lt;/code&gt;) like &quot;eacute&quot; or &quot;sol&quot; to the Unicode value that each stands for. For example, &lt;code&gt;$Name2character_number{'eacute'}&lt;/code&gt; is 201, and &lt;code&gt;$Name2character_number{'eacute'}&lt;/code&gt; is 8364. You get the correct Unicode value, regardless of the version of Perl you're using -- which differs from &lt;code&gt;%Name2character&lt;/code&gt;'s behavior under pre-5.7 Perls.</source>
          <target state="translated">「eacute」や「​​sol」などの名前（ &lt;code&gt;E&amp;lt;&lt;i&gt;name&lt;/i&gt;&amp;gt;&lt;/code&gt; ）から、それぞれが表すUnicode値にマップします。たとえば、 &lt;code&gt;$Name2character_number{'eacute'}&lt;/code&gt; は201で、 &lt;code&gt;$Name2character_number{'eacute'}&lt;/code&gt; は8364です。使用しているPerlのバージョンに関係なく、正しいUnicode値を取得します。これは &lt;code&gt;%Name2character&lt;/code&gt; 'sとは異なります。5.7より前のPerlでの動作。</target>
        </trans-unit>
        <trans-unit id="6d2553254721ed355ac347e903abc341219f5deb" translate="yes" xml:space="preserve">
          <source>Maps from names (as in &lt;code&gt;E&amp;lt;&lt;i&gt;name&lt;/i&gt;&amp;gt;&lt;/code&gt;) like &quot;eacute&quot; or &quot;sol&quot; to the string that each stands for. Note that this does not include numerics (like &quot;64&quot; or &quot;x981c&quot;). Under old Perl versions (before 5.7) you get a &quot;?&quot; in place of characters whose Unicode value is over 255.</source>
          <target state="translated">「Ecute」や「​​sol」などの名前（ &lt;code&gt;E&amp;lt;&lt;i&gt;name&lt;/i&gt;&amp;gt;&lt;/code&gt; ）から、それぞれが表す文字列にマップします。これには数値（「64」や「x981c」など）は含まれないことに注意してください。古いバージョンの5.7（5.7より前）では、「？」Unicode値が255を超える文字の代わり。</target>
        </trans-unit>
        <trans-unit id="a1b78ee004c9a2fbd85f8f626a722e3fe6da6945" translate="yes" xml:space="preserve">
          <source>Maps the kRSUnicode property values to corresponding code points</source>
          <target state="translated">kRSUnicodeプロパティの値を対応するコードポイントにマップします。</target>
        </trans-unit>
        <trans-unit id="7b909fc95f2b4e5f8d9967846d9866d42fccc70f" translate="yes" xml:space="preserve">
          <source>Marc Green, &amp;lt;marcgreen@cpan.org&amp;gt;.</source>
          <target state="translated">Marc Green、&amp;lt;marcgreen@cpan.org&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="0650171f58161c1a60dbd003ef755368668ef874" translate="yes" xml:space="preserve">
          <source>March 14, 2003 (Pi day)</source>
          <target state="translated">2003年3月14日</target>
        </trans-unit>
        <trans-unit id="8ca9751b38a5ce5495d1bc4a93437267f7e09312" translate="yes" xml:space="preserve">
          <source>March 18th, 2000</source>
          <target state="translated">2000年3月18日</target>
        </trans-unit>
        <trans-unit id="777916db149dc5cc899516f42c23bd6b0847475c" translate="yes" xml:space="preserve">
          <source>March 2003</source>
          <target state="translated">2003年3月</target>
        </trans-unit>
        <trans-unit id="6188237b0da82f2fd62e1940dd4c6b739e5e4019" translate="yes" xml:space="preserve">
          <source>March 28th, 1997; by Hugo van der Sanden: added support for code references and the already documented 'debug' method; revamped documentation.</source>
          <target state="translated">1997 年 3 月 28 日;by Hugo van der Sanden:コード参照と既に文書化されている 'debug' メソッドのサポートを追加しました。</target>
        </trans-unit>
        <trans-unit id="719b2885e137f36b196d43363c080ddacf1c5a2e" translate="yes" xml:space="preserve">
          <source>Marcus Holland-Moritz &amp;lt;mhx@cpan.org&amp;gt;</source>
          <target state="translated">マーカスホランドモリッツ&amp;lt;mhx@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="1dfd6571ab219bad3b1cec579d53f1dfc162bfba" translate="yes" xml:space="preserve">
          <source>Marek Rouchal &amp;lt;marekr@cpan.org&amp;gt;</source>
          <target state="translated">Marek Rouchal &amp;lt;marekr@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="264476e951a0a1cdd02faca9ecf02d9d3dd7bcf9" translate="yes" xml:space="preserve">
          <source>Marek Rouchal &amp;lt;marekr@cpan.org&amp;gt;, borrowing a lot of things from &lt;a href=&quot;../pod2man&quot;&gt;pod2man&lt;/a&gt; and &lt;a href=&quot;http://search.cpan.org/perldoc/pod2roff&quot;&gt;pod2roff&lt;/a&gt; as well as other POD processing tools by Tom Christiansen, Brad Appleton and Russ Allbery.</source>
          <target state="translated">Marek Rouchal &amp;lt;marekr@cpan.org&amp;gt;は、&lt;a href=&quot;../pod2man&quot;&gt;pod2man&lt;/a&gt;と&lt;a href=&quot;http://search.cpan.org/perldoc/pod2roff&quot;&gt;pod2roff&lt;/a&gt;、およびTom Christiansen、Brad Appleton、Russ Allberyによる他のPOD処理ツールから多くのものを借りています。</target>
        </trans-unit>
        <trans-unit id="c079bae77060ca37ba3c2926c71f4d4859c75bac" translate="yes" xml:space="preserve">
          <source>Marek Rouchal &amp;lt;marekr@cpan.org&amp;gt;, heavily borrowing code from Nick Ing-Simmons' PodToHtml.</source>
          <target state="translated">Marek Rouchal &amp;lt;marekr@cpan.org&amp;gt;、Nick Ing-SimmonsのPodToHtmlからコードを多用しています。</target>
        </trans-unit>
        <trans-unit id="9069d6c0e29c4952ab3d16ec4d73d5cdcc560d93" translate="yes" xml:space="preserve">
          <source>Mark Allen &lt;code&gt;&amp;lt;mallen@cpan.org&amp;gt;&lt;/code&gt;</source>
          <target state="translated">マーク・アレン &lt;code&gt;&amp;lt;mallen@cpan.org&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c83f3f033b2fc96f5fc9ad533bd899a9d4b6ecc0" translate="yes" xml:space="preserve">
          <source>Mark Biggar said, when asked about to drop the '+' altogether, or make only &lt;code&gt;cmp&lt;/code&gt; work:</source>
          <target state="translated">マークビガーは、「+」を完全に削除するか、または &lt;code&gt;cmp&lt;/code&gt; のみを機能させるかについて尋ねられたとき、次のように述べています。</target>
        </trans-unit>
        <trans-unit id="41a097411cd8ebbee57a678e8ee8e205e4008c67" translate="yes" xml:space="preserve">
          <source>Mark Biggar, overloaded interface by Ilya Zakharevich, 1996-2001.</source>
          <target state="translated">マーク・ビガー、イリヤ・ザハレヴィッチによるオーバーロードされたインターフェイス、1996年から2001年まで。</target>
        </trans-unit>
        <trans-unit id="377509d88d53597d4ff4d33c6f13c1974a06e69d" translate="yes" xml:space="preserve">
          <source>Mark Biggar, overloaded interface by Ilya Zakharevich. Completely rewritten by Tels &lt;a href=&quot;http://bloodgate.com&quot;&gt;http://bloodgate.com&lt;/a&gt; in 2001 - 2006, and still at it in 2007.</source>
          <target state="translated">Mark Biggar、Ilya Zakharevichによるオーバーロードインターフェイス。2001年から2006年にTels &lt;a href=&quot;http://bloodgate.com&quot;&gt;http://bloodgate.com&lt;/a&gt;によって完全に書き直されましたが、2007年もまだ変更されていません。</target>
        </trans-unit>
        <trans-unit id="ac261964132320c5f1e5015540d01455408eb496" translate="yes" xml:space="preserve">
          <source>Mark Fowler &amp;lt;markf@cpan.org&amp;gt;</source>
          <target state="translated">マークファウラー&amp;lt;markf@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="d300b7701521ff8a33f7b33d0188a117c431b382" translate="yes" xml:space="preserve">
          <source>Mark Jason Dominus</source>
          <target state="translated">マークジェイソン・ドミニス</target>
        </trans-unit>
        <trans-unit id="450f27b0693fb0a8da6251b3b74d437c26be547d" translate="yes" xml:space="preserve">
          <source>Mark Kettenis &amp;lt;kettenis@gnu.org&amp;gt;</source>
          <target state="translated">マークケテニス&amp;lt;kettenis@gnu.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="81bc652b2afe581a8637a9ead94c1a383e00b3d9" translate="yes" xml:space="preserve">
          <source>Mark Reed and Roland Giersig -- Klingon translators.</source>
          <target state="translated">マーク・リードとローランド・ジアシグ --クリンゴン語の翻訳者。</target>
        </trans-unit>
        <trans-unit id="e1debb6f407e6933148527bee46b8099a40b610d" translate="yes" xml:space="preserve">
          <source>Mark Stack</source>
          <target state="translated">マークスタック</target>
        </trans-unit>
        <trans-unit id="c8ddbdd441714aa3b5957a06f9bf2537de77f045" translate="yes" xml:space="preserve">
          <source>Mark Stosberg</source>
          <target state="translated">マーク・ストスバーグ</target>
        </trans-unit>
        <trans-unit id="e5f44ec87511dcf9977a4ec17e09815c5d4e4d80" translate="yes" xml:space="preserve">
          <source>Mark all the current temporaries for reuse</source>
          <target state="translated">再利用のために現在のすべてのテンポラリーにマークを付ける</target>
        </trans-unit>
        <trans-unit id="9cd6842e0e13563dce83b0a4158f7d6424282172" translate="yes" xml:space="preserve">
          <source>Mark an object as not-readonly. Exactly what this mean depends on the object type. Exposed to perl code via Internals::SvREADONLY().</source>
          <target state="translated">オブジェクトを読み取り専用ではないものとしてマークします。これが何を意味するかは、オブジェクトの種類によって異なります。Internals::SvREADONLY()を介して Perl コードに公開されています。</target>
        </trans-unit>
        <trans-unit id="31a02aa032f48d5863f9a1d17981d5d9567c8844" translate="yes" xml:space="preserve">
          <source>Mark an object as readonly. Exactly what this means depends on the object type. Exposed to perl code via Internals::SvREADONLY().</source>
          <target state="translated">オブジェクトを読み取り専用としてマークします。これが何を意味するかは、オブジェクトの型に依存します。Internals::SvREADONLY()を介して Perl コードに公開されています。</target>
        </trans-unit>
        <trans-unit id="434c6b3d12f78673c6f025dc43bd2b5e87746cf6" translate="yes" xml:space="preserve">
          <source>Mark message &lt;code&gt;MSGNUM&lt;/code&gt; to be deleted from the remote mailbox. All messages that are marked to be deleted will be removed from the remote mailbox when the server connection closed.</source>
          <target state="translated">リモートメールボックスから削除するメッセージ &lt;code&gt;MSGNUM&lt;/code&gt; をマークします。削除するようにマークされているすべてのメッセージは、サーバー接続が閉じたときにリモートメールボックスから削除されます。</target>
        </trans-unit>
        <trans-unit id="3fc451fa99eddaf84abe45f817ed60d28d73925f" translate="yes" xml:space="preserve">
          <source>Mark modules as loaded or unloaded</source>
          <target state="translated">モジュールをロードまたはアンロードとしてマークする</target>
        </trans-unit>
        <trans-unit id="0952995ce715e0fcf16177cb607a92712143f22b" translate="yes" xml:space="preserve">
          <source>Mark places that need to be revisited with XXX (and revisit often!)</source>
          <target state="translated">再訪が必要な場所には○○を付けてください。</target>
        </trans-unit>
        <trans-unit id="f890cc48bd62c292c1b2117bad32ccde46514a4e" translate="yes" xml:space="preserve">
          <source>Mark stack</source>
          <target state="translated">マークスタック</target>
        </trans-unit>
        <trans-unit id="757fbf6071a2b2fed849d8ec18f9f6866d396b4c" translate="yes" xml:space="preserve">
          <source>Mark the stream as line buffered. &lt;code&gt;PerlIOBase_setlinebuf()&lt;/code&gt; sets the PERLIO_F_LINEBUF flag and is normally sufficient.</source>
          <target state="translated">ストリームをラインバッファリング済みとしてマークします。 &lt;code&gt;PerlIOBase_setlinebuf()&lt;/code&gt; はPERLIO_F_LINEBUFフラグを設定し、通常はこれで十分です。</target>
        </trans-unit>
        <trans-unit id="0da58592dac4b83b59b8524c503019ad8f94d0df" translate="yes" xml:space="preserve">
          <source>Mark-Jason Dominus (&lt;code&gt;mjd-perl-memoize+@plover.com&lt;/code&gt; ), Plover Systems co.</source>
          <target state="translated">Mark-Jason Dominus（ &lt;code&gt;mjd-perl-memoize+@plover.com&lt;/code&gt; ）、Plover Systems co。</target>
        </trans-unit>
        <trans-unit id="f0e3d2177b8ac5226b97d7fae88a022b0452ed9f" translate="yes" xml:space="preserve">
          <source>Mark-Jason Dominus (&lt;code&gt;mjd-perl-memoize+@plover.com&lt;/code&gt;), Plover Systems co.</source>
          <target state="translated">Mark-Jason Dominus（ &lt;code&gt;mjd-perl-memoize+@plover.com&lt;/code&gt; - perl - memoize + @ plover.com）、Plover Systemsco。</target>
        </trans-unit>
        <trans-unit id="46fb530910c2bcc92b57abfd9b169a4f2b074dec" translate="yes" xml:space="preserve">
          <source>Mark-Jason Dominus (mjd-perl-memoize+@plover.com)</source>
          <target state="translated">マークジェイソン・ドミニス (mjd-perl-memoize+@plover.com)</target>
        </trans-unit>
        <trans-unit id="5686a25e5fb2f469692e134a738a6ecc07d28f5e" translate="yes" xml:space="preserve">
          <source>Marks &lt;code&gt;o&lt;/code&gt; as having no further siblings and marks o as having the specified parent. See also &lt;code&gt;&lt;a href=&quot;#OpMORESIB_set&quot;&gt;&quot;OpMORESIB_set&quot;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;OpMAYBESIB_set&lt;/code&gt;. For a higher-level interface, see &lt;code&gt;&lt;a href=&quot;#op_sibling_splice&quot;&gt;&quot;op_sibling_splice&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">マーク &lt;code&gt;o&lt;/code&gt; 指定された親を持つものとしてOさらなる兄弟とマークを有していないとして。 &lt;code&gt;&lt;a href=&quot;#OpMORESIB_set&quot;&gt;&quot;OpMORESIB_set&quot;&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;OpMAYBESIB_set&lt;/code&gt; も参照してください。高レベルのインターフェースについては、 &lt;code&gt;&lt;a href=&quot;#op_sibling_splice&quot;&gt;&quot;op_sibling_splice&quot;&lt;/a&gt;&lt;/code&gt; 参照してください。</target>
        </trans-unit>
        <trans-unit id="98f68109ba2dde58a98de8a29bc502b61b464f61" translate="yes" xml:space="preserve">
          <source>Marks an SV as tainted if tainting is enabled.</source>
          <target state="translated">染色が有効になっている場合、汚染された SV をマークします。</target>
        </trans-unit>
        <trans-unit id="a080fe5381afacd2d95df891fcd34ffb1b062407" translate="yes" xml:space="preserve">
          <source>Marks an existing SV as mortal. The SV will be destroyed &quot;soon&quot;, either by an explicit call to &lt;code&gt;FREETMPS&lt;/code&gt;, or by an implicit call at places such as statement boundaries. &lt;code&gt;SvTEMP()&lt;/code&gt; is turned on which means that the SV's string buffer can be &quot;stolen&quot; if this SV is copied. See also &lt;code&gt;&lt;a href=&quot;#sv_newmortal&quot;&gt;&quot;sv_newmortal&quot;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#sv_mortalcopy&quot;&gt;&quot;sv_mortalcopy&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">既存のSVを致命的としてマークします。SVは、 &lt;code&gt;FREETMPS&lt;/code&gt; への明示的な呼び出し、またはステートメント境界などの場所での暗黙的な呼び出しのいずれかによって、「すぐに」破棄されます。 &lt;code&gt;SvTEMP()&lt;/code&gt; がオンになっているため、このSVがコピーされた場合、SVの文字列バッファが「盗まれる」可能性があります。 &lt;code&gt;&lt;a href=&quot;#sv_newmortal&quot;&gt;&quot;sv_newmortal&quot;&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;#sv_mortalcopy&quot;&gt;&quot;sv_mortalcopy&quot;&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="2db65aa42a74dc9034cc35ce6c1faf364427ed3b" translate="yes" xml:space="preserve">
          <source>Marks an existing SV as mortal. The SV will be destroyed &quot;soon&quot;, either by an explicit call to FREETMPS, or by an implicit call at places such as statement boundaries. SvTEMP() is turned on which means that the SV's string buffer can be &quot;stolen&quot; if this SV is copied. See also &lt;code&gt;sv_newmortal&lt;/code&gt; and &lt;code&gt;sv_mortalcopy&lt;/code&gt; .</source>
          <target state="translated">既存のSVを致命的としてマークします。SVは、FREETMPSへの明示的な呼び出し、またはステートメントの境界などの場所での暗黙的な呼び出しによって、「すぐに」破棄されます。SvTEMP（）はオンになっています。つまり、このSVがコピーされると、SVの文字列バッファが「盗まれる」可能性があります。 &lt;code&gt;sv_newmortal&lt;/code&gt; および &lt;code&gt;sv_mortalcopy&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="ff643d8dde56f37f877ff7ade1da6aae5c6540db" translate="yes" xml:space="preserve">
          <source>Marks o as having no further siblings. On &lt;code&gt;PERL_OP_PARENT&lt;/code&gt; builds, marks o as having the specified parent. See also &lt;code&gt;OpMORESIB_set&lt;/code&gt; and &lt;code&gt;OpMAYBESIB_set&lt;/code&gt; . For a higher-level interface, see &lt;code&gt;op_sibling_splice&lt;/code&gt; .</source>
          <target state="translated">oに兄弟がもうないことを示します。で &lt;code&gt;PERL_OP_PARENT&lt;/code&gt; 、指定された親を持つようにOマークを構築します。 &lt;code&gt;OpMORESIB_set&lt;/code&gt; および &lt;code&gt;OpMAYBESIB_set&lt;/code&gt; も参照してください。より上位のインターフェースについては、 &lt;code&gt;op_sibling_splice&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="f648546860128e7a1516008b618e091f14b60522" translate="yes" xml:space="preserve">
          <source>Marks the object as taint-clean, and as such data read from it will also be considered taint-clean. Note that this is a very trusting action to take, and appropriate consideration for the data source and potential vulnerability should be kept in mind. Returns 0 on success, -1 if setting the taint-clean flag failed. (eg invalid handle)</source>
          <target state="translated">オブジェクトにteaint-cleanのマークを付け、そこから読み込まれたデータもteaint-cleanとみなされます。これは非常に信頼性の高いアクションであることに注意してください。データソースや潜在的な脆弱性を適切に考慮しておく必要があります。taint-clean フラグの設定に失敗した場合は -1 を返します。(無効なハンドルなど)</target>
        </trans-unit>
        <trans-unit id="4a22faf92173de5f56b8198d2fcad5f9500ee814" translate="yes" xml:space="preserve">
          <source>Marks the package as loaded to perl. &lt;code&gt;PACKAGE&lt;/code&gt; can be a bareword or string.</source>
          <target state="translated">パッケージをperlにロード済みとしてマークします。 &lt;code&gt;PACKAGE&lt;/code&gt; は、ベアワードまたは文字列にすることができます。</target>
        </trans-unit>
        <trans-unit id="04902927b1471c77962c6cabf557af3a4b22b23b" translate="yes" xml:space="preserve">
          <source>Marks the package as unloaded to perl, which is the exact opposite of &lt;code&gt;mark_as_loaded&lt;/code&gt; . &lt;code&gt;PACKAGE&lt;/code&gt; can be a bareword or string.</source>
          <target state="translated">パッケージをperlにアンロード済みとしてマークします。これは、 &lt;code&gt;mark_as_loaded&lt;/code&gt; とまったく反対です。 &lt;code&gt;PACKAGE&lt;/code&gt; は、ベアワードまたは文字列にすることができます。</target>
        </trans-unit>
        <trans-unit id="719514f0bc1e227795966e35c172acb7e89879e5" translate="yes" xml:space="preserve">
          <source>Marks the package as unloaded to perl, which is the exact opposite of &lt;code&gt;mark_as_loaded&lt;/code&gt;. &lt;code&gt;PACKAGE&lt;/code&gt; can be a bareword or string.</source>
          <target state="translated">パッケージをperlにアンロードされたものとしてマークします。これは &lt;code&gt;mark_as_loaded&lt;/code&gt; の正反対です。 &lt;code&gt;PACKAGE&lt;/code&gt; は、ベアワードまたは文字列にすることができます。</target>
        </trans-unit>
        <trans-unit id="6c1f770624b796cd596d3a67943a0c4353130d2c" translate="yes" xml:space="preserve">
          <source>Marks the variable as multiply defined, thus preventing the:</source>
          <target state="translated">変数を倍数定義のマークを付けます。</target>
        </trans-unit>
        <trans-unit id="cff46171564d3d534ef0fb1847dbfa00e48f231c" translate="yes" xml:space="preserve">
          <source>Martin J. Evans &amp;lt;mjegh@ntlworld.com&amp;gt;</source>
          <target state="translated">マーティン・J・エヴァンス&amp;lt;mjegh@ntlworld.com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="85406e2038d0243edddde001716b01684f2778ce" translate="yes" xml:space="preserve">
          <source>Martin-Louis Bright &amp;lt;mlbright@gmail.com&amp;gt;</source>
          <target state="translated">Martin-Louis Bright &amp;lt;mlbright@gmail.com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="d429907f8fad8de61eed79786629c962a0844da0" translate="yes" xml:space="preserve">
          <source>Massachusetts</source>
          <target state="translated">Massachusetts</target>
        </trans-unit>
        <trans-unit id="37e5fcb1ae2486eac4310780e954d1d2153d08b1" translate="yes" xml:space="preserve">
          <source>Mastering Perl</source>
          <target state="translated">Perlをマスターする</target>
        </trans-unit>
        <trans-unit id="ea351e672a82e1244cd8779022e09f0034f5a7e1" translate="yes" xml:space="preserve">
          <source>Mastering Regular Expressions</source>
          <target state="translated">正規表現をマスターする</target>
        </trans-unit>
        <trans-unit id="22d4d02d8da4f8d133bb080e8bf0a53687196993" translate="yes" xml:space="preserve">
          <source>Match 'a' followed by 'b' followed by 'c'. We are on a roll and have satisfied the first group. Set $1 to 'abc'.</source>
          <target state="translated">'a'に続いて'b'に続いて'c'をマッチさせる。これで、最初のグループを満たしたことになります。1を'abc'に設定します。</target>
        </trans-unit>
        <trans-unit id="11c4d0b2479d50705f90c54d0532f70025aab256" translate="yes" xml:space="preserve">
          <source>Match 'a' followed by 'b'. So far so good.</source>
          <target state="translated">'a'に'b'を続けてマッチさせます。ここまでは順調です。</target>
        </trans-unit>
        <trans-unit id="2d4b771841aed044053e2a7426782a75fac41932" translate="yes" xml:space="preserve">
          <source>Match all subsections of &lt;code&gt;DESCRIPTION&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;DESCRIPTION&lt;/code&gt; のすべてのサブセクションに一致</target>
        </trans-unit>
        <trans-unit id="0b37627cd568766a8a2fde5b6baa2adc0dd0c782" translate="yes" xml:space="preserve">
          <source>Match all top level sections but none of their subsections:</source>
          <target state="translated">すべてのトップレベルのセクションにマッチしますが、そのサブセクションはありません。</target>
        </trans-unit>
        <trans-unit id="d0596c8f0742f8f130e5e576d30972fa9f4302b5" translate="yes" xml:space="preserve">
          <source>Match only the &lt;code&gt;Question&lt;/code&gt; and &lt;code&gt;Answer&lt;/code&gt; subsections of the &lt;code&gt;DESCRIPTION&lt;/code&gt; section:</source>
          <target state="translated">「 &lt;code&gt;DESCRIPTION&lt;/code&gt; セクションの「 &lt;code&gt;Question&lt;/code&gt; と &lt;code&gt;Answer&lt;/code&gt; サブセクションにのみ一致します。</target>
        </trans-unit>
        <trans-unit id="c0e7fa8eb9c5a3355dde0bfcb14e87f4ae52937c" translate="yes" xml:space="preserve">
          <source>Match the 'd'.</source>
          <target state="translated">'d'を一致させます。</target>
        </trans-unit>
        <trans-unit id="be1f5f366bde2e61ff344fc7793ee6e0a4508408" translate="yes" xml:space="preserve">
          <source>Match the &lt;code&gt;Comments&lt;/code&gt; subsection of</source>
          <target state="translated">の &lt;code&gt;Comments&lt;/code&gt; サブセクションに一致</target>
        </trans-unit>
        <trans-unit id="e025337ed7c230f237c28a1acfe5d3575399196a" translate="yes" xml:space="preserve">
          <source>Match the &lt;code&gt;DESCRIPTION&lt;/code&gt; section but do</source>
          <target state="translated">&lt;code&gt;DESCRIPTION&lt;/code&gt; セクションと一致しますが、</target>
        </trans-unit>
        <trans-unit id="809b44171d8c193bc9b4db448d041eca1d612988" translate="yes" xml:space="preserve">
          <source>Match the &lt;code&gt;NAME&lt;/code&gt; and &lt;code&gt;SYNOPSIS&lt;/code&gt; sections and all of their subsections:</source>
          <target state="translated">&lt;code&gt;NAME&lt;/code&gt; および &lt;code&gt;SYNOPSIS&lt;/code&gt; セクションとそれらのすべてのサブセクションに一致します。</target>
        </trans-unit>
        <trans-unit id="94b47b1709b60267b313ebe40e8ce16e55fa004d" translate="yes" xml:space="preserve">
          <source>Matched non-Unicode code point 0x%X against Unicode property; may not be portable</source>
          <target state="translated">Unicodeプロパティに対して非Unicodeコードポイント0x%Xをマッチさせました。</target>
        </trans-unit>
        <trans-unit id="d89688e77597d0f0b5bc24a196b8aa4f24d28f78" translate="yes" xml:space="preserve">
          <source>Matches a character that has a non-canonical decomposition.</source>
          <target state="translated">非正規分解を持つ文字にマッチします。</target>
        </trans-unit>
        <trans-unit id="a6f252d85159e471dcc7245d171fafb38fcd2b97" translate="yes" xml:space="preserve">
          <source>Matches a literal '.'. Equivalent to the Perl regular expression</source>
          <target state="translated">リテラル '.' にマッチします。Perl の正規表現</target>
        </trans-unit>
        <trans-unit id="93575811859840b893fbf3a9e80a1bb8c50a691a" translate="yes" xml:space="preserve">
          <source>Matches any character that is graphic. Theoretically, this means a character that on a printer would cause ink to be used.</source>
          <target state="translated">グラフィックである任意の文字にマッチします。理論的には、これはプリンタ上でインクが使用されるような文字を意味します。</target>
        </trans-unit>
        <trans-unit id="d54b8cec84523d2bbc940d4158b99d956e15f640" translate="yes" xml:space="preserve">
          <source>Matches as &lt;code&gt;SSS...S&lt;/code&gt; (repeated as many times as necessary).</source>
          <target state="translated">&lt;code&gt;SSS...S&lt;/code&gt; として一致します（必要な回数だけ繰り返されます）。</target>
        </trans-unit>
        <trans-unit id="c4ff6981c871c3a904b9e8169f3626531b5fd219" translate="yes" xml:space="preserve">
          <source>Matches as &lt;code&gt;S{max}|S{max-1}|...|S{min+1}|S{min}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;S{max}|S{max-1}|...|S{min+1}|S{min}&lt;/code&gt; として一致します。</target>
        </trans-unit>
        <trans-unit id="bd5e1550fb89dce10a89ca6b24a5232964ff2f7b" translate="yes" xml:space="preserve">
          <source>Matches as &lt;code&gt;S{min}|S{min+1}|...|S{max-1}|S{max}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;S{min}|S{min+1}|...|S{max-1}|S{max}&lt;/code&gt; として一致します。</target>
        </trans-unit>
        <trans-unit id="5723f68cdd1b82a0a16aaa3d449fb53afe9be816" translate="yes" xml:space="preserve">
          <source>Matches in the Block property have shortcuts that begin with &quot;In_&quot;. For example, &lt;code&gt;\p{Block=Latin1}&lt;/code&gt; can be written as &lt;code&gt;\p{In_Latin1}&lt;/code&gt; . For backward compatibility, if there is no conflict with another shortcut, these may also be written as &lt;code&gt;\p{Latin1}&lt;/code&gt; or &lt;code&gt;\p{Is_Latin1}&lt;/code&gt; . But, N.B., there are numerous such conflicting shortcuts. Use of these forms for Block is discouraged, and are flagged as such, not only because of the potential confusion as to what is meant, but also because a later release of Unicode may preempt the shortcut, and your program would no longer be correct. Use the &quot;In_&quot; form instead to avoid this, or even more clearly, use the compound form, e.g., &lt;code&gt;\p{blk:latin1}&lt;/code&gt; . See &lt;a href=&quot;perlunicode#Blocks&quot;&gt;Blocks in perlunicode&lt;/a&gt; for more information about this.</source>
          <target state="translated">Blockプロパティの一致には、「In_」で始まるショートカットがあります。たとえば、 &lt;code&gt;\p{Block=Latin1}&lt;/code&gt; は &lt;code&gt;\p{In_Latin1}&lt;/code&gt; と書くことができます。下位互換性のために、別のショートカットとの競合がない場合、これらは &lt;code&gt;\p{Latin1}&lt;/code&gt; または &lt;code&gt;\p{Is_Latin1}&lt;/code&gt; として記述されることもあります。しかし、注意してください。そのような競合するショートカットは数多くあります。これらのフォームをブロックに使用することはお勧めできません。その意味は、混乱を招く可能性があるだけでなく、Unicodeの今後のリリースでショートカットが優先され、プログラムが正しくなくなるためです。これを回避するには、代わりに &quot;In_&quot;フォームを使用するか、またはさらに明確に、 &lt;code&gt;\p{blk:latin1}&lt;/code&gt; の複合フォームを使用します。見る&lt;a href=&quot;perlunicode#Blocks&quot;&gt;&lt;/a&gt;詳細については、perlunicodeのブロック。</target>
        </trans-unit>
        <trans-unit id="dc2bbbf4e6e6201407867c19a270d77748d37bd5" translate="yes" xml:space="preserve">
          <source>Matches the best match for &lt;code&gt;&quot;S&quot;&lt;/code&gt; and only that.</source>
          <target state="translated">&lt;code&gt;&quot;S&quot;&lt;/code&gt; ベストマッチに一致し、それだけです。</target>
        </trans-unit>
        <trans-unit id="80d7f5dbe400c6fc8812e001032594152a2faa28" translate="yes" xml:space="preserve">
          <source>Matches the best match for &lt;code&gt;S&lt;/code&gt; and only that.</source>
          <target state="translated">&lt;code&gt;S&lt;/code&gt; と最も一致するものだけに一致します。</target>
        </trans-unit>
        <trans-unit id="099232daa21ff3b64c97abd1d81e14f11a613969" translate="yes" xml:space="preserve">
          <source>Matches zero or more characters, except '/'. Equivalent to the Perl regular expression</source>
          <target state="translated">'/'を除く0文字以上の文字にマッチします。Perl の正規表現</target>
        </trans-unit>
        <trans-unit id="6a1984e70dd40a8e14356e78cd264d97a21884d9" translate="yes" xml:space="preserve">
          <source>Matches zero or one character, except '/'. Equivalent to the Perl regular expression</source>
          <target state="translated">'/'以外の0文字または1文字にマッチします。Perl の正規表現</target>
        </trans-unit>
        <trans-unit id="5150558ec125a3f4852d898bf9fb73076c3ddf80" translate="yes" xml:space="preserve">
          <source>Matching</source>
          <target state="translated">Matching</target>
        </trans-unit>
        <trans-unit id="68a934788aa891939224fba053b378c53192480e" translate="yes" xml:space="preserve">
          <source>Matching Partial Keys</source>
          <target state="translated">部分キーのマッチング</target>
        </trans-unit>
        <trans-unit id="5fa10e5481e42bdee7f9fef5a014c3afab8e48c3" translate="yes" xml:space="preserve">
          <source>Matching Scripts and Blocks</source>
          <target state="translated">スクリプトとブロックのマッチング</target>
        </trans-unit>
        <trans-unit id="3b17040c55a83f3f4f7b152219e6e526f7ca9a2a" translate="yes" xml:space="preserve">
          <source>Matching any of several properties in regular expressions.</source>
          <target state="translated">正規表現内の複数のプロパティのいずれかにマッチします。</target>
        </trans-unit>
        <trans-unit id="deda9db8be66cd716c834c123a9cb9611817c650" translate="yes" xml:space="preserve">
          <source>Matching in list context</source>
          <target state="translated">リストコンテキストでのマッチング</target>
        </trans-unit>
        <trans-unit id="6220591a5ccdb9123634e1caf4ce8dc3384cfc2e" translate="yes" xml:space="preserve">
          <source>Matching operations can have various modifiers. Modifiers that relate to the interpretation of the regular expression inside are listed below. Modifiers that alter the way a regular expression is used by Perl are detailed in &lt;a href=&quot;perlop#Regexp-Quote-Like-Operators&quot;&gt;Regexp Quote-Like Operators in perlop&lt;/a&gt; and &lt;a href=&quot;perlop#Gory-details-of-parsing-quoted-constructs&quot;&gt;Gory details of parsing quoted constructs in perlop&lt;/a&gt;.</source>
          <target state="translated">マッチング操作にはさまざまな修飾子を含めることができます。内部の正規表現の解釈に関連する修飾子を以下に示します。正規表現はPerlので使用されている方法を変更修飾子はで詳述されて&lt;a href=&quot;perlop#Regexp-Quote-Like-Operators&quot;&gt;はperlopで正規表現の引用様演算子&lt;/a&gt;と&lt;a href=&quot;perlop#Gory-details-of-parsing-quoted-constructs&quot;&gt;はperlopで引用された構造を解析するかの詳細&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fc4353fa78241930d31f3d814bb73f45e31af0a6" translate="yes" xml:space="preserve">
          <source>Matching repetitions</source>
          <target state="translated">マッチングの繰り返し</target>
        </trans-unit>
        <trans-unit id="292a005613f8b511eb0b5b4a734aa7ff4e96c83f" translate="yes" xml:space="preserve">
          <source>Matching this or that</source>
          <target state="translated">これかこれかのマッチング</target>
        </trans-unit>
        <trans-unit id="7bedce9e99b3de1dadd0cc8345ab455769b51642" translate="yes" xml:space="preserve">
          <source>Math Library</source>
          <target state="translated">数学ライブラリ</target>
        </trans-unit>
        <trans-unit id="dbc9077ff7ea4f194a50599f69ee6ce9e49343a0" translate="yes" xml:space="preserve">
          <source>Math library</source>
          <target state="translated">数学ライブラリ</target>
        </trans-unit>
        <trans-unit id="5dde5a34dad7754b1821ed0116c07f6b3c7c4405" translate="yes" xml:space="preserve">
          <source>Math with the numbers is done (by default) by a module called</source>
          <target state="translated">数字を使った数学は(デフォルトでは)</target>
        </trans-unit>
        <trans-unit id="65a2121388185141d7f0caa9707912405aa48f4e" translate="yes" xml:space="preserve">
          <source>Math with the numbers is done (by default) by a module called &lt;code&gt;Math::BigInt::Calc&lt;/code&gt; . This is equivalent to saying:</source>
          <target state="translated">数字を使った数学は（デフォルトでは） &lt;code&gt;Math::BigInt::Calc&lt;/code&gt; と呼ばれるモジュールによって行われます。これは言うことと同じです：</target>
        </trans-unit>
        <trans-unit id="1d07c5c8a1e8adee66f831b9574d087918f9c747" translate="yes" xml:space="preserve">
          <source>Math with the numbers is done (by default) by a module called &lt;code&gt;Math::BigInt::Calc&lt;/code&gt;. This is equivalent to saying:</source>
          <target state="translated">数値を使用した計算は、（デフォルトで） &lt;code&gt;Math::BigInt::Calc&lt;/code&gt; というモジュールによって実行されます。これは、次のように言うのと同じです。</target>
        </trans-unit>
        <trans-unit id="51f99b48efcd60261390302dfaa9e7f1788ebcc0" translate="yes" xml:space="preserve">
          <source>Math with the numbers is done (by default) by a module called Math::BigInt::Calc. This is equivalent to saying:</source>
          <target state="translated">数値を使った数学は(デフォルトでは)Math::BigInt::Calcというモジュールによって行われます。と言っているのと同等です。</target>
        </trans-unit>
        <trans-unit id="a07cdeda4567e42eb8f69d272a000e41f1b29c0e" translate="yes" xml:space="preserve">
          <source>Math::BigFloat</source>
          <target state="translated">Math::BigFloat</target>
        </trans-unit>
        <trans-unit id="fe59e6f09a28dc58e14251546f9c9f1708a1bf4c" translate="yes" xml:space="preserve">
          <source>Math::BigFloat - Arbitrary size floating point math package</source>
          <target state="translated">Math::BigFloat-任意サイズの浮動小数点演算パッケージ</target>
        </trans-unit>
        <trans-unit id="0764aaf5c109cb7a50fb7de2184cafba8feab350" translate="yes" xml:space="preserve">
          <source>Math::BigFloat provides support for arbitrary precision floating point. Overloading is also provided for Perl operators.</source>
          <target state="translated">Math::BigFloat は、任意の精度の浮動小数点をサポートしています。Perl 演算子のオーバーロードも提供されています。</target>
        </trans-unit>
        <trans-unit id="d51b07374f8cf291c43bbc72e105d93bd0861cc4" translate="yes" xml:space="preserve">
          <source>Math::BigFloat supports all methods that Math::BigInt supports, except it calculates non-integer results when possible. Please see &lt;a href=&quot;Math::BigInt&quot;&gt;Math::BigInt&lt;/a&gt; for a full description of each method. Below are just the most important differences:</source>
          <target state="translated">Math :: BigFloatは、可能な場合に非整数の結果を計算することを除いて、Math :: BigIntがサポートするすべてのメソッドをサポートします。各メソッドの詳細については、&lt;a href=&quot;Math::BigInt&quot;&gt;Math :: BigInt&lt;/a&gt;を参照してください。以下は、最も重要な違いです。</target>
        </trans-unit>
        <trans-unit id="8e8c8a53ad2ae8063e325c75dd2f5dac801b81e3" translate="yes" xml:space="preserve">
          <source>Math::BigFloat supports all methods that Math::BigInt supports, except it calculates non-integer results when possible. Please see &lt;a href=&quot;bigint&quot;&gt;Math::BigInt&lt;/a&gt; for a full description of each method. Below are just the most important differences:</source>
          <target state="translated">Math :: BigFloatは、Math :: BigIntがサポートするすべてのメソッドをサポートしますが、可能な場合は整数以外の結果を計算します。各メソッドの詳細については、&lt;a href=&quot;bigint&quot;&gt;Math :: BigInt&lt;/a&gt;を参照してください。以下は最も重要な違いです：</target>
        </trans-unit>
        <trans-unit id="b207eda77e8bcb4cfdb781c992961d80a17ed622" translate="yes" xml:space="preserve">
          <source>Math::BigFloat supports both precision (rounding to a certain place before or after the dot) and accuracy (rounding to a certain number of digits). For a full documentation, examples and tips on these topics please see the large section about rounding in &lt;a href=&quot;Math::BigInt&quot;&gt;Math::BigInt&lt;/a&gt;.</source>
          <target state="translated">Math :: BigFloatは、精度（ドットの前後の特定の場所への丸め）と精度（特定の桁数への丸め）の両方をサポートします。これらのトピックに関する完全なドキュメント、例、およびヒントについては、&lt;a href=&quot;Math::BigInt&quot;&gt;Math :: BigIntの&lt;/a&gt;丸めに関する大きなセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="780bc62d9e1c2da0b867ab07361ad578cdc89952" translate="yes" xml:space="preserve">
          <source>Math::BigFloat supports both precision (rounding to a certain place before or after the dot) and accuracy (rounding to a certain number of digits). For a full documentation, examples and tips on these topics please see the large section about rounding in &lt;a href=&quot;bigint&quot;&gt;Math::BigInt&lt;/a&gt;.</source>
          <target state="translated">Math :: BigFloatは、精度（ドットの前後の特定の位置に丸める）と精度（特定の桁数に丸める）の両方をサポートしています。完全なドキュメント、これらのトピックの例とヒントについては、&lt;a href=&quot;bigint&quot;&gt;Math :: BigIntの&lt;/a&gt;丸めに関する大きなセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="7b2789f47b2fa742bffb303cb5ea1d3e3348e9f0" translate="yes" xml:space="preserve">
          <source>Math::BigInt</source>
          <target state="translated">Math::BigInt</target>
        </trans-unit>
        <trans-unit id="5c0b5ec1b926593506155ef502257108ea19865c" translate="yes" xml:space="preserve">
          <source>Math::BigInt - Arbitrary size integer/float math package</source>
          <target state="translated">Math::BigInt-任意サイズの整数/浮動小数点数の数学パッケージ</target>
        </trans-unit>
        <trans-unit id="4abcb1313f3f34175afd42fcf44f38a824ea23a7" translate="yes" xml:space="preserve">
          <source>Math::BigInt and Math::BigFloat have full support for accuracy and precision based rounding, both automatically after every operation, as well as manually.</source>
          <target state="translated">Math::BigIntとMath::BigFloatは、精度と精度に基づいた丸めを完全にサポートしています。</target>
        </trans-unit>
        <trans-unit id="e145603092e31477779f0bafc7a4914f97dc56cf" translate="yes" xml:space="preserve">
          <source>Math::BigInt provides support for arbitrary precision integers. Overloading is also provided for Perl operators.</source>
          <target state="translated">Math::BigInt は任意の精度の整数をサポートしています。Perl 演算子のオーバーロードも提供されています。</target>
        </trans-unit>
        <trans-unit id="d6c99c78464ade46f8079c42dd339841ba07d8ba" translate="yes" xml:space="preserve">
          <source>Math::BigInt::Calc</source>
          <target state="translated">Math::BigInt::Calc</target>
        </trans-unit>
        <trans-unit id="fb8a4bd98ced9e335bf9d9e0731551b00eb92084" translate="yes" xml:space="preserve">
          <source>Math::BigInt::Calc - Pure Perl module to support Math::BigInt</source>
          <target state="translated">Math::BigInt::Calc-Math::BigInt をサポートする純粋な Perl モジュール</target>
        </trans-unit>
        <trans-unit id="d0217de2885343284f5e67144b9c98117886dd87" translate="yes" xml:space="preserve">
          <source>Math::BigInt::Calc inherits from Math::BigInt::Lib.</source>
          <target state="translated">Math::BigInt::Calc は Math::BigInt::Lib を継承しています。</target>
        </trans-unit>
        <trans-unit id="83eed48c0cfaa744405df7e64a828e97c7dc018c" translate="yes" xml:space="preserve">
          <source>Math::BigInt::Calc with some XS for more speed</source>
          <target state="translated">Math::BigInt::Calc に XS を追加して高速化</target>
        </trans-unit>
        <trans-unit id="37cc8c4470bd2dc063bf4602791a5a2898c073f2" translate="yes" xml:space="preserve">
          <source>Math::BigInt::CalcEmu</source>
          <target state="translated">Math::BigInt::CalcEmu</target>
        </trans-unit>
        <trans-unit id="bd9adb285778e576dd3a1c8d47e1303fcd5d2e82" translate="yes" xml:space="preserve">
          <source>Math::BigInt::CalcEmu - Emulate low-level math with BigInt code</source>
          <target state="translated">Math::BigInt::CalcEmu-BigInt コードで低レベルの数学をエミュレートする</target>
        </trans-unit>
        <trans-unit id="a6065b7a8854e3e8b505e0d8a52c5366a086da7a" translate="yes" xml:space="preserve">
          <source>Math::BigInt::FastCalc</source>
          <target state="translated">Math::BigInt::FastCalc</target>
        </trans-unit>
        <trans-unit id="07a7add3262d9f2bcc6e971e59caaf7ebde004ed" translate="yes" xml:space="preserve">
          <source>Math::BigInt::FastCalc - Math::BigInt::Calc with some XS for more speed</source>
          <target state="translated">Math::BigInt::FastCalc-Math::BigInt::Calc に XS を追加して高速化する</target>
        </trans-unit>
        <trans-unit id="1f2ff58ab3e905796e4394ce75ed113142144b4e" translate="yes" xml:space="preserve">
          <source>Math::BigInt::FastCalc inherits from Math::BigInt::Calc.</source>
          <target state="translated">Math::BigInt::FastCalc は Math::BigInt::Calc を継承しています。</target>
        </trans-unit>
        <trans-unit id="be4788ce129ade27059132f77e1626e6603cd2ee" translate="yes" xml:space="preserve">
          <source>Math::BigInt::FastCalc works exactly like Math::BigInt::Calc. Numbers are stored in decimal form chopped into parts.</source>
          <target state="translated">Math::BigInt::FastCalc は Math::BigInt::Calc と全く同じように動作します。数値は10進数で保存され、部分的に切り刻まれます。</target>
        </trans-unit>
        <trans-unit id="81bb13328947ab5168b53e9d6a7a4bf1b2e650dc" translate="yes" xml:space="preserve">
          <source>Math::BigInt::Lib</source>
          <target state="translated">Math::BigInt::Lib</target>
        </trans-unit>
        <trans-unit id="1048528123aeb8d39ba7c3b96a0179eac5a9dc21" translate="yes" xml:space="preserve">
          <source>Math::BigInt::Lib - virtual parent class for Math::BigInt libraries</source>
          <target state="translated">Math::BigInt::Lib-Math::BigInt ライブラリの仮想親クラス</target>
        </trans-unit>
        <trans-unit id="4b2aca3f9cc0a116b76f8d86d32d03b2be17c352" translate="yes" xml:space="preserve">
          <source>Math::BigRat</source>
          <target state="translated">Math::BigRat</target>
        </trans-unit>
        <trans-unit id="ac918a8052350ca0ef4432d06915fcf97fe7f4ff" translate="yes" xml:space="preserve">
          <source>Math::BigRat - Arbitrary big rational numbers</source>
          <target state="translated">Math::BigRat-任意の大きな有理数</target>
        </trans-unit>
        <trans-unit id="5a51ed6183023c12205f7010c9031e0ea41bd8ab" translate="yes" xml:space="preserve">
          <source>Math::BigRat complements Math::BigInt and Math::BigFloat by providing support for arbitrary big rational numbers.</source>
          <target state="translated">Math::BigRat は、任意の大きな有理数のサポートを提供することで Math::BigInt と Math::BigFloat を補完します。</target>
        </trans-unit>
        <trans-unit id="c80a28032631e0b53fe6cfb473619c4706043d3a" translate="yes" xml:space="preserve">
          <source>Math::Complex</source>
          <target state="translated">Math::Complex</target>
        </trans-unit>
        <trans-unit id="33bb8bb129e5a0d683c736bb8619d7d51a89c445" translate="yes" xml:space="preserve">
          <source>Math::Complex - complex numbers and associated mathematical functions</source>
          <target state="translated">数学::複素数-複素数と関連する数学関数</target>
        </trans-unit>
        <trans-unit id="1e616d3d033099b786d6a5348898f4e4eaaef6c6" translate="yes" xml:space="preserve">
          <source>Math::Trig</source>
          <target state="translated">Math::Trig</target>
        </trans-unit>
        <trans-unit id="c69768dcbf705d5dd806188830336370c242165f" translate="yes" xml:space="preserve">
          <source>Math::Trig - trigonometric functions</source>
          <target state="translated">Math::Trig-三角関数</target>
        </trans-unit>
        <trans-unit id="1c3decdb38e1f19ad133e95ff4746595003c9925" translate="yes" xml:space="preserve">
          <source>Mathemagic, Mutators, and Copy Constructors</source>
          <target state="translated">マテマジック、ミューテータ、コピーコンストラクタ</target>
        </trans-unit>
        <trans-unit id="8edc9ac7baa876487a18001d1e0613039a5fb80e" translate="yes" xml:space="preserve">
          <source>Mathematical functions</source>
          <target state="translated">数理関数</target>
        </trans-unit>
        <trans-unit id="418773dca64d526cfea9242d86f08af7459acfc2" translate="yes" xml:space="preserve">
          <source>Mathematical jargon for a list of &lt;b&gt;scalar values&lt;/b&gt;.</source>
          <target state="translated">&lt;b&gt;スカラー値の&lt;/b&gt;リストの数学的専門用語。</target>
        </trans-unit>
        <trans-unit id="aa8961350eea449561e0373a262893039189bac1" translate="yes" xml:space="preserve">
          <source>Mathematically, a mapping of each of a set of input values to a particular output value. In computers, refers to a &lt;b&gt;subroutine&lt;/b&gt; or &lt;b&gt;operator&lt;/b&gt; that returns a &lt;b&gt;value&lt;/b&gt;. It may or may not have input values (called &lt;b&gt;arguments&lt;/b&gt;).</source>
          <target state="translated">数学的には、一連の入力値のそれぞれの特定の出力値へのマッピング。コンピュータでは、&lt;b&gt;値&lt;/b&gt;を返す&lt;b&gt;サブルーチン&lt;/b&gt;または&lt;b&gt;演算子&lt;/b&gt;を指し&lt;b&gt;ます&lt;/b&gt;。入力値（&lt;b&gt;引数&lt;/b&gt;と呼ばれる）がある場合とない場合があります。</target>
        </trans-unit>
        <trans-unit id="58227b459a1ed9747b8ae17f0db465ba9897bda0" translate="yes" xml:space="preserve">
          <source>Matt Kraai</source>
          <target state="translated">マット・クライ</target>
        </trans-unit>
        <trans-unit id="3b9691065df69a421dca45239b2430dd14f8c4f5" translate="yes" xml:space="preserve">
          <source>Matt S Trout &amp;lt;mst@shadowcat.co.uk&amp;gt;</source>
          <target state="translated">マットSトラウト&amp;lt;mst@shadowcat.co.uk&amp;gt;</target>
        </trans-unit>
        <trans-unit id="08452ede2be309e7d15ec8e7c08c3981bd4285e0" translate="yes" xml:space="preserve">
          <source>Matt Sergeant, matt@sergeant.org</source>
          <target state="translated">Matt Sergeant,matt@sergeant.org</target>
        </trans-unit>
        <trans-unit id="667478bd6904915672e26b2134308dabeb1c00d5" translate="yes" xml:space="preserve">
          <source>Matt Sergeant, matt@sergeant.org Jarkko Hietaniemi, jhi@iki.fi (while creating Time::Piece for core perl)</source>
          <target state="translated">Matt Sergeant,matt@sergeant.org Jarkko Hietaniemi,jhi@iki.fi (コアperl用のTime::Pieceを作成中)</target>
        </trans-unit>
        <trans-unit id="a5b0f4aadc0e2c80f215b9e66188372b0c8b6032" translate="yes" xml:space="preserve">
          <source>Max Maischein &lt;code&gt; corion@cpan.org &lt;/code&gt;</source>
          <target state="translated">Max Maischein &lt;code&gt; corion@cpan.org &lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cfb7aa9e8b9c834788a3aa7abbda0d104b6ff028" translate="yes" xml:space="preserve">
          <source>Max. codesize limited to 32-bit</source>
          <target state="translated">最大コードサイズは32ビットに制限されています。</target>
        </trans-unit>
        <trans-unit id="2bc25b9c27334b35a5cb78bdecefd32cc568034e" translate="yes" xml:space="preserve">
          <source>Maximal count of pending signals (%u) exceeded</source>
          <target state="translated">保留中の信号の最大カウント数 (%u)を超えました。</target>
        </trans-unit>
        <trans-unit id="c6400e7876545feb6ada4a737cb20190ee5f945e" translate="yes" xml:space="preserve">
          <source>Maximize version number.</source>
          <target state="translated">バージョン番号を最大化します。</target>
        </trans-unit>
        <trans-unit id="2bc823b3979073e6178e0296c0aebc017c151728" translate="yes" xml:space="preserve">
          <source>Maximum of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/y&quot;&gt;y&lt;/a&gt;&lt;/code&gt;, except when either is &lt;code&gt;NaN&lt;/code&gt; , returns the other [C99].</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;functions/y&quot;&gt;y&lt;/a&gt;&lt;/code&gt; の最大値は、どちらかが &lt;code&gt;NaN&lt;/code&gt; の場合を除いて、もう一方を返します[C99]。</target>
        </trans-unit>
        <trans-unit id="e12ab395f246967e38c39d0164a8a0da4c633fb6" translate="yes" xml:space="preserve">
          <source>Maximum of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;, except when either is &lt;code&gt;NaN&lt;/code&gt;, returns the other [C99].</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; と &lt;code&gt;y&lt;/code&gt; の最大値は、どちらかが &lt;code&gt;NaN&lt;/code&gt; の場合を除いて、もう一方の[C99]を返します。</target>
        </trans-unit>
        <trans-unit id="d9d1027058fd884db456494cfd72c7b066e0129a" translate="yes" xml:space="preserve">
          <source>Maximum record size</source>
          <target state="translated">最大レコードサイズ</target>
        </trans-unit>
        <trans-unit id="271672ee5b929c229ec830e1084ec7061feed01f" translate="yes" xml:space="preserve">
          <source>Maximum requirements are inclusive. No version strictly greater than the given version is allowed.</source>
          <target state="translated">最大要件は包括的なものです。厳密には与えられたバージョンを超えるバージョンは認められません。</target>
        </trans-unit>
        <trans-unit id="650306b9428b07712d05d5e699489f15d25896b7" translate="yes" xml:space="preserve">
          <source>May 2003</source>
          <target state="translated">2003年5月</target>
        </trans-unit>
        <trans-unit id="8d8f71838e536df93422bf7418bcffe308e1974e" translate="yes" xml:space="preserve">
          <source>May 8, 2003</source>
          <target state="translated">2003年5月8日</target>
        </trans-unit>
        <trans-unit id="afc54fe3511cd56aa93944ccd6c2072e2ca51d94" translate="yes" xml:space="preserve">
          <source>May also be called as a</source>
          <target state="translated">と呼ばれることもあります。</target>
        </trans-unit>
        <trans-unit id="76be650e3300b2492c54955a124602e50e04fd33" translate="yes" xml:space="preserve">
          <source>May be called as a class method</source>
          <target state="translated">クラスメソッドとして呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="373dacfb6afd2988bb2976a418753e29f34aa9dd" translate="yes" xml:space="preserve">
          <source>May be interrupted if the process receives a signal such as &lt;code&gt;SIGALRM&lt;/code&gt; .</source>
          <target state="translated">プロセスが &lt;code&gt;SIGALRM&lt;/code&gt; などのシグナルを受信すると、中断される場合があります。</target>
        </trans-unit>
        <trans-unit id="62f3ade73a821f1ea24a0f8d795c26cf1e6ce565" translate="yes" xml:space="preserve">
          <source>May be interrupted if the process receives a signal such as &lt;code&gt;SIGALRM&lt;/code&gt;.</source>
          <target state="translated">プロセスが &lt;code&gt;SIGALRM&lt;/code&gt; などのシグナルを受信すると、中断される可能性があります。</target>
        </trans-unit>
        <trans-unit id="2230ed94de04068bc4c024644ecc248cb32a6f12" translate="yes" xml:space="preserve">
          <source>May be set to &lt;code&gt;-protoypes&lt;/code&gt; , &lt;code&gt;-noprototypes&lt;/code&gt; or the empty string. The empty string is equivalent to the xsubpp default, or &lt;code&gt;-noprototypes&lt;/code&gt; . See the xsubpp documentation for details. MakeMaker defaults to the empty string.</source>
          <target state="translated">&lt;code&gt;-protoypes&lt;/code&gt; 、 &lt;code&gt;-noprototypes&lt;/code&gt; または空の文字列に設定できます。空の文字列は、xsubppのデフォルトまたは &lt;code&gt;-noprototypes&lt;/code&gt; と同等です。詳細については、xsubppのドキュメントを参照してください。MakeMakerのデフォルトは空の文字列です。</target>
        </trans-unit>
        <trans-unit id="7fbcb527743fae7057a349e19014df074468e03d" translate="yes" xml:space="preserve">
          <source>May be set to &lt;code&gt;-protoypes&lt;/code&gt;, &lt;code&gt;-noprototypes&lt;/code&gt; or the empty string. The empty string is equivalent to the xsubpp default, or &lt;code&gt;-noprototypes&lt;/code&gt;. See the xsubpp documentation for details. MakeMaker defaults to the empty string.</source>
          <target state="translated">&lt;code&gt;-protoypes&lt;/code&gt; 、 &lt;code&gt;-noprototypes&lt;/code&gt; 、または空の文字列に設定できます。空の文字列は、xsubppのデフォルトまたは &lt;code&gt;-noprototypes&lt;/code&gt; と同等です。詳細については、xsubppのドキュメントを参照してください。MakeMakerのデフォルトは空の文字列です。</target>
        </trans-unit>
        <trans-unit id="61bbde05c6ed2bdfce6b99696af957752900542f" translate="yes" xml:space="preserve">
          <source>May be used to disable a filter, but is rarely needed. See &lt;a href=&quot;filter_del&quot;&gt;filter_del&lt;/a&gt;.</source>
          <target state="translated">フィルタを無効にするために使用できますが、必要になることはめったにありません。&lt;a href=&quot;filter_del&quot;&gt;filter_delを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="1d4efb207d6eec8eaeb59feea09701cb59c03617" translate="yes" xml:space="preserve">
          <source>May be used with -d to modify the first release criteria.</source>
          <target state="translated">最初のリリース基準を変更するために -d と一緒に使用することができます。</target>
        </trans-unit>
        <trans-unit id="f8aed58dc1a5779f9d540d01df5f9836265ac5aa" translate="yes" xml:space="preserve">
          <source>May not be available if library or source was not provided when building perl. (Win32)</source>
          <target state="translated">perlをビルドする際にライブラリやソースが提供されていない場合、利用できない可能性があります。(Win32)</target>
        </trans-unit>
        <trans-unit id="21d4e632642238bf57dcc94af3549a614c826f30" translate="yes" xml:space="preserve">
          <source>May not behave as expected. Behavior depends on the C runtime library's implementation of &lt;code&gt;&lt;a href=&quot;functions/utime&quot;&gt;utime()&lt;/a&gt;&lt;/code&gt;, and the filesystem being used. The FAT filesystem typically does not support an &quot;access time&quot; field, and it may limit timestamps to a granularity of two seconds. (Win32)</source>
          <target state="translated">期待どおりに動作しない可能性があります。動作は、Cランタイムライブラリの &lt;code&gt;&lt;a href=&quot;functions/utime&quot;&gt;utime()&lt;/a&gt;&lt;/code&gt; の実装、および使用されているファイルシステムによって異なります。FATファイルシステムは通常「アクセス時間」フィールドをサポートせず、タイムスタンプを2秒の粒度に制限する場合があります。（Win32）</target>
        </trans-unit>
        <trans-unit id="55f01979402408f498d72bc9013d9ad19e4f0e16" translate="yes" xml:space="preserve">
          <source>May take extra time to study SCALAR (&lt;code&gt;$_&lt;/code&gt; if unspecified) in anticipation of doing many pattern matches on the string before it is next modified. This may or may not save time, depending on the nature and number of patterns you are searching and the distribution of character frequencies in the string to be searched; you probably want to compare run times with and without it to see which is faster. Those loops that scan for many short constant strings (including the constant parts of more complex patterns) will benefit most.</source>
          <target state="translated">次に変更される前に文字列に対して多くのパターン一致を行うことを見込んで、SCALAR（指定されていない場合は &lt;code&gt;$_&lt;/code&gt; ）を調査するために余分な時間がかかる場合があります。これは、検索するパターンの性質と数、および検索される文字列の文字頻度の分布に応じて、時間を節約できる場合とそうでない場合があります。実行時間を比較して、実行時間を比較して、どちらが速いかを確認する必要があります。多くの短い定数文字列（より複雑なパターンの定数部分を含む）をスキャンするループは、最も効果的です。</target>
        </trans-unit>
        <trans-unit id="5740917ad4ecd92dc69b592bee2c126f65bf64cc" translate="yes" xml:space="preserve">
          <source>Maybe an autolocking mode?</source>
          <target state="translated">オートロックモードかな?</target>
        </trans-unit>
        <trans-unit id="17baa904576f5c89cb04e825ade31958aeaa5cd3" translate="yes" xml:space="preserve">
          <source>Maybe simply that your function did not need to be exported in the first place. Perl has a long and not so glorious history of exporting functions that it should not have.</source>
          <target state="translated">もしかしたら、あなたの関数はそもそもエクスポートする必要がなかったのかもしれません。Perlには、エクスポートすべきではない関数をエクスポートしてきた長い歴史があります。</target>
        </trans-unit>
        <trans-unit id="0e936eae5362c54e4c8af6287c324b783d9e5c3e" translate="yes" xml:space="preserve">
          <source>McAfee Guardian</source>
          <target state="translated">マカフィーガーディアン</target>
        </trans-unit>
        <trans-unit id="cde7070dd55ab5fad4aecced0aebd3d04e8674c3" translate="yes" xml:space="preserve">
          <source>Meaningless. (RISC OS)</source>
          <target state="translated">意味がない。(RISC OS)</target>
        </trans-unit>
        <trans-unit id="64570578bb629125c651aed9b004e56379071150" translate="yes" xml:space="preserve">
          <source>Means that the optimizer information is all that the regular expression contains, and thus one does not need to enter the regex engine at all.</source>
          <target state="translated">つまり、オプティマイザの情報は正規表現に含まれるすべての情報であり、正規表現エンジンを入力する必要がないということです。</target>
        </trans-unit>
        <trans-unit id="5c65173ed0ec89e479fa09fd6c0c7e73dddb4a5c" translate="yes" xml:space="preserve">
          <source>Means you can still run your old program because we didn&amp;rsquo;t break any of the features or bugs it was relying on.</source>
          <target state="translated">依存している機能やバグを壊さなかったため、古いプログラムを引き続き実行できることを意味します。</target>
        </trans-unit>
        <trans-unit id="2c883ddc8815110562192710c7cee3da6f78c83a" translate="yes" xml:space="preserve">
          <source>Means you don&amp;rsquo;t have to pay money to get it, but the copyright on it may still belong to someone else (like Larry).</source>
          <target state="translated">それを手に入れるためにお金を払う必要がないことを意味しますが、その上の著作権はまだ他の誰か（ラリーのような）に属しているかもしれません。</target>
        </trans-unit>
        <trans-unit id="bbf0f10f278f2fd9b8fbb27cda2cf259516fe6e6" translate="yes" xml:space="preserve">
          <source>Means you&amp;rsquo;re not in legal trouble if you give a bootleg copy of it to your friends and we find out about it. In fact, we&amp;rsquo;d rather you gave a copy to all your friends.</source>
          <target state="translated">偽造品のコピーを友達に渡して私たちがそれを見つけた場合、法的な問題ではないことを意味します。実際、私たちはあなたがすべての友達にコピーを渡したほうがいいです。</target>
        </trans-unit>
        <trans-unit id="b4f338c26fdb57033fabc6dbb73636186214a368" translate="yes" xml:space="preserve">
          <source>Meanwhile in script.pl:</source>
          <target state="translated">一方、script.plでは</target>
        </trans-unit>
        <trans-unit id="e31c01e90d9e8d19ca2313d7b406547f59ae64e3" translate="yes" xml:space="preserve">
          <source>Meanwhile, back in the main thread, we first create a queue (line 33) and queue up all the numbers from 3 to 1000 for checking, plus a termination notice. Then all we have to do to get the ball rolling is pass the queue and the first prime to the &lt;code&gt;check_num()&lt;/code&gt; subroutine (line 34).</source>
          <target state="translated">一方、メインスレッドに戻って、まずキュー（33行目）を作成し、チェックのために3から1000までのすべての数値と終了通知をキューに入れます。次に、ボールを回転させるために必要なのは、キューと最初の素数を &lt;code&gt;check_num()&lt;/code&gt; サブルーチンに渡すことです（行34）。</target>
        </trans-unit>
        <trans-unit id="8aa7bb99b5f3a119fade7cc10eb9fede5a084e8b" translate="yes" xml:space="preserve">
          <source>Meanwhile, special identifiers don't follow the above rules; For the most part, all of the identifiers in this category have a special meaning given by Perl. Because they have special parsing rules, these generally can't be fully-qualified. They come in four forms:</source>
          <target state="translated">一方、特殊な識別子は上記のルールには従いません。 ほとんどの場合、このカテゴリに含まれるすべての識別子は Perl によって与えられた特別な意味を持っています。これらの識別子は特殊な解析ルールを持っているため、 一般的には完全に修飾することはできません。識別子には四つの形式があります。</target>
        </trans-unit>
        <trans-unit id="01b22c5ba29e5ca443c76b69d7a2fdd28452d640" translate="yes" xml:space="preserve">
          <source>Meanwhile, special identifiers don't follow the above rules; For the most part, all of the identifiers in this category have a special meaning given by Perl. Because they have special parsing rules, these generally can't be fully-qualified. They come in six forms (but don't use forms 5 and 6):</source>
          <target state="translated">一方、特殊な識別子は上記のルールには従いません。 ほとんどの場合、このカテゴリに含まれるすべての識別子は Perl によって与えられた特別な意味を持っています。これらの識別子は特殊な解析ルールを持っているため、一般的には完全修飾することはできません。識別子には 6 つの形式があります (ただし、5 と 6 は使用しないでください)。</target>
        </trans-unit>
        <trans-unit id="83a5148d83732e363f572eb9f62ae4a34ffe78f8" translate="yes" xml:space="preserve">
          <source>Mechanisms are available to help modules writers split their modules into autoloadable files. See the standard AutoLoader module described in &lt;a href=&quot;autoloader&quot;&gt;AutoLoader&lt;/a&gt; and in &lt;a href=&quot;autosplit&quot;&gt;AutoSplit&lt;/a&gt;, the standard SelfLoader modules in &lt;a href=&quot;selfloader&quot;&gt;SelfLoader&lt;/a&gt;, and the document on adding C functions to Perl code in &lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt;.</source>
          <target state="translated">モジュール作成者がモジュールをオートロード可能なファイルに分割するのに役立つメカニズムを利用できます。記載されている標準オートローダーモジュール参照&lt;a href=&quot;autoloader&quot;&gt;オートローダー&lt;/a&gt;とで&lt;a href=&quot;autosplit&quot;&gt;自動split&lt;/a&gt;、内標準のSelfLoaderモジュール&lt;a href=&quot;selfloader&quot;&gt;のSelfLoader&lt;/a&gt;でPerlコードにC関数を追加する、文書を&lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f8b192f4447d1edc034616ab7c4aca49390dec0c" translate="yes" xml:space="preserve">
          <source>Memoization is not a cure-all:</source>
          <target state="translated">メモ化は万能ではありません。</target>
        </trans-unit>
        <trans-unit id="e35c7de9275e303103a9cca4277120ada2fcee2d" translate="yes" xml:space="preserve">
          <source>Memoization is not magical.</source>
          <target state="translated">メモ化は魔法ではありません。</target>
        </trans-unit>
        <trans-unit id="6f890b039269df17d39e9aef284c419ab8ca6d7a" translate="yes" xml:space="preserve">
          <source>Memoize</source>
          <target state="translated">Memoize</target>
        </trans-unit>
        <trans-unit id="5f81d99ecb62730206abe574a7c1d1cbed900a6f" translate="yes" xml:space="preserve">
          <source>Memoize - Make functions faster by trading space for time</source>
          <target state="translated">Memoize-時間と空間をトレードして機能を高速化する</target>
        </trans-unit>
        <trans-unit id="843238e6a586f32a34512ff5be6c4efe5893f4d3" translate="yes" xml:space="preserve">
          <source>Memoize would then call &lt;code&gt;function&lt;/code&gt; whenever a cached value was entirely absent or was older than ten seconds.</source>
          <target state="translated">その後、Memoizeは、キャッシュされた値がまったく存在しないか、10秒よりも古い場合に &lt;code&gt;function&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="029c7227d55a1555d4ad9945591262ad934bfa62" translate="yes" xml:space="preserve">
          <source>Memoize::AnyDBM_File</source>
          <target state="translated">Memoize::AnyDBM_File</target>
        </trans-unit>
        <trans-unit id="f7222db52a03e50045b47cd151cf03999d99b842" translate="yes" xml:space="preserve">
          <source>Memoize::AnyDBM_File - glue to provide EXISTS for AnyDBM_File for Storable use</source>
          <target state="translated">Memoize::AnyDBM_File-AnyDBM_File 用の EXISTS を保存可能な状態で提供するためのグルー</target>
        </trans-unit>
        <trans-unit id="ab0d35e554a3be52fed5431a1db1dc0af18b1554" translate="yes" xml:space="preserve">
          <source>Memoize::Expire</source>
          <target state="translated">Memoize::Expire</target>
        </trans-unit>
        <trans-unit id="68da8c7a0efad73320d46b4b430e0877571aa887" translate="yes" xml:space="preserve">
          <source>Memoize::Expire - Plug-in module for automatic expiration of memoized values</source>
          <target state="translated">Memoize::Expire-メモされた値を自動的に期限切れにするプラグインモジュール</target>
        </trans-unit>
        <trans-unit id="0361cce2dcbb0a8d3953fc3f935563867ef2d797" translate="yes" xml:space="preserve">
          <source>Memoize::Expire is a layer of software that you can insert in between Memoize itself and whatever underlying package implements the cache. The layer presents a hash variable whose values expire whenever they get too old, have been used too often, or both. You tell &lt;code&gt;Memoize&lt;/code&gt; to use this forgetful hash as its cache instead of the default, which is an ordinary hash.</source>
          <target state="translated">Memoize :: Expireは、Memoize自体と基盤となるパッケージがキャッシュを実装するものの間に挿入できるソフトウェアのレイヤーです。層はハッシュ変数を提示し、その値は古くなるか、頻繁に使用されるか、またはその両方になるたびに期限切れになります。通常のハッシュであるデフォルトではなく、この忘れっぽいハッシュをキャッシュとして使用するように &lt;code&gt;Memoize&lt;/code&gt; に指示します。</target>
        </trans-unit>
        <trans-unit id="5ce5e44b5b097a389f35898a0295eae63ccf4c6e" translate="yes" xml:space="preserve">
          <source>Memoize::Expire is a plug-in module for Memoize. It allows the cached values for memoized functions to expire automatically. This manual assumes you are already familiar with the Memoize module. If not, you should study that manual carefully first, paying particular attention to the HASH feature.</source>
          <target state="translated">Memoize::ExpireはMemoizeのプラグインモジュールです。メモされた関数のキャッシュされた値を自動的に期限切れにすることができます。このマニュアルでは、Memoizeモジュールをすでに理解していることを前提としています。そうでない場合は、まずそのマニュアルをよく読んで、特にHASH機能に注意してください。</target>
        </trans-unit>
        <trans-unit id="058ef175eeea79174423065d5def30710bbd9b3d" translate="yes" xml:space="preserve">
          <source>Memoize::Expire uses a real hash internally to store the cached data. You can use the &lt;code&gt;HASH&lt;/code&gt; option to Memoize::Expire to supply a tied hash in place of the ordinary hash that Memoize::Expire will normally use. You can use this feature to add Memoize::Expire as a layer in between a persistent disk hash and Memoize. If you do this, you get a persistent disk cache whose entries expire automatically. For example:</source>
          <target state="translated">Memoize :: Expireは、内部で実際のハッシュを使用して、キャッシュされたデータを格納します。あなたは使用することができます &lt;code&gt;HASH&lt;/code&gt; の Memoizeにオプションを:: Memoize ::期限切れが正常に使用することが通常のハッシュの代わりに結ばれたハッシュを供給するために期限切れ。この機能を使用して、永続ディスクハッシュとメモ化の間にレイヤーとしてMemoize :: Expireを追加できます。これを行うと、エントリが自動的に期限切れになる永続ディスクキャッシュを取得します。例えば：</target>
        </trans-unit>
        <trans-unit id="d269b32ccc7d9c3a39d79c1bc38b7d11bdeedce9" translate="yes" xml:space="preserve">
          <source>Memoize::ExpireFile</source>
          <target state="translated">Memoize::ExpireFile</target>
        </trans-unit>
        <trans-unit id="832a8b2c800fc41add4efb073f8dd0755c8d611b" translate="yes" xml:space="preserve">
          <source>Memoize::ExpireFile - test for Memoize expiration semantics</source>
          <target state="translated">Memoize::ExpireFile-Memoize の期限切れセマンティクスをテストする</target>
        </trans-unit>
        <trans-unit id="cfe63b7749d0c4b0ed459ed8a03537e27ee0964b" translate="yes" xml:space="preserve">
          <source>Memoize::ExpireTest</source>
          <target state="translated">Memoize::ExpireTest</target>
        </trans-unit>
        <trans-unit id="39f28a417ca2b739bec2a2c936fff15da4323299" translate="yes" xml:space="preserve">
          <source>Memoize::ExpireTest - test for Memoize expiration semantics</source>
          <target state="translated">Memoize::ExpireTest-Memoize の有効期限のセマンティクスをテストする</target>
        </trans-unit>
        <trans-unit id="76efc803a2cb3f46d2d6c0879436aa10ce1458f5" translate="yes" xml:space="preserve">
          <source>Memoize::NDBM_File</source>
          <target state="translated">Memoize::NDBM_File</target>
        </trans-unit>
        <trans-unit id="746b4220ae70f33c450a28158673789c9a546fde" translate="yes" xml:space="preserve">
          <source>Memoize::NDBM_File - glue to provide EXISTS for NDBM_File for Storable use</source>
          <target state="translated">Memoize::NDBM_File-NDBM_File に保存可能な EXISTS を提供するためのグルー</target>
        </trans-unit>
        <trans-unit id="fd4bdbba9a5e54216d1795015c434a21a9711f86" translate="yes" xml:space="preserve">
          <source>Memoize::SDBM_File</source>
          <target state="translated">Memoize::SDBM_File</target>
        </trans-unit>
        <trans-unit id="da914c13c14b27bc717bfbef4040f10310d95a2d" translate="yes" xml:space="preserve">
          <source>Memoize::SDBM_File - glue to provide EXISTS for SDBM_File for Storable use</source>
          <target state="translated">Memoize::SDBM_File-SDBM_File 用の EXISTS を保存可能な状態で提供するためのグルー</target>
        </trans-unit>
        <trans-unit id="21eebbc5fdb9d06943ca49fe99d3577c31994277" translate="yes" xml:space="preserve">
          <source>Memoize::Storable</source>
          <target state="translated">Memoize::Storable</target>
        </trans-unit>
        <trans-unit id="38149e962712243ad8d3efeb22a8323aef23996c" translate="yes" xml:space="preserve">
          <source>Memoize::Storable - store Memoized data in Storable database</source>
          <target state="translated">Memoize::Storable-メモされたデータを Storable データベースに保存する</target>
        </trans-unit>
        <trans-unit id="89c8a2851d1755cf87365b4a7c55e5551cf878c6" translate="yes" xml:space="preserve">
          <source>Memory</source>
          <target state="translated">Memory</target>
        </trans-unit>
        <trans-unit id="38b88ba291aedc801f0cf1ace141ae388b9947cc" translate="yes" xml:space="preserve">
          <source>Memory Allocation</source>
          <target state="translated">メモリの割り当て</target>
        </trans-unit>
        <trans-unit id="e0efdce50032a40b3a3914e5fc8bfa6cd4288bb5" translate="yes" xml:space="preserve">
          <source>Memory Management</source>
          <target state="translated">メモリ管理</target>
        </trans-unit>
        <trans-unit id="08cfd5338de5adae5d3a77de3eba507e6e489994" translate="yes" xml:space="preserve">
          <source>Memory Management and String Handling</source>
          <target state="translated">メモリ管理と文字列処理</target>
        </trans-unit>
        <trans-unit id="c9a7ab7f07e403c0ae91c30f84e4c67c80a6e037" translate="yes" xml:space="preserve">
          <source>Memory allocated by external libraries is not counted.</source>
          <target state="translated">外部ライブラリで割り当てられたメモリはカウントされません。</target>
        </trans-unit>
        <trans-unit id="b61b70edbe3a97caa2ecb5ac100b7aca209a1cba" translate="yes" xml:space="preserve">
          <source>Memory allocation</source>
          <target state="translated">メモリの割り当て</target>
        </trans-unit>
        <trans-unit id="ab42bb6faf1372452bd96901de22f5faa6ef497c" translate="yes" xml:space="preserve">
          <source>Memory consumption</source>
          <target state="translated">メモリ消費量</target>
        </trans-unit>
        <trans-unit id="14ff314163f3b5b04d3fe92dafa744f973c3e836" translate="yes" xml:space="preserve">
          <source>Memory footprint debugging</source>
          <target state="translated">メモリフットプリントのデバッグ</target>
        </trans-unit>
        <trans-unit id="f7c5b8ee1bf3d6c206de6c158ee1895b1a26d8cc" translate="yes" xml:space="preserve">
          <source>Memory logging is somewhat similar to &lt;code&gt;-Dm&lt;/code&gt; but is independent of &lt;code&gt;-DDEBUGGING&lt;/code&gt; , and at a higher level; all uses of Newx(), Renew(), and Safefree() are logged with the caller's source code file and line number (and C function name, if supported by the C compiler). In contrast, &lt;code&gt;-Dm&lt;/code&gt; is directly at the point of &lt;code&gt;malloc()&lt;/code&gt; . SV logging is similar.</source>
          <target state="translated">メモリロギングは幾分似ている &lt;code&gt;-Dm&lt;/code&gt; しかしとは無関係である &lt;code&gt;-DDEBUGGING&lt;/code&gt; 、より高いレベルで。Newx（）、Renew（）、およびSafefree（）のすべての使用は、呼び出し元のソースコードファイルと行番号（およびCコンパイラでサポートされている場合はC関数名）でログに記録されます。対照的に、 &lt;code&gt;-Dm&lt;/code&gt; は直接 &lt;code&gt;malloc()&lt;/code&gt; のポイントにあります。SVロギングも同様です。</target>
        </trans-unit>
        <trans-unit id="7916d3e59a9fde6fdcb6cfdf74b28bd45e1783e8" translate="yes" xml:space="preserve">
          <source>Memory logging is somewhat similar to &lt;code&gt;-Dm&lt;/code&gt; but is independent of &lt;code&gt;-DDEBUGGING&lt;/code&gt;, and at a higher level; all uses of Newx(), Renew(), and Safefree() are logged with the caller's source code file and line number (and C function name, if supported by the C compiler). In contrast, &lt;code&gt;-Dm&lt;/code&gt; is directly at the point of &lt;code&gt;malloc()&lt;/code&gt;. SV logging is similar.</source>
          <target state="translated">メモリロギングは幾分似ている &lt;code&gt;-Dm&lt;/code&gt; しかしとは無関係である &lt;code&gt;-DDEBUGGING&lt;/code&gt; 、より高いレベルで。Newx（）、Renew（）、およびSafefree（）のすべての使用は、呼び出し元のソースコードファイルと行番号（およびCコンパイラでサポートされている場合はC関数名）とともにログに記録されます。対照的に、 &lt;code&gt;-Dm&lt;/code&gt; は &lt;code&gt;malloc()&lt;/code&gt; のポイントに直接あります。SVロギングも同様です。</target>
        </trans-unit>
        <trans-unit id="4c2c814c19b69f35d9db7c2c6ebf3d08f352fd38" translate="yes" xml:space="preserve">
          <source>Memory mapped IO</source>
          <target state="translated">メモリマップされたIO</target>
        </trans-unit>
        <trans-unit id="6c6a6deece93cee8a3277158bc8df3a089d2c6dd" translate="yes" xml:space="preserve">
          <source>Memory obtained by this should &lt;b&gt;ONLY&lt;/b&gt; be freed with &lt;a href=&quot;#Safefree&quot;&gt;&quot;Safefree&quot;&lt;/a&gt;.</source>
          <target state="translated">これによって取得されたメモリは、&lt;a href=&quot;#Safefree&quot;&gt;「Safefree」&lt;/a&gt;で&lt;b&gt;のみ&lt;/b&gt;解放する必要があります。</target>
        </trans-unit>
        <trans-unit id="26466bc4a0a5892915da9639400d4d78c9148962" translate="yes" xml:space="preserve">
          <source>Memory obtained by this should &lt;b&gt;ONLY&lt;/b&gt; be freed with &lt;a href=&quot;#Safefree&quot;&gt;Safefree&lt;/a&gt;.</source>
          <target state="translated">これによって取得されたメモリは&lt;a href=&quot;#Safefree&quot;&gt;Safefreeで&lt;/a&gt;&lt;b&gt;のみ&lt;/b&gt;解放されるべきです。</target>
        </trans-unit>
        <trans-unit id="c13fdc13d6ff4f45a77804ad2cceb15673c95db3" translate="yes" xml:space="preserve">
          <source>Mercifully, most localization tasks are a matter of finding ways to translate whole phrases, generally sentences, where the context is relatively set, and where the only variation in content is</source>
          <target state="translated">幸いなことに、ほとんどのローカリゼーションタスクは、文脈が比較的決まっていて、内容の違いだけがある場合に、フレーズ全体、一般的には文章を翻訳する方法を見つけることです。</target>
        </trans-unit>
        <trans-unit id="2a5792cd53fd5c07c6e156f110cc9bdc59c69569" translate="yes" xml:space="preserve">
          <source>Mercifully, this design decision becomes crucial only in the hairiest of inflected languages, of which Russian is by no means the</source>
          <target state="translated">このデザインの決定が重要になるのは、髪の毛の多い屈折した言語の場合だけです。</target>
        </trans-unit>
        <trans-unit id="a19110119cfc0a6eeba94dd28976c27677eeeaf2" translate="yes" xml:space="preserve">
          <source>Merge all &lt;code&gt;@fragments&lt;/code&gt; together. It will accept both CPAN::Meta objects and (possibly incomplete) hashrefs of metadata.</source>
          <target state="translated">すべての &lt;code&gt;@fragments&lt;/code&gt; をマージします。CPAN :: Metaオブジェクトと（おそらく不完全な）メタデータのハッシュ参照の両方を受け入れます。</target>
        </trans-unit>
        <trans-unit id="8b83c2b2bc6eb3815752c6b70aceb628db5830bb" translate="yes" xml:space="preserve">
          <source>Merged disk caches</source>
          <target state="translated">マージドディスクキャッシュ</target>
        </trans-unit>
        <trans-unit id="3bf6a951ac9a11e06dc7c59a3e9100f420a4948a" translate="yes" xml:space="preserve">
          <source>Merges a given typemap into the object. Note that a failed merge operation leaves the object in an inconsistent state so clone it if necessary.</source>
          <target state="translated">指定されたタイプマップをオブジェクトにマージします。マージ操作に失敗すると、オブジェクトは矛盾した状態になるので、必要に応じてクローンを作成することに注意してください。</target>
        </trans-unit>
        <trans-unit id="139306e2016e825bc98a4c26d30108bdfa5d60f7" translate="yes" xml:space="preserve">
          <source>Merging CPAN Meta fragments</source>
          <target state="translated">CPANメタフラグメントのマージ</target>
        </trans-unit>
        <trans-unit id="2294ad7eb76da674941c37151d49f37527c0d994" translate="yes" xml:space="preserve">
          <source>Merging and Resolving Prerequisites</source>
          <target state="translated">前提条件のマージと解決</target>
        </trans-unit>
        <trans-unit id="e83dc47ddb09693487317e8066e16ecf7ac94e51" translate="yes" xml:space="preserve">
          <source>Message flag constants for send() and recv().</source>
          <target state="translated">send()および recv()のメッセージフラグ定数。</target>
        </trans-unit>
        <trans-unit id="bc36800e17eaf7f803d98c577d91569b6c7f036b" translate="yes" xml:space="preserve">
          <source>Messing with Perl's Internals</source>
          <target state="translated">Perl の内部をいじる</target>
        </trans-unit>
        <trans-unit id="b9828e06647e7ffc584e789aea4d7e68962a3966" translate="yes" xml:space="preserve">
          <source>Meta keys must be defined, and must be true when used as a boolean. Keys may not be references. You are free to stringify a reference &lt;code&gt;&quot;$ref&quot;&lt;/code&gt; for use as a key, but this package will not stringify it for you.</source>
          <target state="translated">メタキーを定義する必要があり、ブール値として使用する場合はtrueである必要があります。キーは参照ではない場合があります。キーとして使用するために参照 &lt;code&gt;&quot;$ref&quot;&lt;/code&gt; を自由に文字列化できますが、このパッケージでは文字列化されません。</target>
        </trans-unit>
        <trans-unit id="884d7f1593f68104d33ecab4f4bbe9381f348cdd" translate="yes" xml:space="preserve">
          <source>MetaCPAN</source>
          <target state="translated">MetaCPAN</target>
        </trans-unit>
        <trans-unit id="d754d67910f4c2642d4f88945d3605a6a4025a42" translate="yes" xml:space="preserve">
          <source>Metacharacters</source>
          <target state="translated">Metacharacters</target>
        </trans-unit>
        <trans-unit id="44522bc3b457b440444e21774a3b6c8607931812" translate="yes" xml:space="preserve">
          <source>Metaphoric Quotations</source>
          <target state="translated">比喩的な引用</target>
        </trans-unit>
        <trans-unit id="798b3e1c6f8b0a74eece2abb46cfe2fd57a06fe6" translate="yes" xml:space="preserve">
          <source>Method %s not permitted</source>
          <target state="translated">メソッド %s は許可されていません。</target>
        </trans-unit>
        <trans-unit id="8c86ca70f3e85fdec1d74a21fb3963c31fdcdd7f" translate="yes" xml:space="preserve">
          <source>Method Call Variations</source>
          <target state="translated">メソッド呼び出しのバリエーション</target>
        </trans-unit>
        <trans-unit id="d8949e17ae84d7a06765768cb82b20ae6019661d" translate="yes" xml:space="preserve">
          <source>Method Calls on Filehandles</source>
          <target state="translated">ファイルハンドルのメソッド呼び出し</target>
        </trans-unit>
        <trans-unit id="6fd706a5558ebea104b27041341cb1ea5fac0c06" translate="yes" xml:space="preserve">
          <source>Method Invocation</source>
          <target state="translated">メソッド呼び出し</target>
        </trans-unit>
        <trans-unit id="4f453985833ca25c15ccb8b4ce0b4ada21b9adb4" translate="yes" xml:space="preserve">
          <source>Method Names as Strings</source>
          <target state="translated">文字列としてのメソッド名</target>
        </trans-unit>
        <trans-unit id="169d21aab45387c970c5fa19ac363def6ba831e8" translate="yes" xml:space="preserve">
          <source>Method Names with a Fully Qualified Name</source>
          <target state="translated">完全修飾名を持つメソッド名</target>
        </trans-unit>
        <trans-unit id="149bc56a4796369142e80bb8e93236ae91c74251" translate="yes" xml:space="preserve">
          <source>Method Resolution Caching</source>
          <target state="translated">メソッド解決キャッシング</target>
        </trans-unit>
        <trans-unit id="0c84198ff44a95ef84e9c8366e0d425cc63a174e" translate="yes" xml:space="preserve">
          <source>Method Resolution Order</source>
          <target state="translated">方法解決命令</target>
        </trans-unit>
        <trans-unit id="aa23ba323c11de2437b737ae399da090864345e1" translate="yes" xml:space="preserve">
          <source>Method calls</source>
          <target state="translated">メソッド呼び出し</target>
        </trans-unit>
        <trans-unit id="bcdf1b1bb254fccb870b04cffc381c4e506b716b" translate="yes" xml:space="preserve">
          <source>Method calls are not influenced by prototypes either, because the function to be called is indeterminate at compile time, since the exact code called depends on inheritance.</source>
          <target state="translated">呼び出される関数はコンパイル時に不確定なので、メソッドの呼び出しもプロトタイプの影響を受けません。</target>
        </trans-unit>
        <trans-unit id="5c72d128e104c59ad0c3c2a4128e634028dba480" translate="yes" xml:space="preserve">
          <source>Method for operation %s not found in package %s during blessing</source>
          <target state="translated">操作 %s がブレッシング中にパッケージ %s に見つからない場合のメソッドです。</target>
        </trans-unit>
        <trans-unit id="9c1f923c258569220ac20750fe41c9eb6cce3bef" translate="yes" xml:space="preserve">
          <source>Method names in the &lt;code&gt;use overload&lt;/code&gt; directive</source>
          <target state="translated">&lt;code&gt;use overload&lt;/code&gt; ディレクティブのメソッド名</target>
        </trans-unit>
        <trans-unit id="8bf68fe4a9ba9d42e80a08fe93064afd994243cb" translate="yes" xml:space="preserve">
          <source>Method resolution order only matters in the case of multiple inheritance. In the case of single inheritance, Perl simply looks up the inheritance chain to find a method:</source>
          <target state="translated">メソッドの解決順序は、複数の継承の場合にのみ重要です。単一継承の場合、Perl は単に継承チェーンを調べてメソッドを見つけます。</target>
        </trans-unit>
        <trans-unit id="d67544f861de65aff5df7b6f9ed170e715ea2ab1" translate="yes" xml:space="preserve">
          <source>Method such as &lt;code&gt;ok&lt;/code&gt;, and &lt;code&gt;note&lt;/code&gt; are shortcuts for generating common 1-task events based on the old API, however they are forward compatible, and easy to use. If these meet your needs then go ahead and use them, but please check back often for alternatives that may be added.</source>
          <target state="translated">&lt;code&gt;ok&lt;/code&gt; や &lt;code&gt;note&lt;/code&gt; などのメソッドは、古いAPIに基づいて一般的な1タスクイベントを生成するためのショートカットですが、上位互換性があり、使いやすいです。これらがニーズを満たしている場合は、先に進んで使用してください。ただし、追加される可能性のある代替案を頻繁に確認してください。</target>
        </trans-unit>
        <trans-unit id="34cec11dfde693ed2754d2e489ae4f0bbc9cc853" translate="yes" xml:space="preserve">
          <source>Method that protects Makefile single-value constants (mainly filenames), so that make will still treat them as single values even if they inconveniently have spaces in. If the make program being used cannot achieve such protection and the given text would need it, throws an exception.</source>
          <target state="translated">Makefile の単一値定数 (主にファイル名)を保護するメソッド。使用している make プログラムがこのような保護を実現できず、与えられたテキストがそれを必要とする場合は、例外をスローします。</target>
        </trans-unit>
        <trans-unit id="b801c10b1ac5aa2b998ab1658d5c860e220086a7" translate="yes" xml:space="preserve">
          <source>Method to customize MakeMaker for Win9X</source>
          <target state="translated">Win9X用MakeMakerをカスタマイズする方法</target>
        </trans-unit>
        <trans-unit id="7e4ac6803c9159c694f63d089cb06b2519c16aba" translate="yes" xml:space="preserve">
          <source>Methods</source>
          <target state="translated">Methods</target>
        </trans-unit>
        <trans-unit id="c9952f904ebdacb612e4e6f4d7de0226ec975738" translate="yes" xml:space="preserve">
          <source>Methods I can't really figure out where they should go yet.</source>
          <target state="translated">方法 まだどこに行けばいいのかわからないんです。</target>
        </trans-unit>
        <trans-unit id="40af0f1172251b1f0d2a538bd0e00ae001b2fcaf" translate="yes" xml:space="preserve">
          <source>Methods always loaded</source>
          <target state="translated">常にロードされるメソッド</target>
        </trans-unit>
        <trans-unit id="a68695b030e2ecbb7c261ec2a9c505d5cb18c649" translate="yes" xml:space="preserve">
          <source>Methods are overridden here: not dynamic_lib itself, but the utility ones that do the OS-specific work.</source>
          <target state="translated">メソッドはここでオーバーライドされます:dynamic_lib自体ではなく、OS固有の作業を行うユーティリティーのものです。</target>
        </trans-unit>
        <trans-unit id="ddc9c9bf62381c038cf262a1503103fafba0ddfa" translate="yes" xml:space="preserve">
          <source>Methods disallowed by the blacklist cannot be permitted by the whitelist.</source>
          <target state="translated">ブラックリストで禁止されているメソッドは、ホワイトリストでは許可されません。</target>
        </trans-unit>
        <trans-unit id="3492e94289b56d2304db645e851cbd229618f6f3" translate="yes" xml:space="preserve">
          <source>Methods for Collation</source>
          <target state="translated">照合の方法</target>
        </trans-unit>
        <trans-unit id="dffdf0d2cd8722a265661b1c3c208de439bb95a7" translate="yes" xml:space="preserve">
          <source>Methods for Cygwin file specs</source>
          <target state="translated">Cygwinファイル仕様のためのメソッド</target>
        </trans-unit>
        <trans-unit id="82ca12b02f71920ae1348327f9c5bc0dd81da215" translate="yes" xml:space="preserve">
          <source>Methods for Epoc file specs</source>
          <target state="translated">Epocファイル仕様のためのメソッド</target>
        </trans-unit>
        <trans-unit id="68812b66a62e2047690bf9da1c3c46de5cc3d232" translate="yes" xml:space="preserve">
          <source>Methods for OS/2 file specs</source>
          <target state="translated">OS/2ファイル仕様のためのメソッド</target>
        </trans-unit>
        <trans-unit id="4d421ef7bd512b00bbdb44912712ec892bca2014" translate="yes" xml:space="preserve">
          <source>Methods for Searching</source>
          <target state="translated">検索方法</target>
        </trans-unit>
        <trans-unit id="27e99810c06b72d2d33936fc288406b84f55b203" translate="yes" xml:space="preserve">
          <source>Methods for VMS file specs</source>
          <target state="translated">VMSファイル仕様のためのメソッド</target>
        </trans-unit>
        <trans-unit id="b9b3a715e48f22629289b2063628d2443ae0ab52" translate="yes" xml:space="preserve">
          <source>Methods for Win32 file specs</source>
          <target state="translated">Win32ファイル仕様のためのメソッド</target>
        </trans-unit>
        <trans-unit id="5d7bf3463f69bf3ade9275de1811133bd2e8b4a6" translate="yes" xml:space="preserve">
          <source>Methods for manipulating file specifications.</source>
          <target state="translated">ファイルの仕様を操作するための方法。</target>
        </trans-unit>
        <trans-unit id="ebbba6a759fd4eaa9d94e1633b1a4e4abe7f7a45" translate="yes" xml:space="preserve">
          <source>Methods for manipulating file specifications. Other File::Spec modules, such as File::Spec::Mac, inherit from File::Spec::Unix and override specific methods.</source>
          <target state="translated">ファイル仕様を操作するためのメソッド。File::Spec::Mac などの他の File::Spec モジュールは、File::Spec::Unix を継承し、特定のメソッドをオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="7481ef085e93898eccd2d4291e104c0ca1eaac16" translate="yes" xml:space="preserve">
          <source>Methods for the adventurous</source>
          <target state="translated">冒険者のための方法</target>
        </trans-unit>
        <trans-unit id="8b4c41334b1f0849f43409490279c73ebfa5df79" translate="yes" xml:space="preserve">
          <source>Methods in Detail</source>
          <target state="translated">メソッドの詳細</target>
        </trans-unit>
        <trans-unit id="e068233ba30d5c340de8033909e63f34a39f8d3e" translate="yes" xml:space="preserve">
          <source>Methods in the other Classes</source>
          <target state="translated">他のクラスのメソッド</target>
        </trans-unit>
        <trans-unit id="6e829311e4b065fb2f2e0f38edceb6d95375c55c" translate="yes" xml:space="preserve">
          <source>Methods that you may find it handy to use, from routines of yours that you put in %Lexicon entries.</source>
          <target state="translated">あなたのルーチンから、%Lexicon エントリに入れておくと便利そうなメソッド。</target>
        </trans-unit>
        <trans-unit id="52c4361c86c7fd471a806b4c8215e5369dfc731b" translate="yes" xml:space="preserve">
          <source>Methods to do with constructing language handles.</source>
          <target state="translated">言語ハンドルを構築するためのメソッド。</target>
        </trans-unit>
        <trans-unit id="b6f9f2fbd170ec9c9489d0e901a7e3b7214949c3" translate="yes" xml:space="preserve">
          <source>Methods to override UN*X behaviour in ExtUtils::MakeMaker</source>
          <target state="translated">ExtUtils::MakeMaker の UN*X 挙動をオーバーライドするメソッド</target>
        </trans-unit>
        <trans-unit id="ab3b6636bc321fcd9f46d8689a767ed7e52e65e7" translate="yes" xml:space="preserve">
          <source>Methods used by ExtUtils::MakeMaker</source>
          <target state="translated">ExtUtils::MakeMaker が使用するメソッド</target>
        </trans-unit>
        <trans-unit id="7f996e6a1460bfdcd35f19090247cb216f784336" translate="yes" xml:space="preserve">
          <source>Methods which help initialize the MakeMaker object and macros.</source>
          <target state="translated">MakeMaker オブジェクトやマクロの初期化に役立つメソッドです。</target>
        </trans-unit>
        <trans-unit id="3e6fda3ab5c8fa6834ff71aef9c511f877f6c23d" translate="yes" xml:space="preserve">
          <source>Methods you should implement</source>
          <target state="translated">あなたが実装すべき方法</target>
        </trans-unit>
        <trans-unit id="41937b20fbe8c71d9c6c3346aff43c001aa25e33" translate="yes" xml:space="preserve">
          <source>Mexico</source>
          <target state="translated">Mexico</target>
        </trans-unit>
        <trans-unit id="bd97b56132ac0bfc7557be46520b5fd83aff153a" translate="yes" xml:space="preserve">
          <source>Michael G Schwern &amp;lt;schwern@pobox.com&amp;gt; and the denizens of makemaker@perl.org with code from ExtUtils::MM_Unix and ExtUtils::MM_Win32.</source>
          <target state="translated">Michael G Schwern &amp;lt;schwern@pobox.com&amp;gt;およびmakemaker@perl.orgの住人、ExtUtils :: MM_UnixおよびExtUtils :: MM_Win32のコードを使用</target>
        </trans-unit>
        <trans-unit id="52068be64791a464b661dac455db8140aea835a5" translate="yes" xml:space="preserve">
          <source>Michael G Schwern &amp;lt;schwern@pobox.com&amp;gt; and the perl-qa dancers!</source>
          <target state="translated">Michael G Schwern &amp;lt;schwern@pobox.com&amp;gt;とperl-qaダンサー！</target>
        </trans-unit>
        <trans-unit id="88af124e71f22819d4d398414f274e80611dc1ac" translate="yes" xml:space="preserve">
          <source>Michael G Schwern &amp;lt;schwern@pobox.com&amp;gt; on top of code by Nick Ing-Simmons and Jeffrey Friedl.</source>
          <target state="translated">Michael G Schwern &amp;lt;schwern@pobox.com&amp;gt;はNick Ing-SimmonsとJeffrey Friedlによるコードの上にあります。</target>
        </trans-unit>
        <trans-unit id="609a8e114c05509c720089b4066abb697390e6b3" translate="yes" xml:space="preserve">
          <source>Michael G Schwern &amp;lt;schwern@pobox.com&amp;gt; with code from ExtUtils::MM_Unix</source>
          <target state="translated">Michael G Schwern &amp;lt;schwern@pobox.com&amp;gt;とExtUtils :: MM_Unixからのコード</target>
        </trans-unit>
        <trans-unit id="976aacead2152d3736e5ca6c6514a1e5684482c5" translate="yes" xml:space="preserve">
          <source>Michael G Schwern &amp;lt;schwern@pobox.com&amp;gt; with much inspiration from Joshua Pritikin's Test module and lots of help from Barrie Slaymaker, Tony Bowden, blackstar.co.uk, chromatic, Fergal Daly and the perl-qa gang.</source>
          <target state="translated">Michael G Schwern &amp;lt;schwern@pobox.com&amp;gt;は、Joshua Pritikinのテストモジュールから多くのインスピレーションを得ており、Barrie Slaymaker、Tony Bowden、blackstar.co.uk、chromatic、Fergal Daly、およびperl-qaギャングから多くの支援を受けています。</target>
        </trans-unit>
        <trans-unit id="f21627f7b936980d951472d8f3b9d11843e6ffcc" translate="yes" xml:space="preserve">
          <source>Michael G. Schwern &amp;lt;mschwern@cpan.org&amp;gt;</source>
          <target state="translated">Michael G. Schwern &amp;lt;mschwern@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="b7e8898e084b205078364468d25648e9b0ec170d" translate="yes" xml:space="preserve">
          <source>Michael Peters &amp;lt;mpeters at plusthree dot com&amp;gt;</source>
          <target state="translated">マイケルピーターズ&amp;lt;plusthree dot comの選手&amp;gt;</target>
        </trans-unit>
        <trans-unit id="dd33a21f26a7d4f2cb826da8d8de1e33bcd542ba" translate="yes" xml:space="preserve">
          <source>Michael Schwern</source>
          <target state="translated">マイケル・シュヴァーン</target>
        </trans-unit>
        <trans-unit id="5110b352c6bc056ec40bf3aebc4144eb1ae0e1d8" translate="yes" xml:space="preserve">
          <source>Michigan</source>
          <target state="translated">Michigan</target>
        </trans-unit>
        <trans-unit id="a8c99518c0df8eeda3f71152b09117cad644595c" translate="yes" xml:space="preserve">
          <source>MicroEMACS</source>
          <target state="translated">MicroEMACS</target>
        </trans-unit>
        <trans-unit id="359924accaba027302f36e848227bed8498f3885" translate="yes" xml:space="preserve">
          <source>Microsoft Platform SDK 64-bit Compiler</source>
          <target state="translated">Microsoft Platform SDK 64ビットコンパイラ</target>
        </trans-unit>
        <trans-unit id="19e1b99fc64b8852de8ab31bb7d1b51525551308" translate="yes" xml:space="preserve">
          <source>Microsoft Visual C++</source>
          <target state="translated">マイクロソフトビジュアルシープラ</target>
        </trans-unit>
        <trans-unit id="50a674447acfb53f080e5c7a940380d878d668e4" translate="yes" xml:space="preserve">
          <source>Microsoft Visual C++ 2005 Express Edition</source>
          <target state="translated">Microsoft Visual C++2005 Express Edition</target>
        </trans-unit>
        <trans-unit id="b0803900f0583cc04c7c50cafeaa151ade70dcde" translate="yes" xml:space="preserve">
          <source>Microsoft Visual C++ 2008-2019 Express/Community Edition</source>
          <target state="translated">Microsoft Visual C++2008-2019 Express/コミュニティ版</target>
        </trans-unit>
        <trans-unit id="d286550ff77bf9e5cdb6de350a40b896ae0aa2a8" translate="yes" xml:space="preserve">
          <source>Microsoft Visual C++ Toolkit 2003</source>
          <target state="translated">Microsoft Visual C++ツールキット 2003</target>
        </trans-unit>
        <trans-unit id="9476515c776c7ffa5f23daf6605041d17cb39e43" translate="yes" xml:space="preserve">
          <source>Microsoft extension to &lt;code&gt;Big5&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Big5&lt;/code&gt; へのMicrosoft拡張。</target>
        </trans-unit>
        <trans-unit id="35bc8ec91b9bc1d48aec480ad01ccf1d9a2cc4f5" translate="yes" xml:space="preserve">
          <source>Microsoft extension to &lt;code&gt;EUC-CN&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;EUC-CN&lt;/code&gt; へのMicrosoft拡張。</target>
        </trans-unit>
        <trans-unit id="46a667be64853bfcf4ee2942093cec7a4847183a" translate="yes" xml:space="preserve">
          <source>Microsoft extension to &lt;code&gt;EUC-KR&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;EUC-KR&lt;/code&gt; へのMicrosoft拡張。</target>
        </trans-unit>
        <trans-unit id="e8d72bfd184d60d481c76b37ef21c0a642dd30ee" translate="yes" xml:space="preserve">
          <source>Microsoft products misuse the following names:</source>
          <target state="translated">マイクロソフト製品では、以下のような名前を悪用しています。</target>
        </trans-unit>
        <trans-unit id="624c2711360f576ebf12a94ce042cede4b18471f" translate="yes" xml:space="preserve">
          <source>Microsoft's understanding of &lt;code&gt;Shift_JIS&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Shift_JIS&lt;/code&gt; に関するMicrosoftの理解。</target>
        </trans-unit>
        <trans-unit id="46246987fa909ac6d3b3544d378e153a25558858" translate="yes" xml:space="preserve">
          <source>Microsoft-related naming mess</source>
          <target state="translated">マイクロソフト関連の命名ミス</target>
        </trans-unit>
        <trans-unit id="6bb062409e93c0885568573482cc58a0d290f0ac" translate="yes" xml:space="preserve">
          <source>Midnight BSD</source>
          <target state="translated">ミッドナイトBSD</target>
        </trans-unit>
        <trans-unit id="78f6e604b99e20fee4d55d99822d486186bfc9da" translate="yes" xml:space="preserve">
          <source>Might be a runaway multi-line %s string starting on line %d</source>
          <target state="translated">行 %d で始まる複数行の %s 文字列が暴走しているかもしれません。</target>
        </trans-unit>
        <trans-unit id="3d917d6d7fad51d62d22d6b5c32840fa7d5b5e8e" translate="yes" xml:space="preserve">
          <source>Migration from &lt;code&gt;DynaLoader&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;DynaLoader&lt;/code&gt; からの移行</target>
        </trans-unit>
        <trans-unit id="2ceffec12b40d21f869eb5b84598130f16f111e6" translate="yes" xml:space="preserve">
          <source>Migration from DynaLoader</source>
          <target state="translated">DynaLoaderからの移行</target>
        </trans-unit>
        <trans-unit id="12654a571e20ea45eaec45ab50ad734768e09847" translate="yes" xml:space="preserve">
          <source>Mike Cariaso provided valuable insight into the best way to solve this problem.</source>
          <target state="translated">Mike Cariaso氏は、この問題を解決するための最良の方法について貴重な洞察を提供してくれました。</target>
        </trans-unit>
        <trans-unit id="234bc19cd7be72665729799de11490c9dd83bf27" translate="yes" xml:space="preserve">
          <source>Mike Doherty &amp;lt;doherty@cpan.org&amp;gt;</source>
          <target state="translated">マイク・ドハティ&amp;lt;doherty@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="039e707fb015ae5335982d49bab4f238cf134377" translate="yes" xml:space="preserve">
          <source>Mind that argv[argc] must be NULL, same as those passed to a main function in C.</source>
          <target state="translated">argv[argc]はC言語のメイン関数に渡されるものと同じNULLでなければならないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="326f115f454ad964c4545e76abb586c5dfa4774e" translate="yes" xml:space="preserve">
          <source>Mind, that any element of the array contains a complete set of arguments for the ld command. So do not specify</source>
          <target state="translated">配列のどの要素にも ld コマンドの引数の完全なセットが含まれていることに注意してください。ですから</target>
        </trans-unit>
        <trans-unit id="e509f9fc49b801b1d3cb79b36c8621b4642edef8" translate="yes" xml:space="preserve">
          <source>Minimal Set of Overloaded Operations</source>
          <target state="translated">過負荷操作の最小セット</target>
        </trans-unit>
        <trans-unit id="447f6cc3c1201528e85c548d7378d0bbb259ea5f" translate="yes" xml:space="preserve">
          <source>Minimal code</source>
          <target state="translated">最小限のコード</target>
        </trans-unit>
        <trans-unit id="b9bbc06fd8287f4f714cc43f7b852676d2d7a603" translate="yes" xml:space="preserve">
          <source>Minimal patches that fix platform-specific test failures.</source>
          <target state="translated">プラットフォーム固有のテストの失敗を修正する最小限のパッチ。</target>
        </trans-unit>
        <trans-unit id="9add73fb8f3d0c44a5715a5d41747422c62c935b" translate="yes" xml:space="preserve">
          <source>Minimal set of supported functions</source>
          <target state="translated">サポートされる機能の最小セット</target>
        </trans-unit>
        <trans-unit id="390af1977edf4e133548c8556281c14e4c310537" translate="yes" xml:space="preserve">
          <source>Minimal setup (looks for</source>
          <target state="translated">ミニマムセットアップ</target>
        </trans-unit>
        <trans-unit id="906ea91bd1c9c6378b061a822858462af43e979d" translate="yes" xml:space="preserve">
          <source>Minimum length of string (measured in bytes from &lt;code&gt;stringarg&lt;/code&gt; ) that must match; if the engine reaches the end of the match but hasn't reached this position in the string, it should fail.</source>
          <target state="translated">一致する必要がある文字列の最小の長さ（ &lt;code&gt;stringarg&lt;/code&gt; からバイト単位で測定）。エンジンがマッチの最後に到達しても、文字列のこの位置に到達していない場合、失敗するはずです。</target>
        </trans-unit>
        <trans-unit id="be12c32ff84593686015cc2e0cb0d89d77831ed3" translate="yes" xml:space="preserve">
          <source>Minimum length of string (measured in bytes from &lt;code&gt;stringarg&lt;/code&gt;) that must match; if the engine reaches the end of the match but hasn't reached this position in the string, it should fail.</source>
          <target state="translated">一致する必要がある文字列の最小長（ &lt;code&gt;stringarg&lt;/code&gt; からバイト単位で測定）。エンジンが試合の最後に到達したが、ストリング内のこの位置に到達していない場合、失敗するはずです。</target>
        </trans-unit>
        <trans-unit id="5343fd4802dbdf5cd1789ee30e8d69ca6cabadc2" translate="yes" xml:space="preserve">
          <source>Minimum of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/y&quot;&gt;y&lt;/a&gt;&lt;/code&gt;, except when either is &lt;code&gt;NaN&lt;/code&gt; , returns the other [C99].</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;functions/y&quot;&gt;y&lt;/a&gt;&lt;/code&gt; の最小値は、どちらかが &lt;code&gt;NaN&lt;/code&gt; の場合を除いて、もう一方を返します[C99]。</target>
        </trans-unit>
        <trans-unit id="e0302c55180fe62d506dfe28ff33373c2560204c" translate="yes" xml:space="preserve">
          <source>Minimum of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;, except when either is &lt;code&gt;NaN&lt;/code&gt;, returns the other [C99].</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; と &lt;code&gt;y&lt;/code&gt; の最小値は、どちらかが &lt;code&gt;NaN&lt;/code&gt; の場合を除いて、もう一方の[C99]を返します。</target>
        </trans-unit>
        <trans-unit id="32d3a57a3bd71eb3c56ac46e121c1eb2dc0a4ca8" translate="yes" xml:space="preserve">
          <source>Minimum requirements are inclusive. &lt;code&gt;$version&lt;/code&gt; is required, along with any greater version number.</source>
          <target state="translated">最小要件は包括的です。 &lt;code&gt;$version&lt;/code&gt; は、それより大きいバージョン番号とともに必要です。</target>
        </trans-unit>
        <trans-unit id="2a013cdfce3e9c596d4b9cb32825ab89339bddcd" translate="yes" xml:space="preserve">
          <source>Miniperl.Exe</source>
          <target state="translated">Miniperl.Exe</target>
        </trans-unit>
        <trans-unit id="5783432e3d972b6894919df1e5c308c82f9c7634" translate="yes" xml:space="preserve">
          <source>MirOS BSD</source>
          <target state="translated">ミロスビーエスディー</target>
        </trans-unit>
        <trans-unit id="0a893ece8e469a3ca3d935c49f41d08d04b75ecc" translate="yes" xml:space="preserve">
          <source>Misc</source>
          <target state="translated">Misc</target>
        </trans-unit>
        <trans-unit id="5f2cbd107037ed23248e5058a7a64cd6bae05468" translate="yes" xml:space="preserve">
          <source>Miscellaneous</source>
          <target state="translated">Miscellaneous</target>
        </trans-unit>
        <trans-unit id="319c19b9e813f94557eb26c26b7b4388bfdc0145" translate="yes" xml:space="preserve">
          <source>Miscellaneous Functions</source>
          <target state="translated">その他の機能</target>
        </trans-unit>
        <trans-unit id="e9886ca0fdacee4b74dfbeeffc975d27efbdeb6b" translate="yes" xml:space="preserve">
          <source>Miscellaneous Modules</source>
          <target state="translated">その他のモジュール</target>
        </trans-unit>
        <trans-unit id="99463edffe28d703da1b6e42d1ae7b9d31c1b070" translate="yes" xml:space="preserve">
          <source>Miscellaneous Things</source>
          <target state="translated">雑多なもの</target>
        </trans-unit>
        <trans-unit id="7b60f144da88cbf71ee28b893333af2adba91042" translate="yes" xml:space="preserve">
          <source>Miscellaneous Usage</source>
          <target state="translated">その他の使い方</target>
        </trans-unit>
        <trans-unit id="7549a52ededf0abbc51eaa6563f958964d60ea6e" translate="yes" xml:space="preserve">
          <source>Miscellaneous Utility Functions</source>
          <target state="translated">その他のユーティリティ機能</target>
        </trans-unit>
        <trans-unit id="b1c2f1326539aaa7427ad9b1469de4ff74f87ee5" translate="yes" xml:space="preserve">
          <source>Miscellaneous commentary.</source>
          <target state="translated">雑感コメント。</target>
        </trans-unit>
        <trans-unit id="342a5f135351fd510e40f97d2fab9f29fe7f026d" translate="yes" xml:space="preserve">
          <source>Miscellaneous constants. Used for the &lt;code&gt;$uCreate&lt;/code&gt; argument of &lt;code&gt;CreateFile&lt;/code&gt; or the &lt;code&gt;$uFromWhere&lt;/code&gt; argument of &lt;code&gt;SetFilePointer&lt;/code&gt;. Plus &lt;code&gt;INVALID_HANDLE_VALUE&lt;/code&gt;, which you usually won't need to check for since most routines translate it into a false value.</source>
          <target state="translated">その他の定数。以下のために使用される &lt;code&gt;$uCreate&lt;/code&gt; の引数 &lt;code&gt;CreateFile&lt;/code&gt; または &lt;code&gt;$uFromWhere&lt;/code&gt; 引数 &lt;code&gt;SetFilePointer&lt;/code&gt; 。さらに、 &lt;code&gt;INVALID_HANDLE_VALUE&lt;/code&gt; は、ほとんどのルーチンがfalse値に変換するため、通常はチェックする必要がありません。</target>
        </trans-unit>
        <trans-unit id="a37adce83d6fa2179beba32ceeacd3778204fcfb" translate="yes" xml:space="preserve">
          <source>Miscellaneous encodings</source>
          <target state="translated">その他のエンコーディング</target>
        </trans-unit>
        <trans-unit id="314bb4fc83d55b365225efaa4fc333e95057e960" translate="yes" xml:space="preserve">
          <source>Miscellaneous functions</source>
          <target state="translated">その他の機能</target>
        </trans-unit>
        <trans-unit id="9da774369baa717644789be36b08da5ef92ca224" translate="yes" xml:space="preserve">
          <source>Misfeatures</source>
          <target state="translated">Misfeatures</target>
        </trans-unit>
        <trans-unit id="ce60b331195543a6746d022bb20ad15f338c66de" translate="yes" xml:space="preserve">
          <source>Misplaced _ in number</source>
          <target state="translated">番号を間違えた</target>
        </trans-unit>
        <trans-unit id="a95de1c6435f8743842f21d48536596257568105" translate="yes" xml:space="preserve">
          <source>Misplaced plan</source>
          <target state="translated">見当違いのプラン</target>
        </trans-unit>
        <trans-unit id="9c5c9d737a51552824a8f054a3830ede7eb73132" translate="yes" xml:space="preserve">
          <source>Missing $ on loop variable</source>
          <target state="translated">ループ変数の $ の欠落</target>
        </trans-unit>
        <trans-unit id="07f4c05777767269c3fe2fd5ee568ca57fbd5be9" translate="yes" xml:space="preserve">
          <source>Missing ']' in prototype for %s : %s</source>
          <target state="translated">s のプロトタイプに ']' がありません:%s</target>
        </trans-unit>
        <trans-unit id="492deed501b2e8f77f0d5bf65e92ebc107c3988d" translate="yes" xml:space="preserve">
          <source>Missing argument for %n in %s</source>
          <target state="translated">s に %n の引数がありません。</target>
        </trans-unit>
        <trans-unit id="6d29fb503cf20ccfb86deead9f1e147184da6314" translate="yes" xml:space="preserve">
          <source>Missing argument in %s</source>
          <target state="translated">%s に引数がありません。</target>
        </trans-unit>
        <trans-unit id="905237197bd9811f9b09e25f0763d52acfbe8f9d" translate="yes" xml:space="preserve">
          <source>Missing argument to -%c</source>
          <target state="translated">c の引数が存在しない</target>
        </trans-unit>
        <trans-unit id="c8ff0f07a4c291aedab0828071c7e5be901eca1d" translate="yes" xml:space="preserve">
          <source>Missing braces on \N{}</source>
          <target state="translated">Missing braces on</target>
        </trans-unit>
        <trans-unit id="65ab85b2077b61fe9a0b2696a10440f202845e30" translate="yes" xml:space="preserve">
          <source>Missing braces on \N{} in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="translated">正規表現の\ N {}に中括弧がありません。&amp;lt;-ここにm /％s /でマーク</target>
        </trans-unit>
        <trans-unit id="f2b7f0d0959c77816c06bcafc45fa06ad6622507" translate="yes" xml:space="preserve">
          <source>Missing braces on \o{}</source>
          <target state="translated">Missing braces on</target>
        </trans-unit>
        <trans-unit id="77272a604bbc7df55b2cbf61f879522fe8ed6ffd" translate="yes" xml:space="preserve">
          <source>Missing comma after first argument to %s function</source>
          <target state="translated">関数 %s の最初の引数の後にカンマがありません。</target>
        </trans-unit>
        <trans-unit id="5527cff2b5c9e125b749b05c07f90a92a547a921" translate="yes" xml:space="preserve">
          <source>Missing command in piped open</source>
          <target state="translated">パイピングオープンでのコマンドの欠落</target>
        </trans-unit>
        <trans-unit id="8fb97fb839a7785ff8deb8f6a3434e5842793e89" translate="yes" xml:space="preserve">
          <source>Missing control char name in \c</source>
          <target state="translated">Missing control char name in</target>
        </trans-unit>
        <trans-unit id="38d01981943106f56a9819e6a7268d9a6454e8a9" translate="yes" xml:space="preserve">
          <source>Missing name in &quot;%s sub&quot;</source>
          <target state="translated">%s sub&quot; に名前がありません。</target>
        </trans-unit>
        <trans-unit id="d72d7995bf8862606c4717d1a2053eff2624ec07" translate="yes" xml:space="preserve">
          <source>Missing or undefined argument to %s</source>
          <target state="translated">s に対する引数が存在しないか、定義されていません。</target>
        </trans-unit>
        <trans-unit id="05c054b8f3d0a5a4b72b812cbfe4bb1cd415154f" translate="yes" xml:space="preserve">
          <source>Missing right brace on \%c{} in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="translated">正規表現の\％c {}に右中括弧がありません。&amp;lt;-ここにm /％s /でマーク</target>
        </trans-unit>
        <trans-unit id="9b28d6622907b838faba9a35172b03ffbf93af4a" translate="yes" xml:space="preserve">
          <source>Missing right brace on \N{}</source>
          <target state="translated">Missing right brace on ¶¶ (右中括弧)</target>
        </trans-unit>
        <trans-unit id="e3e8c9cf38694cb1369209c024da00e671eb2a06" translate="yes" xml:space="preserve">
          <source>Missing right brace on \N{} or unescaped left brace after \N</source>
          <target state="translated">Missing right brace on ¶¶ or unescaped left brace after ¶¶¶¶ (Missing right brace on ¶¶¶)</target>
        </trans-unit>
        <trans-unit id="256a6056983709743749fcd95a4f7e468cbb0a7f" translate="yes" xml:space="preserve">
          <source>Missing right curly or square bracket</source>
          <target state="translated">右巻きまたは角括弧の欠落</target>
        </trans-unit>
        <trans-unit id="e6560a728cc75a6b103e706dc673d7ef4bcf29de" translate="yes" xml:space="preserve">
          <source>Mixing #define and #ifdef</source>
          <target state="translated">defineと#ifdefを混ぜる</target>
        </trans-unit>
        <trans-unit id="29c40186eed76e6033a40498c6fe7f4e2e466bc7" translate="yes" xml:space="preserve">
          <source>Mixing UTF-8 and non-UTF-8 strings is tricky. Use &lt;code&gt;bytes_to_utf8&lt;/code&gt; to get a new string which is UTF-8 encoded, and then combine them.</source>
          <target state="translated">UTF-8文字列と非UTF-8文字列を混在させるのは注意が必要です。 &lt;code&gt;bytes_to_utf8&lt;/code&gt; を使用して、UTF-8でエンコードされた新しい文字列を取得し、それらを結合します。</target>
        </trans-unit>
        <trans-unit id="66bca4e0f37fde6f6d5033a86915673ed0b48f44" translate="yes" xml:space="preserve">
          <source>Mixing command line option with other arguments</source>
          <target state="translated">コマンドラインオプションを他の引数と混合する</target>
        </trans-unit>
        <trans-unit id="c85d9a78c1b4d78ca553de634935cfea419df54e" translate="yes" xml:space="preserve">
          <source>Mixing declarations and code</source>
          <target state="translated">宣言とコードの混合</target>
        </trans-unit>
        <trans-unit id="191dad4eb9e454325153296d486b75e87731816d" translate="yes" xml:space="preserve">
          <source>Mixing different object types</source>
          <target state="translated">異なるオブジェクトタイプの混合</target>
        </trans-unit>
        <trans-unit id="4f1e7f7efdba287b74e8142b1268ce27b211ade2" translate="yes" xml:space="preserve">
          <source>Mixing it up</source>
          <target state="translated">ミキシング</target>
        </trans-unit>
        <trans-unit id="9355f7a3087594f002f5e9c67bfdb7357b2d09c8" translate="yes" xml:space="preserve">
          <source>Mixing signed char pointers with unsigned char pointers</source>
          <target state="translated">符号付き文字ポインタと符号なし文字ポインタの混合</target>
        </trans-unit>
        <trans-unit id="c8ded3624005b356d9a738f8bbff4c65caab09bc" translate="yes" xml:space="preserve">
          <source>MkTemp family:</source>
          <target state="translated">MkTempファミリー。</target>
        </trans-unit>
        <trans-unit id="89e86a83d22490472fadfccc84db9971217f00e2" translate="yes" xml:space="preserve">
          <source>Mkbootstrap typically gets called from an extension Makefile.</source>
          <target state="translated">Mkbootstrapは通常Makefileの拡張子から呼び出されます。</target>
        </trans-unit>
        <trans-unit id="bf642b0445fa1b197a3f404144c575c97857e845" translate="yes" xml:space="preserve">
          <source>Mnemonic for &lt;code&gt;(?^...)&lt;/code&gt; : A fresh beginning since the usual use of a caret is to match at the beginning.</source>
          <target state="translated">&lt;code&gt;(?^...)&lt;/code&gt; ニーモニック：キャレットの通常の使用法は、最初に一致することから、新たな始まりです。</target>
        </trans-unit>
        <trans-unit id="7fb71ad054736a057594bb08cc0713a551c20ae5" translate="yes" xml:space="preserve">
          <source>Mnemonic for &lt;code&gt;(?^...)&lt;/code&gt;: A fresh beginning since the usual use of a caret is to match at the beginning.</source>
          <target state="translated">&lt;code&gt;(?^...)&lt;/code&gt; ニーモニック：キャレットの通常の使用は最初に一致することなので、新たな始まりです。</target>
        </trans-unit>
        <trans-unit id="a58694480088720e80e9150ab4b17e65401d3e57" translate="yes" xml:space="preserve">
          <source>Mnemonic:</source>
          <target state="translated">Mnemonic:</target>
        </trans-unit>
        <trans-unit id="a4609f4e9d1567a8be9be3013a68cb5f9077d509" translate="yes" xml:space="preserve">
          <source>Mnemonic: / delimits line boundaries when quoting poetry.</source>
          <target state="translated">暗記法。/詩を引用する際に行の境界を区切る。</target>
        </trans-unit>
        <trans-unit id="a17c263d1e94a797a2f907b413a2e6937babe3bd" translate="yes" xml:space="preserve">
          <source>Mnemonic: &lt;code&gt;%&lt;/code&gt; is page number in &lt;b&gt;nroff&lt;/b&gt;.</source>
          <target state="translated">記憶法： &lt;code&gt;%&lt;/code&gt; は&lt;b&gt;nroffの&lt;/b&gt;ページ番号です。</target>
        </trans-unit>
        <trans-unit id="ff8f7e9ef271156c4cf38cda15862d7d90c4cb37" translate="yes" xml:space="preserve">
          <source>Mnemonic: &lt;code&gt;'&lt;/code&gt; often follows a quoted string.</source>
          <target state="translated">ニーモニック： &lt;code&gt;'&lt;/code&gt; 多くの場合、引用符で囲まれた文字列の後に続きます。</target>
        </trans-unit>
        <trans-unit id="03462936fc4d222008baee163c91bca679bcf610" translate="yes" xml:space="preserve">
          <source>Mnemonic: &lt;code&gt;`&lt;/code&gt; often precedes a quoted string.</source>
          <target state="translated">記憶法： &lt;code&gt;`&lt;/code&gt; 引用符で囲まれた文字列の前にあることがよくあります。</target>
        </trans-unit>
        <trans-unit id="6d89fd4acfd6e65581a03c1bccc5077a0683b53d" translate="yes" xml:space="preserve">
          <source>Mnemonic: = has horizontal lines.</source>
          <target state="translated">暗記法:=水平線を持っています。</target>
        </trans-unit>
        <trans-unit id="a4fee04f913df1ce7e585c0d4cb5cf688bad64b1" translate="yes" xml:space="preserve">
          <source>Mnemonic: Complement of</source>
          <target state="translated">記憶術。の補完</target>
        </trans-unit>
        <trans-unit id="00d81532eead6e059ec9226bf31a1d7bc4d3c648" translate="yes" xml:space="preserve">
          <source>Mnemonic: Extra error explanation.</source>
          <target state="translated">記憶術。余分なエラーの説明。</target>
        </trans-unit>
        <trans-unit id="f3adb972eb89279dcbf38ffdb2b34cb01ac80557" translate="yes" xml:space="preserve">
          <source>Mnemonic: Is this version of perl in the right bracket?</source>
          <target state="translated">Mnemonic:このバージョンのperlは正しい括弧に入っていますか?</target>
        </trans-unit>
        <trans-unit id="c83fc5eabe67c53a88a66531db063afe5a8798fe" translate="yes" xml:space="preserve">
          <source>Mnemonic: Perl's (original) space</source>
          <target state="translated">ニーモニック。Perl の空間</target>
        </trans-unit>
        <trans-unit id="de5973eb3bd2f2951a919587c5a581d934fb917e" translate="yes" xml:space="preserve">
          <source>Mnemonic: Perl's (original) word.</source>
          <target state="translated">ニーモニック。Perlの(元の)単語。</target>
        </trans-unit>
        <trans-unit id="e3688e90b8ece4a626d04ff3f6b6b3e5cd816fdf" translate="yes" xml:space="preserve">
          <source>Mnemonic: Space, as modified by Perl. (It doesn't include the vertical tab until v5.18, which both the Posix standard and Unicode consider white space.)</source>
          <target state="translated">ニーモニック。Perl で修正された Space。(Posix 標準と Unicode の両方でホワイトスペースとみなされている v5.18 までは垂直タブは含まれていません)。</target>
        </trans-unit>
        <trans-unit id="e034d1e8207da0718183c9081637de75a93ba2ae" translate="yes" xml:space="preserve">
          <source>Mnemonic: What just went bang?</source>
          <target state="translated">暗記法。今、何が爆発しましたか?</target>
        </trans-unit>
        <trans-unit id="1f52600a3a5911b067b3374a8879381b17ea1317" translate="yes" xml:space="preserve">
          <source>Mnemonic: Where was the error &quot;at&quot;?</source>
          <target state="translated">ニーモニック。エラーの「アット」はどこにあったのか?</target>
        </trans-unit>
        <trans-unit id="c2d59c20bf5fe5e92f4fce8a028d68d9472173f0" translate="yes" xml:space="preserve">
          <source>Mnemonic: Where was the syntax error &quot;at&quot;?</source>
          <target state="translated">ニーモニック。構文エラーの「at」はどこにあったのか?</target>
        </trans-unit>
        <trans-unit id="13036ce2395db627a394493e09b57d820655a6e3" translate="yes" xml:space="preserve">
          <source>Mnemonic: [ begins subscripts.</source>
          <target state="translated">Mnemonic:[下付き文字を開始します。</target>
        </trans-unit>
        <trans-unit id="6478e17d9b14a75686fa2aeaa0fda7fc477e3a6c" translate="yes" xml:space="preserve">
          <source>Mnemonic: a &quot;colon&quot; in poetry is a part of a line.</source>
          <target state="translated">暗記:詩の中の「コロン」は行の一部です。</target>
        </trans-unit>
        <trans-unit id="06be15525bc8ff40fc0fd75c1aede3dd3e6eca7f" translate="yes" xml:space="preserve">
          <source>Mnemonic: be positive and forward looking.</source>
          <target state="translated">暗記法:前向きで、前向きであること。</target>
        </trans-unit>
        <trans-unit id="45c1dcc3d237500077fd6705954bc10a0da68241" translate="yes" xml:space="preserve">
          <source>Mnemonic: brother to &lt;code&gt;$^&lt;/code&gt; .</source>
          <target state="translated">記憶法： &lt;code&gt;$^&lt;/code&gt; への兄弟。</target>
        </trans-unit>
        <trans-unit id="8016703b31a155c2a574fa23c4f3718d5f24c64b" translate="yes" xml:space="preserve">
          <source>Mnemonic: brother to &lt;code&gt;$^&lt;/code&gt;.</source>
          <target state="translated">ニーモニック： &lt;code&gt;$^&lt;/code&gt; 兄弟。</target>
        </trans-unit>
        <trans-unit id="8bfbe3b8dd831a42303599b72a7a29a0dbbce16e" translate="yes" xml:space="preserve">
          <source>Mnemonic: comma (the syntactic subscript separator) is a semi-semicolon.</source>
          <target state="translated">記法:カンマ (構文上の添え字の区切り文字)はセミセミセミコロンです。</target>
        </trans-unit>
        <trans-unit id="a5e54620ad7fc3dd7f83e5824baaa97ef210abf7" translate="yes" xml:space="preserve">
          <source>Mnemonic: e</source>
          <target state="translated">暗記法:e</target>
        </trans-unit>
        <trans-unit id="fb1dad35694a1d1c6e8b249b4963e948af75d628" translate="yes" xml:space="preserve">
          <source>Mnemonic: he</source>
          <target state="translated">記憶術:彼</target>
        </trans-unit>
        <trans-unit id="4f25fdfd275a765786269fb643e1c55e1a9c1820" translate="yes" xml:space="preserve">
          <source>Mnemonic: it's the uid you came</source>
          <target state="translated">暗記法:それはあなたが来た UID です</target>
        </trans-unit>
        <trans-unit id="f53200593eb86ae8dd4c325941dd8eb32bcbba07" translate="yes" xml:space="preserve">
          <source>Mnemonic: it's the uid you went</source>
          <target state="translated">暗記法:それはあなたが行った UID です</target>
        </trans-unit>
        <trans-unit id="c2560fee0f5b656addb6e58657f827dd080975cc" translate="yes" xml:space="preserve">
          <source>Mnemonic: like &lt;code&gt;&amp;amp;&lt;/code&gt; in some editors.</source>
          <target state="translated">記憶法：一部のエディターでは &lt;code&gt;&amp;amp;&lt;/code&gt; のように。</target>
        </trans-unit>
        <trans-unit id="0bf53d6e2ef8b1852f6e6460d639d8a6d511e87d" translate="yes" xml:space="preserve">
          <source>Mnemonic: like \digits.</source>
          <target state="translated">Mnemonic:like ≪(ニーモニック)≫ Like ≪(ライク)digits.</target>
        </trans-unit>
        <trans-unit id="29345f5f1506a434b700483b03581bba2252ef83" translate="yes" xml:space="preserve">
          <source>Mnemonic: lines_on_page - lines_printed.</source>
          <target state="translated">Mnemonic:lines_on_page-lines_printed.</target>
        </trans-unit>
        <trans-unit id="a3b3edfce1b2a7630b3d4258477c440ecb3338e9" translate="yes" xml:space="preserve">
          <source>Mnemonic: many programs use &quot;.&quot; to mean the current line number.</source>
          <target state="translated">記法:多くのプログラムでは、現在の行番号を意味するために &quot;.&quot; を使用しています。</target>
        </trans-unit>
        <trans-unit id="de8f32b4ce704e3d490515551c6116db336ffdaf" translate="yes" xml:space="preserve">
          <source>Mnemonic: none really. &lt;code&gt;\R&lt;/code&gt; was picked because PCRE already uses &lt;code&gt;\R&lt;/code&gt; , and more importantly because Unicode recommends such a regular expression metacharacter, and suggests &lt;code&gt;\R&lt;/code&gt; as its notation.</source>
          <target state="translated">記憶法：実際にはありません。 &lt;code&gt;\R&lt;/code&gt; が選択されたのは、PCREがすでに &lt;code&gt;\R&lt;/code&gt; 使用しているためです。さらに重要なのは、Unicodeがそのような正規表現のメタ文字を推奨し、表記として &lt;code&gt;\R&lt;/code&gt; を推奨しているためです。</target>
        </trans-unit>
        <trans-unit id="2857bfcf8f813920b6e4a8a1bb14270872f38cb1" translate="yes" xml:space="preserve">
          <source>Mnemonic: none really. &lt;code&gt;\R&lt;/code&gt; was picked because PCRE already uses &lt;code&gt;\R&lt;/code&gt;, and more importantly because Unicode recommends such a regular expression metacharacter, and suggests &lt;code&gt;\R&lt;/code&gt; as its notation.</source>
          <target state="translated">ニーモニック：実際にはありません。 &lt;code&gt;\R&lt;/code&gt; PCREは、既に使用しているため選ばれた &lt;code&gt;\R&lt;/code&gt; ユニコードは、正規表現メタ文字を推奨し、示唆しているので、より重要なことに、そして &lt;code&gt;\R&lt;/code&gt; の表記などを。</target>
        </trans-unit>
        <trans-unit id="17515742cc5afa87aeabc73678286fa741ba5388" translate="yes" xml:space="preserve">
          <source>Mnemonic: o</source>
          <target state="translated">暗記法:o</target>
        </trans-unit>
        <trans-unit id="5c7eacbc6cb333f80ee9f35aec3e8dd35063c97b" translate="yes" xml:space="preserve">
          <source>Mnemonic: parentheses are used to</source>
          <target state="translated">記法:カッコを使って</target>
        </trans-unit>
        <trans-unit id="145851845d42b7c2837eb05551e2eb9b2cae8660" translate="yes" xml:space="preserve">
          <source>Mnemonic: points to top of page.</source>
          <target state="translated">ニーモニック:ページの先頭を指します。</target>
        </trans-unit>
        <trans-unit id="18d03cec8eedf712bc3cc92498d0bd974ac29168" translate="yes" xml:space="preserve">
          <source>Mnemonic: related to the &lt;b&gt;-w&lt;/b&gt; switch.</source>
          <target state="translated">ニーモニック：&lt;b&gt;-w&lt;/b&gt;スイッチに関連しています。</target>
        </trans-unit>
        <trans-unit id="6ff59e0f3c29d42ff6b4f1943a0cb62f85b10dbe" translate="yes" xml:space="preserve">
          <source>Mnemonic: same as &lt;b&gt;sh&lt;/b&gt; and &lt;b&gt;ksh&lt;/b&gt;.</source>
          <target state="translated">記憶法：&lt;b&gt;sh&lt;/b&gt;および&lt;b&gt;ksh&lt;/b&gt;と同じ。</target>
        </trans-unit>
        <trans-unit id="3b46ac9389c1562addebeca3277c06599213ca1b" translate="yes" xml:space="preserve">
          <source>Mnemonic: same as shells.</source>
          <target state="translated">暗記法:貝殻と同じ。</target>
        </trans-unit>
        <trans-unit id="9c5494af227b04c5edebf85d05b3fe69b8e73df2" translate="yes" xml:space="preserve">
          <source>Mnemonic: similar to &lt;b&gt;sh&lt;/b&gt; and &lt;b&gt;ksh&lt;/b&gt;.</source>
          <target state="translated">ニーモニック：&lt;b&gt;sh&lt;/b&gt;および&lt;b&gt;kshに&lt;/b&gt;似ています。</target>
        </trans-unit>
        <trans-unit id="894f0484590bcbb3b693d6aab805d5dfd400684a" translate="yes" xml:space="preserve">
          <source>Mnemonic: the (possibly) Nested parenthesis that most recently closed.</source>
          <target state="translated">Mnemonic:最近閉じた(可能性のある)ネストされた括弧。</target>
        </trans-unit>
        <trans-unit id="2bc5f6f15e84df55129e74766d50c6d3ec861d52" translate="yes" xml:space="preserve">
          <source>Mnemonic: underline is understood in certain operations.</source>
          <target state="translated">記法:アンダーラインは特定の操作で理解されます。</target>
        </trans-unit>
        <trans-unit id="4a9ec9ee0bfa06bee48fc042c23120f429cc4720" translate="yes" xml:space="preserve">
          <source>Mnemonic: use ^V for a version object.</source>
          <target state="translated">Mnemonic:バージョンオブジェクトには ^V を使用します。</target>
        </trans-unit>
        <trans-unit id="06e3f9eef28e584212eb3b651afb663309c25b17" translate="yes" xml:space="preserve">
          <source>Mnemonic: value of &lt;b&gt;-D&lt;/b&gt; switch.</source>
          <target state="translated">ニーモニック&lt;b&gt;：-D&lt;/b&gt;スイッチの値。</target>
        </trans-unit>
        <trans-unit id="8b8a29220f27a6ded73512e3ded3085fc6e23796" translate="yes" xml:space="preserve">
          <source>Mnemonic: value of &lt;b&gt;-i&lt;/b&gt; switch.</source>
          <target state="translated">ニーモニック：&lt;b&gt;-i&lt;/b&gt;スイッチの値。</target>
        </trans-unit>
        <trans-unit id="d86dda32bcccc36b30321a061a593c0839054c6b" translate="yes" xml:space="preserve">
          <source>Mnemonic: what is printed when there is a &quot;,&quot; in your print statement.</source>
          <target state="translated">Mnemonic:印刷文の中に「,&quot;」がある場合に何が印刷されるか。</target>
        </trans-unit>
        <trans-unit id="a2e0668e848f30f9c617ffa35513e900bc8c74ef" translate="yes" xml:space="preserve">
          <source>Mnemonic: when you want your pipes to be piping hot.</source>
          <target state="translated">暗記法:あなたのパイプが熱くなるようにしたいとき</target>
        </trans-unit>
        <trans-unit id="83f42ef2607c96d6744ccfc26dd35c90a66a4662" translate="yes" xml:space="preserve">
          <source>Mnemonic: works in double-quoted context.</source>
          <target state="translated">ニーモニック:二重引用文脈で動作します。</target>
        </trans-unit>
        <trans-unit id="c5df1d9e3c7f07b6813c1d51005b98006207f133" translate="yes" xml:space="preserve">
          <source>Mnemonic: you set &lt;code&gt;$\&lt;/code&gt; instead of adding &quot;\n&quot; at the end of the print. Also, it's just like &lt;code&gt;$/&lt;/code&gt; , but it's what you get &quot;back&quot; from Perl.</source>
          <target state="translated">記憶法：印刷の最後に「\ n」を追加する代わりに、 &lt;code&gt;$\&lt;/code&gt; を設定します。また、これは &lt;code&gt;$/&lt;/code&gt; に似ていますが、Perlから「取り戻す」ものです。</target>
        </trans-unit>
        <trans-unit id="d1e77a5dc7fffdb724bdfb2b1a696e56046f4e46" translate="yes" xml:space="preserve">
          <source>Mnemonic: you set &lt;code&gt;$\&lt;/code&gt; instead of adding &quot;\n&quot; at the end of the print. Also, it's just like &lt;code&gt;$/&lt;/code&gt;, but it's what you get &quot;back&quot; from Perl.</source>
          <target state="translated">ニーモニック：印刷の最後に「\ n」を追加する代わりに、 &lt;code&gt;$\&lt;/code&gt; を設定します。また、 &lt;code&gt;$/&lt;/code&gt; と同じですが、Perlから「返される」ものです。</target>
        </trans-unit>
        <trans-unit id="774459fcd854849578678b44d17052997274c5ac" translate="yes" xml:space="preserve">
          <source>Mnemonics:</source>
          <target state="translated">Mnemonics:</target>
        </trans-unit>
        <trans-unit id="cafc128f90bdc8e24af8dd2187160ad19d568274" translate="yes" xml:space="preserve">
          <source>Model =&amp;gt; $hModelFile</source>
          <target state="translated">モデル=&amp;gt; $ hModelFile</target>
        </trans-unit>
        <trans-unit id="6ff39ea59358932273dd96de0a90c680140ef641" translate="yes" xml:space="preserve">
          <source>Modifed values of three of the arguments passed to the function. In particular, the &lt;code&gt;XSStack&lt;/code&gt; and &lt;code&gt;InitFileCode&lt;/code&gt; attributes are modified.</source>
          <target state="translated">関数に渡される3つの引数の変更された値。特に、 &lt;code&gt;XSStack&lt;/code&gt; と &lt;code&gt;InitFileCode&lt;/code&gt; 属性が修正されます。</target>
        </trans-unit>
        <trans-unit id="bfe5ea1c0f4c46a2237b24e5b3f2887e00aa6466" translate="yes" xml:space="preserve">
          <source>Modification of a read-only value attempted</source>
          <target state="translated">読み取り専用値の変更を試みました。</target>
        </trans-unit>
        <trans-unit id="5f76e7ff47044fa8dd85e924ec7a4e874884a8b4" translate="yes" xml:space="preserve">
          <source>Modification of non-creatable array value attempted, %s</source>
          <target state="translated">作成不可能な配列値の変更が試みられました。</target>
        </trans-unit>
        <trans-unit id="5d49a6e4a1e825b5489876269856cd19dd0c32a5" translate="yes" xml:space="preserve">
          <source>Modification of non-creatable hash value attempted, %s</source>
          <target state="translated">作成不可能なハッシュ値の変更が試みられました。</target>
        </trans-unit>
        <trans-unit id="54e708f372bd6f49e75185b1eedbc1c5b10e7365" translate="yes" xml:space="preserve">
          <source>Modification time. Adjusted to mac-time on MacOS if required</source>
          <target state="translated">修正時間。必要に応じてMacOSのmac-timeに調整</target>
        </trans-unit>
        <trans-unit id="405f45092d843a1d3838d8a5b8852228db0dfbb7" translate="yes" xml:space="preserve">
          <source>Modifications</source>
          <target state="translated">Modifications</target>
        </trans-unit>
        <trans-unit id="6acab8f4be86f5c68401444e88bc8209222cbc50" translate="yes" xml:space="preserve">
          <source>Modifications from the original:</source>
          <target state="translated">オリジナルからの改造。</target>
        </trans-unit>
        <trans-unit id="d15d3e35d08a4f905aca29a53f32a6a9324f7e00" translate="yes" xml:space="preserve">
          <source>Modified - 13 July 2001</source>
          <target state="translated">更新日-2001年7月13日</target>
        </trans-unit>
        <trans-unit id="c28e2457b8697ed01bbb5ecba237019fd1dcb3c9" translate="yes" xml:space="preserve">
          <source>Modified - 25 June 2001</source>
          <target state="translated">更新日-2001年6月25日</target>
        </trans-unit>
        <trans-unit id="d8e50120460706cd8f55da079850b9b27d5d7356" translate="yes" xml:space="preserve">
          <source>Modified - 28 May 2002</source>
          <target state="translated">更新日-2002年5月28日</target>
        </trans-unit>
        <trans-unit id="32979a38ecc2f0753d6d680873cd17c8a6ba6155" translate="yes" xml:space="preserve">
          <source>Modified by Casey West, 2000-11-08, v0.59.</source>
          <target state="translated">Casey West,2000-11-08,v0.59 で変更。</target>
        </trans-unit>
        <trans-unit id="e5f3cf35626877ebe81f40ef6a55ba3d9279e043" translate="yes" xml:space="preserve">
          <source>Modified by Damian Conway, 1999-03-05, v0.58.</source>
          <target state="translated">Damian Conway,1999-03-05,v0.58 によって変更されました。</target>
        </trans-unit>
        <trans-unit id="94d5fe9080184121ea2c9a038a3632538b976fe0" translate="yes" xml:space="preserve">
          <source>Modified by Damian Conway, 2001-09-10, v0.62.</source>
          <target state="translated">Damian Conway により変更、2001-09-10、v0.62。</target>
        </trans-unit>
        <trans-unit id="9877a0e2ec14746d54f44a96609db5de1a2c19ac" translate="yes" xml:space="preserve">
          <source>Modified in Perl 5.10.1, 5.12.0</source>
          <target state="translated">Perl 5.10.1,5.12.0 で変更</target>
        </trans-unit>
        <trans-unit id="3a7ea294bf33134dce4b142b8b7182de29b978b2" translate="yes" xml:space="preserve">
          <source>Modifiers</source>
          <target state="translated">Modifiers</target>
        </trans-unit>
        <trans-unit id="1c2e8964e53a3974ad38a662a6a136aa94d17d1a" translate="yes" xml:space="preserve">
          <source>Modifies Test::Builder internals.</source>
          <target state="translated">Test::Builder の内部を変更します。</target>
        </trans-unit>
        <trans-unit id="e880a783bbd37d3dea3114db13bc60aa06662623" translate="yes" xml:space="preserve">
          <source>Modifies and queries the program's underlying locale. Users of this function should read &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt;, whch provides a comprehensive discussion of Perl locale handling, knowledge of which is necessary to properly use this function. It contains &lt;a href=&quot;perllocale#The-setlocale-function&quot;&gt;a section devoted to this function&lt;/a&gt;. The discussion here is merely a summary reference for &lt;code&gt;setlocale()&lt;/code&gt; . Note that Perl itself is almost entirely unaffected by the locale except within the scope of &lt;code&gt;&quot;use locale&quot;&lt;/code&gt; . (Exceptions are listed in &lt;a href=&quot;perllocale#Not-within-the-scope-of-%22use-locale%22&quot;&gt;Not within the scope of use locale in perllocale&lt;/a&gt;.)</source>
          <target state="translated">プログラムの基礎となるロケールを変更および照会します。この関数のユーザーは&lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt;を読む必要があります。whchは、Perlロケールの処理に関する包括的な説明を提供します。この知識は、この関数を適切に使用するために必要です。&lt;a href=&quot;perllocale#The-setlocale-function&quot;&gt;この機能に特化したセクション&lt;/a&gt;が含まれています。ここでの説明は、 &lt;code&gt;setlocale()&lt;/code&gt; の要約参照にすぎません。Perl自体は、 &lt;code&gt;&quot;use locale&quot;&lt;/code&gt; の範囲内を除いて、ロケールの影響をほとんど受けないことに注意してください。（例外は&lt;a href=&quot;perllocale#Not-within-the-scope-of-%22use-locale%22&quot;&gt;perllocaleの使用ロケールの範囲外に&lt;/a&gt;リストされています。）</target>
        </trans-unit>
        <trans-unit id="c9b51ea52a3a827c7ad9340f3c3175b008c79459" translate="yes" xml:space="preserve">
          <source>Modifies the list of places temp directory information is looked for.</source>
          <target state="translated">一時ディレクトリ情報を検索する場所のリストを変更します。</target>
        </trans-unit>
        <trans-unit id="1d7a12e5c51dea8cde2ad6652de6b9359a21545b" translate="yes" xml:space="preserve">
          <source>Modifying and =</source>
          <target state="translated">修正することと=</target>
        </trans-unit>
        <trans-unit id="ce1dfce837138cff453bdea39c7c4c418d1f1de3" translate="yes" xml:space="preserve">
          <source>Modifying the timestamps may not be possible at all: for example, the &lt;code&gt;noatime&lt;/code&gt; filesystem mount option may prohibit you from changing the access time timestamp.</source>
          <target state="translated">タイムスタンプの変更はまったく不可能な場合があります。たとえば、 &lt;code&gt;noatime&lt;/code&gt; ファイルシステムのマウントオプションにより、アクセス時間のタイムスタンプを変更できない場合があります。</target>
        </trans-unit>
        <trans-unit id="b2d78ea62126eeb6ac9e086c6864dab2d0e3c3a1" translate="yes" xml:space="preserve">
          <source>Module Installation</source>
          <target state="translated">モジュールのインストール</target>
        </trans-unit>
        <trans-unit id="5e8ed13e4781f62782d5aa23493e665d1640aba0" translate="yes" xml:space="preserve">
          <source>Module Meta-Data (META and MYMETA)</source>
          <target state="translated">モジュールのメタデータ(METAとMYMETA)</target>
        </trans-unit>
        <trans-unit id="1454ab039736e265b3314e2865bba939a5971c09" translate="yes" xml:space="preserve">
          <source>Module Version Checking</source>
          <target state="translated">モジュールのバージョンチェック</target>
        </trans-unit>
        <trans-unit id="d108ead0085bbd00f6a4bbc9931939d7eccf7683" translate="yes" xml:space="preserve">
          <source>Module Writing</source>
          <target state="translated">モジュールの書き方</target>
        </trans-unit>
        <trans-unit id="516af6a787a862724252123e2bd3b762619e9ffe" translate="yes" xml:space="preserve">
          <source>Module authors should carefully consider whether to rely on other modules, and which modules to rely on.</source>
          <target state="translated">モジュールの作者は、他のモジュールに依存するかどうか、どのモジュールに依存するかを慎重に検討しなければなりません。</target>
        </trans-unit>
        <trans-unit id="8471831f64e1887291d945952d1e1daa28722f62" translate="yes" xml:space="preserve">
          <source>Module for manipulations of tar archives</source>
          <target state="translated">tar アーカイブを操作するためのモジュール</target>
        </trans-unit>
        <trans-unit id="e65640d58920cc799b38907083a95415ef4b8a66" translate="yes" xml:space="preserve">
          <source>Module installation tools have ways of resolving unmet dependencies but to do that they need a</source>
          <target state="translated">モジュールインストールツールには、満たされていない依存関係を解決する方法がありますが、そのためには</target>
        </trans-unit>
        <trans-unit id="b1ac20aedfee381805b19478ff3a953f19bfd201" translate="yes" xml:space="preserve">
          <source>Module name must be constant</source>
          <target state="translated">モジュール名は定数でなければなりません。</target>
        </trans-unit>
        <trans-unit id="296ea56fdcb62556504377c9806acdeebb07b6ba" translate="yes" xml:space="preserve">
          <source>Module name required with -%c option</source>
          <target state="translated">モジュール名は -%c オプションで必須</target>
        </trans-unit>
        <trans-unit id="8b521a1c525dc29431bbdbd97b08d7337321f5f4" translate="yes" xml:space="preserve">
          <source>Module tests</source>
          <target state="translated">モジュールテスト</target>
        </trans-unit>
        <trans-unit id="09c1308ed6b0c63e3397790cc4f67693af0f82c7" translate="yes" xml:space="preserve">
          <source>Module to convert pod files to HTML</source>
          <target state="translated">ポッドファイルを HTML に変換するモジュール</target>
        </trans-unit>
        <trans-unit id="15ecde6b9e55280e32d99a40c501f4e2e8c2ff44" translate="yes" xml:space="preserve">
          <source>Module to test the XS typemaps distributed with perl</source>
          <target state="translated">perlで配布されたXS型マップをテストするためのモジュール</target>
        </trans-unit>
        <trans-unit id="b97c2d8aa7bcb68996cb4a6d31701bee24ce1615" translate="yes" xml:space="preserve">
          <source>Module use may give one of the following errors during import.</source>
          <target state="translated">モジュールを使用していると、インポート時に以下のエラーが発生することがあります。</target>
        </trans-unit>
        <trans-unit id="3674e804d761cb13678499f67d99449dc4f27a48" translate="yes" xml:space="preserve">
          <source>Module.pm</source>
          <target state="translated">Module.pm</target>
        </trans-unit>
        <trans-unit id="ab9ab41c22948665a29f42a31b28aeddb3d8a91e" translate="yes" xml:space="preserve">
          <source>Module.pod</source>
          <target state="translated">Module.pod</target>
        </trans-unit>
        <trans-unit id="ae8d8ff480dfbba731116e004a9d3f57c4bd6cdb" translate="yes" xml:space="preserve">
          <source>Module::Build</source>
          <target state="translated">Module::Build</target>
        </trans-unit>
        <trans-unit id="62fb86405abcf275344b08fc9af2288d90dc6412" translate="yes" xml:space="preserve">
          <source>Module::Build 0.28 added support for &lt;code&gt;--prefix&lt;/code&gt; which works like MakeMaker's PREFIX.</source>
          <target state="translated">Module :: Build 0.28は、MakeMakerのPREFIXのように機能する &lt;code&gt;--prefix&lt;/code&gt; のサポートを追加しました。</target>
        </trans-unit>
        <trans-unit id="150dc2d2e198e343abd0bea909de778fbe14be58" translate="yes" xml:space="preserve">
          <source>Module::Build design plans</source>
          <target state="translated">モジュール::設計図の作成</target>
        </trans-unit>
        <trans-unit id="91d488d471a8bc496d78b2b13e521d55c3f0cdef" translate="yes" xml:space="preserve">
          <source>Module::Build is a project by Ken Williams to supplant MakeMaker. Its primary advantages are:</source>
          <target state="translated">Module::Build は Ken Williams 氏による MakeMaker の後継プロジェクトです。主な利点は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="6b1f0f8f3e8bc54c1732e312db2a7505d466061a" translate="yes" xml:space="preserve">
          <source>Module::Build was long the official heir apparent to MakeMaker. The rate of both its development and adoption has slowed in recent years, though, and it is unclear what the future holds for it. That said, Module::Build set the stage for</source>
          <target state="translated">Module::Build は、長い間 MakeMaker の正式な後継者として知られていました。しかし、近年は開発と採用のペースが落ちてきており、今後の展開は不透明です。とはいえ、Module::Build は</target>
        </trans-unit>
        <trans-unit id="8def62b03ff3b40aeadb216948bd496a8840b87f" translate="yes" xml:space="preserve">
          <source>Module::Build, as of 0.28, supports two ways to install to the same location as MakeMaker.</source>
          <target state="translated">Module::Build は 0.28 で、MakeMaker と同じ場所にインストールする方法をサポートしています。</target>
        </trans-unit>
        <trans-unit id="a1edaf280214fd94706296d20c3b0f2bfdf9eb59" translate="yes" xml:space="preserve">
          <source>Module::CoreList</source>
          <target state="translated">Module::CoreList</target>
        </trans-unit>
        <trans-unit id="c1eab53f65667256b290f34243d94d7ecdff687e" translate="yes" xml:space="preserve">
          <source>Module::CoreList - what modules shipped with versions of perl</source>
          <target state="translated">Module::CoreList-perl のバージョンと一緒に出荷されるモジュール</target>
        </trans-unit>
        <trans-unit id="cf24a0df2a2fe48d90f4a8337763728341cb900f" translate="yes" xml:space="preserve">
          <source>Module::CoreList currently covers the 5.000, 5.001, 5.002, 5.003_07, 5.004, 5.004_05, 5.005, 5.005_03, 5.005_04 and 5.7.3 releases of perl.</source>
          <target state="translated">Module::CoreList は現在、perl の 5.000、5.001、5.002、5.003_07、5.004、5.004_05、5.005、5.005_03、5.005_04、5.7.3 リリースをカバーしています。</target>
        </trans-unit>
        <trans-unit id="b23a69ee7bbcaf5f395d8275dba4f3efac0eee37" translate="yes" xml:space="preserve">
          <source>Module::CoreList provides information on which core and dual-life modules shipped with each version of &lt;a href=&quot;../perl&quot;&gt;perl&lt;/a&gt;.</source>
          <target state="translated">Module :: CoreListは、各バージョンの&lt;a href=&quot;../perl&quot;&gt;perlに&lt;/a&gt;同梱されているコアおよびデュアルライフモジュールに関する情報を提供します。</target>
        </trans-unit>
        <trans-unit id="734252a85fe5c8339de69573b5216ab8f0aa64b1" translate="yes" xml:space="preserve">
          <source>Module::CoreList provides information on which core and dual-life modules shipped with each version of &lt;a href=&quot;perl&quot;&gt;perl&lt;/a&gt;.</source>
          <target state="translated">Module :: CoreListは、&lt;a href=&quot;perl&quot;&gt;perlの&lt;/a&gt;各バージョンに付属しているコアモジュールとデュアルライフモジュールに関する情報を提供します。</target>
        </trans-unit>
        <trans-unit id="de86ec78c4d249d74b590b22c867ee4d58aa762e" translate="yes" xml:space="preserve">
          <source>Module::CoreList::Utils</source>
          <target state="translated">Module::CoreList::Utils</target>
        </trans-unit>
        <trans-unit id="50d08dcfe907005aefae6a40958e4b055750c23b" translate="yes" xml:space="preserve">
          <source>Module::CoreList::Utils - what utilities shipped with versions of perl</source>
          <target state="translated">Module::CoreList::Utils-perl のバージョンに同梱されているユーティリティ</target>
        </trans-unit>
        <trans-unit id="5d96066f93fab25da99dd68aa81cda10b29454b6" translate="yes" xml:space="preserve">
          <source>Module::CoreList::Utils provides information on which core and dual-life utilities shipped with each version of &lt;a href=&quot;perl&quot;&gt;perl&lt;/a&gt;.</source>
          <target state="translated">Module :: CoreList :: Utilsは、&lt;a href=&quot;perl&quot;&gt;perlの&lt;/a&gt;各バージョンに付属しているコアユーティリティとデュアルライフユーティリティに関する情報を提供します。</target>
        </trans-unit>
        <trans-unit id="e4b689d99705fdc907aba90226fb7f6ee6929e63" translate="yes" xml:space="preserve">
          <source>Module::Install</source>
          <target state="translated">Module::Install</target>
        </trans-unit>
        <trans-unit id="79bce9e07f8b204000334e6031e7ea0b0960701f" translate="yes" xml:space="preserve">
          <source>Module::Load</source>
          <target state="translated">Module::Load</target>
        </trans-unit>
        <trans-unit id="e3d85e08676b05b2e538b0685147bf01f13faa38" translate="yes" xml:space="preserve">
          <source>Module::Load - runtime require of both modules and files</source>
          <target state="translated">Module::Load-モジュールとファイルの両方を実行時に要求する</target>
        </trans-unit>
        <trans-unit id="6e16ca7f251db467f65f169ccb90bd1775b9be31" translate="yes" xml:space="preserve">
          <source>Module::Load::Conditional</source>
          <target state="translated">Module::Load::Conditional</target>
        </trans-unit>
        <trans-unit id="0333daac2dc5711d6aa41b0b76a07a8abee4d3b5" translate="yes" xml:space="preserve">
          <source>Module::Load::Conditional - Looking up module information / loading at runtime</source>
          <target state="translated">Module::Load::Conditional-モジュールの情報を調べる/実行時にロードする</target>
        </trans-unit>
        <trans-unit id="c96b8d051cb4352b076673e1abc0268f29fa107f" translate="yes" xml:space="preserve">
          <source>Module::Load::Conditional provides simple ways to query and possibly load any of the modules you have installed on your system during runtime.</source>
          <target state="translated">Module::Load::Conditional は、実行時にシステムにインストールされているモジュールを照会したり、ロードしたりする簡単な方法を提供します。</target>
        </trans-unit>
        <trans-unit id="fffd2566f2af4b448df67c2c105f5e1f1b680583" translate="yes" xml:space="preserve">
          <source>Module::Loaded</source>
          <target state="translated">Module::Loaded</target>
        </trans-unit>
        <trans-unit id="ce11901e21f211fb61728e8347b6913869d01fec" translate="yes" xml:space="preserve">
          <source>Module::Loaded - mark modules as loaded or unloaded</source>
          <target state="translated">Module::Loaded-モジュールをロードまたはアンロードとしてマークする</target>
        </trans-unit>
        <trans-unit id="bb6885dcfda6105816579eb1110d8a0af233720c" translate="yes" xml:space="preserve">
          <source>Module::Metadata</source>
          <target state="translated">Module::Metadata</target>
        </trans-unit>
        <trans-unit id="5e8e22f998099970e72ea7db019f086e11a0adef" translate="yes" xml:space="preserve">
          <source>Module::Metadata - Gather package and POD information from perl module files</source>
          <target state="translated">Module::Metadata-perl モジュールファイルからパッケージと POD 情報を収集する</target>
        </trans-unit>
        <trans-unit id="02e77c62a7e1cc7db95a64ce9a1c2d0f806647c6" translate="yes" xml:space="preserve">
          <source>Module::bootstrap()</source>
          <target state="translated">Module::bootstrap()</target>
        </trans-unit>
        <trans-unit id="04e9462c0ff02bb9032b92abd45881a3c7e15fb7" translate="yes" xml:space="preserve">
          <source>Modules</source>
          <target state="translated">Modules</target>
        </trans-unit>
        <trans-unit id="801dc9760f104617b6ed8b09b3bc552754857caf" translate="yes" xml:space="preserve">
          <source>Modules Used</source>
          <target state="translated">使用モジュール</target>
        </trans-unit>
        <trans-unit id="ba45166087559a8d4da3018515bba6d0e5511862" translate="yes" xml:space="preserve">
          <source>Modules and Extensions for Perl on OS/390</source>
          <target state="translated">OS/390上のPerl用モジュールと拡張機能</target>
        </trans-unit>
        <trans-unit id="cfe4151bcba7eda23509b603930bf7ee0bf81221" translate="yes" xml:space="preserve">
          <source>Modules are installed on a case-by-case basis (as provided by the methods described in the previous section), and in the operating system. All of these paths are stored in @INC, which you can display with the one-liner</source>
          <target state="translated">モジュールはケースバイケースで(前項で説明した方法で提供されているように)、オペレーティングシステムにインストールされます。これらのパスはすべて @INC に格納されています。</target>
        </trans-unit>
        <trans-unit id="2c98c46b9ec45777efe9604a1088b3e507328331" translate="yes" xml:space="preserve">
          <source>Modules in the</source>
          <target state="translated">のモジュール</target>
        </trans-unit>
        <trans-unit id="387c58c36e26384b5c37e68bd7e39af265275a1f" translate="yes" xml:space="preserve">
          <source>Modules know their associated Distribution objects. They always refer to the most recent official release. Developers may mark their releases as unstable development versions (by inserting an underscore into the module version number which will also be reflected in the distribution name when you run 'make dist'), so the really hottest and newest distribution is not always the default. If a module Foo circulates on CPAN in both version 1.23 and 1.23_90, CPAN.pm offers a convenient way to install version 1.23 by saying</source>
          <target state="translated">モジュールは関連するディストリビューションオブジェクトを知っています。常に最新の公式リリースを参照しています。開発者はリリースを不安定な開発バージョンとしてマークすることができます (モジュールのバージョン番号にアンダースコアを挿入することで、'make dist' を実行したときにディストリビューション名にも反映されます)ので、本当にホットで最新のディストリビューションがデフォルトとは限りません。Foo モジュールがバージョン 1.23 と 1.23_90 の両方で CPAN 上で流通している場合、CPAN.pm はバージョン 1.23 をインストールする便利な方法を提供しています。</target>
        </trans-unit>
        <trans-unit id="5f3d6f058f458ef7f23d8ca7c1fa07e5fdffa37c" translate="yes" xml:space="preserve">
          <source>Modules not available from CPAN</source>
          <target state="translated">CPANでは利用できないモジュール</target>
        </trans-unit>
        <trans-unit id="8de09ade33dff4d30d378d32e3f399e05899232c" translate="yes" xml:space="preserve">
          <source>Modules shipped as part of the Perl core live in four subdirectories. Two of these directories contain modules that live in the core, and two contain modules that can also be released separately on CPAN. Modules which can be released on cpan are known as &quot;dual-life&quot; modules.</source>
          <target state="translated">Perl コアの一部として出荷されたモジュールは、4 つのサブディレクトリにあります。これらのディレクトリのうち 2 つにはコアに含まれるモジュールが含まれ、2 つには cpan で個別にリリースできるモジュールが含まれています。cpan でリリースできるモジュールは、「デュアルライフ」モジュールとして知られています。</target>
        </trans-unit>
        <trans-unit id="e0e8aed9f80a1dc002e318b7643af4d7677ed672" translate="yes" xml:space="preserve">
          <source>Modules should be packaged using one of the standard packaging tools. Currently you have the choice between ExtUtils::MakeMaker and the more platform independent Module::Build, allowing modules to be installed in a consistent manner. When using ExtUtils::MakeMaker, you can use &quot;make dist&quot; to create your package. Tools exist to help you to build your module in a MakeMaker-friendly style. These include ExtUtils::ModuleMaker and h2xs. See also &lt;a href=&quot;perlnewmod&quot;&gt;perlnewmod&lt;/a&gt;.</source>
          <target state="translated">モジュールは、標準のパッケージツールの1つを使用してパッケージ化する必要があります。現在、ExtUtils :: MakeMakerとよりプラットフォームに依存しないModule :: Buildのどちらかを選択して、一貫した方法でモジュールをインストールできます。ExtUtils :: MakeMakerを使用する場合、「make dist」を使用してパッケージを作成できます。MakeMakerに適したスタイルでモジュールを構築するのに役立つツールが存在します。これらには、ExtUtils :: ModuleMakerおよびh2xsが含まれます。&lt;a href=&quot;perlnewmod&quot;&gt;perlnewmod&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="6eefcfbc44b095f906993d6a3ee0e852ebab6785" translate="yes" xml:space="preserve">
          <source>Modules such as &lt;a href=&quot;Path::Tiny&quot;&gt;Path::Tiny&lt;/a&gt; and &lt;a href=&quot;Tie::File&quot;&gt;Tie::File&lt;/a&gt; can help with that too. If you can, however, avoid reading the entire file at once. Perl won't give that memory back to the operating system until the process finishes.</source>
          <target state="translated">&lt;a href=&quot;Path::Tiny&quot;&gt;Path :: Tiny&lt;/a&gt;や&lt;a href=&quot;Tie::File&quot;&gt;Tie :: File&lt;/a&gt;などのモジュールもこれに役立ちます。ただし、可能であれば、ファイル全体を一度に読み取ることは避けてください。Perlは、プロセスが終了するまで、そのメモリをオペレーティングシステムに返しません。</target>
        </trans-unit>
        <trans-unit id="eba7daa98709598366c3537d2ec9862d20e4985a" translate="yes" xml:space="preserve">
          <source>Modules such as &lt;a href=&quot;http://search.cpan.org/perldoc/Path::Tiny&quot;&gt;Path::Tiny&lt;/a&gt; and &lt;a href=&quot;tie/file&quot;&gt;Tie::File&lt;/a&gt; can help with that too. If you can, however, avoid reading the entire file at once. Perl won't give that memory back to the operating system until the process finishes.</source>
          <target state="translated">&lt;a href=&quot;http://search.cpan.org/perldoc/Path::Tiny&quot;&gt;Path :: Tiny&lt;/a&gt;や&lt;a href=&quot;tie/file&quot;&gt;Tie :: File&lt;/a&gt;などのモジュールもこれに役立ちます。ただし、ファイル全体を一度に読み取ることはできません。 Perlは、プロセスが終了するまで、そのメモリをオペレーティングシステムに戻しません。</target>
        </trans-unit>
        <trans-unit id="8e39293c10b487ab181c13d36712d552c93decf5" translate="yes" xml:space="preserve">
          <source>Modules that calculate message digests</source>
          <target state="translated">メッセージダイジェストを計算するモジュール</target>
        </trans-unit>
        <trans-unit id="c5ea83baff39996a0d7cf4b745d2c4d5aed9fdd5" translate="yes" xml:space="preserve">
          <source>Modules that provide OS-specific behaviors often need to know if the current operating system matches a more generic type of operating systems. For example, 'linux' is a type of 'Unix' operating system and so is 'freebsd'.</source>
          <target state="translated">OS 固有の動作を提供するモジュールは、現在のオペレーティングシステムがより一般的なタイプのオペレーティングシステムと一致するかどうかを知る必要があることがよくあります。例えば、'linux' は 'Unix' オペレーティングシステムの一種であり、'freebsd' もそうです。</target>
        </trans-unit>
        <trans-unit id="7e640dc8698a54c30ce2b25e1b3caa6b2de29019" translate="yes" xml:space="preserve">
          <source>Modules uploaded to CPAN are tested by a variety of volunteers on different platforms. These CPAN testers are notified by mail of each new upload, and reply to the list with PASS, FAIL, NA (not applicable to this platform), or UNKNOWN (unknown), along with any relevant notations.</source>
          <target state="translated">CPANにアップロードされたモジュールは、さまざまなプラットフォーム上でさまざまなボランティアによってテストされます。これらのCPANテスターは、新しいアップロードのたびにメールで通知され、PASS,FAIL,NA (このプラットフォームには適用されません)、UNKNOWN (不明)のいずれかを、関連する表記とともにリストに返信します。</target>
        </trans-unit>
        <trans-unit id="9c1cf1fbeb1d4ad27fd965e462b1a6f05eea74e9" translate="yes" xml:space="preserve">
          <source>Modules which are &quot;stable&quot; should not break backwards compatibility without at least a long transition phase and a major change in version number.</source>
          <target state="translated">安定している」モジュールは、少なくとも長い移行フェーズとバージョン番号の大幅な変更がない限り、下位互換性を壊すべきではありません。</target>
        </trans-unit>
        <trans-unit id="d737814ec2d252aed0d9553090a83af593402cf6" translate="yes" xml:space="preserve">
          <source>Modules: Creation, Use, and Abuse</source>
          <target state="translated">モジュールの 作成、使用、乱用</target>
        </trans-unit>
        <trans-unit id="cedf0a043a8175adc7d112f8794910834f961fb1" translate="yes" xml:space="preserve">
          <source>Mohammad S Anwar &amp;lt;mohammad.anwar@yahoo.com&amp;gt;</source>
          <target state="translated">Mohammad S Anwar &amp;lt;mohammad.anwar@yahoo.com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="bf3a7ff6bdc4145b967af70ab8f39f386ae3ec49" translate="yes" xml:space="preserve">
          <source>Mojolicious</source>
          <target state="translated">Mojolicious</target>
        </trans-unit>
        <trans-unit id="9791bc4d7273587d61fef79841bd342381f5e321" translate="yes" xml:space="preserve">
          <source>Moldova</source>
          <target state="translated">Moldova</target>
        </trans-unit>
        <trans-unit id="1946c31aeef030db495b0e13ad1403e9cb0aa7a2" translate="yes" xml:space="preserve">
          <source>Moo</source>
          <target state="translated">Moo</target>
        </trans-unit>
        <trans-unit id="9fdbf7859aefc5d1a01b970f830cbc34f4ef18a9" translate="yes" xml:space="preserve">
          <source>Moose</source>
          <target state="translated">Moose</target>
        </trans-unit>
        <trans-unit id="4bab2d8fe13fa6ab57f80098b414f0f734c5dd25" translate="yes" xml:space="preserve">
          <source>More</source>
          <target state="translated">More</target>
        </trans-unit>
        <trans-unit id="5696d6a7f215fb3987b13af506efed308c8661bb" translate="yes" xml:space="preserve">
          <source>More Pod::Simple Methods</source>
          <target state="translated">その他のPod::シンプルな方法</target>
        </trans-unit>
        <trans-unit id="82e29b39da9785f5a818efe5d3fe3de6e587d533" translate="yes" xml:space="preserve">
          <source>More Problems</source>
          <target state="translated">その他の問題</target>
        </trans-unit>
        <trans-unit id="53057b4dfd56a329af03f74d8aab9d36470ceecf" translate="yes" xml:space="preserve">
          <source>More about XSUB arguments</source>
          <target state="translated">XSUBの引数の詳細</target>
        </trans-unit>
        <trans-unit id="108f2973ee0fc68f8bd1c87f7945bdef10ce9b19" translate="yes" xml:space="preserve">
          <source>More advanced specifications for parallel vs sequence run rules</source>
          <target state="translated">並列実行ルールとシーケンス実行ルールのためのより高度な仕様</target>
        </trans-unit>
        <trans-unit id="fd4e82e5da3e4dda041a0cb49fdccc789d8158c0" translate="yes" xml:space="preserve">
          <source>More complete API.</source>
          <target state="translated">より完全なAPI。</target>
        </trans-unit>
        <trans-unit id="efa61b2946cd3153b1a26ff99517443d74f92f4b" translate="yes" xml:space="preserve">
          <source>More complex cases will require to write a parser, probably using a parsing module from CPAN, like &lt;a href=&quot;Regexp::Grammars&quot;&gt;Regexp::Grammars&lt;/a&gt;, &lt;a href=&quot;Parse::RecDescent&quot;&gt;Parse::RecDescent&lt;/a&gt;, &lt;a href=&quot;Parse::Yapp&quot;&gt;Parse::Yapp&lt;/a&gt;, &lt;a href=&quot;Text::Balanced&quot;&gt;Text::Balanced&lt;/a&gt;, or &lt;a href=&quot;Marpa::R2&quot;&gt;Marpa::R2&lt;/a&gt;.</source>
          <target state="translated">より複雑なケースでは、おそらく&lt;a href=&quot;Regexp::Grammars&quot;&gt;Regexp :: Grammars&lt;/a&gt;、&lt;a href=&quot;Parse::RecDescent&quot;&gt;Parse :: RecDescent&lt;/a&gt;、&lt;a href=&quot;Parse::Yapp&quot;&gt;Parse :: Yapp&lt;/a&gt;、&lt;a href=&quot;Text::Balanced&quot;&gt;Text :: Balanced&lt;/a&gt;、&lt;a href=&quot;Marpa::R2&quot;&gt;Marpa :: R2&lt;/a&gt;などのCPANの解析モジュールを使用して、パーサーを作成する必要があります。</target>
        </trans-unit>
        <trans-unit id="13a55c80ed5c83f1c889c62320fc4a034a2333c3" translate="yes" xml:space="preserve">
          <source>More complex cases will require to write a parser, probably using a parsing module from CPAN, like &lt;a href=&quot;http://search.cpan.org/perldoc/Regexp::Grammars&quot;&gt;Regexp::Grammars&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/Parse::RecDescent&quot;&gt;Parse::RecDescent&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/Parse::Yapp&quot;&gt;Parse::Yapp&lt;/a&gt;, &lt;a href=&quot;text/balanced&quot;&gt;Text::Balanced&lt;/a&gt;, or &lt;a href=&quot;http://search.cpan.org/perldoc/Marpa::R2&quot;&gt;Marpa::R2&lt;/a&gt;.</source>
          <target state="translated">より複雑なケースでは、おそらく&lt;a href=&quot;http://search.cpan.org/perldoc/Regexp::Grammars&quot;&gt;Regexp :: Grammars&lt;/a&gt;、&lt;a href=&quot;http://search.cpan.org/perldoc/Parse::RecDescent&quot;&gt;Parse :: RecDescent&lt;/a&gt;、&lt;a href=&quot;http://search.cpan.org/perldoc/Parse::Yapp&quot;&gt;Parse :: Yapp&lt;/a&gt;、&lt;a href=&quot;text/balanced&quot;&gt;Text :: Balanced&lt;/a&gt;、または&lt;a href=&quot;http://search.cpan.org/perldoc/Marpa::R2&quot;&gt;Marpa :: R2&lt;/a&gt;などのCPANの解析モジュールを使用して、パーサーを作成する必要があります。</target>
        </trans-unit>
        <trans-unit id="b11b4dd1cd41cf4f86d96c0b775f01a4fba8ea41" translate="yes" xml:space="preserve">
          <source>More complex data types can be constructed using references, which allow you to build lists and hashes within lists and hashes.</source>
          <target state="translated">より複雑なデータ型は参照を使用して構築することができ、リストやハッシュの中にリストやハッシュを構築することができます。</target>
        </trans-unit>
        <trans-unit id="4020daf37582247db604f50a3dd13402fd4a026e" translate="yes" xml:space="preserve">
          <source>More complex regular expressions</source>
          <target state="translated">より複雑な正規表現</target>
        </trans-unit>
        <trans-unit id="22de1dce99fa44a08c2393686bc2b8372b954725" translate="yes" xml:space="preserve">
          <source>More complex sub-classes may have to replicate more of the logic internal of Math::BigInt if they need to change more basic behaviors. A subclass that needs to merely change the output only needs to overload &lt;code&gt;bstr()&lt;/code&gt; .</source>
          <target state="translated">より基本的な動作を変更する必要がある場合、より複雑なサブクラスは、Math :: BigIntの内部のロジックをより多く複製する必要がある場合があります。出力を単に変更する必要があるサブクラスは、 &lt;code&gt;bstr()&lt;/code&gt; をオーバーロードするだけで済みます。</target>
        </trans-unit>
        <trans-unit id="756589b88b61cce058613ae89757234c6572a356" translate="yes" xml:space="preserve">
          <source>More complex sub-classes may have to replicate more of the logic internal of Math::BigInt if they need to change more basic behaviors. A subclass that needs to merely change the output only needs to overload &lt;code&gt;bstr()&lt;/code&gt;.</source>
          <target state="translated">より複雑なサブクラスは、より基本的な動作を変更する必要がある場合、Math :: BigIntの内部ロジックをより多く複製する必要がある場合があります。出力を変更するだけでよいサブクラスは、 &lt;code&gt;bstr()&lt;/code&gt; をオーバーロードするだけで済みます。</target>
        </trans-unit>
        <trans-unit id="79f15d6cc7c0d2273ae329858641605f6bede3c4" translate="yes" xml:space="preserve">
          <source>More complicated XSUBs may contain many other sections. Each section of an XSUB starts with the corresponding keyword, such as INIT: or CLEANUP:. However, the first two lines of an XSUB always contain the same data: descriptions of the return type and the names of the function and its parameters. Whatever immediately follows these is considered to be an INPUT: section unless explicitly marked with another keyword. (See &lt;a href=&quot;#The-INPUT%3A-Keyword&quot;&gt;&quot;The INPUT: Keyword&quot;&lt;/a&gt;.)</source>
          <target state="translated">より複雑なXSUBには、他の多くのセクションが含まれる場合があります。XSUBの各セクションは、INIT：やCLEANUP：などの対応するキーワードで始まります。ただし、XSUBの最初の2行には、常に同じデータが含まれています。戻り値の型の説明と、関数の名前とそのパラメーターです。これらの直後に続くものは、別のキーワードで明示的にマークされていない限り、INPUT：セクションと見なされます。（&lt;a href=&quot;#The-INPUT%3A-Keyword&quot;&gt;「入力：キーワード」を&lt;/a&gt;参照してください。）</target>
        </trans-unit>
        <trans-unit id="2fbe3042a0cc3a612b8a82908d39dc629d888d5d" translate="yes" xml:space="preserve">
          <source>More complicated XSUBs may contain many other sections. Each section of an XSUB starts with the corresponding keyword, such as INIT: or CLEANUP:. However, the first two lines of an XSUB always contain the same data: descriptions of the return type and the names of the function and its parameters. Whatever immediately follows these is considered to be an INPUT: section unless explicitly marked with another keyword. (See &lt;a href=&quot;#The-INPUT%3a-Keyword&quot;&gt;The INPUT: Keyword&lt;/a&gt;.)</source>
          <target state="translated">より複雑なXSUBには他の多くのセクションが含まれる場合があります。XSUBの各セクションは、対応するキーワード（INIT：やCLEANUP：など）で始まります。ただし、XSUBの最初の2行には常に同じデータが含まれています。戻り値の型の説明と、関数とそのパラメーターの名前です。これらの直後に続くものは、明示的に別のキーワードでマークされていない限り、INPUT：セクションと見なされます。（「&lt;a href=&quot;#The-INPUT%3a-Keyword&quot;&gt;入力：キーワード&lt;/a&gt;」を参照してください。）</target>
        </trans-unit>
        <trans-unit id="d66d0268f9a384b521bc030afaac1581d909de98" translate="yes" xml:space="preserve">
          <source>More confusing options than you can shake a big stick at! It's not as bad as it looks and it's very useful to know more about all of it, and fun too!</source>
          <target state="translated">大きな棒を振りかざすよりも紛らわしいオプションがたくさん! 見た目ほど悪くはないし、そのすべてを知ることができるのはとても便利だし、楽しいですよ</target>
        </trans-unit>
        <trans-unit id="526d1ff4132ac0e34dbd3812351d44fc0c1c9026" translate="yes" xml:space="preserve">
          <source>More detail on each of the modifiers follows. Most likely you don't need to know this detail for &lt;code&gt;/l&lt;/code&gt; , &lt;code&gt;/u&lt;/code&gt; , and &lt;code&gt;/d&lt;/code&gt;, and can skip ahead to &lt;a href=&quot;#%2fa-(and-%2faa)&quot;&gt;/a&lt;/a&gt;.</source>
          <target state="translated">各修飾子の詳細は次のとおりです。ほとんどの場合、 &lt;code&gt;/l&lt;/code&gt; 、 &lt;code&gt;/u&lt;/code&gt; 、および &lt;code&gt;/d&lt;/code&gt; についてこの詳細を知る必要はなく、スキップして&lt;a href=&quot;#%2fa-(and-%2faa)&quot;&gt;/ aに&lt;/a&gt;進むことができます。</target>
        </trans-unit>
        <trans-unit id="2b6f6bf6105714de1c120dd3b291d9add613ebf8" translate="yes" xml:space="preserve">
          <source>More detail on each of the modifiers follows. Most likely you don't need to know this detail for &lt;code&gt;/l&lt;/code&gt;, &lt;code&gt;/u&lt;/code&gt;, and &lt;code&gt;/d&lt;/code&gt;, and can skip ahead to &lt;a href=&quot;#%2Fa-%28and-%2Faa%29&quot;&gt;/a&lt;/a&gt;.</source>
          <target state="translated">各修飾子の詳細は次のとおりです。ほとんどの場合、あなたは、この詳細について知っている必要はありません &lt;code&gt;/l&lt;/code&gt; 、 &lt;code&gt;/u&lt;/code&gt; 、および &lt;code&gt;/d&lt;/code&gt; は、とに進むことができ&lt;a href=&quot;#%2Fa-%28and-%2Faa%29&quot;&gt;/&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d5d17cbfc12e087be467835457f4aeb7c6f18f60" translate="yes" xml:space="preserve">
          <source>More detailed example</source>
          <target state="translated">より詳細な例</target>
        </trans-unit>
        <trans-unit id="f2fe550e6e93ebe700899518f39fbee8a6928544" translate="yes" xml:space="preserve">
          <source>More detailed information about Perl syntax can be found in &lt;a href=&quot;perlsyn&quot;&gt;perlsyn&lt;/a&gt;.</source>
          <target state="translated">Perl構文の詳細については、&lt;a href=&quot;perlsyn&quot;&gt;perlsynを参照&lt;/a&gt;してください。</target>
        </trans-unit>
        <trans-unit id="d4d020339877fe2163d2f4652ee795295ae937b6" translate="yes" xml:space="preserve">
          <source>More details on hacking the Perl core. This document focuses on lower level details such as how to write tests, compilation issues, portability, debugging, etc.</source>
          <target state="translated">Perl コアのハッキングに関する詳細。このドキュメントでは、テストの書き方、コンパイルの問題、移植性、デバッグなどの低レベルの詳細に焦点を当てています。</target>
        </trans-unit>
        <trans-unit id="5f269e55bd34be0e508b0040a6ba9834ce17dd8a" translate="yes" xml:space="preserve">
          <source>More details on the categories used by Perl are given below in &lt;a href=&quot;#LOCALE-CATEGORIES&quot;&gt;&quot;LOCALE CATEGORIES&quot;&lt;/a&gt;.</source>
          <target state="translated">Perlで使用されるカテゴリの詳細については、以下の&lt;a href=&quot;#LOCALE-CATEGORIES&quot;&gt;「ロケールカテゴリ」を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="e8bbc3f15f8c3d6fccfab2c6f797ecddb3a71815" translate="yes" xml:space="preserve">
          <source>More details on the categories used by Perl are given below in &lt;a href=&quot;#LOCALE-CATEGORIES&quot;&gt;LOCALE CATEGORIES&lt;/a&gt;.</source>
          <target state="translated">Perlが使用するカテゴリの詳細については、以下の&lt;a href=&quot;#LOCALE-CATEGORIES&quot;&gt;LOCALE CATEGORIESを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="f8e3c44663c4ead5df55d85ed7952e7012ae119b" translate="yes" xml:space="preserve">
          <source>More examples of different modes in action:</source>
          <target state="translated">行動中の異なるモードの例をもっと見てみましょう。</target>
        </trans-unit>
        <trans-unit id="08965269be31a1f77226663d4b16152886fa2985" translate="yes" xml:space="preserve">
          <source>More examples:</source>
          <target state="translated">その他の例。</target>
        </trans-unit>
        <trans-unit id="58b102e56a8f6f1fc1426db346097f8c24db1a1b" translate="yes" xml:space="preserve">
          <source>More flags to pass to the &lt;code&gt;getaddrinfo()&lt;/code&gt; function. If not supplied, a default of &lt;code&gt;AI_ADDRCONFIG&lt;/code&gt; will be used.</source>
          <target state="translated">&lt;code&gt;getaddrinfo()&lt;/code&gt; 関数に渡すフラグが増えました。指定しない場合、デフォルトの &lt;code&gt;AI_ADDRCONFIG&lt;/code&gt; が使用されます。</target>
        </trans-unit>
        <trans-unit id="abe7c3d7dc58312e0a715568eb7fe1648b80945e" translate="yes" xml:space="preserve">
          <source>More formally, &lt;code&gt;\p{Uppercase}&lt;/code&gt; matches any single character whose Unicode &lt;code&gt;Uppercase&lt;/code&gt; property value is &lt;code&gt;True&lt;/code&gt; , and &lt;code&gt;\P{Uppercase}&lt;/code&gt; matches any character whose &lt;code&gt;Uppercase&lt;/code&gt; property value is &lt;code&gt;False&lt;/code&gt; , and they could have been written as &lt;code&gt;\p{Uppercase=True}&lt;/code&gt; and &lt;code&gt;\p{Uppercase=False}&lt;/code&gt; , respectively.</source>
          <target state="translated">より正式には、 &lt;code&gt;\p{Uppercase}&lt;/code&gt; 、Unicodeの &lt;code&gt;Uppercase&lt;/code&gt; プロパティ値が &lt;code&gt;True&lt;/code&gt; である任意の1文字と一致し、 &lt;code&gt;\P{Uppercase}&lt;/code&gt; は、 &lt;code&gt;Uppercase&lt;/code&gt; プロパティ値が &lt;code&gt;False&lt;/code&gt; である任意の文字と一致し、 &lt;code&gt;\p{Uppercase=True}&lt;/code&gt; として記述されている可能性があります。および &lt;code&gt;\p{Uppercase=False}&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="950f5b581b5e9dd9bda925ea96c7e3efb17146e5" translate="yes" xml:space="preserve">
          <source>More formally, &lt;code&gt;\p{Uppercase}&lt;/code&gt; matches any single character whose Unicode &lt;code&gt;Uppercase&lt;/code&gt; property value is &lt;code&gt;True&lt;/code&gt;, and &lt;code&gt;\P{Uppercase}&lt;/code&gt; matches any character whose &lt;code&gt;Uppercase&lt;/code&gt; property value is &lt;code&gt;False&lt;/code&gt;, and they could have been written as &lt;code&gt;\p{Uppercase=True}&lt;/code&gt; and &lt;code&gt;\p{Uppercase=False}&lt;/code&gt;, respectively.</source>
          <target state="translated">より正式には、 &lt;code&gt;\p{Uppercase}&lt;/code&gt; はUnicode &lt;code&gt;Uppercase&lt;/code&gt; プロパティ値が &lt;code&gt;True&lt;/code&gt; の任意の単一文字に一致し、 &lt;code&gt;\P{Uppercase}&lt;/code&gt; は &lt;code&gt;Uppercase&lt;/code&gt; プロパティ値が &lt;code&gt;False&lt;/code&gt; の任意の文字に一致し、 &lt;code&gt;\p{Uppercase=True}&lt;/code&gt; 記述できます。および &lt;code&gt;\p{Uppercase=False}&lt;/code&gt; 、それぞれ。</target>
        </trans-unit>
        <trans-unit id="27451c770878f49944a4e46db9a7b7a2c5c07101" translate="yes" xml:space="preserve">
          <source>More formally, it will be false if anything has happened which makes it impossible for the test suite to pass. True otherwise.</source>
          <target state="translated">より正式には、テストスイートを通過できないようなことが起きた場合には false となります。そうでなければ真です。</target>
        </trans-unit>
        <trans-unit id="e4f15e11fdfe41914601fd2b52ca88c4e0b2db11" translate="yes" xml:space="preserve">
          <source>More fun with &lt;code&gt;?{}&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;?{}&lt;/code&gt; でもっと楽しく：</target>
        </trans-unit>
        <trans-unit id="3d785a8d06f0122559b61ab5ff5e1ae77216b585" translate="yes" xml:space="preserve">
          <source>More generally, &lt;code&gt;\&lt;i&gt;nnn&lt;/i&gt;&lt;/code&gt;, where</source>
          <target state="translated">より一般的には、 &lt;code&gt;\&lt;i&gt;nnn&lt;/i&gt;&lt;/code&gt; 、ここで</target>
        </trans-unit>
        <trans-unit id="4da98cf1b684d1edc72215ded0f14b15a6f1b445" translate="yes" xml:space="preserve">
          <source>More important (and less obvious) is the necessity of garbage collection. When a normal object dies, anything stored in the object body is garbage-collected by perl. With inside-out objects, Perl knows nothing about the data stored in field hashes by a class, but these must be deleted when the object goes out of scope. Thus the class must provide a &lt;code&gt;DESTROY&lt;/code&gt; method to take care of that.</source>
          <target state="translated">より重要な（そしてそれほど明白ではない）ガベージコレクションの必要性です。通常のオブジェクトが死ぬと、オブジェクトの本体に格納されているものはすべてperlによってガベージコレクションされます。裏返しオブジェクトの場合、Perlはクラスによってフィールドハッシュに格納されているデータについて何も知りませんが、オブジェクトがスコープ外になった場合は削除する必要があります。したがって、クラスはそれを処理する &lt;code&gt;DESTROY&lt;/code&gt; メソッドを提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="4232744f447684a298c82dce2791eb6cf2ae4bde" translate="yes" xml:space="preserve">
          <source>More importantly, you assume</source>
          <target state="translated">もっと重要なのは、あなたが想定していることです。</target>
        </trans-unit>
        <trans-unit id="dbb4a7aa9653e873e873e3d4f83808761932aa49" translate="yes" xml:space="preserve">
          <source>More information on the terminal capabilities will be found in the termcap manpage on most Unix-like systems.</source>
          <target state="translated">ターミナルの機能についての詳細な情報は、ほとんどの Unix ライクなシステムの termcap man ページにあります。</target>
        </trans-unit>
        <trans-unit id="aa9cc3109d4e7c580c76561d1b8bded0209caf69" translate="yes" xml:space="preserve">
          <source>More layers than just the encoding can be specified here. For example, the incantation &lt;code&gt;&quot;:raw :encoding(UTF-16LE) :crlf&quot;&lt;/code&gt; includes implicit CRLF handling.</source>
          <target state="translated">ここでは、エンコーディング以外のレイヤも指定できます。たとえば、 &lt;code&gt;&quot;:raw :encoding(UTF-16LE) :crlf&quot;&lt;/code&gt; は、暗黙的なCRLF処理を含みます。</target>
        </trans-unit>
        <trans-unit id="e8d55c7fe7068672e98b5466a50eadff1658752a" translate="yes" xml:space="preserve">
          <source>More likely, &lt;code&gt;$svAccess&lt;/code&gt; is a string describing the generic type of access you desire and possibly the file creation options to use. In this case, &lt;code&gt;$svAccess&lt;/code&gt; should contain zero or more characters from &lt;code&gt;&quot;qrw&quot;&lt;/code&gt; [access desired], zero or one character each from &lt;code&gt;&quot;ktn&quot;&lt;/code&gt; and &lt;code&gt;&quot;ce&quot;&lt;/code&gt;, and optional white space. These letters stand for, respectively, &quot;Query access&quot;, &quot;Read access&quot;, &quot;Write access&quot;, &quot;Keep if exists&quot;, &quot;Truncate if exists&quot;, &quot;New file only&quot;, &quot;Create if none&quot;, and &quot;Existing file only&quot;. Case is ignored.</source>
          <target state="translated">多くの場合、 &lt;code&gt;$svAccess&lt;/code&gt; は、必要なアクセスの一般的なタイプと、場合によっては使用するファイル作成オプションを説明する文字列です。この場合、 &lt;code&gt;$svAccess&lt;/code&gt; は、 &lt;code&gt;&quot;qrw&quot;&lt;/code&gt; [アクセス希望]の0文字以上、 &lt;code&gt;&quot;ktn&quot;&lt;/code&gt; と &lt;code&gt;&quot;ce&quot;&lt;/code&gt; それぞれ0文字または1文字、およびオプションの空白を含める必要があります。これらの文字は、それぞれ「クエリアクセス」、「読み取りアクセス」、「書き込みアクセス」、「存在する場合は保持」、「存在する場合は切り捨て」、「新しいファイルのみ」、「存在しない場合は作成」、「既存のファイル」を表します。のみ&quot;。大文字と小文字は区別されません。</target>
        </trans-unit>
        <trans-unit id="c7d270a53a536b611473a25cb95f7037520a02f0" translate="yes" xml:space="preserve">
          <source>More matching</source>
          <target state="translated">より多くのマッチング</target>
        </trans-unit>
        <trans-unit id="b707ad370452316dedfbb6479f84b90feffeb14b" translate="yes" xml:space="preserve">
          <source>More on characters, strings, and character classes</source>
          <target state="translated">文字、文字列、文字クラスの詳細</target>
        </trans-unit>
        <trans-unit id="0e20dff8fe6d2b34d7e4d4cac19464fdb760259e" translate="yes" xml:space="preserve">
          <source>More sophisticated example:</source>
          <target state="translated">より洗練された例。</target>
        </trans-unit>
        <trans-unit id="969a983581a527717c64f4e926ceeb9fb3c1079b" translate="yes" xml:space="preserve">
          <source>More testing functions! Once you outgrow Test::Simple, look at &lt;a href=&quot;Test::More&quot;&gt;Test::More&lt;/a&gt;. Test::Simple is 100% forward compatible with &lt;a href=&quot;Test::More&quot;&gt;Test::More&lt;/a&gt; (i.e. you can just use &lt;a href=&quot;Test::More&quot;&gt;Test::More&lt;/a&gt; instead of Test::Simple in your programs and things will still work).</source>
          <target state="translated">より多くのテスト機能！Test :: Simpleを超えたら、&lt;a href=&quot;Test::More&quot;&gt;Test :: Moreを&lt;/a&gt;見てください。Test :: Simpleは、&lt;a href=&quot;Test::More&quot;&gt;Test :: More&lt;/a&gt;と100％上位互換性があります（つまり、プログラムでTest :: Simpleの代わりにTest :: &lt;a href=&quot;Test::More&quot;&gt;Moreを&lt;/a&gt;使用するだけで、引き続き機能します）。</target>
        </trans-unit>
        <trans-unit id="58cc9a8a265ceaaf00e7a02c5fa1c3956c64ee64" translate="yes" xml:space="preserve">
          <source>More testing functions! Once you outgrow Test::Simple, look at &lt;a href=&quot;more&quot;&gt;Test::More&lt;/a&gt;. Test::Simple is 100% forward compatible with &lt;a href=&quot;more&quot;&gt;Test::More&lt;/a&gt; (i.e. you can just use &lt;a href=&quot;more&quot;&gt;Test::More&lt;/a&gt; instead of Test::Simple in your programs and things will still work).</source>
          <target state="translated">その他のテスト機能！Test :: Simpleを超えたら、&lt;a href=&quot;more&quot;&gt;Test :: Moreを&lt;/a&gt;見てください。Test :: Simpleは、&lt;a href=&quot;more&quot;&gt;Test :: More&lt;/a&gt;と100％前方互換性があります（つまり、プログラムでTest :: Simpleの代わりにTest :: &lt;a href=&quot;more&quot;&gt;Moreを&lt;/a&gt;使用するだけで問題は解決します）。</target>
        </trans-unit>
        <trans-unit id="dca60a28cf5bfac5c3931dc141dffe59abb6ab5a" translate="yes" xml:space="preserve">
          <source>More tests.</source>
          <target state="translated">もっとテストを</target>
        </trans-unit>
        <trans-unit id="280bbf061032f32980db94b9cf615b5506c7b962" translate="yes" xml:space="preserve">
          <source>More tests. (Stuff I didn't think of yet.)</source>
          <target state="translated">もっとテストを。(まだ考えていなかったこと)</target>
        </trans-unit>
        <trans-unit id="6f210a3f7fd112870193ebdf353aec3e59ed0eb5" translate="yes" xml:space="preserve">
          <source>More than one argument to '%s' open</source>
          <target state="translated">s' の複数の引数が開いています。</target>
        </trans-unit>
        <trans-unit id="cfb0a049a65b7b6c69262ebd324033d41d896fe4" translate="yes" xml:space="preserve">
          <source>More than one plan</source>
          <target state="translated">複数のプラン</target>
        </trans-unit>
        <trans-unit id="de0e63649914291795f2314152800444162a6954" translate="yes" xml:space="preserve">
          <source>Moreover, a third possibility may even be simpler than anything discussed above: &quot;Just require that all possible (or at least applicable) forms be provided in the call to the given language's quant method, as in:&quot;</source>
          <target state="translated">さらに、3つ目の可能性は、上で議論したものよりもさらに単純かもしれません。&quot;与えられた言語のクオンツメソッドを呼び出す際に、すべての可能な(あるいは少なくとも適用可能な)形式が提供されることを要求するだけです。</target>
        </trans-unit>
        <trans-unit id="371109ba4b8859f3e3185200282a3a250ce94866" translate="yes" xml:space="preserve">
          <source>Moreover, inside &lt;code&gt;(?{BLOCK})&lt;/code&gt;, &lt;code&gt;(?# comment )&lt;/code&gt;, and a &lt;code&gt;#&lt;/code&gt; -comment in a &lt;code&gt;/x&lt;/code&gt;-regular expression, no processing is performed whatsoever. This is the first step at which the presence of the &lt;code&gt;/x&lt;/code&gt; modifier is relevant.</source>
          <target state="translated">また、 &lt;code&gt;(?{BLOCK})&lt;/code&gt; 、 &lt;code&gt;(?# comment )&lt;/code&gt; 、および &lt;code&gt;/x&lt;/code&gt; -正規表現の &lt;code&gt;#&lt;/code&gt; -コメントの中では、何も処理されません。これは、 &lt;code&gt;/x&lt;/code&gt; 修飾子の存在が関連する最初のステップです。</target>
        </trans-unit>
        <trans-unit id="8b50b703e8f733eb18bd373161aa2549aa4cf9d1" translate="yes" xml:space="preserve">
          <source>Moreover, inside &lt;code&gt;(?{BLOCK})&lt;/code&gt;, &lt;code&gt;(?# comment )&lt;/code&gt;, and a &lt;code&gt;#&lt;/code&gt;-comment in a &lt;code&gt;/x&lt;/code&gt;-regular expression, no processing is performed whatsoever. This is the first step at which the presence of the &lt;code&gt;/x&lt;/code&gt; modifier is relevant.</source>
          <target state="translated">また、内部 &lt;code&gt;(?{BLOCK})&lt;/code&gt; 、（？＃ &lt;code&gt;(?# comment )&lt;/code&gt; 、および &lt;code&gt;#&lt;/code&gt; -commentにおけるA &lt;code&gt;/x&lt;/code&gt; -regular発現は、何も処理は一切行われません。これは、 &lt;code&gt;/x&lt;/code&gt; 修飾子の存在が関連する最初のステップです。</target>
        </trans-unit>
        <trans-unit id="766af651754c70019b0147c9aabb389875f6513e" translate="yes" xml:space="preserve">
          <source>Moreover, the Perl interpreter itself has had serious bugs involving fatalized warnings. For a summary of resolved and unresolved problems as of January 2015, please see &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.nntp.perl.org%2fgroup%2fperl.perl5.porters%2f2015%2f01%2fmsg225235.html&quot;&gt;this perl5-porters post&lt;/a&gt;.</source>
          <target state="translated">さらに、Perlインタープリター自体にも、致命的な警告に関する深刻なバグがあります。2015年1月現在の解決済みおよび未解決の問題の概要については、&lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.nntp.perl.org%2fgroup%2fperl.perl5.porters%2f2015%2f01%2fmsg225235.html&quot;&gt;このperl5-portersの投稿&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="eeff5d75841a1da3989f3e49cb3c5fb4a15531c1" translate="yes" xml:space="preserve">
          <source>Moreover, the Perl interpreter itself has had serious bugs involving fatalized warnings. For a summary of resolved and unresolved problems as of January 2015, please see &lt;a href=&quot;http://www.nntp.perl.org/group/perl.perl5.porters/2015/01/msg225235.html&quot;&gt;this perl5-porters post&lt;/a&gt;.</source>
          <target state="translated">さらに、Perlインタープリター自体には、致命的な警告を含む重大なバグがありました。2015年1月の時点で解決済みおよび未解決の問題の概要については、&lt;a href=&quot;http://www.nntp.perl.org/group/perl.perl5.porters/2015/01/msg225235.html&quot;&gt;このperl5-portersの投稿&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="71781bd1796397c70432d8ed26a8fe5878ffc4aa" translate="yes" xml:space="preserve">
          <source>Moreover, users may expect this:</source>
          <target state="translated">さらに、ユーザーはこれを期待しているのではないでしょうか。</target>
        </trans-unit>
        <trans-unit id="7d0005685b4ea3ed15fd588977e2973569a7d7be" translate="yes" xml:space="preserve">
          <source>Mortal references are mainly used for xVs that are placed on perl's main stack. The stack is problematic for reference tracking, because it contains a lot of xV references, but doesn't own those references: they are not counted. Currently, there are many bugs resulting from xVs being destroyed while referenced by the stack, because the stack's uncounted references aren't enough to keep the xVs alive. So when putting an (uncounted) reference on the stack, it is vitally important to ensure that there will be a counted reference to the same xV that will last at least as long as the uncounted reference. But it's also important that that counted reference be cleaned up at an appropriate time, and not unduly prolong the xV's life. For there to be a mortal reference is often the best way to satisfy this requirement, especially if the xV was created especially to be put on the stack and would otherwise be unreferenced.</source>
          <target state="translated">Mortal 参照は主に perl のメインスタックに置かれた xV に使用されます。スタックは多くの xV 参照を含んでいますが、それらの参照を所有しているわけではないので、参照の追跡には問題があります:それらはカウントされません。現在のところ、スタックで参照されている間に xV が破壊されてしまうというバグがたくさんありますが、これはスタックのカウントされていない参照だけでは xV を維持するのに十分ではないからです。そのため、スタックに(カウントされていない)参照を置くとき、同じ xV へのカウントされた参照が、少なくともカウントされていない参照と同じくらい長く続くことを保証することが非常に重要です。しかし、そのカウントされた参照が適切なタイミングでクリーンアップされ、xVの寿命を過度に延長しないことも重要です。特に xV がスタックに置かれるために特別に作成されたもので、そうでなければ参照されないものである場合は、死亡時の参照が存在することがこの要件を満たす最善の方法であることが多い。</target>
        </trans-unit>
        <trans-unit id="fd0ec74af25710eb89dcb326b64083f39f30db7a" translate="yes" xml:space="preserve">
          <source>Most &lt;code&gt;&lt;a href=&quot;functions/socket&quot;&gt;socket()&lt;/a&gt;&lt;/code&gt; related calls are supported, but they may not behave as on Unix platforms. See &lt;a href=&quot;perlport&quot;&gt;perlport&lt;/a&gt; for the full list.</source>
          <target state="translated">ほとんどの &lt;code&gt;&lt;a href=&quot;functions/socket&quot;&gt;socket()&lt;/a&gt;&lt;/code&gt; 関連の呼び出しがサポートされていますが、Unixプラットフォームのように動作しない場合があります。完全なリストについては&lt;a href=&quot;perlport&quot;&gt;perlport&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="8bd7ca1c6bc950dfa343636c44e8a991660d9872" translate="yes" xml:space="preserve">
          <source>Most &lt;code&gt;Config&lt;/code&gt; variables are determined by the &lt;code&gt;Configure&lt;/code&gt; script on platforms supported by it (which is most UNIX platforms). Some platforms have custom-made &lt;code&gt;Config&lt;/code&gt; variables, and may thus not have some of the variables described below, or may have extraneous variables specific to that particular port. See the port specific documentation in such cases.</source>
          <target state="translated">ほとんどの &lt;code&gt;Config&lt;/code&gt; 変数は、それがサポートするプラットフォーム（ほとんどのUNIXプラットフォーム）の &lt;code&gt;Configure&lt;/code&gt; スクリプトによって決定されます。一部のプラットフォームにはカスタム &lt;code&gt;Config&lt;/code&gt; 変数があり、以下に説明する変数の一部がない場合や、特定のポートに固有の無関係な変数がある場合があります。このような場合は、ポート固有のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="28f2f1dbf78786489093dd79f20f32255da8bbeb" translate="yes" xml:space="preserve">
          <source>Most &lt;code&gt;socket()&lt;/code&gt; related calls are supported, but they may not behave as on Unix platforms. See &lt;a href=&quot;perlport&quot;&gt;perlport&lt;/a&gt; for the full list.</source>
          <target state="translated">ほとんどの &lt;code&gt;socket()&lt;/code&gt; 関連の呼び出しがサポートされていますが、Unixプラットフォームのように動作しない場合があります。完全なリストについては、&lt;a href=&quot;perlport&quot;&gt;perlport&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="3cb850eec5c7ca91283476032e5d18060f62e376" translate="yes" xml:space="preserve">
          <source>Most OS have a maximum command length they can execute at once. Large modules can easily generate commands well past that limit. Its necessary to split long commands up into a series of shorter commands.</source>
          <target state="translated">ほとんどのOSには、一度に実行できるコマンドの長さの上限があります。大規模なモジュールでは、その上限をはるかに超えたコマンドを簡単に生成することができます。そのため、長いコマンドを短いコマンドに分割する必要があります。</target>
        </trans-unit>
        <trans-unit id="c9a73cc9d93ff9ac0d82b0de181da65c3c3f7d7f" translate="yes" xml:space="preserve">
          <source>Most Operating Systems record time as the number of seconds since a certain date. This date is the beginning of the epoch. Unix's starts at midnight January 1st, 1970 GMT.</source>
          <target state="translated">ほとんどのオペレーティングシステムでは、時間はある日付からの秒数として記録されます。この日付がエポックの始まりです。Unixは1970年1月1日のグリニッジ標準時の真夜中から始まります。</target>
        </trans-unit>
        <trans-unit id="87aec58e27c477535ee7ea89c7549f2b78b3f922" translate="yes" xml:space="preserve">
          <source>Most POSIX character classes have two Unicode-style &lt;code&gt;\p&lt;/code&gt; property counterparts. (They are not official Unicode properties, but Perl extensions derived from official Unicode properties.) The table below shows the relation between POSIX character classes and these counterparts.</source>
          <target state="translated">ほとんどのPOSIX文字クラスには、Unicodeスタイルの &lt;code&gt;\p&lt;/code&gt; プロパティが2つあります。（これらは公式のUnicodeプロパティではなく、公式のUnicodeプロパティから派生したPerl拡張です。）以下の表は、POSIX文字クラスとこれらの対応物との関係を示しています。</target>
        </trans-unit>
        <trans-unit id="937bd5a8c80916c93da68ee3bf243ef6728b4836" translate="yes" xml:space="preserve">
          <source>Most Perl Web Frameworks will have a mechanism for doing this, using the &lt;a href=&quot;catalyst&quot;&gt;Catalyst&lt;/a&gt; framework it would be:</source>
          <target state="translated">ほとんどの&lt;a href=&quot;catalyst&quot;&gt;PerlWeb&lt;/a&gt;フレームワークには、Catalystフレームワークを使用して、これを行うためのメカニズムがあります。</target>
        </trans-unit>
        <trans-unit id="dc62d968e4cf48df873bc6b26766e14aed8bb9a1" translate="yes" xml:space="preserve">
          <source>Most Perl Web Frameworks will have a mechanism for doing this, using the &lt;a href=&quot;http://search.cpan.org/perldoc/Catalyst&quot;&gt;Catalyst&lt;/a&gt; framework it would be:</source>
          <target state="translated">ほとんどのPerl Webフレームワークには、これを行うためのメカニズムがあり、&lt;a href=&quot;http://search.cpan.org/perldoc/Catalyst&quot;&gt;Catalyst&lt;/a&gt;フレームワークを使用すると次のようになります。</target>
        </trans-unit>
        <trans-unit id="536328dda2b64b33176fd10e64fdf2366a37e10b" translate="yes" xml:space="preserve">
          <source>Most Perl features behave in a natural way within pseudo-processes.</source>
          <target state="translated">Perl の機能のほとんどは、疑似プロセス内で自然な振る舞いをします。</target>
        </trans-unit>
        <trans-unit id="cc5eff88f8f7c24acf735b42756c6ec6877ad919" translate="yes" xml:space="preserve">
          <source>Most Perl-related projects set up mailing lists for both users and contributors. If you don't see a certain project listed at &lt;a href=&quot;http://lists.perl.org&quot;&gt;http://lists.perl.org&lt;/a&gt;, check the particular website for that project. Most mailing lists are archived at &lt;a href=&quot;http://nntp.perl.org/&quot;&gt;http://nntp.perl.org/&lt;/a&gt;.</source>
          <target state="translated">ほとんどのPerl関連プロジェクトは、ユーザーと貢献者の両方のためのメーリングリストを設定します。&lt;a href=&quot;http://lists.perl.org&quot;&gt;http://lists.perl.org&lt;/a&gt;にリストされている特定のプロジェクトが見つからない場合は、そのプロジェクトの特定のWebサイトを確認してください。ほとんどのメーリングリストは&lt;a href=&quot;http://nntp.perl.org/&quot;&gt;http://nntp.perl.org/に&lt;/a&gt;アーカイブされています。</target>
        </trans-unit>
        <trans-unit id="0b0a52de9bf06827eb244cce4b2303069fe873df" translate="yes" xml:space="preserve">
          <source>Most Unicode character properties have at least two synonyms (or aliases if you prefer): a short one that is easier to type and a longer one that is more descriptive and hence easier to understand. Thus the &lt;code&gt;&quot;L&quot;&lt;/code&gt; and &lt;code&gt;&quot;Letter&quot;&lt;/code&gt; properties above are equivalent and can be used interchangeably. Likewise, &lt;code&gt;&quot;Upper&quot;&lt;/code&gt; is a synonym for &lt;code&gt;&quot;Uppercase&quot;&lt;/code&gt; , and we could have written &lt;code&gt;\p{Uppercase}&lt;/code&gt; equivalently as &lt;code&gt;\p{Upper}&lt;/code&gt; . Also, there are typically various synonyms for the values the property can be. For binary properties, &lt;code&gt;&quot;True&quot;&lt;/code&gt; has 3 synonyms: &lt;code&gt;&quot;T&quot;&lt;/code&gt; , &lt;code&gt;&quot;Yes&quot;&lt;/code&gt; , and &lt;code&gt;&quot;Y&quot;&lt;/code&gt; ; and &lt;code&gt;&quot;False&quot;&lt;/code&gt; has correspondingly &lt;code&gt;&quot;F&quot;&lt;/code&gt; , &lt;code&gt;&quot;No&quot;&lt;/code&gt; , and &lt;code&gt;&quot;N&quot;&lt;/code&gt; . But be careful. A short form of a value for one property may not mean the same thing as the same short form for another. Thus, for the &lt;code&gt;&lt;a href=&quot;#General_Category&quot;&gt;General_Category&lt;/a&gt;&lt;/code&gt; property, &lt;code&gt;&quot;L&quot;&lt;/code&gt; means &lt;code&gt;&quot;Letter&quot;&lt;/code&gt; , but for the &lt;a href=&quot;#Bidirectional-Character-Types&quot;&gt;Bidi_Class &lt;/a&gt; property, &lt;code&gt;&quot;L&quot;&lt;/code&gt; means &lt;code&gt;&quot;Left&quot;&lt;/code&gt; . A complete list of properties and synonyms is in &lt;a href=&quot;perluniprops&quot;&gt;perluniprops&lt;/a&gt;.</source>
          <target state="translated">ほとんどのUnicode文字プロパティには、少なくとも2つの同義語（または必要に応じて別名）があります。短い方が入力しやすく、長い方が説明的で理解しやすいものです。したがって、上記の &lt;code&gt;&quot;L&quot;&lt;/code&gt; と &lt;code&gt;&quot;Letter&quot;&lt;/code&gt; プロパティは同等であり、互換的に使用できます。同様に、 &lt;code&gt;&quot;Upper&quot;&lt;/code&gt; は &lt;code&gt;&quot;Uppercase&quot;&lt;/code&gt; 同義語であり、 &lt;code&gt;\p{Uppercase}&lt;/code&gt; を &lt;code&gt;\p{Upper}&lt;/code&gt; と同等に記述することができます。また、通常、プロパティの値にはさまざまな同義語があります。バイナリプロパティの場合、 &lt;code&gt;&quot;True&quot;&lt;/code&gt; は3つの同義語があります。 &lt;code&gt;&quot;T&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;Yes&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;Y&quot;&lt;/code&gt; ;そして &lt;code&gt;&quot;False&quot;&lt;/code&gt; それに対応している &lt;code&gt;&quot;F&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;No&quot;&lt;/code&gt; 、および &lt;code&gt;&quot;N&quot;&lt;/code&gt; 。しかし、注意してください。あるプロパティの値の短縮形は、別のプロパティの同じ短縮形と同じことを意味しない場合があります。したがって、 &lt;code&gt;&lt;a href=&quot;#General_Category&quot;&gt;General_Category&lt;/a&gt;&lt;/code&gt; プロパティの場合、 &lt;code&gt;&quot;L&quot;&lt;/code&gt; は &lt;code&gt;&quot;Letter&quot;&lt;/code&gt; 意味しますが、&lt;a href=&quot;#Bidirectional-Character-Types&quot;&gt;Bidi_Class&lt;/a&gt;プロパティの場合、 &lt;code&gt;&quot;L&quot;&lt;/code&gt; は &lt;code&gt;&quot;Left&quot;&lt;/code&gt; 意味します。プロパティとシノニムの完全なリストは&lt;a href=&quot;perluniprops&quot;&gt;perlunipropsにあり&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="53043f2844348d956e6cb65224a0ae9814e3772c" translate="yes" xml:space="preserve">
          <source>Most Unicode character properties have at least two synonyms (or aliases if you prefer): a short one that is easier to type and a longer one that is more descriptive and hence easier to understand. Thus the &lt;code&gt;&quot;L&quot;&lt;/code&gt; and &lt;code&gt;&quot;Letter&quot;&lt;/code&gt; properties above are equivalent and can be used interchangeably. Likewise, &lt;code&gt;&quot;Upper&quot;&lt;/code&gt; is a synonym for &lt;code&gt;&quot;Uppercase&quot;&lt;/code&gt;, and we could have written &lt;code&gt;\p{Uppercase}&lt;/code&gt; equivalently as &lt;code&gt;\p{Upper}&lt;/code&gt;. Also, there are typically various synonyms for the values the property can be. For binary properties, &lt;code&gt;&quot;True&quot;&lt;/code&gt; has 3 synonyms: &lt;code&gt;&quot;T&quot;&lt;/code&gt;, &lt;code&gt;&quot;Yes&quot;&lt;/code&gt;, and &lt;code&gt;&quot;Y&quot;&lt;/code&gt;; and &lt;code&gt;&quot;False&quot;&lt;/code&gt; has correspondingly &lt;code&gt;&quot;F&quot;&lt;/code&gt;, &lt;code&gt;&quot;No&quot;&lt;/code&gt;, and &lt;code&gt;&quot;N&quot;&lt;/code&gt;. But be careful. A short form of a value for one property may not mean the same thing as the short form spelled the same for another. Thus, for the &lt;code&gt;&lt;a href=&quot;#General_Category&quot;&gt;&quot;General_Category&quot;&lt;/a&gt;&lt;/code&gt; property, &lt;code&gt;&quot;L&quot;&lt;/code&gt; means &lt;code&gt;&quot;Letter&quot;&lt;/code&gt;, but for the &lt;a href=&quot;#Bidirectional-Character-Types&quot;&gt;&lt;code&gt;Bidi_Class&lt;/code&gt;&lt;/a&gt; property, &lt;code&gt;&quot;L&quot;&lt;/code&gt; means &lt;code&gt;&quot;Left&quot;&lt;/code&gt;. A complete list of properties and synonyms is in &lt;a href=&quot;perluniprops&quot;&gt;perluniprops&lt;/a&gt;.</source>
          <target state="translated">ほとんどのUnicode文字プロパティには、少なくとも2つの同義語（または必要に応じてエイリアス）があります。短いものは入力しやすく、長いものはより説明的で理解しやすいものです。したがって、上記の &lt;code&gt;&quot;L&quot;&lt;/code&gt; プロパティと &lt;code&gt;&quot;Letter&quot;&lt;/code&gt; プロパティは同等であり、互換的に使用できます。同様に、 &lt;code&gt;&quot;Upper&quot;&lt;/code&gt; は &lt;code&gt;&quot;Uppercase&quot;&lt;/code&gt; 同義語であり、 &lt;code&gt;\p{Uppercase}&lt;/code&gt; を &lt;code&gt;\p{Upper}&lt;/code&gt; と同等に書くことができます。また、通常、プロパティの値にはさまざまな同義語があります。バイナリプロパティの場合、 &lt;code&gt;&quot;True&quot;&lt;/code&gt; は &lt;code&gt;&quot;T&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;Yes&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;Y&quot;&lt;/code&gt; 3つの同義語があります。;と &lt;code&gt;&quot;False&quot;&lt;/code&gt; 対応して &lt;code&gt;&quot;F&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;No&quot;&lt;/code&gt; 、および &lt;code&gt;&quot;N&quot;&lt;/code&gt; ます。ただし、注意してください。あるプロパティの値の短い形式は、別のプロパティの同じスペルの短い形式と同じことを意味しない場合があります。したがって、 &lt;code&gt;&lt;a href=&quot;#General_Category&quot;&gt;&quot;General_Category&quot;&lt;/a&gt;&lt;/code&gt; プロパティの場合、 &lt;code&gt;&quot;L&quot;&lt;/code&gt; は &lt;code&gt;&quot;Letter&quot;&lt;/code&gt; 意味しますが、&lt;a href=&quot;#Bidirectional-Character-Types&quot;&gt; &lt;code&gt;Bidi_Class&lt;/code&gt; &lt;/a&gt;プロパティの場合、 &lt;code&gt;&quot;L&quot;&lt;/code&gt; は &lt;code&gt;&quot;Left&quot;&lt;/code&gt; 意味します。プロパティと同義語の完全なリストは&lt;a href=&quot;perluniprops&quot;&gt;perlunipropsにあり&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="c33601ec8592d8b99971745f555ad60f8af01ae0" translate="yes" xml:space="preserve">
          <source>Most Unicode properties have several synonymous names. Typically, there is at least a short name, convenient to type, and a long name that more fully describes the property, and hence is more easily understood.</source>
          <target state="translated">多 く の Unicode プ ロ パテ ィ は、 い く つかの同義名を持っています。一般的には、少なくともタイプするのに便利な短い名前と、そのプロパティをより完全に説明し、それゆえにより理解しやすい長い名前があります。</target>
        </trans-unit>
        <trans-unit id="c27a5f71254b1b3c6a849e7bef1eacb3f778bdb9" translate="yes" xml:space="preserve">
          <source>Most algorithms are only defined for strings of bytes and this method might therefore croak if the provided arguments contain chars with ordinal number above 255.</source>
          <target state="translated">ほとんどのアルゴリズムはバイトの文字列に対してのみ定義されているため、引数に255以上の序数を持つ文字が含まれている場合、このメソッドは動作しなくなるかもしれません。</target>
        </trans-unit>
        <trans-unit id="437ac38b2b73f7517fd2a5637f9c4e0ca58f6e94" translate="yes" xml:space="preserve">
          <source>Most behaviour, including environment variables and configuration, comes directly from CPAN.pm.</source>
          <target state="translated">環境変数や設定を含むほとんどの動作は、CPAN.pmから直接来ています。</target>
        </trans-unit>
        <trans-unit id="283ae0258fda6ce570af6540f2c58627624b3cdb" translate="yes" xml:space="preserve">
          <source>Most callers of &lt;code&gt;cx_pushblock&lt;/code&gt; simply set the new args stack floor to the top of the previous stack frame, but for &lt;code&gt;CXt_LOOP_LIST&lt;/code&gt; it stores the items being iterated over on the stack, and so sets &lt;code&gt;blk_oldsp&lt;/code&gt; to the top of these items instead. Note that, contrary to its name, &lt;code&gt;blk_oldsp&lt;/code&gt; doesn't always represent the value to restore &lt;code&gt;PL_stack_sp&lt;/code&gt; to on scope exit.</source>
          <target state="translated">&lt;code&gt;cx_pushblock&lt;/code&gt; のほとんどの呼び出し元は、新しいargsスタックフロアを前のスタックフレームの一番上に設定するだけですが、 &lt;code&gt;CXt_LOOP_LIST&lt;/code&gt; の場合は、繰り返されるアイテムをスタックに &lt;code&gt;blk_oldsp&lt;/code&gt; するため、代わりにblk_oldspをこれらのアイテムの一番上に設定します。その名前とは逆に、 &lt;code&gt;blk_oldsp&lt;/code&gt; は、スコープの終了時に &lt;code&gt;PL_stack_sp&lt;/code&gt; を復元する値を常に表すとは限らないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="b83511857d278656d99d572ed9af8349be0ed8d8" translate="yes" xml:space="preserve">
          <source>Most characters that are meta characters in regular expressions (that is, characters that carry a special meaning like &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt; , or &lt;code&gt;(&lt;/code&gt;) lose their special meaning and can be used inside a character class without the need to escape them. For instance, &lt;code&gt;[()]&lt;/code&gt; matches either an opening parenthesis, or a closing parenthesis, and the parens inside the character class don't group or capture.</source>
          <target state="translated">正規表現でメタ文字であるほとんどの文字（つまり、 &lt;code&gt;.&lt;/code&gt; 、 &lt;code&gt;*&lt;/code&gt; 、または &lt;code&gt;(&lt;/code&gt; ）などの特別な意味を持つ文字は、特別な意味を失い、エスケープする必要なしに文字クラス内で使用できます。たとえば、 &lt;code&gt;[()]&lt;/code&gt; は左括弧または右括弧のいずれかに一致し、文字クラス内の括弧はグループ化またはキャプチャされません。</target>
        </trans-unit>
        <trans-unit id="662368a274868c093a1187793ee53785736a4eef" translate="yes" xml:space="preserve">
          <source>Most characters that are meta characters in regular expressions (that is, characters that carry a special meaning like &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, or &lt;code&gt;(&lt;/code&gt;) lose their special meaning and can be used inside a character class without the need to escape them. For instance, &lt;code&gt;[()]&lt;/code&gt; matches either an opening parenthesis, or a closing parenthesis, and the parens inside the character class don't group or capture. Be aware that, unless the pattern is evaluated in single-quotish context, variable interpolation will take place before the bracketed class is parsed:</source>
          <target state="translated">正規表現のメタ文字であるほとんどの文字（つまり、 &lt;code&gt;.&lt;/code&gt; 、 &lt;code&gt;*&lt;/code&gt; 、または &lt;code&gt;(&lt;/code&gt; ）のような特別な意味を持つ文字は、特別な意味を失い、エスケープすることなく文字クラス内で使用できます。たとえば、 &lt;code&gt;[()]&lt;/code&gt; は、開始括弧または終了括弧のいずれかに一致し、文字クラス内の括弧はグループ化またはキャプチャされません。パターンが単一引用符のコンテキストで評価されない限り、変数の補間は、括弧で囲まれたクラスが解析されます：</target>
        </trans-unit>
        <trans-unit id="a75f1bf80c368f3dc4a94d23cd008a9dbf44eec2" translate="yes" xml:space="preserve">
          <source>Most code should use &lt;code&gt;&lt;a href=&quot;#uvchr_to_utf8_flags&quot;&gt;&quot;uvchr_to_utf8_flags&quot;&lt;/a&gt;()&lt;/code&gt; rather than call this directly.</source>
          <target state="translated">ほとんどのコードでは、これを直接呼び出すのではなく、 &lt;code&gt;&lt;a href=&quot;#uvchr_to_utf8_flags&quot;&gt;&quot;uvchr_to_utf8_flags&quot;&lt;/a&gt;()&lt;/code&gt; を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="0df73814a9b3dab0955308c1ef467807cec3d266" translate="yes" xml:space="preserve">
          <source>Most compiler backends use the following conventions: OPTIONS consists of a comma-separated list of words (no white-space). The &lt;code&gt;-v&lt;/code&gt; option usually puts the backend into verbose mode. The &lt;code&gt;-ofile&lt;/code&gt; option generates output to &lt;b&gt;file&lt;/b&gt; instead of stdout. The &lt;code&gt;-D&lt;/code&gt; option followed by various letters turns on various internal debugging flags. See the documentation for the desired backend (named &lt;code&gt;B::Backend&lt;/code&gt; for the example above) to find out about that backend.</source>
          <target state="translated">ほとんどのコンパイラバックエンドは、次の規則を使用します。OPTIONSは、コンマで区切られた単語のリスト（空白なし）で構成されます。 &lt;code&gt;-v&lt;/code&gt; オプションは、通常、冗長モードにバックエンドを置きます。 &lt;code&gt;-ofile&lt;/code&gt; オプションは、出力を生成し&lt;b&gt;たファイル&lt;/b&gt;の代わりに、標準出力。 &lt;code&gt;-D&lt;/code&gt; オプションは、様々な内部デバッグフラグのさまざまな文字ターンが続きます。そのバックエンドについて調べるには、目的のバックエンド（上記の例では &lt;code&gt;B::Backend&lt;/code&gt; という名前）のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="2ceb62989a1effad36bd037ec531f4c70cb866db" translate="yes" xml:space="preserve">
          <source>Most digest algorithms are byte based and for these it is not possible to add bits that are not a multiple of 8, and the add_bits() method will croak if you try.</source>
          <target state="translated">ほとんどのダイジェストアルゴリズムはバイトベースであり、これらのアルゴリズムでは 8 の倍数ではないビットを追加することはできません。</target>
        </trans-unit>
        <trans-unit id="e8e0432f156912c28405beeb7541e8a07073675c" translate="yes" xml:space="preserve">
          <source>Most extensions (whether they require a C compiler or not) can be built, tested and installed with the standard mantra:</source>
          <target state="translated">ほとんどの拡張機能(Cコンパイラを必要とするかどうかに関わらず)は、標準のマントラを使ってビルド、テスト、インストールすることができます。</target>
        </trans-unit>
        <trans-unit id="6c36d3b16152dc2e4c3eb43bb1840617dcd58c24" translate="yes" xml:space="preserve">
          <source>Most frequently called functions</source>
          <target state="translated">最も頻繁に呼び出される関数</target>
        </trans-unit>
        <trans-unit id="e2f7deae35b5b32265a212cc23f97fad9e01f8ca" translate="yes" xml:space="preserve">
          <source>Most functions in package CPAN are exported by default. The reason for this is that the primary use is intended for the cpan shell or for one-liners.</source>
          <target state="translated">CPAN パッケージのほとんどの関数はデフォルトでエクスポートされています。これは、主な用途が cpan シェルやワンライナーのためのものだからです。</target>
        </trans-unit>
        <trans-unit id="7d52830eddc7f522e9b94c8937811fe2f95508ad" translate="yes" xml:space="preserve">
          <source>Most implementations of &lt;a href=&quot;#srand-EXPR&quot;&gt;&lt;code&gt;srand&lt;/code&gt;&lt;/a&gt; take an integer and will silently truncate decimal numbers. This means &lt;code&gt;srand(42)&lt;/code&gt; will usually produce the same results as &lt;code&gt;srand(42.1)&lt;/code&gt;. To be safe, always pass &lt;a href=&quot;#srand-EXPR&quot;&gt;&lt;code&gt;srand&lt;/code&gt;&lt;/a&gt; an integer.</source>
          <target state="translated">&lt;a href=&quot;#srand-EXPR&quot;&gt; &lt;code&gt;srand&lt;/code&gt; の&lt;/a&gt;ほとんどの実装は整数を取り、10進数を黙って切り捨てます。これは、 &lt;code&gt;srand(42)&lt;/code&gt; が通常 &lt;code&gt;srand(42.1)&lt;/code&gt; と同じ結果を生成することを意味します。安全のために、常に&lt;a href=&quot;#srand-EXPR&quot;&gt; &lt;code&gt;srand&lt;/code&gt; &lt;/a&gt;に整数を渡します。</target>
        </trans-unit>
        <trans-unit id="5781421ac333dfdfd58bada47c5083697a175449" translate="yes" xml:space="preserve">
          <source>Most implementations of &lt;code&gt;&lt;a href=&quot;functions/srand&quot;&gt;srand&lt;/a&gt;&lt;/code&gt; take an integer and will silently truncate decimal numbers. This means &lt;code&gt;&lt;a href=&quot;functions/srand&quot;&gt;srand(42)&lt;/a&gt;&lt;/code&gt; will usually produce the same results as &lt;code&gt;&lt;a href=&quot;functions/srand&quot;&gt;srand(42.1)&lt;/a&gt;&lt;/code&gt;. To be safe, always pass &lt;code&gt;&lt;a href=&quot;functions/srand&quot;&gt;srand&lt;/a&gt;&lt;/code&gt; an integer.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/srand&quot;&gt;srand&lt;/a&gt;&lt;/code&gt; のほとんどの実装は整数を使用し、暗黙的に10進数を切り捨てます。これは、 &lt;code&gt;&lt;a href=&quot;functions/srand&quot;&gt;srand(42)&lt;/a&gt;&lt;/code&gt; が通常 &lt;code&gt;&lt;a href=&quot;functions/srand&quot;&gt;srand(42.1)&lt;/a&gt;&lt;/code&gt; と同じ結果を生成することを意味します。安全のために、常に &lt;code&gt;&lt;a href=&quot;functions/srand&quot;&gt;srand&lt;/a&gt;&lt;/code&gt; に整数を渡してください。</target>
        </trans-unit>
        <trans-unit id="405bded6ca944a37e6c3b479ff1de785ad3f9801" translate="yes" xml:space="preserve">
          <source>Most implementations of &lt;code&gt;&lt;a href=&quot;srand&quot;&gt;srand&lt;/a&gt;&lt;/code&gt; take an integer and will silently truncate decimal numbers. This means &lt;code&gt;&lt;a href=&quot;srand&quot;&gt;srand(42)&lt;/a&gt;&lt;/code&gt; will usually produce the same results as &lt;code&gt;&lt;a href=&quot;srand&quot;&gt;srand(42.1)&lt;/a&gt;&lt;/code&gt;. To be safe, always pass &lt;code&gt;&lt;a href=&quot;srand&quot;&gt;srand&lt;/a&gt;&lt;/code&gt; an integer.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;srand&quot;&gt;srand&lt;/a&gt;&lt;/code&gt; のほとんどの実装は整数を使用し、暗黙的に10進数を切り捨てます。これは、 &lt;code&gt;&lt;a href=&quot;srand&quot;&gt;srand(42)&lt;/a&gt;&lt;/code&gt; が通常 &lt;code&gt;&lt;a href=&quot;srand&quot;&gt;srand(42.1)&lt;/a&gt;&lt;/code&gt; と同じ結果を生成することを意味します。安全のために、常に &lt;code&gt;&lt;a href=&quot;srand&quot;&gt;srand&lt;/a&gt;&lt;/code&gt; に整数を渡してください。</target>
        </trans-unit>
        <trans-unit id="5d6b5dfca3c0039899dcb7cae60483d04f370ee8" translate="yes" xml:space="preserve">
          <source>Most importantly, CPAN includes around a thousand unbundled modules, some of which require a C compiler to build. Major categories of modules are:</source>
          <target state="translated">最も重要なことは、CPANには約1,000個のモジュールが含まれており、その中にはビルドにCコンパイラを必要とするものもあります。モジュールの主なカテゴリは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="acf589d2649f04394cc8c6cda103470ec97cfc12" translate="yes" xml:space="preserve">
          <source>Most importantly, choose modules which are as stable as possible. In order of preference:</source>
          <target state="translated">最も重要なのは、できるだけ安定したモジュールを選ぶことです。好みの順に並べてみました。</target>
        </trans-unit>
        <trans-unit id="2a11d2785522a93f5420fa16470f086a6da1b3ea" translate="yes" xml:space="preserve">
          <source>Most mentioned distributions are depots. H.Merijn Brand has made prebuilt gcc binaries available on &lt;a href=&quot;http://mirrors.develooper.com/hpux/&quot;&gt;http://mirrors.develooper.com/hpux/&lt;/a&gt; and/or &lt;a href=&quot;http://www.cmve.net/~merijn/&quot;&gt;http://www.cmve.net/~merijn/&lt;/a&gt; for HP-UX 10.20 (only 32bit), HP-UX 11.00, HP-UX 11.11 (HP-UX 11i v1), and HP-UX 11.23 (HP-UX 11i v2 PA-RISC) in both 32- and 64-bit versions. For HP-UX 11.23 IPF and HP-UX 11.31 IPF depots are available too. The IPF versions do not need two versions of GNU gcc.</source>
          <target state="translated">最も言及されているディストリビューションはデポです。H.Merijn Brandは、ビルド済みのgccバイナリを&lt;a href=&quot;http://mirrors.develooper.com/hpux/&quot;&gt;http://mirrors.develooper.com/hpux/&lt;/a&gt;または&lt;a href=&quot;http://www.cmve.net/~merijn/&quot;&gt;http://www.cmve.net/~merijn/（HP-UX&lt;/a&gt; 10.20（32ビットのみ）の場合）、HPで利用できるようにしました32ビットバージョンと64ビットバージョンの両方の-UX 11.00、HP-UX 11.11（HP-UX 11i v1）、およびHP-UX 11.23（HP-UX 11i v2 PA-RISC）。HP-UX 11.23 IPFおよびHP-UX 11.31 IPFデポも利用できます。IPFバージョンは、GNU gccの2つのバージョンを必要としません。</target>
        </trans-unit>
        <trans-unit id="236aab386cc9ca4c5e8adffaa67e969c764a4805" translate="yes" xml:space="preserve">
          <source>Most methods you write will expect to operate on objects:</source>
          <target state="translated">あなたが書くほとんどのメソッドは、オブジェクトを操作することを想定しています。</target>
        </trans-unit>
        <trans-unit id="e42995ec64ef087af8c046e70f5daf6eb0079f02" translate="yes" xml:space="preserve">
          <source>Most modern X terminal emulators support 256 colors. Known to not support those colors are aterm, rxvt, Terminal.app, and TTY/VC.</source>
          <target state="translated">ほとんどの最新の X 端末エミュレータは 256 色をサポートしています。これらの色をサポートしていないことが知られているのは aterm、rxvt、Terminal.app、TTY/VC です。</target>
        </trans-unit>
        <trans-unit id="09fdc7d65b76d3e363653e14537a18e5aea28f56" translate="yes" xml:space="preserve">
          <source>Most modern operating systems support preemptive multitasking nowadays.</source>
          <target state="translated">最近のほとんどのOSは、最近では先制的なマルチタスクをサポートしています。</target>
        </trans-unit>
        <trans-unit id="1d45edd059b4e41b42c3589d6e9743f7467d5f99" translate="yes" xml:space="preserve">
          <source>Most modifiers, such as &lt;code&gt;//i&lt;/code&gt; , &lt;code&gt;//m&lt;/code&gt; , &lt;code&gt;//s&lt;/code&gt; and &lt;code&gt;//x&lt;/code&gt; (or any combination thereof) can also be embedded in a regexp using &lt;code&gt;(?i)&lt;/code&gt;, &lt;code&gt;(?m)&lt;/code&gt;, &lt;code&gt;(?s)&lt;/code&gt;, and &lt;code&gt;(?x)&lt;/code&gt;. For instance,</source>
          <target state="translated">&lt;code&gt;//i&lt;/code&gt; 、 &lt;code&gt;//m&lt;/code&gt; 、 &lt;code&gt;//s&lt;/code&gt; 、 &lt;code&gt;//x&lt;/code&gt; 、または// x（またはそれらの任意の組み合わせ）などのほとんどの修飾子は、 &lt;code&gt;(?i)&lt;/code&gt; 、 &lt;code&gt;(?m)&lt;/code&gt; 、 &lt;code&gt;(?s)&lt;/code&gt; 、および &lt;code&gt;(?x)&lt;/code&gt; 。例えば、</target>
        </trans-unit>
        <trans-unit id="72e8bb708217ae322b446e074e5a34e7c96fe06c" translate="yes" xml:space="preserve">
          <source>Most modifiers, such as &lt;code&gt;/i&lt;/code&gt;, &lt;code&gt;/m&lt;/code&gt;, &lt;code&gt;/s&lt;/code&gt; and &lt;code&gt;/x&lt;/code&gt; (or any combination thereof) can also be embedded in a regexp using &lt;code&gt;(?i)&lt;/code&gt;, &lt;code&gt;(?m)&lt;/code&gt;, &lt;code&gt;(?s)&lt;/code&gt;, and &lt;code&gt;(?x)&lt;/code&gt;. For instance,</source>
          <target state="translated">&lt;code&gt;/i&lt;/code&gt; 、 &lt;code&gt;/m&lt;/code&gt; 、 &lt;code&gt;/s&lt;/code&gt; 、 &lt;code&gt;/x&lt;/code&gt; （またはそれらの任意の組み合わせ）などのほとんどの修飾子は、 &lt;code&gt;(?i)&lt;/code&gt; 、 &lt;code&gt;(?m)&lt;/code&gt; 、 &lt;code&gt;(?s)&lt;/code&gt; 、および &lt;code&gt;(?x)&lt;/code&gt; を使用して正規表現に埋め込むこともできます。。例えば、</target>
        </trans-unit>
        <trans-unit id="7aac5f91bfd266adf35f3c08ec6bb8cde72e4223" translate="yes" xml:space="preserve">
          <source>Most multi-user platforms provide basic levels of security, usually implemented at the filesystem level. Some, however, unfortunately do not. Thus the notion of user id, or &quot;home&quot; directory, or even the state of being logged-in, may be unrecognizable on many platforms. If you write programs that are security-conscious, it is usually best to know what type of system you will be running under so that you can write code explicitly for that platform (or class of platforms).</source>
          <target state="translated">ほとんどのマルチユーザープラットフォームは基本的なレベルのセキュリティを提供しており、通常はファイルシステムレベルで実装されています。しかし、残念ながらそうではないものもあります。そのため、ユーザ ID や「ホーム」ディレクトリ、あるいはログインしている状態さえも、多くのプラットフォームでは認識できないかもしれません。セキュリティを意識したプログラムを書く場合、どのようなシステムで動作するかを知っておくと、そのプラットフォーム(またはプラットフォームのクラス)用に明示的にコードを書くことができるようになります。</target>
        </trans-unit>
        <trans-unit id="4f6011591757af844f16df1e5c9352c7848a6ec4" translate="yes" xml:space="preserve">
          <source>Most non-EBCDIC character sets are supersets of ASCII. That is the integers 0-127 mean what ASCII says they mean. But integers 128 and above are specific to the character set.</source>
          <target state="translated">ほとんどの非EBCDIC文字セットはASCIIのスーパーセットです。つまり、0-127の整数はASCIIが意味することを意味します。しかし、128以上の整数は文字セットに固有のものです。</target>
        </trans-unit>
        <trans-unit id="51ca37247d6a69603fb3b1446157e03d96bfa6df" translate="yes" xml:space="preserve">
          <source>Most notable problems:</source>
          <target state="translated">最も注目すべき問題。</target>
        </trans-unit>
        <trans-unit id="f57027e07ab6e59e959c6b528e3378204e633471" translate="yes" xml:space="preserve">
          <source>Most object systems share a number of common concepts. You've probably heard terms like &quot;class&quot;, &quot;object, &quot;method&quot;, and &quot;attribute&quot; before. Understanding the concepts will make it much easier to read and write object-oriented code. If you're already familiar with these terms, you should still skim this section, since it explains each concept in terms of Perl's OO implementation.</source>
          <target state="translated">ほとんどのオブジェクトシステムは、いくつかの共通概念を持っています。クラス」、「オブジェクト」、「メソッド」、「属性」などの用語を聞いたことがあるでしょう。これらの概念を理解することで、オブジェクト指向のコードを読んだり書いたりするのがずっと簡単になります。もしあなたがこれらの用語にすでに慣れているのであれば、Perl の OO 実装の観点から各概念を説明しているので、このセクションをざっと読んでみてください。</target>
        </trans-unit>
        <trans-unit id="fe5befa620ff0477f0ac6ba4b4534580f30f2e1e" translate="yes" xml:space="preserve">
          <source>Most obviously, there is the necessity of retrieving the reference address of an object for each data access. It's a minor inconvenience, but it does clutter the code.</source>
          <target state="translated">最も明らかなことは、データアクセスのたびにオブジェクトの参照アドレスを取得する必要があるということです。これは些細な不便ですが、コードが乱雑になります。</target>
        </trans-unit>
        <trans-unit id="8966ee4f610a8f12b38c297e5e0e0d5c4c1631d5" translate="yes" xml:space="preserve">
          <source>Most of Params::Check's power comes from its template, which we'll discuss below:</source>
          <target state="translated">Params::Checkのパワーのほとんどはテンプレートから来ています。</target>
        </trans-unit>
        <trans-unit id="a5d752e99b47aeed7fefeb002f25a1df93361a60" translate="yes" xml:space="preserve">
          <source>Most of the &lt;code&gt;canonical names&lt;/code&gt; in Encode derive from this list so you can directly apply the string you have extracted from MIME header of mails and web pages.</source>
          <target state="translated">Encodeの &lt;code&gt;canonical names&lt;/code&gt; ほとんどはこのリストから派生しているため、メールやWebページのMIMEヘッダーから抽出した文字列を直接適用できます。</target>
        </trans-unit>
        <trans-unit id="a2e899784ab7672ad3b74081e22274bde79fba73" translate="yes" xml:space="preserve">
          <source>Most of the code here was lifted straight from Test::Builder and then had chunks removed by Fergal Daly &amp;lt;fergal@esatclear.ie&amp;gt;.</source>
          <target state="translated">ここにあるコードのほとんどは、Test :: Builderから直接削除され、Fergal Daly &amp;lt;fergal@esatclear.ie&amp;gt;によってチャンクが削除されました。</target>
        </trans-unit>
        <trans-unit id="8c05844436a81cb2d0dbddab3388c8acb9552fbf" translate="yes" xml:space="preserve">
          <source>Most of the code here was written by Randy W. Sims &amp;lt;RandyS@ThePierianSpring.org&amp;gt;.</source>
          <target state="translated">ここにあるコードのほとんどは、Randy W. Sims &amp;lt;RandyS@ThePierianSpring.org&amp;gt;によって書かれました。</target>
        </trans-unit>
        <trans-unit id="47b295d947239a228d57f7cff4fa724418821ca3" translate="yes" xml:space="preserve">
          <source>Most of the complete Perl resides in the shareable image</source>
          <target state="translated">完全なPerlの大部分は、共有可能なイメージにあります。</target>
        </trans-unit>
        <trans-unit id="6e836cc0136a0b6a1e328a42911e15475ce7f8a0" translate="yes" xml:space="preserve">
          <source>Most of the complexity of the &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; function lies in the many possible values that the</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; 関数の複雑さのほとんどは、多くの可能な値にあります。</target>
        </trans-unit>
        <trans-unit id="e8c86ea6cb467b77003f8f36467638e3bb201553" translate="yes" xml:space="preserve">
          <source>Most of the complexity of the &lt;code&gt;open&lt;/code&gt; function lies in the many possible values that the</source>
          <target state="translated">&lt;code&gt;open&lt;/code&gt; 関数の複雑さのほとんどは、</target>
        </trans-unit>
        <trans-unit id="2242570cf48131ca1026e727ff73cf14992345d6" translate="yes" xml:space="preserve">
          <source>Most of the documentation is taken from JSON::XS by Marc Lehmann</source>
          <target state="translated">ドキュメントのほとんどは Marc Lehmann による JSON::XS から引用しています。</target>
        </trans-unit>
        <trans-unit id="4a21567ca84f5f746c9675299dce59640ed18c1d" translate="yes" xml:space="preserve">
          <source>Most of the keywords are self-explanatory.</source>
          <target state="translated">ほとんどのキーワードは自明のものです。</target>
        </trans-unit>
        <trans-unit id="baa8cd3bbb4c6980245c7cf3aa023db27c3acdb3" translate="yes" xml:space="preserve">
          <source>Most of the libgdbm.a functions are available through the GDBM_File interface.</source>
          <target state="translated">libgdbm.a の関数のほとんどは、GDBM_File インタフェースを介して利用できます。</target>
        </trans-unit>
        <trans-unit id="d25843b853d505c1784c9a338be9b1a848cd1212" translate="yes" xml:space="preserve">
          <source>Most of the libnet client classes allow options to be passed to the constructor, in most cases one option is called &lt;code&gt;Debug&lt;/code&gt;. Passing this option with a non-zero value will turn on a protocol trace, which will be sent to STDERR. This trace can be useful to see what commands are being sent to the remote server and what responses are being received back.</source>
          <target state="translated">ほとんどのlibnetクライアントクラスでは、オプションをコンストラクターに渡すことができます。ほとんどの場合、1つのオプションは &lt;code&gt;Debug&lt;/code&gt; と呼ばれます。このオプションをゼロ以外の値で渡すと、プロトコルトレースがオンになり、STDERRに送信されます。このトレースは、リモートサーバーに送信されているコマンドと、受信されている応答を確認するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="31689cece88e6009d6abbf1122159fef235d148d" translate="yes" xml:space="preserve">
          <source>Most of the metacharacters aren't always special, and other characters (such as the ones delimitting the pattern) become special under various circumstances. This can be confusing and lead to unexpected results. &lt;a href=&quot;re#%27strict%27-mode&quot;&gt;&lt;code&gt;use re 'strict'&lt;/code&gt;&lt;/a&gt; can notify you of potential pitfalls.</source>
          <target state="translated">ほとんどのメタ文字は必ずしも特別なものではなく、他の文字（パターンを区切る文字など）はさまざまな状況で特別なものになります。これは混乱を招き、予期しない結果につながる可能性があります。&lt;a href=&quot;re#%27strict%27-mode&quot;&gt; &lt;code&gt;use re 'strict'&lt;/code&gt; &lt;/a&gt;使用すると、潜在的な落とし穴を通知できます。</target>
        </trans-unit>
        <trans-unit id="98e872c4c8b4e46b1a126dccfdf045e22c43bfe9" translate="yes" xml:space="preserve">
          <source>Most of the other Opcode functions call verify_opset automatically and will croak if given an invalid opset.</source>
          <target state="translated">他のほとんどの Opcode 関数は verify_opset を自動的に呼び出し、無効なオペセットが与えられた場合に動作を停止します。</target>
        </trans-unit>
        <trans-unit id="7be58e4167c6f6d21daa45117bbd585a46416c25" translate="yes" xml:space="preserve">
          <source>Most of the overloadable operators map one-to-one to these keys. Exceptions, including additional overloadable operations not apparent from this hash, are included in the notes which follow. This list is subject to growth over time.</source>
          <target state="translated">オーバーロード可能な演算子のほとんどは、これらの鍵に一対一で対応する。このハッシュからは明らかではない追加の過負荷可能な演算子を含む例外については、後述の注釈に記載する。このリストは時間の経過とともに増加する可能性があります。</target>
        </trans-unit>
        <trans-unit id="6cede88fd0fdf454c10d7b4cebb77c726e122f53" translate="yes" xml:space="preserve">
          <source>Most of the power comes from the implicit smartmatching that can sometimes apply. Most of the time, &lt;code&gt;when(EXPR)&lt;/code&gt; is treated as an implicit smartmatch of &lt;code&gt;$_&lt;/code&gt; , that is, &lt;code&gt;$_ ~~ EXPR&lt;/code&gt; . (See &lt;a href=&quot;perlop#Smartmatch-Operator&quot;&gt;Smartmatch Operator in perlop&lt;/a&gt; for more information on smartmatching.) But when</source>
          <target state="translated">パワーのほとんどは、時々適用できる暗黙のスマートマッチングから得られます。ほとんどの &lt;code&gt;when(EXPR)&lt;/code&gt; 、when（EXPR）は &lt;code&gt;$_&lt;/code&gt; 暗黙的なスマートマッチ、つまり &lt;code&gt;$_ ~~ EXPR&lt;/code&gt; として扱われます。（&lt;a href=&quot;perlop#Smartmatch-Operator&quot;&gt;スマートマッチングの&lt;/a&gt;詳細については、perlopのSmartmatch Operatorを参照してください）。</target>
        </trans-unit>
        <trans-unit id="60478a66b6d520d807ea697e7540d94eb0418ec5" translate="yes" xml:space="preserve">
          <source>Most of the power comes from the implicit smartmatching that can sometimes apply. Most of the time, &lt;code&gt;when(EXPR)&lt;/code&gt; is treated as an implicit smartmatch of &lt;code&gt;$_&lt;/code&gt;, that is, &lt;code&gt;$_ ~~ EXPR&lt;/code&gt;. (See &lt;a href=&quot;perlop#Smartmatch-Operator&quot;&gt;&quot;Smartmatch Operator&quot; in perlop&lt;/a&gt; for more information on smartmatching.) But when</source>
          <target state="translated">力の大部分は、時々適用できる暗黙のスマートマッチングから得られます。ほとんどの &lt;code&gt;when(EXPR)&lt;/code&gt; 、when（EXPR）は &lt;code&gt;$_&lt;/code&gt; 暗黙のスマートマッチ、つまり &lt;code&gt;$_ ~~ EXPR&lt;/code&gt; として扱われます。（&lt;a href=&quot;perlop#Smartmatch-Operator&quot;&gt;スマートマッチングの&lt;/a&gt;詳細については、perlopの「SmartmatchOperator」を参照してください。）ただし、</target>
        </trans-unit>
        <trans-unit id="00a01cac94bf76dedfa60add1a18fb4b2e641b31" translate="yes" xml:space="preserve">
          <source>Most of the routines take an optional additional argument which specifies the code set to use. If not specified, the default ISO 15924 four-letter codes will be used.</source>
          <target state="translated">ほとんどのルーチンは、使用するコードセットを指定するオプションの追加引数を取ります。指定されない場合は、デフォルトのISO 15924の4文字コードが使用されます。</target>
        </trans-unit>
        <trans-unit id="1e2964ea3d337ce474ce4e845493df4592e50a50" translate="yes" xml:space="preserve">
          <source>Most of the routines take an optional additional argument which specifies the code set to use. If not specified, the default ISO 3166-1 two-letter codes will be used.</source>
          <target state="translated">ほとんどのルーチンは、使用するコードセットを指定するオプションの追加引数を取ります。指定されない場合は、デフォルトのISO 3166-1の2文字コードが使用されます。</target>
        </trans-unit>
        <trans-unit id="c51fe921a01a7d85e172a82dee63cf013d880282" translate="yes" xml:space="preserve">
          <source>Most of the routines take an optional additional argument which specifies the code set to use. If not specified, the default ISO 4217 three-letter codes will be used.</source>
          <target state="translated">ほとんどのルーチンは、使用するコードセットを指定するオプションの追加引数を取ります。指定されない場合は、デフォルトのISO 4217の3文字コードが使用されます。</target>
        </trans-unit>
        <trans-unit id="ad65d964877735755761a49062026c5cbfd01a4c" translate="yes" xml:space="preserve">
          <source>Most of the routines take an optional additional argument which specifies the code set to use. If not specified, the default ISO 639 two-letter codes will be used.</source>
          <target state="translated">ほとんどのルーチンは、使用するコードセットを指定するオプションの追加引数を取ります。指定されない場合は、デフォルトのISO 639の2文字コードが使用されます。</target>
        </trans-unit>
        <trans-unit id="ecfd9a8718bf7f9a8bea5531a84bc0b93eebafb4" translate="yes" xml:space="preserve">
          <source>Most of the special variables related to regular expressions are side effects. Perl sets these variables when it has a successful match, so you should check the match result before using them. For instance:</source>
          <target state="translated">正規表現に関連する特殊な変数のほとんどは副作用です。Perl はマッチに成功したときにこれらの変数を設定しますので、それらを使用する前にマッチ結果を確認する必要があります。例えば</target>
        </trans-unit>
        <trans-unit id="dd8324ae92ad5052d02cf97e850674cb89e9ea59" translate="yes" xml:space="preserve">
          <source>Most of the time the &lt;code&gt;POP*&lt;/code&gt; macros should be adequate; the main problem with them is that they force you to process the returned values in sequence. This may not be the most suitable way to process the values in some cases. What we want is to be able to access the stack in a random order. The &lt;code&gt;ST&lt;/code&gt; macro as used when coding an XSUB is ideal for this purpose.</source>
          <target state="translated">ほとんどの場合、 &lt;code&gt;POP*&lt;/code&gt; マクロで十分です。それらの主な問題は、戻り値を順番に処理することを強制することです。これは、場合によっては値を処理するのに最適な方法ではない可能性があります。スタックにランダムな順序でアクセスできるようにする必要があります。 &lt;code&gt;ST&lt;/code&gt; の XSUBを符号化する際に使用されるようなマクロは、この目的のために理想的です。</target>
        </trans-unit>
        <trans-unit id="2df244eb4bef5a0bc68e79be4405c972c5f0e791" translate="yes" xml:space="preserve">
          <source>Most of the time you should not need to do this as your web framework, or if you are making a request, the &lt;a href=&quot;http://search.cpan.org/perldoc/LWP&quot;&gt;LWP&lt;/a&gt; or other module would handle it for you.</source>
          <target state="translated">ほとんどの場合、Webフレームワークとしてこれを行う必要はありません。または、リクエストを行う場合、&lt;a href=&quot;http://search.cpan.org/perldoc/LWP&quot;&gt;LWP&lt;/a&gt;または他のモジュールがそれを処理します。</target>
        </trans-unit>
        <trans-unit id="48c7e054216d49d1fb2b20eca1334fe1da06b743" translate="yes" xml:space="preserve">
          <source>Most of the time you should not need to do this as your web framework, or if you are making a request, the &lt;a href=&quot;lwp&quot;&gt;LWP&lt;/a&gt; or other module would handle it for you.</source>
          <target state="translated">ほとんどの場合、これをWebフレームワークとして実行する必要はありません。または、要求を行う場合は、&lt;a href=&quot;lwp&quot;&gt;LWP&lt;/a&gt;または他のモジュールがそれを処理します。</target>
        </trans-unit>
        <trans-unit id="2c4ac7b91ccda75dc1e9e26906f34a6b74bf2fc1" translate="yes" xml:space="preserve">
          <source>Most of the time, &lt;code&gt;die&lt;/code&gt; is called with a string to use as the exception. You may either give a single non-reference operand to serve as the exception, or a list of two or more items, which will be stringified and concatenated to make the exception.</source>
          <target state="translated">ほとんどの場合、 &lt;code&gt;die&lt;/code&gt; は例外として使用する文字列で呼び出されます。例外として機能する単一の非参照オペランド、または例外を作成するために文字列化および連結される2つ以上の項目のリストのいずれかを指定できます。</target>
        </trans-unit>
        <trans-unit id="7e6eb8148850007d8fa7e26443b2a04c22c7a11f" translate="yes" xml:space="preserve">
          <source>Most of the time, all this moving forward and backtracking happens quickly and searching is fast. There are some pathological regexps, however, whose execution time exponentially grows with the size of the string. A typical structure that blows up in your face is of the form</source>
          <target state="translated">ほとんどの場合、これらの前進と後退はすべて迅速に行われ、検索も高速です。しかし、文字列のサイズに応じて実行時間が指数関数的に増加する病的な正規表現もあります。典型的な構造体は、次のような形式です。</target>
        </trans-unit>
        <trans-unit id="e77fec64b4c635ea20e1b59e3b7d5f77ce28d8e0" translate="yes" xml:space="preserve">
          <source>Most of the time, output from the C routine can be handled through use of the RETVAL and OUTPUT directives. However, there are some cases where the argument stack is not already long enough to handle all the return values. An example is the POSIX tzname() call, which takes no arguments, but returns two, the local time zone's standard and summer time abbreviations.</source>
          <target state="translated">ほとんどの場合、C ルーチンからの出力は RETVAL と OUTPUT ディレクティブを使用して処理できます。しかし、引数スタックがすべての戻り値を処理するのに十分な長さではない場合もあります。これは引数を取りませんが、ローカルタイムゾーンの標準時間と夏時間の省略形の二つを返します。</target>
        </trans-unit>
        <trans-unit id="4cf605ff0085f7cdb0263cf668764df45a3b6647" translate="yes" xml:space="preserve">
          <source>Most of the time, the default behavior is what is wanted, but &lt;code&gt;//s&lt;/code&gt; and &lt;code&gt;//m&lt;/code&gt; are occasionally very useful. If &lt;code&gt;//m&lt;/code&gt; is being used, the start of the string can still be matched with &lt;code&gt;\A&lt;/code&gt; and the end of the string can still be matched with the anchors &lt;code&gt;\Z&lt;/code&gt; (matches both the end and the newline before, like &lt;code&gt;$&lt;/code&gt; ), and &lt;code&gt;\z&lt;/code&gt; (matches only the end):</source>
          <target state="translated">ほとんどの場合、デフォルトの動作が必要ですが、 &lt;code&gt;//s&lt;/code&gt; と &lt;code&gt;//m&lt;/code&gt; が非常に役立つ場合があります。 &lt;code&gt;//m&lt;/code&gt; が使用されている場合でも、文字列の先頭は &lt;code&gt;\A&lt;/code&gt; と一致でき、文字列の末尾はアンカー &lt;code&gt;\Z&lt;/code&gt; と一致できます（ &lt;code&gt;$&lt;/code&gt; のように、末尾と前の改行の両方に一致します）。 &lt;code&gt;\z&lt;/code&gt; （末尾のみに一致）：</target>
        </trans-unit>
        <trans-unit id="89315b4d91e89302d070cbd7a7e6cdb9cab0b050" translate="yes" xml:space="preserve">
          <source>Most of the time, the default behavior is what is wanted, but &lt;code&gt;/s&lt;/code&gt; and &lt;code&gt;/m&lt;/code&gt; are occasionally very useful. If &lt;code&gt;/m&lt;/code&gt; is being used, the start of the string can still be matched with &lt;code&gt;\A&lt;/code&gt; and the end of the string can still be matched with the anchors &lt;code&gt;\Z&lt;/code&gt; (matches both the end and the newline before, like &lt;code&gt;'$'&lt;/code&gt;), and &lt;code&gt;\z&lt;/code&gt; (matches only the end):</source>
          <target state="translated">ほとんどの場合、デフォルトの動作が必要ですが、 &lt;code&gt;/s&lt;/code&gt; と &lt;code&gt;/m&lt;/code&gt; が非常に役立つ場合があります。 &lt;code&gt;/m&lt;/code&gt; が使用されている場合でも、文字列の先頭は &lt;code&gt;\A&lt;/code&gt; と一致し、文字列の末尾はアンカー &lt;code&gt;\Z&lt;/code&gt; と照合できます（ &lt;code&gt;'$'&lt;/code&gt; ように、前の末尾と改行の両方に一致します）。および &lt;code&gt;\z&lt;/code&gt; （末尾のみに一致）：</target>
        </trans-unit>
        <trans-unit id="12fd6c425f6aad23df3156037ea683dfee498467" translate="yes" xml:space="preserve">
          <source>Most of the time, the longest possible text that does not include spaces between components and which contains matching braces or brackets. because the outcome may be determined by voting based on heuristic estimators, the result is not strictly predictable. Fortunately, it's usually correct for ambiguous cases.</source>
          <target state="translated">大抵の場合、構成要素間のスペースを含まず、一致する中括弧や括弧を含む可能性のある長文が、ヒューリスティックな推定値に基づいた投票で結果が決まる可能性があるため、厳密には予測できません。幸いなことに、曖昧な場合には通常は正しい。</target>
        </trans-unit>
        <trans-unit id="b3fb5476790113a0dea04a1d528889b51b315f83" translate="yes" xml:space="preserve">
          <source>Most of the time, this warning occurs when a byte-string is concatenated with a unicode-string. There are a number of ways to solve it:</source>
          <target state="translated">ほとんどの場合、この警告はバイト文字列がユニコード文字列と結合されたときに発生します。これを解決する方法はいくつかあります。</target>
        </trans-unit>
        <trans-unit id="faff5fae267b68e66a542eebf06c3a2fb20f6315" translate="yes" xml:space="preserve">
          <source>Most of the time, though, you'll want to be dealing with SVs internally instead of raw &lt;code&gt;char *&lt;/code&gt; strings:</source>
          <target state="translated">ただし、ほとんどの場合、未加工の &lt;code&gt;char *&lt;/code&gt; 文字列ではなく、内部でSVを処理する必要があります。</target>
        </trans-unit>
        <trans-unit id="e3da35f6fb8f67dff58b56670aaa5e754c6ece5e" translate="yes" xml:space="preserve">
          <source>Most of the time, you shouldn't care what package an object is blessed into, however, as long as it claims to inherit from that class:</source>
          <target state="translated">しかし、オブジェクトがそのクラスを継承していると主張している限り、ほとんどの場合、オブジェクトがどのようなパッケージに祝福されているかは気にするべきではありません。</target>
        </trans-unit>
        <trans-unit id="70ed3f1e9ec3872fc596a127d78b3433084d76ac" translate="yes" xml:space="preserve">
          <source>Most of the time, you will need only a single set of angle brackets to delimit the beginning and end of formatting codes. However, sometimes you will want to put a real right angle bracket (a greater-than sign, '&amp;gt;') inside of a formatting code. This is particularly common when using a formatting code to provide a different font-type for a snippet of code. As with all things in Perl, there is more than one way to do it. One way is to simply escape the closing bracket using an &lt;code&gt;E&lt;/code&gt; code:</source>
          <target state="translated">ほとんどの場合、フォーマットコードの開始と終了を区切るのに必要な山かっこのセットは1つだけです。ただし、フォーマットコード内に実際の直角山かっこ（大なり記号 '&amp;gt;'）を挿入したい場合があります。これは、フォーマットコードを使用してコードのスニペットに異なるフォントタイプを提供する場合に特に一般的です。 Perlのすべてのものと同様に、これを行う方法は複数あります。 1つの方法は、 &lt;code&gt;E&lt;/code&gt; コードを使用して閉じブラケットを単純にエスケープすることです。</target>
        </trans-unit>
        <trans-unit id="c0c2da0623840fbe23f26b030382d27c35d7bca2" translate="yes" xml:space="preserve">
          <source>Most of the work involved in both rounding up a suitable set of candidate commits and cherry-picking those for which three votes have been cast will be done by the maint branch release manager, but anyone else is free to add other proposals if they're keen to ensure certain fixes don't get overlooked or fear they already have been.</source>
          <target state="translated">適切なコミット候補を集め、3票が投じられたコミットをチェリーピックする作業のほとんどは maint ブランチのリリースマネージャが行いますが、特定の修正が見落とされないようにしたい、あるいはすでに修正されていることを恐れているのであれば、他の提案を追加しても構いません。</target>
        </trans-unit>
        <trans-unit id="724a76b549a2e76bc9ab35aacf508ff92c207228" translate="yes" xml:space="preserve">
          <source>Most of these are self-explanatory, but &lt;code&gt;*foo{IO}&lt;/code&gt; deserves special attention. It returns the IO handle, used for file handles (&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;), sockets (&lt;a href=&quot;functions/socket&quot;&gt;socket&lt;/a&gt; and &lt;a href=&quot;functions/socketpair&quot;&gt;socketpair&lt;/a&gt;), and directory handles (&lt;a href=&quot;functions/opendir&quot;&gt;opendir&lt;/a&gt;). For compatibility with previous versions of Perl, &lt;code&gt;*foo{FILEHANDLE}&lt;/code&gt; is a synonym for &lt;code&gt;*foo{IO}&lt;/code&gt; , though it is deprecated as of 5.8.0. If deprecation warnings are in effect, it will warn of its use.</source>
          <target state="translated">これらのほとんどは自明ですが、 &lt;code&gt;*foo{IO}&lt;/code&gt; は特別な注意に値します。ファイルハンドル（&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;）、ソケット（&lt;a href=&quot;functions/socket&quot;&gt;socket&lt;/a&gt;および&lt;a href=&quot;functions/socketpair&quot;&gt;socketpair&lt;/a&gt;）、およびディレクトリハンドル（&lt;a href=&quot;functions/opendir&quot;&gt;opendir&lt;/a&gt;）に使用されるIOハンドルを返します。以前のバージョンのPerlとの互換性のために、 &lt;code&gt;*foo{FILEHANDLE}&lt;/code&gt; は &lt;code&gt;*foo{IO}&lt;/code&gt; 同義語ですが、5.8.0で非推奨になりました。非推奨の警告が有効になっている場合は、その使用について警告します。</target>
        </trans-unit>
        <trans-unit id="852ae11a8260d83d3745e4dd9b3fd5be0e936389" translate="yes" xml:space="preserve">
          <source>Most of these are self-explanatory, but &lt;code&gt;*foo{IO}&lt;/code&gt; deserves special attention. It returns the IO handle, used for file handles (&lt;a href=&quot;perlfunc#open&quot;&gt;&quot;open&quot; in perlfunc&lt;/a&gt;), sockets (&lt;a href=&quot;perlfunc#socket&quot;&gt;&quot;socket&quot; in perlfunc&lt;/a&gt; and &lt;a href=&quot;perlfunc#socketpair&quot;&gt;&quot;socketpair&quot; in perlfunc&lt;/a&gt;), and directory handles (&lt;a href=&quot;perlfunc#opendir&quot;&gt;&quot;opendir&quot; in perlfunc&lt;/a&gt;). For compatibility with previous versions of Perl, &lt;code&gt;*foo{FILEHANDLE}&lt;/code&gt; is a synonym for &lt;code&gt;*foo{IO}&lt;/code&gt;, though it is discouraged, to encourage a consistent use of one name: IO. On perls between v5.8 and v5.22, it will issue a deprecation warning, but this deprecation has since been rescinded.</source>
          <target state="translated">これらのほとんどは自明ですが、 &lt;code&gt;*foo{IO}&lt;/code&gt; は特別な注意に値します。これは、ファイルハンドル（&lt;a href=&quot;perlfunc#open&quot;&gt;perlfuncの「open」&lt;/a&gt;）、ソケット（&lt;a href=&quot;perlfunc#socket&quot;&gt;perlfuncの「socket」&lt;/a&gt;およびperlfuncの&lt;a href=&quot;perlfunc#socketpair&quot;&gt;「socketpair」&lt;/a&gt;）、およびディレクトリハンドル（&lt;a href=&quot;perlfunc#opendir&quot;&gt;perlfuncの「opendir」&lt;/a&gt;）に使用されるIOハンドルを返します。以前のバージョンのPerlとの互換性のために、 &lt;code&gt;*foo{FILEHANDLE}&lt;/code&gt; は &lt;code&gt;*foo{IO}&lt;/code&gt; 同義語ですが、1つの名前（IO）の一貫した使用を推奨することはお勧めしません。 v5.8とv5.22の間のperlでは、非推奨の警告が発行されますが、この非推奨はその後取り消されました。</target>
        </trans-unit>
        <trans-unit id="869a6315acbbfb1f37efec8298474bbe72ca1495" translate="yes" xml:space="preserve">
          <source>Most of these books are available online through Safari Books Online ( &lt;a href=&quot;http://safaribooksonline.com/&quot;&gt;http://safaribooksonline.com/&lt;/a&gt; ).</source>
          <target state="translated">これらの書籍のほとんどは、Safari Books Online（&lt;a href=&quot;http://safaribooksonline.com/&quot;&gt;http://safaribooksonline.com/&lt;/a&gt;）からオンラインで入手できます。</target>
        </trans-unit>
        <trans-unit id="6b1e0ab2dbc899b58b14484449b9fa1ef61ed05b" translate="yes" xml:space="preserve">
          <source>Most of these examples taken from the current edition of the &amp;ldquo;Camel Book&amp;rdquo;; that is, from the 4ᵗʰ Edition of</source>
          <target state="translated">これらの例のほとんどは、「キャメルブック」の最新版から取られたものです。つまり、4ᵗʰエディションの</target>
        </trans-unit>
        <trans-unit id="24aedca2a61e00a967c1839f41c7571c0b40465f" translate="yes" xml:space="preserve">
          <source>Most of these macros are explained in &lt;a href=&quot;perlapi&quot;&gt;perlapi&lt;/a&gt;, and some of the more important ones are explained in &lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt; as well. Pay special attention to &lt;a href=&quot;perlguts#Background-and-PERL_IMPLICIT_CONTEXT&quot;&gt;&quot;Background and PERL_IMPLICIT_CONTEXT&quot; in perlguts&lt;/a&gt; for information on the &lt;code&gt;[pad]THX_?&lt;/code&gt; macros.</source>
          <target state="translated">これらのマクロのほとんどは&lt;a href=&quot;perlapi&quot;&gt;perlapi&lt;/a&gt;で説明されており、より重要なマクロのいくつかは&lt;a href=&quot;perlxs&quot;&gt;perlx&lt;/a&gt;でも説明されています。 &lt;code&gt;[pad]THX_?&lt;/code&gt; 情報については&lt;a href=&quot;perlguts#Background-and-PERL_IMPLICIT_CONTEXT&quot;&gt;、Perlgutの「BackgroundandPERL_IMPLICIT_CONTEXT」に&lt;/a&gt;特に注意してください。マクロ。</target>
        </trans-unit>
        <trans-unit id="d786698e017d5ef7ad504f1d9efc84667a246c11" translate="yes" xml:space="preserve">
          <source>Most of these macros are explained in &lt;a href=&quot;perlapi&quot;&gt;perlapi&lt;/a&gt;, and some of the more important ones are explained in &lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt; as well. Pay special attention to &lt;a href=&quot;perlguts#Background-and-PERL_IMPLICIT_CONTEXT&quot;&gt;Background and PERL_IMPLICIT_CONTEXT in perlguts&lt;/a&gt; for information on the &lt;code&gt;[pad]THX_?&lt;/code&gt; macros.</source>
          <target state="translated">これらのマクロのほとんどは&lt;a href=&quot;perlapi&quot;&gt;perlapi&lt;/a&gt;で説明されており、より重要なマクロの一部は&lt;a href=&quot;perlxs&quot;&gt;perlx&lt;/a&gt;でも説明されています。 &lt;code&gt;[pad]THX_?&lt;/code&gt; 情報については、&lt;a href=&quot;perlguts#Background-and-PERL_IMPLICIT_CONTEXT&quot;&gt;背景とperlgutsのPERL_IMPLICIT_CONTEXTに&lt;/a&gt;特に注意してください。マクロ。</target>
        </trans-unit>
        <trans-unit id="028b0ff743d4839b575a9715a3960dc1ea4b9750" translate="yes" xml:space="preserve">
          <source>Most of these make up for limitations in the Win9x/nmake command shell.</source>
          <target state="translated">これらのほとんどは、Win9x/nmakeコマンドシェルの制限を補っています。</target>
        </trans-unit>
        <trans-unit id="f6321c8bc65f6128425ae15e80b31cb962b1699f" translate="yes" xml:space="preserve">
          <source>Most of these make up for limitations in the Win9x/nmake command shell. Mostly its lack of &amp;amp;&amp;amp;.</source>
          <target state="translated">これらのほとんどは、Win9x / nmakeコマンドシェルの制限を補います。主に&amp;amp;&amp;amp;の欠如。</target>
        </trans-unit>
        <trans-unit id="30b8e48b7b6d88d36a47fc7a0d1827819d55e75f" translate="yes" xml:space="preserve">
          <source>Most of these routines quietly but politely return &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; when they fail instead of causing your program to die right then and there due to an uncaught exception. (Actually, some of the new</source>
          <target state="translated">これらのルーチンのほとんどは、プログラムがその場で死ぬのではなく、キャッチされない例外が原因で、失敗したときに静かに、ただし丁寧に &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; を返します。（実際には、いくつかの新しい</target>
        </trans-unit>
        <trans-unit id="9a0bed061702626e79ddbe0cbac46eae45c7bc32" translate="yes" xml:space="preserve">
          <source>Most of these routines quietly but politely return &lt;code&gt;undef&lt;/code&gt; when they fail instead of causing your program to die right then and there due to an uncaught exception. (Actually, some of the new</source>
          <target state="translated">これらのルーチンのほとんどは、キャッチされない例外のためにプログラムをその場で停止させるのではなく、失敗したときに静かに、しかし丁寧に &lt;code&gt;undef&lt;/code&gt; を返します。（実際には、いくつかの新しい</target>
        </trans-unit>
        <trans-unit id="e4fac36536fdd9d69b572662cd260a78171c7378" translate="yes" xml:space="preserve">
          <source>Most of this section is also taken from JSON::XS.</source>
          <target state="translated">このセクションのほとんどは、JSON::XSからも引用されています。</target>
        </trans-unit>
        <trans-unit id="2deedfc22b1548df052896f1f0722aefc9eea1ec" translate="yes" xml:space="preserve">
          <source>Most often, &lt;code&gt;open&lt;/code&gt; gets invoked with three arguments: the required FILEHANDLE (usually an empty scalar variable), followed by MODE (usually a literal describing the I/O mode the filehandle will use), and then the filename that the new filehandle will refer to.</source>
          <target state="translated">ほとんどの場合、 &lt;code&gt;open&lt;/code&gt; は3つの引数で呼び出されます。必要なFILEHANDLE（通常は空のスカラー変数）、MODE（通常はファイルハンドルが使用するI / Oモードを説明するリテラル）、そして新しいファイルハンドルが参照するファイル名です。に。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
