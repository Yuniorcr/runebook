<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="7f660ccc3d4a7cddf101f6e1c123d42735446293" translate="yes" xml:space="preserve">
          <source>Policy on installing 'build_requires' modules (yes, no, ask/yes, ask/no)?</source>
          <target state="translated">build_requires' モジュールのインストールに関するポリシー (yes,no,ask/yes,ask/no)?</target>
        </trans-unit>
        <trans-unit id="d27d963e0d2061e0a6349a591740d5932e76c404" translate="yes" xml:space="preserve">
          <source>Pollutes global name space for development only task.</source>
          <target state="translated">開発専用タスクのグローバルネームスペースを汚染します。</target>
        </trans-unit>
        <trans-unit id="989fc91d044783d05d714e433d3e90dca9bdf4da" translate="yes" xml:space="preserve">
          <source>Polymorphism</source>
          <target state="translated">Polymorphism</target>
        </trans-unit>
        <trans-unit id="948fb69e483149176df26ee3b58ea284be041444" translate="yes" xml:space="preserve">
          <source>Polymorphism is one of the key concepts of object-oriented design.</source>
          <target state="translated">多相性は、オブジェクト指向設計の重要な概念の一つです。</target>
        </trans-unit>
        <trans-unit id="15d9214a43c40d681745a95042b9d1c034b639fc" translate="yes" xml:space="preserve">
          <source>Popped</source>
          <target state="translated">Popped</target>
        </trans-unit>
        <trans-unit id="cbe5045d76e02848ae658b25f703a7ed8059f4e2" translate="yes" xml:space="preserve">
          <source>Popping contexts</source>
          <target state="translated">ポッピングコンテキスト</target>
        </trans-unit>
        <trans-unit id="d60d997de9e6fe93b76346e1fd7960a534079d99" translate="yes" xml:space="preserve">
          <source>Pops a double off the stack.</source>
          <target state="translated">スタックからダブルをポップします。</target>
        </trans-unit>
        <trans-unit id="22a0e05c4b5984d222d58a3bf9aebf24e0c8d1a8" translate="yes" xml:space="preserve">
          <source>Pops a long off the stack.</source>
          <target state="translated">スタックからロングをポップします。</target>
        </trans-unit>
        <trans-unit id="832e72784da0b9e3a4bd68c7f793defaefe32db9" translate="yes" xml:space="preserve">
          <source>Pops a string off the stack which must consist of bytes i.e. characters &amp;lt; 256.</source>
          <target state="translated">スタックから文字列をポップします。これは、バイト（256文字未満）で構成する必要があります。</target>
        </trans-unit>
        <trans-unit id="ec17353cdd71390a8e418b8c83b4061cd7788eaf" translate="yes" xml:space="preserve">
          <source>Pops a string off the stack.</source>
          <target state="translated">スタックから文字列を取り出します。</target>
        </trans-unit>
        <trans-unit id="cc089051dba8a74af21264418e130c57e2a1f868" translate="yes" xml:space="preserve">
          <source>Pops a string off the stack. Identical to POPp. There are two names for historical reasons.</source>
          <target state="translated">スタックから文字列をポップします。POPpと同じです。歴史的な理由で2つの名前があります。</target>
        </trans-unit>
        <trans-unit id="7bc58c6d11b5634fdac1fab6062117497b69ac1a" translate="yes" xml:space="preserve">
          <source>Pops an SV off the stack.</source>
          <target state="translated">スタックからSVをポップします。</target>
        </trans-unit>
        <trans-unit id="ef2c625805cf71b84685943309767e2a59dbd613" translate="yes" xml:space="preserve">
          <source>Pops an integer off the stack.</source>
          <target state="translated">スタックから整数をポップアウトします。</target>
        </trans-unit>
        <trans-unit id="5c365c6846ddc9582dafdafc0b5e039da1313852" translate="yes" xml:space="preserve">
          <source>Pops an unsigned integer off the stack.</source>
          <target state="translated">符号なし整数をスタックからポップします。</target>
        </trans-unit>
        <trans-unit id="36642789da9be8ea37d859e89803892de83f4c7e" translate="yes" xml:space="preserve">
          <source>Pops an unsigned long off the stack.</source>
          <target state="translated">符号なしのロングをスタックからポップします。</target>
        </trans-unit>
        <trans-unit id="b55131b918b111fc0b929f5b1aeacc6459ed4da9" translate="yes" xml:space="preserve">
          <source>Pops and returns the last value of the array, shortening the array by one element.</source>
          <target state="translated">配列の最後の値をポップして返します。</target>
        </trans-unit>
        <trans-unit id="72124d219ef96cd5acab8db5a13304309882b7c2" translate="yes" xml:space="preserve">
          <source>Populates the arrays @keys with the all the keys that would pass an &lt;code&gt;&lt;a href=&quot;../functions/exists&quot;&gt;exists&lt;/a&gt;&lt;/code&gt; tests, and populates @hidden with the remaining legal keys that have not been utilized.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../functions/exists&quot;&gt;exists&lt;/a&gt;&lt;/code&gt; テストに合格するすべてのキーを配列@keysに入力し、利用されていない残りの有効なキーを@hiddenに入力します。</target>
        </trans-unit>
        <trans-unit id="a7f298f65686b8fbf54f9b4beec946beafc93e24" translate="yes" xml:space="preserve">
          <source>Populates the arrays @keys with the all the keys that would pass an &lt;code&gt;exists&lt;/code&gt; tests, and populates @hidden with the remaining legal keys that have not been utilized.</source>
          <target state="translated">配列@keysに、 &lt;code&gt;exists&lt;/code&gt; テストに合格するすべてのキーを入力し、@ hiddenに、使用されていない残りの有効なキーを入力します。</target>
        </trans-unit>
        <trans-unit id="cee02632a33989e168b12ec741e01b5327a83cb2" translate="yes" xml:space="preserve">
          <source>Populating a freshly installed perl with one's favorite modules is pretty easy if you maintain a private bundle definition file. To get a useful blueprint of a bundle definition file, the command autobundle can be used on the CPAN shell command line. This command writes a bundle definition file for all modules installed for the current perl interpreter. It's recommended to run this command once only, and from then on maintain the file manually under a private name, say Bundle/my_bundle.pm. With a clever bundle file you can then simply say</source>
          <target state="translated">プライベートバンドル定義ファイルを管理していれば、インストールされたばかりの perl にお気に入りのモジュールを入れるのはとても簡単です。バンドル定義ファイルの便利な青写真を得るには、CPAN シェルのコマンドラインで autobundle コマンドを使うことができます。このコマンドは、現在の perl インタプリタにインストールされているすべてのモジュールのバンドル定義ファイルを書き込みます。このコマンドは一度だけ実行し、それ以降は、Bundle/my_bundle.pm のようなプライベート名で手動でファイルを管理することをお勧めします。巧妙なバンドルファイルを使えば、以下のように簡単にできます</target>
        </trans-unit>
        <trans-unit id="c4dda63f16dd4f315c01d63949c2e824ed322455" translate="yes" xml:space="preserve">
          <source>Port to Perl 5.22</source>
          <target state="translated">Perl 5.22への移植</target>
        </trans-unit>
        <trans-unit id="b307b88c84327b1804aee227595be53342245965" translate="yes" xml:space="preserve">
          <source>Portability</source>
          <target state="translated">Portability</target>
        </trans-unit>
        <trans-unit id="429fea4a8a23d35cb2866b8a8e54eff4f9f7d19a" translate="yes" xml:space="preserve">
          <source>Portability Between PA-RISC Versions</source>
          <target state="translated">PA-RISCバージョン間の移植性</target>
        </trans-unit>
        <trans-unit id="0b34819d0cef9dd29634d338c59e4d3820c728c9" translate="yes" xml:space="preserve">
          <source>Portability fixes, such as changes to Configure and the files in the hints/ folder.</source>
          <target state="translated">Configureの変更やヒント/フォルダ内のファイルの変更などの移植性の修正。</target>
        </trans-unit>
        <trans-unit id="c3c45da3be29d5d76052af9f1f337ab20837e6f2" translate="yes" xml:space="preserve">
          <source>Portability issues</source>
          <target state="translated">移植性の問題</target>
        </trans-unit>
        <trans-unit id="1f251a1b72b795d210c37cc8808dfb91c5841c32" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#-X&quot;&gt;-X in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#-X&quot;&gt;perlportの-X&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="84a89b40cc0009e8b885def1fe631517f13c8804" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#alarm&quot;&gt;alarm in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#alarm&quot;&gt;perlportのアラーム&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f58a7cb3f3e811c1eac599d9c7bf48061833c027" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#atan2&quot;&gt;atan2 in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#atan2&quot;&gt;perlportのatan2&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1ed8beab57923abb2517704ee81711f38cf21b94" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#binmode&quot;&gt;binmode in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#binmode&quot;&gt;perlportのbinmode&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="171e986303317134be33b061b9ce46ef505fd940" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#chmod&quot;&gt;chmod in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#chmod&quot;&gt;perlportのchmod&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="931cc82efd9b523c1ff1857e1014607381be1f1a" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#chown&quot;&gt;chown in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#chown&quot;&gt;perlportのchown&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="34e114d642008c4fff0621ad0f7fefa204d02d90" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#chroot&quot;&gt;chroot in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#chroot&quot;&gt;perlportのchroot&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9f1c48eaf2397ca415e41a6fa9517451281c277c" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#crypt&quot;&gt;crypt in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#crypt&quot;&gt;perlportでの暗号化&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c45bac113f4c308e82936e60df6df6c1931dbb8b" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#dbmclose&quot;&gt;dbmclose in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#dbmclose&quot;&gt;perlportのdbmclose&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2fbf347423e5b87d1b332ca9b3d6108fdc3a88e2" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#dbmopen&quot;&gt;dbmopen in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#dbmopen&quot;&gt;perlportのdbmopen&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8eb5ec3466f6cdf4226f3ab0929d83f32b278695" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#dump&quot;&gt;dump in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#dump&quot;&gt;perlportにダンプします&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3f8d3bbf0b7025b86f5673b95a17a0ef3c1c1212" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#exec&quot;&gt;exec in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#exec&quot;&gt;perlportでのexec&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="311229258591d86e072ab3c10225ef0a5e3642a4" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#exit&quot;&gt;exit in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#exit&quot;&gt;perlportで終了します&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9ce6eaa96048196db85fe31b8746c5d58fd9e8d1" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#fcntl&quot;&gt;fcntl in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#fcntl&quot;&gt;perlportのfcntl&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="079a6396bf954e8003a8a937147cde117ff06852" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#flock&quot;&gt;flock in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#flock&quot;&gt;perlportの群れ&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4062b066ff4e5e57c22dcd6e5f3812306be6cb55" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#fork&quot;&gt;fork in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#fork&quot;&gt;perlportのフォーク&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="374cc0f9e27f1d2543a6f2e6f55c2b2ecf24a0ca" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#getlogin&quot;&gt;getlogin in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#getlogin&quot;&gt;perlportでのgetlogin&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9937a6aa9eb14db23986faebc9c754557a9cb63e" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#getpgrp&quot;&gt;getpgrp in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#getpgrp&quot;&gt;perlportのgetpgrp&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3a3c9c808efbd9e2a03c0ba22780dc63fa80b976" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#getppid&quot;&gt;getppid in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#getppid&quot;&gt;perlportのgetppid&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3c8bf9cafbfe5a3727f717e18fe5637a9657d1e3" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#getpriority&quot;&gt;getpriority in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#getpriority&quot;&gt;perlportでのgetpriority&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6c9a92d771d324eae7e1f6085b85450eaa5f4c33" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#getpwnam&quot;&gt;getpwnam in perlport&lt;/a&gt; to &lt;a href=&quot;../perlport#endservent&quot;&gt;endservent in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#getpwnam&quot;&gt;のgetpwnamではperlport&lt;/a&gt;に&lt;a href=&quot;../perlport#endservent&quot;&gt;endserventではperlport&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="95a33925a0db79a48d3c1dacd96866c72e816ad1" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#getsockopt&quot;&gt;getsockopt in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#getsockopt&quot;&gt;perlportのgetsockopt&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="451fd1ca3fe7d172aad55237b40c25c3720eefee" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#glob&quot;&gt;glob in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#glob&quot;&gt;perlportのglob&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e375af9f12d1c6f2bc03839a36e2ac89a755e4ad" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#gmtime&quot;&gt;gmtime in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#gmtime&quot;&gt;perlportのgmtime&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cb0916bfbaab25389dda35cbe69c6f9a0cabd92b" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#ioctl&quot;&gt;ioctl in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#ioctl&quot;&gt;perlportのioctl&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2de3944e42155996eeb50944ed2976186dfbbfa5" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#kill&quot;&gt;kill in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#kill&quot;&gt;perlportでkillします&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7eaa68d564eddd4045a9dd57d744941b1da03a13" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#link&quot;&gt;link in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#link&quot;&gt;perlportのリンク&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0c477c22606ba7a529797dfc38e60dae51d00171" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#localtime&quot;&gt;localtime in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#localtime&quot;&gt;perlportのローカルタイム&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3e2c5cb8f92dc1d3aaef9234fc3211969082289f" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#lstat&quot;&gt;lstat in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#lstat&quot;&gt;perlportのlstat&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ac214a3223717227344f149c9e9400019a1ac97d" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#msgctl&quot;&gt;msgctl in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#msgctl&quot;&gt;perlportのmsgctl&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2aacc2a0a20793e8dc06ed28334f96f1109414e4" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#msgget&quot;&gt;msgget in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#msgget&quot;&gt;msgget in perlport&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="58c6893a0d57344354cb89274be70b30e58e8319" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#msgrcv&quot;&gt;msgrcv in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#msgrcv&quot;&gt;perlportのmsgrcv&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1ece2f63ba6ea017230ff113a7682ad9cb61a1b9" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#msgsnd&quot;&gt;msgsnd in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#msgsnd&quot;&gt;perlportのmsgsnd&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2fd2c0061cf9f7d59627ee7926b142b43c0bb5d8" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#open&quot;&gt;open in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#open&quot;&gt;perlportで開いてください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b8d9dcc4183e959a0a8c406e297f639b821d7e6a" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#readlink&quot;&gt;readlink in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#readlink&quot;&gt;perlportのreadlink&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6d80623fff5a5452ded7eca5cafeaad9a220479f" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#rename&quot;&gt;rename in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#rename&quot;&gt;perlportでの名前変更&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="60cb95b01d7cac1160a8fcd9aa6319e2b256dd8b" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#rewinddir&quot;&gt;rewinddir in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#rewinddir&quot;&gt;perlportのrewinddir&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7e8ee271a393b3ab35832a0399a9716bd4545be8" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#select&quot;&gt;select in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#select&quot;&gt;perlportで選択します&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a916a792a19d0914f5e538e1b61507950ed248bc" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#semctl&quot;&gt;semctl in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#semctl&quot;&gt;perlportのsemctl&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d6e22134dc6f984ff19dd4e0daa2f57b8baf5986" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#semget&quot;&gt;semget in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#semget&quot;&gt;perlportのsemget&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="474c50d150da4761b9c780c7974d717b1c6b2c9e" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#semop&quot;&gt;semop in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#semop&quot;&gt;perlportのsemop&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dac5afa34df9b930f8c89c10ca69e5570193c2e6" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#setpgrp&quot;&gt;setpgrp in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#setpgrp&quot;&gt;perlportのsetpgrp&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e23f276f0f8950ad13f46fae5b1b8fd4509591d7" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#setpriority&quot;&gt;setpriority in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#setpriority&quot;&gt;perlportのsetpriority&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7061e1739edc69bb246b83a096fa0981e1f5251c" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#setsockopt&quot;&gt;setsockopt in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#setsockopt&quot;&gt;perlportのsetsockopt&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d6b4ae9b5ad1b08da481f8567bbfc1cb8b669699" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#shmctl&quot;&gt;shmctl in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#shmctl&quot;&gt;perlportのshmctl&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5ceb7cceede55255f2c03923419ba00d17dd1373" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#shmget&quot;&gt;shmget in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#shmget&quot;&gt;perlportのshmget&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0bc47a3fc4fc4a38ef3e0d7b17a166a775e764ce" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#shmread&quot;&gt;shmread in perlport&lt;/a&gt; and &lt;a href=&quot;../perlport#shmwrite&quot;&gt;shmwrite in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#shmread&quot;&gt;perlportのshmread&lt;/a&gt;および&lt;a href=&quot;../perlport#shmwrite&quot;&gt;perlportのshmwrite&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0dce41756b232765d1c032ecd3d3a0d9a8e33895" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#socketpair&quot;&gt;socketpair in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#socketpair&quot;&gt;perlportのsocketpair&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="55476d750e005ffead8b73a10218424aba53ef83" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#stat&quot;&gt;stat in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#stat&quot;&gt;perlportのstat&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="71363d0b541b18ba37818287ceda27e5bde57d90" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#symlink&quot;&gt;symlink in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#symlink&quot;&gt;perlportのシンボリックリンク&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fd26addde8a2d4d9d8c7b6e687d64da690b8666a" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#syscall&quot;&gt;syscall in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#syscall&quot;&gt;perlportのsyscall&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e3c5f3f484e4201b1f67796ad89ef59b123e7c6c" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#sysopen&quot;&gt;sysopen in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#sysopen&quot;&gt;perlportのsysopen&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5106a8c40515e6624c616e5ac9aebbbd80552a7c" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#system&quot;&gt;system in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#system&quot;&gt;perlportのシステム&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="61d1d487f826b2d057df6e670b5e42fbeac37cd3" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#times&quot;&gt;times in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#times&quot;&gt;perlportでの時間&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ccbec3396a164294596f5e1e4e0bdba951cdb81e" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#truncate&quot;&gt;truncate in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#truncate&quot;&gt;perlportで切り捨て&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4ba7b92e20617a2d8b7c263846d7133fd9ec43fc" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#umask&quot;&gt;umask in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#umask&quot;&gt;perlportのumask&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="40c14ab69251d27767b250c1548e4d933cd1a724" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#utime&quot;&gt;utime in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#utime&quot;&gt;perlportのutime&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4675b398cb210e70ff86790451786bc0364ba2b8" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#wait&quot;&gt;wait in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#wait&quot;&gt;perlportで待機します&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e3e89038c4dec1cc988024cd99589fc6629b23cf" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#waitpid&quot;&gt;waitpid in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;../perlport#waitpid&quot;&gt;perlportのwaitpid&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="14355ea45cbf12c5d60bec4e73dcf175d1825f40" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#-X&quot;&gt;&quot;-X&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#-X&quot;&gt;perlportの「-X」&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b70981300ecccd7b8f330cb81f6103c289bec058" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#-X&quot;&gt;-X in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#-X&quot;&gt;perlportの-X&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b9f366c81884984a5734dc225dec396324f06b4b" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#alarm&quot;&gt;&quot;alarm&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#alarm&quot;&gt;perlportの「アラーム」&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c4c41aff1aadd6d30ae436b6ad22a7635b760f8f" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#alarm&quot;&gt;alarm in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#alarm&quot;&gt;perlportのアラーム&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9d0963dd42ec14751064ca600b5e821580c49ad7" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#atan2&quot;&gt;&quot;atan2&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#atan2&quot;&gt;perlportの「atan2」&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="286b7051a1db4c371e7295081bf3da49c3cacee0" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#atan2&quot;&gt;atan2 in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#atan2&quot;&gt;perlportのatan2&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5856653fd8e5a4cfc3630965419bd97446ec20b5" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#binmode&quot;&gt;&quot;binmode&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#binmode&quot;&gt;perlportの「binmode」&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4f60be3a8366f3adaf8b704d8496c1429fcdedb9" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#binmode&quot;&gt;binmode in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#binmode&quot;&gt;perlportのbinmode&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="308cef968df2ed6e074f260be6d29326be3ef732" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#chmod&quot;&gt;&quot;chmod&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#chmod&quot;&gt;perlportの「chmod」&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="42f721f1585fe7bf02000f11e03f8ca6dc0c3e62" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#chmod&quot;&gt;chmod in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#chmod&quot;&gt;perlportのchmod&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="293f2a11166c10b197b71dec02f270f1fb1af042" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#chown&quot;&gt;&quot;chown&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#chown&quot;&gt;perlportの「chown」&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="34105bc16f3abc62a7ebdccb17b84f89ff247b43" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#chown&quot;&gt;chown in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#chown&quot;&gt;perlportのchown&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e1df0a7d0f0b913bfef88464704199d8087e930f" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#chroot&quot;&gt;&quot;chroot&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#chroot&quot;&gt;perlportの「chroot」&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a3161ed910ec8abac73c4bb8e4ebdf2e5f427689" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#chroot&quot;&gt;chroot in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#chroot&quot;&gt;perlportのchroot&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bc696b8e43a610552126beaf28d383cd01a7222d" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#crypt&quot;&gt;&quot;crypt&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#crypt&quot;&gt;perlportの「crypt」&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a9a5244c82530287a1680f7e4630690500bf2c1a" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#crypt&quot;&gt;crypt in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#crypt&quot;&gt;perlportでの暗号化&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7a9e5dde3ee4ad858ae65c18f43c8bc3b58c9df1" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#dbmclose&quot;&gt;&quot;dbmclose&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#dbmclose&quot;&gt;perlportの「dbmclose」&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8153edd1c560afaec1e5e4b29ef61cb3a5fea317" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#dbmclose&quot;&gt;dbmclose in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#dbmclose&quot;&gt;perlportのdbmclose&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="28cb5adc1bf64ea065f4ec2410e3dcda7f66d46f" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#dbmopen&quot;&gt;&quot;dbmopen&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#dbmopen&quot;&gt;perlportの「dbmopen」&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ccd35e85192d4a9e665b440ebd8d98e63a21fcd8" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#dbmopen&quot;&gt;dbmopen in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#dbmopen&quot;&gt;perlportのdbmopen&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0041d3754bd68df8fbc09d24396b3aea27a2c824" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#dump&quot;&gt;&quot;dump&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#dump&quot;&gt;perlportの「ダンプ」&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d3849ea6d3a1e8647089ee23f1c064c70b2aac7e" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#dump&quot;&gt;dump in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#dump&quot;&gt;perlportにダンプします&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f3bcaa7c33e892ce18b6349d3066ce50a048ebda" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#exec&quot;&gt;&quot;exec&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#exec&quot;&gt;perlportの「exec」&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="159b224453525ea26178c93d815bf8c37156bca7" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#exec&quot;&gt;exec in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#exec&quot;&gt;perlportでのexec&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6a5c6ca2e1bbd5ed8047c01355ea7ec78b83f139" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#exit&quot;&gt;&quot;exit&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#exit&quot;&gt;perlportの「exit」&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b6ef7e2af32d312e2de7c23d3ed0f7b1002c71ef" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#exit&quot;&gt;exit in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#exit&quot;&gt;perlportで終了します&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9f51d90e72f973bfc61ec10435ac0f5eadfc569b" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#fcntl&quot;&gt;&quot;fcntl&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#fcntl&quot;&gt;perlportの「fcntl」&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b51d3531f7ff15ab95b54d19923365629fc28679" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#fcntl&quot;&gt;fcntl in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#fcntl&quot;&gt;perlportのfcntl&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8e7ea7a4c42a643927c458930cc75c7af96effb5" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#flock&quot;&gt;&quot;flock&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#flock&quot;&gt;perlportの「群れ」&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cd51dc31bf44af902d7a83aa3d284782505dab81" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#flock&quot;&gt;flock in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#flock&quot;&gt;perlportの群れ&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b70b0437c68a8bbf1c294c40aaefa6f4e9524cc7" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#fork&quot;&gt;&quot;fork&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#fork&quot;&gt;perlportの「フォーク」&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f294df838a1631d1ff6473a2a0bb188766e13bc5" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#fork&quot;&gt;fork in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#fork&quot;&gt;perlportのフォーク&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5162b808f09de4e177d62088e42f7354798005b6" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#getlogin&quot;&gt;&quot;getlogin&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#getlogin&quot;&gt;perlportの「getlogin」&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="da0c8aa6744002f6e9535d51ad97f29417869561" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#getlogin&quot;&gt;getlogin in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#getlogin&quot;&gt;perlportでのgetlogin&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="58289d7f269abcbc90fc0b0ed0a851e44c5c5a65" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#getpgrp&quot;&gt;&quot;getpgrp&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#getpgrp&quot;&gt;perlportの「getpgrp」&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="272ed60ca449929d819ded198fe36e06b83a39e2" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#getpgrp&quot;&gt;getpgrp in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#getpgrp&quot;&gt;perlportのgetpgrp&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a032a4234fef2f9df954afb3e2507ffc5b4734bb" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#getppid&quot;&gt;&quot;getppid&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#getppid&quot;&gt;perlportの「getppid」&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bf5f512293ae84473998a24961e0f9cb5d697346" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#getppid&quot;&gt;getppid in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#getppid&quot;&gt;perlportのgetppid&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8f02277bef859ee7d10c0f10cd55dcddb0c373dc" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#getpriority&quot;&gt;&quot;getpriority&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#getpriority&quot;&gt;perlportの「getpriority」&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b4a68a2a22e44665ce9dd7fd91574dcfc5d0f2cf" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#getpriority&quot;&gt;getpriority in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#getpriority&quot;&gt;perlportでのgetpriority&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="88533abe27071965f129b48828b725cca96f6127" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#getpwnam&quot;&gt;&quot;getpwnam&quot; in perlport&lt;/a&gt; to &lt;a href=&quot;perlport#endservent&quot;&gt;&quot;endservent&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#getpwnam&quot;&gt;perlportの「getpwnam」からperlportの&lt;/a&gt;&lt;a href=&quot;perlport#endservent&quot;&gt;「endservent」&lt;/a&gt;へ。</target>
        </trans-unit>
        <trans-unit id="54c70469975f72b40e614a4aa6531b33418f0a99" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#getpwnam&quot;&gt;getpwnam in perlport&lt;/a&gt; to &lt;a href=&quot;perlport#endservent&quot;&gt;endservent in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#getpwnam&quot;&gt;のgetpwnamではperlport&lt;/a&gt;に&lt;a href=&quot;perlport#endservent&quot;&gt;endserventではperlport&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1143d58a8f2e8621290fa97b23db7a1940f64440" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#getsockopt&quot;&gt;&quot;getsockopt&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#getsockopt&quot;&gt;perlportの「getsockopt」&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5307cc8853752ec02882de2f2c667c8f8f4d5ea3" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#getsockopt&quot;&gt;getsockopt in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#getsockopt&quot;&gt;perlportのgetsockopt&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8459c3ed8fb0a564a7e48de4363e5b73f97c6359" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#glob&quot;&gt;&quot;glob&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#glob&quot;&gt;perlportの「グロブ」&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="242a3ea39a57b93258a257f47655ec88b832f654" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#glob&quot;&gt;glob in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#glob&quot;&gt;perlportのglob&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e5d960ef3b9f3ffe2c645a546d3761b6df34870c" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#gmtime&quot;&gt;&quot;gmtime&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#gmtime&quot;&gt;perlportの「gmtime」&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f8bee5ea11b2676b24bd55443d8f59d7856df650" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#gmtime&quot;&gt;gmtime in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#gmtime&quot;&gt;perlportのgmtime&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="89c2e2b254b614ae178543754a1503fa68dede95" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#ioctl&quot;&gt;&quot;ioctl&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#ioctl&quot;&gt;perlportの「ioctl」&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7faa7ea82fa854bb3d8e5a2bae082d5c0b965256" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#ioctl&quot;&gt;ioctl in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#ioctl&quot;&gt;perlportのioctl&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1c9043bd1353cdbd83a2037e01fe071ee1b99ab9" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#kill&quot;&gt;&quot;kill&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#kill&quot;&gt;perlportの「kill」&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ebcacd62a0c2062e21f33d6736a1f62fe2b0936c" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#kill&quot;&gt;kill in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#kill&quot;&gt;perlportでkillします&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="92cb3f8b80fad6920293da3766c7d760b67d55a2" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#link&quot;&gt;&quot;link&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#link&quot;&gt;perlportの「リンク」&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="68f116e27b264194581024a236f5075dd0e4db7d" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#link&quot;&gt;link in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#link&quot;&gt;perlportのリンク&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4f6179437d31b8d6feff4605a1d84f4aeefb265a" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#localtime&quot;&gt;&quot;localtime&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#localtime&quot;&gt;perlportの「localtime」&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="03d0db5d10e9974833b1b1c3f3599761c693ed13" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#localtime&quot;&gt;localtime in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#localtime&quot;&gt;perlportのローカルタイム&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="da60c5af8a58d7a76f9e0635a1757db55f0bb52d" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#lstat&quot;&gt;&quot;lstat&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#lstat&quot;&gt;perlportの「lstat」&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9384107c161672d710d80e232503dadb7e6b08ff" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#lstat&quot;&gt;lstat in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#lstat&quot;&gt;perlportのlstat&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="35856dbb644a9959af31d3e46b27785f1d8c13df" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#msgctl&quot;&gt;&quot;msgctl&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#msgctl&quot;&gt;perlportの「msgctl」&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6ce5d19be1cb2c6b900377e53381f0a75039f0f4" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#msgctl&quot;&gt;msgctl in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#msgctl&quot;&gt;perlportのmsgctl&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9bcfd31d6299e3804c9985411aa1659e18acd030" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#msgget&quot;&gt;&quot;msgget&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#msgget&quot;&gt;perlportの「msgget」&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="273853a12fff8d8c2877c94a799c6d11eb91e146" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#msgget&quot;&gt;msgget in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#msgget&quot;&gt;msgget in perlport&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5b3d9a654f24bd5606772963b23b7fa30de39092" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#msgrcv&quot;&gt;&quot;msgrcv&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#msgrcv&quot;&gt;perlportの「msgrcv」&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0ce6fcc59a40ee3a712a22a117201cbb49c059ed" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#msgrcv&quot;&gt;msgrcv in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#msgrcv&quot;&gt;perlportのmsgrcv&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="55649ab15fcf8beea19dd105bb7c6e1b66fba806" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#msgsnd&quot;&gt;&quot;msgsnd&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#msgsnd&quot;&gt;perlportの「msgsnd」&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6d8c5e98254d5ca7970f0f4f6c4659693975f475" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#msgsnd&quot;&gt;msgsnd in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#msgsnd&quot;&gt;perlportのmsgsnd&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9d2b94d8d9164c5d73d2b50e195ed17ceb35e4cf" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#open&quot;&gt;open in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#open&quot;&gt;perlportで開いてください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="20bfe47e296eef76e96293e48e6d6d2a5fb63901" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#readlink&quot;&gt;&quot;readlink&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#readlink&quot;&gt;perlportの「readlink」&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5597b25507870cc7a3c0d873abddf08fadfbb6a5" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#readlink&quot;&gt;readlink in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#readlink&quot;&gt;perlportのreadlink&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="16993c7bc4e45b7c14dcd195d5dc9ea6194284c8" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#rename&quot;&gt;&quot;rename&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#rename&quot;&gt;perlportの「名前の変更」&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="716e4f3a9669daacc40fd61530bd695bbd7759b6" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#rename&quot;&gt;rename in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#rename&quot;&gt;perlportでの名前変更&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="af117cda90136ecbd8d95943301ebb75eb3cf51f" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#rewinddir&quot;&gt;&quot;rewinddir&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#rewinddir&quot;&gt;perlportの「rewinddir」&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b3b295d2fa1936a3c97fdd610c884273d66474dc" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#rewinddir&quot;&gt;rewinddir in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#rewinddir&quot;&gt;perlportのrewinddir&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="74415a1ecd1179279d82e31b82f172f2dc3f7f95" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#select&quot;&gt;&quot;select&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#select&quot;&gt;perlportで「選択」します&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4e21863bd7fa9feb756c17b1f01cf46f56ecb93a" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#select&quot;&gt;select in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#select&quot;&gt;perlportで選択します&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bb8b21e675672c2ac3d9b1ba7e3e01b1ebf84c0c" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#semctl&quot;&gt;&quot;semctl&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#semctl&quot;&gt;perlportの「semctl」&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1bb1a914f076b276ff0dc1aa94d5000b5c955de4" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#semctl&quot;&gt;semctl in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#semctl&quot;&gt;perlportのsemctl&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="613a086089aa0e357205828fb7b4954b7f01d2e4" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#semget&quot;&gt;&quot;semget&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#semget&quot;&gt;perlportの「semget」&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="853d00ec5dbc8506124b23971b0b01b7963e25d5" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#semget&quot;&gt;semget in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#semget&quot;&gt;perlportのsemget&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ad030ffadee1ec1d8aff604186a8d50c103568c5" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#semop&quot;&gt;&quot;semop&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#semop&quot;&gt;perlportの「semop」&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="868cb9c221ed7185e8f4796a8e730a0f1ebda26a" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#semop&quot;&gt;semop in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#semop&quot;&gt;perlportのsemop&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c096920f04095e1152c332c8b6bda10ea7fe3713" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#setpgrp&quot;&gt;&quot;setpgrp&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#setpgrp&quot;&gt;perlportの「setpgrp」&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="25c026caff364ddc036abeccafbebdfc0f3f8775" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#setpgrp&quot;&gt;setpgrp in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#setpgrp&quot;&gt;perlportのsetpgrp&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6197cfc86e63d79c473222fc2acdff8ab68eb624" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#setpriority&quot;&gt;&quot;setpriority&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#setpriority&quot;&gt;perlportの「setpriority」&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="872bde48f35ea9e9c9a2245b619f39f1e6b3b03f" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#setpriority&quot;&gt;setpriority in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#setpriority&quot;&gt;perlportのsetpriority&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7f38cb5d67babb2c1b6a5b6beb540134b0c5e710" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#setsockopt&quot;&gt;&quot;setsockopt&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#setsockopt&quot;&gt;perlportの「setsockopt」&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="691ffbc804de1ecccbf805bd753779ccbe3381c3" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#setsockopt&quot;&gt;setsockopt in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#setsockopt&quot;&gt;perlportのsetsockopt&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0d360028cee563686ee3779be08e9cc3e7febeef" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#shmctl&quot;&gt;&quot;shmctl&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#shmctl&quot;&gt;perlportの「shmctl」&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="858a2c0f7b0ded8f531191109d3429562043e02f" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#shmctl&quot;&gt;shmctl in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#shmctl&quot;&gt;perlportのshmctl&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d1aab08f437603b71e9ec959f195935382bf10dc" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#shmget&quot;&gt;&quot;shmget&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#shmget&quot;&gt;perlportの「shmget」&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="19231dcfd55698d417f14d1a3b6116215782cdab" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#shmget&quot;&gt;shmget in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#shmget&quot;&gt;perlportのshmget&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7eedc3ebd8e3efdf183a09f748eabf6ab70986fd" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#shmread&quot;&gt;&quot;shmread&quot; in perlport&lt;/a&gt; and &lt;a href=&quot;perlport#shmwrite&quot;&gt;&quot;shmwrite&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#shmread&quot;&gt;perlportの「shmread」&lt;/a&gt;および&lt;a href=&quot;perlport#shmwrite&quot;&gt;perlportの「shmwrite」&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="627d60e4612520cea56174ad0b16fbb3e38e20ff" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#shmread&quot;&gt;shmread in perlport&lt;/a&gt; and &lt;a href=&quot;perlport#shmwrite&quot;&gt;shmwrite in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#shmread&quot;&gt;perlportのshmread&lt;/a&gt;および&lt;a href=&quot;perlport#shmwrite&quot;&gt;perlportのshmwrite&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4c4c781fd79c9491c358664cc37505b81ed206b8" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#socketpair&quot;&gt;&quot;socketpair&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#socketpair&quot;&gt;perlportの「socketpair」&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="780263b8d6206d15169032a2f7d8df22cef5bf28" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#socketpair&quot;&gt;socketpair in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#socketpair&quot;&gt;perlportのsocketpair&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ca84d0fe14f29ac06702c878a84ee45d07b98091" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#stat&quot;&gt;&quot;stat&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#stat&quot;&gt;perlportの「stat」&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5b4ad715c17b55bb481c2f4b6c3a7d8ca14fd215" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#stat&quot;&gt;stat in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#stat&quot;&gt;perlportのstat&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dc16957cf3f10f31d88f3267afc9947410b4081a" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#symlink&quot;&gt;&quot;symlink&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#symlink&quot;&gt;perlportの「シンボリックリンク」&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="eabef1a008d47d2a9d7c9c7aada0ec5ae625016b" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#symlink&quot;&gt;symlink in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#symlink&quot;&gt;perlportのシンボリックリンク&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9823ad1cf37d553a2306cd0aed8364e8819f4cb2" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#syscall&quot;&gt;&quot;syscall&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#syscall&quot;&gt;perlportの「syscall」&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0970859fdcdbefab02ec40fb1a30eba7aa521aca" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#syscall&quot;&gt;syscall in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#syscall&quot;&gt;perlportのsyscall&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="15cb8a4e6fe3ef0953b610ef1c2a07b53f18d689" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#sysopen&quot;&gt;&quot;sysopen&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#sysopen&quot;&gt;perlportの「sysopen」&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e0ba78b649c5ef4da0ce9e5399e7e3c970338bcb" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#sysopen&quot;&gt;sysopen in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#sysopen&quot;&gt;perlportのsysopen&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7e7ca7a038876c7c31ee8768870fc65ad0d23730" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#system&quot;&gt;&quot;system&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#system&quot;&gt;perlportの「システム」&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="00b0ff2d6c84acc74f68ec16df6d840bfa2a9d20" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#system&quot;&gt;system in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#system&quot;&gt;perlportのシステム&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a41d8a4c3830ea60212d91efaf7f7bad63d7005d" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#times&quot;&gt;&quot;times&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#times&quot;&gt;perlportの「時間」&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f47ec6842d670c2b5f240b1a99a343f0be0064a8" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#times&quot;&gt;times in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#times&quot;&gt;perlportでの時間&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ab084849d6ad053d2a986056758a897e6291433c" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#truncate&quot;&gt;&quot;truncate&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#truncate&quot;&gt;perlportの「切り捨て」&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4c05d575ea825b9eb7d154ec58cf2b3a35023f17" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#truncate&quot;&gt;truncate in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#truncate&quot;&gt;perlportで切り捨て&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c0cae348143995087cf4258203afb014057d3705" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#umask&quot;&gt;&quot;umask&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#umask&quot;&gt;perlportの「umask」&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1a0723e861033da690aecdb7a0d25465db8b2fd9" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#umask&quot;&gt;umask in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#umask&quot;&gt;perlportのumask&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9f7d03de69702f94f5183331173c8ab855e7e511" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#utime&quot;&gt;&quot;utime&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#utime&quot;&gt;perlportの「utime」&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f9c20941f15437f18d1b942e125adae8f9f85d4c" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#utime&quot;&gt;utime in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#utime&quot;&gt;perlportのutime&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="99017c7a24351c6b5b39bfc67c1bc31052dd0a90" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#wait&quot;&gt;&quot;wait&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#wait&quot;&gt;perlportで「待機」します&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="884a47ffafccacec9cec489bf984d5bca96a986a" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#wait&quot;&gt;wait in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#wait&quot;&gt;perlportで待機します&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7aa3eda67377010c0f878a2f1845a5fa61cfd861" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#waitpid&quot;&gt;&quot;waitpid&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#waitpid&quot;&gt;perlportの「waitpid」&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b032428386020b84fe78cbe14f2bb689e3e1c1b1" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#waitpid&quot;&gt;waitpid in perlport&lt;/a&gt;.</source>
          <target state="translated">移植性の問題：&lt;a href=&quot;perlport#waitpid&quot;&gt;perlportのwaitpid&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="db93898741dd39c4fe99b1c63e52e52213f6f2a7" translate="yes" xml:space="preserve">
          <source>Portability problems</source>
          <target state="translated">移植性の問題</target>
        </trans-unit>
        <trans-unit id="079513fb0cbc5cac6b6c82c2309f1cf45564d331" translate="yes" xml:space="preserve">
          <source>Portability-wise the best option is probably to keep to the IEEE 754 64-bit doubles, and of agreed-upon endianness. Another possibility is the &lt;code&gt;&quot;%a&quot;&lt;/code&gt; ) format of &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">移植性に関しては、IEEE 754 64ビットの倍精度を維持し、合意されたエンディアンを維持するのがおそらく最善の方法です。もう1つの可能性は、 &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; の &lt;code&gt;&quot;%a&quot;&lt;/code&gt; ）形式です。</target>
        </trans-unit>
        <trans-unit id="3e07e11e6ce830489a0e3d7415eaa2eb4ba1b70c" translate="yes" xml:space="preserve">
          <source>Portability-wise the best option is probably to keep to the IEEE 754 64-bit doubles, and of agreed-upon endianness. Another possibility is the &lt;code&gt;&quot;%a&quot;&lt;/code&gt; ) format of &lt;code&gt;&lt;a href=&quot;printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">移植性に関しては、IEEE 754 64ビットの倍精度を維持し、合意されたエンディアンを維持するのがおそらく最善の方法です。もう1つの可能性は、 &lt;code&gt;&lt;a href=&quot;printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; の &lt;code&gt;&quot;%a&quot;&lt;/code&gt; ）形式です。</target>
        </trans-unit>
        <trans-unit id="0858e761b438f91ff2c91031924781890987aa36" translate="yes" xml:space="preserve">
          <source>Portability-wise the best option is probably to keep to the IEEE 754 64-bit doubles, and of agreed-upon endianness. Another possibility is the &lt;code&gt;&quot;%a&quot;&lt;/code&gt;) format of &lt;a href=&quot;#printf-FILEHANDLE-FORMAT%2C-LIST&quot;&gt;&lt;code&gt;printf&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">移植性に関しては、おそらくIEEE 754 64ビットダブルを維持し、合意されたエンディアンを維持するのが最善の選択肢です。もう1つの可能性は、&lt;a href=&quot;#printf-FILEHANDLE-FORMAT%2C-LIST&quot;&gt; &lt;code&gt;printf&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;&quot;%a&quot;&lt;/code&gt; ）形式です。</target>
        </trans-unit>
        <trans-unit id="6942aa2b4104144ab813bb2df92d7d21b77ab61f" translate="yes" xml:space="preserve">
          <source>Portable cases are:</source>
          <target state="translated">携帯用ケースは</target>
        </trans-unit>
        <trans-unit id="81d57ea512cd2b00da23b0b4e909db41c6d5f619" translate="yes" xml:space="preserve">
          <source>Portably perform operations on file names</source>
          <target state="translated">ファイル名に対する操作を可搬的に実行</target>
        </trans-unit>
        <trans-unit id="ca3a4fa5e8330446e0c75ad92cfc7751e39dce5a" translate="yes" xml:space="preserve">
          <source>Porting</source>
          <target state="translated">Porting</target>
        </trans-unit>
        <trans-unit id="16cc9b9ed43ca5d3cf0a48ee505d3443f796b9af" translate="yes" xml:space="preserve">
          <source>Porting code from perl-5.6.X</source>
          <target state="translated">詳しい説明</target>
        </trans-unit>
        <trans-unit id="e6aa7d597be18a7e75e0ff04e1bdc44069467c90" translate="yes" xml:space="preserve">
          <source>Porting/</source>
          <target state="translated">Porting/</target>
        </trans-unit>
        <trans-unit id="ea9b53e814debd6affceeb25330fbf44281cc84b" translate="yes" xml:space="preserve">
          <source>Porting/bench.pl</source>
          <target state="translated">Porting/bench.pl</target>
        </trans-unit>
        <trans-unit id="93a48d5d9c4ff7c93e67293446fe845ecc9f9f26" translate="yes" xml:space="preserve">
          <source>Porting/bisect-example.sh</source>
          <target state="translated">Porting/bisect-example.sh</target>
        </trans-unit>
        <trans-unit id="00d61807bdba62873dddfe4170767bc9a5c4657a" translate="yes" xml:space="preserve">
          <source>Porting/bisect.pl</source>
          <target state="translated">Porting/bisect.pl</target>
        </trans-unit>
        <trans-unit id="7253564338b477221d544e36f39c603f64cc6d02" translate="yes" xml:space="preserve">
          <source>Porting/how_to_write_a_perldelta.pod</source>
          <target state="translated">Porting/how_to_write_a_perldelta.pod</target>
        </trans-unit>
        <trans-unit id="6ddfafb40f17f6ecbc175b82b5894f9f8fe5bba5" translate="yes" xml:space="preserve">
          <source>Porting/pumpkin.pod</source>
          <target state="translated">Porting/pumpkin.pod</target>
        </trans-unit>
        <trans-unit id="e1d84bb832bff9b7ba90c66df47cd4933437114a" translate="yes" xml:space="preserve">
          <source>Porting/release_managers_guide.pod</source>
          <target state="translated">Porting/release_managers_guide.pod</target>
        </trans-unit>
        <trans-unit id="641afa9afdaad52f39b2d32f8a1cd6628b42fd06" translate="yes" xml:space="preserve">
          <source>Portions copyright 2006-2008 Adam Kennedy.</source>
          <target state="translated">部分の著作権は2006-2008アダム・ケネディにあります。</target>
        </trans-unit>
        <trans-unit id="48a526a81927a98d8cc7484c34ddf42f9e637788" translate="yes" xml:space="preserve">
          <source>Portions of the C code in this library are copyright (c) 1994 by the Regents of the University of California. All rights reserved. The license on this code is compatible with the licensing of the rest of the distribution - please see the source code in</source>
          <target state="translated">このライブラリに含まれるCコードの一部は、カリフォルニア大学のRegentsによって著作権(c)1994年に保護されています。無断複写・転載を禁じます。このコードのライセンスは、他のディストリビューションのライセンスと互換性があります。</target>
        </trans-unit>
        <trans-unit id="1b44bd9f2e8afdb3d9a6b86ffdafa46f6fb7dc71" translate="yes" xml:space="preserve">
          <source>Portions of the data tables in this module are derived from the entity declarations in the W3C XHTML specification.</source>
          <target state="translated">本モジュールのデータテーブルの一部は、W3C XHTML 仕様の実体宣言から派生したものである。</target>
        </trans-unit>
        <trans-unit id="e21d9d1f135238fda93004ae5db1ba481150e581" translate="yes" xml:space="preserve">
          <source>Portions of this document that are still incomplete are marked with XXX.</source>
          <target state="translated">この文書の中で、まだ不完全な部分には、○○○○が付いています。</target>
        </trans-unit>
        <trans-unit id="4aa88ae214cc20e8cb9e2cfedd50aa166fe2ef36" translate="yes" xml:space="preserve">
          <source>Ports of Perl to a new platform, architecture or OS release that involve changes to the implementation.</source>
          <target state="translated">Perl の新しいプラットフォーム、アーキテクチャ、OS リリースへの移植で、実装の変更を伴うもの。</target>
        </trans-unit>
        <trans-unit id="a495190bcc2ef4116725616d321016a7def5bd8f" translate="yes" xml:space="preserve">
          <source>Portugal</source>
          <target state="translated">Portugal</target>
        </trans-unit>
        <trans-unit id="6ca22cededa3b3cbf9e73ceb1a2efd6072b76d37" translate="yes" xml:space="preserve">
          <source>Position 18 is good, but position 23 is bogus. What happened?</source>
          <target state="translated">ポジション18は良いが、ポジション23はインチキ。何があったの?</target>
        </trans-unit>
        <trans-unit id="f8075bf0afcc9cf807fb8c4f9c812962d64e55d5" translate="yes" xml:space="preserve">
          <source>Position information</source>
          <target state="translated">ポジション情報</target>
        </trans-unit>
        <trans-unit id="c044cacc39f4d91c9b8cc9ba42458a92475e6684" translate="yes" xml:space="preserve">
          <source>Position the file pointer. Should normally call its own &lt;code&gt;Flush&lt;/code&gt; method and then the &lt;code&gt;Seek&lt;/code&gt; method of next layer down.</source>
          <target state="translated">ファイルポインタを配置します。通常は独自の &lt;code&gt;Flush&lt;/code&gt; メソッドを呼び出してから、次のレイヤーの &lt;code&gt;Seek&lt;/code&gt; メソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="a6c526dcc12f43618f2ecd784fb24aede6eaace5" translate="yes" xml:space="preserve">
          <source>Position the file.</source>
          <target state="translated">ファイルを配置します。</target>
        </trans-unit>
        <trans-unit id="d0563a74c40a028ff0eabefa0c47db1f013fe7e3" translate="yes" xml:space="preserve">
          <source>Positional parameters are handled by simply naming scalar variables in the signature. For example,</source>
          <target state="translated">位置パラメータは、シグネチャ内のスカラ変数に名前を付けるだけで処理されます。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="417c7f773d020f0d3b9c6358a7f4bcbbfa4f51f5" translate="yes" xml:space="preserve">
          <source>Positions the record stream to the end-of-file for the connect operation only.</source>
          <target state="translated">接続操作のみのために、レコードストリームをファイル終端に配置します。</target>
        </trans-unit>
        <trans-unit id="0e30507599bac7d9da05192ebf7bafb46204a7a4" translate="yes" xml:space="preserve">
          <source>Possessing a complete name. The symbol &lt;code&gt;$Ent::moot&lt;/code&gt; is qualified; &lt;code&gt;$moot&lt;/code&gt; is unqualified. A fully qualified filename is specified from the top-level directory.</source>
          <target state="translated">完全な名前を持っている。シンボル &lt;code&gt;$Ent::moot&lt;/code&gt; は修飾されています。 &lt;code&gt;$moot&lt;/code&gt; は修飾されていません。完全修飾ファイル名は、トップレベルのディレクトリから指定されます。</target>
        </trans-unit>
        <trans-unit id="b0a25e4c6df0cbb8129a405e968846abe861b888" translate="yes" xml:space="preserve">
          <source>Possessive quantifiers</source>
          <target state="translated">占有量詞</target>
        </trans-unit>
        <trans-unit id="710ec6bd221d1eb7ee7cac2afd79245dfe1dd377" translate="yes" xml:space="preserve">
          <source>Possessive quantifiers are equivalent to putting the item they are applied to inside of one of these constructs. The following equivalences apply:</source>
          <target state="translated">所有量詞は、適用される項目をこれらの構成要素のいずれかの内側に置くことに相当します。以下の等価性が適用されます。</target>
        </trans-unit>
        <trans-unit id="9197d7f57b0ce03ff75af9ee8fd893a3294a408d" translate="yes" xml:space="preserve">
          <source>Possible =item type mismatch: '</source>
          <target state="translated">可能な =item タイプの不一致:'</target>
        </trans-unit>
        <trans-unit id="c76824bb46fe1a542cd1743075ab87c62cd07e57" translate="yes" xml:space="preserve">
          <source>Possible attempt to put comments in qw() list</source>
          <target state="translated">qw()リストにコメントを入れようとした可能性があります。</target>
        </trans-unit>
        <trans-unit id="c8c6c52e896ec500eb08e36d677a8dbe15848c92" translate="yes" xml:space="preserve">
          <source>Possible attempt to separate words with commas</source>
          <target state="translated">カンマで単語を区切る試みの可能性</target>
        </trans-unit>
        <trans-unit id="8d65618737c8f165c76518763bb53e022b80347d" translate="yes" xml:space="preserve">
          <source>Possible locations to get the files:</source>
          <target state="translated">ファイルを取得するための可能な場所。</target>
        </trans-unit>
        <trans-unit id="3848a899c487a0ef74b9dbbdf14cfc21f7e17a17" translate="yes" xml:space="preserve">
          <source>Possible memory corruption: %s overflowed 3rd argument</source>
          <target state="translated">メモリ破損の可能性:%s は第 3 引数をオーバーフローしました。</target>
        </trans-unit>
        <trans-unit id="1c2e8060a440dfd38b806ad920aac268f371ecbb" translate="yes" xml:space="preserve">
          <source>Possible precedence issue with control flow operator</source>
          <target state="translated">制御フロー演算子の優先順位の問題の可能性</target>
        </trans-unit>
        <trans-unit id="02a57c52eda4a97a5a244c5253a528bc82c6602a" translate="yes" xml:space="preserve">
          <source>Possible precedence problem on bitwise %s operator</source>
          <target state="translated">ビット単位の %s 演算子における優先順位の問題の可能性</target>
        </trans-unit>
        <trans-unit id="fa99af39818b691d664b99b5c353eca617f2e3dd" translate="yes" xml:space="preserve">
          <source>Possible unintended interpolation of $\ in regex</source>
          <target state="translated">意図しない補間の可能性があります。</target>
        </trans-unit>
        <trans-unit id="6bd92ff007aa6d8b43a35422d76aa816a8ff6474" translate="yes" xml:space="preserve">
          <source>Possible unintended interpolation of %s in string</source>
          <target state="translated">文字列中の %s の意図しない補間の可能性があります。</target>
        </trans-unit>
        <trans-unit id="7280aa9b126e519bb5acdcab7417841a30bb930a" translate="yes" xml:space="preserve">
          <source>Possible values are:</source>
          <target state="translated">可能な値は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="b2ef221e3193ecc713338eb88d02a0cab9694e2a" translate="yes" xml:space="preserve">
          <source>Possible values:</source>
          <target state="translated">可能な値</target>
        </trans-unit>
        <trans-unit id="d472359347147115fc3c19663e89b625bb02902c" translate="yes" xml:space="preserve">
          <source>Post Office Protocol 3 Client class (RFC1939)</source>
          <target state="translated">郵便局プロトコル 3 クライアントクラス (RFC1939)</target>
        </trans-unit>
        <trans-unit id="0a29797f79372fde99a5ef6badeb4b11cfdd110a" translate="yes" xml:space="preserve">
          <source>Post a new article to the news server using a tied filehandle. If posting is allowed, this method will return a tied filehandle that you can print() the contents of the article to be posted. You must explicitly close() the filehandle when you are finished posting the article, and the return value from the close() call will indicate whether the message was successfully posted.</source>
          <target state="translated">タイドファイルハンドルを使用して、新しい記事をニュースサーバーに投稿します。投稿が許可されている場合、このメソッドは、投稿する記事の内容を print()することができる紐付きファイルハンドルを返します。記事の投稿が終わったら明示的にファイルハンドルを close()しなければならず、close()の戻り値はメッセージが正常に投稿されたかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="c0c64b012716c7ba679076f89a6776bcbf37ad82" translate="yes" xml:space="preserve">
          <source>Post a new article to the news server. If &lt;code&gt;MESSAGE&lt;/code&gt; is specified and posting is allowed then the message will be sent.</source>
          <target state="translated">ニュースサーバーに新しい記事を投稿します。場合は &lt;code&gt;MESSAGE&lt;/code&gt; 指定され、投稿が許可されているメッセージが送信されます。</target>
        </trans-unit>
        <trans-unit id="b93dd2631ce48b2c54303e56c98d829a533f5625" translate="yes" xml:space="preserve">
          <source>Post a public message in a heavily trafficked site announcing your intention to take over the module.</source>
          <target state="translated">トラフィックの多いサイトで、モジュールを引き継ぐつもりであることを公表する公開メッセージを投稿してください。</target>
        </trans-unit>
        <trans-unit id="ddce30e4bfb396471a259ebc110a23b949a4f5f0" translate="yes" xml:space="preserve">
          <source>Post to mailing list</source>
          <target state="translated">メーリングリストへの投稿</target>
        </trans-unit>
        <trans-unit id="937a6feb504555c9c17e4a5c6895ae9906b154df" translate="yes" xml:space="preserve">
          <source>Postfix Dereference Syntax</source>
          <target state="translated">Postfix 派生参照構文</target>
        </trans-unit>
        <trans-unit id="670df18cfdfd04e8862a6c47f0addc1747a2af07" translate="yes" xml:space="preserve">
          <source>Postfix Reference Slicing</source>
          <target state="translated">Postfix リファレンススライシング</target>
        </trans-unit>
        <trans-unit id="9b88dd7b4adbe5e941b4c60fc54a020147730776" translate="yes" xml:space="preserve">
          <source>Postfix array and scalar dereferencing</source>
          <target state="translated">Postfix 配列とスカラの派生</target>
        </trans-unit>
        <trans-unit id="c71c2847613385562445ff81717d9bb4d1a33f70" translate="yes" xml:space="preserve">
          <source>Postfix dereference should work in all circumstances where block (circumfix) dereference worked, and should be entirely equivalent. This syntax allows dereferencing to be written and read entirely left-to-right. The following equivalencies are defined:</source>
          <target state="translated">Postfix の参照は、ブロック (circuitfix)の参照が動作していたすべての状況で動作しなければならず、完全に等価でなければなりません。この構文では、参照の書き換えと読み換えを完全に左から右に行うことができます。以下の等価性が定義されています。</target>
        </trans-unit>
        <trans-unit id="36854e41a1a6c55217aca3f3b4efeb94f7d03456" translate="yes" xml:space="preserve">
          <source>Postfix key/value pair slicing, added in 5.20.0 and documented in &lt;a href=&quot;perldata#Key%2FValue-Hash-Slices&quot;&gt;the Key/Value Hash Slices section of perldata&lt;/a&gt;, also behaves as expected:</source>
          <target state="translated">5.20.0で追加され、perldata&lt;a href=&quot;perldata#Key%2FValue-Hash-Slices&quot;&gt;のKey / Value Hash Slicesセクションに&lt;/a&gt;記載されているPostfixキー/値ペアスライスも、期待どおりに動作します。</target>
        </trans-unit>
        <trans-unit id="f3ec2bb2a047a99ed59d3be9cc0c559fda55d10c" translate="yes" xml:space="preserve">
          <source>Postfix key/value pair slicing, added in 5.20.0 and documented in &lt;a href=&quot;perldata#Key%2fValue-Hash-Slices&quot;&gt;the Key/Value Hash Slices section of perldata&lt;/a&gt;, also behaves as expected:</source>
          <target state="translated">5.20.0で追加され、perldataの&lt;a href=&quot;perldata#Key%2fValue-Hash-Slices&quot;&gt;「キー/値のハッシュスライス」セクションに&lt;/a&gt;記載されているPostfixキー/値のペアのスライスも期待どおりに動作します。</target>
        </trans-unit>
        <trans-unit id="04ec3882b5f81dfbca3ecaeafba246a10ffa796f" translate="yes" xml:space="preserve">
          <source>Postpone load of modules until a function is used</source>
          <target state="translated">関数が使用されるまでモジュールのロードを延期する</target>
        </trans-unit>
        <trans-unit id="d2a4543d0ad08e45f28a205ad22f1e3caeac2d64" translate="yes" xml:space="preserve">
          <source>Potentially one of the trickiest problems to overcome when designing a callback interface can be figuring out how to store the mapping between the C callback function and the Perl equivalent.</source>
          <target state="translated">コールバックインターフェイスを設計する際に克服しなければならない最もトリッキーな問題の一つは、C コールバック関数と Perl の同等の関数とのマッピングをどのように格納するかを考えることです。</target>
        </trans-unit>
        <trans-unit id="d435ce3a5c92f940c1a99bac59566fd2ce4209c3" translate="yes" xml:space="preserve">
          <source>Practical hint: you almost never need to use &lt;a href=&quot;#eof-FILEHANDLE&quot;&gt;&lt;code&gt;eof&lt;/code&gt;&lt;/a&gt; in Perl, because the input operators typically return &lt;a href=&quot;#undef-EXPR&quot;&gt;&lt;code&gt;undef&lt;/code&gt;&lt;/a&gt; when they run out of data or encounter an error.</source>
          <target state="translated">実用的なヒント：入力演算子は通常、データが不足したりエラーが発生したりすると&lt;a href=&quot;#undef-EXPR&quot;&gt; &lt;code&gt;undef&lt;/code&gt; を&lt;/a&gt;返すため、Perlで&lt;a href=&quot;#eof-FILEHANDLE&quot;&gt; &lt;code&gt;eof&lt;/code&gt; &lt;/a&gt;を使用する必要はほとんどありません。</target>
        </trans-unit>
        <trans-unit id="0649dcff6091a76865807331d6bfa798c788d3e2" translate="yes" xml:space="preserve">
          <source>Practical hint: you almost never need to use &lt;code&gt;&lt;a href=&quot;eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt; in Perl, because the input operators typically return &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; when they run out of data or encounter an error.</source>
          <target state="translated">実用的なヒント：Perlで &lt;code&gt;&lt;a href=&quot;eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt; を使用する必要はほとんどありません。入力演算子は通常、データが不足したりエラーが発生したりすると &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; を返すためです。</target>
        </trans-unit>
        <trans-unit id="9c79f9de3f9791d9e3640774f31e39c172d803ae" translate="yes" xml:space="preserve">
          <source>Practical hint: you almost never need to use &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt; in Perl, because the input operators typically return &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; when they run out of data or encounter an error.</source>
          <target state="translated">実用的なヒント：Perlで &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt; を使用する必要はほとんどありません。入力演算子は通常、データが不足したりエラーが発生したりすると &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; を返すためです。</target>
        </trans-unit>
        <trans-unit id="4270fcef9cd955376d2d433cbe3ad453cb9910a5" translate="yes" xml:space="preserve">
          <source>Practicing Perl Programmers should take note of the following:</source>
          <target state="translated">Perlプログラマの方は、以下の点に注意してください。</target>
        </trans-unit>
        <trans-unit id="38f93d32853eca4603a582eb7a404079e10b855d" translate="yes" xml:space="preserve">
          <source>Pragma</source>
          <target state="translated">Pragma</target>
        </trans-unit>
        <trans-unit id="4f32a07197212fd4ee8ad1142954d88e709f37a2" translate="yes" xml:space="preserve">
          <source>Pragma &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; charnames&lt;/code&gt; is used to gain access to the names of the Unicode characters and named character sequences, and to allow you to define your own character and character sequence names.</source>
          <target state="translated">Pragma &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; charnames&lt;/code&gt; は、Unicode文字と名前付き文字シーケンスの名前にアクセスし、独自の文字と文字シーケンス名を定義できるようにするために使用されます。</target>
        </trans-unit>
        <trans-unit id="b41219589c56411f994d6f2cf3ea28c18695cf85" translate="yes" xml:space="preserve">
          <source>Pragma &lt;code&gt;use charnames&lt;/code&gt; is used to gain access to the names of the Unicode characters and named character sequences, and to allow you to define your own character and character sequence names.</source>
          <target state="translated">プラグマ &lt;code&gt;use charnames&lt;/code&gt; は、Unicode文字の名前と名前付き文字シーケンスにアクセスし、独自の文字名と文字シーケンス名を定義できるようにするために使用されます。</target>
        </trans-unit>
        <trans-unit id="d857c4a3cba6bb11f909b140e46311890f7f21c4" translate="yes" xml:space="preserve">
          <source>Pragmas</source>
          <target state="translated">Pragmas</target>
        </trans-unit>
        <trans-unit id="3c5e2f66507f9aa3bf61c02fdd0fa70e115987d9" translate="yes" xml:space="preserve">
          <source>Pragmas and debugging</source>
          <target state="translated">プラグマとデバッグ</target>
        </trans-unit>
        <trans-unit id="3e8b13bf6bd7207dc21ad82f8de792e97bdb1e50" translate="yes" xml:space="preserve">
          <source>Pragmas are only supported from TAP version 13 onwards.</source>
          <target state="translated">プラグマはTAPバージョン13以降でのみサポートされています。</target>
        </trans-unit>
        <trans-unit id="971af7eca951f1fbb9960d4ee2d3aea5a1235f54" translate="yes" xml:space="preserve">
          <source>Pragmatic Modules</source>
          <target state="translated">実用的なモジュール</target>
        </trans-unit>
        <trans-unit id="ea00a7d451d39ea4021279960b408e9e237e5fc0" translate="yes" xml:space="preserve">
          <source>Praise of the module, flowers, and presents still go to the author, Damian Conway &amp;lt;damian@conway.org&amp;gt;.</source>
          <target state="translated">モジュール、花、プレゼントの賞賛は、今でも作者であるDamian Conway &amp;lt;damian@conway.org&amp;gt;に寄せられています。</target>
        </trans-unit>
        <trans-unit id="1b29958a379894f384c104d607dfd507e7d7dd32" translate="yes" xml:space="preserve">
          <source>Pre-ANSI semantics for that was equivalent to</source>
          <target state="translated">ANSI以前のセマンティクスは、次のようなものでした。</target>
        </trans-unit>
        <trans-unit id="2fbcc9e8ca617de5c029f92c1928b430d8bd8736" translate="yes" xml:space="preserve">
          <source>Pre-compiled regexps are useful for creating dynamic matches that don't need to be recompiled each time they are encountered. Using pre-compiled regexps, we write a &lt;code&gt;grep_step&lt;/code&gt; program which greps for a sequence of patterns, advancing to the next pattern as soon as one has been satisfied.</source>
          <target state="translated">事前にコンパイルされた正規表現は、遭遇するたびに再コンパイルする必要がない動的な一致を作成するのに役立ちます。事前にコンパイルされた正規表現を使用して、パターンのシーケンスを把握する &lt;code&gt;grep_step&lt;/code&gt; プログラムを記述し、パターンが満たされるとすぐに次のパターンに進みます。</target>
        </trans-unit>
        <trans-unit id="2e391893bd11655ad910aed5c91fa6713612cf00" translate="yes" xml:space="preserve">
          <source>Pre-extend an array so that it is capable of storing values at indexes &lt;code&gt;0..key&lt;/code&gt;. Thus &lt;code&gt;av_extend(av,99)&lt;/code&gt; guarantees that the array can store 100 elements, i.e. that &lt;code&gt;av_store(av, 0, sv)&lt;/code&gt; through &lt;code&gt;av_store(av, 99, sv)&lt;/code&gt; on a plain array will work without any further memory allocation.</source>
          <target state="translated">配列を事前拡張して、インデックス &lt;code&gt;0..key&lt;/code&gt; に値を格納できるようにします。したがって、 &lt;code&gt;av_extend(av,99)&lt;/code&gt; は、配列が100個の要素を格納できることを保証します。つまり、プレーン配列の &lt;code&gt;av_store(av, 0, sv)&lt;/code&gt; から &lt;code&gt;av_store(av, 99, sv)&lt;/code&gt; は、それ以上のメモリ割り当てなしで機能します。</target>
        </trans-unit>
        <trans-unit id="d5f48644a7129c9d5da2320101de47f3b885b660" translate="yes" xml:space="preserve">
          <source>Pre-extend an array. The &lt;code&gt;key&lt;/code&gt; is the index to which the array should be extended.</source>
          <target state="translated">配列を事前に拡張します。 &lt;code&gt;key&lt;/code&gt; アレイを拡張すべき指標です。</target>
        </trans-unit>
        <trans-unit id="b10fcb8ea3f8003cc2a68eb477298ced48c3e1ce" translate="yes" xml:space="preserve">
          <source>Pre-process the string to expand &lt;code&gt;{pat,pat,...}&lt;/code&gt; strings like csh(1). The pattern '{}' is left unexpanded for historical reasons (and csh(1) does the same thing to ease typing of find(1) patterns).</source>
          <target state="translated">文字列を前処理して、csh（1）のように &lt;code&gt;{pat,pat,...}&lt;/code&gt; 文字列を展開します。パターン '{}'は、歴史的な理由により拡張されていないままです（csh（1）は、find（1）パターンの入力を容易にするために同じことを行います）。</target>
        </trans-unit>
        <trans-unit id="2cfc6ae03601619aa86eab49f8cdcba160ca42e1" translate="yes" xml:space="preserve">
          <source>Pre-requisites</source>
          <target state="translated">Pre-requisites</target>
        </trans-unit>
        <trans-unit id="9c60435756471d4710932d1c59839109eaf4896d" translate="yes" xml:space="preserve">
          <source>Prebuilt methods:</source>
          <target state="translated">構築済みのメソッド。</target>
        </trans-unit>
        <trans-unit id="28b96a948b2f4129281e76a6bf72cbe04069ac57" translate="yes" xml:space="preserve">
          <source>Prebuilt variables:</source>
          <target state="translated">ビルトインされた変数。</target>
        </trans-unit>
        <trans-unit id="ab86fb82a986460447b29bbb55ca5b9bf867bad6" translate="yes" xml:space="preserve">
          <source>Precedence</source>
          <target state="translated">Precedence</target>
        </trans-unit>
        <trans-unit id="6329e2122e096c0052a2d0d79f2321e19c26198f" translate="yes" xml:space="preserve">
          <source>Precedence problem: open %s should be open(%s)</source>
          <target state="translated">優先順位の問題:open %s は open(%s)でなければなりません。</target>
        </trans-unit>
        <trans-unit id="3dd4db5ce7ea626f59e720f0c27096a22aa1ecd0" translate="yes" xml:space="preserve">
          <source>Precision</source>
          <target state="translated">Precision</target>
        </trans-unit>
        <trans-unit id="2b07cb5bc64f911d6e1d4e8b016d735ad5687328" translate="yes" xml:space="preserve">
          <source>Precision P</source>
          <target state="translated">精密P</target>
        </trans-unit>
        <trans-unit id="3a4cdc5225e11e06c1c5a9bc61aa6d9cbe7d720d" translate="yes" xml:space="preserve">
          <source>Precision is a fixed number of digits before (positive) or after (negative) the decimal point. For example, 123.45 has a precision of -2. 0 means an integer like 123 (or 120). A precision of 2 means at least two digits to the left of the decimal point are zero, so 123 with P = 1 becomes 120. Note that numbers with zeros before the decimal point may have different precisions, because 1200 can have P = 0, 1 or 2 (depending on what the initial value was). It could also have p &amp;lt; 0, when the digits after the decimal point are zero.</source>
          <target state="translated">精度は、小数点の前（正）または後（負）の固定桁数です。たとえば、123.45の精度は-2です。 0は、123（または120）のような整数を意味します。精度2は、小数点の左側の少なくとも2桁がゼロであることを意味します。したがって、P = 1の123は120になります。1200はP = 0になる可能性があるため、小数点の前にゼロがある数値は精度が異なる場合があることに注意してください。 1または2（初期値に応じて）。小数点以下の桁がゼロの場合、p &amp;lt;0になることもあります。</target>
        </trans-unit>
        <trans-unit id="f875922b09d6dc1883e2e7cdd44c0e3a3e94a8bc" translate="yes" xml:space="preserve">
          <source>Precompilation of the pattern into an internal representation at the moment of &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr()&lt;/a&gt;&lt;/code&gt; avoids the need to recompile the pattern every time a match &lt;code&gt;/$pat/&lt;/code&gt; is attempted. (Perl has many other internal optimizations, but none would be triggered in the above example if we did not use &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr()&lt;/a&gt;&lt;/code&gt; operator.)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr()&lt;/a&gt;&lt;/code&gt; の瞬間にパターンを内部表現にプリコンパイルすると、一致する &lt;code&gt;/$pat/&lt;/code&gt; が試行されるたびにパターンを再コンパイルする必要がなくなります。（Perlには他にも多くの内部最適化がありますが、 &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr()&lt;/a&gt;&lt;/code&gt; 演算子を使用しなかった場合、上記の例では何もトリガーされません。）</target>
        </trans-unit>
        <trans-unit id="e3c6ba98425243aac89d345daad9b66397615925" translate="yes" xml:space="preserve">
          <source>Precompilation of the pattern into an internal representation at the moment of &lt;code&gt;qr()&lt;/code&gt; avoids the need to recompile the pattern every time a match &lt;code&gt;/$pat/&lt;/code&gt; is attempted. (Perl has many other internal optimizations, but none would be triggered in the above example if we did not use &lt;code&gt;qr()&lt;/code&gt; operator.)</source>
          <target state="translated">&lt;code&gt;qr()&lt;/code&gt; の時点でパターンを内部表現に事前コンパイルすることで、 &lt;code&gt;/$pat/&lt;/code&gt; 一致が試行されるたびにパターンを再コンパイルする必要がなくなります。（Perlには他にも多くの内部最適化がありますが、 &lt;code&gt;qr()&lt;/code&gt; 演算子を使用しなかった場合、上記の例ではトリガーされません。）</target>
        </trans-unit>
        <trans-unit id="c20f646c020ac247f9d858b3944e690a4889a4b4" translate="yes" xml:space="preserve">
          <source>Precompiled Binaries</source>
          <target state="translated">コンパイル済みバイナリ</target>
        </trans-unit>
        <trans-unit id="be7aad2f2ead853044925ed4e22070f406951f6c" translate="yes" xml:space="preserve">
          <source>Precompiled binaries, links to many sites, and much, much more are available at &lt;a href=&quot;http://www.sunfreeware.com/&quot;&gt;http://www.sunfreeware.com/&lt;/a&gt; and &lt;a href=&quot;http://www.blastwave.org/&quot;&gt;http://www.blastwave.org/&lt;/a&gt;.</source>
          <target state="translated">プリコンパイルされたバイナリ、多くのサイトへのリンク、およびはるかに多くのものが&lt;a href=&quot;http://www.sunfreeware.com/&quot;&gt;http://www.sunfreeware.com/&lt;/a&gt;および&lt;a href=&quot;http://www.blastwave.org/&quot;&gt;http://www.blastwave.org/で&lt;/a&gt;入手できます。</target>
        </trans-unit>
        <trans-unit id="9becba2ecce5e815e75f3b05d6a72e8e463e4358" translate="yes" xml:space="preserve">
          <source>Predeclare global variable names</source>
          <target state="translated">グローバル変数名のプレデクレア</target>
        </trans-unit>
        <trans-unit id="80c74001ab374f9d6385a023afc607a8a9ee7ede" translate="yes" xml:space="preserve">
          <source>Predeclare sub names</source>
          <target state="translated">サブ名の事前宣言</target>
        </trans-unit>
        <trans-unit id="24de24aa33419414171f286cece63fd2df91afc4" translate="yes" xml:space="preserve">
          <source>Predeclare subroutine names</source>
          <target state="translated">サブルーチン名のプレデクレア</target>
        </trans-unit>
        <trans-unit id="fcdc57a9dfc65d3e8247e2abc3f2dbee6434d71f" translate="yes" xml:space="preserve">
          <source>Predefined As:</source>
          <target state="translated">として定義されています。</target>
        </trans-unit>
        <trans-unit id="79e73f11af1b28edb5e6c2f50de7a40c3138546f" translate="yes" xml:space="preserve">
          <source>Predefined Methods</source>
          <target state="translated">定義済みのメソッド</target>
        </trans-unit>
        <trans-unit id="ba26022b30a5919c6e22dc87472766a340d507c9" translate="yes" xml:space="preserve">
          <source>Predefined Opcode Tags</source>
          <target state="translated">定義済みのオペコードタグ</target>
        </trans-unit>
        <trans-unit id="60fd5e72e221540e42c68c591eb8825e9818fba4" translate="yes" xml:space="preserve">
          <source>Predicate to detect whether package contains XS.</source>
          <target state="translated">パッケージにXSが含まれているかどうかを検出するための述語。</target>
        </trans-unit>
        <trans-unit id="74ff649a3a1be6633677b33ec66e3623a45738d8" translate="yes" xml:space="preserve">
          <source>Predicates</source>
          <target state="translated">Predicates</target>
        </trans-unit>
        <trans-unit id="b667e8c1107543d66d7cab24522776a0879c9d96" translate="yes" xml:space="preserve">
          <source>Predicates are not exportable. They must be called by explicitly prefixing them with the Storable package name.</source>
          <target state="translated">述語はエクスポートできません。これらの述語は、Storable パッケージ名の前に明示的にプレフィックスを付けて呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="486c0b3ebd2042a6ce2f4cb9151258c31c8a708a" translate="yes" xml:space="preserve">
          <source>Preemptive multitasking systems interrupt threads at regular intervals while the system decides which thread should run next. In a preemptive multitasking system, one thread usually won't monopolize the CPU.</source>
          <target state="translated">プリエンプティブマルチタスクシステムでは、システムが次にどのスレッドを実行するかを決定する間、一定の間隔でスレッドを割込みます。プリエンプティブマルチタスクシステムでは、通常、1つのスレッドがCPUを独占することはありません。</target>
        </trans-unit>
        <trans-unit id="910177df20d444aedde7cd08b1849b3cca54c380" translate="yes" xml:space="preserve">
          <source>Preferred method for determining the current working directory?</source>
          <target state="translated">現在の作業ディレクトリを決定するための好ましい方法?</target>
        </trans-unit>
        <trans-unit id="2aca457be49d63d7eff6210a8d246e858c52f84a" translate="yes" xml:space="preserve">
          <source>Prefix patterns are matched without any trailing modifiers (&lt;code&gt;/gimsox&lt;/code&gt; etc.) This can bite you if you're expecting a prefix specification like '.*?(?=&amp;lt;H1&amp;gt;)' to skip everything up to the first &amp;lt;H1&amp;gt; tag. Such a prefix pattern will only succeed if the &amp;lt;H1&amp;gt; tag is on the current line, since . normally doesn't match newlines.</source>
          <target state="translated">接頭辞パターンは末尾の修飾子なしで一致します（ &lt;code&gt;/gimsox&lt;/code&gt; など）。これは、「。*？（？= &amp;lt;H1&amp;gt;）」のような接頭辞の指定で最初の&amp;lt;H1&amp;gt;タグまですべてをスキップすることを期待している場合に役立ちます。 。このようなプレフィックスパターンは、&amp;lt;H1&amp;gt;タグが現在の行にある場合にのみ成功します。通常、改行は一致しません。</target>
        </trans-unit>
        <trans-unit id="a02d52e7a8f126c57caa627d5a51525bbcd6a947" translate="yes" xml:space="preserve">
          <source>Prefixing a method call with &lt;code&gt;EVERY::&lt;/code&gt; causes every method in the object's hierarchy with that name to be invoked. As the above example illustrates, they are not called in Perl's usual &quot;left-most-depth-first&quot; order. Instead, they are called &quot;breadth-first-dependency-wise&quot;.</source>
          <target state="translated">メソッド呼び出しの前に &lt;code&gt;EVERY::&lt;/code&gt; を付けると、その名前のオブジェクト階層内のすべてのメソッドが呼び出されます。上記の例が示すように、Perlの通常の「左端から深さ優先」の順序では呼び出されません。代わりに、それらは「幅優先依存性」と呼ばれます。</target>
        </trans-unit>
        <trans-unit id="45387252dd62c82eda90107a17373d352ea6a801" translate="yes" xml:space="preserve">
          <source>Prefixing the terminating string with a &lt;code&gt;~&lt;/code&gt; specifies that you want to use &lt;a href=&quot;#Indented-Here-docs&quot;&gt;&quot;Indented Here-docs&quot;&lt;/a&gt; (see below).</source>
          <target state="translated">終了文字列の前に &lt;code&gt;~&lt;/code&gt; を付けると、&lt;a href=&quot;#Indented-Here-docs&quot;&gt;「IndentedHere-docs」&lt;/a&gt;を使用することを指定します（以下を参照）。</target>
        </trans-unit>
        <trans-unit id="44336b0ea88221835aa9ca45ec9e003737af39bb" translate="yes" xml:space="preserve">
          <source>Preliminary verifications are made and then an entry is added to the Registry to cause the rename [or delete] operation to be done the next time this copy of the operating system is booted [right after any automatic file system checks have completed]. This is not supported under Windows 95.</source>
          <target state="translated">予備的な検証が行われた後、レジストリにエントリが追加され、このコピーのオペレーティング・システムが次回起動したときにリネーム(または削除)操作が行われるようになります(自動ファイル・システム・チェックが完了した直後)。これはWindows 95ではサポートされていません。</target>
        </trans-unit>
        <trans-unit id="67a19425f9acedf7aa70ec95ee5f9298afbf3fb5" translate="yes" xml:space="preserve">
          <source>Premature end of script headers</source>
          <target state="translated">スクリプトヘッダの早期終了</target>
        </trans-unit>
        <trans-unit id="ca327af27efee895ecb8288cd68d4b6f0ee7b660" translate="yes" xml:space="preserve">
          <source>Prepares a starting point to traverse a hash table. Returns the number of keys in the hash (i.e. the same as &lt;code&gt;HvUSEDKEYS(hv)&lt;/code&gt; ). The return value is currently only meaningful for hashes without tie magic.</source>
          <target state="translated">ハッシュテーブルを走査する開始点を準備します。ハッシュ内のキーの数を返します（つまり、 &lt;code&gt;HvUSEDKEYS(hv)&lt;/code&gt; と同じ）。現在、戻り値は、ネクタイマジックのないハッシュに対してのみ意味があります。</target>
        </trans-unit>
        <trans-unit id="e5c66c4f998b53bd3b98fe0a699ac5c0c03702ab" translate="yes" xml:space="preserve">
          <source>Prepares a starting point to traverse a hash table. Returns the number of keys in the hash, including placeholders (i.e. the same as &lt;code&gt;HvTOTALKEYS(hv)&lt;/code&gt;). The return value is currently only meaningful for hashes without tie magic.</source>
          <target state="translated">ハッシュテーブルをトラバースするための開始点を準備します。プレースホルダーを含む、ハッシュ内のキーの数を返します（つまり、 &lt;code&gt;HvTOTALKEYS(hv)&lt;/code&gt; と同じ）。戻り値は現在、タイマジックのないハッシュに対してのみ意味があります。</target>
        </trans-unit>
        <trans-unit id="3ba6224af2c92974d736ffced198acbd4096ace3" translate="yes" xml:space="preserve">
          <source>Preparing the target system</source>
          <target state="translated">ターゲットシステムの準備</target>
        </trans-unit>
        <trans-unit id="ffc03d7ec4535764ca9f3772e318d6f043e9e016" translate="yes" xml:space="preserve">
          <source>Prepend an item to the list of ops contained directly within a list-type op, returning the lengthened list.</source>
          <target state="translated">リストタイプのopに直接含まれるopのリストに項目を前置し、長くなったリストを返します。</target>
        </trans-unit>
        <trans-unit id="5320acd2510e9290b4679f6cd76874fb6fa8c279" translate="yes" xml:space="preserve">
          <source>Prepend an item to the list of ops contained directly within a list-type op, returning the lengthened list. &lt;code&gt;first&lt;/code&gt; is the op to prepend to the list, and &lt;code&gt;last&lt;/code&gt; is the list-type op. &lt;code&gt;optype&lt;/code&gt; specifies the intended opcode for the list. If &lt;code&gt;last&lt;/code&gt; is not already a list of the right type, it will be upgraded into one. If either &lt;code&gt;first&lt;/code&gt; or &lt;code&gt;last&lt;/code&gt; is null, the other is returned unchanged.</source>
          <target state="translated">リストタイプのop内に直接含まれているopsのリストの前にアイテムを追加し、長くなったリストを返します。 &lt;code&gt;first&lt;/code&gt; はリストの先頭に追加する操作で、 &lt;code&gt;last&lt;/code&gt; はリストタイプの操作です。 &lt;code&gt;optype&lt;/code&gt; は、リストの目的のオペコードを指定します。 &lt;code&gt;last&lt;/code&gt; がまだ適切なタイプのリストでない場合は、1つにアップグレードされます。 &lt;code&gt;first&lt;/code&gt; または &lt;code&gt;last&lt;/code&gt; いずれかがnullの場合、もう一方は変更されずに返されます。</target>
        </trans-unit>
        <trans-unit id="a4ef952f6146acb08f845dd15ba77a7f17429906" translate="yes" xml:space="preserve">
          <source>Prepend the supplied directory name to the template. The template should not include parent directory specifications itself. Any parent directory specifications are removed from the template before prepending the supplied directory.</source>
          <target state="translated">与えられたディレクトリ名をテンプレートに前置します。テンプレートには親ディレクトリの指定自体を含めるべきではありません。与えられたディレクトリを前置する前に、親ディレクトリの指定はテンプレートから削除されます。</target>
        </trans-unit>
        <trans-unit id="0e5ab6fc929309798c3bd158ad1bbf3fa9c0916d" translate="yes" xml:space="preserve">
          <source>Prepends the above directory to &lt;code&gt;BEGINLIBPATH&lt;/code&gt; ;</source>
          <target state="translated">上記のディレクトリを &lt;code&gt;BEGINLIBPATH&lt;/code&gt; の前に追加します。</target>
        </trans-unit>
        <trans-unit id="ba6425b4b8377edfdebdc51af7ef169860ff3755" translate="yes" xml:space="preserve">
          <source>Prepends the above directory to &lt;code&gt;BEGINLIBPATH&lt;/code&gt;;</source>
          <target state="translated">上記のディレクトリを &lt;code&gt;BEGINLIBPATH&lt;/code&gt; の前に置きます;</target>
        </trans-unit>
        <trans-unit id="9bbcda665d927bc3df5f365451b970ea9d631664" translate="yes" xml:space="preserve">
          <source>Prepends the given string or parse-tree or sequence object to the parse-tree of this interior sequence.</source>
          <target state="translated">与えられた文字列,構文木,シーケンスオブジェクトを,この内部シーケンスの構文木に前置します.</target>
        </trans-unit>
        <trans-unit id="ea359cc9032ad02ddd5db48d80a0141bb1493e0b" translate="yes" xml:space="preserve">
          <source>Prereq Spec</source>
          <target state="translated">プリレック仕様</target>
        </trans-unit>
        <trans-unit id="eed036e414a34a0c245858652e6d88f14c3faefb" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="translated">Prerequisites</target>
        </trans-unit>
        <trans-unit id="bd4880bf9be46b68a1d78624b0c0e7ee32ab3b0d" translate="yes" xml:space="preserve">
          <source>Prerequisites - what else you may need to have.</source>
          <target state="translated">前提条件-他に必要なものがあるかもしれません。</target>
        </trans-unit>
        <trans-unit id="a09ee8803a3e08b44cee3828e8eaea97f4a78f52" translate="yes" xml:space="preserve">
          <source>Prerequisites for Compiling Perl on AmigaOS</source>
          <target state="translated">AmigaOSでPerlをコンパイルするための前提条件</target>
        </trans-unit>
        <trans-unit id="2bf93198f4dd6a32fb330b849b5c10097740f617" translate="yes" xml:space="preserve">
          <source>Prerequisites for Compiling Perl on DOS</source>
          <target state="translated">DOSでPerlをコンパイルするための前提条件</target>
        </trans-unit>
        <trans-unit id="e507ea21d3d4d3e90dcff5164ccc0e82f8301abf" translate="yes" xml:space="preserve">
          <source>Prerequisites for dynamically configured distributions</source>
          <target state="translated">動的に構成されたディストリビューションの前提条件</target>
        </trans-unit>
        <trans-unit id="409b9176b979862d4e556ba25ad3bacd9822eb5b" translate="yes" xml:space="preserve">
          <source>Prerequisites for running Perl 5.22.1 under AmigaOS 4.1</source>
          <target state="translated">AmigaOS 4.1でPerl 5.22.1を実行するための前提条件</target>
        </trans-unit>
        <trans-unit id="95fa8ceddba3a09f73177d0b71d8fe3bcb1a4541" translate="yes" xml:space="preserve">
          <source>Presented with little comment (these will get their own manpages someday) here are short code examples illustrating access of various types of data structures.</source>
          <target state="translated">コメントはほとんどなく(これらはいつか独自のページを作成することになるでしょう)、さまざまなタイプのデータ構造のアクセスを説明する短いコード例を示します。</target>
        </trans-unit>
        <trans-unit id="f76deb0ec2a336ca4cb74a651cc1f55342e1e91b" translate="yes" xml:space="preserve">
          <source>Presently there is no way to interrogate an &lt;code&gt;autodie::exception::system&lt;/code&gt; object for the command, exit status, and other information you'd expect such an object to hold. The interface will be expanded to accommodate this in the future.</source>
          <target state="translated">現在、 &lt;code&gt;autodie::exception::system&lt;/code&gt; オブジェクトにコマンド、終了ステータス、およびそのようなオブジェクトが保持すると予想されるその他の情報を問い合わせる方法はありません。インターフェースは、将来これに対応するために拡張されます。</target>
        </trans-unit>
        <trans-unit id="3437b8bc516389bda3cce8e402bfc852a1712fef" translate="yes" xml:space="preserve">
          <source>Preserve more data for future interactive inspections.</source>
          <target state="translated">将来のインタラクティブな検査のために、より多くのデータを保存します。</target>
        </trans-unit>
        <trans-unit id="e640fa1e20282fa93fdaf4d6fd684e648c672de7" translate="yes" xml:space="preserve">
          <source>Preserve the string matched such that ${^PREMATCH}, ${^MATCH}, and ${^POSTMATCH} are available for use after matching.</source>
          <target state="translated">マッチング後も${^PREMATCH},${^MATCH},${^POSTMATCH}が利用できるように、マッチした文字列を保存します。</target>
        </trans-unit>
        <trans-unit id="44a59686c75551d9add57e7204283079885980a1" translate="yes" xml:space="preserve">
          <source>Preserve the string matched such that &lt;code&gt;${^PREMATCH}&lt;/code&gt;, &lt;code&gt;${^MATCH}&lt;/code&gt;, and &lt;code&gt;${^POSTMATCH}&lt;/code&gt; are available for use after matching.</source>
          <target state="translated">&lt;code&gt;${^PREMATCH}&lt;/code&gt; 、 &lt;code&gt;${^MATCH}&lt;/code&gt; 、および &lt;code&gt;${^POSTMATCH}&lt;/code&gt; が一致後に使用できるように、一致した文字列を保持します。</target>
        </trans-unit>
        <trans-unit id="b33cf22068f58ddac89fea290aa9a5162e4a365b" translate="yes" xml:space="preserve">
          <source>Preserves accuracy to $scale digits from the left (aka significant digits) and pads the rest with zeros. If the number is between 1 and -1, the significant digits count from the first non-zero after the '.'</source>
          <target state="translated">スケールの左からの桁数 (有効桁数)の精度を保持し、残りの桁数をゼロで埋めます。数値が 1 から -1 の間にある場合、有効桁は '.' の後の最初のゼロ以外の桁から数えます。</target>
        </trans-unit>
        <trans-unit id="df9b33ae4df9e254600f6196133d1c35039af7d3" translate="yes" xml:space="preserve">
          <source>Press Refresh. In the left panel the item &quot;Community&quot; will appear. Click it. Select &quot;Bootstrap Installer Beta&quot; and install it.</source>
          <target state="translated">更新を押します。左側のパネルに「コミュニティ」という項目が表示されます。それをクリックします。Bootstrap Installer Beta」を選択してインストールします。</target>
        </trans-unit>
        <trans-unit id="a5d86d611e35ff6e1b78c3b62444d98363343289" translate="yes" xml:space="preserve">
          <source>Presumably the Philippine language Waray-Waray (Samare&amp;ntilde;o), not the smaller Philippine language Waray Sorsogon, nor the extinct Australian language Waray.</source>
          <target state="translated">おそらくフィリピン語のワライ・ワライ語（サマレーニョ）であり、より小さなフィリピン語のワライ・ソルソゴンでも、オーストラリアの絶滅した言語であるワライ語でもない。</target>
        </trans-unit>
        <trans-unit id="0a2cb25a662f585b417f0c2f8f17aaa0a5065d2d" translate="yes" xml:space="preserve">
          <source>Pretty ugly, eh? It's a common idiom though, so don't be too surprised when you see it. You can at least use a temporary variable to hold the previous filehandle: (this is a much better approach in general, because not only does legibility improve, you now have an intermediary stage in the expression to single-step the debugger through):</source>
          <target state="translated">かなりのブサイクでしょ?しかし、これはよくある慣用句なので、それを見てもあまり驚かないでください。少なくとも前のファイルハンドルを保持するために一時変数を使用することができます:(これは一般的にはずっと良いアプローチです。可読性が向上するだけでなく、式の中にデバッガをシングルステップで通過させる中間段階があるからです)。</target>
        </trans-unit>
        <trans-unit id="963f0c082b0ef847cc7f94277b8f965a8541ae8a" translate="yes" xml:space="preserve">
          <source>Prevent the grouping metacharacters &lt;code&gt;()&lt;/code&gt; from capturing. This modifier, new in 5.22, will stop &lt;code&gt;$1&lt;/code&gt; , &lt;code&gt;$2&lt;/code&gt; , etc... from being filled in.</source>
          <target state="translated">グループ化メタ文字 &lt;code&gt;()&lt;/code&gt; がキャプチャされないようにします。この修飾子は5.22の新機能であり、 &lt;code&gt;$1&lt;/code&gt; 、 &lt;code&gt;$2&lt;/code&gt; などの入力を停止します。</target>
        </trans-unit>
        <trans-unit id="85ac045406fff279753c59dacc69d448bf4766b2" translate="yes" xml:space="preserve">
          <source>Prevent the grouping metacharacters &lt;code&gt;()&lt;/code&gt; from capturing. This modifier, new in 5.22, will stop &lt;code&gt;$1&lt;/code&gt;, &lt;code&gt;$2&lt;/code&gt;,</source>
          <target state="translated">グループ化メタ文字 &lt;code&gt;()&lt;/code&gt; がキャプチャされないようにします。5.22で新しく追加されたこの修飾子は、 &lt;code&gt;$1&lt;/code&gt; 、 &lt;code&gt;$2&lt;/code&gt; 、を停止します。</target>
        </trans-unit>
        <trans-unit id="457fa0dd9ef7c1de466cb472004b83bed4a2a8ee" translate="yes" xml:space="preserve">
          <source>Prevents the inclusion of '#line' directives in the output.</source>
          <target state="translated">出力に '#line' ディレクティブが含まれないようにします。</target>
        </trans-unit>
        <trans-unit id="4e76bb1e6f14e0746558e405fd753c5acff93017" translate="yes" xml:space="preserve">
          <source>Previous maintainer was Michael G Schwern &amp;lt;schwern@pobox.com&amp;gt;.</source>
          <target state="translated">以前のメンテナーはMichael G Schwern &amp;lt;schwern@pobox.com&amp;gt;でした。</target>
        </trans-unit>
        <trans-unit id="9af80fa78e3d389344e53119f3893641766863b8" translate="yes" xml:space="preserve">
          <source>Previous maintainer: Hal Pomeranz &amp;lt;pomeranz@netcom.com&amp;gt;, 1994-1997 (Original author unknown). Much of the code for &amp;amp;parse_line() (including the primary regexp) from Joerk Behrends &amp;lt;jbehrends@multimediaproduzenten.de&amp;gt;.</source>
          <target state="translated">以前のメンテナ：Hal Pomeranz &amp;lt;pomeranz@netcom.com&amp;gt;、1994-1997（元の作者は不明）。Joerk Behrends &amp;lt;jbehrends@multimediaproduzenten.de&amp;gt;からの＆parse_line（）のコードの多く（プライマリ正規表現を含む）。</target>
        </trans-unit>
        <trans-unit id="c2ffcc08fe71b18c33582287221ff6c8ae26702c" translate="yes" xml:space="preserve">
          <source>Previous steps were performed during the compilation of Perl code, but this one happens at run time, although it may be optimized to be calculated at compile time if appropriate. After preprocessing described above, and possibly after evaluation if concatenation, joining, casing translation, or metaquoting are involved, the resulting</source>
          <target state="translated">前のステップはPerlコードのコンパイル時に実行されましたが、今回のステップは実行時に実行されますが、適切であればコンパイル時に計算されるように最適化されるかもしれません。上で説明した前処理の後、連結、結合、ケーシング変換、メタクォートが関与している場合は評価の後に、結果の</target>
        </trans-unit>
        <trans-unit id="712a386d33ec2d569cadb97eef8f2374df4edce1" translate="yes" xml:space="preserve">
          <source>Previous versions of Getopt::Long used variables for the purpose of configuring. Although manipulating these variables still work, it is strongly encouraged to use the &lt;code&gt;Configure&lt;/code&gt; routine that was introduced in version 2.17. Besides, it is much easier.</source>
          <target state="translated">Getopt :: Longの以前のバージョンは、構成のために変数を使用していました。これらの変数の操作は引き続き機能しますが、バージョン2.17で導入された &lt;code&gt;Configure&lt;/code&gt; ルーチンを使用することを強くお勧めします。その上、それははるかに簡単です。</target>
        </trans-unit>
        <trans-unit id="dccc4f2981422e8e0be18ebbbc807021c6e418aa" translate="yes" xml:space="preserve">
          <source>Previous versions of perlpod allowed for a &lt;code&gt;L&amp;lt;section&amp;gt;&lt;/code&gt; syntax (as in &lt;code&gt;L&amp;lt;Object Attributes&amp;gt;&lt;/code&gt; ), which was not easily distinguishable from &lt;code&gt;L&amp;lt;name&amp;gt;&lt;/code&gt; syntax and for &lt;code&gt;L&amp;lt;&quot;section&quot;&amp;gt;&lt;/code&gt; which was only slightly less ambiguous. This syntax is no longer in the specification, and has been replaced by the &lt;code&gt;L&amp;lt;/section&amp;gt;&lt;/code&gt; syntax (where the slash was formerly optional). Pod parsers should tolerate the &lt;code&gt;L&amp;lt;&quot;section&quot;&amp;gt;&lt;/code&gt; syntax, for a while at least. The suggested heuristic for distinguishing &lt;code&gt;L&amp;lt;section&amp;gt;&lt;/code&gt; from &lt;code&gt;L&amp;lt;name&amp;gt;&lt;/code&gt; is that if it contains any whitespace, it's a</source>
          <target state="translated">以前のバージョンのperlpodでは、 &lt;code&gt;L&amp;lt;section&amp;gt;&lt;/code&gt; 構文（ &lt;code&gt;L&amp;lt;Object Attributes&amp;gt;&lt;/code&gt; ）を使用できました。これは、 &lt;code&gt;L&amp;lt;name&amp;gt;&lt;/code&gt; 構文と簡単に区別できず、 &lt;code&gt;L&amp;lt;&quot;section&quot;&amp;gt;&lt;/code&gt; でも少し曖昧でした。この構文は仕様ではなくなり、 &lt;code&gt;L&amp;lt;/section&amp;gt;&lt;/code&gt; 構文に置き換えられました（スラッシュは以前はオプションでした）。ポッドパーサーは、少なくともしばらくの間、 &lt;code&gt;L&amp;lt;&quot;section&quot;&amp;gt;&lt;/code&gt; 構文を許容する必要があります。 &lt;code&gt;L&amp;lt;section&amp;gt;&lt;/code&gt; と &lt;code&gt;L&amp;lt;name&amp;gt;&lt;/code&gt; を区別するための推奨されるヒューリスティックは、空白が含まれている場合、</target>
        </trans-unit>
        <trans-unit id="6f653ff479e2274669fdc86d4ba2b978dddb4afd" translate="yes" xml:space="preserve">
          <source>Previous versions of perlpod allowed for a &lt;code&gt;L&amp;lt;section&amp;gt;&lt;/code&gt; syntax (as in &lt;code&gt;L&amp;lt;Object Attributes&amp;gt;&lt;/code&gt;), which was not easily distinguishable from &lt;code&gt;L&amp;lt;name&amp;gt;&lt;/code&gt; syntax and for &lt;code&gt;L&amp;lt;&quot;section&quot;&amp;gt;&lt;/code&gt; which was only slightly less ambiguous. This syntax is no longer in the specification, and has been replaced by the &lt;code&gt;L&amp;lt;/section&amp;gt;&lt;/code&gt; syntax (where the slash was formerly optional). Pod parsers should tolerate the &lt;code&gt;L&amp;lt;&quot;section&quot;&amp;gt;&lt;/code&gt; syntax, for a while at least. The suggested heuristic for distinguishing &lt;code&gt;L&amp;lt;section&amp;gt;&lt;/code&gt; from &lt;code&gt;L&amp;lt;name&amp;gt;&lt;/code&gt; is that if it contains any whitespace, it's a</source>
          <target state="translated">以前のバージョンのperlpodでは、（ &lt;code&gt;L&amp;lt;Object Attributes&amp;gt;&lt;/code&gt; ） &lt;code&gt;L&amp;lt;section&amp;gt;&lt;/code&gt; 構文が許可されていましたが、これは &lt;code&gt;L&amp;lt;name&amp;gt;&lt;/code&gt; 構文と簡単に区別できず、 &lt;code&gt;L&amp;lt;&quot;section&quot;&amp;gt;&lt;/code&gt; はわずかにあいまいさが少なくなりました。この構文は仕様に含まれなくなり、 &lt;code&gt;L&amp;lt;/section&amp;gt;&lt;/code&gt; 構文に置き換えられました（以前はスラッシュがオプションでした）。ポッドパーサーは、少なくともしばらくの間、 &lt;code&gt;L&amp;lt;&quot;section&quot;&amp;gt;&lt;/code&gt; 構文を許容する必要があります。 &lt;code&gt;L&amp;lt;section&amp;gt;&lt;/code&gt; と &lt;code&gt;L&amp;lt;name&amp;gt;&lt;/code&gt; を区別するために推奨されるヒューリスティックは、空白が含まれている場合、それは</target>
        </trans-unit>
        <trans-unit id="5d5080e57965c5e0136dec24846dd5ebda3d2afc" translate="yes" xml:space="preserve">
          <source>Previous versions of perlpod distinguished &lt;code&gt;L&amp;lt;name/&quot;section&quot;&amp;gt;&lt;/code&gt; links from &lt;code&gt;L&amp;lt;name/item&amp;gt;&lt;/code&gt; links (and their targets). These have been merged syntactically and semantically in the current specification, and</source>
          <target state="translated">以前のバージョンのperlpod は、 &lt;code&gt;L&amp;lt;name/item&amp;gt;&lt;/code&gt; リンク（およびそのターゲット）からL &amp;lt;name / &lt;code&gt;L&amp;lt;name/&quot;section&quot;&amp;gt;&lt;/code&gt; リンクを区別していました。これらは、現在の仕様で構文的および意味的にマージされています。</target>
        </trans-unit>
        <trans-unit id="14f8fc760485caa4685e61dad45be68f1f9ddaa9" translate="yes" xml:space="preserve">
          <source>Previous versions of this documentation suggested using &lt;code&gt;isa&lt;/code&gt; as a function to determine the type of a reference:</source>
          <target state="translated">このドキュメントの以前のバージョンでは、参照のタイプを判別する関数として &lt;code&gt;isa&lt;/code&gt; を使用することが推奨されていました。</target>
        </trans-unit>
        <trans-unit id="16e35723da6a1f4e0f4f26765e6766759d4e06d1" translate="yes" xml:space="preserve">
          <source>Previous versions of this documentation suggested using &lt;code&gt;memory
=&amp;gt; 0&lt;/code&gt; for safe concurrent access. This was mistaken. Tie::File will not support safe concurrent access before version 0.96.</source>
          <target state="translated">このドキュメントの以前のバージョンでは、安全な同時アクセスのために &lt;code&gt;memory =&amp;gt; 0&lt;/code&gt; を使用することが推奨されていました。これは間違いでした。Tie :: Fileは、バージョン0.96より前の安全な同時アクセスをサポートしません。</target>
        </trans-unit>
        <trans-unit id="4ea86d31b7a890fc1159e9e5757a43b75c64847e" translate="yes" xml:space="preserve">
          <source>Previously Local::Maketext::GutsLoader performed some magic to load Locale::Maketext when utf8 was unavailable. The subs this module provided were merged back into Locale::Maketext</source>
          <target state="translated">以前のLocal::Maketext::GutsLoaderは、utf8が利用できないときにLocale::Maketextをロードするためにいくつかの魔法を実行しました。このモジュールが提供していたサブモジュールは、Locale::Maketextにマージされました。</target>
        </trans-unit>
        <trans-unit id="7e5fb7a6ba75baae80c7e10052589b5b646d8c66" translate="yes" xml:space="preserve">
          <source>Previously Locale::Maketext::Guts performed some magic to load Locale::Maketext when utf8 was unavailable. The subs this module provided were merged back into Locale::Maketext.</source>
          <target state="translated">以前のLocale::Maketext::Gutsは、utf8が利用できないときにLocale::Maketextをロードするためにいくつかの魔法を実行しました。このモジュールが提供していたサブモジュールは、Locale::Maketextにマージされました。</target>
        </trans-unit>
        <trans-unit id="fc94bc408d5771e2fc1b2bd7fe1d954e5be48d76" translate="yes" xml:space="preserve">
          <source>Previously sysread() and recv() currently use only the &lt;code&gt;:utf8&lt;/code&gt; flag for the stream, ignoring the actual layers. Since sysread() and recv() did no UTF-8 validation they can end up creating invalidly encoded scalars.</source>
          <target state="translated">以前のsysread（）とrecv（）は現在、実際のレイヤーを無視して、ストリームに &lt;code&gt;:utf8&lt;/code&gt; フラグのみを使用しています。sysread（）とrecv（）はUTF-8検証を行わなかったため、無効にエンコードされたスカラーを作成してしまう可能性があります。</target>
        </trans-unit>
        <trans-unit id="5ff7ceb2711be19546099c1783a191fceba3a049" translate="yes" xml:space="preserve">
          <source>Previously this value was always stored in the HV structure, which created an overhead on every hash (and pretty much every object) for something that was rarely used. Now we calculate it on demand the first time that it is needed, and cache it if that calculation is going to be costly to repeat. The cached value is updated by insertions and deletions, but (currently) discarded if the hash is split.</source>
          <target state="translated">以前は、この値は常に HV 構造体に格納されていましたが、これは、めったに使用されないもののために、すべてのハッシュ (およびほとんどすべてのオブジェクト)にオーバーヘッドを生じさせていました。今では、最初に必要になったときにオンデマンドで計算し、その計算を繰り返すのにコストがかかりそうな場合はキャッシュします。キャッシュされた値は挿入や削除によって更新されますが、(現在は)ハッシュが分割された場合は破棄されます。</target>
        </trans-unit>
        <trans-unit id="c940ec50096c5081483cc1c8a4a85997bf9bf27c" translate="yes" xml:space="preserve">
          <source>Previously, only child processes received stringified values:</source>
          <target state="translated">以前は、文字列化された値を受け取るのは子プロセスのみでした。</target>
        </trans-unit>
        <trans-unit id="fe6c94a04996d4c3adf8f5c25e0ce233ec518432" translate="yes" xml:space="preserve">
          <source>Primarily intended for use by format handlers.</source>
          <target state="translated">主にフォーマットハンドラでの使用を目的としています。</target>
        </trans-unit>
        <trans-unit id="d1f3bd969dabfd87e4cadab20370ef590ab80950" translate="yes" xml:space="preserve">
          <source>Primary Maintainer</source>
          <target state="translated">主な管理者</target>
        </trans-unit>
        <trans-unit id="d1a7f02222abe2f07b33cc3a5c6d87fcbafa9931" translate="yes" xml:space="preserve">
          <source>Primary interface for writing Test2 based testing tools.</source>
          <target state="translated">Test2ベースのテストツールを書くための主要なインターフェース。</target>
        </trans-unit>
        <trans-unit id="7186167ebea0c5ee2c8d72e98cc4bbb2d97fa9ea" translate="yes" xml:space="preserve">
          <source>Principal author</source>
          <target state="translated">主執筆者</target>
        </trans-unit>
        <trans-unit id="32c4d5cec9a9d67d9096ad8b31f2e98c9de6c3c5" translate="yes" xml:space="preserve">
          <source>Principle 0: Taken as a whole, any regexp will be matched at the earliest possible position in the string.</source>
          <target state="translated">原則 0:全体として見ると、どの正規表現も文字列の中で最も早い位置でマッチします。</target>
        </trans-unit>
        <trans-unit id="6a4f105bbda5244560916b603ce8af958b7f039e" translate="yes" xml:space="preserve">
          <source>Principle 1: In an alternation &lt;code&gt;a|b|c...&lt;/code&gt; , the leftmost alternative that allows a match for the whole regexp will be the one used.</source>
          <target state="translated">原則1：代替 &lt;code&gt;a|b|c...&lt;/code&gt; では、正規表現全体に一致する左端の選択肢が使用されます。</target>
        </trans-unit>
        <trans-unit id="e4b8d18d0fa1c7fc8787b0ac3b7f3f5dc252d5bd" translate="yes" xml:space="preserve">
          <source>Principle 1: In an alternation &lt;code&gt;a|b|c...&lt;/code&gt;, the leftmost alternative that allows a match for the whole regexp will be the one used.</source>
          <target state="translated">原則1：代替 &lt;code&gt;a|b|c...&lt;/code&gt; では、正規表現全体の一致を許可する左端の代替が使用されます。</target>
        </trans-unit>
        <trans-unit id="5647e0fc45706e96f73524faf01e6aa93e45002d" translate="yes" xml:space="preserve">
          <source>Principle 2: The maximal matching quantifiers &lt;code&gt;'?'&lt;/code&gt;, &lt;code&gt;'*'&lt;/code&gt;, &lt;code&gt;'+'&lt;/code&gt; and &lt;code&gt;{n,m}&lt;/code&gt; will in general match as much of the string as possible while still allowing the whole regexp to match.</source>
          <target state="translated">原則2：最大マッチング数量詞 &lt;code&gt;'?'&lt;/code&gt; 、 &lt;code&gt;'*'&lt;/code&gt; 、 &lt;code&gt;'+'&lt;/code&gt; 、および &lt;code&gt;{n,m}&lt;/code&gt; は、一般に、正規表現全体を一致させながら、可能な限り多くの文字列と一致します。</target>
        </trans-unit>
        <trans-unit id="029a1dbf083882cef4054ed7972875e41bc5642b" translate="yes" xml:space="preserve">
          <source>Principle 2: The maximal matching quantifiers &lt;code&gt;?&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt; , &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;{n,m}&lt;/code&gt; will in general match as much of the string as possible while still allowing the whole regexp to match.</source>
          <target state="translated">原則2：最大一致量指定子 &lt;code&gt;?&lt;/code&gt; 、 &lt;code&gt;*&lt;/code&gt; 、 &lt;code&gt;+&lt;/code&gt; 、および &lt;code&gt;{n,m}&lt;/code&gt; は、一般的に、正規表現全体を一致させながら、できるだけ多くの文字列と一致します。</target>
        </trans-unit>
        <trans-unit id="23b72c3ca0299774d68e314619c9048069fa0bef" translate="yes" xml:space="preserve">
          <source>Principle 3: If there are two or more elements in a regexp, the leftmost greedy (non-greedy) quantifier, if any, will match as much (little) of the string as possible while still allowing the whole regexp to match. The next leftmost greedy (non-greedy) quantifier, if any, will try to match as much (little) of the string remaining available to it as possible, while still allowing the whole regexp to match. And so on, until all the regexp elements are satisfied.</source>
          <target state="translated">原則3:正規表現に2つ以上の要素がある場合、左端のgreedy (non-greedy)定量化子は、もしあれば、可能な限りその文字列にマッチするようにしながら、正規表現全体にマッチするようにします。次の左端の貪欲な(非貪欲な)定量化子は、もしあれば、利用可能な文字列のうち、可能な限り多く(少し)マッチさせようとし、同時に正規表現全体をマッチさせます。そして、すべての正規表現の要素が満たされるまで、このような処理を繰り返します。</target>
        </trans-unit>
        <trans-unit id="7924ae789f920a103b9e8212ac47e4dc00917a8b" translate="yes" xml:space="preserve">
          <source>Principle 3: If there are two or more elements in a regexp, the leftmost greedy quantifier, if any, will match as much of the string as possible while still allowing the whole regexp to match. The next leftmost greedy quantifier, if any, will try to match as much of the string remaining available to it as possible, while still allowing the whole regexp to match. And so on, until all the regexp elements are satisfied.</source>
          <target state="translated">原則3:正規表現に2つ以上の要素がある場合、左端の貪欲な量詞は、もしあれば、可能な限りその文字列にマッチします。次の左端の貪欲な定量化子は、もしあれば、利用可能な文字列のうち、可能な限りマッチさせようとし、同時に正規表現全体がマッチするようにします。そして、すべての正規表現の要素が満たされるまで、このような処理を繰り返します。</target>
        </trans-unit>
        <trans-unit id="5b221e9c2a451799d8f37e2b9874409d5e03ab05" translate="yes" xml:space="preserve">
          <source>Print</source>
          <target state="translated">Print</target>
        </trans-unit>
        <trans-unit id="62c9112958c68fcfcec0378f346995acb5fb475e" translate="yes" xml:space="preserve">
          <source>Print &lt;code&gt;$message&lt;/code&gt; to STDERR.</source>
          <target state="translated">印刷 &lt;code&gt;$message&lt;/code&gt; STDERRに。</target>
        </trans-unit>
        <trans-unit id="28796f1a81c3dcd34643979c6b7feb02d0c7e828" translate="yes" xml:space="preserve">
          <source>Print ARGS to the file.</source>
          <target state="translated">ファイルにARGSを印刷します。</target>
        </trans-unit>
        <trans-unit id="804b8b64824af87e385d661f22fda8303200efb4" translate="yes" xml:space="preserve">
          <source>Print ARGS to the underlying scalar.</source>
          <target state="translated">ARGSをスカラ値に出力します.</target>
        </trans-unit>
        <trans-unit id="aeb5f490c0fe5dda6fa8c9b0136063c67f1eba8a" translate="yes" xml:space="preserve">
          <source>Print OP sequence numbers in base</source>
          <target state="translated">OPシーケンス番号をベースに印刷</target>
        </trans-unit>
        <trans-unit id="c95f895c7d7dbde542e1c491d05c9defe9ec89fe" translate="yes" xml:space="preserve">
          <source>Print OPs in a text approximation of a tree, with the root of the tree at the left and 'left-to-right' order of children transformed into 'top-to-bottom'. Because this mode grows both to the right and down, it isn't suitable for large programs (unless you have a very wide terminal).</source>
          <target state="translated">木の根元を左に、子の「左から右」の順番を「上から下」に変換して、木のテキスト近似でOPを印刷します。このモードは右にも下にも成長するので、(よほど広い端末を持っていない限り)大きなプログラムには向かない。</target>
        </trans-unit>
        <trans-unit id="64c201f8801eb2b8f4a6b4829f0bb1418f54aea2" translate="yes" xml:space="preserve">
          <source>Print OPs in the order they appear in the OP tree (a preorder traversal, starting at the root). The indentation of each OP shows its level in the tree, and the '-&amp;gt;' at the end of the line indicates the next opcode in execution order. This mode is the default, so the flag is included simply for completeness.</source>
          <target state="translated">OPをOPツリーに表示される順序で印刷します（ルートから開始するプレオーダートラバーサル）。各OPのインデントはツリー内のレベルを示し、行末の「-&amp;gt;」は実行順序の次のオペコードを示します。このモードがデフォルトなので、フラグは完全を期すために含まれています。</target>
        </trans-unit>
        <trans-unit id="8ab076ddbb8deab03d45c660c94d823cf8595ce2" translate="yes" xml:space="preserve">
          <source>Print OPs in the order they would normally execute (for the majority of constructs this is a postorder traversal of the tree, ending at the root). In most cases the OP that usually follows a given OP will appear directly below it; alternate paths are shown by indentation. In cases like loops when control jumps out of a linear path, a 'goto' line is generated.</source>
          <target state="translated">OP を通常実行される順番で表示します (大部分のコンストラクタでは、これはツリーの探索をルートで終了する、後の順番で表示されます)。ほとんどの場合、通常は与えられたOPの後に続くOPが直下に表示されます。ループのようなケースでは、制御が直線パスから飛び出したときに 'goto' ラインが生成されます。</target>
        </trans-unit>
        <trans-unit id="6c982704bf497f0a66edb9c2534a7d373da38b12" translate="yes" xml:space="preserve">
          <source>Print a blank line after a &lt;code&gt;=head1&lt;/code&gt; heading. Normally, no blank line is printed after &lt;code&gt;=head1&lt;/code&gt; , although one is still printed after &lt;code&gt;=head2&lt;/code&gt; , because this is the expected formatting for manual pages; if you're formatting arbitrary text documents, using this option is recommended.</source>
          <target state="translated">&lt;code&gt;=head1&lt;/code&gt; 見出しの後に空白行を出力します。通常、 &lt;code&gt;=head1&lt;/code&gt; の後に空白行は出力されませんが、 &lt;code&gt;=head2&lt;/code&gt; の後には空白行が出力されます。任意のテキストドキュメントをフォーマットする場合は、このオプションの使用をお勧めします。</target>
        </trans-unit>
        <trans-unit id="78f0cf88c9382715f9ef827873e42e426b60fd56" translate="yes" xml:space="preserve">
          <source>Print a blank line after a &lt;code&gt;=head1&lt;/code&gt; heading. Normally, no blank line is printed after &lt;code&gt;=head1&lt;/code&gt;, although one is still printed after &lt;code&gt;=head2&lt;/code&gt;, because this is the expected formatting for manual pages; if you're formatting arbitrary text documents, using this option is recommended.</source>
          <target state="translated">&lt;code&gt;=head1&lt;/code&gt; 見出しの後に空白行を出力します。通常、 &lt;code&gt;=head1&lt;/code&gt; の後に空白行は印刷されませんが、 &lt;code&gt;=head2&lt;/code&gt; の後には空白行が印刷されます。これは、マニュアルページで予想されるフォーマットであるためです。任意のテキストドキュメントをフォーマットする場合は、このオプションを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="867127fd347fb038713aa7bf1fa3161513e339cb" translate="yes" xml:space="preserve">
          <source>Print a brief help message and exit.</source>
          <target state="translated">簡単なヘルプメッセージを印刷して終了します。</target>
        </trans-unit>
        <trans-unit id="c53664d54eb8b04f1dd85e60cf6db075ad9bb2d5" translate="yes" xml:space="preserve">
          <source>Print a help message and exit. When you specify &lt;code&gt;-h&lt;/code&gt;, it ignores all of the other options and arguments.</source>
          <target state="translated">ヘルプメッセージを印刷して終了します。 &lt;code&gt;-h&lt;/code&gt; を指定すると、他のすべてのオプションと引数が無視されます。</target>
        </trans-unit>
        <trans-unit id="33a3171c128f8353be548144a646976a2ba0eae4" translate="yes" xml:space="preserve">
          <source>Print a usage message from embedded pod documentation</source>
          <target state="translated">埋め込まれたポッドのドキュメントから使用方法のメッセージを印刷する</target>
        </trans-unit>
        <trans-unit id="6515d632fc4240022bb106a3dc691b05ec42ef49" translate="yes" xml:space="preserve">
          <source>Print appropriate &quot;Use of uninitialized variable&quot; warning.</source>
          <target state="translated">適切な「初期化されていない変数を使用しています」という警告を表示します。</target>
        </trans-unit>
        <trans-unit id="97cfeb23d207e65189895e1fffe73287ac2f12a1" translate="yes" xml:space="preserve">
          <source>Print debugging information. &lt;code&gt;DIR&lt;/code&gt; denotes the direction</source>
          <target state="translated">デバッグ情報を出力します。 &lt;code&gt;DIR&lt;/code&gt; は方向を示します</target>
        </trans-unit>
        <trans-unit id="41f6790824d5db34a4b42caceced096a2adda46e" translate="yes" xml:space="preserve">
          <source>Print detailed information about the cpan client.</source>
          <target state="translated">cpanクライアントの詳細情報を印刷します。</target>
        </trans-unit>
        <trans-unit id="588c5c4b63a239dce597eee039700f84b90eb2e5" translate="yes" xml:space="preserve">
          <source>Print extra parentheses. Without this option, B::Deparse includes parentheses in its output only when they are needed, based on the structure of your program. With &lt;b&gt;-p&lt;/b&gt;, it uses parentheses (almost) whenever they would be legal. This can be useful if you are used to LISP, or if you want to see how perl parses your input. If you say</source>
          <target state="translated">余分な括弧を印刷します。このオプションがない場合、B :: Deparseは、プログラムの構造に基づいて、必要な場合にのみ括弧を出力に含めます。&lt;b&gt;-p&lt;/b&gt;彼らは法的だろうたび、それは（ほとんど）括弧を使用しています。これは、LISPに慣れている場合や、perlが入力を解析する方法を確認したい場合に役立ちます。あなたが言うなら</target>
        </trans-unit>
        <trans-unit id="eecde43a81b966938450c674274f53e1895c6cee" translate="yes" xml:space="preserve">
          <source>Print file format.</source>
          <target state="translated">ファイル形式を印刷します。</target>
        </trans-unit>
        <trans-unit id="41aff8bfc8732953f6c1d650b5976c07600e2c8d" translate="yes" xml:space="preserve">
          <source>Print only first N elements ('' for all).</source>
          <target state="translated">最初のN個の要素のみを表示します。</target>
        </trans-unit>
        <trans-unit id="e81e6e379c35f5ba519788d4e4a35fbede771adb" translate="yes" xml:space="preserve">
          <source>Print only first N elements of arrays and hashes. If false, prints all the elements.</source>
          <target state="translated">配列とハッシュの最初のN個の要素のみを表示します。falseの場合、すべての要素を表示します。</target>
        </trans-unit>
        <trans-unit id="bcc4ef2e2a794b82340048b562c03635739b2793" translate="yes" xml:space="preserve">
          <source>Print out the name of each output file as it is being generated.</source>
          <target state="translated">生成中の各出力ファイルの名前を印刷します。</target>
        </trans-unit>
        <trans-unit id="41c304cd9ca96336004e4476cfb242341b0d8cde" translate="yes" xml:space="preserve">
          <source>Print out the value of one or more options.</source>
          <target state="translated">1 つ以上のオプションの値を印刷します。</target>
        </trans-unit>
        <trans-unit id="257476f3c32fde0f5eb65f8b31e1baf775927d37" translate="yes" xml:space="preserve">
          <source>Print out usage information and exit.</source>
          <target state="translated">使用情報を印刷して終了します。</target>
        </trans-unit>
        <trans-unit id="bc9a53e87cca6954b36dc36c0f11d367ea1e424e" translate="yes" xml:space="preserve">
          <source>Print out usage information.</source>
          <target state="translated">利用情報をプリントアウトします。</target>
        </trans-unit>
        <trans-unit id="0177eff9f7a2fbe1e71adee0b082a252a703abf6" translate="yes" xml:space="preserve">
          <source>Print output intended for testing the internals of the compile process</source>
          <target state="translated">コンパイルプロセスの内部をテストするための出力を出力します。</target>
        </trans-unit>
        <trans-unit id="a27774755c3595f027c8eb3223fdb5c93fd4fbff" translate="yes" xml:space="preserve">
          <source>Print progress information while scanning.</source>
          <target state="translated">スキャン中に進捗情報を印刷します。</target>
        </trans-unit>
        <trans-unit id="4d7b123cfe3d2a9315789f430a1f12df5dd6cda9" translate="yes" xml:space="preserve">
          <source>Print return value after &lt;code&gt;r&lt;/code&gt; command if set (default).</source>
          <target state="translated">設定されている場合（デフォルト）、 &lt;code&gt;r&lt;/code&gt; コマンドの後に戻り値を出力します。</target>
        </trans-unit>
        <trans-unit id="7d041699462235ca2a4d570a60c03f171c2124de" translate="yes" xml:space="preserve">
          <source>Print sequence numbers with the least significant digit first. This is obviously mutually exclusive with bigendian.</source>
          <target state="translated">シーケンス番号は、最下位の桁を先に印字します。これはbigendianとは明らかに相互に排他的です。</target>
        </trans-unit>
        <trans-unit id="42046a99717c8fc1f7b5308618430cf23e775de1" translate="yes" xml:space="preserve">
          <source>Print sequence numbers with the most significant digit first. This is the usual convention for Arabic numerals, and the default.</source>
          <target state="translated">シーケンス番号を、最上位の桁を先頭にして印字します。これはアラビア数字の通常の慣習であり、デフォルトです。</target>
        </trans-unit>
        <trans-unit id="c3ded95dcda74015cef369414ceaf1353a3c08bf" translate="yes" xml:space="preserve">
          <source>Print the manual page and exit.</source>
          <target state="translated">マニュアルページを印刷して終了します。</target>
        </trans-unit>
        <trans-unit id="c04feb56f4048c0eacb8d8093530da446e801aa2" translate="yes" xml:space="preserve">
          <source>Print the pathname of each matching file from the archive to STDOUT. Without this option, the default behaviour is to extract each matching file.</source>
          <target state="translated">アーカイブから一致する各ファイルのパス名を STDOUT に出力します。このオプションがない場合のデフォルトの動作は、一致する各ファイルを抽出することです。</target>
        </trans-unit>
        <trans-unit id="0ff2aadc34137d7824ecad18c9a0ec3642d20881" translate="yes" xml:space="preserve">
          <source>Print the script version and CPAN.pm version then exit.</source>
          <target state="translated">スクリプトのバージョンとCPAN.pmのバージョンを印刷して終了します。</target>
        </trans-unit>
        <trans-unit id="dafca06fe55ca5e809a5fcfdbf9c2ee2334e2463" translate="yes" xml:space="preserve">
          <source>Print the usage, help and version for this h2xs and exit.</source>
          <target state="translated">この h2xs の使用法,ヘルプ,バージョンを表示して終了します.</target>
        </trans-unit>
        <trans-unit id="48353b6a506515740ab2f4902262078e0065726e" translate="yes" xml:space="preserve">
          <source>Print the values in</source>
          <target state="translated">の値を印刷します。</target>
        </trans-unit>
        <trans-unit id="cf456c50fd7554fe013a6e25ab9a344d6d5f2f5b" translate="yes" xml:space="preserve">
          <source>Print this command's manual page and exit.</source>
          <target state="translated">このコマンドのマニュアルページを印刷して終了します。</target>
        </trans-unit>
        <trans-unit id="b5abd8dca5d79ec848ccb7806e5cedef648f49fd" translate="yes" xml:space="preserve">
          <source>PrintList</source>
          <target state="translated">PrintList</target>
        </trans-unit>
        <trans-unit id="c161e4f9d513f9dc8591fcb0a239c86a9d1fc520" translate="yes" xml:space="preserve">
          <source>PrintUID</source>
          <target state="translated">PrintUID</target>
        </trans-unit>
        <trans-unit id="ca00d8181f32941120efd18913e9feb042cbbf6c" translate="yes" xml:space="preserve">
          <source>Printing individual test results to STDOUT.</source>
          <target state="translated">個々のテスト結果をSTDOUTに印刷します。</target>
        </trans-unit>
        <trans-unit id="ed2d714a6f330a5a2c0d2c285311e85e596cb81a" translate="yes" xml:space="preserve">
          <source>Printing to a closed pipe or socket will generate a SIGPIPE signal. See &lt;a href=&quot;../perlipc&quot;&gt;perlipc&lt;/a&gt; for more on signal handling.</source>
          <target state="translated">閉じたパイプまたはソケットに出力すると、SIGPIPEシグナルが生成されます。シグナル処理の詳細については、&lt;a href=&quot;../perlipc&quot;&gt;perlipc&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="b7ce5ec55f788bd07557410056fe40271d8ea629" translate="yes" xml:space="preserve">
          <source>Printing to a closed pipe or socket will generate a SIGPIPE signal. See &lt;a href=&quot;perlipc&quot;&gt;perlipc&lt;/a&gt; for more on signal handling.</source>
          <target state="translated">閉じたパイプまたはソケットに出力すると、SIGPIPEシグナルが生成されます。シグナル処理の詳細については、&lt;a href=&quot;perlipc&quot;&gt;perlipc&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="3f0265cab2f9ae79cde71a71556d0e278394eaeb" translate="yes" xml:space="preserve">
          <source>Prints a brief summary of the options.</source>
          <target state="translated">オプションの簡単な概要を印刷します。</target>
        </trans-unit>
        <trans-unit id="5120452ca6dc631595efb8d29461dd946809a41a" translate="yes" xml:space="preserve">
          <source>Prints a diagnostic message which is guaranteed not to interfere with test output. Like &lt;code&gt;&lt;a href=&quot;../functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; @diagnostic_message is simply concatenated together.</source>
          <target state="translated">テスト出力に干渉しないことが保証されている診断メッセージを出力します。 &lt;code&gt;&lt;a href=&quot;../functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; と同様に、@ diagnostic_messageは単に一緒に連結されます。</target>
        </trans-unit>
        <trans-unit id="03cd11288ac7ed7f3e5e779d010326db784840fb" translate="yes" xml:space="preserve">
          <source>Prints a diagnostic message which is guaranteed not to interfere with test output. Like &lt;code&gt;print&lt;/code&gt; @diagnostic_message is simply concatenated together.</source>
          <target state="translated">テスト出力に干渉しないことが保証されている診断メッセージを出力します。同様に &lt;code&gt;print&lt;/code&gt; @diagnostic_message単純に一緒に連結されます。</target>
        </trans-unit>
        <trans-unit id="8c49c244084f74c7a4ade71b1d350fb5c73651b5" translate="yes" xml:space="preserve">
          <source>Prints a dump to the currently selected filehandle.</source>
          <target state="translated">現在選択されているファイルハンドルにダンプを出力します。</target>
        </trans-unit>
        <trans-unit id="33ae188d27fe9ec243158d1e261dc04f6d576630" translate="yes" xml:space="preserve">
          <source>Prints a fragment of POD suitable for appending to perllocal.pod. Arguments are read from @ARGV.</source>
          <target state="translated">perllocal.podに追加するのに適したPODの断片を出力します。引数は @ARGV から読み込まれます。</target>
        </trans-unit>
        <trans-unit id="d418169bc3a4b28200c4744d9dae5cd8e744b200" translate="yes" xml:space="preserve">
          <source>Prints a string or a list of strings. Returns true if successful. FILEHANDLE may be a scalar variable containing the name of or a reference to the filehandle, thus introducing one level of indirection. (NOTE: If FILEHANDLE is a variable and the next token is a term, it may be misinterpreted as an operator unless you interpose a &lt;code&gt;+&lt;/code&gt; or put parentheses around the arguments.) If FILEHANDLE is omitted, prints to the last selected (see &lt;a href=&quot;#select&quot;&gt;select&lt;/a&gt;) output handle. If LIST is omitted, prints &lt;code&gt;$_&lt;/code&gt; to the currently selected output handle. To use FILEHANDLE alone to print the content of &lt;code&gt;$_&lt;/code&gt; to it, you must use a real filehandle like &lt;code&gt;FH&lt;/code&gt; , not an indirect one like &lt;code&gt;$fh&lt;/code&gt; . To set the default output handle to something other than STDOUT, use the select operation.</source>
          <target state="translated">文字列または文字列のリストを出力します。成功した場合はtrueを返します。 FILEHANDLEは、ファイルハンドルの名前または参照を含むスカラー変数であり、1レベルの間接参照を導入します。 （注：FILEHANDLEが変数であり、次のトークンが項である場合、 &lt;code&gt;+&lt;/code&gt; を挿入するか、引数を括弧で囲まない限り、演算子として誤って解釈される可能性があります。）FILEHANDLEを省略すると、最後に選択されたものに出力されます（&lt;a href=&quot;#select&quot;&gt;selectを&lt;/a&gt;参照）。出力ハンドル。 LISTを省略すると、現在選択されている出力ハンドルに &lt;code&gt;$_&lt;/code&gt; を出力します。 FILEHANDLEだけを使用して &lt;code&gt;$_&lt;/code&gt; の内容を出力するには、 &lt;code&gt;$fh&lt;/code&gt; ような間接的なファイルハンドルではなく、 &lt;code&gt;FH&lt;/code&gt; のような実際のファイルハンドルを使用する必要があります。。デフォルトの出力ハンドルをSTDOUT以外に設定するには、select操作を使用します。</target>
        </trans-unit>
        <trans-unit id="491dd59a49ee966b429b0782093194b4cde46c28" translate="yes" xml:space="preserve">
          <source>Prints a string or a list of strings. Returns true if successful. FILEHANDLE may be a scalar variable containing the name of or a reference to the filehandle, thus introducing one level of indirection. (NOTE: If FILEHANDLE is a variable and the next token is a term, it may be misinterpreted as an operator unless you interpose a &lt;code&gt;+&lt;/code&gt; or put parentheses around the arguments.) If FILEHANDLE is omitted, prints to the last selected (see &lt;a href=&quot;#select-FILEHANDLE&quot;&gt;&lt;code&gt;select&lt;/code&gt;&lt;/a&gt;) output handle. If LIST is omitted, prints &lt;a href=&quot;perlvar#%24_&quot;&gt;&lt;code&gt;$_&lt;/code&gt;&lt;/a&gt; to the currently selected output handle. To use FILEHANDLE alone to print the content of &lt;a href=&quot;perlvar#%24_&quot;&gt;&lt;code&gt;$_&lt;/code&gt;&lt;/a&gt; to it, you must use a bareword filehandle like &lt;code&gt;FH&lt;/code&gt;, not an indirect one like &lt;code&gt;$fh&lt;/code&gt;. To set the default output handle to something other than STDOUT, use the select operation.</source>
          <target state="translated">文字列または文字列のリストを出力します。成功した場合はtrueを返します。 FILEHANDLEは、ファイルハンドルの名前または参照を含むスカラー変数である可能性があるため、1レベルの間接参照が導入されます。 （注：FILEHANDLEが変数で、次のトークンが用語の場合、 &lt;code&gt;+&lt;/code&gt; を挿入するか、引数を括弧で囲まない限り、演算子として誤って解釈される可能性があります。）FILEHANDLEを省略すると、最後に選択したものに出力されます（&lt;a href=&quot;#select-FILEHANDLE&quot;&gt; &lt;code&gt;select&lt;/code&gt; を&lt;/a&gt;参照）。出力ハンドル。 LISTを省略すると、現在選択されている出力ハンドルに&lt;a href=&quot;perlvar#%24_&quot;&gt; &lt;code&gt;$_&lt;/code&gt; &lt;/a&gt;が出力されます。 FILEHANDLEを単独で使用して&lt;a href=&quot;perlvar#%24_&quot;&gt; &lt;code&gt;$_&lt;/code&gt; &lt;/a&gt;のコンテンツを出力するには、 &lt;code&gt;$fh&lt;/code&gt; ような間接的なファイルではなく、 &lt;code&gt;FH&lt;/code&gt; のようなベアワードファイルハンドルを使用する必要があります。。デフォルトの出力ハンドルをSTDOUT以外に設定するには、select操作を使用します。</target>
        </trans-unit>
        <trans-unit id="20e173b143e047744531b3fd15b76f4ad914ea5c" translate="yes" xml:space="preserve">
          <source>Prints a string or a list of strings. Returns true if successful. FILEHANDLE may be a scalar variable containing the name of or a reference to the filehandle, thus introducing one level of indirection. (NOTE: If FILEHANDLE is a variable and the next token is a term, it may be misinterpreted as an operator unless you interpose a &lt;code&gt;+&lt;/code&gt; or put parentheses around the arguments.) If FILEHANDLE is omitted, prints to the last selected (see &lt;a href=&quot;select&quot;&gt;select&lt;/a&gt;) output handle. If LIST is omitted, prints &lt;code&gt;$_&lt;/code&gt; to the currently selected output handle. To use FILEHANDLE alone to print the content of &lt;code&gt;$_&lt;/code&gt; to it, you must use a real filehandle like &lt;code&gt;FH&lt;/code&gt; , not an indirect one like &lt;code&gt;$fh&lt;/code&gt; . To set the default output handle to something other than STDOUT, use the select operation.</source>
          <target state="translated">文字列または文字列のリストを出力します。成功した場合はtrueを返します。 FILEHANDLEは、ファイルハンドルの名前または参照を含むスカラー変数であり、1レベルの間接参照を導入します。 （注：FILEHANDLEが変数であり、次のトークンが項である場合、 &lt;code&gt;+&lt;/code&gt; を挿入するか、引数を括弧で囲まない限り、演算子として誤って解釈される可能性があります。）FILEHANDLEを省略すると、最後に選択されたものに出力されます（&lt;a href=&quot;select&quot;&gt;selectを&lt;/a&gt;参照）。出力ハンドル。 LISTを省略すると、現在選択されている出力ハンドルに &lt;code&gt;$_&lt;/code&gt; を出力します。 FILEHANDLEだけを使用して &lt;code&gt;$_&lt;/code&gt; の内容を出力するには、 &lt;code&gt;$fh&lt;/code&gt; ような間接的なファイルハンドルではなく、 &lt;code&gt;FH&lt;/code&gt; のような実際のファイルハンドルを使用する必要があります。。デフォルトの出力ハンドルをSTDOUT以外に設定するには、select操作を使用します。</target>
        </trans-unit>
        <trans-unit id="673f7ed1fcf144a6eba94659c1b8bb4cb6a329f3" translate="yes" xml:space="preserve">
          <source>Prints a string representation of the token. This might not be the exact output, however. Tests will have test numbers added if not present, TODO and SKIP directives will be capitalized and, in general, things will be cleaned up. If you need the original text for the token, see the &lt;code&gt;raw&lt;/code&gt; method.</source>
          <target state="translated">トークンの文字列表現を出力します。ただし、これは正確な出力ではない可能性があります。存在しない場合、テストにはテスト番号が追加され、TODOおよびSKIPディレクティブは大文字になり、一般的にはクリーンアップされます。トークンの元のテキストが必要な場合は、 &lt;code&gt;raw&lt;/code&gt; メソッドを参照してください。</target>
        </trans-unit>
        <trans-unit id="a5419b1162d34c785eeb369d86d716b9bd02ac8d" translate="yes" xml:space="preserve">
          <source>Prints completion list. Defined by</source>
          <target state="translated">補完リストを印刷します。定義されている</target>
        </trans-unit>
        <trans-unit id="934dc976c1f3a281267304f789f524cd21fb3e61" translate="yes" xml:space="preserve">
          <source>Prints out a brief &lt;b&gt;h&lt;/b&gt;elp message.</source>
          <target state="translated">簡単な&lt;b&gt;h&lt;/b&gt; elpメッセージを出力します。</target>
        </trans-unit>
        <trans-unit id="8c3217961ab68f1c8d44e975715650bfda91f224" translate="yes" xml:space="preserve">
          <source>Prints out a brief help message.</source>
          <target state="translated">簡単なヘルプメッセージを印刷します。</target>
        </trans-unit>
        <trans-unit id="63d68ec3ff2a5f8e8482209bf682a1142f623388" translate="yes" xml:space="preserve">
          <source>Prints out a help message for the given debugger command.</source>
          <target state="translated">指定されたデバッガコマンドのヘルプメッセージを出力します。</target>
        </trans-unit>
        <trans-unit id="4570ddcfa99412c204793cd712ce6565f233cdcb" translate="yes" xml:space="preserve">
          <source>Prints out a summary help message</source>
          <target state="translated">要約ヘルプメッセージを印刷する</target>
        </trans-unit>
        <trans-unit id="62c00c799d0422f6ccb3e9e43272184c0326a6ce" translate="yes" xml:space="preserve">
          <source>Prints out macros for lots of constants.</source>
          <target state="translated">たくさんの定数のマクロを印刷します。</target>
        </trans-unit>
        <trans-unit id="35708a04576938ac03483a4b724360182a7d23a6" translate="yes" xml:space="preserve">
          <source>Prints out the given &lt;code&gt;@msgs&lt;/code&gt; . Like &lt;code&gt;&lt;a href=&quot;../functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt;, arguments are simply appended together.</source>
          <target state="translated">指定された &lt;code&gt;@msgs&lt;/code&gt; を出力します。 &lt;code&gt;&lt;a href=&quot;../functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; と同様に、引数は単に一緒に追加されます。</target>
        </trans-unit>
        <trans-unit id="6b0e60b46511b4f4471cee7c42bbf4f7c720de0f" translate="yes" xml:space="preserve">
          <source>Prints out the given &lt;code&gt;@msgs&lt;/code&gt;. Like &lt;code&gt;print&lt;/code&gt;, arguments are simply appended together.</source>
          <target state="translated">指定された &lt;code&gt;@msgs&lt;/code&gt; を出力します。 &lt;code&gt;print&lt;/code&gt; と同様に、引数は単純に一緒に追加されます。</target>
        </trans-unit>
        <trans-unit id="8697e6653e8aef8900cf9e82eba2ff6e2e2ce4de" translate="yes" xml:space="preserve">
          <source>Prints the</source>
          <target state="translated">を印刷します。</target>
        </trans-unit>
        <trans-unit id="aa5bdc16d8c54057921ac95e8b1fdf7e996f4f26" translate="yes" xml:space="preserve">
          <source>Prints the C definition of the argument given.</source>
          <target state="translated">与えられた引数のC定義を出力します。</target>
        </trans-unit>
        <trans-unit id="a403f4f42c33b1f9084f9bd0a79f13a0277056b6" translate="yes" xml:space="preserve">
          <source>Prints the value of LIST to STDERR. If the last element of LIST does not end in a newline, it appends the same file/line number text as &lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; does.</source>
          <target state="translated">LISTの値をSTDERRに出力します。LISTの最後の要素が改行で終わっていない場合、 &lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; と同じファイル/行番号テキストが追加されます。</target>
        </trans-unit>
        <trans-unit id="4c5e1509c949e03f2e16a45151c3707f6e64336d" translate="yes" xml:space="preserve">
          <source>Prints the value of LIST to STDERR. If the last element of LIST does not end in a newline, it appends the same file/line number text as &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; does.</source>
          <target state="translated">LISTの値をSTDERRに出力します。LISTの最後の要素が改行で終わっていない場合、 &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; と同じファイル/行番号テキストが追加されます。</target>
        </trans-unit>
        <trans-unit id="bcbea290fe72663ef6d97c309d0691a702a71daa" translate="yes" xml:space="preserve">
          <source>Prints to STDOUT the value of the named configuration variable(s), with multiples when your &lt;code&gt;&lt;i&gt;configvar&lt;/i&gt;&lt;/code&gt; argument looks like a regex (has non-letters). For example:</source>
          <target state="translated">指定された構成変数の値をSTDOUTに出力します &lt;code&gt;&lt;i&gt;configvar&lt;/i&gt;&lt;/code&gt; 引数が正規表現のように見える場合（文字以外の場合）は倍数になります。例えば：</target>
        </trans-unit>
        <trans-unit id="d654c6a51dac4e65071d9448226908e23e864aba" translate="yes" xml:space="preserve">
          <source>Prints to STDOUT the values of the named configuration variable. Each is printed on a separate line in the form:</source>
          <target state="translated">指定した構成変数の値を STDOUT に出力します。それぞれの値を別の行に表示します。</target>
        </trans-unit>
        <trans-unit id="72c8e6931ee65527396af6285ae19c7b28223d6b" translate="yes" xml:space="preserve">
          <source>Prior authors and maintainers: Tim Bunce, Charles Bailey, and David Landgren &amp;lt;</source>
          <target state="translated">以前の著者およびメンテナ：Tim Bunce、Charles Bailey、およびDavid Landgren &amp;lt;</target>
        </trans-unit>
        <trans-unit id="006ef841b2dbe9474f20b394f899a01b44e0808f" translate="yes" xml:space="preserve">
          <source>Prior to 5.14, there were no explicit modifiers, but &lt;code&gt;/l&lt;/code&gt; was implied for regexes compiled within the scope of &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; , and &lt;code&gt;/d&lt;/code&gt; was implied otherwise. However, interpolating a regex into a larger regex would ignore the original compilation in favor of whatever was in effect at the time of the second compilation. There were a number of inconsistencies (bugs) with the &lt;code&gt;/d&lt;/code&gt; modifier, where Unicode rules would be used when inappropriate, and vice versa. &lt;code&gt;\p{}&lt;/code&gt; did not imply Unicode rules, and neither did all occurrences of &lt;code&gt;\N{}&lt;/code&gt; , until 5.12.</source>
          <target state="translated">5.14前に、明示的な改質なかったが、 &lt;code&gt;/l&lt;/code&gt; はの範囲内でコンパイルされた正規表現のために暗示した &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; 、および &lt;code&gt;/d&lt;/code&gt; 、さもなければ暗示しました。ただし、正規表現をより大きな正規表現に補間すると、2番目のコンパイル時に有効だったものを優先して、元のコンパイルは無視されます。 &lt;code&gt;/d&lt;/code&gt; 修飾子には多くの不整合（バグ）があり、不適切な場合はUnicodeルールが使用され、その逆も同様でした。5.12まで、 &lt;code&gt;\p{}&lt;/code&gt; はUnicodeルールを暗示しておらず、 &lt;code&gt;\N{}&lt;/code&gt; すべての出現もしていませんでした。</target>
        </trans-unit>
        <trans-unit id="588c008b4ed402f510a9601e65d46e3dcaffafc3" translate="yes" xml:space="preserve">
          <source>Prior to 5.14, there were no explicit modifiers, but &lt;code&gt;/l&lt;/code&gt; was implied for regexes compiled within the scope of &lt;code&gt;use locale&lt;/code&gt;, and &lt;code&gt;/d&lt;/code&gt; was implied otherwise. However, interpolating a regex into a larger regex would ignore the original compilation in favor of whatever was in effect at the time of the second compilation. There were a number of inconsistencies (bugs) with the &lt;code&gt;/d&lt;/code&gt; modifier, where Unicode rules would be used when inappropriate, and vice versa. &lt;code&gt;\p{}&lt;/code&gt; did not imply Unicode rules, and neither did all occurrences of &lt;code&gt;\N{}&lt;/code&gt;, until 5.12.</source>
          <target state="translated">5.14前に、明示的な改質なかったが、 &lt;code&gt;/l&lt;/code&gt; はの範囲内でコンパイルされた正規表現のために暗示した &lt;code&gt;use locale&lt;/code&gt; 、および &lt;code&gt;/d&lt;/code&gt; 、さもなければ暗示しました。ただし、正規表現をより大きな正規表現に補間すると、元のコンパイルは無視され、2回目のコンパイル時に有効だったものが優先されます。 &lt;code&gt;/d&lt;/code&gt; 修飾子には多くの不整合（バグ）があり、不適切な場合はUnicodeルールが使用され、その逆も同様でした。 &lt;code&gt;\p{}&lt;/code&gt; はUnicodeルールを意味しませんでしたし、5.12まで &lt;code&gt;\N{}&lt;/code&gt; すべての出現も意味しませんでした。</target>
        </trans-unit>
        <trans-unit id="fe8a0830714e6cb8a879a800eebdc6d82f423871" translate="yes" xml:space="preserve">
          <source>Prior to Encode 1.86 this fails because of &quot;local $_&quot;.</source>
          <target state="translated">Encode 1.86以前では、&quot;local $_&quot;のために失敗します。</target>
        </trans-unit>
        <trans-unit id="237bfe322fa2d5537b0e7ae9cfd030692f2d5ae8" translate="yes" xml:space="preserve">
          <source>Prior to Encode version 1.87</source>
          <target state="translated">エンコードバージョン1.87以前</target>
        </trans-unit>
        <trans-unit id="d393399b163454a92ab92f702710947f99b00d32" translate="yes" xml:space="preserve">
          <source>Prior to Perl 5.14, this wouldn't even compile:</source>
          <target state="translated">Perl 5.14以前では、コンパイルすらできませんでした。</target>
        </trans-unit>
        <trans-unit id="de989d99cd26a240641d2cdc8e03612a0efe21ac" translate="yes" xml:space="preserve">
          <source>Prior to Perl 5.17.6 this function returned a UV, it now returns a string, which may be of nearly any size as determined by the hash function your Perl has been built with. Possible sizes may be but are not limited to 4 bytes (for most hash algorithms) and 16 bytes (for siphash).</source>
          <target state="translated">Perl 5.17.6より前のバージョンでは、この関数はUVを返していましたが、現在は文字列を返します。可能なサイズは4バイト(ほとんどのハッシュアルゴリズムの場合)と16バイト(siphashの場合)ですが、これらに限定されるものではありません。</target>
        </trans-unit>
        <trans-unit id="7c29fb6a57f19dc07c4af7b9c93f10ac571d8e1d" translate="yes" xml:space="preserve">
          <source>Prior to Perl 5.22, lexical &lt;code&gt;&lt;a href=&quot;../functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; subroutines were not deparsed properly. They were emitted as pure declarations, sometimes in the wrong place. Lexical &lt;code&gt;&lt;a href=&quot;../functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; subroutines were not deparsed at all.</source>
          <target state="translated">Perl 5.22より前のバージョンでは、レキシカルな &lt;code&gt;&lt;a href=&quot;../functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; サブルーチンは適切に解析されませんでした。それらは純粋な宣言として、時には間違った場所に放出されました。字句 &lt;code&gt;&lt;a href=&quot;../functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; サブルーチンはまったく解析されませんでした。</target>
        </trans-unit>
        <trans-unit id="1f407d9d16c256267f0f4b13cefdba861dde92a2" translate="yes" xml:space="preserve">
          <source>Prior to Perl 5.25 the value returned was a string consisting of the number of used buckets and the number of allocated buckets, separated by a slash. This is pretty much useful only to find out whether Perl's internal hashing algorithm is performing poorly on your data set. For example, you stick 10,000 things in a hash, but evaluating %HASH in scalar context reveals &lt;code&gt;&quot;1/16&quot;&lt;/code&gt;, which means only one out of sixteen buckets has been touched, and presumably contains all 10,000 of your items. This isn't supposed to happen.</source>
          <target state="translated">Perl 5.25より前のバージョンでは、返される値は、使用されたバケットの数と割り当てられたバケットの数で構成され、スラッシュで区切られた文字列でした。これは、Perlの内部ハッシュアルゴリズムがデータセットでうまく機能していないかどうかを確認する場合にのみ非常に役立ちます。たとえば、ハッシュに10,000個のアイテムを貼り付けますが、スカラーコンテキストで％HASHを評価すると、 &lt;code&gt;&quot;1/16&quot;&lt;/code&gt; が表示されます。これは、16個のバケットのうち1つだけがタッチされ、おそらく10,000個すべてのアイテムが含まれていることを意味します。これは起こるはずではありません。</target>
        </trans-unit>
        <trans-unit id="b1af3ac0b7dd3ea6937b3f41f99a969a19a97647" translate="yes" xml:space="preserve">
          <source>Prior to Perl 5.26, lexical subroutines were deemed experimental and were available only under the &lt;code&gt;use feature 'lexical_subs'&lt;/code&gt; pragma. They also produced a warning unless the &quot;experimental::lexical_subs&quot; warnings category was disabled.</source>
          <target state="translated">Perl 5.26より前は、字句サブルーチンは実験的なものと見なされ、 &lt;code&gt;use feature 'lexical_subs'&lt;/code&gt; プラグマの下でのみ使用可能でした。また、「experimental :: lexical_subs」警告カテゴリが無効にされていない限り、警告が生成されました。</target>
        </trans-unit>
        <trans-unit id="7e2ad77c39c996ef641c23c496462564375d76bc" translate="yes" xml:space="preserve">
          <source>Prior to Perl 5.28, locales could not be used with threads, due to various race conditions. Starting in that release, on systems that implement thread-safe locale functions, threads can be used, with some caveats. This includes Windows starting with Visual Studio 2005, and systems compatible with POSIX 2008. See &lt;a href=&quot;perllocale#Multi-threaded-operation&quot;&gt;&quot;Multi-threaded operation&quot; in perllocale&lt;/a&gt;.</source>
          <target state="translated">Perl 5.28より前は、さまざまな競合状態のため、ロケールをスレッドで使用できませんでした。そのリリース以降、スレッドセーフなロケール関数を実装するシステムでは、いくつかの注意点がありますが、スレッドを使用できます。これには、Visual Studio 2005以降のWindows、および&lt;a href=&quot;perllocale#Multi-threaded-operation&quot;&gt;POSIX2008&lt;/a&gt;と互換性のあるシステムが含まれます。perllocaleの「マルチスレッド操作」を参照してください。</target>
        </trans-unit>
        <trans-unit id="12cec6611f2d0eb1760968632bb5da10da06d2a0" translate="yes" xml:space="preserve">
          <source>Prior to Perl 5.30, it worked only for fixed-width lookbehind, but starting in that release, it can handle variable lengths from 1 to 255 characters as an experimental feature. The feature is enabled automatically if you use a variable length lookbehind assertion, but will raise a warning at pattern compilation time, unless turned off, in the &lt;code&gt;experimental::vlb&lt;/code&gt; category. This is to warn you that the exact behavior is subject to change should feedback from actual use in the field indicate to do so; or even complete removal if the problems found are not practically surmountable. You can achieve close to pre-5.30 behavior by fatalizing warnings in this category.</source>
          <target state="translated">Perl 5.30より前は、固定幅のルックビハインドでのみ機能していましたが、そのリリース以降、実験的な機能として1〜255文字の可変長を処理できます。可変長ルックビハインドアサーションを使用すると、この機能は自動的に有効になりますが、 &lt;code&gt;experimental::vlb&lt;/code&gt; カテゴリでは、オフにしない限り、パターンのコンパイル時に警告が表示されます。これは、現場での実際の使用からのフィードバックがそうすることを示した場合、正確な動作が変更される可能性があることを警告するためです。または、見つかった問題が実際に克服できない場合は、完全に削除することもできます。このカテゴリの警告を致命的にすることで、5.30より前の動作に近づけることができます。</target>
        </trans-unit>
        <trans-unit id="7ac15b68acc965c4200628245ecd910b03ae005b" translate="yes" xml:space="preserve">
          <source>Prior to Perl 5.8, repetitions of templates had to be made by &lt;code&gt;x&lt;/code&gt; -multiplication of template strings. Now there is a better way as we may use the pack codes &lt;code&gt;(&lt;/code&gt; and &lt;code&gt;)&lt;/code&gt; combined with a repeat count. The &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; template from the Stack Frame example can simply be written like this:</source>
          <target state="translated">Perl 5.8より前のバージョンでは、テンプレート文字列の &lt;code&gt;x&lt;/code&gt; 乗算によってテンプレートの繰り返しを行う必要がありました。これで、繰り返しコードと組み合わせてパックコード &lt;code&gt;(&lt;/code&gt; および &lt;code&gt;)&lt;/code&gt; を使用できるため、より良い方法があります。スタックフレームの例の &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; テンプレートは、次のように簡単に記述できます。</target>
        </trans-unit>
        <trans-unit id="dc109700ab62e991deaf92d05b975c4e25f740df" translate="yes" xml:space="preserve">
          <source>Prior to Perl 5.8, repetitions of templates had to be made by &lt;code&gt;x&lt;/code&gt;-multiplication of template strings. Now there is a better way as we may use the pack codes &lt;code&gt;(&lt;/code&gt; and &lt;code&gt;)&lt;/code&gt; combined with a repeat count. The &lt;code&gt;unpack&lt;/code&gt; template from the Stack Frame example can simply be written like this:</source>
          <target state="translated">Perl 5.8より前は、テンプレートの繰り返しは、テンプレート文字列の &lt;code&gt;x&lt;/code&gt; 乗算によって行う必要がありました。パックコード &lt;code&gt;(&lt;/code&gt; および &lt;code&gt;)&lt;/code&gt; を繰り返し回数と組み合わせて使用できるため、より良い方法があります。スタックフレームの例の &lt;code&gt;unpack&lt;/code&gt; テンプレートは、次のように簡単に記述できます。</target>
        </trans-unit>
        <trans-unit id="7c459e52ad4361ad572014fb809fc32c7c7355a6" translate="yes" xml:space="preserve">
          <source>Prior to Perl 5.8.0 it was necessary to do as little as you possibly could in your handler; notice how all we do is set a global variable and then raise an exception. That's because on most systems, libraries are not re-entrant; particularly, memory allocation and I/O routines are not. That meant that doing nearly</source>
          <target state="translated">Perl 5.8.0以前では、ハンドラでできる限りのことをしないことが必要でした。これは、ほとんどのシステムでは、ライブラリはリエントラントではなく、特にメモリ割り当てやI/Oルーチンはリエントラントではないからです。つまり、ほとんどの</target>
        </trans-unit>
        <trans-unit id="edf719ad4c45a8a39497a026af447085a953aba6" translate="yes" xml:space="preserve">
          <source>Prior to Perl v5.10.0, assignment to &lt;code&gt;$[&lt;/code&gt; could be seen from outer lexical scopes in the same file, unlike other compile-time directives (such as &lt;a href=&quot;strict&quot;&gt;strict&lt;/a&gt;). Using local() on it would bind its value strictly to a lexical block. Now it is always lexically scoped.</source>
          <target state="translated">Perl v5.10.0より前では、 &lt;code&gt;$[&lt;/code&gt; への割り当ては、他のコンパイル時ディレクティブ（&lt;a href=&quot;strict&quot;&gt;strict&lt;/a&gt;など）とは異なり、同じファイル内の外側の字句スコープから見ることができました。その上でlocal（）を使用すると、その値が厳密に字句ブロックにバインドされます。現在は常にレキシカルにスコープされています。</target>
        </trans-unit>
        <trans-unit id="1eccc3df24f7326b35822731bb67524c647ac965" translate="yes" xml:space="preserve">
          <source>Prior to Perl v5.18, &lt;code&gt;\s&lt;/code&gt; did not match the vertical tab. &lt;code&gt;[^\S\cK]&lt;/code&gt; (obscurely) matches what &lt;code&gt;\s&lt;/code&gt; traditionally did.</source>
          <target state="translated">Perl v5.18より前では、 &lt;code&gt;\s&lt;/code&gt; は垂直タブと一致しませんでした。 &lt;code&gt;[^\S\cK]&lt;/code&gt; （漠然と）ものと一致 &lt;code&gt;\s&lt;/code&gt; やった伝統。</target>
        </trans-unit>
        <trans-unit id="81458241fb89dacc9cdc0cd507759e6ca279c04d" translate="yes" xml:space="preserve">
          <source>Prior to Perl v5.22</source>
          <target state="translated">Perl v5.22以前のバージョン</target>
        </trans-unit>
        <trans-unit id="9245384eaf07ad72051bb7d5191636af387645e7" translate="yes" xml:space="preserve">
          <source>Prior to Perl v5.24, non-graphical ASCII control characters were also allowed in some situations; this had been deprecated since v5.20.</source>
          <target state="translated">Perl v5.24 より前は、状況によっては非グラフィカルな ASCII 制御文字も許可されていました。</target>
        </trans-unit>
        <trans-unit id="e6e12acf75f0fd6f1c215305ad4143a7eff7a8c7" translate="yes" xml:space="preserve">
          <source>Prior to Perl v5.8.1</source>
          <target state="translated">Perl v5.8.1以前のバージョン</target>
        </trans-unit>
        <trans-unit id="ccdb08dd9c53a9d56313f4f2db92f69844b78387" translate="yes" xml:space="preserve">
          <source>Prior to Perl version 5.10, the result of using an lvalue multiple times was unspecified. Prior to 5.16, the result with negative offsets was unspecified.</source>
          <target state="translated">Perl バージョン 5.10 より前のバージョンでは、lvalue を複数回使用した場合の結果が不定でした。5.16 より前のバージョンでは、負のオフセットを使用した結果は指定されませんでした。</target>
        </trans-unit>
        <trans-unit id="e470e463cc342d2a629f66729264d75f3534eacf" translate="yes" xml:space="preserve">
          <source>Prior to Perl version 5.16, it would create an inverted index of all characters that occurred in the given SCALAR (or &lt;a href=&quot;perlvar#%24_&quot;&gt;&lt;code&gt;$_&lt;/code&gt;&lt;/a&gt; if unspecified). When matching a pattern, the rarest character from the pattern would be looked up in this index. Rarity was based on some static frequency tables constructed from some C programs and English text.</source>
          <target state="translated">Perlバージョン5.16より前では、指定されたSCALAR（または指定されていない場合は&lt;a href=&quot;perlvar#%24_&quot;&gt; &lt;code&gt;$_&lt;/code&gt; &lt;/a&gt;）で発生したすべての文字の転置インデックスが作成されていました。パターンを照合する場合、パターンの中で最も希少な文字がこのインデックスで検索されます。希少性は、いくつかのCプログラムと英語のテキストから構築されたいくつかの静的度数分布表に基づいていました。</target>
        </trans-unit>
        <trans-unit id="0030b6d60b1028edd6febca0979cdab635fcf553" translate="yes" xml:space="preserve">
          <source>Prior to Storable 2.01, no distinction was made between signed and unsigned integers on storing. By default Storable prefers to store a scalars string representation (if it has one) so this would only cause problems when storing large unsigned integers that had never been converted to string or floating point. In other words values that had been generated by integer operations such as logic ops and then not used in any string or arithmetic context before storing.</source>
          <target state="translated">Storable 2.01 より前のバージョンでは、符号付き整数と符号なし整数の保存時の区別はありませんでした。デフォルトでは、Storable はスカラーの文字列表現(もしあれば)を格納することを好みますので、文字列や浮動小数点に変換されていない大きな符号なし整数を格納する場合にのみ問題が発生します。言い換えれば、論理演算などの整数演算によって生成された値で、保存する前に文字列や演算のコンテキストで使用されていないものです。</target>
        </trans-unit>
        <trans-unit id="02a1fc8bf1a7ff0b71b0109895cbd28a2a3ed487" translate="yes" xml:space="preserve">
          <source>Prior to perl 5.6 &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt;&lt;/code&gt; returned copies of the values, so older perl code often contains constructions such as &lt;code&gt;@orbits{&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt; %orbits}&lt;/code&gt; instead of &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt; %orbits&lt;/code&gt; where the hash is to be modified.</source>
          <target state="translated">5.6のperlの前 &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt;&lt;/code&gt; 値のコピーを返したので、古いPerlコードは、多くの場合のような構成含ま &lt;code&gt;@orbits{&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt; %orbits}&lt;/code&gt; 代わりの &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt; %orbits&lt;/code&gt; ハッシュが変更されます。</target>
        </trans-unit>
        <trans-unit id="27415ec6c0a235b091c481972fd5159652ba01e1" translate="yes" xml:space="preserve">
          <source>Prior to perl 5.6 &lt;code&gt;values&lt;/code&gt; returned copies of the values, so older perl code often contains constructions such as &lt;code&gt;@orbits{keys %orbits}&lt;/code&gt; instead of &lt;code&gt;values %orbits&lt;/code&gt; where the hash is to be modified.</source>
          <target state="translated">perl 5.6より前の &lt;code&gt;values&lt;/code&gt; は値のコピーを返していたため、古いperlコードには、ハッシュが変更される &lt;code&gt;values %orbits&lt;/code&gt; 代わりに &lt;code&gt;@orbits{keys %orbits}&lt;/code&gt; などの構造が含まれていることがよくあります。</target>
        </trans-unit>
        <trans-unit id="f11fd4a98a09048dbed1e6ac8b8ef1689e8b33e4" translate="yes" xml:space="preserve">
          <source>Prior to release 5.0 of Perl, a programmer could use dbmopen() to connect an on-disk database in the standard Unix dbm(3x) format magically to a %HASH in their program. However, their Perl was either built with one particular dbm library or another, but not both, and you couldn't extend this mechanism to other packages or types of variables.</source>
          <target state="translated">Perlのリリース5.0以前では、プログラマはdbmopen()を使って、標準のUnix dbm(3x)形式のディスク上のデータベースを、プログラムの中の %HASHに魔法のように接続することができました。しかし、そのPerlは特定のdbmライブラリか別のライブラリで構築されていて、両方ではなく、他のパッケージや変数のタイプにこのメカニズムを拡張することはできませんでした。</target>
        </trans-unit>
        <trans-unit id="70e3fb3fd17c9435bb1df82e7b954798d46dd101" translate="yes" xml:space="preserve">
          <source>Prior to this point, anyone programming in perl who wanted to interact with C programs, like the kernel, was forced to guess the layouts of the C structures, and then hardwire these into his program. Of course, when you took your wonderfully crafted program to a system where the sgtty structure was laid out differently, your program broke. Which is a shame.</source>
          <target state="translated">この時点までは、カーネルのような C プログラムと対話するために perl でプログラミングをする人は誰でも、C の構造体のレイアウトを推測して、それを自分のプログラムにハードワイヤリングしなければなりませんでした。もちろん、その素晴らしいプログラムを sgtty 構造体のレイアウトが異なるシステムに持っていくと、あなたのプログラムは壊れてしまいました。これは残念なことです。</target>
        </trans-unit>
        <trans-unit id="af7e1150dbf03ec2621e5c3e750556f5d9b511aa" translate="yes" xml:space="preserve">
          <source>Prior to v5.14, there were some bugs in &lt;code&gt;\N{...}&lt;/code&gt; with a character name (as opposed to a &lt;code&gt;U+...&lt;/code&gt; code point).</source>
          <target state="translated">v5.14より前のバージョンでは、（ &lt;code&gt;\N{...}&lt;/code&gt; &lt;code&gt;U+...&lt;/code&gt; コードポイントとは対照的に）\ N {...}に文字名のバグがいくつかありました。</target>
        </trans-unit>
        <trans-unit id="d4f4150bc1f255b33ac823d8094c75e885836366" translate="yes" xml:space="preserve">
          <source>Prior to v5.16, using &lt;code&gt;\N{...}&lt;/code&gt; with a character name (as opposed to a &lt;code&gt;U+...&lt;/code&gt; code point) required a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; charnames :full&lt;/code&gt; .</source>
          <target state="translated">v5.16より前のバージョンでは、（ &lt;code&gt;\N{...}&lt;/code&gt; &lt;code&gt;U+...&lt;/code&gt; コードポイントではなく）文字名で\ N {...}を &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; charnames :full&lt;/code&gt; するには、use charnames：fullが必要でした。</target>
        </trans-unit>
        <trans-unit id="c2323d34517a73ba4c0c861171691d8bc71bfefb" translate="yes" xml:space="preserve">
          <source>Prior to v5.16, using &lt;code&gt;\N{...}&lt;/code&gt; with a character name (as opposed to a &lt;code&gt;U+...&lt;/code&gt; code point) required a &lt;code&gt;use charnames :full&lt;/code&gt;.</source>
          <target state="translated">v5.16より前では、（ &lt;code&gt;U+...&lt;/code&gt; コードポイントではなく）文字名で &lt;code&gt;\N{...}&lt;/code&gt; を &lt;code&gt;use charnames :full&lt;/code&gt; 必要がありました。</target>
        </trans-unit>
        <trans-unit id="f638421b1ecb89704c5c15e221dc503e720cbcd9" translate="yes" xml:space="preserve">
          <source>Prior to v5.20, Perl did not support multi-byte locales. Starting then, UTF-8 locales are supported. No other multi byte locales are ever likely to be supported. However, in all locales, one can have code points above 255 and these will always be treated as Unicode no matter what locale is in effect.</source>
          <target state="translated">v5.20以前のPerlはマルチバイトロケールをサポートしていませんでした。それ以降、UTF-8 ロケールがサポートされています。それ以外のマルチバイトロケールはサポートされていません。しかし、すべてのロケールで 255 以上のコードポイントを持つことができ、どのロケールであっても常に Unicode として扱われます。</target>
        </trans-unit>
        <trans-unit id="c2e863acc878c8a62def318f458b49c2252c835f" translate="yes" xml:space="preserve">
          <source>Prior to v5.20, Perl raised a warning and made all matches fail on non-Unicode code points. This could be somewhat surprising:</source>
          <target state="translated">5.20以前では、Perlは警告を発し、非Unicodeコードポイントですべてのマッチが失敗するようにしました。これは多少驚くべきことかもしれません。</target>
        </trans-unit>
        <trans-unit id="63188205d9031db86825c40d25da5b1f4ef4afef" translate="yes" xml:space="preserve">
          <source>Prior to v5.22 only one form of the pragma with arguments is available:</source>
          <target state="translated">v5.22 より前のバージョンでは、引数を持つ pragma の形式は 1 つしかありません。</target>
        </trans-unit>
        <trans-unit id="2bb17f127c6d06738170e861c52ecb4dd3c7bab1" translate="yes" xml:space="preserve">
          <source>Prior to v5.22, you couldn't specify any ranges portably, except (starting in Perl v5.5.3) all subsets of the &lt;code&gt;[A-Z]&lt;/code&gt; and &lt;code&gt;[a-z]&lt;/code&gt; ranges are specially coded to not pick up gap characters. For example, characters such as &quot;&amp;ocirc;&quot; (&lt;code&gt;o WITH CIRCUMFLEX&lt;/code&gt; ) that lie between &quot;I&quot; and &quot;J&quot; would not be matched by the regular expression range &lt;code&gt;/[H-K]/&lt;/code&gt; . But if either of the range end points is explicitly numeric (and neither is specified by &lt;code&gt;\N{U+...}&lt;/code&gt; ), the gap characters are matched:</source>
          <target state="translated">v5.22より前は、移植可能な範囲を指定することはできませんでしたが（Perl v5.5.3以降）、 &lt;code&gt;[A-Z]&lt;/code&gt; と &lt;code&gt;[a-z]&lt;/code&gt; 範囲のすべてのサブセットがギャップ文字を取得しないように特別にコーディングされています。たとえば、「I」と「J」の間にある「&amp;ocirc;」（ &lt;code&gt;o WITH CIRCUMFLEX&lt;/code&gt; ）などの文字は、正規表現の範囲 &lt;code&gt;/[H-K]/&lt;/code&gt; とは一致しません。ただし、範囲の終点のいずれかが明示的に数値である（そしてどちらも &lt;code&gt;\N{U+...}&lt;/code&gt; 指定されていない）場合、ギャップ文字が一致します。</target>
        </trans-unit>
        <trans-unit id="a3fe89c517c16207a4287ca8ad44a06a40ee969f" translate="yes" xml:space="preserve">
          <source>Prior to v5.22, you couldn't specify any ranges portably, except (starting in Perl v5.5.3) all subsets of the &lt;code&gt;[A-Z]&lt;/code&gt; and &lt;code&gt;[a-z]&lt;/code&gt; ranges are specially coded to not pick up gap characters. For example, characters such as &quot;&amp;ocirc;&quot; (&lt;code&gt;o WITH CIRCUMFLEX&lt;/code&gt;) that lie between &quot;I&quot; and &quot;J&quot; would not be matched by the regular expression range &lt;code&gt;/[H-K]/&lt;/code&gt;. But if either of the range end points is explicitly numeric (and neither is specified by &lt;code&gt;\N{U+...}&lt;/code&gt;), the gap characters are matched:</source>
          <target state="translated">v5.22より前は、（Perl v5.5.3以降） &lt;code&gt;[A-Z]&lt;/code&gt; および &lt;code&gt;[a-z]&lt;/code&gt; 範囲のすべてのサブセットがギャップ文字を取得しないように特別にコーディングされていることを除いて、移植可能な範囲を指定できませんでした。たとえば、「I」と「J」の間にある「&amp;ocirc;」（ &lt;code&gt;o WITH CIRCUMFLEX&lt;/code&gt; ）などの文字は、正規表現の範囲 &lt;code&gt;/[H-K]/&lt;/code&gt; と一致しません。ただし、範囲の終点のいずれかが明示的に数値である場合（および、どちらも &lt;code&gt;\N{U+...}&lt;/code&gt; 指定されていない場合）、ギャップ文字は一致します。</target>
        </trans-unit>
        <trans-unit id="8c6a67b224e69bc355ee61cdb60ffe1494025492" translate="yes" xml:space="preserve">
          <source>Prior to version 1.2.0, zlib assumed that there was at least one trailing byte immediately after the compressed data stream when it was carrying out decompression. This normally isn't a problem because the majority of zlib applications guarantee that there will be data directly after the compressed data stream. For example, both gzip (RFC 1950) and zip both define trailing data that follows the compressed data stream.</source>
          <target state="translated">バージョン 1.2.0 より前のバージョンでは、zlib は圧縮データストリームを解凍する際に、圧縮データストリームの直後に少なくとも 1 つの末尾バイトがあると仮定していました。zlib アプリケーションの大部分は、圧縮データストリームの直後にデータがあることを保証しているので、これは通常は問題ではありません。例えば、gzip (RFC 1950)と zip の両方とも、圧縮データストリームの後に続く末尾のデータを定義しています。</target>
        </trans-unit>
        <trans-unit id="8c0ad90bec3127568428d4c04d5d1ea52f6ba12f" translate="yes" xml:space="preserve">
          <source>Priorities</source>
          <target state="translated">Priorities</target>
        </trans-unit>
        <trans-unit id="92e6b3fba0bbad8db67c2af3c57c98bc96a811e3" translate="yes" xml:space="preserve">
          <source>Private Variables via my()</source>
          <target state="translated">my()を介したプライベート変数</target>
        </trans-unit>
        <trans-unit id="05130e33abddf0e65c0e7c60a0ddfd3cb42e8f19" translate="yes" xml:space="preserve">
          <source>Private data fields are stored in the hash-object whose reference is returned by the &lt;b&gt;new()&lt;/b&gt; constructor for this class. The names of all private methods and data-fields used by &lt;b&gt;Pod::Parser&lt;/b&gt; begin with a prefix of &quot;_&quot; and match the regular expression &lt;code&gt;/^_\w+$/&lt;/code&gt; .</source>
          <target state="translated">プライベートデータフィールドは、このクラスの&lt;b&gt;new（）&lt;/b&gt;コンストラクターによって参照が返されるハッシュオブジェクトに格納されます。&lt;b&gt;Pod :: Parserで&lt;/b&gt;使用されるすべてのプライベートメソッドとデータフィールドの名前は、「_」のプレフィックスで始まり、正規表現 &lt;code&gt;/^_\w+$/&lt;/code&gt; と一致します。</target>
        </trans-unit>
        <trans-unit id="65f6f08ed32d7f3e7ae8b96d47bc7edf0dd64925" translate="yes" xml:space="preserve">
          <source>Private data fields are stored in the hash-object whose reference is returned by the &lt;b&gt;new()&lt;/b&gt; constructor for this class. The names of all private methods and data-fields used by &lt;b&gt;Pod::Select&lt;/b&gt; begin with a prefix of &quot;_&quot; and match the regular expression &lt;code&gt;/^_\w+$/&lt;/code&gt; .</source>
          <target state="translated">プライベートデータフィールドは、このクラスの&lt;b&gt;new（）&lt;/b&gt;コンストラクターによって参照が返されるハッシュオブジェクトに格納されます。&lt;b&gt;Pod :: Selectで&lt;/b&gt;使用されるすべてのプライベートメソッドとデータフィールドの名前は、「_」のプレフィックスで始まり、正規表現 &lt;code&gt;/^_\w+$/&lt;/code&gt; と一致します。</target>
        </trans-unit>
        <trans-unit id="20d7d0dbde2c55d3d35a4245cf685ae7921d0a46" translate="yes" xml:space="preserve">
          <source>Private flags, if any are set for an opcode, are displayed after a '/'</source>
          <target state="translated">オプコードにプライベートフラグが設定されている場合は、'/'の後に表示されます。</target>
        </trans-unit>
        <trans-unit id="ba4d99009403ef1e9fa58895f77afbe80e15c049" translate="yes" xml:space="preserve">
          <source>Probably give some hints on using SETERRNO() or pointers to where they can be found.</source>
          <target state="translated">おそらく、SETERRNO()を使用する際のヒントや、それらがどこにあるのかを示すポインタを提供することでしょう。</target>
        </trans-unit>
        <trans-unit id="12ee136d3488f2b13710aaf22abd3d36be8ba625" translate="yes" xml:space="preserve">
          <source>Probably more than X kb, since it will all be read into memory. If this is a problem, and you don't need to do in memory manipulation of the archive, consider using the &lt;code&gt;iter&lt;/code&gt; class method, or &lt;code&gt;/bin/tar&lt;/code&gt; instead.</source>
          <target state="translated">すべてがメモリに読み込まれるため、おそらくX kb以上です。これが問題であり、アーカイブのメモリ操作を行う必要がない場合は、代わりに &lt;code&gt;iter&lt;/code&gt; クラスメソッドまたは &lt;code&gt;/bin/tar&lt;/code&gt; の使用を検討してください。</target>
        </trans-unit>
        <trans-unit id="30d6e13bbb18e72ebcf84bb4444a8e743d2c653b" translate="yes" xml:space="preserve">
          <source>Probably others.</source>
          <target state="translated">おそらく他の人も。</target>
        </trans-unit>
        <trans-unit id="ef365b944e9e18cc80d5e4db09dc683da3e7789a" translate="yes" xml:space="preserve">
          <source>Probably the easiest way to do this is using</source>
          <target state="translated">おそらく最も簡単な方法は</target>
        </trans-unit>
        <trans-unit id="6ba279b033596c1de1e96bda59ebc9b45740b37e" translate="yes" xml:space="preserve">
          <source>Probably you &lt;b&gt;do&lt;/b&gt; have the old version installed. This can happen if a module installs itself into a different directory in the @INC path than it was previously installed. This is not really a CPAN.pm problem, you would have the same problem when installing the module manually. The easiest way to prevent this behaviour is to add the argument &lt;code&gt;UNINST=1&lt;/code&gt; to the &lt;code&gt;make install&lt;/code&gt; call, and that is why many people add this argument permanently by configuring</source>
          <target state="translated">おそらくあなたは&lt;b&gt;やる&lt;/b&gt;古いバージョンがインストールされています。これは、モジュールがそれ自体を以前にインストールされていたものとは異なる@INCパスのディレクトリにインストールする場合に発生する可能性があります。これは実際にはCPAN.pmの問題ではなく、モジュールを手動でインストールするときに同じ問題が発生します。この動作を防ぐ最も簡単な方法は、 &lt;code&gt;make install&lt;/code&gt; 呼び出しに引数 &lt;code&gt;UNINST=1&lt;/code&gt; を追加することです。そのため、多くの人がこの引数を構成して永続的に追加します</target>
        </trans-unit>
        <trans-unit id="5a71c3bb0c835b3979085e9217ce9dcff4431ef5" translate="yes" xml:space="preserve">
          <source>Problematic System Interfaces</source>
          <target state="translated">問題のあるシステムインタフェース</target>
        </trans-unit>
        <trans-unit id="348967ab4ee9f7f83af2fd9006e6f3cb3052fe52" translate="yes" xml:space="preserve">
          <source>Problems can arise if the string expands a scalar containing a floating point number. That scalar can expand to letters, such as &lt;code&gt;&quot;NaN&quot;&lt;/code&gt; or &lt;code&gt;&quot;Infinity&quot;&lt;/code&gt; ; or, within the scope of a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; , the decimal point character may be something other than a dot (such as a comma). None of these are likely to parse as you are likely expecting.</source>
          <target state="translated">文字列が浮動小数点数を含むスカラーを展開する場合、問題が発生する可能性があります。そのスカラーは、 &lt;code&gt;&quot;NaN&quot;&lt;/code&gt; や &lt;code&gt;&quot;Infinity&quot;&lt;/code&gt; などの文字に拡張できます。または、 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; の範囲内で、小数点文字がドット以外のもの（コンマなど）である可能性があります。あなたが期待しているように、これらのどれも解析する可能性はほとんどありません。</target>
        </trans-unit>
        <trans-unit id="4ec141ca9a30659dea063b68fb5a517f3e3d534b" translate="yes" xml:space="preserve">
          <source>Problems can arise if the string expands a scalar containing a floating point number. That scalar can expand to letters, such as &lt;code&gt;&quot;NaN&quot;&lt;/code&gt; or &lt;code&gt;&quot;Infinity&quot;&lt;/code&gt; ; or, within the scope of a &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; , the decimal point character may be something other than a dot (such as a comma). None of these are likely to parse as you are likely expecting.</source>
          <target state="translated">文字列が浮動小数点数を含むスカラーを展開する場合、問題が発生する可能性があります。そのスカラーは、 &lt;code&gt;&quot;NaN&quot;&lt;/code&gt; や &lt;code&gt;&quot;Infinity&quot;&lt;/code&gt; などの文字に拡張できます。または、 &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; の範囲内で、小数点文字がドット以外のもの（コンマなど）である可能性があります。あなたが期待しているように、これらのどれも解析する可能性はほとんどありません。</target>
        </trans-unit>
        <trans-unit id="3102351980b10b862ee6c2c5c5728bd1684d673d" translate="yes" xml:space="preserve">
          <source>Problems can arise if the string expands a scalar containing a floating point number. That scalar can expand to letters, such as &lt;code&gt;&quot;NaN&quot;&lt;/code&gt; or &lt;code&gt;&quot;Infinity&quot;&lt;/code&gt;; or, within the scope of a &lt;a href=&quot;locale&quot;&gt;&lt;code&gt;use locale&lt;/code&gt;&lt;/a&gt;, the decimal point character may be something other than a dot (such as a comma). None of these are likely to parse as you are likely expecting.</source>
          <target state="translated">文字列が浮動小数点数を含むスカラーを展開すると、問題が発生する可能性があります。そのスカラーは、 &lt;code&gt;&quot;NaN&quot;&lt;/code&gt; や &lt;code&gt;&quot;Infinity&quot;&lt;/code&gt; などの文字に展開できます。または、&lt;a href=&quot;locale&quot;&gt; &lt;code&gt;use locale&lt;/code&gt; &lt;/a&gt;範囲内で、小数点文字がドット以外のもの（コンマなど）である場合があります。あなたが期待しているように、これらのどれも解析する可能性はありません。</target>
        </trans-unit>
        <trans-unit id="c1a04b0f8db3bbf9a433e4161d3acc8ec9cc5945" translate="yes" xml:space="preserve">
          <source>Problems of Inside-out</source>
          <target state="translated">インサイドアウトの問題点</target>
        </trans-unit>
        <trans-unit id="1ee1742b87ae33a1c6f39cdefb753ee45be9c395" translate="yes" xml:space="preserve">
          <source>Problems with tr or sed</source>
          <target state="translated">trまたはsedの問題</target>
        </trans-unit>
        <trans-unit id="41c48fd3a204be2beab6bd0e24fdbda408c2ba06" translate="yes" xml:space="preserve">
          <source>Proc::ProcessTable does not compile on Solaris with perl5.6.0 and higher if you have LARGEFILES defined. Since largefile support is the default in 5.6.0 and later, you have to take special steps to use this module.</source>
          <target state="translated">Proc::ProcessTable は、perl5.6.0 以降の Solaris 上で LARGEFILES が定義されている場合はコンパイルできません。5.6.0 以降ではラージファイルのサポートがデフォルトとなっているため、このモジュールを使用するには特別な手順を踏む必要があります。</target>
        </trans-unit>
        <trans-unit id="ac93e65b57a2151f0a952944a98261a5685458fa" translate="yes" xml:space="preserve">
          <source>Proc::ProcessTable on Solaris</source>
          <target state="translated">Solaris上のProc::ProcessTable</target>
        </trans-unit>
        <trans-unit id="63b4e90314d2c42ea7a19c98e41b4f05994ebf0f" translate="yes" xml:space="preserve">
          <source>Procedures for predeclaring the output that your test suite is expected to produce until &lt;code&gt;test_test&lt;/code&gt; is called. These procedures automatically assume that each line terminates with &quot;\n&quot;. So</source>
          <target state="translated">&lt;code&gt;test_test&lt;/code&gt; が呼び出されるまでテストスイートが生成すると予想される出力を事前宣言するための手順。これらの手順では、各行が「\ n」で終了すると自動的に想定しています。そう</target>
        </trans-unit>
        <trans-unit id="84b64dd0d66309028df716ba28b5d47e80552535" translate="yes" xml:space="preserve">
          <source>Proceed as above, but make</source>
          <target state="translated">上記のように進めますが、以下のようにします。</target>
        </trans-unit>
        <trans-unit id="f73b8984cc638c7a7b07ebde54216495fdea38ec" translate="yes" xml:space="preserve">
          <source>Process Overview</source>
          <target state="translated">プロセスの概要</target>
        </trans-unit>
        <trans-unit id="a34f8f33dda092ae3a80919a349d9bc45f76119e" translate="yes" xml:space="preserve">
          <source>Process all typemap files.</source>
          <target state="translated">すべてのタイプマップファイルを処理します。</target>
        </trans-unit>
        <trans-unit id="47792f7246b1ace09a77268265b8c2e729e950de" translate="yes" xml:space="preserve">
          <source>Process and Thread Termination</source>
          <target state="translated">プロセスとスレッドの終了</target>
        </trans-unit>
        <trans-unit id="90d477e2d9ac85e239d0759d291d0532a8b57032" translate="yes" xml:space="preserve">
          <source>Process single-character switches with switch clustering</source>
          <target state="translated">スイッチクラスタリングによる1文字スイッチの処理</target>
        </trans-unit>
        <trans-unit id="edddff217ecf6de25ccb77ae9517c586b551c97d" translate="yes" xml:space="preserve">
          <source>Process terminated by SIG%s</source>
          <target state="translated">SIG%sによってプロセスが終了しました。</target>
        </trans-unit>
        <trans-unit id="b39468139e121ee8dbac83faf4147e3971261d01" translate="yes" xml:space="preserve">
          <source>Process terminated by SIGTERM/SIGINT</source>
          <target state="translated">SIGTERM/SIGINTでプロセス終了</target>
        </trans-unit>
        <trans-unit id="34ae1c3ba08c93d4aa84d88b30e7ce92a5bf6618" translate="yes" xml:space="preserve">
          <source>Process the contents of $_ to change the source code in the desired manner.</source>
          <target state="translated">の内容を処理して、任意の方法でソースコードを変更します。</target>
        </trans-unit>
        <trans-unit id="a71e516dfb64d613336cd8c83af6bfd904864ee0" translate="yes" xml:space="preserve">
          <source>Process-scope Changes</source>
          <target state="translated">プロセススコープの変更</target>
        </trans-unit>
        <trans-unit id="4a52ce9e460a5f71bed1414f20a7fe6e02ca3cb9" translate="yes" xml:space="preserve">
          <source>ProcessRead</source>
          <target state="translated">ProcessRead</target>
        </trans-unit>
        <trans-unit id="240d22a1e0317130f09d247d6dde37168740bd36" translate="yes" xml:space="preserve">
          <source>Processes its arguments like &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt; and appends the formatted output to an SV. If the appended data contains &quot;wide&quot; characters (including, but not limited to, SVs with a UTF-8 PV formatted with %s, and characters &amp;gt;255 formatted with %c), the original SV might get upgraded to UTF-8. Handles 'get' magic, but not 'set' magic. See &lt;code&gt;sv_catpvf_mg&lt;/code&gt; . If the original SV was UTF-8, the pattern should be valid UTF-8; if the original SV was bytes, the pattern should be too.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt; のように引数を処理し、フォーマットされた出力をSVに追加します。付加されたデータに「ワイド」文字（％sでフォーマットされたUTF-8 PVのSV、および％cでフォーマットされた255を超える文字を含むがこれらに限定されない）が含まれている場合、元のSVはUTF-8にアップグレードされる可能性があります。「取得」マジックは処理しますが、「設定」マジックは処理しません。 &lt;code&gt;sv_catpvf_mg&lt;/code&gt; を参照してください。元のSVがUTF-8の場合、パターンは有効なUTF-8である必要があります。元のSVがバイトの場合、パターンもそうである必要があります。</target>
        </trans-unit>
        <trans-unit id="23662f68735475da5113586624f91c0fea2dcaa9" translate="yes" xml:space="preserve">
          <source>Processes its arguments like &lt;code&gt;sprintf&lt;/code&gt;, and appends the formatted output to an SV. As with &lt;code&gt;sv_vcatpvfn&lt;/code&gt; called with a non-null C-style variable argument list, argument reordering is not supported. If the appended data contains &quot;wide&quot; characters (including, but not limited to, SVs with a UTF-8 PV formatted with &lt;code&gt;%s&lt;/code&gt;, and characters &amp;gt;255 formatted with &lt;code&gt;%c&lt;/code&gt;), the original SV might get upgraded to UTF-8. Handles 'get' magic, but not 'set' magic. See &lt;code&gt;&lt;a href=&quot;#sv_catpvf_mg&quot;&gt;&quot;sv_catpvf_mg&quot;&lt;/a&gt;&lt;/code&gt;. If the original SV was UTF-8, the pattern should be valid UTF-8; if the original SV was bytes, the pattern should be too.</source>
          <target state="translated">&lt;code&gt;sprintf&lt;/code&gt; のように引数を処理し、フォーマットされた出力をSVに追加します。null以外のCスタイルの変数引数リストで呼び出された &lt;code&gt;sv_vcatpvfn&lt;/code&gt; と同様に、引数の並べ替えはサポートされていません。追加されたデータに「ワイド」文字（ &lt;code&gt;%s&lt;/code&gt; でフォーマットされたUTF-8 PVのSV 、および &lt;code&gt;%c&lt;/code&gt; でフォーマットされた&amp;gt; 255の文字を含むがこれらに限定されない）が含まれている場合、元のSVがUTF-8にアップグレードされる可能性があります。 'get'マジックを処理しますが、 'set'マジックは処理しません。 &lt;code&gt;&lt;a href=&quot;#sv_catpvf_mg&quot;&gt;&quot;sv_catpvf_mg&quot;&lt;/a&gt;&lt;/code&gt; 参照してください。元のSVがUTF-8の場合、パターンは有効なUTF-8である必要があります。元のSVがバイトの場合、パターンもバイトである必要があります。</target>
        </trans-unit>
        <trans-unit id="01931ddfd4b729796da2e24bc9df900b32a1dc0b" translate="yes" xml:space="preserve">
          <source>Processes its arguments like &lt;code&gt;sv_vcatpvfn&lt;/code&gt; called with a non-null C-style variable argument list, and appends the formatted output to an SV. Does not handle 'set' magic. See &lt;code&gt;&lt;a href=&quot;#sv_vcatpvf_mg&quot;&gt;&quot;sv_vcatpvf_mg&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">null以外のCスタイルの変数引数リストで呼び出された &lt;code&gt;sv_vcatpvfn&lt;/code&gt; のように引数を処理し、フォーマットされた出力をSVに追加します。'set'マジックを処理しません。 &lt;code&gt;&lt;a href=&quot;#sv_vcatpvf_mg&quot;&gt;&quot;sv_vcatpvf_mg&quot;&lt;/a&gt;&lt;/code&gt; 参照してください。</target>
        </trans-unit>
        <trans-unit id="d3aea4467da0c26ebde0ed6297ea1903606fe244" translate="yes" xml:space="preserve">
          <source>Processes its arguments like &lt;code&gt;vsprintf&lt;/code&gt; and appends the formatted output to an SV. Does not handle 'set' magic. See &lt;code&gt;sv_vcatpvf_mg&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;vsprintf&lt;/code&gt; のような引数を処理し、フォーマットされた出力をSVに追加します。「セット」マジックを処理しません。 &lt;code&gt;sv_vcatpvf_mg&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="b934966b79098add3be2cc4a61803362f68203fb" translate="yes" xml:space="preserve">
          <source>Processes its arguments like &lt;code&gt;vsprintf&lt;/code&gt; and appends the formatted output to an SV. Uses an array of SVs if the C style variable argument list is missing (NULL). When running with taint checks enabled, indicates via &lt;code&gt;maybe_tainted&lt;/code&gt; if results are untrustworthy (often due to the use of locales).</source>
          <target state="translated">&lt;code&gt;vsprintf&lt;/code&gt; のような引数を処理し、フォーマットされた出力をSVに追加します。Cスタイルの変数引数リストがない場合（NULL）、SVの配列を使用します。汚染チェックを有効にして実行している場合、結果が信頼できない場合（ロケールの使用が原因であることが多い）は、 &lt;code&gt;maybe_tainted&lt;/code&gt; を介して示します。</target>
        </trans-unit>
        <trans-unit id="ac841b3134897ec43af721ef9f097de135a438bf" translate="yes" xml:space="preserve">
          <source>Processes its arguments like &lt;code&gt;vsprintf&lt;/code&gt; and appends the formatted output to an SV. Uses an array of SVs if the C-style variable argument list is missing (&lt;code&gt;NULL&lt;/code&gt;). Argument reordering (using format specifiers like &lt;code&gt;%2$d&lt;/code&gt; or &lt;code&gt;%*2$d&lt;/code&gt;) is supported only when using an array of SVs; using a C-style &lt;code&gt;va_list&lt;/code&gt; argument list with a format string that uses argument reordering will yield an exception.</source>
          <target state="translated">&lt;code&gt;vsprintf&lt;/code&gt; のように引数を処理し、フォーマットされた出力をSVに追加します。Cスタイルの変数引数リストが欠落している（ &lt;code&gt;NULL&lt;/code&gt; ）場合は、SVの配列を使用します。引数の並べ替え（ &lt;code&gt;%2$d&lt;/code&gt; や &lt;code&gt;%*2$d&lt;/code&gt; などの形式指定子を使用）は、SVの配列を使用する場合にのみサポートされます。引数の並べ替えを使用するフォーマット文字列でCスタイルの &lt;code&gt;va_list&lt;/code&gt; 引数リストを使用すると、例外が発生します。</target>
        </trans-unit>
        <trans-unit id="bb363ec474bd3cedd7705c77914ee3e53e091efe" translate="yes" xml:space="preserve">
          <source>Processes the command-line arguments. Attributes will be set appropriately. Any filenames may be found in the &lt;code&gt;argv&lt;/code&gt; attribute.</source>
          <target state="translated">コマンドライン引数を処理します。属性は適切に設定されます。ファイル名は &lt;code&gt;argv&lt;/code&gt; 属性にあります。</target>
        </trans-unit>
        <trans-unit id="9d23d0424e350de40557cd93a40bb9447e7fcf75" translate="yes" xml:space="preserve">
          <source>Processing Instructions</source>
          <target state="translated">処理手順</target>
        </trans-unit>
        <trans-unit id="a484cb249da1c2816261c338e54ea2ce100a8ffc" translate="yes" xml:space="preserve">
          <source>Processing happens as you knew before. The only difference is that you're now using characters instead of bytes. That's very useful if you use things like &lt;code&gt;&lt;a href=&quot;functions/substr&quot;&gt;substr&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;functions/length&quot;&gt;length&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">以前に知っていたとおりに処理が行われます。唯一の違いは、バイトではなく文字を使用していることです。これは、 &lt;code&gt;&lt;a href=&quot;functions/substr&quot;&gt;substr&lt;/a&gt;&lt;/code&gt; や &lt;code&gt;&lt;a href=&quot;functions/length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; などを使用する場合に非常に役立ちます。</target>
        </trans-unit>
        <trans-unit id="7bdd0ee6438a8a6357f1577d9d672947282674ef" translate="yes" xml:space="preserve">
          <source>Processing happens as you knew before. The only difference is that you're now using characters instead of bytes. That's very useful if you use things like &lt;code&gt;substr&lt;/code&gt;, or &lt;code&gt;length&lt;/code&gt;.</source>
          <target state="translated">あなたが前に知っていたように処理が起こります。唯一の違いは、バイトの代わりに文字を使用していることです。これは、 &lt;code&gt;substr&lt;/code&gt; や &lt;code&gt;length&lt;/code&gt; などを使用する場合に非常に便利です。</target>
        </trans-unit>
        <trans-unit id="e35fdd40c3c7fa05c06908e4bbcefbbe3e8decea" translate="yes" xml:space="preserve">
          <source>Processing instructions for the &lt;code&gt;make install&lt;/code&gt; or &lt;code&gt;./Build install&lt;/code&gt; phase of the CPAN mantra. See below under</source>
          <target state="translated">CPANマントラの &lt;code&gt;make install&lt;/code&gt; または &lt;code&gt;./Build install&lt;/code&gt; フェーズの処理手順。以下を参照してください</target>
        </trans-unit>
        <trans-unit id="d84fcba7e4f4817ac9bf39f97fede8c0cf9aa1e1" translate="yes" xml:space="preserve">
          <source>Processing instructions for the &lt;code&gt;make test&lt;/code&gt; or &lt;code&gt;./Build test&lt;/code&gt; phase of the CPAN mantra. See below under</source>
          <target state="translated">CPANマントラの &lt;code&gt;make test&lt;/code&gt; または &lt;code&gt;./Build test&lt;/code&gt; フェーズの処理手順。以下を参照してください</target>
        </trans-unit>
        <trans-unit id="3f32cc81d0fe50f4c815d67016fd04f778345399" translate="yes" xml:space="preserve">
          <source>Processing instructions for the &lt;code&gt;make&lt;/code&gt; or &lt;code&gt;./Build&lt;/code&gt; phase of the CPAN mantra. See below under</source>
          <target state="translated">CPANマントラの &lt;code&gt;make&lt;/code&gt; または &lt;code&gt;./Build&lt;/code&gt; フェーズの処理手順。以下を参照してください</target>
        </trans-unit>
        <trans-unit id="7e35c32fdad63551c269470f250e4811969ec218" translate="yes" xml:space="preserve">
          <source>Processing instructions for the &lt;code&gt;perl Makefile.PL&lt;/code&gt; or &lt;code&gt;perl
Build.PL&lt;/code&gt; phase of the CPAN mantra. See below under</source>
          <target state="translated">CPANマントラの &lt;code&gt;perl Makefile.PL&lt;/code&gt; または &lt;code&gt;perl Build.PL&lt;/code&gt; フェーズの処理手順。以下を参照してください</target>
        </trans-unit>
        <trans-unit id="982ed577a21afe646e18a3d92db26aa87fed151a" translate="yes" xml:space="preserve">
          <source>Processing of &lt;code&gt;\N{...}&lt;/code&gt; is also done here, and compiled into an intermediate form for the regex compiler. (This is because, as mentioned below, the regex compilation may be done at execution time, and &lt;code&gt;\N{...}&lt;/code&gt; is a compile-time construct.)</source>
          <target state="translated">&lt;code&gt;\N{...}&lt;/code&gt; 処理もここで行われ、正規表現コンパイラの中間形式にコンパイルされます。（これは、以下で説明するように、正規表現のコンパイルは実行時に行われる可能性があり、 &lt;code&gt;\N{...}&lt;/code&gt; はコンパイル時の構成であるためです。）</target>
        </trans-unit>
        <trans-unit id="9701fd573d77167447621582e9abdf1f86b28f3a" translate="yes" xml:space="preserve">
          <source>Processing of &lt;code&gt;\Q&lt;/code&gt; , &lt;code&gt;\U&lt;/code&gt; , &lt;code&gt;\u&lt;/code&gt; , &lt;code&gt;\L&lt;/code&gt; , &lt;code&gt;\l&lt;/code&gt; , &lt;code&gt;\F&lt;/code&gt; , &lt;code&gt;\E&lt;/code&gt; , and interpolation happens (almost) as with &lt;code&gt;&lt;a href=&quot;functions/qq&quot;&gt;qq//&lt;/a&gt;&lt;/code&gt; constructs.</source>
          <target state="translated">処理 &lt;code&gt;\Q&lt;/code&gt; 、 &lt;code&gt;\U&lt;/code&gt; 、 &lt;code&gt;\u&lt;/code&gt; 、 &lt;code&gt;\L&lt;/code&gt; 、 &lt;code&gt;\l&lt;/code&gt; 、 &lt;code&gt;\F&lt;/code&gt; 、 &lt;code&gt;\E&lt;/code&gt; 、及び補間は（ほとんど）と同様に発生し &lt;code&gt;&lt;a href=&quot;functions/qq&quot;&gt;qq//&lt;/a&gt;&lt;/code&gt; 構築物。</target>
        </trans-unit>
        <trans-unit id="f3b65d43b20d5c0bdaa8f1c4df2161e776bf0d1d" translate="yes" xml:space="preserve">
          <source>Processing of &lt;code&gt;\Q&lt;/code&gt; , &lt;code&gt;\U&lt;/code&gt; , &lt;code&gt;\u&lt;/code&gt; , &lt;code&gt;\L&lt;/code&gt; , &lt;code&gt;\l&lt;/code&gt; , &lt;code&gt;\F&lt;/code&gt; and interpolation happens as with &lt;code&gt;&lt;a href=&quot;functions/qq&quot;&gt;qq//&lt;/a&gt;&lt;/code&gt; constructs.</source>
          <target state="translated">処理 &lt;code&gt;\Q&lt;/code&gt; 、 &lt;code&gt;\U&lt;/code&gt; 、 &lt;code&gt;\u&lt;/code&gt; 、 &lt;code&gt;\L&lt;/code&gt; 、 &lt;code&gt;\l&lt;/code&gt; 、 &lt;code&gt;\F&lt;/code&gt; 補間が持つよう起こる &lt;code&gt;&lt;a href=&quot;functions/qq&quot;&gt;qq//&lt;/a&gt;&lt;/code&gt; 構築します。</target>
        </trans-unit>
        <trans-unit id="6cc73b71907d527c2dfca92f0e73de3f2e06b2f2" translate="yes" xml:space="preserve">
          <source>Processing of &lt;code&gt;\Q&lt;/code&gt;, &lt;code&gt;\U&lt;/code&gt;, &lt;code&gt;\u&lt;/code&gt;, &lt;code&gt;\L&lt;/code&gt;, &lt;code&gt;\l&lt;/code&gt;, &lt;code&gt;\F&lt;/code&gt; and interpolation happens as with &lt;code&gt;qq//&lt;/code&gt; constructs.</source>
          <target state="translated">処理 &lt;code&gt;\Q&lt;/code&gt; 、 &lt;code&gt;\U&lt;/code&gt; 、 &lt;code&gt;\u&lt;/code&gt; 、 &lt;code&gt;\L&lt;/code&gt; 、 &lt;code&gt;\l&lt;/code&gt; 、 &lt;code&gt;\F&lt;/code&gt; 補間が持つよう起こる &lt;code&gt;qq//&lt;/code&gt; 構築します。</target>
        </trans-unit>
        <trans-unit id="92d62c63f312dfd45bc98d136f45152a41490d77" translate="yes" xml:space="preserve">
          <source>Processing of &lt;code&gt;\Q&lt;/code&gt;, &lt;code&gt;\U&lt;/code&gt;, &lt;code&gt;\u&lt;/code&gt;, &lt;code&gt;\L&lt;/code&gt;, &lt;code&gt;\l&lt;/code&gt;, &lt;code&gt;\F&lt;/code&gt;, &lt;code&gt;\E&lt;/code&gt;, and interpolation happens (almost) as with &lt;code&gt;qq//&lt;/code&gt; constructs.</source>
          <target state="translated">処理 &lt;code&gt;\Q&lt;/code&gt; 、 &lt;code&gt;\U&lt;/code&gt; 、 &lt;code&gt;\u&lt;/code&gt; 、 &lt;code&gt;\L&lt;/code&gt; 、 &lt;code&gt;\l&lt;/code&gt; 、 &lt;code&gt;\F&lt;/code&gt; 、 &lt;code&gt;\E&lt;/code&gt; 、及び補間は（ほとんど）と同様に発生し &lt;code&gt;qq//&lt;/code&gt; 構築物。</target>
        </trans-unit>
        <trans-unit id="249779be2efde8096efc39f80bde3efa59185ef3" translate="yes" xml:space="preserve">
          <source>Processing the results requires an additional if statement to determine whether &lt;code&gt;$1&lt;/code&gt; and &lt;code&gt;$2&lt;/code&gt; or &lt;code&gt;$3&lt;/code&gt; and &lt;code&gt;$4&lt;/code&gt; contain the goodies. It would be easier if we could use group numbers 1 and 2 in second alternative as well, and this is exactly what the parenthesized construct &lt;code&gt;(?|...)&lt;/code&gt;, set around an alternative achieves. Here is an extended version of the previous pattern:</source>
          <target state="translated">結果を処理するには、 &lt;code&gt;$1&lt;/code&gt; と &lt;code&gt;$2&lt;/code&gt; または &lt;code&gt;$3&lt;/code&gt; と &lt;code&gt;$4&lt;/code&gt; にグッズが含まれているかどうかを判別するための追加のifステートメントが必要です。2番目の代替案でもグループ番号1と2を使用できれば簡単です。これは、代替案の周りに設定された括弧で囲まれた構成 &lt;code&gt;(?|...)&lt;/code&gt; が実現するものとまったく同じです。以下は、前のパターンの拡張バージョンです。</target>
        </trans-unit>
        <trans-unit id="f731f0c07372a44a4d37163f47e58a415c7cf5aa" translate="yes" xml:space="preserve">
          <source>Processors must tolerate an &quot;=over&quot; list that goes off the end of the document (i.e., which has no matching &quot;=back&quot;), but they may warn about such a list.</source>
          <target state="translated">プロセッサは、文書の最後から外れた&quot;=over &quot;リスト(すなわち、一致する&quot;=back &quot;を持たないリスト)を許容しなければなりませんが、そのようなリストについて警告してもよいでしょう。</target>
        </trans-unit>
        <trans-unit id="c9b30fe5cb91e5eed87e9d843db39321e5abdf6e" translate="yes" xml:space="preserve">
          <source>Produce a stack backtrace. See below for details on its output.</source>
          <target state="translated">スタックバックトレースを生成します。出力の詳細は以下を参照してください。</target>
        </trans-unit>
        <trans-unit id="1fcd96a29aa9d63a86baddb590cd1dbc2c17f264" translate="yes" xml:space="preserve">
          <source>Produce verbose warning diagnostics</source>
          <target state="translated">冗長な警告診断を作成</target>
        </trans-unit>
        <trans-unit id="885e6634dfdf76b23b3008b70350d732f99c44ca" translate="yes" xml:space="preserve">
          <source>Producers &lt;b&gt;must&lt;/b&gt; represent List elements using a data structure which unambiguously indicates that multiple values are possible, such as a reference to a Perl array (an &quot;arrayref&quot;).</source>
          <target state="translated">プロデューサー&lt;b&gt;は&lt;/b&gt;、Perl配列（「arrayref」）への参照など、複数の値が可能であることを明確に示すデータ構造を使用してList要素を表す&lt;b&gt;必要があり&lt;/b&gt;ます。</target>
        </trans-unit>
        <trans-unit id="a0d69f82309415639ffb57c2ec15ca60dd4c64a0" translate="yes" xml:space="preserve">
          <source>Produces a fatal error if none of the three system calls (or their close equivalent) exists.</source>
          <target state="translated">3つのシステムコール(またはそれに近いもの)が存在しない場合、致命的なエラーを生成します。</target>
        </trans-unit>
        <trans-unit id="960e8fddc698625d55770887235e931f448d8d54" translate="yes" xml:space="preserve">
          <source>Produces:</source>
          <target state="translated">Produces:</target>
        </trans-unit>
        <trans-unit id="57a4526fef0406f35082a88c139fcb71d96c48a2" translate="yes" xml:space="preserve">
          <source>Product of</source>
          <target state="translated">製品</target>
        </trans-unit>
        <trans-unit id="d2c5a65aa3f7da56d70c850969cccfb97654f7df" translate="yes" xml:space="preserve">
          <source>Production release currently maintained by demerphq &lt;code&gt;yves at cpan.org&lt;/code&gt; , extensive changes by Michael G. Schwern.</source>
          <target state="translated">現在cpan.orgのdemerphq &lt;code&gt;yves at cpan.org&lt;/code&gt; によって保守されている製品リリース、Michael G. Schwernによる大幅な変更。</target>
        </trans-unit>
        <trans-unit id="bc4981860dba0636a083781c4536c60582c9a676" translate="yes" xml:space="preserve">
          <source>Production release currently maintained by demerphq &lt;code&gt;yves at cpan.org&lt;/code&gt;, extensive changes by Michael G. Schwern.</source>
          <target state="translated">現在cpan.orgの &lt;code&gt;yves at cpan.org&lt;/code&gt; によって保守されている製品リリース、Michael G.Schwernによる大幅な変更。</target>
        </trans-unit>
        <trans-unit id="1cefe3ad2f8771b28878e24ac772a9d128c62146" translate="yes" xml:space="preserve">
          <source>Production releases, which incorporate bug fixes and new functionality, are widely tested before release. Since the 5.000 release, we have averaged about one production release per year.</source>
          <target state="translated">バグ修正や新機能を盛り込んだプロダクションリリースは、リリース前に広くテストを行います。5.000リリース以降、年に平均して約1回のプロダクションリリースを行っています。</target>
        </trans-unit>
        <trans-unit id="9d68007b0763cb230f9034ec96f52b39d03ad630" translate="yes" xml:space="preserve">
          <source>Program</source>
          <target state="translated">Program</target>
        </trans-unit>
        <trans-unit id="65ccba4e4ffe9da4f39f93b79f123aa04ad91a10" translate="yes" xml:space="preserve">
          <source>Program execution</source>
          <target state="translated">プログラムの実行</target>
        </trans-unit>
        <trans-unit id="79c8be0b38e38e993898785621a849587d1fc42e" translate="yes" xml:space="preserve">
          <source>Program to be used to link libraries for dynamic loading.</source>
          <target state="translated">動的読み込みのためのライブラリをリンクするために使用されるプログラム。</target>
        </trans-unit>
        <trans-unit id="233673261953f1117d42d3b993fa5631e1d0f562" translate="yes" xml:space="preserve">
          <source>Program to use for output of pager-piped commands (those beginning with a &lt;code&gt;|&lt;/code&gt; character.) By default, &lt;code&gt;$ENV{PAGER}&lt;/code&gt; will be used. Because the debugger uses your current terminal characteristics for bold and underlining, if the chosen pager does not pass escape sequences through unchanged, the output of some debugger commands will not be readable when sent through the pager.</source>
          <target state="translated">ページャパイプコマンド（ &lt;code&gt;|&lt;/code&gt; 文字で始まるコマンド）の出力に使用するプログラム。デフォルトでは、 &lt;code&gt;$ENV{PAGER}&lt;/code&gt; が使用されます。デバッガーは太字と下線に現在の端末特性を使用するため、選択したページャーがエスケープシーケンスを変更せずに渡さない場合、一部のデバッガーコマンドの出力は、ページャーを介して送信されたときに読み取ることができません。</target>
        </trans-unit>
        <trans-unit id="40b1cd2c8806121a043ddcb019b6399f2dbb4760" translate="yes" xml:space="preserve">
          <source>Programmatic interface to the Perl debugging API</source>
          <target state="translated">Perl デバッグ API へのプログラム的なインターフェース</target>
        </trans-unit>
        <trans-unit id="c46a33d512eba5fc7b09e8bb4cc095b44ccd9143" translate="yes" xml:space="preserve">
          <source>Programmer-visible &amp;ldquo;characters&amp;rdquo; are codepoints matched by &lt;code&gt;/./s&lt;/code&gt; , but user-visible &amp;ldquo;characters&amp;rdquo; are graphemes matched by &lt;code&gt;/\X/&lt;/code&gt; .</source>
          <target state="translated">プログラマーに見える「文字」は &lt;code&gt;/./s&lt;/code&gt; に一致するコードポイントですが、ユーザーに見える「文字」は &lt;code&gt;/\X/&lt;/code&gt; 一致する書記素です。</target>
        </trans-unit>
        <trans-unit id="92c855c41d8c4d8cde9ba75dda5916e3cc905501" translate="yes" xml:space="preserve">
          <source>Programmer-visible &amp;ldquo;characters&amp;rdquo; are codepoints matched by &lt;code&gt;/./s&lt;/code&gt;, but user-visible &amp;ldquo;characters&amp;rdquo; are graphemes matched by &lt;code&gt;/\X/&lt;/code&gt;.</source>
          <target state="translated">プログラマーに表示される「文字」は &lt;code&gt;/./s&lt;/code&gt; で一致するコードポイントですが、ユーザーに表示される「文字」は &lt;code&gt;/\X/&lt;/code&gt; 一致する書記素です。</target>
        </trans-unit>
        <trans-unit id="61186809fe35fc2beb15a77ffe790f6807eabf80" translate="yes" xml:space="preserve">
          <source>Programmers may also query the contained hash structure to find relevant information.</source>
          <target state="translated">プログラマは、関連する情報を見つけるために、含まれているハッシュ構造を問い合わせることもできます。</target>
        </trans-unit>
        <trans-unit id="628a516a46522c1225b06e7fba43671a6cfca7d6" translate="yes" xml:space="preserve">
          <source>Programmers may also query the contained hash structures to find relevant information.</source>
          <target state="translated">プログラマは、関連する情報を見つけるために、含まれているハッシュ構造を照会することもできます。</target>
        </trans-unit>
        <trans-unit id="0532c68f18f669ed265f17fe1e4391db0103bc4d" translate="yes" xml:space="preserve">
          <source>Programming Pearls</source>
          <target state="translated">プログラミング真珠</target>
        </trans-unit>
        <trans-unit id="6697d919aaf0bdf3780f2bf11d8a61971ea23fa6" translate="yes" xml:space="preserve">
          <source>Programming Perl</source>
          <target state="translated">プログラミングPerl</target>
        </trans-unit>
        <trans-unit id="b48776dde59ef3c5ba05ff183db655823f962577" translate="yes" xml:space="preserve">
          <source>Programming Perl, 3rd ed.</source>
          <target state="translated">プログラミングPerl第3版</target>
        </trans-unit>
        <trans-unit id="801c545dc4e30e8510acc915d178507c634db27c" translate="yes" xml:space="preserve">
          <source>Programming in which the orderly sequence of events can be determined; that is, when things happen one after the other, not at the same time.</source>
          <target state="translated">イベントの順序を決めることができるプログラミング、つまり、物事が同時にではなく、次から次へと起こるとき。</target>
        </trans-unit>
        <trans-unit id="8d94859a90b2088ddd0d1df7f7d0758ae05c5484" translate="yes" xml:space="preserve">
          <source>Programs derived from other sources sometimes have this. Some people keep a modification log here, but that usually gets long and is normally better maintained in a separate file.</source>
          <target state="translated">他のソースから派生したプログラムには、時々これがあります。ここに変更ログを保存する人もいますが、通常は長くなりますので、別のファイルに保存した方が良いでしょう。</target>
        </trans-unit>
        <trans-unit id="fbc0ca6dae853933487934114343b0d18ee81d17" translate="yes" xml:space="preserve">
          <source>Programs for which the source code is freely available and freely redistributable, with no commercial strings attached. For a more detailed definition, see &lt;a href=&quot;http://www.opensource.org/osd.html&quot;&gt;http://www.opensource.org/osd.html&lt;/a&gt;.</source>
          <target state="translated">ソースコードが自由に利用でき、自由に再配布できるプログラム。商用文字列は添付されていません。より詳細な定義については、&lt;a href=&quot;http://www.opensource.org/osd.html&quot;&gt;http:&lt;/a&gt; //www.opensource.org/osd.htmlを参照してください。</target>
        </trans-unit>
        <trans-unit id="6b00476f569a02ca3539accf5ba044f0d65bcb5e" translate="yes" xml:space="preserve">
          <source>Programs should run just as fast in the new character-oriented mode as in the old byte-oriented mode.</source>
          <target state="translated">プログラムは、新しい文字指向モードでも、古いバイト指向モードと同じように高速に実行されるはずです。</target>
        </trans-unit>
        <trans-unit id="da96c741b8794039905d8a82d4f548d58f61e17f" translate="yes" xml:space="preserve">
          <source>Programs that can't cope with the fold mapping being multiple code points can use the folding contained in the</source>
          <target state="translated">複数のコードポイントである fold マッピングに対応できないプログラムは</target>
        </trans-unit>
        <trans-unit id="dd0698680d62bac171c8889a2d9e61a094127933" translate="yes" xml:space="preserve">
          <source>Programs that want complete generality and the best folding results should use the folding contained in the</source>
          <target state="translated">完全な一般性と最良のフォールディング結果を求めるプログラムは</target>
        </trans-unit>
        <trans-unit id="5c889d397b8b1b4b4fd2bed80c486daeff12e71c" translate="yes" xml:space="preserve">
          <source>Prohibiting substitution</source>
          <target state="translated">置換の禁止</target>
        </trans-unit>
        <trans-unit id="092032adec6f71582575fab74451d00ac992958a" translate="yes" xml:space="preserve">
          <source>Prohibits RMS from automatically unlocking records.</source>
          <target state="translated">RMSがレコードを自動的にロック解除することを禁止します。</target>
        </trans-unit>
        <trans-unit id="827693d8d728cbc2193334d2e0775350ba6bd3ea" translate="yes" xml:space="preserve">
          <source>Prohibits file sharing.</source>
          <target state="translated">ファイル共有を禁止します。</target>
        </trans-unit>
        <trans-unit id="9f70a1d8b10f136a2ff15bfca7928b6558a541ba" translate="yes" xml:space="preserve">
          <source>Promote unforeseen warnings to errors with $SIG{__WARN__}.</source>
          <target state="translated">SIG{__WARN__}で、予期せぬ警告をエラーに昇格させます。</target>
        </trans-unit>
        <trans-unit id="a817d7eb8e0f1dab755ab5203a082e5c3c094fce" translate="yes" xml:space="preserve">
          <source>Prompt</source>
          <target state="translated">Prompt</target>
        </trans-unit>
        <trans-unit id="22769fd93d279795e91086b30dc0c80348555910" translate="yes" xml:space="preserve">
          <source>Proof of concept implementation of a trivial CPAN::Plugin</source>
          <target state="translated">トリビアルなCPAN::Pluginの概念実証実装</target>
        </trans-unit>
        <trans-unit id="8cb8e44abb50fda0602cd3141a45b2fa125c05ee" translate="yes" xml:space="preserve">
          <source>PropList.txt</source>
          <target state="translated">PropList.txt</target>
        </trans-unit>
        <trans-unit id="9466ea43fc116acce1e58dfef32cd7abb6fbe461" translate="yes" xml:space="preserve">
          <source>Propagate lvalue (&quot;modifiable&quot;) context to an op and its children.</source>
          <target state="translated">lvalue (&quot;変更可能&quot;)コンテキストを op とその子に伝搬します。</target>
        </trans-unit>
        <trans-unit id="a003a95cd15d0fb372b739a80cbf9e9edaa89694" translate="yes" xml:space="preserve">
          <source>Propagate lvalue (&quot;modifiable&quot;) context to an op and its children. &lt;code&gt;type&lt;/code&gt; represents the context type, roughly based on the type of op that would do the modifying, although &lt;code&gt;local()&lt;/code&gt; is represented by &lt;code&gt;OP_NULL&lt;/code&gt;, because it has no op type of its own (it is signalled by a flag on the lvalue op).</source>
          <target state="translated">左辺値（「変更可能」）コンテキストをopとその子に伝播します。 &lt;code&gt;type&lt;/code&gt; は、変更を行うopのタイプにほぼ基づいて、コンテキストタイプを表しますが、 &lt;code&gt;local()&lt;/code&gt; は独自のopタイプを持たないため、 &lt;code&gt;OP_NULL&lt;/code&gt; で表されます（左辺値opのフラグによって通知されます）。</target>
        </trans-unit>
        <trans-unit id="0d39398c5017bcda66f2048ddca98532439f97c8" translate="yes" xml:space="preserve">
          <source>Proper name: &lt;code&gt;CP950&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CP950&lt;/code&gt; 名称：CP950。</target>
        </trans-unit>
        <trans-unit id="55e2f982f104ac88fec8053c56589693034a2a84" translate="yes" xml:space="preserve">
          <source>Proper names: &lt;code&gt;CP936&lt;/code&gt;, &lt;code&gt;GBK&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CP936&lt;/code&gt; ：CP936、 &lt;code&gt;GBK&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4011a2e3fcfd2900e4a14153f4386eea5c5c13f1" translate="yes" xml:space="preserve">
          <source>Proper names: &lt;code&gt;CP949&lt;/code&gt;, &lt;code&gt;UHC&lt;/code&gt;, &lt;code&gt;x-windows-949&lt;/code&gt; (as used by Mozilla).</source>
          <target state="translated">&lt;code&gt;CP949&lt;/code&gt; ：CP949、 &lt;code&gt;UHC&lt;/code&gt; 、 &lt;code&gt;x-windows-949&lt;/code&gt; （Mozillaで使用）。</target>
        </trans-unit>
        <trans-unit id="a94bb21839cfa15f53f0bc58f4cb5b6025d477f1" translate="yes" xml:space="preserve">
          <source>Properly escaped string.</source>
          <target state="translated">正しくエスケープされた文字列。</target>
        </trans-unit>
        <trans-unit id="08aad061d33d2aed46e1bd912c462ebf19ab48de" translate="yes" xml:space="preserve">
          <source>Properties accessible through &lt;code&gt;\p{}&lt;/code&gt; and &lt;code&gt;\P{}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\p{}&lt;/code&gt; および &lt;code&gt;\P{}&lt;/code&gt; 介してアクセス可能なプロパティ</target>
        </trans-unit>
        <trans-unit id="30b22d8a6ea2e80a4ede94368e20c898c3306bb2" translate="yes" xml:space="preserve">
          <source>Properties accessible through Unicode::UCD</source>
          <target state="translated">Unicode::UCD を通じてアクセス可能なプロパティ</target>
        </trans-unit>
        <trans-unit id="563bc53aecfd3c93fb7267899dec8bb951315010" translate="yes" xml:space="preserve">
          <source>Properties accessible through \p{} and \P{}</source>
          <target state="translated">Properties access through \p{}and \P{}.</target>
        </trans-unit>
        <trans-unit id="504cce65493df0bcf454e1c9d203113ab26835b0" translate="yes" xml:space="preserve">
          <source>Properties accessible through other means</source>
          <target state="translated">他の手段でアクセス可能な物件</target>
        </trans-unit>
        <trans-unit id="94ef6c70d8b91d2c96a1d38a6396458a98f59e91" translate="yes" xml:space="preserve">
          <source>Properties marked with an '&lt;b&gt;O&lt;/b&gt;' in the table are considered (plain) obsolete. Generally this designation is given to properties that Unicode once used for internal purposes (but not any longer).</source>
          <target state="translated">表で「&lt;b&gt;O&lt;/b&gt;」とマークされたプロパティは、（単純な）廃止されたと見なされます。通常、この指定は、Unicodeがかつて内部目的で使用していたプロパティに与えられます（ただし、現在は使用されていません）。</target>
        </trans-unit>
        <trans-unit id="5f948ed1aecd13ef6eaaaa7fa03df905621fcdbd" translate="yes" xml:space="preserve">
          <source>Protecting Your Programs</source>
          <target state="translated">プログラムの保護</target>
        </trans-unit>
        <trans-unit id="24131f3e1ac0aa6bf5100678a6bb26c5772ffb37" translate="yes" xml:space="preserve">
          <source>Proto</source>
          <target state="translated">Proto</target>
        </trans-unit>
        <trans-unit id="496f6a705d5364d63ed964b7a34c9d06c9644bfe" translate="yes" xml:space="preserve">
          <source>Proto =&amp;gt; STRING or INT</source>
          <target state="translated">Proto =&amp;gt; STRINGまたはINT</target>
        </trans-unit>
        <trans-unit id="498d5e38147a2aaaadf50f2d1a7ed5f3a11c7285" translate="yes" xml:space="preserve">
          <source>Protocol family constants to use as the first argument to socket() or the value of the &lt;code&gt;SO_DOMAIN&lt;/code&gt; or &lt;code&gt;SO_FAMILY&lt;/code&gt; socket option.</source>
          <target state="translated">socket（）の最初の引数として使用するプロトコルファミリー定数、または &lt;code&gt;SO_DOMAIN&lt;/code&gt; または &lt;code&gt;SO_FAMILY&lt;/code&gt; ソケットオプションの値。</target>
        </trans-unit>
        <trans-unit id="253914d75df52adfa989833296236f4174dc7d45" translate="yes" xml:space="preserve">
          <source>Prototype '%s' overridden by attribute 'prototype(%s)' in %s</source>
          <target state="translated">プロトタイプ '%s' は %s の属性 'prototype(%s)' によってオーバーライドされます。</target>
        </trans-unit>
        <trans-unit id="dd6c57bd82cbd151f3ee07a3427f37f600eafd03" translate="yes" xml:space="preserve">
          <source>Prototype after '%c' for %s : %s</source>
          <target state="translated">s の '%c' の後のプロトタイプ:%s</target>
        </trans-unit>
        <trans-unit id="ded8e79f28baa830c3f275c86a7758d02be9fad4" translate="yes" xml:space="preserve">
          <source>Prototype mismatch: %s vs %s</source>
          <target state="translated">プロトタイプの不一致:%s vs %s</target>
        </trans-unit>
        <trans-unit id="6bedae979734135a790d847ebf093d33990200a6" translate="yes" xml:space="preserve">
          <source>Prototype not terminated</source>
          <target state="translated">プロトタイプが終了しない</target>
        </trans-unit>
        <trans-unit id="7c9552582b5fb5655d3fa8a96940f4486707876d" translate="yes" xml:space="preserve">
          <source>Prototype updates by Ilya Zakharevich &amp;lt;ilya@math.ohio-state.edu&amp;gt;.</source>
          <target state="translated">Ilya Zakharevich &amp;lt;ilya@math.ohio-state.edu&amp;gt;によるプロトタイプの更新。</target>
        </trans-unit>
        <trans-unit id="4ae98c95107bca76c978fecb95d46d8d9a2c1e0e" translate="yes" xml:space="preserve">
          <source>Prototypes</source>
          <target state="translated">Prototypes</target>
        </trans-unit>
        <trans-unit id="a5bca78fd1280b75129da9e0607ac0978e22ae46" translate="yes" xml:space="preserve">
          <source>Provide VMS-specific forms of various utility commands.</source>
          <target state="translated">様々なユーティリティ コマンドの VMS 固有のフォームを提供します。</target>
        </trans-unit>
        <trans-unit id="11ddfc9be641270abb6bed328d1f4892d055fe05" translate="yes" xml:space="preserve">
          <source>Provide a README file and perhaps also release notes, changelog, etc</source>
          <target state="translated">README ファイルを提供し、リリースノートや変更履歴なども提供してください。</target>
        </trans-unit>
        <trans-unit id="cef5922c5a5a4b9db6c5dfd4c8bffd2e8efd3aaf" translate="yes" xml:space="preserve">
          <source>Provide a list of filepaths where</source>
          <target state="translated">ファイルパスのリストを提供します。</target>
        </trans-unit>
        <trans-unit id="13c79833b637d90171ed134068b1d775c66a45f7" translate="yes" xml:space="preserve">
          <source>Provide a pseudo-class NEXT (et al) that allows method redispatch</source>
          <target state="translated">メソッドの再ディスパッチを可能にする擬似クラス NEXT (et al)を提供します。</target>
        </trans-unit>
        <trans-unit id="b23333f8402781ffb6c1eec41f9f5179914c01f2" translate="yes" xml:space="preserve">
          <source>Provide a stack trace for the old-interface-signals:</source>
          <target state="translated">旧インターフェース信号のスタックトレースを提供します。</target>
        </trans-unit>
        <trans-unit id="e4373551d0b44c2890c46fb33fa6da88678677ab" translate="yes" xml:space="preserve">
          <source>Provide a stack trace on the 4 listed signals only:</source>
          <target state="translated">リストされた4つの信号のみスタックトレースを提供してください。</target>
        </trans-unit>
        <trans-unit id="357951aef843b1c6ebb4a03fcd5f58952a57901c" translate="yes" xml:space="preserve">
          <source>Provide additional options to the harness. Currently supported options are:</source>
          <target state="translated">ハーネスに追加オプションを提供します。現在サポートされているオプションは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="dff17765e8d771354eb6000dda040cf39e225e0f" translate="yes" xml:space="preserve">
          <source>Provide framework for multiple DBMs</source>
          <target state="translated">複数のDBMに対応したフレームワークの提供</target>
        </trans-unit>
        <trans-unit id="f8c6e601144e3f379c359886764519b0dd7488d6" translate="yes" xml:space="preserve">
          <source>Provide hints about user subroutines to autodie</source>
          <target state="translated">ユーザサブルーチンを自動生成するためのヒントを提供する</target>
        </trans-unit>
        <trans-unit id="8f110f401a8df37e9a6b17075fa908b1c5b601a1" translate="yes" xml:space="preserve">
          <source>Provide informative &quot;file&quot; names for evals based on the place they were compiled.</source>
          <target state="translated">コンパイルされた場所に基づいて、情報を提供するための「ファイル」名を提供します。</target>
        </trans-unit>
        <trans-unit id="dbcb5bf8bde0c5a5e1b5a3735270b6e1558501e0" translate="yes" xml:space="preserve">
          <source>Provide informative names to anonymous subroutines based on the place they were compiled.</source>
          <target state="translated">コンパイルされた場所に基づいて、匿名のサブルーチンに有益な名前を提供します。</target>
        </trans-unit>
        <trans-unit id="eeebb27b46f7caa000dd180f46a3476997c63605" translate="yes" xml:space="preserve">
          <source>Provide links to further information (URL, email)</source>
          <target state="translated">詳細情報へのリンクを提供する(URL、電子メール</target>
        </trans-unit>
        <trans-unit id="6422adf396aa4c7b377814327c5fa3233c9af0ae" translate="yes" xml:space="preserve">
          <source>Provide sensible defaults for parameters which have them. Don't make your users specify parameters which will almost always be the same.</source>
          <target state="translated">パラメータに適切なデフォルト値を設定してください。ほとんど同じパラメータをユーザに指定させないようにしましょう。</target>
        </trans-unit>
        <trans-unit id="06d75d0602f241e3ca79aae00646e5f7c9be5fb1" translate="yes" xml:space="preserve">
          <source>Provide sensible shortcuts and defaults.</source>
          <target state="translated">賢明なショートカットとデフォルトを提供します。</target>
        </trans-unit>
        <trans-unit id="b8f300abee44af01ef8396951c514b4d2e5dbfe3" translate="yes" xml:space="preserve">
          <source>Provided Perl compatibility API</source>
          <target state="translated">Perl互換性APIを提供</target>
        </trans-unit>
        <trans-unit id="80413ae92acc6cd45fee5d6371ac186487848ced" translate="yes" xml:space="preserve">
          <source>Provided largely for legacy compatibility; it is better to use pack_sockaddr_in() or unpack_sockaddr_in() explicitly.</source>
          <target state="translated">主にレガシー互換性のために提供されています。pack_sockaddr_in()や unpack_sockaddr_in()を明示的に使用した方が良いでしょう。</target>
        </trans-unit>
        <trans-unit id="28474537dd9ef095e20f7aba4d9cb81d5a75457e" translate="yes" xml:space="preserve">
          <source>Provided largely for legacy compatibility; it is better to use pack_sockaddr_in6() or unpack_sockaddr_in6() explicitly.</source>
          <target state="translated">主にレガシー互換性のために提供されています。pack_sockaddr_in6()や unpack_sockaddr_in6()を明示的に使用した方が良いでしょう。</target>
        </trans-unit>
        <trans-unit id="a36d81826ac81063ca4463eca25402a6693e2b57" translate="yes" xml:space="preserve">
          <source>Provided largely for legacy compatibility; it is better to use pack_sockaddr_un() or unpack_sockaddr_un() explicitly.</source>
          <target state="translated">主にレガシー互換性のために提供されています。pack_sockaddr_un()や unpack_sockaddr_un()を明示的に使用した方が良いでしょう。</target>
        </trans-unit>
        <trans-unit id="fa78e658e64b448bedadd11512ada22bdc0e284b" translate="yes" xml:space="preserve">
          <source>Provided to allow layers to be implemented as Perl code. For instance:</source>
          <target state="translated">レイヤーをPerlコードとして実装できるようにするために提供されています。例えば</target>
        </trans-unit>
        <trans-unit id="15bdc25568e36d006e240cf708f9dce3924f6040" translate="yes" xml:space="preserve">
          <source>Provided your C compiler supports a 64-bit type (e.g. the</source>
          <target state="translated">お使いの C コンパイラが 64 ビット型をサポートしている場合 (例えば</target>
        </trans-unit>
        <trans-unit id="2b11a762a21c8fca08fe84cc3ba7706515215ff7" translate="yes" xml:space="preserve">
          <source>Provided your perl binary was properly configured and installed the &lt;b&gt;ExtUtils::Embed&lt;/b&gt; module will determine all of this information for you:</source>
          <target state="translated">perlバイナリが適切に構成され、インストールされている場合、&lt;b&gt;ExtUtils :: Embed&lt;/b&gt;モジュールがこの情報をすべて決定します。</target>
        </trans-unit>
        <trans-unit id="43176f4bfabbe7f02a17cd0d4664579bfd692555" translate="yes" xml:space="preserve">
          <source>Provides a reference to the arguments passed to the subroutine that died.</source>
          <target state="translated">死亡したサブルーチンに渡された引数への参照を提供します。</target>
        </trans-unit>
        <trans-unit id="6aee749769ccf0e73f6beb56206ed3f3745da69e" translate="yes" xml:space="preserve">
          <source>Provides a simple framework for writing test scripts</source>
          <target state="translated">テストスクリプトを書くためのシンプルなフレームワークを提供します。</target>
        </trans-unit>
        <trans-unit id="88cd665ef61e5f37b953f8e99c4f4c7c9c545e56" translate="yes" xml:space="preserve">
          <source>Provides a sub-set of the &lt;code&gt;&lt;a href=&quot;../../functions/seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt; functionality, with the restriction that it is only legal to seek forward in the input file/buffer. It is a fatal error to attempt to seek backward.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../functions/seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt; 機能のサブセットを提供しますが、入力ファイル/バッファーで前方にシークすることのみが正当であるという制限があります。逆方向にシークしようとすると、致命的なエラーになります。</target>
        </trans-unit>
        <trans-unit id="4380abd5e4f9b57c3d1c735d510c8da067ef3b73" translate="yes" xml:space="preserve">
          <source>Provides a sub-set of the &lt;code&gt;&lt;a href=&quot;../../functions/seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt; functionality, with the restriction that it is only legal to seek forward in the output file/buffer. It is a fatal error to attempt to seek backward.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../functions/seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt; 機能のサブセットを提供しますが、出力ファイル/バッファーで前方にシークすることのみが正当であるという制限があります。逆方向にシークしようとすると、致命的なエラーになります。</target>
        </trans-unit>
        <trans-unit id="043ad5ef72622e45c304f2c63f38a03738205bb4" translate="yes" xml:space="preserve">
          <source>Provides a sub-set of the &lt;code&gt;&lt;a href=&quot;../functions/seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt; functionality, with the restriction that it is only legal to seek forward in the compressed file. It is a fatal error to attempt to seek backward.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../functions/seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt; 機能のサブセットを提供しますが、圧縮ファイルを前方にシークすることのみが合法であるという制限があります。逆方向にシークしようとすると、致命的なエラーになります。</target>
        </trans-unit>
        <trans-unit id="392333bc8f87488b1b0ddb618d79d06200004971" translate="yes" xml:space="preserve">
          <source>Provides a sub-set of the &lt;code&gt;seek&lt;/code&gt; functionality, with the restriction that it is only legal to seek forward in the compressed file. It is a fatal error to attempt to seek backward.</source>
          <target state="translated">&lt;code&gt;seek&lt;/code&gt; 機能のサブセットを提供しますが、圧縮ファイルで前方にシークすることのみが合法であるという制限があります。後方にシークしようとすると致命的なエラーになります。</target>
        </trans-unit>
        <trans-unit id="599b7719c02f333830dfad544a492b23d339f290" translate="yes" xml:space="preserve">
          <source>Provides a sub-set of the &lt;code&gt;seek&lt;/code&gt; functionality, with the restriction that it is only legal to seek forward in the input file/buffer. It is a fatal error to attempt to seek backward.</source>
          <target state="translated">&lt;code&gt;seek&lt;/code&gt; 機能のサブセットを提供しますが、入力ファイル/バッファーで前方にシークすることのみが合法であるという制限があります。後方にシークしようとすると致命的なエラーになります。</target>
        </trans-unit>
        <trans-unit id="484dd5b2194450a2eff7f7b45534ca222b43a846" translate="yes" xml:space="preserve">
          <source>Provides a sub-set of the &lt;code&gt;seek&lt;/code&gt; functionality, with the restriction that it is only legal to seek forward in the output file/buffer. It is a fatal error to attempt to seek backward.</source>
          <target state="translated">&lt;code&gt;seek&lt;/code&gt; 機能のサブセットを提供しますが、出力ファイル/バッファーで前方にシークすることのみが合法であるという制限があります。後方にシークしようとすると致命的なエラーになります。</target>
        </trans-unit>
        <trans-unit id="7dd4c64d07073a45696ea9342f023290999ed811" translate="yes" xml:space="preserve">
          <source>Provides a visual display of the standard variant sequences derived from</source>
          <target state="translated">に由来する標準バリアント配列の視覚的表示を提供します。</target>
        </trans-unit>
        <trans-unit id="c52a45815f69df31bfe7c57d00e96b5e68e005cc" translate="yes" xml:space="preserve">
          <source>Provides screen dump of Perl data.</source>
          <target state="translated">Perlデータの画面ダンプを提供します。</target>
        </trans-unit>
        <trans-unit id="55a42150c8af24b218fa91775b2b36f6e7ad1ac5" translate="yes" xml:space="preserve">
          <source>Provides support for big integer calculations. Not intended to be used by other modules. Other modules which sport the same functions can also be used to support Math::BigInt, like &lt;a href=&quot;Math::BigInt::GMP&quot;&gt;Math::BigInt::GMP&lt;/a&gt; or &lt;a href=&quot;Math::BigInt::Pari&quot;&gt;Math::BigInt::Pari&lt;/a&gt;.</source>
          <target state="translated">大きな整数の計算をサポートします。他のモジュールで使用するためのものではありません。同じ関数を備えた他のモジュールも、&lt;a href=&quot;Math::BigInt::GMP&quot;&gt;Math :: BigInt :: GMP&lt;/a&gt;や&lt;a href=&quot;Math::BigInt::Pari&quot;&gt;Math :: BigInt :: Pari&lt;/a&gt;などのMath :: BigIntをサポートするために使用できます。</target>
        </trans-unit>
        <trans-unit id="a3777f0013122f0c4a4655ba003bcc967ea9bd1b" translate="yes" xml:space="preserve">
          <source>Provides support for big integer calculations. Not intended to be used by other modules. Other modules which sport the same functions can also be used to support Math::BigInt, like &lt;a href=&quot;http://search.cpan.org/perldoc/Math::BigInt::GMP&quot;&gt;Math::BigInt::GMP&lt;/a&gt; or &lt;a href=&quot;http://search.cpan.org/perldoc/Math::BigInt::Pari&quot;&gt;Math::BigInt::Pari&lt;/a&gt;.</source>
          <target state="translated">大きな整数の計算をサポートします。他のモジュールでの使用は意図されていません。&lt;a href=&quot;http://search.cpan.org/perldoc/Math::BigInt::GMP&quot;&gt;Math :: BigInt :: GMP&lt;/a&gt;や&lt;a href=&quot;http://search.cpan.org/perldoc/Math::BigInt::Pari&quot;&gt;Math :: BigInt :: Pari&lt;/a&gt;など、同じ関数を使用する他のモジュールを使用して、Math :: BigIntをサポートすることもできます。</target>
        </trans-unit>
        <trans-unit id="10d70d52199eba6651636a68b4318d214564b47d" translate="yes" xml:space="preserve">
          <source>Provides support for reading data from and writing data to a scalar.</source>
          <target state="translated">スカラからのデータの読み込みとスカラへのデータの書き込みをサポートします。</target>
        </trans-unit>
        <trans-unit id="35d3d844e1643f59d23a9592a79adf75a0687a37" translate="yes" xml:space="preserve">
          <source>Provides system-specific clean up of the C runtime environment after running Perl interpreters. This should be called only once, after freeing any remaining Perl interpreters.</source>
          <target state="translated">Perl インタプリタ実行後の C ランタイム環境のシステム固有のクリーンアップを提供します。これは、Perl インタプリタを解放した後に一度だけ呼ばれるべきです。</target>
        </trans-unit>
        <trans-unit id="5c08e94d1f190f7ace300b8f19617a3c5d31718f" translate="yes" xml:space="preserve">
          <source>Provides system-specific tune up of the C runtime environment necessary to run Perl interpreters. This should be called only once, before creating any Perl interpreters.</source>
          <target state="translated">Perl インタプリタの実行に必要な C ランタイム環境のシステム固有のチューニングを提供します。これは、Perl インタプリタを作成する前に一度だけ呼ばれるべきです。</target>
        </trans-unit>
        <trans-unit id="621a00134095fc7f69dd6022503e0657d531ae39" translate="yes" xml:space="preserve">
          <source>Providing the appearance of something without the reality, as in: virtual memory is not real memory. (See also &lt;b&gt;memory&lt;/b&gt;.) The opposite of &amp;ldquo;virtual&amp;rdquo; is &amp;ldquo;transparent&amp;rdquo;, which means providing the reality of something without the appearance, as in: Perl handles the variable-length UTF‑8 character encoding transparently.</source>
          <target state="translated">仮想メモリは実際のメモリではないように、現実のない何かの外観を提供します。（「&lt;b&gt;メモリ&lt;/b&gt;」も参照してください。）「仮想」の反対は「透明」です。つまり、次のように、外観のない何かの現実を提供します。Perlは可変長UTF-8文字エンコーディングを透過的に処理します。</target>
        </trans-unit>
        <trans-unit id="e29e8eedc748840bd27ace9f3607818fa75df015" translate="yes" xml:space="preserve">
          <source>Provisional</source>
          <target state="translated">Provisional</target>
        </trans-unit>
        <trans-unit id="bc57f5706c94c8332625d86e374b5ec8162923ac" translate="yes" xml:space="preserve">
          <source>Provisional; for the analysis and processing of Indic scripts</source>
          <target state="translated">暫定的に、インディック文字の分析と処理のために</target>
        </trans-unit>
        <trans-unit id="c05ec95ae79e3cee68dd82f36148a233fc74d0cd" translate="yes" xml:space="preserve">
          <source>Proxy arguments passed to &lt;code&gt;new&lt;/code&gt; will override their corresponding environment variables.</source>
          <target state="translated">&lt;code&gt;new&lt;/code&gt; に渡されたプロキシ引数は、対応する環境変数を上書きします。</target>
        </trans-unit>
        <trans-unit id="e08767fd1764632990c98ee793a2eb53548be64a" translate="yes" xml:space="preserve">
          <source>Pseudo-hashes</source>
          <target state="translated">Pseudo-hashes</target>
        </trans-unit>
        <trans-unit id="5b10b4e8c62202591bb27bc4c07957f535a6a8c5" translate="yes" xml:space="preserve">
          <source>Pseudo-hashes have been removed from Perl. The 'fields' pragma remains available.</source>
          <target state="translated">疑似ハッシュがPerlから削除されました。fields' プラグマは引き続き利用可能です。</target>
        </trans-unit>
        <trans-unit id="3044e0ef5b4b41d6c53eefa4f2f2b746e10e10f9" translate="yes" xml:space="preserve">
          <source>Pseudo-hashes: Using an array as a hash</source>
          <target state="translated">擬似ハッシュ。ハッシュとして配列を使用する</target>
        </trans-unit>
        <trans-unit id="198c1da4939c16e294e3157fd95470bb099c4e6a" translate="yes" xml:space="preserve">
          <source>Pseudo-layer that declares that the stream accepts Perl's</source>
          <target state="translated">ストリームが Perl の</target>
        </trans-unit>
        <trans-unit id="bc550b2f7a34ff5e6976a425dc29a862aa93c5f1" translate="yes" xml:space="preserve">
          <source>Pstruct takes any .c or .h files, or preferably .s ones, since that's the format it is going to massage them into anyway, and spits out listings like this:</source>
          <target state="translated">Pstruct は、任意の .c や .h ファイル、できれば .s ファイルを受け取り、以下のようなリストを出力します。</target>
        </trans-unit>
        <trans-unit id="297bc9763378ddef289f2b0d755586fb4440c94e" translate="yes" xml:space="preserve">
          <source>Pstruct was not a pretty program. Neither was it particularly robust. The problem, you see, was that the C compiler was much better at parsing C than I could ever hope to be.</source>
          <target state="translated">Pstruct はきれいなプログラムではありませんでした。また、特にロバストなプログラムでもありませんでした。問題は、C コンパイラが私が望む以上に C のパースに長けていたことでした。</target>
        </trans-unit>
        <trans-unit id="c53eebf11a10d6cf8de1f1717ec349118f7310f1" translate="yes" xml:space="preserve">
          <source>Pthread internal error: message: __libc_reinit() failed, file: ../pthreads/pthread.c, line: 1096 Return Pointer is 0xc082bf33 sh: 5345 Quit(coredump)</source>
          <target state="translated">Pthread 内部エラー:メッセージ。ファイル:../pthreads/thread.c,line:1096 Return Pointer is 0xc082bf33 sh:5345 Quit(coredump)</target>
        </trans-unit>
        <trans-unit id="53dcafca6631189dc3e2037e20a1d47928d99eba" translate="yes" xml:space="preserve">
          <source>Pthreads</source>
          <target state="translated">Pthreads</target>
        </trans-unit>
        <trans-unit id="83fd9d90135feee7f6a996aca0791b4d44033ddd" translate="yes" xml:space="preserve">
          <source>Public Functions</source>
          <target state="translated">公的機能</target>
        </trans-unit>
        <trans-unit id="400be4997716cf3bb5a0c05bf961e2a62c95f6c8" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
          <target state="translated">パブリックメソッド</target>
        </trans-unit>
        <trans-unit id="6c3aa2b9e37ccd79b46e58ea5b46718457c77761" translate="yes" xml:space="preserve">
          <source>Public Review Issue #29: Normalization Issue</source>
          <target state="translated">公開審査問題29号:ノーマライゼーション問題</target>
        </trans-unit>
        <trans-unit id="8d618bb63d8316f9a89333b5c763467803474bba" translate="yes" xml:space="preserve">
          <source>Pugs</source>
          <target state="translated">Pugs</target>
        </trans-unit>
        <trans-unit id="6b7708a2c18bac2fbd6cc3c66f601d8fce94c123" translate="yes" xml:space="preserve">
          <source>Pure Perl (that is non XS) modules may be installed via the usual:</source>
          <target state="translated">純粋な Perl (XS 以外の)モジュールは、通常の方法でインストールすることができます。</target>
        </trans-unit>
        <trans-unit id="e95b650ab6696c2fae8a07318611a14e120c748e" translate="yes" xml:space="preserve">
          <source>Pure Perl module to support Math::BigInt</source>
          <target state="translated">Math::BigInt をサポートする純粋な Perl モジュール</target>
        </trans-unit>
        <trans-unit id="6bedf193383dd829c1a7e1f3c25ac475a95dbc9b" translate="yes" xml:space="preserve">
          <source>Pure Perl version of &lt;code&gt;Data::Dumper&lt;/code&gt; escapes UTF-8 strings correctly only in Perl 5.8.0 and later.</source>
          <target state="translated">&lt;code&gt;Data::Dumper&lt;/code&gt; Dumperの純粋なPerlバージョンは、Perl 5.8.0以降でのみUTF-8文字列を正しくエスケープします。</target>
        </trans-unit>
        <trans-unit id="fb4b5bba5c487f415ed0f1e943d54e4cec7304aa" translate="yes" xml:space="preserve">
          <source>Pure pure (that is non xs) modules may be installed via the usual:</source>
          <target state="translated">純粋な (つまり xs 以外の)モジュールは、通常の方法でインストールすることができます。</target>
        </trans-unit>
        <trans-unit id="de3bd83a8b87c6fcf37efea53d47a13ade370276" translate="yes" xml:space="preserve">
          <source>Purify</source>
          <target state="translated">Purify</target>
        </trans-unit>
        <trans-unit id="a0fb821bdaf93ed9a1f1e920acfb2840eff5b153" translate="yes" xml:space="preserve">
          <source>Purpose</source>
          <target state="translated">Purpose</target>
        </trans-unit>
        <trans-unit id="1adbca3a8c94f365ba3311017ca9fb85bf4ec06c" translate="yes" xml:space="preserve">
          <source>Push a double onto the stack, extending the stack if necessary. Does not use &lt;code&gt;TARG&lt;/code&gt; . See also &lt;code&gt;XPUSHn&lt;/code&gt; , &lt;code&gt;mPUSHn&lt;/code&gt; and &lt;code&gt;PUSHn&lt;/code&gt; .</source>
          <target state="translated">doubleをスタックにプッシュし、必要に応じてスタックを拡張します。 &lt;code&gt;TARG&lt;/code&gt; を使用しません。 &lt;code&gt;XPUSHn&lt;/code&gt; 、 &lt;code&gt;mPUSHn&lt;/code&gt; および &lt;code&gt;PUSHn&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="e9314222493ba4a16c9a765159c8c302f3a82085" translate="yes" xml:space="preserve">
          <source>Push a double onto the stack, extending the stack if necessary. Does not use &lt;code&gt;TARG&lt;/code&gt;. See also &lt;code&gt;&lt;a href=&quot;#XPUSHn&quot;&gt;&quot;XPUSHn&quot;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#mPUSHn&quot;&gt;&quot;mPUSHn&quot;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#PUSHn&quot;&gt;&quot;PUSHn&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">ダブルをスタックにプッシュし、必要に応じてスタックを拡張します。 &lt;code&gt;TARG&lt;/code&gt; を使用しません。 &lt;code&gt;&lt;a href=&quot;#XPUSHn&quot;&gt;&quot;XPUSHn&quot;&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#mPUSHn&quot;&gt;&quot;mPUSHn&quot;&lt;/a&gt;&lt;/code&gt; 、および &lt;code&gt;&lt;a href=&quot;#PUSHn&quot;&gt;&quot;PUSHn&quot;&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="c66f0f44c90e343c00fbe4997ddc560482746d7f" translate="yes" xml:space="preserve">
          <source>Push a double onto the stack, extending the stack if necessary. Handles 'set' magic. Uses &lt;code&gt;TARG&lt;/code&gt; , so &lt;code&gt;dTARGET&lt;/code&gt; or &lt;code&gt;dXSTARG&lt;/code&gt; should be called to declare it. Do not call multiple &lt;code&gt;TARG&lt;/code&gt; -oriented macros to return lists from XSUB's - see &lt;code&gt;mXPUSHn&lt;/code&gt; instead. See also &lt;code&gt;PUSHn&lt;/code&gt; and &lt;code&gt;mPUSHn&lt;/code&gt; .</source>
          <target state="translated">doubleをスタックにプッシュし、必要に応じてスタックを拡張します。「セット」マジックを処理します。使用 &lt;code&gt;TARG&lt;/code&gt; は、そう &lt;code&gt;dTARGET&lt;/code&gt; または &lt;code&gt;dXSTARG&lt;/code&gt; はそれを宣言するために呼び出す必要があります。XSUBからリストを返すために複数の &lt;code&gt;TARG&lt;/code&gt; 指向のマクロを呼び出さないでください。代わりに &lt;code&gt;mXPUSHn&lt;/code&gt; を参照してください。 &lt;code&gt;PUSHn&lt;/code&gt; および &lt;code&gt;mPUSHn&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="86d98b4c2e697d3215a4a3c30fb29676c88c9d06" translate="yes" xml:space="preserve">
          <source>Push a double onto the stack, extending the stack if necessary. Handles 'set' magic. Uses &lt;code&gt;TARG&lt;/code&gt;, so &lt;code&gt;dTARGET&lt;/code&gt; or &lt;code&gt;dXSTARG&lt;/code&gt; should be called to declare it. Do not call multiple &lt;code&gt;TARG&lt;/code&gt;-oriented macros to return lists from XSUB's - see &lt;code&gt;&lt;a href=&quot;#mXPUSHn&quot;&gt;&quot;mXPUSHn&quot;&lt;/a&gt;&lt;/code&gt; instead. See also &lt;code&gt;&lt;a href=&quot;#PUSHn&quot;&gt;&quot;PUSHn&quot;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#mPUSHn&quot;&gt;&quot;mPUSHn&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">ダブルをスタックにプッシュし、必要に応じてスタックを拡張します。'set'マジックを処理します。使用 &lt;code&gt;TARG&lt;/code&gt; は、そう &lt;code&gt;dTARGET&lt;/code&gt; または &lt;code&gt;dXSTARG&lt;/code&gt; はそれを宣言するために呼び出す必要があります。XSUBからリストを返すために複数の &lt;code&gt;TARG&lt;/code&gt; 指向のマクロを呼び出さないでください。代わりに &lt;code&gt;&lt;a href=&quot;#mXPUSHn&quot;&gt;&quot;mXPUSHn&quot;&lt;/a&gt;&lt;/code&gt; 参照してください。 &lt;code&gt;&lt;a href=&quot;#PUSHn&quot;&gt;&quot;PUSHn&quot;&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;#mPUSHn&quot;&gt;&quot;mPUSHn&quot;&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="70310d23516f418652dd8578becd2ec048a6f62f" translate="yes" xml:space="preserve">
          <source>Push a double onto the stack. The stack must have room for this element. Does not use &lt;code&gt;TARG&lt;/code&gt; . See also &lt;code&gt;PUSHn&lt;/code&gt; , &lt;code&gt;mXPUSHn&lt;/code&gt; and &lt;code&gt;XPUSHn&lt;/code&gt; .</source>
          <target state="translated">スタックにダブルをプッシュします。スタックには、この要素のためのスペースが必要です。 &lt;code&gt;TARG&lt;/code&gt; を使用しません。 &lt;code&gt;PUSHn&lt;/code&gt; 、 &lt;code&gt;mXPUSHn&lt;/code&gt; 、および &lt;code&gt;XPUSHn&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="13eb8067bc430ef1f6450210346f8290bf626a99" translate="yes" xml:space="preserve">
          <source>Push a double onto the stack. The stack must have room for this element. Does not use &lt;code&gt;TARG&lt;/code&gt;. See also &lt;code&gt;&lt;a href=&quot;#PUSHn&quot;&gt;&quot;PUSHn&quot;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#mXPUSHn&quot;&gt;&quot;mXPUSHn&quot;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#XPUSHn&quot;&gt;&quot;XPUSHn&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">ダブルをスタックにプッシュします。スタックには、この要素のためのスペースが必要です。 &lt;code&gt;TARG&lt;/code&gt; を使用しません。 &lt;code&gt;&lt;a href=&quot;#PUSHn&quot;&gt;&quot;PUSHn&quot;&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#mXPUSHn&quot;&gt;&quot;mXPUSHn&quot;&lt;/a&gt;&lt;/code&gt; 、および &lt;code&gt;&lt;a href=&quot;#XPUSHn&quot;&gt;&quot;XPUSHn&quot;&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="a09819d533d2a6cde93684c673c40239b2327313" translate="yes" xml:space="preserve">
          <source>Push a double onto the stack. The stack must have room for this element. Handles 'set' magic. Uses &lt;code&gt;TARG&lt;/code&gt; , so &lt;code&gt;dTARGET&lt;/code&gt; or &lt;code&gt;dXSTARG&lt;/code&gt; should be called to declare it. Do not call multiple &lt;code&gt;TARG&lt;/code&gt; -oriented macros to return lists from XSUB's - see &lt;code&gt;mPUSHn&lt;/code&gt; instead. See also &lt;code&gt;XPUSHn&lt;/code&gt; and &lt;code&gt;mXPUSHn&lt;/code&gt; .</source>
          <target state="translated">スタックにダブルをプッシュします。スタックには、この要素のためのスペースが必要です。「セット」マジックを処理します。使用 &lt;code&gt;TARG&lt;/code&gt; は、そう &lt;code&gt;dTARGET&lt;/code&gt; または &lt;code&gt;dXSTARG&lt;/code&gt; はそれを宣言するために呼び出す必要があります。XSUBからリストを返すために複数の &lt;code&gt;TARG&lt;/code&gt; 指向のマクロを呼び出さないでください。代わりに &lt;code&gt;mPUSHn&lt;/code&gt; を参照してください。 &lt;code&gt;XPUSHn&lt;/code&gt; および &lt;code&gt;mXPUSHn&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="c8b9e76ce61793d156b2a957cbccb829619da4ec" translate="yes" xml:space="preserve">
          <source>Push a double onto the stack. The stack must have room for this element. Handles 'set' magic. Uses &lt;code&gt;TARG&lt;/code&gt;, so &lt;code&gt;dTARGET&lt;/code&gt; or &lt;code&gt;dXSTARG&lt;/code&gt; should be called to declare it. Do not call multiple &lt;code&gt;TARG&lt;/code&gt;-oriented macros to return lists from XSUB's - see &lt;code&gt;&lt;a href=&quot;#mPUSHn&quot;&gt;&quot;mPUSHn&quot;&lt;/a&gt;&lt;/code&gt; instead. See also &lt;code&gt;&lt;a href=&quot;#XPUSHn&quot;&gt;&quot;XPUSHn&quot;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#mXPUSHn&quot;&gt;&quot;mXPUSHn&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">ダブルをスタックにプッシュします。スタックには、この要素のためのスペースが必要です。'set'マジックを処理します。使用 &lt;code&gt;TARG&lt;/code&gt; は、そう &lt;code&gt;dTARGET&lt;/code&gt; または &lt;code&gt;dXSTARG&lt;/code&gt; はそれを宣言するために呼び出す必要があります。XSUBからリストを返すために複数の &lt;code&gt;TARG&lt;/code&gt; 指向のマクロを呼び出さないでください。代わりに &lt;code&gt;&lt;a href=&quot;#mPUSHn&quot;&gt;&quot;mPUSHn&quot;&lt;/a&gt;&lt;/code&gt; 参照してください。 &lt;code&gt;&lt;a href=&quot;#XPUSHn&quot;&gt;&quot;XPUSHn&quot;&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;#mXPUSHn&quot;&gt;&quot;mXPUSHn&quot;&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="37fbc41e170c8928cc728474cf6c2366e3a91513" translate="yes" xml:space="preserve">
          <source>Push a new mortal SV onto the stack, extending the stack if necessary. Does not use &lt;code&gt;TARG&lt;/code&gt; . See also &lt;code&gt;XPUSHs&lt;/code&gt; , &lt;code&gt;PUSHmortal&lt;/code&gt; and &lt;code&gt;PUSHs&lt;/code&gt; .</source>
          <target state="translated">スタックに新しい致命的なSVをプッシュし、必要に応じてスタックを拡張します。 &lt;code&gt;TARG&lt;/code&gt; を使用しません。 &lt;code&gt;XPUSHs&lt;/code&gt; 、 &lt;code&gt;PUSHmortal&lt;/code&gt; 、 &lt;code&gt;PUSHs&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="c27707abd51fc24e5c7f61cf5bc748e172271012" translate="yes" xml:space="preserve">
          <source>Push a new mortal SV onto the stack, extending the stack if necessary. Does not use &lt;code&gt;TARG&lt;/code&gt;. See also &lt;code&gt;&lt;a href=&quot;#XPUSHs&quot;&gt;&quot;XPUSHs&quot;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#PUSHmortal&quot;&gt;&quot;PUSHmortal&quot;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#PUSHs&quot;&gt;&quot;PUSHs&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">新しい致命的なSVをスタックにプッシュし、必要に応じてスタックを拡張します。 &lt;code&gt;TARG&lt;/code&gt; を使用しません。 &lt;code&gt;&lt;a href=&quot;#XPUSHs&quot;&gt;&quot;XPUSHs&quot;&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#PUSHmortal&quot;&gt;&quot;PUSHmortal&quot;&lt;/a&gt;&lt;/code&gt; 、および &lt;code&gt;&lt;a href=&quot;#PUSHs&quot;&gt;&quot;PUSHs&quot;&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="050fa706767d321890b953c04c19df5b05aa9b43" translate="yes" xml:space="preserve">
          <source>Push a new mortal SV onto the stack. The stack must have room for this element. Does not use &lt;code&gt;TARG&lt;/code&gt; . See also &lt;code&gt;PUSHs&lt;/code&gt; , &lt;code&gt;XPUSHmortal&lt;/code&gt; and &lt;code&gt;XPUSHs&lt;/code&gt; .</source>
          <target state="translated">新しい致命的なSVをスタックにプッシュします。スタックには、この要素のためのスペースが必要です。 &lt;code&gt;TARG&lt;/code&gt; を使用しません。 &lt;code&gt;PUSHs&lt;/code&gt; 、 &lt;code&gt;XPUSHmortal&lt;/code&gt; 、および &lt;code&gt;XPUSHs&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="932347acb8f438d233a9c9d7507e2856754d5d0c" translate="yes" xml:space="preserve">
          <source>Push a new mortal SV onto the stack. The stack must have room for this element. Does not use &lt;code&gt;TARG&lt;/code&gt;. See also &lt;code&gt;&lt;a href=&quot;#PUSHs&quot;&gt;&quot;PUSHs&quot;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#XPUSHmortal&quot;&gt;&quot;XPUSHmortal&quot;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#XPUSHs&quot;&gt;&quot;XPUSHs&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">新しい致命的なSVをスタックにプッシュします。スタックには、この要素のためのスペースが必要です。 &lt;code&gt;TARG&lt;/code&gt; を使用しません。 &lt;code&gt;&lt;a href=&quot;#PUSHs&quot;&gt;&quot;PUSHs&quot;&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#XPUSHmortal&quot;&gt;&quot;XPUSHmortal&quot;&lt;/a&gt;&lt;/code&gt; 、および &lt;code&gt;&lt;a href=&quot;#XPUSHs&quot;&gt;&quot;XPUSHs&quot;&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="2953f995a93499d907bfdf7f890c3bf8f395f3c2" translate="yes" xml:space="preserve">
          <source>Push a new pad frame onto the padlist, unless there's already a pad at this depth, in which case don't bother creating a new one. Then give the new pad an &lt;code&gt;@_&lt;/code&gt; in slot zero.</source>
          <target state="translated">この深さにすでにパッドがある場合を除いて、新しいパッドフレームをパッドリストにプッシュします。この場合、わざわざ新しいパッドを作成しないでください。次に、新しいパッドにスロットゼロの &lt;code&gt;@_&lt;/code&gt; を付けます。</target>
        </trans-unit>
        <trans-unit id="ffd0047000871af3772812f84a32456a428054a8" translate="yes" xml:space="preserve">
          <source>Push a new pad frame onto the padlist, unless there's already a pad at this depth, in which case don't bother creating a new one. Then give the new pad an @_ in slot zero.</source>
          <target state="translated">この深さに既にパッドがある場合を除いて、新しいパッドフレームをパッドリストにプッシュします。そして、新しいパッドにスロットゼロに@_を付けます。</target>
        </trans-unit>
        <trans-unit id="ba2a34165de5563eaeb2cd603b049d4c74e59fde" translate="yes" xml:space="preserve">
          <source>Push a string onto the stack, extending the stack if necessary. The &lt;code&gt;len&lt;/code&gt; indicates the length of the string. Does not use &lt;code&gt;TARG&lt;/code&gt; . See also &lt;code&gt;XPUSHp&lt;/code&gt; , &lt;code&gt;mPUSHp&lt;/code&gt; and &lt;code&gt;PUSHp&lt;/code&gt; .</source>
          <target state="translated">文字列をスタックにプッシュし、必要に応じてスタックを拡張します。 &lt;code&gt;len&lt;/code&gt; は文字列の長さを示します。 &lt;code&gt;TARG&lt;/code&gt; を使用しません。 &lt;code&gt;XPUSHp&lt;/code&gt; 、 &lt;code&gt;mPUSHp&lt;/code&gt; および &lt;code&gt;PUSHp&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="9ca881fd61bd0714a8e4bc9717e20bf806141abb" translate="yes" xml:space="preserve">
          <source>Push a string onto the stack, extending the stack if necessary. The &lt;code&gt;len&lt;/code&gt; indicates the length of the string. Does not use &lt;code&gt;TARG&lt;/code&gt;. See also &lt;code&gt;&lt;a href=&quot;#XPUSHp&quot;&gt;&quot;XPUSHp&quot;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;mPUSHp&lt;/code&gt; and &lt;code&gt;PUSHp&lt;/code&gt;.</source>
          <target state="translated">文字列をスタックにプッシュし、必要に応じてスタックを拡張します。 &lt;code&gt;len&lt;/code&gt; は文字列の長さを示します。 &lt;code&gt;TARG&lt;/code&gt; を使用しません。 &lt;code&gt;&lt;a href=&quot;#XPUSHp&quot;&gt;&quot;XPUSHp&quot;&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;mPUSHp&lt;/code&gt; 、および &lt;code&gt;PUSHp&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="b05cc48550c5f11f3753078b47d3c48fd30b5aa4" translate="yes" xml:space="preserve">
          <source>Push a string onto the stack, extending the stack if necessary. The &lt;code&gt;len&lt;/code&gt; indicates the length of the string. Handles 'set' magic. Uses &lt;code&gt;TARG&lt;/code&gt; , so &lt;code&gt;dTARGET&lt;/code&gt; or &lt;code&gt;dXSTARG&lt;/code&gt; should be called to declare it. Do not call multiple &lt;code&gt;TARG&lt;/code&gt; -oriented macros to return lists from XSUB's - see &lt;code&gt;mXPUSHp&lt;/code&gt; instead. See also &lt;code&gt;PUSHp&lt;/code&gt; and &lt;code&gt;mPUSHp&lt;/code&gt; .</source>
          <target state="translated">文字列をスタックにプッシュし、必要に応じてスタックを拡張します。 &lt;code&gt;len&lt;/code&gt; は文字列の長さを示します。「セット」マジックを処理します。使用 &lt;code&gt;TARG&lt;/code&gt; は、そう &lt;code&gt;dTARGET&lt;/code&gt; または &lt;code&gt;dXSTARG&lt;/code&gt; はそれを宣言するために呼び出す必要があります。XSUBからリストを返すために複数の &lt;code&gt;TARG&lt;/code&gt; 指向のマクロを呼び出さないでください。代わりに &lt;code&gt;mXPUSHp&lt;/code&gt; を参照してください。 &lt;code&gt;PUSHp&lt;/code&gt; および &lt;code&gt;mPUSHp&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="f00b44fb196df3bd77f1eaa3af8fcbd1642b1d78" translate="yes" xml:space="preserve">
          <source>Push a string onto the stack, extending the stack if necessary. The &lt;code&gt;len&lt;/code&gt; indicates the length of the string. Handles 'set' magic. Uses &lt;code&gt;TARG&lt;/code&gt;, so &lt;code&gt;dTARGET&lt;/code&gt; or &lt;code&gt;dXSTARG&lt;/code&gt; should be called to declare it. Do not call multiple &lt;code&gt;TARG&lt;/code&gt;-oriented macros to return lists from XSUB's - see &lt;code&gt;&lt;a href=&quot;#mXPUSHp&quot;&gt;&quot;mXPUSHp&quot;&lt;/a&gt;&lt;/code&gt; instead. See also &lt;code&gt;&lt;a href=&quot;#PUSHp&quot;&gt;&quot;PUSHp&quot;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#mPUSHp&quot;&gt;&quot;mPUSHp&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">文字列をスタックにプッシュし、必要に応じてスタックを拡張します。 &lt;code&gt;len&lt;/code&gt; は文字列の長さを示します。'set'マジックを処理します。使用 &lt;code&gt;TARG&lt;/code&gt; は、そう &lt;code&gt;dTARGET&lt;/code&gt; または &lt;code&gt;dXSTARG&lt;/code&gt; はそれを宣言するために呼び出す必要があります。XSUBからリストを返すために複数の &lt;code&gt;TARG&lt;/code&gt; 指向のマクロを呼び出さないでください。代わりに &lt;code&gt;&lt;a href=&quot;#mXPUSHp&quot;&gt;&quot;mXPUSHp&quot;&lt;/a&gt;&lt;/code&gt; 参照してください。 &lt;code&gt;&lt;a href=&quot;#PUSHp&quot;&gt;&quot;PUSHp&quot;&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;#mPUSHp&quot;&gt;&quot;mPUSHp&quot;&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="69992c35cddb150767687fecee3a99bf322b8aa1" translate="yes" xml:space="preserve">
          <source>Push a string onto the stack. The stack must have room for this element. The &lt;code&gt;len&lt;/code&gt; indicates the length of the string. Does not use &lt;code&gt;TARG&lt;/code&gt; . See also &lt;code&gt;PUSHp&lt;/code&gt; , &lt;code&gt;mXPUSHp&lt;/code&gt; and &lt;code&gt;XPUSHp&lt;/code&gt; .</source>
          <target state="translated">文字列をスタックにプッシュします。スタックには、この要素のためのスペースが必要です。 &lt;code&gt;len&lt;/code&gt; は文字列の長さを示します。 &lt;code&gt;TARG&lt;/code&gt; を使用しません。 &lt;code&gt;PUSHp&lt;/code&gt; 、 &lt;code&gt;mXPUSHp&lt;/code&gt; および &lt;code&gt;XPUSHp&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="92f39638c69e1252827e5ee000eb322e71c3099b" translate="yes" xml:space="preserve">
          <source>Push a string onto the stack. The stack must have room for this element. The &lt;code&gt;len&lt;/code&gt; indicates the length of the string. Does not use &lt;code&gt;TARG&lt;/code&gt;. See also &lt;code&gt;&lt;a href=&quot;#PUSHp&quot;&gt;&quot;PUSHp&quot;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#mXPUSHp&quot;&gt;&quot;mXPUSHp&quot;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#XPUSHp&quot;&gt;&quot;XPUSHp&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">文字列をスタックにプッシュします。スタックには、この要素のためのスペースが必要です。 &lt;code&gt;len&lt;/code&gt; は文字列の長さを示します。 &lt;code&gt;TARG&lt;/code&gt; を使用しません。参照してください &lt;code&gt;&lt;a href=&quot;#PUSHp&quot;&gt;&quot;PUSHp&quot;&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#mXPUSHp&quot;&gt;&quot;mXPUSHp&quot;&lt;/a&gt;&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;#XPUSHp&quot;&gt;&quot;XPUSHp&quot;&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d9a911ea70d9342831bb5853b21493e821263e9f" translate="yes" xml:space="preserve">
          <source>Push a string onto the stack. The stack must have room for this element. The &lt;code&gt;len&lt;/code&gt; indicates the length of the string. Handles 'set' magic. Uses &lt;code&gt;TARG&lt;/code&gt; , so &lt;code&gt;dTARGET&lt;/code&gt; or &lt;code&gt;dXSTARG&lt;/code&gt; should be called to declare it. Do not call multiple &lt;code&gt;TARG&lt;/code&gt; -oriented macros to return lists from XSUB's - see &lt;code&gt;mPUSHp&lt;/code&gt; instead. See also &lt;code&gt;XPUSHp&lt;/code&gt; and &lt;code&gt;mXPUSHp&lt;/code&gt; .</source>
          <target state="translated">文字列をスタックにプッシュします。スタックには、この要素のためのスペースが必要です。 &lt;code&gt;len&lt;/code&gt; は文字列の長さを示します。「セット」マジックを処理します。使用 &lt;code&gt;TARG&lt;/code&gt; は、そう &lt;code&gt;dTARGET&lt;/code&gt; または &lt;code&gt;dXSTARG&lt;/code&gt; はそれを宣言するために呼び出す必要があります。XSUBからリストを返すために複数の &lt;code&gt;TARG&lt;/code&gt; 指向のマクロを呼び出さないでください。代わりに &lt;code&gt;mPUSHp&lt;/code&gt; を参照してください。 &lt;code&gt;XPUSHp&lt;/code&gt; および &lt;code&gt;mXPUSHp&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="0e7713307ab92ab800987ead343a488df73e81b1" translate="yes" xml:space="preserve">
          <source>Push a string onto the stack. The stack must have room for this element. The &lt;code&gt;len&lt;/code&gt; indicates the length of the string. Handles 'set' magic. Uses &lt;code&gt;TARG&lt;/code&gt;, so &lt;code&gt;dTARGET&lt;/code&gt; or &lt;code&gt;dXSTARG&lt;/code&gt; should be called to declare it. Do not call multiple &lt;code&gt;TARG&lt;/code&gt;-oriented macros to return lists from XSUB's - see &lt;code&gt;&lt;a href=&quot;#mPUSHp&quot;&gt;&quot;mPUSHp&quot;&lt;/a&gt;&lt;/code&gt; instead. See also &lt;code&gt;&lt;a href=&quot;#XPUSHp&quot;&gt;&quot;XPUSHp&quot;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#mXPUSHp&quot;&gt;&quot;mXPUSHp&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">文字列をスタックにプッシュします。スタックには、この要素のためのスペースが必要です。 &lt;code&gt;len&lt;/code&gt; は文字列の長さを示します。'set'マジックを処理します。使用 &lt;code&gt;TARG&lt;/code&gt; は、そう &lt;code&gt;dTARGET&lt;/code&gt; または &lt;code&gt;dXSTARG&lt;/code&gt; はそれを宣言するために呼び出す必要があります。XSUBからリストを返すために複数の &lt;code&gt;TARG&lt;/code&gt; 指向のマクロを呼び出さないでください。代わりに &lt;code&gt;&lt;a href=&quot;#mPUSHp&quot;&gt;&quot;mPUSHp&quot;&lt;/a&gt;&lt;/code&gt; 参照してください。 &lt;code&gt;&lt;a href=&quot;#XPUSHp&quot;&gt;&quot;XPUSHp&quot;&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;#mXPUSHp&quot;&gt;&quot;mXPUSHp&quot;&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="fd4f487a995fc117ee3f859541e8cb6d7b1f0e03" translate="yes" xml:space="preserve">
          <source>Push an SV onto the end of the array, creating the array if necessary. A small internal helper function to remove a commonly duplicated idiom.</source>
          <target state="translated">SVを配列の端に押し付け、必要に応じて配列を作成します。よくある重複したイディオムを削除するための小さな内部ヘルパー関数。</target>
        </trans-unit>
        <trans-unit id="b343c728ee2d1e80e5d3bfd57c4ca6151b8a3b56" translate="yes" xml:space="preserve">
          <source>Push an SV onto the stack and mortalizes the SV. The stack must have room for this element. Does not use &lt;code&gt;TARG&lt;/code&gt; . See also &lt;code&gt;PUSHs&lt;/code&gt; and &lt;code&gt;mXPUSHs&lt;/code&gt; .</source>
          <target state="translated">SVをスタックにプッシュし、SVを死滅させます。スタックには、この要素のためのスペースが必要です。 &lt;code&gt;TARG&lt;/code&gt; を使用しません。 &lt;code&gt;PUSHs&lt;/code&gt; および &lt;code&gt;mXPUSHs&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="2fa9dedfee4109c0fe13da67a46fccbb5bbf5a44" translate="yes" xml:space="preserve">
          <source>Push an SV onto the stack and mortalizes the SV. The stack must have room for this element. Does not use &lt;code&gt;TARG&lt;/code&gt;. See also &lt;code&gt;&lt;a href=&quot;#PUSHs&quot;&gt;&quot;PUSHs&quot;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#mXPUSHs&quot;&gt;&quot;mXPUSHs&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">SVをスタックにプッシュし、SVを致命化します。スタックには、この要素のためのスペースが必要です。 &lt;code&gt;TARG&lt;/code&gt; を使用しません。 &lt;code&gt;&lt;a href=&quot;#PUSHs&quot;&gt;&quot;PUSHs&quot;&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;#mXPUSHs&quot;&gt;&quot;mXPUSHs&quot;&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="d5312b573b0539c30e0048cb9b278d19e1907b13" translate="yes" xml:space="preserve">
          <source>Push an SV onto the stack, extending the stack if necessary and mortalizes the SV. Does not use &lt;code&gt;TARG&lt;/code&gt; . See also &lt;code&gt;XPUSHs&lt;/code&gt; and &lt;code&gt;mPUSHs&lt;/code&gt; .</source>
          <target state="translated">SVをスタックにプッシュし、必要に応じてスタックを拡張して、SVを死滅させます。 &lt;code&gt;TARG&lt;/code&gt; を使用しません。 &lt;code&gt;XPUSHs&lt;/code&gt; と &lt;code&gt;mPUSHs&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="c9d98d6f5e72c3e38da580674d51b78f71fb6e96" translate="yes" xml:space="preserve">
          <source>Push an SV onto the stack, extending the stack if necessary and mortalizes the SV. Does not use &lt;code&gt;TARG&lt;/code&gt;. See also &lt;code&gt;&lt;a href=&quot;#XPUSHs&quot;&gt;&quot;XPUSHs&quot;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#mPUSHs&quot;&gt;&quot;mPUSHs&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">SVをスタックにプッシュし、必要に応じてスタックを拡張して、SVを致命化します。 &lt;code&gt;TARG&lt;/code&gt; を使用しません。 &lt;code&gt;&lt;a href=&quot;#XPUSHs&quot;&gt;&quot;XPUSHs&quot;&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;#mPUSHs&quot;&gt;&quot;mPUSHs&quot;&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="3bca75cd1625b95babebf1b4bb8d0ca93544cbe6" translate="yes" xml:space="preserve">
          <source>Push an SV onto the stack, extending the stack if necessary. Does not handle 'set' magic. Does not use &lt;code&gt;TARG&lt;/code&gt; . See also &lt;code&gt;XPUSHmortal&lt;/code&gt; , &lt;code&gt;PUSHs&lt;/code&gt; and &lt;code&gt;PUSHmortal&lt;/code&gt; .</source>
          <target state="translated">SVをスタックにプッシュし、必要に応じてスタックを拡張します。「セット」マジックを処理しません。 &lt;code&gt;TARG&lt;/code&gt; を使用しません。 &lt;code&gt;XPUSHmortal&lt;/code&gt; 、 &lt;code&gt;PUSHs&lt;/code&gt; 、 &lt;code&gt;PUSHmortal&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="8df3552fedfaff71e845be14cd4597f13e28e228" translate="yes" xml:space="preserve">
          <source>Push an SV onto the stack, extending the stack if necessary. Does not handle 'set' magic. Does not use &lt;code&gt;TARG&lt;/code&gt;. See also &lt;code&gt;&lt;a href=&quot;#XPUSHmortal&quot;&gt;&quot;XPUSHmortal&quot;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;PUSHs&lt;/code&gt; and &lt;code&gt;PUSHmortal&lt;/code&gt;.</source>
          <target state="translated">SVをスタックにプッシュし、必要に応じてスタックを拡張します。'set'マジックを処理しません。 &lt;code&gt;TARG&lt;/code&gt; を使用しません。 &lt;code&gt;&lt;a href=&quot;#XPUSHmortal&quot;&gt;&quot;XPUSHmortal&quot;&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;PUSHs&lt;/code&gt; および &lt;code&gt;PUSHmortal&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="824e75a21802eb656ab26e370eb8bc67c5ffb828" translate="yes" xml:space="preserve">
          <source>Push an SV onto the stack. The stack must have room for this element. Does not handle 'set' magic. Does not use &lt;code&gt;TARG&lt;/code&gt; . See also &lt;code&gt;PUSHmortal&lt;/code&gt; , &lt;code&gt;XPUSHs&lt;/code&gt; and &lt;code&gt;XPUSHmortal&lt;/code&gt; .</source>
          <target state="translated">SVをスタックにプッシュします。スタックには、この要素のためのスペースが必要です。「セット」マジックを処理しません。 &lt;code&gt;TARG&lt;/code&gt; を使用しません。 &lt;code&gt;PUSHmortal&lt;/code&gt; 、 &lt;code&gt;XPUSHs&lt;/code&gt; 、および &lt;code&gt;XPUSHmortal&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="68e32f508b1271a09ce248b9becfc719b6903e41" translate="yes" xml:space="preserve">
          <source>Push an SV onto the stack. The stack must have room for this element. Does not handle 'set' magic. Does not use &lt;code&gt;TARG&lt;/code&gt;. See also &lt;code&gt;&lt;a href=&quot;#PUSHmortal&quot;&gt;&quot;PUSHmortal&quot;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#XPUSHs&quot;&gt;&quot;XPUSHs&quot;&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#XPUSHmortal&quot;&gt;&quot;XPUSHmortal&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">SVをスタックにプッシュします。スタックには、この要素のためのスペースが必要です。'set'マジックを処理しません。 &lt;code&gt;TARG&lt;/code&gt; を使用しません。 &lt;code&gt;&lt;a href=&quot;#PUSHmortal&quot;&gt;&quot;PUSHmortal&quot;&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#XPUSHs&quot;&gt;&quot;XPUSHs&quot;&lt;/a&gt;&lt;/code&gt; 、および &lt;code&gt;&lt;a href=&quot;#XPUSHmortal&quot;&gt;&quot;XPUSHmortal&quot;&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="cb6dc36faa3e9d71d279164e8a1bebbda0173b52" translate="yes" xml:space="preserve">
          <source>Push an integer onto the stack, extending the stack if necessary. Does not use &lt;code&gt;TARG&lt;/code&gt; . See also &lt;code&gt;XPUSHi&lt;/code&gt; , &lt;code&gt;mPUSHi&lt;/code&gt; and &lt;code&gt;PUSHi&lt;/code&gt; .</source>
          <target state="translated">整数をスタックにプッシュし、必要に応じてスタックを拡張します。 &lt;code&gt;TARG&lt;/code&gt; を使用しません。 &lt;code&gt;XPUSHi&lt;/code&gt; 、 &lt;code&gt;mPUSHi&lt;/code&gt; および &lt;code&gt;PUSHi&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="ee2de45c0d60a3dcbcd7f2217bc8d834a4f761ec" translate="yes" xml:space="preserve">
          <source>Push an integer onto the stack, extending the stack if necessary. Does not use &lt;code&gt;TARG&lt;/code&gt;. See also &lt;code&gt;&lt;a href=&quot;#XPUSHi&quot;&gt;&quot;XPUSHi&quot;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#mPUSHi&quot;&gt;&quot;mPUSHi&quot;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#PUSHi&quot;&gt;&quot;PUSHi&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">整数をスタックにプッシュし、必要に応じてスタックを拡張します。 &lt;code&gt;TARG&lt;/code&gt; を使用しません。参照してください &lt;code&gt;&lt;a href=&quot;#XPUSHi&quot;&gt;&quot;XPUSHi&quot;&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#mPUSHi&quot;&gt;&quot;mPUSHi&quot;&lt;/a&gt;&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;#PUSHi&quot;&gt;&quot;PUSHi&quot;&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="88647ad486844ab79cd57c5f883ba3b63d0d33c3" translate="yes" xml:space="preserve">
          <source>Push an integer onto the stack, extending the stack if necessary. Handles 'set' magic. Uses &lt;code&gt;TARG&lt;/code&gt; , so &lt;code&gt;dTARGET&lt;/code&gt; or &lt;code&gt;dXSTARG&lt;/code&gt; should be called to declare it. Do not call multiple &lt;code&gt;TARG&lt;/code&gt; -oriented macros to return lists from XSUB's - see &lt;code&gt;mXPUSHi&lt;/code&gt; instead. See also &lt;code&gt;PUSHi&lt;/code&gt; and &lt;code&gt;mPUSHi&lt;/code&gt; .</source>
          <target state="translated">整数をスタックにプッシュし、必要に応じてスタックを拡張します。「セット」マジックを処理します。使用 &lt;code&gt;TARG&lt;/code&gt; は、そう &lt;code&gt;dTARGET&lt;/code&gt; または &lt;code&gt;dXSTARG&lt;/code&gt; はそれを宣言するために呼び出す必要があります。XSUBからリストを返すために複数の &lt;code&gt;TARG&lt;/code&gt; 指向のマクロを呼び出さないでください。代わりに &lt;code&gt;mXPUSHi&lt;/code&gt; を参照してください。 &lt;code&gt;PUSHi&lt;/code&gt; および &lt;code&gt;mPUSHi&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="028c89385d919aa5d9c6b5ba4004e9161dc1e187" translate="yes" xml:space="preserve">
          <source>Push an integer onto the stack, extending the stack if necessary. Handles 'set' magic. Uses &lt;code&gt;TARG&lt;/code&gt;, so &lt;code&gt;dTARGET&lt;/code&gt; or &lt;code&gt;dXSTARG&lt;/code&gt; should be called to declare it. Do not call multiple &lt;code&gt;TARG&lt;/code&gt;-oriented macros to return lists from XSUB's - see &lt;code&gt;&lt;a href=&quot;#mXPUSHi&quot;&gt;&quot;mXPUSHi&quot;&lt;/a&gt;&lt;/code&gt; instead. See also &lt;code&gt;&lt;a href=&quot;#PUSHi&quot;&gt;&quot;PUSHi&quot;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#mPUSHi&quot;&gt;&quot;mPUSHi&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">整数をスタックにプッシュし、必要に応じてスタックを拡張します。'set'マジックを処理します。使用 &lt;code&gt;TARG&lt;/code&gt; は、そう &lt;code&gt;dTARGET&lt;/code&gt; または &lt;code&gt;dXSTARG&lt;/code&gt; はそれを宣言するために呼び出す必要があります。XSUBからリストを返すために複数の &lt;code&gt;TARG&lt;/code&gt; 指向のマクロを呼び出さないでください。代わりに &lt;code&gt;&lt;a href=&quot;#mXPUSHi&quot;&gt;&quot;mXPUSHi&quot;&lt;/a&gt;&lt;/code&gt; 参照してください。 &lt;code&gt;&lt;a href=&quot;#PUSHi&quot;&gt;&quot;PUSHi&quot;&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;#mPUSHi&quot;&gt;&quot;mPUSHi&quot;&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="68712d908f28865c0c0fdea7d6b33cd088c74252" translate="yes" xml:space="preserve">
          <source>Push an integer onto the stack. The stack must have room for this element. Does not use &lt;code&gt;TARG&lt;/code&gt; . See also &lt;code&gt;PUSHi&lt;/code&gt; , &lt;code&gt;mXPUSHi&lt;/code&gt; and &lt;code&gt;XPUSHi&lt;/code&gt; .</source>
          <target state="translated">スタックに整数をプッシュします。スタックには、この要素のためのスペースが必要です。 &lt;code&gt;TARG&lt;/code&gt; を使用しません。 &lt;code&gt;PUSHi&lt;/code&gt; 、 &lt;code&gt;mXPUSHi&lt;/code&gt; および &lt;code&gt;XPUSHi&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="efce1d4478ed0bd263a24037f69f98de885bcd71" translate="yes" xml:space="preserve">
          <source>Push an integer onto the stack. The stack must have room for this element. Does not use &lt;code&gt;TARG&lt;/code&gt;. See also &lt;code&gt;&lt;a href=&quot;#PUSHi&quot;&gt;&quot;PUSHi&quot;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#mXPUSHi&quot;&gt;&quot;mXPUSHi&quot;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#XPUSHi&quot;&gt;&quot;XPUSHi&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">整数をスタックにプッシュします。スタックには、この要素のためのスペースが必要です。 &lt;code&gt;TARG&lt;/code&gt; を使用しません。参照してください &lt;code&gt;&lt;a href=&quot;#PUSHi&quot;&gt;&quot;PUSHi&quot;&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#mXPUSHi&quot;&gt;&quot;mXPUSHi&quot;&lt;/a&gt;&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;#XPUSHi&quot;&gt;&quot;XPUSHi&quot;&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3fa57788c5592676cc0034ebc6edf40f41590038" translate="yes" xml:space="preserve">
          <source>Push an integer onto the stack. The stack must have room for this element. Handles 'set' magic. Uses &lt;code&gt;TARG&lt;/code&gt; , so &lt;code&gt;dTARGET&lt;/code&gt; or &lt;code&gt;dXSTARG&lt;/code&gt; should be called to declare it. Do not call multiple &lt;code&gt;TARG&lt;/code&gt; -oriented macros to return lists from XSUB's - see &lt;code&gt;mPUSHi&lt;/code&gt; instead. See also &lt;code&gt;XPUSHi&lt;/code&gt; and &lt;code&gt;mXPUSHi&lt;/code&gt; .</source>
          <target state="translated">スタックに整数をプッシュします。スタックには、この要素のためのスペースが必要です。「セット」マジックを処理します。使用 &lt;code&gt;TARG&lt;/code&gt; は、そう &lt;code&gt;dTARGET&lt;/code&gt; または &lt;code&gt;dXSTARG&lt;/code&gt; はそれを宣言するために呼び出す必要があります。XSUBからリストを返すために複数の &lt;code&gt;TARG&lt;/code&gt; 指向のマクロを呼び出さないでください。代わりに &lt;code&gt;mPUSHi&lt;/code&gt; を参照してください。 &lt;code&gt;XPUSHi&lt;/code&gt; および &lt;code&gt;mXPUSHi&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="86fe36ad36fc20d571ada042d4b2ceb0e025d8a3" translate="yes" xml:space="preserve">
          <source>Push an integer onto the stack. The stack must have room for this element. Handles 'set' magic. Uses &lt;code&gt;TARG&lt;/code&gt;, so &lt;code&gt;dTARGET&lt;/code&gt; or &lt;code&gt;dXSTARG&lt;/code&gt; should be called to declare it. Do not call multiple &lt;code&gt;TARG&lt;/code&gt;-oriented macros to return lists from XSUB's - see &lt;code&gt;&lt;a href=&quot;#mPUSHi&quot;&gt;&quot;mPUSHi&quot;&lt;/a&gt;&lt;/code&gt; instead. See also &lt;code&gt;&lt;a href=&quot;#XPUSHi&quot;&gt;&quot;XPUSHi&quot;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#mXPUSHi&quot;&gt;&quot;mXPUSHi&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">整数をスタックにプッシュします。スタックには、この要素のためのスペースが必要です。'set'マジックを処理します。使用 &lt;code&gt;TARG&lt;/code&gt; は、そう &lt;code&gt;dTARGET&lt;/code&gt; または &lt;code&gt;dXSTARG&lt;/code&gt; はそれを宣言するために呼び出す必要があります。XSUBからリストを返すために複数の &lt;code&gt;TARG&lt;/code&gt; 指向のマクロを呼び出さないでください。代わりに &lt;code&gt;&lt;a href=&quot;#mPUSHi&quot;&gt;&quot;mPUSHi&quot;&lt;/a&gt;&lt;/code&gt; 参照してください。 &lt;code&gt;&lt;a href=&quot;#XPUSHi&quot;&gt;&quot;XPUSHi&quot;&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;#mXPUSHi&quot;&gt;&quot;mXPUSHi&quot;&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="8504827aba00612364edada9d7d5d6f00e686e9f" translate="yes" xml:space="preserve">
          <source>Push an unsigned integer onto the stack, extending the stack if necessary. Does not use &lt;code&gt;TARG&lt;/code&gt; . See also &lt;code&gt;XPUSHu&lt;/code&gt; , &lt;code&gt;mPUSHu&lt;/code&gt; and &lt;code&gt;PUSHu&lt;/code&gt; .</source>
          <target state="translated">符号なし整数をスタックにプッシュし、必要に応じてスタックを拡張します。 &lt;code&gt;TARG&lt;/code&gt; を使用しません。 &lt;code&gt;XPUSHu&lt;/code&gt; 、 &lt;code&gt;mPUSHu&lt;/code&gt; および &lt;code&gt;PUSHu&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="9c17ad066eabe1660a0c3c80bf0619e347847f43" translate="yes" xml:space="preserve">
          <source>Push an unsigned integer onto the stack, extending the stack if necessary. Does not use &lt;code&gt;TARG&lt;/code&gt;. See also &lt;code&gt;&lt;a href=&quot;#XPUSHu&quot;&gt;&quot;XPUSHu&quot;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#mPUSHu&quot;&gt;&quot;mPUSHu&quot;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#PUSHu&quot;&gt;&quot;PUSHu&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">符号なし整数をスタックにプッシュし、必要に応じてスタックを拡張します。 &lt;code&gt;TARG&lt;/code&gt; を使用しません。参照してください &lt;code&gt;&lt;a href=&quot;#XPUSHu&quot;&gt;&quot;XPUSHu&quot;&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#mPUSHu&quot;&gt;&quot;mPUSHu&quot;&lt;/a&gt;&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;#PUSHu&quot;&gt;&quot;PUSHu&quot;&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a877c4f095d8e369d65c6c9f26769538191ceb6a" translate="yes" xml:space="preserve">
          <source>Push an unsigned integer onto the stack, extending the stack if necessary. Handles 'set' magic. Uses &lt;code&gt;TARG&lt;/code&gt; , so &lt;code&gt;dTARGET&lt;/code&gt; or &lt;code&gt;dXSTARG&lt;/code&gt; should be called to declare it. Do not call multiple &lt;code&gt;TARG&lt;/code&gt; -oriented macros to return lists from XSUB's - see &lt;code&gt;mXPUSHu&lt;/code&gt; instead. See also &lt;code&gt;PUSHu&lt;/code&gt; and &lt;code&gt;mPUSHu&lt;/code&gt; .</source>
          <target state="translated">符号なし整数をスタックにプッシュし、必要に応じてスタックを拡張します。「セット」マジックを処理します。使用 &lt;code&gt;TARG&lt;/code&gt; は、そう &lt;code&gt;dTARGET&lt;/code&gt; または &lt;code&gt;dXSTARG&lt;/code&gt; はそれを宣言するために呼び出す必要があります。XSUBからリストを返すために複数の &lt;code&gt;TARG&lt;/code&gt; 指向のマクロを呼び出さないでください。代わりに &lt;code&gt;mXPUSHu&lt;/code&gt; を参照してください。 &lt;code&gt;PUSHu&lt;/code&gt; および &lt;code&gt;mPUSHu&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="a366ba0226f782f8d8282435ae88bd7e4329d343" translate="yes" xml:space="preserve">
          <source>Push an unsigned integer onto the stack, extending the stack if necessary. Handles 'set' magic. Uses &lt;code&gt;TARG&lt;/code&gt;, so &lt;code&gt;dTARGET&lt;/code&gt; or &lt;code&gt;dXSTARG&lt;/code&gt; should be called to declare it. Do not call multiple &lt;code&gt;TARG&lt;/code&gt;-oriented macros to return lists from XSUB's - see &lt;code&gt;&lt;a href=&quot;#mXPUSHu&quot;&gt;&quot;mXPUSHu&quot;&lt;/a&gt;&lt;/code&gt; instead. See also &lt;code&gt;&lt;a href=&quot;#PUSHu&quot;&gt;&quot;PUSHu&quot;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#mPUSHu&quot;&gt;&quot;mPUSHu&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">符号なし整数をスタックにプッシュし、必要に応じてスタックを拡張します。'set'マジックを処理します。使用 &lt;code&gt;TARG&lt;/code&gt; は、そう &lt;code&gt;dTARGET&lt;/code&gt; または &lt;code&gt;dXSTARG&lt;/code&gt; はそれを宣言するために呼び出す必要があります。XSUBからリストを返すために複数の &lt;code&gt;TARG&lt;/code&gt; 指向のマクロを呼び出さないでください。代わりに &lt;code&gt;&lt;a href=&quot;#mXPUSHu&quot;&gt;&quot;mXPUSHu&quot;&lt;/a&gt;&lt;/code&gt; 参照してください。 &lt;code&gt;&lt;a href=&quot;#PUSHu&quot;&gt;&quot;PUSHu&quot;&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;#mPUSHu&quot;&gt;&quot;mPUSHu&quot;&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="5f5198e2166eb928f9d3653b92f6feb785e942a5" translate="yes" xml:space="preserve">
          <source>Push an unsigned integer onto the stack. The stack must have room for this element. Does not use &lt;code&gt;TARG&lt;/code&gt; . See also &lt;code&gt;PUSHu&lt;/code&gt; , &lt;code&gt;mXPUSHu&lt;/code&gt; and &lt;code&gt;XPUSHu&lt;/code&gt; .</source>
          <target state="translated">符号なし整数をスタックにプッシュします。スタックには、この要素のためのスペースが必要です。 &lt;code&gt;TARG&lt;/code&gt; を使用しません。 &lt;code&gt;PUSHu&lt;/code&gt; 、 &lt;code&gt;mXPUSHu&lt;/code&gt; および &lt;code&gt;XPUSHu&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="67569748c98646cd1f2f796f378ca27e418dfd2a" translate="yes" xml:space="preserve">
          <source>Push an unsigned integer onto the stack. The stack must have room for this element. Does not use &lt;code&gt;TARG&lt;/code&gt;. See also &lt;code&gt;&lt;a href=&quot;#PUSHu&quot;&gt;&quot;PUSHu&quot;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#mXPUSHu&quot;&gt;&quot;mXPUSHu&quot;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#XPUSHu&quot;&gt;&quot;XPUSHu&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">符号なし整数をスタックにプッシュします。スタックには、この要素のためのスペースが必要です。 &lt;code&gt;TARG&lt;/code&gt; を使用しません。参照してください &lt;code&gt;&lt;a href=&quot;#PUSHu&quot;&gt;&quot;PUSHu&quot;&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#mXPUSHu&quot;&gt;&quot;mXPUSHu&quot;&lt;/a&gt;&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;#XPUSHu&quot;&gt;&quot;XPUSHu&quot;&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="613f8f689dc3e62438ff571be557fb9cb05e44a4" translate="yes" xml:space="preserve">
          <source>Push an unsigned integer onto the stack. The stack must have room for this element. Handles 'set' magic. Uses &lt;code&gt;TARG&lt;/code&gt; , so &lt;code&gt;dTARGET&lt;/code&gt; or &lt;code&gt;dXSTARG&lt;/code&gt; should be called to declare it. Do not call multiple &lt;code&gt;TARG&lt;/code&gt; -oriented macros to return lists from XSUB's - see &lt;code&gt;mPUSHu&lt;/code&gt; instead. See also &lt;code&gt;XPUSHu&lt;/code&gt; and &lt;code&gt;mXPUSHu&lt;/code&gt; .</source>
          <target state="translated">符号なし整数をスタックにプッシュします。スタックには、この要素のためのスペースが必要です。「セット」マジックを処理します。使用 &lt;code&gt;TARG&lt;/code&gt; は、そう &lt;code&gt;dTARGET&lt;/code&gt; または &lt;code&gt;dXSTARG&lt;/code&gt; はそれを宣言するために呼び出す必要があります。XSUBからリストを返すために複数の &lt;code&gt;TARG&lt;/code&gt; 指向のマクロを呼び出さないでください。代わりに &lt;code&gt;mPUSHu&lt;/code&gt; を参照してください。 &lt;code&gt;XPUSHu&lt;/code&gt; および &lt;code&gt;mXPUSHu&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="840fc79e52b20ca79d4ce924afd0b464d8e96739" translate="yes" xml:space="preserve">
          <source>Push an unsigned integer onto the stack. The stack must have room for this element. Handles 'set' magic. Uses &lt;code&gt;TARG&lt;/code&gt;, so &lt;code&gt;dTARGET&lt;/code&gt; or &lt;code&gt;dXSTARG&lt;/code&gt; should be called to declare it. Do not call multiple &lt;code&gt;TARG&lt;/code&gt;-oriented macros to return lists from XSUB's - see &lt;code&gt;&lt;a href=&quot;#mPUSHu&quot;&gt;&quot;mPUSHu&quot;&lt;/a&gt;&lt;/code&gt; instead. See also &lt;code&gt;&lt;a href=&quot;#XPUSHu&quot;&gt;&quot;XPUSHu&quot;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#mXPUSHu&quot;&gt;&quot;mXPUSHu&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">符号なし整数をスタックにプッシュします。スタックには、この要素のためのスペースが必要です。'set'マジックを処理します。使用 &lt;code&gt;TARG&lt;/code&gt; は、そう &lt;code&gt;dTARGET&lt;/code&gt; または &lt;code&gt;dXSTARG&lt;/code&gt; はそれを宣言するために呼び出す必要があります。XSUBからリストを返すために複数の &lt;code&gt;TARG&lt;/code&gt; 指向のマクロを呼び出さないでください。代わりに &lt;code&gt;&lt;a href=&quot;#mPUSHu&quot;&gt;&quot;mPUSHu&quot;&lt;/a&gt;&lt;/code&gt; 参照してください。 &lt;code&gt;&lt;a href=&quot;#XPUSHu&quot;&gt;&quot;XPUSHu&quot;&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;#mXPUSHu&quot;&gt;&quot;mXPUSHu&quot;&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="18581b2c0e575f64a8c4dfe4233bd04ffb3c85d9" translate="yes" xml:space="preserve">
          <source>Push the current state of the stack pointer onto the mark stack. This is so that when we've finished adding items to the argument stack, Perl knows how many things we've added recently.</source>
          <target state="translated">スタックポインタの現在の状態をマークスタックにプッシュします。これは、引数スタックへの項目の追加が終わったときに、Perl が最近追加した項目の数を知ることができるようにするためのものです。</target>
        </trans-unit>
        <trans-unit id="642207a364dc0ed935815a73a54aa952388d41cd" translate="yes" xml:space="preserve">
          <source>Pushed</source>
          <target state="translated">Pushed</target>
        </trans-unit>
        <trans-unit id="fd9eb04bba7369fac67bb272487aea83de30e396" translate="yes" xml:space="preserve">
          <source>Pushes a character with the given ordinal value back onto the given handle's input stream. Only one character of pushback per handle is guaranteed.</source>
          <target state="translated">与えられた順序値を持つ文字を、与えられたハンドルの入力ストリームにプッシュバックします。1 つのハンドルにつき 1 文字のみのプッシュバックが保証されています。</target>
        </trans-unit>
        <trans-unit id="aa21e617b01e41036064c4a671ebb9cb150a2b67" translate="yes" xml:space="preserve">
          <source>Pushes an SV (transferring control of one reference count) onto the end of the array. The array will grow automatically to accommodate the addition.</source>
          <target state="translated">SV(1つの参照カウントの制御を転送)をアレイの端に押し込みます。配列は、追加された分だけ自動的に成長します。</target>
        </trans-unit>
        <trans-unit id="a106600342c596f57fb0e1a9b6c18c52f7dcd966" translate="yes" xml:space="preserve">
          <source>Pushes an SV onto the end of the array. The array will grow automatically to accommodate the addition. This takes ownership of one reference count.</source>
          <target state="translated">SV を配列の端に押し付けます。配列は追加された分だけ自動的に成長します。これは1つの参照カウントを所有します。</target>
        </trans-unit>
        <trans-unit id="6ccf168fe998779643f2545e93fe3eb3325a7626" translate="yes" xml:space="preserve">
          <source>Pushes the elements of &lt;code&gt;list&lt;/code&gt; to the end of the array.</source>
          <target state="translated">&lt;code&gt;list&lt;/code&gt; の要素を配列の最後にプッシュします。</target>
        </trans-unit>
        <trans-unit id="1a67421c65ebcbec6ecf93fc8121206f9a6219cd" translate="yes" xml:space="preserve">
          <source>Pushes the elements of &lt;code&gt;list&lt;/code&gt; to the start of the array.</source>
          <target state="translated">&lt;code&gt;list&lt;/code&gt; の要素を配列の先頭にプッシュします。</target>
        </trans-unit>
        <trans-unit id="9e31d51eef6a92b12ce1e2ef3c07315f688fe898" translate="yes" xml:space="preserve">
          <source>Pushing contexts</source>
          <target state="translated">コンテキストをプッシュする</target>
        </trans-unit>
        <trans-unit id="434a3543d1b51e838730a1e98071665a5312262b" translate="yes" xml:space="preserve">
          <source>Pushing multiple values in a hash option</source>
          <target state="translated">ハッシュオプションで複数の値をプッシュする</target>
        </trans-unit>
        <trans-unit id="7fd768e4fe7bd6bb51e495079370749b0bfeabc8" translate="yes" xml:space="preserve">
          <source>Put</source>
          <target state="translated">Put</target>
        </trans-unit>
        <trans-unit id="d1bc442ba313a7f986c75035df11c1f76cbd7483" translate="yes" xml:space="preserve">
          <source>Put 'hints' in the .ph files which will help in locating problems with</source>
          <target state="translated">.ph ファイルに 'hints' を記述することで、問題を見つけるのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="c69babd8dd4a14457309b07c58ef1458d1787046" translate="yes" xml:space="preserve">
          <source>Put &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale;&lt;/code&gt; in your script. The \w character class is taken from the current locale.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale;&lt;/code&gt; 置く; あなたのスクリプトで。\ w文字クラスは、現在のロケールから取得されます。</target>
        </trans-unit>
        <trans-unit id="c283a053eded707197b526829d38b24641bc66c4" translate="yes" xml:space="preserve">
          <source>Put &lt;code&gt;use locale;&lt;/code&gt; in your script. The \w character class is taken from the current locale.</source>
          <target state="translated">入れて &lt;code&gt;use locale;&lt;/code&gt; スクリプトで。\ w文字クラスは、現在のロケールから取得されます。</target>
        </trans-unit>
        <trans-unit id="47739ad806e984d84c33acd817d5e256d5c4587a" translate="yes" xml:space="preserve">
          <source>Put Pod::Simple into trace/debug mode</source>
          <target state="translated">Pod::Simpleをtrace/debugモードにする。</target>
        </trans-unit>
        <trans-unit id="493df581b024ed00be76e886a1aae031377cfaee" translate="yes" xml:space="preserve">
          <source>Put a file on the remote server. &lt;code&gt;LOCAL_FILE&lt;/code&gt; may be a name or a filehandle. If &lt;code&gt;LOCAL_FILE&lt;/code&gt; is a filehandle then &lt;code&gt;REMOTE_FILE&lt;/code&gt; must be specified. If &lt;code&gt;REMOTE_FILE&lt;/code&gt; is not specified then the file will be stored in the current directory with the same leafname as &lt;code&gt;LOCAL_FILE&lt;/code&gt; .</source>
          <target state="translated">リモートサーバーにファイルを置きます。 &lt;code&gt;LOCAL_FILE&lt;/code&gt; は、名前またはファイルハンドルです。場合 &lt;code&gt;LOCAL_FILE&lt;/code&gt; がファイルハンドルで、その後 &lt;code&gt;REMOTE_FILE&lt;/code&gt; 指定しなければなりません。場合 &lt;code&gt;REMOTE_FILE&lt;/code&gt; が指定されていない場合、ファイルは同じleafnameと、現在のディレクトリに保存されます &lt;code&gt;LOCAL_FILE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ac33cc37b2b0533e83d17f6777b0e7b3265cadf4" translate="yes" xml:space="preserve">
          <source>Put a file on the remote server. &lt;code&gt;LOCAL_FILE&lt;/code&gt; may be a name or a filehandle. If &lt;code&gt;LOCAL_FILE&lt;/code&gt; is a filehandle then &lt;code&gt;REMOTE_FILE&lt;/code&gt; must be specified. If &lt;code&gt;REMOTE_FILE&lt;/code&gt; is not specified then the file will be stored in the current directory with the same leafname as &lt;code&gt;LOCAL_FILE&lt;/code&gt;.</source>
          <target state="translated">リモートサーバーにファイルを配置します。 &lt;code&gt;LOCAL_FILE&lt;/code&gt; は、名前またはファイルハンドルです。 &lt;code&gt;LOCAL_FILE&lt;/code&gt; がファイルハンドルの場合は、 &lt;code&gt;REMOTE_FILE&lt;/code&gt; を指定する必要があります。場合 &lt;code&gt;REMOTE_FILE&lt;/code&gt; が指定されていない場合、ファイルは同じleafnameと、現在のディレクトリに保存されます &lt;code&gt;LOCAL_FILE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0cd4b6437b681f5228767353df5b194b9775df90" translate="yes" xml:space="preserve">
          <source>Put an asterisk &lt;code&gt;*&lt;/code&gt; before the &lt;code&gt;v&lt;/code&gt; to override the string to use to separate the numbers:</source>
          <target state="translated">数値を区切るために使用する文字列を上書きするには、 &lt;code&gt;v&lt;/code&gt; の前にアスタリスク &lt;code&gt;*&lt;/code&gt; を付けます。</target>
        </trans-unit>
        <trans-unit id="cfdc08a06735eb7967d6f2934ce928e4dd255a09" translate="yes" xml:space="preserve">
          <source>Put each XS files into separate directories, each with their own</source>
          <target state="translated">それぞれのXSファイルを別々のディレクトリに置き、それぞれに</target>
        </trans-unit>
        <trans-unit id="d14f55f6fdcb5da01d44dd7ed243c1db7e277d01" translate="yes" xml:space="preserve">
          <source>Put site-specific architecture-dependent files into one of the following directories:</source>
          <target state="translated">サイト固有のアーキテクチャ依存のファイルを以下のディレクトリのいずれかに配置します。</target>
        </trans-unit>
        <trans-unit id="7fa7153c9aa3d5d40471d6b1b2c0b52e0c1b025d" translate="yes" xml:space="preserve">
          <source>Put that in your</source>
          <target state="translated">それをあなたの</target>
        </trans-unit>
        <trans-unit id="04d814d0c7034933ffea79f71cd116536449e7fb" translate="yes" xml:space="preserve">
          <source>Put the resulting &lt;b&gt;.ph&lt;/b&gt; files beneath &lt;b&gt;destination_dir&lt;/b&gt;, instead of beneath the default Perl library location (&lt;code&gt;$Config{'installsitearch'}&lt;/code&gt; ).</source>
          <target state="translated">結果の&lt;b&gt;.ph&lt;/b&gt;ファイルを、デフォルトのPerlライブラリの場所（ &lt;code&gt;$Config{'installsitearch'}&lt;/code&gt; ）の下ではなく、&lt;b&gt;destination_dirの&lt;/b&gt;下に置きます。</target>
        </trans-unit>
        <trans-unit id="3aab0c8bb2ea9d87488291a28d90b2e652e23aef" translate="yes" xml:space="preserve">
          <source>Put the resulting &lt;b&gt;.ph&lt;/b&gt; files beneath &lt;b&gt;destination_dir&lt;/b&gt;, instead of beneath the default Perl library location (&lt;code&gt;$Config{'installsitearch'}&lt;/code&gt;).</source>
          <target state="translated">結果の&lt;b&gt;.ph&lt;/b&gt;ファイルをデフォルトのPerlライブラリの場所（ &lt;code&gt;$Config{'installsitearch'}&lt;/code&gt; ）の下ではなく、&lt;b&gt;destination_dirの&lt;/b&gt;下に置きます。</target>
        </trans-unit>
        <trans-unit id="40e6c0e0dc40286e99d3fc85cf70570e01de66ee" translate="yes" xml:space="preserve">
          <source>Put this code in a separate file to be run in more than one process. Call the file</source>
          <target state="translated">このコードを別のファイルに入れて、複数のプロセスで実行できるようにします。ファイルを呼び出します。</target>
        </trans-unit>
        <trans-unit id="60ff5dc8b3b8ee10ac653e6d6e0aa7e9f1322412" translate="yes" xml:space="preserve">
          <source>Put this code in a separate file to be run in more than one process. Call this file</source>
          <target state="translated">このコードを別のファイルに入れて、複数のプロセスで実行するようにします。このファイルを</target>
        </trans-unit>
        <trans-unit id="9a2c16ad1dd4ceb42756fb3731b8a42274bc8054" translate="yes" xml:space="preserve">
          <source>Put this in</source>
          <target state="translated">これを入れて</target>
        </trans-unit>
        <trans-unit id="3984468ef6d986678e93740602be8433d764ca26" translate="yes" xml:space="preserve">
          <source>Put together, a grammar to match a basic identifier becomes</source>
          <target state="translated">まとめると、基本的な識別子にマッチする文法が</target>
        </trans-unit>
        <trans-unit id="84d55f4cab6e0e3c9f425362eef36f66277e3969" translate="yes" xml:space="preserve">
          <source>Puts a C function into the chain of check functions for a specified op type. This is the preferred way to manipulate the &lt;a href=&quot;#PL_check&quot;&gt;&quot;PL_check&quot;&lt;/a&gt; array. &lt;code&gt;opcode&lt;/code&gt; specifies which type of op is to be affected. &lt;code&gt;new_checker&lt;/code&gt; is a pointer to the C function that is to be added to that opcode's check chain, and &lt;code&gt;old_checker_p&lt;/code&gt; points to the storage location where a pointer to the next function in the chain will be stored. The value of &lt;code&gt;new_checker&lt;/code&gt; is written into the &lt;a href=&quot;#PL_check&quot;&gt;&quot;PL_check&quot;&lt;/a&gt; array, while the value previously stored there is written to &lt;code&gt;*old_checker_p&lt;/code&gt;.</source>
          <target state="translated">指定されたopタイプのチェック関数のチェーンにC関数を配置します。これは、&lt;a href=&quot;#PL_check&quot;&gt;「PL_check」&lt;/a&gt;配列を操作するための推奨される方法です。 &lt;code&gt;opcode&lt;/code&gt; は、影響を受けるopのタイプを指定します。 &lt;code&gt;new_checker&lt;/code&gt; は、そのオペコードのチェックチェーンに追加されるC関数へのポインターであり、 &lt;code&gt;old_checker_p&lt;/code&gt; は、チェーン内の次の関数へのポインターが格納される格納場所を指します。 &lt;code&gt;new_checker&lt;/code&gt; の値は&lt;a href=&quot;#PL_check&quot;&gt;「PL_check」&lt;/a&gt;配列に書き込まれ、以前にそこに格納された値は &lt;code&gt;*old_checker_p&lt;/code&gt; に書き込まれます。</target>
        </trans-unit>
        <trans-unit id="b81b3040dcaf2eeda56068119211b063246e32f5" translate="yes" xml:space="preserve">
          <source>Puts a C function into the chain of check functions for a specified op type. This is the preferred way to manipulate the &lt;a href=&quot;#PL_check&quot;&gt;PL_check&lt;/a&gt; array.</source>
          <target state="translated">C関数を、指定されたopタイプのチェック関数のチェーンに入れます。これは、&lt;a href=&quot;#PL_check&quot;&gt;PL_check&lt;/a&gt;配列を操作する好ましい方法です。</target>
        </trans-unit>
        <trans-unit id="e37b83ad4bff75961db90d3f62a6f45530b692b7" translate="yes" xml:space="preserve">
          <source>Puts a C function into the chain of keyword plugins. This is the preferred way to manipulate the &lt;a href=&quot;#PL_keyword_plugin&quot;&gt;&quot;PL_keyword_plugin&quot;&lt;/a&gt; variable. &lt;code&gt;new_plugin&lt;/code&gt; is a pointer to the C function that is to be added to the keyword plugin chain, and &lt;code&gt;old_plugin_p&lt;/code&gt; points to the storage location where a pointer to the next function in the chain will be stored. The value of &lt;code&gt;new_plugin&lt;/code&gt; is written into the &lt;a href=&quot;#PL_keyword_plugin&quot;&gt;&quot;PL_keyword_plugin&quot;&lt;/a&gt; variable, while the value previously stored there is written to &lt;code&gt;*old_plugin_p&lt;/code&gt;.</source>
          <target state="translated">C関数をキーワードプラグインのチェーンに配置します。これは、&lt;a href=&quot;#PL_keyword_plugin&quot;&gt;「PL_keyword_plugin」&lt;/a&gt;変数を操作するための推奨される方法です。 &lt;code&gt;new_plugin&lt;/code&gt; は、キーワードプラグインチェーンに追加されるC関数へのポインターであり、 &lt;code&gt;old_plugin_p&lt;/code&gt; は、チェーン内の次の関数へのポインターが格納される格納場所を指します。 &lt;code&gt;new_plugin&lt;/code&gt; の値は&lt;a href=&quot;#PL_keyword_plugin&quot;&gt;「PL_keyword_plugin」&lt;/a&gt;変数に書き込まれ、以前にそこに格納された値は &lt;code&gt;*old_plugin_p&lt;/code&gt; に書き込まれます。</target>
        </trans-unit>
        <trans-unit id="d77f4ddf35623d313f60eab18e7956a5f55b5242" translate="yes" xml:space="preserve">
          <source>Puts the targets necessary for 'make dist' together into one make fragment.</source>
          <target state="translated">make dist' に必要なターゲットを一つの make フラグメントにまとめます。</target>
        </trans-unit>
        <trans-unit id="0d94544ade0f2950579f15818313dfb90a811531" translate="yes" xml:space="preserve">
          <source>Putting a C value on Perl stack</source>
          <target state="translated">PerlスタックにCの値を置く</target>
        </trans-unit>
        <trans-unit id="c3c0fee583fe73ce38904eadb090b95782b9afc1" translate="yes" xml:space="preserve">
          <source>Putting a fancy &lt;b&gt;data structure&lt;/b&gt; into linear order so that it can be stored as a &lt;b&gt;string&lt;/b&gt; in a disk file or database, or sent through a &lt;b&gt;pipe&lt;/b&gt;. Also called marshalling.</source>
          <target state="translated">ファンシー&lt;b&gt;データ構造&lt;/b&gt;を線形順序に配置して、ディスクファイルまたはデータベースに&lt;b&gt;文字列&lt;/b&gt;として格納したり、&lt;b&gt;パイプを&lt;/b&gt;介して送信したりできるようにします。マーシャリングとも呼ばれます。</target>
        </trans-unit>
        <trans-unit id="6ebbf4b51e58300b77d8060b5d5709fd9450e224" translate="yes" xml:space="preserve">
          <source>Putting all the parts together, we get a regexp that matches numbers:</source>
          <target state="translated">すべてのパーツをまとめると、数字にマッチする正規表現が得られます。</target>
        </trans-unit>
        <trans-unit id="6a9848562f434be6cca42f48ae11db504a53636d" translate="yes" xml:space="preserve">
          <source>Putting it all together, you have:</source>
          <target state="translated">すべてをまとめて、あなたは持っています。</target>
        </trans-unit>
        <trans-unit id="714469b1b08282dd234705283b15605ad8a9c22d" translate="yes" xml:space="preserve">
          <source>Python 2.3 MRO</source>
          <target state="translated">Python 2.3 MRO</target>
        </trans-unit>
        <trans-unit id="50ce8d29cdd017042415616b75b34f884b476435" translate="yes" xml:space="preserve">
          <source>Python 2.3 MRO related links</source>
          <target state="translated">Python 2.3 MRO関連のリンク</target>
        </trans-unit>
        <trans-unit id="c3156e00d3c2588c639e0d3cf6821258b05761c7" translate="yes" xml:space="preserve">
          <source>Q</source>
          <target state="translated">Q</target>
        </trans-unit>
        <trans-unit id="b7b445f989c7a304e6e26500eee0e35e636e184c" translate="yes" xml:space="preserve">
          <source>Q and A</source>
          <target state="translated">問答</target>
        </trans-unit>
        <trans-unit id="908d9b09fc523e58d49da45f3501c5e3ad0a3b94" translate="yes" xml:space="preserve">
          <source>Q and A (or FAQ)</source>
          <target state="translated">Q&amp;A(またはよくある質問</target>
        </trans-unit>
        <trans-unit id="07773e96ffc48159cc70865c7557ce206967e551" translate="yes" xml:space="preserve">
          <source>QNX Neutrino RTOS (6.5.0)</source>
          <target state="translated">QNX Neutrino RTOS(6.5.0</target>
        </trans-unit>
        <trans-unit id="3c1785f5e41e8062b156fa579adb0413cfb85e23" translate="yes" xml:space="preserve">
          <source>QNX auxiliary files</source>
          <target state="translated">QNX 補助ファイル</target>
        </trans-unit>
        <trans-unit id="4cf27a6f1f7cbc27550b7c2ba303e89cb36e8e14" translate="yes" xml:space="preserve">
          <source>QNX specific subclass of ExtUtils::MM_Unix</source>
          <target state="translated">ExtUtils::MM_Unix の QNX 固有のサブクラス</target>
        </trans-unit>
        <trans-unit id="20d507c7120c3d5b527b26a3fb978cdf1ac44faf" translate="yes" xml:space="preserve">
          <source>QUANTIFIERS</source>
          <target state="translated">QUANTIFIERS</target>
        </trans-unit>
        <trans-unit id="9decc00e3d065b650a870ccca4c5e0654258f0b8" translate="yes" xml:space="preserve">
          <source>QUEUE CREATION</source>
          <target state="translated">キュー・クリエイション</target>
        </trans-unit>
        <trans-unit id="41017e2c9792619e0fd0ffe76075b745bc93b06d" translate="yes" xml:space="preserve">
          <source>QUICK CHECKLIST</source>
          <target state="translated">クイックチェックリスト</target>
        </trans-unit>
        <trans-unit id="a500376a8fe35f15c46f906227d1a82650ca2b3c" translate="yes" xml:space="preserve">
          <source>QUICK OVERVIEW</source>
          <target state="translated">簡単な概要</target>
        </trans-unit>
        <trans-unit id="3aad6cae9d9ca0517324f333e5937179f5104dbc" translate="yes" xml:space="preserve">
          <source>QUICK START GUIDE</source>
          <target state="translated">クイックスタートガイド</target>
        </trans-unit>
        <trans-unit id="83ef3e6cee83cb88a39814638a94fa1ad33e65a5" translate="yes" xml:space="preserve">
          <source>Qatar</source>
          <target state="translated">Qatar</target>
        </trans-unit>
        <trans-unit id="fbeba94c4e9b16a43991c5615fab8c4406d33231" translate="yes" xml:space="preserve">
          <source>Qt</source>
          <target state="translated">Qt</target>
        </trans-unit>
        <trans-unit id="d4dc74dd982660ab83c02728a67c70b0e21df160" translate="yes" xml:space="preserve">
          <source>Qualification applies only to symbol names (strings). References are left unchanged under the assumption that they are glob references, which are qualified by their nature.</source>
          <target state="translated">適格化は、シンボル名 (文字列)にのみ適用されます。参照は、その性質上修飾されているグローバル参照であると仮定して変更されません。</target>
        </trans-unit>
        <trans-unit id="832fb40388c099969f014a37f4a9c6c068249798" translate="yes" xml:space="preserve">
          <source>Quantifier follows nothing in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="translated">数量詞は正規表現では何もフォローしません。&amp;lt;-ここにm /％s /でマーク</target>
        </trans-unit>
        <trans-unit id="c45166c7ba50383e7b4bfb3006de5b43bce7b9e2" translate="yes" xml:space="preserve">
          <source>Quantifier follows nothing in regex; marked by &amp;lt;-- HERE in m/(?i)+ &amp;lt;-- HERE /</source>
          <target state="translated">数量詞は正規表現では何も従いません。&amp;lt;/ここにm /（？i）+でマーク&amp;lt;&amp;lt;ここに/</target>
        </trans-unit>
        <trans-unit id="f1078eb747f8336eb42686d72ed6b177d35d470d" translate="yes" xml:space="preserve">
          <source>Quantifier in {,} bigger than %d in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="translated">{、}の数量詞が正規表現の％dより大きい; &amp;lt;-ここにm /％s /でマーク</target>
        </trans-unit>
        <trans-unit id="7f8003176a1ccc839e6b82b0cb171c29d16731fe" translate="yes" xml:space="preserve">
          <source>Quantifier unexpected on zero-length expression in regex m/%s/</source>
          <target state="translated">正規表現 m/%s/での長さゼロの式での量指定子の予期せぬエラー。</target>
        </trans-unit>
        <trans-unit id="3c0866446ae574353dc60852ca8f9575e6acb9f4" translate="yes" xml:space="preserve">
          <source>Quantifier {n,m} with n &amp;gt; m can't match in regex</source>
          <target state="translated">n&amp;gt; mの数量詞{n、m}は正規表現で一致できません</target>
        </trans-unit>
        <trans-unit id="26e2122c1bffe63038aa8a5ea8797636e3e1182d" translate="yes" xml:space="preserve">
          <source>Quantifier {n,m} with n &amp;gt; m can't match in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="translated">n&amp;gt; mの数量詞{n、m}は正規表現で一致できません。&amp;lt;-ここにm /％s /でマーク</target>
        </trans-unit>
        <trans-unit id="6078532ab203b30b0c8e32bb799fd87d65f55236" translate="yes" xml:space="preserve">
          <source>Quantifiers</source>
          <target state="translated">Quantifiers</target>
        </trans-unit>
        <trans-unit id="829f1fa0b9ca1bfbdf96c60ba3b43a6dd4a86313" translate="yes" xml:space="preserve">
          <source>Quantifiers are greedy by default and match the &lt;b&gt;longest&lt;/b&gt; leftmost.</source>
          <target state="translated">数量詞はデフォルトで貪欲であり、左端の&lt;b&gt;最も長いもの&lt;/b&gt;と一致します。</target>
        </trans-unit>
        <trans-unit id="08d09ac90893da3664c9f90247edf2e364722b8a" translate="yes" xml:space="preserve">
          <source>Quantifiers are used when a particular portion of a pattern needs to match a certain number (or numbers) of times. If there isn't a quantifier the number of times to match is exactly one. The following standard quantifiers are recognized:</source>
          <target state="translated">定量詞は、パターンの特定の部分が一定の回数(または数)一致する必要がある場合に使用されます。定量詞がない場合、一致する回数は正確には1回です。以下の標準的な量詞が認識されています。</target>
        </trans-unit>
        <trans-unit id="69e4a0b3ec967fedffed9c96cbabb3d643636072" translate="yes" xml:space="preserve">
          <source>Quantifiers can be used to specify how many of the previous thing you want to match on, where &quot;thing&quot; means either a literal character, one of the metacharacters listed above, or a group of characters or metacharacters in parentheses.</source>
          <target state="translated">定量詞は、マッチさせたい前の thing の数を指定するために使用できます。</target>
        </trans-unit>
        <trans-unit id="cdf8e30d84d95e2be133e931e5890cc3b6507fac" translate="yes" xml:space="preserve">
          <source>Queries or adds to the internal table of already encountered references. You must use &lt;code&gt;Reset&lt;/code&gt; to explicitly clear the table if needed. Such references are not dumped; instead, their names are inserted wherever they are encountered subsequently. This is useful especially for properly dumping subroutine references.</source>
          <target state="translated">すでに検出された参照の内部テーブルを照会または追加します。必要に応じて、 &lt;code&gt;Reset&lt;/code&gt; を使用してテーブルを明示的にクリアする必要があります。このような参照はダンプされません。代わりに、それらの名前は、その後に遭遇する場所に挿入されます。これは特に、サブルーチン参照を適切にダンプするのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="c8acae1546ffca641266d1ea873cf1eb072da5bd" translate="yes" xml:space="preserve">
          <source>Queries or replaces the internal array of user supplied names for the values that will be dumped. When called without arguments, returns the names. When called with an array of replacement names, returns the object itself. If the number of replacement names exceeds the number of values to be named, the excess names will not be used. If the number of replacement names falls short of the number of values to be named, the list of replacement names will be exhausted and remaining values will not be renamed. When called with any other type of argument, dies.</source>
          <target state="translated">ダンプされる値のためにユーザが指定した名前の内部配列を取得または置換します。引数なしで呼び出された場合は、名前を返します。置換名の配列を指定して呼び出された場合は、オブジェクト自体を返します。置換名の数が、名前を付ける値の数を超えた場合は、余った名前は使用されません。置換名の数が、名前を付ける値の数に満たない場合、置換名のリストは一掃され、残りの値は名前が変更されません。他のタイプの引数を指定して呼び出された場合は、dies。</target>
        </trans-unit>
        <trans-unit id="83faf5aa5b94da12a4877cf033f633d81c2d8f0f" translate="yes" xml:space="preserve">
          <source>Queries or replaces the internal array of values that will be dumped. When called without arguments, returns the values as a list. When called with a reference to an array of replacement values, returns the object itself. When called with any other type of argument, dies.</source>
          <target state="translated">ダンプされる値の内部配列を取得または置換します。引数なしで呼び出された場合、値をリストとして返します。置換値の配列への参照を指定して呼び出された場合は、オブジェクト自体を返します。他のタイプの引数を指定して呼び出された場合は、終了します。</target>
        </trans-unit>
        <trans-unit id="8bc6f98b3a7df078625f886e33bff03b606f80f0" translate="yes" xml:space="preserve">
          <source>Queries the option named OPTNAME associated with SOCKET at a given LEVEL. Options may exist at multiple protocol levels depending on the socket type, but at least the uppermost socket level SOL_SOCKET (defined in the &lt;a href=&quot;socket&quot;&gt;&lt;code&gt;Socket&lt;/code&gt;&lt;/a&gt; module) will exist. To query options at another level the protocol number of the appropriate protocol controlling the option should be supplied. For example, to indicate that an option is to be interpreted by the TCP protocol, LEVEL should be set to the protocol number of TCP, which you can get using &lt;a href=&quot;#getprotobyname-NAME&quot;&gt;&lt;code&gt;getprotobyname&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">指定されたLEVELでSOCKETに関連付けられたOPTNAMEという名前のオプションを照会します。オプションは、ソケットタイプに応じて複数のプロトコルレベルで存在する場合がありますが、少なくとも最上位のソケットレベルSOL_SOCKET（&lt;a href=&quot;socket&quot;&gt; &lt;code&gt;Socket&lt;/code&gt; &lt;/a&gt;モジュールで定義）が存在します。別のレベルでオプションを照会するには、オプションを制御する適切なプロトコルのプロトコル番号を指定する必要があります。たとえば、オプションがTCPプロトコルによって解釈されることを示すには、LEVELをTCPのプロトコル番号に設定する必要があります。これは&lt;a href=&quot;#getprotobyname-NAME&quot;&gt; &lt;code&gt;getprotobyname&lt;/code&gt; &lt;/a&gt;を使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="fe5bf8c7bc573767cc25100f7b66c5ffcfebc291" translate="yes" xml:space="preserve">
          <source>Queries the option named OPTNAME associated with SOCKET at a given LEVEL. Options may exist at multiple protocol levels depending on the socket type, but at least the uppermost socket level SOL_SOCKET (defined in the &lt;code&gt;Socket&lt;/code&gt; module) will exist. To query options at another level the protocol number of the appropriate protocol controlling the option should be supplied. For example, to indicate that an option is to be interpreted by the TCP protocol, LEVEL should be set to the protocol number of TCP, which you can get using &lt;code&gt;&lt;a href=&quot;functions/getprotobyname&quot;&gt;getprotobyname&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">特定のレベルでSOCKETに関連付けられているOPTNAMEという名前のオプションを照会します。オプションは、ソケットタイプに応じて複数のプロトコルレベルで存在する可能性がありますが、少なくとも最上位のソケットレベルSOL_SOCKET（ &lt;code&gt;Socket&lt;/code&gt; モジュールで定義）が存在します。別のレベルでオプションを照会するには、オプションを制御する適切なプロトコルのプロトコル番号を指定する必要があります。たとえば、オプションがTCPプロトコルによって解釈されることを示すには、LEVELをTCPのプロトコル番号に設定する必要があります。これは、 &lt;code&gt;&lt;a href=&quot;functions/getprotobyname&quot;&gt;getprotobyname&lt;/a&gt;&lt;/code&gt; を使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="54784f5a723388f9bef25d885ee8470caa2dcfd6" translate="yes" xml:space="preserve">
          <source>Queries the option named OPTNAME associated with SOCKET at a given LEVEL. Options may exist at multiple protocol levels depending on the socket type, but at least the uppermost socket level SOL_SOCKET (defined in the &lt;code&gt;Socket&lt;/code&gt; module) will exist. To query options at another level the protocol number of the appropriate protocol controlling the option should be supplied. For example, to indicate that an option is to be interpreted by the TCP protocol, LEVEL should be set to the protocol number of TCP, which you can get using &lt;code&gt;&lt;a href=&quot;getprotobyname&quot;&gt;getprotobyname&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">特定のレベルでSOCKETに関連付けられているOPTNAMEという名前のオプションを照会します。オプションは、ソケットタイプに応じて複数のプロトコルレベルで存在する可能性がありますが、少なくとも最上位のソケットレベルSOL_SOCKET（ &lt;code&gt;Socket&lt;/code&gt; モジュールで定義）が存在します。別のレベルでオプションを照会するには、オプションを制御する適切なプロトコルのプロトコル番号を指定する必要があります。たとえば、オプションがTCPプロトコルによって解釈されることを示すには、LEVELをTCPのプロトコル番号に設定する必要があります。これは、 &lt;code&gt;&lt;a href=&quot;getprotobyname&quot;&gt;getprotobyname&lt;/a&gt;&lt;/code&gt; を使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="49ce437d64f5ded5d2e1a936b1bee65897d9e9e3" translate="yes" xml:space="preserve">
          <source>Query locale information</source>
          <target state="translated">ロケール情報を問い合わせる</target>
        </trans-unit>
        <trans-unit id="aff0621a85b75d3f9b0bce73acd70ea9b7db4b3c" translate="yes" xml:space="preserve">
          <source>Query, download and build perl modules from CPAN sites</source>
          <target state="translated">CPANのサイトからPerlモジュールをクエリ、ダウンロード、ビルドします。</target>
        </trans-unit>
        <trans-unit id="ed5852c21131e60baf445dfc882c7dd1ddea9256" translate="yes" xml:space="preserve">
          <source>QueryDosDevice</source>
          <target state="translated">QueryDosDevice</target>
        </trans-unit>
        <trans-unit id="25159e9583ffe556fa9caf91c376678194cc1e2d" translate="yes" xml:space="preserve">
          <source>QueryDosDeviceW</source>
          <target state="translated">QueryDosDeviceW</target>
        </trans-unit>
        <trans-unit id="5c87d5f3328b7d4c3f7fd3f209b9b98dd39e0104" translate="yes" xml:space="preserve">
          <source>Querying the layers of filehandles</source>
          <target state="translated">ファイルハンドルのレイヤーを取得する</target>
        </trans-unit>
        <trans-unit id="ab73d69ba359e14fb19fa0dc0701d52b9c7d7ee1" translate="yes" xml:space="preserve">
          <source>Questions With Answers</source>
          <target state="translated">回答付きの質問</target>
        </trans-unit>
        <trans-unit id="95a49b2098c5f038a0a98f8cedd74f050e3ecb3e" translate="yes" xml:space="preserve">
          <source>Questions or discussion about POD and Pod::Simple should be sent to the &lt;a href=&quot;mailto:pod-people@perl.org&quot;&gt;mailto:pod-people@perl.org&lt;/a&gt; mail list. Send an empty email to &lt;a href=&quot;mailto:pod-people-subscribe@perl.org&quot;&gt;mailto:pod-people-subscribe@perl.org&lt;/a&gt; to subscribe.</source>
          <target state="translated">PODとPod :: Simpleに関する質問やディスカッションは、&lt;a href=&quot;mailto:pod-people@perl.org&quot;&gt;mailto：pod-people@perl.orgメーリングリストに&lt;/a&gt;送信する必要があります。購読するには、&lt;a href=&quot;mailto:pod-people-subscribe@perl.org&quot;&gt;mailto：pod-people-subscribe@perl.org&lt;/a&gt;に空の電子メールを送信してください。</target>
        </trans-unit>
        <trans-unit id="f6d4d2bb4bfe6fa0f2303afcf56e54256bae7acb" translate="yes" xml:space="preserve">
          <source>Questions or discussion about POD and Pod::Simple should be sent to the pod-people@perl.org mail list. Send an empty email to pod-people-subscribe@perl.org to subscribe.</source>
          <target state="translated">PODやPod::Simpleに関する質問や議論は、pod-people@perl.org のメールリストに送ってください。pod-people-subscribe@perl.org に空のメールを送って購読してください。</target>
        </trans-unit>
        <trans-unit id="62c04616537c40c65ec2cae0ed0b661e409150a9" translate="yes" xml:space="preserve">
          <source>Queues created by &lt;a href=&quot;Thread::Queue&quot;&gt;Thread::Queue&lt;/a&gt; can be used in both threaded and non-threaded applications.</source>
          <target state="translated">&lt;a href=&quot;Thread::Queue&quot;&gt;Thread :: Queue&lt;/a&gt;によって作成されたキューは、スレッド化されたアプリケーションとスレッド化されていないアプリケーションの両方で使用できます。</target>
        </trans-unit>
        <trans-unit id="3bbcc3a96b399b2a6b4ea7037ef3c410c2e98989" translate="yes" xml:space="preserve">
          <source>Queues created by &lt;a href=&quot;queue&quot;&gt;Thread::Queue&lt;/a&gt; can be used in both threaded and non-threaded applications.</source>
          <target state="translated">&lt;a href=&quot;queue&quot;&gt;Thread :: Queue&lt;/a&gt;によって作成されたキューは、スレッド化アプリケーションと非スレッド化アプリケーションの両方で使用できます。</target>
        </trans-unit>
        <trans-unit id="82dcd86a2d0fdd9674d5180af12a2c81e22b15c2" translate="yes" xml:space="preserve">
          <source>Queues: Passing Data Around</source>
          <target state="translated">キュー。データの受け渡し</target>
        </trans-unit>
        <trans-unit id="911283fe22324c9b4dbb9d98fa5ce51d04af8b5f" translate="yes" xml:space="preserve">
          <source>Quick Check</source>
          <target state="translated">クイックチェック</target>
        </trans-unit>
        <trans-unit id="7d2b679e22dfa3101d1ba7bf2ec43c351c8ef687" translate="yes" xml:space="preserve">
          <source>Quick Guide</source>
          <target state="translated">クイックガイド</target>
        </trans-unit>
        <trans-unit id="c1477a08bbc119a706dea90b93268ceb957f433a" translate="yes" xml:space="preserve">
          <source>Quick Reference</source>
          <target state="translated">クイックリファレンス</target>
        </trans-unit>
        <trans-unit id="43d8515e5495635935ae41fcaff947601379b8c7" translate="yes" xml:space="preserve">
          <source>Quick commands for handling typemaps</source>
          <target state="translated">タイプマップを扱うためのクイックコマンド</target>
        </trans-unit>
        <trans-unit id="490efc6e3853d704426e2197c066d80aa96aeb58" translate="yes" xml:space="preserve">
          <source>Quick cycle of developers release may break the OS/2 build time to time, looking into</source>
          <target state="translated">開発者のリリースの迅速なサイクルは、OS/2のビルドの時間を破る可能性があります。</target>
        </trans-unit>
        <trans-unit id="7994ebd90d60dd15b911eb3a9daf502e60683411" translate="yes" xml:space="preserve">
          <source>Quit and close the connection to the remote POP3 server. Any messages marked as deleted will be deleted from the remote mailbox.</source>
          <target state="translated">リモート POP3 サーバーへの接続を終了して終了します。削除されたとマークされたメッセージは、リモートのメールボックスから削除されます。</target>
        </trans-unit>
        <trans-unit id="34ba20e3026462af76a067e043daf2ecc8d444ff" translate="yes" xml:space="preserve">
          <source>Quit the remote server and close the socket connection.</source>
          <target state="translated">リモートサーバーを終了し、ソケット接続を閉じます。</target>
        </trans-unit>
        <trans-unit id="5a1be35f7e41fc0e73dfaa10a8ca1c7fe5bd8ed0" translate="yes" xml:space="preserve">
          <source>Quit. (&quot;quit&quot; doesn't work for this, unless you've made an alias) This is the only supported way to exit the debugger, though typing &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt;&lt;/code&gt; twice might work.</source>
          <target state="translated">終了する。（エイリアスを作成しない限り、「quit」は機能しません）これは、デバッガーを終了するためにサポートされている唯一の方法ですが、 &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt;&lt;/code&gt; を 2回入力すると機能する場合があります。</target>
        </trans-unit>
        <trans-unit id="8236f6cef7dae93e89bfa8ab484c617f0a4a2375" translate="yes" xml:space="preserve">
          <source>Quit. (&quot;quit&quot; doesn't work for this, unless you've made an alias) This is the only supported way to exit the debugger, though typing &lt;code&gt;exit&lt;/code&gt; twice might work.</source>
          <target state="translated">終了する。（エイリアスを作成しない限り、「quit」はこれでは機能しません） &lt;code&gt;exit&lt;/code&gt; を2回入力すると機能する場合がありますが、これがデバッガーを終了する唯一のサポートされている方法です。</target>
        </trans-unit>
        <trans-unit id="f9f4964b91e9849afca9359e00981ce1ba0c07f9" translate="yes" xml:space="preserve">
          <source>Quotations are taken from writings of J.R.R. Tolkien pertaining to his Legendarium, almost always from</source>
          <target state="translated">引用はJ.R.R.トールキンのレジェンダリウムに関連した文章から引用しています。</target>
        </trans-unit>
        <trans-unit id="98a0090e1373d2c389fb1b8448a5ea356c875f06" translate="yes" xml:space="preserve">
          <source>Quote and Quote-like Operators</source>
          <target state="translated">引用符と引用符のような演算子</target>
        </trans-unit>
        <trans-unit id="97af8d62d18823e045a526635c4c59c15b6c1c41" translate="yes" xml:space="preserve">
          <source>Quote, don't escape.</source>
          <target state="translated">引用元:逃げるな</target>
        </trans-unit>
        <trans-unit id="19d0f80e917312a7bee3d680b3a00ddf182f6146" translate="yes" xml:space="preserve">
          <source>Quote-Like Operators</source>
          <target state="translated">引用元のようなオペレータ</target>
        </trans-unit>
        <trans-unit id="12a1279b6935c9782ab3606a3d82d28493446688" translate="yes" xml:space="preserve">
          <source>Quoted-Printable encoding and decoding</source>
          <target state="translated">引用元-印刷可能なエンコーディングとデコーディング</target>
        </trans-unit>
        <trans-unit id="46e26eec4abf3af9d0fe512a58ece61ef23ba7c0" translate="yes" xml:space="preserve">
          <source>Quotes an item to become safe against spaces in shell interpolation. An item is enclosed in double quotes if:</source>
          <target state="translated">シェル補間のスペースに対して安全になるように、項目を引用符で囲みます。の場合は二重引用符で囲みます。</target>
        </trans-unit>
        <trans-unit id="8b284dd175a44a8a9dddaf84217e26829062b72d" translate="yes" xml:space="preserve">
          <source>Quotes macro literal value suitable for being used on a command line so that when expanded by make, will be received by command as given to this method:</source>
          <target state="translated">マクロリテラル値を引用符で囲み、コマンドラインで使用するのに適したマクロリテラル値を指定します。</target>
        </trans-unit>
        <trans-unit id="7c9cadaf1120288e2519033435e5a86c9d58bc5d" translate="yes" xml:space="preserve">
          <source>Quotient when</source>
          <target state="translated">クオティエント</target>
        </trans-unit>
        <trans-unit id="afb079b387f352ffcae72adddea301483da03453" translate="yes" xml:space="preserve">
          <source>Quoting Rules</source>
          <target state="translated">ルールの引用</target>
        </trans-unit>
        <trans-unit id="dc8a67ea92998f4331c08d3d68c3f23ba931af7d" translate="yes" xml:space="preserve">
          <source>Quoting characters that have the other 3 properties is done to enhance the readability of the regular expression and not because they actually need to be quoted for regular expression purposes (characters with the White_Space property are likely to be indistinguishable on the page or screen from those with the Pattern_White_Space property; and the other two properties contain non-printing characters).</source>
          <target state="translated">他の3つのプロパティを持つ文字の引用は正規表現の可読性を高めるために行われており、正規表現の目的のために実際に引用する必要があるからではありません(White_Spaceプロパティを持つ文字はページや画面上でPattern_White_Spaceプロパティを持つ文字と区別がつかない可能性が高く、他の2つのプロパティには印刷しない文字が含まれています)。</target>
        </trans-unit>
        <trans-unit id="5f374f604fe8ce3a7bacd1735dcfc8594696a7c1" translate="yes" xml:space="preserve">
          <source>Quoting metacharacters</source>
          <target state="translated">メタキャラを引用</target>
        </trans-unit>
        <trans-unit id="06576556d1ad802f247cad11ae748be47b70cd9c" translate="yes" xml:space="preserve">
          <source>R</source>
          <target state="translated">R</target>
        </trans-unit>
        <trans-unit id="45297e8f2e4a57d399e54f4d5e56a33edf6b4546" translate="yes" xml:space="preserve">
          <source>RADIAL COORDINATE CONVERSIONS</source>
          <target state="translated">ラジアルコーディネート変換</target>
        </trans-unit>
        <trans-unit id="647bf4ae5c62e4b2f7fc54138d7154994e7846d5" translate="yes" xml:space="preserve">
          <source>RARE</source>
          <target state="translated">RARE</target>
        </trans-unit>
        <trans-unit id="9af25064545050c8e56a4006e326adb929858914" translate="yes" xml:space="preserve">
          <source>READ ONLY</source>
          <target state="translated">リードオンリー</target>
        </trans-unit>
        <trans-unit id="cc6425b15718ba305a5be3f7b63315d357624827" translate="yes" xml:space="preserve">
          <source>READ this, LIST</source>
          <target state="translated">これを読んで、LIST</target>
        </trans-unit>
        <trans-unit id="71ba8d747508fc47456e6661103dd64aef5d8592" translate="yes" xml:space="preserve">
          <source>READ this, scalar, length, offset</source>
          <target state="translated">READ this,スカラ,長さ,オフセット</target>
        </trans-unit>
        <trans-unit id="b1098e3b19c1ecdbc519280a3f79897302a60f22" translate="yes" xml:space="preserve">
          <source>READ/WRITE</source>
          <target state="translated">READ/WRITE</target>
        </trans-unit>
        <trans-unit id="1178857cfaa4d49d9bfd3b0d0e2944348317f373" translate="yes" xml:space="preserve">
          <source>READLINE this</source>
          <target state="translated">リードライン</target>
        </trans-unit>
        <trans-unit id="69e27356ef629022720d868ab0c0e3394775b6c1" translate="yes" xml:space="preserve">
          <source>README</source>
          <target state="translated">README</target>
        </trans-unit>
        <trans-unit id="26170ec3dc64f8b7fd572cb5f04130dc738bac40" translate="yes" xml:space="preserve">
          <source>README and other Additional Files.</source>
          <target state="translated">READMEとその他の追加ファイル。</target>
        </trans-unit>
        <trans-unit id="533ffdbfecaff72ef5b73243babdff48010c62e3" translate="yes" xml:space="preserve">
          <source>README, INSTALL, release notes, changelogs</source>
          <target state="translated">README、インストール、リリースノート、変更ログ</target>
        </trans-unit>
        <trans-unit id="470d8527a3d01cd4a3fa0aa7c03769a6948b44d1" translate="yes" xml:space="preserve">
          <source>README.amiga</source>
          <target state="translated">README.amiga</target>
        </trans-unit>
        <trans-unit id="bd5f281c6e53763c512b64a62b1dbc5e3498f53d" translate="yes" xml:space="preserve">
          <source>README.cygwin</source>
          <target state="translated">README.cygwin</target>
        </trans-unit>
        <trans-unit id="60cd92e33be1c1434cc8683be9e91fdb03ffbe8d" translate="yes" xml:space="preserve">
          <source>README.dos</source>
          <target state="translated">README.dos</target>
        </trans-unit>
        <trans-unit id="922bfc9ad896762e1f22202551026c11023937f3" translate="yes" xml:space="preserve">
          <source>README.os2</source>
          <target state="translated">README.os2</target>
        </trans-unit>
        <trans-unit id="b0c3afe965a614f26f700a578dd90289b911ca42" translate="yes" xml:space="preserve">
          <source>README.perl</source>
          <target state="translated">README.perl</target>
        </trans-unit>
        <trans-unit id="31876ad7c4fa164eaa1a9292560713f19237c9c2" translate="yes" xml:space="preserve">
          <source>README.plan9</source>
          <target state="translated">README.plan9</target>
        </trans-unit>
        <trans-unit id="bdb33e69f1720b7deb819252845ceaa36e2e81ac" translate="yes" xml:space="preserve">
          <source>README.pod</source>
          <target state="translated">README.pod</target>
        </trans-unit>
        <trans-unit id="6b3e64ef3c5318ac15169a07784569d9f4e12561" translate="yes" xml:space="preserve">
          <source>README.vms</source>
          <target state="translated">README.vms</target>
        </trans-unit>
        <trans-unit id="db69da694a77bb707c14a29a590fb116537bf27c" translate="yes" xml:space="preserve">
          <source>README.vos</source>
          <target state="translated">README.vos</target>
        </trans-unit>
        <trans-unit id="41c68db7205269a6d1d13c4ce257a527520c44f3" translate="yes" xml:space="preserve">
          <source>README_vms</source>
          <target state="translated">README_vms</target>
        </trans-unit>
        <trans-unit id="eb1962cbc26755fee15d4db8b14b86dda178492f" translate="yes" xml:space="preserve">
          <source>READONLY LEXICONS</source>
          <target state="translated">レドナリーレキシコン</target>
        </trans-unit>
        <trans-unit id="b5a3ab1153348489193a2b107fc0503cdbf5f82d" translate="yes" xml:space="preserve">
          <source>READ_XDIGIT</source>
          <target state="translated">READ_XDIGIT</target>
        </trans-unit>
        <trans-unit id="9227274777f845910cc80f878804555a988622c1" translate="yes" xml:space="preserve">
          <source>REALLY</source>
          <target state="translated">REALLY</target>
        </trans-unit>
        <trans-unit id="8ffa1146c71db97f92e2f04607f075869b2b30ec" translate="yes" xml:space="preserve">
          <source>REASONING</source>
          <target state="translated">REASONING</target>
        </trans-unit>
        <trans-unit id="e76430b07e90f8c8d2921d2cd72512a07ce06563" translate="yes" xml:space="preserve">
          <source>RECIPES</source>
          <target state="translated">RECIPES</target>
        </trans-unit>
        <trans-unit id="8447f2362022482a81d1cf6ed91fac3a8d3dd564" translate="yes" xml:space="preserve">
          <source>RECOMMENDED SUBROUTINE/METHOD OVERRIDES</source>
          <target state="translated">推奨されるサブルーチン/メソッドがオーバーライドされます。</target>
        </trans-unit>
        <trans-unit id="8e7db067b10fc8249813bd63a0ea6407a26ac0de" translate="yes" xml:space="preserve">
          <source>REFCNT</source>
          <target state="translated">REFCNT</target>
        </trans-unit>
        <trans-unit id="d4730753022e62db3135b00e0df88859d25187e8" translate="yes" xml:space="preserve">
          <source>REFERENCES</source>
          <target state="translated">REFERENCES</target>
        </trans-unit>
        <trans-unit id="17f75a8c771228288489d3ed0be8e963fbbfba68" translate="yes" xml:space="preserve">
          <source>REGEX</source>
          <target state="translated">REGEX</target>
        </trans-unit>
        <trans-unit id="992d441e1d5a432b866f670478b3060e05a3c28e" translate="yes" xml:space="preserve">
          <source>REGEXP Functions</source>
          <target state="translated">REGEXP機能</target>
        </trans-unit>
        <trans-unit id="b14e18379b628e870f6f6fd151b87b951e254cfd" translate="yes" xml:space="preserve">
          <source>REGISTRY</source>
          <target state="translated">REGISTRY</target>
        </trans-unit>
        <trans-unit id="9d38a5cfeee787c359c7fd682499c0d9ef995e51" translate="yes" xml:space="preserve">
          <source>REGULAR EXPRESSION DIFFERENCES</source>
          <target state="translated">通常の表現の違い</target>
        </trans-unit>
        <trans-unit id="5e59f903969a9f7836cb496c8ed4243a5e1f9f3b" translate="yes" xml:space="preserve">
          <source>REGULAR EXPRESSIONS</source>
          <target state="translated">通常の表現</target>
        </trans-unit>
        <trans-unit id="2c29e02d995cad9b8885a946bb3c7595f553f5cb" translate="yes" xml:space="preserve">
          <source>RELEASE CONSIDERATIONS</source>
          <target state="translated">RELEASE CONSIDERATIONS</target>
        </trans-unit>
        <trans-unit id="ce3669c4cafe6d662d6a478d51e778ba7d922846" translate="yes" xml:space="preserve">
          <source>RELEASE HOOKS</source>
          <target state="translated">リリースフック</target>
        </trans-unit>
        <trans-unit id="dd03acb9188bb0e265cc49975a06589f80338e36" translate="yes" xml:space="preserve">
          <source>RELIC SUPPORT</source>
          <target state="translated">RELICサポート</target>
        </trans-unit>
        <trans-unit id="da675baaaaccfefe8840cfac4dbaa63fca633fd5" translate="yes" xml:space="preserve">
          <source>REPLACEMENT</source>
          <target state="translated">REPLACEMENT</target>
        </trans-unit>
        <trans-unit id="7a45c85de3ea0dcc5d2b7a5ee8dde0f92121b9d1" translate="yes" xml:space="preserve">
          <source>REPLACEMENTLIST</source>
          <target state="translated">REPLACEMENTLIST</target>
        </trans-unit>
        <trans-unit id="e27de7ecbea05354d740812818d6e7277b4c376b" translate="yes" xml:space="preserve">
          <source>REPLACEMENT_CHARACTER_UTF8</source>
          <target state="translated">REPLACEMENT_CHARACTER_UTF8</target>
        </trans-unit>
        <trans-unit id="ba425109137803e3e683ec8acbacf662eb955f0b" translate="yes" xml:space="preserve">
          <source>REPLACING</source>
          <target state="translated">REPLACING</target>
        </trans-unit>
        <trans-unit id="4986beb42112c3c0d549030c505c47fb48eeca1d" translate="yes" xml:space="preserve">
          <source>REPLACING &lt;code&gt;IO::Socket&lt;/code&gt; DEFAULT BEHAVIOUR</source>
          <target state="translated">交換 &lt;code&gt;IO::Socket&lt;/code&gt; デフォルトの動作</target>
        </trans-unit>
        <trans-unit id="3b855cd1e74344c954f3ab82648a10ac192d0483" translate="yes" xml:space="preserve">
          <source>REPLACING IO::Socket DEFAULT BEHAVIOUR</source>
          <target state="translated">IO::Socket のデフォルト動作の置き換え</target>
        </trans-unit>
        <trans-unit id="fa95d2a9ab9e8fba299d2cca664ea01713832e35" translate="yes" xml:space="preserve">
          <source>REPORTING BUGS</source>
          <target state="translated">バグの報告</target>
        </trans-unit>
        <trans-unit id="24635e62e8ddd92f4cc5da2504b648ac5429a3fd" translate="yes" xml:space="preserve">
          <source>REPOSITORY</source>
          <target state="translated">REPOSITORY</target>
        </trans-unit>
        <trans-unit id="fe377d21347a0f1c2fca85ace81c4464e731dd82" translate="yes" xml:space="preserve">
          <source>REQUIRED FIELDS</source>
          <target state="translated">必要なフィールド</target>
        </trans-unit>
        <trans-unit id="654940d635d2437b881bdb8207c502ab1ddc4cc7" translate="yes" xml:space="preserve">
          <source>REQUIRED MODULES</source>
          <target state="translated">必須モジュール</target>
        </trans-unit>
        <trans-unit id="5f121318efb144a8b6001419391a5b20c6c3f189" translate="yes" xml:space="preserve">
          <source>REQUIREMENTS</source>
          <target state="translated">REQUIREMENTS</target>
        </trans-unit>
        <trans-unit id="d4abe5aceb44522d22d765689b2e66a4d13b95b1" translate="yes" xml:space="preserve">
          <source>REQUIRES</source>
          <target state="translated">REQUIRES</target>
        </trans-unit>
        <trans-unit id="cebebd61a604a76b819fde4ab0d23cc350bc7f11" translate="yes" xml:space="preserve">
          <source>RESOURCE CONSTANTS</source>
          <target state="translated">資源定数</target>
        </trans-unit>
        <trans-unit id="84a1adbee1321bc20135c0d8dc5a30d33e63abca" translate="yes" xml:space="preserve">
          <source>RESOURCES</source>
          <target state="translated">RESOURCES</target>
        </trans-unit>
        <trans-unit id="403124cd35cda7a388d8e4d429350ff90ad96769" translate="yes" xml:space="preserve">
          <source>RESTORE_ERRNO</source>
          <target state="translated">RESTORE_ERRNO</target>
        </trans-unit>
        <trans-unit id="60b26dd43aff3ef987e62f9fc2f2fad92a0eab90" translate="yes" xml:space="preserve">
          <source>RESTORE_LC_NUMERIC</source>
          <target state="translated">RESTORE_LC_NUMERIC</target>
        </trans-unit>
        <trans-unit id="18c30fdfe09a62b00ef42fca3ca524381be1daae" translate="yes" xml:space="preserve">
          <source>RESTRICTIONS</source>
          <target state="translated">RESTRICTIONS</target>
        </trans-unit>
        <trans-unit id="3f16f13a6e4e56262a53083e00fe054e7f080605" translate="yes" xml:space="preserve">
          <source>RESULTS</source>
          <target state="translated">RESULTS</target>
        </trans-unit>
        <trans-unit id="dad39ba788d6c9557da1d5f8eca6a0c122f53cc6" translate="yes" xml:space="preserve">
          <source>RETURN</source>
          <target state="translated">RETURN</target>
        </trans-unit>
        <trans-unit id="a3cfa01beb76631f6551ac88fe216890eda21375" translate="yes" xml:space="preserve">
          <source>RETURN VALUE</source>
          <target state="translated">リターン値</target>
        </trans-unit>
        <trans-unit id="02a795930835fdd0bf8e932e4c282b7f9d2bcf4d" translate="yes" xml:space="preserve">
          <source>RETVAL</source>
          <target state="translated">RETVAL</target>
        </trans-unit>
        <trans-unit id="2db226ae6a2200c9de52d48b59300653cddbcd5c" translate="yes" xml:space="preserve">
          <source>REVISION</source>
          <target state="translated">REVISION</target>
        </trans-unit>
        <trans-unit id="2883ce0cefe517af5eaa69e7f4cac285cbe4b2a6" translate="yes" xml:space="preserve">
          <source>REVISION HISTORY</source>
          <target state="translated">改版の歴史</target>
        </trans-unit>
        <trans-unit id="285e88316b0d14455ae0c18a656f7e4c2153f4a5" translate="yes" xml:space="preserve">
          <source>RFC</source>
          <target state="translated">RFC</target>
        </trans-unit>
        <trans-unit id="38db668f060e18560a74ae3771e265dfe3889471" translate="yes" xml:space="preserve">
          <source>RFC 1321</source>
          <target state="translated">RFC1321</target>
        </trans-unit>
        <trans-unit id="8aa6bbcd312b3ca11aa46e74bbf26dad68e88ad8" translate="yes" xml:space="preserve">
          <source>RFC 1766: Tags for the Identification of Languages.</source>
          <target state="translated">RFC 1766:言語の識別のためのタグ。</target>
        </trans-unit>
        <trans-unit id="1c2ba063ee52ea974fa97654e06580546624753f" translate="yes" xml:space="preserve">
          <source>RFC 1925: The Twelve Networking Truths.</source>
          <target state="translated">RFC 1925。12 のネットワーキングの真実。</target>
        </trans-unit>
        <trans-unit id="a67e74554aeb2c83221fd0697d75e4d82c3bccd8" translate="yes" xml:space="preserve">
          <source>RFC 1950</source>
          <target state="translated">RFC1950</target>
        </trans-unit>
        <trans-unit id="300aeded8e1f09a4c1c6ce3200b4bdedfa081b8d" translate="yes" xml:space="preserve">
          <source>RFC 1951 (optionally)</source>
          <target state="translated">RFC1951(オプション</target>
        </trans-unit>
        <trans-unit id="4b6fc20dacd7531202f028b2a5f35f72a25e23ad" translate="yes" xml:space="preserve">
          <source>RFC 2047, &lt;a href=&quot;http://www.faqs.org/rfcs/rfc2047.html&quot;&gt;http://www.faqs.org/rfcs/rfc2047.html&lt;/a&gt; and many other locations.</source>
          <target state="translated">RFC 2047、&lt;a href=&quot;http://www.faqs.org/rfcs/rfc2047.html&quot;&gt;http：&lt;/a&gt; //www.faqs.org/rfcs/rfc2047.html および他の多くの場所。</target>
        </trans-unit>
        <trans-unit id="7f6129b443adb8eb4ab8117c73a7ec03cac31938" translate="yes" xml:space="preserve">
          <source>RFC 2277,</source>
          <target state="translated">RFC2277。</target>
        </trans-unit>
        <trans-unit id="7f2e6cca0447e13526ac21e21f0f5ede40828910" translate="yes" xml:space="preserve">
          <source>RFC 2781 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2152.txt&quot;&gt;http://www.ietf.org/rfc/rfc2152.txt&lt;/a&gt;</source>
          <target state="translated">RFC 2781 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2152.txt&quot;&gt;http://www.ietf.org/rfc/rfc2152.txt&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5c8f0184cbd20d399e4fafa72684d0a3bc66aa63" translate="yes" xml:space="preserve">
          <source>RFC 2781 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2781.txt&quot;&gt;http://www.ietf.org/rfc/rfc2781.txt&lt;/a&gt;,</source>
          <target state="translated">RFC 2781 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2781.txt&quot;&gt;http://www.ietf.org/rfc/rfc2781.txt&lt;/a&gt;、</target>
        </trans-unit>
        <trans-unit id="9a7991d40b82d0c4a446272f5d53049fc02d0908" translate="yes" xml:space="preserve">
          <source>RFC 3066,</source>
          <target state="translated">RFC 3066。</target>
        </trans-unit>
        <trans-unit id="945ba2e2f75806caad55592ebe29a1b3ebf6f309" translate="yes" xml:space="preserve">
          <source>RFC 3164 - The BSD syslog Protocol</source>
          <target state="translated">RFC 3164-BSD syslog プロトコル</target>
        </trans-unit>
        <trans-unit id="35a8129d80ee0812edff3359c57630a4510d47b2" translate="yes" xml:space="preserve">
          <source>RFC 3195 - Reliable Delivery for syslog</source>
          <target state="translated">RFC 3195-syslog の信頼性の高い配信</target>
        </trans-unit>
        <trans-unit id="3439cbcbbbc68d52ac61c5b4e9948f19a9174718" translate="yes" xml:space="preserve">
          <source>RFC4627 (&lt;a href=&quot;http://www.ietf.org/rfc/rfc4627.txt&quot;&gt;http://www.ietf.org/rfc/rfc4627.txt&lt;/a&gt;)</source>
          <target state="translated">RFC4627 (&lt;a href=&quot;http://www.ietf.org/rfc/rfc4627.txt&quot;&gt;http://www.ietf.org/rfc/rfc4627.txt&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="2bf53210d2912d4f78d76e8e805dc2eb7eeea92e" translate="yes" xml:space="preserve">
          <source>RFC7159 (&lt;a href=&quot;http://www.ietf.org/rfc/rfc7159.txt&quot;&gt;http://www.ietf.org/rfc/rfc7159.txt&lt;/a&gt;)</source>
          <target state="translated">RFC7159 (&lt;a href=&quot;http://www.ietf.org/rfc/rfc7159.txt&quot;&gt;http://www.ietf.org/rfc/rfc7159.txt&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="5b3f579b33de306c7070ba1b3df066555b0b610c" translate="yes" xml:space="preserve">
          <source>RFC8259 (&lt;a href=&quot;http://www.ietf.org/rfc/rfc8259.txt&quot;&gt;http://www.ietf.org/rfc/rfc8259.txt&lt;/a&gt;)</source>
          <target state="translated">RFC8259 (&lt;a href=&quot;http://www.ietf.org/rfc/rfc8259.txt&quot;&gt;http://www.ietf.org/rfc/rfc8259.txt&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="f63a110e3985b9f7489a8dd961b8827b5aaff064" translate="yes" xml:space="preserve">
          <source>RFCs</source>
          <target state="translated">RFCs</target>
        </trans-unit>
        <trans-unit id="3b3e632ab723286b647cad0535870ece0660f6d3" translate="yes" xml:space="preserve">
          <source>RISC OS perl can emulate Unix filenames with &lt;code&gt;/&lt;/code&gt; as path separator, or go native and use &lt;code&gt;.&lt;/code&gt; for path separator and &lt;code&gt;:&lt;/code&gt; to signal filesystems and disk names.</source>
          <target state="translated">RISC OS perlは、パス区切り文字として &lt;code&gt;/&lt;/code&gt; を使用してUnixファイル名をエミュレートするか、ネイティブにしてを使用できます &lt;code&gt;.&lt;/code&gt; パス区切り文字と &lt;code&gt;:&lt;/code&gt; ファイルシステムとディスク名を通知します。</target>
        </trans-unit>
        <trans-unit id="4054eb80e50d0195d33685c2f02f4383c18ad22b" translate="yes" xml:space="preserve">
          <source>RISKS</source>
          <target state="translated">RISKS</target>
        </trans-unit>
        <trans-unit id="9eb7e01f69887939c0c2ea8731a424cf6844e018" translate="yes" xml:space="preserve">
          <source>RITER</source>
          <target state="translated">RITER</target>
        </trans-unit>
        <trans-unit id="ce92de227e5ca8f56ce47a7f7083251d615bbb6c" translate="yes" xml:space="preserve">
          <source>RMS stream record format.</source>
          <target state="translated">RMS ストリームレコードフォーマット。</target>
        </trans-unit>
        <trans-unit id="e9293cd4021d2be8e0346d4819a5adbfc3a7de03" translate="yes" xml:space="preserve">
          <source>ROADMAP</source>
          <target state="translated">ROADMAP</target>
        </trans-unit>
        <trans-unit id="77e7e78b05578758626744dcdf57007c71797399" translate="yes" xml:space="preserve">
          <source>ROOT</source>
          <target state="translated">ROOT</target>
        </trans-unit>
        <trans-unit id="670ec780e0a50ca50c215927161baaa7b818b213" translate="yes" xml:space="preserve">
          <source>ROUTINES</source>
          <target state="translated">ROUTINES</target>
        </trans-unit>
        <trans-unit id="9366697e538ac5c8fcf71b77cfe0ccfde136ac90" translate="yes" xml:space="preserve">
          <source>RPN expression syntax</source>
          <target state="translated">RPN構文式</target>
        </trans-unit>
        <trans-unit id="f20523ec3a9f3796042e5823b06f9ef5d8e427b0" translate="yes" xml:space="preserve">
          <source>RRR</source>
          <target state="translated">RRR</target>
        </trans-unit>
        <trans-unit id="6771a11eec6289a48258037c9914e3b00de3f1aa" translate="yes" xml:space="preserve">
          <source>RSA Data Security, Inc. makes no representations concerning either the merchantability of this software or the suitability of this software for any particular purpose. It is provided &quot;as is&quot; without express or implied warranty of any kind.</source>
          <target state="translated">は、本ソフトウェアの商品性や特定の目的への適合性について、いかなる表明も行いません。このソフトウェアは、いかなる種類の明示的または黙示的な保証もなく、「現状のまま」提供されています。</target>
        </trans-unit>
        <trans-unit id="64f2509e3816cc86d80429be424a431bff2d9e5d" translate="yes" xml:space="preserve">
          <source>RSX</source>
          <target state="translated">RSX</target>
        </trans-unit>
        <trans-unit id="a2003382ef5c1c7fdf72a6432aa75f0a3769e2a7" translate="yes" xml:space="preserve">
          <source>RSX (see &lt;a href=&quot;#Prerequisites&quot;&gt;&quot;Prerequisites&quot;&lt;/a&gt;) for these commands to work, and you may need a port of</source>
          <target state="translated">これらのコマンドが機能するためのRSX（&lt;a href=&quot;#Prerequisites&quot;&gt;「前提条件」を&lt;/a&gt;参照）。次のポートが必要になる場合があります。</target>
        </trans-unit>
        <trans-unit id="b84b5482f8ea9657c275606b7d97ddc22b265005" translate="yes" xml:space="preserve">
          <source>RSX (see &lt;a href=&quot;#Prerequisites&quot;&gt;Prerequisites&lt;/a&gt;) for these commands to work, and you may need a port of</source>
          <target state="translated">これらのコマンドが機能するためにはRSX（&lt;a href=&quot;#Prerequisites&quot;&gt;前提条件を&lt;/a&gt;参照）であり、</target>
        </trans-unit>
        <trans-unit id="09a688848d40f14304b5c2aa4866907e65d56982" translate="yes" xml:space="preserve">
          <source>RSYNC Mirrors</source>
          <target state="translated">RSYNCミラー</target>
        </trans-unit>
        <trans-unit id="5511eae951bd620a04e76a09544cf2f828d716d6" translate="yes" xml:space="preserve">
          <source>RT #95409</source>
          <target state="translated">RT #95409</target>
        </trans-unit>
        <trans-unit id="daa9a26fa5dc3b2d4c895b628e72c46573997b08" translate="yes" xml:space="preserve">
          <source>RT: CPAN's request tracker</source>
          <target state="translated">RT:CPANのリクエストトラッカー</target>
        </trans-unit>
        <trans-unit id="296f24af6bdc168947f582ed9d4a01adf35b7897" translate="yes" xml:space="preserve">
          <source>RTFM</source>
          <target state="translated">RTFM</target>
        </trans-unit>
        <trans-unit id="ad173e04d8ecca3dab1c425136333c79954a3f23" translate="yes" xml:space="preserve">
          <source>RUN</source>
          <target state="translated">RUN</target>
        </trans-unit>
        <trans-unit id="8cac8d655edc79a094b3e30b1c55e024f2c6e794" translate="yes" xml:space="preserve">
          <source>RUN CONFIGURE.</source>
          <target state="translated">RUN CONFIGUREを実行します。</target>
        </trans-unit>
        <trans-unit id="b13f5492647cca89dd8a96d290c5eafb261ca74d" translate="yes" xml:space="preserve">
          <source>RUNTIME ISSUES FOR PERL ON SOLARIS.</source>
          <target state="translated">SOLARIS上のPERLのランタイムの問題。</target>
        </trans-unit>
        <trans-unit id="7703dc4a0bafad1f92214dfe8b413b2f0775c484" translate="yes" xml:space="preserve">
          <source>RV</source>
          <target state="translated">RV</target>
        </trans-unit>
        <trans-unit id="dcecf19ee89c08bbe643fe69f280fb3616d3a54c" translate="yes" xml:space="preserve">
          <source>RXf_NO_INPLACE_SUBST</source>
          <target state="translated">RXf_NO_INPLACE_SUBST</target>
        </trans-unit>
        <trans-unit id="7c62d65cea89e01f9297fc7f4cd0b29f1c99cf6f" translate="yes" xml:space="preserve">
          <source>RXf_NULL</source>
          <target state="translated">RXf_NULL</target>
        </trans-unit>
        <trans-unit id="13a3f15eadc270d9e691d223c28b1ff4e04f9dae" translate="yes" xml:space="preserve">
          <source>RXf_SKIPWHITE</source>
          <target state="translated">RXf_SKIPWHITE</target>
        </trans-unit>
        <trans-unit id="e61e39658f2047341e3861adfaa716ea4fe24729" translate="yes" xml:space="preserve">
          <source>RXf_SPLIT</source>
          <target state="translated">RXf_SPLIT</target>
        </trans-unit>
        <trans-unit id="8dd23d8196b04c5db6ac808bac9fddc88562b882" translate="yes" xml:space="preserve">
          <source>RXf_START_ONLY</source>
          <target state="translated">RXf_START_ONLY</target>
        </trans-unit>
        <trans-unit id="eff23a715ac38c8fa9f8ff0b8c544377f4953d98" translate="yes" xml:space="preserve">
          <source>RXf_WHITE</source>
          <target state="translated">RXf_WHITE</target>
        </trans-unit>
        <trans-unit id="4c4c370e208c216b8f67b45a9afe337259faf5a2" translate="yes" xml:space="preserve">
          <source>R_CURSOR is the only valid flag at present.</source>
          <target state="translated">R_CURSORは現在のところ唯一有効なフラグです。</target>
        </trans-unit>
        <trans-unit id="27dcabf4bc9d4bc26e8365f7cbcd0b89fe9f1cae" translate="yes" xml:space="preserve">
          <source>R_RECNOSYNC is the only valid flag at present.</source>
          <target state="translated">R_RECNOSYNCは現在のところ唯一有効なフラグです。</target>
        </trans-unit>
        <trans-unit id="0142508fcc1a59990a5e718d13aae5a93f357a6f" translate="yes" xml:space="preserve">
          <source>Race conditions are caused by unsynchronized access to shared data. Without explicit synchronization, there's no way to be sure that nothing has happened to the shared data between the time you access it and the time you update it. Even this simple code fragment has the possibility of error:</source>
          <target state="translated">レース状態は、共有データへの非同期アクセスによって引き起こされます。明示的な同期化がなければ、アクセスしてから更新するまでの間に共有データに何も起こっていないことを確認する方法はありません。この単純なコードの断片でさえ、エラーが発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="3b85f3b7cd0929657b9bd9be9a4a78ee21defd6c" translate="yes" xml:space="preserve">
          <source>Radical rewrites of large chunks of the Perl interpreter have the potential to introduce new bugs.</source>
          <target state="translated">Perl インタプリタの大きな塊を根本的に書き換えると、新たなバグが発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="be5fa4743a2b3554b929168cb16beddcc9abba29" translate="yes" xml:space="preserve">
          <source>Rafa&amp;euml;l Garcia-Suarez, Bart Lateur, Max Maischein, Anno Siegel, Michael Schwern</source>
          <target state="translated">ラファエル・ガルシア=スアレス、バート・ラトゥル、マックス・マイシャイン、アンノ・シーゲル、マイケル・シュバーン</target>
        </trans-unit>
        <trans-unit id="b14d9c3308f836cd95d5d2ae0777a6058e1bed73" translate="yes" xml:space="preserve">
          <source>Rainer Tammer &amp;lt;tammer@tammer.net&amp;gt;</source>
          <target state="translated">Rainer Tammer &amp;lt;tammer@tammer.net&amp;gt;</target>
        </trans-unit>
        <trans-unit id="0023298eb104a37087c2d3cbae94ab43a267b787" translate="yes" xml:space="preserve">
          <source>Raise an exception using &lt;code&gt;confess&lt;/code&gt; from &lt;a href=&quot;../carp&quot;&gt;Carp&lt;/a&gt;, eg:</source>
          <target state="translated">&lt;a href=&quot;../carp&quot;&gt;Carp&lt;/a&gt;からの &lt;code&gt;confess&lt;/code&gt; を使用して例外を発生させます。例：</target>
        </trans-unit>
        <trans-unit id="37e53313e9ce29fcda598affc96c4a1d99326b36" translate="yes" xml:space="preserve">
          <source>Raise an exception using &lt;code&gt;confess&lt;/code&gt; from &lt;a href=&quot;carp&quot;&gt;Carp&lt;/a&gt;, eg:</source>
          <target state="translated">&lt;a href=&quot;carp&quot;&gt;Carp&lt;/a&gt;からの &lt;code&gt;confess&lt;/code&gt; を使用して例外を発生させます。例：</target>
        </trans-unit>
        <trans-unit id="8cb06e0cd5423ee186d2232bd87bcb32b63e7f3b" translate="yes" xml:space="preserve">
          <source>Raise an exception using &lt;code&gt;croak&lt;/code&gt; from &lt;a href=&quot;../carp&quot;&gt;Carp&lt;/a&gt;, eg:</source>
          <target state="translated">&lt;a href=&quot;../carp&quot;&gt;Carpの&lt;/a&gt; &lt;code&gt;croak&lt;/code&gt; を使用して例外を発生させます。例：</target>
        </trans-unit>
        <trans-unit id="bc4d72e485753bdb465bf8b67e7c076768b62e31" translate="yes" xml:space="preserve">
          <source>Raise an exception using &lt;code&gt;croak&lt;/code&gt; from &lt;a href=&quot;carp&quot;&gt;Carp&lt;/a&gt;, eg:</source>
          <target state="translated">&lt;a href=&quot;carp&quot;&gt;Carpの&lt;/a&gt; &lt;code&gt;croak&lt;/code&gt; を使用して例外を発生させます。例：</target>
        </trans-unit>
        <trans-unit id="1bbc032959ac0a2a2798ef04b882bb3f54a12542" translate="yes" xml:space="preserve">
          <source>Raku (formerly known as Perl 6) was</source>
          <target state="translated">Raku (以前は Perl 6 として知られていた)は</target>
        </trans-unit>
        <trans-unit id="4c9f8bffa0a3e8d4fbe838b61c0cb0a7b52ca526" translate="yes" xml:space="preserve">
          <source>Raku is a reinvention of Perl, a language in the same lineage but not compatible. The two are complementary, not mutually exclusive. Raku is not meant to replace Perl, and vice versa. See &lt;a href=&quot;#What-is-Raku-%28Perl-6%29%3F&quot;&gt;&quot;What is Raku (Perl 6)?&quot;&lt;/a&gt; below to find out more.</source>
          <target state="translated">Rakuは、同じ系統の言語であるが互換性のないPerlを再発明したものです。この2つは補完的であり、相互に排他的ではありません。RakuはPerlに取って代わるものではなく、その逆も同様です。&lt;a href=&quot;#What-is-Raku-%28Perl-6%29%3F&quot;&gt;「楽（Perl 6）とは」を&lt;/a&gt;ご覧ください。詳細については、以下をご覧ください。</target>
        </trans-unit>
        <trans-unit id="33be4f083e50e0e91424cbf4a460b387cdc727dc" translate="yes" xml:space="preserve">
          <source>Raku is not intended primarily as a replacement for Perl, but as its own thing - and libraries exist to allow you to call Perl code from Raku programs and vice versa.</source>
          <target state="translated">Raku は Perl の代替としてではなく、独自のものとして意図されています。</target>
        </trans-unit>
        <trans-unit id="c54a401d07b29f2d86e60a3408b97357c9c95496" translate="yes" xml:space="preserve">
          <source>Randal L. Schwartz writes about profiling in &quot;Speeding up Your Perl Programs&quot; for</source>
          <target state="translated">Randal L.Schwartz氏は、&quot;Speeding up Your Perl Programs &quot;の中でプロファイリングについて書いています。</target>
        </trans-unit>
        <trans-unit id="aecb3c514c687cc0abeadea10afb2b02d82b5aca" translate="yes" xml:space="preserve">
          <source>Randomize parameter</source>
          <target state="translated">パラメータのランダム化</target>
        </trans-unit>
        <trans-unit id="dabd904a6aa4526de078e91d73e56578ee169183" translate="yes" xml:space="preserve">
          <source>Randomly select the given number of elements from the input list. Any given position in the input list will be selected at most once.</source>
          <target state="translated">入力リストから指定された数の要素をランダムに選択します。入力リスト内の任意の位置が最大一度選択されます。</target>
        </trans-unit>
        <trans-unit id="4c71d303b99a4687836162446b097fdf219d2d78" translate="yes" xml:space="preserve">
          <source>Randy Sims &amp;lt;randys@thepierianspring.org&amp;gt;</source>
          <target state="translated">ランディシムズ&amp;lt;randys@thepierianspring.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="639e3ac9bf3c15f412dffa9f6f9c04017303eefc" translate="yes" xml:space="preserve">
          <source>Range Operators</source>
          <target state="translated">レンジオペレーター</target>
        </trans-unit>
        <trans-unit id="b31385d62bdae42a9d6dc60829c035b93206d176" translate="yes" xml:space="preserve">
          <source>Range iterator outside integer range</source>
          <target state="translated">整数範囲外の範囲イテレータ</target>
        </trans-unit>
        <trans-unit id="9bac9d8e3ab0b378aaa92fe98e4aacdcbc341e48" translate="yes" xml:space="preserve">
          <source>Ranges containing &lt;code&gt;\N{...}&lt;/code&gt; in the &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt; (and &lt;code&gt;&lt;a href=&quot;functions/y&quot;&gt;y///&lt;/a&gt;&lt;/code&gt;) transliteration operators are treated differently than the equivalent ranges in regular expression pattersn. They should, but don't, cause the values in the ranges to all be treated as Unicode code points, and not native ones. (&lt;a href=&quot;perlre#Version-8-Regular-Expressions&quot;&gt;Version 8 Regular Expressions in perlre&lt;/a&gt; gives details as to how it should work.)</source>
          <target state="translated">含む範囲 &lt;code&gt;\N{...}&lt;/code&gt; で &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt; （および &lt;code&gt;&lt;a href=&quot;functions/y&quot;&gt;y///&lt;/a&gt;&lt;/code&gt; ）音訳演算子は、正規表現pattersnに同等の範囲とは異なって処理されます。それらは、範囲内の値をすべてネイティブコードポイントではなくUnicodeコードポイントとして処理する必要がありますが、そうではありません。（&lt;a href=&quot;perlre#Version-8-Regular-Expressions&quot;&gt;perlreのバージョン8正規表現は、それ&lt;/a&gt;がどのように機能するかについての詳細を提供します。）</target>
        </trans-unit>
        <trans-unit id="ae415ca481c98ed9b21aaafba7dfbccbe4de1fbc" translate="yes" xml:space="preserve">
          <source>Ranges of ASCII printables should be some subset of &quot;0-9&quot;, &quot;A-Z&quot;, or &quot;a-z&quot; in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="translated">ASCII印刷可能ファイルの範囲は、正規表現の「0-9」、「AZ」、または「az」のサブセットである必要があります。&amp;lt;-ここにm /％s /でマーク</target>
        </trans-unit>
        <trans-unit id="cbb09047f0b3b61b3f6ecb9cd9c629f7886b578e" translate="yes" xml:space="preserve">
          <source>Ranges of digits should be from the same group in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="translated">数字の範囲は、正規表現の同じグループのものである必要があります。&amp;lt;-ここにm /％s /でマーク</target>
        </trans-unit>
        <trans-unit id="3ac184a00f5d5e81e131d86e9b47ba228f878d6f" translate="yes" xml:space="preserve">
          <source>Ranges that map to &lt;code&gt;$default&lt;/code&gt; , &lt;code&gt;&quot;0&quot;&lt;/code&gt; , behave somewhat differently. For these, each code point maps to itself. So, in the first line in the example, &lt;code&gt;&lt;a href=&quot;../functions/ord&quot;&gt;ord(uc(chr(0)))&lt;/a&gt;&lt;/code&gt; is 0, &lt;code&gt;&lt;a href=&quot;../functions/ord&quot;&gt;ord(uc(chr(1)))&lt;/a&gt;&lt;/code&gt; is 1, .. &lt;code&gt;&lt;a href=&quot;../functions/ord&quot;&gt;ord(uc(chr(96)))&lt;/a&gt;&lt;/code&gt; is 96.</source>
          <target state="translated">&lt;code&gt;$default&lt;/code&gt; 、 &lt;code&gt;&quot;0&quot;&lt;/code&gt; にマップする範囲は、多少異なる動作をします。これらの場合、各コードポイントはそれ自体にマップされます。したがって、例の最初の行では、 &lt;code&gt;&lt;a href=&quot;../functions/ord&quot;&gt;ord(uc(chr(0)))&lt;/a&gt;&lt;/code&gt; は0、 &lt;code&gt;&lt;a href=&quot;../functions/ord&quot;&gt;ord(uc(chr(1)))&lt;/a&gt;&lt;/code&gt; は1、.. &lt;code&gt;&lt;a href=&quot;../functions/ord&quot;&gt;ord(uc(chr(96)))&lt;/a&gt;&lt;/code&gt; は96です。 。</target>
        </trans-unit>
        <trans-unit id="eee10f4bda95fa9381991bebca719b2be0694945" translate="yes" xml:space="preserve">
          <source>Ranges that map to &lt;code&gt;$default&lt;/code&gt;, &lt;code&gt;&quot;0&quot;&lt;/code&gt;, behave somewhat differently. For these, each code point maps to itself. So, in the first line in the example, &lt;code&gt;ord(uc(chr(0)))&lt;/code&gt; is 0, &lt;code&gt;ord(uc(chr(1)))&lt;/code&gt; is 1, .. &lt;code&gt;ord(uc(chr(96)))&lt;/code&gt; is 96.</source>
          <target state="translated">マップすることを範囲 &lt;code&gt;$default&lt;/code&gt; 、 &lt;code&gt;&quot;0&quot;&lt;/code&gt; 、やや動作が異なります。これらの場合、各コードポイントはそれ自体にマップされます。したがって、例の最初の行では、 &lt;code&gt;ord(uc(chr(0)))&lt;/code&gt; は0、 &lt;code&gt;ord(uc(chr(1)))&lt;/code&gt; は1、.. &lt;code&gt;ord(uc(chr(96)))&lt;/code&gt; は96です。 。</target>
        </trans-unit>
        <trans-unit id="6ac838b75fa9d93172982fdbee6a0fdb28f19017" translate="yes" xml:space="preserve">
          <source>Raphael_Manfredi!at!pobox.com</source>
          <target state="translated">Raphael_Manfredi!at!pobox.com</target>
        </trans-unit>
        <trans-unit id="54712c3ed00d8ce0c2e3a6b85abbea1e379bb426" translate="yes" xml:space="preserve">
          <source>Rather like Getopt::Std's getopts:</source>
          <target state="translated">むしろ Getopt::Std の getopts のようなものです。</target>
        </trans-unit>
        <trans-unit id="960b861936010943ac07ac480ae7d8624a71e2d4" translate="yes" xml:space="preserve">
          <source>Rather than calling the specified processor on each individual piece of code (i.e. on the bits between quotelikes), the &lt;code&gt;'code...'&lt;/code&gt; partial filters operate on the entire source code, but with the quotelike bits (and, in the case of &lt;code&gt;'code_no_comments'&lt;/code&gt; , the comments) &quot;blanked out&quot;.</source>
          <target state="translated">コードの個々の部分（つまりquotelikesの間のビット）で指定されたプロセッサを呼び出すのではなく、 &lt;code&gt;'code...'&lt;/code&gt; 部分フィルターはソースコード全体に対して機能しますが、quotelikeビット（および、 &lt;code&gt;'code_no_comments'&lt;/code&gt; 、コメント）「ブランク」。</target>
        </trans-unit>
        <trans-unit id="fe2e0d9d9a4f0c59756ebbbef1dbb5ea5380dfb2" translate="yes" xml:space="preserve">
          <source>Rather than calling the specified processor on each individual piece of code (i.e. on the bits between quotelikes), the &lt;code&gt;'code...'&lt;/code&gt; partial filters operate on the entire source code, but with the quotelike bits (and, in the case of &lt;code&gt;'code_no_comments'&lt;/code&gt;, the comments) &quot;blanked out&quot;.</source>
          <target state="translated">個々のコードの各部分（つまり、quotelike間のビット）で指定されたプロセッサを呼び出すのではなく、 &lt;code&gt;'code...'&lt;/code&gt; 部分フィルターはソースコード全体で動作しますが、quotelikeビット（および、 &lt;code&gt;'code_no_comments'&lt;/code&gt; の場合は' code_no_comments '、コメント）「空白」。</target>
        </trans-unit>
        <trans-unit id="a8782cdf0f3b4bc2f2a2c02de3c7d4fefe8fe5e7" translate="yes" xml:space="preserve">
          <source>Rather than causing Perl to abort and dump core, the &lt;code&gt;&lt;a href=&quot;functions/dump&quot;&gt;dump&lt;/a&gt;&lt;/code&gt; operator invokes the VMS debugger. If you continue to execute the Perl program under the debugger, control will be transferred to the label specified as the argument to &lt;code&gt;&lt;a href=&quot;functions/dump&quot;&gt;dump&lt;/a&gt;&lt;/code&gt;, or, if no label was specified, back to the beginning of the program. All other state of the program (</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/dump&quot;&gt;dump&lt;/a&gt;&lt;/code&gt; オペレーターは、Perlにアボートしてコアをダンプさせるのではなく、VMSデバッガーを呼び出します。デバッガーの下でPerlプログラムを引き続き実行すると、制御は &lt;code&gt;&lt;a href=&quot;functions/dump&quot;&gt;dump&lt;/a&gt;&lt;/code&gt; の引数として指定されたラベルに移されます。ラベルが指定されていない場合は、プログラムの最初に戻ります。プログラムの他のすべての状態（</target>
        </trans-unit>
        <trans-unit id="6161808ba047afebcf780d1b7bea62463f8da136" translate="yes" xml:space="preserve">
          <source>Rather than causing Perl to abort and dump core, the &lt;code&gt;dump&lt;/code&gt; operator invokes the VMS debugger. If you continue to execute the Perl program under the debugger, control will be transferred to the label specified as the argument to &lt;code&gt;dump&lt;/code&gt;, or, if no label was specified, back to the beginning of the program. All other state of the program (</source>
          <target state="translated">Perlにコアを中止させてダンプさせるのではなく、 &lt;code&gt;dump&lt;/code&gt; 演算子はVMSデバッガーを呼び出します。デバッガーでPerlプログラムを実行し続けると、制御は &lt;code&gt;dump&lt;/code&gt; する引数として指定されたラベルに移されます。ラベルが指定されていない場合は、プログラムの先頭に戻ります。プログラムの他のすべての状態（</target>
        </trans-unit>
        <trans-unit id="a3447d08dbbb43de106eae02bb7588c613a64d47" translate="yes" xml:space="preserve">
          <source>Rather than iterating through the array, &lt;code&gt;@h&lt;/code&gt; like this:</source>
          <target state="translated">配列を反復処理するのではなく、 &lt;code&gt;@h&lt;/code&gt; ようになります。</target>
        </trans-unit>
        <trans-unit id="0ba567eee2b9c54359919e71a72ac93305e4e900" translate="yes" xml:space="preserve">
          <source>Rather than returning a &lt;code&gt;Pod::ParseTree&lt;/code&gt; , pass the parse-tree as an argument to the referenced subroutine (or named method of the parser object) and return the result instead of the parse-tree object.</source>
          <target state="translated">&lt;code&gt;Pod::ParseTree&lt;/code&gt; 返すのではなく、構文解析ツリーを引数として参照されるサブルーチン（または構文解析オブジェクトの名前付きメソッド）に渡し、構文解析ツリーオブジェクトの代わりに結果を返します。</target>
        </trans-unit>
        <trans-unit id="21ad00b67279483cb2f1a049ab8ad14f7abfff12" translate="yes" xml:space="preserve">
          <source>Rather than storing a sentinel at the end of a data item (or a list of items), we could precede the data with a count. Again, we pack keys and values of a hash, preceding each with an unsigned short length count, and up front we store the number of pairs:</source>
          <target state="translated">データ項目(または項目のリスト)の最後にセンチネルを格納するのではなく、データの前にカウントを格納することができます。ここでも、ハッシュのキーと値をパックし、それぞれの前に符号なしの短い長さのカウントを置き、ペアの数を格納します。</target>
        </trans-unit>
        <trans-unit id="b323fa99aea3713aacf8ae1a80086b503b9a2ebf" translate="yes" xml:space="preserve">
          <source>Rather than this:</source>
          <target state="translated">むしろこれよりも</target>
        </trans-unit>
        <trans-unit id="24f10661814f8bcbc7d422331f86ee1432e30684" translate="yes" xml:space="preserve">
          <source>Rather than trying to match the input against the keywords, we match the combined set of keywords against the input. The pattern matching operation &lt;code&gt;$kwds =~ /\b($cmd\w*)/g&lt;/code&gt; does several things at the same time. It makes sure that the given command begins where a keyword begins (&lt;code&gt;\b&lt;/code&gt; ). It tolerates abbreviations due to the added &lt;code&gt;\w*&lt;/code&gt; . It tells us the number of matches (&lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar&lt;/a&gt; @matches&lt;/code&gt; ) and all the keywords that were actually matched. You could hardly ask for more.</source>
          <target state="translated">入力とキーワードを突き合わせるのではなく、組み合わせたキーワードのセットを入力と突き合わせます。パターンマッチング操作 &lt;code&gt;$kwds =~ /\b($cmd\w*)/g&lt;/code&gt; は、同時にいくつかのことを行います。これは、指定されたコマンドがキーワード（ &lt;code&gt;\b&lt;/code&gt; ）から始まることを確認します。追加された &lt;code&gt;\w*&lt;/code&gt; による略語を許容します。一致数（ &lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar&lt;/a&gt; @matches&lt;/code&gt; ）と実際に一致したすべてのキーワードがわかります。これ以上は要求できません。</target>
        </trans-unit>
        <trans-unit id="f158947cca28289436fc5cb2f9997fa2b47c642a" translate="yes" xml:space="preserve">
          <source>Rather than trying to match the input against the keywords, we match the combined set of keywords against the input. The pattern matching operation &lt;code&gt;$kwds =~ /\b($cmd\w*)/g&lt;/code&gt; does several things at the same time. It makes sure that the given command begins where a keyword begins (&lt;code&gt;\b&lt;/code&gt;). It tolerates abbreviations due to the added &lt;code&gt;\w*&lt;/code&gt;. It tells us the number of matches (&lt;code&gt;scalar @matches&lt;/code&gt;) and all the keywords that were actually matched. You could hardly ask for more.</source>
          <target state="translated">入力をキーワードと照合するのではなく、キーワードの組み合わせセットを入力と照合します。パターンマッチング操作 &lt;code&gt;$kwds =~ /\b($cmd\w*)/g&lt;/code&gt; は、同時にいくつかのことを行います。指定されたコマンドがキーワードの始まり（ &lt;code&gt;\b&lt;/code&gt; ）から始まることを確認します。 &lt;code&gt;\w*&lt;/code&gt; が追加されているために省略形を許容します。一致した数（ &lt;code&gt;scalar @matches&lt;/code&gt; ）と実際に一致したすべてのキーワードがわかります。これ以上はほとんど求められません。</target>
        </trans-unit>
        <trans-unit id="da433cd41e7fb7cd7b029e3b2a46c1f024984c0a" translate="yes" xml:space="preserve">
          <source>Raw</source>
          <target state="translated">Raw</target>
        </trans-unit>
        <trans-unit id="98cb94b52a420b753d7056cb4d301d163b5f24a9" translate="yes" xml:space="preserve">
          <source>Raw output. Instead of producing a human-readable report, outputs a line in machine-readable form for each definition/use of a variable/sub/format.</source>
          <target state="translated">生の出力。人間が読めるレポートを作成する代わりに、変数/サブ/フォーマットの定義/使用の各行を機械読み取り可能な形式で出力します。</target>
        </trans-unit>
        <trans-unit id="caadded21212ee777b82941fc97c8e21f9d9eb4f" translate="yes" xml:space="preserve">
          <source>Raw tar header -- not useful for most users</source>
          <target state="translated">生の tar ヘッダ --ほとんどのユーザには有用ではない</target>
        </trans-unit>
        <trans-unit id="5a1f2a96e09d7946423875d4397c45c1e164614a" translate="yes" xml:space="preserve">
          <source>Re-dupe the internal filehandles returned by &lt;code&gt;test2_stdout()&lt;/code&gt; and &lt;code&gt;test2_stderr()&lt;/code&gt; from the current STDOUT and STDERR. You shouldn't need to do this except in very peculiar situations (for example, you're testing a new formatter and you need control over where the formatter is sending its output.)</source>
          <target state="translated">&lt;code&gt;test2_stdout()&lt;/code&gt; および &lt;code&gt;test2_stderr()&lt;/code&gt; によって返された内部ファイルハンドルを現在のSTDOUTおよびSTDERRから再複製します。非常に特殊な状況を除いて、これを行う必要はありません（たとえば、新しいフォーマッターをテストしていて、フォーマッターが出力を送信する場所を制御する必要があります）。</target>
        </trans-unit>
        <trans-unit id="647d68a92bffee01f0ecfc9cfacfb204335146b1" translate="yes" xml:space="preserve">
          <source>Re-enable an entry in this BHK structure, by setting the appropriate flag.</source>
          <target state="translated">適切なフラグを設定することで、この BHK 構造体のエントリを再有効化する。</target>
        </trans-unit>
        <trans-unit id="fc0130c090f93a593b3c3f55d83f059101c8f0bb" translate="yes" xml:space="preserve">
          <source>Re-enable an entry in this BHK structure, by setting the appropriate flag. &lt;code&gt;which&lt;/code&gt; is a preprocessor token indicating which entry to enable. This will assert (under -DDEBUGGING) if the entry doesn't contain a valid pointer.</source>
          <target state="translated">適切なフラグを設定して、このBHK構造のエントリを再度有効にします。 &lt;code&gt;which&lt;/code&gt; は、有効にするエントリを示すプリプロセッサトークンです。エントリに有効なポインタが含まれていない場合、これは（-DDEBUGGINGの下で）アサートします。</target>
        </trans-unit>
        <trans-unit id="6962342a09593ef4c10ef5d8f74fa7fb66372853" translate="yes" xml:space="preserve">
          <source>Re-wrote and restructured spec in POD syntax</source>
          <target state="translated">POD構文での仕様の書き換えと再構築</target>
        </trans-unit>
        <trans-unit id="d6d7d774d38b0848d649622727f12d464c906f26" translate="yes" xml:space="preserve">
          <source>ReANY</source>
          <target state="translated">ReANY</target>
        </trans-unit>
        <trans-unit id="c7ce193ee0e134e6a49d173985b5d921f2b5ce47" translate="yes" xml:space="preserve">
          <source>Reachability doesn't necessarily mean that the remote host is actually functioning beyond its ability to echo packets. tcp is slightly better at indicating the health of a system than icmp because it uses more of the networking stack to respond.</source>
          <target state="translated">到達性は必ずしもリモートホストがパケットをエコーする能力を超えて実際に機能していることを意味しません。</target>
        </trans-unit>
        <trans-unit id="852b438f91ad9eb2cdd84419a675a216d543c687" translate="yes" xml:space="preserve">
          <source>Read</source>
          <target state="translated">Read</target>
        </trans-unit>
        <trans-unit id="bb510d523e3559f1dd31a12b9ab3443e6d1eb043" translate="yes" xml:space="preserve">
          <source>Read &amp;amp; Write to the database.</source>
          <target state="translated">データベースの読み取りと書き込み。</target>
        </trans-unit>
        <trans-unit id="fdce8d24a2a2e7b37555fd2756a9d51eacebc665" translate="yes" xml:space="preserve">
          <source>Read &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt; to help you decide which of &lt;code&gt;/s&lt;/code&gt; and &lt;code&gt;/m&lt;/code&gt; (or both) you might want to use: &lt;code&gt;/s&lt;/code&gt; allows dot to include newline, and &lt;code&gt;/m&lt;/code&gt; allows caret and dollar to match next to a newline, not just at the end of the string. You do need to make sure that you've actually got a multiline string in there.</source>
          <target state="translated">&lt;code&gt;/s&lt;/code&gt; と &lt;code&gt;/m&lt;/code&gt; （または両方）のどちらを使用するかを決定するのに役立つ&lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;を読んでください： &lt;code&gt;/s&lt;/code&gt; ではドットに改行を含めることができ、 &lt;code&gt;/m&lt;/code&gt; ではキャレットとドルを改行の隣だけでなく改行の隣にも一致させることができます文字列の。実際に複数行の文字列があることを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="e6ec605136e3a8392d3b3c34e52fe32d6a841de5" translate="yes" xml:space="preserve">
          <source>Read &lt;a href=&quot;perlxstut&quot;&gt;perlxstut&lt;/a&gt;, &lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt;, &lt;a href=&quot;h2xs&quot;&gt;h2xs&lt;/a&gt;, &lt;a href=&quot;perlguts&quot;&gt;perlguts&lt;/a&gt;, and &lt;a href=&quot;perlapi&quot;&gt;perlapi&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;perlxstut&quot;&gt;perlxstut&lt;/a&gt;、&lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt;、&lt;a href=&quot;h2xs&quot;&gt;h2xs&lt;/a&gt;、&lt;a href=&quot;perlguts&quot;&gt;perlguts&lt;/a&gt;、&lt;a href=&quot;perlapi&quot;&gt;perlapi&lt;/a&gt;を読んでください。</target>
        </trans-unit>
        <trans-unit id="115c8291258f382229f6753be5b1c82468c882c2" translate="yes" xml:space="preserve">
          <source>Read &lt;code&gt;SIZE&lt;/code&gt; bytes from the shared memory segment at &lt;code&gt;POS&lt;/code&gt; . Returns the string read, or &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if there was an error. The return value becomes tainted. See &lt;a href=&quot;../functions/shmread&quot;&gt;shmread&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;POS&lt;/code&gt; の共有メモリセグメントから &lt;code&gt;SIZE&lt;/code&gt; バイトを読み取ります。読み込まれた文字列を返します。エラーがあった場合は &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; を返します。戻り値は汚染されます。&lt;a href=&quot;../functions/shmread&quot;&gt;shmreadを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="0d35790b76916aae0aea5bee3d142a6fb3dd76be" translate="yes" xml:space="preserve">
          <source>Read &lt;code&gt;SIZE&lt;/code&gt; bytes from the shared memory segment at &lt;code&gt;POS&lt;/code&gt;. Returns the string read, or &lt;code&gt;undef&lt;/code&gt; if there was an error. The return value becomes tainted. See &lt;a href=&quot;shmread&quot;&gt;shmread&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;POS&lt;/code&gt; の共有メモリセグメントから &lt;code&gt;SIZE&lt;/code&gt; バイトを読み取ります。読み取った文字列を返します。エラーが発生した場合は &lt;code&gt;undef&lt;/code&gt; を返します。戻り値が汚染されます。&lt;a href=&quot;shmread&quot;&gt;shmreadを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="7a25663c537f022e0f372f2cbbe12e60f624c4ef" translate="yes" xml:space="preserve">
          <source>Read &lt;code&gt;SIZE&lt;/code&gt; bytes of data from the server and place it into &lt;code&gt;BUFFER&lt;/code&gt; , also performing any &amp;lt;CRLF&amp;gt; translation necessary. &lt;code&gt;TIMEOUT&lt;/code&gt; is optional, if not given, the timeout value from the command connection will be used.</source>
          <target state="translated">サーバーから &lt;code&gt;SIZE&lt;/code&gt; バイトのデータを読み取り、それを &lt;code&gt;BUFFER&lt;/code&gt; に配置し、必要な&amp;lt;CRLF&amp;gt;変換も実行します。 &lt;code&gt;TIMEOUT&lt;/code&gt; はオプションです。指定しない場合、コマンド接続からのタイムアウト値が使用されます。</target>
        </trans-unit>
        <trans-unit id="96416927781a596ec4c86403cec0cdb4822cafe3" translate="yes" xml:space="preserve">
          <source>Read &lt;code&gt;SIZE&lt;/code&gt; bytes of data from the server and place it into &lt;code&gt;BUFFER&lt;/code&gt;, also performing any &amp;lt;CRLF&amp;gt; translation necessary. &lt;code&gt;TIMEOUT&lt;/code&gt; is optional, if not given, the timeout value from the command connection will be used.</source>
          <target state="translated">サーバーから &lt;code&gt;SIZE&lt;/code&gt; バイトのデータを読み取り、それを &lt;code&gt;BUFFER&lt;/code&gt; に配置し、必要な&amp;lt;CRLF&amp;gt;変換も実行します。 &lt;code&gt;TIMEOUT&lt;/code&gt; はオプションです。指定しない場合、コマンド接続からのタイムアウト値が使用されます。</target>
        </trans-unit>
        <trans-unit id="bcd1cac37334c28f94a5a1f13002c1b9c161efeb" translate="yes" xml:space="preserve">
          <source>Read RFC 1950 files/buffers</source>
          <target state="translated">RFC 1950 のファイル/バッファの読み込み</target>
        </trans-unit>
        <trans-unit id="4c474aa41d748aeded351b2b82635d904b9da7ca" translate="yes" xml:space="preserve">
          <source>Read RFC 1951 files/buffers</source>
          <target state="translated">RFC 1951 のファイル/バッファを読む</target>
        </trans-unit>
        <trans-unit id="9674cc4cd21ee5a1adf68bfae1b32a2e0b35087c" translate="yes" xml:space="preserve">
          <source>Read RFC 1952 files/buffers</source>
          <target state="translated">RFC 1952 のファイル/バッファを読む</target>
        </trans-unit>
        <trans-unit id="276580730ef1defd3b269e41373718655fc1f8b1" translate="yes" xml:space="preserve">
          <source>Read YAMLish data from iterator</source>
          <target state="translated">イテレータからYAMLishデータを読み込む</target>
        </trans-unit>
        <trans-unit id="3401450e1edb9cded52db8b9f6b72e38b73e0be8" translate="yes" xml:space="preserve">
          <source>Read YAMLish from a &lt;a href=&quot;../iterator&quot;&gt;TAP::Parser::Iterator&lt;/a&gt; and return the data structure it represents.</source>
          <target state="translated">&lt;a href=&quot;../iterator&quot;&gt;TAP :: Parser :: Iterator&lt;/a&gt;からYAMLishを読み取り、それが表すデータ構造を返します。</target>
        </trans-unit>
        <trans-unit id="e3096c1cbafe76a33a2d02527fbc04d128e472f7" translate="yes" xml:space="preserve">
          <source>Read YAMLish from a &lt;a href=&quot;TAP::Parser::Iterator&quot;&gt;TAP::Parser::Iterator&lt;/a&gt; and return the data structure it represents.</source>
          <target state="translated">&lt;a href=&quot;TAP::Parser::Iterator&quot;&gt;TAP :: Parser :: Iterator&lt;/a&gt;からYAMLishを読み取り、それが表すデータ構造を返します。</target>
        </trans-unit>
        <trans-unit id="941b148e1edab00bee2330ed7ac82ddf4e74edf3" translate="yes" xml:space="preserve">
          <source>Read a message from the queue. Returns the type of the message read. See &lt;a href=&quot;../functions/msgrcv&quot;&gt;msgrcv&lt;/a&gt;. The BUF becomes tainted.</source>
          <target state="translated">キューからメッセージを読み取ります。読み取ったメッセージのタイプを返します。&lt;a href=&quot;../functions/msgrcv&quot;&gt;msgrcvを&lt;/a&gt;参照してください。BUFが汚染されます。</target>
        </trans-unit>
        <trans-unit id="8e5c7827fa305552a8026faac8dc876ce072c543" translate="yes" xml:space="preserve">
          <source>Read a message from the queue. Returns the type of the message read. See &lt;a href=&quot;http://man.he.net/man2/msgrcv&quot;&gt;msgrcv(2)&lt;/a&gt;. The BUF becomes tainted.</source>
          <target state="translated">キューからメッセージを読み取ります。読み取ったメッセージのタイプを返します。&lt;a href=&quot;http://man.he.net/man2/msgrcv&quot;&gt;msgrcv（2）を&lt;/a&gt;参照してください。BUFが汚染されます。</target>
        </trans-unit>
        <trans-unit id="3e2328757ae1c800d4e10ae414e17971850a69f5" translate="yes" xml:space="preserve">
          <source>Read a single character.</source>
          <target state="translated">一文字を読む。</target>
        </trans-unit>
        <trans-unit id="a07c6817a15867b0dc47cde38731ba9873326685" translate="yes" xml:space="preserve">
          <source>Read a single line</source>
          <target state="translated">単行本を読む</target>
        </trans-unit>
        <trans-unit id="553549240039452847251f6622903ab2d2337784" translate="yes" xml:space="preserve">
          <source>Read about &lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt; and &lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; and &lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt; and &lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;と&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;について読み、&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;と&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;を読んでください。</target>
        </trans-unit>
        <trans-unit id="e0a436a3c7281054fa4994ba5b4088adc1430079" translate="yes" xml:space="preserve">
          <source>Read about &lt;a href=&quot;perlfunc#do&quot;&gt;&quot;do&quot; in perlfunc&lt;/a&gt; and &lt;a href=&quot;perlfunc#eval&quot;&gt;&quot;eval&quot; in perlfunc&lt;/a&gt; and &lt;a href=&quot;perlfunc#require&quot;&gt;&quot;require&quot; in perlfunc&lt;/a&gt; and &lt;a href=&quot;perlfunc#use&quot;&gt;&quot;use&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="translated">記事を読む&lt;a href=&quot;perlfunc#do&quot;&gt;perlfuncの中で「やる」&lt;/a&gt;と&lt;a href=&quot;perlfunc#eval&quot;&gt;perlfuncの中に「evalの」&lt;/a&gt;と&lt;a href=&quot;perlfunc#require&quot;&gt;perlfuncの中で「必要」&lt;/a&gt;と&lt;a href=&quot;perlfunc#use&quot;&gt;perlfuncの中に「使用」&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f501e785d8f60607eb8fd29020b8ae54ebe01044" translate="yes" xml:space="preserve">
          <source>Read about back-quotes and about &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; in &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;perlfunc&quot;&gt;perlfuncの&lt;/a&gt;逆引用符と &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; について読んでください。</target>
        </trans-unit>
        <trans-unit id="b73a5af46a324bd716dbf683b98851ca267b84bb" translate="yes" xml:space="preserve">
          <source>Read about back-quotes and about &lt;code&gt;system&lt;/code&gt; and &lt;code&gt;exec&lt;/code&gt; in &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;perlfunc&quot;&gt;perlfuncの&lt;/a&gt;逆引用符と &lt;code&gt;system&lt;/code&gt; と &lt;code&gt;exec&lt;/code&gt; について読んでください。</target>
        </trans-unit>
        <trans-unit id="007c6ee7681668b24b579a3ecbbdba86f7191bbe" translate="yes" xml:space="preserve">
          <source>Read access via Git</source>
          <target state="translated">Git経由でアクセスを読む</target>
        </trans-unit>
        <trans-unit id="e6736eaa1ab69e3d90ab95af13fafa160ed47c93" translate="yes" xml:space="preserve">
          <source>Read access via rsync</source>
          <target state="translated">rsync による読み取りアクセス</target>
        </trans-unit>
        <trans-unit id="78e2b2049458202a1fc5f7c18fb55aa58bb1e225" translate="yes" xml:space="preserve">
          <source>Read access via the web</source>
          <target state="translated">ウェブからのアクセスを読む</target>
        </trans-unit>
        <trans-unit id="9d2a45482290927376f8cd0f8037fb3152d80e59" translate="yes" xml:space="preserve">
          <source>Read ahead.</source>
          <target state="translated">先に読んでください。</target>
        </trans-unit>
        <trans-unit id="bb2c8ec09bc65616d8ed5815b01859080def7101" translate="yes" xml:space="preserve">
          <source>Read and execute debugger commands from</source>
          <target state="translated">からデバッガコマンドを読み込んで実行する</target>
        </trans-unit>
        <trans-unit id="00ebc21a3cf3bbcb1e390623db3b54ac9cad53d9" translate="yes" xml:space="preserve">
          <source>Read and match distroprefs</source>
          <target state="translated">distroprefs の読み込みとマッチ</target>
        </trans-unit>
        <trans-unit id="1de275b3a330a676e1b3a19bf0483a26f7bea910" translate="yes" xml:space="preserve">
          <source>Read and write a subset of YAML for CPAN Meta files</source>
          <target state="translated">CPANメタファイルのYAMLのサブセットを読み書きする</target>
        </trans-unit>
        <trans-unit id="d3dae8f537b10a514d29cfd0d4064e961135e516" translate="yes" xml:space="preserve">
          <source>Read bzip2 files/buffers</source>
          <target state="translated">bzip2 ファイル/バッファの読み込み</target>
        </trans-unit>
        <trans-unit id="c2bc6c064289f3da35d9643e076b2182fbb33d0c" translate="yes" xml:space="preserve">
          <source>Read check compare operation.</source>
          <target state="translated">読み取りチェックの比較操作を行います。</target>
        </trans-unit>
        <trans-unit id="5f496354721b34074a6d09386d4dfd90a7648131" translate="yes" xml:space="preserve">
          <source>Read data from the remote server until a line consisting of a single '.'. Any lines starting with '..' will have one of the '.'s removed.</source>
          <target state="translated">単一の '.' で構成される行までリモートサーバーからデータを読み込みます。で始まる行は '...' のいずれかが削除されます。</target>
        </trans-unit>
        <trans-unit id="58cff263782110131a866571e46995cb57864bc1" translate="yes" xml:space="preserve">
          <source>Read from a file. This uses file descriptors such as those obtained by calling &lt;code&gt;POSIX::open&lt;/code&gt; . If the buffer &lt;code&gt;$buf&lt;/code&gt; is not large enough for the read then Perl will extend it to make room for the request.</source>
          <target state="translated">ファイルから読み取ります。これは、 &lt;code&gt;POSIX::open&lt;/code&gt; 呼び出すことによって取得されるようなファイル記述子を使用します。バッファー &lt;code&gt;$buf&lt;/code&gt; が読み取りに十分な大きさでない場合、Perlはそれを拡張して要求のためのスペースを作ります。</target>
        </trans-unit>
        <trans-unit id="aed9d1fae1d177b75be64cba7887414ab09775c2" translate="yes" xml:space="preserve">
          <source>Read from a file. This uses file descriptors such as those obtained by calling &lt;code&gt;POSIX::open&lt;/code&gt;. If the buffer &lt;code&gt;$buf&lt;/code&gt; is not large enough for the read then Perl will extend it to make room for the request.</source>
          <target state="translated">ファイルから読み取ります。これは、 &lt;code&gt;POSIX::open&lt;/code&gt; 呼び出して取得したようなファイル記述子を使用します。バッファ &lt;code&gt;$buf&lt;/code&gt; が読み取りに十分な大きさでない場合、Perlはそれを拡張してリクエスト用のスペースを作ります。</target>
        </trans-unit>
        <trans-unit id="18cc7e8fd48d963fa396269e4c2ab7dfc690c7a1" translate="yes" xml:space="preserve">
          <source>Read on...</source>
          <target state="translated">続きを読む...</target>
        </trans-unit>
        <trans-unit id="38a567871f2319ef4608911cbaae63388beacceb" translate="yes" xml:space="preserve">
          <source>Read some bytes from the file. Returns the number of bytes actually read, 0 on end-of-file, undef on error.</source>
          <target state="translated">ファイルからいくつかのバイトを読み込みます。実際に読み込んだバイト数を返し、ファイルの終了時には0、エラー時にはundefを返します。</target>
        </trans-unit>
        <trans-unit id="928d9235e436434ac3a507c46f10d425ed6c1452" translate="yes" xml:space="preserve">
          <source>Read some bytes from the scalar. Returns the number of bytes actually read, 0 on end-of-file, undef on error.</source>
          <target state="translated">スカラーから何バイトかを読み込む。実際に読み込んだバイト数を返し、ファイルの終了時には 0、エラー時には undef を返す。</target>
        </trans-unit>
        <trans-unit id="6da6ecf1c98213777d74b19843e6892f664218a5" translate="yes" xml:space="preserve">
          <source>Read the</source>
          <target state="translated">読んでみてください。</target>
        </trans-unit>
        <trans-unit id="445df6f2b2a25f8116b39a5d89fac539c3d48c64" translate="yes" xml:space="preserve">
          <source>Read the FAQs and documentation specific to the port of perl to your operating system (eg, &lt;a href=&quot;perlvms&quot;&gt;perlvms&lt;/a&gt;, &lt;a href=&quot;perlplan9&quot;&gt;perlplan9&lt;/a&gt;, ...). These should contain more detailed information on the vagaries of your perl.</source>
          <target state="translated">オペレーティングシステムへのperlの移植に固有のFAQとドキュメントを読んでください（例：&lt;a href=&quot;perlvms&quot;&gt;perlvms&lt;/a&gt;、&lt;a href=&quot;perlplan9&quot;&gt;perlplan9&lt;/a&gt;、...）。これらはあなたのperlの気まぐれについてのより詳細な情報を含むべきです。</target>
        </trans-unit>
        <trans-unit id="a3f312a281ee3fabbb4644cfca212e21dc23d819" translate="yes" xml:space="preserve">
          <source>Read the given tar file into memory. The first argument can either be the name of a file or a reference to an already open filehandle (or an IO::Zlib object if it's compressed)</source>
          <target state="translated">与えられた tar ファイルをメモリに読み込みます。最初の引数はファイル名か、既に開いているファイルハンドルへの参照 (圧縮されている場合は IO::Zlib オブジェクト)のいずれかです。</target>
        </trans-unit>
        <trans-unit id="1b74d7333cb35735ec7d211619b3f8a0c7fbd713" translate="yes" xml:space="preserve">
          <source>Read zip files/buffers</source>
          <target state="translated">zip ファイル/バッファの読み込み</target>
        </trans-unit>
        <trans-unit id="d5283d26eb840638e1f550dc557572ba6542f3d4" translate="yes" xml:space="preserve">
          <source>Read-Only Values</source>
          <target state="translated">読み取り専用値</target>
        </trans-unit>
        <trans-unit id="5683a14e485b7046ea3107db40da5d887aa290ef" translate="yes" xml:space="preserve">
          <source>Read-only access to the data in the file.</source>
          <target state="translated">ファイル内のデータへの読み取り専用アクセス。</target>
        </trans-unit>
        <trans-unit id="bdc983681241a5008bf0f2decf61749fdd356f1d" translate="yes" xml:space="preserve">
          <source>Read-only optrees</source>
          <target state="translated">読み取り専用オプトリー</target>
        </trans-unit>
        <trans-unit id="cbcc1694c685273c78534f0d3e2cd46541b02c0d" translate="yes" xml:space="preserve">
          <source>Read/Write/Modify Perl/XS typemap files</source>
          <target state="translated">Perl/XS型マップファイルの読み込み/書き込み/変更</target>
        </trans-unit>
        <trans-unit id="d7fd01a502310e8357802950d90a33ad1c88b094" translate="yes" xml:space="preserve">
          <source>ReadFile</source>
          <target state="translated">ReadFile</target>
        </trans-unit>
        <trans-unit id="5225f01f4c17d05f03bd8a6c2a2dfc128c7f65d7" translate="yes" xml:space="preserve">
          <source>ReadMe.txt</source>
          <target state="translated">ReadMe.txt</target>
        </trans-unit>
        <trans-unit id="5aee42c0aa7d8176e37f9692354e87f3f5b4679f" translate="yes" xml:space="preserve">
          <source>Readers have been known to skip important parts of &lt;a href=&quot;../perlguts&quot;&gt;perlguts&lt;/a&gt;, causing much frustration for all.</source>
          <target state="translated">読者は&lt;a href=&quot;../perlguts&quot;&gt;perlgutsの&lt;/a&gt;重要な部分をスキップすることが知られており、すべての人に大きなフラストレーションを引き起こしています。</target>
        </trans-unit>
        <trans-unit id="debc59b4b15093cfa12c8a60b65cc716319f2d65" translate="yes" xml:space="preserve">
          <source>Readers have been known to skip important parts of &lt;a href=&quot;perlguts&quot;&gt;perlguts&lt;/a&gt;, causing much frustration for all.</source>
          <target state="translated">読者は&lt;a href=&quot;perlguts&quot;&gt;perlgutsの&lt;/a&gt;重要な部分をスキップすることが知られており、すべての人に多くのフラストレーションを引き起こします。</target>
        </trans-unit>
        <trans-unit id="ecba0bec4829317939306f304d19e964a7a84e1d" translate="yes" xml:space="preserve">
          <source>Reading &lt;code&gt;Devel::Peek&lt;/code&gt; output takes a bit of practise, so let's go through it line by line.</source>
          <target state="translated">&lt;code&gt;Devel::Peek&lt;/code&gt; 出力を読むには少し練習が必要なので、1行ずつ見ていきましょう。</target>
        </trans-unit>
        <trans-unit id="720629d599316203605d35ccc57d80ad0c87c1df" translate="yes" xml:space="preserve">
          <source>Reading an input line does not split it for you. You get to split it to an array yourself. And the split() operator has different arguments than &lt;b&gt;awk&lt;/b&gt;'s.</source>
          <target state="translated">入力行を読み取っても分割されません。自分で配列に分割できます。また、split（）演算子には&lt;b&gt;awkと&lt;/b&gt;は異なる引数があります。</target>
        </trans-unit>
        <trans-unit id="8d311759432844217fe6bc8debb947ac2204cfa0" translate="yes" xml:space="preserve">
          <source>Reading bgzip files with IO::Uncompress::Gunzip</source>
          <target state="translated">IO::Uncompress::Gunzip で bgzip ファイルを読み込む</target>
        </trans-unit>
        <trans-unit id="aca2d568455adb5d39f1f5a67763764982820867" translate="yes" xml:space="preserve">
          <source>Reading from &lt;code&gt;STDIN&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;STDIN&lt;/code&gt; からの読み取り</target>
        </trans-unit>
        <trans-unit id="43278435f6048011353ab3e1550aec2934094377" translate="yes" xml:space="preserve">
          <source>Reading from STDIN</source>
          <target state="translated">STDINからの読み込み</target>
        </trans-unit>
        <trans-unit id="89c5bc3ff84bf2233b585e1ddc78bf444ba92547" translate="yes" xml:space="preserve">
          <source>Reading from a Filehandle and writing to an in-memory buffer</source>
          <target state="translated">ファイルハンドルからの読み込みとメモリ内バッファへの書き込み</target>
        </trans-unit>
        <trans-unit id="95bcf633adbf815edf186e3fb8ac37d67ee56f62" translate="yes" xml:space="preserve">
          <source>Reading from a file:</source>
          <target state="translated">ファイルからの読み込み。</target>
        </trans-unit>
        <trans-unit id="a3daaeaef0f24df245aaa3148b442905754f46bb" translate="yes" xml:space="preserve">
          <source>Reading in a file that you know happens to be encoded in one of the Unicode or legacy encodings does not magically turn the data into Unicode in Perl's eyes. To do that, specify the appropriate layer when opening files</source>
          <target state="translated">Unicode またはレガシーエンコーディングのいずれかでエンコードされていることがわかっているファイルを読んでも、Perl の目には魔法のようにデータが Unicode になるわけではありません。そのためには、ファイルを開くときに適切なレイヤーを指定してください。</target>
        </trans-unit>
        <trans-unit id="4846fec17a47b45717c157bbd8a0f9bd1ad2e3c9" translate="yes" xml:space="preserve">
          <source>Reading in the whole file at one time is called slurping. It can be useful but it may be a memory hog. Most text file processing can be done a line at a time with Perl's looping constructs.</source>
          <target state="translated">一度にファイル全体を読み込むことをスラーピングといいます。これは便利ですが、メモリを大量に消費する可能性があります。ほとんどのテキストファイルの処理は、Perlのループ構造を使って一度に一行ずつ行うことができます。</target>
        </trans-unit>
        <trans-unit id="d9ebc55e69603ca376de6c992a9642942d55aa0d" translate="yes" xml:space="preserve">
          <source>Reading/writing bytes from/to :utf8 handles.</source>
          <target state="translated">utf8 ハンドルとの間のバイトの読み書き。</target>
        </trans-unit>
        <trans-unit id="3765f01b49c43d45e4334a57b6fc21c7972c3951" translate="yes" xml:space="preserve">
          <source>Readline Support / History in the Debugger</source>
          <target state="translated">リードラインのサポート/デバッガの履歴</target>
        </trans-unit>
        <trans-unit id="fd63187370525346d69be8508f8b50f415e9e87c" translate="yes" xml:space="preserve">
          <source>Reads &lt;code&gt;$size&lt;/code&gt; bytes from the compressed file into &lt;code&gt;$buffer&lt;/code&gt; . If &lt;code&gt;$size&lt;/code&gt; is not specified, it will default to 4096. If the scalar &lt;code&gt;$buffer&lt;/code&gt; is not large enough, it will be extended automatically.</source>
          <target state="translated">&lt;code&gt;$size&lt;/code&gt; バイトを圧縮ファイルから &lt;code&gt;$buffer&lt;/code&gt; 読み取ります。場合は &lt;code&gt;$size&lt;/code&gt; 指定されていない、それはスカラー場合は4096にデフォルト設定されます &lt;code&gt;$buffer&lt;/code&gt; 十分な大きさではない、それは自動的に拡張されます。</target>
        </trans-unit>
        <trans-unit id="a58a70a6e50fefa8c4f40ab5e8413ab2cdce14d2" translate="yes" xml:space="preserve">
          <source>Reads &lt;code&gt;$size&lt;/code&gt; bytes from the compressed file into &lt;code&gt;$buffer&lt;/code&gt;. If &lt;code&gt;$size&lt;/code&gt; is not specified, it will default to 4096. If the scalar &lt;code&gt;$buffer&lt;/code&gt; is not large enough, it will be extended automatically.</source>
          <target state="translated">読み込み &lt;code&gt;$size&lt;/code&gt; に圧縮されたファイルからバイト &lt;code&gt;$buffer&lt;/code&gt; 。場合は &lt;code&gt;$size&lt;/code&gt; 指定されていない、それはスカラー場合は4096にデフォルト設定されます &lt;code&gt;$buffer&lt;/code&gt; 十分な大きさではない、それは自動的に拡張されます。</target>
        </trans-unit>
        <trans-unit id="206a7f5e7297aa5bd7492bad4e008ac4bc46e49d" translate="yes" xml:space="preserve">
          <source>Reads SIZE bytes from a memory segment at ADDR starting at position POS. VAR must be a variable that will hold the data read. Returns true if successful, or false if there is an error. memread() taints the variable.</source>
          <target state="translated">位置POSから始まるADDRのメモリセグメントからSIZEバイトを読み込みます。VARは読み込んだデータを保持する変数でなければなりません。memread()は変数を保持します。</target>
        </trans-unit>
        <trans-unit id="799d4c2bbc52577dcbc3f454b2dcc4d5b936f889" translate="yes" xml:space="preserve">
          <source>Reads a block of compressed data (the size of the compressed block is determined by the &lt;code&gt;Buffer&lt;/code&gt; option in the constructor), uncompresses it and writes any uncompressed data into &lt;code&gt;$buffer&lt;/code&gt; . If the &lt;code&gt;Append&lt;/code&gt; parameter is set in the constructor, the uncompressed data will be appended to the &lt;code&gt;$buffer&lt;/code&gt; parameter. Otherwise &lt;code&gt;$buffer&lt;/code&gt; will be overwritten.</source>
          <target state="translated">圧縮データのブロックを読み取り（圧縮ブロックのサイズはコンストラクターの &lt;code&gt;Buffer&lt;/code&gt; オプションによって決定されます）、圧縮を解除し、圧縮されていないデータを &lt;code&gt;$buffer&lt;/code&gt; 書き込みます。場合は &lt;code&gt;Append&lt;/code&gt; パラメータは、コンストラクタで設定されている、非圧縮データが追加されます &lt;code&gt;$buffer&lt;/code&gt; パラメータ。そうでなければ &lt;code&gt;$buffer&lt;/code&gt; は上書きされます。</target>
        </trans-unit>
        <trans-unit id="2650257dc905190add8fc86376aaa1fd9ceb477d" translate="yes" xml:space="preserve">
          <source>Reads a block of compressed data (the size of the compressed block is determined by the &lt;code&gt;Buffer&lt;/code&gt; option in the constructor), uncompresses it and writes any uncompressed data into &lt;code&gt;$buffer&lt;/code&gt;. If the &lt;code&gt;Append&lt;/code&gt; parameter is set in the constructor, the uncompressed data will be appended to the &lt;code&gt;$buffer&lt;/code&gt; parameter. Otherwise &lt;code&gt;$buffer&lt;/code&gt; will be overwritten.</source>
          <target state="translated">圧縮データのブロックを読み取り（圧縮ブロックのサイズはコンストラクターの &lt;code&gt;Buffer&lt;/code&gt; オプションによって決定されます）、それを解凍し、圧縮されていないデータを &lt;code&gt;$buffer&lt;/code&gt; 書き込みます。場合は &lt;code&gt;Append&lt;/code&gt; パラメータは、コンストラクタで設定されている、非圧縮データが追加されます &lt;code&gt;$buffer&lt;/code&gt; パラメータ。そうしないと、 &lt;code&gt;$buffer&lt;/code&gt; が上書きされます。</target>
        </trans-unit>
        <trans-unit id="a18e9d62cd14286629fc6e76754c10fff378cc5e" translate="yes" xml:space="preserve">
          <source>Reads a single line.</source>
          <target state="translated">1行を読み込みます。</target>
        </trans-unit>
        <trans-unit id="60ee44c28be29184ce4a73c61b1ec7edf4671344" translate="yes" xml:space="preserve">
          <source>Reads are permitted i.e. opened &quot;r&quot; or &quot;w+&quot; (or even &quot;a+&quot; - ick).</source>
          <target state="translated">読み取りは許可されています。すなわち、&quot;r &quot;または &quot;w+&quot;(または &quot;a+&quot;-ickでも可)を開いた状態での読み取りが可能です。</target>
        </trans-unit>
        <trans-unit id="e73f5d1f2a71ec4ec144dc42ca53439f338cb7c6" translate="yes" xml:space="preserve">
          <source>Reads bytes from a file or file-like device. Returns a true value if the read operation was successful. For failure, returns a false value and sets &lt;code&gt;fileLastError()&lt;/code&gt; and &lt;code&gt;$^E&lt;/code&gt; for the reason for the failure.</source>
          <target state="translated">ファイルまたはファイルのようなデバイスからバイトを読み取ります。読み取り操作が成功した場合、真の値を返します。失敗の場合、false値を返し、失敗の理由として &lt;code&gt;fileLastError()&lt;/code&gt; と &lt;code&gt;$^E&lt;/code&gt; を設定します。</target>
        </trans-unit>
        <trans-unit id="42f0afdf9d8c38585692746943b6766dbe732c8a" translate="yes" xml:space="preserve">
          <source>Reads from</source>
          <target state="translated">読み取り</target>
        </trans-unit>
        <trans-unit id="50c8ae4436eb90307a38380dc11b082198b860e7" translate="yes" xml:space="preserve">
          <source>Reads from the filehandle whose typeglob is contained in EXPR (or from &lt;code&gt;*ARGV&lt;/code&gt; if EXPR is not provided). In scalar context, each call reads and returns the next line until end-of-file is reached, whereupon the subsequent call returns &lt;a href=&quot;#undef-EXPR&quot;&gt;&lt;code&gt;undef&lt;/code&gt;&lt;/a&gt;. In list context, reads until end-of-file is reached and returns a list of lines. Note that the notion of &quot;line&quot; used here is whatever you may have defined with &lt;a href=&quot;perlvar#%24%2F&quot;&gt;&lt;code&gt;$/&lt;/code&gt;&lt;/a&gt; (or &lt;code&gt;$INPUT_RECORD_SEPARATOR&lt;/code&gt; in &lt;a href=&quot;english&quot;&gt;English&lt;/a&gt;). See &lt;a href=&quot;perlvar#%24%2F&quot;&gt;&quot;$/&quot; in perlvar&lt;/a&gt;.</source>
          <target state="translated">typeglobがEXPRに含まれているファイルハンドルから（またはEXPRが提供されていない場合は &lt;code&gt;*ARGV&lt;/code&gt; から）読み取ります。スカラーコンテキストでは、各呼び出しはファイルの終わりに達するまで次の行を読み取って返し&lt;a href=&quot;#undef-EXPR&quot;&gt; &lt;code&gt;undef&lt;/code&gt; &lt;/a&gt;。ファイルの終わりに達すると、後続の呼び出しはundefを返します。リストコンテキストでは、ファイルの終わりに達するまで読み取り、行のリストを返します。ここで使用されている「行」の概念は、&lt;a href=&quot;perlvar#%24%2F&quot;&gt; &lt;code&gt;$/&lt;/code&gt; &lt;/a&gt;（または&lt;a href=&quot;english&quot;&gt;英語では&lt;/a&gt; &lt;code&gt;$INPUT_RECORD_SEPARATOR&lt;/code&gt; で定義したものであることに注意してください。&lt;a href=&quot;perlvar#%24%2F&quot;&gt;perlvarの「$ /」を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="d2dc0c11f98a08996cb17f6c2572663d3f74f26f" translate="yes" xml:space="preserve">
          <source>Reads from the filehandle whose typeglob is contained in EXPR (or from &lt;code&gt;*ARGV&lt;/code&gt; if EXPR is not provided). In scalar context, each call reads and returns the next line until end-of-file is reached, whereupon the subsequent call returns &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;. In list context, reads until end-of-file is reached and returns a list of lines. Note that the notion of &quot;line&quot; used here is whatever you may have defined with &lt;code&gt;$/&lt;/code&gt; or &lt;code&gt;$INPUT_RECORD_SEPARATOR&lt;/code&gt; ). See &lt;a href=&quot;perlvar#%24%2f&quot;&gt;$/ in perlvar&lt;/a&gt;.</source>
          <target state="translated">タイプグロブがEXPRに含まれているファイルハンドル（またはEXPRが指定されていない場合は &lt;code&gt;*ARGV&lt;/code&gt; )から読み取ります。スカラーコンテキストでは、各呼び出しはファイルの終わりに達するまで次の行を読み取って返し、その後の呼び出しは &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; を返します。リストのコンテキストでは、ファイルの終わりに達するまで読み取り、行のリストを返します。ここで使用されている「行」の概念は、 &lt;code&gt;$/&lt;/code&gt; または &lt;code&gt;$INPUT_RECORD_SEPARATOR&lt;/code&gt; 定義したものであることに注意してください。&lt;a href=&quot;perlvar#%24%2f&quot;&gt;perlvarの$ /を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="5b4d819b245f8997ea46d716718b7b5137afee52" translate="yes" xml:space="preserve">
          <source>Reads from the filehandle whose typeglob is contained in EXPR (or from &lt;code&gt;*ARGV&lt;/code&gt; if EXPR is not provided). In scalar context, each call reads and returns the next line until end-of-file is reached, whereupon the subsequent call returns &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;. In list context, reads until end-of-file is reached and returns a list of lines. Note that the notion of &quot;line&quot; used here is whatever you may have defined with &lt;code&gt;$/&lt;/code&gt; or &lt;code&gt;$INPUT_RECORD_SEPARATOR&lt;/code&gt; ). See &lt;a href=&quot;../perlvar#%24%2f&quot;&gt;$/ in perlvar&lt;/a&gt;.</source>
          <target state="translated">タイプグロブがEXPRに含まれているファイルハンドル（またはEXPRが指定されていない場合は &lt;code&gt;*ARGV&lt;/code&gt; )から読み取ります。スカラーコンテキストでは、各呼び出しはファイルの終わりに達するまで次の行を読み取って返し、その後の呼び出しは &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; を返します。リストのコンテキストでは、ファイルの終わりに達するまで読み取り、行のリストを返します。ここで使用されている「行」の概念は、 &lt;code&gt;$/&lt;/code&gt; または &lt;code&gt;$INPUT_RECORD_SEPARATOR&lt;/code&gt; 定義したものであることに注意してください。&lt;a href=&quot;../perlvar#%24%2f&quot;&gt;perlvarの$ /を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="213d34b4c41155066cb47829608b83bcac6c4f80" translate="yes" xml:space="preserve">
          <source>Reads in the next chunk of text to be lexed, appending it to &lt;a href=&quot;#PL_parser-%3Elinestr&quot;&gt;&quot;PL_parser-&amp;gt;linestr&quot;&lt;/a&gt;. This should be called when lexing code has looked to the end of the current chunk and wants to know more. It is usual, but not necessary, for lexing to have consumed the entirety of the current chunk at this time.</source>
          <target state="translated">字句解析されるテキストの次のチャンクを読み込み、&lt;a href=&quot;#PL_parser-%3Elinestr&quot;&gt;「PL_parser-&amp;gt; linestr」に&lt;/a&gt;追加します。これは、字句解析コードが現在のチャンクの最後を調べて、詳細を知りたいときに呼び出す必要があります。この時点で字句解析が現在のチャンク全体を消費するのは通常ですが、必須ではありません。</target>
        </trans-unit>
        <trans-unit id="5686d4cf607b2427e345e3a17783aa2d6f48772a" translate="yes" xml:space="preserve">
          <source>Reads in the next chunk of text to be lexed, appending it to &lt;a href=&quot;#PL_parser-%3elinestr&quot;&gt;PL_parser-&amp;gt;linestr&lt;/a&gt;. This should be called when lexing code has looked to the end of the current chunk and wants to know more. It is usual, but not necessary, for lexing to have consumed the entirety of the current chunk at this time.</source>
          <target state="translated">字句解析する次のテキストのチャンクを読み取り、&lt;a href=&quot;#PL_parser-%3elinestr&quot;&gt;PL_parser-&amp;gt; linestrに&lt;/a&gt;追加します。これは、字句解析コードが現在のチャンクの終わりに到達し、詳細を知りたいときに呼び出す必要があります。この時点で、字句解析が現在のチャンクの全体を消費したことは通常ですが、必須ではありません。</target>
        </trans-unit>
        <trans-unit id="0e502d5f8379d8469e98c1ca45f22f6d653d22e2" translate="yes" xml:space="preserve">
          <source>Reads into</source>
          <target state="translated">読み込み</target>
        </trans-unit>
        <trans-unit id="b4633f7897c4780006d0f6007b4afc7f1f655f8b" translate="yes" xml:space="preserve">
          <source>Reads into &lt;code&gt;len&lt;/code&gt; the offset from &lt;code&gt;SvPVX&lt;/code&gt; back to the true start of the allocated buffer, which will be non-zero if &lt;code&gt;sv_chop&lt;/code&gt; has been used to efficiently remove characters from start of the buffer. Implemented as a macro, which takes the address of &lt;code&gt;len&lt;/code&gt;, which must be of type &lt;code&gt;STRLEN&lt;/code&gt;. Evaluates &lt;code&gt;sv&lt;/code&gt; more than once. Sets &lt;code&gt;len&lt;/code&gt; to 0 if &lt;code&gt;SvOOK(sv)&lt;/code&gt; is false.</source>
          <target state="translated">&lt;code&gt;SvPVX&lt;/code&gt; から割り当てられたバッファーの真の開始までのオフセットを &lt;code&gt;len&lt;/code&gt; に読み込みます。これは、 &lt;code&gt;sv_chop&lt;/code&gt; を使用してバッファーの開始から文字を効率的に削除した場合、ゼロ以外になります。 &lt;code&gt;len&lt;/code&gt; のアドレスをとるマクロとして実装されます &lt;code&gt;STRLEN&lt;/code&gt; のアドレスはSTRLEN型である必要があります。 &lt;code&gt;sv&lt;/code&gt; を複数回評価します。 &lt;code&gt;SvOOK(sv)&lt;/code&gt; がfalseの場合、 &lt;code&gt;len&lt;/code&gt; を0に設定します。</target>
        </trans-unit>
        <trans-unit id="a7c14344c48adcd52ee096bd40b5d4a622c40abc" translate="yes" xml:space="preserve">
          <source>Reads optional spaces, in Perl style, in the text currently being lexed. The spaces may include ordinary whitespace characters and Perl-style comments. &lt;code&gt;#line&lt;/code&gt; directives are processed if encountered. &lt;a href=&quot;#PL_parser-%3Ebufptr&quot;&gt;&quot;PL_parser-&amp;gt;bufptr&quot;&lt;/a&gt; is moved past the spaces, so that it points at a non-space character (or the end of the input text).</source>
          <target state="translated">現在lexedされているテキスト内のオプションのスペースをPerlスタイルで読み取ります。スペースには、通常の空白文字とPerlスタイルのコメントを含めることができます。 &lt;code&gt;#line&lt;/code&gt; ディレクティブは、検出された場合に処理されます。&lt;a href=&quot;#PL_parser-%3Ebufptr&quot;&gt;「PL_parser-&amp;gt; bufptr」&lt;/a&gt;はスペースを超えて移動されるため、スペース以外の文字（または入力テキストの終わり）を指します。</target>
        </trans-unit>
        <trans-unit id="0c3577c9b285cf2945e65a6e8c5f9d480cfc5c7d" translate="yes" xml:space="preserve">
          <source>Reads optional spaces, in Perl style, in the text currently being lexed. The spaces may include ordinary whitespace characters and Perl-style comments. &lt;code&gt;#line&lt;/code&gt; directives are processed if encountered. &lt;a href=&quot;#PL_parser-%3ebufptr&quot;&gt;PL_parser-&amp;gt;bufptr&lt;/a&gt; is moved past the spaces, so that it points at a non-space character (or the end of the input text).</source>
          <target state="translated">現在字句解析されているテキスト内のPerlスタイルのオプションのスペースを読み取ります。スペースには、通常の空白文字とPerlスタイルのコメントを含めることができます。 &lt;code&gt;#line&lt;/code&gt; ディレクティブが検出された場合は処理されます。&lt;a href=&quot;#PL_parser-%3ebufptr&quot;&gt;PL_parser-&amp;gt; bufptr&lt;/a&gt;はスペースを越えて移動されるため、スペース以外の文字（または入力テキストの末尾）を指します。</target>
        </trans-unit>
        <trans-unit id="974a6462ab03e1de1ff9f8fd2c232affa76846af" translate="yes" xml:space="preserve">
          <source>Reads or writes the System V shared memory segment ID starting at position POS for size SIZE by attaching to it, copying in/out, and detaching from it. When reading, VAR must be a variable that will hold the data read. When writing, if STRING is too long, only SIZE bytes are used; if STRING is too short, nulls are written to fill out SIZE bytes. Return true if successful, false on error. &lt;a href=&quot;#shmread-ID%2CVAR%2CPOS%2CSIZE&quot;&gt;&lt;code&gt;shmread&lt;/code&gt;&lt;/a&gt; taints the variable. See also &lt;a href=&quot;perlipc#SysV-IPC&quot;&gt;&quot;SysV IPC&quot; in perlipc&lt;/a&gt; and the documentation for &lt;a href=&quot;IPC::SysV&quot;&gt;&lt;code&gt;IPC::SysV&lt;/code&gt;&lt;/a&gt; and the &lt;a href=&quot;IPC::Shareable&quot;&gt;&lt;code&gt;IPC::Shareable&lt;/code&gt;&lt;/a&gt; module from CPAN.</source>
          <target state="translated">System V共有メモリセグメントIDを、サイズSIZEのPOSの位置から開始して、アタッチ、コピーイン/アウト、およびデタッチすることにより、読み取りまたは書き込みを行います。読み取る場合、VARは読み取られたデータを保持する変数である必要があります。書き込み時に、STRINGが長すぎる場合、SIZEバイトのみが使用されます。 STRINGが短すぎると、SIZEバイトを埋めるためにnullが書き込まれます。成功した場合はtrueを返し、エラーの場合はfalseを返します。&lt;a href=&quot;#shmread-ID%2CVAR%2CPOS%2CSIZE&quot;&gt; &lt;code&gt;shmread&lt;/code&gt; &lt;/a&gt;は変数を汚染します。&lt;a href=&quot;perlipc#SysV-IPC&quot;&gt;perlipcの「SysVIPC」&lt;/a&gt;および&lt;a href=&quot;IPC::SysV&quot;&gt; &lt;code&gt;IPC::SysV&lt;/code&gt; &lt;/a&gt;とCPANの&lt;a href=&quot;IPC::Shareable&quot;&gt; &lt;code&gt;IPC::Shareable&lt;/code&gt; &lt;/a&gt;モジュールのドキュメントも参照してください。</target>
        </trans-unit>
        <trans-unit id="8320a729c06e516aca0a96e512d594788146ecaf" translate="yes" xml:space="preserve">
          <source>Reads or writes the System V shared memory segment ID starting at position POS for size SIZE by attaching to it, copying in/out, and detaching from it. When reading, VAR must be a variable that will hold the data read. When writing, if STRING is too long, only SIZE bytes are used; if STRING is too short, nulls are written to fill out SIZE bytes. Return true if successful, false on error. shmread() taints the variable. See also &lt;a href=&quot;../perlipc#SysV-IPC&quot;&gt;SysV IPC in perlipc&lt;/a&gt;, &lt;code&gt;IPC::SysV&lt;/code&gt; , and the &lt;code&gt;IPC::Shareable&lt;/code&gt; module from CPAN.</source>
          <target state="translated">System V共有メモリセグメントIDを、サイズSIZEの位置POSから開始し、それに接続、コピー、イン/アウト、およびデタッチすることにより、読み取りまたは書き込みを行います。読み取り時、VARは読み取ったデータを保持する変数でなければなりません。書き込み時に、STRINGが長すぎる場合は、SIZEバイトのみが使用されます。STRINGが短すぎる場合、SIZEバイトを埋めるためにnullが書き込まれます。成功した場合はtrue、エラーの場合はfalseを返します。shmread（）は変数を汚染します。&lt;a href=&quot;../perlipc#SysV-IPC&quot;&gt;perlipcのSysV IPC&lt;/a&gt;、 &lt;code&gt;IPC::SysV&lt;/code&gt; 、およびCPANの &lt;code&gt;IPC::Shareable&lt;/code&gt; モジュールも参照してください。</target>
        </trans-unit>
        <trans-unit id="f125d7e184df479fec94e499e44324e6ceb7098a" translate="yes" xml:space="preserve">
          <source>Reads or writes the System V shared memory segment ID starting at position POS for size SIZE by attaching to it, copying in/out, and detaching from it. When reading, VAR must be a variable that will hold the data read. When writing, if STRING is too long, only SIZE bytes are used; if STRING is too short, nulls are written to fill out SIZE bytes. Return true if successful, false on error. shmread() taints the variable. See also &lt;a href=&quot;perlipc#SysV-IPC&quot;&gt;SysV IPC in perlipc&lt;/a&gt;, &lt;code&gt;IPC::SysV&lt;/code&gt; , and the &lt;code&gt;IPC::Shareable&lt;/code&gt; module from CPAN.</source>
          <target state="translated">System V共有メモリセグメントIDを、サイズSIZEの位置POSから開始し、それに接続、コピー、イン/アウト、およびデタッチすることにより、読み取りまたは書き込みを行います。読み取り時、VARは読み取ったデータを保持する変数でなければなりません。書き込み時に、STRINGが長すぎる場合は、SIZEバイトのみが使用されます。STRINGが短すぎる場合、SIZEバイトを埋めるためにnullが書き込まれます。成功した場合はtrue、エラーの場合はfalseを返します。shmread（）は変数を汚染します。&lt;a href=&quot;perlipc#SysV-IPC&quot;&gt;perlipcのSysV IPC&lt;/a&gt;、 &lt;code&gt;IPC::SysV&lt;/code&gt; 、およびCPANの &lt;code&gt;IPC::Shareable&lt;/code&gt; モジュールも参照してください。</target>
        </trans-unit>
        <trans-unit id="ea52dbfee11677b27a8ef60e0a8aad94aefd05ca" translate="yes" xml:space="preserve">
          <source>Reads regardless of lock.</source>
          <target state="translated">ロックに関係なく読み込みます。</target>
        </trans-unit>
        <trans-unit id="ff3932830db44982eec2ae215d9491c4fc84e2b9" translate="yes" xml:space="preserve">
          <source>Reads the YAML stream from a file instead of a string.</source>
          <target state="translated">文字列の代わりにファイルからYAMLストリームを読み込みます。</target>
        </trans-unit>
        <trans-unit id="b5f50fa24a3e4fd3d77314b2073891ffb95299e6" translate="yes" xml:space="preserve">
          <source>Reads the contents of</source>
          <target state="translated">の内容を読み込みます。</target>
        </trans-unit>
        <trans-unit id="c0ef207c7fee9445bbf063cb6e3bc97ad3d05a6b" translate="yes" xml:space="preserve">
          <source>Reads the contents of &lt;code&gt;$input&lt;/code&gt; , compresses it and writes the compressed data to &lt;code&gt;$output&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;$input&lt;/code&gt; の内容を読み取り、それを圧縮して、圧縮されたデータを &lt;code&gt;$output&lt;/code&gt; 書き込みます。</target>
        </trans-unit>
        <trans-unit id="b6f7764f30fcaf78fc4802def743662a39097660" translate="yes" xml:space="preserve">
          <source>Reads the contents of &lt;code&gt;$input&lt;/code&gt;, compresses it and writes the compressed data to &lt;code&gt;$output&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$input&lt;/code&gt; の内容を読み取り、圧縮して、圧縮されたデータを &lt;code&gt;$output&lt;/code&gt; 書き込みます。</target>
        </trans-unit>
        <trans-unit id="bcbd8069c4dba18061616ddc8229fc59e4a96a91" translate="yes" xml:space="preserve">
          <source>Reads the next (Unicode) character in the text currently being lexed. Returns the codepoint (unsigned integer value) of the character read, and moves &lt;a href=&quot;#PL_parser-%3Ebufptr&quot;&gt;&quot;PL_parser-&amp;gt;bufptr&quot;&lt;/a&gt; past the character, or returns -1 if lexing has reached the end of the input text. To non-destructively examine the next character, use &lt;a href=&quot;#lex_peek_unichar&quot;&gt;&quot;lex_peek_unichar&quot;&lt;/a&gt; instead.</source>
          <target state="translated">現在lexedされているテキストの次の（Unicode）文字を読み取ります。読み取られた文字のコードポイント（符号なし整数値）を返し、&lt;a href=&quot;#PL_parser-%3Ebufptr&quot;&gt;「PL_parser-&amp;gt; bufptr」を&lt;/a&gt;文字を超えて移動するか、字句解析が入力テキストの最後に達した場合は-1を返します。次の文字を非破壊的に調べるには、代わりに&lt;a href=&quot;#lex_peek_unichar&quot;&gt;「lex_peek_unichar」を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="69012285115dba7938e88e4e1d96760f57b6f1cd" translate="yes" xml:space="preserve">
          <source>Reads the next (Unicode) character in the text currently being lexed. Returns the codepoint (unsigned integer value) of the character read, and moves &lt;a href=&quot;#PL_parser-%3ebufptr&quot;&gt;PL_parser-&amp;gt;bufptr&lt;/a&gt; past the character, or returns -1 if lexing has reached the end of the input text. To non-destructively examine the next character, use &lt;a href=&quot;#lex_peek_unichar&quot;&gt;lex_peek_unichar&lt;/a&gt; instead.</source>
          <target state="translated">現在字句解析されているテキストの次の（Unicode）文字を読み取ります。読み取った文字のコードポイント（符号なし整数値）を返し、&lt;a href=&quot;#PL_parser-%3ebufptr&quot;&gt;PL_parser-&amp;gt; bufptrを&lt;/a&gt;その文字を越えて移動します。字句解析が入力テキストの終わりに達した場合は-1を返します。次の文字を非破壊的に調べるには、代わりに&lt;a href=&quot;#lex_peek_unichar&quot;&gt;lex_peek_unichar&lt;/a&gt;を使用します。</target>
        </trans-unit>
        <trans-unit id="91c6ed682ed41c74c87caf67fe452fd0fd42fdad" translate="yes" xml:space="preserve">
          <source>Reads the next line from the compressed file into &lt;code&gt;$line&lt;/code&gt; .</source>
          <target state="translated">圧縮ファイルから次の行を &lt;code&gt;$line&lt;/code&gt; 読み取ります。</target>
        </trans-unit>
        <trans-unit id="e29fead37da1b87fbe62597de531632059dc6ee8" translate="yes" xml:space="preserve">
          <source>Reads the next line from the compressed file into &lt;code&gt;$line&lt;/code&gt;.</source>
          <target state="translated">圧縮ファイルから次の行を &lt;code&gt;$line&lt;/code&gt; 読み込みます。</target>
        </trans-unit>
        <trans-unit id="20f7c17840218f6790c690d1641eb71144f6c802" translate="yes" xml:space="preserve">
          <source>Real elapsed time &quot;wallclock seconds&quot;.</source>
          <target state="translated">実質経過時間「ウォールクロック秒」。</target>
        </trans-unit>
        <trans-unit id="aec77234378ed55865902c265252eec7cd62f206" translate="yes" xml:space="preserve">
          <source>Real number. For example &lt;code&gt;3.14&lt;/code&gt; , &lt;code&gt;-6.23E24&lt;/code&gt; and so on.</source>
          <target state="translated">実数。たとえば、 &lt;code&gt;3.14&lt;/code&gt; 、 &lt;code&gt;-6.23E24&lt;/code&gt; などです。</target>
        </trans-unit>
        <trans-unit id="079d6b47b5dbd9b4acf74037b87b5594290349ba" translate="yes" xml:space="preserve">
          <source>Real number. For example &lt;code&gt;3.14&lt;/code&gt;, &lt;code&gt;-6.23E24&lt;/code&gt; and so on.</source>
          <target state="translated">実数。たとえば、 &lt;code&gt;3.14&lt;/code&gt; 、 &lt;code&gt;-6.23E24&lt;/code&gt; などです。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
