<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="66c7071a6fa7cb2bb38d9b2c01a05a137c430add" translate="yes" xml:space="preserve">
          <source>Optional - if not present a lower layer does the open. If present, called after the layer is pushed for sysopen style opens which pass a numeric mode and permissions. This function is subject to change as there is no easy way to get a lower layer to do the open and then regain control.</source>
          <target state="translated">オプション-存在しない場合、下位レイヤーがオープンを行います。存在する場合、数値モードとパーミッションを渡す sysopen スタイルのオープンのためにレイヤがプッシュされた後に呼び出されます。下位レイヤにオープンをさせてから制御を回復させる簡単な方法がないので、この関数は変更される可能性があります。</target>
        </trans-unit>
        <trans-unit id="00aae857e158214ab9fea8340d3e81b79261acff" translate="yes" xml:space="preserve">
          <source>Optional - if not present a lower layer does the open. If present, called for normal opens after the layer is pushed. This function is subject to change as there is no easy way to get a lower layer to do the open and then regain control.</source>
          <target state="translated">省略可能-存在しない場合は、 下位レイヤーがオープンします。存在する場合は、レイヤーが押された後に通常のオープンのために呼び出されます。下位レイヤーにオープンをさせてから制御を回復させる簡単な方法がないため、この関数は変更される可能性があります。</target>
        </trans-unit>
        <trans-unit id="c67ecb9d9cd03592e40a8cfa5395a4594326ddf4" translate="yes" xml:space="preserve">
          <source>Optional - if not present the layer is popped on binmode($fh) or when &lt;code&gt;:raw&lt;/code&gt; is pushed. If present it should return 0 on success, -1 on error, or undef to pop the layer.</source>
          <target state="translated">オプション-存在しない場合、レイヤーはbinmode（$ fh）または &lt;code&gt;:raw&lt;/code&gt; がプッシュされたときにポップされます。存在する場合、成功した場合は0、エラーの場合は-1、またはレイヤーをポップするundefを返します。</target>
        </trans-unit>
        <trans-unit id="ea8b4c621a2282475d1c70505956ae9cadc5c505" translate="yes" xml:space="preserve">
          <source>Optional - if present it will be called immediately after PUSHED has returned. It should return a true value if the layer expects data to be UTF-8 encoded. If it returns true, the result is as if the caller had done</source>
          <target state="translated">省略可能-存在する場合は、PUSHED が返された直後に呼び出されます。レイヤがデータが UTF-8 エンコードされていることを期待している場合は、true を返すべきです。true を返す場合は、呼び出し元が</target>
        </trans-unit>
        <trans-unit id="74e7ab47ea9482eb12b8ad3e12ec65d52754eeba" translate="yes" xml:space="preserve">
          <source>Optional Exports</source>
          <target state="translated">オプションの輸出</target>
        </trans-unit>
        <trans-unit id="a1586faede4e39ea6174b7a684a9a34f79190989" translate="yes" xml:space="preserve">
          <source>Optional Libraries for Perl on Cygwin</source>
          <target state="translated">Cygwin上のPerl用オプションライブラリ</target>
        </trans-unit>
        <trans-unit id="ddd2d4ec70a68949d8c75dd5fb57b7fa281e8e27" translate="yes" xml:space="preserve">
          <source>Optional Parameters</source>
          <target state="translated">オプションのパラメータ</target>
        </trans-unit>
        <trans-unit id="5d44ae4df7ee3a08403ce68c38bfce3a82e017dd" translate="yes" xml:space="preserve">
          <source>Optional argument is (NAMESPACE), where NAMESPACE is the root namespace to use for the compartment (defaults to &quot;Safe::Root0&quot;, incremented for each new compartment).</source>
          <target state="translated">オプションの引数は (NAMESPACE)で、NAMESPACE はコンパートメントに使用するルート名前空間です (デフォルトは &quot;Safe::Root0&quot; で、新しいコンパートメントごとにインクリメントされます)。</target>
        </trans-unit>
        <trans-unit id="3da1e20ae914ed93255ed51de67afd32c72f609a" translate="yes" xml:space="preserve">
          <source>Optional arguments: &lt;code&gt;replace =&amp;gt; 1&lt;/code&gt; to force replacement of existing typemap entries without warning or &lt;code&gt;skip =&amp;gt; 1&lt;/code&gt; to skip entries that exist already in the typemap.</source>
          <target state="translated">オプションの引数： &lt;code&gt;replace =&amp;gt; 1&lt;/code&gt; を指定すると、警告なしで既存のタイプマップエントリが強制的に置き換えられます。また、 &lt;code&gt;skip =&amp;gt; 1&lt;/code&gt; を指定すると、タイプマップにすでに存在するエントリがスキップされます。</target>
        </trans-unit>
        <trans-unit id="858ee6824ad16cd9de2ea0b66e4472f499aa9cb6" translate="yes" xml:space="preserve">
          <source>Optional named arguments: &lt;code&gt;replace =&amp;gt; 1&lt;/code&gt; forces removal/replacement of existing &lt;code&gt;INPUT&lt;/code&gt; entries of the same &lt;code&gt;xstype&lt;/code&gt;. &lt;code&gt;skip =&amp;gt; 1&lt;/code&gt; triggers a</source>
          <target state="translated">オプションの名前付き引数： &lt;code&gt;replace =&amp;gt; 1&lt;/code&gt; は、同じ &lt;code&gt;xstype&lt;/code&gt; の既存の &lt;code&gt;INPUT&lt;/code&gt; エントリの削除/置換を強制します。 &lt;code&gt;skip =&amp;gt; 1&lt;/code&gt; は</target>
        </trans-unit>
        <trans-unit id="64ae2939ab54c9c04e408a0017cb3413d0b55664" translate="yes" xml:space="preserve">
          <source>Optional named arguments: &lt;code&gt;replace =&amp;gt; 1&lt;/code&gt; forces removal/replacement of existing &lt;code&gt;TYPEMAP&lt;/code&gt; entries of the same &lt;code&gt;ctype&lt;/code&gt;. &lt;code&gt;skip =&amp;gt; 1&lt;/code&gt; triggers a</source>
          <target state="translated">オプションの名前付き引数： &lt;code&gt;replace =&amp;gt; 1&lt;/code&gt; は、同じ &lt;code&gt;ctype&lt;/code&gt; の既存の &lt;code&gt;TYPEMAP&lt;/code&gt; エントリの削除/置換を強制します。 &lt;code&gt;skip =&amp;gt; 1&lt;/code&gt; は</target>
        </trans-unit>
        <trans-unit id="9fa68d1d92ca4ca3c04a935b810e97e06a61a345" translate="yes" xml:space="preserve">
          <source>Optional parameter lacks default expression</source>
          <target state="translated">オプションのパラメータにはデフォルトの式がありません。</target>
        </trans-unit>
        <trans-unit id="b9ba9d28014863d3a9a0ee7c8bcd9a7976dbaee9" translate="yes" xml:space="preserve">
          <source>Optional positional parameters must come after all mandatory positional parameters. (If there are no mandatory positional parameters then an optional positional parameters can be the first thing in the signature.) If there are multiple optional positional parameters and not enough arguments are supplied to fill them all, they will be filled from left to right.</source>
          <target state="translated">オプションの位置パラメータは、すべての必須位置パラメータの後に来なければなりません。(必須の位置パラメータがない場合は、オプションの位置パラメータをシグネチャの最初のものにすることができます)。複数のオプションの位置パラメータがあり、それらをすべて埋めるのに十分な引数が与えられていない場合、それらは左から右へと埋められていきます。</target>
        </trans-unit>
        <trans-unit id="555e2b70062eccf33f8313bcc3fba207cf55ade3" translate="yes" xml:space="preserve">
          <source>Optional sorting weight for names, to determine the order of linear testing when multiple names fall in the same case of a switch clause. Higher comes earlier, undefined defaults to zero.</source>
          <target state="translated">複数の名前がスイッチ句の同じケースに含まれる場合の線形テストの順序を決定するための、名前のソート重み(オプション)。高い方が先になり、未定義の場合はデフォルトはゼロになります。</target>
        </trans-unit>
        <trans-unit id="da333a941fe0f82279c2c56c201f1766ccc0c3ef" translate="yes" xml:space="preserve">
          <source>Optional state for the subroutine. The state is passed in as &lt;code&gt;$_[1]&lt;/code&gt; . A reference to the subroutine itself is passed in as &lt;code&gt;$_[0]&lt;/code&gt; .</source>
          <target state="translated">サブルーチンのオプションの状態。状態は &lt;code&gt;$_[1]&lt;/code&gt; として渡されます。サブルーチン自体への参照は、 &lt;code&gt;$_[0]&lt;/code&gt; として渡されます。</target>
        </trans-unit>
        <trans-unit id="777c6cf6d9966ee4f662be6ef8e1362bbe2c77cf" translate="yes" xml:space="preserve">
          <source>Optional state for the subroutine. The state is passed in as &lt;code&gt;$_[1]&lt;/code&gt;.</source>
          <target state="translated">サブルーチンのオプションの状態。状態は &lt;code&gt;$_[1]&lt;/code&gt; として渡されます。</target>
        </trans-unit>
        <trans-unit id="3640bdb58e89d324060d7d4f59fe26b0786d9f1e" translate="yes" xml:space="preserve">
          <source>Optional system utilities/More</source>
          <target state="translated">オプションのシステムユーティリティ/その他</target>
        </trans-unit>
        <trans-unit id="d82440108ab7dd6400453483bc258adad0e75461" translate="yes" xml:space="preserve">
          <source>Optional warnings are enabled by using the &lt;code&gt;warnings&lt;/code&gt; pragma or the &lt;b&gt;-w&lt;/b&gt; and &lt;b&gt;-W&lt;/b&gt; switches. Warnings may be captured by setting &lt;code&gt;$SIG{__WARN__}&lt;/code&gt; to a reference to a routine that will be called on each warning instead of printing it. See &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt;.</source>
          <target state="translated">オプションの警告は、 &lt;code&gt;warnings&lt;/code&gt; プラグマまたは&lt;b&gt;-w&lt;/b&gt;および&lt;b&gt;-W&lt;/b&gt;スイッチを使用して有効にします。 &lt;code&gt;$SIG{__WARN__}&lt;/code&gt; を、出力する代わりに警告ごとに呼び出されるルーチンへの参照に設定することにより、警告をキャプチャできます。&lt;a href=&quot;perlvar&quot;&gt;perlvarを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="6529dfde12fe3045eaddbf8477d2f734dbabc795" translate="yes" xml:space="preserve">
          <source>Optional, if the display text was generated from another facet this should state what facet it was.</source>
          <target state="translated">省略可能、表示テキストが他のファセットから生成された場合は、それがどのファセットであったかを示すべきです。</target>
        </trans-unit>
        <trans-unit id="24b988e3016e060f13aed9e152faafade2e2cb57" translate="yes" xml:space="preserve">
          <source>Optional. If present should return an SV * representing the string argument passed to the layer when it was pushed. e.g. &quot;:encoding(ascii)&quot; would return an SvPV with value &quot;ascii&quot;. (</source>
          <target state="translated">省略可能。存在する場合は、プッシュされたときにレイヤに渡された文字列引数を表す SV*を返す必要があります。(</target>
        </trans-unit>
        <trans-unit id="f5c256c5844c41d82f2e7aa133aee1f37b9932b4" translate="yes" xml:space="preserve">
          <source>Optional. No return.</source>
          <target state="translated">オプションだ 戻らない</target>
        </trans-unit>
        <trans-unit id="ce76e8ee73778e5c913a5dddf60e41e4482a439a" translate="yes" xml:space="preserve">
          <source>Optional. Returns end-of-file state. Default is a function of the return value of FILL or READ.</source>
          <target state="translated">オプションです。ファイルの終了状態を返します。デフォルトはFILLまたはREADの戻り値の関数です。</target>
        </trans-unit>
        <trans-unit id="aceaf62498201d3cb7c33131b06976b5e7ec5946" translate="yes" xml:space="preserve">
          <source>Optional. Returns error state. Default is no error until a mechanism to signal error (die?) is worked out.</source>
          <target state="translated">オプションです。エラー状態を返します。デフォルトは、エラーを知らせるメカニズム(ダイ?</target>
        </trans-unit>
        <trans-unit id="d29adb828f03b9de58472833d11e71256f30b852" translate="yes" xml:space="preserve">
          <source>Optional. Used when &lt;code&gt;:raw&lt;/code&gt; layer is pushed (explicitly or as a result of binmode(FH)). If not present layer will be popped. If present should configure layer as binary (or pop itself) and return 0. If it returns -1 for error &lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt; will fail with layer still on the stack.</source>
          <target state="translated">オプション。 &lt;code&gt;:raw&lt;/code&gt; レイヤーがプッシュされたときに使用されます（明示的またはbinmode（FH）の結果として）。存在しない場合、レイヤーがポップされます。存在する場合は、レイヤーをバイナリとして構成（またはそれ自体をポップ）して0を返します。エラーの場合に-1を返すと、 &lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt; は失敗し、レイヤーはスタック上に残ります。</target>
        </trans-unit>
        <trans-unit id="3db45b882282b9e7c135114feb30342b7341ffff" translate="yes" xml:space="preserve">
          <source>Optional. Used when &lt;code&gt;:raw&lt;/code&gt; layer is pushed (explicitly or as a result of binmode(FH)). If not present layer will be popped. If present should configure layer as binary (or pop itself) and return 0. If it returns -1 for error &lt;code&gt;binmode&lt;/code&gt; will fail with layer still on the stack.</source>
          <target state="translated">オプション。 &lt;code&gt;:raw&lt;/code&gt; レイヤーがプッシュされたときに使用されます（明示的に、またはbinmode（FH）の結果として）。存在しない場合、レイヤーがポップされます。存在する場合は、レイヤーをバイナリとして構成（またはポップ自体）して0を返す必要があります。エラーに対して-1を返す場合、 &lt;code&gt;binmode&lt;/code&gt; は失敗し、レイヤーはスタック上にあります。</target>
        </trans-unit>
        <trans-unit id="54b5a80daefc2af51dc49c0805f2d21b91e8668b" translate="yes" xml:space="preserve">
          <source>Optionally calls timethese(), then outputs comparison chart. This:</source>
          <target state="translated">オプションで timethese()を呼び出し、比較チャートを出力します。これは</target>
        </trans-unit>
        <trans-unit id="26132c6770a4b3e227c527d37c031ee3bb13e049" translate="yes" xml:space="preserve">
          <source>Optionally takes &lt;code&gt;prototype&lt;/code&gt; parameter.</source>
          <target state="translated">オプションで、 &lt;code&gt;prototype&lt;/code&gt; パラメータを取ります。</target>
        </trans-unit>
        <trans-unit id="8f2a6f0c361fa39f73808260e667b43a0b479347" translate="yes" xml:space="preserve">
          <source>Optionally, for trying out the feature, you may want to enable automatic dumping of the backtrace just before a warning or croak (die) message is emitted, by adding &lt;code&gt;-Accflags=-DUSE_C_BACKTRACE_ON_ERROR&lt;/code&gt; for Configure.</source>
          <target state="translated">必要に応じて、機能を &lt;code&gt;-Accflags=-DUSE_C_BACKTRACE_ON_ERROR&lt;/code&gt; ために、Configureに-Accflags = -DUSE_C_BACKTRACE_ON_ERRORを追加することにより、警告または警告（ダイ）メッセージが出力される直前にバックトレースの自動ダンプを有効にすることができます。</target>
        </trans-unit>
        <trans-unit id="6d56e16a59906dea5f31b29892ce1311dd9cccd9" translate="yes" xml:space="preserve">
          <source>Optionally, one can merge the description of types and the list of argument names, rewriting this as</source>
          <target state="translated">オプションで、型の説明と引数名のリストをマージして、次のように書き換えることができます。</target>
        </trans-unit>
        <trans-unit id="1ffe10fd154c533ecea7fdf04e24f774b1b1a81c" translate="yes" xml:space="preserve">
          <source>Optionally, the string &lt;code&gt;death&lt;/code&gt; or &lt;code&gt;blurt&lt;/code&gt; to choose whether the error is immediately fatal or not. Default: &lt;code&gt;blurt&lt;/code&gt;</source>
          <target state="translated">オプションで、エラーがすぐに致命的であるかどうかを選択するために、文字列の &lt;code&gt;death&lt;/code&gt; または &lt;code&gt;blurt&lt;/code&gt; 。デフォルト： &lt;code&gt;blurt&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1fe61b6a7fc4254062204cd1faaa9dbc5a3de86e" translate="yes" xml:space="preserve">
          <source>Optionally, you can provide a &lt;code&gt;default_version&lt;/code&gt; argument after &lt;code&gt;$struct&lt;/code&gt;:</source>
          <target state="translated">オプションで、 &lt;code&gt;$struct&lt;/code&gt; 後に &lt;code&gt;default_version&lt;/code&gt; 引数を指定できます。</target>
        </trans-unit>
        <trans-unit id="6bf5da9c080bee3a8142586c412aa39971137eee" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">Options</target>
        </trans-unit>
        <trans-unit id="9c5258ecb746f12e305ee9f0999e8ac50793402b" translate="yes" xml:space="preserve">
          <source>Options (specified by the following modifiers) are:</source>
          <target state="translated">オプション(以下の修飾子で指定)は</target>
        </trans-unit>
        <trans-unit id="ec1f90c3315fe4700f720cb2f4a9e4c50e170f92" translate="yes" xml:space="preserve">
          <source>Options affect how things are rendered (ie printed). They're presented here by their visual effect, 1st being strongest. They're grouped according to how they interrelate; within each group the options are mutually exclusive (unless otherwise stated).</source>
          <target state="translated">オプションは、物事がどのようにレンダリングされるか (つまり印刷されるか)に影響を与えます。ここでは視覚的な効果で示されており、 1 番目が最も強いものです。それぞれのグループ内ではオプションは相互に排他的です (別段の記載がない限り)。</target>
        </trans-unit>
        <trans-unit id="48a464c28a671924b790e4e5d29f7c52e88ad928" translate="yes" xml:space="preserve">
          <source>Options are as described in &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt; above; in addition, the following match process modifiers are available:</source>
          <target state="translated">オプションは上記の &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt; 説明したとおりです。さらに、次の一致プロセス修飾子を使用できます。</target>
        </trans-unit>
        <trans-unit id="3cdff170cc3e10cb89498b206dd00c7ccae91c8e" translate="yes" xml:space="preserve">
          <source>Options are as described in &lt;code&gt;qr//&lt;/code&gt; above; in addition, the following match process modifiers are available:</source>
          <target state="translated">オプションは上記の &lt;code&gt;qr//&lt;/code&gt; 説明されているとおりです。さらに、次の一致プロセス修飾子を使用できます。</target>
        </trans-unit>
        <trans-unit id="6e758911022c90dc88a8767e43a034d257baa395" translate="yes" xml:space="preserve">
          <source>Options are as with &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//&lt;/a&gt;&lt;/code&gt; with the addition of the following replacement specific options:</source>
          <target state="translated">オプションは、 &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//&lt;/a&gt;&lt;/code&gt; と同じですが、次の置換固有のオプションが追加されています。</target>
        </trans-unit>
        <trans-unit id="b4a1b3364744cd418af923e1b268d0be0af1e63f" translate="yes" xml:space="preserve">
          <source>Options are as with &lt;code&gt;m//&lt;/code&gt; with the addition of the following replacement specific options:</source>
          <target state="translated">オプションは &lt;code&gt;m//&lt;/code&gt; と同じですが、次の置換固有のオプションが追加されています。</target>
        </trans-unit>
        <trans-unit id="1be4081ccaf3e011dcb6256fd6926414b643ca82" translate="yes" xml:space="preserve">
          <source>Options can be combined as required.</source>
          <target state="translated">オプションは必要に応じて組み合わせることができます。</target>
        </trans-unit>
        <trans-unit id="44de2a921493b7d9eacebba61cb9256d0440d480" translate="yes" xml:space="preserve">
          <source>Options can have values, the value is placed after the option character. Sometimes with whitespace in between, sometimes not:</source>
          <target state="translated">オプションは値を持つことができ、値はオプション文字の後に置かれます。間に空白を挟むこともあれば、挟まないこともあります。</target>
        </trans-unit>
        <trans-unit id="6f40af16e1d24ead9dd1ab7a9826636a3e146727" translate="yes" xml:space="preserve">
          <source>Options can take multiple values at once, for example</source>
          <target state="translated">オプションは一度に複数の値を取ることができます。</target>
        </trans-unit>
        <trans-unit id="3ddfd37b7dede31756596dac520f5a582b7ed831" translate="yes" xml:space="preserve">
          <source>Options controlling sequence numbering</source>
          <target state="translated">シーケンス番号を制御するオプション</target>
        </trans-unit>
        <trans-unit id="9a8a3df69d73a894006df726b5df3d7d2139bdfa" translate="yes" xml:space="preserve">
          <source>Options for Line-Style</source>
          <target state="translated">ラインスタイルのオプション</target>
        </trans-unit>
        <trans-unit id="58018de8cc3dcfc82b97b039f35b6a1c13becc88" translate="yes" xml:space="preserve">
          <source>Options for Opcode Ordering</source>
          <target state="translated">オプコード注文のオプション</target>
        </trans-unit>
        <trans-unit id="55b5d2921e00a398b412bd693eeb7b816a5988e5" translate="yes" xml:space="preserve">
          <source>Options for tree-specific formatting</source>
          <target state="translated">ツリー固有の書式設定のオプション</target>
        </trans-unit>
        <trans-unit id="85b85ab75dd0ae66d7aa6313828663d28696cdc6" translate="yes" xml:space="preserve">
          <source>Options include:</source>
          <target state="translated">オプションには以下のようなものがあります。</target>
        </trans-unit>
        <trans-unit id="0cc4681b46a8bbe1672f6ee5cc5274a5a2e1321f" translate="yes" xml:space="preserve">
          <source>Options sometimes take several values. For example, a program could use multiple directories to search for library files:</source>
          <target state="translated">オプションは複数の値を取ることがあります。例えば、プログラムは複数のディレクトリを使用してライブラリファイルを検索することができます。</target>
        </trans-unit>
        <trans-unit id="f78d98a0f0a1d210a552e42c750a6f91f2370150" translate="yes" xml:space="preserve">
          <source>Options that take arguments:</source>
          <target state="translated">引数を取るオプション。</target>
        </trans-unit>
        <trans-unit id="41151a23e0b5c5a846ca08d323cfca7cf516f1a6" translate="yes" xml:space="preserve">
          <source>Options with hash values</source>
          <target state="translated">ハッシュ値を持つオプション</target>
        </trans-unit>
        <trans-unit id="60f84bb401de02d865a716cc0a5e1289035f7821" translate="yes" xml:space="preserve">
          <source>Options with multiple names</source>
          <target state="translated">複数の名前を持つオプション</target>
        </trans-unit>
        <trans-unit id="c9529a432aa4df6cdd00e1eef2fc89856c4d9538" translate="yes" xml:space="preserve">
          <source>Options with multiple values</source>
          <target state="translated">複数の値を持つオプション</target>
        </trans-unit>
        <trans-unit id="ce4401244b851388c74b7c8db83ca37894df35bc" translate="yes" xml:space="preserve">
          <source>Options with values</source>
          <target state="translated">値を持つオプション</target>
        </trans-unit>
        <trans-unit id="44b169e466bada4cebf1bd71469144108ff2f954" translate="yes" xml:space="preserve">
          <source>Options.U</source>
          <target state="translated">Options.U</target>
        </trans-unit>
        <trans-unit id="bdd0b506837a990803d8edf137f2934329835748" translate="yes" xml:space="preserve">
          <source>Options:</source>
          <target state="translated">Options:</target>
        </trans-unit>
        <trans-unit id="99fd4ae20169f4f1fd95e0b318eddbf04496e03f" translate="yes" xml:space="preserve">
          <source>Optree Manipulation Functions</source>
          <target state="translated">Optreeの操作機能</target>
        </trans-unit>
        <trans-unit id="6660f96406f6f5efcf28a2f461913aed19ed8b17" translate="yes" xml:space="preserve">
          <source>Optree construction</source>
          <target state="translated">オプトリー建設</target>
        </trans-unit>
        <trans-unit id="e72184f55cc026514b7160d78c3c5aef63c2a050" translate="yes" xml:space="preserve">
          <source>Or</source>
          <target state="translated">Or</target>
        </trans-unit>
        <trans-unit id="8f2304a1d411632e410b78fbb8d87fbf5bbf2a9a" translate="yes" xml:space="preserve">
          <source>Or by including the &lt;a href=&quot;Test::Builder::Tester::Color&quot;&gt;Test::Builder::Tester::Color&lt;/a&gt; module directly in the PERL5LIB.</source>
          <target state="translated">または、&lt;a href=&quot;Test::Builder::Tester::Color&quot;&gt;Test :: Builder :: Tester :: Color&lt;/a&gt;モジュールをPERL5LIBに直接含めることによって。</target>
        </trans-unit>
        <trans-unit id="219c1efc76675f38bcd59bb9804c4faf6887590f" translate="yes" xml:space="preserve">
          <source>Or by including the &lt;a href=&quot;tester/color&quot;&gt;Test::Builder::Tester::Color&lt;/a&gt; module directly in the PERL5LIB.</source>
          <target state="translated">または、PERL5LIBに直接&lt;a href=&quot;tester/color&quot;&gt;Test :: Builder :: Tester :: Color&lt;/a&gt;モジュールを含めることによって。</target>
        </trans-unit>
        <trans-unit id="939c0047d2a7d9894b911fc7f2bc8d3ef6ebb72b" translate="yes" xml:space="preserve">
          <source>Or even the day of the year (which is what some people think of as a Julian day):</source>
          <target state="translated">あるいは、1年のうちの1日(ユリウスの日と思っている人もいるでしょう)でも。</target>
        </trans-unit>
        <trans-unit id="c8d29c4a4243321b13a4333a16028d3427ee5e4d" translate="yes" xml:space="preserve">
          <source>Or even to place backup copies of the original files into another directory (provided the directory already exists):</source>
          <target state="translated">あるいは、元のファイルのバックアップコピーを別のディレクトリに配置することもできます(ディレクトリがすでに存在している場合)。</target>
        </trans-unit>
        <trans-unit id="a39395a536571e326a3e448e36d0980f046516aa" translate="yes" xml:space="preserve">
          <source>Or even with a literal numeric descriptor:</source>
          <target state="translated">文字通りの数字の記述子でも</target>
        </trans-unit>
        <trans-unit id="f00270b0e1ed43e5dfa325cc49e06520b6b53543" translate="yes" xml:space="preserve">
          <source>Or for a lot of changes, e.g. from a topic branch:</source>
          <target state="translated">または、トピックブランチからの変更など、多くの変更のために。</target>
        </trans-unit>
        <trans-unit id="ab622aab7528770d4b43d68b1cd75eb516c4a74e" translate="yes" xml:space="preserve">
          <source>Or for months:</source>
          <target state="translated">あるいは数ヶ月間。</target>
        </trans-unit>
        <trans-unit id="4fbd4993cb449934f1a66fbe81f10f2f69d366bb" translate="yes" xml:space="preserve">
          <source>Or here's another sample of using our tied class:</source>
          <target state="translated">あるいは、ここにもタイドクラスの使用例があります。</target>
        </trans-unit>
        <trans-unit id="1cc3245f722d14e01ba8265aa59ed13c82aa6c08" translate="yes" xml:space="preserve">
          <source>Or if you already have an open filehandle:</source>
          <target state="translated">または、すでに開いているファイルハンドルがある場合。</target>
        </trans-unit>
        <trans-unit id="4b436dc18b09a9237b0e320d550c6bceb76aed2a" translate="yes" xml:space="preserve">
          <source>Or if you don't care to play it safe, like this:</source>
          <target state="translated">もしくは、こんな感じで安全に遊びたいと思わないなら</target>
        </trans-unit>
        <trans-unit id="ab228fa27d4891d818d4fcc6cc01c02a70a2f225" translate="yes" xml:space="preserve">
          <source>Or if you don't mind pulling in a few thousand lines of code just because you're afraid of a little &lt;code&gt;$|&lt;/code&gt; variable:</source>
          <target state="translated">それとも、あなたは少しの恐れているという理由だけで、コードの数千行に引っ張って気にしない場合は &lt;code&gt;$|&lt;/code&gt; 変数：</target>
        </trans-unit>
        <trans-unit id="6de1ca81804fc1d18de6212eb9c2eb10c739f658" translate="yes" xml:space="preserve">
          <source>Or if you have a core dump:</source>
          <target state="translated">もしくはコアダンプがあれば</target>
        </trans-unit>
        <trans-unit id="08ae01f1533c609ba5994d6d80c6e627d6b146ea" translate="yes" xml:space="preserve">
          <source>Or if you really want to save space:</source>
          <target state="translated">あるいは、本当にスペースを節約したいのであれば</target>
        </trans-unit>
        <trans-unit id="91c274909c10e199bdd764d2f1727e59782d9346" translate="yes" xml:space="preserve">
          <source>Or if you try to do</source>
          <target state="translated">をしようとすると</target>
        </trans-unit>
        <trans-unit id="151d66e1a17731064f48e0aa8f42f3272b7c1ba5" translate="yes" xml:space="preserve">
          <source>Or if you want to schedule a</source>
          <target state="translated">または、スケジュールをご希望の方は</target>
        </trans-unit>
        <trans-unit id="a55b0108f3cf41f36382908140f2919f204761ba" translate="yes" xml:space="preserve">
          <source>Or in a more recent version:</source>
          <target state="translated">あるいはもっと最近のバージョンで。</target>
        </trans-unit>
        <trans-unit id="c2f0409db7dd86c778a013b8c1b13fb97d9866d1" translate="yes" xml:space="preserve">
          <source>Or insert multiple javascript source in the header (or for that matter include anything, thought this is not recommended)</source>
          <target state="translated">または、ヘッダーに複数のjavascriptソースを挿入する(または、その問題のために何かを含む、これは推奨されないと思った)。</target>
        </trans-unit>
        <trans-unit id="1f2f783b03d3690462c1ad2137de324e8f81f559" translate="yes" xml:space="preserve">
          <source>Or install it RPM Style:</source>
          <target state="translated">またはRPM Styleをインストールします。</target>
        </trans-unit>
        <trans-unit id="4e1bab7ea88f309a093f0d39d4f730b201961c56" translate="yes" xml:space="preserve">
          <source>Or instead of storing this in the language class's lexicon, you can (and, in some cases, really should) represent the same bit of knowledge as code in a method in the language class. (That leaves a tidy distinction between the lexicon as the things we know how to</source>
          <target state="translated">あるいは、これを言語クラスのレキシコンに格納する代わりに、言語クラスのメソッドのコードとして同じ知識を表現することもできます(場合によっては、本当にそうすべきです)。(これにより、私たちが知っていることと、私たちが知っていることとの間には、レキシコンと</target>
        </trans-unit>
        <trans-unit id="7045f93919469e6381656c230b7db826c2eef7c3" translate="yes" xml:space="preserve">
          <source>Or it can localize a typeglob and use the filehandle directly:</source>
          <target state="translated">あるいは、タイプグローブをローカライズしてファイルハンドルを直接使用することもできます。</target>
        </trans-unit>
        <trans-unit id="ce435dd3f2375a45ae18754aa5933bf2c436dc74" translate="yes" xml:space="preserve">
          <source>Or just use &lt;code&gt;if&lt;/code&gt; .</source>
          <target state="translated">または &lt;code&gt;if&lt;/code&gt; だけを使用します。</target>
        </trans-unit>
        <trans-unit id="e8ce654a17903f6b7766d95ea4cb45fa26490a28" translate="yes" xml:space="preserve">
          <source>Or just use &lt;code&gt;if&lt;/code&gt;.</source>
          <target state="translated">または &lt;code&gt;if&lt;/code&gt; 使用します。</target>
        </trans-unit>
        <trans-unit id="136d46bac172392fa4cdf46c2009daa41e71888d" translate="yes" xml:space="preserve">
          <source>Or like this:</source>
          <target state="translated">あるいはこんな感じで。</target>
        </trans-unit>
        <trans-unit id="48f08d1241f74e59beb562174576b8f1d306023b" translate="yes" xml:space="preserve">
          <source>Or maybe we could use regular expressions:</source>
          <target state="translated">正規表現を使えばいいんじゃないかな?</target>
        </trans-unit>
        <trans-unit id="d3bba577160bb629ef905e44edb323af58458622" translate="yes" xml:space="preserve">
          <source>Or maybe you don't want to &lt;code&gt;&lt;a href=&quot;../functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; at all! Maybe you could use a handler like this:</source>
          <target state="translated">それとも、 &lt;code&gt;&lt;a href=&quot;../functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; たくないのかもしれません。たぶんあなたはこのようなハンドラーを使うことができます：</target>
        </trans-unit>
        <trans-unit id="12341f8e2c18df522b6ee917ffc2cadd40117f85" translate="yes" xml:space="preserve">
          <source>Or maybe you don't want to &lt;code&gt;die&lt;/code&gt; at all! Maybe you could use a handler like this:</source>
          <target state="translated">あるいは、 &lt;code&gt;die&lt;/code&gt; たくないのかもしれません！多分あなたはこのようなハンドラーを使うことができます：</target>
        </trans-unit>
        <trans-unit id="eb07ce954d095bd48c2be1f0fcad35b67c72a58b" translate="yes" xml:space="preserve">
          <source>Or more succinctly:</source>
          <target state="translated">もっと簡潔に言うと</target>
        </trans-unit>
        <trans-unit id="daea64cee75759eefcb8d884a9ad1d6ffab3b7eb" translate="yes" xml:space="preserve">
          <source>Or the modified Julian Day:</source>
          <target state="translated">あるいはジュリアン・デイの修正版か。</target>
        </trans-unit>
        <trans-unit id="37cd5be2ebf8ceaba65ad66ef7810a2d95ad6a73" translate="yes" xml:space="preserve">
          <source>Or to make an swrite() subroutine, which is to write() what sprintf() is to printf(), do this:</source>
          <target state="translated">あるいは、swrite()サブルーチンを作るには、sprintf()がprintf()を書くためのものであるように、次のようにします。</target>
        </trans-unit>
        <trans-unit id="b578c02852dfedb0541b5bd3610b753c127ee1fb" translate="yes" xml:space="preserve">
          <source>Or to plan a variable number of tests:</source>
          <target state="translated">あるいは、可変回数のテストを計画すること。</target>
        </trans-unit>
        <trans-unit id="ca203ac79f2e314cb633a063bfd0088dac063148" translate="yes" xml:space="preserve">
          <source>Or to populate with your current system locale call: Time::Piece-&amp;gt;use_locale();</source>
          <target state="translated">または、現在のシステムロケール呼び出しを入力するには：Time :: Piece-&amp;gt; use_locale（）;</target>
        </trans-unit>
        <trans-unit id="534e1e283610aa3e2f191a2196b648a7456ca580" translate="yes" xml:space="preserve">
          <source>Or use &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; to try decoding it:</source>
          <target state="translated">または、 &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; を使用してデコードしてみてください。</target>
        </trans-unit>
        <trans-unit id="40b0959d1dcb3616319f39235a46274be386fb94" translate="yes" xml:space="preserve">
          <source>Or use &lt;code&gt;unpack&lt;/code&gt; to try decoding it:</source>
          <target state="translated">または、 &lt;code&gt;unpack&lt;/code&gt; を使用してデコードしてみてください。</target>
        </trans-unit>
        <trans-unit id="70d6fd7de2724ba9f6a39374a9f05288463f8ef9" translate="yes" xml:space="preserve">
          <source>Or use specific un-Unicode properties, like &lt;code&gt;\p{ahex}&lt;/code&gt; and &lt;code&gt;\p{POSIX_Digit&lt;/code&gt; }. Properties still work normally no matter what charset modifiers (&lt;code&gt;/d /u /l /a /aa&lt;/code&gt; ) should be effect.</source>
          <target state="translated">または、 &lt;code&gt;\p{ahex}&lt;/code&gt; や &lt;code&gt;\p{POSIX_Digit&lt;/code&gt; } などの特定の非Unicodeプロパティを使用します。プロパティは、どの文字セット修飾子（ &lt;code&gt;/d /u /l /a /aa&lt;/code&gt; ）が有効であっても、通常どおり機能します。</target>
        </trans-unit>
        <trans-unit id="014decf52931451a691c2a3cad0303f892b53a91" translate="yes" xml:space="preserve">
          <source>Or use specific un-Unicode properties, like &lt;code&gt;\p{ahex}&lt;/code&gt; and &lt;code&gt;\p{POSIX_Digit&lt;/code&gt;}. Properties still work normally no matter what charset modifiers (&lt;code&gt;/d /u /l /a /aa&lt;/code&gt;) should be effect.</source>
          <target state="translated">または、 &lt;code&gt;\p{ahex}&lt;/code&gt; や &lt;code&gt;\p{POSIX_Digit&lt;/code&gt; }などの特定の非Unicodeプロパティを使用します。どの文字セット修飾子（ &lt;code&gt;/d /u /l /a /aa&lt;/code&gt; ）を使用しても、プロパティは正常に機能します。</target>
        </trans-unit>
        <trans-unit id="0b19af399384d842b95e3307cb95667c465b46ef" translate="yes" xml:space="preserve">
          <source>Or use the CPAN module &lt;a href=&quot;Bit::Vector&quot;&gt;Bit::Vector&lt;/a&gt;:</source>
          <target state="translated">または、CPANモジュールの&lt;a href=&quot;Bit::Vector&quot;&gt;Bit :: Vector&lt;/a&gt;：を使用します。</target>
        </trans-unit>
        <trans-unit id="63f74954c01257761163dbbea5a6d7a83fddeb01" translate="yes" xml:space="preserve">
          <source>Or use the CPAN module &lt;a href=&quot;Text::Autoformat&quot;&gt;Text::Autoformat&lt;/a&gt;. Formatting files can be easily done by making a shell alias, like so:</source>
          <target state="translated">または、CPANモジュール&lt;a href=&quot;Text::Autoformat&quot;&gt;Text :: Autoformatを&lt;/a&gt;使用します。ファイルのフォーマットは、次のようにシェルエイリアスを作成することで簡単に実行できます。</target>
        </trans-unit>
        <trans-unit id="d147ca7029faa376379ab60dd5e184279f392c55" translate="yes" xml:space="preserve">
          <source>Or use the CPAN module &lt;a href=&quot;http://search.cpan.org/perldoc/Bit::Vector&quot;&gt;Bit::Vector&lt;/a&gt;:</source>
          <target state="translated">または、CPANモジュール&lt;a href=&quot;http://search.cpan.org/perldoc/Bit::Vector&quot;&gt;Bit :: Vectorを&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="3e3bc5aa2b1c65a2f0536a8ad61f1cf720e70bd7" translate="yes" xml:space="preserve">
          <source>Or use the CPAN module &lt;a href=&quot;http://search.cpan.org/perldoc/Text::Autoformat&quot;&gt;Text::Autoformat&lt;/a&gt;. Formatting files can be easily done by making a shell alias, like so:</source>
          <target state="translated">または、CPANモジュール&lt;a href=&quot;http://search.cpan.org/perldoc/Text::Autoformat&quot;&gt;Text :: Autoformatを&lt;/a&gt;使用します。次のようにシェルエイリアスを作成することで、ファイルのフォーマットを簡単に行うことができます。</target>
        </trans-unit>
        <trans-unit id="21cd44b0a63b2724e709817a957ed758ac294220" translate="yes" xml:space="preserve">
          <source>Or we can use the addfile method for more efficient reading of the file:</source>
          <target state="translated">あるいは、ファイルをより効率的に読み込むためにaddfileメソッドを使うこともできます。</target>
        </trans-unit>
        <trans-unit id="7eb22b9341f8bed904b75d947077206dd520c369" translate="yes" xml:space="preserve">
          <source>Or we will publicly ridicule you. Seriously.</source>
          <target state="translated">さもないと公に嘲笑するぞ 真面目な話だ</target>
        </trans-unit>
        <trans-unit id="2c4d7e281aa840be77762aa28882884e3b12c3e2" translate="yes" xml:space="preserve">
          <source>Or with a fixed amount of leading whitespace, with remaining indentation correctly preserved:</source>
          <target state="translated">または、一定量の先頭の空白を用いて、残りのインデントを正しく保存します。</target>
        </trans-unit>
        <trans-unit id="9f8c04b29e5bdf5cb37189daec86558285ed03bf" translate="yes" xml:space="preserve">
          <source>Or with rationals:</source>
          <target state="translated">または合理性を持って。</target>
        </trans-unit>
        <trans-unit id="ac4bf8a39abe6183f58cc853b82a958a3b19f773" translate="yes" xml:space="preserve">
          <source>Or write a small C program using the editor of champions:</source>
          <target state="translated">あるいは、チャンピオンのエディタを使って小さなCプログラムを書く。</target>
        </trans-unit>
        <trans-unit id="071de2b484157eae02726aef816948b89ceb81e6" translate="yes" xml:space="preserve">
          <source>Or write it yourself, iterating through the indices and checking the array element at each index until you find one that satisfies the condition:</source>
          <target state="translated">あるいは自分で書くこともできます.インデックスを繰り返し処理して,条件を満たす配列要素が見つかるまで各インデックスの配列要素をチェックします.</target>
        </trans-unit>
        <trans-unit id="fd30f1e33b918715dd71d5fd528fc3bfe2e3a2f3" translate="yes" xml:space="preserve">
          <source>Or write the &quot;bar&quot; method so you don't need to pass it the output from calling quux.</source>
          <target state="translated">あるいは、&quot;bar &quot;メソッドを書いて、quuxを呼び出したときの出力を渡す必要がないようにします。</target>
        </trans-unit>
        <trans-unit id="1257832c1f8df8853297c11758dc7f82a58965f3" translate="yes" xml:space="preserve">
          <source>Or you can call these methods, which Pod::Simple::PullParser has defined to work just like Pod::Simple's same-named methods:</source>
          <target state="translated">Pod::Simple::PullParserはPod::Simpleの同名メソッドと同じように動作するように定義されています。</target>
        </trans-unit>
        <trans-unit id="43deb0ef03dcaf9d7f9a23cfd26b6f349abc278d" translate="yes" xml:space="preserve">
          <source>Or you can give the name of a specific module:</source>
          <target state="translated">または、特定のモジュールの名前を付けることができます。</target>
        </trans-unit>
        <trans-unit id="4e6b2e6cc7ca54d22bdc0536f7463894041738bd" translate="yes" xml:space="preserve">
          <source>Or you can just use the &lt;a href=&quot;Text::Tabs&quot;&gt;Text::Tabs&lt;/a&gt; module (part of the standard Perl distribution).</source>
          <target state="translated">または、&lt;a href=&quot;Text::Tabs&quot;&gt;Text :: Tabs&lt;/a&gt;モジュール（標準のPerlディストリビューションの一部）を使用することもできます。</target>
        </trans-unit>
        <trans-unit id="44f4d760018e2beff2abc7deca32778f6b33edab" translate="yes" xml:space="preserve">
          <source>Or you can just use the &lt;a href=&quot;text/tabs&quot;&gt;Text::Tabs&lt;/a&gt; module (part of the standard Perl distribution).</source>
          <target state="translated">または、&lt;a href=&quot;text/tabs&quot;&gt;Text :: Tabs&lt;/a&gt;モジュール（標準のPerlディストリビューションの一部）を使用することもできます。</target>
        </trans-unit>
        <trans-unit id="3f560caefa4961932943871223d7a55e15210337" translate="yes" xml:space="preserve">
          <source>Or you can link to a web page:</source>
          <target state="translated">あるいは、ウェブページにリンクを張ることもできます。</target>
        </trans-unit>
        <trans-unit id="35426ac710dfda840e59a05cb7cce1999af24289" translate="yes" xml:space="preserve">
          <source>Or you can read the entire file contents into a scalar like this:</source>
          <target state="translated">あるいは、このようにファイルの内容全体をスカラに読み込むこともできます。</target>
        </trans-unit>
        <trans-unit id="7ca35881b01bed9e83e28982a2d8d72c5c6104a0" translate="yes" xml:space="preserve">
          <source>Or you can try casting to a &quot;wide enough&quot; type:</source>
          <target state="translated">もしくは「十分に広い」タイプにキャスティングしてみるのもいいかもしれません。</target>
        </trans-unit>
        <trans-unit id="043cc73307c25fd12afc139edc01af1987c07753" translate="yes" xml:space="preserve">
          <source>Or you can use</source>
          <target state="translated">または、以下のような使い方ができます。</target>
        </trans-unit>
        <trans-unit id="6eacf94ec3c91a6fb8f957244c216f33f4c57d92" translate="yes" xml:space="preserve">
          <source>Or you can use &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr()&lt;/a&gt;&lt;/code&gt;, though it is less convenient in the general case:</source>
          <target state="translated">または、 &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr()&lt;/a&gt;&lt;/code&gt; を使用することもできますが、一般的なケースではあまり便利ではありません。</target>
        </trans-unit>
        <trans-unit id="931b91df8b44901925eb12d70d322446a86049fc" translate="yes" xml:space="preserve">
          <source>Or you can use &lt;code&gt;add_suspects&lt;/code&gt; method. The difference is that &lt;code&gt;set_suspects&lt;/code&gt; flushes the current suspects list while &lt;code&gt;add_suspects&lt;/code&gt; adds.</source>
          <target state="translated">または、 &lt;code&gt;add_suspects&lt;/code&gt; メソッドを使用できます。違いがあるということ &lt;code&gt;set_suspects&lt;/code&gt; をしながら、現在の容疑者のリストをフラッシュ &lt;code&gt;add_suspects&lt;/code&gt; が追加されます。</target>
        </trans-unit>
        <trans-unit id="963f110b2073d89a9f332e0623b73c8c198b5b1b" translate="yes" xml:space="preserve">
          <source>Or you can use &lt;code&gt;chr()&lt;/code&gt;, though it is less convenient in the general case:</source>
          <target state="translated">または、 &lt;code&gt;chr()&lt;/code&gt; を使用することもできますが、一般的なケースではあまり便利ではありません。</target>
        </trans-unit>
        <trans-unit id="48c181924b77f6ca0bc842537bd343bbd0734c08" translate="yes" xml:space="preserve">
          <source>Or you can use the facilities in &lt;a href=&quot;threads::shared&quot;&gt;threads::shared&lt;/a&gt; to pass &lt;code&gt;$foo&lt;/code&gt;; or if the environment hasn't changed, in the child, do</source>
          <target state="translated">または、&lt;a href=&quot;threads::shared&quot;&gt;threads :: sharedの&lt;/a&gt;機能を使用して &lt;code&gt;$foo&lt;/code&gt; を渡すことができます。または、環境が変わっていない場合は、子供で、</target>
        </trans-unit>
        <trans-unit id="7776f59b589892025dcece73547d18088e8da3ee" translate="yes" xml:space="preserve">
          <source>Or you could check out the &lt;a href=&quot;String::Scanf&quot;&gt;String::Scanf&lt;/a&gt; module on the CPAN instead.</source>
          <target state="translated">または、代わりにCPANの&lt;a href=&quot;String::Scanf&quot;&gt;String :: Scanf&lt;/a&gt;モジュールを確認することもできます。</target>
        </trans-unit>
        <trans-unit id="a39a91a0d1d979c65ad41157a37488c0834225c4" translate="yes" xml:space="preserve">
          <source>Or you could check out the &lt;a href=&quot;http://search.cpan.org/perldoc/String::Scanf&quot;&gt;String::Scanf&lt;/a&gt; module on the CPAN instead.</source>
          <target state="translated">または、代わりにCPANの&lt;a href=&quot;http://search.cpan.org/perldoc/String::Scanf&quot;&gt;String :: Scanf&lt;/a&gt;モジュールをチェックアウトすることもできます。</target>
        </trans-unit>
        <trans-unit id="5093d94168468d0b2a02ecd19e89cf6d81de9b6e" translate="yes" xml:space="preserve">
          <source>Or you could use this module, like this:</source>
          <target state="translated">あるいは、このモジュールを使うこともできます。</target>
        </trans-unit>
        <trans-unit id="d54e1a4de96da66b4f1be3ddd384e9dc12182b2a" translate="yes" xml:space="preserve">
          <source>Or you may want to override it with something that traps any exceptions, if that's critical to your program:</source>
          <target state="translated">あるいは、プログラムにとって重要であれば、例外をトラップするようなものでオーバーライドしたいかもしれません。</target>
        </trans-unit>
        <trans-unit id="2bc5eff73e9b5c554f3a2ea69d7a2e4db2c90148" translate="yes" xml:space="preserve">
          <source>Or you might have had a temporary variable sitting around with the array in it.</source>
          <target state="translated">あるいは、配列の中に一時的な変数を入れていたかもしれません。</target>
        </trans-unit>
        <trans-unit id="778e7ba107050bb841c6a420e4c310f8b170e2db" translate="yes" xml:space="preserve">
          <source>Or, as a third option you can choose RAND which will make a random decision (something regular CPAN testers will enjoy).</source>
          <target state="translated">または、第3のオプションとして、ランダムな決定を行うRANDを選択することができます(通常のCPANテスターは何かを楽しむことができます)。</target>
        </trans-unit>
        <trans-unit id="67fb52d7219a77edeaa3410be898dbaaf5eb7940" translate="yes" xml:space="preserve">
          <source>Or, going the other way:</source>
          <target state="translated">あるいは、その逆を行くことも。</target>
        </trans-unit>
        <trans-unit id="5688e64a8e93cb617409a9dc959b06f63b6ad773" translate="yes" xml:space="preserve">
          <source>Or, if performance is needed and you are only interested in the UTF-8 representation:</source>
          <target state="translated">あるいは、パフォーマンスが必要で、UTF-8表現にしか興味がない場合。</target>
        </trans-unit>
        <trans-unit id="c9cbc117e700c42b5960566f9d6e3ab9956f8e0e" translate="yes" xml:space="preserve">
          <source>Or, if you want to alter the value, you can even do things like this:</source>
          <target state="translated">あるいは、値を変更したい場合は、このようなこともできます。</target>
        </trans-unit>
        <trans-unit id="bbaa299505c09af1ba1a690349c0d5013974e787" translate="yes" xml:space="preserve">
          <source>Or, if you want to use SHA-256 instead of the default SHA-1, simply say:</source>
          <target state="translated">あるいは、デフォルトのSHA-1の代わりにSHA-256を使用したい場合は、単にこう言ってください。</target>
        </trans-unit>
        <trans-unit id="43c22f6d092ff91e39fcd2c49c563a09384d2c27" translate="yes" xml:space="preserve">
          <source>Or, if you're fond of VMS command syntax:</source>
          <target state="translated">あるいは、VMSのコマンド構文が好きな方は</target>
        </trans-unit>
        <trans-unit id="8f53b2f39475162ce9507ab6d3bc142ec9ebf18d" translate="yes" xml:space="preserve">
          <source>Or, if you're lazy, just:</source>
          <target state="translated">怠け者でもいいから</target>
        </trans-unit>
        <trans-unit id="2e075c729b27aef299f95b8f9b89c3205825fc03" translate="yes" xml:space="preserve">
          <source>Or, if you're using a recent release of Perl, you can just use the Symbol::delete_package() function instead.</source>
          <target state="translated">あるいは、最近リリースされた Perl を使用している場合は、代わりに Symbol::delete_package()関数を使用することもできます。</target>
        </trans-unit>
        <trans-unit id="9ef47775ad6e32b75e39e1b8250e2051eeafc265" translate="yes" xml:space="preserve">
          <source>Or, in order to retain the UTF-x code points in hexadecimal:</source>
          <target state="translated">または、16進数のUTF-xコードポイントを保持するために。</target>
        </trans-unit>
        <trans-unit id="9ac1d61fe8e0e045309c1cd8c9bfbba7d77d8c46" translate="yes" xml:space="preserve">
          <source>Or, just use the fdopen(3S) feature of &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open()&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">または、単に &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open()&lt;/a&gt;&lt;/code&gt; のfdopen（3S）機能を使用します。</target>
        </trans-unit>
        <trans-unit id="b53a6cc054ae28639d7e3271444077bd6b45c445" translate="yes" xml:space="preserve">
          <source>Or, just use the fdopen(3S) feature of &lt;code&gt;open()&lt;/code&gt;:</source>
          <target state="translated">または、 &lt;code&gt;open()&lt;/code&gt; のfdopen（3S）機能を使用するだけです。</target>
        </trans-unit>
        <trans-unit id="b65db10b884b8811cab09d1c35d73c9549dd89e0" translate="yes" xml:space="preserve">
          <source>Or, simply:</source>
          <target state="translated">というか、単純に</target>
        </trans-unit>
        <trans-unit id="4509b32489cef8d9fa76782913fc02beac5d2e00" translate="yes" xml:space="preserve">
          <source>Or, you can combine this step with the next to save disk space:</source>
          <target state="translated">または、ディスク容量を節約するために、このステップと次のステップを組み合わせることができます。</target>
        </trans-unit>
        <trans-unit id="a70a9c965ff5f01a36539ad3a4f1747814f861b5" translate="yes" xml:space="preserve">
          <source>Or, you can use a closure to bundle up the object, its method call, and arguments:</source>
          <target state="translated">あるいは、クロージャを使用してオブジェクトとそのメソッド呼び出し、引数を束ねることもできます。</target>
        </trans-unit>
        <trans-unit id="8e30f14ff059f10f588d2a56e4ed3edbafad53cb" translate="yes" xml:space="preserve">
          <source>Or, you can use the &lt;code&gt;new&lt;/code&gt; method from one of the IO::* modules to create an anonymous filehandle and store that in a scalar variable.</source>
          <target state="translated">または、IO :: *モジュールの1つから &lt;code&gt;new&lt;/code&gt; メソッドを使用して、匿名のファイルハンドルを作成し、それをスカラー変数に格納できます。</target>
        </trans-unit>
        <trans-unit id="af6226005e40b70717bca3873f6972ffe8233b17" translate="yes" xml:space="preserve">
          <source>Or, you might want to only process some of the items. If you only want to deal with the keys that start with &lt;code&gt;text:&lt;/code&gt; , you can select just those using &lt;code&gt;&lt;a href=&quot;functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">または、一部のアイテムのみを処理することもできます。 &lt;code&gt;text:&lt;/code&gt; で始まるキーのみを処理する場合は、 &lt;code&gt;&lt;a href=&quot;functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt; を使用してそれらだけを選択できます。</target>
        </trans-unit>
        <trans-unit id="fc117c470aeb420d84a99136af17ffd92d6737fc" translate="yes" xml:space="preserve">
          <source>Or, you might want to only process some of the items. If you only want to deal with the keys that start with &lt;code&gt;text:&lt;/code&gt;, you can select just those using &lt;code&gt;grep&lt;/code&gt;:</source>
          <target state="translated">または、一部のアイテムのみを処理することもできます。 &lt;code&gt;text:&lt;/code&gt; で始まるキーのみを処理する場合は、 &lt;code&gt;grep&lt;/code&gt; ：を使用してキーのみを選択できます。</target>
        </trans-unit>
        <trans-unit id="40119221cab56480c05aa14722b443b3fea26189" translate="yes" xml:space="preserve">
          <source>Or...</source>
          <target state="translated">Or...</target>
        </trans-unit>
        <trans-unit id="00fcdda14949d42c1610edfba9ca80d41d59564f" translate="yes" xml:space="preserve">
          <source>Or:</source>
          <target state="translated">Or:</target>
        </trans-unit>
        <trans-unit id="1a4b52bf5b628840a966ddcef5687bee0a34b8c7" translate="yes" xml:space="preserve">
          <source>Or: If you're trying to be PAUSE-like, make sure you skip &lt;code&gt;inc&lt;/code&gt;, &lt;code&gt;xt&lt;/code&gt; and &lt;code&gt;t&lt;/code&gt; as well as anything marked as no_index.</source>
          <target state="translated">または：PAUSEのようにしようとしている場合は、 &lt;code&gt;inc&lt;/code&gt; 、 &lt;code&gt;xt&lt;/code&gt; 、 &lt;code&gt;t&lt;/code&gt; 、およびno_indexとしてマークされているものはすべてスキップしてください。</target>
        </trans-unit>
        <trans-unit id="ed006a3a71954db6f888573fde1410910ac75da8" translate="yes" xml:space="preserve">
          <source>Oracle on HP-UX</source>
          <target state="translated">HP-UX上のオラクル</target>
        </trans-unit>
        <trans-unit id="d62b80826f613ec1202935a4c2f641139f04ab27" translate="yes" xml:space="preserve">
          <source>Order of initialization: early load()</source>
          <target state="translated">初期化の順序:早期ロード()</target>
        </trans-unit>
        <trans-unit id="7393d644018f3205b57f7e4d05fa28a3cb608a27" translate="yes" xml:space="preserve">
          <source>Ordering is important in all these examples. That's because the shell processes file descriptor redirections in strictly left to right order.</source>
          <target state="translated">これらの例では順序が重要です。これは、シェルがファイルディスクリプタのリダイレクトを厳密に左から右の順番で処理するからです。</target>
        </trans-unit>
        <trans-unit id="7efefc2b95543013c2e15623d64639da160307d2" translate="yes" xml:space="preserve">
          <source>Ordering matters</source>
          <target state="translated">注文事項</target>
        </trans-unit>
        <trans-unit id="03bfe62f909353e6c9f54752ee8666d464862f82" translate="yes" xml:space="preserve">
          <source>Ordering of two matches for &lt;code&gt;&quot;S&quot;&lt;/code&gt; is the same as for &lt;code&gt;&quot;S&quot;&lt;/code&gt;. Similar for two matches for &lt;code&gt;&quot;T&quot;&lt;/code&gt;.</source>
          <target state="translated">以下のための2つのマッチの注文 &lt;code&gt;&quot;S&quot;&lt;/code&gt; と同じである &lt;code&gt;&quot;S&quot;&lt;/code&gt; 。 &lt;code&gt;&quot;T&quot;&lt;/code&gt; 2つの一致についても同様です。</target>
        </trans-unit>
        <trans-unit id="184a2b9a0782971148728db5cbfcd9146f0d9d22" translate="yes" xml:space="preserve">
          <source>Ordering of two matches for &lt;code&gt;S&lt;/code&gt; is the same as for &lt;code&gt;S&lt;/code&gt; . Similar for two matches for &lt;code&gt;T&lt;/code&gt; .</source>
          <target state="translated">以下のための2つのマッチの発注 &lt;code&gt;S&lt;/code&gt; は、の場合と同じである &lt;code&gt;S&lt;/code&gt; 。 &lt;code&gt;T&lt;/code&gt; の 2つの一致についても同様です。</target>
        </trans-unit>
        <trans-unit id="1f2e5db8ac8798852d4979873043eb23e9daf36e" translate="yes" xml:space="preserve">
          <source>Ordinarily you must assign the returned value to a variable, but there is one situation where an automatic assignment happens. If and only if the input symbol is the only thing inside the conditional of a &lt;code&gt;while&lt;/code&gt; statement (even if disguised as a &lt;code&gt;for(;;)&lt;/code&gt; loop), the value is automatically assigned to the global variable &lt;code&gt;$_&lt;/code&gt; , destroying whatever was there previously. (This may seem like an odd thing to you, but you'll use the construct in almost every Perl script you write.) The &lt;code&gt;$_&lt;/code&gt; variable is not implicitly localized. You'll have to put a &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt; $_;&lt;/code&gt; before the loop if you want that to happen.</source>
          <target state="translated">通常、戻り値を変数に割り当てる必要がありますが、自動割り当てが発生する状況が1つあります。入力ステートメントが &lt;code&gt;while&lt;/code&gt; ステートメントの条件内にある唯一の場合（ &lt;code&gt;for(;;)&lt;/code&gt; ループに偽装されている場合でも）、値は自動的にグローバル変数 &lt;code&gt;$_&lt;/code&gt; に割り当てられ、以前にあったものはすべて破棄されます。（これは奇妙に思えるかもしれませんが、作成するほとんどすべてのPerlスクリプトでこの構文を使用します。） &lt;code&gt;$_&lt;/code&gt; 変数は暗黙的にローカライズされていません。 &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt; $_;&lt;/code&gt; を配置する必要があります。あなたがそれを起こしたいなら、ループの前に。</target>
        </trans-unit>
        <trans-unit id="b4f68e985de2826da10050769480a1c5355a15c1" translate="yes" xml:space="preserve">
          <source>Ordinarily you must assign the returned value to a variable, but there is one situation where an automatic assignment happens. If and only if the input symbol is the only thing inside the conditional of a &lt;code&gt;while&lt;/code&gt; statement (even if disguised as a &lt;code&gt;for(;;)&lt;/code&gt; loop), the value is automatically assigned to the global variable &lt;code&gt;$_&lt;/code&gt;, destroying whatever was there previously. (This may seem like an odd thing to you, but you'll use the construct in almost every Perl script you write.) The &lt;code&gt;$_&lt;/code&gt; variable is not implicitly localized. You'll have to put a &lt;code&gt;local $_;&lt;/code&gt; before the loop if you want that to happen. Furthermore, if the input symbol or an explicit assignment of the input symbol to a scalar is used as a &lt;code&gt;while&lt;/code&gt;/&lt;code&gt;for&lt;/code&gt; condition, then the condition actually tests for definedness of the expression's value, not for its regular truth value.</source>
          <target state="translated">通常、戻り値を変数に割り当てる必要がありますが、自動割り当てが発生する状況が1つあります。入力シンボルが &lt;code&gt;while&lt;/code&gt; ステートメントの条件内にある唯一のものである場合（ &lt;code&gt;for(;;)&lt;/code&gt; ループに偽装されている場合でも）、値は自動的にグローバル変数 &lt;code&gt;$_&lt;/code&gt; に割り当てられ、以前に存在していたものはすべて破棄されます。 （これは奇妙に思えるかもしれませんが、作成するほとんどすべてのPerlスクリプトで構成を使用します。） &lt;code&gt;$_&lt;/code&gt; 変数は暗黙的にローカライズされていません。 &lt;code&gt;local $_;&lt;/code&gt; を配置する必要があります。それを実現したい場合は、ループの前に。さらに、入力シンボルまたは入力シンボルのスカラーへの明示的な割り当てが &lt;code&gt;while&lt;/code&gt; 使用される場合/ &lt;code&gt;for&lt;/code&gt; の条件、条件は実際にはない、その定期的な真理値のために、式の値の定義済みかをテストします。</target>
        </trans-unit>
        <trans-unit id="53258e41460718a5a3f67ea0dcecd0cea963c78d" translate="yes" xml:space="preserve">
          <source>Ordinarily, if you use B::Deparse on a subroutine which has been compiled in the presence of one or more of these pragmas, the output will include statements to turn on the appropriate directives. So if you then compile the code returned by coderef2text, it will behave the same way as the subroutine which you deparsed.</source>
          <target state="translated">通常、これらのプラグマの一つ以上が存在する状態でコンパイルされたサブルーチンでB::Deparseを使用した場合、出力には適切なディレクティブを有効にするためのステートメントが含まれます。そのため、coderef2textが返すコードをコンパイルすると、デパースしたサブルーチンと同じように動作します。</target>
        </trans-unit>
        <trans-unit id="9eb59a093d68b441c9e588f45e1136962cd97df2" translate="yes" xml:space="preserve">
          <source>Ordinary Paragraph</source>
          <target state="translated">普通の段落</target>
        </trans-unit>
        <trans-unit id="4961c7b54333565385e7124c25ede2166eddd344" translate="yes" xml:space="preserve">
          <source>Ordinary scalars</source>
          <target state="translated">普通のスカラー</target>
        </trans-unit>
        <trans-unit id="852794a0888b2c26ae66b7390c3dc7aa906b25ab" translate="yes" xml:space="preserve">
          <source>Ordinary scalars are added to queues as they are.</source>
          <target state="translated">通常のスカラーはそのままキューに追加されます。</target>
        </trans-unit>
        <trans-unit id="07719acb37acddccec25b239e54ae20e9addfe70" translate="yes" xml:space="preserve">
          <source>Oregon</source>
          <target state="translated">Oregon</target>
        </trans-unit>
        <trans-unit id="e643b2f1d6d20cd4b1a9b180a96d9d74142343a5" translate="yes" xml:space="preserve">
          <source>Organization of Perl Images</source>
          <target state="translated">Perl画像の整理</target>
        </trans-unit>
        <trans-unit id="b7ac1ae7a629fb1e4790255da63efabc71780dd7" translate="yes" xml:space="preserve">
          <source>Original author Charles Bailey</source>
          <target state="translated">原作者チャールズ・ベイリー</target>
        </trans-unit>
        <trans-unit id="6bb735e6ea9df22ee5b2de902784152d534e32cf" translate="yes" xml:space="preserve">
          <source>Original author lost in the mists of time. Probably the same as Makemaker.</source>
          <target state="translated">原作者は時の霧の中で失われた。おそらくMAKEMAKERと同じ。</target>
        </trans-unit>
        <trans-unit id="8478bfad57c6e4bf8f9631f29cfcd8913f5e1f7b" translate="yes" xml:space="preserve">
          <source>Original author: Jos Boumans &amp;lt;kane@cpan.org&amp;gt;. Current maintainer: Chris Williams &amp;lt;bingos@cpan.org&amp;gt;.</source>
          <target state="translated">原作者：Jos Boumans &amp;lt;kane@cpan.org&amp;gt;。現在のメンテナ：Chris Williams &amp;lt;bingos@cpan.org&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="f73a279f87a9af54e2fb407d4bba20c5c5f64620" translate="yes" xml:space="preserve">
          <source>Original code Copyright (c) 2001-2011 Ken Williams. Additional code Copyright (c) 2010-2011 Matt Trout and David Golden. All rights reserved.</source>
          <target state="translated">オリジナルコード Copyright (c)2001-2011 Ken Williams.追加コード Copyright (c)2010-2011 Matt Trout and David Golden.すべての権利を保有しています。</target>
        </trans-unit>
        <trans-unit id="82456b1a006fa0cfc6f13442efd03f45359b0924" translate="yes" xml:space="preserve">
          <source>Original code by Mark Biggar, overloaded interface by Ilya Zakharevich. Completely rewritten by Tels &lt;a href=&quot;http://bloodgate.com&quot;&gt;http://bloodgate.com&lt;/a&gt; in late 2000, 2001 - 2006 and still at it in 2007.</source>
          <target state="translated">Mark Biggarによるオリジナルのコード、Ilya Zakharevichによるオーバーロードされたインターフェース。2000年の終わり、2001年から2006年にTels &lt;a href=&quot;http://bloodgate.com&quot;&gt;http://bloodgate.com&lt;/a&gt;によって完全に書き直され、2007年も現在もそうです。</target>
        </trans-unit>
        <trans-unit id="4907c478063f242cdad148d2cf2e2a3834c957e0" translate="yes" xml:space="preserve">
          <source>Original code by chromatic, maintained by Michael G Schwern &amp;lt;schwern@pobox.com&amp;gt;</source>
          <target state="translated">Michael G Schwern &amp;lt;schwern@pobox.com&amp;gt;によって維持されている、半音階によるオリジナルコード</target>
        </trans-unit>
        <trans-unit id="def2f2840ebc01c042799549d28b1ca35fd723df" translate="yes" xml:space="preserve">
          <source>Original code from Module::Build::ModuleInfo by Ken Williams &amp;lt;kwilliams@cpan.org&amp;gt;, Randy W. Sims &amp;lt;RandyS@ThePierianSpring.org&amp;gt;</source>
          <target state="translated">Module :: Build :: ModuleInfoの元のコードbyKen Williams &amp;lt;kwilliams@cpan.org&amp;gt;、Randy W. Sims &amp;lt;RandyS@ThePierianSpring.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="5aa8fbf538dffef8e3de83026f7b50c6ec7e3e15" translate="yes" xml:space="preserve">
          <source>Original idea (using constants) by Zenin, reimplemented using subs by Russ Allbery &amp;lt;rra@cpan.org&amp;gt;, and then combined with the original idea by Russ with input from Zenin. 256-color support is based on work by Kurt Starsinic. Russ Allbery now maintains this module.</source>
          <target state="translated">Zeninによる元のアイデア（定数を使用）。RussAllbery &amp;lt;rra@cpan.org&amp;gt;によるsubsを使用して再実装され、RussによるZeninからの入力を使用して元のアイデアと結合されます。256色のサポートは、Kurt Starsinicの作業に基づいています。Russ Allberyがこのモジュールを保守するようになりました。</target>
        </trans-unit>
        <trans-unit id="531407d264d0d11235657451697ac677d9049ca2" translate="yes" xml:space="preserve">
          <source>Original math code by Mark Biggar, rewritten by Tels &lt;a href=&quot;http://bloodgate.com/&quot;&gt;http://bloodgate.com/&lt;/a&gt; in late 2000.</source>
          <target state="translated">Mark Biggarによるオリジナルの数学コード。2000年後半にTels &lt;a href=&quot;http://bloodgate.com/&quot;&gt;http://bloodgate.com/&lt;/a&gt;によって書き直されました。</target>
        </trans-unit>
        <trans-unit id="de9fcab0737543137eaab2a0e06f6bd2ca79a9cc" translate="yes" xml:space="preserve">
          <source>Original math code by Mark Biggar, rewritten by Tels &lt;a href=&quot;http://bloodgate.com/&quot;&gt;http://bloodgate.com/&lt;/a&gt; in late 2000. Separated from BigInt and shaped API with the help of John Peacock.</source>
          <target state="translated">Mark Biggarによるオリジナルの数学コード。2000年後半にTels &lt;a href=&quot;http://bloodgate.com/&quot;&gt;http://bloodgate.com/&lt;/a&gt;によって書き直されました。JohnPeacock の助けによりBigIntから分離され、APIを形成しました。</target>
        </trans-unit>
        <trans-unit id="016eb101d0bd431b0d9ab4229772d8f00ba5eae2" translate="yes" xml:space="preserve">
          <source>Original module by Lionel Cons (CERN).</source>
          <target state="translated">ライオネル・コンス(CERN)によるオリジナルモジュール。</target>
        </trans-unit>
        <trans-unit id="ca220858f72bac0e96f130a0a0049dc62c81a474" translate="yes" xml:space="preserve">
          <source>Original release (in HTML format only)</source>
          <target state="translated">オリジナルリリース(HTML形式のみ</target>
        </trans-unit>
        <trans-unit id="d4af40b5a66315f7a63983b66bbac6bfc5ede9ef" translate="yes" xml:space="preserve">
          <source>Original version by Nicholas Clark</source>
          <target state="translated">ニコラス・クラークによるオリジナル版</target>
        </trans-unit>
        <trans-unit id="a9ec70668a9cf8a9b6348458c85a3f762057ac0f" translate="yes" xml:space="preserve">
          <source>Original version by Tom Christiansen, &amp;lt;tchrist@perl.com&amp;gt;.</source>
          <target state="translated">Tom Christiansenによるオリジナルバージョン、&amp;lt;tchrist@perl.com&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="93bd0bc0b9a9e635b79e9c5f125cb705f4a31e8d" translate="yes" xml:space="preserve">
          <source>Originally &lt;code&gt;Class::Template&lt;/code&gt; by Dean Roehrich.</source>
          <target state="translated">もともとはDean Roehrichによる &lt;code&gt;Class::Template&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="98ac195b142c467725515fdf5766071e9fc6f61f" translate="yes" xml:space="preserve">
          <source>Originally began life in May 1999 as an XS interface to the system mkstemp() function. In March 2000, the OpenBSD mkstemp() code was translated to Perl for total control of the code's security checking, to ensure the presence of the function regardless of operating system and to help with portability. The module was shipped as a standard part of perl from v5.6.1.</source>
          <target state="translated">もともとは、1999 年 5 月にシステムの mkstemp()関数への XS インターフェイスとしての生活が始まりました。2000 年 3 月、OpenBSD の mkstemp()のコードは、オペレーティングシステムに関係なく、 この関数が存在することを保証し、移植性を助けるために、コードのセキュリティチェックを 完全に制御するために、Perl に翻訳されました。このモジュールは、v5.6.1 から perl の標準部分として出荷されました。</target>
        </trans-unit>
        <trans-unit id="05d3b834a8e1ec7b7d1784cd966acd56262bc822" translate="yes" xml:space="preserve">
          <source>Originally by Larry Wall. Turned into the &lt;code&gt;ExtUtils::ParseXS&lt;/code&gt; module by Ken Williams.</source>
          <target state="translated">もともとはラリー・ウォール。変わった &lt;code&gt;ExtUtils::ParseXS&lt;/code&gt; ケン・ウィリアムズモジュール。</target>
        </trans-unit>
        <trans-unit id="78ba94984c09fe40c7fb0012a48157ae37638a1c" translate="yes" xml:space="preserve">
          <source>Originally by the perl5-porters.</source>
          <target state="translated">元々はperl5-portersによるものです。</target>
        </trans-unit>
        <trans-unit id="0a58abf22ae0f33a5d3fa45db34e7ceb2370f30b" translate="yes" xml:space="preserve">
          <source>Originally designed and implemented by Malcolm Beattie, mbeattie@sable.ox.ac.uk as part of Safe version 1.</source>
          <target state="translated">元々はMalcolm Beattie,mbeattie@sable.ox.ac.uk によって設計・実装されたもので、Safe バージョン 1 の一部として使用されています。</target>
        </trans-unit>
        <trans-unit id="c8441bf717fcfb993e717e28d6000796e14219bc" translate="yes" xml:space="preserve">
          <source>Originally designed and implemented by Malcolm Beattie.</source>
          <target state="translated">元々はマルコム・ビーティーによって設計され、実装されています。</target>
        </trans-unit>
        <trans-unit id="b5b9ddd002b9e83e3e5ffe5e5b5e1758fac1d1ee" translate="yes" xml:space="preserve">
          <source>Originally from the old Unix editor command for &amp;ldquo;Globally search for a Regular Expression and Print it&amp;rdquo;, now used in the general sense of any kind of search, especially text searches. Perl has a built-in &lt;code&gt;&lt;a href=&quot;functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt; function that searches a list for elements matching any given criterion, whereas the &lt;b&gt;grep&lt;/b&gt;(1) program searches for lines matching a &lt;b&gt;regular expression&lt;/b&gt; in one or more files.</source>
          <target state="translated">もともとは「正規表現をグローバルに検索して出力する」ための古いUnixエディターコマンドから、現在はあらゆる種類の検索、特にテキスト検索の一般的な意味で使用されています。Perlには、指定された基準に一致する要素のリストを検索する組み込みの &lt;code&gt;&lt;a href=&quot;functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt; 関数がありますが、&lt;b&gt;grep&lt;/b&gt;（1）プログラムは、1つ以上のファイルで&lt;b&gt;正規表現&lt;/b&gt;に一致する行を検索します。</target>
        </trans-unit>
        <trans-unit id="12dbc562a37d421dfae9551b8d02cf5dc6ccb36d" translate="yes" xml:space="preserve">
          <source>Originally from the old Unix editor command for &amp;ldquo;Globally search for a Regular Expression and Print it&amp;rdquo;, now used in the general sense of any kind of search, especially text searches. Perl has a built-in &lt;code&gt;grep&lt;/code&gt; function that searches a list for elements matching any given criterion, whereas the &lt;b&gt;grep&lt;/b&gt;(1) program searches for lines matching a &lt;b&gt;regular expression&lt;/b&gt; in one or more files.</source>
          <target state="translated">もともとは「正規表現をグローバルに検索して印刷する」という古いUnixエディタコマンドからのものでしたが、現在はあらゆる種類の検索、特にテキスト検索の一般的な意味で使用されています。Perlには、特定の基準に一致する要素のリストを検索する &lt;code&gt;grep&lt;/code&gt; 関数が組み込まれていますが、&lt;b&gt;grep&lt;/b&gt;（1）プログラムは、1つ以上のファイルの&lt;b&gt;正規表現&lt;/b&gt;に一致する行を検索します。</target>
        </trans-unit>
        <trans-unit id="179faca61deeed3ab0f554d9e5a2deeffd88d631" translate="yes" xml:space="preserve">
          <source>Originally part of &lt;a href=&quot;perlreguts&quot;&gt;perlreguts&lt;/a&gt;.</source>
          <target state="translated">もともとは&lt;a href=&quot;perlreguts&quot;&gt;perlregutsの&lt;/a&gt;一部でした。</target>
        </trans-unit>
        <trans-unit id="f99926744d51a0882b56c8605cf23549f21bb7f7" translate="yes" xml:space="preserve">
          <source>Originally ripped off from &lt;a href=&quot;../../../test/harness&quot;&gt;Test::Harness&lt;/a&gt;.</source>
          <target state="translated">もともとは&lt;a href=&quot;../../../test/harness&quot;&gt;Test :: Harness&lt;/a&gt;から引き裂かれました。</target>
        </trans-unit>
        <trans-unit id="71cbfb5529d2f3e7043bc6450156ba2700321efe" translate="yes" xml:space="preserve">
          <source>Originally ripped off from &lt;a href=&quot;../../test/harness&quot;&gt;Test::Harness&lt;/a&gt;.</source>
          <target state="translated">もともとは&lt;a href=&quot;../../test/harness&quot;&gt;Test :: Harness&lt;/a&gt;から引き裂かれました。</target>
        </trans-unit>
        <trans-unit id="922de722803d1e621ac8ae415ac5017312fda14a" translate="yes" xml:space="preserve">
          <source>Originally ripped off from &lt;a href=&quot;Test::Harness&quot;&gt;Test::Harness&lt;/a&gt;.</source>
          <target state="translated">もともと&lt;a href=&quot;Test::Harness&quot;&gt;Test :: Harness&lt;/a&gt;からはぎ取られました。</target>
        </trans-unit>
        <trans-unit id="c974ced833416c8108c7f2998e72c039642d918d" translate="yes" xml:space="preserve">
          <source>Originally the pragma was designed for the loftier goal of helping incorporate Unicode into Perl, but the approach that used it was found to be defective, and the one remaining legitimate use is for debugging when you need to non-destructively examine characters' individual bytes. Just insert this pragma temporarily, and remove it after the debugging is finished.</source>
          <target state="translated">もともとこのプラグマは、Perl への Unicode の組み込みを支援するという高尚な目標のために設計されましたが、これを使用したアプローチに欠陥があることが判明したため、残された唯一の正当な使用法は、文字の個々のバイトを非破壊的に調べる必要がある場合のデバッグ用です。このプラグマを一時的に挿入し、デバッグが終わったら削除してください。</target>
        </trans-unit>
        <trans-unit id="10558d1a36f98366d4aafd194d52755ed064b37d" translate="yes" xml:space="preserve">
          <source>Originally written by Dean Roehrich &amp;lt;</source>
          <target state="translated">もともとはディーンルーリッヒ&amp;lt;</target>
        </trans-unit>
        <trans-unit id="a52151e86e1ce8778189f415aab9a4b46ee85519" translate="yes" xml:space="preserve">
          <source>Originally written by Joe Smith &amp;lt;Joe.Smith@inwap.com&amp;gt;, using the framework created by Russ Allbery &amp;lt;rra@cpan.org&amp;gt;. Subsequently updated by Russ Allbery.</source>
          <target state="translated">Russ Allbery &amp;lt;rra@cpan.org&amp;gt;によって作成されたフレームワークを使用して、Joe Smith &amp;lt;Joe.Smith@inwap.com&amp;gt;によって最初に作成されました。その後、RussAllberyによって更新されました。</target>
        </trans-unit>
        <trans-unit id="40fdd20b1b0722f4c9f525e21df0d8f46d7d85b2" translate="yes" xml:space="preserve">
          <source>Originally written by Yves Orton, expanded by &amp;AElig;var Arnfj&amp;ouml;r&amp;eth; Bjarmason.</source>
          <target state="translated">元々はYves Ortonによって書かれ、&amp;AElig;varArnfj&amp;ouml;r&amp;eth;Bjarmasonによって拡張されました。</target>
        </trans-unit>
        <trans-unit id="34ed3165c12523cf9daa32ee0e9c345fe72fdd09" translate="yes" xml:space="preserve">
          <source>OsFHandleOpen</source>
          <target state="translated">OsFHandleOpen</target>
        </trans-unit>
        <trans-unit id="98a73e54de22faa4cd5c29e5a6133983dc56a71c" translate="yes" xml:space="preserve">
          <source>OsFHandleOpenFd</source>
          <target state="translated">OsFHandleOpenFd</target>
        </trans-unit>
        <trans-unit id="8f00a7de399080aa1b3b93fea4556bcfa8905c93" translate="yes" xml:space="preserve">
          <source>Oslo Concensus: &lt;a href=&quot;https://github.com/Perl-Toolchain-Gang/toolchain-site/blob/master/oslo-consensus.md&quot;&gt;https://github.com/Perl-Toolchain-Gang/toolchain-site/blob/master/oslo-consensus.md&lt;/a&gt;</source>
          <target state="translated">オスロコンセンサス：&lt;a href=&quot;https://github.com/Perl-Toolchain-Gang/toolchain-site/blob/master/oslo-consensus.md&quot;&gt;https&lt;/a&gt;：//github.com/Perl-Toolchain-Gang/toolchain-site/blob/master/oslo-consensus.md</target>
        </trans-unit>
        <trans-unit id="f0958a863745f7bb7b877718e9ffc0407e157bdf" translate="yes" xml:space="preserve">
          <source>Ossanna, Joseph F., and Brian W. Kernighan. &quot;Troff User's Manual,&quot; Computing Science Technical Report No. 54, AT&amp;amp;T Bell Laboratories. This is the best documentation of standard &lt;b&gt;nroff&lt;/b&gt; and &lt;b&gt;troff&lt;/b&gt;. At the time of this writing, it's available at &lt;a href=&quot;http://www.cs.bell-labs.com/cm/cs/cstr.html&quot;&gt;http://www.cs.bell-labs.com/cm/cs/cstr.html&lt;/a&gt;.</source>
          <target state="translated">Ossanna、Joseph F.、およびBrian W. Kernighan。「Troffユーザーマニュアル」、Computing Science Technical Report No. 54、AT＆T Bell Laboratories。これは、標準の&lt;b&gt;nroff&lt;/b&gt;と&lt;b&gt;troff&lt;/b&gt;の最良のドキュメントです。この記事の執筆時点では、&lt;a href=&quot;http://www.cs.bell-labs.com/cm/cs/cstr.html&quot;&gt;http://www.cs.bell-labs.com/cm/cs/cstr.htmlから&lt;/a&gt;入手できます。</target>
        </trans-unit>
        <trans-unit id="dc336d4b24ca0210e8b321f6b87d35cdda57c43c" translate="yes" xml:space="preserve">
          <source>Ossanna, Joseph F., and Brian W. Kernighan. &quot;Troff User's Manual,&quot; Computing Science Technical Report No. 54, AT&amp;amp;T Bell Laboratories. This is the best documentation of standard &lt;b&gt;nroff&lt;/b&gt; and &lt;b&gt;troff&lt;/b&gt;. At the time of this writing, it's available at &lt;a href=&quot;http://www.troff.org/54.pdf&quot;&gt;http://www.troff.org/54.pdf&lt;/a&gt;.</source>
          <target state="translated">オサンナ、ジョセフF.、ブライアンW.カーニハン。「Troffユーザーズマニュアル」、コンピューティングサイエンステクニカルレポートNo. 54、AT＆Tベル研究所。これは、標準の&lt;b&gt;nroff&lt;/b&gt;と&lt;b&gt;troff&lt;/b&gt;の最高のドキュメントです。この記事の執筆時点では、&lt;a href=&quot;http://www.troff.org/54.pdf&quot;&gt;http：//www.troff.org/54.pdfで&lt;/a&gt;入手できます。</target>
        </trans-unit>
        <trans-unit id="4209bd1da7b6357d7fd219e08de4663ac8c8de52" translate="yes" xml:space="preserve">
          <source>Other C compilers (yes, there &lt;b&gt;are&lt;/b&gt; other C compilers than gcc) often have their &quot;strict ANSI&quot; or &quot;strict ANSI with some portability extensions&quot; modes on, like for example the Sun Workshop has its &lt;code&gt;-Xa&lt;/code&gt; mode on (though implicitly), or the DEC (these days, HP...) has its &lt;code&gt;-std1&lt;/code&gt; mode on.</source>
          <target state="translated">他のCコンパイラ（そうです、gcc以外にも他のCコンパイラがあり&lt;b&gt;ます&lt;/b&gt;）は、「厳密なANSI」または「一部の移植性拡張機能を備えた厳密なANSI」モードをオンにします。たとえば、Sun Workshopは &lt;code&gt;-Xa&lt;/code&gt; モードをオンにします（暗黙的に）。またはDEC（最近のHP ...）では、 &lt;code&gt;-std1&lt;/code&gt; モードがオンになっています。</target>
        </trans-unit>
        <trans-unit id="551852c7028ddd04d28686d5a46f202fe2ad7cb7" translate="yes" xml:space="preserve">
          <source>Other Functions</source>
          <target state="translated">その他の機能</target>
        </trans-unit>
        <trans-unit id="0bdf87a4ace9eb276a876bd8e9250301437be6c5" translate="yes" xml:space="preserve">
          <source>Other Handy Functions</source>
          <target state="translated">その他の便利な機能</target>
        </trans-unit>
        <trans-unit id="0ae890b35ce85bf30d57cf160315165f538a27b8" translate="yes" xml:space="preserve">
          <source>Other JRRT books fair game for quotes would thus include</source>
          <target state="translated">引用のための他のJRRTの本フェアゲームは、このように含まれています。</target>
        </trans-unit>
        <trans-unit id="dfc61fffa8906502d8a54b080f23a45b3b6a145a" translate="yes" xml:space="preserve">
          <source>Other Methods</source>
          <target state="translated">その他の方法</target>
        </trans-unit>
        <trans-unit id="9cddf0d7c8be6f47e6c98b19d3cc5f6eafc229b5" translate="yes" xml:space="preserve">
          <source>Other Modifiers</source>
          <target state="translated">その他の修飾子</target>
        </trans-unit>
        <trans-unit id="98ea487e53f5c91e02896699ea06d75230ff0372" translate="yes" xml:space="preserve">
          <source>Other Notable Sites</source>
          <target state="translated">その他の注目サイト</target>
        </trans-unit>
        <trans-unit id="9165ac20a0a94eccf10c1024b71472d0032177d7" translate="yes" xml:space="preserve">
          <source>Other OO Systems</source>
          <target state="translated">その他のOOシステム</target>
        </trans-unit>
        <trans-unit id="92b14232c00517718a7c45a7ecde335eb02684ba" translate="yes" xml:space="preserve">
          <source>Other OSes</source>
          <target state="translated">その他のOS</target>
        </trans-unit>
        <trans-unit id="9cb6f2fb01dfa81e12bc1e11f0e7b676e54669fd" translate="yes" xml:space="preserve">
          <source>Other Options</source>
          <target state="translated">その他のオプション</target>
        </trans-unit>
        <trans-unit id="2e4443e4e50ba760b8445cff513b37784cdd2e52" translate="yes" xml:space="preserve">
          <source>Other Properties</source>
          <target state="translated">その他の物件</target>
        </trans-unit>
        <trans-unit id="ebafbcc27b9633bf022834dac0afdd7fe5320b31" translate="yes" xml:space="preserve">
          <source>Other References</source>
          <target state="translated">その他の参考文献</target>
        </trans-unit>
        <trans-unit id="b1cfcc24ae8085beb0c3f94ec65a05927107176a" translate="yes" xml:space="preserve">
          <source>Other SDKs or compilers like Visual.NET, command-line-only Visual.NET, Borland, GnuPoc, or sdk2unix have not been tried.</source>
          <target state="translated">Visual.NET、コマンドラインのみのVisual.NET、Borland、GnuPoc、sdk2unixのような他のSDKやコンパイラは試していません。</target>
        </trans-unit>
        <trans-unit id="fa1430ad78734f8ef31e36e90d4f36de9f13a735" translate="yes" xml:space="preserve">
          <source>Other Testing Methods</source>
          <target state="translated">その他の試験方法</target>
        </trans-unit>
        <trans-unit id="8a37f838b7323d5f1b30a918edfaa9edbace652b" translate="yes" xml:space="preserve">
          <source>Other aspects of the subroutine will be left in their default state. If anything else needs to be done to the subroutine for it to function correctly, it is the caller's responsibility to do that after this function has constructed it. However, beware of the subroutine potentially being destroyed before this function returns, as described below.</source>
          <target state="translated">サブルーチンの他の部分はデフォルトの状態のままになります。サブルーチンが正しく機能するために必要なことがあれば、この関数がサブルーチンを構築した後、呼び出し側の責任でそれを行う必要があります。ただし、以下で説明するように、この関数がリターンする前にサブルーチンが破壊される可能性があるので注意してください。</target>
        </trans-unit>
        <trans-unit id="f0e56c564684ea4c937565ef815405ac4aa82ff1" translate="yes" xml:space="preserve">
          <source>Other available flags are:</source>
          <target state="translated">他に利用可能なフラグは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="7470c59c71ddc3eec37bea7e58f1b51d00417920" translate="yes" xml:space="preserve">
          <source>Other backend libraries include Math::BigInt::Calc, Math::BigInt::FastCalc, Math::BigInt::GMP, and Math::BigInt::Pari.</source>
          <target state="translated">その他のバックエンドライブラリには、Math::BigInt::Calc、Math::BigInt::FastCalc、Math::BigInt::GMP、およびMath::BigInt::Pariがあります。</target>
        </trans-unit>
        <trans-unit id="a9a6815e54ae300be1f551c6019a20062ec0f880" translate="yes" xml:space="preserve">
          <source>Other categories</source>
          <target state="translated">その他のカテゴリー</target>
        </trans-unit>
        <trans-unit id="fa31529000a27db1a7fada94ddb4d6caa2048ed7" translate="yes" xml:space="preserve">
          <source>Other characters that can't appear in Perl identifiers are also supported as aliases with Getopt::Long of at least version 2.39.</source>
          <target state="translated">Perl の識別子に現れない他の文字も、少なくともバージョン 2.39 の Getopt::Long でエイリアスとしてサポートされています。</target>
        </trans-unit>
        <trans-unit id="8d2904fc4090c5c43c8653f3c072f6e3c8296ff1" translate="yes" xml:space="preserve">
          <source>Other characters that can't appear in Perl identifiers are also supported in aliases with Getopt::Long of at version 2.39. Note that the characters &lt;code&gt;!&lt;/code&gt;, &lt;code&gt;|&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;=&lt;/code&gt;, and &lt;code&gt;:&lt;/code&gt; can only appear as the first (or only) character of an alias.</source>
          <target state="translated">Perl識別子に表示できない他の文字は、バージョン2.39のGetopt :: Longのエイリアスでもサポートされています。文字に注意してください &lt;code&gt;!&lt;/code&gt; 、 &lt;code&gt;|&lt;/code&gt; 、 &lt;code&gt;+&lt;/code&gt; 、 &lt;code&gt;=&lt;/code&gt; 、および &lt;code&gt;:&lt;/code&gt; は、エイリアスの最初の（または唯一の）文字としてのみ表示できます。</target>
        </trans-unit>
        <trans-unit id="988b72d132dbf3076501a7170736916fd9874521" translate="yes" xml:space="preserve">
          <source>Other complications</source>
          <target state="translated">その他の合併症</target>
        </trans-unit>
        <trans-unit id="67ea52f1a7ae74f014909d25b0bddf410e9fbbb3" translate="yes" xml:space="preserve">
          <source>Other considerations</source>
          <target state="translated">その他の考慮事項</target>
        </trans-unit>
        <trans-unit id="cd70d6bbf0c061003d5d747de3a0bfc4476f68fc" translate="yes" xml:space="preserve">
          <source>Other contributors</source>
          <target state="translated">その他の投稿者</target>
        </trans-unit>
        <trans-unit id="8d0c676ad5a08266ef14cec4f91d0f2a09e01766" translate="yes" xml:space="preserve">
          <source>Other conversion methods</source>
          <target state="translated">その他の変換方法</target>
        </trans-unit>
        <trans-unit id="6be322bc8ea0db1e8be06d4ec43ad756a099bfb6" translate="yes" xml:space="preserve">
          <source>Other data worth storing in a lexicon might be things like filenames for language-targetted resources:</source>
          <target state="translated">他にも、言語をターゲットにしたリソースのファイル名など、レキシコンに保存する価値のあるデータがあるかもしれません。</target>
        </trans-unit>
        <trans-unit id="36fefa00642398c0b54d66e1ab2941d7ce0381ab" translate="yes" xml:space="preserve">
          <source>Other environment variables that may influence tests</source>
          <target state="translated">テストに影響を与える可能性のあるその他の環境変数</target>
        </trans-unit>
        <trans-unit id="293561c7c0c8a1abe2aec3c1c2e6ea87fd9c52f7" translate="yes" xml:space="preserve">
          <source>Other examples include</source>
          <target state="translated">その他の例</target>
        </trans-unit>
        <trans-unit id="050e92356c2ad433980e335b3cd1c37de82b2130" translate="yes" xml:space="preserve">
          <source>Other examples include (using standard shell syntax to show environment variable settings):</source>
          <target state="translated">他の例としては、(標準シェル構文を使用して環境変数の設定を表示する)などがあります。</target>
        </trans-unit>
        <trans-unit id="0890da9a3fe9000b110723faeb22296dde791fee" translate="yes" xml:space="preserve">
          <source>Other examples include:</source>
          <target state="translated">その他の例としては、以下のようなものがあります。</target>
        </trans-unit>
        <trans-unit id="9b4e9be46864e281795d5dbc03712be976c67f55" translate="yes" xml:space="preserve">
          <source>Other information in the Unicode data base</source>
          <target state="translated">Unicode データベースのその他の情報</target>
        </trans-unit>
        <trans-unit id="be5464268eb0652d20727c597b5d478658d7e34b" translate="yes" xml:space="preserve">
          <source>Other interesting targets in the generated Makefile are</source>
          <target state="translated">生成されたMakefileの他の興味深いターゲットは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="4995af619bf2d3ae8de0384100aa88eb416db8e0" translate="yes" xml:space="preserve">
          <source>Other interesting, non-Perl books</source>
          <target state="translated">その他の面白い、Perl以外の本</target>
        </trans-unit>
        <trans-unit id="a0a7f74c7a5b001c1898061e6c8bbb41c2b8f981" translate="yes" xml:space="preserve">
          <source>Other larger &lt;code&gt;regnode&lt;/code&gt; -like structures are defined in</source>
          <target state="translated">他の大きな &lt;code&gt;regnode&lt;/code&gt; のような構造は、</target>
        </trans-unit>
        <trans-unit id="b57626cf1658a5b64d186cc5fd930b916dcfc307" translate="yes" xml:space="preserve">
          <source>Other larger &lt;code&gt;regnode&lt;/code&gt;-like structures are defined in</source>
          <target state="translated">他のより大きな &lt;code&gt;regnode&lt;/code&gt; のような構造はで定義されています</target>
        </trans-unit>
        <trans-unit id="54a8c70b7563cbb778a36bb5bcccfde96170f9d6" translate="yes" xml:space="preserve">
          <source>Other man pages to check out, like man(1), man(7), makewhatis(8), or catman(8). Normally a simple list of man pages separated by commas, or a paragraph giving the name of a reference work. Man page references, if they use the standard &lt;code&gt;name(section)&lt;/code&gt; form, don't have to be enclosed in L&amp;lt;&amp;gt; (although it's recommended), but other things in this section probably should be when appropriate.</source>
          <target state="translated">man（1）、man（7）、makewhatis（8）、またはcatman（8）など、チェックアウトする他のmanページ。通常、カンマで区切られたmanページの単純なリスト、または参考資料の名前を示す段落。マニュアルページの参照は、標準の &lt;code&gt;name(section)&lt;/code&gt; 形式を使用する場合、L &amp;lt;&amp;gt;で囲む必要はありませんが（推奨されていますが）、このセクションの他の部分はおそらく適切であるはずです。</target>
        </trans-unit>
        <trans-unit id="10e4be89c97c3d2dc6a38d440ab26a720e224f64" translate="yes" xml:space="preserve">
          <source>Other mathematical methods</source>
          <target state="translated">その他の数学的手法</target>
        </trans-unit>
        <trans-unit id="09377d559ba63e5222c49d690aba88e139d8b9c3" translate="yes" xml:space="preserve">
          <source>Other mathematical operators</source>
          <target state="translated">その他の数学演算子</target>
        </trans-unit>
        <trans-unit id="2a0be4d7126d12c4393a8f81b69236cf7f3adb37" translate="yes" xml:space="preserve">
          <source>Other methods defined in Encode::Encodings</source>
          <target state="translated">Encode::Encodings で定義されている他のメソッド</target>
        </trans-unit>
        <trans-unit id="8b02b29f176b90b35adf0979292f2a1a362170a1" translate="yes" xml:space="preserve">
          <source>Other module design guidelines can be found in &lt;a href=&quot;perlmod&quot;&gt;perlmod&lt;/a&gt;.</source>
          <target state="translated">他のモジュール設計ガイドラインは&lt;a href=&quot;perlmod&quot;&gt;perlmodにあり&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="ee6b0460067623519cc565a472bd480c100039cf" translate="yes" xml:space="preserve">
          <source>Other modules</source>
          <target state="translated">その他のモジュール</target>
        </trans-unit>
        <trans-unit id="48ca1b65ec767babcee7f3aa6bcd98e916e9b05a" translate="yes" xml:space="preserve">
          <source>Other modules based on Test::Builder can be used to help with the testing. In fact you can even use functions from your module to test other functions from the same module (while this is possible it is probably not a good idea, if your module has bugs, then using it to test itself may give the wrong answers).</source>
          <target state="translated">Test::Builder をベースにした他のモジュールをテストに使うことができます。実際には、モジュールの関数を使って同じモジュールの他の関数をテストすることもできます (これは可能ですが、モジュールにバグがある場合、モジュール自体をテストするためにそれを使うのは良い考えではないかもしれません。)</target>
        </trans-unit>
        <trans-unit id="c0fb06177666493089c90aafcdd8d1fb9c546e07" translate="yes" xml:space="preserve">
          <source>Other modules provide more specific access: &lt;a href=&quot;Win32::ODBC&quot;&gt;Win32::ODBC&lt;/a&gt;, &lt;a href=&quot;alzabo&quot;&gt;Alzabo&lt;/a&gt;, &lt;code&gt;iodbc&lt;/code&gt;, and others found on CPAN Search: &lt;a href=&quot;https://metacpan.org/&quot;&gt;https://metacpan.org/&lt;/a&gt; .</source>
          <target state="translated">他のモジュールは、より具体的なアクセスを提供します：&lt;a href=&quot;Win32::ODBC&quot;&gt;Win32 :: ODBC&lt;/a&gt;、&lt;a href=&quot;alzabo&quot;&gt;Alzabo&lt;/a&gt;、 &lt;code&gt;iodbc&lt;/code&gt; 、およびCPAN検索で見つかった他のモジュール：&lt;a href=&quot;https://metacpan.org/&quot;&gt;https&lt;/a&gt;：//metacpan.org/。</target>
        </trans-unit>
        <trans-unit id="35b38a9ced9a9e6defe1372beb74c2a71438500f" translate="yes" xml:space="preserve">
          <source>Other modules provide more specific access: &lt;a href=&quot;http://search.cpan.org/perldoc/Win32::ODBC&quot;&gt;Win32::ODBC&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/Alzabo&quot;&gt;Alzabo&lt;/a&gt;, &lt;code&gt;iodbc&lt;/code&gt; , and others found on CPAN Search: &lt;a href=&quot;http://search.cpan.org/&quot;&gt;http://search.cpan.org/&lt;/a&gt; .</source>
          <target state="translated">&lt;a href=&quot;http://search.cpan.org/perldoc/Win32::ODBC&quot;&gt;Win32 :: ODBC&lt;/a&gt;、&lt;a href=&quot;http://search.cpan.org/perldoc/Alzabo&quot;&gt;Alzabo&lt;/a&gt;、 &lt;code&gt;iodbc&lt;/code&gt; 、およびCPAN Search：&lt;a href=&quot;http://search.cpan.org/&quot;&gt;http&lt;/a&gt; : //search.cpan.org/にあるその他のモジュールは、より具体的なアクセスを提供します。</target>
        </trans-unit>
        <trans-unit id="ea8f1c1f877c26989c3315ed2cebf633f6959a43" translate="yes" xml:space="preserve">
          <source>Other modules using &lt;code&gt;STDIN&lt;/code&gt; and &lt;code&gt;STDOUT&lt;/code&gt; get the encoded stream</source>
          <target state="translated">&lt;code&gt;STDIN&lt;/code&gt; および &lt;code&gt;STDOUT&lt;/code&gt; を使用する他のモジュールは、エンコードされたストリームを取得します</target>
        </trans-unit>
        <trans-unit id="d291165f3e48fa04de2df661e5577d3237e36a86" translate="yes" xml:space="preserve">
          <source>Other options</source>
          <target state="translated">その他のオプション</target>
        </trans-unit>
        <trans-unit id="014edefbdeb134528c300bbe292e9dea3d3171e2" translate="yes" xml:space="preserve">
          <source>Other people picked up on this and started to write clever or obfuscated programs to produce the same output, spinning things quickly out of control while still providing hours of amusement for their creators and readers.</source>
          <target state="translated">他の人たちはこれに気付いて、同じ出力を出すための巧妙なプログラムや難読化されたプログラムを書き始めました。</target>
        </trans-unit>
        <trans-unit id="b2c45e1355cf0a47d9a693c24c0422d1a1693c9c" translate="yes" xml:space="preserve">
          <source>Other perls</source>
          <target state="translated">その他のperl</target>
        </trans-unit>
        <trans-unit id="2d78880c37d6825d2ae3118f278c3357f9e4c7a8" translate="yes" xml:space="preserve">
          <source>Other places to ask questions are on the &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.perlmonks.org%2f&quot;&gt;PerlMonks site&lt;/a&gt; or &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fstackoverflow.com%2fquestions%2ftagged%2fperl&quot;&gt;stackoverflow&lt;/a&gt;.</source>
          <target state="translated">質問をする他の場所は、&lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.perlmonks.org%2f&quot;&gt;PerlMonksサイト&lt;/a&gt;または&lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fstackoverflow.com%2fquestions%2ftagged%2fperl&quot;&gt;stackoverflowにあり&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="35b3ead6bc3028c8b87ade98500a0b9de5bfe2c1" translate="yes" xml:space="preserve">
          <source>Other places to ask questions are on the &lt;a href=&quot;http://www.perlmonks.org/&quot;&gt;PerlMonks site&lt;/a&gt; or &lt;a href=&quot;http://stackoverflow.com/questions/tagged/perl&quot;&gt;stackoverflow&lt;/a&gt;.</source>
          <target state="translated">質問をする他の場所は、&lt;a href=&quot;http://www.perlmonks.org/&quot;&gt;PerlMonksサイト&lt;/a&gt;または&lt;a href=&quot;http://stackoverflow.com/questions/tagged/perl&quot;&gt;stackoverflow&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="94bfe5471f8f9572c8f23295ec358290aa5c0ef5" translate="yes" xml:space="preserve">
          <source>Other prebuilt perl binaries</source>
          <target state="translated">その他のビルド済み perl バイナリ</target>
        </trans-unit>
        <trans-unit id="7f1a8448038fa5bcf79a21cfd101906676d442be" translate="yes" xml:space="preserve">
          <source>Other regexp features</source>
          <target state="translated">その他の正規表現機能</target>
        </trans-unit>
        <trans-unit id="e084077b7075b7e9a73a17897df829f14ab4b896" translate="yes" xml:space="preserve">
          <source>Other return codes are defined. See below and in the Berkeley DB documentation for details. The Berkeley DB documentation should be used as the definitive source.</source>
          <target state="translated">その他のリターンコードが定義されています。詳細については、以下とBerkeley DBのドキュメントを参照してください。最終的なソースは、Berkeley DB のドキュメントを使用してください。</target>
        </trans-unit>
        <trans-unit id="b333dbc669f480c73b5b58df634b402ae239a596" translate="yes" xml:space="preserve">
          <source>Other than &lt;a href=&quot;bignum&quot;&gt;bignum&lt;/a&gt;, this module upgrades to Math::BigRat, meaning that instead of 2.5 you will get 2+1/2 as output.</source>
          <target state="translated">&lt;a href=&quot;bignum&quot;&gt;bignum&lt;/a&gt;以外に、このモジュールはMath :: BigRatにアップグレードします。つまり、2.5の代わりに2 + 1/2が出力として得られます。</target>
        </trans-unit>
        <trans-unit id="eb36362d59c4594cc709a7ea4be2c2f79bf0b417" translate="yes" xml:space="preserve">
          <source>Other than those two situations, I don't imagine that it's useful to override the &lt;code&gt;maketext&lt;/code&gt; method. (If you run into a situation where it is useful, I'd be interested in hearing about it.)</source>
          <target state="translated">これらの2つの状況以外では、 &lt;code&gt;maketext&lt;/code&gt; メソッドをオーバーライドするのが便利だとは思いません。（それが役立つ状況に遭遇した場合、私はそれについて聞きたいと思います。）</target>
        </trans-unit>
        <trans-unit id="3a13873f30aa4125cb2e70864ac4099e17744319" translate="yes" xml:space="preserve">
          <source>Other unblessed references are generally not allowed and will cause an exception to be thrown, except for references to the integers &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt;, which get turned into &lt;code&gt;false&lt;/code&gt; and &lt;code&gt;true&lt;/code&gt; atoms in JSON. You can also use &lt;code&gt;JSON::PP::false&lt;/code&gt; and &lt;code&gt;JSON::PP::true&lt;/code&gt; to improve readability.</source>
          <target state="translated">他の祝福されていない参照は一般に許可されておらず、JSONで &lt;code&gt;false&lt;/code&gt; および &lt;code&gt;true&lt;/code&gt; アトムに変換される整数 &lt;code&gt;0&lt;/code&gt; および &lt;code&gt;1&lt;/code&gt; への参照を除いて、例外がスローされます。 &lt;code&gt;JSON::PP::false&lt;/code&gt; および &lt;code&gt;JSON::PP::true&lt;/code&gt; を使用して、読みやすさを向上させることもできます。</target>
        </trans-unit>
        <trans-unit id="3cd5880c7e1311882e4a701ed7f5da40800de7a3" translate="yes" xml:space="preserve">
          <source>Other useful flags</source>
          <target state="translated">その他の便利なフラグ</target>
        </trans-unit>
        <trans-unit id="3a5b57060690dc31c3058289c6a303662394ee99" translate="yes" xml:space="preserve">
          <source>Other useful functions are &lt;code&gt;Perl_dump_sub&lt;/code&gt; , which turns a &lt;code&gt;GV&lt;/code&gt; into an op tree, &lt;code&gt;Perl_dump_packsubs&lt;/code&gt; which calls &lt;code&gt;Perl_dump_sub&lt;/code&gt; on all the subroutines in a package like so: (Thankfully, these are all xsubs, so there is no op tree)</source>
          <target state="translated">その他の便利な機能です &lt;code&gt;Perl_dump_sub&lt;/code&gt; なり、 &lt;code&gt;GV&lt;/code&gt; を OPツリーに、 &lt;code&gt;Perl_dump_packsubs&lt;/code&gt; 呼び出す &lt;code&gt;Perl_dump_sub&lt;/code&gt; をそうのようなパッケージ内のすべてのサブルーチンに：（ありがたいことに、これらはすべてのXSUBなので、何のOPの木がありません）</target>
        </trans-unit>
        <trans-unit id="f820586607039f830c7f2b730f72d45c0074c796" translate="yes" xml:space="preserve">
          <source>Other useful functions are &lt;code&gt;Perl_dump_sub&lt;/code&gt;, which turns a &lt;code&gt;GV&lt;/code&gt; into an op tree, &lt;code&gt;Perl_dump_packsubs&lt;/code&gt; which calls &lt;code&gt;Perl_dump_sub&lt;/code&gt; on all the subroutines in a package like so: (Thankfully, these are all xsubs, so there is no op tree)</source>
          <target state="translated">その他の便利な機能です &lt;code&gt;Perl_dump_sub&lt;/code&gt; なり、 &lt;code&gt;GV&lt;/code&gt; をOPツリーに、 &lt;code&gt;Perl_dump_packsubs&lt;/code&gt; 呼び出す &lt;code&gt;Perl_dump_sub&lt;/code&gt; をそうのようなパッケージ内のすべてのサブルーチンに：（ありがたいことに、これらはすべてのXSUBなので、何のOPの木がありません）</target>
        </trans-unit>
        <trans-unit id="7aec5a2099bba9d9c155d5ff98c8d088a4d87e95" translate="yes" xml:space="preserve">
          <source>Other useful sources include the Unicode Glossary &lt;a href=&quot;http://unicode.org/glossary/&quot;&gt;http://unicode.org/glossary/&lt;/a&gt;, the Free On-Line Dictionary of Computing &lt;a href=&quot;http://foldoc.org/&quot;&gt;http://foldoc.org/&lt;/a&gt;, the Jargon File &lt;a href=&quot;http://catb.org/~esr/jargon/&quot;&gt;http://catb.org/~esr/jargon/&lt;/a&gt;, and Wikipedia &lt;a href=&quot;http://www.wikipedia.org/&quot;&gt;http://www.wikipedia.org/&lt;/a&gt;.</source>
          <target state="translated">その他の有用なソースには、Unicode Glossary &lt;a href=&quot;http://unicode.org/glossary/&quot;&gt;http://unicode.org/glossary/&lt;/a&gt;、無料のコンピューティングの&lt;a href=&quot;http://foldoc.org/&quot;&gt;オンライン&lt;/a&gt;辞書http://foldoc.org/、Jargonファイル&lt;a href=&quot;http://catb.org/~esr/jargon/&quot;&gt;http://catb.org/~esr/jargonがあります。 /&lt;/a&gt;、およびWikipedia &lt;a href=&quot;http://www.wikipedia.org/&quot;&gt;http://www.wikipedia.org/&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="55c0500d3b5f8d60d79cf605a490c073a4b14076" translate="yes" xml:space="preserve">
          <source>Other voting mechanisms may also be used instead (e.g. sending mail to perl5-porters and at least two other committers responding to the list giving their assent), as long as the same number of votes is gathered in a transparent manner. Specifically, proposals of which changes to cherry-pick must be visible to everyone on perl5-porters so that the views of everyone interested may be heard.</source>
          <target state="translated">透明性のある方法で同じ数の票が集まる限り、他の投票メカニズムを使うこともできます (例えば perl5-porters にメールを送り、リストに返信した他の少なくとも 2 つのコミット者が同意を表明するなど)。具体的には、どのような変更をチェリーピックするかの提案は perl5-porters のすべての人に見えるようにして、興味のあるすべての人の意見を聞くことができるようにしなければなりません。</target>
        </trans-unit>
        <trans-unit id="a5dd1af1a4d04ac7e7f3b21f718a7e15571fdc1c" translate="yes" xml:space="preserve">
          <source>Other voting mechanisms may be used instead, as long as the same number of votes is gathered in a transparent manner. Specifically, proposals of which changes to cherry-pick must be visible to everyone on perl5-porters so that the views of everyone interested may be heard.</source>
          <target state="translated">同じ数の投票が透明性のある方法で集められる限り、他の投票メカニズムを使用しても構いません。具体的には、チェリーピックを変更する提案は perl5-porters 上の誰もが見られるようにしなければならないので、興味のある人の意見を聞くことができます。</target>
        </trans-unit>
        <trans-unit id="315b2283e70ed5c9b3a32d956573fa52bcf2327a" translate="yes" xml:space="preserve">
          <source>Other_Alphabetic</source>
          <target state="translated">Other_Alphabetic</target>
        </trans-unit>
        <trans-unit id="3576c30ed2a7456b454a6df0f1d356a6a5b81854" translate="yes" xml:space="preserve">
          <source>Other_Default_Ignorable_Code_Point</source>
          <target state="translated">Other_Default_Ignorable_Code_Point</target>
        </trans-unit>
        <trans-unit id="b8a4e9e3315108565913f1214d70e6ab06305fea" translate="yes" xml:space="preserve">
          <source>Other_Grapheme_Extend</source>
          <target state="translated">Other_Grapheme_Extend</target>
        </trans-unit>
        <trans-unit id="1eafede4d641ad77c5e7696525a5726a3b1e25e2" translate="yes" xml:space="preserve">
          <source>Other_ID_Continue</source>
          <target state="translated">Other_ID_Continue</target>
        </trans-unit>
        <trans-unit id="20de61891c461dc1d0740d06823ad7c655241aae" translate="yes" xml:space="preserve">
          <source>Other_ID_Start</source>
          <target state="translated">Other_ID_Start</target>
        </trans-unit>
        <trans-unit id="01c4b64406b7699bf365d87632f6ecac32fc9e72" translate="yes" xml:space="preserve">
          <source>Other_Lowercase</source>
          <target state="translated">Other_Lowercase</target>
        </trans-unit>
        <trans-unit id="85b8947a3c801b69f490df8abb132c7f38d3815e" translate="yes" xml:space="preserve">
          <source>Other_Math</source>
          <target state="translated">Other_Math</target>
        </trans-unit>
        <trans-unit id="8f9fafd248962959d08eb0fc0b6409cc5836d1a0" translate="yes" xml:space="preserve">
          <source>Other_Uppercase</source>
          <target state="translated">Other_Uppercase</target>
        </trans-unit>
        <trans-unit id="4bfbee0ac92ce150f0ba704eb6a3c6c42daf813e" translate="yes" xml:space="preserve">
          <source>Otherwise (given -n) if there's an opt_n, we'll call it $object-&amp;gt;opt_n($truth) (Truth defaults to 1)</source>
          <target state="translated">それ以外の場合（-nを指定）、opt_nがある場合は、それを$ object-&amp;gt; opt_n（$ Truth）と呼びます（Truthのデフォルトは1）</target>
        </trans-unit>
        <trans-unit id="3ac0cc8652af1d4f7f345245edd00769715fa15d" translate="yes" xml:space="preserve">
          <source>Otherwise (i.e., if not a CGI), this tries various OS-specific ways to get the language-tags for the current locale/language, and then pretends that those were the value(s) passed to &lt;code&gt;get_handle&lt;/code&gt; .</source>
          <target state="translated">それ以外の場合（つまり、CGIでない場合）、これは現在のロケール/言語の言語タグを取得するためにさまざまなOS固有の方法を試み、それらが &lt;code&gt;get_handle&lt;/code&gt; に渡された値であると偽装します。</target>
        </trans-unit>
        <trans-unit id="3a28e3abbf32dfa769b7eb1d1908cdeb733b9570" translate="yes" xml:space="preserve">
          <source>Otherwise (i.e., if not a CGI), this tries various OS-specific ways to get the language-tags for the current locale/language, and then pretends that those were the value(s) passed to &lt;code&gt;get_handle&lt;/code&gt;.</source>
          <target state="translated">それ以外の場合（つまり、CGIでない場合）、これは、現在のロケール/言語の言語タグを取得するためのさまざまなOS固有の方法を試行し、それらが &lt;code&gt;get_handle&lt;/code&gt; に渡された値であると偽ります。</target>
        </trans-unit>
        <trans-unit id="e4193defd905194b15d3c5085357f0fe9383a2c2" translate="yes" xml:space="preserve">
          <source>Otherwise if &lt;code&gt;Configure&lt;/code&gt; found out how to do &quot;fast&quot; IO using the system's stdio (not common on modern architectures), then the default layers are:</source>
          <target state="translated">それ以外の場合、 &lt;code&gt;Configure&lt;/code&gt; がシステムのstdioを使用して「高速」IOを実行する方法を見つけた場合（最新のアーキテクチャでは一般的ではありません）、デフォルトのレイヤーは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="a8e5ffbd89769bd3258cb9b3ff5d583b3da49162" translate="yes" xml:space="preserve">
          <source>Otherwise if &lt;code&gt;Configure&lt;/code&gt; found out how to do &quot;fast&quot; IO using the system's stdio, then the default layers are:</source>
          <target state="translated">それ以外の場合、 &lt;code&gt;Configure&lt;/code&gt; がシステムのstdioを使用して「高速」IOを実行する方法を見つけた場合、デフォルトのレイヤーは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="7e1be4e61a83d07cd0d9ce46ed206ea82b9d2b71" translate="yes" xml:space="preserve">
          <source>Otherwise if you really do want to build Perl, you need to get a binary version of &lt;code&gt;gcc&lt;/code&gt; for your system first. Use a search engine to find out how to do this for your operating system.</source>
          <target state="translated">そうでない場合、本当にPerlをビルドしたい場合は、最初にシステム用の &lt;code&gt;gcc&lt;/code&gt; のバイナリバージョンを入手する必要があります。お使いのオペレーティングシステムでこれを行う方法を見つけるには、検索エンジンを使用してください。</target>
        </trans-unit>
        <trans-unit id="16e91ca326f6d29d45932c9e83458e6f42f6b2d6" translate="yes" xml:space="preserve">
          <source>Otherwise the &lt;code&gt;PerlIO&lt;/code&gt; package is a place holder for additional PerlIO related functions.</source>
          <target state="translated">それ以外の場合、 &lt;code&gt;PerlIO&lt;/code&gt; パッケージは、追加のPerlIO関連機能のプレースホルダーです。</target>
        </trans-unit>
        <trans-unit id="64d28c2a38bdb42602aa40deca558a7edd1c1d73" translate="yes" xml:space="preserve">
          <source>Otherwise the default layers are</source>
          <target state="translated">それ以外の場合、デフォルトのレイヤーは</target>
        </trans-unit>
        <trans-unit id="8ee20b17c349e20c2d2bb84cf8ffa7aac44d8cc6" translate="yes" xml:space="preserve">
          <source>Otherwise this bracket group is invalid. For example, in the group &quot;[!@#,whatever]&quot;, the first item &lt;code&gt;&quot;!@#&quot;&lt;/code&gt; is neither the empty-string, &quot;_</source>
          <target state="translated">それ以外の場合、このブラケットグループは無効です。たとえば、グループ「[！@＃、whatever]」では、最初の項目 &lt;code&gt;&quot;!@#&quot;&lt;/code&gt; は空の文字列「_ 」でもありません。</target>
        </trans-unit>
        <trans-unit id="bf453e7fed3c21047f791d3883ec9b5693cb3a1a" translate="yes" xml:space="preserve">
          <source>Otherwise we try calling $object-&amp;gt;handle_unknown_option('n') (and we increment the error count by the return value of it)</source>
          <target state="translated">それ以外の場合は、$ object-&amp;gt; handle_unknown_option（ 'n'）を呼び出してみます（エラーカウントをその戻り値でインクリメントします）</target>
        </trans-unit>
        <trans-unit id="7aa4578f342729b5a29e5d40bab856fc0c1cb526" translate="yes" xml:space="preserve">
          <source>Otherwise we will try and temporarily redirect STDERR and STDOUT, do a &lt;code&gt;&lt;a href=&quot;../functions/system&quot;&gt;system()&lt;/a&gt;&lt;/code&gt; call with your command and then re-open STDERR and STDOUT. This is the method of last resort and will still allow you to execute your commands cleanly. However, no buffers will be available.</source>
          <target state="translated">それ以外の場合は、STDERRとSTDOUTを一時的にリダイレクトし、 &lt;code&gt;&lt;a href=&quot;../functions/system&quot;&gt;system()&lt;/a&gt;&lt;/code&gt; 呼び出しをコマンドで実行してから、STDERRとSTDOUTを再度開きます。これは最後の手段であり、コマンドをきれいに実行することができます。ただし、使用可能なバッファーはありません。</target>
        </trans-unit>
        <trans-unit id="c363f4152d36d391a2429c0164275025f6d3b69a" translate="yes" xml:space="preserve">
          <source>Otherwise we will try and temporarily redirect STDERR and STDOUT, do a &lt;code&gt;system()&lt;/code&gt; call with your command and then re-open STDERR and STDOUT. This is the method of last resort and will still allow you to execute your commands cleanly. However, no buffers will be available.</source>
          <target state="translated">それ以外の場合は、STDERRとSTDOUTを一時的にリダイレクトし、コマンドを使用して &lt;code&gt;system()&lt;/code&gt; 呼び出しを実行してから、STDERRとSTDOUTを再度開きます。これは最後の手段であり、コマンドをクリーンに実行できます。ただし、バッファは使用できません。</target>
        </trans-unit>
        <trans-unit id="188f49f273bed3f7a9e10e1965748d66feb13e86" translate="yes" xml:space="preserve">
          <source>Otherwise, &lt;a href=&quot;#require-VERSION&quot;&gt;&lt;code&gt;require&lt;/code&gt;&lt;/a&gt; demands that a library file be included if it hasn't already been included. The file is included via the do-FILE mechanism, which is essentially just a variety of &lt;a href=&quot;#eval-EXPR&quot;&gt;&lt;code&gt;eval&lt;/code&gt;&lt;/a&gt; with the caveat that lexical variables in the invoking script will be invisible to the included code. If it were implemented in pure Perl, it would have semantics similar to the following:</source>
          <target state="translated">それ以外の場合は、&lt;a href=&quot;#require-VERSION&quot;&gt; &lt;code&gt;require&lt;/code&gt; &lt;/a&gt;がまだ含まれていない場合、ライブラリファイルが含まれていることを要求します。ファイルはdo-FILEメカニズムを介してインクルードされます。これは基本的に、呼び出し元のスクリプトの字句変数がインクルードされたコードから見えないという警告を伴う、さまざまな&lt;a href=&quot;#eval-EXPR&quot;&gt; &lt;code&gt;eval&lt;/code&gt; &lt;/a&gt;です。純粋なPerlで実装された場合、次のようなセマンティクスがあります。</target>
        </trans-unit>
        <trans-unit id="20ff6315794dc14ec03885c6a49fa46491bf4688" translate="yes" xml:space="preserve">
          <source>Otherwise, &lt;code&gt;*is_utf8p&lt;/code&gt; is set to 0, and the return value is a pointer to a newly created string containing a downgraded copy of &lt;code&gt;s&lt;/code&gt;, and whose length is returned in &lt;code&gt;*lenp&lt;/code&gt;, updated. The new string is &lt;code&gt;NUL&lt;/code&gt;-terminated. The caller is responsible for arranging for the memory used by this string to get freed.</source>
          <target state="translated">それ以外の場合、 &lt;code&gt;*is_utf8p&lt;/code&gt; は0に設定され、戻り値は &lt;code&gt;s&lt;/code&gt; のダウングレードされたコピーを含む新しく作成された文字列へのポインタであり、その長さは &lt;code&gt;*lenp&lt;/code&gt; で返され更新されます。新しい文字列は &lt;code&gt;NUL&lt;/code&gt; で終了します。呼び出し元は、この文字列が解放するために使用するメモリを調整する責任があります。</target>
        </trans-unit>
        <trans-unit id="c3a8d6e2eac21a8bc64fe947c356d86d63089cab" translate="yes" xml:space="preserve">
          <source>Otherwise, &lt;code&gt;/a&lt;/code&gt; behaves like the &lt;code&gt;/u&lt;/code&gt; modifier, in that case-insensitive matching uses Unicode rules; for example, &quot;k&quot; will match the Unicode &lt;code&gt;\N{KELVIN SIGN}&lt;/code&gt; under &lt;code&gt;/i&lt;/code&gt; matching, and code points in the Latin1 range, above ASCII will have Unicode rules when it comes to case-insensitive matching.</source>
          <target state="translated">それ以外の場合、 &lt;code&gt;/a&lt;/code&gt; は &lt;code&gt;/u&lt;/code&gt; 修飾子のように動作します。この場合、大文字と小文字を区別しないマッチングではUnicodeルールが使用されます。例えば、「k」はユニコード一致する &lt;code&gt;\N{KELVIN SIGN}&lt;/code&gt; 下 &lt;code&gt;/i&lt;/code&gt; Latin1の範囲内のマッチング、およびコードポイントを、上記のASCIIは、大文字と小文字を区別しないマッチングに来るときユニコードルールがあります。</target>
        </trans-unit>
        <trans-unit id="283ab41299e1a089a797efad0855b8234af41dba" translate="yes" xml:space="preserve">
          <source>Otherwise, &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; demands that a library file be included if it hasn't already been included. The file is included via the do-FILE mechanism, which is essentially just a variety of &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; with the caveat that lexical variables in the invoking script will be invisible to the included code. If it were implemented in pure Perl, it would have semantics similar to the following:</source>
          <target state="translated">それ以外の場合は、ライブラリファイルがまだインクルードされていない場合は、インクルード &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; よう要求する必要があります。ファイルはdo-FILEメカニズムを介してインクルードされます。これは基本的に、呼び出しスクリプト内のレキシカル変数がインクルードされたコードからは見えないという警告を持つさまざまな &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; です。純粋なPerlで実装された場合、次のようなセマンティクスになります。</target>
        </trans-unit>
        <trans-unit id="3d8c7636a7e3958c42214af86cef6bf8fdccad1c" translate="yes" xml:space="preserve">
          <source>Otherwise, &lt;code&gt;&lt;a href=&quot;perllocale&quot;&gt;use locale&lt;/a&gt;&lt;/code&gt; sets the default modifier to &lt;code&gt;/l&lt;/code&gt; ; and &lt;code&gt;&lt;a href=&quot;feature&quot;&gt;use feature 'unicode_strings&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use VERSION&lt;/a&gt;&lt;/code&gt; (or higher) set the default to &lt;code&gt;/u&lt;/code&gt; when not in the same scope as either &lt;code&gt;&lt;a href=&quot;perllocale&quot;&gt;use locale&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;bytes&quot;&gt;use bytes&lt;/a&gt;&lt;/code&gt;. (&lt;code&gt;&lt;a href=&quot;perllocale#Unicode-and-UTF-8&quot;&gt;use locale ':not_characters'&lt;/a&gt;&lt;/code&gt; also sets the default to &lt;code&gt;/u&lt;/code&gt; , overriding any plain &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; .) Unlike the mechanisms mentioned above, these affect operations besides regular expressions pattern matching, and so give more consistent results with other operators, including using &lt;code&gt;\U&lt;/code&gt; , &lt;code&gt;\l&lt;/code&gt; , etc. in substitution replacements.</source>
          <target state="translated">それ以外の場合は、 &lt;code&gt;&lt;a href=&quot;perllocale&quot;&gt;use locale&lt;/a&gt;&lt;/code&gt; てデフォルトの修飾子を &lt;code&gt;/l&lt;/code&gt; に設定します。そして &lt;code&gt;&lt;a href=&quot;feature&quot;&gt;use feature 'unicode_strings&lt;/a&gt;&lt;/code&gt; を使用するか &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use VERSION&lt;/a&gt;&lt;/code&gt; （またはそれ以上）を &lt;code&gt;&lt;a href=&quot;perllocale&quot;&gt;use locale&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;bytes&quot;&gt;use bytes&lt;/a&gt;&lt;/code&gt; か、バイトを使用するのと同じスコープ内にない場合は、デフォルトを &lt;code&gt;/u&lt;/code&gt; に設定します。（ &lt;code&gt;&lt;a href=&quot;perllocale#Unicode-and-UTF-8&quot;&gt;use locale ':not_characters'&lt;/a&gt;&lt;/code&gt; もデフォルトを &lt;code&gt;/u&lt;/code&gt; に設定し、単純な &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; localeを上書きします。）上記のメカニズムとは異なり、これらは正規表現のパターンマッチング以外の操作に影響を与えるため、 &lt;code&gt;\U&lt;/code&gt; 使用を含む他の演算子との一貫性のある結果が得られますU、 &lt;code&gt;\l&lt;/code&gt; 代替品の代替品など。</target>
        </trans-unit>
        <trans-unit id="931167804e0e4a4559f9438cf7fbdd7bb54023c7" translate="yes" xml:space="preserve">
          <source>Otherwise, &lt;code&gt;&lt;a href=&quot;perllocale&quot;&gt;use locale&lt;/a&gt;&lt;/code&gt; sets the default modifier to &lt;code&gt;/l&lt;/code&gt;; and &lt;code&gt;&lt;a href=&quot;feature&quot;&gt;use feature 'unicode_strings&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;perlfunc#use-VERSION&quot;&gt;use 5.012&lt;/a&gt;&lt;/code&gt; (or higher) set the default to &lt;code&gt;/u&lt;/code&gt; when not in the same scope as either &lt;code&gt;&lt;a href=&quot;perllocale&quot;&gt;use locale&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;bytes&quot;&gt;use bytes&lt;/a&gt;&lt;/code&gt;. (&lt;code&gt;&lt;a href=&quot;perllocale#Unicode-and-UTF-8&quot;&gt;use locale ':not_characters'&lt;/a&gt;&lt;/code&gt; also sets the default to &lt;code&gt;/u&lt;/code&gt;, overriding any plain &lt;code&gt;use locale&lt;/code&gt;.) Unlike the mechanisms mentioned above, these affect operations besides regular expressions pattern matching, and so give more consistent results with other operators, including using &lt;code&gt;\U&lt;/code&gt;, &lt;code&gt;\l&lt;/code&gt;,</source>
          <target state="translated">それ以外の場合、 &lt;code&gt;&lt;a href=&quot;perllocale&quot;&gt;use locale&lt;/a&gt;&lt;/code&gt; すると、デフォルトの修飾子が &lt;code&gt;/l&lt;/code&gt; に設定されます。及び &lt;code&gt;&lt;a href=&quot;feature&quot;&gt;use feature 'unicode_strings&lt;/a&gt;&lt;/code&gt; 、または &lt;code&gt;&lt;a href=&quot;perlfunc#use-VERSION&quot;&gt;use 5.012&lt;/a&gt;&lt;/code&gt; （以上）にデフォルト設定 &lt;code&gt;/u&lt;/code&gt; のいずれかとしていないときと同じ範囲で &lt;code&gt;&lt;a href=&quot;perllocale&quot;&gt;use locale&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;bytes&quot;&gt;use bytes&lt;/a&gt;&lt;/code&gt; 。 （ &lt;code&gt;&lt;a href=&quot;perllocale#Unicode-and-UTF-8&quot;&gt;use locale ':not_characters'&lt;/a&gt;&lt;/code&gt; もデフォルトを &lt;code&gt;/u&lt;/code&gt; に設定し、プレーンな &lt;code&gt;use locale&lt;/code&gt; オーバーライドします。）上記のメカニズムとは異なり、これらは正規表現のパターンマッチング以外の操作に影響するため、 &lt;code&gt;\U&lt;/code&gt; 使用を含む他の演算子との一貫性のある結果が得られますU、 &lt;code&gt;\l&lt;/code&gt; 、</target>
        </trans-unit>
        <trans-unit id="4164414c2bb6199a4fd794c5abe6619c58bbd334" translate="yes" xml:space="preserve">
          <source>Otherwise, &lt;code&gt;&lt;a href=&quot;require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; demands that a library file be included if it hasn't already been included. The file is included via the do-FILE mechanism, which is essentially just a variety of &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; with the caveat that lexical variables in the invoking script will be invisible to the included code. If it were implemented in pure Perl, it would have semantics similar to the following:</source>
          <target state="translated">それ以外の場合は、ライブラリファイルがまだインクルードされていない場合は、インクルード &lt;code&gt;&lt;a href=&quot;require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; よう要求する必要があります。ファイルはdo-FILEメカニズムを介してインクルードされます。これは基本的に、呼び出しスクリプト内のレキシカル変数がインクルードされたコードからは見えないという警告を持つさまざまな &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; です。純粋なPerlで実装された場合、次のようなセマンティクスになります。</target>
        </trans-unit>
        <trans-unit id="b7cd0e99a1d89c3f5e339c3635e7cb0b51fb95e1" translate="yes" xml:space="preserve">
          <source>Otherwise, If EXPR has the UTF8 flag set:</source>
          <target state="translated">そうでなければ、EXPRにUTF8フラグが設定されている場合。</target>
        </trans-unit>
        <trans-unit id="17eeffaf5cce6164da792d14c62e778122ced660" translate="yes" xml:space="preserve">
          <source>Otherwise, Perl quotes non-ASCII characters using an adaptation from Unicode (see &lt;a href=&quot;http://www.unicode.org/reports/tr31/&quot;&gt;http://www.unicode.org/reports/tr31/&lt;/a&gt;). The only code points that are quoted are those that have any of the Unicode properties: Pattern_Syntax, Pattern_White_Space, White_Space, Default_Ignorable_Code_Point, or General_Category=Control.</source>
          <target state="translated">それ以外の場合、PerlはUnicodeからの変更を使用して非ASCII文字を引用します（&lt;a href=&quot;http://www.unicode.org/reports/tr31/&quot;&gt;http://www.unicode.org/reports/tr31/を参照&lt;/a&gt;）。引用されているコードポイントは、Unicodeプロパティ（Pattern_Syntax、Pattern_White_Space、White_Space、Default_Ignorable_Code_Point、またはGeneral_Category = Control）のいずれかを持つコードポイントのみです。</target>
        </trans-unit>
        <trans-unit id="7879f2d907198470de2362f7adbb4e858fde9e58" translate="yes" xml:space="preserve">
          <source>Otherwise, Perl quotes non-ASCII characters using an adaptation from Unicode (see &lt;a href=&quot;https://www.unicode.org/reports/tr31/&quot;&gt;https://www.unicode.org/reports/tr31/&lt;/a&gt;). The only code points that are quoted are those that have any of the Unicode properties: Pattern_Syntax, Pattern_White_Space, White_Space, Default_Ignorable_Code_Point, or General_Category=Control.</source>
          <target state="translated">それ以外の場合、PerlはUnicodeからの適応を使用して非ASCII文字を引用します（&lt;a href=&quot;https://www.unicode.org/reports/tr31/&quot;&gt;https://www.unicode.org/reports/tr31/を&lt;/a&gt;参照）。引用されているコードポイントは、Pattern_Syntax、Pattern_White_Space、White_Space、Default_Ignorable_Code_Point、またはGeneral_Category = ControlのいずれかのUnicodeプロパティを持つコードポイントのみです。</target>
        </trans-unit>
        <trans-unit id="eab12be84f131403f93358906794f8fe5421e551" translate="yes" xml:space="preserve">
          <source>Otherwise, a character range may be specified with a hyphen, so &lt;code&gt;tr/A-J/0-9/&lt;/code&gt; does the same replacement as &lt;code&gt;tr/ACEGIBDFHJ/0246813579/&lt;/code&gt;.</source>
          <target state="translated">それ以外の場合、文字範囲はハイフンで指定される可能性があるため、 &lt;code&gt;tr/A-J/0-9/&lt;/code&gt; は &lt;code&gt;tr/ACEGIBDFHJ/0246813579/&lt;/code&gt; と同じ置換を行います。</target>
        </trans-unit>
        <trans-unit id="4b263d3e8956ad637fdb45e6619d7bb400854c44" translate="yes" xml:space="preserve">
          <source>Otherwise, a reference to a hash giving the mappings (or a reference to a hash of such hashes, explained below) is returned with the following keys and their meanings:</source>
          <target state="translated">そうでなければ、マッピングを与えるハッシュへの参照(または、以下で説明するそのようなハッシュの参照)が、以下のキーとその意味を持って返されます。</target>
        </trans-unit>
        <trans-unit id="45a4e2616d95a4fcd8dd1ea0be709f830e6a27e9" translate="yes" xml:space="preserve">
          <source>Otherwise, any string that includes a &lt;code&gt;\N{&lt;i&gt;charname&lt;/i&gt;}&lt;/code&gt; or &lt;code&gt;\N{U+&lt;i&gt;code point&lt;/i&gt;}&lt;/code&gt; will automatically have Unicode rules (see &lt;a href=&quot;perlunicode#Byte-and-Character-Semantics&quot;&gt;&quot;Byte and Character Semantics&quot; in perlunicode&lt;/a&gt;).</source>
          <target state="translated">それ以外の場合、 &lt;code&gt;\N{&lt;i&gt;charname&lt;/i&gt;}&lt;/code&gt; または &lt;code&gt;\N{U+&lt;i&gt;code point&lt;/i&gt;}&lt;/code&gt; を含む文字列には、自動的にUnicodeルールが適用されます（&lt;a href=&quot;perlunicode#Byte-and-Character-Semantics&quot;&gt;perlunicodeの「バイトと文字のセマンティクス」を参照&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="0a064c97bd76ea2baffc6a1f976852c73f8662d5" translate="yes" xml:space="preserve">
          <source>Otherwise, any string that includes a &lt;code&gt;\N{&lt;i&gt;charname&lt;/i&gt;}&lt;/code&gt; or &lt;code&gt;\N{U+&lt;i&gt;code point&lt;/i&gt;}&lt;/code&gt; will automatically have Unicode rules (see &lt;a href=&quot;perlunicode#Byte-and-Character-Semantics&quot;&gt;Byte and Character Semantics in perlunicode&lt;/a&gt;).</source>
          <target state="translated">それ以外の場合、 &lt;code&gt;\N{&lt;i&gt;charname&lt;/i&gt;}&lt;/code&gt; または &lt;code&gt;\N{U+&lt;i&gt;code point&lt;/i&gt;}&lt;/code&gt; を含む文字列には、自動的にUnicodeルールが適用されます（&lt;a href=&quot;perlunicode#Byte-and-Character-Semantics&quot;&gt;perlunicodeのバイトおよび文字のセマンティクスを参照&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="5d003c1d5c8b3dbf299902770f34abe7c1bae5fc" translate="yes" xml:space="preserve">
          <source>Otherwise, besides slowing you down, you're going to break code when the thing in the scalar is actually neither a string nor a number, but a reference:</source>
          <target state="translated">そうでなければ、スカラの中にあるものが実際には文字列でも数値でもなく、参照である場合にコードを壊すことになります。</target>
        </trans-unit>
        <trans-unit id="3c9e5051cf80855af13f05b6891812714206afb2" translate="yes" xml:space="preserve">
          <source>Otherwise, each group is taken to be a comma-separated group of items, and each item is interpreted as follows:</source>
          <target state="translated">そうでなければ、各グループはカンマで区切られた項目のグループとみなされ、各項目は次のように解釈されます。</target>
        </trans-unit>
        <trans-unit id="44c4557e33865fb576853827b17e4610d1545dd5" translate="yes" xml:space="preserve">
          <source>Otherwise, each item is interpreted as a string literal.</source>
          <target state="translated">それ以外の場合、各項目は文字列リテラルとして解釈されます。</target>
        </trans-unit>
        <trans-unit id="8160c1d9bfe0c258f726fcde8a38eac529a9399b" translate="yes" xml:space="preserve">
          <source>Otherwise, if &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; feature 'unicode_strings'&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; locale ':not_characters'&lt;/code&gt; is in effect:</source>
          <target state="translated">そうでない場合、 &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; feature 'unicode_strings'&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; locale ':not_characters'&lt;/code&gt; 有効です：</target>
        </trans-unit>
        <trans-unit id="330cfb4214259a5977f17a0c8047846f1febf41e" translate="yes" xml:space="preserve">
          <source>Otherwise, if &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; for &lt;code&gt;LC_CTYPE&lt;/code&gt; is in effect:</source>
          <target state="translated">それ以外で、 &lt;code&gt;LC_CTYPE&lt;/code&gt; に &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; を&lt;a href=&quot;use&quot;&gt;使用&lt;/a&gt;が有効な場合：</target>
        </trans-unit>
        <trans-unit id="d4602f3f28475c48ce34eb51e7d2638873250360" translate="yes" xml:space="preserve">
          <source>Otherwise, if &lt;code&gt;use feature 'unicode_strings'&lt;/code&gt; or &lt;code&gt;use locale ':not_characters'&lt;/code&gt; is in effect:</source>
          <target state="translated">それ以外の場合、 &lt;code&gt;use feature 'unicode_strings'&lt;/code&gt; &lt;code&gt;use locale ':not_characters'&lt;/code&gt; か、ロケール「：not_characters」を使用すると、次のようになります。</target>
        </trans-unit>
        <trans-unit id="670f21d823d9710e8e7613a70b81c22cc150cf45" translate="yes" xml:space="preserve">
          <source>Otherwise, if &lt;code&gt;use locale&lt;/code&gt; for &lt;code&gt;LC_CTYPE&lt;/code&gt; is in effect:</source>
          <target state="translated">それ以外の場合、 &lt;code&gt;LC_CTYPE&lt;/code&gt; に &lt;code&gt;use locale&lt;/code&gt; を使用することが有効になっている場合：</target>
        </trans-unit>
        <trans-unit id="790132dff7791f0de9ca7fa702e257d000b8a890" translate="yes" xml:space="preserve">
          <source>Otherwise, if fallback is TRUE or undefined for the first operand then see if the &lt;a href=&quot;#Magic-Autogeneration&quot;&gt;rules for autogeneration&lt;/a&gt; allows another of its operators to be used instead.</source>
          <target state="translated">それ以外の場合で、第1オペランドのフォールバックがTRUEまたは未定義の場合は&lt;a href=&quot;#Magic-Autogeneration&quot;&gt;、自動生成&lt;/a&gt;のルールで別の演算子を代わりに使用できるかどうかを確認してください。</target>
        </trans-unit>
        <trans-unit id="3ed36ee27979b8527903ca8fac2a605c006c6947" translate="yes" xml:space="preserve">
          <source>Otherwise, if neither &lt;code&gt;CARP_TRACE&lt;/code&gt; nor &lt;code&gt;$Carp::RefArgFormatter&lt;/code&gt; is available, stringify the value ignoring any overloading.</source>
          <target state="translated">それ以外の場合、 &lt;code&gt;CARP_TRACE&lt;/code&gt; も &lt;code&gt;$Carp::RefArgFormatter&lt;/code&gt; も使用できない場合は、オーバーロードを無視して値を文字列化します。</target>
        </trans-unit>
        <trans-unit id="6e9ac01d552a20832031d53cdc770abacc673932" translate="yes" xml:space="preserve">
          <source>Otherwise, if the variable &lt;code&gt;$IPC::Cmd::USE_IPC_OPEN3&lt;/code&gt; is set to true (See the &lt;a href=&quot;#Global-Variables&quot;&gt;&quot;Global Variables&quot;&lt;/a&gt; section), try to execute the command using &lt;a href=&quot;IPC::Open3&quot;&gt;IPC::Open3&lt;/a&gt;. Buffers will be available on all platforms, interactive commands will still execute cleanly, and also your verbosity settings will be adhered to nicely;</source>
          <target state="translated">それ以外の場合、変数 &lt;code&gt;$IPC::Cmd::USE_IPC_OPEN3&lt;/code&gt; がtrueに設定されている場合（&lt;a href=&quot;#Global-Variables&quot;&gt;「グローバル変数」&lt;/a&gt;セクションを参照）、&lt;a href=&quot;IPC::Open3&quot;&gt;IPC :: Open3&lt;/a&gt;を使用してコマンドを実行してみてください。バッファはすべてのプラットフォームで利用可能であり、インタラクティブコマンドは引き続きクリーンに実行され、冗長性の設定も適切に順守されます。</target>
        </trans-unit>
        <trans-unit id="2f787cbc7a032f69fffb6119d7035816b8ea11e2" translate="yes" xml:space="preserve">
          <source>Otherwise, if the variable &lt;code&gt;$IPC::Cmd::USE_IPC_OPEN3&lt;/code&gt; is set to true (See the &lt;a href=&quot;#Global-Variables&quot;&gt;Global Variables&lt;/a&gt; section), try to execute the command using &lt;a href=&quot;open3&quot;&gt;IPC::Open3&lt;/a&gt;. Buffers will be available on all platforms, interactive commands will still execute cleanly, and also your verbosity settings will be adhered to nicely;</source>
          <target state="translated">それ以外の場合で、変数 &lt;code&gt;$IPC::Cmd::USE_IPC_OPEN3&lt;/code&gt; がtrueに設定されている場合（&lt;a href=&quot;#Global-Variables&quot;&gt;グローバル変数の&lt;/a&gt;セクションを参照）、&lt;a href=&quot;open3&quot;&gt;IPC :: Open3&lt;/a&gt;を使用してコマンドを実行してみてください。バッファはすべてのプラットフォームで使用でき、対話型コマンドはクリーンに実行されます。また、詳細設定は適切に維持されます。</target>
        </trans-unit>
        <trans-unit id="fe09ff3823115671ffa501d26ad1a577bc040ded" translate="yes" xml:space="preserve">
          <source>Otherwise, if you have the &lt;code&gt;verbose&lt;/code&gt; argument set to true, we fall back to a simple &lt;code&gt;&lt;a href=&quot;../functions/system&quot;&gt;system()&lt;/a&gt;&lt;/code&gt; call. We cannot capture any buffers, but interactive commands will still work.</source>
          <target state="translated">それ以外の場合、 &lt;code&gt;verbose&lt;/code&gt; 引数をtrueに設定すると、単純な &lt;code&gt;&lt;a href=&quot;../functions/system&quot;&gt;system()&lt;/a&gt;&lt;/code&gt; 呼び出しにフォールバックします。バッファをキャプチャすることはできませんが、インタラクティブコマンドは引き続き機能します。</target>
        </trans-unit>
        <trans-unit id="e549399a32844d22acd9df22bf6f21ae7c9758db" translate="yes" xml:space="preserve">
          <source>Otherwise, if you have the &lt;code&gt;verbose&lt;/code&gt; argument set to true, we fall back to a simple &lt;code&gt;system()&lt;/code&gt; call. We cannot capture any buffers, but interactive commands will still work.</source>
          <target state="translated">それ以外の場合、 &lt;code&gt;verbose&lt;/code&gt; 引数がtrueに設定されていると、単純な &lt;code&gt;system()&lt;/code&gt; 呼び出しにフォールバックします。バッファをキャプチャすることはできませんが、インタラクティブコマンドは引き続き機能します。</target>
        </trans-unit>
        <trans-unit id="643e7b58bd1c31793f061806f8ffae4f428818df" translate="yes" xml:space="preserve">
          <source>Otherwise, import the functions into a convenient package like &lt;code&gt;HUF&lt;/code&gt; or, more general, &lt;code&gt;Aux&lt;/code&gt;</source>
          <target state="translated">それ以外の場合は、関数を &lt;code&gt;HUF&lt;/code&gt; などの便利なパッケージ、より一般的には &lt;code&gt;Aux&lt;/code&gt; にインポートします。</target>
        </trans-unit>
        <trans-unit id="ec3718eb10f9299de84d9700b81d5d9ff67ef5c1" translate="yes" xml:space="preserve">
          <source>Otherwise, it returns the index into the list of the range that contains the code point.; that is, find &lt;code&gt;i&lt;/code&gt; such that</source>
          <target state="translated">それ以外の場合は、コードポイントを含む範囲のリストへのインデックスを返します。; つまり、そのような &lt;code&gt;i&lt;/code&gt; 見つける</target>
        </trans-unit>
        <trans-unit id="0d7b4536a86a677a8d4d8e936e21d06c203d8809" translate="yes" xml:space="preserve">
          <source>Otherwise, one can &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re 'debug'&lt;/code&gt; , which has effects at compile time and run time. Since Perl 5.9.5, this pragma is lexically scoped.</source>
          <target state="translated">それ以外の場合は、コンパイル時と実行時に影響を与える &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re 'debug'&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;使用&lt;/a&gt;できます。Perl 5.9.5以降、このプラグマはレキシカルにスコープされています。</target>
        </trans-unit>
        <trans-unit id="00d1195ff76f29519909bc0580164683d66b8b4f" translate="yes" xml:space="preserve">
          <source>Otherwise, one can &lt;code&gt;use re 'debug'&lt;/code&gt;, which has effects at both compile time and run time. Since Perl 5.9.5, this pragma is lexically scoped.</source>
          <target state="translated">それ以外の場合は、コンパイル時と実行時の両方に影響を与える &lt;code&gt;use re 'debug'&lt;/code&gt; できます。Perl 5.9.5以降、このプラグマは字句スコープになっています。</target>
        </trans-unit>
        <trans-unit id="77b98fbe09f4398b923f3c8569116227b026f24a" translate="yes" xml:space="preserve">
          <source>Otherwise, perl should build fine on Linux using the mainstream compilers GCC and clang, while following the usual instructions.</source>
          <target state="translated">それ以外の場合は、Linux上でメインストリームのコンパイラであるGCCとclangを使用して、通常の指示に従ってperlをビルドすれば問題ありません。</target>
        </trans-unit>
        <trans-unit id="060d2d5af4a10b8f17638e7be02655b970ad0e80" translate="yes" xml:space="preserve">
          <source>Otherwise, the &quot;fail&quot; attribute's value should be a string denoting a method name, so that $lh-&amp;gt;maketext(</source>
          <target state="translated">それ以外の場合、「fail」属性の値はメソッド名を示す文字列である必要があるため、$ lh-&amp;gt; maketext（</target>
        </trans-unit>
        <trans-unit id="e4d6075a624f71d57d66727413b2c14075c13d0f" translate="yes" xml:space="preserve">
          <source>Otherwise, the &lt;code&gt;=&amp;gt;&lt;/code&gt; operator behaves exactly as the comma operator or list argument separator, according to context.</source>
          <target state="translated">それ以外の場合、 &lt;code&gt;=&amp;gt;&lt;/code&gt; 演算子は、コンテキストに応じて、コンマ演算子またはリスト引数セパレーターとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="cb47aa86549cdba36bf289bb197822fbc20fd362" translate="yes" xml:space="preserve">
          <source>Otherwise, the &lt;code&gt;THAW&lt;/code&gt; method is invoked with the classname as first argument, the constant string &lt;code&gt;JSON&lt;/code&gt; as second argument, and all the values from the JSON array (the values originally returned by the &lt;code&gt;FREEZE&lt;/code&gt; method) as remaining arguments.</source>
          <target state="translated">それ以外の場合、 &lt;code&gt;THAW&lt;/code&gt; メソッドは、最初の引数としてクラス名、2番目の引数として定数文字列 &lt;code&gt;JSON&lt;/code&gt; 、残りの引数としてJSON配列からのすべての値（元々 &lt;code&gt;FREEZE&lt;/code&gt; メソッドによって返された値）で呼び出されます。</target>
        </trans-unit>
        <trans-unit id="7be82a6c47fff1e3e8501496593db6d764ea711a" translate="yes" xml:space="preserve">
          <source>Otherwise, the returned script will be &lt;code&gt;SCX_Common&lt;/code&gt; iff all the code points in it are from the Inherited or Common scripts.</source>
          <target state="translated">それ以外の場合、返されるスクリプトは、その中のすべてのコードポイントが継承スクリプトまたは共通スクリプトからのものである場合、 &lt;code&gt;SCX_Common&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="153f18b9e853a33ec89bf986e0079606fc138189" translate="yes" xml:space="preserve">
          <source>Otherwise, the right side is a method name or a simple scalar variable containing either the method name or a subroutine reference, and the left side must be either an object (a blessed reference) or a class name (that is, a package name). See &lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt;.</source>
          <target state="translated">それ以外の場合、右側はメソッド名またはメソッド名またはサブルーチン参照のいずれかを含む単純なスカラー変数であり、左側はオブジェクト（blessされた参照）またはクラス名（つまり、パッケージ名）でなければなりません。&lt;a href=&quot;perlobj&quot;&gt;perlobjを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="4b107de7f6b2be83b2b4f89a391ebc89f81bc2bc" translate="yes" xml:space="preserve">
          <source>Otherwise, you can install it for your own use into your home directory like so:</source>
          <target state="translated">それ以外の場合は、ホームディレクトリにインストールしてください。</target>
        </trans-unit>
        <trans-unit id="93adaa86658b0d707fd7e6f95b2dd74b9f755925" translate="yes" xml:space="preserve">
          <source>Otherwise, you can use the File::Temp module.</source>
          <target state="translated">それ以外の場合は、File::Tempモジュールを使用することができます。</target>
        </trans-unit>
        <trans-unit id="5cbc6561d27e47c3ea5b5fa6d9459eb9629b7617" translate="yes" xml:space="preserve">
          <source>Otherwise:</source>
          <target state="translated">Otherwise:</target>
        </trans-unit>
        <trans-unit id="96b81f4b95ad77a7f2490339a2a4369277de66dd" translate="yes" xml:space="preserve">
          <source>Our best advice for verifying a person's mail address is to have them enter their address twice, just as you normally do to change a password. This usually weeds out typos. If both versions match, send mail to that address with a personal message. If you get the message back and they've followed your directions, you can be reasonably assured that it's real.</source>
          <target state="translated">人のメールアドレスを確認するための最良のアドバイスは、パスワードを変更するときに通常行うのと同じように、アドレスを2回入力してもらうことです。これにより、通常はタイプミスを排除することができます。両方のバージョンが一致した場合は、個人的なメッセージを添えてそのアドレスにメールを送ります。メッセージが返ってきて、相手があなたの指示に従っていれば、それが本物であることを合理的に保証することができます。</target>
        </trans-unit>
        <trans-unit id="a36d716e41b5fdfa6778288f0df9280c6ac367a9" translate="yes" xml:space="preserve">
          <source>Our community has a long-held belief that backward-compatibility is a virtue, even when the functionality in question is a design flaw.</source>
          <target state="translated">私たちのコミュニティには、問題の機能が設計上の欠陥である場合でも、後方互換性は美徳であるという長年の信念があります。</target>
        </trans-unit>
        <trans-unit id="aca2af8fba9b0e206c26228fbcf4f0a28aadfadd" translate="yes" xml:space="preserve">
          <source>Our constructor and accessors are not very smart. They don't check that a &lt;code&gt;$path&lt;/code&gt; is defined, nor do they check that a &lt;code&gt;$path&lt;/code&gt; is a valid filesystem path.</source>
          <target state="translated">私たちのコンストラクタとアクセサはあまり賢くありません。彼らは &lt;code&gt;$path&lt;/code&gt; が定義されていることをチェックせず、 &lt;code&gt;$path&lt;/code&gt; が有効なファイルシステムパスであることもチェックしません。</target>
        </trans-unit>
        <trans-unit id="02046a00610d7c36994a4a1cfc35b185bf538e5f" translate="yes" xml:space="preserve">
          <source>Our first extension will be very simple. When we call the routine in the extension, it will print out a well-known message and return.</source>
          <target state="translated">私たちの最初の拡張機能は非常にシンプルなものになります。この拡張機能のルーチンを呼び出すと、よく知られたメッセージを印刷して返してくれます。</target>
        </trans-unit>
        <trans-unit id="ea0a64102e29c4a40939ff09bce3a7c8b3baeb50" translate="yes" xml:space="preserve">
          <source>Our goals include, but are not limited to:</source>
          <target state="translated">私たちの目標は以下の通りですが、これに限定されるものではありません。</target>
        </trans-unit>
        <trans-unit id="dd423773d407b1a40adc986c561aae58350fc823" translate="yes" xml:space="preserve">
          <source>Our third extension will take one argument as its input, round off that value, and set the</source>
          <target state="translated">3番目の拡張機能では、引数を入力として受け取り、その値を四捨五入して</target>
        </trans-unit>
        <trans-unit id="d1eca9c1df299ed6f167227271a421fa1ed8acd5" translate="yes" xml:space="preserve">
          <source>Out of Memory!</source>
          <target state="translated">記憶の外へ!</target>
        </trans-unit>
        <trans-unit id="3683f8762692d27ca861ee310e7f506198e1b640" translate="yes" xml:space="preserve">
          <source>Out of memory during &quot;large&quot; request for %s</source>
          <target state="translated">s に対する &quot;large&quot; 要求中にメモリ不足になりました。</target>
        </trans-unit>
        <trans-unit id="d9e5936678dda2aceed24be1015efa6293b0e0e8" translate="yes" xml:space="preserve">
          <source>Out of memory during %s extend</source>
          <target state="translated">拡張 %s の間にメモリ不足になりました。</target>
        </trans-unit>
        <trans-unit id="7ec14030613e44ffed29dc12f559c548e3a5660f" translate="yes" xml:space="preserve">
          <source>Out of memory during request for %s</source>
          <target state="translated">s の要求中にメモリ不足になりました。</target>
        </trans-unit>
        <trans-unit id="6bde7919a348082e00e61af3ed9dff6775507ae0" translate="yes" xml:space="preserve">
          <source>Out of memory during ridiculously large request</source>
          <target state="translated">馬鹿げた大規模なリクエストの間に記憶を失ってしまった</target>
        </trans-unit>
        <trans-unit id="d5d4cc313c16b4c90126c4f559b708f2cc42a894" translate="yes" xml:space="preserve">
          <source>Out of memory for yacc stack</source>
          <target state="translated">yaccスタックのメモリ不足</target>
        </trans-unit>
        <trans-unit id="f2b299729eed36f28c8b65f2973bb19112f74e22" translate="yes" xml:space="preserve">
          <source>Out of memory!</source>
          <target state="translated">記憶がない!</target>
        </trans-unit>
        <trans-unit id="4bed336194a9a5c86b6a734f03b3570d2aae1a68" translate="yes" xml:space="preserve">
          <source>Output</source>
          <target state="translated">Output</target>
        </trans-unit>
        <trans-unit id="dbd857869dc8d796444978bd605ba7b7d270b4e9" translate="yes" xml:space="preserve">
          <source>Output File Glob</source>
          <target state="translated">出力ファイル グローバル</target>
        </trans-unit>
        <trans-unit id="cabfa26f9d0a36c1ea391888431d2b012edaa467" translate="yes" xml:space="preserve">
          <source>Output FileGlobs take the</source>
          <target state="translated">出力ファイルグロブは</target>
        </trans-unit>
        <trans-unit id="320abeb6fc8745d8377c151e5e59cdadfc038781" translate="yes" xml:space="preserve">
          <source>Output arguments for linking the Perl library and any extensions linked with the current Perl.</source>
          <target state="translated">Perl ライブラリと現在の Perl にリンクされている拡張機能をリンクするための引数を出力します。</target>
        </trans-unit>
        <trans-unit id="dff47f3a71d82ad60cb4cacc40b69b766de3ff9e" translate="yes" xml:space="preserve">
          <source>Output arguments for linking the Perl library and extensions to your application.</source>
          <target state="translated">Perl ライブラリと拡張機能をアプリケーションにリンクするための引数を出力します。</target>
        </trans-unit>
        <trans-unit id="d4513ca13498ae2966be4acb14ad297fe3972a7d" translate="yes" xml:space="preserve">
          <source>Output data values (when they appear as constants) using Data::Dumper. Without this option, B::Deparse will use some simple routines of its own for the same purpose. Currently, Data::Dumper is better for some kinds of data (such as complex structures with sharing and self-reference) while the built-in routines are better for others (such as odd floating-point values).</source>
          <target state="translated">Data::Dumperを使用してデータ値を出力する(それらが定数として現れる場合)。このオプションがない場合、B::Deparseは同じ目的のためにいくつかの単純なルーチンを使用する。現在のところ、Data::Dumperはある種のデータ(共有や自己参照を伴う複雑な構造体など)には適しているが、他のデータ(奇数の浮動小数点値など)には組み込みルーチンが適している。</target>
        </trans-unit>
        <trans-unit id="946f8eaf8de365c1db6707020e600be8dc0b2d32" translate="yes" xml:space="preserve">
          <source>Output from</source>
          <target state="translated">からの出力</target>
        </trans-unit>
        <trans-unit id="abe9a59babc13ece77693a18a297d71b41ea1113" translate="yes" xml:space="preserve">
          <source>Output is sent to STDOUT.</source>
          <target state="translated">出力は STDOUT に送られます。</target>
        </trans-unit>
        <trans-unit id="732197af5a245075eb093be6a52f4e49643ea019" translate="yes" xml:space="preserve">
          <source>Output produced by &lt;code&gt;POSIX::strftime()&lt;/code&gt; , which builds a formatted human-readable date/time string, is affected by the current &lt;code&gt;LC_TIME&lt;/code&gt; locale. Thus, in a French locale, the output produced by the &lt;code&gt;%B&lt;/code&gt; format element (full month name) for the first month of the year would be &quot;janvier&quot;. Here's how to get a list of long month names in the current locale:</source>
          <target state="translated">&lt;code&gt;POSIX::strftime()&lt;/code&gt; によって生成される出力は、フォーマットされた人間が読み取れる日付/時刻文字列を構築し、現在の &lt;code&gt;LC_TIME&lt;/code&gt; ロケールの影響を受けます。したがって、フランス語のロケールでは、年の最初の月の &lt;code&gt;%B&lt;/code&gt; フォーマット要素（完全な月名）によって生成される出力は「janvier」になります。現在のロケールで長い月の名前のリストを取得する方法は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="4bee70b271ab09dd6a64b5fa486979ad4fbd3481" translate="yes" xml:space="preserve">
          <source>Output produced by &lt;code&gt;POSIX::strftime()&lt;/code&gt;, which builds a formatted human-readable date/time string, is affected by the current &lt;code&gt;LC_TIME&lt;/code&gt; locale. Thus, in a French locale, the output produced by the &lt;code&gt;%B&lt;/code&gt; format element (full month name) for the first month of the year would be &quot;janvier&quot;. Here's how to get a list of long month names in the current locale:</source>
          <target state="translated">人間が読める形式の日付/時刻文字列を作成する &lt;code&gt;POSIX::strftime()&lt;/code&gt; によって生成される出力は、現在の &lt;code&gt;LC_TIME&lt;/code&gt; ロケールの影響を受けます。したがって、フランス語のロケールでは、年の最初の月の &lt;code&gt;%B&lt;/code&gt; 形式要素（完全な月の名前）によって生成される出力は「janvier」になります。現在のロケールで長い月の名前のリストを取得する方法は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="d20389c9ad811915dc895816013a0d6320f55cc3" translate="yes" xml:space="preserve">
          <source>Output record formats are declared as follows:</source>
          <target state="translated">出力レコードのフォーマットは以下のように宣言されています。</target>
        </trans-unit>
        <trans-unit id="8be7301f815488d71ba9c93bb5af631cc0c5c280" translate="yes" xml:space="preserve">
          <source>Output test preamble</source>
          <target state="translated">出力テストプリアンブル</target>
        </trans-unit>
        <trans-unit id="0cb96efb75c4bbeb8be2ce6be1b81199c7dc6523" translate="yes" xml:space="preserve">
          <source>Output the string for the given capability padded as appropriate without any parameter substitution.</source>
          <target state="translated">与えられたケイパビリティの文字列を、パラメータの置換を行わずに適切にパディングして出力します。</target>
        </trans-unit>
        <trans-unit id="5d7f9c2a16be5d20709bdb9bc3eca9e4594402e9" translate="yes" xml:space="preserve">
          <source>Output the summary for a &lt;a href=&quot;TAP::Parser::Aggregator&quot;&gt;TAP::Parser::Aggregator&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;TAP::Parser::Aggregator&quot;&gt;TAP :: Parser :: Aggregator&lt;/a&gt;の概要を出力します。</target>
        </trans-unit>
        <trans-unit id="e4a057a50b92dcf0b95865eb0847c9c19f40cf41" translate="yes" xml:space="preserve">
          <source>Output the summary for a &lt;a href=&quot;parser/aggregator&quot;&gt;TAP::Parser::Aggregator&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;parser/aggregator&quot;&gt;TAP :: Parser :: Aggregator&lt;/a&gt;の要約を出力します。</target>
        </trans-unit>
        <trans-unit id="674e1e7520d063a11e6ddc4e4cd926f65dce8e61" translate="yes" xml:space="preserve">
          <source>Output values are BigFloat objects (normalized), except for bstr() and bsstr().</source>
          <target state="translated">出力値は、bstr()と bsstr()を除き、BigFloat オブジェクト (正規化されたもの)です。</target>
        </trans-unit>
        <trans-unit id="5729e52e9619576e333d708f5b86cf53768b1b3b" translate="yes" xml:space="preserve">
          <source>Output values are BigInt objects (normalized), except for the methods which return a string (see &lt;a href=&quot;#SYNOPSIS&quot;&gt;SYNOPSIS&lt;/a&gt;).</source>
          <target state="translated">文字列を返すメソッドを除いて、出力値はBigIntオブジェクト（正規化）です（&lt;a href=&quot;#SYNOPSIS&quot;&gt;構文を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="fcbd5aaffbc088a45a5ff0e68cb0c83355ccd44e" translate="yes" xml:space="preserve">
          <source>Output values are usually Math::BigFloat objects.</source>
          <target state="translated">出力値は通常、Math::BigFloatオブジェクトです。</target>
        </trans-unit>
        <trans-unit id="2fc04fcc4619eca6ba403121d7cc8a9ccbec1964" translate="yes" xml:space="preserve">
          <source>Output values are usually Math::BigInt objects.</source>
          <target state="translated">出力値は通常、Math::BigIntオブジェクトです。</target>
        </trans-unit>
        <trans-unit id="92ee72c25cceb27be8a2caf11cbdcbd8ed211c74" translate="yes" xml:space="preserve">
          <source>Output will be indented and marked with a # so as not to interfere with test output. A newline will be put on the end if there isn't one already.</source>
          <target state="translated">出力は、テスト出力と干渉しないようにインデントされ、#でマークされます。すでに改行がない場合は、最後に改行が入ります。</target>
        </trans-unit>
        <trans-unit id="1c19ab0b423651729aa903ab380edeb2bca39734" translate="yes" xml:space="preserve">
          <source>Outputs a literal string with appropriate padding for the current terminal.</source>
          <target state="translated">現在の端末に適切なパディングを施したリテラル文字列を出力します。</target>
        </trans-unit>
        <trans-unit id="6ee76fa98a639a0ac269010b7032639b0a171647" translate="yes" xml:space="preserve">
          <source>Outputs:</source>
          <target state="translated">Outputs:</target>
        </trans-unit>
        <trans-unit id="6abc1028bb2a1e420ca27730838cb222f321647c" translate="yes" xml:space="preserve">
          <source>Outside the &lt;code&gt;&quot;unicode_eval&quot;&lt;/code&gt; feature</source>
          <target state="translated">&lt;code&gt;&quot;unicode_eval&quot;&lt;/code&gt; 機能の外側</target>
        </trans-unit>
        <trans-unit id="27666598a1e0a42575577d9b60e589550171ef9f" translate="yes" xml:space="preserve">
          <source>Outstanding Issues with Perl on QNX4</source>
          <target state="translated">QNX4 での Perl の顕著な問題</target>
        </trans-unit>
        <trans-unit id="639d7ade090cee980c6bc05e57d3d1577af16a27" translate="yes" xml:space="preserve">
          <source>Outstanding issues with perl under QNX6</source>
          <target state="translated">QNX6 での perl の顕著な問題</target>
        </trans-unit>
        <trans-unit id="bdf3ed1bb141b837355c86c7c0dd2614394d1b0b" translate="yes" xml:space="preserve">
          <source>Over this group of porters presides Larry Wall. He has the final word in what does and does not change in any of the Perl programming languages. These days, Larry spends most of his time on Perl 6, while Perl 5 is shepherded by a &quot;pumpking&quot;, a porter responsible for deciding what goes into each release and ensuring that releases happen on a regular basis.</source>
          <target state="translated">このポーターのグループを統括するのがラリー・ウォールです。彼は Perl プログラミング言語で何をして何を変えないかの最終決定権を持っています。最近では、Larryはほとんどの時間をPerl 6に費やしていますが、Perl 5は &quot;pumpking &quot;と呼ばれるポーターによって管理されていて、各リリースに何を入れるかを決定し、定期的にリリースが行われるようにしています。</target>
        </trans-unit>
        <trans-unit id="f01a3c3ab1f69d157a1311ffcf184c0aaf9bbeb7" translate="yes" xml:space="preserve">
          <source>Over this group of porters presides Larry Wall. He has the final word in what does and does not change in any of the Perl programming languages. These days, Larry spends most of his time on Raku, while Perl 5 is shepherded by a &quot;pumpking&quot;, a porter responsible for deciding what goes into each release and ensuring that releases happen on a regular basis.</source>
          <target state="translated">このポーターのグループを統括するのがラリー・ウォールです。彼は Perl プログラミング言語で何をして何を変えないかの最終決定権を持っています。最近では、Larryはほとんどの時間をRakuに費やしています。Perl 5は &quot;pumpking &quot;と呼ばれるポーターによって管理されており、各リリースに何を入れるかを決定し、定期的にリリースが行われるようにしています。</target>
        </trans-unit>
        <trans-unit id="51d8136b9d7f2ef80cdd4f2a9435372b570d80e4" translate="yes" xml:space="preserve">
          <source>Overall Zip Archive Structure</source>
          <target state="translated">全体的なZipアーカイブ構造</target>
        </trans-unit>
        <trans-unit id="26e40e3844fb4d3113244cc032fb4a908e8fcd75" translate="yes" xml:space="preserve">
          <source>Overloadable Operations</source>
          <target state="translated">オーバーロード可能な操作</target>
        </trans-unit>
        <trans-unit id="e84b5822c6a6fe546f9b6a0b29ff2b344e3aaa29" translate="yes" xml:space="preserve">
          <source>Overloaded dereference did not return a reference</source>
          <target state="translated">オーバーロードされた dereference が参照を返さなかった</target>
        </trans-unit>
        <trans-unit id="e744f0661d66287229c4049eeb19150a3eea75f4" translate="yes" xml:space="preserve">
          <source>Overloaded objects</source>
          <target state="translated">オーバーロードされたオブジェクト</target>
        </trans-unit>
        <trans-unit id="d70212c08bcbb34f156aa81782cedc45e14a9ba1" translate="yes" xml:space="preserve">
          <source>Overloaded qr did not return a REGEXP</source>
          <target state="translated">オーバーロードされたqrはREGEXPを返しませんでした。</target>
        </trans-unit>
        <trans-unit id="8156e1c1fd84040b088f9d93d136e890d2f78204" translate="yes" xml:space="preserve">
          <source>Overloaded version objects for all modern versions of Perl. This documents the internal data representation and underlying code for version.pm. See</source>
          <target state="translated">すべての最新バージョンの Perl 用のオーバーロードされたバージョンオブジェクト。これは version.pm の内部データ表現と基礎となるコードを文書化したものです。以下を参照してください。</target>
        </trans-unit>
        <trans-unit id="1bfcc9c008f8f36caec4141ab87b41cf81508a73" translate="yes" xml:space="preserve">
          <source>Overloading -$x</source>
          <target state="translated">オーバーロード -$x</target>
        </trans-unit>
        <trans-unit id="ec86957a0fb6a3d4fbc42d54b629b68b40ef88b9" translate="yes" xml:space="preserve">
          <source>Overloading Constants</source>
          <target state="translated">定数のオーバーロード</target>
        </trans-unit>
        <trans-unit id="5b6bfa02598f06ac9bdd1802bec05eb89aac965f" translate="yes" xml:space="preserve">
          <source>Overloading of an operation is inherited by derived classes</source>
          <target state="translated">操作のオーバーロードは、派生クラスの</target>
        </trans-unit>
        <trans-unit id="b399e489ae1423cf5aaa91fe52bb0ca8621359b8" translate="yes" xml:space="preserve">
          <source>Overloading respects inheritance via the @ISA hierarchy. Inheritance interacts with overloading in two ways.</source>
          <target state="translated">オーバーロードは @ISA 階層を介して継承を尊重します。継承は2つの方法でオーバーロードと相互作用します。</target>
        </trans-unit>
        <trans-unit id="d25853ad0b9aa2087c0afaa6cc2a5913f690f84b" translate="yes" xml:space="preserve">
          <source>Overridable by PREFIX</source>
          <target state="translated">PREFIX でオーバーライド可能</target>
        </trans-unit>
        <trans-unit id="d81e387c23bc24d9cbe8489666fd2a57917eb6d5" translate="yes" xml:space="preserve">
          <source>Overridden Methods</source>
          <target state="translated">オーバーライドされたメソッド</target>
        </trans-unit>
        <trans-unit id="467a685e8ada69aefbe5924cc457f1afc183b3db" translate="yes" xml:space="preserve">
          <source>Overridden by PREFIX.</source>
          <target state="translated">PREFIXでオーバーライドされます。</target>
        </trans-unit>
        <trans-unit id="8de838ce5cdf14a3fefb1762cc63935ac8b01d94" translate="yes" xml:space="preserve">
          <source>Overridden methods</source>
          <target state="translated">オーバーライドされたメソッド</target>
        </trans-unit>
        <trans-unit id="18ab6a26cd6f669c409ca6006d7c65633ebdbc28" translate="yes" xml:space="preserve">
          <source>Override Unix. Cygwin case-tolerance depends on managed mount settings and as with MsWin32 on GetVolumeInformation() $ouFsFlags == FS_CASE_SENSITIVE, indicating the case significance when comparing file specifications. Default: 1</source>
          <target state="translated">Unix をオーバーライドします。Cygwin の大文字小文字の許容度は管理されたマウント設定に依存し、MsWin32 と同様に GetVolumeInformation()の $ouFsFlags ==FS_CASE_SENSITIVE は、ファイルの仕様を比較する際に大文字小文字を区別することを示します。デフォルト:1</target>
        </trans-unit>
        <trans-unit id="f077b1208a358b397eabc441227d8df2a82e1662" translate="yes" xml:space="preserve">
          <source>Override of utility methods for OS-specific work.</source>
          <target state="translated">OS固有の作業のためのユーティリティメソッドのオーバーライド。</target>
        </trans-unit>
        <trans-unit id="b812a67f3c81aa251e9cf3aa48fd3d76b409d29b" translate="yes" xml:space="preserve">
          <source>Override some of the slower, portable commands with Windows specific ones.</source>
          <target state="translated">Windows固有のもので、いくつかの遅い、ポータブルなコマンドをオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="d0c9857b122b80fa1b6a56bf1ebf37d184d83e68" translate="yes" xml:space="preserve">
          <source>Override the *DEFINE_VERSION macros with VMS semantics. Translate the MAKEMAKER filepath to VMS style.</source>
          <target state="translated">VMSのセマンティクスで*DEFINE_VERSIONマクロをオーバーライドします。MAKEMAKERファイルパスをVMSスタイルに変換します。</target>
        </trans-unit>
        <trans-unit id="9e106e8d2f26a8506c045db84481cb6d80e276c4" translate="yes" xml:space="preserve">
          <source>Override the built-in hex() method with a version that can handle big integers. This overrides it by exporting it to the current package. Under Perl v5.10.0 and higher, this is not so necessary, as hex() is lexically overridden in the current scope whenever the bigint pragma is active.</source>
          <target state="translated">ビルトインの hex()メソッドを、大きな整数を扱えるバージョンでオーバーライドします。これは、現在のパッケージにエクスポートすることで上書きします。Perl v5.10.0 以降では、bigint プラグマがアクティブなときはいつでも現在のスコープ内で hex()は語彙的にオーバーライドされるので、これはそれほど必要ではありません。</target>
        </trans-unit>
        <trans-unit id="db1255a81faff303e8d6e7d3b798d7ce08d1d0bd" translate="yes" xml:space="preserve">
          <source>Override the built-in hex() method with a version that can handle big numbers. This overrides it by exporting it to the current package. Under Perl v5.10.0 and higher, this is not so necessary, as hex() is lexically overridden in the current scope whenever the bignum pragma is active.</source>
          <target state="translated">ビルトインの hex()メソッドを、大きな数値を扱えるバージョンでオーバーライドします。これは、現在のパッケージにエクスポートすることで上書きします。Perl v5.10.0 以降では、bignum プラグマがアクティブなときはいつでも現在のスコープで hex()は語彙的にオーバーライドされるので、これはそれほど必要ではありません。</target>
        </trans-unit>
        <trans-unit id="912f152c86b0fefa5f757189a8d412dd86bae7f1" translate="yes" xml:space="preserve">
          <source>Override the built-in hex() method with a version that can handle big numbers. This overrides it by exporting it to the current package. Under Perl v5.10.0 and higher, this is not so necessary, as hex() is lexically overridden in the current scope whenever the bigrat pragma is active.</source>
          <target state="translated">ビルトインの hex()メソッドを、大きな数値を扱えるバージョンでオーバーライドします。これは、現在のパッケージにエクスポートすることで上書きします。Perl v5.10.0 以降では、bigrat プラグマがアクティブなときはいつでも現在のスコープ内で hex()は語彙的にオーバーライドされるので、これはそれほど必要ありません。</target>
        </trans-unit>
        <trans-unit id="517fe3ab934c9baa1bbd4819a553d1bd788ad3b6" translate="yes" xml:space="preserve">
          <source>Override the built-in oct() method with a version that can handle big integers. This overrides it by exporting it to the current package. Under Perl v5.10.0 and higher, this is not so necessary, as oct() is lexically overridden in the current scope whenever the bigint pragma is active.</source>
          <target state="translated">組み込みの oct()メソッドを、大きな整数を扱えるバージョンでオーバーライドします。これは、現在のパッケージにエクスポートすることでオーバーライドします。Perl v5.10.0 以降では、 bigint プラグマがアクティブなときはいつでも現在のスコープで oct()は語彙的にオーバーライドされるので、これはそれほど必要ありません。</target>
        </trans-unit>
        <trans-unit id="4bed448b71cf61598fc58c7dedb86dd2c891a406" translate="yes" xml:space="preserve">
          <source>Override the built-in oct() method with a version that can handle big numbers. This overrides it by exporting it to the current package. Under Perl v5.10.0 and higher, this is not so necessary, as oct() is lexically overridden in the current scope whenever the bigint pragma is active.</source>
          <target state="translated">組み込みの oct()メソッドを、大きな数値を扱えるバージョンでオーバーライドします。これは、現在のパッケージにエクスポートすることでオーバーライドします。Perl v5.10.0 以降では、 bigint プラグマがアクティブなときはいつでも現在のスコープ内で oct()は語彙的にオーバーライドされるので、これはそれほど必要ありません。</target>
        </trans-unit>
        <trans-unit id="ed5c7e59eb86a96d19a5d320701f2eeae30a9f3d" translate="yes" xml:space="preserve">
          <source>Override the built-in oct() method with a version that can handle big numbers. This overrides it by exporting it to the current package. Under Perl v5.10.0 and higher, this is not so necessary, as oct() is lexically overridden in the current scope whenever the bigrat pragma is active.</source>
          <target state="translated">組み込みの oct()メソッドを、大きな数値を扱えるバージョンでオーバーライドします。これは、現在のパッケージにエクスポートすることでオーバーライドします。Perl v5.10.0 以降では、bigrat プラグマがアクティブなときはいつでも現在のスコープで oct()は語彙的にオーバーライドされるので、これはそれほど必要ありません。</target>
        </trans-unit>
        <trans-unit id="a84161f7c8651d9dbb9584e62df4eb94978336a4" translate="yes" xml:space="preserve">
          <source>Override the default link and compile tools.</source>
          <target state="translated">デフォルトのリンクとコンパイルツールをオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="dbaba4039682ad6702589659d29f6691bbd07fea" translate="yes" xml:space="preserve">
          <source>Override to fixup -o flags for MSVC.</source>
          <target state="translated">MSVC の -o フラグを修正するためのオーバーライド。</target>
        </trans-unit>
        <trans-unit id="db0b278d3c4a2afd3b5e4b52949b9fc3f78c7857" translate="yes" xml:space="preserve">
          <source>Override to fixup -o flags.</source>
          <target state="translated">o フラグを修正するためにオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="2e3576b163731229acda47e87e9f9b059e9f4a5b" translate="yes" xml:space="preserve">
          <source>Overriden Methods</source>
          <target state="translated">オーバーライドメソッド</target>
        </trans-unit>
        <trans-unit id="88ddbf620473fa127baa14c63b6b03e218cdb828" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;Carp&lt;/code&gt; 's use of &lt;code&gt;@ISA&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;Carp&lt;/code&gt; の &lt;code&gt;@ISA&lt;/code&gt; の使用をオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="3949b2ca1d81db123ef7219f4e50f69008152a66" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;Carp&lt;/code&gt;'s use of &lt;code&gt;@ISA&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Carp&lt;/code&gt; による &lt;code&gt;@ISA&lt;/code&gt; の使用をオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="0f558940f2808fb5910806545f490b364bd4fae6" translate="yes" xml:space="preserve">
          <source>Overriding *AutoLoader*'s AUTOLOAD Subroutine</source>
          <target state="translated">AutoLoader*のAUTOLOADサブルーチンのオーバーライド</target>
        </trans-unit>
        <trans-unit id="ad165e83687c2095d41c401a84a596f21c23d403" translate="yes" xml:space="preserve">
          <source>Overriding &lt;b&gt;AutoLoader&lt;/b&gt;'s AUTOLOAD Subroutine</source>
          <target state="translated">&lt;b&gt;AutoLoader&lt;/b&gt;のAUTOLOADサブルーチンのオーバーライド</target>
        </trans-unit>
        <trans-unit id="e1f1fa67c6f2de2b65178ecba184df6b7ab89795" translate="yes" xml:space="preserve">
          <source>Overriding AutoLoader's AUTOLOAD Subroutine</source>
          <target state="translated">オートローダーのAUTOLOADサブルーチンのオーバーライド</target>
        </trans-unit>
        <trans-unit id="13e4e6c170816454742428861af9c648b7770476" translate="yes" xml:space="preserve">
          <source>Overriding Built-in Functions</source>
          <target state="translated">内蔵関数のオーバーライド</target>
        </trans-unit>
        <trans-unit id="0473324f13f95874cc801aec0b7f96d36dd3f4de" translate="yes" xml:space="preserve">
          <source>Overriding MakeMaker Methods</source>
          <target state="translated">MakeMaker のメソッドをオーバーライドする</target>
        </trans-unit>
        <trans-unit id="482ae15aa0b68d06eb2611dc11eca01690eb606e" translate="yes" xml:space="preserve">
          <source>Overriding a behavior already tailored by &lt;code&gt;locale&lt;/code&gt; is disallowed if such a tailoring is passed to &lt;code&gt;new()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;locale&lt;/code&gt; によってすでに調整されている動作をオーバーライドすることは、そのような調整が &lt;code&gt;new()&lt;/code&gt; に渡される場合は許可されません。</target>
        </trans-unit>
        <trans-unit id="0acaee9a4f5701cbf8a1ce4705506d5d65f7e379" translate="yes" xml:space="preserve">
          <source>Overriding globals</source>
          <target state="translated">グローバルのオーバーライド</target>
        </trans-unit>
        <trans-unit id="8975db571ede7ae4ff4258fa3aa601af32455235" translate="yes" xml:space="preserve">
          <source>Overriding may be done only by importing the name from a module at compile time--ordinary predeclaration isn't good enough. However, the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; subs&lt;/code&gt; pragma lets you, in effect, predeclare subs via the import syntax, and these names may then override built-in ones:</source>
          <target state="translated">オーバーライドは、コンパイル時にモジュールから名前をインポートすることによってのみ実行できます。通常の事前宣言では十分ではありません。ただし、 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; subs&lt;/code&gt; プラグマを使用すると、実質的に、インポート構文を介してsubsを事前宣言でき、これらの名前は組み込みの名前をオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="a21474f2bb6c2cf1c58c924ec851c58080010483" translate="yes" xml:space="preserve">
          <source>Overriding may be done only by importing the name from a module at compile time--ordinary predeclaration isn't good enough. However, the &lt;code&gt;use subs&lt;/code&gt; pragma lets you, in effect, predeclare subs via the import syntax, and these names may then override built-in ones:</source>
          <target state="translated">オーバーライドは、コンパイル時にモジュールから名前をインポートすることによってのみ実行できます。通常の事前宣言では不十分です。ただし、 &lt;code&gt;use subs&lt;/code&gt; プラグマを使用すると、事実上、インポート構文を介してsubを事前に宣言できます。これらの名前は、組み込みの名前をオーバーライドする場合があります。</target>
        </trans-unit>
        <trans-unit id="304bd31d39d40b4f3f802e079ce7c0e189c81a09" translate="yes" xml:space="preserve">
          <source>Overriding methods and method resolution</source>
          <target state="translated">メソッドのオーバーライドとメソッドの解決</target>
        </trans-unit>
        <trans-unit id="ffad1af53b33d79810d2c0405dc312e1ae6928cd" translate="yes" xml:space="preserve">
          <source>Overstruck text is best viewed by page-at-a-time programs that take advantage of the terminal's &lt;b&gt;stand-out&lt;/b&gt; and</source>
          <target state="translated">重ね打ちされたテキストは、端末の&lt;b&gt;目立ちやすさ&lt;/b&gt;と</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">Overview</target>
        </trans-unit>
        <trans-unit id="474a898053a8dcfc6a65ec3561f19f87176b5898" translate="yes" xml:space="preserve">
          <source>Overview of the problem</source>
          <target state="translated">問題の概要</target>
        </trans-unit>
        <trans-unit id="a667f27c725ca15906891f040729f4c87d88f70d" translate="yes" xml:space="preserve">
          <source>Owain G. Ainsworth &amp;lt;oga@nicotinebsd.org&amp;gt;</source>
          <target state="translated">Owain G. Ainsworth &amp;lt;oga@nicotinebsd.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="c60e213a631e39c27535490386ac8689198d8d68" translate="yes" xml:space="preserve">
          <source>Owing to an oversight, this is not currently exported by default, or as part of the &lt;code&gt;:math_h_c99&lt;/code&gt; export tag; importing it must therefore be done by explicit name.</source>
          <target state="translated">見落としがあるため、これは現在デフォルトでエクスポートされていないか、 &lt;code&gt;:math_h_c99&lt;/code&gt; エクスポートタグの一部としてエクスポートされていません。したがって、インポートは明示的な名前で行う必要があります。</target>
        </trans-unit>
        <trans-unit id="d74ca77dfe8fe7ee5b3ab9c3eda143868260591f" translate="yes" xml:space="preserve">
          <source>Ownership of directories that already exist will not be changed.</source>
          <target state="translated">既に存在するディレクトリの所有権は変更されません。</target>
        </trans-unit>
        <trans-unit id="a66e34441ac56e5f8863c6bb5ce6bb649c646c79" translate="yes" xml:space="preserve">
          <source>Ownwership of directories that already exist will not be changed.</source>
          <target state="translated">既に存在するディレクトリの所有権は変更されません。</target>
        </trans-unit>
        <trans-unit id="c90ae34a7bbf5b215bf702e4f15a56d1024f60a9" translate="yes" xml:space="preserve">
          <source>Oxford English Dictionary</source>
          <target state="translated">オックスフォード英語辞典</target>
        </trans-unit>
        <trans-unit id="511993d3c99719e38a6779073019dacd7178ddb9" translate="yes" xml:space="preserve">
          <source>P</source>
          <target state="translated">P</target>
        </trans-unit>
        <trans-unit id="a5574a0609f5eaeb5946f32c91fbd5d565ba5c54" translate="yes" xml:space="preserve">
          <source>PA-RISC</source>
          <target state="translated">PA-RISC</target>
        </trans-unit>
        <trans-unit id="b18e26c5d2442635220100cdbb4632471aa32d8c" translate="yes" xml:space="preserve">
          <source>PA-RISC 1.0</source>
          <target state="translated">PA-RISC 1.0</target>
        </trans-unit>
        <trans-unit id="eb216919e4e2e5c1a44316f9467b8ca7837ec3cc" translate="yes" xml:space="preserve">
          <source>PA-RISC 1.1</source>
          <target state="translated">PA-RISC 1.1</target>
        </trans-unit>
        <trans-unit id="db7ada64f0dcd494ae2a9fde52058fe389930fc0" translate="yes" xml:space="preserve">
          <source>PA-RISC 2.0</source>
          <target state="translated">PA-RISC2.</target>
        </trans-unit>
        <trans-unit id="a671d1a90e2150d11e2b1f6323c00da36fa35704" translate="yes" xml:space="preserve">
          <source>PA-RISC and Itanium object files are not interchangeable. Although you may be able to use ar to create an archive library of PA-RISC object files on an Itanium system, you cannot link against it using an Itanium link editor.</source>
          <target state="translated">PA-RISCとItaniumのオブジェクトファイルは互換性がありません。Itanium システム上に PA-RISC オブジェクトファイルのアーカイブライブラリを作成するために ar を使用することはできますが、Itanium リンクエディタを使用して PA-RISC にリンクすることはできません。</target>
        </trans-unit>
        <trans-unit id="6e778bd20eb20ec966352f3796d7c0931f2a1b52" translate="yes" xml:space="preserve">
          <source>PACKAGE</source>
          <target state="translated">PACKAGE</target>
        </trans-unit>
        <trans-unit id="3b24034394fd782a09f93e8a5e6a19e433f5c0b7" translate="yes" xml:space="preserve">
          <source>PACKAGE VARIABLES</source>
          <target state="translated">パッケージバリエーション</target>
        </trans-unit>
        <trans-unit id="f5757bc942837b06dcea162133be87f1399efdb1" translate="yes" xml:space="preserve">
          <source>PAD-RELATED CLASSES</source>
          <target state="translated">パッド関連クラス</target>
        </trans-unit>
        <trans-unit id="5256fd77701bc17fcebded5655a52af6c191f7ca" translate="yes" xml:space="preserve">
          <source>PADDING OF BASE64 DIGESTS</source>
          <target state="translated">ベース64ダイジェストのパディング</target>
        </trans-unit>
        <trans-unit id="8e1e111672b0ce3d9f0e518dd5449212aca7598e" translate="yes" xml:space="preserve">
          <source>PADLIST</source>
          <target state="translated">PADLIST</target>
        </trans-unit>
        <trans-unit id="0ce409d28d32dbec9531236330741cb2b0382be8" translate="yes" xml:space="preserve">
          <source>PAD_BASE_SV</source>
          <target state="translated">PAD_BASE_SV</target>
        </trans-unit>
        <trans-unit id="1dd6bf7080fa805005c8b86c4472f603cc407daf" translate="yes" xml:space="preserve">
          <source>PAD_CLONE_VARS</source>
          <target state="translated">PAD_CLONE_VARS</target>
        </trans-unit>
        <trans-unit id="fbc8d6645c28f09bf9c399e172982a976775b3b7" translate="yes" xml:space="preserve">
          <source>PAD_COMPNAME_FLAGS</source>
          <target state="translated">PAD_COMPNAME_FLAGS</target>
        </trans-unit>
        <trans-unit id="e7b5502bf737c86090649593776e2047c49b365d" translate="yes" xml:space="preserve">
          <source>PAD_COMPNAME_GEN</source>
          <target state="translated">PAD_COMPNAME_GEN</target>
        </trans-unit>
        <trans-unit id="d140ea05f9d1a2ede0f05f8adc47815ba5d43635" translate="yes" xml:space="preserve">
          <source>PAD_COMPNAME_GEN_set</source>
          <target state="translated">PAD_COMPNAME_GEN_set</target>
        </trans-unit>
        <trans-unit id="8a0949ea3502b36bc73ae334a1a192a1abf0d28a" translate="yes" xml:space="preserve">
          <source>PAD_COMPNAME_OURSTASH</source>
          <target state="translated">PAD_COMPNAME_OURSTASH</target>
        </trans-unit>
        <trans-unit id="89d1312d8accb0e138a65db72bec0e9e2b847413" translate="yes" xml:space="preserve">
          <source>PAD_COMPNAME_PV</source>
          <target state="translated">PAD_COMPNAME_PV</target>
        </trans-unit>
        <trans-unit id="19c6c63f50fcfdb722d18abba18199ae6e535451" translate="yes" xml:space="preserve">
          <source>PAD_COMPNAME_TYPE</source>
          <target state="translated">PAD_COMPNAME_TYPE</target>
        </trans-unit>
        <trans-unit id="f8e6685aa38c7a40e0a331cbdbcc3266610fbad1" translate="yes" xml:space="preserve">
          <source>PAD_RESTORE_LOCAL</source>
          <target state="translated">PAD_RESTORE_LOCAL</target>
        </trans-unit>
        <trans-unit id="fcd03c31f330472cd421430dab01ec46f08ae95b" translate="yes" xml:space="preserve">
          <source>PAD_SAVE_LOCAL</source>
          <target state="translated">PAD_SAVE_LOCAL</target>
        </trans-unit>
        <trans-unit id="a3247075564fed14fb2b42b33c87bf7d088ff20f" translate="yes" xml:space="preserve">
          <source>PAD_SAVE_SETNULLPAD</source>
          <target state="translated">PAD_SAVE_SETNULLPAD</target>
        </trans-unit>
        <trans-unit id="1ca72802f6d51a0188211954da25920eb515a2f4" translate="yes" xml:space="preserve">
          <source>PAD_SETSV</source>
          <target state="translated">PAD_SETSV</target>
        </trans-unit>
        <trans-unit id="0750242dda622bdb5ca6b110782aa410864badfb" translate="yes" xml:space="preserve">
          <source>PAD_SET_CUR</source>
          <target state="translated">PAD_SET_CUR</target>
        </trans-unit>
        <trans-unit id="24f4e3660ca497788bdfe4d0a0208296341218d9" translate="yes" xml:space="preserve">
          <source>PAD_SET_CUR_NOSAVE</source>
          <target state="translated">PAD_SET_CUR_NOSAVE</target>
        </trans-unit>
        <trans-unit id="d5ecf996a006e53f3dd0837338653e8ff2d758a7" translate="yes" xml:space="preserve">
          <source>PAD_SV</source>
          <target state="translated">PAD_SV</target>
        </trans-unit>
        <trans-unit id="b3c586cfb3f9f37bd2687f7d27b0c4ec5363faf0" translate="yes" xml:space="preserve">
          <source>PAD_SVl</source>
          <target state="translated">PAD_SVl</target>
        </trans-unit>
        <trans-unit id="618c7535011f9df31cd5ffb3ee3e00fec9a8775e" translate="yes" xml:space="preserve">
          <source>PAGE</source>
          <target state="translated">PAGE</target>
        </trans-unit>
        <trans-unit id="c228f374ba11e28d1b0cd8b37df2b5ef7732a7c4" translate="yes" xml:space="preserve">
          <source>PAGER FORMATTING</source>
          <target state="translated">ページの書式設定</target>
        </trans-unit>
        <trans-unit id="0166d0dbf8c835c2fbd578bc987f7a6752b31107" translate="yes" xml:space="preserve">
          <source>PAGE_LEN</source>
          <target state="translated">PAGE_LEN</target>
        </trans-unit>
        <trans-unit id="92903ba42bddaecab9133139d6657d1d38035291" translate="yes" xml:space="preserve">
          <source>PAR - optional module which can treat &lt;code&gt;.par&lt;/code&gt; files as Perl libraries.</source>
          <target state="translated">PAR- &lt;code&gt;.par&lt;/code&gt; ファイルをPerlライブラリとして扱うことができるオプションのモジュール。</target>
        </trans-unit>
        <trans-unit id="9ecb61ab183eddb8d15e9d3e617cb668532eb041" translate="yes" xml:space="preserve">
          <source>PARAM</source>
          <target state="translated">PARAM</target>
        </trans-unit>
        <trans-unit id="c54566cca65074a4fcc88db222b5b0f12d630d70" translate="yes" xml:space="preserve">
          <source>PARENT_FAKELEX_FLAGS</source>
          <target state="translated">PARENT_FAKELEX_FLAGS</target>
        </trans-unit>
        <trans-unit id="a84edc01e312471c2b5c8726f460b2477b4ac2d9" translate="yes" xml:space="preserve">
          <source>PARENT_PAD_INDEX</source>
          <target state="translated">PARENT_PAD_INDEX</target>
        </trans-unit>
        <trans-unit id="8aa67c70b62b88425c0805fe7ee18784ade05280" translate="yes" xml:space="preserve">
          <source>PARNO</source>
          <target state="translated">PARNO</target>
        </trans-unit>
        <trans-unit id="da04370db03e1f163c0a4defb521b34eb9178ab4" translate="yes" xml:space="preserve">
          <source>PARSE</source>
          <target state="translated">PARSE</target>
        </trans-unit>
        <trans-unit id="92d523adbbf0ce911b68f042510b7a4ebf50c3b0" translate="yes" xml:space="preserve">
          <source>PARSING AND COMPARING VERSIONS</source>
          <target state="translated">バージョンの分割と比較</target>
        </trans-unit>
        <trans-unit id="d76071dc758ed7e342554ae65110a5912fa75887" translate="yes" xml:space="preserve">
          <source>PARSING OPTIONS</source>
          <target state="translated">パーシングオプション</target>
        </trans-unit>
        <trans-unit id="65fdaa7c1e0213fa66973f7e18a35f5da6810356" translate="yes" xml:space="preserve">
          <source>PASE</source>
          <target state="translated">PASE</target>
        </trans-unit>
        <trans-unit id="2f27cfe52f75001eb8b13ac0b269b4d71a7d0eff" translate="yes" xml:space="preserve">
          <source>PATCHING</source>
          <target state="translated">PATCHING</target>
        </trans-unit>
        <trans-unit id="b991d9932b6d73d6525c72b0344ecaf0a6e70612" translate="yes" xml:space="preserve">
          <source>PATCHING PERL</source>
          <target state="translated">PATCHING PERL</target>
        </trans-unit>
        <trans-unit id="09bd6a353a7bb8a33e37cfee71ada9fc9ce37d89" translate="yes" xml:space="preserve">
          <source>PATH</source>
          <target state="translated">PATH</target>
        </trans-unit>
        <trans-unit id="f0bb075725362b9ff74d654f64b4ce888ae50f10" translate="yes" xml:space="preserve">
          <source>PATHNAME</source>
          <target state="translated">PATHNAME</target>
        </trans-unit>
        <trans-unit id="97000043438fbbe1d01d067a89cdcef2f0e8c14c" translate="yes" xml:space="preserve">
          <source>PATHNAME CONSTANTS</source>
          <target state="translated">パス名定数</target>
        </trans-unit>
        <trans-unit id="84c16d6a502dba6bf2d3fee213424d5d6bfb7b62" translate="yes" xml:space="preserve">
          <source>PATTERN</source>
          <target state="translated">PATTERN</target>
        </trans-unit>
        <trans-unit id="9935dfb5a4d397598918b95cafea8828afe115be" translate="yes" xml:space="preserve">
          <source>PAUSE</source>
          <target state="translated">PAUSE</target>
        </trans-unit>
        <trans-unit id="dac71a6819627d348c31a24b525d7fa382bddadb" translate="yes" xml:space="preserve">
          <source>PCRE/Python Support</source>
          <target state="translated">PCRE/Python サポート</target>
        </trans-unit>
        <trans-unit id="d613d88cb2d86f484f6f82d44ac1fc60722abe20" translate="yes" xml:space="preserve">
          <source>PDF</source>
          <target state="translated">PDF</target>
        </trans-unit>
        <trans-unit id="436c8c99adb6d9787c7e786ec3908d3f74c612d9" translate="yes" xml:space="preserve">
          <source>PDF files</source>
          <target state="translated">ピーディーエフファイル</target>
        </trans-unit>
        <trans-unit id="915757bff8531e4abe328c07c4e18e2cac843c2b" translate="yes" xml:space="preserve">
          <source>PER CONTEXT</source>
          <target state="translated">文脈に応じて</target>
        </trans-unit>
        <trans-unit id="4848921871eb3f43c262cbe87ba21c368a1cccf3" translate="yes" xml:space="preserve">
          <source>PER HUB</source>
          <target state="translated">パーハブ</target>
        </trans-unit>
        <trans-unit id="aa3411cdbe71b0a21abc88a3963b8403693bbc1b" translate="yes" xml:space="preserve">
          <source>PERFORMANCE</source>
          <target state="translated">PERFORMANCE</target>
        </trans-unit>
        <trans-unit id="39f8a0e85bb1878c9aeced92ae812526a99cca76" translate="yes" xml:space="preserve">
          <source>PERL</source>
          <target state="translated">PERL</target>
        </trans-unit>
        <trans-unit id="9c0b8df191c44800f2c74c7e9a02a85037490e16" translate="yes" xml:space="preserve">
          <source>PERL -&amp;gt; JSON</source>
          <target state="translated">PERL -&amp;gt; JSON</target>
        </trans-unit>
        <trans-unit id="a039af5d518d5df4edecd9355e8862ee9074cf7a" translate="yes" xml:space="preserve">
          <source>PERL 5 PORTERS</source>
          <target state="translated">PERL 5ポーターズ</target>
        </trans-unit>
        <trans-unit id="7e824f1cd9308ba64d688a71fcc968d2bf452aa4" translate="yes" xml:space="preserve">
          <source>PERL 5.8.0 BROKEN IN AMIGAOS</source>
          <target state="translated">PERL 5.8.0 BROKEN IN AMIGAOS</target>
        </trans-unit>
        <trans-unit id="2ad8575bde04df8f3c3405e287595936fe2f6b74" translate="yes" xml:space="preserve">
          <source>PERL OO SYSTEMS</source>
          <target state="translated">パールオーシステム</target>
        </trans-unit>
        <trans-unit id="38707bbc3a64c94dc99f9b43d452049c22f48409" translate="yes" xml:space="preserve">
          <source>PERL.C</source>
          <target state="translated">PERL.C</target>
        </trans-unit>
        <trans-unit id="c4ef015b035531ca89e73efd9974dbb427096dd2" translate="yes" xml:space="preserve">
          <source>PERL.EXE</source>
          <target state="translated">PERL.EXE</target>
        </trans-unit>
        <trans-unit id="0f9466733223ddd1a05cbf29bb33f0f356cbffcb" translate="yes" xml:space="preserve">
          <source>PERL.H</source>
          <target state="translated">PERL.H</target>
        </trans-unit>
        <trans-unit id="4a444e7468c0f9cc5930e13403ef14557c1dcc70" translate="yes" xml:space="preserve">
          <source>PERL.OBJ</source>
          <target state="translated">PERL.OBJ</target>
        </trans-unit>
        <trans-unit id="944f396b8928d9e2fa1ea171412c85f9df865b40" translate="yes" xml:space="preserve">
          <source>PERL5DB</source>
          <target state="translated">PERL5DB</target>
        </trans-unit>
        <trans-unit id="6455e9f03b579444f6cfac53ed072f02d7c0994d" translate="yes" xml:space="preserve">
          <source>PERL5DB_THREADED</source>
          <target state="translated">PERL5DB_THREADED</target>
        </trans-unit>
        <trans-unit id="4c5b3b626c81cce3f3eeccca7e4896275128f492" translate="yes" xml:space="preserve">
          <source>PERL5LIB</source>
          <target state="translated">PERL5LIB</target>
        </trans-unit>
        <trans-unit id="52d59ca4a1575427154cd0921e5e7f03fc93f8dc" translate="yes" xml:space="preserve">
          <source>PERL5LIB and PERLLIB</source>
          <target state="translated">PERL5LIBとPERLIB</target>
        </trans-unit>
        <trans-unit id="c078e36bc5cea9a087f1b9b98b102cc8a8d3e695" translate="yes" xml:space="preserve">
          <source>PERL5OPT</source>
          <target state="translated">PERL5OPT</target>
        </trans-unit>
        <trans-unit id="619574f5aa9841dfd4610a1229ccc167d3e48a29" translate="yes" xml:space="preserve">
          <source>PERL5SHELL (specific to the Win32 port)</source>
          <target state="translated">PERL5SHELL (Win32 ポート専用)</target>
        </trans-unit>
        <trans-unit id="f0a75fb949dd06b3f9081176db6123371bfe89bd" translate="yes" xml:space="preserve">
          <source>PERLDOCS</source>
          <target state="translated">PERLDOCS</target>
        </trans-unit>
        <trans-unit id="fb97baf13455c0c684ce0367c946be2a6d6c95a2" translate="yes" xml:space="preserve">
          <source>PERLIO</source>
          <target state="translated">PERLIO</target>
        </trans-unit>
        <trans-unit id="3011359944ea1c34bc93241f383f59af74070b23" translate="yes" xml:space="preserve">
          <source>PERLIO_DEBUG</source>
          <target state="translated">PERLIO_DEBUG</target>
        </trans-unit>
        <trans-unit id="e8397c4263b2974350f5b2fda0a443612e97b851" translate="yes" xml:space="preserve">
          <source>PERLIO_F_APPEND</source>
          <target state="translated">PERLIO_F_APPEND</target>
        </trans-unit>
        <trans-unit id="6cb52efd50cd9f356f4fd0a530d8d5ab8b752b07" translate="yes" xml:space="preserve">
          <source>PERLIO_F_CANREAD</source>
          <target state="translated">PERLIO_F_CANREAD</target>
        </trans-unit>
        <trans-unit id="4799d1e51e77a5fc870a645110780fb65f76ff60" translate="yes" xml:space="preserve">
          <source>PERLIO_F_CANWRITE</source>
          <target state="translated">PERLIO_F_CANWRITE</target>
        </trans-unit>
        <trans-unit id="7434717d13cd61a03c2e8ee80b7db2d17130c368" translate="yes" xml:space="preserve">
          <source>PERLIO_F_CRLF</source>
          <target state="translated">PERLIO_F_CRLF</target>
        </trans-unit>
        <trans-unit id="71ab849f32289320013f5cb484e8b67dab735ec2" translate="yes" xml:space="preserve">
          <source>PERLIO_F_EOF</source>
          <target state="translated">PERLIO_F_EOF</target>
        </trans-unit>
        <trans-unit id="d7a3952a8faa6d23dd60ff13228e1e9052bbfe93" translate="yes" xml:space="preserve">
          <source>PERLIO_F_ERROR</source>
          <target state="translated">PERLIO_F_ERROR</target>
        </trans-unit>
        <trans-unit id="2f957fc5bb099475f1911cb9c5c8002dd513b159" translate="yes" xml:space="preserve">
          <source>PERLIO_F_FASTGETS</source>
          <target state="translated">PERLIO_F_FASTGETS</target>
        </trans-unit>
        <trans-unit id="175b76d5a84c87e2b2c16342d73312d02a67dfed" translate="yes" xml:space="preserve">
          <source>PERLIO_F_LINEBUF</source>
          <target state="translated">PERLIO_F_LINEBUF</target>
        </trans-unit>
        <trans-unit id="c7a2c9991f5c2a58a0a2e49aa49fc3b6922fb2eb" translate="yes" xml:space="preserve">
          <source>PERLIO_F_OPEN</source>
          <target state="translated">PERLIO_F_OPEN</target>
        </trans-unit>
        <trans-unit id="9935787f8f0421af5ecf5fd2ecf4b4a5ffd56aa4" translate="yes" xml:space="preserve">
          <source>PERLIO_F_RDBUF</source>
          <target state="translated">PERLIO_F_RDBUF</target>
        </trans-unit>
        <trans-unit id="2480728353b390a304780481e01f4bfaa7829afd" translate="yes" xml:space="preserve">
          <source>PERLIO_F_TEMP</source>
          <target state="translated">PERLIO_F_TEMP</target>
        </trans-unit>
        <trans-unit id="b41c3d2e532250f86ee8250283f82be559cbd02c" translate="yes" xml:space="preserve">
          <source>PERLIO_F_TRUNCATE</source>
          <target state="translated">PERLIO_F_TRUNCATE</target>
        </trans-unit>
        <trans-unit id="107433bef0c3560e113e4e40528666b498754ebe" translate="yes" xml:space="preserve">
          <source>PERLIO_F_UNBUF</source>
          <target state="translated">PERLIO_F_UNBUF</target>
        </trans-unit>
        <trans-unit id="961bea7dd57062f89a44b4f6a38406408e7f125f" translate="yes" xml:space="preserve">
          <source>PERLIO_F_UTF8</source>
          <target state="translated">PERLIO_F_UTF8</target>
        </trans-unit>
        <trans-unit id="2220def36b220f3651d529345a73c0af882faedc" translate="yes" xml:space="preserve">
          <source>PERLIO_F_WRBUF</source>
          <target state="translated">PERLIO_F_WRBUF</target>
        </trans-unit>
        <trans-unit id="8dbfb1fad38ee56e575087f5f14bbe4d213068c9" translate="yes" xml:space="preserve">
          <source>PERLIO_K_BUFFERED</source>
          <target state="translated">PERLIO_K_BUFFERED</target>
        </trans-unit>
        <trans-unit id="7b20919d2f97edac78b68b21a94859ce668d00dd" translate="yes" xml:space="preserve">
          <source>PERLIO_K_CANCRLF</source>
          <target state="translated">PERLIO_K_CANCRLF</target>
        </trans-unit>
        <trans-unit id="ce62ad2afa73e71eda765267cb12fe5fd15ddb52" translate="yes" xml:space="preserve">
          <source>PERLIO_K_FASTGETS</source>
          <target state="translated">PERLIO_K_FASTGETS</target>
        </trans-unit>
        <trans-unit id="78221b240ced7eee57e1b2735cf03fb7e4b3a8f2" translate="yes" xml:space="preserve">
          <source>PERLIO_K_MULTIARG</source>
          <target state="translated">PERLIO_K_MULTIARG</target>
        </trans-unit>
        <trans-unit id="77b15078ef55c132f3b6bea9ea03fcf409367f84" translate="yes" xml:space="preserve">
          <source>PERLIO_K_RAW</source>
          <target state="translated">PERLIO_K_RAW</target>
        </trans-unit>
        <trans-unit id="b4f886313596b6518b4cc628c134a56cb4df28a6" translate="yes" xml:space="preserve">
          <source>PERLLIB</source>
          <target state="translated">PERLLIB</target>
        </trans-unit>
        <trans-unit id="985d8b7cd33b8ae8b97c10576f8525c5e43feb2b" translate="yes" xml:space="preserve">
          <source>PERLLIB_PREFIX</source>
          <target state="translated">PERLLIB_PREFIX</target>
        </trans-unit>
        <trans-unit id="623eea53968f01cfff951154caac47eec4e37307" translate="yes" xml:space="preserve">
          <source>PERLMAINCC</source>
          <target state="translated">PERLMAINCC</target>
        </trans-unit>
        <trans-unit id="7e7179726554cd8151193d720d159879f23350cd" translate="yes" xml:space="preserve">
          <source>PERLPREFIX</source>
          <target state="translated">PERLPREFIX</target>
        </trans-unit>
        <trans-unit id="ef8fc8e0831d3845da826810079abb8d4eda73aa" translate="yes" xml:space="preserve">
          <source>PERLRUN</source>
          <target state="translated">PERLRUN</target>
        </trans-unit>
        <trans-unit id="8cb3a680a4163da21f5dd4f5b20bac6f64c8807b" translate="yes" xml:space="preserve">
          <source>PERLRUNINST</source>
          <target state="translated">PERLRUNINST</target>
        </trans-unit>
        <trans-unit id="a58122b37384a35d76a112224ebc05023622985d" translate="yes" xml:space="preserve">
          <source>PERLSHR</source>
          <target state="translated">PERLSHR</target>
        </trans-unit>
        <trans-unit id="d41a8dc6d3f7278a6a31df3cd1c3dcb40a90f3de" translate="yes" xml:space="preserve">
          <source>PERL_ABS</source>
          <target state="translated">PERL_ABS</target>
        </trans-unit>
        <trans-unit id="82e78f5be100d6e4e53775ec69e7f77b51fe26d1" translate="yes" xml:space="preserve">
          <source>PERL_ALLOW_NON_IFS_LSP (specific to the Win32 port)</source>
          <target state="translated">PERL_ALLOW_NON_IFS_LSP (Win32 ポート固有)</target>
        </trans-unit>
        <trans-unit id="f9b90ea60310458da34842ec49d8ba2dcc6d6842" translate="yes" xml:space="preserve">
          <source>PERL_ARCHIVE: path to libperl.a equivalent to be linked to dynamic extensions.</source>
          <target state="translated">PERL_ARCHIVE:動的拡張にリンクされる libperl.a 相当のパス。</target>
        </trans-unit>
        <trans-unit id="6b32b9f2a6388fd49d59dc380fdfe54ede4bbab4" translate="yes" xml:space="preserve">
          <source>PERL_ARCHIVE_AFTER: path to a library which should be put on the linker command line</source>
          <target state="translated">PERL_ARCHIVE_AFTER:リンカのコマンドラインに置かれるべきライブラリへのパス。</target>
        </trans-unit>
        <trans-unit id="2a5949bd72c9d8fb96e425efbf9cf828b23115ca" translate="yes" xml:space="preserve">
          <source>PERL_ARCHLIB</source>
          <target state="translated">PERL_ARCHLIB</target>
        </trans-unit>
        <trans-unit id="4c6d51550dda10c59c0baefc83a359a9b3e89e2d" translate="yes" xml:space="preserve">
          <source>PERL_BADFREE</source>
          <target state="translated">PERL_BADFREE</target>
        </trans-unit>
        <trans-unit id="a23a8f24b9f1defe9ff92b59171d38cc844c2e5c" translate="yes" xml:space="preserve">
          <source>PERL_BADLANG</source>
          <target state="translated">PERL_BADLANG</target>
        </trans-unit>
        <trans-unit id="27744e6f763b2f7e34b5ad43dfc84eb60b8f2328" translate="yes" xml:space="preserve">
          <source>PERL_CORE</source>
          <target state="translated">PERL_CORE</target>
        </trans-unit>
        <trans-unit id="f3b32d1fab39a89f5810f068d933a9668c2c797f" translate="yes" xml:space="preserve">
          <source>PERL_CORE=1</source>
          <target state="translated">PERL_CORE=1</target>
        </trans-unit>
        <trans-unit id="6e749936de729cac30fc2845975837847046c8ae" translate="yes" xml:space="preserve">
          <source>PERL_DEBUG_MSTATS</source>
          <target state="translated">PERL_DEBUG_MSTATS</target>
        </trans-unit>
        <trans-unit id="ea61b8e3a3a6f667f8ac07d9441b74f7086fd4b1" translate="yes" xml:space="preserve">
          <source>PERL_DESTRUCT_LEVEL</source>
          <target state="translated">PERL_DESTRUCT_LEVEL</target>
        </trans-unit>
        <trans-unit id="801bffffb634f95f6bada89e8d20e84edbcc88c8" translate="yes" xml:space="preserve">
          <source>PERL_DESTRUCT_LEVEL=2</source>
          <target state="translated">PERL_DESTRUCT_LEVEL=2</target>
        </trans-unit>
        <trans-unit id="508b673c46fe52a5d06f717b394b01c1f988eb82" translate="yes" xml:space="preserve">
          <source>PERL_DL_NONLAZY</source>
          <target state="translated">PERL_DL_NONLAZY</target>
        </trans-unit>
        <trans-unit id="5d5910c41b2fdc604b389a58ab820d3533a9ab57" translate="yes" xml:space="preserve">
          <source>PERL_ENCODING</source>
          <target state="translated">PERL_ENCODING</target>
        </trans-unit>
        <trans-unit id="61a82fd6ba532d8a72b14f2af64e53732c3f8065" translate="yes" xml:space="preserve">
          <source>PERL_ENV_TABLES</source>
          <target state="translated">PERL_ENV_TABLES</target>
        </trans-unit>
        <trans-unit id="792910e59c33e195f09322499a044a11627827d0" translate="yes" xml:space="preserve">
          <source>PERL_HASH_SEED</source>
          <target state="translated">PERL_HASH_SEED</target>
        </trans-unit>
        <trans-unit id="a7b5ea249c8d4809d316619028db41e4453be1aa" translate="yes" xml:space="preserve">
          <source>PERL_HASH_SEED_DEBUG</source>
          <target state="translated">PERL_HASH_SEED_DEBUG</target>
        </trans-unit>
        <trans-unit id="5c17c901a8c7ba514352a23cbcd31ec43fe0b47d" translate="yes" xml:space="preserve">
          <source>PERL_INTERNAL_RAND_SEED</source>
          <target state="translated">PERL_INTERNAL_RAND_SEED</target>
        </trans-unit>
        <trans-unit id="69db7aaecf7d491408fc204d63c890b69df8731b" translate="yes" xml:space="preserve">
          <source>PERL_INT_MAX</source>
          <target state="translated">PERL_INT_MAX</target>
        </trans-unit>
        <trans-unit id="df55d3100213212432ed7cb5fb2ce8aff5bb5e34" translate="yes" xml:space="preserve">
          <source>PERL_JSON_BACKEND</source>
          <target state="translated">PERL_JSON_BACKEND</target>
        </trans-unit>
        <trans-unit id="49ab4454766657be54e5d4cb74c2908c0fd5b261" translate="yes" xml:space="preserve">
          <source>PERL_LIB</source>
          <target state="translated">PERL_LIB</target>
        </trans-unit>
        <trans-unit id="0f45bf3543329a337f832cab3aec2fe306d7db33" translate="yes" xml:space="preserve">
          <source>PERL_MALLOC_OK</source>
          <target state="translated">PERL_MALLOC_OK</target>
        </trans-unit>
        <trans-unit id="7406046b29d774dab6f67c9ebf1226de7875707f" translate="yes" xml:space="preserve">
          <source>PERL_MEM_LOG</source>
          <target state="translated">PERL_MEM_LOG</target>
        </trans-unit>
        <trans-unit id="5c9f395109ea5023ab74c833a3d7d1ffe677b023" translate="yes" xml:space="preserve">
          <source>PERL_MM_OPT</source>
          <target state="translated">PERL_MM_OPT</target>
        </trans-unit>
        <trans-unit id="5c953073368b76fafefd1e0259af81bf65f7f4b2" translate="yes" xml:space="preserve">
          <source>PERL_MM_USE_DEFAULT</source>
          <target state="translated">PERL_MM_USE_DEFAULT</target>
        </trans-unit>
        <trans-unit id="cef724fd4ff152432d364f33d0c4576d9c407154" translate="yes" xml:space="preserve">
          <source>PERL_PERTURB_KEYS</source>
          <target state="translated">PERL_PERTURB_KEYS</target>
        </trans-unit>
        <trans-unit id="f27f43c29b22fb43e8928ba53b4a9304b93a2d19" translate="yes" xml:space="preserve">
          <source>PERL_ROOT (specific to the VMS port)</source>
          <target state="translated">PERL_ROOT (VMS ポートに固有)</target>
        </trans-unit>
        <trans-unit id="35728d129bbb3e5ed03314204a1cbf6d4ce2e6d0" translate="yes" xml:space="preserve">
          <source>PERL_SET_CONTEXT(interp) should also be called whenever &lt;code&gt;interp&lt;/code&gt; is used by a thread that did not create it (using either perl_alloc(), or the more esoteric perl_clone()).</source>
          <target state="translated">PERL_SET_CONTEXT（interp）は、 &lt;code&gt;interp&lt;/code&gt; が作成されなかったスレッドによって（perl_alloc（）またはより難解なperl_clone（）を使用して）使用される場合にも呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="a871d7bf7b2a02e819c07cf4df026d57906b3e51" translate="yes" xml:space="preserve">
          <source>PERL_SH_DIR</source>
          <target state="translated">PERL_SH_DIR</target>
        </trans-unit>
        <trans-unit id="4c7cf2b0fdec6c8b2cd92d28ad49f22e26b0b418" translate="yes" xml:space="preserve">
          <source>PERL_SH_DIR too long</source>
          <target state="translated">PERL_SH_DIR が長すぎる</target>
        </trans-unit>
        <trans-unit id="7bd3a2603ac42075dab76aca53b79038e4748710" translate="yes" xml:space="preserve">
          <source>PERL_SIGNALS</source>
          <target state="translated">PERL_SIGNALS</target>
        </trans-unit>
        <trans-unit id="5a3d499734d10684ba8b973f86e049a53ee385c1" translate="yes" xml:space="preserve">
          <source>PERL_SIGNALS illegal: &quot;%s&quot;</source>
          <target state="translated">PERL_SIGNALS は違法です。&quot;%s&quot;</target>
        </trans-unit>
        <trans-unit id="4060aa4827b3a71203af081a412cd22971a36094" translate="yes" xml:space="preserve">
          <source>PERL_SKIP_LOCALE_INIT</source>
          <target state="translated">PERL_SKIP_LOCALE_INIT</target>
        </trans-unit>
        <trans-unit id="bc3db12de425fd5679b7ce819f07898cfe62fa7b" translate="yes" xml:space="preserve">
          <source>PERL_SKIP_TTY_TEST</source>
          <target state="translated">PERL_SKIP_TTY_TEST</target>
        </trans-unit>
        <trans-unit id="41cca9a24252937596b0f50c1b1d4f37568c3301" translate="yes" xml:space="preserve">
          <source>PERL_SRC</source>
          <target state="translated">PERL_SRC</target>
        </trans-unit>
        <trans-unit id="ff65085c50dbeb4ca0dcc50c8eaea9bafb4867b8" translate="yes" xml:space="preserve">
          <source>PERL_SYS_INIT</source>
          <target state="translated">PERL_SYS_INIT</target>
        </trans-unit>
        <trans-unit id="bafe8eb4e870a01118a1e32b0b2c726dc909e6e3" translate="yes" xml:space="preserve">
          <source>PERL_SYS_INIT3</source>
          <target state="translated">PERL_SYS_INIT3</target>
        </trans-unit>
        <trans-unit id="bf0d5f220a76e58f3821bfa4311a10722b064d45" translate="yes" xml:space="preserve">
          <source>PERL_SYS_TERM</source>
          <target state="translated">PERL_SYS_TERM</target>
        </trans-unit>
        <trans-unit id="208fc538733dbbdb5aec3a63df9d729e3913e67b" translate="yes" xml:space="preserve">
          <source>PERL_TEST_MEMORY</source>
          <target state="translated">PERL_TEST_MEMORY</target>
        </trans-unit>
        <trans-unit id="886bcbbb74ffecaf881fba6286355ca404a13f7c" translate="yes" xml:space="preserve">
          <source>PERL_TEST_NOVREXX</source>
          <target state="translated">PERL_TEST_NOVREXX</target>
        </trans-unit>
        <trans-unit id="ab7dad907e62e7599b1a7017691243265886cbfc" translate="yes" xml:space="preserve">
          <source>PERL_TEST_NUMCONVERTS</source>
          <target state="translated">PERL_TEST_NUMCONVERTS</target>
        </trans-unit>
        <trans-unit id="759faa5eaa5538181d217e2ab4434a823203767c" translate="yes" xml:space="preserve">
          <source>PERL_TEST_Net_Ping</source>
          <target state="translated">PERL_TEST_Net_Ping</target>
        </trans-unit>
        <trans-unit id="bec5540dbfde5aa63bedd53cd22ab9d823b7e6d6" translate="yes" xml:space="preserve">
          <source>PERL_UNICODE</source>
          <target state="translated">PERL_UNICODE</target>
        </trans-unit>
        <trans-unit id="7e4e92dcc5e27c3fb85c6e75b6e5d617242fb46f" translate="yes" xml:space="preserve">
          <source>PERL_USE_UNSAFE_INC</source>
          <target state="translated">PERL_USE_UNSAFE_INC</target>
        </trans-unit>
        <trans-unit id="4e4019cc5e2b7ec5fc3d43d1227c4891f068a0c3" translate="yes" xml:space="preserve">
          <source>PERL_VMS_EXCEPTION_DEBUG</source>
          <target state="translated">PERL_VMS_EXCEPTION_DEBUG</target>
        </trans-unit>
        <trans-unit id="22d485a76570fc46268de520a55e10a9a69f35aa" translate="yes" xml:space="preserve">
          <source>PERL_YAML_BACKEND</source>
          <target state="translated">PERL_YAML_BACKEND</target>
        </trans-unit>
        <trans-unit id="44fdc623047a41623d488fb31da2674a7030dc04" translate="yes" xml:space="preserve">
          <source>PERM_DIR</source>
          <target state="translated">PERM_DIR</target>
        </trans-unit>
        <trans-unit id="c2180dfdb34d9a6639dc15caa5022b694b5fb078" translate="yes" xml:space="preserve">
          <source>PERM_RW</source>
          <target state="translated">PERM_RW</target>
        </trans-unit>
        <trans-unit id="44fda2c533f929a99931a44d71a12a1d4907dfb4" translate="yes" xml:space="preserve">
          <source>PERM_RWX</source>
          <target state="translated">PERM_RWX</target>
        </trans-unit>
        <trans-unit id="70101c7c85d7116954e48d6da8dddb7074ef2a17" translate="yes" xml:space="preserve">
          <source>PERSISTENT CACHE SUPPORT</source>
          <target state="translated">永続的なキャッシュのサポート</target>
        </trans-unit>
        <trans-unit id="60003793ea7b554ef4aa8d86e943a5c0f46d5e37" translate="yes" xml:space="preserve">
          <source>PF_INET, PF_INET6, PF_UNIX, ...</source>
          <target state="translated">PF_INET,PF_INET6,PF_UNIX,...</target>
        </trans-unit>
        <trans-unit id="fa7ff6fb00a7ace8d98cf880a492dc6c5ffc8ca7" translate="yes" xml:space="preserve">
          <source>PI</source>
          <target state="translated">PI</target>
        </trans-unit>
        <trans-unit id="b8dbf6f1e27bbaefb3fed1c9d45e67a33d78ca7f" translate="yes" xml:space="preserve">
          <source>PI()</source>
          <target state="translated">PI()</target>
        </trans-unit>
        <trans-unit id="0895326aa55be1e55b928bb1bbe19bf4d92dbea6" translate="yes" xml:space="preserve">
          <source>PID of the hub this event was sent to.</source>
          <target state="translated">このイベントが送信されたハブのPID。</target>
        </trans-unit>
        <trans-unit id="561a1e4f381f56a68d3e1343160d7f5e7bdc0528" translate="yes" xml:space="preserve">
          <source>PID of this instance.</source>
          <target state="translated">このインスタンスの PID。</target>
        </trans-unit>
        <trans-unit id="3490ca5e3137d6e80d152267527e5428418a006e" translate="yes" xml:space="preserve">
          <source>PL files are normally run &lt;b&gt;after&lt;/b&gt; pm_to_blib and include INST_LIB and INST_ARCH in their &lt;code&gt;@INC&lt;/code&gt; , so the just built modules can be accessed... unless the PL file is making a module (or anything else in PM) in which case it is run &lt;b&gt;before&lt;/b&gt; pm_to_blib and does not include INST_LIB and INST_ARCH in its &lt;code&gt;@INC&lt;/code&gt; . This apparently odd behavior is there for backwards compatibility (and it's somewhat DWIM).</source>
          <target state="translated">PLファイルが正常に実行され&lt;b&gt;た後&lt;/b&gt; pm_to_blib、その中でINST_LIBとINST_ARCHが含ま &lt;code&gt;@INC&lt;/code&gt; だけで構築されたモジュールがアクセスできるように... PLファイルはモジュール（またはPMで何かを）作っていない限り、それが実行される場合には&lt;b&gt;前に&lt;/b&gt; pm_to_blibとは、その中でINST_LIBとINST_ARCHが含まれていません &lt;code&gt;@INC&lt;/code&gt; 。この明らかに奇妙な動作は、下位互換性のためにあります（そしてそれは多少DWIMです）。</target>
        </trans-unit>
        <trans-unit id="e51a32a104667b7c78e8ac1b7576f2280fb9fd4f" translate="yes" xml:space="preserve">
          <source>PL files are normally run &lt;b&gt;after&lt;/b&gt; pm_to_blib and include INST_LIB and INST_ARCH in their &lt;code&gt;@INC&lt;/code&gt;, so the just built modules can be accessed... unless the PL file is making a module (or anything else in PM) in which case it is run &lt;b&gt;before&lt;/b&gt; pm_to_blib and does not include INST_LIB and INST_ARCH in its &lt;code&gt;@INC&lt;/code&gt;. This apparently odd behavior is there for backwards compatibility (and it's somewhat DWIM). The argument passed to the .PL is set up as a target to build in the Makefile. In other sections such as &lt;code&gt;postamble&lt;/code&gt; you can specify a dependency on the filename/argument that the .PL is supposed (or will have, now that that is is a dependency) to generate. Note the file to be generated will still be generated and the .PL will still run even without an explicit dependency created by you, since the &lt;code&gt;all&lt;/code&gt; target still depends on running all eligible to run.PL files.</source>
          <target state="translated">PLファイルが正常に実行され&lt;b&gt;た後&lt;/b&gt;pm_to_blib、その中でINST_LIBとINST_ARCHが含ま &lt;code&gt;@INC&lt;/code&gt; だけで構築されたモジュールがアクセスできるように... PLファイルはモジュール（またはPMで何かを）作っていない限り、それが実行される場合には&lt;b&gt;前に&lt;/b&gt;pm_to_blibとは、その中でINST_LIBとINST_ARCHが含まれていません &lt;code&gt;@INC&lt;/code&gt; 。この明らかに奇妙な動作は、下位互換性のためにあります（そしてそれはややDWIMです）。 .PLに渡された引数は、Makefileでビルドするターゲットとして設定されます。 &lt;code&gt;postamble&lt;/code&gt; などの他のセクション.PLが生成することになっている（または、これが依存関係であるため、これから持つ）ファイル名/引数への依存関係を指定できます。 &lt;code&gt;all&lt;/code&gt; ターゲットはrun.PLファイルに適格なすべての実行に依存しているため、生成されるファイルは引き続き生成され、.PLは明示的な依存関係が作成されなくても実行されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="1f9b4355202a16dca9278309f8c57bab627534d7" translate="yes" xml:space="preserve">
          <source>PLANE ANGLE CONVERSIONS</source>
          <target state="translated">平面角変換</target>
        </trans-unit>
        <trans-unit id="397f26f7a31d1d29ed32b8ae38758d964d147496" translate="yes" xml:space="preserve">
          <source>PLATFORMS</source>
          <target state="translated">PLATFORMS</target>
        </trans-unit>
        <trans-unit id="0fcaf629ebcd1ef3b077048317114d46dcb1a205" translate="yes" xml:space="preserve">
          <source>PLUGINS</source>
          <target state="translated">PLUGINS</target>
        </trans-unit>
        <trans-unit id="9384dfd5bba8ea1c903342591ace10a7ddfc9945" translate="yes" xml:space="preserve">
          <source>PL_DBsingle</source>
          <target state="translated">PL_DBsingle</target>
        </trans-unit>
        <trans-unit id="47a0c34abae5de452c4e68467e1bc69d0fec6aab" translate="yes" xml:space="preserve">
          <source>PL_DBsub</source>
          <target state="translated">PL_DBsub</target>
        </trans-unit>
        <trans-unit id="254f02daccecd79541ecf41e0e272b64295e59ae" translate="yes" xml:space="preserve">
          <source>PL_DBtrace</source>
          <target state="translated">PL_DBtrace</target>
        </trans-unit>
        <trans-unit id="50829b718fe62c2e544db03d7a807c3fcf696b78" translate="yes" xml:space="preserve">
          <source>PL_FILES</source>
          <target state="translated">PL_FILES</target>
        </trans-unit>
        <trans-unit id="0fc7cb838364bfb7821206b82094a7189a18f231" translate="yes" xml:space="preserve">
          <source>PL_check</source>
          <target state="translated">PL_check</target>
        </trans-unit>
        <trans-unit id="3942571b3c89a8b857e5e39afe0dc08bda50ef30" translate="yes" xml:space="preserve">
          <source>PL_comppad</source>
          <target state="translated">PL_comppad</target>
        </trans-unit>
        <trans-unit id="63b668989fbe90229071b7141adb2f83849fb393" translate="yes" xml:space="preserve">
          <source>PL_comppad_name</source>
          <target state="translated">PL_comppad_name</target>
        </trans-unit>
        <trans-unit id="78d979ff5b94265926bd56f4666a6068acf1dd0d" translate="yes" xml:space="preserve">
          <source>PL_curcop</source>
          <target state="translated">PL_curcop</target>
        </trans-unit>
        <trans-unit id="a713cc48fb265d503d721c22a1448425490a5aa4" translate="yes" xml:space="preserve">
          <source>PL_curpad</source>
          <target state="translated">PL_curpad</target>
        </trans-unit>
        <trans-unit id="d4046e35e916d2bef58857b755f892408300e3d3" translate="yes" xml:space="preserve">
          <source>PL_curstash</source>
          <target state="translated">PL_curstash</target>
        </trans-unit>
        <trans-unit id="037412b68e6e26e872c8118b350215dc8d6d1448" translate="yes" xml:space="preserve">
          <source>PL_defgv</source>
          <target state="translated">PL_defgv</target>
        </trans-unit>
        <trans-unit id="c8fa77f015d32904e855001578c1c0c2dfa79e4e" translate="yes" xml:space="preserve">
          <source>PL_dowarn</source>
          <target state="translated">PL_dowarn</target>
        </trans-unit>
        <trans-unit id="092b2e167ed55508a7c2b6f702a3069db725a955" translate="yes" xml:space="preserve">
          <source>PL_exit_flags</source>
          <target state="translated">PL_exit_flags</target>
        </trans-unit>
        <trans-unit id="2269a7dea453869f10370e7c170b74030da89d49" translate="yes" xml:space="preserve">
          <source>PL_keyword_plugin</source>
          <target state="translated">PL_keyword_plugin</target>
        </trans-unit>
        <trans-unit id="5209c66f63bd147aa5df8ecc1ab888c0d9961d92" translate="yes" xml:space="preserve">
          <source>PL_last_in_gv</source>
          <target state="translated">PL_last_in_gv</target>
        </trans-unit>
        <trans-unit id="36fd7cea2fd5f5c1963a44dc7058f9525c072690" translate="yes" xml:space="preserve">
          <source>PL_modglobal</source>
          <target state="translated">PL_modglobal</target>
        </trans-unit>
        <trans-unit id="2236e3ec4813567c614a43cd0754dd6626a4a551" translate="yes" xml:space="preserve">
          <source>PL_na</source>
          <target state="translated">PL_na</target>
        </trans-unit>
        <trans-unit id="6995185ff1c35cec4925daa0b0075d0327f77ee5" translate="yes" xml:space="preserve">
          <source>PL_ofsgv</source>
          <target state="translated">PL_ofsgv</target>
        </trans-unit>
        <trans-unit id="8580c4ed8412420bdb31f0fd968917b418c9b683" translate="yes" xml:space="preserve">
          <source>PL_opfreehook</source>
          <target state="translated">PL_opfreehook</target>
        </trans-unit>
        <trans-unit id="1ea0ae7f916bba0e2d65d3f5e397518df6421db0" translate="yes" xml:space="preserve">
          <source>PL_parser</source>
          <target state="translated">PL_parser</target>
        </trans-unit>
        <trans-unit id="a1ba1b111f1bd4ef5560f0aba4db14fb5b648989" translate="yes" xml:space="preserve">
          <source>PL_parser-&amp;gt;bufend</source>
          <target state="translated">PL_parser-&amp;gt;bufend</target>
        </trans-unit>
        <trans-unit id="4ffd7f7e9f684e2ac2acd1022f7d484dad2e34aa" translate="yes" xml:space="preserve">
          <source>PL_parser-&amp;gt;bufptr</source>
          <target state="translated">PL_parser-&amp;gt;bufptr</target>
        </trans-unit>
        <trans-unit id="156db8245817daed759b7efa269aa1fa08d7c60f" translate="yes" xml:space="preserve">
          <source>PL_parser-&amp;gt;linestart</source>
          <target state="translated">PL_parser-&amp;gt;linestart</target>
        </trans-unit>
        <trans-unit id="f3925768ae35a292a4029140714b6588c5e64e0b" translate="yes" xml:space="preserve">
          <source>PL_parser-&amp;gt;linestr</source>
          <target state="translated">PL_parser-&amp;gt;linestr</target>
        </trans-unit>
        <trans-unit id="5953d6c1415777fc39f640d7afdfbe421c630e4b" translate="yes" xml:space="preserve">
          <source>PL_peepp</source>
          <target state="translated">PL_peepp</target>
        </trans-unit>
        <trans-unit id="23f9bc613548aff72d81a202d18dc15c555857b5" translate="yes" xml:space="preserve">
          <source>PL_perl_destruct_level</source>
          <target state="translated">PL_perl_destruct_level</target>
        </trans-unit>
        <trans-unit id="4dc9044257de8485e549d1258c8af6f65840e3bc" translate="yes" xml:space="preserve">
          <source>PL_phase</source>
          <target state="translated">PL_phase</target>
        </trans-unit>
        <trans-unit id="3ca0d0f372124573d600002fd0243c51f2aa055b" translate="yes" xml:space="preserve">
          <source>PL_rpeepp</source>
          <target state="translated">PL_rpeepp</target>
        </trans-unit>
        <trans-unit id="9a6052a2eea657750753d5df3e606b572655ea35" translate="yes" xml:space="preserve">
          <source>PL_rs</source>
          <target state="translated">PL_rs</target>
        </trans-unit>
        <trans-unit id="4e568dad89113d95347ce2d684a8f138aa36f0ed" translate="yes" xml:space="preserve">
          <source>PL_runops</source>
          <target state="translated">PL_runops</target>
        </trans-unit>
        <trans-unit id="62365231be3a355fafa53e55fa66796607ba14ec" translate="yes" xml:space="preserve">
          <source>PL_sv_no</source>
          <target state="translated">PL_sv_no</target>
        </trans-unit>
        <trans-unit id="3b9fd4325c9bc3259c052f790475bbdffd718b23" translate="yes" xml:space="preserve">
          <source>PL_sv_undef</source>
          <target state="translated">PL_sv_undef</target>
        </trans-unit>
        <trans-unit id="eac2975fac14a22f24d02b8e8c9f80fbbc301253" translate="yes" xml:space="preserve">
          <source>PL_sv_yes</source>
          <target state="translated">PL_sv_yes</target>
        </trans-unit>
        <trans-unit id="30d70f1907515b6780f3b00f9849c127ebc98052" translate="yes" xml:space="preserve">
          <source>PL_sv_zero</source>
          <target state="translated">PL_sv_zero</target>
        </trans-unit>
        <trans-unit id="0c95dc6163ff0d09e82f44e7c50db7ad6b089bf3" translate="yes" xml:space="preserve">
          <source>PM</source>
          <target state="translated">PM</target>
        </trans-unit>
        <trans-unit id="19a5dacaba3003d35cef0b5dd4c4d6d1215e4190" translate="yes" xml:space="preserve">
          <source>PMLIBDIRS</source>
          <target state="translated">PMLIBDIRS</target>
        </trans-unit>
        <trans-unit id="e534377de0fa61e7e7f73c91eeaaeb5f3113440d" translate="yes" xml:space="preserve">
          <source>PM_FILTER</source>
          <target state="translated">PM_FILTER</target>
        </trans-unit>
        <trans-unit id="96bb1ede828d06c7c676fc4aca0b2ab0fc3aaec6" translate="yes" xml:space="preserve">
          <source>POD</source>
          <target state="translated">POD</target>
        </trans-unit>
        <trans-unit id="9757efd691d77c4c7ce7af22ae0498da057b96f2" translate="yes" xml:space="preserve">
          <source>POD commands.</source>
          <target state="translated">PODコマンド。</target>
        </trans-unit>
        <trans-unit id="455b730e0dab95d3eae1711d336324ae10dca646" translate="yes" xml:space="preserve">
          <source>POD document had syntax errors</source>
          <target state="translated">POD ドキュメントに構文エラーがあった</target>
        </trans-unit>
        <trans-unit id="4f47ae786af8b3ae6d44df79389191724c8e9b20" translate="yes" xml:space="preserve">
          <source>POD documentation</source>
          <target state="translated">POD文書</target>
        </trans-unit>
        <trans-unit id="e5ddb6a6721405eb11c587453e0434d2f646aa07" translate="yes" xml:space="preserve">
          <source>POD2MAN_macro</source>
          <target state="translated">POD2MAN_macro</target>
        </trans-unit>
        <trans-unit id="6b88d12ed58c242ae59354f0c80b03f6832c1433" translate="yes" xml:space="preserve">
          <source>POD_MAN_DATE</source>
          <target state="translated">POD_MAN_DATE</target>
        </trans-unit>
        <trans-unit id="3bd1038b0ae3b6d74e0afdd1bb9c713c175f1f33" translate="yes" xml:space="preserve">
          <source>PODs: Embedded Documentation</source>
          <target state="translated">PODs.エンベデッド・ドキュメンテーション</target>
        </trans-unit>
        <trans-unit id="e9ef8762a5cdd4b21f20cb72bb574a123f822819" translate="yes" xml:space="preserve">
          <source>POLLUTE</source>
          <target state="translated">POLLUTE</target>
        </trans-unit>
        <trans-unit id="7c60b6a84c4fa21ca716ea553da79d32a8b4b3f5" translate="yes" xml:space="preserve">
          <source>POP this</source>
          <target state="translated">これをPOP</target>
        </trans-unit>
        <trans-unit id="422bdd5ecea225a661cd58d7aec66d4b2dd4ec19" translate="yes" xml:space="preserve">
          <source>POPMARK</source>
          <target state="translated">POPMARK</target>
        </trans-unit>
        <trans-unit id="27d22d20fdc49ff65099906e5eeacad058aeb916" translate="yes" xml:space="preserve">
          <source>POPULATE AN INSTALLATION WITH LOTS OF MODULES</source>
          <target state="translated">多数のモジュールを搭載したインストレーションの普及</target>
        </trans-unit>
        <trans-unit id="559b325ff8c56a5275f0418c2cb35c717f329ab4" translate="yes" xml:space="preserve">
          <source>POP_MULTICALL</source>
          <target state="translated">POP_MULTICALL</target>
        </trans-unit>
        <trans-unit id="f115e0763b8e1fa2700c8b66065d9ecad5652f97" translate="yes" xml:space="preserve">
          <source>POPi</source>
          <target state="translated">POPi</target>
        </trans-unit>
        <trans-unit id="de4637475c390ec554bf61ca9bf90b604dd66f87" translate="yes" xml:space="preserve">
          <source>POPl</source>
          <target state="translated">POPl</target>
        </trans-unit>
        <trans-unit id="1f8378be0314d00f232db6392d0dee3b4cba7cec" translate="yes" xml:space="preserve">
          <source>POPn</source>
          <target state="translated">POPn</target>
        </trans-unit>
        <trans-unit id="881ade6b010d1a0ff0605891f056894ec0ebaf24" translate="yes" xml:space="preserve">
          <source>POPp</source>
          <target state="translated">POPp</target>
        </trans-unit>
        <trans-unit id="2b16d67d788fc2a0b06cc83a6aa4430272a36151" translate="yes" xml:space="preserve">
          <source>POPpbytex</source>
          <target state="translated">POPpbytex</target>
        </trans-unit>
        <trans-unit id="72a0581061aed9496ced6a70fa2506fcf048aa24" translate="yes" xml:space="preserve">
          <source>POPpx</source>
          <target state="translated">POPpx</target>
        </trans-unit>
        <trans-unit id="34b3af9830146fcb3dbe82b64f132ac575705b17" translate="yes" xml:space="preserve">
          <source>POPs</source>
          <target state="translated">POPs</target>
        </trans-unit>
        <trans-unit id="c628edc5ff30bd221557e10c7956b7ff83c06058" translate="yes" xml:space="preserve">
          <source>POPu</source>
          <target state="translated">POPu</target>
        </trans-unit>
        <trans-unit id="08076828e24a85540dae08b464ebbcc19844c984" translate="yes" xml:space="preserve">
          <source>POPul</source>
          <target state="translated">POPul</target>
        </trans-unit>
        <trans-unit id="dfb1d5b6c2198f6b90dd9fb2aa67809b15a77598" translate="yes" xml:space="preserve">
          <source>PORTABILITY</source>
          <target state="translated">PORTABILITY</target>
        </trans-unit>
        <trans-unit id="fac926bb8a4de690e4dca18f3225a7ad2a06037c" translate="yes" xml:space="preserve">
          <source>PORTABILITY CAVEATS</source>
          <target state="translated">ポータビリティケイブATS</target>
        </trans-unit>
        <trans-unit id="4abd3985ba804364272767c04cdc211615f77c56" translate="yes" xml:space="preserve">
          <source>POS</source>
          <target state="translated">POS</target>
        </trans-unit>
        <trans-unit id="eeaaaed2401766705588000c95399212adce6cd4" translate="yes" xml:space="preserve">
          <source>POS is absolute position. (Seek relative to the start of the file)</source>
          <target state="translated">POSは絶対位置です。(ファイルの先頭からの相対位置を求める)</target>
        </trans-unit>
        <trans-unit id="eff46aebd5f7e19f03d6237cd80da90014c8e132" translate="yes" xml:space="preserve">
          <source>POS is an offset from the current position. (Seek relative to current)</source>
          <target state="translated">POSは現在位置からのオフセットです。(現在位置からの相対的なシーク)</target>
        </trans-unit>
        <trans-unit id="4a3852f381cc7917e0a6f01c96db05db1939d7a5" translate="yes" xml:space="preserve">
          <source>POS is an offset from the end of the file. (Seek relative to end)</source>
          <target state="translated">POSはファイルの末尾からのオフセットです。(端からの相対的なシーク)</target>
        </trans-unit>
        <trans-unit id="b7e74b0c6f2adb38fbd54e1e4d295584367004f6" translate="yes" xml:space="preserve">
          <source>POS1..POS2</source>
          <target state="translated">POS1..POS2</target>
        </trans-unit>
        <trans-unit id="23507e798d66fee0b05313c2a15e15ff93e82f20" translate="yes" xml:space="preserve">
          <source>POSIX</source>
          <target state="translated">POSIX</target>
        </trans-unit>
        <trans-unit id="ded226beebc135cf61ed2043f478ea25c067ca0b" translate="yes" xml:space="preserve">
          <source>POSIX (Linux and other Unixes)</source>
          <target state="translated">POSIX</target>
        </trans-unit>
        <trans-unit id="ae89c95fa22e7b32fa45fce7e8bf404e997e9054" translate="yes" xml:space="preserve">
          <source>POSIX - Perl interface to IEEE Std 1003.1</source>
          <target state="translated">POSIX-IEEE Std 1003.1 への Perl インターフェース</target>
        </trans-unit>
        <trans-unit id="d243eb13195dcdb315427d56a4c35f42dcb04024" translate="yes" xml:space="preserve">
          <source>POSIX CONSTANTS</source>
          <target state="translated">ポジックス定数</target>
        </trans-unit>
        <trans-unit id="5c9c75047d91af941801f6c6002bbc479d31b75d" translate="yes" xml:space="preserve">
          <source>POSIX Character Classes</source>
          <target state="translated">POSIX 文字クラス</target>
        </trans-unit>
        <trans-unit id="f2d1e7de0e60a574e6d87a0cc3a67de6faf43784" translate="yes" xml:space="preserve">
          <source>POSIX FLAGS</source>
          <target state="translated">POSIXフラグ</target>
        </trans-unit>
        <trans-unit id="569385480ca60be76d48d613b39e1bc91f7990bf" translate="yes" xml:space="preserve">
          <source>POSIX FUNCTIONS</source>
          <target state="translated">POSIX 関数</target>
        </trans-unit>
        <trans-unit id="06b4e35ce432cb4702f6a995fe95c52f8db39c2a" translate="yes" xml:space="preserve">
          <source>POSIX character classes and their Unicode and Perl equivalents:</source>
          <target state="translated">POSIX文字クラスとそのUnicodeおよびPerlの等価物。</target>
        </trans-unit>
        <trans-unit id="72593fbc583aea6c901e13572f670a7d0d357161" translate="yes" xml:space="preserve">
          <source>POSIX character classes can be part of a larger bracketed character class. For example,</source>
          <target state="translated">POSIX 文字クラスは、より大きな括弧付き文字クラスの一部になることができます。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="b4c2f7d57ee138ef8741ea704a671378863f20a1" translate="yes" xml:space="preserve">
          <source>POSIX character classes have the form &lt;code&gt;[:class:]&lt;/code&gt;, where</source>
          <target state="translated">POSIX文字クラスの形式は &lt;code&gt;[:class:]&lt;/code&gt; で、ここで</target>
        </trans-unit>
        <trans-unit id="dbb6744a286cd1f9e2be5ebee0f36cd6af45a3ad" translate="yes" xml:space="preserve">
          <source>POSIX class [:%s:] unknown in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="translated">POSIXクラス[：％s：]正規表現では不明です。&amp;lt;-ここにm /％s /でマーク</target>
        </trans-unit>
        <trans-unit id="428e4a79ce459858445ef089aecec522eb90d630" translate="yes" xml:space="preserve">
          <source>POSIX does not define a way to get the name of the current per-thread locale. Some systems, such as Darwin and NetBSD do implement a function, &lt;a href=&quot;http://man.he.net/man3/querylocale&quot;&gt;querylocale(3)&lt;/a&gt; to do this. On non-Windows systems without it, such as Linux, there are some additional caveats:</source>
          <target state="translated">POSIXは、現在のスレッドごとのロケールの名前を取得する方法を定義していません。DarwinやNetBSDなどの一部のシステムは、これを行うための関数&lt;a href=&quot;http://man.he.net/man3/querylocale&quot;&gt;querylocale（3）&lt;/a&gt;を実装しています。LinuxなどのWindows以外のシステムでは、いくつかの追加の警告があります。</target>
        </trans-unit>
        <trans-unit id="61668ef8f25bddd14989c415629b0df07e51f44b" translate="yes" xml:space="preserve">
          <source>POSIX functions:</source>
          <target state="translated">POSIX関数です。</target>
        </trans-unit>
        <trans-unit id="23d9be609f6cdb2b5fd3e3974d45aa5d550f1e82" translate="yes" xml:space="preserve">
          <source>POSIX getpgrp can't take an argument</source>
          <target state="translated">POSIX getpgrp は引数を取ることができません。</target>
        </trans-unit>
        <trans-unit id="48724a797b049c9d53d5a742b51241d8e3be59bb" translate="yes" xml:space="preserve">
          <source>POSIX syntax [%c %c] belongs inside character classes%s in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="translated">POSIX構文[％c％c]は、正規表現の文字クラス％s内に属します。&amp;lt;-ここにm /％s /でマーク</target>
        </trans-unit>
        <trans-unit id="2275e13c6ce1651bf3ccade0b55f6ff9a8a1d4a0" translate="yes" xml:space="preserve">
          <source>POSIX syntax [. .] is reserved for future extensions in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="translated">POSIX構文[。。]正規表現の将来の拡張のために予約されています。&amp;lt;-ここにm /％s /でマーク</target>
        </trans-unit>
        <trans-unit id="7acfd5b7d6438b9a75db1cd24c4fcafe1551e2d3" translate="yes" xml:space="preserve">
          <source>POSIX syntax [= =] is reserved for future extensions in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="translated">POSIX構文[==]は、正規表現の将来の拡張用に予約されています。&amp;lt;-ここにm /％s /でマーク</target>
        </trans-unit>
        <trans-unit id="04680e6e37ce6d2dcbb31e0e8a36d7516c0e506b" translate="yes" xml:space="preserve">
          <source>POSIX-BC?</source>
          <target state="translated">POSIX-BC?</target>
        </trans-unit>
        <trans-unit id="864a3ec5736c1f231ee60dfa1ac4b3cf0adce372" translate="yes" xml:space="preserve">
          <source>POSIX.2</source>
          <target state="translated">POSIX.2</target>
        </trans-unit>
        <trans-unit id="3777385d2dd1e8926a9b75a14303ee4b22211baa" translate="yes" xml:space="preserve">
          <source>POSIX.pm</source>
          <target state="translated">POSIX.pm</target>
        </trans-unit>
        <trans-unit id="d45e49d46b986bef0fad349a44b3e4ef42953d70" translate="yes" xml:space="preserve">
          <source>POSIX::SigAction</source>
          <target state="translated">POSIX::SigAction</target>
        </trans-unit>
        <trans-unit id="74a299dde6a5128d521b652f2ba458a4da06a6a1" translate="yes" xml:space="preserve">
          <source>POSIX::SigRt</source>
          <target state="translated">POSIX::SigRt</target>
        </trans-unit>
        <trans-unit id="9cca0191c626eb89ac7a531f06862f8df3747e24" translate="yes" xml:space="preserve">
          <source>POSIX::SigSet</source>
          <target state="translated">POSIX::SigSet</target>
        </trans-unit>
        <trans-unit id="2b1f5cae0839a5eb5bae78193bd1a07008a2110c" translate="yes" xml:space="preserve">
          <source>POSIX::Termios</source>
          <target state="translated">POSIX::Termios</target>
        </trans-unit>
        <trans-unit id="f2fc877cb9d4fb0c8fe89637708b84a7a1914e7e" translate="yes" xml:space="preserve">
          <source>POSIX::localeconv</source>
          <target state="translated">POSIX::localeconv</target>
        </trans-unit>
        <trans-unit id="fa4963cab46f1be7f819925dbfd48f68153bfc4a" translate="yes" xml:space="preserve">
          <source>POST-STRING</source>
          <target state="translated">POST-STRING</target>
        </trans-unit>
        <trans-unit id="78bf4921d3ce248ca8a0791cbb630010fb50de77" translate="yes" xml:space="preserve">
          <source>POST-TEST BEHAVIORS</source>
          <target state="translated">テスト後の行動</target>
        </trans-unit>
        <trans-unit id="d0012d64d9af33bc1cf8483ab0fda421fad18ba8" translate="yes" xml:space="preserve">
          <source>POSTSCRIPT</source>
          <target state="translated">POSTSCRIPT</target>
        </trans-unit>
        <trans-unit id="1d79b59bd56f8e5cc236dd1e2999c0342b99562a" translate="yes" xml:space="preserve">
          <source>PPM_INSTALL_EXEC</source>
          <target state="translated">PPM_INSTALL_EXEC</target>
        </trans-unit>
        <trans-unit id="db09ca421142063346f839adb19aabf5e75f8981" translate="yes" xml:space="preserve">
          <source>PPM_INSTALL_SCRIPT</source>
          <target state="translated">PPM_INSTALL_SCRIPT</target>
        </trans-unit>
        <trans-unit id="aa13622e03515dcb1465294f07cff1a0c77db609" translate="yes" xml:space="preserve">
          <source>PPM_UNINSTALL_EXEC</source>
          <target state="translated">PPM_UNINSTALL_EXEC</target>
        </trans-unit>
        <trans-unit id="d8ecd82333fa046b1554ecfb6fa4f6ddcc33fe7c" translate="yes" xml:space="preserve">
          <source>PPM_UNINSTALL_SCRIPT</source>
          <target state="translated">PPM_UNINSTALL_SCRIPT</target>
        </trans-unit>
        <trans-unit id="f581395efe2773e539af041b5a27fa1d0df00b1e" translate="yes" xml:space="preserve">
          <source>PRE-STRING</source>
          <target state="translated">PRE-STRING</target>
        </trans-unit>
        <trans-unit id="7840941760ebcd9fee13ec0f1666aa06fbb11bc3" translate="yes" xml:space="preserve">
          <source>PREAMBLE</source>
          <target state="translated">PREAMBLE</target>
        </trans-unit>
        <trans-unit id="69db2c13c51cc2aaf32e02ecde5988835599fa47" translate="yes" xml:space="preserve">
          <source>PREBUILT BINARIES OF PERL FOR SOLARIS.</source>
          <target state="translated">SOLARISのためのPERLのプレビルドバイナリ。</target>
        </trans-unit>
        <trans-unit id="2359029764e2a09b32c48fea4348d906d2342f23" translate="yes" xml:space="preserve">
          <source>PREFACE</source>
          <target state="translated">PREFACE</target>
        </trans-unit>
        <trans-unit id="890121a7a9c78fd5d5d495e5aa9c86c681e6fbbb" translate="yes" xml:space="preserve">
          <source>PREFIX</source>
          <target state="translated">PREFIX</target>
        </trans-unit>
        <trans-unit id="4772fd326573fd42e768a1b15dd58bbb9cc8b317" translate="yes" xml:space="preserve">
          <source>PREFIX and LIB attribute</source>
          <target state="translated">PREFIXとLIB属性</target>
        </trans-unit>
        <trans-unit id="c6ea2417cccb8facb1f2ec2c030cf1e5c2fcb2f6" translate="yes" xml:space="preserve">
          <source>PREFIX and LIB can be used to set several INSTALL* attributes in one go. Here's an example for installing into your home directory.</source>
          <target state="translated">PREFIXとLIBを使うと、複数のINSTALL*属性を一括で設定することができます。ホームディレクトリにインストールする場合の例です。</target>
        </trans-unit>
        <trans-unit id="40aa4e60b9a6d17247b06ec0bb028f55b0430593" translate="yes" xml:space="preserve">
          <source>PREFIX is the name of the SYMREF you're walking.</source>
          <target state="translated">PREFIXは歩いているSYMREFの名前です。</target>
        </trans-unit>
        <trans-unit id="9bf165ae0cf9c95cc4700f79948abefc55e94ba2" translate="yes" xml:space="preserve">
          <source>PREFIX vs INSTALL_BASE from Module::Build::Cookbook</source>
          <target state="translated">Module::Build::Cookbook の PREFIX と INSTALL_BASE の比較</target>
        </trans-unit>
        <trans-unit id="300c67e39443a38d0f595a8a987e17d646e3c291" translate="yes" xml:space="preserve">
          <source>PREFS</source>
          <target state="translated">PREFS</target>
        </trans-unit>
        <trans-unit id="9bc7b53b4ddb9c0604309a8f097387c59f61cafb" translate="yes" xml:space="preserve">
          <source>PREPARING TO USE LOCALES</source>
          <target state="translated">ロケールを使用するための準備</target>
        </trans-unit>
        <trans-unit id="281d6f01426cc7b0d2d1be7a9e3ef9753991bf8a" translate="yes" xml:space="preserve">
          <source>PREREQUISITES</source>
          <target state="translated">PREREQUISITES</target>
        </trans-unit>
        <trans-unit id="109e7210182e5f1a38490846d4f7c1bf6d1efeaf" translate="yes" xml:space="preserve">
          <source>PREREQUISITES FOR COMPILING PERL ON CYGWIN</source>
          <target state="translated">CYGWINのPERLをコンパイルするための前提条件</target>
        </trans-unit>
        <trans-unit id="631154b345aa3eeebbb9ab224187fa1d00f58ec0" translate="yes" xml:space="preserve">
          <source>PREREQ_FATAL</source>
          <target state="translated">PREREQ_FATAL</target>
        </trans-unit>
        <trans-unit id="cc36dd5ce565a7cb948811b12f17cd998c1af8a3" translate="yes" xml:space="preserve">
          <source>PREREQ_PM</source>
          <target state="translated">PREREQ_PM</target>
        </trans-unit>
        <trans-unit id="17211ee0ce1ee1a431f47188755a25af7e95ddfb" translate="yes" xml:space="preserve">
          <source>PREREQ_PRINT</source>
          <target state="translated">PREREQ_PRINT</target>
        </trans-unit>
        <trans-unit id="049a53126896f9ee9235f6cd3a06e36d43ae1ed3" translate="yes" xml:space="preserve">
          <source>PREVIOUS</source>
          <target state="translated">PREVIOUS</target>
        </trans-unit>
        <trans-unit id="887506d429affdf4577f2dad5a84967ff613f079" translate="yes" xml:space="preserve">
          <source>PRINT this, LIST</source>
          <target state="translated">これを印刷します。</target>
        </trans-unit>
        <trans-unit id="52b70c55e20c39ea4a8910e43c08c5a1a3cf5939" translate="yes" xml:space="preserve">
          <source>PRINTF this, LIST</source>
          <target state="translated">PRINTF this,LIST</target>
        </trans-unit>
        <trans-unit id="4892b6aa3144eac6b208bf2c1cb9ec283de1eb47" translate="yes" xml:space="preserve">
          <source>PRINTF this, format, LIST</source>
          <target state="translated">PRINTF this,format,LIST</target>
        </trans-unit>
        <trans-unit id="d3808058ed9e406c9c9ccb514d07d07d63bd4a1a" translate="yes" xml:space="preserve">
          <source>PRINT_PREREQ</source>
          <target state="translated">PRINT_PREREQ</target>
        </trans-unit>
        <trans-unit id="b0b7ba4666a92774e0d1afe02f2e20982b307a35" translate="yes" xml:space="preserve">
          <source>PRIVATE</source>
          <target state="translated">PRIVATE</target>
        </trans-unit>
        <trans-unit id="d596e5c41b06e835a227eaeb7f80e95e078526da" translate="yes" xml:space="preserve">
          <source>PRIVATE METHODS AND DATA</source>
          <target state="translated">プライベートメソッドとデータ</target>
        </trans-unit>
        <trans-unit id="bf099c2f51b2f30ab3cd4d430d41314704aaefea" translate="yes" xml:space="preserve">
          <source>PRN</source>
          <target state="translated">PRN</target>
        </trans-unit>
        <trans-unit id="28128cb215ccf5b12e0dff7a0c33d632bc940a28" translate="yes" xml:space="preserve">
          <source>PROBES</source>
          <target state="translated">PROBES</target>
        </trans-unit>
        <trans-unit id="9f903b4f167ea635d9adabe61a39c7254588d35a" translate="yes" xml:space="preserve">
          <source>PROCESS</source>
          <target state="translated">PROCESS</target>
        </trans-unit>
        <trans-unit id="bd58afa2d210ca492e6069543fe6348628d2a473" translate="yes" xml:space="preserve">
          <source>PRODUCTTYPE provides additional information about the system. It should be one of the following integer values:</source>
          <target state="translated">PRODUCTTYPE は、システムに関する追加情報を提供します。以下の整数値のいずれかである必要があります。</target>
        </trans-unit>
        <trans-unit id="924eaf1172c6dafd288f2618c0a1efe247bb92db" translate="yes" xml:space="preserve">
          <source>PROFILING</source>
          <target state="translated">PROFILING</target>
        </trans-unit>
        <trans-unit id="85dfd02e93a90ca8a93ed7e5af4995f7549887d0" translate="yes" xml:space="preserve">
          <source>PROFILING TOOLS</source>
          <target state="translated">プロファイルツール</target>
        </trans-unit>
        <trans-unit id="9e3a8f7206c88ef34624181efda07f832c576870" translate="yes" xml:space="preserve">
          <source>PROGRAMMER'S INTERFACE</source>
          <target state="translated">プログラマのインターフェース</target>
        </trans-unit>
        <trans-unit id="0e45003b98a7dec4792e15961899b4d4a9444502" translate="yes" xml:space="preserve">
          <source>PROTOCV</source>
          <target state="translated">PROTOCV</target>
        </trans-unit>
        <trans-unit id="1042ce14dc94ead28c8d4cf2fe6af4af4e7b1c1d" translate="yes" xml:space="preserve">
          <source>PROVIDED BY HASH BASE</source>
          <target state="translated">提供:ハッシュベース</target>
        </trans-unit>
        <trans-unit id="577a025eaaf1a5d1117d65778ab9be225bda833c" translate="yes" xml:space="preserve">
          <source>PROXY SUPPORT</source>
          <target state="translated">プロキシサポート</target>
        </trans-unit>
        <trans-unit id="8921f284e1641a8d70be64de299d5e0a94c6b03e" translate="yes" xml:space="preserve">
          <source>PROXYSUBS</source>
          <target state="translated">PROXYSUBS</target>
        </trans-unit>
        <trans-unit id="9e97d57f23d497e98a3c17e698f142751c84db81" translate="yes" xml:space="preserve">
          <source>PSEUDO RESPONSES</source>
          <target state="translated">末尾の返事</target>
        </trans-unit>
        <trans-unit id="e5774205e1c438a7dce76aec5e8d405647cc437c" translate="yes" xml:space="preserve">
          <source>PTR</source>
          <target state="translated">PTR</target>
        </trans-unit>
        <trans-unit id="59b6d82c96a6ad525ea2e87882171960ba72c80f" translate="yes" xml:space="preserve">
          <source>PUSH this, LIST</source>
          <target state="translated">PUSH this,LIST</target>
        </trans-unit>
        <trans-unit id="dd4d85a958623a5705575960b9b4ae857188fa7f" translate="yes" xml:space="preserve">
          <source>PUSHCOLOR, POPCOLOR, and LOCALCOLOR were contributed by openmethods.com voice solutions.</source>
          <target state="translated">PUSHCOLOR、POPCOLOR、LOCALCOLORはopenmethods.comの音声ソリューションから提供されました。</target>
        </trans-unit>
        <trans-unit id="7ccb58529f4dd4bec9c195e9698a530285c95210" translate="yes" xml:space="preserve">
          <source>PUSHMARK</source>
          <target state="translated">PUSHMARK</target>
        </trans-unit>
        <trans-unit id="e0959236ce9e6a3ee6d0536ef1b5d41c25bdc287" translate="yes" xml:space="preserve">
          <source>PUSH_MULTICALL</source>
          <target state="translated">PUSH_MULTICALL</target>
        </trans-unit>
        <trans-unit id="d2fc71d468598e7e17d7a4694787b20bfb19bcc9" translate="yes" xml:space="preserve">
          <source>PUSHi</source>
          <target state="translated">PUSHi</target>
        </trans-unit>
        <trans-unit id="d15a3485a9c1b5329a46d5893c013245bf25dd58" translate="yes" xml:space="preserve">
          <source>PUSHmortal</source>
          <target state="translated">PUSHmortal</target>
        </trans-unit>
        <trans-unit id="b5352ca889b861909f1a55c37c2d94630bbaed77" translate="yes" xml:space="preserve">
          <source>PUSHn</source>
          <target state="translated">PUSHn</target>
        </trans-unit>
        <trans-unit id="6bb691543b344c21498b93ac1a6f1ded600df37b" translate="yes" xml:space="preserve">
          <source>PUSHp</source>
          <target state="translated">PUSHp</target>
        </trans-unit>
        <trans-unit id="cf9f5d61ca9b817693abc1251411248b1fc53bf8" translate="yes" xml:space="preserve">
          <source>PUSHs</source>
          <target state="translated">PUSHs</target>
        </trans-unit>
        <trans-unit id="cf409a219f683f1aed78e90c713fe1352afb43db" translate="yes" xml:space="preserve">
          <source>PUSHu</source>
          <target state="translated">PUSHu</target>
        </trans-unit>
        <trans-unit id="8e24a802cdd0ad94b85001d8faebf06f56fb0c32" translate="yes" xml:space="preserve">
          <source>PUTBACK</source>
          <target state="translated">PUTBACK</target>
        </trans-unit>
        <trans-unit id="13e54ce098168f1fa1db9a288e5396806317b03b" translate="yes" xml:space="preserve">
          <source>PV</source>
          <target state="translated">PV</target>
        </trans-unit>
        <trans-unit id="4f4fc2fe1cdfbd4b127686b3c4701bfcc8bf5850" translate="yes" xml:space="preserve">
          <source>PVN</source>
          <target state="translated">PVN</target>
        </trans-unit>
        <trans-unit id="ddf5f9373a1b439843920fd79d11c1d494464262" translate="yes" xml:space="preserve">
          <source>PVX</source>
          <target state="translated">PVX</target>
        </trans-unit>
        <trans-unit id="dbe7115eeb4102987d54e476c53cd399a6656a26" translate="yes" xml:space="preserve">
          <source>PVers</source>
          <target state="translated">PVers</target>
        </trans-unit>
        <trans-unit id="4db84d6ad2a10668614932a965ea5a3997c49335" translate="yes" xml:space="preserve">
          <source>Pack Recipes</source>
          <target state="translated">パックレシピ</target>
        </trans-unit>
        <trans-unit id="e5a69f2e40897b5daef39457bf875f755ff8707d" translate="yes" xml:space="preserve">
          <source>Pack and Unpack</source>
          <target state="translated">パックとアンパック</target>
        </trans-unit>
        <trans-unit id="ae88d737dc553c18917f526e7ed4fab3bcf7d255" translate="yes" xml:space="preserve">
          <source>Pack and unpack can operate in two modes: character mode (&lt;code&gt;C0&lt;/code&gt; mode) where the packed string is processed per character, and UTF-8 byte mode (&lt;code&gt;U0&lt;/code&gt; mode) where the packed string is processed in its UTF-8-encoded Unicode form on a byte-by-byte basis. Character mode is the default unless the format string starts with &lt;code&gt;U&lt;/code&gt; . You can always switch mode mid-format with an explicit &lt;code&gt;C0&lt;/code&gt; or &lt;code&gt;U0&lt;/code&gt; in the format. This mode remains in effect until the next mode change, or until the end of the &lt;code&gt;()&lt;/code&gt; group it (directly) applies to.</source>
          <target state="translated">パックおよびアンパックは、パックされた文字列が文字ごとに処理される文字モード（ &lt;code&gt;C0&lt;/code&gt; モード）と、パックされた文字列がUTF-8エンコードされたUnicode形式で処理されるUTF-8バイトモード（ &lt;code&gt;U0&lt;/code&gt; モード）の2つのモードで動作できます。バイト単位で。フォーマット文字列が &lt;code&gt;U&lt;/code&gt; で始まっていない限り、文字モードがデフォルトです。フォーマットで明示的な &lt;code&gt;C0&lt;/code&gt; または &lt;code&gt;U0&lt;/code&gt; を使用して、常にフォーマットの途中でモードを切り替えることができます。このモードは、次のモードが変更されるまで、または（直接）適用される &lt;code&gt;()&lt;/code&gt; グループの終わりまで有効です。</target>
        </trans-unit>
        <trans-unit id="6e3eb6050cd406a98ecf6801a69ce89a46275ed4" translate="yes" xml:space="preserve">
          <source>Pack and unpack can operate in two modes: character mode (&lt;code&gt;C0&lt;/code&gt; mode) where the packed string is processed per character, and UTF-8 byte mode (&lt;code&gt;U0&lt;/code&gt; mode) where the packed string is processed in its UTF-8-encoded Unicode form on a byte-by-byte basis. Character mode is the default unless the format string starts with &lt;code&gt;U&lt;/code&gt;. You can always switch mode mid-format with an explicit &lt;code&gt;C0&lt;/code&gt; or &lt;code&gt;U0&lt;/code&gt; in the format. This mode remains in effect until the next mode change, or until the end of the &lt;code&gt;()&lt;/code&gt; group it (directly) applies to.</source>
          <target state="translated">パックとアンパックは、パックされた文字列が文字ごとに処理される文字モード（ &lt;code&gt;C0&lt;/code&gt; モード）と、パックされた文字列がUTF-8でエンコードされたUnicode形式で処理されるUTF-8バイトモード（ &lt;code&gt;U0&lt;/code&gt; モード）の2つのモードで動作できます。バイト単位。フォーマット文字列が &lt;code&gt;U&lt;/code&gt; で始まらない限り、文字モードがデフォルトです。フォーマット内の明示的な &lt;code&gt;C0&lt;/code&gt; または &lt;code&gt;U0&lt;/code&gt; を使用して、いつでもフォーマットの途中でモードを切り替えることができます。このモードは、次のモードが変更されるまで、またはそれが（直接）適用される &lt;code&gt;()&lt;/code&gt; グループの終わりまで有効です。</target>
        </trans-unit>
        <trans-unit id="1557120d5088a59d57273db042de727192d13fe4" translate="yes" xml:space="preserve">
          <source>Package &lt;code&gt;overload.pm&lt;/code&gt; provides the following public functions:</source>
          <target state="translated">パッケージ &lt;code&gt;overload.pm&lt;/code&gt; は、次のパブリック関数を提供します。</target>
        </trans-unit>
        <trans-unit id="854d1d4510ef2ba36738b3c6bee00faff7d95b8e" translate="yes" xml:space="preserve">
          <source>Package Lexicals</source>
          <target state="translated">パッケージ語彙</target>
        </trans-unit>
        <trans-unit id="2c11074689b7e2ad2c208b4e9d700f62e8d77364" translate="yes" xml:space="preserve">
          <source>Package for overloading Perl operations</source>
          <target state="translated">Perl 操作をオーバーロードするためのパッケージ</target>
        </trans-unit>
        <trans-unit id="0bb1778e3f25a2a84d101d6e9168311f3de452b1" translate="yes" xml:space="preserve">
          <source>Package lexicals declared with &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; in the main block of a package using &lt;b&gt;AutoLoader&lt;/b&gt; will not be visible to auto-loaded subroutines, due to the fact that the given scope ends at the &lt;code&gt;__END__&lt;/code&gt; marker. A module using such variables as package globals will not work properly under the &lt;b&gt;AutoLoader&lt;/b&gt;.</source>
          <target state="translated">パッケージのレキシカルがで宣言された &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; 使用して、パッケージのメインブロックで&lt;b&gt;オートローダーを&lt;/b&gt;伴う事実のために、自動ロードサブルーチンには表示されませんで指定されたスコープが終了すること &lt;code&gt;__END__&lt;/code&gt; のマーカー。パッケージグローバルなどの変数を使用するモジュールは、&lt;b&gt;オートローダー&lt;/b&gt;では正しく動作しません。</target>
        </trans-unit>
        <trans-unit id="bb7c7fc91718f394864d4df79b8d81e469c31729" translate="yes" xml:space="preserve">
          <source>Package lexicals declared with &lt;code&gt;my&lt;/code&gt; in the main block of a package using &lt;b&gt;AutoLoader&lt;/b&gt; will not be visible to auto-loaded subroutines, due to the fact that the given scope ends at the &lt;code&gt;__END__&lt;/code&gt; marker. A module using such variables as package globals will not work properly under the &lt;b&gt;AutoLoader&lt;/b&gt;.</source>
          <target state="translated">パッケージのレキシカルがで宣言された &lt;code&gt;my&lt;/code&gt; 使用して、パッケージのメインブロックで&lt;b&gt;オートローダーを&lt;/b&gt;伴う事実のために、自動ロードサブルーチンには表示されませんで指定されたスコープが終了すること &lt;code&gt;__END__&lt;/code&gt; のマーカー。パッケージグローバルなどの変数を使用するモジュールは、&lt;b&gt;AutoLoaderでは&lt;/b&gt;正しく機能しません。</target>
        </trans-unit>
        <trans-unit id="61fda0710845c0ff2e124df892b08c2fdc3b0249" translate="yes" xml:space="preserve">
          <source>Package names are sometimes an exception to this rule. Perl informally reserves lowercase module names for &quot;pragma&quot; modules like &lt;code&gt;integer&lt;/code&gt; and &lt;code&gt;strict&lt;/code&gt; . Other modules should begin with a capital letter and use mixed case, but probably without underscores due to limitations in primitive file systems' representations of module names as files that must fit into a few sparse bytes.</source>
          <target state="translated">パッケージ名は、このルールの例外になる場合があります。Perlは、 &lt;code&gt;integer&lt;/code&gt; や &lt;code&gt;strict&lt;/code&gt; などの「pragma」モジュール用に小文字のモジュール名を非公式に予約します。その他のモジュールは大文字で始め、大文字と小文字を混在させる必要がありますが、数個の疎バイトに収まるファイルとしてのモジュール名のプリミティブファイルシステムの表現に制限があるため、アンダースコアはおそらくないでしょう。</target>
        </trans-unit>
        <trans-unit id="4c33b515a6c281a7a7457121b95c01504122af95" translate="yes" xml:space="preserve">
          <source>Package names are sometimes an exception to this rule. Perl informally reserves lowercase module names for &quot;pragma&quot; modules like &lt;code&gt;integer&lt;/code&gt; and &lt;code&gt;strict&lt;/code&gt;. Other modules should begin with a capital letter and use mixed case, but probably without underscores due to limitations in primitive file systems' representations of module names as files that must fit into a few sparse bytes.</source>
          <target state="translated">パッケージ名は、この規則の例外である場合があります。Perlは、 &lt;code&gt;integer&lt;/code&gt; や &lt;code&gt;strict&lt;/code&gt; などの「プラグマ」モジュール用に小文字のモジュール名を非公式に予約しています。他のモジュールは大文字で始まり、大文字と小文字を混在させる必要がありますが、プリミティブファイルシステムのモジュール名の数個のスパースバイトに収まらなければならないファイルとしての表現に制限があるため、おそらくアンダースコアはありません。</target>
        </trans-unit>
        <trans-unit id="017a94912f4272ea63da9e237abc82a6ecd1cbbc" translate="yes" xml:space="preserve">
          <source>Package namespace of currently executing code.</source>
          <target state="translated">現在実行中のコードのパッケージの名前空間。</target>
        </trans-unit>
        <trans-unit id="b77eb8988a1d4f067854db5e1f2b1a7c6ddf5108" translate="yes" xml:space="preserve">
          <source>Package the module using &quot;make dist&quot;</source>
          <target state="translated">make dist&quot; を使ってモジュールをパッケージ化します。</target>
        </trans-unit>
        <trans-unit id="dadc452bc83dd321cf9ff63134d60199b40bf1bd" translate="yes" xml:space="preserve">
          <source>Package-specific Attribute Handling</source>
          <target state="translated">パッケージ固有の属性処理</target>
        </trans-unit>
        <trans-unit id="1b6b83de2c1ebd183fc9268fc7fc44ce0413fd67" translate="yes" xml:space="preserve">
          <source>Package/Module names are an exception to this rule. Perl informally reserves lowercase module names for 'pragma' modules like integer and strict. Other modules normally begin with a capital letter and use mixed case with no underscores (need to be short and portable).</source>
          <target state="translated">パッケージ/モジュール名はこのルールの例外です。Perl は非公式に、integer や strict のような 'pragma' モジュールのために小文字のモジュール名を予約しています。その他のモジュールは通常大文字で始まり、アンダースコアを使わずに大文字と小文字を混在させて使用します (短くて移植性の高いものにする必要があります)。</target>
        </trans-unit>
        <trans-unit id="0a999012ffb87b3edac99adbdfc498b12831a1e2" translate="yes" xml:space="preserve">
          <source>Packages</source>
          <target state="translated">Packages</target>
        </trans-unit>
        <trans-unit id="dcec9cb396ed550d472d01c925021db01eb054ef" translate="yes" xml:space="preserve">
          <source>Packages claim that there won't be errors on calls to or from packages explicitly marked as safe by inclusion in &lt;code&gt;@CARP_NOT&lt;/code&gt; , or (if that array is empty) &lt;code&gt;@ISA&lt;/code&gt; . The ability to override what @ISA says is new in 5.8.</source>
          <target state="translated">パッケージは、 &lt;code&gt;@CARP_NOT&lt;/code&gt; または（その配列が空の場合） &lt;code&gt;@ISA&lt;/code&gt; に含めることによって明示的に安全とマークされたパッケージへの呼び出しまたはパッケージからの呼び出しでエラーは発生しないと主張しています。@ISAの発言を上書きする機能は5.8の新機能です。</target>
        </trans-unit>
        <trans-unit id="d20bf1497d93a5413cd140ff9c5fd0ea3f605c1b" translate="yes" xml:space="preserve">
          <source>Packages claim that there won't be errors on calls to or from packages explicitly marked as safe by inclusion in &lt;code&gt;@CARP_NOT&lt;/code&gt;, or (if that array is empty) &lt;code&gt;@ISA&lt;/code&gt;. The ability to override what @ISA says is new in 5.8.</source>
          <target state="translated">パッケージは、 &lt;code&gt;@CARP_NOT&lt;/code&gt; 、または（その配列が空の場合） &lt;code&gt;@ISA&lt;/code&gt; に含めることによって、明示的に安全としてマークされたパッケージとの間の呼び出しでエラーが発生しないと主張しています。 @ISAの発言を上書きする機能は、5.8の新機能です。</target>
        </trans-unit>
        <trans-unit id="ecc8e8a892ee953e2d150356ce7f795f7e40a13f" translate="yes" xml:space="preserve">
          <source>Packages may themselves contain package separators, as in &lt;code&gt;$OUTER::INNER::var&lt;/code&gt; . This implies nothing about the order of name lookups, however. There are no relative packages: all symbols are either local to the current package, or must be fully qualified from the outer package name down. For instance, there is nowhere within package &lt;code&gt;OUTER&lt;/code&gt; that &lt;code&gt;$INNER::var&lt;/code&gt; refers to &lt;code&gt;$OUTER::INNER::var&lt;/code&gt; . &lt;code&gt;INNER&lt;/code&gt; refers to a totally separate global package.</source>
          <target state="translated">&lt;code&gt;$OUTER::INNER::var&lt;/code&gt; ように、パッケージ自体にパッケージセパレータを含めることができます。ただし、これは名前検索の順序については何も意味しません。相対パッケージはありません。すべてのシンボルは現在のパッケージに対してローカルであるか、外部パッケージ名から完全に修飾されている必要があります。例えば、パッケージの中にどこにもありません &lt;code&gt;OUTER&lt;/code&gt; こと &lt;code&gt;$INNER::var&lt;/code&gt; を参照 &lt;code&gt;$OUTER::INNER::var&lt;/code&gt; 。 &lt;code&gt;INNER&lt;/code&gt; は、完全に別のグローバルパッケージを指します。</target>
        </trans-unit>
        <trans-unit id="9d9b3ad57ead6c56277a14fb85e24b4eb5daf19c" translate="yes" xml:space="preserve">
          <source>Packages may themselves contain package separators, as in &lt;code&gt;$OUTER::INNER::var&lt;/code&gt;. This implies nothing about the order of name lookups, however. There are no relative packages: all symbols are either local to the current package, or must be fully qualified from the outer package name down. For instance, there is nowhere within package &lt;code&gt;OUTER&lt;/code&gt; that &lt;code&gt;$INNER::var&lt;/code&gt; refers to &lt;code&gt;$OUTER::INNER::var&lt;/code&gt;. &lt;code&gt;INNER&lt;/code&gt; refers to a totally separate global package. The custom of treating package names as a hierarchy is very strong, but the language in no way enforces it.</source>
          <target state="translated">&lt;code&gt;$OUTER::INNER::var&lt;/code&gt; ように、パッケージ自体にパッケージセパレータを含めることができます。ただし、これは名前検索の順序については何も意味しません。相対パッケージはありません。すべてのシンボルは現在のパッケージに対してローカルであるか、外部パッケージ名から完全に修飾されている必要があります。たとえば、パッケージ &lt;code&gt;OUTER&lt;/code&gt; 内には、 &lt;code&gt;$INNER::var&lt;/code&gt; が &lt;code&gt;$OUTER::INNER::var&lt;/code&gt; 参照する場所はありません。 &lt;code&gt;INNER&lt;/code&gt; は、完全に別個のグローバルパッケージを指します。パッケージ名を階層として扱う習慣は非常に強力ですが、言語がそれを強制することは決してありません。</target>
        </trans-unit>
        <trans-unit id="5c700aceea5d157561b207ea0b138ca42d93986c" translate="yes" xml:space="preserve">
          <source>Packages should NOT be released with succeeding TODO tests. As soon as a TODO test starts working, it should be promoted to a normal test, and the newly working feature should be documented in the release notes or in the change log.</source>
          <target state="translated">パッケージは、成功した TODO テストと一緒にリリースされるべきではありません。TODO テストが動作を開始したらすぐに通常のテストに移行し、 新たに動作した機能はリリースノートや変更ログに文書化すべきです。</target>
        </trans-unit>
        <trans-unit id="f9b3a92a4e9c473029e482a2d030dd34f7fdde67" translate="yes" xml:space="preserve">
          <source>Packages such as the &lt;b&gt;AutoLoader&lt;/b&gt; and &lt;b&gt;SelfLoader&lt;/b&gt; that delay loading of subroutines within packages can create problems with package lexicals defined using &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my()&lt;/a&gt;&lt;/code&gt;. While the &lt;b&gt;vars&lt;/b&gt; pragma cannot duplicate the effect of package lexicals (total transparency outside of the package), it can act as an acceptable substitute by pre-declaring global symbols, ensuring their availability to the later-loaded routines.</source>
          <target state="translated">以下のようなパッケージ&lt;b&gt;オートローダー&lt;/b&gt;と&lt;b&gt;のSelfLoader&lt;/b&gt;パッケージ内のサブルーチンの遅延ロードを使用して定義されたパッケージレキシカルで問題を作成することができることを &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my()&lt;/a&gt;&lt;/code&gt; 。ながら&lt;b&gt;varsの&lt;/b&gt;プラグマは、パッケージレキシカル（パッケージの総透明外）の効果を複製することができない、それは、後に、ロードされたルーチンへの可用性を確保し、事前宣言グローバルシンボルによって許容される代替物として作用することができます。</target>
        </trans-unit>
        <trans-unit id="b7558f6c8de9646e78a075fc1836fa56b470930b" translate="yes" xml:space="preserve">
          <source>Packages such as the &lt;b&gt;AutoLoader&lt;/b&gt; and &lt;b&gt;SelfLoader&lt;/b&gt; that delay loading of subroutines within packages can create problems with package lexicals defined using &lt;code&gt;my()&lt;/code&gt;. While the &lt;b&gt;vars&lt;/b&gt; pragma cannot duplicate the effect of package lexicals (total transparency outside of the package), it can act as an acceptable substitute by pre-declaring global symbols, ensuring their availability to the later-loaded routines.</source>
          <target state="translated">以下のようなパッケージ&lt;b&gt;オートローダー&lt;/b&gt;と&lt;b&gt;のSelfLoader&lt;/b&gt;パッケージ内のサブルーチンの遅延ロードを使用して定義されたパッケージレキシカルで問題を作成することができることを &lt;code&gt;my()&lt;/code&gt; 。ながら&lt;b&gt;varsの&lt;/b&gt;プラグマは、パッケージレキシカル（パッケージの総透明外）の効果を複製することができない、それは、後に、ロードされたルーチンへの可用性を確保し、事前宣言グローバルシンボルによって許容される代替物として作用することができます。</target>
        </trans-unit>
        <trans-unit id="3a39b68c35be609fae3db651a70893a29f102145" translate="yes" xml:space="preserve">
          <source>Packaging</source>
          <target state="translated">Packaging</target>
        </trans-unit>
        <trans-unit id="f6040caa38342b33a6e2561f81b6b745ebcb9010" translate="yes" xml:space="preserve">
          <source>Packaging Tools</source>
          <target state="translated">パッケージングツール</target>
        </trans-unit>
        <trans-unit id="ebd1d6c956dcaa7e80ad01427e2c132c913acd56" translate="yes" xml:space="preserve">
          <source>Packing Numbers</source>
          <target state="translated">パッキング番号</target>
        </trans-unit>
        <trans-unit id="77ff08af8cc464aced5aa97fba37b76b1a287c76" translate="yes" xml:space="preserve">
          <source>Packing Text</source>
          <target state="translated">パッキングテキスト</target>
        </trans-unit>
        <trans-unit id="1608f8af08441cd12fe9e2fbae53022489534f12" translate="yes" xml:space="preserve">
          <source>Packing and Unpacking C Structures</source>
          <target state="translated">C構造体のパッキングとアンパッキング</target>
        </trans-unit>
        <trans-unit id="755fc829fa6b30f5bd0dea1183fbb4e40f383943" translate="yes" xml:space="preserve">
          <source>Packing and unpacking numbers implies conversion to and from some</source>
          <target state="translated">数字のパッキングとアンパッキングは、いくつかの</target>
        </trans-unit>
        <trans-unit id="c9cf82b43fad60a42156fab44e3aea80e40a265e" translate="yes" xml:space="preserve">
          <source>Pad Data Structures</source>
          <target state="translated">パッドデータ構造</target>
        </trans-unit>
        <trans-unit id="123d72986f1326076d1df2d6aa17224a9fafb556" translate="yes" xml:space="preserve">
          <source>PadARRAY</source>
          <target state="translated">PadARRAY</target>
        </trans-unit>
        <trans-unit id="6ab3f0989a0f39333a4b2dbcd667b7772cb1ada6" translate="yes" xml:space="preserve">
          <source>PadMAX</source>
          <target state="translated">PadMAX</target>
        </trans-unit>
        <trans-unit id="c67c6deb7bd9a336d320eaceeb05dbc017d7c802" translate="yes" xml:space="preserve">
          <source>PadlistARRAY</source>
          <target state="translated">PadlistARRAY</target>
        </trans-unit>
        <trans-unit id="e531b08237a313ac9570d6ab5e7897d5b4965bfa" translate="yes" xml:space="preserve">
          <source>PadlistMAX</source>
          <target state="translated">PadlistMAX</target>
        </trans-unit>
        <trans-unit id="212c9ab29164396a05288584651f54b83a1c2948" translate="yes" xml:space="preserve">
          <source>PadlistNAMES</source>
          <target state="translated">PadlistNAMES</target>
        </trans-unit>
        <trans-unit id="21b0767549eb35f3d1de66be5e282df8e642f935" translate="yes" xml:space="preserve">
          <source>PadlistNAMESARRAY</source>
          <target state="translated">PadlistNAMESARRAY</target>
        </trans-unit>
        <trans-unit id="54223c12c26f05412eb62c5e7956875ac8cae6f3" translate="yes" xml:space="preserve">
          <source>PadlistNAMESMAX</source>
          <target state="translated">PadlistNAMESMAX</target>
        </trans-unit>
        <trans-unit id="9e74cb94d3d55d6cbf4f2fa44915b69594117bac" translate="yes" xml:space="preserve">
          <source>PadlistREFCNT</source>
          <target state="translated">PadlistREFCNT</target>
        </trans-unit>
        <trans-unit id="a7b10636507a5a68b6694bbca861fc60a48e055a" translate="yes" xml:space="preserve">
          <source>PadnameIN_SCOPE</source>
          <target state="translated">PadnameIN_SCOPE</target>
        </trans-unit>
        <trans-unit id="cc8e270e7a9c533bb14376a86bef3446008c8951" translate="yes" xml:space="preserve">
          <source>PadnameIsOUR</source>
          <target state="translated">PadnameIsOUR</target>
        </trans-unit>
        <trans-unit id="3d6fcf8870d2892c3ad6af23232a8eedc497d603" translate="yes" xml:space="preserve">
          <source>PadnameIsSTATE</source>
          <target state="translated">PadnameIsSTATE</target>
        </trans-unit>
        <trans-unit id="3bfe6a3ab81303de1dd424695918dc31111bebf6" translate="yes" xml:space="preserve">
          <source>PadnameLEN</source>
          <target state="translated">PadnameLEN</target>
        </trans-unit>
        <trans-unit id="d5ee4cf55f70d283c51ac1b6f2ae864d3e0c5bca" translate="yes" xml:space="preserve">
          <source>PadnameOURSTASH</source>
          <target state="translated">PadnameOURSTASH</target>
        </trans-unit>
        <trans-unit id="c6ac24af93fa80d1188967d0f54e89993490b963" translate="yes" xml:space="preserve">
          <source>PadnameOUTER</source>
          <target state="translated">PadnameOUTER</target>
        </trans-unit>
        <trans-unit id="1d3f019c0fb2c999b6af7bade158be47170bc724" translate="yes" xml:space="preserve">
          <source>PadnamePV</source>
          <target state="translated">PadnamePV</target>
        </trans-unit>
        <trans-unit id="972528163239c0552d07d37c63dd06f516b217db" translate="yes" xml:space="preserve">
          <source>PadnameREFCNT</source>
          <target state="translated">PadnameREFCNT</target>
        </trans-unit>
        <trans-unit id="0fb47f90ebdf9f0e906883af08d0999da024b824" translate="yes" xml:space="preserve">
          <source>PadnameREFCNT_dec</source>
          <target state="translated">PadnameREFCNT_dec</target>
        </trans-unit>
        <trans-unit id="a9c00863c8508fae3aa4ebe7e413f193fa8509d6" translate="yes" xml:space="preserve">
          <source>PadnameSV</source>
          <target state="translated">PadnameSV</target>
        </trans-unit>
        <trans-unit id="7b5f15e254ca2c577194794322c3d731b90509cf" translate="yes" xml:space="preserve">
          <source>PadnameTYPE</source>
          <target state="translated">PadnameTYPE</target>
        </trans-unit>
        <trans-unit id="34d560188f4fb3795df43f18c051fc9eaeb85c64" translate="yes" xml:space="preserve">
          <source>PadnameUTF8</source>
          <target state="translated">PadnameUTF8</target>
        </trans-unit>
        <trans-unit id="795be7f256aaacc259d80df70d22855e11dd090b" translate="yes" xml:space="preserve">
          <source>PadnamelistARRAY</source>
          <target state="translated">PadnamelistARRAY</target>
        </trans-unit>
        <trans-unit id="5a966d6257c707351156955e91a4d2ade33a67c1" translate="yes" xml:space="preserve">
          <source>PadnamelistMAX</source>
          <target state="translated">PadnamelistMAX</target>
        </trans-unit>
        <trans-unit id="1693c067453bcbecb2dec48c56acc838378a5fbf" translate="yes" xml:space="preserve">
          <source>PadnamelistREFCNT</source>
          <target state="translated">PadnamelistREFCNT</target>
        </trans-unit>
        <trans-unit id="45773d9422f9ebe4fd8afc88a2547bc21feeb2a2" translate="yes" xml:space="preserve">
          <source>PadnamelistREFCNT_dec</source>
          <target state="translated">PadnamelistREFCNT_dec</target>
        </trans-unit>
        <trans-unit id="3f8dc4c8b2bcb62327df4e5a190aac976ed4de37" translate="yes" xml:space="preserve">
          <source>Padre</source>
          <target state="translated">Padre</target>
        </trans-unit>
        <trans-unit id="a949a19a50821443871b3357ef792d3486159a28" translate="yes" xml:space="preserve">
          <source>Padre is cross-platform IDE for Perl written in Perl using wxWidgets to provide a native look and feel. It's open source under the Artistic License. It is one of the newer Perl IDEs.</source>
          <target state="translated">Padreは、ネイティブなルックアンドフィールを提供するためにwxWidgetsを使用してPerlで書かれたPerl用のクロスプラットフォームIDEです。Artistic Licenseのオープンソースです。これは新しい Perl IDE の一つです。</target>
        </trans-unit>
        <trans-unit id="e71eceb99b088c6966163f1c30b69039a2bc1008" translate="yes" xml:space="preserve">
          <source>Pairs of arguments will always be preserved in a single command, this is a heuristic for things like pm_to_blib and pod2man which work on pairs of arguments. This makes things like this safe:</source>
          <target state="translated">これは pm_to_blib や pod2man のように引数のペアで動作するもののためのヒューリスティックなものです。これにより、このようなものが安全になります。</target>
        </trans-unit>
        <trans-unit id="9857d435b031875066b0cef286f5097a8f9dd6c3" translate="yes" xml:space="preserve">
          <source>Pali &amp;lt;pali@cpan.org&amp;gt;</source>
          <target state="translated">パリ&amp;lt;pali@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="6a74d0b33c52deb33630c75d846ae47130145559" translate="yes" xml:space="preserve">
          <source>Paragraph mode?</source>
          <target state="translated">パラグラフモード?</target>
        </trans-unit>
        <trans-unit id="25f56d90fcfd17280003892c8ccacdb0fa403726" translate="yes" xml:space="preserve">
          <source>Parallel Testing</source>
          <target state="translated">パラレルテスト</target>
        </trans-unit>
        <trans-unit id="8968f4cd8542e8f5dcc7b6c003f463e1278703a3" translate="yes" xml:space="preserve">
          <source>Parallel tests</source>
          <target state="translated">並列テスト</target>
        </trans-unit>
        <trans-unit id="e1dd1f36b3d11a080ec32ab7967d3c72b1acb694" translate="yes" xml:space="preserve">
          <source>Parameter passing</source>
          <target state="translated">パラメータの受け渡し</target>
        </trans-unit>
        <trans-unit id="c5a55bab9e3352eacabd04b4af1ceaafddafe1be" translate="yes" xml:space="preserve">
          <source>Parameters are passed to the Perl subroutine using the Perl stack. This is the purpose of the code beginning with the line &lt;code&gt;dSP&lt;/code&gt; and ending with the line &lt;code&gt;PUTBACK&lt;/code&gt; . The &lt;code&gt;dSP&lt;/code&gt; declares a local copy of the stack pointer. This local copy should &lt;b&gt;always&lt;/b&gt; be accessed as &lt;code&gt;SP&lt;/code&gt; .</source>
          <target state="translated">パラメータは、Perlスタックを使用してPerlサブルーチンに渡されます。これは、コード行で始まるの目的である &lt;code&gt;dSP&lt;/code&gt; とラインで終わる &lt;code&gt;PUTBACK&lt;/code&gt; 。 &lt;code&gt;dSP&lt;/code&gt; スタックポインタのローカルコピーを宣言します。このローカルコピーには、&lt;b&gt;常に&lt;/b&gt; &lt;code&gt;SP&lt;/code&gt; としてアクセスする必要&lt;b&gt;が&lt;/b&gt;あります。</target>
        </trans-unit>
        <trans-unit id="039963173f22fa5dd2b25081d6f805d1899ef724" translate="yes" xml:space="preserve">
          <source>Parameters are passed to the Perl subroutine using the Perl stack. This is the purpose of the code beginning with the line &lt;code&gt;dSP&lt;/code&gt; and ending with the line &lt;code&gt;PUTBACK&lt;/code&gt;. The &lt;code&gt;dSP&lt;/code&gt; declares a local copy of the stack pointer. This local copy should &lt;b&gt;always&lt;/b&gt; be accessed as &lt;code&gt;SP&lt;/code&gt;.</source>
          <target state="translated">パラメータは、Perlスタックを使用してPerlサブルーチンに渡されます。これは、コード行で始まるの目的である &lt;code&gt;dSP&lt;/code&gt; とラインで終わる &lt;code&gt;PUTBACK&lt;/code&gt; 。 &lt;code&gt;dSP&lt;/code&gt; スタックポインタのローカルコピーを宣言します。このローカルコピーには、&lt;b&gt;常に&lt;/b&gt; &lt;code&gt;SP&lt;/code&gt; としてアクセスする必要&lt;b&gt;が&lt;/b&gt;あります。</target>
        </trans-unit>
        <trans-unit id="80783f8285e6c8c2e9ad9134ffee91ec59453e8c" translate="yes" xml:space="preserve">
          <source>Parameters for the './Build install' command? Typical frequently used setting:</source>
          <target state="translated">./Build install' コマンドのパラメータは?一般的によく使われる設定です。</target>
        </trans-unit>
        <trans-unit id="1d97e41da27293ace4ed2fbd57ab78ff1ca66f70" translate="yes" xml:space="preserve">
          <source>Parameters for the './Build' command? Setting might be:</source>
          <target state="translated">./Build' コマンドのパラメータは?設定があるかもしれません。</target>
        </trans-unit>
        <trans-unit id="f5e610dc6ea79e1fa2fc73a9c4a9f25754369b4d" translate="yes" xml:space="preserve">
          <source>Parameters for the 'make install' command? Typical frequently used setting:</source>
          <target state="translated">make install' コマンドのパラメータは? 一般的によく使われる設定です。</target>
        </trans-unit>
        <trans-unit id="ac5f82546938b3fb52bd2ca5918d7cd917da5ad3" translate="yes" xml:space="preserve">
          <source>Parameters for the 'make' command? Typical frequently used setting:</source>
          <target state="translated">make' コマンドのパラメータは?一般的によく使われる設定です。</target>
        </trans-unit>
        <trans-unit id="2daf65e57908f6e4e34be353735de186e29fbed1" translate="yes" xml:space="preserve">
          <source>Parameters for the 'perl Build.PL' command?</source>
          <target state="translated">perl Build.PL」コマンドのパラメータは?</target>
        </trans-unit>
        <trans-unit id="f2122e9ae0f9d0d393a429df01b5fba0a3936055" translate="yes" xml:space="preserve">
          <source>Parameters for the 'perl Makefile.PL' command?</source>
          <target state="translated">perl Makefile.PL' コマンドのパラメータは?</target>
        </trans-unit>
        <trans-unit id="12a675963c2d259ddd1261e2417e886a181a761a" translate="yes" xml:space="preserve">
          <source>Parameters preceded by &lt;code&gt;IN_OUTLIST&lt;/code&gt; /&lt;code&gt;IN_OUT&lt;/code&gt; /&lt;code&gt;OUT&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;IN_OUTLIST&lt;/code&gt; / &lt;code&gt;IN_OUT&lt;/code&gt; / &lt;code&gt;OUT&lt;/code&gt; が前に付いているパラメーター</target>
        </trans-unit>
        <trans-unit id="af132ea1565870b9227b5a557f457d91cab94a81" translate="yes" xml:space="preserve">
          <source>Parameters preceded by &lt;code&gt;IN_OUTLIST&lt;/code&gt;/&lt;code&gt;IN_OUT&lt;/code&gt;/&lt;code&gt;OUT&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;IN_OUTLIST&lt;/code&gt; / &lt;code&gt;IN_OUT&lt;/code&gt; / &lt;code&gt;OUT&lt;/code&gt; が前に付いたパラメーター</target>
        </trans-unit>
        <trans-unit id="b0232bb8a39fafc143ca61d9de251f7dcdc27d0d" translate="yes" xml:space="preserve">
          <source>Parameters preceded by &lt;code&gt;OUTLIST&lt;/code&gt; /&lt;code&gt;IN_OUTLIST&lt;/code&gt; /&lt;code&gt;OUT&lt;/code&gt; /&lt;code&gt;IN_OUT&lt;/code&gt; keywords are considered to be used by the C subroutine</source>
          <target state="translated">&lt;code&gt;OUTLIST&lt;/code&gt; / &lt;code&gt;IN_OUTLIST&lt;/code&gt; / &lt;code&gt;OUT&lt;/code&gt; / &lt;code&gt;IN_OUT&lt;/code&gt; キーワードが前に付いているパラメーターは、Cサブルーチンによって使用されていると見なされます</target>
        </trans-unit>
        <trans-unit id="41ae2823f661f6ddef5e94291c2f12cd43c213a8" translate="yes" xml:space="preserve">
          <source>Parameters preceded by &lt;code&gt;OUTLIST&lt;/code&gt; keyword do not appear in the usage signature of the generated Perl function.</source>
          <target state="translated">&lt;code&gt;OUTLIST&lt;/code&gt; キーワードが前に付いているパラメーターは、生成されたPerl関数の使用法シグニチャーには表示されません。</target>
        </trans-unit>
        <trans-unit id="e627ee0ba269e94ed8c9e92c41a526c0f2674d9d" translate="yes" xml:space="preserve">
          <source>Parameters preceded by &lt;code&gt;OUTLIST&lt;/code&gt;/&lt;code&gt;IN_OUTLIST&lt;/code&gt;/&lt;code&gt;OUT&lt;/code&gt;/&lt;code&gt;IN_OUT&lt;/code&gt; keywords are considered to be used by the C subroutine</source>
          <target state="translated">&lt;code&gt;OUTLIST&lt;/code&gt; / &lt;code&gt;IN_OUTLIST&lt;/code&gt; / &lt;code&gt;OUT&lt;/code&gt; / &lt;code&gt;IN_OUT&lt;/code&gt; キーワードが前に付いているパラメーターは、Cサブルーチンによって使用されると見なされます。</target>
        </trans-unit>
        <trans-unit id="44ce2ab75a2d568796b9a81ad9fe53a999fb4475" translate="yes" xml:space="preserve">
          <source>Parameters with C pointer types can have different semantic: C functions with similar declarations</source>
          <target state="translated">C のポインタ型を持つパラメータは、異なる意味を持つことがあります。似たような宣言をするC言語の関数</target>
        </trans-unit>
        <trans-unit id="381c775599d6e4185d4410725809e360928357cd" translate="yes" xml:space="preserve">
          <source>Parameters:</source>
          <target state="translated">Parameters:</target>
        </trans-unit>
        <trans-unit id="626558c7945f5a0bd6dde776e79591456600acd2" translate="yes" xml:space="preserve">
          <source>Params::Check</source>
          <target state="translated">Params::Check</target>
        </trans-unit>
        <trans-unit id="3c31e71b866e2be1b160d9df7e242f80a1e4ff7c" translate="yes" xml:space="preserve">
          <source>Params::Check - A generic input parsing/checking mechanism.</source>
          <target state="translated">Params::Check-汎用的な入力解析/チェック機構。</target>
        </trans-unit>
        <trans-unit id="8e747ae27947e13afe9efbf29825a7aff5681ea5" translate="yes" xml:space="preserve">
          <source>Params::Check can do the following things for you:</source>
          <target state="translated">Params::Checkは以下のようなことができます。</target>
        </trans-unit>
        <trans-unit id="d2c3a97d4f65d97cc22a071d5d73380ed7818098" translate="yes" xml:space="preserve">
          <source>Params::Check is a generic input parsing/checking mechanism.</source>
          <target state="translated">Params::Check は、汎用的な入力解析/チェック機構です。</target>
        </trans-unit>
        <trans-unit id="d5dd3ad76489e8b35496ddb7e255ea649c4f1033" translate="yes" xml:space="preserve">
          <source>Parent-child threads</source>
          <target state="translated">親子スレッド</target>
        </trans-unit>
        <trans-unit id="6e0f712a26d9702481acdf9f4182bc13b7eedee9" translate="yes" xml:space="preserve">
          <source>Parentheses for capturing</source>
          <target state="translated">キャプチャ用のカッコ</target>
        </trans-unit>
        <trans-unit id="583ef2ca07fc8072b14b8a979137ff58f255360f" translate="yes" xml:space="preserve">
          <source>Parentheses missing around &quot;%s&quot; list</source>
          <target state="translated">括弧で囲まれた&quot;%s &quot;リストが見つかりません。</target>
        </trans-unit>
        <trans-unit id="0fcb11d8c3d4312636cc39b23c2f21a9a26545a6" translate="yes" xml:space="preserve">
          <source>Parrot</source>
          <target state="translated">Parrot</target>
        </trans-unit>
        <trans-unit id="f3350f0a17047f5a3aa07948204b506a6f7b873f" translate="yes" xml:space="preserve">
          <source>Parrot now uses C3</source>
          <target state="translated">オウムがC3を使用するようになりました</target>
        </trans-unit>
        <trans-unit id="d0fbfa8de02afefa98fdba99d8463786cb90e29d" translate="yes" xml:space="preserve">
          <source>Parse &lt;a href=&quot;Test::Harness::TAP&quot;&gt;TAP&lt;/a&gt; output</source>
          <target state="translated">&lt;a href=&quot;Test::Harness::TAP&quot;&gt;TAP&lt;/a&gt;出力の解析</target>
        </trans-unit>
        <trans-unit id="39fea3034dad6653f4f66f72da190aee39c9d313" translate="yes" xml:space="preserve">
          <source>Parse &lt;a href=&quot;http://search.cpan.org/perldoc/Test::Harness::TAP&quot;&gt;TAP&lt;/a&gt; output</source>
          <target state="translated">&lt;a href=&quot;http://search.cpan.org/perldoc/Test::Harness::TAP&quot;&gt;TAP&lt;/a&gt;出力の解析</target>
        </trans-unit>
        <trans-unit id="864de3b696d3e06b04ffd3f5a91d959dcce58e7a" translate="yes" xml:space="preserve">
          <source>Parse Call Graph and a Grammar</source>
          <target state="translated">解析呼び出しグラフと文法</target>
        </trans-unit>
        <trans-unit id="9712b394a0364a991bc67a7d52542c55240f7409" translate="yes" xml:space="preserve">
          <source>Parse META.yml and META.json CPAN metadata files</source>
          <target state="translated">META.yml と META.json CPAN メタデータファイルのパース</target>
        </trans-unit>
        <trans-unit id="00d969b75c5246184c1f10c93d4e0b0704ad883c" translate="yes" xml:space="preserve">
          <source>Parse Pod into a simple parse tree</source>
          <target state="translated">Podを単純な解析木に解析する</target>
        </trans-unit>
        <trans-unit id="ce3404387b94afbebba7dec68b6b2b2a625f85c8" translate="yes" xml:space="preserve">
          <source>Parse a $file and return what $VERSION is set to by the first assignment. It will return the string &quot;undef&quot; if it can't figure out what $VERSION is. $VERSION should be for all to see, so &lt;code&gt;&lt;a href=&quot;../functions/our&quot;&gt;our&lt;/a&gt; $VERSION&lt;/code&gt; or plain $VERSION are okay, but &lt;code&gt;&lt;a href=&quot;../functions/my&quot;&gt;my&lt;/a&gt; $VERSION&lt;/code&gt; is not.</source>
          <target state="translated">$ fileを解析し、最初の割り当てで$ VERSIONに設定されたものを返します。$ VERSIONが何であるかわからない場合は、文字列 &quot;undef&quot;を返します。$ VERSIONはすべての人に表示されるはずなので &lt;code&gt;&lt;a href=&quot;../functions/our&quot;&gt;our&lt;/a&gt; $VERSION&lt;/code&gt; または単純な$ VERSIONは問題ありませんが &lt;code&gt;&lt;a href=&quot;../functions/my&quot;&gt;my&lt;/a&gt; $VERSION&lt;/code&gt; は問題です。</target>
        </trans-unit>
        <trans-unit id="9825824f7bc42a01cf9af4f060a678d820a9438a" translate="yes" xml:space="preserve">
          <source>Parse a $file and return what $VERSION is set to by the first assignment. It will return the string &quot;undef&quot; if it can't figure out what $VERSION is. $VERSION should be for all to see, so &lt;code&gt;our $VERSION&lt;/code&gt; or plain $VERSION are okay, but &lt;code&gt;my $VERSION&lt;/code&gt; is not.</source>
          <target state="translated">$ fileを解析し、最初の割り当てによって設定された$ VERSIONを返します。 $ VERSIONが何であるかを理解できない場合は、文字列「undef」を返します。 $ VERSIONはすべての人に表示されるはずなので &lt;code&gt;our $VERSION&lt;/code&gt; またはプレーンな$ VERSIONは問題ありませんが &lt;code&gt;my $VERSION&lt;/code&gt; は問題ありません。</target>
        </trans-unit>
        <trans-unit id="ad88342fff52b537c53c546c60e5e4da39c0d95b" translate="yes" xml:space="preserve">
          <source>Parse a Perl arithmetic expression. This may contain operators of precedence down to the bit shift operators. The expression must be followed (and thus terminated) either by a comparison or lower-precedence operator or by something that would normally terminate an expression such as semicolon. If</source>
          <target state="translated">Perl の算術式を解析します。これには、ビットシフト演算子までの優先順位の演算子が含まれている場合があります。式は、比較演算子や優先順位の低い演算子、またはセミコロンのような通常は式を終了させるようなものによって続けられなければなりません(したがって終了しなければなりません)。もし</target>
        </trans-unit>
        <trans-unit id="4a91226709a5a8376e4f2805aef14aaac39e2251" translate="yes" xml:space="preserve">
          <source>Parse a Perl arithmetic expression. This may contain operators of precedence down to the bit shift operators. The expression must be followed (and thus terminated) either by a comparison or lower-precedence operator or by something that would normally terminate an expression such as semicolon. If &lt;code&gt;flags&lt;/code&gt; has the &lt;code&gt;PARSE_OPTIONAL&lt;/code&gt; bit set, then the expression is optional, otherwise it is mandatory. It is up to the caller to ensure that the dynamic parser state (&lt;a href=&quot;#PL_parser&quot;&gt;&quot;PL_parser&quot;&lt;/a&gt; et al) is correctly set to reflect the source of the code to be parsed and the lexical context for the expression.</source>
          <target state="translated">Perl算術式を解析します。これには、ビットシフト演算子までの優先順位の演算子が含まれる場合があります。式の後には、比較演算子または優先順位の低い演算子、または通常はセミコロンなどの式を終了するものが続く必要があります（したがって終了します）。 &lt;code&gt;flags&lt;/code&gt; に &lt;code&gt;PARSE_OPTIONAL&lt;/code&gt; ビットが設定されている場合、式はオプションです。それ以外の場合は必須です。動的パーサー状態（&lt;a href=&quot;#PL_parser&quot;&gt;「PL_parser」など&lt;/a&gt;）が、解析されるコードのソースと式の字句コンテキストを反映するように正しく設定されていることを確認するのは、呼び出し元の責任です。</target>
        </trans-unit>
        <trans-unit id="d13919626420ad4ba57c7f1e236f7e3f81a7aa3e" translate="yes" xml:space="preserve">
          <source>Parse a Perl list expression. This may contain operators of precedence down to the comma operator. The expression must be followed (and thus terminated) either by a low-precedence logic operator such as &lt;code&gt;or&lt;/code&gt; or by something that would normally terminate an expression such as semicolon. If</source>
          <target state="translated">Perlリスト式を解析します。これには、カンマ演算子までの優先順位の演算子が含まれる場合があります。式は、などの優先順位の低い論理演算子、 &lt;code&gt;or&lt;/code&gt; セミコロンなどの式を通常終了させるもののいずれかが続く（したがって終了する）必要があります。もし</target>
        </trans-unit>
        <trans-unit id="10f64d5597b6fabd875c1dbd39d49385041150e0" translate="yes" xml:space="preserve">
          <source>Parse a Perl list expression. This may contain operators of precedence down to the comma operator. The expression must be followed (and thus terminated) either by a low-precedence logic operator such as &lt;code&gt;or&lt;/code&gt; or by something that would normally terminate an expression such as semicolon. If &lt;code&gt;flags&lt;/code&gt; has the &lt;code&gt;PARSE_OPTIONAL&lt;/code&gt; bit set, then the expression is optional, otherwise it is mandatory. It is up to the caller to ensure that the dynamic parser state (&lt;a href=&quot;#PL_parser&quot;&gt;&quot;PL_parser&quot;&lt;/a&gt; et al) is correctly set to reflect the source of the code to be parsed and the lexical context for the expression.</source>
          <target state="translated">Perlリスト式を解析します。これには、コンマ演算子までの優先順位の演算子が含まれる場合があります。式の後には、 &lt;code&gt;or&lt;/code&gt; などの優先順位の低い論理演算子が続くか、セミコロンなどの式を通常は終了するものが続く必要があります。 &lt;code&gt;flags&lt;/code&gt; に &lt;code&gt;PARSE_OPTIONAL&lt;/code&gt; ビットが設定されている場合、式はオプションです。それ以外の場合は必須です。動的パーサー状態（&lt;a href=&quot;#PL_parser&quot;&gt;「PL_parser」など&lt;/a&gt;）が、解析されるコードのソースと式の字句コンテキストを反映するように正しく設定されていることを確認するのは、呼び出し元の責任です。</target>
        </trans-unit>
        <trans-unit id="73a31decc1f7a5c619a6729c16f491108de487bb" translate="yes" xml:space="preserve">
          <source>Parse a Perl term expression. This may contain operators of precedence down to the assignment operators. The expression must be followed (and thus terminated) either by a comma or lower-precedence operator or by something that would normally terminate an expression such as semicolon. If</source>
          <target state="translated">Perl の項式を解析します。これには、代入演算子に至るまでの優先順位の演算子が含まれている場合があります。式の後には、カンマや優先順位の低い演算子、またはセミコロンのような通常は式を終了させるようなものが続く必要があります(したがって終了します)。もし</target>
        </trans-unit>
        <trans-unit id="d257cd1d7a004b946af2b193d44931ec79a72964" translate="yes" xml:space="preserve">
          <source>Parse a Perl term expression. This may contain operators of precedence down to the assignment operators. The expression must be followed (and thus terminated) either by a comma or lower-precedence operator or by something that would normally terminate an expression such as semicolon. If &lt;code&gt;flags&lt;/code&gt; has the &lt;code&gt;PARSE_OPTIONAL&lt;/code&gt; bit set, then the expression is optional, otherwise it is mandatory. It is up to the caller to ensure that the dynamic parser state (&lt;a href=&quot;#PL_parser&quot;&gt;&quot;PL_parser&quot;&lt;/a&gt; et al) is correctly set to reflect the source of the code to be parsed and the lexical context for the expression.</source>
          <target state="translated">Perlの項式を解析します。これには、代入演算子までの優先順位の演算子が含まれる場合があります。式の後には、コンマまたは優先順位の低い演算子、または通常はセミコロンなどの式を終了するものを続ける必要があります（したがって、終了する必要があります）。 &lt;code&gt;flags&lt;/code&gt; に &lt;code&gt;PARSE_OPTIONAL&lt;/code&gt; ビットが設定されている場合、式はオプションです。それ以外の場合は必須です。動的パーサー状態（&lt;a href=&quot;#PL_parser&quot;&gt;「PL_parser」など&lt;/a&gt;）が、解析されるコードのソースと式の字句コンテキストを反映するように正しく設定されていることを確認するのは、呼び出し元の責任です。</target>
        </trans-unit>
        <trans-unit id="f18afcb1edddb348b2180364bbe566a7279041cb" translate="yes" xml:space="preserve">
          <source>Parse a sequence of zero or more Perl statements. These may be normal imperative statements, including optional labels, or declarations that have compile-time effect, or any mixture thereof. The statement sequence ends when a closing brace or end-of-file is encountered in a place where a new statement could have validly started. It is up to the caller to ensure that the dynamic parser state (&lt;a href=&quot;#PL_parser&quot;&gt;&quot;PL_parser&quot;&lt;/a&gt; et al) is correctly set to reflect the source of the code to be parsed and the lexical context for the statements.</source>
          <target state="translated">ゼロ個以上のPerlステートメントのシーケンスを解析します。これらは、オプションのラベル、コンパイル時の効果を持つ宣言、またはそれらの任意の組み合わせを含む、通常の命令ステートメントである可能性があります。ステートメントシーケンスは、新しいステートメントが有効に開始された可能性のある場所で閉じ中括弧またはファイルの終わりが検出されたときに終了します。動的パーサー状態（&lt;a href=&quot;#PL_parser&quot;&gt;「PL_parser」など&lt;/a&gt;）が、解析されるコードのソースとステートメントの字句コンテキストを反映するように正しく設定されていることを確認するのは、呼び出し元の責任です。</target>
        </trans-unit>
        <trans-unit id="03fd37a1b5d20bde462eaebffb2d4fbe34e1d46e" translate="yes" xml:space="preserve">
          <source>Parse a sequence of zero or more Perl statements. These may be normal imperative statements, including optional labels, or declarations that have compile-time effect, or any mixture thereof. The statement sequence ends when a closing brace or end-of-file is encountered in a place where a new statement could have validly started. It is up to the caller to ensure that the dynamic parser state (&lt;a href=&quot;#PL_parser&quot;&gt;PL_parser&lt;/a&gt; et al) is correctly set to reflect the source of the code to be parsed and the lexical context for the statements.</source>
          <target state="translated">0個以上のPerlステートメントのシーケンスを解析します。これらは、オプションのラベルを含む通常の命令ステートメント、コンパイル時の効果を持つ宣言、またはそれらの混合である可能性があります。ステートメントシーケンスは、新しいステートメントが有効に開始できた場所で中括弧またはファイルの終わりに遭遇すると終了します。解析されるコードのソースとステートメントの字句コンテキストを反映するように動的パーサー状態（&lt;a href=&quot;#PL_parser&quot;&gt;PL_parserなど&lt;/a&gt;）が正しく設定されていることを確認するのは、呼び出し元の責任です。</target>
        </trans-unit>
        <trans-unit id="ce089482d2db81fc038bc61d37035494dbd4a5e7" translate="yes" xml:space="preserve">
          <source>Parse a single complete Perl code block. This consists of an opening brace, a sequence of statements, and a closing brace. The block constitutes a lexical scope, so &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; variables and various compile-time effects can be contained within it. It is up to the caller to ensure that the dynamic parser state (&lt;a href=&quot;#PL_parser&quot;&gt;PL_parser&lt;/a&gt; et al) is correctly set to reflect the source of the code to be parsed and the lexical context for the statement.</source>
          <target state="translated">単一の完全なPerlコードブロックを解析します。これは、左中括弧、一連のステートメント、および右中括弧で構成されます。ブロックは字句スコープを構成するため &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; 変数とさまざまなコンパイル時の効果をブロック内に含めることができます。解析されるコードのソースとステートメントの字句コンテキストを反映するように動的パーサー状態（&lt;a href=&quot;#PL_parser&quot;&gt;PL_parserなど&lt;/a&gt;）が正しく設定されていることを確認するのは、呼び出し元の責任です。</target>
        </trans-unit>
        <trans-unit id="4369fa095beffe53377b021fe37c6b360b63db5c" translate="yes" xml:space="preserve">
          <source>Parse a single complete Perl code block. This consists of an opening brace, a sequence of statements, and a closing brace. The block constitutes a lexical scope, so &lt;code&gt;my&lt;/code&gt; variables and various compile-time effects can be contained within it. It is up to the caller to ensure that the dynamic parser state (&lt;a href=&quot;#PL_parser&quot;&gt;&quot;PL_parser&quot;&lt;/a&gt; et al) is correctly set to reflect the source of the code to be parsed and the lexical context for the statement.</source>
          <target state="translated">単一の完全なPerlコードブロックを解析します。これは、開始中括弧、一連のステートメント、および終了中括弧で構成されます。ブロックは字句スコープを構成するため &lt;code&gt;my&lt;/code&gt; 変数とさまざまなコンパイル時の効果をブロック内に含めることができます。動的パーサー状態（&lt;a href=&quot;#PL_parser&quot;&gt;「PL_parser」など&lt;/a&gt;）が、解析されるコードのソースとステートメントの字句コンテキストを反映するように正しく設定されていることを確認するのは、呼び出し元の責任です。</target>
        </trans-unit>
        <trans-unit id="9eba5130051b754a15b7c0146935178b7a793c12" translate="yes" xml:space="preserve">
          <source>Parse a single complete Perl expression. This allows the full expression grammar, including the lowest-precedence operators such as &lt;code&gt;or&lt;/code&gt; . The expression must be followed (and thus terminated) by a token that an expression would normally be terminated by: end-of-file, closing bracketing punctuation, semicolon, or one of the keywords that signals a postfix expression-statement modifier. If</source>
          <target state="translated">単一の完全なPerl式を解析します。これにより、 &lt;code&gt;or&lt;/code&gt; などの優先順位の最も低い演算子を含む完全な式文法が可能になります。式の後には、通常は式が終了するトークンが続く（したがって終了する）必要があります。ファイルの終わり、閉じ括弧、句読点、セミコロン、または後置式ステートメント修飾子を通知するキーワードの1つ。もし</target>
        </trans-unit>
        <trans-unit id="f7dcb5daf982306394f8b52803c54dd59ef20dee" translate="yes" xml:space="preserve">
          <source>Parse a single complete Perl expression. This allows the full expression grammar, including the lowest-precedence operators such as &lt;code&gt;or&lt;/code&gt;. The expression must be followed (and thus terminated) by a token that an expression would normally be terminated by: end-of-file, closing bracketing punctuation, semicolon, or one of the keywords that signals a postfix expression-statement modifier. If &lt;code&gt;flags&lt;/code&gt; has the &lt;code&gt;PARSE_OPTIONAL&lt;/code&gt; bit set, then the expression is optional, otherwise it is mandatory. It is up to the caller to ensure that the dynamic parser state (&lt;a href=&quot;#PL_parser&quot;&gt;&quot;PL_parser&quot;&lt;/a&gt; et al) is correctly set to reflect the source of the code to be parsed and the lexical context for the expression.</source>
          <target state="translated">単一の完全なPerl式を解析します。これにより、 &lt;code&gt;or&lt;/code&gt; などの最下位の演算子を含む完全な式の文法が可能になります。式の後には、式が通常終了するトークンが続く必要があります。トークンは、ファイルの終わり、角かっこで囲む句読点、セミコロン、または後置式ステートメント修飾子を示すキーワードの1つです。 &lt;code&gt;flags&lt;/code&gt; に &lt;code&gt;PARSE_OPTIONAL&lt;/code&gt; ビットが設定されている場合、式はオプションです。それ以外の場合は必須です。動的パーサー状態（&lt;a href=&quot;#PL_parser&quot;&gt;「PL_parser」など&lt;/a&gt;）が、解析されるコードのソースと式の字句コンテキストを反映するように正しく設定されていることを確認するのは、呼び出し元の責任です。</target>
        </trans-unit>
        <trans-unit id="d31d5eb2bdb4bf2f1954973be8740b5f7f02709e" translate="yes" xml:space="preserve">
          <source>Parse a single complete Perl statement. This may be a normal imperative statement or a declaration that has compile-time effect, and may include optional labels. It is up to the caller to ensure that the dynamic parser state (&lt;a href=&quot;#PL_parser&quot;&gt;&quot;PL_parser&quot;&lt;/a&gt; et al) is correctly set to reflect the source of the code to be parsed and the lexical context for the statement.</source>
          <target state="translated">単一の完全なPerlステートメントを解析します。これは、通常の命令ステートメントまたはコンパイル時の効果を持つ宣言であり、オプションのラベルが含まれている場合があります。動的パーサー状態（&lt;a href=&quot;#PL_parser&quot;&gt;「PL_parser」など&lt;/a&gt;）が、解析されるコードのソースとステートメントの字句コンテキストを反映するように正しく設定されていることを確認するのは、呼び出し元の責任です。</target>
        </trans-unit>
        <trans-unit id="58f6019da7384a5fca463ab30964f465a7e74317" translate="yes" xml:space="preserve">
          <source>Parse a single complete Perl statement. This may be a normal imperative statement or a declaration that has compile-time effect, and may include optional labels. It is up to the caller to ensure that the dynamic parser state (&lt;a href=&quot;#PL_parser&quot;&gt;PL_parser&lt;/a&gt; et al) is correctly set to reflect the source of the code to be parsed and the lexical context for the statement.</source>
          <target state="translated">単一の完全なPerlステートメントを解析します。これは、通常の命令ステートメントまたはコンパイル時の効果を持つ宣言であり、オプションのラベルを含めることができます。解析されるコードのソースとステートメントの字句コンテキストを反映するように動的パーサー状態（&lt;a href=&quot;#PL_parser&quot;&gt;PL_parserなど&lt;/a&gt;）が正しく設定されていることを確認するのは、呼び出し元の責任です。</target>
        </trans-unit>
        <trans-unit id="8c19660ac89b8f031661547b8d6a1a0a1b997fe1" translate="yes" xml:space="preserve">
          <source>Parse a single label, possibly optional, of the type that may prefix a Perl statement. It is up to the caller to ensure that the dynamic parser state (&lt;a href=&quot;#PL_parser&quot;&gt;&quot;PL_parser&quot;&lt;/a&gt; et al) is correctly set to reflect the source of the code to be parsed. If &lt;code&gt;flags&lt;/code&gt; has the &lt;code&gt;PARSE_OPTIONAL&lt;/code&gt; bit set, then the label is optional, otherwise it is mandatory.</source>
          <target state="translated">Perlステートメントの前に付ける可能性のあるタイプの単一のラベル（オプションの場合もある）を解析します。動的パーサー状態（&lt;a href=&quot;#PL_parser&quot;&gt;「PL_parser」など&lt;/a&gt;）が、解析されるコードのソースを反映するように正しく設定されていることを確認するのは、呼び出し元の責任です。 &lt;code&gt;flags&lt;/code&gt; に &lt;code&gt;PARSE_OPTIONAL&lt;/code&gt; ビットが設定されている場合、ラベルはオプションです。それ以外の場合は必須です。</target>
        </trans-unit>
        <trans-unit id="47cabbfacc2ecefb926eabaa7917ccc6eda5e749" translate="yes" xml:space="preserve">
          <source>Parse a single label, possibly optional, of the type that may prefix a Perl statement. It is up to the caller to ensure that the dynamic parser state (&lt;a href=&quot;#PL_parser&quot;&gt;PL_parser&lt;/a&gt; et al) is correctly set to reflect the source of the code to be parsed. If</source>
          <target state="translated">Perlステートメントの前に付けることができるタイプの単一のラベル（おそらくオプション）を解析します。解析されるコードのソースを反映するように動的パーサーの状態（&lt;a href=&quot;#PL_parser&quot;&gt;PL_parserなど&lt;/a&gt;）が正しく設定されていることを確認するのは、呼び出し元の責任です。もし</target>
        </trans-unit>
        <trans-unit id="48786a1adc62fb644b6b4c1c95df759a626f21b4" translate="yes" xml:space="preserve">
          <source>Parse a single unadorned Perl statement. This may be a normal imperative statement or a declaration that has compile-time effect. It does not include any label or other affixture. It is up to the caller to ensure that the dynamic parser state (&lt;a href=&quot;#PL_parser&quot;&gt;&quot;PL_parser&quot;&lt;/a&gt; et al) is correctly set to reflect the source of the code to be parsed and the lexical context for the statement.</source>
          <target state="translated">装飾されていないPerlステートメントを1つ解析します。これは、通常の命令ステートメントまたはコンパイル時の効果を持つ宣言である可能性があります。ラベルやその他の付属品は含まれていません。動的パーサー状態（&lt;a href=&quot;#PL_parser&quot;&gt;「PL_parser」など&lt;/a&gt;）が、解析されるコードのソースとステートメントの字句コンテキストを反映するように正しく設定されていることを確認するのは、呼び出し元の責任です。</target>
        </trans-unit>
        <trans-unit id="2760bb775d2f5ac01c987fbbfc94d63c9c899e62" translate="yes" xml:space="preserve">
          <source>Parse a single unadorned Perl statement. This may be a normal imperative statement or a declaration that has compile-time effect. It does not include any label or other affixture. It is up to the caller to ensure that the dynamic parser state (&lt;a href=&quot;#PL_parser&quot;&gt;PL_parser&lt;/a&gt; et al) is correctly set to reflect the source of the code to be parsed and the lexical context for the statement.</source>
          <target state="translated">装飾されていない単一のPerlステートメントを解析します。これは、通常の命令ステートメントまたはコンパイル時の効果を持つ宣言の場合があります。ラベルやその他の貼付は含まれていません。解析されるコードのソースとステートメントの字句コンテキストを反映するように動的パーサー状態（&lt;a href=&quot;#PL_parser&quot;&gt;PL_parserなど&lt;/a&gt;）が正しく設定されていることを確認するのは、呼び出し元の責任です。</target>
        </trans-unit>
        <trans-unit id="f4a7884751687be2fa921735b18ef0a741073183" translate="yes" xml:space="preserve">
          <source>Parse a subroutine signature declaration. This is the contents of the parentheses following a named or anonymous subroutine declaration when the &lt;code&gt;signatures&lt;/code&gt; feature is enabled. Note that this function neither expects nor consumes the opening and closing parentheses around the signature; it is the caller's job to handle these.</source>
          <target state="translated">サブルーチン署名宣言を解析します。これは、 &lt;code&gt;signatures&lt;/code&gt; 機能が有効になっている場合の名前付きまたは匿名のサブルーチン宣言に続く括弧の内容です。この関数は、署名の前後の開き括弧と閉じ括弧を予期も消費もしないことに注意してください。これらを処理するのは呼び出し元の仕事です。</target>
        </trans-unit>
        <trans-unit id="7c6f184ce547c8aba43670b279e40b0257db5871" translate="yes" xml:space="preserve">
          <source>Parse an L&amp;lt;&amp;gt; formatting code in POD text</source>
          <target state="translated">PODテキストのL &amp;lt;&amp;gt;フォーマットコードを解析する</target>
        </trans-unit>
        <trans-unit id="e36fba2ce293e9dd2d7ccd39cdd6da710089a942" translate="yes" xml:space="preserve">
          <source>Parse and process a file with pod in it:</source>
          <target state="translated">ポッドが入っているファイルを解析して処理します。</target>
        </trans-unit>
        <trans-unit id="9f1ffb1644b47f32b305b727b8e2f0c4183a5335" translate="yes" xml:space="preserve">
          <source>Parse errors</source>
          <target state="translated">構文解析エラー</target>
        </trans-unit>
        <trans-unit id="95c795a721b662a23c96150509b7defee01aa093" translate="yes" xml:space="preserve">
          <source>Parse file paths into directory, filename and suffix.</source>
          <target state="translated">ファイルパスをディレクトリ、ファイル名、サフィックスに解析します。</target>
        </trans-unit>
        <trans-unit id="7ef71ab4754324a2f907d13e0118b212e436f9d9" translate="yes" xml:space="preserve">
          <source>Parse text into an array of tokens or array of arrays</source>
          <target state="translated">テキストをトークンの配列または配列の配列に解析する</target>
        </trans-unit>
        <trans-unit id="8f66dc0790859dd1eeb3a917210e58e38ca209e0" translate="yes" xml:space="preserve">
          <source>Parse::CPAN::Meta</source>
          <target state="translated">Parse::CPAN::Meta</target>
        </trans-unit>
        <trans-unit id="14f134b3af22420beae12cee1984569fcb79b734" translate="yes" xml:space="preserve">
          <source>Parse::CPAN::Meta - Parse META.yml and META.json CPAN metadata files</source>
          <target state="translated">Parse::CPAN::Meta-META.yml および META.json CPAN メタデータファイルをパースする</target>
        </trans-unit>
        <trans-unit id="fe64ba8660ae82053a168a558e1390828e9d75c0" translate="yes" xml:space="preserve">
          <source>Parse::RecDescent uses &lt;code&gt;extract_codeblock($text, '{}&amp;lt;&amp;gt;')&lt;/code&gt; to extract the code within the &lt;code&gt;&amp;lt;defer:...&amp;gt;&lt;/code&gt; directive, but there's a problem.</source>
          <target state="translated">Parse :: RecDescentは、 &lt;code&gt;extract_codeblock($text, '{}&amp;lt;&amp;gt;')&lt;/code&gt; を使用して &lt;code&gt;&amp;lt;defer:...&amp;gt;&lt;/code&gt; ディレクティブ内のコードを抽出しますが、問題があります。</target>
        </trans-unit>
        <trans-unit id="418d1a5bd76755f2c0308bd1eebe8bb8f1bdc41d" translate="yes" xml:space="preserve">
          <source>Parser Components</source>
          <target state="translated">パーサコンポーネント</target>
        </trans-unit>
        <trans-unit id="fbbe57b861a9ff2eea865432f6886f75ca6ee089" translate="yes" xml:space="preserve">
          <source>Parses a string as a typemap and merge it into the typemap object.</source>
          <target state="translated">文字列をタイプマップとしてパースし、それをタイプマップ・オブジェクトにマージします。</target>
        </trans-unit>
        <trans-unit id="fe2f07bac5eb2fe04d3c37f8f55ba8daadac0f8d" translate="yes" xml:space="preserve">
          <source>Parses a string containing a valid YAML stream into a list of Perl data structures.</source>
          <target state="translated">有効なYAMLストリームを含む文字列をPerlのデータ構造のリストに解析します。</target>
        </trans-unit>
        <trans-unit id="be276e658885311ee5c74f7beadd6bde06342cea" translate="yes" xml:space="preserve">
          <source>Parses from &lt;code&gt;$source&lt;/code&gt; file to &lt;code&gt;$to&lt;/code&gt; file. Similar to &lt;a href=&quot;Pod::Parser#parse_from_file&quot;&gt;&quot;parse_from_file&quot; in Pod::Parser&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;$source&lt;/code&gt; ファイルから &lt;code&gt;$to&lt;/code&gt; ファイルに解析します。&lt;a href=&quot;Pod::Parser#parse_from_file&quot;&gt;Pod :: Parserの「parse_from_file」に&lt;/a&gt;似ています。</target>
        </trans-unit>
        <trans-unit id="581e381893d5cec0eef75cd617fe11072fd60c0d" translate="yes" xml:space="preserve">
          <source>Parses from &lt;code&gt;$source&lt;/code&gt; file to &lt;code&gt;$to&lt;/code&gt; file. Similar to &lt;a href=&quot;parser#parse_from_file&quot;&gt;parse_from_file in Pod::Parser&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;$source&lt;/code&gt; ファイルから &lt;code&gt;$to&lt;/code&gt; ファイルに解析します。&lt;a href=&quot;parser#parse_from_file&quot;&gt;Pod :: Parserのparse_from_fileに&lt;/a&gt;似ています。</target>
        </trans-unit>
        <trans-unit id="092f1e46c6bd81566c97fcc512b18db5d5c4aab0" translate="yes" xml:space="preserve">
          <source>Parses the uri and creates a corresponding File::Fetch::Item object, that is ready to be &lt;code&gt;fetch&lt;/code&gt; ed and returns it.</source>
          <target state="translated">uriを解析して、対応するFile :: Fetch :: Itemオブジェクトを作成します。これは、 &lt;code&gt;fetch&lt;/code&gt; できるようになり、それを返します。</target>
        </trans-unit>
        <trans-unit id="1d83b783c550f6865383d34cb285e9a4652c04a8" translate="yes" xml:space="preserve">
          <source>Parses the uri and creates a corresponding File::Fetch::Item object, that is ready to be &lt;code&gt;fetch&lt;/code&gt;ed and returns it.</source>
          <target state="translated">uriを解析し、対応するFile :: Fetch :: Itemオブジェクトを作成します。これは、 &lt;code&gt;fetch&lt;/code&gt; 準備ができており、それを返します。</target>
        </trans-unit>
        <trans-unit id="7294d33710169103141018bfcb0ee5ad3daa81e2" translate="yes" xml:space="preserve">
          <source>Parsing</source>
          <target state="translated">Parsing</target>
        </trans-unit>
        <trans-unit id="c1fb202e6ed48bb8178cea85efa6b1a53013e025" translate="yes" xml:space="preserve">
          <source>Parsing C, F, or I codes produce the same structure, with only a different element name.</source>
          <target state="translated">C、F、またはIコードを解析すると、要素名が異なるだけで、同じ構造を生成します。</target>
        </trans-unit>
        <trans-unit id="34d7c8d781e159aef872fa59a96c889263322e94" translate="yes" xml:space="preserve">
          <source>Parsing TAP</source>
          <target state="translated">TAPの解析</target>
        </trans-unit>
        <trans-unit id="29f888af704a858b84ee2b4d098e40d5d10659de" translate="yes" xml:space="preserve">
          <source>Parsing a B&amp;lt;...&amp;gt; formatting code (or of course any of its semantically identical syntactic variants B&amp;lt;&amp;lt; ... &amp;gt;&amp;gt;, or B&amp;lt;&amp;lt;&amp;lt;&amp;lt; ... &amp;gt;&amp;gt;&amp;gt;&amp;gt;, etc.) produces this event structure:</source>
          <target state="translated">B &amp;lt;...&amp;gt;フォーマットコード（またはもちろん、その意味的に同一の構文バリアントB &amp;lt;&amp;lt; ... &amp;gt;&amp;gt;、またはB &amp;lt;&amp;lt;&amp;lt;&amp;lt; ... &amp;gt;&amp;gt;&amp;gt;&amp;gt;など）を解析すると、このイベントが生成されます。構造：</target>
        </trans-unit>
        <trans-unit id="ae1e0e2c7c8fabecf530050bb934d77b2753f95c" translate="yes" xml:space="preserve">
          <source>Parsing a document produces this event structure:</source>
          <target state="translated">ドキュメントをパースすると、このようなイベント構造が生成されます。</target>
        </trans-unit>
        <trans-unit id="e45498b9f9131d39041aff47d582a85d5dafc07f" translate="yes" xml:space="preserve">
          <source>Parsing a plain (non-verbatim, non-directive, non-data) paragraph in a Pod document produces this event structure:</source>
          <target state="translated">Pod文書内のプレーンな(非バーバティム、非指示的、非データ)段落を解析すると、このイベント構造が生成されます。</target>
        </trans-unit>
        <trans-unit id="a2de67960953f9cc81eb05ce36de83df1c47625b" translate="yes" xml:space="preserve">
          <source>Parsing code internal error (%s)</source>
          <target state="translated">解析コード内部エラー (%s)</target>
        </trans-unit>
        <trans-unit id="201a7c8f517e70abce0e1a757b9f06ab6e1eaa4c" translate="yes" xml:space="preserve">
          <source>Parsing complications</source>
          <target state="translated">構文解析の複雑さ</target>
        </trans-unit>
        <trans-unit id="56105dfe20714874a2e829f3d18d1b5e096635b7" translate="yes" xml:space="preserve">
          <source>Parsing for construction</source>
          <target state="translated">構築のための構文解析</target>
        </trans-unit>
        <trans-unit id="60d12b966804dcb52fae0aab613b1970bacceb22" translate="yes" xml:space="preserve">
          <source>Parsing for size</source>
          <target state="translated">サイズの解析</target>
        </trans-unit>
        <trans-unit id="80341dac319c1b5410ead916b5a70b09b9ef0f4d" translate="yes" xml:space="preserve">
          <source>Parsing harness related environmental variables where appropriate</source>
          <target state="translated">ハーネスに関連する環境変数を適切に解析する</target>
        </trans-unit>
        <trans-unit id="f5b02e670994bc090c4464c23b48f3c45762f6da" translate="yes" xml:space="preserve">
          <source>Parsing is implemented per &lt;a href=&quot;../perlpodspec&quot;&gt;perlpodspec&lt;/a&gt;. For backward compatibility, links where there is no section and name contains spaces, or links where the entirety of the link (except for the anchor text if given) is enclosed in double-quotes are interpreted as links to a section (L&amp;lt;/section&amp;gt;).</source>
          <target state="translated">解析は&lt;a href=&quot;../perlpodspec&quot;&gt;perlpodspec&lt;/a&gt;ごとに実装されています。下位互換性のために、セクションがなく名前にスペースが含まれているリンク、またはリンク全体（指定されている場合はアンカーテキストを除く）が二重引用符で囲まれているリンクは、セクションへのリンク（L &amp;lt;/ section &amp;gt;）。</target>
        </trans-unit>
        <trans-unit id="7f30daf91a59d85d8198f429d54faa7d11732383" translate="yes" xml:space="preserve">
          <source>Parsing is implemented per &lt;a href=&quot;perlpodspec&quot;&gt;perlpodspec&lt;/a&gt;. For backward compatibility, links where there is no section and name contains spaces, or links where the entirety of the link (except for the anchor text if given) is enclosed in double-quotes are interpreted as links to a section (L&amp;lt;/section&amp;gt;).</source>
          <target state="translated">解析は&lt;a href=&quot;perlpodspec&quot;&gt;perlpodspec&lt;/a&gt;ごとに実装されます。下位互換性のために、セクションがなく名前にスペースが含まれているリンク、またはリンク全体（指定されている場合はアンカーテキストを除く）が二重引用符で囲まれているリンクは、セクションへのリンクとして解釈されます（L &amp;lt;/ section &amp;gt;）。</target>
        </trans-unit>
        <trans-unit id="21fec48dc32ed2c2c516a7d00eccd1fc2dbbf7ca" translate="yes" xml:space="preserve">
          <source>Parsing of the &lt;code&gt;#!&lt;/code&gt; switches starts wherever &quot;perl&quot; is mentioned in the line. The sequences &quot;-*&quot; and &quot;- &quot; are specifically ignored so that you could, if you were so inclined, say</source>
          <target state="translated">&lt;code&gt;#!&lt;/code&gt; 構文解析！スイッチは、「perl」が行に記載されている場所から始まります。シーケンス &quot;-*&quot;と &quot;-&quot;は特に無視されているので、そうしたい場合は、</target>
        </trans-unit>
        <trans-unit id="f4a66fb666677831fbb89c4617c9cb55023dbd3e" translate="yes" xml:space="preserve">
          <source>Parsing of the bracketed character class construct, &lt;code&gt;[...]&lt;/code&gt; , is rather different than the rule used for the rest of the pattern. The terminator of this construct is found using the same rules as for finding the terminator of a &lt;code&gt;{}&lt;/code&gt; -delimited construct, the only exception being that &lt;code&gt;]&lt;/code&gt; immediately following &lt;code&gt;[&lt;/code&gt; is treated as though preceded by a backslash.</source>
          <target state="translated">括弧で囲まれた文字クラス構成要素 &lt;code&gt;[...]&lt;/code&gt; の解析は、パターンの残りの部分で使用される規則とはかなり異なります。この構築物のターミネーターのターミネーター発見と同じ規則を使用して発見された &lt;code&gt;{}&lt;/code&gt; 、唯一の例外があること-delimited構築物 &lt;code&gt;]&lt;/code&gt; 直後 &lt;code&gt;[&lt;/code&gt; バックスラッシュが先行するものとして扱われます。</target>
        </trans-unit>
        <trans-unit id="6291b899ca6f8e1c981ffba894dee7b6cbbd41af" translate="yes" xml:space="preserve">
          <source>Parsing of the bracketed character class construct, &lt;code&gt;[...]&lt;/code&gt;, is rather different than the rule used for the rest of the pattern. The terminator of this construct is found using the same rules as for finding the terminator of a &lt;code&gt;{}&lt;/code&gt;-delimited construct, the only exception being that &lt;code&gt;]&lt;/code&gt; immediately following &lt;code&gt;[&lt;/code&gt; is treated as though preceded by a backslash.</source>
          <target state="translated">括弧で囲まれた文字クラス構造 &lt;code&gt;[...]&lt;/code&gt; の解析は、パターンの残りの部分に使用される規則とはかなり異なります。この構築物のターミネーターのターミネーター発見と同じ規則を使用して発見された &lt;code&gt;{}&lt;/code&gt; 、唯一の例外があること-delimited構築物 &lt;code&gt;]&lt;/code&gt; 直後 &lt;code&gt;[&lt;/code&gt; バックスラッシュが先行するものとして扱われます。</target>
        </trans-unit>
        <trans-unit id="73445354eb44bc4201e65870d8cf75c662a12338" translate="yes" xml:space="preserve">
          <source>Parsing options from an arbitrary array</source>
          <target state="translated">任意の配列からのオプションのパース</target>
        </trans-unit>
        <trans-unit id="7c23dc7bccdc54b6af40c30891098a1ec3018d31" translate="yes" xml:space="preserve">
          <source>Parsing options from an arbitrary string</source>
          <target state="translated">任意の文字列からのオプションの解析</target>
        </trans-unit>
        <trans-unit id="fae1cc5f61c39d7ca25192b6ad11336a46da6cc3" translate="yes" xml:space="preserve">
          <source>Part 1: The basics</source>
          <target state="translated">第1回:基本中の基本</target>
        </trans-unit>
        <trans-unit id="0ef5ae5e92fc124e5a59c33d1478fa00e49ca98c" translate="yes" xml:space="preserve">
          <source>Part 2: Power tools</source>
          <target state="translated">第2回:電動工具</target>
        </trans-unit>
        <trans-unit id="a00e8c5f741dc7c612e73320a49cc2007336de48" translate="yes" xml:space="preserve">
          <source>Particular block scope types store extra per-type information. For example, &lt;code&gt;CXt_SUB&lt;/code&gt; stores the currently executing CV, while the various for loop types might hold the original loop variable SV. On scope exit, the per-type data is processed; for example the CV has its reference count decremented, and the original loop variable is restored.</source>
          <target state="translated">特定のブロックスコープタイプは、タイプごとの追加情報を格納します。たとえば、 &lt;code&gt;CXt_SUB&lt;/code&gt; は現在実行中のCVを格納しますが、さまざまなforループタイプは元のループ変数SVを保持する場合があります。スコープの終了時に、タイプごとのデータが処理されます。たとえば、CVの参照カウントがデクリメントされ、元のループ変数が復元されます。</target>
        </trans-unit>
        <trans-unit id="a7d7c1187faf9d4d8f32037f3bef25a3fd5a884e" translate="yes" xml:space="preserve">
          <source>Particularly consider setting $Term::ANSIColor::EACHLINE if you are interleaving output to standard output and standard error and you aren't flushing standard output (via autoflush() or setting &lt;code&gt;$|&lt;/code&gt;). If you don't, the code to reset the color may unexpectedly sit in the standard output buffer rather than going to the display, causing standard error output to appear in the wrong color.</source>
          <target state="translated">特に、出力を標準出力と標準エラーにインターリーブしていて、標準出力をフラッシュしていない場合は、$ Term :: ANSIColor :: EACHLINEの設定を検討してください（autoflush（）または &lt;code&gt;$|&lt;/code&gt; 設定を使用）。そうしないと、色をリセットするコードが、ディスプレイに表示されるのではなく、予期せず標準出力バッファーに配置され、標準エラー出力が間違った色で表示される可能性があります。</target>
        </trans-unit>
        <trans-unit id="67d014ca4761f29f2d21414f531603a8e6bec46f" translate="yes" xml:space="preserve">
          <source>Pass an undef value to disable it:</source>
          <target state="translated">無効にするには undef 値を渡します。</target>
        </trans-unit>
        <trans-unit id="6c2219e935754aed07fd99bb89a0b43879d2aa88" translate="yes" xml:space="preserve">
          <source>Pass arrays and hashes by reference, not by value. For one thing, it's the only way to pass multiple lists or hashes (or both) in a single call/return. It also avoids creating a copy of all the contents. This requires some judgement, however, because any changes will be propagated back to the original data. If you really want to mangle (er, modify) a copy, you'll have to sacrifice the memory needed to make one.</source>
          <target state="translated">配列やハッシュは値ではなく参照で渡します。一つには、一度の呼び出し/戻り値で複数のリストやハッシュ(あるいはその両方)を渡すには、これが唯一の方法だということです。また、すべての内容のコピーを作成する必要もありません。しかし、変更があった場合は元のデータに反映されてしまうので、これには多少の判断が必要です。もし、本当にコピーを混乱させたいのであれば、コピーを作成するために必要なメモリを犠牲にしなければなりません。</target>
        </trans-unit>
        <trans-unit id="0faa9975944d7d7c5896c953cdfdaa9399cd924e" translate="yes" xml:space="preserve">
          <source>Pass arrays as references so more parameters can be added later (it's also faster). Convert functions into methods where appropriate. Split large methods into smaller more flexible ones. Inherit methods from other modules if appropriate.</source>
          <target state="translated">配列を参照として渡すことで、より多くのパラメータを後から追加することができます(その方が高速です)。必要に応じて関数をメソッドに変換します。大きなメソッドをより柔軟性のある小さなメソッドに分割します。必要に応じて他のモジュールからメソッドを継承します。</target>
        </trans-unit>
        <trans-unit id="7d95906c33f61c39cf91fb90166084e4d01776d3" translate="yes" xml:space="preserve">
          <source>Pass by Reference</source>
          <target state="translated">パス・バイ・リファレンス</target>
        </trans-unit>
        <trans-unit id="a428f2745394276b3ef22fe8ce93840f03d517fe" translate="yes" xml:space="preserve">
          <source>Pass by reference</source>
          <target state="translated">リファレンスパス</target>
        </trans-unit>
        <trans-unit id="053ad74d06c8d9f5eb6073c958d95571ac0cf875" translate="yes" xml:space="preserve">
          <source>Pass-through options</source>
          <target state="translated">パススルーオプション</target>
        </trans-unit>
        <trans-unit id="b99c51ad09b3295fb732520f288da663a4c77836" translate="yes" xml:space="preserve">
          <source>Passed in implicitly via standard input. This works only if there are no filename arguments--to pass arguments to a STDIN-read program you must explicitly specify a &quot;-&quot; for the program name.</source>
          <target state="translated">標準入力を介して暗黙的に渡されます。これは、ファイル名の引数がない場合にのみ機能します。 STDIN-read プログラムに引数を渡すには、プログラム名に &quot;-&quot; を明示的に指定しなければなりません。</target>
        </trans-unit>
        <trans-unit id="c1dfda537026966c5e1e28098e3760a352bbbd9e" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;$hash{ 'foo' }&lt;/code&gt; to a subroutine used to be a special case, though. Since you could assign directly to &lt;code&gt;$_[0]&lt;/code&gt; , Perl had to be ready to make that assignment so it created the hash key ahead of time:</source>
          <target state="translated">ただし、 &lt;code&gt;$hash{ 'foo' }&lt;/code&gt; をサブルーチンに渡すことは、以前は特別なケースでした。 &lt;code&gt;$_[0]&lt;/code&gt; に直接割り当てることができるので、Perlはその割り当てを行う準備ができている必要があり、事前にハッシュキーを作成していました。</target>
        </trans-unit>
        <trans-unit id="3a057f5f610f61c1d1ca613467dc13738af87875" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;$hash{ 'foo' }&lt;/code&gt; to a subroutine used to be a special case, though. Since you could assign directly to &lt;code&gt;$_[0]&lt;/code&gt;, Perl had to be ready to make that assignment so it created the hash key ahead of time:</source>
          <target state="translated">ただし、 &lt;code&gt;$hash{ 'foo' }&lt;/code&gt; をサブルーチンに渡すことは、以前は特殊なケースでした。 &lt;code&gt;$_[0]&lt;/code&gt; に直接割り当てることができるので、Perlはその割り当てを行う準備ができていなければならず、事前にハッシュキーを作成しました。</target>
        </trans-unit>
        <trans-unit id="b972b4461d36a6327e34c4d3361e6aa5608c4233" translate="yes" xml:space="preserve">
          <source>Passing Filehandles</source>
          <target state="translated">ファイルハンドルを渡す</target>
        </trans-unit>
        <trans-unit id="63c8af520d5efa4ce3ec41993e8620832702cb84" translate="yes" xml:space="preserve">
          <source>Passing Methods</source>
          <target state="translated">渡し方</target>
        </trans-unit>
        <trans-unit id="5c25d01562076258933dad64551143b78c5bd332" translate="yes" xml:space="preserve">
          <source>Passing NULL for SV creates a constant sub equivalent to &lt;code&gt;sub BAR () {}&lt;/code&gt; , which won't be called if used as a destructor, but will suppress the overhead of a call to &lt;code&gt;AUTOLOAD&lt;/code&gt; . (This form, however, isn't eligible for inlining at compile time.)</source>
          <target state="translated">SVにNULLを渡すと、 &lt;code&gt;sub BAR () {}&lt;/code&gt; に相当する定数subが作成されます。これは、デストラクタとして使用された場合は呼び出されませんが、 &lt;code&gt;AUTOLOAD&lt;/code&gt; の呼び出しのオーバーヘッドを抑制します。（ただし、このフォームはコンパイル時にインライン化することはできません。）</target>
        </trans-unit>
        <trans-unit id="92e7a89cda780976fa2b2bf15b8fa16940c9e791" translate="yes" xml:space="preserve">
          <source>Passing Parameters</source>
          <target state="translated">パラメータを渡す</target>
        </trans-unit>
        <trans-unit id="01da02b4145731e43ea92222556effb42287de00" translate="yes" xml:space="preserve">
          <source>Passing Regexes</source>
          <target state="translated">正規表現を渡す</target>
        </trans-unit>
        <trans-unit id="631e829d46dd7a132eee37564669347bda1fdeb4" translate="yes" xml:space="preserve">
          <source>Passing Symbol Table Entries (typeglobs)</source>
          <target state="translated">記号テーブルエントリの通過 (typeglobs)</target>
        </trans-unit>
        <trans-unit id="daea0060d4104474139dc3abbdd23083ff617510" translate="yes" xml:space="preserve">
          <source>Passing Variables and Functions</source>
          <target state="translated">変数と関数の受け渡し</target>
        </trans-unit>
        <trans-unit id="9c282987a3e4a9c1f484c40c67cee6ec02907f83" translate="yes" xml:space="preserve">
          <source>Passing a true value for &lt;code&gt;$no_file&lt;/code&gt; indicates that the path being split only contains directory components, even on systems where you can usually (when not supporting a foreign syntax) tell the difference between directories and files at a glance.</source>
          <target state="translated">&lt;code&gt;$no_file&lt;/code&gt; true値を渡すと、通常は（外部構文をサポートしていない場合）ディレクトリとファイルの違いが一目でわかるシステムでも、分割されるパスにはディレクトリコンポーネントのみが含まれます。</target>
        </trans-unit>
        <trans-unit id="4bfeeb62551588d8d24389c9ea73902777dca58b" translate="yes" xml:space="preserve">
          <source>Passing an argument of &quot;&quot; to -&amp;gt;cwd() has the same affect of calling -&amp;gt;cwd() without any arguments. Turn on Debug (</source>
          <target state="translated">&quot;&quot;の引数を-&amp;gt; cwd（）に渡すと、引数なしで-&amp;gt; cwd（）を呼び出すのと同じ効果があります。デバッグをオンにします（</target>
        </trans-unit>
        <trans-unit id="57e7c7fde542cf4bbfc2454d2a7557dc31e803b8" translate="yes" xml:space="preserve">
          <source>Passing an array reference containing only one element, 'name', is special cased to return a list of names rather than a list of hash references, making it equivalent to calling &lt;code&gt;list_files&lt;/code&gt; without arguments.</source>
          <target state="translated">1つの要素 'name'のみを含む配列参照を渡すと、ハッシュ参照のリストではなく名前のリストが返され、引数なしで &lt;code&gt;list_files&lt;/code&gt; を呼び出すのと同じになります。</target>
        </trans-unit>
        <trans-unit id="33e2edde52cbb4ec756e8a81aaf676fa8eab3f52" translate="yes" xml:space="preserve">
          <source>Passing an array reference containing only one element, 'name', is special cased to return a list of names rather than a list of hash references.</source>
          <target state="translated">要素 'name' のみを含む配列参照を渡すと、ハッシュ参照のリストではなく名前のリストを返すように特殊なケースになっています。</target>
        </trans-unit>
        <trans-unit id="73e454c3c193b2c18919a57428be215c94732d74" translate="yes" xml:space="preserve">
          <source>Passing an empty string &quot;&quot; as the first argument to &lt;code&gt;catdir()&lt;/code&gt; is like passing&lt;code&gt;File::Spec-&amp;gt;rootdir()&lt;/code&gt; as the first argument, i.e.</source>
          <target state="translated">空の文字列 &quot;&quot;を &lt;code&gt;catdir()&lt;/code&gt; の最初の引数として渡すことは、 &lt;code&gt;File::Spec-&amp;gt;rootdir()&lt;/code&gt; を最初の引数として渡すことと同じです。</target>
        </trans-unit>
        <trans-unit id="21a08998dd15a53696b169310719afee9f13fa81" translate="yes" xml:space="preserve">
          <source>Passing an explicit &lt;code&gt;undef&lt;/code&gt; for &lt;code&gt;proxy&lt;/code&gt;, &lt;code&gt;http_proxy&lt;/code&gt; or &lt;code&gt;https_proxy&lt;/code&gt; will prevent getting the corresponding proxies from the environment.</source>
          <target state="translated">&lt;code&gt;proxy&lt;/code&gt; 、 &lt;code&gt;http_proxy&lt;/code&gt; 、または &lt;code&gt;https_proxy&lt;/code&gt; に明示的な &lt;code&gt;undef&lt;/code&gt; を渡すと、対応するプロキシを環境から取得できなくなります。</target>
        </trans-unit>
        <trans-unit id="d6de5b84e84c7ec759c47090ea234e479eb3f3b2" translate="yes" xml:space="preserve">
          <source>Passing array/hash refs that contain objects may not work for Perl prior to 5.10.0.</source>
          <target state="translated">オブジェクトを含む配列/ハッシュ参照を渡すと、5.10.0以前のPerlでは動作しない場合があります。</target>
        </trans-unit>
        <trans-unit id="07006ec07fbb00bcc3b2f3e835dd0485e90ebe00" translate="yes" xml:space="preserve">
          <source>Passing malformed strings was deprecated in Perl 5.18, and became fatal in Perl 5.26.</source>
          <target state="translated">不正な文字列を渡すことはPerl 5.18では非推奨とされ、Perl 5.26では致命的になりました。</target>
        </trans-unit>
        <trans-unit id="778d28f8a8c46b422aec9c2654919755f059cdd6" translate="yes" xml:space="preserve">
          <source>Passing new options to the $walker is the easiest way to change amongst any pre-defined styles (the ones you add are automatically recognized as options), and is the only way to alter rendering order without calling compile again. Note however that rendering state is still shared amongst multiple $walker objects, so they must still be used in a coordinated manner.</source>
          <target state="translated">新しいオプションを$walkerに渡すことは、事前に定義されたスタイルの中から変更する最も簡単な方法です(追加したものは自動的にオプションとして認識されます)。しかし、レンダリングの状態は複数の $walker オブジェクト間で共有されているので、それらを協調して使用しなければならないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="000338825dc1ad597f0654c697650b0c505e9d75" translate="yes" xml:space="preserve">
          <source>Passing objects on queues may not work if the objects' classes do not support sharing. See &lt;a href=&quot;../threads/shared#BUGS-AND-LIMITATIONS&quot;&gt;BUGS AND LIMITATIONS in threads::shared&lt;/a&gt; for more.</source>
          <target state="translated">オブジェクトのクラスが共有をサポートしていない場合、オブジェクトをキューに渡すことは機能しない可能性があります。詳細について&lt;a href=&quot;../threads/shared#BUGS-AND-LIMITATIONS&quot;&gt;は、threads :: sharedのバグと制限を&lt;/a&gt;ご覧ください。</target>
        </trans-unit>
        <trans-unit id="41a3464b5f543a218be1d374dd1edc97d0b4698d" translate="yes" xml:space="preserve">
          <source>Passing objects on queues may not work if the objects' classes do not support sharing. See &lt;a href=&quot;threads::shared#BUGS-AND-LIMITATIONS&quot;&gt;&quot;BUGS AND LIMITATIONS&quot; in threads::shared&lt;/a&gt; for more.</source>
          <target state="translated">オブジェクトのクラスが共有をサポートしていない場合、キューでのオブジェクトの受け渡しが機能しない可能性があります。詳細について&lt;a href=&quot;threads::shared#BUGS-AND-LIMITATIONS&quot;&gt;は、threads :: sharedの「バグと制限」を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="dbd12e38f2ecdcfc0dbc35815174882b1fdde527" translate="yes" xml:space="preserve">
          <source>Passing only one of the first two elements as &lt;a href=&quot;#undef-EXPR&quot;&gt;&lt;code&gt;undef&lt;/code&gt;&lt;/a&gt; is equivalent to passing a 0 and will not have the effect described when both are &lt;a href=&quot;#undef-EXPR&quot;&gt;&lt;code&gt;undef&lt;/code&gt;&lt;/a&gt;. This also triggers an uninitialized warning.</source>
          <target state="translated">最初の2つの要素の1つだけを&lt;a href=&quot;#undef-EXPR&quot;&gt; &lt;code&gt;undef&lt;/code&gt; &lt;/a&gt;として渡すことは、0を渡すことと同じであり、両方が&lt;a href=&quot;#undef-EXPR&quot;&gt; &lt;code&gt;undef&lt;/code&gt; の&lt;/a&gt;場合に説明されている効果はありません。これにより、初期化されていない警告もトリガーされます。</target>
        </trans-unit>
        <trans-unit id="b55ad2737b0f246adb41a25f43c9856e1465d7d3" translate="yes" xml:space="preserve">
          <source>Passing only one of the first two elements as &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is equivalent to passing a 0 and will not have the effect described when both are &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;. This also triggers an uninitialized warning.</source>
          <target state="translated">最初の2つの要素の1つだけを &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; として渡すことは、0を渡すことと同等であり、両方が &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; の場合、説明された効果はありません。これにより、初期化されていない警告もトリガーされます。</target>
        </trans-unit>
        <trans-unit id="816c2ea902ef30f358f592af797150423983b160" translate="yes" xml:space="preserve">
          <source>Passing only one of the first two elements as &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is equivalent to passing a 0 and will not have the effect described when both are &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;. This also triggers an uninitialized warning.</source>
          <target state="translated">最初の2つの要素の1つだけを &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; として渡すことは、0を渡すことと同等であり、両方が &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; の場合、説明された効果はありません。これにより、初期化されていない警告もトリガーされます。</target>
        </trans-unit>
        <trans-unit id="ff65b3fe44892512aa53628ad3cbe12f9d7ca3ec" translate="yes" xml:space="preserve">
          <source>Passing the tied object to &lt;code&gt;&lt;a href=&quot;../functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; されたオブジェクトをtieに渡す</target>
        </trans-unit>
        <trans-unit id="d08efc7a1c34dd761882c3caffe514d484a623f1" translate="yes" xml:space="preserve">
          <source>Passing the tied object to &lt;code&gt;tie&lt;/code&gt;</source>
          <target state="translated">結ばれたオブジェクトを渡して &lt;code&gt;tie&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1c7982247c9ee56201571cea57753775df9b7911" translate="yes" xml:space="preserve">
          <source>Passing the tied object to tie</source>
          <target state="translated">タイドオブジェクトをタイドに渡す</target>
        </trans-unit>
        <trans-unit id="85ec73bc8762feb2e3028dbf252686e023bd6e19" translate="yes" xml:space="preserve">
          <source>Past contributions from: brian d foy &lt;code&gt;&amp;lt;bdfoy@cpan.org&amp;gt;&lt;/code&gt; Adriano R. Ferreira &lt;code&gt;&amp;lt;ferreira@cpan.org&amp;gt;&lt;/code&gt; , Sean M. Burke &lt;code&gt;&amp;lt;sburke@cpan.org&amp;gt;&lt;/code&gt;</source>
          <target state="translated">過去の寄稿者：brian d foy &lt;code&gt;&amp;lt;bdfoy@cpan.org&amp;gt;&lt;/code&gt; Adriano R. Ferreira &lt;code&gt;&amp;lt;ferreira@cpan.org&amp;gt;&lt;/code&gt; 、Sean M. Burke &lt;code&gt;&amp;lt;sburke@cpan.org&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3c5e8c22064e37b00fe594c59a2558cd9b22cdd1" translate="yes" xml:space="preserve">
          <source>Past contributions from: brian d foy &lt;code&gt;&amp;lt;bdfoy@cpan.org&amp;gt;&lt;/code&gt; Adriano R. Ferreira &lt;code&gt;&amp;lt;ferreira@cpan.org&amp;gt;&lt;/code&gt; ; Sean M. Burke &lt;code&gt;&amp;lt;sburke@cpan.org&amp;gt;&lt;/code&gt; ; significant portions copied from</source>
          <target state="translated">過去の寄稿者：brian d foy &lt;code&gt;&amp;lt;bdfoy@cpan.org&amp;gt;&lt;/code&gt; Adriano R. Ferreira &lt;code&gt;&amp;lt;ferreira@cpan.org&amp;gt;&lt;/code&gt; ; Sean M. Burke &lt;code&gt;&amp;lt;sburke@cpan.org&amp;gt;&lt;/code&gt; ; からコピーされた重要な部分</target>
        </trans-unit>
        <trans-unit id="3d10da0214a4abf1aac8e812a0bd095ee0429d90" translate="yes" xml:space="preserve">
          <source>Past contributions from: brian d foy &lt;code&gt;&amp;lt;bdfoy@cpan.org&amp;gt;&lt;/code&gt; Adriano R. Ferreira &lt;code&gt;&amp;lt;ferreira@cpan.org&amp;gt;&lt;/code&gt;, Sean M. Burke &lt;code&gt;&amp;lt;sburke@cpan.org&amp;gt;&lt;/code&gt;</source>
          <target state="translated">過去の投稿：brian d foy &lt;code&gt;&amp;lt;bdfoy@cpan.org&amp;gt;&lt;/code&gt; Adriano R. Ferreira &lt;code&gt;&amp;lt;ferreira@cpan.org&amp;gt;&lt;/code&gt; 、Sean M. Burke &lt;code&gt;&amp;lt;sburke@cpan.org&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="87bf9583fd2f320adf338deff6531cfb57af74ef" translate="yes" xml:space="preserve">
          <source>Past contributions from: brian d foy &lt;code&gt;&amp;lt;bdfoy@cpan.org&amp;gt;&lt;/code&gt; Adriano R. Ferreira &lt;code&gt;&amp;lt;ferreira@cpan.org&amp;gt;&lt;/code&gt;; Sean M. Burke &lt;code&gt;&amp;lt;sburke@cpan.org&amp;gt;&lt;/code&gt;; significant portions copied from</source>
          <target state="translated">過去の貢献：brian d foy &lt;code&gt;&amp;lt;bdfoy@cpan.org&amp;gt;&lt;/code&gt; Adriano R. Ferreira &lt;code&gt;&amp;lt;ferreira@cpan.org&amp;gt;&lt;/code&gt; ; ショーンM.バーク &lt;code&gt;&amp;lt;sburke@cpan.org&amp;gt;&lt;/code&gt; ; からコピーされた重要な部分</target>
        </trans-unit>
        <trans-unit id="b20a451c29c9cea2e46c19630395de2df6f76e08" translate="yes" xml:space="preserve">
          <source>Past contributors are: brian d foy &lt;code&gt;&amp;lt;bdfoy@cpan.org&amp;gt;&lt;/code&gt; Adriano R. Ferreira &lt;code&gt;&amp;lt;ferreira@cpan.org&amp;gt;&lt;/code&gt; , Sean M. Burke &lt;code&gt;&amp;lt;sburke@cpan.org&amp;gt;&lt;/code&gt; , Kenneth Albanowski &lt;code&gt;&amp;lt;kjahds@kjahds.com&amp;gt;&lt;/code&gt; , Andy Dougherty &lt;code&gt;&amp;lt;doughera@lafcol.lafayette.edu&amp;gt;&lt;/code&gt; , and many others.</source>
          <target state="translated">過去の貢献者は以下のとおりです。ブライアン・D・フォイ &lt;code&gt;&amp;lt;bdfoy@cpan.org&amp;gt;&lt;/code&gt; アドリアーノ・R.フェレイラ &lt;code&gt;&amp;lt;ferreira@cpan.org&amp;gt;&lt;/code&gt; 、ショーンM. Burke氏 &lt;code&gt;&amp;lt;sburke@cpan.org&amp;gt;&lt;/code&gt; 、ケネスAlbanowski &lt;code&gt;&amp;lt;kjahds@kjahds.com&amp;gt;&lt;/code&gt; 、アンディ・ドハティ &lt;code&gt;&amp;lt;doughera@lafcol.lafayette.edu&amp;gt;&lt;/code&gt; 、その他多数。</target>
        </trans-unit>
        <trans-unit id="33951b7f493f5448f75724d8f08600c9d99884df" translate="yes" xml:space="preserve">
          <source>Past contributors are: brian d foy &lt;code&gt;&amp;lt;bdfoy@cpan.org&amp;gt;&lt;/code&gt; Adriano R. Ferreira &lt;code&gt;&amp;lt;ferreira@cpan.org&amp;gt;&lt;/code&gt;, Sean M. Burke &lt;code&gt;&amp;lt;sburke@cpan.org&amp;gt;&lt;/code&gt;, Kenneth Albanowski &lt;code&gt;&amp;lt;kjahds@kjahds.com&amp;gt;&lt;/code&gt;, Andy Dougherty &lt;code&gt;&amp;lt;doughera@lafcol.lafayette.edu&amp;gt;&lt;/code&gt;, and many others.</source>
          <target state="translated">過去の寄稿者は次のとおりです。briandfoy &lt;code&gt;&amp;lt;bdfoy@cpan.org&amp;gt;&lt;/code&gt; Adriano R. Ferreira &lt;code&gt;&amp;lt;ferreira@cpan.org&amp;gt;&lt;/code&gt; 、Sean M. Burke &lt;code&gt;&amp;lt;sburke@cpan.org&amp;gt;&lt;/code&gt; 、Kenneth Albanowski &lt;code&gt;&amp;lt;kjahds@kjahds.com&amp;gt;&lt;/code&gt; 、Andy Dougherty &lt;code&gt;&amp;lt;doughera@lafcol.lafayette.edu&amp;gt;&lt;/code&gt; 、および他の多く。</target>
        </trans-unit>
        <trans-unit id="5b790410ca6021f643b25dc0684b80c6ac035a6f" translate="yes" xml:space="preserve">
          <source>Patch style</source>
          <target state="translated">パッチスタイル</target>
        </trans-unit>
        <trans-unit id="31c42bf1738e25a658115f73ad50091aa9060241" translate="yes" xml:space="preserve">
          <source>Patch workflow</source>
          <target state="translated">パッチワークフロー</target>
        </trans-unit>
        <trans-unit id="e616d246e566a6e437d4992af55f91c42a43620c" translate="yes" xml:space="preserve">
          <source>Patch, extend or subclass an existing module where possible</source>
          <target state="translated">可能であれば、既存のモジュールをパッチ、拡張、サブクラス化します。</target>
        </trans-unit>
        <trans-unit id="57bddba1c66e0b8fdc9d892c78bfc22f25c546f6" translate="yes" xml:space="preserve">
          <source>Patches against Pod::Simple are welcome. Please send bug reports to &amp;lt;bug-pod-simple@rt.cpan.org&amp;gt;.</source>
          <target state="translated">Pod :: Simpleに対するパッチは大歓迎です。バグレポートを&amp;lt;bug-pod-simple@rt.cpan.org&amp;gt;に送信してください。</target>
        </trans-unit>
        <trans-unit id="bd4f477583add42fc502203e4db2736ea3836506" translate="yes" xml:space="preserve">
          <source>Patches against Pod::Simple are welcome. Please send bug reports to mailto:&amp;lt;bug-pod-simple@rt.cpan.org.</source>
          <target state="translated">Pod :: Simpleに対するパッチは大歓迎です。バグレポートをmailto：&amp;lt;bug-pod-simple@rt.cpan.orgに送信してください。</target>
        </trans-unit>
        <trans-unit id="d7dced43d864867fea0f4fc015cbdfe619d45715" translate="yes" xml:space="preserve">
          <source>Patches are reviewed and discussed on GitHub or the p5p list. Simple, uncontroversial patches will usually be applied without any discussion. When the patch is applied, the ticket will be updated and you will receive email.</source>
          <target state="translated">パッチはGitHubやp5pリストでレビューされ、議論されます。単純で議論の余地のないパッチは、通常は議論なしで適用されます。パッチが適用されると、チケットが更新され、メールが届きます。</target>
        </trans-unit>
        <trans-unit id="139936b1a9a84a97721c26af3e777c3a03af1e6f" translate="yes" xml:space="preserve">
          <source>Patches are reviewed and discussed on the p5p list. Simple, uncontroversial patches will usually be applied without any discussion. When the patch is applied, the ticket will be updated and you will receive email. In addition, an email will be sent to the p5p list.</source>
          <target state="translated">パッチはp5pリストで検討され、議論されます。単純で議論の余地のないパッチは、通常、何の議論もなく適用されます。パッチが適用されると、チケットが更新され、メールが送られてきます。また、p5pリストにもメールが送られます。</target>
        </trans-unit>
        <trans-unit id="f960f4eadeba1dd57f417d470c8e32c7459acc42" translate="yes" xml:space="preserve">
          <source>Patches may be applied by the pumpkin holder without the explicit cooperation of the module author if and only if they are very minor, time-critical in some fashion (such as urgent security fixes), or if the module author cannot be reached. Those patches must still be given back to the author when possible, and if the author decides on an alternate fix in their version, that fix should be strongly preferred unless there is a serious problem with it. Any changes not endorsed by the author should be marked as such, and the contributor of the change acknowledged.</source>
          <target state="translated">パッチは、モジュール作者の明示的な協力なしに、モジュール作者の明示的な協力なしにパンプキンホルダーが適用することができます。可能であれば、それらのパッチは作者に返されなければなりませんし、作者が自分のバージョンで代替の修正を決定した場合には、 それに重大な問題がない限り、その修正が強く推奨されるべきです。作者によって承認されていない変更は、そのようにマークされ、変更の貢献者が認められるべきです。</target>
        </trans-unit>
        <trans-unit id="bb89b691c1294b8ada4f9cd31a429e4caf872c3f" translate="yes" xml:space="preserve">
          <source>Patches speak louder than words</source>
          <target state="translated">パッチは言葉よりも大きな声で語る</target>
        </trans-unit>
        <trans-unit id="d54931049c09c712e0cbea3d090e4d3b4a105c0b" translate="yes" xml:space="preserve">
          <source>Patches that add new warnings or errors or deprecate features.</source>
          <target state="translated">新しい警告やエラーを追加したり、機能を廃止するパッチ。</target>
        </trans-unit>
        <trans-unit id="29abf1c3bbb8c54b1cd55ff655f670f9ebc399ee" translate="yes" xml:space="preserve">
          <source>Patches that add or remove features.</source>
          <target state="translated">機能を追加したり削除したりするパッチ。</target>
        </trans-unit>
        <trans-unit id="f84461a4c1a5b5e429209771f4e83af6717ee46b" translate="yes" xml:space="preserve">
          <source>Patches that break binary compatibility. (Please talk to a pumpking.)</source>
          <target state="translated">バイナリの互換性が壊れるパッチ (パンプキンに相談してください)</target>
        </trans-unit>
        <trans-unit id="dfa8568f048c6db3c2a4163fedf65703680783c6" translate="yes" xml:space="preserve">
          <source>Patches that fix CVEs or security issues. These changes should be passed using the security reporting mechanism rather than applied directly; see &lt;a href=&quot;perlsec#SECURITY-VULNERABILITY-CONTACT-INFORMATION&quot;&gt;&quot;SECURITY VULNERABILITY CONTACT INFORMATION&quot; in perlsec&lt;/a&gt;.</source>
          <target state="translated">CVEまたはセキュリティの問題を修正するパッチ。これらの変更は、直接適用するのではなく、セキュリティレポートメカニズムを使用して渡す必要があります。&lt;a href=&quot;perlsec#SECURITY-VULNERABILITY-CONTACT-INFORMATION&quot;&gt;perlsecの「SECURITYVULNERABILITYCONTACTINFORMATION」を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="323fd112f38ff019a7ad9800eabd680b9a815934" translate="yes" xml:space="preserve">
          <source>Patches that fix CVEs or security issues. These changes should be run through the perl5-security-report@perl.org mailing list rather than applied directly.</source>
          <target state="translated">CVE やセキュリティ問題を修正するパッチ。これらの変更は、直接適用するのではなく perl5-security-report@perl.org メーリングリストを通して実行してください。</target>
        </trans-unit>
        <trans-unit id="f0910db599c5e57f13f342f2401ca7baceb18c00" translate="yes" xml:space="preserve">
          <source>Patches that fix anything which prevents or seriously impacts the build or installation of perl.</source>
          <target state="translated">perl のビルドやインストールを妨げたり、深刻な影響を与えたりするものを修正するパッチ。</target>
        </trans-unit>
        <trans-unit id="eec8d047d5a67d89526ccddaae67c2b3e494393f" translate="yes" xml:space="preserve">
          <source>Patches that fix bugs in features that were new in the corresponding 5.x.0 stable release.</source>
          <target state="translated">対応する 5.x.0 安定版リリースの新機能のバグを修正するパッチ。</target>
        </trans-unit>
        <trans-unit id="21130596c95c32860a5fe99dde40cbc8202f1859" translate="yes" xml:space="preserve">
          <source>Patches that fix crashing bugs, assertion failures and memory corruption but which do not otherwise change perl's functionality or negatively impact performance.</source>
          <target state="translated">クラッシュするバグ、アサーションの失敗、メモリの破損を修正するパッチですが、それ以外では perl の機能を変更したり、パフォーマンスに悪影響を与えたりすることはありません。</target>
        </trans-unit>
        <trans-unit id="c95c81109a9edefb7a99fa1792240b1c8c4accc7" translate="yes" xml:space="preserve">
          <source>Patches that fix regressions in perl's behavior relative to previous releases, no matter how old the regression, since some people may upgrade from very old versions of perl to the latest version.</source>
          <target state="translated">古いバージョンの perl から最新のバージョンにアップグレードする人もいるので、リグレッションがどれだけ古くても、以前のリリースと比較して perl の動作のリグレッションを修正するパッチです。</target>
        </trans-unit>
        <trans-unit id="b5696e15a3c83d7885217333605452f542af1fa3" translate="yes" xml:space="preserve">
          <source>Patches that were formatted by &lt;code&gt;git format-patch&lt;/code&gt; are applied with &lt;code&gt;git am&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;git format-patch&lt;/code&gt; でフォーマットされたパッチは、 &lt;code&gt;git am&lt;/code&gt; で適用されます：</target>
        </trans-unit>
        <trans-unit id="93c3b06e57a98513617dbda85f73638d28687b18" translate="yes" xml:space="preserve">
          <source>Patches which change behaviour (fixing bugs or introducing new features) must include regression tests to verify that everything works as expected.</source>
          <target state="translated">挙動を変更する(バグの修正や新機能の導入)パッチには、すべてが期待通りに動作することを確認するためのリグレッションテストが含まれていなければなりません。</target>
        </trans-unit>
        <trans-unit id="8270f0c679e10266c6a9f82f5a4c89d2c3cc697e" translate="yes" xml:space="preserve">
          <source>Patches without documentation are probably ill-thought out or incomplete. No features can be added or changed without documentation, so submitting a patch for the appropriate pod docs as well as the source code is important.</source>
          <target state="translated">ドキュメントのないパッチは、おそらく考え抜かれていないか、不完全なものです。ドキュメントなしに機能を追加したり変更したりすることはできないので、ソースコードだけでなく、適切なポッドのドキュメントにパッチを提出することが重要です。</target>
        </trans-unit>
        <trans-unit id="e27ae82b9a6b018ee112b21851652cbe49271b3b" translate="yes" xml:space="preserve">
          <source>Patching a core module</source>
          <target state="translated">コアモジュールのパッチ適用</target>
        </trans-unit>
        <trans-unit id="519e39132bb98418cc0483cc446ccf5f3c8dcffe" translate="yes" xml:space="preserve">
          <source>Path</source>
          <target state="translated">Path</target>
        </trans-unit>
        <trans-unit id="26f9c38821aeaa5a1cad8be70e73ffffcb17265b" translate="yes" xml:space="preserve">
          <source>Pathnames</source>
          <target state="translated">Pathnames</target>
        </trans-unit>
        <trans-unit id="2da894d10ce9ad5c8d056914ada9bb1b35234f8b" translate="yes" xml:space="preserve">
          <source>Pattern subroutine nesting without pos change exceeded limit in regex</source>
          <target state="translated">正規表現でposを変更しないパターンサブルーチンの入れ子が限界を超える</target>
        </trans-unit>
        <trans-unit id="0b1fe397674f2ea0ca0d83a858144940f7da6b34" translate="yes" xml:space="preserve">
          <source>Patterns are implicitly anchored at the beginning and end of each string when testing for a match.</source>
          <target state="translated">パターンは、一致するかどうかをテストする際に、各文字列の最初と最後に暗黙のうちに固定されています。</target>
        </trans-unit>
        <trans-unit id="d223d697e7957195cfa22daa9019ad4f989b3028" translate="yes" xml:space="preserve">
          <source>Patterns are subject to an additional level of interpretation as a regular expression. This is done as a second pass, after variables are interpolated, so that regular expressions may be incorporated into the pattern from the variables. If this is not what you want, use &lt;code&gt;\Q&lt;/code&gt; to interpolate a variable literally.</source>
          <target state="translated">パターンは、正規表現としての追加レベルの解釈を受けます。これは、変数が補間された後の2番目のパスとして行われるため、正規表現を変数からパターンに組み込むことができます。これが必要なものでない場合は、 &lt;code&gt;\Q&lt;/code&gt; を使用して変数を文字どおりに補間します。</target>
        </trans-unit>
        <trans-unit id="e23f050b63735be39db7dcbaa09bfdd36470f510" translate="yes" xml:space="preserve">
          <source>Patterns of the form /#\d/ will be replaced with the</source>
          <target state="translated">Patterns of the form /#d/will be replaced with the</target>
        </trans-unit>
        <trans-unit id="2c6538dfa9b49c6262ed324ab83217ac7fa1dc0f" translate="yes" xml:space="preserve">
          <source>Patterns that aren't already stored in some variable must be delimitted, at both ends, by delimitter characters. These are often, as in the example above, forward slashes, and the typical way a pattern is written in documentation is with those slashes. In most cases, the delimitter is the same character, fore and aft, but there are a few cases where a character looks like it has a mirror-image mate, where the opening version is the beginning delimiter, and the closing one is the ending delimiter, like</source>
          <target state="translated">すでに何かの変数に格納されていないパターンは、両端を区切り文字で区切らなければなりません。これらの文字は、上の例のように前方のスラッシュであることが多く、ドキュメントに書かれているパターンの典型的な書き方は、これらのスラッシュです。ほとんどの場合、デリミタは前と後で同じ文字ですが、ある文字が鏡像のような仲間を持っているように見える場合もあります。</target>
        </trans-unit>
        <trans-unit id="c067e0d5231aa5bf288d5b493651395abea2d520" translate="yes" xml:space="preserve">
          <source>Paul Evans &amp;lt;leonerd@leonerd.org.uk&amp;gt;</source>
          <target state="translated">ポール・エヴァンス&amp;lt;leonerd@leonerd.org.uk&amp;gt;</target>
        </trans-unit>
        <trans-unit id="ae5aab87a980cf487fa8eb081248898801ca988d" translate="yes" xml:space="preserve">
          <source>Paul Fenwick &amp;lt;pjf@perltraining.com.au&amp;gt;</source>
          <target state="translated">ポールフェンウィック&amp;lt;pjf@perltraining.com.au&amp;gt;</target>
        </trans-unit>
        <trans-unit id="4fa864bbad1d0617a3967173b7db313f3efab055" translate="yes" xml:space="preserve">
          <source>Paul Green &amp;lt;Paul.Green@stratus.com&amp;gt;</source>
          <target state="translated">ポールグリーン&amp;lt;Paul.Green@stratus.com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="657c59b79c5dc51478a7a404f0af13b53b988447" translate="yes" xml:space="preserve">
          <source>Paul Green (Paul.Green@stratus.com)</source>
          <target state="translated">ポール・グリーン (Paul.Green@stratus.com)</target>
        </trans-unit>
        <trans-unit id="7bea737592f1b2469295059802a7399af95a087a" translate="yes" xml:space="preserve">
          <source>Paul Marquess</source>
          <target state="translated">ポール・マーキーズ</target>
        </trans-unit>
        <trans-unit id="1da5f372b188cb5eeeeafb09b1f0a31fca9b993f" translate="yes" xml:space="preserve">
          <source>Paul Marquess &amp;lt;Paul.Marquess@btinternet.com&amp;gt;</source>
          <target state="translated">Paul Marquess &amp;lt;Paul.Marquess@btinternet.com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="4fbcf625afc3d507d379cacdea04bbc6b875a1d5" translate="yes" xml:space="preserve">
          <source>Paul Marquess &amp;lt;pmqs@cpan.org&amp;gt;</source>
          <target state="translated">Paul Marquess &amp;lt;pmqs@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="c4337beb0e4af629844f1525d967a958a8d53fbd" translate="yes" xml:space="preserve">
          <source>Paul Marquess pmqs@cpan.org</source>
          <target state="translated">ポール・マーケス pmqs@cpan.org</target>
        </trans-unit>
        <trans-unit id="914e119a6f7c68c285bad290780b5645e4c2e6e0" translate="yes" xml:space="preserve">
          <source>Paul Szabo identified the race condition originally, and Brendan O'Dea wrote an implementation for Debian that addressed the problem. That code was used as a basis for the current code. Their efforts are greatly appreciated.</source>
          <target state="translated">Paul Szabo さんはもともと競合状態を特定しており、Brendan O'Dea さんはこの問題に対処するために Debian 用の実装を書きました。そのコードは現在のコードの基礎として使われています。彼らの努力は非常に高く評価されています。</target>
        </trans-unit>
        <trans-unit id="37c56bd6f44f98356093abe0640820d8fc0e4efe" translate="yes" xml:space="preserve">
          <source>Pay a special attention to the function &lt;code&gt;constant&lt;/code&gt; . This name appears twice in the generated .xs file: once in the first part, as a static C function, then another time in the second part, when an XSUB interface to this static C function is defined.</source>
          <target state="translated">関数 &lt;code&gt;constant&lt;/code&gt; 特に注意してください。この名前は、生成された.xsファイルに2回表示されます。1回目は静的C関数として、2回目はこの静的C関数へのXSUBインターフェイスが定義されているときに2回目に表示されます。</target>
        </trans-unit>
        <trans-unit id="5eefac59c237fc6f09f96bf4739df8b3e296a3e0" translate="yes" xml:space="preserve">
          <source>Pay a special attention to the function &lt;code&gt;constant&lt;/code&gt;. This name appears twice in the generated .xs file: once in the first part, as a static C function, then another time in the second part, when an XSUB interface to this static C function is defined.</source>
          <target state="translated">関数 &lt;code&gt;constant&lt;/code&gt; 特に注意してください。この名前は、生成された.xsファイルに2回表示されます。1回目は静的C関数として、もう1回はこの静的C関数へのXSUBインターフェイスが定義されているときに2回目です。</target>
        </trans-unit>
        <trans-unit id="fd86f5fbb7a13e213f07f240ee7591f9616574c1" translate="yes" xml:space="preserve">
          <source>Pay careful attention to the next example:</source>
          <target state="translated">次の例に注意してください。</target>
        </trans-unit>
        <trans-unit id="8629c3dd5ba30eee7c4ac6064407b780f19df3f6" translate="yes" xml:space="preserve">
          <source>Pay special attention to &lt;a href=&quot;#METHODS-FOR-PARSING-AND-PROCESSING&quot;&gt;METHODS FOR PARSING AND PROCESSING&lt;/a&gt; and to the objects described in &lt;a href=&quot;inputobjects&quot;&gt;Pod::InputObjects&lt;/a&gt;. The former describes the gory details and parameters for how to customize and extend the parsing behavior of &lt;b&gt;Pod::Parser&lt;/b&gt;. &lt;b&gt;Pod::InputObjects&lt;/b&gt; provides several objects that may all be used interchangeably as parse-trees. The most obvious one is the &lt;b&gt;Pod::ParseTree&lt;/b&gt; object. It defines the basic interface and functionality that all things trying to be a POD parse-tree should do. A &lt;b&gt;Pod::ParseTree&lt;/b&gt; is defined such that each &quot;node&quot; may be a text-string, or a reference to another parse-tree. Each &lt;b&gt;Pod::Paragraph&lt;/b&gt; object and each &lt;b&gt;Pod::InteriorSequence&lt;/b&gt; object also supports the basic parse-tree interface.</source>
          <target state="translated">&lt;a href=&quot;#METHODS-FOR-PARSING-AND-PROCESSING&quot;&gt;パーシングと処理のメソッド、および&lt;/a&gt;&lt;a href=&quot;inputobjects&quot;&gt;Pod :: InputObjectsで&lt;/a&gt;説明されているオブジェクトに特に注意してください。前者は、&lt;b&gt;Pod :: Parserの&lt;/b&gt;解析動作をカスタマイズおよび拡張する方法についての詳細な説明とパラメーターについて説明しています。&lt;b&gt;Pod :: InputObjects&lt;/b&gt;は、解析ツリーとしてすべて同じ意味で使用できるいくつかのオブジェクトを提供します。最も明白なものは、&lt;b&gt;Pod :: ParseTree&lt;/b&gt;オブジェクトです。これは、POD解析ツリーを作成するために必要なすべてのことを実行するための基本的なインターフェースと機能を定義します。 A &lt;b&gt;ポッド::パースツリーは、&lt;/b&gt;各「ノード」は、テキスト文字列、または他の構文解析ツリーを参照することができるように定義されています。各&lt;b&gt;Pod :: Paragraph&lt;/b&gt;オブジェクトと各&lt;b&gt;Pod :: InteriorSequence&lt;/b&gt;オブジェクトは、基本的な解析ツリーインターフェースもサポートしています。</target>
        </trans-unit>
        <trans-unit id="421867b24b96c23edf6abebb9f45037077322733" translate="yes" xml:space="preserve">
          <source>Pbzip2 (&lt;a href=&quot;http://compression.ca/pbzip2/&quot;&gt;http://compression.ca/pbzip2/&lt;/a&gt;) is a parallel implementation of bzip2. The output from pbzip2 consists of a series of concatenated bzip2 data streams.</source>
          <target state="translated">Pbzip2（&lt;a href=&quot;http://compression.ca/pbzip2/&quot;&gt;http://compression.ca/pbzip2/&lt;/a&gt;）は、bzip2の並列実装です。pbzip2からの出力は、一連の連結されたbzip2データストリームで構成されます。</target>
        </trans-unit>
        <trans-unit id="34e03bb07d00faf766cfd7d7ab601c37578574e6" translate="yes" xml:space="preserve">
          <source>Pdksh</source>
          <target state="translated">Pdksh</target>
        </trans-unit>
        <trans-unit id="8c0ffaf5c4cb2ca5b26bd5b8ebbf764c3f361b3b" translate="yes" xml:space="preserve">
          <source>Peeking At Perl's Internal Encoding</source>
          <target state="translated">Perl の内部エンコーディングを覗く</target>
        </trans-unit>
        <trans-unit id="9326788fe51cb580ed1b0dbf97738788d7548374" translate="yes" xml:space="preserve">
          <source>Peep-hole Optimisation and Analysis</source>
          <target state="translated">覗き穴の最適化と解析</target>
        </trans-unit>
        <trans-unit id="942951d0647566db32d37d28d3b5cb152d328945" translate="yes" xml:space="preserve">
          <source>Peephole optimizations are done by calling the function pointed to by the global variable &lt;code&gt;PL_peepp&lt;/code&gt; . By default, &lt;code&gt;PL_peepp&lt;/code&gt; just calls the function pointed to by the global variable &lt;code&gt;PL_rpeepp&lt;/code&gt; . By default, that performs some basic op fixups and optimisations along the execution-order op chain, and recursively calls &lt;code&gt;PL_rpeepp&lt;/code&gt; for each side chain of ops (resulting from conditionals). Extensions may provide additional optimisations or fixups, hooking into either the per-subroutine or recursive stage, like this:</source>
          <target state="translated">&lt;code&gt;PL_peepp&lt;/code&gt; 最適化は、グローバル変数PL_peeppが指す関数を呼び出すことによって行われます。デフォルトでは、 &lt;code&gt;PL_peepp&lt;/code&gt; は、グローバル変数 &lt;code&gt;PL_rpeepp&lt;/code&gt; が指す関数を呼び出すだけです。デフォルトでは、実行順序のopチェーンに沿っていくつかの基本的なopフィックスアップと最適化を実行し、opの各サイドチェーン（条件に起因する）に対して &lt;code&gt;PL_rpeepp&lt;/code&gt; を再帰的に呼び出します。拡張機能は、次のように、サブルーチンごとのステージまたは再帰的なステージのいずれかにフックして、追加の最適化または修正を提供します。</target>
        </trans-unit>
        <trans-unit id="709d0672c38fb37cdd0a3a0f4b57bb8444e4ff99" translate="yes" xml:space="preserve">
          <source>Peephole optimizations are done by calling the function pointed to by the global variable &lt;code&gt;PL_peepp&lt;/code&gt;. By default, &lt;code&gt;PL_peepp&lt;/code&gt; just calls the function pointed to by the global variable &lt;code&gt;PL_rpeepp&lt;/code&gt;. By default, that performs some basic op fixups and optimisations along the execution-order op chain, and recursively calls &lt;code&gt;PL_rpeepp&lt;/code&gt; for each side chain of ops (resulting from conditionals). Extensions may provide additional optimisations or fixups, hooking into either the per-subroutine or recursive stage, like this:</source>
          <target state="translated">のぞき穴の最適化は、グローバル変数 &lt;code&gt;PL_peepp&lt;/code&gt; が指す関数を呼び出すことによって行われます。デフォルトでは、 &lt;code&gt;PL_peepp&lt;/code&gt; は、グローバル変数 &lt;code&gt;PL_rpeepp&lt;/code&gt; が指す関数を呼び出すだけです。デフォルトでは、実行順序のopチェーンに沿っていくつかの基本的なopの修正と最適化を実行し、opsの各サイドチェーンに対して &lt;code&gt;PL_rpeepp&lt;/code&gt; を再帰的に呼び出します（条件の結果）。拡張機能は、次のように、サブルーチンごとまたは再帰的な段階のいずれかにフックして、追加の最適化または修正を提供する場合があります。</target>
        </trans-unit>
        <trans-unit id="82179522f8f70fef91d933963bf641d088811bc4" translate="yes" xml:space="preserve">
          <source>PeerAddr =&amp;gt; STRING</source>
          <target state="translated">PeerAddr =&amp;gt; STRING</target>
        </trans-unit>
        <trans-unit id="6708632816e3f269f58a404db243454e1641a932" translate="yes" xml:space="preserve">
          <source>PeerAddrInfo =&amp;gt; ARRAY</source>
          <target state="translated">PeerAddrInfo =&amp;gt; ARRAY</target>
        </trans-unit>
        <trans-unit id="46d2192e63cd05faab929cd650436f61dca14ce8" translate="yes" xml:space="preserve">
          <source>PeerHost =&amp;gt; STRING</source>
          <target state="translated">PeerHost =&amp;gt; STRING</target>
        </trans-unit>
        <trans-unit id="8d075a3ed08988dae4c16a7043806162ccac9817" translate="yes" xml:space="preserve">
          <source>PeerHost AND LocalHost PARSING</source>
          <target state="translated">PeerHost と LocalHost のパース</target>
        </trans-unit>
        <trans-unit id="fa91cf15a151119bf0702338d553a73e0af264a2" translate="yes" xml:space="preserve">
          <source>PeerPort =&amp;gt; STRING</source>
          <target state="translated">PeerPort =&amp;gt; STRING</target>
        </trans-unit>
        <trans-unit id="a759d273b63a64efde6b41235362623a3e0e2136" translate="yes" xml:space="preserve">
          <source>PeerService =&amp;gt; STRING</source>
          <target state="translated">PeerService =&amp;gt; STRING</target>
        </trans-unit>
        <trans-unit id="dff756efe8f5dd0813ab9c374e52c792233eda90" translate="yes" xml:space="preserve">
          <source>Pennsylvania</source>
          <target state="translated">Pennsylvania</target>
        </trans-unit>
        <trans-unit id="3d7bbafed59a27c1513d780d5e784c2a12ef1dc5" translate="yes" xml:space="preserve">
          <source>People frequently expect it to work like this. So it does.</source>
          <target state="translated">人はよく「こんな風に動くんだ」と期待します。だから、そうなるのです。</target>
        </trans-unit>
        <trans-unit id="bc1de57d7a939bd26a67e8c9562637156f53e824" translate="yes" xml:space="preserve">
          <source>People have a hard time remembering that some functions default to $_, or @ARGV, or whatever, but that others which you might expect to do not.</source>
          <target state="translated">関数の中には $_や @ARGV などのデフォルトのものがありますが、それ以外の関数はデフォルトではないことを覚えておくのに苦労する人もいるでしょう。</target>
        </trans-unit>
        <trans-unit id="af3c23d7810d9feb567b332e5161af8d9bd9f452" translate="yes" xml:space="preserve">
          <source>People like to see their strings nicely sorted--or as Unicode parlance goes, collated. But again, what do you mean by collate?</source>
          <target state="translated">人々は自分の文字列をきれいに並べ替えるのが好きです。Unicodeの言い回しで言えば「照合」です。しかし、もう一度言いますが、照合するというのはどういう意味でしょうか?</target>
        </trans-unit>
        <trans-unit id="895626deb1f05ce05a822ae049fef844846a6710" translate="yes" xml:space="preserve">
          <source>People sometimes point out that &lt;a href=&quot;../db_file&quot;&gt;DB_File&lt;/a&gt; will do something similar, and ask why &lt;code&gt;Tie::File&lt;/code&gt; module is necessary.</source>
          <target state="translated">人々は時々&lt;a href=&quot;../db_file&quot;&gt;DB_File&lt;/a&gt;が同様のことをすることを指摘し、なぜ &lt;code&gt;Tie::File&lt;/code&gt; モジュールが必要なのかと尋ねます。</target>
        </trans-unit>
        <trans-unit id="e4fa6539419b00af03d768603a4618e5be18322c" translate="yes" xml:space="preserve">
          <source>People sometimes point out that &lt;a href=&quot;db_file&quot;&gt;DB_File&lt;/a&gt; will do something similar, and ask why &lt;code&gt;Tie::File&lt;/code&gt; module is necessary.</source>
          <target state="translated">&lt;a href=&quot;db_file&quot;&gt;DB_File&lt;/a&gt;が同様のことをすることを指摘し、 &lt;code&gt;Tie::File&lt;/code&gt; モジュールが必要な理由を尋ねる人もいます。</target>
        </trans-unit>
        <trans-unit id="99dcc00aba3ea5fec8f203b99f7aa0dc52bd345a" translate="yes" xml:space="preserve">
          <source>Per default all untar operations are done with the perl module Archive::Tar; by setting this variable to true the external tar command is used if available; on Unix this is usually preferred because they have a reliable and fast gnutar implementation.</source>
          <target state="translated">デフォルトでは、すべての untar 操作は perl モジュール Archive::Tar で行われます。 この変数を true に設定すると、利用可能な場合は外部の tar コマンドが使用されます。</target>
        </trans-unit>
        <trans-unit id="c4f661f9e3bbabdfe8977d8e07c04f728f007afa" translate="yes" xml:space="preserve">
          <source>Per-Interpreter Variables</source>
          <target state="translated">インタプリタごとの変数</target>
        </trans-unit>
        <trans-unit id="2559c9f59f217f32b3e891e1ab6877c4f55356cc" translate="yes" xml:space="preserve">
          <source>Per-instance Data</source>
          <target state="translated">インスタンスごとのデータ</target>
        </trans-unit>
        <trans-unit id="637c16442a8f555cae097e71247c5fc7ee45adfd" translate="yes" xml:space="preserve">
          <source>Per-instance flag bits</source>
          <target state="translated">インスタンス毎のフラグビット</target>
        </trans-unit>
        <trans-unit id="24a428fdaa34dbb9d25a2ae2897474ba4a8b3383" translate="yes" xml:space="preserve">
          <source>Perceptive Perl hackers may have noticed that a &lt;code&gt;for&lt;/code&gt; loop has a return value, and that this value can be captured by wrapping the loop in a &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt; block. The reward for this discovery is this cautionary advice: The return value of a &lt;code&gt;for&lt;/code&gt; loop is unspecified and may change without notice. Do not rely on it.</source>
          <target state="translated">知覚的なPerlハッカーは、 &lt;code&gt;for&lt;/code&gt; ループに戻り値があり、この値はループを &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt; ブロックでラップすることでキャプチャできることに気付いたかもしれません。この発見の見返りは、この警告的なアドバイスです： &lt;code&gt;for&lt;/code&gt; ループの戻り値は指定されておらず、予告なく変更される可能性があります。それに依存しないでください。</target>
        </trans-unit>
        <trans-unit id="6e85b222ac46dc12730aecc629694a020c6eeb78" translate="yes" xml:space="preserve">
          <source>Perceptive Perl hackers may have noticed that a &lt;code&gt;for&lt;/code&gt; loop has a return value, and that this value can be captured by wrapping the loop in a &lt;code&gt;do&lt;/code&gt; block. The reward for this discovery is this cautionary advice: The return value of a &lt;code&gt;for&lt;/code&gt; loop is unspecified and may change without notice. Do not rely on it.</source>
          <target state="translated">知覚的なPerlハッカーは、 &lt;code&gt;for&lt;/code&gt; ループに戻り値があり、この値はループを &lt;code&gt;do&lt;/code&gt; ブロックでラップすることで取得できることに気付いたかもしれません。この発見のための報酬は、この警戒のアドバイスです：の戻り値 &lt;code&gt;for&lt;/code&gt; ループが指定されていない、予告なく変更される場合があります。それに頼らないでください。</target>
        </trans-unit>
        <trans-unit id="07e9965ae0a1c370ab69fb29d7dbc17ad92d7783" translate="yes" xml:space="preserve">
          <source>Perform a stream ping. If the tcp connection isn't already open, it opens it. It then sends some data and waits for a reply. It leaves the stream open on exit.</source>
          <target state="translated">ストリーム ping を実行します。tcp接続がまだ開いていない場合は、それを開きます。その後、いくつかのデータを送信し、応答を待ちます。終了時にはストリームをオープンしたままにします。</target>
        </trans-unit>
        <trans-unit id="4d0ad0b2d6ac0afcdcc0122fc81922056578805a" translate="yes" xml:space="preserve">
          <source>Perform a udp echo ping. Construct a message of at least the one-byte sequence number and any additional data bytes. Send the message out and wait for a message to come back. If we get a message, make sure all of its parts match. If they do, we are done. Otherwise go back and wait for the message until we run out of time. Return the result of our efforts.</source>
          <target state="translated">udp echo ping を実行します。少なくとも 1 バイトのシーケンス番号と追加のデータバイトのメッセージを構築します。メッセージを送信し、メッセージが返ってくるのを待つ。メッセージが返ってきたら、すべてのパーツが一致していることを確認してください。合っていれば完了です。そうでなければ、時間がなくなるまで戻ってメッセージを待つ。努力の結果をお返しします。</target>
        </trans-unit>
        <trans-unit id="79aed27967237d1d2c231b08b0c043db2872fef5" translate="yes" xml:space="preserve">
          <source>Perform an in-place trimming of leading and trailing whitespace from the first argument provided to the function.</source>
          <target state="translated">関数に与えられた最初の引数から、先頭と末尾の空白をその場でトリミングします。</target>
        </trans-unit>
        <trans-unit id="ec8bd6ff6508298e4713b89624c59cb269e84e9c" translate="yes" xml:space="preserve">
          <source>Perform assignment to the &lt;code&gt;func_args&lt;/code&gt; attribute.</source>
          <target state="translated">&lt;code&gt;func_args&lt;/code&gt; 属性への割り当てを実行します。</target>
        </trans-unit>
        <trans-unit id="2c46ae69f753cf6246720edd2c4a9cebd27597f5" translate="yes" xml:space="preserve">
          <source>Perform cache scanning ('atstart', 'atexit' or 'never')?</source>
          <target state="translated">キャッシュスキャン('atstart'、'atexit'、'never'のいずれか)を実行しますか?</target>
        </trans-unit>
        <trans-unit id="c63fc543a09237e1df38dff5523874d7739bd5c9" translate="yes" xml:space="preserve">
          <source>Perform sorting on one type of platform only.</source>
          <target state="translated">1種類のプラットフォームのみでソートを行います。</target>
        </trans-unit>
        <trans-unit id="c27007b93a4bc1c8de4cbbfbb0c5571ba69e57a4" translate="yes" xml:space="preserve">
          <source>Perform the equivalent of &lt;code&gt;&lt;a href=&quot;../functions/splice&quot;&gt;splice&lt;/a&gt;&lt;/code&gt; on the array.</source>
          <target state="translated">アレイ上で同等の &lt;code&gt;&lt;a href=&quot;../functions/splice&quot;&gt;splice&lt;/a&gt;&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="f4070651c463f5c50952530e94f62331111d1bf1" translate="yes" xml:space="preserve">
          <source>Perform the equivalent of &lt;code&gt;&lt;a href=&quot;functions/splice&quot;&gt;splice&lt;/a&gt;&lt;/code&gt; on the array.</source>
          <target state="translated">アレイ上で同等の &lt;code&gt;&lt;a href=&quot;functions/splice&quot;&gt;splice&lt;/a&gt;&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="ed35d3518038453f5800bc06513fa8bdaa2767df" translate="yes" xml:space="preserve">
          <source>Perform the equivalent of &lt;code&gt;splice&lt;/code&gt; on the array.</source>
          <target state="translated">アレイで &lt;code&gt;splice&lt;/code&gt; と同等の処理を実行します。</target>
        </trans-unit>
        <trans-unit id="64184a2388a7346fec59e49f0f94873466b15963" translate="yes" xml:space="preserve">
          <source>Perform whatever actions the command line args specified. The &lt;code&gt;prove&lt;/code&gt; command line tool consists of the following code:</source>
          <target state="translated">コマンドライン引数で指定されたアクションを実行します。 &lt;code&gt;prove&lt;/code&gt; コマンドラインツールは、次のコードで構成されています。</target>
        </trans-unit>
        <trans-unit id="0cb883fc85b1fd84aaebb7319c682c586a065641" translate="yes" xml:space="preserve">
          <source>Performance considerations</source>
          <target state="translated">パフォーマンスの考慮事項</target>
        </trans-unit>
        <trans-unit id="8b696788f6758fff45816e3f44d267110dbc7d28" translate="yes" xml:space="preserve">
          <source>Performance issues</source>
          <target state="translated">パフォーマンスの問題</target>
        </trans-unit>
        <trans-unit id="75fbc5c30da07f1356bcf407f1026c09ad8550fb" translate="yes" xml:space="preserve">
          <source>Performance testing</source>
          <target state="translated">パフォーマンステスト</target>
        </trans-unit>
        <trans-unit id="d9a7e43f70de19f613749fe02de0e154833f44cd" translate="yes" xml:space="preserve">
          <source>Performing Perl pattern matches and substitutions from your C program</source>
          <target state="translated">CプログラムからPerlのパターンマッチと置換を実行する</target>
        </trans-unit>
        <trans-unit id="3561dc2da1552ce45c86dea5a0a9894997990d1e" translate="yes" xml:space="preserve">
          <source>Performs a TCP echo. It writes the given string to the socket and then reads it back. It returns 1 on success, 0 on failure.</source>
          <target state="translated">TCP エコーを実行します。与えられた文字列をソケットに書き込み、それを読み返します。成功した場合は 1、失敗した場合は 0 を返します。</target>
        </trans-unit>
        <trans-unit id="a965e83c4b09bcea3d12be93ff1b3ea645513eea" translate="yes" xml:space="preserve">
          <source>Performs a callback to the Perl sub specified by the SV.</source>
          <target state="translated">SV で指定された Perl サブへのコールバックを行います。</target>
        </trans-unit>
        <trans-unit id="b82005b8824a2b9aeaec337d4f6692160e086478" translate="yes" xml:space="preserve">
          <source>Performs a callback to the Perl sub whose name is in the SV. See &lt;a href=&quot;perlcall&quot;&gt;perlcall&lt;/a&gt;.</source>
          <target state="translated">名前がSVにあるPerlサブルーチンへのコールバックを実行します。&lt;a href=&quot;perlcall&quot;&gt;perlcallを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="c9a6e4b7d6eb6de9cfa7c1c05de09156f5313aec" translate="yes" xml:space="preserve">
          <source>Performs a callback to the specified Perl method. The blessed object must be on the stack. See &lt;a href=&quot;perlcall&quot;&gt;perlcall&lt;/a&gt;.</source>
          <target state="translated">指定されたPerlメソッドへのコールバックを実行します。祝福されたオブジェクトはスタック上になければなりません。&lt;a href=&quot;perlcall&quot;&gt;perlcallを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="7f3fb532eda4a585d8b90e5f5df9aa47f234c3a5" translate="yes" xml:space="preserve">
          <source>Performs a callback to the specified Perl sub. See &lt;a href=&quot;perlcall&quot;&gt;perlcall&lt;/a&gt;.</source>
          <target state="translated">指定されたPerlサブルーチンへのコールバックを実行します。&lt;a href=&quot;perlcall&quot;&gt;perlcallを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="d6c45982ba770a19e61a195555dad69e694989fd" translate="yes" xml:space="preserve">
          <source>Performs a callback to the specified named and package-scoped Perl subroutine with &lt;code&gt;argv&lt;/code&gt; (a &lt;code&gt;NULL&lt;/code&gt;-terminated array of strings) as arguments. See &lt;a href=&quot;perlcall&quot;&gt;perlcall&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;argv&lt;/code&gt; （ &lt;code&gt;NULL&lt;/code&gt; で終了する文字列の配列）を引数として、指定された名前付きパッケージスコープのPerlサブルーチンへのコールバックを実行します。&lt;a href=&quot;perlcall&quot;&gt;perlcallを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="49600604ba37ec7bb2caf7fae02578e1f3fb4be1" translate="yes" xml:space="preserve">
          <source>Performs a callback to the specified named and package-scoped Perl subroutine with &lt;code&gt;argv&lt;/code&gt; (a NULL-terminated array of strings) as arguments. See &lt;a href=&quot;perlcall&quot;&gt;perlcall&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;argv&lt;/code&gt; （NULLで終了する文字列の配列）を引数として、指定された名前付きのパッケージスコープのPerlサブルーチンへのコールバックを実行します。&lt;a href=&quot;perlcall&quot;&gt;perlcallを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="a93173811bef953ad5c7fb92a164bcccd11d68ac" translate="yes" xml:space="preserve">
          <source>Performs a logical format of [part of] the disk. &lt;code&gt;$opOutBuf&lt;/code&gt; should be &lt;code&gt;[]&lt;/code&gt;. &lt;code&gt;$pInBuf&lt;/code&gt; should contain a &lt;code&gt;VERIFY_INFORMATION&lt;/code&gt; data structure:</source>
          <target state="translated">ディスクの[一部]の論理フォーマットを実行します。 &lt;code&gt;$opOutBuf&lt;/code&gt; は &lt;code&gt;[]&lt;/code&gt; である必要があります。 &lt;code&gt;$pInBuf&lt;/code&gt; は、 &lt;code&gt;VERIFY_INFORMATION&lt;/code&gt; データ構造が含まれている必要があります。</target>
        </trans-unit>
        <trans-unit id="8a85f5d1bfcb6901403b71c0162984e3d90d98b0" translate="yes" xml:space="preserve">
          <source>Performs a mapping at several places inside &lt;code&gt;PARAGRAPH&lt;/code&gt; loop.</source>
          <target state="translated">&lt;code&gt;PARAGRAPH&lt;/code&gt; ループ内のいくつかの場所でマッピングを実行します。</target>
        </trans-unit>
        <trans-unit id="ada148fba94bb82b7e37d39db36e65570e59f9e9" translate="yes" xml:space="preserve">
          <source>Performs an &lt;code&gt;hv_iternext&lt;/code&gt; , &lt;code&gt;hv_iterkey&lt;/code&gt; , and &lt;code&gt;hv_iterval&lt;/code&gt; in one operation.</source>
          <target state="translated">1つの操作で &lt;code&gt;hv_iternext&lt;/code&gt; 、 &lt;code&gt;hv_iterkey&lt;/code&gt; 、および &lt;code&gt;hv_iterval&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="6cba5f16ad57dc74bb0f4aa303ceff45a83b2485" translate="yes" xml:space="preserve">
          <source>Performs an &lt;code&gt;hv_iternext&lt;/code&gt;, &lt;code&gt;hv_iterkey&lt;/code&gt;, and &lt;code&gt;hv_iterval&lt;/code&gt; in one operation.</source>
          <target state="translated">1回の操作で &lt;code&gt;hv_iternext&lt;/code&gt; 、 &lt;code&gt;hv_iterkey&lt;/code&gt; 、および &lt;code&gt;hv_iterval&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="08fa9ec15a0ad6b718fdf2229eda1c22f6e3ebcd" translate="yes" xml:space="preserve">
          <source>Performs some preprocessing to the string to ensure that it has the correct characteristics of a version. Flags the object if it contains an underscore (which denotes this is an alpha version). The boolean qv denotes that the version should be interpreted as if it had multiple decimals, even if it doesn't.</source>
          <target state="translated">文字列に対して何らかの前処理を行い、それがバージョンの正しい特性を持っていることを確認します。オブジェクトにアンダースコアが含まれている場合はフラグを立てます (これはアルファバージョンであることを示します)。ブール値 qv は、バージョンが複数のデシマルを持っているかのように解釈されるべきであることを示します。</target>
        </trans-unit>
        <trans-unit id="8509e18df89af9b03f62a1a48a7b2cabc5f8fb27" translate="yes" xml:space="preserve">
          <source>Performs the default fixup of the arguments part of an &lt;code&gt;entersub&lt;/code&gt; op tree. This consists of applying list context to each of the argument ops. This is the standard treatment used on a call marked with &lt;code&gt;&amp;amp;&lt;/code&gt; , or a method call, or a call through a subroutine reference, or any other call where the callee can't be identified at compile time, or a call where the callee has no prototype.</source>
          <target state="translated">&lt;code&gt;entersub&lt;/code&gt; opツリーの引数部分のデフォルトのフィックスアップを実行します。これは、各引数opsにリストコンテキストを適用することで構成されます。これは、 &lt;code&gt;&amp;amp;&lt;/code&gt; でマークされた呼び出し、メソッド呼び出し、サブルーチン参照を介した呼び出し、またはコンパイル時に呼び出し先を識別できないその他の呼び出し、または呼び出し先に呼び出しがない場合の呼び出しで使用される標準の処理です。プロトタイプ。</target>
        </trans-unit>
        <trans-unit id="dcd4f6dd1d93f7b286764b64bc6640cc06f23fc9" translate="yes" xml:space="preserve">
          <source>Performs the default fixup of the arguments part of an &lt;code&gt;entersub&lt;/code&gt; op tree. This consists of applying list context to each of the argument ops. This is the standard treatment used on a call marked with &lt;code&gt;&amp;amp;&lt;/code&gt;, or a method call, or a call through a subroutine reference, or any other call where the callee can't be identified at compile time, or a call where the callee has no prototype.</source>
          <target state="translated">&lt;code&gt;entersub&lt;/code&gt; opツリーの引数部分のデフォルトの修正を実行します。これは、各引数opsにリストコンテキストを適用することで構成されます。これは、 &lt;code&gt;&amp;amp;&lt;/code&gt; でマークされた呼び出し、メソッド呼び出し、サブルーチン参照を介した呼び出し、またはコンパイル時に呼び出し先を識別できないその他の呼び出し、または呼び出し先がいない呼び出しで使用される標準的な処理です。プロトタイプ。</target>
        </trans-unit>
        <trans-unit id="f72b3c1a72c8131e9de33c78c73bf05b880137dc" translate="yes" xml:space="preserve">
          <source>Performs the fixup of the arguments part of an &lt;code&gt;entersub&lt;/code&gt; op tree based on a subroutine prototype. This makes various modifications to the argument ops, from applying context up to inserting &lt;code&gt;refgen&lt;/code&gt; ops, and checking the number and syntactic types of arguments, as directed by the prototype. This is the standard treatment used on a subroutine call, not marked with &lt;code&gt;&amp;amp;&lt;/code&gt; , where the callee can be identified at compile time and has a prototype.</source>
          <target state="translated">サブルーチンプロトタイプに基づいて、 &lt;code&gt;entersub&lt;/code&gt; opツリーの引数部分の修正を実行します。これにより、コンテキストの適用から &lt;code&gt;refgen&lt;/code&gt; opsの挿入、プロトタイプの指示に従って引数の数と構文タイプのチェックまで、引数opsにさまざまな変更が加えられます。これは、 &lt;code&gt;&amp;amp;&lt;/code&gt; でマークされていない、サブルーチン呼び出しで使用される標準の処理です。呼び出し先はコンパイル時に識別でき、プロトタイプがあります。</target>
        </trans-unit>
        <trans-unit id="4f92bca3cb1656fef11c8172e4312cdfd95b4758" translate="yes" xml:space="preserve">
          <source>Performs the fixup of the arguments part of an &lt;code&gt;entersub&lt;/code&gt; op tree based on a subroutine prototype. This makes various modifications to the argument ops, from applying context up to inserting &lt;code&gt;refgen&lt;/code&gt; ops, and checking the number and syntactic types of arguments, as directed by the prototype. This is the standard treatment used on a subroutine call, not marked with &lt;code&gt;&amp;amp;&lt;/code&gt;, where the callee can be identified at compile time and has a prototype.</source>
          <target state="translated">サブルーチンプロトタイプに基づいて、 &lt;code&gt;entersub&lt;/code&gt; opツリーの引数部分の修正を実行します。これにより、コンテキストの適用から &lt;code&gt;refgen&lt;/code&gt; opsの挿入、プロトタイプの指示に従って引数の数と構文タイプの確認まで、引数opsにさまざまな変更が加えられます。これは、 &lt;code&gt;&amp;amp;&lt;/code&gt; でマークされていないサブルーチン呼び出しで使用される標準的な処理であり、呼び出し先はコンパイル時に識別でき、プロトタイプがあります。</target>
        </trans-unit>
        <trans-unit id="6157a20bbb392600596ac64ab923dad03e358522" translate="yes" xml:space="preserve">
          <source>Performs the fixup of the arguments part of an &lt;code&gt;entersub&lt;/code&gt; op tree either based on a subroutine prototype or using default list-context processing. This is the standard treatment used on a subroutine call, not marked with &lt;code&gt;&amp;amp;&lt;/code&gt; , where the callee can be identified at compile time.</source>
          <target state="translated">サブルーチンプロトタイプに基づいて、またはデフォルトのリストコンテキスト処理を使用して、 &lt;code&gt;entersub&lt;/code&gt; opツリーの引数部分の修正を実行します。これは、 &lt;code&gt;&amp;amp;&lt;/code&gt; でマークされていないサブルーチン呼び出しで使用される標準の処理であり、コンパイル時に呼び出し先を識別できます。</target>
        </trans-unit>
        <trans-unit id="ffdb85a69182d619eb9ec1084216af019391ff8b" translate="yes" xml:space="preserve">
          <source>Performs the fixup of the arguments part of an &lt;code&gt;entersub&lt;/code&gt; op tree either based on a subroutine prototype or using default list-context processing. This is the standard treatment used on a subroutine call, not marked with &lt;code&gt;&amp;amp;&lt;/code&gt;, where the callee can be identified at compile time.</source>
          <target state="translated">サブルーチンプロトタイプに基づいて、またはデフォルトのリストコンテキスト処理を使用して、 &lt;code&gt;entersub&lt;/code&gt; opツリーの引数部分の修正を実行します。これは、サブルーチン呼び出しで使用される標準的な処理であり、 &lt;code&gt;&amp;amp;&lt;/code&gt; でマークされていません。コンパイル時に呼び出し先を識別できます。</target>
        </trans-unit>
        <trans-unit id="ad00a766edb2027fe626d56fc86fda79a018bfe9" translate="yes" xml:space="preserve">
          <source>Perhaps I don't need a complete test harness. If I already have a TAP test log that I need to parse all I need is TAP::Parser and the various classes it depends upon. Here's the code I need to run a test and parse its TAP output</source>
          <target state="translated">おそらく、完全なテストハーネスは必要ないと思います。もし、既に解析する必要のあるTAPテストログを持っているなら、必要なのはTAP::Parserとそれに依存する様々なクラスだけです。テストを実行し、TAP出力を解析するために必要なコードは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="710b350b3985543df26a6fea7ac3e9557988bb88" translate="yes" xml:space="preserve">
          <source>Perhaps the most common mistake programmers make is to attempt to optimize their code before a program actually does anything useful - this is a bad idea. There's no point in having an extremely fast program that doesn't work. The first job is to get a program to</source>
          <target state="translated">おそらくプログラマーが犯す最も一般的な間違いは、プログラムが実際に何か役に立つことをする前にコードを最適化しようとすることでしょう。極端に高速なプログラムを作っても動作しないのでは意味がありません。最初の仕事は、プログラムを</target>
        </trans-unit>
        <trans-unit id="f111d810e7ca920bda8f128569fc002610c45314" translate="yes" xml:space="preserve">
          <source>Perl</source>
          <target state="translated">Perl</target>
        </trans-unit>
        <trans-unit id="6e211e278fc97780451705c4eb99e429ff84722f" translate="yes" xml:space="preserve">
          <source>Perl %s required (did you mean %s?)--this is only %s, stopped</source>
          <target state="translated">Perl %s が必要です (%s のことですか?)--これは %s だけですが、停止しました。</target>
        </trans-unit>
        <trans-unit id="57d705397ece0db459660f487bdc69be0c678860" translate="yes" xml:space="preserve">
          <source>Perl %s required--this is only %s, stopped</source>
          <target state="translated">Perl %s が必要です --これは %s だけですが、停止しています。</target>
        </trans-unit>
        <trans-unit id="c1f70e71f78a6960e6bfc54f17ed9725d674c2b0" translate="yes" xml:space="preserve">
          <source>Perl 5 Documentation</source>
          <target state="translated">Perl 5 ドキュメント</target>
        </trans-unit>
        <trans-unit id="8f5e9c26fdc65b3f883a3cb850a843ffd41fb0f9" translate="yes" xml:space="preserve">
          <source>Perl 5 Porters</source>
          <target state="translated">Perl 5 ポータ</target>
        </trans-unit>
        <trans-unit id="142bd9030035d40d81779a4f9a904554905faa01" translate="yes" xml:space="preserve">
          <source>Perl 5 has extension mechanisms, modules and XS, specifically to avoid the need to keep changing the Perl interpreter. You can write modules that export functions, you can give those functions prototypes so they can be called like built-in functions, you can even write XS code to mess with the runtime data structures of the Perl interpreter if you want to implement really complicated things.</source>
          <target state="translated">Perl 5 には、特に Perl インタプリタを変更し続ける必要性を回避するための拡張メカニズム、モジュール、XS があります。関数をエクスポートするモジュールを書いたり、それらの関数を組み込み関数のように呼び出すことができるようにプロトタイプを与えたり、本当に複雑なものを実装したい場合は、Perl インタプリタの実行時データ構造をいじるための XS コードを書くこともできます。</target>
        </trans-unit>
        <trans-unit id="365a603ab08b813cf9c586a16f80eeba34a1d121" translate="yes" xml:space="preserve">
          <source>Perl 5 is developed by a community, not a corporate entity. Every change contributed to the Perl core is the result of a donation. Typically, these donations are contributions of code or time by individual members of our community. On occasion, these donations come in the form of corporate or organizational sponsorship of a particular individual or project.</source>
          <target state="translated">Perl 5 は、企業ではなくコミュニティによって開発されています。Perlコアに貢献したすべての変更は、寄付の結果です。通常、これらの寄付は、私たちのコミュニティの個々のメンバーによるコードや時間の寄付です。時には、特定の個人やプロジェクトの企業や組織のスポンサーという形で寄付が行われることもあります。</target>
        </trans-unit>
        <trans-unit id="c7abcac9fa9f634d755f347614a5c92a44d2c3e5" translate="yes" xml:space="preserve">
          <source>Perl 5 was successfully compiled and tested on:</source>
          <target state="translated">Perl 5 のコンパイルとテストに成功しました。</target>
        </trans-unit>
        <trans-unit id="c7ebebb63cc5cd6e093751f9acf8676fc8362950" translate="yes" xml:space="preserve">
          <source>Perl 5.10 added three specials, &lt;code&gt;${^MATCH}&lt;/code&gt; , &lt;code&gt;${^PREMATCH}&lt;/code&gt; , and &lt;code&gt;${^POSTMATCH}&lt;/code&gt; to do the same job but without the global performance penalty. Perl 5.10 only sets these variables if you compile or execute the regular expression with the &lt;code&gt;/p&lt;/code&gt; modifier.</source>
          <target state="translated">Perl 5.10 は、同じ仕事をするために &lt;code&gt;${^MATCH}&lt;/code&gt; 、 &lt;code&gt;${^PREMATCH}&lt;/code&gt; 、および &lt;code&gt;${^POSTMATCH}&lt;/code&gt; 3つのスペシャルを追加しましたが、グローバルパフォーマンスのペナルティはありません。 Perl 5.10は、 &lt;code&gt;/p&lt;/code&gt; 修飾子を使用して正規表現をコンパイルまたは実行する場合にのみ、これらの変数を設定します。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
