<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="e8806606bef05e8e131f5318d8256b452c590878" translate="yes" xml:space="preserve">
          <source>except that the &lt;code&gt;FILTER&lt;/code&gt; subroutine is not exported by Filter::Simple.</source>
          <target state="translated">&lt;code&gt;FILTER&lt;/code&gt; サブルーチンがFilter :: Simpleによってエクスポートされないことを除いて。</target>
        </trans-unit>
        <trans-unit id="85da89c2f19ec3279bc4a98eb3b8b3add6e2fe81" translate="yes" xml:space="preserve">
          <source>except that the &lt;code&gt;name&lt;/code&gt; parameter is now defined as an SV* and we use</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; パラメータがSV *として定義されていることを除いて、</target>
        </trans-unit>
        <trans-unit id="a427987c18e9ca42a295a764cf477043ac986d25" translate="yes" xml:space="preserve">
          <source>except that the block was automatically broken out of by a successful &lt;code&gt;when&lt;/code&gt; or an explicit &lt;code&gt;break&lt;/code&gt; . Because it was only a copy, and because it was only lexically scoped, not dynamically scoped, you could not do the things with it that you are used to in a &lt;code&gt;foreach&lt;/code&gt; loop. In particular, it did not work for arbitrary function calls if those functions might try to access $_. Best stick to &lt;code&gt;foreach&lt;/code&gt; for that.</source>
          <target state="translated">ただし、成功した &lt;code&gt;when&lt;/code&gt; または明示的な &lt;code&gt;break&lt;/code&gt; によってブロックが自動的にブレークアウトされた点が異なります。これは単なるコピーであり、レキシカルスコープのみであり、ダイナミックスコープではないため、 &lt;code&gt;foreach&lt;/code&gt; ループで慣れていることはできません。特に、これらの関数が$ _にアクセスしようとする可能性がある場合、任意の関数呼び出しでは機能しませんでした。そのための &lt;code&gt;foreach&lt;/code&gt; に最適なスティック。</target>
        </trans-unit>
        <trans-unit id="332e65794395d67deed67f0f130120e2bed2febf" translate="yes" xml:space="preserve">
          <source>except that the block was automatically broken out of by a successful &lt;code&gt;when&lt;/code&gt; or an explicit &lt;code&gt;break&lt;/code&gt;. Because it was only a copy, and because it was only lexically scoped, not dynamically scoped, you could not do the things with it that you are used to in a &lt;code&gt;foreach&lt;/code&gt; loop. In particular, it did not work for arbitrary function calls if those functions might try to access $_. Best stick to &lt;code&gt;foreach&lt;/code&gt; for that.</source>
          <target state="translated">ただし、成功した &lt;code&gt;when&lt;/code&gt; または明示的な &lt;code&gt;break&lt;/code&gt; によって、ブロックが自動的に分割されました。これは単なるコピーであり、動的スコープではなく字句スコープのみであったため、 &lt;code&gt;foreach&lt;/code&gt; ループで慣れていることを実行できませんでした。特に、それらの関数が$ _にアクセスしようとする可能性がある場合、任意の関数呼び出しでは機能しませんでした。そのために &lt;code&gt;foreach&lt;/code&gt; に固執するのが最善です。</target>
        </trans-unit>
        <trans-unit id="5159e18bb6b00c337da814524bdec935db45c03e" translate="yes" xml:space="preserve">
          <source>except that the globbing is actually done internally using the standard &lt;code&gt;&lt;a href=&quot;File::Glob&quot;&gt;File::Glob&lt;/a&gt;&lt;/code&gt; extension. Of course, the shortest way to do the above is:</source>
          <target state="translated">ただし、グロブは実際には標準の &lt;code&gt;&lt;a href=&quot;File::Glob&quot;&gt;File::Glob&lt;/a&gt;&lt;/code&gt; 拡張子を使用して内部で実行されます。もちろん、上記を実行する最短の方法は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="288079796a99d8d6d162311d124325ad80383f85" translate="yes" xml:space="preserve">
          <source>except that the globbing is actually done internally using the standard &lt;code&gt;&lt;a href=&quot;file/glob&quot;&gt;File::Glob&lt;/a&gt;&lt;/code&gt; extension. Of course, the shortest way to do the above is:</source>
          <target state="translated">ただし、グロビングは実際には標準の &lt;code&gt;&lt;a href=&quot;file/glob&quot;&gt;File::Glob&lt;/a&gt;&lt;/code&gt; 拡張機能を使用して内部的に行われます。もちろん、上記を行う最も簡単な方法は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="830f4536fa6cb37b12ddd2df5d7c595e761a7345" translate="yes" xml:space="preserve">
          <source>except that the harnesses set up some environment variables that may affect the execution of the test:</source>
          <target state="translated">ただし、ハーネスはテストの実行に影響を与える環境変数を設定しています。</target>
        </trans-unit>
        <trans-unit id="7629dce512e057e4ca6849896335f4024fbb5559" translate="yes" xml:space="preserve">
          <source>except that the name &lt;code&gt;array&lt;/code&gt; has been replaced by the reference &lt;code&gt;{$table{$country}}&lt;/code&gt; . The &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push&lt;/a&gt;&lt;/code&gt; adds a city name to the end of the referred-to array.</source>
          <target state="translated">ただし、名前の &lt;code&gt;array&lt;/code&gt; が参照 &lt;code&gt;{$table{$country}}&lt;/code&gt; 置き換えられています。 &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push&lt;/a&gt;&lt;/code&gt; 呼ば-に配列の最後に都市名を追加します。</target>
        </trans-unit>
        <trans-unit id="725a6d011bfa76c44b3cc24f074e97ee1125bfdd" translate="yes" xml:space="preserve">
          <source>except that the name &lt;code&gt;array&lt;/code&gt; has been replaced by the reference &lt;code&gt;{$table{$country}}&lt;/code&gt; . The &lt;code&gt;@&lt;/code&gt; tells Perl to get the entire array. Having gotten the list of cities, we sort it, join it, and print it out as usual.</source>
          <target state="translated">ただし、名前の &lt;code&gt;array&lt;/code&gt; が参照 &lt;code&gt;{$table{$country}}&lt;/code&gt; 置き換えられています。 &lt;code&gt;@&lt;/code&gt; は、全体の配列を取得するためにPerlを伝えます。都市のリストを取得したら、並べ替え、結合し、通常どおりに印刷します。</target>
        </trans-unit>
        <trans-unit id="6f6997f7fbd44f90020d45a54bc75d5d46478f46" translate="yes" xml:space="preserve">
          <source>except that the name &lt;code&gt;array&lt;/code&gt; has been replaced by the reference &lt;code&gt;{$table{$country}}&lt;/code&gt;. The &lt;a href=&quot;perlfunc#push-ARRAY%2CLIST&quot;&gt;&lt;code&gt;push&lt;/code&gt;&lt;/a&gt; adds a city name to the end of the referred-to array.</source>
          <target state="translated">ただし、名前 &lt;code&gt;array&lt;/code&gt; が参照 &lt;code&gt;{$table{$country}}&lt;/code&gt; 置き換えられています。&lt;a href=&quot;perlfunc#push-ARRAY%2CLIST&quot;&gt; &lt;code&gt;push&lt;/code&gt; &lt;/a&gt;呼ば-に配列の最後に都市名を追加します。</target>
        </trans-unit>
        <trans-unit id="617e7ab5511ececbb64afe46f0773f906509a853" translate="yes" xml:space="preserve">
          <source>except that the name &lt;code&gt;array&lt;/code&gt; has been replaced by the reference &lt;code&gt;{$table{$country}}&lt;/code&gt;. The &lt;code&gt;@&lt;/code&gt; tells Perl to get the entire array. Having gotten the list of cities, we sort it, join it, and print it out as usual.</source>
          <target state="translated">ただし、名前の &lt;code&gt;array&lt;/code&gt; が参照 &lt;code&gt;{$table{$country}}&lt;/code&gt; 置き換えられています。 &lt;code&gt;@&lt;/code&gt; は、全体の配列を取得するためにPerlを伝えます。都市のリストを取得したら、通常どおりに並べ替え、参加して、印刷します。</target>
        </trans-unit>
        <trans-unit id="e07477129b13cb9207d6722b86eac736f236dcc8" translate="yes" xml:space="preserve">
          <source>except when &lt;code&gt;terminate&lt;/code&gt; is called for a Bail event</source>
          <target state="translated">保釈イベントのために &lt;code&gt;terminate&lt;/code&gt; が呼び出された場合を除く</target>
        </trans-unit>
        <trans-unit id="5d42ad1769f229c76031f30a404b4f7863d68de0" translate="yes" xml:space="preserve">
          <source>exception</source>
          <target state="translated">exception</target>
        </trans-unit>
        <trans-unit id="8a7cff3f8ed08071e56868120969aaf8a59ab745" translate="yes" xml:space="preserve">
          <source>exception handling</source>
          <target state="translated">例外処理</target>
        </trans-unit>
        <trans-unit id="6cebbebbd1286650695e51c8c49af7ee8e596f9d" translate="yes" xml:space="preserve">
          <source>exception-on-failure.</source>
          <target state="translated">exception-on-failure.</target>
        </trans-unit>
        <trans-unit id="e8441b9d3782a4359cc826061075e4cdb9e3e9eb" translate="yes" xml:space="preserve">
          <source>exe_file</source>
          <target state="translated">exe_file</target>
        </trans-unit>
        <trans-unit id="be62562725d30894d1641b11d5106adde66f0d79" translate="yes" xml:space="preserve">
          <source>exec</source>
          <target state="translated">exec</target>
        </trans-unit>
        <trans-unit id="158f33cf193625103728a5668340a20df17e585c" translate="yes" xml:space="preserve">
          <source>exec LIST</source>
          <target state="translated">実行リスト</target>
        </trans-unit>
        <trans-unit id="4cd003cf62bd6c546f3ebfd806ad4d5940831c47" translate="yes" xml:space="preserve">
          <source>exec PROGRAM LIST</source>
          <target state="translated">実行プログラムリスト</target>
        </trans-unit>
        <trans-unit id="3fe9316b5efbe64c7a8ba04943242c0aaae8f177" translate="yes" xml:space="preserve">
          <source>exec()</source>
          <target state="translated">exec()</target>
        </trans-unit>
        <trans-unit id="857695a77a261b9857f34d97cafd4e5a8c627f05" translate="yes" xml:space="preserve">
          <source>exec? I'm not *that* kind of operating system</source>
          <target state="translated">exec? 私はその種のオペレーティングシステムではありません。</target>
        </trans-unit>
        <trans-unit id="c0663005159be524663ed4b8506682d67ed4961e" translate="yes" xml:space="preserve">
          <source>exec_text</source>
          <target state="translated">exec_text</target>
        </trans-unit>
        <trans-unit id="0d5602f9eacdb79b54a675b2e91433cd13ed246e" translate="yes" xml:space="preserve">
          <source>executable</source>
          <target state="translated">executable</target>
        </trans-unit>
        <trans-unit id="ad76b41605dd8034a375239efbda02580e2963ce" translate="yes" xml:space="preserve">
          <source>executable extensions</source>
          <target state="translated">じっこうかのうエクステンション</target>
        </trans-unit>
        <trans-unit id="2a6fd9260f067ebd4497a72feb64b731f959cf2b" translate="yes" xml:space="preserve">
          <source>executable file</source>
          <target state="translated">じっこうファイル</target>
        </trans-unit>
        <trans-unit id="f6ab1f66f7037e19d3fc6979114f03de5f577baa" translate="yes" xml:space="preserve">
          <source>executable in</source>
          <target state="translated">実行可能</target>
        </trans-unit>
        <trans-unit id="1accd1d8b1f3a10a04159ad1b3e4c5084b278d9c" translate="yes" xml:space="preserve">
          <source>executable is not found, but</source>
          <target state="translated">実行ファイルが見つかりませんが</target>
        </trans-unit>
        <trans-unit id="6c045c544d0fd83b732116ef8174f4782affc25a" translate="yes" xml:space="preserve">
          <source>executable requests a DLL with the same name.</source>
          <target state="translated">実行ファイルは同じ名前のDLLを要求します。</target>
        </trans-unit>
        <trans-unit id="39ae89e0a135945a5e08d9340cd2eac771f228f6" translate="yes" xml:space="preserve">
          <source>execute</source>
          <target state="translated">execute</target>
        </trans-unit>
        <trans-unit id="5e031deccd3a969726d46380e1585765a2b41b82" translate="yes" xml:space="preserve">
          <source>execute and &lt;code&gt;BEGIN&lt;/code&gt; , &lt;code&gt;UNITCHECK&lt;/code&gt; , or &lt;code&gt;CHECK&lt;/code&gt; blocks and any &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; statements: these are considered as occurring outside the execution of your program. &lt;code&gt;INIT&lt;/code&gt; and &lt;code&gt;END&lt;/code&gt; blocks, however, will be skipped.</source>
          <target state="translated">executeおよび &lt;code&gt;BEGIN&lt;/code&gt; 、 &lt;code&gt;UNITCHECK&lt;/code&gt; 、または &lt;code&gt;CHECK&lt;/code&gt; ブロックとすべての &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; ステートメント：これらは、プログラムの実行外で発生すると見なされます。ただし、 &lt;code&gt;INIT&lt;/code&gt; および &lt;code&gt;END&lt;/code&gt; ブロックはスキップされます。</target>
        </trans-unit>
        <trans-unit id="8c53fbead2a1c28881eade88ee9d03905e5a404b" translate="yes" xml:space="preserve">
          <source>execute any &lt;code&gt;BEGIN&lt;/code&gt;, &lt;code&gt;UNITCHECK&lt;/code&gt;, or &lt;code&gt;CHECK&lt;/code&gt; blocks and any &lt;code&gt;use&lt;/code&gt; statements: these are considered as occurring outside the execution of your program. &lt;code&gt;INIT&lt;/code&gt; and &lt;code&gt;END&lt;/code&gt; blocks, however, will be skipped.</source>
          <target state="translated">実行任意の &lt;code&gt;BEGIN&lt;/code&gt; 、 &lt;code&gt;UNITCHECK&lt;/code&gt; 、または &lt;code&gt;CHECK&lt;/code&gt; のブロックと任意の &lt;code&gt;use&lt;/code&gt; 文：これらが外部プログラムの実行を発生するものとして考えられています。ただし、 &lt;code&gt;INIT&lt;/code&gt; ブロックと &lt;code&gt;END&lt;/code&gt; ブロックはスキップされます。</target>
        </trans-unit>
        <trans-unit id="0c57fbd5104a95262ed8cebf5f3eefdb48550498" translate="yes" xml:space="preserve">
          <source>execute bit</source>
          <target state="translated">じっこうビット</target>
        </trans-unit>
        <trans-unit id="be4ef19694fa237968ba5544b73bf813189bbd51" translate="yes" xml:space="preserve">
          <source>execute this as</source>
          <target state="translated">これを実行する</target>
        </trans-unit>
        <trans-unit id="5a6869c1598dce0beed2b7b47e1c98f0d8df43ec" translate="yes" xml:space="preserve">
          <source>execute_tests( tests =&amp;gt; \@test_files, out =&amp;gt; \*FH )</source>
          <target state="translated">execute_tests（tests =&amp;gt; \ @test_files、out =&amp;gt; \ * FH）</target>
        </trans-unit>
        <trans-unit id="a8aacba1d9f18d2d80cfb1a099bd84111b2e91a4" translate="yes" xml:space="preserve">
          <source>executed</source>
          <target state="translated">executed</target>
        </trans-unit>
        <trans-unit id="a27a26fa22a028dbe9ce60bf71707a38dba870d6" translate="yes" xml:space="preserve">
          <source>executed. This command is normally used by programs that want to lie to themselves about what was just input.</source>
          <target state="translated">が実行されました。このコマンドは通常、入力されたばかりのものを自分自身に嘘をつきたいプログラムに使用されます。</target>
        </trans-unit>
        <trans-unit id="68e6ebe7713fbf8ae8954cac5a4b712ff5361808" translate="yes" xml:space="preserve">
          <source>executes &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">実行の &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="35ee508fc9370ae2c61a93a630a22652d2b067d0" translate="yes" xml:space="preserve">
          <source>executes &lt;code&gt;use&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;use&lt;/code&gt; 実行します</target>
        </trans-unit>
        <trans-unit id="83cc25fe613031bc629a5c23353972fa153fd1da" translate="yes" xml:space="preserve">
          <source>executes an</source>
          <target state="translated">実行</target>
        </trans-unit>
        <trans-unit id="6de8c7703ea0f82d0cfb468bcd208dbf10f6ef36" translate="yes" xml:space="preserve">
          <source>exescan</source>
          <target state="translated">exescan</target>
        </trans-unit>
        <trans-unit id="bd736d2472e68e86afbb2018ac0b4dc4f39ba025" translate="yes" xml:space="preserve">
          <source>exist they will be read and any options they contain processed before the command line options. Options in</source>
          <target state="translated">が存在する場合、それらは読み込まれ、それらが含むオプションはコマンドラインオプションの前に処理されます。のオプションは</target>
        </trans-unit>
        <trans-unit id="4d68c8f13459c0edb40504de5003ec2a6b74e613" translate="yes" xml:space="preserve">
          <source>exists</source>
          <target state="translated">exists</target>
        </trans-unit>
        <trans-unit id="0177d59d364c9e0ee319bf0fad35dbfc88938d64" translate="yes" xml:space="preserve">
          <source>exists ( HANDLE )</source>
          <target state="translated">存在する(HANDLE )</target>
        </trans-unit>
        <trans-unit id="2c13200270f719de6e24e02eddcd029fe439d58e" translate="yes" xml:space="preserve">
          <source>exists EXPR</source>
          <target state="translated">存在する EXPR</target>
        </trans-unit>
        <trans-unit id="ec907245e3cbcc17ebe37f86fb416473b6aed918" translate="yes" xml:space="preserve">
          <source>exists argument is not a HASH or ARRAY element or a subroutine</source>
          <target state="translated">exists 引数が HASH や ARRAY の要素やサブルーチンではない場合は</target>
        </trans-unit>
        <trans-unit id="8cf49bc49205a4172de0daec96c4c939b33f146d" translate="yes" xml:space="preserve">
          <source>exists argument is not a subroutine name</source>
          <target state="translated">exists 引数がサブルーチン名ではない場合</target>
        </trans-unit>
        <trans-unit id="e56603167f0b85866776fa95aa26d7ae7db7a2d3" translate="yes" xml:space="preserve">
          <source>exists in the current directory, it is used for the test.</source>
          <target state="translated">がカレントディレクトリに存在する場合は、それがテストに使用されます。</target>
        </trans-unit>
        <trans-unit id="79c3c773289679909e3c736b728846c93b4c3e42" translate="yes" xml:space="preserve">
          <source>exists in the tied array</source>
          <target state="translated">が紐付き配列に存在します。</target>
        </trans-unit>
        <trans-unit id="cd3af1776cbbe4eb7c38bec10e58994c845a9f36" translate="yes" xml:space="preserve">
          <source>exists may also be called on array elements, but its behavior is much less obvious and is strongly tied to the use of &lt;a href=&quot;#delete&quot;&gt;delete&lt;/a&gt; on arrays.</source>
          <target state="translated">existsは配列要素でも呼び出される場合がありますが、その動作はそれほど明確ではなく、配列での&lt;a href=&quot;#delete&quot;&gt;削除&lt;/a&gt;の使用と強く結びついています。</target>
        </trans-unit>
        <trans-unit id="2a05a4e11ecbcb43e269fdeb5098f827546274b4" translate="yes" xml:space="preserve">
          <source>exists may also be called on array elements, but its behavior is much less obvious and is strongly tied to the use of &lt;a href=&quot;#delete-EXPR&quot;&gt;&lt;code&gt;delete&lt;/code&gt;&lt;/a&gt; on arrays.</source>
          <target state="translated">存在は配列要素で呼び出されることもありますが、その動作はそれほど明白ではなく、配列での&lt;a href=&quot;#delete-EXPR&quot;&gt; &lt;code&gt;delete&lt;/code&gt; &lt;/a&gt;の使用と強く結びついています。</target>
        </trans-unit>
        <trans-unit id="f52944fa32d0d76d7bd6df996eb6fffe000123c3" translate="yes" xml:space="preserve">
          <source>exists may also be called on array elements, but its behavior is much less obvious and is strongly tied to the use of &lt;a href=&quot;delete&quot;&gt;delete&lt;/a&gt; on arrays.</source>
          <target state="translated">existsは配列要素でも呼び出される場合がありますが、その動作はそれほど明確ではなく、配列での&lt;a href=&quot;delete&quot;&gt;削除&lt;/a&gt;の使用と強く結びついています。</target>
        </trans-unit>
        <trans-unit id="a3a84184d605e4508483db9c4ac26b444eaa696e" translate="yes" xml:space="preserve">
          <source>exists starting with (verbatim):</source>
          <target state="translated">で始まるものが存在します。</target>
        </trans-unit>
        <trans-unit id="9ef751195d467ecac0cf64665a2092588e3136a8" translate="yes" xml:space="preserve">
          <source>exists with the tied hash</source>
          <target state="translated">紐付きハッシュが存在します。</target>
        </trans-unit>
        <trans-unit id="e010ba85e46d27ab2e2123da6a7fcaac7555b073" translate="yes" xml:space="preserve">
          <source>exists, in which case it specifies a list of file pathnames (separated by spaces or colons) to be searched &lt;b&gt;instead&lt;/b&gt;. Whenever multiple files are searched and a tc field occurs in the requested entry, the entry it names must be found in the same file or one of the succeeding files. If there is a &lt;code&gt;:tc=...:&lt;/code&gt; in the</source>
          <target state="translated">存在する場合、&lt;b&gt;代わり&lt;/b&gt;に検索&lt;b&gt;する&lt;/b&gt;ファイルパス名（スペースまたはコロンで区切られた）のリストを指定します。複数のファイルが検索され、要求されたエントリにtcフィールドが存在する場合は常に、そのファイルが指定するエントリは、同じファイルまたは後続のファイルの1つにある必要があります。ある場合 &lt;code&gt;:tc=...:&lt;/code&gt; 中</target>
        </trans-unit>
        <trans-unit id="de3ac21778e51de199438300e1a9f816c618d33a" translate="yes" xml:space="preserve">
          <source>exit</source>
          <target state="translated">exit</target>
        </trans-unit>
        <trans-unit id="a016eba8308f70c2bd23a8e499503f90a2c9ac84" translate="yes" xml:space="preserve">
          <source>exit EXPR</source>
          <target state="translated">しゅうしゅつがえきじゅつし</target>
        </trans-unit>
        <trans-unit id="02bfbca7c50eea6ef860280445622b05fdfded8f" translate="yes" xml:space="preserve">
          <source>exit status</source>
          <target state="translated">終了状態</target>
        </trans-unit>
        <trans-unit id="c5695bcb918fbc50fbbe910c3053a2958250d7eb" translate="yes" xml:space="preserve">
          <source>exit thread only</source>
          <target state="translated">終了スレッドのみ</target>
        </trans-unit>
        <trans-unit id="e8b8bd9f2eabc12875605a37c93e7f04a713fcb8" translate="yes" xml:space="preserve">
          <source>exit value</source>
          <target state="translated">終了値</target>
        </trans-unit>
        <trans-unit id="bc6b03d36749751faa3b31f4b8e7b5c078aa026a" translate="yes" xml:space="preserve">
          <source>exit()</source>
          <target state="translated">exit()</target>
        </trans-unit>
        <trans-unit id="20dc5d719c08a9376eebe82a01c826e2c214ff63" translate="yes" xml:space="preserve">
          <source>exit() always exits just the executing pseudo-process, after automatically wait()-ing for any outstanding child pseudo-processes. Note that this means that the process as a whole will not exit unless all running pseudo-processes have exited. See below for some limitations with open filehandles.</source>
          <target state="translated">exit()は常に実行中の疑似プロセスだけを終了させます。これは、実行中のすべての疑似プロセスが終了しない限り、プロセス全体が終了しないことに注意してください。オープンファイルハンドルの制限事項については、以下を参照してください。</target>
        </trans-unit>
        <trans-unit id="c62a6626eb97552168837d0fbc0f2c5772d99c00" translate="yes" xml:space="preserve">
          <source>exit(status)</source>
          <target state="translated">exit(status)</target>
        </trans-unit>
        <trans-unit id="1bf3ac0cfae326535a507cb9de53edcd0c4628d9" translate="yes" xml:space="preserve">
          <source>exitval</source>
          <target state="translated">exitval</target>
        </trans-unit>
        <trans-unit id="86b77de2442fe05048f19c766138a551aa2543be" translate="yes" xml:space="preserve">
          <source>exp</source>
          <target state="translated">exp</target>
        </trans-unit>
        <trans-unit id="04f5bdb5fc946e72a622876081b2511936effc25" translate="yes" xml:space="preserve">
          <source>exp EXPR</source>
          <target state="translated">エクスプレス</target>
        </trans-unit>
        <trans-unit id="0bf04e42d3807913b6f7c1b76508534bf5b1ebaa" translate="yes" xml:space="preserve">
          <source>expand</source>
          <target state="translated">expand</target>
        </trans-unit>
        <trans-unit id="e783d6426837d0ea6752be3d77bcd7dafa42054a" translate="yes" xml:space="preserve">
          <source>expand ( ADDRESS )</source>
          <target state="translated">展開(アドレス</target>
        </trans-unit>
        <trans-unit id="c4125d43afac9bf03e78d997b7dd956a00c2b800" translate="yes" xml:space="preserve">
          <source>expanded version of privlib, so that you may use it directly in Makefiles or shell scripts.</source>
          <target state="translated">privlib の拡張版で、Makefile やシェルスクリプトで直接使用できるようになりました。</target>
        </trans-unit>
        <trans-unit id="e13ee7182af685b31afa956704f2d4ab65624166" translate="yes" xml:space="preserve">
          <source>expanded version of sitearch, so that you may use it directly in Makefiles or shell scripts.</source>
          <target state="translated">sitearchの拡張版で、Makefilesやシェルスクリプトで直接使えるようになりました。</target>
        </trans-unit>
        <trans-unit id="93bca4003e14b9755d5d8279a9d04ef39f111907" translate="yes" xml:space="preserve">
          <source>expanded version of sitelib, so that you may use it directly in Makefiles or shell scripts.</source>
          <target state="translated">sitelib の拡張版で、Makefile やシェルスクリプトで直接使えるようになりました。</target>
        </trans-unit>
        <trans-unit id="5d493bb941d30a950ee5cbaa046bfbd31d42f6d0" translate="yes" xml:space="preserve">
          <source>expanded version of vendorarch, so that you may use it directly in Makefiles or shell scripts.</source>
          <target state="translated">vendorarch の拡張版で、Makefile やシェルスクリプトで直接使えるようになりました。</target>
        </trans-unit>
        <trans-unit id="1ba05cdfc3494f94b9b9082d806c9bbe4cb1f907" translate="yes" xml:space="preserve">
          <source>expanded version of vendorbin, so that you may use it directly in Makefiles or shell scripts.</source>
          <target state="translated">vendorbin の拡張版で、Makefile やシェルスクリプトで直接使えるようになりました。</target>
        </trans-unit>
        <trans-unit id="f04518b28060561aa4c5e811f306b91ab37127e3" translate="yes" xml:space="preserve">
          <source>expanded version of vendorhtml1dir, so that you may use it directly in Makefiles or shell scripts.</source>
          <target state="translated">vendorhtml1dir の拡張版で、Makefile やシェルスクリプトで直接使えるようになりました。</target>
        </trans-unit>
        <trans-unit id="78b1fcd3a85e084930db9b93d779e992f8a2c61d" translate="yes" xml:space="preserve">
          <source>expanded version of vendorhtml3dir, so that you may use it directly in Makefiles or shell scripts.</source>
          <target state="translated">vendorhtml3dir の拡張版で、Makefile やシェルスクリプトで直接使えるようになりました。</target>
        </trans-unit>
        <trans-unit id="7f2157b59b441049100926f2f500acbdb9a9f49e" translate="yes" xml:space="preserve">
          <source>expanded version of vendorlib, so that you may use it directly in Makefiles or shell scripts.</source>
          <target state="translated">vendorlib の拡張版で、Makefile やシェルスクリプトで直接使えるようになりました。</target>
        </trans-unit>
        <trans-unit id="0f5d0e4c390b70b7bffae09e6721d997b87468cb" translate="yes" xml:space="preserve">
          <source>expanded version of vendorman1dir, so that you may use it directly in Makefiles or shell scripts.</source>
          <target state="translated">vendorman1dir の拡張版で、Makefile やシェルスクリプトで直接使えるようになりました。</target>
        </trans-unit>
        <trans-unit id="8132f7d3ed6b646e5618acc0f30bfbee443817d5" translate="yes" xml:space="preserve">
          <source>expanded version of vendorman3dir, so that you may use it directly in Makefiles or shell scripts.</source>
          <target state="translated">vendorman3dir の拡張版で、Makefile やシェルスクリプトで直接使えるようになりました。</target>
        </trans-unit>
        <trans-unit id="df0dd79bd86994c3e5eb7f73b407fe0a9d3deb53" translate="yes" xml:space="preserve">
          <source>expanded version of vendorscript, so that you may use it directly in Makefiles or shell scripts.</source>
          <target state="translated">vendorcript の拡張版で、Makefile やシェルスクリプトで直接使用できるようになりました。</target>
        </trans-unit>
        <trans-unit id="6c7bca82c17abfa62ba37108fe6ccf4fe879f71a" translate="yes" xml:space="preserve">
          <source>expansion yourself.</source>
          <target state="translated">自分自身を拡張する。</target>
        </trans-unit>
        <trans-unit id="8bd2e5e9571e8d904d599ee980720131890ea61a" translate="yes" xml:space="preserve">
          <source>expansion yourself. The standard distribution will put nothing in this directory. After perl has been installed, users may install their own local html pages in this directory with MakeMaker</source>
          <target state="translated">自分で拡張してください。標準のディストリビューションでは、このディレクトリには何も置かれません。perlがインストールされた後、ユーザはMakeMakerを使ってこのディレクトリに自分のローカルhtmlページをインストールすることができます。</target>
        </trans-unit>
        <trans-unit id="8f17261c38fcf85ac032c55f7ac003bf298ca6bc" translate="yes" xml:space="preserve">
          <source>expansion yourself. The standard distribution will put nothing in this directory. After perl has been installed, users may install their own local library html pages in this directory with MakeMaker</source>
          <target state="translated">自分で拡張してください。標準のディストリビューションでは、このディレクトリには何も置かれません。perlがインストールされた後、ユーザはMakeMakerを使って自分のローカルライブラリのhtmlページをこのディレクトリにインストールすることができます。</target>
        </trans-unit>
        <trans-unit id="874aa15526265f91371c7dd249ff563a8f359680" translate="yes" xml:space="preserve">
          <source>expansion yourself. The standard distribution will put nothing in this directory. After perl has been installed, users may install their own local man1 pages in this directory with MakeMaker</source>
          <target state="translated">自分で拡張してください。標準のディストリビューションでは、このディレクトリには何も置かれません。perl がインストールされた後、ユーザは自分のローカル man1 ページをこのディレクトリに MakeMaker</target>
        </trans-unit>
        <trans-unit id="21b8ad2d7fd2e2eb2d5fb35deb69c50f1039ce92" translate="yes" xml:space="preserve">
          <source>expansion yourself. The standard distribution will put nothing in this directory. After perl has been installed, users may install their own local man3 pages in this directory with MakeMaker</source>
          <target state="translated">自分で拡張してください。標準のディストリビューションでは、このディレクトリには何も置かれません。perlがインストールされた後、ユーザはMakeMakerを使って自分のローカルのman3ページをこのディレクトリにインストールすることができます。</target>
        </trans-unit>
        <trans-unit id="9661efc4fe1418713c8a55f5f34eab42ddf5f8d9" translate="yes" xml:space="preserve">
          <source>expansion.</source>
          <target state="translated">expansion.</target>
        </trans-unit>
        <trans-unit id="ff93c451ac21b50761eb1ee0b9fa15fa2c159ada" translate="yes" xml:space="preserve">
          <source>expect</source>
          <target state="translated">expect</target>
        </trans-unit>
        <trans-unit id="fee69c9bf794b98501ab4cec5fd197d203e5ebb3" translate="yes" xml:space="preserve">
          <source>expected to fail.</source>
          <target state="translated">失敗することが予想されます。</target>
        </trans-unit>
        <trans-unit id="43ba235ebc68331b6af34ee6f3423c7ceba2650e" translate="yes" xml:space="preserve">
          <source>expects $module [, $version] If the optional $version argument is not given, it defaults to &lt;code&gt;$XS_VERSION // $VERSION&lt;/code&gt; in the module's symbol table. The default code compares the Perl-space version with the version of the compiled XS code, and croaks with an error if they do not match.</source>
          <target state="translated">$ module [、$ version]が必要ですオプションの$ version引数が指定されていない場合、デフォルトでモジュールのシンボルテーブルの &lt;code&gt;$XS_VERSION // $VERSION&lt;/code&gt; になります。デフォルトのコードは、PerlスペースのバージョンとコンパイルされたXSコードのバージョンを比較し、一致しない場合はエラーを表示します。</target>
        </trans-unit>
        <trans-unit id="90902163a54167cbe14895519ea1c81a40a23461" translate="yes" xml:space="preserve">
          <source>expects both pointer and length) then there should be multiple</source>
          <target state="translated">はポインタと長さの両方を期待しています)ならば、複数の</target>
        </trans-unit>
        <trans-unit id="2216470a6aacb2edec4887e9eadec834847afc5d" translate="yes" xml:space="preserve">
          <source>experimental</source>
          <target state="translated">experimental</target>
        </trans-unit>
        <trans-unit id="057aef1b30b7267e6a7a4d8a615f5041e7426f72" translate="yes" xml:space="preserve">
          <source>experimental - Experimental features made easy</source>
          <target state="translated">experimental-実験的な機能を簡単にする</target>
        </trans-unit>
        <trans-unit id="73b8427ebc9e80db4f1373ae0d7951406a01acdc" translate="yes" xml:space="preserve">
          <source>explanation</source>
          <target state="translated">explanation</target>
        </trans-unit>
        <trans-unit id="a45c2264b8cab0f1e0637f6c44501c0f34f7e227" translate="yes" xml:space="preserve">
          <source>explicit</source>
          <target state="translated">explicit</target>
        </trans-unit>
        <trans-unit id="62353e7ffc321e5ed4d27ce6f34d413efcb71872" translate="yes" xml:space="preserve">
          <source>explicit fork() in the script,</source>
          <target state="translated">スクリプトの明示的な fork()を使用しています。</target>
        </trans-unit>
        <trans-unit id="cd928a431c64265167fc4ec1e63a7fdadfc89a94" translate="yes" xml:space="preserve">
          <source>explicitly import it:</source>
          <target state="translated">を明示的にインポートします。</target>
        </trans-unit>
        <trans-unit id="eef8090de66165367d4ea9ae53fe7ebe104f6202" translate="yes" xml:space="preserve">
          <source>explicitly or by not actually existing. By default, when either of these events occurs, the process will terminate immediately. If you want to trap this type of event, specify the G_EVAL flag. It will put an</source>
          <target state="translated">が明示的に発生するか、実際には存在しない場合に発生します。デフォルトでは、これらのイベントのいずれかが発生すると、プロセスは直ちに終了します。このタイプのイベントをトラップしたい場合は、G_EVAL フラグを指定します。これにより</target>
        </trans-unit>
        <trans-unit id="24c59991f52394fc817e9ff575acd9d14416a779" translate="yes" xml:space="preserve">
          <source>explicitly via</source>
          <target state="translated">をとおして</target>
        </trans-unit>
        <trans-unit id="256abbae4f91defedb7876f7dff2de1ad15ba2a8" translate="yes" xml:space="preserve">
          <source>exploit</source>
          <target state="translated">exploit</target>
        </trans-unit>
        <trans-unit id="7b802a0e1535119eb03223f33dd0827fac7d1df3" translate="yes" xml:space="preserve">
          <source>expo()</source>
          <target state="translated">expo()</target>
        </trans-unit>
        <trans-unit id="259cb6a74c7644eb1005ba56617b766c144f1a10" translate="yes" xml:space="preserve">
          <source>exponent()</source>
          <target state="translated">exponent()</target>
        </trans-unit>
        <trans-unit id="51713409935576d63d066e104eb1ad0e37137da7" translate="yes" xml:space="preserve">
          <source>export</source>
          <target state="translated">export</target>
        </trans-unit>
        <trans-unit id="f252c61656f0f8fad02d294ba7aed563f8f11c12" translate="yes" xml:space="preserve">
          <source>export method or variable names</source>
          <target state="translated">エクスポートメソッドまたは変数名</target>
        </trans-unit>
        <trans-unit id="4bb239373488b3227a4480e34b6e792b0c37a889" translate="yes" xml:space="preserve">
          <source>exported by default.</source>
          <target state="translated">をデフォルトでエクスポートします。</target>
        </trans-unit>
        <trans-unit id="0fd1860204d6cee43392972817e66792ee702b89" translate="yes" xml:space="preserve">
          <source>expr</source>
          <target state="translated">expr</target>
        </trans-unit>
        <trans-unit id="f4a094db3839515299ba10f9d1c07cd0f4da8291" translate="yes" xml:space="preserve">
          <source>expressed</source>
          <target state="translated">expressed</target>
        </trans-unit>
        <trans-unit id="49afcdc533f5e45bc5c451ba2d41e2fd2151af10" translate="yes" xml:space="preserve">
          <source>expressed as at least four hexdigits. This indicates that the full lowercase mapping is a single character, and is identical to the simple (single-character only) mapping. When this field is empty, it means that the simple lowercase mapping is</source>
          <target state="translated">は、少なくとも 4 桁の 16 進数で表現されます。これは、完全な小文字のマッピングが 1 文字であり、単純な (1 文字のみの)マッピングと同じであることを示します。このフィールドが空の場合は、単純な小文字のマッピングが</target>
        </trans-unit>
        <trans-unit id="83f02c134ff1b91fb4ffd536b194dd8a83d64830" translate="yes" xml:space="preserve">
          <source>expressed as at least four hexdigits. This indicates that the full titlecase mapping is a single character, and is identical to the simple (single-character only) mapping. When this field is empty, it means that the simple titlecase mapping is</source>
          <target state="translated">は、少なくとも4桁の16進数で表される。これは、完全な titlecase マッピングが 1 文字であり、単純な (1 文字のみの)マッピングと同じであることを示します。このフィールドが空の場合、シンプルなタイトルケースマッピングが</target>
        </trans-unit>
        <trans-unit id="9ee4a7c1e0e7c5c00d7f1a4bc5c69aa36e0a2abc" translate="yes" xml:space="preserve">
          <source>expressed as at least four hexdigits. This indicates that the full uppercase mapping is a single character, and is identical to the simple (single-character only) mapping. When this field is empty, it means that the simple uppercase mapping is</source>
          <target state="translated">は、少なくとも4つの16進数で表現されています。これは、完全な大文字マッピングが 1 文字であり、単純な (1 文字のみの)マッピングと同じであることを示します。このフィールドが空の場合、単純な大文字マッピングが</target>
        </trans-unit>
        <trans-unit id="ec9814396ba26fa02dc3261046ba55a3b4bb32a6" translate="yes" xml:space="preserve">
          <source>expression</source>
          <target state="translated">expression</target>
        </trans-unit>
        <trans-unit id="b6db99b9b47425d658bacc933e68038cf4115ec8" translate="yes" xml:space="preserve">
          <source>expressions turn that around by allowing arbitrary Perl code to be a part of a regexp. A code evaluation expression is denoted &lt;code&gt;(?{&lt;i&gt;code&lt;/i&gt;})&lt;/code&gt;, with</source>
          <target state="translated">式は、任意のPerlコードを正規表現の一部にすることでそれを好転させます。コード評価式は &lt;code&gt;(?{&lt;i&gt;code&lt;/i&gt;})&lt;/code&gt; で表され、</target>
        </trans-unit>
        <trans-unit id="300998d53bb1ee1024a38733894a5646a8deeeb1" translate="yes" xml:space="preserve">
          <source>expressions turn that around by allowing arbitrary Perl code to be a part of a regexp. A code evaluation expression is denoted &lt;code&gt;(?{code})&lt;/code&gt;, with</source>
          <target state="translated">式は、任意のPerlコードを正規表現の一部にすることを可能にすることで、これを逆転させます。コード評価式は &lt;code&gt;(?{code})&lt;/code&gt; で示され、</target>
        </trans-unit>
        <trans-unit id="176d41e15ed58160ff5794cc48cabe66e45ae1ac" translate="yes" xml:space="preserve">
          <source>ext</source>
          <target state="translated">ext</target>
        </trans-unit>
        <trans-unit id="3c248d3f2062f94c08d1a45f766bee37dd3d02fa" translate="yes" xml:space="preserve">
          <source>ext/</source>
          <target state="translated">ext/</target>
        </trans-unit>
        <trans-unit id="c501e502111f02a65bc31828d3bb3fb50df69110" translate="yes" xml:space="preserve">
          <source>ext/B/README</source>
          <target state="translated">ext/B/README</target>
        </trans-unit>
        <trans-unit id="73109c3e972ff5a34c03cf88c52a34ab614d3686" translate="yes" xml:space="preserve">
          <source>ext/DB_File</source>
          <target state="translated">ext/DB_File</target>
        </trans-unit>
        <trans-unit id="47c5e16a952fe3fe06a5f36998ca284b099dfe6b" translate="yes" xml:space="preserve">
          <source>ext/DynaLoader/t/DynaLoader.t</source>
          <target state="translated">ext/DynaLoader/t/DynaLoader.t</target>
        </trans-unit>
        <trans-unit id="8f2803c65f00cd79293bd3f84ecca28acbb460a2" translate="yes" xml:space="preserve">
          <source>ext/IO/lib/IO/t/io_sock.t: Subtests 14 and 22 are skipped due to the fact that the functionality to read back the non-blocking status of a socket is not implemented in QNX's TCP/IP. This has been reported to QNX and it may work with later versions of TCP/IP.</source>
          <target state="translated">ext/IO/lib/IO/t/io_sock.t.ソケットのノンブロッキング ステータスを読み出す機能が QNX の TCP/IP に実装されていないため、サブテスト 14 と 22 はスキップされます。これは QNX に報告されており、TCP/IP のそれ以降のバージョンでも動作する可能性があります。</target>
        </trans-unit>
        <trans-unit id="4579236f95a777f68f9de86ca03c06412ca9233e" translate="yes" xml:space="preserve">
          <source>ext/IO/t/io_dir.t</source>
          <target state="translated">ext/IO/t/io_dir.t</target>
        </trans-unit>
        <trans-unit id="3858bd22b3f8f530bdeb00045b3e6cfc8986e87e" translate="yes" xml:space="preserve">
          <source>ext/ODBM_File/odbm Test Failing With Static Builds</source>
          <target state="translated">ext/ODBM_File/odbm テストが静的ビルドで失敗する</target>
        </trans-unit>
        <trans-unit id="9c2a3b792320ffaddd6794a5324abe29df1daac4" translate="yes" xml:space="preserve">
          <source>ext/POSIX/t/sigaction.t</source>
          <target state="translated">ext/POSIX/t/sigaction.t</target>
        </trans-unit>
        <trans-unit id="655d12bdd8ca3ad59a76d00e0439ecd4d9e2f0c8" translate="yes" xml:space="preserve">
          <source>ext/POSIX/t/time.t</source>
          <target state="translated">ext/POSIX/t/time.t</target>
        </trans-unit>
        <trans-unit id="2458429f9b0c580a7253f6acfa0de4a41032bc2e" translate="yes" xml:space="preserve">
          <source>ext/Socket/t/socketpair.t</source>
          <target state="translated">ext/Socket/t/socketpair.t</target>
        </trans-unit>
        <trans-unit id="220e27d9287aa022ff0f4c782b1e268271e8a060" translate="yes" xml:space="preserve">
          <source>ext/Sys/Syslog/t/syslog.t</source>
          <target state="translated">ext/Sys/Syslog/t/syslog.t</target>
        </trans-unit>
        <trans-unit id="87a2ff1c7b44aef0511df74619926a0f164aa7e0" translate="yes" xml:space="preserve">
          <source>ext/Win32CORE/t/win32core.t</source>
          <target state="translated">ext/Win32CORE/t/win32core.t</target>
        </trans-unit>
        <trans-unit id="48af8b5ad681a9cee3332a5645630e3c1dd9894a" translate="yes" xml:space="preserve">
          <source>ext/XS-APItes/t/call_checker.t</source>
          <target state="translated">ext/XS-APItes/t/call_checker.t</target>
        </trans-unit>
        <trans-unit id="a0753fbc031dce5b6dc853bd815a2d82dc7fb4ee" translate="yes" xml:space="preserve">
          <source>ext/XS-APItest/t/call_checker.t</source>
          <target state="translated">ext/XS-APItest/t/call_checker.t</target>
        </trans-unit>
        <trans-unit id="02b8df41ae4e87fdd2ae828acead332021ec6c1c" translate="yes" xml:space="preserve">
          <source>ext/XS-APItest/t/locale.t</source>
          <target state="translated">ext/XS-APItest/t/locale.t</target>
        </trans-unit>
        <trans-unit id="878d0886c4400a047b1f907af3b5908037014519" translate="yes" xml:space="preserve">
          <source>ext/mro/mro.xs</source>
          <target state="translated">ext/mro/mro.xs</target>
        </trans-unit>
        <trans-unit id="dd97975abdeb2f338ea7b33bbd4dba928c4b7396" translate="yes" xml:space="preserve">
          <source>extended grapheme cluster</source>
          <target state="translated">拡張書記素群</target>
        </trans-unit>
        <trans-unit id="99493160e41d26d52761607cac4b2fe3a3709ad9" translate="yes" xml:space="preserve">
          <source>extended patterns</source>
          <target state="translated">拡張パターン</target>
        </trans-unit>
        <trans-unit id="a8d3c99c767d0d2332e9c68cfcb2f00b581270f3" translate="yes" xml:space="preserve">
          <source>extender</source>
          <target state="translated">extender</target>
        </trans-unit>
        <trans-unit id="e37c569e0671fb7328cd52d19b8edd00e39e5520" translate="yes" xml:space="preserve">
          <source>extending the stack: the Perl function reference comes to an XSUB on the stack, thus the stack is</source>
          <target state="translated">スタックの拡張:Perl の関数参照はスタック上の XSUB に来るので、スタックは</target>
        </trans-unit>
        <trans-unit id="f98961015a0ac393630f4eda3749d644a716da64" translate="yes" xml:space="preserve">
          <source>extension</source>
          <target state="translated">extension</target>
        </trans-unit>
        <trans-unit id="56c51aa06406325f9e35a4760f76e36bee0c955e" translate="yes" xml:space="preserve">
          <source>extension and replaces &lt;code&gt;::&lt;/code&gt; with &lt;code&gt;/&lt;/code&gt; in the filename for you, to make it easy to load standard modules. This form of loading of modules does not risk altering your namespace, however it will autovivify the stash for the required module.</source>
          <target state="translated">標準モジュールを簡単にロードできるように、ファイル名の拡張子を付けて &lt;code&gt;::&lt;/code&gt; を &lt;code&gt;/&lt;/code&gt; に置き換えます。この形式のモジュールのロードでは、名前空間が変更されるリスクはありませんが、必要なモジュールの隠し場所が自動的に復活します。</target>
        </trans-unit>
        <trans-unit id="8a35f26a3cfe8a8eb36034549d444ed5dce5a0bd" translate="yes" xml:space="preserve">
          <source>extension if any). If the database does not exist, it is created with protection specified by MASK (as modified by the &lt;a href=&quot;#umask-EXPR&quot;&gt;&lt;code&gt;umask&lt;/code&gt;&lt;/a&gt;). To prevent creation of the database if it doesn't exist, you may specify a MODE of 0, and the function will return a false value if it can't find an existing database. If your system supports only the older DBM functions, you may make only one &lt;a href=&quot;#dbmopen-HASH%2CDBNAME%2CMASK&quot;&gt;&lt;code&gt;dbmopen&lt;/code&gt;&lt;/a&gt; call in your program. In older versions of Perl, if your system had neither DBM nor ndbm, calling &lt;a href=&quot;#dbmopen-HASH%2CDBNAME%2CMASK&quot;&gt;&lt;code&gt;dbmopen&lt;/code&gt;&lt;/a&gt; produced a fatal error; it now falls back to &lt;a href=&quot;http://man.he.net/man3/sdbm&quot;&gt;sdbm(3)&lt;/a&gt;.</source>
          <target state="translated">拡張子がある場合）。データベースが存在しない場合は、MASKによって指定された保護（&lt;a href=&quot;#umask-EXPR&quot;&gt; &lt;code&gt;umask&lt;/code&gt; &lt;/a&gt;によって変更されたもの）で作成されます。データベースが存在しない場合にデータベースが作成されないようにするには、MODEを0に指定すると、既存のデータベースが見つからない場合、関数はfalse値を返します。システムが古いDBM関数のみをサポートしている場合は、プログラムで&lt;a href=&quot;#dbmopen-HASH%2CDBNAME%2CMASK&quot;&gt; &lt;code&gt;dbmopen&lt;/code&gt; &lt;/a&gt;呼び出しを1回だけ行うことができます。お使いのシステムは、呼び出し、DBMもNDBMどちらを持っていた場合のPerlの古いバージョンでは、&lt;a href=&quot;#dbmopen-HASH%2CDBNAME%2CMASK&quot;&gt; &lt;code&gt;dbmopen&lt;/code&gt; は&lt;/a&gt;致命的なエラーが発生し、&lt;a href=&quot;http://man.he.net/man3/sdbm&quot;&gt;sdbm（3）に&lt;/a&gt;フォールバックするようになりました。</target>
        </trans-unit>
        <trans-unit id="d8fbae888eb4cc7dcec54badb6fa1302ed001c9c" translate="yes" xml:space="preserve">
          <source>extension if any). If the database does not exist, it is created with protection specified by MASK (as modified by the &lt;code&gt;&lt;a href=&quot;functions/umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt;). To prevent creation of the database if it doesn't exist, you may specify a MODE of 0, and the function will return a false value if it can't find an existing database. If your system supports only the older DBM functions, you may make only one &lt;code&gt;&lt;a href=&quot;functions/dbmopen&quot;&gt;dbmopen&lt;/a&gt;&lt;/code&gt; call in your program. In older versions of Perl, if your system had neither DBM nor ndbm, calling &lt;code&gt;&lt;a href=&quot;functions/dbmopen&quot;&gt;dbmopen&lt;/a&gt;&lt;/code&gt; produced a fatal error; it now falls back to sdbm(3).</source>
          <target state="translated">拡張子がある場合）。データベースが存在しない場合は、MASKによって指定された保護（ &lt;code&gt;&lt;a href=&quot;functions/umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt; によって変更されたもの）を使用して作成されます。データベースが存在しない場合にデータベースが作成されないようにするには、MODEに0を指定します。既存のデータベースが見つからない場合、関数はfalse値を返します。システムが古いDBM関数のみをサポートしている場合は、プログラムで &lt;code&gt;&lt;a href=&quot;functions/dbmopen&quot;&gt;dbmopen&lt;/a&gt;&lt;/code&gt; 呼び出しを1つだけ実行できます。お使いのシステムは、呼び出し、DBMもNDBMどちらを持っていた場合のPerlの古いバージョンでは、 &lt;code&gt;&lt;a href=&quot;functions/dbmopen&quot;&gt;dbmopen&lt;/a&gt;&lt;/code&gt; は致命的なエラーが発生し、現在はsdbm（3）にフォールバックします。</target>
        </trans-unit>
        <trans-unit id="b61dcd97668d138c895523eea0e68524d62770aa" translate="yes" xml:space="preserve">
          <source>extension if any). If the database does not exist, it is created with protection specified by MASK (as modified by the &lt;code&gt;&lt;a href=&quot;umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt;). To prevent creation of the database if it doesn't exist, you may specify a MODE of 0, and the function will return a false value if it can't find an existing database. If your system supports only the older DBM functions, you may make only one &lt;code&gt;&lt;a href=&quot;dbmopen&quot;&gt;dbmopen&lt;/a&gt;&lt;/code&gt; call in your program. In older versions of Perl, if your system had neither DBM nor ndbm, calling &lt;code&gt;&lt;a href=&quot;dbmopen&quot;&gt;dbmopen&lt;/a&gt;&lt;/code&gt; produced a fatal error; it now falls back to sdbm(3).</source>
          <target state="translated">拡張子がある場合）。データベースが存在しない場合は、MASKによって指定された保護（ &lt;code&gt;&lt;a href=&quot;umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt; によって変更されたもの）を使用して作成されます。データベースが存在しない場合にデータベースが作成されないようにするには、MODEに0を指定します。既存のデータベースが見つからない場合、関数はfalse値を返します。システムが古いDBM関数のみをサポートしている場合は、プログラムで &lt;code&gt;&lt;a href=&quot;dbmopen&quot;&gt;dbmopen&lt;/a&gt;&lt;/code&gt; 呼び出しを1つだけ実行できます。お使いのシステムは、呼び出し、DBMもNDBMどちらを持っていた場合のPerlの古いバージョンでは、 &lt;code&gt;&lt;a href=&quot;dbmopen&quot;&gt;dbmopen&lt;/a&gt;&lt;/code&gt; は致命的なエラーが発生し、現在はsdbm（3）にフォールバックします。</target>
        </trans-unit>
        <trans-unit id="cf87bbe39d34d22845e93c19faea4ecaa039eead" translate="yes" xml:space="preserve">
          <source>extension if needed. Moreover, if the executable</source>
          <target state="translated">の拡張子が必要ならば さらに、実行可能な</target>
        </trans-unit>
        <trans-unit id="2c7cf153a9375604c5483a839353daf35d6d3f75" translate="yes" xml:space="preserve">
          <source>extension or begin with &lt;code&gt;#!&lt;/code&gt; , directories are always readable and executable). On WinNT with the</source>
          <target state="translated">拡張子または &lt;code&gt;#!&lt;/code&gt; 始まる！、ディレクトリは常に読み取り可能で実行可能です）。WinNTで</target>
        </trans-unit>
        <trans-unit id="45d70dd5264daea926784ef0c2e0420e792c939f" translate="yes" xml:space="preserve">
          <source>extension or begin with &lt;code&gt;#!&lt;/code&gt;, directories are always readable and executable). On WinNT with the</source>
          <target state="translated">拡張子または &lt;code&gt;#!&lt;/code&gt; 始まります！、ディレクトリは常に読み取り可能で実行可能です）。WinNTでは</target>
        </trans-unit>
        <trans-unit id="578f4e23f29e7ea491fa187e85133dc7b293b69a" translate="yes" xml:space="preserve">
          <source>extension rather than a</source>
          <target state="translated">拡張子ではなく</target>
        </trans-unit>
        <trans-unit id="46ecff0866cf7aaa1d028af34c248934a6cf0d63" translate="yes" xml:space="preserve">
          <source>extension transparent by looking for</source>
          <target state="translated">を探して透明な拡張子</target>
        </trans-unit>
        <trans-unit id="d165da1cd7df1a2e6f0ab5281a64cbceca5d6192" translate="yes" xml:space="preserve">
          <source>extension with the perl interpreter. If you install Perl by other means (including building from the sources), you may have to modify the Registry yourself. Note that this means you can no longer tell the difference between an executable Perl program and a Perl library file.</source>
          <target state="translated">拡張モジュールをPerlインタープリタでインストールしてください。他の方法(ソースからのビルドを含む)でPerlをインストールした場合、レジストリを自分で修正する必要があるかもしれません。これは、実行可能なPerlプログラムとPerlライブラリファイルの区別がつかなくなったことを意味します。</target>
        </trans-unit>
        <trans-unit id="a8dacb2fe105ca8c89001d710955717a5c6317b0" translate="yes" xml:space="preserve">
          <source>extension, but</source>
          <target state="translated">延長線上ではあるが</target>
        </trans-unit>
        <trans-unit id="ff725cfda40b987d06b2ce764b1acc4113e76e20" translate="yes" xml:space="preserve">
          <source>extension, it will first look for a similar filename with a</source>
          <target state="translated">という拡張子を持つ類似のファイル名を探します。</target>
        </trans-unit>
        <trans-unit id="697a78948fffde560549b8ad737f3457cf1a43ed" translate="yes" xml:space="preserve">
          <source>extension.</source>
          <target state="translated">extension.</target>
        </trans-unit>
        <trans-unit id="14f31f034f7ac98fbb50e30e7aaf588c3d13db47" translate="yes" xml:space="preserve">
          <source>extension. If this file is found, it will be loaded in place of any file ending in a</source>
          <target state="translated">という拡張子で終わるファイルが見つかった場合、そのファイルの代わりに読み込まれます。で終わるファイルの代わりに読み込まれます。</target>
        </trans-unit>
        <trans-unit id="5084147612d66ca2b17fa5b0b5084d6e0536d390" translate="yes" xml:space="preserve">
          <source>extension. Perl doesn&amp;rsquo;t really have header files, though historically Perl has sometimes used translated</source>
          <target state="translated">拡張。Perlには実際にはヘッダーファイルがありませんが、歴史的にはPerlは時々翻訳を使用してきました</target>
        </trans-unit>
        <trans-unit id="5a45476a948f4975f64e7415a8506959a4702053" translate="yes" xml:space="preserve">
          <source>extension. See &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; in Camel chapter 27, &amp;ldquo;Functions&amp;rdquo;. (Header files have been superseded by the &lt;b&gt;module&lt;/b&gt; mechanism.)</source>
          <target state="translated">拡張。Camelの第27章「関数」の &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; を参照してください。（ヘッダーファイルは&lt;b&gt;モジュール&lt;/b&gt;メカニズムに置き換えられました。）</target>
        </trans-unit>
        <trans-unit id="367526e8829b394f5fd0161247e0a41888ff24e3" translate="yes" xml:space="preserve">
          <source>extension. See &lt;code&gt;require&lt;/code&gt; in Camel chapter 27, &amp;ldquo;Functions&amp;rdquo;. (Header files have been superseded by the &lt;b&gt;module&lt;/b&gt; mechanism.)</source>
          <target state="translated">拡張。Camelの第27章「関数」の &lt;code&gt;require&lt;/code&gt; を参照してください。（ヘッダーファイルは&lt;b&gt;モジュール&lt;/b&gt;メカニズムに置き換えられました。）</target>
        </trans-unit>
        <trans-unit id="262eb4bc59fc3720e5482b9854653a11cd27058f" translate="yes" xml:space="preserve">
          <source>extension. The expression &lt;code&gt;&lt;a href=&quot;functions/glob&quot;&gt;glob&lt;/a&gt;(&quot;.* *&quot;)&lt;/code&gt; matches all files in the current working directory. If you want to glob filenames that might contain whitespace, you'll have to use extra quotes around the spacey filename to protect it. For example, to glob filenames that have an &lt;code&gt;e&lt;/code&gt; followed by a space followed by an &lt;code&gt;f&lt;/code&gt; , use either of:</source>
          <target state="translated">拡張。式 &lt;code&gt;&lt;a href=&quot;functions/glob&quot;&gt;glob&lt;/a&gt;(&quot;.* *&quot;)&lt;/code&gt; は、現在の作業ディレクトリ内のすべてのファイルに一致します。空白を含む可能性のあるファイル名をグロブしたい場合は、スペースのあるファイル名を余分な引用符で囲んで保護する必要があります。たとえば、 &lt;code&gt;e&lt;/code&gt; 、スペース、 &lt;code&gt;f&lt;/code&gt; のファイル名をグロブ化するには、次のいずれかを使用します。</target>
        </trans-unit>
        <trans-unit id="3003a949f2f51a69cf2b56b44fae9813c042c286" translate="yes" xml:space="preserve">
          <source>extension. The expression &lt;code&gt;&lt;a href=&quot;glob&quot;&gt;glob&lt;/a&gt;(&quot;.* *&quot;)&lt;/code&gt; matches all files in the current working directory. If you want to glob filenames that might contain whitespace, you'll have to use extra quotes around the spacey filename to protect it. For example, to glob filenames that have an &lt;code&gt;e&lt;/code&gt; followed by a space followed by an &lt;code&gt;f&lt;/code&gt; , use either of:</source>
          <target state="translated">拡張。式 &lt;code&gt;&lt;a href=&quot;glob&quot;&gt;glob&lt;/a&gt;(&quot;.* *&quot;)&lt;/code&gt; は、現在の作業ディレクトリ内のすべてのファイルに一致します。空白を含む可能性のあるファイル名をグロブしたい場合は、スペースのあるファイル名を余分な引用符で囲んで保護する必要があります。たとえば、 &lt;code&gt;e&lt;/code&gt; 、スペース、 &lt;code&gt;f&lt;/code&gt; のファイル名をグロブ化するには、次のいずれかを使用します。</target>
        </trans-unit>
        <trans-unit id="7c5a4b315c9592684d8190506eacf3fde9694f23" translate="yes" xml:space="preserve">
          <source>extension. The expression &lt;code&gt;glob(&quot;.* *&quot;)&lt;/code&gt; matches all files in the current working directory. If you want to glob filenames that might contain whitespace, you'll have to use extra quotes around the spacey filename to protect it. For example, to glob filenames that have an &lt;code&gt;e&lt;/code&gt; followed by a space followed by an &lt;code&gt;f&lt;/code&gt;, use one of:</source>
          <target state="translated">拡張。式 &lt;code&gt;glob(&quot;.* *&quot;)&lt;/code&gt; は、現在の作業ディレクトリ内のすべてのファイルに一致します。空白を含む可能性のあるファイル名をグロブする場合は、スペースのあるファイル名を保護するために、余分な引用符を使用する必要があります。たとえば、 &lt;code&gt;e&lt;/code&gt; 、スペース、 &lt;code&gt;f&lt;/code&gt; が続くファイル名をグロブするには、次のいずれかを使用します。</target>
        </trans-unit>
        <trans-unit id="e19cadec86f4aadb5c57009de1cd9a444c2535de" translate="yes" xml:space="preserve">
          <source>extension. This applies to both the explicit &lt;code&gt;require &quot;Foo/Bar.pm&quot;;&lt;/code&gt; form and the &lt;code&gt;require Foo::Bar;&lt;/code&gt; form.</source>
          <target state="translated">拡張。これは、明示的な &lt;code&gt;require &quot;Foo/Bar.pm&quot;;&lt;/code&gt; 両方に適用されます。フォームと &lt;code&gt;require Foo::Bar;&lt;/code&gt; 形。</target>
        </trans-unit>
        <trans-unit id="ff432b467f0803c332354c8259dbf1d890ab808c" translate="yes" xml:space="preserve">
          <source>extensions</source>
          <target state="translated">extensions</target>
        </trans-unit>
        <trans-unit id="63be85db04291b73cd05ced92e28cd2c4d8094e5" translate="yes" xml:space="preserve">
          <source>extflags</source>
          <target state="translated">extflags</target>
        </trans-unit>
        <trans-unit id="a115fb82fd1c44ba876d0f25f048039e5f02d90a" translate="yes" xml:space="preserve">
          <source>extliblist</source>
          <target state="translated">extliblist</target>
        </trans-unit>
        <trans-unit id="fd49fdd77bb13d2c9a5d305abeeed57e20f86bb7" translate="yes" xml:space="preserve">
          <source>extproc on the first line</source>
          <target state="translated">最初の行にextproc</target>
        </trans-unit>
        <trans-unit id="b43c4b82570e182eb1c74072896167113d2c7345" translate="yes" xml:space="preserve">
          <source>extra</source>
          <target state="translated">extra</target>
        </trans-unit>
        <trans-unit id="0038553e071b72c33d986e5f309081c01b19e27a" translate="yes" xml:space="preserve">
          <source>extra_clean_files</source>
          <target state="translated">extra_clean_files</target>
        </trans-unit>
        <trans-unit id="b24eaa691e62c3687193634241cee2acd3242f6e" translate="yes" xml:space="preserve">
          <source>extra_link_args_after_prelink</source>
          <target state="translated">extra_link_args_after_prelink</target>
        </trans-unit>
        <trans-unit id="a03c6345e723e1a4fa0790110de4cd38b560eef7" translate="yes" xml:space="preserve">
          <source>extra_linker_flags</source>
          <target state="translated">extra_linker_flags</target>
        </trans-unit>
        <trans-unit id="e4f23495a1103e1db75e91fdc67ed60c38948b5a" translate="yes" xml:space="preserve">
          <source>extract</source>
          <target state="translated">extract</target>
        </trans-unit>
        <trans-unit id="2aa7de9974224f02b33508554c8f93657c2d8185" translate="yes" xml:space="preserve">
          <source>extract the first occurrence of a substring anywhere in a string (like an unanchored regex would). Rather, they extract an occurrence of the substring appearing immediately at the current matching position in the string (like a &lt;code&gt;\G&lt;/code&gt; -anchored regex would).</source>
          <target state="translated">文字列内の任意の場所に最初に出現する部分文字列を抽出します（アンカーされていない正規表現のように）。むしろ、それらは文字列の現在の一致する位置にすぐに出現する部分文字列の出現を抽出します（ &lt;code&gt;\G&lt;/code&gt; アンカーされた正規表現のように）。</target>
        </trans-unit>
        <trans-unit id="872e87e43e030941f4f97f0367c6e6197063babd" translate="yes" xml:space="preserve">
          <source>extract the first occurrence of a substring anywhere in a string (like an unanchored regex would). Rather, they extract an occurrence of the substring appearing immediately at the current matching position in the string (like a &lt;code&gt;\G&lt;/code&gt;-anchored regex would).</source>
          <target state="translated">文字列内の任意の場所で部分文字列の最初の出現を抽出します（アンカーされていない正規表現のように）。むしろ、文字列内の現在の一致する位置にすぐに現れる部分文字列の出現を抽出します（ &lt;code&gt;\G&lt;/code&gt; アンカー正規表現のように）。</target>
        </trans-unit>
        <trans-unit id="c129024e7f12ca0dfc3271eab5d05afaf6fb2fd0" translate="yes" xml:space="preserve">
          <source>extract_bracketed</source>
          <target state="translated">extract_bracketed</target>
        </trans-unit>
        <trans-unit id="63c60e68ffa6a6b29adac6cb587ab09f0ac57255" translate="yes" xml:space="preserve">
          <source>extract_codeblock</source>
          <target state="translated">extract_codeblock</target>
        </trans-unit>
        <trans-unit id="f0c5792f8e71bb2f7a80d02e74a4bc40be9fa1c7" translate="yes" xml:space="preserve">
          <source>extract_delimited</source>
          <target state="translated">extract_delimited</target>
        </trans-unit>
        <trans-unit id="577ca05ad657005d4d1dca2af6e0b284451653d5" translate="yes" xml:space="preserve">
          <source>extract_multiple</source>
          <target state="translated">extract_multiple</target>
        </trans-unit>
        <trans-unit id="95f36ced8d4c3a7f2de47b07a5d2d6d42e99924f" translate="yes" xml:space="preserve">
          <source>extract_quotelike</source>
          <target state="translated">extract_quotelike</target>
        </trans-unit>
        <trans-unit id="c616311cf92f3e046cd9b63695c59ded714900a2" translate="yes" xml:space="preserve">
          <source>extract_quotelike and &quot;here documents&quot;</source>
          <target state="translated">extract_quotelike と &quot;こちらのドキュメント&quot;</target>
        </trans-unit>
        <trans-unit id="7045ea4a3f34e51334a072d0aa6511e8537c0494" translate="yes" xml:space="preserve">
          <source>extract_tagged</source>
          <target state="translated">extract_tagged</target>
        </trans-unit>
        <trans-unit id="7d021e07054f7234dfbf6f9e8e18d0a3aba77243" translate="yes" xml:space="preserve">
          <source>extract_variable</source>
          <target state="translated">extract_variable</target>
        </trans-unit>
        <trans-unit id="d50d1d0615e84f1ae924dbf31470e65e78693fd3" translate="yes" xml:space="preserve">
          <source>extracted/DName.txt</source>
          <target state="translated">extracted/DName.txt</target>
        </trans-unit>
        <trans-unit id="b215d79f145d7d37bf0924327997403f1436243f" translate="yes" xml:space="preserve">
          <source>extralibs.ld</source>
          <target state="translated">extralibs.ld</target>
        </trans-unit>
        <trans-unit id="51a6f88429f81cbb02aab43d56e67c4c4173caf7" translate="yes" xml:space="preserve">
          <source>extremely</source>
          <target state="translated">extremely</target>
        </trans-unit>
        <trans-unit id="4a0a19218e082a343a1b17e5333409af9d98f0f5" translate="yes" xml:space="preserve">
          <source>f</source>
          <target state="translated">f</target>
        </trans-unit>
        <trans-unit id="511b504b93cecdd47af1a8a303be710f95f75bc6" translate="yes" xml:space="preserve">
          <source>f filename</source>
          <target state="translated">ファイル名</target>
        </trans-unit>
        <trans-unit id="c09bb890b096f7306f688cc6d1dad34e7e52a223" translate="yes" xml:space="preserve">
          <source>f1</source>
          <target state="translated">f1</target>
        </trans-unit>
        <trans-unit id="cf1126f67238bf3e85fcc8c8737b72e80ddcfddb" translate="yes" xml:space="preserve">
          <source>f2</source>
          <target state="translated">f2</target>
        </trans-unit>
        <trans-unit id="619aae029dda528253a6af0ba619b45baa1df115" translate="yes" xml:space="preserve">
          <source>f3</source>
          <target state="translated">f3</target>
        </trans-unit>
        <trans-unit id="efc1a723df38662563f07e053704d3518d9c0de2" translate="yes" xml:space="preserve">
          <source>f:/bin/sh.exe</source>
          <target state="translated">f:/bin/sh.exe</target>
        </trans-unit>
        <trans-unit id="65c74d2aa6d3467b7771c35d65cbd8c1ec9fa1b3" translate="yes" xml:space="preserve">
          <source>f:/perllib/lib</source>
          <target state="translated">f:/perllib/lib</target>
        </trans-unit>
        <trans-unit id="2c9c24726e43266cde66bcbd4735092d2eacc225" translate="yes" xml:space="preserve">
          <source>factory class the parser should use. It defaults to &lt;a href=&quot;TAP::Parser::IteratorFactory&quot;&gt;TAP::Parser::IteratorFactory&lt;/a&gt;.</source>
          <target state="translated">パーサーが使用するファクトリクラス。デフォルトは&lt;a href=&quot;TAP::Parser::IteratorFactory&quot;&gt;TAP :: Parser :: IteratorFactory&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="afbe69b3bde2757624fa65d7500ef3be06edcf19" translate="yes" xml:space="preserve">
          <source>factory class the parser should use. It defaults to &lt;a href=&quot;TAP::Parser::ResultFactory&quot;&gt;TAP::Parser::ResultFactory&lt;/a&gt;.</source>
          <target state="translated">パーサーが使用するファクトリクラス。デフォルトは&lt;a href=&quot;TAP::Parser::ResultFactory&quot;&gt;TAP :: Parser :: ResultFactory&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="c375485583f9b618ce9670363960a8a980ced6dd" translate="yes" xml:space="preserve">
          <source>factory class the parser should use. It defaults to &lt;a href=&quot;parser/iteratorfactory&quot;&gt;TAP::Parser::IteratorFactory&lt;/a&gt;.</source>
          <target state="translated">パーサーが使用するファクトリクラス。デフォルトは&lt;a href=&quot;parser/iteratorfactory&quot;&gt;TAP :: Parser :: IteratorFactory&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="5e3716583c05d72f757c9dbcae789f5179357256" translate="yes" xml:space="preserve">
          <source>factory class the parser should use. It defaults to &lt;a href=&quot;parser/resultfactory&quot;&gt;TAP::Parser::ResultFactory&lt;/a&gt;.</source>
          <target state="translated">パーサーが使用するファクトリクラス。デフォルトは&lt;a href=&quot;parser/resultfactory&quot;&gt;TAP :: Parser :: ResultFactory&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="a602e216eb44a3ac5e096036eeaaef6bb9159677" translate="yes" xml:space="preserve">
          <source>fail</source>
          <target state="translated">fail</target>
        </trans-unit>
        <trans-unit id="7502fccfab9ee69ab38465a6a6300f0439568aab" translate="yes" xml:space="preserve">
          <source>fail for a variety of reasons. As with any other &lt;code&gt;open&lt;/code&gt;, check the return value for success.</source>
          <target state="translated">さまざまな理由で失敗します。他の &lt;code&gt;open&lt;/code&gt; と同様に、戻り値が成功したかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="5ab345f9432a654a06c50bc65707b4dbb76b1653" translate="yes" xml:space="preserve">
          <source>fail hints cannot be provided with either scalar or list hints for %s</source>
          <target state="translated">failヒントは、%sに対してスカラヒントまたはリストヒントを提供することはできません。</target>
        </trans-unit>
        <trans-unit id="8845a7d955cb1ce113d2d931a2a83b5b5d39fe0e" translate="yes" xml:space="preserve">
          <source>fail under real world conditions). As a special exception, you can also call this method before having parsed anything.</source>
          <target state="translated">は実世界の条件では失敗します)。特別な例外として、何かを解析する前にこのメソッドを呼び出すこともできます。</target>
        </trans-unit>
        <trans-unit id="0d4110fd81fb08b9e01e48158e7d130f5350036d" translate="yes" xml:space="preserve">
          <source>fail. This is due to bugs in Haiku's network stack implementation.</source>
          <target state="translated">が失敗します。これはHaikuのネットワークスタックの実装にバグがあるためです。</target>
        </trans-unit>
        <trans-unit id="5f5f8758f5f22d523e531f58123b6db9161683a4" translate="yes" xml:space="preserve">
          <source>failed</source>
          <target state="translated">failed</target>
        </trans-unit>
        <trans-unit id="53e37098471ca09d3df70a0ea8a75308542b1f7a" translate="yes" xml:space="preserve">
          <source>failing may look like this:</source>
          <target state="translated">失敗するとこんな感じになるかもしれません。</target>
        </trans-unit>
        <trans-unit id="909a883b14b7cf483b90761aa4b83de7b6ae170a" translate="yes" xml:space="preserve">
          <source>fails, because the &lt;code&gt;\R&lt;/code&gt; matches the entire string, and won't backtrack to match just the &lt;code&gt;&quot;\x0D&quot;&lt;/code&gt; .) Since &lt;code&gt;\R&lt;/code&gt; can match a sequence of more than one character, it cannot be put inside a bracketed character class; &lt;code&gt;/[\R]/&lt;/code&gt; is an error; use &lt;code&gt;\v&lt;/code&gt; instead. &lt;code&gt;\R&lt;/code&gt; was introduced in perl 5.10.0.</source>
          <target state="translated">&lt;code&gt;\R&lt;/code&gt; は文字列全体に一致し、 &lt;code&gt;&quot;\x0D&quot;&lt;/code&gt; だけに一致するようにバックトラックしないため、失敗します。 &lt;code&gt;\R&lt;/code&gt; は複数の文字のシーケンスに一致する可能性があるため、角かっこで囲まれた文字クラス内に置くことはできません。 &lt;code&gt;/[\R]/&lt;/code&gt; はエラーです。使用 &lt;code&gt;\v&lt;/code&gt; の代わりに。 &lt;code&gt;\R&lt;/code&gt; はperl 5.10.0で導入されました。</target>
        </trans-unit>
        <trans-unit id="8b0477552fade59b80e3b84bf6d6f922b8abea9b" translate="yes" xml:space="preserve">
          <source>fails, because the &lt;code&gt;\R&lt;/code&gt; matches the entire string, and won't backtrack to match just the &lt;code&gt;&quot;\x0D&quot;&lt;/code&gt;.) Since &lt;code&gt;\R&lt;/code&gt; can match a sequence of more than one character, it cannot be put inside a bracketed character class; &lt;code&gt;/[\R]/&lt;/code&gt; is an error; use &lt;code&gt;\v&lt;/code&gt; instead. &lt;code&gt;\R&lt;/code&gt; was introduced in perl 5.10.0.</source>
          <target state="translated">&lt;code&gt;\R&lt;/code&gt; は文字列全体に一致し、 &lt;code&gt;&quot;\x0D&quot;&lt;/code&gt; だけに一致するようにバックトラックしないため、失敗します。） &lt;code&gt;\R&lt;/code&gt; は複数の文字のシーケンスに一致する可能性があるため、括弧で囲まれた文字クラス内に入れることはできません。 &lt;code&gt;/[\R]/&lt;/code&gt; はエラーです。使用 &lt;code&gt;\v&lt;/code&gt; の代わりに。 &lt;code&gt;\R&lt;/code&gt; はperl5.10.0で導入されました。</target>
        </trans-unit>
        <trans-unit id="9c7ec56905e4f49e41123b87e5cc6099791a17f6" translate="yes" xml:space="preserve">
          <source>fails. The upper eight bits reflect specific error conditions encountered by the program (the program's &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; value). The lower eight bits reflect mode of failure, like signal death and core dump information. See</source>
          <target state="translated">失敗します。上位8ビットは、プログラム（プログラムの &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; 値）で発生した特定のエラー条件を反映しています。下位8ビットは、信号の停止やコアダンプ情報などの障害のモードを反映しています。見る</target>
        </trans-unit>
        <trans-unit id="3f6abc9d23d37c3d7cb3940e1733e9a5bc689c93" translate="yes" xml:space="preserve">
          <source>fails. The upper eight bits reflect specific error conditions encountered by the program (the program's &lt;code&gt;exit()&lt;/code&gt; value). The lower eight bits reflect mode of failure, like signal death and core dump information. See &lt;a href=&quot;http://man.he.net/man2/wait&quot;&gt;wait(2)&lt;/a&gt; for details. In contrast to &lt;code&gt;$!&lt;/code&gt; and &lt;code&gt;$^E&lt;/code&gt;, which are set only if an error condition is detected, the variable &lt;code&gt;$?&lt;/code&gt; is set on each &lt;code&gt;wait&lt;/code&gt; or pipe &lt;code&gt;close&lt;/code&gt;, overwriting the old value. This is more like &lt;code&gt;$@&lt;/code&gt;, which on every &lt;code&gt;eval()&lt;/code&gt; is always set on failure and cleared on success.</source>
          <target state="translated">失敗します。上位8ビットは、プログラムが遭遇した特定のエラー状態（プログラムの &lt;code&gt;exit()&lt;/code&gt; 値）を反映しています。下位8ビットは、信号の停止やコアダンプ情報などの障害モードを反映しています。詳細については、&lt;a href=&quot;http://man.he.net/man2/wait&quot;&gt;wait（2）&lt;/a&gt;を参照してください。 &lt;code&gt;$!&lt;/code&gt; とは対照的に！および &lt;code&gt;$^E&lt;/code&gt; は、エラー状態が検出された場合にのみ設定され &lt;code&gt;$?&lt;/code&gt; 変数$？ &lt;code&gt;wait&lt;/code&gt; またはパイプ &lt;code&gt;close&lt;/code&gt; たびに設定され、古い値を上書きします。これは &lt;code&gt;$@&lt;/code&gt; に似ており、すべての &lt;code&gt;eval()&lt;/code&gt; で常に失敗時に設定され、成功するとクリアされます。</target>
        </trans-unit>
        <trans-unit id="d68049bb85454c0b8c56ffbb73c45e8adee41b21" translate="yes" xml:space="preserve">
          <source>failure</source>
          <target state="translated">failure</target>
        </trans-unit>
        <trans-unit id="bd8fd0679822cf578d7351e29e37507345603cc0" translate="yes" xml:space="preserve">
          <source>fake-closer</source>
          <target state="translated">fake-closer</target>
        </trans-unit>
        <trans-unit id="99e7399c2a06b375f59f7b623b40fba2acc010b8" translate="yes" xml:space="preserve">
          <source>fake_file1</source>
          <target state="translated">fake_file1</target>
        </trans-unit>
        <trans-unit id="9a654648921211a9a1081dfedf74326912568ddd" translate="yes" xml:space="preserve">
          <source>fake_file2</source>
          <target state="translated">fake_file2</target>
        </trans-unit>
        <trans-unit id="68137b79657d73985fbeb041877ba8d5880279b6" translate="yes" xml:space="preserve">
          <source>fall back to numeric conversion if &lt;code&gt;fallback&lt;/code&gt; is not explicitly requested. Thus without an explicit recursion num() would convert &lt;code&gt;['+', $a, $b]&lt;/code&gt; to &lt;code&gt;$a + $b&lt;/code&gt; , which would just rebuild the argument of num().</source>
          <target state="translated">&lt;code&gt;fallback&lt;/code&gt; が明示的に要求されていない場合は、数値変換にフォールバックします。したがって、明示的な再帰がなければ、num（）は &lt;code&gt;['+', $a, $b]&lt;/code&gt; を &lt;code&gt;$a + $b&lt;/code&gt; に変換し、num（）の引数を再構築します。</target>
        </trans-unit>
        <trans-unit id="559643ae1c11bff13e6f350f4fbbcaa19c47e2a2" translate="yes" xml:space="preserve">
          <source>fall back to numeric conversion if &lt;code&gt;fallback&lt;/code&gt; is not explicitly requested. Thus without an explicit recursion num() would convert &lt;code&gt;['+', $a, $b]&lt;/code&gt; to &lt;code&gt;$a + $b&lt;/code&gt;, which would just rebuild the argument of num().</source>
          <target state="translated">&lt;code&gt;fallback&lt;/code&gt; が明示的に要求されていない場合は、数値変換にフォールバックします。したがって、明示的な再帰がないと、num（）は &lt;code&gt;['+', $a, $b]&lt;/code&gt; を &lt;code&gt;$a + $b&lt;/code&gt; に変換し、num（）の引数を再構築するだけです。</target>
        </trans-unit>
        <trans-unit id="5d288ad264adcc2a70039c116c397be72c30fe76" translate="yes" xml:space="preserve">
          <source>fallback</source>
          <target state="translated">fallback</target>
        </trans-unit>
        <trans-unit id="0c384406d7d92ecedec57004bdc5fe8cba55012c" translate="yes" xml:space="preserve">
          <source>fallthrough functionality--see below), wherein the same block is used for several &lt;code&gt;case&lt;/code&gt; statements.</source>
          <target state="translated">フォールスルー機能-以下を参照）、同じブロックが複数の &lt;code&gt;case&lt;/code&gt; ステートメントに使用されます。</target>
        </trans-unit>
        <trans-unit id="7cb6efb98ba5972a9b5090dc2e517fe14d12cb04" translate="yes" xml:space="preserve">
          <source>false</source>
          <target state="translated">false</target>
        </trans-unit>
        <trans-unit id="19abe67b65b2e8a5b6d8e822aa291fa6f5f6836d" translate="yes" xml:space="preserve">
          <source>falseop</source>
          <target state="translated">falseop</target>
        </trans-unit>
        <trans-unit id="c55583a4ccf5ff25f7a53e2b544da118369e6557" translate="yes" xml:space="preserve">
          <source>family =&amp;gt; INT</source>
          <target state="translated">家族=&amp;gt; INT</target>
        </trans-unit>
        <trans-unit id="3a0b9dfadcebd170274754dd3c0515816f0ca385" translate="yes" xml:space="preserve">
          <source>fast_abs_path</source>
          <target state="translated">fast_abs_path</target>
        </trans-unit>
        <trans-unit id="b4327558acf93a8f6aceb6242325aeae5b139e7d" translate="yes" xml:space="preserve">
          <source>fastcwd</source>
          <target state="translated">fastcwd</target>
        </trans-unit>
        <trans-unit id="ccad003ca38859469331d33596a4c0206b37ba90" translate="yes" xml:space="preserve">
          <source>fastgetcwd</source>
          <target state="translated">fastgetcwd</target>
        </trans-unit>
        <trans-unit id="2e5e710bff1f4d6b0df452368fde30a33f3f92e1" translate="yes" xml:space="preserve">
          <source>fastprof.out</source>
          <target state="translated">fastprof.out</target>
        </trans-unit>
        <trans-unit id="ee86e08cfe4fb5f8df798e23f04c3968f367878a" translate="yes" xml:space="preserve">
          <source>fatal error</source>
          <target state="translated">致命的エラー</target>
        </trans-unit>
        <trans-unit id="2cdbe455d3a9c690c6001055f27f9393ba85ffef" translate="yes" xml:space="preserve">
          <source>fbm_compile</source>
          <target state="translated">fbm_compile</target>
        </trans-unit>
        <trans-unit id="a8f7611206d2d4b5a846bf4e86557202c4e1be79" translate="yes" xml:space="preserve">
          <source>fbm_instr</source>
          <target state="translated">fbm_instr</target>
        </trans-unit>
        <trans-unit id="4a4b13fb65765b44000af2ac22643547bb59a772" translate="yes" xml:space="preserve">
          <source>fc</source>
          <target state="translated">fc</target>
        </trans-unit>
        <trans-unit id="4c14c4c819c0ab050392c0d48903b0c03c134483" translate="yes" xml:space="preserve">
          <source>fc EXPR</source>
          <target state="translated">エックスピーアール</target>
        </trans-unit>
        <trans-unit id="6937c060e9afe977761075e2fefb163b45e0f03f" translate="yes" xml:space="preserve">
          <source>fcntl</source>
          <target state="translated">fcntl</target>
        </trans-unit>
        <trans-unit id="ff18a38a9d5b358cd6c39896819ec54efb584847" translate="yes" xml:space="preserve">
          <source>fcntl FILEHANDLE,FUNCTION,SCALAR</source>
          <target state="translated">fcntl FILEHANDLE,FUNCTION,SCALARAR</target>
        </trans-unit>
        <trans-unit id="8eb0cb7b4aba0321000f2d2c3bb75c0219fc96bc" translate="yes" xml:space="preserve">
          <source>fcntl is not implemented</source>
          <target state="translated">fcntl が実装されていない</target>
        </trans-unit>
        <trans-unit id="352d54a4f2c85a20da5f8061abbaf3f2f760987b" translate="yes" xml:space="preserve">
          <source>fcntl.h</source>
          <target state="translated">fcntl.h</target>
        </trans-unit>
        <trans-unit id="7b5d87b706820c1a33cbda189ff0954e69833052" translate="yes" xml:space="preserve">
          <source>fcntl.ph</source>
          <target state="translated">fcntl.ph</target>
        </trans-unit>
        <trans-unit id="9f41a95cba557b2894771eed96e07a4ded82537f" translate="yes" xml:space="preserve">
          <source>fd</source>
          <target state="translated">fd</target>
        </trans-unit>
        <trans-unit id="4b7615dce52c4c05ce4e1d374e9c61a13717ac7c" translate="yes" xml:space="preserve">
          <source>feature</source>
          <target state="translated">feature</target>
        </trans-unit>
        <trans-unit id="6222a24c0191c20c1892e76505397b80ed60160f" translate="yes" xml:space="preserve">
          <source>feature ( NAME )</source>
          <target state="translated">フィーチャー(名前 )</target>
        </trans-unit>
        <trans-unit id="9abb52d64664c92523f08f377fb6f54b30e0d854" translate="yes" xml:space="preserve">
          <source>feature - Perl pragma to enable new features</source>
          <target state="translated">feature-新しい機能を有効にするための Perl プラグマ</target>
        </trans-unit>
        <trans-unit id="5200261463ed366c8e9449d7226e0f373b9cb470" translate="yes" xml:space="preserve">
          <source>feature bundle</source>
          <target state="translated">フィーチャーバンドル</target>
        </trans-unit>
        <trans-unit id="80d6f3fa7387eb634bf732b7afdc7d6e37af98ec" translate="yes" xml:space="preserve">
          <source>feature.pm</source>
          <target state="translated">feature.pm</target>
        </trans-unit>
        <trans-unit id="4f944542e06cd6f28fa72685120ec1c9e2b84a27" translate="yes" xml:space="preserve">
          <source>features</source>
          <target state="translated">features</target>
        </trans-unit>
        <trans-unit id="d5dcf786e5ae1ccec87eb9778235ede984d9333a" translate="yes" xml:space="preserve">
          <source>features (an unusual request!) use &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; feature ':all'&lt;/code&gt; .</source>
          <target state="translated">features（珍しいリクエスト！）は &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; feature ':all'&lt;/code&gt; 使用しません。</target>
        </trans-unit>
        <trans-unit id="a4832a4d72e3165698ada8f605c736a9d4a1f0ee" translate="yes" xml:space="preserve">
          <source>features (an unusual request!) use &lt;code&gt;no feature ':all'&lt;/code&gt;.</source>
          <target state="translated">機能（異常な要求！） &lt;code&gt;no feature ':all'&lt;/code&gt; 使用しません '：all'。</target>
        </trans-unit>
        <trans-unit id="3039a9b99e732d6f6f16709caf60632b524505ef" translate="yes" xml:space="preserve">
          <source>feeping creaturism</source>
          <target state="translated">剥ぎ取り創造主義</target>
        </trans-unit>
        <trans-unit id="36c86d3a25cdb1ed8092723c04b24da0e3471685" translate="yes" xml:space="preserve">
          <source>fetch values $content1 and $content2, and</source>
          <target state="translated">値 $content1 と $content2 を取得します。</target>
        </trans-unit>
        <trans-unit id="454e89285ec53c85e81e0077adeb9ed7fd2e4b04" translate="yes" xml:space="preserve">
          <source>fflushall.U</source>
          <target state="translated">fflushall.U</target>
        </trans-unit>
        <trans-unit id="2da0b68df8841752bb747a76780679bcd87c6215" translate="yes" xml:space="preserve">
          <source>field</source>
          <target state="translated">field</target>
        </trans-unit>
        <trans-unit id="d21fb9b1fac712704a5888ae6a74d8e666ee810a" translate="yes" xml:space="preserve">
          <source>field contains results to use when the locale is a Turkic language.</source>
          <target state="translated">フィールドには、ロケールがトルコ語の場合に使用する結果が含まれます。</target>
        </trans-unit>
        <trans-unit id="107eb6638698e163a8b28191b67e1a395a2466fa" translate="yes" xml:space="preserve">
          <source>field hashes</source>
          <target state="translated">フィールドハッシュ</target>
        </trans-unit>
        <trans-unit id="3a8242270054bb6b8fafdf0b546c1908b6db2f87" translate="yes" xml:space="preserve">
          <source>field, with the loss of some generality. In Unicode 5.1, about 7% of the defined foldings have no single code point folding.</source>
          <target state="translated">フィールドでは、 多少の一般性は失われますが。Unicode 5.1では、定義されている折り畳みのうち約7%が単一のコードポイントの折り畳みを持たない。</target>
        </trans-unit>
        <trans-unit id="4e64522039e4ac3cd72aad0fc50eeb09fa916b2a" translate="yes" xml:space="preserve">
          <source>field. But note that the fold for some code points will be a sequence of multiple code points.</source>
          <target state="translated">フィールドを使用します。しかし、いくつかのコードポイントの折り返しは、複数のコードポイントの連続になることに注意してください。</target>
        </trans-unit>
        <trans-unit id="c85b7c2b4005244a5386c17b0cb33a2e2fa7dc1c" translate="yes" xml:space="preserve">
          <source>fieldhash</source>
          <target state="translated">fieldhash</target>
        </trans-unit>
        <trans-unit id="8033cc267d8981976496fddf2d6ec9f5df9195d7" translate="yes" xml:space="preserve">
          <source>fieldhashes</source>
          <target state="translated">fieldhashes</target>
        </trans-unit>
        <trans-unit id="70f132fe13e692866a539996a6b9a05b46076a07" translate="yes" xml:space="preserve">
          <source>fields</source>
          <target state="translated">fields</target>
        </trans-unit>
        <trans-unit id="4e62eba74291a2c99f110792e2fed28a1f529478" translate="yes" xml:space="preserve">
          <source>fields - compile-time class fields</source>
          <target state="translated">fields-コンパイル時クラスのフィールド</target>
        </trans-unit>
        <trans-unit id="13a4eb835346f1d61dcb5047fbf2092fbed7a3ad" translate="yes" xml:space="preserve">
          <source>fields are provided for backwards compatibility for existing programs. They contain the same values as in previous versions of this function.</source>
          <target state="translated">フィールドは、既存のプログラムとの下位互換性のために提供されています。これらのフィールドには、この関数の以前のバージョンと同じ値が含まれています。</target>
        </trans-unit>
        <trans-unit id="9d9d88c385b8519fba52ade2317846a7c703339f" translate="yes" xml:space="preserve">
          <source>fields have been successfully extracted, or until the string has been completely processed.</source>
          <target state="translated">フィールドが正常に抽出されたか、文字列が完全に処理されるまでは</target>
        </trans-unit>
        <trans-unit id="cfc0067149403a7f68bb8554178e4a87c20c8536" translate="yes" xml:space="preserve">
          <source>fields seem to be different in Windows. Also, it seems that the size of the file returned by stat() does not always agree, with C</source>
          <target state="translated">のフィールドはWindowsでは異なるようです。また、stat()が返すファイルのサイズが必ずしも一致しないようで、C</target>
        </trans-unit>
        <trans-unit id="5d8888acaafacc77b1dd26342e0a9551075669f7" translate="yes" xml:space="preserve">
          <source>fields seem to be different. Also, it seems that the size of the file returned by stat() does not always agree, with C</source>
          <target state="translated">のフィールドが異なるようです。また、stat()が返すファイルのサイズが必ずしも一致しないようで、C</target>
        </trans-unit>
        <trans-unit id="120e778202297341ea60c66dff8f618b7895fc29" translate="yes" xml:space="preserve">
          <source>fields::new() creates and blesses a hash comprised of the fields declared using the &lt;code&gt;fields&lt;/code&gt; pragma into the specified class. It is the recommended way to construct a fields-based object.</source>
          <target state="translated">fields :: new（）は、 &lt;code&gt;fields&lt;/code&gt; プラグマを使用して宣言されたフィールドで構成されるハッシュを作成し、指定されたクラスに祝福します。これは、フィールドベースのオブジェクトを構築するための推奨される方法です。</target>
        </trans-unit>
        <trans-unit id="a09c002348dd5779b43697d224e6b948ea7aefd1" translate="yes" xml:space="preserve">
          <source>fields::phash() also accepts a list of key-value pairs that will be used to construct the pseudo hash. Examples:</source>
          <target state="translated">fields::phash()は、擬似ハッシュを構築するために使用されるキーと値のペアのリストも受け付けます。例を示します。</target>
        </trans-unit>
        <trans-unit id="1ad931f3a0ebceee0c8eb34ae0cd594e80f2cba2" translate="yes" xml:space="preserve">
          <source>fields::phash() can be used to create and initialize a plain (unblessed) pseudo-hash. This function should always be used instead of creating pseudo-hashes directly.</source>
          <target state="translated">この関数は、疑似ハッシュを直接作成するのではなく、常に使用しなければなりません。</target>
        </trans-unit>
        <trans-unit id="c89919424b187eb7fa7408bebad868b08f759115" translate="yes" xml:space="preserve">
          <source>fields; you will need also the &lt;a href=&quot;#casespec%28%29&quot;&gt;&quot;casespec()&quot;&lt;/a&gt; function and the &lt;code&gt;Composition_Exclusion&lt;/code&gt; property. (Or you could just use the &lt;a href=&quot;perlfunc#lc&quot;&gt;lc()&lt;/a&gt;, &lt;a href=&quot;perlfunc#uc&quot;&gt;uc()&lt;/a&gt;, and &lt;a href=&quot;perlfunc#ucfirst&quot;&gt;ucfirst()&lt;/a&gt; functions, and the &lt;a href=&quot;Unicode::Normalize&quot;&gt;Unicode::Normalize&lt;/a&gt; module.)</source>
          <target state="translated">田畑; &lt;a href=&quot;#casespec%28%29&quot;&gt;「casespec（）」&lt;/a&gt;関数と &lt;code&gt;Composition_Exclusion&lt;/code&gt; プロパティも必要になります。（または、&lt;a href=&quot;perlfunc#lc&quot;&gt;lc（）&lt;/a&gt;、&lt;a href=&quot;perlfunc#uc&quot;&gt;uc（）&lt;/a&gt;、&lt;a href=&quot;perlfunc#ucfirst&quot;&gt;ucfirst（）&lt;/a&gt;関数、および&lt;a href=&quot;Unicode::Normalize&quot;&gt;Unicode :: Normalize&lt;/a&gt;モジュールを使用することもできます。）</target>
        </trans-unit>
        <trans-unit id="4cfc0eaebd5ad1d599c93ac093368f197e57e55c" translate="yes" xml:space="preserve">
          <source>fields; you will need also the &lt;a href=&quot;#casespec()&quot;&gt;casespec()&lt;/a&gt; function and the &lt;code&gt;Composition_Exclusion&lt;/code&gt; property. (Or you could just use the &lt;a href=&quot;../functions/lc&quot;&gt;lc&lt;/a&gt;, &lt;a href=&quot;../functions/uc&quot;&gt;uc&lt;/a&gt;, and &lt;a href=&quot;../functions/ucfirst&quot;&gt;ucfirst&lt;/a&gt; functions, and the &lt;a href=&quot;normalize&quot;&gt;Unicode::Normalize&lt;/a&gt; module.)</source>
          <target state="translated">田畑; また、&lt;a href=&quot;#casespec()&quot;&gt;casespec（）&lt;/a&gt;関数と &lt;code&gt;Composition_Exclusion&lt;/code&gt; プロパティも必要です。（または、単に&lt;a href=&quot;../functions/lc&quot;&gt;lc&lt;/a&gt;、&lt;a href=&quot;../functions/uc&quot;&gt;uc&lt;/a&gt;、および&lt;a href=&quot;../functions/ucfirst&quot;&gt;ucfirst&lt;/a&gt;関数と&lt;a href=&quot;normalize&quot;&gt;Unicode :: Normalize&lt;/a&gt;モジュールを使用することもできます。）</target>
        </trans-unit>
        <trans-unit id="971c419dd609331343dee105fffd0f4608dc0bf2" translate="yes" xml:space="preserve">
          <source>file</source>
          <target state="translated">file</target>
        </trans-unit>
        <trans-unit id="68b1437a07c5b1c7260c35140b853b224ec1f8f5" translate="yes" xml:space="preserve">
          <source>file (replacing the caret characters with control characters) and away you go. In insert mode, ^T is for indenting, ^D is for undenting, and ^O is for blockdenting--as it were. A more complete example, with comments, can be found at &lt;a href=&quot;http://www.cpan.org/authors/id/T/TO/TOMC/scripts/toms.exrc.gz&quot;&gt;http://www.cpan.org/authors/id/T/TO/TOMC/scripts/toms.exrc.gz&lt;/a&gt;</source>
          <target state="translated">ファイル（キャレット文字を制御文字に置き換える）と離れて行きます。挿入モードでは、^ Tはインデント用、^ Dはインデント解除用、^ Oはブロックデント用です。コメント付きのより完全な例は、&lt;a href=&quot;http://www.cpan.org/authors/id/T/TO/TOMC/scripts/toms.exrc.gz&quot;&gt;http：//www.cpan.org/authors/id/T/TO/TOMC/scripts/toms.exrc.gzにあります。&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="36d3628ba232c90d9724a27cb0e9a6bdeed179f0" translate="yes" xml:space="preserve">
          <source>file (replacing the caret characters with control characters) and away you go. In insert mode, ^T is for indenting, ^D is for undenting, and ^O is for blockdenting--as it were. A more complete example, with comments, can be found at &lt;a href=&quot;http://www.cpan.org/authors/id/TOMC/scripts/toms.exrc.gz&quot;&gt;http://www.cpan.org/authors/id/TOMC/scripts/toms.exrc.gz&lt;/a&gt;</source>
          <target state="translated">ファイル（キャレット文字を制御文字に置き換える）を使用して、先に進みます。挿入モードでは、^ Tはインデント、^ Dはインデント解除、^ Oはブロックインデントです。コメント付きのより完全な例は、&lt;a href=&quot;http://www.cpan.org/authors/id/TOMC/scripts/toms.exrc.gz&quot;&gt;http：//www.cpan.org/authors/id/TOMC/scripts/toms.exrc.gzにあります。&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3f34683e18951099cf47326404418e828ca28c2a" translate="yes" xml:space="preserve">
          <source>file (written by Configure) are stored in the readonly-variable &lt;code&gt;%Config&lt;/code&gt; , indexed by their names.</source>
          <target state="translated">ファイル（Configureで作成）は、名前でインデックスが付けられた読み取り専用変数 &lt;code&gt;%Config&lt;/code&gt; に格納されます。</target>
        </trans-unit>
        <trans-unit id="89a4b5728a43bae975863c39f499de740cbce98c" translate="yes" xml:space="preserve">
          <source>file (written by Configure) are stored in the readonly-variable &lt;code&gt;%Config&lt;/code&gt;, indexed by their names.</source>
          <target state="translated">ファイル（Configureによって作成された）は、読み取り専用変数 &lt;code&gt;%Config&lt;/code&gt; に格納され、名前でインデックスが付けられます。</target>
        </trans-unit>
        <trans-unit id="ce5922698e90cfe75f3465f78834c6687a270428" translate="yes" xml:space="preserve">
          <source>file &lt;code&gt;$filename&lt;/code&gt; for reading or writing or attaches to the opened filehandle, &lt;code&gt;$filehandle&lt;/code&gt; . It returns an object on success and &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; on failure.</source>
          <target state="translated">読み取りまたは書き込み用のファイル &lt;code&gt;$filename&lt;/code&gt; 、または開かれたファイルハンドル &lt;code&gt;$filehandle&lt;/code&gt; アタッチします。成功するとオブジェクトを返し、失敗すると &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="d8c98c27cfaa506328e852aca7309407345327f9" translate="yes" xml:space="preserve">
          <source>file &lt;code&gt;$filename&lt;/code&gt; for reading or writing or attaches to the opened filehandle, &lt;code&gt;$filehandle&lt;/code&gt;. It returns an object on success and &lt;code&gt;undef&lt;/code&gt; on failure.</source>
          <target state="translated">ファイル &lt;code&gt;$filename&lt;/code&gt; 、読み取りまたは書き込み用であるか、開いているファイルハンドル &lt;code&gt;$filehandle&lt;/code&gt; 添付します。成功するとオブジェクトを返し、失敗すると &lt;code&gt;undef&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="cc39d71fcba3bd2b697dcd40853d0d98f1cfb8b5" translate="yes" xml:space="preserve">
          <source>file an RT ticket</source>
          <target state="translated">RTチケットを出す</target>
        </trans-unit>
        <trans-unit id="f73ae0e50739b0f553b819922d0ebd432b011f1c" translate="yes" xml:space="preserve">
          <source>file are loaded is decided at compile-time, thus all the processes have these sections loaded at same addresses, and no fixup of internal links inside the</source>
          <target state="translated">このため、すべてのプロセスで同じアドレスでこれらのセクションが読み込まれ、内部リンクの修正は行われません。</target>
        </trans-unit>
        <trans-unit id="05df3cf1418e353f83bee74ba9f084e5259f5d3b" translate="yes" xml:space="preserve">
          <source>file are meant to be helpful for people maintaining module collections (like CPAN), for people writing installation tools (like CPAN.pm or CPANPLUS), or just for people who want to know some stuff about a distribution before downloading it and starting to install it.</source>
          <target state="translated">ファイルは、モジュールコレクション (CPAN のような)を管理している人、インストールツール (CPAN.pm や CPANPLUS のような)を書いている人、あるいはダウンロードしてインストールを始める前にディストリビューションについて知りたい人のために役立つことを意図しています。</target>
        </trans-unit>
        <trans-unit id="381d72a00a13a6f41472884b4a2dea92f09c5791" translate="yes" xml:space="preserve">
          <source>file are meant to be helpful to people maintaining module collections (like CPAN), for people writing installation tools (like &lt;a href=&quot;cpan&quot;&gt;CPAN&lt;/a&gt; or &lt;a href=&quot;cpanplus&quot;&gt;CPANPLUS&lt;/a&gt;), or just people who want to know some stuff about a distribution before downloading it and starting to install it.</source>
          <target state="translated">ファイルは、モジュールコレクション（CPANなど）を管理している人、インストールツール（&lt;a href=&quot;cpan&quot;&gt;CPAN&lt;/a&gt;や&lt;a href=&quot;cpanplus&quot;&gt;CPANPLUSなど&lt;/a&gt;）を作成している人、またはダウンロードしてインストールを開始する前にディストリビューションに関する情報を知りたい人に役立つことを目的としています。</target>
        </trans-unit>
        <trans-unit id="287e6a7dc5202e12b44f58612312445df03d59d7" translate="yes" xml:space="preserve">
          <source>file at your nearest CPAN site, especially &lt;a href=&quot;http://www.cpan.org/modules/00modlist.long.html#ID5_Networking_&quot;&gt;http://www.cpan.org/modules/00modlist.long.html#ID5_Networking_&lt;/a&gt;. See &lt;a href=&quot;perlmodlib&quot;&gt;perlmodlib&lt;/a&gt; or best yet, the</source>
          <target state="translated">最寄りのCPANサイト（特に&lt;a href=&quot;http://www.cpan.org/modules/00modlist.long.html#ID5_Networking_&quot;&gt;http://www.cpan.org/modules/00modlist.long.html#ID5_Networking_）に&lt;/a&gt;ファイルを保存します。参照&lt;a href=&quot;perlmodlib&quot;&gt;はperlmodlib&lt;/a&gt;または最高まだ、</target>
        </trans-unit>
        <trans-unit id="775cb81f5963d385263bf7d12ee0ba121097b7b1" translate="yes" xml:space="preserve">
          <source>file be a named pipe that has a Perl program on the other end. Now every time any program (like a mailer, news reader, finger program, etc.) tries to read from that file, the reading program will read the new signature from your program. We'll use the pipe-checking file-test operator, &lt;b&gt;-p&lt;/b&gt;, to find out whether anyone (or anything) has accidentally removed our fifo.</source>
          <target state="translated">fileは、反対側にPerlプログラムがある名前付きパイプである必要があります。これで、プログラム（メーラー、ニュースリーダー、fingerプログラムなど）がそのファイルから読み取ろうとするたびに、読み取りプログラムがプログラムから新しい署名を読み取ります。パイプチェックファイルテストオペレーター&lt;b&gt;-pを使用して&lt;/b&gt;、誰か（または何か）が誤ってfifoを削除したかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="15c00a2ccb372e4ee35ad82974003ac3e1c994f8" translate="yes" xml:space="preserve">
          <source>file by saying</source>
          <target state="translated">言添える</target>
        </trans-unit>
        <trans-unit id="2fbf274cf24ed86c567a98e0809637e07ff4c6ac" translate="yes" xml:space="preserve">
          <source>file describes important properties of contributed Perl distributions such as the ones found on &lt;a href=&quot;http://www.cpan.org&quot;&gt;CPAN&lt;/a&gt;. It is typically created by tools like &lt;a href=&quot;Module::Build&quot;&gt;Module::Build&lt;/a&gt; and &lt;a href=&quot;ExtUtils::MakeMaker&quot;&gt;ExtUtils::MakeMaker&lt;/a&gt;.</source>
          <target state="translated">ファイルには、&lt;a href=&quot;http://www.cpan.org&quot;&gt;CPANにある&lt;/a&gt;ような寄稿されたPerlディストリビューションの重要なプロパティが記述されています。これは通常、&lt;a href=&quot;Module::Build&quot;&gt;Module :: Build&lt;/a&gt;や&lt;a href=&quot;ExtUtils::MakeMaker&quot;&gt;ExtUtils :: MakeMaker&lt;/a&gt;などのツールによって作成されます。</target>
        </trans-unit>
        <trans-unit id="05fae8437662730f5f6dba7abbddffd165d6495e" translate="yes" xml:space="preserve">
          <source>file describes important properties of contributed Perl distributions such as the ones found on CPAN. It is typically created by tools like Module::Build, Module::Install, and ExtUtils::MakeMaker.</source>
          <target state="translated">ファイルには、CPAN で見られるような貢献された Perl ディストリビューションの重要なプロパティが記述されています。このファイルは通常、Module::Build、Module::Install、ExtUtils::MakeMaker などのツールによって作成されます。</target>
        </trans-unit>
        <trans-unit id="6215924f3cee8c9aca1c26bfa19f63ca11ef4073" translate="yes" xml:space="preserve">
          <source>file descriptor</source>
          <target state="translated">ファイル記述子</target>
        </trans-unit>
        <trans-unit id="441baed463bdf47763d0856dd4ddb25fd6c7e309" translate="yes" xml:space="preserve">
          <source>file for convenience here.</source>
          <target state="translated">ここに便宜上のファイルがあります。</target>
        </trans-unit>
        <trans-unit id="7d11c75897578556b1d7b1e2fe92a9b0a03129d0" translate="yes" xml:space="preserve">
          <source>file for details of how to override this behaviour)</source>
          <target state="translated">この動作をオーバーライドする方法の詳細については、ファイルを参照してください)</target>
        </trans-unit>
        <trans-unit id="ec3b037ae3a6c6e0acb0cf4f3545d304e5023d1b" translate="yes" xml:space="preserve">
          <source>file for full credits. The latest version of this file can be found at &lt;a href=&quot;https://github.com/pjf/autodie/tree/master/AUTHORS&quot;&gt;https://github.com/pjf/autodie/tree/master/AUTHORS&lt;/a&gt; .</source>
          <target state="translated">完全なクレジットのファイル。このファイルの最新バージョンは、&lt;a href=&quot;https://github.com/pjf/autodie/tree/master/AUTHORS&quot;&gt;https：//github.com/pjf/autodie/tree/master/AUTHORSにあります&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2c3fd2f90c2656ff06f1cf45ce9c049d35bfcc0e" translate="yes" xml:space="preserve">
          <source>file for the extension.</source>
          <target state="translated">拡張子のためのファイルです。</target>
        </trans-unit>
        <trans-unit id="8bf0dea0fb8732f496b26d360a2ebd99489d38ce" translate="yes" xml:space="preserve">
          <source>file for this extension), and try to find a &lt;code&gt;&lt;a href=&quot;../functions/package&quot;&gt;package&lt;/a&gt;&lt;/code&gt; statement from which to obtain the Mixed::Case package name.</source>
          <target state="translated">この拡張子のファイル）、Mixed :: Caseパッケージ名を取得する &lt;code&gt;&lt;a href=&quot;../functions/package&quot;&gt;package&lt;/a&gt;&lt;/code&gt; ステートメントを見つけてください。</target>
        </trans-unit>
        <trans-unit id="de1071bcc4ca8f81d85e73d880b068b2e5e84ac0" translate="yes" xml:space="preserve">
          <source>file for this extension), and try to find a &lt;code&gt;package&lt;/code&gt; statement from which to obtain the Mixed::Case package name.</source>
          <target state="translated">この拡張子のファイル）、Mixed :: Caseパッケージ名を取得するための &lt;code&gt;package&lt;/code&gt; ステートメントを見つけてください。</target>
        </trans-unit>
        <trans-unit id="fb3ae3330fc3eabb756bdd0f78580f54c2b60cf3" translate="yes" xml:space="preserve">
          <source>file from the Perl source distribution has some examples in it.</source>
          <target state="translated">ファイルにはいくつかの例があります。</target>
        </trans-unit>
        <trans-unit id="1ab5f5bbfe0aaaa102537e2f8e2291da3a908d33" translate="yes" xml:space="preserve">
          <source>file if it exists (typically used to add to @dl_resolve_using any files which are required to load the module on the current platform)</source>
          <target state="translated">ファイルが存在する場合 (通常、現在のプラットフォーム上でモジュールをロードするために必要なファイルを @dl_resolve_using に追加するために使用されます)</target>
        </trans-unit>
        <trans-unit id="4a93a426965ebb32c018bf4a52fc5c915f09eba9" translate="yes" xml:space="preserve">
          <source>file in the &lt;a href=&quot;perlvar#%40INC&quot;&gt;&lt;code&gt;@INC&lt;/code&gt;&lt;/a&gt; array and will complain about not finding</source>
          <target state="translated">&lt;a href=&quot;perlvar#%40INC&quot;&gt; &lt;code&gt;@INC&lt;/code&gt; &lt;/a&gt;配列内のファイルで、見つからないことについて文句を言います</target>
        </trans-unit>
        <trans-unit id="b91d5cdbca344acb339a910fc2c8a3d3777f34f3" translate="yes" xml:space="preserve">
          <source>file in the Perl distribution for information on how to add custom C compilation flags when compiling perl. To discourage casual use of this advanced feature, there is no &lt;a href=&quot;english&quot;&gt;English&lt;/a&gt; long name for this variable.</source>
          <target state="translated">Perlのコンパイル時にカスタムCコンパイルフラグを追加する方法については、Perlディストリビューションのファイルを参照してください。この高度な機能のカジュアルな使用を防ぐために、この変数には&lt;a href=&quot;english&quot;&gt;英語の&lt;/a&gt;長い名前はありません。</target>
        </trans-unit>
        <trans-unit id="162492eb1c351669d9a1108aff8983ffb91973c7" translate="yes" xml:space="preserve">
          <source>file in the Perl source distribution for how to do this.</source>
          <target state="translated">ファイルを参照してください。</target>
        </trans-unit>
        <trans-unit id="da7b3422b6710e8288dd545dc3edfa816ab50607" translate="yes" xml:space="preserve">
          <source>file in the Perl source distribution for how to do this. This flag is automatically set if you include &lt;b&gt;-g&lt;/b&gt; option when &lt;code&gt;Configure&lt;/code&gt; asks you about optimizer/debugger flags.</source>
          <target state="translated">これを行う方法については、Perlソース配布のファイルを参照してください。このフラグは、 &lt;code&gt;Configure&lt;/code&gt; がオプティマイザ/デバッガフラグについて尋ねたときに&lt;b&gt;-g&lt;/b&gt;オプションを含めると自動的に設定されます。</target>
        </trans-unit>
        <trans-unit id="36e9a29c03a85f97a73fdb4948af2e80f1172106" translate="yes" xml:space="preserve">
          <source>file in the current directory and produce a human readable statistics report of the run of your program. Note that this may take a little time.</source>
          <target state="translated">ファイルを作成し、プログラムの実行の統計レポートを作成します。これには少し時間がかかることに注意してください。</target>
        </trans-unit>
        <trans-unit id="e292bca05dd6e98ea39569c1bb3e66afcb7aadea" translate="yes" xml:space="preserve">
          <source>file in the directories specified in the &lt;a href=&quot;perlvar#%40INC&quot;&gt;&lt;code&gt;@INC&lt;/code&gt;&lt;/a&gt; array, and it will autovivify the &lt;code&gt;Foo::Bar::&lt;/code&gt; stash at compile time.</source>
          <target state="translated">&lt;a href=&quot;perlvar#%40INC&quot;&gt; &lt;code&gt;@INC&lt;/code&gt; &lt;/a&gt;配列で指定されたディレクトリ内のファイルであり、コンパイル時に &lt;code&gt;Foo::Bar::&lt;/code&gt; stashを自動活性化します。</target>
        </trans-unit>
        <trans-unit id="1a29e7eb5c0fe43890a2c662ad0095f7a6a1954e" translate="yes" xml:space="preserve">
          <source>file in the following fashion:</source>
          <target state="translated">ファイルを以下のような方法で作成します。</target>
        </trans-unit>
        <trans-unit id="da8b40f1c52d3aba3f4a1765e17ce56bcde45e5d" translate="yes" xml:space="preserve">
          <source>file in the module distribution.</source>
          <target state="translated">ファイルを使用してください。</target>
        </trans-unit>
        <trans-unit id="96f52b66f84e46bb34a02215fb341b97509c5e30" translate="yes" xml:space="preserve">
          <source>file in the root of the source tree contains a list of every file in the Perl core, as well as a brief description of each file.</source>
          <target state="translated">ファイルには、Perl コアにあるすべてのファイルのリストと、各ファイルの簡単な説明が含まれています。</target>
        </trans-unit>
        <trans-unit id="b673cbcd01d4def188eaf99c0f5395e7788c0ca6" translate="yes" xml:space="preserve">
          <source>file in the same directory.</source>
          <target state="translated">ファイルを同じディレクトリに保存します。</target>
        </trans-unit>
        <trans-unit id="6f6b467769af75e4243142591578a7e4bb1188b7" translate="yes" xml:space="preserve">
          <source>file in the source distribution for information on building Perl to do this.</source>
          <target state="translated">ファイルを参照してください。</target>
        </trans-unit>
        <trans-unit id="677a6abf80153fdb47022fb5cbbc1f632fc61929" translate="yes" xml:space="preserve">
          <source>file in the source distribution for more information).</source>
          <target state="translated">ファイルを参照してください)。</target>
        </trans-unit>
        <trans-unit id="af57901abe1de14cfaf89845262f910e19725878" translate="yes" xml:space="preserve">
          <source>file in the source distribution for more information.</source>
          <target state="translated">ファイルを参照してください。</target>
        </trans-unit>
        <trans-unit id="158decdfc3c0df69f61415a4fe826494641e7975" translate="yes" xml:space="preserve">
          <source>file in the source distribution. You can find out whether you are using perl's malloc by typing &lt;code&gt;perl -V:usemymalloc&lt;/code&gt;.</source>
          <target state="translated">ソースディストリビューションのファイル。 &lt;code&gt;perl -V:usemymalloc&lt;/code&gt; と入力すると、perlのmallocを使用しているかどうかを確認できます。</target>
        </trans-unit>
        <trans-unit id="7c4351574e557923e651ac05f53c9d40a61e7f4a" translate="yes" xml:space="preserve">
          <source>file in your script. If you're running under another OS and have installed this package, it behaves like a normal Perl extension (in fact, you're using Perl substitutes to emulate the necessary VMS system calls).</source>
          <target state="translated">ファイルをスクリプトの中で使用してください。別の OS で実行していて、このパッケージをインストールしている場合は、通常の Perl 拡張機能のように動作します (実際には、必要な VMS システムコールをエミュレートするために Perl の代替品を使用しています)。</target>
        </trans-unit>
        <trans-unit id="bc6aea57daf5d9a2e4a0070f6c11bd23ebfa3d35" translate="yes" xml:space="preserve">
          <source>file included with this distribution.</source>
          <target state="translated">ファイルが含まれています。</target>
        </trans-unit>
        <trans-unit id="5dfca435e1e8b0451f90a460985684d26ca313be" translate="yes" xml:space="preserve">
          <source>file into an HFS as binary; don't translate from ASCII to EBCDIC.</source>
          <target state="translated">ファイルをバイナリとして HFS に変換します。</target>
        </trans-unit>
        <trans-unit id="d6d45ddf0d594d5a72ac9c87b11195208c55a4ad" translate="yes" xml:space="preserve">
          <source>file is a record, keyed on login name, containing information about that user.</source>
          <target state="translated">ファイルは、ログイン名をキーにしたレコードで、そのユーザに関する情報が含まれています。</target>
        </trans-unit>
        <trans-unit id="3ecd77a590dd9c1636d66663b6a8415ed508a485" translate="yes" xml:space="preserve">
          <source>file is described in &lt;a href=&quot;CPAN::Meta::Spec&quot;&gt;CPAN::Meta::Spec&lt;/a&gt;.</source>
          <target state="translated">ファイルは&lt;a href=&quot;CPAN::Meta::Spec&quot;&gt;CPAN :: Meta :: Specで&lt;/a&gt;説明されています。</target>
        </trans-unit>
        <trans-unit id="98fc98a46f0c48f2f43211f0e4fb728e8872c9a7" translate="yes" xml:space="preserve">
          <source>file is devoted to &quot;Networking, Device Control (modems), and Interprocess Communication&quot;, and contains numerous unbundled modules numerous networking modules, Chat and Expect operations, CGI programming, DCE, FTP, IPC, NNTP, Proxy, Ptty, RPC, SNMP, SMTP, Telnet, Threads, and ToolTalk--to name just a few.</source>
          <target state="translated">ファイルは「ネットワーク、デバイス制御(モデム)、プロセス間通信」に特化したもので、多数のアンバンドルされていないモジュール多数のネットワークモジュール、チャットと期待操作、CGI プログラミング、DCE、FTP、IPC、NNTP、プロキシ、Ptty、RPC、SNMP、SMTP、Telnet、スレッド、およびツールトークなどが含まれています。</target>
        </trans-unit>
        <trans-unit id="dbd2c1cfca01ce93a71ed8d167637eb68d1a74ae" translate="yes" xml:space="preserve">
          <source>file is one big YAML mapping whose keys are described here.</source>
          <target state="translated">ファイルは1つの大きなYAMLマッピングで、そのキーはここで説明されています。</target>
        </trans-unit>
        <trans-unit id="90c558fdb0f374b7066800555f1845ac44ddeeb6" translate="yes" xml:space="preserve">
          <source>file is required to exist. See &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt;, &lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt;, and &lt;a href=&quot;autoloader&quot;&gt;AutoLoader&lt;/a&gt; for details about the AUTOLOAD mechanism.</source>
          <target state="translated">ファイルが存在する必要があります。参照&lt;a href=&quot;perlsub&quot;&gt;はperlsub&lt;/a&gt;、&lt;a href=&quot;perlobj&quot;&gt;perlobjを&lt;/a&gt;、および&lt;a href=&quot;autoloader&quot;&gt;オートローダーを&lt;/a&gt; AUTOLOADメカニズムの詳細については。</target>
        </trans-unit>
        <trans-unit id="61eccd061d3d63ddbaaade6cc88766ed0434f751" translate="yes" xml:space="preserve">
          <source>file makes calls to these XSUBs, it is convenient to have XSUBs installed before the Perl code is defined; for example, this makes prototypes for XSUBs visible to this Perl code. Alternatively, if the &lt;code&gt;BOOT:&lt;/code&gt; section makes calls to Perl functions (or uses Perl variables) defined in the</source>
          <target state="translated">fileはこれらのXSUBを呼び出します。Perlコードを定義する前にXSUBをインストールしておくと便利です。たとえば、これによりXSUBのプロトタイプがこのPerlコードから見えるようになります。または、 &lt;code&gt;BOOT:&lt;/code&gt; セクションが、で定義されたPerl関数を呼び出す（またはPerl変数を使用する）場合</target>
        </trans-unit>
        <trans-unit id="dd9eccaa42877fc3e0e2caf9f63e4bb1b19299b7" translate="yes" xml:space="preserve">
          <source>file may also load in other files in support of the module.) See the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; built-in.</source>
          <target state="translated">fileは、モジュールをサポートする他のファイルにロードすることもできます。）組み込みの &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; 参照してください。</target>
        </trans-unit>
        <trans-unit id="b4b361625c0a74fa42c6739be1e9970071953b3f" translate="yes" xml:space="preserve">
          <source>file may also load in other files in support of the module.) See the &lt;code&gt;use&lt;/code&gt; built-in.</source>
          <target state="translated">ファイルは、モジュールをサポートする他のファイルにロードされる場合もあります。）組み込みの &lt;code&gt;use&lt;/code&gt; 参照してください。</target>
        </trans-unit>
        <trans-unit id="267a28875ed91ffaabeb2b24dad8d41b22f633e8" translate="yes" xml:space="preserve">
          <source>file might contain:</source>
          <target state="translated">ファイルが含まれている可能性があります。</target>
        </trans-unit>
        <trans-unit id="133905dd973aa7f0fcaeda5f96f6593d818d2aed" translate="yes" xml:space="preserve">
          <source>file or an accompanying</source>
          <target state="translated">ファイルまたはそれに付随する</target>
        </trans-unit>
        <trans-unit id="b8aa13a41f3257044fa2a29c8a02c9d624aa1e73" translate="yes" xml:space="preserve">
          <source>file or code can be added to the dl_expandspec() function in</source>
          <target state="translated">の dl_expandspec()関数に追加することができます。</target>
        </trans-unit>
        <trans-unit id="b40f9fbd51c0ade428cb94b42438cefd6b127f69" translate="yes" xml:space="preserve">
          <source>file refers.</source>
          <target state="translated">ファイルを参照します。</target>
        </trans-unit>
        <trans-unit id="d0d79b0c3ac46914cd24e3fef7693635fb7d6376" translate="yes" xml:space="preserve">
          <source>file should be a valid &lt;a href=&quot;http://yaml.org/spec/history/2002-10-31.html#syntax-document&quot;&gt;YAML document header&lt;/a&gt; like &lt;code&gt;&quot;--- #YAML:1.0&quot;&lt;/code&gt;</source>
          <target state="translated">ファイルは &lt;code&gt;&quot;--- #YAML:1.0&quot;&lt;/code&gt; &lt;a href=&quot;http://yaml.org/spec/history/2002-10-31.html#syntax-document&quot;&gt;YAML &lt;/a&gt;：1.0」のような有効なYAMLドキュメントヘッダーである必要があります</target>
        </trans-unit>
        <trans-unit id="cbd7a107ddea336cdb755e4687424381f4097d7a" translate="yes" xml:space="preserve">
          <source>file should be a valid YAML document header like &lt;code&gt;&quot;--- #YAML:1.0&quot;&lt;/code&gt;.</source>
          <target state="translated">ファイルは &lt;code&gt;&quot;--- #YAML:1.0&quot;&lt;/code&gt; YAML ：1.0」のような有効なYAMLドキュメントヘッダーである必要があります。</target>
        </trans-unit>
        <trans-unit id="8f585ef30f0e02cbf16f980ae3bf5833369d52d4" translate="yes" xml:space="preserve">
          <source>file should be created by running</source>
          <target state="translated">ファイルは</target>
        </trans-unit>
        <trans-unit id="a0d820c11825a25442dbcbf481c8b189b592c7fc" translate="yes" xml:space="preserve">
          <source>file should contain fully qualified filenames, one per line.</source>
          <target state="translated">ファイルには、1行に1つの完全修飾されたファイル名が含まれている必要があります。</target>
        </trans-unit>
        <trans-unit id="2a9072b84e18f0455e8e85c7884b4df440048f24" translate="yes" xml:space="preserve">
          <source>file so that the tests are run.</source>
          <target state="translated">ファイルを作成して、テストを実行するようにします。</target>
        </trans-unit>
        <trans-unit id="1acf9073340e711ae89ffcbeb7af4bd17889de62" translate="yes" xml:space="preserve">
          <source>file test operator</source>
          <target state="translated">ファイル試験演算子</target>
        </trans-unit>
        <trans-unit id="aa30b918a30cfeb5accba2d72b40237ac697924a" translate="yes" xml:space="preserve">
          <source>file that is a plain C file containing all the bootstrap code to make the modules associated with the libraries available from within perl. If the first argument to &lt;code&gt;writemain()&lt;/code&gt; is a reference to a scalar it is used as the filename to open for output. Any other reference is used as the filehandle to write to. Otherwise output defaults to &lt;code&gt;STDOUT&lt;/code&gt; .</source>
          <target state="translated">ライブラリに関連付けられたモジュールをperl内から使用できるようにするすべてのブートストラップコードを含むプレーンCファイルです。 &lt;code&gt;writemain()&lt;/code&gt; の最初の引数がスカラーへの参照である場合、それは出力用に開くファイル名として使用されます。他の参照は、書き込むファイルハンドルとして使用されます。それ以外の場合、出力はデフォルトで &lt;code&gt;STDOUT&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="2f0fb521d6b6c68a6e2d2cf3415056404b3752e8" translate="yes" xml:space="preserve">
          <source>file that is a plain C file containing all the bootstrap code to make the modules associated with the libraries available from within perl. If the first argument to &lt;code&gt;writemain()&lt;/code&gt; is a reference to a scalar it is used as the filename to open for output. Any other reference is used as the filehandle to write to. Otherwise output defaults to &lt;code&gt;STDOUT&lt;/code&gt;.</source>
          <target state="translated">ライブラリに関連付けられたモジュールをperl内から利用できるようにするためのすべてのブートストラップコードを含むプレーンCファイルであるファイル。 &lt;code&gt;writemain()&lt;/code&gt; の最初の引数がスカラーへの参照である場合、出力用に開くファイル名として使用されます。その他の参照は、書き込むファイルハンドルとして使用されます。それ以外の場合、出力はデフォルトで &lt;code&gt;STDOUT&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="59ab71ddc047ca4fcee494852b4de731f173e17b" translate="yes" xml:space="preserve">
          <source>file to configure the local Perl installation to use &quot;sloppy&quot; &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat()&lt;/a&gt;&lt;/code&gt; by default. See the documentation for &lt;b&gt;-f&lt;/b&gt; in &lt;a href=&quot;perlrun#Command-Switches&quot;&gt;perlrun&lt;/a&gt; for more information about site customization.</source>
          <target state="translated">ローカルのPerlインストールがデフォルトで「ずさんな」 &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat()&lt;/a&gt;&lt;/code&gt; を使用するように設定するファイル。サイトのカスタマイズの詳細については、&lt;a href=&quot;perlrun#Command-Switches&quot;&gt;perlrunの&lt;/a&gt;&lt;b&gt;-f&lt;/b&gt;のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="c1726af4357b7eaff9516b876d37eef6fd5d2d2a" translate="yes" xml:space="preserve">
          <source>file to configure the local Perl installation to use &quot;sloppy&quot; &lt;code&gt;stat()&lt;/code&gt; by default. See the documentation for &lt;b&gt;-f&lt;/b&gt; in &lt;a href=&quot;perlrun#-f&quot;&gt;perlrun&lt;/a&gt; for more information about site customization.</source>
          <target state="translated">デフォルトで「ずさんな」 &lt;code&gt;stat()&lt;/code&gt; を使用するようにローカルPerlインストールを構成するファイル。サイトのカスタマイズの詳細については、&lt;a href=&quot;perlrun#-f&quot;&gt;perlrunの&lt;/a&gt;&lt;b&gt;-f&lt;/b&gt;のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="9cdafb6620520642425a02347d97d86dbab90a86" translate="yes" xml:space="preserve">
          <source>file to flag that a local modification has been made. See</source>
          <target state="translated">ファイルにローカルでの変更が行われたことを示すフラグを立てます。以下を参照してください。</target>
        </trans-unit>
        <trans-unit id="f0708647e117b28524ecdf176c31e9edead4cec9" translate="yes" xml:space="preserve">
          <source>file to load (or arrange to autoload) any additional functionality. For example, although the POSIX module happens to do both dynamic loading and autoloading, the user can say just &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; POSIX&lt;/code&gt; to get it all.</source>
          <target state="translated">追加機能をロードする（または自動ロードするように調整する）ファイル。たとえば、POSIXモジュールはたまたま動的ロードと自動ロードの両方を実行しますが、ユーザーは &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; POSIX&lt;/code&gt; を&lt;a href=&quot;functions/use&quot;&gt;使用&lt;/a&gt;してすべてを取得することができます。</target>
        </trans-unit>
        <trans-unit id="f3c93040dd15684a2eb53c8525f92fb96bf33741" translate="yes" xml:space="preserve">
          <source>file to load (or arrange to autoload) any additional functionality. For example, although the POSIX module happens to do both dynamic loading and autoloading, the user can say just &lt;code&gt;use POSIX&lt;/code&gt; to get it all.</source>
          <target state="translated">追加機能をロードする（または自動ロードするように調整する）ファイル。たとえば、POSIXモジュールはたまたま動的ロードと自動ロードの両方を実行しますが、ユーザーは &lt;code&gt;use POSIX&lt;/code&gt; を使用してすべてを取得すると言うことができます。</target>
        </trans-unit>
        <trans-unit id="d2dd5e29918493ca16697faf7b974761d05cd305" translate="yes" xml:space="preserve">
          <source>file when available at runtime. Otherwise, they may be embedded in the file itself when the splain package is built. See the</source>
          <target state="translated">ファイルに埋め込まれているかもしれません。そうでない場合は、splain パッケージがビルドされたときにファイル自体に埋め込まれることがあります。このような場合には</target>
        </trans-unit>
        <trans-unit id="53bcbbac9232962cd3671a74f303a34d97752aca" translate="yes" xml:space="preserve">
          <source>file which can be used to build and install the files required by the extension. The kit should be unpacked into a directory tree &lt;b&gt;not&lt;/b&gt; under the main Perl source directory, and the procedure for building the extension is simply</source>
          <target state="translated">拡張機能が必要とするファイルを構築およびインストールするために使用できるファイル。キットはメインのPerlソースディレクトリの下では&lt;b&gt;なく&lt;/b&gt;、ディレクトリツリーに解凍する必要があります。拡張機能をビルドする手順は簡単です。</target>
        </trans-unit>
        <trans-unit id="355b6cbe0037bb7d13bd54052c7d011cc9fb5482" translate="yes" xml:space="preserve">
          <source>file which just loads this DLL into memory and supplies command-arguments. The extension DLL cannot link to symbols in</source>
          <target state="translated">ファイルは、このDLLをメモリにロードし、コマンド引数を提供するだけです。拡張DLLは</target>
        </trans-unit>
        <trans-unit id="51b131ee6959894d1a8bea0501e07d2135b16f5f" translate="yes" xml:space="preserve">
          <source>file whose name matches that of the current directory (presumably the 'main'</source>
          <target state="translated">ファイルの名前がカレントディレクトリの名前と一致するもの (おそらく 'main' ファイル)を指定します。</target>
        </trans-unit>
        <trans-unit id="9ef03954ec9f96e79b149a284687feb21c3d5441" translate="yes" xml:space="preserve">
          <source>file will be created.</source>
          <target state="translated">ファイルが作成されます。</target>
        </trans-unit>
        <trans-unit id="1322471bf338ac62ead6e7f95034e3b8cfb0816c" translate="yes" xml:space="preserve">
          <source>file will be saved as</source>
          <target state="translated">ファイルは</target>
        </trans-unit>
        <trans-unit id="6ab7c3be6951679d1c08d5fb53df96b878b66a01" translate="yes" xml:space="preserve">
          <source>file with four arguments. The last stack frame shows that &lt;code&gt;main::pests&lt;/code&gt; was called in scalar context, also from</source>
          <target state="translated">4つの引数を持つファイル。最後のスタックフレームは、 &lt;code&gt;main::pests&lt;/code&gt; がスカラーコンテキストで呼び出されたことも示しています。</target>
        </trans-unit>
        <trans-unit id="08df28525c6d6b2688b6272afd281103b83c1c54" translate="yes" xml:space="preserve">
          <source>file, and adds a HISTORY section to the POD template.</source>
          <target state="translated">ファイルを作成し、POD テンプレートに HISTORY セクションを追加します。</target>
        </trans-unit>
        <trans-unit id="abf04b01c3973801e690a48960dd3ec71dd25997" translate="yes" xml:space="preserve">
          <source>file, but nowadays installation of extensions may be performed automatically, guided by</source>
          <target state="translated">ファイルがありますが、最近では拡張子のインストールは</target>
        </trans-unit>
        <trans-unit id="249895c60b352ab732225e925898a8759d0498f2" translate="yes" xml:space="preserve">
          <source>file, but there may also be dynamically linked executables (often ending in</source>
          <target state="translated">ファイルを使用しますが、動的にリンクされた実行ファイル(多くの場合、末尾が</target>
        </trans-unit>
        <trans-unit id="23a1b92f81efa69e0514609c49a5329525632bba" translate="yes" xml:space="preserve">
          <source>file, indicates the extension which the module's loadable object will have. For example:</source>
          <target state="translated">ファイルは、モジュールのロード可能なオブジェクトが持つ拡張子を示します。例えば</target>
        </trans-unit>
        <trans-unit id="9875327001d234a7c2bcd87bd5760825d877bcf9" translate="yes" xml:space="preserve">
          <source>file, sufficient to give an idea of the sort of output you can expect from this cool tool.</source>
          <target state="translated">このクールなツールから期待できる出力の種類のアイデアを与えるには十分です。</target>
        </trans-unit>
        <trans-unit id="ccb64117f0e5474c5e23b90658818325917344c2" translate="yes" xml:space="preserve">
          <source>file, the</source>
          <target state="translated">ファイルの</target>
        </trans-unit>
        <trans-unit id="ec78705f6deebee296d6a87c3ada8725ec1443d6" translate="yes" xml:space="preserve">
          <source>file, the code there is called.</source>
          <target state="translated">ファイルの中では、そこにあるコードが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="6cc627c6c34838965c80ac74ae88bead1ca081db" translate="yes" xml:space="preserve">
          <source>file, then run</source>
          <target state="translated">ファイルを作成してから、次のように実行します。</target>
        </trans-unit>
        <trans-unit id="7cf6254f0a83d5e2c0b7dbdaa0ae0194f707236e" translate="yes" xml:space="preserve">
          <source>file, they must be defined prior to the call to &lt;code&gt;XSLoader::load()&lt;/code&gt; (or &lt;code&gt;bootstrap()&lt;/code&gt; ).</source>
          <target state="translated">&lt;code&gt;XSLoader::load()&lt;/code&gt; （または &lt;code&gt;bootstrap()&lt;/code&gt; ）を呼び出す前に定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="e8c9e35dd9e22ee59e1ad18570e00bfbd9f2061b" translate="yes" xml:space="preserve">
          <source>file, they must be defined prior to the call to &lt;code&gt;XSLoader::load()&lt;/code&gt; (or &lt;code&gt;bootstrap()&lt;/code&gt;).</source>
          <target state="translated">ファイルの場合、 &lt;code&gt;XSLoader::load()&lt;/code&gt; （または &lt;code&gt;bootstrap()&lt;/code&gt; ）を呼び出す前に定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="f221620a131aa17f3450def349ab1f33138a7725" translate="yes" xml:space="preserve">
          <source>file, this uses the &lt;b&gt;h2xs&lt;/b&gt; program (see the Perl source distribution) and your native C compiler. This means that it has a far more likely chance of getting the numbers right.</source>
          <target state="translated">ファイル、これは&lt;b&gt;h2xs&lt;/b&gt;プログラム（Perlソース配布を参照）とネイティブCコンパイラを使用します。これは、数値が正しくなる可能性がはるかに高いことを意味します。</target>
        </trans-unit>
        <trans-unit id="a0fde36f120cf7f39ffe71c18bf903da337bd14d" translate="yes" xml:space="preserve">
          <source>file, typemaps may be embedded verbatim in XS with a heredoc-like syntax. See the documentation on the &lt;code&gt;TYPEMAP:&lt;/code&gt; XS keyword.</source>
          <target state="translated">ファイル、タイプマップは、ヒアドキュメントのような構文でXSにそのまま埋め込むことができます。 &lt;code&gt;TYPEMAP:&lt;/code&gt; XSキーワードのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="a0cbe8a51b42fbc80ce2d1890ee7a76b2e8761c3" translate="yes" xml:space="preserve">
          <source>file, which contains initialization code. For instance, you could make aliases like these (the last one is one people expect to be there):</source>
          <target state="translated">ファイルには初期化コードが含まれています。例えば、以下のようなエイリアスを作ることができます (最後のエイリアスは人々が期待しているものです)。</target>
        </trans-unit>
        <trans-unit id="6cf65d4b2f92eee437d62d40cfd7c1383028db81" translate="yes" xml:space="preserve">
          <source>file, which defines &lt;code&gt;$CPAN::Config&lt;/code&gt; as an anonymous hash.</source>
          <target state="translated">&lt;code&gt;$CPAN::Config&lt;/code&gt; を匿名ハッシュとして定義するファイル。</target>
        </trans-unit>
        <trans-unit id="9883d8e3e0aef34533f4ef8bc6cda135e820b146" translate="yes" xml:space="preserve">
          <source>file, which is available when the perl source tree was fetched with rsync.</source>
          <target state="translated">このファイルは、perlのソースツリーがrsyncでフェッチされたときに利用できるようになります。</target>
        </trans-unit>
        <trans-unit id="e6aac979537532c0337818830a09318816ba289e" translate="yes" xml:space="preserve">
          <source>file, which is part of the source distribution. It describes in detail how to cope with most idiosyncrasies that the &lt;code&gt;Configure&lt;/code&gt; script can't work around for any given system or architecture.</source>
          <target state="translated">ソース配布の一部であるファイル。これは、 &lt;code&gt;Configure&lt;/code&gt; スクリプトが特定のシステムまたはアーキテクチャーで回避できないほとんどの特異性に対処する方法を詳しく説明しています。</target>
        </trans-unit>
        <trans-unit id="bea29006cf40081acae098f338dc7e19880696d5" translate="yes" xml:space="preserve">
          <source>file-dir-perms</source>
          <target state="translated">file-dir-perms</target>
        </trans-unit>
        <trans-unit id="e1ae90fc2f86d79825a96562add0919aed98dd02" translate="yes" xml:space="preserve">
          <source>file.</source>
          <target state="translated">file.</target>
        </trans-unit>
        <trans-unit id="d37e5ef40222df497d411a78995cfe9018b8cde2" translate="yes" xml:space="preserve">
          <source>file. In a version number such as 5.6.1, this is the &lt;code&gt;1&lt;/code&gt; . In</source>
          <target state="translated">ファイル。5.6.1などのバージョン番号では、これは &lt;code&gt;1&lt;/code&gt; です。に</target>
        </trans-unit>
        <trans-unit id="3bba5e768d90571797052a6f5f5ee756682c4bd1" translate="yes" xml:space="preserve">
          <source>file. In a version number such as 5.6.1, this is the &lt;code&gt;1&lt;/code&gt;. In</source>
          <target state="translated">ファイル。5.6.1などのバージョン番号では、これは &lt;code&gt;1&lt;/code&gt; です。に</target>
        </trans-unit>
        <trans-unit id="b65e3d6f747152b09cbc7c816a6517a250bb6d18" translate="yes" xml:space="preserve">
          <source>file. In a version number such as 5.6.1, this is the &lt;code&gt;5&lt;/code&gt; . In</source>
          <target state="translated">ファイル。5.6.1などのバージョン番号では、これは &lt;code&gt;5&lt;/code&gt; です。に</target>
        </trans-unit>
        <trans-unit id="dd5ce7c0760e802cc336bcf0104c084c71bfa7a6" translate="yes" xml:space="preserve">
          <source>file. In a version number such as 5.6.1, this is the &lt;code&gt;5&lt;/code&gt;. In</source>
          <target state="translated">ファイル。5.6.1などのバージョン番号では、これは &lt;code&gt;5&lt;/code&gt; です。に</target>
        </trans-unit>
        <trans-unit id="ae0873a70bd546976d549f643a1b137884a22193" translate="yes" xml:space="preserve">
          <source>file. In a version number such as 5.6.1, this is the &lt;code&gt;6&lt;/code&gt; . In</source>
          <target state="translated">ファイル。5.6.1などのバージョン番号では、これは &lt;code&gt;6&lt;/code&gt; です。に</target>
        </trans-unit>
        <trans-unit id="4de55cc3fbfe29620ff867dd7947f59e54e3578c" translate="yes" xml:space="preserve">
          <source>file. In a version number such as 5.6.1, this is the &lt;code&gt;6&lt;/code&gt;. In</source>
          <target state="translated">ファイル。5.6.1などのバージョン番号では、これは &lt;code&gt;6&lt;/code&gt; です。に</target>
        </trans-unit>
        <trans-unit id="fd0d59d1fd485af52ef04dc23d8d156d01a1762f" translate="yes" xml:space="preserve">
          <source>file. In modern times, refers more often to the entire collection of Perl &lt;b&gt;modules&lt;/b&gt; on your system.</source>
          <target state="translated">ファイル。現代では、より頻繁にシステム上のPerl &lt;b&gt;モジュールの&lt;/b&gt;コレクション全体を指します。</target>
        </trans-unit>
        <trans-unit id="d4429d5157b51842bb7c36af527e1a0e62e5dd64" translate="yes" xml:space="preserve">
          <source>file. Indeed, this would need a DLL to have different relocations tables for the (different) executables which use this DLL.</source>
          <target state="translated">ファイルを作成する必要があります。確かに、このDLLを使用する(異なる)実行ファイルのために、異なる再配置テーブルを持つDLLが必要になります。</target>
        </trans-unit>
        <trans-unit id="a6c7e188ee4b7c2be29b6a8d22eb99bc32d02d25" translate="yes" xml:space="preserve">
          <source>file. It's good form to include both the name of the tool and its version, but this field is essentially opaque, at least for the moment.</source>
          <target state="translated">ファイルの名前を入力してください。ツールの名前とバージョンの両方を含めるのは良い形ですが、このフィールドは基本的には、少なくとも今のところ不透明です。</target>
        </trans-unit>
        <trans-unit id="800725c4325b94814663fe6d053c3c6d874c193c" translate="yes" xml:space="preserve">
          <source>file. It's good form to include both the name of the tool and its version, but this field is essentially opaque, at least for the moment. If</source>
          <target state="translated">ファイルの名前を入力してください。ツールの名前とバージョンの両方を含めるのは良い形ですが、このフィールドは基本的には不透明です。もし</target>
        </trans-unit>
        <trans-unit id="cd6596a3c6c85784602dbc9555ccd5bbcc5945d7" translate="yes" xml:space="preserve">
          <source>file. Pretty nifty, eh?</source>
          <target state="translated">ファイルを かなり気が利いてるだろ?</target>
        </trans-unit>
        <trans-unit id="886f5669d5eb20cd00e3386c4bd84ce57f40ecec" translate="yes" xml:space="preserve">
          <source>file. See the</source>
          <target state="translated">ファイルを参照してください。を参照してください。</target>
        </trans-unit>
        <trans-unit id="cff967df0ce751b54e3e33d0ddfe8d4ee8b9dcd1" translate="yes" xml:space="preserve">
          <source>file. The behaviour is exactly the same as if you called the function, triggering the regular &lt;code&gt;AUTOLOAD&lt;/code&gt; mechanism, but it does not actually execute the autoloaded function.</source>
          <target state="translated">ファイル。動作は、通常の &lt;code&gt;AUTOLOAD&lt;/code&gt; メカニズムをトリガーして関数を呼び出した場合とまったく同じですが、実際にはオートロードされた関数は実行されません。</target>
        </trans-unit>
        <trans-unit id="1650e56be91fe8c73c39a9876ab24e6bd4b51fa7" translate="yes" xml:space="preserve">
          <source>file. The necessary signature information is output to STDOUT by invoking Storable::show_file_magic(). Note that the GNU implementation of the &lt;code&gt;file&lt;/code&gt; utility, version 3.38 or later, is expected to contain support for recognising Storable files out-of-the-box, in addition to other kinds of Perl files.</source>
          <target state="translated">ファイル。Storable :: show_file_magic（）を呼び出すことにより、必要な署名情報がSTDOUTに出力されます。 &lt;code&gt;file&lt;/code&gt; ユーティリティのGNU実装、バージョン3.38以降には、他の種類のPerlファイルに加えて、すぐに使用可能なStorableファイルを認識するためのサポートが含まれることが期待されています。</target>
        </trans-unit>
        <trans-unit id="61e7ce7ab64e3cafea855cb11269abafc89bf07c" translate="yes" xml:space="preserve">
          <source>file. This is normally &quot;cat</source>
          <target state="translated">というファイルを作成します。これは通常、&quot;cat</target>
        </trans-unit>
        <trans-unit id="4463c4c2031fb32ccf482a1651ae7f49557bc017" translate="yes" xml:space="preserve">
          <source>file. Unlike the old mechanism of requiring a translated</source>
          <target state="translated">ファイルを使用します。翻訳された</target>
        </trans-unit>
        <trans-unit id="a0efa7152686ccebeb091385c316e03d029c0277" translate="yes" xml:space="preserve">
          <source>file. You can also find out from within Perl what your $quota and $comment fields mean and whether you have the $expire field by using the &lt;a href=&quot;config&quot;&gt;&lt;code&gt;Config&lt;/code&gt;&lt;/a&gt; module and the values &lt;code&gt;d_pwquota&lt;/code&gt;, &lt;code&gt;d_pwage&lt;/code&gt;, &lt;code&gt;d_pwchange&lt;/code&gt;, &lt;code&gt;d_pwcomment&lt;/code&gt;, and &lt;code&gt;d_pwexpire&lt;/code&gt;. Shadow password files are supported only if your vendor has implemented them in the intuitive fashion that calling the regular C library routines gets the shadow versions if you're running under privilege or if there exists the &lt;a href=&quot;http://man.he.net/man3/shadow&quot;&gt;shadow(3)&lt;/a&gt; functions as found in System V (this includes Solaris and Linux). Those systems that implement a proprietary shadow password facility are unlikely to be supported.</source>
          <target state="translated">ファイル。また、Perl内から、&lt;a href=&quot;config&quot;&gt; &lt;code&gt;Config&lt;/code&gt; &lt;/a&gt;モジュールと値 &lt;code&gt;d_pwquota&lt;/code&gt; 、 &lt;code&gt;d_pwage&lt;/code&gt; 、 &lt;code&gt;d_pwchange&lt;/code&gt; 、 &lt;code&gt;d_pwcomment&lt;/code&gt; 、および &lt;code&gt;d_pwexpire&lt;/code&gt; を使用して、$ quotaフィールドと$ commentフィールドの意味、および$ expireフィールドがあるかどうかを確認できます。シャドウパスワードファイルは、ベンダーが直感的な方法で実装している場合にのみサポートされます。通常のCライブラリルーチンを呼び出すと、特権で実行している場合、またはSystem Vにある&lt;a href=&quot;http://man.he.net/man3/shadow&quot;&gt;shadow（3）&lt;/a&gt;関数が存在する場合にシャドウバージョンが取得されます（これにはSolarisとLinuxが含まれます）。独自のシャドウパスワード機能を実装するシステムは、サポートされない可能性があります。</target>
        </trans-unit>
        <trans-unit id="da259327dd620284dcda81a2eaf00443799ed17a" translate="yes" xml:space="preserve">
          <source>file. You can also find out from within Perl what your $quota and $comment fields mean and whether you have the $expire field by using the &lt;code&gt;Config&lt;/code&gt; module and the values &lt;code&gt;d_pwquota&lt;/code&gt; , &lt;code&gt;d_pwage&lt;/code&gt; , &lt;code&gt;d_pwchange&lt;/code&gt; , &lt;code&gt;d_pwcomment&lt;/code&gt; , and &lt;code&gt;d_pwexpire&lt;/code&gt; . Shadow password files are supported only if your vendor has implemented them in the intuitive fashion that calling the regular C library routines gets the shadow versions if you're running under privilege or if there exists the shadow(3) functions as found in System V (this includes Solaris and Linux). Those systems that implement a proprietary shadow password facility are unlikely to be supported.</source>
          <target state="translated">ファイル。また、Perl内で、 &lt;code&gt;Config&lt;/code&gt; モジュールと値 &lt;code&gt;d_pwquota&lt;/code&gt; 、 &lt;code&gt;d_pwage&lt;/code&gt; 、 &lt;code&gt;d_pwchange&lt;/code&gt; 、 &lt;code&gt;d_pwcomment&lt;/code&gt; 、および &lt;code&gt;d_pwexpire&lt;/code&gt; を使用して、$ quotaおよび$ commentフィールドの意味と$ expireフィールドがあるかどうかを確認できます。シャドウパスワードファイルは、ベンダーが直感的な方法でそれらを実装した場合にのみサポートされます。特権で実行している場合、またはSystem V（これにはSolarisとLinuxが含まれます）。独自のシャドウパスワード機能を実装するシステムはサポートされない可能性があります。</target>
        </trans-unit>
        <trans-unit id="d0998110d4f271571ea799f05b153504a56056c0" translate="yes" xml:space="preserve">
          <source>file:</source>
          <target state="translated">file:</target>
        </trans-unit>
        <trans-unit id="53232dbc09d44f3582b94ad4caad89d19e524151" translate="yes" xml:space="preserve">
          <source>fileConstant</source>
          <target state="translated">fileConstant</target>
        </trans-unit>
        <trans-unit id="670234a105dd30edfd4f00020888597bb70ce1dd" translate="yes" xml:space="preserve">
          <source>fileLastError</source>
          <target state="translated">fileLastError</target>
        </trans-unit>
        <trans-unit id="724d1857b8c34cf277c84135657c0c2c1ca55411" translate="yes" xml:space="preserve">
          <source>file_name_is_absolute</source>
          <target state="translated">file_name_is_absolute</target>
        </trans-unit>
        <trans-unit id="cfe543b8446e9aebec447319745a12c83b9838f3" translate="yes" xml:space="preserve">
          <source>file_name_is_absolute (override)</source>
          <target state="translated">ファイル名は絶対です (オーバーライド)</target>
        </trans-unit>
        <trans-unit id="1f4282f440e5684b0a38a5517a752a45e76f5896" translate="yes" xml:space="preserve">
          <source>filecheck</source>
          <target state="translated">filecheck</target>
        </trans-unit>
        <trans-unit id="0c874fb3b3bb0eb9c1c49c03d2050a204833025e" translate="yes" xml:space="preserve">
          <source>fileglob</source>
          <target state="translated">fileglob</target>
        </trans-unit>
        <trans-unit id="aefd2831e4e83b16bc4333dc8be0ea73f8d8ff26" translate="yes" xml:space="preserve">
          <source>filehandle</source>
          <target state="translated">filehandle</target>
        </trans-unit>
        <trans-unit id="33e5f0afea04af60bb5053a2cc11cf706d3aee94" translate="yes" xml:space="preserve">
          <source>fileify</source>
          <target state="translated">fileify</target>
        </trans-unit>
        <trans-unit id="08deae8d9ea9bc0b84f94475d868351830e9f7e7" translate="yes" xml:space="preserve">
          <source>filename</source>
          <target state="translated">filename</target>
        </trans-unit>
        <trans-unit id="51273cbb602a095b8e0888a1f86827452b61e159" translate="yes" xml:space="preserve">
          <source>filename that is derived from the</source>
          <target state="translated">から派生したファイル名</target>
        </trans-unit>
        <trans-unit id="ae4942504e869def63d23e508fe943cad04905dd" translate="yes" xml:space="preserve">
          <source>filename()</source>
          <target state="translated">filename()</target>
        </trans-unit>
        <trans-unit id="55a8dc68a6dafc9861f00470b88b3a8f33b67345" translate="yes" xml:space="preserve">
          <source>filename, that &lt;code&gt;File::Glob&lt;/code&gt; has matched, and a</source>
          <target state="translated">ファイル名、 &lt;code&gt;File::Glob&lt;/code&gt; が一致した、および</target>
        </trans-unit>
        <trans-unit id="ea5bc7a0173b11c7fa46976b8099a074020eb6b0" translate="yes" xml:space="preserve">
          <source>filename.</source>
          <target state="translated">filename.</target>
        </trans-unit>
        <trans-unit id="1f9efe00b56c88909beb04108ce4adadf0af50d0" translate="yes" xml:space="preserve">
          <source>filenames</source>
          <target state="translated">filenames</target>
        </trans-unit>
        <trans-unit id="1a7b0b22acafe05a499f5f0af1a73bf579a1aba1" translate="yes" xml:space="preserve">
          <source>fileno</source>
          <target state="translated">fileno</target>
        </trans-unit>
        <trans-unit id="70d434115812db2437ad986134a0566e8930c1a6" translate="yes" xml:space="preserve">
          <source>fileno DIRHANDLE</source>
          <target state="translated">ファイル名DIRHANDLE</target>
        </trans-unit>
        <trans-unit id="be9a8f1639eff90098e11a14f2d919c94561e6dd" translate="yes" xml:space="preserve">
          <source>fileno FILEHANDLE</source>
          <target state="translated">ファイル名 ファイルハンドル</target>
        </trans-unit>
        <trans-unit id="a1f13b3bc20a296e08c212be9c56c706c10abc4f" translate="yes" xml:space="preserve">
          <source>files</source>
          <target state="translated">files</target>
        </trans-unit>
        <trans-unit id="b388be505bde2f55d264cc9657c6f4c70e20d1c8" translate="yes" xml:space="preserve">
          <source>files and a low-level in-memory compression/decompression interface.</source>
          <target state="translated">ファイルと低レベルのインメモリ圧縮/解凍インターフェイスを提供します。</target>
        </trans-unit>
        <trans-unit id="27a1b5b9f493074b038677e6c9a5e9cde6916a23" translate="yes" xml:space="preserve">
          <source>files and put them on PATH. You need to put</source>
          <target state="translated">ファイルを作成し、PATHに配置します。に置く必要があります。</target>
        </trans-unit>
        <trans-unit id="2caa24ca9d5f188d5c50fb5a5fb2e547d6ba0f1f" translate="yes" xml:space="preserve">
          <source>files are VMS filesystem directory files, and using them for other purposes could cause unacceptable problems.</source>
          <target state="translated">ファイルは VMS ファイルシステムのディレクトリファイルであり、他の目的で使用すると許容できない問題が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="7f32ce99437cdeeab64fc22c34ed0b83e49a9f95" translate="yes" xml:space="preserve">
          <source>files are written in the &lt;a href=&quot;http://www.yaml.org/&quot;&gt;YAML&lt;/a&gt; format. The reasons we chose YAML instead of, say, XML or Data::Dumper are discussed in &lt;a href=&quot;http://www.nntp.perl.org/group/perl.makemaker/2002/04/msg406.html&quot;&gt;this thread&lt;/a&gt; on the MakeMaker mailing list.</source>
          <target state="translated">ファイルは&lt;a href=&quot;http://www.yaml.org/&quot;&gt;YAML&lt;/a&gt;形式で書き込まれます。XMLやData :: Dumperの代わりにYAMLを選択した理由は、MakeMakerメーリングリストの&lt;a href=&quot;http://www.nntp.perl.org/group/perl.makemaker/2002/04/msg406.html&quot;&gt;このスレッド&lt;/a&gt;で説明されています。</target>
        </trans-unit>
        <trans-unit id="34806de9f7f629861522d58f71718bbd5811aa25" translate="yes" xml:space="preserve">
          <source>files are written in the YAML format (see &lt;a href=&quot;http://www.yaml.org/&quot;&gt;http://www.yaml.org/&lt;/a&gt;).</source>
          <target state="translated">ファイルはYAML形式で書き込まれます（&lt;a href=&quot;http://www.yaml.org/&quot;&gt;http://www.yaml.org/を参照&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="427695b22f97a52c67dd6d5c62041213ee8fc709" translate="yes" xml:space="preserve">
          <source>files compiled in &lt;code&gt;omf&lt;/code&gt; format to fork(). fork() is needed for exactly three Perl operations:</source>
          <target state="translated">&lt;code&gt;omf&lt;/code&gt; 形式でfork（）にコンパイルされたファイル。fork（）は、正確に3つのPerl操作に必要です。</target>
        </trans-unit>
        <trans-unit id="ab1208e647bd794b2398cd2d95d4a0bd308f646a" translate="yes" xml:space="preserve">
          <source>files contain the source code annotated with relative frequencies of execution indicated by &quot;#&quot; markers. If you want to generate</source>
          <target state="translated">ファイルには、&quot;#&quot;マーカーで示された相対的な実行頻度で注釈が付けられたソースコードが含まれています。ファイルを生成したい場合は</target>
        </trans-unit>
        <trans-unit id="aab2c29cb87b0d1a611af3e38b1fb3b0e11a20ef" translate="yes" xml:space="preserve">
          <source>files for all profiled object files, you can run something like this:</source>
          <target state="translated">ファイルをすべてのプロファイル化されたオブジェクトファイルに対して実行するには、次のようなものを実行します。</target>
        </trans-unit>
        <trans-unit id="b51d0f35744397d9e3139842633e1cf2c2a46e8b" translate="yes" xml:space="preserve">
          <source>files for the specified modules</source>
          <target state="translated">ファイルを指定します。</target>
        </trans-unit>
        <trans-unit id="4d27a85120b4255575d5d5d33a5886c7a113136a" translate="yes" xml:space="preserve">
          <source>files for you and add them to your</source>
          <target state="translated">ファイルを作成して</target>
        </trans-unit>
        <trans-unit id="fe227167d2b6945a485d88bf97098420b2bb6699" translate="yes" xml:space="preserve">
          <source>files found under</source>
          <target state="translated">以下にあるファイル</target>
        </trans-unit>
        <trans-unit id="b5b1464f45a8b746e864f272ae5c41596a09a85c" translate="yes" xml:space="preserve">
          <source>files found&quot;, regardless of whether we mean &quot;I looked for files, and found</source>
          <target state="translated">ファイルが見つかりました」という意味であるかどうかにかかわらず、「ファイルを探して見つけました</target>
        </trans-unit>
        <trans-unit id="5103f1620a7b88ac01bd5a83fa6c50439dc3383b" translate="yes" xml:space="preserve">
          <source>files from future versions of Storable</source>
          <target state="translated">ファイルを将来のバージョンの Storable</target>
        </trans-unit>
        <trans-unit id="442025591594a5b9810bad1a5093153abcfa03df" translate="yes" xml:space="preserve">
          <source>files in</source>
          <target state="translated">ファイルに入れる</target>
        </trans-unit>
        <trans-unit id="a1dbde2649763a85441afb031f56e09ffa26901c" translate="yes" xml:space="preserve">
          <source>files in CPAN distributions, and as defined by &lt;a href=&quot;CPAN::Meta::Spec&quot;&gt;CPAN::Meta::Spec&lt;/a&gt;; It can be built up by adding more and more constraints, and it will reduce them to the simplest representation.</source>
          <target state="translated">CPANディストリビューションのファイルで、&lt;a href=&quot;CPAN::Meta::Spec&quot;&gt;CPAN :: Meta :: Specで&lt;/a&gt;定義されています。制約を追加することで構築でき、最も単純な表現になります。</target>
        </trans-unit>
        <trans-unit id="07decdee58d0c1d33749e56763aa93769454d137" translate="yes" xml:space="preserve">
          <source>files in the</source>
          <target state="translated">のファイルを</target>
        </trans-unit>
        <trans-unit id="1d7cbfe8400663a15614d957b460b0feecf69eb8" translate="yes" xml:space="preserve">
          <source>files is also shared by all the processes which use the particular</source>
          <target state="translated">ファイルを使用するすべてのプロセスで共有されます。</target>
        </trans-unit>
        <trans-unit id="4d4aa688e5d49d2a9c1b0f3a8155c37e54f0b092" translate="yes" xml:space="preserve">
          <source>files made by &lt;b&gt;h2ph&lt;/b&gt; will probably end up as extension modules made by &lt;b&gt;h2xs&lt;/b&gt;. (Some</source>
          <target state="translated">&lt;b&gt;h2phで&lt;/b&gt;作成されたファイルは、おそらく&lt;b&gt;h2xsで&lt;/b&gt;作成された拡張モジュールになります。（いくつか</target>
        </trans-unit>
        <trans-unit id="be04f36c662d67b51c9bd4e68c46a21db4d46de5" translate="yes" xml:space="preserve">
          <source>files may be found. The filepaths -- relative paths to files (not just directory paths) -- appear in this list in lowest-to-highest priority.</source>
          <target state="translated">ファイルが見つかるかもしれません。ファイルパス --ファイルへの相対パス (ディレクトリパスだけではありません)--このリストには、優先度の低い順に表示されます。</target>
        </trans-unit>
        <trans-unit id="cb028decb4941fe61fcf80bda9cffda3bd62066b" translate="yes" xml:space="preserve">
          <source>files on the command line.</source>
          <target state="translated">ファイルをコマンドラインで実行します。</target>
        </trans-unit>
        <trans-unit id="c33ab37f4ca5c5639d742c86c6cf48dff44045c2" translate="yes" xml:space="preserve">
          <source>files that conform to RFC 1952. This module provides an interface to most of them.</source>
          <target state="translated">ファイルがあります。このモジュールは、それらのほとんどのファイルへのインターフェイスを提供します。</target>
        </trans-unit>
        <trans-unit id="d452d6a65a0281b4e4bcc1bc075531ccf4bd9fd6" translate="yes" xml:space="preserve">
          <source>files that you may find.</source>
          <target state="translated">ファイルを検索してみてください。</target>
        </trans-unit>
        <trans-unit id="439cb8cd85550a2b902e5f2b15d5353f6d69941f" translate="yes" xml:space="preserve">
          <source>files they contain will be installed in the corresponding location in the library. A libscan() method can be used to alter the behaviour. Defining PM in the Makefile.PL will override PMLIBDIRS.</source>
          <target state="translated">ファイルはライブラリ内の対応する場所にインストールされます。libscan()メソッドを使用して動作を変更することができます。Makefile.PLでPMを定義すると、PMLIBDIRSをオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="c379c94eaf792e6f79e709146cc93e698613c1b8" translate="yes" xml:space="preserve">
          <source>files to make sure that during the iterations the number of loaded extensions only increases. Rename</source>
          <target state="translated">ファイルを使用して、繰り返しの間にロードされる拡張子の数が増加するだけであることを確認してください。名前の変更</target>
        </trans-unit>
        <trans-unit id="a5583156d996ed565f09bd461f984bb3ab3a0001" translate="yes" xml:space="preserve">
          <source>files underneath directories such as</source>
          <target state="translated">のようなディレクトリの下にある</target>
        </trans-unit>
        <trans-unit id="30ea2122d0f6f4e9a816a7c5d8e43b1c1b222abb" translate="yes" xml:space="preserve">
          <source>files will all eventually be converted into standard modules, and the</source>
          <target state="translated">ファイルは、最終的にはすべて標準モジュールに変換され</target>
        </trans-unit>
        <trans-unit id="8191de06b54dd6171d7495a16c973be6284c7b80" translate="yes" xml:space="preserve">
          <source>files will not disrupt the operation of your system even if some intermediate steps are not yet fully working.</source>
          <target state="translated">ファイルを使用することで、一部の中間ステップがまだ完全に動作していなくても、システムの動作に支障をきたすことはありません。</target>
        </trans-unit>
        <trans-unit id="4ae885a410cf2dad03a6fbb0657d09a5484b2021" translate="yes" xml:space="preserve">
          <source>files with a</source>
          <target state="translated">ファイルに</target>
        </trans-unit>
        <trans-unit id="778eac4fa00ee4803f97385a166016f947083dc6" translate="yes" xml:space="preserve">
          <source>files&quot;, for &lt;b&gt;any&lt;/b&gt; value of N) is involved, each translator should make clear what dependencies the number causes in the sentence. In many cases, dependency is limited to words adjacent to the number, in places where you might expect them (&quot;I found the-?PLURAL</source>
          <target state="translated">ファイル」が含まれ&lt;b&gt;ている&lt;/b&gt;場合は、Nの値が含まれている場合、各翻訳者は、文で数字が引き起こす依存関係を明確にする必要があります。多くの場合、依存関係は、数字に隣接する単語に限定されます。見つかった</target>
        </trans-unit>
        <trans-unit id="586b74576d26c48f79d1ecb56692824f9cb2c6fb" translate="yes" xml:space="preserve">
          <source>files()</source>
          <target state="translated">files()</target>
        </trans-unit>
        <trans-unit id="6210e4478406aba2d5a00ca356ca28b7228de1b7" translate="yes" xml:space="preserve">
          <source>files, and do like this</source>
          <target state="translated">ファイルを作成して、このようにします。</target>
        </trans-unit>
        <trans-unit id="7931721f040d6d9bf84e24e0036a60557a51d002" translate="yes" xml:space="preserve">
          <source>files, and so on.</source>
          <target state="translated">などのファイルがあります。</target>
        </trans-unit>
        <trans-unit id="e5aad993eb875ef162fd3bc626825725a1b915d6" translate="yes" xml:space="preserve">
          <source>files, and the one for sending syslog messages with was simply</source>
          <target state="translated">ファイルがあり、syslog メッセージを送信するためのものは単に</target>
        </trans-unit>
        <trans-unit id="d019f159114973d544e81a5c5f7fa5263eecf48c" translate="yes" xml:space="preserve">
          <source>files, copyright by Ken Williams and licensed under the same terms as Perl itself.</source>
          <target state="translated">ファイル、著作権は Ken Williams にあり、Perl 自体と同じ条件でライセンスされています。</target>
        </trans-unit>
        <trans-unit id="ca4cb998d083bfa079522938a9773a928a1d1552" translate="yes" xml:space="preserve">
          <source>files, if you are so inclined. For example:</source>
          <target state="translated">ファイルを作成することができます。例えば</target>
        </trans-unit>
        <trans-unit id="9b323c3c616ea597c711a474ebad52d49cd46553" translate="yes" xml:space="preserve">
          <source>files, though there may be some additional ones, too; check the module documentation) to their final destination: This will most likely be in &lt;code&gt;$ENV{MACPERL}site_lib:&lt;/code&gt; (i.e., &lt;code&gt;HD:MacPerl folder:site_lib:&lt;/code&gt;). You can add new paths to the default &lt;code&gt;@INC&lt;/code&gt; in the Preferences menu item in the MacPerl application (&lt;code&gt;$ENV{MACPERL}site_lib:&lt;/code&gt; is added automagically). Create whatever directory structures are required (i.e., for &lt;code&gt;Some::Module&lt;/code&gt; , create &lt;code&gt;$ENV{MACPERL}site_lib:Some:&lt;/code&gt; and put &lt;code&gt;Module.pm&lt;/code&gt; in that directory).</source>
          <target state="translated">ファイルもありますが、追加のファイルもあります。モジュールのドキュメントを確認して）、最終的な宛先に移動します。これは、おそらく &lt;code&gt;$ENV{MACPERL}site_lib:&lt;/code&gt; （つまり、 &lt;code&gt;HD:MacPerl folder:site_lib:&lt;/code&gt; )。MacPerlアプリケーションの[設定]メニュー項目でデフォルトの &lt;code&gt;@INC&lt;/code&gt; に新しいパスを追加できます（ &lt;code&gt;$ENV{MACPERL}site_lib:&lt;/code&gt; が自動的に追加されます）。必要なディレクトリ構造を作成します（つまり、 &lt;code&gt;Some::Module&lt;/code&gt; 場合は、 &lt;code&gt;$ENV{MACPERL}site_lib:Some:&lt;/code&gt; を &lt;code&gt;Module.pm&lt;/code&gt; 、そのディレクトリにModule.pmを配置します）。</target>
        </trans-unit>
        <trans-unit id="11de103a15b62be4509946ac766ef8a9e3f32603" translate="yes" xml:space="preserve">
          <source>files, using &lt;a href=&quot;../../json/pp&quot;&gt;JSON::PP&lt;/a&gt; and/or &lt;a href=&quot;../../cpan/meta/yaml&quot;&gt;CPAN::Meta::YAML&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../json/pp&quot;&gt;JSON :: PP&lt;/a&gt;または&lt;a href=&quot;../../cpan/meta/yaml&quot;&gt;CPAN :: Meta :: YAML&lt;/a&gt;を使用したファイル。</target>
        </trans-unit>
        <trans-unit id="27b724e831e85ea1225ef5df8fec69979e395742" translate="yes" xml:space="preserve">
          <source>files, using &lt;a href=&quot;JSON::PP&quot;&gt;JSON::PP&lt;/a&gt; and/or &lt;a href=&quot;CPAN::Meta::YAML&quot;&gt;CPAN::Meta::YAML&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;JSON::PP&quot;&gt;JSON :: PP&lt;/a&gt;および/または&lt;a href=&quot;CPAN::Meta::YAML&quot;&gt;CPAN :: Meta :: YAML&lt;/a&gt;を使用するファイル。</target>
        </trans-unit>
        <trans-unit id="f49f73299c0603d7951745149cd98cdbc91f8655" translate="yes" xml:space="preserve">
          <source>files, usually.) You might be able to find existing binaries on the CPAN or elsewhere, or you might want to try getting compilers and building it yourself, and then release the binary for other poor souls to use.</source>
          <target state="translated">ファイルを使用することができます)。CPAN や他の場所で既存のバイナリを見つけることができるかもしれませんし、コンパイラを入手して自分でビルドしてみて、他のかわいそうな人たちが使えるようにバイナリをリリースしてみるのもいいかもしれません。</target>
        </trans-unit>
        <trans-unit id="15ea80d8d6144f86dbf55541bd4ce65b0ca34df1" translate="yes" xml:space="preserve">
          <source>files, which normally denote that the distribution must be compiled, and you cannot install it &quot;out of the box.&quot; (See &lt;a href=&quot;#PORTABILITY&quot;&gt;PORTABILITY&lt;/a&gt;.)</source>
          <target state="translated">通常、ディストリビューションをコンパイルする必要があることを示すファイルであり、「そのまま」インストールすることはできません。（&lt;a href=&quot;#PORTABILITY&quot;&gt;移植性を&lt;/a&gt;参照してください。）</target>
        </trans-unit>
        <trans-unit id="71519aea90da85c4823b5f442c8903cd72256cd1" translate="yes" xml:space="preserve">
          <source>files.</source>
          <target state="translated">files.</target>
        </trans-unit>
        <trans-unit id="187797d91d4dbfa3f92521e6bc2ae8351f456bf2" translate="yes" xml:space="preserve">
          <source>files. May not be specified with &lt;code&gt;files&lt;/code&gt;.</source>
          <target state="translated">ファイル。 &lt;code&gt;files&lt;/code&gt; では指定できません。</target>
        </trans-unit>
        <trans-unit id="ee709d77ae70ae8944146df84fff44dbead1854c" translate="yes" xml:space="preserve">
          <source>files. Module names are also capitalized unless they're functioning as pragmas; pragmas are in effect compiler directives, and are sometimes called &quot;pragmatic modules&quot; (or even &quot;pragmata&quot; if you're a classicist).</source>
          <target state="translated">ファイルの中のモジュール名は大文字で表記されます。モジュール名は、プラグマとして機能している場合を除き、大文字で表記されます。プラグマは、実質的にはコンパイラのディレクティブであり、&quot;pragmatic modules &quot;と呼ばれることもあります (古典主義者であれば &quot;pragmata &quot;とも呼ばれます)。</target>
        </trans-unit>
        <trans-unit id="bf196c0008a3d3d0e6303e2658913b96b2538c1e" translate="yes" xml:space="preserve">
          <source>files. Sure enough, &lt;code&gt;pp_pack&lt;/code&gt; is in</source>
          <target state="translated">ファイル。案の定、 &lt;code&gt;pp_pack&lt;/code&gt; は</target>
        </trans-unit>
        <trans-unit id="fd375ff2dbfaaa79c8fd66d9bfd74eb5b09323a2" translate="yes" xml:space="preserve">
          <source>files.&quot; This may involve rethinking things that you thought quite clear: should &quot;Edit&quot; on a toolbar be a noun (&quot;editing&quot;) or a verb (&quot;to edit&quot;)? Is there already a conventionalized way to express that menu option, separate from the target language's normal word for &quot;to edit&quot;?</source>
          <target state="translated">ファイルを編集します。ツールバーの「編集」は名詞(「編集」)なのか動詞(「編集する」)なのか?ツールバーの「編集」は名詞 (「編集」)にすべきか、それとも動詞 (「編集する」)にすべきか?</target>
        </trans-unit>
        <trans-unit id="baed7ddf33e423d8322034dacd33429204f936b5" translate="yes" xml:space="preserve">
          <source>files; the function which implements the op with type &lt;code&gt;gvsv&lt;/code&gt; is &lt;code&gt;pp_gvsv&lt;/code&gt; , and so on. As the tree above shows, different ops have different numbers of children: &lt;code&gt;add&lt;/code&gt; is a binary operator, as one would expect, and so has two children. To accommodate the various different numbers of children, there are various types of op data structure, and they link together in different ways.</source>
          <target state="translated">ファイル; タイプ &lt;code&gt;gvsv&lt;/code&gt; のopを実装する関数は &lt;code&gt;pp_gvsv&lt;/code&gt; などです。ショー以上のツリーとして、異なるOPSは子供の数が異なる： &lt;code&gt;add&lt;/code&gt; が予想されるように、バイナリ演算子であり、そしてその2人の子供がいます。さまざまな数の子に対応するために、さまざまなタイプのopデータ構造があり、それらはさまざまな方法で互いにリンクしています。</target>
        </trans-unit>
        <trans-unit id="af05952b6e66c514e316cff6aa0146a4dd123998" translate="yes" xml:space="preserve">
          <source>files; the function which implements the op with type &lt;code&gt;gvsv&lt;/code&gt; is &lt;code&gt;pp_gvsv&lt;/code&gt;, and so on. As the tree above shows, different ops have different numbers of children: &lt;code&gt;add&lt;/code&gt; is a binary operator, as one would expect, and so has two children. To accommodate the various different numbers of children, there are various types of op data structure, and they link together in different ways.</source>
          <target state="translated">ファイル; タイプ &lt;code&gt;gvsv&lt;/code&gt; のopを実装する関数は &lt;code&gt;pp_gvsv&lt;/code&gt; などです。ショー以上のツリーとして、異なるOPSは子供の数が異なる： &lt;code&gt;add&lt;/code&gt; が予想されるように、バイナリ演算子であり、そしてその2人の子供がいます。さまざまな数の子に対応するために、さまざまなタイプのopデータ構造があり、それらはさまざまな方法で相互にリンクしています。</target>
        </trans-unit>
        <trans-unit id="cc90e0e45db6324d1e1d6e76da3721c953780866" translate="yes" xml:space="preserve">
          <source>filespec</source>
          <target state="translated">filespec</target>
        </trans-unit>
        <trans-unit id="46b7ac31e2a735c3833bdea76a6381e9545beba7" translate="yes" xml:space="preserve">
          <source>filesystem</source>
          <target state="translated">filesystem</target>
        </trans-unit>
        <trans-unit id="217e7548154a9cebfbe4f04eee4650daa88fb3a4" translate="yes" xml:space="preserve">
          <source>filetest</source>
          <target state="translated">filetest</target>
        </trans-unit>
        <trans-unit id="fab12da300b491251db4d4cab837c426325b988e" translate="yes" xml:space="preserve">
          <source>filetest - Perl pragma to control the filetest permission operators</source>
          <target state="translated">filetest-filetest のパーミッション演算子を制御するための Perl プラグマ</target>
        </trans-unit>
        <trans-unit id="ccbae584219595a46a247d1525b499c337a597d0" translate="yes" xml:space="preserve">
          <source>fill_protos</source>
          <target state="translated">fill_protos</target>
        </trans-unit>
        <trans-unit id="4bb4ca75941b7bbc5bc6a12be44b22fc9c8d234e" translate="yes" xml:space="preserve">
          <source>filter</source>
          <target state="translated">filter</target>
        </trans-unit>
        <trans-unit id="56b85c3b5c143bea74b83753a3f219086df0b801" translate="yes" xml:space="preserve">
          <source>filter() and anonymous sub</source>
          <target state="translated">filter()と匿名サブ</target>
        </trans-unit>
        <trans-unit id="c5e33ff80461fc78c1f3af290398728e01f1bfa0" translate="yes" xml:space="preserve">
          <source>filter_add</source>
          <target state="translated">filter_add</target>
        </trans-unit>
        <trans-unit id="c4365f7462f400aceaaf23ac1149c32b80278486" translate="yes" xml:space="preserve">
          <source>filter_add()</source>
          <target state="translated">filter_add()</target>
        </trans-unit>
        <trans-unit id="db8421293f12ff06f3746f9737095e04e24e04f2" translate="yes" xml:space="preserve">
          <source>filter_del</source>
          <target state="translated">filter_del</target>
        </trans-unit>
        <trans-unit id="a4ccd851b28c7f6948e48257225060850e8eb8f6" translate="yes" xml:space="preserve">
          <source>filter_json_object</source>
          <target state="translated">filter_json_object</target>
        </trans-unit>
        <trans-unit id="eaee74a00baf952fd9db590c45681e3ce96f3913" translate="yes" xml:space="preserve">
          <source>filter_json_single_key_object</source>
          <target state="translated">filter_json_single_key_object</target>
        </trans-unit>
        <trans-unit id="63f0c3201f8cdb62be01c3fa624669d9f1d6fda9" translate="yes" xml:space="preserve">
          <source>filter_read</source>
          <target state="translated">filter_read</target>
        </trans-unit>
        <trans-unit id="c983faa27b7d2e36a3274dba2c4500ed7a74c44a" translate="yes" xml:space="preserve">
          <source>finalize</source>
          <target state="translated">finalize</target>
        </trans-unit>
        <trans-unit id="cc1999f215af6a844e148516f9d4b16c7df3af1a" translate="yes" xml:space="preserve">
          <source>finalize_optree</source>
          <target state="translated">finalize_optree</target>
        </trans-unit>
        <trans-unit id="ded8dae5786fb0e9e6ffb657401fd861ba2efe11" translate="yes" xml:space="preserve">
          <source>find</source>
          <target state="translated">find</target>
        </trans-unit>
        <trans-unit id="97e8759313ab4d822858267c34495da81e75e038" translate="yes" xml:space="preserve">
          <source>find a matching line for the given regular expression.</source>
          <target state="translated">与えられた正規表現にマッチする行を見つけます。</target>
        </trans-unit>
        <trans-unit id="58430a5048a5da82822d14d65c74a4bc9ab49671" translate="yes" xml:space="preserve">
          <source>find the old DLLs looking through the old @INC;</source>
          <target state="translated">古い@INCを探して古いDLLを見つけてください。</target>
        </trans-unit>
        <trans-unit id="30215ed24872dbfe789844565956d3a54409bd68" translate="yes" xml:space="preserve">
          <source>find, find2perl.</source>
          <target state="translated">find、find2perl。</target>
        </trans-unit>
        <trans-unit id="7330e2ce4287860f407440b30b1f8fdc8cab5e7e" translate="yes" xml:space="preserve">
          <source>find.exe</source>
          <target state="translated">find.exe</target>
        </trans-unit>
        <trans-unit id="8b7e756fb05cc367d17d2ce9fe6108dc479cc209" translate="yes" xml:space="preserve">
          <source>find_encoding</source>
          <target state="translated">find_encoding</target>
        </trans-unit>
        <trans-unit id="a9fe0a2c88276961fa561ee7cd4f8bc63fc98657" translate="yes" xml:space="preserve">
          <source>find_first_differing_byte_pos</source>
          <target state="translated">find_first_differing_byte_pos</target>
        </trans-unit>
        <trans-unit id="56f1f85e15ff7192fe13b662e91ef15ac2b5d94a" translate="yes" xml:space="preserve">
          <source>find_lexical_cv</source>
          <target state="translated">find_lexical_cv</target>
        </trans-unit>
        <trans-unit id="84866fe63be6ef6ac1e0986bca4cea3c6c62eb09" translate="yes" xml:space="preserve">
          <source>find_mime_encoding</source>
          <target state="translated">find_mime_encoding</target>
        </trans-unit>
        <trans-unit id="7b3dc2300c51d9bf96d0e1b6a3a42da8f9c0139f" translate="yes" xml:space="preserve">
          <source>find_module_by_name($module, \@dirs)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaf928ba7090b5016ce724553667cba1f1f5d764" translate="yes" xml:space="preserve">
          <source>find_module_dir_by_name($module, \@dirs)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fcecb826a0d5e116a001776f58fa4cb38e06f31" translate="yes" xml:space="preserve">
          <source>find_perl</source>
          <target state="translated">find_perl</target>
        </trans-unit>
        <trans-unit id="fe44863111b7505b461b35c721ee9f4c5d750d2a" translate="yes" xml:space="preserve">
          <source>find_perl (override)</source>
          <target state="translated">ファインドペール</target>
        </trans-unit>
        <trans-unit id="db40679ff04f07eaa4f91b002d857a8b0f6c191f" translate="yes" xml:space="preserve">
          <source>find_runcv</source>
          <target state="translated">find_runcv</target>
        </trans-unit>
        <trans-unit id="91e09b8d4f834f37ca4994f785d2604c18f891a2" translate="yes" xml:space="preserve">
          <source>find_runcv_where</source>
          <target state="translated">find_runcv_where</target>
        </trans-unit>
        <trans-unit id="1993515bee17c112e509ad5d8a1dbb3e37df4974" translate="yes" xml:space="preserve">
          <source>find_rundefsv</source>
          <target state="translated">find_rundefsv</target>
        </trans-unit>
        <trans-unit id="8c2824c6a8fdac3349a6aa748ccaea89860133d5" translate="yes" xml:space="preserve">
          <source>find_rundefsvoffset</source>
          <target state="translated">find_rundefsvoffset</target>
        </trans-unit>
        <trans-unit id="2534390e47f0df01f6a2baafc3d6ab7fd800423f" translate="yes" xml:space="preserve">
          <source>find_script</source>
          <target state="translated">find_script</target>
        </trans-unit>
        <trans-unit id="58ed6c11d10c8ac4f332733a593de46f4bc9f3cf" translate="yes" xml:space="preserve">
          <source>find_tests</source>
          <target state="translated">find_tests</target>
        </trans-unit>
        <trans-unit id="da99fbd96d7da581324e8d274e918de0ecd55d2a" translate="yes" xml:space="preserve">
          <source>find_tests_recursive</source>
          <target state="translated">find_tests_recursive</target>
        </trans-unit>
        <trans-unit id="baf68ed01bb495c7a4245d11437d5cda901b9531" translate="yes" xml:space="preserve">
          <source>find_tests_recursive_in</source>
          <target state="translated">find_tests_recursive_in</target>
        </trans-unit>
        <trans-unit id="abd347b6669e558e89860b9841554d41b8634c35" translate="yes" xml:space="preserve">
          <source>find_uninit_var</source>
          <target state="translated">find_uninit_var</target>
        </trans-unit>
        <trans-unit id="e8477275bbeb018dd1a7162530dfad7676469ad1" translate="yes" xml:space="preserve">
          <source>finds files below the current directory that are not mentioned in the &lt;code&gt;MANIFEST&lt;/code&gt; file. An optional file &lt;code&gt;MANIFEST.SKIP&lt;/code&gt; will be consulted. Any file matching a regular expression in such a file will not be reported as missing in the &lt;code&gt;MANIFEST&lt;/code&gt; file. The list of any extraneous files found is returned, and by default also reported to STDERR.</source>
          <target state="translated">&lt;code&gt;MANIFEST&lt;/code&gt; ファイルに記載されていない現在のディレクトリの下のファイルを検索します。オプションのファイル &lt;code&gt;MANIFEST.SKIP&lt;/code&gt; が参照されます。そのようなファイル内の正規表現に一致するファイルは、 &lt;code&gt;MANIFEST&lt;/code&gt; ファイルで欠落していると報告されません。見つかった無関係なファイルのリストが返され、デフォルトでSTDERRにも報告されます。</target>
        </trans-unit>
        <trans-unit id="12f0633cd2bf9d027ebe33cf4e97fab090ee8920" translate="yes" xml:space="preserve">
          <source>finds the first perl version where a module has been released by date, and not by version number (as is the default).</source>
          <target state="translated">は、モジュールがリリースされた最初のPerlのバージョンを見つけます。</target>
        </trans-unit>
        <trans-unit id="9864457616a303c89467d6f0d509731e07bc0a73" translate="yes" xml:space="preserve">
          <source>findsym</source>
          <target state="translated">findsym</target>
        </trans-unit>
        <trans-unit id="2cce4a92f41fe3d55a72c27b922c093bdd0a4267" translate="yes" xml:space="preserve">
          <source>finish</source>
          <target state="translated">finish</target>
        </trans-unit>
        <trans-unit id="b545137916e08cd40417b53aa4164def61276c55" translate="yes" xml:space="preserve">
          <source>finish_parser</source>
          <target state="translated">finish_parser</target>
        </trans-unit>
        <trans-unit id="e0996a37c13d44c3b06074939d43fa3759bd32c1" translate="yes" xml:space="preserve">
          <source>first</source>
          <target state="translated">first</target>
        </trans-unit>
        <trans-unit id="3a7c1b4a3665fe95def484ec3f46b82e12b52203" translate="yes" xml:space="preserve">
          <source>first to get the correct constant definitions. Argument processing and value returned work just like &lt;a href=&quot;#ioctl-FILEHANDLE%2CFUNCTION%2CSCALAR&quot;&gt;&lt;code&gt;ioctl&lt;/code&gt;&lt;/a&gt; below. For example:</source>
          <target state="translated">最初に正しい定数定義を取得します。引数の処理と返される値は、以下の&lt;a href=&quot;#ioctl-FILEHANDLE%2CFUNCTION%2CSCALAR&quot;&gt; &lt;code&gt;ioctl&lt;/code&gt; と&lt;/a&gt;同じように機能します。例えば：</target>
        </trans-unit>
        <trans-unit id="a26bcfab0ce905dd147f83e9681dde77db958515" translate="yes" xml:space="preserve">
          <source>first to get the correct constant definitions. Argument processing and value returned work just like &lt;code&gt;&lt;a href=&quot;functions/ioctl&quot;&gt;ioctl&lt;/a&gt;&lt;/code&gt; below. For example:</source>
          <target state="translated">まず、正しい定数定義を取得します。引数の処理と戻り値は、以下の &lt;code&gt;&lt;a href=&quot;functions/ioctl&quot;&gt;ioctl&lt;/a&gt;&lt;/code&gt; と同じように機能します。例えば：</target>
        </trans-unit>
        <trans-unit id="145e897d90ef7ace4afaa9f049de00aa57eba3af" translate="yes" xml:space="preserve">
          <source>first to get the correct constant definitions. Argument processing and value returned work just like &lt;code&gt;&lt;a href=&quot;ioctl&quot;&gt;ioctl&lt;/a&gt;&lt;/code&gt; below. For example:</source>
          <target state="translated">まず、正しい定数定義を取得します。引数の処理と戻り値は、以下の &lt;code&gt;&lt;a href=&quot;ioctl&quot;&gt;ioctl&lt;/a&gt;&lt;/code&gt; と同じように機能します。例えば：</target>
        </trans-unit>
        <trans-unit id="378e052957d84f2c33d48c7a972325ea574958cf" translate="yes" xml:space="preserve">
          <source>first to get the correct constant definitions. If CMD is &lt;code&gt;IPC_STAT&lt;/code&gt; , then ARG must be a variable that will hold the returned &lt;code&gt;msqid_ds&lt;/code&gt; structure. Returns like &lt;code&gt;&lt;a href=&quot;functions/ioctl&quot;&gt;ioctl&lt;/a&gt;&lt;/code&gt;: the undefined value for error, &lt;code&gt;&quot;0 but true&quot;&lt;/code&gt; for zero, or the actual return value otherwise. See also &lt;a href=&quot;perlipc#SysV-IPC&quot;&gt;SysV IPC in perlipc&lt;/a&gt; and the documentation for &lt;code&gt;IPC::SysV&lt;/code&gt; and &lt;code&gt;IPC::Semaphore&lt;/code&gt; .</source>
          <target state="translated">まず、正しい定数定義を取得します。 CMDが &lt;code&gt;IPC_STAT&lt;/code&gt; の場合、ARGは返された &lt;code&gt;msqid_ds&lt;/code&gt; 構造を保持する変数である必要があります。 &lt;code&gt;&lt;a href=&quot;functions/ioctl&quot;&gt;ioctl&lt;/a&gt;&lt;/code&gt; のような戻り値：エラーの場合は未定義値、ゼロの &lt;code&gt;&quot;0 but true&quot;&lt;/code&gt; は「0 but true」、それ以外の場合は実際の戻り値。&lt;a href=&quot;perlipc#SysV-IPC&quot;&gt;perlipcのSysV IPC&lt;/a&gt;および &lt;code&gt;IPC::SysV&lt;/code&gt; と &lt;code&gt;IPC::Semaphore&lt;/code&gt; のドキュメントも参照してください。</target>
        </trans-unit>
        <trans-unit id="a2c7fd6c3071f9b71fd6d8d5fda7890def1ac3b6" translate="yes" xml:space="preserve">
          <source>first to get the correct constant definitions. If CMD is &lt;code&gt;IPC_STAT&lt;/code&gt; , then ARG must be a variable that will hold the returned &lt;code&gt;msqid_ds&lt;/code&gt; structure. Returns like &lt;code&gt;&lt;a href=&quot;ioctl&quot;&gt;ioctl&lt;/a&gt;&lt;/code&gt;: the undefined value for error, &lt;code&gt;&quot;0 but true&quot;&lt;/code&gt; for zero, or the actual return value otherwise. See also &lt;a href=&quot;../perlipc#SysV-IPC&quot;&gt;SysV IPC in perlipc&lt;/a&gt; and the documentation for &lt;code&gt;IPC::SysV&lt;/code&gt; and &lt;code&gt;IPC::Semaphore&lt;/code&gt; .</source>
          <target state="translated">まず、正しい定数定義を取得します。 CMDが &lt;code&gt;IPC_STAT&lt;/code&gt; の場合、ARGは返された &lt;code&gt;msqid_ds&lt;/code&gt; 構造を保持する変数である必要があります。 &lt;code&gt;&lt;a href=&quot;ioctl&quot;&gt;ioctl&lt;/a&gt;&lt;/code&gt; のような戻り値：エラーの場合は未定義値、ゼロの &lt;code&gt;&quot;0 but true&quot;&lt;/code&gt; は「0 but true」、それ以外の場合は実際の戻り値。&lt;a href=&quot;../perlipc#SysV-IPC&quot;&gt;perlipcのSysV IPC&lt;/a&gt;および &lt;code&gt;IPC::SysV&lt;/code&gt; と &lt;code&gt;IPC::Semaphore&lt;/code&gt; のドキュメントも参照してください。</target>
        </trans-unit>
        <trans-unit id="3751e4145c53dd9bc48b6915068ee5bb12ae1b57" translate="yes" xml:space="preserve">
          <source>first to get the correct constant definitions. If CMD is &lt;code&gt;IPC_STAT&lt;/code&gt; , then ARG must be a variable that will hold the returned &lt;code&gt;shmid_ds&lt;/code&gt; structure. Returns like ioctl: &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; for error; &quot;&lt;code&gt;0&lt;/code&gt; but true&quot; for zero; and the actual return value otherwise. See also &lt;a href=&quot;perlipc#SysV-IPC&quot;&gt;SysV IPC in perlipc&lt;/a&gt; and &lt;code&gt;IPC::SysV&lt;/code&gt; documentation.</source>
          <target state="translated">まず、正しい定数定義を取得します。 CMDが &lt;code&gt;IPC_STAT&lt;/code&gt; の場合、ARGは返された &lt;code&gt;shmid_ds&lt;/code&gt; 構造を保持する変数でなければなりません。 ioctlのような戻り値：エラーの場合は &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。ゼロの場合は「 &lt;code&gt;0&lt;/code&gt; がtrue」。それ以外の場合は実際の戻り値。&lt;a href=&quot;perlipc#SysV-IPC&quot;&gt;perlipcのSysV IPC&lt;/a&gt;および &lt;code&gt;IPC::SysV&lt;/code&gt; ドキュメントも参照してください。</target>
        </trans-unit>
        <trans-unit id="9d7fc0b332f37dfbc8f564414c2571e77cf14161" translate="yes" xml:space="preserve">
          <source>first to get the correct constant definitions. If CMD is &lt;code&gt;IPC_STAT&lt;/code&gt; , then ARG must be a variable that will hold the returned &lt;code&gt;shmid_ds&lt;/code&gt; structure. Returns like ioctl: &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; for error; &quot;&lt;code&gt;0&lt;/code&gt; but true&quot; for zero; and the actual return value otherwise. See also &lt;a href=&quot;../perlipc#SysV-IPC&quot;&gt;SysV IPC in perlipc&lt;/a&gt; and &lt;code&gt;IPC::SysV&lt;/code&gt; documentation.</source>
          <target state="translated">まず、正しい定数定義を取得します。 CMDが &lt;code&gt;IPC_STAT&lt;/code&gt; の場合、ARGは返された &lt;code&gt;shmid_ds&lt;/code&gt; 構造を保持する変数でなければなりません。 ioctlのような戻り値：エラーの場合は &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。ゼロの場合は「 &lt;code&gt;0&lt;/code&gt; がtrue」。それ以外の場合は実際の戻り値。&lt;a href=&quot;../perlipc#SysV-IPC&quot;&gt;perlipcのSysV IPC&lt;/a&gt;および &lt;code&gt;IPC::SysV&lt;/code&gt; ドキュメントも参照してください。</target>
        </trans-unit>
        <trans-unit id="a8f0ce7d5a02d8765ccd0fc74108d1f1f3690690" translate="yes" xml:space="preserve">
          <source>first to get the correct constant definitions. If CMD is &lt;code&gt;IPC_STAT&lt;/code&gt;, then ARG must be a variable that will hold the returned &lt;code&gt;msqid_ds&lt;/code&gt; structure. Returns like &lt;a href=&quot;#ioctl-FILEHANDLE%2CFUNCTION%2CSCALAR&quot;&gt;&lt;code&gt;ioctl&lt;/code&gt;&lt;/a&gt;: the undefined value for error, &lt;code&gt;&quot;0 but true&quot;&lt;/code&gt; for zero, or the actual return value otherwise. See also &lt;a href=&quot;perlipc#SysV-IPC&quot;&gt;&quot;SysV IPC&quot; in perlipc&lt;/a&gt; and the documentation for &lt;a href=&quot;IPC::SysV&quot;&gt;&lt;code&gt;IPC::SysV&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;IPC::Semaphore&quot;&gt;&lt;code&gt;IPC::Semaphore&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">最初に正しい定数定義を取得します。CMDが &lt;code&gt;IPC_STAT&lt;/code&gt; の場合、ARGは返された &lt;code&gt;msqid_ds&lt;/code&gt; 構造を保持する変数である必要があります。&lt;a href=&quot;#ioctl-FILEHANDLE%2CFUNCTION%2CSCALAR&quot;&gt; &lt;code&gt;ioctl&lt;/code&gt; の&lt;/a&gt;ように戻ります：エラーの場合は未定義の値、ゼロの &lt;code&gt;&quot;0 but true&quot;&lt;/code&gt; は「0 but true」、それ以外の場合は実際の戻り値。&lt;a href=&quot;perlipc#SysV-IPC&quot;&gt;perlipcの「SysVIPC」&lt;/a&gt;および&lt;a href=&quot;IPC::SysV&quot;&gt; &lt;code&gt;IPC::SysV&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;IPC::Semaphore&quot;&gt; &lt;code&gt;IPC::Semaphore&lt;/code&gt; &lt;/a&gt;ドキュメントも参照してください。</target>
        </trans-unit>
        <trans-unit id="a5d2dd09ac4ab217f2cb10159b9e32aab5546a16" translate="yes" xml:space="preserve">
          <source>first to get the correct constant definitions. If CMD is &lt;code&gt;IPC_STAT&lt;/code&gt;, then ARG must be a variable that will hold the returned &lt;code&gt;shmid_ds&lt;/code&gt; structure. Returns like ioctl: &lt;a href=&quot;#undef-EXPR&quot;&gt;&lt;code&gt;undef&lt;/code&gt;&lt;/a&gt; for error; &quot;&lt;code&gt;0&lt;/code&gt; but true&quot; for zero; and the actual return value otherwise. See also &lt;a href=&quot;perlipc#SysV-IPC&quot;&gt;&quot;SysV IPC&quot; in perlipc&lt;/a&gt; and the documentation for &lt;a href=&quot;IPC::SysV&quot;&gt;&lt;code&gt;IPC::SysV&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">最初に正しい定数定義を取得します。 CMDが &lt;code&gt;IPC_STAT&lt;/code&gt; の場合、ARGは返された &lt;code&gt;shmid_ds&lt;/code&gt; 構造を保持する変数である必要があります。 ioctlのように返されます：エラーの場合は&lt;a href=&quot;#undef-EXPR&quot;&gt; &lt;code&gt;undef&lt;/code&gt; &lt;/a&gt; ;ゼロの場合は「 &lt;code&gt;0&lt;/code&gt; がtrue」。それ以外の場合は実際の戻り値。&lt;a href=&quot;perlipc#SysV-IPC&quot;&gt;perlipcの「SysVIPC」&lt;/a&gt;および&lt;a href=&quot;IPC::SysV&quot;&gt; &lt;code&gt;IPC::SysV&lt;/code&gt; &lt;/a&gt;ドキュメントも参照してください。</target>
        </trans-unit>
        <trans-unit id="fe163254be66bbe545645fe2c369ad6ef12f14ad" translate="yes" xml:space="preserve">
          <source>first to get the correct constant definitions. If CMD is IPC_STAT or GETALL, then ARG must be a variable that will hold the returned semid_ds structure or semaphore value array. Returns like &lt;a href=&quot;#ioctl-FILEHANDLE%2CFUNCTION%2CSCALAR&quot;&gt;&lt;code&gt;ioctl&lt;/code&gt;&lt;/a&gt;: the undefined value for error, &quot;&lt;code&gt;0 but true&lt;/code&gt;&quot; for zero, or the actual return value otherwise. The ARG must consist of a vector of native short integers, which may be created with &lt;code&gt;pack(&quot;s!&quot;,(0)x$nsem)&lt;/code&gt;. See also &lt;a href=&quot;perlipc#SysV-IPC&quot;&gt;&quot;SysV IPC&quot; in perlipc&lt;/a&gt; and the documentation for &lt;a href=&quot;IPC::SysV&quot;&gt;&lt;code&gt;IPC::SysV&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;IPC::Semaphore&quot;&gt;&lt;code&gt;IPC::Semaphore&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">最初に正しい定数定義を取得します。CMDがIPC_STATまたはGETALLの場合、ARGは、返されたsemid_ds構造体またはセマフォ値の配列を保持する変数である必要があります。&lt;a href=&quot;#ioctl-FILEHANDLE%2CFUNCTION%2CSCALAR&quot;&gt; &lt;code&gt;ioctl&lt;/code&gt; の&lt;/a&gt;ように戻ります：エラーの場合は未定義の値、ゼロの &lt;code&gt;0 but true&lt;/code&gt; は「0 but true」、それ以外の場合は実際の戻り値。ARGは、 &lt;code&gt;pack(&quot;s!&quot;,(0)x$nsem)&lt;/code&gt; で作成できるネイティブの短整数のベクトルで構成されている必要があります。&lt;a href=&quot;perlipc#SysV-IPC&quot;&gt;perlipcの「SysVIPC」&lt;/a&gt;および&lt;a href=&quot;IPC::SysV&quot;&gt; &lt;code&gt;IPC::SysV&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;IPC::Semaphore&quot;&gt; &lt;code&gt;IPC::Semaphore&lt;/code&gt; &lt;/a&gt;ドキュメントも参照してください。</target>
        </trans-unit>
        <trans-unit id="2b00fe4277d047842c347401b25d7fb9ec09fa55" translate="yes" xml:space="preserve">
          <source>first to get the correct constant definitions. If CMD is IPC_STAT or GETALL, then ARG must be a variable that will hold the returned semid_ds structure or semaphore value array. Returns like &lt;code&gt;&lt;a href=&quot;functions/ioctl&quot;&gt;ioctl&lt;/a&gt;&lt;/code&gt;: the undefined value for error, &quot;&lt;code&gt;0 but true&lt;/code&gt;&quot; for zero, or the actual return value otherwise. The ARG must consist of a vector of native short integers, which may be created with &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack(&quot;s!&quot;,(0)x$nsem)&lt;/a&gt;&lt;/code&gt;. See also &lt;a href=&quot;perlipc#SysV-IPC&quot;&gt;SysV IPC in perlipc&lt;/a&gt;, &lt;code&gt;IPC::SysV&lt;/code&gt; , &lt;code&gt;IPC::Semaphore&lt;/code&gt; documentation.</source>
          <target state="translated">まず、正しい定数定義を取得します。 CMDがIPC_STATまたはGETALLの場合、ARGは、返されたsemid_ds構造またはセマフォ値の配列を保持する変数である必要があります。 &lt;code&gt;&lt;a href=&quot;functions/ioctl&quot;&gt;ioctl&lt;/a&gt;&lt;/code&gt; のような戻り値：エラーの場合は未定義の値、ゼロの &lt;code&gt;0 but true&lt;/code&gt; は「0 but true」、それ以外の場合は実際の戻り値。 ARGは &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack(&quot;s!&quot;,(0)x$nsem)&lt;/a&gt;&lt;/code&gt; で作成できるネイティブの短整数のベクトルで構成する必要があります。&lt;a href=&quot;perlipc#SysV-IPC&quot;&gt;perlipcのSysV IPC&lt;/a&gt;、 &lt;code&gt;IPC::SysV&lt;/code&gt; 、 &lt;code&gt;IPC::Semaphore&lt;/code&gt; ドキュメントも参照してください。</target>
        </trans-unit>
        <trans-unit id="5a24b39ae3bde18de4740b7b6dcebb3f0be45ef9" translate="yes" xml:space="preserve">
          <source>first to get the correct constant definitions. If CMD is IPC_STAT or GETALL, then ARG must be a variable that will hold the returned semid_ds structure or semaphore value array. Returns like &lt;code&gt;&lt;a href=&quot;ioctl&quot;&gt;ioctl&lt;/a&gt;&lt;/code&gt;: the undefined value for error, &quot;&lt;code&gt;0 but true&lt;/code&gt;&quot; for zero, or the actual return value otherwise. The ARG must consist of a vector of native short integers, which may be created with &lt;code&gt;&lt;a href=&quot;pack&quot;&gt;pack(&quot;s!&quot;,(0)x$nsem)&lt;/a&gt;&lt;/code&gt;. See also &lt;a href=&quot;../perlipc#SysV-IPC&quot;&gt;SysV IPC in perlipc&lt;/a&gt;, &lt;code&gt;IPC::SysV&lt;/code&gt; , &lt;code&gt;IPC::Semaphore&lt;/code&gt; documentation.</source>
          <target state="translated">まず、正しい定数定義を取得します。 CMDがIPC_STATまたはGETALLの場合、ARGは、返されたsemid_ds構造またはセマフォ値の配列を保持する変数である必要があります。 &lt;code&gt;&lt;a href=&quot;ioctl&quot;&gt;ioctl&lt;/a&gt;&lt;/code&gt; のような戻り値：エラーの場合は未定義の値、ゼロの &lt;code&gt;0 but true&lt;/code&gt; は「0 but true」、それ以外の場合は実際の戻り値。 ARGは &lt;code&gt;&lt;a href=&quot;pack&quot;&gt;pack(&quot;s!&quot;,(0)x$nsem)&lt;/a&gt;&lt;/code&gt; で作成できるネイティブの短整数のベクトルで構成する必要があります。&lt;a href=&quot;../perlipc#SysV-IPC&quot;&gt;perlipcのSysV IPC&lt;/a&gt;、 &lt;code&gt;IPC::SysV&lt;/code&gt; 、 &lt;code&gt;IPC::Semaphore&lt;/code&gt; ドキュメントも参照してください。</target>
        </trans-unit>
        <trans-unit id="6ac4c2d3bc642339b165c369731e64869d3f6903" translate="yes" xml:space="preserve">
          <source>first using the cmd.exe, and then run 'make win.mf vc6.mf' to generate the VC6 makefiles and workspaces. &quot;make vc6&quot; will compile for the VC6, and &quot;make cw&quot; for the CodeWarrior.</source>
          <target state="translated">まず cmd.exe を使って、'make win.mf vc6.mf' を実行して VC6 の makefile とワークスペースを生成します。&quot;make vc6&quot; は VC6 用にコンパイルし、&quot;make cw&quot; は CodeWarrior 用にコンパイルします。</target>
        </trans-unit>
        <trans-unit id="0294eece6c61b211b7b5d50a20c9d4f1febd10a1" translate="yes" xml:space="preserve">
          <source>first-come</source>
          <target state="translated">first-come</target>
        </trans-unit>
        <trans-unit id="49ec08386604f57003e4f65a95447cf166758d0c" translate="yes" xml:space="preserve">
          <source>first.</source>
          <target state="translated">first.</target>
        </trans-unit>
        <trans-unit id="9dabbe992dac9c4fc2bc1656884e62c32c6d1207" translate="yes" xml:space="preserve">
          <source>five arguments (see &lt;a href=&quot;overload&quot;&gt;overload&lt;/a&gt;).</source>
          <target state="translated">5つの引数（&lt;a href=&quot;overload&quot;&gt;オーバーロードを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="99f707ef02f096ed1e08d922e18da99b31d43e4f" translate="yes" xml:space="preserve">
          <source>fix</source>
          <target state="translated">fix</target>
        </trans-unit>
        <trans-unit id="e2d8c5080c58344ae3e092ffa7174b41237859dc" translate="yes" xml:space="preserve">
          <source>fix/add the documentation in places marked as XXX.</source>
          <target state="translated">XXXと表記されている箇所のドキュメントを修正・追加した。</target>
        </trans-unit>
        <trans-unit id="7bc555991dbab41aa198fbd77899d49a277d4d6d" translate="yes" xml:space="preserve">
          <source>fixed</source>
          <target state="translated">fixed</target>
        </trans-unit>
        <trans-unit id="4806b44e6a47c0f714993e3f33db725c32eee733" translate="yes" xml:space="preserve">
          <source>fixed string</source>
          <target state="translated">固定文字列</target>
        </trans-unit>
        <trans-unit id="bac6a302c009b5b56d3ca93f40fb1ee6b51ace08" translate="yes" xml:space="preserve">
          <source>fixedbold</source>
          <target state="translated">fixedbold</target>
        </trans-unit>
        <trans-unit id="2f012d570acb4a0cbfd90bc5ebc416abdb6436f7" translate="yes" xml:space="preserve">
          <source>fixedbolditalic</source>
          <target state="translated">fixedbolditalic</target>
        </trans-unit>
        <trans-unit id="b5bfbbd95a12d954ecfc0719935029e547acba43" translate="yes" xml:space="preserve">
          <source>fixeditalic</source>
          <target state="translated">fixeditalic</target>
        </trans-unit>
        <trans-unit id="f6f622a2df32563727b64f92d7cec3715f9a8f97" translate="yes" xml:space="preserve">
          <source>fixin</source>
          <target state="translated">fixin</target>
        </trans-unit>
        <trans-unit id="035b76ad85facd1af1ac72581855276ff75f9eb1" translate="yes" xml:space="preserve">
          <source>fixpath</source>
          <target state="translated">fixpath</target>
        </trans-unit>
        <trans-unit id="460f6688d656ecc17352ddc5160c4103637b29f0" translate="yes" xml:space="preserve">
          <source>fixpath() checks to see whether the result matches the name of a directory in the current default directory and returns a directory or file specification accordingly. &lt;code&gt;$is_dir&lt;/code&gt; can be set to true to force fixpath() to consider the path to be a directory or false to force it to be a file.</source>
          <target state="translated">fixpath（）は、結果が現在のデフォルトディレクトリ内のディレクトリ名と一致するかどうかを確認し、それに応じてディレクトリまたはファイル指定を返します。 &lt;code&gt;$is_dir&lt;/code&gt; をtrueに設定してfixpath（）にパスをディレクトリと見なすように強制するか、falseに設定してパスをファイルと見なすことができます。</target>
        </trans-unit>
        <trans-unit id="112f3a99b283a4e1788dedd8e0e5d35375c33747" translate="yes" xml:space="preserve">
          <source>flag</source>
          <target state="translated">flag</target>
        </trans-unit>
        <trans-unit id="3d63de9d7c5f050dbc222f66f65c75e9d81c1330" translate="yes" xml:space="preserve">
          <source>flag and/or</source>
          <target state="translated">フラグおよび/または</target>
        </trans-unit>
        <trans-unit id="fcaf0a226eea82aa6f08b74f39f6e7fe0b3c1f36" translate="yes" xml:space="preserve">
          <source>flag is ignored if present.</source>
          <target state="translated">フラグがある場合は無視されます。</target>
        </trans-unit>
        <trans-unit id="a21a4bf4efddd3eb2fbde75f7b9def7cbd65bf63" translate="yes" xml:space="preserve">
          <source>flag that should be used. It is up to the Makefile to use it.</source>
          <target state="translated">フラグを使用します。これを使うかどうかはMakefile次第です。</target>
        </trans-unit>
        <trans-unit id="efc77c87583a7fd617b14c36ecb0631dce20754d" translate="yes" xml:space="preserve">
          <source>flag) set &lt;code&gt;$Storable::drop_utf8&lt;/code&gt; to some &lt;code&gt;TRUE&lt;/code&gt; value. This is a form of data loss, because with &lt;code&gt;$drop_utf8&lt;/code&gt; true, it becomes impossible to tell whether the original data was the Unicode string, or a series of bytes that happen to be valid utf8.</source>
          <target state="translated">フラグ） &lt;code&gt;$Storable::drop_utf8&lt;/code&gt; をいくつかの &lt;code&gt;TRUE&lt;/code&gt; 値に設定します。 &lt;code&gt;$drop_utf8&lt;/code&gt; trueの場合、元のデータがUnicode文字列であるのか、それともたまたま有効なutf8である一連のバイトであるのかを判別できなくなるため、これはデータ損失の一種です。</target>
        </trans-unit>
        <trans-unit id="2e56274054bba73f6d3e20570a2b39606242abc1" translate="yes" xml:space="preserve">
          <source>flag) the file is marked for deletion when the program ends (equivalent to setting UNLINK to 1). The C</source>
          <target state="translated">フラグ)は、プログラムの終了時にファイルが削除されるようにマークされます(UNLINKを1に設定するのと同じです)。C</target>
        </trans-unit>
        <trans-unit id="b00964a74ab5b43dc149f6150f37132b8386710e" translate="yes" xml:space="preserve">
          <source>flag, described under &lt;a href=&quot;../perlre#Repeated-Patterns-Matching-a-Zero-length-Substring&quot;&gt;Repeated Patterns Matching a Zero-length Substring in perlre&lt;/a&gt;.</source>
          <target state="translated">フラグ&lt;a href=&quot;../perlre#Repeated-Patterns-Matching-a-Zero-length-Substring&quot;&gt;。perlreの「長さがゼロの部分文字列と一致する繰り返しパターン」&lt;/a&gt;で説明されています。</target>
        </trans-unit>
        <trans-unit id="b36744fa449583f6b992a2105db1f42274f916d5" translate="yes" xml:space="preserve">
          <source>flag, described under &lt;a href=&quot;perlre#Repeated-Patterns-Matching-a-Zero-length-Substring&quot;&gt;&quot;Repeated Patterns Matching a Zero-length Substring&quot; in perlre&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;perlre#Repeated-Patterns-Matching-a-Zero-length-Substring&quot;&gt;perlreの「長さゼロの部分文字列に一致する繰り返しパターン」&lt;/a&gt;で説明されているフラグ。</target>
        </trans-unit>
        <trans-unit id="dc1eee3b91ad4bd2f95c8c0fe493b133b9aff43e" translate="yes" xml:space="preserve">
          <source>flag, described under &lt;a href=&quot;perlre#Repeated-Patterns-Matching-a-Zero-length-Substring&quot;&gt;Repeated Patterns Matching a Zero-length Substring in perlre&lt;/a&gt;.</source>
          <target state="translated">フラグ&lt;a href=&quot;perlre#Repeated-Patterns-Matching-a-Zero-length-Substring&quot;&gt;。perlreの「長さがゼロの部分文字列と一致する繰り返しパターン」&lt;/a&gt;で説明されています。</target>
        </trans-unit>
        <trans-unit id="c16186badaffeb7e2d350479d5c4fe91fc0be2e1" translate="yes" xml:space="preserve">
          <source>flags</source>
          <target state="translated">flags</target>
        </trans-unit>
        <trans-unit id="d3371355b14d5e825bd9993ef8ee337091187fa2" translate="yes" xml:space="preserve">
          <source>flags =&amp;gt; INT</source>
          <target state="translated">フラグ=&amp;gt; INT</target>
        </trans-unit>
        <trans-unit id="685e80366130387cb75c055248326976d16fdf8d" translate="yes" xml:space="preserve">
          <source>float</source>
          <target state="translated">float</target>
        </trans-unit>
        <trans-unit id="26de20cb1b85911ac6ec9e2e151152c3f4733d9f" translate="yes" xml:space="preserve">
          <source>floating fixed string</source>
          <target state="translated">浮動固定文字列</target>
        </trans-unit>
        <trans-unit id="fb4e7b1b739482ec4bafd2825ea4ec0f76e7e722" translate="yes" xml:space="preserve">
          <source>floating fixed strings</source>
          <target state="translated">浮動固定文字列</target>
        </trans-unit>
        <trans-unit id="008d70830513afadff734ff7f54267809e699f57" translate="yes" xml:space="preserve">
          <source>floating point</source>
          <target state="translated">ふどうしょうすうてん</target>
        </trans-unit>
        <trans-unit id="343bbce1cbdd91393b36ad12a1bc7218d23ffb41" translate="yes" xml:space="preserve">
          <source>floating point type, probably &lt;code&gt;double&lt;/code&gt; , possibly &lt;code&gt;long double&lt;/code&gt;</source>
          <target state="translated">浮動小数点型、おそらく &lt;code&gt;double&lt;/code&gt; 、おそらく &lt;code&gt;long double&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="da57009fb9322041bd848c4744300d4be971f8c5" translate="yes" xml:space="preserve">
          <source>floating point type, probably &lt;code&gt;double&lt;/code&gt;, possibly &lt;code&gt;long double&lt;/code&gt;</source>
          <target state="translated">浮動小数点型、おそらく &lt;code&gt;double&lt;/code&gt; 、おそらく &lt;code&gt;long double&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="44126a768ff9192a9ee983931608df1e5c034e7b" translate="yes" xml:space="preserve">
          <source>flock</source>
          <target state="translated">flock</target>
        </trans-unit>
        <trans-unit id="96a4d2949320fcaf0f3caed1725ec5433d5f2461" translate="yes" xml:space="preserve">
          <source>flock FILEHANDLE,OPERATION</source>
          <target state="translated">flock FILEHANDLE,OPERATION</target>
        </trans-unit>
        <trans-unit id="1fca3fbe91752ccf7e880f1bdd672ae2f703b5eb" translate="yes" xml:space="preserve">
          <source>flock() on closed filehandle %s</source>
          <target state="translated">閉じたファイルハンドル %s で flock()</target>
        </trans-unit>
        <trans-unit id="36043af19c6effa7847c37c0709793ab2007a3e9" translate="yes" xml:space="preserve">
          <source>flock(3)</source>
          <target state="translated">flock(3)</target>
        </trans-unit>
        <trans-unit id="3684c9d3c05e7bee19e2728c6a5b2bbccf0cd9c7" translate="yes" xml:space="preserve">
          <source>floor</source>
          <target state="translated">floor</target>
        </trans-unit>
        <trans-unit id="e4706359fc4117d0efea7adb012984601954e2af" translate="yes" xml:space="preserve">
          <source>flush</source>
          <target state="translated">flush</target>
        </trans-unit>
        <trans-unit id="fc2405cf259aa854f1f2dc9e6da77df5d94eab41" translate="yes" xml:space="preserve">
          <source>flush_cache</source>
          <target state="translated">flush_cache</target>
        </trans-unit>
        <trans-unit id="b0237bb6723a2e27a00f65bde90227efe5b0eb4d" translate="yes" xml:space="preserve">
          <source>flushing output</source>
          <target state="translated">フラッシング出力</target>
        </trans-unit>
        <trans-unit id="875c51b4de473db82e1886f2144c8c7bf937897b" translate="yes" xml:space="preserve">
          <source>fmt</source>
          <target state="translated">fmt</target>
        </trans-unit>
        <trans-unit id="bb0912ea11851ec2fa5e0d1adba64c0cbd18dbd5" translate="yes" xml:space="preserve">
          <source>fold (</source>
          <target state="translated">折る</target>
        </trans-unit>
        <trans-unit id="4c1577364bc766d1fd007c222b4edcc0e46c1bdf" translate="yes" xml:space="preserve">
          <source>foldEQ</source>
          <target state="translated">foldEQ</target>
        </trans-unit>
        <trans-unit id="c10e307d7b1d42a7a799a0b49627ed4031570b97" translate="yes" xml:space="preserve">
          <source>foldEQ_latin1</source>
          <target state="translated">foldEQ_latin1</target>
        </trans-unit>
        <trans-unit id="b7265febfc8b5e08cdadf1dcb630919a9620287e" translate="yes" xml:space="preserve">
          <source>foldEQ_latin1_s2_folded</source>
          <target state="translated">foldEQ_latin1_s2_folded</target>
        </trans-unit>
        <trans-unit id="76eb3e9422d2e1cf66e28013b0d401eb80febdf7" translate="yes" xml:space="preserve">
          <source>foldEQ_locale</source>
          <target state="translated">foldEQ_locale</target>
        </trans-unit>
        <trans-unit id="471bf96f681eeac1a2aeaa8a4afcb32a95029d5e" translate="yes" xml:space="preserve">
          <source>foldEQ_utf8</source>
          <target state="translated">foldEQ_utf8</target>
        </trans-unit>
        <trans-unit id="cef45ac68e0ecf49baa6f3dcf630fddca9708e28" translate="yes" xml:space="preserve">
          <source>foldEQ_utf8_flags</source>
          <target state="translated">foldEQ_utf8_flags</target>
        </trans-unit>
        <trans-unit id="6e8023701f4ed7e73f4dd8c55105314316ae9f67" translate="yes" xml:space="preserve">
          <source>foldcase</source>
          <target state="translated">foldcase</target>
        </trans-unit>
        <trans-unit id="07e409f50b9330ffac652ba4c4f73f76b9b7f935" translate="yes" xml:space="preserve">
          <source>folder for debug builds.</source>
          <target state="translated">フォルダーを使用してデバッグビルドを行います。</target>
        </trans-unit>
        <trans-unit id="8a5391014fcaf19d1b91a6097702ccf27de6f7b5" translate="yes" xml:space="preserve">
          <source>folder if you are doing a release build, else will be copied under</source>
          <target state="translated">フォルダにコピーされます。</target>
        </trans-unit>
        <trans-unit id="d8434826715d3b3aa19ffefdffadb122d01422d6" translate="yes" xml:space="preserve">
          <source>folder.</source>
          <target state="translated">folder.</target>
        </trans-unit>
        <trans-unit id="5c6a2f524b5f96abbe38eb30517335f603e77036" translate="yes" xml:space="preserve">
          <source>folder. Copy this to</source>
          <target state="translated">フォルダにコピーします。にコピーしてください。</target>
        </trans-unit>
        <trans-unit id="0f62951f01fbbdc2f334f6f708a16169257c87f4" translate="yes" xml:space="preserve">
          <source>folder. The Perl interpreter,</source>
          <target state="translated">フォルダーの中にあります。Perl インタプリタ。</target>
        </trans-unit>
        <trans-unit id="f7ac253b1bed9171deb0a7bf46da68b63af1e6cc" translate="yes" xml:space="preserve">
          <source>follow</source>
          <target state="translated">follow</target>
        </trans-unit>
        <trans-unit id="b57181192eaa9baeb7dd3aafb08a3a943a4e074b" translate="yes" xml:space="preserve">
          <source>follow_fast</source>
          <target state="translated">follow_fast</target>
        </trans-unit>
        <trans-unit id="0ce52665bc960421644acaa3a743d683533266aa" translate="yes" xml:space="preserve">
          <source>follow_up subs are called only once, either when done_testing is called, or in an END block.</source>
          <target state="translated">follow_up サブは、done_testing が呼び出されたとき、または END ブロック内で一度だけ呼び出されます。</target>
        </trans-unit>
        <trans-unit id="11067044e563f930adb1bf9f96125eaed55e3431" translate="yes" xml:space="preserve">
          <source>follow_up subs are called only once, ether when done_testing is called, or in an END block.</source>
          <target state="translated">follow_up サブは、done_testing が呼び出されたとき、または END ブロックの中で一度だけ呼び出されます。</target>
        </trans-unit>
        <trans-unit id="951f120ff31d9ffa4990456740576c71f454fd6f" translate="yes" xml:space="preserve">
          <source>followed by</source>
          <target state="translated">続いて</target>
        </trans-unit>
        <trans-unit id="4642576d8432b870f7e95688217d211d2da42556" translate="yes" xml:space="preserve">
          <source>font</source>
          <target state="translated">font</target>
        </trans-unit>
        <trans-unit id="0beec7b5ea3f0fdbc95d0dd47f3c5bc275da8a33" translate="yes" xml:space="preserve">
          <source>foo</source>
          <target state="translated">foo</target>
        </trans-unit>
        <trans-unit id="3c061f52aea718c14c209c91cec7e42536b5c368" translate="yes" xml:space="preserve">
          <source>foo()</source>
          <target state="translated">foo()</target>
        </trans-unit>
        <trans-unit id="8d10f19efa9f682548b227f4537ca1050fe33a49" translate="yes" xml:space="preserve">
          <source>foo.bar.h.baz</source>
          <target state="translated">foo.bar.h.baz</target>
        </trans-unit>
        <trans-unit id="49b0432386a90c0458da3d47b1e69334595bd34b" translate="yes" xml:space="preserve">
          <source>foo.bundle</source>
          <target state="translated">foo.bundle</target>
        </trans-unit>
        <trans-unit id="e55780e6340b6e110e51e79f077052cb086292a3" translate="yes" xml:space="preserve">
          <source>foo.c</source>
          <target state="translated">foo.c</target>
        </trans-unit>
        <trans-unit id="a03e598296581b4cdfea4347092749fd1693bae8" translate="yes" xml:space="preserve">
          <source>foo.cmd</source>
          <target state="translated">foo.cmd</target>
        </trans-unit>
        <trans-unit id="81dc712ebeb6a02772fe26cde104ddcd059404ea" translate="yes" xml:space="preserve">
          <source>foo.exe</source>
          <target state="translated">foo.exe</target>
        </trans-unit>
        <trans-unit id="b309277fe2201344a4f5289f1d5b5d6fe8c5c562" translate="yes" xml:space="preserve">
          <source>foo.o</source>
          <target state="translated">foo.o</target>
        </trans-unit>
        <trans-unit id="c358772eb83ee4237bb92ff1e8490bdd4a511ea8" translate="yes" xml:space="preserve">
          <source>foo.pl</source>
          <target state="translated">foo.pl</target>
        </trans-unit>
        <trans-unit id="a55ff34546a13f83af988e40a760750bd5a64245" translate="yes" xml:space="preserve">
          <source>foo.so</source>
          <target state="translated">foo.so</target>
        </trans-unit>
        <trans-unit id="17cdeaefa5cc6022481c824e15a47a7726f593dd" translate="yes" xml:space="preserve">
          <source>foo/bar</source>
          <target state="translated">foo/bar</target>
        </trans-unit>
        <trans-unit id="a578bd76951afb41ea2c3759cb3bf113d5a9b7af" translate="yes" xml:space="preserve">
          <source>foo/bar/baz.h</source>
          <target state="translated">foo/bar/baz.h</target>
        </trans-unit>
        <trans-unit id="5007e8ffb0ba7e490f79246c68965347b0827cd1" translate="yes" xml:space="preserve">
          <source>foo/bar/h/baz</source>
          <target state="translated">foo/bar/h/baz</target>
        </trans-unit>
        <trans-unit id="a2622f11215921f473ef9793cea9ef67805b92cd" translate="yes" xml:space="preserve">
          <source>foo\bar</source>
          <target state="translated">foo\bar</target>
        </trans-unit>
        <trans-unit id="66acfa0e92345e481c515ab71c2db99c224c6235" translate="yes" xml:space="preserve">
          <source>fop=STRING</source>
          <target state="translated">fop=STRING</target>
        </trans-unit>
        <trans-unit id="43eef9a62abb8b1e1654f8a890aae054abffa82b" translate="yes" xml:space="preserve">
          <source>for</source>
          <target state="translated">for</target>
        </trans-unit>
        <trans-unit id="54776cf5a7624f916fd37968e9454399478c0c14" translate="yes" xml:space="preserve">
          <source>for 64 bit development: SUNWarcx, SUNWbtoox, SUNWdplx, SUNWscpux, SUNWsprox, SUNWtoox, SUNWlmsx, SUNWlmx, SUNWlibCx</source>
          <target state="translated">64ビット開発に対応しています。SUNWarcx、SUNWbtoox、SUNWdplx、SUNWscpux、SUNWsprox、SUNWtoox、SUNWlmsx、SUNWlmx、SUNWlibCx</target>
        </trans-unit>
        <trans-unit id="e47d318c2ed322ced9c09e05dcbe1a3eb4fdf11a" translate="yes" xml:space="preserve">
          <source>for &lt;code&gt;Acrobat&lt;/code&gt; are available on CPAN (may be for slightly older version of perl).</source>
          <target state="translated">以下のため &lt;code&gt;Acrobat&lt;/code&gt; CPAN（perlのの少し古いバージョンのためのものであってもよい）でご利用いただけます。</target>
        </trans-unit>
        <trans-unit id="3da00ab22cb8a6da839927fe6ba13e55e8ad73b1" translate="yes" xml:space="preserve">
          <source>for &lt;code&gt;Comments&lt;/code&gt; :</source>
          <target state="translated">以下のための &lt;code&gt;Comments&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="c8db700fc65a880f879afdcda89f47e148072b89" translate="yes" xml:space="preserve">
          <source>for &lt;code&gt;Tk::Canvas&lt;/code&gt; , FILE defaults to &lt;code&gt;Canvas&lt;/code&gt; ).</source>
          <target state="translated">以下のため &lt;code&gt;Tk::Canvas&lt;/code&gt; にFILEのデフォルト &lt;code&gt;Canvas&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="444c1839276625adc13d4782c4877998e089a7e0" translate="yes" xml:space="preserve">
          <source>for &lt;code&gt;Tk::Canvas&lt;/code&gt;, FILE defaults to &lt;code&gt;Canvas&lt;/code&gt;).</source>
          <target state="translated">以下のため &lt;code&gt;Tk::Canvas&lt;/code&gt; にFILEのデフォルト &lt;code&gt;Canvas&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="47f15245bae49c5fc6f1914b7a024a041e39a03c" translate="yes" xml:space="preserve">
          <source>for FILEHANDLE, or -1 on error. FILEHANDLE may be an expression whose value gives the name of the actual filehandle. If FILEHANDLE is omitted, assumes the file last read.</source>
          <target state="translated">が FILEHANDLE の場合は -1 を指定し、エラーの場合は -1 を指定します。FILEHANDLEには、実際のファイルハンドルの名前を表す式を指定することができます。FILEHANDLEが省略された場合は、最後に読み込まれたファイルを想定します。</target>
        </trans-unit>
        <trans-unit id="baed82a5e5eb7ea58d60737a409cefc98eb35ca4" translate="yes" xml:space="preserve">
          <source>for Perl manpages in &lt;code&gt;f:/perllib/man/man1/&lt;/code&gt; etc.</source>
          <target state="translated">&lt;code&gt;f:/perllib/man/man1/&lt;/code&gt; などのPerlマンページ用</target>
        </trans-unit>
        <trans-unit id="24ce755711aba974cc1f5a344fc92129ef43aa03" translate="yes" xml:space="preserve">
          <source>for a description of what CPAN is and where to get it if the previous link doesn't work for you.</source>
          <target state="translated">前のリンクがうまくいかない場合は、CPANとは何か、どこで手に入れることができるのかについての説明をご覧ください。</target>
        </trans-unit>
        <trans-unit id="7c7dcdb238f538ff8a21a887cb740dc9333c4d96" translate="yes" xml:space="preserve">
          <source>for a scalar piece of data that a class associates with an object. Other terms that have been used for this concept are &quot;object variable&quot;, &quot;(object) property&quot;, &quot;(object) attribute&quot; and more. Especially &quot;attribute&quot; has some currency among Perl programmer, but that clashes with the &lt;code&gt;attributes&lt;/code&gt; pragma. The term &quot;field&quot; also has some currency in this sense and doesn't seem to conflict with other Perl terminology.</source>
          <target state="translated">クラスがオブジェクトに関連付けるスカラーデータ。この概念に使用されている他の用語には、「オブジェクト変数」、「（オブジェクト）プロパティ」、「（オブジェクト）属性」などがあります。特に「属性」は、Perlプログラマーの間でいくらかの流通があり &lt;code&gt;attributes&lt;/code&gt; が、それは属性プラグマと衝突します。「フィールド」という用語もこの意味でいくつかの通貨を使用しており、他のPerlの用語と競合しないようです。</target>
        </trans-unit>
        <trans-unit id="b13d3db94c0a7e8e9629d1d7b85fc06c814ecf0f" translate="yes" xml:space="preserve">
          <source>for abbreviated and full length days of the week and months of the year,</source>
          <target state="translated">曜日と月の省略形と完全な長さの日を表示します。</target>
        </trans-unit>
        <trans-unit id="4538c6d080831fdccc39644f1b2f29d0b042fb49" translate="yes" xml:space="preserve">
          <source>for actual working usage.</source>
          <target state="translated">実際に使用するために。</target>
        </trans-unit>
        <trans-unit id="c903873c7a2ea3a537f2c88bf1bdea9d5746de1c" translate="yes" xml:space="preserve">
          <source>for actual working usage. Alternatively, we might be able to use a command line option such as -R</source>
          <target state="translated">のようなコマンドラインオプションを使用することもできます。あるいは、-R</target>
        </trans-unit>
        <trans-unit id="878a1026dad14bfef6edfae386949642f277900f" translate="yes" xml:space="preserve">
          <source>for all</source>
          <target state="translated">何れにしても</target>
        </trans-unit>
        <trans-unit id="274b2652ae7bc067d729059f1c2e3db00cc57492" translate="yes" xml:space="preserve">
          <source>for all values of X. They aren't POSIX threads, or DecThreads, or Java's Green threads, or Win32 threads. There are similarities, and the broad concepts are the same, but if you start looking for implementation details you're going to be either disappointed or confused. Possibly both.</source>
          <target state="translated">これらは POSIX スレッドでも DecThreads でもなく、Java の Green スレッドでも Win32 スレッドでもありません。似たようなものがあり、大まかな概念は同じですが、実装の詳細を探し始めると、失望するか混乱するかのどちらかになるでしょう。両方の可能性もあります。</target>
        </trans-unit>
        <trans-unit id="f74684ede1fa66e160d2cca9b02096fdcaee4bf5" translate="yes" xml:space="preserve">
          <source>for an easy way to declare most constants.)</source>
          <target state="translated">を使うと、ほとんどの定数を簡単に宣言できます)。</target>
        </trans-unit>
        <trans-unit id="a6326e4c99720b2fb6b674cb7cc01004c97bfc9c" translate="yes" xml:space="preserve">
          <source>for an example as to how it's currently done.</source>
          <target state="translated">を参照してください。</target>
        </trans-unit>
        <trans-unit id="11290c398260c6076287facecd00b44fb997d324" translate="yes" xml:space="preserve">
          <source>for an example of a situation that warrants the use of this flag.</source>
          <target state="translated">このフラグの使用を保証する状況の例としては</target>
        </trans-unit>
        <trans-unit id="b2fce9d5f88c10b2d2c37f293ac2e456d0a69869" translate="yes" xml:space="preserve">
          <source>for an example of how to use the &quot;eval exec&quot; trick to ask the shell to have Perl run your scripts on those older releases of Unix System Services.</source>
          <target state="translated">古いリリースの Unix System Services 上で Perl にスクリプトを実行させるための &quot;eval exec&quot; トリックの使い方の例をご覧ください。</target>
        </trans-unit>
        <trans-unit id="583ed61d49f90d2d931d552252a15eb9c06729e2" translate="yes" xml:space="preserve">
          <source>for an example.</source>
          <target state="translated">を例に挙げてみました。</target>
        </trans-unit>
        <trans-unit id="c8dae76bdacebbbe51a93daa67920deb3b244b0f" translate="yes" xml:space="preserve">
          <source>for an executable file having the name specified, with or without the</source>
          <target state="translated">の有無に関わらず、指定された名前の実行ファイルに対して</target>
        </trans-unit>
        <trans-unit id="e4ee5456d3f3039046f948377d426a43e58b65d7" translate="yes" xml:space="preserve">
          <source>for contributing &lt;code&gt;getc()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getc()&lt;/code&gt; に貢献してくれて。</target>
        </trans-unit>
        <trans-unit id="d5fdb6811c3b6bac20cddd0e9137683feefd1851" translate="yes" xml:space="preserve">
          <source>for converting strings representing numbers in the respective bases into &lt;code&gt;NV&lt;/code&gt; s. Note that grok_atoUV() doesn't handle negative inputs, or leading whitespace (being purposefully strict).</source>
          <target state="translated">それぞれの基数の数値を表す文字列を &lt;code&gt;NV&lt;/code&gt; に変換します。grok_atoUV（）は負の入力、または先頭の空白（意図的に厳密であること）を処理しないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="ac11d225e8ff57389785cc7e54cb67fba80f6f08" translate="yes" xml:space="preserve">
          <source>for converting strings representing numbers in the respective bases into &lt;code&gt;NV&lt;/code&gt;s. Note that grok_atoUV() doesn't handle negative inputs, or leading whitespace (being purposefully strict).</source>
          <target state="translated">それぞれのベースの数値を表す文字列を &lt;code&gt;NV&lt;/code&gt; に変換するため。grok_atoUV（）は、負の入力または先頭の空白（意図的に厳密）を処理しないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="e5c48c63c577e8787ac1145de50675a4cb7998fc" translate="yes" xml:space="preserve">
          <source>for cross-compilation (&quot;foreign&quot;</source>
          <target state="translated">クロスコンパイルのための</target>
        </trans-unit>
        <trans-unit id="8c509220c8550fd999a3f761d78a734fd44e7ff0" translate="yes" xml:space="preserve">
          <source>for daily usage. This document is only useful for users interested in the gory details.</source>
          <target state="translated">を日常的に使用するためのものです。このドキュメントは、ゴリゴリの詳細に興味があるユーザーのみに役立つものです。</target>
        </trans-unit>
        <trans-unit id="451f78e555ef04f6e6031be9242accc951baa7f2" translate="yes" xml:space="preserve">
          <source>for details of an alternative to using these macros.</source>
          <target state="translated">を参照してください。</target>
        </trans-unit>
        <trans-unit id="f4a0096390f552f8cee0fe593153c235401c829c" translate="yes" xml:space="preserve">
          <source>for details on using G_EVAL.</source>
          <target state="translated">G_EVALの使用方法の詳細については</target>
        </trans-unit>
        <trans-unit id="f44cc3d49856296db60e43c79602664815fdf535" translate="yes" xml:space="preserve">
          <source>for details.</source>
          <target state="translated">を参照してください。</target>
        </trans-unit>
        <trans-unit id="49f1eaa8164a0c1f61ab9d895aae415adfde5745" translate="yes" xml:space="preserve">
          <source>for details. In contrast to &lt;code&gt;$!&lt;/code&gt; and &lt;code&gt;$^E&lt;/code&gt; , which are set only if error condition is detected, the variable &lt;code&gt;$?&lt;/code&gt; is set on each &lt;code&gt;&lt;a href=&quot;functions/wait&quot;&gt;wait&lt;/a&gt;&lt;/code&gt; or pipe &lt;code&gt;&lt;a href=&quot;functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt;, overwriting the old value. This is more like &lt;code&gt;$@&lt;/code&gt; , which on every &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval()&lt;/a&gt;&lt;/code&gt; is always set on failure and cleared on success.</source>
          <target state="translated">詳細については。 &lt;code&gt;$!&lt;/code&gt; とは対照的に！および &lt;code&gt;$^E&lt;/code&gt; 、エラー条件が検出された場合にのみ設定され、変数 &lt;code&gt;$?&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;functions/wait&quot;&gt;wait&lt;/a&gt;&lt;/code&gt; またはパイプの &lt;code&gt;&lt;a href=&quot;functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; ごとに設定され、古い値を上書きします。これは &lt;code&gt;$@&lt;/code&gt; に似ており、すべての &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval()&lt;/a&gt;&lt;/code&gt; で常に失敗時に設定され、成功時にクリアされます。</target>
        </trans-unit>
        <trans-unit id="602c2ea1f44c1efa11e256323f871edef7a639c5" translate="yes" xml:space="preserve">
          <source>for details. Or better yet, you can just use the &lt;code&gt;POSIX::setsid()&lt;/code&gt; function, so you don't have to worry about process groups.</source>
          <target state="translated">詳細については。さらに良いことに、 &lt;code&gt;POSIX::setsid()&lt;/code&gt; 関数を使用するだけでよいので、プロセスグループについて心配する必要はありません。</target>
        </trans-unit>
        <trans-unit id="df9e7dec73b7a6fe5f78805c0238712b36bc459f" translate="yes" xml:space="preserve">
          <source>for each @modules.</source>
          <target state="translated">それぞれの@モジュールに対応しています。</target>
        </trans-unit>
        <trans-unit id="d4f1e1b06e620dd4d6129ea8bd32b231e67a48ff" translate="yes" xml:space="preserve">
          <source>for each indentation level.</source>
          <target state="translated">インデントレベルごとに</target>
        </trans-unit>
        <trans-unit id="2345a046dfb256a0d27b356b37be6ee410e69c0d" translate="yes" xml:space="preserve">
          <source>for each of the &lt;code&gt;CallSavedSub1&lt;/code&gt; lines.</source>
          <target state="translated">&lt;code&gt;CallSavedSub1&lt;/code&gt; 行ごとに。</target>
        </trans-unit>
        <trans-unit id="3ef13b2e1a61c700cbcb2d713c6f1cbe457113b9" translate="yes" xml:space="preserve">
          <source>for example.</source>
          <target state="translated">例えば</target>
        </trans-unit>
        <trans-unit id="5c7605979917c90c0e0333a7d81971b1b3943acc" translate="yes" xml:space="preserve">
          <source>for extensive documentation on writing manual pages if you've not done it before and aren't familiar with the conventions.</source>
          <target state="translated">マニュアルページの書き方については、これまでにやったことがなく、規約に慣れていない場合には、幅広いドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="cc1581d4bbb0be9843f9251901c025e8057a0bf9" translate="yes" xml:space="preserve">
          <source>for finding and fixing the bug in &lt;code&gt;PRINTF()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PRINTF()&lt;/code&gt; のバグを見つけて修正してください。</target>
        </trans-unit>
        <trans-unit id="0c5fd130bc0695bba66db67efc8ab89c76e57cea" translate="yes" xml:space="preserve">
          <source>for full description).</source>
          <target state="translated">を参照してください)。</target>
        </trans-unit>
        <trans-unit id="4a2c9af8b32a141189c69b05b099623bc08385eb" translate="yes" xml:space="preserve">
          <source>for further compilations.</source>
          <target state="translated">を参照してください。</target>
        </trans-unit>
        <trans-unit id="74543c484dcd475db60a5bd394d54f5341e54ce5" translate="yes" xml:space="preserve">
          <source>for further information. Please use &lt;a href=&quot;https://github.com/Perl/perl5/issues&quot;&gt;https://github.com/Perl/perl5/issues&lt;/a&gt; to submit a problem report in the event that you encounter difficulties.</source>
          <target state="translated">詳細については。問題が発生した場合は、&lt;a href=&quot;https://github.com/Perl/perl5/issues&quot;&gt;https：//github.com/Perl/perl5/issues&lt;/a&gt;を使用して問題レポートを送信してください。</target>
        </trans-unit>
        <trans-unit id="878f64ea18bd2bf7cad48c2c0b640c3362fa3d50" translate="yes" xml:space="preserve">
          <source>for further information. Please use &lt;code&gt;perlbug&lt;/code&gt; to submit a problem report in the event that you encounter difficulties.</source>
          <target state="translated">詳細については。問題が発生した場合は、 &lt;code&gt;perlbug&lt;/code&gt; を使用して問題レポートを送信してください。</target>
        </trans-unit>
        <trans-unit id="3fd1f7dfbda762eb93703641ddaccefaadf436fc" translate="yes" xml:space="preserve">
          <source>for his offset-using read() and write() implementations.</source>
          <target state="translated">オフセットを使用する read()と write()の実装については</target>
        </trans-unit>
        <trans-unit id="6788781d8d7fdef08a742f2007cec24a209e7bd4" translate="yes" xml:space="preserve">
          <source>for his patches to massively improve the performance of &lt;code&gt;getline()&lt;/code&gt; and add &lt;code&gt;sysread&lt;/code&gt; and &lt;code&gt;syswrite&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getline()&lt;/code&gt; のパフォーマンスを大幅に改善し、 &lt;code&gt;sysread&lt;/code&gt; と &lt;code&gt;syswrite&lt;/code&gt; を追加するための彼のパッチ。</target>
        </trans-unit>
        <trans-unit id="639595442e6a715ca16594e3931b0eacb3afe88f" translate="yes" xml:space="preserve">
          <source>for host miniperl. If you'll get an error that perl could not find Config.pm somewhere in building process this means something went wrong. Most probably you forgot to specify a cross-compilation when invoking miniperl.exe to Makefile.PL When building an extension for cross-compilation your command line should look like</source>
          <target state="translated">をホストminiperlにインストールしてください。もし、ビルドプロセスのどこかでPerlがConfig.pmを見つけられなかったというエラーが出たら、これは何かが間違っていたことを意味しています。ほとんどの場合、miniperl.exeをMakefile.PLに呼び出すときにクロスコンパイルを指定するのを忘れてしまったのではないでしょうか。 クロスコンパイルのための拡張機能をビルドするとき、コマンドラインは次のようになります。</target>
        </trans-unit>
        <trans-unit id="326d317f014c2a481ac4fa01a7b9c6c2c0f9245e" translate="yes" xml:space="preserve">
          <source>for how to untaint capture variables if that's something you'd like your engine to do as well.</source>
          <target state="translated">を参照してください。</target>
        </trans-unit>
        <trans-unit id="8f022b4abbeaaf15b0b1cc6b32077507ea8248cb" translate="yes" xml:space="preserve">
          <source>for input as UTF-8.</source>
          <target state="translated">UTF-8で入力する場合は、UTF-8で入力します。</target>
        </trans-unit>
        <trans-unit id="298f331649e9329989508ce53e22477f8f925ae1" translate="yes" xml:space="preserve">
          <source>for instrumentation. You can use these in conjunction with kernel-level probes, as well as probes from other providers such as MySQL, in order to diagnose software defects, or even just your application's bottlenecks.</source>
          <target state="translated">インスツルメンテーション用に使用します。カーネルレベルのプローブや MySQL のような他のプロバイダのプローブと組み合わせて使用することで、ソフトウェアの欠陥やアプリケーションのボトルネックを診断することができます。</target>
        </trans-unit>
        <trans-unit id="4e204daa739344fcccf8e8b1519a93df7e3ea8da" translate="yes" xml:space="preserve">
          <source>for it. The process of looking to see if the pattern occurs in the string is called</source>
          <target state="translated">を探します。文字列の中にパターンが発生しているかどうかを調べる処理を</target>
        </trans-unit>
        <trans-unit id="f065cbd812ee0274ceb1abf40eb86e7bc7a1d6cd" translate="yes" xml:space="preserve">
          <source>for libraries &amp;amp; headers: SUNWhea, SUNWarc, SUNWlibm, SUNWlibms, SUNWdfbh, SUNWcg6h, SUNWxwinc</source>
          <target state="translated">ライブラリとヘッダーの場合：SUNWhea、SUNWarc、SUNWlibm、SUNWlibms、SUNWdfbh、SUNWcg6h、SUNWxwinc</target>
        </trans-unit>
        <trans-unit id="846687f9c899e1bde0461c06038812b8d51bc3d3" translate="yes" xml:space="preserve">
          <source>for libraries &amp;amp; headers: SUNWolinc</source>
          <target state="translated">ライブラリおよびヘッダー用：SUNWolinc</target>
        </trans-unit>
        <trans-unit id="c24d87f9ada82af3b55a4817761e5af71ae7a6cb" translate="yes" xml:space="preserve">
          <source>for miniperl) This is very high-level code, enough to fit on a single screen, and it resembles the code found in &lt;a href=&quot;perlembed&quot;&gt;perlembed&lt;/a&gt;; most of the real action takes place in</source>
          <target state="translated">miniperlの場合）これは非常に高レベルのコードであり、1つの画面に収まるのに十分であり、&lt;a href=&quot;perlembed&quot;&gt;perlembedに&lt;/a&gt;あるコードに似ています。実際のアクションのほとんどは、</target>
        </trans-unit>
        <trans-unit id="2d391c37be078da6e2845976b82454d298561380" translate="yes" xml:space="preserve">
          <source>for module authors.</source>
          <target state="translated">モジュールの作者のために。</target>
        </trans-unit>
        <trans-unit id="d4582438f76f3ad84ff66147508f8fa2754c2fcf" translate="yes" xml:space="preserve">
          <source>for more details (250 kB -&amp;gt; 700 kB).</source>
          <target state="translated">詳細については（250 kB-&amp;gt; 700 kB）。</target>
        </trans-unit>
        <trans-unit id="1fcbaea5e863a521bff8b1464ee0594a84a0e2e1" translate="yes" xml:space="preserve">
          <source>for more details).</source>
          <target state="translated">を参照してください)。</target>
        </trans-unit>
        <trans-unit id="0c48df59af2a998f43e95f84634da529279affe9" translate="yes" xml:space="preserve">
          <source>for more details.</source>
          <target state="translated">を参照してください。</target>
        </trans-unit>
        <trans-unit id="d7f3b13f7715e32880c76663ac7585af65bf0d16" translate="yes" xml:space="preserve">
          <source>for more info.</source>
          <target state="translated">詳細はこちらをご覧ください。</target>
        </trans-unit>
        <trans-unit id="c69ab1cb02a10c8a9d2ad711fd82fa9b9e14cca2" translate="yes" xml:space="preserve">
          <source>for more information about the available constants. (Often this means having to look directly at the</source>
          <target state="translated">を参照してください。を直接見る必要があります (多くの場合、これは</target>
        </trans-unit>
        <trans-unit id="7b2b669774e11aa1ed1e27f62ae6bbf8a24d867e" translate="yes" xml:space="preserve">
          <source>for more information on the &lt;code&gt;=encoding&lt;/code&gt; command.</source>
          <target state="translated">&lt;code&gt;=encoding&lt;/code&gt; コマンドの詳細については。</target>
        </trans-unit>
        <trans-unit id="b0cf8d3b30f6f61f1cfb2f257448bf0165378abc" translate="yes" xml:space="preserve">
          <source>for more information.</source>
          <target state="translated">をご覧ください。</target>
        </trans-unit>
        <trans-unit id="2fd5c94d77ccf784226ec8bee81c31d1968a5110" translate="yes" xml:space="preserve">
          <source>for practically the complete duration of the program. This means that control may</source>
          <target state="translated">プログラムの実質的な全期間に亘って。これは、制御が</target>
        </trans-unit>
        <trans-unit id="474c16ce52411aa00554c876eb0e4e5891e1b4a5" translate="yes" xml:space="preserve">
          <source>for probing for various netdb types.</source>
          <target state="translated">様々な netdb のタイプをプロービングするための</target>
        </trans-unit>
        <trans-unit id="dc8d3eaa2198481b88034b48db4a9270c4343fca" translate="yes" xml:space="preserve">
          <source>for reading and writing</source>
          <target state="translated">読み書き用</target>
        </trans-unit>
        <trans-unit id="4762c0079c04663a871fdade52df3b6162287845" translate="yes" xml:space="preserve">
          <source>for some time. See below for more on that.</source>
          <target state="translated">しばらくは それについては以下を参照してください。</target>
        </trans-unit>
        <trans-unit id="cf01bbc29196df439f25d3ef824db778ec5510cb" translate="yes" xml:space="preserve">
          <source>for specifics) and use &lt;code&gt;pwd_mkdb(8)&lt;/code&gt; to install it (see</source>
          <target state="translated">詳細については、 &lt;code&gt;pwd_mkdb(8)&lt;/code&gt; を使用してインストールしてください（「</target>
        </trans-unit>
        <trans-unit id="108b5647ed4cb2b9b0148575693c396fc3914da2" translate="yes" xml:space="preserve">
          <source>for spherical movement.</source>
          <target state="translated">球体運動のための</target>
        </trans-unit>
        <trans-unit id="c7ea071d53e5e39b3854ccf1e41ca46ce9e84dc0" translate="yes" xml:space="preserve">
          <source>for stringification and inheritance improvements, and sundry good ideas.</source>
          <target state="translated">文字列化と継承の改善、そして様々な良いアイデアを提供しています。</target>
        </trans-unit>
        <trans-unit id="ba46123007ae2e702c78476b03c0fead6ebf21dc" translate="yes" xml:space="preserve">
          <source>for suggesting &lt;code&gt;opened()&lt;/code&gt;.</source>
          <target state="translated">open &lt;code&gt;opened()&lt;/code&gt; を提案するため。</target>
        </trans-unit>
        <trans-unit id="874931c046e5a8f882c74e3526dc996e0990cf93" translate="yes" xml:space="preserve">
          <source>for testing</source>
          <target state="translated">試験用</target>
        </trans-unit>
        <trans-unit id="3ba2a894777c86469a866202e16daeca36d9484d" translate="yes" xml:space="preserve">
          <source>for that character. The exceptions are platforms where the legacy encoding is some variant of EBCDIC rather than a superset of ASCII; see &lt;a href=&quot;perlebcdic&quot;&gt;perlebcdic&lt;/a&gt;.</source>
          <target state="translated">そのキャラクターのために。例外は、レガシーエンコーディングがASCIIのスーパーセットではなくEBCDICのバリアントであるプラットフォームです。&lt;a href=&quot;perlebcdic&quot;&gt;perlebcdicを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="f2501e0001bcf87e943fa945a27db3789e03b151" translate="yes" xml:space="preserve">
          <source>for the IO::Handle inheritance and automatic tie-ing.</source>
          <target state="translated">IO::Handleの継承と自動タイイングのために</target>
        </trans-unit>
        <trans-unit id="42b7dedca3b5fb11a2ce7cfbadab151b80140e4e" translate="yes" xml:space="preserve">
          <source>for the Japanese Emperor eras (naturally only defined under Japanese locales).</source>
          <target state="translated">日本の天皇の時代のために(当然日本の地域でのみ定義されています)。</target>
        </trans-unit>
        <trans-unit id="cf1c035251bdae072950dcad3f5471b9244d6444" translate="yes" xml:space="preserve">
          <source>for the affirmative and negative responses and expressions, and</source>
          <target state="translated">肯定的な反応や否定的な反応や表現に対して</target>
        </trans-unit>
        <trans-unit id="dfd883a9aeb77d2a58c426faa0cef9dfd6ffe410" translate="yes" xml:space="preserve">
          <source>for the benefit of any naughty C extension modules that you might want to build later which explicitly reference &quot;lib&quot; rather than taking their value from $Config{ar}.</source>
          <target state="translated">の値を $Config{ar}から取得するのではなく、明示的に &quot;lib&quot; を参照するような、後から作りたいと思うようないたずらな C 拡張モジュールがあった場合のために。</target>
        </trans-unit>
        <trans-unit id="2def7a3c1ac551fd0e8523f9dbae576c74eb0c67" translate="yes" xml:space="preserve">
          <source>for the character code set being used (such as &quot;ISO8859-1&quot;, &quot;cp850&quot;, &quot;koi8-r&quot;, &quot;sjis&quot;, &quot;utf8&quot;, etc.), for the currency string, for the radix character used between the integer and the fractional part of decimal numbers (yes, this is redundant with POSIX::localeconv())</source>
          <target state="translated">使用する文字コードセット (例えば &quot;ISO8859-1&quot;,&quot;cp850&quot;,&quot;koi8-r&quot;,&quot;sjis&quot;,&quot;utf8&quot; など)、通貨文字列、整数部と小数部の間で使用する基数文字 (はい、これは POSIX::localeconv()と重複しています)を指定します。</target>
        </trans-unit>
        <trans-unit id="9474a97c709d5e6cd1b78699a88e5f8eca21395c" translate="yes" xml:space="preserve">
          <source>for the characters, like &quot;uppercase&quot; or &quot;lowercase&quot;, &quot;decimal digit&quot;, or &quot;punctuation&quot;; these properties are independent of the names of the characters. Furthermore, various operations on the characters like uppercasing, lowercasing, and collating (sorting) are defined.</source>
          <target state="translated">大文字、小文字、小数点以下の桁数、句読点など、文字の名前とは独立したプロパティを定義しています。さらに、大文字、小文字、照合(ソート)など、文字に対する様々な操作が定義されています。</target>
        </trans-unit>
        <trans-unit id="7f8ac04edc321591b031f5d6fd19d0fcda170cc8" translate="yes" xml:space="preserve">
          <source>for the date-time, date, and time formats used by the strftime() function (see &lt;a href=&quot;../posix&quot;&gt;POSIX&lt;/a&gt;)</source>
          <target state="translated">strftime（）関数で使用される日付、時刻、日付、および時刻の形式（&lt;a href=&quot;../posix&quot;&gt;POSIXを&lt;/a&gt;参照）</target>
        </trans-unit>
        <trans-unit id="12139071d0e1448dcd4c54069998b8f675f56bf0" translate="yes" xml:space="preserve">
          <source>for the default value.</source>
          <target state="translated">をデフォルト値に設定します。</target>
        </trans-unit>
        <trans-unit id="1b88014fb85d158e048678b2d71408717da2ed3f" translate="yes" xml:space="preserve">
          <source>for the desired language translation. If the &lt;code&gt;POD2::&amp;lt;language_code&amp;gt;&lt;/code&gt; package isn't installed in your system, the switch is ignored. All available translation packages are to be found under the &lt;code&gt;POD2::&lt;/code&gt; namespace. See &lt;a href=&quot;POD2::IT&quot;&gt;POD2::IT&lt;/a&gt; (or &lt;a href=&quot;POD2::FR&quot;&gt;POD2::FR&lt;/a&gt;) to see how to create new localized &lt;code&gt;POD2::*&lt;/code&gt; documentation packages and integrate them into &lt;a href=&quot;Pod::Perldoc&quot;&gt;Pod::Perldoc&lt;/a&gt;.</source>
          <target state="translated">希望する言語の翻訳のために。場合 &lt;code&gt;POD2::&amp;lt;language_code&amp;gt;&lt;/code&gt; パッケージがシステムにインストールされていない、スイッチは無視されます。利用可能なすべての翻訳パッケージは、 &lt;code&gt;POD2::&lt;/code&gt; 名前空間の下にあります。新しいローカライズされた &lt;code&gt;POD2::*&lt;/code&gt; ドキュメントパッケージを作成し、それらを&lt;a href=&quot;Pod::Perldoc&quot;&gt;Pod :: &lt;/a&gt;Perldocに統合する方法については、&lt;a href=&quot;POD2::IT&quot;&gt;POD2 :: IT&lt;/a&gt;（または&lt;a href=&quot;POD2::FR&quot;&gt;POD2 :: FR&lt;/a&gt;）を参照してください。</target>
        </trans-unit>
        <trans-unit id="480309624764453319c3017621265516c970d7a3" translate="yes" xml:space="preserve">
          <source>for the desired language translation. If the &lt;code&gt;POD2::&amp;lt;language_code&amp;gt;&lt;/code&gt; package isn't installed in your system, the switch is ignored. All available translation packages are to be found under the &lt;code&gt;POD2::&lt;/code&gt; namespace. See &lt;a href=&quot;http://search.cpan.org/perldoc/POD2::IT&quot;&gt;POD2::IT&lt;/a&gt; (or &lt;a href=&quot;http://search.cpan.org/perldoc/POD2::FR&quot;&gt;POD2::FR&lt;/a&gt;) to see how to create new localized &lt;code&gt;POD2::*&lt;/code&gt; documentation packages and integrate them into &lt;a href=&quot;pod/perldoc&quot;&gt;Pod::Perldoc&lt;/a&gt;.</source>
          <target state="translated">希望する言語翻訳のために。場合 &lt;code&gt;POD2::&amp;lt;language_code&amp;gt;&lt;/code&gt; パッケージがシステムにインストールされていない、スイッチは無視されます。利用可能なすべての翻訳パッケージは、 &lt;code&gt;POD2::&lt;/code&gt; 名前空間の下にあります。新しいローカライズされた &lt;code&gt;POD2::*&lt;/code&gt; ドキュメントパッケージを作成して&lt;a href=&quot;pod/perldoc&quot;&gt;Pod :: &lt;/a&gt;Perldocに統合する方法については、&lt;a href=&quot;http://search.cpan.org/perldoc/POD2::IT&quot;&gt;POD2 :: IT&lt;/a&gt;（または&lt;a href=&quot;http://search.cpan.org/perldoc/POD2::FR&quot;&gt;POD2 :: FR&lt;/a&gt;）を参照してください。</target>
        </trans-unit>
        <trans-unit id="bc43617370e4adca632eb5007eea754efd1e1955" translate="yes" xml:space="preserve">
          <source>for the details.</source>
          <target state="translated">を参照してください。</target>
        </trans-unit>
        <trans-unit id="5c100cb3478538e0537eb9bdb5d78dc28be0bda8" translate="yes" xml:space="preserve">
          <source>for the extension. Then, rebuild</source>
          <target state="translated">延長のために。その後、再構築</target>
        </trans-unit>
        <trans-unit id="81b4d501893288034e99580c3b8ceeae3834297b" translate="yes" xml:space="preserve">
          <source>for the layer below; unlikely to be useful on its own in the global PERLIO environment variable. You perhaps were thinking of &lt;code&gt;:crlf:bytes&lt;/code&gt; or &lt;code&gt;:perlio:bytes&lt;/code&gt;.</source>
          <target state="translated">下のレイヤー; グローバルPERLIO環境変数の中でそれ自体が役立つことはほとんどありません。あなたはおそらく &lt;code&gt;:crlf:bytes&lt;/code&gt; または &lt;code&gt;:perlio:bytes&lt;/code&gt; を考えていました。</target>
        </trans-unit>
        <trans-unit id="38dd72c9834abd2ad5124410a2d278ade43a35c1" translate="yes" xml:space="preserve">
          <source>for the list of such flags. Even if allowed, this function generally returns the Unicode REPLACEMENT CHARACTER when it encounters a malformation. There are flags in</source>
          <target state="translated">を参照してください。許可されている場合でも、この関数は一般的に、不正な情報に遭遇した場合に Unicode REPLACEMENT CHARACTER を返します。にはフラグがあります。</target>
        </trans-unit>
        <trans-unit id="31598128c6734a648971884730baa74ab197e0a9" translate="yes" xml:space="preserve">
          <source>for the list of such flags. For allowed 0 length strings, this function returns 0; for allowed overlong sequences, the computed code point is returned; for all other allowed malformations, the Unicode REPLACEMENT CHARACTER is returned, as these have no determinable reasonable value.</source>
          <target state="translated">このようなフラグのリストを参照してください。許容される長さ0の文字列に対しては、この関数は0を返します。 許容される長すぎるシーケンスに対しては、計算されたコードポイントが返されます。</target>
        </trans-unit>
        <trans-unit id="ae1de5d5c8ebc50653a4ba5ecdfeb813b535fc33" translate="yes" xml:space="preserve">
          <source>for the locales for which it makes sense to have ante meridiem and post meridiem time formats,</source>
          <target state="translated">子午線前と子午線後の時間フォーマットを持つことが理にかなっているロケールのために。</target>
        </trans-unit>
        <trans-unit id="65916440ef8aba4e67509fc99a78c66a542123a7" translate="yes" xml:space="preserve">
          <source>for the tied array associated with object</source>
          <target state="translated">オブジェクトに関連付けられた紐付き配列に対して</target>
        </trans-unit>
        <trans-unit id="b8d08c215e44cbcda8cb3f64c4aa60ae12f2e7fd" translate="yes" xml:space="preserve">
          <source>for the tied hash</source>
          <target state="translated">タイドハッシュのために</target>
        </trans-unit>
        <trans-unit id="04a3e35b7cadbb4fa307c9bd46313045a9957d7f" translate="yes" xml:space="preserve">
          <source>for the value of a constant that can't be determined because it was optimized away (mnemonic: this happens when a constant is used in &lt;b&gt;v&lt;/b&gt;oid context). The end of the string is marked by a period. The string should be a valid perl expression, generally a constant. Note that unless it's a number, it probably needs to be quoted, and on a command line quotes need to be protected from the shell. Some conventional values include 0, 1, 42, '', 'foo', and 'Useless use of constant omitted' (which may need to be &lt;b&gt;-sv&quot;'Useless use of constant omitted'.&quot;&lt;/b&gt; or something similar depending on your shell). The default is '???'. If you're using B::Deparse on a module or other file that's require'd, you shouldn't use a value that evaluates to false, since the customary true constant at the end of a module will be in void context when the file is compiled as a main program.</source>
          <target state="translated">それが離れて最適化されたため、決定できない一定の値を（ニーモニック：定数で使用される場合に発生&lt;b&gt;V&lt;/b&gt; OIDコンテキスト）。文字列の終わりはピリオドでマークされています。文字列は有効なperl式、通常は定数でなければなりません。数値でない限り、おそらく引用符で囲む必要があり、コマンドラインでは引用符をシェルから保護する必要があることに注意してください。いくつかの従来の値には、0、1、42、 ''、 'foo'、および '定数の省略の無用の使用'（&lt;b&gt;-sv &quot;'定数の省略の無用の使用'&lt;/b&gt;が必要な場合があり&lt;b&gt;ます。&quot;が含まれます。&lt;/b&gt;またはあなたのシェルに応じて同様の何か）。デフォルトは「???」です。必要なモジュールまたはその他のファイルでB :: Deparseを使用している場合は、falseと評価される値を使用しないでください。モジュールの最後にある通常のtrue定数は、ファイルはメインプログラムとしてコンパイルされます。</target>
        </trans-unit>
        <trans-unit id="4d304cdb150be232005808f70e540581c857f55c" translate="yes" xml:space="preserve">
          <source>for their bug reports, suggestions and contributions.</source>
          <target state="translated">は、バグレポート、提案、貢献のためのものです。</target>
        </trans-unit>
        <trans-unit id="263df7720c87aa7975d1a051e824b09fcbfac2ed" translate="yes" xml:space="preserve">
          <source>for their internal state. This means that</source>
          <target state="translated">は、それらの内部状態に対して これは、以下のことを意味します。</target>
        </trans-unit>
        <trans-unit id="46a9e41fa026c134069dec1a30250ea2782c75bc" translate="yes" xml:space="preserve">
          <source>for this purpose:</source>
          <target state="translated">この目的のために</target>
        </trans-unit>
        <trans-unit id="0b2d94c194600f5de75068077801a3da4a4d3109" translate="yes" xml:space="preserve">
          <source>for tools (sccs, lex, yacc, make, nm, truss, ld, as): SUNWbtool, SUNWsprot, SUNWtoo</source>
          <target state="translated">ツール用 (sccs,lex,yacc,make,nm,truss,ld,as)。SUNWbtool,SUNWsprot,SUNWtoo</target>
        </trans-unit>
        <trans-unit id="44f6691b11d41c6edc6a94eec7bd405298f470f1" translate="yes" xml:space="preserve">
          <source>for usage details. You may also need to use &lt;code&gt;dVAR&lt;/code&gt; in your coding to &quot;declare the global variables&quot; when you are using them. dTHX does this for you automatically.</source>
          <target state="translated">使用法の詳細については。また、コーディングで &lt;code&gt;dVAR&lt;/code&gt; を使用して、「グローバル変数を宣言する」必要がある場合もあります。dTHXはこれを自動的に行います。</target>
        </trans-unit>
        <trans-unit id="7fdb1518c76508a89c14f30cb635409afa4fae85" translate="yes" xml:space="preserve">
          <source>for what is done during a call to Perl function foo(). To understand what is going on here, one can add a CODE section to this XSUB:</source>
          <target state="translated">Perl の関数 foo()の呼び出し中に何が行われているかを示すために ここで何が行われているかを理解するために、このXSUBにCODEセクションを追加することができます。</target>
        </trans-unit>
        <trans-unit id="58cfb1267bae74a5c7c0bcac4c7ff27de63088c7" translate="yes" xml:space="preserve">
          <source>for years:</source>
          <target state="translated">何年も前から</target>
        </trans-unit>
        <trans-unit id="8cb93439d2b0953ea28618ab23966a9f0bf5f0bf" translate="yes" xml:space="preserve">
          <source>for you on the fly. In fact, if you have a working DynaLoader then there is rarely any need to link in any other extensions statically.</source>
          <target state="translated">にリンクする必要があります。実際、DynaLoaderが動作していれば、他の拡張機能を静的にリンクする必要はほとんどありません。</target>
        </trans-unit>
        <trans-unit id="796040328ead738133e75012e8896869c6e0cade" translate="yes" xml:space="preserve">
          <source>for you, if you're running setgid.</source>
          <target state="translated">setgidを実行している場合は、あなたのために</target>
        </trans-unit>
        <trans-unit id="062b0bd80d39fb0a658384b8d8707fa3571299f6" translate="yes" xml:space="preserve">
          <source>forbid</source>
          <target state="translated">forbid</target>
        </trans-unit>
        <trans-unit id="9dc9e705ebd493f98a129e808abb696db5ce4ccf" translate="yes" xml:space="preserve">
          <source>force (o)</source>
          <target state="translated">捺す</target>
        </trans-unit>
        <trans-unit id="3391e85ec5e4d13a5f747135612472a0a9b71169" translate="yes" xml:space="preserve">
          <source>force the argument into the integer format. This is applicable to the third and fourth arguments of &lt;code&gt;&lt;a href=&quot;functions/sysread&quot;&gt;sysread&lt;/a&gt;&lt;/code&gt;, for example.</source>
          <target state="translated">引数を整数形式に強制します。これは、たとえば &lt;code&gt;&lt;a href=&quot;functions/sysread&quot;&gt;sysread&lt;/a&gt;&lt;/code&gt; の 3番目と4番目の引数に適用されます。</target>
        </trans-unit>
        <trans-unit id="28d8ebee6914853e52b440dfa3f83dce8fe629fc" translate="yes" xml:space="preserve">
          <source>force the argument into the integer format. This is applicable to the third and fourth arguments of &lt;code&gt;sysread&lt;/code&gt;, for example.</source>
          <target state="translated">引数を整数形式に強制します。これは、たとえば、 &lt;code&gt;sysread&lt;/code&gt; の3番目と4番目の引数に適用できます。</target>
        </trans-unit>
        <trans-unit id="99e062511c492e2e0b11386f2900b864c6f2c3d6" translate="yes" xml:space="preserve">
          <source>force the argument into the string format. For example, this is applicable to &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt; &quot;%s&quot;, $value&lt;/code&gt; .</source>
          <target state="translated">引数を強制的に文字列形式にします。たとえば、これは &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt; &quot;%s&quot;, $value&lt;/code&gt; 適用されます。</target>
        </trans-unit>
        <trans-unit id="533f93272fc0551c556adc0e83672b565719633d" translate="yes" xml:space="preserve">
          <source>force the argument into the string format. For example, this is applicable to &lt;code&gt;printf &quot;%s&quot;, $value&lt;/code&gt;.</source>
          <target state="translated">引数を文字列形式に強制します。たとえば、これは &lt;code&gt;printf &quot;%s&quot;, $value&lt;/code&gt; 適用できます。</target>
        </trans-unit>
        <trans-unit id="dc4d854401119f472311f5a577a6b77a37d830da" translate="yes" xml:space="preserve">
          <source>force_title</source>
          <target state="translated">force_title</target>
        </trans-unit>
        <trans-unit id="54e98d45ac70c3f4b57ae9fdd4d74b044b3e8b7f" translate="yes" xml:space="preserve">
          <source>forced</source>
          <target state="translated">forced</target>
        </trans-unit>
        <trans-unit id="d400233093bac676f464f89c6ce351493d60026e" translate="yes" xml:space="preserve">
          <source>forcefully breaking the infinite loop</source>
          <target state="translated">強引に無限ループを断ち切る</target>
        </trans-unit>
        <trans-unit id="ac0e479304d9098927a4b0539e3256679607c800" translate="yes" xml:space="preserve">
          <source>forces arguments to integer format. Also shift operations internally use signed integers rather than the default unsigned.</source>
          <target state="translated">は、引数を強制的に整数形式にします。また、シフト操作は内部的にデフォルトの符号なしではなく符号付き整数を使用します。</target>
        </trans-unit>
        <trans-unit id="4d3e8614703ea126434cc11d59e3c7a70c66d624" translate="yes" xml:space="preserve">
          <source>foreach</source>
          <target state="translated">foreach</target>
        </trans-unit>
        <trans-unit id="06d4da32e397df3c8c3ebd7f6595b2f5e12a518d" translate="yes" xml:space="preserve">
          <source>forgiving</source>
          <target state="translated">forgiving</target>
        </trans-unit>
        <trans-unit id="3f673f2a8e0aacb6d0fa4504233f4f284e4a1b4c" translate="yes" xml:space="preserve">
          <source>fork</source>
          <target state="translated">fork</target>
        </trans-unit>
        <trans-unit id="589899c3bf863b841f4664b2c7d1817d700d6bc2" translate="yes" xml:space="preserve">
          <source>fork()</source>
          <target state="translated">fork()</target>
        </trans-unit>
        <trans-unit id="bbd43fe1ecf578b461dad22a438e50427ecc01ff" translate="yes" xml:space="preserve">
          <source>fork() and pipe()</source>
          <target state="translated">フォーク()とパイプ()</target>
        </trans-unit>
        <trans-unit id="096f12472578f5aabab4f4719faf559f0582702d" translate="yes" xml:space="preserve">
          <source>fork() failures in io_* tests</source>
          <target state="translated">io_*テストでの fork()の失敗</target>
        </trans-unit>
        <trans-unit id="d00b39815c187d832cef3239eb7a77580728dc47" translate="yes" xml:space="preserve">
          <source>form</source>
          <target state="translated">form</target>
        </trans-unit>
        <trans-unit id="9cefa92f8a109d0a8ec9755833af9a6a226baef4" translate="yes" xml:space="preserve">
          <source>form of &lt;a href=&quot;#open-FILEHANDLE%2CMODE%2CEXPR&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;#open-FILEHANDLE%2CMODE%2CEXPR&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt;形：</target>
        </trans-unit>
        <trans-unit id="87be26f61c8a194cb66f6181213ad17aff024860" translate="yes" xml:space="preserve">
          <source>form of open():</source>
          <target state="translated">open()の形式を使用しています。</target>
        </trans-unit>
        <trans-unit id="88fee891cd74d69adf7b2dc75ca1261418befe3d" translate="yes" xml:space="preserve">
          <source>form_alien_digit_msg</source>
          <target state="translated">form_alien_digit_msg</target>
        </trans-unit>
        <trans-unit id="fe524838dbedbb27af141256e8acd3fcad8c82bc" translate="yes" xml:space="preserve">
          <source>form_cp_too_large_msg</source>
          <target state="translated">form_cp_too_large_msg</target>
        </trans-unit>
        <trans-unit id="9864bc329caff1414c1bb49159b9b77b08f00d0c" translate="yes" xml:space="preserve">
          <source>form_nocontext</source>
          <target state="translated">form_nocontext</target>
        </trans-unit>
        <trans-unit id="2fbe6b8aa9322fcaa10ca8660bf8ec4d9edf0b7d" translate="yes" xml:space="preserve">
          <source>formal arguments</source>
          <target state="translated">形式的引数</target>
        </trans-unit>
        <trans-unit id="785987648f85190cfde9eadc69fc7c46fe8a7433" translate="yes" xml:space="preserve">
          <source>format</source>
          <target state="translated">format</target>
        </trans-unit>
        <trans-unit id="9b645322abcc75a4acb089ae69685c972d102a9f" translate="yes" xml:space="preserve">
          <source>format letter is only useful with &lt;code&gt;A&lt;/code&gt; , &lt;code&gt;a&lt;/code&gt; , or &lt;code&gt;Z&lt;/code&gt; . Packing with a</source>
          <target state="translated">書式文字は &lt;code&gt;A&lt;/code&gt; 、 &lt;code&gt;a&lt;/code&gt; 、または &lt;code&gt;Z&lt;/code&gt; でのみ役立ちます。とのパッキング</target>
        </trans-unit>
        <trans-unit id="24f34dc1aa26cd1726975c39bea399992b6180a3" translate="yes" xml:space="preserve">
          <source>format letter is only useful with &lt;code&gt;A&lt;/code&gt;, &lt;code&gt;a&lt;/code&gt;, or &lt;code&gt;Z&lt;/code&gt;. Packing with a</source>
          <target state="translated">フォーマット文字は、 &lt;code&gt;A&lt;/code&gt; 、 &lt;code&gt;a&lt;/code&gt; 、または &lt;code&gt;Z&lt;/code&gt; でのみ役立ちます。とのパッキング</target>
        </trans-unit>
        <trans-unit id="3d20fb07de7fbf6f9c8df23996b2094eb16b597b" translate="yes" xml:space="preserve">
          <source>format parameter index</source>
          <target state="translated">フォーマットパラメタインデックス</target>
        </trans-unit>
        <trans-unit id="87177a034f60fb15dc047635c88804903860a11e" translate="yes" xml:space="preserve">
          <source>format to</source>
          <target state="translated">形式にする</target>
        </trans-unit>
        <trans-unit id="9e3a04775b33419624b19cafdd0742bcafef34ff" translate="yes" xml:space="preserve">
          <source>format, and produces a typeset PostScript or text file of the whole lot.</source>
          <target state="translated">フォーマットを使用して、タイプセットされたPostScriptまたはテキストファイルを作成します。</target>
        </trans-unit>
        <trans-unit id="3ca8e680636aad98fc7b6611122bb8d5e883c253" translate="yes" xml:space="preserve">
          <source>format, and to Extended Attributes.</source>
          <target state="translated">形式、および拡張属性に対応しています。</target>
        </trans-unit>
        <trans-unit id="a4253df3a92fb7bf74addafa02b573ba9fe49b6a" translate="yes" xml:space="preserve">
          <source>format. If you have EMX docs installed correctly, you can follow library links (you need to have &lt;code&gt;view emxbook&lt;/code&gt; working by setting &lt;code&gt;EMXBOOK&lt;/code&gt; environment variable as it is described in EMX docs).</source>
          <target state="translated">フォーマット。あなたはEMXのドキュメントが正しくインストールされている場合は、ライブラリのリンクをたどることができます（あなたは持っている必要があり &lt;code&gt;view emxbook&lt;/code&gt; 設定することにより、作業 &lt;code&gt;EMXBOOK&lt;/code&gt; のそれはEMXのドキュメントに記載されているように環境変数を）。</target>
        </trans-unit>
        <trans-unit id="36774fa84e510be0a6b884a84feb185e6372a75a" translate="yes" xml:space="preserve">
          <source>format: run one of</source>
          <target state="translated">形式:いずれかを実行</target>
        </trans-unit>
        <trans-unit id="1c459bff0393ccd7efcc70457ffbfc2cc16b979c" translate="yes" xml:space="preserve">
          <source>format_default</source>
          <target state="translated">format_default</target>
        </trans-unit>
        <trans-unit id="b2195f1cc93ce65a93e2dad09a2cac4c128ba02f" translate="yes" xml:space="preserve">
          <source>formatname</source>
          <target state="translated">formatname</target>
        </trans-unit>
        <trans-unit id="9ed669f6c43c499eec9e3ef7f607d986990fa2c8" translate="yes" xml:space="preserve">
          <source>formatnames</source>
          <target state="translated">formatnames</target>
        </trans-unit>
        <trans-unit id="2ce12ec02ae86424bb052211552a086509094dd2" translate="yes" xml:space="preserve">
          <source>formatters</source>
          <target state="translated">formatters</target>
        </trans-unit>
        <trans-unit id="2a197b6192fc35e400c21f05804d35d5bcffeb7d" translate="yes" xml:space="preserve">
          <source>formline</source>
          <target state="translated">formline</target>
        </trans-unit>
        <trans-unit id="69bd16eb340f99e341d2515a68b5f2918baa5f8c" translate="yes" xml:space="preserve">
          <source>formline PICTURE,LIST</source>
          <target state="translated">formline PICTURE,LIST</target>
        </trans-unit>
        <trans-unit id="b7d22c38f54715eba1324c325c9cfbb25521e5e9" translate="yes" xml:space="preserve">
          <source>found cannot be interpreted as a character entity.</source>
          <target state="translated">を文字実体として解釈することはできません。</target>
        </trans-unit>
        <trans-unit id="8926f4c7f9bf4f03bf80bacaaa8ff9d2e1623a3e" translate="yes" xml:space="preserve">
          <source>fp_dup</source>
          <target state="translated">fp_dup</target>
        </trans-unit>
        <trans-unit id="3f1a166b0b0b51f2bb4def6be2ba7cd9ef811619" translate="yes" xml:space="preserve">
          <source>fpossize.U</source>
          <target state="translated">fpossize.U</target>
        </trans-unit>
        <trans-unit id="d5a491512da658ab80ef05608b149c99f218023b" translate="yes" xml:space="preserve">
          <source>fpostype.U</source>
          <target state="translated">fpostype.U</target>
        </trans-unit>
        <trans-unit id="1eba50aa419e5333f1c6f59c429f205f1fd9aaa0" translate="yes" xml:space="preserve">
          <source>fragment of code built on top of the reusable modules. In these cases the application could invoked as:</source>
          <target state="translated">再利用可能なモジュールの上に構築されたコードの断片です。このような場合、アプリケーションは</target>
        </trans-unit>
        <trans-unit id="31017a722665e4afce586950f42944a6d331dabf" translate="yes" xml:space="preserve">
          <source>fred</source>
          <target state="translated">fred</target>
        </trans-unit>
        <trans-unit id="4ff88aaddbd209d8026924c2cc2836b408698823" translate="yes" xml:space="preserve">
          <source>free</source>
          <target state="translated">free</target>
        </trans-unit>
        <trans-unit id="1702c7013f8835bf85fe99f0ea364e41abcf2d1c" translate="yes" xml:space="preserve">
          <source>free_c_backtrace</source>
          <target state="translated">free_c_backtrace</target>
        </trans-unit>
        <trans-unit id="25de688d2bae3c3722116b0aca8a5218c485685f" translate="yes" xml:space="preserve">
          <source>free_global_struct</source>
          <target state="translated">free_global_struct</target>
        </trans-unit>
        <trans-unit id="8c6f811d2da130298390d92a3d2757e7089a405f" translate="yes" xml:space="preserve">
          <source>free_tied_hv_pool</source>
          <target state="translated">free_tied_hv_pool</target>
        </trans-unit>
        <trans-unit id="1fd03b06cf5b2de58ea412fb3ee95242ab022285" translate="yes" xml:space="preserve">
          <source>free_tmps</source>
          <target state="translated">free_tmps</target>
        </trans-unit>
        <trans-unit id="7d3feef993dbfe5444e6e94dc1d299f049ac4c83" translate="yes" xml:space="preserve">
          <source>freed, although its type is set to all 1's so that it won't inadvertently be assumed to be live during global destruction etc. This function should only be called when &lt;code&gt;REFCNT&lt;/code&gt; is zero. Most of the time you'll want to call &lt;code&gt;sv_free()&lt;/code&gt; (or its macro wrapper &lt;code&gt;SvREFCNT_dec&lt;/code&gt;) instead.</source>
          <target state="translated">解放されますが、そのタイプはすべて1に設定されているため、グローバルな破壊などで誤ってライブであると見なされることはありません。この関数は、 &lt;code&gt;REFCNT&lt;/code&gt; がゼロの場合にのみ呼び出す必要があります。ほとんどの場合、代わりに &lt;code&gt;sv_free()&lt;/code&gt; （またはそのマクロラッパー &lt;code&gt;SvREFCNT_dec&lt;/code&gt; ）を呼び出します。</target>
        </trans-unit>
        <trans-unit id="e08a4420583245434ff235985ea31741d3ac187f" translate="yes" xml:space="preserve">
          <source>freed, although its type is set to all 1's so that it won't inadvertently be assumed to be live during global destruction etc. This function should only be called when REFCNT is zero. Most of the time you'll want to call &lt;code&gt;sv_free()&lt;/code&gt; (or its macro wrapper &lt;code&gt;SvREFCNT_dec&lt;/code&gt; ) instead.</source>
          <target state="translated">解放されましたが、そのタイプはすべて1に設定されていますが、グローバルな破壊などの間に誤ってライブであると想定されません。この関数は、REFCNTがゼロの場合にのみ呼び出す必要があります。ほとんどの場合、代わりに &lt;code&gt;sv_free()&lt;/code&gt; （またはそのマクロラッパー &lt;code&gt;SvREFCNT_dec&lt;/code&gt; ）を呼び出します。</target>
        </trans-unit>
        <trans-unit id="7f6e1ab2b8a87200f6a3a06085088d94e961def1" translate="yes" xml:space="preserve">
          <source>freely available</source>
          <target state="translated">自由に使える</target>
        </trans-unit>
        <trans-unit id="68c973aa446462010405b6c056d7ec0144a8a652" translate="yes" xml:space="preserve">
          <source>freely redistributable</source>
          <target state="translated">自由に再配布可能</target>
        </trans-unit>
        <trans-unit id="4706cb101aecb4fe1e286c421d7f40d57c9c8e81" translate="yes" xml:space="preserve">
          <source>freeware</source>
          <target state="translated">freeware</target>
        </trans-unit>
        <trans-unit id="0b1e95cfd9775191a7224d0a218ae79187e80c1d" translate="yes" xml:space="preserve">
          <source>from</source>
          <target state="translated">from</target>
        </trans-unit>
        <trans-unit id="e915b1c2dc4b7b924f40f428d6d33f0636034739" translate="yes" xml:space="preserve">
          <source>from &lt;a href=&quot;http://www.cygwin.com/setup.exe&quot;&gt;http://www.cygwin.com/setup.exe&lt;/a&gt; to install it.</source>
          <target state="translated">&lt;a href=&quot;http://www.cygwin.com/setup.exe&quot;&gt;http://www.cygwin.com/setup.exe&lt;/a&gt;それをインストールします。</target>
        </trans-unit>
        <trans-unit id="1b82a95b58652a0d43869af02ac33460b0cbb36f" translate="yes" xml:space="preserve">
          <source>from &lt;a href=&quot;https://cygwin.com/install.html&quot;&gt;https://cygwin.com/install.html&lt;/a&gt; to install it.</source>
          <target state="translated">&lt;a href=&quot;https://cygwin.com/install.html&quot;&gt;https://cygwin.com/install.html&lt;/a&gt;それをインストールします。</target>
        </trans-unit>
        <trans-unit id="2b9f6e51104717bcb9edc568075f1a4305b599e2" translate="yes" xml:space="preserve">
          <source>from &lt;code&gt;LIBPATH&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;LIBPATH&lt;/code&gt; から</target>
        </trans-unit>
        <trans-unit id="3dc6963c76b87bb16e2818e8e03da405c8e30fc1" translate="yes" xml:space="preserve">
          <source>from &lt;code&gt;LIBPATH&lt;/code&gt; (I do not know whether &lt;code&gt;LIBPATHSTRICT&lt;/code&gt; affects this case).</source>
          <target state="translated">&lt;code&gt;LIBPATH&lt;/code&gt; から（ &lt;code&gt;LIBPATHSTRICT&lt;/code&gt; がこのケースに影響するかどうかはわかりません）。</target>
        </trans-unit>
        <trans-unit id="1633c8c5a5e3cf5c00184e1d081fc1108247a6c2" translate="yes" xml:space="preserve">
          <source>from &lt;code&gt;LIBPATH&lt;/code&gt; may affect</source>
          <target state="translated">&lt;code&gt;LIBPATH&lt;/code&gt; 影響を与える可能性があり</target>
        </trans-unit>
        <trans-unit id="f1b0616527a6a27bc1a7e8ae8fdc435e2548ac1e" translate="yes" xml:space="preserve">
          <source>from @&lt;code&gt;INC&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;INC&lt;/code&gt; から</target>
        </trans-unit>
        <trans-unit id="18d1bed07b829a29a8257b709ea1fd79c8739f99" translate="yes" xml:space="preserve">
          <source>from NetWare folder on a WinNT command prompt. This will copy the binaries and module files onto the NetWare server under</source>
          <target state="translated">をWinNTコマンドプロンプトでNetWareフォルダから実行します。これにより、バイナリとモジュールファイルが</target>
        </trans-unit>
        <trans-unit id="1081c08286220c354d0ebc4d6abe9317eda48564" translate="yes" xml:space="preserve">
          <source>from Perl's internal form into</source>
          <target state="translated">Perlの内部形式から</target>
        </trans-unit>
        <trans-unit id="b13279498c6a3aadf46ecbe4a4b6157040f9b114" translate="yes" xml:space="preserve">
          <source>from a DTrace action.</source>
          <target state="translated">DTraceのアクションから。</target>
        </trans-unit>
        <trans-unit id="751a6c071398c84e885916adc1ea335570ad1404" translate="yes" xml:space="preserve">
          <source>from a text-mode window is possible too, I have seen cases when this causes degradation of the system stability. Using</source>
          <target state="translated">テキストモードのウィンドウからも可能ですが、システムの安定性が低下するケースを見たことがあります。このような場合には</target>
        </trans-unit>
        <trans-unit id="69035dd795cbff28e9d3525c6439ccb960983f81" translate="yes" xml:space="preserve">
          <source>from an account with write access to the directory entry for /tmp.</source>
          <target state="translated">のディレクトリエントリへの書き込みアクセス権を持つアカウントから</target>
        </trans-unit>
        <trans-unit id="383f2601102e24f4cc975d7d614c17ba5250f8a1" translate="yes" xml:space="preserve">
          <source>from commercial database interfaces to keyboard/screen control and running large web sites.</source>
          <target state="translated">市販のデータベースインターフェースからキーボード/スクリーンコントロール、大規模なWebサイトの運営まで。</target>
        </trans-unit>
        <trans-unit id="0ee0203057cd7d08822a27095e1c970d18b539d9" translate="yes" xml:space="preserve">
          <source>from installation.</source>
          <target state="translated">をインストールします。</target>
        </trans-unit>
        <trans-unit id="94b37d20c375ba2e1acedb7a084c21511f239a5c" translate="yes" xml:space="preserve">
          <source>from my program.</source>
          <target state="translated">私のプログラムから</target>
        </trans-unit>
        <trans-unit id="333397f37964ee6b47b881b99367c6766f2fc2f6" translate="yes" xml:space="preserve">
          <source>from the American English module. (And I expect this same situation would apply with Brazilian and Continental Portugese, possibly with some</source>
          <target state="translated">をアメリカ英語モジュールから取り出しました。(そして、この状況はブラジル語とコンチネンタルポルトガル語にも当てはまると思います。</target>
        </trans-unit>
        <trans-unit id="320fb0300271531cf5948889cd979cc9819a8971" translate="yes" xml:space="preserve">
          <source>from the Cygwin package ( &lt;a href=&quot;http://cygwin.com/&quot;&gt;http://cygwin.com/&lt;/a&gt; )</source>
          <target state="translated">Cygwinパッケージ（&lt;a href=&quot;http://cygwin.com/&quot;&gt;http://cygwin.com/&lt;/a&gt;）から</target>
        </trans-unit>
        <trans-unit id="aaa5e27f0399162e929e60ca6272dbe420e57ea9" translate="yes" xml:space="preserve">
          <source>from the EMX distribution are not suitable for multi-threaded compile (even single-threaded flavor of Perl uses multi-threaded C RTL, for compatibility with XFree86-OS/2). Get a corrected one from</source>
          <target state="translated">EMX ディストリビューションのものはマルチスレッドコンパイルには適していません (Perl のシングルスレッドフレーバでさえ、XFree86-OS/2 との互換性のためにマルチスレッド C RTL を使用しています)。修正されたものを</target>
        </trans-unit>
        <trans-unit id="368e88f7e6e301d2d015d0a32fae528fbc16d251" translate="yes" xml:space="preserve">
          <source>from the NetWare folder on a WinNT command prompt after building NetWare Perl by following steps given above. This will copy all the *.pm files and other required files. Documentation files are not copied. Thus one must first install Windows Perl, Then install NetWare Perl.</source>
          <target state="translated">上記の手順でNetWare Perlをビルドした後、WinNTのコマンドプロンプトでNetWareフォルダから これにより、すべての *.pm ファイルとその他の必要なファイルがコピーされます。ドキュメントファイルはコピーされません。したがって、まず Windows Perl をインストールしてから NetWare Perl をインストールする必要があります。</target>
        </trans-unit>
        <trans-unit id="f0c7fd69154be4a7257043ca8e01f99e6e700ca4" translate="yes" xml:space="preserve">
          <source>from the Perl library to another name and hack it to your heart's content. You'll then want to set your &lt;code&gt;PERL5DB&lt;/code&gt; environment variable to say something like this:</source>
          <target state="translated">Perlライブラリから別の名前に変更し、それを心ゆくまでハックします。次に、 &lt;code&gt;PERL5DB&lt;/code&gt; 環境変数を次のように設定します。</target>
        </trans-unit>
        <trans-unit id="dc293ca3b406befd7643093e6e174cebeca27ed6" translate="yes" xml:space="preserve">
          <source>from the SV</source>
          <target state="translated">SVから</target>
        </trans-unit>
        <trans-unit id="9ac48b1e7c71f43c08babd09bb785ae39be9a503" translate="yes" xml:space="preserve">
          <source>from the above location.</source>
          <target state="translated">上記の場所から</target>
        </trans-unit>
        <trans-unit id="bf59bf60ece3adc447ab0b7fbe1ccd9297732ddf" translate="yes" xml:space="preserve">
          <source>from the command line. Examples using various values of &lt;code&gt;n&lt;/code&gt; are shown to give you a feel for the difference between settings. Long though it may be, this is not a complete listing, but only excerpts.</source>
          <target state="translated">コマンドラインから。 &lt;code&gt;n&lt;/code&gt; のさまざまな値を使用した例は、設定間の違いを感じさせるために示されています。長くなるかもしれませんが、これは完全なリストではなく、抜粋です。</target>
        </trans-unit>
        <trans-unit id="81deb62a86562bdf464092e6866a1a2081aadce7" translate="yes" xml:space="preserve">
          <source>from the functions of the layer</source>
          <target state="translated">レイヤーの機能から</target>
        </trans-unit>
        <trans-unit id="b3356f1f8d9f7845992bcf403da5889475561f1b" translate="yes" xml:space="preserve">
          <source>from the parser.</source>
          <target state="translated">をパーサから取得します。</target>
        </trans-unit>
        <trans-unit id="37fb151dcb2cd3783f1f8b872c625d88b495f7df" translate="yes" xml:space="preserve">
          <source>from the parser. &lt;a href=&quot;App::Prove&quot;&gt;App::Prove&lt;/a&gt; supports arbitrary plugins, and &lt;a href=&quot;TAP::Harness&quot;&gt;TAP::Harness&lt;/a&gt; supports custom</source>
          <target state="translated">パーサーから。&lt;a href=&quot;App::Prove&quot;&gt;App :: Prove&lt;/a&gt;は任意のプラグインをサポートし、&lt;a href=&quot;TAP::Harness&quot;&gt;TAP :: Harness&lt;/a&gt;はカスタムをサポートします</target>
        </trans-unit>
        <trans-unit id="6c945449166ba4b1f2b81c533c7eaaa29d7f8028" translate="yes" xml:space="preserve">
          <source>from the setting up of the filtering:</source>
          <target state="translated">フィルタリングの設定から。</target>
        </trans-unit>
        <trans-unit id="890dfdd429f73d6eaebcc8a839d1daba43eabf5c" translate="yes" xml:space="preserve">
          <source>from the stack.</source>
          <target state="translated">をスタックから取り出します。</target>
        </trans-unit>
        <trans-unit id="c0ca7c24efcc17464d0f67a1a806b45ea9abeeae" translate="yes" xml:space="preserve">
          <source>from the tied array</source>
          <target state="translated">紐付き配列から</target>
        </trans-unit>
        <trans-unit id="645ffe8245878f22793385cf49f9ff3ccebb181c" translate="yes" xml:space="preserve">
          <source>from the tied hash</source>
          <target state="translated">タイドハッシュから</target>
        </trans-unit>
        <trans-unit id="14ecd0b85c0cb2d431d1c447f0a5a89b603d0ff4" translate="yes" xml:space="preserve">
          <source>from their copies found in</source>
          <target state="translated">で見つけたコピーから</target>
        </trans-unit>
        <trans-unit id="8125472ea2001b2c8c6be29bde074441af1a4d52" translate="yes" xml:space="preserve">
          <source>from within cross-compilation directories.</source>
          <target state="translated">クロスコンパイルディレクトリ内から</target>
        </trans-unit>
        <trans-unit id="a052b55b7369cf6603a8335659cb5cea4c7fbff5" translate="yes" xml:space="preserve">
          <source>from.</source>
          <target state="translated">from.</target>
        </trans-unit>
        <trans-unit id="174b5db969551bf7e70cd28e71fc1ba1ce582d6b" translate="yes" xml:space="preserve">
          <source>from_base()</source>
          <target state="translated">from_base()</target>
        </trans-unit>
        <trans-unit id="9eb543dab6202ca60f9643401128d27f0f39fc25" translate="yes" xml:space="preserve">
          <source>from_bin()</source>
          <target state="translated">from_bin()</target>
        </trans-unit>
        <trans-unit id="a310dc7041bc5289fae0fa63c6d5e0263b0503a7" translate="yes" xml:space="preserve">
          <source>from_bytes()</source>
          <target state="translated">from_bytes()</target>
        </trans-unit>
        <trans-unit id="b686a399345e33e1f6ce24b8f98bc5aeca42835c" translate="yes" xml:space="preserve">
          <source>from_encoding</source>
          <target state="translated">from_encoding</target>
        </trans-unit>
        <trans-unit id="033b879aa0f142a9a6e14580329c57afe46cceb0" translate="yes" xml:space="preserve">
          <source>from_hex()</source>
          <target state="translated">from_hex()</target>
        </trans-unit>
        <trans-unit id="ea1775cc63779d207ecf4710c553007e18688d16" translate="yes" xml:space="preserve">
          <source>from_hex()/from_bin()/from_oct()</source>
          <target state="translated">from_hex()/from_bin()/from_oct()</target>
        </trans-unit>
        <trans-unit id="648644210c07d4065b25910715212f33a085974a" translate="yes" xml:space="preserve">
          <source>from_ieee754()</source>
          <target state="translated">from_ieee754()</target>
        </trans-unit>
        <trans-unit id="629c1c6d99bafcf548070d6104524b60818f121d" translate="yes" xml:space="preserve">
          <source>from_oct()</source>
          <target state="translated">from_oct()</target>
        </trans-unit>
        <trans-unit id="14fb61ebda8115ad24ead2e194b8d7d7f09036c3" translate="yes" xml:space="preserve">
          <source>from_string_hash</source>
          <target state="translated">from_string_hash</target>
        </trans-unit>
        <trans-unit id="5708f2d6e1120815620c96c8821806791a7cc80b" translate="yes" xml:space="preserve">
          <source>from_to</source>
          <target state="translated">from_to</target>
        </trans-unit>
        <trans-unit id="a5ed1f8ad54191564aae8a159123afb115e8b15a" translate="yes" xml:space="preserve">
          <source>fsize</source>
          <target state="translated">fsize</target>
        </trans-unit>
        <trans-unit id="17f3ee5cf07c57ab65e678e71a6e8f105ba92fad" translate="yes" xml:space="preserve">
          <source>fsync(3c)</source>
          <target state="translated">fsync(3c)</target>
        </trans-unit>
        <trans-unit id="896c73968253d102f66bbecf3d9e8bfdfc864a9f" translate="yes" xml:space="preserve">
          <source>fsz=INTEGER</source>
          <target state="translated">fsz=INTEGER</target>
        </trans-unit>
        <trans-unit id="dc16b319dc1440a90e393ebac354cef8f6a96096" translate="yes" xml:space="preserve">
          <source>ftn</source>
          <target state="translated">ftn</target>
        </trans-unit>
        <trans-unit id="c07d935aa9a4a8b1e2223f509674a63d240580e3" translate="yes" xml:space="preserve">
          <source>ftok( PATH )</source>
          <target state="translated">ftok(PATH )</target>
        </trans-unit>
        <trans-unit id="9143982c54cabcf429d993f1e2e9e497dd42da8a" translate="yes" xml:space="preserve">
          <source>ftok( PATH, ID )</source>
          <target state="translated">ftok(PATH,ID )</target>
        </trans-unit>
        <trans-unit id="7616bb87bd05f6439e3672ba1b2be55d5beb68b3" translate="yes" xml:space="preserve">
          <source>ftp</source>
          <target state="translated">ftp</target>
        </trans-unit>
        <trans-unit id="4f8a5a1309345b21b7eddf63128b6ba916b638a7" translate="yes" xml:space="preserve">
          <source>ftp(1), ftpd(8), RFC 959, RFC 2428, RFC 4217 &lt;a href=&quot;http://www.ietf.org/rfc/rfc959.txt&quot;&gt;http://www.ietf.org/rfc/rfc959.txt&lt;/a&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc2428.txt&quot;&gt;http://www.ietf.org/rfc/rfc2428.txt&lt;/a&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc4217.txt&quot;&gt;http://www.ietf.org/rfc/rfc4217.txt&lt;/a&gt;</source>
          <target state="translated">ftp（1）、ftpd（8）、RFC 959、RFC 2428、RFC 4217 &lt;a href=&quot;http://www.ietf.org/rfc/rfc959.txt&quot;&gt;http://www.ietf.org/rfc/rfc959.txt &lt;/a&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc2428.txt&quot;&gt;http://www.ietf.org/rfc/rfc2428.txt &lt;/a&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc4217.txt&quot;&gt;http： //www.ietf.org/rfc/rfc4217.txt&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ddef5b042bda0bf8bace709a745e3cf0403bb0c4" translate="yes" xml:space="preserve">
          <source>ftp(1), ftpd(8), RFC 959, RFC 2428, RFC 4217 http://www.ietf.org/rfc/rfc959.txt http://www.ietf.org/rfc/rfc2428.txt http://www.ietf.org/rfc/rfc4217.txt</source>
          <target state="translated">ftp(1)、ftpd(8)、RFC 959、RFC 2428、RFC 4217 http://www.ietf.org/rfc/rfc959.txt http://www.ietf.org/rfc/rfc4217.txt http://www.ietf.org/rfc/rfc2428.txt http://www.ietf.org/rfc/rfc4217.txt http://www.ietf.org/rfc/rfc2428.txt http://www.ietf.org/rfc/rfc4217.txt http://www.ietf.org/rfc/rfc4217.txt</target>
        </trans-unit>
        <trans-unit id="386e02d386f110da7a3a0502c51649a09aa63ac8" translate="yes" xml:space="preserve">
          <source>ftp://ftp.oreilly.com/pub/examples/nutshell/cjkv/pdf/GB18030_Summary.pdf</source>
          <target state="translated">ftp://ftp.oreilly.com/pub/examples/nutshell/cjkv/pdf/GB18030_Summary.pdf</target>
        </trans-unit>
        <trans-unit id="42580435afe34b3051e344f55cdc12a0b77baa8d" translate="yes" xml:space="preserve">
          <source>ftp_ext_passive</source>
          <target state="translated">ftp_ext_passive</target>
        </trans-unit>
        <trans-unit id="d52aa4702a28a12da234ac2862f5f0405ca80501" translate="yes" xml:space="preserve">
          <source>ftp_firewall</source>
          <target state="translated">ftp_firewall</target>
        </trans-unit>
        <trans-unit id="87b4824af0403a0e3b32fd9d3a77391b7ccd5d90" translate="yes" xml:space="preserve">
          <source>ftp_firewall_type</source>
          <target state="translated">ftp_firewall_type</target>
        </trans-unit>
        <trans-unit id="6bc7b96a0d291ba2df662a244c3117585c39efe4" translate="yes" xml:space="preserve">
          <source>ftp_int_passive</source>
          <target state="translated">ftp_int_passive</target>
        </trans-unit>
        <trans-unit id="e17a82dd0eed12c462d54c8a78b2da80930d99a0" translate="yes" xml:space="preserve">
          <source>ftp_passive</source>
          <target state="translated">ftp_passive</target>
        </trans-unit>
        <trans-unit id="5ee0e004da4c4e0ee2b0f57330a4ea3547aafe3b" translate="yes" xml:space="preserve">
          <source>ftpstats_period</source>
          <target state="translated">ftpstats_period</target>
        </trans-unit>
        <trans-unit id="ea2ad74c0b16270827760b746ac0daed80a7b00b" translate="yes" xml:space="preserve">
          <source>ftpstats_size</source>
          <target state="translated">ftpstats_size</target>
        </trans-unit>
        <trans-unit id="52e6d8ab88471af82da12a0eae7aab01357e3881" translate="yes" xml:space="preserve">
          <source>full</source>
          <target state="translated">full</target>
        </trans-unit>
        <trans-unit id="4be4b609d8286e5df3a5bc1537ff258787b95892" translate="yes" xml:space="preserve">
          <source>full flush point</source>
          <target state="translated">フルフラッシュポイント</target>
        </trans-unit>
        <trans-unit id="cf72a762bff3f354307c7404319a49142c5b077a" translate="yes" xml:space="preserve">
          <source>full flush points</source>
          <target state="translated">フルフラッシュポイント</target>
        </trans-unit>
        <trans-unit id="f7d904359879ff3b197839879bcb66b62523fdba" translate="yes" xml:space="preserve">
          <source>full_buffer</source>
          <target state="translated">full_buffer</target>
        </trans-unit>
        <trans-unit id="0462917657f1241b55febfc4a82d2c8c96b73adb" translate="yes" xml:space="preserve">
          <source>full_opset</source>
          <target state="translated">full_opset</target>
        </trans-unit>
        <trans-unit id="fe56a39283a0c45834a718159ee07345696a76f3" translate="yes" xml:space="preserve">
          <source>fullcheck</source>
          <target state="translated">fullcheck</target>
        </trans-unit>
        <trans-unit id="99fdb3623cf5c6ad0283ca5c096018dd2f2ff5ad" translate="yes" xml:space="preserve">
          <source>func</source>
          <target state="translated">func</target>
        </trans-unit>
        <trans-unit id="c218e39efa2e1aae69f39d2054528369ce1e1f46" translate="yes" xml:space="preserve">
          <source>function</source>
          <target state="translated">function</target>
        </trans-unit>
        <trans-unit id="371ecebfd38c7796b8575bdfc4291b880d00c0bc" translate="yes" xml:space="preserve">
          <source>function are still tainted. If this option is used while not in taint-mode, &lt;code&gt;untaint&lt;/code&gt; is a no-op.</source>
          <target state="translated">機能はまだ汚染されています。taint-modeではないときにこのオプションを使用すると、 &lt;code&gt;untaint&lt;/code&gt; は何もしません。</target>
        </trans-unit>
        <trans-unit id="921c8607ede78cb6f250bb86e54f6a46f43d416e" translate="yes" xml:space="preserve">
          <source>function calls if platform cannot export data to loaded modules, or if (say) different &quot;threads&quot; might have different values.</source>
          <target state="translated">関数は、プラットフォームがロードされたモジュールにデータをエクスポートできない場合や、(例えば)異なる &quot;スレッド &quot;が異なる値を持つ場合に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="4448cad5d5eeca1f46105fb35f3ee5eacb51c265" translate="yes" xml:space="preserve">
          <source>function has itself been called from another Perl subroutine. The code below illustrates this</source>
          <target state="translated">関数自体が別のPerlのサブルーチンから呼び出されています。以下のコードはこれを説明しています。</target>
        </trans-unit>
        <trans-unit id="c5d3e4aaace1de050cba2dd4997633a2e33549da" translate="yes" xml:space="preserve">
          <source>function in</source>
          <target state="translated">働きかける</target>
        </trans-unit>
        <trans-unit id="c47eacdbb4fe97341345191d25d5b6ccb055471b" translate="yes" xml:space="preserve">
          <source>function indicates how many items have been returned by the Perl subroutine - in this case it will be either 0 or 1.</source>
          <target state="translated">関数は、Perlのサブルーチンが何個の項目を返したかを示します。</target>
        </trans-unit>
        <trans-unit id="e349e3f36a6d04510d3cd84c4c4ef507dda98c60" translate="yes" xml:space="preserve">
          <source>function indicates how many items have been returned by the Perl subroutine--in this case it will be 0.</source>
          <target state="translated">関数は、Perlのサブルーチンによって返された項目の数を示します。</target>
        </trans-unit>
        <trans-unit id="8c86469099745da11426bbfffb10448d05aa4761" translate="yes" xml:space="preserve">
          <source>function indicates how many items have been returned by the Perl subroutine.</source>
          <target state="translated">関数は、Perlのサブルーチンで返された項目の数を示します。</target>
        </trans-unit>
        <trans-unit id="08986a62abd1f7c838a100f32cc3df947fb3c3b6" translate="yes" xml:space="preserve">
          <source>function invoked with G_EVAL|G_SCALAR returns an error, the top of the stack holds the value</source>
          <target state="translated">G_EVAL|G_SCALARで呼び出された関数がエラーを返した場合、スタックの先頭に値が格納されます。</target>
        </trans-unit>
        <trans-unit id="709565f017b462700d7916a3457dc34f4e2a5d87" translate="yes" xml:space="preserve">
          <source>function is available to compute all the</source>
          <target state="translated">関数は、すべての</target>
        </trans-unit>
        <trans-unit id="6f233e4a118de0e40b9d2fd0c788482ab305e8c8" translate="yes" xml:space="preserve">
          <source>function is dependent on what other flags have been specified and whether an error has occurred. Here are all the different cases that can occur:</source>
          <target state="translated">関数は、他にどのようなフラグが指定されているか、そしてエラーが発生したかどうかに依存します。ここでは、発生する可能性のあるすべての異なるケースを示します。</target>
        </trans-unit>
        <trans-unit id="c81b1842c80722098e442b820dc9da37d29cf3b2" translate="yes" xml:space="preserve">
          <source>function is used to remove files safely.</source>
          <target state="translated">関数を使って安全にファイルを削除します。</target>
        </trans-unit>
        <trans-unit id="d49c3bbd015d363f467d2e805c15b881be79308b" translate="yes" xml:space="preserve">
          <source>function lets us evaluate strings of Perl code, so we can define some functions that use it to &quot;specialize&quot; in matches and substitutions:</source>
          <target state="translated">関数はPerlのコードの文字列を評価することができます。</target>
        </trans-unit>
        <trans-unit id="6462d135000aabf5e34046cd89a36e43bfef3724" translate="yes" xml:space="preserve">
          <source>function of this form</source>
          <target state="translated">本式関数</target>
        </trans-unit>
        <trans-unit id="c2898873b6c5a47ad338ff0a0aa6bf3e83cb4fa1" translate="yes" xml:space="preserve">
          <source>function or values returned via the stack) have been freed by one of these methods:</source>
          <target state="translated">関数やスタック経由で返された値)が、これらのメソッドのいずれかによって解放されたことを示しています。</target>
        </trans-unit>
        <trans-unit id="827be83ac4559c1a39c458efa1d64cc14cabe987" translate="yes" xml:space="preserve">
          <source>function returns normally, then the value returned is as specified in the previous sections.</source>
          <target state="translated">関数が正常に返された場合、返される値は前のセクションで指定された通りの値になります。</target>
        </trans-unit>
        <trans-unit id="b63e08a202c99ced87abfc8bdd18a837535981af" translate="yes" xml:space="preserve">
          <source>function template</source>
          <target state="translated">関数テンプレート</target>
        </trans-unit>
        <trans-unit id="839904c508f8afb161daa74821e2d65bc79396eb" translate="yes" xml:space="preserve">
          <source>function to</source>
          <target state="translated">関数を使用して</target>
        </trans-unit>
        <trans-unit id="9614a87de1ec212f6e75e447f14c75736c763f11" translate="yes" xml:space="preserve">
          <source>function to change the mode of the filehandle.</source>
          <target state="translated">関数を使用してファイルハンドルのモードを変更します。</target>
        </trans-unit>
        <trans-unit id="1f4bb25f00b77da3e3e6d173f6501160935be139" translate="yes" xml:space="preserve">
          <source>function will use two functions from</source>
          <target state="translated">関数は</target>
        </trans-unit>
        <trans-unit id="de074845f99b0b7a978c23b445857f36226972ba" translate="yes" xml:space="preserve">
          <source>function you need to check the &lt;code&gt;$@&lt;/code&gt; variable as you would in a normal Perl script.</source>
          <target state="translated">通常のPerlスクリプトと同じように、 &lt;code&gt;$@&lt;/code&gt; 変数をチェックする必要があります。</target>
        </trans-unit>
        <trans-unit id="8714555a0e0a02847ef4168f72b554518068e2a9" translate="yes" xml:space="preserve">
          <source>function). First I'll create a stub exponentiation function in</source>
          <target state="translated">関数)を作成します。)まず、スタブ指数関数を</target>
        </trans-unit>
        <trans-unit id="cac02ec1a476ed80dfd51b02515cb2a3bd581ae2" translate="yes" xml:space="preserve">
          <source>function.</source>
          <target state="translated">function.</target>
        </trans-unit>
        <trans-unit id="7f6cacfa2af13d3c42cecad5f1253e2aa4e36fbf" translate="yes" xml:space="preserve">
          <source>function. Note that directories created with this method default to CLEANUP =&amp;gt; 1.</source>
          <target state="translated">関数。この方法で作成されたディレクトリのデフォルトはCLEANUP =&amp;gt; 1です。</target>
        </trans-unit>
        <trans-unit id="39824aa3670c040b93bf7b0aa04edfe528553280" translate="yes" xml:space="preserve">
          <source>function. The only flag specified this time is G_DISCARD. Because we are passing 2 parameters to the Perl subroutine this time, we have not specified G_NOARGS.</source>
          <target state="translated">関数を使用しています。今回指定したフラグはg_discardのみです。今回はPerlのサブルーチンに2つのパラメータを渡しているので、G_NOARGSは指定していません。</target>
        </trans-unit>
        <trans-unit id="1612e16bda21c762a6fc4ea0f9f049acf4c6d400" translate="yes" xml:space="preserve">
          <source>function. The section</source>
          <target state="translated">関数を使用しています。セクションの</target>
        </trans-unit>
        <trans-unit id="a4625bbfb1f48bc66cbe6b0a196078014434dedb" translate="yes" xml:space="preserve">
          <source>function. The section &lt;a href=&quot;#Returning-a-List-in-Scalar-Context&quot;&gt;&quot;Returning a List in Scalar Context&quot;&lt;/a&gt; shows an example of this behavior.</source>
          <target state="translated">関数。&lt;a href=&quot;#Returning-a-List-in-Scalar-Context&quot;&gt;「スカラーコンテキストでリストを返す」&lt;/a&gt;セクションでは、この動作の例を示しています。</target>
        </trans-unit>
        <trans-unit id="6ffde53f3f67404d2136045c60915165a4911a81" translate="yes" xml:space="preserve">
          <source>function. This has been done to keep the code simpler and ease you into the topic. Wherever possible, if the choice is between using</source>
          <target state="translated">関数を使用しています。これは、コードをよりシンプルにして、このトピックを理解しやすくするために行われています。可能な限り、もし</target>
        </trans-unit>
        <trans-unit id="d02289da5b7668a0d6b47a2dfb3aafcccfa0df0a" translate="yes" xml:space="preserve">
          <source>functioning exec() on OS/2. exec() is emulated by EMX by an asynchronous call while the caller waits for child completion (to pretend that the &lt;code&gt;pid&lt;/code&gt; did not change). This means that 1</source>
          <target state="translated">OS / 2で機能するexec（）。exec（）は非同期呼び出しによってEMXによってエミュレートされ、呼び出し元は子の完了を待機します（ &lt;code&gt;pid&lt;/code&gt; が変更されていないふりをするため）。つまり、1</target>
        </trans-unit>
        <trans-unit id="2f887def33825e52ffbcca83446cfd6a6f676ff7" translate="yes" xml:space="preserve">
          <source>functions</source>
          <target state="translated">functions</target>
        </trans-unit>
        <trans-unit id="795602d99bd11f8d6f7100fb870f7bbc5d1f87c9" translate="yes" xml:space="preserve">
          <source>functions &lt;code&gt;deflateInit&lt;/code&gt; , &lt;code&gt;deflateInit2&lt;/code&gt; and &lt;code&gt;deflateSetDictionary&lt;/code&gt; .</source>
          <target state="translated">関数 &lt;code&gt;deflateInit&lt;/code&gt; 、 &lt;code&gt;deflateInit2&lt;/code&gt; および &lt;code&gt;deflateSetDictionary&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1f1369148ea5a2c26824a2f3560dd0c9779fe6e2" translate="yes" xml:space="preserve">
          <source>functions &lt;code&gt;deflateInit&lt;/code&gt;, &lt;code&gt;deflateInit2&lt;/code&gt; and &lt;code&gt;deflateSetDictionary&lt;/code&gt;.</source>
          <target state="translated">関数 &lt;code&gt;deflateInit&lt;/code&gt; 、 &lt;code&gt;deflateInit2&lt;/code&gt; および &lt;code&gt;deflateSetDictionary&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a2f7de210568ab5cef8739a04d4636a5656d1878" translate="yes" xml:space="preserve">
          <source>functions have a &lt;code&gt;flags&lt;/code&gt; parameter which is used to pass a bit mask of options to Perl. This bit mask operates identically for each of the functions. The settings available in the bit mask are discussed in &lt;a href=&quot;#FLAG-VALUES&quot;&gt;&quot;FLAG VALUES&quot;&lt;/a&gt;.</source>
          <target state="translated">関数には、オプションのビットマスクをPerlに渡すために使用される &lt;code&gt;flags&lt;/code&gt; パラメーターがあります。このビットマスクは、各機能で同じように動作します。ビットマスクで使用可能な設定については、&lt;a href=&quot;#FLAG-VALUES&quot;&gt;「&lt;/a&gt;フラグ値」で説明しています。</target>
        </trans-unit>
        <trans-unit id="fa4a08f2b3c0a224c8a79c1e480d05c64a00f0d7" translate="yes" xml:space="preserve">
          <source>functions have a &lt;code&gt;flags&lt;/code&gt; parameter which is used to pass a bit mask of options to Perl. This bit mask operates identically for each of the functions. The settings available in the bit mask are discussed in &lt;a href=&quot;#FLAG-VALUES&quot;&gt;FLAG VALUES&lt;/a&gt;.</source>
          <target state="translated">関数には、Perlにオプションのビットマスクを渡すために使用される &lt;code&gt;flags&lt;/code&gt; パラメータがあります。このビットマスクは、機能ごとに同じように動作します。ビットマスクで使用可能な設定については、「フラグ&lt;a href=&quot;#FLAG-VALUES&quot;&gt;値」で&lt;/a&gt;説明しています。</target>
        </trans-unit>
        <trans-unit id="4a00c08bf6c283d615113e147ab718cfa6a1b479" translate="yes" xml:space="preserve">
          <source>functions in there. This is because Perl tends to reimplement or abstract standard library functions, so that we know exactly how they're going to operate.</source>
          <target state="translated">関数が入っています。これは、Perlが標準ライブラリの関数を再実装したり、抽象化したりする傾向があるため、それらがどのように動作するかを正確に知ることができるからです。</target>
        </trans-unit>
        <trans-unit id="bbf61031b62bdf087c8809f3227e75d3edcaf3f8" translate="yes" xml:space="preserve">
          <source>functions is one of G_VOID, G_SCALAR, or G_ARRAY, which indicate the call context, OR'ed together with a bit mask of any combination of the other G_* symbols defined below.</source>
          <target state="translated">関数は、G_VOID、G_SCALAR、またはG_ARRAYのいずれかで、コールコンテキストを示し、以下に定義されている他のG_*シンボルの任意の組み合わせのビットマスクと一緒にORされています。</target>
        </trans-unit>
        <trans-unit id="f5a9d69120c616a0ffffa979bf943ce16979ae6c" translate="yes" xml:space="preserve">
          <source>functions or any other Perl internal function.</source>
          <target state="translated">関数やその他のPerlの内部関数を使用することができます。</target>
        </trans-unit>
        <trans-unit id="ed9dda692b625541cd84b16cef88e6b48d1b4400" translate="yes" xml:space="preserve">
          <source>functions place the items returned from by the Perl subroutine on the stack. If you are not interested in these items, then setting this flag will make Perl get rid of them automatically for you. Note that it is still possible to indicate a context to the Perl subroutine by using either G_SCALAR or G_ARRAY.</source>
          <target state="translated">関数は、Perlのサブルーチンから返されたアイテムをスタック上に配置します。もしこれらのアイテムに興味がない場合は、このフラグを設定することでPerlが自動的にアイテムを除去してくれます。G_SCALARやG_ARRAYを使ってPerlサブルーチンのコンテキストを指定することも可能です。</target>
        </trans-unit>
        <trans-unit id="0266b629f6cdab1b7ac306bc735913fc2f7d6ff7" translate="yes" xml:space="preserve">
          <source>functions seem to hang. It also creates a compile time dependency because</source>
          <target state="translated">関数がハングするようです。また、コンパイル時の依存関係が発生します。</target>
        </trans-unit>
        <trans-unit id="cea16ebbf991d186159977779dd22a7b373909bc" translate="yes" xml:space="preserve">
          <source>functions that are used to implement such code, or with &lt;code&gt;eval_sv&lt;/code&gt; . This flag has no effect on the &lt;code&gt;call_*&lt;/code&gt; functions when G_EVAL is not used.</source>
          <target state="translated">そのようなコードを実装するために使用される関数、または &lt;code&gt;eval_sv&lt;/code&gt; 。G_EVALが使用されていない場合、このフラグは &lt;code&gt;call_*&lt;/code&gt; 関数に影響を与えません。</target>
        </trans-unit>
        <trans-unit id="784b73dcb00349384eb9c4fef8b6149231631092" translate="yes" xml:space="preserve">
          <source>functions that are used to implement such code, or with &lt;code&gt;eval_sv&lt;/code&gt;. This flag has no effect on the &lt;code&gt;call_*&lt;/code&gt; functions when G_EVAL is not used.</source>
          <target state="translated">このようなコードを実装するために、または &lt;code&gt;eval_sv&lt;/code&gt; で使用される関数。G_EVALが使用されていない場合、このフラグは &lt;code&gt;call_*&lt;/code&gt; 関数には影響しません。</target>
        </trans-unit>
        <trans-unit id="d379e01b6d42632318ed90e7edf530ed24a60356" translate="yes" xml:space="preserve">
          <source>functions, but if you think you do, use the &lt;code&gt;JMPENV&lt;/code&gt; stack in</source>
          <target state="translated">関数、しかしもしそうなら、 &lt;code&gt;JMPENV&lt;/code&gt; スタックを</target>
        </trans-unit>
        <trans-unit id="fd15d3a1053798c8af707626519bd428c8fa6c85" translate="yes" xml:space="preserve">
          <source>functions, if the &lt;code&gt;h_errno&lt;/code&gt; variable is supported in C, it will be returned to you via &lt;a href=&quot;perlvar#%24%3F&quot;&gt;&lt;code&gt;$?&lt;/code&gt;&lt;/a&gt; if the function call fails. The &lt;code&gt;@addrs&lt;/code&gt; value returned by a successful call is a list of raw addresses returned by the corresponding library call. In the Internet domain, each address is four bytes long; you can unpack it by saying something like:</source>
          <target state="translated">関数、 &lt;code&gt;h_errno&lt;/code&gt; 変数がCでサポートされている場合、&lt;a href=&quot;perlvar#%24%3F&quot;&gt; &lt;code&gt;$?&lt;/code&gt; &lt;/a&gt;を介して返されます。関数呼び出しが失敗した場合。 &lt;code&gt;@addrs&lt;/code&gt; の成功した呼び出しによって返される値は、対応するライブラリコールが返す、生のアドレスのリストです。インターネットドメインでは、各アドレスの長さは4バイトです。次のように言うと、開梱できます。</target>
        </trans-unit>
        <trans-unit id="3db3d5d47141e2a7c0f3f30a5874d09bb858106b" translate="yes" xml:space="preserve">
          <source>functions, if the &lt;code&gt;h_errno&lt;/code&gt; variable is supported in C, it will be returned to you via &lt;code&gt;$?&lt;/code&gt; if the function call fails. The &lt;code&gt;@addrs&lt;/code&gt; value returned by a successful call is a list of raw addresses returned by the corresponding library call. In the Internet domain, each address is four bytes long; you can unpack it by saying something like:</source>
          <target state="translated">関数、Cで &lt;code&gt;h_errno&lt;/code&gt; 変数がサポートされている場合、 &lt;code&gt;$?&lt;/code&gt; を介して返されます。関数呼び出しが失敗した場合。 &lt;code&gt;@addrs&lt;/code&gt; の成功した呼び出しによって返される値は、対応するライブラリコールが返す、生のアドレスのリストです。インターネットドメインでは、各アドレスは4バイト長です。次のように言うことで解凍できます：</target>
        </trans-unit>
        <trans-unit id="ab746b3b6e9dbfef3a73f6a20320d7a691c7d497" translate="yes" xml:space="preserve">
          <source>functions, it is assumed by default that parameters are to be passed to the subroutine. If you are not passing any parameters to the Perl subroutine, you can save a bit of time by setting this flag. It has the effect of not creating the &lt;code&gt;@_&lt;/code&gt; array for the Perl subroutine.</source>
          <target state="translated">関数では、デフォルトでパラメータがサブルーチンに渡されることが想定されています。Perlサブルーチンにパラメーターを渡さない場合は、このフラグを設定することで時間を少し節約できます。これは、Perlサブルーチンに対して &lt;code&gt;@_&lt;/code&gt; 配列を作成しないという効果があります。</target>
        </trans-unit>
        <trans-unit id="c12494f4c3370df35c000798cef56281e2f4658e" translate="yes" xml:space="preserve">
          <source>functions, you should use the Perl abstraction layer. Instead of &lt;code&gt;FILE*&lt;/code&gt; types, you need to be handling &lt;code&gt;PerlIO*&lt;/code&gt; types. Don't forget that with the new PerlIO layered I/O abstraction &lt;code&gt;FILE*&lt;/code&gt; types may not even be available. See also the &lt;code&gt;perlapio&lt;/code&gt; documentation for more information about the following functions:</source>
          <target state="translated">関数、Perl抽象化レイヤーを使用する必要があります。 &lt;code&gt;FILE*&lt;/code&gt; タイプの代わりに、 &lt;code&gt;PerlIO*&lt;/code&gt; タイプを処理する必要があります。新しいPerlIOレイヤードI / O抽象化では、 &lt;code&gt;FILE*&lt;/code&gt; タイプも使用できない場合があることを忘れないでください。次の関数の詳細については、 &lt;code&gt;perlapio&lt;/code&gt; のドキュメントも参照してください。</target>
        </trans-unit>
        <trans-unit id="400007d88b6b4566e980b89ce7386d250afbac83" translate="yes" xml:space="preserve">
          <source>functions--Perl still needs to know that there are no parameters.</source>
          <target state="translated">関数--Perl はまだパラメータがないことを知る必要があります。</target>
        </trans-unit>
        <trans-unit id="799a717984947628e35b2d197f737851795530da" translate="yes" xml:space="preserve">
          <source>functions.</source>
          <target state="translated">functions.</target>
        </trans-unit>
        <trans-unit id="73a142adca2349d6c3484995289b70ed6f42550f" translate="yes" xml:space="preserve">
          <source>funny character</source>
          <target state="translated">滑稽キャラ</target>
        </trans-unit>
        <trans-unit id="8aeff27d06e584e53d098c207eb146d5e5cb60cc" translate="yes" xml:space="preserve">
          <source>further</source>
          <target state="translated">further</target>
        </trans-unit>
        <trans-unit id="54fd1711209fb1c0781092374132c66e79e2241b" translate="yes" xml:space="preserve">
          <source>g</source>
          <target state="translated">g</target>
        </trans-unit>
        <trans-unit id="0724ff6cafe6313a1d579e6f40dda018ed30470b" translate="yes" xml:space="preserve">
          <source>garbage collection</source>
          <target state="translated">ごみ収集</target>
        </trans-unit>
        <trans-unit id="0224d713937ae9873e5c9d553fee79419bb53b1f" translate="yes" xml:space="preserve">
          <source>gawk.exe</source>
          <target state="translated">gawk.exe</target>
        </trans-unit>
        <trans-unit id="719cda6058f8cc7d92194622eac2a5185581aea0" translate="yes" xml:space="preserve">
          <source>gbacon@cs.uah.edu</source>
          <target state="translated">gbacon@cs.uah.edu</target>
        </trans-unit>
        <trans-unit id="027924336fe5581ad022afa8921be2488d4f1fea" translate="yes" xml:space="preserve">
          <source>gbarr@pobox.com</source>
          <target state="translated">gbarr@pobox.com</target>
        </trans-unit>
        <trans-unit id="688643098e5695350378838f34d9867bd1e4833f" translate="yes" xml:space="preserve">
          <source>gbc=INTEGER</source>
          <target state="translated">gbc=INTEGER</target>
        </trans-unit>
        <trans-unit id="fce79b7fe1fee3a977fa1bd4efbd9e9a06c29c14" translate="yes" xml:space="preserve">
          <source>gcc</source>
          <target state="translated">gcc</target>
        </trans-unit>
        <trans-unit id="c631fc0fece8ffca9bd2a03e55b12f7ab1b8c9f4" translate="yes" xml:space="preserve">
          <source>gcc 3.2.1 is known to work okay with Perl 5.8.0. However, when optimizing the toke.c gcc likes to have a lot of memory, 256 megabytes seems to be enough. The default setting of the process data section in Tru64 should be one gigabyte, but some sites/setups might have lowered that. The configuration process of Perl checks for too low process limits, and lowers the optimization for the toke.c if necessary, and also gives advice on how to raise the process limits.</source>
          <target state="translated">gcc 3.2.1はPerl 5.8.0でも問題なく動作することが知られています。しかし、toke.cを最適化する際にgccはメモリを多く持ちたがるので、256メガバイトで十分なようです。Tru64のプロセスデータセクションのデフォルト設定は1ギガバイトのはずですが、サイトや設定によってはこれよりも低い値になっているかもしれません。Perlの設定処理では、プロセス制限が低すぎるかどうかをチェックして、必要に応じてtoke.cの最適化を下げたり、プロセス制限を上げるためのアドバイスをしたりしています。</target>
        </trans-unit>
        <trans-unit id="1d338b86cc1870c42005500c205b74129ed859b2" translate="yes" xml:space="preserve">
          <source>gcc has had them for a while with its own syntax, and C99 brought them with a standardized syntax. Don't use the former, and use the latter only if the HAS_C99_VARIADIC_MACROS is defined.</source>
          <target state="translated">gccはしばらくの間、独自の構文でそれらを持っていましたが、C99は標準化された構文でそれらを持ってきました。前者は使わず、後者は HAS_C99_VARIADIC_MACROS が定義されている場合にのみ使用してください。</target>
        </trans-unit>
        <trans-unit id="b67d72ad08b17821bf582bfd1ebf8a965dc18483" translate="yes" xml:space="preserve">
          <source>gcc warnings</source>
          <target state="translated">gcc 警告</target>
        </trans-unit>
        <trans-unit id="0d536b21ff2cc78741262177eb3907f74609a50a" translate="yes" xml:space="preserve">
          <source>gccvers.U</source>
          <target state="translated">gccvers.U</target>
        </trans-unit>
        <trans-unit id="8fdfcfae9d75939f4a247717b6dfdb6366d642fc" translate="yes" xml:space="preserve">
          <source>gcov</source>
          <target state="translated">gcov</target>
        </trans-unit>
        <trans-unit id="8ead6354003c3f4fa80c692081bc8265af11220e" translate="yes" xml:space="preserve">
          <source>gdb</source>
          <target state="translated">gdb</target>
        </trans-unit>
        <trans-unit id="3e8812c9faba2b285bede251c4524c07b3d5d116" translate="yes" xml:space="preserve">
          <source>gdb macro support</source>
          <target state="translated">gdb マクロサポート</target>
        </trans-unit>
        <trans-unit id="cda518e8a8e9a3d63d2a9acda736c776d5d571a2" translate="yes" xml:space="preserve">
          <source>gdbm is available from any GNU archive. The master site is &lt;code&gt;ftp.gnu.org&lt;/code&gt;, but you are strongly urged to use one of the many mirrors. You can obtain a list of mirror sites from &lt;a href=&quot;http://www.gnu.org/order/ftp.html&quot;&gt;http://www.gnu.org/order/ftp.html&lt;/a&gt;.</source>
          <target state="translated">gdbmは、任意のGNUアーカイブから入手できます。マスターサイトは &lt;code&gt;ftp.gnu.org&lt;/code&gt; ですが、多くのミラーの1つを使用することを強くお勧めします。ミラーサイトのリストは&lt;a href=&quot;http://www.gnu.org/order/ftp.html&quot;&gt;http://www.gnu.org/order/ftp.html&lt;/a&gt;から入手できます。</target>
        </trans-unit>
        <trans-unit id="fb5a931bce6490c0cfe40153baf357aec3e61f69" translate="yes" xml:space="preserve">
          <source>gdbm store returned %d, errno %d, key &quot;%s&quot;</source>
          <target state="translated">gdbm ストアは %d、 errno %d、キー &quot;%s&quot; を返しました。</target>
        </trans-unit>
        <trans-unit id="34c44a0056555a06edf458ded174ef8a4dd25908" translate="yes" xml:space="preserve">
          <source>gdbm/ndbm.h</source>
          <target state="translated">gdbm/ndbm.h</target>
        </trans-unit>
        <trans-unit id="a9060bd5525711459bfd3fbd9a5d9658cfa6338a" translate="yes" xml:space="preserve">
          <source>ge</source>
          <target state="translated">ge</target>
        </trans-unit>
        <trans-unit id="4f27a42f388e690d52786e3fd902c66debf2d26b" translate="yes" xml:space="preserve">
          <source>gecho.exe</source>
          <target state="translated">gecho.exe</target>
        </trans-unit>
        <trans-unit id="bfe76b3fbe072e730c615d95a89d47e6218fe5fc" translate="yes" xml:space="preserve">
          <source>gen_delimited_pat</source>
          <target state="translated">gen_delimited_pat</target>
        </trans-unit>
        <trans-unit id="6ade8a9fb18699f0a50b3f40e42efbbbdd2b7aba" translate="yes" xml:space="preserve">
          <source>gen_extract_tagged</source>
          <target state="translated">gen_extract_tagged</target>
        </trans-unit>
        <trans-unit id="132b9cda3ef7b94eac049e3c7755ef56d867cbc9" translate="yes" xml:space="preserve">
          <source>gendata/*</source>
          <target state="translated">gendata/*</target>
        </trans-unit>
        <trans-unit id="8b78df44a46afbd7988b7ca084bcf47a4bc1ea77" translate="yes" xml:space="preserve">
          <source>general_categories()</source>
          <target state="translated">general_categories()</target>
        </trans-unit>
        <trans-unit id="307ac06b3ab1cd429d0ff8eb90ffc8dbef662632" translate="yes" xml:space="preserve">
          <source>generally has a CPAN-style directory- and file-layout and its own</source>
          <target state="translated">一般的には、CPAN スタイルのディレクトリとファイルレイアウトと、独自の</target>
        </trans-unit>
        <trans-unit id="5ceffd08b1b7cf10811feb78e1e9210fa84b0889" translate="yes" xml:space="preserve">
          <source>generally means Perl 5.8.9 and later, though some Unicode pathname functionality may work on earlier versions.</source>
          <target state="translated">一般的には Perl 5.8.9 以降を意味しますが、Unicode パス名の機能はそれ以前のバージョンでも動作する場合があります。</target>
        </trans-unit>
        <trans-unit id="9e59d42533de13285d6ef99427563967a25bfcf7" translate="yes" xml:space="preserve">
          <source>generate</source>
          <target state="translated">generate</target>
        </trans-unit>
        <trans-unit id="ab3bdf813f715b91bac8c995a9b7d25be4176272" translate="yes" xml:space="preserve">
          <source>generated because you didn't supply a full path to the program; instead, it's generated because you never set your PATH environment variable, or you didn't set it to something that was safe. Because Perl can't guarantee that the executable in question isn't itself going to turn around and execute some other program that is dependent on your PATH, it makes sure you set the PATH.</source>
          <target state="translated">これは、プログラムへのフルパスを提供しなかったために生成されたものです。Perl は、問題の実行ファイルが自分の PATH に依存している他のプログラムを実行しないことを保証できないため、PATH を設定していることを確認します。</target>
        </trans-unit>
        <trans-unit id="21c7bab6d347a6a992c55d509e9f5eb499c67fb8" translate="yes" xml:space="preserve">
          <source>generated during the last phase to</source>
          <target state="translated">に最後のフェーズで生成された</target>
        </trans-unit>
        <trans-unit id="a2206c16a410d0fb40185419659f4e1caf0a5072" translate="yes" xml:space="preserve">
          <source>generated_by</source>
          <target state="translated">generated_by</target>
        </trans-unit>
        <trans-unit id="8723fdec7923f984319a7f48ae75fe2ad1e8528e" translate="yes" xml:space="preserve">
          <source>generates a</source>
          <target state="translated">を生成します。</target>
        </trans-unit>
        <trans-unit id="57bac7cdc98280953b42315a7d07bde53ad0c9f8" translate="yes" xml:space="preserve">
          <source>generates this to show that it pads correctly no matter the normalization:</source>
          <target state="translated">はこれを生成して、正規化に関係なく正しくパッドされていることを示します。</target>
        </trans-unit>
        <trans-unit id="cd738ebdb108645f60e548461168d2e3327319b7" translate="yes" xml:space="preserve">
          <source>generation</source>
          <target state="translated">generation</target>
        </trans-unit>
        <trans-unit id="46ab68674c742f98c19f5ad2f791e6bb19f73684" translate="yes" xml:space="preserve">
          <source>generic newline</source>
          <target state="translated">ジェネリック改行</target>
        </trans-unit>
        <trans-unit id="5b578520cb03ee7cab636d98aee5f988369cc71a" translate="yes" xml:space="preserve">
          <source>generic object</source>
          <target state="translated">汎用体</target>
        </trans-unit>
        <trans-unit id="c136c9a7f419c40b8be0395212b54e59533bd38c" translate="yes" xml:space="preserve">
          <source>generic regular expression flags, but apply to the operation being performed, like matching or substitution (&lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; respectively).</source>
          <target state="translated">汎用の正規表現フラグですが、マッチングや置換（それぞれ &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; ）などの実行中の操作に適用されます。</target>
        </trans-unit>
        <trans-unit id="485795e01596eaf467248a60cef2b25de35c4413" translate="yes" xml:space="preserve">
          <source>generic regular expression flags, but apply to the operation being performed, like matching or substitution (&lt;code&gt;m//&lt;/code&gt; or &lt;code&gt;s///&lt;/code&gt; respectively).</source>
          <target state="translated">一般的な正規表現フラグですが、マッチングや置換など、実行中の操作に適用されます（それぞれ &lt;code&gt;m//&lt;/code&gt; または &lt;code&gt;s///&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="783923e57ba5e8f1044632c31fd806ee24814bb5" translate="yes" xml:space="preserve">
          <source>get</source>
          <target state="translated">get</target>
        </trans-unit>
        <trans-unit id="a1392d3c328a91dca75f8561007f295b03199322" translate="yes" xml:space="preserve">
          <source>get ( MSGNUM [, FH ] )</source>
          <target state="translated">get(MSGNUM [,FH])</target>
        </trans-unit>
        <trans-unit id="932fb2700e28d5c17f99ca3e9321dc992c3107c1" translate="yes" xml:space="preserve">
          <source>get ( REMOTE_FILE [, LOCAL_FILE [, WHERE]] )</source>
          <target state="translated">get(REMOTE_FILE [,LOCAL_FILE [,WHERE]])</target>
        </trans-unit>
        <trans-unit id="afbf9dd721bf937146f6eb7f47b659d598b110d4" translate="yes" xml:space="preserve">
          <source>get it via &lt;code&gt;Test::Builder-&amp;gt;new&lt;/code&gt; as was previously recommended.</source>
          <target state="translated">以前推奨されていたように、 &lt;code&gt;Test::Builder-&amp;gt;new&lt;/code&gt; から取得します。</target>
        </trans-unit>
        <trans-unit id="f33c1fd093af46a50d905affbbb2cdf16641f428" translate="yes" xml:space="preserve">
          <source>get loaded:</source>
          <target state="translated">ロードされます。</target>
        </trans-unit>
        <trans-unit id="59dd195b7db5d405d10a460afe82b9f56a4b750e" translate="yes" xml:space="preserve">
          <source>get%sname() on closed socket %s</source>
          <target state="translated">閉じたソケット %s での get%sname()</target>
        </trans-unit>
        <trans-unit id="852eff2ec0d50c94df2e64d78abb9628e4dbeb2d" translate="yes" xml:space="preserve">
          <source>getFileSize</source>
          <target state="translated">getFileSize</target>
        </trans-unit>
        <trans-unit id="cf0461976e8f10e3106bb0a57784a5aa69b9085f" translate="yes" xml:space="preserve">
          <source>getHeaderInfo</source>
          <target state="translated">getHeaderInfo</target>
        </trans-unit>
        <trans-unit id="77a4bae1056b2abddd89aa5d73e2f6f689372cfd" translate="yes" xml:space="preserve">
          <source>getLogicalDrives</source>
          <target state="translated">getLogicalDrives</target>
        </trans-unit>
        <trans-unit id="74cd8f912842f61be25c88c5c6535fe7aee58dba" translate="yes" xml:space="preserve">
          <source>get_all</source>
          <target state="translated">get_all</target>
        </trans-unit>
        <trans-unit id="995cdf9b1fe2d66dcc173d43fe36f88377bcbadd" translate="yes" xml:space="preserve">
          <source>get_and_check_backslash_N_name</source>
          <target state="translated">get_and_check_backslash_N_name</target>
        </trans-unit>
        <trans-unit id="5c2458e6be4bf433d2bc81080ef51068dd88c2a5" translate="yes" xml:space="preserve">
          <source>get_av</source>
          <target state="translated">get_av</target>
        </trans-unit>
        <trans-unit id="fafb1c4000fe190747d8bab28a8cc51b46c0c61f" translate="yes" xml:space="preserve">
          <source>get_c_backtrace</source>
          <target state="translated">get_c_backtrace</target>
        </trans-unit>
        <trans-unit id="0e2a440f7615843a54482c54db76c978f0ea6a3d" translate="yes" xml:space="preserve">
          <source>get_c_backtrace_dump</source>
          <target state="translated">get_c_backtrace_dump</target>
        </trans-unit>
        <trans-unit id="48c4578a8df0d94e79166f95cb8eebc3801a83dd" translate="yes" xml:space="preserve">
          <source>get_context</source>
          <target state="translated">get_context</target>
        </trans-unit>
        <trans-unit id="700fda29d42cb306c45b835d007130850b104cf0" translate="yes" xml:space="preserve">
          <source>get_cv</source>
          <target state="translated">get_cv</target>
        </trans-unit>
        <trans-unit id="979ce8985624a6f3694bc7928e6c38e3ef4956b0" translate="yes" xml:space="preserve">
          <source>get_cvn_flags</source>
          <target state="translated">get_cvn_flags</target>
        </trans-unit>
        <trans-unit id="17d2e555481718d65ebb76e42ee3340add6ade98" translate="yes" xml:space="preserve">
          <source>get_db_sub</source>
          <target state="translated">get_db_sub</target>
        </trans-unit>
        <trans-unit id="8426a9ab88264ed0e4342c81df7b9fd3deab6b9b" translate="yes" xml:space="preserve">
          <source>get_debug_opts</source>
          <target state="translated">get_debug_opts</target>
        </trans-unit>
        <trans-unit id="7ba04fa85c606dea2b89c172caab68a14d03eddd" translate="yes" xml:space="preserve">
          <source>get_deprecated_property_msg</source>
          <target state="translated">get_deprecated_property_msg</target>
        </trans-unit>
        <trans-unit id="f7bb77db4bfbba3da53ba78691df85c96651cfe0" translate="yes" xml:space="preserve">
          <source>get_hash_seed</source>
          <target state="translated">get_hash_seed</target>
        </trans-unit>
        <trans-unit id="1b6015cc5695bed9a573ccd766892dab44a0a0a3" translate="yes" xml:space="preserve">
          <source>get_hv</source>
          <target state="translated">get_hv</target>
        </trans-unit>
        <trans-unit id="94fdb27aa6e9eefc650e3e16f59fe2a293259eb0" translate="yes" xml:space="preserve">
          <source>get_inputmap</source>
          <target state="translated">get_inputmap</target>
        </trans-unit>
        <trans-unit id="af7e65534240377fe519dc7a08dc520072606e50" translate="yes" xml:space="preserve">
          <source>get_invlist_iter_addr</source>
          <target state="translated">get_invlist_iter_addr</target>
        </trans-unit>
        <trans-unit id="ca2fa0c11ba2004c433b96b83b8eb7458824e518" translate="yes" xml:space="preserve">
          <source>get_invlist_offset_addr</source>
          <target state="translated">get_invlist_offset_addr</target>
        </trans-unit>
        <trans-unit id="3f0b2d483c76d0afb6117e2ea88992a620a2d876" translate="yes" xml:space="preserve">
          <source>get_invlist_previous_index_addr</source>
          <target state="translated">get_invlist_previous_index_addr</target>
        </trans-unit>
        <trans-unit id="e96cc9cc943f3a206547352e4607b6ffe3b62416" translate="yes" xml:space="preserve">
          <source>get_job</source>
          <target state="translated">get_job</target>
        </trans-unit>
        <trans-unit id="98a2accefa1c4e1ebb5e8ee04dd4b7c536879c77" translate="yes" xml:space="preserve">
          <source>get_mstats</source>
          <target state="translated">get_mstats</target>
        </trans-unit>
        <trans-unit id="47632ba71b8e12959971f5f351ae5c642ce57284" translate="yes" xml:space="preserve">
          <source>get_no_modify</source>
          <target state="translated">get_no_modify</target>
        </trans-unit>
        <trans-unit id="7fddf758d3e6b2356943a7d1cad7618747300bda" translate="yes" xml:space="preserve">
          <source>get_op_descs</source>
          <target state="translated">get_op_descs</target>
        </trans-unit>
        <trans-unit id="6f7c50596c84835a88bd7b735d5b0ad3b03e66e4" translate="yes" xml:space="preserve">
          <source>get_op_names</source>
          <target state="translated">get_op_names</target>
        </trans-unit>
        <trans-unit id="c1844a9ef780adebeac4d6bc1c41afd640d1be66" translate="yes" xml:space="preserve">
          <source>get_opargs</source>
          <target state="translated">get_opargs</target>
        </trans-unit>
        <trans-unit id="6ff44e14e90199a9a6e322b3dc09e48dd3217a1f" translate="yes" xml:space="preserve">
          <source>get_orig($trimmed)</source>
          <target state="translated">get_orig($trimmed)</target>
        </trans-unit>
        <trans-unit id="bf8ad87c00e9e2f76fd1faeecc6de69ecfe710de" translate="yes" xml:space="preserve">
          <source>get_outputmap</source>
          <target state="translated">get_outputmap</target>
        </trans-unit>
        <trans-unit id="0a8b38c9f03d62c3d2c63ff40d0262f4d3a3714a" translate="yes" xml:space="preserve">
          <source>get_perl</source>
          <target state="translated">get_perl</target>
        </trans-unit>
        <trans-unit id="02ce5aff5783b077f9b86be1afe280c586d8c8af" translate="yes" xml:space="preserve">
          <source>get_ppaddr</source>
          <target state="translated">get_ppaddr</target>
        </trans-unit>
        <trans-unit id="64b4e0bc96ef2565c764ebee848e5254fbe0298a" translate="yes" xml:space="preserve">
          <source>get_prop_definition</source>
          <target state="translated">get_prop_definition</target>
        </trans-unit>
        <trans-unit id="b0586cb17e09288518f1342fc1635bb58504f8e0" translate="yes" xml:space="preserve">
          <source>get_prop_values</source>
          <target state="translated">get_prop_values</target>
        </trans-unit>
        <trans-unit id="427f2a257f75be69c76f4e43ebf3c53e373fe911" translate="yes" xml:space="preserve">
          <source>get_raw</source>
          <target state="translated">get_raw</target>
        </trans-unit>
        <trans-unit id="6fb14ee426c1f782e568b9946a10a55f463d4191" translate="yes" xml:space="preserve">
          <source>get_re_arg</source>
          <target state="translated">get_re_arg</target>
        </trans-unit>
        <trans-unit id="45a259e3d6e6fd87a2a218a989679c72f21956c5" translate="yes" xml:space="preserve">
          <source>get_re_gclass_nonbitmap_data</source>
          <target state="translated">get_re_gclass_nonbitmap_data</target>
        </trans-unit>
        <trans-unit id="21e3992a2515ea1cede00ee80ea794fafc3e1769" translate="yes" xml:space="preserve">
          <source>get_regclass_nonbitmap_data</source>
          <target state="translated">get_regclass_nonbitmap_data</target>
        </trans-unit>
        <trans-unit id="462488df11ab88377d10f8deecc3a30edc21662b" translate="yes" xml:space="preserve">
          <source>get_regex_charset_name</source>
          <target state="translated">get_regex_charset_name</target>
        </trans-unit>
        <trans-unit id="0b8bdbcecdc55b5c256def7ae280e088818ef653" translate="yes" xml:space="preserve">
          <source>get_select_handles</source>
          <target state="translated">get_select_handles</target>
        </trans-unit>
        <trans-unit id="b2fc30c6d9ead3924aa91ad2607598ab78595092" translate="yes" xml:space="preserve">
          <source>get_status</source>
          <target state="translated">get_status</target>
        </trans-unit>
        <trans-unit id="946419179f493bbf59007f3a498fe10abff61af1" translate="yes" xml:space="preserve">
          <source>get_sv</source>
          <target state="translated">get_sv</target>
        </trans-unit>
        <trans-unit id="8d1397839f7f77a5294e2e05941c2e8a4ef56855" translate="yes" xml:space="preserve">
          <source>get_taint</source>
          <target state="translated">get_taint</target>
        </trans-unit>
        <trans-unit id="84f9ff84cb48fecf21d969315d8afba70301d3f3" translate="yes" xml:space="preserve">
          <source>get_tests</source>
          <target state="translated">get_tests</target>
        </trans-unit>
        <trans-unit id="5f04227f603cf22f5e97bbe323fa33fff7b016de" translate="yes" xml:space="preserve">
          <source>get_tid</source>
          <target state="translated">get_tid</target>
        </trans-unit>
        <trans-unit id="6d4d4354edb51d0a3f9b678d021d8441eebfb00d" translate="yes" xml:space="preserve">
          <source>get_time</source>
          <target state="translated">get_time</target>
        </trans-unit>
        <trans-unit id="af34e018a23785241ab6c7676939fb289258d4a0" translate="yes" xml:space="preserve">
          <source>get_times</source>
          <target state="translated">get_times</target>
        </trans-unit>
        <trans-unit id="a4a729d0d72968bc260071f8a4e0e301336ca156" translate="yes" xml:space="preserve">
          <source>get_trimmed($name)</source>
          <target state="translated">get_trimmed($name)</target>
        </trans-unit>
        <trans-unit id="70f9055a740640abb31d3e480a743a872d2bd35f" translate="yes" xml:space="preserve">
          <source>get_typemap</source>
          <target state="translated">get_typemap</target>
        </trans-unit>
        <trans-unit id="a04eb09e797b111987b5b2d2428595e7de5b33bb" translate="yes" xml:space="preserve">
          <source>get_vtbl</source>
          <target state="translated">get_vtbl</target>
        </trans-unit>
        <trans-unit id="1258384d48c28bddd9bbd50b9d70908409df7690" translate="yes" xml:space="preserve">
          <source>getaddrinfo() / getnameinfo() ERROR CONSTANTS</source>
          <target state="translated">getaddrinfo()/getnameinfo()ERROR CONSTANTS</target>
        </trans-unit>
        <trans-unit id="8005f68b83170ffdb479f9bf0c7156c760a7bd9e" translate="yes" xml:space="preserve">
          <source>getall</source>
          <target state="translated">getall</target>
        </trans-unit>
        <trans-unit id="9133b4724467f6a78f7953950df15cf88a004132" translate="yes" xml:space="preserve">
          <source>getc</source>
          <target state="translated">getc</target>
        </trans-unit>
        <trans-unit id="c4e82612556939eefc18b3bf2f3199765259daaa" translate="yes" xml:space="preserve">
          <source>getc FILEHANDLE</source>
          <target state="translated">ゲットシーファイルハンドル</target>
        </trans-unit>
        <trans-unit id="162db520ee3d7e506ff3b61951102a380e03098a" translate="yes" xml:space="preserve">
          <source>getcwd</source>
          <target state="translated">getcwd</target>
        </trans-unit>
        <trans-unit id="972fe37cf223022862061652eca8d48e8b04e2bf" translate="yes" xml:space="preserve">
          <source>getcwd and friends</source>
          <target state="translated">ゲッチュウダーと仲間たち</target>
        </trans-unit>
        <trans-unit id="8380964b8c8c50daa28b21fe401997b77bf3f138" translate="yes" xml:space="preserve">
          <source>getcwd_sv</source>
          <target state="translated">getcwd_sv</target>
        </trans-unit>
        <trans-unit id="09a4afa9754b089acc104a1734ff2f0142b75365" translate="yes" xml:space="preserve">
          <source>getdcwd</source>
          <target state="translated">getdcwd</target>
        </trans-unit>
        <trans-unit id="f35d177abbce98c886519e14f2203ee8e7e4053a" translate="yes" xml:space="preserve">
          <source>getenv_len</source>
          <target state="translated">getenv_len</target>
        </trans-unit>
        <trans-unit id="5d4fc63571ae3c89647ee878bd55a3b47a0eea16" translate="yes" xml:space="preserve">
          <source>getfh ( MSGNUM )</source>
          <target state="translated">getfh(MSGNUM )</target>
        </trans-unit>
        <trans-unit id="1058d442c6ea9f1bff587ff814700f9818997cdd" translate="yes" xml:space="preserve">
          <source>getgr*()</source>
          <target state="translated">getgr*()</target>
        </trans-unit>
        <trans-unit id="3d50edb669686034e9ed88561085209d1cb289f3" translate="yes" xml:space="preserve">
          <source>getgrent</source>
          <target state="translated">getgrent</target>
        </trans-unit>
        <trans-unit id="954504809746ac76a9a32e740428b45019a5fd52" translate="yes" xml:space="preserve">
          <source>getgrgid</source>
          <target state="translated">getgrgid</target>
        </trans-unit>
        <trans-unit id="b60810f8d11eb2c9a3efa7f98633218a70269dd9" translate="yes" xml:space="preserve">
          <source>getgrgid GID</source>
          <target state="translated">ゲットグリッドジーアイディー</target>
        </trans-unit>
        <trans-unit id="e4aa6e774d7ea3f9d2c544dbcae24ce80a611567" translate="yes" xml:space="preserve">
          <source>getgrnam</source>
          <target state="translated">getgrnam</target>
        </trans-unit>
        <trans-unit id="d22f502324bf30d000b28c0c7aaf652418bbb026" translate="yes" xml:space="preserve">
          <source>getgrnam NAME</source>
          <target state="translated">ゲットグラムネーム</target>
        </trans-unit>
        <trans-unit id="07055f76300fa326872312db66b3156da49fa52b" translate="yes" xml:space="preserve">
          <source>gethost*()</source>
          <target state="translated">gethost*()</target>
        </trans-unit>
        <trans-unit id="4dde3c56c61e1fbda1f35895a8532062214232d5" translate="yes" xml:space="preserve">
          <source>gethostbyaddr</source>
          <target state="translated">gethostbyaddr</target>
        </trans-unit>
        <trans-unit id="bec2a30a44dabb1eb18ce4184809b5bd266cbf3e" translate="yes" xml:space="preserve">
          <source>gethostbyaddr ADDR,ADDRTYPE</source>
          <target state="translated">gethostbyaddr ADDR,ADDRTYPE</target>
        </trans-unit>
        <trans-unit id="a8f74c0459d3d2216ba2fd322de751d9e34b0c5c" translate="yes" xml:space="preserve">
          <source>gethostbyname</source>
          <target state="translated">gethostbyname</target>
        </trans-unit>
        <trans-unit id="e0a770dd719fac494590a3f33cdf93b9f483c4fa" translate="yes" xml:space="preserve">
          <source>gethostbyname NAME</source>
          <target state="translated">gethostbyname NAME</target>
        </trans-unit>
        <trans-unit id="937d2d6c42d41083b0dec7c240d8aad8a17dc626" translate="yes" xml:space="preserve">
          <source>gethostent</source>
          <target state="translated">gethostent</target>
        </trans-unit>
        <trans-unit id="5e709969a1726feb58b87525c25dfb3daecf9f6b" translate="yes" xml:space="preserve">
          <source>gethostent not implemented</source>
          <target state="translated">ゲットホステントが実装されていない</target>
        </trans-unit>
        <trans-unit id="09d8d738f47d33904b3a229d6d126c93294aaf70" translate="yes" xml:space="preserve">
          <source>getitimer ( $which )</source>
          <target state="translated">getitimer($which )</target>
        </trans-unit>
        <trans-unit id="56432b00323d36e3f548207dddf4294d13b189b0" translate="yes" xml:space="preserve">
          <source>getline</source>
          <target state="translated">getline</target>
        </trans-unit>
        <trans-unit id="fff0838d668b940863b6dbe865088de036e42d22" translate="yes" xml:space="preserve">
          <source>getline ()</source>
          <target state="translated">ゲットライン</target>
        </trans-unit>
        <trans-unit id="0c9bccd13eaface7fa994e9cf9af98bdadbb3885" translate="yes" xml:space="preserve">
          <source>getlines</source>
          <target state="translated">getlines</target>
        </trans-unit>
        <trans-unit id="6f91045aa50984d817a12aca6ca51d03f30126b8" translate="yes" xml:space="preserve">
          <source>getlogin</source>
          <target state="translated">getlogin</target>
        </trans-unit>
        <trans-unit id="02f21604768fc5508b8215dfc6d889e3b86973d0" translate="yes" xml:space="preserve">
          <source>getmsg</source>
          <target state="translated">getmsg</target>
        </trans-unit>
        <trans-unit id="39c5b50dde982965c28e814cbc00cd95f08d332e" translate="yes" xml:space="preserve">
          <source>getname</source>
          <target state="translated">getname</target>
        </trans-unit>
        <trans-unit id="9ed4cc54a4a0a2f4f0057b3818a1f3498b34a6f5" translate="yes" xml:space="preserve">
          <source>getncnt ( SEM )</source>
          <target state="translated">getncnt(SEM )</target>
        </trans-unit>
        <trans-unit id="91ff60e15a99fb03ea8d19dc5db62c2f4deb0517" translate="yes" xml:space="preserve">
          <source>getnetbyaddr</source>
          <target state="translated">getnetbyaddr</target>
        </trans-unit>
        <trans-unit id="41bbd33b299262aa62d735776189992ffc2d1190" translate="yes" xml:space="preserve">
          <source>getnetbyaddr ADDR,ADDRTYPE</source>
          <target state="translated">getnetbyaddr ADDR,ADDRTYPE</target>
        </trans-unit>
        <trans-unit id="c78b9db293eecc65f9ca16c0827ab33c9f67007f" translate="yes" xml:space="preserve">
          <source>getnetbyname</source>
          <target state="translated">getnetbyname</target>
        </trans-unit>
        <trans-unit id="ad502ed582347e2101de57bf31cccacd8a27ef6f" translate="yes" xml:space="preserve">
          <source>getnetbyname NAME</source>
          <target state="translated">getnetbyname NAME</target>
        </trans-unit>
        <trans-unit id="cb88c23e4c921c7bf7d07ca1450cb30188eb9972" translate="yes" xml:space="preserve">
          <source>getnetent</source>
          <target state="translated">getnetent</target>
        </trans-unit>
        <trans-unit id="c599e97895231927d5d90ae5decc8b4592066779" translate="yes" xml:space="preserve">
          <source>getopt, getopts - Process single-character switches with switch clustering</source>
          <target state="translated">getopt,getopts-スイッチクラスタリングを用いて一文字スイッチを処理する</target>
        </trans-unit>
        <trans-unit id="231a6f57c060bd0a7a3e3bb8b6993f1bf9208632" translate="yes" xml:space="preserve">
          <source>getopt_compat</source>
          <target state="translated">getopt_compat</target>
        </trans-unit>
        <trans-unit id="98f809f1adf4db9f68b8287b8c8806487d3a946a" translate="yes" xml:space="preserve">
          <source>getpeername</source>
          <target state="translated">getpeername</target>
        </trans-unit>
        <trans-unit id="db643a16f882d6452c34c24fb623da692d1e57c5" translate="yes" xml:space="preserve">
          <source>getpeername SOCKET</source>
          <target state="translated">ゲットユーザー名ソケット</target>
        </trans-unit>
        <trans-unit id="9a8bdc325288ea0b4c62d98ce68549e6f26811b9" translate="yes" xml:space="preserve">
          <source>getpgrp</source>
          <target state="translated">getpgrp</target>
        </trans-unit>
        <trans-unit id="f172989b05597535d8a855945abb21d2771b1bc5" translate="yes" xml:space="preserve">
          <source>getpgrp PID</source>
          <target state="translated">ゲットプルプルPID</target>
        </trans-unit>
        <trans-unit id="1dbadd418994a4bd7a550e89bc5ee4a182798084" translate="yes" xml:space="preserve">
          <source>getpid ( SEM )</source>
          <target state="translated">getpid(SEM )</target>
        </trans-unit>
        <trans-unit id="3ac3795c490494e6f0f13000f908b8949f9d6e87" translate="yes" xml:space="preserve">
          <source>getpos</source>
          <target state="translated">getpos</target>
        </trans-unit>
        <trans-unit id="1ccaabeb9d9016498fedbf032e20ed0cbe7d4e70" translate="yes" xml:space="preserve">
          <source>getpos ( POS )</source>
          <target state="translated">ゲットポス</target>
        </trans-unit>
        <trans-unit id="760896bcddb7ce1b15ca782f91ef889393abaa62" translate="yes" xml:space="preserve">
          <source>getppid</source>
          <target state="translated">getppid</target>
        </trans-unit>
        <trans-unit id="fc090d3296cb0c0f60fad48e9f907973e5c1ec7a" translate="yes" xml:space="preserve">
          <source>getpriority</source>
          <target state="translated">getpriority</target>
        </trans-unit>
        <trans-unit id="b3ad96216f788e20b31acd3964eb96a56574d416" translate="yes" xml:space="preserve">
          <source>getpriority WHICH,WHO</source>
          <target state="translated">優先度取得 WHICH,WHO</target>
        </trans-unit>
        <trans-unit id="dd0a60d53e744a66ab6456e8fbe67f753d0600ef" translate="yes" xml:space="preserve">
          <source>getpriority(2)</source>
          <target state="translated">getpriority(2)</target>
        </trans-unit>
        <trans-unit id="f1a31e98c628c2db8c009b2bd5f9501c3567a37e" translate="yes" xml:space="preserve">
          <source>getprotobyname</source>
          <target state="translated">getprotobyname</target>
        </trans-unit>
        <trans-unit id="c2e29ea72b9389c6e7974b7a0ed7ad6465f4a6ab" translate="yes" xml:space="preserve">
          <source>getprotobyname NAME</source>
          <target state="translated">getprotobyname NAME</target>
        </trans-unit>
        <trans-unit id="eb45c8ed61867cbcf3b9c9d94864eed445b4fc78" translate="yes" xml:space="preserve">
          <source>getprotobynumber</source>
          <target state="translated">getprotobynumber</target>
        </trans-unit>
        <trans-unit id="364d3adbceafc12b99c88d86f97e8c7e1cb5e700" translate="yes" xml:space="preserve">
          <source>getprotobynumber NUMBER</source>
          <target state="translated">getprotobynumber NUMBER</target>
        </trans-unit>
        <trans-unit id="8f73dd391e1dbd049491fbaa45272799557e1ecd" translate="yes" xml:space="preserve">
          <source>getprotoent</source>
          <target state="translated">getprotoent</target>
        </trans-unit>
        <trans-unit id="264d8f2cf007c39e27afb1401d501e80b70c5091" translate="yes" xml:space="preserve">
          <source>getpw*()</source>
          <target state="translated">getpw*()</target>
        </trans-unit>
        <trans-unit id="4412e33f81c5fcb9d4122fdc1997219278d192b9" translate="yes" xml:space="preserve">
          <source>getpwent</source>
          <target state="translated">getpwent</target>
        </trans-unit>
        <trans-unit id="2bf3a32fe9930ec92ad1cf23e73892b1df2c803b" translate="yes" xml:space="preserve">
          <source>getpwnam</source>
          <target state="translated">getpwnam</target>
        </trans-unit>
        <trans-unit id="5e9f4aa6503b1719f201f2afadccfcab1fb96c64" translate="yes" xml:space="preserve">
          <source>getpwnam NAME</source>
          <target state="translated">ゲプナムネーム</target>
        </trans-unit>
        <trans-unit id="053e0311e2816c2727ee4526e9bf8835ff373918" translate="yes" xml:space="preserve">
          <source>getpwnam returned invalid UIC %#o for user &quot;%s&quot;</source>
          <target state="translated">getpwnam がユーザ &quot;%s&quot; に対して無効な UIC %#o を返しました。</target>
        </trans-unit>
        <trans-unit id="9dfa71fef33acf73fe322e5e017f7d2f6becd899" translate="yes" xml:space="preserve">
          <source>getpwuid</source>
          <target state="translated">getpwuid</target>
        </trans-unit>
        <trans-unit id="4ed9302416f8b39421d3a416ca711b2ca0de5fa2" translate="yes" xml:space="preserve">
          <source>getpwuid UID</source>
          <target state="translated">サウンドUID</target>
        </trans-unit>
        <trans-unit id="03bab46c3b1cf81f77f69f2c3d5d2af181d4fafb" translate="yes" xml:space="preserve">
          <source>gets an input line,</source>
          <target state="translated">入力行を取得します。</target>
        </trans-unit>
        <trans-unit id="a4a18add76636ec13b14dc1bea2f40dedc988990" translate="yes" xml:space="preserve">
          <source>gets the coprocessor control word as an integer.</source>
          <target state="translated">コプロセッサ制御ワードを整数で取得します。</target>
        </trans-unit>
        <trans-unit id="cb2ae4c00ed80439cdeb3559961abd89f844c4b0" translate="yes" xml:space="preserve">
          <source>gets the equivalent of a</source>
          <target state="translated">に相当するものを取得します。</target>
        </trans-unit>
        <trans-unit id="2832b6fc8b9ad7e8df392ed11da7281f9daa2679" translate="yes" xml:space="preserve">
          <source>gets the factory settings back.</source>
          <target state="translated">は工場出荷時の設定を戻します。</target>
        </trans-unit>
        <trans-unit id="3537f6e3589497b9152f983a92f76e93d75f2f8c" translate="yes" xml:space="preserve">
          <source>getservbyname</source>
          <target state="translated">getservbyname</target>
        </trans-unit>
        <trans-unit id="90d57f6b0bb5bd40d3acc01ba253676dd321d493" translate="yes" xml:space="preserve">
          <source>getservbyname NAME,PROTO</source>
          <target state="translated">getservbyname NAME,PROTO</target>
        </trans-unit>
        <trans-unit id="a6ba74a7dd33c90b59ffa93e852ef4e4147ebf8a" translate="yes" xml:space="preserve">
          <source>getservbyport</source>
          <target state="translated">getservbyport</target>
        </trans-unit>
        <trans-unit id="8aef282067018e535a8b3fee36da732611cffd2b" translate="yes" xml:space="preserve">
          <source>getservbyport PORT,PROTO</source>
          <target state="translated">getservbyport PORT,PROTO</target>
        </trans-unit>
        <trans-unit id="77cc3261e8a459c3768e28f3e743314220d57309" translate="yes" xml:space="preserve">
          <source>getservent</source>
          <target state="translated">getservent</target>
        </trans-unit>
        <trans-unit id="ead804d2b4d74dba07a6b100e144a224f9c485f2" translate="yes" xml:space="preserve">
          <source>getsockname</source>
          <target state="translated">getsockname</target>
        </trans-unit>
        <trans-unit id="9a53f0302a0fb7b7c971823b024cb2ff6f0dece1" translate="yes" xml:space="preserve">
          <source>getsockname SOCKET</source>
          <target state="translated">getsockname SOCKET</target>
        </trans-unit>
        <trans-unit id="bc17bfd88bff9588166cbf7c62c55649a1cb154d" translate="yes" xml:space="preserve">
          <source>getsockopt</source>
          <target state="translated">getsockopt</target>
        </trans-unit>
        <trans-unit id="3b85d183c4b965758136b832da51d3639ff60a8b" translate="yes" xml:space="preserve">
          <source>getsockopt SOCKET,LEVEL,OPTNAME</source>
          <target state="translated">getsockopt SOCKET,LEVEL,OPTNAME</target>
        </trans-unit>
        <trans-unit id="2e552aee506f43d35fcaae7430bcd1cba2ac7fff" translate="yes" xml:space="preserve">
          <source>getsockopt() on closed socket %s</source>
          <target state="translated">閉じたソケット %s で getsockopt()</target>
        </trans-unit>
        <trans-unit id="53fc441852a90c70f25c2e105138a8e183ea9784" translate="yes" xml:space="preserve">
          <source>getstate</source>
          <target state="translated">getstate</target>
        </trans-unit>
        <trans-unit id="76aa149ffff86f87ed2a01aa65f7b3abb7a51cac" translate="yes" xml:space="preserve">
          <source>getstate()</source>
          <target state="translated">getstate()</target>
        </trans-unit>
        <trans-unit id="c71c40e9f94cbaeee9b7d998c514a246aa5805a9" translate="yes" xml:space="preserve">
          <source>getsym</source>
          <target state="translated">getsym</target>
        </trans-unit>
        <trans-unit id="fc3825d6fa4c9ad48c98e3899188af1f78ea50f3" translate="yes" xml:space="preserve">
          <source>gettimeofday ()</source>
          <target state="translated">ジェットスフデイ</target>
        </trans-unit>
        <trans-unit id="0d32960ddebc4dd782187185fb5869f5dd72e232" translate="yes" xml:space="preserve">
          <source>getval ( SEM )</source>
          <target state="translated">取得値(SEM )</target>
        </trans-unit>
        <trans-unit id="c2cf63636d240bcb8eeecd0bfc7df5146c863e7c" translate="yes" xml:space="preserve">
          <source>getvar</source>
          <target state="translated">getvar</target>
        </trans-unit>
        <trans-unit id="1203d623df8fbebf1c3ebf03838ebdff19d74616" translate="yes" xml:space="preserve">
          <source>getzcnt ( SEM )</source>
          <target state="translated">getzcnt(SEM )</target>
        </trans-unit>
        <trans-unit id="a74e5f9904045d0a90a9e6bf84ab6ae322e3f1eb" translate="yes" xml:space="preserve">
          <source>get|head|put|post|delete</source>
          <target state="translated">get|head|put|post|delete</target>
        </trans-unit>
        <trans-unit id="1ee0e85af8318773010919d2883acec5058bea15" translate="yes" xml:space="preserve">
          <source>ggh</source>
          <target state="translated">ggh</target>
        </trans-unit>
        <trans-unit id="4e80c01e75cf1655038813521698f23953c93e16" translate="yes" xml:space="preserve">
          <source>gid</source>
          <target state="translated">gid</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
