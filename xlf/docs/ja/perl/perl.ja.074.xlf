<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="60cf66868c5165df5712b55dc0fc35c4aaffe3f6" translate="yes" xml:space="preserve">
          <source>[1] &lt;a href=&quot;http://www.hexten.net/mailman/listinfo/tapx-dev&quot;&gt;http://www.hexten.net/mailman/listinfo/tapx-dev&lt;/a&gt; [2] &lt;a href=&quot;http://testanything.org/mailman/listinfo/tap-l&quot;&gt;http://testanything.org/mailman/listinfo/tap-l&lt;/a&gt; [3] &lt;a href=&quot;http://testanything.org/&quot;&gt;http://testanything.org/&lt;/a&gt;</source>
          <target state="translated">[1] &lt;a href=&quot;http://www.hexten.net/mailman/listinfo/tapx-dev&quot;&gt;http://www.hexten.net/mailman/listinfo/tapx-dev&lt;/a&gt; [2] &lt;a href=&quot;http://testanything.org/mailman/listinfo/tap-l&quot;&gt;http://testanything.org/mailman/listinfo/tap-l&lt;/a&gt; [3] &lt;a href=&quot;http://testanything.org/&quot;&gt;http://testanything.org/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a6ac0e8a735b46342a976ea787dac2c14647dfa8" translate="yes" xml:space="preserve">
          <source>[1] &lt;a href=&quot;https://perl.plover.com/Rx/paper/&quot;&gt;https://perl.plover.com/Rx/paper/&lt;/a&gt;</source>
          <target state="translated">[1] &lt;a href=&quot;https://perl.plover.com/Rx/paper/&quot;&gt;https://perl.plover.com/Rx/paper/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="66aacf5ae577e2928c4257cbce7e7c5903104c46" translate="yes" xml:space="preserve">
          <source>[1] &lt;code&gt;\N{U+...}&lt;/code&gt; and &lt;code&gt;\x{...}&lt;/code&gt;</source>
          <target state="translated">[1] &lt;code&gt;\N{U+...}&lt;/code&gt; および &lt;code&gt;\x{...}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ff0deed4b3b24909934a1ac41465f162f12f1a69" translate="yes" xml:space="preserve">
          <source>[1] ja: Ideographs are sorted in JIS X 0208 order. Fullwidth and halfwidth forms are identical to their regular form. The difference between hiragana and katakana is at the 4th level, the comparison also requires &lt;code&gt;(variable =&amp;gt; 'Non-ignorable')&lt;/code&gt;, and then &lt;code&gt;katakana_before_hiragana&lt;/code&gt; has no effect.</source>
          <target state="translated">[1] ja：イデオグラフはJIS X0208の順序で並べ替えられています。全角および半角の形式は、通常の形式と同じです。ひらがなとカタカナの違いは第4レベルであり、比較にも &lt;code&gt;(variable =&amp;gt; 'Non-ignorable')&lt;/code&gt; であり、 &lt;code&gt;katakana_before_hiragana&lt;/code&gt; は効果がありません。</target>
        </trans-unit>
        <trans-unit id="2499831338ca5dc8c44f3d063e076799bea9bdff" translate="yes" xml:space="preserve">
          <source>[2]</source>
          <target state="translated">[2]</target>
        </trans-unit>
        <trans-unit id="f4bcc9cdddccdc2ae22d3c3454a7739be0e29b10" translate="yes" xml:space="preserve">
          <source>[2] &lt;a href=&quot;http://www.unicode.org&quot;&gt;http://www.unicode.org&lt;/a&gt;</source>
          <target state="translated">[2] &lt;a href=&quot;http://www.unicode.org&quot;&gt;http://www.unicode.org&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="89613ff71fb004050c2387ea7679afcc46361298" translate="yes" xml:space="preserve">
          <source>[2] &lt;a href=&quot;https://www.unicode.org/&quot;&gt;https://www.unicode.org/&lt;/a&gt;</source>
          <target state="translated">[2] &lt;a href=&quot;https://www.unicode.org/&quot;&gt;https://www.unicode.org/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="372cc387e7942f45d19b3ed8b382c7d9675e60e6" translate="yes" xml:space="preserve">
          <source>[2] &lt;code&gt;\p{...}&lt;/code&gt;&lt;code&gt;\P{...}&lt;/code&gt;. This requirement is for a minimal list of properties. Perl supports these. See R2.7 for other properties.</source>
          <target state="translated">[2] &lt;code&gt;\p{...}&lt;/code&gt; &lt;code&gt;\P{...}&lt;/code&gt; 。この要件は、プロパティの最小限のリストに対するものです。Perlはこれらをサポートしています。その他のプロパティについては、R2.7を参照してください。</target>
        </trans-unit>
        <trans-unit id="6ab2f21a354b3f2ceeceb49f1179400b9f9ca607" translate="yes" xml:space="preserve">
          <source>[2] ko: Plenty of ideographs are sorted by their reading. Such an ideograph is primary (level 1) equal to, and secondary (level 2) greater than, the corresponding hangul syllable.</source>
          <target state="translated">[2] ko：多くのイデオグラフは読みによって分類されています。このような表意文字は、対応するハングル音節と同じ一次（レベル1）であり、二次（レベル2）より大きいです。</target>
        </trans-unit>
        <trans-unit id="f1e31df9806ce94c5bdbbfff9608324930f4d3f1" translate="yes" xml:space="preserve">
          <source>[3]</source>
          <target state="translated">[3]</target>
        </trans-unit>
        <trans-unit id="2d7810062311db35e9169e57b243612002fcc54a" translate="yes" xml:space="preserve">
          <source>[3] Perl has &lt;code&gt;\d&lt;/code&gt;&lt;code&gt;\D&lt;/code&gt;&lt;code&gt;\s&lt;/code&gt;&lt;code&gt;\S&lt;/code&gt;&lt;code&gt;\w&lt;/code&gt;&lt;code&gt;\W&lt;/code&gt;&lt;code&gt;\X&lt;/code&gt;&lt;code&gt;[:&lt;i&gt;prop&lt;/i&gt;:]&lt;/code&gt;&lt;code&gt;[:^&lt;i&gt;prop&lt;/i&gt;:]&lt;/code&gt;, plus all the properties specified by &lt;a href=&quot;https://www.unicode.org/reports/tr18/#Compatibility_Properties&quot;&gt;https://www.unicode.org/reports/tr18/#Compatibility_Properties&lt;/a&gt;. These are described above in &lt;a href=&quot;#Other-Properties&quot;&gt;&quot;Other Properties&quot;&lt;/a&gt;</source>
          <target state="translated">[3] Perlには &lt;code&gt;\d&lt;/code&gt; &lt;code&gt;\D&lt;/code&gt; &lt;code&gt;\s&lt;/code&gt; &lt;code&gt;\S&lt;/code&gt; &lt;code&gt;\w&lt;/code&gt; &lt;code&gt;\W&lt;/code&gt; &lt;code&gt;\X&lt;/code&gt; &lt;code&gt;[:&lt;i&gt;prop&lt;/i&gt;:]&lt;/code&gt; &lt;code&gt;[:^&lt;i&gt;prop&lt;/i&gt;:]&lt;/code&gt; に加えて、&lt;a href=&quot;https://www.unicode.org/reports/tr18/#Compatibility_Properties&quot;&gt;https：//www.unicode.org/reports/tr18で&lt;/a&gt;指定されているすべてのプロパティがあります。 /＃Compatibility_Properties。これらについては、上記の&lt;a href=&quot;#Other-Properties&quot;&gt;「その他のプロパティ」&lt;/a&gt;で説明しています。</target>
        </trans-unit>
        <trans-unit id="bd52e2014000b721f1f2b72f0863004a9ecbde30" translate="yes" xml:space="preserve">
          <source>[3] zh__pinyin, zh__stroke and zh__zhuyin: implemented alt='short', where a smaller number of ideographs are tailored.</source>
          <target state="translated">[3] zh__pinyin、zh__stroke、およびzh__zhuyin：alt = 'short'を実装しました。ここでは、少数のイデオグラフが調整されています。</target>
        </trans-unit>
        <trans-unit id="8f4e345e7cd51e4e633816f5a52a47df465da189" translate="yes" xml:space="preserve">
          <source>[4]</source>
          <target state="translated">[4]</target>
        </trans-unit>
        <trans-unit id="10ae24979c5028fa873651bca338152dc0484245" translate="yes" xml:space="preserve">
          <source>[5]</source>
          <target state="translated">[5]</target>
        </trans-unit>
        <trans-unit id="233db7fca492136ec1c9065745e59cccf497e90b" translate="yes" xml:space="preserve">
          <source>[5] &lt;code&gt;\b&lt;/code&gt;&lt;code&gt;\B&lt;/code&gt; meet most, but not all, the details of this requirement, but &lt;code&gt;\b{wb}&lt;/code&gt; and &lt;code&gt;\B{wb}&lt;/code&gt; do, as well as the stricter R2.3.</source>
          <target state="translated">[5] &lt;code&gt;\b&lt;/code&gt; &lt;code&gt;\B&lt;/code&gt; は、この要件のすべてではありませんが、ほとんどの詳細を満たしていますが、 &lt;code&gt;\b{wb}&lt;/code&gt; と &lt;code&gt;\B{wb}&lt;/code&gt; は、より厳密なR2.3と同様に満たしています。</target>
        </trans-unit>
        <trans-unit id="4a0a63ce33cc030f270c607ea7bf90a6717572bb" translate="yes" xml:space="preserve">
          <source>[6]</source>
          <target state="translated">[6]</target>
        </trans-unit>
        <trans-unit id="582472de9b1aecba03a72f54cdffca25542de79c" translate="yes" xml:space="preserve">
          <source>[7..10]</source>
          <target state="translated">[7..10]</target>
        </trans-unit>
        <trans-unit id="bd703dc0b11593277a5a82dd893f2880b8d0f32a" translate="yes" xml:space="preserve">
          <source>[7]</source>
          <target state="translated">[7]</target>
        </trans-unit>
        <trans-unit id="1fb0856518ee0490ff78e43d1b6dae12ad6ec686" translate="yes" xml:space="preserve">
          <source>[8]</source>
          <target state="translated">[8]</target>
        </trans-unit>
        <trans-unit id="2f464be2e75b410fd5d491c027edafa786ac22d5" translate="yes" xml:space="preserve">
          <source>[8] UTF-8/UTF-EBDDIC used in Perl allows not only &lt;code&gt;U+10000&lt;/code&gt; to &lt;code&gt;U+10FFFF&lt;/code&gt; but also beyond &lt;code&gt;U+10FFFF&lt;/code&gt;</source>
          <target state="translated">[8] Perlで使用されるUTF-8 / UTF-EBDDICは、 &lt;code&gt;U+10000&lt;/code&gt; から &lt;code&gt;U+10FFFF&lt;/code&gt; だけでなく、 &lt;code&gt;U+10FFFF&lt;/code&gt; を超えることも可能にします</target>
        </trans-unit>
        <trans-unit id="7a60554107407bfe358bedce2bfcb95c90a8ea0d" translate="yes" xml:space="preserve">
          <source>[9]</source>
          <target state="translated">[9]</target>
        </trans-unit>
        <trans-unit id="b8b4d2522c04d2021ee74189eee7928750a50bd0" translate="yes" xml:space="preserve">
          <source>[9] Unicode has rewritten this portion of UTS#18 to say that getting canonical equivalence (see UAX#15 &lt;a href=&quot;https://www.unicode.org/reports/tr15&quot;&gt;&quot;Unicode Normalization Forms&quot;&lt;/a&gt;) is basically to be done at the programmer level. Use NFD to write both your regular expressions and text to match them against (you can use &lt;a href=&quot;Unicode::Normalize&quot;&gt;Unicode::Normalize&lt;/a&gt;).</source>
          <target state="translated">[9] Unicodeは、UTS＃18のこの部分を書き直して、正規の等価性の取得（UAX＃15 &lt;a href=&quot;https://www.unicode.org/reports/tr15&quot;&gt;「Unicode正規化フォーム」を&lt;/a&gt;参照）は基本的にプログラマーレベルで行われると述べています。NFDを使用して、正規表現とそれらを照合するテキストの両方を記述します（&lt;a href=&quot;Unicode::Normalize&quot;&gt;Unicode :: Normalizeを&lt;/a&gt;使用できます）。</target>
        </trans-unit>
        <trans-unit id="b002b78bc12a3ff6e29895fae1de731a69f453ae" translate="yes" xml:space="preserve">
          <source>[&lt;b&gt;-help&lt;/b&gt;] [&lt;b&gt;-man&lt;/b&gt;] [&lt;b&gt;-exit&lt;/b&gt;</source>
          <target state="translated">[ &lt;b&gt;-help&lt;/b&gt; ] [ &lt;b&gt;-man&lt;/b&gt; ] [ &lt;b&gt;-exit&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="b0275f738749aa6cac8eb913cf57b88a87e7251a" translate="yes" xml:space="preserve">
          <source>[= =] and [. .]</source>
          <target state="translated">[= =]および[。。]</target>
        </trans-unit>
        <trans-unit id="b7f7b2f070d043ac6adcb96823bacdf134bc5b2b" translate="yes" xml:space="preserve">
          <source>[ARRAYREF]</source>
          <target state="translated">[ARRAYREF]</target>
        </trans-unit>
        <trans-unit id="afca1504bc2e3c3044d29b9874e85f36958af894" translate="yes" xml:space="preserve">
          <source>[Building/installing modules]</source>
          <target state="translated">[モジュールの構築/インストール]</target>
        </trans-unit>
        <trans-unit id="d6b3628e3701db9b7fa6809c69a05c70b5ed76a4" translate="yes" xml:space="preserve">
          <source>[CORE] Converts the supplied Win32 error number (e.g. returned by Win32::GetLastError()) to a descriptive string. Analogous to the perror() standard-C library function. Note that &lt;code&gt;$^E&lt;/code&gt; used in a string context has much the same effect.</source>
          <target state="translated">[CORE]指定されたWin32エラー番号（たとえば、Win32 :: GetLastError（）によって返される）を説明的な文字列に変換します。perror（）標準Cライブラリ関数に類似しています。文字列コンテキストで使用される &lt;code&gt;$^E&lt;/code&gt; は、ほとんど同じ効果があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="84f68fb2f6b0592510b08c0d182aab0f612cf466" translate="yes" xml:space="preserve">
          <source>[CORE] GetFullPathName combines the FILENAME with the current drive and directory name and returns a fully qualified (aka, absolute) path name. In list context it returns two elements: (PATH, FILE) where PATH is the complete pathname component (including trailing backslash) and FILE is just the filename part. Note that no attempt is made to convert 8.3 components in the supplied FILENAME to longnames or vice-versa. Compare with Win32::GetShortPathName() and Win32::GetLongPathName().</source>
          <target state="translated">[CORE] GetFullPathNameは、FILENAMEを現在のドライブおよびディレクトリ名と組み合わせて、完全修飾（別名、絶対）パス名を返します。リストコンテキストでは、2つの要素を返します。（PATH、FILE）ここで、PATHは完全なパス名コンポーネント（末尾の円記号を含む）であり、FILEはファイル名の部分です。指定されたFILENAMEの8.3コンポーネントをlongnameに、またはその逆に変換する試みは行われないことに注意してください。Win32 :: GetShortPathName（）およびWin32 :: GetLongPathName（）と比較してください。</target>
        </trans-unit>
        <trans-unit id="bcde9f909447423f2e8ca8fdf34fb498c088de8c" translate="yes" xml:space="preserve">
          <source>[CORE] Pauses for TIME milliseconds. The timeslices are made available to other processes and threads.</source>
          <target state="translated">[CORE] TIMEミリ秒の間一時停止します。タイムスライスは、他のプロセスやスレッドで利用できるようになります。</target>
        </trans-unit>
        <trans-unit id="6fe06f376f43d9ceac0b2b54ee3f7dae5be0ab18" translate="yes" xml:space="preserve">
          <source>[CORE] Returns a representation of PATHNAME composed of longname components (if any). The result may not necessarily be longer than PATHNAME. No attempt is made to convert PATHNAME to the absolute path. Compare with Win32::GetShortPathName() and Win32::GetFullPathName().</source>
          <target state="translated">[CORE] longnameコンポーネント（存在する場合）で構成されるPATHNAMEの表現を返します。結果は必ずしもPATHNAMEより長くなるとは限りません。PATHNAMEを絶対パスに変換する試みは行われません。Win32 :: GetShortPathName（）およびWin32 :: GetFullPathName（）と比較してください。</target>
        </trans-unit>
        <trans-unit id="bdd708353dc93e7e74b0b08eaddec467dad6ba16" translate="yes" xml:space="preserve">
          <source>[CORE] Returns a representation of PATHNAME that is composed of short (8.3) path components where available. For path components where the file system has not generated the short form the returned path will use the long form, so this function might still for instance return a path containing spaces. Returns &lt;code&gt;undef&lt;/code&gt; when the PATHNAME does not exist. Compare with Win32::GetFullPathName() and Win32::GetLongPathName().</source>
          <target state="translated">[CORE]可能な場合は、短い（8.3）パスコンポーネントで構成されるPATHNAMEの表現を返します。ファイルシステムが短い形式を生成していないパスコンポーネントの場合、返されるパスは長い形式を使用するため、この関数は、たとえばスペースを含むパスを返す場合があります。PATHNAMEが存在しない場合、 &lt;code&gt;undef&lt;/code&gt; を返します。Win32 :: GetFullPathName（）およびWin32 :: GetLongPathName（）と比較してください。</target>
        </trans-unit>
        <trans-unit id="0cf4d38fb9af295a3da4e1a2d214c462dc00c83e" translate="yes" xml:space="preserve">
          <source>[CORE] Returns a string in the form of &quot;&amp;lt;d&amp;gt;:&quot; where &amp;lt;d&amp;gt; is the first available drive letter.</source>
          <target state="translated">[CORE]「&amp;lt;d&amp;gt;：」の形式で文字列を返します。ここで、&amp;lt;d&amp;gt;は最初に使用可能なドライブ文字です。</target>
        </trans-unit>
        <trans-unit id="48d02ec09ee2a21f330c5fd13e8305e0a31ecfe8" translate="yes" xml:space="preserve">
          <source>[CORE] Returns non zero if the Win32 subsystem is Windows 95.</source>
          <target state="translated">[CORE] Win32サブシステムがWindows95の場合、ゼロ以外を返します。</target>
        </trans-unit>
        <trans-unit id="fb39076e20ea89adab56ae66afa6bc9f39dcc3ca" translate="yes" xml:space="preserve">
          <source>[CORE] Returns non zero if the Win32 subsystem is Windows NT.</source>
          <target state="translated">[CORE] Win32サブシステムがWindowsNTの場合、ゼロ以外を返します。</target>
        </trans-unit>
        <trans-unit id="5cb368f955e0e8330c886d245d5c7a418c730ac9" translate="yes" xml:space="preserve">
          <source>[CORE] Returns the ActivePerl build number. This function is only available in the ActivePerl binary distribution.</source>
          <target state="translated">[CORE] ActivePerlビルド番号を返します。この関数は、ActivePerlバイナリディストリビューションでのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="e913e8ec9df4c2ab2c6c9f9a4041519dc4942c7d" translate="yes" xml:space="preserve">
          <source>[CORE] Returns the Microsoft Network node-name of the current machine.</source>
          <target state="translated">[CORE]現在のマシンのMicrosoftネットワークノード名を返します。</target>
        </trans-unit>
        <trans-unit id="5895b5a6d59fbae82cb4d6cd2a031463591680ac" translate="yes" xml:space="preserve">
          <source>[CORE] Returns the current active drive and directory. This function does not return a UNC path, since the functionality required for such a feature is not available under Windows 95.</source>
          <target state="translated">[CORE]現在アクティブなドライブとディレクトリを返します。このような機能に必要な機能はWindows95では使用できないため、この関数はUNCパスを返しません。</target>
        </trans-unit>
        <trans-unit id="b6ba276dac7710f537fc21b85a812478f127eb3c" translate="yes" xml:space="preserve">
          <source>[CORE] Returns the last error value generated by a call to a Win32 API function. Note that &lt;code&gt;$^E&lt;/code&gt; used in a numeric context amounts to the same value.</source>
          <target state="translated">[CORE] Win32API関数の呼び出しによって生成された最後のエラー値を返します。数値コンテキストで使用される &lt;code&gt;$^E&lt;/code&gt; は同じ値になることに注意してください。</target>
        </trans-unit>
        <trans-unit id="57bbe3239d0e4c88cc21711017af87ee821325f1" translate="yes" xml:space="preserve">
          <source>[CORE] Returns the list (STRING, MAJOR, MINOR, BUILD, ID), where the elements are, respectively: An arbitrary descriptive string, the major version number of the operating system, the minor version number, the build number, and a digit indicating the actual operating system. For the ID, the values are 0 for Win32s, 1 for Windows 9X/Me and 2 for Windows NT/2000/XP/2003/Vista/2008/7. In scalar context it returns just the ID.</source>
          <target state="translated">[CORE]リスト（STRING、MAJOR、MINOR、BUILD、ID）を返します。ここで、要素はそれぞれ次のとおりです。任意の説明文字列、オペレーティングシステムのメジャーバージョン番号、マイナーバージョン番号、ビルド番号、および実際のオペレーティングシステムを示す数字。IDの値は、Win32sの場合は0、Windows 9X / Meの場合は1、Windows NT / 2000 / XP / 2003 / Vista / 2008/7の場合は2です。スカラーコンテキストでは、IDのみを返します。</target>
        </trans-unit>
        <trans-unit id="a4d6af30c7c44e34a9bb3cd141a2e0f0107aa9db" translate="yes" xml:space="preserve">
          <source>[CORE] Returns the name of the Microsoft Network domain or workgroup that the owner of the current perl process is logged into. The &quot;Workstation&quot; service must be running to determine this information. This function does &lt;b&gt;not&lt;/b&gt; work on Windows 9x.</source>
          <target state="translated">[CORE]現在のperlプロセスの所有者がログインしているMicrosoftネットワークドメインまたはワークグループの名前を返します。この情報を確認するには、「ワークステーション」サービスが実行されている必要があります。この機能はWindows9xでは機能しませ&lt;b&gt;ん&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="e19a30e866de8a16f36598cf0b685206c4c4905b" translate="yes" xml:space="preserve">
          <source>[CORE] Returns the name of the filesystem of the currently active drive (like 'FAT' or 'NTFS'). In list context it returns three values: (FSTYPE, FLAGS, MAXCOMPLEN). FSTYPE is the filesystem type as before. FLAGS is a combination of values of the following table:</source>
          <target state="translated">[CORE]現在アクティブなドライブのファイルシステムの名前を返します（「FAT」や「NTFS」など）。リストコンテキストでは、（FSTYPE、FLAGS、MAXCOMPLEN）の3つの値を返します。FSTYPEは、以前と同じファイルシステムタイプです。FLAGSは、次の表の値の組み合わせです。</target>
        </trans-unit>
        <trans-unit id="75ef1900265cdb6641196c54f1870f18c4bb8dd9" translate="yes" xml:space="preserve">
          <source>[CORE] Returns the number of milliseconds elapsed since the last system boot. Resolution is limited to system timer ticks (about 10ms on WinNT and 55ms on Win9X).</source>
          <target state="translated">[CORE]最後のシステム起動から経過したミリ秒数を返します。解像度はシステムタイマーティックに制限されています（WinNTでは約10ミリ秒、Win9Xでは55ミリ秒）。</target>
        </trans-unit>
        <trans-unit id="18377d63cc00bb24b630b0dc1d865db70ef00e23" translate="yes" xml:space="preserve">
          <source>[CORE] Returns the username of the owner of the current perl process. The return value may be a Unicode string.</source>
          <target state="translated">[CORE]現在のperlプロセスの所有者のユーザー名を返します。戻り値はUnicode文字列の場合があります。</target>
        </trans-unit>
        <trans-unit id="39d39e58774e237664eeda3219cc1a859aa040a8" translate="yes" xml:space="preserve">
          <source>[CORE] Sets the</source>
          <target state="translated">[CORE]を設定します</target>
        </trans-unit>
        <trans-unit id="8ff6d7abf3107610fd79e5d8e242d87f4f176e24" translate="yes" xml:space="preserve">
          <source>[CORE] Sets the current active drive and directory. This function does not work with UNC paths, since the functionality required to required for such a feature is not available under Windows 95.</source>
          <target state="translated">[CORE]現在アクティブなドライブとディレクトリを設定します。この機能に必要な機能はWindows95では使用できないため、この機能はUNCパスでは機能しません。</target>
        </trans-unit>
        <trans-unit id="2dc8fd7a0ec462d543d099f8aaec42452af82f69" translate="yes" xml:space="preserve">
          <source>[CORE] Sets the value of the last error encountered to ERROR. This is that value that will be returned by the Win32::GetLastError() function.</source>
          <target state="translated">[CORE]最後に発生したエラーの値をERRORに設定します。これは、Win32 :: GetLastError（）関数によって返される値です。</target>
        </trans-unit>
        <trans-unit id="569c8bbd8291fe19cc213e90d090fd13836b114f" translate="yes" xml:space="preserve">
          <source>[CORE] Spawns a new process using the supplied COMMAND, passing in arguments in the string ARGS. The pid of the new process is stored in PID. This function is deprecated. Please use the Win32::Process module instead.</source>
          <target state="translated">[CORE]提供されたCOMMANDを使用して新しいプロセスを生成し、文字列ARGSで引数を渡します。新しいプロセスのpidはPIDに保存されます。この関数は非推奨です。代わりにWin32 :: Processモジュールを使用してください。</target>
        </trans-unit>
        <trans-unit id="5a133b599cd92f29d4a3ad10a080f7fe231124f3" translate="yes" xml:space="preserve">
          <source>[CORE] The Win32::CopyFile() function copies an existing file to a new file. All file information like creation time and file attributes will be copied to the new file. However it will &lt;b&gt;not&lt;/b&gt; copy the security information. If the destination file already exists it will only be overwritten when the OVERWRITE parameter is true. But even this will not overwrite a read-only file; you have to unlink() it first yourself.</source>
          <target state="translated">[CORE] Win32 :: CopyFile（）関数は、既存のファイルを新しいファイルにコピーします。作成時間やファイル属性などのすべてのファイル情報が新しいファイルにコピーされます。ただし、セキュリティ情報&lt;b&gt;は&lt;/b&gt;コピーされ&lt;b&gt;ません&lt;/b&gt;。宛先ファイルがすでに存在する場合、OVERWRITEパラメーターがtrueの場合にのみ上書きされます。ただし、これでも読み取り専用ファイルは上書きされません。最初に自分でunlink（）する必要があります。</target>
        </trans-unit>
        <trans-unit id="9224bf067cdf7665993375ff1d33e813365c624c" translate="yes" xml:space="preserve">
          <source>[HASHREF]</source>
          <target state="translated">[HASHREF]</target>
        </trans-unit>
        <trans-unit id="1c6555677db9746d71e639d2861c450df21a423a" translate="yes" xml:space="preserve">
          <source>[INTERNAL] Test whether</source>
          <target state="translated">[内部]テストするかどうか</target>
        </trans-unit>
        <trans-unit id="3e3a19400d8a2d90d0db0e1989c48275083a979d" translate="yes" xml:space="preserve">
          <source>[INTERNAL] Tests whether the UTF8 flag is turned on in the</source>
          <target state="translated">[内部] UTF8フラグがオンになっているかどうかをテストします</target>
        </trans-unit>
        <trans-unit id="22eb99e5f093e515d3af9067fe7ea86722b6bbf1" translate="yes" xml:space="preserve">
          <source>[INTERNAL] Turns the</source>
          <target state="translated">[社内向け]</target>
        </trans-unit>
        <trans-unit id="009b33a0528361398d9c707d1795bc4cfafeac38" translate="yes" xml:space="preserve">
          <source>[If you have the recommended version of bash for DJGPP, this is already done for you.]</source>
          <target state="translated">[DJGPPに推奨されるバージョンのbashがある場合、これはすでに行われています。]</target>
        </trans-unit>
        <trans-unit id="5af5c7f45b299c973fea5c4dcd0294b1e6234199" translate="yes" xml:space="preserve">
          <source>[If you have the recommended versions of djdev, shell utilities and gawk, all these are already done for you, and you will not need to do anything.]</source>
          <target state="translated">[djdev、シェルユーティリティ、およびgawkの推奨バージョンがある場合、これらはすべてすでに行われているため、何もする必要はありません。]</target>
        </trans-unit>
        <trans-unit id="f3b3a575af1d23fed1f5628631ec3936ffe0f6d1" translate="yes" xml:space="preserve">
          <source>[Installing/building perl]</source>
          <target state="translated">[perlのインストール/ビルド]</target>
        </trans-unit>
        <trans-unit id="5d1e8f7d83caac3b34475dd7d9e3096070d95629" translate="yes" xml:space="preserve">
          <source>[MAYCHANGE] In other words, the array or hash fetch/store functions don't really fetch and store actual values in the case of tied arrays and hashes. They merely call &lt;code&gt;mg_copy&lt;/code&gt; to attach magic to the values that were meant to be &quot;stored&quot; or &quot;fetched&quot;. Later calls to &lt;code&gt;mg_get&lt;/code&gt; and &lt;code&gt;mg_set&lt;/code&gt; actually do the job of invoking the TIE methods on the underlying objects. Thus the magic mechanism currently implements a kind of lazy access to arrays and hashes.</source>
          <target state="translated">[MAYCHANGE]言い換えると、配列またはハッシュのフェッチ/ストア関数は、結合された配列とハッシュの場合、実際の値を実際にフェッチおよび格納しません。それらは単に &lt;code&gt;mg_copy&lt;/code&gt; を呼び出して、「格納」または「フェッチ」することを意図された値にマジックを付加します。後で &lt;code&gt;mg_get&lt;/code&gt; および &lt;code&gt;mg_set&lt;/code&gt; を呼び出すと、実際には基本となるオブジェクトでTIEメソッドが呼び出されます。したがって、魔法のメカニズムは現在、配列とハッシュへの一種の遅延アクセスを実装しています。</target>
        </trans-unit>
        <trans-unit id="2c69f013a0c0b9f7ed975da9c912abcf0653290a" translate="yes" xml:space="preserve">
          <source>[NEWVAL]</source>
          <target state="translated">[NEWVAL]</target>
        </trans-unit>
        <trans-unit id="df09316d1660db1302232803b2f5e188c2dcfea1" translate="yes" xml:space="preserve">
          <source>[Note: My</source>
          <target state="translated">[注：私の</target>
        </trans-unit>
        <trans-unit id="605fe26ef61b183da862fb5f0061fa2d880bc6b0" translate="yes" xml:space="preserve">
          <source>[Note: previous editions of the spec had &lt;code&gt;dir&lt;/code&gt; instead of &lt;code&gt;directory&lt;/code&gt;, but I think MakeMaker and various users started using &lt;code&gt;directory&lt;/code&gt;, so in deference we switched to that.]</source>
          <target state="translated">[注：仕様の以前の版を持っていた &lt;code&gt;dir&lt;/code&gt; の代わりに &lt;code&gt;directory&lt;/code&gt; 、私はMakeMakerの、様々なユーザーが使用し始めたと思う &lt;code&gt;directory&lt;/code&gt; 、そう服従で、我々はそれに切り替えます。]</target>
        </trans-unit>
        <trans-unit id="4f834c241d7bdeabf113279ffdacebc7dc88459c" translate="yes" xml:space="preserve">
          <source>[Some of this answer was contributed by Kenneth Albanowski.]</source>
          <target state="translated">[この回答の一部は、Kenneth Albanowskiによって提供されました。]</target>
        </trans-unit>
        <trans-unit id="4633b12be3cc44b6e8be5c5a150f67e693537e3b" translate="yes" xml:space="preserve">
          <source>[This function has been largely superseded by the &lt;a href=&quot;#tie-VARIABLE%2CCLASSNAME%2CLIST&quot;&gt;&lt;code&gt;tie&lt;/code&gt;&lt;/a&gt; function.]</source>
          <target state="translated">[この機能は、&lt;a href=&quot;#tie-VARIABLE%2CCLASSNAME%2CLIST&quot;&gt; &lt;code&gt;tie&lt;/code&gt; &lt;/a&gt;機能に大幅に取って代わられました。]</target>
        </trans-unit>
        <trans-unit id="e9c2c8715a2a88d854204445ba9c4d5016aa0191" translate="yes" xml:space="preserve">
          <source>[This function has been largely superseded by the &lt;a href=&quot;#tie-VARIABLE%2cCLASSNAME%2cLIST&quot;&gt;tie&lt;/a&gt; function.]</source>
          <target state="translated">[この機能は主に&lt;a href=&quot;#tie-VARIABLE%2cCLASSNAME%2cLIST&quot;&gt;tie&lt;/a&gt;関数に置き換えられました。]</target>
        </trans-unit>
        <trans-unit id="cdb63311673e46af461eb9bef294b82c2ad62ad1" translate="yes" xml:space="preserve">
          <source>[This function has been largely superseded by the &lt;a href=&quot;#untie-VARIABLE&quot;&gt;&lt;code&gt;untie&lt;/code&gt;&lt;/a&gt; function.]</source>
          <target state="translated">[この機能は、&lt;a href=&quot;#untie-VARIABLE&quot;&gt; &lt;code&gt;untie&lt;/code&gt; &lt;/a&gt;機能に大幅に取って代わられました。]</target>
        </trans-unit>
        <trans-unit id="b1c00ee4c595ea64bb97d342fb1c568e80ba451b" translate="yes" xml:space="preserve">
          <source>[This function has been largely superseded by the &lt;code&gt;&lt;a href=&quot;functions/untie&quot;&gt;untie&lt;/a&gt;&lt;/code&gt; function.]</source>
          <target state="translated">[この機能は主に &lt;code&gt;&lt;a href=&quot;functions/untie&quot;&gt;untie&lt;/a&gt;&lt;/code&gt; 機能に取って代わられました。]</target>
        </trans-unit>
        <trans-unit id="3b25169a6ac2e6f9178110c63d21693ee54fec41" translate="yes" xml:space="preserve">
          <source>[This function has been largely superseded by the &lt;code&gt;&lt;a href=&quot;untie&quot;&gt;untie&lt;/a&gt;&lt;/code&gt; function.]</source>
          <target state="translated">[この機能は主に &lt;code&gt;&lt;a href=&quot;untie&quot;&gt;untie&lt;/a&gt;&lt;/code&gt; 機能に取って代わられました。]</target>
        </trans-unit>
        <trans-unit id="466698b7c92675c3f06ae6b2691207f2e8b24913" translate="yes" xml:space="preserve">
          <source>[This section provides a short overview only...]</source>
          <target state="translated">[このセクションでは、短い概要のみを提供します...]</target>
        </trans-unit>
        <trans-unit id="68ecc94bfa207a245a096cc2d83887da582b2e04" translate="yes" xml:space="preserve">
          <source>[This section still under construction. Ignore everything here. Post no bills. Everything not permitted is forbidden.]</source>
          <target state="translated">[このセクションはまだ作成中です。ここではすべてを無視します。手形を投稿しません。許可されていないものはすべて禁止されています。]</target>
        </trans-unit>
        <trans-unit id="69f3514fe4449506ca2c5d0bbc28b3f3698032b0" translate="yes" xml:space="preserve">
          <source>[Well, it was in</source>
          <target state="translated">[まあ、それはあった</target>
        </trans-unit>
        <trans-unit id="1941408b205b2cc47e812fef0c049d71da3802fc" translate="yes" xml:space="preserve">
          <source>[\xE9 is e-acute in Latin-1. Some pod renderers would scream if I used the actual character here. -- SB]</source>
          <target state="translated">[\ xE9はラテン語-1でe-acuteです。ここで実際のキャラクターを使用すると、ポッドレンダラーの中には悲鳴を上げるものがあります。--SB]</target>
        </trans-unit>
        <trans-unit id="75645d07cfaea1a62054cc39ed68879f05d04d40" translate="yes" xml:space="preserve">
          <source>[at least as far as the &lt;code&gt;HANDLE_FLAG_INHERIT&lt;/code&gt; and &lt;code&gt;HANDLE_FLAG_PROTECT_FROM_CLOSE&lt;/code&gt; bits are concerned.]</source>
          <target state="translated">【遠いほど少なくとも &lt;code&gt;HANDLE_FLAG_INHERIT&lt;/code&gt; と &lt;code&gt;HANDLE_FLAG_PROTECT_FROM_CLOSE&lt;/code&gt; ビットが懸念しています。]</target>
        </trans-unit>
        <trans-unit id="88f04dbeb1493ee12988be863cfacc3c7afc777a" translate="yes" xml:space="preserve">
          <source>[linebreak]</source>
          <target state="translated">[linebreak]</target>
        </trans-unit>
        <trans-unit id="62dbd97a94ce152fbb8308d88e3ce5198f760e6e" translate="yes" xml:space="preserve">
          <source>[optional] {Map}</source>
          <target state="translated">[オプション] {マップ}</target>
        </trans-unit>
        <trans-unit id="0d1503358731a8163c4eaaa9c8dd65b34e1f9ea8" translate="yes" xml:space="preserve">
          <source>[optional] {String}</source>
          <target state="translated">[オプション] {文字列}</target>
        </trans-unit>
        <trans-unit id="8e45a11f71779811f3e2ea3bcf3f1743d8bd800c" translate="yes" xml:space="preserve">
          <source>[optional] {URL}</source>
          <target state="translated">[オプション] {URL}</target>
        </trans-unit>
        <trans-unit id="434d82c910fba2a895a5be59050f05f00a371e10" translate="yes" xml:space="preserve">
          <source>[r,t]</source>
          <target state="translated">[r,t]</target>
        </trans-unit>
        <trans-unit id="6018e494126b314973d815b3477ee1c68ccc6d49" translate="yes" xml:space="preserve">
          <source>[space][space]</source>
          <target state="translated">[space][space]</target>
        </trans-unit>
        <trans-unit id="a835f340cd50f914dc75f6342dfd19eac664004d" translate="yes" xml:space="preserve">
          <source>[{afa} : Afro-Asiatic (Other)]</source>
          <target state="translated">[{afa}：アフロアジア語族（その他）]</target>
        </trans-unit>
        <trans-unit id="f4fa65069474ade03a35f4d1a416665233dfbe8f" translate="yes" xml:space="preserve">
          <source>[{alg} : Algonquian languages]</source>
          <target state="translated">[{alg}：アルゴンキン語派]</target>
        </trans-unit>
        <trans-unit id="890e37d52f40da51d83a272afdb3fa93b6cb6cee" translate="yes" xml:space="preserve">
          <source>[{apa} : Apache languages]</source>
          <target state="translated">[{apa}：Apache言語]</target>
        </trans-unit>
        <trans-unit id="fd862550ed2f5eef152f42ff4be0662ee6784380" translate="yes" xml:space="preserve">
          <source>[{art} : Artificial (Other)]</source>
          <target state="translated">[{art}：人工（その他）]</target>
        </trans-unit>
        <trans-unit id="9466d3298aba8f21eb1d3efaafac32974cfd0b5b" translate="yes" xml:space="preserve">
          <source>[{ath} : Athapascan languages]</source>
          <target state="translated">[{ath}：アサバスカ諸語]</target>
        </trans-unit>
        <trans-unit id="a98b9fbed615ebe1513bc368b2167d2dd9b97caa" translate="yes" xml:space="preserve">
          <source>[{aus} : Australian languages]</source>
          <target state="translated">[{aus}：オーストラリアの言語]</target>
        </trans-unit>
        <trans-unit id="72328c0df9ed66d22b34311280ac59b652dd9856" translate="yes" xml:space="preserve">
          <source>[{bai} : Bamileke languages]</source>
          <target state="translated">[{bai}：バミレケ諸語]</target>
        </trans-unit>
        <trans-unit id="70e8e9972904de6163c656334c0c3812cf86794c" translate="yes" xml:space="preserve">
          <source>[{bat} : Baltic (Other)]</source>
          <target state="translated">[{bat}：バルト海（その他）]</target>
        </trans-unit>
        <trans-unit id="d18fa3defc9ccb425bfb380373bc5d3d11436e87" translate="yes" xml:space="preserve">
          <source>[{ber} : Berber (Other)]</source>
          <target state="translated">[{ber}：ベルベル人（その他）]</target>
        </trans-unit>
        <trans-unit id="5ccebba5698bd6a19e77fa2fab917aebb096d6aa" translate="yes" xml:space="preserve">
          <source>[{bnt} : Bantu (Other)]</source>
          <target state="translated">[{bnt}：バントゥー（その他）]</target>
        </trans-unit>
        <trans-unit id="425417830bc7057e8fb242970d0347a359178791" translate="yes" xml:space="preserve">
          <source>[{cai} : Central American Indian (Other)]</source>
          <target state="translated">[{cai}：中央アメリカインディアン（その他）]</target>
        </trans-unit>
        <trans-unit id="607b67ed1aa4559a39fbbaf385488857b44ded8a" translate="yes" xml:space="preserve">
          <source>[{cau} : Caucasian (Other)]</source>
          <target state="translated">[{cau}：白人（その他）]</target>
        </trans-unit>
        <trans-unit id="55d95cff36d94814544921c0df6a8d3631b6c209" translate="yes" xml:space="preserve">
          <source>[{cel} : Celtic (Other)]</source>
          <target state="translated">[{cel}：セルティック（その他）]</target>
        </trans-unit>
        <trans-unit id="7661f0122b032489d6586da9fa9daffbe378d4a6" translate="yes" xml:space="preserve">
          <source>[{cmc} : Chamic languages]</source>
          <target state="translated">[{cmc}：チャム諸語]</target>
        </trans-unit>
        <trans-unit id="ea53d81f1122350f392bc074e04f1169ac8ed120" translate="yes" xml:space="preserve">
          <source>[{cpe} : English-based Creoles and pidgins (Other)]</source>
          <target state="translated">[{cpe}：英語ベースのクレオールとピジン（その他）]</target>
        </trans-unit>
        <trans-unit id="72fb07b1f328d9f430b7a914c05baf3a8fd216bd" translate="yes" xml:space="preserve">
          <source>[{cpf} : French-based Creoles and pidgins (Other)]</source>
          <target state="translated">[{cpf}：フランス語ベースのクレオール語とピジン語（その他）]</target>
        </trans-unit>
        <trans-unit id="fdcf4317def919bd424e436690876a1e291cb19f" translate="yes" xml:space="preserve">
          <source>[{cpp} : Portuguese-based Creoles and pidgins (Other)]</source>
          <target state="translated">[{cpp}：ポルトガル語ベースのクレオール語とピジン語（その他）]</target>
        </trans-unit>
        <trans-unit id="508c339e508bef8a14abdfb3d40655c0c4a50d0a" translate="yes" xml:space="preserve">
          <source>[{crp} : Creoles and pidgins (Other)]</source>
          <target state="translated">[{crp}：クレオールとピジン（その他）]</target>
        </trans-unit>
        <trans-unit id="7a283dca648641889a9915cff9f14774ff0d6d2a" translate="yes" xml:space="preserve">
          <source>[{cus} : Cushitic (Other)]</source>
          <target state="translated">[{cus}：クシ語（その他）]</target>
        </trans-unit>
        <trans-unit id="845c260450d8f3f6944063b557aeea58b4c73b2e" translate="yes" xml:space="preserve">
          <source>[{dra} : Dravidian (Other)]</source>
          <target state="translated">[{dra}：ドラヴィダ語（その他）]</target>
        </trans-unit>
        <trans-unit id="c4a7ec6ce17f60fc7f7728e8d2f57d9097bfc74d" translate="yes" xml:space="preserve">
          <source>[{fiu} : Finno-Ugrian (Other)]</source>
          <target state="translated">[{fiu}：フィン・ウゴル語（その他）]</target>
        </trans-unit>
        <trans-unit id="4bdf0925942720f6c65ac79718ed94d415a611df" translate="yes" xml:space="preserve">
          <source>[{gem} : Germanic (Other)]</source>
          <target state="translated">[{gem}：ゲルマン語（その他）]</target>
        </trans-unit>
        <trans-unit id="899298caf882595ec000ade0147fb3eafa61de9e" translate="yes" xml:space="preserve">
          <source>[{inc} : Indic (Other)]</source>
          <target state="translated">[{inc}：インド語（その他）]</target>
        </trans-unit>
        <trans-unit id="c4fb035e55bf71021c0062a59ae394a1f5bd1649" translate="yes" xml:space="preserve">
          <source>[{ine} : Indo-European (Other)]</source>
          <target state="translated">[{ine}：インド・ヨーロッパ語族（その他）]</target>
        </trans-unit>
        <trans-unit id="9d90adffea98719940b5cbe1133a1ef6af4ae35d" translate="yes" xml:space="preserve">
          <source>[{ira} : Iranian (Other)]</source>
          <target state="translated">[{ira}：イラン語（その他）]</target>
        </trans-unit>
        <trans-unit id="e09071c2a909f7ab5956233b05d7dafd370f5e68" translate="yes" xml:space="preserve">
          <source>[{iro} : Iroquoian languages]</source>
          <target state="translated">[{iro}：イロコイ語族]</target>
        </trans-unit>
        <trans-unit id="9cddc4af69853d34f3cf56d2813b480cdfec3ab7" translate="yes" xml:space="preserve">
          <source>[{khi} : Khoisan (Other)]</source>
          <target state="translated">[{khi}：コイサン（その他）]</target>
        </trans-unit>
        <trans-unit id="05500162019d0b2c0d04db9c1e682e2cd21d14ee" translate="yes" xml:space="preserve">
          <source>[{map} : Austronesian (Other)]</source>
          <target state="translated">[{地図}：オーストロネシア語族（その他）]</target>
        </trans-unit>
        <trans-unit id="654ebfffa47f11fdc18ba636c0125100d6c8e0e8" translate="yes" xml:space="preserve">
          <source>[{mis} : Miscellaneous languages]</source>
          <target state="translated">[{mis}：その他の言語]</target>
        </trans-unit>
        <trans-unit id="9fce80ec2da5532823b3ad5c9cb3f98d918de4ca" translate="yes" xml:space="preserve">
          <source>[{mkh} : Mon-Khmer (Other)]</source>
          <target state="translated">[{mkh}：モンクメール語（その他）]</target>
        </trans-unit>
        <trans-unit id="4e664a0dc344663b449e3bc1b8cfcdc5fe605852" translate="yes" xml:space="preserve">
          <source>[{mno} : Manobo languages]</source>
          <target state="translated">[{mno}：マノボ諸語]</target>
        </trans-unit>
        <trans-unit id="66abde783821eb081bfde8b6b93dd953ba271dae" translate="yes" xml:space="preserve">
          <source>[{mul} : Multiple languages]</source>
          <target state="translated">[{mul}：複数の言語]</target>
        </trans-unit>
        <trans-unit id="d15a1ea38d1689e3c4d57b451afbf1b67eebb432" translate="yes" xml:space="preserve">
          <source>[{mun} : Munda languages]</source>
          <target state="translated">[{mun}：ムンダ語派]</target>
        </trans-unit>
        <trans-unit id="d7425bda360546c6ed765c4877abcbb2f0fe2866" translate="yes" xml:space="preserve">
          <source>[{myn} : Mayan languages]</source>
          <target state="translated">[{myn}：マヤ語族]</target>
        </trans-unit>
        <trans-unit id="799af38ce9758e9765726658403a3903382506ca" translate="yes" xml:space="preserve">
          <source>[{nai} : North American Indian]</source>
          <target state="translated">[{nai}：北米インディアン]</target>
        </trans-unit>
        <trans-unit id="4e009186bed3eb44dbed15a52940c8f1cfa535e6" translate="yes" xml:space="preserve">
          <source>[{nic} : Niger-Kordofanian (Other)]</source>
          <target state="translated">[{nic}：ニジェール-コルドファン語派（その他）]</target>
        </trans-unit>
        <trans-unit id="3f3b58b55e0be436684a8161c9427864d123c090" translate="yes" xml:space="preserve">
          <source>[{nub} : Nubian languages]</source>
          <target state="translated">[{nub}：ヌビア語]</target>
        </trans-unit>
        <trans-unit id="b53aeb87a08ba04513ac1c4cca2979ade6017528" translate="yes" xml:space="preserve">
          <source>[{oto} : Otomian languages]</source>
          <target state="translated">[{oto}：オトミ語]</target>
        </trans-unit>
        <trans-unit id="bba4a71d761baf34522a24193fd5b29a835ad129" translate="yes" xml:space="preserve">
          <source>[{paa} : Papuan (Other)]</source>
          <target state="translated">[{paa}：パプア（その他）]</target>
        </trans-unit>
        <trans-unit id="c1928fb9639d19edc7b45c7ae6bb02bac40789e7" translate="yes" xml:space="preserve">
          <source>[{phi} : Philippine (Other)]</source>
          <target state="translated">[{phi}：フィリピン（その他）]</target>
        </trans-unit>
        <trans-unit id="39dbad2562f7d7fc2080009a225ef4a148a80311" translate="yes" xml:space="preserve">
          <source>[{pra} : Prakrit languages]</source>
          <target state="translated">[{pra}：プラークリット言語]</target>
        </trans-unit>
        <trans-unit id="1dcd9f86d713a1ca0d4027d18d4367b1b0ef0657" translate="yes" xml:space="preserve">
          <source>[{qaa - qtz} : Reserved for local use.]</source>
          <target state="translated">[{qaa --qtz}：ローカルで使用するために予約されています。]</target>
        </trans-unit>
        <trans-unit id="a46ab8b3b4b295485e543d89ef29bc442abf1674" translate="yes" xml:space="preserve">
          <source>[{roa} : Romance (Other)]</source>
          <target state="translated">[{roa}：ロマンス（その他）]</target>
        </trans-unit>
        <trans-unit id="18827dd5893868f0a5f9aa369b78ee5c506b7667" translate="yes" xml:space="preserve">
          <source>[{sai} : South American Indian (Other)]</source>
          <target state="translated">[{sai}：南米インディアン（その他）]</target>
        </trans-unit>
        <trans-unit id="6ab5f1d451459c5889204641e5ad67cb4b79353a" translate="yes" xml:space="preserve">
          <source>[{sal} : Salishan languages]</source>
          <target state="translated">[{sal}：セイリッシュ語族]</target>
        </trans-unit>
        <trans-unit id="2f815bc34247dee80b99b9336a290bba2680d98e" translate="yes" xml:space="preserve">
          <source>[{sem} : Semitic (Other)]</source>
          <target state="translated">[{sem}：セム語（その他）]</target>
        </trans-unit>
        <trans-unit id="92b12a7547fc1c58796c952cc576557757c4bf0e" translate="yes" xml:space="preserve">
          <source>[{sio} : Siouan languages]</source>
          <target state="translated">[{sio}：スー語族]</target>
        </trans-unit>
        <trans-unit id="aed5918b604d5814c1cba19737a0fa9721fb9946" translate="yes" xml:space="preserve">
          <source>[{sit} : Sino-Tibetan (Other)]</source>
          <target state="translated">[{座る}：シナチベット語（その他）]</target>
        </trans-unit>
        <trans-unit id="f8f2e5e4cbb6f5bc296d8f5c881f904df658b7ec" translate="yes" xml:space="preserve">
          <source>[{sla} : Slavic (Other)]</source>
          <target state="translated">[{sla}：スラブ語（その他）]</target>
        </trans-unit>
        <trans-unit id="59df5a86a66ea008a52966779c85293a71562251" translate="yes" xml:space="preserve">
          <source>[{smi} : Sami languages (Other)]</source>
          <target state="translated">[{smi}：サーミ語（その他）]</target>
        </trans-unit>
        <trans-unit id="8dc63c1a093a7ce07a8bf2e6df265d72045e5c99" translate="yes" xml:space="preserve">
          <source>[{ssa} : Nilo-Saharan (Other)]</source>
          <target state="translated">[{ssa}：Nilo-Saharan（その他）]</target>
        </trans-unit>
        <trans-unit id="56be034a8d38d583c0c765f4f4ef176128358cef" translate="yes" xml:space="preserve">
          <source>[{tai} : Tai (Other)]</source>
          <target state="translated">[{tai}：Tai（その他）]</target>
        </trans-unit>
        <trans-unit id="ef2c4c1dd758a8059bff8297d2d63f755e10301a" translate="yes" xml:space="preserve">
          <source>[{tup} : Tupi languages]</source>
          <target state="translated">[{tup}：トゥピ言語]</target>
        </trans-unit>
        <trans-unit id="3e05c89d471412572e88277ed5854eb1043f1b76" translate="yes" xml:space="preserve">
          <source>[{tut} : Altaic (Other)]</source>
          <target state="translated">[{tut}：アルタイ諸語（その他）]</target>
        </trans-unit>
        <trans-unit id="84b17bc3bc55b711ccd9d64bde624539202b2704" translate="yes" xml:space="preserve">
          <source>[{wak} : Wakashan languages]</source>
          <target state="translated">[{wak}：ウォキャシ語族]</target>
        </trans-unit>
        <trans-unit id="b946ee657f3766dfb7b1cf143d071c20afc19134" translate="yes" xml:space="preserve">
          <source>[{ypk} : Yupik languages]</source>
          <target state="translated">[{ypk}：ユピック語]</target>
        </trans-unit>
        <trans-unit id="934a0e0f4ddbe988607c0ed917b71e98d99b0d97" translate="yes" xml:space="preserve">
          <source>[{zap} : Zapotec]</source>
          <target state="translated">[{zap} : Zapotec]</target>
        </trans-unit>
        <trans-unit id="ea691db8970832d7fe8017c8cc559c7489a255a2" translate="yes" xml:space="preserve">
          <source>\%d better written as $%d</source>
          <target state="translated">\％dは$％dと書く方が良い</target>
        </trans-unit>
        <trans-unit id="0cb0cf8be7590ba0a93c7d3ce1f505c4701be694" translate="yes" xml:space="preserve">
          <source>\%expect is a ref to a hash of expected values for the test result.</source>
          <target state="translated">\％expectは、テスト結果の期待値のハッシュへの参照です。</target>
        </trans-unit>
        <trans-unit id="71e1cf8d1368c4c52fd1828cfd5f0e5bbe01d4f2" translate="yes" xml:space="preserve">
          <source>\%expect is a ref to an hash of expected values for the test result.</source>
          <target state="translated">\％expectは、テスト結果の期待値のハッシュへの参照です。</target>
        </trans-unit>
        <trans-unit id="ab0c166363e816ce194a18b525f051511ac2f787" translate="yes" xml:space="preserve">
          <source>\%result is a ref to a test result hash.</source>
          <target state="translated">\％resultは、テスト結果ハッシュへの参照です。</target>
        </trans-unit>
        <trans-unit id="afdb798959662b1202a71d3327ae85cfd5ef9cf9" translate="yes" xml:space="preserve">
          <source>\&amp;amp;CODE</source>
          <target state="translated">\&amp;amp;CODE</target>
        </trans-unit>
        <trans-unit id="02afbd090e40d0326686a40bd9f814cca4d14b98" translate="yes" xml:space="preserve">
          <source>\&amp;amp;some_routine</source>
          <target state="translated">\&amp;amp;some_routine</target>
        </trans-unit>
        <trans-unit id="6aed514711005e64d16f2b25e3ea825d7ec2dce5" translate="yes" xml:space="preserve">
          <source>\&amp;amp;test_sub is a reference to a subroutine.</source>
          <target state="translated">\＆test_subは、サブルーチンへの参照です。</target>
        </trans-unit>
        <trans-unit id="7df590088159a1d7bbcd6a7b57cdce874e69d567" translate="yes" xml:space="preserve">
          <source>\@expect is a ref to an array of hash refs which are expected test results.</source>
          <target state="translated">\ @expectは、期待されるテスト結果であるハッシュ参照の配列への参照です。</target>
        </trans-unit>
        <trans-unit id="eac4ae0ca650ceb316ee54543453a6a9c8a6e7bc" translate="yes" xml:space="preserve">
          <source>\@expects is a ref to an array of hash refs.</source>
          <target state="translated">\ @expectsは、ハッシュ参照の配列への参照です。</target>
        </trans-unit>
        <trans-unit id="68764c244b4d146474bfa4d07659ea35d4a2c97f" translate="yes" xml:space="preserve">
          <source>\@results is a ref to an array of test results.</source>
          <target state="translated">\ @resultsは、テスト結果の配列への参照です。</target>
        </trans-unit>
        <trans-unit id="66f63b124210f07a558afc81377745a77e3f26e9" translate="yes" xml:space="preserve">
          <source>\A</source>
          <target state="translated">\A</target>
        </trans-unit>
        <trans-unit id="8a1c1fe5b346db020f3988bf22f39d10d3abd324" translate="yes" xml:space="preserve">
          <source>\C no longer supported in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="translated">\ Cは正規表現でサポートされなくなりました。&amp;lt;-ここにm /％s /でマーク</target>
        </trans-unit>
        <trans-unit id="cb559588de140bc32d992097ac9c98f627da21d3" translate="yes" xml:space="preserve">
          <source>\D is a negated \d; it represents any character but a digit</source>
          <target state="translated">\ Dは否定された\ dです。数字以外の任意の文字を表す</target>
        </trans-unit>
        <trans-unit id="6f370d6af4556227e5ea557e0c0431081559d1a3" translate="yes" xml:space="preserve">
          <source>\D is a negated \d; it represents any other character than a digit, or [^\d]</source>
          <target state="translated">\ Dは否定された\ dです。数字以外の文字を表す、または[^ \ d]</target>
        </trans-unit>
        <trans-unit id="ff4d3b9a401c3edd442bd234956682476594b31a" translate="yes" xml:space="preserve">
          <source>\G</source>
          <target state="translated">\G</target>
        </trans-unit>
        <trans-unit id="17687e10d4fd84cd280070d87d4f748b37e0b705" translate="yes" xml:space="preserve">
          <source>\K</source>
          <target state="translated">\K</target>
        </trans-unit>
        <trans-unit id="f5285799a8946c5cfd96394fdeb521457b5e1799" translate="yes" xml:space="preserve">
          <source>\K not permitted in lookahead/lookbehind in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="translated">\ Kは、正規表現の先読み/後読みでは許可されていません。&amp;lt;-ここにm /％s /でマーク</target>
        </trans-unit>
        <trans-unit id="483707e791c24bf4f182daf8d06032f62bf516af" translate="yes" xml:space="preserve">
          <source>\N</source>
          <target state="translated">\N</target>
        </trans-unit>
        <trans-unit id="8bbe2786560e6af575169d7b88560c16a4d9ad3a" translate="yes" xml:space="preserve">
          <source>\N in a character class must be a named character: \N{...} in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="translated">文字クラスの\ Nは、名前付き文字である必要があります。正規表現の\ N {...}; &amp;lt;-ここにm /％s /でマーク</target>
        </trans-unit>
        <trans-unit id="4b60caece8e9624e4c91f3da6482cbb9fa5912e3" translate="yes" xml:space="preserve">
          <source>\N, like the period, matches any character but &quot;\n&quot;, but it does so regardless of whether the modifier &lt;code&gt;//s&lt;/code&gt; is in effect.</source>
          <target state="translated">\ Nはピリオドと同様に、「\ n」以外の任意の文字に一致しますが、修飾子 &lt;code&gt;//s&lt;/code&gt; が有効かどうかに関係なく一致します。</target>
        </trans-unit>
        <trans-unit id="9a1dc85e675c05783069ff9ff4d785ec2ed003f3" translate="yes" xml:space="preserve">
          <source>\N{} here is restricted to one character in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="translated">ここでの\ N {}は、正規表現の1文字に制限されています。&amp;lt;-ここにm /％s /でマーク</target>
        </trans-unit>
        <trans-unit id="abbc4ac6b8b2f4165b4292f95f7dc5a1883a8db6" translate="yes" xml:space="preserve">
          <source>\R</source>
          <target state="translated">\R</target>
        </trans-unit>
        <trans-unit id="5201358bd3798962465786e1340b8d798eb0da66" translate="yes" xml:space="preserve">
          <source>\S is a negated \s; it represents any non-whitespace character</source>
          <target state="translated">\ Sは否定された\ sです。空白以外の文字を表します</target>
        </trans-unit>
        <trans-unit id="2aaa2b30524de7ddb035b2ae4eda9d942f299a65" translate="yes" xml:space="preserve">
          <source>\S is a negated \s; it represents any non-whitespace character [^\s]</source>
          <target state="translated">\ Sは否定された\ sです。空白以外の文字[^ \ s]を表します</target>
        </trans-unit>
        <trans-unit id="133129d31f2a64079b4ceec9832484853084047e" translate="yes" xml:space="preserve">
          <source>\W is a negated \w; it represents any non-word character</source>
          <target state="translated">\ Wは否定された\ wです。単語以外の文字を表します</target>
        </trans-unit>
        <trans-unit id="2f560e92ebecb72c198e33822a82e6e5d9a8c550" translate="yes" xml:space="preserve">
          <source>\W is a negated \w; it represents any non-word character [^\w]</source>
          <target state="translated">\ Wは否定された\ wです。単語以外の文字を表します[^ \ w]</target>
        </trans-unit>
        <trans-unit id="a3b8b79051e90f6274c034e3d6dfb1c15e8e9b54" translate="yes" xml:space="preserve">
          <source>\X</source>
          <target state="translated">\X</target>
        </trans-unit>
        <trans-unit id="b90aec5400f0b6cc3d07bb3781c085722680ca2f" translate="yes" xml:space="preserve">
          <source>\b{}, \b, \B{}, \B</source>
          <target state="translated">\b{}, \b, \B{}, \B</target>
        </trans-unit>
        <trans-unit id="ddc0294fd2b2565335d9fa242ca21ab1de388250" translate="yes" xml:space="preserve">
          <source>\d is a digit and represents</source>
          <target state="translated">\ dは数字であり、</target>
        </trans-unit>
        <trans-unit id="97c6b30e873b86cfc47d930fe4d9ba2652595791" translate="yes" xml:space="preserve">
          <source>\d matches a digit, not just [0-9] but also digits from non-roman scripts</source>
          <target state="translated">\ dは、[0-9]だけでなく、ローマ字以外のスクリプトの数字にも一致します</target>
        </trans-unit>
        <trans-unit id="ef7e6794ca9c6a06b54b66f279237fb8daaaeea8" translate="yes" xml:space="preserve">
          <source>\n</source>
          <target state="translated">\n</target>
        </trans-unit>
        <trans-unit id="a974294d6db4a71ba17c7db82cb46379a2d8b35e" translate="yes" xml:space="preserve">
          <source>\p{Canonical_Combining_Class=Attached_Below_Left}</source>
          <target state="translated">\p{Canonical_Combining_Class=Attached_Below_Left}</target>
        </trans-unit>
        <trans-unit id="ca0c5f3718912735d80dbb2fe5a50f3451d21114" translate="yes" xml:space="preserve">
          <source>\p{Canonical_Combining_Class=CCC133}</source>
          <target state="translated">\p{Canonical_Combining_Class=CCC133}</target>
        </trans-unit>
        <trans-unit id="04b74fb9c8893b09c9c9dc5cc820de1c73ef5617" translate="yes" xml:space="preserve">
          <source>\p{Grapheme_Cluster_Break=E_Base_GAZ}</source>
          <target state="translated">\p{Grapheme_Cluster_Break=E_Base_GAZ}</target>
        </trans-unit>
        <trans-unit id="c5461ea791cf06bd76e726684a27c84bf1a40659" translate="yes" xml:space="preserve">
          <source>\p{Grapheme_Cluster_Break=E_Base}</source>
          <target state="translated">\p{Grapheme_Cluster_Break=E_Base}</target>
        </trans-unit>
        <trans-unit id="e1fb594f6150c08973d520212a7b0e828eec6496" translate="yes" xml:space="preserve">
          <source>\p{Grapheme_Cluster_Break=E_Modifier}</source>
          <target state="translated">\p{Grapheme_Cluster_Break=E_Modifier}</target>
        </trans-unit>
        <trans-unit id="9a4e59c593a8c32d517ccacb7afef90b8a49eb00" translate="yes" xml:space="preserve">
          <source>\p{Grapheme_Cluster_Break=Glue_After_Zwj}</source>
          <target state="translated">\p{Grapheme_Cluster_Break=Glue_After_Zwj}</target>
        </trans-unit>
        <trans-unit id="9c5218eb0fd37f891a68926a9137c004a26913f3" translate="yes" xml:space="preserve">
          <source>\p{Word_Break=E_Base_GAZ}</source>
          <target state="translated">\p{Word_Break=E_Base_GAZ}</target>
        </trans-unit>
        <trans-unit id="365fb59486ae52add3f2c2ea1b300ad1d4534ceb" translate="yes" xml:space="preserve">
          <source>\p{Word_Break=E_Base}</source>
          <target state="translated">\p{Word_Break=E_Base}</target>
        </trans-unit>
        <trans-unit id="648c6bda3c58f85f91e4e26c2fdd9f59c14ed747" translate="yes" xml:space="preserve">
          <source>\p{Word_Break=E_Modifier}</source>
          <target state="translated">\p{Word_Break=E_Modifier}</target>
        </trans-unit>
        <trans-unit id="fbd384e90c4f2793bc44a27dcffada8abab3865b" translate="yes" xml:space="preserve">
          <source>\p{Word_Break=Glue_After_Zwj}</source>
          <target state="translated">\p{Word_Break=Glue_After_Zwj}</target>
        </trans-unit>
        <trans-unit id="7b4662d5c71b2e001cf94c995515942d7af18900" translate="yes" xml:space="preserve">
          <source>\s is a whitespace character and represents</source>
          <target state="translated">\ sは空白文字であり、</target>
        </trans-unit>
        <trans-unit id="34a39001363ef5f5ff61ce5c0f19ca73473f1c4c" translate="yes" xml:space="preserve">
          <source>\s matches a whitespace character, the set [\ \t\r\n\f] and others</source>
          <target state="translated">\ sは空白文字、セット[\ \ t \ r \ n \ f]などに一致します</target>
        </trans-unit>
        <trans-unit id="5b2fc8d661205bb1347d335b86f497e98283eb99" translate="yes" xml:space="preserve">
          <source>\w is a word character (alphanumeric or _) and represents</source>
          <target state="translated">\ wは単語文字（英数字または_）であり、</target>
        </trans-unit>
        <trans-unit id="9dec4b43c57ccafde6f9f014b8fdbdc6ad78db44" translate="yes" xml:space="preserve">
          <source>\w matches a word character (alphanumeric or _), not just [0-9a-zA-Z_] but also digits and characters from non-roman scripts</source>
          <target state="translated">\ wは、[0-9a-zA-Z_]だけでなく、ローマ字以外のスクリプトの数字や文字も含む単語文字（英数字または_）に一致します</target>
        </trans-unit>
        <trans-unit id="3ae3339d3df42bd81574a61520ae7ec1b26f3f20" translate="yes" xml:space="preserve">
          <source>\xXX</source>
          <target state="translated">\xXX</target>
        </trans-unit>
        <trans-unit id="c2abe45415ca12f335bcc6549ab62cf0fbc8e7bf" translate="yes" xml:space="preserve">
          <source>\z, \Z</source>
          <target state="translated">\グーグー</target>
        </trans-unit>
        <trans-unit id="4ff447b8ef42ca51fa6fb287bed8d40f49be58f1" translate="yes" xml:space="preserve">
          <source>]</source>
          <target state="translated">]</target>
        </trans-unit>
        <trans-unit id="5270612a32d634db637d354ac0c6c3ea3a691c4e" translate="yes" xml:space="preserve">
          <source>] ...]</source>
          <target state="translated">] ...]</target>
        </trans-unit>
        <trans-unit id="7ba1b0d7168057117598130b4cf4913ce7a6d1dd" translate="yes" xml:space="preserve">
          <source>] [</source>
          <target state="translated">] [</target>
        </trans-unit>
        <trans-unit id="e5f96af2d25deb494bcf280fcc22ad9c64b0b550" translate="yes" xml:space="preserve">
          <source>] [ &lt;b&gt;--&lt;/b&gt; ] [</source>
          <target state="translated">] [ &lt;b&gt;-&lt;/b&gt; ] [</target>
        </trans-unit>
        <trans-unit id="7837a05d80f9d4246db05db7739ac9da350692ee" translate="yes" xml:space="preserve">
          <source>] [ &lt;b&gt;-A&lt;/b&gt; ] [ &lt;b&gt;-ok&lt;/b&gt; | &lt;b&gt;-okay&lt;/b&gt; | &lt;b&gt;-nok&lt;/b&gt; | &lt;b&gt;-nokay&lt;/b&gt; ]</source>
          <target state="translated">] [ &lt;b&gt;-A&lt;/b&gt; ] [ &lt;b&gt;-ok&lt;/b&gt; | &lt;b&gt;-大丈夫&lt;/b&gt; | &lt;b&gt;-nok&lt;/b&gt; | &lt;b&gt;-いいえ&lt;/b&gt; ]</target>
        </trans-unit>
        <trans-unit id="5d5d86b624a368f240fc8ef717bfac5763b684cc" translate="yes" xml:space="preserve">
          <source>] [ &lt;b&gt;-F&lt;/b&gt;</source>
          <target state="translated">] [ &lt;b&gt;-F&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="fa5aee76641c8374c4a3bb363faca409d18cd95d" translate="yes" xml:space="preserve">
          <source>] [ &lt;b&gt;-M&lt;/b&gt;[&lt;b&gt;-&lt;/b&gt;]</source>
          <target state="translated">] [ &lt;b&gt;-M&lt;/b&gt; [ &lt;b&gt;-&lt;/b&gt; ]</target>
        </trans-unit>
        <trans-unit id="fe33edc3b5acacf101538a5199d8ef6004372824" translate="yes" xml:space="preserve">
          <source>] [ &lt;b&gt;-b&lt;/b&gt;</source>
          <target state="translated">] [ &lt;b&gt;-b&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="d91a8c76a043075cdd5f57b8dc8dd020742dc547" translate="yes" xml:space="preserve">
          <source>] [ &lt;b&gt;-c&lt;/b&gt;</source>
          <target state="translated">] [ &lt;b&gt;-c&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="4088d7468ddaef6b6676933981d369aadcae05a4" translate="yes" xml:space="preserve">
          <source>] [ &lt;b&gt;-e&lt;/b&gt;</source>
          <target state="translated">] [ &lt;b&gt;-e&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="d446bd20cd4f210e32dddf0953007e6f2d1b5053" translate="yes" xml:space="preserve">
          <source>] [ &lt;b&gt;-f&lt;/b&gt; ] [ &lt;b&gt;-C [&lt;i&gt;number/list&lt;/i&gt;] &lt;/b&gt;] [ &lt;b&gt;-S&lt;/b&gt; ] [ &lt;b&gt;-x&lt;/b&gt;[</source>
          <target state="translated">] [ &lt;b&gt;-f&lt;/b&gt; ] [ &lt;b&gt;-C [ &lt;i&gt;番号/リスト&lt;/i&gt; ]&lt;/b&gt; ] [ &lt;b&gt;-S&lt;/b&gt; ] [ &lt;b&gt;-x&lt;/b&gt; [</target>
        </trans-unit>
        <trans-unit id="1c79575bb8bb9bc67989f60e2e072dc073000234" translate="yes" xml:space="preserve">
          <source>] [ &lt;b&gt;-f&lt;/b&gt; ][ &lt;b&gt;-C [&lt;i&gt;number/list&lt;/i&gt;] &lt;/b&gt;][ &lt;b&gt;-S&lt;/b&gt; ][ &lt;b&gt;-x&lt;/b&gt;[</source>
          <target state="translated">] [ &lt;b&gt;-f&lt;/b&gt; ] [ &lt;b&gt;-C [&lt;i&gt;番号/リスト&lt;/i&gt;]&lt;/b&gt; ] [ &lt;b&gt;-S&lt;/b&gt; ] [ &lt;b&gt;-x&lt;/b&gt; [</target>
        </trans-unit>
        <trans-unit id="aca1a0eb03ef6c4968553072034eeee79bad305b" translate="yes" xml:space="preserve">
          <source>] [ &lt;b&gt;-l&lt;/b&gt;[</source>
          <target state="translated">] [ &lt;b&gt;-l&lt;/b&gt; [</target>
        </trans-unit>
        <trans-unit id="f481bbb7a3ba5ecc6ab5d2ec8921b0caad222177" translate="yes" xml:space="preserve">
          <source>] [ &lt;b&gt;-m&lt;/b&gt;[&lt;b&gt;-&lt;/b&gt;]</source>
          <target state="translated">] [ &lt;b&gt;-m&lt;/b&gt; [ &lt;b&gt;-&lt;/b&gt; ]</target>
        </trans-unit>
        <trans-unit id="7be946169865caf0b4ad4e1c551c97f832b6089b" translate="yes" xml:space="preserve">
          <source>] [ &lt;b&gt;-r&lt;/b&gt;</source>
          <target state="translated">] [ &lt;b&gt;-r&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="3b371bc5f1731a182afaca0f4c21e6e42f754174" translate="yes" xml:space="preserve">
          <source>] [ &lt;b&gt;-s&lt;/b&gt;</source>
          <target state="translated">] [ &lt;b&gt;-s&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="1cab1fd629b30db28801a88fb200dff0c7358250" translate="yes" xml:space="preserve">
          <source>] [ &lt;code&gt;,&lt;/code&gt; [</source>
          <target state="translated">] [ &lt;code&gt;,&lt;/code&gt; [</target>
        </trans-unit>
        <trans-unit id="60ce1ac427ca955aba7df5e26e666a0cbcdc2f9a" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;--date&lt;/b&gt;=</source>
          <target state="translated">] [ &lt;b&gt;--date&lt;/b&gt; =</target>
        </trans-unit>
        <trans-unit id="d95dd25605574b2c81782f8507419949dc89534a" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;--errors&lt;/b&gt;=</source>
          <target state="translated">] [ &lt;b&gt;--errors&lt;/b&gt; =</target>
        </trans-unit>
        <trans-unit id="fbbc117050d9385ff235a1dc760a3b8dfa0999cc" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;--fixed&lt;/b&gt;=</source>
          <target state="translated">] [ &lt;b&gt;--fixed&lt;/b&gt; =</target>
        </trans-unit>
        <trans-unit id="a9250074a5445bcf8eef004dc71ec67ecb9c809b" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;--fixedbold&lt;/b&gt;=</source>
          <target state="translated">] [ &lt;b&gt;--fixedbold&lt;/b&gt; =</target>
        </trans-unit>
        <trans-unit id="d7f9db810e921cd28d21cd440fca4722b8d4bf69" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;--fixedbolditalic&lt;/b&gt;=</source>
          <target state="translated">] [ &lt;b&gt;--fixedbolditalic&lt;/b&gt; =</target>
        </trans-unit>
        <trans-unit id="aa2fbdd948dba01a46110fa01725308ca2ef5a08" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;--fixeditalic&lt;/b&gt;=</source>
          <target state="translated">] [ &lt;b&gt;--fixeditalic&lt;/b&gt; =</target>
        </trans-unit>
        <trans-unit id="598381c0d6289fea9d7081a5559fb3a9517a9b91" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;--lquote&lt;/b&gt;=</source>
          <target state="translated">] [&lt;b&gt;--lquote&lt;/b&gt;=</target>
        </trans-unit>
        <trans-unit id="6fe77b356c6468bc7d92a318ad6bc1146c2e9172" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;--name&lt;/b&gt;=</source>
          <target state="translated">] [ &lt;b&gt;--name&lt;/b&gt; =</target>
        </trans-unit>
        <trans-unit id="39d7370445bc798950f647a09f55cf0aa24d1af4" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;--nourls&lt;/b&gt;] [&lt;b&gt;--official&lt;/b&gt;] [&lt;b&gt;--quotes&lt;/b&gt;=</source>
          <target state="translated">] [ &lt;b&gt;--nourls&lt;/b&gt; ] [ &lt;b&gt;--official&lt;/b&gt; ] [ &lt;b&gt;--quotes&lt;/b&gt; =</target>
        </trans-unit>
        <trans-unit id="2faa1c1a5aa58be18579ec2559cfb2bf539a4403" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;--nourls&lt;/b&gt;] [&lt;b&gt;--official&lt;/b&gt;] [&lt;b&gt;--release&lt;/b&gt;=</source>
          <target state="translated">] [&lt;b&gt;--nourls&lt;/b&gt;] [&lt;b&gt;--official&lt;/b&gt;] [&lt;b&gt;--release&lt;/b&gt;=</target>
        </trans-unit>
        <trans-unit id="3ec1ee1005b040af6eed1e1fb1b89be01226d9ce" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;--nourls&lt;/b&gt;] [&lt;b&gt;--stderr&lt;/b&gt;] [&lt;b&gt;-w&lt;/b&gt;</source>
          <target state="translated">] [ &lt;b&gt;--nourls&lt;/b&gt; ] [ &lt;b&gt;--stderr&lt;/b&gt; ] [ &lt;b&gt;-w&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="8f71c7c975569c870cafbfefd4d0a731aa33905e" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;--quotes&lt;/b&gt;=</source>
          <target state="translated">] [&lt;b&gt;--quotes&lt;/b&gt;=</target>
        </trans-unit>
        <trans-unit id="fc864e3beb0db82da5fea274b5d83179e2d64279" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;--release&lt;/b&gt;[=</source>
          <target state="translated">] [ &lt;b&gt;--release&lt;/b&gt; [=</target>
        </trans-unit>
        <trans-unit id="883348c030d981535fffeae3ce49b29221cb11aa" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;--rquote&lt;/b&gt;=</source>
          <target state="translated">] [&lt;b&gt;--rquote&lt;/b&gt;=</target>
        </trans-unit>
        <trans-unit id="aa88f6f18842561845086150417082edefa39c4d" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;--section&lt;/b&gt;=</source>
          <target state="translated">] [&lt;b&gt;--section&lt;/b&gt;=</target>
        </trans-unit>
        <trans-unit id="039bb11ec7e8c6197572dde03eb7f6b45f6c8aa6" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;--stderr&lt;/b&gt;] [&lt;b&gt;--utf8&lt;/b&gt;] [&lt;b&gt;--verbose&lt;/b&gt;] [</source>
          <target state="translated">] [ &lt;b&gt;--stderr&lt;/b&gt; ] [ &lt;b&gt;--utf8&lt;/b&gt; ] [ &lt;b&gt;--verbose&lt;/b&gt; ] [</target>
        </trans-unit>
        <trans-unit id="a4b5a58dd7ad938ef0e7ae582da7c0d873b1c242" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;-formatter&lt;/b&gt;</source>
          <target state="translated">] [ &lt;b&gt;-formatter&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="3fea5aca88ab916f93ed287dace98a76f7c143b9" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;-i&lt;/b&gt;</source>
          <target state="translated">] [ &lt;b&gt;-i&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="53f6bda63d23372157c365e9965c7ef45e33a277" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;-output&lt;/b&gt;</source>
          <target state="translated">] [ &lt;b&gt;-output&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="18e0dd56af29c5174edbefe6f7085682dda6e116" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;-pathlist&lt;/b&gt;</source>
          <target state="translated">] [ &lt;b&gt;-pathlist&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="22e124d430902d5c5221cf1c7cf4da237a26222d" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;-q&lt;/b&gt;</source>
          <target state="translated">] [ &lt;b&gt;-q&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="1a2ca8f6fa2e2e507929f052428bcdef45fbbb15" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;-utf8&lt;/b&gt;]</source>
          <target state="translated">] [&lt;b&gt;-utf8&lt;/b&gt;]</target>
        </trans-unit>
        <trans-unit id="0fde4e5d48f00a1e501ad8fe7e8926bde75175b1" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;-verbose&lt;/b&gt;</source>
          <target state="translated">] [ &lt;b&gt;-verbose&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="e725a8e5ac100bccc71bd3fa100f49857c67db06" translate="yes" xml:space="preserve">
          <source>] ] &lt;code&gt;}&lt;/code&gt;.</source>
          <target state="translated">]] &lt;code&gt;}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="840af7de6cad4319ff4be78eacfb9c5acf43cf39" translate="yes" xml:space="preserve">
          <source>] ] [ &lt;b&gt;-0&lt;/b&gt;[</source>
          <target state="translated">]] [ &lt;b&gt;-0&lt;/b&gt; [</target>
        </trans-unit>
        <trans-unit id="9bd44ceffbf549e2ad098d1002b1d677b7d0aa0b" translate="yes" xml:space="preserve">
          <source>] ] [ &lt;b&gt;-D&lt;/b&gt;[</source>
          <target state="translated">]] [ &lt;b&gt;-D&lt;/b&gt; [</target>
        </trans-unit>
        <trans-unit id="7bb86a5d6f5da412edc5fa8d69ccfe2ff581bca6" translate="yes" xml:space="preserve">
          <source>] ] [ &lt;b&gt;-I&lt;/b&gt;</source>
          <target state="translated">]] [ &lt;b&gt;-I&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="598e07f95f029fa4f2ce352acaf2288c664b4b76" translate="yes" xml:space="preserve">
          <source>] ] [ &lt;b&gt;-cw&lt;/b&gt; ] [ &lt;b&gt;-d&lt;/b&gt;[&lt;b&gt;t&lt;/b&gt;][:</source>
          <target state="translated">]] [ &lt;b&gt;-cw&lt;/b&gt; ] [ &lt;b&gt;-d&lt;/b&gt; [ &lt;b&gt;t&lt;/b&gt; ] [：</target>
        </trans-unit>
        <trans-unit id="9db4a34f3f65d57a976aae91bae6f7bcb0835f01" translate="yes" xml:space="preserve">
          <source>] ] [ &lt;b&gt;-i&lt;/b&gt;[</source>
          <target state="translated">]] [ &lt;b&gt;-i&lt;/b&gt; [</target>
        </trans-unit>
        <trans-unit id="9d460c5f4d3c2477cabad0ac755529bb24fc2217" translate="yes" xml:space="preserve">
          <source>] ] [ &lt;b&gt;-pna&lt;/b&gt; ] [ &lt;b&gt;-F&lt;/b&gt;</source>
          <target state="translated">]] [ &lt;b&gt;-pna&lt;/b&gt; ] [ &lt;b&gt;-F&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="fc8d2ac6bf0f644f728f5f8cfc8080a8f51efa0e" translate="yes" xml:space="preserve">
          <source>] ] [ [&lt;b&gt;-e&lt;/b&gt;|&lt;b&gt;-E&lt;/b&gt;]</source>
          <target state="translated">]] [[ &lt;b&gt;-e&lt;/b&gt; | &lt;b&gt;-E&lt;/b&gt; ]</target>
        </trans-unit>
        <trans-unit id="111952a7692855ea3feda96c7d4ca8d1f14a3899" translate="yes" xml:space="preserve">
          <source>] ][ &lt;b&gt;-I&lt;/b&gt;</source>
          <target state="translated">] ][ &lt;b&gt;-I&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="977d9e2fca42430e113c7039a016f5298fe31763" translate="yes" xml:space="preserve">
          <source>] ][ &lt;b&gt;-cw&lt;/b&gt; ] [ &lt;b&gt;-d&lt;/b&gt;[&lt;b&gt;t&lt;/b&gt;][:</source>
          <target state="translated">] ][ &lt;b&gt;-cw&lt;/b&gt; ] [ &lt;b&gt;-d&lt;/b&gt;[&lt;b&gt;t&lt;/b&gt;][:</target>
        </trans-unit>
        <trans-unit id="ada6ec58cffb3a92b9142956524995d22b826e38" translate="yes" xml:space="preserve">
          <source>] ][ &lt;b&gt;-i&lt;/b&gt;[</source>
          <target state="translated">] ][ &lt;b&gt;-i&lt;/b&gt;[</target>
        </trans-unit>
        <trans-unit id="dde974d2efd29ca297f3ff52ec2f02615522e221" translate="yes" xml:space="preserve">
          <source>] ][ &lt;b&gt;-pna&lt;/b&gt; ] [ &lt;b&gt;-F&lt;/b&gt;</source>
          <target state="translated">] ][ &lt;b&gt;-pna&lt;/b&gt; ] [ &lt;b&gt;-F&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="3586c07f7223d15b1d934a754560b0cb733fc531" translate="yes" xml:space="preserve">
          <source>] ][ [&lt;b&gt;-e&lt;/b&gt;|&lt;b&gt;-E&lt;/b&gt;]</source>
          <target state="translated">] ][ [&lt;b&gt;-e&lt;/b&gt;|&lt;b&gt;-E&lt;/b&gt;]</target>
        </trans-unit>
        <trans-unit id="7f27cd3f2fd7fab298d7d2375adf9f5a204cffd8" translate="yes" xml:space="preserve">
          <source>] and used to identify the disk. This allows drive letters for partitions on that disk to remain constant even if the SCSI Target ID of the disk gets changed.</source>
          <target state="translated">]そしてディスクを識別するために使用されます。これにより、ディスクのSCSIターゲットIDが変更された場合でも、そのディスク上のパーティションのドライブ文字を一定に保つことができます。</target>
        </trans-unit>
        <trans-unit id="9a7dbaad3cf2aa9abf7389e31afb732d6e15865c" translate="yes" xml:space="preserve">
          <source>]. I.e., &quot;_1&quot; becomes with $_[1], and &quot;_-3&quot; is interpreted as $_[-3] (in which case @_ should have at least three elements in it). Note that $_[0] is the language handle, and is typically not named directly.</source>
          <target state="translated">]。つまり、「_ 1」は$ _ [1]になり、「_- 3」は$ _ [-3]として解釈されます（この場合、@ _には少なくとも3つの要素が必要です）。$ _ [0]は言語ハンドルであり、通常は直接名前が付けられないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="3fad04c26433591d23451512c23642ef92daf2c6" translate="yes" xml:space="preserve">
          <source>]...</source>
          <target state="translated">]...</target>
        </trans-unit>
        <trans-unit id="37f7e3818501d135b7c04c631ac1c9622d4bd1a0" translate="yes" xml:space="preserve">
          <source>][ &lt;b&gt;-F&lt;/b&gt;</source>
          <target state="translated">][ &lt;b&gt;-F&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="6265232c57d3a89c1c1b7e83c56ae5a50b39da84" translate="yes" xml:space="preserve">
          <source>][ &lt;b&gt;-b&lt;/b&gt;</source>
          <target state="translated">][ &lt;b&gt;-b&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="5972a6cc6acfedeffe3743f6429e6e53415afa84" translate="yes" xml:space="preserve">
          <source>][ &lt;b&gt;-c&lt;/b&gt;</source>
          <target state="translated">][ &lt;b&gt;-c&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="dc7c307622a36e9386e2700a5865ad71c2573f98" translate="yes" xml:space="preserve">
          <source>][ &lt;b&gt;-e&lt;/b&gt;</source>
          <target state="translated">][ &lt;b&gt;-e&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="402dd1d14c7ca6fe95fb093f057cc263522bb2b7" translate="yes" xml:space="preserve">
          <source>][ &lt;b&gt;-ok&lt;/b&gt; | &lt;b&gt;-okay&lt;/b&gt; | &lt;b&gt;-nok&lt;/b&gt; | &lt;b&gt;-nokay&lt;/b&gt; ]</source>
          <target state="translated">] [ &lt;b&gt;-ok&lt;/b&gt; | &lt;b&gt;-大丈夫&lt;/b&gt;| &lt;b&gt;-ノック&lt;/b&gt;| &lt;b&gt;-大丈夫&lt;/b&gt;]</target>
        </trans-unit>
        <trans-unit id="e97ddbb3cf6b7554a56a88d9fe5a49d6a3173812" translate="yes" xml:space="preserve">
          <source>][ &lt;b&gt;-r&lt;/b&gt;</source>
          <target state="translated">][ &lt;b&gt;-r&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="e302e7485aa6fc53128e52dc02369fd5764e374f" translate="yes" xml:space="preserve">
          <source>][ &lt;b&gt;-s&lt;/b&gt;</source>
          <target state="translated">][ &lt;b&gt;-s&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="36407ed3b603d0dfcd1bd6d50bc3fd8861d8d53f" translate="yes" xml:space="preserve">
          <source>][&lt;b&gt;,-p&lt;/b&gt;][&lt;b&gt;,-q&lt;/b&gt;][&lt;b&gt;,-l&lt;/b&gt;] [&lt;b&gt;,-s&lt;/b&gt;</source>
          <target state="translated">] [ &lt;b&gt;、-p&lt;/b&gt; ] [ &lt;b&gt;、-q&lt;/b&gt; ] [ &lt;b&gt;、-l&lt;/b&gt; ] [ &lt;b&gt;、-s&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="a9030ca5cbcfd3f3b2ec230506e50fbd3cb2d7e0" translate="yes" xml:space="preserve">
          <source>][&lt;b&gt;,-x&lt;/b&gt;</source>
          <target state="translated">][&lt;b&gt;,-x&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="8755a99ada779c83177a95e225a5063fe7499c98" translate="yes" xml:space="preserve">
          <source>]] [&lt;b&gt;--section&lt;/b&gt;=</source>
          <target state="translated">]] [ &lt;b&gt;--section&lt;/b&gt; =</target>
        </trans-unit>
        <trans-unit id="469cef47dbe2b6e7c6ee58a32c9259e15b4c9fc0" translate="yes" xml:space="preserve">
          <source>^D</source>
          <target state="translated">^D</target>
        </trans-unit>
        <trans-unit id="51ed6f1bbf690dfe43966127d805b719c3488acf" translate="yes" xml:space="preserve">
          <source>^U</source>
          <target state="translated">^U</target>
        </trans-unit>
        <trans-unit id="53a0acfad59379b3e050338bf9f23cfc172ee787" translate="yes" xml:space="preserve">
          <source>_</source>
          <target state="translated">_</target>
        </trans-unit>
        <trans-unit id="f04d60942a25cf98c507bee3b1d809a16396e487" translate="yes" xml:space="preserve">
          <source>_ATTRIBUTES</source>
          <target state="translated">_ATTRIBUTES</target>
        </trans-unit>
        <trans-unit id="52fd940d0f74d5bee59eaa7c4f0549763254e747" translate="yes" xml:space="preserve">
          <source>_AUTHORS_</source>
          <target state="translated">_AUTHORS_</target>
        </trans-unit>
        <trans-unit id="6b18f91a4d56bcb4195d01326c1707f269dca59a" translate="yes" xml:space="preserve">
          <source>_FFFE and 0x</source>
          <target state="translated">_FFFEおよび0x</target>
        </trans-unit>
        <trans-unit id="9ab76b9bb5c2c00731a6298f38a4cee313b768d1" translate="yes" xml:space="preserve">
          <source>_FFFF), all non-shortest encodings, etc.</source>
          <target state="translated">_FFFF）、すべての最短以外のエンコーディングなど</target>
        </trans-unit>
        <trans-unit id="335f29be57bcf11c73c32f1eb934a4263c82062e" translate="yes" xml:space="preserve">
          <source>_MANIFEST_</source>
          <target state="translated">_MANIFEST_</target>
        </trans-unit>
        <trans-unit id="95a35cef151f823296dfad3b7387390964178aff" translate="yes" xml:space="preserve">
          <source>_PDF_ files</source>
          <target state="translated">_PDF_ファイル</target>
        </trans-unit>
        <trans-unit id="a004e5d824ef48686abd54ae20b660d4a2c545c5" translate="yes" xml:space="preserve">
          <source>_Really_ Symbolic Calculator</source>
          <target state="translated">_Really_ Symbolic Calculator</target>
        </trans-unit>
        <trans-unit id="88d624ad41e13319c7ed43031826342bbebe1731" translate="yes" xml:space="preserve">
          <source>__ASSERT_</source>
          <target state="translated">__ASSERT_</target>
        </trans-unit>
        <trans-unit id="544b04467d0a8ee1a845e4b919a57d9da6144a5e" translate="yes" xml:space="preserve">
          <source>__DATA__</source>
          <target state="translated">__DATA__</target>
        </trans-unit>
        <trans-unit id="6530b20c720e139dbf91c2c08f8419cf0bfd22f4" translate="yes" xml:space="preserve">
          <source>__DATA__ is ignored</source>
          <target state="translated">__DATA__は無視されます</target>
        </trans-unit>
        <trans-unit id="c7919376414e8b09a0411c19eee34a71902436cc" translate="yes" xml:space="preserve">
          <source>__DATA__, __END__, and the FOOBAR::DATA filehandle.</source>
          <target state="translated">__DATA __、__ END__、およびFOOBAR :: DATAファイルハンドル。</target>
        </trans-unit>
        <trans-unit id="ce8a6e08bc25f2ef37956e900401265cf56138c8" translate="yes" xml:space="preserve">
          <source>__END__</source>
          <target state="translated">__END__</target>
        </trans-unit>
        <trans-unit id="9d5d8995523b8b8951428baa81ea663ff0bd2c77" translate="yes" xml:space="preserve">
          <source>__FILE__</source>
          <target state="translated">__FILE__</target>
        </trans-unit>
        <trans-unit id="a51b95694c81c92580bff6f580f8e200ecf86661" translate="yes" xml:space="preserve">
          <source>__LINE__</source>
          <target state="translated">__LINE__</target>
        </trans-unit>
        <trans-unit id="04bd40a79312fa43a624aef25ac864c0770871a3" translate="yes" xml:space="preserve">
          <source>__PACKAGE__</source>
          <target state="translated">__PACKAGE__</target>
        </trans-unit>
        <trans-unit id="b0563c4fda49219aeb921efb5a63d4cff221a59b" translate="yes" xml:space="preserve">
          <source>__SUB__</source>
          <target state="translated">__SUB__</target>
        </trans-unit>
        <trans-unit id="aba4564d3c1fb21ecf21279947a269bfd72d5448" translate="yes" xml:space="preserve">
          <source>__int64</source>
          <target state="translated">__int64</target>
        </trans-unit>
        <trans-unit id="223e7f8a6ca9d91b686c4ef2e51d268505bf6e0b" translate="yes" xml:space="preserve">
          <source>_add_range_to_invlist</source>
          <target state="translated">_add_range_to_invlist</target>
        </trans-unit>
        <trans-unit id="3485357323ef68368533ee148f92fcc38f19f972" translate="yes" xml:space="preserve">
          <source>_bgcd()</source>
          <target state="translated">_bgcd()</target>
        </trans-unit>
        <trans-unit id="072894c76e14abe6a46e264590c1051e782edb1c" translate="yes" xml:space="preserve">
          <source>_byte_dump_string</source>
          <target state="translated">_byte_dump_string</target>
        </trans-unit>
        <trans-unit id="a2388f93206a2dcead18a704edcf81d7151a6724" translate="yes" xml:space="preserve">
          <source>_confess</source>
          <target state="translated">_confess</target>
        </trans-unit>
        <trans-unit id="ee9de11ce407bf95e8669ecf25d200f9d34fa345" translate="yes" xml:space="preserve">
          <source>_construct</source>
          <target state="translated">_construct</target>
        </trans-unit>
        <trans-unit id="3cde53170729285b62e4195015718cc3fccd9d47" translate="yes" xml:space="preserve">
          <source>_control87(3)</source>
          <target state="translated">_control87(3)</target>
        </trans-unit>
        <trans-unit id="06b08aafbbfe26867ed90e8ef55b7fb3f5ac3867" translate="yes" xml:space="preserve">
          <source>_croak</source>
          <target state="translated">_croak</target>
        </trans-unit>
        <trans-unit id="ff4fbe22558273c6659ff3e79e3859bcae2f877b" translate="yes" xml:space="preserve">
          <source>_digit($obj, 0)</source>
          <target state="translated">_digit（$ obj、0）</target>
        </trans-unit>
        <trans-unit id="25fb2a539a78bedeb7219e53f2b8469577c24022" translate="yes" xml:space="preserve">
          <source>_digit(123, -1)</source>
          <target state="translated">_digit（123、-1）</target>
        </trans-unit>
        <trans-unit id="0a6052f8001537289554f4431a6114626d07c644" translate="yes" xml:space="preserve">
          <source>_fixin_replace_shebang (override)</source>
          <target state="translated">_fixin_replace_shebang（オーバーライド）</target>
        </trans-unit>
        <trans-unit id="548e633d961fa1f4f867b7daf36d16a973b52b07" translate="yes" xml:space="preserve">
          <source>_force_out_malformed_utf8_message</source>
          <target state="translated">_force_out_malformed_utf8_message</target>
        </trans-unit>
        <trans-unit id="4225f03f506817627d7f6837ee807b1f731caa68" translate="yes" xml:space="preserve">
          <source>_get_inputmap_hash</source>
          <target state="translated">_get_inputmap_hash</target>
        </trans-unit>
        <trans-unit id="4b9709f63286b025c425048cdc549fc4ecd449c4" translate="yes" xml:space="preserve">
          <source>_get_outputmap_hash</source>
          <target state="translated">_get_outputmap_hash</target>
        </trans-unit>
        <trans-unit id="142aa489b14e14705ae4dc6f3e94075d0e01cc08" translate="yes" xml:space="preserve">
          <source>_get_prototype_hash</source>
          <target state="translated">_get_prototype_hash</target>
        </trans-unit>
        <trans-unit id="6f209d79a87b326fa3b8f200de1c23f5f1298065" translate="yes" xml:space="preserve">
          <source>_get_typemap_hash</source>
          <target state="translated">_get_typemap_hash</target>
        </trans-unit>
        <trans-unit id="14266b88d6ca9a13dbc0a224bad46acbb3e0cc36" translate="yes" xml:space="preserve">
          <source>_initialize</source>
          <target state="translated">_initialize</target>
        </trans-unit>
        <trans-unit id="9c17b559878e30ac3b8cd897c88deb38fbb25010" translate="yes" xml:space="preserve">
          <source>_inverse_folds</source>
          <target state="translated">_inverse_folds</target>
        </trans-unit>
        <trans-unit id="61168eb93addcf792bf0a9bd1835b4ae28cafd05" translate="yes" xml:space="preserve">
          <source>_invlistEQ</source>
          <target state="translated">_invlistEQ</target>
        </trans-unit>
        <trans-unit id="4d41403695210bb0f589029e2f21c26f6d230006" translate="yes" xml:space="preserve">
          <source>_invlist_array_init</source>
          <target state="translated">_invlist_array_init</target>
        </trans-unit>
        <trans-unit id="5b048a77155e29ed03b526af63683c86c9c449d0" translate="yes" xml:space="preserve">
          <source>_invlist_contains_cp</source>
          <target state="translated">_invlist_contains_cp</target>
        </trans-unit>
        <trans-unit id="7addad0010fd0d11982f67209a4819ae0b4a041c" translate="yes" xml:space="preserve">
          <source>_invlist_dump</source>
          <target state="translated">_invlist_dump</target>
        </trans-unit>
        <trans-unit id="59a61c344b8bd28a5af275bd604ae0d0203577de" translate="yes" xml:space="preserve">
          <source>_invlist_intersection</source>
          <target state="translated">_invlist_intersection</target>
        </trans-unit>
        <trans-unit id="9c7c89b0d433f3ebc2fe1e90983b6cd3e60a4f94" translate="yes" xml:space="preserve">
          <source>_invlist_intersection_maybe_complement_2nd</source>
          <target state="translated">_invlist_intersection_maybe_complement_2nd</target>
        </trans-unit>
        <trans-unit id="7c1efd5308257519009379431c3cdd7935c2b2d1" translate="yes" xml:space="preserve">
          <source>_invlist_invert</source>
          <target state="translated">_invlist_invert</target>
        </trans-unit>
        <trans-unit id="76a133285063be7446bb5d93cc1038e4d894ea49" translate="yes" xml:space="preserve">
          <source>_invlist_len</source>
          <target state="translated">_invlist_len</target>
        </trans-unit>
        <trans-unit id="7a9878e82534b3b9acf27a0c739db0c36c4497e8" translate="yes" xml:space="preserve">
          <source>_invlist_search</source>
          <target state="translated">_invlist_search</target>
        </trans-unit>
        <trans-unit id="cc3b105a3723a31597d930ed040060a1af78fca0" translate="yes" xml:space="preserve">
          <source>_invlist_subtract</source>
          <target state="translated">_invlist_subtract</target>
        </trans-unit>
        <trans-unit id="c270feb0a047e9968c9377f35b978cc423f81ffa" translate="yes" xml:space="preserve">
          <source>_invlist_union</source>
          <target state="translated">_invlist_union</target>
        </trans-unit>
        <trans-unit id="e7ff1b53cb3870b1cc0161497f82b6821260ee5a" translate="yes" xml:space="preserve">
          <source>_invlist_union_maybe_complement_2nd</source>
          <target state="translated">_invlist_union_maybe_complement_2nd</target>
        </trans-unit>
        <trans-unit id="b4c9e615fdde46de957d9ff98cbf610e5578f3b0" translate="yes" xml:space="preserve">
          <source>_is_cur_LC_category_utf8</source>
          <target state="translated">_is_cur_LC_category_utf8</target>
        </trans-unit>
        <trans-unit id="41a84dbd096715cf9933467fb604cac6d756fbfe" translate="yes" xml:space="preserve">
          <source>_is_in_locale_category</source>
          <target state="translated">_is_in_locale_category</target>
        </trans-unit>
        <trans-unit id="ffcd62fdc9e63fe52ccc0f0d896f4e0af56d1b09" translate="yes" xml:space="preserve">
          <source>_is_uni_FOO</source>
          <target state="translated">_is_uni_FOO</target>
        </trans-unit>
        <trans-unit id="3483ba80345062095d0d3b0f8ea883c26308455b" translate="yes" xml:space="preserve">
          <source>_is_uni_perl_idcont</source>
          <target state="translated">_is_uni_perl_idcont</target>
        </trans-unit>
        <trans-unit id="07fde7fb22af3c3e972dce7ae059b4a9e730ddee" translate="yes" xml:space="preserve">
          <source>_is_uni_perl_idstart</source>
          <target state="translated">_is_uni_perl_idstart</target>
        </trans-unit>
        <trans-unit id="3db6bf1a4bdbd3280908a48b81e965750416f411" translate="yes" xml:space="preserve">
          <source>_is_utf8_FOO</source>
          <target state="translated">_is_utf8_FOO</target>
        </trans-unit>
        <trans-unit id="1f588bb7839f5f8a2c8c558b80651270e3ac33ae" translate="yes" xml:space="preserve">
          <source>_is_utf8_perl_idcont</source>
          <target state="translated">_is_utf8_perl_idcont</target>
        </trans-unit>
        <trans-unit id="15a3a37970b2f869a300918e3304d3b492218172" translate="yes" xml:space="preserve">
          <source>_is_utf8_perl_idstart</source>
          <target state="translated">_is_utf8_perl_idstart</target>
        </trans-unit>
        <trans-unit id="208771dd58f43dcb9bd331fcdce501947f60ac0a" translate="yes" xml:space="preserve">
          <source>_mem_collxfrm</source>
          <target state="translated">_mem_collxfrm</target>
        </trans-unit>
        <trans-unit id="e7ed2863e6bcebf49eb9f9c0e6e679e8bf064675" translate="yes" xml:space="preserve">
          <source>_new_invlist</source>
          <target state="translated">_new_invlist</target>
        </trans-unit>
        <trans-unit id="2848fd26d7422f459429013d3415cfd60ca34e95" translate="yes" xml:space="preserve">
          <source>_new_invlist_C_array</source>
          <target state="translated">_new_invlist_C_array</target>
        </trans-unit>
        <trans-unit id="a23c4cef0829fb103be12bd8e5048bf513e4694f" translate="yes" xml:space="preserve">
          <source>_perl.exe_</source>
          <target state="translated">_perl.exe_</target>
        </trans-unit>
        <trans-unit id="2f72a716af3238025dd4229dd58b83bc8629ac38" translate="yes" xml:space="preserve">
          <source>_perl_.exe_</source>
          <target state="translated">_perl_.exe_</target>
        </trans-unit>
        <trans-unit id="5991d513b9abe99f11e9b16c8256e4e9e06ca2ba" translate="yes" xml:space="preserve">
          <source>_perl__.exe_</source>
          <target state="translated">_perl__.exe_</target>
        </trans-unit>
        <trans-unit id="2db94965490eada37ae5ff14a1e0846dbe050e7c" translate="yes" xml:space="preserve">
          <source>_perl___.exe_</source>
          <target state="translated">_perl___.exe_</target>
        </trans-unit>
        <trans-unit id="1fdbb463b8aba017e1e17708622b828c0a70d691" translate="yes" xml:space="preserve">
          <source>_prove</source>
          <target state="translated">_prove</target>
        </trans-unit>
        <trans-unit id="998aae22ec5a43bf133ffb2d411823f4c8a72a20" translate="yes" xml:space="preserve">
          <source>_proverc</source>
          <target state="translated">_proverc</target>
        </trans-unit>
        <trans-unit id="be410059a97a4524ce3b914f3e9c9e407663c029" translate="yes" xml:space="preserve">
          <source>_read</source>
          <target state="translated">_read</target>
        </trans-unit>
        <trans-unit id="8f0299e873b4b0039d8f78099b523dd6530d86a4" translate="yes" xml:space="preserve">
          <source>_setup_canned_invlist</source>
          <target state="translated">_setup_canned_invlist</target>
        </trans-unit>
        <trans-unit id="8f67b7c018384a0d10f9d2b4577d0c0658bc078a" translate="yes" xml:space="preserve">
          <source>_stdlib.h_ functions</source>
          <target state="translated">_stdlib.h_関数</target>
        </trans-unit>
        <trans-unit id="d4086139b290958ed25f5bd7a1ff3d730dcf31a9" translate="yes" xml:space="preserve">
          <source>_sub()</source>
          <target state="translated">_sub()</target>
        </trans-unit>
        <trans-unit id="18f9ec6695a824c08889e84b80ae1126089c1182" translate="yes" xml:space="preserve">
          <source>_to_fold_latin1</source>
          <target state="translated">_to_fold_latin1</target>
        </trans-unit>
        <trans-unit id="efa0f0e25d339ee27b6fb859ff82e78df94411bf" translate="yes" xml:space="preserve">
          <source>_to_uni_fold_flags</source>
          <target state="translated">_to_uni_fold_flags</target>
        </trans-unit>
        <trans-unit id="d47683994658c2a56c63f3759350ed4931a6c24d" translate="yes" xml:space="preserve">
          <source>_to_upper_title_latin1</source>
          <target state="translated">_to_upper_title_latin1</target>
        </trans-unit>
        <trans-unit id="b38a8cb81180a1acb12bdbe8f5b63f61777d488e" translate="yes" xml:space="preserve">
          <source>_to_utf8_fold_flags</source>
          <target state="translated">_to_utf8_fold_flags</target>
        </trans-unit>
        <trans-unit id="1cb38e9069121e1e9cc36d9fe7809a20a8770216" translate="yes" xml:space="preserve">
          <source>_to_utf8_lower_flags</source>
          <target state="translated">_to_utf8_lower_flags</target>
        </trans-unit>
        <trans-unit id="c02bc0bb4f2b754ec8eca62baece7c6927f290f1" translate="yes" xml:space="preserve">
          <source>_to_utf8_title_flags</source>
          <target state="translated">_to_utf8_title_flags</target>
        </trans-unit>
        <trans-unit id="abb727239765a037361726c56446984dc40af512" translate="yes" xml:space="preserve">
          <source>_to_utf8_upper_flags</source>
          <target state="translated">_to_utf8_upper_flags</target>
        </trans-unit>
        <trans-unit id="ab1aafd933e3c1f34b78838ca464fabb2cd4e4ef" translate="yes" xml:space="preserve">
          <source>_utf8_off</source>
          <target state="translated">_utf8_off</target>
        </trans-unit>
        <trans-unit id="17db770cf15f37a3c9f4bbc8584367bfd333dd75" translate="yes" xml:space="preserve">
          <source>_utf8_on</source>
          <target state="translated">_utf8_on</target>
        </trans-unit>
        <trans-unit id="47408fa4fe440a35df247d578ae3a671d0fa67b2" translate="yes" xml:space="preserve">
          <source>_utf8n_to_uvchr_msgs_helper</source>
          <target state="translated">_utf8n_to_uvchr_msgs_helper</target>
        </trans-unit>
        <trans-unit id="51f99431c242bd9dacfe7ef6b055814575d21952" translate="yes" xml:space="preserve">
          <source>_validate($schema_name, $data, $file, $doc)</source>
          <target state="translated">_validate($schema_name, $data, $file, $doc)</target>
        </trans-unit>
        <trans-unit id="916c6b186b784c8ca7ede55c31b4482ae8398884" translate="yes" xml:space="preserve">
          <source>_warn_problematic_locale</source>
          <target state="translated">_warn_problematic_locale</target>
        </trans-unit>
        <trans-unit id="0781d922d37de8686b87d408c185e2fe467ffa20" translate="yes" xml:space="preserve">
          <source>_xsbuild_replace_macro (override)</source>
          <target state="translated">_xsbuild_replace_macro（オーバーライド）</target>
        </trans-unit>
        <trans-unit id="5d07e5d414042c3ad528106a2bd42712b9aab48d" translate="yes" xml:space="preserve">
          <source>_xsbuild_value (override)</source>
          <target state="translated">_xsbuild_value（オーバーライド）</target>
        </trans-unit>
        <trans-unit id="349a2cf958187a837c3aed60aca5ce84a2ba8f78" translate="yes" xml:space="preserve">
          <source>`Memoizing' a function makes it faster by trading space for time. It does this by caching the return values of the function in a table. If you call the function again with the same arguments, &lt;code&gt;memoize&lt;/code&gt; jumps in and gives you the value out of the table, instead of letting the function compute the value all over again.</source>
          <target state="translated">関数の「メモ化」は、時間とスペースを交換することで、より速くなります。これは、関数の戻り値をテーブルにキャッシュすることによって行われます。同じ引数を使用して関数を再度呼び出す場合は、関数に値をもう一度計算させるのではなく、 &lt;code&gt;memoize&lt;/code&gt; ジャンプしてテーブルから値を取得します。</target>
        </trans-unit>
        <trans-unit id="97a327decd1b5a73620456539cf89766d09acb8c" translate="yes" xml:space="preserve">
          <source>`` and pipe-open do not work under DOS.</source>
          <target state="translated">``およびpipe-openはDOSでは機能しません。</target>
        </trans-unit>
        <trans-unit id="86f7e437faa5a7fce15d1ddcb9eaeaea377667b8" translate="yes" xml:space="preserve">
          <source>a</source>
          <target state="translated">a</target>
        </trans-unit>
        <trans-unit id="049537f8ff01227a5296e1d4f8184a98a3f6ecb6" translate="yes" xml:space="preserve">
          <source>a &lt;b&gt;-u&lt;/b&gt; flag to make it unbuffered. But very few commands are designed to operate over pipes, so this seldom works unless you yourself wrote the program on the other end of the double-ended pipe.</source>
          <target state="translated">バッファリングを解除する&lt;b&gt;-u&lt;/b&gt;フラグ。しかし、パイプを介して動作するように設計されているコマンドはほとんどないため、両端パイプの反対側でプログラムを自分で作成しない限り、これはほとんど機能しません。</target>
        </trans-unit>
        <trans-unit id="29515f80a90ad15c4d7bd700ddff82308e27f071" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;DESTROY&lt;/code&gt; method), which the call to &lt;code&gt;EVERY::LAST::Destroy&lt;/code&gt; in the inherited destructor then correctly picks up.</source>
          <target state="translated">A &lt;code&gt;DESTROY&lt;/code&gt; への呼び出し方法）、 &lt;code&gt;EVERY::LAST::Destroy&lt;/code&gt; 正しくその後、継承されたデストラクタでピックアップを。</target>
        </trans-unit>
        <trans-unit id="5b4991d0075936f9dd187e536d33c94e2aa27450" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;new&lt;/code&gt; method), which the call to &lt;code&gt;EVERY::LAST::Init&lt;/code&gt; in the inherited constructor then correctly picks up.</source>
          <target state="translated">&lt;code&gt;new&lt;/code&gt; の呼び出し方法）、 &lt;code&gt;EVERY::LAST::Init&lt;/code&gt; 継承されたコンストラクタでは、その後、正常にピックアップします。</target>
        </trans-unit>
        <trans-unit id="ee1caf9ff7bb24e52f42a46d52f7a56dc4e9fcff" translate="yes" xml:space="preserve">
          <source>a CPAN::Distroprefs::Result object</source>
          <target state="translated">CPAN::Distroprefs::結果オブジェクト</target>
        </trans-unit>
        <trans-unit id="c969393479d626630230a3b33439fab76b06b48e" translate="yes" xml:space="preserve">
          <source>a PREFIX was given as an argument to WriteMakefile() it will set it to the $new_prefix + $default. This is for systems whose file layouts don't neatly fit into our ideas of prefixes.</source>
          <target state="translated">PREFIXがWriteMakefile()の引数として与えられた場合は、 $new_prefix+$defaultに設定されます。これは、ファイルのレイアウトが私たちの考えているプレフィックスにうまくフィットしないシステムのためのものです。</target>
        </trans-unit>
        <trans-unit id="1e7f6022e597b2747e658cd9274fe1392855ea63" translate="yes" xml:space="preserve">
          <source>a Pod block with a &quot;=cut&quot; command. In that case, the Pod processor must halt parsing of the input file, and must by default emit a warning.</source>
          <target state="translated">を使用して、&quot;=cut &quot;コマンドを使用してPodブロックを作成した場合には、入力ファイルの解析を停止しなければなりません。この場合、Podプロセッサは入力ファイルの解析を停止し、デフォルトで警告を発しなければなりません。</target>
        </trans-unit>
        <trans-unit id="69251e438587f3e3f24fc55c7dfd1b0bd8d07f8f" translate="yes" xml:space="preserve">
          <source>a [line] command</source>
          <target state="translated">一行]コマンド</target>
        </trans-unit>
        <trans-unit id="a295228fd9bd780a4f55d14f8063050501961916" translate="yes" xml:space="preserve">
          <source>a blank (read: empty) line, with the single exception of the file start, which is also starting a paragraph. That means that especially a command (e.g. &lt;code&gt;=head1&lt;/code&gt; )</source>
          <target state="translated">空白（読み取り：空）の行。ただし、ファイルの開始（段落も開始する）を除いて、つまり、特にコマンド（ &lt;code&gt;=head1&lt;/code&gt; など）</target>
        </trans-unit>
        <trans-unit id="75c1385dc7bf5ab285efa7812871a616728a97fa" translate="yes" xml:space="preserve">
          <source>a blank line.</source>
          <target state="translated">空白の行。</target>
        </trans-unit>
        <trans-unit id="23d9744ba98ffa764233c38e2d3604f3b2d4a76e" translate="yes" xml:space="preserve">
          <source>a bytestream and should not be treated as such. This makes using I/O mechanisms with internal buffering like stdio (i.e. print() and friends) especially cumbersome. Use syswrite(), or better send(), like in the example below.</source>
          <target state="translated">はバイストリームであり、そのように扱うべきではありません。これにより、stdio のような内部バッファリングを持つ I/O メカニズム (すなわち print()や friends)を使用することが特に面倒になります。以下の例のように、syswrite()か send()を使用してください。</target>
        </trans-unit>
        <trans-unit id="633f7c37ae295810943767d3bf2df992ec0feaea" translate="yes" xml:space="preserve">
          <source>a call to &lt;code&gt;SvPV()&lt;/code&gt; or one of its variants, in case any call to string overloading updates the internal UTF-8 encoding flag.</source>
          <target state="translated">呼び出し &lt;code&gt;SvPV()&lt;/code&gt; またはその変異体の一つは、ケース内の文字列のオーバーロードへの呼び出しは、内部UTF-8コードフラグを更新します。</target>
        </trans-unit>
        <trans-unit id="668d0f6bac4ee6dedb25c0659f2e34dbcb94a737" translate="yes" xml:space="preserve">
          <source>a call to &lt;code&gt;SvPV()&lt;/code&gt; or one of its variants, in case any call to string overloading updates the internal flag.</source>
          <target state="translated">呼び出し &lt;code&gt;SvPV()&lt;/code&gt; またはその変異体の一つは、ケース内の文字列のオーバーロードへの呼び出しは、内部フラグを更新します。</target>
        </trans-unit>
        <trans-unit id="3db5176b71e2550579d05b0d599c0802a2e9855b" translate="yes" xml:space="preserve">
          <source>a call to SvPV() or one of its variants, in case any call to string overloading updates the internal flag.</source>
          <target state="translated">文字列オーバーロードの呼び出しで内部フラグが更新された場合に備えて、SvPV()またはその亜種の一つを呼び出します。</target>
        </trans-unit>
        <trans-unit id="9b84a4768dd97741cdd9f6cdcb5a70ed0ef1fc98" translate="yes" xml:space="preserve">
          <source>a caller (that is, if we're in a subroutine or &lt;a href=&quot;#eval-EXPR&quot;&gt;&lt;code&gt;eval&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#require-VERSION&quot;&gt;&lt;code&gt;require&lt;/code&gt;&lt;/a&gt;) and the undefined value otherwise. caller never returns XS subs and they are skipped. The next pure perl sub will appear instead of the XS sub in caller's return values. In list context, caller returns</source>
          <target state="translated">呼び出し元（つまり、サブルーチンまたは&lt;a href=&quot;#eval-EXPR&quot;&gt; &lt;code&gt;eval&lt;/code&gt; にいる&lt;/a&gt;場合&lt;a href=&quot;#require-VERSION&quot;&gt; &lt;code&gt;require&lt;/code&gt; &lt;/a&gt;またはrequireの場合）、それ以外の場合は未定義の値。呼び出し元はXSサブを返すことはなく、スキップされます。呼び出し元の戻り値には、XSサブの代わりに次の純粋なperlサブが表示されます。リストコンテキストでは、発信者は</target>
        </trans-unit>
        <trans-unit id="8e150fc9a00a9d6aba574abf6b3ddaf310665b85" translate="yes" xml:space="preserve">
          <source>a caller (that is, if we're in a subroutine or &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;require&quot;&gt;require&lt;/a&gt;&lt;/code&gt;) and the undefined value otherwise. caller never returns XS subs and they are skipped. The next pure perl sub will appear instead of the XS sub in caller's return values. In list context, caller returns</source>
          <target state="translated">呼び出し元（つまり、サブルーチンまたは &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; にいる場合）、それ以外の場合は未定義の値。呼び出し元はXSサブルーチンを返すことはなく、スキップされます。次の純粋なperlサブは、呼び出し元の戻り値のXSサブの代わりに表示されます。リストのコンテキストでは、呼び出し元は戻ります</target>
        </trans-unit>
        <trans-unit id="27f90951a846aad1e51cfa906ae9aae15befd397" translate="yes" xml:space="preserve">
          <source>a caller (that is, if we're in a subroutine or &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt;) and the undefined value otherwise. caller never returns XS subs and they are skipped. The next pure perl sub will appear instead of the XS sub in caller's return values. In list context, caller returns</source>
          <target state="translated">呼び出し元（つまり、サブルーチンまたは &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; にいる場合）、それ以外の場合は未定義の値。呼び出し元はXSサブルーチンを返すことはなく、スキップされます。次の純粋なperlサブは、呼び出し元の戻り値のXSサブの代わりに表示されます。リストのコンテキストでは、呼び出し元は戻ります</target>
        </trans-unit>
        <trans-unit id="98a69b7d014f4c34538d96daa513e20ae3249ccf" translate="yes" xml:space="preserve">
          <source>a character</source>
          <target state="translated">一字</target>
        </trans-unit>
        <trans-unit id="c48528b336ba70a5bb432c05eb6545246b618801" translate="yes" xml:space="preserve">
          <source>a code reference</source>
          <target state="translated">コード参照</target>
        </trans-unit>
        <trans-unit id="59e837ecdd5668c0a5d48bd37effd32c49d49f59" translate="yes" xml:space="preserve">
          <source>a descriptive term for the licenses ... not authoritative, but must be consistent with licensure statements in the READMEs, documentation, etc.</source>
          <target state="translated">ライセンスの記述用語 ...権威性はないが、READMEや文書などに記載されているライセンスの記述と一致していなければならない。</target>
        </trans-unit>
        <trans-unit id="4d30a63fe6161c410a2de8ef976b935b79ebde5a" translate="yes" xml:space="preserve">
          <source>a directory which the extensions Perl library module passes to the DynaLoader when asking it to map the shareable image, or</source>
          <target state="translated">拡張PerlライブラリモジュールがDynaLoaderに共有可能なイメージのマッピングを依頼する際に渡すディレクトリ。</target>
        </trans-unit>
        <trans-unit id="d53e127062317983028dd489e9754291d72caa45" translate="yes" xml:space="preserve">
          <source>a dummy implementation.</source>
          <target state="translated">ダミーの実装です。</target>
        </trans-unit>
        <trans-unit id="607bd3e7b2e3b5390e3bf8ef6a8b9efe50dc7299" translate="yes" xml:space="preserve">
          <source>a failure of the OS/2 API call, having some workarounds coded).</source>
          <target state="translated">OS/2 APIコールの失敗で、いくつかの回避策がコード化されています)。</target>
        </trans-unit>
        <trans-unit id="cb93f298be12176fe6984b77a4ea4c365c0c654e" translate="yes" xml:space="preserve">
          <source>a few years back there were two attempts to upgrade/replace Test::Builder. Confusingly these were called Test::Builder2 and Test::Builder1.5, in that order. Many people put conditionals in their code to check the Test::Builder version number and adapt their code accordingly.</source>
          <target state="translated">数年前、Test::Builder をアップグレードしたり置き換えたりしようとする試みが 2 回ありました。紛らわしいことに、これらは Test::Builder2 と Test::Builder1.5 の順に呼ばれていました。多くの人は、Test::Builderのバージョン番号をチェックし、それに応じてコードを適応させるために、コードに条件式を入れています。</target>
        </trans-unit>
        <trans-unit id="2884f36ae265e800fdf012514440ba115d34bb1a" translate="yes" xml:space="preserve">
          <source>a file named</source>
          <target state="translated">という名前のファイル</target>
        </trans-unit>
        <trans-unit id="f2f9eb42b04a6bb70eb81a0ae0a802e7347d6301" translate="yes" xml:space="preserve">
          <source>a filehandle, even though it looks like one). DBNAME is the name of the database (without the</source>
          <target state="translated">のように見えても、ファイルハンドルではありません)。DBNAMEはデータベースの名前です(</target>
        </trans-unit>
        <trans-unit id="d89a37a0200dc0b35d04809afbc53cbf5901983a" translate="yes" xml:space="preserve">
          <source>a function, and precedence doesn't matter. Otherwise it's a list operator or unary operator, and precedence does matter. Whitespace between the function and left parenthesis doesn't count, so sometimes you need to be careful:</source>
          <target state="translated">のような関数であれば、優先順位は関係ありません。それ以外の場合はリスト演算子か単項演算子で、優先順位は関係ありません。関数と左括弧の間の空白はカウントされないので、時々注意が必要です。</target>
        </trans-unit>
        <trans-unit id="42d8657e92871e593008c5368345a46e3ebc4eac" translate="yes" xml:space="preserve">
          <source>a hard reference. If you use it as a reference, it'll be treated as a symbolic reference. That is, the value of the scalar is taken to be the</source>
          <target state="translated">難しい参照です。参照として使う場合は シンボリックな参照として扱われます つまり、スカラーの値は</target>
        </trans-unit>
        <trans-unit id="b47a8f555bfc4607fa743152b516f486d86995c9" translate="yes" xml:space="preserve">
          <source>a leading &quot;:&quot;. Empty portions are returned as empty string ''.</source>
          <target state="translated">を先頭の &quot;:&quot; で指定します。空の部分は空の文字列 '' として返されます。</target>
        </trans-unit>
        <trans-unit id="c3ead9f1232af179bcf0c56760a744aa581fa638" translate="yes" xml:space="preserve">
          <source>a long time ago, and some people got used to our funny spelling, and so just as with &lt;code&gt;HTTP_REFERER&lt;/code&gt; &amp;rsquo;s own missing letter, our weird spelling has stuck around.</source>
          <target state="translated">ずっと前に、何人かの人々は私たちの面白いスペルに慣れました、そしてそれで &lt;code&gt;HTTP_REFERER&lt;/code&gt; 自身の欠けている文字と同じように、私たちの奇妙なスペルが行き詰まっています。</target>
        </trans-unit>
        <trans-unit id="5da49093d4d1915dd32c5059495cc0e80efde1e2" translate="yes" xml:space="preserve">
          <source>a long time ago, and some people got used to our funny spelling, and so just as with &lt;code&gt;HTTP_REFERER&lt;/code&gt;&amp;rsquo;s own missing letter, our weird spelling has stuck around.</source>
          <target state="translated">ずっと前に、一部の人々は私たちの面白いスペルに慣れていたので、 &lt;code&gt;HTTP_REFERER&lt;/code&gt; 自身の欠落している文字と同じように、私たちの奇妙なスペルは立ち往生しています。</target>
        </trans-unit>
        <trans-unit id="08b455de06980a977e0a8cd01a1a8293b63bc105" translate="yes" xml:space="preserve">
          <source>a lookahead/lookbehind/evaluate zero-width assertion;</source>
          <target state="translated">lookahead/lookbehind/aluate zero-widthアサーション。</target>
        </trans-unit>
        <trans-unit id="c5ab2e702917e9fab9c642c3876da1a3b4538ce1" translate="yes" xml:space="preserve">
          <source>a mergesort, which happens to be stable, will be employed anyway. Note that</source>
          <target state="translated">のような安定したマージソートが採用されます。このことに注意してください。</target>
        </trans-unit>
        <trans-unit id="1cfc30a180e8efa1bbbeac79796a51f3960fd2a5" translate="yes" xml:space="preserve">
          <source>a name in angle brackets or single quotes</source>
          <target state="translated">角括弧または一重引用符で囲まれた名前</target>
        </trans-unit>
        <trans-unit id="e417585863ae108f567f75bc88add160fc8852f4" translate="yes" xml:space="preserve">
          <source>a negated opname or optag</source>
          <target state="translated">否定された opname または optag</target>
        </trans-unit>
        <trans-unit id="cbdcbf765828e27e0482eafa78b85765940378b3" translate="yes" xml:space="preserve">
          <source>a new namespace</source>
          <target state="translated">新しい名前空間</target>
        </trans-unit>
        <trans-unit id="02537a2b811222631d1996c38165a9255a043dba" translate="yes" xml:space="preserve">
          <source>a noun (i.e., saying how much of it there is, while giving the correct form of it). The behavior of this method is handy for English and a few other Western European languages, and you should override it for languages where it's not suitable. You can feel free to read the source, but the current implementation is basically as this pseudocode describes:</source>
          <target state="translated">名詞を指定します (つまり、正しい形を与えながら、どのくらいの量があるかを言います)。このメソッドの動作は英語といくつかの他の西ヨーロッパの言語では便利です。ソースを読むのは自由ですが、現在の実装は基本的にはこの疑似コードに記述されている通りです。</target>
        </trans-unit>
        <trans-unit id="cbaad0f8fdd1c074dd23e8663bc741bba26c0e9b" translate="yes" xml:space="preserve">
          <source>a number &lt;code&gt;OS_MAJOR + 0.001 * OS_MINOR&lt;/code&gt; .</source>
          <target state="translated">数値 &lt;code&gt;OS_MAJOR + 0.001 * OS_MINOR&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="72ce09e5ea483914f6710102bb19bd41d3cef731" translate="yes" xml:space="preserve">
          <source>a number &lt;code&gt;OS_MAJOR + 0.001 * OS_MINOR&lt;/code&gt;.</source>
          <target state="translated">数値 &lt;code&gt;OS_MAJOR + 0.001 * OS_MINOR&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="049379839be4e80bd4288a0cfab4c43842fb24ac" translate="yes" xml:space="preserve">
          <source>a or accuracy</source>
          <target state="translated">正確性</target>
        </trans-unit>
        <trans-unit id="20b1aa3e6979f290ef40d1e602b1d7ee858c53e5" translate="yes" xml:space="preserve">
          <source>a parse error.</source>
          <target state="translated">を使用してエラーを解析します。</target>
        </trans-unit>
        <trans-unit id="36958640033ae606fe1d0a4aeb5cf8119f6964e4" translate="yes" xml:space="preserve">
          <source>a particular place, in combination with non-linguistic location-specific information such as what currency is used there. Locales</source>
          <target state="translated">特定の場所を、その場所で使用されている通貨などの非言語的な場所固有の情報と組み合わせて表示します。ロケール</target>
        </trans-unit>
        <trans-unit id="427679a88e71c9d05f75a15acaaf64e423868907" translate="yes" xml:space="preserve">
          <source>a posteriori</source>
          <target state="translated">事後的</target>
        </trans-unit>
        <trans-unit id="e88840d242f0a240a29a125e59a11a32b9a74724" translate="yes" xml:space="preserve">
          <source>a reference to</source>
          <target state="translated">言及</target>
        </trans-unit>
        <trans-unit id="a7361da6063a7ceef198f250842e89b36593b797" translate="yes" xml:space="preserve">
          <source>a reference to a &lt;code&gt;Pod::Paragraph&lt;/code&gt; object which contains further information about the paragraph (see &lt;a href=&quot;inputobjects&quot;&gt;Pod::InputObjects&lt;/a&gt; for details).</source>
          <target state="translated">段落に関する詳細情報を含む &lt;code&gt;Pod::Paragraph&lt;/code&gt; オブジェクトへの参照（詳細は&lt;a href=&quot;inputobjects&quot;&gt;Pod :: InputObjects&lt;/a&gt;を参照）。</target>
        </trans-unit>
        <trans-unit id="c80e050c47afd7c7439491b82841365aa5c3f43a" translate="yes" xml:space="preserve">
          <source>a reference to a &lt;code&gt;Pod::Paragraph&lt;/code&gt; object which contains further information about the paragraph command (see &lt;a href=&quot;inputobjects&quot;&gt;Pod::InputObjects&lt;/a&gt; for details).</source>
          <target state="translated">段落コマンドに関する詳細情報を含む &lt;code&gt;Pod::Paragraph&lt;/code&gt; オブジェクトへの参照（詳細については、&lt;a href=&quot;inputobjects&quot;&gt;Pod :: InputObjects&lt;/a&gt;を参照）。</target>
        </trans-unit>
        <trans-unit id="2de844cccf2463406565f5f79e7d0c23fcb5032f" translate="yes" xml:space="preserve">
          <source>a reference to a [ source name, display name ] array</source>
          <target state="translated">ソース名、表示名の配列への参照</target>
        </trans-unit>
        <trans-unit id="6bf9ff5f95a22331a824e1df5b23e1daaf115e8c" translate="yes" xml:space="preserve">
          <source>a reference to a scalar to append YAML to</source>
          <target state="translated">にYAMLを追加するためのスカラへの参照</target>
        </trans-unit>
        <trans-unit id="6ba9f0a775e33ba0d83393e791f3715c8038c4eb" translate="yes" xml:space="preserve">
          <source>a reference to an array into which YAML will be pushed</source>
          <target state="translated">YAML がプッシュされる配列への参照</target>
        </trans-unit>
        <trans-unit id="f1cf41b67f8ac934bdb1895a8415ee32895dafcf" translate="yes" xml:space="preserve">
          <source>a reference to the subroutine;</source>
          <target state="translated">サブルーチンへの参照。</target>
        </trans-unit>
        <trans-unit id="c10bb3ae2e9e12614dc451b112b763b0e4c6ea09" translate="yes" xml:space="preserve">
          <source>a reference to the symbol table entry (typeglob) containing the subroutine;</source>
          <target state="translated">サブルーチンを含むシンボルテーブルエントリ(typeglob)への参照。</target>
        </trans-unit>
        <trans-unit id="716ec8e228f41268238a19d64c81add7c59efa1b" translate="yes" xml:space="preserve">
          <source>a regex:</source>
          <target state="translated">という正規表現を使用しています。</target>
        </trans-unit>
        <trans-unit id="ff9123773c3af11dc4fc6c1bb3d5deb9aca9a8cf" translate="yes" xml:space="preserve">
          <source>a regexp and backreferences &lt;code&gt;\g1&lt;/code&gt; , &lt;code&gt;\g2&lt;/code&gt; ,... only</source>
          <target state="translated">正規表現と後方参照 &lt;code&gt;\g1&lt;/code&gt; 、 &lt;code&gt;\g2&lt;/code&gt; 、...のみ</target>
        </trans-unit>
        <trans-unit id="c82d8b1831639010ccb6efbfc7708e3bbbf21bcb" translate="yes" xml:space="preserve">
          <source>a regexp and backreferences &lt;code&gt;\g1&lt;/code&gt;, &lt;code&gt;\g2&lt;/code&gt;,... only</source>
          <target state="translated">正規表現と後方参照 &lt;code&gt;\g1&lt;/code&gt; 、 &lt;code&gt;\g2&lt;/code&gt; 、...のみ</target>
        </trans-unit>
        <trans-unit id="b014f25a03aeeb46139f48d6914592ebe8048eb2" translate="yes" xml:space="preserve">
          <source>a regexp. This is a really nice feature; what matches later in a regexp is made to depend on what matched earlier in the regexp. Suppose we wanted to look for doubled words in a text, like &quot;the the&quot;. The following regexp finds all 3-letter doubles with a space in between:</source>
          <target state="translated">の再正規表現にマッチします。これはとても良い機能です。再帰検索で後からマッチしたものが、再帰検索で前からマッチしたものに依存するようになります。例えば、&quot;the the &quot;のような二重語の単語を探したいとします。次の正規表現は、スペースを挟んだ3文字のダブルスをすべて検索します。</target>
        </trans-unit>
        <trans-unit id="01acfa70c00b2c40814c6e8e07848ca1e6071adc" translate="yes" xml:space="preserve">
          <source>a regexp. This is a really nice feature; what matches later in a regexp is made to depend on what matched earlier in the regexp. Suppose we wanted to look for doubled words in a text, like 'the the'. The following regexp finds all 3-letter doubles with a space in between:</source>
          <target state="translated">の再正規表現にマッチします。これはとても良い機能です。再帰検索で後からマッチするものは、再帰検索の前にマッチしたものに依存するようになります。例えば、'the the'のような二重語の単語を探したいとします。次の正規表現は、スペースを挟んだ3文字のダブルスをすべて検索します。</target>
        </trans-unit>
        <trans-unit id="479e514b0897fdfb8d6718c16ce953228a292ea2" translate="yes" xml:space="preserve">
          <source>a regexp; not doing so may lead to surprising and unsatisfactory results.</source>
          <target state="translated">そうしないと、意外な結果や満足のいかない結果になるかもしれません。</target>
        </trans-unit>
        <trans-unit id="8430d6aa05798e9ad31cc9f0f4c419ec21ff77ea" translate="yes" xml:space="preserve">
          <source>a simple word</source>
          <target state="translated">一言</target>
        </trans-unit>
        <trans-unit id="f6a51fb4134250bbe89e82c92389e8c086899f29" translate="yes" xml:space="preserve">
          <source>a single &lt;code&gt;fail&lt;/code&gt; hint.</source>
          <target state="translated">単一の &lt;code&gt;fail&lt;/code&gt; ヒント。</target>
        </trans-unit>
        <trans-unit id="3bda680983bb65b6ab904551c0eb6137730ad0a5" translate="yes" xml:space="preserve">
          <source>a special case, after all; and at least it's possible, if not as concise as usual.</source>
          <target state="translated">結局のところ特殊なケースであり、通常のように簡潔ではないにしても、少なくともそれは可能です。</target>
        </trans-unit>
        <trans-unit id="e941e8088e0ee725d5a1331bbb15c1f7fa4f3cdd" translate="yes" xml:space="preserve">
          <source>a string of Perl statements.</source>
          <target state="translated">Perl文の文字列。</target>
        </trans-unit>
        <trans-unit id="76ca2e58b13a0c692067763da1d921195c362fc6" translate="yes" xml:space="preserve">
          <source>a string of octal digits. See also &lt;a href=&quot;#oct&quot;&gt;oct&lt;/a&gt;, if all you have is a string.</source>
          <target state="translated">8進数の文字列。文字列だけの場合は、&lt;a href=&quot;#oct&quot;&gt;oct&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="9ea867a4f27794a34a91a0e21a0c4879a0a50b43" translate="yes" xml:space="preserve">
          <source>a string of octal digits. See also &lt;a href=&quot;#oct-EXPR&quot;&gt;&lt;code&gt;oct&lt;/code&gt;&lt;/a&gt;, if all you have is a string.</source>
          <target state="translated">8進数の文字列。文字列しかない場合は、&lt;a href=&quot;#oct-EXPR&quot;&gt; &lt;code&gt;oct&lt;/code&gt; &lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="f83ace0c428bcd5408c51dfef2ab5e8998435bd7" translate="yes" xml:space="preserve">
          <source>a string of octal digits. See also &lt;a href=&quot;oct&quot;&gt;oct&lt;/a&gt;, if all you have is a string.</source>
          <target state="translated">8進数の文字列。文字列だけの場合は、&lt;a href=&quot;oct&quot;&gt;oct&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="b3166c6d48bdc27e53a55abb43985ea1756a1268" translate="yes" xml:space="preserve">
          <source>a subroutine reference.</source>
          <target state="translated">サブルーチン参照。</target>
        </trans-unit>
        <trans-unit id="04f0c4b1fd780f4be3730ec3c5d7dfd8c9451073" translate="yes" xml:space="preserve">
          <source>a thread:</source>
          <target state="translated">一本の糸。</target>
        </trans-unit>
        <trans-unit id="fe6d7479ae4200c3a6f4997fc5801bb9889aa1b5" translate="yes" xml:space="preserve">
          <source>a whitespace character.)</source>
          <target state="translated">空白文字)を使用しています。</target>
        </trans-unit>
        <trans-unit id="21b825df3faa11615ed424e23e8cff717a5252d5" translate="yes" xml:space="preserve">
          <source>a)</source>
          <target state="translated">a)</target>
        </trans-unit>
        <trans-unit id="78ecd65792fd338affd06e9d02fd8d0820236817" translate="yes" xml:space="preserve">
          <source>a) How do I verify that an email address is correctly formatted?</source>
          <target state="translated">a)メールアドレスが正しくフォーマットされていることを確認するには?</target>
        </trans-unit>
        <trans-unit id="1ee08278869a8bdd3842c22f817ca34ed228cb42" translate="yes" xml:space="preserve">
          <source>a+bi</source>
          <target state="translated">a+bi</target>
        </trans-unit>
        <trans-unit id="81541b7da471dd2332c53aedfa2bdfe3a4665452" translate="yes" xml:space="preserve">
          <source>a-f (or A-F, case doesn't matter). Each hexadecimal digit represents four bits, or half a byte. &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt; 0x..., &quot;\n&quot;&lt;/code&gt; will show a hexadecimal number in decimal, and &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt; &quot;%x\n&quot;, $decimal&lt;/code&gt; will show a decimal number in hexadecimal. If you have just the &quot;hex digits&quot; of a hexadecimal number, you can use the &lt;code&gt;&lt;a href=&quot;functions/hex&quot;&gt;hex()&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">af（またはAF、大文字小文字は関係ありません）。各16進数字は4ビット、つまり半バイトを表します。 &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt; 0x..., &quot;\n&quot;&lt;/code&gt; は16進数を10進数で表示し、 &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt; &quot;%x\n&quot;, $decimal&lt;/code&gt; は10進数を16進数で表示します。16進数の「16進数」だけがある場合は、 &lt;code&gt;&lt;a href=&quot;functions/hex&quot;&gt;hex()&lt;/a&gt;&lt;/code&gt; 関数を使用できます。</target>
        </trans-unit>
        <trans-unit id="30880da0c4d537f77731cd44fda09055efa5876d" translate="yes" xml:space="preserve">
          <source>a-f (or A-F, case doesn't matter). Each hexadecimal digit represents four bits, or half a byte. &lt;code&gt;print 0x..., &quot;\n&quot;&lt;/code&gt; will show a hexadecimal number in decimal, and &lt;code&gt;printf &quot;%x\n&quot;, $decimal&lt;/code&gt; will show a decimal number in hexadecimal. If you have just the &quot;hex digits&quot; of a hexadecimal number, you can use the &lt;code&gt;hex()&lt;/code&gt; function.</source>
          <target state="translated">af（またはAF、大文字と小文字は区別されません）。各16進数は、4ビットまたは0.5バイトを表します。 &lt;code&gt;print 0x..., &quot;\n&quot;&lt;/code&gt; は10進数で16進数を表示し、 &lt;code&gt;printf &quot;%x\n&quot;, $decimal&lt;/code&gt; は16進数で10進数を表示します。16進数の「16進数」しかない場合は、 &lt;code&gt;hex()&lt;/code&gt; 関数を使用できます。</target>
        </trans-unit>
        <trans-unit id="ed5e8e851dceeb90b5c2b37a81b2ad11ae340d95" translate="yes" xml:space="preserve">
          <source>a.out-style build</source>
          <target state="translated">A.アウトスタイルビルド</target>
        </trans-unit>
        <trans-unit id="b136797455badb9d94688d703d732be6bcd625d1" translate="yes" xml:space="preserve">
          <source>aMY_CXT/pMY_CXT</source>
          <target state="translated">aMY_CXT/pMY_CXT</target>
        </trans-unit>
        <trans-unit id="caa06bc8ded55725a89e31ba414012a00d4046d0" translate="yes" xml:space="preserve">
          <source>abc-shell version 53.2 has a bug that can cause crashes in the subprocesses used to run piped programs, if a later version is available you should install it instead.</source>
          <target state="translated">abc-shell のバージョン 53.2 には、パイプラインプログラムの実行に使用されるサブプロセスがクラッシュする可能性があるバグがあります。</target>
        </trans-unit>
        <trans-unit id="e3689d66476f49593a2a894cd94aec4693042ce8" translate="yes" xml:space="preserve">
          <source>ability to easily concatenate Unix-style specifications). In addition, it provides an additional file test routine, &lt;code&gt;candelete&lt;/code&gt;, which determines whether you have delete access to a file.</source>
          <target state="translated">Unixスタイルの仕様を簡単に連結する機能）。さらに、追加のファイルテストルーチン &lt;code&gt;candelete&lt;/code&gt; を提供します。これは、ファイルへの削除アクセス権があるかどうかを判断します。</target>
        </trans-unit>
        <trans-unit id="683856e844b4d27a05487529295efbbd0fd90322" translate="yes" xml:space="preserve">
          <source>abort ()</source>
          <target state="translated">打ち切る</target>
        </trans-unit>
        <trans-unit id="d73f1814a721ec582b85e9491a67089ca8678981" translate="yes" xml:space="preserve">
          <source>abort_execution</source>
          <target state="translated">abort_execution</target>
        </trans-unit>
        <trans-unit id="5780daf6db0b013dbf82807c9f85abba683b0820" translate="yes" xml:space="preserve">
          <source>about</source>
          <target state="translated">about</target>
        </trans-unit>
        <trans-unit id="bf822dae7472ffd43fa312bcb0d507b95bc27439" translate="yes" xml:space="preserve">
          <source>about =&amp;gt; {...}</source>
          <target state="translated">約=&amp;gt; {...}</target>
        </trans-unit>
        <trans-unit id="8f203a021dc29f479a81bd2dd69f4ea2898f02f6" translate="yes" xml:space="preserve">
          <source>about all the dependencies, so you should make sure that anything is up-to-date, say, by doing</source>
          <target state="translated">を実行して、すべての依存関係が最新であることを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="9fbb397449fabe7370de4e726a586750c0e025d4" translate="yes" xml:space="preserve">
          <source>above</source>
          <target state="translated">above</target>
        </trans-unit>
        <trans-unit id="3f8528380c147f9aa2206094f2404301d5bc3dbf" translate="yes" xml:space="preserve">
          <source>above is set up automatically during the build to a correct value on the builder machine, but is overridable at runtime,</source>
          <target state="translated">上記の値はビルド中に自動的にビルダマシン上で正しい値に設定されますが、実行時にはオーバーライド可能です。</target>
        </trans-unit>
        <trans-unit id="82451b41fd7878180b6aa2b54e369cbec4e8032c" translate="yes" xml:space="preserve">
          <source>abs</source>
          <target state="translated">abs</target>
        </trans-unit>
        <trans-unit id="a239a7dbad7ea85832efb23e90576b2dd038b7a1" translate="yes" xml:space="preserve">
          <source>abs VALUE</source>
          <target state="translated">アブス値</target>
        </trans-unit>
        <trans-unit id="415190d7a2135efc9f152a71915dffbe7a71529a" translate="yes" xml:space="preserve">
          <source>abs, alarm, chomp, chop, chr, chroot, cos, defined, eval, evalbytes, exp, fc, glob, hex, int, lc, lcfirst, length, log, lstat, mkdir, oct, ord, pos, print, printf, quotemeta, readlink, readpipe, ref, require, reverse (in scalar context only), rmdir, say, sin, split (for its second argument), sqrt, stat, study, uc, ucfirst, unlink, unpack.</source>
          <target state="translated">abs,alarm,chomp,chop,chr,chroot,cos,defined,eval,evalbytes,exp,fc,glob,hex,int,lc,lcfirst,length,log,lstat,mkdir,oct,ord,pos,print,printf,quotemeta.readlink,readpipe,ref,require,reverse (スカラコンテキストのみ),rmdir,say,sin,split (第二引数の場合),sqrt,stat,study,uc,ucfirst,unlink,unpack.</target>
        </trans-unit>
        <trans-unit id="c9d27d05c0f1948ba13845b76ad842c25f9c7acf" translate="yes" xml:space="preserve">
          <source>abs2rel</source>
          <target state="translated">abs2rel</target>
        </trans-unit>
        <trans-unit id="8e4c99d3fe9bf60d76af8048b3a4c7fae4f3567d" translate="yes" xml:space="preserve">
          <source>abs2rel (override)</source>
          <target state="translated">abs2rel (オーバーライド)</target>
        </trans-unit>
        <trans-unit id="16303fb221d3ec1b08ffec5f67d69601aa293453" translate="yes" xml:space="preserve">
          <source>abs_path</source>
          <target state="translated">abs_path</target>
        </trans-unit>
        <trans-unit id="5e8fc1f161ebdf02ac9d2d940aca4c69e7ddd903" translate="yes" xml:space="preserve">
          <source>abs_path and friends</source>
          <target state="translated">abs_path とその友人</target>
        </trans-unit>
        <trans-unit id="a4694021c8d1356f5760adc6ce253b54e2f437f0" translate="yes" xml:space="preserve">
          <source>absolute. This decision was made due to portability reasons. Since &lt;code&gt;File::Spec-&amp;gt;catdir()&lt;/code&gt; returns relative paths on all other operating systems, it will now also follow this convention on Mac OS. Note that this may break some existing scripts.</source>
          <target state="translated">絶対の。この決定は、移植性の理由により行われました。以来 &lt;code&gt;File::Spec-&amp;gt;catdir()&lt;/code&gt; 他のすべてのオペレーティング・システム上の相対パスを返し、それは今もMac OSで、この規則に従います。これにより、一部の既存のスクリプトが壊れる可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="eb40247beed3ba10597c7fdb55272d4608c34191" translate="yes" xml:space="preserve">
          <source>absolute. This decision was made due to portability reasons. Since &lt;code&gt;File::Spec-&amp;gt;catfile()&lt;/code&gt; returns relative paths on all other operating systems, it will now also follow this convention on Mac OS. Note that this may break some existing scripts.</source>
          <target state="translated">絶対の。この決定は、移植性の理由により行われました。以来 &lt;code&gt;File::Spec-&amp;gt;catfile()&lt;/code&gt; 他のすべてのオペレーティング・システム上の相対パスを返し、それは今もMac OSで、この規則に従います。これにより、一部の既存のスクリプトが壊れる可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="75eebe6521e20b7f9388d31918b564655eac99ce" translate="yes" xml:space="preserve">
          <source>absolutely cannot wait for the fix to be made upstream, released to CPAN and copied to blead, you must add (or update) a &lt;code&gt;CUSTOMIZED&lt;/code&gt; entry in the</source>
          <target state="translated">絶対に追加（または更新）しなければならない、CPANにリリースされ、bleadにコピーし、上流に作られる修正を待つことができない &lt;code&gt;CUSTOMIZED&lt;/code&gt; のエントリを</target>
        </trans-unit>
        <trans-unit id="ec3ec33367ae71405e35bd1b8b9135d59e173c1a" translate="yes" xml:space="preserve">
          <source>abstract</source>
          <target state="translated">abstract</target>
        </trans-unit>
        <trans-unit id="7a532dc15a911b9b9181922abf6ced9885b401e9" translate="yes" xml:space="preserve">
          <source>accent-insensitive Unicode sort</source>
          <target state="translated">アクセント不感応ユニコードソート</target>
        </trans-unit>
        <trans-unit id="e586a9d31c9053af08de34074e1d2e2b09839079" translate="yes" xml:space="preserve">
          <source>accent-insensitive comparisons</source>
          <target state="translated">アクセントによらない比較</target>
        </trans-unit>
        <trans-unit id="fc8cc4afa9fee369f0ce78c3b97600f87cf033b7" translate="yes" xml:space="preserve">
          <source>accent-insensitive locale comparisons</source>
          <target state="translated">アクセント不感応ロケール比較</target>
        </trans-unit>
        <trans-unit id="5fb801f2f30ac5b8a6671f1d04a959a51fc1671e" translate="yes" xml:space="preserve">
          <source>accept</source>
          <target state="translated">accept</target>
        </trans-unit>
        <trans-unit id="ae12c11f3760218cae63851a278652cd3eaea3b8" translate="yes" xml:space="preserve">
          <source>accept NEWSOCKET,GENERICSOCKET</source>
          <target state="translated">NEWSOCKET、GENERICSOCKETを受け入れる</target>
        </trans-unit>
        <trans-unit id="73148d1a963ff0a50ce4c368a4648b654a9d34b6" translate="yes" xml:space="preserve">
          <source>accept() on closed socket %s</source>
          <target state="translated">閉じたソケット %s での accept()</target>
        </trans-unit>
        <trans-unit id="5fc8d440432f0b7db9d7569d2e82bb54a31bbead" translate="yes" xml:space="preserve">
          <source>accept_targets_as_html</source>
          <target state="translated">accept_targets_as_html</target>
        </trans-unit>
        <trans-unit id="b60ee8214a0a6a02cea76e9bbed04a59ee0b267e" translate="yes" xml:space="preserve">
          <source>accepts_module</source>
          <target state="translated">accepts_module</target>
        </trans-unit>
        <trans-unit id="67dff9ee8056247422bb2cdd74c074036da47a0c" translate="yes" xml:space="preserve">
          <source>accessing</source>
          <target state="translated">accessing</target>
        </trans-unit>
        <trans-unit id="de3a63299e5e19ed22af733ce3c9c55e72ad3106" translate="yes" xml:space="preserve">
          <source>accessor function for the &quot;safe signals&quot; flag of a SigAction object; see &lt;a href=&quot;perlipc&quot;&gt;perlipc&lt;/a&gt; for general information on safe (a.k.a. &quot;deferred&quot;) signals. If you wish to handle a signal safely, use this accessor to set the &quot;safe&quot; flag in the &lt;code&gt;POSIX::SigAction&lt;/code&gt; object:</source>
          <target state="translated">SigActionオブジェクトの「安全な信号」フラグのアクセサ関数。安全な（別名「据え置き」）シグナルの一般情報については、&lt;a href=&quot;perlipc&quot;&gt;perlipc&lt;/a&gt;を参照してください。シグナルを安全に処理したい場合は、このアクセサーを使用して、 &lt;code&gt;POSIX::SigAction&lt;/code&gt; オブジェクトに「safe」フラグを設定します。</target>
        </trans-unit>
        <trans-unit id="130627c716765ea3404bece5800d80aa45677b23" translate="yes" xml:space="preserve">
          <source>accessor functions to get/set the values of a SigAction object.</source>
          <target state="translated">SigAction オブジェクトの値を取得/設定するためのアクセサ関数です。</target>
        </trans-unit>
        <trans-unit id="e2650bd93c165b1cdc46d89775cbfe69d061c04f" translate="yes" xml:space="preserve">
          <source>accessor methods</source>
          <target state="translated">アクセサメソッド</target>
        </trans-unit>
        <trans-unit id="b7f71f41bfbef50f02bf886cf865af8975cb5786" translate="yes" xml:space="preserve">
          <source>accidentally</source>
          <target state="translated">accidentally</target>
        </trans-unit>
        <trans-unit id="98c02f22b5888f9c463dd352a91b0e6f55f94ec6" translate="yes" xml:space="preserve">
          <source>account ()</source>
          <target state="translated">勘定</target>
        </trans-unit>
        <trans-unit id="c311818744e2dee42b862f476f40a3be4594793e" translate="yes" xml:space="preserve">
          <source>account string</source>
          <target state="translated">アカウント文字列</target>
        </trans-unit>
        <trans-unit id="de416b89496692682d5e0c82faba7064ec7953f1" translate="yes" xml:space="preserve">
          <source>account( ACCT )</source>
          <target state="translated">アカウント(ACCT )</target>
        </trans-unit>
        <trans-unit id="dbadfc42c4b5382c2ee2da3a10a730447dd49543" translate="yes" xml:space="preserve">
          <source>accuracy()</source>
          <target state="translated">accuracy()</target>
        </trans-unit>
        <trans-unit id="d64f260a7f8859f9124906f28ba5bcaab331b63d" translate="yes" xml:space="preserve">
          <source>ackermann()</source>
          <target state="translated">ackermann()</target>
        </trans-unit>
        <trans-unit id="5bc073f750a11be5136816b14b952737583d3973" translate="yes" xml:space="preserve">
          <source>acos_real</source>
          <target state="translated">acos_real</target>
        </trans-unit>
        <trans-unit id="3959b939e5424783c493f42cf465f2662e1abbe0" translate="yes" xml:space="preserve">
          <source>acosec</source>
          <target state="translated">acosec</target>
        </trans-unit>
        <trans-unit id="94cd96ac8391252b0d7300cdaef80570e8f1939f" translate="yes" xml:space="preserve">
          <source>acosech</source>
          <target state="translated">acosech</target>
        </trans-unit>
        <trans-unit id="c8be89c327cde8b860df98308b35887bdf811326" translate="yes" xml:space="preserve">
          <source>acot</source>
          <target state="translated">acot</target>
        </trans-unit>
        <trans-unit id="b5aa292058ce240d98a24e0ca78c79be934f0018" translate="yes" xml:space="preserve">
          <source>acotan</source>
          <target state="translated">acotan</target>
        </trans-unit>
        <trans-unit id="299176f2fa0007084d06d47b1d722326f90b487a" translate="yes" xml:space="preserve">
          <source>acotanh</source>
          <target state="translated">acotanh</target>
        </trans-unit>
        <trans-unit id="eef264f7031ee0d55b786c83a83d07ec29a99714" translate="yes" xml:space="preserve">
          <source>acsc</source>
          <target state="translated">acsc</target>
        </trans-unit>
        <trans-unit id="742151db90a3d5f8f47cde2a0573ae956bba7225" translate="yes" xml:space="preserve">
          <source>action&quot; or &quot;manu-</source>
          <target state="translated">アクション」または「マニュ</target>
        </trans-unit>
        <trans-unit id="2bb6b986c5d6fb26dd9dd1054b545ce022371b0c" translate="yes" xml:space="preserve">
          <source>active</source>
          <target state="translated">active</target>
        </trans-unit>
        <trans-unit id="203ce15d5d992c06720839acb6b6026bd08e64ca" translate="yes" xml:space="preserve">
          <source>active ( [ PATTERN ] )</source>
          <target state="translated">アクティブ([PATTERN])</target>
        </trans-unit>
        <trans-unit id="41abc94fa7e0679b76e7b8ab3c7e76b2f28ab611" translate="yes" xml:space="preserve">
          <source>active_times ()</source>
          <target state="translated">アクティブタイムス</target>
        </trans-unit>
        <trans-unit id="50f46198a1bd51840547aee34fc045921e43d4c6" translate="yes" xml:space="preserve">
          <source>actual</source>
          <target state="translated">actual</target>
        </trans-unit>
        <trans-unit id="e1c639fb19db0dcce693983be5102f6a49818507" translate="yes" xml:space="preserve">
          <source>actual arguments</source>
          <target state="translated">実引数</target>
        </trans-unit>
        <trans-unit id="1aa2cdb15228a618096deb2127d28c6d2552c4bf" translate="yes" xml:space="preserve">
          <source>actual_failed</source>
          <target state="translated">actual_failed</target>
        </trans-unit>
        <trans-unit id="156eaf0a85ab4579b92f17332e5be12445a633fb" translate="yes" xml:space="preserve">
          <source>actual_ok</source>
          <target state="translated">actual_ok</target>
        </trans-unit>
        <trans-unit id="2d1e5e7312142eb6c199ba547d3200e7b449f24f" translate="yes" xml:space="preserve">
          <source>actual_passed</source>
          <target state="translated">actual_passed</target>
        </trans-unit>
        <trans-unit id="d617b5ef5a36ed1caa9214fcdabefa7731cb473f" translate="yes" xml:space="preserve">
          <source>actually</source>
          <target state="translated">actually</target>
        </trans-unit>
        <trans-unit id="39e1c11289ba978ed126f2e8f80c36df95d4eef2" translate="yes" xml:space="preserve">
          <source>actually exists in such a directory. Example:</source>
          <target state="translated">がそのようなディレクトリに実際に存在するかどうかを確認します。例です。</target>
        </trans-unit>
        <trans-unit id="5e9b6a0946d93d3600096c34f7b9c6d8f4af95ac" translate="yes" xml:space="preserve">
          <source>actually made it back to</source>
          <target state="translated">に戻ってきました</target>
        </trans-unit>
        <trans-unit id="6f062b8fcdd36756625e1ab1e5c1953adc6ab240" translate="yes" xml:space="preserve">
          <source>actually matches is already determined. The ordering of the matches is the same as for the chosen subexpression.</source>
          <target state="translated">が実際にマッチするかどうかはすでに決定されています。マッチする順序は、選択された副式の場合と同じです。</target>
        </trans-unit>
        <trans-unit id="fa1143dea12bffbbc1aa99d5da2ec811d63b5127" translate="yes" xml:space="preserve">
          <source>adb</source>
          <target state="translated">adb</target>
        </trans-unit>
        <trans-unit id="e971b60e69554dc73ae2867ffc1d8dbfe7585bf6" translate="yes" xml:space="preserve">
          <source>adb is the Android Debug Bridge. For our purposes, it's basically a way of establishing an ssh connection to an Android device without having to install anything on the device itself, as long as the device is either on the same local network as the host, or it is connected to the host through USB.</source>
          <target state="translated">adb は Android デバッグブリッジです。我々の目的のために、基本的には、デバイスがホストと同じローカルネットワーク上にあるか、USB 経由でホストに接続されている限り、デバイス自体に何もインストールすることなく、Android デバイスに ssh 接続を確立する方法です。</target>
        </trans-unit>
        <trans-unit id="726d6990cbbd796d526f6eb70f406a9a21c44e5a" translate="yes" xml:space="preserve">
          <source>adb or ssh?</source>
          <target state="translated">adbかsshか?</target>
        </trans-unit>
        <trans-unit id="58d1bbce297de3c304a9fefc3b483181872a5c6b" translate="yes" xml:space="preserve">
          <source>add</source>
          <target state="translated">add</target>
        </trans-unit>
        <trans-unit id="1cdefa74e097cfd38a7c079579ff60228b0ab7a4" translate="yes" xml:space="preserve">
          <source>add ( HANDLES )</source>
          <target state="translated">追加(HANDLES )</target>
        </trans-unit>
        <trans-unit id="a6150967f5d404bfa61836ada61d4d8886af78a8" translate="yes" xml:space="preserve">
          <source>add as field, containing abstract, maximum 80 characters, suggested minimum 40 characters</source>
          <target state="translated">フィールドとして追加し、抽象を含む、最大80文字、推奨最低40文字</target>
        </trans-unit>
        <trans-unit id="1d1b3b51172716d0cb050801b8fab16ebc7d7185" translate="yes" xml:space="preserve">
          <source>add_bits</source>
          <target state="translated">add_bits</target>
        </trans-unit>
        <trans-unit id="8bab9844d8f1c6dd4567678a3d4228ce8b501259" translate="yes" xml:space="preserve">
          <source>add_bits($data, $nbits)</source>
          <target state="translated">add_bits($data,$nbits)</target>
        </trans-unit>
        <trans-unit id="93ac08fbb73a3cad19b1e009a5e2b9a0a78a5e4b" translate="yes" xml:space="preserve">
          <source>add_bits()</source>
          <target state="translated">add_bits()</target>
        </trans-unit>
        <trans-unit id="64dea38af51fbf2c8ff3ee6ea4af6ed53003ace2" translate="yes" xml:space="preserve">
          <source>add_callback ()</source>
          <target state="translated">追加コールバック</target>
        </trans-unit>
        <trans-unit id="abf3032307dfe39ef958ebe45b1f12714169343d" translate="yes" xml:space="preserve">
          <source>add_cp_to_invlist</source>
          <target state="translated">add_cp_to_invlist</target>
        </trans-unit>
        <trans-unit id="6fd7f87f1b6566c349bb595a4f1059c41892cb2f" translate="yes" xml:space="preserve">
          <source>add_exclusion</source>
          <target state="translated">add_exclusion</target>
        </trans-unit>
        <trans-unit id="a60043eb168b23b34ba4c0c7b51cef7203ddc42f" translate="yes" xml:space="preserve">
          <source>add_file_and_line</source>
          <target state="translated">add_file_and_line</target>
        </trans-unit>
        <trans-unit id="b3a0288b8ca6d27db738d809d62ac0e3c6285121" translate="yes" xml:space="preserve">
          <source>add_inputmap</source>
          <target state="translated">add_inputmap</target>
        </trans-unit>
        <trans-unit id="4514cf258d3e4c89d44816b76aaa5fc2f1386225" translate="yes" xml:space="preserve">
          <source>add_maximum</source>
          <target state="translated">add_maximum</target>
        </trans-unit>
        <trans-unit id="fc9a8eca1a31dcb594410d626208235bd7fc7a61" translate="yes" xml:space="preserve">
          <source>add_minimum</source>
          <target state="translated">add_minimum</target>
        </trans-unit>
        <trans-unit id="acd66d90d21c6fe51ff501907bb5d392108664bf" translate="yes" xml:space="preserve">
          <source>add_outputmap</source>
          <target state="translated">add_outputmap</target>
        </trans-unit>
        <trans-unit id="0d3c41fd8732592880e7f55cc7c3fc8a834c7be0" translate="yes" xml:space="preserve">
          <source>add_rc_file</source>
          <target state="translated">add_rc_file</target>
        </trans-unit>
        <trans-unit id="b5c8db3d60cf29a727589536b11b08e340485572" translate="yes" xml:space="preserve">
          <source>add_requirements</source>
          <target state="translated">add_requirements</target>
        </trans-unit>
        <trans-unit id="01fc3276421dbf3f78fb6815d9b3576d38880db6" translate="yes" xml:space="preserve">
          <source>add_string</source>
          <target state="translated">add_string</target>
        </trans-unit>
        <trans-unit id="cd90350aa624ce72729ac4dfc2941036951f042d" translate="yes" xml:space="preserve">
          <source>add_string_requirement</source>
          <target state="translated">add_string_requirement</target>
        </trans-unit>
        <trans-unit id="94d0e78aca0adb443be5d146e1dac8975ed16903" translate="yes" xml:space="preserve">
          <source>add_style ()</source>
          <target state="translated">追加スタイル</target>
        </trans-unit>
        <trans-unit id="e9c9fe277eedf4b0e446ea3693bd7d7483c107ca" translate="yes" xml:space="preserve">
          <source>add_typemap</source>
          <target state="translated">add_typemap</target>
        </trans-unit>
        <trans-unit id="eb656a1cf4cd5296805d99910b45e4dc325cbb17" translate="yes" xml:space="preserve">
          <source>added to your call to</source>
          <target state="translated">呼び込みに加えて</target>
        </trans-unit>
        <trans-unit id="bf85afafd571966f1893bc1b4d94179e60f5e7c5" translate="yes" xml:space="preserve">
          <source>addflags</source>
          <target state="translated">addflags</target>
        </trans-unit>
        <trans-unit id="c3805175370d19c334b59f45b87343b9f2b7f5e1" translate="yes" xml:space="preserve">
          <source>addition</source>
          <target state="translated">addition</target>
        </trans-unit>
        <trans-unit id="00926c40438f9f8f6693a93e815909416f63a54a" translate="yes" xml:space="preserve">
          <source>addr</source>
          <target state="translated">addr</target>
        </trans-unit>
        <trans-unit id="d3b529cc111bc45c37531a55d9d055085829bd45" translate="yes" xml:space="preserve">
          <source>addr =&amp;gt; STRING</source>
          <target state="translated">addr =&amp;gt; STRING</target>
        </trans-unit>
        <trans-unit id="c662180230cad14787d4ab7e77aa08681ce783fa" translate="yes" xml:space="preserve">
          <source>address</source>
          <target state="translated">address</target>
        </trans-unit>
        <trans-unit id="f04b64693468ccbcd424224ccb20e8bc47ee146c" translate="yes" xml:space="preserve">
          <source>address operator</source>
          <target state="translated">アドレス演算子</target>
        </trans-unit>
        <trans-unit id="91ea4e7b6b94343d715c7982210567115655cb20" translate="yes" xml:space="preserve">
          <source>adds a new name for a control character.</source>
          <target state="translated">制御文字に新しい名前を追加します。</target>
        </trans-unit>
        <trans-unit id="9c677b000cbca8edd8a283feb5874aa9705fe891" translate="yes" xml:space="preserve">
          <source>adds it automatically when building a program. However, when accessing an executable as a normal file (e.g.,</source>
          <target state="translated">はプログラムを構築する際に自動的に追加します。しかし、通常のファイルとして実行ファイルにアクセスする場合(例えば</target>
        </trans-unit>
        <trans-unit id="095c0c5ecd4727ed55c8b2fdc7688091189d0cae" translate="yes" xml:space="preserve">
          <source>adds the line to the history of input, from where it can be used if the actual &lt;code&gt;&lt;a href=&quot;../functions/readline&quot;&gt;readline&lt;/a&gt;&lt;/code&gt; is present.</source>
          <target state="translated">入力の履歴に行を追加します。実際の &lt;code&gt;&lt;a href=&quot;../functions/readline&quot;&gt;readline&lt;/a&gt;&lt;/code&gt; が存在する場合はそこから使用できます。</target>
        </trans-unit>
        <trans-unit id="15365e423360558ad8fd1101175a39561533a309" translate="yes" xml:space="preserve">
          <source>adds the line to the history of input, from where it can be used if the actual &lt;code&gt;readline&lt;/code&gt; is present.</source>
          <target state="translated">入力の履歴に行を追加し、実際の &lt;code&gt;readline&lt;/code&gt; が存在する場合に使用できるようにします。</target>
        </trans-unit>
        <trans-unit id="c06e00a8be663c1327d667390b98cd4e016d9d8c" translate="yes" xml:space="preserve">
          <source>addsym($name[,$maxlen[,$silent]])</source>
          <target state="translated">addsym($name[,$maxlen[,$silent]])</target>
        </trans-unit>
        <trans-unit id="b0b7161ec6ad88575ef86bb08f43a11d9469dba1" translate="yes" xml:space="preserve">
          <source>adecimal.</source>
          <target state="translated">adecimal.</target>
        </trans-unit>
        <trans-unit id="b144ec6dfdab55ae2963bf4c782c7e4157019ffd" translate="yes" xml:space="preserve">
          <source>adminaddress</source>
          <target state="translated">adminaddress</target>
        </trans-unit>
        <trans-unit id="916a530bfc75fe948657d7b5108d40fc2508c596" translate="yes" xml:space="preserve">
          <source>advised to follow this introduction with more information from the full Perl manual, the table of contents to which can be found in &lt;a href=&quot;http://search.cpan.org/perldoc/perltoc&quot;&gt;perltoc&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://search.cpan.org/perldoc/perltoc&quot;&gt;perltoc&lt;/a&gt;にある目次の一覧である完全なPerlマニュアルからの詳細情報で、この紹介に従うことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="077ed481cc8691c625c070d3706e3db2ce79fb9e" translate="yes" xml:space="preserve">
          <source>advised to follow this introduction with more information from the full Perl manual, the table of contents to which can be found in &lt;a href=&quot;perltoc&quot;&gt;perltoc&lt;/a&gt;.</source>
          <target state="translated">完全なPerlマニュアルからの詳細情報をこの紹介に従うことをお勧めします。&lt;a href=&quot;perltoc&quot;&gt;目次&lt;/a&gt;はperltocにあります。</target>
        </trans-unit>
        <trans-unit id="a671c77e741dd6eb2475516bb9fdd71371af6c12" translate="yes" xml:space="preserve">
          <source>affect implicit upgrading for byte-strings, and is thus incapable of silencing warnings from this module. See &lt;a href=&quot;encoding&quot;&gt;encoding&lt;/a&gt; for more details.</source>
          <target state="translated">バイト文字列の暗黙的なアップグレードに影響するため、このモジュールからの警告を消音することはできません。詳細については、&lt;a href=&quot;encoding&quot;&gt;エンコーディング&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="aab93e8e3796f91139b951be5ef4c63e4b3fdff0" translate="yes" xml:space="preserve">
          <source>affect normal access to a variable. (Locks on subs are different, and covered in a bit.) If you really,</source>
          <target state="translated">は、変数への通常のアクセスに影響を与えます。(サブシステム上のロックは異なり、少しだけカバーされています。)本当にあなたがするならば。</target>
        </trans-unit>
        <trans-unit id="d16b511453d6e723e850460d0b087be14fb56fb1" translate="yes" xml:space="preserve">
          <source>afs.U</source>
          <target state="translated">afs.U</target>
        </trans-unit>
        <trans-unit id="405906c9d5be6ae5393ca65fb0e7c38e0d585ecb" translate="yes" xml:space="preserve">
          <source>after</source>
          <target state="translated">after</target>
        </trans-unit>
        <trans-unit id="1a8a978377842aa511fbb5bb66f929228650a830" translate="yes" xml:space="preserve">
          <source>after a &lt;b&gt;failure&lt;/b&gt;:</source>
          <target state="translated">&lt;b&gt;失敗&lt;/b&gt;後：</target>
        </trans-unit>
        <trans-unit id="2391217343165dbdcc1e85432eaed6f2d40232f2" translate="yes" xml:space="preserve">
          <source>after the first line of wrap(). This is not a most effective implementation, one may consider</source>
          <target state="translated">を wrap()の最初の行の後に追加します。これは最も効果的な実装ではありません。</target>
        </trans-unit>
        <trans-unit id="d501db092c38ad8292690be746bddff30bdd42c1" translate="yes" xml:space="preserve">
          <source>after which you may use either</source>
          <target state="translated">その後、次のいずれかを使用することができます。</target>
        </trans-unit>
        <trans-unit id="d237158794ce68f8acfcb27dbb3524b7d367bc44" translate="yes" xml:space="preserve">
          <source>after you made your modifications.</source>
          <target state="translated">修正した後に</target>
        </trans-unit>
        <trans-unit id="0de616ced95f0b022d2889588dcde62712d64ff3" translate="yes" xml:space="preserve">
          <source>again, and run</source>
          <target state="translated">再度、走って</target>
        </trans-unit>
        <trans-unit id="80ece22ca1db999b834ed949964a66789d2cf76d" translate="yes" xml:space="preserve">
          <source>against the previous and current perls to see what difference it has made, and whether anything else has slowed down as a consequence.</source>
          <target state="translated">を以前の Perl と現在の Perl とで比較して、どのような違いがあったのか、またその結果として他の何かが遅くなったのかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="1758132a9fc3c2ae42bd5721dfb601fa2eba8c8d" translate="yes" xml:space="preserve">
          <source>aggregate_tests</source>
          <target state="translated">aggregate_tests</target>
        </trans-unit>
        <trans-unit id="f1525d2f1de4ff409ccb719b4f0bd276a7bb7c21" translate="yes" xml:space="preserve">
          <source>agree on the type of reference and also on the organization of data within the object body. Failure to agree on the type results in immediate death when the wrong method tries to access an object. Failure to agree on data organization may lead to one class trampling over the data of another.</source>
          <target state="translated">は、参照の型とオブジェクト本体内のデータの構成に同意しなければなりません。型についての合意に失敗すると、間違ったメソッドがオブジェクトにアクセスしようとしたときに即死してしまいます。データの構成に同意しないと、あるクラスが別のクラスのデータを踏みにじることになるかもしれません。</target>
        </trans-unit>
        <trans-unit id="73468898c9988e2f9e409b93e8bff16eaa79c0ba" translate="yes" xml:space="preserve">
          <source>alarm</source>
          <target state="translated">alarm</target>
        </trans-unit>
        <trans-unit id="18e2b413721b9bf837fab8f8cf96fb71b94f7658" translate="yes" xml:space="preserve">
          <source>alarm ( $floating_seconds [, $interval_floating_seconds ] )</source>
          <target state="translated">アラーム($floating_seconds [,$interval_floating_seconds])</target>
        </trans-unit>
        <trans-unit id="05d57bf3c2063c1b5c9e035ba1e89e203c424841" translate="yes" xml:space="preserve">
          <source>alarm SECONDS</source>
          <target state="translated">アラーム秒</target>
        </trans-unit>
        <trans-unit id="605bec3b3bc4303313aa3e75ef5affbb28a79c75" translate="yes" xml:space="preserve">
          <source>albeit with substitutions such as &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s/LATIN//&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s/VULGAR//&lt;/a&gt;&lt;/code&gt; in all cases; &lt;code&gt;s/CAPITAL LETTER//&lt;/code&gt; in some cases; and &lt;code&gt;s/SMALL LETTER ([A-Z])/\l$1/&lt;/code&gt; in some other cases. Controls are listed using their Unicode 6.2 abbreviations. The differences between the 0037 and 1047 sets are flagged with &lt;code&gt;**&lt;/code&gt; . The differences between the 1047 and POSIX-BC sets are flagged with &lt;code&gt;##.&lt;/code&gt; All &lt;code&gt;&lt;a href=&quot;functions/ord&quot;&gt;ord()&lt;/a&gt;&lt;/code&gt; numbers listed are decimal. If you would rather see this table listing octal values, then run the table (that is, the pod source text of this document, since this recipe may not work with a pod2_other_format translation) through:</source>
          <target state="translated">すべてのケースで &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s/LATIN//&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s/VULGAR//&lt;/a&gt;&lt;/code&gt; などの置換を使用しますが、 &lt;code&gt;s/CAPITAL LETTER//&lt;/code&gt; 場合によっては;そして &lt;code&gt;s/SMALL LETTER ([A-Z])/\l$1/&lt;/code&gt; いくつかの他の場合です。コントロールは、Unicode 6.2の略語を使用してリストされています。セット0037と1047の違いには &lt;code&gt;**&lt;/code&gt; のフラグが付けられます。 1047セットとPOSIX-BCセットの違いには、 &lt;code&gt;##.&lt;/code&gt; フラグが付けられています。すべての &lt;code&gt;&lt;a href=&quot;functions/ord&quot;&gt;ord()&lt;/a&gt;&lt;/code&gt; 記載されている数字は小数点です。この表に8進数の値が表示されているのを確認したい場合は、次のように表を実行します（つまり、このレシピはpod2_other_format変換では機能しないため、このドキュメントのpodソーステキスト）。</target>
        </trans-unit>
        <trans-unit id="75a11396bc9295afa76865d46554ea421eb24c33" translate="yes" xml:space="preserve">
          <source>albeit with substitutions such as &lt;code&gt;s/LATIN//&lt;/code&gt; and &lt;code&gt;s/VULGAR//&lt;/code&gt; in all cases; &lt;code&gt;s/CAPITAL LETTER//&lt;/code&gt; in some cases; and &lt;code&gt;s/SMALL LETTER ([A-Z])/\l$1/&lt;/code&gt; in some other cases. Controls are listed using their Unicode 6.2 abbreviations. The differences between the 0037 and 1047 sets are flagged with &lt;code&gt;**&lt;/code&gt;. The differences between the 1047 and POSIX-BC sets are flagged with &lt;code&gt;##.&lt;/code&gt; All &lt;code&gt;ord()&lt;/code&gt; numbers listed are decimal. If you would rather see this table listing octal values, then run the table (that is, the pod source text of this document, since this recipe may not work with a pod2_other_format translation) through:</source>
          <target state="translated">すべての場合に &lt;code&gt;s/LATIN//&lt;/code&gt; や &lt;code&gt;s/VULGAR//&lt;/code&gt; などの置換がありますが。 &lt;code&gt;s/CAPITAL LETTER//&lt;/code&gt; 場合によっては;および &lt;code&gt;s/SMALL LETTER ([A-Z])/\l$1/&lt;/code&gt; その他の場合。コントロールは、Unicode6.2の略語を使用してリストされています。 0037セットと1047セットの違いには、 &lt;code&gt;**&lt;/code&gt; のフラグが付けられます。 1047セットとPOSIX-BCセットの違いには、 &lt;code&gt;##.&lt;/code&gt; フラグが付けられています。リストされているすべての &lt;code&gt;ord()&lt;/code&gt; 番号は10進数です。このテーブルに8進値をリストしたい場合は、次の方法でテーブル（つまり、このレシピはpod2_other_format変換では機能しない可能性があるため、このドキュメントのポッドソーステキスト）を実行します。</target>
        </trans-unit>
        <trans-unit id="9a53b0819e7b65cebdd2f94ad43011ac678d3fc3" translate="yes" xml:space="preserve">
          <source>algorithm</source>
          <target state="translated">algorithm</target>
        </trans-unit>
        <trans-unit id="cdb6fdbe91faa53a7c573c80b7c18108c73c0480" translate="yes" xml:space="preserve">
          <source>alias</source>
          <target state="translated">alias</target>
        </trans-unit>
        <trans-unit id="3b21e0f54dca09308ec896c51cda4f9ca4dd91a4" translate="yes" xml:space="preserve">
          <source>aliases</source>
          <target state="translated">aliases</target>
        </trans-unit>
        <trans-unit id="3d30739d4c2f9e4b4a11180a7c3327f3e52fd8d3" translate="yes" xml:space="preserve">
          <source>alignbytes.U</source>
          <target state="translated">alignbytes.U</target>
        </trans-unit>
        <trans-unit id="d87c448044defb778f33158d8ccf94a20531d600" translate="yes" xml:space="preserve">
          <source>all</source>
          <target state="translated">all</target>
        </trans-unit>
        <trans-unit id="509fd71434fbe53c02bb286882f845078ef5ee17" translate="yes" xml:space="preserve">
          <source>all compressed data to the output data stream.</source>
          <target state="translated">すべての圧縮されたデータを出力データストリームに出力します。</target>
        </trans-unit>
        <trans-unit id="8130249f3817c584cba8ad27e67056edd1c31fac" translate="yes" xml:space="preserve">
          <source>all its ancestor classes. (This is because the idea of &quot;class data&quot; isn't directly implemented in Perl, but is instead left to individual class-systems to implement as they see fit..)</source>
          <target state="translated">クラスデータは、その祖先のすべてのクラスのデータを含んでいます。(これは、&quot;クラスデータ &quot;という概念がPerlでは直接実装されていないためで、その代わりに個々のクラスシステムに任されています。)</target>
        </trans-unit>
        <trans-unit id="8cc5040f7ad90d3df578f4dce7d48b395ac1b9d9" translate="yes" xml:space="preserve">
          <source>all of the help</source>
          <target state="translated">ばんのう</target>
        </trans-unit>
        <trans-unit id="d965b605775ee00cf1e3fc050be2a7bc7aeedc4a" translate="yes" xml:space="preserve">
          <source>all other</source>
          <target state="translated">其の他</target>
        </trans-unit>
        <trans-unit id="7d7ebf534a4b32567ce1f6b72446d3e09f27b240" translate="yes" xml:space="preserve">
          <source>all other versions of the module you're installing</source>
          <target state="translated">インストールしているモジュールの他のすべてのバージョンの</target>
        </trans-unit>
        <trans-unit id="de05e27afdc59b4d9bbeeae86d35f670cdbf6280" translate="yes" xml:space="preserve">
          <source>all remaining lines from is this way:</source>
          <target state="translated">からの残りの行はすべてこのようになります。</target>
        </trans-unit>
        <trans-unit id="f966b162e6dd45e46a9c1021ad48d8c4e414675d" translate="yes" xml:space="preserve">
          <source>all the subroutines are called in a list context.</source>
          <target state="translated">すべてのサブルーチンはリストコンテキストで呼び出されます。</target>
        </trans-unit>
        <trans-unit id="78d2c8306e2172f468ed7da94e5e7fdd772dd33e" translate="yes" xml:space="preserve">
          <source>all uncompressed data to the output data stream.</source>
          <target state="translated">すべての非圧縮データを出力データストリームに出力します。</target>
        </trans-unit>
        <trans-unit id="e6543caf79edcee1b041e9193f69e17c853ef1f4" translate="yes" xml:space="preserve">
          <source>all with optional leading and trailing zeros and/or spaces. Additionally, numbers are allowed to have an underscore between any two digits.</source>
          <target state="translated">すべての数字は、オプションで先頭と末尾のゼロおよび/またはスペースを使用します。さらに、数字は任意の2桁の間にアンダースコアを入れることができます。</target>
        </trans-unit>
        <trans-unit id="7bdf2024537d2f578f5cc2d810080f1792573304" translate="yes" xml:space="preserve">
          <source>all_casefolds()</source>
          <target state="translated">all_casefolds()</target>
        </trans-unit>
        <trans-unit id="4fd4ef547a3c496257a428c878a5f2ace5ae30f5" translate="yes" xml:space="preserve">
          <source>all_orig()</source>
          <target state="translated">all_orig()</target>
        </trans-unit>
        <trans-unit id="c80387e566dd863e5152a562207937bf89af2d9b" translate="yes" xml:space="preserve">
          <source>all_passed</source>
          <target state="translated">all_passed</target>
        </trans-unit>
        <trans-unit id="5ce526b479f02643605e6a3a0b87e719e7dc029e" translate="yes" xml:space="preserve">
          <source>all_proxy or ALL_PROXY</source>
          <target state="translated">all_proxy または ALL_PROXY</target>
        </trans-unit>
        <trans-unit id="acff2f4d1898df7e94ecaebad18831a97e4519ff" translate="yes" xml:space="preserve">
          <source>all_target</source>
          <target state="translated">all_target</target>
        </trans-unit>
        <trans-unit id="58c8fefcb9d1228b8d85bfa3be7cb2dc6454059d" translate="yes" xml:space="preserve">
          <source>all_trimmed()</source>
          <target state="translated">all_trimmed()</target>
        </trans-unit>
        <trans-unit id="12b42e096b7bca3af7ec1c5ba1a6445e520a72d8" translate="yes" xml:space="preserve">
          <source>allkeys.txt</source>
          <target state="translated">allkeys.txt</target>
        </trans-unit>
        <trans-unit id="a6bcdd56e8c802c3cc0adfca24a16eeabaf48566" translate="yes" xml:space="preserve">
          <source>alloc ( SIZE [, RECORD_SIZE] )</source>
          <target state="translated">alloc(SIZE [,RECORD_SIZE])</target>
        </trans-unit>
        <trans-unit id="450e3ffba8a6ed0775f91de33526ec7a1304bafd" translate="yes" xml:space="preserve">
          <source>alloc_LOGOP</source>
          <target state="translated">alloc_LOGOP</target>
        </trans-unit>
        <trans-unit id="78c9d45e7d52c660866b311227728fee1dfd5e6c" translate="yes" xml:space="preserve">
          <source>allocates some memory and constructs a Perl interpreter, along these lines:</source>
          <target state="translated">はいくつかのメモリを確保し、これらの行に沿って Perl インタプリタを構築します。</target>
        </trans-unit>
        <trans-unit id="f7e7e41212efde7ea0686ff849ccfa24e2db139b" translate="yes" xml:space="preserve">
          <source>alloccopstash</source>
          <target state="translated">alloccopstash</target>
        </trans-unit>
        <trans-unit id="38bfdf811456f7a2d5544e16bd3b9a1746a71459" translate="yes" xml:space="preserve">
          <source>allocmy</source>
          <target state="translated">allocmy</target>
        </trans-unit>
        <trans-unit id="6452e7c5a42f97b00af1a210afc7d4de315e57ec" translate="yes" xml:space="preserve">
          <source>allow</source>
          <target state="translated">allow</target>
        </trans-unit>
        <trans-unit id="4ac387a6f0f3e93209827552db5ced03710025ff" translate="yes" xml:space="preserve">
          <source>allow suppressing all such STDERR output, and instead allow an option for reporting errors/warnings in some other way, whether by triggering a callback, or noting errors in some attribute of the document object, or some similarly unobtrusive mechanism -- or even by appending a &quot;Pod Errors&quot; section to the end of the parsed form of the document.</source>
          <target state="translated">このようなSTDERRの出力をすべて抑制し、その代わりに、コールバックをトリガーしたり、ドキュメントオブジェクトの属性のエラーを表示したり、あるいは目立たないような仕組みでエラーや警告を報告するオプションを許可するか、あるいは、解析されたドキュメントの最後に &quot;Pod Errors &quot;セクションを追加することを許可します。</target>
        </trans-unit>
        <trans-unit id="eb4eaf28d97cf6eeb14d04f7a34316c390474dbc" translate="yes" xml:space="preserve">
          <source>allow( $test_me, \@criteria );</source>
          <target state="translated">allow($test_me,@criteria ).</target>
        </trans-unit>
        <trans-unit id="3a37962fd60b42df8aa02b6d33ccdff395888515" translate="yes" xml:space="preserve">
          <source>allow_barekey</source>
          <target state="translated">allow_barekey</target>
        </trans-unit>
        <trans-unit id="a543974e7d26daadc1395d1c6e7b8078c3576335" translate="yes" xml:space="preserve">
          <source>allow_bignum</source>
          <target state="translated">allow_bignum</target>
        </trans-unit>
        <trans-unit id="6e22555c7bdb8df09b6976a293551d257f1b9089" translate="yes" xml:space="preserve">
          <source>allow_blessed</source>
          <target state="translated">allow_blessed</target>
        </trans-unit>
        <trans-unit id="d553867cb9383b11bceb04dbe28706de9455409a" translate="yes" xml:space="preserve">
          <source>allow_installing_module_downgrades</source>
          <target state="translated">allow_installing_module_downgrades</target>
        </trans-unit>
        <trans-unit id="bc847f087845d39c5308ba9d3b2c5bb9cc772f28" translate="yes" xml:space="preserve">
          <source>allow_installing_outdated_dists</source>
          <target state="translated">allow_installing_outdated_dists</target>
        </trans-unit>
        <trans-unit id="5dcbe32c2f03fa90ed403f7164172cb11f3bec11" translate="yes" xml:space="preserve">
          <source>allow_nonref</source>
          <target state="translated">allow_nonref</target>
        </trans-unit>
        <trans-unit id="18d16647f34e3d07e219046c69e7d3f1257c3c2a" translate="yes" xml:space="preserve">
          <source>allow_singlequote</source>
          <target state="translated">allow_singlequote</target>
        </trans-unit>
        <trans-unit id="cf20b3dd7f92f6af8970229c500d42d89654dee4" translate="yes" xml:space="preserve">
          <source>allow_tags</source>
          <target state="translated">allow_tags</target>
        </trans-unit>
        <trans-unit id="4b8b9ad70de983f19bf8c3414f50e1b7ca0e8a89" translate="yes" xml:space="preserve">
          <source>allow_unknown</source>
          <target state="translated">allow_unknown</target>
        </trans-unit>
        <trans-unit id="023f8167a0ccb01c809eb2dc9a66997533fa1ae8" translate="yes" xml:space="preserve">
          <source>allowed if $pat is a precompiled regular expression, even if $pat contains &lt;code&gt;(?{ ... })&lt;/code&gt; assertions or &lt;code&gt;(??{ ... })&lt;/code&gt; subexpressions.</source>
          <target state="translated">$ patが &lt;code&gt;(?{ ... })&lt;/code&gt; アサーションまたは &lt;code&gt;(??{ ... })&lt;/code&gt; サブ表現を含む場合でも、$ patがプリコンパイルされた正規表現である場合に許可されます。</target>
        </trans-unit>
        <trans-unit id="4301b689bb097155e3bb6d16044296e9269b5529" translate="yes" xml:space="preserve">
          <source>allows Perl to do unsafe operations. Currently the only &quot;unsafe&quot; operations are attempting to unlink directories while running as superuser and running setuid programs with fatal taint checks turned into warnings. Note that warnings must be enabled along with this option to actually</source>
          <target state="translated">は Perl が安全でない操作を行うことを可能にします。現在のところ、「安全でない」操作は、スーパーユーザとして実行中にディレクトリのリンクを解除しようとすることと、致命的な汚染チェックを警告に変えた setuid プログラムを実行することだけです。実際には、警告を有効にするには、このオプションを有効にする必要があります。</target>
        </trans-unit>
        <trans-unit id="132c35f7c02912ac7c614dd2a393fc9375c90687" translate="yes" xml:space="preserve">
          <source>allows the &lt;code&gt;:default&lt;/code&gt; list from a particular version to be used. This provides the convenience of using the default methods, but the surety that no behavioral changes will occur if the &lt;code&gt;autodie&lt;/code&gt; module is upgraded.</source>
          <target state="translated">特定のバージョンの &lt;code&gt;:default&lt;/code&gt; リストを使用できるようにします。これにより、デフォルトの方法を使用するのに便利ですが、 &lt;code&gt;autodie&lt;/code&gt; モジュールがアップグレードされた場合に動作の変更が発生しないことが保証されます。</target>
        </trans-unit>
        <trans-unit id="423d437bbbc6bb7d398c30b28e10d75c03e10783" translate="yes" xml:space="preserve">
          <source>allows you to refer to special variables (like &lt;code&gt;$/&lt;/code&gt; ) with names (like $RS), as though they were in &lt;b&gt;awk&lt;/b&gt;; see &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt; for details.</source>
          <target state="translated">それらが&lt;b&gt;awkにある&lt;/b&gt;かのように、名前（$ RSなど）で特殊変数（ &lt;code&gt;$/&lt;/code&gt; ）を参照できます。詳細は&lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt;を参照してください。&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="0a38d55c68cff64453f4b558ad56eb38e0d41d24" translate="yes" xml:space="preserve">
          <source>allows you to refer to special variables (like &lt;code&gt;$/&lt;/code&gt;) with names (like $RS), as though they were in &lt;b&gt;awk&lt;/b&gt;; see &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt; for details.</source>
          <target state="translated">&lt;b&gt;awkにある&lt;/b&gt;かのように、名前（$ RSなど）で特別な変数（ &lt;code&gt;$/&lt;/code&gt; ）を参照できます。詳細については、&lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt;を参照してください。&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="f9e2ef61def87209ec2dd5c8efef68de53d4aef6" translate="yes" xml:space="preserve">
          <source>almost</source>
          <target state="translated">almost</target>
        </trans-unit>
        <trans-unit id="f5f5592352120c7c5dd3e80cd891b2a35cc0756a" translate="yes" xml:space="preserve">
          <source>along with #including</source>
          <target state="translated">と一緒に</target>
        </trans-unit>
        <trans-unit id="be76331b95dfc399cd776d2fc68021e0db03cc4f" translate="yes" xml:space="preserve">
          <source>alpha</source>
          <target state="translated">alpha</target>
        </trans-unit>
        <trans-unit id="dae74fa9026e628d3f6f3559507a9b1854909554" translate="yes" xml:space="preserve">
          <source>alpha, beta, gamma, mature, stable</source>
          <target state="translated">アルファ、ベータ、ガンマ、成熟した、安定した</target>
        </trans-unit>
        <trans-unit id="4a2b456d7475604c6d722f87ea130ed378807efe" translate="yes" xml:space="preserve">
          <source>alpha-&amp;gt;numify() is lossy</source>
          <target state="translated">alpha-&amp;gt; ​​numify（）は不可逆です</target>
        </trans-unit>
        <trans-unit id="f84474a16e6ac5b152e8cf62a4c115b6109f018b" translate="yes" xml:space="preserve">
          <source>alphabetic</source>
          <target state="translated">alphabetic</target>
        </trans-unit>
        <trans-unit id="c64c514967e575adeb799757ae37a7c922e7b3ea" translate="yes" xml:space="preserve">
          <source>alq=INTEGER</source>
          <target state="translated">alq=INTEGER</target>
        </trans-unit>
        <trans-unit id="b859ef3e26b0a8f0f8e5984aa4d45230ec4e08bc" translate="yes" xml:space="preserve">
          <source>already exist</source>
          <target state="translated">存する</target>
        </trans-unit>
        <trans-unit id="34879e54886ec3a6f952c7af1d444870828e03e7" translate="yes" xml:space="preserve">
          <source>already-existing</source>
          <target state="translated">already-existing</target>
        </trans-unit>
        <trans-unit id="09706c418809f1f4cfda992435ca1438eddaaeed" translate="yes" xml:space="preserve">
          <source>also</source>
          <target state="translated">also</target>
        </trans-unit>
        <trans-unit id="53ed2e1b9d4ccdc537294ab308f9c5d1e151cf60" translate="yes" xml:space="preserve">
          <source>also creates the prototyping header files for the internal functions, generates the documentation and a lot of other bits and pieces. It's important that when you add a new function to the core or change an existing one, you change the data in the table in</source>
          <target state="translated">また、内部関数のプロトタイピングヘッダファイルを作成し、ドキュメントを作成し、他の多くの断片を作成します。コアに新しい関数を追加したり、既存の関数を変更したりするときには</target>
        </trans-unit>
        <trans-unit id="4298c06d3073002d95a1081fb801b4a99c5de328" translate="yes" xml:space="preserve">
          <source>also exists). Cygwin does not require a</source>
          <target state="translated">も存在します)。Cygwinは</target>
        </trans-unit>
        <trans-unit id="2ce647c4199231c5e08b22c4a1f2a2b4b84f2e7b" translate="yes" xml:space="preserve">
          <source>also includes the platform's native underscore character, no matter what the locale is.</source>
          <target state="translated">また、ロケールに関係なく、プラットフォームのネイティブのアンダースコア文字が含まれています。</target>
        </trans-unit>
        <trans-unit id="17b130cdba41303da201c9df43f19e9e6a5a45ad" translate="yes" xml:space="preserve">
          <source>also provides a number of &lt;code&gt;PerlIOBase_xxxx()&lt;/code&gt; functions which are intended to be used in the table slots of classes which do not need to do anything special for a particular method.</source>
          <target state="translated">また、特定のメソッドに対して特別なことを行う必要のないクラスのテーブルスロットで使用することを目的とした多数の &lt;code&gt;PerlIOBase_xxxx()&lt;/code&gt; 関数も提供します。</target>
        </trans-unit>
        <trans-unit id="325562c769da3f80d0e63bb56514bc2e2723c9b5" translate="yes" xml:space="preserve">
          <source>alt</source>
          <target state="translated">alt</target>
        </trans-unit>
        <trans-unit id="edb013a0b027689799b6d3bb946b0380fa2999b8" translate="yes" xml:space="preserve">
          <source>alter the interpretation of nested formatting codes, meaning that the following four example lines are identical in meaning:</source>
          <target state="translated">は、ネストされた書式設定コードの解釈を変更し、以下の4つの例の行が同じ意味を持つことを意味します。</target>
        </trans-unit>
        <trans-unit id="65b9337dd1eb20bca1113bf6bd11cb96c866245b" translate="yes" xml:space="preserve">
          <source>alternate</source>
          <target state="translated">alternate</target>
        </trans-unit>
        <trans-unit id="370d1bb1966aad5766de7d85dcf3b3cc7341ab95" translate="yes" xml:space="preserve">
          <source>alternation</source>
          <target state="translated">alternation</target>
        </trans-unit>
        <trans-unit id="90a21c2d9fafd51047158e3e6a5415f3693609cc" translate="yes" xml:space="preserve">
          <source>alternative text/node '%s' contains non-escaped | or /</source>
          <target state="translated">代替テキスト/ノード '%s' には非エスケープされた | または/が含まれています。</target>
        </trans-unit>
        <trans-unit id="d8f6b9e41edbb2694075dece88f312fb846c270c" translate="yes" xml:space="preserve">
          <source>alternatives</source>
          <target state="translated">alternatives</target>
        </trans-unit>
        <trans-unit id="c78b3591272b10760192271aec607cc2988dcb68" translate="yes" xml:space="preserve">
          <source>although without duplicating any side effects that dereferencing the lvalue might trigger, such as from &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie()&lt;/a&gt;&lt;/code&gt;. Other assignment operators work similarly. The following are recognized:</source>
          <target state="translated">ただし、 &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie()&lt;/a&gt;&lt;/code&gt; のように、左辺値を逆参照するとトリガーされる可能性のある副作用を複製しない場合。他の代入演算子も同様に機能します。以下が認識されます：</target>
        </trans-unit>
        <trans-unit id="58354496c580dad5e91bb7860fafbe09369f222b" translate="yes" xml:space="preserve">
          <source>although without duplicating any side effects that dereferencing the lvalue might trigger, such as from &lt;code&gt;tie()&lt;/code&gt;. Other assignment operators work similarly. The following are recognized:</source>
          <target state="translated">ただし、 &lt;code&gt;tie()&lt;/code&gt; など、左辺値の逆参照がトリガーする可能性のある副作用を複製することはありません。他の代入演算子も同様に機能します。以下が認識されます。</target>
        </trans-unit>
        <trans-unit id="6656018ac96d0295d887ff2893ba9af66ae16af2" translate="yes" xml:space="preserve">
          <source>always</source>
          <target state="translated">always</target>
        </trans-unit>
        <trans-unit id="fb980e8b0c064246b90fe9981d818b33511ba028" translate="yes" xml:space="preserve">
          <source>always be called &lt;code&gt;my_cxt_t&lt;/code&gt; . The other &lt;code&gt;CXT*&lt;/code&gt; macros assume the existence of the &lt;code&gt;my_cxt_t&lt;/code&gt; typedef name.</source>
          <target state="translated">常に &lt;code&gt;my_cxt_t&lt;/code&gt; と呼ばれます。他の &lt;code&gt;CXT*&lt;/code&gt; マクロは、 &lt;code&gt;my_cxt_t&lt;/code&gt; typedef名の存在を前提としています。</target>
        </trans-unit>
        <trans-unit id="c49dca9e869bb8c7aa15e873638a4f97a5455840" translate="yes" xml:space="preserve">
          <source>always be called &lt;code&gt;my_cxt_t&lt;/code&gt;. The other &lt;code&gt;CXT*&lt;/code&gt; macros assume the existence of the &lt;code&gt;my_cxt_t&lt;/code&gt; typedef name.</source>
          <target state="translated">常に &lt;code&gt;my_cxt_t&lt;/code&gt; と呼ばれます。他の &lt;code&gt;CXT*&lt;/code&gt; マクロは、 &lt;code&gt;my_cxt_t&lt;/code&gt; typedef名の存在を前提としています。</target>
        </trans-unit>
        <trans-unit id="624628225263ede33300aec274499c51e6ba799d" translate="yes" xml:space="preserve">
          <source>amagic_call</source>
          <target state="translated">amagic_call</target>
        </trans-unit>
        <trans-unit id="dbf2d81c9c333b5fca3bee0fb8df6f61d4eedef9" translate="yes" xml:space="preserve">
          <source>amagic_cmp</source>
          <target state="translated">amagic_cmp</target>
        </trans-unit>
        <trans-unit id="25a6689d4dce784d2f9625d84757ab34382c1494" translate="yes" xml:space="preserve">
          <source>amagic_cmp_desc</source>
          <target state="translated">amagic_cmp_desc</target>
        </trans-unit>
        <trans-unit id="bee0ae5d5d149f2eb908685e4633a3f43fe07388" translate="yes" xml:space="preserve">
          <source>amagic_cmp_locale</source>
          <target state="translated">amagic_cmp_locale</target>
        </trans-unit>
        <trans-unit id="5a6fd4c04b4f63507f7886db1d604bbf68f15a0a" translate="yes" xml:space="preserve">
          <source>amagic_cmp_locale_desc</source>
          <target state="translated">amagic_cmp_locale_desc</target>
        </trans-unit>
        <trans-unit id="1a66aa375c6c5c3ad1ca7cdaa4deb1260f69b56f" translate="yes" xml:space="preserve">
          <source>amagic_deref_call</source>
          <target state="translated">amagic_deref_call</target>
        </trans-unit>
        <trans-unit id="72c7f5c6016d0a5d76e03bd8489009a05eadad3d" translate="yes" xml:space="preserve">
          <source>amagic_generation</source>
          <target state="translated">amagic_generation</target>
        </trans-unit>
        <trans-unit id="62ca8b4224c50df749865c98c2134880803b4c3b" translate="yes" xml:space="preserve">
          <source>amagic_i_ncmp</source>
          <target state="translated">amagic_i_ncmp</target>
        </trans-unit>
        <trans-unit id="b1453a2d7d7e9d1d0012d8ae25376ce27440536c" translate="yes" xml:space="preserve">
          <source>amagic_i_ncmp_desc</source>
          <target state="translated">amagic_i_ncmp_desc</target>
        </trans-unit>
        <trans-unit id="a9723b7bf40723bbfd1737495f16d06af6d7dcd6" translate="yes" xml:space="preserve">
          <source>amagic_is_enabled</source>
          <target state="translated">amagic_is_enabled</target>
        </trans-unit>
        <trans-unit id="d19f07bee0c2a2dd0470a5fb2ec269a7c0aa948e" translate="yes" xml:space="preserve">
          <source>amagic_ncmp</source>
          <target state="translated">amagic_ncmp</target>
        </trans-unit>
        <trans-unit id="fa6cbf136542ba3825af609917d7ed29273c9fa7" translate="yes" xml:space="preserve">
          <source>amagic_ncmp_desc</source>
          <target state="translated">amagic_ncmp_desc</target>
        </trans-unit>
        <trans-unit id="9e7cc664880363e8a6f8dd216803f53660c055a7" translate="yes" xml:space="preserve">
          <source>ambient_pragmas</source>
          <target state="translated">ambient_pragmas</target>
        </trans-unit>
        <trans-unit id="75a14d5aecfa0926099831db837cd6a62fe95561" translate="yes" xml:space="preserve">
          <source>amed character.</source>
          <target state="translated">amedのキャラクター。</target>
        </trans-unit>
        <trans-unit id="3b367d8b97dbd352b7660082cc380a4f6d0dd4b6" translate="yes" xml:space="preserve">
          <source>amnesty =&amp;gt; [{...}, ...]</source>
          <target state="translated">アムネスティ=&amp;gt; [{...}、...]</target>
        </trans-unit>
        <trans-unit id="de73eac0c305038f0437bc6a1f994a5a4379ed28" translate="yes" xml:space="preserve">
          <source>an</source>
          <target state="translated">an</target>
        </trans-unit>
        <trans-unit id="8f91a7d4c013d689792014cce41cfca93df8643f" translate="yes" xml:space="preserve">
          <source>an arrayref of CPAN::Distroprefs::Pref objects</source>
          <target state="translated">CPAN::Distroprefs::Pref オブジェクトの配列ref</target>
        </trans-unit>
        <trans-unit id="1fd4e0318cb46a3d9d16dba83e533928a4e2874e" translate="yes" xml:space="preserve">
          <source>an embedded newline, so it doesn't remove it. This pattern still removes the newline at the end of the string:</source>
          <target state="translated">には改行が埋め込まれているので、改行は削除されません。このパターンでは、文字列の最後にある改行は削除されます。</target>
        </trans-unit>
        <trans-unit id="eeb10a7bf507029eb324ad0529e062ede9e7fd42" translate="yes" xml:space="preserve">
          <source>an entire array or an entire hash (or to just about anything else). Names are one kind of reference that you're already familiar with. Each human being is a messy, inconvenient collection of cells. But to refer to a particular human, for instance the first computer programmer, it isn't necessary to describe each of their cells; all you need is the easy, convenient scalar string &quot;Ada Lovelace&quot;.</source>
          <target state="translated">配列全体、あるいはハッシュ全体 (あるいは他の何にでも)を参照することができます。名前は、あなたがすでによく知っている参照の一種です。それぞれの人間は、面倒で不便な細胞の集まりです。しかし、特定の人間を参照するためには、例えば最初のコンピュータプログラマーのように、それぞれの細胞を記述する必要はありません。</target>
        </trans-unit>
        <trans-unit id="419fb031bbb1d3bd852934c637cbdadfffbdbcd6" translate="yes" xml:space="preserve">
          <source>an entire array or an entire hash (or to just about anything else). Names are one kind of reference that you're already familiar with. Think of the President of the United States: a messy, inconvenient bag of blood and bones. But to talk about him, or to represent him in a computer program, all you need is the easy, convenient scalar string &quot;Barack Obama&quot;.</source>
          <target state="translated">配列全体、あるいはハッシュ全体 (あるいは他の何にでも)を参照することができます。名前は、あなたがすでによく知っている参照の一種です。アメリカ合衆国大統領のことを考えてみてください:血と骨が混ざった厄介で不便な袋です。しかし、彼について話したり、コンピュータプログラムで彼を表現したりするために必要なのは、簡単で便利なスカラー文字列「バラク・オバマ」だけです。</target>
        </trans-unit>
        <trans-unit id="2130df2147e633640bd9a0d05e6d376dee6ccd2f" translate="yes" xml:space="preserve">
          <source>an error has occurred, the return value will always be 0.</source>
          <target state="translated">エラーが発生した場合、戻り値は常に0になります。</target>
        </trans-unit>
        <trans-unit id="753f0741a207012aea84c4e049df342c160b9190" translate="yes" xml:space="preserve">
          <source>an error has occurred, the return value will be 1 and the value on the top of the stack will be</source>
          <target state="translated">エラーが発生した場合、戻り値は 1 になり、スタックの先頭にある値は</target>
        </trans-unit>
        <trans-unit id="409ef8643f1d521a89ca1a0c3155c4a711f5a647" translate="yes" xml:space="preserve">
          <source>an error to register the same object multiple times with varying sets of hashrefs. Any hashrefs that are not registered yet will be added, others ignored.</source>
          <target state="translated">同じオブジェクトをハッシュレットのセットを変えて複数回登録するとエラーになります。まだ登録されていないハッシュレットは追加され、他のハッシュレットは無視されます。</target>
        </trans-unit>
        <trans-unit id="527b667261f88298c0cb1af1ba8e29f1a44cc851" translate="yes" xml:space="preserve">
          <source>an integer in parentheses</source>
          <target state="translated">括弧内の整数</target>
        </trans-unit>
        <trans-unit id="13609837b5958aba1d97ee9714e0ffeb18803df0" translate="yes" xml:space="preserve">
          <source>an integer portion, an optional decimal point, and optionally one or more digits to the right of the decimal are all required. A trailing underscore is permitted and a leading zero is permitted. Just like the lax dotted-decimal version, quoting the values is required for alpha/development forms to be parsed correctly.</source>
          <target state="translated">整数部分、任意の小数点、および任意で小数点の右側に1桁以上の数字が必要です。最後にアンダースコアを付けることができ、先頭にゼロを付けることができます。緩いドット十進数版と同様に、アルファ/開発版のフォームが正しく解析されるためには、値を引用する必要があります。</target>
        </trans-unit>
        <trans-unit id="f7cb42641753796859e397b207b75ba5bcc045ca" translate="yes" xml:space="preserve">
          <source>an integer within [-9, +9]), this is called</source>
          <target state="translated">9,+9]内の整数)、これは</target>
        </trans-unit>
        <trans-unit id="84450a811d895404bf8139aa28f48f612498ab04" translate="yes" xml:space="preserve">
          <source>an operator mask</source>
          <target state="translated">演算子マスク</target>
        </trans-unit>
        <trans-unit id="a364687d873b24e877eb252d7c45fe192c9de7ea" translate="yes" xml:space="preserve">
          <source>an operator name (opname)</source>
          <target state="translated">オペレータ名</target>
        </trans-unit>
        <trans-unit id="a5faf8bc4ea23b7df9a36e53820f1db2afc993d4" translate="yes" xml:space="preserve">
          <source>an operator set (opset)</source>
          <target state="translated">演算子集合</target>
        </trans-unit>
        <trans-unit id="c622a7ddf5fadbf610de97df158c76726f57823e" translate="yes" xml:space="preserve">
          <source>an operator tag name (optag)</source>
          <target state="translated">演算子タグ名</target>
        </trans-unit>
        <trans-unit id="fddd836d8687ca62403d6ea09db51c3383501df4" translate="yes" xml:space="preserve">
          <source>an xV that is mortal, and it is possible for there to be more than one mortal reference to a single xV. For a reference to be mortal means that it is owned by the temps stack, one of perl's many internal stacks, which will destroy that reference &quot;a short time later&quot;. Usually the &quot;short time later&quot; is the end of the current Perl statement. However, it gets more complicated around dynamic scopes: there can be multiple sets of mortal references hanging around at the same time, with different death dates. Internally, the actual determinant for when mortal xV references are destroyed depends on two macros, SAVETMPS and FREETMPS. See &lt;a href=&quot;perlcall&quot;&gt;perlcall&lt;/a&gt; and &lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt; and &lt;a href=&quot;#Temporaries-Stack&quot;&gt;&quot;Temporaries Stack&quot;&lt;/a&gt; below for more details on these macros.</source>
          <target state="translated">致命的なxVであり、単一のxVに対して複数の致命的な参照が存在する可能性があります。参照が致命的であるということは、perlの多くの内部スタックの1つであるtempsスタックによって所有されていることを意味し、「しばらくして」その参照を破棄します。通常、「少し後」は現在のPerlステートメントの終わりです。ただし、動的スコープの場合はさらに複雑になります。死亡日が異なる複数の致命的な参照セットが同時にぶら下がっている可能性があります。内部的には、致命的なxV参照が破棄されるタイミングの実際の決定要因は、SAVETMPSとFREETMPSの2つのマクロに依存します。参照&lt;a href=&quot;perlcall&quot;&gt;perlcall&lt;/a&gt;と&lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt;と&lt;a href=&quot;#Temporaries-Stack&quot;&gt;「一時はスタック」&lt;/a&gt;これらのマクロの詳細については、以下の。</target>
        </trans-unit>
        <trans-unit id="ec55bdaac6cde3367ae41c2ffaeadd3eb38fb9ff" translate="yes" xml:space="preserve">
          <source>analyze_preprocessor_statements()</source>
          <target state="translated">analyze_preprocessor_statements()</target>
        </trans-unit>
        <trans-unit id="f06df609aed50661247cc6ec96c1599c193c3ec4" translate="yes" xml:space="preserve">
          <source>anchor</source>
          <target state="translated">anchor</target>
        </trans-unit>
        <trans-unit id="04f99c29e783f9cb4ae84f58faccd00a818b9492" translate="yes" xml:space="preserve">
          <source>anchor_items</source>
          <target state="translated">anchor_items</target>
        </trans-unit>
        <trans-unit id="68694b44e6f48917189ec5e4ceb1c0fef7ef80b9" translate="yes" xml:space="preserve">
          <source>anchored fixed string</source>
          <target state="translated">錨付き固定紐</target>
        </trans-unit>
        <trans-unit id="084b1fb8eb2e301557794160ff9be4c4cff280d4" translate="yes" xml:space="preserve">
          <source>anchored fixed strings</source>
          <target state="translated">錨付き固定弦</target>
        </trans-unit>
        <trans-unit id="43c00fd1688ea15081e7af4c5f2652c8c8653500" translate="yes" xml:space="preserve">
          <source>anchorify</source>
          <target state="translated">anchorify</target>
        </trans-unit>
        <trans-unit id="f3ef6e09da1f05d18d52776cc5fea65e3b316091" translate="yes" xml:space="preserve">
          <source>anchorname</source>
          <target state="translated">anchorname</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="41f7d9aafc306017d119acf70705c827d97696a7" translate="yes" xml:space="preserve">
          <source>and &lt;a href=&quot;encode&quot;&gt;Encode&lt;/a&gt;.)</source>
          <target state="translated">および&lt;a href=&quot;encode&quot;&gt;エンコードします&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="1e7b3b70ce0b7269aa85ddea66ae89e1b660b6b7" translate="yes" xml:space="preserve">
          <source>and &lt;a href=&quot;functions/select&quot;&gt;select&lt;/a&gt;, or &lt;a href=&quot;perlfaq5&quot;&gt;perlfaq5&lt;/a&gt;, &quot;How do I flush/unbuffer an output filehandle? Why must I do this?&quot;):</source>
          <target state="translated">そして、&lt;a href=&quot;functions/select&quot;&gt;選択し&lt;/a&gt;、または&lt;a href=&quot;perlfaq5&quot;&gt;perlfaq5&lt;/a&gt;）、「どうすれば、出力ファイルハンドルバッファー解除フラッシュ/なぜ私はこれを行う必要がありますか？」：</target>
        </trans-unit>
        <trans-unit id="6f764442014f3cf4eec9c4807c2193ee14ff3f81" translate="yes" xml:space="preserve">
          <source>and &lt;b&gt;must&lt;/b&gt; begin with an &quot;x&quot; or &quot;X&quot; and be followed by an underscore; i.e. they must match the pattern: &lt;code&gt;qr{\Ax_}i&lt;/code&gt;. If a custom key refers to a compound data structure, subkeys within it do not need an &quot;x_&quot; or &quot;X_&quot; prefix.</source>
          <target state="translated">そして、&lt;b&gt;しなければならない&lt;/b&gt;「X」または「X」で始まり、下線が続きます。つまり、パターンと一致する必要があります： &lt;code&gt;qr{\Ax_}i&lt;/code&gt; 。カスタムキーが複合データ構造を参照する場合、その中のサブキーには「x_」または「X_」プレフィックスは必要ありません。</target>
        </trans-unit>
        <trans-unit id="ff92ccc059fb8ede8f0b23bb015e63ae4731fcf9" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;$@&lt;/code&gt; is empty.</source>
          <target state="translated">そして、 &lt;code&gt;$@&lt;/code&gt; 空です。</target>
        </trans-unit>
        <trans-unit id="016f4b3a6b408b7434c9c8addd29fcfb251b75bc" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;$default&lt;/code&gt; is 0.</source>
          <target state="translated">そして &lt;code&gt;$default&lt;/code&gt; 0です。</target>
        </trans-unit>
        <trans-unit id="79e3a95c66eb0995a5b17cf160488513cd9c4836" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;$status&lt;/code&gt; will contain the</source>
          <target state="translated">そして &lt;code&gt;$status&lt;/code&gt; 含まれています</target>
        </trans-unit>
        <trans-unit id="fb55aba7e200d190a26516edaeb1e8c8f871d671" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;$status&lt;/code&gt; will hold the</source>
          <target state="translated">そして &lt;code&gt;$status&lt;/code&gt; 保持されます</target>
        </trans-unit>
        <trans-unit id="f7a05a7c74e5456a922f33cfd811202c94bfd7a6" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;$status&lt;/code&gt; will hold the a</source>
          <target state="translated">そして &lt;code&gt;$status&lt;/code&gt; Aを開催します</target>
        </trans-unit>
        <trans-unit id="faf11d208a41db985f49c9f628222cbd33a1d444" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;$status&lt;/code&gt; will hold the exact</source>
          <target state="translated">そして、 &lt;code&gt;$status&lt;/code&gt; 正確を開催します</target>
        </trans-unit>
        <trans-unit id="67edd0a2eb37c7ac979f5ca41cab24999c2c1c82" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;-&lt;/code&gt; shouldn't be the first character. If you want to be hypercorrect, stay case-insensitive and within the 8.3 naming convention (all the files and directories have to be unique within one directory if their names are lowercased and truncated to eight characters before the &lt;code&gt;.&lt;/code&gt;, if any, and to three characters after the &lt;code&gt;.&lt;/code&gt;, if any). (And do not use &lt;code&gt;.&lt;/code&gt;s in directory names.)</source>
          <target state="translated">および &lt;code&gt;-&lt;/code&gt; 最初の文字であってはなりません。過剰修正が必要な場合は、大文字と小文字を区別せず、8.3の命名規則に従ってください（名前が小文字で、 &lt;code&gt;.&lt;/code&gt; 前に8文字、存在する場合は3文字に切り捨てられる場合、すべてのファイルとディレクトリは1つのディレクトリ内で一意である必要があります） &lt;code&gt;.&lt;/code&gt; 後の文字（ある場合）。（そして、使用しないでください &lt;code&gt;.&lt;/code&gt; sのディレクトリ名に。）</target>
        </trans-unit>
        <trans-unit id="311c8c621fca6c1133276b3546a71e41872cd5b3" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; myint;&lt;/code&gt; is</source>
          <target state="translated">そして &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; myint;&lt;/code&gt; です</target>
        </trans-unit>
        <trans-unit id="fe56ad1fd6916544bd67d364c47ef22b8722997c" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;Archive::Tar&lt;/code&gt; will call &lt;code&gt;Cwd::cwd()&lt;/code&gt; internally again.</source>
          <target state="translated">そして &lt;code&gt;Archive::Tar&lt;/code&gt; は再び内部的に &lt;code&gt;Cwd::cwd()&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="aeba6e0c46a5c93c432546b879e4bda2afa3e55c" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;Perl_dump_all&lt;/code&gt; , which dumps all the subroutines in the stash and the op tree of the main root.</source>
          <target state="translated">また、 &lt;code&gt;Perl_dump_all&lt;/code&gt; は、スタッシュ内のすべてのサブルーチンとメインルートのopツリーをダンプします。</target>
        </trans-unit>
        <trans-unit id="a1a5e775f0bf7436caccb3da6c3ed1da6baee3c8" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;Perl_dump_all&lt;/code&gt;, which dumps all the subroutines in the stash and the op tree of the main root.</source>
          <target state="translated">そして &lt;code&gt;Perl_dump_all&lt;/code&gt; スタッシュとメインルートのOPツリー内のすべてのサブルーチンをダンプします。</target>
        </trans-unit>
        <trans-unit id="24b1d9fb54b19f2a4bf7a0a575b93e2448d41ac7" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;asynch_read_if&lt;/code&gt; could look like this</source>
          <target state="translated">そして &lt;code&gt;asynch_read_if&lt;/code&gt; はこのようになります</target>
        </trans-unit>
        <trans-unit id="2c2517f77f4e9b99eb2ef447fe23c77258db12ca" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;no myint;&lt;/code&gt; is</source>
          <target state="translated">そして &lt;code&gt;no myint;&lt;/code&gt; ありません。です</target>
        </trans-unit>
        <trans-unit id="52260a6c12657e7cd53ed4aeda42476a80ffde69" translate="yes" xml:space="preserve">
          <source>and C</source>
          <target state="translated">とC</target>
        </trans-unit>
        <trans-unit id="ce624d2a956a4c4fdd87bb0d4c8b8565acc10eb6" translate="yes" xml:space="preserve">
          <source>and CRT DLL. I know no advantages of this executable over &lt;code&gt;perl.exe&lt;/code&gt; , but it cannot fork() at all. Well, one advantage is that the build process is not so convoluted as with &lt;code&gt;perl.exe&lt;/code&gt; .</source>
          <target state="translated">およびCRT DLL。この実行可能ファイルが &lt;code&gt;perl.exe&lt;/code&gt; より優れていることはわかりませんが、fork（）はまったくできません。1つの利点は、ビルドプロセスが &lt;code&gt;perl.exe&lt;/code&gt; ほど複雑ではないことです。</target>
        </trans-unit>
        <trans-unit id="5e6a0970e8d705e9ad8a17d69bd4c9595d8e81ee" translate="yes" xml:space="preserve">
          <source>and CRT DLL. I know no advantages of this executable over &lt;code&gt;perl.exe&lt;/code&gt;, but it cannot fork() at all. Well, one advantage is that the build process is not so convoluted as with &lt;code&gt;perl.exe&lt;/code&gt;.</source>
          <target state="translated">およびCRTDLL。この実行可能ファイルが &lt;code&gt;perl.exe&lt;/code&gt; よりも優れていることはわかりませんが、fork（）はまったくできません。まあ、1つの利点は、ビルドプロセスが &lt;code&gt;perl.exe&lt;/code&gt; のように複雑ではないことです。</target>
        </trans-unit>
        <trans-unit id="d2f78e98c292b6edbfc33a84d6b47bc8f258f6d2" translate="yes" xml:space="preserve">
          <source>and Configure will give up.</source>
          <target state="translated">とConfigureは諦めます。</target>
        </trans-unit>
        <trans-unit id="e6601ba493fd802e8c69e73fa3178575540d2f6c" translate="yes" xml:space="preserve">
          <source>and Mark Adler</source>
          <target state="translated">とマーク・アドラー</target>
        </trans-unit>
        <trans-unit id="86d575fb0f5c883349b5a7f286abb3edbe3207c7" translate="yes" xml:space="preserve">
          <source>and Perl knows that it has to invoke the PerlIOAPR_open() method implemented by the APR layer.</source>
          <target state="translated">そして、Perl は、APR 層によって実装された PerlIOAPR_open()メソッドを呼び出さなければならないことを知っています。</target>
        </trans-unit>
        <trans-unit id="e32c9b9186aa8e9288a2accdf939a5bb0683c0cb" translate="yes" xml:space="preserve">
          <source>and UNIX, &lt;code&gt;$gzerrno&lt;/code&gt; should only be used to check for the presence of</source>
          <target state="translated">UNIXの場合、 &lt;code&gt;$gzerrno&lt;/code&gt; は存在の確認にのみ使用してください</target>
        </trans-unit>
        <trans-unit id="dce6c6da0aef880545eedbf05f807b0628611184" translate="yes" xml:space="preserve">
          <source>and UTF-16 is the name of the encoding that embraces them.</source>
          <target state="translated">とUTF-16はそれらを包含するエンコーディングの名前です。</target>
        </trans-unit>
        <trans-unit id="c3a319360d3cdf3729627355f1ee1dd75a51847e" translate="yes" xml:space="preserve">
          <source>and ad hoc &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt; $test ? &quot;ok 42\n&quot; : &quot;not ok 42\n&quot;&lt;/code&gt; . The decision of which to use depends on what part of the test suite you're working on. This is a measure to prevent a high-level failure (such as Config.pm breaking) from causing basic functionality tests to fail.</source>
          <target state="translated">そして臨時の &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt; $test ? &quot;ok 42\n&quot; : &quot;not ok 42\n&quot;&lt;/code&gt; 。どちらを使用するかは、テストスイートのどの部分に取り組んでいるかによって異なります。これは、高レベルの障害（Config.pmの破損など）によって基本的な機能テストが失敗するのを防ぐための対策です。</target>
        </trans-unit>
        <trans-unit id="4513daae69f72bebaa2d26a20674723fcb0e7c30" translate="yes" xml:space="preserve">
          <source>and ad hoc &lt;code&gt;print $test ? &quot;ok 42\n&quot; : &quot;not ok 42\n&quot;&lt;/code&gt;. The decision of which to use depends on what part of the test suite you're working on. This is a measure to prevent a high-level failure (such as Config.pm breaking) from causing basic functionality tests to fail.</source>
          <target state="translated">アドホック &lt;code&gt;print $test ? &quot;ok 42\n&quot; : &quot;not ok 42\n&quot;&lt;/code&gt; 。どちらを使用するかの決定は、作業しているテストスイートのどの部分に依存します。これは、高レベルの障害（Config.pmの破損など）によって基本的な機能テストが失敗するのを防ぐための手段です。</target>
        </trans-unit>
        <trans-unit id="56e3b5ec2e00e190723cc405ec9046ffef199e26" translate="yes" xml:space="preserve">
          <source>and after that any tests inside your module will captured.</source>
          <target state="translated">で、その後にモジュール内のテストがキャプチャされます。</target>
        </trans-unit>
        <trans-unit id="1759eff6deec8639c809421ad0c28a76e0ef5cae" translate="yes" xml:space="preserve">
          <source>and also $Config::Config{'scriptdir'}</source>
          <target state="translated">また、$Config::Config{'scriptdir'}も同様です。</target>
        </trans-unit>
        <trans-unit id="092a598de52599e5ea26b086e728adfcb8a8f87b" translate="yes" xml:space="preserve">
          <source>and also how strings are parsed by &lt;code&gt;POSIX::strtod()&lt;/code&gt; as numbers:</source>
          <target state="translated">また、文字列が &lt;code&gt;POSIX::strtod()&lt;/code&gt; によって数値として解析される方法：</target>
        </trans-unit>
        <trans-unit id="53d3cfa28bbb90ed936aa07f73ce71dbef9ab3f7" translate="yes" xml:space="preserve">
          <source>and are now removed.</source>
          <target state="translated">と削除されました。</target>
        </trans-unit>
        <trans-unit id="d7e49eb1b589da099384cdd5bcb2b002b2679a4a" translate="yes" xml:space="preserve">
          <source>and as</source>
          <target state="translated">として</target>
        </trans-unit>
        <trans-unit id="f930cc83716047f99549b196c0f6ea5f5c50196e" translate="yes" xml:space="preserve">
          <source>and auxiliary ones</source>
          <target state="translated">と補助的なもの</target>
        </trans-unit>
        <trans-unit id="0e8dd9b894bf299a78c91001723d0325159a6a91" translate="yes" xml:space="preserve">
          <source>and basic block profiling with gcc, see the latest GNU CC manual. As of gcc 4.8, this is at &lt;a href=&quot;http://gcc.gnu.org/onlinedocs/gcc/Gcov-Intro.html#Gcov-Intro&quot;&gt;http://gcc.gnu.org/onlinedocs/gcc/Gcov-Intro.html#Gcov-Intro&lt;/a&gt;</source>
          <target state="translated">gccを使用した基本的なブロックプロファイリングについては、最新のGNU CCマニュアルを参照してください。gcc 4.8以降、これは&lt;a href=&quot;http://gcc.gnu.org/onlinedocs/gcc/Gcov-Intro.html#Gcov-Intro&quot;&gt;http://gcc.gnu.org/onlinedocs/gcc/Gcov-Intro.html#Gcov-Introにあります。&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="683408934ca5f7f54d4b092ab9879f0a20b670ff" translate="yes" xml:space="preserve">
          <source>and be assured that both &lt;code&gt;$v1&lt;/code&gt; and &lt;code&gt;$v2&lt;/code&gt; will be completely equivalent, down to the same internal representation as well as stringification.</source>
          <target state="translated">また、 &lt;code&gt;$v1&lt;/code&gt; と &lt;code&gt;$v2&lt;/code&gt; 両方が完全に同等であり、同じ内部表現と文字列化に至るまで保証されます。</target>
        </trans-unit>
        <trans-unit id="67ac2d9e2193d40fc9c92b85950de3190240ebb3" translate="yes" xml:space="preserve">
          <source>and be sure to also set the environment variable _C89_CCMODE=1 (exporting _C89_CCMODE=1 is also a good idea for users of GNU make).</source>
          <target state="translated">また、環境変数_C89_CCMODE=1も必ず設定するようにしてください(GNU makeのユーザーにとっては、_C89_CCMODE=1をエクスポートするのも良いアイデアです)。</target>
        </trans-unit>
        <trans-unit id="cce2b5ee15547d8411b108ac01a1af3d3a13be3a" translate="yes" xml:space="preserve">
          <source>and belong to the user running the program:</source>
          <target state="translated">であり、プログラムを実行しているユーザーに属しています。</target>
        </trans-unit>
        <trans-unit id="68c1df893d3dfe1344316c80822ce4982fc34977" translate="yes" xml:space="preserve">
          <source>and by default output is displayed inline.</source>
          <target state="translated">で、デフォルトでは出力がインラインで表示されます。</target>
        </trans-unit>
        <trans-unit id="9d972577906aa2c316e9c360f92a8897dc203b61" translate="yes" xml:space="preserve">
          <source>and by definition, the solution is noted</source>
          <target state="translated">と定義されており、解は</target>
        </trans-unit>
        <trans-unit id="31788a27790e7797ed6a059ba1faefdb6a39e6a9" translate="yes" xml:space="preserve">
          <source>and call</source>
          <target state="translated">と呼ぶ</target>
        </trans-unit>
        <trans-unit id="2b74bf70fe4b516f104f35b9ee09019d1d9b9441" translate="yes" xml:space="preserve">
          <source>and call it with &lt;code&gt;perl dangerous.pl 'rm -rfv *|'&lt;/code&gt; , it actually opens a pipe, executes the &lt;code&gt;rm&lt;/code&gt; command and reads &lt;code&gt;rm&lt;/code&gt; 's output from that pipe. If you want all items in &lt;code&gt;@ARGV&lt;/code&gt; to be interpreted as file names, you can use the module &lt;code&gt;ARGV::readonly&lt;/code&gt; from CPAN, or use the double bracket:</source>
          <target state="translated">そして、 &lt;code&gt;perl dangerous.pl 'rm -rfv *|'&lt;/code&gt; それを呼び出します 、実際にパイプを開き、 &lt;code&gt;rm&lt;/code&gt; コマンドを実行して、そのパイプから &lt;code&gt;rm&lt;/code&gt; の出力を読み取ります。 &lt;code&gt;@ARGV&lt;/code&gt; 内のすべてのアイテムをファイル名として解釈する場合は、CPANからモジュール &lt;code&gt;ARGV::readonly&lt;/code&gt; を使用するか、二重括弧を使用できます。</target>
        </trans-unit>
        <trans-unit id="ed8e1672279677e7c443fa4e35e881cd08bac65f" translate="yes" xml:space="preserve">
          <source>and call it with &lt;code&gt;perl dangerous.pl 'rm -rfv *|'&lt;/code&gt;, it actually opens a pipe, executes the &lt;code&gt;rm&lt;/code&gt; command and reads &lt;code&gt;rm&lt;/code&gt;'s output from that pipe. If you want all items in &lt;code&gt;@ARGV&lt;/code&gt; to be interpreted as file names, you can use the module &lt;code&gt;ARGV::readonly&lt;/code&gt; from CPAN, or use the double bracket:</source>
          <target state="translated">そしてそれを &lt;code&gt;perl dangerous.pl 'rm -rfv *|'&lt;/code&gt; 呼び出します 、実際にパイプを開き、 &lt;code&gt;rm&lt;/code&gt; コマンドを実行して、そのパイプから &lt;code&gt;rm&lt;/code&gt; の出力を読み取ります。 &lt;code&gt;@ARGV&lt;/code&gt; 内のすべての項目をファイル名として解釈する場合は、CPANのモジュール &lt;code&gt;ARGV::readonly&lt;/code&gt; を使用するか、二重括弧を使用します。</target>
        </trans-unit>
        <trans-unit id="cdadfa4e29a3387e757303b12e15c9ac8ce26389" translate="yes" xml:space="preserve">
          <source>and calling &lt;code&gt;Perl_mro_register&lt;/code&gt; :</source>
          <target state="translated">そして &lt;code&gt;Perl_mro_register&lt;/code&gt; を呼び出します：</target>
        </trans-unit>
        <trans-unit id="97d83cc471050475a0b50af49687e52d38b0d68f" translate="yes" xml:space="preserve">
          <source>and calling &lt;code&gt;Perl_mro_register&lt;/code&gt;:</source>
          <target state="translated">そして &lt;code&gt;Perl_mro_register&lt;/code&gt; を呼び出す：</target>
        </trans-unit>
        <trans-unit id="2dd76bc4189d4946771f4e716aa51df3f1240631" translate="yes" xml:space="preserve">
          <source>and choose your favorite parameters. After a few downloads running the &lt;code&gt;hosts&lt;/code&gt; command will probably assist you in choosing the best mirror sites.</source>
          <target state="translated">お好みのパラメータを選択してください。数回のダウンロードの後、 &lt;code&gt;hosts&lt;/code&gt; コマンドを実行すると、おそらく最良のミラーサイトを選択するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="a8c3f91d52eab0005bf1821357c56257522b3d7e" translate="yes" xml:space="preserve">
          <source>and concatenate it to</source>
          <target state="translated">に連結して</target>
        </trans-unit>
        <trans-unit id="c051c7458ffbb815effdc3cf5a7ec6686e7a7784" translate="yes" xml:space="preserve">
          <source>and continue working on other things while you wait a day or two, keeping an eye on the results reported for your smoke-me branch at &lt;a href=&quot;http://perl.develop-help.com/?b=smoke-me/tonyc/win32state&quot;&gt;http://perl.develop-help.com/?b=smoke-me/tonyc/win32state&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://perl.develop-help.com/?b=smoke-me/tonyc/win32state&quot;&gt;http://perl.develop-help.com/?b=smoke-me/tonyc/win32state&lt;/a&gt;でsmoke-meブランチについて報告された結果に注目しながら、1日か2日待つ間、他の作業を続けます。。</target>
        </trans-unit>
        <trans-unit id="2ff89dcb837ced149fb6b5224ee21778d994fc8a" translate="yes" xml:space="preserve">
          <source>and continuing to the first nul. These octets are interpreted as either UTF-8 or Latin-1, according to whether the &lt;code&gt;LEX_STUFF_UTF8&lt;/code&gt; flag is set in</source>
          <target state="translated">そして最初のヌルに続きます。これらのオクテットは、 &lt;code&gt;LEX_STUFF_UTF8&lt;/code&gt; フラグが設定されているかどうかに応じて、UTF-8またはLatin-1として解釈されます。</target>
        </trans-unit>
        <trans-unit id="3b4b74100dbb60dc7d23a3f17b465ea647875121" translate="yes" xml:space="preserve">
          <source>and correct anything wrong you find there. I do not expect it is needed anywhere.</source>
          <target state="translated">そしてそこで間違っていることを見つけたら修正してください。どこでも必要とされるとは思っていません</target>
        </trans-unit>
        <trans-unit id="bb8265b77d7b17930f211c047d509c9bcd48c5f5" translate="yes" xml:space="preserve">
          <source>and decide that's quite enough for you?</source>
          <target state="translated">それで十分だと思うか?</target>
        </trans-unit>
        <trans-unit id="c0554b9855c1b4a6c0834e79b079617190a40bcb" translate="yes" xml:space="preserve">
          <source>and dies. Therefore the SunOS 4.1 hints file explicitly sets the ld to be</source>
          <target state="translated">と死んでしまいます。そのため、SunOS 4.1 のヒントファイルでは、ld を明示的に</target>
        </trans-unit>
        <trans-unit id="c349b5535bebf3c0ad16ae9e94907ffd5cecb983" translate="yes" xml:space="preserve">
          <source>and divines whether they passed or failed based on their output to STDOUT (details above). It prints out each individual test which failed along with a summary report and a how long it all took.</source>
          <target state="translated">を使用して、STDOUT への出力に基づいて合否を判定します (詳細は上記)。これは、失敗した個々のテストをサマリーレポートと所要時間とともにプリントアウトします。</target>
        </trans-unit>
        <trans-unit id="a5fd741bd9f2a58aedde00aa2b92b647f2b4c3d7" translate="yes" xml:space="preserve">
          <source>and doing a bunch of messy heuristics on the resulting</source>
          <target state="translated">で、結果として得られた</target>
        </trans-unit>
        <trans-unit id="79a24dfc42595a13dbd8f77aa55520c5f2654ac8" translate="yes" xml:space="preserve">
          <source>and earlier, the default setting is based on whether or not $prefix contains the string &lt;code&gt;perl&lt;/code&gt; .</source>
          <target state="translated">以前のバージョンでは、デフォルト設定は$ prefixに文字列 &lt;code&gt;perl&lt;/code&gt; が含まれているかどうかに基づいています。</target>
        </trans-unit>
        <trans-unit id="03998ea5d1393f812d9c7c958e57b9267ac98cf0" translate="yes" xml:space="preserve">
          <source>and earlier, the default setting is based on whether or not $prefix contains the string &lt;code&gt;perl&lt;/code&gt;.</source>
          <target state="translated">以前は、デフォルト設定は$ prefixに文字列 &lt;code&gt;perl&lt;/code&gt; が含まれているかどうかに基づいています。</target>
        </trans-unit>
        <trans-unit id="ca01c68b157f542551615a222bf4d40f1c92ab92" translate="yes" xml:space="preserve">
          <source>and ending at</source>
          <target state="translated">で終わり</target>
        </trans-unit>
        <trans-unit id="edc511aaa0ea9a61210a5a9707c8841bf5cc309d" translate="yes" xml:space="preserve">
          <source>and even</source>
          <target state="translated">ましてや</target>
        </trans-unit>
        <trans-unit id="883426c92d8b38847917d43ce3dd00b6254d2bed" translate="yes" xml:space="preserve">
          <source>and expect C to be B, because the bearing constantly changes when going from A to B (except in some special case like the meridians or the circles of latitudes) and in great_circle_destination() one gives a &lt;b&gt;constant&lt;/b&gt; bearing to follow.</source>
          <target state="translated">そして、CがBであることを期待します。なぜなら、AからBに移動するときは常に方位が変化し（子午線や緯度の円などの特別な場合を除く）、great_circle_destination（）で&lt;b&gt;一定の&lt;/b&gt;方位が続くためです。</target>
        </trans-unit>
        <trans-unit id="3ee040c85734bc842f7986baed3ad3d4c7a277c5" translate="yes" xml:space="preserve">
          <source>and extension authors. If your extension is dynamically loaded, DynaLoader creates</source>
          <target state="translated">と拡張機能の作者を指定します。拡張機能が動的にロードされている場合、DynaLoaderは</target>
        </trans-unit>
        <trans-unit id="d176fa9bd5235077e8d5cc1dc829719336ead81b" translate="yes" xml:space="preserve">
          <source>and fields. So far, the functions of &lt;code&gt;Hash::Util::FieldHash&lt;/code&gt; are unaware of any classes, which I consider a feature. Therefore &lt;code&gt;Hash::Util::FieldHash&lt;/code&gt; doesn't address the serialization problems.</source>
          <target state="translated">とフィールド。これまでのところ、 &lt;code&gt;Hash::Util::FieldHash&lt;/code&gt; の関数はクラスを認識していません。したがって、 &lt;code&gt;Hash::Util::FieldHash&lt;/code&gt; はシリアル化の問題に対処しません。</target>
        </trans-unit>
        <trans-unit id="6420fc98ccacfbcabdd1358ce52dbb2f18c3b757" translate="yes" xml:space="preserve">
          <source>and for &lt;code&gt;_&lt;/code&gt; to explicitly populate the object using the unexported and undocumented populate() function with CORE::stat():</source>
          <target state="translated">また、 &lt;code&gt;_&lt;/code&gt; は、CORE :: stat（）を使用して、エクスポートおよびドキュメント化されていないPopulate（）関数を使用してオブジェクトを明示的に設定します。</target>
        </trans-unit>
        <trans-unit id="9ecd2684e5d35794eb09b10452dc598bb0f3ca39" translate="yes" xml:space="preserve">
          <source>and for writing:</source>
          <target state="translated">と書くために。</target>
        </trans-unit>
        <trans-unit id="c07a028d906529efcbd2ee19e8498ca6b129b522" translate="yes" xml:space="preserve">
          <source>and from Latin-1 code points to EBCDIC code points</source>
          <target state="translated">とLatin-1のコードポイントからEBCDICのコードポイントへ</target>
        </trans-unit>
        <trans-unit id="eac61126c0f717dca5fc46f13a224a50728951e2" translate="yes" xml:space="preserve">
          <source>and get &quot;pi is 3.141592&quot;.</source>
          <target state="translated">と表示され、「πは3.141592」と表示されます。</target>
        </trans-unit>
        <trans-unit id="3f19bd785ca0e403ace13135f2e7d2f6fda0fce7" translate="yes" xml:space="preserve">
          <source>and get &lt;code&gt;&quot;mu&lt;/code&gt; &amp;szlig;&lt;code&gt;&quot;&lt;/code&gt; in &lt;code&gt;$match&lt;/code&gt; , since &lt;code&gt;&quot;mu&lt;/code&gt; &amp;szlig;&lt;code&gt;&quot;&lt;/code&gt; is primary equal to &lt;code&gt;&quot;M&lt;/code&gt; &amp;uuml;&lt;code&gt;SS&quot;&lt;/code&gt; .</source>
          <target state="translated">そして、get &lt;code&gt;&quot;mu&lt;/code&gt; &amp;szlig; &lt;code&gt;&quot;&lt;/code&gt; で &lt;code&gt;$match&lt;/code&gt; するので、 &lt;code&gt;&quot;mu&lt;/code&gt; &amp;szlig; &lt;code&gt;&quot;&lt;/code&gt; に等しい主である &lt;code&gt;&quot;M&lt;/code&gt; &amp;uuml; &lt;code&gt;SS&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="30e2ab067dfeada9aac999f0ab03b60920ee2de6" translate="yes" xml:space="preserve">
          <source>and get &lt;code&gt;&quot;mu&lt;/code&gt;&amp;szlig;&lt;code&gt;&quot;&lt;/code&gt; in &lt;code&gt;$match&lt;/code&gt;, since &lt;code&gt;&quot;mu&lt;/code&gt;&amp;szlig;&lt;code&gt;&quot;&lt;/code&gt; is primary equal to &lt;code&gt;&quot;M&lt;/code&gt;&amp;uuml;&lt;code&gt;SS&quot;&lt;/code&gt;.</source>
          <target state="translated">そして、get &lt;code&gt;&quot;mu&lt;/code&gt; &amp;szlig; &lt;code&gt;&quot;&lt;/code&gt; で &lt;code&gt;$match&lt;/code&gt; するので、 &lt;code&gt;&quot;mu&lt;/code&gt; &amp;szlig; &lt;code&gt;&quot;&lt;/code&gt; に等しい主である &lt;code&gt;&quot;M&lt;/code&gt; &amp;uuml; &lt;code&gt;SS&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="17094f04dd71da09c7e552c076f1634e82049f36" translate="yes" xml:space="preserve">
          <source>and have it work portably.</source>
          <target state="translated">とポータビリティで動作させることができます。</target>
        </trans-unit>
        <trans-unit id="a5a8ee21b9af7088e79e9b68f8de88da612fb525" translate="yes" xml:space="preserve">
          <source>and have some pending arguments such as header-file names. This is ok:</source>
          <target state="translated">で、ヘッダファイル名のようないくつかの保留中の引数を持っています。これはOKです。</target>
        </trans-unit>
        <trans-unit id="f55ef6259b72177a1f2a8e8d3b0d9adc8edfb742" translate="yes" xml:space="preserve">
          <source>and have this magically inflated to the first form. Among the advantages of such representation, that would lead to smaller files, less prone to mistyping or mispasting, and handy to someone translating it which can simply copy the main lexicon and enter the translation instead of having to remove the value first.</source>
          <target state="translated">で、これを魔法のように最初の形式に膨らませます。このような表現の利点の中で、それはより小さいファイルにつながるだろう、ミスマッチやミスパストになりやすい、と単にメインの辞書をコピーして、最初に値を削除することを持っている代わりに翻訳を入力することができますそれを翻訳する人に便利です。</target>
        </trans-unit>
        <trans-unit id="d2a6339505fec77b2c331da5c4ce78372f108fa3" translate="yes" xml:space="preserve">
          <source>and hence print:</source>
          <target state="translated">そして、それゆえに印刷されます。</target>
        </trans-unit>
        <trans-unit id="43fb62ee614e6b7e422fd695927ade0aa52a2d8a" translate="yes" xml:space="preserve">
          <source>and here is a C function to call it</source>
          <target state="translated">これを呼び出すためのC言語の関数は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="5091999bd97a90f1245944c2fb5cff579789d3a7" translate="yes" xml:space="preserve">
          <source>and here is a C function to call it.</source>
          <target state="translated">で、それを呼び出すためのC言語の関数がここにあります。</target>
        </trans-unit>
        <trans-unit id="9b815eb7a25ba6650e8aed21b42d3225c5665f92" translate="yes" xml:space="preserve">
          <source>and if a method-name was given, it is invoked as:</source>
          <target state="translated">として呼び出されます。</target>
        </trans-unit>
        <trans-unit id="42ffaa9f2dc8d858771e32e04987db06d831ce8f" translate="yes" xml:space="preserve">
          <source>and if you are not happy with either the description or the patch itself you can fix it up by editing the files once more and then issue:</source>
          <target state="translated">そして、もしあなたが説明やパッチ自体に満足していないのであれば、もう一度ファイルを編集してから発行することで修正することができます。</target>
        </trans-unit>
        <trans-unit id="cc0088cffc94d4cfc5e772584e99d2d2392934ec" translate="yes" xml:space="preserve">
          <source>and if you want to compress each file one at a time, this will do the trick</source>
          <target state="translated">で、各ファイルを一度に一つずつ圧縮したい場合は、このようにします。</target>
        </trans-unit>
        <trans-unit id="99ebfac46815750e967685ef0c045d72e263a9e9" translate="yes" xml:space="preserve">
          <source>and in</source>
          <target state="translated">で</target>
        </trans-unit>
        <trans-unit id="44657e3f016b01b57158c00249f2d346bead43ae" translate="yes" xml:space="preserve">
          <source>and in each case, $v1 and $v2 will be identical. NOTE: if you create a new object using an existing object like this:</source>
          <target state="translated">となり、どちらの場合も $v1 と $v2 は同じになります。注意:このように既存のオブジェクトを使用して新しいオブジェクトを作成する場合。</target>
        </trans-unit>
        <trans-unit id="633f5443d1716f6d61c0fc8d8b08ec73cf1d7a57" translate="yes" xml:space="preserve">
          <source>and in:</source>
          <target state="translated">とインしています。</target>
        </trans-unit>
        <trans-unit id="1d0130f8a3921bc892b37851ce6cc11bad75e4c1" translate="yes" xml:space="preserve">
          <source>and is</source>
          <target state="translated">であり</target>
        </trans-unit>
        <trans-unit id="ebbea3f118453a1b7e7d79408e6db651a9e30122" translate="yes" xml:space="preserve">
          <source>and is invoked when you say</source>
          <target state="translated">と言うときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="7ecd6605c858a1a66d6b614d96b36273cffaf756" translate="yes" xml:space="preserve">
          <source>and is now removed.</source>
          <target state="translated">と削除されました。</target>
        </trans-unit>
        <trans-unit id="73402b7701fac32d16b3ff7c74498b1589d19a23" translate="yes" xml:space="preserve">
          <source>and is sought only in the current directory.</source>
          <target state="translated">と表示され、現在のディレクトリにのみ求められます。</target>
        </trans-unit>
        <trans-unit id="15dd7cf5f3a3a46ccd4b8609412b5d9ec3d381ec" translate="yes" xml:space="preserve">
          <source>and is typically used to test whether a particular extension is available.</source>
          <target state="translated">で、通常は特定の拡張機能が利用可能かどうかをテストするために使用されます。</target>
        </trans-unit>
        <trans-unit id="040dda9958c7c671c9590ef80fa78defd13909d5" translate="yes" xml:space="preserve">
          <source>and is used like this:</source>
          <target state="translated">とこのように使われています。</target>
        </trans-unit>
        <trans-unit id="7a0762f239de965ed45f319d1c0a1eb571367472" translate="yes" xml:space="preserve">
          <source>and it always croaks on error.</source>
          <target state="translated">そして、それはいつもエラーで鳴きます。</target>
        </trans-unit>
        <trans-unit id="37328fc9c48882c8dd3a9ee9675314c5a2fe5451" translate="yes" xml:space="preserve">
          <source>and it is called thusly</source>
          <target state="translated">こう呼ばれています。</target>
        </trans-unit>
        <trans-unit id="d3bd26589317e43dea5248f9d39772bc7052986f" translate="yes" xml:space="preserve">
          <source>and it will again work (i.e. give the error message as above), even with releases of Perl which do not normally support v-strings (see &lt;a href=&quot;#What-about-v-strings%3F&quot;&gt;&quot;What about v-strings?&quot;&lt;/a&gt; above). This has to do with that fact that &lt;code&gt;use&lt;/code&gt; only checks to see if the second term</source>
          <target state="translated">また、通常はv文字列をサポートしないPerlのリリースでも機能します（つまり、上記のようなエラーメッセージが表示されます）（上記の&lt;a href=&quot;#What-about-v-strings%3F&quot;&gt;「v文字列はどうですか？」を&lt;/a&gt;参照）。これは、第2項がチェックのみを &lt;code&gt;use&lt;/code&gt; しているかどうかを確認するという事実と関係があります。</target>
        </trans-unit>
        <trans-unit id="30dae0c952d8a4bc4211df4fa02a32b80f898a03" translate="yes" xml:space="preserve">
          <source>and it will print:</source>
          <target state="translated">と表示され、印刷されます。</target>
        </trans-unit>
        <trans-unit id="92f48e8870b365babea517ca9b817b451b407aad" translate="yes" xml:space="preserve">
          <source>and it would import the &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; override. But if they said</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; オーバーライドをインポートします。しかし彼らが言ったら</target>
        </trans-unit>
        <trans-unit id="cd020e2be0d62eafdf2de8f7e295b52a42346c0a" translate="yes" xml:space="preserve">
          <source>and it would import the &lt;code&gt;open&lt;/code&gt; override. But if they said</source>
          <target state="translated">&lt;code&gt;open&lt;/code&gt; オーバーライドをインポートします。しかし、彼らが言った場合</target>
        </trans-unit>
        <trans-unit id="c15e27e77f8641be998c0928e2456baabe13d2d3" translate="yes" xml:space="preserve">
          <source>and look for 'undef' to find the unsupported APIs (or from Perl use Config).</source>
          <target state="translated">と'undef'を探して、サポートされていないAPIを見つけてください(またはPerlからConfigを使用してください)。</target>
        </trans-unit>
        <trans-unit id="d0408bb76ba414190a2d1aabc2693a0c0369eb0d" translate="yes" xml:space="preserve">
          <source>and managing the</source>
          <target state="translated">を管理し</target>
        </trans-unit>
        <trans-unit id="6d7251c76d8c565a4c8c07c1d963ea078e2097d6" translate="yes" xml:space="preserve">
          <source>and never returns</source>
          <target state="translated">一度も帰ってこない</target>
        </trans-unit>
        <trans-unit id="ffbc147df069ca6800db6b624cd3c1abcb34c6b3" translate="yes" xml:space="preserve">
          <source>and no matter which sort of shell it's called from, the Perl program will read from the file</source>
          <target state="translated">で、どのような種類のシェルから呼び出されたとしても、Perl プログラムはファイルから</target>
        </trans-unit>
        <trans-unit id="2f3522d8409fab2c8bd7a9a935e5958b1545b923" translate="yes" xml:space="preserve">
          <source>and not</source>
          <target state="translated">ではなく</target>
        </trans-unit>
        <trans-unit id="aece363ea57b99203cb8486606d46afddab39c93" translate="yes" xml:space="preserve">
          <source>and not worry about whether the subscripts are reserved words. In the rare event that you do wish to do something like</source>
          <target state="translated">と、添え字が予約語かどうかを気にする必要はありません。のようなことをしたい場合がまれにあります。</target>
        </trans-unit>
        <trans-unit id="90867a465b6b8e0350b0a553fb9bdc04f2f044ec" translate="yes" xml:space="preserve">
          <source>and notify &amp;lt;modules@perl.org&amp;gt;.</source>
          <target state="translated">&amp;lt;modules@perl.org&amp;gt;に通知してください。</target>
        </trans-unit>
        <trans-unit id="8af83c9aa94610b6d13646bdcbc7b3b7bc5fb5e5" translate="yes" xml:space="preserve">
          <source>and notify &amp;lt;modules@perl.org&amp;gt;. This will allow anyone to install your module using the &lt;code&gt;cpan&lt;/code&gt; tool distributed with Perl.</source>
          <target state="translated">&amp;lt;modules@perl.org&amp;gt;に通知します。これにより、Perlで配布されている &lt;code&gt;cpan&lt;/code&gt; ツールを使用して誰でもモジュールをインストールできるようになります。</target>
        </trans-unit>
        <trans-unit id="4fe6790d00afd2e85336f040031f25d3b71777a0" translate="yes" xml:space="preserve">
          <source>and omit the second call to &lt;code&gt;A::foo&lt;/code&gt; (since it would not be distinct from the first call to &lt;code&gt;A::foo&lt;/code&gt; ).</source>
          <target state="translated">&lt;code&gt;A::foo&lt;/code&gt; への2番目の呼び出しは省略します（最初の &lt;code&gt;A::foo&lt;/code&gt; 呼び出しと区別されないため）。</target>
        </trans-unit>
        <trans-unit id="537e5b1e32fc9c12c6bbe5a5156080d4c53fe0d3" translate="yes" xml:space="preserve">
          <source>and omit the second call to &lt;code&gt;A::foo&lt;/code&gt; (since it would not be distinct from the first call to &lt;code&gt;A::foo&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;A::foo&lt;/code&gt; への2回目の呼び出しを省略します（ &lt;code&gt;A::foo&lt;/code&gt; への最初の呼び出しと区別されないため）。</target>
        </trans-unit>
        <trans-unit id="adeced66d67fcec42518c7d43125b26bcafca512" translate="yes" xml:space="preserve">
          <source>and on &lt;code&gt;PATH&lt;/code&gt; . To find arguments for these scripts Perl uses a different algorithm than</source>
          <target state="translated">と &lt;code&gt;PATH&lt;/code&gt; に。これらのスクリプトの引数を見つけるために、Perlは別のアルゴリズムを使用しています</target>
        </trans-unit>
        <trans-unit id="d257a85ffc7f0eefbfba0429924719d4108aeae8" translate="yes" xml:space="preserve">
          <source>and on &lt;code&gt;PATH&lt;/code&gt;. To find arguments for these scripts Perl uses a different algorithm than</source>
          <target state="translated">および &lt;code&gt;PATH&lt;/code&gt; 上。これらのスクリプトの引数を見つけるために、Perlはとは異なるアルゴリズムを使用します</target>
        </trans-unit>
        <trans-unit id="2af9cc5d9a90aea15c856967222ce6dfd62554a0" translate="yes" xml:space="preserve">
          <source>and on already open streams, use &lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode()&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">すでに開いているストリームでは、 &lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode()&lt;/a&gt;&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="de1a2338b9dbeae27bb5d53c9b69dde4073fcc5c" translate="yes" xml:space="preserve">
          <source>and on already open streams, use &lt;code&gt;binmode()&lt;/code&gt;:</source>
          <target state="translated">すでに開いているストリームでは、 &lt;code&gt;binmode()&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="5c28d75bfe8ef3f77376f1de537f6ababec7c8f5" translate="yes" xml:space="preserve">
          <source>and one can inspect the value in debugger using all the possible methods.</source>
          <target state="translated">で、デバッガでは、可能な限りのメソッドを使って値を検査することができます。</target>
        </trans-unit>
        <trans-unit id="9e3a44de13daa4279c477d6ae9ad2ae6048934f2" translate="yes" xml:space="preserve">
          <source>and only &lt;a href=&quot;perlvar#%24ERRNO&quot;&gt;$!&lt;/a&gt; and &lt;a href=&quot;perlvar#%24EXTENDED_OS_ERROR&quot;&gt;$^E&lt;/a&gt; will be locale aware. Everything else is unaffected.</source>
          <target state="translated">そしてたったの&lt;a href=&quot;perlvar#%24ERRNO&quot;&gt;$！&lt;/a&gt;そして、&lt;a href=&quot;perlvar#%24EXTENDED_OS_ERROR&quot;&gt;$ ^ Eは&lt;/a&gt;承知ロケールになります。他のすべては影響を受けません。</target>
        </trans-unit>
        <trans-unit id="3dfb4545fb1273b004ecd4b9a59f733f64c1cedd" translate="yes" xml:space="preserve">
          <source>and only if the condition is true. &lt;code&gt;unless&lt;/code&gt; is the opposite, it executes the statement</source>
          <target state="translated">条件が真の場合のみ。反対で &lt;code&gt;unless&lt;/code&gt; 、それはステートメントを実行します</target>
        </trans-unit>
        <trans-unit id="45c260afb98f09cfba9f5207fc8117fcdbcb8feb" translate="yes" xml:space="preserve">
          <source>and only the first of these match:</source>
          <target state="translated">と、これらの最初の試合だけが一致しています。</target>
        </trans-unit>
        <trans-unit id="32e3341449eff9e33d610a484aa1f31d028b2c36" translate="yes" xml:space="preserve">
          <source>and optimizing the final combined regexp.</source>
          <target state="translated">と、最終的に結合された正規表現を最適化します。</target>
        </trans-unit>
        <trans-unit id="899fcac99a7dec6812e6bf7aee73eeaf10908c82" translate="yes" xml:space="preserve">
          <source>and other auto-generated files.</source>
          <target state="translated">などの自動生成されたファイルを使用しています。</target>
        </trans-unit>
        <trans-unit id="c684acd53848e74a7154abad5efe0e096b7463d3" translate="yes" xml:space="preserve">
          <source>and part</source>
          <target state="translated">と一部</target>
        </trans-unit>
        <trans-unit id="baf743f636b4f630102db82e79bec10fce338b9e" translate="yes" xml:space="preserve">
          <source>and pass &lt;code&gt;$buf&lt;/code&gt; to your send routine. Some protocols demand that the count should include the length of the count itself: then just add 4 to the data length. (But make sure to read &lt;a href=&quot;#Lengths-and-Widths&quot;&gt;&quot;Lengths and Widths&quot;&lt;/a&gt; before you really code this!)</source>
          <target state="translated">&lt;code&gt;$buf&lt;/code&gt; を送信ルーチンに渡します。一部のプロトコルでは、カウントにカウント自体の長さを含める必要があります。次に、データ長に4を追加するだけです。（ただし、実際にこれをコーディングする前に&lt;a href=&quot;#Lengths-and-Widths&quot;&gt;、&lt;/a&gt;必ず「長さと幅」を読んでください！）</target>
        </trans-unit>
        <trans-unit id="d67e5dc377fc2536598e164820c52f727da6d6ab" translate="yes" xml:space="preserve">
          <source>and pass &lt;code&gt;$buf&lt;/code&gt; to your send routine. Some protocols demand that the count should include the length of the count itself: then just add 4 to the data length. (But make sure to read &lt;a href=&quot;#Lengths-and-Widths&quot;&gt;Lengths and Widths&lt;/a&gt; before you really code this!)</source>
          <target state="translated">&lt;code&gt;$buf&lt;/code&gt; を送信ルーチンに渡します。一部のプロトコルでは、カウントにカウント自体の長さを含める必要があります。データ長に4を追加するだけです。（しかし、これを実際にコーディングする前に、&lt;a href=&quot;#Lengths-and-Widths&quot;&gt;長さと幅&lt;/a&gt;を必ず読んでください！）</target>
        </trans-unit>
        <trans-unit id="16984fda388c94884a0564bd0f04655b5c3813f1" translate="yes" xml:space="preserve">
          <source>and passes that to the replacement &lt;a href=&quot;universal#VERSION&quot;&gt;UNIVERSAL::VERSION&lt;/a&gt;. This is not true in Perl 5.005_04, however, so you are &lt;b&gt;strongly encouraged&lt;/b&gt; to always use a Decimal version in your code, even for those versions of Perl which support the Dotted-Decimal version.</source>
          <target state="translated">そしてそれを置換&lt;a href=&quot;universal#VERSION&quot;&gt;UNIVERSAL :: VERSIONに&lt;/a&gt;渡します。ただし、これはPerl 5.005_04には当てはまりません。したがって、ドット付き10進バージョンをサポートするPerlのバージョンであっても、コードでは常に10進バージョンを使用することを&lt;b&gt;強くお勧め&lt;/b&gt;します。</target>
        </trans-unit>
        <trans-unit id="d58ccce831f8e9123bc9e80b9e66f8248b980f4c" translate="yes" xml:space="preserve">
          <source>and process time (in UNIX-like systems the sum of</source>
          <target state="translated">と処理時間(UNIX系のシステムでは</target>
        </trans-unit>
        <trans-unit id="3fd6226fa225944b6194d79ef250caae14aa04c4" translate="yes" xml:space="preserve">
          <source>and produces results. If you need to customize its behaviour you should probably familiarize yourself with the source first. Enough lecturing.</source>
          <target state="translated">と結果を出します。その動作をカスタマイズする必要がある場合は、最初にソースに精通している必要があります。説教はもういいでしょう。</target>
        </trans-unit>
        <trans-unit id="bc18719ba2c64a9b71c32941b959a3b37a8e9ccb" translate="yes" xml:space="preserve">
          <source>and programs into</source>
          <target state="translated">とプログラムに</target>
        </trans-unit>
        <trans-unit id="04b3f3eb12446afa59ba04e34128aaa73360c8fb" translate="yes" xml:space="preserve">
          <source>and puts the</source>
          <target state="translated">を入れて</target>
        </trans-unit>
        <trans-unit id="1050864b9d5630870510b4c5ed9d494b62e3e1ac" translate="yes" xml:space="preserve">
          <source>and recompile perl</source>
          <target state="translated">で、Perlを再コンパイルします。</target>
        </trans-unit>
        <trans-unit id="04dc98e6e6ecb08df2b06a8c82f091b8669d8771" translate="yes" xml:space="preserve">
          <source>and return a list anyway. If so, then only the last element of the list will be returned.</source>
          <target state="translated">を使用して、とにかくリストを返します。そうすると、リストの最後の要素だけが返されます。</target>
        </trans-unit>
        <trans-unit id="bea3ea10f617b4820cdc83a6257e4c5d2c2ed531" translate="yes" xml:space="preserve">
          <source>and returns a sequence of octets.</source>
          <target state="translated">を返し、オクテットのシーケンスを返します。</target>
        </trans-unit>
        <trans-unit id="69bdd065458a753e9be3338a81aee1403915b245" translate="yes" xml:space="preserve">
          <source>and returns this:</source>
          <target state="translated">で、これを返します。</target>
        </trans-unit>
        <trans-unit id="05a85acb845c8558aabbfdc75bce2f31eacc6f3d" translate="yes" xml:space="preserve">
          <source>and runs it through the pager specified in &lt;code&gt;$CPAN::Config-&amp;gt;{pager}&lt;/code&gt; .</source>
          <target state="translated">そして、それを &lt;code&gt;$CPAN::Config-&amp;gt;{pager}&lt;/code&gt; 指定されたページャーを介して実行します。</target>
        </trans-unit>
        <trans-unit id="88b01bfc16080bd793c508ce92be40c54c4e0d32" translate="yes" xml:space="preserve">
          <source>and see whether they list something resembling these</source>
          <target state="translated">に似たものをリストアップしているかどうかを見てみましょう。</target>
        </trans-unit>
        <trans-unit id="9407dd89aa838f3db9bc1ee001171ae499cdf58c" translate="yes" xml:space="preserve">
          <source>and send a line of data to it this way:</source>
          <target state="translated">で、このようにデータの行を送信します。</target>
        </trans-unit>
        <trans-unit id="834b5f4699ca8ef5bed1ec71205174ca1aa071f2" translate="yes" xml:space="preserve">
          <source>and should never be used lightly.</source>
          <target state="translated">と軽々しく使ってはいけません。</target>
        </trans-unit>
        <trans-unit id="cc72a00bf5f82a31e19586f8d5648eeb9609f807" translate="yes" xml:space="preserve">
          <source>and so on.</source>
          <target state="translated">といったようなことを言っています。</target>
        </trans-unit>
        <trans-unit id="9db3feda6610247fb93d16581c9f1e324a0dc3ce" translate="yes" xml:space="preserve">
          <source>and so on. Note how the trailing sub-version is automatically stripped from the version.</source>
          <target state="translated">といったようにしています。最後のサブバージョンがバージョンから自動的に取り除かれていることに注意してください。</target>
        </trans-unit>
        <trans-unit id="0b888a2f960617a6f6c366d202b424cbea99cdde" translate="yes" xml:space="preserve">
          <source>and some C to call it</source>
          <target state="translated">と、それを呼ぶためにいくつかのC</target>
        </trans-unit>
        <trans-unit id="a1e18734fb68f76855ac9d83f86033f89bcb6297" translate="yes" xml:space="preserve">
          <source>and someone has been calling it with an array or expression returning a list:</source>
          <target state="translated">と誰かがリストを返す配列や式で呼び出していました。</target>
        </trans-unit>
        <trans-unit id="171f6cb35d6dde5ce392dcbd570d9c1d7297604f" translate="yes" xml:space="preserve">
          <source>and specify &lt;code&gt;$which&lt;/code&gt; elsewhere.</source>
          <target state="translated">&lt;code&gt;$which&lt;/code&gt; 他の場所で指定します。</target>
        </trans-unit>
        <trans-unit id="c88d797f97ab7980940e6fbc2a0b1b0f03bf45ed" translate="yes" xml:space="preserve">
          <source>and start with this template:</source>
          <target state="translated">で、このテンプレートから始めます。</target>
        </trans-unit>
        <trans-unit id="60a1a53956f7f1b07c9ff7e2cf048e0d61cf0aff" translate="yes" xml:space="preserve">
          <source>and still have it work under all the modes Perl could have been compiled with.</source>
          <target state="translated">でコンパイルされたPerlのすべてのモードで動作するようにしています。</target>
        </trans-unit>
        <trans-unit id="efa9256e01727af0a796fee5e83fdf8c85c90176" translate="yes" xml:space="preserve">
          <source>and still work for Chinese and Arabic and Italian</source>
          <target state="translated">と、今でも中国語とアラビア語とイタリア語の仕事をしています。</target>
        </trans-unit>
        <trans-unit id="b93c07a562c2c0c86991f560b275725c74228f04" translate="yes" xml:space="preserve">
          <source>and suffix of C&amp;lt;.dat&amp;gt; would generate a file similar to F</source>
          <target state="translated">C &amp;lt;.dat&amp;gt;のサフィックスは、Fと同様のファイルを生成します</target>
        </trans-unit>
        <trans-unit id="58b0b8a5933189f91ce79bd5aaa4c4a91a53f4c2" translate="yes" xml:space="preserve">
          <source>and symbolic sub references</source>
          <target state="translated">およびシンボリックサブ参照</target>
        </trans-unit>
        <trans-unit id="c8bd05940ef361af618d2f58d8ef228c2dc1eee1" translate="yes" xml:space="preserve">
          <source>and that the default flags are kept in a global C variable &lt;code&gt;default_flags&lt;/code&gt; . Suppose that you want to create an interface which is called as</source>
          <target state="translated">また、デフォルトのフラグはグローバルC変数 &lt;code&gt;default_flags&lt;/code&gt; に保持されます。次のように呼び出されるインターフェースを作成するとします。</target>
        </trans-unit>
        <trans-unit id="bec8647d360da8a4d06b873bbf2b1cbefbef0dbf" translate="yes" xml:space="preserve">
          <source>and that the default flags are kept in a global C variable &lt;code&gt;default_flags&lt;/code&gt;. Suppose that you want to create an interface which is called as</source>
          <target state="translated">また、デフォルトのフラグはグローバルC変数 &lt;code&gt;default_flags&lt;/code&gt; に保持されます。次のように呼ばれるインターフェイスを作成するとします。</target>
        </trans-unit>
        <trans-unit id="97ed4c8cfdc4058f64674afafa62d45ea754ba4b" translate="yes" xml:space="preserve">
          <source>and that will set this class as the default formatter to run when you do &lt;code&gt;perldoc whatever&lt;/code&gt; .</source>
          <target state="translated">そして、このクラスは、 &lt;code&gt;perldoc whatever&lt;/code&gt; を実行したときに実行されるデフォルトのフォーマッターとして設定されます。</target>
        </trans-unit>
        <trans-unit id="fa7dd189212fac90750c7d9f5b37d181432e6b6a" translate="yes" xml:space="preserve">
          <source>and that will set this class as the default formatter to run when you do &lt;code&gt;perldoc whatever&lt;/code&gt;.</source>
          <target state="translated">これにより、このクラスが、 &lt;code&gt;perldoc whatever&lt;/code&gt; を実行するときに実行するデフォルトのフォーマッタとして設定されます。</target>
        </trans-unit>
        <trans-unit id="38d402cb5ba5ced669d83f33b900f232ec58d72a" translate="yes" xml:space="preserve">
          <source>and the</source>
          <target state="translated">そして、その</target>
        </trans-unit>
        <trans-unit id="d6a3e1044d78ff80b32d4053c48546a54399bb4a" translate="yes" xml:space="preserve">
          <source>and the (compiled)</source>
          <target state="translated">と(コンパイルされた)</target>
        </trans-unit>
        <trans-unit id="7709e2962fcebb7a32dface22926131efe462333" translate="yes" xml:space="preserve">
          <source>and the &lt;code&gt;&quot;-&quot;&lt;/code&gt; shouldn't be the first character. If you want to be hypercorrect, stay case-insensitive and within the 8.3 naming convention (all the files and directories have to be unique within one directory if their names are lowercased and truncated to eight characters before the &lt;code&gt;.&lt;/code&gt;, if any, and to three characters after the &lt;code&gt;.&lt;/code&gt;, if any). (And do not use &lt;code&gt;.&lt;/code&gt;s in directory names.)</source>
          <target state="translated">そして、 &lt;code&gt;&quot;-&quot;&lt;/code&gt; の最初の文字であってはなりません。ハイパーコレクトにしたい場合は、大文字と小文字を区別せず、8.3命名規則の範囲内にしてください（すべてのファイルとディレクトリは、名前が小文字の場合は1つのディレクトリ内で一意でなければならず、存在する場合は &lt;code&gt;.&lt;/code&gt; &lt;code&gt;.&lt;/code&gt; 後の文字（ある場合）。（そして、使用しないでください &lt;code&gt;.&lt;/code&gt; sのディレクトリ名に。）</target>
        </trans-unit>
        <trans-unit id="4d66f33f291aa497e1fbb1cea751208ffbc34985" translate="yes" xml:space="preserve">
          <source>and the &lt;code&gt;S_IF*&lt;/code&gt; functions are</source>
          <target state="translated">そして &lt;code&gt;S_IF*&lt;/code&gt; 機能があります</target>
        </trans-unit>
        <trans-unit id="2942a15e2cfe5df5d7b4806203036ff2059365fd" translate="yes" xml:space="preserve">
          <source>and the &lt;code&gt;build&lt;/code&gt; of the &lt;code&gt;prereqs&lt;/code&gt; field of your</source>
          <target state="translated">そして、 &lt;code&gt;build&lt;/code&gt; の &lt;code&gt;prereqs&lt;/code&gt; あなたのフィールド</target>
        </trans-unit>
        <trans-unit id="ab5709809a705fe3cbf34a47d36a8f9e3b151b2f" translate="yes" xml:space="preserve">
          <source>and the &lt;code&gt;configure&lt;/code&gt; of the &lt;code&gt;prereqs&lt;/code&gt; field of your</source>
          <target state="translated">そして、 &lt;code&gt;configure&lt;/code&gt; の &lt;code&gt;prereqs&lt;/code&gt; あなたのフィールド</target>
        </trans-unit>
        <trans-unit id="02c4a9e6fa1ed7552c9cc696dccfac8693bb8d07" translate="yes" xml:space="preserve">
          <source>and the &lt;code&gt;padadd_STATE&lt;/code&gt; flag get added to</source>
          <target state="translated">そして &lt;code&gt;padadd_STATE&lt;/code&gt; フラグが追加されます</target>
        </trans-unit>
        <trans-unit id="3e4685b36d5a4d2703e2682160eabe2135a107d7" translate="yes" xml:space="preserve">
          <source>and the &lt;code&gt;runtime&lt;/code&gt; of the &lt;code&gt;prereqs&lt;/code&gt; field of your</source>
          <target state="translated">そして、 &lt;code&gt;runtime&lt;/code&gt; の &lt;code&gt;prereqs&lt;/code&gt; あなたのフィールド</target>
        </trans-unit>
        <trans-unit id="25ff9d2e379f8fa04204de9723f370d19f946094" translate="yes" xml:space="preserve">
          <source>and the &lt;code&gt;test&lt;/code&gt; of the &lt;code&gt;prereqs&lt;/code&gt; field of your</source>
          <target state="translated">そして &lt;code&gt;test&lt;/code&gt; の &lt;code&gt;prereqs&lt;/code&gt; あなたのフィールドに</target>
        </trans-unit>
        <trans-unit id="ad51d3bef464cc47afa473cbf58e8f411acbad00" translate="yes" xml:space="preserve">
          <source>and the B part would be serialized by the engine. In &lt;code&gt;STORABLE_thaw&lt;/code&gt; , you would get back the reference to the B' object, deserialized for you.</source>
          <target state="translated">B部分はエンジンによってシリアル化されます。では &lt;code&gt;STORABLE_thaw&lt;/code&gt; 、あなたはあなたのためにデシリアライズさB」オブジェクトへの参照を、取り戻すでしょう。</target>
        </trans-unit>
        <trans-unit id="e3947ca45c968c9107ff483423644bfd9b7048e4" translate="yes" xml:space="preserve">
          <source>and the B part would be serialized by the engine. In &lt;code&gt;STORABLE_thaw&lt;/code&gt;, you would get back the reference to the B' object, deserialized for you.</source>
          <target state="translated">Bパーツはエンジンによってシリアル化されます。では &lt;code&gt;STORABLE_thaw&lt;/code&gt; 、あなたはあなたのためにデシリアライズさB」オブジェクトへの参照を、取り戻すでしょう。</target>
        </trans-unit>
        <trans-unit id="147f20996051af5faf516917523025a59c3b1223" translate="yes" xml:space="preserve">
          <source>and the anonymous sub used with a</source>
          <target state="translated">と一緒に使われている匿名のサブ</target>
        </trans-unit>
        <trans-unit id="be7ddd8a1c2d20b11344c530e59b1a76ec5867c2" translate="yes" xml:space="preserve">
          <source>and the assignments to &lt;code&gt;@ISA&lt;/code&gt; and &lt;code&gt;@EXPORT_OK&lt;/code&gt; happen immediately, leaving no room for something to get awry or just plain wrong.</source>
          <target state="translated">とに割り当て &lt;code&gt;@ISA&lt;/code&gt; と &lt;code&gt;@EXPORT_OK&lt;/code&gt; はゆがんまたは単純に間違っを取得するために何かの余地を残していない、すぐに起こります。</target>
        </trans-unit>
        <trans-unit id="ec3881e38f6bc29241523880e8b6087893781e29" translate="yes" xml:space="preserve">
          <source>and the code for rpcb_gettime() can be rewritten as</source>
          <target state="translated">のコードは次のように書き換えることができます。</target>
        </trans-unit>
        <trans-unit id="d0b288947e39526d473e38a00227523ed22a3b40" translate="yes" xml:space="preserve">
          <source>and the context and data stacks, as shown by &lt;code&gt;-Dstv&lt;/code&gt; , look like:</source>
          <target state="translated">&lt;code&gt;-Dstv&lt;/code&gt; で示されるコンテキストとデータスタックは、次のようになります。</target>
        </trans-unit>
        <trans-unit id="a6d1cc33cbc00adad1eb3a8c54c6a3dabc6fbf90" translate="yes" xml:space="preserve">
          <source>and the context and data stacks, as shown by &lt;code&gt;-Dstv&lt;/code&gt;, look like:</source>
          <target state="translated">&lt;code&gt;-Dstv&lt;/code&gt; で示されているように、コンテキストとデータスタックは次のようになります。</target>
        </trans-unit>
        <trans-unit id="1640149c077909847c703b01d4586d4955345b69" translate="yes" xml:space="preserve">
          <source>and the data type of the corresponding data element. These items are in parentheses, brackets and braces, respectively.</source>
          <target state="translated">と、対応するデータ要素のデータ型を指定します。これらの項目は、それぞれカッコ、カッコ、カッコの中に入っています。</target>
        </trans-unit>
        <trans-unit id="0053caf8d86bff52b61e0db6e20570501321030d" translate="yes" xml:space="preserve">
          <source>and the decoding is</source>
          <target state="translated">であり、復号化は</target>
        </trans-unit>
        <trans-unit id="6db487f2363f1808733e361f4f9ef6e4c29bac55" translate="yes" xml:space="preserve">
          <source>and the dual-life modules are in</source>
          <target state="translated">であり、デュアルライフモジュールは</target>
        </trans-unit>
        <trans-unit id="701a5fbfcd6a3d0bfbaa14dc1799d0bcc3687760" translate="yes" xml:space="preserve">
          <source>and the first argument of myref() will be a reference to a scalar, an array, a hash, a code, or a glob.</source>
          <target state="translated">で、myref()の第一引数はスカラ、配列、ハッシュ、コード、グロブへの参照になります。</target>
        </trans-unit>
        <trans-unit id="41644e439068ccf4dd12a38456eb1c0abd4f9ac4" translate="yes" xml:space="preserve">
          <source>and the following code will read the hexdump in and convert it on the fly back into bytes:</source>
          <target state="translated">で、次のコードはhexdumpを読み込んで、その場でバイトに変換してくれます。</target>
        </trans-unit>
        <trans-unit id="50b6d807bc1aa40041d0aec64ce2f373303ab28d" translate="yes" xml:space="preserve">
          <source>and the latter should be used for consistency.</source>
          <target state="translated">と後者は整合性のために使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="a319d5d5f1db6ffbf62ebbd0eae703d0f1b20336" translate="yes" xml:space="preserve">
          <source>and the method form of &lt;code&gt;isa&lt;/code&gt; for the second:</source>
          <target state="translated">そして二番目の &lt;code&gt;isa&lt;/code&gt; のメソッド形式：</target>
        </trans-unit>
        <trans-unit id="d51a49fa5c4b18f00dbcb9d665d43c1102906852" translate="yes" xml:space="preserve">
          <source>and the newer &lt;a href=&quot;concise&quot;&gt;B::Concise&lt;/a&gt;, &lt;a href=&quot;terse&quot;&gt;B::Terse&lt;/a&gt;.</source>
          <target state="translated">そして、新しい&lt;a href=&quot;concise&quot;&gt;B :: Concise&lt;/a&gt;、&lt;a href=&quot;terse&quot;&gt;B :: Terse&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0101ea36f11aa234346b21c12169ca0fa18afce9" translate="yes" xml:space="preserve">
          <source>and the numeric value of $c becomes 5. However, after calling</source>
          <target state="translated">を呼び出すと、$cの数値が5になります。しかし</target>
        </trans-unit>
        <trans-unit id="59496338c48bb851d2fcd377f515a4eb8426caa1" translate="yes" xml:space="preserve">
          <source>and the old 5.005 style threading, or for that matter, to most other threading systems out there, is that by default, no data is shared. When a new Perl thread is created, all the data associated with the current thread is copied to the new thread, and is subsequently private to that new thread! This is similar in feel to what happens when a Unix process forks, except that in this case, the data is just copied to a different part of memory within the same process rather than a real fork taking place.</source>
          <target state="translated">と、古い 5.005 スタイルのスレッディング、つまり他のほとんどのスレッディングシステムでは、デフォルトではデータは共有されません。新しい Perl スレッドが作成されると、現在のスレッドに関連付けられたすべてのデータが新しいスレッドにコピーされ、その後、その新しいスレッドに対してプライベートになります。これは、Unix プロセスがフォークするときに起こることに似ていますが、この場合は、実際にフォークが行われるのではなく、同じプロセス内の別のメモリにデータがコピーされるだけです。</target>
        </trans-unit>
        <trans-unit id="f98e525fd3fa23c9c2e46620627a8148db25bb3f" translate="yes" xml:space="preserve">
          <source>and the process defaults to expand the filespec) and pass the rest of &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt;'s argument to it as parameters. If the token has no file type, and matches a file with null type, then an attempt is made to determine whether the file is an executable image which should be invoked using &lt;code&gt;MCR&lt;/code&gt; or a text file which should be passed to DCL as a command procedure.</source>
          <target state="translated">プロセスはデフォルトでfilespecを展開し、残りの &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; の引数をパラメーターとして渡します。トークンにファイルタイプがなく、ヌルタイプのファイルと一致する場合、ファイルが &lt;code&gt;MCR&lt;/code&gt; を使用して呼び出す必要のある実行可能イメージであるか、コマンドプロシージャとしてDCLに渡す必要があるテキストファイルであるかを判断する試みが行われます。 。</target>
        </trans-unit>
        <trans-unit id="52e6b03dd3deb55cd720c99ea46d7d1414b16753" translate="yes" xml:space="preserve">
          <source>and the process defaults to expand the filespec) and pass the rest of &lt;code&gt;exec&lt;/code&gt;'s argument to it as parameters. If the token has no file type, and matches a file with null type, then an attempt is made to determine whether the file is an executable image which should be invoked using &lt;code&gt;MCR&lt;/code&gt; or a text file which should be passed to DCL as a command procedure.</source>
          <target state="translated">プロセスはデフォルトでfilespecを展開し、 &lt;code&gt;exec&lt;/code&gt; の残りの引数をパラメーターとして渡します。トークンにファイルタイプがなく、nullタイプのファイルと一致する場合、ファイルが &lt;code&gt;MCR&lt;/code&gt; を使用して呼び出される実行可能イメージであるか、コマンドプロシージャとしてDCLに渡されるテキストファイルであるかを判別しようとします。 。</target>
        </trans-unit>
        <trans-unit id="ddacafb3c506d7d636313e8cd8381b88b300fc0f" translate="yes" xml:space="preserve">
          <source>and the process defaults, and if successful, the resulting file is invoked via &lt;code&gt;MCR&lt;/code&gt; . This allows you to invoke an image directly simply by passing the file specification to &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt;, a common Unixish idiom. If the token has no file type, and matches a file with null type, then an attempt is made to determine whether the file is an executable image which should be invoked using &lt;code&gt;MCR&lt;/code&gt; or a text file which should be passed to DCL as a command procedure.</source>
          <target state="translated">プロセスがデフォルトになり、成功した場合、結果のファイルは &lt;code&gt;MCR&lt;/code&gt; を介して呼び出されます。これにより、ファイル仕様を一般的なUnixのイディオムである &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; に渡すだけで、イメージを直接呼び出すことができます。トークンにファイルタイプがなく、ヌルタイプのファイルと一致する場合、ファイルが &lt;code&gt;MCR&lt;/code&gt; を使用して呼び出す必要がある実行可能イメージであるか、コマンドプロシージャとしてDCLに渡す必要があるテキストファイルであるかを判断する試みが行われます。 。</target>
        </trans-unit>
        <trans-unit id="4376c508e021bef4c1bf654245d8e2b94bc70fb9" translate="yes" xml:space="preserve">
          <source>and the process defaults, and if successful, the resulting file is invoked via &lt;code&gt;MCR&lt;/code&gt;. This allows you to invoke an image directly simply by passing the file specification to &lt;code&gt;system&lt;/code&gt;, a common Unixish idiom. If the token has no file type, and matches a file with null type, then an attempt is made to determine whether the file is an executable image which should be invoked using &lt;code&gt;MCR&lt;/code&gt; or a text file which should be passed to DCL as a command procedure.</source>
          <target state="translated">プロセスはデフォルトであり、成功した場合、結果のファイルは &lt;code&gt;MCR&lt;/code&gt; を介して呼び出されます。これにより、ファイル仕様を一般的なUnixishイディオムである &lt;code&gt;system&lt;/code&gt; に渡すだけで、イメージを直接呼び出すことができます。トークンにファイルタイプがなく、nullタイプのファイルと一致する場合、ファイルが &lt;code&gt;MCR&lt;/code&gt; を使用して呼び出される実行可能イメージであるか、コマンドプロシージャとしてDCLに渡されるテキストファイルであるかを判別しようとします。 。</target>
        </trans-unit>
        <trans-unit id="01a7d35d5fca09ca87a957bce5a8e41bd9acadb8" translate="yes" xml:space="preserve">
          <source>and the repeat count is obtained by popping off the last element from the stack. The</source>
          <target state="translated">で、リピート数はスタックから最後の要素をポップオフすることで得られます。のように、スタックから最後の要素をポップオフすることで、リピート回数が得られます。</target>
        </trans-unit>
        <trans-unit id="ffb8c286d177a7fde4b96ec8e58df11a57708992" translate="yes" xml:space="preserve">
          <source>and the result is not what you likely expected. No warnings are generated. If you do string &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;'s within the scope of &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; , you should instead change the &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; line to do something like:</source>
          <target state="translated">結果は予想したものとは異なります。警告は生成されません。 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; ロケールの範囲内で文字列 &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; を実行する場合は、代わりに次のように &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; 行を変更する必要があります。</target>
        </trans-unit>
        <trans-unit id="f06907ff6f1b1adccdd8b649e3519d07224b6273" translate="yes" xml:space="preserve">
          <source>and the result is not what you likely expected. No warnings are generated. If you do string &lt;code&gt;eval&lt;/code&gt;'s within the scope of &lt;code&gt;use locale&lt;/code&gt;, you should instead change the &lt;code&gt;eval&lt;/code&gt; line to do something like:</source>
          <target state="translated">結果はあなたがおそらく期待したものではありません。警告は生成されません。 &lt;code&gt;use locale&lt;/code&gt; の範囲内で文字列 &lt;code&gt;eval&lt;/code&gt; を実行する場合は、代わりに &lt;code&gt;eval&lt;/code&gt; 行を次のように変更する必要があります。</target>
        </trans-unit>
        <trans-unit id="5826e275e51e2f92c417012d26e57183b67ddebf" translate="yes" xml:space="preserve">
          <source>and the second as</source>
          <target state="translated">として、2つ目は</target>
        </trans-unit>
        <trans-unit id="4b0c54cf5e55bcce5334c4fb8936e4b45df4be44" translate="yes" xml:space="preserve">
          <source>and the variable is only assigned if the condition is false. In Perl, you need parentheses:</source>
          <target state="translated">で、条件が false の場合にのみ変数が代入されます。Perlでは括弧が必要です。</target>
        </trans-unit>
        <trans-unit id="187c19bf2ed06f558d877ebc1cc599d609a8c840" translate="yes" xml:space="preserve">
          <source>and the version object will be created as if the following code were used:</source>
          <target state="translated">と、以下のコードを使用した場合のようにバージョンオブジェクトが作成されます。</target>
        </trans-unit>
        <trans-unit id="b195225fa7acc0b96c9d796bff6aa32f9bf25de1" translate="yes" xml:space="preserve">
          <source>and their source code:</source>
          <target state="translated">とそのソースコードを参照してください。</target>
        </trans-unit>
        <trans-unit id="a357a0b3b6bb01e41a042b584904f6b12375f3f1" translate="yes" xml:space="preserve">
          <source>and then</source>
          <target state="translated">而して</target>
        </trans-unit>
        <trans-unit id="a89a3626b8565f1e4fe93595aa23beb07a814bdf" translate="yes" xml:space="preserve">
          <source>and then &lt;code&gt;make install&lt;/code&gt; directly in the subshell.</source>
          <target state="translated">そして、サブシェルに直接 &lt;code&gt;make install&lt;/code&gt; します。</target>
        </trans-unit>
        <trans-unit id="c057b91530af5ff3d52f001fe2897560766773fd" translate="yes" xml:space="preserve">
          <source>and then I can use it as:</source>
          <target state="translated">として使うことができます。</target>
        </trans-unit>
        <trans-unit id="7ee1c36bc806d74c955b8deeab5a71a91290b0b4" translate="yes" xml:space="preserve">
          <source>and then at the end add a subroutine (which will override the pre-existing subroutine). Remember to use a tab character to indent the line beginning with &quot;cd&quot;!</source>
          <target state="translated">を追加し、最後にサブルーチンを追加します(既存のサブルーチンを上書きします)。cd &quot;で始まる行をタブ文字でインデントすることを忘れないでください!</target>
        </trans-unit>
        <trans-unit id="ab0d506f35fd3822d193cc9360b63e031c3942f4" translate="yes" xml:space="preserve">
          <source>and then calls the compiled value, and returns that. (I.e., if $key looks like bracket notation, $compiled is a sub, and we return &amp;amp;{$compiled}(@params); but if $key is just a plain string, we just return that.)</source>
          <target state="translated">そして、コンパイルされた値を呼び出し、それを返します。（つまり、$ keyがブラケット表記のように見える場合、$ compiledはサブルーチンであり、＆{$ compiled}（@ params）;を返しますが、$ keyが単なる文字列の場合は、それを返します。）</target>
        </trans-unit>
        <trans-unit id="44a3152294c4111f2c746a317f7528eba26af20d" translate="yes" xml:space="preserve">
          <source>and then compile Perl. The places where fchdir() is used have alternatives for systems that do not have fchdir() available.</source>
          <target state="translated">を実行してから Perl をコンパイルしてください。fchdir()が使われている場所には、fchdir()が利用できないシステムのための代替手段があります。</target>
        </trans-unit>
        <trans-unit id="54cc71479f4e8f37feff6adbc588948b6ed9b469" translate="yes" xml:space="preserve">
          <source>and then edited it as appropriate.</source>
          <target state="translated">と、適当に編集してみました。</target>
        </trans-unit>
        <trans-unit id="9b2df89c641d69f45a815efca5beef7560ca9a0a" translate="yes" xml:space="preserve">
          <source>and then just answer client requests for language $wanted by just looking up</source>
          <target state="translated">を検索するだけで、クライアントからの $wanted 言語のリクエストに答えることができます。</target>
        </trans-unit>
        <trans-unit id="8b1640f57029d1835984f3af20d2191014b99ddf" translate="yes" xml:space="preserve">
          <source>and then only hard references will be allowed for the rest of the enclosing block. An inner block may countermand that with</source>
          <target state="translated">を使用して、それ以外の囲い込みブロックではハード参照のみが許可されます。内側のブロックは</target>
        </trans-unit>
        <trans-unit id="5e0f10e30244d92ed6f02e6996b5e8e942826f05" translate="yes" xml:space="preserve">
          <source>and then pass to threads-&amp;gt;create() a sub that closes over &lt;code&gt;$foo&lt;/code&gt;. Then, in the child, you say</source>
          <target state="translated">次に、 &lt;code&gt;$foo&lt;/code&gt; を閉じるsubをthreads-&amp;gt; create（）に渡します。それから、子供で、あなたは言います</target>
        </trans-unit>
        <trans-unit id="451e30567469e8b460f1d3bc5414c41a6638cddf" translate="yes" xml:space="preserve">
          <source>and then re-compiling and installing. (&lt;code&gt;%Config&lt;/code&gt; is available from the Config module).</source>
          <target state="translated">その後、再コンパイルしてインストールします。（ &lt;code&gt;%Config&lt;/code&gt; はConfigモジュールから入手できます）。</target>
        </trans-unit>
        <trans-unit id="a0240abc49e91dec760c37658ba9b71575aed0e0" translate="yes" xml:space="preserve">
          <source>and then restart the debugger using the &lt;code&gt;R&lt;/code&gt; command (if possible). One can use &lt;code&gt;b
compile subname&lt;/code&gt; for the same purpose.</source>
          <target state="translated">次に、 &lt;code&gt;R&lt;/code&gt; コマンドを使用してデバッガーを再起動します（可能な場合）。同じ目的で &lt;code&gt;b compile subname&lt;/code&gt; を使用できます。</target>
        </trans-unit>
        <trans-unit id="dbf31119ed47c5f8b69e18f4d5f705e1c96574bd" translate="yes" xml:space="preserve">
          <source>and then there's</source>
          <target state="translated">而して</target>
        </trans-unit>
        <trans-unit id="353ea5311f06d213fb4274ba5a999ecceb56a41b" translate="yes" xml:space="preserve">
          <source>and then use pax.</source>
          <target state="translated">と言ってパックスを使います。</target>
        </trans-unit>
        <trans-unit id="48126773317a746d38788a830d1f700877f824cc" translate="yes" xml:space="preserve">
          <source>and there are currently 32 types. These different structures contain pointers to various routines that perform additional actions depending on which function is being called.</source>
          <target state="translated">であり、現在32種類の型があります。これらの異なる構造体には、呼び出された関数に応じて追加のアクションを実行する様々なルーチンへのポインタが含まれています。</target>
        </trans-unit>
        <trans-unit id="125d179aee3f08c5f3f28753f2a610fce93912ec" translate="yes" xml:space="preserve">
          <source>and these</source>
          <target state="translated">そしてこれら</target>
        </trans-unit>
        <trans-unit id="e1493a3f0807b6f38cd28b6afc4496c286e444bc" translate="yes" xml:space="preserve">
          <source>and these conditions now hold; changes in caps:</source>
          <target state="translated">そして、これらの条件は現在も維持されています。</target>
        </trans-unit>
        <trans-unit id="634f4431e19540e83429c99c727415ca241cf810" translate="yes" xml:space="preserve">
          <source>and they need renamed to this</source>
          <target state="translated">そして、彼らはこれに名前を変更する必要があります</target>
        </trans-unit>
        <trans-unit id="c08d7693095dbd2bcba2f2bba00e5c933e696272" translate="yes" xml:space="preserve">
          <source>and things will Just Work.</source>
          <target state="translated">と、物事はジャスト・ワークになります。</target>
        </trans-unit>
        <trans-unit id="13d6234dafca22c495f68d2e93ffa91530cf4576" translate="yes" xml:space="preserve">
          <source>and this all reduces to one string internally. Likewise, if you say</source>
          <target state="translated">となり、これはすべて内部的には一つの文字列に還元されます。同様に</target>
        </trans-unit>
        <trans-unit id="54d316122df54908b330dbe67e0eb1a7496b2e8d" translate="yes" xml:space="preserve">
          <source>and this is the C function</source>
          <target state="translated">であり、これがC関数</target>
        </trans-unit>
        <trans-unit id="b0b7cef2e136b9167abea8c18920b79278779cc6" translate="yes" xml:space="preserve">
          <source>and this is the equivalent skeleton for the</source>
          <target state="translated">の等価スケルトンであり、これは</target>
        </trans-unit>
        <trans-unit id="6eebd24f36d63aecef99cba57072fffe82f277ba" translate="yes" xml:space="preserve">
          <source>and this is what it outputs:</source>
          <target state="translated">で、これが出力されます。</target>
        </trans-unit>
        <trans-unit id="96e5143cbcedd3c71a50e4ae68ec0d716dd6fe35" translate="yes" xml:space="preserve">
          <source>and this to compress a file as it is written to the FTP Server</source>
          <target state="translated">とこれを使って、FTP サーバーに書き込まれたファイルを圧縮します。</target>
        </trans-unit>
        <trans-unit id="fd12e4da86b9aadfbb2734c8e5f1bee5da3b93ce" translate="yes" xml:space="preserve">
          <source>and this to write compress files, if you have the &lt;code&gt;compress&lt;/code&gt; program available</source>
          <target state="translated">&lt;code&gt;compress&lt;/code&gt; プログラムを使用できる場合は、これで圧縮ファイルを書き込みます</target>
        </trans-unit>
        <trans-unit id="e2c2bf67a7935e18e359ad79d84198585a4af3bd" translate="yes" xml:space="preserve">
          <source>and this with &lt;code&gt;gunzip&lt;/code&gt;</source>
          <target state="translated">そしてこれは &lt;code&gt;gunzip&lt;/code&gt; で</target>
        </trans-unit>
        <trans-unit id="d39dfbea4e5b4447637693f64c38ebc1f8116f81" translate="yes" xml:space="preserve">
          <source>and thus the North American servers happen to be listed between the European and the South American sites.</source>
          <target state="translated">このように、北米のサーバーは、ヨーロッパと南米のサイトの間にリストされています。</target>
        </trans-unit>
        <trans-unit id="cb400c328bbed62df7bf2a79424df0971a9b0060" translate="yes" xml:space="preserve">
          <source>and to convert it back:</source>
          <target state="translated">と変換して戻すことができます。</target>
        </trans-unit>
        <trans-unit id="389eab738d2c24825aaf583e6d4e7e90f7197558" translate="yes" xml:space="preserve">
          <source>and to make a subroutine visible to other packages in the same scope:</source>
          <target state="translated">と、同じスコープ内の他のパッケージからサブルーチンを見えるようにするためのものです。</target>
        </trans-unit>
        <trans-unit id="217975290eb70597845ac22d0c9eaec6ba4f2b06" translate="yes" xml:space="preserve">
          <source>and to pop the return value out. Take a deep breath...</source>
          <target state="translated">と、戻り値をポップアウトしてみましょう。深呼吸して...</target>
        </trans-unit>
        <trans-unit id="f2f253ad479c1e47993bd311d49420fc3740b03a" translate="yes" xml:space="preserve">
          <source>and to prevent the filter's being turned off in any way:</source>
          <target state="translated">と、フィルターが何らかの方法でオフになるのを防ぐために。</target>
        </trans-unit>
        <trans-unit id="f457722dbced2bf2ae91cbfea945e31146a31b39" translate="yes" xml:space="preserve">
          <source>and to set CCHOME, CCINCDIR and CCLIBDIR as per the environment setup above.</source>
          <target state="translated">を設定し、上記の環境設定通りにCCHOME、CCINCDIR、CCLIBDIRを設定します。</target>
        </trans-unit>
        <trans-unit id="0aad232792b4921467166acd4c29645d805793b6" translate="yes" xml:space="preserve">
          <source>and treat it as if it were:</source>
          <target state="translated">と、あたかもそうであるかのように扱う。</target>
        </trans-unit>
        <trans-unit id="d2fe6dcb8f246d2fce35f742575fa001821e5680" translate="yes" xml:space="preserve">
          <source>and tries again, since it's customary to have file types on all files under VMS.</source>
          <target state="translated">と再度試してみると、VMSの下ではすべてのファイルにファイルタイプがあるのが通例なので。</target>
        </trans-unit>
        <trans-unit id="3b1648c7e0ac8e95616dae97bc077625fd8d6af2" translate="yes" xml:space="preserve">
          <source>and uncomment the relevant variables near the end of the file.</source>
          <target state="translated">で、ファイルの最後近くにある関連する変数をアンコメントしてください。</target>
        </trans-unit>
        <trans-unit id="cfcf943d2393a6f28d49e0ffac0815fd27da0bf6" translate="yes" xml:space="preserve">
          <source>and uncomment the struct.</source>
          <target state="translated">で、struct のコメントを外します。</target>
        </trans-unit>
        <trans-unit id="9e6562a3babb41524cb81f0cde70dfef28222be8" translate="yes" xml:space="preserve">
          <source>and under Win32, the approximately equivalent:</source>
          <target state="translated">とWin32の下では、ほぼ同等です。</target>
        </trans-unit>
        <trans-unit id="41e4ffad70f25f822f518933170aa7926100a693" translate="yes" xml:space="preserve">
          <source>and upload to:</source>
          <target state="translated">にアップロードします。</target>
        </trans-unit>
        <trans-unit id="46d5ca958aec010c55ad2c03e5821dac149faf98" translate="yes" xml:space="preserve">
          <source>and use the &lt;code&gt;TIOCNOTTY&lt;/code&gt; ioctl() on it instead. See tty(4) for details.</source>
          <target state="translated">代わりに &lt;code&gt;TIOCNOTTY&lt;/code&gt; ioctl（）を使用してください。詳細については、tty（4）を参照してください。</target>
        </trans-unit>
        <trans-unit id="9f14a6780c851ae104f1481fc1a9906cf9782249" translate="yes" xml:space="preserve">
          <source>and wait:</source>
          <target state="translated">と待ってください。</target>
        </trans-unit>
        <trans-unit id="69c07c00f94d0c5b0709bf9c6938ba419bdf55e3" translate="yes" xml:space="preserve">
          <source>and when compiling the POSIX extension</source>
          <target state="translated">とPOSIX拡張をコンパイルする際に</target>
        </trans-unit>
        <trans-unit id="2ff77b4f27f07b0462faa89d7a400cf861b8c2d0" translate="yes" xml:space="preserve">
          <source>and will &lt;code&gt;die&lt;/code&gt; if a character larger than 255 is written to the handle. When reading, each octet from the handle becomes a byte-in-a-character. Note that this default is the same behaviour as bytes-only languages (including Perl before v5.6) would have, and is sufficient to handle native 8-bit encodings e.g. iso-8859-1, EBCDIC etc. and any legacy mechanisms for handling other encodings and binary data.</source>
          <target state="translated">ハンドルに255より大きい文字が書き込まれると &lt;code&gt;die&lt;/code&gt; ます。読み取るとき、ハンドルからの各オクテットは1文字のバイトになります。このデフォルトは、バイトのみの言語（v5.6より前のPerlを含む）と同じ動作であり、iso-8859-1、EBCDICなどのネイティブ8ビットエンコーディングおよび処理するためのレガシーメカニズムを処理するのに十分であることに注意してください。他のエンコーディングとバイナリデータ。</target>
        </trans-unit>
        <trans-unit id="6ee8bc7f7f274956ec858de1f58858d8da87dae0" translate="yes" xml:space="preserve">
          <source>and will work on any list:</source>
          <target state="translated">と、どのようなリストでも動作します。</target>
        </trans-unit>
        <trans-unit id="1b71ca4514d229280e1d7fa7d377d84757968bfa" translate="yes" xml:space="preserve">
          <source>and writes HTML files for each of these to a corresponding directory in</source>
          <target state="translated">の対応するディレクトリにそれぞれのHTMLファイルを書き込みます。</target>
        </trans-unit>
        <trans-unit id="56f643ea045d7d28116e861b4f87f762cdd48385" translate="yes" xml:space="preserve">
          <source>and you are attempting to remove an ancestor, such as</source>
          <target state="translated">のように、先祖を削除しようとしている場合は</target>
        </trans-unit>
        <trans-unit id="675d70b7c962e8ca4b793a761fbb9992623d3828" translate="yes" xml:space="preserve">
          <source>and you can create well-formed Unicode with</source>
          <target state="translated">で整形した Unicode を作成することができます。</target>
        </trans-unit>
        <trans-unit id="a13b7e19e07f86efe8137aeeee6e22f34019d0d4" translate="yes" xml:space="preserve">
          <source>and you don't care about &lt;code&gt;redundant&lt;/code&gt; warnings in more recent versions, you can call:</source>
          <target state="translated">また、最近のバージョンでは &lt;code&gt;redundant&lt;/code&gt; 警告を気にしない場合は、次のように呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="9c639a2ec15edc09ca8e02e951acf39319cc8f44" translate="yes" xml:space="preserve">
          <source>and you want to Export symbol &lt;code&gt;$A::b&lt;/code&gt; back to the module that called package A. Since Exporter relies on the import method to work, via inheritance, as it stands Exporter::import() will never get called. Instead, say the following:</source>
          <target state="translated">シンボル &lt;code&gt;$A::b&lt;/code&gt; をエクスポートしてパッケージAを呼び出したモジュールに戻したいとします。Exporter:: import（）が呼び出されることはないので、Exporterは継承を介してimportメソッドに依存しているため、機能します。代わりに、次のように言ってください。</target>
        </trans-unit>
        <trans-unit id="622cd26503fac9383fb718bed2b3ddba040f7083" translate="yes" xml:space="preserve">
          <source>and you want to produce an output like this, with each country mentioned once, and then an alphabetical list of the cities in that country:</source>
          <target state="translated">で、このような出力を作成したい場合は、それぞれの国が一度だけ言及され、その国の都市のアルファベット順のリストが表示されます。</target>
        </trans-unit>
        <trans-unit id="4c1468c599d605484919b48473553ef4293085c5" translate="yes" xml:space="preserve">
          <source>and you're done.</source>
          <target state="translated">と言って終わりです。</target>
        </trans-unit>
        <trans-unit id="b0adec687e3ab4fff14b5efa8b7087cfcfe80d04" translate="yes" xml:space="preserve">
          <source>and/or</source>
          <target state="translated">and/or</target>
        </trans-unit>
        <trans-unit id="9f29ab58f3ce583beed68be5f3bf29542855d9de" translate="yes" xml:space="preserve">
          <source>angles being equal to</source>
          <target state="translated">拮抗</target>
        </trans-unit>
        <trans-unit id="03f6df04819f61a4ed7725f72fc3f5557572193e" translate="yes" xml:space="preserve">
          <source>angles.</source>
          <target state="translated">angles.</target>
        </trans-unit>
        <trans-unit id="0a92fab3230134cca6eadd9898325b9b2ae67998" translate="yes" xml:space="preserve">
          <source>anonymous</source>
          <target state="translated">anonymous</target>
        </trans-unit>
        <trans-unit id="f3939ccfbbc78c50725aff277833f2cbdd31e9da" translate="yes" xml:space="preserve">
          <source>anonymous subroutine.)</source>
          <target state="translated">匿名サブルーチン)</target>
        </trans-unit>
        <trans-unit id="14ccf9a789edbcad8533f0e8977c70173ff9dfa6" translate="yes" xml:space="preserve">
          <source>anonymous@</source>
          <target state="translated">anonymous@</target>
        </trans-unit>
        <trans-unit id="b7c8ffb8fbc67c171328e0e8f643694e8e61b335" translate="yes" xml:space="preserve">
          <source>another</source>
          <target state="translated">another</target>
        </trans-unit>
        <trans-unit id="052319a3e5bb93ee7405765a73d430f34cc0defb" translate="yes" xml:space="preserve">
          <source>another simple word (note the lack of effect of the backslashed double-quote)</source>
          <target state="translated">さらっとした言葉</target>
        </trans-unit>
        <trans-unit id="49b2ac3b32339e34e4b9f904d93b48ebd2e613e1" translate="yes" xml:space="preserve">
          <source>ansi2knr.U</source>
          <target state="translated">ansi2knr.U</target>
        </trans-unit>
        <trans-unit id="c5fe0200d1c7a5139bd18fd22268c4ca8bf45e90" translate="yes" xml:space="preserve">
          <source>any</source>
          <target state="translated">any</target>
        </trans-unit>
        <trans-unit id="7696527a9b692224a3b35e3d1ce7238f165ab13d" translate="yes" xml:space="preserve">
          <source>any data associated with that attribute;</source>
          <target state="translated">その属性に関連付けられたデータ。</target>
        </trans-unit>
        <trans-unit id="9a459f25776e773a64e295d1cb084a05b171699e" translate="yes" xml:space="preserve">
          <source>any function in the DLL, just the act of loading this DLL will reset your flags. What is worse, the same compiler was used to compile some HOOK DLLs. Given that HOOK dlls are executed in the context of</source>
          <target state="translated">このDLLを読み込むだけでフラグがリセットされてしまいます。さらに悪いことに、同じコンパイラがいくつかのHOOK DLLのコンパイルに使用されています。HOOK DLLが</target>
        </trans-unit>
        <trans-unit id="e19bd065bb47fc295eafe4767c2de6b337ea119e" translate="yes" xml:space="preserve">
          <source>any leading &lt;code&gt;=&lt;/code&gt; prefix).</source>
          <target state="translated">先行 &lt;code&gt;=&lt;/code&gt; 接頭辞）。</target>
        </trans-unit>
        <trans-unit id="8b084990d915b056c34e7529bc336db861040427" translate="yes" xml:space="preserve">
          <source>any of the loaded</source>
          <target state="translated">積載されたいずれかの</target>
        </trans-unit>
        <trans-unit id="78e16822f2fffca52176d34705897fa841dd6f90" translate="yes" xml:space="preserve">
          <source>any one</source>
          <target state="translated">何れか</target>
        </trans-unit>
        <trans-unit id="f637daefbefeda9e4ed60d0501fba49913559846" translate="yes" xml:space="preserve">
          <source>any optional parameters that need to be sent to the filter. See the encode filter for an example of a module that uses parameters.</source>
          <target state="translated">フィルタに送る必要のある任意のパラメータを指定します。パラメータを使うモジュールの例については encode フィルタを参照してください。</target>
        </trans-unit>
        <trans-unit id="42323bfecca119f546c25856e4f9be955460919c" translate="yes" xml:space="preserve">
          <source>any previous content in &lt;code&gt;$tar&lt;/code&gt; !</source>
          <target state="translated">&lt;code&gt;$tar&lt;/code&gt; 以前のコンテンツ！</target>
        </trans-unit>
        <trans-unit id="3afb922a587bb71f0547be9515aa4d3cd4d7545c" translate="yes" xml:space="preserve">
          <source>any previous content in &lt;code&gt;$tar&lt;/code&gt;!</source>
          <target state="translated">&lt;code&gt;$tar&lt;/code&gt; 以前のコンテンツ！</target>
        </trans-unit>
        <trans-unit id="c9eb4e932e9bcc3bc1ece409a17107d5c50fed04" translate="yes" xml:space="preserve">
          <source>any starting with &lt;code&gt;(&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt; で始まるすべて</target>
        </trans-unit>
        <trans-unit id="d6a65efb0501666a4c913ea32a973da114f0ead8" translate="yes" xml:space="preserve">
          <source>any subroutine called from within that block</source>
          <target state="translated">そのブロック内から呼び出されたサブルーチン</target>
        </trans-unit>
        <trans-unit id="d75735d4f2964b91ad9a3f126838a4950222c638" translate="yes" xml:space="preserve">
          <source>any_dup</source>
          <target state="translated">any_dup</target>
        </trans-unit>
        <trans-unit id="035563ded8fdfc83ecef543e5bd6ec441f8b116a" translate="yes" xml:space="preserve">
          <source>anyinflate $input_filename_or_reference =&amp;gt; $output_filename_or_reference [, OPTS]</source>
          <target state="translated">anyinflate $ input_filename_or_reference =&amp;gt; $ output_filename_or_reference [、OPTS]</target>
        </trans-unit>
        <trans-unit id="8867c88b56e0bfb82cffaf15a66bc8d107d6754a" translate="yes" xml:space="preserve">
          <source>anything</source>
          <target state="translated">anything</target>
        </trans-unit>
        <trans-unit id="da86b2350d7133a0b9455e2c4cae962d691712b0" translate="yes" xml:space="preserve">
          <source>anything at all</source>
          <target state="translated">何が何でも</target>
        </trans-unit>
        <trans-unit id="bd4f0e49dee0e1f5509e5161f80bbbbf9009690f" translate="yes" xml:space="preserve">
          <source>anything by default (because you don't want to surprise your users... badly)</source>
          <target state="translated">デフォルトでは何でもいい(ユーザーを驚かせたくないから</target>
        </trans-unit>
        <trans-unit id="3c305d671dd1d39b0b5796b00915162f7f25d581" translate="yes" xml:space="preserve">
          <source>anything else</source>
          <target state="translated">他にも</target>
        </trans-unit>
        <trans-unit id="cad4d6d244c26510fb5dde9917efd285d64788e5" translate="yes" xml:space="preserve">
          <source>anything you don't need to (because less is more)</source>
          <target state="translated">余計なものは何でも</target>
        </trans-unit>
        <trans-unit id="faa4dad3e5b02731169057ea528c1d5f84a048de" translate="yes" xml:space="preserve">
          <source>anyuncompress $input_filename_or_reference =&amp;gt; $output_filename_or_reference [, OPTS]</source>
          <target state="translated">anyuncompress $ input_filename_or_reference =&amp;gt; $ output_filename_or_reference [、OPTS]</target>
        </trans-unit>
        <trans-unit id="66623d62c46dc1f443a91e7a202ce54689d760e0" translate="yes" xml:space="preserve">
          <source>anyway.</source>
          <target state="translated">anyway.</target>
        </trans-unit>
        <trans-unit id="112c2a063a0f6f3f9ba00da0de16624f951645e8" translate="yes" xml:space="preserve">
          <source>anywhere</source>
          <target state="translated">anywhere</target>
        </trans-unit>
        <trans-unit id="62eb0db178518a8376b23676c2639eb2732c0be8" translate="yes" xml:space="preserve">
          <source>apache</source>
          <target state="translated">apache</target>
        </trans-unit>
        <trans-unit id="1799678e58e199319930363fb4349a7bda81809f" translate="yes" xml:space="preserve">
          <source>apop ( [ USER [, PASS ]] )</source>
          <target state="translated">apop([USER [,PASS ]])</target>
        </trans-unit>
        <trans-unit id="55438ea85d41dfeeb55bbf581de97d7421de7539" translate="yes" xml:space="preserve">
          <source>appe ( FILE )</source>
          <target state="translated">アピール(ファイル )</target>
        </trans-unit>
        <trans-unit id="32e21d9b9cba5dad74e5e372580bff4069832094" translate="yes" xml:space="preserve">
          <source>appear as parameters to the Perl function. With the exception of &lt;code&gt;OUT&lt;/code&gt; -parameters, these parameters are converted to the corresponding C type, then pointers to these data are given as arguments to the C function. It is expected that the C function will write through these pointers.</source>
          <target state="translated">Perl関数のパラメーターとして表示されます。 &lt;code&gt;OUT&lt;/code&gt; パラメータを除いて、これらのパラメータは対応するCタイプに変換され、これらのデータへのポインタがC関数への引数として与えられます。C関数はこれらのポインターを介して書き込むことが期待されています。</target>
        </trans-unit>
        <trans-unit id="cce733e2e52d6811d59f9e92bcd7453e9f7358f6" translate="yes" xml:space="preserve">
          <source>appear as parameters to the Perl function. With the exception of &lt;code&gt;OUT&lt;/code&gt;-parameters, these parameters are converted to the corresponding C type, then pointers to these data are given as arguments to the C function. It is expected that the C function will write through these pointers.</source>
          <target state="translated">Perl関数のパラメータとして表示されます。 &lt;code&gt;OUT&lt;/code&gt; パラメータを除いて、これらのパラメータは対応するCタイプに変換され、これらのデータへのポインタがC関数への引数として与えられます。C関数はこれらのポインターを介して書き込むことが期待されます。</target>
        </trans-unit>
        <trans-unit id="24d201fd82f39662031e729d27fec76771838d92" translate="yes" xml:space="preserve">
          <source>appear in a package's &lt;code&gt;@ISA&lt;/code&gt; variable.</source>
          <target state="translated">パッケージの &lt;code&gt;@ISA&lt;/code&gt; 変数に表示されます。</target>
        </trans-unit>
        <trans-unit id="ef5924a72dac5871eee278d0ded5dbd03cc1c19b" translate="yes" xml:space="preserve">
          <source>appear within the tagged text.</source>
          <target state="translated">がタグ付けされたテキスト内に表示されます。</target>
        </trans-unit>
        <trans-unit id="db43bff34c78044870bc6b1ae2aa16902bb1bb8a" translate="yes" xml:space="preserve">
          <source>append</source>
          <target state="translated">append</target>
        </trans-unit>
        <trans-unit id="b088a1c828c8057744dd034bb109abe70bca297e" translate="yes" xml:space="preserve">
          <source>append ( LOCAL_FILE [, REMOTE_FILE ] )</source>
          <target state="translated">append(LOCAL_FILE [,REMOTE_FILE])</target>
        </trans-unit>
        <trans-unit id="f4c344e204efc94ce51191da11f8da619348e0f5" translate="yes" xml:space="preserve">
          <source>append_utf8_from_native_byte</source>
          <target state="translated">append_utf8_from_native_byte</target>
        </trans-unit>
        <trans-unit id="d2005cc206ccbfdedf2be43a200cb050c538bdb5" translate="yes" xml:space="preserve">
          <source>application</source>
          <target state="translated">application</target>
        </trans-unit>
        <trans-unit id="8989d4047c8e0af6470e1a43e2fe5c667bbe4c9e" translate="yes" xml:space="preserve">
          <source>application to watch the OutputDebugString() output:</source>
          <target state="translated">アプリケーションを使用して OutputDebugString()の出力を監視します。</target>
        </trans-unit>
        <trans-unit id="69f45da1683c501696ebfa086d25192af3807dc6" translate="yes" xml:space="preserve">
          <source>apply</source>
          <target state="translated">apply</target>
        </trans-unit>
        <trans-unit id="2506d0416452ba5f112bf6a2e2c408e20bd43027" translate="yes" xml:space="preserve">
          <source>apply_switch</source>
          <target state="translated">apply_switch</target>
        </trans-unit>
        <trans-unit id="3802a68da20f566d7fb269f15c34508be3676bf9" translate="yes" xml:space="preserve">
          <source>approximately</source>
          <target state="translated">approximately</target>
        </trans-unit>
        <trans-unit id="23d8e0156062165ca3736e9f1e364d414e1d82d5" translate="yes" xml:space="preserve">
          <source>ar</source>
          <target state="translated">ar</target>
        </trans-unit>
        <trans-unit id="cc11ed913f2110bdc6eb71426a4cc5c12f656f9b" translate="yes" xml:space="preserve">
          <source>arch and version subdirs</source>
          <target state="translated">アーチとバージョンのサブディレクトリ</target>
        </trans-unit>
        <trans-unit id="f8aca17f8dc62636fe56d26d991498181502da89" translate="yes" xml:space="preserve">
          <source>arch_check</source>
          <target state="translated">arch_check</target>
        </trans-unit>
        <trans-unit id="dd3193bba56c9212c61123bcc85fbecc046c671e" translate="yes" xml:space="preserve">
          <source>arch_check (override)</source>
          <target state="translated">アーチチェック</target>
        </trans-unit>
        <trans-unit id="f380cbcd9a79a4eadf3e8b625bfe9df4ee115aec" translate="yes" xml:space="preserve">
          <source>architecture</source>
          <target state="translated">architecture</target>
        </trans-unit>
        <trans-unit id="a07f43054e7ab8b8f32e28994504a2df3069bad6" translate="yes" xml:space="preserve">
          <source>archive if the crypt() function is not defined in the standard C library. It is up to the Makefile to use this.</source>
          <target state="translated">標準の C ライブラリで crypt()関数が定義されていない場合は、アーカイブを使用します。これを使うかどうかはMakefile次第です。</target>
        </trans-unit>
        <trans-unit id="aec82fb60d740fa3b0993aec0e9c124d53bbc3a4" translate="yes" xml:space="preserve">
          <source>archive member</source>
          <target state="translated">アーカイブメンバー</target>
        </trans-unit>
        <trans-unit id="3e69b8fc70a5737cecc8b69d72e0d8f7c8a1ae3a" translate="yes" xml:space="preserve">
          <source>archive member name</source>
          <target state="translated">アーカイブメンバー名</target>
        </trans-unit>
        <trans-unit id="ce1c532116fdc684b527b5d921d28bf41b305310" translate="yes" xml:space="preserve">
          <source>archive members</source>
          <target state="translated">アーカイブメンバー</target>
        </trans-unit>
        <trans-unit id="100ad6ee2f5499bff96b61a63b2efa0ea3981a7e" translate="yes" xml:space="preserve">
          <source>archlib.U</source>
          <target state="translated">archlib.U</target>
        </trans-unit>
        <trans-unit id="72b2a70ac7a2415a83e5898d42c24867ef6c76fb" translate="yes" xml:space="preserve">
          <source>archname.U</source>
          <target state="translated">archname.U</target>
        </trans-unit>
        <trans-unit id="d5067cf69455114e2110970315849096fa94f0fd" translate="yes" xml:space="preserve">
          <source>archname/</source>
          <target state="translated">archname/</target>
        </trans-unit>
        <trans-unit id="5f9e5802bbabc71f9275fccf122f5a52b8599f12" translate="yes" xml:space="preserve">
          <source>are</source>
          <target state="translated">are</target>
        </trans-unit>
        <trans-unit id="8dc07e958ba7e04dfd2e47ec804fc360ac6b560f" translate="yes" xml:space="preserve">
          <source>are 1, 224, 256, 384, 512, 512224, or 512256. It's also possible to use common string representations of the algorithm (e.g. &quot;sha256&quot;, &quot;SHA-384&quot;). If the argument is missing, SHA-1 will be used by default.</source>
          <target state="translated">は、1、224、256、384、512、512224、または512256です。アルゴリズムの一般的な文字列表現を使用することも可能です(例:&quot;SHA256&quot;、&quot;SHA-384&quot;)。引数が欠落している場合は、デフォルトでSHA-1が使用されます。</target>
        </trans-unit>
        <trans-unit id="636601f419388a6153a945c6b4c7740fff9805ee" translate="yes" xml:space="preserve">
          <source>are IANA-registered &lt;code&gt;charset&lt;/code&gt;s. See [RFC 2781] for details. Jungshik Shin reports that UTF-16 with a BOM is well accepted by MS IE 5/6 and NS 4/6. Beware however that</source>
          <target state="translated">IANAに登録された &lt;code&gt;charset&lt;/code&gt; です。詳細については、[RFC2781]を参照してください。Jungshik Shinは、BOMを備えたUTF-16がMS IE5 / 6およびNS4 / 6で広く受け入れられていると報告しています。ただし、注意してください</target>
        </trans-unit>
        <trans-unit id="b3e8825648e40951cf73eb803bb3033952b8d48a" translate="yes" xml:space="preserve">
          <source>are a collection of character code sets from the International Organization for Standardization (ISO), each of which adds characters to the ASCII set that are typically found in various languages, many of which are based on the Roman, or Latin, alphabet. Most are for European languages, but there are also ones for Arabic, Greek, Hebrew, and Thai. There are good references on the web about all these.</source>
          <target state="translated">は、国際標準化機構 (ISO)からの文字コードセットのコレクションで、それぞれの文字は、一般的に様々な言語で見られる ASCII セットに文字を追加しますが、その多くはローマ字、またはラテン語のアルファベットに基づいています。ほとんどはヨーロッパの言語用ですが、アラビア語、ギリシャ語、ヘブライ語、タイ語用のものもあります。これらについては、ウェブ上に良い参考文献があります。</target>
        </trans-unit>
        <trans-unit id="de4fe4ffac933dfb4f0c5094e64bc601a7611806" translate="yes" xml:space="preserve">
          <source>are all equal.</source>
          <target state="translated">はすべて等しくなります。</target>
        </trans-unit>
        <trans-unit id="40cd33871ba50f9d26f25a0b0967a938c3c33a02" translate="yes" xml:space="preserve">
          <source>are allowed.</source>
          <target state="translated">が許されています。</target>
        </trans-unit>
        <trans-unit id="3e1131dc785866fbebf7ccb8d1293f801f197a2a" translate="yes" xml:space="preserve">
          <source>are also always exempt from such warnings.</source>
          <target state="translated">は、常にそのような警告の対象外となっています。</target>
        </trans-unit>
        <trans-unit id="5fcbd6f84c4cae433390a20653865fe7ad335515" translate="yes" xml:space="preserve">
          <source>are also defined. Thus, &lt;code&gt;LATIN CAPITAL LETTER A WITH ACUTE&lt;/code&gt; is in</source>
          <target state="translated">も定義されています。したがって、 &lt;code&gt;LATIN CAPITAL LETTER A WITH ACUTE&lt;/code&gt; は</target>
        </trans-unit>
        <trans-unit id="6ae709307e670bf5e63517c3569658dffb47078b" translate="yes" xml:space="preserve">
          <source>are automatically added to every regular expression till the end of the lexical scope.</source>
          <target state="translated">は、語彙スコープが終了するまで、すべての正規表現に自動的に追加されます。</target>
        </trans-unit>
        <trans-unit id="770b01f5221d280697bb0ba87d0e2d9db74e1a94" translate="yes" xml:space="preserve">
          <source>are comic references to the egg-eating habits of the little-endian Lilliputians and the big-endian Blefuscudians from the classic Jonathan Swift satire,</source>
          <target state="translated">は、古典的なジョナサン・スウィフトの風刺からリトルエンディアンのLilliputiansとビッグエンディアンのBlefuscudiansの卵を食べる習慣へのコミカルな参照です。</target>
        </trans-unit>
        <trans-unit id="11b947ce1fea4f347faeb86b5b573b53f785e4b2" translate="yes" xml:space="preserve">
          <source>are complex patterns. Until the &lt;code&gt;(*PRUNE)&lt;/code&gt; verb is reached,</source>
          <target state="translated">複雑なパターンです。までは &lt;code&gt;(*PRUNE)&lt;/code&gt; 動詞に達し、</target>
        </trans-unit>
        <trans-unit id="daac3dfff48cc466d9ca23db01b2c0a1076fa335" translate="yes" xml:space="preserve">
          <source>are converted to all uppercase for look-up. Other than that, both of them follow &lt;a href=&quot;#LOOSE-MATCHES&quot;&gt;loose&lt;/a&gt; rules if &lt;code&gt;:loose&lt;/code&gt; is also specified; strict otherwise.</source>
          <target state="translated">ルックアップのためにすべて大文字に変換されます。それ以外は、 &lt;code&gt;:loose&lt;/code&gt; も指定されている場合、どちらも&lt;a href=&quot;#LOOSE-MATCHES&quot;&gt;ルーズ&lt;/a&gt;ルールに従います。そうでなければ厳格です。</target>
        </trans-unit>
        <trans-unit id="3ef4b9fd15129bb4ba23b3e2d5f6b2f50984d837" translate="yes" xml:space="preserve">
          <source>are deleted. (Note that this is slightly more flexible than the behavior of some &lt;b&gt;tr&lt;/b&gt; programs, which delete anything they find in the</source>
          <target state="translated">削除されます。（これは、一部の&lt;b&gt;tr&lt;/b&gt;プログラムの動作よりもやや柔軟であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="e553ec1da64a1470d4a07b9f0ea75b9f2786fbbc" translate="yes" xml:space="preserve">
          <source>are designed to test things that run thousands of times slower if a particular optimisation is broken (for example, the utf8 length cache on long utf8 strings). Add a test that will take a fraction of a second normally, and minutes otherwise, causing the test file to time out on failure.</source>
          <target state="translated">は、特定の最適化が壊れている場合に、何千倍も遅く実行されるものをテストするために設計されています (例えば、長い utf8 文字列の utf8 長さキャッシュなど)。通常は数分の1秒、そうでない場合は数分かかるテストを追加し、失敗したときにテストファイルがタイムアウトするようにします。</target>
        </trans-unit>
        <trans-unit id="7e73ed4d4def3b0046261b7c95b17ebd584def24" translate="yes" xml:space="preserve">
          <source>are either deleted from the target string if &lt;code&gt;/d&lt;/code&gt; is specified; or replaced by the final character in</source>
          <target state="translated">&lt;code&gt;/d&lt;/code&gt; が指定されている場合、ターゲット文字列から削除されます。またはの最後の文字に置き換えられます</target>
        </trans-unit>
        <trans-unit id="7d19bbed1db5eb79730973a9f9a4bc06ef968d56" translate="yes" xml:space="preserve">
          <source>are exempt from warnings (because they care about truth rather than definedness). Operators such as &lt;code&gt;++&lt;/code&gt; , &lt;code&gt;--&lt;/code&gt; , &lt;code&gt;+=&lt;/code&gt; , &lt;code&gt;-=&lt;/code&gt; , and &lt;code&gt;.=&lt;/code&gt; , that operate on undefined variables such as:</source>
          <target state="translated">警告から免除されている（定義されているかどうかよりも真実に関心があるため）。 &lt;code&gt;++&lt;/code&gt; 、 &lt;code&gt;--&lt;/code&gt; 、 &lt;code&gt;+=&lt;/code&gt; 、 &lt;code&gt;-=&lt;/code&gt; 、 &lt;code&gt;.=&lt;/code&gt; などの演算子は、次のような未定義の変数を操作します。</target>
        </trans-unit>
        <trans-unit id="97f63e7ae336dfa4123620ffa25d37b43de233fe" translate="yes" xml:space="preserve">
          <source>are exempt from warnings (because they care about truth rather than definedness). Operators such as &lt;code&gt;++&lt;/code&gt;, &lt;code&gt;--&lt;/code&gt;, &lt;code&gt;+=&lt;/code&gt;, &lt;code&gt;-=&lt;/code&gt;, and &lt;code&gt;.=&lt;/code&gt;, that operate on undefined variables such as:</source>
          <target state="translated">警告は免除されます（定義よりも真実を重視するため）。 &lt;code&gt;++&lt;/code&gt; 、 &lt;code&gt;--&lt;/code&gt; 、 &lt;code&gt;+=&lt;/code&gt; 、 &lt;code&gt;-=&lt;/code&gt; 、 &lt;code&gt;.=&lt;/code&gt; などの演算子は、次のような未定義の変数を操作します。</target>
        </trans-unit>
        <trans-unit id="5057aa4e52a95f389308d1244df9e17bc251d60c" translate="yes" xml:space="preserve">
          <source>are generated. If there are</source>
          <target state="translated">が生成されます。がある場合には</target>
        </trans-unit>
        <trans-unit id="12a000f6ee5e215e7e0046022ea40ecb006f16ef" translate="yes" xml:space="preserve">
          <source>are hexadecimal digits, matches the character whose native ordinal is</source>
          <target state="translated">が16進数である場合、ネイティブの序数が</target>
        </trans-unit>
        <trans-unit id="39e300e92d55897673ef91e24c657fab7d7f2f47" translate="yes" xml:space="preserve">
          <source>are hexadecimal digits, matches the character whose ordinal is</source>
          <target state="translated">が16進数の場合、序数が</target>
        </trans-unit>
        <trans-unit id="0396f8fab0fd4ee1179eee3502c230f019ae22d2" translate="yes" xml:space="preserve">
          <source>are in effect, &lt;code&gt;postprocess&lt;/code&gt; is a no-op.</source>
          <target state="translated">有効な場合、 &lt;code&gt;postprocess&lt;/code&gt; は何もしません。</target>
        </trans-unit>
        <trans-unit id="570405f9be4be3ed167dfbbb5eecc3ddbaa2bed9" translate="yes" xml:space="preserve">
          <source>are in effect, &lt;code&gt;preprocess&lt;/code&gt; is a no-op.</source>
          <target state="translated">有効な場合、 &lt;code&gt;preprocess&lt;/code&gt; は何もしません。</target>
        </trans-unit>
        <trans-unit id="fedda21f963002d22ee355f74566c5941f369717" translate="yes" xml:space="preserve">
          <source>are latitudes: zero at the North Pole, northward positive, southward negative. &lt;b&gt;NOTE&lt;/b&gt;: this formula thinks in mathematics, not geographically: the</source>
          <target state="translated">緯度です：北極でゼロ、北向きで正、南向きで負。&lt;b&gt;注&lt;/b&gt;：この式は地理的にではなく数学で考えています。</target>
        </trans-unit>
        <trans-unit id="ade037758549b480d28d475043ed26d68ea7200e" translate="yes" xml:space="preserve">
          <source>are limited to non-negative integral values less than a preset limit defined when perl is built. This is usually 32766 on the most common platforms. The actual limit can be seen in the error message generated by code such as this:</source>
          <target state="translated">は、Perlがビルドされたときに定義されたプリセットの制限値よりも小さい非負の積分値に制限されます。これは通常、最も一般的なプラットフォームでは 32766 です。実際の制限値は、このようなコードで生成されるエラーメッセージで確認できます。</target>
        </trans-unit>
        <trans-unit id="a431c3157083cfaa848431ab6951d8e26a4c0c12" translate="yes" xml:space="preserve">
          <source>are longitudes: zero at the Greenwhich meridian, eastward positive, westward negative -- and the</source>
          <target state="translated">は縦軸です:緑の子午線でゼロ、東に正、西に負--そして</target>
        </trans-unit>
        <trans-unit id="609716f862354a27aae0296acc60afdae2c70a58" translate="yes" xml:space="preserve">
          <source>are not always present. The</source>
          <target state="translated">が存在するとは限りません。のは、そのような場合のための</target>
        </trans-unit>
        <trans-unit id="46c8feb754cc537b05ea38e46f4716d3389f6083" translate="yes" xml:space="preserve">
          <source>are not checked for taintedness. This requires extra carefulness unless you want external data to affect your control flow. Unless you carefully limit what these symbolic values are, people are able to call functions &lt;b&gt;outside&lt;/b&gt; your Perl code, such as POSIX::system, in which case they are able to run arbitrary external code.</source>
          <target state="translated">汚染のチェックは行われません。外部データが制御フローに影響を与えたくない場合を除き、これには特別な注意が必要です。これらのシンボリック値を慎重に制限しない限り、人々はPOSIX :: systemなどのPerlコードの&lt;b&gt;外部の&lt;/b&gt;関数を呼び出すことができます。その場合、任意の外部コードを実行できます。</target>
        </trans-unit>
        <trans-unit id="5ccd41f08ede872f51066757b8c4ae13668882ad" translate="yes" xml:space="preserve">
          <source>are not equivalent;</source>
          <target state="translated">は等価ではありません。</target>
        </trans-unit>
        <trans-unit id="3dbd91a738da0c945eed880dcd55854536701ae2" translate="yes" xml:space="preserve">
          <source>are not implemented.</source>
          <target state="translated">は実装されていません。</target>
        </trans-unit>
        <trans-unit id="d2b97aebc4deb474b3edf462a85d2011cb2609d5" translate="yes" xml:space="preserve">
          <source>are not present by default in compressed data streams. They must have been added explicitly when the data stream was created by calling &lt;code&gt;Compress::Deflate::flush&lt;/code&gt; with &lt;code&gt;Z_FULL_FLUSH&lt;/code&gt; .</source>
          <target state="translated">デフォルトでは、圧縮データストリームには存在しません。 &lt;code&gt;Z_FULL_FLUSH&lt;/code&gt; を指定して &lt;code&gt;Compress::Deflate::flush&lt;/code&gt; を呼び出してデータストリームを作成したときに、これらは明示的に追加されている必要があります。</target>
        </trans-unit>
        <trans-unit id="bb66588bb9e8219965c9e8e3652212ab6d91d5f9" translate="yes" xml:space="preserve">
          <source>are not present by default in compressed data streams. They must have been added explicitly when the data stream was created by calling &lt;code&gt;Compress::Deflate::flush&lt;/code&gt; with &lt;code&gt;Z_FULL_FLUSH&lt;/code&gt;.</source>
          <target state="translated">圧縮されたデータストリームにはデフォルトでは存在しません。これらは、データストリームが作成されたときに、 &lt;code&gt;Z_FULL_FLUSH&lt;/code&gt; を使用して &lt;code&gt;Compress::Deflate::flush&lt;/code&gt; を呼び出して明示的に追加されている必要があります。</target>
        </trans-unit>
        <trans-unit id="40db504d084e6e3300a4b8d81479b259b9880a4a" translate="yes" xml:space="preserve">
          <source>are not set.</source>
          <target state="translated">が設定されていません。</target>
        </trans-unit>
        <trans-unit id="1d74281d1301f35973cccef918ad9c2a8a370111" translate="yes" xml:space="preserve">
          <source>are numbers from 0 to 5 giving the intensity of red, green, and blue. &lt;code&gt;on_&lt;/code&gt; variants of all of these colors are also provided. These colors may be ignored completely on non-256-color terminals or may be misinterpreted and produce random behavior. Additional attributes such as blink, italic, or bold may not work with the 256-color palette.</source>
          <target state="translated">赤、緑、青の強度を示す0〜5の数値です。これらすべての色の &lt;code&gt;on_&lt;/code&gt; バリアントも提供されています。これらの色は、256色以外の端末では完全に無視されるか、誤って解釈されてランダムな動作をする可能性があります。ブリンク、イタリック、ボールドなどの追加属性は、256色パレットでは機能しない場合があります。</target>
        </trans-unit>
        <trans-unit id="d2c7c9a6f736994e6c2a0a531d7cba7ff69a9a00" translate="yes" xml:space="preserve">
          <source>are numbers from 0 to 5 giving the intensity of red, green, and blue. The grey and RGB colors are also available as &lt;code&gt;ansi16&lt;/code&gt; through &lt;code&gt;ansi255&lt;/code&gt; if you want simple names for all 256 colors. &lt;code&gt;on_&lt;/code&gt; variants of all of these colors are also provided. These colors may be ignored completely on non-256-color terminals or may be misinterpreted and produce random behavior. Additional attributes such as blink, italic, or bold may not work with the 256-color palette.</source>
          <target state="translated">赤、緑、青の強度を示す0から5までの数字です。256色すべてに単純な名前が必要な場合は、灰色とRGBの色を &lt;code&gt;ansi16&lt;/code&gt; から &lt;code&gt;ansi255&lt;/code&gt; として使用することもできます。これらすべての色の &lt;code&gt;on_&lt;/code&gt; バリアントも提供されます。これらの色は、256色以外の端末では完全に無視されるか、誤って解釈されてランダムな動作を引き起こす可能性があります。点滅、斜体、太字などの追加の属性は、256色パレットでは機能しない場合があります。</target>
        </trans-unit>
        <trans-unit id="ee047ace3155120c0c998a4fbef3fd51e859a9c4" translate="yes" xml:space="preserve">
          <source>are provided with &lt;code&gt;-MCross&lt;/code&gt; so to enable cross- compile.</source>
          <target state="translated">クロスコンパイルを有効にするために &lt;code&gt;-MCross&lt;/code&gt; で提供されます。</target>
        </trans-unit>
        <trans-unit id="c8a812a79d5485356c9599734e6c7857321c8eef" translate="yes" xml:space="preserve">
          <source>are registered with IANA as preferred MIME names and may be used over the Internet.</source>
          <target state="translated">は優先的なMIME名としてIANAに登録されており、インターネット上で使用することができます。</target>
        </trans-unit>
        <trans-unit id="fbbf84bcdae10459f4be5e4c43dfcd186671107d" translate="yes" xml:space="preserve">
          <source>are regular expressions, in the context of a larger regular expression, that function independently of the larger regular expression. That is, they consume as much or as little of the string as they wish without regard for the ability of the larger regexp to match. Independent subexpressions are represented by &lt;code&gt;(?&amp;gt;regexp)&lt;/code&gt;. We can illustrate their behavior by first considering an ordinary regexp:</source>
          <target state="translated">より大きな正規表現のコンテキストで、より大きな正規表現とは独立して機能する正規表現です。つまり、より大きな正規表現が一致する能力に関係なく、必要なだけ文字列を消費します。独立した部分式は &lt;code&gt;(?&amp;gt;regexp)&lt;/code&gt; で表されます。最初に通常の正規表現を検討することで、それらの動作を説明できます。</target>
        </trans-unit>
        <trans-unit id="bf6b8a83833152c05402e374a039993996c3a5f4" translate="yes" xml:space="preserve">
          <source>are relocated relative to the directory containing the perl binary, and a logical cleanup of the path is then made around the join point (removing</source>
          <target state="translated">が perl バイナリを含むディレクトリに相対的に再配置され、パスの論理的なクリーンアップが結合点の周りで行われます (</target>
        </trans-unit>
        <trans-unit id="c22d2121cf1ad3c9fdf597eb6ea7a9ec831c3008" translate="yes" xml:space="preserve">
          <source>are similar to these:</source>
          <target state="translated">はこれらに似ています。</target>
        </trans-unit>
        <trans-unit id="5daee755ffcc3e1b323374ccd7080b09b7b8a3b2" translate="yes" xml:space="preserve">
          <source>are simply the file names of the test scripts to run.</source>
          <target state="translated">は実行するテストスクリプトのファイル名です。</target>
        </trans-unit>
        <trans-unit id="6e4996c18d9f0a898ac21d0f2e3859496ded49d7" translate="yes" xml:space="preserve">
          <source>are single quotes (&lt;code&gt;tr'&lt;i&gt;SEARCHLIST&lt;/i&gt;'&lt;i&gt;REPLACEMENTLIST&lt;/i&gt;'&lt;/code&gt;), the only interpolation is removal of &lt;code&gt;\&lt;/code&gt; from pairs of &lt;code&gt;\\&lt;/code&gt;.</source>
          <target state="translated">単一引用符がある（ &lt;code&gt;tr'&lt;i&gt;SEARCHLIST&lt;/i&gt;'&lt;i&gt;REPLACEMENTLIST&lt;/i&gt;'&lt;/code&gt; ）、唯一の補間はの除去である &lt;code&gt;\&lt;/code&gt; のペアから &lt;code&gt;\\&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a838d9cdd9a1dd5272e9fd20337bdc1878418242" translate="yes" xml:space="preserve">
          <source>are special. &quot;null&quot; fails for all character so when you set fallback mode to PERLQQ, HTMLCREF or XMLCREF, ALL CHARACTERS will fall back to character references. Ditto for &quot;ascii-ctrl&quot; except for control characters. For fallback modes, see &lt;a href=&quot;encode&quot;&gt;Encode&lt;/a&gt;.</source>
          <target state="translated">特別です。「null」はすべての文字で失敗するため、フォールバックモードをPERLQQ、HTMLCREF、またはXMLCREFに設定すると、すべての文字が文字参照にフォールバックします。制御文字を除く「ascii-ctrl」についても同様です。フォールバックモードについては、&lt;a href=&quot;encode&quot;&gt;エンコードを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="097a56ab5012c31b2588a7fcf5955a17a3d173fe" translate="yes" xml:space="preserve">
          <source>are specified in the same way as command line options:</source>
          <target state="translated">はコマンドラインオプションと同じように指定します。</target>
        </trans-unit>
        <trans-unit id="78aee12896fca1df627811f8bc479814fea0b083" translate="yes" xml:space="preserve">
          <source>are subjected to double quote interpolation. That means that if you want to use variables, you must use an &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval()&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">二重引用符で補間されます。つまり、変数を使用する場合は、 &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval()&lt;/a&gt;&lt;/code&gt; を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="d8ce495ebadd54a3aea5534a54d3ed1890116603" translate="yes" xml:space="preserve">
          <source>are subjected to double quote interpolation. That means that if you want to use variables, you must use an &lt;code&gt;eval()&lt;/code&gt;:</source>
          <target state="translated">二重引用符の補間が行われます。つまり、変数を使用する場合は、 &lt;code&gt;eval()&lt;/code&gt; を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="1660aa40e15fa486c99c667a79b0b660d94e44d8" translate="yes" xml:space="preserve">
          <source>are supported by a data structure called the</source>
          <target state="translated">というデータ構造によってサポートされています。</target>
        </trans-unit>
        <trans-unit id="b0525539dbfb2e75b20f33ebd3a32d8383ed15e2" translate="yes" xml:space="preserve">
          <source>are text editors for OS X that have a Perl sensitivity mode ( &lt;a href=&quot;http://www.barebones.com/&quot;&gt;http://www.barebones.com/&lt;/a&gt; ).</source>
          <target state="translated">Perl感度モード（&lt;a href=&quot;http://www.barebones.com/&quot;&gt;http://www.barebones.com/&lt;/a&gt;）を備えたOS X用のテキストエディタです。</target>
        </trans-unit>
        <trans-unit id="8f5de845a40e63e6edb669bb61faa6f919437589" translate="yes" xml:space="preserve">
          <source>are the list-type ops to concatenate.</source>
          <target state="translated">は連結するリスト型の操作です。</target>
        </trans-unit>
        <trans-unit id="7df1a21211f78189703a86e3cbb836a7e63fe998" translate="yes" xml:space="preserve">
          <source>are the range &lt;code&gt;U+D800..U+DBFF&lt;/code&gt; and the</source>
          <target state="translated">範囲は &lt;code&gt;U+D800..U+DBFF&lt;/code&gt; であり、</target>
        </trans-unit>
        <trans-unit id="e10ada24dcf0e25f997bb273775bbfb50fbba99d" translate="yes" xml:space="preserve">
          <source>are the range &lt;code&gt;U+DC00..U+DFFF&lt;/code&gt; . The surrogate encoding is</source>
          <target state="translated">範囲は &lt;code&gt;U+DC00..U+DFFF&lt;/code&gt; です。サロゲートエンコーディングは</target>
        </trans-unit>
        <trans-unit id="c989bfbe77103d980620a3c854a885a1e8a7d19d" translate="yes" xml:space="preserve">
          <source>are the range &lt;code&gt;U+DC00..U+DFFF&lt;/code&gt;. The surrogate encoding is</source>
          <target state="translated">範囲は &lt;code&gt;U+DC00..U+DFFF&lt;/code&gt; です。代理エンコーディングは</target>
        </trans-unit>
        <trans-unit id="7fb58a3423afb25ba8d716d2723dadfbadf6664c" translate="yes" xml:space="preserve">
          <source>are totally valid encodings but not registered at IANA. The names under which they are listed here are probably the most widely-known names for these encodings and are recommended names.</source>
          <target state="translated">は完全に有効なエンコーディングですが、 IANA には登録されていません。ここに記載されている名前は、おそらくこれらのエンコーディングで最も広く知られている名前であり、推奨されている名前です。</target>
        </trans-unit>
        <trans-unit id="b02d00372e009301b6f76aac94b40c9dd1c62278" translate="yes" xml:space="preserve">
          <source>are treated as infinite loops.</source>
          <target state="translated">は無限ループとして扱われます。</target>
        </trans-unit>
        <trans-unit id="b69d4058e49518cf15c9514191d73871d3c11840" translate="yes" xml:space="preserve">
          <source>are two hex digits) doesn't go further than 255. (Starting in Perl 5.14, if you're an octal fan, you can also use &lt;code&gt;\o{oct}&lt;/code&gt;.)</source>
          <target state="translated">は2桁の16進数です）は255を超えません。（Perl 5.14以降、8進数のファンの場合は、 &lt;code&gt;\o{oct}&lt;/code&gt; 使用することもできます。）</target>
        </trans-unit>
        <trans-unit id="7ceaee791c3214e301c067af0fb90e4e9184e870" translate="yes" xml:space="preserve">
          <source>are used in absolutely incompatible manner. Parameters to these functions could be described &lt;b&gt;xsubpp&lt;/b&gt; like this:</source>
          <target state="translated">まったく互換性のない方法で使用されています。これらの関数のパラメーターは、次のように&lt;b&gt;xsubpp&lt;/b&gt;で説明できます。</target>
        </trans-unit>
        <trans-unit id="225abc0f937024b5e6707bd1f4cf5fc01203b6c7" translate="yes" xml:space="preserve">
          <source>are used to allow the calling code to think that there is only one such encoding. This is almost always referred to as &lt;code&gt;utf8&lt;/code&gt; , but it means the EBCDIC version as well. Again, comments in the code may well be wrong even if the code itself is right. For example, the concept of UTF-8 &lt;code&gt;invariant
characters&lt;/code&gt; differs between ASCII and EBCDIC. On ASCII platforms, only characters that do not have the high-order bit set (i.e. whose ordinals are strict ASCII, 0 - 127) are invariant, and the documentation and comments in the code may assume that, often referring to something like, say, &lt;code&gt;hibit&lt;/code&gt; . The situation differs and is not so simple on EBCDIC machines, but as long as the code itself uses the &lt;code&gt;NATIVE_IS_INVARIANT()&lt;/code&gt; macro appropriately, it works, even if the comments are wrong.</source>
          <target state="translated">呼び出しコードがそのようなエンコーディングが1つしかないと考えることができるようにするために使用されます。これは、ほとんど常に &lt;code&gt;utf8&lt;/code&gt; と呼ばれますが、EBCDICバージョンも意味します。繰り返しになりますが、コード自体が正しい場合でも、コード内のコメントは間違っている可能性があります。たとえば、ASCIIとEBCDICでは、UTF-8 &lt;code&gt;invariant characters&lt;/code&gt; の概念が異なります。 ASCIIプラットフォームでは、高位ビットが設定されていない文字（つまり、序数が厳密なASCII、0〜127）のみが不変であり、コード内のドキュメントとコメントは、たとえば、 、 &lt;code&gt;hibit&lt;/code&gt; 。状況は異なり、EBCDICマシンではそれほど単純ではありませんが、コード自体が &lt;code&gt;NATIVE_IS_INVARIANT()&lt;/code&gt; を使用している限り マクロが適切に機能すれば、コメントが間違っていても機能します。</target>
        </trans-unit>
        <trans-unit id="e7f4df1405160e9c5b49e4d9bd56cbd0f69b35f7" translate="yes" xml:space="preserve">
          <source>are used to allow the calling code to think that there is only one such encoding. This is almost always referred to as &lt;code&gt;utf8&lt;/code&gt;, but it means the EBCDIC version as well. Again, comments in the code may well be wrong even if the code itself is right. For example, the concept of UTF-8 &lt;code&gt;invariant characters&lt;/code&gt; differs between ASCII and EBCDIC. On ASCII platforms, only characters that do not have the high-order bit set (i.e. whose ordinals are strict ASCII, 0 - 127) are invariant, and the documentation and comments in the code may assume that, often referring to something like, say, &lt;code&gt;hibit&lt;/code&gt;. The situation differs and is not so simple on EBCDIC machines, but as long as the code itself uses the &lt;code&gt;NATIVE_IS_INVARIANT()&lt;/code&gt; macro appropriately, it works, even if the comments are wrong.</source>
          <target state="translated">呼び出し元のコードがそのようなエンコーディングが1つしかないことを認識できるようにするために使用されます。これはほとんどの場合 &lt;code&gt;utf8&lt;/code&gt; と呼ばれますが、EBCDICバージョンも意味します。繰り返しますが、コード自体が正しい場合でも、コード内のコメントは間違っている可能性があります。たとえば、UTF-8 &lt;code&gt;invariant characters&lt;/code&gt; の概念は、ASCIIとEBCDICで異なります。ASCIIプラットフォームでは、上位ビットが設定されていない文字（つまり、序数が厳密なASCII、0〜127）のみが不変であり、コード内のドキュメントとコメントは、次のようなものを参照することが多いと想定している場合があります。 、 &lt;code&gt;hibit&lt;/code&gt; 。EBCDICマシンでは状況が異なり、それほど単純ではありませんが、コード自体が &lt;code&gt;NATIVE_IS_INVARIANT()&lt;/code&gt; を使用している限りです。 マクロは適切に機能し、コメントが間違っていても機能します。</target>
        </trans-unit>
        <trans-unit id="b5e6f047bd2af282863f2c0acfd2b4831e04019f" translate="yes" xml:space="preserve">
          <source>are used to refer to the relative positioning of the stack layers.</source>
          <target state="translated">は、スタック層の相対的な位置関係を参照するために使用されます。</target>
        </trans-unit>
        <trans-unit id="79c5c14521f2fdbf7474b004cb4f21e3735f3d69" translate="yes" xml:space="preserve">
          <source>are usually from the standards &lt;b&gt;ISO 3166&lt;/b&gt; and &lt;b&gt;ISO 639&lt;/b&gt;, the two-letter abbreviations for the countries and the languages of the world, respectively. The</source>
          <target state="translated">通常、&lt;b&gt;ISO 3166&lt;/b&gt;と&lt;b&gt;ISO 639の&lt;/b&gt;規格からそれぞれの国と世界の言語を表す2文字の略語です。の</target>
        </trans-unit>
        <trans-unit id="e6b83e0d18c05db2e099977bc4d92896d38a2907" translate="yes" xml:space="preserve">
          <source>are what is fed to &lt;code&gt;ok(...)&lt;/code&gt; if this test isn't skipped.</source>
          <target state="translated">このテストがスキップされない場合に &lt;code&gt;ok(...)&lt;/code&gt; に提供されるものです。</target>
        </trans-unit>
        <trans-unit id="624cd1f425ffb0afe6e743d09639a61c5ac6e5af" translate="yes" xml:space="preserve">
          <source>aren't</source>
          <target state="translated">aren't</target>
        </trans-unit>
        <trans-unit id="04d6e2b300911995efa37b6707fdc02975a3021c" translate="yes" xml:space="preserve">
          <source>arg</source>
          <target state="translated">arg</target>
        </trans-unit>
        <trans-unit id="e044db5cacc7c1e1ded3c45fa7472331fe5e6246" translate="yes" xml:space="preserve">
          <source>arg1</source>
          <target state="translated">arg1</target>
        </trans-unit>
        <trans-unit id="b38facf4a8f9f6e8fc7192d1cbc326386647f4c1" translate="yes" xml:space="preserve">
          <source>arg2</source>
          <target state="translated">arg2</target>
        </trans-unit>
        <trans-unit id="3030e728f154bf51419109efb93b6b8aeec9a976" translate="yes" xml:space="preserve">
          <source>args</source>
          <target state="translated">args</target>
        </trans-unit>
        <trans-unit id="0f3802314d747bbc5016897875185c3a9fae57bf" translate="yes" xml:space="preserve">
          <source>argument</source>
          <target state="translated">argument</target>
        </trans-unit>
        <trans-unit id="d8d433b9ebc59257b2702d1e5069f881de7eb837" translate="yes" xml:space="preserve">
          <source>argument (using &lt;code&gt;threads::joinable&lt;/code&gt; ), returns a list of all non-joined, non-detached</source>
          <target state="translated">引数（ &lt;code&gt;threads::joinable&lt;/code&gt; を使用）、すべての非結合、非分離のリストを返します</target>
        </trans-unit>
        <trans-unit id="3aa1722ee6a3fbb43a386edfe0a4443a9379b6cc" translate="yes" xml:space="preserve">
          <source>argument (using &lt;code&gt;threads::joinable&lt;/code&gt;), returns a list of all non-joined, non-detached</source>
          <target state="translated">引数（ &lt;code&gt;threads::joinable&lt;/code&gt; を使用）は、すべての非結合、非分離のリストを返します</target>
        </trans-unit>
        <trans-unit id="75fa8514a906cf4d46ad0af7f07708ece0b99d60" translate="yes" xml:space="preserve">
          <source>argument (using &lt;code&gt;threads::running&lt;/code&gt; ), returns a list of all non-joined, non-detached</source>
          <target state="translated">引数（ &lt;code&gt;threads::running&lt;/code&gt; を使用）、すべての非結合、非分離のリストを返します</target>
        </trans-unit>
        <trans-unit id="97ba3baaeabaca14baa3cc7d89714aa165f51fdf" translate="yes" xml:space="preserve">
          <source>argument (using &lt;code&gt;threads::running&lt;/code&gt;), returns a list of all non-joined, non-detached</source>
          <target state="translated">引数（ &lt;code&gt;threads::running&lt;/code&gt; を使用）は、結合されていない、分離されていないすべてのリストを返します</target>
        </trans-unit>
        <trans-unit id="d3aa5b01cae682ed2f47655046c91faa406d82a7" translate="yes" xml:space="preserve">
          <source>argument is in the customary binary format used for Perl strings.</source>
          <target state="translated">引数はPerlの文字列で使用される慣習的なバイナリ形式です。</target>
        </trans-unit>
        <trans-unit id="5bc5346716c03ee04dad8fb513609b63a372ea19" translate="yes" xml:space="preserve">
          <source>argument is optional; in some cases, it is mandatory.</source>
          <target state="translated">引数はオプションで、場合によっては必須です。</target>
        </trans-unit>
        <trans-unit id="cd393b012062093f38db6d2b39b7ceda6271e2a9" translate="yes" xml:space="preserve">
          <source>argument specifies that &lt;code&gt;autosplit&lt;/code&gt; is to check the modification time of the module against that of the &lt;code&gt;autosplit.ix&lt;/code&gt; file, and only split the module if it is newer. $modtime defaults to 1.</source>
          <target state="translated">引数は、 &lt;code&gt;autosplit&lt;/code&gt; がモジュールの変更時間を &lt;code&gt;autosplit.ix&lt;/code&gt; ファイルの変更時間と照合してチェックし、モジュールが新しい場合にのみモジュールを分割することを指定します。$ modtimeのデフォルトは1です。</target>
        </trans-unit>
        <trans-unit id="1a29b569d43822c3afa1f10f2e311200106908b4" translate="yes" xml:space="preserve">
          <source>argument tells &lt;code&gt;Encode&lt;/code&gt; what to do when encountering malformed data. Without</source>
          <target state="translated">引数は、不正なデータに遭遇したときに何をするかを &lt;code&gt;Encode&lt;/code&gt; 指示します。なし</target>
        </trans-unit>
        <trans-unit id="f8d9ac9f93a7c2347999f2cbea28206b99e65b72" translate="yes" xml:space="preserve">
          <source>argument to &lt;code&gt;when&lt;/code&gt; does is hard to describe precisely, but in general, it tries to guess what you want done. Sometimes it is interpreted as &lt;code&gt;$_ ~~ &lt;i&gt;EXPR&lt;/i&gt;&lt;/code&gt;, and sometimes it is not. It also behaves differently when lexically enclosed by a &lt;code&gt;given&lt;/code&gt; block than it does when dynamically enclosed by a &lt;code&gt;foreach&lt;/code&gt; loop. The rules are far too difficult to understand to be described here. See &lt;a href=&quot;#Experimental-Details-on-given-and-when&quot;&gt;&quot;Experimental Details on given and when&quot;&lt;/a&gt; later on.</source>
          <target state="translated">&lt;code&gt;when&lt;/code&gt; 行うかについての議論は正確に説明するのは難しいですが、一般的に、それはあなたが何をしたいのかを推測しようとします。 &lt;code&gt;$_ ~~ &lt;i&gt;EXPR&lt;/i&gt;&lt;/code&gt; として解釈されることもあれば、そうでないこともあります。また、 &lt;code&gt;given&lt;/code&gt; ブロックで字句的に囲まれている場合と、 &lt;code&gt;foreach&lt;/code&gt; ループで動的に囲まれている場合とでは動作が異なります。ルールを理解するのは非常に難しく、ここで説明することはできません。後の&lt;a href=&quot;#Experimental-Details-on-given-and-when&quot;&gt;「与えられたときの実験の詳細」を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="2e918e513d7e7933ffcc3b08aa036254e58b7109" translate="yes" xml:space="preserve">
          <source>argument to &lt;code&gt;when&lt;/code&gt; does is hard to describe precisely, but in general, it tries to guess what you want done. Sometimes it is interpreted as &lt;code&gt;$_ ~~ &lt;i&gt;EXPR&lt;/i&gt;&lt;/code&gt;, and sometimes it is not. It also behaves differently when lexically enclosed by a &lt;code&gt;given&lt;/code&gt; block than it does when dynamically enclosed by a &lt;code&gt;foreach&lt;/code&gt; loop. The rules are far too difficult to understand to be described here. See &lt;a href=&quot;#Experimental-Details-on-given-and-when&quot;&gt;Experimental Details on given and when&lt;/a&gt; later on.</source>
          <target state="translated">&lt;code&gt;when&lt;/code&gt; の引数を正確に説明することは困難ですが、一般的には、何をしたいのかを推測しようとします。 &lt;code&gt;$_ ~~ &lt;i&gt;EXPR&lt;/i&gt;&lt;/code&gt; として解釈される場合もあれば、そうでない場合もあります。また、 &lt;code&gt;given&lt;/code&gt; されたブロックによって字句的に囲まれた場合と、 &lt;code&gt;foreach&lt;/code&gt; ループによって動的に囲まれた場合とでは、動作が異なります。ここで説明するには、ルールを理解するのは非常に困難です。&lt;a href=&quot;#Experimental-Details-on-given-and-when&quot;&gt;与えられた、および&lt;/a&gt;後でいつ実験の詳細を参照してください。</target>
        </trans-unit>
        <trans-unit id="e08f7198b54296915eb6e0097b8ceca98cfafe50" translate="yes" xml:space="preserve">
          <source>argument to one of the following values:</source>
          <target state="translated">引数を以下のいずれかの値に設定します。</target>
        </trans-unit>
        <trans-unit id="3abba5546715d0ff24cfa816d8610e27353a5e14" translate="yes" xml:space="preserve">
          <source>argument will be true if there is a layer below and that layer was expecting UTF-8.</source>
          <target state="translated">引数は、下にレイヤーがあり、そのレイヤーがUTF-8を期待していた場合に真になります。</target>
        </trans-unit>
        <trans-unit id="77d4f1467ed49524381be69d50a3bb40b010d3c6" translate="yes" xml:space="preserve">
          <source>argument, &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; will cause only the thread to exit. With a</source>
          <target state="translated">引数、 &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; はスレッドのみを終了させます。とともに</target>
        </trans-unit>
        <trans-unit id="5e1a5dc31772bb5680208573714d0df8690531e4" translate="yes" xml:space="preserve">
          <source>argument, &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; will terminate the application.</source>
          <target state="translated">引数、 &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; はアプリケーションを終了します。</target>
        </trans-unit>
        <trans-unit id="c353caecf10c950bccccbbae0f2e6c9aa6877d67" translate="yes" xml:space="preserve">
          <source>argument, &lt;code&gt;exit()&lt;/code&gt; will cause only the thread to exit. With a</source>
          <target state="translated">引数 &lt;code&gt;exit()&lt;/code&gt; を使用すると、スレッドのみが終了します。とともに</target>
        </trans-unit>
        <trans-unit id="4eb3d37fc015710e9f6fb48fd8cf1fbae8638195" translate="yes" xml:space="preserve">
          <source>argument, &lt;code&gt;exit()&lt;/code&gt; will terminate the application.</source>
          <target state="translated">引数、 &lt;code&gt;exit()&lt;/code&gt; はアプリケーションを終了します。</target>
        </trans-unit>
        <trans-unit id="cff32fbb8900b87449ed727fccd847391fb13379" translate="yes" xml:space="preserve">
          <source>argument. For example, &lt;a href=&quot;Encode::Unicode&quot;&gt;Encode::Unicode&lt;/a&gt; ignores</source>
          <target state="translated">引数。たとえば、&lt;a href=&quot;Encode::Unicode&quot;&gt;Encode :: Unicode&lt;/a&gt;は無視します</target>
        </trans-unit>
        <trans-unit id="11b4277f19e0685458402bdc5d7577a60a68c705" translate="yes" xml:space="preserve">
          <source>argument. For example, &lt;a href=&quot;encode/unicode&quot;&gt;Encode::Unicode&lt;/a&gt; ignores</source>
          <target state="translated">引数。たとえば、&lt;a href=&quot;encode/unicode&quot;&gt;Encode :: Unicode&lt;/a&gt;は無視します</target>
        </trans-unit>
        <trans-unit id="d4da21b9484bced14bdff9911f748d00022f7cf3" translate="yes" xml:space="preserve">
          <source>argument. Use &lt;b&gt;-Ilib&lt;/b&gt;, for instance. &lt;b&gt;-I lib&lt;/b&gt; won't work.</source>
          <target state="translated">引数。&lt;b&gt;たとえば&lt;/b&gt;、&lt;b&gt;-Ilibを&lt;/b&gt;使用します。&lt;b&gt;-私はlib&lt;/b&gt;が動作しません。</target>
        </trans-unit>
        <trans-unit id="9077da4d0275ca769922dd3ab43da95b6ef7b997" translate="yes" xml:space="preserve">
          <source>arguments are allowed, provided that</source>
          <target state="translated">引数が許可されています。</target>
        </trans-unit>
        <trans-unit id="168293336923dcdfadd4e17664f5fabfcd3ee1d2" translate="yes" xml:space="preserve">
          <source>arguments can be ignored in most cases)</source>
          <target state="translated">引数はほとんどの場合無視できます)</target>
        </trans-unit>
        <trans-unit id="a144cfdf650067c37a4a69dac8b434fbb91f984b" translate="yes" xml:space="preserve">
          <source>arguments have been parsed (so you can not change the way arguments are processed, sorry), typically with the &lt;code&gt;-P&lt;i&gt;plugin&lt;/i&gt;&lt;/code&gt; switch, eg:</source>
          <target state="translated">引数は解析されています（そのため、引数の処理方法を変更することはできません。申し訳ありません）。通常は &lt;code&gt;-P&lt;i&gt;plugin&lt;/i&gt;&lt;/code&gt; スイッチを使用します。例：</target>
        </trans-unit>
        <trans-unit id="93520313719be4cf49f3e938fc38e935e34348fd" translate="yes" xml:space="preserve">
          <source>argv[1]</source>
          <target state="translated">argv[1]</target>
        </trans-unit>
        <trans-unit id="083082af3264d59ab17f2c00e32def6a2f7aa65a" translate="yes" xml:space="preserve">
          <source>arithmetic shift</source>
          <target state="translated">算術シフト</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
