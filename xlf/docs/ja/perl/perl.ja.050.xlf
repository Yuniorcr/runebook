<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="76f20337385d20643255669a22fe71db0ac20c35" translate="yes" xml:space="preserve">
          <source>Real numbers (floats and doubles) are in native machine format only. Due to the multiplicity of floating-point formats and the lack of a standard &quot;network&quot; representation for them, no facility for interchange has been made. This means that packed floating-point data written on one machine may not be readable on another, even if both use IEEE floating-point arithmetic (because the endianness of the memory representation is not part of the IEEE spec). See also &lt;a href=&quot;../perlport&quot;&gt;perlport&lt;/a&gt;.</source>
          <target state="translated">実数（floatおよびdouble）は、ネイティブマシン形式のみです。浮動小数点形式の多様性とそれらの標準的な「ネットワーク」表現の欠如のため、交換のための機能は作られていません。つまり、1つのマシンに書き込まれたパックド浮動小数点データは、両方がIEEE浮動小数点演算を使用していても、別のマシンでは読み取れない場合があります（メモリ表現のエンディアンがIEEE仕様の一部ではないため）。&lt;a href=&quot;../perlport&quot;&gt;perlport&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="511f764d325082297dba12502ae4d85c90f1ad3d" translate="yes" xml:space="preserve">
          <source>Real numbers (floats and doubles) are in native machine format only. Due to the multiplicity of floating-point formats and the lack of a standard &quot;network&quot; representation for them, no facility for interchange has been made. This means that packed floating-point data written on one machine may not be readable on another, even if both use IEEE floating-point arithmetic (because the endianness of the memory representation is not part of the IEEE spec). See also &lt;a href=&quot;perlport&quot;&gt;perlport&lt;/a&gt;.</source>
          <target state="translated">実数（floatおよびdouble）は、ネイティブマシン形式のみです。浮動小数点形式の多様性とそれらの標準的な「ネットワーク」表現の欠如のため、交換のための機能は作られていません。つまり、1つのマシンに書き込まれたパックド浮動小数点データは、両方がIEEE浮動小数点演算を使用していても、別のマシンでは読み取れない場合があります（メモリ表現のエンディアンがIEEE仕様の一部ではないため）。&lt;a href=&quot;perlport&quot;&gt;perlport&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="345756ac5d37feff0f0546c1865e36b9fef67964" translate="yes" xml:space="preserve">
          <source>Real-valued asin and acos</source>
          <target state="translated">実質値のアシンとアコス</target>
        </trans-unit>
        <trans-unit id="98eae458347524e0a37c19eccffdef33a86d012d" translate="yes" xml:space="preserve">
          <source>Reallocates the lexer buffer (&lt;a href=&quot;#PL_parser-%3Elinestr&quot;&gt;&quot;PL_parser-&amp;gt;linestr&quot;&lt;/a&gt;) to accommodate at least &lt;code&gt;len&lt;/code&gt; octets (including terminating &lt;code&gt;NUL&lt;/code&gt;). Returns a pointer to the reallocated buffer. This is necessary before making any direct modification of the buffer that would increase its length. &lt;a href=&quot;#lex_stuff_pvn&quot;&gt;&quot;lex_stuff_pvn&quot;&lt;/a&gt; provides a more convenient way to insert text into the buffer.</source>
          <target state="translated">少なくとも &lt;code&gt;len&lt;/code&gt; オクテット（ &lt;code&gt;NUL&lt;/code&gt; の終了を含む）に対応するために、レクサーバッファー（&lt;a href=&quot;#PL_parser-%3Elinestr&quot;&gt;&quot;PL_parser-&amp;gt; linestr&quot;&lt;/a&gt;）を再割り当てします。再割り当てされたバッファへのポインタを返します。これは、バッファの長さを増やすようなバッファを直接変更する前に必要です。&lt;a href=&quot;#lex_stuff_pvn&quot;&gt;「lex_stuff_pvn」&lt;/a&gt;は、バッファにテキストを挿入するためのより便利な方法を提供します。</target>
        </trans-unit>
        <trans-unit id="cabe4e85411c8ef34282f94190186b8b9fc58c2f" translate="yes" xml:space="preserve">
          <source>Reallocates the lexer buffer (&lt;a href=&quot;#PL_parser-%3elinestr&quot;&gt;PL_parser-&amp;gt;linestr&lt;/a&gt;) to accommodate at least</source>
          <target state="translated">少なくとも対応できるように、字句解析バッファ（&lt;a href=&quot;#PL_parser-%3elinestr&quot;&gt;PL_parser-&amp;gt; linestr&lt;/a&gt;）を再割り当てします</target>
        </trans-unit>
        <trans-unit id="6938dd783f19a2f3db9807cf29082d79ed6cb489" translate="yes" xml:space="preserve">
          <source>Reallocation</source>
          <target state="translated">Reallocation</target>
        </trans-unit>
        <trans-unit id="61aa9bbb4c0a00690da2fb1168771f641dccdbf1" translate="yes" xml:space="preserve">
          <source>Reallocation too large: %x</source>
          <target state="translated">再割り当てが大きすぎます。</target>
        </trans-unit>
        <trans-unit id="4190f114778ebce2a04705901ceb6f8314011d5a" translate="yes" xml:space="preserve">
          <source>Really</source>
          <target state="translated">Really</target>
        </trans-unit>
        <trans-unit id="9705f19cb29576c25ae7985604008a2d57721c53" translate="yes" xml:space="preserve">
          <source>Really Symbolic Calculator</source>
          <target state="translated">本当に記号的な計算機</target>
        </trans-unit>
        <trans-unit id="66af3b687388d0a216b97c12ae6eef0ac4e6badc" translate="yes" xml:space="preserve">
          <source>Really means this:</source>
          <target state="translated">本当にこれを意味します。</target>
        </trans-unit>
        <trans-unit id="811ca5b8b081194af2cb6112878b04c438c79ce4" translate="yes" xml:space="preserve">
          <source>Really really odious function to implement. Returns absolute name of file which would have &lt;code&gt;name&lt;/code&gt; if CWD were &lt;code&gt;dir&lt;/code&gt; . &lt;code&gt;Dir&lt;/code&gt; defaults to the current dir.</source>
          <target state="translated">実装する本当に本当にいやらしい機能。CWDが &lt;code&gt;dir&lt;/code&gt; である場合に &lt;code&gt;name&lt;/code&gt; を持つファイルの絶対名を返します。 &lt;code&gt;Dir&lt;/code&gt; のデフォルトは現在のディレクトリです。</target>
        </trans-unit>
        <trans-unit id="6b196766d3f2e5fe326d267fa0e8dbb283269b53" translate="yes" xml:space="preserve">
          <source>Really really odious function to implement. Returns absolute name of file which would have &lt;code&gt;name&lt;/code&gt; if CWD were &lt;code&gt;dir&lt;/code&gt;. &lt;code&gt;Dir&lt;/code&gt; defaults to the current dir.</source>
          <target state="translated">実装するのは本当にいやらしい機能です。CWDが &lt;code&gt;dir&lt;/code&gt; の場合に &lt;code&gt;name&lt;/code&gt; を持つファイルの絶対名を返します。 &lt;code&gt;Dir&lt;/code&gt; は、デフォルトで現在のdirになります。</target>
        </trans-unit>
        <trans-unit id="e7f09e464378ff3e2cda54610b59653e4b6a4242" translate="yes" xml:space="preserve">
          <source>Rearranged slightly by Elizabeth Mattijsen &amp;lt;liz@dijkmat.nl&amp;gt; to put less emphasis on yield().</source>
          <target state="translated">Elizabeth Mattijsen &amp;lt;liz@dijkmat.nl&amp;gt;によってわずかに再配置され、yield（）があまり重視されなくなりました。</target>
        </trans-unit>
        <trans-unit id="8b1549347e4087fcd87d6c01881ced2f24ad2286" translate="yes" xml:space="preserve">
          <source>Rearranged slightly by Elizabeth Mattijsen &amp;lt;liz@dijkmat.nl&amp;lt;gt&amp;gt; to put less emphasis on yield().</source>
          <target state="translated">Elizabeth Mattijsen &amp;lt;liz@dijkmat.nl &amp;lt;gt&amp;gt;によって若干並べ替えられ、yield（）はあまり強調されていません。</target>
        </trans-unit>
        <trans-unit id="5c5705151cccd0f7888f60304194ae2c9cd9a3ff" translate="yes" xml:space="preserve">
          <source>Reasonable effort was made to make this module efficient. Nevertheless, changing the size of a record in the middle of a large file will always be fairly slow, because everything after the new record must be moved.</source>
          <target state="translated">このモジュールを効率的にするための合理的な努力がなされました。それにもかかわらず、大きなファイルの途中でレコードのサイズを変更するのは、新しいレコードの後のすべてを移動しなければならないので、常にかなり遅くなります。</target>
        </trans-unit>
        <trans-unit id="0b2e87d53c1bd4d2970bb9abec1535fdbf6be844" translate="yes" xml:space="preserve">
          <source>Reassign a list of disk blocks to the disk's spare-block pool. &lt;code&gt;$opOutBuf&lt;/code&gt; should be &lt;code&gt;[]&lt;/code&gt;. &lt;code&gt;$pInBuf&lt;/code&gt; should be a &lt;code&gt;REASSIGN_BLOCKS&lt;/code&gt; data structure:</source>
          <target state="translated">ディスクブロックのリストをディスクのスペアブロックプールに再割り当てします。 &lt;code&gt;$opOutBuf&lt;/code&gt; は &lt;code&gt;[]&lt;/code&gt; である必要があります。 &lt;code&gt;$pInBuf&lt;/code&gt; は、 &lt;code&gt;REASSIGN_BLOCKS&lt;/code&gt; データ構造である必要があります。</target>
        </trans-unit>
        <trans-unit id="366a2da021c72ceccf726ee373e11b71a20bf943" translate="yes" xml:space="preserve">
          <source>Rebase dll's with the global rebase database after installation.</source>
          <target state="translated">インストール後、グローバルリベースデータベースを使用してdllをリベースします。</target>
        </trans-unit>
        <trans-unit id="33fbef776bfe0b931e07cfc875995536b06a1504" translate="yes" xml:space="preserve">
          <source>Recall that Perl recognizes an extension to UTF-8 that can encode code points larger than the ones defined by Unicode, which are 0..0x10FFFF.</source>
          <target state="translated">Perl は UTF-8 の拡張機能を認識しており、Unicode で定義されているコードポイント(0~0x10FFFF)よりも大きなコードポイントをエンコードすることができます。</target>
        </trans-unit>
        <trans-unit id="b3679c3f6c1d56464e9b8199c035d6cb387d84b7" translate="yes" xml:space="preserve">
          <source>Recall that the usual method of determining the type of scalar you have is to use &lt;code&gt;Sv*OK&lt;/code&gt; macros. Because a scalar can be both a number and a string, usually these macros will always return TRUE and calling the &lt;code&gt;Sv*V&lt;/code&gt; macros will do the appropriate conversion of string to integer/double or integer/double to string.</source>
          <target state="translated">使用しているスカラーのタイプを判別する通常の方法は、 &lt;code&gt;Sv*OK&lt;/code&gt; マクロを使用することであることを思い出してください。スカラーは数値と文字列の両方になる可能性があるため、通常、これらのマクロは常にTRUEを返し、 &lt;code&gt;Sv*V&lt;/code&gt; マクロを呼び出すと、文字列から整数/倍精度または整数/倍精度から文字列への適切な変換が行われます。</target>
        </trans-unit>
        <trans-unit id="697aa894ae3557d90e8ed57f819aed04622ff78d" translate="yes" xml:space="preserve">
          <source>Recall that which of</source>
          <target state="translated">思い出してみてください</target>
        </trans-unit>
        <trans-unit id="ec663ccb44dacf5122cda8bcd99fadf939083b21" translate="yes" xml:space="preserve">
          <source>Recall that which of &lt;code&gt;yes-pattern&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no-pattern&lt;/a&gt;&lt;/code&gt; actually matches is already determined. The ordering of the matches is the same as for the chosen subexpression.</source>
          <target state="translated">ことを思い出し &lt;code&gt;yes-pattern&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no-pattern&lt;/a&gt;&lt;/code&gt; 実際に一致したが、既に決定されます。一致の順序は、選択された部分式と同じです。</target>
        </trans-unit>
        <trans-unit id="d263055fde281ba8a2782128f5b26bfb60c6278f" translate="yes" xml:space="preserve">
          <source>Receives a message on a socket. Attempts to receive &lt;code&gt;$length&lt;/code&gt; characters of data into &lt;code&gt;$buffer&lt;/code&gt; from the specified socket. &lt;code&gt;$buffer&lt;/code&gt; will be grown or shrunk to the length actually read. Takes the same flags as the system call of the same name. Returns the address of the sender if socket's protocol supports this; returns an empty string otherwise. If there's an error, returns &lt;code&gt;undef&lt;/code&gt;. This call is actually implemented in terms of the &lt;code&gt;recvfrom(2)&lt;/code&gt; system call.</source>
          <target state="translated">ソケットでメッセージを受信します。指定されたソケットから &lt;code&gt;$buffer&lt;/code&gt; &lt;code&gt;$length&lt;/code&gt; 文字のデータを受信しようとします。 &lt;code&gt;$buffer&lt;/code&gt; は、実際に読み取られた長さまで拡大または縮小されます。同じ名前のシステムコールと同じフラグを取ります。ソケットのプロトコルがこれをサポートしている場合、送信者のアドレスを返します。それ以外の場合は空の文字列を返します。エラーがある場合は、 &lt;code&gt;undef&lt;/code&gt; を返します。この呼び出しは、実際には &lt;code&gt;recvfrom(2)&lt;/code&gt; システムコールの観点から実装されています。</target>
        </trans-unit>
        <trans-unit id="baa982fd4e6e1dcbe436dae28b9ec1d7a59a9b35" translate="yes" xml:space="preserve">
          <source>Receives a message on a socket. Attempts to receive LENGTH characters of data into variable SCALAR from the specified SOCKET filehandle. SCALAR will be grown or shrunk to the length actually read. Takes the same flags as the system call of the same name. Returns the address of the sender if SOCKET's protocol supports this; returns an empty string otherwise. If there's an error, returns the undefined value. This call is actually implemented in terms of recvfrom(2) system call. See &lt;a href=&quot;../perlipc#UDP%3a-Message-Passing&quot;&gt;UDP: Message Passing in perlipc&lt;/a&gt; for examples.</source>
          <target state="translated">ソケットでメッセージを受信します。指定されたSOCKETファイルハンドルから変数SCALARにデータのLENGTH文字を受信しようとします。SCALARは、実際に読み取られた長さに拡大または縮小されます。同じ名前のシステムコールと同じフラグを取ります。SOCKETのプロトコルがこれをサポートしている場合、送信者のアドレスを返します。それ以外の場合は空の文字列を返します。エラーがある場合は、未定義の値を返します。この呼び出しは、実際にはrecvfrom（2）システムコールの観点から実装されています。例については、&lt;a href=&quot;../perlipc#UDP%3a-Message-Passing&quot;&gt;UDP：perlipc&lt;/a&gt;でのメッセージの受け渡しを参照してください。</target>
        </trans-unit>
        <trans-unit id="f25c6e85b1574838eeb148ca7e9557ca09fab6e8" translate="yes" xml:space="preserve">
          <source>Receives a message on a socket. Attempts to receive LENGTH characters of data into variable SCALAR from the specified SOCKET filehandle. SCALAR will be grown or shrunk to the length actually read. Takes the same flags as the system call of the same name. Returns the address of the sender if SOCKET's protocol supports this; returns an empty string otherwise. If there's an error, returns the undefined value. This call is actually implemented in terms of recvfrom(2) system call. See &lt;a href=&quot;perlipc#UDP%3a-Message-Passing&quot;&gt;UDP: Message Passing in perlipc&lt;/a&gt; for examples.</source>
          <target state="translated">ソケットでメッセージを受信します。指定されたSOCKETファイルハンドルから変数SCALARにデータのLENGTH文字を受信しようとします。SCALARは、実際に読み取られた長さに拡大または縮小されます。同じ名前のシステムコールと同じフラグを取ります。SOCKETのプロトコルがこれをサポートしている場合、送信者のアドレスを返します。それ以外の場合は空の文字列を返します。エラーがある場合は、未定義の値を返します。この呼び出しは、実際にはrecvfrom（2）システムコールの観点から実装されています。例については、&lt;a href=&quot;perlipc#UDP%3a-Message-Passing&quot;&gt;UDP：perlipc&lt;/a&gt;でのメッセージの受け渡しを参照してください。</target>
        </trans-unit>
        <trans-unit id="831f33025bc87648839d175b744e05ef47188610" translate="yes" xml:space="preserve">
          <source>Receives a message on a socket. Attempts to receive LENGTH characters of data into variable SCALAR from the specified SOCKET filehandle. SCALAR will be grown or shrunk to the length actually read. Takes the same flags as the system call of the same name. Returns the address of the sender if SOCKET's protocol supports this; returns an empty string otherwise. If there's an error, returns the undefined value. This call is actually implemented in terms of the &lt;a href=&quot;http://man.he.net/man2/recvfrom&quot;&gt;recvfrom(2)&lt;/a&gt; system call. See &lt;a href=&quot;perlipc#UDP%3A-Message-Passing&quot;&gt;&quot;UDP: Message Passing&quot; in perlipc&lt;/a&gt; for examples.</source>
          <target state="translated">ソケットでメッセージを受信します。指定されたSOCKETファイルハンドルから変数SCALARにデータのLENGTH文字を受信しようとします。 SCALARは、実際に読み取られた長さまで拡大または縮小されます。同じ名前のシステムコールと同じフラグを取ります。 SOCKETのプロトコルがこれをサポートしている場合、送信者のアドレスを返します。それ以外の場合は空の文字列を返します。エラーがある場合は、未定義の値を返します。この呼び出しは、実際には&lt;a href=&quot;http://man.he.net/man2/recvfrom&quot;&gt;recvfrom（2）&lt;/a&gt;システムコールの観点から実装されています。例について&lt;a href=&quot;perlipc#UDP%3A-Message-Passing&quot;&gt;は、perlipcの「UDP：メッセージパッシング」を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="cb0fdbf19a5aad7a7c626acf2e170a45e9945622" translate="yes" xml:space="preserve">
          <source>Recent additions and current maintenance by Paul Evans, &amp;lt;leonerd@leonerd.org.uk&amp;gt;.</source>
          <target state="translated">Paul Evans &amp;lt;leonerd@leonerd.org.uk&amp;gt;による最近の追加と現在のメンテナンス。</target>
        </trans-unit>
        <trans-unit id="34eaa50bdc006fd02951d60039d068fbfe490ffb" translate="yes" xml:space="preserve">
          <source>Recent changes in this release, especially incompatibilities</source>
          <target state="translated">このリリースでの最近の変更点、特に非互換性について</target>
        </trans-unit>
        <trans-unit id="ce746d3f125725bd67a16fc76426e418eb2553c2" translate="yes" xml:space="preserve">
          <source>Recent perl test suite is quite memory hungry. In addition to the comments above on memory limitations it is also worth checking for _CEE_RUNOPTS in your environment. Perl now has (in miniperlmain.c) a C #pragma to set CEE run options, but the environment variable wins.</source>
          <target state="translated">最近のperlのテストスイートはかなりメモリを消費します。上記のメモリ制限に関するコメントに加えて、環境変数に_CEE_RUNOPTSがあるかどうかもチェックする価値があります。Perl は (miniperlmain.c に)CEE の実行オプションを設定するための C #pragma を持っていますが、環境変数が勝っています。</target>
        </trans-unit>
        <trans-unit id="cd809045ecd1f6fec2192a41771410596322bb48" translate="yes" xml:space="preserve">
          <source>Recent versions of</source>
          <target state="translated">の最近のバージョン</target>
        </trans-unit>
        <trans-unit id="895baf2f2b923b6b05ff0ce7fe4004e464717b54" translate="yes" xml:space="preserve">
          <source>Recent versions of Emacs come with a start file for making &lt;b&gt;emacs&lt;/b&gt; act like a syntax-directed editor that understands (some of) Perl's syntax. See &lt;a href=&quot;perlfaq3&quot;&gt;perlfaq3&lt;/a&gt;.</source>
          <target state="translated">Emacsの最近のバージョンには、&lt;b&gt;emacsを&lt;/b&gt;（一部の）Perlの構文を理解する構文指向エディターのように動作させるための開始ファイルが付属しています。&lt;a href=&quot;perlfaq3&quot;&gt;perlfaq3を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="ee4c74e680482edd915062ce4b3176aca1d6a560" translate="yes" xml:space="preserve">
          <source>Recent versions of MakeMaker will only install man pages on Unix-like operating systems by default. To generate manpages on non-Unix operating systems, make the &quot;manifypods&quot; target.</source>
          <target state="translated">MakeMaker の最近のバージョンでは、デフォルトでは Unix 系の OS にのみ man ページがインストールされます。Unix 系以外の OS で man ページを生成するには、&quot;manifypods&quot; ターゲットを作成してください。</target>
        </trans-unit>
        <trans-unit id="73e20a3b8b070519bf410698695bcd5424fa0a92" translate="yes" xml:space="preserve">
          <source>Recent versions of MakeMaker will only install man pages on Unix-like operating systems.</source>
          <target state="translated">MakeMaker の最近のバージョンでは、Unix 系の OS にしか man ページをインストールできません。</target>
        </trans-unit>
        <trans-unit id="331a914f82c03970764682292750cf208864b12a" translate="yes" xml:space="preserve">
          <source>Recently I've been rekindling a two-decades-old interest in Forth. Evidently I have a masochistic streak that even Perl can't satisfy. I want to write tests in Forth and run them using prove (you can find my gforth TAP experiments at https://svn.hexten.net/andy/Forth/Testing/). I can use the --exec switch to tell prove to run the tests using gforth like this:</source>
          <target state="translated">最近、私は二十数年前からのForthへの興味を再燃させています。明らかに私にはPerlでさえ満足できないマゾヒスティックな傾向があります。私は Forth でテストを書いて prove を使って実行したいと思っています (私の gforth TAP の実験は https://svn.hexten.net/andy/Forth/Testing/で見ることができます)。このように --exec スイッチを使って、gforth を使ってテストを実行するように prove に指示することができます。</target>
        </trans-unit>
        <trans-unit id="49d40e56ce8bbf7d9e92f3015c908f2c59ec4661" translate="yes" xml:space="preserve">
          <source>Recently someone mentioned to me that the Memoize module made his program run slower instead of faster. It turned out that he was memoizing the following function:</source>
          <target state="translated">最近、ある人が私に言ったのですが、Memoizeモジュールは彼のプログラムを高速化するのではなく、より遅く実行するようにしたと。その人が以下の関数をメモしていたことが判明しました。</target>
        </trans-unit>
        <trans-unit id="8f7f4c997bb15ee0fbad757704fc3f421c86dab0" translate="yes" xml:space="preserve">
          <source>Recently, the plan has been to release a new version of Perl roughly every April, but getting the release right is more important than sticking rigidly to a calendar date, so the release date is somewhat flexible. The historical release dates can be viewed at &lt;a href=&quot;http://www.cpan.org/src/README.html&quot;&gt;http://www.cpan.org/src/README.html&lt;/a&gt;.</source>
          <target state="translated">最近の計画では、ほぼ毎年4月に新しいバージョンのPerlをリリースする予定ですが、リリース日を厳格に守るよりも、リリースを正しく行うことが重要なので、リリース日は多少柔軟です。過去のリリース日は&lt;a href=&quot;http://www.cpan.org/src/README.html&quot;&gt;http://www.cpan.org/src/README.htmlで&lt;/a&gt;確認できます。</target>
        </trans-unit>
        <trans-unit id="8eddef3b133a821ffbd00447eb75db2f14179551" translate="yes" xml:space="preserve">
          <source>Recipes for using Locale::Maketext</source>
          <target state="translated">Locale::Maketext を利用したレシピ</target>
        </trans-unit>
        <trans-unit id="ede1bc7e918b59a97957a2f687780bd460ba3031" translate="yes" xml:space="preserve">
          <source>Recognise (or not) a number. The type of the number is returned (0 if unrecognised), otherwise it is a bit-ORed combination of &lt;code&gt;IS_NUMBER_IN_UV&lt;/code&gt;, &lt;code&gt;IS_NUMBER_GREATER_THAN_UV_MAX&lt;/code&gt;, &lt;code&gt;IS_NUMBER_NOT_INT&lt;/code&gt;, &lt;code&gt;IS_NUMBER_NEG&lt;/code&gt;, &lt;code&gt;IS_NUMBER_INFINITY&lt;/code&gt;, &lt;code&gt;IS_NUMBER_NAN&lt;/code&gt; (defined in perl.h).</source>
          <target state="translated">数字を認識します（または認識しません）。数値のタイプが返されます（認識されない場合は0）。それ以外の場合は、 &lt;code&gt;IS_NUMBER_IN_UV&lt;/code&gt; 、 &lt;code&gt;IS_NUMBER_GREATER_THAN_UV_MAX&lt;/code&gt; 、 &lt;code&gt;IS_NUMBER_NOT_INT&lt;/code&gt; 、 &lt;code&gt;IS_NUMBER_NEG&lt;/code&gt; 、 &lt;code&gt;IS_NUMBER_INFINITY&lt;/code&gt; 、 &lt;code&gt;IS_NUMBER_NAN&lt;/code&gt; （perl.hで定義）のビットORの組み合わせです。</target>
        </trans-unit>
        <trans-unit id="df930bc1bb6845ff74e797986a213fc6ce80656c" translate="yes" xml:space="preserve">
          <source>Recognise (or not) a number. The type of the number is returned (0 if unrecognised), otherwise it is a bit-ORed combination of IS_NUMBER_IN_UV, IS_NUMBER_GREATER_THAN_UV_MAX, IS_NUMBER_NOT_INT, IS_NUMBER_NEG, IS_NUMBER_INFINITY, IS_NUMBER_NAN (defined in perl.h).</source>
          <target state="translated">数値を認識するかどうかを指定する。それ以外の場合は、IS_NUMBER_IN_UV、IS_NUMBER_GREATER_THAN_UV_MAX、IS_NUMBER_NOT_INT、IS_NUMBER_NEG、IS_NUMBER_INFINITY、IS_NUMBER_NAN(Perl.hで定義されている)のビットまたは組み合わせが返されます。</target>
        </trans-unit>
        <trans-unit id="48f945d6ce4d07d534f69be50ec9c9e2fe4d3f0a" translate="yes" xml:space="preserve">
          <source>Recognized options:</source>
          <target state="translated">認識されたオプション。</target>
        </trans-unit>
        <trans-unit id="a0a67cdef15b0f52eba76cf8612a8ed9d2d8a77f" translate="yes" xml:space="preserve">
          <source>Recommended Options AIX 5.1/5.2/5.3/6.1 and 7.1 (32-bit)</source>
          <target state="translated">推奨オプション AIX 5.1/5.2/5.3/6.1および7.1 (32ビット)</target>
        </trans-unit>
        <trans-unit id="f3d64f9e3ff3dcc4eefb2197e40d43309ca7e6a3" translate="yes" xml:space="preserve">
          <source>Recommended Options AIX 5.1/5.2/5.3/6.1 and 7.1 (64-bit)</source>
          <target state="translated">推奨オプション AIX 5.1/5.2/5.3/6.1および7.1 (64ビット)</target>
        </trans-unit>
        <trans-unit id="b31d2b6abba1e2f8179abfdd96b832d8bddf377a" translate="yes" xml:space="preserve">
          <source>Recommended Options AIX 5.1/5.2/5.3/6.1 and 7.1 (threaded/32-bit)</source>
          <target state="translated">推奨オプション AIX 5.1/5.2/5.3/6.1および7.1 (スレッド付き/32ビット)</target>
        </trans-unit>
        <trans-unit id="c49f6af3c553991267db33b3d58f14d3e0aa9ee3" translate="yes" xml:space="preserve">
          <source>Recommended Options AIX 5.1/5.2/5.3/6.1 and 7.1 (threaded/64-bit)</source>
          <target state="translated">推奨オプション AIX 5.1/5.2/5.3/6.1および7.1 (スレッド付き/64ビット)</target>
        </trans-unit>
        <trans-unit id="49b95470925487b65a9afb790a266994f3a7ddad" translate="yes" xml:space="preserve">
          <source>Recommended Use</source>
          <target state="translated">推奨される使用方法</target>
        </trans-unit>
        <trans-unit id="c50c28d98dabb65447337f277af23b0ca9dc0048" translate="yes" xml:space="preserve">
          <source>Recommended dependencies are</source>
          <target state="translated">推奨される依存関係は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="dd03ceb13400e315c5a9286eed319bbbd63e0a42" translate="yes" xml:space="preserve">
          <source>Recompile perl with &lt;b&gt;-D&lt;/b&gt;DEBUGGING to use &lt;b&gt;-D&lt;/b&gt; switch</source>
          <target state="translated">再コンパイルPerlで&lt;b&gt;-D&lt;/b&gt;デバッグに使用するために&lt;b&gt;-D&lt;/b&gt;スイッチ</target>
        </trans-unit>
        <trans-unit id="6a646fca38262c3ca1a32c554fc40f7863eca3a6" translate="yes" xml:space="preserve">
          <source>Recompiles dynamically loaded modules with CPAN::Shell-&amp;gt;recompile.</source>
          <target state="translated">動的にロードされたモジュールをCPAN :: Shell-&amp;gt; recompileで再コンパイルします。</target>
        </trans-unit>
        <trans-unit id="f182056a2720c2953d88f0e5cd69ae2848c028f4" translate="yes" xml:space="preserve">
          <source>Record locking with fcntl()? Then the module might support an undo log and get real transactions. What a tour de force that would be.</source>
          <target state="translated">fcntl()でレコードロック?それから、モジュールは元に戻すログをサポートして、実際のトランザクションを取得するかもしれません。それは力技でしょう。</target>
        </trans-unit>
        <trans-unit id="92e28284e7ee352d28c0bd931b575309548f82cd" translate="yes" xml:space="preserve">
          <source>Record processing operations. Takes one or more of the following in a comma-separated list:</source>
          <target state="translated">レコード処理の操作。カンマで区切られたリストの中で、以下のうち1つ以上を取ります。</target>
        </trans-unit>
        <trans-unit id="5cd3bd505e5f53cd6f81827da82ec2481bd75fe7" translate="yes" xml:space="preserve">
          <source>Records &lt;code&gt;$(EXTRALIBS)&lt;/code&gt; in</source>
          <target state="translated">&lt;code&gt;$(EXTRALIBS)&lt;/code&gt; をに記録します</target>
        </trans-unit>
        <trans-unit id="f1e619d50396ad4502ee425b4e5f3f5650d0bbc5" translate="yes" xml:space="preserve">
          <source>Records read from the tied array do not have the record separator string on the end; this is to allow</source>
          <target state="translated">タイド配列から読み込んだレコードは、最後にレコードの区切り文字列を持たないようにします。</target>
        </trans-unit>
        <trans-unit id="da9b3804e9ca9a33e54f8c3271667fff796fffbf" translate="yes" xml:space="preserve">
          <source>Records read in from the file are cached, to avoid having to re-read them repeatedly. If you read the same record twice, the first time it will be stored in memory, and the second time it will be fetched from the</source>
          <target state="translated">ファイルから読み込んだレコードはキャッシュされ、何度も読み直す必要がないようになっています。同じレコードを2回読み込んだ場合、1回目はメモリに保存され、2回目は</target>
        </trans-unit>
        <trans-unit id="7b78cb40d570e3f60ca3b4da5f634f6d92a8fb93" translate="yes" xml:space="preserve">
          <source>Recurse into subdirectories specified in podpath (default behaviour).</source>
          <target state="translated">podpath で指定されたサブディレクトリに再帰します(デフォルトの動作)。</target>
        </trans-unit>
        <trans-unit id="d3a3445b075ca5a8f04946e660b954c88e2059b2" translate="yes" xml:space="preserve">
          <source>Recurse to a named subpattern. Identical to &lt;code&gt;(?&lt;i&gt;PARNO&lt;/i&gt;)&lt;/code&gt; except that the parenthesis to recurse to is determined by name. If multiple parentheses have the same name, then it recurses to the leftmost.</source>
          <target state="translated">名前付きサブパターンに再帰します。 &lt;code&gt;(?&lt;i&gt;PARNO&lt;/i&gt;)&lt;/code&gt; と同じですが、再帰する括弧が名前で決定される点が&lt;i&gt;異なり&lt;/i&gt;ます。複数の括弧が同じ名前の場合、左端に再帰します。</target>
        </trans-unit>
        <trans-unit id="8f1975a7def41720ec9c94792bc4fc65a7c012e4" translate="yes" xml:space="preserve">
          <source>Recursion</source>
          <target state="translated">Recursion</target>
        </trans-unit>
        <trans-unit id="be1e2a304d878ad7f3f5a2be055fe28d861444b5" translate="yes" xml:space="preserve">
          <source>Recursive call to Perl_load_module in PerlIO_find_layer</source>
          <target state="translated">PerlIO_find_layer での Perl_load_module への再帰的な呼び出し</target>
        </trans-unit>
        <trans-unit id="91cb555ad3b892f562583bbc57921ba568183365" translate="yes" xml:space="preserve">
          <source>Recursive inheritance detected in package '%s'</source>
          <target state="translated">パッケージ '%s' で再帰的継承が検出されました。</target>
        </trans-unit>
        <trans-unit id="246ee04b92279ada2c0b85fda5857fb7391b5be9" translate="yes" xml:space="preserve">
          <source>Recursive patterns</source>
          <target state="translated">再帰的パターン</target>
        </trans-unit>
        <trans-unit id="d7f3d9dfa25161f3fe4649ab6fce65682b6e58a7" translate="yes" xml:space="preserve">
          <source>Recursive search.</source>
          <target state="translated">再帰的検索。</target>
        </trans-unit>
        <trans-unit id="97820f2ec75d21b98b64fe84aa408e0ba63fd922" translate="yes" xml:space="preserve">
          <source>Recursive subpattern. Treat the contents of a given capture buffer in the current pattern as an independent subpattern and attempt to match it at the current position in the string. Information about capture state from the caller for things like backreferences is available to the subpattern, but capture buffers set by the subpattern are not visible to the caller.</source>
          <target state="translated">再帰的なサブパターン。現在のパターンの中の与えられたキャプチャバッファの内容を独立したサブパターンとして扱い、文字列の現在の位置でそれをマッチさせようとします。バックレファレンスのようなもののための呼び出し元からのキャプチャ状態に関する情報はサブパターンで利用可能ですが、サブパターンによって設定されたキャプチャバッファは呼び出し元からは見えません。</target>
        </trans-unit>
        <trans-unit id="f516457f12f560502881547f1fc2790272897352" translate="yes" xml:space="preserve">
          <source>Recursively runs the &lt;code&gt;clean&lt;/code&gt; method on all items contained in the bundle.</source>
          <target state="translated">バンドルに含まれるすべてのアイテムに対して &lt;code&gt;clean&lt;/code&gt; メソッドを再帰的に実行します。</target>
        </trans-unit>
        <trans-unit id="8a9c50c69ca21ecd2a0997b67c05e3cb6d8e1a38" translate="yes" xml:space="preserve">
          <source>Recursively runs the &lt;code&gt;get&lt;/code&gt; method on all items contained in the bundle</source>
          <target state="translated">バンドルに含まれるすべてのアイテムに対して &lt;code&gt;get&lt;/code&gt; メソッドを再帰的に実行します</target>
        </trans-unit>
        <trans-unit id="7d5a98448c254c7fce0f1fe10cc12f05a5008e72" translate="yes" xml:space="preserve">
          <source>Recursively runs the &lt;code&gt;install&lt;/code&gt; method on all items contained in the bundle</source>
          <target state="translated">バンドルに含まれるすべてのアイテムに対して &lt;code&gt;install&lt;/code&gt; メソッドを再帰的に実行します</target>
        </trans-unit>
        <trans-unit id="0d569a98c2caf9322c96ff9458f79ae70190174a" translate="yes" xml:space="preserve">
          <source>Recursively runs the &lt;code&gt;make&lt;/code&gt; method on all items contained in the bundle</source>
          <target state="translated">バンドルに含まれるすべてのアイテムに対して &lt;code&gt;make&lt;/code&gt; メソッドを再帰的に実行します</target>
        </trans-unit>
        <trans-unit id="c0a4dc899fe7c2753be17aee552394719cd44ec2" translate="yes" xml:space="preserve">
          <source>Recursively runs the &lt;code&gt;readme&lt;/code&gt; method on all items contained in the bundle</source>
          <target state="translated">バンドルに含まれるすべてのアイテムに対して &lt;code&gt;readme&lt;/code&gt; メソッドを再帰的に実行します</target>
        </trans-unit>
        <trans-unit id="7e62e1ec8c6026586ce9a911ace00bab6074bea8" translate="yes" xml:space="preserve">
          <source>Recursively runs the &lt;code&gt;test&lt;/code&gt; method on all items contained in the bundle</source>
          <target state="translated">バンドルに含まれるすべてのアイテムに対して &lt;code&gt;test&lt;/code&gt; メソッドを再帰的に実行します</target>
        </trans-unit>
        <trans-unit id="56d7296135bfeab6ee6d5a820ce1e8dc27ad1624" translate="yes" xml:space="preserve">
          <source>RedHatism for &lt;code&gt;PREREQ_PRINT&lt;/code&gt; . The output format is different, though:</source>
          <target state="translated">PREREQ_PRINTの &lt;code&gt;PREREQ_PRINT&lt;/code&gt; 。ただし、出力形式は異なります。</target>
        </trans-unit>
        <trans-unit id="0a9239c3dc01f0fa55b0b4ac90add849358f4889" translate="yes" xml:space="preserve">
          <source>RedHatism for &lt;code&gt;PREREQ_PRINT&lt;/code&gt;. The output format is different, though:</source>
          <target state="translated">PREREQ_PRINTの &lt;code&gt;PREREQ_PRINT&lt;/code&gt; 。ただし、出力形式は異なります。</target>
        </trans-unit>
        <trans-unit id="ff05cca01ccf8ffdeed27cada2b61209b9002a1b" translate="yes" xml:space="preserve">
          <source>Redeclaration of &quot;sendpath&quot; with a different storage class specifier</source>
          <target state="translated">異なるストレージクラス指定子を持つ &quot;sendpath &quot;の再宣言</target>
        </trans-unit>
        <trans-unit id="b77aad5fb24921ef76ac8f3e500ed93fddae8f2a" translate="yes" xml:space="preserve">
          <source>Redirection</source>
          <target state="translated">Redirection</target>
        </trans-unit>
        <trans-unit id="c605d032bec3cb73def9d5ef407371beb801bc9a" translate="yes" xml:space="preserve">
          <source>Redirection is very strict against the specification. Redirection is only automatic for response codes 301, 302, 307 and 308 if the request method is 'GET' or 'HEAD'. Response code 303 is always converted into a 'GET' redirection, as mandated by the specification. There is no automatic support for status 305 (&quot;Use proxy&quot;) redirections.</source>
          <target state="translated">リダイレクトは仕様に対して非常に厳しいです。リダイレクションは、リクエストメソッドが 'GET' または 'HEAD' の場合にのみ、レスポンスコード 301、302、307、308 に対して自動的に行われます。レスポンスコード303は、仕様で義務付けられているように、常に'GET'リダイレクトに変換されます。ステータス305(&quot;Use proxy&quot;)リダイレクトの自動サポートはありません。</target>
        </trans-unit>
        <trans-unit id="c20bb0f7c4d78b01fa838319a2981e9b417f1f05" translate="yes" xml:space="preserve">
          <source>Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:</source>
          <target state="translated">この場合、以下の条件が満たされていることを条件に、ソースおよびバイナリ形式での再配布および使用が許可されます。</target>
        </trans-unit>
        <trans-unit id="57ec4bae787e02e75ae9439f5fbfc851c887f70f" translate="yes" xml:space="preserve">
          <source>Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.</source>
          <target state="translated">バイナリ形式で再配布する場合は、上記の著作権表示、この条件のリスト、および以下の免責事項を、配布物と共に提供されるドキュメントおよび/またはその他の資料に複製しなければなりません。</target>
        </trans-unit>
        <trans-unit id="b7338b5245c44e48d0d288fd4ec6f22445873f8e" translate="yes" xml:space="preserve">
          <source>Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.</source>
          <target state="translated">ソースコードの再配布には、上記の著作権表示、この条件リスト、および以下の免責事項を保持しなければなりません。</target>
        </trans-unit>
        <trans-unit id="c973a7f5a8278a6641ee3f8e956a635bbcd7ebfa" translate="yes" xml:space="preserve">
          <source>Redo a previous command (defaults to the previous command).</source>
          <target state="translated">前のコマンドをやり直します(デフォルトは前のコマンド)。</target>
        </trans-unit>
        <trans-unit id="8b58a997692ccbb4a9f3f4fa304e4fe3018df980" translate="yes" xml:space="preserve">
          <source>Redo last command that started with pattern. See &lt;code&gt;o recallCommand&lt;/code&gt; , too.</source>
          <target state="translated">パターンで始まった最後のコマンドをやり直します。 &lt;code&gt;o recallCommand&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="776cc5d74afe5dec3447fa4e9c0fac42aeef29e9" translate="yes" xml:space="preserve">
          <source>Redo last command that started with pattern. See &lt;code&gt;o recallCommand&lt;/code&gt;, too.</source>
          <target state="translated">patternで始まった最後のコマンドをやり直します。 &lt;code&gt;o recallCommand&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="a4bb08e2752cb1397dda0f71ef9cf4a2939b7a5e" translate="yes" xml:space="preserve">
          <source>Redo number'th previous command.</source>
          <target state="translated">前のコマンドをやり直します。</target>
        </trans-unit>
        <trans-unit id="f6ec2506be7964996a498f212a0b64cf21b762f3" translate="yes" xml:space="preserve">
          <source>Redoing contexts</source>
          <target state="translated">コンテキストのやり直し</target>
        </trans-unit>
        <trans-unit id="1ffb4e2ba37698b18269edd6a43127d0871bbd89" translate="yes" xml:space="preserve">
          <source>Reduce the number to the shortest form. This routine is called automatically whenever it is needed.</source>
          <target state="translated">数を最短の形に減らします。このルーチンは必要に応じて自動的に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="501beaa6a05572fe80fbb3fbd41c4a5535a6ef36" translate="yes" xml:space="preserve">
          <source>Reduced to a standard form to facilitate comparison.</source>
          <target state="translated">比較しやすいように標準形に縮小。</target>
        </trans-unit>
        <trans-unit id="f00e8d287f10014aba639a418b99c2272caeffd5" translate="yes" xml:space="preserve">
          <source>Reduces &lt;code&gt;@list&lt;/code&gt; by calling &lt;code&gt;BLOCK&lt;/code&gt; in a scalar context multiple times, setting &lt;code&gt;$a&lt;/code&gt; and &lt;code&gt;$b&lt;/code&gt; each time. The first call will be with &lt;code&gt;$a&lt;/code&gt; and &lt;code&gt;$b&lt;/code&gt; set to the first two elements of the list, subsequent calls will be done by setting &lt;code&gt;$a&lt;/code&gt; to the result of the previous call and &lt;code&gt;$b&lt;/code&gt; to the next element in the list.</source>
          <target state="translated">削減 &lt;code&gt;@list&lt;/code&gt; を呼び出すことにより、 &lt;code&gt;BLOCK&lt;/code&gt; を設定し、スカラーコンテキストで複数回 &lt;code&gt;$a&lt;/code&gt; と &lt;code&gt;$b&lt;/code&gt; たびに。最初の呼び出しはとなります &lt;code&gt;$a&lt;/code&gt; と &lt;code&gt;$b&lt;/code&gt; リストの最初の2つの要素に設定し、後続の呼び出しは設定することで行われます &lt;code&gt;$a&lt;/code&gt; 直前のコールとの結果に &lt;code&gt;$b&lt;/code&gt; リストの次の要素へ。</target>
        </trans-unit>
        <trans-unit id="b61d10e45aea4e949426fb83e76bebb4e7edd2ff" translate="yes" xml:space="preserve">
          <source>Redundant argument in %s</source>
          <target state="translated">s の冗長引数。</target>
        </trans-unit>
        <trans-unit id="abb09f24d1bc63bc502ea1307f407f20e427bdf6" translate="yes" xml:space="preserve">
          <source>Reenable a member of the XOP which has been disabled.</source>
          <target state="translated">無効化されているXOPのメンバーを再有効化します。</target>
        </trans-unit>
        <trans-unit id="a01849f5926530cff0486291b0913ad6097a74e9" translate="yes" xml:space="preserve">
          <source>Reenables overloading in the current lexical scope.</source>
          <target state="translated">現在の語彙スコープでのオーバーロードを有効にします。</target>
        </trans-unit>
        <trans-unit id="e39fb607bec457bbec70d0b4d2e6890866daaa98" translate="yes" xml:space="preserve">
          <source>Reenables overloading only for specific ops in the current lexical scope.</source>
          <target state="translated">現在のレキシカルスコープ内の特定の操作に対してのみオーバーロードを有効にします。</target>
        </trans-unit>
        <trans-unit id="49241d1a0c34625fcb3a1e12e5c0773fb1c8acdc" translate="yes" xml:space="preserve">
          <source>Ref to array of *.c file names. Initialised from a directory scan and the values portion of the XS attribute hash. This is not currently used by MakeMaker but may be handy in Makefile.PLs.</source>
          <target state="translated">.c ファイル名の配列を参照します。ディレクトリスキャンと XS 属性ハッシュの値の部分から初期化されます。これは現在のところ MakeMaker では使用されていませんが、Makefile.PL の中では便利かもしれません。</target>
        </trans-unit>
        <trans-unit id="3f81efa83fe1fc38e8187073f2e0f52f064e535b" translate="yes" xml:space="preserve">
          <source>Ref to array of *.h file names. Similar to C.</source>
          <target state="translated">.h ファイル名の配列を参照します。Cに似ています。</target>
        </trans-unit>
        <trans-unit id="9d8fd40f71bcbcbe2653e07a1c5b85da1cb0996a" translate="yes" xml:space="preserve">
          <source>Ref to array of executable files. The files will be copied to the INST_SCRIPT directory. Make realclean will delete them from there again.</source>
          <target state="translated">実行ファイルの配列を参照します。ファイルは INST_SCRIPT ディレクトリにコピーされます。Make realcleanはそこから再び削除します。</target>
        </trans-unit>
        <trans-unit id="d5aae7a215c3c723e9edaabfefe238e519090018" translate="yes" xml:space="preserve">
          <source>Ref to array of subdirectories containing Makefile.PLs e.g. ['sdbm'] in ext/SDBM_File</source>
          <target state="translated">Makefile.PL を含むサブディレクトリの配列を参照します。</target>
        </trans-unit>
        <trans-unit id="b3246e33411973b519919af08976977fb427aefe" translate="yes" xml:space="preserve">
          <source>Ref to array of subdirectories containing library files. Defaults to [ 'lib', $(BASEEXT) ]. The directories will be scanned and</source>
          <target state="translated">ライブラリファイルを含むサブディレクトリの配列を参照します。デフォルトは['lib',$(BASEEXT)]です。ディレクトリはスキャンされ</target>
        </trans-unit>
        <trans-unit id="f8aa887f63e79a2bb90542b3f76da6c5f5bbc259" translate="yes" xml:space="preserve">
          <source>Ref to array of typemap file names. Use this when the typemaps are in some directory other than the current directory or when they are not named &lt;b&gt;typemap&lt;/b&gt;. The last typemap in the list takes precedence. A typemap in the current directory has highest precedence, even if it isn't listed in TYPEMAPS. The default system typemap has lowest precedence.</source>
          <target state="translated">タイプマップファイル名の配列を参照してください。タイプマップは、現在のディレクトリ場合、またはそれらが命名されていない以外のディレクトリにある場合に使用します&lt;b&gt;タイプマップ&lt;/b&gt;。リストの最後のタイプマップが優先されます。TYPEMAPSにリストされていない場合でも、現在のディレクトリのタイプマップが最も優先されます。デフォルトのシステムタイプマップの優先順位は最も低くなっています。</target>
        </trans-unit>
        <trans-unit id="385ed0cad910e2becc8ae487ad67a924dbc66159" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;ExtUtils::Typemaps&quot;&gt;ExtUtils::Typemaps&lt;/a&gt; for details.</source>
          <target state="translated">詳細については、&lt;a href=&quot;ExtUtils::Typemaps&quot;&gt;ExtUtils :: Typemaps&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="4228a9f20f5363e586dea50d4e8154b026ded097" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;ExtUtils::Typemaps&quot;&gt;ExtUtils::Typemaps&lt;/a&gt; for details. Object associates &lt;code&gt;ctype&lt;/code&gt; with &lt;code&gt;xstype&lt;/code&gt;, which is the index into the in- and output mapping tables.</source>
          <target state="translated">詳細については、&lt;a href=&quot;ExtUtils::Typemaps&quot;&gt;ExtUtils :: Typemaps&lt;/a&gt;を参照してください。オブジェクトは、 &lt;code&gt;ctype&lt;/code&gt; を &lt;code&gt;xstype&lt;/code&gt; に関連付けます。これは、入力および出力マッピングテーブルへのインデックスです。</target>
        </trans-unit>
        <trans-unit id="daea75a6a04da98b5df7c9f5a64eefec91ec11f6" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;perlxstypemap&quot;&gt;perlxstypemap&lt;/a&gt; for details on writing typemaps.</source>
          <target state="translated">参照してください&lt;a href=&quot;perlxstypemap&quot;&gt;perlxstypemap&lt;/a&gt;タイプマップを書くの詳細については。</target>
        </trans-unit>
        <trans-unit id="2a36238bcb820ac10d7fd2ebcaada73b3581fba1" translate="yes" xml:space="preserve">
          <source>Refer to the</source>
          <target state="translated">を参照してください。</target>
        </trans-unit>
        <trans-unit id="9b040ece9e8bbd30990175a9f5306428cd1d82bf" translate="yes" xml:space="preserve">
          <source>Refer to the LWP::UserAgent manpage for more details.</source>
          <target state="translated">詳細はLWP::UserAgentのマンページを参照のこと。</target>
        </trans-unit>
        <trans-unit id="9432d6c3a3648b15dc0cea89b8e3582be2f2c693" translate="yes" xml:space="preserve">
          <source>Refer to the documentation in zlib.h for instructions on how to fly &lt;code&gt;deflateTune&lt;/code&gt; .</source>
          <target state="translated">飛ぶ方法については、zlib.hの中にマニュアルを参照してください &lt;code&gt;deflateTune&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="ae46e16822745ddb59647d3ecbeab34df7b4a533" translate="yes" xml:space="preserve">
          <source>Refer to the documentation in zlib.h for instructions on how to fly &lt;code&gt;deflateTune&lt;/code&gt;.</source>
          <target state="translated">飛ぶ方法については、zlib.hの中にマニュアルを参照してください &lt;code&gt;deflateTune&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="db1c784524e1b54011a95823026161f7c8517fe0" translate="yes" xml:space="preserve">
          <source>Reference</source>
          <target state="translated">Reference</target>
        </trans-unit>
        <trans-unit id="272eaac3a581c717e2c1bd7c98e040f99bd3050b" translate="yes" xml:space="preserve">
          <source>Reference Counts and Mortality</source>
          <target state="translated">基準数と死亡率</target>
        </trans-unit>
        <trans-unit id="cb66c14f673d420b2446698ffd2295bef09bc762" translate="yes" xml:space="preserve">
          <source>Reference Lists</source>
          <target state="translated">リファレンスリスト</target>
        </trans-unit>
        <trans-unit id="6cc196b03aa468ab5cdd3b85dfb4b8e2460c2497" translate="yes" xml:space="preserve">
          <source>Reference Manual</source>
          <target state="translated">リファレンスマニュアル</target>
        </trans-unit>
        <trans-unit id="defa8b773888db11a0993efdc56f5359f1f4fada" translate="yes" xml:space="preserve">
          <source>Reference found where even-sized list expected</source>
          <target state="translated">偶数サイズのリストが予想される場合のリファレンスが見つかりました。</target>
        </trans-unit>
        <trans-unit id="1013adb3a453e41c5f85137f10d10101fc4a6865" translate="yes" xml:space="preserve">
          <source>Reference is already weak</source>
          <target state="translated">リファレンスはすでに弱い</target>
        </trans-unit>
        <trans-unit id="881dcd6e1a633cb9b9e2043e477198a48105ce23" translate="yes" xml:space="preserve">
          <source>Reference is not weak</source>
          <target state="translated">リファレンスは弱くない</target>
        </trans-unit>
        <trans-unit id="b95e95010ca5155efc6312c2ce2dbac562f26482" translate="yes" xml:space="preserve">
          <source>Reference to &lt;code&gt;@INC&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;@INC&lt;/code&gt; への参照。</target>
        </trans-unit>
        <trans-unit id="9d6ba86e068ebcbb24f4c6f6a21a664050593544" translate="yes" xml:space="preserve">
          <source>Reference to an array of search directories. These are searched in order before looking in &lt;code&gt;@INC&lt;/code&gt; (if &lt;b&gt;-inc&lt;/b&gt;). Current directory is used if none are specified.</source>
          <target state="translated">検索ディレクトリの配列への参照。これらは、 &lt;code&gt;@INC&lt;/code&gt; を検索する前に順番に検索されます（&lt;b&gt;-incの&lt;/b&gt;場合）。何も指定されていない場合は、現在のディレクトリが使用されます。</target>
        </trans-unit>
        <trans-unit id="86caba5eff40fddcf8846dc1d2d2754a6e719522" translate="yes" xml:space="preserve">
          <source>Reference to invalid group 0 in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="translated">正規表現の無効なグループ0への参照。&amp;lt;-ここにm /％s /でマーク</target>
        </trans-unit>
        <trans-unit id="b22008f10c7576ec8db1647eb7721bd7191a2c4e" translate="yes" xml:space="preserve">
          <source>Reference to nonexistent group in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="translated">正規表現に存在しないグループへの参照。&amp;lt;-ここにm /％s /でマーク</target>
        </trans-unit>
        <trans-unit id="b3f858831ae6f1434bc97cb50248f0c7a49fea6c" translate="yes" xml:space="preserve">
          <source>Reference to nonexistent named group in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="translated">正規表現に存在しない名前付きグループへの参照。&amp;lt;-ここにm /％s /でマーク</target>
        </trans-unit>
        <trans-unit id="475798cb7c7e061c7864e4e31937b86ac1c4960f" translate="yes" xml:space="preserve">
          <source>Reference to nonexistent or unclosed group in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="translated">正規表現に存在しない、または閉じられていないグループへの参照。&amp;lt;-ここにm /％s /でマーク</target>
        </trans-unit>
        <trans-unit id="5d20d0fee3b91643dd8d272ac33d01ca95179d82" translate="yes" xml:space="preserve">
          <source>References</source>
          <target state="translated">References</target>
        </trans-unit>
        <trans-unit id="a0dc93bc9a996d0e87ee1869448bc7db3c222320" translate="yes" xml:space="preserve">
          <source>References are a special type of scalar that point to other data types (including other references).</source>
          <target state="translated">参照は、他のデータ型(他の参照を含む)を指すスカラーの特殊なタイプです。</target>
        </trans-unit>
        <trans-unit id="50974befcb2bfc7d0ac736bc11229b81ee3eaf79" translate="yes" xml:space="preserve">
          <source>References are also used to support object-oriented programming. In perl's OO lexicon, an object is simply a reference that has been blessed into a package (or class). Once blessed, the programmer may now use the reference to access the various methods in the class.</source>
          <target state="translated">参照はオブジェクト指向プログラミングをサポートするためにも使われます。perl の OO レキシコンでは、オブジェクトとは単にパッケージ(またはクラス)に祝福された参照のことを指します。一度祝福されると、プログラマはこの参照を使ってクラスの様々なメソッドにアクセスすることができます。</target>
        </trans-unit>
        <trans-unit id="4f023cf599a124b750291900889f7d314ec9caf2" translate="yes" xml:space="preserve">
          <source>References are documented in &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt; and &lt;a href=&quot;perlreftut&quot;&gt;perlreftut&lt;/a&gt;. Examples of complex data structures are given in &lt;a href=&quot;perldsc&quot;&gt;perldsc&lt;/a&gt; and &lt;a href=&quot;perllol&quot;&gt;perllol&lt;/a&gt;. Examples of structures and object-oriented classes are in &lt;a href=&quot;perlootut&quot;&gt;perlootut&lt;/a&gt;.</source>
          <target state="translated">参照は&lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt;と&lt;a href=&quot;perlreftut&quot;&gt;perlreftutに&lt;/a&gt;文書化されています。複雑なデータ構造の例は&lt;a href=&quot;perldsc&quot;&gt;perldsc&lt;/a&gt;と&lt;a href=&quot;perllol&quot;&gt;perllolにあり&lt;/a&gt;ます。構造とオブジェクト指向クラスの例は&lt;a href=&quot;perlootut&quot;&gt;perlootutにあり&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="92593a68da730f578acc31005d526d5997c8f515" translate="yes" xml:space="preserve">
          <source>References are easy to use in Perl. There is just one overriding principle: in general, Perl does no implicit referencing or dereferencing. When a scalar is holding a reference, it always behaves as a simple scalar. It doesn't magically start being an array or hash or subroutine; you have to tell it explicitly to do so, by dereferencing it.</source>
          <target state="translated">Perlでは参照は簡単に使えます。それは、一般的にPerlは暗黙の参照や参照解除を行わないということです。スカラが参照を保持しているときは、常に単純なスカラとして動作します。スカラは魔法のように配列やハッシュ、サブルーチンになるわけではありません。</target>
        </trans-unit>
        <trans-unit id="1768d90c9296a75485266d150073e447cb77523f" translate="yes" xml:space="preserve">
          <source>References are often returned by special subroutines called constructors. Perl objects are just references to a special type of object that happens to know which package it's associated with. Constructors are just special subroutines that know how to create that association. They do so by starting with an ordinary reference, and it remains an ordinary reference even while it's also being an object. Constructors are often named &lt;code&gt;new()&lt;/code&gt; . You</source>
          <target state="translated">参照は、コンストラクタと呼ばれる特別なサブルーチンによって返されることがよくあります。Perlオブジェクトは、たまたま関連付けられているパッケージを知っている特別なタイプのオブジェクトへの参照にすぎません。コンストラクターは、その関連付けの作成方法を知っている特別なサブルーチンです。それらは通常の参照から開始することでそれを行い、それがオブジェクトである場合でも通常の参照のままです。コンストラクタはしばしば &lt;code&gt;new()&lt;/code&gt; と名付けられます。君は</target>
        </trans-unit>
        <trans-unit id="fce59c2ef726739b1c57e5452b73684a9e9c7f09" translate="yes" xml:space="preserve">
          <source>References are often returned by special subroutines called constructors. Perl objects are just references to a special type of object that happens to know which package it's associated with. Constructors are just special subroutines that know how to create that association. They do so by starting with an ordinary reference, and it remains an ordinary reference even while it's also being an object. Constructors are often named &lt;code&gt;new()&lt;/code&gt;. You</source>
          <target state="translated">参照は、コンストラクターと呼ばれる特別なサブルーチンによって返されることがよくあります。Perlオブジェクトは、それがどのパッケージに関連付けられているかをたまたま知っている特別なタイプのオブジェクトへの単なる参照です。コンストラクターは、その関連付けを作成する方法を知っている単なる特別なサブルーチンです。それらは通常の参照から始めることによってそうします、そしてそれがオブジェクトである間でさえそれは通常の参照のままです。コンストラクターはしばしば &lt;code&gt;new()&lt;/code&gt; と呼ばれます。君は</target>
        </trans-unit>
        <trans-unit id="3d3bfc78ea450f4a47c9b2b5d8626d9e79a01328" translate="yes" xml:space="preserve">
          <source>References can be created in several ways.</source>
          <target state="translated">リファレンスはいくつかの方法で作成することができます。</target>
        </trans-unit>
        <trans-unit id="c9b0a1db4852d1281bb8500fdd9246c477d9a5c6" translate="yes" xml:space="preserve">
          <source>References in Perl are like names for arrays and hashes. They're Perl's private, internal names, so you can be sure they're unambiguous. Unlike &quot;Barack Obama&quot;, a reference only refers to one thing, and you always know what it refers to. If you have a reference to an array, you can recover the entire array from it. If you have a reference to a hash, you can recover the entire hash. But the reference is still an easy, compact scalar value.</source>
          <target state="translated">Perlにおける参照は、配列やハッシュの名前のようなものです。これらは Perl のプライベートで内部的な名前なので、曖昧さがないことを確認することができます。バラク・オバマ」とは異なり、参照は一つのものを参照するだけで、それが何を参照しているかは常にわかります。配列への参照があれば、そこから配列全体を復元することができます。ハッシュへの参照があれば、そこからハッシュ全体を回復することができます。しかし、参照は簡単でコンパクトなスカラー値であることに変わりはありません。</target>
        </trans-unit>
        <trans-unit id="ed52d17c4bb69885715255f306558324c6d7bc34" translate="yes" xml:space="preserve">
          <source>References in Perl are like names for arrays and hashes. They're Perl's private, internal names, so you can be sure they're unambiguous. Unlike a human name, a reference only refers to one thing, and you always know what it refers to. If you have a reference to an array, you can recover the entire array from it. If you have a reference to a hash, you can recover the entire hash. But the reference is still an easy, compact scalar value.</source>
          <target state="translated">Perlにおける参照は、配列やハッシュの名前のようなものです。これらは Perl のプライベートで内部的な名前なので、曖昧さがないことを確認することができます。人間の名前とは異なり、参照は一つのものを参照するだけで、それが何を参照しているかは常にわかります。配列への参照があれば、そこから配列全体を復元することができます。ハッシュへの参照があれば、そこからハッシュ全体を復元することができます。しかし、参照は簡単でコンパクトなスカラー値であることに変わりはありません。</target>
        </trans-unit>
        <trans-unit id="acbfdecb2d2391d9c8e96eacd3749584f501d4a2" translate="yes" xml:space="preserve">
          <source>References of the appropriate type can spring into existence if you dereference them in a context that assumes they exist. Because we haven't talked about dereferencing yet, we can't show you any examples yet.</source>
          <target state="translated">適切な型の参照が存在することを前提とした文脈で参照を派生させれば、適切な型の参照が存在するようになります。派生参照の話をしていないので、まだ例をお見せすることができません。</target>
        </trans-unit>
        <trans-unit id="aeef9819bba63f30920ae81ea30d63fa3edcd4c4" translate="yes" xml:space="preserve">
          <source>References to other programs or functions are normally in the form of man page references so that cross-referencing tools can provide the user with links and the like. It's possible to overdo this, though, so be careful not to clutter your documentation with too much markup. References to other programs that are not given as man page references should be enclosed in B&amp;lt;&amp;gt;.</source>
          <target state="translated">他のプログラムまたは機能への参照は通常、マニュアルページ参照の形式で行われるため、相互参照ツールはユーザーにリンクなどを提供できます。ただし、これをやり過ぎる可能性があるため、マークアップが多すぎてドキュメントが乱雑にならないように注意してください。manページの参照として提供されていない他のプログラムへの参照は、B &amp;lt;&amp;gt;で囲む必要があります。</target>
        </trans-unit>
        <trans-unit id="d09c42c7f2b995dd79a331f98e9794ecbbde7748" translate="yes" xml:space="preserve">
          <source>Referencing</source>
          <target state="translated">Referencing</target>
        </trans-unit>
        <trans-unit id="f870d7a74093b8fc74dfb143b0624f7654233dcd" translate="yes" xml:space="preserve">
          <source>Refetch the stack pointer. Used after a callback. See &lt;a href=&quot;perlcall&quot;&gt;perlcall&lt;/a&gt;.</source>
          <target state="translated">スタックポインタを再フェッチします。コールバック後に使用されます。&lt;a href=&quot;perlcall&quot;&gt;perlcallを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="0571dd6ea81c78a99a9749cc8a5e39a6b2c57a92" translate="yes" xml:space="preserve">
          <source>Reflect the functionality of the module, not the implementation.</source>
          <target state="translated">実装ではなく、モジュールの機能を反映します。</target>
        </trans-unit>
        <trans-unit id="280f134f03fe31eaa265a45b3d43b18db4aca4fa" translate="yes" xml:space="preserve">
          <source>Reflects certain Unicode settings of Perl. See &lt;a href=&quot;perlrun&quot;&gt;perlrun&lt;/a&gt; documentation for the &lt;code&gt;-C&lt;/code&gt; switch for more information about the possible values.</source>
          <target state="translated">Perlの特定のUnicode設定を反映します。可能な値の詳細については、 &lt;code&gt;-C&lt;/code&gt; スイッチの&lt;a href=&quot;perlrun&quot;&gt;perlrunの&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="f226676f8892468419d6150f13a81d0446fa3a1f" translate="yes" xml:space="preserve">
          <source>Reflects certain Unicode settings of Perl. See &lt;a href=&quot;perlrun#-C-%5Bnumber%2Flist%5D&quot;&gt;perlrun&lt;/a&gt; documentation for the &lt;code&gt;-C&lt;/code&gt; switch for more information about the possible values.</source>
          <target state="translated">Perlの特定のUnicode設定を反映します。可能な値の詳細については、 &lt;code&gt;-C&lt;/code&gt; スイッチの&lt;a href=&quot;perlrun#-C-%5Bnumber%2Flist%5D&quot;&gt;perlrun&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="5e62264a7243d9609841cb3cc728146cbc309ed0" translate="yes" xml:space="preserve">
          <source>Reflects if safe locale operations are available to this perl (when the value is 1) or not (the value is 0). This variable is always 1 if the perl has been compiled without threads. It is also 1 if this perl is using thread-safe locale operations. Note that an individual thread may choose to use the global locale (generally unsafe) by calling &lt;a href=&quot;perlapi#switch_to_global_locale&quot;&gt;&quot;switch_to_global_locale&quot; in perlapi&lt;/a&gt;. This variable currently is still set to 1 in such threads.</source>
          <target state="translated">このperlで安全なロケール操作を使用できるか（値が1の場合）、使用できないか（値が0の場合）を反映します。Perlがスレッドなしでコンパイルされている場合、この変数は常に1です。このperlがスレッドセーフなロケール操作を使用している場合も1です。個々のスレッドは&lt;a href=&quot;perlapi#switch_to_global_locale&quot;&gt;、perlapiで「switch_to_global_locale」を&lt;/a&gt;呼び出すことにより、グローバルロケール（通常は安全ではない）を使用することを選択できることに注意してください。この変数は現在、そのようなスレッドではまだ1に設定されています。</target>
        </trans-unit>
        <trans-unit id="514989ce439f0131fd7d7ae03128f36f34fefe59" translate="yes" xml:space="preserve">
          <source>Reflects if taint mode is on or off. 1 for on (the program was run with &lt;b&gt;-T&lt;/b&gt;), 0 for off, -1 when only taint warnings are enabled (i.e. with &lt;b&gt;-t&lt;/b&gt; or &lt;b&gt;-TU&lt;/b&gt;).</source>
          <target state="translated">汚染モードがオンかオフかを反映します。1はオン（プログラムは&lt;b&gt;-T&lt;/b&gt;で実行された）、0はオフ、-1は汚染警告のみが有効な場合（つまり&lt;b&gt;-t&lt;/b&gt;または&lt;b&gt;-TUで&lt;/b&gt;）。</target>
        </trans-unit>
        <trans-unit id="6312ec67c8b0215a01635346ff23ce68e5ec5799" translate="yes" xml:space="preserve">
          <source>Regarding aesthetics of code lay out, about the only thing Larry cares strongly about is that the closing curly bracket of a multi-line BLOCK should line up with the keyword that started the construct. Beyond that, he has other preferences that aren't so strong:</source>
          <target state="translated">コードレイアウトの美学に関して、ラリーが唯一強く気にしていることは、複数行のBLOCKの閉じ括弧が、その構成を開始したキーワードと一致することです。それ以外にも、彼はそれほど強くない好みを持っています。</target>
        </trans-unit>
        <trans-unit id="2790589b45378975738284e2ca51f4e9c6e7a880" translate="yes" xml:space="preserve">
          <source>Regarding precedence, the filetest operators, like &lt;code&gt;-f&lt;/code&gt; , &lt;code&gt;-M&lt;/code&gt; , etc. are treated like named unary operators, but they don't follow this functional parenthesis rule. That means, for example, that &lt;code&gt;-f($file).&quot;.bak&quot;&lt;/code&gt; is equivalent to &lt;code&gt;-f &quot;$file.bak&quot;&lt;/code&gt; .</source>
          <target state="translated">優先順位に関して、 &lt;code&gt;-f&lt;/code&gt; 、 &lt;code&gt;-M&lt;/code&gt; などのファイルテスト演算子は、名前付き単項演算子のように扱われますが、この機能的な括弧の規則に従いません。つまり、たとえば、 &lt;code&gt;-f($file).&quot;.bak&quot;&lt;/code&gt; &lt;code&gt;-f &quot;$file.bak&quot;&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="1a0fddc99d50a84665cce5cb5eb6cad37dc7b84c" translate="yes" xml:space="preserve">
          <source>Regarding precedence, the filetest operators, like &lt;code&gt;-f&lt;/code&gt;, &lt;code&gt;-M&lt;/code&gt;, etc. are treated like named unary operators, but they don't follow this functional parenthesis rule. That means, for example, that &lt;code&gt;-f($file).&quot;.bak&quot;&lt;/code&gt; is equivalent to &lt;code&gt;-f &quot;$file.bak&quot;&lt;/code&gt;.</source>
          <target state="translated">優先順位に関しては、 &lt;code&gt;-f&lt;/code&gt; 、 &lt;code&gt;-M&lt;/code&gt; などのfiletest演算子は、名前付き単項演算子のように扱われますが、この機能的な括弧規則には従いません。つまり、たとえば、 &lt;code&gt;-f($file).&quot;.bak&quot;&lt;/code&gt; &lt;code&gt;-f &quot;$file.bak&quot;&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="06476efc9400736e9db491e3b8f7668fdea23d10" translate="yes" xml:space="preserve">
          <source>Regardless of calling context, calling &lt;code&gt;survey&lt;/code&gt; saves its results in its &lt;code&gt;name2path&lt;/code&gt; and &lt;code&gt;path2name&lt;/code&gt; attributes.</source>
          <target state="translated">呼び出しコンテキストに関係なく、 &lt;code&gt;survey&lt;/code&gt; を呼び出すと、その結果が &lt;code&gt;name2path&lt;/code&gt; および &lt;code&gt;path2name&lt;/code&gt; 属性に保存されます。</target>
        </trans-unit>
        <trans-unit id="cb2078f0558afa439d00e67d405247b9ba4edc0b" translate="yes" xml:space="preserve">
          <source>Regardless of the machine architecture on which it runs, the example above should print the following table:</source>
          <target state="translated">実行されるマシンアーキテクチャに関係なく、上の例では以下の表が表示されるはずです。</target>
        </trans-unit>
        <trans-unit id="32cd324f16f0c0c9cdd19f6acf5633153c13722a" translate="yes" xml:space="preserve">
          <source>Regardless of the package in which it is declared, if a lexical variable is ascribed an attribute, the handler that is invoked is the one belonging to the package to which it is typed. For example, the following declarations:</source>
          <target state="translated">宣言されているパッケージに関係なく、語彙変数に属性が付与されている場合、呼び出されるハンドラは、それが型付けされているパッケージに属するものです。例えば、以下のような宣言があります。</target>
        </trans-unit>
        <trans-unit id="b769c472f18cb9e8ca1c53a6014fda42b17a5a44" translate="yes" xml:space="preserve">
          <source>Regex examples:</source>
          <target state="translated">Regexの例。</target>
        </trans-unit>
        <trans-unit id="d215aa4b8eb14ea4cfa03d5ffdb7cdb3f3dbaea8" translate="yes" xml:space="preserve">
          <source>Regex options may be placed on the end (&lt;code&gt;'/expected/i'&lt;/code&gt; ).</source>
          <target state="translated">正規表現オプションは末尾に配置できます（ &lt;code&gt;'/expected/i'&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="048ba323608ccb16af07783e4cfa75580476efce" translate="yes" xml:space="preserve">
          <source>Regex options may be placed on the end (&lt;code&gt;'/expected/i'&lt;/code&gt;).</source>
          <target state="translated">正規表現オプションは最後に配置できます（ &lt;code&gt;'/expected/i'&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="3663d4a808abbda041c4b36d4f0656fc5a085294" translate="yes" xml:space="preserve">
          <source>Regexes</source>
          <target state="translated">Regexes</target>
        </trans-unit>
        <trans-unit id="d956a551e67ebad4724cd69086824a44b7bd001d" translate="yes" xml:space="preserve">
          <source>Regexes are treated mostly as double-quoted strings, so variable substitution works:</source>
          <target state="translated">正規表現はほとんどが二重引用符で囲まれた文字列として扱われるので、変数の代入が機能します。</target>
        </trans-unit>
        <trans-unit id="cfae4e7b72fa21099236ad796e16fa7db3a6c71a" translate="yes" xml:space="preserve">
          <source>Regexes must match a part of the string</source>
          <target state="translated">Regex は文字列の一部にマッチしなければなりません。</target>
        </trans-unit>
        <trans-unit id="338cff56c80a479d055611c7247bcf9a164e1505" translate="yes" xml:space="preserve">
          <source>Regexp Quote-Like Operators</source>
          <target state="translated">レジェックス引用符のような演算子</target>
        </trans-unit>
        <trans-unit id="0797bbd01faf35095dfd65dfc63b42205de17751" translate="yes" xml:space="preserve">
          <source>Regexp modifier &quot;%c&quot; may appear a maximum of twice in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="translated">正規表現修飾子 &quot;％c&quot;は、正規表現で最大2回表示される場合があります。&amp;lt;-ここにm /％s /でマーク</target>
        </trans-unit>
        <trans-unit id="bcb81d351898c2f7a5565e69ba2547046fe22056" translate="yes" xml:space="preserve">
          <source>Regexp modifier &quot;%c&quot; may not appear after the &quot;-&quot; in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="translated">正規表現修飾子「％c」は、正規表現の「-」の後に表示されない場合があります。&amp;lt;-ここにm /％s /でマーク</target>
        </trans-unit>
        <trans-unit id="07a5747b037f2e20cf9ed2334368f64dcfd6bb03" translate="yes" xml:space="preserve">
          <source>Regexp modifier &quot;%c&quot; may not appear twice in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="translated">正規表現修飾子「％c」は、正規表現に2回表示されない場合があります。&amp;lt;-ここにm /％s /でマーク</target>
        </trans-unit>
        <trans-unit id="3bac88e5d2d4649a661481ca7e6cae835dc77a65" translate="yes" xml:space="preserve">
          <source>Regexp modifier &quot;/%c&quot; may appear a maximum of twice</source>
          <target state="translated">Regexp 修飾子 &quot;/%c&quot; は最大 2 回まで出現する可能性があります。</target>
        </trans-unit>
        <trans-unit id="bf7452e2ee126d0b5bdcd122aa94e0317d0229c2" translate="yes" xml:space="preserve">
          <source>Regexp modifier &quot;/%c&quot; may not appear twice</source>
          <target state="translated">Regexp 修飾子 &quot;/%c&quot; が 2 回出現しない場合があります。</target>
        </trans-unit>
        <trans-unit id="16baf5ed0dc60f5788ba1338c41e4e4d3e10cdec" translate="yes" xml:space="preserve">
          <source>Regexp modifiers &quot;%c&quot; and &quot;%c&quot; are mutually exclusive in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="translated">正規表現修飾子「％c」と「％c」は、正規表現では相互に排他的です。&amp;lt;-ここにm /％s /でマーク</target>
        </trans-unit>
        <trans-unit id="ff695a22d914eb768a20894db3075de4a22ddb2d" translate="yes" xml:space="preserve">
          <source>Regexp modifiers &quot;/%c&quot; and &quot;/%c&quot; are mutually exclusive</source>
          <target state="translated">Regexp 修飾子 &quot;/%c&quot; と &quot;/%c&quot; は相互に排他的です。</target>
        </trans-unit>
        <trans-unit id="df3f82844a8ba1dcb10494bd3434657cd0fcf5f2" translate="yes" xml:space="preserve">
          <source>Regexp out of space in regex m/%s/</source>
          <target state="translated">正規表現でのスペースのない正規表現 m/%s/での正規表現</target>
        </trans-unit>
        <trans-unit id="4c193fd7834dd4e2f2d0c3df7459dd9b6d0cff66" translate="yes" xml:space="preserve">
          <source>Regexp-like quote. See &lt;a href=&quot;../perlop#Regexp-Quote-Like-Operators&quot;&gt;Regexp Quote-Like Operators in perlop&lt;/a&gt;.</source>
          <target state="translated">正規表現のような引用。&lt;a href=&quot;../perlop#Regexp-Quote-Like-Operators&quot;&gt;perlopのRegexp引用型演算子を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="5c316c1c2a82166bf54ba8bc390604c2af941f39" translate="yes" xml:space="preserve">
          <source>Regexp-like quote. See &lt;a href=&quot;perlop#Regexp-Quote-Like-Operators&quot;&gt;&quot;Regexp Quote-Like Operators&quot; in perlop&lt;/a&gt;.</source>
          <target state="translated">正規表現のような引用。&lt;a href=&quot;perlop#Regexp-Quote-Like-Operators&quot;&gt;perlopの「RegexpQuote-LikeOperators」を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="8ca599ed3fe6de770a51caf60b0f6908ce450eaf" translate="yes" xml:space="preserve">
          <source>Regexp-like quote. See &lt;a href=&quot;perlop#Regexp-Quote-Like-Operators&quot;&gt;Regexp Quote-Like Operators in perlop&lt;/a&gt;.</source>
          <target state="translated">正規表現のような引用。&lt;a href=&quot;perlop#Regexp-Quote-Like-Operators&quot;&gt;perlopのRegexp引用型演算子を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="6d463a4b21b2664cb244b9f40e3a444f1afd09cd" translate="yes" xml:space="preserve">
          <source>Register a closure to be called when this job is destroyed. The callback will be passed the &lt;code&gt;TAP::Parser::Scheduler::Job&lt;/code&gt; object as it's only argument.</source>
          <target state="translated">このジョブが破棄されたときに呼び出されるクロージャーを登録します。コールバックは唯一の引数であるため、 &lt;code&gt;TAP::Parser::Scheduler::Job&lt;/code&gt; オブジェクトに渡されます。</target>
        </trans-unit>
        <trans-unit id="792c390525190720715e6a233a6f94bb60a405c6" translate="yes" xml:space="preserve">
          <source>Register a custom op. See &lt;a href=&quot;perlguts#Custom-Operators&quot;&gt;&quot;Custom Operators&quot; in perlguts&lt;/a&gt;.</source>
          <target state="translated">カスタム操作を登録します。&lt;a href=&quot;perlguts#Custom-Operators&quot;&gt;perlgutsの「カスタム演算子」を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="32768c69ecf0dff5e646d0bfd71db75d2879eebb" translate="yes" xml:space="preserve">
          <source>Register a custom op. See &lt;a href=&quot;perlguts#Custom-Operators&quot;&gt;Custom Operators in perlguts&lt;/a&gt;.</source>
          <target state="translated">カスタムオペレーションを登録します。&lt;a href=&quot;perlguts#Custom-Operators&quot;&gt;perlgutsのカスタムオペレーターを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="7df342aca740956846e18c993fdf1ade81d92c02" translate="yes" xml:space="preserve">
          <source>Register a set of hooks to be called when the Perl lexical scope changes at compile time. See &lt;a href=&quot;perlguts#Compile-time-scope-hooks&quot;&gt;&quot;Compile-time scope hooks&quot; in perlguts&lt;/a&gt;.</source>
          <target state="translated">コンパイル時にPerl字句スコープが変更されたときに呼び出されるフックのセットを登録します。&lt;a href=&quot;perlguts#Compile-time-scope-hooks&quot;&gt;perlgutsの「コンパイル時スコープフック」を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="b5424e4e93ac098b5e8beea3526819cfd99f58b1" translate="yes" xml:space="preserve">
          <source>Register a set of hooks to be called when the Perl lexical scope changes at compile time. See &lt;a href=&quot;perlguts#Compile-time-scope-hooks&quot;&gt;Compile-time scope hooks in perlguts&lt;/a&gt;.</source>
          <target state="translated">コンパイル時にPerlのレキシカルスコープが変更されたときに呼び出されるフックのセットを登録します。&lt;a href=&quot;perlguts#Compile-time-scope-hooks&quot;&gt;perlgutsのコンパイル時スコープフックを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="df9ad37004c27557ab53b912f7280b8fb9962ace" translate="yes" xml:space="preserve">
          <source>Registered CPAN sites</source>
          <target state="translated">CPAN登録サイト</target>
        </trans-unit>
        <trans-unit id="19d2e7547fd048a0e32411d06c1a221c81a8573d" translate="yes" xml:space="preserve">
          <source>Registered message handlers will receive the &lt;code&gt;autodie::exception&lt;/code&gt; object as the first parameter.</source>
          <target state="translated">登録されたメッセージハンドラーは、最初のパラメーターとして &lt;code&gt;autodie::exception&lt;/code&gt; オブジェクトを受け取ります。</target>
        </trans-unit>
        <trans-unit id="deac9f762ddb959ea1c9d2d14ab852216c07b6f9" translate="yes" xml:space="preserve">
          <source>Registers a custom mro plugin. See &lt;a href=&quot;perlmroapi&quot;&gt;perlmroapi&lt;/a&gt; for details on this and other mro functions.</source>
          <target state="translated">カスタムmroプラグインを登録します。参照してください&lt;a href=&quot;perlmroapi&quot;&gt;perlmroapi&lt;/a&gt;これに関する詳細と他のMRO機能のために。</target>
        </trans-unit>
        <trans-unit id="7877ae3d518e5a3ac907b1ca5135e66d3b9d8241" translate="yes" xml:space="preserve">
          <source>Registers a custom mro plugin. See &lt;a href=&quot;perlmroapi&quot;&gt;perlmroapi&lt;/a&gt; for details.</source>
          <target state="translated">カスタムmroプラグインを登録します。詳細については、&lt;a href=&quot;perlmroapi&quot;&gt;perlmroapi&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="af5502384881efff18844660ff13ec7313be06e2" translate="yes" xml:space="preserve">
          <source>Registers a new &lt;a href=&quot;TAP::Parser::SourceHandler&quot;&gt;TAP::Parser::SourceHandler&lt;/a&gt; with this factory.</source>
          <target state="translated">このファクトリに新しい&lt;a href=&quot;TAP::Parser::SourceHandler&quot;&gt;TAP :: Parser :: SourceHandler&lt;/a&gt;を登録します。</target>
        </trans-unit>
        <trans-unit id="d7129f516a29ae1b88f95a70e0ada41004cf9e1d" translate="yes" xml:space="preserve">
          <source>Registers a new &lt;a href=&quot;sourcehandler&quot;&gt;TAP::Parser::SourceHandler&lt;/a&gt; with this factory.</source>
          <target state="translated">このファクトリに新しい&lt;a href=&quot;sourcehandler&quot;&gt;TAP :: Parser :: SourceHandler&lt;/a&gt;を登録します。</target>
        </trans-unit>
        <trans-unit id="a2077a060ced5f4acb1e56596b98c0e4478aa005" translate="yes" xml:space="preserve">
          <source>Registers call-backs to wait for user input (i.e., during &lt;code&gt;&lt;a href=&quot;../functions/readline&quot;&gt;readline&lt;/a&gt;&lt;/code&gt; method). This supersedes tkRunning.</source>
          <target state="translated">ユーザー入力を待機するコールバックを登録します（つまり、 &lt;code&gt;&lt;a href=&quot;../functions/readline&quot;&gt;readline&lt;/a&gt;&lt;/code&gt; メソッドの実行中）。これはtkRunningに取って代わります。</target>
        </trans-unit>
        <trans-unit id="c39f71f5b90a44a32487947bf411e99cb07b957c" translate="yes" xml:space="preserve">
          <source>Registers call-backs to wait for user input (i.e., during &lt;code&gt;readline&lt;/code&gt; method). This supersedes tkRunning.</source>
          <target state="translated">ユーザー入力を待機するためのコールバックを登録します（つまり、 &lt;code&gt;readline&lt;/code&gt; メソッド中）。これはtkRunningに取って代わります。</target>
        </trans-unit>
        <trans-unit id="e27b06aab15f95234c4446552363f21ecaed6e8c" translate="yes" xml:space="preserve">
          <source>Registry also implies thread support. When a new thread is created, all references are replaced with new ones, including all objects. If a hash uses the reference address of an object as a key, that connection would be broken. With a registered object, its id will be updated in all hashes registered with it.</source>
          <target state="translated">レジストリはスレッドのサポートも意味します。新しいスレッドが作成されると、すべての参照はすべてのオブジェクトを含めて新しいものに置き換えられます。ハッシュがオブジェクトの参照アドレスをキーとして使用している場合、その接続は壊れてしまいます。登録されたオブジェクトでは、そのオブジェクトに登録されたすべてのハッシュでそのIDが更新されます。</target>
        </trans-unit>
        <trans-unit id="4bacb90045e51515a8cca4133e12bf8882319e99" translate="yes" xml:space="preserve">
          <source>Regops</source>
          <target state="translated">Regops</target>
        </trans-unit>
        <trans-unit id="ab140354a34bd045ff52d42f722acc1c4ffada22" translate="yes" xml:space="preserve">
          <source>Regular Expressions</source>
          <target state="translated">正規表現</target>
        </trans-unit>
        <trans-unit id="125fc51b3041de14563de9cacb9226f187d6dd39" translate="yes" xml:space="preserve">
          <source>Regular Expressions for Version Parsing</source>
          <target state="translated">バージョン解析のための正規表現</target>
        </trans-unit>
        <trans-unit id="0fbc4a31dd22babd111133268afa4401e34123ac" translate="yes" xml:space="preserve">
          <source>Regular expression checks for safe file names or mail addresses using &lt;code&gt;\w&lt;/code&gt; may be spoofed by an &lt;code&gt;LC_CTYPE&lt;/code&gt; locale that claims that characters such as &lt;code&gt;&quot;&amp;gt;&quot;&lt;/code&gt; and &lt;code&gt;&quot;|&quot;&lt;/code&gt; are alphanumeric.</source>
          <target state="translated">&lt;code&gt;\w&lt;/code&gt; を使用した安全なファイル名またはメールアドレスの正規表現チェックは、 &lt;code&gt;&quot;&amp;gt;&quot;&lt;/code&gt; や &lt;code&gt;&quot;|&quot;&lt;/code&gt; などの文字を要求する &lt;code&gt;LC_CTYPE&lt;/code&gt; ロケールによってスプーフィングされる可能性があります 英数字です。</target>
        </trans-unit>
        <trans-unit id="f653e70d0a5f34832e6fd555fea8d484a6091ad7" translate="yes" xml:space="preserve">
          <source>Regular expression look-ahead</source>
          <target state="translated">正規表現のルックアヘッド</target>
        </trans-unit>
        <trans-unit id="c681a6966d51e6a568123eb7bf664ff2a725cf29" translate="yes" xml:space="preserve">
          <source>Regular expression lookahead</source>
          <target state="translated">正規表現ルックヘッド</target>
        </trans-unit>
        <trans-unit id="b487cbb4d657a7c4f73278c4486e7c1daa79c258" translate="yes" xml:space="preserve">
          <source>Regular expression modifiers are usually written in documentation as</source>
          <target state="translated">正規表現修飾子は通常、ドキュメントでは</target>
        </trans-unit>
        <trans-unit id="6656538264030cf82789e744d1ce709e6f5c78ee" translate="yes" xml:space="preserve">
          <source>Regular expression modifiers are usually written in documentation as e.g., &quot;the &lt;code&gt;/x&lt;/code&gt; modifier&quot;, even though the delimiter in question might not really be a slash. The modifiers &lt;code&gt;/imsxadlup&lt;/code&gt; may also be embedded within the regular expression itself using the &lt;code&gt;(?...)&lt;/code&gt; construct, see &lt;a href=&quot;#Extended-Patterns&quot;&gt;Extended Patterns&lt;/a&gt; below.</source>
          <target state="translated">問題の区切り文字が実際にはスラッシュではない場合でも、正規表現修飾子は通常、たとえば「 &lt;code&gt;/x&lt;/code&gt; 修飾子」としてドキュメントに記述されます。修飾子 &lt;code&gt;/imsxadlup&lt;/code&gt; は、 &lt;code&gt;(?...)&lt;/code&gt; 構成を使用して正規表現自体に埋め込むこともできます。以下の「&lt;a href=&quot;#Extended-Patterns&quot;&gt;拡張パターン」を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="214669761a8c7d463593822e661ec6c927253157" translate="yes" xml:space="preserve">
          <source>Regular expression pattern matching may surprise you if you're not accustomed to Unicode. Starting in Perl 5.14, several pattern modifiers are available to control this, called the character set modifiers. Details are given in &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;&quot;Character set modifiers&quot; in perlre&lt;/a&gt;.</source>
          <target state="translated">Unicodeに慣れていない場合は、正規表現のパターンマッチングに驚かれるかもしれません。Perl 5.14以降、これを制御するために、文字セット修飾子と呼ばれるいくつかのパターン修飾子が使用可能になりました。詳細は&lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;、perlreの「文字セット修飾子」に記載されてい&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="b7b9b0569784ec03684164534290764251f5a4a5" translate="yes" xml:space="preserve">
          <source>Regular expression pattern matching may surprise you if you're not accustomed to Unicode. Starting in Perl 5.14, several pattern modifiers are available to control this, called the character set modifiers. Details are given in &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;Character set modifiers in perlre&lt;/a&gt;.</source>
          <target state="translated">Unicodeに慣れていない場合は、正規表現のパターンマッチングで驚くかもしれません。Perl 5.14以降、文字セット修飾子と呼ばれるいくつかのパターン修飾子を使用してこれを制御できます。詳細は&lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;perlreのCharacter set modifiersにあり&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="f537368aa5e4503b1bb0486efde9146cb1692cce" translate="yes" xml:space="preserve">
          <source>Regular expression patterns can be compiled using &lt;a href=&quot;perlop#qr%2FSTRING%2Fmsixpodualn&quot;&gt;qr//&lt;/a&gt; with actual matching deferred to later. Again, it is whether or not the compilation was done within the scope of &lt;code&gt;use locale&lt;/code&gt; that determines the match behavior, not if the matches are done within such a scope or not.</source>
          <target state="translated">正規表現パターンは、&lt;a href=&quot;perlop#qr%2FSTRING%2Fmsixpodualn&quot;&gt;qr //&lt;/a&gt;を使用してコンパイルでき、実際のマッチングは後で延期されます。繰り返し &lt;code&gt;use locale&lt;/code&gt; が、一致動作を決定するのは、使用ロケールのスコープ内でコンパイルが行われたかどうかであり、そのようなスコープ内で一致が行われたかどうかではありません。</target>
        </trans-unit>
        <trans-unit id="7a6506eb05d7e28ac20c066a5dc5a473a5b60331" translate="yes" xml:space="preserve">
          <source>Regular expression patterns can be compiled using &lt;a href=&quot;perlop#qr%2fSTRING%2fmsixpodualn&quot;&gt;qr//&lt;/a&gt; with actual matching deferred to later. Again, it is whether or not the compilation was done within the scope of &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; that determines the match behavior, not if the matches are done within such a scope or not.</source>
          <target state="translated">正規表現パターンは、実際のマッチングを後で延期して&lt;a href=&quot;perlop#qr%2fSTRING%2fmsixpodualn&quot;&gt;qr //&lt;/a&gt;を使用してコンパイルできます。繰り返し &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; が、一致がそのようなスコープ内で行われたかどうかではなく、一致動作を決定するのは、コンパイルが&lt;a href=&quot;functions/use&quot;&gt;使用&lt;/a&gt;ロケールのスコープ内で行われたかどうかです。</target>
        </trans-unit>
        <trans-unit id="3172c4ae8fee97c04bb506eac2e6f47443f5a679" translate="yes" xml:space="preserve">
          <source>Regular expressions</source>
          <target state="translated">正規表現</target>
        </trans-unit>
        <trans-unit id="58710b0061794045424cb99635316dd1d5bcaa15" translate="yes" xml:space="preserve">
          <source>Regular expressions - Perl's regular expression engine is so called NFA (Non-deterministic Finite Automaton), which among other things means that it can rather easily consume large amounts of both time and space if the regular expression may match in several ways. Careful crafting of the regular expressions can help but quite often there really isn't much one can do (the book &quot;Mastering Regular Expressions&quot; is required reading, see &lt;a href=&quot;perlfaq2&quot;&gt;perlfaq2&lt;/a&gt;). Running out of space manifests itself by Perl running out of memory.</source>
          <target state="translated">正規表現-Perlの正規表現エンジンは、いわゆるNFA（非決定的有限オートマトン）と呼ばれます。これは、特に、正規表現がいくつかの方法で一致する場合、時間とスペースの両方をかなり簡単に消費する可能性があることを意味します。正規表現を注意深く作成することは役立ちますが、多くの場合、実際にできることはほとんどありません（「Mastering Regular Expressions」を読む必要があります&lt;a href=&quot;perlfaq2&quot;&gt;。perlfaq2を&lt;/a&gt;参照してください）。スペース不足は、Perlがメモリ不足になることによって明らかになります。</target>
        </trans-unit>
        <trans-unit id="be374f79f7a6dda7b312225eccc1af30acb48497" translate="yes" xml:space="preserve">
          <source>Regular expressions also play a big role in</source>
          <target state="translated">正規表現も</target>
        </trans-unit>
        <trans-unit id="75267a865c88ae1ca6e094d943e4c9a5facfa7f6" translate="yes" xml:space="preserve">
          <source>Regular expressions and pattern matching</source>
          <target state="translated">正規表現とパターンマッチング</target>
        </trans-unit>
        <trans-unit id="7fe7f76389310f95a034b6d8e308094e4de06035" translate="yes" xml:space="preserve">
          <source>Regular expressions are strings with the very particular syntax and meaning described in this document and auxiliary documents referred to by this one. The strings are called &quot;patterns&quot;. Patterns are used to determine if some other string, called the &quot;target&quot;, has (or doesn't have) the characteristics specified by the pattern. We call this &quot;matching&quot; the target string against the pattern. Usually the match is done by having the target be the first operand, and the pattern be the second operand, of one of the two binary operators &lt;code&gt;=~&lt;/code&gt; and &lt;code&gt;!~&lt;/code&gt;, listed in &lt;a href=&quot;perlop#Binding-Operators&quot;&gt;&quot;Binding Operators&quot; in perlop&lt;/a&gt;; and the pattern will have been converted from an ordinary string by one of the operators in &lt;a href=&quot;perlop#Regexp-Quote-Like-Operators&quot;&gt;&quot;Regexp Quote-Like Operators&quot; in perlop&lt;/a&gt;, like so:</source>
          <target state="translated">正規表現は、このドキュメントおよびこのドキュメントで参照されている補助ドキュメントで説明されている非常に特殊な構文と意味を持つ文字列です。文字列は「パターン」と呼ばれます。パターンは、「ターゲット」と呼ばれる他の文字列が、パターンで指定された特性を持っている（または持っていない）かどうかを判断するために使用されます。これを、ターゲット文字列をパターンと「一致させる」と呼びます。通常、一致は&lt;a href=&quot;perlop#Binding-Operators&quot;&gt;、perlopの「バインディング演算子」に&lt;/a&gt;リストされている2つの二項演算子 &lt;code&gt;=~&lt;/code&gt; および &lt;code&gt;!~&lt;/code&gt; のいずれかの、ターゲットを第1オペランド、パターンを第2オペランドにすることによって行われます。パターンは、&lt;a href=&quot;perlop#Regexp-Quote-Like-Operators&quot;&gt;「正規表現の引用&lt;/a&gt;符のような演算子」の演算子の1つによって通常の文字列から変換されます。perlopでは、次のようになります。</target>
        </trans-unit>
        <trans-unit id="e793789416bdeebd608abb2fbd64ea7f19b94580" translate="yes" xml:space="preserve">
          <source>Regular expressions have the undeserved reputation of being abstract and difficult to understand. Regular expressions are constructed using simple concepts like conditionals and loops and are no more difficult to understand than the corresponding &lt;code&gt;if&lt;/code&gt; conditionals and &lt;code&gt;while&lt;/code&gt; loops in the Perl language itself. In fact, the main challenge in learning regular expressions is just getting used to the terse notation used to express these concepts.</source>
          <target state="translated">正規表現は、抽象的で理解が難しいという当然の評判があります。正規表現は、条件やループなどの単純な概念を使用して構築され、Perl言語自体の対応する &lt;code&gt;if&lt;/code&gt; 条件および &lt;code&gt;while&lt;/code&gt; ループよりも理解が難しくありません。実際、正規表現の学習における主な課題は、これらの概念を表現するために使用される簡潔な表記法に慣れることです。</target>
        </trans-unit>
        <trans-unit id="864a45cdc12d75f30e64c50fcb15f5b075030aac" translate="yes" xml:space="preserve">
          <source>Regular expressions have the undeserved reputation of being abstract and difficult to understand. This really stems simply because the notation used to express them tends to be terse and dense, and not because of inherent complexity. We recommend using the &lt;code&gt;/x&lt;/code&gt; regular expression modifier (described below) along with plenty of white space to make them less dense, and easier to read. Regular expressions are constructed using simple concepts like conditionals and loops and are no more difficult to understand than the corresponding &lt;code&gt;if&lt;/code&gt; conditionals and &lt;code&gt;while&lt;/code&gt; loops in the Perl language itself.</source>
          <target state="translated">正規表現は、抽象的で理解しにくいという不当な評判があります。これは、それらを表現するために使用される表記法が、固有の複雑さのためではなく、簡潔で密集している傾向があるという理由だけで実際に生じます。 &lt;code&gt;/x&lt;/code&gt; 正規表現修飾子（以下で説明）を十分な空白とともに使用して、密度を低くし、読みやすくすることをお勧めします。正規表現は、条件やループなどの単純な概念を使用して構築され、Perl言語自体の対応する &lt;code&gt;if&lt;/code&gt; 条件や &lt;code&gt;while&lt;/code&gt; ループよりも理解するのが難しくありません。</target>
        </trans-unit>
        <trans-unit id="7c932d258fd79007d480838ca74a010e59fd68d2" translate="yes" xml:space="preserve">
          <source>Regular expressions match whole characters. For example, &lt;code&gt;&quot;.&quot;&lt;/code&gt; matches a whole character instead of only a single byte.</source>
          <target state="translated">正規表現は文字全体に一致します。たとえば、 &lt;code&gt;&quot;.&quot;&lt;/code&gt; 1バイトだけではなく、文字全体と一致します。</target>
        </trans-unit>
        <trans-unit id="a79155533f0f2c06638d1868af933b0e25966e2d" translate="yes" xml:space="preserve">
          <source>Regular expressions provide a terse and powerful programming language. As with most other power tools, power comes together with the ability to wreak havoc.</source>
          <target state="translated">正規表現は、簡潔で強力なプログラミング言語を提供します。他のほとんどのパワーツールと同様に、パワーは大混乱を引き起こす能力と一緒に提供されます。</target>
        </trans-unit>
        <trans-unit id="632284d6d44cd285a0879407d2b79c59fd92e9cc" translate="yes" xml:space="preserve">
          <source>Regular file.</source>
          <target state="translated">通常のファイル。</target>
        </trans-unit>
        <trans-unit id="fa2c6bd7eee60827022c13e6cc38e892107043fd" translate="yes" xml:space="preserve">
          <source>Regular variables and functions are quite easy to pass: just pass in a reference to an existing or anonymous variable or function:</source>
          <target state="translated">通常の変数や関数を渡すのは非常に簡単です:既存または匿名の変数や関数への参照を渡すだけです。</target>
        </trans-unit>
        <trans-unit id="af06404eb846b3d81ab18b2196a8e2e5e357705a" translate="yes" xml:space="preserve">
          <source>Reini Urban &amp;lt;rurban@cpan.org&amp;gt;</source>
          <target state="translated">レイニアーバン&amp;lt;rurban@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="d6331fbf9d7d8d43382e44e21b406e367129ecf9" translate="yes" xml:space="preserve">
          <source>Reinitialize the connection, flushing all I/O and account information.</source>
          <target state="translated">接続を再初期化し、すべてのI/Oとアカウント情報をフラッシュします。</target>
        </trans-unit>
        <trans-unit id="438740077328d1b63fd3768d9bcfec9fe8cf3156" translate="yes" xml:space="preserve">
          <source>Reinitialize the encodings from the locale. You want to call this function if you changed anything in the environment that might influence the locale.</source>
          <target state="translated">ロケールのエンコーディングを再初期化します。ロケールに影響を与える可能性のある環境で何かを変更した場合に、この関数を呼び出したいと思います。</target>
        </trans-unit>
        <trans-unit id="3df1d5b7df0c57f96ce32609e0558ca2f232e641" translate="yes" xml:space="preserve">
          <source>Reinitializes the Test::Builder singleton to its original state. Mostly useful for tests run in persistent environments where the same test might be run multiple times in the same process.</source>
          <target state="translated">Test::Builder シングルトンを元の状態に再初期化します。主に、同じテストが同じプロセスで複数回実行される可能性のある永続的な環境で実行されるテストに便利です。</target>
        </trans-unit>
        <trans-unit id="207e12a4b3002c04d19de8b0142ced7d247caee9" translate="yes" xml:space="preserve">
          <source>Reinventing the wheel</source>
          <target state="translated">車輪の再発明</target>
        </trans-unit>
        <trans-unit id="5080ebd78aaa8f3e4acd6d4cd153e6b28156a27a" translate="yes" xml:space="preserve">
          <source>Related Projects</source>
          <target state="translated">関連プロジェクト</target>
        </trans-unit>
        <trans-unit id="717630b2cad6e540d8db910a43ea8b5ec4baa4f7" translate="yes" xml:space="preserve">
          <source>Related to this, you probably should not use the &lt;code&gt;-r&lt;/code&gt; option of Configure in AIX, because that affects of how the &lt;code&gt;nm&lt;/code&gt; tool is used.</source>
          <target state="translated">これに関連して、AIXではConfigure の &lt;code&gt;-r&lt;/code&gt; オプションを使用しないでください。これは、 &lt;code&gt;nm&lt;/code&gt; ツールの使用方法に影響するためです。</target>
        </trans-unit>
        <trans-unit id="354032ada697719ccb58ca87cd221831508c42b3" translate="yes" xml:space="preserve">
          <source>Relational Operators</source>
          <target state="translated">関係演算子</target>
        </trans-unit>
        <trans-unit id="229981dd1dc44fcc3bf72493583bb63fa236cecf" translate="yes" xml:space="preserve">
          <source>Relationships</source>
          <target state="translated">Relationships</target>
        </trans-unit>
        <trans-unit id="ad91c52a0a60eb223f0b73047b8954c0e909fcea" translate="yes" xml:space="preserve">
          <source>Relative backreferences</source>
          <target state="translated">相対的な後方参照</target>
        </trans-unit>
        <trans-unit id="9025d894508169e5e903de46adc4c6ac9d714912" translate="yes" xml:space="preserve">
          <source>Relative referencing</source>
          <target state="translated">相対参照</target>
        </trans-unit>
        <trans-unit id="d41f56cea1ac933d25c57aebc6522e2b6c58eb87" translate="yes" xml:space="preserve">
          <source>Release</source>
          <target state="translated">Release</target>
        </trans-unit>
        <trans-unit id="8ebf1f02960a88683ce31dd07c926d87fc656eab" translate="yes" xml:space="preserve">
          <source>Release 5.005 grandfathered old global symbol names by providing preprocessor macros for extension source compatibility. As of release 5.6, these preprocessor definitions are not available by default. The POLLUTE flag specifies that the old names should still be defined:</source>
          <target state="translated">リリース 5.005 では、拡張ソースとの互換性を保つためにプリプロセッサマクロを提供することで、古いグローバルシンボル名がグランドファザー化されました。リリース 5.6 では、これらのプリプロセッサ定義はデフォルトでは使用できません。POLLUTE フラグは、古い名前がまだ定義されている必要があることを指定します。</target>
        </trans-unit>
        <trans-unit id="656417ddc071609de63ac9a1f4d853854b5a0fdc" translate="yes" xml:space="preserve">
          <source>Release considerations</source>
          <target state="translated">リリースの考慮事項</target>
        </trans-unit>
        <trans-unit id="fac91889aeb38f3b3b4a4db4a0e6d3642a61874e" translate="yes" xml:space="preserve">
          <source>Release notes or changelogs should be produced for each release of your software describing user-visible changes to your module, in terms relevant to the user.</source>
          <target state="translated">ソフトウェアのリリースごとにリリースノートや変更ログを作成して、ユーザから見えるモジュールへの変更点を、ユーザに関連する用語で説明してください。</target>
        </trans-unit>
        <trans-unit id="c8cc0888a14f29d38afa66572a91a53acc990a60" translate="yes" xml:space="preserve">
          <source>Released as Module::Metadata by Matt S Trout (mst) &amp;lt;mst@shadowcat.co.uk&amp;gt; with assistance from David Golden (xdg) &amp;lt;dagolden@cpan.org&amp;gt;.</source>
          <target state="translated">マットSトラウト（mst）&amp;lt;mst@shadowcat.co.uk&amp;gt;が、David Golden（xdg）&amp;lt;dagolden@cpan.org&amp;gt;の支援を受けてModule :: Metadataとしてリリースしました。</target>
        </trans-unit>
        <trans-unit id="6ba1c61f378b869ee5ff1bf4815e10dba0616c84" translate="yes" xml:space="preserve">
          <source>Releases a Perl interpreter. See &lt;a href=&quot;perlembed&quot;&gt;perlembed&lt;/a&gt;.</source>
          <target state="translated">Perlインタープリターをリリースします。&lt;a href=&quot;perlembed&quot;&gt;perlembedを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="00d2b450b5b036ad7f71725bacd2b3202c175677" translate="yes" xml:space="preserve">
          <source>Releases a mutual exclusion lock on &lt;code&gt;sv&lt;/code&gt; if a suitable module has been loaded.</source>
          <target state="translated">適切なモジュールがロードされている場合、 &lt;code&gt;sv&lt;/code&gt; の相互排他ロックを解放します。</target>
        </trans-unit>
        <trans-unit id="be7b5a45a9634bcc78901f710b5c0f2b2c340dd7" translate="yes" xml:space="preserve">
          <source>Releases a mutual exclusion lock on sv if a suitable module has been loaded.</source>
          <target state="translated">適切なモジュールがロードされている場合、svの相互排除ロックを解除します。</target>
        </trans-unit>
        <trans-unit id="3fa7f726b17b30c4cd0c57ed6fafc444c8997592" translate="yes" xml:space="preserve">
          <source>Releases a previous device reservation. &lt;code&gt;$pInBuf&lt;/code&gt; and &lt;code&gt;$opOutBuf&lt;/code&gt; should both be &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">以前のデバイス予約を解放します。 &lt;code&gt;$pInBuf&lt;/code&gt; と &lt;code&gt;$opOutBuf&lt;/code&gt; は両方とも &lt;code&gt;[]&lt;/code&gt; である必要があります。</target>
        </trans-unit>
        <trans-unit id="c0bb1a7f09c12615b854828283a55811f8578efc" translate="yes" xml:space="preserve">
          <source>Releasing the context tells the system you are done with it. This gives it a chance to run any necessary callbacks or cleanup tasks. If you forget to release the context it will try to detect the problem and warn you about it.</source>
          <target state="translated">コンテキストを解放することで、システムにその作業が終了したことを知らせます。これにより、必要なコールバックやクリーンアップタスクを実行する機会が与えられます。コンテキストの解放を忘れた場合は、問題を検出して警告してくれます。</target>
        </trans-unit>
        <trans-unit id="15aaabc3fc05a859dc53c1dbd9485280dc3c8707" translate="yes" xml:space="preserve">
          <source>Relevant only if Perl is compiled with the &lt;code&gt;malloc&lt;/code&gt; included with the Perl distribution; that is, if &lt;code&gt;perl -V:d_mymalloc&lt;/code&gt; is &quot;define&quot;.</source>
          <target state="translated">PerlがPerlディストリビューションに含まれている &lt;code&gt;malloc&lt;/code&gt; を使用してコンパイルされている場合にのみ該当します。つまり、 &lt;code&gt;perl -V:d_mymalloc&lt;/code&gt; が「定義」されている場合です。</target>
        </trans-unit>
        <trans-unit id="943874c75240886ef86a43aa1a27aa553887e60b" translate="yes" xml:space="preserve">
          <source>Relevant only if your Perl executable was built with &lt;b&gt;-DDEBUGGING&lt;/b&gt;, this controls the behaviour of global destruction of objects and other references. See &lt;a href=&quot;perlhacktips#PERL_DESTRUCT_LEVEL&quot;&gt;PERL_DESTRUCT_LEVEL in perlhacktips&lt;/a&gt; for more information.</source>
          <target state="translated">Perl実行可能ファイルが&lt;b&gt;-DDEBUGGINGを使用&lt;/b&gt;して&lt;b&gt;ビルド&lt;/b&gt;された場合にのみ関連し、これはオブジェクトおよびその他の参照のグローバル破棄の動作を制御します。詳細&lt;a href=&quot;perlhacktips#PERL_DESTRUCT_LEVEL&quot;&gt;については、perlhacktipsのPERL_DESTRUCT_LEVEL&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="9212a457c3732633841ee386978ed99e344f1331" translate="yes" xml:space="preserve">
          <source>Relies on being called from within CPAN.pm.</source>
          <target state="translated">CPAN.pm内からの呼び出しに依存しています。</target>
        </trans-unit>
        <trans-unit id="bc501c27012ecb7ab368ca72ce5b915779f3eaba" translate="yes" xml:space="preserve">
          <source>Reloads all indices if they have not been read for more than &lt;code&gt;$CPAN::Config-&amp;gt;{index_expire}&lt;/code&gt; days.</source>
          <target state="translated">&lt;code&gt;$CPAN::Config-&amp;gt;{index_expire}&lt;/code&gt; 日以上読み取られていない場合、すべてのインデックスを再ロードします。</target>
        </trans-unit>
        <trans-unit id="9800d194d04e01bd77c19b66a3f04a5d9ee107e4" translate="yes" xml:space="preserve">
          <source>Remainder when</source>
          <target state="translated">残量</target>
        </trans-unit>
        <trans-unit id="a1313ebbb85f6da8d318130886abe1f13a261393" translate="yes" xml:space="preserve">
          <source>Remaining arguments will be slurped into a &lt;code&gt;%params&lt;/code&gt; hash.</source>
          <target state="translated">残りの引数は &lt;code&gt;%params&lt;/code&gt; ハッシュに丸呑みされます。</target>
        </trans-unit>
        <trans-unit id="d7020f448aaf8aacc8b4d63537e375e865fff9d8" translate="yes" xml:space="preserve">
          <source>Remarks</source>
          <target state="translated">Remarks</target>
        </trans-unit>
        <trans-unit id="fd0fbd5e977146b9d49a1bb9513dae2c00d4cab0" translate="yes" xml:space="preserve">
          <source>Remember not to encode a full URI, you need to escape each component separately and then join them together.</source>
          <target state="translated">完全なURIをエンコードしないことを覚えておいてください。</target>
        </trans-unit>
        <trans-unit id="9a11550a2b50920bc08b8bae13e607c48b5110ac" translate="yes" xml:space="preserve">
          <source>Remember not to use &lt;code&gt;=&lt;/code&gt; when you need &lt;code&gt;=~&lt;/code&gt; ; these two constructs are quite different:</source>
          <target state="translated">&lt;code&gt;=~&lt;/code&gt; が必要な場合は &lt;code&gt;=&lt;/code&gt; を使用しないようにしてください。これら2つの構成はまったく異なります。</target>
        </trans-unit>
        <trans-unit id="558184d42ecf9b7592eb4fd3cf38515d7785ce07" translate="yes" xml:space="preserve">
          <source>Remember not to use &lt;code&gt;=&lt;/code&gt; when you need &lt;code&gt;=~&lt;/code&gt;; these two constructs are quite different:</source>
          <target state="translated">必要なときに &lt;code&gt;=&lt;/code&gt; を使用しないことを忘れないでください &lt;code&gt;=~&lt;/code&gt; ; これらの2つの構成はまったく異なります。</target>
        </trans-unit>
        <trans-unit id="67fc2e258765c2443b977ec7fde73394c2ad46f9" translate="yes" xml:space="preserve">
          <source>Remember that &quot;my&quot;, &quot;our&quot;, &quot;local&quot; and &quot;state&quot; bind tighter than comma.</source>
          <target state="translated">私の」、「私たちの」、「地元の」、「州の」は、カンマよりもしっかりとバインドされていることを覚えておいてください。</target>
        </trans-unit>
        <trans-unit id="1eaeae41b9d2cba51fd4b49832eb6ea43d3d9e3e" translate="yes" xml:space="preserve">
          <source>Remember that &lt;a href=&quot;../builder&quot;&gt;Test::Builder&lt;/a&gt;'s diag function will not add newlines to the end of output and test_diag will. So to check</source>
          <target state="translated">ことを覚えておいてください&lt;a href=&quot;../builder&quot;&gt;テスト:: Builderの&lt;/a&gt;のDIAG機能は、出力とtest_diag意志の最後に改行を追加しません。だからチェックする</target>
        </trans-unit>
        <trans-unit id="6cbdfe78c607c608b002f37d835506efb4d9c8bd" translate="yes" xml:space="preserve">
          <source>Remember that &lt;a href=&quot;Test::Builder&quot;&gt;Test::Builder&lt;/a&gt;'s diag function will not add newlines to the end of output and test_diag will. So to check</source>
          <target state="translated">ことを覚えておいてください&lt;a href=&quot;Test::Builder&quot;&gt;テスト:: Builderの&lt;/a&gt;のDIAG機能は、出力とtest_diag意志の最後に改行を追加しません。だからチェックする</target>
        </trans-unit>
        <trans-unit id="ca827509fa317de9b151f205a99c10ad34bc2a42" translate="yes" xml:space="preserve">
          <source>Remember that &lt;code&gt;$^N&lt;/code&gt; is set to whatever was matched by the last completed capture group. This prints</source>
          <target state="translated">覚えていることを &lt;code&gt;$^N&lt;/code&gt; 最後に完了したキャプチャグループにマッチしたものにセットされます。これはプリント</target>
        </trans-unit>
        <trans-unit id="b2a6bc5b994852a181e7009e78d2e536abe58494" translate="yes" xml:space="preserve">
          <source>Remember that &lt;code&gt;&lt;a href=&quot;functions/int&quot;&gt;int()&lt;/a&gt;&lt;/code&gt; merely truncates toward 0. For rounding to a certain number of digits, &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf()&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf()&lt;/a&gt;&lt;/code&gt; is usually the easiest route.</source>
          <target state="translated">ことを覚えておいて &lt;code&gt;&lt;a href=&quot;functions/int&quot;&gt;int()&lt;/a&gt;&lt;/code&gt; 、単に特定の桁数に丸めるために0に向かって切り捨て &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf()&lt;/a&gt;&lt;/code&gt; 又は &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf()&lt;/a&gt;&lt;/code&gt; 通常最も簡単な経路です。</target>
        </trans-unit>
        <trans-unit id="d3286289db77afd9191ea9bf57cb305d2f1b7b35" translate="yes" xml:space="preserve">
          <source>Remember that &lt;code&gt;hv_store&lt;/code&gt; and &lt;code&gt;hv_fetch&lt;/code&gt; return &lt;code&gt;SV**&lt;/code&gt; 's and not just &lt;code&gt;SV*&lt;/code&gt; . To access the scalar value, you must first dereference the return value. However, you should check to make sure that the return value is not NULL before dereferencing it.</source>
          <target state="translated">&lt;code&gt;hv_store&lt;/code&gt; と &lt;code&gt;hv_fetch&lt;/code&gt; は &lt;code&gt;SV*&lt;/code&gt; だけでなく &lt;code&gt;SV**&lt;/code&gt; 返すことに注意してください。スカラー値にアクセスするには、最初に戻り値を逆参照する必要があります。ただし、逆参照する前に、戻り値がNULLでないことを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="fa6246e743537a206abf04f9ebac4c2bdc0eccb4" translate="yes" xml:space="preserve">
          <source>Remember that &lt;code&gt;hv_store&lt;/code&gt; and &lt;code&gt;hv_fetch&lt;/code&gt; return &lt;code&gt;SV**&lt;/code&gt;'s and not just &lt;code&gt;SV*&lt;/code&gt;. To access the scalar value, you must first dereference the return value. However, you should check to make sure that the return value is not NULL before dereferencing it.</source>
          <target state="translated">&lt;code&gt;hv_store&lt;/code&gt; と &lt;code&gt;hv_fetch&lt;/code&gt; は &lt;code&gt;SV*&lt;/code&gt; だけでなく &lt;code&gt;SV**&lt;/code&gt; 返すことに注意してください。スカラー値にアクセスするには、最初に戻り値を逆参照する必要があります。ただし、逆参照する前に、戻り値がNULLでないことを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="fc3d062f24df243d725170a57b6b1b242b0658db" translate="yes" xml:space="preserve">
          <source>Remember that &lt;code&gt;int()&lt;/code&gt; merely truncates toward 0. For rounding to a certain number of digits, &lt;code&gt;sprintf()&lt;/code&gt; or &lt;code&gt;printf()&lt;/code&gt; is usually the easiest route.</source>
          <target state="translated">ことを覚えておいて &lt;code&gt;int()&lt;/code&gt; 、単に特定の桁数に丸めるために0に向かって切り捨て &lt;code&gt;sprintf()&lt;/code&gt; 又は &lt;code&gt;printf()&lt;/code&gt; 通常最も簡単な経路です。</target>
        </trans-unit>
        <trans-unit id="dd12c8c58071e3d0f8ec874ed5f0be457402b8c4" translate="yes" xml:space="preserve">
          <source>Remember that Perl distinguishes between a key not existing in the hash, and the key existing in the hash but having a corresponding value of &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;. The two possibilities can be tested with the &lt;code&gt;&lt;a href=&quot;functions/exists&quot;&gt;exists()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/defined&quot;&gt;defined()&lt;/a&gt;&lt;/code&gt; functions.</source>
          <target state="translated">Perlはハッシュに存在しないキーとハッシュに存在するが対応する &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; の値を持つキーを区別することに注意してください。2つの可能性は、 &lt;code&gt;&lt;a href=&quot;functions/exists&quot;&gt;exists()&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;functions/defined&quot;&gt;defined()&lt;/a&gt;&lt;/code&gt; 関数とdefined（）関数でテストできます。</target>
        </trans-unit>
        <trans-unit id="01cb868bfbbfc1e5bc0989282c4a6baa8b9dae2e" translate="yes" xml:space="preserve">
          <source>Remember that Perl distinguishes between a key not existing in the hash, and the key existing in the hash but having a corresponding value of &lt;code&gt;undef&lt;/code&gt;. The two possibilities can be tested with the &lt;code&gt;exists()&lt;/code&gt; and &lt;code&gt;defined()&lt;/code&gt; functions.</source>
          <target state="translated">Perlは、ハッシュに存在しないキーと、ハッシュに存在するが対応する値が &lt;code&gt;undef&lt;/code&gt; であるキーを区別することに注意してください。2つの可能性は、 &lt;code&gt;exists()&lt;/code&gt; &lt;code&gt;defined()&lt;/code&gt; 関数とdefined（）関数でテストできます。</target>
        </trans-unit>
        <trans-unit id="b32d78dc03b8840549601d8279db2304a336e903" translate="yes" xml:space="preserve">
          <source>Remember that a umask is a number, usually given in octal; it is</source>
          <target state="translated">umaskは数字であり、通常は8進数で与えられることを覚えておいてください。</target>
        </trans-unit>
        <trans-unit id="e8d7a726ced16e5e5bdec26b5e8725ff4effd3af" translate="yes" xml:space="preserve">
          <source>Remember that both map and grep expect a LIST argument, so doing this:</source>
          <target state="translated">mapもgrepもLIST引数を期待していることを覚えておいてください。</target>
        </trans-unit>
        <trans-unit id="cf98bc15c6d2e6d5b3119e11999c1516475b1b22" translate="yes" xml:space="preserve">
          <source>Remember that it has to be &lt;code&gt;patcopy+1&lt;/code&gt; because the first character of the string is the &lt;code&gt;U&lt;/code&gt; which has been swallowed into &lt;code&gt;datumtype!&lt;/code&gt;</source>
          <target state="translated">文字列の最初の文字は &lt;code&gt;datumtype!&lt;/code&gt; 飲み込まれた &lt;code&gt;U&lt;/code&gt; であるため、これは &lt;code&gt;patcopy+1&lt;/code&gt; でなければならないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="2fc569ae6eac2ea65834accd6b0d6887e151184a" translate="yes" xml:space="preserve">
          <source>Remember that lines consisting entirely of whitespace will disappear, since the first part of the alternation can match the entire string and replace it with nothing. If you need to keep embedded blank lines, you have to do a little more work. Instead of matching any whitespace (since that includes a newline), just match the other whitespace:</source>
          <target state="translated">交替の最初の部分は文字列全体にマッチし、それを何もないものに置き換えることができるので、全体が空白で構成されている行は消えてしまうことを覚えておいてください。空白行を埋め込んだままにしておく必要がある場合は、もう少し手を加えなければなりません。空白をマッチさせる代わりに(改行を含むので)、他の空白をマッチさせます。</target>
        </trans-unit>
        <trans-unit id="9e76ea83298c76444ca3d7987b1205c255f1a2be" translate="yes" xml:space="preserve">
          <source>Remember that many operations behave differently in a list context than they do in a scalar one. See &lt;a href=&quot;perldata&quot;&gt;perldata&lt;/a&gt; for details.</source>
          <target state="translated">多くの操作は、スカラー操作とは異なり、リストコンテキストでの動作が異なります。詳細は&lt;a href=&quot;perldata&quot;&gt;perldata&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="646cf6fab482d7d4b5340740e234cef55c79a20a" translate="yes" xml:space="preserve">
          <source>Remember that most patterns (using //) will need to be anchored with a leading ^, e.g., &lt;code&gt;/^EXIT/&lt;/code&gt; rather than &lt;code&gt;/EXIT/&lt;/code&gt; .</source>
          <target state="translated">（//を使用して）ほとんどのパターンが有力^、例えば、アンカーとする必要があることに注意してください &lt;code&gt;/^EXIT/&lt;/code&gt; ではなく &lt;code&gt;/EXIT/&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6f8d784d1714e16eb8aa702b0b9232c4e90d1a0e" translate="yes" xml:space="preserve">
          <source>Remember that most patterns (using //) will need to be anchored with a leading ^, e.g., &lt;code&gt;/^EXIT/&lt;/code&gt; rather than &lt;code&gt;/EXIT/&lt;/code&gt;.</source>
          <target state="translated">ほとんどのパターン（//を使用）は、先頭の^で固定する必要があることに注意してください。たとえば、 &lt;code&gt;/^EXIT/&lt;/code&gt; ではなく/ ^ &lt;code&gt;/EXIT/&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="9b5c399fc5d7626984daea5c2fe086f26307e484" translate="yes" xml:space="preserve">
          <source>Remember that the entry in the hash will still be there even if the referenced variable goes out of scope, and that it is entirely possible for Perl to subsequently allocate a different variable at the same address. This will mean a new variable might accidentally be associated with the value for an old.</source>
          <target state="translated">参照された変数がスコープ外になってもハッシュのエントリは存在すること、Perlがその後に同じアドレスに別の変数を割り当てる可能性があることを覚えておいてください。これは、新しい変数が古い変数の値に誤って関連付けられてしまう可能性があることを意味します。</target>
        </trans-unit>
        <trans-unit id="492d58ef7337b07b50ed2bd4540d00e6479ca36f" translate="yes" xml:space="preserve">
          <source>Remember that this code could be called every millisecond (depending on the output which external command generates), so try to make it as lightweight as possible.</source>
          <target state="translated">このコードはミリ秒ごとに呼び出される可能性があることを覚えておいてください (外部コマンドが生成する出力に依存します)。</target>
        </trans-unit>
        <trans-unit id="75914c58eabb7e0996be487e0e0807e7b8142b07" translate="yes" xml:space="preserve">
          <source>Remember that to use the named constants for flags you must import them, for example with &lt;code&gt;:bsd_glob&lt;/code&gt; described above. If not imported, and &lt;code&gt;use strict&lt;/code&gt; is not in effect, then the constants will be treated as bareword strings, which won't do what you what.</source>
          <target state="translated">フラグに名前付き定数を使用するには、たとえば上記の &lt;code&gt;:bsd_glob&lt;/code&gt; を使用してフラグをインポートする必要があることに注意してください。インポートされておらず、 &lt;code&gt;use strict&lt;/code&gt; が有効になっていない場合、定数はベアワード文字列として扱われ、何も実行されません。</target>
        </trans-unit>
        <trans-unit id="cf591952a26d00c380cfecee655ada8011d7bc35" translate="yes" xml:space="preserve">
          <source>Remember that unless you are working on a</source>
          <target state="translated">に取り組んでいる場合を除いて、覚えておいてください。</target>
        </trans-unit>
        <trans-unit id="6358d39d1e6eaeb38857ebca766827c7301190a1" translate="yes" xml:space="preserve">
          <source>Remember that you don't have to do this for an &lt;code&gt;SV *&lt;/code&gt; . The reference documentation for all core typemaps can be found in &lt;a href=&quot;perlxstypemap&quot;&gt;perlxstypemap&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;SV *&lt;/code&gt; に対してこれを行う必要はないことに注意してください。すべてのコアタイプマップのリファレンスドキュメントは、&lt;a href=&quot;perlxstypemap&quot;&gt;perlxstypemapにあり&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="ffda2167e30a1b5728dde670a7357c6cf09c73b2" translate="yes" xml:space="preserve">
          <source>Remember that you don't have to do this for an &lt;code&gt;SV *&lt;/code&gt;. The reference documentation for all core typemaps can be found in &lt;a href=&quot;perlxstypemap&quot;&gt;perlxstypemap&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;SV *&lt;/code&gt; に対してこれを行う必要はないことを忘れないでください。すべてのコアタイプマップのリファレンスドキュメントは、&lt;a href=&quot;perlxstypemap&quot;&gt;perlxstypemapにあり&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="555123372304909e0ad37527dea82816796217cb" translate="yes" xml:space="preserve">
          <source>Remember the following important rule: There is &lt;b&gt;no rule&lt;/b&gt; that relates the behavior of an expression in list context to its behavior in scalar context, or vice versa. It might do two totally different things. Each operator and function decides which sort of value would be most appropriate to return in scalar context. Some operators return the length of the list that would have been returned in list context. Some operators return the first value in the list. Some operators return the last value in the list. Some operators return a count of successful operations. In general, they do what you want, unless you want consistency.</source>
          <target state="translated">次の重要な規則を覚えておいてください。リストコンテキストでの式の動作をスカラーコンテキストでの動作に関連付ける、またはその逆を行う&lt;b&gt;規則&lt;/b&gt;はあり&lt;b&gt;ません&lt;/b&gt;。まったく異なる2つのことを行う可能性があります。各演算子と関数は、スカラーコンテキストで返すのに最も適した値の種類を決定します。一部の演算子は、リストのコンテキストで返されるはずだったリストの長さを返します。一部の演算子は、リストの最初の値を返します。一部の演算子は、リストの最後の値を返します。一部の演算子は、成功した操作の数を返します。一般に、一貫性が必要でない限り、必要な処理を実行します。</target>
        </trans-unit>
        <trans-unit id="47e3bd79be5e16cdbfb3336b03f971bf4d0bdbdd" translate="yes" xml:space="preserve">
          <source>Remember these important facts:</source>
          <target state="translated">これらの重要な事実を覚えておきましょう。</target>
        </trans-unit>
        <trans-unit id="fe3be81bb1bc46e2fb0131edbb793025f77c5a69" translate="yes" xml:space="preserve">
          <source>Remember to ask your translators about numeral formatting in their language, so that you can override the &lt;code&gt;numf&lt;/code&gt; method as appropriate. Typical variables in number formatting are: what to use as a decimal point (comma? period?); what to use as a thousands separator (space? nonbreaking space? comma? period? small middot? prime? apostrophe?); and even whether the so-called &quot;thousands separator&quot; is actually for every third digit -- I've heard reports of two hundred thousand being expressible as &quot;2,00,000&quot; for some Indian (Subcontinental) languages, besides the less surprising &quot;200 000&quot;, &quot;200.000&quot;, &quot;200,000&quot;, and &quot;200'000&quot;. Also, using a set of numeral glyphs other than the usual ASCII &quot;0&quot;-&quot;9&quot; might be appreciated, as via &lt;code&gt;&lt;a href=&quot;../functions/tr&quot;&gt;tr/0-9/\x{0966}-\x{096F}/&lt;/a&gt;&lt;/code&gt; for getting digits in Devanagari script (for Hindi, Konkani, others).</source>
          <target state="translated">必要に応じて &lt;code&gt;numf&lt;/code&gt; メソッドをオーバーライドできるように、翻訳者にその言語での数値のフォーマットについて尋ねることを忘れないでください。数値フォーマットの一般的な変数は次のとおりです。小数点として使用するもの（コンマ？ピリオド？）。桁区切り記号として何を使用するか（スペース？改行しないスペース？コンマ？ピリオド？小さなミッドドット？プライム？アポストロフィ？）;いわゆる「千桁」が実際に3桁ごとであるかどうかにかかわらず、インド（亜大陸）の一部の言語では20万が「2,00,000」と表現されるという報告がありました。 000 &quot;、&quot; 200.000 &quot;、&quot; 200,000 &quot;、および&quot; 200'000 &quot;。また、通常のASCII &quot;0&quot;-&quot;9&quot;以外の数字グリフのセットを使用することもできます。 &lt;code&gt;&lt;a href=&quot;../functions/tr&quot;&gt;tr/0-9/\x{0966}-\x{096F}/&lt;/a&gt;&lt;/code&gt; デバナーガリ文字で数字を取得するため（ヒンディー語、コンカニ語など）。</target>
        </trans-unit>
        <trans-unit id="17f5daf5b82334e0438adbd9b9c19c4433a6fcb2" translate="yes" xml:space="preserve">
          <source>Remember to ask your translators about numeral formatting in their language, so that you can override the &lt;code&gt;numf&lt;/code&gt; method as appropriate. Typical variables in number formatting are: what to use as a decimal point (comma? period?); what to use as a thousands separator (space? nonbreaking space? comma? period? small middot? prime? apostrophe?); and even whether the so-called &quot;thousands separator&quot; is actually for every third digit -- I've heard reports of two hundred thousand being expressible as &quot;2,00,000&quot; for some Indian (Subcontinental) languages, besides the less surprising &quot;200 000&quot;, &quot;200.000&quot;, &quot;200,000&quot;, and &quot;200'000&quot;. Also, using a set of numeral glyphs other than the usual ASCII &quot;0&quot;-&quot;9&quot; might be appreciated, as via &lt;code&gt;tr/0-9/\x{0966}-\x{096F}/&lt;/code&gt; for getting digits in Devanagari script (for Hindi, Konkani, others).</source>
          <target state="translated">必要に応じて &lt;code&gt;numf&lt;/code&gt; メソッドをオーバーライドできるように、翻訳者に言語での数字の書式設定について尋ねることを忘れないでください。数値フォーマットの一般的な変数は次のとおりです。小数点として何を使用するか（コンマ？ピリオド？）。千単位の区切り文字として何を使用するか（スペース？改行しないスペース？コンマ？ピリオド？小さなミッドドット？プライム？アポストロフィ？）;そして、いわゆる「千の区切り文字」が実際には3桁ごとであるかどうかでさえ、驚くことではない「200」に加えて、一部のインド（亜大陸）言語では「2,00,000」として表現できる20万の報告を聞いたことがあります。 000」、「200.000」、「200,000」、および「200'000」。また、通常のASCII「0」から「9」以外の数字グリフのセットを使用することもできます。 &lt;code&gt;tr/0-9/\x{0966}-\x{096F}/&lt;/code&gt; デーバナーガリー文字で数字を取得するため（ヒンディー語、コンカニ語など）。</target>
        </trans-unit>
        <trans-unit id="d70ea21e63ec82b011748c0d9ce786e8b0668fd8" translate="yes" xml:space="preserve">
          <source>Remember to check the modules that came with your distribution, and CPAN as well--someone may already have written a module to do it. On Windows, try &lt;a href=&quot;Win32::API&quot;&gt;Win32::API&lt;/a&gt;. On Macs, try &lt;a href=&quot;Mac::Carbon&quot;&gt;Mac::Carbon&lt;/a&gt;. If no module has an interface to the C function, you can inline a bit of C in your Perl source with &lt;a href=&quot;Inline::C&quot;&gt;Inline::C&lt;/a&gt;.</source>
          <target state="translated">ディストリビューションに付属のモジュールとCPANも確認することを忘れないでください。誰かがすでにそれを行うためのモジュールを作成している可能性があります。Windowsでは、&lt;a href=&quot;Win32::API&quot;&gt;Win32 :: APIを&lt;/a&gt;試してください。Macでは、&lt;a href=&quot;Mac::Carbon&quot;&gt;Mac :: Carbonを&lt;/a&gt;試してください。C関数へのインターフェイスを持つモジュールがない場合は、&lt;a href=&quot;Inline::C&quot;&gt;Inline :: C&lt;/a&gt;を使用してPerlソースにCを少しインライン化できます。</target>
        </trans-unit>
        <trans-unit id="9f2114f10064a04bb74059d053450f0147cd1c5a" translate="yes" xml:space="preserve">
          <source>Remember to check the modules that came with your distribution, and CPAN as well--someone may already have written a module to do it. On Windows, try &lt;a href=&quot;http://search.cpan.org/perldoc/Win32::API&quot;&gt;Win32::API&lt;/a&gt;. On Macs, try &lt;a href=&quot;http://search.cpan.org/perldoc/Mac::Carbon&quot;&gt;Mac::Carbon&lt;/a&gt;. If no module has an interface to the C function, you can inline a bit of C in your Perl source with &lt;a href=&quot;http://search.cpan.org/perldoc/Inline::C&quot;&gt;Inline::C&lt;/a&gt;.</source>
          <target state="translated">ディストリビューションに付属しているモジュールとCPANも確認することを忘れないでください。誰かがすでにそれを行うためのモジュールを作成している可能性があります。Windowsでは、&lt;a href=&quot;http://search.cpan.org/perldoc/Win32::API&quot;&gt;Win32 :: APIを&lt;/a&gt;試してください。Macでは、&lt;a href=&quot;http://search.cpan.org/perldoc/Mac::Carbon&quot;&gt;Mac :: Carbonを&lt;/a&gt;試してください。C関数へのインターフェースを持つモジュールがない場合は、Perlineソースの&lt;a href=&quot;http://search.cpan.org/perldoc/Inline::C&quot;&gt;C&lt;/a&gt;をInline :: Cでインライン化できます。</target>
        </trans-unit>
        <trans-unit id="5d48f25750a4c2c92a30c148e6f484ab2fff22e2" translate="yes" xml:space="preserve">
          <source>Remember to free the previous PV buffer. There are many things to check. Beware that the existing pointer may be involved in copy-on-write or other mischief, so do &lt;code&gt;SvOOK_off(sv)&lt;/code&gt; and use &lt;code&gt;sv_force_normal&lt;/code&gt; or &lt;code&gt;SvPV_force&lt;/code&gt; (or check the &lt;code&gt;SvIsCOW&lt;/code&gt; flag) first to make sure this modification is safe. Then finally, if it is not a COW, call &lt;code&gt;SvPV_free&lt;/code&gt; to free the previous PV buffer.</source>
          <target state="translated">前のPVバッファを解放することを忘れないでください。確認すべきことがたくさんあります。既存のポインタがコピーオンライトやその他のいたずらに関係している可能性があることに注意してください &lt;code&gt;SvOOK_off(sv)&lt;/code&gt; を &lt;code&gt;sv_force_normal&lt;/code&gt; 、 &lt;code&gt;SvPV_force&lt;/code&gt; sv_force_normalまたはSvPV_forceを使用して（または &lt;code&gt;SvIsCOW&lt;/code&gt; フラグを確認して）、この変更が安全であることを確認してください。最後に、COWでない場合は、 &lt;code&gt;SvPV_free&lt;/code&gt; を呼び出して、前のPVバッファーを解放します。</target>
        </trans-unit>
        <trans-unit id="e578e97ce330a4635b211fac80fcb964a9a0c638" translate="yes" xml:space="preserve">
          <source>Remember to free the previous PV buffer. There are many things to check. Beware that the existing pointer may be involved in copy-on-write or other mischief, so do &lt;code&gt;SvOOK_off(sv)&lt;/code&gt; and use &lt;code&gt;sv_force_normal&lt;/code&gt; or &lt;code&gt;SvPV_force&lt;/code&gt; (or check the SvIsCOW flag) first to make sure this modification is safe. Then finally, if it is not a COW, call &lt;code&gt;SvPV_free&lt;/code&gt; to free the previous PV buffer.</source>
          <target state="translated">以前のPVバッファーを解放することを忘れないでください。確認することがたくさんあります。既存のポインターがコピーオンライトまたはその他のいたずらに関与している可能性があることに注意してください &lt;code&gt;SvOOK_off(sv)&lt;/code&gt; を &lt;code&gt;sv_force_normal&lt;/code&gt; 、 &lt;code&gt;SvPV_force&lt;/code&gt; sv_force_normalまたはSvPV_force（またはSvIsCOWフラグを確認）を使用して、この変更が安全であることを確認します。最後に、COWでない場合は、 &lt;code&gt;SvPV_free&lt;/code&gt; を呼び出して前のPVバッファーを解放します。</target>
        </trans-unit>
        <trans-unit id="edbdda7d015901994cff299901620d94df0e7929" translate="yes" xml:space="preserve">
          <source>Remember to keep in mind verb agreement (or adjectives too, in other languages), as in:</source>
          <target state="translated">のように、動詞の一致(他の言語では形容詞も)を覚えておきましょう。</target>
        </trans-unit>
        <trans-unit id="ea14aadc90613c4067d4c78691b62504dd496234" translate="yes" xml:space="preserve">
          <source>Remember to use a hefty wad of stack (I use 2000000)</source>
          <target state="translated">札束を使うことを忘れずに(私は2000000を使用しています)</target>
        </trans-unit>
        <trans-unit id="288c61995661b35931506b0caae197170c722414" translate="yes" xml:space="preserve">
          <source>Remember we're in our tiny program with a problem, we should have a look at where we are, and what our data looks like. First of all let's view some code at our present position (the first line of code in this case), via '&lt;b&gt;v&lt;/b&gt;':</source>
          <target state="translated">問題のある小さなプログラムにいることを忘れないでください。現在の場所とデータがどのように見えるかを確認する必要があります。まず最初に、現在の位置（この場合はコードの最初の行）にある ' &lt;b&gt;v&lt;/b&gt; 'を介していくつかのコードを見てみましょう。</target>
        </trans-unit>
        <trans-unit id="f6ef210dc6df90e5b38374c442963d215fab9ab2" translate="yes" xml:space="preserve">
          <source>Remember, the returned item is not removed from the queue, so manipulating a &lt;code&gt;peek&lt;/code&gt; ed at reference affects the item on the queue.</source>
          <target state="translated">返されたアイテムはキューから削除されないので、参照で &lt;code&gt;peek&lt;/code&gt; 操作するとキューのアイテムに影響することに注意してください。</target>
        </trans-unit>
        <trans-unit id="4586daac5ad820573b2f5fb4716eed6602dc1676" translate="yes" xml:space="preserve">
          <source>Remember, the returned item is not removed from the queue, so manipulating a &lt;code&gt;peek&lt;/code&gt;ed at reference affects the item on the queue.</source>
          <target state="translated">返されたアイテムはキューから削除されないため、参照で &lt;code&gt;peek&lt;/code&gt; 操作すると、キューのアイテムに影響することに注意してください。</target>
        </trans-unit>
        <trans-unit id="11b6286bdc5e017cb5c74707ecac6d393f327b0a" translate="yes" xml:space="preserve">
          <source>Remember: if you want your subclass to be automatically used by the parser, you'll have to register it with &lt;a href=&quot;TAP::Parser::ResultFactory#register_type&quot;&gt;&quot;register_type&quot; in TAP::Parser::ResultFactory&lt;/a&gt;.</source>
          <target state="translated">サブクラスをパーサーで自動的に使用する場合は&lt;a href=&quot;TAP::Parser::ResultFactory#register_type&quot;&gt;、TAP :: Parser :: ResultFactoryの「register_type」に&lt;/a&gt;サブクラスを登録する必要があります。</target>
        </trans-unit>
        <trans-unit id="8ff4183fe49a6a6309b98413d71a4c51c83971ba" translate="yes" xml:space="preserve">
          <source>Remember: if you want your subclass to be automatically used by the parser, you'll have to register it with &lt;a href=&quot;resultfactory#register_type&quot;&gt;register_type in TAP::Parser::ResultFactory&lt;/a&gt;.</source>
          <target state="translated">覚えておいてください：パーサーがサブクラスを自動的に使用したい場合は&lt;a href=&quot;resultfactory#register_type&quot;&gt;、TAP :: Parser :: ResultFactoryのregister_typeに&lt;/a&gt;サブクラスを登録する必要があります。</target>
        </trans-unit>
        <trans-unit id="027c26e9ae112bc7c5d4192494b974ff4b801557" translate="yes" xml:space="preserve">
          <source>Remember: the value of &lt;code&gt;$/&lt;/code&gt; is a string, not a regex. &lt;b&gt;awk&lt;/b&gt; has to be better for something. :-)</source>
          <target state="translated">&lt;code&gt;$/&lt;/code&gt; の値は文字列であり、正規表現ではありません。&lt;b&gt;awk&lt;/b&gt;は何かのためにより良いものでなければなりません。:-)</target>
        </trans-unit>
        <trans-unit id="2304aa6585251451562aa451f542cd4915e4816b" translate="yes" xml:space="preserve">
          <source>Remind the translators to consider the case where N is 0: &quot;0 files found&quot; isn't exactly natural-sounding in any language, but it may be unacceptable in many -- or it may condition special kinds of agreement (similar to English &quot;I didN'T find ANY files&quot;).</source>
          <target state="translated">翻訳者には、Nが0の場合を考慮することを忘れないようにしてください。&quot;0 files found &quot;はどの言語でも正確には自然な響きではありませんが、多くの言語では受け入れられないかもしれません。</target>
        </trans-unit>
        <trans-unit id="4991fd19b1656961dba99a0989e6b6933395e321" translate="yes" xml:space="preserve">
          <source>Removals, like warnings, are public.</source>
          <target state="translated">警告のようなリムーバルは公開されています。</target>
        </trans-unit>
        <trans-unit id="2c1a02136a4770873ad1351ec44089fc6396abba" translate="yes" xml:space="preserve">
          <source>Remove IO from the list of file descriptors for the next poll.</source>
          <target state="translated">次のポーリングのために、ファイルディスクリプタのリストからIOを削除します。</target>
        </trans-unit>
        <trans-unit id="b4205c2e4e5f0753c53b4cd2157f83e877d79608" translate="yes" xml:space="preserve">
          <source>Remove a signal from the SigSet object.</source>
          <target state="translated">SigSet オブジェクトからシグナルを削除します。</target>
        </trans-unit>
        <trans-unit id="7d773b7155edc83b83cb81a8d5e214998acde808" translate="yes" xml:space="preserve">
          <source>Remove all the given handles from the object. This method also works by the &lt;code&gt;&lt;a href=&quot;../functions/fileno&quot;&gt;fileno&lt;/a&gt;&lt;/code&gt; of the handles. So the exact handles that were added need not be passed, just handles that have an equivalent &lt;code&gt;&lt;a href=&quot;../functions/fileno&quot;&gt;fileno&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">指定されたすべてのハンドルをオブジェクトから削除します。この方法は、ハンドルの &lt;code&gt;&lt;a href=&quot;../functions/fileno&quot;&gt;fileno&lt;/a&gt;&lt;/code&gt; でも機能します。したがって、追加された正確なハンドルを渡す必要はありません。同等の &lt;code&gt;&lt;a href=&quot;../functions/fileno&quot;&gt;fileno&lt;/a&gt;&lt;/code&gt; を持つハンドルのみ</target>
        </trans-unit>
        <trans-unit id="730d72f0daf35bb628a413ea2b124f3bb6469399" translate="yes" xml:space="preserve">
          <source>Remove all the given handles from the object. This method also works by the &lt;code&gt;fileno&lt;/code&gt; of the handles. So the exact handles that were added need not be passed, just handles that have an equivalent &lt;code&gt;fileno&lt;/code&gt;</source>
          <target state="translated">指定されたすべてのハンドルをオブジェクトから削除します。この方法は、ハンドルの &lt;code&gt;fileno&lt;/code&gt; でも機能します。したがって、追加された正確なハンドルを渡す必要はなく、同等の &lt;code&gt;fileno&lt;/code&gt; を持つハンドルのみを渡す必要があります。</target>
        </trans-unit>
        <trans-unit id="ec5b86c026a0888d3d21b8af5552020cd0cfcac1" translate="yes" xml:space="preserve">
          <source>Remove and destroy the message queue from the system.</source>
          <target state="translated">システムからメッセージキューを削除して破棄します。</target>
        </trans-unit>
        <trans-unit id="6aaf7cd9a2aecb8b071738d93a877aedd07453f1" translate="yes" xml:space="preserve">
          <source>Remove and destroy the semaphore set from the system.</source>
          <target state="translated">システムからセマフォセットを取り外し、破壊します。</target>
        </trans-unit>
        <trans-unit id="08922679889ead1233ce9875bead229564568322" translate="yes" xml:space="preserve">
          <source>Remove any magic of type</source>
          <target state="translated">タイプの任意の魔法を削除します。</target>
        </trans-unit>
        <trans-unit id="1f89ce3a13bc7e8144d76a6e5ce921d9631062c9" translate="yes" xml:space="preserve">
          <source>Remove any magic of type &lt;code&gt;how&lt;/code&gt; from the SV &lt;code&gt;sv&lt;/code&gt;. See &lt;a href=&quot;#sv_magic&quot;&gt;&quot;sv_magic&quot;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;sv&lt;/code&gt; からタイプ &lt;code&gt;how&lt;/code&gt; の魔法をすべて取り除きます。&lt;a href=&quot;#sv_magic&quot;&gt;「sv_magic」を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="ad52c40b6cbca8b2c2966740f3ef86babe9567f0" translate="yes" xml:space="preserve">
          <source>Remove any magic of type &lt;code&gt;how&lt;/code&gt; using virtual table &lt;code&gt;vtbl&lt;/code&gt; from the SV &lt;code&gt;sv&lt;/code&gt;. See &lt;a href=&quot;#sv_magic&quot;&gt;&quot;sv_magic&quot;&lt;/a&gt;.</source>
          <target state="translated">タイプのいずれかの魔法を削除 &lt;code&gt;how&lt;/code&gt; 仮想テーブルの使用 &lt;code&gt;vtbl&lt;/code&gt; SVとから &lt;code&gt;sv&lt;/code&gt; 。&lt;a href=&quot;#sv_magic&quot;&gt;「sv_magic」を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="15e6d1c7c8255afa8c848bcdf81bba7435f9b1e6" translate="yes" xml:space="preserve">
          <source>Remove any string offset. You should normally use the &lt;code&gt;SvOOK_off&lt;/code&gt; macro wrapper instead.</source>
          <target state="translated">文字列オフセットを削除します。通常は、代わりに &lt;code&gt;SvOOK_off&lt;/code&gt; マクロラッパーを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="34cc903788f314961384e40811dc3b186c10adf9" translate="yes" xml:space="preserve">
          <source>Remove build directory after a successful install? (yes/no)?</source>
          <target state="translated">インストールが成功したらビルドディレクトリを削除しますか?(はい/いいえ)?</target>
        </trans-unit>
        <trans-unit id="ca26333c9cffa9dcdd1f9ac9077e465bdac01657" translate="yes" xml:space="preserve">
          <source>Remove last element of the array and return it.</source>
          <target state="translated">配列の最後の要素を削除して返します。</target>
        </trans-unit>
        <trans-unit id="dd74f70e82f716fe737ebdd68a369175399ee5d4" translate="yes" xml:space="preserve">
          <source>Remove last element of the array and return it. For example:</source>
          <target state="translated">配列の最後の要素を削除して返します。例えば</target>
        </trans-unit>
        <trans-unit id="3d7ce8cb1e76d7785d81a4336476884c3f8f3434" translate="yes" xml:space="preserve">
          <source>Remove the directory with the name &lt;code&gt;DIR&lt;/code&gt; . If &lt;code&gt;RECURSE&lt;/code&gt; is</source>
          <target state="translated">&lt;code&gt;DIR&lt;/code&gt; という名前のディレクトリを削除します。場合 &lt;code&gt;RECURSE&lt;/code&gt; があります</target>
        </trans-unit>
        <trans-unit id="cd8df1b1af96c14b21f3ced740a495f3c3579a2a" translate="yes" xml:space="preserve">
          <source>Remove the directory with the name &lt;code&gt;DIR&lt;/code&gt;. If &lt;code&gt;RECURSE&lt;/code&gt; is</source>
          <target state="translated">&lt;code&gt;DIR&lt;/code&gt; という名前のディレクトリを削除します。場合 &lt;code&gt;RECURSE&lt;/code&gt; があります</target>
        </trans-unit>
        <trans-unit id="01b3903b90ed14c4b645d49c69219c3c2b4eabbd" translate="yes" xml:space="preserve">
          <source>Remove the first element of the array (shifting other elements down) and return it.</source>
          <target state="translated">配列の最初の要素を削除して(他の要素を下にずらして)返します。</target>
        </trans-unit>
        <trans-unit id="7915d09356edb2d08ee58387fa2807f4d9125c2f" translate="yes" xml:space="preserve">
          <source>Remove the first element of the array (shifting other elements down) and return it. For example:</source>
          <target state="translated">配列の最初の要素を削除して(他の要素を下にずらして)返します。例えば</target>
        </trans-unit>
        <trans-unit id="af6da8ce6c3a71d84dabc65f4953446b1ad5eaa7" translate="yes" xml:space="preserve">
          <source>Remove the shared memory segment from the system or mark it as removed as long as any processes are still attached to it.</source>
          <target state="translated">共有メモリセグメントをシステムから削除するか、プロセスがまだ接続されている限り削除されたものとしてマークします。</target>
        </trans-unit>
        <trans-unit id="6dd974eb46d793d3ce24c2722e5c3e3f7cb1247a" translate="yes" xml:space="preserve">
          <source>Removed 'license_uri' field</source>
          <target state="translated">license_uri' フィールドを削除</target>
        </trans-unit>
        <trans-unit id="ee5b62938d735f3a3efecbef729a1a893cec2e34" translate="yes" xml:space="preserve">
          <source>Removed 'requires_packages', 'requires_os' and 'excluded_os' as valid subkeys</source>
          <target state="translated">有効なサブキーとして 'requires_packages'、'requires_os'、'excluded_os' を削除しました。</target>
        </trans-unit>
        <trans-unit id="89a11020e54316d7391559587030489b184260d5" translate="yes" xml:space="preserve">
          <source>Removed a bunch of items (generation, requires_build_tools, requires_packages, configure, requires_os, excludes_os, auto_regenerate) that have never actually been supported, but were more like records of brainstorming.</source>
          <target state="translated">実際にはサポートされたことがなく、ブレインストーミングの記録のようなものであった多くの項目 (generation,requires_build_tools,requires_packages,configure,requires_os,excludes_os,auto_regenerate)を削除しました。</target>
        </trans-unit>
        <trans-unit id="fa2b8c36a992cb782bf9b719ffcacdc1994f25af" translate="yes" xml:space="preserve">
          <source>Removed features</source>
          <target state="translated">削除された機能</target>
        </trans-unit>
        <trans-unit id="ca09374fc77d4a9c28f5008d23302798f76def3f" translate="yes" xml:space="preserve">
          <source>Removed in Perl 5.10</source>
          <target state="translated">Perl 5.10で削除</target>
        </trans-unit>
        <trans-unit id="7feda984d74007c898a3562e8d4b8c724e3687d4" translate="yes" xml:space="preserve">
          <source>Removed in Perl 5.8.8</source>
          <target state="translated">Perl 5.8.8 で削除</target>
        </trans-unit>
        <trans-unit id="8c003ba205d8c4fe73191a070ec08a0106b9f815" translate="yes" xml:space="preserve">
          <source>Removed in Perl 5.9.0</source>
          <target state="translated">Perl 5.9.0 で削除</target>
        </trans-unit>
        <trans-unit id="c5063928e2ec4eb91ad2be24363b0ef7098c167e" translate="yes" xml:space="preserve">
          <source>Removed in Perl 5.9.5</source>
          <target state="translated">Perl 5.9.5 で削除</target>
        </trans-unit>
        <trans-unit id="db90acb7ef3a6dde761f4676e88df84e20802090" translate="yes" xml:space="preserve">
          <source>Removed in Perl v5.10.0.</source>
          <target state="translated">Perl v5.10.0で削除。</target>
        </trans-unit>
        <trans-unit id="9ffd3d68bce71e440bc44944ce7cd567641fc53d" translate="yes" xml:space="preserve">
          <source>Removed in: 5.11.3</source>
          <target state="translated">で削除されました。5.11.3</target>
        </trans-unit>
        <trans-unit id="f91b8faa1861bcea02d7a01269af81386dd0b1c9" translate="yes" xml:space="preserve">
          <source>Removed the name &lt;code&gt;CPAN::META::Specification&lt;/code&gt;, since that implies a module that doesn't actually exist.</source>
          <target state="translated">&lt;code&gt;CPAN::META::Specification&lt;/code&gt; という名前を削除しました。これは、実際には存在しないモジュールを意味するためです。</target>
        </trans-unit>
        <trans-unit id="dd3aa518f2414226d56b71ebf663220219b2aa4e" translate="yes" xml:space="preserve">
          <source>Removes &lt;code&gt;$name&lt;/code&gt; from the set of symbols, where &lt;code&gt;$name&lt;/code&gt; is the original symbol name passed previously to addsym(). If &lt;code&gt;$name&lt;/code&gt; existed in the set of symbols, returns its &quot;trimmed&quot; equivalent, otherwise returns &lt;code&gt;undef&lt;/code&gt;. This method must be called via an existing object.</source>
          <target state="translated">シンボルのセットから &lt;code&gt;$name&lt;/code&gt; を削除します。ここで、 &lt;code&gt;$name&lt;/code&gt; は以前にaddsym（）に渡された元のシンボル名です。シンボルのセットに &lt;code&gt;$name&lt;/code&gt; 存在する場合は、「トリミングされた」同等のものを返し &lt;code&gt;undef&lt;/code&gt; 。それ以外の場合は、undefを返します。このメソッドは、既存のオブジェクトを介して呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="7606a447a1adad6fd32090f792adebaa6d61391c" translate="yes" xml:space="preserve">
          <source>Removes &lt;code&gt;@codes&lt;/code&gt; as valid codes for the parse.</source>
          <target state="translated">解析の有効なコードとして &lt;code&gt;@codes&lt;/code&gt; を削除します。</target>
        </trans-unit>
        <trans-unit id="5bb1eea9e121152498b29c0887262ecf49f84161" translate="yes" xml:space="preserve">
          <source>Removes &lt;code&gt;@directives&lt;/code&gt; as valid directives for the parse.</source>
          <target state="translated">解析の有効なディレクティブとしての &lt;code&gt;@directives&lt;/code&gt; を削除します。</target>
        </trans-unit>
        <trans-unit id="3a7dce2ee5720ded6ace47211f4127a78a8bc823" translate="yes" xml:space="preserve">
          <source>Removes &lt;code&gt;@targets&lt;/code&gt; as valid targets for the parse.</source>
          <target state="translated">解析の有効なターゲットとして &lt;code&gt;@targets&lt;/code&gt; を削除します。</target>
        </trans-unit>
        <trans-unit id="298b7e75beb6592ddc99ba79f7f8687ba4ae9cd8" translate="yes" xml:space="preserve">
          <source>Removes a &lt;code&gt;TYPEMAP&lt;/code&gt; entry from the typemap.</source>
          <target state="translated">&lt;code&gt;TYPEMAP&lt;/code&gt; からTYPEMAPエントリを削除します。</target>
        </trans-unit>
        <trans-unit id="78e457c2afa95057438297f0c2f7a08b01f2bed1" translate="yes" xml:space="preserve">
          <source>Removes a given test from results. This is a no-op if the test name is not found.</source>
          <target state="translated">指定されたテストを結果から削除します。これは、テスト名が見つからない場合には実行しません。</target>
        </trans-unit>
        <trans-unit id="6170266d9cf1abd067a88e768b95c547bffbe239" translate="yes" xml:space="preserve">
          <source>Removes a name from a stash's internal list of effective names. If this is the name returned by &lt;code&gt;HvENAME&lt;/code&gt; , then another name in the list will take its place (&lt;code&gt;HvENAME&lt;/code&gt; will use it).</source>
          <target state="translated">stashの有効な名前の内部リストから名前を削除します。これが &lt;code&gt;HvENAME&lt;/code&gt; によって返される名前である場合、リスト内の別の名前が &lt;code&gt;HvENAME&lt;/code&gt; に使用されます（HvENAMEがそれを使用します）。</target>
        </trans-unit>
        <trans-unit id="853bfcfc57212f8b802e5ba747a3684310404dfb" translate="yes" xml:space="preserve">
          <source>Removes a name from a stash's internal list of effective names. If this is the name returned by &lt;code&gt;HvENAME&lt;/code&gt;, then another name in the list will take its place (&lt;code&gt;HvENAME&lt;/code&gt; will use it).</source>
          <target state="translated">stashの有効な名前の内部リストから名前を削除します。これが &lt;code&gt;HvENAME&lt;/code&gt; によって返される名前である場合、リスト内の別の名前が &lt;code&gt;HvENAME&lt;/code&gt; に使用されます（HvENAMEがそれを使用します）。</target>
        </trans-unit>
        <trans-unit id="809993536a04c0412f321f50161f58b0d57e7cfc" translate="yes" xml:space="preserve">
          <source>Removes all key/value pairs with key &lt;code&gt;$key&lt;/code&gt; from the database.</source>
          <target state="translated">キー &lt;code&gt;$key&lt;/code&gt; を持つすべてのキー/値ペアをデータベースから削除します。</target>
        </trans-unit>
        <trans-unit id="881ae4af57d8a01c05348ec9fb6a313da72be1db" translate="yes" xml:space="preserve">
          <source>Removes all magic of type &lt;code&gt;type&lt;/code&gt; from an SV.</source>
          <target state="translated">タイプ &lt;code&gt;type&lt;/code&gt; のすべての魔法をSVから削除します。</target>
        </trans-unit>
        <trans-unit id="8d57ef147df287f0950a79a758b1f234220edab5" translate="yes" xml:space="preserve">
          <source>Removes all magic of type &lt;code&gt;type&lt;/code&gt; with the specified &lt;code&gt;vtbl&lt;/code&gt; from an SV.</source>
          <target state="translated">指定された &lt;code&gt;vtbl&lt;/code&gt; を持つタイプ &lt;code&gt;type&lt;/code&gt; のすべてのマジックをSVから削除します。</target>
        </trans-unit>
        <trans-unit id="a36777ffd18950871e8ee89c20b4299ff54332fb" translate="yes" xml:space="preserve">
          <source>Removes an &lt;code&gt;INPUT&lt;/code&gt; entry from the typemap.</source>
          <target state="translated">タイプマップから &lt;code&gt;INPUT&lt;/code&gt; エントリを削除します。</target>
        </trans-unit>
        <trans-unit id="0ef0360eff2e64e0016e3d57dae62a1a47303bb6" translate="yes" xml:space="preserve">
          <source>Removes an &lt;code&gt;OUTPUT&lt;/code&gt; entry from the typemap.</source>
          <target state="translated">タイプマップから &lt;code&gt;OUTPUT&lt;/code&gt; エントリを削除します。</target>
        </trans-unit>
        <trans-unit id="2fb20ac267a12dd5bf7ea9c2de38f7f76336ee66" translate="yes" xml:space="preserve">
          <source>Removes and returns the first element of the array.</source>
          <target state="translated">配列の最初の要素を削除して返します。</target>
        </trans-unit>
        <trans-unit id="57dd5066c021b71185b5e0fb65bafc28180f3c03" translate="yes" xml:space="preserve">
          <source>Removes and returns the last element of the array.</source>
          <target state="translated">配列の最後の要素を削除して返します。</target>
        </trans-unit>
        <trans-unit id="76d90152ed1c0eca472fdee0bd8ef8961b38208a" translate="yes" xml:space="preserve">
          <source>Removes and returns the specified number of items (defaults to 1) from the specified index position in the queue (0 is the head of the queue). When called with no arguments, &lt;code&gt;extract&lt;/code&gt; operates the same as &lt;code&gt;dequeue_nb&lt;/code&gt; .</source>
          <target state="translated">キュー内の指定されたインデックス位置（0はキューの先頭）から指定された数の項目（デフォルトは1）を削除して返します。引数なしで呼び出された場合、 &lt;code&gt;extract&lt;/code&gt; は &lt;code&gt;dequeue_nb&lt;/code&gt; と同じように動作します。</target>
        </trans-unit>
        <trans-unit id="15b4a09f54d48eabe7983cbd2bb5dd267d29b416" translate="yes" xml:space="preserve">
          <source>Removes and returns the specified number of items (defaults to 1) from the specified index position in the queue (0 is the head of the queue). When called with no arguments, &lt;code&gt;extract&lt;/code&gt; operates the same as &lt;code&gt;dequeue_nb&lt;/code&gt;.</source>
          <target state="translated">キュー内の指定されたインデックス位置（0はキューの先頭）から指定された数のアイテム（デフォルトは1）を削除して返します。引数なしで呼び出された場合、 &lt;code&gt;extract&lt;/code&gt; は &lt;code&gt;dequeue_nb&lt;/code&gt; と同じように動作します。</target>
        </trans-unit>
        <trans-unit id="8f380bd3157b8fd25954da97a5468fe271c2abeb" translate="yes" xml:space="preserve">
          <source>Removes any entries with names matching any of the given filenames from the in-memory archive. Returns a list of &lt;code&gt;Archive::Tar::File&lt;/code&gt; objects that remain.</source>
          <target state="translated">指定されたファイル名のいずれかに一致する名前を持つエントリをメモリ内のアーカイブから削除します。残っている &lt;code&gt;Archive::Tar::File&lt;/code&gt; オブジェクトのリストを返します。</target>
        </trans-unit>
        <trans-unit id="46574b8be47fb344cd76c91139f93a27d5320b33" translate="yes" xml:space="preserve">
          <source>Removes files (even if readonly)</source>
          <target state="translated">ファイルを削除する (読み取り専用であっても)</target>
        </trans-unit>
        <trans-unit id="82a08e1d7b6e614e50d42b649760f9cfc8ea485c" translate="yes" xml:space="preserve">
          <source>Removes files and directories - recursively (even if readonly)</source>
          <target state="translated">ファイルとディレクトリを再帰的に削除します(読み取り専用であっても)</target>
        </trans-unit>
        <trans-unit id="a4f180c566519c24cd55bbd6c9be1a8802527bbf" translate="yes" xml:space="preserve">
          <source>Removes one SV from the end of the array, reducing its size by one and returning the SV (transferring control of one reference count) to the caller. Returns &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt; if the array is empty.</source>
          <target state="translated">配列の最後から1つのSVを削除し、そのサイズを1つ減らし、SV（1つの参照カウントの制御を転送）を呼び出し元に返します。配列が空の場合は &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="776a73e7b3694675ac208e6c27b3b30e60b64342" translate="yes" xml:space="preserve">
          <source>Removes one SV from the start of the array, reducing its size by one and returning the SV (transferring control of one reference count) to the caller. Returns &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt; if the array is empty.</source>
          <target state="translated">配列の先頭から1つのSVを削除し、そのサイズを1つ減らし、SV（1つの参照カウントの制御を転送）を呼び出し元に返します。配列が空の場合は &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="735d1cbf14be45e8708ade1447bb133c3aac27be" translate="yes" xml:space="preserve">
          <source>Removes redundant portions of file specifications and returns results in native syntax unless Unix filename reporting has been enabled.</source>
          <target state="translated">Unix のファイル名報告が有効になっていない限り、ファイル仕様の冗長な部分を削除し、ネイティブ構文で結果を返します。</target>
        </trans-unit>
        <trans-unit id="9bea1ee738228f4d9f5b216586733974d74ba26c" translate="yes" xml:space="preserve">
          <source>Removes the elements designated by OFFSET and LENGTH from an array, and replaces them with the elements of LIST, if any. In list context, returns the elements removed from the array. In scalar context, returns the last element removed, or &lt;a href=&quot;#undef-EXPR&quot;&gt;&lt;code&gt;undef&lt;/code&gt;&lt;/a&gt; if no elements are removed. The array grows or shrinks as necessary. If OFFSET is negative then it starts that far from the end of the array. If LENGTH is omitted, removes everything from OFFSET onward. If LENGTH is negative, removes the elements from OFFSET onward except for -LENGTH elements at the end of the array. If both OFFSET and LENGTH are omitted, removes everything. If OFFSET is past the end of the array and a LENGTH was provided, Perl issues a warning, and splices at the end of the array.</source>
          <target state="translated">OFFSETおよびLENGTHで指定された要素を配列から削除し、存在する場合はそれらをLISTの要素に置き換えます。リストコンテキストでは、配列から削除された要素を返します。スカラーコンテキストでは、最後に削除された要素を返します。要素が削除されていない場合は&lt;a href=&quot;#undef-EXPR&quot;&gt; &lt;code&gt;undef&lt;/code&gt; を&lt;/a&gt;返します。アレイは必要に応じて拡大または縮小します。 OFFSETが負の場合、配列の終わりからその距離で開始します。 LENGTHを省略すると、OFFSET以降のすべてが削除されます。 LENGTHが負の場合、配列の最後にある-LENGTH要素を除いて、OFFSET以降の要素を削除します。 OFFSETとLENGTHの両方を省略した場合、すべてを削除します。 OFFSETが配列の終わりを超えており、LENGTHが指定されている場合、Perlは警告を発行し、配列の終わりでスプライスします。</target>
        </trans-unit>
        <trans-unit id="343f1c2f52c3d8dcf7da53d9d80db009530f49dd" translate="yes" xml:space="preserve">
          <source>Removes the elements designated by OFFSET and LENGTH from an array, and replaces them with the elements of LIST, if any. In list context, returns the elements removed from the array. In scalar context, returns the last element removed, or &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if no elements are removed. The array grows or shrinks as necessary. If OFFSET is negative then it starts that far from the end of the array. If LENGTH is omitted, removes everything from OFFSET onward. If LENGTH is negative, removes the elements from OFFSET onward except for -LENGTH elements at the end of the array. If both OFFSET and LENGTH are omitted, removes everything. If OFFSET is past the end of the array and a LENGTH was provided, Perl issues a warning, and splices at the end of the array.</source>
          <target state="translated">OFFSETとLENGTHで指定された要素を配列から削除し、あれば、それらをLISTの要素で置き換えます。リストコンテキストでは、配列から削除された要素を返します。スカラーコンテキストでは、最後に削除された要素を返します。要素が削除されていない場合は &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; を返します。アレイは必要に応じて拡大または縮小します。 OFFSETが負の場合は、配列の最後からそれだけ離れて始まります。 LENGTHを省略すると、OFFSET以降のすべてが削除されます。 LENGTHが負の場合、配列の最後にある-LENGTH要素を除いて、要素をOFFSETから削除します。 OFFSETとLENGTHの両方が省略された場合、すべてを削除します。 OFFSETが配列の最後を超え、LENGTHが指定されている場合、Perlは警告を発行し、配列の最後にスプライスします。</target>
        </trans-unit>
        <trans-unit id="1e5f1083ce2b66e546ddef1a96560cdca11f2193" translate="yes" xml:space="preserve">
          <source>Removes the elements designated by OFFSET and LENGTH from an array, and replaces them with the elements of LIST, if any. In list context, returns the elements removed from the array. In scalar context, returns the last element removed, or &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if no elements are removed. The array grows or shrinks as necessary. If OFFSET is negative then it starts that far from the end of the array. If LENGTH is omitted, removes everything from OFFSET onward. If LENGTH is negative, removes the elements from OFFSET onward except for -LENGTH elements at the end of the array. If both OFFSET and LENGTH are omitted, removes everything. If OFFSET is past the end of the array and a LENGTH was provided, Perl issues a warning, and splices at the end of the array.</source>
          <target state="translated">OFFSETとLENGTHで指定された要素を配列から削除し、あれば、それらをLISTの要素で置き換えます。リストコンテキストでは、配列から削除された要素を返します。スカラーコンテキストでは、最後に削除された要素を返します。要素が削除されていない場合は &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; を返します。アレイは必要に応じて拡大または縮小します。 OFFSETが負の場合は、配列の最後からそれだけ離れて始まります。 LENGTHを省略すると、OFFSET以降のすべてが削除されます。 LENGTHが負の場合、配列の最後にある-LENGTH要素を除いて、要素をOFFSETから削除します。 OFFSETとLENGTHの両方が省略された場合、すべてを削除します。 OFFSETが配列の最後を超え、LENGTHが指定されている場合、Perlは警告を発行し、配列の最後にスプライスします。</target>
        </trans-unit>
        <trans-unit id="4d4d21ffe02b9208cd41895cba1b6ac56478169b" translate="yes" xml:space="preserve">
          <source>Removes the files listed in a $packlist_file.</source>
          <target state="translated">packlist_file にリストされているファイルを削除します。</target>
        </trans-unit>
        <trans-unit id="31c8fa888188962e0f82082eb5ec899f29cb7f2f" translate="yes" xml:space="preserve">
          <source>Removes the last filter that was applied to the DBM file associated with &lt;code&gt;$db&lt;/code&gt; , if present.</source>
          <target state="translated">&lt;code&gt;$db&lt;/code&gt; に関連付けられたDBMファイルに適用された最後のフィルターが存在する場合、それを削除します。</target>
        </trans-unit>
        <trans-unit id="568644ad8cc92b707ff468c51cd41ce25b0c8f02" translate="yes" xml:space="preserve">
          <source>Removes the last filter that was applied to the DBM file associated with &lt;code&gt;$db&lt;/code&gt;, if present.</source>
          <target state="translated">&lt;code&gt;$db&lt;/code&gt; に関連付けられているDBMファイルに適用された最後のフィルターが存在する場合は、それを削除します。</target>
        </trans-unit>
        <trans-unit id="958639ea0aa2c2aa0215e5881cb6e9eecf4443b5" translate="yes" xml:space="preserve">
          <source>Removes the requested number of items (default is 1) from the head of the queue, and returns them. If the queue contains fewer than the requested number of items, then it immediately (i.e., non-blocking) returns whatever items there are on the queue. If the queue is empty, then &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned.</source>
          <target state="translated">要求された数のアイテム（デフォルトは1）をキューの先頭から削除して返します。要求された数よりも少ない数のアイテムがキューに含まれている場合、すぐに（つまり、非ブロッキングで）キューにあるアイテムが返されます。キューが空の場合、 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="cd8a0b7da955d9fb86535777a2a26ba36037620a" translate="yes" xml:space="preserve">
          <source>Removes the requested number of items (default is 1) from the head of the queue, and returns them. If the queue contains fewer than the requested number of items, then it immediately (i.e., non-blocking) returns whatever items there are on the queue. If the queue is empty, then &lt;code&gt;undef&lt;/code&gt; is returned.</source>
          <target state="translated">要求された数のアイテム（デフォルトは1）をキューの先頭から削除し、それらを返します。キューに含まれるアイテムの数が要求された数より少ない場合、キューにあるアイテムはすぐに（つまり、非ブロッキングで）返されます。キューが空の場合、 &lt;code&gt;undef&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="cec50374edbc42fbde5226187a161063372e5a25" translate="yes" xml:space="preserve">
          <source>Removes the requested number of items (default is 1) from the head of the queue, and returns them. If the queue contains fewer than the requested number of items, then the thread will be blocked until the requisite number of items are available (i.e., until other threads &amp;lt;enqueue&amp;gt; more items).</source>
          <target state="translated">要求された数のアイテム（デフォルトは1）をキューの先頭から削除して返します。キューに含まれるアイテムの数が要求された数より少ない場合、必要な数のアイテムが利用可能になるまで（つまり、他のスレッドがさらに&amp;lt;エンキュー&amp;gt;するまで）、スレッドはブロックされます。</target>
        </trans-unit>
        <trans-unit id="e8f4ef63ea30d8b6b0dbc9e1cb7647711d8a73fd" translate="yes" xml:space="preserve">
          <source>Removes the requested number of items (default is 1) from the head of the queue, and returns them. If the queue contains fewer than the requested number of items, then the thread will be blocked until the requisite number of items are available (i.e., until other threads &lt;code&gt;enqueue&lt;/code&gt; more items).</source>
          <target state="translated">要求された数のアイテム（デフォルトは1）をキューの先頭から削除し、それらを返します。キューが項目の要求された数よりも少ないが含まれている場合（他のスレッドがするまで、すなわちアイテムの必要な数が利用可能になるまで、そのスレッドがブロックされます &lt;code&gt;enqueue&lt;/code&gt; 複数のアイテムを）。</target>
        </trans-unit>
        <trans-unit id="6df6cfbdfddf1fac82ca5fddb9891f3ddb2098dd" translate="yes" xml:space="preserve">
          <source>Removes the requested number of items (default is 1) from the head of the queue, and returns them. If the queue contains fewer than the requested number of items, then the thread will be blocked until the requisite number of items are available, or until the timeout is reached. If the timeout is reached, it returns whatever items there are on the queue, or &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if the queue is empty.</source>
          <target state="translated">要求された数のアイテム（デフォルトは1）をキューの先頭から削除して返します。キューに含まれるアイテムの数が要求された数より少ない場合、必要な数のアイテムが利用可能になるか、タイムアウトに達するまで、スレッドはブロックされます。タイムアウトに達すると、キューにあるアイテムを返します。キューが空の場合は &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="35a0d2733880763e274625057ffceed54ecf5303" translate="yes" xml:space="preserve">
          <source>Removes the requested number of items (default is 1) from the head of the queue, and returns them. If the queue contains fewer than the requested number of items, then the thread will be blocked until the requisite number of items are available, or until the timeout is reached. If the timeout is reached, it returns whatever items there are on the queue, or &lt;code&gt;undef&lt;/code&gt; if the queue is empty.</source>
          <target state="translated">要求された数のアイテム（デフォルトは1）をキューの先頭から削除し、それらを返します。キューに含まれるアイテムの数が要求された数より少ない場合、必要な数のアイテムが使用可能になるまで、またはタイムアウトに達するまで、スレッドはブロックされます。タイムアウトに達すると、キューにあるすべてのアイテムが返されます。キューが空の場合は &lt;code&gt;undef&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="8f94e09734e307d7590468dedfa423f230c227f4" translate="yes" xml:space="preserve">
          <source>Removes the restriction on the %hash's keyset.</source>
          <target state="translated">hash のキーセットの制限を解除します。</target>
        </trans-unit>
        <trans-unit id="05f548f5216a2bff8836328b3856ebee4fa508c8" translate="yes" xml:space="preserve">
          <source>Removing things is a much more dangerous proposition than creating things. As such, there are certain conditions that &lt;code&gt;remove_tree&lt;/code&gt; may encounter that are so dangerous that the only sane action left is to kill the program.</source>
          <target state="translated">物を取り除くことは、物を作ることよりもはるかに危険な命題です。そのため、 &lt;code&gt;remove_tree&lt;/code&gt; が遭遇する可能性がある非常に危険な特定の条件があり、残された正気なアクションはプログラムを強制終了することだけです。</target>
        </trans-unit>
        <trans-unit id="80beee49629b23b85284ecc1862bdfaca20ee299" translate="yes" xml:space="preserve">
          <source>Rename a file on the remote FTP server from &lt;code&gt;OLDNAME&lt;/code&gt; to &lt;code&gt;NEWNAME&lt;/code&gt; . This is done by sending the RNFR and RNTO commands.</source>
          <target state="translated">リモートFTPサーバー上のファイルの名前を &lt;code&gt;OLDNAME&lt;/code&gt; から &lt;code&gt;NEWNAME&lt;/code&gt; に変更します。これは、RNFRおよびRNTOコマンドを送信することによって行われます。</target>
        </trans-unit>
        <trans-unit id="642d12bf15571956a8080b21ce2eca8371d01f61" translate="yes" xml:space="preserve">
          <source>Rename a file on the remote FTP server from &lt;code&gt;OLDNAME&lt;/code&gt; to &lt;code&gt;NEWNAME&lt;/code&gt;. This is done by sending the RNFR and RNTO commands.</source>
          <target state="translated">リモートFTPサーバー上のファイルの名前を &lt;code&gt;OLDNAME&lt;/code&gt; から &lt;code&gt;NEWNAME&lt;/code&gt; に変更します。これは、RNFRおよびRNTOコマンドを送信することによって行われます。</target>
        </trans-unit>
        <trans-unit id="dcd9e0a25ada8f075c3e6f944b88ac0d76972fc5" translate="yes" xml:space="preserve">
          <source>Rename a file, this wraps &lt;code&gt;rename()&lt;/code&gt; in a way that makes it more reliable cross-platform when trying to rename files you recently altered.</source>
          <target state="translated">ファイルの &lt;code&gt;rename()&lt;/code&gt; ます。これにより、最近変更したファイルの名前を変更しようとしたときに、クロスプラットフォームでの信頼性が高くなるように、rename（）がラップされます。</target>
        </trans-unit>
        <trans-unit id="dc3012ff7da46214e954150145eb0f38e1b162b8" translate="yes" xml:space="preserve">
          <source>Rename the current file to $new_name.</source>
          <target state="translated">現在のファイルの名前を $new_name に変更します。</target>
        </trans-unit>
        <trans-unit id="2143b98f30e20a57eafd5e99d8e4626187d94b19" translate="yes" xml:space="preserve">
          <source>Rename the file of the in-memory archive to $new_name.</source>
          <target state="translated">メモリ内アーカイブのファイル名を$new_nameに変更します。</target>
        </trans-unit>
        <trans-unit id="3190f9fa89e7c1a578490836d655b0eef2259cde" translate="yes" xml:space="preserve">
          <source>Renamed to &lt;code&gt;Class::Struct&lt;/code&gt; and modified by Jim Miner, 1997-04-02.</source>
          <target state="translated">&lt;code&gt;Class::Struct&lt;/code&gt; 名前が変更され、Jim Miner、1997-04-02によって変更されました。</target>
        </trans-unit>
        <trans-unit id="e47a07efe4c4b4772864c20ed858124878539f3b" translate="yes" xml:space="preserve">
          <source>Renames a file or directory. &lt;code&gt;$sOldName&lt;/code&gt; is the name of the existing file or directory that is to be renamed. &lt;code&gt;$sNewName&lt;/code&gt; is the new name to give the file or directory. Returns a true value if the move succeeds. For failure, returns a false value and sets &lt;code&gt;fileLastErorr()&lt;/code&gt; and &lt;code&gt;$^E&lt;/code&gt; to the reason for the failure.</source>
          <target state="translated">ファイルまたはディレクトリの名前を変更します。 &lt;code&gt;$sOldName&lt;/code&gt; は、名前を変更する既存のファイルまたはディレクトリの名前です。 &lt;code&gt;$sNewName&lt;/code&gt; は、ファイルまたはディレクトリに付ける新しい名前です。移動が成功した場合、真の値を返します。失敗の場合、false値を返し、 &lt;code&gt;fileLastErorr()&lt;/code&gt; と &lt;code&gt;$^E&lt;/code&gt; を失敗の理由に設定します。</target>
        </trans-unit>
        <trans-unit id="746933bbfadd0d015fb0f5cef0f99f8789b8c3b4" translate="yes" xml:space="preserve">
          <source>Render Pod with ANSI color escapes</source>
          <target state="translated">ANSIカラーエスケープを使用したレンダーポッド</target>
        </trans-unit>
        <trans-unit id="d353704fc90d73163b33a1077fefe42f84d9a425" translate="yes" xml:space="preserve">
          <source>Render Pod with terminal escapes</source>
          <target state="translated">ターミナルエスケープを備えたレンダーポッド</target>
        </trans-unit>
        <trans-unit id="96a06e164621da6212cb23a64e613b86284d9b8a" translate="yes" xml:space="preserve">
          <source>Renderings usually include a banner line identifying the function name or stringified subref. This suppresses the printing of the banner.</source>
          <target state="translated">レンダリングには通常、関数名や文字列化されたサブリファレンスを識別するバナー行が含まれています。これは、バナーの印刷を抑制します。</target>
        </trans-unit>
        <trans-unit id="2465d0a6e5df0d7a39af6d7760dce88c9cf728d8" translate="yes" xml:space="preserve">
          <source>Renders code in a typewriter font, or gives some other indication that this represents program text (&quot;&lt;code&gt;C&amp;lt;gmtime($^T)&amp;gt;&lt;/code&gt; &quot;) or some other form of computerese (&quot;&lt;code&gt;C&amp;lt;drwxr-xr-x&amp;gt;&lt;/code&gt; &quot;).</source>
          <target state="translated">タイプライターフォントでコードをレンダリングするか、これがプログラムテキスト（ &quot; &lt;code&gt;C&amp;lt;gmtime($^T)&amp;gt;&lt;/code&gt; &quot;）または他の形式のコンピューター（ &quot; &lt;code&gt;C&amp;lt;drwxr-xr-x&amp;gt;&lt;/code&gt; &quot;）を表すことを示すその他の指示を与えます。</target>
        </trans-unit>
        <trans-unit id="ac8652a7c224531155b4f4957d03b8050523d895" translate="yes" xml:space="preserve">
          <source>Renders code in a typewriter font, or gives some other indication that this represents program text (&quot;&lt;code&gt;C&amp;lt;gmtime($^T)&amp;gt;&lt;/code&gt;&quot;) or some other form of computerese (&quot;&lt;code&gt;C&amp;lt;drwxr-xr-x&amp;gt;&lt;/code&gt;&quot;).</source>
          <target state="translated">タイプライターフォントでコードをレンダリングするか、これがプログラムテキスト（ &quot; &lt;code&gt;C&amp;lt;gmtime($^T)&amp;gt;&lt;/code&gt; &quot;）または他の形式のコンピューター（ &quot; &lt;code&gt;C&amp;lt;drwxr-xr-x&amp;gt;&lt;/code&gt; &quot;）を表すことを示すその他の指標を提供します。</target>
        </trans-unit>
        <trans-unit id="de8802423802e5328366ef6d324218b46f675df5" translate="yes" xml:space="preserve">
          <source>Renders only bar() from foo.pl. To see main, drop the ',bar'. To see both, add ',-main'</source>
          <target state="translated">foo.pl の bar()のみをレンダリングします。main を表示するには ',bar' を削除します。両方を表示するには ',-main' を追加します。</target>
        </trans-unit>
        <trans-unit id="0165f7088a87c494db214706823267e37ced6eda" translate="yes" xml:space="preserve">
          <source>Renew</source>
          <target state="translated">Renew</target>
        </trans-unit>
        <trans-unit id="d5b868808deee1a81e947ec7b7a22e1fdba75fa5" translate="yes" xml:space="preserve">
          <source>Renewc</source>
          <target state="translated">Renewc</target>
        </trans-unit>
        <trans-unit id="1d7ffe27769737b77fe22a1b19e1f80904630a03" translate="yes" xml:space="preserve">
          <source>Reopen STDIN, STDOUT, and STDERR so they're not connected to the old tty.</source>
          <target state="translated">STDIN、STDOUT、STDERRを開いて、古いttyに接続されていないようにします。</target>
        </trans-unit>
        <trans-unit id="50403581fa8d364c53f5c65182aae61f98504ad4" translate="yes" xml:space="preserve">
          <source>Reopens file and restores pointer; if function fails, underlying filehandle may be closed, or pointer may be in a different position. (VMS)</source>
          <target state="translated">関数が失敗した場合は、ファイルハンドルが閉じられたり、ポインタが別の位置になったりします。(VMS)</target>
        </trans-unit>
        <trans-unit id="7d932850e50913dc3862aecc2a74417d65c0b852" translate="yes" xml:space="preserve">
          <source>Repeat Step (2) in respect of the second operand.</source>
          <target state="translated">2番目のオペランドに関してステップ(2)を繰り返します。</target>
        </trans-unit>
        <trans-unit id="bb07dc7ea8229d420ce2ac387c7ea0a202d45562" translate="yes" xml:space="preserve">
          <source>Repeat last &lt;code&gt;n&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; command.</source>
          <target state="translated">最後の &lt;code&gt;n&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; コマンドを繰り返します。</target>
        </trans-unit>
        <trans-unit id="2358b9bb07e78f814eae396390b961b02f59c0a8" translate="yes" xml:space="preserve">
          <source>Repeat last &lt;code&gt;n&lt;/code&gt; or &lt;code&gt;s&lt;/code&gt; command.</source>
          <target state="translated">最後の &lt;code&gt;n&lt;/code&gt; または &lt;code&gt;s&lt;/code&gt; コマンドを繰り返します。</target>
        </trans-unit>
        <trans-unit id="08efeab209d66736e16ea6a2dfdea9bdfe05db92" translate="yes" xml:space="preserve">
          <source>Repeated Patterns Matching a Zero-length Substring</source>
          <target state="translated">長さゼロのサブストリングにマッチする繰り返しパターン</target>
        </trans-unit>
        <trans-unit id="84e8fe3c507332660e120918ed6562e6b89b9c97" translate="yes" xml:space="preserve">
          <source>Repeated format line will never terminate (~~ and @#)</source>
          <target state="translated">繰り返しのフォーマット行は決して終了しません(~~と@#)</target>
        </trans-unit>
        <trans-unit id="fde43df7c92f017fb14d13de3aae28a8813ac4fe" translate="yes" xml:space="preserve">
          <source>Repeating Format Lines</source>
          <target state="translated">書式行の繰り返し</target>
        </trans-unit>
        <trans-unit id="43149858d5d5f79dfa2faccd2ca041cee85da454" translate="yes" xml:space="preserve">
          <source>Repeating a character in a character class has no effect; it's considered to be in the set only once.</source>
          <target state="translated">キャラクタークラスのキャラクターを繰り返しても効果はなく、1回だけセットに入っているとみなされます。</target>
        </trans-unit>
        <trans-unit id="a85fe8562748724d58fdb6dc77267e0147ad4210" translate="yes" xml:space="preserve">
          <source>Replace &lt;code&gt;5.22.0&lt;/code&gt; with your respective version of Perl.</source>
          <target state="translated">&lt;code&gt;5.22.0&lt;/code&gt; をそれぞれのバージョンのPerlに置き換えます。</target>
        </trans-unit>
        <trans-unit id="251e7c4bfc5f73e5cedbfa5879fd66caa5e45631" translate="yes" xml:space="preserve">
          <source>Replace &lt;code&gt;5.32.0&lt;/code&gt; with your respective version of Perl.</source>
          <target state="translated">&lt;code&gt;5.32.0&lt;/code&gt; をそれぞれのバージョンのPerlに置き換えます。</target>
        </trans-unit>
        <trans-unit id="18962e5ac47b68c698be2cba09a95de209f42f3c" translate="yes" xml:space="preserve">
          <source>Replace functions with equivalents which succeed or die</source>
          <target state="translated">関数を成功するか死ぬかの等価物に置き換える</target>
        </trans-unit>
        <trans-unit id="1c92ec8d2541924e350a8c75b34361906527bb30" translate="yes" xml:space="preserve">
          <source>Replace functions with ones that succeed or die with lexical scope</source>
          <target state="translated">継承・消滅する関数を語彙的なスコープで置き換える</target>
        </trans-unit>
        <trans-unit id="65506780247288f4a1b4afbb82774de37cac158d" translate="yes" xml:space="preserve">
          <source>Replace means the facet is intended to replace the normal rendering of the event.</source>
          <target state="translated">置換は、ファセットがイベントの通常のレンダリングを置き換えることを意味します。</target>
        </trans-unit>
        <trans-unit id="8c07f10b4913cc3e1911ba0677449ebf74f893b6" translate="yes" xml:space="preserve">
          <source>Replace the current content of the file with the new content. This only affects the in-memory archive, not the on-disk version until you write it.</source>
          <target state="translated">ファイルの現在の内容を新しい内容に置き換えます。これはメモリ内アーカイブにのみ影響し、書き込むまでディスク上のバージョンには影響しません。</target>
        </trans-unit>
        <trans-unit id="cdfd162910445bd1638ac0fe46839d15656532b8" translate="yes" xml:space="preserve">
          <source>Replace the existing formatter instance with a new one. Formatters must be objects that implement a &lt;code&gt;$formatter-&amp;gt;write($event)&lt;/code&gt; method.</source>
          <target state="translated">既存のフォーマッタインスタンスを新しいインスタンスに置き換えます。フォーマッターは、 &lt;code&gt;$formatter-&amp;gt;write($event)&lt;/code&gt; メソッドを実装するオブジェクトである必要があります。</target>
        </trans-unit>
        <trans-unit id="986044e84011b0f7ab47c1f668359c3e1bfe3b0b" translate="yes" xml:space="preserve">
          <source>Replaced 'requires', 'build_requires', 'configure_requires', 'recommends' and 'conflicts' with new 'prereqs' data structure divided by</source>
          <target state="translated">requires'、'build_requires'、'configure_requires'、'recommends'、'conflicts' を新しい 'prereqs' データ構造で分割したものに置き換えます。</target>
        </trans-unit>
        <trans-unit id="971c11ee394d9f4c51d93debff09a5dab2b9fa14" translate="yes" xml:space="preserve">
          <source>Replaced by &lt;code&gt;license&lt;/code&gt; in &lt;code&gt;resources&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;resources&lt;/code&gt; 内の &lt;code&gt;license&lt;/code&gt; に置き換えられました</target>
        </trans-unit>
        <trans-unit id="6afa37b5d673a2b9a6f60d0ff0852a76a39dc7e8" translate="yes" xml:space="preserve">
          <source>Replaced by &lt;code&gt;prereqs&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;prereqs&lt;/code&gt; 置き換えられました</target>
        </trans-unit>
        <trans-unit id="79dbbb22c782734b0390b72859d9473c5da98f2d" translate="yes" xml:space="preserve">
          <source>Replacement UNIVERSAL::VERSION</source>
          <target state="translated">置き換え用の UNIVERSAL::VERSION</target>
        </trans-unit>
        <trans-unit id="c30c0ec5760b9e4a57bed78b1c679a367eeb7c7c" translate="yes" xml:space="preserve">
          <source>Replacement list is longer than search list</source>
          <target state="translated">置換リストが検索リストより長い</target>
        </trans-unit>
        <trans-unit id="371e4e5b4cb257eb82924fb9ef0648f95de6300d" translate="yes" xml:space="preserve">
          <source>Replacing &lt;a href=&quot;#precision%28%29&quot;&gt;&quot;precision()&quot;&lt;/a&gt; with &lt;a href=&quot;#accuracy%28%29&quot;&gt;&quot;accuracy()&quot;&lt;/a&gt; is probably not what you want, either:</source>
          <target state="translated">&lt;a href=&quot;#precision%28%29&quot;&gt;「precision（）」&lt;/a&gt;を&lt;a href=&quot;#accuracy%28%29&quot;&gt;「accuracy（）」に&lt;/a&gt;置き換えることも、おそらくあなたが望むものではありません。</target>
        </trans-unit>
        <trans-unit id="bcf1e4e8bdb2fe628a8abd000e1f839c770063f2" translate="yes" xml:space="preserve">
          <source>Replacing &lt;a href=&quot;#precision()&quot;&gt;precision()&lt;/a&gt; with &lt;a href=&quot;#accuracy()&quot;&gt;accuracy()&lt;/a&gt; is probably not what you want, either:</source>
          <target state="translated">交換&lt;a href=&quot;#precision()&quot;&gt;の精度を（）&lt;/a&gt;と&lt;a href=&quot;#accuracy()&quot;&gt;）（精度&lt;/a&gt;のいずれか、何をしたい、おそらくではありません。</target>
        </trans-unit>
        <trans-unit id="04c3d01a224d7079c4a6658a1f97bf7007d32ca6" translate="yes" xml:space="preserve">
          <source>Replacing &lt;code&gt;quotewords('\s+', 0, q{this   is...})&lt;/code&gt; with &lt;code&gt;shellwords(q{this   is...})&lt;/code&gt; is a simpler way to accomplish the same thing.</source>
          <target state="translated">置換 &lt;code&gt;quotewords('\s+', 0, q{this is...})&lt;/code&gt; と &lt;code&gt;shellwords(q{this is...})&lt;/code&gt; 同じことを達成する簡単な方法です。</target>
        </trans-unit>
        <trans-unit id="51ef2891517f4e84ea35ac7c1f8f4b5d17a11f57" translate="yes" xml:space="preserve">
          <source>Replacing gettext</source>
          <target state="translated">gettextを置き換える</target>
        </trans-unit>
        <trans-unit id="ac4e98f2540d234d96786de45d1532a5d075c9c0" translate="yes" xml:space="preserve">
          <source>Replacing the Test::Builder singleton</source>
          <target state="translated">Test::Builder のシングルトンを置き換える</target>
        </trans-unit>
        <trans-unit id="0474936f96db9ffbfac4b5b976962e3518583bc1" translate="yes" xml:space="preserve">
          <source>Reply the message returning the results of any command. Set $rc = 0 for success and $result to the result string if appropriate.</source>
          <target state="translated">任意のコマンドの結果を返すメッセージを返信します。成功した場合は $rc=0、適切な場合は結果文字列に $result を設定します。</target>
        </trans-unit>
        <trans-unit id="c3db867fce0e13de8877d0bea95da44c88a5728a" translate="yes" xml:space="preserve">
          <source>Report &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt; &amp;amp;subroutine&lt;/code&gt; as well.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt; &amp;amp;subroutine&lt;/code&gt; も報告します。</target>
        </trans-unit>
        <trans-unit id="b5cd306c13e78fa562f58d53094a052ca27c9758" translate="yes" xml:space="preserve">
          <source>Report &lt;code&gt;goto &amp;amp;subroutine&lt;/code&gt; as well.</source>
          <target state="translated">&lt;code&gt;goto &amp;amp;subroutine&lt;/code&gt; も報告してください。</target>
        </trans-unit>
        <trans-unit id="8d6dfbcd24681e5daa1341fd47a225dd5d1dd5cd" translate="yes" xml:space="preserve">
          <source>Report successful build on this system to perl porters. Forces &lt;b&gt;-S&lt;/b&gt; and &lt;b&gt;-C&lt;/b&gt;. Forces and supplies values for &lt;b&gt;-s&lt;/b&gt; and &lt;b&gt;-b&lt;/b&gt;. Only prompts for a return address if it cannot guess it (for use with &lt;b&gt;make&lt;/b&gt;). Honors return address specified with &lt;b&gt;-r&lt;/b&gt;. You can use this with &lt;b&gt;-v&lt;/b&gt; to get more complete data. Only makes a report if this system is less than 60 days old.</source>
          <target state="translated">このシステムで成功したビルドをperlポーターに報告してください。&lt;b&gt;-S&lt;/b&gt;および&lt;b&gt;-Cを&lt;/b&gt;強制します。&lt;b&gt;-s&lt;/b&gt;および&lt;b&gt;-bの&lt;/b&gt;値を強制して提供します。推測できない場合にのみ、返信アドレスの入力を求めます（&lt;b&gt;make&lt;/b&gt;で使用）。&lt;b&gt;-rで&lt;/b&gt;指定された住所を返します。これを&lt;b&gt;-v&lt;/b&gt;と一緒に使用して、より完全なデータを取得できます。このシステムが60日以内の場合にのみレポートを作成します。</target>
        </trans-unit>
        <trans-unit id="046a0ac0fa082001e63886b95b1ea0a1b3dc1186" translate="yes" xml:space="preserve">
          <source>Report unsuccessful build on this system. Forces &lt;b&gt;-C&lt;/b&gt;. Forces and supplies a value for &lt;b&gt;-s&lt;/b&gt;, then requires you to edit the report and say what went wrong. Alternatively, a prepared report may be supplied using &lt;b&gt;-f&lt;/b&gt;. Only prompts for a return address if it cannot guess it (for use with &lt;b&gt;make&lt;/b&gt;). Honors return address specified with &lt;b&gt;-r&lt;/b&gt;. You can use this with &lt;b&gt;-v&lt;/b&gt; to get more complete data. Only makes a report if this system is less than 60 days old.</source>
          <target state="translated">このシステムで失敗したビルドを報告します。力&lt;b&gt;-C&lt;/b&gt;。&lt;b&gt;-sの&lt;/b&gt;値を強制して提供します。次に、レポートを編集して、何が問題だったかを言う必要があります。または、&lt;b&gt;-f&lt;/b&gt;を使用して準備済みレポートを提供することもできます。推測できない場合にのみ、返信アドレスの入力を求めます（&lt;b&gt;make&lt;/b&gt;で使用）。&lt;b&gt;-rで&lt;/b&gt;指定された住所を返します。これを&lt;b&gt;-v&lt;/b&gt;と一緒に使用して、より完全なデータを取得できます。このシステムが60日以内の場合にのみレポートを作成します。</target>
        </trans-unit>
        <trans-unit id="ea266d59d6bb66aa6058e452a22d24952cd32375" translate="yes" xml:space="preserve">
          <source>Reporting Warnings from a Module</source>
          <target state="translated">モジュールからの警告の報告</target>
        </trans-unit>
        <trans-unit id="f7901ce6e5184fe8ddf89e62878bc4bbe4231724" translate="yes" xml:space="preserve">
          <source>Reports on the SV's length in bytes, calling length magic if available, but does not set the UTF8 flag on &lt;code&gt;sv&lt;/code&gt;. It will fall back to 'get' magic if there is no 'length' magic, but with no indication as to whether it called 'get' magic. It assumes &lt;code&gt;sv&lt;/code&gt; is a &lt;code&gt;PVMG&lt;/code&gt; or higher. Use &lt;code&gt;sv_len()&lt;/code&gt; instead.</source>
          <target state="translated">SVの長さをバイト単位で報告し、可能な場合は長さマジックを呼び出しますが、 &lt;code&gt;sv&lt;/code&gt; にUTF8フラグを設定しません。「長さ」の魔法がない場合は「get」の魔法にフォールバックしますが、「get」の魔法と呼ばれるかどうかは示されません。 &lt;code&gt;sv&lt;/code&gt; が &lt;code&gt;PVMG&lt;/code&gt; 以上であることを前提としています。代わりに &lt;code&gt;sv_len()&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="ffdffdcb8b2df49b8674c54cfb9fc8b8d0483959" translate="yes" xml:space="preserve">
          <source>Reports on the SV's length in bytes, calling length magic if available, but does not set the UTF8 flag on the sv. It will fall back to 'get' magic if there is no 'length' magic, but with no indication as to whether it called 'get' magic. It assumes the sv is a PVMG or higher. Use sv_len() instead.</source>
          <target state="translated">SV の長さをバイト単位で報告し、利用可能であれば length マジックを呼び出しますが、sv に UTF8 フラグを設定しません。length' マジックがない場合は 'get' マジックにフォールバックしますが、'get' マジックを呼んだかどうかは表示されません。これはsvがPVMG以上であることを前提としています。代わりに sv_len()を使用する。</target>
        </trans-unit>
        <trans-unit id="df0cd51690b308d83c8c2a5a9e2a3a4a64f9b99c" translate="yes" xml:space="preserve">
          <source>Reports the name of a directory only AFTER all its entries have been reported. Entry point &lt;code&gt;finddepth()&lt;/code&gt; is a shortcut for specifying &lt;code&gt;{ bydepth =&amp;gt; 1 }&lt;/code&gt; in the first argument of &lt;code&gt;find()&lt;/code&gt; .</source>
          <target state="translated">すべてのエントリが報告された後でのみ、ディレクトリの名前を報告します。エントリポイント &lt;code&gt;finddepth()&lt;/code&gt; は、 &lt;code&gt;find()&lt;/code&gt; の最初の引数で &lt;code&gt;{ bydepth =&amp;gt; 1 }&lt;/code&gt; を指定するためのショートカットです。</target>
        </trans-unit>
        <trans-unit id="4cd3ad596b0761c91589bf57f074644d8873be29" translate="yes" xml:space="preserve">
          <source>Reports the name of a directory only AFTER all its entries have been reported. Entry point &lt;code&gt;finddepth()&lt;/code&gt; is a shortcut for specifying &lt;code&gt;{ bydepth =&amp;gt; 1 }&lt;/code&gt; in the first argument of &lt;code&gt;find()&lt;/code&gt;.</source>
          <target state="translated">すべてのエントリが報告された後でのみ、ディレクトリの名前を報告します。エントリポイント &lt;code&gt;finddepth()&lt;/code&gt; は、 &lt;code&gt;find()&lt;/code&gt; の最初の引数で &lt;code&gt;{ bydepth =&amp;gt; 1 }&lt;/code&gt; を指定するためのショートカットです。</target>
        </trans-unit>
        <trans-unit id="de3875b10d66f76adea8b68994e05e1f77fbfd96" translate="yes" xml:space="preserve">
          <source>Reports whether or not a given result has passed. Anything which is &lt;b&gt;not&lt;/b&gt; a test result returns true. This is merely provided as a convenient shortcut which allows you to do this:</source>
          <target state="translated">指定された結果が合格したかどうかを報告します。テスト結果で&lt;b&gt;ない&lt;/b&gt;ものはすべてtrueを返します。これは単に、これを実行できる便利なショートカットとして提供されています。</target>
        </trans-unit>
        <trans-unit id="5162ff86f407ffbb175a07ee29f628d9cf194242" translate="yes" xml:space="preserve">
          <source>Reports whether or not a given result has passed. Anything which is &lt;b&gt;not&lt;/b&gt; a test result returns true. This is merely provided as a convenient shortcut.</source>
          <target state="translated">指定された結果が合格したかどうかを報告します。テスト結果で&lt;b&gt;ない&lt;/b&gt;ものはすべてtrueを返します。これは単に便利なショートカットとして提供されています。</target>
        </trans-unit>
        <trans-unit id="df62cf802fb1309bc3020785649077d1b279257f" translate="yes" xml:space="preserve">
          <source>Repository available at &lt;a href=&quot;https://github.com/Perl-Toolchain-Gang/ExtUtils-MakeMaker&quot;&gt;https://github.com/Perl-Toolchain-Gang/ExtUtils-MakeMaker&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/Perl-Toolchain-Gang/ExtUtils-MakeMaker&quot;&gt;https://github.com/Perl-Toolchain-Gang/ExtUtils-MakeMakerで&lt;/a&gt;入手可能なリポジトリ。</target>
        </trans-unit>
        <trans-unit id="ae96cfe64a1056e26aed0b66585fcf6f95903fc4" translate="yes" xml:space="preserve">
          <source>Represent &quot;section&quot; attributes of L codes</source>
          <target state="translated">Lコードの &quot;セクション &quot;属性を表現</target>
        </trans-unit>
        <trans-unit id="5cad6326d95f5c394a2a0ece052b89d37477f9a5" translate="yes" xml:space="preserve">
          <source>Represents a single test 'job'.</source>
          <target state="translated">単一のテスト「ジョブ」を表します。</target>
        </trans-unit>
        <trans-unit id="4430b222f104d3155fe29036567cb4c70378e82a" translate="yes" xml:space="preserve">
          <source>Republic of Korea</source>
          <target state="translated">大韓民国</target>
        </trans-unit>
        <trans-unit id="5e8100db6b0c279e38c95d1ae67d91b656c907fd" translate="yes" xml:space="preserve">
          <source>Request For Comment, which despite the timid connotations is the name of a series of important standards documents.</source>
          <target state="translated">コメントの要求(Request For Comment)は、臆病な意味合いにもかかわらず、一連の重要な標準文書の名前である。</target>
        </trans-unit>
        <trans-unit id="b9a3fcb32a77e66b13c2ae9d619624b56b7a847e" translate="yes" xml:space="preserve">
          <source>Request For Comments -- need I say more? &lt;a href=&quot;http://www.rfc-editor.org/&quot;&gt;http://www.rfc-editor.org/&lt;/a&gt;, &lt;a href=&quot;http://www.ietf.org/rfc.html&quot;&gt;http://www.ietf.org/rfc.html&lt;/a&gt;, &lt;a href=&quot;http://www.faqs.org/rfcs/&quot;&gt;http://www.faqs.org/rfcs/&lt;/a&gt;</source>
          <target state="translated">コメントのリクエスト-もっと言う必要がありますか？&lt;a href=&quot;http://www.rfc-editor.org/&quot;&gt;http://www.rfc-editor.org/&lt;/a&gt;、&lt;a href=&quot;http://www.ietf.org/rfc.html&quot;&gt;http://www.ietf.org/rfc.html&lt;/a&gt;、&lt;a href=&quot;http://www.faqs.org/rfcs/&quot;&gt;http://www.faqs.org/rfcs/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0c7883267dffd6a71ad1378c3d92086cbab7d043" translate="yes" xml:space="preserve">
          <source>Request a queue run for the DOMAIN given.</source>
          <target state="translated">与えられた DOMAIN に対してキューの実行を要求します。</target>
        </trans-unit>
        <trans-unit id="48a73e37efc9cbef432a388c9fbf6879bd9ac341" translate="yes" xml:space="preserve">
          <source>Request help text (a short summary of commands that are understood by this implementation) from the server. Returns the text or undef upon failure.</source>
          <target state="translated">サーバにヘルプテキスト(この実装で理解できるコマンドの短い要約)を要求します。テキストを返すか、失敗した場合は undef を返します。</target>
        </trans-unit>
        <trans-unit id="aa1612b368042a2309ea4276ed98c83bd230e51f" translate="yes" xml:space="preserve">
          <source>Request help text from the server. Returns the text or undef upon failure</source>
          <target state="translated">サーバにヘルプテキストを要求します。失敗した場合はテキストを返すか、 undef を返します。</target>
        </trans-unit>
        <trans-unit id="aa04b13719f18e39fe5cb28ed55eadcaf7d4293c" translate="yes" xml:space="preserve">
          <source>Request information about disk performance. &lt;code&gt;$pInBuf&lt;/code&gt; should be &lt;code&gt;[]&lt;/code&gt;. &lt;code&gt;$opOutBuf&lt;/code&gt; will be set to contain a &lt;code&gt;DISK_PERFORMANCE&lt;/code&gt; data structure:</source>
          <target state="translated">ディスクのパフォーマンスに関する情報を要求します。 &lt;code&gt;$pInBuf&lt;/code&gt; は &lt;code&gt;[]&lt;/code&gt; である必要があります。 &lt;code&gt;$opOutBuf&lt;/code&gt; は、 &lt;code&gt;DISK_PERFORMANCE&lt;/code&gt; データ構造を含むように設定されます。</target>
        </trans-unit>
        <trans-unit id="f80b0881311a611ea1af797b6e84f227b8dcd269" translate="yes" xml:space="preserve">
          <source>Request information about the disk layout. &lt;code&gt;$pInBuf&lt;/code&gt; should be &lt;code&gt;[]&lt;/code&gt;. &lt;code&gt;$opOutBuf&lt;/code&gt; will be set to contain &lt;code&gt;DRIVE_LAYOUT_INFORMATION&lt;/code&gt; structure including several &lt;code&gt;PARTITION_INFORMATION&lt;/code&gt; structures:</source>
          <target state="translated">ディスクレイアウトに関する情報を要求します。 &lt;code&gt;$pInBuf&lt;/code&gt; は &lt;code&gt;[]&lt;/code&gt; である必要があります。 &lt;code&gt;$opOutBuf&lt;/code&gt; は、いくつかの &lt;code&gt;PARTITION_INFORMATION&lt;/code&gt; 構造を含む &lt;code&gt;DRIVE_LAYOUT_INFORMATION&lt;/code&gt; 構造を含むように設定されます。</target>
        </trans-unit>
        <trans-unit id="54d0845e23b18fb99e717554d1184088701b388f" translate="yes" xml:space="preserve">
          <source>Request information about the size and geometry of the disk. &lt;code&gt;$pInBuf&lt;/code&gt; should be &lt;code&gt;[]&lt;/code&gt;. &lt;code&gt;$opOutBuf&lt;/code&gt; will be set to a &lt;code&gt;DISK_GEOMETRY&lt;/code&gt; data structure which can be decode via:</source>
          <target state="translated">ディスクのサイズと形状に関する情報を要求します。 &lt;code&gt;$pInBuf&lt;/code&gt; は &lt;code&gt;[]&lt;/code&gt; である必要があります。 &lt;code&gt;$opOutBuf&lt;/code&gt; は、 &lt;code&gt;DISK_GEOMETRY&lt;/code&gt; を介してデコードできるDISK_GEOMETRYデータ構造に設定されます。</target>
        </trans-unit>
        <trans-unit id="3ad433c01870fd7f09ed98951f702ac06b39c5e8" translate="yes" xml:space="preserve">
          <source>Request information about the size and geometry of the partition. &lt;code&gt;$pInBuf&lt;/code&gt; should be &lt;code&gt;[]&lt;/code&gt;. &lt;code&gt;$opOutBuf&lt;/code&gt; will be set to a &lt;code&gt;PARTITION_INFORMATION&lt;/code&gt; data structure which can be decode via:</source>
          <target state="translated">パーティションのサイズと形状に関する情報を要求します。 &lt;code&gt;$pInBuf&lt;/code&gt; は &lt;code&gt;[]&lt;/code&gt; である必要があります。 &lt;code&gt;$opOutBuf&lt;/code&gt; は、以下を介してデコードできる &lt;code&gt;PARTITION_INFORMATION&lt;/code&gt; データ構造に設定されます。</target>
        </trans-unit>
        <trans-unit id="f4100a502a9c8519f4e6dbb571077788846b32bb" translate="yes" xml:space="preserve">
          <source>Request less of something</source>
          <target state="translated">少ないものを要求する</target>
        </trans-unit>
        <trans-unit id="ddcdf3ecd72e075dd35b1b9f6a5a6a70bbfea05a" translate="yes" xml:space="preserve">
          <source>Request remote server status.</source>
          <target state="translated">リモートサーバーの状態を要求します。</target>
        </trans-unit>
        <trans-unit id="06d352bc8e04baba583b9f5e42d86f03d7102ebd" translate="yes" xml:space="preserve">
          <source>Request remote server system identification.</source>
          <target state="translated">リモートサーバーのシステム識別を要求します。</target>
        </trans-unit>
        <trans-unit id="b5945a68b281549f7a7e833e39905826baf9a2a3" translate="yes" xml:space="preserve">
          <source>Request the server to expand the given address Returns an array which contains the text read from the server.</source>
          <target state="translated">指定したアドレスを展開するようにサーバーに要求します サーバーから読み込んだテキストを含む配列を返します。</target>
        </trans-unit>
        <trans-unit id="2c10131bb29894d768d5b1a8f80ebec41f9e1827" translate="yes" xml:space="preserve">
          <source>Requesting a particular byte ordering may be necessary when you work with binary data coming from some specific architecture whereas your program could run on a totally different system. As an example, assume you have 24 bytes containing a stack frame as it happens on an Intel 8086:</source>
          <target state="translated">特定のアーキテクチャからのバイナリデータを扱う場合、プログラムが全く異なるシステム上で実行される可能性がある場合に、特定のバイト順序を要求することが必要になる場合があります。例として、Intel 8086 で発生するスタックフレームを含む 24 バイトがあるとします。</target>
        </trans-unit>
        <trans-unit id="cae9a1066366d922cf90824c30342dd984d71dc4" translate="yes" xml:space="preserve">
          <source>Requesting an unknown identifier is a fatal error.</source>
          <target state="translated">未知の識別子を要求すると致命的なエラーになります。</target>
        </trans-unit>
        <trans-unit id="d52cb52ccfe934101adae384fa985d0c14f60135" translate="yes" xml:space="preserve">
          <source>Requests a special operation on an I/O [input/output] device, such as ejecting a tape or formatting a disk. Like most routines, returns a true value if successful and a false value [and sets &lt;code&gt;$^E&lt;/code&gt; and &lt;code&gt;regLastError()&lt;/code&gt;] on failure.</source>
          <target state="translated">テープの取り出しやディスクのフォーマットなど、I / O [入出力]デバイスでの特別な操作を要求します。ほとんどのルーチンと同様に、成功した場合はtrue値を返し、失敗した場合はfalse値を返します[そして &lt;code&gt;$^E&lt;/code&gt; と &lt;code&gt;regLastError()&lt;/code&gt; を設定します]。</target>
        </trans-unit>
        <trans-unit id="8d6f9f2703c9e8e1d97922d4e66763c115ed3a7f" translate="yes" xml:space="preserve">
          <source>Requests information about the type of media supported by the device. &lt;code&gt;$pInBuf&lt;/code&gt; should be &lt;code&gt;[]&lt;/code&gt;. &lt;code&gt;$opOutBuf&lt;/code&gt; will be set to contain a vector of &lt;code&gt;DISK_GEOMETRY&lt;/code&gt; data structures, which can be decoded via:</source>
          <target state="translated">デバイスでサポートされているメディアの種類に関する情報を要求します。 &lt;code&gt;$pInBuf&lt;/code&gt; は &lt;code&gt;[]&lt;/code&gt; である必要があります。 &lt;code&gt;$opOutBuf&lt;/code&gt; は、 &lt;code&gt;DISK_GEOMETRY&lt;/code&gt; データ構造のベクトルを含むように設定されます。これは次の方法でデコードできます。</target>
        </trans-unit>
        <trans-unit id="c41d48009beae4be2ae89ee98a0188705d8d3358" translate="yes" xml:space="preserve">
          <source>Requests that a definition be deleted. If &lt;code&gt;$sTargetPath&lt;/code&gt; is &lt;code&gt;[]&lt;/code&gt; [for &lt;code&gt;NULL&lt;/code&gt;], then the most recently added definition for &lt;code&gt;$sDosDeviceName&lt;/code&gt; is removed. Otherwise the most recently added definition matching &lt;code&gt;$sTargetPath&lt;/code&gt; is removed.</source>
          <target state="translated">定義の削除を要求します。場合は &lt;code&gt;$sTargetPath&lt;/code&gt; ある &lt;code&gt;[]&lt;/code&gt; [用 &lt;code&gt;NULL&lt;/code&gt; ]、その後のための最も最近追加された定義 &lt;code&gt;$sDosDeviceName&lt;/code&gt; 削除されます。それ以外の場合は、 &lt;code&gt;$sTargetPath&lt;/code&gt; 一致する最後に追加された定義が削除されます。</target>
        </trans-unit>
        <trans-unit id="3bdde830ee962731505722af98db043d4e2b3e60" translate="yes" xml:space="preserve">
          <source>Requests that a human-readable string representation of the numeric address be returned directly, rather than performing a name resolve operation that may convert it into a hostname. This will also avoid potentially-blocking network IO.</source>
          <target state="translated">ホスト名に変換する可能性のある名前解決操作を実行するのではなく、数値アドレスの人間が読める文字列表現を直接返すように要求します。これにより、ネットワークIOがブロックされる可能性を回避することもできます。</target>
        </trans-unit>
        <trans-unit id="c01c16e89cf540fee7a8d610f5ee506844edb5c3" translate="yes" xml:space="preserve">
          <source>Requests that the device be reserved. &lt;code&gt;$pInBuf&lt;/code&gt; and &lt;code&gt;$opOutBuf&lt;/code&gt; should both be &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">デバイスの予約を要求します。 &lt;code&gt;$pInBuf&lt;/code&gt; と &lt;code&gt;$opOutBuf&lt;/code&gt; は両方とも &lt;code&gt;[]&lt;/code&gt; である必要があります。</target>
        </trans-unit>
        <trans-unit id="ce6228e7d5c476b0fc2645d7380e348b4647cdf8" translate="yes" xml:space="preserve">
          <source>Requests that the device eject the media. &lt;code&gt;$pInBuf&lt;/code&gt; and &lt;code&gt;$opOutBuf&lt;/code&gt; should both be &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">デバイスがメディアを排出するように要求します。 &lt;code&gt;$pInBuf&lt;/code&gt; と &lt;code&gt;$opOutBuf&lt;/code&gt; は両方とも &lt;code&gt;[]&lt;/code&gt; である必要があります。</target>
        </trans-unit>
        <trans-unit id="ea9f1e4078953886c0e39039cd350ff169c34987" translate="yes" xml:space="preserve">
          <source>Requests that the device load the media. &lt;code&gt;$pInBuf&lt;/code&gt; and &lt;code&gt;$opOutBuf&lt;/code&gt; should both be &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">デバイスがメディアをロードするように要求します。 &lt;code&gt;$pInBuf&lt;/code&gt; と &lt;code&gt;$opOutBuf&lt;/code&gt; は両方とも &lt;code&gt;[]&lt;/code&gt; である必要があります。</target>
        </trans-unit>
        <trans-unit id="34dc163da627f35458c83c8246ac1cb61e2f2f2b" translate="yes" xml:space="preserve">
          <source>Requests that the port number be returned directly as a number representation rather than performing a name resolve operation that may convert it into a service name.</source>
          <target state="translated">ポート番号をサービス名に変換する可能性のある名前解決操作を実行するのではなく、ポート番号を数値表現として直接返すよう要求します。</target>
        </trans-unit>
        <trans-unit id="bfa99d77de6103db99e699a2ff8298f2936928b5" translate="yes" xml:space="preserve">
          <source>Require that at least version</source>
          <target state="translated">少なくともバージョンが必要</target>
        </trans-unit>
        <trans-unit id="22fcedf182377afe7d9937912389585bf898ccac" translate="yes" xml:space="preserve">
          <source>Required Software for Compiling Perl on QNX4</source>
          <target state="translated">QNX4 で Perl をコンパイルするために必要なソフトウェア</target>
        </trans-unit>
        <trans-unit id="37b0c41751e7849dd79be6c01c066137fb2f5f19" translate="yes" xml:space="preserve">
          <source>Required named argument: &lt;code&gt;ctype&lt;/code&gt; to specify the entry to remove from the typemap.</source>
          <target state="translated">必須の名前付き引数：タイプマップから削除するエントリを指定する &lt;code&gt;ctype&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f70f6db3c0dfe5a546fc0170fc3a81003357748d" translate="yes" xml:space="preserve">
          <source>Required named argument: &lt;code&gt;string&lt;/code&gt; to specify the string to parse.</source>
          <target state="translated">必須の名前付き引数：解析する &lt;code&gt;string&lt;/code&gt; を指定する文字列。</target>
        </trans-unit>
        <trans-unit id="7f823b1bc6f01bd92e5a552f8eb9d497667d3fa4" translate="yes" xml:space="preserve">
          <source>Required named argument: &lt;code&gt;xstype&lt;/code&gt; to specify the entry to remove from the typemap.</source>
          <target state="translated">必須の名前付き引数： &lt;code&gt;xstype&lt;/code&gt; は、タイプマップから削除するエントリを指定します。</target>
        </trans-unit>
        <trans-unit id="36573974909f5467ecfa5e62711b127ca4db7e75" translate="yes" xml:space="preserve">
          <source>Required named arguments: The &lt;code&gt;ctype&lt;/code&gt; (e.g. &lt;code&gt;ctype =&amp;gt; 'double'&lt;/code&gt;) and the &lt;code&gt;xstype&lt;/code&gt; (e.g. &lt;code&gt;xstype =&amp;gt; 'T_NV'&lt;/code&gt;).</source>
          <target state="translated">必須の名前付き引数： &lt;code&gt;ctype&lt;/code&gt; （例： &lt;code&gt;ctype =&amp;gt; 'double'&lt;/code&gt; ）および &lt;code&gt;xstype&lt;/code&gt; （例： &lt;code&gt;xstype =&amp;gt; 'T_NV'&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="15eb37c3b4185b5530645af15d0e56c76ff77742" translate="yes" xml:space="preserve">
          <source>Required named arguments: The &lt;code&gt;xstype&lt;/code&gt; (e.g. &lt;code&gt;xstype =&amp;gt; 'T_NV'&lt;/code&gt;) and the &lt;code&gt;code&lt;/code&gt; to associate with it for input.</source>
          <target state="translated">必須の名前付き引数： &lt;code&gt;xstype&lt;/code&gt; （例： &lt;code&gt;xstype =&amp;gt; 'T_NV'&lt;/code&gt; ）および入力用にそれに関連付ける &lt;code&gt;code&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a06779f6d3d83b49a6d3ad4923852855b6333f51" translate="yes" xml:space="preserve">
          <source>Requirements for regular use must be listed in the &lt;code&gt;runtime&lt;/code&gt; phase. Other requirements should be listed in the earliest stage in which they are required and consumers must accumulate and satisfy requirements across phases before executing the activity. For example, &lt;code&gt;build&lt;/code&gt; requirements must also be available during the &lt;code&gt;test&lt;/code&gt; phase.</source>
          <target state="translated">定期的に使用するための要件は、 &lt;code&gt;runtime&lt;/code&gt; フェーズにリストする必要があります。その他の要件は、それらが必要とされる最も早い段階でリストされるべきであり、消費者は、アクティビティを実行する前に、フェーズ全体で要件を蓄積して満たす必要があります。たとえば、 &lt;code&gt;build&lt;/code&gt; 要件は &lt;code&gt;test&lt;/code&gt; フェーズでも利用可能である必要があります。</target>
        </trans-unit>
        <trans-unit id="eb887cf384541e2b0ccb34a43dd92abcc11b1f21" translate="yes" xml:space="preserve">
          <source>Requires &lt;code&gt;xstype&lt;/code&gt; and &lt;code&gt;code&lt;/code&gt; parameters.</source>
          <target state="translated">&lt;code&gt;xstype&lt;/code&gt; と &lt;code&gt;code&lt;/code&gt; パラメータが必要です。</target>
        </trans-unit>
        <trans-unit id="2d5d1c1676c0fd9a77cd7082dcfe1643557f4892" translate="yes" xml:space="preserve">
          <source>Requires &lt;code&gt;xstype&lt;/code&gt; and &lt;code&gt;ctype&lt;/code&gt; parameters.</source>
          <target state="translated">&lt;code&gt;xstype&lt;/code&gt; および &lt;code&gt;ctype&lt;/code&gt; パラメーターが必要です。</target>
        </trans-unit>
        <trans-unit id="b070a841a6544f8652efff9a9903ca945164a11a" translate="yes" xml:space="preserve">
          <source>Requires a MODULE name as an argument, returns the perl version when that module first appeared in core as ordered by perl version number or undef ( in scalar context ) or an empty list ( in list context ) if that module is not in core.</source>
          <target state="translated">引数に MODULE 名を必要とし、そのモジュールが最初に core に登場したときの perl のバージョンを perl のバージョン番号順に返します。</target>
        </trans-unit>
        <trans-unit id="8cebc1b242bdc66e2f3ffebb8b55b2acf5d50d89" translate="yes" xml:space="preserve">
          <source>Requires a MODULE name as an argument, returns the perl version when that module first appeared in core as ordered by release date or undef ( in scalar context ) or an empty list ( in list context ) if that module is not in core.</source>
          <target state="translated">引数に MODULE 名を必要とし、そのモジュールが最初に core に登場したときの perl のバージョンをリリース日順に返します。</target>
        </trans-unit>
        <trans-unit id="e3a13aaececc61b21709906ea7ed2c5f969fbd25" translate="yes" xml:space="preserve">
          <source>Requires a UTILITY name as an argument, returns the perl version when that utility first appeared in core as ordered by perl version number or undef ( in scalar context ) or an empty list ( in list context ) if that utility is not in core.</source>
          <target state="translated">引数にUTILITY名を必要とし、そのユーティリティが最初にコアに登場したときのPerlのバージョンをPerlのバージョン番号順に、またはそのユーティリティがコアにない場合はundef (スカラコンテキストでは)で返します。</target>
        </trans-unit>
        <trans-unit id="1aefdd79ee42af104857cd7c79e88262bc7ac23c" translate="yes" xml:space="preserve">
          <source>Requires a UTILITY name as an argument, returns the perl version when that utility first appeared in core as ordered by release date or undef ( in scalar context ) or an empty list ( in list context ) if that utility is not in core.</source>
          <target state="translated">引数にUTILITY名を必要とし、そのユーティリティが最初にコアに登場したときのPerlのバージョンをリリース日順に、またはundef (スカラーコンテキストでは)、またはそのユーティリティがコアにない場合は空のリスト (リストコンテキストでは)を返します。</target>
        </trans-unit>
        <trans-unit id="ed377c19feeec08e26544095ca753dc0820fb7e6" translate="yes" xml:space="preserve">
          <source>Requires a perl version as an argument, returns a list of utilities that shipped with that version of perl, or undef/empty list if that perl doesn't exist.</source>
          <target state="translated">引数に perl のバージョンが必要で、そのバージョンの perl に同梱されているユーティリティのリストを返します。</target>
        </trans-unit>
        <trans-unit id="728771158c1bbd5031639e2b1c1d32b18089fed7" translate="yes" xml:space="preserve">
          <source>Requiring end-user programmers to change just a few language constructs, even language constructs which no well-educated developer would ever intentionally use is tantamount to saying &quot;you should not upgrade to a new release of Perl unless you have 100% test coverage and can do a full manual audit of your codebase.&quot; If we were to have tools capable of reliably upgrading Perl source code from one version of Perl to another, this concern could be significantly mitigated.</source>
          <target state="translated">エンドユーザ・プログラマに、わずか数個の言語構造を変更することを要求することは、十分な教育を受けた開発者が意図的に使用することのない言語構造であっても、「100%のテストカバレッジを持ち、コードベースの完全な手動監査を行うことができない限り、Perl の新しいリリースにアップグレードすべきではない」と言っているのと同じことです。もし、あるバージョンの Perl から別のバージョンの Perl のソースコードを確実にアップグレードできるツールがあれば、この懸念は大幅に緩和されるでしょう。</target>
        </trans-unit>
        <trans-unit id="00a9cad2d4b28b35c347301315fac8cb2ab7f4ff" translate="yes" xml:space="preserve">
          <source>Requiring this simple adjustment allows the returned arrays to be significantly smaller than otherwise, up to a factor of 10, speeding up searching through them.</source>
          <target state="translated">この単純な調整を行うことで,返される配列を他の配列よりも大幅に小さくすることができ,最大で10倍の速度で検索することができます.</target>
        </trans-unit>
        <trans-unit id="6d159c7eddb97e9c21d2846efbaae518a7295999" translate="yes" xml:space="preserve">
          <source>Reserved special namespace for internals related functions</source>
          <target state="translated">内部関連関数のための特別な名前空間を予約</target>
        </trans-unit>
        <trans-unit id="4e74d4d9827f76033552c4bce7548c92601dd5bc" translate="yes" xml:space="preserve">
          <source>Reserved; do not use.</source>
          <target state="translated">予約済み、使用しないでください。</target>
        </trans-unit>
        <trans-unit id="7ffbc8e70b6f684c19a724606837459e90fa36f2" translate="yes" xml:space="preserve">
          <source>Reset all state to the start. This sets the test count to 0, clears the plan, removes the failures, etc.</source>
          <target state="translated">すべての状態をスタート時にリセットします。これにより、テストカウントを0にしたり、計画をクリアしたり、失敗を削除したりします。</target>
        </trans-unit>
        <trans-unit id="f7aaacc976d0136a0413180e35231597c9fc38df" translate="yes" xml:space="preserve">
          <source>Reset back to the default value &lt;code&gt;1&lt;/code&gt; when you are finished.</source>
          <target state="translated">終了したら、デフォルト値 &lt;code&gt;1&lt;/code&gt; にリセットします。</target>
        </trans-unit>
        <trans-unit id="3734f4e5e4f9df543c5cf85be0da2c9f23c0797a" translate="yes" xml:space="preserve">
          <source>Reset the object to defaults.</source>
          <target state="translated">オブジェクトをデフォルトにリセットします。</target>
        </trans-unit>
        <trans-unit id="36172a6b379cf46ef3ee9780179fcadb80e672d8" translate="yes" xml:space="preserve">
          <source>Reset the status of the remote POP3 server. This includes resetting the status of all messages to not be deleted.</source>
          <target state="translated">リモート POP3 サーバーのステータスをリセットします。これには、削除されないようにすべてのメッセージのステータスをリセットすることが含まれます。</target>
        </trans-unit>
        <trans-unit id="4151da3198bcfc1a5da89032ab14cc889a12317e" translate="yes" xml:space="preserve">
          <source>Reset the status of the server. This may be called after a message has been initiated, but before any data has been sent, to cancel the sending of the message.</source>
          <target state="translated">サーバのステータスをリセットします。これは、メッセージが開始された後、データが送信される前に呼び出され、メッセージの送信をキャンセルすることができます。</target>
        </trans-unit>
        <trans-unit id="02dc3ed31f4b7eb772495a9ee888a245d069745b" translate="yes" xml:space="preserve">
          <source>Resets all the output filehandles back to their defaults.</source>
          <target state="translated">すべての出力ファイルハンドルをデフォルトに戻します。</target>
        </trans-unit>
        <trans-unit id="aa9cf9bd78e206bc610d834c679e0b74b254dd53" translate="yes" xml:space="preserve">
          <source>Resets only package variables; lexical variables are unaffected, but they clean themselves up on scope exit anyway, so you'll probably want to use them instead. See &lt;a href=&quot;#my-VARLIST&quot;&gt;&lt;code&gt;my&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">パッケージ変数のみをリセットします。字句変数は影響を受けませんが、とにかくスコープ出口でクリーンアップされるため、代わりにそれらを使用することをお勧めします。&lt;a href=&quot;#my-VARLIST&quot;&gt; &lt;code&gt;my&lt;/code&gt; &lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="3445a8609a312ce76f3492ff2465c3caf78a329f" translate="yes" xml:space="preserve">
          <source>Resetting &lt;code&gt;&quot;A-Z&quot;&lt;/code&gt; is not recommended because you'll wipe out your &lt;a href=&quot;perlvar#%40ARGV&quot;&gt;&lt;code&gt;@ARGV&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;perlvar#%40INC&quot;&gt;&lt;code&gt;@INC&lt;/code&gt;&lt;/a&gt; arrays and your &lt;a href=&quot;perlvar#%25ENV&quot;&gt;&lt;code&gt;%ENV&lt;/code&gt;&lt;/a&gt; hash.</source>
          <target state="translated">&lt;a href=&quot;perlvar#%40ARGV&quot;&gt; &lt;code&gt;@ARGV&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;perlvar#%40INC&quot;&gt; &lt;code&gt;@INC&lt;/code&gt; &lt;/a&gt;配列と&lt;a href=&quot;perlvar#%25ENV&quot;&gt; &lt;code&gt;%ENV&lt;/code&gt; &lt;/a&gt;ハッシュを消去するため、 &lt;code&gt;&quot;A-Z&quot;&lt;/code&gt; リセットすることはお勧めしません。</target>
        </trans-unit>
        <trans-unit id="df728e7bf105ac7f581a9dd0e636eb42c3068620" translate="yes" xml:space="preserve">
          <source>Resetting &lt;code&gt;&quot;A-Z&quot;&lt;/code&gt; is not recommended because you'll wipe out your &lt;code&gt;@ARGV&lt;/code&gt; and &lt;code&gt;@INC&lt;/code&gt; arrays and your &lt;code&gt;%ENV&lt;/code&gt; hash. Resets only package variables; lexical variables are unaffected, but they clean themselves up on scope exit anyway, so you'll probably want to use them instead. See &lt;a href=&quot;#my&quot;&gt;my&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;@ARGV&lt;/code&gt; および &lt;code&gt;@INC&lt;/code&gt; 配列と &lt;code&gt;%ENV&lt;/code&gt; ハッシュを消去するため、 &lt;code&gt;&quot;A-Z&quot;&lt;/code&gt; リセットはお勧めしません。パッケージ変数のみをリセットします。レキシカル変数は影響を受けませんが、とにかくスコープの終了時にクリーンアップされるため、代わりにそれらを使用することをお勧めします。&lt;a href=&quot;#my&quot;&gt;私を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="f8f162e60a9bad148199eb54adf329825dd227d7" translate="yes" xml:space="preserve">
          <source>Resetting &lt;code&gt;&quot;A-Z&quot;&lt;/code&gt; is not recommended because you'll wipe out your &lt;code&gt;@ARGV&lt;/code&gt; and &lt;code&gt;@INC&lt;/code&gt; arrays and your &lt;code&gt;%ENV&lt;/code&gt; hash. Resets only package variables; lexical variables are unaffected, but they clean themselves up on scope exit anyway, so you'll probably want to use them instead. See &lt;a href=&quot;my&quot;&gt;my&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;@ARGV&lt;/code&gt; および &lt;code&gt;@INC&lt;/code&gt; 配列と &lt;code&gt;%ENV&lt;/code&gt; ハッシュを消去するため、 &lt;code&gt;&quot;A-Z&quot;&lt;/code&gt; リセットはお勧めしません。パッケージ変数のみをリセットします。レキシカル変数は影響を受けませんが、とにかくスコープの終了時にクリーンアップされるため、代わりにそれらを使用することをお勧めします。&lt;a href=&quot;my&quot;&gt;私を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="ac7f958cc028becfb4b2bec9c474bd2d5e8b6095" translate="yes" xml:space="preserve">
          <source>Resolve</source>
          <target state="translated">Resolve</target>
        </trans-unit>
        <trans-unit id="76f899686a2e586116d54bb4545f857f59fe7fe9" translate="yes" xml:space="preserve">
          <source>Resolves a POD link target (typically a module or POD file name) and section name to a URL. The resulting link will be returned for the above examples as:</source>
          <target state="translated">POD リンクターゲット (通常はモジュールまたは POD ファイル名)とセクション名を URL に解決します。結果のリンクは、上記の例では以下のように返されます。</target>
        </trans-unit>
        <trans-unit id="4fe8cda39bfcaf85efe77cca4bd558244a35eb77" translate="yes" xml:space="preserve">
          <source>Resolves a man page link target and numeric section to a URL. The resulting link will be returned for the above examples as:</source>
          <target state="translated">マンページのリンク対象と数値部分をURLに解決します。結果のリンクは、上記の例では以下のように返されます。</target>
        </trans-unit>
        <trans-unit id="1f335f62fb1319094ed8c85a104148776a182ed6" translate="yes" xml:space="preserve">
          <source>Resolving hostnames into IP addresses</source>
          <target state="translated">ホスト名をIPアドレスに解決する</target>
        </trans-unit>
        <trans-unit id="817f6d32d45791e684f36eedfcfbf9aabc013c92" translate="yes" xml:space="preserve">
          <source>Resource limits</source>
          <target state="translated">リソースの制限</target>
        </trans-unit>
        <trans-unit id="35aa9ad49c5f86755dbf02133b7dfb7ed2b55215" translate="yes" xml:space="preserve">
          <source>Respects current &lt;code&gt;LC_CTYPE&lt;/code&gt; locale for code points &amp;lt; 256; and uses Unicode rules for the remaining code points (this last can only happen if the UTF8 flag is also set). See &lt;a href=&quot;../perllocale&quot;&gt;perllocale&lt;/a&gt;.</source>
          <target state="translated">256未満のコードポイントについては、現在の &lt;code&gt;LC_CTYPE&lt;/code&gt; ロケールを尊重します。残りのコードポイントにはUnicodeルールを使用します（これは、UTF8フラグも設定されている場合にのみ発生します）。&lt;a href=&quot;../perllocale&quot;&gt;perllocaleを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="b9857e06bf03652fa8f40c743891977f44df6226" translate="yes" xml:space="preserve">
          <source>Respects current &lt;code&gt;LC_CTYPE&lt;/code&gt; locale for code points &amp;lt; 256; and uses Unicode rules for the remaining code points (this last can only happen if the UTF8 flag is also set). See &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt;.</source>
          <target state="translated">256未満のコードポイントについては、現在の &lt;code&gt;LC_CTYPE&lt;/code&gt; ロケールを尊重します。残りのコードポイントにはUnicodeルールを使用します（これは、UTF8フラグも設定されている場合にのみ発生します）。&lt;a href=&quot;perllocale&quot;&gt;perllocaleを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="4bb5035288ee0c0593db52c81b02f88d18586fd6" translate="yes" xml:space="preserve">
          <source>Restart the debugger by &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec()&lt;/a&gt;&lt;/code&gt;ing a new session. We try to maintain your history across this, but internal settings and command-line options may be lost.</source>
          <target state="translated">新しいセッションで &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec()&lt;/a&gt;&lt;/code&gt; を実行して、デバッガを再起動します。これまでの履歴を維持するように努めていますが、内部設定とコマンドラインオプションが失われる可能性があります。</target>
        </trans-unit>
        <trans-unit id="027e8fcefdab1f31615a4163307c17117de6c12b" translate="yes" xml:space="preserve">
          <source>Restart the debugger by &lt;code&gt;exec()&lt;/code&gt;ing a new session. We try to maintain your history across this, but internal settings and command-line options may be lost.</source>
          <target state="translated">新しいセッションを &lt;code&gt;exec()&lt;/code&gt; して、デバッガーを再始動します。この間、履歴を維持しようとしますが、内部設定とコマンドラインオプションが失われる可能性があります。</target>
        </trans-unit>
        <trans-unit id="0e302e4245c87b729532b5c42f98d00569ce709e" translate="yes" xml:space="preserve">
          <source>Restartable system calls</source>
          <target state="translated">再起動可能なシステムコール</target>
        </trans-unit>
        <trans-unit id="597b72184e30367d0a4e7f1342f611c72bdc88c0" translate="yes" xml:space="preserve">
          <source>Restore &lt;code&gt;errno&lt;/code&gt; and any operating system specific error number that was saved by &lt;code&gt;dSAVE_ERRNO&lt;/code&gt; or &lt;code&gt;RESTORE_ERRNO&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;errno&lt;/code&gt; と、 &lt;code&gt;dSAVE_ERRNO&lt;/code&gt; または &lt;code&gt;RESTORE_ERRNO&lt;/code&gt; によって保存されたオペレーティングシステム固有のエラー番号を復元します。</target>
        </trans-unit>
        <trans-unit id="22e3b7ca390a6c1b757fcac8c3e1a1a537bfb39b" translate="yes" xml:space="preserve">
          <source>Restore the old pad saved into the local variable &lt;code&gt;opad&lt;/code&gt; by &lt;code&gt;PAD_SAVE_LOCAL()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;PAD_SAVE_LOCAL()&lt;/code&gt; によってローカル変数 &lt;code&gt;opad&lt;/code&gt; に保存された古いパッドを復元します</target>
        </trans-unit>
        <trans-unit id="63a793362ef3ca43722345085de3438d880f6a16" translate="yes" xml:space="preserve">
          <source>Restore the old pad saved into the local variable opad by PAD_SAVE_LOCAL()</source>
          <target state="translated">ローカル変数 opad に保存された古いパッドを PAD_SAVE_LOCAL()で復元します。</target>
        </trans-unit>
        <trans-unit id="4f1729fcc9821f2a0d1acba3f1a183f1116342c4" translate="yes" xml:space="preserve">
          <source>Restoring original @INC</source>
          <target state="translated">オリジナルの@INCの復元</target>
        </trans-unit>
        <trans-unit id="5d11c1b413768fba80561ed7ba82544986011373" translate="yes" xml:space="preserve">
          <source>Restrict to only generating addresses for this protocol</source>
          <target state="translated">このプロトコル用のアドレスのみを生成するように制限</target>
        </trans-unit>
        <trans-unit id="ad27d2b05e664f67f8116bdd57edeef1987e5429" translate="yes" xml:space="preserve">
          <source>Restrict to only generating addresses in this address family</source>
          <target state="translated">このアドレスファミリのアドレスのみを生成するように制限する</target>
        </trans-unit>
        <trans-unit id="23b0370fc27402e85db8bdba7a00eab25a9ff0bd" translate="yes" xml:space="preserve">
          <source>Restrict to only generating addresses of this socket type</source>
          <target state="translated">このソケットタイプのアドレスのみを生成するように制限する</target>
        </trans-unit>
        <trans-unit id="c16e1f0c25289d1e2f2b5219ef38e386a9adf34e" translate="yes" xml:space="preserve">
          <source>Restrict unsafe constructs</source>
          <target state="translated">安全でない構成要素を制限する</target>
        </trans-unit>
        <trans-unit id="091038df15e856c37352b0be1f97c0135c975070" translate="yes" xml:space="preserve">
          <source>Restrict unsafe operations when compiling</source>
          <target state="translated">コンパイル時の安全でない操作を制限する</target>
        </trans-unit>
        <trans-unit id="6dc4fcb6b9bae373de137f9cf069e3fd7447d402" translate="yes" xml:space="preserve">
          <source>Restricted hashes</source>
          <target state="translated">制限付きハッシュ</target>
        </trans-unit>
        <trans-unit id="8617d55e624bcba9c7b74950b1041e1199647dc0" translate="yes" xml:space="preserve">
          <source>Restrictions of Perl on OpenVOS</source>
          <target state="translated">OpenVOS上でのPerlの制限</target>
        </trans-unit>
        <trans-unit id="9a968126c8536966642d8125340baafc91d326de" translate="yes" xml:space="preserve">
          <source>Restricts the given %hash's set of keys to @keys. If @keys is not given it restricts it to its current keyset. No more keys can be added. delete() and exists() will still work, but will not alter the set of allowed keys. &lt;b&gt;Note&lt;/b&gt;: the current implementation prevents the hash from being bless()ed while it is in a locked state. Any attempt to do so will raise an exception. Of course you can still bless() the hash before you call lock_keys() so this shouldn't be a problem.</source>
          <target state="translated">指定された％hashのキーセットを@keysに制限します。@keysが指定されていない場合、現在のキーセットに制限されます。これ以上キーを追加することはできません。delete（）およびexists（）は引き続き機能しますが、許可されたキーのセットは変更されません。&lt;b&gt;注&lt;/b&gt;：現在の実装では、ロックされた状態にある間、ハッシュがbless（）されるのを防ぎます。そうしようとすると、例外が発生します。もちろん、lock_keys（）を呼び出す前にハッシュをbless（）できるので、これは問題になりません。</target>
        </trans-unit>
        <trans-unit id="d20e8533733a9999fd6c28dce159eeeba0391f34" translate="yes" xml:space="preserve">
          <source>Result looks like this:</source>
          <target state="translated">結果はこんな感じです。</target>
        </trans-unit>
        <trans-unit id="a0ee06cbf0d3a077c8ec64125db655ac2b8a4f75" translate="yes" xml:space="preserve">
          <source>Result types</source>
          <target state="translated">結果の種類</target>
        </trans-unit>
        <trans-unit id="bd4afc0073cac79bf136f8e1d922b83f76e969ad" translate="yes" xml:space="preserve">
          <source>Result:</source>
          <target state="translated">Result:</target>
        </trans-unit>
        <trans-unit id="396addc43726f471d8b20eaa47f9efcfd781e187" translate="yes" xml:space="preserve">
          <source>Resulting in the program</source>
          <target state="translated">プログラムの結果</target>
        </trans-unit>
        <trans-unit id="612e12d29278b5519294bc25cdaddffec6d0f1c6" translate="yes" xml:space="preserve">
          <source>Results</source>
          <target state="translated">Results</target>
        </trans-unit>
        <trans-unit id="2efc1923ac09640c75b64277892d583e2361bb83" translate="yes" xml:space="preserve">
          <source>Results are never tainted because otherwise even output from print, for example &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print(1/7)&lt;/a&gt;&lt;/code&gt;, should be tainted if &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; is in effect.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; localが有効になっている場合は、 &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print(1/7)&lt;/a&gt;&lt;/code&gt; などの印刷からの出力でさえ汚染されているため、結果が汚染されることはありません。</target>
        </trans-unit>
        <trans-unit id="9c19e837b4f301baeae62a8871cae6d7985df728" translate="yes" xml:space="preserve">
          <source>Results are never tainted because otherwise even output from print, for example &lt;code&gt;print(1/7)&lt;/code&gt;, should be tainted if &lt;code&gt;use locale&lt;/code&gt; is in effect.</source>
          <target state="translated">&lt;code&gt;use locale&lt;/code&gt; が有効な場合は、 &lt;code&gt;print(1/7)&lt;/code&gt; などのprintからの出力でさえも汚染される必要があるため、結果が汚染されることはありません。</target>
        </trans-unit>
        <trans-unit id="80229b8449770c6d400ff29bbd402430674d8e49" translate="yes" xml:space="preserve">
          <source>Results are never tainted.</source>
          <target state="translated">結果は決して汚されません。</target>
        </trans-unit>
        <trans-unit id="910730d509932b84b34b414ac4c857477d1d0180" translate="yes" xml:space="preserve">
          <source>Results are tainted if a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; form that includes &lt;code&gt;LC_CTYPE&lt;/code&gt; is in effect.</source>
          <target state="translated">&lt;code&gt;LC_CTYPE&lt;/code&gt; を含む &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; フォームが有効な場合、結果は汚染されます。</target>
        </trans-unit>
        <trans-unit id="025994ec6623714b4195ea5a6e004f41b96b4505" translate="yes" xml:space="preserve">
          <source>Results are tainted if a &lt;code&gt;use locale&lt;/code&gt; form that includes &lt;code&gt;LC_CTYPE&lt;/code&gt; is in effect.</source>
          <target state="translated">&lt;code&gt;LC_CTYPE&lt;/code&gt; を含む &lt;code&gt;use locale&lt;/code&gt; フォームが有効な場合、結果は汚染されます。</target>
        </trans-unit>
        <trans-unit id="b6c3a225733e64bea8efa2629e852e0f9eb54d2b" translate="yes" xml:space="preserve">
          <source>Retains '::' in type names so that C++ hierarchical types can be mapped.</source>
          <target state="translated">C++の階層型をマッピングできるように、型名に ':::' を保持します。</target>
        </trans-unit>
        <trans-unit id="66a67d8823304f8234e82df960c20ebaacbf345a" translate="yes" xml:space="preserve">
          <source>Retains &lt;code&gt;::&lt;/code&gt; in type names so that C++ hierarchical types can be mapped. Default is false.</source>
          <target state="translated">C ++の階層型をマップできるように、型名に &lt;code&gt;::&lt;/code&gt; を保持します。デフォルトはfalseです。</target>
        </trans-unit>
        <trans-unit id="d7ae391f88a9b63319b85f5152615ab3754281a5" translate="yes" xml:space="preserve">
          <source>Rethink your design.</source>
          <target state="translated">デザインを再考してみてください。</target>
        </trans-unit>
        <trans-unit id="ca5a868361dd75a05afb31048a73c91a310fb914" translate="yes" xml:space="preserve">
          <source>Rethrows a previously caught exception. See &lt;a href=&quot;perlguts#Exception-Handling&quot;&gt;&quot;Exception Handling&quot; in perlguts&lt;/a&gt;.</source>
          <target state="translated">以前にキャッチされた例外を再スローします。&lt;a href=&quot;perlguts#Exception-Handling&quot;&gt;perlgutsの「例外処理」を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="d864f634d34c4155822d46f8d91b346abeaaef02" translate="yes" xml:space="preserve">
          <source>Rethrows a previously caught exception. See &lt;a href=&quot;perlguts#Exception-Handling&quot;&gt;Exception Handling in perlguts&lt;/a&gt;.</source>
          <target state="translated">以前にキャッチされた例外を再スローします。&lt;a href=&quot;perlguts#Exception-Handling&quot;&gt;perlgutsでの例外処理を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="4f6bd37434498e4371fd88a4bfb1729adc9d5c9a" translate="yes" xml:space="preserve">
          <source>Retired langfam codes for the Locale::Codes::LangFam module</source>
          <target state="translated">Locale::Codes::LangFamモジュールのための引退したlangfamコード</target>
        </trans-unit>
        <trans-unit id="b3e0ea7f2d67a985903f2bdffd76452cdd561a93" translate="yes" xml:space="preserve">
          <source>Retreive the message &quot;command&quot; as a string;</source>
          <target state="translated">メッセージ &quot;command &quot;を文字列として再取得します。</target>
        </trans-unit>
        <trans-unit id="9e8f8f9dc55113068c79456626250be0fa9383d3" translate="yes" xml:space="preserve">
          <source>Retrieval of PM messages until window creation/destruction. If &lt;code&gt;force&lt;/code&gt; is false, will not dispatch messages if a real message loop is known to be present.</source>
          <target state="translated">ウィンドウの作成/破棄までのPMメッセージの取得。場合は &lt;code&gt;force&lt;/code&gt; falseの本当のメッセージループが存在することが知られている場合は、メッセージをディスパッチしません。</target>
        </trans-unit>
        <trans-unit id="9c9059c27f17082052b07415cc0c473e3351c1bf" translate="yes" xml:space="preserve">
          <source>Retrieve a value from the &lt;code&gt;c_cc&lt;/code&gt; field of a &lt;code&gt;termios&lt;/code&gt; object. The &lt;code&gt;c_cc&lt;/code&gt; field is an array so an index must be specified.</source>
          <target state="translated">&lt;code&gt;termios&lt;/code&gt; オブジェクトの &lt;code&gt;c_cc&lt;/code&gt; フィールドから値を取得します。 &lt;code&gt;c_cc&lt;/code&gt; インデックスを指定する必要がありますので、フィールドは配列です。</target>
        </trans-unit>
        <trans-unit id="e04e303f482dcced975e53b0a5073316852bb367" translate="yes" xml:space="preserve">
          <source>Retrieve an array containing the hyperlinks to things outside the current POD (as defined by &lt;code&gt;L&amp;lt;&amp;gt;&lt;/code&gt;).</source>
          <target state="translated">（ &lt;code&gt;L&amp;lt;&amp;gt;&lt;/code&gt; 定義されているように）現在のPOD外のものへのハイパーリンクを含む配列を取得します。</target>
        </trans-unit>
        <trans-unit id="6dd60623ab1f0fead77ed722c84110186b35b3d9" translate="yes" xml:space="preserve">
          <source>Retrieve one line, delimited by CRLF, from the remote server. Returns</source>
          <target state="translated">リモートサーバーから CRLF で区切られた 1 行を取得します。戻り値は以下のようになります。</target>
        </trans-unit>
        <trans-unit id="120622bbd6d958d0f9c367331115c5b3f99cbcf7" translate="yes" xml:space="preserve">
          <source>Retrieve the &lt;code&gt;c_cflag&lt;/code&gt; field of a &lt;code&gt;termios&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;termios&lt;/code&gt; オブジェクトの &lt;code&gt;c_cflag&lt;/code&gt; フィールドを取得します。</target>
        </trans-unit>
        <trans-unit id="9a43df9223bf1d671907cb79ad24e65e7a8da945" translate="yes" xml:space="preserve">
          <source>Retrieve the &lt;code&gt;c_iflag&lt;/code&gt; field of a &lt;code&gt;termios&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;termios&lt;/code&gt; オブジェクトの &lt;code&gt;c_iflag&lt;/code&gt; フィールドを取得します。</target>
        </trans-unit>
        <trans-unit id="5e27d54476a270ba05b730aea326a39f970e8caa" translate="yes" xml:space="preserve">
          <source>Retrieve the &lt;code&gt;c_lflag&lt;/code&gt; field of a &lt;code&gt;termios&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;termios&lt;/code&gt; オブジェクトの &lt;code&gt;c_lflag&lt;/code&gt; フィールドを取得します。</target>
        </trans-unit>
        <trans-unit id="ff4743799470ee7b920cd9fd1a21024d975f2d4a" translate="yes" xml:space="preserve">
          <source>Retrieve the &lt;code&gt;c_oflag&lt;/code&gt; field of a &lt;code&gt;termios&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;termios&lt;/code&gt; オブジェクトの &lt;code&gt;c_oflag&lt;/code&gt; フィールドを取得します。</target>
        </trans-unit>
        <trans-unit id="6dc4792ca5a24eb7ba3c253287755e63991cec8e" translate="yes" xml:space="preserve">
          <source>Retrieve the datum in</source>
          <target state="translated">でデータを取得します。</target>
        </trans-unit>
        <trans-unit id="4511f642a0428b9e7d0d6d89734a7f32ac28109c" translate="yes" xml:space="preserve">
          <source>Retrieve the first name</source>
          <target state="translated">ファーストネームを取得する</target>
        </trans-unit>
        <trans-unit id="df345846bd0c2d69e12b4a91aaf669983d7377b1" translate="yes" xml:space="preserve">
          <source>Retrieve the full name, the first and last name joined by a blank.</source>
          <target state="translated">空白で結合されたフルネーム、姓と名を取得します。</target>
        </trans-unit>
        <trans-unit id="f95d03de659d7e5c70bd3aa6dbca967eb0f4d19b" translate="yes" xml:space="preserve">
          <source>Retrieve the header, a blank line, then the body (text) of the specified article.</source>
          <target state="translated">指定した記事のヘッダー、空白行、本文(テキスト)を取得します。</target>
        </trans-unit>
        <trans-unit id="bc385b4aceaf92215d1828a2e2ea727868f48f2f" translate="yes" xml:space="preserve">
          <source>Retrieve the input baud rate.</source>
          <target state="translated">入力ボーレートを取得します。</target>
        </trans-unit>
        <trans-unit id="601de4f2ebd867a526f1ea2777ad7a4bbeea163a" translate="yes" xml:space="preserve">
          <source>Retrieve the last name</source>
          <target state="translated">名字を取得する</target>
        </trans-unit>
        <trans-unit id="43b2d69c57387d7f84b4fed900b418d5c512cf9b" translate="yes" xml:space="preserve">
          <source>Retrieve the output baud rate.</source>
          <target state="translated">出力ボーレートを取得します。</target>
        </trans-unit>
        <trans-unit id="b3d3d02e049b87699655beb42bb9ab4ea07dbbd0" translate="yes" xml:space="preserve">
          <source>Retrieve the signal mask for the host port for use with Amiga::Exec Wait()</source>
          <target state="translated">Amiga::Exec Wait()で使用するホストポートのシグナルマスクを取得。</target>
        </trans-unit>
        <trans-unit id="153bc75c411348eec881e255f76be1e64881b5cc" translate="yes" xml:space="preserve">
          <source>Retrieve the value of the tied scalar referenced by</source>
          <target state="translated">で参照されるタイドスカラの値を取得します。</target>
        </trans-unit>
        <trans-unit id="c7943c0d0949d2c5b85d164364d628b4d8b2a92d" translate="yes" xml:space="preserve">
          <source>Retrieves the flags associated with a Win32 native file handle or object handle.</source>
          <target state="translated">Win32 ネイティブのファイルハンドルまたはオブジェクトハンドルに関連付けられたフラグを取得します。</target>
        </trans-unit>
        <trans-unit id="03ee038fcaef73a536de77451717f2391e453473" translate="yes" xml:space="preserve">
          <source>Retrieves the function that will be used to fix up a call to</source>
          <target state="translated">への呼び出しを修正するために使用される関数を取得します。</target>
        </trans-unit>
        <trans-unit id="fdb73b4c84229a769fa2e961fd33d28742facadb" translate="yes" xml:space="preserve">
          <source>Retrieves the function that will be used to fix up a call to &lt;code&gt;cv&lt;/code&gt;. Specifically, the function is applied to an &lt;code&gt;entersub&lt;/code&gt; op tree for a subroutine call, not marked with &lt;code&gt;&amp;amp;&lt;/code&gt;, where the callee can be identified at compile time as &lt;code&gt;cv&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cv&lt;/code&gt; への呼び出しを修正するために使用される関数を取得します。具体的には、この関数は、 &lt;code&gt;&amp;amp;&lt;/code&gt; でマークされていないサブルーチン呼び出しの &lt;code&gt;entersub&lt;/code&gt; opツリーに適用されます。ここで、呼び出し先はコンパイル時に &lt;code&gt;cv&lt;/code&gt; として識別できます。</target>
        </trans-unit>
        <trans-unit id="865c55659da47740ab3e48d9d595c810b1ab611d" translate="yes" xml:space="preserve">
          <source>Retrieves the product type for the operating system on the local computer, and maps the type to the product types supported by the specified operating system. Please refer to the Microsoft documentation of the GetProductInfo() function for more information about the parameters and return value. This function requires Windows Vista or later.</source>
          <target state="translated">ローカル コンピュータ上のオペレーティングシステムの製品タイプを取得し、そのタイプを指定したオペレーティングシステムでサポートされている製品タイプにマッピングします。パラメータおよび戻り値の詳細については、GetProductInfo()関数の Microsoft ドキュメントを参照してください。この関数を使用するには、Windows Vista 以降が必要です。</target>
        </trans-unit>
        <trans-unit id="8b7911710a3dab3cc73f8e7019303ffb596f175e" translate="yes" xml:space="preserve">
          <source>Retrieves the reparse point data associated with $hDevice.</source>
          <target state="translated">hDevice に関連付けられた reparse ポイントデータを取得します。</target>
        </trans-unit>
        <trans-unit id="21780e4c57b1384c52e5ab6a031d8d4b467bcb54" translate="yes" xml:space="preserve">
          <source>Retrieves the specified system metric or system configuration setting. Please refer to the Microsoft documentation of the GetSystemMetrics() function for a reference of available INDEX values. All system metrics return integer values.</source>
          <target state="translated">指定されたシステム・メトリックまたはシステム構成設定を取得します。利用可能な INDEX 値の参照については、GetSystemMetrics()関数の Microsoft ドキュメントを参照してください。すべてのシステム・メトリクスは整数値を返します。</target>
        </trans-unit>
        <trans-unit id="9eec387679e71e59c66232709943e141d44d4414" translate="yes" xml:space="preserve">
          <source>Retrieves the time conversion information from the &lt;code&gt;tzname&lt;/code&gt; variable.</source>
          <target state="translated">&lt;code&gt;tzname&lt;/code&gt; 変数から時間変換情報を取得します。</target>
        </trans-unit>
        <trans-unit id="4da4b9355ca37de19201e461cad40244a9893d34" translate="yes" xml:space="preserve">
          <source>Retrieves the value of a configurable limit on a file or directory.</source>
          <target state="translated">ファイルやディレクトリの設定可能な制限値を取得します。</target>
        </trans-unit>
        <trans-unit id="652c07db1d8a422e8f5d2293abd7abb4ee1fd964" translate="yes" xml:space="preserve">
          <source>Retrieves the value of a configurable limit on a file or directory. This uses file descriptors such as those obtained by calling &lt;code&gt;POSIX::open&lt;/code&gt; .</source>
          <target state="translated">ファイルまたはディレクトリの構成可能な制限の値を取得します。これは、 &lt;code&gt;POSIX::open&lt;/code&gt; 呼び出すことによって取得されるようなファイル記述子を使用します。</target>
        </trans-unit>
        <trans-unit id="c3c8e75ebf55e9dd14ea6154954b644bf45304b7" translate="yes" xml:space="preserve">
          <source>Retrieves the value of a configurable limit on a file or directory. This uses file descriptors such as those obtained by calling &lt;code&gt;POSIX::open&lt;/code&gt;.</source>
          <target state="translated">ファイルまたはディレクトリの構成可能な制限の値を取得します。これは、 &lt;code&gt;POSIX::open&lt;/code&gt; 呼び出して取得したようなファイル記述子を使用します。</target>
        </trans-unit>
        <trans-unit id="e02559c3356326a3b1e599326bdaca8e1cd1d0bf" translate="yes" xml:space="preserve">
          <source>Retrieves values of system configurable variables.</source>
          <target state="translated">システム構成可能な変数の値を取得します。</target>
        </trans-unit>
        <trans-unit id="908262fdee5fbef995f0f45380b61275d7e304ec" translate="yes" xml:space="preserve">
          <source>Retrieving the backtrace from Perl level (using for example an XS extension) would be much less exciting than one would hope: normally you would see &lt;code&gt;runops&lt;/code&gt; , &lt;code&gt;entersub&lt;/code&gt; , and not much else. This API is intended to be called &lt;b&gt;from within&lt;/b&gt; the Perl implementation, not from Perl level execution.</source>
          <target state="translated">Perlレベルからバックトレースを取得する（たとえば、XS拡張機能を使用する）ことは、期待するよりもはるかにエキサイティングではありません。通常、 &lt;code&gt;entersub&lt;/code&gt; 、 &lt;code&gt;runops&lt;/code&gt; などが表示されます。このAPIは、Perlレベルの実行からではなく、Perl実装&lt;b&gt;内から&lt;/b&gt;呼び出されることを目的としています。&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="960a80c75df67c4eb399e9ea2d01232059619bba" translate="yes" xml:space="preserve">
          <source>Retrieving the backtrace from Perl level (using for example an XS extension) would be much less exciting than one would hope: normally you would see &lt;code&gt;runops&lt;/code&gt;, &lt;code&gt;entersub&lt;/code&gt;, and not much else. This API is intended to be called &lt;b&gt;from within&lt;/b&gt; the Perl implementation, not from Perl level execution.</source>
          <target state="translated">Perlレベルからバックトレースを取得する（たとえばXS拡張機能を使用する）ことは、期待するよりもはるかにエキサイティングではありません。通常、 &lt;code&gt;entersub&lt;/code&gt; 、 &lt;code&gt;runops&lt;/code&gt; などが表示されます。このAPIは、Perlレベルの実行からではなく、Perl実装&lt;b&gt;内から&lt;/b&gt;呼び出されることを目的としています。&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="24f096b221f9534bcad007f2b5a32b490950b5b5" translate="yes" xml:space="preserve">
          <source>Return</source>
          <target state="translated">Return</target>
        </trans-unit>
        <trans-unit id="147311f53adc905469208b823e582ec70f5da4cf" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;&amp;amp;PL_sv_no&lt;/code&gt; from an XSUB immediately. Uses &lt;code&gt;XST_mNO&lt;/code&gt; .</source>
          <target state="translated">XSUBから &lt;code&gt;&amp;amp;PL_sv_no&lt;/code&gt; をすぐに返します。 &lt;code&gt;XST_mNO&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="f2aa8731181e807473006de3af6e4c644ec56211" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;&amp;amp;PL_sv_no&lt;/code&gt; from an XSUB immediately. Uses &lt;code&gt;XST_mNO&lt;/code&gt;.</source>
          <target state="translated">XSUBから &lt;code&gt;&amp;amp;PL_sv_no&lt;/code&gt; をすぐに返します。 &lt;code&gt;XST_mNO&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="5551daa758eb4f1962ff204e60ac6d510f876260" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt; from an XSUB immediately. Uses &lt;code&gt;XST_mUNDEF&lt;/code&gt; .</source>
          <target state="translated">XSUBから &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt; をすぐに返します。 &lt;code&gt;XST_mUNDEF&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="ec92a7eaa3f0bd31322990cef9a2f9f9d9178daa" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt; from an XSUB immediately. Uses &lt;code&gt;XST_mUNDEF&lt;/code&gt;.</source>
          <target state="translated">XSUBから &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt; をすぐに返します。 &lt;code&gt;XST_mUNDEF&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="465dad58ecf69fa630bc3f710cfd58d97befa558" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;&amp;amp;PL_sv_yes&lt;/code&gt; from an XSUB immediately. Uses &lt;code&gt;XST_mYES&lt;/code&gt; .</source>
          <target state="translated">XSUBから &lt;code&gt;&amp;amp;PL_sv_yes&lt;/code&gt; をすぐに返します。 &lt;code&gt;XST_mYES&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="a3e8f831ab266215ab448f1eb54501bbb7cedd93" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;&amp;amp;PL_sv_yes&lt;/code&gt; from an XSUB immediately. Uses &lt;code&gt;XST_mYES&lt;/code&gt;.</source>
          <target state="translated">XSUBから &lt;code&gt;&amp;amp;PL_sv_yes&lt;/code&gt; をすぐに返します。 &lt;code&gt;XST_mYES&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="d434075170c323a77b75fb6a1dc64742b45bd22e" translate="yes" xml:space="preserve">
          <source>Return API version as a Perl scalar, 1 for Math::BigInt v1.70, 2 for Math::BigInt v1.83.</source>
          <target state="translated">API のバージョンを Perl のスカラとして返します。Math::BigInt v1.70 では 1、Math::BigInt v1.83 では 2。</target>
        </trans-unit>
        <trans-unit id="d3b3f6da169bd793afaccd7c1d1ff1d877478bfb" translate="yes" xml:space="preserve">
          <source>Return Nth root of the object, truncated to int. N is &amp;gt;= 3.</source>
          <target state="translated">オブジェクトのN番目のルートを、intに切り捨てて返します。Nは&amp;gt; = 3です。</target>
        </trans-unit>
        <trans-unit id="ee7ade6a89266f0ce63300ffcdf5e3d44430e5cf" translate="yes" xml:space="preserve">
          <source>Return OBJ1 modulo OBJ2, i.e., the remainder after dividing OBJ1 by OBJ2.</source>
          <target state="translated">OBJ1をOBJ2で割った後の余剰分、すなわちOBJ1をOBJ2で割った後の余剰分を返します。</target>
        </trans-unit>
        <trans-unit id="c2d3149d101eee963ecad6da777888bf7deda306" translate="yes" xml:space="preserve">
          <source>Return OBJ1 to the power of OBJ2. By convention, 0**0 = 1.</source>
          <target state="translated">OBJ1 を OBJ2 の累乗に戻す。慣例では、0**0=1となります。</target>
        </trans-unit>
        <trans-unit id="a7b7728606fe5548394ca030c9925c7c360c2129" translate="yes" xml:space="preserve">
          <source>Return TRUE if that warnings category has been set to FATAL in the first scope where the object is used. Otherwise returns FALSE.</source>
          <target state="translated">オブジェクトを使用する最初のスコープで、その警告カテゴリが FATAL に設定されている場合に TRUE を返します。それ以外の場合は FALSE を返します。</target>
        </trans-unit>
        <trans-unit id="b8471d332e30c305b7ffd23da02013a440c0b038" translate="yes" xml:space="preserve">
          <source>Return TRUE if that warnings category is enabled in the calling module. Otherwise returns FALSE.</source>
          <target state="translated">呼び出し元のモジュールでその警告カテゴリが有効になっている場合に TRUE を返します。それ以外の場合は FALSE を返します。</target>
        </trans-unit>
        <trans-unit id="427a27c6e94dc4cf9cfd1ee6dba724c6e8763ad0" translate="yes" xml:space="preserve">
          <source>Return TRUE if that warnings category is enabled in the first scope where the object is used. Otherwise returns FALSE.</source>
          <target state="translated">オブジェクトを使用する最初のスコープでその警告カテゴリが有効になっている場合に TRUE を返します。それ以外の場合は FALSE を返します。</target>
        </trans-unit>
        <trans-unit id="c94f996bfa47e593985fe4ec41527489b9731a07" translate="yes" xml:space="preserve">
          <source>Return TRUE if the name is safe.</source>
          <target state="translated">名前が安全な場合は TRUE を返します。</target>
        </trans-unit>
        <trans-unit id="96be94a39b4300e1884dd9adc1a2936e7fc2bdc2" translate="yes" xml:space="preserve">
          <source>Return TRUE if the warnings category &lt;code&gt;$category&lt;/code&gt; has been set to FATAL in the calling module. Otherwise returns FALSE.</source>
          <target state="translated">呼び出しモジュールで警告カテゴリ &lt;code&gt;$category&lt;/code&gt; がFATALに設定されている場合はTRUEを返します。それ以外の場合はFALSEを返します。</target>
        </trans-unit>
        <trans-unit id="b108b1cc9affb1337971003aad75911571c79e7b" translate="yes" xml:space="preserve">
          <source>Return TRUE if the warnings category with the same name as the current package has been set to FATAL in the calling module. Otherwise returns FALSE.</source>
          <target state="translated">現在のパッケージと同じ名前の警告カテゴリが、 呼び出し元のモジュールで FATAL に設定されている場合に TRUE を返します。それ以外の場合は FALSE を返します。</target>
        </trans-unit>
        <trans-unit id="2702ef79f51a7a603a764187ab2c97d87823ae2a" translate="yes" xml:space="preserve">
          <source>Return TRUE if the warnings category, &lt;code&gt;$category&lt;/code&gt; , is enabled in the calling module. Otherwise returns FALSE.</source>
          <target state="translated">呼び出しモジュールで警告カテゴリ &lt;code&gt;$category&lt;/code&gt; が有効になっている場合はTRUEを返します。それ以外の場合はFALSEを返します。</target>
        </trans-unit>
        <trans-unit id="95d9da3844579ef5ebf6944dcd53869dac5515aa" translate="yes" xml:space="preserve">
          <source>Return TRUE if the warnings category, &lt;code&gt;$category&lt;/code&gt;, is enabled in the calling module. Otherwise returns FALSE.</source>
          <target state="translated">呼び出し元モジュールで警告カテゴリ &lt;code&gt;$category&lt;/code&gt; が有効になっている場合は、TRUEを返します。それ以外の場合はFALSEを返します。</target>
        </trans-unit>
        <trans-unit id="4ed1a51e3c7c6cf43a3633b3e58f69e74b9dd263" translate="yes" xml:space="preserve">
          <source>Return Value</source>
          <target state="translated">戻り値</target>
        </trans-unit>
        <trans-unit id="dd8731f1ccd97a2ffba2dcddfde967debf1a72e1" translate="yes" xml:space="preserve">
          <source>Return a SV containing a string that must appear in the pattern. Used by &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; for optimising matches.</source>
          <target state="translated">パターンに現れる必要のある文字列を含むSVを返します。一致を最適化するために &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; によって使用されます。</target>
        </trans-unit>
        <trans-unit id="1b2000e8899d573a7e22c51816568c7ed995a486" translate="yes" xml:space="preserve">
          <source>Return a SV containing a string that must appear in the pattern. Used by &lt;code&gt;split&lt;/code&gt; for optimising matches.</source>
          <target state="translated">パターンに表示する必要のある文字列を含むSVを返します。一致を最適化するために &lt;code&gt;split&lt;/code&gt; によって使用されます。</target>
        </trans-unit>
        <trans-unit id="ef680f28e15ead0c97150a82245301402d6d3189" translate="yes" xml:space="preserve">
          <source>Return a copy of a string from an XSUB immediately. Uses &lt;code&gt;XST_mPV&lt;/code&gt; .</source>
          <target state="translated">XSUBから文字列のコピーをすぐに返します。 &lt;code&gt;XST_mPV&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="b8f8366fd236779edf8e36419f9f0cda4a8398ad" translate="yes" xml:space="preserve">
          <source>Return a copy of a string from an XSUB immediately. Uses &lt;code&gt;XST_mPV&lt;/code&gt;.</source>
          <target state="translated">XSUBから文字列のコピーをすぐに返します。 &lt;code&gt;XST_mPV&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="1d8a70dab10ae99b42cd2b1f2b638d4aa167541d" translate="yes" xml:space="preserve">
          <source>Return a double from an XSUB immediately. Uses &lt;code&gt;XST_mNV&lt;/code&gt; .</source>
          <target state="translated">XSUBからdoubleをすぐに返します。 &lt;code&gt;XST_mNV&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="2b10b4a7e72d3b5b362d50c059fd378a0bce9ae9" translate="yes" xml:space="preserve">
          <source>Return a double from an XSUB immediately. Uses &lt;code&gt;XST_mNV&lt;/code&gt;.</source>
          <target state="translated">XSUBからすぐにdoubleを返します。 &lt;code&gt;XST_mNV&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="e233ff228d377735118fccb83e09d6507766800e" translate="yes" xml:space="preserve">
          <source>Return a formatted report of the information returned by bucket_stats(). An example report looks like this:</source>
          <target state="translated">bucket_stats()が返す情報を整形したレポートを返します。レポートの例は以下のようになります。</target>
        </trans-unit>
        <trans-unit id="8b2b0669279235775947aa2a2e43aa996d55f461" translate="yes" xml:space="preserve">
          <source>Return a formatted string about the elapsed (wall-clock) time and about the consumed CPU time.</source>
          <target state="translated">経過時間(壁時計)と消費されたCPU時間に関する整形された文字列を返します。</target>
        </trans-unit>
        <trans-unit id="00a08fc2a49d16208a3da942556b8e6789f09ae3" translate="yes" xml:space="preserve">
          <source>Return a human readable representation of the scheduling tree. For example:</source>
          <target state="translated">スケジューリングツリーの人間が読める表現を返します。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="8d29859d693280c46e84547c235fda5f109149f7" translate="yes" xml:space="preserve">
          <source>Return a key based on PATH and ID, which can be used as a key for &lt;code&gt;&lt;a href=&quot;../functions/msgget&quot;&gt;msgget&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../functions/semget&quot;&gt;semget&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../functions/shmget&quot;&gt;shmget&lt;/a&gt;&lt;/code&gt;. See &lt;a href=&quot;http://search.cpan.org/perldoc/ftok&quot;&gt;ftok&lt;/a&gt;.</source>
          <target state="translated">PATHおよびIDに基づいてキーを返します。これは、 &lt;code&gt;&lt;a href=&quot;../functions/msgget&quot;&gt;msgget&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;../functions/semget&quot;&gt;semget&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;../functions/shmget&quot;&gt;shmget&lt;/a&gt;&lt;/code&gt; のキーとして使用できます。&lt;a href=&quot;http://search.cpan.org/perldoc/ftok&quot;&gt;ftokを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="769d5d9d53f1df5b085177af6c83e282e5460352" translate="yes" xml:space="preserve">
          <source>Return a key based on PATH and ID, which can be used as a key for &lt;code&gt;msgget&lt;/code&gt;, &lt;code&gt;semget&lt;/code&gt; and &lt;code&gt;shmget&lt;/code&gt;. See &lt;a href=&quot;http://man.he.net/man3/ftok&quot;&gt;ftok(3)&lt;/a&gt;.</source>
          <target state="translated">PATHとIDに基づいてキーを返します。これは、 &lt;code&gt;msgget&lt;/code&gt; 、 &lt;code&gt;semget&lt;/code&gt; 、および &lt;code&gt;shmget&lt;/code&gt; のキーとして使用できます。&lt;a href=&quot;http://man.he.net/man3/ftok&quot;&gt;ftok（3）を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="1bf5b38903b48414eabe89f5d73486c7f125e1c6" translate="yes" xml:space="preserve">
          <source>Return a list consisting of (signed) numerator and (unsigned) denominator as BigInts.</source>
          <target state="translated">(符号付き)分子と(符号なし)分母からなるリストをBigIntsとして返します。</target>
        </trans-unit>
        <trans-unit id="451b1d3213ee97d37f98d9e2159d9222ada4e531" translate="yes" xml:space="preserve">
          <source>Return a list of filehandles that may be used upstream in a select() call to signal that this Iterator is ready. Iterators that are not handle based should return an empty list.</source>
          <target state="translated">このイテレータの準備ができたことを示すために、上流の select()コールで使用する可能性のあるファイルハンドルのリストを返します。ハンドルベースではないイテレータは、空のリストを返すべきです。</target>
        </trans-unit>
        <trans-unit id="43a2d1db010ca6f9905f00e7243c5c3558754b8a" translate="yes" xml:space="preserve">
          <source>Return a list of filehandles that may be used upstream in a select() call to signal that this Iterator is ready. Iterators that are not handle-based should return an empty list.</source>
          <target state="translated">このイテレータの準備ができたことを示すために、上流の select()コールで使用できるファイルハンドルのリストを返します。ハンドルベースではないイテレータは、空のリストを返すべきです。</target>
        </trans-unit>
        <trans-unit id="32067e232db5b4a2fbf7e768b9545020f7badd2e" translate="yes" xml:space="preserve">
          <source>Return a list of login, password and account information for the netrc entry</source>
          <target state="translated">netrc エントリのログイン、パスワード、アカウント情報のリストを返します。</target>
        </trans-unit>
        <trans-unit id="bb492aaa479310c3cdf2aa3bd7e3c5fbe533f80a" translate="yes" xml:space="preserve">
          <source>Return a list of symbol names which remain undefined after load_file(). Returns &lt;code&gt;()&lt;/code&gt; if not known. Don't worry if your platform does not provide a mechanism for this. Most do not need it and hence do not provide it, they just return an empty list.</source>
          <target state="translated">load_file（）の実行後も未定義のままであるシンボル名のリストを返します。不明な場合は &lt;code&gt;()&lt;/code&gt; を返します。ご使用のプラットフォームがこのためのメカニズムを提供していなくても心配しないでください。ほとんどはそれを必要としないので提供せず、空のリストを返すだけです。</target>
        </trans-unit>
        <trans-unit id="26152553b41eeb36a45b1fbc384250df3b61d1f3" translate="yes" xml:space="preserve">
          <source>Return a member of the XOP structure.</source>
          <target state="translated">XOP構造体のメンバを返します。</target>
        </trans-unit>
        <trans-unit id="059cd9120afd60662940c8b642ff4e8f7c4204fb" translate="yes" xml:space="preserve">
          <source>Return a member of the XOP structure. &lt;code&gt;which&lt;/code&gt; is a cpp token indicating which entry to return. If the member is not set this will return a default value. The return type depends on &lt;code&gt;which&lt;/code&gt;. This macro evaluates its arguments more than once. If you are using &lt;code&gt;Perl_custom_op_xop&lt;/code&gt; to retreive a &lt;code&gt;XOP *&lt;/code&gt; from a &lt;code&gt;OP *&lt;/code&gt;, use the more efficient &lt;a href=&quot;#XopENTRYCUSTOM&quot;&gt;&quot;XopENTRYCUSTOM&quot;&lt;/a&gt; instead.</source>
          <target state="translated">XOP構造体のメンバーを返します。 &lt;code&gt;which&lt;/code&gt; は、返すエントリを示すcppトークンです。メンバーが設定されていない場合、これはデフォルト値を返します。戻り値の型は、 &lt;code&gt;which&lt;/code&gt; 依存します。このマクロは、引数を複数回評価します。 &lt;code&gt;Perl_custom_op_xop&lt;/code&gt; を使用して &lt;code&gt;OP *&lt;/code&gt; から &lt;code&gt;XOP *&lt;/code&gt; を取得する場合は、代わりに、より効率的な&lt;a href=&quot;#XopENTRYCUSTOM&quot;&gt;「XopENTRYCUSTOM」を&lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="43350431e85cfdd2334b3ee96389493bdc28cb6b" translate="yes" xml:space="preserve">
          <source>Return a new, unattached scalar handle. If any arguments are given, they're sent to open().</source>
          <target state="translated">アタッチされていない新しいスカラハンドルを返します。引数が与えられた場合は、それが open()に送られます。</target>
        </trans-unit>
        <trans-unit id="241e1964cd5a05e9777847785a74cc4814336a34" translate="yes" xml:space="preserve">
          <source>Return a non-zero integer if the sign bit on an NV is set, and 0 if it is not.</source>
          <target state="translated">NV の符号ビットが設定されている場合は 0 以外の整数を返し、設定されていない場合は 0 を返します。</target>
        </trans-unit>
        <trans-unit id="891cdbd9e57376291645fa15156771d6e6a9b800" translate="yes" xml:space="preserve">
          <source>Return a pointer to the UTF-8-encoded representation of the SV, and set *lp to its length. May cause the SV to be upgraded to UTF-8 as a side-effect.</source>
          <target state="translated">SV の UTF-8 エンコードされた表現へのポインタを返し、その長さに *lp を設定する。副作用として、SV が UTF-8 にアップグレードされる可能性がある。</target>
        </trans-unit>
        <trans-unit id="c39edf7c9fbd5211275b489cdc895017fb30f9cc" translate="yes" xml:space="preserve">
          <source>Return a pointer to the UTF-8-encoded representation of the SV, and set &lt;code&gt;*lp&lt;/code&gt; to its length. May cause the SV to be upgraded to UTF-8 as a side-effect.</source>
          <target state="translated">SVのUTF-8エンコード表現へのポインターを返し、 &lt;code&gt;*lp&lt;/code&gt; をその長さに設定します。副作用としてSVがUTF-8にアップグレードされる可能性があります。</target>
        </trans-unit>
        <trans-unit id="9c3adaee605a1fad16113ef88e9f64319c503dfa" translate="yes" xml:space="preserve">
          <source>Return a pointer to the UTF-8-encoded representation of the SV. May cause the SV to be upgraded to UTF-8 as a side-effect.</source>
          <target state="translated">SV の UTF-8 エンコードされた表現へのポインタを返す。副作用として、SV が UTF-8 にアップグレードされることがあります。</target>
        </trans-unit>
        <trans-unit id="63b7b069ee4d507ec79e42a1161a1c581d1bcaad" translate="yes" xml:space="preserve">
          <source>Return a pointer to the byte-encoded representation of the SV, and set *lp to its length. May cause the SV to be downgraded from UTF-8 as a side-effect.</source>
          <target state="translated">SV のバイトエンコードされた表現へのポインタを返し、その長さに *lp を設定する。副作用として、SV が UTF-8 からダウングレードされる可能性がある。</target>
        </trans-unit>
        <trans-unit id="6349f1bf9209a077da42f7dc3eb356b18171f5ca" translate="yes" xml:space="preserve">
          <source>Return a pointer to the byte-encoded representation of the SV, and set &lt;code&gt;*lp&lt;/code&gt; to its length. If the SV is marked as being encoded as UTF-8, it will downgrade it to a byte string as a side-effect, if possible. If the SV cannot be downgraded, this croaks.</source>
          <target state="translated">SVのバイトエンコード表現へのポインタを返し、 &lt;code&gt;*lp&lt;/code&gt; をその長さに設定します。 SVがUTF-8としてエンコードされているとマークされている場合、可能であれば、副作用としてSVをバイト文字列にダウングレードします。 SVをダウングレードできない場合、これは鳴きます。</target>
        </trans-unit>
        <trans-unit id="07d05795d61474062c0a14f8e1c7b4e50543a85a" translate="yes" xml:space="preserve">
          <source>Return a pointer to the byte-encoded representation of the SV. May cause the SV to be downgraded from UTF-8 as a side-effect.</source>
          <target state="translated">SV のバイトエンコードされた表現へのポインタを返す。副作用として、SV が UTF-8 からダウングレードされることがあります。</target>
        </trans-unit>
        <trans-unit id="ed2c1e0979757933a6bf33adef1b53f07b2683a8" translate="yes" xml:space="preserve">
          <source>Return a real-valued arcus cosine if the input is between [-1, 1], &lt;b&gt;inclusive&lt;/b&gt; the endpoints. For inputs greater than one, zero is returned. For inputs less than minus one, pi is returned.</source>
          <target state="translated">入力が[-1、1]（&lt;b&gt;両端を含む）&lt;/b&gt;の場合、実数値のアークコサインを返します。1より大きい入力の場合、ゼロが返されます。マイナス1未満の入力の場合、piが返されます。</target>
        </trans-unit>
        <trans-unit id="0a96ea8a4c2eeacd78081e85ee39ee9c99c7759b" translate="yes" xml:space="preserve">
          <source>Return a real-valued arcus sine if the input is between [-1, 1], &lt;b&gt;inclusive&lt;/b&gt; the endpoints. For inputs greater than one, pi/2 is returned. For inputs less than minus one, -pi/2 is returned.</source>
          <target state="translated">入力が[-1、1]の間（端点を&lt;b&gt;含む）&lt;/b&gt;の場合、実数値のアークサインを返します。1より大きい入力の場合、pi / 2が返されます。マイナス1未満の入力の場合、-pi / 2が返されます。</target>
        </trans-unit>
        <trans-unit id="fdf6e57474a1d775479b89f8208b393f0a75e6df" translate="yes" xml:space="preserve">
          <source>Return a reference to a hash of the capabilities of the server. APOP is added as a pseudo capability. Note that I've been unable to find a list of the standard capability values, and some appear to be multi-word and some are not. We make an attempt at intelligently parsing them, but it may not be correct.</source>
          <target state="translated">サーバのケイパビリティのハッシュへの参照を返します。疑似ケイパビリティとしてAPOPが追加されています。標準のケイパビリティ値のリストが見つからず、マルチワードのように見えるものとそうでないものがあることに注意してください。それらをインテリジェントに解析する試みをしていますが、正しくないかもしれません。</target>
        </trans-unit>
        <trans-unit id="c5fd404f895e96834df66cd6d02d6a132e5d931b" translate="yes" xml:space="preserve">
          <source>Return a reference to a new Pod::Checker object that inherits from Pod::Parser and is used for calling the required methods later. The following options are recognized:</source>
          <target state="translated">Pod::Parserを継承し、後で必要なメソッドを呼び出すために使用される新しいPod::Checkerオブジェクトへの参照を返します。以下のオプションが認識されます。</target>
        </trans-unit>
        <trans-unit id="5991bd9bc229ee00344f31453e06f47efec4dd1d" translate="yes" xml:space="preserve">
          <source>Return a reference to a new Pod::Checker object that inherits from Pod::Simple and is used for calling the required methods later. The following options are recognized:</source>
          <target state="translated">Pod::Simpleを継承し、後で必要なメソッドを呼び出すために使用される新しいPod::Checkerオブジェクトへの参照を返します。以下のオプションが認識されます。</target>
        </trans-unit>
        <trans-unit id="b83304166d7a7ddf35c66ba43508e38c451bead6" translate="yes" xml:space="preserve">
          <source>Return a reference to the underlying scalar.</source>
          <target state="translated">基礎となるスカラへの参照を返します。</target>
        </trans-unit>
        <trans-unit id="44be791192716cc11f6cf8790fe7a9aa91d55565" translate="yes" xml:space="preserve">
          <source>Return a result from the next available parser. Returns a list containing the parser from which the result came, the stash that corresponds with that parser and the result.</source>
          <target state="translated">次に利用可能なパーサから結果を返します。結果の元となったパーサ、そのパーサに対応するスタッシュ、結果を含むリストを返します。</target>
        </trans-unit>
        <trans-unit id="66a0e0e3adf015ddaa0b315c9b035e774d2c4a4b" translate="yes" xml:space="preserve">
          <source>Return a set of basic information about a hash.</source>
          <target state="translated">ハッシュに関する基本情報のセットを返します。</target>
        </trans-unit>
        <trans-unit id="b0ef823680735fd50aee393df3d6a0a47495877c" translate="yes" xml:space="preserve">
          <source>Return a short description of the provided OP.</source>
          <target state="translated">提供されたOPの簡単な説明を返します。</target>
        </trans-unit>
        <trans-unit id="afe505b614a002a8797b055ea858ee27a1314b27" translate="yes" xml:space="preserve">
          <source>Return a string representing the object. The returned string should have no leading zeros, i.e., it should match &lt;code&gt;^(0|[1-9]\d*)$&lt;/code&gt; .</source>
          <target state="translated">オブジェクトを表す文字列を返します。返される文字列には先行ゼロがあってはなりません。つまり、 &lt;code&gt;^(0|[1-9]\d*)$&lt;/code&gt; 一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="ad02dc2af39b43751576df209b0fc28331051482" translate="yes" xml:space="preserve">
          <source>Return a string representing this object.</source>
          <target state="translated">このオブジェクトを表す文字列を返します。</target>
        </trans-unit>
        <trans-unit id="40d93510e48540756be01ae3bf688bac63f2f0ba" translate="yes" xml:space="preserve">
          <source>Return a true copy of the object.</source>
          <target state="translated">オブジェクトの真のコピーを返します。</target>
        </trans-unit>
        <trans-unit id="8dce44eeede98380084e686046d4f4c26cb13be4" translate="yes" xml:space="preserve">
          <source>Return a true value if OBJ is an even integer, and a false value otherwise.</source>
          <target state="translated">OBJ が偶数の整数の場合は真の値を返し、そうでない場合は偽の値を返します。</target>
        </trans-unit>
        <trans-unit id="6a89d549d64c9589ce257226bcc136decec05091" translate="yes" xml:space="preserve">
          <source>Return a true value if the object is OK, and a false value otherwise. This is a check routine to test the internal state of the object for corruption.</source>
          <target state="translated">オブジェクトがOKの場合は真の値を返し、そうでない場合は偽の値を返します。これは、オブジェクトの内部状態が破損していないかどうかをテストするためのチェックルーチンです。</target>
        </trans-unit>
        <trans-unit id="564da104aa49e7e61cb1b34a414d287d04cd3065" translate="yes" xml:space="preserve">
          <source>Return all the context acquire callback references.</source>
          <target state="translated">すべてのコンテキスト取得コールバック参照を返します。</target>
        </trans-unit>
        <trans-unit id="4b56ea11fa7e09fd08e43c32263ce9d2f9c32994" translate="yes" xml:space="preserve">
          <source>Return an SV with the numeric value of the source SV, doing any necessary reference or overload conversion. The caller is expected to have handled get-magic already.</source>
          <target state="translated">必要な参照またはオーバーロード変換を行い、ソース SV の数値を持つ SV を返します。呼び出し元は既に get-magic を処理していると予想される。</target>
        </trans-unit>
        <trans-unit id="c6ea6ef7047a1702f443e01459bc3f879a9ce1bd" translate="yes" xml:space="preserve">
          <source>Return an absolute file specification from a relative one.</source>
          <target state="translated">相対ファイルから絶対ファイル指定を返します。</target>
        </trans-unit>
        <trans-unit id="532b030b09f7dcee47e9ae2bed7fbfa482c1cbfb" translate="yes" xml:space="preserve">
          <source>Return an arbitrary selection of the information. If no &lt;code&gt;$conf&lt;/code&gt; is given, &lt;code&gt;myconfig ()&lt;/code&gt; is used instead.</source>
          <target state="translated">情報の任意の選択を返します。 &lt;code&gt;$conf&lt;/code&gt; が指定されていない場合は、代わりに &lt;code&gt;myconfig ()&lt;/code&gt; が使用されます。</target>
        </trans-unit>
        <trans-unit id="9949eba6aeab405ed78bd6939d900df50ed3361c" translate="yes" xml:space="preserve">
          <source>Return an array of all registered handles.</source>
          <target state="translated">登録されているすべてのハンドルの配列を返します。</target>
        </trans-unit>
        <trans-unit id="a383a6b51939f61c9e8f50dda6e9f216d54b7b25" translate="yes" xml:space="preserve">
          <source>Return an array of handles that are ready for reading. &lt;code&gt;TIMEOUT&lt;/code&gt; is the maximum amount of time to wait before returning an empty list (with &lt;code&gt;$!&lt;/code&gt; unchanged), in seconds, possibly fractional. If &lt;code&gt;TIMEOUT&lt;/code&gt; is not given and any handles are registered then the call will block indefinitely. Upon error, an empty list is returned, with &lt;code&gt;$!&lt;/code&gt; set to indicate the error. To distinguish between timeout and error, set &lt;code&gt;$!&lt;/code&gt; to zero before calling this method, and check it after an empty list is returned.</source>
          <target state="translated">読み取る準備ができているハンドルの配列を返します。 &lt;code&gt;TIMEOUT&lt;/code&gt; は、空のリスト（ &lt;code&gt;$!&lt;/code&gt; は変更されていない）を返すまで待機する最大時間で、秒単位で、場合によっては小数部です。場合 &lt;code&gt;TIMEOUT&lt;/code&gt; が与えられていないと、任意のハンドルが登録され、その後の呼び出しが無期限にブロックします。エラーが発生すると、 &lt;code&gt;$!&lt;/code&gt; を含む空のリストが返されます。エラーを示すように設定します。タイムアウトとエラーを区別するには、 &lt;code&gt;$!&lt;/code&gt; を設定します。このメソッドを呼び出す前にゼロにし、空のリストが返された後にチェックします。</target>
        </trans-unit>
        <trans-unit id="c1e82163b9eb16d68b95807d1026a6e53a268ba0" translate="yes" xml:space="preserve">
          <source>Return an array of handles that are ready for reading. &lt;code&gt;TIMEOUT&lt;/code&gt; is the maximum amount of time to wait before returning an empty list, in seconds, possibly fractional. If &lt;code&gt;TIMEOUT&lt;/code&gt; is not given and any handles are registered then the call will block.</source>
          <target state="translated">読み取る準備ができているハンドルの配列を返します。 &lt;code&gt;TIMEOUT&lt;/code&gt; は、空のリストを返すまでの最大待機時間（秒単位）です。場合 &lt;code&gt;TIMEOUT&lt;/code&gt; が与えられていないと、任意のハンドルが登録され、その後の呼び出しはブロックされます。</target>
        </trans-unit>
        <trans-unit id="b56f2614a481fefe74274d254bd95335c5759694" translate="yes" xml:space="preserve">
          <source>Return an empty list from an XSUB immediately.</source>
          <target state="translated">XSUBから空のリストをすぐに返します。</target>
        </trans-unit>
        <trans-unit id="158ae144c3e0a50b0764b0f6030b134afc94223e" translate="yes" xml:space="preserve">
          <source>Return an entry from the BHK structure.</source>
          <target state="translated">BHK構造体からのエントリを返します。</target>
        </trans-unit>
        <trans-unit id="1aa01a9db2ea3f60f7f57284d6e35933e26f44aa" translate="yes" xml:space="preserve">
          <source>Return an entry from the BHK structure. &lt;code&gt;which&lt;/code&gt; is a preprocessor token indicating which entry to return. If the appropriate flag is not set this will return &lt;code&gt;NULL&lt;/code&gt;. The type of the return value depends on which entry you ask for.</source>
          <target state="translated">BHK構造からエントリを返します。 &lt;code&gt;which&lt;/code&gt; は、返すエントリを示すプリプロセッサトークンです。適切なフラグが設定されていない場合、これは &lt;code&gt;NULL&lt;/code&gt; を返します。戻り値のタイプは、要求するエントリによって異なります。</target>
        </trans-unit>
        <trans-unit id="8f6b2b84ace3e3e1bd4262e9a939baea254bec61" translate="yes" xml:space="preserve">
          <source>Return an integer from an XSUB immediately. Uses &lt;code&gt;XST_mIV&lt;/code&gt; .</source>
          <target state="translated">XSUBから整数をすぐに返します。 &lt;code&gt;XST_mIV&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="5f7a6469e188d1a3ef300a33ffc2ddde5644535e" translate="yes" xml:space="preserve">
          <source>Return an integer from an XSUB immediately. Uses &lt;code&gt;XST_mIV&lt;/code&gt;.</source>
          <target state="translated">XSUBからすぐに整数を返します。 &lt;code&gt;XST_mIV&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="c26d41edbd3ecefa03ca709a9475c24b1fb205ad" translate="yes" xml:space="preserve">
          <source>Return an integer from an XSUB immediately. Uses &lt;code&gt;XST_mUV&lt;/code&gt; .</source>
          <target state="translated">XSUBから整数をすぐに返します。 &lt;code&gt;XST_mUV&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="0a05e7096da0a28d2907eb5730206719d05e315f" translate="yes" xml:space="preserve">
          <source>Return an integer from an XSUB immediately. Uses &lt;code&gt;XST_mUV&lt;/code&gt;.</source>
          <target state="translated">XSUBからすぐに整数を返します。 &lt;code&gt;XST_mUV&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="29da77810c46bf5bf9d644169ef5a8f2a609a982" translate="yes" xml:space="preserve">
          <source>Return an object given a string representing a binary number. The input has a '0b' prefix and matches the regular expression &lt;code&gt;^0[bB](0|1[01]*)$&lt;/code&gt; .</source>
          <target state="translated">2進数を表す文字列が指定されたオブジェクトを返します。入力には '0b'プレフィックスがあり、正規表現 &lt;code&gt;^0[bB](0|1[01]*)$&lt;/code&gt; と一致します。</target>
        </trans-unit>
        <trans-unit id="86ab5502ecbd639c23feb33d4d440717ea45eb9a" translate="yes" xml:space="preserve">
          <source>Return an object given a string representing a binary number. The input has a '0b' prefix and matches the regular expression &lt;code&gt;^0[bB](0|1[01]*)$&lt;/code&gt;.</source>
          <target state="translated">2進数を表す文字列を指定してオブジェクトを返します。入力には「0b」プレフィックスがあり、正規表現 &lt;code&gt;^0[bB](0|1[01]*)$&lt;/code&gt; と一致します。</target>
        </trans-unit>
        <trans-unit id="cb1a519206f28688ca4edd290761e39b7d94833d" translate="yes" xml:space="preserve">
          <source>Return an object given a string representing a hexadecimal number. The input has a '0x' prefix and matches the regular expression &lt;code&gt;^0x(0|[1-9a-fA-F][\da-fA-F]*)$&lt;/code&gt; .</source>
          <target state="translated">16進数を表す文字列が指定されたオブジェクトを返します。入力には '0x'プレフィックスがあり、正規表現 &lt;code&gt;^0x(0|[1-9a-fA-F][\da-fA-F]*)$&lt;/code&gt; と一致します。</target>
        </trans-unit>
        <trans-unit id="cedb996bc79da31b51ea22d61f7b3425397ca9f5" translate="yes" xml:space="preserve">
          <source>Return an object given a string representing a hexadecimal number. The input has a '0x' prefix and matches the regular expression &lt;code&gt;^0x(0|[1-9a-fA-F][\da-fA-F]*)$&lt;/code&gt;.</source>
          <target state="translated">16進数を表す文字列を指定してオブジェクトを返します。入力には「0x」プレフィックスがあり、正規表現 &lt;code&gt;^0x(0|[1-9a-fA-F][\da-fA-F]*)$&lt;/code&gt; と一致します。</target>
        </trans-unit>
        <trans-unit id="f17a9d7a7bb03786cbbf9b8ebda2c95d3e3444c9" translate="yes" xml:space="preserve">
          <source>Return an object given a string representing an octal number. The input has a '0' prefix and matches the regular expression &lt;code&gt;^0[1-7]*$&lt;/code&gt; .</source>
          <target state="translated">8進数を表す文字列が指定されたオブジェクトを返します。入力には '0'プレフィックスがあり、正規表現 &lt;code&gt;^0[1-7]*$&lt;/code&gt; 一致します。</target>
        </trans-unit>
        <trans-unit id="d2a48d226e29be92016782ed6286225104df5f37" translate="yes" xml:space="preserve">
          <source>Return an object given a string representing an octal number. The input has a '0' prefix and matches the regular expression &lt;code&gt;^0[1-7]*$&lt;/code&gt;.</source>
          <target state="translated">8進数を表す文字列を指定してオブジェクトを返します。入力には「0」プレフィックスがあり、正規表現 &lt;code&gt;^0[1-7]*$&lt;/code&gt; と一致します。</target>
        </trans-unit>
        <trans-unit id="01e43911ac9c36690a2f4ab465817a65fde7ace6" translate="yes" xml:space="preserve">
          <source>Return an object representing the number 10**N where N &amp;gt;= 0 is a Perl scalar.</source>
          <target state="translated">数値10 ** Nを表すオブジェクトを返します。N&amp;gt; = 0はPerlスカラーです。</target>
        </trans-unit>
        <trans-unit id="cc772c25af18a23490f3229752980abefde5db66" translate="yes" xml:space="preserve">
          <source>Return an object representing the number one.</source>
          <target state="translated">数字の1を表すオブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="a575fca380d4750e44b2dcf0a1f730c23eb1eaf7" translate="yes" xml:space="preserve">
          <source>Return an object representing the number ten.</source>
          <target state="translated">10という数字を表すオブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="ffb46871cf3e82de90a50f6e47e66fb291adad01" translate="yes" xml:space="preserve">
          <source>Return an object representing the number two.</source>
          <target state="translated">数字の2を表すオブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="188180beefc0cddc09d88d3d827fbf9ea081c539" translate="yes" xml:space="preserve">
          <source>Return an object representing the number zero.</source>
          <target state="translated">数字のゼロを表すオブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="11aecfff98a8afc40b049f542a98ed2aa2e77f95" translate="yes" xml:space="preserve">
          <source>Return an undefined value.</source>
          <target state="translated">未定義の値を返します。</target>
        </trans-unit>
        <trans-unit id="549deb9cfd17d09d388b32e8d8879d7c6170d75b" translate="yes" xml:space="preserve">
          <source>Return array reference of the four-element list of CPU seconds, as with &lt;a href=&quot;../functions/times&quot;&gt;times&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../functions/times&quot;&gt;times&lt;/a&gt;と同様に、CPU秒の4要素リストの配列参照を返します。</target>
        </trans-unit>
        <trans-unit id="eb3baf23b796fecd6bbcf9eb18c730a7c6bf9904" translate="yes" xml:space="preserve">
          <source>Return array reference of the four-element list of CPU seconds, as with &lt;a href=&quot;perlfunc#times&quot;&gt;&quot;times&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;perlfunc#times&quot;&gt;perlfuncの「times」&lt;/a&gt;と同様に、CPU秒の4要素リストの配列参照を返します。</target>
        </trans-unit>
        <trans-unit id="50bda627656d52a5da7d72fbd0b32449c8c04ddc" translate="yes" xml:space="preserve">
          <source>Return as seconds the</source>
          <target state="translated">秒として戻ります。</target>
        </trans-unit>
        <trans-unit id="8050ecfa06653b6203153732192a0001e197bc04" translate="yes" xml:space="preserve">
          <source>Return as seconds the current value of the POSIX high resolution timer specified by &lt;code&gt;$which&lt;/code&gt; . All implementations that support POSIX high resolution timers are supposed to support at least the &lt;code&gt;$which&lt;/code&gt; value of &lt;code&gt;CLOCK_REALTIME&lt;/code&gt; , which is supposed to return results close to the results of &lt;code&gt;gettimeofday&lt;/code&gt; , or the number of seconds since 00:00:00:00 January 1, 1970 Greenwich Mean Time (GMT). Do not assume that CLOCK_REALTIME is zero, it might be one, or something else. Another potentially useful (but not available everywhere) value is &lt;code&gt;CLOCK_MONOTONIC&lt;/code&gt; , which guarantees a monotonically increasing time value (unlike time() or gettimeofday(), which can be adjusted). See your system documentation for other possibly supported values.</source>
          <target state="translated">&lt;code&gt;$which&lt;/code&gt; 指定されたPOSIX高解像度タイマーの現在の値を秒として返します。POSIX高解像度タイマーをサポートするすべての実装は、少なくとも &lt;code&gt;CLOCK_REALTIME&lt;/code&gt; の &lt;code&gt;$which&lt;/code&gt; 値をサポートすることになっています。これは、 &lt;code&gt;gettimeofday&lt;/code&gt; の結果に近い結果、または1月1日00：00：00：00からの秒数を返すことになっています。 1970グリニッジ標準時（GMT）。CLOCK_REALTIMEがゼロであることを前提にしないでください。ゼロである可能性があります。別の潜在的に有用な（ただし、どこでも使用できるわけではない）値は &lt;code&gt;CLOCK_MONOTONIC&lt;/code&gt; です。、単調に増加する時間値を保証します（調整可能なtime（）またはgettimeofday（）とは異なります）。サポートされている可能性のある他の値については、システムのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="54d8f4ca52bbdf72f903a4390c269da9dec31261" translate="yes" xml:space="preserve">
          <source>Return as seconds the current value of the POSIX high resolution timer specified by &lt;code&gt;$which&lt;/code&gt;. All implementations that support POSIX high resolution timers are supposed to support at least the &lt;code&gt;$which&lt;/code&gt; value of &lt;code&gt;CLOCK_REALTIME&lt;/code&gt;, which is supposed to return results close to the results of &lt;code&gt;gettimeofday&lt;/code&gt;, or the number of seconds since 00:00:00:00 January 1, 1970 Greenwich Mean Time (GMT). Do not assume that CLOCK_REALTIME is zero, it might be one, or something else. Another potentially useful (but not available everywhere) value is &lt;code&gt;CLOCK_MONOTONIC&lt;/code&gt;, which guarantees a monotonically increasing time value (unlike time() or gettimeofday(), which can be adjusted). See your system documentation for other possibly supported values.</source>
          <target state="translated">&lt;code&gt;$which&lt;/code&gt; 指定されたPOSIX高解像度タイマーの現在の値を秒単位で返します。POSIX高解像度タイマーをサポートするすべての実装は、少なくとも &lt;code&gt;CLOCK_REALTIME&lt;/code&gt; の &lt;code&gt;$which&lt;/code&gt; 値をサポートすることになっています。これは、 &lt;code&gt;gettimeofday&lt;/code&gt; の結果に近い結果、または1月1日の00：00：00：00からの秒数を返すことになっています。 1970年グリニッジ標準時（GMT）。CLOCK_REALTIMEがゼロであると想定しないでください。ゼロである可能性があります。もう1つの潜在的に有用な（ただし、どこでも利用できるわけではない）値は &lt;code&gt;CLOCK_MONOTONIC&lt;/code&gt; です。、単調に増加する時間値を保証します（調整可能なtime（）またはgettimeofday（）とは異なります）。サポートされている可能性のあるその他の値については、システムのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="93c21fc7af48808f69e496945f4fd4e94e21bce3" translate="yes" xml:space="preserve">
          <source>Return as seconds the resolution of the POSIX high resolution timer specified by &lt;code&gt;$which&lt;/code&gt; . All implementations that support POSIX high resolution timers are supposed to support at least the &lt;code&gt;$which&lt;/code&gt; value of &lt;code&gt;CLOCK_REALTIME&lt;/code&gt; , see &lt;a href=&quot;#clock_gettime&quot;&gt;clock_gettime&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;$which&lt;/code&gt; 指定されたPOSIX高解像度タイマーの解像度を秒単位で返します。すべての実装のサポートPOSIX高分解能タイマーは、少なくともサポートすることになっていることを &lt;code&gt;$which&lt;/code&gt; の値は &lt;code&gt;CLOCK_REALTIME&lt;/code&gt; 、参照&lt;a href=&quot;#clock_gettime&quot;&gt;にclock_gettimeを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="329c63485fb2a29681157d2d26f24a147550ae3b" translate="yes" xml:space="preserve">
          <source>Return as seconds the resolution of the POSIX high resolution timer specified by &lt;code&gt;$which&lt;/code&gt;. All implementations that support POSIX high resolution timers are supposed to support at least the &lt;code&gt;$which&lt;/code&gt; value of &lt;code&gt;CLOCK_REALTIME&lt;/code&gt;, see &lt;a href=&quot;#clock_gettime&quot;&gt;&quot;clock_gettime&quot;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;$which&lt;/code&gt; 指定されたPOSIX高解像度タイマーの解像度を秒単位で返します。POSIX高解像度タイマーをサポートするすべての実装は、少なくとも &lt;code&gt;CLOCK_REALTIME&lt;/code&gt; の &lt;code&gt;$which&lt;/code&gt; 値をサポートすることになっています。&lt;a href=&quot;#clock_gettime&quot;&gt;「clock_gettime」を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="e78a36f42fa7d49ff1c33db2428ad62e574418ef" translate="yes" xml:space="preserve">
          <source>Return bitwise and. If necessary, the smallest number is padded with leading zeros.</source>
          <target state="translated">ビット単位で返します。必要に応じて、最小の数値は先頭のゼロでパディングされます。</target>
        </trans-unit>
        <trans-unit id="cb6e9a575d0b87f630e4d14061b502a84e725686" translate="yes" xml:space="preserve">
          <source>Return bitwise exclusive or. If necessary, the smallest number is padded with leading zeros.</source>
          <target state="translated">ビット単位で排他的な、またはビット単位の値を返します。必要に応じて、最小の数値は先頭のゼロでパディングされます。</target>
        </trans-unit>
        <trans-unit id="9385ddc48eab9b9c50d7efb48023e971e690c6ce" translate="yes" xml:space="preserve">
          <source>Return bitwise or. If necessary, the smallest number is padded with leading zeros.</source>
          <target state="translated">ビット単位で、またはビット単位で返します。必要に応じて、最小の数値は先頭のゼロでパディングされます。</target>
        </trans-unit>
        <trans-unit id="38b18a0a6537a1cc8c8b6fbdbdcf12df94a2b726" translate="yes" xml:space="preserve">
          <source>Return count of readable bytes in the buffer. Zero or negative return means no more bytes available.</source>
          <target state="translated">バッファ内の読み取り可能なバイト数を返します。ゼロまたは負の値を返すと、それ以上のバイト数がないことを意味します。</target>
        </trans-unit>
        <trans-unit id="cd4463fd2ee470a2b5cf9a4c7280fd1a57085d7b" translate="yes" xml:space="preserve">
          <source>Return encoding of the document, even if the encoding is not correctly handled.</source>
          <target state="translated">エンコーディングが正しく処理されていない場合でも、ドキュメントのエンコーディングを返します。</target>
        </trans-unit>
        <trans-unit id="595fc3f7abd6ea0a21e0731028ef13f68f86a25f" translate="yes" xml:space="preserve">
          <source>Return end-of-file indicator. &lt;code&gt;PerlIOBase_eof()&lt;/code&gt; is normally sufficient.</source>
          <target state="translated">ファイルの終わりインジケーターを返します。通常は &lt;code&gt;PerlIOBase_eof()&lt;/code&gt; で十分です。</target>
        </trans-unit>
        <trans-unit id="989d4eb1544f5cecb97e15d2c7344839e09b6a8c" translate="yes" xml:space="preserve">
          <source>Return error indicator. &lt;code&gt;PerlIOBase_error()&lt;/code&gt; is normally sufficient.</source>
          <target state="translated">エラーインジケータを返します。通常は &lt;code&gt;PerlIOBase_error()&lt;/code&gt; で十分です。</target>
        </trans-unit>
        <trans-unit id="5fa68d98b35d49654c48b4d7a8996ea73d2e3793" translate="yes" xml:space="preserve">
          <source>Return factorial of object (1*2*3*4*...).</source>
          <target state="translated">オブジェクトの階乗を返します(1*2*3*4*...)。</target>
        </trans-unit>
        <trans-unit id="f6e2cbf875d6114c68a0b4ee75daf0f4c94ed406" translate="yes" xml:space="preserve">
          <source>Return from XSUB, indicating number of items on the stack. This is usually handled by &lt;code&gt;xsubpp&lt;/code&gt; .</source>
          <target state="translated">XSUBから戻り、スタック上の項目の数を示します。これは通常 &lt;code&gt;xsubpp&lt;/code&gt; によって処理されます。</target>
        </trans-unit>
        <trans-unit id="5e7900ea53a453354adf9b0322a03bdaa9338b44" translate="yes" xml:space="preserve">
          <source>Return from XSUB, indicating number of items on the stack. This is usually handled by &lt;code&gt;xsubpp&lt;/code&gt;.</source>
          <target state="translated">XSUBから戻り、スタック上のアイテムの数を示します。これは通常、 &lt;code&gt;xsubpp&lt;/code&gt; によって処理されます。</target>
        </trans-unit>
        <trans-unit id="ad2850550de8af43dfe162fa88bbc2b95920fcb5" translate="yes" xml:space="preserve">
          <source>Return integer log of OBJ to base BASE. This method has two output arguments, the OBJECT and a STATUS. The STATUS is Perl scalar; it is 1 if OBJ is the exact result, 0 if the result was truncted to give OBJ, and undef if it is unknown whether OBJ is the exact result.</source>
          <target state="translated">OBJの整数ログをBASEに返します。このメソッドはOBJECTとSTATUSの2つの出力引数を持ちます。STATUSはPerlのスカラーで、OBJが正確な結果であれば1、OBJを得るために結果がtrunctされた場合は0、OBJが正確な結果であるかどうか不明な場合はundefとなります。</target>
        </trans-unit>
        <trans-unit id="401944e8dca9d9309515015e83a9c3e7f09964dc" translate="yes" xml:space="preserve">
          <source>Return modular exponentiation, (OBJ1 ** OBJ2) % OBJ3.</source>
          <target state="translated">モジュラー指数、(OBJ1 **OBJ2)% OBJ3を返します。</target>
        </trans-unit>
        <trans-unit id="1b9909dafd1e851072a366e9a8cf14e8e203c382" translate="yes" xml:space="preserve">
          <source>Return modular multiplicative inverse, i.e., return OBJ3 so that</source>
          <target state="translated">モジュラー乗算の逆数を返します。</target>
        </trans-unit>
        <trans-unit id="0dea4b36ca573d9394db3d77e929d7e71b77ae61" translate="yes" xml:space="preserve">
          <source>Return name and handle of a temporary file safely</source>
          <target state="translated">テンポラリファイルの名前とハンドルを安全に返す</target>
        </trans-unit>
        <trans-unit id="bd83c943899faf6221cdf045d4f14b83d1a38b0f" translate="yes" xml:space="preserve">
          <source>Return pointer to next readable byte in buffer, accessing via the pointer (dereferencing) is only safe if PerlIO_get_cnt() has returned a positive value. Only positive offsets up to value returned by PerlIO_get_cnt() are allowed.</source>
          <target state="translated">バッファ内の次の読み出し可能なバイトへのポインタを返します。ポインタを介したアクセス(参照元の変更)は、PerlIO_get_cnt()が正の値を返した場合のみ安全です。PerlIO_get_cnt()が返す値までの正のオフセットのみが許されます。</target>
        </trans-unit>
        <trans-unit id="e9400c2a972aac8273d7b5993703cef3de364c28" translate="yes" xml:space="preserve">
          <source>Return position in the file.</source>
          <target state="translated">ファイル内の位置を返します。</target>
        </trans-unit>
        <trans-unit id="2ee013a6d785765733c1c186770c521fa7ad326e" translate="yes" xml:space="preserve">
          <source>Return source code for the body of a subroutine (a block, optionally preceded by a prototype in parens), given a reference to the sub. Because a subroutine can have no names, or more than one name, this method doesn't return a complete subroutine definition -- if you want to eval the result, you should prepend &quot;sub subname &quot;, or &quot;sub &quot; for an anonymous function constructor. Unless the sub was defined in the main:: package, the code will include a package declaration.</source>
          <target state="translated">subへの参照が与えられたサブルーチンの本体(ブロック、オプションでparensでprototypeを先行させたもの)のソースコードを返します。サブルーチンは名前を持たない、あるいは複数の名前を持つことができるので、このメソッドは完全なサブルーチンの定義を返しません --もし結果をevalしたいのであれば、&quot;sub subname &quot;,あるいは無名の関数コンストラクタの場合は &quot;sub &quot;を前置してください。subがmain::パッケージで定義されていない限り、コードにはパッケージ宣言が含まれます。</target>
        </trans-unit>
        <trans-unit id="20da61fd12905e90a6c28f5d9d067763e08eb16e" translate="yes" xml:space="preserve">
          <source>Return the</source>
          <target state="translated">戻ります。</target>
        </trans-unit>
        <trans-unit id="b13ef84886aa367ccced45d35b02a74b0ce63d0f" translate="yes" xml:space="preserve">
          <source>Return the 'command' being used for opening a file for reading using an external</source>
          <target state="translated">外部の</target>
        </trans-unit>
        <trans-unit id="7c4d88fb935d3655575a6cebe057c4b6b6e8de61" translate="yes" xml:space="preserve">
          <source>Return the 'command' being used for opening a file for writing using an external</source>
          <target state="translated">外部の</target>
        </trans-unit>
        <trans-unit id="4b25acaa88f87529f093504b66f0466d2bb94e73" translate="yes" xml:space="preserve">
          <source>Return the (faked) CV corresponding to the main part of the Perl program.</source>
          <target state="translated">Perlプログラムの主要部分に対応する(フェイクされた)CVを返します.</target>
        </trans-unit>
        <trans-unit id="0fde1b84d2cd929e5f496f865362e84cf14b7c26" translate="yes" xml:space="preserve">
          <source>Return the &lt;code&gt;&lt;a href=&quot;../../functions/exit&quot;&gt;exit&lt;/a&gt;&lt;/code&gt; status for this iterator.</source>
          <target state="translated">このイテレータの &lt;code&gt;&lt;a href=&quot;../../functions/exit&quot;&gt;exit&lt;/a&gt;&lt;/code&gt; ステータスを返します。</target>
        </trans-unit>
        <trans-unit id="8e6f2a254417828fe1c66669b6e2e1f924bfacb1" translate="yes" xml:space="preserve">
          <source>Return the &lt;code&gt;&lt;a href=&quot;../../functions/wait&quot;&gt;wait&lt;/a&gt;&lt;/code&gt; status for this iterator.</source>
          <target state="translated">この反復子の &lt;code&gt;&lt;a href=&quot;../../functions/wait&quot;&gt;wait&lt;/a&gt;&lt;/code&gt; ステータスを返します。</target>
        </trans-unit>
        <trans-unit id="b38298487fe5644011b9b6c50c2daeb2064a27c2" translate="yes" xml:space="preserve">
          <source>Return the &lt;code&gt;exit&lt;/code&gt; status for this iterator.</source>
          <target state="translated">このイテレータの &lt;code&gt;exit&lt;/code&gt; ステータスを返します。</target>
        </trans-unit>
        <trans-unit id="e161a28351448fa6bd7146f6281241b7e3d8b253" translate="yes" xml:space="preserve">
          <source>Return the &lt;code&gt;wait&lt;/code&gt; status for this iterator.</source>
          <target state="translated">このイテレータの &lt;code&gt;wait&lt;/code&gt; ステータスを返します。</target>
        </trans-unit>
        <trans-unit id="62f12e24aeabb29661a5f55adb61e41e418c1cbb" translate="yes" xml:space="preserve">
          <source>Return the AV from the GV.</source>
          <target state="translated">GVからAVを返します。</target>
        </trans-unit>
        <trans-unit id="22e67ba21f72e62248790c4cbcdcfff08f463285" translate="yes" xml:space="preserve">
          <source>Return the BHK's flags.</source>
          <target state="translated">BHKの旗を返す。</target>
        </trans-unit>
        <trans-unit id="d86808e34dfc460432ef7a0048092ddc2c2f3d18" translate="yes" xml:space="preserve">
          <source>Return the CV from the GV.</source>
          <target state="translated">GVからCVを返す。</target>
        </trans-unit>
        <trans-unit id="db501e6a91d32269fe522aabe42b37024f7d29ba" translate="yes" xml:space="preserve">
          <source>Return the HV from the GV.</source>
          <target state="translated">GVからHVを返します。</target>
        </trans-unit>
        <trans-unit id="0cf9eb079f27b5e41549a87d1fe2e4be511e1548" translate="yes" xml:space="preserve">
          <source>Return the MD5 of the info returned by &lt;code&gt;summary ()&lt;/code&gt; without the &lt;code&gt;config_args&lt;/code&gt; entry.</source>
          <target state="translated">&lt;code&gt;config_args&lt;/code&gt; エントリなしで &lt;code&gt;summary ()&lt;/code&gt; によって返された情報のMD5を返します。</target>
        </trans-unit>
        <trans-unit id="b09fd6b73251c98f0c6383f15ac2a7a38492e083" translate="yes" xml:space="preserve">
          <source>Return the N'ths digit from X when X is an integer value.</source>
          <target state="translated">Xが整数値の場合、XからN番目の桁を返します。</target>
        </trans-unit>
        <trans-unit id="ae4e7fc79bf87d528da99d7549eb69b6a49628fc" translate="yes" xml:space="preserve">
          <source>Return the Nth digit as a Perl scalar. N is a Perl scalar, where zero refers to the rightmost (least significant) digit, and negative values count from the left (most significant digit). If $obj represents the number 123, then</source>
          <target state="translated">N 番目の桁を Perl のスカラーとして返します。NはPerlのスカラーで、0は右端(最も小さい桁)を指し、負の値は左端(最も大きい桁)から数えます。obj が 123 を表している場合は、次のようになります。</target>
        </trans-unit>
        <trans-unit id="95294de0a9d18d8d78c72fe0c4f06b8b579c020d" translate="yes" xml:space="preserve">
          <source>Return the PP function name (e.g. &quot;pp_add&quot;) of op number OPNUM.</source>
          <target state="translated">op番号OPNUMのPP関数名(例:&quot;pp_add&quot;)を返します。</target>
        </trans-unit>
        <trans-unit id="02a39fd6c03ec1a2a83e8aab91a60f356bb07415" translate="yes" xml:space="preserve">
          <source>Return the SV from the GV.</source>
          <target state="translated">SV を GV から戻す。</target>
        </trans-unit>
        <trans-unit id="727e15a3c8b6127eecea72f3f105819ff2ffa4e4" translate="yes" xml:space="preserve">
          <source>Return the UTF-8 pointer &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; displaced by &lt;code&gt;off&lt;/code&gt; characters, either forward or backward.</source>
          <target state="translated">UTF-8ポインター &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; を前方または後方の &lt;code&gt;off&lt;/code&gt; 文字で置き換えて返します。</target>
        </trans-unit>
        <trans-unit id="bc927562549ad902b9878983f628b677fae2ddd6" translate="yes" xml:space="preserve">
          <source>Return the UTF-8 pointer &lt;code&gt;s&lt;/code&gt; displaced by &lt;code&gt;off&lt;/code&gt; characters, either forward or backward.</source>
          <target state="translated">UTF-8のポインタを返し &lt;code&gt;s&lt;/code&gt; だけ変位 &lt;code&gt;off&lt;/code&gt; 文字、前方または後方を。</target>
        </trans-unit>
        <trans-unit id="2cf2f707fbeb10cada8c0889721414c2f0bbdc68" translate="yes" xml:space="preserve">
          <source>Return the UTF-8 pointer &lt;code&gt;s&lt;/code&gt; displaced by up to &lt;code&gt;off&lt;/code&gt; characters, backward.</source>
          <target state="translated">UTF-8のポインタを返し &lt;code&gt;s&lt;/code&gt; までで変位 &lt;code&gt;off&lt;/code&gt; 後方の文字を、。</target>
        </trans-unit>
        <trans-unit id="121cab1d0e8d30d71b19d2e1f6fef9036c32516f" translate="yes" xml:space="preserve">
          <source>Return the UTF-8 pointer &lt;code&gt;s&lt;/code&gt; displaced by up to &lt;code&gt;off&lt;/code&gt; characters, either forward or backward.</source>
          <target state="translated">UTF-8のポインタを返し &lt;code&gt;s&lt;/code&gt; までで変位 &lt;code&gt;off&lt;/code&gt; 文字は、前方または後方。</target>
        </trans-unit>
        <trans-unit id="05b0c9a49da8197e8aec2c6ffacfe024b758d90d" translate="yes" xml:space="preserve">
          <source>Return the UTF-8 pointer &lt;code&gt;s&lt;/code&gt; displaced by up to &lt;code&gt;off&lt;/code&gt; characters, forward.</source>
          <target state="translated">UTF-8のポインタを返し &lt;code&gt;s&lt;/code&gt; までで変位 &lt;code&gt;off&lt;/code&gt; 前方に、文字が。</target>
        </trans-unit>
        <trans-unit id="26fd5060808698f7127e38b680523887e85e72ef" translate="yes" xml:space="preserve">
          <source>Return the XOP structure for a given custom op. This macro should be considered internal to &lt;code&gt;OP_NAME&lt;/code&gt; and the other access macros: use them instead. This macro does call a function. Prior to 5.19.6, this was implemented as a function.</source>
          <target state="translated">指定されたカスタム操作のXOP構造を返します。このマクロは、 &lt;code&gt;OP_NAME&lt;/code&gt; およびその他のアクセスマクロの内部と見なす必要があります。代わりにそれらを使用してください。このマクロは関数を呼び出します。5.19.6より前は、これは関数として実装されていました。</target>
        </trans-unit>
        <trans-unit id="8d968f68b024aece647e8680c726bc7db9edd52c" translate="yes" xml:space="preserve">
          <source>Return the XOP structure for a given custom op. This macro should be considered internal to OP_NAME and the other access macros: use them instead. This macro does call a function. Prior to 5.19.6, this was implemented as a function.</source>
          <target state="translated">このマクロは、OP_NAME およびその他のアクセスマクロの内部とみなす必要があります。このマクロは関数を呼び出します。5.19.6以前では、これは関数として実装されていました。</target>
        </trans-unit>
        <trans-unit id="634135ecd1da66792d8f094c18bc9346662586a8" translate="yes" xml:space="preserve">
          <source>Return the XOP's flags.</source>
          <target state="translated">XOP のフラグを返します。</target>
        </trans-unit>
        <trans-unit id="30487e1855ef653ab46905c98d480b77228f2aab" translate="yes" xml:space="preserve">
          <source>Return the account information for the netrc entry</source>
          <target state="translated">netrc エントリのアカウント情報を返します。</target>
        </trans-unit>
        <trans-unit id="8b881b828bff901023c8e000918699ba5dbd0191" translate="yes" xml:space="preserve">
          <source>Return the address of the symbol $symbol or &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if not found. If the target system has separate functions to search for symbols of different types then dl_find_symbol() should search for function symbols first and then other types.</source>
          <target state="translated">シンボル$ symbolのアドレスを返します。見つからない場合は &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; を返します。ターゲットシステムに異なるタイプのシンボルを検索する個別の関数がある場合、dl_find_symbol（）は最初に関数シンボルを検索し、次に他のタイプを検索する必要があります。</target>
        </trans-unit>
        <trans-unit id="a6b2d4901e8fb560a62afa0a5597f88aca6814a8" translate="yes" xml:space="preserve">
          <source>Return the address of the symbol $symbol or &lt;code&gt;undef&lt;/code&gt; if not found. If the target system has separate functions to search for symbols of different types then dl_find_symbol() should search for function symbols first and then other types.</source>
          <target state="translated">シンボル$ symbolのアドレスを返すか、見つからない場合は &lt;code&gt;undef&lt;/code&gt; を返します。ターゲットシステムに異なるタイプのシンボルを検索するための個別の関数がある場合、dl_find_symbol（）は最初に関数シンボルを検索し、次に他のタイプを検索する必要があります。</target>
        </trans-unit>
        <trans-unit id="188e4da3acea0de525e548ebfc63a6dd15038a3f" translate="yes" xml:space="preserve">
          <source>Return the address part of the sockaddr structure for the socket</source>
          <target state="translated">ソケットの sockaddr 構造体のアドレス部分を返す。</target>
        </trans-unit>
        <trans-unit id="292e0b9e2c15c4128537706efd8468986e9f767c" translate="yes" xml:space="preserve">
          <source>Return the address part of the sockaddr structure for the socket in a text form xx.xx.xx.xx</source>
          <target state="translated">ソケットの sockaddr 構造体のアドレス部分を xx.xx.xx.xx.xx.xx というテキスト形式で返す。</target>
        </trans-unit>
        <trans-unit id="417769e36400c4340bd0f0b1764bbffbfb180d51" translate="yes" xml:space="preserve">
          <source>Return the address part of the sockaddr structure for the socket on the peer host</source>
          <target state="translated">相手ホスト上のソケットの sockaddr 構造体のアドレス部分を返す。</target>
        </trans-unit>
        <trans-unit id="58670ef25d3d2e51912a0db902386a1f7c4b2ddb" translate="yes" xml:space="preserve">
          <source>Return the address part of the sockaddr structure for the socket on the peer host in a text form xx.xx.xx.xx</source>
          <target state="translated">相手ホストのソケットの sockaddr 構造体のアドレス部分を xx.xx.xx.xx.xx.xx というテキスト形式で返す。</target>
        </trans-unit>
        <trans-unit id="29fcd26ac341953e060fac88133195a4a6ccd493" translate="yes" xml:space="preserve">
          <source>Return the approximate number of decimal digits of the object. The output is a Perl scalar.</source>
          <target state="translated">オブジェクトのおおよその10進数を返します。出力はPerlのスカラーです。</target>
        </trans-unit>
        <trans-unit id="ce16968fe75861ae9734d1aaba4d7f185dc04169" translate="yes" xml:space="preserve">
          <source>Return the approximate number of decimal digits of the object. The output is one Perl scalar. This estimate must be greater than or equal to what &lt;code&gt;_len()&lt;/code&gt; returns.</source>
          <target state="translated">オブジェクトのおおよその10進数の数を返します。出力は1つのPerlスカラーです。この推定値は、 &lt;code&gt;_len()&lt;/code&gt; が返すもの以上である必要があります。</target>
        </trans-unit>
        <trans-unit id="837eb954405e12531332f24b523ef7f8a237f99e" translate="yes" xml:space="preserve">
          <source>Return the binary digest for the message.</source>
          <target state="translated">メッセージのバイナリダイジェストを返します。</target>
        </trans-unit>
        <trans-unit id="76859202fcb0e9ac7e5ba6622f8f634407cadd3a" translate="yes" xml:space="preserve">
          <source>Return the binary digest for the message. The returned string will be 16 bytes long.</source>
          <target state="translated">メッセージのバイナリダイジェストを返します。返される文字列は16バイトの長さになります。</target>
        </trans-unit>
        <trans-unit id="4e3446d9a703719a4a80fdf1e47f4551c84d9a32" translate="yes" xml:space="preserve">
          <source>Return the binary string representation of the number. The string must have a '0b' prefix.</source>
          <target state="translated">数値のバイナリ文字列表現を返します。文字列の前には '0b' を指定しなければなりません。</target>
        </trans-unit>
        <trans-unit id="9398b13cea50287ad888ffe06e99baabafe083b5" translate="yes" xml:space="preserve">
          <source>Return the binomial coefficient OBJ1 over OBJ1.</source>
          <target state="translated">OBJ1上の二項係数OBJ1を返します。</target>
        </trans-unit>
        <trans-unit id="9039484dd443692be46208d331c0b51159f8498e" translate="yes" xml:space="preserve">
          <source>Return the bit string suitable as argument to the core select() call.</source>
          <target state="translated">コアの select()コールの引数として適切なビット文字列を返します。</target>
        </trans-unit>
        <trans-unit id="dcae368de925e7c76b147b1b529368eaa0da7b2f" translate="yes" xml:space="preserve">
          <source>Return the class of the provided OP: that is, which of the *OP structures it uses. For core ops this currently gets the information out of &lt;code&gt;PL_opargs&lt;/code&gt;, which does not always accurately reflect the type used; in v5.26 onwards, see also the function &lt;code&gt;&lt;a href=&quot;#op_class&quot;&gt;&quot;op_class&quot;&lt;/a&gt;&lt;/code&gt; which can do a better job of determining the used type.</source>
          <target state="translated">提供されたOPのクラスを返します。つまり、どの* OP構造を使用するかを返します。コアオペレーションの場合、これは現在 &lt;code&gt;PL_opargs&lt;/code&gt; から情報を取得しますが、これは使用されるタイプを常に正確に反映しているわけではありません。v5.26以降では、使用されるタイプをより適切に判別できる関数 &lt;code&gt;&lt;a href=&quot;#op_class&quot;&gt;&quot;op_class&quot;&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="a5f95075e02c5a8968b5fc02a316855e3f107893" translate="yes" xml:space="preserve">
          <source>Return the class of the provided OP: that is, which of the *OP structures it uses. For core ops this currently gets the information out of PL_opargs, which does not always accurately reflect the type used. For custom ops the type is returned from the registration, and it is up to the registree to ensure it is accurate. The value returned will be one of the OA_* constants from op.h.</source>
          <target state="translated">与えられたOPのクラスを返します。コアOPSの場合、現在のところこれはPL_opargsから情報を取得していますが、これは常に使用される型を正確に反映しているとは限りません。カスタムオペレーションでは、型は登録から返され、それが正確であることを確認するのはregistree次第です。返される値は op.h の OA_*定数のいずれかになります。</target>
        </trans-unit>
        <trans-unit id="cdd22a89d0c0732056821d3e2652ff7471889395" translate="yes" xml:space="preserve">
          <source>Return the class that numbers are upgraded to, is in fact returning &lt;code&gt;$Math::BigInt::upgrade&lt;/code&gt; .</source>
          <target state="translated">数値がアップグレードされるクラスを返し、実際には &lt;code&gt;$Math::BigInt::upgrade&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="6a3fbf46dfe4104c23aa91385ad0d8bdaa7233e3" translate="yes" xml:space="preserve">
          <source>Return the class that numbers are upgraded to, is in fact returning &lt;code&gt;$Math::BigInt::upgrade&lt;/code&gt;.</source>
          <target state="translated">数値がアップグレードされたクラスを返し &lt;code&gt;$Math::BigInt::upgrade&lt;/code&gt; 。実際には、$ Math :: BigInt :: upgradeを返します。</target>
        </trans-unit>
        <trans-unit id="0f8cf3decb17230525b612d2ce53fb4008a0ff26" translate="yes" xml:space="preserve">
          <source>Return the content of the named file.</source>
          <target state="translated">指定したファイルの内容を返します。</target>
        </trans-unit>
        <trans-unit id="5b13f6bcba216c050cb0e9d3fde283febb88a01d" translate="yes" xml:space="preserve">
          <source>Return the current position in the stream, as a numeric offset.</source>
          <target state="translated">ストリーム内の現在位置を数値オフセットで返します。</target>
        </trans-unit>
        <trans-unit id="df96bc69b3ecead78ca02d2e506c37ff6e94c5b4" translate="yes" xml:space="preserve">
          <source>Return the current position in the stream, as a numeric offset. Not yet supported.</source>
          <target state="translated">ストリーム内の現在位置を数値オフセットで返します。まだサポートされていません。</target>
        </trans-unit>
        <trans-unit id="358784a38f2ec61d110b98168a8cc2734a694fe9" translate="yes" xml:space="preserve">
          <source>Return the current position in the string, as an opaque object.</source>
          <target state="translated">文字列の現在位置を不透明なオブジェクトとして返します。</target>
        </trans-unit>
        <trans-unit id="e690559d4145f70cc5d3e5e11e25676e89322515" translate="yes" xml:space="preserve">
          <source>Return the current position in the string, as an opaque object. Not yet supported.</source>
          <target state="translated">文字列内の現在位置を不透明なオブジェクトとして返します。まだサポートされていません。</target>
        </trans-unit>
        <trans-unit id="fd7dca073919e493549e6e64d4f75ec4eba58456" translate="yes" xml:space="preserve">
          <source>Return the current read pointer relative to this layer's buffer.</source>
          <target state="translated">このレイヤのバッファに対する現在の読み込みポインタを返します。</target>
        </trans-unit>
        <trans-unit id="6785250f6235af7b741f8a0b71cd239d72b24f42" translate="yes" xml:space="preserve">
          <source>Return the current time using Time::HiRes if available.</source>
          <target state="translated">利用可能な場合は、Time::HiResを使用して現在の時刻を返します。</target>
        </trans-unit>
        <trans-unit id="feac410def00a5756d079a14a8678c92c0fe254a" translate="yes" xml:space="preserve">
          <source>Return the description of a given custom op. This was once used by the &lt;code&gt;OP_DESC&lt;/code&gt; macro, but is no longer: it has only been kept for compatibility, and should not be used.</source>
          <target state="translated">指定されたカスタム操作の説明を返します。これは、かつて &lt;code&gt;OP_DESC&lt;/code&gt; マクロによって使用されていましたが、現在は使用されていません。互換性のためにのみ保持されているため、使用しないでください。</target>
        </trans-unit>
        <trans-unit id="dcf7b904f166347e463e02724517b44d0a199a33" translate="yes" xml:space="preserve">
          <source>Return the description of a given custom op. This was once used by the OP_DESC macro, but is no longer: it has only been kept for compatibility, and should not be used.</source>
          <target state="translated">指定したカスタムオペランドの説明を返します。 これはかつては OP_DESC マクロで使われていましたが、現在は使われていません。</target>
        </trans-unit>
        <trans-unit id="c624b8d833a8785007a3024ede7440f3302ebcf8" translate="yes" xml:space="preserve">
          <source>Return the encoding corresponding to &lt;code&gt;=encoding&lt;/code&gt; , but only if the encoding was recognized and handled.</source>
          <target state="translated">&lt;code&gt;=encoding&lt;/code&gt; encodingに対応するエンコーディングを返しますが、エンコーディングが認識されて処理された場合のみです。</target>
        </trans-unit>
        <trans-unit id="286ac9177dd3b901d0e9a65f6c59d0b628135eb4" translate="yes" xml:space="preserve">
          <source>Return the encoding corresponding to &lt;code&gt;=encoding&lt;/code&gt;, but only if the encoding was recognized and handled.</source>
          <target state="translated">&lt;code&gt;=encoding&lt;/code&gt; encodingに対応するエンコーディングを返しますが、エンコーディングが認識されて処理された場合に限ります。</target>
        </trans-unit>
        <trans-unit id="8a8a1fa7c8359855ac34f947f892a45599c7b805" translate="yes" xml:space="preserve">
          <source>Return the exponent of $x as BigInt.</source>
          <target state="translated">x の指数を BigInt として返します。</target>
        </trans-unit>
        <trans-unit id="1af38af4442f68a254a70479cdb8a6508b1be742" translate="yes" xml:space="preserve">
          <source>Return the exponent of $x as a Math::BigInt.</source>
          <target state="translated">x の指数を Math::BigInt として返します。</target>
        </trans-unit>
        <trans-unit id="b123a2f9a5fbb5a8e843bffc94657f572853d43b" translate="yes" xml:space="preserve">
          <source>Return the file pointer. May be based on layers cached concept of position to avoid overhead.</source>
          <target state="translated">ファイルポインタを返します。オーバーヘッドを避けるために、位置のレイヤーキャッシュの概念に基づいている可能性があります。</target>
        </trans-unit>
        <trans-unit id="e4b8e0a203de9a2f8b0238606074a15dbdb144b6" translate="yes" xml:space="preserve">
          <source>Return the filename and filehandle as before except that the file is automatically removed when the program exits (dependent on $KEEP_ALL). Default is for the file to be removed if a file handle is requested and to be kept if the filename is requested. In a scalar context (where no filename is returned) the file is always deleted either (depending on the operating system) on exit or when it is closed (unless $KEEP_ALL is true when the temp file is created).</source>
          <target state="translated">プログラムが終了したときにファイルが自動的に削除されることを除いては、 以前と同様にファイル名とファイルハンドルを返します ($KEEP_ALL に依存します)。デフォルトでは、ファイルハンドルが要求された場合はファイルが削除され、 ファイル名が要求された場合は保持されます。スカラコンテキスト (ファイル名が返されない)では、ファイルは常に (オペレーティングシステムに依存して)終了時かクローズ時に削除されます (一時ファイルが作成されたときに $KEEP_ALL が真でない限り)。</target>
        </trans-unit>
        <trans-unit id="c5ffe224e48ba96441026249d004d9eab1c64a92" translate="yes" xml:space="preserve">
          <source>Return the first key in the hash.</source>
          <target state="translated">ハッシュの最初のキーを返します。</target>
        </trans-unit>
        <trans-unit id="cb3e931346eddc9e8b89e84c987ef41ee29ac911" translate="yes" xml:space="preserve">
          <source>Return the flags for the current compiling pad name at offset &lt;code&gt;po&lt;/code&gt; . Assumes a valid slot entry.</source>
          <target state="translated">現在のコンパイルパッド名のフラグをオフセット &lt;code&gt;po&lt;/code&gt; に返します。有効なスロットエントリを想定しています。</target>
        </trans-unit>
        <trans-unit id="3067aa0f1eee86807ab20515528e32d250d48310" translate="yes" xml:space="preserve">
          <source>Return the flags for the current compiling pad name at offset &lt;code&gt;po&lt;/code&gt;. Assumes a valid slot entry.</source>
          <target state="translated">オフセット &lt;code&gt;po&lt;/code&gt; にある現在のコンパイルパッド名のフラグを返します。有効なスロットエントリを想定しています。</target>
        </trans-unit>
        <trans-unit id="ca9c7b858ab6d79b29bc27e59d4583e4db63e5ff" translate="yes" xml:space="preserve">
          <source>Return the greatest common divisor of OBJ1 and OBJ2.</source>
          <target state="translated">OBJ1とOBJ2の最大公約数を返します。</target>
        </trans-unit>
        <trans-unit id="26f5555affd43554d24ba89d3257ccbb070f4798" translate="yes" xml:space="preserve">
          <source>Return the hexadecimal string representation of the number. The string must have a '0x' prefix.</source>
          <target state="translated">数値を 16 進数で表現した文字列を返します。文字列の先頭には '0x' を指定しなければなりません。</target>
        </trans-unit>
        <trans-unit id="cbcee9b1cab2e8dd8d43b279a1e7563466b53b6c" translate="yes" xml:space="preserve">
          <source>Return the integer value of an SV, doing any necessary string conversion. If &lt;code&gt;flags&lt;/code&gt; has the &lt;code&gt;SV_GMAGIC&lt;/code&gt; bit set, does an &lt;code&gt;mg_get()&lt;/code&gt; first. Normally used via the &lt;code&gt;SvIV(sv)&lt;/code&gt; and &lt;code&gt;SvIVx(sv)&lt;/code&gt; macros.</source>
          <target state="translated">必要な文字列変換を実行して、SVの整数値を返します。 &lt;code&gt;flags&lt;/code&gt; に &lt;code&gt;SV_GMAGIC&lt;/code&gt; ビットが設定されている場合、最初に &lt;code&gt;mg_get()&lt;/code&gt; を実行します。通常、 &lt;code&gt;SvIV(sv)&lt;/code&gt; および &lt;code&gt;SvIVx(sv)&lt;/code&gt; マクロを介して使用されます。</target>
        </trans-unit>
        <trans-unit id="78300a10673d49aac2c7d2638118529a8fd24084" translate="yes" xml:space="preserve">
          <source>Return the integer value of an SV, doing any necessary string conversion. If flags includes SV_GMAGIC, does an mg_get() first. Normally used via the &lt;code&gt;SvIV(sv)&lt;/code&gt; and &lt;code&gt;SvIVx(sv)&lt;/code&gt; macros.</source>
          <target state="translated">SVの整数値を返し、必要な文字列変換を行います。flagsにSV_GMAGICが含まれている場合、最初にmg_get（）を実行します。通常、 &lt;code&gt;SvIV(sv)&lt;/code&gt; および &lt;code&gt;SvIVx(sv)&lt;/code&gt; マクロを介して使用されます。</target>
        </trans-unit>
        <trans-unit id="20ac31cc084af9a481fcfed39a383ae11d974451" translate="yes" xml:space="preserve">
          <source>Return the integral and fractional parts of a floating-point number.</source>
          <target state="translated">浮動小数点数の積分部分と分数部分を返します。</target>
        </trans-unit>
        <trans-unit id="c524f4cda2007c3b8d1ad04c8509f204d1ef649e" translate="yes" xml:space="preserve">
          <source>Return the internal debugger pointer to the line last executed, and print out that line.</source>
          <target state="translated">最後に実行された行への内部デバッガポインタを返し、その行を出力します。</target>
        </trans-unit>
        <trans-unit id="39400de946f1aa3e9ec46b7f11233b69379632e6" translate="yes" xml:space="preserve">
          <source>Return the least common multiple of OBJ1 and OBJ2.</source>
          <target state="translated">OBJ1とOBJ2の最小公倍数を返します。</target>
        </trans-unit>
        <trans-unit id="2e078f55f1b0d95f9f0a40a5c03e2d9dd58e152f" translate="yes" xml:space="preserve">
          <source>Return the length of $x in digits for integer values.</source>
          <target state="translated">整数値の場合は、$x の長さを桁数で返します。</target>
        </trans-unit>
        <trans-unit id="f4ee3e3af109da20881554fc6a69449e5822abcf" translate="yes" xml:space="preserve">
          <source>Return the length of the UTF-8 char encoded string &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; in characters. Stops at &lt;code&gt;e&lt;/code&gt; (inclusive). If &lt;code&gt;e &amp;lt; s&lt;/code&gt; or if the scan would end up past &lt;code&gt;e&lt;/code&gt; , croaks.</source>
          <target state="translated">UTF-8 charでエンコードされた文字列 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; の長さを文字で返します。 &lt;code&gt;e&lt;/code&gt; （両端を含む）で停止します。もし &lt;code&gt;e &amp;lt; s&lt;/code&gt; またはスキャンが過去に終わるかの &lt;code&gt;e&lt;/code&gt; 、croaksを。</target>
        </trans-unit>
        <trans-unit id="55ba1cc60e9939952c43edce0b12715c2c47c113" translate="yes" xml:space="preserve">
          <source>Return the local address as a binary octet string</source>
          <target state="translated">ローカルアドレスをバイナリオクテット文字列で返します。</target>
        </trans-unit>
        <trans-unit id="a98197ef5c464a180db80d4a1b70572835f76fe4" translate="yes" xml:space="preserve">
          <source>Return the login id for the netrc entry</source>
          <target state="translated">netrcエントリのログインIDを返します。</target>
        </trans-unit>
        <trans-unit id="7abdbea3f8d8b5305d72c400a8a2fb4c507eeec1" translate="yes" xml:space="preserve">
          <source>Return the mantissa and exponent of a floating-point number.</source>
          <target state="translated">浮動小数点数の仮数と指数を返します。</target>
        </trans-unit>
        <trans-unit id="52e7ccc84edd95ffadc7b3008a78f1aa229500a2" translate="yes" xml:space="preserve">
          <source>Return the maximum POSIX realtime signal number available, or &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if no POSIX realtime signals are available.</source>
          <target state="translated">利用可能な最大のPOSIXリアルタイム信号数を返すか、利用可能なPOSIXリアルタイム信号がない場合は &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="eaa82f774605490ebc39939fe2780e5c4f6a1064" translate="yes" xml:space="preserve">
          <source>Return the maximum POSIX realtime signal number available, or &lt;code&gt;undef&lt;/code&gt; if no POSIX realtime signals are available.</source>
          <target state="translated">使用可能なPOSIXリアルタイム信号の最大数を返すか、POSIXリアルタイム信号が使用できない場合は &lt;code&gt;undef&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="d206901a611b7a41b98e11262c76eb9f221e16d5" translate="yes" xml:space="preserve">
          <source>Return the minimum POSIX realtime signal number available, or &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if no POSIX realtime signals are available.</source>
          <target state="translated">利用可能な最小のPOSIXリアルタイム信号番号を返すか、利用可能なPOSIXリアルタイム信号がない場合は &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="f63361af5a6058f537e1f634d519699fed5e945c" translate="yes" xml:space="preserve">
          <source>Return the minimum POSIX realtime signal number available, or &lt;code&gt;undef&lt;/code&gt; if no POSIX realtime signals are available.</source>
          <target state="translated">使用可能な最小のPOSIXリアルタイム信号番号を返すか、使用可能なPOSIXリアルタイム信号がない場合は &lt;code&gt;undef&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="3c5e970c469d7e98dcea1dc1cf1a83c3e0d4ae12" translate="yes" xml:space="preserve">
          <source>Return the name for a given custom op. This was once used by the &lt;code&gt;OP_NAME&lt;/code&gt; macro, but is no longer: it has only been kept for compatibility, and should not be used.</source>
          <target state="translated">指定されたカスタム操作の名前を返します。これはかつて &lt;code&gt;OP_NAME&lt;/code&gt; マクロによって使用されていましたが、現在は使用されていません。互換性のためにのみ保持されているため、使用しないでください。</target>
        </trans-unit>
        <trans-unit id="1636b01070f7a21a940b683cbf1b65b8f03329c2" translate="yes" xml:space="preserve">
          <source>Return the name for a given custom op. This was once used by the OP_NAME macro, but is no longer: it has only been kept for compatibility, and should not be used.</source>
          <target state="translated">これは、かつては OP_NAME マクロで使用されていましたが、現在は使用されていません。</target>
        </trans-unit>
        <trans-unit id="5a9d9ac8a27b36e016655a4f66c042a7982e205f" translate="yes" xml:space="preserve">
          <source>Return the name of a temporary file in the specified directory using a prefix. The file is guaranteed not to exist at the time the function was called, but such guarantees are good for one clock tick only. Always use the proper form of &lt;code&gt;sysopen&lt;/code&gt; with &lt;code&gt;O_CREAT | O_EXCL&lt;/code&gt; if you must open such a filename.</source>
          <target state="translated">プレフィックスを使用して、指定されたディレクトリ内の一時ファイルの名前を返します。このファイルは、関数が呼び出された時点では存在しないことが保証されていますが、このような保証は1クロックティックに対してのみ有効です。 &lt;code&gt;O_CREAT | O_EXCL&lt;/code&gt; &lt;code&gt;sysopen&lt;/code&gt; 常に適切な形式のsysopenを使用してください。そのようなファイル名を開く必要がある場合はO_EXCL。</target>
        </trans-unit>
        <trans-unit id="5b4a9e25a270f75917473bbf152107544b56c883" translate="yes" xml:space="preserve">
          <source>Return the name of a temporary file in the specified directory using a prefix. The file is guaranteed not to exist at the time the function was called, but such guarantees are good for one clock tick only. Always use the proper form of C</source>
          <target state="translated">指定したディレクトリにあるテンポラリファイルの名前を接頭辞で返します。このファイルは、関数が呼び出された時点では存在しないことが保証されていますが、この保証は 1 クロックティックの間だけ有効です。の適切な形式を使用してください。</target>
        </trans-unit>
        <trans-unit id="3ba16b2b97049c4a659a40c354387eb93cbeb5af" translate="yes" xml:space="preserve">
          <source>Return the name of the current compiling pad name at offset &lt;code&gt;po&lt;/code&gt; . Assumes a valid slot entry.</source>
          <target state="translated">現在のコンパイルパッド名をオフセット &lt;code&gt;po&lt;/code&gt; に返します。有効なスロットエントリを想定します。</target>
        </trans-unit>
        <trans-unit id="289721f19b79a105de6afc1002459094dbb86597" translate="yes" xml:space="preserve">
          <source>Return the name of the current compiling pad name at offset &lt;code&gt;po&lt;/code&gt;. Assumes a valid slot entry.</source>
          <target state="translated">オフセット &lt;code&gt;po&lt;/code&gt; にある現在のコンパイルパッド名の名前を返します。有効なスロットエントリを想定しています。</target>
        </trans-unit>
        <trans-unit id="a033252f0cddc65cf92a783d450048bfe503245e" translate="yes" xml:space="preserve">
          <source>Return the name of the provided OP. For core ops this looks up the name from the op_type; for custom ops from the op_ppaddr.</source>
          <target state="translated">指定した OP の名前を返します。コアオプの場合は op_type から、カスタムオプの場合は op_ppaddr から名前を検索します。</target>
        </trans-unit>
        <trans-unit id="4bf700f08ee3f022ac28c6d6ad550913448dc57f" translate="yes" xml:space="preserve">
          <source>Return the name of the temporary directory associated with this object (if the object was created using the &quot;newdir&quot; constructor).</source>
          <target state="translated">このオブジェクトに関連付けられた一時ディレクトリの名前を返します (オブジェクトが &quot;newdir&quot; コンストラクタを使用して作成された場合)。</target>
        </trans-unit>
        <trans-unit id="e43849324c1a533bb5838dd6a99118c7f4bb297c" translate="yes" xml:space="preserve">
          <source>Return the name of the temporary file associated with this object (if the object was created using the &quot;new&quot; constructor).</source>
          <target state="translated">このオブジェクトに関連付けられた一時ファイルの名前を返します (オブジェクトが &quot;new&quot; コンストラクタを使用して作成された場合)。</target>
        </trans-unit>
        <trans-unit id="7d5481810737a34ca22e5228c3ffc851c3f7849d" translate="yes" xml:space="preserve">
          <source>Return the next available job as &lt;a href=&quot;TAP::Parser::Scheduler::Job&quot;&gt;TAP::Parser::Scheduler::Job&lt;/a&gt; object or &lt;code&gt;undef&lt;/code&gt; if none are available. Returns a &lt;a href=&quot;TAP::Parser::Scheduler::Spinner&quot;&gt;TAP::Parser::Scheduler::Spinner&lt;/a&gt; if the scheduler still has pending jobs but none are available to run right now.</source>
          <target state="translated">次に使用可能なジョブを&lt;a href=&quot;TAP::Parser::Scheduler::Job&quot;&gt;TAP :: Parser :: Scheduler :: Job&lt;/a&gt;オブジェクトとして返すか、使用可能なジョブがない場合は &lt;code&gt;undef&lt;/code&gt; を返します。&lt;a href=&quot;TAP::Parser::Scheduler::Spinner&quot;&gt;スケジューラーに&lt;/a&gt;保留中のジョブがまだあるが、現在実行できるジョブがない場合は、TAP :: Parser :: Scheduler :: Spinnerを返します。</target>
        </trans-unit>
        <trans-unit id="02162d8694654f1de91669f0a540d00b7e0ea019" translate="yes" xml:space="preserve">
          <source>Return the next available job as &lt;a href=&quot;scheduler/job&quot;&gt;TAP::Parser::Scheduler::Job&lt;/a&gt; object or &lt;code&gt;&lt;a href=&quot;../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if none are available. Returns a &lt;a href=&quot;scheduler/spinner&quot;&gt;TAP::Parser::Scheduler::Spinner&lt;/a&gt; if the scheduler still has pending jobs but none are available to run right now.</source>
          <target state="translated">次の使用可能なジョブを&lt;a href=&quot;scheduler/job&quot;&gt;TAP :: Parser :: Scheduler :: Job&lt;/a&gt;オブジェクトとして返すか、使用可能なジョブがない場合は &lt;code&gt;&lt;a href=&quot;../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; を返します。スケジューラにまだ保留中のジョブがあるが、現在実行できるジョブがない場合、&lt;a href=&quot;scheduler/spinner&quot;&gt;TAP :: Parser :: Scheduler :: Spinnerを&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="b08468342f9e7382ad73acce7a48a0ae2c5d49c4" translate="yes" xml:space="preserve">
          <source>Return the next character from the file, or undef if none remain.</source>
          <target state="translated">ファイルから次の文字を返します。</target>
        </trans-unit>
        <trans-unit id="dfadaa7525697a6600ade6dc897096f39cea986e" translate="yes" xml:space="preserve">
          <source>Return the next character, or undef if none remain.</source>
          <target state="translated">次の文字を返すか、何も残っていない場合は undef を返します。</target>
        </trans-unit>
        <trans-unit id="feda6626aed77511c6b3df7b02b5d54f5d9359f6" translate="yes" xml:space="preserve">
          <source>Return the next key in the hash.</source>
          <target state="translated">ハッシュの次のキーを返します。</target>
        </trans-unit>
        <trans-unit id="9efe519efe01a23e51434ba5d2dca6b1f2bbfa18" translate="yes" xml:space="preserve">
          <source>Return the next line from the file, or undef on end of string. Can safely be called in an array context. Currently ignores $/ ($INPUT_RECORD_SEPARATOR or $RS when &lt;a href=&quot;../english&quot;&gt;English&lt;/a&gt; is in use) and treats lines as delimited by &quot;\n&quot;.</source>
          <target state="translated">ファイルから次の行を返すか、文字列の最後でundefを返します。配列コンテキストで安全に呼び出すことができます。現在$ /（&lt;a href=&quot;../english&quot;&gt;英語&lt;/a&gt;が使用されている場合は$ INPUT_RECORD_SEPARATORまたは$ RS ）を無視し、行を「\ n」で区切られたものとして扱います。</target>
        </trans-unit>
        <trans-unit id="f03f894c2ba5e0e4db02f98a9337797d3eb8ea02" translate="yes" xml:space="preserve">
          <source>Return the next line from the file, or undef on end of string. Can safely be called in an array context. Currently ignores $/ ($INPUT_RECORD_SEPARATOR or $RS when &lt;a href=&quot;english&quot;&gt;English&lt;/a&gt; is in use) and treats lines as delimited by &quot;\n&quot;.</source>
          <target state="translated">ファイルから次の行を返すか、文字列の終わりでundefを返します。配列コンテキストで安全に呼び出すことができます。現在、$ /（&lt;a href=&quot;english&quot;&gt;英語&lt;/a&gt;が使用されている場合は$ INPUT_RECORD_SEPARATORまたは$ RS ）を無視し、行を「\ n」で区切られたものとして扱います。</target>
        </trans-unit>
        <trans-unit id="fda8221116775cc4f1f6554deb90694030736981" translate="yes" xml:space="preserve">
          <source>Return the next line, or undef on end of string. Can safely be called in an array context. Currently, lines are delimited by &quot;\n&quot;.</source>
          <target state="translated">次の行を返すか、文字列の最後に undef を返します。配列コンテキストで安全に呼び出すことができます。現在のところ、行は &quot;\n&quot; で区切られています。</target>
        </trans-unit>
        <trans-unit id="2e145c8fb25242c9cc027a20f826e642ab2b2e75" translate="yes" xml:space="preserve">
          <source>Return the next op in a depth-first traversal of the op tree, returning NULL when the traversal is complete.</source>
          <target state="translated">opツリーの深度優先探索で次のopを返し、探索が完了したらNULLを返します。</target>
        </trans-unit>
        <trans-unit id="7e329a4fb8fec954dffa0699754eef5284855df1" translate="yes" xml:space="preserve">
          <source>Return the num value of an SV, doing any necessary string or integer conversion. If &lt;code&gt;flags&lt;/code&gt; has the &lt;code&gt;SV_GMAGIC&lt;/code&gt; bit set, does an &lt;code&gt;mg_get()&lt;/code&gt; first. Normally used via the &lt;code&gt;SvNV(sv)&lt;/code&gt; and &lt;code&gt;SvNVx(sv)&lt;/code&gt; macros.</source>
          <target state="translated">必要な文字列または整数の変換を実行して、SVのnum値を返します。 &lt;code&gt;flags&lt;/code&gt; に &lt;code&gt;SV_GMAGIC&lt;/code&gt; ビットが設定されている場合、最初に &lt;code&gt;mg_get()&lt;/code&gt; を実行します。通常、 &lt;code&gt;SvNV(sv)&lt;/code&gt; および &lt;code&gt;SvNVx(sv)&lt;/code&gt; マクロを介して使用されます。</target>
        </trans-unit>
        <trans-unit id="8c2510580b82e526e2c44344deb3c0f42c5dcd23" translate="yes" xml:space="preserve">
          <source>Return the num value of an SV, doing any necessary string or integer conversion. If flags includes SV_GMAGIC, does an mg_get() first. Normally used via the &lt;code&gt;SvNV(sv)&lt;/code&gt; and &lt;code&gt;SvNVx(sv)&lt;/code&gt; macros.</source>
          <target state="translated">SVのnum値を返し、必要な文字列または整数の変換を行います。flagsにSV_GMAGICが含まれている場合、最初にmg_get（）を実行します。通常、 &lt;code&gt;SvNV(sv)&lt;/code&gt; および &lt;code&gt;SvNVx(sv)&lt;/code&gt; マクロを介して使用されます。</target>
        </trans-unit>
        <trans-unit id="a997a1ffdb6dd3ce7910823fc3237fe33197cb4a" translate="yes" xml:space="preserve">
          <source>Return the number of bytes left to be read in the current buffer.</source>
          <target state="translated">現在のバッファに読み込まれる残りのバイト数を返します。</target>
        </trans-unit>
        <trans-unit id="cc25533fdf214ffc53e04458cec2a628e4850dd6" translate="yes" xml:space="preserve">
          <source>Return the number of bytes that last &lt;code&gt;Fill()&lt;/code&gt; put in the buffer.</source>
          <target state="translated">最後に &lt;code&gt;Fill()&lt;/code&gt; がバッファに入れたバイト数を返します。</target>
        </trans-unit>
        <trans-unit id="3415ff5c3118088729d890b8e343a722f1c7ca32" translate="yes" xml:space="preserve">
          <source>Return the number of trailing decimal zeros. The output is a Perl scalar.</source>
          <target state="translated">末尾の10進数の0の数を返します。出力はPerlのスカラです。</target>
        </trans-unit>
        <trans-unit id="84290dcbcb02fb20862f31301933a3daa2675852" translate="yes" xml:space="preserve">
          <source>Return the numeric form of the local address as a textual representation</source>
          <target state="translated">ローカルアドレスの数値形式をテキスト表現として返します。</target>
        </trans-unit>
        <trans-unit id="b5c3e2a490d617a45b2e394a4d5f62ddf0c49f4d" translate="yes" xml:space="preserve">
          <source>Return the numeric form of the local port number</source>
          <target state="translated">ローカルポート番号の数値形式を返します。</target>
        </trans-unit>
        <trans-unit id="3741c90e07dc257743922694a2988e6d6450fda5" translate="yes" xml:space="preserve">
          <source>Return the numeric form of the peer address as a textual representation</source>
          <target state="translated">相手アドレスの数値形式をテキスト表現として返します。</target>
        </trans-unit>
        <trans-unit id="074f1e4d4a4cf00d984929ff9f4e0d1c08dbbbc7" translate="yes" xml:space="preserve">
          <source>Return the numeric form of the peer port number</source>
          <target state="translated">ピアポート番号の数値形式を返します。</target>
        </trans-unit>
        <trans-unit id="53d6332789548408c852117d2287bf3496bf502b" translate="yes" xml:space="preserve">
          <source>Return the octal string representation of the number. The string must have a '0x' prefix.</source>
          <target state="translated">数値を 8 進数で表現した文字列を返します。文字列の前には '0x' を指定しなければなりません。</target>
        </trans-unit>
        <trans-unit id="0af150d92ccff6cf47986722b93faa80a783bef2" translate="yes" xml:space="preserve">
          <source>Return the parsed YAML data for this result</source>
          <target state="translated">この結果の解析されたYAMLデータを返します。</target>
        </trans-unit>
        <trans-unit id="6936f656b1022b3d515521882aee4f8e6b40cc55" translate="yes" xml:space="preserve">
          <source>Return the password for the netrc entry</source>
          <target state="translated">netrc エントリのパスワードを返します。</target>
        </trans-unit>
        <trans-unit id="9bb796ccdb3793f7bfc398ee1de19600391fafef" translate="yes" xml:space="preserve">
          <source>Return the peer address as a binary octet string</source>
          <target state="translated">ピアアドレスをバイナリオクテット文字列で返します。</target>
        </trans-unit>
        <trans-unit id="6ee6509326cfe062105e077d56cad48771864d0d" translate="yes" xml:space="preserve">
          <source>Return the port number for the socket on the peer host.</source>
          <target state="translated">ピアホスト上のソケットのポート番号を返します。</target>
        </trans-unit>
        <trans-unit id="bae0c64b302636d3436b0efcbbac0c778918a8b2" translate="yes" xml:space="preserve">
          <source>Return the port number that the socket is using on the local host</source>
          <target state="translated">ローカルホストでソケットが使用しているポート番号を返します。</target>
        </trans-unit>
        <trans-unit id="d946a0a69c75f845e85b98b44929a152b598ea81" translate="yes" xml:space="preserve">
          <source>Return the positive square root of EXPR. If EXPR is omitted, uses &lt;a href=&quot;perlvar#%24_&quot;&gt;&lt;code&gt;$_&lt;/code&gt;&lt;/a&gt;. Works only for non-negative operands unless you've loaded the &lt;a href=&quot;Math::Complex&quot;&gt;&lt;code&gt;Math::Complex&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">EXPRの正の平方根を返します。EXPRを省略した場合は、&lt;a href=&quot;perlvar#%24_&quot;&gt; &lt;code&gt;$_&lt;/code&gt; &lt;/a&gt;使用します。&lt;a href=&quot;Math::Complex&quot;&gt; &lt;code&gt;Math::Complex&lt;/code&gt; &lt;/a&gt;モジュールをロードしていない限り、負でないオペランドに対してのみ機能します。</target>
        </trans-unit>
        <trans-unit id="69ae67650c145a18aadf88178cd2eaf271f56d73" translate="yes" xml:space="preserve">
          <source>Return the positive square root of EXPR. If EXPR is omitted, uses &lt;code&gt;$_&lt;/code&gt; . Works only for non-negative operands unless you've loaded the &lt;code&gt;Math::Complex&lt;/code&gt; module.</source>
          <target state="translated">EXPRの正の平方根を返します。EXPRが省略されている場合は、 &lt;code&gt;$_&lt;/code&gt; 使用します。 &lt;code&gt;Math::Complex&lt;/code&gt; モジュールをロードしていない限り、負でないオペランドに対してのみ機能します。</target>
        </trans-unit>
        <trans-unit id="89ca398524ee97aed064f109c0014774b8467f09" translate="yes" xml:space="preserve">
          <source>Return the raw YAMLish source from the most recent &lt;code&gt;&lt;a href=&quot;../../../functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">直近の &lt;code&gt;&lt;a href=&quot;../../../functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt; から生のYAMLishソースを返します。</target>
        </trans-unit>
        <trans-unit id="f0513c9378f747cf570f5e7d7be8c8c61d18c228" translate="yes" xml:space="preserve">
          <source>Return the raw YAMLish source from the most recent &lt;code&gt;read&lt;/code&gt;.</source>
          <target state="translated">最新の &lt;code&gt;read&lt;/code&gt; から生のYAMLishソースを返します。</target>
        </trans-unit>
        <trans-unit id="de1a7ced0f81af093a8f41863ef2c71d5d568215" translate="yes" xml:space="preserve">
          <source>Return the remaining time in the interval timer specified by &lt;code&gt;$which&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;$which&lt;/code&gt; 指定されたインターバルタイマーの残り時間を返します。</target>
        </trans-unit>
        <trans-unit id="87843e54625e03aa350ffd71cf99d774264634cf" translate="yes" xml:space="preserve">
          <source>Return the remaining time in the interval timer specified by &lt;code&gt;$which&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$which&lt;/code&gt; 指定されたインターバルタイマーの残り時間を返します。</target>
        </trans-unit>
        <trans-unit id="675b76f8367988d85cd9b322d1c2a890473db910" translate="yes" xml:space="preserve">
          <source>Return the resolved name of the local address</source>
          <target state="translated">解決されたローカルアドレスの名前を返します。</target>
        </trans-unit>
        <trans-unit id="bec7a2954cfcd42edef0d1ff425a4307b1d74d50" translate="yes" xml:space="preserve">
          <source>Return the resolved name of the local port number</source>
          <target state="translated">ローカルポート番号の解決済みの名前を返します。</target>
        </trans-unit>
        <trans-unit id="887f83df7ab7110d8c1acbb87357ce3cba9db2e9" translate="yes" xml:space="preserve">
          <source>Return the resolved name of the peer address</source>
          <target state="translated">解決されたピアアドレスの名前を返します。</target>
        </trans-unit>
        <trans-unit id="207af2743371dc8e9c6e5aba0ef0fc0ab125965a" translate="yes" xml:space="preserve">
          <source>Return the resolved name of the peer port number</source>
          <target state="translated">解決したピアポート番号の名前を返します。</target>
        </trans-unit>
        <trans-unit id="f5c943ca1e7b87d7eb64817e23809542799e98fe" translate="yes" xml:space="preserve">
          <source>Return the sever's connection banner</source>
          <target state="translated">切断機の接続バナーを返す</target>
        </trans-unit>
        <trans-unit id="4e9f81c15dc0ff4925fd465d43570e1f6c64719d" translate="yes" xml:space="preserve">
          <source>Return the sign, of $x, meaning either &lt;code&gt;+&lt;/code&gt; , &lt;code&gt;-&lt;/code&gt; , &lt;code&gt;-inf&lt;/code&gt; , &lt;code&gt;+inf&lt;/code&gt; or NaN.</source>
          <target state="translated">いずれかを意味し、$ Xの符号を返します &lt;code&gt;+&lt;/code&gt; 、 &lt;code&gt;-&lt;/code&gt; 、 &lt;code&gt;-inf&lt;/code&gt; 、 &lt;code&gt;+inf&lt;/code&gt; またはNaNを。</target>
        </trans-unit>
        <trans-unit id="10bd2e0795673d266230bfafe2a24a56dc6065bb" translate="yes" xml:space="preserve">
          <source>Return the sign, of $x, meaning either &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;-inf&lt;/code&gt;, &lt;code&gt;+inf&lt;/code&gt; or NaN.</source>
          <target state="translated">いずれかを意味し、$ Xの符号を返します &lt;code&gt;+&lt;/code&gt; 、 &lt;code&gt;-&lt;/code&gt; 、 &lt;code&gt;-inf&lt;/code&gt; 、 &lt;code&gt;+inf&lt;/code&gt; またはNaNを。</target>
        </trans-unit>
        <trans-unit id="a68dac6ce8097ce942d0b9d9018e95b0ed056421" translate="yes" xml:space="preserve">
          <source>Return the signed bitwise and.</source>
          <target state="translated">符号付きビット単位と符号付きビット単位を返します。</target>
        </trans-unit>
        <trans-unit id="92027d6c5195925ff1e04f4b468405bed61a4ad7" translate="yes" xml:space="preserve">
          <source>Return the signed bitwise exclusive or.</source>
          <target state="translated">符号付きビット単位の排他的または符号付きのビットを返します。</target>
        </trans-unit>
        <trans-unit id="8aaddf7d04671db3e0e27536bf4bdbd8fdc46681" translate="yes" xml:space="preserve">
          <source>Return the signed bitwise or.</source>
          <target state="translated">符号付きのビット単位またはビット単位の値を返します。</target>
        </trans-unit>
        <trans-unit id="fdcefa87799574af1010b6f5a87a9651f3b44f50" translate="yes" xml:space="preserve">
          <source>Return the signed mantissa of $x as BigInt.</source>
          <target state="translated">x の符号付きマンティッサを BigInt として返します。</target>
        </trans-unit>
        <trans-unit id="79310ad4b822f9de8b442ed576a2f46794110944" translate="yes" xml:space="preserve">
          <source>Return the signed mantissa of $x as a Math::BigInt.</source>
          <target state="translated">x の符号付き仮数を Math::BigInt として返します。</target>
        </trans-unit>
        <trans-unit id="7f626cb13b8df3915be47a73eb5046f1db65dc55" translate="yes" xml:space="preserve">
          <source>Return the square root of the object, truncated to integer.</source>
          <target state="translated">オブジェクトの平方根を返します。</target>
        </trans-unit>
        <trans-unit id="c947b24354fbf3d8637c5d76e520b817c15cb81e" translate="yes" xml:space="preserve">
          <source>Return the stash associated with an &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; variable. Assumes the slot entry is a valid &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; lexical.</source>
          <target state="translated">関連付けられているスタッシュ戻る &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; 変数を。スロットエントリが有効なレキシカルであると仮定し &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d7843a84d97565c2cb1d8275d9a55252eeba2fc3" translate="yes" xml:space="preserve">
          <source>Return the stash associated with an &lt;code&gt;our&lt;/code&gt; variable. Assumes the slot entry is a valid &lt;code&gt;our&lt;/code&gt; lexical.</source>
          <target state="translated">関連付けられているスタッシュ戻る &lt;code&gt;our&lt;/code&gt; 変数を。スロットエントリが有効なレキシカルであると想定し &lt;code&gt;our&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3642aef1d3ef36347beebbb348941672ea0fe04e" translate="yes" xml:space="preserve">
          <source>Return the status value.</source>
          <target state="translated">ステータス値を返します。</target>
        </trans-unit>
        <trans-unit id="ad259b3229b3f03ad7a05da79959b9bdfcb98992" translate="yes" xml:space="preserve">
          <source>Return the type (stash) of the current compiling pad name at offset &lt;code&gt;po&lt;/code&gt; . Must be a valid name. Returns null if not typed.</source>
          <target state="translated">現在のコンパイルパッド名のタイプ（スタッシュ）をオフセット &lt;code&gt;po&lt;/code&gt; に返します。有効な名前である必要があります。入力しない場合はnullを返します。</target>
        </trans-unit>
        <trans-unit id="a3dfd348809daead6fc32d328dad1cac345d58c0" translate="yes" xml:space="preserve">
          <source>Return the type (stash) of the current compiling pad name at offset &lt;code&gt;po&lt;/code&gt;. Must be a valid name. Returns null if not typed.</source>
          <target state="translated">現在のコンパイルパッド名のタイプ（スタッシュ）をオフセット &lt;code&gt;po&lt;/code&gt; に返します。有効な名前である必要があります。入力しない場合はnullを返します。</target>
        </trans-unit>
        <trans-unit id="dba363cc65824433e926e3b44c5e85f0cb35c7ee" translate="yes" xml:space="preserve">
          <source>Return the unsigned integer value of an SV, doing any necessary string conversion. If &lt;code&gt;flags&lt;/code&gt; has the &lt;code&gt;SV_GMAGIC&lt;/code&gt; bit set, does an &lt;code&gt;mg_get()&lt;/code&gt; first. Normally used via the &lt;code&gt;SvUV(sv)&lt;/code&gt; and &lt;code&gt;SvUVx(sv)&lt;/code&gt; macros.</source>
          <target state="translated">必要な文字列変換を実行して、SVの符号なし整数値を返します。 &lt;code&gt;flags&lt;/code&gt; に &lt;code&gt;SV_GMAGIC&lt;/code&gt; ビットが設定されている場合、最初に &lt;code&gt;mg_get()&lt;/code&gt; を実行します。通常、 &lt;code&gt;SvUV(sv)&lt;/code&gt; および &lt;code&gt;SvUVx(sv)&lt;/code&gt; マクロを介して使用されます。</target>
        </trans-unit>
        <trans-unit id="6e1fd917f067439cdaa992595eba43fee3a95d2d" translate="yes" xml:space="preserve">
          <source>Return the unsigned integer value of an SV, doing any necessary string conversion. If flags includes SV_GMAGIC, does an mg_get() first. Normally used via the &lt;code&gt;SvUV(sv)&lt;/code&gt; and &lt;code&gt;SvUVx(sv)&lt;/code&gt; macros.</source>
          <target state="translated">SVの符号なし整数値を返し、必要な文字列変換を行います。flagsにSV_GMAGICが含まれている場合、最初にmg_get（）を実行します。通常、 &lt;code&gt;SvUV(sv)&lt;/code&gt; および &lt;code&gt;SvUVx(sv)&lt;/code&gt; マクロを介して使用されます。</target>
        </trans-unit>
        <trans-unit id="9accb2f2600a64c2a60c9adc4585784021b20200" translate="yes" xml:space="preserve">
          <source>Return to the Mytest directory and add the following code to the end of Mytest.xs:</source>
          <target state="translated">Mytestディレクトリに戻り、Mytest.xsの最後に以下のコードを追加します。</target>
        </trans-unit>
        <trans-unit id="16e157ca958c0aa92419c19fe9f34acb7d3e3a49" translate="yes" xml:space="preserve">
          <source>Return true if $x has a denominator of 1 (e.g. no fraction parts), otherwise false. Please note that '-inf', 'inf' and 'NaN' aren't integer.</source>
          <target state="translated">x の分母が 1 の場合 (例えば、分数部分がない場合)は true を返し、そうでない場合は false を返します。'-inf'、'inf' および 'NaN' は整数ではないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="3e5085efd71ecbbc4c4f0d5c30df6dcd9453540b" translate="yes" xml:space="preserve">
          <source>Return true if $x is even, otherwise false.</source>
          <target state="translated">x が偶数の場合は true を返し、そうでない場合は false を返します。</target>
        </trans-unit>
        <trans-unit id="5a98829c6119b41b7da46ad43316dccea81b06d6" translate="yes" xml:space="preserve">
          <source>Return true if $x is exactly one, otherwise false.</source>
          <target state="translated">xが正確に1であれば真を返し、そうでなければ偽を返します。</target>
        </trans-unit>
        <trans-unit id="163f49b8f3bbe71386313ef1a2133dfbdc4d8126" translate="yes" xml:space="preserve">
          <source>Return true if $x is exactly zero, otherwise false.</source>
          <target state="translated">x が正確にゼロであれば真を返し、そうでなければ偽を返します。</target>
        </trans-unit>
        <trans-unit id="32d892363c3a52bfb8993dc9d140a02c83af3833" translate="yes" xml:space="preserve">
          <source>Return true if $x is negative (smaller than zero), otherwise false. Please note that '-inf' is also negative, while 'NaN' and '+inf' aren't.</source>
          <target state="translated">x が負の値 (ゼロよりも小さい値)であれば真を返し、そうでなければ偽を返します。'-inf' は負の値であり、'NaN' および '+inf' は負の値ではないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="87f25e6b0d7a878983f2344572ab5eda7cad6429" translate="yes" xml:space="preserve">
          <source>Return true if $x is odd, otherwise false.</source>
          <target state="translated">x が奇数の場合は真を返し、そうでない場合は偽を返します。</target>
        </trans-unit>
        <trans-unit id="45c48544c3d0d53ce836775f04289df45ce6bdab" translate="yes" xml:space="preserve">
          <source>Return true if $x is positive (greater than or equal to zero), otherwise false. Please note that '+inf' is also positive, while 'NaN' and '-inf' aren't.</source>
          <target state="translated">x が正の場合 (ゼロ以上)は true を返し、そうでない場合は false を返します。'+inf' は正の値であり、'NaN' および '-inf' は正の値ではないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="8a6297003ef0b9ffe9635e65ad2f17339612fa0b" translate="yes" xml:space="preserve">
          <source>Return true if &lt;code&gt;$var&lt;/code&gt; is tainted.</source>
          <target state="translated">&lt;code&gt;$var&lt;/code&gt; が汚染されている場合はtrueを返します。</target>
        </trans-unit>
        <trans-unit id="d3c512c943e1db417a0823b6edf8178852e9cfaa" translate="yes" xml:space="preserve">
          <source>Return true if all the tests passed and no parse errors were detected.</source>
          <target state="translated">すべてのテストに合格し、パースエラーが検出されなかった場合は true を返します。</target>
        </trans-unit>
        <trans-unit id="e7b9d0100742029e7ba236470903f3ba2036c8e3" translate="yes" xml:space="preserve">
          <source>Return true if the argument is a</source>
          <target state="translated">引数が</target>
        </trans-unit>
        <trans-unit id="730216ef2c3fed22da3e5fd25b9641b48475824e" translate="yes" xml:space="preserve">
          <source>Return true if the time returned by get_time is high resolution (i.e. if Time::HiRes is available).</source>
          <target state="translated">get_timeによって返された時間が高解像度であれば(つまりTime::HiResが利用可能であれば)trueを返します。</target>
        </trans-unit>
        <trans-unit id="232f3db04c4faa620bfbfc11fd3689a472ef9881" translate="yes" xml:space="preserve">
          <source>Return value</source>
          <target state="translated">戻り値</target>
        </trans-unit>
        <trans-unit id="f9ab1cc2f5a6f7fa7cf3334ca9e0156816d4a68e" translate="yes" xml:space="preserve">
          <source>Return value: path to the written file.</source>
          <target state="translated">戻り値:書き込まれたファイルのパス。</target>
        </trans-unit>
        <trans-unit id="aa37c23df8c6e1a5476cb9bfe9992c9d3632c327" translate="yes" xml:space="preserve">
          <source>Return values (especially for device and inode) may be bogus. (Win32)</source>
          <target state="translated">(特に device と inode の)返り値が偽物である可能性があります。(Win32)</target>
        </trans-unit>
        <trans-unit id="2ee45f810b0d5a87b3109e7a98dc00ce2ad95d67" translate="yes" xml:space="preserve">
          <source>Return values and Errors</source>
          <target state="translated">戻り値とエラー</target>
        </trans-unit>
        <trans-unit id="60b4a13548e07b2bc054b98557e39378fb1b5195" translate="yes" xml:space="preserve">
          <source>Return values are always objects, strings, Perl scalars, or true/false for comparison routines.</source>
          <target state="translated">返り値は常にオブジェクト、文字列、Perlのスカラ、比較ルーチンのためのtrue/falseです。</target>
        </trans-unit>
        <trans-unit id="a9b10bedc7cb1c3e14966d1a3819d76dfc9e6417" translate="yes" xml:space="preserve">
          <source>Return your results in the most generic form possible and allow the user to choose how to use them. The most generic form possible is usually a Perl data structure which can then be used to generate a text report, HTML, XML, a database query, or whatever else your users require.</source>
          <target state="translated">可能な限り一般的な形式で結果を返し、ユーザーが使用方法を選択できるようにします。可能な最も一般的な形式は、通常はPerlのデータ構造で、テキストレポート、HTML、XML、データベースクエリ、その他ユーザーが必要とするものを生成するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="38b4b2f7afdfb729ac6e2e26257ac6ce6b48a054" translate="yes" xml:space="preserve">
          <source>Returned Data</source>
          <target state="translated">返されたデータ</target>
        </trans-unit>
        <trans-unit id="aa0028982d694bb71d734c691957ac561c5d4e9c" translate="yes" xml:space="preserve">
          <source>Returned value: A LIST &lt;code&gt;($serialized, $ref1, $ref2, ...)&lt;/code&gt; where $serialized is the serialized form to be used, and the optional $ref1, $ref2, etc... are extra references that you wish to let the Storable engine serialize.</source>
          <target state="translated">戻り値：LIST &lt;code&gt;($serialized, $ref1, $ref2, ...)&lt;/code&gt; ここで、$ serializedは使用されるシリアル化された形式で、オプションの$ ref1、$ ref2などは、必要な追加の参照ですStorableエンジンをシリアル化します。</target>
        </trans-unit>
        <trans-unit id="ce1c2ea608cbde5f032e96aa31f665bfe3cb479f" translate="yes" xml:space="preserve">
          <source>Returned value: none.</source>
          <target state="translated">返された値:なし。</target>
        </trans-unit>
        <trans-unit id="8433c4af8bada7af974e6de0632146d31d37a1fc" translate="yes" xml:space="preserve">
          <source>Returned value: object of type &lt;code&gt;class&lt;/code&gt;</source>
          <target state="translated">戻り値： &lt;code&gt;class&lt;/code&gt; 型のオブジェクト</target>
        </trans-unit>
        <trans-unit id="2826cc60681effcff36990251137b663bfeb2b44" translate="yes" xml:space="preserve">
          <source>Returning Data from Perl via the Parameter List</source>
          <target state="translated">パラメータリストを使ってPerlからデータを返す</target>
        </trans-unit>
        <trans-unit id="03bd8e1f4409ce51cb32918ef08262dbb9855b2f" translate="yes" xml:space="preserve">
          <source>Returning SVs, AVs and HVs through RETVAL</source>
          <target state="translated">RETVALでSV、AV、HVを返却</target>
        </trans-unit>
        <trans-unit id="5da972aed07dfd92c54f5758d5b006f1b7bd67ff" translate="yes" xml:space="preserve">
          <source>Returning Undef And Empty Lists</source>
          <target state="translated">デフォルトではない空のリストを返す</target>
        </trans-unit>
        <trans-unit id="586202e539edf3a25cd03377d1d0fa29e01333d8" translate="yes" xml:space="preserve">
          <source>Returning a List in Scalar Context</source>
          <target state="translated">スカラーコンテキストでリストを返す</target>
        </trans-unit>
        <trans-unit id="7bbd7e11b07ff21c3115805bbbee9f1ad48a03e0" translate="yes" xml:space="preserve">
          <source>Returning a List in a Scalar Context</source>
          <target state="translated">スカラーコンテキストでリストを返す</target>
        </trans-unit>
        <trans-unit id="6d881f622789472ae5074294a445f1a5e10a46db" translate="yes" xml:space="preserve">
          <source>Returning a List of Values</source>
          <target state="translated">値のリストを返す</target>
        </trans-unit>
        <trans-unit id="47f8e7e7825fe920d32a8e36d5ca8d5824e35776" translate="yes" xml:space="preserve">
          <source>Returning a Scalar</source>
          <target state="translated">スカラーを返す</target>
        </trans-unit>
        <trans-unit id="70e0a3e67d16c3e259eea9ef950eb9bffb32921e" translate="yes" xml:space="preserve">
          <source>Returning a list in a scalar context</source>
          <target state="translated">スカラコンテキストでリストを返す</target>
        </trans-unit>
        <trans-unit id="f076044dab2ccb151f04e64c4086ddafdf56c6db" translate="yes" xml:space="preserve">
          <source>Returning a list of values</source>
          <target state="translated">値のリストを返す</target>
        </trans-unit>
        <trans-unit id="3919f0144053d1b2839bd3303b2e55b3a1cb97fc" translate="yes" xml:space="preserve">
          <source>Returning blessed objects from threads</source>
          <target state="translated">スレッドから祝福されたオブジェクトを返す</target>
        </trans-unit>
        <trans-unit id="06915626d86e1674fc14afe083fc9e716d0edc97" translate="yes" xml:space="preserve">
          <source>Returning blessed objects from threads does not work. Depending on the classes involved, you may be able to work around this by returning a serialized version of the object (e.g., using &lt;a href=&quot;Data::Dumper&quot;&gt;Data::Dumper&lt;/a&gt; or &lt;a href=&quot;storable&quot;&gt;Storable&lt;/a&gt;), and then reconstituting it in the joining thread. If you're using Perl 5.10.0 or later, and if the class supports &lt;a href=&quot;threads::shared#OBJECTS&quot;&gt;shared objects&lt;/a&gt;, you can pass them via &lt;a href=&quot;Thread::Queue&quot;&gt;shared queues&lt;/a&gt;.</source>
          <target state="translated">スレッドから祝福されたオブジェクトを返すことは機能しません。関連するクラスによっては、オブジェクトのシリアル化されたバージョンを返し（たとえば、&lt;a href=&quot;Data::Dumper&quot;&gt;Data :: &lt;/a&gt;&lt;a href=&quot;storable&quot;&gt;Dumper&lt;/a&gt;またはStorableを使用して）、結合スレッドで再構成することで、これを回避できる場合があります。Perl 5.10.0以降を使用していて、クラスが&lt;a href=&quot;threads::shared#OBJECTS&quot;&gt;共有オブジェクトを&lt;/a&gt;サポートしている場合は、&lt;a href=&quot;Thread::Queue&quot;&gt;共有キューを&lt;/a&gt;介してそれらを渡すことができます。</target>
        </trans-unit>
        <trans-unit id="a9369ecc429137365ab52f2e23b2dc4784efa0c0" translate="yes" xml:space="preserve">
          <source>Returning closures from threads should not be relied upon. Depending on the Perl version and the application code, results may range from success, to (apparently harmless) warnings of leaked scalar, or all the way up to crashing of the Perl interpreter.</source>
          <target state="translated">スレッドからの戻り値であるクロージャに依存すべきではありません。Perl のバージョンやアプリケーションのコードによっては、成功してもスカラ値が漏れたという警告が表示されたり、Perl インタプリタがクラッシュしたりすることもあります。</target>
        </trans-unit>
        <trans-unit id="71fee7775bbde8a5444661735c97423ac83b2588" translate="yes" xml:space="preserve">
          <source>Returning objects from threads does not work. Depending on the classes involved, you may be able to work around this by returning a serialized version of the object (e.g., using &lt;a href=&quot;data/dumper&quot;&gt;Data::Dumper&lt;/a&gt; or &lt;a href=&quot;storable&quot;&gt;Storable&lt;/a&gt;), and then reconstituting it in the joining thread. If you're using Perl 5.10.0 or later, and if the class supports &lt;a href=&quot;threads/shared#OBJECTS&quot;&gt;shared objects&lt;/a&gt;, you can pass them via &lt;a href=&quot;thread/queue&quot;&gt;shared queues&lt;/a&gt;.</source>
          <target state="translated">スレッドからオブジェクトを返すことはできません。関連するクラスによっては、オブジェクトのシリアル化されたバージョンを返し（たとえば、&lt;a href=&quot;data/dumper&quot;&gt;Data :: &lt;/a&gt;&lt;a href=&quot;storable&quot;&gt;Dumper&lt;/a&gt;またはStorableを使用）、これを結合スレッドで再構成することによって、これを回避できる場合があります。Perl 5.10.0以降を使用していて、クラスが&lt;a href=&quot;threads/shared#OBJECTS&quot;&gt;共有オブジェクトを&lt;/a&gt;サポートしている場合は、&lt;a href=&quot;thread/queue&quot;&gt;共有キューを&lt;/a&gt;介してオブジェクトを渡すことができます。</target>
        </trans-unit>
        <trans-unit id="44a1cd59e485508038ff5a9355cbb16e424183cc" translate="yes" xml:space="preserve">
          <source>Returning undef if unable to create file added in 0.12.</source>
          <target state="translated">0.12で追加されたファイルを作成できない場合は undef を返します。</target>
        </trans-unit>
        <trans-unit id="9582a02f141fc4b345b2936eba691cd0654efebc" translate="yes" xml:space="preserve">
          <source>Returns</source>
          <target state="translated">Returns</target>
        </trans-unit>
        <trans-unit id="49ffeaa4a0300791b51c9f28909d4d69c71e3c32" translate="yes" xml:space="preserve">
          <source>Returns $ENV{TMPDIR} or if that is unset, &quot;/t&quot;.</source>
          <target state="translated">ENV{TMPDIR}を返します。</target>
        </trans-unit>
        <trans-unit id="528b3e4ac6c75972df264473be40759653e505fc" translate="yes" xml:space="preserve">
          <source>Returns $x as a BigInt (truncated towards zero). In BigInt this is the same as &lt;code&gt;copy()&lt;/code&gt; .</source>
          <target state="translated">$ xをBigInt（ゼロに向かって切り捨て）として返します。BigIntでは、これは &lt;code&gt;copy()&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="1aaa28736356131cb6a054493ecf15ee6a09bda6" translate="yes" xml:space="preserve">
          <source>Returns $x modulo $y, i.e., the remainder after floored division (F-division). This method is like Perl's % operator. See &lt;a href=&quot;#bdiv%28%29&quot;&gt;&quot;bdiv()&quot;&lt;/a&gt;.</source>
          <target state="translated">$ yを法として$ xを返します。つまり、フロア除算（F除算）後の余りを返します。このメソッドは、Perlの％演算子に似ています。&lt;a href=&quot;#bdiv%28%29&quot;&gt;「bdiv（）」を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="cf216af36545641882a4aa4eaed7a326c3fcc490" translate="yes" xml:space="preserve">
          <source>Returns $x modulo $y. When $x is finite, and $y is finite and non-zero, the result is identical to the remainder after floored division (F-division). If, in addition, both $x and $y are integers, the result is identical to the result from Perl's % operator.</source>
          <target state="translated">x modulo $y を返します。x が有限で、$y が有限でゼロでない場合、結果は、 フロアー除算 (F-division)の後の残りと同じになります。さらに、$x と $y の両方が整数の場合、結果は Perl の % 演算子の結果と同じです。</target>
        </trans-unit>
        <trans-unit id="0d3c5a8af51d00f168a13f7248c2c891045778f0" translate="yes" xml:space="preserve">
          <source>Returns -1 on error, which is considered to include the case where the layer cannot provide such a file descriptor.</source>
          <target state="translated">エラーの場合は -1 を返します。</target>
        </trans-unit>
        <trans-unit id="888c6b88522c271b9f85a8ccab52efe3a52513f1" translate="yes" xml:space="preserve">
          <source>Returns -1 on failure to get the file pointer.</source>
          <target state="translated">ファイルポインタの取得に失敗した場合に -1 を返します。</target>
        </trans-unit>
        <trans-unit id="e338db6b8ffe7e74a318b586d3f57b25d2aa1fa0" translate="yes" xml:space="preserve">
          <source>Returns -1, 0, 1 depending on whether $x is less than, equal to, or grater than $y. Returns undef if any operand is a NaN.</source>
          <target state="translated">xが$yより小さいか、等しいか、または大きいかに応じて-1,0,1を返します。オペランドがNaNの場合はundefを返します。</target>
        </trans-unit>
        <trans-unit id="c6b094b94688621d2a5947917c78c4a0d99f860c" translate="yes" xml:space="preserve">
          <source>Returns -1, 0, 1 depending on whether the absolute value of $x is less than, equal to, or grater than the absolute value of $y. Returns undef if any operand is a NaN.</source>
          <target state="translated">xの絶対値が$yの絶対値より小さいか、等しいか、または大きいかに応じて-1,0,1を返します。オペランドがNaNの場合はundefを返します。</target>
        </trans-unit>
        <trans-unit id="d62fd37f5d52ca20d3195a468720be690b6b812e" translate="yes" xml:space="preserve">
          <source>Returns 0 if the sequence of bytes starting at &lt;code&gt;s&lt;/code&gt; and looking no further than &lt;code&gt;e - 1&lt;/code&gt; is the UTF-8 encoding, as extended by Perl, for one or more code points. Otherwise, it returns 1 if there exists at least one non-empty sequence of bytes that when appended to sequence &lt;code&gt;s&lt;/code&gt;, starting at position &lt;code&gt;e&lt;/code&gt; causes the entire sequence to be the well-formed UTF-8 of some code point; otherwise returns 0.</source>
          <target state="translated">&lt;code&gt;s&lt;/code&gt; から始まり &lt;code&gt;e - 1&lt;/code&gt; を超えないバイトのシーケンスが、Perlによって拡張された1つ以上のコードポイントのUTF-8エンコーディングである場合は0を返します。それ以外の場合、シーケンス &lt;code&gt;s&lt;/code&gt; に追加されたときに、位置 &lt;code&gt;e&lt;/code&gt; から開始すると、シーケンス全体が何らかのコードポイントの整形式UTF-8になる、空でないバイトシーケンスが少なくとも1つ存在する場合は1を返します。それ以外の場合は0を返します。</target>
        </trans-unit>
        <trans-unit id="f57c4c00b98ef849f0e779ee1e73c2774ca69841" translate="yes" xml:space="preserve">
          <source>Returns 0 on end-of-file, 1 if not end-of-file, -1 on error.</source>
          <target state="translated">ファイルの終了時に 0 を、ファイルの終了時でない場合に 1 を、エラーの場合に -1 を返します。</target>
        </trans-unit>
        <trans-unit id="e5f02febc55ff88806274778fa60fd3b2c4df15e" translate="yes" xml:space="preserve">
          <source>Returns 0 on success and failure. If &lt;code&gt;Popped()&lt;/code&gt; returns</source>
          <target state="translated">成功または失敗した場合は0を返します。 &lt;code&gt;Popped()&lt;/code&gt; が戻る場合</target>
        </trans-unit>
        <trans-unit id="ba44f8d92ad300a7e94db16c55bfdd6ecdd4afb0" translate="yes" xml:space="preserve">
          <source>Returns 0 on success, -1 on failure.</source>
          <target state="translated">成功した場合は 0、失敗した場合は -1 を返します。</target>
        </trans-unit>
        <trans-unit id="63b5a5e25f5f4134ba8459b6bef0a63190538c27" translate="yes" xml:space="preserve">
          <source>Returns 0 on success.</source>
          <target state="translated">成功した場合は0を返します。</target>
        </trans-unit>
        <trans-unit id="e8046efb8fc3682fd19fe7808d60a87a9e5c745c" translate="yes" xml:space="preserve">
          <source>Returns 0 on success. On failure returns -1 and should set errno.</source>
          <target state="translated">成功した場合は 0 を返します。失敗した場合は -1 を返し、 errno を設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="73f81b7083f8b1af584f696d11723cadb45e8924" translate="yes" xml:space="preserve">
          <source>Returns 1 (when &lt;code&gt;$a&lt;/code&gt; is greater than &lt;code&gt;$b&lt;/code&gt; ) or 0 (when &lt;code&gt;$a&lt;/code&gt; is equal to &lt;code&gt;$b&lt;/code&gt; ) or -1 (when &lt;code&gt;$a&lt;/code&gt; is less than &lt;code&gt;$b&lt;/code&gt; ).</source>
          <target state="translated">戻り値1（場合 &lt;code&gt;$a&lt;/code&gt; よりも大きい &lt;code&gt;$b&lt;/code&gt; （場合または0） &lt;code&gt;$a&lt;/code&gt; に等しい &lt;code&gt;$b&lt;/code&gt; ）または-1（ &lt;code&gt;$a&lt;/code&gt; 未満である &lt;code&gt;$b&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="5dd768d30724c5272e10cfd27e726c6f231d1a5d" translate="yes" xml:space="preserve">
          <source>Returns 1 (when &lt;code&gt;$a&lt;/code&gt; is greater than &lt;code&gt;$b&lt;/code&gt;) or 0 (when &lt;code&gt;$a&lt;/code&gt; is equal to &lt;code&gt;$b&lt;/code&gt;) or -1 (when &lt;code&gt;$a&lt;/code&gt; is less than &lt;code&gt;$b&lt;/code&gt;).</source>
          <target state="translated">戻り値1（場合 &lt;code&gt;$a&lt;/code&gt; よりも大きい &lt;code&gt;$b&lt;/code&gt; （場合または0） &lt;code&gt;$a&lt;/code&gt; に等しい &lt;code&gt;$b&lt;/code&gt; ）または-1（ &lt;code&gt;$a&lt;/code&gt; 未満である &lt;code&gt;$b&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="cb16034d876707df8f96272a5dff4e89d28412d5" translate="yes" xml:space="preserve">
          <source>Returns 1 if a new stream was found, 0 if none was found, and -1 if an error was encountered.</source>
          <target state="translated">新しいストリームが見つかった場合は 1、見つからなかった場合は 0、エラーが発生した場合は -1 を返します。</target>
        </trans-unit>
        <trans-unit id="0102da941d55e0eb75291f811c83ed21853e46ba" translate="yes" xml:space="preserve">
          <source>Returns 1 if all the modules contained in the distribution are up-to-date. Relies on containsmods.</source>
          <target state="translated">ディストリビューションに含まれるすべてのモジュールが最新の場合に 1 を返します。containsmods に依存します。</target>
        </trans-unit>
        <trans-unit id="e1ee0b0c392190122ec7ba8d9d8a47a433cb8fa9" translate="yes" xml:space="preserve">
          <source>Returns 1 if the bundle itself and all its members are up-to-date.</source>
          <target state="translated">バンドル自体とそのすべてのメンバーが最新である場合に 1 を返します。</target>
        </trans-unit>
        <trans-unit id="c4757e4d71f85ab2279932983f16fd6cf23839fc" translate="yes" xml:space="preserve">
          <source>Returns 1 if the module is installed and up-to-date.</source>
          <target state="translated">モジュールがインストールされていて最新の場合は1を返します。</target>
        </trans-unit>
        <trans-unit id="405c713afd3e87c236988bdf5227a773db888110" translate="yes" xml:space="preserve">
          <source>Returns 1 if the next read on FILEHANDLE will return end of file</source>
          <target state="translated">FILEHANDLEの次の読み込みでファイルの終了を返す場合に1を返します。</target>
        </trans-unit>
        <trans-unit id="b1242f6c30157c63339a787c7ddbc442bf5b7836" translate="yes" xml:space="preserve">
          <source>Returns 1 if there is an error (usually when &lt;code&gt;PERLIO_F_ERROR&lt;/code&gt; is set), 0 otherwise.</source>
          <target state="translated">エラーがある場合（通常は &lt;code&gt;PERLIO_F_ERROR&lt;/code&gt; が設定されている場合）は1を返し、それ以外の場合は0を返します。</target>
        </trans-unit>
        <trans-unit id="e4230f25ecb39ed98585d80e80f90d64f3e38024" translate="yes" xml:space="preserve">
          <source>Returns 1 if this distribution file seems to be a perl distribution. Normally this is derived from the file name only, but the index from CPAN can contain a hint to achieve a return value of true for other filenames too.</source>
          <target state="translated">このディストリビューションファイルが perl ディストリビューションであると思われる場合に 1 を返します。通常、これはファイル名からのみ導き出されますが、CPANからのインデックスには、他のファイル名に対しても真の戻り値を得るためのヒントが含まれていることがあります。</target>
        </trans-unit>
        <trans-unit id="1e104bab9cb8759f62e14ccebe1f50ead99ecb96" translate="yes" xml:space="preserve">
          <source>Returns 1 on success, 0 on failure.</source>
          <target state="translated">成功した場合は 1、失敗した場合は 0 を返します。</target>
        </trans-unit>
        <trans-unit id="b5d450067d1569a4292f6c764fc9ad7e6da162e2" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;#config&quot;&gt;&quot;config&quot;&lt;/a&gt; for the $class given. Class names may be fully qualified or abbreviated, eg:</source>
          <target state="translated">指定された$ classの&lt;a href=&quot;#config&quot;&gt;「config」&lt;/a&gt;を返します。クラス名は、完全修飾または省略形にすることができます。例：</target>
        </trans-unit>
        <trans-unit id="95ceb615341b2778f45facc3ac91c64f1dcd7626" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;#config&quot;&gt;config&lt;/a&gt; for the $class given. Class names may be fully qualified or abbreviated, eg:</source>
          <target state="translated">戻り&lt;a href=&quot;#config&quot;&gt;configコン&lt;/a&gt; $クラスのためには、与えられました。クラス名は完全修飾または省略形にすることができます。例：</target>
        </trans-unit>
        <trans-unit id="99ff4197b5764d632b5b57d44604a402c3417883" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;../parser&quot;&gt;TAP::Parser&lt;/a&gt; grammar object that will parse the TAP stream from the specified iterator. Both &lt;code&gt;iterator&lt;/code&gt; and &lt;code&gt;parser&lt;/code&gt; are required arguments. If &lt;code&gt;version&lt;/code&gt; is not set it defaults to &lt;code&gt;12&lt;/code&gt; (see &lt;a href=&quot;#set_version&quot;&gt;set_version&lt;/a&gt; for more details).</source>
          <target state="translated">指定されたイテレータからのTAPストリームを解析する&lt;a href=&quot;../parser&quot;&gt;TAP :: Parser&lt;/a&gt;文法オブジェクトを返します。 &lt;code&gt;iterator&lt;/code&gt; と &lt;code&gt;parser&lt;/code&gt; 両方が必須の引数です。 &lt;code&gt;version&lt;/code&gt; が設定されていない場合、デフォルトは &lt;code&gt;12&lt;/code&gt; です（詳細については、&lt;a href=&quot;#set_version&quot;&gt;set_version&lt;/a&gt;を参照してください）。</target>
        </trans-unit>
        <trans-unit id="ceb63837bf7b75a6c1037a412e0f6773a25342a9" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;TAP::Parser&quot;&gt;TAP::Parser&lt;/a&gt; grammar object that will parse the TAP stream from the specified iterator. Both &lt;code&gt;iterator&lt;/code&gt; and &lt;code&gt;parser&lt;/code&gt; are required arguments. If &lt;code&gt;version&lt;/code&gt; is not set it defaults to &lt;code&gt;12&lt;/code&gt; (see &lt;a href=&quot;#set_version&quot;&gt;&quot;set_version&quot;&lt;/a&gt; for more details).</source>
          <target state="translated">指定されたイテレータからのTAPストリームを解析する&lt;a href=&quot;TAP::Parser&quot;&gt;TAP :: Parser&lt;/a&gt;文法オブジェクトを返します。 &lt;code&gt;iterator&lt;/code&gt; と &lt;code&gt;parser&lt;/code&gt; 両方が必須の引数です。 &lt;code&gt;version&lt;/code&gt; が設定されていない場合、デフォルトで &lt;code&gt;12&lt;/code&gt; になります（詳細については、&lt;a href=&quot;#set_version&quot;&gt;「set_version」&lt;/a&gt;を参照してください）。</target>
        </trans-unit>
        <trans-unit id="c991a0d06fdf084bc9de4bde379609419ebafebd" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;$fh&lt;/code&gt; itself if &lt;code&gt;$fh&lt;/code&gt; may be used as a filehandle and is open, or is is a tied handle. Otherwise &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;$fh&lt;/code&gt; がファイルハンドルとして使用でき、開いているか、または結合ハンドルである場合は、 &lt;code&gt;$fh&lt;/code&gt; 自体を返します。それ以外の場合は、 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="b29334943e1bc3dff8f970c1f199da3a44b40afc" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;$fh&lt;/code&gt; itself, if &lt;code&gt;$fh&lt;/code&gt; may be used as a filehandle and is open, or if it is a tied handle. Otherwise &lt;code&gt;undef&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;$fh&lt;/code&gt; がファイルハンドルとして使用されて開いている場合、またはタイドハンドルの場合は、 &lt;code&gt;$fh&lt;/code&gt; 自体を返します。それ以外の場合は、 &lt;code&gt;undef&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="30d7a4e5d9ca7ba8584e4a0de65e1b14a456e3be" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;1&lt;/code&gt; for success; on error, returns &lt;a href=&quot;#undef-EXPR&quot;&gt;&lt;code&gt;undef&lt;/code&gt;&lt;/a&gt; if the first argument is not a valid filehandle, or returns &lt;code&gt;0&lt;/code&gt; and sets &lt;a href=&quot;perlvar#%24%21&quot;&gt;&lt;code&gt;$!&lt;/code&gt;&lt;/a&gt; for any other failure.</source>
          <target state="translated">成功した場合は &lt;code&gt;1&lt;/code&gt; を返します。エラーの場合、最初の引数が有効なファイルハンドルでない場合は&lt;a href=&quot;#undef-EXPR&quot;&gt; &lt;code&gt;undef&lt;/code&gt; を&lt;/a&gt;返すか、 &lt;code&gt;0&lt;/code&gt; を返して&lt;a href=&quot;perlvar#%24%21&quot;&gt; &lt;code&gt;$!&lt;/code&gt; &lt;/a&gt;を設定します。その他の障害の場合。</target>
        </trans-unit>
        <trans-unit id="e7bac7dcd1796b1dda62e6c1d9092908641c82ca" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;1&lt;/code&gt; for success; on error, returns &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if the first argument is not a valid filehandle, or returns &lt;code&gt;0&lt;/code&gt; and sets &lt;code&gt;$!&lt;/code&gt; for any other failure.</source>
          <target state="translated">成功した場合は &lt;code&gt;1&lt;/code&gt; を返します。エラーの場合、最初の引数が有効なファイルハンドルでない場合は &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; を返し、 &lt;code&gt;0&lt;/code&gt; を返して &lt;code&gt;$!&lt;/code&gt; を設定します。その他の障害の場合。</target>
        </trans-unit>
        <trans-unit id="ade90323fde26274914df6d59126343322076239" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;1&lt;/code&gt; for success; on error, returns &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if the first argument is not a valid filehandle, or returns &lt;code&gt;0&lt;/code&gt; and sets &lt;code&gt;$!&lt;/code&gt; for any other failure.</source>
          <target state="translated">成功した場合は &lt;code&gt;1&lt;/code&gt; を返します。エラーの場合、最初の引数が有効なファイルハンドルでない場合は &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; を返し、 &lt;code&gt;0&lt;/code&gt; を返して &lt;code&gt;$!&lt;/code&gt; を設定します。その他の障害の場合。</target>
        </trans-unit>
        <trans-unit id="c0574ede98ee7e97c60e0a1d4f2d232a8d707d60" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;1&lt;/code&gt; for success; on error, returns &lt;code&gt;undef&lt;/code&gt; if the socket is not a valid filehandle, or returns &lt;code&gt;0&lt;/code&gt; and sets &lt;code&gt;$!&lt;/code&gt; for any other failure.</source>
          <target state="translated">成功した場合は &lt;code&gt;1&lt;/code&gt; を返します。エラーの場合、ソケットが有効なファイルハンドルでない場合は &lt;code&gt;undef&lt;/code&gt; を返すか、 &lt;code&gt;0&lt;/code&gt; を返して &lt;code&gt;$!&lt;/code&gt; を設定します。その他の障害の場合。</target>
        </trans-unit>
        <trans-unit id="7fba5f4b2a8a65724290b52d186de9858fa6db2c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;1&lt;/code&gt; upon success, &lt;code&gt;0&lt;/code&gt; otherwise.</source>
          <target state="translated">成功すると &lt;code&gt;1&lt;/code&gt; を返し、それ以外の場合は &lt;code&gt;0&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="136cf3a05dcde424fd7cd5db77033d53cc62479d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;../../../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if the program has never failed.</source>
          <target state="translated">プログラムが失敗したことがない場合は、 &lt;code&gt;&lt;a href=&quot;../../../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="0c843475d97734dc686bf6af10cb54c997e3ca80" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;../../../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if the program has never passed.</source>
          <target state="translated">プログラムが一度も渡されていない場合は、 &lt;code&gt;&lt;a href=&quot;../../../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="168d3eac2c65ee157bac98482d92871d6026d13e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if it was not called yet, otherwise bit 1 is set if on the previous call do_harderror was enabled, bit 2 is set if on previous call do_exception was enabled.</source>
          <target state="translated">まだ呼び出されていない場合は &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; を返します。それ以外の場合は、前の呼び出しでdo_harderrorが有効であった場合はビット1が設定され、前の呼び出しでdo_exceptionが有効であった場合はビット2が設定されます。</target>
        </trans-unit>
        <trans-unit id="01b2691d1600db97fed049bb755ceb8ab99064f6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if it was not called yet, otherwise return false if errors were not requested to be written to a hard drive, or the drive letter if this was requested.</source>
          <target state="translated">まだ呼び出されていない場合は &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; を返し、それ以外の場合はハードドライブへの書き込みが要求されなかった場合はfalseを返し、要求された場合はドライブ文字を返します。</target>
        </trans-unit>
        <trans-unit id="627f39ba23bdb2924ba3451ee791b5899ecfb9e5" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; on failure.</source>
          <target state="translated">失敗すると &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="0201821892ab945e07f6a5ef79660efddb739cd7" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; on failure. Note: do not use &lt;code&gt;access()&lt;/code&gt; for security purposes. Between the &lt;code&gt;access()&lt;/code&gt; call and the operation you are preparing for the permissions might change: a classic</source>
          <target state="translated">失敗すると &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; を返します。注：セキュリティの目的で &lt;code&gt;access()&lt;/code&gt; を使用しないでください。 &lt;code&gt;access()&lt;/code&gt; 呼び出しと、アクセス許可の準備をしている操作の間で、変更される可能性があります。</target>
        </trans-unit>
        <trans-unit id="55152abc1dc2e6224fe3924787bee88e509b5731" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; on failure. The &lt;code&gt;$mode&lt;/code&gt; is similar to the mode of &lt;code&gt;&lt;a href=&quot;functions/mkdir&quot;&gt;mkdir()&lt;/a&gt;&lt;/code&gt;, see &lt;a href=&quot;functions/mkdir&quot;&gt;mkdir&lt;/a&gt;, though for &lt;code&gt;mkfifo&lt;/code&gt; you &lt;b&gt;must&lt;/b&gt; specify the &lt;code&gt;$mode&lt;/code&gt; .</source>
          <target state="translated">失敗すると &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; を返します。 &lt;code&gt;$mode&lt;/code&gt; モードに似てい &lt;code&gt;&lt;a href=&quot;functions/mkdir&quot;&gt;mkdir()&lt;/a&gt;&lt;/code&gt; 、参照&lt;a href=&quot;functions/mkdir&quot;&gt;MKDIRを&lt;/a&gt;するためにかかわらず、 &lt;code&gt;mkfifo&lt;/code&gt; あなたが&lt;b&gt;しなければならない&lt;/b&gt;指定 &lt;code&gt;$mode&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="de0cd76033a138179245b5e46e05e3b7122e17aa" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; on failure. The &lt;code&gt;signal&lt;/code&gt; must be a number (like &lt;code&gt;SIGHUP&lt;/code&gt; ), not a string (like &lt;code&gt;&quot;SIGHUP&quot;&lt;/code&gt; ), though Perl does try hard to understand you.</source>
          <target state="translated">失敗すると &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; を返します。 &lt;code&gt;signal&lt;/code&gt; （のような数でなければなりません &lt;code&gt;SIGHUP&lt;/code&gt; ）、ではない（のような文字列 &lt;code&gt;&quot;SIGHUP&quot;&lt;/code&gt; Perlはあなたを理解するために努力んが、）。</target>
        </trans-unit>
        <trans-unit id="b498767cb3177d1dfc4a86d61b4be055b2dcfcc2" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; or a reference to the method that implements &lt;code&gt;op&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;op&lt;/code&gt; を実装するメソッドへの参照を返します。</target>
        </trans-unit>
        <trans-unit id="5b31fd014d364bd8f9aff893cccb0d2a3396dcb5" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;BZ_OK&lt;/code&gt; if the uncompression was successful, but the end of the compressed data stream has not been reached. Returns &lt;code&gt;BZ_STREAM_END&lt;/code&gt; on successful uncompression and the end of the compression stream has been reached.</source>
          <target state="translated">圧縮 &lt;code&gt;BZ_OK&lt;/code&gt; は成功したが、圧縮データストリームの最後に到達していない場合は、BZ_OKを返します。正常な圧縮 &lt;code&gt;BZ_STREAM_END&lt;/code&gt; を返し、圧縮ストリームの最後に到達しました。</target>
        </trans-unit>
        <trans-unit id="8cee1dc76991a1ae94bb57e19977e67445c285f0" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;BZ_RUN_OK&lt;/code&gt; on success and a &lt;code&gt;bzip2&lt;/code&gt; error code on failure.</source>
          <target state="translated">成功した &lt;code&gt;BZ_RUN_OK&lt;/code&gt; を返し、失敗した場合は &lt;code&gt;bzip2&lt;/code&gt; エラーコードを返します。</target>
        </trans-unit>
        <trans-unit id="b0cc0a3e341e51f71c2e900bee437aaf7e78b43a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;BZ_STREAM_END&lt;/code&gt; on success and a &lt;code&gt;bzip2&lt;/code&gt; error code on failure.</source>
          <target state="translated">成功した &lt;code&gt;BZ_STREAM_END&lt;/code&gt; を返し、失敗した場合は &lt;code&gt;bzip2&lt;/code&gt; エラーコードを返します。</target>
        </trans-unit>
        <trans-unit id="298af90e00483dcc786cec14907c140555481e3d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;LOCAL_FILE&lt;/code&gt; , or the generated local file name if &lt;code&gt;LOCAL_FILE&lt;/code&gt; is not given. If an error was encountered undef is returned.</source>
          <target state="translated">返し &lt;code&gt;LOCAL_FILE&lt;/code&gt; は場合、または生成されたローカルファイル名 &lt;code&gt;LOCAL_FILE&lt;/code&gt; が与えられていません。エラーが発生した場合、undefが返されます。</target>
        </trans-unit>
        <trans-unit id="f44e98db617e53ac0021ea2776bed5821937169c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;LOCAL_FILE&lt;/code&gt;, or the generated local file name if &lt;code&gt;LOCAL_FILE&lt;/code&gt; is not given. If an error was encountered undef is returned.</source>
          <target state="translated">返し &lt;code&gt;LOCAL_FILE&lt;/code&gt; は場合、または生成されたローカルファイル名 &lt;code&gt;LOCAL_FILE&lt;/code&gt; が与えられていません。エラーが発生した場合、undefが返されます。</target>
        </trans-unit>
        <trans-unit id="a8b971bb70c1f8924bdec539cc9599d29222d1d2" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;NULL&lt;/code&gt; on failure.</source>
          <target state="translated">失敗した場合は &lt;code&gt;NULL&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="e51d6f8e14bead6e8bf8a7b3130669740d68f1ae" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;NaN&lt;/code&gt;, not-a-number [C99].</source>
          <target state="translated">&lt;code&gt;NaN&lt;/code&gt; 、not-a-number [C99]を返します。</target>
        </trans-unit>
        <trans-unit id="e6f167a2967a820d84c44fba64003e7df81c5006" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;REMOTE_FILE&lt;/code&gt; , or the generated remote filename if &lt;code&gt;REMOTE_FILE&lt;/code&gt; is not given.</source>
          <target state="translated">&lt;code&gt;REMOTE_FILE&lt;/code&gt; が返されます。REMOTE_FILEが指定されていない場合は、生成されたリモートファイル名が &lt;code&gt;REMOTE_FILE&lt;/code&gt; れます。</target>
        </trans-unit>
        <trans-unit id="a3356ded8cd7d483bf947878bfe98508cd281032" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;REMOTE_FILE&lt;/code&gt;, or the generated remote filename if &lt;code&gt;REMOTE_FILE&lt;/code&gt; is not given.</source>
          <target state="translated">戻り値 &lt;code&gt;REMOTE_FILE&lt;/code&gt; 場合、または生成されたリモートファイル名 &lt;code&gt;REMOTE_FILE&lt;/code&gt; が与えられていません。</target>
        </trans-unit>
        <trans-unit id="2e8469c11a7495a34575028d0cada4d0c590d322" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Z_OK&lt;/code&gt; if successful and &lt;code&gt;Z_STREAM_END&lt;/code&gt; if the end of the compressed data has been successfully reached.</source>
          <target state="translated">戻り値は、 &lt;code&gt;Z_OK&lt;/code&gt; 成功した場合 &lt;code&gt;Z_STREAM_END&lt;/code&gt; 圧縮されたデータの終わりが正常に達した場合。</target>
        </trans-unit>
        <trans-unit id="8f59376906d764bd6babf5587091cb994788c043" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Z_OK&lt;/code&gt; if successful and &lt;code&gt;Z_STREAM_END&lt;/code&gt; if the end of the compressed data has been successfully reached. If not successful, &lt;code&gt;$out&lt;/code&gt; will be</source>
          <target state="translated">戻り値は、 &lt;code&gt;Z_OK&lt;/code&gt; 成功した場合 &lt;code&gt;Z_STREAM_END&lt;/code&gt; 圧縮されたデータの終わりが正常に達した場合。成功しなかった場合、 &lt;code&gt;$out&lt;/code&gt; は</target>
        </trans-unit>
        <trans-unit id="d96ce4239a30d936bcce62812ba50c744b76b905" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Z_OK&lt;/code&gt; if successful.</source>
          <target state="translated">成功した場合は &lt;code&gt;Z_OK&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="cafeafb2bd7c17d7b50be85ae47dd3d48969d3d8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;expr&lt;/code&gt; , sets $^E from WinGetLastError() if &lt;code&gt;expr&lt;/code&gt; is false, and die()s if &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; and $^E are true. The message to die is the concatenated strings &lt;code&gt;name1&lt;/code&gt; and &lt;code&gt;name2&lt;/code&gt; , separated by &lt;code&gt;&quot;: &quot;&lt;/code&gt; from the contents of $^E.</source>
          <target state="translated">&lt;code&gt;expr&lt;/code&gt; を返し、 &lt;code&gt;expr&lt;/code&gt; がfalseの場合はWinGetLastError（）から$ ^ Eを設定し、 &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; と$ ^ Eがtrue の場合はdie（）sを返します。死ぬメッセージは、$ ^ Eの内容から &lt;code&gt;&quot;: &quot;&lt;/code&gt; で区切られた連結された文字列 &lt;code&gt;name1&lt;/code&gt; と &lt;code&gt;name2&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="aa35bf1c09a2c6ee81db488828bca0efa036827d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;expr&lt;/code&gt; , sets $^E from WinGetLastError() if &lt;code&gt;expr&lt;/code&gt; is false.</source>
          <target state="translated">&lt;code&gt;expr&lt;/code&gt; を返し、 &lt;code&gt;expr&lt;/code&gt; がfalseの場合、WinGetLastError（）から$ ^ Eを設定します。</target>
        </trans-unit>
        <trans-unit id="8a43b4944f331e35fc17a23f32ff12adb9faa649" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;expr&lt;/code&gt;, sets $^E from WinGetLastError() if &lt;code&gt;expr&lt;/code&gt; is false, and die()s if &lt;code&gt;die&lt;/code&gt; and $^E are true. The message to die is the concatenated strings &lt;code&gt;name1&lt;/code&gt; and &lt;code&gt;name2&lt;/code&gt;, separated by &lt;code&gt;&quot;: &quot;&lt;/code&gt; from the contents of $^E.</source>
          <target state="translated">&lt;code&gt;expr&lt;/code&gt; を返し、 &lt;code&gt;expr&lt;/code&gt; がfalseの場合はWinGetLastError（）から$ ^ Eを設定し、 &lt;code&gt;die&lt;/code&gt; と$ ^ Eがtrueの場合はdie（）を設定します。死ぬためのメッセージは、$ ^ Eの内容から &lt;code&gt;&quot;: &quot;&lt;/code&gt; で区切られた連結文字列 &lt;code&gt;name1&lt;/code&gt; と &lt;code&gt;name2&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="40b53119485f925fa85d273f752e3f19d229bead" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;expr&lt;/code&gt;, sets $^E from WinGetLastError() if &lt;code&gt;expr&lt;/code&gt; is false.</source>
          <target state="translated">&lt;code&gt;expr&lt;/code&gt; を返し、 &lt;code&gt;expr&lt;/code&gt; がfalseの場合、WinGetLastError（）から$ ^ Eを設定します。</target>
        </trans-unit>
        <trans-unit id="fca4e0508d78963dffc71ae7be5c14388673db33" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;undef&lt;/code&gt; if it was not called yet, otherwise bit 1 is set if on the previous call do_harderror was enabled, bit 2 is set if on previous call do_exception was enabled.</source>
          <target state="translated">まだ呼び出されていない場合は &lt;code&gt;undef&lt;/code&gt; を返します。それ以外の場合は、前の呼び出しでdo_harderrorが有効になっている場合はビット1が設定され、前の呼び出しでdo_exceptionが有効になっている場合はビット2が設定されます。</target>
        </trans-unit>
        <trans-unit id="9f0538258dc233e2a7efd702af9ce9d3989d16da" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;undef&lt;/code&gt; if it was not called yet, otherwise return false if errors were not requested to be written to a hard drive, or the drive letter if this was requested.</source>
          <target state="translated">まだ呼び出されていない場合は &lt;code&gt;undef&lt;/code&gt; を返し、ハードドライブへの書き込みが要求されていない場合はfalseを返し、要求された場合はドライブ文字を返します。</target>
        </trans-unit>
        <trans-unit id="a0ba49fc52664c9768a2ab95d911eb2cb4b28988" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;undef&lt;/code&gt; if the program has never failed.</source>
          <target state="translated">プログラムが失敗したことがない場合は &lt;code&gt;undef&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="8ff572d05bf067522f60b34abeda2ccdf51d0269" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;undef&lt;/code&gt; if the program has never passed.</source>
          <target state="translated">プログラムが一度も合格しなかった場合は &lt;code&gt;undef&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="fb2541fab3c1c035bf15e71e852d3f39995774af" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;undef&lt;/code&gt; on failure.</source>
          <target state="translated">失敗すると &lt;code&gt;undef&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="373bfd3ff3b853f161358ec4dc74a062cfd5990c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;undef&lt;/code&gt; on failure. Note: do not use &lt;code&gt;access()&lt;/code&gt; for security purposes. Between the &lt;code&gt;access()&lt;/code&gt; call and the operation you are preparing for the permissions might change: a classic</source>
          <target state="translated">失敗すると &lt;code&gt;undef&lt;/code&gt; を返します。注：セキュリティの目的で &lt;code&gt;access()&lt;/code&gt; を使用しないでください。 &lt;code&gt;access()&lt;/code&gt; 呼び出しと、アクセス許可の準備をしている操作の間で、変更される可能性があります。</target>
        </trans-unit>
        <trans-unit id="fc9b1a0a3944ac45a98bd6dae10d908b7db916dd" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;undef&lt;/code&gt; on failure. The &lt;code&gt;$mode&lt;/code&gt; is similar to the mode of &lt;code&gt;mkdir()&lt;/code&gt;, see &lt;a href=&quot;perlfunc#mkdir&quot;&gt;&quot;mkdir&quot; in perlfunc&lt;/a&gt;, though for &lt;code&gt;mkfifo&lt;/code&gt; you &lt;b&gt;must&lt;/b&gt; specify the &lt;code&gt;$mode&lt;/code&gt;.</source>
          <target state="translated">失敗すると &lt;code&gt;undef&lt;/code&gt; を返します。 &lt;code&gt;$mode&lt;/code&gt; モードに似ている &lt;code&gt;mkdir()&lt;/code&gt; 、参照&lt;a href=&quot;perlfunc#mkdir&quot;&gt;はperlfuncに「MKDIR」を&lt;/a&gt;するためにかかわらず、 &lt;code&gt;mkfifo&lt;/code&gt; あなたが&lt;b&gt;しなければならない&lt;/b&gt;指定 &lt;code&gt;$mode&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="62c47c39950b06756b29ddbbe2589f0d6320095f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;undef&lt;/code&gt; on failure. The &lt;code&gt;signal&lt;/code&gt; must be a number (like &lt;code&gt;SIGHUP&lt;/code&gt;), not a string (like &lt;code&gt;&quot;SIGHUP&quot;&lt;/code&gt;), though Perl does try hard to understand you.</source>
          <target state="translated">失敗すると &lt;code&gt;undef&lt;/code&gt; を返します。 &lt;code&gt;signal&lt;/code&gt; （のような数でなければなりません &lt;code&gt;SIGHUP&lt;/code&gt; ）、ではない（のような文字列 &lt;code&gt;&quot;SIGHUP&quot;&lt;/code&gt; Perlはあなたを理解するために努力んが、）。</target>
        </trans-unit>
        <trans-unit id="5f4dbf09a70ae3216a8079d6b87c588e31a9f3b4" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;undef&lt;/code&gt; or a reference to the method that implements &lt;code&gt;op&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;undef&lt;/code&gt; または &lt;code&gt;op&lt;/code&gt; を実装するメソッドへの参照を返します。</target>
        </trans-unit>
        <trans-unit id="694b6b5e4d4a0a0415aca6bfb2d028cdf70185a3" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;undef&lt;/code&gt; where unavailable.</source>
          <target state="translated">利用できない場合は &lt;code&gt;undef&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="ec258314cd4c89e4c47daf34be20cf66b5d74187" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;x * 2**y&lt;/code&gt; [C99].</source>
          <target state="translated">&lt;code&gt;x * 2**y&lt;/code&gt; [C99]を返します。</target>
        </trans-unit>
        <trans-unit id="c4d4745f47a74fcad081bf6ee100570bea174bb4" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;x&lt;/code&gt; but with the sign of &lt;code&gt;&lt;a href=&quot;functions/y&quot;&gt;y&lt;/a&gt;&lt;/code&gt; [C99].</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; を返しますが、符号は &lt;code&gt;&lt;a href=&quot;functions/y&quot;&gt;y&lt;/a&gt;&lt;/code&gt; です [C99]。</target>
        </trans-unit>
        <trans-unit id="565e702e93c7e7ecfd6c2a325f89a19bd154d1cd" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;x&lt;/code&gt; but with the sign of &lt;code&gt;y&lt;/code&gt; [C99].</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; を返しますが、符号は &lt;code&gt;y&lt;/code&gt; [C99]です。</target>
        </trans-unit>
        <trans-unit id="7e87db4f05bd1544a961889bb18a4ae3bef71b6a" translate="yes" xml:space="preserve">
          <source>Returns EXPR on success for convenience. You may neglect the return value and manipulate EXPR as the filehandle directly if you prefer.</source>
          <target state="translated">便宜上、成功するとEXPRを返します。戻り値を無視して、EXPRを直接ファイルハンドルとして操作することもできます。</target>
        </trans-unit>
        <trans-unit id="1617e19a5623494da8a4feec58e0db0d72c53d05" translate="yes" xml:space="preserve">
          <source>Returns Euler's number &lt;code&gt;e&lt;/code&gt; , aka exp(1).</source>
          <target state="translated">オイラーの数 &lt;code&gt;e&lt;/code&gt; 、別名exp（1）を返します。</target>
        </trans-unit>
        <trans-unit id="850c587f24c6ccb55ebb1e6b233f6f1952faffd8" translate="yes" xml:space="preserve">
          <source>Returns Euler's number &lt;code&gt;e&lt;/code&gt; , aka exp(1). Note that under bigint, this is truncated to an integer, and hence simple '2'.</source>
          <target state="translated">オイラーの数 &lt;code&gt;e&lt;/code&gt; 、別名exp（1）を返します。bigintでは、これは整数に切り捨てられるため、単純に「2」になります。</target>
        </trans-unit>
        <trans-unit id="a3f19dca119e616910757674455d0bfea072343f" translate="yes" xml:space="preserve">
          <source>Returns Euler's number &lt;code&gt;e&lt;/code&gt; raised to the appropriate power, to the wanted accuracy.</source>
          <target state="translated">オイラー数 &lt;code&gt;e&lt;/code&gt; を適切な累乗で、必要な精度で返します。</target>
        </trans-unit>
        <trans-unit id="36a0a07be35d409b71ec1bc811648258d565575c" translate="yes" xml:space="preserve">
          <source>Returns Euler's number &lt;code&gt;e&lt;/code&gt;, aka exp(1).</source>
          <target state="translated">オイラーの数 &lt;code&gt;e&lt;/code&gt; 、別名exp（1）を返します。</target>
        </trans-unit>
        <trans-unit id="6a15a9739f022d0bac33f75d4b3499f6e82c8fe0" translate="yes" xml:space="preserve">
          <source>Returns Euler's number &lt;code&gt;e&lt;/code&gt;, aka exp(1). Note that under bigint, this is truncated to an integer, and hence simple '2'.</source>
          <target state="translated">オイラーの数 &lt;code&gt;e&lt;/code&gt; 、別名exp（1）を返します。bigintでは、これは整数に切り捨てられるため、単純な「2」であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="91d8fbbce4cc7e43c119b288ed43436b0f71b618" translate="yes" xml:space="preserve">
          <source>Returns FALSE if &lt;code&gt;pv&lt;/code&gt; doesn't represent a valid unsigned integer value (with no leading zeros). Otherwise it returns TRUE, and sets &lt;code&gt;*valptr&lt;/code&gt; to that value.</source>
          <target state="translated">&lt;code&gt;pv&lt;/code&gt; が有効な符号なし整数値（先行ゼロなし）を表していない場合はFALSEを返します。それ以外の場合はTRUEを返し、 &lt;code&gt;*valptr&lt;/code&gt; をその値に設定します。</target>
        </trans-unit>
        <trans-unit id="4f7822d3c42f8e6aa818be71c2d686e69bd26438" translate="yes" xml:space="preserve">
          <source>Returns OBJ1 modulo OBJ2, i.e., the remainder after dividing OBJ1 by OBJ2.</source>
          <target state="translated">OBJ1をOBJ2で割った後の残りの部分、つまりOBJ1をOBJ2で割った後の残りの部分を返します。</target>
        </trans-unit>
        <trans-unit id="60f69fe69a2ac54ea5d2fefc58a70a63f4bd427b" translate="yes" xml:space="preserve">
          <source>Returns OBJ1 raised to the power of OBJ2. By convention, 0**0 = 1.</source>
          <target state="translated">OBJ1 を OBJ2 の累乗まで上げたものを返します。慣例では、0**0=1となります。</target>
        </trans-unit>
        <trans-unit id="fa9f007c83aac949ac30fe49286841418b2898ad" translate="yes" xml:space="preserve">
          <source>Returns PI to the wanted accuracy.</source>
          <target state="translated">PIを希望の精度で返します。</target>
        </trans-unit>
        <trans-unit id="c520053627c64fa3c2459265f3c98c69401d9f5f" translate="yes" xml:space="preserve">
          <source>Returns PI to the wanted accuracy. Note that under bigint, this is truncated to an integer, and hence simple '3'.</source>
          <target state="translated">PIを指定した精度で返します。bigintの下では、これは整数に切り捨てられ、したがって単純な'3'になることに注意してください。</target>
        </trans-unit>
        <trans-unit id="327682c084c70fda486bfb3be771a0413c3229c3" translate="yes" xml:space="preserve">
          <source>Returns PI truncated to an integer, with the argument being ignored. This means under BigInt this always returns &lt;code&gt;3&lt;/code&gt; .</source>
          <target state="translated">引数を無視して整数に切り捨てられたPIを返します。これは、BigIntでは常に &lt;code&gt;3&lt;/code&gt; を返すことを意味します。</target>
        </trans-unit>
        <trans-unit id="8da410a89af5164a0c8741909120b0e113c9a907" translate="yes" xml:space="preserve">
          <source>Returns PI.</source>
          <target state="translated">PIを返します。</target>
        </trans-unit>
        <trans-unit id="bcf4afe04118d7851c0aac8680ab511af39c9cb4" translate="yes" xml:space="preserve">
          <source>Returns PI. Note that under bigint, this is truncated to an integer, and hence simple '3'.</source>
          <target state="translated">PIを返します。bigint の下では、これは整数に切り捨てられ、したがって単純な '3' になることに注意してください。</target>
        </trans-unit>
        <trans-unit id="5c96d003c572d583a1138a19c98afcc3bdf85be8" translate="yes" xml:space="preserve">
          <source>Returns PID on success, -1 on error. The FLAGS argument is ignored in all cases.</source>
          <target state="translated">成功した場合は PID を、エラーの場合は -1 を返します。FLAGS 引数はすべての場合に無視されます。</target>
        </trans-unit>
        <trans-unit id="a707720802a033276a9d24c48e80bcab6ab43234" translate="yes" xml:space="preserve">
          <source>Returns TRUE if &lt;a href=&quot;perlapi#is_utf8_invariant_string&quot;&gt;&quot;is_utf8_invariant_string&quot; in perlapi&lt;/a&gt; returns FALSE for the first &lt;code&gt;len&lt;/code&gt; bytes of the string &lt;code&gt;s&lt;/code&gt;, but they are, nonetheless, legal Perl-extended UTF-8; otherwise returns FALSE.</source>
          <target state="translated">trueを返す場合&lt;a href=&quot;perlapi#is_utf8_invariant_string&quot;&gt;はperlapiに「is_utf8_invariant_string」&lt;/a&gt;最初のための戻りFALSE &lt;code&gt;len&lt;/code&gt; が文字列のバイト &lt;code&gt;s&lt;/code&gt; が、彼らはそれにもかかわらず、ある、法的Perlの拡張UTF-8; それ以外の場合はFALSEを返します。</target>
        </trans-unit>
        <trans-unit id="3369ecb85791a580960d6df3bf0242855de4e972" translate="yes" xml:space="preserve">
          <source>Returns TRUE if the first &lt;code&gt;len&lt;/code&gt; bytes of string &lt;code&gt;s&lt;/code&gt; form a valid Perl-extended-UTF-8 string; returns FALSE otherwise. If &lt;code&gt;len&lt;/code&gt; is 0, it will be calculated using &lt;code&gt;strlen(s)&lt;/code&gt; (which means if you use this option, that &lt;code&gt;s&lt;/code&gt; can't have embedded &lt;code&gt;NUL&lt;/code&gt; characters and has to have a terminating &lt;code&gt;NUL&lt;/code&gt; byte). Note that all characters being ASCII constitute 'a valid UTF-8 string'.</source>
          <target state="translated">文字列 &lt;code&gt;s&lt;/code&gt; 最初の &lt;code&gt;len&lt;/code&gt; バイトが有効なPerl-extended-UTF-8文字列を形成する場合にTRUEを返します。それ以外の場合はFALSEを返します。 &lt;code&gt;len&lt;/code&gt; が0の場合、 &lt;code&gt;strlen(s)&lt;/code&gt; を使用して計算されます（つまり、このオプションを使用する場合、 &lt;code&gt;s&lt;/code&gt; に &lt;code&gt;NUL&lt;/code&gt; 文字を埋め込むことはできず、終了 &lt;code&gt;NUL&lt;/code&gt; バイトが必要です）。ASCIIであるすべての文字は、「有効なUTF-8文字列」を構成することに注意してください。</target>
        </trans-unit>
        <trans-unit id="2e65f39d44c2bc3919a77d7f372c483cee447adb" translate="yes" xml:space="preserve">
          <source>Returns TRUE if the first &lt;code&gt;len&lt;/code&gt; bytes of string &lt;code&gt;s&lt;/code&gt; form a valid UTF-8 string, subject to the restrictions imposed by &lt;code&gt;flags&lt;/code&gt;; returns FALSE otherwise. If &lt;code&gt;len&lt;/code&gt; is 0, it will be calculated using &lt;code&gt;strlen(s)&lt;/code&gt; (which means if you use this option, that &lt;code&gt;s&lt;/code&gt; can't have embedded &lt;code&gt;NUL&lt;/code&gt; characters and has to have a terminating &lt;code&gt;NUL&lt;/code&gt; byte). Note that all characters being ASCII constitute 'a valid UTF-8 string'.</source>
          <target state="translated">文字列 &lt;code&gt;s&lt;/code&gt; 最初の &lt;code&gt;len&lt;/code&gt; バイトが有効なUTF-8文字列を形成する場合、 &lt;code&gt;flags&lt;/code&gt; によって課せられる制限に従ってTRUEを返します。それ以外の場合はFALSEを返します。 &lt;code&gt;len&lt;/code&gt; が0の場合、 &lt;code&gt;strlen(s)&lt;/code&gt; を使用して計算されます（つまり、このオプションを使用する場合、 &lt;code&gt;s&lt;/code&gt; に &lt;code&gt;NUL&lt;/code&gt; 文字を埋め込むことはできず、終了 &lt;code&gt;NUL&lt;/code&gt; バイトが必要です）。 ASCIIであるすべての文字は、「有効なUTF-8文字列」を構成することに注意してください。</target>
        </trans-unit>
        <trans-unit id="1eeadc7b0a8131444cf439e2e5bad7bbb8ac70e2" translate="yes" xml:space="preserve">
          <source>Returns TRUE if the first &lt;code&gt;len&lt;/code&gt; bytes of string &lt;code&gt;s&lt;/code&gt; form a valid UTF-8-encoded string that conforms to &lt;a href=&quot;http://www.unicode.org/versions/corrigendum9.html&quot;&gt;Unicode Corrigendum #9&lt;/a&gt;; otherwise it returns FALSE. If &lt;code&gt;len&lt;/code&gt; is 0, it will be calculated using &lt;code&gt;strlen(s)&lt;/code&gt; (which means if you use this option, that &lt;code&gt;s&lt;/code&gt; can't have embedded &lt;code&gt;NUL&lt;/code&gt; characters and has to have a terminating &lt;code&gt;NUL&lt;/code&gt; byte). Note that all characters being ASCII constitute 'a valid UTF-8 string'.</source>
          <target state="translated">文字列 &lt;code&gt;s&lt;/code&gt; 最初の &lt;code&gt;len&lt;/code&gt; バイトが&lt;a href=&quot;http://www.unicode.org/versions/corrigendum9.html&quot;&gt;Unicode正誤表＃9に&lt;/a&gt;準拠する有効なUTF-8エンコード文字列を形成する場合にTRUEを返します。それ以外の場合はFALSEを返します。 &lt;code&gt;len&lt;/code&gt; が0の場合、 &lt;code&gt;strlen(s)&lt;/code&gt; を使用して計算されます（つまり、このオプションを使用する場合、 &lt;code&gt;s&lt;/code&gt; に &lt;code&gt;NUL&lt;/code&gt; 文字を埋め込むことはできず、終了 &lt;code&gt;NUL&lt;/code&gt; バイトが必要です）。 ASCIIであるすべての文字は、「有効なUTF-8文字列」を構成することに注意してください。</target>
        </trans-unit>
        <trans-unit id="bfe96d433af32c3e1b115482badbc7cd871d72b7" translate="yes" xml:space="preserve">
          <source>Returns TRUE if the first &lt;code&gt;len&lt;/code&gt; bytes of string &lt;code&gt;s&lt;/code&gt; form a valid UTF-8-encoded string that is fully interchangeable by any application using Unicode rules; otherwise it returns FALSE. If &lt;code&gt;len&lt;/code&gt; is 0, it will be calculated using &lt;code&gt;strlen(s)&lt;/code&gt; (which means if you use this option, that &lt;code&gt;s&lt;/code&gt; can't have embedded &lt;code&gt;NUL&lt;/code&gt; characters and has to have a terminating &lt;code&gt;NUL&lt;/code&gt; byte). Note that all characters being ASCII constitute 'a valid UTF-8 string'.</source>
          <target state="translated">文字列 &lt;code&gt;s&lt;/code&gt; 最初の &lt;code&gt;len&lt;/code&gt; バイトが、Unicodeルールを使用する任意のアプリケーションで完全に交換可能な有効なUTF-8エンコード文字列を形成する場合にTRUEを返します。それ以外の場合はFALSEを返します。 &lt;code&gt;len&lt;/code&gt; が0の場合、 &lt;code&gt;strlen(s)&lt;/code&gt; を使用して計算されます（つまり、このオプションを使用する場合、 &lt;code&gt;s&lt;/code&gt; に &lt;code&gt;NUL&lt;/code&gt; 文字を埋め込むことはできず、終了 &lt;code&gt;NUL&lt;/code&gt; バイトが必要です）。 ASCIIであるすべての文字は、「有効なUTF-8文字列」を構成することに注意してください。</target>
        </trans-unit>
        <trans-unit id="9389eac211987c01151fa7a97c1a5559a1076348" translate="yes" xml:space="preserve">
          <source>Returns TRUE if the first &lt;code&gt;len&lt;/code&gt; bytes of the string &lt;code&gt;s&lt;/code&gt; are the same regardless of the UTF-8 encoding of the string (or UTF-EBCDIC encoding on EBCDIC machines); otherwise it returns FALSE. That is, it returns TRUE if they are UTF-8 invariant. On ASCII-ish machines, all the ASCII characters and only the ASCII characters fit this definition. On EBCDIC machines, the ASCII-range characters are invariant, but so also are the C1 controls.</source>
          <target state="translated">文字列 &lt;code&gt;s&lt;/code&gt; UTF-8エンコーディング（またはEBCDICマシンではUTF-EBCDICエンコーディング）に関係なく、文字列sの最初の &lt;code&gt;len&lt;/code&gt; バイトが同じである場合にTRUEを返します。それ以外の場合はFALSEを返します。つまり、UTF-8不変の場合、TRUEを返します。ASCII風のマシンでは、すべてのASCII文字とASCII文字のみがこの定義に適合します。EBCDICマシンでは、ASCII範囲の文字は不変ですが、C1コントロールも不変です。</target>
        </trans-unit>
        <trans-unit id="9e82ebad0d664e9456fc8b45e1158bc9b2bccc60" translate="yes" xml:space="preserve">
          <source>Returns TRUE if the fixed-width buffer starting at &lt;code&gt;s&lt;/code&gt; with length &lt;code&gt;len&lt;/code&gt; is entirely valid UTF-8, subject to the restrictions given by &lt;code&gt;flags&lt;/code&gt;; otherwise it returns FALSE.</source>
          <target state="translated">&lt;code&gt;s&lt;/code&gt; で始まり長さが &lt;code&gt;len&lt;/code&gt; の固定幅バッファーが完全に有効なUTF-8である場合、 &lt;code&gt;flags&lt;/code&gt; によって指定された制限に従ってTRUEを返します。それ以外の場合はFALSEを返します。</target>
        </trans-unit>
        <trans-unit id="9207286e99fede61c8f119ac35db00d5ebabfdb9" translate="yes" xml:space="preserve">
          <source>Returns TRUE if the remote server supports the given command.</source>
          <target state="translated">リモートサーバが指定したコマンドをサポートしている場合に TRUE を返します。</target>
        </trans-unit>
        <trans-unit id="fd4c3e721557b5c97a46d6c7f452fa703131e69f" translate="yes" xml:space="preserve">
          <source>Returns TRUE if the terminator was found, else returns FALSE.</source>
          <target state="translated">ターミネータが見つかった場合に TRUE を、そうでない場合に FALSE を返します。</target>
        </trans-unit>
        <trans-unit id="86dd86eb01ddd05d19d1e07bf5b9874c6c8147fb" translate="yes" xml:space="preserve">
          <source>Returns TRUE if there are any filters applied to the DBM associated with &lt;code&gt;$db&lt;/code&gt; . Otherwise returns FALSE.</source>
          <target state="translated">&lt;code&gt;$db&lt;/code&gt; 関連付けられたDBMに適用されているフィルターがある場合、TRUEを返します。それ以外の場合はFALSEを返します。</target>
        </trans-unit>
        <trans-unit id="12dec6ca322b394b68240bb4e94034cc07acd943" translate="yes" xml:space="preserve">
          <source>Returns TRUE if there are any filters applied to the DBM associated with &lt;code&gt;$db&lt;/code&gt;. Otherwise returns FALSE.</source>
          <target state="translated">&lt;code&gt;$db&lt;/code&gt; 関連付けられたDBMに適用されたフィルターがある場合、TRUEを返します。それ以外の場合はFALSEを返します。</target>
        </trans-unit>
        <trans-unit id="30a9ef16bb3602636a0c4bd0e8ea4e677a26c1f7" translate="yes" xml:space="preserve">
          <source>Returns a $command line which just runs a single test without Test::Harness. No checks are done on the results, they're just printed.</source>
          <target state="translated">Test::Harness を使用せずに単一のテストを実行するだけの $command 行を返します。結果のチェックは行われず、ただ表示されるだけです。</target>
        </trans-unit>
        <trans-unit id="5829af1348c8ee2d3665fe45c3621cf88b170dca" translate="yes" xml:space="preserve">
          <source>Returns a $command line which runs the given set of $tests with Test::Harness and the given $perl.</source>
          <target state="translated">Test::Harness と与えられた $perl で与えられた $tests のセットを実行する $command line を返します。</target>
        </trans-unit>
        <trans-unit id="3a40c2db110c83edc09c9f6521af47e1da86c94d" translate="yes" xml:space="preserve">
          <source>Returns a 13-element list giving the status info for a file, either the file opened via FILEHANDLE or DIRHANDLE, or named by EXPR. If EXPR is omitted, it stats &lt;a href=&quot;perlvar#%24_&quot;&gt;&lt;code&gt;$_&lt;/code&gt;&lt;/a&gt; (not &lt;code&gt;_&lt;/code&gt;!). Returns the empty list if &lt;a href=&quot;#stat-FILEHANDLE&quot;&gt;&lt;code&gt;stat&lt;/code&gt;&lt;/a&gt; fails. Typically used as follows:</source>
          <target state="translated">FILEHANDLEまたはDIRHANDLEを介して開かれたファイル、またはEXPRによって名前が付けられたファイルのステータス情報を示す13要素のリストを返します。EXPRを省略すると、&lt;a href=&quot;perlvar#%24_&quot;&gt; &lt;code&gt;$_&lt;/code&gt; &lt;/a&gt;（ &lt;code&gt;_&lt;/code&gt; ではありません！）を統計します。&lt;a href=&quot;#stat-FILEHANDLE&quot;&gt; &lt;code&gt;stat&lt;/code&gt; &lt;/a&gt;が失敗した場合、空のリストを返します。通常、次のように使用されます。</target>
        </trans-unit>
        <trans-unit id="289c211dd90a016eae30bb66441a63ab247f6da9" translate="yes" xml:space="preserve">
          <source>Returns a 13-element list giving the status info for a file, either the file opened via FILEHANDLE or DIRHANDLE, or named by EXPR. If EXPR is omitted, it stats &lt;code&gt;$_&lt;/code&gt; (not &lt;code&gt;_&lt;/code&gt; !). Returns the empty list if &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; fails. Typically used as follows:</source>
          <target state="translated">ファイルのステータス情報を示す13要素のリストを返します。FILEHANDLEまたはDIRHANDLEを介して開かれたファイル、またはEXPRによって名前が付けられたファイルのいずれかです。EXPRを省略した場合、 &lt;code&gt;$_&lt;/code&gt; （ &lt;code&gt;_&lt;/code&gt; ではなく！）が統計されます。 &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; が失敗した場合、空のリストを返します。通常、次のように使用されます。</target>
        </trans-unit>
        <trans-unit id="2ec72fef3a1a2c2a6ed8b2ae5861981436db00c7" translate="yes" xml:space="preserve">
          <source>Returns a 13-element list giving the status info for a file, either the file opened via FILEHANDLE or DIRHANDLE, or named by EXPR. If EXPR is omitted, it stats &lt;code&gt;$_&lt;/code&gt; (not &lt;code&gt;_&lt;/code&gt; !). Returns the empty list if &lt;code&gt;&lt;a href=&quot;stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; fails. Typically used as follows:</source>
          <target state="translated">ファイルのステータス情報を示す13要素のリストを返します。FILEHANDLEまたはDIRHANDLEを介して開かれたファイル、またはEXPRによって名前が付けられたファイルのいずれかです。EXPRを省略した場合、 &lt;code&gt;$_&lt;/code&gt; （ &lt;code&gt;_&lt;/code&gt; ではなく！）が統計されます。 &lt;code&gt;&lt;a href=&quot;stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; が失敗した場合、空のリストを返します。通常、次のように使用されます。</target>
        </trans-unit>
        <trans-unit id="078c2738638e39a25c2582868baa02e701ab1516" translate="yes" xml:space="preserve">
          <source>Returns a 32 bit integer representing the hash value of the string passed in. This value is only reliable for the lifetime of the process. It may be different depending on invocation, environment variables, perl version, architectures, and build options.</source>
          <target state="translated">渡された文字列のハッシュ値を表す32ビット整数を返します。この値は、プロセスの寿命の間だけ信頼性があります。呼び出し、環境変数、Perl のバージョン、アーキテクチャ、ビルドオプションによって異なる場合があります。</target>
        </trans-unit>
        <trans-unit id="0e62e0afcdc57c3924bdd7b1920314479b475d8e" translate="yes" xml:space="preserve">
          <source>Returns a 44 character description of this module. Only available for modules listed in The Module List (CPAN/modules/00modlist.long.html or 00modlist.long.txt.gz)</source>
          <target state="translated">このモジュールの44文字の説明を返します。モジュールリスト (CPAN/modules/00modlist.long.html または 00modlist.long.txt.gz)にリストされているモジュールでのみ利用可能です。</target>
        </trans-unit>
        <trans-unit id="2159034bcd08ab99234b31a03ecf8dc70d5104f2" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;TAP::Parser::Aggregator&quot;&gt;TAP::Parser::Aggregator&lt;/a&gt; containing the test results.</source>
          <target state="translated">テスト結果を含む&lt;a href=&quot;TAP::Parser::Aggregator&quot;&gt;TAP :: Parser :: Aggregator&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="e390c51112c15ffbe5db64a2c3bcd38009f02ae9" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;parser/aggregator&quot;&gt;TAP::Parser::Aggregator&lt;/a&gt; containing the test results.</source>
          <target state="translated">テスト結果を含む&lt;a href=&quot;parser/aggregator&quot;&gt;TAP :: Parser :: Aggregator&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="a424a5b675f3ec7726f5e9df584409c954569b1f" translate="yes" xml:space="preserve">
          <source>Returns a B::PADLIST object under Perl 5.18 or higher, or a B::AV in earlier versions.</source>
          <target state="translated">Perl 5.18以上ではB::PADLISTオブジェクト、それ以前のバージョンではB::AVを返します。</target>
        </trans-unit>
        <trans-unit id="10d9cc475b1cfda01f0a1f5c2639cf52a188395a" translate="yes" xml:space="preserve">
          <source>Returns a B::PADLIST object.</source>
          <target state="translated">B::PADLIST オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="54a87a96948366f5ea0c054b9ad57a438c86d7b6" translate="yes" xml:space="preserve">
          <source>Returns a Benchmark object.</source>
          <target state="translated">ベンチマークオブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="4ced754e5fbc28d1e4b57de20302b40996dde3f5" translate="yes" xml:space="preserve">
          <source>Returns a Boolean value telling whether EXPR has a value other than the undefined value &lt;a href=&quot;#undef-EXPR&quot;&gt;&lt;code&gt;undef&lt;/code&gt;&lt;/a&gt;. If EXPR is not present, &lt;a href=&quot;perlvar#%24_&quot;&gt;&lt;code&gt;$_&lt;/code&gt;&lt;/a&gt; is checked.</source>
          <target state="translated">EXPRに未定義の値&lt;a href=&quot;#undef-EXPR&quot;&gt; &lt;code&gt;undef&lt;/code&gt; &lt;/a&gt;以外の値があるかどうかを示すブール値を返します。EXPRが存在しない場合、&lt;a href=&quot;perlvar#%24_&quot;&gt; &lt;code&gt;$_&lt;/code&gt; &lt;/a&gt;がチェックされます。</target>
        </trans-unit>
        <trans-unit id="a71b4c05ed137f2d3e8d6342391043a58f5a5b03" translate="yes" xml:space="preserve">
          <source>Returns a Boolean value telling whether EXPR has a value other than the undefined value &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;. If EXPR is not present, &lt;code&gt;$_&lt;/code&gt; is checked.</source>
          <target state="translated">EXPRに未定義の値 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 以外の値があるかどうかを示すブール値を返します。EXPRが存在しない場合、 &lt;code&gt;$_&lt;/code&gt; がチェックされます。</target>
        </trans-unit>
        <trans-unit id="0836f5ca4f174fe06136c589e27a3f9ed4bde956" translate="yes" xml:space="preserve">
          <source>Returns a Boolean value telling whether EXPR has a value other than the undefined value &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;. If EXPR is not present, &lt;code&gt;$_&lt;/code&gt; is checked.</source>
          <target state="translated">EXPRに未定義の値 &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 以外の値があるかどうかを示すブール値を返します。EXPRが存在しない場合、 &lt;code&gt;$_&lt;/code&gt; がチェックされます。</target>
        </trans-unit>
        <trans-unit id="5bbcda9d66da640b9b9960a3c98c45e42a946c0b" translate="yes" xml:space="preserve">
          <source>Returns a CC flag that tells the CC to emit a separate debugging symbol file when compiling an object file.</source>
          <target state="translated">オブジェクトファイルをコンパイルする際に、別のデバッグシンボルファイルを発行するようにCCに指示するCCフラグを返します。</target>
        </trans-unit>
        <trans-unit id="aab2656aa87969cc9dc5ce3c20e33dc2c8b93e83" translate="yes" xml:space="preserve">
          <source>Returns a Digest::SHA object representing the SHA state contained in</source>
          <target state="translated">に含まれる SHA の状態を表す Digest::SHA オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="63f6546706550d09611771d933ff33e3dea07df0" translate="yes" xml:space="preserve">
          <source>Returns a Digest::SHA object that results from calling</source>
          <target state="translated">を呼び出した結果の Digest::SHA オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="ef380fd534237982692ba4a40419cc3751171608" translate="yes" xml:space="preserve">
          <source>Returns a Perl scalar from $x. It is used automatically whenever a scalar is needed, for instance in array index operations.</source>
          <target state="translated">Perl のスカラを $x から返します。これは、スカラが必要なとき、例えば配列のインデックス操作などで自動的に使用されます。</target>
        </trans-unit>
        <trans-unit id="d939a263bcad05b96eee0e06b45a6d6cd1c9d059" translate="yes" xml:space="preserve">
          <source>Returns a Perl scalar number representing the number OBJ as close as possible. Since Perl scalars have limited precision, the returned value might not be exactly the same as OBJ.</source>
          <target state="translated">OBJを表すPerlのスカラ値をできるだけ近い値で返します。Perl のスカラは精度に制限があるため、返される値は OBJ と全く同じではないかもしれません。</target>
        </trans-unit>
        <trans-unit id="b63524d4a4118ca3217432bfc25b7c379525fb60" translate="yes" xml:space="preserve">
          <source>Returns a Perl value which may be used instead of the corresponding regular expression, or &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if its argument is not recognised.</source>
          <target state="translated">対応する正規表現の代わりに使用できるPerl値を返します。引数が認識されない場合は &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="442e12fb921df1b226c713f9c15d6c602cf12d9b" translate="yes" xml:space="preserve">
          <source>Returns a Perl value which may be used instead of the corresponding regular expression, or &lt;code&gt;undef&lt;/code&gt; if its argument is not recognized.</source>
          <target state="translated">対応する正規表現の代わりに使用できるPerl値を返します。引数が認識されない場合は、 &lt;code&gt;undef&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="d7f67979a4434475a7e25e72d10c05204dab5944" translate="yes" xml:space="preserve">
          <source>Returns a SV a dump of |depth| frames of the call stack, skipping the |skip| innermost ones. depth of 20 is usually enough.</source>
          <target state="translated">呼び出しスタックの|depth| フレームのダンプを SV で返します。</target>
        </trans-unit>
        <trans-unit id="84697339eee65b741749a67c4b0c169c3cd83c2b" translate="yes" xml:space="preserve">
          <source>Returns a SV containing a dump of &lt;code&gt;depth&lt;/code&gt; frames of the call stack, skipping the &lt;code&gt;skip&lt;/code&gt; innermost ones. &lt;code&gt;depth&lt;/code&gt; of 20 is usually enough.</source>
          <target state="translated">呼び出しスタックの &lt;code&gt;depth&lt;/code&gt; フレームのダンプを含むSVを返し、最も内側の &lt;code&gt;skip&lt;/code&gt; ます。通常、 &lt;code&gt;depth&lt;/code&gt; は20で十分です。</target>
        </trans-unit>
        <trans-unit id="7b38c54c50762d0d3766b9c69ecfd82a584d3bb7" translate="yes" xml:space="preserve">
          <source>Returns a SV describing what the SV passed in is a reference to.</source>
          <target state="translated">SV が何を参照しているかを記述した SV を返します。</target>
        </trans-unit>
        <trans-unit id="c6768357aea5c7d88a47d38f0e6a279e8cf943bc" translate="yes" xml:space="preserve">
          <source>Returns a Test::Builder object representing the current state of the test.</source>
          <target state="translated">テストの現在の状態を表す Test::Builder オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="98a91fa53370da7d8b3e71bd0a2931bb0d89f6ca" translate="yes" xml:space="preserve">
          <source>Returns a U32 indicating whether the pointer to the string buffer is offset. This hack is used internally to speed up removal of characters from the beginning of a &lt;code&gt;SvPV&lt;/code&gt;. When &lt;code&gt;SvOOK&lt;/code&gt; is true, then the start of the allocated string buffer is actually &lt;code&gt;SvOOK_offset()&lt;/code&gt; bytes before &lt;code&gt;SvPVX&lt;/code&gt;. This offset used to be stored in &lt;code&gt;SvIVX&lt;/code&gt;, but is now stored within the spare part of the buffer.</source>
          <target state="translated">文字列バッファへのポインタがオフセットされているかどうかを示すU32を返します。このハックは、 &lt;code&gt;SvPV&lt;/code&gt; の先頭からの文字の削除を高速化するために内部的に使用されます。 &lt;code&gt;SvOOK&lt;/code&gt; がtrueの場合、割り当てられた文字列バッファーの開始は、実際には &lt;code&gt;SvOOK_offset()&lt;/code&gt; 前の &lt;code&gt;SvPVX&lt;/code&gt; （）バイトです。このオフセットは、 &lt;code&gt;SvIVX&lt;/code&gt; はSvIVXに格納されていましたが、現在はバッファのスペア部分に格納されています。</target>
        </trans-unit>
        <trans-unit id="6b725a6e91e3175c5f263c7a33b2dd952f62bd6a" translate="yes" xml:space="preserve">
          <source>Returns a U32 indicating whether the pointer to the string buffer is offset. This hack is used internally to speed up removal of characters from the beginning of a SvPV. When SvOOK is true, then the start of the allocated string buffer is actually &lt;code&gt;SvOOK_offset()&lt;/code&gt; bytes before SvPVX. This offset used to be stored in SvIVX, but is now stored within the spare part of the buffer.</source>
          <target state="translated">文字列バッファへのポインタがオフセットされているかどうかを示すU32を返します。このハックは、SvPVの先頭からのキャラクターの削除を高速化するために内部的に使用されます。SvOOKがtrueの場合、割り当てられた文字列バッファーの先頭は、実際には &lt;code&gt;SvOOK_offset()&lt;/code&gt; 前のSvOOK_offset （）バイトです。このオフセットは以前はSvIVXに格納されていましたが、現在はバッファーのスペア部分に格納されています。</target>
        </trans-unit>
        <trans-unit id="1bc093229f26a252e76d58b28c1e3335fc644b9e" translate="yes" xml:space="preserve">
          <source>Returns a U32 value indicating the UTF-8 status of an SV. If things are set-up properly, this indicates whether or not the SV contains UTF-8 encoded data. You should use this</source>
          <target state="translated">SV の UTF-8 状態を示す U32 値を返します。正しく設定されていれば、SV に UTF-8 エンコードされたデータが含まれているかどうかを示します。これを使用してください。</target>
        </trans-unit>
        <trans-unit id="fb51edcd90ab824e684efc4efb16d677a578ca29" translate="yes" xml:space="preserve">
          <source>Returns a U32 value indicating whether the SV contains a character string.</source>
          <target state="translated">SV が文字列を含むかどうかを示す U32 値を返します。</target>
        </trans-unit>
        <trans-unit id="a5231fcdd123cafb5389cb102ea28e6b610241a3" translate="yes" xml:space="preserve">
          <source>Returns a U32 value indicating whether the SV contains a character string. Checks the &lt;b&gt;private&lt;/b&gt; setting. Use &lt;code&gt;SvPOK&lt;/code&gt; instead.</source>
          <target state="translated">SVに文字列が含まれているかどうかを示すU32値を返します。チェックし&lt;b&gt;プライベート&lt;/b&gt;設定。代わりに &lt;code&gt;SvPOK&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="ebd2b6e3d5583cc0154203cda60cf1640fa9722d" translate="yes" xml:space="preserve">
          <source>Returns a U32 value indicating whether the SV contains a double.</source>
          <target state="translated">SV が double を含むかどうかを示す U32 値を返します。</target>
        </trans-unit>
        <trans-unit id="66ecaa4936290bb692aef7d62b280c98eca97624" translate="yes" xml:space="preserve">
          <source>Returns a U32 value indicating whether the SV contains a double. Checks the &lt;b&gt;private&lt;/b&gt; setting. Use &lt;code&gt;SvNOK&lt;/code&gt; instead.</source>
          <target state="translated">SVにdoubleが含まれているかどうかを示すU32値を返します。チェックし&lt;b&gt;プライベート&lt;/b&gt;設定。代わりに &lt;code&gt;SvNOK&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="6c4405c32c509ff06f034a5c5b10bb25707c59fb" translate="yes" xml:space="preserve">
          <source>Returns a U32 value indicating whether the SV contains a number, integer or double.</source>
          <target state="translated">SV が数値、整数、倍数のいずれを含むかを示す U32 値を返します。</target>
        </trans-unit>
        <trans-unit id="ad5e936ea4eeca57a5da99afcf9f16adcf4ede7c" translate="yes" xml:space="preserve">
          <source>Returns a U32 value indicating whether the SV contains a number, integer or double. Checks the &lt;b&gt;private&lt;/b&gt; setting. Use &lt;code&gt;SvNIOK&lt;/code&gt; instead.</source>
          <target state="translated">SVに数値、整数、またはdoubleが含まれているかどうかを示すU32値を返します。チェックし&lt;b&gt;プライベート&lt;/b&gt;設定。代わりに &lt;code&gt;SvNIOK&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="4f6a61eafc42cc19e0184cc99c2044eff3febadc" translate="yes" xml:space="preserve">
          <source>Returns a U32 value indicating whether the SV contains an integer.</source>
          <target state="translated">SV が整数を含むかどうかを示す U32 値を返します。</target>
        </trans-unit>
        <trans-unit id="cdd8f0a8bc1fc17c47a9a228bdaa77321017185e" translate="yes" xml:space="preserve">
          <source>Returns a U32 value indicating whether the SV contains an integer. Checks the &lt;b&gt;private&lt;/b&gt; setting. Use &lt;code&gt;SvIOK&lt;/code&gt; instead.</source>
          <target state="translated">SVに整数が含まれているかどうかを示すU32値を返します。チェックし&lt;b&gt;プライベート&lt;/b&gt;設定。代わりに &lt;code&gt;SvIOK&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="2499712c178f4d22d2edb40ec424e1b89f24f911" translate="yes" xml:space="preserve">
          <source>Returns a U32 value indicating whether the SV is Copy-On-Write (either shared hash key scalars, or full Copy On Write scalars if 5.9.0 is configured for COW).</source>
          <target state="translated">SV がコピーオンライトかどうかを示す U32 値を返します(5.9.0 が COW に設定されている場合は、共有ハッシュキースカラ、または完全なコピーオンライトスカラのいずれか)。</target>
        </trans-unit>
        <trans-unit id="fe8da2b4b2fa02649f81a16d557e3278d57dad57" translate="yes" xml:space="preserve">
          <source>Returns a U32 value indicating whether the value is defined. This is only meaningful for scalars.</source>
          <target state="translated">値が定義されているかどうかを示すU32値を返します。これはスカラに対してのみ意味を持ちます。</target>
        </trans-unit>
        <trans-unit id="fcc63de18f950cf36aa68d73532240d583a64a9e" translate="yes" xml:space="preserve">
          <source>Returns a binary string representation of the number. See also from_bin().</source>
          <target state="translated">数値のバイナリ文字列表現を返します。from_bin()も参照ください。</target>
        </trans-unit>
        <trans-unit id="7db7cf06b30a633c79d72700fa34db8ab8260cb5" translate="yes" xml:space="preserve">
          <source>Returns a blessed object reference which the user can then use to send the control strings to the terminal using &lt;b&gt;Tputs&lt;/b&gt; and &lt;b&gt;Tgoto&lt;/b&gt;.</source>
          <target state="translated">ユーザーが&lt;b&gt;Tputs&lt;/b&gt;と&lt;b&gt;Tgoto&lt;/b&gt;を使用して制御文字列を端末に送信するために使用できるblessされたオブジェクト参照を返します。</target>
        </trans-unit>
        <trans-unit id="d051c95c402809419ae2ea934579ebb0f6e885b8" translate="yes" xml:space="preserve">
          <source>Returns a bool as to whether or not the sequence of bytes from &lt;code&gt;s&lt;/code&gt; up to but not including &lt;code&gt;send&lt;/code&gt; form a &quot;script run&quot;. &lt;code&gt;utf8_target&lt;/code&gt; is TRUE iff the sequence starting at &lt;code&gt;s&lt;/code&gt; is to be treated as UTF-8. To be precise, except for two degenerate cases given below, this function returns TRUE iff all code points in it come from any combination of three &quot;scripts&quot; given by the Unicode &quot;Script Extensions&quot; property: Common, Inherited, and possibly one other. Additionally all decimal digits must come from the same consecutive sequence of 10.</source>
          <target state="translated">&lt;code&gt;s&lt;/code&gt; から &lt;code&gt;send&lt;/code&gt; までのバイトシーケンスが「スクリプト実行」を形成するかどうかに関するブール値を返します。 &lt;code&gt;s&lt;/code&gt; で始まるシーケンスがUTF-8として扱われる場合、 &lt;code&gt;utf8_target&lt;/code&gt; はTRUEです。正確には、以下に示す2つの縮退した場合を除いて、この関数は、Unicodeの「ScriptExtensions」プロパティで指定された3つの「スクリプト」の任意の組み合わせ（共通、継承、場合によっては他の1つ）からすべてのコードポイントが取得された場合にTRUEを返します。さらに、すべての10進数は、10の同じ連続シーケンスからのものである必要があります。</target>
        </trans-unit>
        <trans-unit id="78a15a12352318889d6990a965effdfa78241deb" translate="yes" xml:space="preserve">
          <source>Returns a bool giving whether or not the PV in &lt;code&gt;sv&lt;/code&gt; is to be treated as being encoded in UTF-8.</source>
          <target state="translated">&lt;code&gt;sv&lt;/code&gt; のPV がUTF-8でエンコードされているものとして扱われるかどうかを示すブール値を返します。</target>
        </trans-unit>
        <trans-unit id="07007b5c528b418e598c85ad9c23a78efd0e869d" translate="yes" xml:space="preserve">
          <source>Returns a bool indicating whether this typemap is entirely empty.</source>
          <target state="translated">タイプマップが完全に空であるかどうかを示すboolを返します。</target>
        </trans-unit>
        <trans-unit id="71fc07c0447f64425adb54b289d65069de051cdf" translate="yes" xml:space="preserve">
          <source>Returns a boolean as to whether or not warnings are enabled for the warning category &lt;code&gt;w&lt;/code&gt;. If the category is by default enabled even if not within the scope of &lt;code&gt;use warnings&lt;/code&gt;, instead use the &lt;a href=&quot;#ckWARN_d&quot;&gt;&quot;ckWARN_d&quot;&lt;/a&gt; macro.</source>
          <target state="translated">警告カテゴリ &lt;code&gt;w&lt;/code&gt; に対して警告が有効になっているかどうかに関するブール値を返します。 &lt;code&gt;use warnings&lt;/code&gt; の範囲内でなくても、カテゴリがデフォルトで有効になっている場合は、代わりに&lt;a href=&quot;#ckWARN_d&quot;&gt;「ckWARN_d」&lt;/a&gt;マクロを使用してください。</target>
        </trans-unit>
        <trans-unit id="09bc6bed79c633675772b31bc4fa3dca3eedabbc" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether Perl would evaluate the SV as true or false. See &lt;code&gt;&lt;a href=&quot;#SvOK&quot;&gt;&quot;SvOK&quot;&lt;/a&gt;&lt;/code&gt; for a defined/undefined test. Does not handle 'get' magic.</source>
          <target state="translated">PerlがSVをtrueまたはfalseとして評価するかどうかを示すブール値を返します。定義済み/未定義のテストについては、 &lt;code&gt;&lt;a href=&quot;#SvOK&quot;&gt;&quot;SvOK&quot;&lt;/a&gt;&lt;/code&gt; を参照してください。'get'マジックを処理しません。</target>
        </trans-unit>
        <trans-unit id="49a0e505cf9d3cfebfe905e01ba1c1506afb49f3" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether Perl would evaluate the SV as true or false. See &lt;code&gt;&lt;a href=&quot;#SvOK&quot;&gt;&quot;SvOK&quot;&lt;/a&gt;&lt;/code&gt; for a defined/undefined test. Handles 'get' magic unless the scalar is already &lt;code&gt;SvPOK&lt;/code&gt;, &lt;code&gt;SvIOK&lt;/code&gt; or &lt;code&gt;SvNOK&lt;/code&gt; (the public, not the private flags).</source>
          <target state="translated">PerlがSVをtrueまたはfalseとして評価するかどうかを示すブール値を返します。定義済み/未定義のテストについては、 &lt;code&gt;&lt;a href=&quot;#SvOK&quot;&gt;&quot;SvOK&quot;&lt;/a&gt;&lt;/code&gt; を参照してください。スカラーがすでに &lt;code&gt;SvPOK&lt;/code&gt; 、 &lt;code&gt;SvIOK&lt;/code&gt; 、または &lt;code&gt;SvNOK&lt;/code&gt; （プライベートフラグではなくパブリックフラグ）でない限り、「get」マジックを処理します。</target>
        </trans-unit>
        <trans-unit id="668940e83ff2919758ac366d8681b177e2201df1" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether Perl would evaluate the SV as true or false. See SvOK() for a defined/undefined test. Does not handle 'get' magic.</source>
          <target state="translated">Perl が SV を真と評価するか偽と評価するかを示すブール値を返します。定義済み/未定義のテストについては SvOK()を参照してください。get' マジックは扱いません。</target>
        </trans-unit>
        <trans-unit id="cd02b6c22910061fceaedd5fa468528ac5b1dd09" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether Perl would evaluate the SV as true or false. See SvOK() for a defined/undefined test. Handles 'get' magic unless the scalar is already SvPOK, SvIOK or SvNOK (the public, not the private flags).</source>
          <target state="translated">Perl が SV を真と評価するか偽と評価するかを示すブール値を返します。定義済み/未定義のテストについては SvOK()を参照してください。スカラが既に SvPOK,SvIOK,SvNOK (プライベートフラグではなくパブリックフラグ)でない限り、マジックの 'get' を処理します。</target>
        </trans-unit>
        <trans-unit id="7f02d0a25d86de18bb57f5e03b59dde94b0fed79" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether or not this module can actually generate colored output. This will be false if it could not load the modules needed for the current platform.</source>
          <target state="translated">このモジュールが実際に色付き出力を生成できるかどうかを示すブール値を返します。現在のプラットフォームに必要なモジュールをロードできなかった場合は false になります。</target>
        </trans-unit>
        <trans-unit id="ace1e66ae096c5c691e93ff90dfb3e10f7d8bdc2" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the SV (or the one it references) is a REGEXP.</source>
          <target state="translated">SV (または参照している SV)が REGEXP であるかどうかを示すブール値を返します。</target>
        </trans-unit>
        <trans-unit id="d480e6ec9e136a87d7eef30e55c4b80326f8e39f" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the SV contains a signed integer.</source>
          <target state="translated">SV が符号付き整数を含むかどうかを示すブール値を返します。</target>
        </trans-unit>
        <trans-unit id="3e14793b0a0f0860cac0b1fb7213102642df0e87" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the SV contains a v-string.</source>
          <target state="translated">SV が v-string を含むかどうかを示すブール値を返します。</target>
        </trans-unit>
        <trans-unit id="d23b2152485aef3ea2aa81e1117405592429acf1" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the SV contains an integer that must be interpreted as unsigned. A non-negative integer whose value is within the range of both an IV and a UV may be be flagged as either SvUOK or SVIOK.</source>
          <target state="translated">SV が符号なしとして解釈されなければならない整数を含むかどうかを示すブール値を返します。値が IV と UV の両方の範囲内にある非負の整数は、SvUOK または SVIOK としてフラグを立てることができます。</target>
        </trans-unit>
        <trans-unit id="0097527a63f74afbd5ee84dc0ce46793fd440ae9" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the SV contains an integer that must be interpreted as unsigned. A non-negative integer whose value is within the range of both an IV and a UV may be flagged as either &lt;code&gt;SvUOK&lt;/code&gt; or &lt;code&gt;SvIOK&lt;/code&gt;.</source>
          <target state="translated">SVに符号なしとして解釈する必要のある整数が含まれているかどうかを示すブール値を返します。値がIVとUVの両方の範囲内にある非負の整数には、 &lt;code&gt;SvUOK&lt;/code&gt; または &lt;code&gt;SvIOK&lt;/code&gt; のいずれかのフラグを立てることができます。</target>
        </trans-unit>
        <trans-unit id="263c966945712aface24be38355efccc0bf91800" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the SV is Copy-On-Write shared hash key scalar.</source>
          <target state="translated">SVがCopy-On-Write共有ハッシュキースカラかどうかを示すブール値を返します。</target>
        </trans-unit>
        <trans-unit id="e89f32874b6d95f19296b47af499fd6f09ad4b4c" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the SV is an RV pointing to a blessed object. If the SV is not an RV, or if the object is not blessed, then this will return false.</source>
          <target state="translated">SV が祝福されたオブジェクトを指す RV であるかどうかを示すブール値を返します。SV が RV でない場合、またはオブジェクトが祝福されていない場合は false を返します。</target>
        </trans-unit>
        <trans-unit id="f55645e10cb8cee78f3bc4bf7fc67c26bd963878" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the SV is an object reference and is derived from the specified class, respecting any &lt;code&gt;isa()&lt;/code&gt; method overloading it may have. Returns false if &lt;code&gt;sv&lt;/code&gt; is not a reference to an object, or is not derived from the specified class.</source>
          <target state="translated">SVがオブジェクト参照であり、指定されたクラスから派生したものであるかどうかを示すブール値を返します。これは、SVが持つ可能性のある &lt;code&gt;isa()&lt;/code&gt; メソッドのオーバーロードを尊重します。 &lt;code&gt;sv&lt;/code&gt; がオブジェクトへの参照でない場合、または指定されたクラスから派生していない場合はfalseを返します。</target>
        </trans-unit>
        <trans-unit id="04990515322216a31818edb155125651a72d5c2f" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the SV is blessed into the specified class.</source>
          <target state="translated">SV が指定されたクラスに祝福されているかどうかを示すブール値を返します。</target>
        </trans-unit>
        <trans-unit id="0af59aa44656303bd511d51fde294882427039f5" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the SV is blessed into the specified class. This does not check for subtypes; use &lt;code&gt;sv_derived_from&lt;/code&gt; to verify an inheritance relationship.</source>
          <target state="translated">SVが指定されたクラスに祝福されているかどうかを示すブール値を返します。これはサブタイプをチェックしません。 &lt;code&gt;sv_derived_from&lt;/code&gt; を使用して、継承関係を確認します。</target>
        </trans-unit>
        <trans-unit id="865393ef44edd13c13e1aec1f18c188fdd309444" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the SV is derived from the specified class</source>
          <target state="translated">SV が指定されたクラスから派生しているかどうかを示すブール値を返します。</target>
        </trans-unit>
        <trans-unit id="4b80301adae3b0f6838e222f02e0e77c5bb14dcf" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the SV performs a specific, named role. The SV can be a Perl object or the name of a Perl class.</source>
          <target state="translated">SV が特定の名前付きロールを実行するかどうかを示すブール値を返します。SV は Perl オブジェクトまたは Perl クラスの名前にすることができます。</target>
        </trans-unit>
        <trans-unit id="30818612d42e09399d46471e4f58bf49c93d7a0a" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the package (if provided) or any package (otherwise) is eligible for indexing by PAUSE, the Perl Authors Upload Server. Note This only checks for valid &lt;code&gt;package&lt;/code&gt; declarations, and does not take any ownership information into account.</source>
          <target state="translated">パッケージ（提供されている場合）または任意のパッケージ（それ以外の場合）がPAUSE（Perl Authors Upload Server）によるインデックス作成に適格であるかどうかを示すブール値を返します。注これは、有効な &lt;code&gt;package&lt;/code&gt; 宣言のみをチェックし、所有権情報は考慮しません。</target>
        </trans-unit>
        <trans-unit id="5fbf91f5e759ae1bbefa87328b78d816e0160f0f" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character can be the first character of an identifier. This is very close to, but not quite the same as the official Unicode property &lt;code&gt;XID_Start&lt;/code&gt; . The difference is that this returns true only if the input character also matches &lt;a href=&quot;#isWORDCHAR&quot;&gt;isWORDCHAR&lt;/a&gt;. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isIDFIRST_A&lt;/code&gt; , &lt;code&gt;isIDFIRST_L1&lt;/code&gt; , &lt;code&gt;isIDFIRST_uni&lt;/code&gt; , &lt;code&gt;isIDFIRST_utf8&lt;/code&gt; , &lt;code&gt;isIDFIRST_LC&lt;/code&gt; , &lt;code&gt;isIDFIRST_LC_uvchr&lt;/code&gt; , and &lt;code&gt;isIDFIRST_LC_utf8&lt;/code&gt; .</source>
          <target state="translated">指定された文字が識別子の最初の文字になることができるかどうかを示すブール値を返します。これは公式のUnicodeプロパティ &lt;code&gt;XID_Start&lt;/code&gt; に非常に近いですが、まったく同じではありません。違いは、入力文字が&lt;a href=&quot;#isWORDCHAR&quot;&gt;isWORDCHARに&lt;/a&gt;も一致する場合にのみtrueを返すことです。バリアント &lt;code&gt;isIDFIRST_A&lt;/code&gt; 、 &lt;code&gt;isIDFIRST_L1&lt;/code&gt; 、 &lt;code&gt;isIDFIRST_uni&lt;/code&gt; 、 &lt;code&gt;isIDFIRST_utf8&lt;/code&gt; 、 &lt;code&gt;isIDFIRST_LC&lt;/code&gt; 、 &lt;code&gt;isIDFIRST_LC_uvchr&lt;/code&gt; 、および &lt;code&gt;isIDFIRST_LC_utf8&lt;/code&gt; の説明については&lt;a href=&quot;#Character-classification&quot;&gt;、このセクション&lt;/a&gt;の上部を参照してください。</target>
        </trans-unit>
        <trans-unit id="8cccfd1f9259cea413a0a3382d7e42d35fba8c54" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character can be the first character of an identifier. This is very close to, but not quite the same as the official Unicode property &lt;code&gt;XID_Start&lt;/code&gt;. The difference is that this returns true only if the input character also matches &lt;a href=&quot;#isWORDCHAR&quot;&gt;&quot;isWORDCHAR&quot;&lt;/a&gt;. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isIDFIRST_A&lt;/code&gt;, &lt;code&gt;isIDFIRST_L1&lt;/code&gt;, &lt;code&gt;isIDFIRST_uvchr&lt;/code&gt;, &lt;code&gt;isIDFIRST_utf8&lt;/code&gt;, &lt;code&gt;isIDFIRST_utf8_safe&lt;/code&gt;, &lt;code&gt;isIDFIRST_LC&lt;/code&gt;, &lt;code&gt;isIDFIRST_LC_uvchr&lt;/code&gt;, &lt;code&gt;isIDFIRST_LC_utf8&lt;/code&gt;, and &lt;code&gt;isIDFIRST_LC_utf8_safe&lt;/code&gt;.</source>
          <target state="translated">指定された文字が識別子の最初の文字になり得るかどうかを示すブール値を返します。これは、公式のUnicodeプロパティ &lt;code&gt;XID_Start&lt;/code&gt; に非常に近いですが、まったく同じではありません。違いは、入力文字が&lt;a href=&quot;#isWORDCHAR&quot;&gt;「isWORDCHAR」に&lt;/a&gt;も一致する場合にのみtrueを返すことです。バリアント &lt;code&gt;isIDFIRST_A&lt;/code&gt; 、 &lt;code&gt;isIDFIRST_L1&lt;/code&gt; 、 &lt;code&gt;isIDFIRST_uvchr&lt;/code&gt; 、 &lt;code&gt;isIDFIRST_utf8&lt;/code&gt; 、 &lt;code&gt;isIDFIRST_utf8_safe&lt;/code&gt; 、 &lt;code&gt;isIDFIRST_LC&lt;/code&gt; 、 &lt;code&gt;isIDFIRST_LC_uvchr&lt;/code&gt; 、 &lt;code&gt;isIDFIRST_LC_utf8&lt;/code&gt; 、および &lt;code&gt;isIDFIRST_LC_utf8_safe&lt;/code&gt; の説明については&lt;a href=&quot;#Character-classification&quot;&gt;、このセクション&lt;/a&gt;の上部を参照してください。</target>
        </trans-unit>
        <trans-unit id="c40ef581f93d7f5544352568ae56e4d7279b6037" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character can be the second or succeeding character of an identifier. This is very close to, but not quite the same as the official Unicode property &lt;code&gt;XID_Continue&lt;/code&gt; . The difference is that this returns true only if the input character also matches &lt;a href=&quot;#isWORDCHAR&quot;&gt;isWORDCHAR&lt;/a&gt;. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isIDCONT_A&lt;/code&gt; , &lt;code&gt;isIDCONT_L1&lt;/code&gt; , &lt;code&gt;isIDCONT_uni&lt;/code&gt; , &lt;code&gt;isIDCONT_utf8&lt;/code&gt; , &lt;code&gt;isIDCONT_LC&lt;/code&gt; , &lt;code&gt;isIDCONT_LC_uvchr&lt;/code&gt; , and &lt;code&gt;isIDCONT_LC_utf8&lt;/code&gt; .</source>
          <target state="translated">指定された文字が識別子の2番目以降の文字になるかどうかを示すブール値を返します。これは公式のUnicodeプロパティ &lt;code&gt;XID_Continue&lt;/code&gt; に非常に近いですが、まったく同じではありません。違いは、入力文字が&lt;a href=&quot;#isWORDCHAR&quot;&gt;isWORDCHARに&lt;/a&gt;も一致する場合にのみtrueを返すことです。バリアント &lt;code&gt;isIDCONT_A&lt;/code&gt; 、 &lt;code&gt;isIDCONT_L1&lt;/code&gt; 、 &lt;code&gt;isIDCONT_uni&lt;/code&gt; 、 &lt;code&gt;isIDCONT_utf8&lt;/code&gt; 、 &lt;code&gt;isIDCONT_LC&lt;/code&gt; 、 &lt;code&gt;isIDCONT_LC_uvchr&lt;/code&gt; 、および &lt;code&gt;isIDCONT_LC_utf8&lt;/code&gt; の説明については&lt;a href=&quot;#Character-classification&quot;&gt;、このセクション&lt;/a&gt;の上部を参照してください。</target>
        </trans-unit>
        <trans-unit id="d3a30dcc9e2b3e1b5a72e6b3f35b9e93252165eb" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character can be the second or succeeding character of an identifier. This is very close to, but not quite the same as the official Unicode property &lt;code&gt;XID_Continue&lt;/code&gt;. The difference is that this returns true only if the input character also matches &lt;a href=&quot;#isWORDCHAR&quot;&gt;&quot;isWORDCHAR&quot;&lt;/a&gt;. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isIDCONT_A&lt;/code&gt;, &lt;code&gt;isIDCONT_L1&lt;/code&gt;, &lt;code&gt;isIDCONT_uvchr&lt;/code&gt;, &lt;code&gt;isIDCONT_utf8&lt;/code&gt;, &lt;code&gt;isIDCONT_utf8_safe&lt;/code&gt;, &lt;code&gt;isIDCONT_LC&lt;/code&gt;, &lt;code&gt;isIDCONT_LC_uvchr&lt;/code&gt;, &lt;code&gt;isIDCONT_LC_utf8&lt;/code&gt;, and &lt;code&gt;isIDCONT_LC_utf8_safe&lt;/code&gt;.</source>
          <target state="translated">指定された文字が識別子の2番目または後続の文字であるかどうかを示すブール値を返します。これは、公式のUnicodeプロパティ &lt;code&gt;XID_Continue&lt;/code&gt; に非常に近いですが、まったく同じではありません。違いは、入力文字が&lt;a href=&quot;#isWORDCHAR&quot;&gt;「isWORDCHAR」に&lt;/a&gt;も一致する場合にのみtrueを返すことです。バリアント &lt;code&gt;isIDCONT_A&lt;/code&gt; 、 &lt;code&gt;isIDCONT_L1&lt;/code&gt; 、 &lt;code&gt;isIDCONT_uvchr&lt;/code&gt; 、 &lt;code&gt;isIDCONT_utf8&lt;/code&gt; 、 &lt;code&gt;isIDCONT_utf8_safe&lt;/code&gt; 、 &lt;code&gt;isIDCONT_LC&lt;/code&gt; 、 &lt;code&gt;isIDCONT_LC_uvchr&lt;/code&gt; 、 &lt;code&gt;isIDCONT_LC_utf8&lt;/code&gt; 、および &lt;code&gt;isIDCONT_LC_utf8_safe&lt;/code&gt; 説明については&lt;a href=&quot;#Character-classification&quot;&gt;、このセクション&lt;/a&gt;の上部を参照してください。</target>
        </trans-unit>
        <trans-unit id="ce017fc967cd4b42d5b0d83e9ea0bfc787abd7a8" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is a character considered to be a blank, analogous to &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:blank:]]/&lt;/a&gt;&lt;/code&gt;. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isBLANK_A&lt;/code&gt; , &lt;code&gt;isBLANK_L1&lt;/code&gt; , &lt;code&gt;isBLANK_uni&lt;/code&gt; , &lt;code&gt;isBLANK_utf8&lt;/code&gt; , &lt;code&gt;isBLANK_LC&lt;/code&gt; , &lt;code&gt;isBLANK_LC_uvchr&lt;/code&gt; , and &lt;code&gt;isBLANK_LC_utf8&lt;/code&gt; . Note, however, that some platforms do not have the C library routine &lt;code&gt;isblank()&lt;/code&gt; . In these cases, the variants whose names contain &lt;code&gt;LC&lt;/code&gt; are the same as the corresponding ones without.</source>
          <target state="translated">指定された文字が &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:blank:]]/&lt;/a&gt;&lt;/code&gt; に類似した、空白と見なされる文字であるかどうかを示すブール値を返します。参照してください。&lt;a href=&quot;#Character-classification&quot;&gt;このセクションのトップを&lt;/a&gt;変種の説明については &lt;code&gt;isBLANK_A&lt;/code&gt; 、 &lt;code&gt;isBLANK_L1&lt;/code&gt; 、 &lt;code&gt;isBLANK_uni&lt;/code&gt; 、 &lt;code&gt;isBLANK_utf8&lt;/code&gt; 、 &lt;code&gt;isBLANK_LC&lt;/code&gt; 、 &lt;code&gt;isBLANK_LC_uvchr&lt;/code&gt; 、および &lt;code&gt;isBLANK_LC_utf8&lt;/code&gt; 。ただし、一部のプラットフォームにはCライブラリルーチン &lt;code&gt;isblank()&lt;/code&gt; がないことに注意してください。これらの場合、名前に &lt;code&gt;LC&lt;/code&gt; が含まれるバリアントは、対応するバリアントのないバリアントと同じです。</target>
        </trans-unit>
        <trans-unit id="29328681366b58f3557a4c7c9ff9c2608ba2f04f" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is a character considered to be a blank, analogous to &lt;code&gt;m/[[:blank:]]/&lt;/code&gt;. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isBLANK_A&lt;/code&gt;, &lt;code&gt;isBLANK_L1&lt;/code&gt;, &lt;code&gt;isBLANK_uvchr&lt;/code&gt;, &lt;code&gt;isBLANK_utf8&lt;/code&gt;, &lt;code&gt;isBLANK_utf8_safe&lt;/code&gt;, &lt;code&gt;isBLANK_LC&lt;/code&gt;, &lt;code&gt;isBLANK_LC_uvchr&lt;/code&gt;, &lt;code&gt;isBLANK_LC_utf8&lt;/code&gt;, and &lt;code&gt;isBLANK_LC_utf8_safe&lt;/code&gt;. Note, however, that some platforms do not have the C library routine &lt;code&gt;isblank()&lt;/code&gt;. In these cases, the variants whose names contain &lt;code&gt;LC&lt;/code&gt; are the same as the corresponding ones without.</source>
          <target state="translated">&lt;code&gt;m/[[:blank:]]/&lt;/code&gt; と同様に、指定された文字が空白と見なされる文字であるかどうかを示すブール値を返します。バリアント &lt;code&gt;isBLANK_A&lt;/code&gt; 、 &lt;code&gt;isBLANK_L1&lt;/code&gt; 、 &lt;code&gt;isBLANK_uvchr&lt;/code&gt; 、 &lt;code&gt;isBLANK_utf8&lt;/code&gt; 、 &lt;code&gt;isBLANK_utf8_safe&lt;/code&gt; 、 &lt;code&gt;isBLANK_LC&lt;/code&gt; 、 &lt;code&gt;isBLANK_LC_uvchr&lt;/code&gt; 、 &lt;code&gt;isBLANK_LC_utf8&lt;/code&gt; 、および &lt;code&gt;isBLANK_LC_utf8_safe&lt;/code&gt; 説明については&lt;a href=&quot;#Character-classification&quot;&gt;、このセクション&lt;/a&gt;の上部を参照してください。ただし、一部のプラットフォームにはCライブラリルーチン &lt;code&gt;isblank()&lt;/code&gt; がないことに注意してください。これらの場合、名前に &lt;code&gt;LC&lt;/code&gt; が含まれているバリアント なしの対応するものと同じです。</target>
        </trans-unit>
        <trans-unit id="9852ba5728743e1ad6def01123109823a1eede3f" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is a character that is a word character, analogous to what &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/\w/&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:word:]]/&lt;/a&gt;&lt;/code&gt; match in a regular expression. A word character is an alphabetic character, a decimal digit, a connecting punctuation character (such as an underscore), or a &quot;mark&quot; character that attaches to one of those (like some sort of accent). &lt;code&gt;isALNUM()&lt;/code&gt; is a synonym provided for backward compatibility, even though a word character includes more than the standard C language meaning of alphanumeric. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isWORDCHAR_A&lt;/code&gt; , &lt;code&gt;isWORDCHAR_L1&lt;/code&gt; , &lt;code&gt;isWORDCHAR_uni&lt;/code&gt; , and &lt;code&gt;isWORDCHAR_utf8&lt;/code&gt; . &lt;code&gt;isWORDCHAR_LC&lt;/code&gt; , &lt;code&gt;isWORDCHAR_LC_uvchr&lt;/code&gt; , and &lt;code&gt;isWORDCHAR_LC_utf8&lt;/code&gt; are also as described there, but additionally include the platform's native underscore.</source>
          <target state="translated">指定された文字が単語文字であるかどうかを示すブール値を返します。これは、正規表現で &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/\w/&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:word:]]/&lt;/a&gt;&lt;/code&gt; が一致するものに類似しています。単語文字とは、アルファベット文字、10進数、接続する句読文字（アンダースコアなど）、またはそれらの1つに付加される「マーク」文字（ある種のアクセントなど）です。 &lt;code&gt;isALNUM()&lt;/code&gt; は、下位互換性のために提供されている同義語です。ただし、単語の文字には、標準のC言語の意味よりも多くの英数字が含まれています。参照してください。&lt;a href=&quot;#Character-classification&quot;&gt;このセクションのトップを&lt;/a&gt;変種の説明については &lt;code&gt;isWORDCHAR_A&lt;/code&gt; 、 &lt;code&gt;isWORDCHAR_L1&lt;/code&gt; 、 &lt;code&gt;isWORDCHAR_uni&lt;/code&gt; 、および &lt;code&gt;isWORDCHAR_utf8&lt;/code&gt; 。 &lt;code&gt;isWORDCHAR_LC&lt;/code&gt; 、 &lt;code&gt;isWORDCHAR_LC_uvchr&lt;/code&gt; 、および &lt;code&gt;isWORDCHAR_LC_utf8&lt;/code&gt; もそこで説明されていますが、プラットフォームのネイティブアンダースコアが追加されています。</target>
        </trans-unit>
        <trans-unit id="d95866e9752b67dac11bf5a595c9d0d411160a2e" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is a character that is a word character, analogous to what &lt;code&gt;m/\w/&lt;/code&gt; and &lt;code&gt;m/[[:word:]]/&lt;/code&gt; match in a regular expression. A word character is an alphabetic character, a decimal digit, a connecting punctuation character (such as an underscore), or a &quot;mark&quot; character that attaches to one of those (like some sort of accent). &lt;code&gt;isALNUM()&lt;/code&gt; is a synonym provided for backward compatibility, even though a word character includes more than the standard C language meaning of alphanumeric. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isWORDCHAR_A&lt;/code&gt;, &lt;code&gt;isWORDCHAR_L1&lt;/code&gt;, &lt;code&gt;isWORDCHAR_uvchr&lt;/code&gt;, &lt;code&gt;isWORDCHAR_utf8&lt;/code&gt;, and &lt;code&gt;isWORDCHAR_utf8_safe&lt;/code&gt;. &lt;code&gt;isWORDCHAR_LC&lt;/code&gt;, &lt;code&gt;isWORDCHAR_LC_uvchr&lt;/code&gt;, &lt;code&gt;isWORDCHAR_LC_utf8&lt;/code&gt;, and &lt;code&gt;isWORDCHAR_LC_utf8_safe&lt;/code&gt; are also as described there, but additionally include the platform's native underscore.</source>
          <target state="translated">指定された文字が単語文字であるかどうかを示すブール値を返します。これは、正規表現で &lt;code&gt;m/\w/&lt;/code&gt; と &lt;code&gt;m/[[:word:]]/&lt;/code&gt; が一致するものに類似しています。単語文字は、アルファベット文字、10進数、接続句読文字（アンダースコアなど）、またはそれらの1つに付加される「マーク」文字（ある種のアクセントなど）です。 &lt;code&gt;isALNUM()&lt;/code&gt; は、下位互換性のために提供されている同義語ですが、単語の文字には、標準のC言語の英数字以上の意味が含まれています。バリアント &lt;code&gt;isWORDCHAR_A&lt;/code&gt; 、 &lt;code&gt;isWORDCHAR_L1&lt;/code&gt; 、 &lt;code&gt;isWORDCHAR_uvchr&lt;/code&gt; 、の説明については&lt;a href=&quot;#Character-classification&quot;&gt;、このセクション&lt;/a&gt;の上部を参照してください。 &lt;code&gt;isWORDCHAR_utf8&lt;/code&gt; 、および &lt;code&gt;isWORDCHAR_utf8_safe&lt;/code&gt; 。 &lt;code&gt;isWORDCHAR_LC&lt;/code&gt; 、 &lt;code&gt;isWORDCHAR_LC_uvchr&lt;/code&gt; 、 &lt;code&gt;isWORDCHAR_LC_utf8&lt;/code&gt; 、および &lt;code&gt;isWORDCHAR_LC_utf8_safe&lt;/code&gt; もここで説明されているとおりですが、プラットフォームのネイティブアンダースコアも含まれています。</target>
        </trans-unit>
        <trans-unit id="f9275c448cc5ba27683786a2d8a8c811d79a675f" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is a control character, analogous to &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:cntrl:]]/&lt;/a&gt;&lt;/code&gt;. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isCNTRL_A&lt;/code&gt; , &lt;code&gt;isCNTRL_L1&lt;/code&gt; , &lt;code&gt;isCNTRL_uni&lt;/code&gt; , &lt;code&gt;isCNTRL_utf8&lt;/code&gt; , &lt;code&gt;isCNTRL_LC&lt;/code&gt; , &lt;code&gt;isCNTRL_LC_uvchr&lt;/code&gt; , and &lt;code&gt;isCNTRL_LC_utf8&lt;/code&gt; On EBCDIC platforms, you almost always want to use the &lt;code&gt;isCNTRL_L1&lt;/code&gt; variant.</source>
          <target state="translated">指定された文字が &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:cntrl:]]/&lt;/a&gt;&lt;/code&gt; に類似した制御文字かどうかを示すブール値を返します。バリアント &lt;code&gt;isCNTRL_A&lt;/code&gt; 、 &lt;code&gt;isCNTRL_L1&lt;/code&gt; 、 &lt;code&gt;isCNTRL_uni&lt;/code&gt; 、 &lt;code&gt;isCNTRL_utf8&lt;/code&gt; 、 &lt;code&gt;isCNTRL_LC&lt;/code&gt; 、 &lt;code&gt;isCNTRL_LC_uvchr&lt;/code&gt; 、および &lt;code&gt;isCNTRL_LC_utf8&lt;/code&gt; のバリアントの説明については&lt;a href=&quot;#Character-classification&quot;&gt;、このセクション&lt;/a&gt;の上部を参照してください。EBCDICプラットフォームでは、ほとんど常に &lt;code&gt;isCNTRL_L1&lt;/code&gt; バリアントを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="122a9965c8cc36fab1e2e822534e8ec5e42ab3a2" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is a control character, analogous to &lt;code&gt;m/[[:cntrl:]]/&lt;/code&gt;. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isCNTRL_A&lt;/code&gt;, &lt;code&gt;isCNTRL_L1&lt;/code&gt;, &lt;code&gt;isCNTRL_uvchr&lt;/code&gt;, &lt;code&gt;isCNTRL_utf8&lt;/code&gt;, &lt;code&gt;isCNTRL_utf8_safe&lt;/code&gt;, &lt;code&gt;isCNTRL_LC&lt;/code&gt;, &lt;code&gt;isCNTRL_LC_uvchr&lt;/code&gt;, &lt;code&gt;isCNTRL_LC_utf8&lt;/code&gt; and &lt;code&gt;isCNTRL_LC_utf8_safe&lt;/code&gt;. On EBCDIC platforms, you almost always want to use the &lt;code&gt;isCNTRL_L1&lt;/code&gt; variant.</source>
          <target state="translated">&lt;code&gt;m/[[:cntrl:]]/&lt;/code&gt; に類似した、指定された文字が制御文字であるかどうかを示すブール値を返します。バリアント &lt;code&gt;isCNTRL_A&lt;/code&gt; 、 &lt;code&gt;isCNTRL_L1&lt;/code&gt; 、 &lt;code&gt;isCNTRL_uvchr&lt;/code&gt; 、 &lt;code&gt;isCNTRL_utf8&lt;/code&gt; 、 &lt;code&gt;isCNTRL_utf8_safe&lt;/code&gt; 、 &lt;code&gt;isCNTRL_LC&lt;/code&gt; 、 &lt;code&gt;isCNTRL_LC_uvchr&lt;/code&gt; 、 &lt;code&gt;isCNTRL_LC_utf8&lt;/code&gt; 、および &lt;code&gt;isCNTRL_LC_utf8_safe&lt;/code&gt; の説明については&lt;a href=&quot;#Character-classification&quot;&gt;、このセクション&lt;/a&gt;の上部を参照してください。 EBCDICプラットフォームでは、ほとんどの場合、 &lt;code&gt;isCNTRL_L1&lt;/code&gt; バリアントを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="bc5f9a2f004ec36fee23916c2d965d58a9667a24" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is a digit, analogous to &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:digit:]]/&lt;/a&gt;&lt;/code&gt;. Variants &lt;code&gt;isDIGIT_A&lt;/code&gt; and &lt;code&gt;isDIGIT_L1&lt;/code&gt; are identical to &lt;code&gt;isDIGIT&lt;/code&gt; . See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isDIGIT_uni&lt;/code&gt; , &lt;code&gt;isDIGIT_utf8&lt;/code&gt; , &lt;code&gt;isDIGIT_LC&lt;/code&gt; , &lt;code&gt;isDIGIT_LC_uvchr&lt;/code&gt; , and &lt;code&gt;isDIGIT_LC_utf8&lt;/code&gt; .</source>
          <target state="translated">指定された文字が数字であるかどうかを示すブール値を返します。これは &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:digit:]]/&lt;/a&gt;&lt;/code&gt; に類似しています。バリアント &lt;code&gt;isDIGIT_A&lt;/code&gt; と &lt;code&gt;isDIGIT_L1&lt;/code&gt; は同じです &lt;code&gt;isDIGIT&lt;/code&gt; 。バリアント &lt;code&gt;isDIGIT_uni&lt;/code&gt; 、 &lt;code&gt;isDIGIT_utf8&lt;/code&gt; 、 &lt;code&gt;isDIGIT_LC&lt;/code&gt; 、 &lt;code&gt;isDIGIT_LC_uvchr&lt;/code&gt; 、および &lt;code&gt;isDIGIT_LC_utf8&lt;/code&gt; の説明については&lt;a href=&quot;#Character-classification&quot;&gt;、このセクション&lt;/a&gt;の上部を参照してください。</target>
        </trans-unit>
        <trans-unit id="b96938b2ffbd61cc2b65bcefc552e221062bd754" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is a digit, analogous to &lt;code&gt;m/[[:digit:]]/&lt;/code&gt;. Variants &lt;code&gt;isDIGIT_A&lt;/code&gt; and &lt;code&gt;isDIGIT_L1&lt;/code&gt; are identical to &lt;code&gt;isDIGIT&lt;/code&gt;. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isDIGIT_uvchr&lt;/code&gt;, &lt;code&gt;isDIGIT_utf8&lt;/code&gt;, &lt;code&gt;isDIGIT_utf8_safe&lt;/code&gt;, &lt;code&gt;isDIGIT_LC&lt;/code&gt;, &lt;code&gt;isDIGIT_LC_uvchr&lt;/code&gt;, &lt;code&gt;isDIGIT_LC_utf8&lt;/code&gt;, and &lt;code&gt;isDIGIT_LC_utf8_safe&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;m/[[:digit:]]/&lt;/code&gt; に類似した、指定された文字が数字であるかどうかを示すブール値を返します。バリアント &lt;code&gt;isDIGIT_A&lt;/code&gt; と &lt;code&gt;isDIGIT_L1&lt;/code&gt; は同じです &lt;code&gt;isDIGIT&lt;/code&gt; 。バリアント &lt;code&gt;isDIGIT_uvchr&lt;/code&gt; 、 &lt;code&gt;isDIGIT_utf8&lt;/code&gt; 、 &lt;code&gt;isDIGIT_utf8_safe&lt;/code&gt; 、 &lt;code&gt;isDIGIT_LC&lt;/code&gt; 、 &lt;code&gt;isDIGIT_LC_uvchr&lt;/code&gt; 、 &lt;code&gt;isDIGIT_LC_utf8&lt;/code&gt; 、および &lt;code&gt;isDIGIT_LC_utf8_safe&lt;/code&gt; の説明については&lt;a href=&quot;#Character-classification&quot;&gt;、このセクション&lt;/a&gt;の上部を参照してください。</target>
        </trans-unit>
        <trans-unit id="c5aa05558f472c759c35c257a0ac246e6bf09367" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is a either an alphabetic character or decimal digit, analogous to &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:alnum:]]/&lt;/a&gt;&lt;/code&gt;. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isALPHANUMERIC_A&lt;/code&gt; , &lt;code&gt;isALPHANUMERIC_L1&lt;/code&gt; , &lt;code&gt;isALPHANUMERIC_uni&lt;/code&gt; , &lt;code&gt;isALPHANUMERIC_utf8&lt;/code&gt; , &lt;code&gt;isALPHANUMERIC_LC&lt;/code&gt; , &lt;code&gt;isALPHANUMERIC_LC_uvchr&lt;/code&gt; , and &lt;code&gt;isALPHANUMERIC_LC_utf8&lt;/code&gt; .</source>
          <target state="translated">指定された文字が、 &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:alnum:]]/&lt;/a&gt;&lt;/code&gt; に類似した英字または10進数のどちらであるかを示すブール値を返します。バリアント &lt;code&gt;isALPHANUMERIC_A&lt;/code&gt; 、 &lt;code&gt;isALPHANUMERIC_L1&lt;/code&gt; 、 &lt;code&gt;isALPHANUMERIC_uni&lt;/code&gt; 、 &lt;code&gt;isALPHANUMERIC_utf8&lt;/code&gt; 、 &lt;code&gt;isALPHANUMERIC_LC&lt;/code&gt; 、 &lt;code&gt;isALPHANUMERIC_LC_uvchr&lt;/code&gt; 、および &lt;code&gt;isALPHANUMERIC_LC_utf8&lt;/code&gt; 説明については&lt;a href=&quot;#Character-classification&quot;&gt;、このセクション&lt;/a&gt;の上部を参照してください。</target>
        </trans-unit>
        <trans-unit id="cd3d7d9d640e85535389698d9f2fb18931bac074" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is a graphic character, analogous to &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:graph:]]/&lt;/a&gt;&lt;/code&gt;. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isGRAPH_A&lt;/code&gt; , &lt;code&gt;isGRAPH_L1&lt;/code&gt; , &lt;code&gt;isGRAPH_uni&lt;/code&gt; , &lt;code&gt;isGRAPH_utf8&lt;/code&gt; , &lt;code&gt;isGRAPH_LC&lt;/code&gt; , &lt;code&gt;isGRAPH_LC_uvchr&lt;/code&gt; , and &lt;code&gt;isGRAPH_LC_utf8&lt;/code&gt; .</source>
          <target state="translated">指定された文字がグラフィック文字であるかどうかを示すブール値を返します。これは &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:graph:]]/&lt;/a&gt;&lt;/code&gt; に類似しています。バリアント &lt;code&gt;isGRAPH_A&lt;/code&gt; 、 &lt;code&gt;isGRAPH_L1&lt;/code&gt; 、 &lt;code&gt;isGRAPH_uni&lt;/code&gt; 、 &lt;code&gt;isGRAPH_utf8&lt;/code&gt; 、 &lt;code&gt;isGRAPH_LC&lt;/code&gt; 、 &lt;code&gt;isGRAPH_LC_uvchr&lt;/code&gt; 、および &lt;code&gt;isGRAPH_LC_utf8&lt;/code&gt; の説明については&lt;a href=&quot;#Character-classification&quot;&gt;、このセクション&lt;/a&gt;の上部を参照してください。</target>
        </trans-unit>
        <trans-unit id="aaa600b1ec6a7427f287cd29b0514942413a0b15" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is a graphic character, analogous to &lt;code&gt;m/[[:graph:]]/&lt;/code&gt;. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isGRAPH_A&lt;/code&gt;, &lt;code&gt;isGRAPH_L1&lt;/code&gt;, &lt;code&gt;isGRAPH_uvchr&lt;/code&gt;, &lt;code&gt;isGRAPH_utf8&lt;/code&gt;, &lt;code&gt;isGRAPH_utf8_safe&lt;/code&gt;, &lt;code&gt;isGRAPH_LC&lt;/code&gt;, &lt;code&gt;isGRAPH_LC_uvchr&lt;/code&gt;, &lt;code&gt;isGRAPH_LC_utf8_safe&lt;/code&gt;, and &lt;code&gt;isGRAPH_LC_utf8_safe&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;m/[[:graph:]]/&lt;/code&gt; に類似した、指定された文字がグラフィック文字であるかどうかを示すブール値を返します。バリアント &lt;code&gt;isGRAPH_A&lt;/code&gt; 、 &lt;code&gt;isGRAPH_L1&lt;/code&gt; 、 &lt;code&gt;isGRAPH_uvchr&lt;/code&gt; 、 &lt;code&gt;isGRAPH_utf8&lt;/code&gt; 、 &lt;code&gt;isGRAPH_utf8_safe&lt;/code&gt; 、 &lt;code&gt;isGRAPH_LC&lt;/code&gt; 、 &lt;code&gt;isGRAPH_LC_uvchr&lt;/code&gt; 、 &lt;code&gt;isGRAPH_LC_utf8_safe&lt;/code&gt; 、および &lt;code&gt;isGRAPH_LC_utf8_safe&lt;/code&gt; 説明については&lt;a href=&quot;#Character-classification&quot;&gt;、このセクション&lt;/a&gt;の上部を参照してください。</target>
        </trans-unit>
        <trans-unit id="08a521e0f9cf14d0eb9b9b50db942ae249b71fc1" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is a hexadecimal digit. In the ASCII range these are &lt;code&gt;[0-9A-Fa-f]&lt;/code&gt; . Variants &lt;code&gt;isXDIGIT_A()&lt;/code&gt; and &lt;code&gt;isXDIGIT_L1()&lt;/code&gt; are identical to &lt;code&gt;isXDIGIT()&lt;/code&gt; . See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isXDIGIT_uni&lt;/code&gt; , &lt;code&gt;isXDIGIT_utf8&lt;/code&gt; , &lt;code&gt;isXDIGIT_LC&lt;/code&gt; , &lt;code&gt;isXDIGIT_LC_uvchr&lt;/code&gt; , and &lt;code&gt;isXDIGIT_LC_utf8&lt;/code&gt; .</source>
          <target state="translated">指定された文字が16進数かどうかを示すブール値を返します。 ASCII範囲では、これらは &lt;code&gt;[0-9A-Fa-f]&lt;/code&gt; です。変異体 &lt;code&gt;isXDIGIT_A()&lt;/code&gt; と &lt;code&gt;isXDIGIT_L1()&lt;/code&gt; は同一である &lt;code&gt;isXDIGIT()&lt;/code&gt; 。バリアント &lt;code&gt;isXDIGIT_uni&lt;/code&gt; 、 &lt;code&gt;isXDIGIT_utf8&lt;/code&gt; 、 &lt;code&gt;isXDIGIT_LC&lt;/code&gt; 、 &lt;code&gt;isXDIGIT_LC_uvchr&lt;/code&gt; 、および &lt;code&gt;isXDIGIT_LC_utf8&lt;/code&gt; の説明については&lt;a href=&quot;#Character-classification&quot;&gt;、このセクション&lt;/a&gt;の上部を参照してください。</target>
        </trans-unit>
        <trans-unit id="a158c1e677888a4504ab28dd97acbf4840b12f1e" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is a hexadecimal digit. In the ASCII range these are &lt;code&gt;[0-9A-Fa-f]&lt;/code&gt;. Variants &lt;code&gt;isXDIGIT_A()&lt;/code&gt; and &lt;code&gt;isXDIGIT_L1()&lt;/code&gt; are identical to &lt;code&gt;isXDIGIT()&lt;/code&gt;. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isXDIGIT_uvchr&lt;/code&gt;, &lt;code&gt;isXDIGIT_utf8&lt;/code&gt;, &lt;code&gt;isXDIGIT_utf8_safe&lt;/code&gt;, &lt;code&gt;isXDIGIT_LC&lt;/code&gt;, &lt;code&gt;isXDIGIT_LC_uvchr&lt;/code&gt;, &lt;code&gt;isXDIGIT_LC_utf8&lt;/code&gt;, and &lt;code&gt;isXDIGIT_LC_utf8_safe&lt;/code&gt;.</source>
          <target state="translated">指定された文字が16進数であるかどうかを示すブール値を返します。 ASCII範囲では、これらは &lt;code&gt;[0-9A-Fa-f]&lt;/code&gt; です。変異体 &lt;code&gt;isXDIGIT_A()&lt;/code&gt; と &lt;code&gt;isXDIGIT_L1()&lt;/code&gt; は同一である &lt;code&gt;isXDIGIT()&lt;/code&gt; 。バリアント &lt;code&gt;isXDIGIT_uvchr&lt;/code&gt; 、 &lt;code&gt;isXDIGIT_utf8&lt;/code&gt; 、 &lt;code&gt;isXDIGIT_utf8_safe&lt;/code&gt; 、 &lt;code&gt;isXDIGIT_LC&lt;/code&gt; 、 &lt;code&gt;isXDIGIT_LC_uvchr&lt;/code&gt; 、 &lt;code&gt;isXDIGIT_LC_utf8&lt;/code&gt; 、および &lt;code&gt;isXDIGIT_LC_utf8_safe&lt;/code&gt; の説明については&lt;a href=&quot;#Character-classification&quot;&gt;、このセクション&lt;/a&gt;の上部を参照してください。</target>
        </trans-unit>
        <trans-unit id="1ff52e3b4ced8da14cf21ac0cf2d8d3b48eac969" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is a lowercase character, analogous to &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:lower:]]/&lt;/a&gt;&lt;/code&gt;. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isLOWER_A&lt;/code&gt; , &lt;code&gt;isLOWER_L1&lt;/code&gt; , &lt;code&gt;isLOWER_uni&lt;/code&gt; , &lt;code&gt;isLOWER_utf8&lt;/code&gt; , &lt;code&gt;isLOWER_LC&lt;/code&gt; , &lt;code&gt;isLOWER_LC_uvchr&lt;/code&gt; , and &lt;code&gt;isLOWER_LC_utf8&lt;/code&gt; .</source>
          <target state="translated">指定された文字が小文字であるかどうかを示すブール値を返します。これは &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:lower:]]/&lt;/a&gt;&lt;/code&gt; に類似しています。バリアント &lt;code&gt;isLOWER_A&lt;/code&gt; 、 &lt;code&gt;isLOWER_L1&lt;/code&gt; 、 &lt;code&gt;isLOWER_uni&lt;/code&gt; 、 &lt;code&gt;isLOWER_utf8&lt;/code&gt; 、 &lt;code&gt;isLOWER_LC&lt;/code&gt; 、 &lt;code&gt;isLOWER_LC_uvchr&lt;/code&gt; 、および &lt;code&gt;isLOWER_LC_utf8&lt;/code&gt; の説明については&lt;a href=&quot;#Character-classification&quot;&gt;、このセクション&lt;/a&gt;の上部を参照してください。</target>
        </trans-unit>
        <trans-unit id="e6810ef4bb9ebf895d53b0fd107079c63ab18ed1" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is a lowercase character, analogous to &lt;code&gt;m/[[:lower:]]/&lt;/code&gt;. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isLOWER_A&lt;/code&gt;, &lt;code&gt;isLOWER_L1&lt;/code&gt;, &lt;code&gt;isLOWER_uvchr&lt;/code&gt;, &lt;code&gt;isLOWER_utf8&lt;/code&gt;, &lt;code&gt;isLOWER_utf8_safe&lt;/code&gt;, &lt;code&gt;isLOWER_LC&lt;/code&gt;, &lt;code&gt;isLOWER_LC_uvchr&lt;/code&gt;, &lt;code&gt;isLOWER_LC_utf8&lt;/code&gt;, and &lt;code&gt;isLOWER_LC_utf8_safe&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;m/[[:lower:]]/&lt;/code&gt; に類似した、指定された文字が小文字であるかどうかを示すブール値を返します。バリアント &lt;code&gt;isLOWER_A&lt;/code&gt; 、 &lt;code&gt;isLOWER_L1&lt;/code&gt; 、 &lt;code&gt;isLOWER_uvchr&lt;/code&gt; 、 &lt;code&gt;isLOWER_utf8&lt;/code&gt; 、 &lt;code&gt;isLOWER_utf8_safe&lt;/code&gt; 、 &lt;code&gt;isLOWER_LC&lt;/code&gt; 、 &lt;code&gt;isLOWER_LC_uvchr&lt;/code&gt; 、 &lt;code&gt;isLOWER_LC_utf8&lt;/code&gt; 、および &lt;code&gt;isLOWER_LC_utf8_safe&lt;/code&gt; の説明については&lt;a href=&quot;#Character-classification&quot;&gt;、このセクション&lt;/a&gt;の上部を参照してください。</target>
        </trans-unit>
        <trans-unit id="41725a26249b072e3854b61782196d712beaccdb" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is a printable character, analogous to &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:print:]]/&lt;/a&gt;&lt;/code&gt;. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isPRINT_A&lt;/code&gt; , &lt;code&gt;isPRINT_L1&lt;/code&gt; , &lt;code&gt;isPRINT_uni&lt;/code&gt; , &lt;code&gt;isPRINT_utf8&lt;/code&gt; , &lt;code&gt;isPRINT_LC&lt;/code&gt; , &lt;code&gt;isPRINT_LC_uvchr&lt;/code&gt; , and &lt;code&gt;isPRINT_LC_utf8&lt;/code&gt; .</source>
          <target state="translated">指定された文字が印刷可能な文字であるかどうかを示すブール値を返します。これは &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:print:]]/&lt;/a&gt;&lt;/code&gt; に類似しています。バリアント &lt;code&gt;isPRINT_A&lt;/code&gt; 、 &lt;code&gt;isPRINT_L1&lt;/code&gt; 、 &lt;code&gt;isPRINT_uni&lt;/code&gt; 、 &lt;code&gt;isPRINT_utf8&lt;/code&gt; 、 &lt;code&gt;isPRINT_LC&lt;/code&gt; 、 &lt;code&gt;isPRINT_LC_uvchr&lt;/code&gt; 、および &lt;code&gt;isPRINT_LC_utf8&lt;/code&gt; の説明については&lt;a href=&quot;#Character-classification&quot;&gt;、このセクション&lt;/a&gt;の上部を参照してください。</target>
        </trans-unit>
        <trans-unit id="ca68b6a91bf0a62e3d361f1856be060416de1e37" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is a printable character, analogous to &lt;code&gt;m/[[:print:]]/&lt;/code&gt;. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isPRINT_A&lt;/code&gt;, &lt;code&gt;isPRINT_L1&lt;/code&gt;, &lt;code&gt;isPRINT_uvchr&lt;/code&gt;, &lt;code&gt;isPRINT_utf8&lt;/code&gt;, &lt;code&gt;isPRINT_utf8_safe&lt;/code&gt;, &lt;code&gt;isPRINT_LC&lt;/code&gt;, &lt;code&gt;isPRINT_LC_uvchr&lt;/code&gt;, &lt;code&gt;isPRINT_LC_utf8&lt;/code&gt;, and &lt;code&gt;isPRINT_LC_utf8_safe&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;m/[[:print:]]/&lt;/code&gt; に類似した、指定された文字が印刷可能な文字であるかどうかを示すブール値を返します。バリアント &lt;code&gt;isPRINT_A&lt;/code&gt; 、 &lt;code&gt;isPRINT_L1&lt;/code&gt; 、 &lt;code&gt;isPRINT_uvchr&lt;/code&gt; 、 &lt;code&gt;isPRINT_utf8&lt;/code&gt; 、 &lt;code&gt;isPRINT_utf8_safe&lt;/code&gt; 、 &lt;code&gt;isPRINT_LC&lt;/code&gt; 、 &lt;code&gt;isPRINT_LC_uvchr&lt;/code&gt; 、 &lt;code&gt;isPRINT_LC_utf8&lt;/code&gt; 、および &lt;code&gt;isPRINT_LC_utf8_safe&lt;/code&gt; の説明については&lt;a href=&quot;#Character-classification&quot;&gt;、このセクション&lt;/a&gt;の上部を参照してください。</target>
        </trans-unit>
        <trans-unit id="7793d22c7e9533fb9416bac2c7ec1172e04deac2" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is a punctuation character, analogous to &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:punct:]]/&lt;/a&gt;&lt;/code&gt;. Note that the definition of what is punctuation isn't as straightforward as one might desire. See &lt;a href=&quot;perlrecharclass#POSIX-Character-Classes&quot;&gt;POSIX Character Classes in perlrecharclass&lt;/a&gt; for details. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isPUNCT_A&lt;/code&gt; , &lt;code&gt;isPUNCT_L1&lt;/code&gt; , &lt;code&gt;isPUNCT_uni&lt;/code&gt; , &lt;code&gt;isPUNCT_utf8&lt;/code&gt; , &lt;code&gt;isPUNCT_LC&lt;/code&gt; , &lt;code&gt;isPUNCT_LC_uvchr&lt;/code&gt; , and &lt;code&gt;isPUNCT_LC_utf8&lt;/code&gt; .</source>
          <target state="translated">指定された文字が句読点文字かどうかを示すブール値を返します。これは &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:punct:]]/&lt;/a&gt;&lt;/code&gt; に類似しています。句読点とは何かの定義は、希望するほど簡単ではないことに注意してください。詳細については&lt;a href=&quot;perlrecharclass#POSIX-Character-Classes&quot;&gt;、perlrecharclassのPOSIX文字クラス&lt;/a&gt;を参照してください。バリアント &lt;code&gt;isPUNCT_A&lt;/code&gt; 、 &lt;code&gt;isPUNCT_L1&lt;/code&gt; 、 &lt;code&gt;isPUNCT_uni&lt;/code&gt; 、 &lt;code&gt;isPUNCT_utf8&lt;/code&gt; 、 &lt;code&gt;isPUNCT_LC&lt;/code&gt; 、 &lt;code&gt;isPUNCT_LC_uvchr&lt;/code&gt; 、および &lt;code&gt;isPUNCT_LC_utf8&lt;/code&gt; の説明については&lt;a href=&quot;#Character-classification&quot;&gt;、このセクション&lt;/a&gt;の上部を参照してください。</target>
        </trans-unit>
        <trans-unit id="ed9669819bcda57040e2afadf7601dbcad1dbb46" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is a punctuation character, analogous to &lt;code&gt;m/[[:punct:]]/&lt;/code&gt;. Note that the definition of what is punctuation isn't as straightforward as one might desire. See &lt;a href=&quot;perlrecharclass#POSIX-Character-Classes&quot;&gt;&quot;POSIX Character Classes&quot; in perlrecharclass&lt;/a&gt; for details. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isPUNCT_A&lt;/code&gt;, &lt;code&gt;isPUNCT_L1&lt;/code&gt;, &lt;code&gt;isPUNCT_uvchr&lt;/code&gt;, &lt;code&gt;isPUNCT_utf8&lt;/code&gt;, &lt;code&gt;isPUNCT_utf8_safe&lt;/code&gt;, &lt;code&gt;isPUNCT_LC&lt;/code&gt;, &lt;code&gt;isPUNCT_LC_uvchr&lt;/code&gt;, &lt;code&gt;isPUNCT_LC_utf8&lt;/code&gt;, and &lt;code&gt;isPUNCT_LC_utf8_safe&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;m/[[:punct:]]/&lt;/code&gt; に類似した、指定された文字が句読文字であるかどうかを示すブール値を返します。句読点とは何かの定義は、人が望むほど単純ではないことに注意してください。詳細については&lt;a href=&quot;perlrecharclass#POSIX-Character-Classes&quot;&gt;、perlrecharclassの「POSIX文字クラス」&lt;/a&gt;を参照してください。バリアント &lt;code&gt;isPUNCT_A&lt;/code&gt; 、 &lt;code&gt;isPUNCT_L1&lt;/code&gt; 、 &lt;code&gt;isPUNCT_uvchr&lt;/code&gt; 、 &lt;code&gt;isPUNCT_utf8&lt;/code&gt; 、 &lt;code&gt;isPUNCT_utf8_safe&lt;/code&gt; 、 &lt;code&gt;isPUNCT_LC&lt;/code&gt; 、 &lt;code&gt;isPUNCT_LC_uvchr&lt;/code&gt; 、 &lt;code&gt;isPUNCT_LC_utf8&lt;/code&gt; 、および &lt;code&gt;isPUNCT_LC_utf8_safe&lt;/code&gt; 説明については&lt;a href=&quot;#Character-classification&quot;&gt;、このセクション&lt;/a&gt;の上部を参照してください。</target>
        </trans-unit>
        <trans-unit id="32a715a3af988d8bb6cff21868fdb558f44c0512" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is a whitespace character. This is analogous to what &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/\s/&lt;/a&gt;&lt;/code&gt; matches in a regular expression. Starting in Perl 5.18 this also matches what &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:space:]]/&lt;/a&gt;&lt;/code&gt; does. Prior to 5.18, only the locale forms of this macro (the ones with &lt;code&gt;LC&lt;/code&gt; in their names) matched precisely what &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:space:]]/&lt;/a&gt;&lt;/code&gt; does. In those releases, the only difference, in the non-locale variants, was that &lt;code&gt;isSPACE()&lt;/code&gt; did not match a vertical tab. (See &lt;a href=&quot;#isPSXSPC&quot;&gt;isPSXSPC&lt;/a&gt; for a macro that matches a vertical tab in all releases.) See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isSPACE_A&lt;/code&gt; , &lt;code&gt;isSPACE_L1&lt;/code&gt; , &lt;code&gt;isSPACE_uni&lt;/code&gt; , &lt;code&gt;isSPACE_utf8&lt;/code&gt; , &lt;code&gt;isSPACE_LC&lt;/code&gt; , &lt;code&gt;isSPACE_LC_uvchr&lt;/code&gt; , and &lt;code&gt;isSPACE_LC_utf8&lt;/code&gt; .</source>
          <target state="translated">指定された文字が空白文字かどうかを示すブール値を返します。これは、 &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/\s/&lt;/a&gt;&lt;/code&gt; が正規表現で一致するものに類似しています。 Perl 5.18以降、これは &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:space:]]/&lt;/a&gt;&lt;/code&gt; の動作にも一致します。 5.18より前のバージョンでは、このマクロのロケールフォーム（名前に &lt;code&gt;LC&lt;/code&gt; が含まれているもの）のみが &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:space:]]/&lt;/a&gt;&lt;/code&gt; の動作と正確に一致していました。これらのリリースでは、ロケール以外のバリアントの唯一の違いは、 &lt;code&gt;isSPACE()&lt;/code&gt; が垂直タブと一致しなかったことです。 （すべてのリリースの垂直タブに一致するマクロについては、&lt;a href=&quot;#isPSXSPC&quot;&gt;isPSXSPC&lt;/a&gt;を参照してください。）バリアントの説明については、&lt;a href=&quot;#Character-classification&quot;&gt;このセクション&lt;/a&gt;の上部を参照してください &lt;code&gt;isSPACE_A&lt;/code&gt; 、 &lt;code&gt;isSPACE_L1&lt;/code&gt; 、 &lt;code&gt;isSPACE_uni&lt;/code&gt; 、 &lt;code&gt;isSPACE_utf8&lt;/code&gt; 、 &lt;code&gt;isSPACE_LC&lt;/code&gt; 、 &lt;code&gt;isSPACE_LC_uvchr&lt;/code&gt; 、 &lt;code&gt;isSPACE_LC_utf8&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="33e9150d8c65d7e7e2a47d3f90c4e34c63f45be1" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is a whitespace character. This is analogous to what &lt;code&gt;m/\s/&lt;/code&gt; matches in a regular expression. Starting in Perl 5.18 this also matches what &lt;code&gt;m/[[:space:]]/&lt;/code&gt; does. Prior to 5.18, only the locale forms of this macro (the ones with &lt;code&gt;LC&lt;/code&gt; in their names) matched precisely what &lt;code&gt;m/[[:space:]]/&lt;/code&gt; does. In those releases, the only difference, in the non-locale variants, was that &lt;code&gt;isSPACE()&lt;/code&gt; did not match a vertical tab. (See &lt;a href=&quot;#isPSXSPC&quot;&gt;&quot;isPSXSPC&quot;&lt;/a&gt; for a macro that matches a vertical tab in all releases.) See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isSPACE_A&lt;/code&gt;, &lt;code&gt;isSPACE_L1&lt;/code&gt;, &lt;code&gt;isSPACE_uvchr&lt;/code&gt;, &lt;code&gt;isSPACE_utf8&lt;/code&gt;, &lt;code&gt;isSPACE_utf8_safe&lt;/code&gt;, &lt;code&gt;isSPACE_LC&lt;/code&gt;, &lt;code&gt;isSPACE_LC_uvchr&lt;/code&gt;, &lt;code&gt;isSPACE_LC_utf8&lt;/code&gt;, and &lt;code&gt;isSPACE_LC_utf8_safe&lt;/code&gt;.</source>
          <target state="translated">指定された文字が空白文字であるかどうかを示すブール値を返します。これは、 &lt;code&gt;m/\s/&lt;/code&gt; が正規表現で一致するものに類似しています。 Perl 5.18以降、これは &lt;code&gt;m/[[:space:]]/&lt;/code&gt; の機能とも一致します。 5.18より前は、このマクロのロケール形式（名前に &lt;code&gt;LC&lt;/code&gt; が含まれている形式）のみが &lt;code&gt;m/[[:space:]]/&lt;/code&gt; の機能と正確に一致していました。これらのリリースでは、ロケール以外のバリアントでの唯一の違いは、 &lt;code&gt;isSPACE()&lt;/code&gt; が垂直タブと一致しなかったことです。 （すべてのリリースで垂直タブに一致するマクロについては、&lt;a href=&quot;#isPSXSPC&quot;&gt;「isPSXSPC」&lt;/a&gt;を参照してください。）バリアント &lt;code&gt;isSPACE_A&lt;/code&gt; 、 &lt;code&gt;isSPACE_L1&lt;/code&gt; の説明については、&lt;a href=&quot;#Character-classification&quot;&gt;このセクション&lt;/a&gt;の上部を参照してください。、 &lt;code&gt;isSPACE_uvchr&lt;/code&gt; 、 &lt;code&gt;isSPACE_utf8&lt;/code&gt; 、 &lt;code&gt;isSPACE_utf8_safe&lt;/code&gt; 、 &lt;code&gt;isSPACE_LC&lt;/code&gt; 、 &lt;code&gt;isSPACE_LC_uvchr&lt;/code&gt; 、 &lt;code&gt;isSPACE_LC_utf8&lt;/code&gt; 、および &lt;code&gt;isSPACE_LC_utf8_safe&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eb03db284d9ba50542ef6a78c24086a8ed7602c8" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is an alphabetic character, analogous to &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:alpha:]]/&lt;/a&gt;&lt;/code&gt;. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isALPHA_A&lt;/code&gt; , &lt;code&gt;isALPHA_L1&lt;/code&gt; , &lt;code&gt;isALPHA_uni&lt;/code&gt; , &lt;code&gt;isALPHA_utf8&lt;/code&gt; , &lt;code&gt;isALPHA_LC&lt;/code&gt; , &lt;code&gt;isALPHA_LC_uvchr&lt;/code&gt; , and &lt;code&gt;isALPHA_LC_utf8&lt;/code&gt; .</source>
          <target state="translated">指定された文字が &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:alpha:]]/&lt;/a&gt;&lt;/code&gt; に類似した英字かどうかを示すブール値を返します。バリアント &lt;code&gt;isALPHA_A&lt;/code&gt; 、 &lt;code&gt;isALPHA_L1&lt;/code&gt; 、 &lt;code&gt;isALPHA_uni&lt;/code&gt; 、 &lt;code&gt;isALPHA_utf8&lt;/code&gt; 、 &lt;code&gt;isALPHA_LC&lt;/code&gt; 、 &lt;code&gt;isALPHA_LC_uvchr&lt;/code&gt; 、および &lt;code&gt;isALPHA_LC_utf8&lt;/code&gt; の説明については&lt;a href=&quot;#Character-classification&quot;&gt;、このセクション&lt;/a&gt;の上部を参照してください。</target>
        </trans-unit>
        <trans-unit id="af7aba7401f9e1c72d74964e907a9b2716eb9e27" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is an octal digit, [0-7]. The only two variants are &lt;code&gt;isOCTAL_A&lt;/code&gt; and &lt;code&gt;isOCTAL_L1&lt;/code&gt; ; each is identical to &lt;code&gt;isOCTAL&lt;/code&gt; .</source>
          <target state="translated">指定された文字が8進数[0-7]かどうかを示すブール値を返します。 &lt;code&gt;isOCTAL_A&lt;/code&gt; と &lt;code&gt;isOCTAL_L1&lt;/code&gt; の 2つのバリアントのみです。それぞれ &lt;code&gt;isOCTAL&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="bdafb80e48adef68b2ce4d0afc47401439a6c754" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is an octal digit, [0-7]. The only two variants are &lt;code&gt;isOCTAL_A&lt;/code&gt; and &lt;code&gt;isOCTAL_L1&lt;/code&gt;; each is identical to &lt;code&gt;isOCTAL&lt;/code&gt;.</source>
          <target state="translated">指定された文字が8進数[0-7]であるかどうかを示すブール値を返します。 &lt;code&gt;isOCTAL_A&lt;/code&gt; と &lt;code&gt;isOCTAL_L1&lt;/code&gt; の2つのバリアントのみです。それぞれが &lt;code&gt;isOCTAL&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="15efb9db5798b3f62af85957e91796c0081a1fd0" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is an uppercase character, analogous to &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:upper:]]/&lt;/a&gt;&lt;/code&gt;. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isUPPER_A&lt;/code&gt; , &lt;code&gt;isUPPER_L1&lt;/code&gt; , &lt;code&gt;isUPPER_uni&lt;/code&gt; , &lt;code&gt;isUPPER_utf8&lt;/code&gt; , &lt;code&gt;isUPPER_LC&lt;/code&gt; , &lt;code&gt;isUPPER_LC_uvchr&lt;/code&gt; , and &lt;code&gt;isUPPER_LC_utf8&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:upper:]]/&lt;/a&gt;&lt;/code&gt; と同様に、指定された文字が大文字かどうかを示すブール値を返します。バリアント &lt;code&gt;isUPPER_A&lt;/code&gt; 、 &lt;code&gt;isUPPER_L1&lt;/code&gt; 、 &lt;code&gt;isUPPER_uni&lt;/code&gt; 、 &lt;code&gt;isUPPER_utf8&lt;/code&gt; 、 &lt;code&gt;isUPPER_LC&lt;/code&gt; 、 &lt;code&gt;isUPPER_LC_uvchr&lt;/code&gt; 、および &lt;code&gt;isUPPER_LC_utf8&lt;/code&gt; の説明については&lt;a href=&quot;#Character-classification&quot;&gt;、このセクション&lt;/a&gt;の上部を参照してください。</target>
        </trans-unit>
        <trans-unit id="986354a9893a93f41b2c6f90945ea8685375b576" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is an uppercase character, analogous to &lt;code&gt;m/[[:upper:]]/&lt;/code&gt;. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isUPPER_A&lt;/code&gt;, &lt;code&gt;isUPPER_L1&lt;/code&gt;, &lt;code&gt;isUPPER_uvchr&lt;/code&gt;, &lt;code&gt;isUPPER_utf8&lt;/code&gt;, &lt;code&gt;isUPPER_utf8_safe&lt;/code&gt;, &lt;code&gt;isUPPER_LC&lt;/code&gt;, &lt;code&gt;isUPPER_LC_uvchr&lt;/code&gt;, &lt;code&gt;isUPPER_LC_utf8&lt;/code&gt;, and &lt;code&gt;isUPPER_LC_utf8_safe&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;m/[[:upper:]]/&lt;/code&gt; に類似した、指定された文字が大文字であるかどうかを示すブール値を返します。バリアント &lt;code&gt;isUPPER_A&lt;/code&gt; 、 &lt;code&gt;isUPPER_L1&lt;/code&gt; 、 &lt;code&gt;isUPPER_uvchr&lt;/code&gt; 、 &lt;code&gt;isUPPER_utf8&lt;/code&gt; 、 &lt;code&gt;isUPPER_utf8_safe&lt;/code&gt; 、 &lt;code&gt;isUPPER_LC&lt;/code&gt; 、 &lt;code&gt;isUPPER_LC_uvchr&lt;/code&gt; 、 &lt;code&gt;isUPPER_LC_utf8&lt;/code&gt; 、および &lt;code&gt;isUPPER_LC_utf8_safe&lt;/code&gt; の説明については&lt;a href=&quot;#Character-classification&quot;&gt;、このセクション&lt;/a&gt;の上部を参照してください。</target>
        </trans-unit>
        <trans-unit id="980f07c017b5c1bb2fce5cf568e3090c392ff685" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is one of &lt;code&gt;[A-Za-z0-9]&lt;/code&gt;, analogous to &lt;code&gt;m/[[:alnum:]]/&lt;/code&gt;. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isALPHANUMERIC_A&lt;/code&gt;, &lt;code&gt;isALPHANUMERIC_L1&lt;/code&gt;, &lt;code&gt;isALPHANUMERIC_uvchr&lt;/code&gt;, &lt;code&gt;isALPHANUMERIC_utf8&lt;/code&gt;, &lt;code&gt;isALPHANUMERIC_utf8_safe&lt;/code&gt;, &lt;code&gt;isALPHANUMERIC_LC&lt;/code&gt;, &lt;code&gt;isALPHANUMERIC_LC_uvchr&lt;/code&gt;, &lt;code&gt;isALPHANUMERIC_LC_utf8&lt;/code&gt;, and &lt;code&gt;isALPHANUMERIC_LC_utf8_safe&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;m/[[:alnum:]]/&lt;/code&gt; と同様に、指定された文字が &lt;code&gt;[A-Za-z0-9]&lt;/code&gt; のいずれかであるかどうかを示すブール値を返します。参照してください。&lt;a href=&quot;#Character-classification&quot;&gt;このセクションのトップを&lt;/a&gt;変種の説明については &lt;code&gt;isALPHANUMERIC_A&lt;/code&gt; 、 &lt;code&gt;isALPHANUMERIC_L1&lt;/code&gt; 、 &lt;code&gt;isALPHANUMERIC_uvchr&lt;/code&gt; 、 &lt;code&gt;isALPHANUMERIC_utf8&lt;/code&gt; 、 &lt;code&gt;isALPHANUMERIC_utf8_safe&lt;/code&gt; 、 &lt;code&gt;isALPHANUMERIC_LC&lt;/code&gt; 、 &lt;code&gt;isALPHANUMERIC_LC_uvchr&lt;/code&gt; 、 &lt;code&gt;isALPHANUMERIC_LC_utf8&lt;/code&gt; 、および &lt;code&gt;isALPHANUMERIC_LC_utf8_safe&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6fa3ee935b94e5b52cd32b7dfbaa4cfea1f8f549" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is one of the 128 characters in the ASCII character set, analogous to &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:ascii:]]/&lt;/a&gt;&lt;/code&gt;. On non-ASCII platforms, it returns TRUE iff this character corresponds to an ASCII character. Variants &lt;code&gt;isASCII_A()&lt;/code&gt; and &lt;code&gt;isASCII_L1()&lt;/code&gt; are identical to &lt;code&gt;isASCII()&lt;/code&gt; . See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isASCII_uni&lt;/code&gt; , &lt;code&gt;isASCII_utf8&lt;/code&gt; , &lt;code&gt;isASCII_LC&lt;/code&gt; , &lt;code&gt;isASCII_LC_uvchr&lt;/code&gt; , and &lt;code&gt;isASCII_LC_utf8&lt;/code&gt; . Note, however, that some platforms do not have the C library routine &lt;code&gt;isascii()&lt;/code&gt; . In these cases, the variants whose names contain &lt;code&gt;LC&lt;/code&gt; are the same as the corresponding ones without.</source>
          <target state="translated">指定された文字が &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:ascii:]]/&lt;/a&gt;&lt;/code&gt; に類似したASCII文字セットの128文字の1つであるかどうかを示すブール値を返します。非ASCIIプラットフォームでは、この文字がASCII文字に対応する場合はTRUEを返します。変異体 &lt;code&gt;isASCII_A()&lt;/code&gt; と &lt;code&gt;isASCII_L1()&lt;/code&gt; は同一である &lt;code&gt;isASCII()&lt;/code&gt; 。バリアント &lt;code&gt;isASCII_uni&lt;/code&gt; 、 &lt;code&gt;isASCII_utf8&lt;/code&gt; 、 &lt;code&gt;isASCII_LC&lt;/code&gt; 、 &lt;code&gt;isASCII_LC_uvchr&lt;/code&gt; 、および &lt;code&gt;isASCII_LC_utf8&lt;/code&gt; の説明については&lt;a href=&quot;#Character-classification&quot;&gt;、このセクション&lt;/a&gt;の上部を参照してください。ただし、一部のプラットフォームにはCライブラリルーチン &lt;code&gt;isascii()&lt;/code&gt; がないことに注意してください。。これらの場合、名前に &lt;code&gt;LC&lt;/code&gt; が含まれるバリアントは、対応するバリアントのないバリアントと同じです。</target>
        </trans-unit>
        <trans-unit id="92a15f561289a5c813c946c3adbe1194260328e6" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is one of the 128 characters in the ASCII character set, analogous to &lt;code&gt;m/[[:ascii:]]/&lt;/code&gt;. On non-ASCII platforms, it returns TRUE iff this character corresponds to an ASCII character. Variants &lt;code&gt;isASCII_A()&lt;/code&gt; and &lt;code&gt;isASCII_L1()&lt;/code&gt; are identical to &lt;code&gt;isASCII()&lt;/code&gt;. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isASCII_uvchr&lt;/code&gt;, &lt;code&gt;isASCII_utf8&lt;/code&gt;, &lt;code&gt;isASCII_utf8_safe&lt;/code&gt;, &lt;code&gt;isASCII_LC&lt;/code&gt;, &lt;code&gt;isASCII_LC_uvchr&lt;/code&gt;, &lt;code&gt;isASCII_LC_utf8&lt;/code&gt;, and &lt;code&gt;isASCII_LC_utf8_safe&lt;/code&gt;. Note, however, that some platforms do not have the C library routine &lt;code&gt;isascii()&lt;/code&gt;. In these cases, the variants whose names contain &lt;code&gt;LC&lt;/code&gt; are the same as the corresponding ones without.</source>
          <target state="translated">&lt;code&gt;m/[[:ascii:]]/&lt;/code&gt; と同様に、指定された文字がASCII文字セットの128文字の1つであるかどうかを示すブール値を返します。非ASCIIプラットフォームでは、この文字がASCII文字に対応する場合はTRUEを返します。変異体 &lt;code&gt;isASCII_A()&lt;/code&gt; と &lt;code&gt;isASCII_L1()&lt;/code&gt; は同一である &lt;code&gt;isASCII()&lt;/code&gt; 。バリアント &lt;code&gt;isASCII_uvchr&lt;/code&gt; 、 &lt;code&gt;isASCII_utf8&lt;/code&gt; 、 &lt;code&gt;isASCII_utf8_safe&lt;/code&gt; 、 &lt;code&gt;isASCII_LC&lt;/code&gt; 、 &lt;code&gt;isASCII_LC_uvchr&lt;/code&gt; 、 &lt;code&gt;isASCII_LC_utf8&lt;/code&gt; 、および &lt;code&gt;isASCII_LC_utf8_safe&lt;/code&gt; の説明については&lt;a href=&quot;#Character-classification&quot;&gt;、このセクション&lt;/a&gt;の上部を参照してください。。ただし、一部のプラットフォームにはCライブラリルーチン &lt;code&gt;isascii()&lt;/code&gt; がないことに注意してください。これらの場合、名前に &lt;code&gt;LC&lt;/code&gt; が含まれているバリアントは、対応するバリアントに含まれていないものと同じです。</target>
        </trans-unit>
        <trans-unit id="62cd19feb336d757e24d1ca5d00decdbb0f34399" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified filehandle is connected to a tty. Similar to the &lt;code&gt;-t&lt;/code&gt; operator, see &lt;a href=&quot;functions/-x&quot;&gt;-X&lt;/a&gt;.</source>
          <target state="translated">指定されたファイルハンドルがttyに接続されているかどうかを示すブール値を返します。 &lt;code&gt;-t&lt;/code&gt; 演算子と同様に、&lt;a href=&quot;functions/-x&quot;&gt;-Xを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="ffbe1e337f7cd1412297885e72d595c9327f8c29" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified filehandle is connected to a tty. Similar to the &lt;code&gt;-t&lt;/code&gt; operator, see &lt;a href=&quot;perlfunc#-X&quot;&gt;&quot;-X&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="translated">指定されたファイルハンドルがttyに接続されているかどうかを示すブール値を返します。 &lt;code&gt;-t&lt;/code&gt; 演算子と同様に、&lt;a href=&quot;perlfunc#-X&quot;&gt;perlfuncの「-X」を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="f7c03e1b106b9bca9aa586777ddd8acce73f8bb4" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified hash key exists. &lt;code&gt;hash&lt;/code&gt; can be a valid precomputed hash value, or 0 to ask for it to be computed.</source>
          <target state="translated">指定されたハッシュキーが存在するかどうかを示すブール値を返します。 &lt;code&gt;hash&lt;/code&gt; は、事前に計算された有効なハッシュ値か、計算を要求する場合は0です。</target>
        </trans-unit>
        <trans-unit id="121353f5b2eaa9a3d9bda681a610cdc561cf253a" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified hash key exists. The absolute value of &lt;code&gt;klen&lt;/code&gt; is the length of the key. If &lt;code&gt;klen&lt;/code&gt; is negative the key is assumed to be in UTF-8-encoded Unicode.</source>
          <target state="translated">指定されたハッシュキーが存在するかどうかを示すブール値を返します。 &lt;code&gt;klen&lt;/code&gt; の絶対値はキーの長さです。 &lt;code&gt;klen&lt;/code&gt; が負の場合、キーはUTF-8でエンコードされたUnicodeであると想定されます。</target>
        </trans-unit>
        <trans-unit id="4f54adf833eb47099d3693191e1af935d5e57fbe" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified input is one of &lt;code&gt;[A-Za-z]&lt;/code&gt;, analogous to &lt;code&gt;m/[[:alpha:]]/&lt;/code&gt;. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isALPHA_A&lt;/code&gt;, &lt;code&gt;isALPHA_L1&lt;/code&gt;, &lt;code&gt;isALPHA_uvchr&lt;/code&gt;, &lt;code&gt;isALPHA_utf8&lt;/code&gt;, &lt;code&gt;isALPHA_utf8_safe&lt;/code&gt;, &lt;code&gt;isALPHA_LC&lt;/code&gt;, &lt;code&gt;isALPHA_LC_uvchr&lt;/code&gt;, &lt;code&gt;isALPHA_LC_utf8&lt;/code&gt;, and &lt;code&gt;isALPHA_LC_utf8_safe&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;m/[[:alpha:]]/&lt;/code&gt; と同様に、指定された入力が &lt;code&gt;[A-Za-z]&lt;/code&gt; のいずれかであるかどうかを示すブール値を返します。バリアント &lt;code&gt;isALPHA_A&lt;/code&gt; 、 &lt;code&gt;isALPHA_L1&lt;/code&gt; 、 &lt;code&gt;isALPHA_uvchr&lt;/code&gt; 、 &lt;code&gt;isALPHA_utf8&lt;/code&gt; 、 &lt;code&gt;isALPHA_utf8_safe&lt;/code&gt; 、 &lt;code&gt;isALPHA_LC&lt;/code&gt; 、 &lt;code&gt;isALPHA_LC_uvchr&lt;/code&gt; 、 &lt;code&gt;isALPHA_LC_utf8&lt;/code&gt; 、および &lt;code&gt;isALPHA_LC_utf8_safe&lt;/code&gt; の説明については&lt;a href=&quot;#Character-classification&quot;&gt;、このセクション&lt;/a&gt;の上部を参照してください。</target>
        </trans-unit>
        <trans-unit id="fe5313e3d6173b21fb5006ca3813abfeade7dee5" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the strings in the two SVs are identical. Is UTF-8 and 'use bytes' aware and coerces its args to strings if necessary. If the flags include SV_GMAGIC, it handles get-magic, too.</source>
          <target state="translated">2つのSVの文字列が同一であるかどうかを示すブール値を返します。UTF-8 と 'use bytes' を意識しており、必要に応じてその引数を文字列に強制します。フラグに SV_GMAGIC が含まれている場合は、get-magic も処理します。</target>
        </trans-unit>
        <trans-unit id="29d62dc3ef5c0ce2f33205fd37c1d90629e10e6b" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the strings in the two SVs are identical. Is UTF-8 and 'use bytes' aware, handles get magic, and will coerce its args to strings if necessary.</source>
          <target state="translated">2つのSVの文字列が同一であるかどうかを示すブール値を返します。UTF-8 と 'use bytes' を認識し、get magic を扱い、必要に応じてその引数を文字列に強制します。</target>
        </trans-unit>
        <trans-unit id="bb3d3011637a4e752c88edd335b6c4406c1a57c7" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the strings in the two SVs are identical. Is UTF-8 and &lt;code&gt;'use bytes'&lt;/code&gt; aware and coerces its args to strings if necessary. If the flags has the &lt;code&gt;SV_GMAGIC&lt;/code&gt; bit set, it handles get-magic, too.</source>
          <target state="translated">2つのSVの文字列が同一であるかどうかを示すブール値を返します。UTF-8および &lt;code&gt;'use bytes'&lt;/code&gt; 認識し、必要に応じてその引数を文字列に強制します。フラグに &lt;code&gt;SV_GMAGIC&lt;/code&gt; ビットが設定されている場合は、get-magicも処理します。</target>
        </trans-unit>
        <trans-unit id="aba38ee48d2de8d785edf2d5d1d3c61a912609e9" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the strings in the two SVs are identical. Is UTF-8 and &lt;code&gt;'use bytes'&lt;/code&gt; aware, handles get magic, and will coerce its args to strings if necessary.</source>
          <target state="translated">2つのSVの文字列が同一であるかどうかを示すブール値を返します。UTF-8と &lt;code&gt;'use bytes'&lt;/code&gt; 認識し、ハンドルは魔法を取得し、必要に応じて引数を文字列に強制変換します。</target>
        </trans-unit>
        <trans-unit id="f17bf5c8034ffaf1b55c10e89659d3e8e5d24b49" translate="yes" xml:space="preserve">
          <source>Returns a boolean status indicating whether or not the given classname is either &lt;code&gt;UNIVERSAL&lt;/code&gt; itself, or one of &lt;code&gt;UNIVERSAL&lt;/code&gt; 's parents by &lt;code&gt;@ISA&lt;/code&gt; inheritance.</source>
          <target state="translated">指定されたクラス名が &lt;code&gt;UNIVERSAL&lt;/code&gt; 自体であるか、 &lt;code&gt;@ISA&lt;/code&gt; 継承による &lt;code&gt;UNIVERSAL&lt;/code&gt; の親の1つであるかを示すブールステータスを返します。</target>
        </trans-unit>
        <trans-unit id="979d78fefc09b34c9d38c93f199f4bb16cd649c2" translate="yes" xml:space="preserve">
          <source>Returns a boolean status indicating whether or not the given classname is either &lt;code&gt;UNIVERSAL&lt;/code&gt; itself, or one of &lt;code&gt;UNIVERSAL&lt;/code&gt;'s parents by &lt;code&gt;@ISA&lt;/code&gt; inheritance.</source>
          <target state="translated">指定されたクラス名が &lt;code&gt;UNIVERSAL&lt;/code&gt; 自体であるか、 &lt;code&gt;@ISA&lt;/code&gt; 継承による &lt;code&gt;UNIVERSAL&lt;/code&gt; の親の1つであるかを示すブールステータスを返します。</target>
        </trans-unit>
        <trans-unit id="d7bf100c650c225813f8d3ca45243f2ec361a683" translate="yes" xml:space="preserve">
          <source>Returns a boolean to indicate whether the current object has content. Some special files like directories and so on never will have any content. This method is mainly to make sure you don't get warnings for using uninitialized values when looking at an object's content.</source>
          <target state="translated">現在のオブジェクトがコンテンツを持っているかどうかを示すブール値を返します。ディレクトリなどの特別なファイルには、コンテンツを持たないものもあります。このメソッドは主に、オブジェクトのコンテンツを見る際に初期化されていない値を使用した場合に警告を受けないようにするためのものです。</target>
        </trans-unit>
        <trans-unit id="9137f275a766c2cceed1614358dbf481ba99d8d3" translate="yes" xml:space="preserve">
          <source>Returns a boolean value indicating whether or not the number of tests planned matches the number of tests run.</source>
          <target state="translated">計画されたテストの数が実行されたテストの数と一致するかどうかを示すブール値を返します。</target>
        </trans-unit>
        <trans-unit id="e97bd77a512fc1c3afe80bad2a24a1469187ca39" translate="yes" xml:space="preserve">
          <source>Returns a boolean value indicating whether or not the test passed, regardless of its TODO status.</source>
          <target state="translated">TODOステータスに関係なく、テストが合格したかどうかを示すブール値を返します。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
