<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="5a78e74b3a77143d8c71cfa329a6e542084b340e" translate="yes" xml:space="preserve">
          <source>Defaults to STDOUT.</source>
          <target state="translated">デフォルトは STDOUT です。</target>
        </trans-unit>
        <trans-unit id="a238dcad55848cd42cd0ed2c0201eceef53c02cf" translate="yes" xml:space="preserve">
          <source>Defaults to false, set to true to enable the described behaviour.</source>
          <target state="translated">デフォルトは false で、true に設定すると記述された動作が有効になります。</target>
        </trans-unit>
        <trans-unit id="ecd31712dbbddfd1fe36a725d021309cb2a8b7de" translate="yes" xml:space="preserve">
          <source>Defaults to false, so it will remove null arguments. Set to true to allow them.</source>
          <target state="translated">デフォルトは false で、NULL 引数を削除します。trueに設定すると、それらを許可します。</target>
        </trans-unit>
        <trans-unit id="83771af0d9e990cfd4209b40879c5dd720b86a4b" translate="yes" xml:space="preserve">
          <source>Defaults to false.</source>
          <target state="translated">デフォルトは false です。</target>
        </trans-unit>
        <trans-unit id="6dad3c257030adc921b32d1f197189b8ec627938" translate="yes" xml:space="preserve">
          <source>Defaults to off. Normally forking inside a subtest will actually fork the subtest, resulting in 2 final subtest events. This parameter will turn off that behavior, only the original process/thread will return a final subtest event.</source>
          <target state="translated">デフォルトはoffです。通常、サブテスト内でフォークすると、実際にサブテストがフォークされ、2つの最終サブテストイベントが発生します。このパラメータは、この動作をオフにし、元のプロセス/スレッドのみが最終的なサブテストイベントを返します。</target>
        </trans-unit>
        <trans-unit id="18d301270448347decdf5cb69be9723a550b7cb5" translate="yes" xml:space="preserve">
          <source>Defaults to on.</source>
          <target state="translated">デフォルトは on です。</target>
        </trans-unit>
        <trans-unit id="2b3470c82dabd8d59a7a8d6175578fc38bf7d623" translate="yes" xml:space="preserve">
          <source>Defaults to true. Turn this off at your own risk.</source>
          <target state="translated">デフォルトはtrueです。自己責任でオフにしてください。</target>
        </trans-unit>
        <trans-unit id="19d3228f23c29d1d70307e4e28b3e13d0ba13b19" translate="yes" xml:space="preserve">
          <source>Deferencing Method Call</source>
          <target state="translated">ディフェレンシングメソッドコール</target>
        </trans-unit>
        <trans-unit id="87a045f3d65fd182c7b238c413050e4d1b888897" translate="yes" xml:space="preserve">
          <source>Deferred Signals (Safe Signals)</source>
          <target state="translated">繰延信号(セーフ信号</target>
        </trans-unit>
        <trans-unit id="f67da11f1ea091fa4522255eade09d8d8a4672ae" translate="yes" xml:space="preserve">
          <source>Deferred Writing</source>
          <target state="translated">遅延書き込み</target>
        </trans-unit>
        <trans-unit id="2015aea6e3599a4de6f58c3bf9fd92bcc72ebaa8" translate="yes" xml:space="preserve">
          <source>Deferred write; only applicable to files opened for shared access.</source>
          <target state="translated">共有アクセス用にオープンされたファイルにのみ適用されます。</target>
        </trans-unit>
        <trans-unit id="f16543b2bfaf8c9f85b87e700f4cb4c04d588365" translate="yes" xml:space="preserve">
          <source>Deferred writes are cached in memory up to the limit specified by the &lt;code&gt;dw_size&lt;/code&gt; option (see above). If the deferred-write buffer is full and you try to write still more deferred data, the buffer will be flushed. All buffered data will be written immediately, the buffer will be emptied, and the now-empty space will be used for future deferred writes.</source>
          <target state="translated">遅延書き込みは、 &lt;code&gt;dw_size&lt;/code&gt; オプションで指定された制限（上記を参照）までメモリにキャッシュされます。遅延書き込みバッファがいっぱいで、さらに遅延データを書き込もうとすると、バッファがフラッシュされます。バッファリングされたすべてのデータがすぐに書き込まれ、バッファが空になり、現在空になったスペースが将来の据え置き書き込みに使用されます。</target>
        </trans-unit>
        <trans-unit id="b09e3bbab301107bd10474a2528bb3ad4a99662e" translate="yes" xml:space="preserve">
          <source>Define DL_FUNCS and DL_VARS and write the *.exp files.</source>
          <target state="translated">DL_FUNCSとDL_VARSを定義し、*.expファイルを書き込みます。</target>
        </trans-unit>
        <trans-unit id="12da81497a7167741d2b29f763f0e078260a1250" translate="yes" xml:space="preserve">
          <source>Define OPTAG as a symbolic name for OPSET. Optag names always start with a colon &lt;code&gt;:&lt;/code&gt; .</source>
          <target state="translated">OPTAGをOPSETのシンボル名として定義します。optag名は常にコロンで始まり &lt;code&gt;:&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c4597d1c3a266480856b08e6de20cb969a5158d6" translate="yes" xml:space="preserve">
          <source>Define OPTAG as a symbolic name for OPSET. Optag names always start with a colon &lt;code&gt;:&lt;/code&gt;.</source>
          <target state="translated">OPTAGをOPSETの記号名として定義します。Optag名は常にコロンで始まります &lt;code&gt;:&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b358b3f5282189ce82f741fa330a8ab3125c3533" translate="yes" xml:space="preserve">
          <source>Define TO_UNIX to convert OS2 linefeeds to Unix style.</source>
          <target state="translated">TO_UNIXを定義して、OS2のラインフィードをUnixスタイルに変換します。</target>
        </trans-unit>
        <trans-unit id="25a3e54cd9dd2ac97b6cf9da4fc775b0fd09bf4f" translate="yes" xml:space="preserve">
          <source>Define a command alias, like</source>
          <target state="translated">コマンドのエイリアスを定義します。</target>
        </trans-unit>
        <trans-unit id="5393ccb5285b32c0372bdc2ca13e7ffc258abe0f" translate="yes" xml:space="preserve">
          <source>Define a macro. &lt;code&gt;Net::Netrc&lt;/code&gt; only parses this field to be compatible with</source>
          <target state="translated">マクロを定義します。 &lt;code&gt;Net::Netrc&lt;/code&gt; は、このフィールドとのみ互換性があるように解析します</target>
        </trans-unit>
        <trans-unit id="8395adae464b235b6ab8086a0e2c25cc741cb067" translate="yes" xml:space="preserve">
          <source>Define a named capture group. Equivalent to &lt;code&gt;(?&amp;lt;&lt;i&gt;NAME&lt;/i&gt;&amp;gt;&lt;i&gt;pattern&lt;/i&gt;)&lt;/code&gt;.</source>
          <target state="translated">名前付きキャプチャグループを定義します。 &lt;code&gt;(?&amp;lt;&lt;i&gt;NAME&lt;/i&gt;&amp;gt;&lt;i&gt;pattern&lt;/i&gt;)&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="4f7d921c7430791d35aa71dd9a7604bd56ac3756" translate="yes" xml:space="preserve">
          <source>Define a named capture group. Equivalent to &lt;code&gt;(?&amp;lt;NAME&amp;gt;pattern)&lt;/code&gt;.</source>
          <target state="translated">名前付きキャプチャグループを定義します。 &lt;code&gt;(?&amp;lt;NAME&amp;gt;pattern)&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="51cc1c473eb56c40ad07bc0030ce03dcaeba9ef9" translate="yes" xml:space="preserve">
          <source>Define at compile-time your own custom character properties for use in regexes.</source>
          <target state="translated">コンパイル時に、正規表現で使用する独自のカスタム文字プロパティを定義します。</target>
        </trans-unit>
        <trans-unit id="a5e319203d5fc86ef244e3b22f31ca80388261db" translate="yes" xml:space="preserve">
          <source>Define this symbol if you want not-threaded faster perl.</source>
          <target state="translated">スレッド化されない高速なPerlを使いたい場合は、このシンボルを定義します。</target>
        </trans-unit>
        <trans-unit id="727c054b5e2c2aca2655853479e8b8681bd2f78c" translate="yes" xml:space="preserve">
          <source>DefineDosDevice</source>
          <target state="translated">DefineDosDevice</target>
        </trans-unit>
        <trans-unit id="c1c3deee474aee7462f10a61e2c3a4d5cc1314dd" translate="yes" xml:space="preserve">
          <source>DefineDosDeviceW</source>
          <target state="translated">DefineDosDeviceW</target>
        </trans-unit>
        <trans-unit id="47e540fd76e635df75335773557a724d22e221f7" translate="yes" xml:space="preserve">
          <source>Defined Falsehood. (&lt;code&gt;PL_sv_no&lt;/code&gt; ) The value is not needed (and ignored).</source>
          <target state="translated">虚偽の定義。（ &lt;code&gt;PL_sv_no&lt;/code&gt; ）値は不要です（無視されます）。</target>
        </trans-unit>
        <trans-unit id="b3d6281cc7c62824136d151f1453eec89b0fc573" translate="yes" xml:space="preserve">
          <source>Defined Falsehood. (&lt;code&gt;PL_sv_no&lt;/code&gt;) The value is not needed (and ignored).</source>
          <target state="translated">定義された虚偽。（ &lt;code&gt;PL_sv_no&lt;/code&gt; ）値は必要ありません（無視されます）。</target>
        </trans-unit>
        <trans-unit id="a264576fd62b5306a0590e9ebcaaeb8b9ebd00c2" translate="yes" xml:space="preserve">
          <source>Defined as a Make macro, it is invoked with file and directory arguments; &lt;code&gt;autosplit&lt;/code&gt; will split the specified file into the specified directory and delete obsolete &lt;code&gt;.al&lt;/code&gt; files, after checking first that the module does use the AutoLoader, and ensuring that the module is not already currently split in its current form (the modtime test).</source>
          <target state="translated">Makeマクロとして定義され、ファイルとディレクトリの引数で呼び出されます。 &lt;code&gt;autosplit&lt;/code&gt; は、指定されたファイルを指定されたディレクトリに分割し、古い &lt;code&gt;.al&lt;/code&gt; ファイルを削除します。最初にモジュールがオートローダーを使用していることを確認し、モジュールが現在の形式で現在分割されていないことを確認します（modtimeテスト）。</target>
        </trans-unit>
        <trans-unit id="0f9705fadf1dfeea4d0b965d304ecf0e1287b32a" translate="yes" xml:space="preserve">
          <source>Defined if $procselfexe is symlink to the absolute pathname of the executing program.</source>
          <target state="translated">procelfexe が実行プログラムの絶対パス名にシンボリックリンクされている場合に定義されます。</target>
        </trans-unit>
        <trans-unit id="e5216d7555d787b7d47a25b9b3958cd7e8056fef" translate="yes" xml:space="preserve">
          <source>Defined if the test should immediately exit, the value is the exit code and may be &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">テストをすぐに終了する必要があるかどうかを定義します。値は終了コードであり、 &lt;code&gt;0&lt;/code&gt; の場合があります。</target>
        </trans-unit>
        <trans-unit id="df751a148221e657237a264ca9bfcbc240163953" translate="yes" xml:space="preserve">
          <source>Defined if we're dealing with the &lt;code&gt;GNU&lt;/code&gt; C Library.</source>
          <target state="translated">&lt;code&gt;GNU&lt;/code&gt; Cライブラリを扱っている場合に定義されます。</target>
        </trans-unit>
        <trans-unit id="487af9998b90c5fd5fb9d7386051e0f2dc3d4e56" translate="yes" xml:space="preserve">
          <source>Defined in RFC 2277, this is for tagging text (which must include English text, and might/should include text in other appropriate languages) that is emitted in a context where language-negotiation wasn't possible -- in SMTP mail failure messages, for example.</source>
          <target state="translated">これはRFC2277で定義されており、言語ネゴシエーションが可能ではなかったコンテキストで放出されるテキスト(英語のテキストを含まなければならず、他の適切な言語のテキストを含む可能性がある/含まなければならない)にタグを付けるためのものである。</target>
        </trans-unit>
        <trans-unit id="556105abd123d9bd31309dd7124c6423aec4ac99" translate="yes" xml:space="preserve">
          <source>Defines EXTRALIBS, LDLOADLIBS, BSLOADLIBS, LD_RUN_PATH. See &lt;a href=&quot;ExtUtils::Liblist&quot;&gt;ExtUtils::Liblist&lt;/a&gt; for details.</source>
          <target state="translated">EXTRALIBS、LDLOADLIBS、BSLOADLIBS、LD_RUN_PATHを定義します。詳細については、&lt;a href=&quot;ExtUtils::Liblist&quot;&gt;ExtUtils :: Liblist&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="d0094836cd417237e53e36d38b6bb157c23bb8dd" translate="yes" xml:space="preserve">
          <source>Defines EXTRALIBS, LDLOADLIBS, BSLOADLIBS, LD_RUN_PATH. See &lt;a href=&quot;liblist&quot;&gt;ExtUtils::Liblist&lt;/a&gt; for details.</source>
          <target state="translated">EXTRALIBS、LDLOADLIBS、BSLOADLIBS、LD_RUN_PATHを定義します。詳細は&lt;a href=&quot;liblist&quot;&gt;ExtUtils :: Liblist&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="54d5e1ace8616b0824e4e69deda9fb5d35c9ab98" translate="yes" xml:space="preserve">
          <source>Defines a check in target for RCS.</source>
          <target state="translated">RCS のチェックイン対象を定義します。</target>
        </trans-unit>
        <trans-unit id="fe64ed45d43654228ab2f263b3250cb6d237ffdb" translate="yes" xml:space="preserve">
          <source>Defines a couple of constants in the Makefile that are imported from %Config.</source>
          <target state="translated">コンフィグからインポートされる Makefile 内のいくつかの定数を定義します。</target>
        </trans-unit>
        <trans-unit id="45640d4e061562862c8b269f9919db4c555b95a5" translate="yes" xml:space="preserve">
          <source>Defines a lot of macros for distribution support.</source>
          <target state="translated">ディストリビューションサポートのための多くのマクロを定義します。</target>
        </trans-unit>
        <trans-unit id="867a33cb7f9100f43ef78833d1dd593ef2e25839" translate="yes" xml:space="preserve">
          <source>Defines a new DOS device, overrides the current definition of a DOS device, or deletes a definition of a DOS device. Like most routines, returns a true value if successful and a false value [and sets &lt;code&gt;$^E&lt;/code&gt; and &lt;code&gt;regLastError()&lt;/code&gt;] on failure.</source>
          <target state="translated">新しいDOSデバイスを定義するか、DOSデバイスの現在の定義を上書きするか、DOSデバイスの定義を削除します。ほとんどのルーチンと同様に、成功した場合はtrue値を返し、失敗した場合はfalse値を返します[そして &lt;code&gt;$^E&lt;/code&gt; と &lt;code&gt;regLastError()&lt;/code&gt; を設定します]。</target>
        </trans-unit>
        <trans-unit id="8f2c384608aa9da85fcd183aa27b7be131f7d130" translate="yes" xml:space="preserve">
          <source>Defines a simple perl call that runs autosplit. May be deprecated by pm_to_blib soon.</source>
          <target state="translated">autosplit を実行するシンプルな perl コールを定義します。pm_to_blib によってすぐに非推奨になるかもしれません。</target>
        </trans-unit>
        <trans-unit id="7f1b350e0e67e0413f358f35911f68c6865314e4" translate="yes" xml:space="preserve">
          <source>Defines a target that produces the distribution in the scratch directory, and runs 'perl Makefile.PL; make ;make test' in that subdirectory.</source>
          <target state="translated">スクラッチディレクトリにディストリビューションを生成するターゲットを定義し、そのサブディレクトリで'perl Makefile.PL;make ;make test'を実行します。</target>
        </trans-unit>
        <trans-unit id="302537770d292c74e66370b599a3b03ffe01a51a" translate="yes" xml:space="preserve">
          <source>Defines at least these macros.</source>
          <target state="translated">少なくともこれらのマクロを定義します。</target>
        </trans-unit>
        <trans-unit id="6b99cfd58fae6b3dae8c7123af0773072b8fe5e5" translate="yes" xml:space="preserve">
          <source>Defines how to produce the *.a (or equivalent) files.</source>
          <target state="translated">.a (または同等の)ファイルを生成する方法を定義します。</target>
        </trans-unit>
        <trans-unit id="dc26efd3c32adf7d1de84003c339188a38e358f8" translate="yes" xml:space="preserve">
          <source>Defines how to produce the *.so (or equivalent) files.</source>
          <target state="translated">.so (または同等の)ファイルを生成する方法を定義します。</target>
        </trans-unit>
        <trans-unit id="8695ac2968551bde31876b3d67b9ced4a12a9549" translate="yes" xml:space="preserve">
          <source>Defines how to rewrite the Makefile.</source>
          <target state="translated">Makefileを書き換える方法を定義します。</target>
        </trans-unit>
        <trans-unit id="aa14513b66442c9d98bfa0a3967dff7cec318a3f" translate="yes" xml:space="preserve">
          <source>Defines how to run the archive utility</source>
          <target state="translated">アーカイブユーティリティの実行方法を定義します。</target>
        </trans-unit>
        <trans-unit id="da8d903021e288194f11201bbf4d889537e55aee" translate="yes" xml:space="preserve">
          <source>Defines how to run the archive utility.</source>
          <target state="translated">アーカイブユーティリティの実行方法を定義します。</target>
        </trans-unit>
        <trans-unit id="22c6065d98e3206f28470f013ce533e0e15ea743" translate="yes" xml:space="preserve">
          <source>Defines suffix rules to go from XS to object files directly. This is only intended for broken make implementations.</source>
          <target state="translated">XS からオブジェクトファイルに直接アクセスするためのサフィックスルールを定義します。これは壊れた make の実装のみを対象としています。</target>
        </trans-unit>
        <trans-unit id="6fe1a6c36f7b3f5038b472ceb38a921d8b1ca80b" translate="yes" xml:space="preserve">
          <source>Defines suffix rules to go from XS to object files directly. This was originally only intended for broken make implementations, but is now necessary for per-XS file under &lt;code&gt;XSMULTI&lt;/code&gt;, since each XS file might have an individual &lt;code&gt;$(VERSION)&lt;/code&gt;.</source>
          <target state="translated">XSからオブジェクトファイルに直接移動するサフィックスルールを定義します。これは元々、壊れたmake実装のみを対象としていましたが、各XSファイルに個別の &lt;code&gt;$(VERSION)&lt;/code&gt; がある可能性があるため、 &lt;code&gt;XSMULTI&lt;/code&gt; の下のXSファイルごとに必要になりました。</target>
        </trans-unit>
        <trans-unit id="bb1f92a570809211d4c32fad26b719cbb9cb90b8" translate="yes" xml:space="preserve">
          <source>Defines target that copies all files in the hash PM to their destination and autosplits them. See &lt;a href=&quot;ExtUtils::Install#DESCRIPTION&quot;&gt;&quot;DESCRIPTION&quot; in ExtUtils::Install&lt;/a&gt;</source>
          <target state="translated">ハッシュPM内のすべてのファイルを宛先にコピーし、それらを自動分割するターゲットを定義します。&lt;a href=&quot;ExtUtils::Install#DESCRIPTION&quot;&gt;ExtUtils :: Installの「DESCRIPTION」を&lt;/a&gt;参照してください</target>
        </trans-unit>
        <trans-unit id="b3b41acc6b49a6388409ba10f2258e522cda4bba" translate="yes" xml:space="preserve">
          <source>Defines target that copies all files in the hash PM to their destination and autosplits them. See &lt;a href=&quot;install#DESCRIPTION&quot;&gt;DESCRIPTION in ExtUtils::Install&lt;/a&gt;</source>
          <target state="translated">ハッシュPM内のすべてのファイルを宛先にコピーし、それらを自動分割するターゲットを定義します。&lt;a href=&quot;install#DESCRIPTION&quot;&gt;ExtUtils :: Installの説明を&lt;/a&gt;参照してください</target>
        </trans-unit>
        <trans-unit id="4adac1897b3589686f6012b335a376dba9440a99" translate="yes" xml:space="preserve">
          <source>Defines target that creates a PPD (Perl Package Description) file for a binary distribution.</source>
          <target state="translated">バイナリ・ディストリビューション用のPPD(Perl Package Description)ファイルを作成するターゲットを定義します。</target>
        </trans-unit>
        <trans-unit id="81215a51ffc47aa71de599db8f3ad3d93520e3be" translate="yes" xml:space="preserve">
          <source>Defines targets and routines to translate the pods into manpages and put them into the INST_* directories.</source>
          <target state="translated">ポッドを man ページに変換して INST_*ディレクトリに配置するターゲットとルーチンを定義します。</target>
        </trans-unit>
        <trans-unit id="a27612024b8b930142c07dfc2a483eb40f35b6c8" translate="yes" xml:space="preserve">
          <source>Defines targets for bootstrap files.</source>
          <target state="translated">ブートストラップファイルのターゲットを定義します。</target>
        </trans-unit>
        <trans-unit id="d67b6bc334f7365a22e55924832c3099c1799069" translate="yes" xml:space="preserve">
          <source>Defines targets to make and to install EXE_FILES.</source>
          <target state="translated">EXE_FILESを作成・インストールするターゲットを定義します。</target>
        </trans-unit>
        <trans-unit id="a39e083fd927c6ae8fb97333fcad3f2b452cafcb" translate="yes" xml:space="preserve">
          <source>Defines targets to process subdirectories.</source>
          <target state="translated">サブディレクトリを処理するターゲットを定義します。</target>
        </trans-unit>
        <trans-unit id="4b99ef7da9945c228db1380016cfa3962ddce9f3" translate="yes" xml:space="preserve">
          <source>Defines targets to run *.PL files.</source>
          <target state="translated">.PLファイルを実行するターゲットを定義します。</target>
        </trans-unit>
        <trans-unit id="d9ad31fa070099a4fc5216a15ac2552cb8720903" translate="yes" xml:space="preserve">
          <source>Defines the DESTDIR and DEST* variables paralleling the INSTALL*.</source>
          <target state="translated">INSTALL*と並行してDESTDIRとDEST*変数を定義します。</target>
        </trans-unit>
        <trans-unit id="ba94224c3086851c054895958309c5f4d0716300" translate="yes" xml:space="preserve">
          <source>Defines the PERLDLL symbol if we are configured for static building since all code destined for the perl5xx.dll must be compiled with the PERLDLL symbol defined.</source>
          <target state="translated">PERLDLLシンボルを定義します。perl5xx.dll向けのコードはすべて、定義されたPERLDLLシンボルでコンパイルされなければならないため、スタティックビルディングのために構成されている場合にPERLDLLシンボルを定義します。</target>
        </trans-unit>
        <trans-unit id="e8fef87bd74d9d4f90d787908362dc30b0d77629" translate="yes" xml:space="preserve">
          <source>Defines the clean target.</source>
          <target state="translated">クリーンターゲットを定義します。</target>
        </trans-unit>
        <trans-unit id="44c298f8aa784474d919a3c44fea66470e8f2e7f" translate="yes" xml:space="preserve">
          <source>Defines the compression level used by zlib. The value should either be a number between 0 and 9 (0 means no compression and 9 is maximum compression), or one of the symbolic constants defined below.</source>
          <target state="translated">zlib が使用する圧縮レベルを定義します。値は 0 から 9 までの数値 (0 は圧縮なし、9 は最大圧縮を意味します)、または以下に定義されているシンボリック定数のいずれかでなければなりません。</target>
        </trans-unit>
        <trans-unit id="f42bdaa318d7d2b3aed95081e60d514ae57c0a40" translate="yes" xml:space="preserve">
          <source>Defines the compression level. Valid values are 0 through 9, &lt;code&gt;Z_NO_COMPRESSION&lt;/code&gt; , &lt;code&gt;Z_BEST_SPEED&lt;/code&gt; , &lt;code&gt;Z_BEST_COMPRESSION&lt;/code&gt; , and &lt;code&gt;Z_DEFAULT_COMPRESSION&lt;/code&gt; .</source>
          <target state="translated">圧縮レベルを定義します。有効な値は0〜9、 &lt;code&gt;Z_NO_COMPRESSION&lt;/code&gt; 、 &lt;code&gt;Z_BEST_SPEED&lt;/code&gt; 、 &lt;code&gt;Z_BEST_COMPRESSION&lt;/code&gt; 、および &lt;code&gt;Z_DEFAULT_COMPRESSION&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="d2ff9947388ab0d376267f08f9bc97c18c40c0c7" translate="yes" xml:space="preserve">
          <source>Defines the compression level. Valid values are 0 through 9, &lt;code&gt;Z_NO_COMPRESSION&lt;/code&gt;, &lt;code&gt;Z_BEST_SPEED&lt;/code&gt;, &lt;code&gt;Z_BEST_COMPRESSION&lt;/code&gt;, and &lt;code&gt;Z_DEFAULT_COMPRESSION&lt;/code&gt;.</source>
          <target state="translated">圧縮レベルを定義します。有効な値は0から9、 &lt;code&gt;Z_NO_COMPRESSION&lt;/code&gt; 、 &lt;code&gt;Z_BEST_SPEED&lt;/code&gt; 、 &lt;code&gt;Z_BEST_COMPRESSION&lt;/code&gt; 、および &lt;code&gt;Z_DEFAULT_COMPRESSION&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="40143f5226bb902295ca1dda0de7dc4d4309dfae" translate="yes" xml:space="preserve">
          <source>Defines the compression method. The only valid value at present (and the default) is &lt;code&gt;Z_DEFLATED&lt;/code&gt; .</source>
          <target state="translated">圧縮方法を定義します。現在（およびデフォルト）の唯一の有効な値は &lt;code&gt;Z_DEFLATED&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="f584dfc56442ac5a945501f77359fb2855048784" translate="yes" xml:space="preserve">
          <source>Defines the compression method. The only valid value at present (and the default) is &lt;code&gt;Z_DEFLATED&lt;/code&gt;.</source>
          <target state="translated">圧縮方法を定義します。現在（およびデフォルトで）有効な値は &lt;code&gt;Z_DEFLATED&lt;/code&gt; のみです。</target>
        </trans-unit>
        <trans-unit id="deaa8bcc66f1718ba796d4871baf848aff3c710f" translate="yes" xml:space="preserve">
          <source>Defines the compression method. The only valid value at present (and the default) is Z_DEFLATED.</source>
          <target state="translated">圧縮方法を定義します。現在有効な値は Z_DEFLATED のみです (デフォルトでは Z_DEFLATED)。</target>
        </trans-unit>
        <trans-unit id="e5f8cd0a2961419147b82d106eae039801beefea" translate="yes" xml:space="preserve">
          <source>Defines the dependency from all *.h files that come with the perl distribution.</source>
          <target state="translated">perl ディストリビューションに付属するすべての *.h ファイルからの依存関係を定義します。</target>
        </trans-unit>
        <trans-unit id="740df2004d6262227a64962e7679f8e429418ecc" translate="yes" xml:space="preserve">
          <source>Defines the dynamic target.</source>
          <target state="translated">動的ターゲットを定義します。</target>
        </trans-unit>
        <trans-unit id="5f6aea77294d02ec6fd46c657ab20cc6e5da28ce" translate="yes" xml:space="preserve">
          <source>Defines the install target.</source>
          <target state="translated">インストール先を定義します。</target>
        </trans-unit>
        <trans-unit id="476771d611b7ad6cde3ad6c65766d9fa62c6985b" translate="yes" xml:space="preserve">
          <source>Defines the linkext target which in turn defines the LINKTYPE.</source>
          <target state="translated">linkextターゲットを定義し、そのリンクタイプを定義します。</target>
        </trans-unit>
        <trans-unit id="edc3b76378cfbd91d0d30a2255a1316aaa066a6e" translate="yes" xml:space="preserve">
          <source>Defines the macros for the &lt;code&gt;dynamic_lib&lt;/code&gt; section.</source>
          <target state="translated">&lt;code&gt;dynamic_lib&lt;/code&gt; セクションのマクロを定義します。</target>
        </trans-unit>
        <trans-unit id="28bca9ceee2fa0c0c2202b5cce5e6315839954c5" translate="yes" xml:space="preserve">
          <source>Defines the realclean target.</source>
          <target state="translated">リアルクリーンターゲットを定義します。</target>
        </trans-unit>
        <trans-unit id="bac8777a6d220e0396ec5890429b6a97cd45096d" translate="yes" xml:space="preserve">
          <source>Defines the recipes for the &lt;code&gt;dynamic_lib&lt;/code&gt; section.</source>
          <target state="translated">&lt;code&gt;dynamic_lib&lt;/code&gt; セクションのレシピを定義します。</target>
        </trans-unit>
        <trans-unit id="df17c3d5afb96da78ecfbc3b608f8fded1e0252a" translate="yes" xml:space="preserve">
          <source>Defines the recipes for the &lt;code&gt;static_lib&lt;/code&gt; section.</source>
          <target state="translated">&lt;code&gt;static_lib&lt;/code&gt; セクションのレシピを定義します。</target>
        </trans-unit>
        <trans-unit id="187b77c07dcdb58c6c97c87717ccce9d654bf4c9" translate="yes" xml:space="preserve">
          <source>Defines the scratch directory target that will hold the distribution before tar-ing (or shar-ing).</source>
          <target state="translated">tar-ing (またはshar-ing)の前にディストリビューションを保持するスクラッチディレクトリのターゲットを定義します。</target>
        </trans-unit>
        <trans-unit id="7111ead71f2d3431a6510a936ce620bc4b1e5ad4" translate="yes" xml:space="preserve">
          <source>Defines the static target.</source>
          <target state="translated">静的ターゲットを定義します。</target>
        </trans-unit>
        <trans-unit id="c63068c7e0232b8f723215365b2896a0e197617e" translate="yes" xml:space="preserve">
          <source>Defines the strategy used to tune the compression. The valid values are &lt;code&gt;Z_DEFAULT_STRATEGY&lt;/code&gt; , &lt;code&gt;Z_FILTERED&lt;/code&gt; , &lt;code&gt;Z_RLE&lt;/code&gt; , &lt;code&gt;Z_FIXED&lt;/code&gt; and &lt;code&gt;Z_HUFFMAN_ONLY&lt;/code&gt; .</source>
          <target state="translated">圧縮の調整に使用する戦略を定義します。有効な値は、 &lt;code&gt;Z_DEFAULT_STRATEGY&lt;/code&gt; 、 &lt;code&gt;Z_FILTERED&lt;/code&gt; 、 &lt;code&gt;Z_RLE&lt;/code&gt; 、 &lt;code&gt;Z_FIXED&lt;/code&gt; 、および &lt;code&gt;Z_HUFFMAN_ONLY&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="6f3b8848d647f32e943342a5efdd76d9b487a63a" translate="yes" xml:space="preserve">
          <source>Defines the strategy used to tune the compression. The valid values are &lt;code&gt;Z_DEFAULT_STRATEGY&lt;/code&gt; , &lt;code&gt;Z_FILTERED&lt;/code&gt; and &lt;code&gt;Z_HUFFMAN_ONLY&lt;/code&gt; .</source>
          <target state="translated">圧縮の調整に使用する戦略を定義します。有効な値は、 &lt;code&gt;Z_DEFAULT_STRATEGY&lt;/code&gt; 、 &lt;code&gt;Z_FILTERED&lt;/code&gt; および &lt;code&gt;Z_HUFFMAN_ONLY&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="d9bb3b119645104a0a80d624fe014b8c2f08c1ae" translate="yes" xml:space="preserve">
          <source>Defines the strategy used to tune the compression. The valid values are &lt;code&gt;Z_DEFAULT_STRATEGY&lt;/code&gt;, &lt;code&gt;Z_FILTERED&lt;/code&gt; and &lt;code&gt;Z_HUFFMAN_ONLY&lt;/code&gt;.</source>
          <target state="translated">圧縮を調整するために使用される戦略を定義します。有効な値は、 &lt;code&gt;Z_DEFAULT_STRATEGY&lt;/code&gt; 、 &lt;code&gt;Z_FILTERED&lt;/code&gt; 、および &lt;code&gt;Z_HUFFMAN_ONLY&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="53197f2d448d72aa5276dd4ad84b79f6eb6a7f85" translate="yes" xml:space="preserve">
          <source>Defines the strategy used to tune the compression. The valid values are &lt;code&gt;Z_DEFAULT_STRATEGY&lt;/code&gt;, &lt;code&gt;Z_FILTERED&lt;/code&gt;, &lt;code&gt;Z_RLE&lt;/code&gt;, &lt;code&gt;Z_FIXED&lt;/code&gt; and &lt;code&gt;Z_HUFFMAN_ONLY&lt;/code&gt;.</source>
          <target state="translated">圧縮を調整するために使用される戦略を定義します。有効な値は、 &lt;code&gt;Z_DEFAULT_STRATEGY&lt;/code&gt; 、 &lt;code&gt;Z_FILTERED&lt;/code&gt; 、 &lt;code&gt;Z_RLE&lt;/code&gt; 、 &lt;code&gt;Z_FIXED&lt;/code&gt; 、および &lt;code&gt;Z_HUFFMAN_ONLY&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="3eee1848a08d0972c7c4402500e5de73ab130c5a" translate="yes" xml:space="preserve">
          <source>Defines the strategy used to tune the compression. Use one of the symbolic constants defined below.</source>
          <target state="translated">圧縮を調整するために使用する戦略を定義します。以下に定義されているシンボリック定数のいずれかを使用します。</target>
        </trans-unit>
        <trans-unit id="0140c569a167a40b758a74ad75bbfa4a322932c6" translate="yes" xml:space="preserve">
          <source>Defines the string that is passed to recursive make calls in subdirectories.</source>
          <target state="translated">サブディレクトリ内の再帰的makeコールに渡される文字列を定義します。</target>
        </trans-unit>
        <trans-unit id="8285ce4018e847f63af428f8a58d339f9bc553a5" translate="yes" xml:space="preserve">
          <source>Defines the string that is passed to recursive make calls in subdirectories. The variables like &lt;code&gt;PASTHRU_DEFINE&lt;/code&gt; are used in each level, and passed downwards on the command-line with e.g. the value of that level's DEFINE. Example:</source>
          <target state="translated">サブディレクトリ内の再帰的なmake呼び出しに渡される文字列を定義します。 &lt;code&gt;PASTHRU_DEFINE&lt;/code&gt; のような変数は各レベルで使用され、コマンドラインでそのレベルのDEFINEの値などとともに下向きに渡されます。例：</target>
        </trans-unit>
        <trans-unit id="3da735f442360be74e54c58a85701764b3e96022" translate="yes" xml:space="preserve">
          <source>Defines the suffix rules to compile XS files to C++.</source>
          <target state="translated">XSファイルをC++にコンパイルするためのサフィックスルールを定義します。</target>
        </trans-unit>
        <trans-unit id="74b9893fa91b825a1d680e0f69f616b612a76cb5" translate="yes" xml:space="preserve">
          <source>Defines the suffix rules to compile XS files to C.</source>
          <target state="translated">XSファイルをCにコンパイルするためのサフィックスルールを定義します。</target>
        </trans-unit>
        <trans-unit id="e0d8ee251994cc513f249a8caeb41a2880a20ae6" translate="yes" xml:space="preserve">
          <source>Defines the suffix rules to compile different flavors of C files to object files.</source>
          <target state="translated">さまざまな種類のCファイルをオブジェクトファイルにコンパイルするためのサフィックスルールを定義します。</target>
        </trans-unit>
        <trans-unit id="32546d4aee39d7ecd97ee598cccfec080ea2b2fa" translate="yes" xml:space="preserve">
          <source>Defines the targets all, subdirs, config, and O_FILES</source>
          <target state="translated">ターゲットのall、subdirs、config、O_FILESを定義します。</target>
        </trans-unit>
        <trans-unit id="8d94db57a25050ea2e12e70aa07a67bf9e408e8b" translate="yes" xml:space="preserve">
          <source>Defines the targets distclean, distcheck, skipcheck, manifest, veryclean.</source>
          <target state="translated">distclean,distcheck,skipcheck,manifest,verycleanのターゲットを定義します。</target>
        </trans-unit>
        <trans-unit id="195a11e1aaa7fa1de51a9767e72b1109922bd69b" translate="yes" xml:space="preserve">
          <source>Defines the test targets.</source>
          <target state="translated">テスト対象を定義します。</target>
        </trans-unit>
        <trans-unit id="e470b7139fcd28a3e03c5dc98122c30f121e0ce7" translate="yes" xml:space="preserve">
          <source>Defining Aliases</source>
          <target state="translated">エイリアスの定義</target>
        </trans-unit>
        <trans-unit id="a6a4f129ca4af3f95655180a4ab4518f538d8368" translate="yes" xml:space="preserve">
          <source>Defining Encodings</source>
          <target state="translated">エンコーディングの定義</target>
        </trans-unit>
        <trans-unit id="8953e978a34af3aa771b28b8a0aeb5a5a9299394" translate="yes" xml:space="preserve">
          <source>Defining multiple constants at once</source>
          <target state="translated">複数の定数を一度に定義する</target>
        </trans-unit>
        <trans-unit id="0b4d4a2cad4c2c9d7a21a4f7eee774dd37c837d6" translate="yes" xml:space="preserve">
          <source>Defining named patterns</source>
          <target state="translated">名前付きパターンの定義</target>
        </trans-unit>
        <trans-unit id="15225baac48fc3d689cb2b0f74b936eff4339ff7" translate="yes" xml:space="preserve">
          <source>Definitions</source>
          <target state="translated">Definitions</target>
        </trans-unit>
        <trans-unit id="99e7b02a1a29971b6fb35588f8f5d402d5361f64" translate="yes" xml:space="preserve">
          <source>Deflate (method 8)</source>
          <target state="translated">デフレート(方法8</target>
        </trans-unit>
        <trans-unit id="56eb69213b29172984702ca40dfbd1eeaae962fb" translate="yes" xml:space="preserve">
          <source>Deflate Compression Options</source>
          <target state="translated">デフレート圧縮オプション</target>
        </trans-unit>
        <trans-unit id="dc49f81973bcb0957f67dbcb79a0c07904072495" translate="yes" xml:space="preserve">
          <source>Deflate Interface</source>
          <target state="translated">デフレートインタフェース</target>
        </trans-unit>
        <trans-unit id="261df28b51f1e3a727f3a451d8b97dc502d494f7" translate="yes" xml:space="preserve">
          <source>Deflates the contents of &lt;code&gt;$buffer&lt;/code&gt; . The buffer can either be a scalar or a scalar reference. When finished, &lt;code&gt;$buffer&lt;/code&gt; will be completely processed (assuming there were no errors). If the deflation was successful it returns the deflated output, &lt;code&gt;$out&lt;/code&gt; , and a status value, &lt;code&gt;$status&lt;/code&gt; , of &lt;code&gt;Z_OK&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;$buffer&lt;/code&gt; の内容をデフラットします。バッファーは、スカラーまたはスカラー参照のいずれかです。終了すると、 &lt;code&gt;$buffer&lt;/code&gt; は完全に処理されます（エラーがなかった場合）。デフレが成功した場合、デフレ出力 &lt;code&gt;$out&lt;/code&gt; と &lt;code&gt;Z_OK&lt;/code&gt; のステータス値 &lt;code&gt;$status&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="99f2de64258b5dd0e81d4fa298435a7e78eae5fa" translate="yes" xml:space="preserve">
          <source>Deflates the contents of &lt;code&gt;$buffer&lt;/code&gt;. The buffer can either be a scalar or a scalar reference. When finished, &lt;code&gt;$buffer&lt;/code&gt; will be completely processed (assuming there were no errors). If the deflation was successful it returns the deflated output, &lt;code&gt;$out&lt;/code&gt;, and a status value, &lt;code&gt;$status&lt;/code&gt;, of &lt;code&gt;Z_OK&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$buffer&lt;/code&gt; の内容をデフレートします。バッファーは、スカラーまたはスカラー参照のいずれかです。終了すると、 &lt;code&gt;$buffer&lt;/code&gt; は完全に処理されます（エラーがなかったと仮定）。デフレーションが成功した場合は、デフレーションされた出力 &lt;code&gt;$out&lt;/code&gt; と、 &lt;code&gt;Z_OK&lt;/code&gt; のステータス値 &lt;code&gt;$status&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="88ca554d5d7745bfb195b4e7b44d607bd478a74b" translate="yes" xml:space="preserve">
          <source>Deflates the contents of &lt;code&gt;$input&lt;/code&gt; and writes the compressed data to &lt;code&gt;$output&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;$input&lt;/code&gt; の内容を展開し、圧縮データを &lt;code&gt;$output&lt;/code&gt; 書き込みます。</target>
        </trans-unit>
        <trans-unit id="c3f15115d8286e5794edca21720e00d0ac79fca1" translate="yes" xml:space="preserve">
          <source>Deflates the contents of &lt;code&gt;$input&lt;/code&gt; and writes the compressed data to &lt;code&gt;$output&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$input&lt;/code&gt; の内容をデフレートし、圧縮されたデータを &lt;code&gt;$output&lt;/code&gt; 書き込みます。</target>
        </trans-unit>
        <trans-unit id="d3ea81ef7609f7aa5b727599becc6a143ff111a6" translate="yes" xml:space="preserve">
          <source>Delete a breakpoint from the specified</source>
          <target state="translated">指定された</target>
        </trans-unit>
        <trans-unit id="5a0073b863c5340c8970662e0be69970f5dfeba8" translate="yes" xml:space="preserve">
          <source>Delete a key and its associated value from the cop hints hash</source>
          <target state="translated">cop hintsハッシュからキーとそれに関連する値を削除します。</target>
        </trans-unit>
        <trans-unit id="003b02de35cb7dc79685b85e3a648ca86c7ed793" translate="yes" xml:space="preserve">
          <source>Delete a key and its associated value from the cop hints hash &lt;code&gt;cophh&lt;/code&gt;, and returns the modified hash. The returned hash pointer is in general not the same as the hash pointer that was passed in. The input hash is consumed by the function, and the pointer to it must not be subsequently used. Use &lt;a href=&quot;#cophh_copy&quot;&gt;&quot;cophh_copy&quot;&lt;/a&gt; if you need both hashes.</source>
          <target state="translated">キーとそれに関連する値をcopヒントハッシュ &lt;code&gt;cophh&lt;/code&gt; から削除し、変更されたハッシュを返します。返されるハッシュポインタは、通常、渡されたハッシュポインタと同じではありません。入力ハッシュは関数によって消費されるため、それへのポインタを後で使用することはできません。両方のハッシュが必要な場合は、&lt;a href=&quot;#cophh_copy&quot;&gt;「cophh_copy」を&lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="b15c91a025daa3148a7fab7d1733f7a172457b7b" translate="yes" xml:space="preserve">
          <source>Delete all installed actions.</source>
          <target state="translated">インストールされているすべてのアクションを削除します。</target>
        </trans-unit>
        <trans-unit id="bb17fd76f6f5ca7598134cd78f73beaa67a2e6d2" translate="yes" xml:space="preserve">
          <source>Delete all installed breakpoints.</source>
          <target state="translated">インストールされているすべてのブレークポイントを削除します。</target>
        </trans-unit>
        <trans-unit id="beaf4b4da8da8ff385c29b6d645eaa115a38d395" translate="yes" xml:space="preserve">
          <source>Delete all post-prompt Perl command actions.</source>
          <target state="translated">すべてのポストプロンプトPerlコマンドアクションを削除します。</target>
        </trans-unit>
        <trans-unit id="e03ec6135ed6958ecae2c1ff175c05d512e28238" translate="yes" xml:space="preserve">
          <source>Delete all pre-prompt Perl command actions.</source>
          <target state="translated">すべてのプロンプト前のPerlコマンドアクションを削除します。</target>
        </trans-unit>
        <trans-unit id="73a7816e302077539cac697491b47392c1d85bee" translate="yes" xml:space="preserve">
          <source>Delete all pre-prompt debugger commands.</source>
          <target state="translated">すべてのプロンプト前のデバッガコマンドを削除します。</target>
        </trans-unit>
        <trans-unit id="2dad01021d565585d1f2142d895d1f8890c02ab1" translate="yes" xml:space="preserve">
          <source>Delete all watch-expressions.</source>
          <target state="translated">すべてのウォッチエクスプレッションを削除します。</target>
        </trans-unit>
        <trans-unit id="b6f7cb935ade65e12cb5c25c937b996479fb8adb" translate="yes" xml:space="preserve">
          <source>Delete an action from the specified line.</source>
          <target state="translated">指定した行からアクションを削除します。</target>
        </trans-unit>
        <trans-unit id="1226b496f4d499ec434c444cfe660a3f53b36ae9" translate="yes" xml:space="preserve">
          <source>Delete and return the spool.</source>
          <target state="translated">スプールを削除して返却します。</target>
        </trans-unit>
        <trans-unit id="fa5752aad802906e596617c84df13259c116cdcb" translate="yes" xml:space="preserve">
          <source>Delete file on close.</source>
          <target state="translated">閉じるとファイルを削除します。</target>
        </trans-unit>
        <trans-unit id="ec90a00fac0b965cebb8d69254af765943de97b7" translate="yes" xml:space="preserve">
          <source>Delete it. :-) Seriously, there are a number of (mostly unsatisfactory) solutions with varying levels of &quot;security&quot;.</source>
          <target state="translated">削除してください。)真面目な話、「セキュリティ」のレベルが異なるいくつかの(ほとんどが不満足な)ソリューションがあります。</target>
        </trans-unit>
        <trans-unit id="b819cf6faf3c2dff6669793abe1aba00c76a28d9" translate="yes" xml:space="preserve">
          <source>Delete the element at index</source>
          <target state="translated">インデックスの要素を削除する</target>
        </trans-unit>
        <trans-unit id="c0d51f2b9680b0830421d95140e113f970d690d9" translate="yes" xml:space="preserve">
          <source>Delete the key</source>
          <target state="translated">キーを削除する</target>
        </trans-unit>
        <trans-unit id="91cc99f3a5b10598f0cfe04276ac8b00d48c8cb4" translate="yes" xml:space="preserve">
          <source>Delete watch-expression</source>
          <target state="translated">ウォッチエクスプレッションの削除</target>
        </trans-unit>
        <trans-unit id="149a30b4c4fbf691fd43ffc73478be22980b04cb" translate="yes" xml:space="preserve">
          <source>DeleteFile</source>
          <target state="translated">DeleteFile</target>
        </trans-unit>
        <trans-unit id="c1e33912ea7835bf73d28e9fd2c6aab658de7bb0" translate="yes" xml:space="preserve">
          <source>DeleteFileW</source>
          <target state="translated">DeleteFileW</target>
        </trans-unit>
        <trans-unit id="e145b1b4c60960cca6dca4bb8af0c6916d63e896" translate="yes" xml:space="preserve">
          <source>Deletes a key/value pair in the hash. The value SV is removed from the hash, made mortal, and returned to the caller. The &lt;code&gt;flags&lt;/code&gt; value will normally be zero; if set to &lt;code&gt;G_DISCARD&lt;/code&gt; then &lt;code&gt;NULL&lt;/code&gt; will be returned. &lt;code&gt;NULL&lt;/code&gt; will also be returned if the key is not found. &lt;code&gt;hash&lt;/code&gt; can be a valid precomputed hash value, or 0 to ask for it to be computed.</source>
          <target state="translated">ハッシュ内のキーと値のペアを削除します。値SVはハッシュから削除され、致命的になり、呼び出し元に返されます。 &lt;code&gt;flags&lt;/code&gt; 値は、通常はゼロになります。 &lt;code&gt;G_DISCARD&lt;/code&gt; に設定すると、 &lt;code&gt;NULL&lt;/code&gt; が返されます。キーが見つからない場合も &lt;code&gt;NULL&lt;/code&gt; が返されます。 &lt;code&gt;hash&lt;/code&gt; は、有効な事前計算されたハッシュ値、または計算を要求する場合は0にすることができます。</target>
        </trans-unit>
        <trans-unit id="9ca1c676523afd3f5ee253a9b6c4f5e0ad74e44b" translate="yes" xml:space="preserve">
          <source>Deletes a key/value pair in the hash. The value SV is removed from the hash, made mortal, and returned to the caller. The &lt;code&gt;flags&lt;/code&gt; value will normally be zero; if set to G_DISCARD then NULL will be returned. NULL will also be returned if the key is not found. &lt;code&gt;hash&lt;/code&gt; can be a valid precomputed hash value, or 0 to ask for it to be computed.</source>
          <target state="translated">ハッシュ内のキーと値のペアを削除します。値SVはハッシュから削除され、致命的になり、呼び出し元に返されます。 &lt;code&gt;flags&lt;/code&gt; 値は、通常はゼロになります。G_DISCARDに設定すると、NULLが返されます。キーが見つからない場合もNULLが返されます。 &lt;code&gt;hash&lt;/code&gt; は、事前に計算された有効なハッシュ値か、計算を要求する場合は0です。</target>
        </trans-unit>
        <trans-unit id="e2446e6670d537af1e2928d5caec7dbb0899eefa" translate="yes" xml:space="preserve">
          <source>Deletes a key/value pair in the hash. The value's SV is removed from the hash, made mortal, and returned to the caller. The absolute value of &lt;code&gt;klen&lt;/code&gt; is the length of the key. If &lt;code&gt;klen&lt;/code&gt; is negative the key is assumed to be in UTF-8-encoded Unicode. The &lt;code&gt;flags&lt;/code&gt; value will normally be zero; if set to &lt;code&gt;G_DISCARD&lt;/code&gt; then &lt;code&gt;NULL&lt;/code&gt; will be returned. &lt;code&gt;NULL&lt;/code&gt; will also be returned if the key is not found.</source>
          <target state="translated">ハッシュ内のキーと値のペアを削除します。値のSVはハッシュから削除され、致命的になり、呼び出し元に返されます。 &lt;code&gt;klen&lt;/code&gt; の絶対値は、キーの長さです。 &lt;code&gt;klen&lt;/code&gt; が負の場合、キーはUTF-8でエンコードされたUnicodeであると見なされます。 &lt;code&gt;flags&lt;/code&gt; 値は、通常はゼロになります。 &lt;code&gt;G_DISCARD&lt;/code&gt; に設定すると、 &lt;code&gt;NULL&lt;/code&gt; が返されます。キーが見つからない場合も &lt;code&gt;NULL&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="f3c1663e85e551a1c50322e1c209520d893a7af7" translate="yes" xml:space="preserve">
          <source>Deletes a key/value pair in the hash. The value's SV is removed from the hash, made mortal, and returned to the caller. The absolute value of &lt;code&gt;klen&lt;/code&gt; is the length of the key. If &lt;code&gt;klen&lt;/code&gt; is negative the key is assumed to be in UTF-8-encoded Unicode. The &lt;code&gt;flags&lt;/code&gt; value will normally be zero; if set to G_DISCARD then NULL will be returned. NULL will also be returned if the key is not found.</source>
          <target state="translated">ハッシュ内のキーと値のペアを削除します。値のSVはハッシュから削除され、致命的になり、呼び出し元に返されます。 &lt;code&gt;klen&lt;/code&gt; の絶対値はキーの長さです。 &lt;code&gt;klen&lt;/code&gt; が負の場合、キーはUTF-8でエンコードされたUnicodeであると想定されます。 &lt;code&gt;flags&lt;/code&gt; 値は、通常はゼロになります。G_DISCARDに設定すると、NULLが返されます。キーが見つからない場合もNULLが返されます。</target>
        </trans-unit>
        <trans-unit id="fef7292ecad7b90b11da8e6b0c7d13b3a7d1a0cb" translate="yes" xml:space="preserve">
          <source>Deletes a list of files. On success, it returns the number of files it successfully deleted. On failure, it returns false and sets &lt;a href=&quot;perlvar#%24%21&quot;&gt;&lt;code&gt;$!&lt;/code&gt;&lt;/a&gt; (errno):</source>
          <target state="translated">ファイルのリストを削除します。成功すると、正常に削除されたファイルの数が返されます。失敗すると、falseを返し、&lt;a href=&quot;perlvar#%24%21&quot;&gt; &lt;code&gt;$!&lt;/code&gt; &lt;/a&gt;を設定します！（errno）：</target>
        </trans-unit>
        <trans-unit id="b5dd5212aa7a8bc97116e79a014cced26a493225" translate="yes" xml:space="preserve">
          <source>Deletes a list of files. On success, it returns the number of files it successfully deleted. On failure, it returns false and sets &lt;code&gt;$!&lt;/code&gt; (errno):</source>
          <target state="translated">ファイルのリストを削除します。成功すると、正常に削除されたファイルの数を返します。失敗するとfalseを返し、 &lt;code&gt;$!&lt;/code&gt; を設定します。（errno）：</target>
        </trans-unit>
        <trans-unit id="0ff47f47af9839f7a2f3bc14147ca1e559e4e6cb" translate="yes" xml:space="preserve">
          <source>Deletes a name from the filesystem. Calls &lt;a href=&quot;perlfunc#unlink&quot;&gt;&quot;unlink&quot; in perlfunc&lt;/a&gt; for files and &lt;a href=&quot;perlfunc#rmdir&quot;&gt;&quot;rmdir&quot; in perlfunc&lt;/a&gt; for directories.</source>
          <target state="translated">ファイルシステムから名前を削除します。ファイルの場合&lt;a href=&quot;perlfunc#unlink&quot;&gt;はperlfuncの「unlink」を&lt;/a&gt;呼び出し、ディレクトリの&lt;a href=&quot;perlfunc#rmdir&quot;&gt;場合はperlfuncの「rmdir」を&lt;/a&gt;呼び出します。</target>
        </trans-unit>
        <trans-unit id="ae4e84b1a9cd7d8ca24f9049c5c9188e897c575e" translate="yes" xml:space="preserve">
          <source>Deletes the directory specified by FILENAME if that directory is empty. If it succeeds it returns true; otherwise it returns false and sets &lt;a href=&quot;perlvar#%24%21&quot;&gt;&lt;code&gt;$!&lt;/code&gt;&lt;/a&gt; (errno). If FILENAME is omitted, uses &lt;a href=&quot;perlvar#%24_&quot;&gt;&lt;code&gt;$_&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">FILENAMEで指定されたディレクトリが空の場合、そのディレクトリを削除します。成功した場合はtrueを返します。それ以外の場合はfalseを返し、&lt;a href=&quot;perlvar#%24%21&quot;&gt; &lt;code&gt;$!&lt;/code&gt; &lt;/a&gt;を設定します。（errno）。FILENAMEを省略した場合は、&lt;a href=&quot;perlvar#%24_&quot;&gt; &lt;code&gt;$_&lt;/code&gt; &lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="4e992fa1a5f580cdba4aa3e9584f6ceab958d933" translate="yes" xml:space="preserve">
          <source>Deletes the directory specified by FILENAME if that directory is empty. If it succeeds it returns true; otherwise it returns false and sets &lt;code&gt;$!&lt;/code&gt; (errno). If FILENAME is omitted, uses &lt;code&gt;$_&lt;/code&gt; .</source>
          <target state="translated">FILENAMEで指定されたディレクトリが空の場合、そのディレクトリを削除します。成功した場合はtrueを返します。それ以外の場合はfalseを返し、 &lt;code&gt;$!&lt;/code&gt; を設定します。（errno）。FILENAMEを省略すると、 &lt;code&gt;$_&lt;/code&gt; 使用します。</target>
        </trans-unit>
        <trans-unit id="4ab8b05f803f178aa62996ab1540a40bcd2f3aad" translate="yes" xml:space="preserve">
          <source>Deletes the element indexed by &lt;code&gt;key&lt;/code&gt; from the array, makes the element mortal, and returns it. If &lt;code&gt;flags&lt;/code&gt; equals &lt;code&gt;G_DISCARD&lt;/code&gt; , the element is freed and null is returned. Perl equivalent: &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt; $elem = &lt;a href=&quot;functions/delete&quot;&gt;delete&lt;/a&gt;($myarray[$idx]);&lt;/code&gt; for the non-&lt;code&gt;G_DISCARD&lt;/code&gt; version and a void-context &lt;code&gt;&lt;a href=&quot;functions/delete&quot;&gt;delete($myarray[$idx]);&lt;/a&gt;&lt;/code&gt; for the &lt;code&gt;G_DISCARD&lt;/code&gt; version.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; でインデックス付けされた要素を配列から削除し、要素を無効にして返します。 &lt;code&gt;flags&lt;/code&gt; が &lt;code&gt;G_DISCARD&lt;/code&gt; と等しい場合、要素は解放され、nullが返されます。同等のPerl： &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt; $elem = &lt;a href=&quot;functions/delete&quot;&gt;delete&lt;/a&gt;($myarray[$idx]);&lt;/code&gt; 非ため &lt;code&gt;G_DISCARD&lt;/code&gt; のバージョンとボイドコンテキスト &lt;code&gt;&lt;a href=&quot;functions/delete&quot;&gt;delete($myarray[$idx]);&lt;/a&gt;&lt;/code&gt; 用 &lt;code&gt;G_DISCARD&lt;/code&gt; のバージョン。</target>
        </trans-unit>
        <trans-unit id="7103076a5e79061174c92d0ccdae958ce4a1f7fa" translate="yes" xml:space="preserve">
          <source>Deletes the element indexed by &lt;code&gt;key&lt;/code&gt; from the array, makes the element mortal, and returns it. If &lt;code&gt;flags&lt;/code&gt; equals &lt;code&gt;G_DISCARD&lt;/code&gt;, the element is freed and NULL is returned. NULL is also returned if &lt;code&gt;key&lt;/code&gt; is out of range.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; インデックス付けされた要素を配列から削除し、要素を致命的なものにして、それを返します。 &lt;code&gt;flags&lt;/code&gt; が &lt;code&gt;G_DISCARD&lt;/code&gt; と等しい場合、要素は解放され、NULLが返されます。 &lt;code&gt;key&lt;/code&gt; が範囲外の場合もNULLが返されます。</target>
        </trans-unit>
        <trans-unit id="8e0f5d66f41f791c03d640f956aeecf4272c6ecc" translate="yes" xml:space="preserve">
          <source>Deletes the named file. Compared to Perl's &lt;code&gt;unlink&lt;/code&gt;, &lt;code&gt;DeleteFile&lt;/code&gt; has the advantage of not deleting read-only files. For &lt;b&gt;some&lt;/b&gt; versions of Perl, &lt;code&gt;unlink&lt;/code&gt; silently calls &lt;code&gt;chmod&lt;/code&gt; whether it needs to or not before deleting the file so that files that you have protected by marking them as read-only are not always protected from Perl's &lt;code&gt;unlink&lt;/code&gt;.</source>
          <target state="translated">指定されたファイルを削除します。 Perlの &lt;code&gt;unlink&lt;/code&gt; と比較して、 &lt;code&gt;DeleteFile&lt;/code&gt; には読み取り専用ファイルを削除しないという利点があります。以下のために&lt;b&gt;いくつか&lt;/b&gt;のPerlのバージョン、 &lt;code&gt;unlink&lt;/code&gt; 静かに呼び出しが &lt;code&gt;chmod&lt;/code&gt; は、それが必要か否かのあなたは読み取り専用で、常にPerlのから保護されていないとして、それらをマークすることによって保護されていることがそのファイルようにファイルを削除する前に &lt;code&gt;unlink&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7985add209a4040b04725382be94bb53ea2fd6c0" translate="yes" xml:space="preserve">
          <source>Deletes the reparse point data associated with $hDevice.</source>
          <target state="translated">hDevice に関連付けられているリパースポイントデータを削除します。</target>
        </trans-unit>
        <trans-unit id="eb406e5c9566f12490e972a4db2c13a7645fccc7" translate="yes" xml:space="preserve">
          <source>Deleting directories from @INC</source>
          <target state="translated">ディレクトリを@INCから削除する</target>
        </trans-unit>
        <trans-unit id="485c4ddf6050def894be28eec6cc286e3e6fdb5d" translate="yes" xml:space="preserve">
          <source>Deleting from &lt;a href=&quot;perlvar#%25ENV&quot;&gt;&lt;code&gt;%ENV&lt;/code&gt;&lt;/a&gt; modifies the environment. Deleting from a hash tied to a DBM file deletes the entry from the DBM file. Deleting from a &lt;a href=&quot;#tied-VARIABLE&quot;&gt;&lt;code&gt;tied&lt;/code&gt;&lt;/a&gt; hash or array may not necessarily return anything; it depends on the implementation of the &lt;a href=&quot;#tied-VARIABLE&quot;&gt;&lt;code&gt;tied&lt;/code&gt;&lt;/a&gt; package's DELETE method, which may do whatever it pleases.</source>
          <target state="translated">&lt;a href=&quot;perlvar#%25ENV&quot;&gt; &lt;code&gt;%ENV&lt;/code&gt; &lt;/a&gt;から削除すると、環境が変更されます。DBMファイルに関連付けられたハッシュから削除すると、DBMファイルからエントリが削除されます。&lt;a href=&quot;#tied-VARIABLE&quot;&gt; &lt;code&gt;tied&lt;/code&gt; &lt;/a&gt;ハッシュまたは配列から削除しても、必ずしも何も返されない場合があります。それは、&lt;a href=&quot;#tied-VARIABLE&quot;&gt; &lt;code&gt;tied&lt;/code&gt; &lt;/a&gt;パッケージのDELETEメソッドの実装に依存します。これは、好きなように実行できます。</target>
        </trans-unit>
        <trans-unit id="59739df4503a81fc7a23e026605cac8564b8e7df" translate="yes" xml:space="preserve">
          <source>Deleting from &lt;code&gt;%ENV&lt;/code&gt; modifies the environment. Deleting from a hash tied to a DBM file deletes the entry from the DBM file. Deleting from a &lt;code&gt;&lt;a href=&quot;functions/tied&quot;&gt;tied&lt;/a&gt;&lt;/code&gt; hash or array may not necessarily return anything; it depends on the implementation of the &lt;code&gt;&lt;a href=&quot;functions/tied&quot;&gt;tied&lt;/a&gt;&lt;/code&gt; package's DELETE method, which may do whatever it pleases.</source>
          <target state="translated">&lt;code&gt;%ENV&lt;/code&gt; から削除すると、環境が変更されます。DBMファイルに関連付けられたハッシュから削除すると、DBMファイルからエントリが削除されます。削除 &lt;code&gt;&lt;a href=&quot;functions/tied&quot;&gt;tied&lt;/a&gt;&lt;/code&gt; たハッシュや配列は値を返すとは限りません。 &lt;code&gt;&lt;a href=&quot;functions/tied&quot;&gt;tied&lt;/a&gt;&lt;/code&gt; パッケージのDELETEメソッドの実装に依存します。</target>
        </trans-unit>
        <trans-unit id="b2e4bc535959687d920ab6af5070c36f9ba7c865" translate="yes" xml:space="preserve">
          <source>Deleting from &lt;code&gt;%ENV&lt;/code&gt; modifies the environment. Deleting from a hash tied to a DBM file deletes the entry from the DBM file. Deleting from a &lt;code&gt;&lt;a href=&quot;tied&quot;&gt;tied&lt;/a&gt;&lt;/code&gt; hash or array may not necessarily return anything; it depends on the implementation of the &lt;code&gt;&lt;a href=&quot;tied&quot;&gt;tied&lt;/a&gt;&lt;/code&gt; package's DELETE method, which may do whatever it pleases.</source>
          <target state="translated">&lt;code&gt;%ENV&lt;/code&gt; から削除すると、環境が変更されます。DBMファイルに関連付けられたハッシュから削除すると、DBMファイルからエントリが削除されます。削除 &lt;code&gt;&lt;a href=&quot;tied&quot;&gt;tied&lt;/a&gt;&lt;/code&gt; たハッシュや配列は値を返すとは限りません。 &lt;code&gt;&lt;a href=&quot;tied&quot;&gt;tied&lt;/a&gt;&lt;/code&gt; パッケージのDELETEメソッドの実装に依存します。</target>
        </trans-unit>
        <trans-unit id="680fb3aa86f75cbfe88a00e67e1fb323a875d30a" translate="yes" xml:space="preserve">
          <source>Deleting unknown formatting code</source>
          <target state="translated">不明なフォーマットコードの削除</target>
        </trans-unit>
        <trans-unit id="4f6d02ca76a45cb468868320867e518cfaed49b9" translate="yes" xml:space="preserve">
          <source>Delimiter for here document is too long</source>
          <target state="translated">ここの文書のデリミタが長すぎる</target>
        </trans-unit>
        <trans-unit id="a29354be8f01aa714635d9e114de856834c56b93" translate="yes" xml:space="preserve">
          <source>Delivers gcc toolchain targeting 32-bit Windows platform.</source>
          <target state="translated">32ビットWindowsプラットフォームをターゲットとしたgccツールチェーンを提供します。</target>
        </trans-unit>
        <trans-unit id="0b514393b132ed57d195ef9cf7c8664bedd5ba2f" translate="yes" xml:space="preserve">
          <source>Delivers gcc toolchain targeting both 64-bit Windows and 32-bit Windows platforms (despite the project name &quot;mingw-w64&quot; they are not only 64-bit oriented). They deliver the native gcc compilers and cross-compilers that are also supported by perl's makefile.</source>
          <target state="translated">64-bit Windows と 32-bit Windows の両方のプラットフォームを対象とした gcc ツールチェインを提供しています (プロジェクト名が &quot;mingw-w64&quot; であるにもかかわらず、64-bit だけを対象としているわけではありません)。perl の makefile でサポートされているネイティブ gcc コンパイラとクロスコンパイラを提供しています。</target>
        </trans-unit>
        <trans-unit id="c94930d13d0f0baa0081c29926115e40d581fe81" translate="yes" xml:space="preserve">
          <source>Demands a version of Perl specified by VERSION, or demands some semantics specified by EXPR or by &lt;a href=&quot;perlvar#%24_&quot;&gt;&lt;code&gt;$_&lt;/code&gt;&lt;/a&gt; if EXPR is not supplied.</source>
          <target state="translated">VERSIONで指定されたPerlのバージョンを要求するか、EXPRまたはEXPRが指定されていない場合は&lt;a href=&quot;perlvar#%24_&quot;&gt; &lt;code&gt;$_&lt;/code&gt; &lt;/a&gt;指定されたセマンティクスを要求します。</target>
        </trans-unit>
        <trans-unit id="84cba83c5edbd4207cb47e793a734e0fe0e36673" translate="yes" xml:space="preserve">
          <source>Demands a version of Perl specified by VERSION, or demands some semantics specified by EXPR or by &lt;code&gt;$_&lt;/code&gt; if EXPR is not supplied.</source>
          <target state="translated">VERSIONで指定されたバージョンのPerlを要求するか、EXPRまたはEXPRが指定されていない場合は &lt;code&gt;$_&lt;/code&gt; 指定されたセマンティクスを要求します。</target>
        </trans-unit>
        <trans-unit id="562e8903063ed8770f6527d563bca3ab2868b0d9" translate="yes" xml:space="preserve">
          <source>Denial of Service</source>
          <target state="translated">サービスの拒否</target>
        </trans-unit>
        <trans-unit id="89da124e04dfe1ad9946cd37d91a119e1d028898" translate="yes" xml:space="preserve">
          <source>Denmark</source>
          <target state="translated">Denmark</target>
        </trans-unit>
        <trans-unit id="53577bb5df0ee9b6376e87f4896b6957a25d7a43" translate="yes" xml:space="preserve">
          <source>Deny</source>
          <target state="translated">Deny</target>
        </trans-unit>
        <trans-unit id="2e10904ffd9eaf7871845f0b81c542592ff1e8bd" translate="yes" xml:space="preserve">
          <source>Deny the listed operators from being used when compiling code in the compartment (other operators may still be permitted).</source>
          <target state="translated">コンパートメント内のコードをコンパイルする際に、リストされた演算子を使用しないようにしてください(他の演算子はまだ許可されているかもしれません)。</target>
        </trans-unit>
        <trans-unit id="f3c0cd1438a845e8a503457cb11b112c6a17abfb" translate="yes" xml:space="preserve">
          <source>Dependency on</source>
          <target state="translated">に依存しています。</target>
        </trans-unit>
        <trans-unit id="77dc35303fc487108331e0e6d31fd83790816ff8" translate="yes" xml:space="preserve">
          <source>Dependent libraries can be linked in one of three ways:</source>
          <target state="translated">依存ライブラリは、3つの方法のいずれかでリンクすることができます。</target>
        </trans-unit>
        <trans-unit id="b591a22d82312f2906d4cd0cd73a4a0cc311c02d" translate="yes" xml:space="preserve">
          <source>Depending on how you built/installed perl you may have (otherwise identical) Perl documentation in the following formats:</source>
          <target state="translated">Perlをどのようにビルド/インストールしたかによっては、以下の形式のPerlドキュメントがあるかもしれません。</target>
        </trans-unit>
        <trans-unit id="e46450a9c23e87326a0c62cc3a40e3b23e08ee53" translate="yes" xml:space="preserve">
          <source>Depending on implementation &lt;code&gt;errno&lt;/code&gt; may be &lt;code&gt;EINTR&lt;/code&gt; if operation was interrupted by a signal.</source>
          <target state="translated">実装によっては、操作がシグナルによって中断された場合、 &lt;code&gt;errno&lt;/code&gt; は &lt;code&gt;EINTR&lt;/code&gt; になることがあります。</target>
        </trans-unit>
        <trans-unit id="d687951cb42e749e0fdd6add4a39bdcc23f2a49c" translate="yes" xml:space="preserve">
          <source>Depending on the current floating point rounding mode, rounds the argument either toward nearest (like &lt;a href=&quot;#round&quot;&gt;&quot;round&quot;&lt;/a&gt;), toward zero (like &lt;a href=&quot;#trunc&quot;&gt;&quot;trunc&quot;&lt;/a&gt;), downward (toward negative infinity), or upward (toward positive infinity) [C99].</source>
          <target state="translated">現在の浮動小数点丸めモードに応じて、引数を最も近い方向（&lt;a href=&quot;#round&quot;&gt;「round」など&lt;/a&gt;）、ゼロ方向（&lt;a href=&quot;#trunc&quot;&gt;「trunc」など&lt;/a&gt;）、下向き（負の無限大に向かって）、または上向き（正の無限大に向かって）に丸めます[C99]。</target>
        </trans-unit>
        <trans-unit id="b0be77db14ba94fc033fd30c3cfe8822eacafb87" translate="yes" xml:space="preserve">
          <source>Depending on the current floating point rounding mode, rounds the argument either toward nearest (like &lt;a href=&quot;#round&quot;&gt;round&lt;/a&gt;), toward zero (like &lt;a href=&quot;#trunc&quot;&gt;trunc&lt;/a&gt;), downward (toward negative infinity), or upward (toward positive infinity) [C99].</source>
          <target state="translated">現在の浮動小数点丸めモードに応じて、最も近い（&lt;a href=&quot;#round&quot;&gt;roundの&lt;/a&gt;ように）、0（&lt;a href=&quot;#trunc&quot;&gt;truncの&lt;/a&gt;ように）、下向き（負の無限大に向かって）、または上向き（正の無限大に向かって）のいずれかに引数を丸めます[C99]。</target>
        </trans-unit>
        <trans-unit id="5294c397495f76892ffea877bf2a43e2c328f0cb" translate="yes" xml:space="preserve">
          <source>Depending on the host operating system, the value of &lt;code&gt;$^X&lt;/code&gt; may be a relative or absolute pathname of the perl program file, or may be the string used to invoke perl but not the pathname of the perl program file. Also, most operating systems permit invoking programs that are not in the PATH environment variable, so there is no guarantee that the value of &lt;code&gt;$^X&lt;/code&gt; is in PATH. For VMS, the value may or may not include a version number.</source>
          <target state="translated">ホストオペレーティングシステムに応じて、 &lt;code&gt;$^X&lt;/code&gt; 値は、perlプログラムファイルの相対パス名または絶対パス名、またはperlプログラムファイルのパス名ではなく、perlを呼び出すために使用される文字列です。また、ほとんどのオペレーティングシステムでは、PATH環境変数に含まれていないプログラムの呼び出しが許可されているため、 &lt;code&gt;$^X&lt;/code&gt; 値がPATH内にあるという保証はありません。 VMSの場合、値にはバージョン番号が含まれる場合と含まれない場合があります。</target>
        </trans-unit>
        <trans-unit id="cccf7af03de5ec673d581d5fe1b28e5dbbca4f92" translate="yes" xml:space="preserve">
          <source>Depending on the platform the NaN may or may not behave differently.</source>
          <target state="translated">プラットフォームによっては、NaNの動作が異なる場合もあれば、そうでない場合もあります。</target>
        </trans-unit>
        <trans-unit id="68fed4b09c88f05f1f3d646bbfcd5d46f8e224da" translate="yes" xml:space="preserve">
          <source>Depending on the platform, and because this class emits terminal escapes it will attempt to set the &lt;code&gt;-R&lt;/code&gt; flag on your pager by injecting the flag into your environment variable for &lt;code&gt;less&lt;/code&gt; or &lt;code&gt;more&lt;/code&gt;.</source>
          <target state="translated">プラットフォームによっては、このクラスには、端末のエスケープを発するので、それが設定しようとする &lt;code&gt;-R&lt;/code&gt; ための環境変数にフラグを注入することによって、あなたのポケットベルのフラグを &lt;code&gt;less&lt;/code&gt; または &lt;code&gt;more&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="08084da944037c3c23ff2e2b90762c637e7da38d" translate="yes" xml:space="preserve">
          <source>Depending on the transformation, you will find that one or more of the following will happen</source>
          <target state="translated">変形にもよりますが、以下のうちの1つ以上のことが起こることがわかります。</target>
        </trans-unit>
        <trans-unit id="085d0b5e01dcc02f48f2fd13a4f2ed9ebb9054cb" translate="yes" xml:space="preserve">
          <source>Depending on your platform there are various ways of profiling Perl.</source>
          <target state="translated">プラットフォームに応じて、Perlのプロファイリングには様々な方法があります。</target>
        </trans-unit>
        <trans-unit id="8120b368781cc067977ed5593683a3b7c41ff914" translate="yes" xml:space="preserve">
          <source>Deploying Perl on Linux</source>
          <target state="translated">LinuxでのPerlのデプロイ</target>
        </trans-unit>
        <trans-unit id="527600bf0272b6bf3abcb495a99c6ee346bb82b2" translate="yes" xml:space="preserve">
          <source>Deprecated</source>
          <target state="translated">Deprecated</target>
        </trans-unit>
        <trans-unit id="a3431b52e6f55419aab8d54a55029192f48ff550" translate="yes" xml:space="preserve">
          <source>Deprecated and removed variables</source>
          <target state="translated">非推奨・削除された変数</target>
        </trans-unit>
        <trans-unit id="300ce95b61785c757e93c6783917abef0bc4ae26" translate="yes" xml:space="preserve">
          <source>Deprecated by Unicode. These are characters that expand to more than one character in the specified normalization form, but whether they actually take up more bytes or not depends on the encoding being used. For example, a UTF-8 encoded character may expand to a different number of bytes than a UTF-32 encoded character.</source>
          <target state="translated">Unicode では非推奨です。こ れ ら は、 指定 さ れた正規化形式で複数のキ ャ ラ ク タ に展開 さ れますが、 実際にバ イ ト を消費す る か ど う かは、 使用 さ れてい る エン コ ーデ ィ ン グに よ っ て異な り ます。た と えば、 UTF-8 エン コ ー ド さ れたキ ャ ラ ク タ は、 UTF-32 エン コ ー ド さ れたキ ャ ラ ク タ と は異な る バ イ ト 数に展開 さ れ る 可能性があ り ます。</target>
        </trans-unit>
        <trans-unit id="09e9afac06c928ecd4bc9dc03a49132c263cf3c1" translate="yes" xml:space="preserve">
          <source>Deprecated by Unicode: Duplicates ccc=vr (Canonical_Combining_Class=Virama)</source>
          <target state="translated">Unicode で非推奨。重複 ccc=vr (Canonical_Combining_Class=Virama)。</target>
        </trans-unit>
        <trans-unit id="2c6d79954aa926c28b34d07c6c1b52cea0a4f179" translate="yes" xml:space="preserve">
          <source>Deprecated function whose use raises a warning, and which is slated to be removed in a future Perl version. It is very similar to matching against &lt;code&gt;qr/ ^ [[:alnum:]]+ $ /x&lt;/code&gt; , which you should convert to use instead. The function is deprecated because 1) it doesn't handle UTF-8 encoded strings properly; and 2) it returns &lt;code&gt;TRUE&lt;/code&gt; even if the input is the empty string. The function return is always based on the current locale, whereas using locale rules is optional with the regular expression, based on pragmas in effect and pattern modifiers (see &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;Character set modifiers in perlre&lt;/a&gt; and &lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;Which character set modifier is in effect? in perlre&lt;/a&gt;).</source>
          <target state="translated">使用が警告を発し、将来のPerlバージョンで削除される予定の非推奨関数。これは &lt;code&gt;qr/ ^ [[:alnum:]]+ $ /x&lt;/code&gt; に対するマッチングと非常によく似ています。代わりに変換して使用する必要があります。 1）UTF-8でエンコードされた文字列を適切に処理しないため、この関数は非推奨です。 2）入力が空の文字列であっても &lt;code&gt;TRUE&lt;/code&gt; を返します。ロケールの規則を使用して（参照効果やパターン修飾子でプラグマに基づいて、正規表現ではオプションであるのに対し、関数の戻り値は常に、現在のロケールに基づいて&lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;はperlreでキャラクタ・セット修飾子&lt;/a&gt;と&lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;効果で？はperlreである修飾文字セット&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="56ed58a2ae79c6af374b506410f3fa9662b418b6" translate="yes" xml:space="preserve">
          <source>Deprecated function whose use raises a warning, and which is slated to be removed in a future Perl version. It is very similar to matching against &lt;code&gt;qr/ ^ [[:alpha:]]+ $ /x&lt;/code&gt; , which you should convert to use instead. The function is deprecated because 1) it doesn't handle UTF-8 encoded strings properly; and 2) it returns &lt;code&gt;TRUE&lt;/code&gt; even if the input is the empty string. The function return is always based on the current locale, whereas using locale rules is optional with the regular expression, based on pragmas in effect and pattern modifiers (see &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;Character set modifiers in perlre&lt;/a&gt; and &lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;Which character set modifier is in effect? in perlre&lt;/a&gt;).</source>
          <target state="translated">使用が警告を発し、将来のPerlバージョンで削除される予定の非推奨関数。これは、代わりに使用するために変換する必要がある &lt;code&gt;qr/ ^ [[:alpha:]]+ $ /x&lt;/code&gt; に対するマッチングと非常に似ています。 1）UTF-8でエンコードされた文字列を適切に処理しないため、この関数は非推奨です。 2）入力が空の文字列であっても &lt;code&gt;TRUE&lt;/code&gt; を返します。ロケールの規則を使用して（参照効果やパターン修飾子でプラグマに基づいて、正規表現ではオプションであるのに対し、関数の戻り値は常に、現在のロケールに基づいて&lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;はperlreでキャラクタ・セット修飾子&lt;/a&gt;と&lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;効果で？はperlreである修飾文字セット&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="48807b7130a48604da6050bef16bf05c1f34509f" translate="yes" xml:space="preserve">
          <source>Deprecated function whose use raises a warning, and which is slated to be removed in a future Perl version. It is very similar to matching against &lt;code&gt;qr/ ^ [[:cntrl:]]+ $ /x&lt;/code&gt; , which you should convert to use instead. The function is deprecated because 1) it doesn't handle UTF-8 encoded strings properly; and 2) it returns &lt;code&gt;TRUE&lt;/code&gt; even if the input is the empty string. The function return is always based on the current locale, whereas using locale rules is optional with the regular expression, based on pragmas in effect and pattern modifiers (see &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;Character set modifiers in perlre&lt;/a&gt; and &lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;Which character set modifier is in effect? in perlre&lt;/a&gt;).</source>
          <target state="translated">使用が警告を発し、将来のPerlバージョンで削除される予定の非推奨関数。これは &lt;code&gt;qr/ ^ [[:cntrl:]]+ $ /x&lt;/code&gt; に対するマッチングと非常に似ています。代わりに使用するために変換する必要があります。 1）UTF-8でエンコードされた文字列を適切に処理しないため、この関数は非推奨です。 2）入力が空の文字列であっても &lt;code&gt;TRUE&lt;/code&gt; を返します。ロケールの規則を使用して（参照効果やパターン修飾子でプラグマに基づいて、正規表現ではオプションであるのに対し、関数の戻り値は常に、現在のロケールに基づいて&lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;はperlreでキャラクタ・セット修飾子&lt;/a&gt;と&lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;効果で？はperlreである修飾文字セット&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="e30506988830cd213720be74f34746c5a398ce09" translate="yes" xml:space="preserve">
          <source>Deprecated function whose use raises a warning, and which is slated to be removed in a future Perl version. It is very similar to matching against &lt;code&gt;qr/ ^ [[:digit:]]+ $ /x&lt;/code&gt; , which you should convert to use instead. The function is deprecated because 1) it doesn't handle UTF-8 encoded strings properly; and 2) it returns &lt;code&gt;TRUE&lt;/code&gt; even if the input is the empty string. The function return is always based on the current locale, whereas using locale rules is optional with the regular expression, based on pragmas in effect and pattern modifiers (see &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;Character set modifiers in perlre&lt;/a&gt; and &lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;Which character set modifier is in effect? in perlre&lt;/a&gt;).</source>
          <target state="translated">使用が警告を発し、将来のPerlバージョンで削除される予定の非推奨関数。これは &lt;code&gt;qr/ ^ [[:digit:]]+ $ /x&lt;/code&gt; に対するマッチングと非常に似ています。代わりに変換して使用する必要があります。 1）UTF-8でエンコードされた文字列を適切に処理しないため、この関数は非推奨です。 2）入力が空の文字列であっても &lt;code&gt;TRUE&lt;/code&gt; を返します。ロケールの規則を使用して（参照効果やパターン修飾子でプラグマに基づいて、正規表現ではオプションであるのに対し、関数の戻り値は常に、現在のロケールに基づいて&lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;はperlreでキャラクタ・セット修飾子&lt;/a&gt;と&lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;効果で？はperlreである修飾文字セット&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="869432009229b46aa164c28a7cd2745d9ba962ec" translate="yes" xml:space="preserve">
          <source>Deprecated function whose use raises a warning, and which is slated to be removed in a future Perl version. It is very similar to matching against &lt;code&gt;qr/ ^ [[:graph:]]+ $ /x&lt;/code&gt; , which you should convert to use instead. The function is deprecated because 1) it doesn't handle UTF-8 encoded strings properly; and 2) it returns &lt;code&gt;TRUE&lt;/code&gt; even if the input is the empty string. The function return is always based on the current locale, whereas using locale rules is optional with the regular expression, based on pragmas in effect and pattern modifiers (see &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;Character set modifiers in perlre&lt;/a&gt; and &lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;Which character set modifier is in effect? in perlre&lt;/a&gt;).</source>
          <target state="translated">使用が警告を発し、将来のPerlバージョンで削除される予定の非推奨関数。これは &lt;code&gt;qr/ ^ [[:graph:]]+ $ /x&lt;/code&gt; に対するマッチングと非常に似ています。代わりに変換して使用する必要があります。 1）UTF-8でエンコードされた文字列を適切に処理しないため、この関数は非推奨です。 2）入力が空の文字列であっても &lt;code&gt;TRUE&lt;/code&gt; を返します。ロケールの規則を使用して（参照効果やパターン修飾子でプラグマに基づいて、正規表現ではオプションであるのに対し、関数の戻り値は常に、現在のロケールに基づいて&lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;はperlreでキャラクタ・セット修飾子&lt;/a&gt;と&lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;効果で？はperlreである修飾文字セット&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="cdc2b565b6e1d8ec1258567850985d57eddc8117" translate="yes" xml:space="preserve">
          <source>Deprecated function whose use raises a warning, and which is slated to be removed in a future Perl version. It is very similar to matching against &lt;code&gt;qr/ ^ [[:lower:]]+ $ /x&lt;/code&gt; , which you should convert to use instead. The function is deprecated because 1) it doesn't handle UTF-8 encoded strings properly; and 2) it returns &lt;code&gt;TRUE&lt;/code&gt; even if the input is the empty string. The function return is always based on the current locale, whereas using locale rules is optional with the regular expression, based on pragmas in effect and pattern modifiers (see &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;Character set modifiers in perlre&lt;/a&gt; and &lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;Which character set modifier is in effect? in perlre&lt;/a&gt;).</source>
          <target state="translated">使用が警告を発し、将来のPerlバージョンで削除される予定の非推奨関数。これは &lt;code&gt;qr/ ^ [[:lower:]]+ $ /x&lt;/code&gt; に対するマッチングと非常によく似ています。代わりに変換して使用する必要があります。 1）UTF-8でエンコードされた文字列を適切に処理しないため、この関数は非推奨です。 2）入力が空の文字列であっても &lt;code&gt;TRUE&lt;/code&gt; を返します。ロケールの規則を使用して（参照効果やパターン修飾子でプラグマに基づいて、正規表現ではオプションであるのに対し、関数の戻り値は常に、現在のロケールに基づいて&lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;はperlreでキャラクタ・セット修飾子&lt;/a&gt;と&lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;効果で？はperlreである修飾文字セット&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="5b86512fb27d707d0e0edc2d4faed1f32e8d3ffd" translate="yes" xml:space="preserve">
          <source>Deprecated function whose use raises a warning, and which is slated to be removed in a future Perl version. It is very similar to matching against &lt;code&gt;qr/ ^ [[:print:]]+ $ /x&lt;/code&gt; , which you should convert to use instead. The function is deprecated because 1) it doesn't handle UTF-8 encoded strings properly; and 2) it returns &lt;code&gt;TRUE&lt;/code&gt; even if the input is the empty string. The function return is always based on the current locale, whereas using locale rules is optional with the regular expression, based on pragmas in effect and pattern modifiers (see &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;Character set modifiers in perlre&lt;/a&gt; and &lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;Which character set modifier is in effect? in perlre&lt;/a&gt;).</source>
          <target state="translated">使用が警告を発し、将来のPerlバージョンで削除される予定の非推奨関数。これは &lt;code&gt;qr/ ^ [[:print:]]+ $ /x&lt;/code&gt; に対するマッチングと非常に似ています。代わりに使用するために変換する必要があります。 1）UTF-8でエンコードされた文字列を適切に処理しないため、この関数は非推奨です。 2）入力が空の文字列であっても &lt;code&gt;TRUE&lt;/code&gt; を返します。ロケールの規則を使用して（参照効果やパターン修飾子でプラグマに基づいて、正規表現ではオプションであるのに対し、関数の戻り値は常に、現在のロケールに基づいて&lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;はperlreでキャラクタ・セット修飾子&lt;/a&gt;と&lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;効果で？はperlreである修飾文字セット&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="9b872da650d016a5781f8333cf85bdb130b7bcc7" translate="yes" xml:space="preserve">
          <source>Deprecated function whose use raises a warning, and which is slated to be removed in a future Perl version. It is very similar to matching against &lt;code&gt;qr/ ^ [[:punct:]]+ $ /x&lt;/code&gt; , which you should convert to use instead. The function is deprecated because 1) it doesn't handle UTF-8 encoded strings properly; and 2) it returns &lt;code&gt;TRUE&lt;/code&gt; even if the input is the empty string. The function return is always based on the current locale, whereas using locale rules is optional with the regular expression, based on pragmas in effect and pattern modifiers (see &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;Character set modifiers in perlre&lt;/a&gt; and &lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;Which character set modifier is in effect? in perlre&lt;/a&gt;).</source>
          <target state="translated">使用が警告を発し、将来のPerlバージョンで削除される予定の非推奨関数。これは &lt;code&gt;qr/ ^ [[:punct:]]+ $ /x&lt;/code&gt; に対するマッチングと非常に似ています。代わりに使用するために変換する必要があります。 1）UTF-8でエンコードされた文字列を適切に処理しないため、この関数は非推奨です。 2）入力が空の文字列であっても &lt;code&gt;TRUE&lt;/code&gt; を返します。ロケールの規則を使用して（参照効果やパターン修飾子でプラグマに基づいて、正規表現ではオプションであるのに対し、関数の戻り値は常に、現在のロケールに基づいて&lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;はperlreでキャラクタ・セット修飾子&lt;/a&gt;と&lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;効果で？はperlreである修飾文字セット&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="4dfc61b4c0045c69830c72d4c8a9f14a2de7cb42" translate="yes" xml:space="preserve">
          <source>Deprecated function whose use raises a warning, and which is slated to be removed in a future Perl version. It is very similar to matching against &lt;code&gt;qr/ ^ [[:space:]]+ $ /x&lt;/code&gt; , which you should convert to use instead. The function is deprecated because 1) it doesn't handle UTF-8 encoded strings properly; and 2) it returns &lt;code&gt;TRUE&lt;/code&gt; even if the input is the empty string. The function return is always based on the current locale, whereas using locale rules is optional with the regular expression, based on pragmas in effect and pattern modifiers (see &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;Character set modifiers in perlre&lt;/a&gt; and &lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;Which character set modifier is in effect? in perlre&lt;/a&gt;).</source>
          <target state="translated">使用が警告を発し、将来のPerlバージョンで削除される予定の非推奨関数。これは &lt;code&gt;qr/ ^ [[:space:]]+ $ /x&lt;/code&gt; に対するマッチングと非常に似ています。代わりに使用するために変換する必要があります。 1）UTF-8でエンコードされた文字列を適切に処理しないため、この関数は非推奨です。 2）入力が空の文字列であっても &lt;code&gt;TRUE&lt;/code&gt; を返します。ロケールの規則を使用して（参照効果やパターン修飾子でプラグマに基づいて、正規表現ではオプションであるのに対し、関数の戻り値は常に、現在のロケールに基づいて&lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;はperlreでキャラクタ・セット修飾子&lt;/a&gt;と&lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;効果で？はperlreである修飾文字セット&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="9eae66c65e71bd3522a0efba8a80f39c5e45c530" translate="yes" xml:space="preserve">
          <source>Deprecated function whose use raises a warning, and which is slated to be removed in a future Perl version. It is very similar to matching against &lt;code&gt;qr/ ^ [[:upper:]]+ $ /x&lt;/code&gt; , which you should convert to use instead. The function is deprecated because 1) it doesn't handle UTF-8 encoded strings properly; and 2) it returns &lt;code&gt;TRUE&lt;/code&gt; even if the input is the empty string. The function return is always based on the current locale, whereas using locale rules is optional with the regular expression, based on pragmas in effect and pattern modifiers (see &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;Character set modifiers in perlre&lt;/a&gt; and &lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;Which character set modifier is in effect? in perlre&lt;/a&gt;).</source>
          <target state="translated">使用が警告を発し、将来のPerlバージョンで削除される予定の非推奨関数。これは &lt;code&gt;qr/ ^ [[:upper:]]+ $ /x&lt;/code&gt; に対するマッチングと非常に似ています。代わりに変換して使用する必要があります。 1）UTF-8でエンコードされた文字列を適切に処理しないため、この関数は非推奨です。 2）入力が空の文字列であっても &lt;code&gt;TRUE&lt;/code&gt; を返します。ロケールの規則を使用して（参照効果やパターン修飾子でプラグマに基づいて、正規表現ではオプションであるのに対し、関数の戻り値は常に、現在のロケールに基づいて&lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;はperlreでキャラクタ・セット修飾子&lt;/a&gt;と&lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;効果で？はperlreである修飾文字セット&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="d712a49c6b2099faded0c3c79a409ab8379a0967" translate="yes" xml:space="preserve">
          <source>Deprecated function whose use raises a warning, and which is slated to be removed in a future Perl version. It is very similar to matching against &lt;code&gt;qr/ ^ [[:xdigit:]]+ $ /x&lt;/code&gt; , which you should convert to use instead. The function is deprecated because 1) it doesn't handle UTF-8 encoded strings properly; and 2) it returns &lt;code&gt;TRUE&lt;/code&gt; even if the input is the empty string. The function return is always based on the current locale, whereas using locale rules is optional with the regular expression, based on pragmas in effect and pattern modifiers (see &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;Character set modifiers in perlre&lt;/a&gt; and &lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;Which character set modifier is in effect? in perlre&lt;/a&gt;).</source>
          <target state="translated">使用が警告を発し、将来のPerlバージョンで削除される予定の非推奨関数。これは &lt;code&gt;qr/ ^ [[:xdigit:]]+ $ /x&lt;/code&gt; に対するマッチングと非常に似ています。代わりに使用するために変換する必要があります。1）UTF-8でエンコードされた文字列を適切に処理しないため、この関数は非推奨です。2）入力が空の文字列であっても &lt;code&gt;TRUE&lt;/code&gt; を返します。ロケールの規則を使用して（参照効果やパターン修飾子でプラグマに基づいて、正規表現ではオプションであるのに対し、関数の戻り値は常に、現在のロケールに基づいて&lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;はperlreでキャラクタ・セット修飾子&lt;/a&gt;と&lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;効果で？はperlreである修飾文字セット&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="77e5e77915f87f5eba641b256db1ec0d6448e365" translate="yes" xml:space="preserve">
          <source>Deprecated in Perl 5.</source>
          <target state="translated">Perl 5では非推奨。</target>
        </trans-unit>
        <trans-unit id="0447c363038e418e07f3246f8ca43e5cfd53e211" translate="yes" xml:space="preserve">
          <source>Deprecated in Perl 5.10.0</source>
          <target state="translated">Perl 5.10.0 で非推奨</target>
        </trans-unit>
        <trans-unit id="42f0ac3a73aa4ea8f831dc4a897f203beaf75865" translate="yes" xml:space="preserve">
          <source>Deprecated in Perl v5.12.0.</source>
          <target state="translated">Perl v5.12.0 で非推奨。</target>
        </trans-unit>
        <trans-unit id="c719d3d031098df68eeee6d64494f02905ae30e2" translate="yes" xml:space="preserve">
          <source>Deprecated method, but does the same as service_check() method.</source>
          <target state="translated">非推奨のメソッドですが、 service_check()メソッドと同じことを行います。</target>
        </trans-unit>
        <trans-unit id="f82cf002f6b4c932fb0a62e044c473c42a57f99c" translate="yes" xml:space="preserve">
          <source>Deprecated method. Use libscan instead.</source>
          <target state="translated">非推奨のメソッドです。代わりに libscan を使用してください。</target>
        </trans-unit>
        <trans-unit id="296aaa10f5a1032a3fc94ecfb0996dab5a0c7b1f" translate="yes" xml:space="preserve">
          <source>Deprecated module to load Locale::Maketext utf8 code</source>
          <target state="translated">Locale::Maketext utf8コードをロードするための非推奨モジュール</target>
        </trans-unit>
        <trans-unit id="a3ba85c01d05989140902ff777b593387589780c" translate="yes" xml:space="preserve">
          <source>Deprecated use of my() in false conditional. This will be a fatal error in Perl 5.30</source>
          <target state="translated">false 条件での my()の使用は非推奨。これは Perl 5.30 で致命的なエラーとなります。</target>
        </trans-unit>
        <trans-unit id="b5972c72225aadd112c116405b2c9a8c61f8be67" translate="yes" xml:space="preserve">
          <source>Deprecated. Please use &lt;code&gt;is_actual_ok&lt;/code&gt; instead.</source>
          <target state="translated">非推奨。代わりに &lt;code&gt;is_actual_ok&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="f480918eabb96e1b569421fef2e3056b6e5a48a3" translate="yes" xml:space="preserve">
          <source>Deprecated. Please use &lt;code&gt;is_ok&lt;/code&gt; instead.</source>
          <target state="translated">非推奨。代わりに &lt;code&gt;is_ok&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="8bab31dacd225be342dc45946fc045df33a2d1c4" translate="yes" xml:space="preserve">
          <source>Deprecated. Use &lt;code&gt;is_good_plan&lt;/code&gt; instead.</source>
          <target state="translated">非推奨。代わりに &lt;code&gt;is_good_plan&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="4880df7da732b64649d73fa94f900ec9f18233e3" translate="yes" xml:space="preserve">
          <source>Deprecating a variable announces the intent of the perl maintainers to eventually remove the variable from the language. It may still be available despite its status. Using a deprecated variable triggers a warning.</source>
          <target state="translated">変数を非推奨にすることは、最終的にその変数を言語から削除するというPerlメンテナの意図を表明します。その状態にもかかわらず、まだ利用できるかもしれません。非推奨の変数を使用すると警告が発せられます。</target>
        </trans-unit>
        <trans-unit id="be163eb89f0ec6f8bfe369849331f8a896683818" translate="yes" xml:space="preserve">
          <source>Dereference-address operator. (Perl's prefix dereferencing operators are typed: &lt;code&gt;$&lt;/code&gt; , &lt;code&gt;@&lt;/code&gt; , &lt;code&gt;%&lt;/code&gt; , and &lt;code&gt;&amp;amp;&lt;/code&gt; .)</source>
          <target state="translated">逆参照アドレス演算子。（Perlのプレフィックス逆参照演算子は、 &lt;code&gt;$&lt;/code&gt; 、 &lt;code&gt;@&lt;/code&gt; 、 &lt;code&gt;%&lt;/code&gt; 、 &lt;code&gt;&amp;amp;&lt;/code&gt; と入力されます。）</target>
        </trans-unit>
        <trans-unit id="d9463998fff864ecdb3795dbbe3e647e986e867b" translate="yes" xml:space="preserve">
          <source>Dereference-address operator. (Perl's prefix dereferencing operators are typed: &lt;code&gt;$&lt;/code&gt;, &lt;code&gt;@&lt;/code&gt;, &lt;code&gt;%&lt;/code&gt;, and &lt;code&gt;&amp;amp;&lt;/code&gt;.)</source>
          <target state="translated">間接参照アドレス演算子。（Perlのプレフィックス逆参照演算子は次のように入力されます： &lt;code&gt;$&lt;/code&gt; 、 &lt;code&gt;@&lt;/code&gt; 、 &lt;code&gt;%&lt;/code&gt; 、および &lt;code&gt;&amp;amp;&lt;/code&gt; 。）</target>
        </trans-unit>
        <trans-unit id="a13dba076abe09205f4d6530500f95233f3d8b89" translate="yes" xml:space="preserve">
          <source>Dereferences an RV to return the SV.</source>
          <target state="translated">SV を返すために RV をディレファレンスします。</target>
        </trans-unit>
        <trans-unit id="1d2b570065845ffa968e3702ce8e6c146303b183" translate="yes" xml:space="preserve">
          <source>Dereferencing</source>
          <target state="translated">Dereferencing</target>
        </trans-unit>
        <trans-unit id="156201b939972fe144cc0ef209c27735390cea3d" translate="yes" xml:space="preserve">
          <source>Dereferencing Method Call</source>
          <target state="translated">デレファレンスメソッド呼び出し</target>
        </trans-unit>
        <trans-unit id="1482ff3cb39b2ab2879a6e8a1d98292788d82730" translate="yes" xml:space="preserve">
          <source>Deregistration is done in this case by calling event_loop with &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; as its parameter:</source>
          <target state="translated">この場合、登録解除は、 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; をパラメーターとしてevent_loopを呼び出すことによって行われます。</target>
        </trans-unit>
        <trans-unit id="426af9b55be08d3edbb0f8e1c83b016788814c5c" translate="yes" xml:space="preserve">
          <source>Deregistration is done in this case by calling event_loop with &lt;code&gt;undef&lt;/code&gt; as its parameter:</source>
          <target state="translated">この場合、登録解除は、パラメーターとして &lt;code&gt;undef&lt;/code&gt; を指定してevent_loopを呼び出すことによって行われます。</target>
        </trans-unit>
        <trans-unit id="0ece715d7bfa3a1e4b4b7c2716133b08b5012fe3" translate="yes" xml:space="preserve">
          <source>Derived Normalization Properties</source>
          <target state="translated">派生正規化プロパティ</target>
        </trans-unit>
        <trans-unit id="46565153346c49e93798bd916a2902e7376b3a49" translate="yes" xml:space="preserve">
          <source>Derived from FileHandle.pm by Graham Barr &amp;lt;</source>
          <target state="translated">Graham BarrによってFileHandle.pmから派生&amp;lt;</target>
        </trans-unit>
        <trans-unit id="bc5d76c2188dda3e644ef5539acfe2ee659fc494" translate="yes" xml:space="preserve">
          <source>Derived from FileHandle.pm by Graham Barr &amp;lt;gbarr@pobox.com&amp;gt;</source>
          <target state="translated">Graham Barr &amp;lt;gbarr@pobox.com&amp;gt;によってFileHandle.pmから派生</target>
        </trans-unit>
        <trans-unit id="6f61cc4cb53719b61daa460c7f629eaad048da52" translate="yes" xml:space="preserve">
          <source>Derived from many sources. Some would say</source>
          <target state="translated">多くのソースから派生しています。と言う人もいるでしょう。</target>
        </trans-unit>
        <trans-unit id="f27ae512bfe1f4a041a1bece8dc33e39ce992aa0" translate="yes" xml:space="preserve">
          <source>DerivedNormalizationProps.txt</source>
          <target state="translated">DerivedNormalizationProps.txt</target>
        </trans-unit>
        <trans-unit id="3fa9641c46bb1506e8ec7461044331a6aff090c2" translate="yes" xml:space="preserve">
          <source>Describe what the tests test, to make debugging a failed test easier for you or for the next person who runs your test.</source>
          <target state="translated">失敗したテストのデバッグを容易にするために、テストの内容を説明してください。</target>
        </trans-unit>
        <trans-unit id="c4477abcc61a8e8691692bd5b2f94edfbc46fd9d" translate="yes" xml:space="preserve">
          <source>Describe what you're doing and how you're doing it, using normal Perl comments.</source>
          <target state="translated">通常のPerlのコメントを使って、何をどのようにしているのかを説明してください。</target>
        </trans-unit>
        <trans-unit id="34b3e166e1301e0606954d6a55611015e6cbfc1c" translate="yes" xml:space="preserve">
          <source>Describes the format and contents of</source>
          <target state="translated">のフォーマットと内容について説明します。</target>
        </trans-unit>
        <trans-unit id="96a98270561c02f5c77d9be37f677cf453421b77" translate="yes" xml:space="preserve">
          <source>Descrip.MMS</source>
          <target state="translated">Descrip.MMS</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>
        </trans-unit>
        <trans-unit id="2af956b843ced2cf4dd0aac522c1a1134f4b160b" translate="yes" xml:space="preserve">
          <source>Descriptions above occasionally refer to &quot;the stack&quot;, but there are in fact many stack-like data structures within the perl interpreter. When otherwise unqualified, &quot;the stack&quot; usually refers to the value stack.</source>
          <target state="translated">上の説明では時々「スタック」を指すことがありますが、実際にはPerlインタープリタの中には多くのスタックのようなデータ構造があります。他に修飾されていない場合、「スタック」は通常、値のスタックを指します。</target>
        </trans-unit>
        <trans-unit id="19d71724ac39d6a9fdd91c9d7584648481c9ba90" translate="yes" xml:space="preserve">
          <source>Descriptive editing term&amp;mdash;short for &amp;ldquo;awkward&amp;rdquo;. Also coincidentally refers to a venerable text-processing language from which Perl derived some of its high-level ideas.</source>
          <target state="translated">説明的な編集用語&amp;mdash;「ぎこちない」の略。また、偶然にも、Perlがその高レベルのアイデアの一部を派生させた由緒あるテキスト処理言語を参照しています。</target>
        </trans-unit>
        <trans-unit id="092d175f31c309d86e54ac4890791b68f8011efb" translate="yes" xml:space="preserve">
          <source>Designed to be a method call, and to be overridden by a derived class (i.e. a class which has DynaLoader in its @ISA). The definition in DynaLoader itself returns 0, which produces standard behavior from dl_load_file().</source>
          <target state="translated">メソッド呼び出しとして設計されており、派生クラス(@ISAにDynaLoaderを持つクラス)でオーバーライドできるようになっています。DynaLoaderの定義自体は0を返しますが、これはdl_load_file()の標準的な動作を生成します。</target>
        </trans-unit>
        <trans-unit id="59aac4a2c7e327e45b17c4aed3092d9662863e7d" translate="yes" xml:space="preserve">
          <source>Designing your API</source>
          <target state="translated">API の設計</target>
        </trans-unit>
        <trans-unit id="2304f50cca1805cd55f5d31750b7fa633b66fe80" translate="yes" xml:space="preserve">
          <source>Desired permission for directories. Defaults to &lt;code&gt;755&lt;/code&gt; .</source>
          <target state="translated">ディレクトリに必要な権限。デフォルトは &lt;code&gt;755&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="b5f79564508255c8bb40e87bcc15ba24e699a0fe" translate="yes" xml:space="preserve">
          <source>Desired permission for directories. Defaults to &lt;code&gt;755&lt;/code&gt;.</source>
          <target state="translated">ディレクトリに必要な権限。デフォルトは &lt;code&gt;755&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="533cafeb3aa07a126f4d3b8498ce1b5a7bd7a9da" translate="yes" xml:space="preserve">
          <source>Desired permission for executable files. Defaults to &lt;code&gt;755&lt;/code&gt; .</source>
          <target state="translated">実行可能ファイルに必要な権限。デフォルトは &lt;code&gt;755&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="95a934b18387d6631a9ee2ba1954dad12e33eb24" translate="yes" xml:space="preserve">
          <source>Desired permission for executable files. Defaults to &lt;code&gt;755&lt;/code&gt;.</source>
          <target state="translated">実行可能ファイルに必要なアクセス許可。デフォルトは &lt;code&gt;755&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="7a3e68ecf77d35df71a723c0bb9b9d6b0bcf091b" translate="yes" xml:space="preserve">
          <source>Desired permission for read/writable files. Defaults to &lt;code&gt;644&lt;/code&gt; .</source>
          <target state="translated">読み取り/書き込み可能なファイルに必要な権限。デフォルトは &lt;code&gt;644&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="7c435a739cf7859dac5fbc8a7269d1d6d89621a8" translate="yes" xml:space="preserve">
          <source>Desired permission for read/writable files. Defaults to &lt;code&gt;644&lt;/code&gt;.</source>
          <target state="translated">読み取り/書き込み可能なファイルに必要なアクセス許可。デフォルトは &lt;code&gt;644&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="369c7a7ce11a967333493247a17fefcaf8782924" translate="yes" xml:space="preserve">
          <source>Despite its name, this calls your system's default documentation viewer on the given page, or on the viewer itself if</source>
          <target state="translated">その名前にもかかわらず、これは指定されたページ上のシステムのデフォルトのドキュメントビューアを呼び出します。</target>
        </trans-unit>
        <trans-unit id="c89708df88c5d908f88da0373b3c5448a6138264" translate="yes" xml:space="preserve">
          <source>Despite the existence of &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt;, there are still three places where the &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; operator still shines. In fact, in these three places, you</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; の存在にもかかわらず、 &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; オペレーターがまだ輝く3つの場所があります。実際、これら3つの場所では、</target>
        </trans-unit>
        <trans-unit id="e9361503e9b53e4b67daf4d5ea4a078a36706afe" translate="yes" xml:space="preserve">
          <source>Despite the existence of &lt;code&gt;my&lt;/code&gt;, there are still three places where the &lt;code&gt;local&lt;/code&gt; operator still shines. In fact, in these three places, you</source>
          <target state="translated">&lt;code&gt;my&lt;/code&gt; の存在にもかかわらず、 &lt;code&gt;local&lt;/code&gt; オペレーターがまだ輝いている場所はまだ3つあります。実際、これらの3つの場所では、</target>
        </trans-unit>
        <trans-unit id="cea2b82422761c8e0827137f7347a8217dfbe6f9" translate="yes" xml:space="preserve">
          <source>Despite the funny names, precedence is the same as any other named unary operator. The operator may be any of:</source>
          <target state="translated">おかしな名前にもかかわらず、優先順位は他の名前付き単項演算子と同じです。演算子は以下のいずれかである可能性があります。</target>
        </trans-unit>
        <trans-unit id="b28b5d34c2326fac6371b4f7d54b7efed7411f7e" translate="yes" xml:space="preserve">
          <source>Despite the limitations listed above, HTTP::Tiny is considered feature-complete. New feature requests should be directed to &lt;a href=&quot;HTTP::Tiny::UA&quot;&gt;HTTP::Tiny::UA&lt;/a&gt;.</source>
          <target state="translated">上記の制限にもかかわらず、HTTP :: Tinyはフィーチャーコンプリートと見なされます。新機能のリクエストは、&lt;a href=&quot;HTTP::Tiny::UA&quot;&gt;HTTP :: Tiny :: UA&lt;/a&gt;に送信する必要があります。</target>
        </trans-unit>
        <trans-unit id="5907dde0a5903ebac0baff736f53c485d9ebcc11" translate="yes" xml:space="preserve">
          <source>Despite the name of the &lt;code&gt;finddepth()&lt;/code&gt; function, both &lt;code&gt;find()&lt;/code&gt; and &lt;code&gt;finddepth()&lt;/code&gt; perform a depth-first search of the directory hierarchy.</source>
          <target state="translated">&lt;code&gt;finddepth()&lt;/code&gt; 関数の名前にもかかわらず、 &lt;code&gt;find()&lt;/code&gt; と &lt;code&gt;finddepth()&lt;/code&gt; はどちらもディレクトリ階層の縦型検索を実行します。</target>
        </trans-unit>
        <trans-unit id="2a5924278d8b7657f3aeb8649ead9475eab91d8f" translate="yes" xml:space="preserve">
          <source>Despite their suggestions in earlier versions of this document the macros &lt;code&gt;(X)PUSH[iunp]&lt;/code&gt; are</source>
          <target state="translated">このドキュメントの以前のバージョンでの提案にもかかわらず、マクロ &lt;code&gt;(X)PUSH[iunp]&lt;/code&gt; は</target>
        </trans-unit>
        <trans-unit id="bcf6c17f9da73e467a073ac5e6e487e5bdc36429" translate="yes" xml:space="preserve">
          <source>Destructors</source>
          <target state="translated">Destructors</target>
        </trans-unit>
        <trans-unit id="484eade1780602efb64c4a7649b6a4a1f1b85bfd" translate="yes" xml:space="preserve">
          <source>Destructors may not be called on objects if those objects still exist at global destruction time. If the destructors must be called, make sure there are no circular references and that nothing is referencing the objects before the program ends.</source>
          <target state="translated">デストラクタは、グローバル破壊時にオブジェクトがまだ存在している場合には、そのオブジェクトに対して呼び出すことはできません。デストラクタを呼ばなければならない場合は、プログラムが終了する前に、循環参照がなく、何もオブジェクトを参照していないことを確認してください。</target>
        </trans-unit>
        <trans-unit id="78fbdf14ab60724c2e9f95d677204576dc399f05" translate="yes" xml:space="preserve">
          <source>Destructors may not be called on objects if those objects still exist at global destruction time. If the destructors must be called, make sure there are no circular references and that nothing is referencing the objects, before the program ends.</source>
          <target state="translated">デストラクタは、グローバル破壊時にオブジェクトがまだ存在している場合には、そのオブジェクトに対して呼び出すことはできません。デストラクタを呼ばなければならない場合は、プログラムが終了する前に、循環参照がなく、何もオブジェクトを参照していないことを確認してください。</target>
        </trans-unit>
        <trans-unit id="9420f695c6cbe6e84c4650570cc80c2e4dc02921" translate="yes" xml:space="preserve">
          <source>Detach from the shared memory segment that previously has been attached to. Returns true if successful, or false on error. See &lt;a href=&quot;http://man.he.net/man2/shmdt&quot;&gt;shmdt(2)&lt;/a&gt;.</source>
          <target state="translated">以前に接続されていた共有メモリセグメントから切り離します。成功した場合はtrueを返し、エラーの場合はfalseを返します。&lt;a href=&quot;http://man.he.net/man2/shmdt&quot;&gt;shmdt（2）を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="7f13a5e8324201e8439f86f9e267530c519b5fa1" translate="yes" xml:space="preserve">
          <source>Detach from the shared memory segment that previously has been attached to. Returns true if successful, or false on error. See &lt;a href=&quot;http://search.cpan.org/perldoc/shmdt&quot;&gt;shmdt&lt;/a&gt;.</source>
          <target state="translated">以前に接続されていた共有メモリセグメントから切り離します。成功した場合はtrue、エラーの場合はfalseを返します。&lt;a href=&quot;http://search.cpan.org/perldoc/shmdt&quot;&gt;shmdtを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="7a012746729c03d7f61d449f79bfe19f7c454343" translate="yes" xml:space="preserve">
          <source>Detach the shared memory segment located at the address specified by ADDR from the address space of the calling process. See &lt;a href=&quot;http://man.he.net/man2/shmdt&quot;&gt;shmdt(2)&lt;/a&gt;.</source>
          <target state="translated">呼び出し元プロセスのアドレス空間から、ADDRで指定されたアドレスにある共有メモリセグメントを切り離します。&lt;a href=&quot;http://man.he.net/man2/shmdt&quot;&gt;shmdt（2）を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="f6d104f83eda0e6841179588c742c21e25fb6240" translate="yes" xml:space="preserve">
          <source>Detach the shared memory segment located at the address specified by ADDR from the address space of the calling process. See &lt;a href=&quot;http://search.cpan.org/perldoc/shmdt&quot;&gt;shmdt&lt;/a&gt;.</source>
          <target state="translated">ADDRで指定されたアドレスにある共有メモリセグメントを、呼び出しプロセスのアドレス空間から切り離します。&lt;a href=&quot;http://search.cpan.org/perldoc/shmdt&quot;&gt;shmdtを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="db4efe2ae9107758a1d7c7f9114298d9141da3d4" translate="yes" xml:space="preserve">
          <source>Detached threads and global destruction</source>
          <target state="translated">切り離された糸と世界的な破壊</target>
        </trans-unit>
        <trans-unit id="ea90bef912a25d0e84994d4881a16fcbc2e6e50a" translate="yes" xml:space="preserve">
          <source>Detailed description of each of the command-line options taken by the program. This should be separate from the description for the use of parsers like &lt;a href=&quot;Pod::Usage&quot;&gt;Pod::Usage&lt;/a&gt;. This is normally presented as a list, with each option as a separate &lt;code&gt;=item&lt;/code&gt;. The specific option string should be enclosed in B&amp;lt;&amp;gt;. Any values that the option takes should be enclosed in I&amp;lt;&amp;gt;. For example, the section for the option &lt;b&gt;--section&lt;/b&gt;=</source>
          <target state="translated">プログラムが使用する各コマンドラインオプションの詳細な説明。これは、&lt;a href=&quot;Pod::Usage&quot;&gt;Pod :: Usageの&lt;/a&gt;ようなパーサーの使用に関する説明とは別にする必要があります。これは通常、リストとして表示され、各オプションは個別の &lt;code&gt;=item&lt;/code&gt; として表示されます。特定のオプション文字列はB &amp;lt;&amp;gt;で囲む必要があります。オプションが取る値はすべてI &amp;lt;&amp;gt;で囲む必要があります。たとえば、オプション&lt;b&gt;--section&lt;/b&gt; =のセクション</target>
        </trans-unit>
        <trans-unit id="524606f1e7f47ed54a2dc7c2ed309c5733e4790f" translate="yes" xml:space="preserve">
          <source>Detailed description of each of the command-line options taken by the program. This should be separate from the description for the use of parsers like &lt;a href=&quot;pod/usage&quot;&gt;Pod::Usage&lt;/a&gt;. This is normally presented as a list, with each option as a separate &lt;code&gt;=item&lt;/code&gt; . The specific option string should be enclosed in B&amp;lt;&amp;gt;. Any values that the option takes should be enclosed in I&amp;lt;&amp;gt;. For example, the section for the option &lt;b&gt;--section&lt;/b&gt;=</source>
          <target state="translated">プログラムで使用される各コマンドラインオプションの詳細な説明。これは、&lt;a href=&quot;pod/usage&quot;&gt;Pod :: Usage&lt;/a&gt;などのパーサーを使用するための説明とは別にする必要があります。これは通常、各オプションが個別の &lt;code&gt;=item&lt;/code&gt; としてリストとして表示されます。特定のオプション文字列はB &amp;lt;&amp;gt;で囲む必要があります。オプションが取る値はすべてI &amp;lt;&amp;gt;で囲む必要があります。たとえば、オプション&lt;b&gt;--section&lt;/b&gt; =のセクション</target>
        </trans-unit>
        <trans-unit id="fe13e56081ddb095d18e9d96165e4c91a787dd78" translate="yes" xml:space="preserve">
          <source>Detailed documentation about modules can be found at: &lt;a href=&quot;perlmod&quot;&gt;perlmod&lt;/a&gt;, &lt;a href=&quot;perlmodlib&quot;&gt;perlmodlib&lt;/a&gt;, &lt;a href=&quot;perlmodstyle&quot;&gt;perlmodstyle&lt;/a&gt;.</source>
          <target state="translated">：モジュールに関する詳細なドキュメントがで見つけることができます&lt;a href=&quot;perlmod&quot;&gt;perlmodを&lt;/a&gt;、&lt;a href=&quot;perlmodlib&quot;&gt;はperlmodlib&lt;/a&gt;、&lt;a href=&quot;perlmodstyle&quot;&gt;perlmodstyle&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="48efd59016764ae34dbd4dd35254250b9ade50c2" translate="yes" xml:space="preserve">
          <source>Detailed info about trie compilation.</source>
          <target state="translated">トライコンパイルの詳細情報です。</target>
        </trans-unit>
        <trans-unit id="48a5bf693bd8174668fcec90fe1c7747773cff6b" translate="yes" xml:space="preserve">
          <source>Detailed instructions on how to build and install perl extension modules, including XS-type modules, is included. See 'BUILDING AND INSTALLING MODULES'.</source>
          <target state="translated">XS型モジュールを含むPerl拡張モジュールのビルドとインストールの詳細な説明が含まれています。モジュールのビルドとインストール」を参照してください。</target>
        </trans-unit>
        <trans-unit id="971ecb47b81b9e3ebb8421ed26268b0335343299" translate="yes" xml:space="preserve">
          <source>Detailed signal management. This uses &lt;code&gt;POSIX::SigAction&lt;/code&gt; objects for the &lt;code&gt;action&lt;/code&gt; and &lt;code&gt;oldaction&lt;/code&gt; arguments (the oldaction can also be just a hash reference). Consult your system's &lt;code&gt;sigaction&lt;/code&gt; manpage for details, see also &lt;code&gt;POSIX::SigRt&lt;/code&gt; .</source>
          <target state="translated">詳細な信号管理。これは、 &lt;code&gt;action&lt;/code&gt; 引数と &lt;code&gt;oldaction&lt;/code&gt; 引数に &lt;code&gt;POSIX::SigAction&lt;/code&gt; オブジェクトを使用します（oldactionは単なるハッシュ参照にすることもできます）。詳細については、システムの &lt;code&gt;sigaction&lt;/code&gt; マンページを参照してください &lt;code&gt;POSIX::SigRt&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="b8962644bde7a636ef0d0a40a98e1ababd89ad6f" translate="yes" xml:space="preserve">
          <source>Detailed signal management. This uses &lt;code&gt;POSIX::SigAction&lt;/code&gt; objects for the &lt;code&gt;action&lt;/code&gt; and &lt;code&gt;oldaction&lt;/code&gt; arguments (the oldaction can also be just a hash reference). Consult your system's &lt;code&gt;sigaction&lt;/code&gt; manpage for details, see also &lt;code&gt;POSIX::SigRt&lt;/code&gt;.</source>
          <target state="translated">詳細な信号管理。これは、 &lt;code&gt;action&lt;/code&gt; および &lt;code&gt;oldaction&lt;/code&gt; 引数に &lt;code&gt;POSIX::SigAction&lt;/code&gt; オブジェクトを使用します（oldactionは単なるハッシュ参照にすることもできます）。詳細については、システムの &lt;code&gt;sigaction&lt;/code&gt; マンページを参照してください &lt;code&gt;POSIX::SigRt&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="9d199abf24c61ad763382240bceaa4bb976c6faf" translate="yes" xml:space="preserve">
          <source>Details are in &lt;a href=&quot;perlop#Quote-and-Quote-like-Operators&quot;&gt;&quot;Quote and Quote-like Operators&quot; in perlop&lt;/a&gt;.</source>
          <target state="translated">詳細は、&lt;a href=&quot;perlop#Quote-and-Quote-like-Operators&quot;&gt;perlopの「QuoteおよびQuote-likeOperators」にあり&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="0c9fa89519b1cc82f7ef4510c084ac4535cbb9b1" translate="yes" xml:space="preserve">
          <source>Details are in &lt;a href=&quot;perlop#Quote-and-Quote-like-Operators&quot;&gt;Quote and Quote-like Operators in perlop&lt;/a&gt;.</source>
          <target state="translated">詳細は&lt;a href=&quot;perlop#Quote-and-Quote-like-Operators&quot;&gt;perlopのQuoteおよびQuote-like演算子にあり&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="9ba741c6d40d9b34740b66e9f99ec546651895d0" translate="yes" xml:space="preserve">
          <source>Details changes to Locale::Codes</source>
          <target state="translated">Locale::Codes への詳細な変更</target>
        </trans-unit>
        <trans-unit id="a19ea967f1e475201d32e01b8d87d22e29b2850e" translate="yes" xml:space="preserve">
          <source>Details on some modifiers</source>
          <target state="translated">いくつかの修飾子の詳細</target>
        </trans-unit>
        <trans-unit id="79ba379e83c3a5e1a2d0279f940c57dc6c7027f0" translate="yes" xml:space="preserve">
          <source>Detect the user's language preferences</source>
          <target state="translated">ユーザーの言語設定を検出</target>
        </trans-unit>
        <trans-unit id="96ab3b83521cf8f1c7af801ea5cb7c8b350270a7" translate="yes" xml:space="preserve">
          <source>Detecting the problem</source>
          <target state="translated">問題の検出</target>
        </trans-unit>
        <trans-unit id="4e04b164f775f2394cd7b257c789eeab3703bf40" translate="yes" xml:space="preserve">
          <source>Determination of Perl Library and Installation Locations</source>
          <target state="translated">Perl ライブラリとインストール先の決定</target>
        </trans-unit>
        <trans-unit id="428b80cb8395cadc1a038a4e4bdb2355d7bb3c54" translate="yes" xml:space="preserve">
          <source>Determination of whether $BSD_STYLE should be set is left as an exercise to the reader.</source>
          <target state="translated">BSD_STYLE が設定されるべきかどうかの判断は、読者に委ねられています。</target>
        </trans-unit>
        <trans-unit id="80939461d9f4a2ef5a18ce3dca6d5e6e0293a8f9" translate="yes" xml:space="preserve">
          <source>Determination of whether &lt;code&gt;$BSD_STYLE&lt;/code&gt; should be set is left as an exercise to the reader.</source>
          <target state="translated">&lt;code&gt;$BSD_STYLE&lt;/code&gt; を設定すべきかどうかの決定は、読者の練習問題として残されています。</target>
        </trans-unit>
        <trans-unit id="25d8f9f38f16f8b5a3c700d3bd4a5cd28a740860" translate="yes" xml:space="preserve">
          <source>Determine if the server supports the specified feature. The return value is a list of lines the server responded with to describe the options that it supports for the given feature. If the feature is unsupported then the empty list is returned.</source>
          <target state="translated">サーバが指定された機能をサポートしているかどうかを判断します。返り値は、指定した機能に対してサーバがサポートしているオプションを記述するために 返された行のリストです。その機能がサポートされていない場合は、空のリストが返されます。</target>
        </trans-unit>
        <trans-unit id="46c27646774eae185d5079b386367766995dfee9" translate="yes" xml:space="preserve">
          <source>Determine libraries to use and how to use them</source>
          <target state="translated">使用するライブラリとその使い方を決める</target>
        </trans-unit>
        <trans-unit id="c67c2a5f349f5c5c7e6e2488741e5e47a1ce5f04" translate="yes" xml:space="preserve">
          <source>Determine the architecture you'll be cross-compiling for</source>
          <target state="translated">クロスコンパイルするアーキテクチャを決定する</target>
        </trans-unit>
        <trans-unit id="bfbb294be56602dd8d5e0f86c6b7c3dc8fd0ef0f" translate="yes" xml:space="preserve">
          <source>Determine the full paths (including file suffix) of one or more loadable files given their generic names and optionally one or more directories. Searches directories in @dl_library_path by default and returns an empty list if no files were found.</source>
          <target state="translated">1 つ以上のロード可能なファイルのフルパス (ファイルのサフィックスを含む)を、一般名とオプションで 1 つ以上のディレクトリを指定して決定します。デフォルトでは @dl_library_path 内のディレクトリを検索し、ファイルが見つからなかった場合は空のリストを返します。</target>
        </trans-unit>
        <trans-unit id="e03872d43ef76f638b7ad5fcef8b2bd7ebde0d86" translate="yes" xml:space="preserve">
          <source>Determine whether a &lt;code&gt;long double&lt;/code&gt; is supported by Perl. This should be used to determine whether to test &lt;code&gt;print_long_double&lt;/code&gt;.</source>
          <target state="translated">かどうかを判断し &lt;code&gt;long double&lt;/code&gt; のPerlでサポートされています。これは、 &lt;code&gt;print_long_double&lt;/code&gt; をテストするかどうかを決定するために使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="f7ba310db2fe8fa11b7f48b3b00f700eda24440a" translate="yes" xml:space="preserve">
          <source>Determine whether a file is native to Cygwin by checking whether it resides inside the Cygwin installation (using Windows paths). If so, use &lt;a href=&quot;ExtUtils::MM_Unix&quot;&gt;ExtUtils::MM_Unix&lt;/a&gt; to determine if it may be a command. Otherwise use the tests from &lt;a href=&quot;ExtUtils::MM_Win32&quot;&gt;ExtUtils::MM_Win32&lt;/a&gt;.</source>
          <target state="translated">ファイルがCygwinインストール内にあるかどうかを確認して（Windowsパスを使用）、ファイルがCygwinにネイティブであるかどうかを判断します。その場合は、&lt;a href=&quot;ExtUtils::MM_Unix&quot;&gt;ExtUtils :: MM_Unix&lt;/a&gt;を使用して、コマンドであるかどうかを判断します。それ以外の場合は、&lt;a href=&quot;ExtUtils::MM_Win32&quot;&gt;ExtUtils :: MM_Win32の&lt;/a&gt;テストを使用します。</target>
        </trans-unit>
        <trans-unit id="c47d159fd2f7d84a2dc5b895afa17d3e1c470e9d" translate="yes" xml:space="preserve">
          <source>Determine whether a file is native to Cygwin by checking whether it resides inside the Cygwin installation (using Windows paths). If so, use &lt;code&gt;ExtUtils::MM_Unix&lt;/code&gt; to determine if it may be a command. Otherwise use the tests from &lt;code&gt;ExtUtils::MM_Win32&lt;/code&gt; .</source>
          <target state="translated">（Windowsパスを使用して）Cygwinインストール内に存在するかどうかを確認して、ファイルがCygwinにネイティブであるかどうかを判別します。その場合は、 &lt;code&gt;ExtUtils::MM_Unix&lt;/code&gt; を使用して、それがコマンドであるかどうかを判断します。それ以外の場合は、 &lt;code&gt;ExtUtils::MM_Win32&lt;/code&gt; テストを使用します。</target>
        </trans-unit>
        <trans-unit id="a35731d2a8f0fd508c5b03e1f3c340b65af8b100" translate="yes" xml:space="preserve">
          <source>Determines if man pages should be generated and initializes MAN1PODS and MAN3PODS as appropriate.</source>
          <target state="translated">man ページが生成されるべきかどうかを判断し、man1pods と man3pods を適切に初期化します。</target>
        </trans-unit>
        <trans-unit id="32b2b5cefa4d496f2ffa711bf6d062b35a6183bc" translate="yes" xml:space="preserve">
          <source>Determines if the given &lt;code&gt;$thing&lt;/code&gt; can be used as a filehandle.</source>
          <target state="translated">指定された &lt;code&gt;$thing&lt;/code&gt; をファイルハンドルとして使用できるかどうかを決定します。</target>
        </trans-unit>
        <trans-unit id="81c97d633f09f436c3551fc2f985b2dd31ceb89b" translate="yes" xml:space="preserve">
          <source>Determines if the two hashes contain the same keys and values. This is a deep check.</source>
          <target state="translated">2 つのハッシュに同じキーと値が含まれているかどうかを判定します。これは深いチェックです。</target>
        </trans-unit>
        <trans-unit id="02bc22cbed7ebf5c21902f1d116056eb9bbd8381" translate="yes" xml:space="preserve">
          <source>Determines the &lt;a href=&quot;../term/ansicolor&quot;&gt;Term::ANSIColor&lt;/a&gt; for the failure in case it is successful. This color defaults to &lt;code&gt;'red'&lt;/code&gt; .</source>
          <target state="translated">成功した場合の失敗の&lt;a href=&quot;../term/ansicolor&quot;&gt;Term :: ANSIColor&lt;/a&gt;を決定します。この色のデフォルトは &lt;code&gt;'red'&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="46421b429d7fbec4c32a7efe5539900fa9227686" translate="yes" xml:space="preserve">
          <source>Determines the &lt;a href=&quot;../term/ansicolor&quot;&gt;Term::ANSIColor&lt;/a&gt; for the summary in case it is successful. This color defaults to &lt;code&gt;'green'&lt;/code&gt; .</source>
          <target state="translated">成功した場合のサマリーの&lt;a href=&quot;../term/ansicolor&quot;&gt;Term :: ANSIColor&lt;/a&gt;を決定します。この色のデフォルトは &lt;code&gt;'green'&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c9db3b80a99cefc4ac8ee1d42259ea000f4026e9" translate="yes" xml:space="preserve">
          <source>Determines the &lt;a href=&quot;Term::ANSIColor&quot;&gt;Term::ANSIColor&lt;/a&gt; for the failure in case it is successful. This color defaults to &lt;code&gt;'red'&lt;/code&gt;.</source>
          <target state="translated">成功した場合の失敗の&lt;a href=&quot;Term::ANSIColor&quot;&gt;Term :: ANSIColor&lt;/a&gt;を決定します。この色のデフォルトは &lt;code&gt;'red'&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="0de89af076dcd2348b4086bb3c5ec0d8079e88a8" translate="yes" xml:space="preserve">
          <source>Determines the &lt;a href=&quot;Term::ANSIColor&quot;&gt;Term::ANSIColor&lt;/a&gt; for the summary in case it is successful. This color defaults to &lt;code&gt;'green'&lt;/code&gt;.</source>
          <target state="translated">成功した場合の要約の&lt;a href=&quot;Term::ANSIColor&quot;&gt;Term :: ANSIColor&lt;/a&gt;を決定します。この色のデフォルトは &lt;code&gt;'green'&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="99525db85549ac64cdd5cb889d480f43dfc76de6" translate="yes" xml:space="preserve">
          <source>Determines the accessibility of a file.</source>
          <target state="translated">ファイルのアクセシビリティを決定します。</target>
        </trans-unit>
        <trans-unit id="0ac6e93aa78866241a9a1ea97a746deee7e73a8e" translate="yes" xml:space="preserve">
          <source>Determines typemaps, xsubpp version, prototype behaviour.</source>
          <target state="translated">タイプマップ、xsubppのバージョン、プロトタイプの動作を決定します。</target>
        </trans-unit>
        <trans-unit id="f07a1f637abae6218e8a7802badc87cffd6df457" translate="yes" xml:space="preserve">
          <source>Determines whether you do the left &lt;b&gt;operator&lt;/b&gt; first or the right &lt;b&gt;operator&lt;/b&gt; first when you have &amp;ldquo;A &lt;b&gt;operator&lt;/b&gt; B &lt;b&gt;operator&lt;/b&gt; C&amp;rdquo;, and the two operators are of the same precedence. Operators like &lt;code&gt;+&lt;/code&gt; are left associative, while operators like &lt;code&gt;**&lt;/code&gt; are right associative. See Camel chapter 3, &amp;ldquo;Unary and Binary Operators&amp;rdquo; for a list of operators and their associativity.</source>
          <target state="translated">「A &lt;b&gt;演算子&lt;/b&gt; B &lt;b&gt;演算子&lt;/b&gt; C」があり、2つの演算子の優先順位が同じ場合に、左&lt;b&gt;演算子を&lt;/b&gt;最初に実行するか、右&lt;b&gt;演算子を&lt;/b&gt;最初に実行するかを決定します。 &lt;code&gt;+&lt;/code&gt; のような演算子は左結合ですが、 &lt;code&gt;**&lt;/code&gt; のような演算子は右結合です。演算子とその関連性のリストについては、Camelの第3章「単項演算子と二項演算子」を参照してください。&lt;b&gt;&lt;/b&gt;&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="d7f6e99a2b6560d949ac39cd5f548b880a73d13b" translate="yes" xml:space="preserve">
          <source>Determines whether you have delete access to a file. If you do, &lt;code&gt;candelete&lt;/code&gt; returns true. If you don't, or its argument isn't a legal file specification, &lt;code&gt;candelete&lt;/code&gt; returns FALSE. Unlike other file tests, the argument to &lt;code&gt;candelete&lt;/code&gt; must be a file name (not a FileHandle), and, since it's an XSUB, it's a list operator, so you need to be careful about parentheses. Both of these restrictions may be removed in the future if the functionality of &lt;code&gt;candelete&lt;/code&gt; becomes part of the Perl core.</source>
          <target state="translated">ファイルへの削除アクセス権があるかどうかを判別します。そうした場合、 &lt;code&gt;candelete&lt;/code&gt; はtrueを返します。そうでない場合、またはその引数が正当なファイル仕様でない場合、 &lt;code&gt;candelete&lt;/code&gt; はFALSEを返します。他のファイルテストとは異なり、 &lt;code&gt;candelete&lt;/code&gt; の引数は（FileHandleではなく）ファイル名である必要があります。また、XSUBであるため、リスト演算子であるため、括弧に注意する必要があります。 &lt;code&gt;candelete&lt;/code&gt; の機能がPerlコアの一部になった場合、これらの制限は両方とも将来削除される可能性があります。</target>
        </trans-unit>
        <trans-unit id="d1c8bafa598045542a6e12bdae08698fa56ba1b8" translate="yes" xml:space="preserve">
          <source>Determines which of the sets of installation directories to choose: perl, site or vendor. Defaults to site.</source>
          <target state="translated">perl、サイト、ベンダーのいずれのインストールディレクトリを選択するかを決定します。デフォルトは site です。</target>
        </trans-unit>
        <trans-unit id="bba5b2e65a661d27394fb8c061d3d51455420899" translate="yes" xml:space="preserve">
          <source>Determining the Context</source>
          <target state="translated">コンテキストの決定</target>
        </trans-unit>
        <trans-unit id="3ecab9eb72cc6dfc1bcb8e4baecb3e17d8edcf33" translate="yes" xml:space="preserve">
          <source>Devel.U</source>
          <target state="translated">Devel.U</target>
        </trans-unit>
        <trans-unit id="59c2da97f18e93336ce8461cd4d06e13e3e11849" translate="yes" xml:space="preserve">
          <source>Devel::CheckOS</source>
          <target state="translated">Devel::CheckOS</target>
        </trans-unit>
        <trans-unit id="e49017f730b71ed8f2cb4f3cd8915c7e412fb169" translate="yes" xml:space="preserve">
          <source>Devel::Cover</source>
          <target state="translated">Devel::Cover</target>
        </trans-unit>
        <trans-unit id="767fa2675d40ddff8bd54cd3a27f726736df9a77" translate="yes" xml:space="preserve">
          <source>Devel::Cover does not support threads. CAN_THREAD will return false if Devel::Cover is loaded before the check is first run.</source>
          <target state="translated">Devel::Cover はスレッドをサポートしていません。CAN_THREAD は、チェックが最初に実行される前に Devel::Cover がロードされた場合、false を返します。</target>
        </trans-unit>
        <trans-unit id="d8c39aea2543b8523b0f33dbb117b8a3d9253fb8" translate="yes" xml:space="preserve">
          <source>Devel::DProf</source>
          <target state="translated">Devel::DProf</target>
        </trans-unit>
        <trans-unit id="2fe8a2869dcf27e5ec059c3e7e5772ec9be58658" translate="yes" xml:space="preserve">
          <source>Devel::DTrace::Provider</source>
          <target state="translated">Devel::DTrace::Provider</target>
        </trans-unit>
        <trans-unit id="ccde7e8b696b5ea06bba6178d203f16332d8acef" translate="yes" xml:space="preserve">
          <source>Devel::FastProf</source>
          <target state="translated">Devel::FastProf</target>
        </trans-unit>
        <trans-unit id="11215cfa0c659675e0e4ea40e3abc5e714feee1f" translate="yes" xml:space="preserve">
          <source>Devel::NYTProf</source>
          <target state="translated">Devel::NYTProf</target>
        </trans-unit>
        <trans-unit id="93fefc93ea4e5ce72e46483e30bdcdb72752bc35" translate="yes" xml:space="preserve">
          <source>Devel::PPPort</source>
          <target state="translated">Devel::PPPort</target>
        </trans-unit>
        <trans-unit id="7ffae19dcafff8088943ef185c49a680d59a15ac" translate="yes" xml:space="preserve">
          <source>Devel::PPPort - Perl/Pollution/Portability</source>
          <target state="translated">Devel::PPPort-Perl/ポーリング/移植性</target>
        </trans-unit>
        <trans-unit id="3921057b50b0060084d8d65b7996993cf1ed9750" translate="yes" xml:space="preserve">
          <source>Devel::Peek</source>
          <target state="translated">Devel::Peek</target>
        </trans-unit>
        <trans-unit id="e14a96c568c781af1b5e318bd4b44427491f52d9" translate="yes" xml:space="preserve">
          <source>Devel::Peek - A data debugging tool for the XS programmer</source>
          <target state="translated">Devel::Peek-XS プログラマのためのデータデバッグツール</target>
        </trans-unit>
        <trans-unit id="591a540c3f692dc8379dc38f7e57b50c1e10292e" translate="yes" xml:space="preserve">
          <source>Devel::Peek contains functions which allows raw Perl datatypes to be manipulated from a Perl script. This is used by those who do XS programming to check that the data they are sending from C to Perl looks as they think it should look. The trick, then, is to know what the raw datatype is supposed to look like when it gets to Perl. This document offers some tips and hints to describe good and bad raw data.</source>
          <target state="translated">Devel::Peek には、Perl スクリプトから生の Perl データ型を操作するための関数が含まれています。これは、XSプログラミングを行う人が、CからPerlに送信するデータが、自分の考えた通りに見えるかどうかをチェックするために使用されます。ここでのコツは、生のデータ型がPerlに送られてきたときにどのように見えるかを知ることです。このドキュメントでは、良い生データと悪い生データを記述するためのヒントを提供しています。</target>
        </trans-unit>
        <trans-unit id="db1f06d5f74de3011e9cc4bc49d43cef041da2cf" translate="yes" xml:space="preserve">
          <source>Devel::Peek supplies a &lt;code&gt;Dump()&lt;/code&gt; function which can dump a raw Perl datatype, and &lt;code&gt;mstat(&quot;marker&quot;)&lt;/code&gt; function to report on memory usage (if perl is compiled with corresponding option). The function DeadCode() provides statistics on the data &quot;frozen&quot; into inactive &lt;code&gt;CV&lt;/code&gt; . Devel::Peek also supplies &lt;code&gt;SvREFCNT()&lt;/code&gt; which can query reference counts on SVs. This document will take a passive, and safe, approach to data debugging and for that it will describe only the &lt;code&gt;Dump()&lt;/code&gt; function.</source>
          <target state="translated">Devel :: Peekは、生のPerlデータ型をダンプできる &lt;code&gt;Dump()&lt;/code&gt; 関数と、メモリ使用量を報告する &lt;code&gt;mstat(&quot;marker&quot;)&lt;/code&gt; 関数を提供します（perlが対応するオプションでコンパイルされている場合）。DeadCode（）関数は、非アクティブな &lt;code&gt;CV&lt;/code&gt; に「凍結」されたデータの統計を提供します。Devel :: Peek は、SVの参照カウントを照会できる &lt;code&gt;SvREFCNT()&lt;/code&gt; も提供します。このドキュメントでは、データのデバッグに受動的で安全なアプローチを採用し、そのために &lt;code&gt;Dump()&lt;/code&gt; 関数のみを説明します。</target>
        </trans-unit>
        <trans-unit id="7f064d002875b523b7ebc7469674f03083935f00" translate="yes" xml:space="preserve">
          <source>Devel::Peek supplies a &lt;code&gt;Dump()&lt;/code&gt; function which can dump a raw Perl datatype, and &lt;code&gt;mstat(&quot;marker&quot;)&lt;/code&gt; function to report on memory usage (if perl is compiled with corresponding option). The function DeadCode() provides statistics on the data &quot;frozen&quot; into inactive &lt;code&gt;CV&lt;/code&gt;. Devel::Peek also supplies &lt;code&gt;SvREFCNT()&lt;/code&gt; which can query reference counts on SVs. This document will take a passive, and safe, approach to data debugging and for that it will describe only the &lt;code&gt;Dump()&lt;/code&gt; function.</source>
          <target state="translated">Devel :: Peekは、生のPerlデータ型をダンプできる &lt;code&gt;Dump()&lt;/code&gt; 関数と、メモリ使用量を報告する &lt;code&gt;mstat(&quot;marker&quot;)&lt;/code&gt; 関数を提供します（perlが対応するオプションでコンパイルされている場合）。関数DeadCode（）は、非アクティブな &lt;code&gt;CV&lt;/code&gt; に「凍結」されたデータに関する統計を提供します。Devel :: Peekは、SVの参照カウントを照会できる &lt;code&gt;SvREFCNT()&lt;/code&gt; も提供します。このドキュメントでは、データデバッグに対して受動的で安全なアプローチを採用し、そのために &lt;code&gt;Dump()&lt;/code&gt; 関数についてのみ説明します。</target>
        </trans-unit>
        <trans-unit id="dd06cacef5c6992e80eae6f0b88092dd28458a5a" translate="yes" xml:space="preserve">
          <source>Devel::Profiler</source>
          <target state="translated">Devel::Profiler</target>
        </trans-unit>
        <trans-unit id="4b6535e01c52786d4e3f3ca2b00ca3272e9f6d30" translate="yes" xml:space="preserve">
          <source>Devel::SelfStubber</source>
          <target state="translated">Devel::SelfStubber</target>
        </trans-unit>
        <trans-unit id="b5469167c418142a031a1a19dcd7b0ac06472cae" translate="yes" xml:space="preserve">
          <source>Devel::SelfStubber - generate stubs for a SelfLoading module</source>
          <target state="translated">Devel::SelfStubber-SelfLoading モジュール用のスタブを生成する</target>
        </trans-unit>
        <trans-unit id="c12151c156a6bb57f46bf2cfabec163c1bfc0f60" translate="yes" xml:space="preserve">
          <source>Devel::SelfStubber prints the stubs you need to put in the module before the __DATA__ token (or you can get it to print the entire module with stubs correctly placed). The stubs ensure that if a method is called, it will get loaded. They are needed specifically for inherited autoloaded methods.</source>
          <target state="translated">Devel::SelfStubber は、_DATA__トークンの前にモジュールに入れる必要のあるスタブを表示します (あるいは、スタブを正しく配置してモジュール全体を表示するようにすることもできます)。スタブは、メソッドが呼ばれたときにロードされることを保証します。スタブは、特にオートロードされたメソッドを継承するために必要です。</target>
        </trans-unit>
        <trans-unit id="842dcd37ebf74b06348dc557d220529763bf8eb5" translate="yes" xml:space="preserve">
          <source>Devel::SmallProf</source>
          <target state="translated">Devel::SmallProf</target>
        </trans-unit>
        <trans-unit id="4c17aadf5117487aab7bc50cbf056caf3977cc31" translate="yes" xml:space="preserve">
          <source>Development</source>
          <target state="translated">Development</target>
        </trans-unit>
        <trans-unit id="d9ffe88162ace37c72e458ee67a70fb3d18d4395" translate="yes" xml:space="preserve">
          <source>Development Support</source>
          <target state="translated">開発支援</target>
        </trans-unit>
        <trans-unit id="f0c7babf29efe97f8e794e98c4e99a03a18a4c41" translate="yes" xml:space="preserve">
          <source>Device major number in case of a special file</source>
          <target state="translated">特殊ファイルの場合のデバイスメジャー番号</target>
        </trans-unit>
        <trans-unit id="2c941665c705f296265e4a2b31a60000a96baced" translate="yes" xml:space="preserve">
          <source>Device minor number in case of a special file</source>
          <target state="translated">特殊ファイルの場合のデバイスマイナー番号</target>
        </trans-unit>
        <trans-unit id="5c1f3191912a5ab66456afca3234971ddd741a55" translate="yes" xml:space="preserve">
          <source>Device::Chip</source>
          <target state="translated">Device::Chip</target>
        </trans-unit>
        <trans-unit id="dc9aaa54b0265e3705c4951395ee7c74e293de91" translate="yes" xml:space="preserve">
          <source>DeviceIoControl</source>
          <target state="translated">DeviceIoControl</target>
        </trans-unit>
        <trans-unit id="a114943d70de3b8f77895975f05368012d36312b" translate="yes" xml:space="preserve">
          <source>Diag event type</source>
          <target state="translated">ダイアグイベントタイプ</target>
        </trans-unit>
        <trans-unit id="ee7b51236ed970aee0667e1f1fe4a778ffb14074" translate="yes" xml:space="preserve">
          <source>Diagnostic messages derive from the</source>
          <target state="translated">診断メッセージは</target>
        </trans-unit>
        <trans-unit id="3af2279f9e306acd0a4644e2b0f2f48a1e06d8d9" translate="yes" xml:space="preserve">
          <source>Diagnostics</source>
          <target state="translated">Diagnostics</target>
        </trans-unit>
        <trans-unit id="6bfccdfc7a2fd4625674e0ec4e420eb2a45734b4" translate="yes" xml:space="preserve">
          <source>Diagnostics messages can be simple strings, data structures, or instances of &lt;a href=&quot;Test2::EventFacet::Info::Table&quot;&gt;Test2::EventFacet::Info::Table&lt;/a&gt; (which are converted inline into the &lt;a href=&quot;Test2::EventFacet::Info&quot;&gt;Test2::EventFacet::Info&lt;/a&gt; structure).</source>
          <target state="translated">診断メッセージは、単純な文字列、データ構造、または&lt;a href=&quot;Test2::EventFacet::Info::Table&quot;&gt;Test2 :: EventFacet :: Info :: Tableの&lt;/a&gt;インスタンス（インラインで&lt;a href=&quot;Test2::EventFacet::Info&quot;&gt;Test2 :: EventFacet :: Info&lt;/a&gt;構造に変換されます）にすることができます。</target>
        </trans-unit>
        <trans-unit id="7384d267d08fd27a3839e35790e816a0d2670114" translate="yes" xml:space="preserve">
          <source>Diagnostics messages, typically rendered to STDERR.</source>
          <target state="translated">診断メッセージは、通常 STDERR にレンダリングされます。</target>
        </trans-unit>
        <trans-unit id="e12e989f1fa699061a1906fb84c40da51f94d183" translate="yes" xml:space="preserve">
          <source>Diagnostics: - &quot;Illegal state option: %s&quot;</source>
          <target state="translated">診断:-&quot;不正な状態オプション:%s&quot;</target>
        </trans-unit>
        <trans-unit id="e17f7baf040772254cb855eb21dd15b046cdb8d1" translate="yes" xml:space="preserve">
          <source>Did not produce a valid header</source>
          <target state="translated">有効なヘッダが生成されませんでした。</target>
        </trans-unit>
        <trans-unit id="d35fa307cb8f3def28846755bdcd31b74832d8c4" translate="yes" xml:space="preserve">
          <source>Did the test pass?</source>
          <target state="translated">試験は合格しましたか?</target>
        </trans-unit>
        <trans-unit id="f527cf87d4af2700906e25b7adad32b0530808f8" translate="yes" xml:space="preserve">
          <source>Did the test really pass? That is, did the pass come from Test::Builder-&amp;gt;ok() or did it pass because it was a TODO test?</source>
          <target state="translated">テストは本当に合格しましたか？つまり、合格はTest :: Builder-&amp;gt; ok（）からのものですか、それともTODOテストであるため合格ですか？</target>
        </trans-unit>
        <trans-unit id="a6eede6bc5088117b1ea81e74f270fd854b6d4d3" translate="yes" xml:space="preserve">
          <source>Did we mention that you should definitely consider using the &lt;b&gt;use &lt;a href=&quot;warnings&quot;&gt;warnings&lt;/a&gt;&lt;/b&gt; pragma?</source>
          <target state="translated">&lt;b&gt;使用&lt;a href=&quot;warnings&quot;&gt;警告&lt;/a&gt;&lt;/b&gt;プラグマの&lt;b&gt;使用を&lt;/b&gt;確実に検討する必要があることを述べましたか？</target>
        </trans-unit>
        <trans-unit id="24aeba6cea55e3491e6f6e028d622f79e9da9608" translate="yes" xml:space="preserve">
          <source>Did we mention that you should definitely consider using the &lt;b&gt;use warnings&lt;/b&gt; pragma?</source>
          <target state="translated">&lt;b&gt;use warnings&lt;/b&gt;プラグマの&lt;b&gt;使用を&lt;/b&gt;必ず検討する必要があると私たちは言及しましたか？</target>
        </trans-unit>
        <trans-unit id="9b6cbb2dd2135deb31b16770182a2ec8c70c6f29" translate="yes" xml:space="preserve">
          <source>Did you really want to know? :-) For more gory details on getting regular expressions to work, have a look at &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;, &lt;a href=&quot;perlretut&quot;&gt;perlretut&lt;/a&gt;, and to decode the mysterious labels (BOL and CURLYN, etc. above), see &lt;a href=&quot;perldebguts&quot;&gt;perldebguts&lt;/a&gt;.</source>
          <target state="translated">あなたは本当に知りたかったのですか？:-)正規表現を機能させるための詳細については、&lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;、&lt;a href=&quot;perlretut&quot;&gt;perlretutを調べ&lt;/a&gt;、神秘的なラベル（上記のBOLやCURLYNなど）をデコードしてください&lt;a href=&quot;perldebguts&quot;&gt;。perldebgutsを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="e94a1367bdde0a3b30f5210e296be7c066548b1d" translate="yes" xml:space="preserve">
          <source>Did you run your programs with &lt;code&gt;-w&lt;/code&gt; switch? See &lt;a href=&quot;#Starting-OS%2F2-%28and-DOS%29-programs-under-Perl&quot;&gt;&quot;Starting OS/2 (and DOS) programs under Perl&quot;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;-w&lt;/code&gt; スイッチを使用してプログラムを実行しましたか？&lt;a href=&quot;#Starting-OS%2F2-%28and-DOS%29-programs-under-Perl&quot;&gt;「PerlでのOS / 2（およびDOS）プログラムの起動」を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="c365b19f02fa9700446bb2dfae00cddef737c1ed" translate="yes" xml:space="preserve">
          <source>Did you run your programs with &lt;code&gt;-w&lt;/code&gt; switch? See &lt;a href=&quot;http://search.cpan.org/perldoc/Starting%20OS#2-(and-DOS)-programs-under-Perl&quot;&gt;2 (and DOS) programs under Perl in Starting OS&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;-w&lt;/code&gt; スイッチを使用してプログラムを実行しましたか？「&lt;a href=&quot;http://search.cpan.org/perldoc/Starting%20OS#2-(and-DOS)-programs-under-Perl&quot;&gt;OSの起動」のPerlにある2（およびDOS）プログラムを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="2d9260877849ca2a1a5841624da6c266167f8e3c" translate="yes" xml:space="preserve">
          <source>Did you use &lt;a href=&quot;ExtUtils::Embed&quot;&gt;ExtUtils::Embed&lt;/a&gt;?</source>
          <target state="translated">&lt;a href=&quot;ExtUtils::Embed&quot;&gt;ExtUtils :: Embed&lt;/a&gt;を使用しましたか？</target>
        </trans-unit>
        <trans-unit id="c44a0b6cfa2e8e8711c5a9b4665955570db35afc" translate="yes" xml:space="preserve">
          <source>Didn't anyone ever tell you web-page hit counters were useless? They don't count number of hits, they're a waste of time, and they serve only to stroke the writer's vanity. It's better to pick a random number; they're more realistic.</source>
          <target state="translated">ウェブページのヒットカウンタは役に立たないと誰も言わなかったのか?彼らはヒット数をカウントしていないし、時間の無駄だし、ライターの虚栄心をかきたてるだけだ。それは乱数を選ぶことをお勧めします;彼らはより現実的だ。</target>
        </trans-unit>
        <trans-unit id="de35dca213966232628ded8b499a88baf25eec19" translate="yes" xml:space="preserve">
          <source>Die on HUP, INT, PIPE or TERM, except don't change the behavior for signals which are already trapped or ignored:</source>
          <target state="translated">HUP,INT,PIPE,TERMでは、既にトラップされているシグナルや無視されているシグナルの動作を変更しないことを除いて、ダイ。</target>
        </trans-unit>
        <trans-unit id="0b65dd725b89443cd082d2b1fbb5c871c07b811a" translate="yes" xml:space="preserve">
          <source>Die on HUP, INT, PIPE or TERM:</source>
          <target state="translated">HUP、INT、PIPE、TERMで死ぬ。</target>
        </trans-unit>
        <trans-unit id="7370d007d2f0750cfcb06f3ae1a311fa8ce10185" translate="yes" xml:space="preserve">
          <source>Die on INT or QUIT:</source>
          <target state="translated">INTかQUITで死ぬ。</target>
        </trans-unit>
        <trans-unit id="de3e3f090fef16d61db17c82fcb979d37ca68a0d" translate="yes" xml:space="preserve">
          <source>Die on receipt one of an of the &lt;b&gt;normal-signals&lt;/b&gt; which is currently &lt;b&gt;untrapped&lt;/b&gt;, provide a stack trace on receipt of &lt;b&gt;any&lt;/b&gt; of the &lt;b&gt;error-signals&lt;/b&gt;:</source>
          <target state="translated">現在&lt;b&gt;トラップされて&lt;/b&gt;いない&lt;b&gt;通常の信号の&lt;/b&gt; 1つを受信&lt;b&gt;する&lt;/b&gt;と、&lt;b&gt;エラー信号の&lt;/b&gt;受信時にスタックトレースが提供され&lt;b&gt;ます&lt;/b&gt;。&lt;b&gt;&lt;/b&gt;&lt;b&gt;&lt;/b&gt;&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="68316444b99c6ba68313bede5aa8603526904561" translate="yes" xml:space="preserve">
          <source>Died</source>
          <target state="translated">Died</target>
        </trans-unit>
        <trans-unit id="ba441dab8e607c94b508525a17abee026d45b519" translate="yes" xml:space="preserve">
          <source>Dies if something fails. Does not return anything useful.</source>
          <target state="translated">何かに失敗すると死ぬ。役に立つものは何も返さない。</target>
        </trans-unit>
        <trans-unit id="f81677da87b912ca4cbc2adcd260fa40bc3569e4" translate="yes" xml:space="preserve">
          <source>Dies on invalid arguments.</source>
          <target state="translated">無効な議論で死ぬ。</target>
        </trans-unit>
        <trans-unit id="ff49095a95255fd00fd15d75e6567dd8a12a4746" translate="yes" xml:space="preserve">
          <source>Dies with &quot;QUITing...&quot; if WM_QUIT message is obtained.</source>
          <target state="translated">WM_QUITメッセージを取得すると、&quot;QUITing...&quot;で死亡します。</target>
        </trans-unit>
        <trans-unit id="4df44d1ca612254d8b6146ed208bbeb09ddfe82a" translate="yes" xml:space="preserve">
          <source>Dies with &lt;code&gt;@message&lt;/code&gt; but the message will appear to come from the point where the original test function was called (&lt;code&gt;$tb-&amp;gt;caller&lt;/code&gt; ).</source>
          <target state="translated">&lt;code&gt;@message&lt;/code&gt; で死にますが、メッセージは、元のテスト関数が呼び出されたポイント（ &lt;code&gt;$tb-&amp;gt;caller&lt;/code&gt; ）から送信されたように見えます。</target>
        </trans-unit>
        <trans-unit id="d42c8ec5b5359bb10d75d03dea68cbed9c90a9ea" translate="yes" xml:space="preserve">
          <source>Dies with &lt;code&gt;@message&lt;/code&gt; but the message will appear to come from the point where the original test function was called (&lt;code&gt;$tb-&amp;gt;caller&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;@message&lt;/code&gt; で終了しますが、メッセージは元のテスト関数が呼び出されたポイント（ &lt;code&gt;$tb-&amp;gt;caller&lt;/code&gt; ）から送信されたように見えます。</target>
        </trans-unit>
        <trans-unit id="eb0b600e20a7af68665f367d76b7faa7b80ba746" translate="yes" xml:space="preserve">
          <source>Difference between &lt;code&gt;load&lt;/code&gt; and &lt;code&gt;autoload&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;load&lt;/code&gt; と &lt;code&gt;autoload&lt;/code&gt; ロードの違い</target>
        </trans-unit>
        <trans-unit id="1f4478706dbd396a43de3090b3f058233138f6af" translate="yes" xml:space="preserve">
          <source>Difference between load and autoload</source>
          <target state="translated">ロードとオートロードの違い</target>
        </trans-unit>
        <trans-unit id="5abf26e6f18ac0caefbfb650bcbf55d767c0f719" translate="yes" xml:space="preserve">
          <source>Difference of</source>
          <target state="translated">差異</target>
        </trans-unit>
        <trans-unit id="af858e1241391fd569b50d644bb00507f74f4034" translate="yes" xml:space="preserve">
          <source>Differences</source>
          <target state="translated">Differences</target>
        </trans-unit>
        <trans-unit id="38024e12015fb8cbceae437a2c486569781a63ed" translate="yes" xml:space="preserve">
          <source>Differences from Perl 6</source>
          <target state="translated">Perl 6との違い</target>
        </trans-unit>
        <trans-unit id="e732df46410c2ef1dfdc6790f4ee2fc04278db02" translate="yes" xml:space="preserve">
          <source>Differences from Raku</source>
          <target state="translated">楽との違い</target>
        </trans-unit>
        <trans-unit id="331cb030b664a4d11f924279069f94d488d3faa3" translate="yes" xml:space="preserve">
          <source>Different CPUs store integers and floating point numbers in different orders (called</source>
          <target state="translated">異なるCPUは、整数と浮動小数点数を異なる順序で格納します(これを</target>
        </trans-unit>
        <trans-unit id="a929821b5e04175b03d1cd12d11aa732114cf34b" translate="yes" xml:space="preserve">
          <source>Different Delimiters</source>
          <target state="translated">異なるデリミタ</target>
        </trans-unit>
        <trans-unit id="a95050ad9d7abe4a623380560a27bb068b344215" translate="yes" xml:space="preserve">
          <source>Different classes of media that a device can support. Used in the &lt;code&gt;$uMediaType&lt;/code&gt; field of a &lt;code&gt;DISK_GEOMETRY&lt;/code&gt; structure.</source>
          <target state="translated">デバイスがサポートできるさまざまなクラスのメディア。 &lt;code&gt;DISK_GEOMETRY&lt;/code&gt; 構造体の &lt;code&gt;$uMediaType&lt;/code&gt; フィールドで使用されます。</target>
        </trans-unit>
        <trans-unit id="2bda7000c880740a37cbf94090331ac6cabf1bab" translate="yes" xml:space="preserve">
          <source>Different definitions of Perl are given in &lt;a href=&quot;perl&quot;&gt;perl&lt;/a&gt;, &lt;a href=&quot;perlfaq1&quot;&gt;perlfaq1&lt;/a&gt; and no doubt other places. From this we can determine that Perl is different things to different people, but that lots of people think it's at least worth writing about.</source>
          <target state="translated">Perlのさまざまな定義が&lt;a href=&quot;perl&quot;&gt;perl&lt;/a&gt;、&lt;a href=&quot;perlfaq1&quot;&gt;perlfaq1&lt;/a&gt;、および他の場所で指定されていることは間違いありません。これから、Perlは人によって異なるものであると判断できますが、多くの人は、Perlは少なくとも書く価値があると考えています。</target>
        </trans-unit>
        <trans-unit id="7dccaaf84bf4def2fd87e2d3e385599fbd55f83d" translate="yes" xml:space="preserve">
          <source>Different escape characters can be specified for different delimiters. For example, to specify that '/' is the escape for single quotes and '%' is the escape for double quotes:</source>
          <target state="translated">異なるデリミタに対しては、異なるエスケープ文字を指定することができます。例えば、'/' はシングルクォーテーションのエスケープで、'%' はダブルクォーテーションのエスケープであることを指定します。</target>
        </trans-unit>
        <trans-unit id="f9a49cb812bf417ffcc0cc6f39c98fe84fa2ebdf" translate="yes" xml:space="preserve">
          <source>Different handles can have different buffering schemes. The &quot;top&quot; layer could be the &quot;mmap&quot; layer if reading disk files was quicker using &lt;code&gt;mmap&lt;/code&gt; than &lt;code&gt;&lt;a href=&quot;functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt;. An &quot;unbuffered&quot; stream can be implemented simply by not having a buffer layer.</source>
          <target state="translated">ハンドルごとに異なるバッファリングスキームを使用できます。読んディスクファイルを迅速に使用していた場合は、「トップ」層は、「mmapの」層とすることができ &lt;code&gt;mmap&lt;/code&gt; より &lt;code&gt;&lt;a href=&quot;functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt; 。「バッファなし」ストリームは、バッファ層を持たないことで簡単に実装できます。</target>
        </trans-unit>
        <trans-unit id="012a7e1711fbe2519f8ad076d7828befc23dbd11" translate="yes" xml:space="preserve">
          <source>Different handles can have different buffering schemes. The &quot;top&quot; layer could be the &quot;mmap&quot; layer if reading disk files was quicker using &lt;code&gt;mmap&lt;/code&gt; than &lt;code&gt;read&lt;/code&gt;. An &quot;unbuffered&quot; stream can be implemented simply by not having a buffer layer.</source>
          <target state="translated">ハンドルが異なれば、バッファリングスキームも異なります。ディスクファイルの &lt;code&gt;read&lt;/code&gt; よりも &lt;code&gt;mmap&lt;/code&gt; を使用した方が速い場合、「最上位」レイヤーは「mmap」レイヤーである可能性があります。「バッファリングされていない」ストリームは、バッファ層がないだけで実装できます。</target>
        </trans-unit>
        <trans-unit id="ee681ba258c7b2da3e8972edb7ba868618d14b60" translate="yes" xml:space="preserve">
          <source>Different implementations of threads</source>
          <target state="translated">スレッドの異なる実装</target>
        </trans-unit>
        <trans-unit id="e3379dfb99801372d7cddbcebddb248079f56470" translate="yes" xml:space="preserve">
          <source>Different low-level libraries use different formats to store the numbers. However, you should &lt;b&gt;NOT&lt;/b&gt; depend on the number having a specific format internally.</source>
          <target state="translated">さまざまな低レベルライブラリは、さまざまな形式を使用して数値を格納します。ただし、内部的に特定の形式を持つ数値に依存し&lt;b&gt;ない&lt;/b&gt;でください。</target>
        </trans-unit>
        <trans-unit id="968ef79ccdd769ce74761479fe855c0adf257d6a" translate="yes" xml:space="preserve">
          <source>Different packages may implement different levels of debug but a non-zero value results in copies of all commands and responses also being sent to STDERR.</source>
          <target state="translated">異なるパッケージでは異なるレベルのデバッグが実装されているかもしれませんが、0 以外の値を指定すると、すべてのコマンドとレスポンスのコピーが STDERR にも送信されます。</target>
        </trans-unit>
        <trans-unit id="8f55cf4436cb1eaf5bfcf390f661558255ea8243" translate="yes" xml:space="preserve">
          <source>Differing widths can cause truncation even between platforms of equal endianness. The platform of shorter width loses the upper parts of the number. There is no good solution for this problem except to avoid transferring or storing raw binary numbers.</source>
          <target state="translated">幅が異なると、同じエンディアンの台同士でも切り捨てが発生することがあります。幅が短い方のプラットフォームでは、数値の上位部分が失われてしまいます。この問題に対する良い解決策は、生の2進数を転送したり保存したりすることを避ける以外にはありません。</target>
        </trans-unit>
        <trans-unit id="0c96be1511684098b8e0937528ae9f73aed12615" translate="yes" xml:space="preserve">
          <source>Differs slightly from &lt;code&gt;socketpair&lt;/code&gt; in &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt; in that the argument list is a bit simpler.</source>
          <target state="translated">少し異なり &lt;code&gt;socketpair&lt;/code&gt; で&lt;a href=&quot;perlfunc&quot;&gt;はperlfunc&lt;/a&gt;引数リストは少し単純であることを特徴とします。</target>
        </trans-unit>
        <trans-unit id="3e4999085ccaf90bf99a08a58eb299f30d409174" translate="yes" xml:space="preserve">
          <source>Dig into a bunch of modules to see how they're written. I'd suggest starting with &lt;a href=&quot;Text::Tabs&quot;&gt;Text::Tabs&lt;/a&gt;, since it's in the standard library and is nice and simple, and then looking at something a little more complex like &lt;a href=&quot;File::Copy&quot;&gt;File::Copy&lt;/a&gt;. For object oriented code, &lt;a href=&quot;WWW::Mechanize&quot;&gt;WWW::Mechanize&lt;/a&gt; or the &lt;code&gt;Email::*&lt;/code&gt; modules provide some good examples.</source>
          <target state="translated">たくさんのモジュールを掘り下げて、それらがどのように書かれているかを確認してください。&lt;a href=&quot;Text::Tabs&quot;&gt;Text :: Tabs&lt;/a&gt;から始めることをお勧めします。これは、標準ライブラリにあり、素晴らしくシンプルなので、&lt;a href=&quot;File::Copy&quot;&gt;File :: Copyの&lt;/a&gt;ようなもう少し複雑なものを見ていきます。オブジェクト指向コードの場合、&lt;a href=&quot;WWW::Mechanize&quot;&gt;WWW :: Mechanize&lt;/a&gt;または &lt;code&gt;Email::*&lt;/code&gt; モジュールがいくつかの良い例を提供します。</target>
        </trans-unit>
        <trans-unit id="248216e8bd5493fa776c21a71aab73557a333ad5" translate="yes" xml:space="preserve">
          <source>Dig into a bunch of modules to see how they're written. I'd suggest starting with &lt;a href=&quot;text/tabs&quot;&gt;Text::Tabs&lt;/a&gt;, since it's in the standard library and is nice and simple, and then looking at something a little more complex like &lt;a href=&quot;file/copy&quot;&gt;File::Copy&lt;/a&gt;. For object oriented code, &lt;code&gt;WWW::Mechanize&lt;/code&gt; or the &lt;code&gt;Email::*&lt;/code&gt; modules provide some good examples.</source>
          <target state="translated">たくさんのモジュールを調べて、それらがどのように記述されているかを確認してください。&lt;a href=&quot;text/tabs&quot;&gt;Text :: Tabs&lt;/a&gt;から始めることをお勧めします。標準ライブラリにあり、見た目もシンプルで、&lt;a href=&quot;file/copy&quot;&gt;File :: Copyの&lt;/a&gt;ようなもう少し複雑なものを探しているからです。オブジェクト指向コードの場合、 &lt;code&gt;WWW::Mechanize&lt;/code&gt; または &lt;code&gt;Email::*&lt;/code&gt; モジュールが良い例です。</target>
        </trans-unit>
        <trans-unit id="47fdd58bee4dc86df2b978107102a22b9c44345b" translate="yes" xml:space="preserve">
          <source>Digest</source>
          <target state="translated">Digest</target>
        </trans-unit>
        <trans-unit id="3bd067b7b9ba0e3842954b342b6e04b9508a77ac" translate="yes" xml:space="preserve">
          <source>Digest - Modules that calculate message digests</source>
          <target state="translated">Digest-メッセージのダイジェストを計算するモジュール</target>
        </trans-unit>
        <trans-unit id="4c9cbdb7c115f81acd2c0edba69fb8ccce5eb45e" translate="yes" xml:space="preserve">
          <source>Digest base class</source>
          <target state="translated">ダイジェスト基底クラス</target>
        </trans-unit>
        <trans-unit id="3cd23511cf79299d4bb6923e10fe169a355c096e" translate="yes" xml:space="preserve">
          <source>Digest implementations might want to inherit from this class to get this implementations of the alternative</source>
          <target state="translated">ダイジェストの実装は、このクラスを継承して代替の</target>
        </trans-unit>
        <trans-unit id="f2dd6f444a52ab6eb8232c6d9cf3d9b6b63eeb3b" translate="yes" xml:space="preserve">
          <source>Digest speed</source>
          <target state="translated">ダイジェスト速度</target>
        </trans-unit>
        <trans-unit id="3263622a2f40559c02778432d6fee146399b6225" translate="yes" xml:space="preserve">
          <source>Digest::MD5</source>
          <target state="translated">Digest::MD5</target>
        </trans-unit>
        <trans-unit id="cc981cf57197ab4f6949f081dbfc7ac803760c7a" translate="yes" xml:space="preserve">
          <source>Digest::MD5 - Perl interface to the MD5 Algorithm</source>
          <target state="translated">Digest::MD5-MD5 アルゴリズムへの Perl インターフェイス</target>
        </trans-unit>
        <trans-unit id="10a5bb250c6cf1bbf42816d48c87400d9e093658" translate="yes" xml:space="preserve">
          <source>Digest::SHA</source>
          <target state="translated">Digest::SHA</target>
        </trans-unit>
        <trans-unit id="b4c92820a2ed37105ded93f12e77864cbec95f5b" translate="yes" xml:space="preserve">
          <source>Digest::SHA - Perl extension for SHA-1/224/256/384/512</source>
          <target state="translated">Digest::SHA-SHA-1/224/256/384/512 用の Perl 拡張モジュール</target>
        </trans-unit>
        <trans-unit id="af0465342315c6f4795df27a00078fb3582cb96c" translate="yes" xml:space="preserve">
          <source>Digest::SHA is a complete implementation of the NIST Secure Hash Standard. It gives Perl programmers a convenient way to calculate SHA-1, SHA-224, SHA-256, SHA-384, SHA-512, SHA-512/224, and SHA-512/256 message digests. The module can handle all types of input, including partial-byte data.</source>
          <target state="translated">Digest::SHA は、NIST Secure Hash Standard の完全な実装です。Perl プログラマが SHA-1、SHA-224、SHA-256、SHA-384、SHA-512、SHA-512/224、および SHA-512/256 メッセージダイジェストを計算する便利な方法を提供します。このモジュールは、部分バイトデータを含むすべてのタイプの入力を扱うことができます。</target>
        </trans-unit>
        <trans-unit id="a585ac809a2181c7da557bcfa5ebd31235578947" translate="yes" xml:space="preserve">
          <source>Digest::SHA is written in C for speed. If your platform lacks a C compiler, you can install the functionally equivalent (but much slower) &lt;a href=&quot;Digest::SHA::PurePerl&quot;&gt;Digest::SHA::PurePerl&lt;/a&gt; module.</source>
          <target state="translated">Digest :: SHAは、速度を表すためにCで記述されています。プラットフォームにCコンパイラがない場合は、機能的に同等の（ただし、はるかに遅い）&lt;a href=&quot;Digest::SHA::PurePerl&quot;&gt;Digest :: SHA :: PurePerl&lt;/a&gt;モジュールをインストールできます。</target>
        </trans-unit>
        <trans-unit id="bac9dbc726cb5a61beb1d19b4dd6e34bff1be212" translate="yes" xml:space="preserve">
          <source>Digest::SHA is written in C for speed. If your platform lacks a C compiler, you can install the functionally equivalent (but much slower) &lt;a href=&quot;http://search.cpan.org/perldoc/Digest::SHA::PurePerl&quot;&gt;Digest::SHA::PurePerl&lt;/a&gt; module.</source>
          <target state="translated">Digest :: SHAは速度を上げるためにCで書かれています。お使いのプラットフォームにCコンパイラがない場合は、機能的に同等の（ただしかなり遅い）&lt;a href=&quot;http://search.cpan.org/perldoc/Digest::SHA::PurePerl&quot;&gt;Digest :: SHA :: PurePerl&lt;/a&gt;モジュールをインストールできます。</target>
        </trans-unit>
        <trans-unit id="cfe5335cdbe39b8c32cfd3452cb43174a1ee9bb2" translate="yes" xml:space="preserve">
          <source>Digest::base</source>
          <target state="translated">Digest::base</target>
        </trans-unit>
        <trans-unit id="4bbbfedd2eb308dc398c540fc645898c082db6ea" translate="yes" xml:space="preserve">
          <source>Digest::base - Digest base class</source>
          <target state="translated">Digest::base-ダイジェスト基底クラス</target>
        </trans-unit>
        <trans-unit id="e1e35cd383e349a46e8ddfc8d07b7e38dc9e4a97" translate="yes" xml:space="preserve">
          <source>Digest::file</source>
          <target state="translated">Digest::file</target>
        </trans-unit>
        <trans-unit id="b818bfd43f1dc832b02e92b31d19ae9f904b4bd8" translate="yes" xml:space="preserve">
          <source>Digest::file - Calculate digests of files</source>
          <target state="translated">Digest::file-ファイルのダイジェストを計算する</target>
        </trans-unit>
        <trans-unit id="2260ce49306460c8a2ef501939f29ad6ddd4e934" translate="yes" xml:space="preserve">
          <source>Digits</source>
          <target state="translated">Digits</target>
        </trans-unit>
        <trans-unit id="392f94d8c0ee92db7ab40a881f035b7ef8b3746d" translate="yes" xml:space="preserve">
          <source>DirHandle</source>
          <target state="translated">DirHandle</target>
        </trans-unit>
        <trans-unit id="8dddc843bd4df8e2e63964a867a859b6a2de4d5b" translate="yes" xml:space="preserve">
          <source>DirHandle - (obsolete) supply object methods for directory handles</source>
          <target state="translated">DirHandle-(廃止予定)ディレクトリハンドル用のオブジェクトメソッドを提供する</target>
        </trans-unit>
        <trans-unit id="aef108ac2030e9cea15c6f1ceb48f01986539dc6" translate="yes" xml:space="preserve">
          <source>DirHandle - supply object methods for directory handles</source>
          <target state="translated">DirHandle-ディレクトリハンドル用のオブジェクトメソッドを提供する</target>
        </trans-unit>
        <trans-unit id="ee4d61306089ee2a3dbe18d989e093b9888bc1ae" translate="yes" xml:space="preserve">
          <source>Direct &lt;code&gt;https&lt;/code&gt; connections are supported only if &lt;a href=&quot;IO::Socket::SSL&quot;&gt;IO::Socket::SSL&lt;/a&gt; 1.56 or greater and &lt;a href=&quot;Net::SSLeay&quot;&gt;Net::SSLeay&lt;/a&gt; 1.49 or greater are installed. An exception will be thrown if new enough versions of these modules are not installed or if the SSL encryption fails. You can also use &lt;code&gt;HTTP::Tiny::can_ssl()&lt;/code&gt; utility function that returns boolean to see if the required modules are installed.</source>
          <target state="translated">直接 &lt;code&gt;https&lt;/code&gt; 接続は、&lt;a href=&quot;IO::Socket::SSL&quot;&gt;IO :: Socket ::&lt;/a&gt; SSL1.56以降および&lt;a href=&quot;Net::SSLeay&quot;&gt;Net :: SSLeay1.49&lt;/a&gt;以降がインストールされている場合にのみサポートされます。これらのモジュールの十分に新しいバージョンがインストールされていない場合、またはSSL暗号化が失敗した場合、例外がスローされます。ブール値を返す &lt;code&gt;HTTP::Tiny::can_ssl()&lt;/code&gt; ユーティリティ関数を使用して、必要なモジュールがインストールされているかどうかを確認することもできます。</target>
        </trans-unit>
        <trans-unit id="d585153d617420e860632db0a6d3e2c3a4042d09" translate="yes" xml:space="preserve">
          <source>Direct access to &lt;a href=&quot;#PL_keyword_plugin&quot;&gt;&quot;PL_keyword_plugin&quot;&lt;/a&gt; should be avoided.</source>
          <target state="translated">&lt;a href=&quot;#PL_keyword_plugin&quot;&gt;「PL_keyword_plugin」&lt;/a&gt;への直接アクセスは避けてください。</target>
        </trans-unit>
        <trans-unit id="a91d0156df1ec1e83f412872b05e19d16ad2c59a" translate="yes" xml:space="preserve">
          <source>Direct pointer to the end of the chunk of text currently being lexed, the end of the lexer buffer. This is equal to &lt;code&gt;SvPVX(PL_parser-&amp;gt;linestr)
+ SvCUR(PL_parser-&amp;gt;linestr)&lt;/code&gt; . A &lt;code&gt;NUL&lt;/code&gt; character (zero octet) is always located at the end of the buffer, and does not count as part of the buffer's contents.</source>
          <target state="translated">現在字句解析されているテキストのチャンクの最後、レクサーバッファーの最後への直接ポインター。これは &lt;code&gt;SvPVX(PL_parser-&amp;gt;linestr) + SvCUR(PL_parser-&amp;gt;linestr)&lt;/code&gt; です。 &lt;code&gt;NUL&lt;/code&gt; の文字（ゼロオクテット）は常に、バッファの末尾に配置され、バッファの内容の一部としてカウントされません。</target>
        </trans-unit>
        <trans-unit id="86232f003188f9beb2b9cb2011336f64626c5fc1" translate="yes" xml:space="preserve">
          <source>Direct pointer to the end of the chunk of text currently being lexed, the end of the lexer buffer. This is equal to &lt;code&gt;SvPVX(PL_parser-&amp;gt;linestr) + SvCUR(PL_parser-&amp;gt;linestr)&lt;/code&gt;. A &lt;code&gt;NUL&lt;/code&gt; character (zero octet) is always located at the end of the buffer, and does not count as part of the buffer's contents.</source>
          <target state="translated">現在字句解析されているテキストのチャンクの終わり、つまり字句解析バッファーの終わりへの直接ポインター。これは、 &lt;code&gt;SvPVX(PL_parser-&amp;gt;linestr) + SvCUR(PL_parser-&amp;gt;linestr)&lt;/code&gt; です。 &lt;code&gt;NUL&lt;/code&gt; の文字（ゼロオクテット）は常に、バッファの末尾に配置され、バッファの内容の一部としてカウントされません。</target>
        </trans-unit>
        <trans-unit id="e2d9e8785d5c2cebf71e5748cc2d6f34072adbf8" translate="yes" xml:space="preserve">
          <source>Direct questions, comments, and the unlikely bug report (ahem) direct comments toward:</source>
          <target state="translated">直接質問、コメント、ありそうもないバグ報告(エヘン)に向けて直接コメントしてください。</target>
        </trans-unit>
        <trans-unit id="c931edeb7d4e9881a04db1e6c541bbb09c790918" translate="yes" xml:space="preserve">
          <source>Direct versus by-reference assignment of filehandles</source>
          <target state="translated">ファイルハンドルの直接対参照による割り当て</target>
        </trans-unit>
        <trans-unit id="f369f2e0fb633f45ca0517465baa722c13fbd48b" translate="yes" xml:space="preserve">
          <source>Directed rounding</source>
          <target state="translated">有向丸め</target>
        </trans-unit>
        <trans-unit id="8a2fa68d6fded8ba99af776dc79ad66973228a51" translate="yes" xml:space="preserve">
          <source>Direction constants for shutdown().</source>
          <target state="translated">shutdown()の方向定数。</target>
        </trans-unit>
        <trans-unit id="ffa4d14a55fc893b2ab2feb24f1bb9f16a27d9ef" translate="yes" xml:space="preserve">
          <source>Directions for building and installing Perl 5 can be found in the file</source>
          <target state="translated">Perl 5 のビルドとインストール方法は、以下のファイルに記載されています。</target>
        </trans-unit>
        <trans-unit id="1bab376f9381aa97c4dab56bb51a3fdcb3e8e0d0" translate="yes" xml:space="preserve">
          <source>Directly Accessing Hash Elements</source>
          <target state="translated">ハッシュ要素への直接アクセス</target>
        </trans-unit>
        <trans-unit id="51f9bdfd8404ef77fb1c128863bdee0a96774dbf" translate="yes" xml:space="preserve">
          <source>Directories are ignored, an appropriate warning message is printed.</source>
          <target state="translated">ディレクトリは無視され、適切な警告メッセージが表示されます。</target>
        </trans-unit>
        <trans-unit id="d9839139cdba0a7db66d992a8c07d9dc5203a709" translate="yes" xml:space="preserve">
          <source>Directories specified by &lt;b&gt;-I&lt;/b&gt; are prepended to the search path for modules (&lt;code&gt;@INC&lt;/code&gt; ).</source>
          <target state="translated">&lt;b&gt;-Iで&lt;/b&gt;指定されたディレクトリは、モジュールの検索パス（ &lt;code&gt;@INC&lt;/code&gt; ）の前に追加されます。</target>
        </trans-unit>
        <trans-unit id="3b4dc513eb12f414a61a6bc7735ec8b2b22f614e" translate="yes" xml:space="preserve">
          <source>Directories specified by &lt;b&gt;-I&lt;/b&gt; are prepended to the search path for modules (&lt;code&gt;@INC&lt;/code&gt;).</source>
          <target state="translated">&lt;b&gt;-Iで&lt;/b&gt;指定されたディレクトリは、モジュールの検索パス（ &lt;code&gt;@INC&lt;/code&gt; ）の前に付加されます。</target>
        </trans-unit>
        <trans-unit id="695ad0d98ef4334944f61b185dd4cedab03431f6" translate="yes" xml:space="preserve">
          <source>Directory containing the Perl library to use.</source>
          <target state="translated">使用するPerlライブラリを含むディレクトリ。</target>
        </trans-unit>
        <trans-unit id="95a5114dd29380dd2a8b633c45e0a67842ace3e1" translate="yes" xml:space="preserve">
          <source>Directory containing the Perl source code (use of this should be avoided, it may be undefined)</source>
          <target state="translated">Perl のソースコードを含むディレクトリ (これの使用は避けるべきです。定義されていない可能性があります)</target>
        </trans-unit>
        <trans-unit id="49814c07ff871d1c05234bf7b576b8bfa6483482" translate="yes" xml:space="preserve">
          <source>Directory handles may also support PerlIO layers in the future.</source>
          <target state="translated">ディレクトリハンドルも将来的にはPerlIOレイヤーをサポートする可能性があります。</target>
        </trans-unit>
        <trans-unit id="09979766f57286773702fe196a375f672c98b714" translate="yes" xml:space="preserve">
          <source>Directory must be removed by the caller.</source>
          <target state="translated">ディレクトリは発信者によって削除されなければなりません。</target>
        </trans-unit>
        <trans-unit id="e9f3ae68dab67380725d57ac9230f0a6c7e277d2" translate="yes" xml:space="preserve">
          <source>Directory removal</source>
          <target state="translated">ディレクトリの削除</target>
        </trans-unit>
        <trans-unit id="446909c0385bc8ceaa4d872dd39cb651160d24b1" translate="yes" xml:space="preserve">
          <source>Directory to hold the man pages at 'make' time</source>
          <target state="translated">作る」時にマンページを保持するためのディレクトリ</target>
        </trans-unit>
        <trans-unit id="6951835d54be6094b23c719fecd95aa744851441" translate="yes" xml:space="preserve">
          <source>Directory to install binary files (e.g. tkperl) into if INSTALLDIRS=perl.</source>
          <target state="translated">INSTALLDIRS=perl の場合にバイナリファイル (例:tkperl)をインストールするディレクトリ。</target>
        </trans-unit>
        <trans-unit id="f55462ba8ed88c62d4efa472f0b3d16ca9cba3f9" translate="yes" xml:space="preserve">
          <source>Directory to put real binary files during 'make'. These will be copied to INSTALLBIN during 'make install'</source>
          <target state="translated">ディレクトリに、'make' の際に実際のバイナリファイルを配置します。これらは 'make install' の際に INSTALLBIN にコピーされます。</target>
        </trans-unit>
        <trans-unit id="443584b29a56ca7e294c71389115957e3051e16b" translate="yes" xml:space="preserve">
          <source>Directory to search recursively for</source>
          <target state="translated">を再帰的に検索するディレクトリ</target>
        </trans-unit>
        <trans-unit id="071097b28577ccaebcb95a281a66ed180c8224bf" translate="yes" xml:space="preserve">
          <source>Directory under which core modules are to be installed.</source>
          <target state="translated">コアモジュールをインストールするディレクトリ。</target>
        </trans-unit>
        <trans-unit id="a1829f4e2522a379a57e6dfeb7e4bf98545786dd" translate="yes" xml:space="preserve">
          <source>Directory where executable files should be installed during 'make'. Defaults to &quot;./blib/script&quot;, just to have a dummy location during testing. make install will copy the files in INST_SCRIPT to INSTALLSCRIPT.</source>
          <target state="translated">make' の間に実行ファイルをインストールするディレクトリ。デフォルトは&quot;./blib/script &quot;で、テスト時にダミーの場所を用意しておくだけです。</target>
        </trans-unit>
        <trans-unit id="2bd8b42725452a5bb1746b479050ce94dd36efe4" translate="yes" xml:space="preserve">
          <source>Directory where the build process takes place?</source>
          <target state="translated">ビルド処理が行われるディレクトリ?</target>
        </trans-unit>
        <trans-unit id="78138bb545451a59f614c602f7ae3ba02571d724" translate="yes" xml:space="preserve">
          <source>Directory where to store default options/environment/dialogs for building modules that need some customization?</source>
          <target state="translated">カスタマイズが必要なモジュールを構築するためのデフォルトのオプション/環境/ダイアログを格納するディレクトリ?</target>
        </trans-unit>
        <trans-unit id="71663d8624a61b44d95ba8a53379fea18cf31f0c" translate="yes" xml:space="preserve">
          <source>Directory where we put library files of this extension while building it.</source>
          <target state="translated">この拡張子のライブラリファイルをビルド中に置くディレクトリ。</target>
        </trans-unit>
        <trans-unit id="008aa84379adaa3dd9f1114985629c6f39ced51e" translate="yes" xml:space="preserve">
          <source>Directory, or more exact the &lt;code&gt;@INC&lt;/code&gt; entry, where the module was loaded from.</source>
          <target state="translated">ディレクトリ、またはより正確にはモジュールのロード &lt;code&gt;@INC&lt;/code&gt; エントリ。</target>
        </trans-unit>
        <trans-unit id="5969fa73eaa43f73a5289188c026ff6a45c76d37" translate="yes" xml:space="preserve">
          <source>Directory.</source>
          <target state="translated">Directory.</target>
        </trans-unit>
        <trans-unit id="7b77fba35f95b8f8ec9c281444e53fe94ce4da2b" translate="yes" xml:space="preserve">
          <source>Directs output to &lt;code&gt;FILENAME&lt;/code&gt; instead of standard output.</source>
          <target state="translated">標準出力ではなく &lt;code&gt;FILENAME&lt;/code&gt; に出力を送信します。</target>
        </trans-unit>
        <trans-unit id="f9e08e65dda5f2824f9fa498ff452471e29c1363" translate="yes" xml:space="preserve">
          <source>Disable &lt;code&gt;\w&lt;/code&gt; , &lt;code&gt;\b&lt;/code&gt; , &lt;code&gt;\s&lt;/code&gt;, &lt;code&gt;\d&lt;/code&gt; , and the POSIX classes from working correctly on Unicode either in this scope, or in just one regex.</source>
          <target state="translated">無効に &lt;code&gt;\w&lt;/code&gt; 、 &lt;code&gt;\b&lt;/code&gt; 、 &lt;code&gt;\s&lt;/code&gt; 、 &lt;code&gt;\d&lt;/code&gt; この範囲で、またはちょうど1正規表現のいずれかのUnicodeに正しく動作から、およびPOSIXクラス。</target>
        </trans-unit>
        <trans-unit id="1c6c248b50a7e410526ed35ac5e9ee1e472a9097" translate="yes" xml:space="preserve">
          <source>Disable &lt;code&gt;\w&lt;/code&gt;, &lt;code&gt;\b&lt;/code&gt;, &lt;code&gt;\s&lt;/code&gt;, &lt;code&gt;\d&lt;/code&gt;, and the POSIX classes from working correctly on Unicode either in this scope, or in just one regex.</source>
          <target state="translated">無効に &lt;code&gt;\w&lt;/code&gt; 、 &lt;code&gt;\b&lt;/code&gt; 、 &lt;code&gt;\s&lt;/code&gt; 、 &lt;code&gt;\d&lt;/code&gt; この範囲で、またはちょうど1正規表現のいずれかのUnicodeに正しく動作から、およびPOSIXクラス。</target>
        </trans-unit>
        <trans-unit id="0b8c639f9c8a545e3588e2eb19e638fd3d7e60f0" translate="yes" xml:space="preserve">
          <source>Disable IPC.</source>
          <target state="translated">IPCを無効にします。</target>
        </trans-unit>
        <trans-unit id="817740799f0d65e523f96e31146ff1b9a88ee16c" translate="yes" xml:space="preserve">
          <source>Disable caching of timings for the null loop. This will force Benchmark to recalculate these timings for each new piece of code timed.</source>
          <target state="translated">nullループのタイミングのキャッシュを無効にします。これにより、Benchmarkは新しいコードがタイムアウトするたびに、これらのタイミングを再計算するようになります。</target>
        </trans-unit>
        <trans-unit id="c0a292f0da006ba870af4c1d4b16af058ca27ce9" translate="yes" xml:space="preserve">
          <source>Disable executing</source>
          <target state="translated">実行を無効にする</target>
        </trans-unit>
        <trans-unit id="0f85246ff2faf69d64165e4047fc800c58a2cc74" translate="yes" xml:space="preserve">
          <source>Disable named opcodes when compiling perl code</source>
          <target state="translated">perl コードをコンパイルする際に名前付きオペコードを無効にする</target>
        </trans-unit>
        <trans-unit id="97739e76ec287fa7ebbb95b29230f3316099f8ec" translate="yes" xml:space="preserve">
          <source>Disable prototype checking. With this option, all function calls are deparsed as if no prototype was defined for them. In other words,</source>
          <target state="translated">プロトタイプチェックを無効にします。このオプションを指定すると、すべての関数呼び出しはプロトタイプが定義されていないかのようにデパーズされます。言い換えれば</target>
        </trans-unit>
        <trans-unit id="0756161fd02ffa6bd8c4dec248d5a916201550e6" translate="yes" xml:space="preserve">
          <source>Disable recognition of &lt;code&gt;IN&lt;/code&gt; , &lt;code&gt;OUT_LIST&lt;/code&gt; and &lt;code&gt;INOUT_LIST&lt;/code&gt; declarations.</source>
          <target state="translated">&lt;code&gt;IN&lt;/code&gt; 、 &lt;code&gt;OUT_LIST&lt;/code&gt; および &lt;code&gt;INOUT_LIST&lt;/code&gt; 宣言の認識を無効にします。</target>
        </trans-unit>
        <trans-unit id="bbc49b5b4fc6859cdd2d50e325f20fe7cf3b63fc" translate="yes" xml:space="preserve">
          <source>Disable recognition of &lt;code&gt;IN&lt;/code&gt;, &lt;code&gt;OUT_LIST&lt;/code&gt; and &lt;code&gt;INOUT_LIST&lt;/code&gt; declarations.</source>
          <target state="translated">&lt;code&gt;IN&lt;/code&gt; 、 &lt;code&gt;OUT_LIST&lt;/code&gt; 、および &lt;code&gt;INOUT_LIST&lt;/code&gt; 宣言の認識を無効にします。</target>
        </trans-unit>
        <trans-unit id="ac791b2af5b20a7fb1078462c2f338c31498cb30" translate="yes" xml:space="preserve">
          <source>Disable recognition of ANSI-like descriptions of function signature.</source>
          <target state="translated">関数シグネチャのANSIライクな記述の認識を無効にする。</target>
        </trans-unit>
        <trans-unit id="bbc86eb1194adefaf0a1a0eedb3b0d823e6663f7" translate="yes" xml:space="preserve">
          <source>Disable the breakpoint so it won't stop the execution of the program. Breakpoints are enabled by default and can be re-enabled using the &lt;code&gt;enable&lt;/code&gt; command.</source>
          <target state="translated">プログラムの実行を停止しないようにブレークポイントを無効にします。ブレークポイントはデフォルトで有効になっており、 &lt;code&gt;enable&lt;/code&gt; コマンドを使用して再度有効にできます。</target>
        </trans-unit>
        <trans-unit id="017a3bc626b78032ab07e0fe9e37b760fd1dd204" translate="yes" xml:space="preserve">
          <source>Disables LF to CRLF translation</source>
          <target state="translated">LF→CRLF変換を無効にします。</target>
        </trans-unit>
        <trans-unit id="18ee854e40ed47f3fd86995a561be7f6fe2416aa" translate="yes" xml:space="preserve">
          <source>Disables all warnings regardless of &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; warnings&lt;/code&gt; or &lt;code&gt;$^W&lt;/code&gt; . See &lt;a href=&quot;warnings&quot;&gt;warnings&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; warnings&lt;/code&gt; または &lt;code&gt;$^W&lt;/code&gt; 関係なく、すべての警告を無効にします。&lt;a href=&quot;warnings&quot;&gt;警告を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="a27fcb3ecca43d8f93a4ef67ef2bd5c8ebd16b11" translate="yes" xml:space="preserve">
          <source>Disables all warnings regardless of &lt;code&gt;use warnings&lt;/code&gt; or &lt;code&gt;$^W&lt;/code&gt;. See &lt;a href=&quot;warnings&quot;&gt;warnings&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;use warnings&lt;/code&gt; または &lt;code&gt;$^W&lt;/code&gt; 関係なく、すべての警告を無効にします。&lt;a href=&quot;warnings&quot;&gt;警告を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="a78ebbaecc11dc8858ab9929654aabcca4fd0610" translate="yes" xml:space="preserve">
          <source>Disables certain optimizations. The only optimization that is currently affected is the use of</source>
          <target state="translated">特定の最適化を無効にします。現在影響を受ける唯一の最適化は</target>
        </trans-unit>
        <trans-unit id="89e5d02d4b19bc88fb63e9ed81b229ea51d1d192" translate="yes" xml:space="preserve">
          <source>Disables conversion of FORTRAN carriage control</source>
          <target state="translated">FORTRANキャリッジ制御の変換を無効にします。</target>
        </trans-unit>
        <trans-unit id="3eddfd0331ebc78a06dd4671eddadcbb2519e22b" translate="yes" xml:space="preserve">
          <source>Disables only specific overloads in the current lexical scope.</source>
          <target state="translated">現在の辞書スコープ内の特定のオーバーロードのみを無効にします。</target>
        </trans-unit>
        <trans-unit id="27215af8e0aec9a7df486127f2e81d5c3743979c" translate="yes" xml:space="preserve">
          <source>Disables overloading entirely in the current lexical scope.</source>
          <target state="translated">現在の語彙スコープ内でのオーバーロードを完全に無効にします。</target>
        </trans-unit>
        <trans-unit id="0596b396338d526562980a39b883df16ed14f799" translate="yes" xml:space="preserve">
          <source>Disables the run time test that determines if the object file (derived from the &lt;code&gt;.xs&lt;/code&gt; file) and the &lt;code&gt;.pm&lt;/code&gt; files have the same version number.</source>
          <target state="translated">オブジェクトファイル（ &lt;code&gt;.xs&lt;/code&gt; ファイルから派生）と &lt;code&gt;.pm&lt;/code&gt; ファイルのバージョン番号が同じかどうかを判断するランタイムテストを無効にします。</target>
        </trans-unit>
        <trans-unit id="0445bc1eebafe74da8f782bf383cb56524959c04" translate="yes" xml:space="preserve">
          <source>Disabling an extension</source>
          <target state="translated">拡張機能を無効にする</target>
        </trans-unit>
        <trans-unit id="3b823ca5f6c5e18ee6590dd73a0071ccec8a63ba" translate="yes" xml:space="preserve">
          <source>Disabling or changing &amp;lt;no&amp;gt; behaviour</source>
          <target state="translated">&amp;lt;no&amp;gt;動作の無効化または変更</target>
        </trans-unit>
        <trans-unit id="5aad62ff519a93497721c0514d33f638c9796188" translate="yes" xml:space="preserve">
          <source>Disabling or changing &lt;no&gt; behaviour&lt;/no&gt;</source>
          <target state="translated">無効化または変更 &lt;no&gt; 動作&lt;/no&gt;</target>
        </trans-unit>
        <trans-unit id="ec79b0e24c53783c0d5b0048b7cc030c1e7e99b1" translate="yes" xml:space="preserve">
          <source>Disabling these ops is a</source>
          <target state="translated">これらの操作を無効にすることは</target>
        </trans-unit>
        <trans-unit id="5cd83441d5b2311046899a2eb583a75a356aec0d" translate="yes" xml:space="preserve">
          <source>Disallow records to span block boundaries.</source>
          <target state="translated">ブロック境界にまたがるレコードを許可しないようにします。</target>
        </trans-unit>
        <trans-unit id="c32542195526d9e4b30393cfd896527d786a1f51" translate="yes" xml:space="preserve">
          <source>Disambiguation rules between old-style octal escapes and backreferences</source>
          <target state="translated">旧式八進数エスケープと後方参照の曖昧性解消ルール</target>
        </trans-unit>
        <trans-unit id="e21ccee288d3c66aefaa51cf4b41a13f64925be9" translate="yes" xml:space="preserve">
          <source>Disassociate the scalar handle from its underlying scalar. Done automatically on destroy.</source>
          <target state="translated">スカラハンドルをその下にあるスカラから切り離します。destroy時に自動的に行われる。</target>
        </trans-unit>
        <trans-unit id="51495d55ca3fbe873cb079ee818ab001144b1050" translate="yes" xml:space="preserve">
          <source>Discard the cop hints hash</source>
          <target state="translated">警官のヒントハッシュを破棄する</target>
        </trans-unit>
        <trans-unit id="89ce0ff723903d05b8a096f2de342a228d29a9da" translate="yes" xml:space="preserve">
          <source>Discard the cop hints hash &lt;code&gt;cophh&lt;/code&gt;, freeing all resources associated with it.</source>
          <target state="translated">警官のヒントハッシュ &lt;code&gt;cophh&lt;/code&gt; を破棄し、それに関連付けられているすべてのリソースを解放します。</target>
        </trans-unit>
        <trans-unit id="5d20c7638348d63542d258b50d8bbd6c952bdaf8" translate="yes" xml:space="preserve">
          <source>Discards text about to be lexed, from &lt;a href=&quot;#PL_parser-%3Ebufptr&quot;&gt;&quot;PL_parser-&amp;gt;bufptr&quot;&lt;/a&gt; up to &lt;code&gt;ptr&lt;/code&gt;. Text following &lt;code&gt;ptr&lt;/code&gt; will be moved, and the buffer shortened. This hides the discarded text from any lexing code that runs later, as if the text had never appeared.</source>
          <target state="translated">&lt;a href=&quot;#PL_parser-%3Ebufptr&quot;&gt;「PL_parser-&amp;gt; bufptr」&lt;/a&gt;から &lt;code&gt;ptr&lt;/code&gt; まで、lexedされようとしているテキストを破棄します。 &lt;code&gt;ptr&lt;/code&gt; に続くテキストが移動され、バッファが短縮されます。これにより、破棄されたテキストが、テキストが表示されなかったかのように、後で実行される字句解析コードから非表示になります。</target>
        </trans-unit>
        <trans-unit id="1ce92351c84d19187a09db0e7cf0340daa95578b" translate="yes" xml:space="preserve">
          <source>Discards text about to be lexed, from &lt;a href=&quot;#PL_parser-%3ebufptr&quot;&gt;PL_parser-&amp;gt;bufptr&lt;/a&gt; up to</source>
          <target state="translated">字句解析されるテキストを&lt;a href=&quot;#PL_parser-%3ebufptr&quot;&gt;PL_parser-&amp;gt; bufptr&lt;/a&gt;から</target>
        </trans-unit>
        <trans-unit id="d6266f69af30213e087e1c977c0114fa6d50dbc1" translate="yes" xml:space="preserve">
          <source>Discards the buffering of the standard output and standard errors for return by run_forked(). With this option you have to use the std*_handlers to read what the command outputs. Useful for commands that send a lot of output.</source>
          <target state="translated">run_forked()で返す標準出力と標準誤差のバッファリングを破棄します。このオプションを使用すると、コマンドが出力するものを読み込むために std*_handlers を使用しなければなりません。多くの出力を送信するコマンドに便利です。</target>
        </trans-unit>
        <trans-unit id="bd7f7a279b2a2f461fa1e0a81e60263706a46fdb" translate="yes" xml:space="preserve">
          <source>Discards the first part of the &lt;a href=&quot;#PL_parser-%3Elinestr&quot;&gt;&quot;PL_parser-&amp;gt;linestr&quot;&lt;/a&gt; buffer, up to &lt;code&gt;ptr&lt;/code&gt;. The remaining content of the buffer will be moved, and all pointers into the buffer updated appropriately. &lt;code&gt;ptr&lt;/code&gt; must not be later in the buffer than the position of &lt;a href=&quot;#PL_parser-%3Ebufptr&quot;&gt;&quot;PL_parser-&amp;gt;bufptr&quot;&lt;/a&gt;: it is not permitted to discard text that has yet to be lexed.</source>
          <target state="translated">&lt;a href=&quot;#PL_parser-%3Elinestr&quot;&gt;「PL_parser-&amp;gt; linestr」&lt;/a&gt;バッファの最初の部分（ &lt;code&gt;ptr&lt;/code&gt; まで）を破棄します。バッファの残りの内容が移動され、バッファへのすべてのポインタが適切に更新されます。 &lt;code&gt;ptr&lt;/code&gt; は、&lt;a href=&quot;#PL_parser-%3Ebufptr&quot;&gt;「PL_parser-&amp;gt; bufptr」の&lt;/a&gt;位置よりもバッファ内で遅くすることはできません。まだlexedされていないテキストを破棄することはできません。</target>
        </trans-unit>
        <trans-unit id="a0327deb8b4ad4a89521ac79b1906db45d49787c" translate="yes" xml:space="preserve">
          <source>Discards the first part of the &lt;a href=&quot;#PL_parser-%3elinestr&quot;&gt;PL_parser-&amp;gt;linestr&lt;/a&gt; buffer, up to</source>
          <target state="translated">&lt;a href=&quot;#PL_parser-%3elinestr&quot;&gt;PL_parser-&amp;gt; linestr&lt;/a&gt;バッファの最初の部分を破棄します。</target>
        </trans-unit>
        <trans-unit id="4c4a2e80cc873135b3d277a22b6e85110c509731" translate="yes" xml:space="preserve">
          <source>Disclaimer</source>
          <target state="translated">Disclaimer</target>
        </trans-unit>
        <trans-unit id="edef630584d9cf85568be81748ceaea6737fdfb5" translate="yes" xml:space="preserve">
          <source>Discouraged</source>
          <target state="translated">Discouraged</target>
        </trans-unit>
        <trans-unit id="06279c3d633238719d4311a1e19a71a158169a40" translate="yes" xml:space="preserve">
          <source>Discouraged comparison functions</source>
          <target state="translated">衰退した比較機能</target>
        </trans-unit>
        <trans-unit id="a1e132aa8b84b9d862e794881468080b3307770a" translate="yes" xml:space="preserve">
          <source>Discovering the usefulness of the &quot;command.com&quot; shell on Windows 9x is left as an exercise to the reader :)</source>
          <target state="translated">Windows 9x上での &quot;command.com &quot;シェルの有用性を発見することは、読者への練習として残されています :)</target>
        </trans-unit>
        <trans-unit id="c6f5759c39bc307d5bdf84ed001f1952af9d8da9" translate="yes" xml:space="preserve">
          <source>Discuss the need</source>
          <target state="translated">必要性について議論する</target>
        </trans-unit>
        <trans-unit id="902e2c8781e285f2109e3397b35aa7e83c4acc11" translate="yes" xml:space="preserve">
          <source>Discussed briefly in &lt;a href=&quot;perlpod#Formatting-Codes&quot;&gt;&quot;Formatting Codes&quot; in perlpod&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;perlpod#Formatting-Codes&quot;&gt;perlpodの「フォーマットコード」で&lt;/a&gt;簡単に説明しました。</target>
        </trans-unit>
        <trans-unit id="5e5164803920ddcf3cce5890834f1bdb27f23ebc" translate="yes" xml:space="preserve">
          <source>Discussed briefly in &lt;a href=&quot;perlpod#Formatting-Codes&quot;&gt;Formatting Codes in perlpod&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;perlpod#Formatting-Codes&quot;&gt;perlpodのフォーマットコードで&lt;/a&gt;簡単に説明しました。</target>
        </trans-unit>
        <trans-unit id="9b63dec48ea2c8f9c76b3edf144110430c933947" translate="yes" xml:space="preserve">
          <source>Display all (or some) lexical variables (mnemonic: &lt;code&gt;mY&lt;/code&gt; variables) in the current scope or</source>
          <target state="translated">現在のスコープ内のすべて（または一部）の字句変数（ニーモニック： &lt;code&gt;mY&lt;/code&gt; 変数）を表示します。</target>
        </trans-unit>
        <trans-unit id="4d6a8893695a223720d1351409d3d6fa85617a70" translate="yes" xml:space="preserve">
          <source>Display all (or some) variables in package (defaulting to &lt;code&gt;main&lt;/code&gt; ) using a data pretty-printer (hashes show their keys and values so you see what's what, control characters are made printable, etc.). Make sure you don't put the type specifier (like &lt;code&gt;$&lt;/code&gt; ) there, just the symbol names, like this:</source>
          <target state="translated">データプリティプリンターを使用して、パッケージ内のすべて（または一部）の変数を表示します（デフォルトは &lt;code&gt;main&lt;/code&gt; ）（ハッシュはそれらのキーと値を表示するため、何が表示されるか、制御文字が印刷可能になるなど）。型指定子（ &lt;code&gt;$&lt;/code&gt; など）をそこに置かず、シンボル名だけを次のように配置してください。</target>
        </trans-unit>
        <trans-unit id="a50ec31525cd3276609b1f242c69bd73b94bf4ec" translate="yes" xml:space="preserve">
          <source>Display all (or some) variables in package (defaulting to &lt;code&gt;main&lt;/code&gt;) using a data pretty-printer (hashes show their keys and values so you see what's what, control characters are made printable, etc.). Make sure you don't put the type specifier (like &lt;code&gt;$&lt;/code&gt;) there, just the symbol names, like this:</source>
          <target state="translated">データプリティプリンターを使用して、パッケージ内のすべて（または一部）の変数（デフォルトは &lt;code&gt;main&lt;/code&gt; ）を表示します（ハッシュにはキーと値が表示されるため、何が何であるか、制御文字が印刷可能になるなど）。そこに型指定子（ &lt;code&gt;$&lt;/code&gt; など）を配置せず、次のようにシンボル名だけを配置するようにしてください。</target>
        </trans-unit>
        <trans-unit id="b044b119358695832cdfad98824f0069cebfc548" translate="yes" xml:space="preserve">
          <source>Display all loaded modules and their versions.</source>
          <target state="translated">ロードされたすべてのモジュールとそのバージョンを表示します。</target>
        </trans-unit>
        <trans-unit id="be430952d1c69c4ef4bad908fd0595a0f079554c" translate="yes" xml:space="preserve">
          <source>Display all options.</source>
          <target state="translated">すべてのオプションを表示します。</target>
        </trans-unit>
        <trans-unit id="27dde643a5c3a4ac6eac908a83f780f2958f01e6" translate="yes" xml:space="preserve">
          <source>Display and Dump functions</source>
          <target state="translated">表示・ダンプ機能</target>
        </trans-unit>
        <trans-unit id="b1f4cfc5d23e7e9d95f619a69bc6c81069e91cc2" translate="yes" xml:space="preserve">
          <source>Display docs using plain &lt;b&gt;t&lt;/b&gt;ext converter, instead of nroff. This may be faster, but it probably won't look as nice.</source>
          <target state="translated">nroffの代わりにプレーン&lt;b&gt;t&lt;/b&gt; extコンバーターを使用してドキュメントを表示します。これはより高速かもしれませんが、おそらく見栄えが良くありません。</target>
        </trans-unit>
        <trans-unit id="87a01a2d90029f7ec813289df19d8e72278f7de2" translate="yes" xml:space="preserve">
          <source>Display help</source>
          <target state="translated">ヘルプを表示する</target>
        </trans-unit>
        <trans-unit id="1261f72eada707fc4383acb7f8be5b3e61a1c948" translate="yes" xml:space="preserve">
          <source>Display last n commands. Only commands longer than one character are listed. If</source>
          <target state="translated">最後の n 個のコマンドを表示します。1文字以上のコマンドのみ表示されます。もし</target>
        </trans-unit>
        <trans-unit id="f40755e392f1a9eb6ccdf55b73455fd0fd00a49a" translate="yes" xml:space="preserve">
          <source>Display mostly harmless warning messages (default behaviour). But this is not the same as &quot;verbose&quot; mode.</source>
          <target state="translated">ほとんど無害な警告メッセージを表示します(デフォルトの動作)。しかし、これは &quot;verbose &quot;モードと同じではありません。</target>
        </trans-unit>
        <trans-unit id="7c1e20933a7ba1da896199ecdf785fc25a2b5f9c" translate="yes" xml:space="preserve">
          <source>Display on&lt;b&gt;l&lt;/b&gt;y the file name of the module found.</source>
          <target state="translated">見つかったモジュールのファイル名を&lt;b&gt;l&lt;/b&gt; yに表示します。</target>
        </trans-unit>
        <trans-unit id="93569833439ae0502fb8e64a1c4e865ec5d04cb7" translate="yes" xml:space="preserve">
          <source>Display only the given routine and its descendants in the profile.</source>
          <target state="translated">指定されたルーチンとその子孫のみをプロファイルに表示します。</target>
        </trans-unit>
        <trans-unit id="cb765f562c6dc517c9adc9d4c794809e94e26d02" translate="yes" xml:space="preserve">
          <source>Display progress messages.</source>
          <target state="translated">進行状況のメッセージを表示します。</target>
        </trans-unit>
        <trans-unit id="465a2527c50c93058895db46b538af503815f183" translate="yes" xml:space="preserve">
          <source>Display progress messages. By default, they won't be displayed.</source>
          <target state="translated">進行状況のメッセージを表示します。デフォルトでは表示されません。</target>
        </trans-unit>
        <trans-unit id="d2e6e56a1e2419c84dc382818c82354f4cd202e5" translate="yes" xml:space="preserve">
          <source>Display routines that have zero usage.</source>
          <target state="translated">使用量がゼロのルーチンを表示します。</target>
        </trans-unit>
        <trans-unit id="a772b3b9f6d01bc9a870a18de9715b85da4f33c7" translate="yes" xml:space="preserve">
          <source>Display the entire module: both code and unformatted pod documentation. This may be useful if the docs don't explain a function in the detail you need, and you'd like to inspect the code directly; perldoc will find the file for you and simply hand it off for display.</source>
          <target state="translated">モジュール全体を表示します:コードとフォーマットされていないポッドのドキュメントの両方を表示します。これは、ドキュメントに必要な詳細な関数の説明がなく、コードを直接確認したい場合に便利です。</target>
        </trans-unit>
        <trans-unit id="d3972efaa9a06280feba956085fc524f4b645f44" translate="yes" xml:space="preserve">
          <source>Display the version numbers of the loaded &lt;a href=&quot;../tap/harness&quot;&gt;TAP::Harness&lt;/a&gt; and the current Perl.</source>
          <target state="translated">ロードされた&lt;a href=&quot;../tap/harness&quot;&gt;TAP :: Harness&lt;/a&gt;と現在のPerl のバージョン番号を表示します。</target>
        </trans-unit>
        <trans-unit id="18b5e5f7dc12ee902008e9f7a3fe235b92c64af8" translate="yes" xml:space="preserve">
          <source>Display the version numbers of the loaded &lt;a href=&quot;TAP::Harness&quot;&gt;TAP::Harness&lt;/a&gt; and the current Perl.</source>
          <target state="translated">ロードされた&lt;a href=&quot;TAP::Harness&quot;&gt;TAP :: Harness&lt;/a&gt;と現在のPerlのバージョン番号を表示します。</target>
        </trans-unit>
        <trans-unit id="5b299fbeab61103fa9b76908f93f4f3deeb705ac" translate="yes" xml:space="preserve">
          <source>Display this documentation.</source>
          <target state="translated">このドキュメントを表示します。</target>
        </trans-unit>
        <trans-unit id="3b39d5abe0218469782f16f6cb4d35f226bb7201" translate="yes" xml:space="preserve">
          <source>Displaying Unicode As Text</source>
          <target state="translated">ユニコードをテキストとして表示する</target>
        </trans-unit>
        <trans-unit id="a65d13adc77fe56d8d077ba085d484794c846340" translate="yes" xml:space="preserve">
          <source>Displays a short help</source>
          <target state="translated">ショートヘルプを表示します。</target>
        </trans-unit>
        <trans-unit id="6782149c8f0e6f7b18c7f34e52e8afce81669558" translate="yes" xml:space="preserve">
          <source>Displays a warning that an old packlist file was found. Reads the filename from @ARGV.</source>
          <target state="translated">古いパックリストファイルが見つかったという警告を表示します。ファイル名を @argv から読み込みます。</target>
        </trans-unit>
        <trans-unit id="d1f928489a20ced31a182ea00abdcc0e1f7a238c" translate="yes" xml:space="preserve">
          <source>Displays the current value(s) for this config variable. Without KEY, displays all subcommands and config variables.</source>
          <target state="translated">この設定変数の現在の値を表示します。KEY なしでは、すべてのサブコマンドとコンフィグ変数を表示します。</target>
        </trans-unit>
        <trans-unit id="0bcd71b641eec7cadbed7fed072672f0582b39a0" translate="yes" xml:space="preserve">
          <source>Displays the usage message.</source>
          <target state="translated">使用方法のメッセージを表示します。</target>
        </trans-unit>
        <trans-unit id="5298b75576f02dfd7e64f80d327144afcfdb191f" translate="yes" xml:space="preserve">
          <source>Displays the version of perldoc you're running.</source>
          <target state="translated">実行中のperldocのバージョンを表示します。</target>
        </trans-unit>
        <trans-unit id="dcdc8e69179a75bcf860bec40f205ba043a0369b" translate="yes" xml:space="preserve">
          <source>Distantly based on LWP::Base64 written by Martijn Koster &amp;lt;m.koster@nexor.co.uk&amp;gt; and Joerg Reichelt &amp;lt;j.reichelt@nexor.co.uk&amp;gt; and code posted to comp.lang.perl &amp;lt;3pd2lp$6gf@wsinti07.win.tue.nl&amp;gt; by Hans Mulder &amp;lt;hansm@wsinti07.win.tue.nl&amp;gt;</source>
          <target state="translated">Martijn Koster &amp;lt;m.koster@nexor.co.uk&amp;gt;およびJoerg Reichelt &amp;lt;j.reichelt@nexor.co.uk&amp;gt;によって作成されたLWP :: Base64に遠く基づいており、comp.lang.perl &amp;lt;3pd2lp $ 6gf @に投稿されたコードwsinti07.win.tue.nl&amp;gt; Hans Mulder &amp;lt;hansm@wsinti07.win.tue.nl&amp;gt;</target>
        </trans-unit>
        <trans-unit id="9483453ac3c647a5e6dee71efaa493b08294daa7" translate="yes" xml:space="preserve">
          <source>Distribution Conditions</source>
          <target state="translated">流通条件</target>
        </trans-unit>
        <trans-unit id="955afbb21394efe51b98a6970c7c1927cbe40fd4" translate="yes" xml:space="preserve">
          <source>Distribution Support</source>
          <target state="translated">流通支援</target>
        </trans-unit>
        <trans-unit id="a63a20a8c91aa0cfeda69dd3376e188c1b8012cd" translate="yes" xml:space="preserve">
          <source>Distribution metadata describe important properties of Perl distributions. Distribution building tools like Module::Build, Module::Install, ExtUtils::MakeMaker or Dist::Zilla should create a metadata file in accordance with this specification and include it with the distribution for use by automated tools that index, examine, package or install Perl distributions.</source>
          <target state="translated">ディストリビューションのメタデータは、Perl ディストリビューションの重要な特性を記述します。Module::Build、Module::Install、ExtUtils::MakeMaker、Dist::Zilla のようなディストリビューション構築ツールは、この仕様に従ってメタデータファイルを作成し、Perl ディストリビューションのインデックス作成、検査、パッケージ化、インストールを行う自動化ツールで使用するために、ディストリビューションに含めなければなりません。</target>
        </trans-unit>
        <trans-unit id="bdb9543fa215a03986cfd2a98478c05c4a9ff395" translate="yes" xml:space="preserve">
          <source>Distribution metadata should be serialized (as a hashref) as JSON-encoded data and packaged with distributions as the file</source>
          <target state="translated">ディストリビューションのメタデータは、JSONでエンコードされたデータとして(ハッシュリフとして)シリアライズされ、ディストリビューションとともにファイルとしてパッケージ化されなければなりません。</target>
        </trans-unit>
        <trans-unit id="41c838f5416206dabaa8d6ac86a72e962e587d49" translate="yes" xml:space="preserve">
          <source>Distribution objects are normally distributions from the CPAN, but there is a slightly degenerate case for Distribution objects, too, of projects held on the local disk. These distribution objects have the same name as the local directory and end with a dot. A dot by itself is also allowed for the current directory at the time CPAN.pm was used. All actions such as &lt;code&gt;make&lt;/code&gt; , &lt;code&gt;test&lt;/code&gt; , and &lt;code&gt;install&lt;/code&gt; are applied directly to that directory. This gives the command &lt;code&gt;cpan .&lt;/code&gt; an interesting touch: while the normal mantra of installing a CPAN module without CPAN.pm is one of</source>
          <target state="translated">ディストリビューションオブジェクトは通常CPANからのディストリビューションですが、ローカルディスク上に保持されているプロジェクトのディストリビューションオブジェクトについても、少し変形したケースがあります。これらの配布オブジェクトは、ローカルディレクトリと同じ名前で、ドットで終わります。 CPAN.pmが使用されたとき、ドット自体も現在のディレクトリに許可されます。 &lt;code&gt;make&lt;/code&gt; 、 &lt;code&gt;test&lt;/code&gt; 、 &lt;code&gt;install&lt;/code&gt; などのすべてのアクションは、そのディレクトリに直接適用されます。これにより、コマンド &lt;code&gt;cpan .&lt;/code&gt; 興味深いタッチ：CPAN.pmなしでCPANモジュールをインストールするという通常のマントラは、</target>
        </trans-unit>
        <trans-unit id="381764d96f9c586b529fc1b74bf3dd86052ae745" translate="yes" xml:space="preserve">
          <source>Distributions on CPAN usually behave according to what we call the CPAN mantra. Or since the advent of Module::Build we should talk about two mantras:</source>
          <target state="translated">CPAN上のディストリビューションは通常、我々がCPANマントラと呼ぶものに従って動作します。あるいは、Module::Build の出現以来、2つのマントラについて話すべきでしょう。</target>
        </trans-unit>
        <trans-unit id="c58180206bebfb6ee0df954b757a9830a178426b" translate="yes" xml:space="preserve">
          <source>Distroprefs</source>
          <target state="translated">Distroprefs</target>
        </trans-unit>
        <trans-unit id="7f01fb80f7dde34a76219740c5d0000d7751aa19" translate="yes" xml:space="preserve">
          <source>Ditto for stringifying large arrays:</source>
          <target state="translated">大きな配列を文字列化する場合も同様です。</target>
        </trans-unit>
        <trans-unit id="ddd6d6a4ddce8fc639668c818a1505775f6e8329" translate="yes" xml:space="preserve">
          <source>Ditto.</source>
          <target state="translated">Ditto.</target>
        </trans-unit>
        <trans-unit id="8cd08c454640891385c7eeea6dddbb915e9a2b00" translate="yes" xml:space="preserve">
          <source>Ditto:</source>
          <target state="translated">Ditto:</target>
        </trans-unit>
        <trans-unit id="5f28828cd2ac54ccf8b24829dc7648052f5b1571" translate="yes" xml:space="preserve">
          <source>Divides $x by $y by doing floored division (F-division), where the quotient is the floored (rounded towards negative infinity) quotient of the two operands. In list context, returns the quotient and the remainder. The remainder is either zero or has the same sign as the second operand. In scalar context, only the quotient is returned.</source>
          <target state="translated">ここで、商は、2つのオペランドの商の階数(負の無限大に向かって丸められた)となります。リストコンテキストでは、商と余りを返します。余りはゼロか、2番目のオペランドと同じ符号を持ちます。スカラコンテキストでは、商のみが返されます。</target>
        </trans-unit>
        <trans-unit id="1e2806cf31d287009ff4d96d950d67c16e95ae38" translate="yes" xml:space="preserve">
          <source>Divides $x by $y by doing truncated division (T-division), where quotient is the truncated (rouneded towards zero) quotient of the two operands. In list context, returns the quotient and the remainder. The remainder is either zero or has the same sign as the first operand. In scalar context, only the quotient is returned.</source>
          <target state="translated">ここで、商は、2つのオペランドの商を切り捨てた (ゼロに丸めた)商となります。リストコンテキストでは、商と残りを返します。余りはゼロか、最初のオペランドと同じ符号を持ちます。スカラコンテキストでは、商のみが返されます。</target>
        </trans-unit>
        <trans-unit id="f2faddc4fbc208e1d7b96a4fcac1f5f9f8a3944b" translate="yes" xml:space="preserve">
          <source>Do &lt;b&gt;not&lt;/b&gt; call &lt;code&gt;&lt;a href=&quot;functions/srand&quot;&gt;srand()&lt;/a&gt;&lt;/code&gt; (i.e., without an argument) more than once per process. The internal state of the random number generator should contain more entropy than can be provided by any seed, so calling &lt;code&gt;&lt;a href=&quot;functions/srand&quot;&gt;srand()&lt;/a&gt;&lt;/code&gt; again actually</source>
          <target state="translated">プロセスごとに &lt;code&gt;&lt;a href=&quot;functions/srand&quot;&gt;srand()&lt;/a&gt;&lt;/code&gt; を（引数なしで）複数回呼び出さ&lt;b&gt;ないで&lt;/b&gt;ください。乱数ジェネレーターの内部状態には、シードによって提供できるよりも多くのエントロピーが含まれている必要があるため、実際には &lt;code&gt;&lt;a href=&quot;functions/srand&quot;&gt;srand()&lt;/a&gt;&lt;/code&gt; を再度呼び出します</target>
        </trans-unit>
        <trans-unit id="b6baf1cd7e0ea413825fb96a05b09305653a8842" translate="yes" xml:space="preserve">
          <source>Do &lt;b&gt;not&lt;/b&gt; call &lt;code&gt;&lt;a href=&quot;srand&quot;&gt;srand()&lt;/a&gt;&lt;/code&gt; (i.e., without an argument) more than once per process. The internal state of the random number generator should contain more entropy than can be provided by any seed, so calling &lt;code&gt;&lt;a href=&quot;srand&quot;&gt;srand()&lt;/a&gt;&lt;/code&gt; again actually</source>
          <target state="translated">プロセスごとに &lt;code&gt;&lt;a href=&quot;srand&quot;&gt;srand()&lt;/a&gt;&lt;/code&gt; を（引数なしで）複数回呼び出さ&lt;b&gt;ないで&lt;/b&gt;ください。乱数ジェネレーターの内部状態には、シードによって提供できるよりも多くのエントロピーが含まれている必要があるため、実際には &lt;code&gt;&lt;a href=&quot;srand&quot;&gt;srand()&lt;/a&gt;&lt;/code&gt; を再度呼び出します</target>
        </trans-unit>
        <trans-unit id="652e12fdcb5c155668dc327bb96dd0fc2b218422" translate="yes" xml:space="preserve">
          <source>Do &lt;b&gt;not&lt;/b&gt; call &lt;code&gt;srand()&lt;/code&gt; (i.e., without an argument) more than once per process. The internal state of the random number generator should contain more entropy than can be provided by any seed, so calling &lt;a href=&quot;#srand-EXPR&quot;&gt;&lt;code&gt;srand&lt;/code&gt;&lt;/a&gt; again actually</source>
          <target state="translated">プロセスごとに &lt;code&gt;srand()&lt;/code&gt; を（つまり、引数なしで）複数回呼び出さ&lt;b&gt;ないで&lt;/b&gt;ください。乱数ジェネレーターの内部状態には、シードで提供できるよりも多くのエントロピーが含まれている必要があるため、実際に&lt;a href=&quot;#srand-EXPR&quot;&gt; &lt;code&gt;srand&lt;/code&gt; を&lt;/a&gt;再度呼び出す</target>
        </trans-unit>
        <trans-unit id="8508e09e1cab910629d8f92dab302c9bc18cac38" translate="yes" xml:space="preserve">
          <source>Do &lt;b&gt;not&lt;/b&gt; export anything else by default without a good reason!</source>
          <target state="translated">正当な理由がない限り、デフォルトでは他のものをエクスポートし&lt;b&gt;ないで&lt;/b&gt;ください！</target>
        </trans-unit>
        <trans-unit id="2a361ce7ad694ec0575786e4a58744501e47d3dd" translate="yes" xml:space="preserve">
          <source>Do &lt;b&gt;not&lt;/b&gt; export method names!</source>
          <target state="translated">メソッド名をエクスポートし&lt;b&gt;ないで&lt;/b&gt;ください！</target>
        </trans-unit>
        <trans-unit id="825725dbe42c2936cefeada5723d97075e056f4d" translate="yes" xml:space="preserve">
          <source>Do &lt;b&gt;not&lt;/b&gt; use &lt;code&gt;/[A-Z]/&lt;/code&gt; unless you don't care about the current locale.</source>
          <target state="translated">現在のロケールを気にしない限り、 &lt;code&gt;/[A-Z]/&lt;/code&gt; 使用し&lt;b&gt;ないで&lt;/b&gt;ください。</target>
        </trans-unit>
        <trans-unit id="18fe50d08f696cfe6f092de82e112424369b684e" translate="yes" xml:space="preserve">
          <source>Do &lt;b&gt;not&lt;/b&gt; use &lt;code&gt;/[a-z]/&lt;/code&gt; unless you don't care about the current locale.</source>
          <target state="translated">現在のロケールを気にしない限り、 &lt;code&gt;/[a-z]/&lt;/code&gt; 使用し&lt;b&gt;ないで&lt;/b&gt;ください。</target>
        </trans-unit>
        <trans-unit id="4ce4e2d8b8b0faeef7d3ea74accd64d2ba130eb9" translate="yes" xml:space="preserve">
          <source>Do I always/never have to quote my strings or use semicolons and commas?</source>
          <target state="translated">文字列を引用したり、セミコロンやカンマを使う必要はありますか?</target>
        </trans-unit>
        <trans-unit id="07601d161d4355e711962a451be3c55fe86fbe5c" translate="yes" xml:space="preserve">
          <source>Do I need to recompile XS modules when there is a change in the C library?</source>
          <target state="translated">Cライブラリに変更があった場合、XSモジュールを再コンパイルする必要がありますか?</target>
        </trans-unit>
        <trans-unit id="e7ea3cbfa103eecd5c1b9890a30bc6708da3600c" translate="yes" xml:space="preserve">
          <source>Do NOT be tempted to use TODO tests as a way to avoid fixing simple bugs!</source>
          <target state="translated">単純なバグを修正しないようにするための方法としてTODOテストを使用したいという誘惑に駆られてはいけません!</target>
        </trans-unit>
        <trans-unit id="8546c498c3dd38d7f1d8d67ef0863373cb431c32" translate="yes" xml:space="preserve">
          <source>Do NOT export anything else by default without a good reason!</source>
          <target state="translated">正当な理由なくデフォルトで他のものをエクスポートしないでください!</target>
        </trans-unit>
        <trans-unit id="88b10d4e2bda0943ded9669f6a8c9aebc17a12e8" translate="yes" xml:space="preserve">
          <source>Do NOT export method names!</source>
          <target state="translated">メソッド名をエクスポートしないでください。</target>
        </trans-unit>
        <trans-unit id="669a18cda8b7578e2fdaaea3bac36d488688036e" translate="yes" xml:space="preserve">
          <source>Do NOT use this due to the possibility of overflowing &lt;code&gt;buffer&lt;/code&gt;. Instead use my_snprintf()</source>
          <target state="translated">&lt;code&gt;buffer&lt;/code&gt; がオーバーフローする可能性があるため、これは使用しないでください。代わりにmy_snprintf（）を使用してください</target>
        </trans-unit>
        <trans-unit id="ad17a344d7a9ec501d9048994766ad70eaad6249" translate="yes" xml:space="preserve">
          <source>Do a checksum on the message. Basically sum all of the short words and fold the high order bits into the low order bits.</source>
          <target state="translated">メッセージのチェックサムを行います。基本的には全ての短い単語を合計し、高次のビットを低次のビットに畳み込みます。</target>
        </trans-unit>
        <trans-unit id="29e252ceca181e28d13625bae97df37690bf32cd" translate="yes" xml:space="preserve">
          <source>Do a dry run, but don't actually install anything. (unimplemented)</source>
          <target state="translated">ドライランをしても、実際には何もインストールしないでください。(未実装)</target>
        </trans-unit>
        <trans-unit id="ed2715ba8e6286e3dce7c7be35eeaefa5a5cc3c5" translate="yes" xml:space="preserve">
          <source>Do case-insensitive pattern matching.</source>
          <target state="translated">大文字小文字を区別しないパターンマッチングを行います。</target>
        </trans-unit>
        <trans-unit id="7bf80ac2ef12ec954e01fb98bbe623250b9e4241" translate="yes" xml:space="preserve">
          <source>Do case-insensitive pattern matching. For example, &quot;A&quot; will match &quot;a&quot; under &lt;code&gt;/i&lt;/code&gt;.</source>
          <target state="translated">大文字と小文字を区別しないパターンマッチングを実行します。たとえば、「A」は &lt;code&gt;/i&lt;/code&gt; の下の「a」と一致します。</target>
        </trans-unit>
        <trans-unit id="e7e815e6f64c5408e3720ec5fc43ced6718ce0b2" translate="yes" xml:space="preserve">
          <source>Do error reporting for missing typemaps.</source>
          <target state="translated">タイプマップが見つからない場合のエラー報告を行います。</target>
        </trans-unit>
        <trans-unit id="74f0dbb17c8d86c7bb9eb64b29544f3a178ec316" translate="yes" xml:space="preserve">
          <source>Do magic after a value is assigned to the SV. See &lt;code&gt;&lt;a href=&quot;#sv_magic&quot;&gt;&quot;sv_magic&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">値がSVに割り当てられた後に魔法を実行します。 &lt;code&gt;&lt;a href=&quot;#sv_magic&quot;&gt;&quot;sv_magic&quot;&lt;/a&gt;&lt;/code&gt; 参照してください。</target>
        </trans-unit>
        <trans-unit id="8d3df5a42cb6127acc1472a5755378b0af34defd" translate="yes" xml:space="preserve">
          <source>Do magic after a value is assigned to the SV. See &lt;code&gt;sv_magic&lt;/code&gt; .</source>
          <target state="translated">値がSVに割り当てられた後に魔法をかけます。 &lt;code&gt;sv_magic&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="f7ceee7db88ccc3aa9b6fff70f9a7976eb75435e" translate="yes" xml:space="preserve">
          <source>Do magic before a value is retrieved from the SV. The type of SV must be &amp;gt;= &lt;code&gt;SVt_PVMG&lt;/code&gt;. See &lt;code&gt;&lt;a href=&quot;#sv_magic&quot;&gt;&quot;sv_magic&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">値がSVから取得される前に魔法を実行します。SVのタイプは&amp;gt; = &lt;code&gt;SVt_PVMG&lt;/code&gt; である必要があります。 &lt;code&gt;&lt;a href=&quot;#sv_magic&quot;&gt;&quot;sv_magic&quot;&lt;/a&gt;&lt;/code&gt; 参照してください。</target>
        </trans-unit>
        <trans-unit id="cee9756153198a0ee3de2adeb5f31d39d574306f" translate="yes" xml:space="preserve">
          <source>Do magic before a value is retrieved from the SV. The type of SV must be &amp;gt;= SVt_PVMG. See &lt;code&gt;sv_magic&lt;/code&gt; .</source>
          <target state="translated">SVから値を取得する前に魔法をかけます。SVのタイプは&amp;gt; = SVt_PVMGでなければなりません。 &lt;code&gt;sv_magic&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="fef68e8141e36a039846619d70d364b0a422b18f" translate="yes" xml:space="preserve">
          <source>Do not assume an operating system indicates a certain compiler.</source>
          <target state="translated">オペレーティングシステムが特定のコンパイラを示していると仮定しないでください。</target>
        </trans-unit>
        <trans-unit id="985983463a214f013b7dc73c3bbb31c7e52cb234" translate="yes" xml:space="preserve">
          <source>Do not assume anything about the ordering of the characters. The lowercase letters may come before or after the uppercase letters; the lowercase and uppercase may be interlaced so that both &quot;a&quot; and &quot;A&quot; come before &quot;b&quot;; the accented and other international characters may be interlaced so that &amp;auml; comes before &quot;b&quot;. &lt;a href=&quot;Unicode::Collate&quot;&gt;Unicode::Collate&lt;/a&gt; can be used to sort this all out.</source>
          <target state="translated">文字の順序については何も想定しないでください。小文字は大文字の前または後に来る場合があります。 「a」と「A」の両方が「b」の前に来るように、小文字と大文字を組み合わせることができます。アクセント付きおよびその他の国際文字は、&amp;auml;が「b」の前に来るように織り交ぜることができます。&lt;a href=&quot;Unicode::Collate&quot;&gt;Unicode :: Collat​​e&lt;/a&gt;を使用して、これをすべて整理できます。</target>
        </trans-unit>
        <trans-unit id="4b3370a4321afc9f66c3f426894b720b8a225d1f" translate="yes" xml:space="preserve">
          <source>Do not assume anything about the ordering of the characters. The lowercase letters may come before or after the uppercase letters; the lowercase and uppercase may be interlaced so that both &quot;a&quot; and &quot;A&quot; come before &quot;b&quot;; the accented and other international characters may be interlaced so that &amp;auml; comes before &quot;b&quot;. &lt;a href=&quot;unicode/collate&quot;&gt;Unicode::Collate&lt;/a&gt; can be used to sort this all out.</source>
          <target state="translated">文字の順序については何も想定しないでください。小文字は大文字の前でも後でもかまいません。小文字と大文字をインターレースして、「a」と「A」の両方を「b」の前に置くことができます。アクセント付きおよびその他の国際文字は、&amp;auml;が「b」の前にくるようにインターレースされる場合があります。&lt;a href=&quot;unicode/collate&quot;&gt;Unicode :: Collat​​e&lt;/a&gt;を使用すると、これをすべて整理できます。</target>
        </trans-unit>
        <trans-unit id="dac7429f341d431a762410206ac5527a2c13dd2f" translate="yes" xml:space="preserve">
          <source>Do not assume that the alphabetic characters are encoded contiguously (in the numeric sense). There may be gaps. Special coding in Perl, however, guarantees that all subsets of &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr/[A-Z]/&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr/[a-z]/&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr/[0-9]/&lt;/a&gt;&lt;/code&gt; behave as expected. &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt; behaves the same for these ranges. In patterns, any ranges specified with end points using the &lt;code&gt;\N{...}&lt;/code&gt; notations ensures character set portability, but it is a bug in Perl v5.22, that this isn't true of &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">アルファベット文字が（数値的な意味で）連続してエンコードされていると想定しないでください。ギャップがあるかもしれません。ただし、Perlでの特別なコーディングにより、 &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr/[A-Z]/&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr/[a-z]/&lt;/a&gt;&lt;/code&gt; 、および &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr/[0-9]/&lt;/a&gt;&lt;/code&gt; のすべてのサブセットが期待どおりに動作することが保証されます。 &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt; はこれらの範囲で同じように動作します。パターンでは、 &lt;code&gt;\N{...}&lt;/code&gt; 表記を使用してエンドポイントで指定された範囲は文字セットの移植性を保証しますが、これはPerl v5.22のバグであり、これは &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt; は当てはまりません。</target>
        </trans-unit>
        <trans-unit id="a75bf6b99d6f2eba31de3401757108b7b74fdc1a" translate="yes" xml:space="preserve">
          <source>Do not assume that the alphabetic characters are encoded contiguously (in the numeric sense). There may be gaps. Special coding in Perl, however, guarantees that all subsets of &lt;code&gt;qr/[A-Z]/&lt;/code&gt;, &lt;code&gt;qr/[a-z]/&lt;/code&gt;, and &lt;code&gt;qr/[0-9]/&lt;/code&gt; behave as expected. &lt;a href=&quot;perlop#tr%2FSEARCHLIST%2FREPLACEMENTLIST%2Fcdsr&quot;&gt;&lt;code&gt;tr///&lt;/code&gt;&lt;/a&gt; behaves the same for these ranges. In patterns, any ranges specified with end points using the &lt;code&gt;\N{...}&lt;/code&gt; notations ensures character set portability, but it is a bug in Perl v5.22 that this isn't true of &lt;a href=&quot;perlop#tr%2FSEARCHLIST%2FREPLACEMENTLIST%2Fcdsr&quot;&gt;&lt;code&gt;tr///&lt;/code&gt;&lt;/a&gt;, fixed in v5.24.</source>
          <target state="translated">アルファベット文字が（数値の意味で）連続してエンコードされていると想定しないでください。ギャップがあるかもしれません。ただし、Perlでの特別なコーディングにより、 &lt;code&gt;qr/[A-Z]/&lt;/code&gt; 、 &lt;code&gt;qr/[a-z]/&lt;/code&gt; 、および &lt;code&gt;qr/[0-9]/&lt;/code&gt; のすべてのサブセットが期待どおりに動作することが保証されます。&lt;a href=&quot;perlop#tr%2FSEARCHLIST%2FREPLACEMENTLIST%2Fcdsr&quot;&gt; &lt;code&gt;tr///&lt;/code&gt; &lt;/a&gt;はこれらの範囲で同じように動作します。パターンでは、 &lt;code&gt;\N{...}&lt;/code&gt; 表記を使用してエンドポイントで指定された範囲は文字セットの移植性を保証しますが、これが&lt;a href=&quot;perlop#tr%2FSEARCHLIST%2FREPLACEMENTLIST%2Fcdsr&quot;&gt; &lt;code&gt;tr///&lt;/code&gt; &lt;/a&gt;当てはまらないのは、Perl v5.22のバグであり、v5で修正されています。 24。</target>
        </trans-unit>
        <trans-unit id="1f01c64ee23b1bfc4362dd512948a4c4fa009da9" translate="yes" xml:space="preserve">
          <source>Do not attempt navigation using these formulas.</source>
          <target state="translated">これらの式を使用してナビゲーションを試みないでください。</target>
        </trans-unit>
        <trans-unit id="ffd84d731582ea7d72196f877c4d6066a632e557" translate="yes" xml:space="preserve">
          <source>Do not attempt to use this class directly. It won't make sense. It's mainly here to ensure that we will be able to have pluggable grammars when TAP is expanded at some future date (plus, this stuff was really cluttering the parser).</source>
          <target state="translated">このクラスを直接使おうとしないでください。意味がありません。これは主に、将来TAPが拡張されたときに、プラグイン可能な文法を使えるようにするためのものです(それに、このクラスはパーサをごちゃごちゃにしていました)。</target>
        </trans-unit>
        <trans-unit id="a6238adeeaec74412446adc0c315e47aa64f6eff" translate="yes" xml:space="preserve">
          <source>Do not be fooled into thinking that &lt;code&gt;(SV *) 0&lt;/code&gt; is the same as &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt; . Take this code:</source>
          <target state="translated">&lt;code&gt;(SV *) 0&lt;/code&gt; は &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt; と同じであると誤解しないでください。このコードを取る：</target>
        </trans-unit>
        <trans-unit id="7c1103f3047b08f1197a26b5ad6e43e6ff29c30b" translate="yes" xml:space="preserve">
          <source>Do not be fooled into thinking that &lt;code&gt;(SV *) 0&lt;/code&gt; is the same as &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt;. Take this code:</source>
          <target state="translated">考えにだまされてはいけない &lt;code&gt;(SV *) 0&lt;/code&gt; 同じである &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt; 。このコードを取る：</target>
        </trans-unit>
        <trans-unit id="8d0eb4945ffccf75b2ca120c0b95829a0cfe963a" translate="yes" xml:space="preserve">
          <source>Do not consider &lt;a href=&quot;#getlogin&quot;&gt;&lt;code&gt;getlogin&lt;/code&gt;&lt;/a&gt; for authentication: it is not as secure as &lt;a href=&quot;#getpwuid-UID&quot;&gt;&lt;code&gt;getpwuid&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">認証に&lt;a href=&quot;#getlogin&quot;&gt; &lt;code&gt;getlogin&lt;/code&gt; &lt;/a&gt;を考慮しないでください&lt;a href=&quot;#getpwuid-UID&quot;&gt; &lt;code&gt;getpwuid&lt;/code&gt; &lt;/a&gt;ほど安全ではありません。</target>
        </trans-unit>
        <trans-unit id="97a265c0f5840a121cb5af7015adcf66dbf43685" translate="yes" xml:space="preserve">
          <source>Do not consider &lt;code&gt;&lt;a href=&quot;functions/getlogin&quot;&gt;getlogin&lt;/a&gt;&lt;/code&gt; for authentication: it is not as secure as &lt;code&gt;&lt;a href=&quot;functions/getpwuid&quot;&gt;getpwuid&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">認証に &lt;code&gt;&lt;a href=&quot;functions/getlogin&quot;&gt;getlogin&lt;/a&gt;&lt;/code&gt; を考慮しないでください &lt;code&gt;&lt;a href=&quot;functions/getpwuid&quot;&gt;getpwuid&lt;/a&gt;&lt;/code&gt; ほど安全ではありません。</target>
        </trans-unit>
        <trans-unit id="954cdfa947d07289fc8fa65c61c967074b46849c" translate="yes" xml:space="preserve">
          <source>Do not consider &lt;code&gt;&lt;a href=&quot;getlogin&quot;&gt;getlogin&lt;/a&gt;&lt;/code&gt; for authentication: it is not as secure as &lt;code&gt;&lt;a href=&quot;getpwuid&quot;&gt;getpwuid&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">認証に &lt;code&gt;&lt;a href=&quot;getlogin&quot;&gt;getlogin&lt;/a&gt;&lt;/code&gt; を考慮しないでください &lt;code&gt;&lt;a href=&quot;getpwuid&quot;&gt;getpwuid&lt;/a&gt;&lt;/code&gt; ほど安全ではありません。</target>
        </trans-unit>
        <trans-unit id="2ed5342da7dbe2644918b11220f17d8dfd65b045" translate="yes" xml:space="preserve">
          <source>Do not create header and footer blocks containing the text of the &quot;NAME&quot; section (default behaviour).</source>
          <target state="translated">NAME」セクションのテキストを含むヘッダーとフッターブロックを作成しないようにしてください(デフォルトの動作)。</target>
        </trans-unit>
        <trans-unit id="de14526162a79000113ce8e06bb2051044d9251f" translate="yes" xml:space="preserve">
          <source>Do not declare variables using &quot;register&quot;. It may be counterproductive with modern compilers, and is deprecated in C++, under which the Perl source is regularly compiled.</source>
          <target state="translated">register &quot;を使って変数を宣言しないでください。最近のコンパイラでは逆効果になる可能性があり、Perlのソースが定期的にコンパイルされているC++では非推奨とされています。</target>
        </trans-unit>
        <trans-unit id="ba5b70f1f2a742c5a3d1b2680eb5b21ac617899b" translate="yes" xml:space="preserve">
          <source>Do not display progress messages (default behaviour).</source>
          <target state="translated">進行状況メッセージを表示しない(デフォルトの動作)。</target>
        </trans-unit>
        <trans-unit id="1d7af785bc11d859051058972cf4b5ed10f4c0f8" translate="yes" xml:space="preserve">
          <source>Do not expect clock_nanosleep() to be exact down to one nanosecond. Getting even accuracy of one thousand nanoseconds is good.</source>
          <target state="translated">clock_nanosleep()が1ナノ秒までの正確さを期待してはいけません。1,000ナノ秒の精度を得ることは良いことです。</target>
        </trans-unit>
        <trans-unit id="80ec845571b8ce066af485fa387b9e2c22cdbd4a" translate="yes" xml:space="preserve">
          <source>Do not expect nanosleep() to be exact down to one nanosecond. Getting even accuracy of one thousand nanoseconds is good.</source>
          <target state="translated">nanosleep()が1ナノ秒までの正確さを期待してはいけません。1,000ナノ秒の精度を得ることは良いことです。</target>
        </trans-unit>
        <trans-unit id="338f71d7cfd94a546bf46d57c343edb97e29ec06" translate="yes" xml:space="preserve">
          <source>Do not expect usleep() to be exact down to one microsecond.</source>
          <target state="translated">usleep()が 1 マイクロ秒以下の精度であることを期待してはいけません。</target>
        </trans-unit>
        <trans-unit id="44e00d89042b21b82ae04db4fd6686e52864a5db" translate="yes" xml:space="preserve">
          <source>Do not forget the space before the trailing quote.</source>
          <target state="translated">最後の引用符の前のスペースを忘れないでください。</target>
        </trans-unit>
        <trans-unit id="9d53664ee8f6d26a9c8d6d37ac533d0c8503e6c4" translate="yes" xml:space="preserve">
          <source>Do not forget to edit the documentation in the generated</source>
          <target state="translated">生成された</target>
        </trans-unit>
        <trans-unit id="b67a0bd0d26a82b3f8dae502cde36d9a68951db6" translate="yes" xml:space="preserve">
          <source>Do not generate an index at the top of the HTML file.</source>
          <target state="translated">HTMLファイルの先頭にインデックスを生成しないようにしてください。</target>
        </trans-unit>
        <trans-unit id="38ca653276acaef35211b0a7de47674e374897b5" translate="yes" xml:space="preserve">
          <source>Do not have two files or directories of the same name with different case, like</source>
          <target state="translated">のように、同じ名前のファイルやディレクトリを2つ持っていないようにしてください。</target>
        </trans-unit>
        <trans-unit id="4798c1787e0a45ddf70984856d2f84815abcefdc" translate="yes" xml:space="preserve">
          <source>Do not include a &quot;POD ERRORS&quot; section in the outfile if there were any POD errors in the infile.</source>
          <target state="translated">インファイルにPODエラーがあった場合は、アウトファイルに「POD ERRORS」セクションを含めないでください。</target>
        </trans-unit>
        <trans-unit id="6ca27b97c73fed9f5b2e6cce84e318595e25670f" translate="yes" xml:space="preserve">
          <source>Do not introduce any modifiable globals, truly global or file static. They are bad form and complicate multithreading and other forms of concurrency. The right way is to introduce them as new interpreter variables, see</source>
          <target state="translated">変更可能なグローバル、真のグローバル、またはファイル・スタティック・グローバルを導入しないでください。これらは形式が悪く、マルチスレッドや他の形式の同時実行を複雑にします。正しい方法は、新しいインタープリタ変数として導入することです。</target>
        </trans-unit>
        <trans-unit id="e51bfe77f027c25ed0e3d1d5fbab77e6ab860dc6" translate="yes" xml:space="preserve">
          <source>Do not lock record.</source>
          <target state="translated">レコードをロックしないでください。</target>
        </trans-unit>
        <trans-unit id="54f5276ef8bc6c0a7b535c715233a2e4ff4dd5a6" translate="yes" xml:space="preserve">
          <source>Do not memoize a function that returns a data structure that is modified by its caller.</source>
          <target state="translated">呼び出し元によって変更されたデータ構造体を返す関数をメモしてはいけません。</target>
        </trans-unit>
        <trans-unit id="e822f96782fa84026c016723c451c6a59923a48c" translate="yes" xml:space="preserve">
          <source>Do not memoize a function whose behavior depends on program state other than its own arguments, such as global variables, the time of day, or file input. These functions will not produce correct results when memoized. For a particularly easy example:</source>
          <target state="translated">グローバル変数や時刻、ファイル入力など、引数以外のプログラム状態に依存する関数はメモしないでください。これらの関数をメモしても正しい結果は得られません。特に簡単な例を参照してください。</target>
        </trans-unit>
        <trans-unit id="cccff3ab93f1bd49939696cce81af2a0a2097134" translate="yes" xml:space="preserve">
          <source>Do not memoize a function with side effects.</source>
          <target state="translated">副作用のある機能をメモしてはいけません。</target>
        </trans-unit>
        <trans-unit id="6f726dd9ddd72becc842f9b1d89ed1bf585b4d7a" translate="yes" xml:space="preserve">
          <source>Do not memoize a very simple function.</source>
          <target state="translated">非常にシンプルな機能をメモしてはいけません。</target>
        </trans-unit>
        <trans-unit id="fd85d472df120b1759d38d84f5ed138af9b0de90" translate="yes" xml:space="preserve">
          <source>Do not mix national standard encodings and the corresponding vendor encodings.</source>
          <target state="translated">国家標準のエンコーディングと対応するベンダのエンコーディングを混在させないでください。</target>
        </trans-unit>
        <trans-unit id="f1f5b43293b4ad26b77bf89ae0381b7ae81019b9" translate="yes" xml:space="preserve">
          <source>Do not pass both this and --htmldir to pod2html; they are mutually exclusive.</source>
          <target state="translated">これと --htmldir の両方を pod2html に渡してはいけません。</target>
        </trans-unit>
        <trans-unit id="b60ea56f9acc75f558cf56cbb9626f5aa57e337f" translate="yes" xml:space="preserve">
          <source>Do not read more than &lt;code&gt;limit&lt;/code&gt; files. This is useful if you have very big archives, and are only interested in the first few files.</source>
          <target state="translated">&lt;code&gt;limit&lt;/code&gt; 超えるファイルを読み取らないでください。これは、非常に大きなアーカイブがあり、最初のいくつかのファイルのみに関心がある場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="8baaf0ce4e3be10a125ad22cfd7dc50cf9094c82" translate="yes" xml:space="preserve">
          <source>Do not recurse into subdirectories specified in podpath.</source>
          <target state="translated">podpath で指定されたサブディレクトリに再帰しないようにしてください。</target>
        </trans-unit>
        <trans-unit id="63bb032139528a610599b19949f74327a9b3d07c" translate="yes" xml:space="preserve">
          <source>Do not suspend the calling process until a child process changes state but instead return immediately.</source>
          <target state="translated">子プロセスの状態が変化するまで、呼び出し中のプロセスを中断せず、すぐに戻るようにします。</target>
        </trans-unit>
        <trans-unit id="cc3c9b6d0dcbb389a5572aa10025ef0cf98475e2" translate="yes" xml:space="preserve">
          <source>Do not test modules. Simply install them.</source>
          <target state="translated">モジュールのテストはしないでください。単純にインストールしてください。</target>
        </trans-unit>
        <trans-unit id="a0d9cf144653df2138cfdb4728cb23fd840b488d" translate="yes" xml:space="preserve">
          <source>Do not try to be clever to insert some operations in between switching libraries:</source>
          <target state="translated">ライブラリの切り替えの合間にいくつかの操作を挿入するような巧妙なことはしないでください。</target>
        </trans-unit>
        <trans-unit id="f892507590fee4ad20d4412e6f8474b573affb0c" translate="yes" xml:space="preserve">
          <source>Do not try to use Perl's malloc, this will lead into very mysterious errors (especially with -Duse64bitall).</source>
          <target state="translated">Perl の malloc を使用しようとしないでください。</target>
        </trans-unit>
        <trans-unit id="481206675cc8f49efb63fbf5922ecb2459573ace" translate="yes" xml:space="preserve">
          <source>Do not turn =head1 directives into links pointing to the top of the HTML file (default behaviour).</source>
          <target state="translated">head1 ディレクティブを HTML ファイルの先頭を指すリンクにしないようにします (デフォルトの動作)。</target>
        </trans-unit>
        <trans-unit id="baca6e9f8deaa5a05e4ab2ba4c839ab683b10546" translate="yes" xml:space="preserve">
          <source>Do not turn on the compiler optimization flag &quot;-O&quot;. There is a bug in either the optimizer or perl that causes perl to not work correctly when the optimizer is on.</source>
          <target state="translated">コンパイラ最適化フラグ&quot;-O &quot;をオンにしないでください。オプティマイザかPerlのどちらかにバグがあり、オプティマイザがオンのときにPerlが正常に動作しないことがあります。</target>
        </trans-unit>
        <trans-unit id="cf13f467e0d1a8315ca7018884458feaa725238a" translate="yes" xml:space="preserve">
          <source>Do not use &lt;a href=&quot;#tell-FILEHANDLE&quot;&gt;&lt;code&gt;tell&lt;/code&gt;&lt;/a&gt; (or other buffered I/O operations) on a filehandle that has been manipulated by &lt;a href=&quot;#sysread-FILEHANDLE%2CSCALAR%2CLENGTH%2COFFSET&quot;&gt;&lt;code&gt;sysread&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#syswrite-FILEHANDLE%2CSCALAR%2CLENGTH%2COFFSET&quot;&gt;&lt;code&gt;syswrite&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;#sysseek-FILEHANDLE%2CPOSITION%2CWHENCE&quot;&gt;&lt;code&gt;sysseek&lt;/code&gt;&lt;/a&gt;. Those functions ignore the buffering, while &lt;a href=&quot;#tell-FILEHANDLE&quot;&gt;&lt;code&gt;tell&lt;/code&gt;&lt;/a&gt; does not.</source>
          <target state="translated">&lt;a href=&quot;#sysread-FILEHANDLE%2CSCALAR%2CLENGTH%2COFFSET&quot;&gt; &lt;code&gt;sysread&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#syswrite-FILEHANDLE%2CSCALAR%2CLENGTH%2COFFSET&quot;&gt; &lt;code&gt;syswrite&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;#sysseek-FILEHANDLE%2CPOSITION%2CWHENCE&quot;&gt; &lt;code&gt;sysseek&lt;/code&gt; &lt;/a&gt;によって操作されたファイルハンドルで&lt;a href=&quot;#tell-FILEHANDLE&quot;&gt; &lt;code&gt;tell&lt;/code&gt; &lt;/a&gt;（または他のバッファI / O操作）を使用しないでください。これらの関数はバッファリングを無視し&lt;a href=&quot;#tell-FILEHANDLE&quot;&gt; &lt;code&gt;tell&lt;/code&gt; &lt;/a&gt;が、tellは無視しません。</target>
        </trans-unit>
        <trans-unit id="ee94e7e413fa452436aa9dabe06f090ccc39d625" translate="yes" xml:space="preserve">
          <source>Do not use &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; with &lt;code&gt;p&lt;/code&gt; or &lt;code&gt;P&lt;/code&gt; to obtain the address of variable that's bound to go out of scope (and thereby freeing its memory) before you are done with using the memory at that address.</source>
          <target state="translated">そのアドレスでのメモリの使用を終了する前に、 &lt;code&gt;p&lt;/code&gt; または &lt;code&gt;P&lt;/code&gt; で &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; を使用して、スコープ外に移動するようバインドされている変数のアドレスを取得しないでください（その結果、そのメモリが解放されます）。</target>
        </trans-unit>
        <trans-unit id="04f9b0d0e8adfb1713c31734eee9cfdb17586771" translate="yes" xml:space="preserve">
          <source>Do not use &lt;code&gt;Devel::PPPort&lt;/code&gt; : no portability to older version.</source>
          <target state="translated">&lt;code&gt;Devel::PPPort&lt;/code&gt; 使用しないでください。古いバージョンへの移植性はありません。</target>
        </trans-unit>
        <trans-unit id="a872eb635c2d93ae189c131b6f69ac342b7e057e" translate="yes" xml:space="preserve">
          <source>Do not use &lt;code&gt;Devel::PPPort&lt;/code&gt;: no portability to older version.</source>
          <target state="translated">&lt;code&gt;Devel::PPPort&lt;/code&gt; 使用しないでください：古いバージョンへの移植性はありません。</target>
        </trans-unit>
        <trans-unit id="498daddca0a46e6c4fa2a6956b5ad47910b93411" translate="yes" xml:space="preserve">
          <source>Do not use &lt;code&gt;Exporter&lt;/code&gt; and/or export any symbol.</source>
          <target state="translated">&lt;code&gt;Exporter&lt;/code&gt; を使用したり、シンボルをエクスポートしたりしないでください。</target>
        </trans-unit>
        <trans-unit id="ed6a2111bf29f957b88dbf31031d37b896f3ce10" translate="yes" xml:space="preserve">
          <source>Do not use &lt;code&gt;SvGROW&lt;/code&gt; or &lt;code&gt;sv_grow&lt;/code&gt; directly on &lt;code&gt;PL_parser-&amp;gt;linestr&lt;/code&gt; ; this function updates all of the lexer's variables that point directly into the buffer.</source>
          <target state="translated">&lt;code&gt;PL_parser-&amp;gt;linestr&lt;/code&gt; で &lt;code&gt;SvGROW&lt;/code&gt; または &lt;code&gt;sv_grow&lt;/code&gt; を直接使用しないでください。この関数は、バッファーを直接指すすべてのレクサーの変数を更新します。</target>
        </trans-unit>
        <trans-unit id="6ffb1644a8db78c7b9888f1d7b9c3acd628b9c91" translate="yes" xml:space="preserve">
          <source>Do not use &lt;code&gt;SvGROW&lt;/code&gt; or &lt;code&gt;sv_grow&lt;/code&gt; directly on &lt;code&gt;PL_parser-&amp;gt;linestr&lt;/code&gt;; this function updates all of the lexer's variables that point directly into the buffer.</source>
          <target state="translated">&lt;code&gt;PL_parser-&amp;gt;linestr&lt;/code&gt; で &lt;code&gt;SvGROW&lt;/code&gt; または &lt;code&gt;sv_grow&lt;/code&gt; を直接使用しないでください。この関数は、バッファーを直接指すレクサーのすべての変数を更新します。</target>
        </trans-unit>
        <trans-unit id="a9409f88b2adf4591642dab86ad2da8974e6989d" translate="yes" xml:space="preserve">
          <source>Do not use &lt;code&gt;pack&lt;/code&gt; with &lt;code&gt;p&lt;/code&gt; or &lt;code&gt;P&lt;/code&gt; to obtain the address of variable that's bound to go out of scope (and thereby freeing its memory) before you are done with using the memory at that address.</source>
          <target state="translated">そのアドレスのメモリの使用を終了する前に、 &lt;code&gt;p&lt;/code&gt; または &lt;code&gt;P&lt;/code&gt; とともに &lt;code&gt;pack&lt;/code&gt; を使用して、スコープ外になる（したがってメモリを解放する）変数のアドレスを取得しないでください。</target>
        </trans-unit>
        <trans-unit id="e1a5c62a2aaf2f678ca9cf51949611595cacf102" translate="yes" xml:space="preserve">
          <source>Do not use NDBM_File or ODBM_File on FAT filesystem. They can be built on a FAT filesystem, but many tests will fail:</source>
          <target state="translated">FATファイルシステム上でNDBM_FileやODBM_Fileを使用しないでください。これらはFATファイルシステム上でビルドすることができますが、多くのテストは失敗します。</target>
        </trans-unit>
        <trans-unit id="ae38cf9dd649500630593bae7198d4a9f398f12d" translate="yes" xml:space="preserve">
          <source>Do not use atoi()</source>
          <target state="translated">atoi()を使用しないでください。</target>
        </trans-unit>
        <trans-unit id="753e9d05d3a5b0152e6076319f72132b8b3a599b" translate="yes" xml:space="preserve">
          <source>Do not use either the bare result of &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;(&quot;N&quot;, 10, 20, 30, 40)&lt;/code&gt; or bare v-strings (such as &lt;code&gt;v10.20.30.40&lt;/code&gt; ) to represent IPv4 addresses: both forms just pack the four bytes into network order. That this would be equal to the C language &lt;code&gt;in_addr&lt;/code&gt; struct (which is what the socket code internally uses) is not guaranteed. To be portable use the routines of the &lt;code&gt;Socket&lt;/code&gt; extension, such as &lt;code&gt;inet_aton()&lt;/code&gt; , &lt;code&gt;inet_ntoa()&lt;/code&gt; , and &lt;code&gt;sockaddr_in()&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;(&quot;N&quot;, 10, 20, 30, 40)&lt;/code&gt; の裸の結果（ &quot;N&quot;、 &lt;code&gt;v10.20.30.40&lt;/code&gt; ）または裸のv文字列（v10.20.30.40など）を使用してIPv4アドレスを表さないでください。どちらの形式も4バイトをネットワークにパックするだけです。注文。これがC言語の &lt;code&gt;in_addr&lt;/code&gt; 構造体（ソケットコードが内部で使用するもの）と等しいことは保証されません。移植性を &lt;code&gt;inet_aton()&lt;/code&gt; は、 &lt;code&gt;Socket&lt;/code&gt; 拡張のルーチン（inet_aton（）、 &lt;code&gt;inet_ntoa()&lt;/code&gt; 、 &lt;code&gt;sockaddr_in()&lt;/code&gt; など)を使用します。</target>
        </trans-unit>
        <trans-unit id="670907405e506824a37f5702fabe0894b4257347" translate="yes" xml:space="preserve">
          <source>Do not use either the bare result of &lt;code&gt;pack(&quot;N&quot;, 10, 20, 30, 40)&lt;/code&gt; or bare v-strings (such as &lt;code&gt;v10.20.30.40&lt;/code&gt;) to represent IPv4 addresses: both forms just pack the four bytes into network order. That this would be equal to the C language &lt;code&gt;in_addr&lt;/code&gt; struct (which is what the socket code internally uses) is not guaranteed. To be portable use the routines of the &lt;a href=&quot;socket&quot;&gt;&lt;code&gt;Socket&lt;/code&gt;&lt;/a&gt; module, such as &lt;a href=&quot;socket#%24ip_address-%3D-inet_aton-%24string&quot;&gt;&lt;code&gt;inet_aton&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;socket#%24string-%3D-inet_ntoa-%24ip_address&quot;&gt;&lt;code&gt;inet_ntoa&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;socket#%24sockaddr-%3D-sockaddr_in-%24port%2C-%24ip_address&quot;&gt;&lt;code&gt;sockaddr_in&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;pack(&quot;N&quot;, 10, 20, 30, 40)&lt;/code&gt; &lt;code&gt;v10.20.30.40&lt;/code&gt; ）の裸の結果または裸のv文字列（v10.20.30.40など）のいずれもIPv4アドレスを表すために使用しないでください。どちらの形式も4バイトをネットワークにパックするだけです。注文。これがC言語の &lt;code&gt;in_addr&lt;/code&gt; 構造体（ソケットコードが内部で使用するもの）と等しいことは保証されていません。移植可能にするには、&lt;a href=&quot;socket#%24ip_address-%3D-inet_aton-%24string&quot;&gt; &lt;code&gt;inet_aton&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;socket#%24string-%3D-inet_ntoa-%24ip_address&quot;&gt; &lt;code&gt;inet_ntoa&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;socket#%24sockaddr-%3D-sockaddr_in-%24port%2C-%24ip_address&quot;&gt; &lt;code&gt;sockaddr_in&lt;/code&gt; &lt;/a&gt;などの&lt;a href=&quot;socket&quot;&gt; &lt;code&gt;Socket&lt;/code&gt; &lt;/a&gt;モジュールのルーチンを使用します。</target>
        </trans-unit>
        <trans-unit id="88c49bf9327996053a0622ba64f5585438822ebb" translate="yes" xml:space="preserve">
          <source>Do not use gets()</source>
          <target state="translated">gets()を使用しないでください。</target>
        </trans-unit>
        <trans-unit id="009b2718b3e778a1ac506ede5182cb2fe171f56c" translate="yes" xml:space="preserve">
          <source>Do not use regexes. Use a module and forget about the regular expressions. The &lt;a href=&quot;XML::LibXML&quot;&gt;XML::LibXML&lt;/a&gt;, &lt;a href=&quot;HTML::TokeParser&quot;&gt;HTML::TokeParser&lt;/a&gt; and &lt;a href=&quot;HTML::TreeBuilder&quot;&gt;HTML::TreeBuilder&lt;/a&gt; modules are good starts, although each namespace has other parsing modules specialized for certain tasks and different ways of doing it. Start at CPAN Search ( &lt;a href=&quot;http://metacpan.org/&quot;&gt;http://metacpan.org/&lt;/a&gt; ) and wonder at all the work people have done for you already! :)</source>
          <target state="translated">正規表現は使用しないでください。モジュールを使用して、正規表現を忘れてください。&lt;a href=&quot;XML::LibXML&quot;&gt;XML ::のlibxml&lt;/a&gt;、&lt;a href=&quot;HTML::TokeParser&quot;&gt;HTML :: TokeParser&lt;/a&gt;と&lt;a href=&quot;HTML::TreeBuilder&quot;&gt;HTML :: TreeBuilder&lt;/a&gt;各名前空間は、特定のタスクとそれを行うためのさまざまな方法に特化し、他の構文解析モジュールを有しているが、モジュールは、良い開始されています。 CPAN Search（&lt;a href=&quot;http://metacpan.org/&quot;&gt;http://metacpan.org/&lt;/a&gt;）から始めて、人々があなたのためにすでに行ったすべての作業に疑問を持ってください！ :)</target>
        </trans-unit>
        <trans-unit id="e05df4e656db7dd388d518939d40279c56ee1258" translate="yes" xml:space="preserve">
          <source>Do not use regexes. Use a module and forget about the regular expressions. The &lt;a href=&quot;http://search.cpan.org/perldoc/XML::LibXML&quot;&gt;XML::LibXML&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/HTML::TokeParser&quot;&gt;HTML::TokeParser&lt;/a&gt; and &lt;a href=&quot;http://search.cpan.org/perldoc/HTML::TreeBuilder&quot;&gt;HTML::TreeBuilder&lt;/a&gt; modules are good starts, although each namespace has other parsing modules specialized for certain tasks and different ways of doing it. Start at CPAN Search ( &lt;a href=&quot;http://metacpan.org/&quot;&gt;http://metacpan.org/&lt;/a&gt; ) and wonder at all the work people have done for you already! :)</source>
          <target state="translated">正規表現を使用しないでください。モジュールを使用して、正規表現を忘れてください。&lt;a href=&quot;http://search.cpan.org/perldoc/XML::LibXML&quot;&gt;XML ::のlibxml&lt;/a&gt;、&lt;a href=&quot;http://search.cpan.org/perldoc/HTML::TokeParser&quot;&gt;HTML :: TokeParser&lt;/a&gt;と&lt;a href=&quot;http://search.cpan.org/perldoc/HTML::TreeBuilder&quot;&gt;HTML :: TreeBuilder&lt;/a&gt;各名前空間は、特定のタスクとそれを行うためのさまざまな方法に特化し、他の構文解析モジュールを有しているが、モジュールは、良い開始されています。 CPAN Search（&lt;a href=&quot;http://metacpan.org/&quot;&gt;http://metacpan.org/&lt;/a&gt;）から始めて、人々があなたのためにすでに行ったすべての仕事に疑問を抱いてください！ :)</target>
        </trans-unit>
        <trans-unit id="cce861955ad84aadd4244ab8f88800ca7035ea2a" translate="yes" xml:space="preserve">
          <source>Do not use something like &lt;code&gt;\b=head\d\b&lt;/code&gt; and expect it to match the beginning of a line. It can't, because for there to be a boundary before the non-word &quot;=&quot;, there must be a word character immediately previous. All plain &lt;code&gt;\b&lt;/code&gt; and &lt;code&gt;\B&lt;/code&gt; boundary determinations look for word characters alone, not for non-word characters nor for string ends. It may help to understand how &amp;lt;\b&amp;gt; and &amp;lt;\B&amp;gt; work by equating them as follows:</source>
          <target state="translated">&lt;code&gt;\b=head\d\b&lt;/code&gt; ようなものを使用しないでください。また、行の先頭と一致すると期待してください。非単語「=」の前に境界が存在するためには、直前に単語文字がなければならないため、それはできません。すべての単純な &lt;code&gt;\b&lt;/code&gt; および &lt;code&gt;\B&lt;/code&gt; 境界決定は、単語以外の文字や文字列の終わりではなく、単語の文字のみを探します。&amp;lt;\ b&amp;gt;と&amp;lt;\ B&amp;gt;を次のように同等にすることで、それらがどのように機能するかを理解するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="62ce5cca500c59eee5b0b9a43620a2697e00cf5b" translate="yes" xml:space="preserve">
          <source>Do not use something like &lt;code&gt;\b=head\d\b&lt;/code&gt; and expect it to match the beginning of a line. It can't, because for there to be a boundary before the non-word &quot;=&quot;, there must be a word character immediately previous. All plain &lt;code&gt;\b&lt;/code&gt; and &lt;code&gt;\B&lt;/code&gt; boundary determinations look for word characters alone, not for non-word characters nor for string ends. It may help to understand how &lt;code&gt;\b&lt;/code&gt; and &lt;code&gt;\B&lt;/code&gt; work by equating them as follows:</source>
          <target state="translated">&lt;code&gt;\b=head\d\b&lt;/code&gt; ようなものを使用せず、行の先頭と一致することを期待してください。単語以外の「=」の前に境界があるため、直前に単語文字が必要であるため、できません。すべてのプレーンな &lt;code&gt;\b&lt;/code&gt; および &lt;code&gt;\B&lt;/code&gt; 境界の決定では、単語以外の文字や文字列の終わりではなく、単語の文字のみが検索されます。 &lt;code&gt;\b&lt;/code&gt; と &lt;code&gt;\B&lt;/code&gt; どのように機能するかを理解するには、次のように等しくすることが役立ちます。</target>
        </trans-unit>
        <trans-unit id="f1a735190dab11e5d0be16372e2f20beebf57de6" translate="yes" xml:space="preserve">
          <source>Do not use sprintf() or vsprintf()</source>
          <target state="translated">sprintf()や vsprintf()は使用しないでください。</target>
        </trans-unit>
        <trans-unit id="bd8826a15f100149be24539f62f1590d0529bde4" translate="yes" xml:space="preserve">
          <source>Do not use strcpy() or strcat() or strncpy() or strncat()</source>
          <target state="translated">strcpy()や strcat()や strncpy()や strncat()を使用しないでください。</target>
        </trans-unit>
        <trans-unit id="e845e1c460c616232a9c91d7dbd84468956485b4" translate="yes" xml:space="preserve">
          <source>Do not use strtol() or strtoul()</source>
          <target state="translated">strtol()や strtoul()は使用しないでください。</target>
        </trans-unit>
        <trans-unit id="0c29194c83ffb8c5f50d4977f6ee065d347bf4fe" translate="yes" xml:space="preserve">
          <source>Do not use tell() (or other buffered I/O operations) on a filehandle that has been manipulated by sysread(), syswrite(), or sysseek(). Those functions ignore the buffering, while tell() does not.</source>
          <target state="translated">sysread()、syswrite()、sysseek()によって操作されたファイルハンドル上で tell()(または他のバッファリングされた I/O 操作)を使用しないでください。これらの関数はバッファリングを無視しますが、 tell()は無視しません。</target>
        </trans-unit>
        <trans-unit id="3950da255e2df8ad19b4abdbb628393b5e27d661" translate="yes" xml:space="preserve">
          <source>Do not use the module &lt;code&gt;AutoLoader&lt;/code&gt; ; but keep the constant() function and &lt;code&gt;sub AUTOLOAD&lt;/code&gt; for constants.</source>
          <target state="translated">&lt;code&gt;AutoLoader&lt;/code&gt; モジュールは使用しないでください。ただし、constant（）関数と定数の &lt;code&gt;sub AUTOLOAD&lt;/code&gt; を保持します。</target>
        </trans-unit>
        <trans-unit id="912ab3455d8c5c0450b953f7e2828e24748220b7" translate="yes" xml:space="preserve">
          <source>Do not use the module &lt;code&gt;AutoLoader&lt;/code&gt;; but keep the constant() function and &lt;code&gt;sub AUTOLOAD&lt;/code&gt; for constants.</source>
          <target state="translated">モジュール &lt;code&gt;AutoLoader&lt;/code&gt; を使用しないでください; ただし、constant（）関数と定数の &lt;code&gt;sub AUTOLOAD&lt;/code&gt; は保持します。</target>
        </trans-unit>
        <trans-unit id="f50e07201ab25152f3dfb27ad57d827f044d1f3b" translate="yes" xml:space="preserve">
          <source>Do not use the pragma &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; vmsish 'status'&lt;/code&gt; with &lt;code&gt;PERL_VMS_POSIX_EXIT&lt;/code&gt; enabled, as they are at times requesting conflicting actions and the consequence of ignoring this advice will be undefined to allow future improvements in the POSIX exit handling.</source>
          <target state="translated">&lt;code&gt;PERL_VMS_POSIX_EXIT&lt;/code&gt; を有効にしてプラグマ &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; vmsish 'status'&lt;/code&gt; を使用しないでください。これらは競合するアクションを要求することがあり、このアドバイスを無視した結果は、POSIX出口処理の将来の改善を可能にするために定義されません。</target>
        </trans-unit>
        <trans-unit id="a4b31e073c7486c8b49c926ffd1a1a8bd9366cae" translate="yes" xml:space="preserve">
          <source>Do not use the pragma &lt;code&gt;strict&lt;/code&gt; .</source>
          <target state="translated">プラグマ &lt;code&gt;strict&lt;/code&gt; は使用しないでください。</target>
        </trans-unit>
        <trans-unit id="641b8fbe523a923ae74b945dc21791f043e517c9" translate="yes" xml:space="preserve">
          <source>Do not use the pragma &lt;code&gt;strict&lt;/code&gt;.</source>
          <target state="translated">プラグマ &lt;code&gt;strict&lt;/code&gt; は使用しないでください。</target>
        </trans-unit>
        <trans-unit id="2dec976bdd8c59124a07d2c19d3a7e30fa3ccc83" translate="yes" xml:space="preserve">
          <source>Do not use the pragma &lt;code&gt;use vmsish 'status'&lt;/code&gt; with &lt;code&gt;PERL_VMS_POSIX_EXIT&lt;/code&gt; enabled, as they are at times requesting conflicting actions and the consequence of ignoring this advice will be undefined to allow future improvements in the POSIX exit handling.</source>
          <target state="translated">プラグマは使用しないでください &lt;code&gt;use vmsish 'status'&lt;/code&gt; と &lt;code&gt;PERL_VMS_POSIX_EXIT&lt;/code&gt; が、彼らは時には矛盾する行動を要求しているとして、有効になっており、このアドバイスを無視しての結果は、POSIX出口取り扱いにおける今後の改善を可能にするために定義されません。</target>
        </trans-unit>
        <trans-unit id="d6facf91ee978da40dfe9d3ea865ab1579d25d93" translate="yes" xml:space="preserve">
          <source>Do not use the pragma &lt;code&gt;warnings&lt;/code&gt; .</source>
          <target state="translated">プラグマ &lt;code&gt;warnings&lt;/code&gt; 使用しないでください。</target>
        </trans-unit>
        <trans-unit id="8d90d3b3ad8de8885139d7ed539bfdc6ccdd394d" translate="yes" xml:space="preserve">
          <source>Do not use the pragma &lt;code&gt;warnings&lt;/code&gt;.</source>
          <target state="translated">プラグマ &lt;code&gt;warnings&lt;/code&gt; は使用しないでください。</target>
        </trans-unit>
        <trans-unit id="dee89e95287669bbd88a11a6aea3e7aa1e7bbfb6" translate="yes" xml:space="preserve">
          <source>Do not use this and --htmlroot in the same call to pod2html; they are mutually exclusive.</source>
          <target state="translated">これと --htmlroot を同じ呼び出しで pod2html に使用してはいけません。</target>
        </trans-unit>
        <trans-unit id="3250376779b0f67e8134deb8086f1402809e9bc8" translate="yes" xml:space="preserve">
          <source>Do not use this as a separator between directories. Some operating systems use different separators between subdirectories as between directories and filenames (for example: VOLUME:[dir1.dir2]file on VMS).</source>
          <target state="translated">これをディレクトリ間の区切り文字として使用しないでください。オペレーティングシステムによっては、ディレクトリとファイル名の間のように、サブディレクトリ間で異なる区切り文字を使用するものがあります(例:VOLUME:[dir1.dir2]ファイル(VMSではVOLUME))。</target>
        </trans-unit>
        <trans-unit id="164086a0ac238b7870e606cc1d29ce266a3011d7" translate="yes" xml:space="preserve">
          <source>Do not use this if relative links are desired: use --htmldir instead.</source>
          <target state="translated">相対リンクが必要な場合はこれを使用しないでください:代わりに --htmldir を使用してください。</target>
        </trans-unit>
        <trans-unit id="3c5af5b31b181ed54cc1fca5572f9386a6984c19" translate="yes" xml:space="preserve">
          <source>Do not use this to run perl: &lt;code&gt;INCLUDE: perl |&lt;/code&gt; will run the perl that happens to be the first in your path and not necessarily the same perl that is used to run &lt;code&gt;xsubpp&lt;/code&gt; . See &lt;a href=&quot;#The-INCLUDE_COMMAND%3a-Keyword&quot;&gt;The INCLUDE_COMMAND: Keyword&lt;/a&gt;.</source>
          <target state="translated">これを使用してperlを実行しないでください： &lt;code&gt;INCLUDE: perl |&lt;/code&gt; たまたまパスの最初にあるperlを実行しますが、必ずしも &lt;code&gt;xsubpp&lt;/code&gt; の実行に使用されるのと同じperlではありません。&lt;a href=&quot;#The-INCLUDE_COMMAND%3a-Keyword&quot;&gt;INCLUDE_COMMAND：キーワードを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="d907817f14386897f00b03e673b42b77a7d2a197" translate="yes" xml:space="preserve">
          <source>Do not use this to run perl: &lt;code&gt;INCLUDE: perl |&lt;/code&gt; will run the perl that happens to be the first in your path and not necessarily the same perl that is used to run &lt;code&gt;xsubpp&lt;/code&gt;. See &lt;a href=&quot;#The-INCLUDE_COMMAND%3A-Keyword&quot;&gt;&quot;The INCLUDE_COMMAND: Keyword&quot;&lt;/a&gt;.</source>
          <target state="translated">これを使用してperlを実行しないでください： &lt;code&gt;INCLUDE: perl |&lt;/code&gt; パスの最初にあるperlを実行しますが、 &lt;code&gt;xsubpp&lt;/code&gt; の実行に使用されるものと必ずしも同じではありません。&lt;a href=&quot;#The-INCLUDE_COMMAND%3A-Keyword&quot;&gt;「INCLUDE_COMMAND：キーワード」を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="89f8b5ad3c1702cca1a4d40affd9cb729f0e90f7" translate="yes" xml:space="preserve">
          <source>Do not use this.</source>
          <target state="translated">使わないでください。</target>
        </trans-unit>
        <trans-unit id="82165a1e97cf695c1ce626d1d090403bda43151a" translate="yes" xml:space="preserve">
          <source>Do not use tmpfile()</source>
          <target state="translated">tmpfile()を使用しないでください。</target>
        </trans-unit>
        <trans-unit id="67066fdeeb8477f689c49a4d9d531e1c38c3d6bc" translate="yes" xml:space="preserve">
          <source>Do not use with other Perl types such as HV, AV, SV, CV, because those objects will become corrupted by the pointer copy process.</source>
          <target state="translated">HV,AV,SV,CV のような他の Perl 型のオブジェクトはポインタコピー処理で破損するので使用しないでください。</target>
        </trans-unit>
        <trans-unit id="97d251c82a0422b70eb970d71730acc97d0587dc" translate="yes" xml:space="preserve">
          <source>Do not, however, be tempted to do this:</source>
          <target state="translated">ただし、誘惑に負けてはいけません。</target>
        </trans-unit>
        <trans-unit id="89c4560a90f4c8640ca9769656650496ad022a1f" translate="yes" xml:space="preserve">
          <source>Do note that a switch like &lt;b&gt;--help&lt;/b&gt; creates the variable &lt;code&gt;${-help}&lt;/code&gt; , which is not compliant with &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict &quot;refs&quot;&lt;/code&gt; . Also, when using this option on a script with warnings enabled you may get a lot of spurious &quot;used only once&quot; warnings.</source>
          <target state="translated">&lt;b&gt;--helpの&lt;/b&gt;ようなスイッチは変数 &lt;code&gt;${-help}&lt;/code&gt; &lt;b&gt;-help &lt;/b&gt;}を作成することに注意してください。これは &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict &quot;refs&quot;&lt;/code&gt; に準拠していません。また、警告が有効になっているスクリプトでこのオプションを使用すると、多くの偽の「一度だけ使用された」警告が表示される場合があります。</target>
        </trans-unit>
        <trans-unit id="571866571b0b846b7eb73f2e13ef858eddd4d338" translate="yes" xml:space="preserve">
          <source>Do note that a switch like &lt;b&gt;--help&lt;/b&gt; creates the variable &lt;code&gt;${-help}&lt;/code&gt;, which is not compliant with &lt;code&gt;use strict &quot;refs&quot;&lt;/code&gt;. Also, when using this option on a script with warnings enabled you may get a lot of spurious &quot;used only once&quot; warnings.</source>
          <target state="translated">&lt;b&gt;--helpの&lt;/b&gt;ようなスイッチは、変数 &lt;code&gt;${-help}&lt;/code&gt; &lt;b&gt;-help &lt;/b&gt;}を作成することに注意してください。これは、 &lt;code&gt;use strict &quot;refs&quot;&lt;/code&gt; に準拠していません。また、警告が有効になっているスクリプトでこのオプションを使用すると、「一度だけ使用された」という誤った警告が多数表示される場合があります。</target>
        </trans-unit>
        <trans-unit id="c739ef2c73416de977da1e1813d572016c0b1d06" translate="yes" xml:space="preserve">
          <source>Do note that the examples have been written by many different authors over a period of several decades. Styles and techniques will therefore differ, although some effort has been made to not vary styles too widely in the same sections. Do not consider one style to be better than others - &quot;There's More Than One Way To Do It&quot; is one of Perl's mottos. After all, in your journey as a programmer, you are likely to encounter different styles.</source>
          <target state="translated">これらの例は、数十年の間に多くの異なる著者によって書かれたものであることに注意してください。そのため、スタイルやテクニックは異なりますが、同じセクションの中でスタイルを大きく変えすぎないように努力しています。一つのスタイルが他よりも優れていると考えないでください。結局のところ、プログラマとしての旅の中では、異なるスタイルに遭遇する可能性が高いのです。</target>
        </trans-unit>
        <trans-unit id="b78869869c0253fd876d1c91bc224e74bb742739" translate="yes" xml:space="preserve">
          <source>Do nothing if &lt;code&gt;*is_utf8p&lt;/code&gt; is 0, or if there are code points in the string not expressible in native byte encoding. In these cases, &lt;code&gt;*is_utf8p&lt;/code&gt; and &lt;code&gt;*lenp&lt;/code&gt; are unchanged, and the return value is the original &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;*is_utf8p&lt;/code&gt; が0の場合、または文字列にネイティブバイトエンコーディングで表現できないコードポイントがある場合は、何もしません。これらの場合、 &lt;code&gt;*is_utf8p&lt;/code&gt; と &lt;code&gt;*lenp&lt;/code&gt; は変更されず、戻り値は元 &lt;code&gt;s&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="540dbdd2eced4389045109a5d86db714850717db" translate="yes" xml:space="preserve">
          <source>Do one thing and do it well</source>
          <target state="translated">一つのことをしてうまくやる</target>
        </trans-unit>
        <trans-unit id="2495a1047a7ca571d906f155a7f581ed5618c76e" translate="yes" xml:space="preserve">
          <source>Do read the README associated with your operating system, e.g. README.aix on the IBM AIX OS. Don't hesitate to supply patches to that README if you find anything missing or changed over a new OS release.</source>
          <target state="translated">IBM AIX OS の README.aix など、お使いのオペレーティング・システムに関連する README を必ず読んでください。新しい OS リリースで何か欠けているものや変更されたものを見つけた場合は、その README にパッチを提供することを躊躇しないでください。</target>
        </trans-unit>
        <trans-unit id="f6c0054711126ec773d898b58f49cbb4c949cab9" translate="yes" xml:space="preserve">
          <source>Do similar modules already exist in some form?</source>
          <target state="translated">似たようなモジュールはすでに何らかの形で存在しているのでしょうか?</target>
        </trans-unit>
        <trans-unit id="4d86fca77a17d198920e265fa1fed63a01551109" translate="yes" xml:space="preserve">
          <source>Do take care with &lt;code&gt;$ ASSIGN/nolog/user SYS$COMMAND: SYS$INPUT&lt;/code&gt; if your Perl-in-DCL script expects to do things like &lt;code&gt;$read = &amp;lt;STDIN&amp;gt;;&lt;/code&gt; .</source>
          <target state="translated">Perl-in-DCLスクリプトが &lt;code&gt;$read = &amp;lt;STDIN&amp;gt;;&lt;/code&gt; ようなことを期待している場合は、 &lt;code&gt;$ ASSIGN/nolog/user SYS$COMMAND: SYS$INPUT&lt;/code&gt; 注意してください。。</target>
        </trans-unit>
        <trans-unit id="d845fead9ce9f4797485cd08578333a232421e58" translate="yes" xml:space="preserve">
          <source>Do take care with &lt;code&gt;$ ASSIGN/nolog/user SYS$COMMAND: SYS$INPUT&lt;/code&gt; if your Perl-in-DCL script expects to do things like &lt;code&gt;$read = &amp;lt;STDIN&amp;gt;;&lt;/code&gt;.</source>
          <target state="translated">Perl-in-DCLスクリプトが &lt;code&gt;$read = &amp;lt;STDIN&amp;gt;;&lt;/code&gt; ようなことを期待している場合は、 &lt;code&gt;$ ASSIGN/nolog/user SYS$COMMAND: SYS$INPUT&lt;/code&gt; 注意してください。。</target>
        </trans-unit>
        <trans-unit id="2ea0ce9dc382f381b5b301a431cfcd235330a113" translate="yes" xml:space="preserve">
          <source>Do the basic security measures to ensure the directory exists and is writable, that temporary files are opened only if they do not already exist, and that possible race conditions are avoided. Finally the &lt;a href=&quot;#unlink0&quot;&gt;unlink0&lt;/a&gt; function is used to remove files safely.</source>
          <target state="translated">ディレクトリが存在し、書き込み可能であること、一時ファイルがまだ存在しない場合にのみ開かれること、および起こりうる競合状態が回避されることを保証するために、基本的なセキュリティ対策を実行します。最後に、&lt;a href=&quot;#unlink0&quot;&gt;unlink0&lt;/a&gt;関数を使用してファイルを安全に削除します。</target>
        </trans-unit>
        <trans-unit id="ed37eb991a7adeef41e4c420e9ad43ac12f4d7d2" translate="yes" xml:space="preserve">
          <source>Do the basic security measures to ensure the directory exists and is writable, that temporary files are opened only if they do not already exist, and that possible race conditions are avoided. Finally the L</source>
          <target state="translated">ディレクトリが存在し、書き込み可能であること、一時ファイルが既に存在しない場合にのみ開かれること、および可能性のある競合状態が回避されることを確認するための基本的なセキュリティ対策を行います。最後にL</target>
        </trans-unit>
        <trans-unit id="a62956f5b6df99e5d8fc6b8cabce7cc42f269d70" translate="yes" xml:space="preserve">
          <source>Do the same sort of thing to delete a particular line by using &lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next&lt;/a&gt;&lt;/code&gt; to skip the lines you don't want to show up in the output. This example skips every fifth line:</source>
          <target state="translated">同じように特定の行を削除するには、 &lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next&lt;/a&gt;&lt;/code&gt; を使用して、出力に表示したくない行をスキップします。この例では、5行ごとにスキップします。</target>
        </trans-unit>
        <trans-unit id="7c2c59230eb38e060703df7343686f653113e170" translate="yes" xml:space="preserve">
          <source>Do the same sort of thing to delete a particular line by using &lt;code&gt;next&lt;/code&gt; to skip the lines you don't want to show up in the output. This example skips every fifth line:</source>
          <target state="translated">同じようなことをして、 &lt;code&gt;next&lt;/code&gt; を使用して特定の行を削除し、出力に表示したくない行をスキップします。この例では、5行ごとにスキップします。</target>
        </trans-unit>
        <trans-unit id="6bee90ebbffd3a020ccb7068ab9d7842e861b7da" translate="yes" xml:space="preserve">
          <source>Do whatever you can to find out, and if you have to: guess. (Don't forget to document your guess with a comment.)</source>
          <target state="translated">調べるためにできることは何でもやってみてください。(あなたの推測をコメントで記録することを忘れないでください)。</target>
        </trans-unit>
        <trans-unit id="7eb91ce572ac670ea018bc395e336c8241ec77fe" translate="yes" xml:space="preserve">
          <source>Do you have a proper test case?</source>
          <target state="translated">きちんとしたテストケースを持っていますか?</target>
        </trans-unit>
        <trans-unit id="1287ea9cdb3e32730cc921890c861ccf51d63478" translate="yes" xml:space="preserve">
          <source>Do you try to run</source>
          <target state="translated">走ろうとするのか?</target>
        </trans-unit>
        <trans-unit id="d659723a2b8c8d2ce99667e3ef2aba7ca933d74a" translate="yes" xml:space="preserve">
          <source>Do you want the command number in the prompt (yes/no)?</source>
          <target state="translated">プロンプトにコマンド番号を表示しますか?</target>
        </trans-unit>
        <trans-unit id="ef4a0d05ff2b5bfd80519b541a891750dedab4e9" translate="yes" xml:space="preserve">
          <source>Do you want to allow installing distros that are not indexed as the highest distro-version for all contained modules (yes, no, ask/yes, ask/no)?</source>
          <target state="translated">含まれるすべてのモジュールについて、最も高い distro-version としてインデックス化されていない distros のインストールを許可しますか (yes,no,ask/yes,ask/no)?</target>
        </trans-unit>
        <trans-unit id="5e34172d5018937a0cbacdd4790bf04f4bc81ccf" translate="yes" xml:space="preserve">
          <source>Do you want to allow installing distros with decreasing module versions compared to what you have installed (yes, no, ask/yes, ask/no)?</source>
          <target state="translated">インストールしたものに比べてモジュールのバージョンが減少しているディストロのインストールを許可しますか(yes,no,ask/yes,ask/no)?</target>
        </trans-unit>
        <trans-unit id="d7a7627a867e6bbe22a2b970c115376b82f0139b" translate="yes" xml:space="preserve">
          <source>Do you want to enable code deserialisation (yes/no)?</source>
          <target state="translated">コードのデシリアライゼーションを有効にしますか?</target>
        </trans-unit>
        <trans-unit id="cbd235cb0bbd92aee8e53ccbbbbc3dabc72798c9" translate="yes" xml:space="preserve">
          <source>Do you want to halt on failure (yes/no)?</source>
          <target state="translated">失敗で停止しますか(YES/NO)?</target>
        </trans-unit>
        <trans-unit id="373cd2197f990d8762c7c66b4869ae4717a2e44c" translate="yes" xml:space="preserve">
          <source>Do you want to rely on the test report history (yes/no)?</source>
          <target state="translated">検査報告書の履歴を頼りにしますか(はい/いいえ)?</target>
        </trans-unit>
        <trans-unit id="c2c2ed0377afae727b547084f2353f23243f7fd5" translate="yes" xml:space="preserve">
          <source>Do you want to see verbosity turned on when autoselecting mirrors?</source>
          <target state="translated">ミラーの自動選択時に冗長性をオンにしますか?</target>
        </trans-unit>
        <trans-unit id="8a279f6363761148fb8c2b71535a1b4a155b67db" translate="yes" xml:space="preserve">
          <source>Do you want to turn on colored output?</source>
          <target state="translated">カラー出力をオンにしますか?</target>
        </trans-unit>
        <trans-unit id="87a207a61ec9d6801b880d322288293793a12268" translate="yes" xml:space="preserve">
          <source>Do you want to turn ornaments on?</source>
          <target state="translated">飾りをつけるか?</target>
        </trans-unit>
        <trans-unit id="99b869f7fe84b2b6d6d37879f90b1ce5f182c64b" translate="yes" xml:space="preserve">
          <source>Do you want to turn this message off?</source>
          <target state="translated">このメッセージをオフにしますか?</target>
        </trans-unit>
        <trans-unit id="8bf8fea239cbb1f5a4fdb80eb2b8949a38de2f2e" translate="yes" xml:space="preserve">
          <source>Do you want to use a different command for './Build install'? Sudo users will probably prefer:</source>
          <target state="translated">./Build install' に別のコマンドを使いたいですか?Sudoユーザーはおそらく好むでしょう。</target>
        </trans-unit>
        <trans-unit id="cc8ccb8accaee9d0eecc936c06f10fdc9aba0e2f" translate="yes" xml:space="preserve">
          <source>Do you want to use a different make command for 'make install'? Cautious people will probably prefer:</source>
          <target state="translated">make install' には別の make コマンドを使いたいですか? 慎重な人はたぶん好むでしょう。</target>
        </trans-unit>
        <trans-unit id="4f330885ef3a3b61025e1e796b402fcd50c7b4e7" translate="yes" xml:space="preserve">
          <source>Do you want to use prompt defaults (yes/no)?</source>
          <target state="translated">プロンプトのデフォルトを使用しますか(はい/いいえ)?</target>
        </trans-unit>
        <trans-unit id="45d79315d1161c3889c8219bcf2bbab68b8e0fc8" translate="yes" xml:space="preserve">
          <source>Do you want to use the external ping command when autoselecting mirrors?</source>
          <target state="translated">ミラーの自動選択時に外部pingコマンドを使用しますか?</target>
        </trans-unit>
        <trans-unit id="918ceb56671dd67483da1f39299f85748b336c0e" translate="yes" xml:space="preserve">
          <source>Do you want to:</source>
          <target state="translated">そうしたいのか?</target>
        </trans-unit>
        <trans-unit id="9e4a41283cb7ae53ed67fce592f4d0fb68829e68" translate="yes" xml:space="preserve">
          <source>DoRexx</source>
          <target state="translated">DoRexx</target>
        </trans-unit>
        <trans-unit id="c8e1eee902b0c46f68084c5cd60023755be2adbf" translate="yes" xml:space="preserve">
          <source>Document contains no data</source>
          <target state="translated">ドキュメントにはデータが含まれていません。</target>
        </trans-unit>
        <trans-unit id="b91e32e96ba9f37078ffe29f1ee1859d0140ecfd" translate="yes" xml:space="preserve">
          <source>Document each publically accessible method or subroutine, including params and return values</source>
          <target state="translated">公開されている各メソッドやサブルーチンを、パラメータや戻り値を含めて文書化します。</target>
        </trans-unit>
        <trans-unit id="6e00d0928abd84bf71ed2ace7f696bcbc6aee9e8" translate="yes" xml:space="preserve">
          <source>Document purpose, scope and target applications</source>
          <target state="translated">目的、範囲、対象となる用途を文書化する</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">Documentation</target>
        </trans-unit>
        <trans-unit id="0d4f3597552829486c9c7978225dcdc88217781f" translate="yes" xml:space="preserve">
          <source>Documentation and help texts</source>
          <target state="translated">ドキュメントとヘルプテキスト</target>
        </trans-unit>
        <trans-unit id="1d66c2dca46aca62759ec44a5b9071376128798a" translate="yes" xml:space="preserve">
          <source>Documentation borrowed from the old Thread.pm.</source>
          <target state="translated">ドキュメントは古い Thread.pm から拝借しました。</target>
        </trans-unit>
        <trans-unit id="8b5ab45b761259017419114ca3e9a62382663d77" translate="yes" xml:space="preserve">
          <source>Documentation has been contributed by:</source>
          <target state="translated">ドキュメンテーションが寄稿されました。</target>
        </trans-unit>
        <trans-unit id="4730bb4bd3211681615071a5ac81bbb7a0d87081" translate="yes" xml:space="preserve">
          <source>Documentation mostly rewritten by Ilmari Karonen, &amp;lt;</source>
          <target state="translated">ドキュメントは主にIlmari Karonenによって書き直されました、&amp;lt;</target>
        </trans-unit>
        <trans-unit id="5c1fa297f5d4c566fd5588f14f34ea9f8ecedf5a" translate="yes" xml:space="preserve">
          <source>Documentation of corrections already incorporated into the Unicode data base</source>
          <target state="translated">すでに Unicode データベースに組み込まれている修正の文書化</target>
        </trans-unit>
        <trans-unit id="cac7df688d4ef7dcaa6e39b6e0d4e8f277b2acfd" translate="yes" xml:space="preserve">
          <source>Documentation of object-oriented libraries or modules may want to use CONSTRUCTORS and METHODS sections, or CLASS METHODS and INSTANCE METHODS sections, for detailed documentation of the parts of the library and save the DESCRIPTION section for an overview. Large modules with a function interface may want to use FUNCTIONS for similar reasons. Some people use OVERVIEW to summarize the description if it's quite long.</source>
          <target state="translated">オブジェクト指向ライブラリやモジュールのドキュメントは、ライブラリの各部分の詳細なドキュメントを作成するために CONSTRUCTORS と METHODS セクション、または CLASS METHODS と INSTANCE METHODS セクションを使用し、概要を把握するために DESCRIPTION セクションを保存しておくとよいでしょう。関数インタフェースを持つ大きなモジュールは、同様の理由でFUNCTIONSを使いたいと思うかもしれません。説明が非常に長い場合には、OVERVIEW を使って要約する人もいます。</target>
        </trans-unit>
        <trans-unit id="49018199d13814134468f853612e00393c5c7fd7" translate="yes" xml:space="preserve">
          <source>Documentation of status and cross reference of proposals for encoding by Unicode of Unihan characters</source>
          <target state="translated">ユニハン文字のUnicodeによる符号化に関する提案の状況と相互参照の文書化。</target>
        </trans-unit>
        <trans-unit id="cea9d5a4bd3a4c3a2bcfce350d36d1f8a9fd0dd0" translate="yes" xml:space="preserve">
          <source>Documentation of validation Tests</source>
          <target state="translated">検証テストの文書化</target>
        </trans-unit>
        <trans-unit id="eb488db5f5b4fb936ed78cb59ddbbcefd6c8b7f6" translate="yes" xml:space="preserve">
          <source>Documentation of validation tests</source>
          <target state="translated">バリデーションテストの文書化</target>
        </trans-unit>
        <trans-unit id="b139845ddb6a01b9b23ddc81ca29bb8e6b63e194" translate="yes" xml:space="preserve">
          <source>Documentation updates that correct factual errors, explain significant bugs or deficiencies in the current implementation, or fix broken markup.</source>
          <target state="translated">事実上の誤りを修正したり、現在の実装における重要なバグや欠陥を説明したり、壊れたマークアップを修正したりするドキュメントの更新。</target>
        </trans-unit>
        <trans-unit id="23cea710c088ecfa1ae744391fe173bfdf5d1acb" translate="yes" xml:space="preserve">
          <source>Documenting the patch</source>
          <target state="translated">パッチを文書化する</target>
        </trans-unit>
        <trans-unit id="a20866ae52f8e35eaed59a179f7c48ea2d19b8fa" translate="yes" xml:space="preserve">
          <source>Documenting your Extension</source>
          <target state="translated">拡張機能を文書化する</target>
        </trans-unit>
        <trans-unit id="2080696be6c4c31d4c892420cc245128864bdfe0" translate="yes" xml:space="preserve">
          <source>Does Perl have a Year 2000 or 2038 problem? Is Perl Y2K compliant?</source>
          <target state="translated">Perlは2000年問題や2038年問題を抱えていますか?PerlはY2Kに準拠していますか?</target>
        </trans-unit>
        <trans-unit id="0d6d8d711a3a4cca710ca22dbfe40093bf45d857" translate="yes" xml:space="preserve">
          <source>Does Perl have a round() function? What about ceil() and floor()? Trig functions?</source>
          <target state="translated">Perlにはround()関数はありますか?ceil()やfloor()はどうですか?三角関数は?</target>
        </trans-unit>
        <trans-unit id="347f03cef55a503c9fa350dbe1691433852f2738" translate="yes" xml:space="preserve">
          <source>Does a $(CI) and a $(RCS_LABEL) on all files in the MANIFEST file.</source>
          <target state="translated">MANIFEST ファイル内のすべてのファイルに対して $(CI)と $(RCS_LABEL)を実行します。</target>
        </trans-unit>
        <trans-unit id="11d71dc2fc7b711101e50fab631405e074e41e57" translate="yes" xml:space="preserve">
          <source>Does a &lt;a href=&quot;http://man.he.net/man2/fork&quot;&gt;fork(2)&lt;/a&gt; system call to create a new process running the same program at the same point. It returns the child pid to the parent process, &lt;code&gt;0&lt;/code&gt; to the child process, or &lt;a href=&quot;#undef-EXPR&quot;&gt;&lt;code&gt;undef&lt;/code&gt;&lt;/a&gt; if the fork is unsuccessful. File descriptors (and sometimes locks on those descriptors) are shared, while everything else is copied. On most systems supporting &lt;a href=&quot;http://man.he.net/man2/fork&quot;&gt;fork(2)&lt;/a&gt;, great care has gone into making it extremely efficient (for example, using copy-on-write technology on data pages), making it the dominant paradigm for multitasking over the last few decades.</source>
          <target state="translated">ない&lt;a href=&quot;http://man.he.net/man2/fork&quot;&gt;フォーク（2）&lt;/a&gt;システムコールは、同じポイントで同じプログラムを実行する新しいプロセスを作成します。子pidを親プロセスに返し、 &lt;code&gt;0&lt;/code&gt; を子プロセスに返し、フォークが失敗した場合は&lt;a href=&quot;#undef-EXPR&quot;&gt; &lt;code&gt;undef&lt;/code&gt; を&lt;/a&gt;返します。ファイル記述子（および場合によってはそれらの記述子のロック）は共有されますが、他のすべてはコピーされます。&lt;a href=&quot;http://man.he.net/man2/fork&quot;&gt;fork（2）を&lt;/a&gt;サポートするほとんどのシステムでは、非常に効率的になるように細心の注意が払われており（たとえば、データページでコピーオンライトテクノロジを使用）、過去数十年にわたってマルチタスクの主要なパラダイムとなっています。</target>
        </trans-unit>
        <trans-unit id="6ace7d9d419573301ff609d787f134b02b26193b" translate="yes" xml:space="preserve">
          <source>Does a fork(2) system call to create a new process running the same program at the same point. It returns the child pid to the parent process, &lt;code&gt;0&lt;/code&gt; to the child process, or &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if the fork is unsuccessful. File descriptors (and sometimes locks on those descriptors) are shared, while everything else is copied. On most systems supporting fork(), great care has gone into making it extremely efficient (for example, using copy-on-write technology on data pages), making it the dominant paradigm for multitasking over the last few decades.</source>
          <target state="translated">同じポイントで同じプログラムを実行する新しいプロセスを作成するためにfork（2）システムコールを実行します。子プロセスを親プロセスに、 &lt;code&gt;0&lt;/code&gt; を子プロセスに、またはフォークが失敗した場合は &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; を返します。ファイル記述子（および場合によってはそれらの記述子のロック）は共有されますが、他のすべてはコピーされます。 fork（）をサポートするほとんどのシステムでは、それを非常に効率的に（たとえば、データページでコピーオンライトテクノロジーを使用して）することに細心の注意が払われており、過去数十年にわたるマルチタスクの主要なパラダイムになっています。</target>
        </trans-unit>
        <trans-unit id="94b3dcb831cc7f4b2c1f2db661fceb8975ccf8c1" translate="yes" xml:space="preserve">
          <source>Does a fork(2) system call to create a new process running the same program at the same point. It returns the child pid to the parent process, &lt;code&gt;0&lt;/code&gt; to the child process, or &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if the fork is unsuccessful. File descriptors (and sometimes locks on those descriptors) are shared, while everything else is copied. On most systems supporting fork(), great care has gone into making it extremely efficient (for example, using copy-on-write technology on data pages), making it the dominant paradigm for multitasking over the last few decades.</source>
          <target state="translated">同じポイントで同じプログラムを実行する新しいプロセスを作成するためにfork（2）システムコールを実行します。子プロセスを親プロセスに、 &lt;code&gt;0&lt;/code&gt; を子プロセスに、またはフォークが失敗した場合は &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; を返します。ファイル記述子（および場合によってはそれらの記述子のロック）は共有されますが、他のすべてはコピーされます。 fork（）をサポートするほとんどのシステムでは、それを非常に効率的に（たとえば、データページでコピーオンライトテクノロジーを使用して）することに細心の注意が払われており、過去数十年にわたるマルチタスクの主要なパラダイムになっています。</target>
        </trans-unit>
        <trans-unit id="6e7a8e9cc842e50405245756a0a1bacedfbe9c22" translate="yes" xml:space="preserve">
          <source>Does a tree-walk of the syntax tree based at OP and calls METHOD on each op it visits. Each node is visited before its children. If &lt;code&gt;walkoptree_debug&lt;/code&gt; (see below) has been called to turn debugging on then the method &lt;code&gt;walkoptree_debug&lt;/code&gt; is called on each op before METHOD is called.</source>
          <target state="translated">OPに基づいて構文ツリーのツリーウォークを実行し、アクセスする各opでMETHODを呼び出します。各ノードはその子の前に訪問されます。場合 &lt;code&gt;walkoptree_debug&lt;/code&gt; （下記参照）、その後メソッドのデバッグをオンにするために呼び出されてい &lt;code&gt;walkoptree_debug&lt;/code&gt; は、メソッドが呼び出される前に、各オペアンプに呼ばれています。</target>
        </trans-unit>
        <trans-unit id="0a9eae8131e2488c14a006394d04f46b3c05f560" translate="yes" xml:space="preserve">
          <source>Does exactly the same thing as &lt;a href=&quot;#exec-LIST&quot;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt;, except that a fork is done first and the parent process waits for the child process to exit. Note that argument processing varies depending on the number of arguments. If there is more than one argument in LIST, or if LIST is an array with more than one value, starts the program given by the first element of the list with arguments given by the rest of the list. If there is only one scalar argument, the argument is checked for shell metacharacters, and if there are any, the entire argument is passed to the system's command shell for parsing (this is &lt;code&gt;/bin/sh -c&lt;/code&gt; on Unix platforms, but varies on other platforms). If there are no shell metacharacters in the argument, it is split into words and passed directly to &lt;code&gt;execvp&lt;/code&gt;, which is more efficient. On Windows, only the &lt;code&gt;system PROGRAM LIST&lt;/code&gt; syntax will reliably avoid using the shell; &lt;code&gt;system LIST&lt;/code&gt;, even with more than one element, will fall back to the shell if the first spawn fails.</source>
          <target state="translated">フォークが最初に実行され、親プロセスが子プロセスが終了するのを待つことを除いて、&lt;a href=&quot;#exec-LIST&quot;&gt; &lt;code&gt;exec&lt;/code&gt; &lt;/a&gt;とまったく同じことを行います。引数の処理は、引数の数によって異なることに注意してください。 LISTに複数の引数がある場合、またはLISTが複数の値を持つ配列である場合は、リストの最初の要素で指定されたプログラムを、リストの残りの部分で指定された引数で開始します。スカラー引数が1つしかない場合は、引数のシェルメタ文字がチェックされ、ある場合は、引数全体がシステムのコマンドシェルに渡されて解析されます（これはUnixプラットフォームでは &lt;code&gt;/bin/sh -c&lt;/code&gt; ですが、他のプラットフォーム）。引数にシェルのメタ文字がない場合は、単語に分割され、 &lt;code&gt;execvp&lt;/code&gt; に直接渡されます。、より効率的です。Windowsでは、 &lt;code&gt;system PROGRAM LIST&lt;/code&gt; 構文のみが、シェルの使用を確実に回避します。 &lt;code&gt;system LIST&lt;/code&gt; 、複数の要素がある場合でも、最初のスポーンが失敗するとシェルにフォールバックします。</target>
        </trans-unit>
        <trans-unit id="de4556ee919b8c9e716ff91fff53e57dd9fa041d" translate="yes" xml:space="preserve">
          <source>Does exactly the same thing as &lt;code&gt;&lt;a href=&quot;exec&quot;&gt;exec&lt;/a&gt; LIST&lt;/code&gt; , except that a fork is done first and the parent process waits for the child process to exit. Note that argument processing varies depending on the number of arguments. If there is more than one argument in LIST, or if LIST is an array with more than one value, starts the program given by the first element of the list with arguments given by the rest of the list. If there is only one scalar argument, the argument is checked for shell metacharacters, and if there are any, the entire argument is passed to the system's command shell for parsing (this is &lt;code&gt;/bin/sh -c&lt;/code&gt; on Unix platforms, but varies on other platforms). If there are no shell metacharacters in the argument, it is split into words and passed directly to &lt;code&gt;execvp&lt;/code&gt; , which is more efficient. On Windows, only the &lt;code&gt;&lt;a href=&quot;system&quot;&gt;system&lt;/a&gt; PROGRAM LIST&lt;/code&gt; syntax will reliably avoid using the shell; &lt;code&gt;&lt;a href=&quot;system&quot;&gt;system&lt;/a&gt; LIST&lt;/code&gt; , even with more than one element, will fall back to the shell if the first spawn fails.</source>
          <target state="translated">最初にforkが実行され、親プロセスが子プロセスの終了を待機することを除いて、 &lt;code&gt;&lt;a href=&quot;exec&quot;&gt;exec&lt;/a&gt; LIST&lt;/code&gt; とまったく同じことを行います。引数の処理は引数の数によって異なることに注意してください。 LISTに複数の引数がある場合、またはLISTが複数の値を持つ配列である場合、リストの最初の要素で指定されたプログラムを、残りのリストで指定された引数で開始します。スカラー引数が1つしかない場合は、引数のシェルメタキャラクターがチェックされ、存在する場合は、引数全体が解析のためにシステムのコマンドシェルに渡されます（UNIXプラットフォームでは &lt;code&gt;/bin/sh -c&lt;/code&gt; ですが、他のプラットフォーム）。引数にシェルのメタ文字がない場合は、単語に分割され、 &lt;code&gt;execvp&lt;/code&gt; に直接渡されます。より効率的です。 Windowsでは、 &lt;code&gt;&lt;a href=&quot;system&quot;&gt;system&lt;/a&gt; PROGRAM LIST&lt;/code&gt; 構文のみが確実にシェルの使用を回避します。 &lt;code&gt;&lt;a href=&quot;system&quot;&gt;system&lt;/a&gt; LIST&lt;/code&gt; 、複数の要素がある場合でも、最初のスポーンが失敗するとシェルにフォールバックします。</target>
        </trans-unit>
        <trans-unit id="971d377ca0b94eef511ce7a5cf1fbc7ca9fc4308" translate="yes" xml:space="preserve">
          <source>Does exactly the same thing as &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt; LIST&lt;/code&gt; , except that a fork is done first and the parent process waits for the child process to exit. Note that argument processing varies depending on the number of arguments. If there is more than one argument in LIST, or if LIST is an array with more than one value, starts the program given by the first element of the list with arguments given by the rest of the list. If there is only one scalar argument, the argument is checked for shell metacharacters, and if there are any, the entire argument is passed to the system's command shell for parsing (this is &lt;code&gt;/bin/sh -c&lt;/code&gt; on Unix platforms, but varies on other platforms). If there are no shell metacharacters in the argument, it is split into words and passed directly to &lt;code&gt;execvp&lt;/code&gt; , which is more efficient. On Windows, only the &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt; PROGRAM LIST&lt;/code&gt; syntax will reliably avoid using the shell; &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt; LIST&lt;/code&gt; , even with more than one element, will fall back to the shell if the first spawn fails.</source>
          <target state="translated">最初にforkが実行され、親プロセスが子プロセスの終了を待機することを除いて、 &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt; LIST&lt;/code&gt; とまったく同じことを行います。引数の処理は引数の数によって異なることに注意してください。 LISTに複数の引数がある場合、またはLISTが複数の値を持つ配列である場合、リストの最初の要素で指定されたプログラムを、残りのリストで指定された引数で開始します。スカラー引数が1つしかない場合は、引数のシェルメタキャラクターがチェックされ、存在する場合は、引数全体が解析のためにシステムのコマンドシェルに渡されます（UNIXプラットフォームでは &lt;code&gt;/bin/sh -c&lt;/code&gt; ですが、他のプラットフォーム）。引数にシェルのメタ文字がない場合は、単語に分割され、 &lt;code&gt;execvp&lt;/code&gt; に直接渡されます。より効率的です。 Windowsでは、 &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt; PROGRAM LIST&lt;/code&gt; 構文のみが確実にシェルの使用を回避します。 &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt; LIST&lt;/code&gt; 、複数の要素がある場合でも、最初のスポーンが失敗するとシェルにフォールバックします。</target>
        </trans-unit>
        <trans-unit id="7ae98d71c785265ddcfeeeb07989cf58a75f2684" translate="yes" xml:space="preserve">
          <source>Does it create too much work?</source>
          <target state="translated">仕事が増えすぎていませんか?</target>
        </trans-unit>
        <trans-unit id="76c48f534cf5b51a41a2a7ce76b162535214df0a" translate="yes" xml:space="preserve">
          <source>Does it potentially introduce new bugs?</source>
          <target state="translated">新しいバグを導入する可能性はありますか?</target>
        </trans-unit>
        <trans-unit id="163b23e27c4c841d1d0111848b85d7359f51c15f" translate="yes" xml:space="preserve">
          <source>Does it preclude other desirable features?</source>
          <target state="translated">他の望ましい機能を排除しているのか?</target>
        </trans-unit>
        <trans-unit id="19da346c64719e8350a8cf9aeb2a31add00b3079" translate="yes" xml:space="preserve">
          <source>Does not &lt;code&gt;&lt;a href=&quot;../functions/chdir&quot;&gt;chdir()&lt;/a&gt;&lt;/code&gt; to each directory as it recurses. The &lt;code&gt;wanted()&lt;/code&gt; function will need to be aware of this, of course. In this case, &lt;code&gt;$_&lt;/code&gt; will be the same as &lt;code&gt;$File::Find::name&lt;/code&gt; .</source>
          <target state="translated">再帰的に各ディレクトリに &lt;code&gt;&lt;a href=&quot;../functions/chdir&quot;&gt;chdir()&lt;/a&gt;&lt;/code&gt; しません。 &lt;code&gt;wanted()&lt;/code&gt; 関数は、当然のことながら、このことを認識する必要があります。この場合、 &lt;code&gt;$_&lt;/code&gt; は &lt;code&gt;$File::Find::name&lt;/code&gt; と同じになります。</target>
        </trans-unit>
        <trans-unit id="a036b5370a5f7e71f1cac83ea1a1124115ae2c64" translate="yes" xml:space="preserve">
          <source>Does not &lt;code&gt;chdir()&lt;/code&gt; to each directory as it recurses. The &lt;code&gt;wanted()&lt;/code&gt; function will need to be aware of this, of course. In this case, &lt;code&gt;$_&lt;/code&gt; will be the same as &lt;code&gt;$File::Find::name&lt;/code&gt;.</source>
          <target state="translated">再帰的に各ディレクトリに &lt;code&gt;chdir()&lt;/code&gt; しません。 &lt;code&gt;wanted()&lt;/code&gt; 関数は、当然のことながら、このことを認識する必要があります。この場合、 &lt;code&gt;$_&lt;/code&gt; は &lt;code&gt;$File::Find::name&lt;/code&gt; と同じになります。</target>
        </trans-unit>
        <trans-unit id="af44a91c9e39ab0c7463bac15a45ab231dcc0a7d" translate="yes" xml:space="preserve">
          <source>Does not alter the passed in ver SV. See &quot;upg_version&quot; if you want to upgrade the SV.</source>
          <target state="translated">バージョンアップしたい場合は「upg_version」を参照してください。SVをアップグレードしたい場合は &quot;upg_version &quot;を参照してください。</target>
        </trans-unit>
        <trans-unit id="7520223aa1c22fe71da2f2fd9fbb194fccf8f278" translate="yes" xml:space="preserve">
          <source>Does not automatically flush output handles on some platforms. (SunOS, Solaris, HP-UX)</source>
          <target state="translated">一部のプラットフォームでは、出力ハンドルを自動的にフラッシュしません。(SunOS,Solaris,HP-UX)</target>
        </trans-unit>
        <trans-unit id="85c15a16ffb99585385d3749320c647694ab9c8d" translate="yes" xml:space="preserve">
          <source>Does not invoke magic on &lt;code&gt;sv&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sv&lt;/code&gt; で魔法を呼び出さない。</target>
        </trans-unit>
        <trans-unit id="1d965ffd27f165cd1bb4e614ffc070019e6e4581" translate="yes" xml:space="preserve">
          <source>Does not support &lt;code&gt;&lt;a href=&quot;../functions/splice&quot;&gt;splice&lt;/a&gt;&lt;/code&gt; on arrays. Does not support explicitly changing array lengths via $#array -- use &lt;code&gt;&lt;a href=&quot;../functions/push&quot;&gt;push&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../functions/pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">アレイの &lt;code&gt;&lt;a href=&quot;../functions/splice&quot;&gt;splice&lt;/a&gt;&lt;/code&gt; はサポートされていません。$＃arrayによる配列の長さの明示的な変更はサポートしていません- 代わりに &lt;code&gt;&lt;a href=&quot;../functions/push&quot;&gt;push&lt;/a&gt;&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;../functions/pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt; 使用してください。</target>
        </trans-unit>
        <trans-unit id="4ea86be5c2165da1064e6baf6364de0ac05d7d86" translate="yes" xml:space="preserve">
          <source>Does not support &lt;code&gt;splice&lt;/code&gt; on arrays. Does not support explicitly changing array lengths via $#array -- use &lt;code&gt;push&lt;/code&gt; and &lt;code&gt;pop&lt;/code&gt; instead.</source>
          <target state="translated">配列の &lt;code&gt;splice&lt;/code&gt; はサポートしていません。$＃arrayを介した配列の長さの明示的な変更はサポートしていません。代わりに &lt;code&gt;push&lt;/code&gt; と &lt;code&gt;pop&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="d6e1e02c4c151b139fab2fca754d38a684aec2de" translate="yes" xml:space="preserve">
          <source>Does not work as</source>
          <target state="translated">として動作しません。</target>
        </trans-unit>
        <trans-unit id="a0eab3410cab5a6dc3b7523e73bfbe22cc007192" translate="yes" xml:space="preserve">
          <source>Does nothing, but won't fail. (Win32)</source>
          <target state="translated">何もしませんが、失敗しません。(Win32)</target>
        </trans-unit>
        <trans-unit id="ab6714990b2e9014158db7ba9506c2e3f1eef1e8" translate="yes" xml:space="preserve">
          <source>Does the concept match the general goals of Perl?</source>
          <target state="translated">概念はPerlの一般的な目標と一致しているか?</target>
        </trans-unit>
        <trans-unit id="dbd3ca43bd95ec8bd28a3afc7d9eb6159f4931f6" translate="yes" xml:space="preserve">
          <source>Does the equivalent of the &lt;code&gt;-c&lt;/code&gt; command-line option. Obviously, this is only useful in a BEGIN block or else the flag is set too late.</source>
          <target state="translated">&lt;code&gt;-c&lt;/code&gt; コマンドラインオプションと同等です。明らかに、これはBEGINブロックでのみ役立つか、フラグの設定が遅すぎます。</target>
        </trans-unit>
        <trans-unit id="5d2b8e3e1d6fb7e3c6489d878105273a9ab06c85" translate="yes" xml:space="preserve">
          <source>Does the exact opposite to the &lt;b&gt;-W&lt;/b&gt; flag, i.e. it disables all warnings.</source>
          <target state="translated">&lt;b&gt;-W&lt;/b&gt;フラグの正反対を行います。つまり、すべての警告を無効にします。</target>
        </trans-unit>
        <trans-unit id="4f6fc9d8f5b45abfab918dce456df590c87db452" translate="yes" xml:space="preserve">
          <source>Does the module require compilation (i.e. does it have files that end in .xs, .c, .h, .y, .cc, .cxx, or .C)? If it does, life is now officially tough for you, because you have to compile the module yourself (no easy feat on Windows). You'll need a compiler such as Visual C++. Alternatively, you can download a pre-built PPM package from ActiveState. &lt;a href=&quot;http://aspn.activestate.com/ASPN/Downloads/ActivePerl/PPM/&quot;&gt;http://aspn.activestate.com/ASPN/Downloads/ActivePerl/PPM/&lt;/a&gt;</source>
          <target state="translated">モジュールにはコンパイルが必要ですか（つまり、.xs、.c、.h、.y、.cc、.cxx、または.Cで終わるファイルがありますか）？もしそうなら、モジュールを自分でコンパイルしなければならないので、人生は公式に厳しいものになりました（Windowsでは簡単なことではありません）。Visual C ++などのコンパイラが必要です。または、ActiveStateからビルド済みのPPMパッケージをダウンロードすることもできます。&lt;a href=&quot;http://aspn.activestate.com/ASPN/Downloads/ActivePerl/PPM/&quot;&gt;http://aspn.activestate.com/ASPN/Downloads/ActivePerl/PPM/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="789d5f325d83c47c0c59dcdb144267b9c7f57ab9" translate="yes" xml:space="preserve">
          <source>Does the opposite of a &lt;a href=&quot;#shift-ARRAY&quot;&gt;&lt;code&gt;shift&lt;/code&gt;&lt;/a&gt;. Or the opposite of a &lt;a href=&quot;#push-ARRAY%2CLIST&quot;&gt;&lt;code&gt;push&lt;/code&gt;&lt;/a&gt;, depending on how you look at it. Prepends list to the front of the array and returns the new number of elements in the array.</source>
          <target state="translated">&lt;a href=&quot;#shift-ARRAY&quot;&gt; &lt;code&gt;shift&lt;/code&gt; &lt;/a&gt;の反対を行います。または、&lt;a href=&quot;#push-ARRAY%2CLIST&quot;&gt; &lt;code&gt;push&lt;/code&gt; &lt;/a&gt;の反対で、見方によって異なります。リストを配列の先頭に付加し、配列内の新しい要素数を返します。</target>
        </trans-unit>
        <trans-unit id="1e8b1afa4f266e283c1e89777c89973f57e94a2c" translate="yes" xml:space="preserve">
          <source>Does the opposite of a &lt;code&gt;&lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt;. Or the opposite of a &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push&lt;/a&gt;&lt;/code&gt;, depending on how you look at it. Prepends list to the front of the array and returns the new number of elements in the array.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; の反対を行います。または、 &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push&lt;/a&gt;&lt;/code&gt; の反対です。見方によって異なります。リストを配列の前に付加し、配列の新しい要素数を返します。</target>
        </trans-unit>
        <trans-unit id="15ca4b87c1dd7484db0ece50d3e128013e8468d9" translate="yes" xml:space="preserve">
          <source>Does the opposite of a &lt;code&gt;&lt;a href=&quot;shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt;. Or the opposite of a &lt;code&gt;&lt;a href=&quot;push&quot;&gt;push&lt;/a&gt;&lt;/code&gt;, depending on how you look at it. Prepends list to the front of the array and returns the new number of elements in the array.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; の反対を行います。または、 &lt;code&gt;&lt;a href=&quot;push&quot;&gt;push&lt;/a&gt;&lt;/code&gt; の反対です。見方によって異なります。リストを配列の前に付加し、配列の新しい要素数を返します。</target>
        </trans-unit>
        <trans-unit id="d2533b4c56788b02d46208e37be9b6ba40d48a38" translate="yes" xml:space="preserve">
          <source>Does the same thing as the &lt;a href=&quot;#stat-FILEHANDLE&quot;&gt;&lt;code&gt;stat&lt;/code&gt;&lt;/a&gt; function (including setting the special &lt;code&gt;_&lt;/code&gt; filehandle) but stats a symbolic link instead of the file the symbolic link points to. If symbolic links are unimplemented on your system, a normal &lt;a href=&quot;#stat-FILEHANDLE&quot;&gt;&lt;code&gt;stat&lt;/code&gt;&lt;/a&gt; is done. For much more detailed information, please see the documentation for &lt;a href=&quot;#stat-FILEHANDLE&quot;&gt;&lt;code&gt;stat&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#stat-FILEHANDLE&quot;&gt; &lt;code&gt;stat&lt;/code&gt; &lt;/a&gt;関数（特別な &lt;code&gt;_&lt;/code&gt; filehandleの設定を含む）と同じことを行いますが、シンボリックリンクが指すファイルの代わりにシンボリックリンクを統計します。シンボリックリンクがシステムに実装されていない場合、通常の&lt;a href=&quot;#stat-FILEHANDLE&quot;&gt; &lt;code&gt;stat&lt;/code&gt; &lt;/a&gt;が実行されます。より詳細な情報については、&lt;a href=&quot;#stat-FILEHANDLE&quot;&gt; &lt;code&gt;stat&lt;/code&gt; &lt;/a&gt;のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="a4a01d3bbed716e476e014f93f4ca067ce1b42d2" translate="yes" xml:space="preserve">
          <source>Does the same thing as the &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; function (including setting the special &lt;code&gt;_&lt;/code&gt; filehandle) but stats a symbolic link instead of the file the symbolic link points to. If symbolic links are unimplemented on your system, a normal &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; is done. For much more detailed information, please see the documentation for &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; 関数（特別な &lt;code&gt;_&lt;/code&gt; filehandleの設定を含む）と同じことを行いますが、シンボリックリンクが指すファイルの代わりにシンボリックリンクを統計します。シンボリックリンクがシステムに実装されていない場合、通常の &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; が行われます。より詳細な情報については、 &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="2440cc46fc6eb9876beb8fbe0150b6c618c74179" translate="yes" xml:space="preserve">
          <source>Does the same thing as the &lt;code&gt;&lt;a href=&quot;stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; function (including setting the special &lt;code&gt;_&lt;/code&gt; filehandle) but stats a symbolic link instead of the file the symbolic link points to. If symbolic links are unimplemented on your system, a normal &lt;code&gt;&lt;a href=&quot;stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; is done. For much more detailed information, please see the documentation for &lt;code&gt;&lt;a href=&quot;stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; 関数（特別な &lt;code&gt;_&lt;/code&gt; filehandleの設定を含む）と同じことを行いますが、シンボリックリンクが指すファイルの代わりにシンボリックリンクを統計します。シンボリックリンクがシステムに実装されていない場合、通常の &lt;code&gt;&lt;a href=&quot;stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; が行われます。より詳細な情報については、 &lt;code&gt;&lt;a href=&quot;stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="49ea5c5b0e2565b37e561044495417f1e17e756c" translate="yes" xml:space="preserve">
          <source>Does the same thing that the &lt;a href=&quot;http://man.he.net/man2/listen&quot;&gt;listen(2)&lt;/a&gt; system call does. Returns true if it succeeded, false otherwise. See the example in &lt;a href=&quot;perlipc#Sockets%3A-Client%2FServer-Communication&quot;&gt;&quot;Sockets: Client/Server Communication&quot; in perlipc&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://man.he.net/man2/listen&quot;&gt;listen（2）&lt;/a&gt;システムコールと同じことを行います。成功した場合はtrueを返し、それ以外の場合はfalseを返します。&lt;a href=&quot;perlipc#Sockets%3A-Client%2FServer-Communication&quot;&gt;perlipcの「ソケット：クライアント/サーバー通信」&lt;/a&gt;の例を参照してください。</target>
        </trans-unit>
        <trans-unit id="f569744c0b8e3b51084edc9f0783b907d38d586b" translate="yes" xml:space="preserve">
          <source>Does the same thing that the &lt;code&gt;listen(2)&lt;/code&gt; system call does. Returns true if it succeeded, false otherwise. Listens to a socket with a given queue size.</source>
          <target state="translated">&lt;code&gt;listen(2)&lt;/code&gt; システムコールと同じことを行います。成功した場合はtrueを返し、それ以外の場合はfalseを返します。指定されたキューサイズのソケットをリッスンします。</target>
        </trans-unit>
        <trans-unit id="c26f7b80fe6be59ff00dfaaf3a9f27764a36e9e8" translate="yes" xml:space="preserve">
          <source>Does the same thing that the listen(2) system call does. Returns true if it succeeded, false otherwise. See the example in &lt;a href=&quot;../perlipc#Sockets%3a-Client%2fServer-Communication&quot;&gt;Sockets: Client/Server Communication in perlipc&lt;/a&gt;.</source>
          <target state="translated">listen（2）システムコールと同じことを行います。成功した場合はtrue、それ以外の場合はfalseを返します。「&lt;a href=&quot;../perlipc#Sockets%3a-Client%2fServer-Communication&quot;&gt;ソケット：perlipcでのクライアント/サーバー通信&lt;/a&gt;」の例を参照してください。</target>
        </trans-unit>
        <trans-unit id="22db9588c396aba67c7aad2d451295dbb36db3d9" translate="yes" xml:space="preserve">
          <source>Does the same thing that the listen(2) system call does. Returns true if it succeeded, false otherwise. See the example in &lt;a href=&quot;perlipc#Sockets%3a-Client%2fServer-Communication&quot;&gt;Sockets: Client/Server Communication in perlipc&lt;/a&gt;.</source>
          <target state="translated">listen（2）システムコールと同じことを行います。成功した場合はtrue、それ以外の場合はfalseを返します。「&lt;a href=&quot;perlipc#Sockets%3a-Client%2fServer-Communication&quot;&gt;ソケット：perlipcでのクライアント/サーバー通信&lt;/a&gt;」の例を参照してください。</target>
        </trans-unit>
        <trans-unit id="22374adba20ced760e98d0c0d73bbc827cae9cc0" translate="yes" xml:space="preserve">
          <source>Does this module need linking? Looks into subdirectory objects (see also has_link_code())</source>
          <target state="translated">このモジュールはリンクが必要か?サブディレクトリオブジェクトを調べます (has_link_code()も参照)</target>
        </trans-unit>
        <trans-unit id="ec5a93789136319c08b5e5d76ea18d252f60bd6c" translate="yes" xml:space="preserve">
          <source>Does very much the same as the cflags script in the perl distribution. It doesn't return the whole compiler command line, but initializes all of its parts. The const_cccmd method then actually returns the definition of the CCCMD macro which uses these parts.</source>
          <target state="translated">perl ディストリビューションの cflags スクリプトとほとんど同じです。コンパイラのコマンドライン全体を返すのではなく、すべての部分を初期化します。const_cccmd メソッドは、実際にこれらの部分を使用する CCCMD マクロの定義を返します。</target>
        </trans-unit>
        <trans-unit id="6d014ad0641a64b3a2fca948ec89b499199cfda8" translate="yes" xml:space="preserve">
          <source>Does your module pass the 'empty subclass' test? If you say &lt;code&gt;@SUBCLASS::ISA = qw(YOURCLASS);&lt;/code&gt; your applications should be able to use SUBCLASS in exactly the same way as YOURCLASS. For example, does your application still work if you change: &lt;code&gt;$obj = YOURCLASS-&amp;gt;new();&lt;/code&gt; into: &lt;code&gt;$obj = SUBCLASS-&amp;gt;new();&lt;/code&gt; ?</source>
          <target state="translated">あなたのモジュールは「空のサブクラス」テストに合格していますか？ &lt;code&gt;@SUBCLASS::ISA = qw(YOURCLASS);&lt;/code&gt; と言う場合 あなたのアプリケーションはあなたのクラスとまったく同じ方法でサブクラスを使うことができるべきです。たとえば、次のように変更してもアプリケーションは機能しますか。 &lt;code&gt;$obj = YOURCLASS-&amp;gt;new();&lt;/code&gt; に： &lt;code&gt;$obj = SUBCLASS-&amp;gt;new();&lt;/code&gt; ？</target>
        </trans-unit>
        <trans-unit id="bdcea9fc3bdee92b160e5b96d81fb3d19af3fd30" translate="yes" xml:space="preserve">
          <source>Doesn't construct the %sizeof array for you.</source>
          <target state="translated">あなたのために %sizeof 配列を構築しません。</target>
        </trans-unit>
        <trans-unit id="cd3640eea37fa02af99e7bd48394bfa2af60bf4c" translate="yes" xml:space="preserve">
          <source>Doesn't handle complicated expressions built piecemeal, a la:</source>
          <target state="translated">複雑な式を扱うことはありません。</target>
        </trans-unit>
        <trans-unit id="5787ba7fa720ea9e3316d963760e6faa3df102b3" translate="yes" xml:space="preserve">
          <source>Doesn't necessarily locate all of your C compiler's internally-defined symbols.</source>
          <target state="translated">C コンパイラの内部定義されたシンボルをすべて見つけるとは限りません。</target>
        </trans-unit>
        <trans-unit id="9f3f7c7d9e43e8918099efac1f5805d8811f35df" translate="yes" xml:space="preserve">
          <source>Doing Sums</source>
          <target state="translated">演算</target>
        </trans-unit>
        <trans-unit id="c0d111463257cf715e280f2b7d3c19b013c19ffb" translate="yes" xml:space="preserve">
          <source>Doing something repeatedly.</source>
          <target state="translated">何かを繰り返すこと。</target>
        </trans-unit>
        <trans-unit id="2151e066a0ffe448d6aae7739b4f7382726846a0" translate="yes" xml:space="preserve">
          <source>Doing these checks by hand can quickly become tedious. Writing a bunch of accessors by hand is also incredibly tedious. There are a lot of modules on CPAN that can help you write safer and more concise code, including the modules we recommend in &lt;a href=&quot;perlootut&quot;&gt;perlootut&lt;/a&gt;.</source>
          <target state="translated">これらのチェックを手作業で行うと、すぐに退屈な作業になる可能性があります。アクセサの束を手作業で作成するのも非常に面倒です。CPANには、&lt;a href=&quot;perlootut&quot;&gt;perlootutで&lt;/a&gt;推奨されているモジュールを含め、より安全で簡潔なコードを作成するのに役立つモジュールがたくさんあります。</target>
        </trans-unit>
        <trans-unit id="e1639673d423ca711b3596783b5c0a4171be6aec" translate="yes" xml:space="preserve">
          <source>Doing this:</source>
          <target state="translated">これをやって</target>
        </trans-unit>
        <trans-unit id="26e8873149ae373b2974631c31053dfb03fd11c1" translate="yes" xml:space="preserve">
          <source>Dollar signs in the $perl_code will be protected from make using the &lt;code&gt;quote_literal&lt;/code&gt; method, unless they are recognised as being a make variable, &lt;code&gt;$(varname)&lt;/code&gt;, in which case they will be left for make to expand. Remember to quote make macros else it might be used as a bareword. For example:</source>
          <target state="translated">$ perl_codeのドル記号は、make変数 &lt;code&gt;$(varname)&lt;/code&gt; として認識されない限り、 &lt;code&gt;quote_literal&lt;/code&gt; メソッドを使用してmakeから保護されます。認識された場合、makeは展開されます。makeマクロを引用することを忘れないでください。そうしないと、ベアワードとして使用される可能性があります。例えば：</target>
        </trans-unit>
        <trans-unit id="9b10914d8b0a097ace7176e8973f5c3dee92bb44" translate="yes" xml:space="preserve">
          <source>Domain</source>
          <target state="translated">Domain</target>
        </trans-unit>
        <trans-unit id="c70ec1bd923ff14caf24abddbe98bbe566095521" translate="yes" xml:space="preserve">
          <source>Don't assume &lt;code&gt;&amp;gt;&lt;/code&gt; won't be the first character of a filename. Always use &lt;code&gt;&amp;lt;&lt;/code&gt; explicitly to open a file for reading, or even better, use the three-arg version of &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt;, unless you want the user to be able to specify a pipe open.</source>
          <target state="translated">&lt;code&gt;&amp;gt;&lt;/code&gt; がファイル名の最初の文字ではないと仮定しないでください。ユーザーがパイプオープンを指定できるようにする必要がない限り、常に &lt;code&gt;&amp;lt;&lt;/code&gt; を明示的に使用してファイルを読み取り用に開くか、さらには、引数が3つのバージョンの &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="a28344e54c56dce535a8c7d2f9d06917b8d35362" translate="yes" xml:space="preserve">
          <source>Don't assume &lt;code&gt;&amp;gt;&lt;/code&gt; won't be the first character of a filename. Always use the three-arg version of &lt;a href=&quot;perlfunc#open-FILEHANDLE%2CMODE%2CEXPR&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;&amp;gt;&lt;/code&gt; がファイル名の最初の文字にならないことを想定しないでください。常に&lt;a href=&quot;perlfunc#open-FILEHANDLE%2CMODE%2CEXPR&quot;&gt; &lt;code&gt;open&lt;/code&gt; の&lt;/a&gt;3引数バージョンを使用してください：</target>
        </trans-unit>
        <trans-unit id="51fadcebe3461dfde168100ac06626ef32c5c3c4" translate="yes" xml:space="preserve">
          <source>Don't assume Unix filesystem access semantics: that read, write, and execute are all the permissions there are, and even if they exist, that their semantics (for example what do &lt;code&gt;&quot;r&quot;&lt;/code&gt; , &lt;code&gt;&quot;w&quot;&lt;/code&gt; , and &lt;code&gt;&quot;x&quot;&lt;/code&gt; mean on a directory) are the Unix ones. The various Unix/POSIX compatibility layers usually try to make interfaces like &lt;code&gt;&lt;a href=&quot;functions/chmod&quot;&gt;chmod()&lt;/a&gt;&lt;/code&gt; work, but sometimes there simply is no good mapping.</source>
          <target state="translated">Unixファイルシステムのアクセスセマンティクスを想定しないでください。読み取り、書き込み、実行はすべてそのアクセス許可であり、それらが存在する場合でも、そのセマンティクス（たとえば、 &lt;code&gt;&quot;r&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;w&quot;&lt;/code&gt; 、および &lt;code&gt;&quot;x&quot;&lt;/code&gt; の意味）ディレクトリに）Unixのものです。さまざまなUnix / POSIX互換性レイヤーは通常、 &lt;code&gt;&lt;a href=&quot;functions/chmod&quot;&gt;chmod()&lt;/a&gt;&lt;/code&gt; のようなインターフェースを機能させようとしますが、単に適切なマッピングがない場合もあります。</target>
        </trans-unit>
        <trans-unit id="06f72eee2a12b94529d3d5c89896806e70e65187" translate="yes" xml:space="preserve">
          <source>Don't assume Unix filesystem access semantics: that read, write, and execute are all the permissions there are, and even if they exist, that their semantics (for example what do &lt;code&gt;r&lt;/code&gt;, &lt;code&gt;w&lt;/code&gt;, and &lt;code&gt;x&lt;/code&gt; mean on a directory) are the Unix ones. The various Unix/POSIX compatibility layers usually try to make interfaces like &lt;a href=&quot;perlfunc#chmod-LIST&quot;&gt;&lt;code&gt;chmod&lt;/code&gt;&lt;/a&gt; work, but sometimes there simply is no good mapping.</source>
          <target state="translated">Unixファイルシステムのアクセスセマンティクスを想定しないでください。読み取り、書き込み、および実行がすべてのアクセス許可であり、それらが存在する場合でも、それらのセマンティクス（たとえば、ディレクトリで &lt;code&gt;r&lt;/code&gt; 、 &lt;code&gt;w&lt;/code&gt; 、および &lt;code&gt;x&lt;/code&gt; が何を意味するか）はUnixのもの。さまざまなUnix / POSIX互換性レイヤーは通常、&lt;a href=&quot;perlfunc#chmod-LIST&quot;&gt; &lt;code&gt;chmod&lt;/code&gt; の&lt;/a&gt;ようなインターフェースを機能させようとしますが、単に適切なマッピングがない場合もあります。</target>
        </trans-unit>
        <trans-unit id="4a45b9025bbd946f66021bb7d900991eb240c421" translate="yes" xml:space="preserve">
          <source>Don't assume a particular network device name.</source>
          <target state="translated">特定のネットワークデバイス名を想定しないでください。</target>
        </trans-unit>
        <trans-unit id="f5fbef7286fcbc0c326a878a2dbfdab5dbe26746" translate="yes" xml:space="preserve">
          <source>Don't assume a particular set of &lt;a href=&quot;perlfunc#ioctl-FILEHANDLE%2CFUNCTION%2CSCALAR&quot;&gt;&lt;code&gt;ioctl&lt;/code&gt;&lt;/a&gt;s will work.</source>
          <target state="translated">特定の&lt;a href=&quot;perlfunc#ioctl-FILEHANDLE%2CFUNCTION%2CSCALAR&quot;&gt; &lt;code&gt;ioctl&lt;/code&gt; &lt;/a&gt;のセットが機能するとは限りません。</target>
        </trans-unit>
        <trans-unit id="46d416e1f318922467e8a69618050fe453e3d906" translate="yes" xml:space="preserve">
          <source>Don't assume a particular set of &lt;code&gt;&lt;a href=&quot;functions/ioctl&quot;&gt;ioctl()&lt;/a&gt;&lt;/code&gt;s will work.</source>
          <target state="translated">特定の &lt;code&gt;&lt;a href=&quot;functions/ioctl&quot;&gt;ioctl()&lt;/a&gt;&lt;/code&gt; のセットが機能すると想定しないでください。</target>
        </trans-unit>
        <trans-unit id="f77b1e37f7f7fe660c8641daee5c495d72fc56f7" translate="yes" xml:space="preserve">
          <source>Don't assume a text file will end with a newline. They should, but people forget.</source>
          <target state="translated">テキストファイルは改行で終わると思ってはいけません。そうあるべきなのですが、人々は忘れてしまいます。</target>
        </trans-unit>
        <trans-unit id="98161964580f6c72edaf8ce914f3e1d98ec3ce2f" translate="yes" xml:space="preserve">
          <source>Don't assume set-uid and set-gid semantics. (And even if you do, think twice: set-uid and set-gid are a known can of security worms.)</source>
          <target state="translated">set-uid と set-gid のセマンティクスを想定してはいけません。(仮に仮定したとしても、よく考えてみてください:set-uid と set-gid はセキュリティ上のワームの可能性があることが知られています)。</target>
        </trans-unit>
        <trans-unit id="2bc2fe1e9f901ed7d52401ecf5797d38491bac3d" translate="yes" xml:space="preserve">
          <source>Don't assume that &lt;a href=&quot;Sys::Hostname&quot;&gt;&lt;code&gt;Sys::Hostname&lt;/code&gt;&lt;/a&gt; (or any other API or command) returns either a fully qualified hostname or a non-qualified hostname: it all depends on how the system had been configured. Also remember that for things such as DHCP and NAT, the hostname you get back might not be very useful.</source>
          <target state="translated">&lt;a href=&quot;Sys::Hostname&quot;&gt; &lt;code&gt;Sys::Hostname&lt;/code&gt; &lt;/a&gt;（またはその他のAPIまたはコマンド）が完全修飾ホスト名または非修飾ホスト名のいずれかを返すと想定しないでください。これはすべて、システムの構成方法によって異なります。また、DHCPやNATなどの場合、返されるホスト名はあまり役に立たない可能性があることにも注意してください。</target>
        </trans-unit>
        <trans-unit id="904c69ae9ffdcafece3576aedd570251fa8bd53f" translate="yes" xml:space="preserve">
          <source>Don't assume that &lt;code&gt;Sys::Hostname&lt;/code&gt; (or any other API or command) returns either a fully qualified hostname or a non-qualified hostname: it all depends on how the system had been configured. Also remember that for things such as DHCP and NAT, the hostname you get back might not be very useful.</source>
          <target state="translated">&lt;code&gt;Sys::Hostname&lt;/code&gt; （またはその他のAPIまたはコマンド）が完全修飾ホスト名または非修飾ホスト名のいずれかを返すと想定しないでください。それはすべて、システムの構成方法に依存します。また、DHCPやNATなどの場合、返されるホスト名はあまり役に立たない可能性があることも覚えておいてください。</target>
        </trans-unit>
        <trans-unit id="b88cc82b9ad0e24c3082f5794cf3b1736fd326bf" translate="yes" xml:space="preserve">
          <source>Don't assume that a single &lt;a href=&quot;perlfunc#unlink-LIST&quot;&gt;&lt;code&gt;unlink&lt;/code&gt;&lt;/a&gt; completely gets rid of the file: some filesystems (most notably the ones in VMS) have versioned filesystems, and &lt;a href=&quot;perlfunc#unlink-LIST&quot;&gt;&lt;code&gt;unlink&lt;/code&gt;&lt;/a&gt; removes only the most recent one (it doesn't remove all the versions because by default the native tools on those platforms remove just the most recent version, too). The portable idiom to remove all the versions of a file is</source>
          <target state="translated">単一の&lt;a href=&quot;perlfunc#unlink-LIST&quot;&gt; &lt;code&gt;unlink&lt;/code&gt; &lt;/a&gt;ファイルが完全に削除されると&lt;a href=&quot;perlfunc#unlink-LIST&quot;&gt; &lt;code&gt;unlink&lt;/code&gt; &lt;/a&gt;ないでください。一部のファイルシステム（特にVMSのファイルシステム）にはバージョン管理されたファイルシステムがあり、リンク解除では最新のファイルシステムのみが削除されます（デフォルトではすべてのバージョンが削除されるわけではありません）。これらのプラットフォームのネイティブツールは、最新バージョンのみを削除します）。ファイルのすべてのバージョンを削除するためのポータブルイディオムは</target>
        </trans-unit>
        <trans-unit id="cce6dd3c9e2a99e556dd9e7e5f6487f0ac7f77b2" translate="yes" xml:space="preserve">
          <source>Don't assume that a single &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt;&lt;/code&gt; completely gets rid of the file: some filesystems (most notably the ones in VMS) have versioned filesystems, and &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink()&lt;/a&gt;&lt;/code&gt; removes only the most recent one (it doesn't remove all the versions because by default the native tools on those platforms remove just the most recent version, too). The portable idiom to remove all the versions of a file is</source>
          <target state="translated">単一の &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt;&lt;/code&gt; によってファイルが完全に削除されると想定しないでください。一部のファイルシステム（特にVMSのファイルシステム）にはバージョン管理されたファイルシステムがあり、 &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink()&lt;/a&gt;&lt;/code&gt; は最新のファイルシステムのみを削除します（すべてのバージョンが削除されるわけではないため、これらのプラットフォームのデフォルトのネイティブツールでは、最新バージョンも削除されます）。ファイルのすべてのバージョンを削除するポータブルイディオムは</target>
        </trans-unit>
        <trans-unit id="45827beb2b333818dc1ab476c3c49bc561007b4d" translate="yes" xml:space="preserve">
          <source>Don't assume that any particular port (service) will respond.</source>
          <target state="translated">特定のポート(サービス)が応答すると決めつけないでください。</target>
        </trans-unit>
        <trans-unit id="6999e83ecac7276661229b08d824b9951f96931a" translate="yes" xml:space="preserve">
          <source>Don't assume that in pathnames you can collapse two leading slashes &lt;code&gt;//&lt;/code&gt; into one: some networking and clustering filesystems have special semantics for that. Let the operating system sort it out.</source>
          <target state="translated">パス名で2つの先頭のスラッシュを1つに &lt;code&gt;//&lt;/code&gt; 折りたたむことができると想定しないでください。一部のネットワーキングおよびクラスタリングファイルシステムには、そのための特別なセマンティクスがあります。オペレーティングシステムに分類させてください。</target>
        </trans-unit>
        <trans-unit id="2112a1908707af2984f49347ff99fc029075a9a6" translate="yes" xml:space="preserve">
          <source>Don't assume that the epoch starts at 00:00:00, January 1, 1970, because that is OS- and implementation-specific. It is better to store a date in an unambiguous representation. The ISO 8601 standard defines YYYY-MM-DD as the date format, or YYYY-MM-DDTHH:MM:SS (that's a literal &quot;T&quot; separating the date from the time). Please do use the ISO 8601 instead of making us guess what date 02/03/04 might be. ISO 8601 even sorts nicely as-is. A text representation (like &quot;1987-12-18&quot;) can be easily converted into an OS-specific value using a module like &lt;a href=&quot;Time::Piece&quot;&gt;&lt;code&gt;Time::Piece&lt;/code&gt;&lt;/a&gt; (see &lt;a href=&quot;Time::Piece#Date-Parsing&quot;&gt;&quot;Date Parsing&quot; in Time::Piece&lt;/a&gt;) or &lt;a href=&quot;Date::Parse&quot;&gt;&lt;code&gt;Date::Parse&lt;/code&gt;&lt;/a&gt;. An array of values, such as those returned by &lt;a href=&quot;perlfunc#localtime-EXPR&quot;&gt;&lt;code&gt;localtime&lt;/code&gt;&lt;/a&gt;, can be converted to an OS-specific representation using &lt;a href=&quot;Time::Local&quot;&gt;&lt;code&gt;Time::Local&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">エポックが1970年1月1日の00:00:00に始まると想定しないでください。これは、OSおよび実装に固有であるためです。日付は明確な表現で保存することをお勧めします。 ISO 8601標準では、YYYY-MM-DDを日付形式、またはYYYY-MM-DDTHH：MM：SS（日付と時刻を区切るリテラル「T」）として定義しています。 2004年2月3日の日付を推測するのではなく、ISO8601を使用してください。 ISO 8601は、そのままでもうまくソートされます。 （「1987年12月18日」のような）テキスト表現を容易ようにモジュールを使用して、OS固有の値に変換することができる&lt;a href=&quot;Time::Piece&quot;&gt; &lt;code&gt;Time::Piece&lt;/code&gt; &lt;/a&gt;（参照&lt;a href=&quot;Time::Piece#Date-Parsing&quot;&gt;時刻に「日付解析を」::ピース&lt;/a&gt;）または&lt;a href=&quot;Date::Parse&quot;&gt; &lt;code&gt;Date::Parse&lt;/code&gt; &lt;/a&gt;。&lt;a href=&quot;perlfunc#localtime-EXPR&quot;&gt; &lt;code&gt;localtime&lt;/code&gt; &lt;/a&gt;によって返される値など、値の配列。を使用してOS固有の表現に変換できます&lt;a href=&quot;Time::Local&quot;&gt; &lt;code&gt;Time::Local&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="98d90ea04fc1672840d09560112d2b5f38aad8d8" translate="yes" xml:space="preserve">
          <source>Don't assume that the epoch starts at 00:00:00, January 1, 1970, because that is OS- and implementation-specific. It is better to store a date in an unambiguous representation. The ISO 8601 standard defines YYYY-MM-DD as the date format, or YYYY-MM-DDTHH:MM:SS (that's a literal &quot;T&quot; separating the date from the time). Please do use the ISO 8601 instead of making us guess what date 02/03/04 might be. ISO 8601 even sorts nicely as-is. A text representation (like &quot;1987-12-18&quot;) can be easily converted into an OS-specific value using a module like &lt;code&gt;Date::Parse&lt;/code&gt; . An array of values, such as those returned by &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt;, can be converted to an OS-specific representation using &lt;code&gt;Time::Local&lt;/code&gt; .</source>
          <target state="translated">エポックが1970年1月1日00:00:00に始まると想定しないでください。これはOSと実装に固有のものだからです。明確な表現で日付を格納することをお勧めします。 ISO 8601規格では、YYYY-MM-DDを日付形式、またはYYYY-MM-DDTHH：MM：SS（日付と時刻を区切るリテラル「T」）を定義しています。 02/03/04の日付を推測させる代わりに、ISO 8601を使用してください。 ISO 8601は、現状のままでも適切にソートされます。テキスト表現（「1987-12-18」など）は、 &lt;code&gt;Date::Parse&lt;/code&gt; などのモジュールを使用して、OS固有の値に簡単に変換できます。 &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt; によって返される値などの値の配列は、 &lt;code&gt;Time::Local&lt;/code&gt; を使用してOS固有の表現に変換できます。</target>
        </trans-unit>
        <trans-unit id="ae81459ffe886d165ec19458ee6907edce3977cd" translate="yes" xml:space="preserve">
          <source>Don't assume that the host has only one network card, or that it can't bind to many virtual IP addresses.</source>
          <target state="translated">ホストがネットワークカードを1枚しか持っていないとか、多数の仮想IPアドレスにバインドできないと決めつけないでください。</target>
        </trans-unit>
        <trans-unit id="35d965a58e99a2d53f33f1c15c097e5154d93daa" translate="yes" xml:space="preserve">
          <source>Don't assume that the name used to invoke a command or program with &lt;a href=&quot;perlfunc#system-LIST&quot;&gt;&lt;code&gt;system&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;perlfunc#exec-LIST&quot;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt; can also be used to test for the existence of the file that holds the executable code for that command or program. First, many systems have &quot;internal&quot; commands that are built-in to the shell or OS and while these commands can be invoked, there is no corresponding file. Second, some operating systems (e.g., Cygwin, DJGPP, OS/2, and VOS) have required suffixes for executable files; these suffixes are generally permitted on the command name but are not required. Thus, a command like &lt;code&gt;perl&lt;/code&gt; might exist in a file named</source>
          <target state="translated">&lt;a href=&quot;perlfunc#system-LIST&quot;&gt; &lt;code&gt;system&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;perlfunc#exec-LIST&quot;&gt; &lt;code&gt;exec&lt;/code&gt; &lt;/a&gt;でコマンドまたはプログラムを呼び出すために使用される名前が、そのコマンドまたはプログラムの実行可能コードを保持するファイルの存在をテストするためにも使用できると想定しないでください。まず、多くのシステムにはシェルまたはOSに組み込まれている「内部」コマンドがあり、これらのコマンドを呼び出すことはできますが、対応するファイルはありません。次に、一部のオペレーティングシステム（Cygwin、DJGPP、OS / 2、VOSなど）には、実行可能ファイルにサフィックスが必要です。これらのサフィックスは通常、コマンド名で許可されていますが、必須ではありません。したがって、 &lt;code&gt;perl&lt;/code&gt; のようなコマンドはという名前のファイルに存在する可能性があります</target>
        </trans-unit>
        <trans-unit id="762d289b8f69911c48e30355fa8f2ef9119426cc" translate="yes" xml:space="preserve">
          <source>Don't assume that the name used to invoke a command or program with &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; can also be used to test for the existence of the file that holds the executable code for that command or program. First, many systems have &quot;internal&quot; commands that are built-in to the shell or OS and while these commands can be invoked, there is no corresponding file. Second, some operating systems (e.g., Cygwin, DJGPP, OS/2, and VOS) have required suffixes for executable files; these suffixes are generally permitted on the command name but are not required. Thus, a command like</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; を使用してコマンドまたはプログラムを呼び出すために使用される名前が、そのコマンドまたはプログラムの実行可能コードを保持するファイルの存在をテストするためにも使用できると想定しないでください。まず、多くのシステムにはシェルまたはOSに組み込まれた「内部」コマンドがあり、これらのコマンドを呼び出すことはできますが、対応するファイルがありません。次に、一部のオペレーティングシステム（Cygwin、DJGPP、OS / 2、VOSなど）では、実行可能ファイルのサフィックスが必要です。これらのサフィックスは通常、コマンド名で許可されていますが、必須ではありません。したがって、次のようなコマンド</target>
        </trans-unit>
        <trans-unit id="1514a854a4b008c5fba8916a7962921e2b8b3a4a" translate="yes" xml:space="preserve">
          <source>Don't assume that there is only one way to get through firewalls to the public Internet.</source>
          <target state="translated">ファイアウォールを通過して公共のインターネットに接続する方法は一つしかないと決めつけないでください。</target>
        </trans-unit>
        <trans-unit id="c6a1267eacc3c912d76fd037d987680a5762ee68" translate="yes" xml:space="preserve">
          <source>Don't assume that write/modify permission on a directory gives the right to add or delete files/directories in that directory. That is filesystem specific: in some filesystems you need write/modify permission also (or even just) in the file/directory itself. In some filesystems (AFS, DFS) the permission to add/delete directory entries is a completely separate permission.</source>
          <target state="translated">ディレクトリへの書き込み/変更権限が、そのディレクトリ内のファイル/ディレクトリの追加や削除の権利を与えていると思わないでください。これはファイルシステム固有の問題です。ファイルシステムによっては、ファイル/ディレクトリ自体にも(あるいは単に)書き込み/変更権限が必要な場合があります。いくつかのファイルシステム (AFS,DFS)では、ディレクトリエントリの追加/削除のパーミッションは完全に別のパーミッションになっています。</target>
        </trans-unit>
        <trans-unit id="445d23235b8dff3b578e3bb5bf0fc30d1a0490ac" translate="yes" xml:space="preserve">
          <source>Don't assume that you can ping hosts and get replies.</source>
          <target state="translated">ホストにpingして返信を受け取れると思い込んではいけません。</target>
        </trans-unit>
        <trans-unit id="b1edc420b94bcf10bf4d8c3ee5b511b8b1bd17fb" translate="yes" xml:space="preserve">
          <source>Don't assume that you can reach outside world through any other port than 80, or some web proxy. ftp is blocked by many firewalls.</source>
          <target state="translated">80番以外のポートやウェブプロキシを使って外の世界に行けると思ってはいけません。</target>
        </trans-unit>
        <trans-unit id="c31864fe8f7fd5417d78f831be7f49971ddfa830" translate="yes" xml:space="preserve">
          <source>Don't assume that you can reach the public Internet.</source>
          <target state="translated">公共のインターネットにアクセスできると思い込んではいけません。</target>
        </trans-unit>
        <trans-unit id="e3635e84ac318882496643a11d43ff013c114f31" translate="yes" xml:space="preserve">
          <source>Don't assume that you can reach yourself or any node by the name 'localhost'. The same goes for '127.0.0.1'. You will have to try both.</source>
          <target state="translated">localhost」という名前で自分やどのノードにも到達できると思い込んではいけません。127.0.0.0.1」も同様です。両方試してみる必要があります。</target>
        </trans-unit>
        <trans-unit id="94e84b069d17212c205601cb91a4bdb912d4357e" translate="yes" xml:space="preserve">
          <source>Don't assume that you can send email by connecting to the local SMTP port.</source>
          <target state="translated">ローカルSMTPポートに接続すればメールが送れると思わないでください。</target>
        </trans-unit>
        <trans-unit id="93ae10616af2ea19ea7f8a1f9e13d6eb9fc81add" translate="yes" xml:space="preserve">
          <source>Don't assume the Unix filesystem access semantics: the operating system or the filesystem may be using some ACL systems, which are richer languages than the usual &lt;code&gt;rwx&lt;/code&gt; . Even if the &lt;code&gt;rwx&lt;/code&gt; exist, their semantics might be different.</source>
          <target state="translated">Unixファイルシステムのアクセスセマンティクスを想定しないでください。オペレーティングシステムまたはファイルシステムが、通常の &lt;code&gt;rwx&lt;/code&gt; よりも豊富な言語であるACLシステムを使用している可能性があります。 &lt;code&gt;rwx&lt;/code&gt; が存在する場合でも、それらのセマンティクスは異なる場合があります。</target>
        </trans-unit>
        <trans-unit id="01f2ad69ad6eb78a30ffe872332c9621f4a17dd3" translate="yes" xml:space="preserve">
          <source>Don't assume the Unix filesystem access semantics: the operating system or the filesystem may be using some ACL systems, which are richer languages than the usual &lt;code&gt;rwx&lt;/code&gt;. Even if the &lt;code&gt;rwx&lt;/code&gt; exist, their semantics might be different.</source>
          <target state="translated">Unixファイルシステムのアクセスセマンティクスを想定しないでください。オペレーティングシステムまたはファイルシステムは、通常の &lt;code&gt;rwx&lt;/code&gt; よりも豊富な言語であるACLシステムを使用している可能性があります。 &lt;code&gt;rwx&lt;/code&gt; が存在する場合でも、それらのセマンティクスは異なる場合があります。</target>
        </trans-unit>
        <trans-unit id="6dd69e1b079ed05055f1874e9bdc17c43b7ee863" translate="yes" xml:space="preserve">
          <source>Don't assume the Unix user and group semantics: especially, don't expect &lt;a href=&quot;perlvar#%24%3C&quot;&gt;&lt;code&gt;$&amp;lt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;perlvar#%24%3E&quot;&gt;&lt;code&gt;$&amp;gt;&lt;/code&gt;&lt;/a&gt; (or &lt;a href=&quot;perlvar#%24%28&quot;&gt;&lt;code&gt;$(&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;perlvar#%24%29&quot;&gt;&lt;code&gt;$)&lt;/code&gt;&lt;/a&gt;) to work for switching identities (or memberships).</source>
          <target state="translated">Unixユーザーとグループのセマンティクスを想定しないでください。特に、&lt;a href=&quot;perlvar#%24%3C&quot;&gt; &lt;code&gt;$&amp;lt;&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;perlvar#%24%3E&quot;&gt; &lt;code&gt;$&amp;gt;&lt;/code&gt; &lt;/a&gt;（または&lt;a href=&quot;perlvar#%24%28&quot;&gt; &lt;code&gt;$(&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;perlvar#%24%29&quot;&gt; &lt;code&gt;$)&lt;/code&gt; &lt;/a&gt;）がID（またはメンバーシップ）の切り替えに機能することを期待しないでください。</target>
        </trans-unit>
        <trans-unit id="f793b546a43c7fdfddcd37819e15f770633a875c" translate="yes" xml:space="preserve">
          <source>Don't assume the Unix user and group semantics: especially, don't expect &lt;code&gt;$&amp;lt;&lt;/code&gt; and &lt;code&gt;$&amp;gt;&lt;/code&gt; (or &lt;code&gt;$(&lt;/code&gt; and &lt;code&gt;$)&lt;/code&gt; ) to work for switching identities (or memberships).</source>
          <target state="translated">Unixのユーザーおよびグループのセマンティクスを想定しないでください。特に、ID（またはメンバーシップ）を切り替えるために &lt;code&gt;$&amp;lt;&lt;/code&gt; および &lt;code&gt;$&amp;gt;&lt;/code&gt; （または &lt;code&gt;$(&lt;/code&gt; および &lt;code&gt;$)&lt;/code&gt; ）が機能することを期待しないでください。</target>
        </trans-unit>
        <trans-unit id="de83ff9adf0f76046a05e27193105138389e30d8" translate="yes" xml:space="preserve">
          <source>Don't be afraid to use loop labels--they're there to enhance readability as well as to allow multilevel loop breaks. See the previous example.</source>
          <target state="translated">ループラベルを使用することを恐れないでください。ループラベルは、読みやすさを向上させるだけでなく、複数レベルのループブレークを可能にするためにも存在します。先ほどの例を参照してください。</target>
        </trans-unit>
        <trans-unit id="789665e74c277d58dbd4bc3f085faf66c237708c" translate="yes" xml:space="preserve">
          <source>Don't be fooled into thinking that it is hard to create portable Perl code. It isn't. Perl tries its level-best to bridge the gaps between what's available on different platforms, and all the means available to use those features. Thus almost all Perl code runs on any machine without modification. But there are some significant issues in writing portable code, and this document is entirely about those issues.</source>
          <target state="translated">移植性の高い Perl コードを作成するのは難しいと思っている人は騙されないでください。難しいことではありません。Perl は、異なるプラットフォームで利用可能なものと、それらの機能を使用するために利用可能なすべての手段との間のギャップを埋めるために、そのレベルで最高の努力をしています。そのため、ほとんどすべての Perl のコードは、どのマシンでも変更することなく動作します。しかし、移植性のあるコードを書くことにはいくつかの重要な問題があります。</target>
        </trans-unit>
        <trans-unit id="e9382c68d62f11f58c0e0116d77660fc6a3b3ba4" translate="yes" xml:space="preserve">
          <source>Don't blame Perl. It's the same as in C. IEEE says we have to do this. Perl numbers whose absolute values are integers under 2**31 (on 32-bit machines) will work pretty much like mathematical integers. Other numbers are not guaranteed.</source>
          <target state="translated">Perlのせいにするな。IEEEがこうしないといけないと言っているのはC言語と同じです。絶対値が2**31以下の整数であるPerlの数値(32ビットマシンでは)は、数学の整数とほぼ同じように動作します。それ以外の数値は保証されていません。</target>
        </trans-unit>
        <trans-unit id="774b4dd48a669835b4126c2772387c78ce9c98be" translate="yes" xml:space="preserve">
          <source>Don't bother using &lt;code&gt;trailingData&lt;/code&gt; if the input is a filename.</source>
          <target state="translated">入力がファイル名の場合は、 &lt;code&gt;trailingData&lt;/code&gt; を使用しないでください。</target>
        </trans-unit>
        <trans-unit id="e2b0a9f3aafe7e01341dfe674e6e343efc8bbb76" translate="yes" xml:space="preserve">
          <source>Don't change this variable unless you &lt;b&gt;really&lt;/b&gt; know what you're doing.</source>
          <target state="translated">何をしているのか&lt;b&gt;本当に&lt;/b&gt;理解していない限り、この変数を変更しないでください。</target>
        </trans-unit>
        <trans-unit id="645ff8a225da487f56ff11a853ab337b50f980b8" translate="yes" xml:space="preserve">
          <source>Don't count on a specific environment variable existing in &lt;a href=&quot;perlvar#%25ENV&quot;&gt;&lt;code&gt;%ENV&lt;/code&gt;&lt;/a&gt;. Don't count on &lt;a href=&quot;perlvar#%25ENV&quot;&gt;&lt;code&gt;%ENV&lt;/code&gt;&lt;/a&gt; entries being case-sensitive, or even case-preserving. Don't try to clear &lt;a href=&quot;perlvar#%25ENV&quot;&gt;&lt;code&gt;%ENV&lt;/code&gt;&lt;/a&gt; by saying &lt;code&gt;%ENV = ();&lt;/code&gt;, or, if you really have to, make it conditional on &lt;code&gt;$^O ne 'VMS'&lt;/code&gt; since in VMS the &lt;a href=&quot;perlvar#%25ENV&quot;&gt;&lt;code&gt;%ENV&lt;/code&gt;&lt;/a&gt; table is much more than a per-process key-value string table.</source>
          <target state="translated">&lt;a href=&quot;perlvar#%25ENV&quot;&gt; &lt;code&gt;%ENV&lt;/code&gt; に&lt;/a&gt;存在する特定の環境変数を当てにしないでください。&lt;a href=&quot;perlvar#%25ENV&quot;&gt; &lt;code&gt;%ENV&lt;/code&gt; &lt;/a&gt;エントリで大文字と小文字が区別されたり、大文字と小文字が区別されたりすることを期待しないでください。明らかにしないでください&lt;a href=&quot;perlvar#%25ENV&quot;&gt; &lt;code&gt;%ENV&lt;/code&gt; &lt;/a&gt;と言って &lt;code&gt;%ENV = ();&lt;/code&gt; 、または、本当に必要な場合は、 &lt;code&gt;$^O ne 'VMS'&lt;/code&gt; 条件とします。これは、VMSでは&lt;a href=&quot;perlvar#%25ENV&quot;&gt; &lt;code&gt;%ENV&lt;/code&gt; &lt;/a&gt;テーブルがプロセスごとのKey-Value文字列テーブルよりもはるかに多いためです。</target>
        </trans-unit>
        <trans-unit id="bf3d8d6437b2fb83642a1fd7abe5420705d405dd" translate="yes" xml:space="preserve">
          <source>Don't count on a specific environment variable existing in &lt;code&gt;%ENV&lt;/code&gt; . Don't count on &lt;code&gt;%ENV&lt;/code&gt; entries being case-sensitive, or even case-preserving. Don't try to clear &lt;code&gt;%ENV&lt;/code&gt; by saying &lt;code&gt;%ENV = ();&lt;/code&gt; , or, if you really have to, make it conditional on &lt;code&gt;$^O ne 'VMS'&lt;/code&gt; since in VMS the &lt;code&gt;%ENV&lt;/code&gt; table is much more than a per-process key-value string table.</source>
          <target state="translated">&lt;code&gt;%ENV&lt;/code&gt; に存在する特定の環境変数を当てにしないでください。 &lt;code&gt;%ENV&lt;/code&gt; エントリが大文字と小文字を区別する、または大文字と小文字を区別することさえありません。明らかにしないでください &lt;code&gt;%ENV&lt;/code&gt; と言って &lt;code&gt;%ENV = ();&lt;/code&gt; 、または、本当に必要な場合は、 &lt;code&gt;$^O ne 'VMS'&lt;/code&gt; 条件にしてください。VMSでは &lt;code&gt;%ENV&lt;/code&gt; テーブルは、プロセスごとのKey-Value文字列テーブルよりもはるかに多いからです。</target>
        </trans-unit>
        <trans-unit id="bc8ffb22803041bf2bc487bfe46bde9fbca507cc" translate="yes" xml:space="preserve">
          <source>Don't count on filename globbing. Use &lt;a href=&quot;perlfunc#opendir-DIRHANDLE%2CEXPR&quot;&gt;&lt;code&gt;opendir&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;perlfunc#readdir-DIRHANDLE&quot;&gt;&lt;code&gt;readdir&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;perlfunc#closedir-DIRHANDLE&quot;&gt;&lt;code&gt;closedir&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">ファイル名のグロブを当てにしないでください。代わりに、&lt;a href=&quot;perlfunc#opendir-DIRHANDLE%2CEXPR&quot;&gt; &lt;code&gt;opendir&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;perlfunc#readdir-DIRHANDLE&quot;&gt; &lt;code&gt;readdir&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;perlfunc#closedir-DIRHANDLE&quot;&gt; &lt;code&gt;closedir&lt;/code&gt; を&lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="037f7905f794172b9aa798cbaa7cfb0372b5498b" translate="yes" xml:space="preserve">
          <source>Don't count on filename globbing. Use &lt;code&gt;&lt;a href=&quot;functions/opendir&quot;&gt;opendir&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;functions/closedir&quot;&gt;closedir&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">ファイル名のグロビングを当てにしないでください。代わりに &lt;code&gt;&lt;a href=&quot;functions/opendir&quot;&gt;opendir&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt; 、および &lt;code&gt;&lt;a href=&quot;functions/closedir&quot;&gt;closedir&lt;/a&gt;&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="e8d15e2d76caf019a3701f78e8198d57683e81f9" translate="yes" xml:space="preserve">
          <source>Don't count on per-program environment variables, or per-program current directories.</source>
          <target state="translated">プログラムごとの環境変数や、プログラムごとのカレントディレクトリはあてにしないでください。</target>
        </trans-unit>
        <trans-unit id="3bc23f8507c1bb1be1e0453fc6f57c0fb86fa9ba" translate="yes" xml:space="preserve">
          <source>Don't count on signals or &lt;a href=&quot;perlvar#%25SIG&quot;&gt;&lt;code&gt;%SIG&lt;/code&gt;&lt;/a&gt; for anything.</source>
          <target state="translated">シグナルや&lt;a href=&quot;perlvar#%25SIG&quot;&gt; &lt;code&gt;%SIG&lt;/code&gt; &lt;/a&gt;を当てにしないでください。</target>
        </trans-unit>
        <trans-unit id="660cbdd54752be68a4dc2ccd79e3477dc980f960" translate="yes" xml:space="preserve">
          <source>Don't count on signals or &lt;code&gt;%SIG&lt;/code&gt; for anything.</source>
          <target state="translated">シグナルや &lt;code&gt;%SIG&lt;/code&gt; を当てにしないでください。</target>
        </trans-unit>
        <trans-unit id="4bac29705acad970a5fc0227d41302ccfd1686b2" translate="yes" xml:space="preserve">
          <source>Don't count on specific values of &lt;a href=&quot;perlvar#%24%21&quot;&gt;&lt;code&gt;$!&lt;/code&gt;&lt;/a&gt;, neither numeric nor especially the string values. Users may switch their locales causing error messages to be translated into their languages. If you can trust a POSIXish environment, you can portably use the symbols defined by the &lt;a href=&quot;errno&quot;&gt;&lt;code&gt;Errno&lt;/code&gt;&lt;/a&gt; module, like &lt;code&gt;ENOENT&lt;/code&gt;. And don't trust on the values of &lt;a href=&quot;perlvar#%24%21&quot;&gt;&lt;code&gt;$!&lt;/code&gt;&lt;/a&gt; at all except immediately after a failed system call.</source>
          <target state="translated">&lt;a href=&quot;perlvar#%24%21&quot;&gt; &lt;code&gt;$!&lt;/code&gt; &lt;/a&gt;特定の値を当てにしてはいけません！、数値でも特に文字列値でもありません。ユーザーはロケールを切り替えて、エラーメッセージを自分の言語に翻訳することができます。POSIXish環境を信頼できる場合は、 &lt;code&gt;ENOENT&lt;/code&gt; などの&lt;a href=&quot;errno&quot;&gt; &lt;code&gt;Errno&lt;/code&gt; &lt;/a&gt;モジュールで定義されたシンボルを移植可能に使用できます。そして、&lt;a href=&quot;perlvar#%24%21&quot;&gt; &lt;code&gt;$!&lt;/code&gt; &lt;/a&gt;の値を信用しないでください！システムコールが失敗した直後を除いて、まったく。</target>
        </trans-unit>
        <trans-unit id="2504f73349f543cd4ab97266d28a299e9f5178ef" translate="yes" xml:space="preserve">
          <source>Don't count on specific values of &lt;code&gt;$!&lt;/code&gt; , neither numeric nor especially the string values. Users may switch their locales causing error messages to be translated into their languages. If you can trust a POSIXish environment, you can portably use the symbols defined by the &lt;code&gt;Errno&lt;/code&gt; module, like &lt;code&gt;ENOENT&lt;/code&gt; . And don't trust on the values of &lt;code&gt;$!&lt;/code&gt; at all except immediately after a failed system call.</source>
          <target state="translated">&lt;code&gt;$!&lt;/code&gt; 特定の値を当てにしないでください！、数値でも特に文字列値でもありません。ユーザーはロケールを切り替えると、エラーメッセージが自分の言語に翻訳されます。POSIXish環境を信頼できる場合は、 &lt;code&gt;ENOENT&lt;/code&gt; などの &lt;code&gt;Errno&lt;/code&gt; モジュールで定義されたシンボルを移植可能に使用できます。また、 &lt;code&gt;$!&lt;/code&gt; の値を信頼しないでください。失敗したシステムコールの直後を除いて、まったく。</target>
        </trans-unit>
        <trans-unit id="d29e3f7d07b96795819a57e76db3864389865c2f" translate="yes" xml:space="preserve">
          <source>Don't direct the users of your module to download &lt;code&gt;Devel::PPPort&lt;/code&gt; . They are most probably no XS writers. Also, don't make</source>
          <target state="translated">モジュールのユーザーに &lt;code&gt;Devel::PPPort&lt;/code&gt; をダウンロードするように指示しないでください。彼らはおそらくXSライターではありません。また、作りません</target>
        </trans-unit>
        <trans-unit id="d12289a8f5647dd05ebc42ceb314e67b5593c2a3" translate="yes" xml:space="preserve">
          <source>Don't direct the users of your module to download &lt;code&gt;Devel::PPPort&lt;/code&gt;. They are most probably not XS writers. Also, don't make</source>
          <target state="translated">モジュールのユーザーに &lt;code&gt;Devel::PPPort&lt;/code&gt; をダウンロードするように指示しないでください。彼らはおそらくXSライターではありません。また、作らないでください</target>
        </trans-unit>
        <trans-unit id="4c8b6f86bbfc2b6c173c74faf597f3f3d4ca2dc7" translate="yes" xml:space="preserve">
          <source>Don't display</source>
          <target state="translated">表示しないでください</target>
        </trans-unit>
        <trans-unit id="c1e22de2ba66c0889226c5735ba53c5285571154" translate="yes" xml:space="preserve">
          <source>Don't display mostly harmless warning messages.</source>
          <target state="translated">ほとんど無害な警告メッセージを表示しないでください。</target>
        </trans-unit>
        <trans-unit id="9187d0c222d008aeb189cdee4ced6eab248011a7" translate="yes" xml:space="preserve">
          <source>Don't fall into the trap of using a &lt;a href=&quot;#printf-FILEHANDLE-FORMAT%2C-LIST&quot;&gt;&lt;code&gt;printf&lt;/code&gt;&lt;/a&gt; when a simple &lt;a href=&quot;#print-FILEHANDLE-LIST&quot;&gt;&lt;code&gt;print&lt;/code&gt;&lt;/a&gt; would do. The &lt;a href=&quot;#print-FILEHANDLE-LIST&quot;&gt;&lt;code&gt;print&lt;/code&gt;&lt;/a&gt; is more efficient and less error prone.</source>
          <target state="translated">単純な&lt;a href=&quot;#print-FILEHANDLE-LIST&quot;&gt; &lt;code&gt;print&lt;/code&gt; &lt;/a&gt;十分な場合でも、&lt;a href=&quot;#printf-FILEHANDLE-FORMAT%2C-LIST&quot;&gt; &lt;code&gt;printf&lt;/code&gt; &lt;/a&gt;を使用するという罠にはまらないでください。&lt;a href=&quot;#print-FILEHANDLE-LIST&quot;&gt; &lt;code&gt;print&lt;/code&gt; &lt;/a&gt;、より効率的かつ少ないエラーが発生しやすくなります。</target>
        </trans-unit>
        <trans-unit id="1547fa551c603cca7def3259e5b1fd45d8dbc6f8" translate="yes" xml:space="preserve">
          <source>Don't fall into the trap of using a &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; when a simple &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; would do. The &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; is more efficient and less error prone.</source>
          <target state="translated">単純な &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; 十分な場合に、 &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; を使用するという罠に陥らないでください。 &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; 、より効率的かつ少ないエラーが発生しやすくなります。</target>
        </trans-unit>
        <trans-unit id="29cf7dc4de80fc368eaed82cbb02b8b6d7166fa2" translate="yes" xml:space="preserve">
          <source>Don't fall into the trap of using a &lt;code&gt;&lt;a href=&quot;printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; when a simple &lt;code&gt;&lt;a href=&quot;print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; would do. The &lt;code&gt;&lt;a href=&quot;print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; is more efficient and less error prone.</source>
          <target state="translated">単純な &lt;code&gt;&lt;a href=&quot;print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; 十分な場合に、 &lt;code&gt;&lt;a href=&quot;printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; を使用するという罠に陥らないでください。 &lt;code&gt;&lt;a href=&quot;print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; 、より効率的かつ少ないエラーが発生しやすくなります。</target>
        </trans-unit>
        <trans-unit id="2de68b400b15f729bfc2845f7ab8c8768fb9196d" translate="yes" xml:space="preserve">
          <source>Don't fall into the trap of writing for the wrong audience. Your primary audience is a reasonably experienced developer with at least a moderate understanding of your module's application domain, who's just downloaded your module and wants to start using it as quickly as possible.</source>
          <target state="translated">間違った読者のために書くという罠に陥らないようにしてください。あなたの主な対象者は、あなたのモジュールのアプリケーションドメインを少なくとも適度に理解していて、あなたのモジュールをダウンロードしたばかりで、できるだけ早く使い始めたいと思っている、それなりに経験豊富な開発者です。</target>
        </trans-unit>
        <trans-unit id="f7e449fde074df52d869952df1fc18793a8a93fc" translate="yes" xml:space="preserve">
          <source>Don't forget the exceptional, pathological cases.</source>
          <target state="translated">例外的な、病理学的なケースを忘れてはいけません。</target>
        </trans-unit>
        <trans-unit id="b1e51289079b4f632343c894dc7cce8050066f98" translate="yes" xml:space="preserve">
          <source>Don't forget to</source>
          <target state="translated">を忘れないでください。</target>
        </trans-unit>
        <trans-unit id="5c3276edb41b4976dc4e628709afd368361bf6e9" translate="yes" xml:space="preserve">
          <source>Don't forget to register your class with &lt;a href=&quot;TAP::Parser::IteratorFactory#register_handler&quot;&gt;&quot;register_handler&quot; in TAP::Parser::IteratorFactory&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;TAP::Parser::IteratorFactory#register_handler&quot;&gt;TAP :: Parser :: IteratorFactoryの「register_handler」に&lt;/a&gt;クラスを登録することを忘れないでください。</target>
        </trans-unit>
        <trans-unit id="3e6739c8879bd9d08b76ade5df931676453f506a" translate="yes" xml:space="preserve">
          <source>Don't go through silly contortions to exit a loop at the top or the bottom, when Perl provides the &lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; operator so you can exit in the middle. Just &quot;outdent&quot; it a little to make it more visible:</source>
          <target state="translated">Perlが &lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; 演算子を提供するので、途中で終了できるように、上または下のループを終了するために愚かなゆがみを通過しないでください。少しだけ「アウトデント」して、見やすくします。</target>
        </trans-unit>
        <trans-unit id="95608ab0b4f68aad0fcac7882ddee0f738db3b5d" translate="yes" xml:space="preserve">
          <source>Don't go through silly contortions to exit a loop at the top or the bottom, when Perl provides the &lt;code&gt;last&lt;/code&gt; operator so you can exit in the middle. Just &quot;outdent&quot; it a little to make it more visible:</source>
          <target state="translated">Perlが &lt;code&gt;last&lt;/code&gt; 演算子を提供しているので、途中で終了できる場合は、愚かなゆがみを経て上部または下部のループを終了しないでください。少しだけ「インデント」して、見やすくします。</target>
        </trans-unit>
        <trans-unit id="f24938e6209641248330c946317ddd16f85839df" translate="yes" xml:space="preserve">
          <source>Don't just present an example without explaining what it does. Adding a short paragraph saying what the example will do can increase the value of the example immensely.</source>
          <target state="translated">例が何をするのかを説明せずに、ただ例を提示するのはやめましょう。例が何をするのかという短い段落を加えることで、例の価値を飛躍的に高めることができます。</target>
        </trans-unit>
        <trans-unit id="f7085b86a690c754818cc958bdb8d7286c8544cb" translate="yes" xml:space="preserve">
          <source>Don't know how to get file name</source>
          <target state="translated">ファイル名の取得方法がわからない</target>
        </trans-unit>
        <trans-unit id="938fa91f29fdecf583cec172909de6ca4aee6111" translate="yes" xml:space="preserve">
          <source>Don't know how to handle magic of type \%o</source>
          <target state="translated">Don't know how to handle magic of type どうやってタイプの魔法を扱うのか。</target>
        </trans-unit>
        <trans-unit id="af2f3b7627d5c9318a43fdf0c7ed8eb29f6f63df" translate="yes" xml:space="preserve">
          <source>Don't mix filtered &amp;amp; non-filtered data in the same database file.</source>
          <target state="translated">フィルターされたデータとフィルターされていないデータを同じデータベースファイルに混在させないでください。</target>
        </trans-unit>
        <trans-unit id="9bfaee9208ed0b4080e76b49f7092be9da21317d" translate="yes" xml:space="preserve">
          <source>Don't open the same file more than once at a time for writing, as some operating systems put mandatory locks on such files.</source>
          <target state="translated">一部のオペレーティングシステムでは、そのようなファイルに必須のロックをかけているため、書き込みのために同じファイルを一度に複数回開かないようにしてください。</target>
        </trans-unit>
        <trans-unit id="13d0e6ad295f2f5fa4a0e1c2294ab660c2ff68f2" translate="yes" xml:space="preserve">
          <source>Don't output the &quot;(definitions)&quot; sections.</source>
          <target state="translated">(定義)」の部分を出力しないでください。</target>
        </trans-unit>
        <trans-unit id="8760a0137fe661818eb2724e50d3c58a224e6f3d" translate="yes" xml:space="preserve">
          <source>Don't put &quot;=head</source>
          <target state="translated">頭に&quot;=head &quot;をつけないでください。</target>
        </trans-unit>
        <trans-unit id="ad5ea38ded2263705342205dafdb4799d4e0a15b" translate="yes" xml:space="preserve">
          <source>Don't quote large strings unless absolutely necessary:</source>
          <target state="translated">絶対に必要な場合を除いて、大きな文字列を引用してはいけません。</target>
        </trans-unit>
        <trans-unit id="f5cf2886b363988134aefd1d621d74fc94b6b465" translate="yes" xml:space="preserve">
          <source>Don't re-invent the wheel</source>
          <target state="translated">車輪の再発明をするな</target>
        </trans-unit>
        <trans-unit id="81177c27776c8009338c295142a35e130e198399" translate="yes" xml:space="preserve">
          <source>Don't read an entire file into memory if you can process it line by line. Or more concretely, use a loop like this:</source>
          <target state="translated">ファイルを一行ずつ処理できるのであれば、ファイル全体をメモリに読み込まないようにしましょう。あるいは、より具体的には、このようなループを使いましょう。</target>
        </trans-unit>
        <trans-unit id="a35797b1a1b72b9841ad51955b9000b5a1529ffb" translate="yes" xml:space="preserve">
          <source>Don't require every module user to jump through the same hoops to achieve a simple result. You can always include optional parameters or routines for more complex or non-standard behaviour. If most of your users have to type a few almost identical lines of code when they start using your module, it's a sign that you should have made that behaviour a default. Another good indicator that you should use defaults is if most of your users call your routines with the same arguments.</source>
          <target state="translated">単純な結果を得るために、すべてのモジュールのユーザーに同じ手順を踏ませる必要はありません。より複雑な動作や標準的でない動作のために、オプションのパラメータやルーチンを常に含めることができます。ほとんどのユーザがモジュールを使い始めたときに、ほとんど同じコードを数行入力しなければならない場合は、その動作をデフォルトにすべきだったということを示しています。デフォルトを使用すべきであることを示すもう一つの良い指標は、ほとんどのユーザが同じ引数でルーチンを呼び出す場合です。</target>
        </trans-unit>
        <trans-unit id="c723f7c592b67ddf269e14e867541435896967e5" translate="yes" xml:space="preserve">
          <source>Don't scan for the found substrings.</source>
          <target state="translated">見つかった部分文字列をスキャンしないでください。</target>
        </trans-unit>
        <trans-unit id="d6fcbb0953d0c44b0d3d4321526cee5c66bebf52" translate="yes" xml:space="preserve">
          <source>Don't send a bug received acknowledgement to the reply address. Generally it is only a sensible to use this option if you are a perl maintainer actively watching perl porters for your message to arrive.</source>
          <target state="translated">バグ受信の確認通知を返信先に送らないようにします。一般的にこのオプションを使うのは、あなたのメッセージが到着するまでの間、Perlメンテナが積極的にPerlポータを監視している場合にのみ、賢明な方法です。</target>
        </trans-unit>
        <trans-unit id="b7493963fb4c5797894e70b946b1c96426315969" translate="yes" xml:space="preserve">
          <source>Don't send copy to administrator when sending report by mail.</source>
          <target state="translated">報告書をメールで送信する際に、管理者にコピーを送らないようにしてください。</target>
        </trans-unit>
        <trans-unit id="22920608692f0a3432e5ce4c9717be87d806f116" translate="yes" xml:space="preserve">
          <source>Don't send copy to administrator.</source>
          <target state="translated">管理者にコピーを送らないでください。</target>
        </trans-unit>
        <trans-unit id="fb71d35c71ceb2f9bf260b8991604a97329efaf4" translate="yes" xml:space="preserve">
          <source>Don't slurp!</source>
          <target state="translated">スルッとしないで!</target>
        </trans-unit>
        <trans-unit id="4bc7424f428b4c2b286895e2bee1c1badf45b0f9" translate="yes" xml:space="preserve">
          <source>Don't think about it too much.</source>
          <target state="translated">深く考えないでください。</target>
        </trans-unit>
        <trans-unit id="e145223fc51004b2dae0ceec37468cb3be4a2528" translate="yes" xml:space="preserve">
          <source>Don't think that you can get the address of a Perl variable when it is stored as an integer or double number! &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;('P', $x)&lt;/code&gt; will force the variable's internal representation to string, just as if you had written something like &lt;code&gt;$x .= ''&lt;/code&gt; .</source>
          <target state="translated">整数または倍精度数として格納されている場合、Perl変数のアドレスを取得できるとは思わないでください。 &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;('P', $x)&lt;/code&gt; は、 &lt;code&gt;$x .= ''&lt;/code&gt; ようなものを書いたかのように、変数の内部表現を文字列に強制します。</target>
        </trans-unit>
        <trans-unit id="aa78efdd982c660bde808f9404fa1a1f66350b93" translate="yes" xml:space="preserve">
          <source>Don't think that you can get the address of a Perl variable when it is stored as an integer or double number! &lt;code&gt;pack('P', $x)&lt;/code&gt; will force the variable's internal representation to string, just as if you had written something like &lt;code&gt;$x .= ''&lt;/code&gt;.</source>
          <target state="translated">Perl変数が整数または倍数として格納されている場合、そのアドレスを取得できるとは思わないでください。 &lt;code&gt;pack('P', $x)&lt;/code&gt; は、 &lt;code&gt;$x .= ''&lt;/code&gt; ようなものを記述した場合と同様に、変数の内部表現を文字列に強制します。</target>
        </trans-unit>
        <trans-unit id="5c0c8af6f9c4025d7dc7e616e0715698cd40e403" translate="yes" xml:space="preserve">
          <source>Don't try to clear &lt;code&gt;%ENV&lt;/code&gt; by saying &lt;code&gt;%ENV = ();&lt;/code&gt; , it will throw a fatal error. This is equivalent to doing the following from DCL:</source>
          <target state="translated">明らかにしないでください &lt;code&gt;%ENV&lt;/code&gt; と言って &lt;code&gt;%ENV = ();&lt;/code&gt; 、致命的なエラーがスローされます。これは、DCLから以下を実行することと同じです。</target>
        </trans-unit>
        <trans-unit id="45c019f954bb8eef5e6daf4d3924ba435ccd958e" translate="yes" xml:space="preserve">
          <source>Don't try to clear &lt;code&gt;%ENV&lt;/code&gt; by saying &lt;code&gt;%ENV = ();&lt;/code&gt;, it will throw a fatal error. This is equivalent to doing the following from DCL:</source>
          <target state="translated">明らかにしないでください &lt;code&gt;%ENV&lt;/code&gt; と言って &lt;code&gt;%ENV = ();&lt;/code&gt; 、致命的なエラーが発生します。これは、DCLから次のことを行うのと同じです。</target>
        </trans-unit>
        <trans-unit id="ed025c55f145c736fa2b816ded97f2454d7a958f" translate="yes" xml:space="preserve">
          <source>Don't try to do this:</source>
          <target state="translated">こんなことをしようとしないでください。</target>
        </trans-unit>
        <trans-unit id="6dcb6f3c6b552350b94a3e90424b7771b163de66" translate="yes" xml:space="preserve">
          <source>Don't use &quot;=item&quot;s outside of an &quot;=over&quot; ... &quot;=back&quot; region.</source>
          <target state="translated">オーバー&quot; ...&quot;=バック &quot;領域の外で&quot;=item &quot;を使用しないでください。back &quot;領域の外で&quot;=item &quot;を使用しないでください。</target>
        </trans-unit>
        <trans-unit id="f2de3f7e5d9fd204f62d8c9e039efe8db3c5c0b9" translate="yes" xml:space="preserve">
          <source>Don't use &lt;a href=&quot;#exit-EXPR&quot;&gt;&lt;code&gt;exit&lt;/code&gt;&lt;/a&gt; to abort a subroutine if there's any chance that someone might want to trap whatever error happened. Use &lt;a href=&quot;#die-LIST&quot;&gt;&lt;code&gt;die&lt;/code&gt;&lt;/a&gt; instead, which can be trapped by an &lt;a href=&quot;#eval-EXPR&quot;&gt;&lt;code&gt;eval&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">エラーが発生した場合に誰かがトラップしたい可能性がある場合は、&lt;a href=&quot;#exit-EXPR&quot;&gt; &lt;code&gt;exit&lt;/code&gt; &lt;/a&gt;を使用してサブルーチンを中止しないでください。代わりに&lt;a href=&quot;#die-LIST&quot;&gt; &lt;code&gt;die&lt;/code&gt; &lt;/a&gt;を使用してください。これは、&lt;a href=&quot;#eval-EXPR&quot;&gt; &lt;code&gt;eval&lt;/code&gt; &lt;/a&gt;によってトラップされる可能性があります。</target>
        </trans-unit>
        <trans-unit id="a7de6cdfcbff257732efdc95079781ff79434e7b" translate="yes" xml:space="preserve">
          <source>Don't use &lt;code&gt;:&lt;/code&gt; as a part of a filename since many systems use that for their own semantics (Mac OS Classic for separating pathname components, many networking schemes and utilities for separating the nodename and the pathname, and so on). For the same reasons, avoid &lt;code&gt;@&lt;/code&gt; , &lt;code&gt;;&lt;/code&gt; and &lt;code&gt;|&lt;/code&gt;.</source>
          <target state="translated">使用しないでください &lt;code&gt;:&lt;/code&gt; 多くのシステムは、独自のセマンティクスのためにそれを使用しているため（、パス名のコンポーネントを分離するためのMac OSクラシックノード名とパス名を分離するための多くのネットワーキング・スキームおよびユーティリティを、など）、ファイル名の一部として。同じ理由から、避け &lt;code&gt;@&lt;/code&gt; 、 &lt;code&gt;;&lt;/code&gt; と &lt;code&gt;|&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="de0648ca03594009e5fc165d44d9c88e480b54d4" translate="yes" xml:space="preserve">
          <source>Don't use &lt;code&gt;:&lt;/code&gt; as a part of a filename since many systems use that for their own semantics (Mac OS Classic for separating pathname components, many networking schemes and utilities for separating the nodename and the pathname, and so on). For the same reasons, avoid &lt;code&gt;@&lt;/code&gt;, &lt;code&gt;;&lt;/code&gt; and &lt;code&gt;|&lt;/code&gt;.</source>
          <target state="translated">多くのシステムが独自のセマンティクス（パス名コンポーネントを分離するためのMac OS Classic、ノード名とパス名を分離するための多くのネットワークスキームとユーティリティなど）に &lt;code&gt;:&lt;/code&gt; を使用するため、ファイル名の一部として：を使用しないでください。同じ理由で、 &lt;code&gt;@&lt;/code&gt; 、 &lt;code&gt;;&lt;/code&gt; は避けてください。および &lt;code&gt;|&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fd80fb1475bf587607bf23dcb48492b2994f3826" translate="yes" xml:space="preserve">
          <source>Don't use &lt;code&gt;&lt;a href=&quot;exit&quot;&gt;exit&lt;/a&gt;&lt;/code&gt; to abort a subroutine if there's any chance that someone might want to trap whatever error happened. Use &lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; instead, which can be trapped by an &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">発生したエラーをトラップしたい可能性がある場合は、 &lt;code&gt;&lt;a href=&quot;exit&quot;&gt;exit&lt;/a&gt;&lt;/code&gt; を使用してサブルーチンを中止しないでください。代わりに、 &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; によってトラップされる可能性のある &lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="4ae3e40c5aafd256eca74b7ca54a5e5fe01a8a09" translate="yes" xml:space="preserve">
          <source>Don't use &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt;&lt;/code&gt; to abort a subroutine if there's any chance that someone might want to trap whatever error happened. Use &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; instead, which can be trapped by an &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">発生したエラーをトラップしたい可能性がある場合は、 &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt;&lt;/code&gt; を使用してサブルーチンを中止しないでください。代わりに、 &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; によってトラップされる可能性のある &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="4cae11462d2674103d0d8e77ff3c2d3bb81f328e" translate="yes" xml:space="preserve">
          <source>Don't use it. It makes no sense to deal with bytes in a text string, and it makes no sense to deal with characters in a byte string. Do the proper conversions (by decoding/encoding), and things will work out well: you get character counts for decoded data, and byte counts for encoded data.</source>
          <target state="translated">使ってはいけない。テキスト文字列のバイトを扱うのは意味がありませんし、バイト文字列の文字を扱うのも意味がありません。適切な変換(デコード/エンコードによる)を行えば、物事はうまくいくでしょう:デコードされたデータの文字数とエンコードされたデータのバイト数を得ることができます。</target>
        </trans-unit>
        <trans-unit id="31a008400a1239308283e11c2496113f4c495814" translate="yes" xml:space="preserve">
          <source>Don't use it. Unfortunately, it assumes that the programmer's environment and that of the user will use the same encoding. It will use the same encoding for the source code and for STDIN and STDOUT. When a program is copied to another machine, the source code does not change, but the STDIO environment might.</source>
          <target state="translated">使ってはいけません。残念ながら、プログラマの環境とユーザの環境が同じエンコーディングを使うことを前提としています。ソースコードとSTDINとSTDOUTには同じエンコーディングを使用します。プログラムを別のマシンにコピーしても、ソースコードは変わりませんが、STDIO環境は変わるかもしれません。</target>
        </trans-unit>
        <trans-unit id="92826ed6df15d13b6cb60d26dc1ac2e5d66954c7" translate="yes" xml:space="preserve">
          <source>Don't use this flag as a marker to distinguish character and binary data: that should be decided for each variable when you write your code.</source>
          <target state="translated">このフラグを文字データとバイナリデータを区別するためのマーカーとして使用しないでください。</target>
        </trans-unit>
        <trans-unit id="c9b01c21ad5ce16a7981e3294ccf4cf41b5fef04" translate="yes" xml:space="preserve">
          <source>Don't use this module directly.</source>
          <target state="translated">このモジュールを直接使用しないでください。</target>
        </trans-unit>
        <trans-unit id="71ee42da50b79ae9e6a47caf180fc6688aabc5ce" translate="yes" xml:space="preserve">
          <source>Don't use this.</source>
          <target state="translated">これは使わないでください。</target>
        </trans-unit>
        <trans-unit id="d8022c54cffc7dadfd83dedf1e4a2dbf6ad467e8" translate="yes" xml:space="preserve">
          <source>Don't worry about posting if you can't say when the module will be ready - just say so in the message. It might be worth inviting others to help you, they may be able to complete it for you!</source>
          <target state="translated">モジュールがいつ完成するかわからなくても、メッセージにそう書いておけば投稿を心配する必要はありません。他の人に手伝ってもらうことは価値があるかもしれません。</target>
        </trans-unit>
        <trans-unit id="327df9e94148631e3c9a41cfa753d9d2769d418a" translate="yes" xml:space="preserve">
          <source>Don't worry if it says Math::BigInt::Lite, bignum and friends will use Lite if it is installed since it is faster for some operations. It will be automatically upgraded to BigInt whenever necessary:</source>
          <target state="translated">Math::BigInt::Liteと書いてあっても気にしないでください。必要に応じて自動的にBigIntにアップグレードされます。</target>
        </trans-unit>
        <trans-unit id="83fe6a1f79295f6f6329274881574682cc33b843" translate="yes" xml:space="preserve">
          <source>Done by Archive::Tar internally when reading the tar file: validate the header against the checksum to ensure integer tar file.</source>
          <target state="translated">Archive::Tar が tar ファイルを読み込む際に内部的に行う:チェックサムとヘッダを照合して整数の tar ファイルを確保する。</target>
        </trans-unit>
        <trans-unit id="9b0acdbd029a7828ca595b0d9f7618bd97d3679c" translate="yes" xml:space="preserve">
          <source>Dotfiles.pm</source>
          <target state="translated">Dotfiles.pm</target>
        </trans-unit>
        <trans-unit id="367aeb5b0eeea24f38d847fc22358213d58bd92f" translate="yes" xml:space="preserve">
          <source>Dotted Decimal Versions</source>
          <target state="translated">点線の10進数バージョン</target>
        </trans-unit>
        <trans-unit id="5902e51c543426764a539a5b8b3475f2e3c0e1b6" translate="yes" xml:space="preserve">
          <source>Dotted-Decimal Versions</source>
          <target state="translated">点線10進数バージョン</target>
        </trans-unit>
        <trans-unit id="a7dd61c36eb620d23150ee2cbd23ab230bd75552" translate="yes" xml:space="preserve">
          <source>Dotted-Decimal version work sometimes</source>
          <target state="translated">点線10進数版の動作は時々あります</target>
        </trans-unit>
        <trans-unit id="b212ec67db3b50460a0b49ff530f65ae1edb2eab" translate="yes" xml:space="preserve">
          <source>Dotted-Decimal versions</source>
          <target state="translated">点線十進法</target>
        </trans-unit>
        <trans-unit id="b4444cb6e44518290fa4fab08202a5a7eed3f25e" translate="yes" xml:space="preserve">
          <source>Dotted-decimal: bare v-strings (v1.2.3) and strings with more than one decimal point and a leading 'v' (&quot;v1.2.3&quot;); NOTE you can technically use a v-string or strings with a leading-v and only one decimal point (v1.2 or &quot;v1.2&quot;), but you will confuse both yourself and others.</source>
          <target state="translated">Dotted-decimal:裸のv文字列(v1.2.3)と、複数の小数点と先頭の'v'を持つ文字列(&quot;v1.2.3&quot;)があります。</target>
        </trans-unit>
        <trans-unit id="ac8e3d2e145e6907cacdfa05480bf0c029289788" translate="yes" xml:space="preserve">
          <source>Dotted-integer (also known as dotted-decimal) versions consist of positive integers separated by full stop characters (i.e. &quot;dots&quot;, &quot;periods&quot; or &quot;decimal points&quot;). This are equivalent in format to Perl &quot;v-strings&quot;, with some additional restrictions on form. They must be given in &quot;normal&quot; form, which has a leading &quot;v&quot; character and at least three integer components. To retain a one-to-one mapping with decimal versions, all components after the first &lt;b&gt;should&lt;/b&gt; be restricted to the range 0 to 999. The final component &lt;b&gt;may&lt;/b&gt; be separated by an underscore character instead of a period.</source>
          <target state="translated">ドット付き整数（ドット付き10進数とも呼ばれます）バージョンは、ピリオド文字（つまり、「ドット」、「ピリオド」、または「小数点」）で区切られた正の整数で構成されます。これは、形式がPerlの「v-strings」と同等ですが、形式にいくつかの追加の制限があります。これらは、先頭の「v」文字と少なくとも3つの整数コンポーネントを持つ「通常の」形式で指定する必要があります。10進数バージョンで1対1のマッピングを保持するには、最初のコンポーネントの後のすべてのコンポーネントを0〜999の範囲に制限する&lt;b&gt;必要&lt;/b&gt;があります。最後のコンポーネントは、ピリオドではなくアンダースコア文字で区切る&lt;b&gt;こと&lt;/b&gt;が&lt;b&gt;でき&lt;/b&gt;ます。</target>
        </trans-unit>
        <trans-unit id="1117c07c1f41b9ef00977301af904dee32183e5d" translate="yes" xml:space="preserve">
          <source>Dotted-integer versions</source>
          <target state="translated">ドット整数版</target>
        </trans-unit>
        <trans-unit id="7bc4aeea2b858e5d0b2038c659c17e529fe4085a" translate="yes" xml:space="preserve">
          <source>Double Quotes</source>
          <target state="translated">ダブルクォート</target>
        </trans-unit>
        <trans-unit id="b17ae50dd8754e17c2584e6a5426d3fcdb608cdb" translate="yes" xml:space="preserve">
          <source>Double quotes indicate that the text will be interpolated using exactly the same rules as normal double quoted strings.</source>
          <target state="translated">二重引用符は、通常の二重引用符で囲まれた文字列と全く同じルールでテキストが補間されることを示しています。</target>
        </trans-unit>
        <trans-unit id="d8bdee99b293542316fa229d2907bcacda4feae8" translate="yes" xml:space="preserve">
          <source>Double quotes or single quotes may be used around literal strings:</source>
          <target state="translated">リテラル文字列の周りには、二重引用符や一重引用符を使用することができます。</target>
        </trans-unit>
        <trans-unit id="c45e85fa2adbda8304a1994b69613855b231b88d" translate="yes" xml:space="preserve">
          <source>Double-Typed SVs</source>
          <target state="translated">ダブルタイプのSV</target>
        </trans-unit>
        <trans-unit id="bc0859619112e37c2df7dc4b11b4c4a86c663786" translate="yes" xml:space="preserve">
          <source>Doug MacEachern &amp;lt;&lt;code&gt;dougm@osf.org&lt;/code&gt; &amp;gt;</source>
          <target state="translated">Doug MacEachern &amp;lt; &lt;code&gt;dougm@osf.org&lt;/code&gt; &amp;gt;</target>
        </trans-unit>
        <trans-unit id="2241b59f622c2870c4b02a605d078ab07bc4826d" translate="yes" xml:space="preserve">
          <source>Doug MacEachern &amp;lt;&lt;code&gt;dougm@osf.org&lt;/code&gt;&amp;gt;</source>
          <target state="translated">Doug MacEachern &amp;lt;&lt;code&gt;dougm@osf.org&lt;/code&gt;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="ebd84c7c0c73cf64e66299d99641345c7d6ec4c9" translate="yes" xml:space="preserve">
          <source>Doug MacEachern has an article on embedding in Volume 1, Issue 4 of The Perl Journal ( &lt;a href=&quot;http://www.tpj.com/&quot;&gt;http://www.tpj.com/&lt;/a&gt; ). Doug is also the developer of the most widely-used Perl embedding: the mod_perl system (perl.apache.org), which embeds Perl in the Apache web server. Oracle, Binary Evolution, ActiveState, and Ben Sugars's nsapi_perl have used this model for Oracle, Netscape and Internet Information Server Perl plugins.</source>
          <target state="translated">Doug MacEachernが、The Perl Journalの第1巻、第4号（&lt;a href=&quot;http://www.tpj.com/&quot;&gt;http://www.tpj.com/&lt;/a&gt;）への埋め込みに関する記事を公開しています。Dougは、最も広く使用されているPerl埋め込みの開発者でもあります：mod_perlシステム（perl.apache.org）。これは、Apache WebサーバーにPerlを埋め込みます。Oracle、Binary Evolution、ActiveState、およびBen Sugarsのnsapi_perlは、Oracle、Netscape、およびInternet Information Server Perlプラグインにこのモデルを使用しています。</target>
        </trans-unit>
        <trans-unit id="d859c23d025def545dab47578ad7286013f9074c" translate="yes" xml:space="preserve">
          <source>Doug Wilson,</source>
          <target state="translated">ダグ・ウィルソン</target>
        </trans-unit>
        <trans-unit id="efd9fe42018c0e9681fed6f906ad1da72ef74937" translate="yes" xml:space="preserve">
          <source>Down this road lies madness.</source>
          <target state="translated">この道の下には狂気がある</target>
        </trans-unit>
        <trans-unit id="66a9025a56522ef8289a51b6a1a202df2f62ec04" translate="yes" xml:space="preserve">
          <source>Downgrade both sides to byte-strings</source>
          <target state="translated">両サイドをバイト列に格下げ</target>
        </trans-unit>
        <trans-unit id="711e55a0520f6b8eb41cd3adf5cf2f6dfb3f33d2" translate="yes" xml:space="preserve">
          <source>Downgrade existing SSL connection back to plain. This is needed to work with some FTP helpers at firewalls, which need to see the PORT and PASV commands and responses to dynamically open the necessary ports. In this case &lt;code&gt;starttls&lt;/code&gt; is usually only done to protect the authorization.</source>
          <target state="translated">既存のSSL接続をプレーンにダウングレードします。これは、必要なポートを動的に開くためにPORTおよびPASVコマンドと応答を確認する必要があるファイアウォールで、一部のFTPヘルパーと連携するために必要です。この場合、 &lt;code&gt;starttls&lt;/code&gt; は通常、認証を保護するためにのみ実行されます。</target>
        </trans-unit>
        <trans-unit id="6863ad3882079de8bb32abea0819f1a0f48ff477" translate="yes" xml:space="preserve">
          <source>Download and install the Filter::Simple module. (If you have Perl 5.7.1 or later, this is already done for you.)</source>
          <target state="translated">Filter::Simpleモジュールをダウンロードしてインストールします。(Perl 5.7.1以降をお持ちの場合は、既にインストール済みです)。</target>
        </trans-unit>
        <trans-unit id="026541fe8b438be29a9f47a4ab1e22dcb6dbc643" translate="yes" xml:space="preserve">
          <source>Download target directory?</source>
          <target state="translated">ダウンロード対象のディレクトリ?</target>
        </trans-unit>
        <trans-unit id="824b6b54054ef1a9091856d053b0662e9a165ca3" translate="yes" xml:space="preserve">
          <source>Download the ExtUtils::Embed kit from CPAN and run `make test'. If the tests pass, read the pods again and again and again. If they fail, see &lt;a href=&quot;perlbug&quot;&gt;perlbug&lt;/a&gt; and send a bug report with the output of &lt;code&gt;make test TEST_VERBOSE=1&lt;/code&gt; along with &lt;code&gt;perl -V&lt;/code&gt; .</source>
          <target state="translated">CPANからExtUtils :: Embedキットをダウンロードして、 `make test 'を実行します。テストに合格した場合は、ポッドを何度も読みます。失敗した場合は、&lt;a href=&quot;perlbug&quot;&gt;perlbug&lt;/a&gt;を参照し、 &lt;code&gt;perl -V&lt;/code&gt; とともに &lt;code&gt;make test TEST_VERBOSE=1&lt;/code&gt; の出力とともにバグレポートを送信してください。</target>
        </trans-unit>
        <trans-unit id="8251879473cd78cccb564b2cdf8271476079baab" translate="yes" xml:space="preserve">
          <source>Download the ExtUtils::Embed kit from CPAN and run `make test'. If the tests pass, read the pods again and again and again. If they fail, submit a bug report to &lt;a href=&quot;https://github.com/Perl/perl5/issues&quot;&gt;https://github.com/Perl/perl5/issues&lt;/a&gt; with the output of &lt;code&gt;make test TEST_VERBOSE=1&lt;/code&gt; along with &lt;code&gt;perl -V&lt;/code&gt;.</source>
          <target state="translated">CPANからExtUtils :: Embedキットをダウンロードし、「maketest」を実行します。テストに合格したら、ポッドを何度も何度も読んでください。それらが失敗した場合は、バグレポートを&lt;a href=&quot;https://github.com/Perl/perl5/issues&quot;&gt;https://github.com/Perl/perl5/issuesに&lt;/a&gt;送信し、 &lt;code&gt;make test TEST_VERBOSE=1&lt;/code&gt; の出力と &lt;code&gt;perl -V&lt;/code&gt; 送信します。</target>
        </trans-unit>
        <trans-unit id="3467811ada73635cf68082c7cc090eea63c880e2" translate="yes" xml:space="preserve">
          <source>Download the files in the desired version of Unicode from the Unicode web site &lt;a href=&quot;http://www.unicode.org&quot;&gt;http://www.unicode.org&lt;/a&gt;). These should replace the existing files in</source>
          <target state="translated">Unicode Webサイト（&lt;a href=&quot;http://www.unicode.org&quot;&gt;http://www.unicode.org&lt;/a&gt;）から、目的のバージョンのUnicodeでファイルをダウンロードします。これらは、既存のファイルを置き換える必要があります</target>
        </trans-unit>
        <trans-unit id="8de18fff973484557fd08da68d31e3a1fc6666b6" translate="yes" xml:space="preserve">
          <source>Download the files in the desired version of Unicode from the Unicode web site &lt;a href=&quot;https://www.unicode.org&quot;&gt;https://www.unicode.org&lt;/a&gt;). These should replace the existing files in</source>
          <target state="translated">Unicode Webサイト&lt;a href=&quot;https://www.unicode.org&quot;&gt;https://www.unicode.org&lt;/a&gt;から目的のバージョンのUnicodeのファイルをダウンロードします）。これらは、の既存のファイルを置き換える必要があります</target>
        </trans-unit>
        <trans-unit id="c1b64de29b8a9bf6464d6b725c2720abd75c3426" translate="yes" xml:space="preserve">
          <source>Download the pmd-bin-X.Y.zip () from the SourceForge site, extract the pmd-X.Y.jar from it, and then run that on source code thusly:</source>
          <target state="translated">SourceForge のサイトから pmd-bin-X.Y.zip ()をダウンロードし、そこから pmd-X.Y.jar を展開し、ソースコード上で実行します。</target>
        </trans-unit>
        <trans-unit id="e5859845ed9945571a1f7a84cc0836d4a7613e04" translate="yes" xml:space="preserve">
          <source>Download to the current directory the latest distribution of the modules, unpack each distribution, and create a git repository for each distribution.</source>
          <target state="translated">モジュールの最新のディストリビューションをカレントディレクトリにダウンロードし、各ディストリビューションを解凍し、各ディストリビューションのgitリポジトリを作成します。</target>
        </trans-unit>
        <trans-unit id="e49fb030ab1aaee57147e5e7a7127ea439db8792" translate="yes" xml:space="preserve">
          <source>Download, build, and install the Filter::Util::Call module. (If you have Perl 5.7.1 or later, this is already done for you.)</source>
          <target state="translated">Filter::Util::Call モジュールをダウンロードし、ビルドし、インストールします。(Perl 5.7.1 以降をお持ちの場合は、既にインストール済みです)。</target>
        </trans-unit>
        <trans-unit id="08f4aa0358a86ec0353cf2d2ed049201bf17031c" translate="yes" xml:space="preserve">
          <source>Downloads report data for this distribution from www.cpantesters.org and displays a subset of them.</source>
          <target state="translated">www.cpantesters.org からこのディストリビューションのレポートデータをダウンロードし、そのサブセットを表示します。</target>
        </trans-unit>
        <trans-unit id="366a5eddbaecc6160b117d778c095e50de4e854c" translate="yes" xml:space="preserve">
          <source>Downloads the README file associated with a distribution and runs it through the pager specified in &lt;code&gt;$CPAN::Config-&amp;gt;{pager}&lt;/code&gt; .</source>
          <target state="translated">ディストリビューションに関連付けられたREADMEファイルをダウンロードし、 &lt;code&gt;$CPAN::Config-&amp;gt;{pager}&lt;/code&gt; 指定されたページャーを介して実行します。</target>
        </trans-unit>
        <trans-unit id="6d9c288326280b540c25926e9df585a7d06577d9" translate="yes" xml:space="preserve">
          <source>Downloads the distribution from CPAN and unpacks it. Does nothing if the distribution has already been downloaded and unpacked within the current session.</source>
          <target state="translated">CPANからディストリビューションをダウンロードして解凍します。現在のセッション内で既にディストリビューションがダウンロードされ、アンパックされている場合は何もしません。</target>
        </trans-unit>
        <trans-unit id="8b9ffede701ef3f70bd821cb754750834e2eee96" translate="yes" xml:space="preserve">
          <source>Downloads the pod documentation of the file associated with a distribution (in HTML format) and runs it through the external command</source>
          <target state="translated">ディストリビューションに関連付けられたファイルのポッドドキュメントをダウンロードして(HTML形式で)、外部コマンドで実行します。</target>
        </trans-unit>
        <trans-unit id="9b3a79775a443e0246765f6e1906a833feed4fea" translate="yes" xml:space="preserve">
          <source>Downloads to the current directory the latest distribution of the module.</source>
          <target state="translated">モジュールの最新のディストリビューションをカレントディレクトリにダウンロードします。</target>
        </trans-unit>
        <trans-unit id="71044266a2765177f793c2ddbee6a230a272a817" translate="yes" xml:space="preserve">
          <source>Dr Damian Conway for suggesting the hinting interface and providing the example usage.</source>
          <target state="translated">Dr Damian Conwayは、ヒンティングインターフェースの提案と使用例を提供してくれました。</target>
        </trans-unit>
        <trans-unit id="354bb2827829162a2336a340d4ba1dae11a364cb" translate="yes" xml:space="preserve">
          <source>Dragonfly BSD</source>
          <target state="translated">トンボBSD</target>
        </trans-unit>
        <trans-unit id="47d8215ef4fc8a530cd9137d652dba538ecf4224" translate="yes" xml:space="preserve">
          <source>Draw the tree with standard ASCII characters like &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;|&lt;/code&gt;. These don't look as clean as the VT100 characters, but they'll work with almost any terminal (or the horizontal scrolling mode of less(1)) and are suitable for text documentation or email. This is the default.</source>
          <target state="translated">&lt;code&gt;+&lt;/code&gt; や &lt;code&gt;|&lt;/code&gt; などの標準のASCII文字でツリーを描画します。。これらはVT100文字ほどきれいには見えませんが、ほとんどすべての端末（またはless（1）の水平スクロールモード）で動作し、テキストドキュメントや電子メールに適しています。これがデフォルトです。</target>
        </trans-unit>
        <trans-unit id="0145690370ba83aa8175369bb4c3c9e09c697f01" translate="yes" xml:space="preserve">
          <source>Drepper, Ulrich, Peter Miller, and Fran&amp;ccedil;ois Pinard. 1995-2001. GNU &lt;code&gt;gettext&lt;/code&gt;. Available in &lt;code&gt;&lt;a href=&quot;ftp://prep.ai.mit.edu/pub/gnu/&quot;&gt;ftp://prep.ai.mit.edu/pub/gnu/&lt;/a&gt;&lt;/code&gt;, with extensive docs in the distribution tarball. [Since I wrote this article in 1998, I now see that the gettext docs are now trying more to come to terms with plurality. Whether useful conclusions have come from it is another question altogether. -- SMB, May 2001]</source>
          <target state="translated">Drepper、Ulrich、Peter Miller、Fran&amp;ccedil;oisPinard。 1995-2001。 GNUは &lt;code&gt;gettext&lt;/code&gt; 。 &lt;code&gt;&lt;a href=&quot;ftp://prep.ai.mit.edu/pub/gnu/&quot;&gt;ftp://prep.ai.mit.edu/pub/gnu/&lt;/a&gt;&lt;/code&gt; で入手でき、配布tarballに広範なドキュメントがあります。 [1998年にこの記事を書いたので、gettextドキュメントが複数との合意に向けてさらに努力していることがわかりました。有用な結論がそこから得られたかどうかは、まったく別の問題です。 --SMB、2001年5月]</target>
        </trans-unit>
        <trans-unit id="ea55ba2f7cd2bb2dfebfc7baab1eb7a28287bc85" translate="yes" xml:space="preserve">
          <source>Drop in the CPAN.pm shell. This command does this automatically if you don't specify any arguments.</source>
          <target state="translated">CPAN.pm シェルにドロップします。このコマンドは引数を指定しなかった場合、自動的にこれを行います。</target>
        </trans-unit>
        <trans-unit id="435321dd1c82c18e50a09e89a625d44c2cad992d" translate="yes" xml:space="preserve">
          <source>Due to a bug in Perl, &lt;code&gt;autodie&lt;/code&gt; may &quot;lose&quot; any format which has the same name as an autodying built-in or function.</source>
          <target state="translated">Perlのバグが &lt;code&gt;autodie&lt;/code&gt; 、autodieはautodyingビルトインまたは関数と同じ名前を持つフォーマットを「失う」ことがあります。</target>
        </trans-unit>
        <trans-unit id="6f8b083c9efdbb98335cadbb85143fc7af77ce11" translate="yes" xml:space="preserve">
          <source>Due to a popular demand the perl external program calling has been changed wrt Andreas Kaiser's port.</source>
          <target state="translated">人気のある要望により、Perl の外部プログラムの呼び出しは Andreas Kaiser のポートから変更されました。</target>
        </trans-unit>
        <trans-unit id="2fa72b6c00f9a2dd66e6782d6e7396b6679249ff" translate="yes" xml:space="preserve">
          <source>Due to an implementation glitch, the &lt;code&gt;$SIG{__DIE__}&lt;/code&gt; hook is called even inside an &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval()&lt;/a&gt;&lt;/code&gt;. Do not use this to rewrite a pending exception in &lt;code&gt;$@&lt;/code&gt; , or as a bizarre substitute for overriding &lt;code&gt;CORE::GLOBAL::die()&lt;/code&gt; . This strange action at a distance may be fixed in a future release so that &lt;code&gt;$SIG{__DIE__}&lt;/code&gt; is only called if your program is about to exit, as was the original intent. Any other use is deprecated.</source>
          <target state="translated">実装の不具合により、 &lt;code&gt;$SIG{__DIE__}&lt;/code&gt; フックは &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval()&lt;/a&gt;&lt;/code&gt; 内でも呼び出されます。 &lt;code&gt;$@&lt;/code&gt; 保留中の例外を書き換えたり、 &lt;code&gt;CORE::GLOBAL::die()&lt;/code&gt; をオーバーライドするための奇妙な代替としてこれを使用しないでください。遠く離れたこの奇妙なアクションは、将来のリリースで修正される可能性があります。そのため、 &lt;code&gt;$SIG{__DIE__}&lt;/code&gt; は、元の意図と同様に、プログラムが終了しようとしている場合にのみ呼び出されます。その他の使用は非推奨です。</target>
        </trans-unit>
        <trans-unit id="c65e636e9846e4e76451103ccccbb36e90580ce5" translate="yes" xml:space="preserve">
          <source>Due to an unfortunate bug in how &lt;code&gt;given&lt;/code&gt; was implemented between Perl 5.10 and 5.16, under those implementations the version of &lt;code&gt;$_&lt;/code&gt; governed by &lt;code&gt;given&lt;/code&gt; is merely a lexically scoped copy of the original, not a dynamically scoped alias to the original, as it would be if it were a &lt;code&gt;foreach&lt;/code&gt; or under both the original and the current Perl 6 language specification. This bug was fixed in Perl 5.18. If you really want a lexical &lt;code&gt;$_&lt;/code&gt; , specify that explicitly, but note that &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt; $_&lt;/code&gt; is now deprecated and will warn unless warnings have been disabled:</source>
          <target state="translated">Perl 5.10と5.16の間で &lt;code&gt;given&lt;/code&gt; された方法が実装されたという不幸なバグのため、これらの実装では、 &lt;code&gt;given&lt;/code&gt; された &lt;code&gt;$_&lt;/code&gt; のバージョンは元のレキシカルスコープのコピーであり、動的にスコープされた元のエイリアスではありません。それが &lt;code&gt;foreach&lt;/code&gt; であるか、元のPerl 6言語仕様と現在のPerl 6言語仕様の両方であるか。このバグはPerl 5.18で修正されました。レキシカルな &lt;code&gt;$_&lt;/code&gt; が本当に必要な場合は、それを明示的に指定しますが、 &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt; $_&lt;/code&gt; $ _は非推奨になり、警告が無効にされていない限り警告することに注意してください。</target>
        </trans-unit>
        <trans-unit id="57b220a3473420f4af411ff4f0c90e1f287c1404" translate="yes" xml:space="preserve">
          <source>Due to an unfortunate bug in how &lt;code&gt;given&lt;/code&gt; was implemented between Perl 5.10 and 5.16, under those implementations the version of &lt;code&gt;$_&lt;/code&gt; governed by &lt;code&gt;given&lt;/code&gt; is merely a lexically scoped copy of the original, not a dynamically scoped alias to the original, as it would be if it were a &lt;code&gt;foreach&lt;/code&gt; or under both the original and the current Raku language specification. This bug was fixed in Perl 5.18 (and lexicalized &lt;code&gt;$_&lt;/code&gt; itself was removed in Perl 5.24).</source>
          <target state="translated">Perl 5.10と5.16の間で &lt;code&gt;given&lt;/code&gt; がどのように実装されたかに不幸なバグがあるため、これらの実装では、 &lt;code&gt;given&lt;/code&gt; によって管理される &lt;code&gt;$_&lt;/code&gt; のバージョンは、元の言語のスコープのコピーであり、元のエイリアスの動的なスコープではありません。それはあたかも &lt;code&gt;foreach&lt;/code&gt; のまたは元と現在楽言語仕様の両方の下で。このバグはPerl5.18で修正されました（そして語彙化された &lt;code&gt;$_&lt;/code&gt; 自体はPerl 5.24で削除されました）。</target>
        </trans-unit>
        <trans-unit id="a5aff89951fd9e95c733a40d7b1bb49174fdbcb8" translate="yes" xml:space="preserve">
          <source>Due to backwards compatibility, all filehandles resemble objects of class &lt;code&gt;IO::Handle&lt;/code&gt; , or actually classes derived from that class. They actually aren't. Which means you can't derive your own class from &lt;code&gt;IO::Handle&lt;/code&gt; and inherit those methods.</source>
          <target state="translated">下位互換性があるため、すべてのファイルハンドルはクラス &lt;code&gt;IO::Handle&lt;/code&gt; オブジェクト、または実際にはそのクラスから派生したクラスに似ています。彼らは実際にはそうではありません。つまり、独自のクラスを &lt;code&gt;IO::Handle&lt;/code&gt; から派生してそれらのメソッドを継承することはできません。</target>
        </trans-unit>
        <trans-unit id="80594e7e901abf11711775b4f10d222aa28047bd" translate="yes" xml:space="preserve">
          <source>Due to backwards compatibility, all filehandles resemble objects of class &lt;code&gt;IO::Handle&lt;/code&gt;, or actually classes derived from that class. They actually aren't. Which means you can't derive your own class from &lt;code&gt;IO::Handle&lt;/code&gt; and inherit those methods.</source>
          <target state="translated">下位互換性のため、すべてのファイルハンドルはクラス &lt;code&gt;IO::Handle&lt;/code&gt; オブジェクト、または実際にはそのクラスから派生したクラスに似ています。実際にはそうではありません。つまり、 &lt;code&gt;IO::Handle&lt;/code&gt; から独自のクラスを派生させてそれらのメソッドを継承することはできません。</target>
        </trans-unit>
        <trans-unit id="34ca16f5893d48ab62d7bbcb82dec13e09f32597" translate="yes" xml:space="preserve">
          <source>Due to how &lt;code&gt;%^H&lt;/code&gt; works, this class is only useful during the compilation phase of a perl module and relies on the internals of how perl handles references in &lt;code&gt;%^H&lt;/code&gt;. This module is not a part of autodie's public API.</source>
          <target state="translated">&lt;code&gt;%^H&lt;/code&gt; がどのように機能するかにより、このクラスはperlモジュールのコンパイルフェーズでのみ役立ち、perlが &lt;code&gt;%^H&lt;/code&gt; 参照を処理する方法の内部に依存します。このモジュールは、autodieのパブリックAPIの一部ではありません。</target>
        </trans-unit>
        <trans-unit id="46599dc97579c3a9d5b0ac13818c4864629c3a1b" translate="yes" xml:space="preserve">
          <source>Due to how subtests work, you may omit a plan if you desire. This adds an implicit &lt;code&gt;done_testing()&lt;/code&gt; to the end of your subtest. The following two subtests are equivalent:</source>
          <target state="translated">サブテストの仕組みにより、必要に応じて計画を省略できます。これにより、サブテストの最後に暗黙の &lt;code&gt;done_testing()&lt;/code&gt; が追加されます。次の2つのサブテストは同等です。</target>
        </trans-unit>
        <trans-unit id="bfabb840ac564314e7376483141ead0d401f2f7b" translate="yes" xml:space="preserve">
          <source>Due to issues with various CPUs, math libraries, compilers, and standards, results for &lt;code&gt;&lt;a href=&quot;functions/atan2&quot;&gt;atan2()&lt;/a&gt;&lt;/code&gt; may vary depending on any combination of the above. Perl attempts to conform to the Open Group/IEEE standards for the results returned from &lt;code&gt;&lt;a href=&quot;functions/atan2&quot;&gt;atan2()&lt;/a&gt;&lt;/code&gt;, but cannot force the issue if the system Perl is run on does not allow it. (Tru64, HP-UX 10.20)</source>
          <target state="translated">さまざまなCPU、数学ライブラリ、コンパイラ、および標準の問題により、 &lt;code&gt;&lt;a href=&quot;functions/atan2&quot;&gt;atan2()&lt;/a&gt;&lt;/code&gt; の結果は、上記の組み合わせによって異なる場合があります。Perlは、 &lt;code&gt;&lt;a href=&quot;functions/atan2&quot;&gt;atan2()&lt;/a&gt;&lt;/code&gt; から返される結果についてOpen Group / IEEE標準に準拠しようとしますが、Perlが実行されているシステムで許可されていない場合、問題を強制できません。（Tru64、HP-UX 10.20）</target>
        </trans-unit>
        <trans-unit id="68391d1e9af605eed85ca89bb210a2cba148458c" translate="yes" xml:space="preserve">
          <source>Due to limitations of Perl subroutine call semantics, you cannot pass an array or hash. Prepend it with a &lt;code&gt;\&lt;/code&gt; to pass its reference instead. This will be remedied in time, now that Perl has subroutine prototypes. For now, you need to use the extended usage form, and prepend the name with a &lt;code&gt;*&lt;/code&gt; to output it as a hash or array.</source>
          <target state="translated">Perlサブルーチン呼び出しのセマンティクスの制限により、配列またはハッシュを渡すことはできません。代わりに参照を渡すには、 &lt;code&gt;\&lt;/code&gt; を前に付けます。これは、Perlにサブルーチンのプロトタイプが用意されたので、そのうち修正される予定です。現時点では、拡張使用法フォームを使用し、名前の前に &lt;code&gt;*&lt;/code&gt; を付けて、ハッシュまたは配列として出力する必要があります。</target>
        </trans-unit>
        <trans-unit id="b463757edb0c11231cc7018f0eaae187fe6e4840" translate="yes" xml:space="preserve">
          <source>Due to popular demand, 'MIME-Header-ISO_2022_JP' was introduced by Makamaka. Thre are still too many MUAs especially cellular phone handsets which does not grok UTF-8.</source>
          <target state="translated">好評につき、Makamakaでは「MIME-Header-ISO_2022_JP」を導入しました。特に携帯電話はUTF-8に対応していないため、まだまだMUAが多いのが現状です。</target>
        </trans-unit>
        <trans-unit id="65a0ba2fc84320e39c1003b24fcf32448d56b65d" translate="yes" xml:space="preserve">
          <source>Due to size concerns, &lt;code&gt;EUC-TW&lt;/code&gt; (Extended Unix Character), &lt;code&gt;CCCII&lt;/code&gt; (Chinese Character Code for Information Interchange), &lt;code&gt;BIG5PLUS&lt;/code&gt; (CMEX's Big5+) and &lt;code&gt;BIG5EXT&lt;/code&gt; (CMEX's Big5e) are distributed separately on CPAN, under the name &lt;a href=&quot;Encode::HanExtra&quot;&gt;Encode::HanExtra&lt;/a&gt;. That module also contains extra China-based encodings.</source>
          <target state="translated">サイズの問題により、 &lt;code&gt;EUC-TW&lt;/code&gt; （Extended Unix Character）、 &lt;code&gt;CCCII&lt;/code&gt; （Chinese Character Code for Information Interchange）、 &lt;code&gt;BIG5PLUS&lt;/code&gt; （CMEXのBig5 +）、および &lt;code&gt;BIG5EXT&lt;/code&gt; （CMEXのBig5e）は、&lt;a href=&quot;Encode::HanExtra&quot;&gt;Encode :: HanExtra&lt;/a&gt;という名前でCPANで個別に配布されます。そのモジュールには、追加の中国ベースのエンコーディングも含まれています。</target>
        </trans-unit>
        <trans-unit id="3bd045cac184874cb4ad7bcc8e71c09d97d5cddc" translate="yes" xml:space="preserve">
          <source>Due to size concerns, &lt;code&gt;EUC-TW&lt;/code&gt; (Extended Unix Character), &lt;code&gt;CCCII&lt;/code&gt; (Chinese Character Code for Information Interchange), &lt;code&gt;BIG5PLUS&lt;/code&gt; (CMEX's Big5+) and &lt;code&gt;BIG5EXT&lt;/code&gt; (CMEX's Big5e) are distributed separately on CPAN, under the name &lt;a href=&quot;http://search.cpan.org/perldoc/Encode::HanExtra&quot;&gt;Encode::HanExtra&lt;/a&gt;. That module also contains extra China-based encodings.</source>
          <target state="translated">サイズの問題により、 &lt;code&gt;EUC-TW&lt;/code&gt; （拡張Unix文字）、 &lt;code&gt;CCCII&lt;/code&gt; （情報交換用の漢字コード）、 &lt;code&gt;BIG5PLUS&lt;/code&gt; （CMEXのBig5 +）、および &lt;code&gt;BIG5EXT&lt;/code&gt; （CMEXのBig5e）は、&lt;a href=&quot;http://search.cpan.org/perldoc/Encode::HanExtra&quot;&gt;Encode :: HanExtra&lt;/a&gt;という名前でCPANで個別に配布されます。そのモジュールには、中国ベースの追加のエンコーディングも含まれています。</target>
        </trans-unit>
        <trans-unit id="5e606dfe28df13df23c0793d29104abe515f70ff" translate="yes" xml:space="preserve">
          <source>Due to size concerns, &lt;code&gt;GB 18030&lt;/code&gt; (an extension to &lt;code&gt;GBK&lt;/code&gt; ) is distributed separately on CPAN, under the name &lt;a href=&quot;http://search.cpan.org/perldoc/Encode::HanExtra&quot;&gt;Encode::HanExtra&lt;/a&gt;. That module also contains extra Taiwan-based encodings.</source>
          <target state="translated">サイズの問題により、 &lt;code&gt;GB 18030&lt;/code&gt; （ &lt;code&gt;GBK&lt;/code&gt; の拡張）は、&lt;a href=&quot;http://search.cpan.org/perldoc/Encode::HanExtra&quot;&gt;Encode :: HanExtra&lt;/a&gt;という名前でCPANで個別に配布されます。そのモジュールには、追加の台湾ベースのエンコーディングも含まれています。</target>
        </trans-unit>
        <trans-unit id="a86e50f6b3092b29c7c2c823277a62137db9e6a5" translate="yes" xml:space="preserve">
          <source>Due to size concerns, &lt;code&gt;GB 18030&lt;/code&gt; (an extension to &lt;code&gt;GBK&lt;/code&gt;) is distributed separately on CPAN, under the name &lt;a href=&quot;Encode::HanExtra&quot;&gt;Encode::HanExtra&lt;/a&gt;. That module also contains extra Taiwan-based encodings.</source>
          <target state="translated">サイズの問題により、 &lt;code&gt;GB 18030&lt;/code&gt; （ &lt;code&gt;GBK&lt;/code&gt; の拡張）は、&lt;a href=&quot;Encode::HanExtra&quot;&gt;Encode :: HanExtra&lt;/a&gt;という名前でCPANに個別に配布されています。そのモジュールには、追加の台湾ベースのエンコーディングも含まれています。</target>
        </trans-unit>
        <trans-unit id="3498cd87b97172ec6cac5f07d24a51c9d15a64cc" translate="yes" xml:space="preserve">
          <source>Due to size concerns, additional Japanese encodings below are distributed separately on CPAN, under the name Encode::JIS2K.</source>
          <target state="translated">サイズの関係上、以下の追加の日本語エンコーディングは、Encode::JIS2Kという名前でCPANで別途配布されています。</target>
        </trans-unit>
        <trans-unit id="d825b88c92a7854e8e07b5fbd910a2348c547422" translate="yes" xml:space="preserve">
          <source>Due to the current implementation of &lt;code&gt;autodie&lt;/code&gt; , unexpected results may be seen when used near or with the string version of eval.</source>
          <target state="translated">&lt;code&gt;autodie&lt;/code&gt; の現在の実装により、evalの文字列バージョンの近くで、またはそれと共に使用すると、予期しない結果が見られる場合があります。</target>
        </trans-unit>
        <trans-unit id="1331c0b3a2d1f231a5c0c66d585fa87888c7cde7" translate="yes" xml:space="preserve">
          <source>Due to the current implementation of &lt;code&gt;autodie&lt;/code&gt;, unexpected results may be seen when used near or with the string version of eval.</source>
          <target state="translated">&lt;code&gt;autodie&lt;/code&gt; の現在の実装により、evalの文字列バージョンの近くまたは一緒に使用すると、予期しない結果が見られる場合があります。</target>
        </trans-unit>
        <trans-unit id="d3912f30ffb4a7edcdecb55dbe256ab47781b419" translate="yes" xml:space="preserve">
          <source>Due to the fact that AIX 4.3.3 reached end-of-service in December 31, 2003 this information is provided as is. The Perl versions prior to Perl 5.8.9 could be compiled on AIX up to 4.3.3 with the following settings (your mileage may vary):</source>
          <target state="translated">AIX 4.3.3は2003年12月31日にサービス終了となったため、この情報はそのまま提供されています。Perl 5.8.9以前のPerlのバージョンは、以下の設定で4.3.3までのAIX上でコンパイルすることができます(あなたのマイルは異なるかもしれません)。</target>
        </trans-unit>
        <trans-unit id="0cc8eb8ed52c08d74c71e528310f912e564ee1bb" translate="yes" xml:space="preserve">
          <source>Due to the interaction between runtime and compiletime issues, and because it's probably not a very good idea anyway, you may not use &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; diagnostics&lt;/code&gt; to turn them off at compiletime. However, you may control their behaviour at runtime using the disable() and enable() methods to turn them off and on respectively.</source>
          <target state="translated">ランタイムとコンパイル時の問題の間の相互作用のため、そしてそれはおそらくあまり良い考えではないので、コンパイル時に &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; diagnostics&lt;/code&gt; をオフにする&lt;a href=&quot;functions/no&quot;&gt;ために&lt;/a&gt;診断を使用しない場合があります。ただし、disable（）およびenable（）メソッドを使用して実行時にそれらの動作を制御し、それぞれオフおよびオンにすることができます。</target>
        </trans-unit>
        <trans-unit id="ef7870ba3a8a0570eb271890a6bea79e9941f1ed" translate="yes" xml:space="preserve">
          <source>Due to the interaction between runtime and compiletime issues, and because it's probably not a very good idea anyway, you may not use &lt;code&gt;no diagnostics&lt;/code&gt; to turn them off at compiletime. However, you may control their behaviour at runtime using the disable() and enable() methods to turn them off and on respectively.</source>
          <target state="translated">ランタイムとコンパイル時の問題の間の相互作用のため、そしておそらくそれはとにかくあまり良い考えではないので、コンパイル時にそれらをオフにする &lt;code&gt;no diagnostics&lt;/code&gt; を使用しないかもしれません。ただし、disable（）メソッドとenable（）メソッドを使用して実行時に動作を制御し、それぞれオフとオンにすることができます。</target>
        </trans-unit>
        <trans-unit id="5dba6a65e991b31774fba10843a79cd147209260" translate="yes" xml:space="preserve">
          <source>Due to the limitations of the implementation, you must use base</source>
          <target state="translated">実装の制限のため、ベースの</target>
        </trans-unit>
        <trans-unit id="eb744fcb352ecd1572a7e400ccb774b86e7f5bb7" translate="yes" xml:space="preserve">
          <source>Due to the restriction of the quotes, this is a fairly complex problem. Thankfully, we have Jeffrey Friedl, author of</source>
          <target state="translated">引用符の制限のため、これはかなり複雑な問題です。ありがたいことに、以下の著者であるJeffrey Friedl氏がいます。</target>
        </trans-unit>
        <trans-unit id="2479ef6739608d556fe149fdea5d69b1b82e9627" translate="yes" xml:space="preserve">
          <source>Due to the rules and rigors of ANSI C, on some systems you have to do a seek whenever you switch between reading and writing. Amongst other things, this may have the effect of calling stdio's &lt;a href=&quot;http://man.he.net/man3/clearerr&quot;&gt;clearerr(3)&lt;/a&gt;. A WHENCE of &lt;code&gt;1&lt;/code&gt; (&lt;code&gt;SEEK_CUR&lt;/code&gt;) is useful for not moving the file position:</source>
          <target state="translated">ANSI Cの規則と厳密さにより、一部のシステムでは、読み取りと書き込みを切り替えるたびにシークを実行する必要があります。とりわけ、これはstdioの&lt;a href=&quot;http://man.he.net/man3/clearerr&quot;&gt;clearerr（3）&lt;/a&gt;を呼び出す効果があるかもしれません。WHENCE &lt;code&gt;1&lt;/code&gt; （ &lt;code&gt;SEEK_CUR&lt;/code&gt; ）は、ファイルの位置を移動しない場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="e3d6d3e302ca0b687c4f0b65161fa70175b1c871" translate="yes" xml:space="preserve">
          <source>Due to the rules and rigors of ANSI C, on some systems you have to do a seek whenever you switch between reading and writing. Amongst other things, this may have the effect of calling stdio's clearerr(3). A WHENCE of &lt;code&gt;1&lt;/code&gt; (&lt;code&gt;SEEK_CUR&lt;/code&gt; ) is useful for not moving the file position:</source>
          <target state="translated">ANSI Cの規則と厳密さのため、システムによっては、読み取りと書き込みを切り替えるたびにシークを行う必要があります。特に、これはstdioのclearerr（3）を呼び出す効果があるかもしれません。WHENCE &lt;code&gt;1&lt;/code&gt; （ &lt;code&gt;SEEK_CUR&lt;/code&gt; ）は、ファイルの位置を移動しない場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="7220a9e4aec436d927fd7caab9c9dee72fb30a6d" translate="yes" xml:space="preserve">
          <source>Due to the size concerns, additional Chinese encodings below are distributed separately on CPAN, under the name Encode::HanExtra.</source>
          <target state="translated">サイズの問題から、以下の追加の中国語エンコーディングは、Encode::HanExtra という名前で CPAN で個別に配布されています。</target>
        </trans-unit>
        <trans-unit id="791e734fb8c106991b00acd93d1da356b7e03d9b" translate="yes" xml:space="preserve">
          <source>Due to the very cryptic nature of these options, another style was developed that used long names. So instead of a cryptic &lt;code&gt;-l&lt;/code&gt; one could use the more descriptive &lt;code&gt;--long&lt;/code&gt; . To distinguish between a bundle of single-character options and a long one, two dashes are used to precede the option name. Early implementations of long options used a plus &lt;code&gt;+&lt;/code&gt; instead. Also, option values could be specified either like</source>
          <target state="translated">これらのオプションの非常に不可解な性質のため、長い名前を使用する別のスタイルが開発されました。したがって、不可解な &lt;code&gt;-l&lt;/code&gt; の代わりに、より説明的な &lt;code&gt;--long&lt;/code&gt; を使用できます。単一文字のオプションのバンドルと長いオプションのバンドルを区別するために、オプション名の前に2つのダッシュを使用しています。長いオプションの初期の実装では、代わりにプラス &lt;code&gt;+&lt;/code&gt; を使用していました。また、オプション値は次のように指定できます</target>
        </trans-unit>
        <trans-unit id="2a98701dd7e413a3dc7c3ce851463220f6e03bf7" translate="yes" xml:space="preserve">
          <source>Due to the very cryptic nature of these options, another style was developed that used long names. So instead of a cryptic &lt;code&gt;-l&lt;/code&gt; one could use the more descriptive &lt;code&gt;--long&lt;/code&gt;. To distinguish between a bundle of single-character options and a long one, two dashes are used to precede the option name. Early implementations of long options used a plus &lt;code&gt;+&lt;/code&gt; instead. Also, option values could be specified either like</source>
          <target state="translated">これらのオプションは非常に不可解な性質があるため、長い名前を使用する別のスタイルが開発されました。したがって、不可解な &lt;code&gt;-l&lt;/code&gt; の代わりに、より記述的な &lt;code&gt;--long&lt;/code&gt; を使用できます。1文字のオプションのバンドルと長いオプションのバンドルを区別するために、オプション名の前に2つのダッシュが使用されます。長いオプションの初期の実装では、代わりにプラス &lt;code&gt;+&lt;/code&gt; を使用していました。また、オプション値は次のように指定できます。</target>
        </trans-unit>
        <trans-unit id="0bd47df9aac57afeabd3fad068fb3117e1161568" translate="yes" xml:space="preserve">
          <source>Due to the way that &lt;code&gt;uniqnum()&lt;/code&gt; compares numbers, it cannot distinguish differences between bignums (especially bigints) that are too large to fit in the native platform types. For example,</source>
          <target state="translated">&lt;code&gt;uniqnum()&lt;/code&gt; は数値を比較する方法のため、ネイティブのプラットフォームタイプに収まらないほど大きいbignum（特にbigint）間の違いを区別できません。例えば、</target>
        </trans-unit>
        <trans-unit id="c0e24e606681dc5af1b9b3cb9795462cb06198f7" translate="yes" xml:space="preserve">
          <source>Due to the way that Perl parses things, your parentheses and brackets may need to be balanced, even including comments. If you run into any examples, please send them to &lt;code&gt;perlbug@perl.org&lt;/code&gt; , so that we can have a concrete example for this man page.</source>
          <target state="translated">Perlが物事を解析する方法により、コメントを含めても、括弧と括弧のバランスを取る必要があるかもしれません。例に &lt;code&gt;perlbug@perl.org&lt;/code&gt; した場合は、perlbug @ perl.orgに送信してください。そうすれば、このmanページの具体的な例を用意できます。</target>
        </trans-unit>
        <trans-unit id="31d630704b2c77a9dfc329b5c4fc227f916d975c" translate="yes" xml:space="preserve">
          <source>Due to the way that Perl parses things, your parentheses and brackets may need to be balanced, even including comments. If you run into any examples, please submit them to &lt;a href=&quot;https://github.com/Perl/perl5/issues&quot;&gt;https://github.com/Perl/perl5/issues&lt;/a&gt;, so that we can have a concrete example for this man page.</source>
          <target state="translated">Perlが物事を解析する方法のために、コメントを含めても、括弧と括弧のバランスをとる必要があるかもしれません。例が&lt;a href=&quot;https://github.com/Perl/perl5/issues&quot;&gt;見つかった&lt;/a&gt;場合は、https：//github.com/Perl/perl5/issuesに送信してください。このマニュアルページの具体的な例を示すことができます。</target>
        </trans-unit>
        <trans-unit id="fc3fa3b419b8695e1ca79a869f79ee2bcd448351" translate="yes" xml:space="preserve">
          <source>Due to their nature, not all Unicode character properties are suitable for regular expression matches, nor &lt;code&gt;prop_invlist()&lt;/code&gt; . The remaining non-provisional, non-internal ones are accessible via &lt;a href=&quot;unicode/ucd#prop_invmap()&quot;&gt;prop_invmap() in Unicode::UCD&lt;/a&gt; (except for those that this Perl installation hasn't included; see &lt;a href=&quot;#Unicode-character-properties-that-are-NOT-accepted-by-Perl&quot;&gt;below for which those are&lt;/a&gt;).</source>
          <target state="translated">その性質上、すべてのUnicode文字プロパティが正規表現の一致や &lt;code&gt;prop_invlist()&lt;/code&gt; に適しているわけではありません。残りの非暫定的、非内部的なものは&lt;a href=&quot;unicode/ucd#prop_invmap()&quot;&gt;、Unicode :: UCDのprop_invmap（）を&lt;/a&gt;介してアクセスできます（このPerlインストールに含まれていないものを除きます。&lt;a href=&quot;#Unicode-character-properties-that-are-NOT-accepted-by-Perl&quot;&gt;以下を&lt;/a&gt;参照してください）。</target>
        </trans-unit>
        <trans-unit id="e0f89bc078912bb85d02c7de5e4df13e6f3e958d" translate="yes" xml:space="preserve">
          <source>Due to their nature, not all Unicode character properties are suitable for regular expression matches, nor &lt;code&gt;prop_invlist()&lt;/code&gt;. The remaining non-provisional, non-internal ones are accessible via &lt;a href=&quot;Unicode::UCD#prop_invmap%28%29&quot;&gt;&quot;prop_invmap()&quot; in Unicode::UCD&lt;/a&gt; (except for those that this Perl installation hasn't included; see &lt;a href=&quot;#Unicode-character-properties-that-are-NOT-accepted-by-Perl&quot;&gt;below for which those are&lt;/a&gt;).</source>
          <target state="translated">その性質上、すべてのUnicode文字プロパティが正規表現の一致や &lt;code&gt;prop_invlist()&lt;/code&gt; に適しているわけではありません。残りの非暫定的で非内部的なものは&lt;a href=&quot;Unicode::UCD#prop_invmap%28%29&quot;&gt;、Unicode :: UCDの「prop_invmap（）」&lt;/a&gt;を介してアクセスできます（このPerlインストールに含まれていないものを除く。&lt;a href=&quot;#Unicode-character-properties-that-are-NOT-accepted-by-Perl&quot;&gt;以下を&lt;/a&gt;参照してください）。</target>
        </trans-unit>
        <trans-unit id="1caad945fadff253ca62db9c999f67f3c76a14fd" translate="yes" xml:space="preserve">
          <source>Dummy module providing JSON::PP::Boolean</source>
          <target state="translated">JSON::PP::Boolean を提供するダミーモジュール</target>
        </trans-unit>
        <trans-unit id="c8fd4d7989a4abd8975246b01c29e212852ad5d8" translate="yes" xml:space="preserve">
          <source>Dummy routine which &quot;locks&quot; an SV when there is no locking module present. Exists to avoid test for a &lt;code&gt;NULL&lt;/code&gt; function pointer and because it could potentially warn under some level of strict-ness.</source>
          <target state="translated">ロックモジュールが存在しない場合にSVを「ロック」するダミールーチン。 &lt;code&gt;NULL&lt;/code&gt; 関数ポインタのテストを回避するために存在します。また、ある程度の厳密さの下で警告を発する可能性があるためです。</target>
        </trans-unit>
        <trans-unit id="fc825db9b75c6b805dc48232f9aa43bb74e273e4" translate="yes" xml:space="preserve">
          <source>Dummy routine which &quot;locks&quot; an SV when there is no locking module present. Exists to avoid test for a NULL function pointer and because it could potentially warn under some level of strict-ness.</source>
          <target state="translated">ロックモジュールが存在しない場合に SV を &quot;ロック&quot; するダミールーチン。NULL 関数ポインタのテストを避けるためと、あるレベルの厳格さの下では警告を出す可能性があるために存在します。</target>
        </trans-unit>
        <trans-unit id="739999c9a070e9fb14ee1aceff3623ead5eba800" translate="yes" xml:space="preserve">
          <source>Dummy routine which &quot;shares&quot; an SV when there is no sharing module present. Or &quot;locks&quot; it. Or &quot;unlocks&quot; it. In other words, ignores its single SV argument. Exists to avoid test for a &lt;code&gt;NULL&lt;/code&gt; function pointer and because it could potentially warn under some level of strict-ness.</source>
          <target state="translated">共有モジュールが存在しない場合にSVを「共有」するダミールーチン。またはそれを「ロック」します。またはそれを「ロック解除」します。つまり、単一のSV引数を無視します。 &lt;code&gt;NULL&lt;/code&gt; 関数ポインタのテストを回避するために存在します。また、ある程度の厳密さの下で警告を発する可能性があるためです。</target>
        </trans-unit>
        <trans-unit id="bf0c1d486931f3f325ed075b19809ade73db7a85" translate="yes" xml:space="preserve">
          <source>Dummy routine which &quot;shares&quot; an SV when there is no sharing module present. Or &quot;locks&quot; it. Or &quot;unlocks&quot; it. In other words, ignores its single SV argument. Exists to avoid test for a NULL function pointer and because it could potentially warn under some level of strict-ness.</source>
          <target state="translated">共有モジュールが存在しない場合に SV を &quot;共有&quot; するダミールーチン。あるいは &quot;ロック&quot; します。あるいは &quot;アンロック&quot; します。言い換えれば、単一の SV の引数を無視する。NULL 関数ポインタのテストを回避するためと、あるレベルの厳格さの下で警告を出す可能性があるために存在します。</target>
        </trans-unit>
        <trans-unit id="6aeb2e7388871dde9ff4f4c8dd9d88de30673dfe" translate="yes" xml:space="preserve">
          <source>Dummy routine which &quot;unlocks&quot; an SV when there is no locking module present. Exists to avoid test for a &lt;code&gt;NULL&lt;/code&gt; function pointer and because it could potentially warn under some level of strict-ness.</source>
          <target state="translated">ロックモジュールが存在しない場合にSVを「ロック解除」するダミールーチン。 &lt;code&gt;NULL&lt;/code&gt; 関数ポインタのテストを回避するために存在します。また、ある程度の厳密さの下で警告を発する可能性があるためです。</target>
        </trans-unit>
        <trans-unit id="176b35c46c4ecb91ea04e78d1a42469728759765" translate="yes" xml:space="preserve">
          <source>Dummy routine which &quot;unlocks&quot; an SV when there is no locking module present. Exists to avoid test for a NULL function pointer and because it could potentially warn under some level of strict-ness.</source>
          <target state="translated">ロックモジュールが存在しない場合に SV のロックを解除するダミールーチン。NULL 関数ポインタのテストを避けるためと、あるレベルの厳格さの下では警告を出す可能性があるために存在します。</target>
        </trans-unit>
        <trans-unit id="1b4eb5a38397a88fbb62d856222f65cee1e332e8" translate="yes" xml:space="preserve">
          <source>Dummy routine which reports that object can be destroyed when there is no sharing module present. It ignores its single SV argument, and returns 'true'. Exists to avoid test for a &lt;code&gt;NULL&lt;/code&gt; function pointer and because it could potentially warn under some level of strict-ness.</source>
          <target state="translated">共有モジュールが存在しない場合にオブジェクトが破棄される可能性があることを報告するダミールーチン。単一のSV引数を無視し、「true」を返します。 &lt;code&gt;NULL&lt;/code&gt; 関数ポインタのテストを回避するために存在します。また、ある程度の厳密さの下で警告を発する可能性があるためです。</target>
        </trans-unit>
        <trans-unit id="37582a718d2cb7f89d1fea284988f5efcf14f0a7" translate="yes" xml:space="preserve">
          <source>Dummy routine which reports that object can be destroyed when there is no sharing module present. It ignores its single SV argument, and returns 'true'. Exists to avoid test for a NULL function pointer and because it could potentially warn under some level of strict-ness.</source>
          <target state="translated">共有モジュールが存在しない場合にオブジェクトが破壊されることを報告するダミールーチン。SV の単一の引数を無視して 'true' を返します。NULL 関数ポインタのテストを回避するためと、あるレベルの厳格さの下で警告を出す可能性があるために存在します。</target>
        </trans-unit>
        <trans-unit id="1a71039f50cfa3d68327859e6e1ee38df19b6603" translate="yes" xml:space="preserve">
          <source>Dump Pod-parsing events as text</source>
          <target state="translated">Pod-parsingイベントをテキストとしてダンプする</target>
        </trans-unit>
        <trans-unit id="e8ae22209d4ac002bb420d76da89bbe7de1fac69" translate="yes" xml:space="preserve">
          <source>Dump all the namespaces to standard output.</source>
          <target state="translated">すべての名前空間を標準出力にダンプします。</target>
        </trans-unit>
        <trans-unit id="f2e8d87285df2d5dabb9e7d33d3a5ccc1734224b" translate="yes" xml:space="preserve">
          <source>Dump arrays holding contents of debugged files.</source>
          <target state="translated">デバッグされたファイルの内容をダンプする配列。</target>
        </trans-unit>
        <trans-unit id="c3ebe589cb305dd68a2940605b6daaa7020bacf2" translate="yes" xml:space="preserve">
          <source>Dump arrays holding debugged files.</source>
          <target state="translated">デバッグされたファイルを保持するダンプ配列。</target>
        </trans-unit>
        <trans-unit id="226b4cf975bc516395af9737531a129bdd39ab93" translate="yes" xml:space="preserve">
          <source>Dump contents of &quot;reused&quot; addresses.</source>
          <target state="translated">再利用」アドレスの内容をダンプする。</target>
        </trans-unit>
        <trans-unit id="259f2ccf29b6875ba051810947cb2d0facc44c4f" translate="yes" xml:space="preserve">
          <source>Dump offset information. This can be used to see how regops correlate to the pattern. Output format is</source>
          <target state="translated">オフセット情報をダンプします。これは、レゴップスがパターンとどのように相関しているかを確認するために使用することができます。出力フォーマットは</target>
        </trans-unit>
        <trans-unit id="0c76297cc9be5e641298778b62c24d2cf18dcd23" translate="yes" xml:space="preserve">
          <source>Dump symbol tables of packages.</source>
          <target state="translated">パッケージのシンボルテーブルをダンプします。</target>
        </trans-unit>
        <trans-unit id="87f33d5bfa467e7016a8c6f9502f70002c9bfcce" translate="yes" xml:space="preserve">
          <source>Dump the configuration in the same format that CPAN.pm uses. This is useful for checking the configuration as well as using the dump as a starting point for a new, custom configuration.</source>
          <target state="translated">CPAN.pm が使用しているのと同じフォーマットで設定をダンプします。これは設定をチェックするのと同時に、新しいカスタム設定の出発点としてダンプを使うのに便利です。</target>
        </trans-unit>
        <trans-unit id="4b8420d45b35aac310c6f6a8a752e4db117364a2" translate="yes" xml:space="preserve">
          <source>Dump the contents of a padlist</source>
          <target state="translated">パッドリストの内容をダンプ</target>
        </trans-unit>
        <trans-unit id="aa55ac5b7f095f269a678e79910c4c37b3152a49" translate="yes" xml:space="preserve">
          <source>Dump the contents of all SVs not yet freed (debugging aid).</source>
          <target state="translated">まだ解放されていないすべてのSVの内容をダンプする(デバッグ支援)。</target>
        </trans-unit>
        <trans-unit id="d6a50535ad9de82c4339f219e99b9b784c2acae9" translate="yes" xml:space="preserve">
          <source>Dump the final program out after it is compiled and optimised.</source>
          <target state="translated">コンパイルして最適化した後、最終的なプログラムをダンプします。</target>
        </trans-unit>
        <trans-unit id="918c0daf95540cecfd55fc2c00499f5882b52cfa" translate="yes" xml:space="preserve">
          <source>Dump the flags associated with the program</source>
          <target state="translated">プログラムに関連付けられたフラグをダンプします。</target>
        </trans-unit>
        <trans-unit id="ca6f5764b6bb205859885185dfc165c84ecff79a" translate="yes" xml:space="preserve">
          <source>Dumper</source>
          <target state="translated">Dumper</target>
        </trans-unit>
        <trans-unit id="391e102ac6a7db07ce2abb00cef38679a9c72ad2" translate="yes" xml:space="preserve">
          <source>Dumper(</source>
          <target state="translated">Dumper(</target>
        </trans-unit>
        <trans-unit id="5e107609c2d58489d78c64df77c07976e804b91e" translate="yes" xml:space="preserve">
          <source>Dumping Perl Data Structures</source>
          <target state="translated">Perl データ構造体のダンプ</target>
        </trans-unit>
        <trans-unit id="44d1680eb49a12854ee630cd3f07447c8ef725fa" translate="yes" xml:space="preserve">
          <source>Dumping a large array or hash</source>
          <target state="translated">大きな配列やハッシュをダンプする</target>
        </trans-unit>
        <trans-unit id="214c5750b8c63fb732f8406374025d36f7d80fa1" translate="yes" xml:space="preserve">
          <source>Dumps the C backtrace to the given &lt;code&gt;fp&lt;/code&gt;.</source>
          <target state="translated">Cバックトレースを指定された &lt;code&gt;fp&lt;/code&gt; にダンプします。</target>
        </trans-unit>
        <trans-unit id="416f4f5ac3093ab1714cc7418abe095efaa50a64" translate="yes" xml:space="preserve">
          <source>Dumps the C backtrace to the given fp.</source>
          <target state="translated">Cのバックトレースを指定されたfpにダンプします。</target>
        </trans-unit>
        <trans-unit id="1a8a79003d6e119f87dd05fb34533dde374be690" translate="yes" xml:space="preserve">
          <source>Dumps the contents of an SV to the &lt;code&gt;STDERR&lt;/code&gt; filehandle.</source>
          <target state="translated">SVの内容を &lt;code&gt;STDERR&lt;/code&gt; ファイルハンドルにダンプします。</target>
        </trans-unit>
        <trans-unit id="ec8f218a06cd2ecbe02c8bf7842f6c0f5d02c9c5" translate="yes" xml:space="preserve">
          <source>Dumps the entire optree of the current program starting at &lt;code&gt;PL_main_root&lt;/code&gt; to &lt;code&gt;STDERR&lt;/code&gt; . Also dumps the optrees for all visible subroutines in &lt;code&gt;PL_defstash&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;PL_main_root&lt;/code&gt; から始まる現在のプログラムのoptree全体を &lt;code&gt;STDERR&lt;/code&gt; にダンプします。また、PL_defstashのすべての可視サブルーチンのoptreeをダンプし &lt;code&gt;PL_defstash&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ead67843cf0fb29e56769f489a16db990ba85998" translate="yes" xml:space="preserve">
          <source>Dumps the entire optree of the current program starting at &lt;code&gt;PL_main_root&lt;/code&gt; to &lt;code&gt;STDERR&lt;/code&gt;. Also dumps the optrees for all visible subroutines in &lt;code&gt;PL_defstash&lt;/code&gt;.</source>
          <target state="translated">PL_main_rootで始まる現在のプログラムのオプツリー全体を &lt;code&gt;STDERR&lt;/code&gt; に &lt;code&gt;PL_main_root&lt;/code&gt; します。また、PL_defstash内のすべての表示可能なサブルーチンのオプツリーをダンプし &lt;code&gt;PL_defstash&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="46f7f7e922a3e5c53d29eb7033810ca1c5ff1e45" translate="yes" xml:space="preserve">
          <source>Dumps the optree starting at OP &lt;code&gt;o&lt;/code&gt; to &lt;code&gt;STDERR&lt;/code&gt; .</source>
          <target state="translated">OP &lt;code&gt;o&lt;/code&gt; で始まるoptree を &lt;code&gt;STDERR&lt;/code&gt; にダンプします。</target>
        </trans-unit>
        <trans-unit id="ff1db99630ecaf43bc4df8a3267b247cc452a749" translate="yes" xml:space="preserve">
          <source>Dumps the optree starting at OP &lt;code&gt;o&lt;/code&gt; to &lt;code&gt;STDERR&lt;/code&gt;.</source>
          <target state="translated">OPから始まる構文木をダンプします &lt;code&gt;o&lt;/code&gt; をする &lt;code&gt;STDERR&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e83684d55af04a9978210506a5f3da39f6330394" translate="yes" xml:space="preserve">
          <source>Dumps the optrees for all visible subroutines in &lt;code&gt;stash&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;stash&lt;/code&gt; 内のすべての可視サブルーチンのoptreeをダンプします。</target>
        </trans-unit>
        <trans-unit id="d0dd33cb07e6dbe4372c395cbc22fafe10ceb0fd" translate="yes" xml:space="preserve">
          <source>Dumps the optrees for all visible subroutines in &lt;code&gt;stash&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;stash&lt;/code&gt; 内のすべての表示可能なサブルーチンのオプツリーをダンプします。</target>
        </trans-unit>
        <trans-unit id="55b069d1baf075aa441953fab4c10d5fb0c55b03" translate="yes" xml:space="preserve">
          <source>Dumps to STDOUT a two column list of op names and op descriptions. If an optional pattern is given then only lines which match the (case insensitive) pattern will be output.</source>
          <target state="translated">オペの名前とオペの説明の2カラムのリストをSTDOUTに出力する。オプションのパターンが与えられた場合は、(大文字小文字を区別しない)パターンにマッチした行のみが出力されます。</target>
        </trans-unit>
        <trans-unit id="0bb1bbfb4b82018f68b759747efb8b836bc13b23" translate="yes" xml:space="preserve">
          <source>Dumpvalue</source>
          <target state="translated">Dumpvalue</target>
        </trans-unit>
        <trans-unit id="29282979e5caf58379ebe9349836f426355bbd81" translate="yes" xml:space="preserve">
          <source>Dumpvalue - provides screen dump of Perl data.</source>
          <target state="translated">Dumpvalue-Perl データのスクリーンダンプを提供します。</target>
        </trans-unit>
        <trans-unit id="8c7383d3d81f7a77acf912122973c53dcae0fe84" translate="yes" xml:space="preserve">
          <source>Dup</source>
          <target state="translated">Dup</target>
        </trans-unit>
        <trans-unit id="4ea54bac60a77dfa23129ee560b9a4306b582737" translate="yes" xml:space="preserve">
          <source>Duping filehandles</source>
          <target state="translated">ファイルハンドルの複製</target>
        </trans-unit>
        <trans-unit id="3e736ef9c9d3f1959724220fab1c809f387efa73" translate="yes" xml:space="preserve">
          <source>Duplicate free() ignored</source>
          <target state="translated">重複した free()は無視される</target>
        </trans-unit>
        <trans-unit id="5194887c5341c823d0b499a2bddca4cdca4574a6" translate="yes" xml:space="preserve">
          <source>Duplicate keys are entirely defined by the comparison function. In the case-insensitive example above, the keys: 'KEY' and 'key' would be considered duplicates, and assigning to the second one would overwrite the first. If duplicates are allowed for (with the R_DUP flag discussed below), only a single copy of duplicate keys is stored in the database --- so (again with example above) assigning three values to the keys: 'KEY', 'Key', and 'key' would leave just the first key: 'KEY' in the database with three values. For some situations this results in information loss, so care should be taken to provide fully qualified comparison functions when necessary. For example, the above comparison routine could be modified to additionally compare case-sensitively if two keys are equal in the case insensitive comparison:</source>
          <target state="translated">重複するキーは比較関数によって完全に定義されます。大文字小文字を区別しない上の例では、'KEY' と 'key' は重複しているとみなされ、2 番目のキーに代入すると 1 番目のキーが上書きされる。重複が許可されている場合 (後述の R_DUP フラグを使用した場合)、データベースには重複したキーのコピーが 1 つしか保存されません ---そのため (上記の例でも)、キーに 'KEY'、'KEY'、'KEY' の 3 つの値を代入すると、データベースには最初のキーである 'KEY' だけが 3 つの値で残ることになります。状況によっては、これは情報の損失につながりますので、必要に応じて完全に修飾された比較関数を提供するように注意する必要があります。例えば、上記の比較ルーチンは、大文字小文字を区別しない比較で2つのキーが等しい場合に、大文字小文字を区別しない比較を追加で行うように変更することができます。</target>
        </trans-unit>
        <trans-unit id="dcb8d29e0990e3da3372e15eb7f856ef83bf96dd" translate="yes" xml:space="preserve">
          <source>Duplicate modifier '%c' after '%c' in %s</source>
          <target state="translated">s の '%c' の後に修飾子 '%c' が重複しています。</target>
        </trans-unit>
        <trans-unit id="231270fe32be376e1ff61953994a1d9555ba5c57" translate="yes" xml:space="preserve">
          <source>Duplicates a pad name list.</source>
          <target state="translated">パッド名リストを複製します。</target>
        </trans-unit>
        <trans-unit id="9900c4228b05d518bce49d6e43830390656bb380" translate="yes" xml:space="preserve">
          <source>Duplicates a pad name.</source>
          <target state="translated">パッド名を複製します。</target>
        </trans-unit>
        <trans-unit id="9c150a6a5de518050ee469f156c0d8c9991e7d83" translate="yes" xml:space="preserve">
          <source>Duplicates a pad.</source>
          <target state="translated">パッドを複製します。</target>
        </trans-unit>
        <trans-unit id="0076cd1b095d68f4b7f0056ea7c0088bca45f3b9" translate="yes" xml:space="preserve">
          <source>Duplicates ccc=vr (Canonical_Combining_Class=Virama)</source>
          <target state="translated">重複 ccc=vr (Canonical_Combining_Class=Virama)</target>
        </trans-unit>
        <trans-unit id="34a249fd97af29be13a351a7a3b7c31857c28f36" translate="yes" xml:space="preserve">
          <source>Duplicates the current value of &lt;code&gt;SV&lt;/code&gt; , on the exit from the current &lt;code&gt;ENTER&lt;/code&gt; /&lt;code&gt;LEAVE&lt;/code&gt;</source>
          <target state="translated">現在の &lt;code&gt;ENTER&lt;/code&gt; / &lt;code&gt;LEAVE&lt;/code&gt; の出口で、 &lt;code&gt;SV&lt;/code&gt; の現在の値を複製します</target>
        </trans-unit>
        <trans-unit id="7445a8f04a8f54ffbdfb0e3bb01920b5118fc985" translate="yes" xml:space="preserve">
          <source>Duplicates the current value of &lt;code&gt;SV&lt;/code&gt;. On the exit from the current &lt;code&gt;ENTER&lt;/code&gt;/&lt;code&gt;LEAVE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;SV&lt;/code&gt; の現在の値を複製します。現在の &lt;code&gt;ENTER&lt;/code&gt; / &lt;code&gt;LEAVE&lt;/code&gt; の出口で</target>
        </trans-unit>
        <trans-unit id="327c7809967b34dba21cd1b07757c86e4f680971" translate="yes" xml:space="preserve">
          <source>During &quot;make test&quot; the &lt;code&gt;comp/cpp&lt;/code&gt; will be skipped because on Tru64 it cannot be tested before Perl has been installed. The test refers to the use of the &lt;code&gt;-P&lt;/code&gt; option of Perl.</source>
          <target state="translated">「make test」の間、 &lt;code&gt;comp/cpp&lt;/code&gt; はスキップされます。これは、Tru64ではPerlがインストールされる前にテストできないためです。このテストは、Perlの &lt;code&gt;-P&lt;/code&gt; オプションの使用に言及しています。</target>
        </trans-unit>
        <trans-unit id="5e7f35ad8b1dfeae34736f7f9bd1a3770686122f" translate="yes" xml:space="preserve">
          <source>During &quot;make test&quot; the &lt;code&gt;comp&lt;/code&gt;/&lt;code&gt;cpp&lt;/code&gt; will be skipped because on Tru64 it cannot be tested before Perl has been installed. The test refers to the use of the &lt;code&gt;-P&lt;/code&gt; option of Perl.</source>
          <target state="translated">「 &lt;code&gt;cpp&lt;/code&gt; 」の間、 &lt;code&gt;comp&lt;/code&gt; / cppはスキップされます。これは、Tru64ではPerlがインストールされる前にテストできないためです。このテストは、Perlの &lt;code&gt;-P&lt;/code&gt; オプションの使用を参照しています。</target>
        </trans-unit>
        <trans-unit id="82a46924bba9ec42c3fc1e7dbc6523da9c5a0d98" translate="yes" xml:space="preserve">
          <source>During compilation you will see this warning from toke.c:</source>
          <target state="translated">コンパイル中に toke.c からこのような警告が表示されます。</target>
        </trans-unit>
        <trans-unit id="1b78be5f5982368a285609a938bd717c952f6438" translate="yes" xml:space="preserve">
          <source>During compilation, this points to the array containing the names part of the pad for the currently-compiling code.</source>
          <target state="translated">コンパイル時には、現在コンパイル中のコードのパッドの名前の部分を含む配列を指します。</target>
        </trans-unit>
        <trans-unit id="8fc3623ed774bb34e7810f090f0b1728d1403063" translate="yes" xml:space="preserve">
          <source>During compilation, this points to the array containing the values part of the pad for the currently-compiling code. (At runtime a CV may have many such value arrays; at compile time just one is constructed.) At runtime, this points to the array containing the currently-relevant values for the pad for the currently-executing code.</source>
          <target state="translated">コンパイル時には,現在コンパイル中のコードのパッドの値の部分を含む配列を指します.(実行時には,CVはこのような値の配列を多数持っているかもしれませんが,コンパイル時には1つの配列だけが作成されます).実行時には,現在実行中のコードのパッドの現在の関連する値を含む配列を指します.</target>
        </trans-unit>
        <trans-unit id="688fb3463c876328fa68fbb00f834fb161bf77e9" translate="yes" xml:space="preserve">
          <source>During extensions build phase, a script</source>
          <target state="translated">拡張機能のビルドフェーズでは、スクリプト</target>
        </trans-unit>
        <trans-unit id="fa018cae9c9703d71453474c98317ac396edf673" translate="yes" xml:space="preserve">
          <source>During global destruction, Perl will always garbage collect objects before unblessed references. See &lt;a href=&quot;perlhacktips#PERL_DESTRUCT_LEVEL&quot;&gt;&quot;PERL_DESTRUCT_LEVEL&quot; in perlhacktips&lt;/a&gt; for more information about global destruction.</source>
          <target state="translated">グローバルな破壊の間、Perlは常に祝福されていない参照の前にオブジェクトをガベージコレクションします。グローバル破壊の詳細について&lt;a href=&quot;perlhacktips#PERL_DESTRUCT_LEVEL&quot;&gt;は、perlhacktipsの「PERL_DESTRUCT_LEVEL」を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="3a8cb198eac07a20f06df8ba7dc5ed5cb604d226" translate="yes" xml:space="preserve">
          <source>During global destruction, Perl will always garbage collect objects before unblessed references. See &lt;a href=&quot;perlhacktips#PERL_DESTRUCT_LEVEL&quot;&gt;PERL_DESTRUCT_LEVEL in perlhacktips&lt;/a&gt; for more information about global destruction.</source>
          <target state="translated">グローバル破壊の間、Perlは常に、祝福されていない参照の前にオブジェクトをガベージコレクションします。グローバルな破棄の詳細について&lt;a href=&quot;perlhacktips#PERL_DESTRUCT_LEVEL&quot;&gt;は、perlhacktipsのPERL_DESTRUCT_LEVEL&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="63b2774e342436fdc21964665d44a1dd453eb511" translate="yes" xml:space="preserve">
          <source>During installation &lt;code&gt;$List::Util::XS::VERSION&lt;/code&gt; will be set to &lt;code&gt;&lt;a href=&quot;../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if the XS was not compiled.</source>
          <target state="translated">XSがコンパイルされていない場合、インストール中に &lt;code&gt;$List::Util::XS::VERSION&lt;/code&gt; が &lt;code&gt;&lt;a href=&quot;../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; に設定されます。</target>
        </trans-unit>
        <trans-unit id="5946c994ba014b2a561d7368e6cc2cd95c367bfa" translate="yes" xml:space="preserve">
          <source>During installation &lt;code&gt;$List::Util::XS::VERSION&lt;/code&gt; will be set to &lt;code&gt;undef&lt;/code&gt; if the XS was not compiled.</source>
          <target state="translated">インストール中に、XSがコンパイルされていない場合、 &lt;code&gt;$List::Util::XS::VERSION&lt;/code&gt; は &lt;code&gt;undef&lt;/code&gt; に設定されます。</target>
        </trans-unit>
        <trans-unit id="365d0173e5c9fab16585ed58b7aee60ff977956d" translate="yes" xml:space="preserve">
          <source>During recent history, data is moved around a computer in 8-bit chunks, often called &quot;bytes&quot; but also known as &quot;octets&quot; in standards documents. Perl is widely used to manipulate data of many types: not only strings of characters representing human or computer languages, but also &quot;binary&quot; data, being the machine's representation of numbers, pixels in an image, or just about anything.</source>
          <target state="translated">近年の歴史の中で、データは 8 ビットの塊でコンピュータの周りを移動していますが、これはしばしば「バイト」と呼ばれていますが、標準文書では「オクテット」とも呼ばれています。Perl は多くの種類のデータを操作するために広く使われています。人間やコンピュータの言語を表す文字列だけでなく、数字や画像のピクセルなど、あらゆるものを機械で表現する「バイナリ」データもあります。</target>
        </trans-unit>
        <trans-unit id="c00b220a28d96bc682b1b18fd920cedf0efda896" translate="yes" xml:space="preserve">
          <source>During the 'r' command CPAN.pm finds modules with a version number of zero. When the command finishes, it prints a report about this. If you want this report to be very verbose, say yes to the following variable.</source>
          <target state="translated">r' コマンドの間、CPAN.pm はバージョン番号がゼロのモジュールを見つけます。コマンドが終了すると、これについてのレポートを表示します。このレポートを非常に冗長なものにしたい場合は、次の変数に yes を指定してください。</target>
        </trans-unit>
        <trans-unit id="1e8d8123a94cf9a48937762f3c4d82a2ae9cfc9c" translate="yes" xml:space="preserve">
          <source>During the 'r' command CPAN.pm finds modules without version number. When the command finishes, it prints a report about this. If you want this report to be very verbose, say yes to the following variable.</source>
          <target state="translated">r' コマンドの間、CPAN.pm はバージョン番号のないモジュールを見つけます。コマンドが終了すると、これについてのレポートを表示します。もしこのレポートを非常に冗長なものにしたい場合は、次の変数に yes を指定してください。</target>
        </trans-unit>
        <trans-unit id="00bf1cb155480acd23b923e4a6c03a2b23cd1d39" translate="yes" xml:space="preserve">
          <source>During the build process, three Perl images are produced.</source>
          <target state="translated">ビルド処理中に、3つのPerlイメージが生成されます。</target>
        </trans-unit>
        <trans-unit id="4695645d68d6dbb11815010844432810a8cc5ce6" translate="yes" xml:space="preserve">
          <source>During the matching of this sub-pattern, it has its own set of captures which are valid during the sub-match, but are discarded once control returns to the main pattern. For example, the following matches, with the inner pattern capturing &quot;B&quot; and matching &quot;BB&quot;, while the outer pattern captures &quot;A&quot;;</source>
          <target state="translated">このサブパターンのマッチングの間、それはそれ自身のキャプチャのセットを持っており、それはサブマッチングの間有効であるが、制御がメインパターンに戻ると破棄される。例えば、以下のマッチは、内側のパターンが &quot;B &quot;をキャプチャして &quot;BB &quot;とマッチングし、外側のパターンが &quot;A &quot;をキャプチャしています。</target>
        </trans-unit>
        <trans-unit id="e6ec7eb737062f01f212178148567a03e6c845e4" translate="yes" xml:space="preserve">
          <source>During the normal course of events, the parent process and every pseudo-process started by it will wait for their respective pseudo-children to complete before they exit. This means that the parent and every pseudo-child created by it that is also a pseudo-parent will only exit after their pseudo-children have exited.</source>
          <target state="translated">通常のイベントの間、親プロセスとそれによって開始されたすべての疑似プロセスは、終了する前にそれぞれの疑似子プロセスが完了するのを待ちます。これは、親プロセスとそれによって生成されたすべての疑似親である疑似子プロセスは、疑似子プロセスが終了した後にのみ終了することを意味します。</target>
        </trans-unit>
        <trans-unit id="85a78e23b9d9c4e7a961f0c956e555ec189c2e27" translate="yes" xml:space="preserve">
          <source>During the rest of this document, the shortcuts A (for accuracy), P (for precision), F (fallback) and R (rounding mode) are be used.</source>
          <target state="translated">このドキュメントの残りの部分では、A(精度)、P(精度)、F(フォールバック)、R(丸めモード)のショートカットを使用します。</target>
        </trans-unit>
        <trans-unit id="26974b2880875e58f9a65545ea413592199b96d1" translate="yes" xml:space="preserve">
          <source>During the rest of this document, the shortcuts A (for accuracy), P (for precision), F (fallback) and R (rounding mode) will be used.</source>
          <target state="translated">このドキュメントの残りの部分では、A(精度)、P(精度)、F(フォールバック)、R(丸めモード)のショートカットを使用します。</target>
        </trans-unit>
        <trans-unit id="f8d90cb30467e2a4d157edb90535bc578beea09a" translate="yes" xml:space="preserve">
          <source>During this search no attention is paid to the semantics of the construct. Thus:</source>
          <target state="translated">この検索の間、構成要素の意味論には注意が払われません。したがって</target>
        </trans-unit>
        <trans-unit id="601d1570400ebbc8e652fb389057e665c3716c4a" translate="yes" xml:space="preserve">
          <source>DynaLoader</source>
          <target state="translated">DynaLoader</target>
        </trans-unit>
        <trans-unit id="9d69ce3ced252503b953a83d970f6811f3f613e6" translate="yes" xml:space="preserve">
          <source>DynaLoader - Dynamically load C libraries into Perl code</source>
          <target state="translated">DynaLoader-Perl コードに C ライブラリを動的にロードする</target>
        </trans-unit>
        <trans-unit id="b801b82847d571219ed7e9cb40b5911d8c6fd1ce" translate="yes" xml:space="preserve">
          <source>DynaLoader Interface Summary</source>
          <target state="translated">DynaLoaderインターフェースの概要</target>
        </trans-unit>
        <trans-unit id="44c249a4a70f6f5d86041728f18f2c1b944c09ee" translate="yes" xml:space="preserve">
          <source>DynaLoader.pm</source>
          <target state="translated">DynaLoader.pm</target>
        </trans-unit>
        <trans-unit id="7bf55f093a98122c15a38c4d1e0e12b14eb5e676" translate="yes" xml:space="preserve">
          <source>DynaLoader_pm.PL</source>
          <target state="translated">DynaLoader_pm.PL</target>
        </trans-unit>
        <trans-unit id="8c0469fbee509ece06e3ca30a6f9eb6672898d4e" translate="yes" xml:space="preserve">
          <source>Dynamic Loading Problems With GNU as and GNU ld</source>
          <target state="translated">GNU asとGNU ldの動的読み込みの問題</target>
        </trans-unit>
        <trans-unit id="eafe90e80018d592f31306075f13c6355bb554de" translate="yes" xml:space="preserve">
          <source>Dynamic Loading versus Static Loading</source>
          <target state="translated">動的負荷と静的負荷の比較</target>
        </trans-unit>
        <trans-unit id="da95eef5c485e4cd1d5a7961d0ca58ec0b914d56" translate="yes" xml:space="preserve">
          <source>Dynamic Scope and the Context Stack</source>
          <target state="translated">動的スコープとコンテキストスタック</target>
        </trans-unit>
        <trans-unit id="e6e2a2c7c1603246902c42979e7716a6a53a2226" translate="yes" xml:space="preserve">
          <source>Dynamic Templates</source>
          <target state="translated">動的テンプレート</target>
        </trans-unit>
        <trans-unit id="c8b41424729315af5e909c06767b3234e1c2dd11" translate="yes" xml:space="preserve">
          <source>Dynamic loading</source>
          <target state="translated">ダイナミックローディング</target>
        </trans-unit>
        <trans-unit id="6aeae057e24d3406dc773ebda5aef0ba83459132" translate="yes" xml:space="preserve">
          <source>Dynamic loading is required if you want to use XS modules from CPAN (like DBI (and DBD's), JSON::XS, and Text::CSV_XS) or update CORE modules from CPAN with newer versions (like Encode) without rebuilding all of the perl binary.</source>
          <target state="translated">CPANのXSモジュール(DBI(とDBD)、JSON::XS、Text::CSV_XSなど)を使用したい場合や、CPANのCOREモジュールを新しいバージョン(Encodeなど)に更新したい場合に、Perlのバイナリをすべて再構築することなく動的にロードする必要があります。</target>
        </trans-unit>
        <trans-unit id="376a2d3fdb39cd734db8f5317d570d379d27e726" translate="yes" xml:space="preserve">
          <source>Dynamic scoping works over a &lt;b&gt;dynamic scope&lt;/b&gt;, making variables visible throughout the rest of the &lt;b&gt;block&lt;/b&gt; in which they are first used and in any &lt;b&gt;subroutines&lt;/b&gt; that are called by the rest of the block. Dynamically scoped variables can have their values temporarily changed (and implicitly restored later) by a &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; operator. (Compare &lt;b&gt;lexical scoping&lt;/b&gt;.) Used more loosely to mean how a subroutine that is in the middle of calling another subroutine &amp;ldquo;contains&amp;rdquo; that subroutine at &lt;b&gt;runtime&lt;/b&gt;.</source>
          <target state="translated">動的オーバー作品スコープ&lt;b&gt;動的範囲を&lt;/b&gt;、残りの全体にわたって変数を可視化&lt;b&gt;ブロック&lt;/b&gt;それらが最初に使用される、任意に&lt;b&gt;サブルーチン&lt;/b&gt;ブロックの残りの部分によって呼び出されます。動的スコープの変数は、 &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; オペレーターによって一時的に値が変更される可能性があります（後で暗黙的に復元されます）。（&lt;b&gt;字句スコープの&lt;/b&gt;比較。）別のサブルーチンを呼び出す途中のサブルーチンが&lt;b&gt;実行時に&lt;/b&gt;そのサブルーチンを「含む」方法を意味するために、より緩く使用されてい&lt;b&gt;ます&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="16f059722e7a21ebd60b75a2a9c431a5712557ff" translate="yes" xml:space="preserve">
          <source>Dynamic scoping works over a &lt;b&gt;dynamic scope&lt;/b&gt;, making variables visible throughout the rest of the &lt;b&gt;block&lt;/b&gt; in which they are first used and in any &lt;b&gt;subroutines&lt;/b&gt; that are called by the rest of the block. Dynamically scoped variables can have their values temporarily changed (and implicitly restored later) by a &lt;code&gt;local&lt;/code&gt; operator. (Compare &lt;b&gt;lexical scoping&lt;/b&gt;.) Used more loosely to mean how a subroutine that is in the middle of calling another subroutine &amp;ldquo;contains&amp;rdquo; that subroutine at &lt;b&gt;runtime&lt;/b&gt;.</source>
          <target state="translated">動的オーバー作品スコープ&lt;b&gt;動的範囲を&lt;/b&gt;、残りの全体にわたって変数を可視化&lt;b&gt;ブロック&lt;/b&gt;それらが最初に使用される、任意に&lt;b&gt;サブルーチン&lt;/b&gt;ブロックの残りの部分によって呼び出されます。動的スコープの変数は、 &lt;code&gt;local&lt;/code&gt; オペレーターによって一時的に値が変更される（そして後で暗黙的に復元される）ことがあります。（&lt;b&gt;字句スコープを&lt;/b&gt;比較してください。）別のサブルーチンを呼び出す途中のサブルーチンが&lt;b&gt;実行時に&lt;/b&gt;そのサブルーチンをどのように「含む」かを意味するために、より大まかに使用され&lt;b&gt;ます&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="fb638018434277b4fc82279e676431d053924a22" translate="yes" xml:space="preserve">
          <source>Dynamically load $filename, which must be the path to a shared object or library. An opaque 'library reference' is returned as a handle for the loaded object. Returns undef on error.</source>
          <target state="translated">このパスは、共有オブジェクトまたはライブラリへのパスでなければなりません。不透明な 'ライブラリ参照' がロードされたオブジェクトのハンドルとして返されます。エラーの場合は undef を返します。</target>
        </trans-unit>
        <trans-unit id="86d6546533b1f34d2c75903edbf95c52c4a6e87e" translate="yes" xml:space="preserve">
          <source>Dynamically load C libraries into Perl code</source>
          <target state="translated">Perl コードに C ライブラリを動的にロード</target>
        </trans-unit>
        <trans-unit id="549c414661c7e2cd66ebf276140209d3a293c3ec" translate="yes" xml:space="preserve">
          <source>Dynamically unload $libref, which must be an opaque 'library reference' as returned from dl_load_file. Returns one on success and zero on failure. This function is optional and may not necessarily be provided on all platforms.</source>
          <target state="translated">これは、dl_load_file から返される不透明な 'ライブラリ参照' でなければなりません。成功した場合は 1 を、失敗した場合は 0 を返します。この関数はオプションであり、すべてのプラットフォームで提供されるとは限りません。</target>
        </trans-unit>
        <trans-unit id="e0184adedf913b076626646d3f52c3b49c39ad6d" translate="yes" xml:space="preserve">
          <source>E</source>
          <target state="translated">E</target>
        </trans-unit>
        <trans-unit id="fa9bdf01ece32bc99b1e14c6937aab7757e65d12" translate="yes" xml:space="preserve">
          <source>E&amp;lt;...&amp;gt; codes are resolved.</source>
          <target state="translated">E &amp;lt;...&amp;gt;コードは解決されます。</target>
        </trans-unit>
        <trans-unit id="8ba6f1546de2a6de38d5975288d79871e380398d" translate="yes" xml:space="preserve">
          <source>E&amp;lt;...&amp;gt; may freely appear in any formatting code (other than in another E&amp;lt;...&amp;gt; or in an Z&amp;lt;&amp;gt;). That is, &quot;X&amp;lt;The E&amp;lt;euro&amp;gt;1,000,000 Solution&amp;gt;&quot; is valid, as is &quot;L&amp;lt;The E&amp;lt;euro&amp;gt;1,000,000 Solution|Million::Euros&amp;gt;&quot;.</source>
          <target state="translated">E &amp;lt;...&amp;gt;は、（別のE &amp;lt;...&amp;gt;またはZ &amp;lt;&amp;gt;以外の）書式設定コードで自由に使用できます。つまり、「L &amp;lt;The E &amp;lt;euro&amp;gt; 1,000,000 Solution | Million :: Euros&amp;gt;」と同様に、「X &amp;lt;The E &amp;lt;euro&amp;gt; 1,000,000 Solution&amp;gt;」は有効です。</target>
        </trans-unit>
        <trans-unit id="fa4a7a170f7075560c98a976572cae386b13a240" translate="yes" xml:space="preserve">
          <source>E.g.</source>
          <target state="translated">E.g.</target>
        </trans-unit>
        <trans-unit id="30394ead01f93c28afa8c8b097b8493cfaedcf3b" translate="yes" xml:space="preserve">
          <source>E.g. a collator for Spanish, which ignores diacritics and case difference (i.e. level 1), with reversed case ordering and no normalization.</source>
          <target state="translated">例えば、スペイン語用の照合語で、大文字小文字の区別を無視した (レベル 1)大文字小文字の順序を逆にして正規化を行わないもの。</target>
        </trans-unit>
        <trans-unit id="10c56e2f6bd010417c5d9ae6293f4b104ad1b293" translate="yes" xml:space="preserve">
          <source>E.g. when 'a' and 'e' are ignorable, 'element' is equal to 'lament' (or 'lmnt').</source>
          <target state="translated">例えば、'a'と'e'が無知な場合、'element'は'lament'(または'lmnt')に等しい。</target>
        </trans-unit>
        <trans-unit id="54752205cb5bf21cf1543c1d8786b50bfa512554" translate="yes" xml:space="preserve">
          <source>E.g. when searching in</source>
          <target state="translated">で検索した場合など</target>
        </trans-unit>
        <trans-unit id="c9faf7260b3872bd0cc8c1b2903b97df4d17534d" translate="yes" xml:space="preserve">
          <source>E.g., &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt; 'foo', 'bar', 'baz'&lt;/code&gt; may lead Perl to finding</source>
          <target state="translated">たとえば、 &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt; 'foo', 'bar', 'baz'&lt;/code&gt; は、Perlを見つける可能性があります</target>
        </trans-unit>
        <trans-unit id="f65f44baca22fc36c204a17aba7cde6d0380e9f7" translate="yes" xml:space="preserve">
          <source>E.g., &lt;code&gt;system 'foo', 'bar', 'baz'&lt;/code&gt; may lead Perl to finding</source>
          <target state="translated">たとえば、 &lt;code&gt;system 'foo', 'bar', 'baz'&lt;/code&gt; は、Perlを検索に導く可能性があります</target>
        </trans-unit>
        <trans-unit id="14202089b63db480cc56897191e80ea08ccae522" translate="yes" xml:space="preserve">
          <source>E.g., when searching in</source>
          <target state="translated">例えば</target>
        </trans-unit>
        <trans-unit id="b485c7ba8009d93828a2ae17d6a645ae6a07af2b" translate="yes" xml:space="preserve">
          <source>EAI_AGAIN</source>
          <target state="translated">EAI_AGAIN</target>
        </trans-unit>
        <trans-unit id="466933f0131ed375510214c913516df86604074c" translate="yes" xml:space="preserve">
          <source>EAI_BADFLAGS</source>
          <target state="translated">EAI_BADFLAGS</target>
        </trans-unit>
        <trans-unit id="57f7c1078c8aa2aaddb1e9ccfa4ab347b04e159f" translate="yes" xml:space="preserve">
          <source>EAI_FAMILY</source>
          <target state="translated">EAI_FAMILY</target>
        </trans-unit>
        <trans-unit id="39fca7efe56c6594f4e9febe7fc94d3000aee85e" translate="yes" xml:space="preserve">
          <source>EAI_NODATA</source>
          <target state="translated">EAI_NODATA</target>
        </trans-unit>
        <trans-unit id="c73870589ea66cb6b8021a5e864d81f53f6c61da" translate="yes" xml:space="preserve">
          <source>EAI_NONAME</source>
          <target state="translated">EAI_NONAME</target>
        </trans-unit>
        <trans-unit id="9a6c71cac9e5549cf4a89b20629a42a5c3d01807" translate="yes" xml:space="preserve">
          <source>EAI_SERVICE</source>
          <target state="translated">EAI_SERVICE</target>
        </trans-unit>
        <trans-unit id="cf18d56706e6a161ea7a892c730e7fc94aa42849" translate="yes" xml:space="preserve">
          <source>EBCDIC</source>
          <target state="translated">EBCDIC</target>
        </trans-unit>
        <trans-unit id="db39ab5da5fc359d74ab7f80a9662d49c8256b60" translate="yes" xml:space="preserve">
          <source>EBCDIC Encodings</source>
          <target state="translated">EBCDICエンコーディング</target>
        </trans-unit>
        <trans-unit id="acf1dc4914532273e100530a9ab5c863dba82d84" translate="yes" xml:space="preserve">
          <source>EBCDIC Examples:</source>
          <target state="translated">EBCDICの例。</target>
        </trans-unit>
        <trans-unit id="332c2be33ecb50e660de8a6bec931a2002f3ce8c" translate="yes" xml:space="preserve">
          <source>EBCDIC Platforms</source>
          <target state="translated">EBCDICプラットフォーム</target>
        </trans-unit>
        <trans-unit id="d5e0cb1a52c6c43ea7491f03d8cf20e2863b3020" translate="yes" xml:space="preserve">
          <source>EBCDIC checksums will differ for the same file translated into ASCII and vice versa.</source>
          <target state="translated">EBCDICチェックサムは、同じファイルをASCIIに翻訳した場合と、その逆の場合では異なります。</target>
        </trans-unit>
        <trans-unit id="c4a1a6bb8b2ba023d8e2ace21595c7370a5af29a" translate="yes" xml:space="preserve">
          <source>EBCDIC code sets recognized by Perl</source>
          <target state="translated">Perl で認識される EBCDIC コードセット</target>
        </trans-unit>
        <trans-unit id="8917832f80dc1f23f4ce37b35b7094bce451b8d6" translate="yes" xml:space="preserve">
          <source>EBCDIC sort results may differ from ASCII sort results especially for mixed case strings. This is discussed in more detail &lt;a href=&quot;#SORTING&quot;&gt;below&lt;/a&gt;.</source>
          <target state="translated">EBCDICソート結果は、特に大/小文字混合ストリングの場合、ASCIIソート結果と異なる場合があります。これについては、&lt;a href=&quot;#SORTING&quot;&gt;以下で&lt;/a&gt;詳しく説明します。</target>
        </trans-unit>
        <trans-unit id="7677238c1c94d673588f0b0008d5f4a6f1ae6faa" translate="yes" xml:space="preserve">
          <source>ECMA</source>
          <target state="translated">ECMA</target>
        </trans-unit>
        <trans-unit id="ca4fa29952335b9cbf3adeeb9b44993cc8a7a5e0" translate="yes" xml:space="preserve">
          <source>ECMA-035 (eq &lt;code&gt;ISO-2022&lt;/code&gt;)</source>
          <target state="translated">ECMA-035 (eq &lt;code&gt;ISO-2022&lt;/code&gt;)</target>
        </trans-unit>
        <trans-unit id="0161b12e1086c489bcc4c4218bf647b2c2e7af38" translate="yes" xml:space="preserve">
          <source>ECMA-048 is available on-line (at least at the time of this writing) at &lt;a href=&quot;http://www.ecma-international.org/publications/standards/Ecma-048.htm&quot;&gt;http://www.ecma-international.org/publications/standards/Ecma-048.htm&lt;/a&gt;.</source>
          <target state="translated">ECMA-048は&lt;a href=&quot;http://www.ecma-international.org/publications/standards/Ecma-048.htm&quot;&gt;http://www.ecma-international.org/publications/standards/Ecma-048.htm&lt;/a&gt;からオンラインで入手できます（少なくともこの記事の執筆時点）。</target>
        </trans-unit>
        <trans-unit id="23e17e81d1c8f0928ecb688013b0e12de12786c2" translate="yes" xml:space="preserve">
          <source>ECMA-048 is available on-line (at least at the time of this writing) at &lt;a href=&quot;https://www.ecma-international.org/publications/standards/Ecma-048.htm&quot;&gt;https://www.ecma-international.org/publications/standards/Ecma-048.htm&lt;/a&gt;.</source>
          <target state="translated">ECMA-048は、&lt;a href=&quot;https://www.ecma-international.org/publications/standards/Ecma-048.htm&quot;&gt;https：&lt;/a&gt; //www.ecma-international.org/publications/standards/Ecma-048.htmからオンラインで（少なくともこの記事の執筆時点では）入手できます。</target>
        </trans-unit>
        <trans-unit id="0216d6b25a22e0b782349678c3b9d439ab040aa1" translate="yes" xml:space="preserve">
          <source>EFFECTIVE</source>
          <target state="translated">EFFECTIVE</target>
        </trans-unit>
        <trans-unit id="4f5a646d5f41d5d0501c72e4b38d02f1b4dbf4a6" translate="yes" xml:space="preserve">
          <source>EGV</source>
          <target state="translated">EGV</target>
        </trans-unit>
        <trans-unit id="cbc724c9910501b7f3260e0af4b0be278ac0c6a0" translate="yes" xml:space="preserve">
          <source>ELEMENTS OF THE INTERPRETER</source>
          <target state="translated">インタープリターの要素</target>
        </trans-unit>
        <trans-unit id="775eda021e49d1db0c56510d89f1a3a5b0d3533c" translate="yes" xml:space="preserve">
          <source>ELEMENT_LIST</source>
          <target state="translated">ELEMENT_LIST</target>
        </trans-unit>
        <trans-unit id="26086124515389440c2153ecca2fa86e19333108" translate="yes" xml:space="preserve">
          <source>EMX</source>
          <target state="translated">EMX</target>
        </trans-unit>
        <trans-unit id="274c18c04f053750184eb461592a3aeba38deb84" translate="yes" xml:space="preserve">
          <source>EMX runtime is required (may be substituted by RSX). Note that it is possible to make</source>
          <target state="translated">EMXランタイムが必要です(RSXで代用可能)。を作ることができることに注意してください。</target>
        </trans-unit>
        <trans-unit id="ee406c89e6d96da9d9c9078da02dd1085c757041" translate="yes" xml:space="preserve">
          <source>ENCNAME</source>
          <target state="translated">ENCNAME</target>
        </trans-unit>
        <trans-unit id="09d70e3cb3e8ca25c8e1c040798016341acb9d34" translate="yes" xml:space="preserve">
          <source>ENCODED WORD</source>
          <target state="translated">エンコード語</target>
        </trans-unit>
        <trans-unit id="1e306f9d0fec9dc9a627cd5c3b6dd9bb1770a21e" translate="yes" xml:space="preserve">
          <source>ENCODING</source>
          <target state="translated">ENCODING</target>
        </trans-unit>
        <trans-unit id="240541599231ed86787c9e52f5af64302a43ab0b" translate="yes" xml:space="preserve">
          <source>ENCODING/CODESET FLAG NOTES</source>
          <target state="translated">コーディング/コーデセットフラグの注記</target>
        </trans-unit>
        <trans-unit id="d205abee3d2a71688a6b66568be289a94050031c" translate="yes" xml:space="preserve">
          <source>END</source>
          <target state="translated">END</target>
        </trans-unit>
        <trans-unit id="1a17261bcf4b75475931b061714080707917f700" translate="yes" xml:space="preserve">
          <source>END blocks in threads</source>
          <target state="translated">スレッド内のエンドブロック</target>
        </trans-unit>
        <trans-unit id="54febf31399865b922c143850536b3c8103720f9" translate="yes" xml:space="preserve">
          <source>ENTER</source>
          <target state="translated">ENTER</target>
        </trans-unit>
        <trans-unit id="279e6f32faa6de9830db1d1a9ad2cbe111c4672a" translate="yes" xml:space="preserve">
          <source>ENTER_with_name</source>
          <target state="translated">ENTER_with_name</target>
        </trans-unit>
        <trans-unit id="6d3c353157df1302b4606a2c3c31edf9ce433536" translate="yes" xml:space="preserve">
          <source>ENTRIES IN EACH LEXICON</source>
          <target state="translated">各レキシコンのエントリー</target>
        </trans-unit>
        <trans-unit id="15d54da16fed3cc2ae89bbdaf9ad9e1b0ec1df2c" translate="yes" xml:space="preserve">
          <source>ENVIRONMENT</source>
          <target state="translated">ENVIRONMENT</target>
        </trans-unit>
        <trans-unit id="dcbd369d30529f9f8b0c8d483614d01ac947cddb" translate="yes" xml:space="preserve">
          <source>ENVIRONMENT VARIABLES</source>
          <target state="translated">環境変動</target>
        </trans-unit>
        <trans-unit id="cb8f8d1fdc31a300a149531a3ee67854b7226f82" translate="yes" xml:space="preserve">
          <source>ENVIRONMENT VARIABLES THAT AFFECT TEST::HARNESS</source>
          <target state="translated">TEST::HARNESSに影響する環境変数</target>
        </trans-unit>
        <trans-unit id="ca7f3972a83e913d649e11c108df24283c3bc376" translate="yes" xml:space="preserve">
          <source>ENVIRONMENT VARIABLES THAT TAP::HARNESS::COMPATIBLE SETS</source>
          <target state="translated">TAP::HARNESS::COMPATIBIBLE SETSの環境変数</target>
        </trans-unit>
        <trans-unit id="2b46cf1024800aa170659aafb346721ce6d03fa5" translate="yes" xml:space="preserve">
          <source>ENVIRONMENTAL VARIABLES</source>
          <target state="translated">環境変動</target>
        </trans-unit>
        <trans-unit id="cda4aab5bcbd0ed38717196ad5a3684cd59490a3" translate="yes" xml:space="preserve">
          <source>EOF</source>
          <target state="translated">EOF</target>
        </trans-unit>
        <trans-unit id="506fa659da589b353034b69fa8084d4abc04ac0a" translate="yes" xml:space="preserve">
          <source>EOF this</source>
          <target state="translated">イーオーエフ</target>
        </trans-unit>
        <trans-unit id="f7084ac12cca76d68cdd87fe9d782e1ae84dd265" translate="yes" xml:space="preserve">
          <source>EOF.</source>
          <target state="translated">EOF.</target>
        </trans-unit>
        <trans-unit id="bc8e77d510181b5522d113b8d79cd4cb3e49542e" translate="yes" xml:space="preserve">
          <source>EOL Platforms</source>
          <target state="translated">EOLプラットフォーム</target>
        </trans-unit>
        <trans-unit id="7d063d313be8f22d60adcb2e5150c0209bf36674" translate="yes" xml:space="preserve">
          <source>ERRNO</source>
          <target state="translated">ERRNO</target>
        </trans-unit>
        <trans-unit id="ebe21523a5dccd37a9fcf7ea0fd32b1eca292ad0" translate="yes" xml:space="preserve">
          <source>ERROR HANDLING</source>
          <target state="translated">エラー処理</target>
        </trans-unit>
        <trans-unit id="161833a14be7adad1a6eb962fc3f24b1791debe8" translate="yes" xml:space="preserve">
          <source>ERROR REPORTING</source>
          <target state="translated">エラー報告</target>
        </trans-unit>
        <trans-unit id="fb558b481c7703cb01a866167aa87ba7ffeeb0ce" translate="yes" xml:space="preserve">
          <source>ERRORS</source>
          <target state="translated">ERRORS</target>
        </trans-unit>
        <trans-unit id="2ef444354ee97e4dd743f7f63b3e4d0c239b4132" translate="yes" xml:space="preserve">
          <source>ERRORS DUE TO DIVISION BY ZERO</source>
          <target state="translated">ゼロによる分割によるエラー</target>
        </trans-unit>
        <trans-unit id="6a22654ad1bd17a1b7f8a33ebc606c6dd0499218" translate="yes" xml:space="preserve">
          <source>ERRORS DUE TO DIVISION BY ZERO OR LOGARITHM OF ZERO</source>
          <target state="translated">ゼロによる分割またはゼロの論理和によるエラー</target>
        </trans-unit>
        <trans-unit id="c79b986f6448f6bcfe4c395367179ab049f8d63e" translate="yes" xml:space="preserve">
          <source>ERRORS DUE TO INDIGESTIBLE ARGUMENTS</source>
          <target state="translated">指標のない主張に起因するエラー</target>
        </trans-unit>
        <trans-unit id="4ab4bacd50726797aff815243821a3bb405f6900" translate="yes" xml:space="preserve">
          <source>ERRSV</source>
          <target state="translated">ERRSV</target>
        </trans-unit>
        <trans-unit id="6f1d7e623d1be2e3224550fb5ed680f08aba75ed" translate="yes" xml:space="preserve">
          <source>ESCAPE SEQUENCES</source>
          <target state="translated">ESCAPE SEQUENCES</target>
        </trans-unit>
        <trans-unit id="c68e9c8ffafea2d41e94c29ec6ef311a4fc01058" translate="yes" xml:space="preserve">
          <source>ESTI GSM 03.38 Encoding</source>
          <target state="translated">ESTI GSM 03.38 エンコーディング</target>
        </trans-unit>
        <trans-unit id="330d938044782725e081a62faa873e5784320980" translate="yes" xml:space="preserve">
          <source>ESTI GSM 03.38 Encoding itself.</source>
          <target state="translated">ESTI GSM 03.38 エンコードそのもの。</target>
        </trans-unit>
        <trans-unit id="0979861f08f8c62c6b00e5c27ed6a26ba1bd4070" translate="yes" xml:space="preserve">
          <source>EUC</source>
          <target state="translated">EUC</target>
        </trans-unit>
        <trans-unit id="0a9e66dbcb7ce21221b3b891f3797d28da463cec" translate="yes" xml:space="preserve">
          <source>EVAL without pos change exceeded limit in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="translated">位置変更なしのEVALが正規表現の制限を超えました。&amp;lt;-ここにm /％s /でマーク</target>
        </trans-unit>
        <trans-unit id="650d38c44af2f00886f1f10758ea6145c85dca78" translate="yes" xml:space="preserve">
          <source>EVENT PRODUCTION METHODS</source>
          <target state="translated">イベントプロデュース手法</target>
        </trans-unit>
        <trans-unit id="e9199febdaab27118bac1b42feacb4f953051759" translate="yes" xml:space="preserve">
          <source>EXAMPLE</source>
          <target state="translated">EXAMPLE</target>
        </trans-unit>
        <trans-unit id="79e0bba4d7ab03dd3a43d89e18dc509cf2803c4f" translate="yes" xml:space="preserve">
          <source>EXAMPLE - Greekperl</source>
          <target state="translated">例-Greekperl</target>
        </trans-unit>
        <trans-unit id="c1459caada695329b2e0c6704825c3b8e7a13c88" translate="yes" xml:space="preserve">
          <source>EXAMPLE 1</source>
          <target state="translated">例1</target>
        </trans-unit>
        <trans-unit id="1358d71098fb89610fe1aac79c61d72cd99d3282" translate="yes" xml:space="preserve">
          <source>EXAMPLE 2</source>
          <target state="translated">例2</target>
        </trans-unit>
        <trans-unit id="bf337e44a3f58c52533729fe2435927aca3951e1" translate="yes" xml:space="preserve">
          <source>EXAMPLE 3</source>
          <target state="translated">例3</target>
        </trans-unit>
        <trans-unit id="6c373f3759a7e7f5ea3aa6485c89916c7bfcefb6" translate="yes" xml:space="preserve">
          <source>EXAMPLE 4</source>
          <target state="translated">例4</target>
        </trans-unit>
        <trans-unit id="c0fcde52500282f83cc647053ccb330dab650466" translate="yes" xml:space="preserve">
          <source>EXAMPLE 5</source>
          <target state="translated">例5</target>
        </trans-unit>
        <trans-unit id="45b9b19b0fbae586929496cd8750455d351de3e8" translate="yes" xml:space="preserve">
          <source>EXAMPLE 6</source>
          <target state="translated">例6</target>
        </trans-unit>
        <trans-unit id="c45a24f213f8694012485c12afa309d47467f3fd" translate="yes" xml:space="preserve">
          <source>EXAMPLE 7 (Coming Soon)</source>
          <target state="translated">EXAMPLE 7 (Coming Soon)</target>
        </trans-unit>
        <trans-unit id="efa7b38bfff5f32b2321e835dcdafd3692ef4121" translate="yes" xml:space="preserve">
          <source>EXAMPLE 8 (Coming Soon)</source>
          <target state="translated">EXAMPLE 8 (Coming Soon)</target>
        </trans-unit>
        <trans-unit id="62774320706bd47493c114307c201f9b0569a380" translate="yes" xml:space="preserve">
          <source>EXAMPLE 9 Passing open files to XSes</source>
          <target state="translated">例9 開いているファイルをXSesに渡す</target>
        </trans-unit>
        <trans-unit id="5620a0ea3c2afd67a246637da41377405c24e6fb" translate="yes" xml:space="preserve">
          <source>EXAMPLE OF A SIMPLE PATCH</source>
          <target state="translated">簡単なパッチの例</target>
        </trans-unit>
        <trans-unit id="a8099c29efbd0420188d4a7efe08cb02085720f0" translate="yes" xml:space="preserve">
          <source>EXAMPLE: $ perl -e&quot;exit 44;&quot; Non-hushed error exit %SYSTEM-F-ABORT, abort DCL message $ show sym $STATUS $STATUS == &quot;%X0000002C&quot;</source>
          <target state="translated">EXAMPLE:$ perl -e &quot;exit 44;&quot; 非ハッシュドエラー終了 %SYSTEM-F-ABORT、DCLメッセージを中止 $ show sym $STATUS $STATUS ==&quot;%X0000002C&quot;</target>
        </trans-unit>
        <trans-unit id="a06e781ed035862478fdb8e74e8410d0fb77a7e0" translate="yes" xml:space="preserve">
          <source>EXAMPLE: if ($quiet_exit) { vmsish::hushed(1); } print &quot;Sssshhhh...I'm hushed...\n&quot; if vmsish::hushed(); exit 44;</source>
          <target state="translated">EXAMPLE:if ($quiet_exit){vmsish::haushed(1);}print &quot;Sssshhhh...I'm hushed...I'm h\n&quot; if vmsish::haushed();exit 44.</target>
        </trans-unit>
        <trans-unit id="c8296cf24395c1237ea3d8bd4a47331705d59199" translate="yes" xml:space="preserve">
          <source>EXAMPLE: use vmsish 'hushed'; # turn on hushed flag use Carp; # Carp compiled hushed exit 44; # will be hushed croak('I die'); # will be hushed no vmsish 'hushed'; # turn off hushed flag exit 44; # will not be hushed croak('I die2'): # WILL be hushed, croak was compiled hushed</source>
          <target state="translated">EXAMPLE:use vmsish ' hushed';#turn on hushed flag use Carp;#Carp compiled hushed exit 44;#will be hushed croak('I die');#will be hushed no vmsish ' hushed';#turn off hushed flag exit 44;#will not be hushed croak('I die2').#WILL be hushed,croak was compiled hushed</target>
        </trans-unit>
        <trans-unit id="9659699670b30983eb4e3c22454887e3c9c6ce39" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">EXAMPLES</target>
        </trans-unit>
        <trans-unit id="80b0ebd5e30f42e63544199d92ca94554dccc4b9" translate="yes" xml:space="preserve">
          <source>EXCEPTIONS</source>
          <target state="translated">EXCEPTIONS</target>
        </trans-unit>
        <trans-unit id="06e1961ca3f53e3c48b3b5e66be4ce82f00b34ed" translate="yes" xml:space="preserve">
          <source>EXCLUDE_EXT</source>
          <target state="translated">EXCLUDE_EXT</target>
        </trans-unit>
        <trans-unit id="790392d6b839abbb5b061152b6a3114de84502b4" translate="yes" xml:space="preserve">
          <source>EXECUTE</source>
          <target state="translated">EXECUTE</target>
        </trans-unit>
        <trans-unit id="9076eba5adee82e6d2fcaeb3ed4783aa94393984" translate="yes" xml:space="preserve">
          <source>EXE_FILES</source>
          <target state="translated">EXE_FILES</target>
        </trans-unit>
        <trans-unit id="644b5806e118fe0af3936c64572a1496ddda7507" translate="yes" xml:space="preserve">
          <source>EXISTS</source>
          <target state="translated">EXISTS</target>
        </trans-unit>
        <trans-unit id="2173310c114b19bb1884cfc1f1c60d0ee7f8965b" translate="yes" xml:space="preserve">
          <source>EXISTS this, key</source>
          <target state="translated">EXISTS これ、キー</target>
        </trans-unit>
        <trans-unit id="b7510c8c453004eea60fefa1e03b9543d11c009d" translate="yes" xml:space="preserve">
          <source>EXIT CODES</source>
          <target state="translated">EXIT CODES</target>
        </trans-unit>
        <trans-unit id="3a06c7d53de8e4207bc5b59139ccca4aa8a85a6b" translate="yes" xml:space="preserve">
          <source>EXIT STATUS</source>
          <target state="translated">終了ステータス</target>
        </trans-unit>
        <trans-unit id="bfabdd28c2c3b60f19c824f86bf07607fcef7b92" translate="yes" xml:space="preserve">
          <source>EXIT VALUES</source>
          <target state="translated">出口値</target>
        </trans-unit>
        <trans-unit id="49e2ee12a2cb5c774bfad575cb3bcba82617b335" translate="yes" xml:space="preserve">
          <source>EXITING A THREAD</source>
          <target state="translated">スレッドの終了</target>
        </trans-unit>
        <trans-unit id="bbab371aab4e813225c2ece9a49a380012d2c551" translate="yes" xml:space="preserve">
          <source>EXLOCK flag available since 0.19.</source>
          <target state="translated">EXLOCKフラグは0.19から利用可能になりました。</target>
        </trans-unit>
        <trans-unit id="e4f2a2341e0d9e2dcbb8ca9ce37431a945288e22" translate="yes" xml:space="preserve">
          <source>EXPECTED METHODS</source>
          <target state="translated">期待される方法</target>
        </trans-unit>
        <trans-unit id="a60078e00dea4c70dbff7ca80ea730dc6f8dcdbb" translate="yes" xml:space="preserve">
          <source>EXPECTED VALUE</source>
          <target state="translated">期待値</target>
        </trans-unit>
        <trans-unit id="ecfb7a5ad5fc1b4f5cc510ab16d0961139e316c5" translate="yes" xml:space="preserve">
          <source>EXPIRATION SUPPORT</source>
          <target state="translated">EXPIRATION SUPPORT</target>
        </trans-unit>
        <trans-unit id="c0b9641f510bdc263b1b4f8cdf15c1c068ad9fea" translate="yes" xml:space="preserve">
          <source>EXPORT</source>
          <target state="translated">EXPORT</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
