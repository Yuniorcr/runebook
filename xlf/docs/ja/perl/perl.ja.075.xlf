<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="71136eef26be831306f95a5bb63a84e27f7eef99" translate="yes" xml:space="preserve">
          <source>arithmetical operator</source>
          <target state="translated">算術演算子</target>
        </trans-unit>
        <trans-unit id="405928ee9a480fc2a8eade49b14a897e6af33c76" translate="yes" xml:space="preserve">
          <source>around</source>
          <target state="translated">around</target>
        </trans-unit>
        <trans-unit id="d95e887f901f26e63014aa2cdccb63b7fb5f1815" translate="yes" xml:space="preserve">
          <source>around the subroutine call.</source>
          <target state="translated">サブルーチンコールの周りに</target>
        </trans-unit>
        <trans-unit id="19edc1210777ba4d45049c29280d9cc5e1064c25" translate="yes" xml:space="preserve">
          <source>array</source>
          <target state="translated">array</target>
        </trans-unit>
        <trans-unit id="ee52cfe001be3ed7048ad4373bb96e5fa2a3b08b" translate="yes" xml:space="preserve">
          <source>array and hash recursion limits are checked separately against the same recursion depth, a frozen structure with a large sequence of nested arrays within many nested hashes may exhaust the processor stack without triggering Storable's recursion protection.</source>
          <target state="translated">配列とハッシュの再帰制限は、同じ再帰深さに対して別々にチェックされますが、多数のネストされたハッシュの中にネストされた配列が大量に含まれるフリーズ構造体は、Storable の再帰保護を起動しなくてもプロセッサスタックを使い果たしてしまう可能性があります。</target>
        </trans-unit>
        <trans-unit id="bb5ef87e4b652f27fd8991387223f83d56f88257" translate="yes" xml:space="preserve">
          <source>array context</source>
          <target state="translated">配列コンテキスト</target>
        </trans-unit>
        <trans-unit id="40c598025171195fc4a712080717583430cb5462" translate="yes" xml:space="preserve">
          <source>array elements and key-value pairs with commas. This can be annoying if you write JSON texts manually and want to be able to quickly append elements, so this extension accepts comma at the end of such items not just between them:</source>
          <target state="translated">配列の要素やキーと値のペアをカンマで囲むことができます。JSON テキストを手書きで書いていて、素早く要素を追加したい場合には、これは厄介なことになるかもしれません。</target>
        </trans-unit>
        <trans-unit id="6996ca24f94a68ce49953711998dbd6942136600" translate="yes" xml:space="preserve">
          <source>array ref</source>
          <target state="translated">配列参照</target>
        </trans-unit>
        <trans-unit id="7a52a0b3e02bac0d6784f4d079552610c345b5af" translate="yes" xml:space="preserve">
          <source>array ref is used to create a &lt;a href=&quot;TAP::Parser::Source&quot;&gt;TAP::Parser::Source&lt;/a&gt; that is passed to the &lt;a href=&quot;#iterator_factory_class&quot;&gt;&quot;iterator_factory_class&quot;&lt;/a&gt; which in turn figures out how to handle the source and creates a &amp;lt;TAP::Parser::Iterator&amp;gt; for it. The iterator is used by the parser to read in the TAP stream.</source>
          <target state="translated">array refは、&lt;a href=&quot;#iterator_factory_class&quot;&gt;「iterator_factory_class」に&lt;/a&gt;渡される&lt;a href=&quot;TAP::Parser::Source&quot;&gt;TAP :: Parser :: Source&lt;/a&gt;を作成するために使用されます。これは、ソースの処理方法を理解し、そのソースの&amp;lt;TAP :: Parser :: Iterator&amp;gt;を作成します。イテレータは、パーサーがTAPストリームを読み取るために使用します。</target>
        </trans-unit>
        <trans-unit id="276700d738a08a17c36c325a79d878275e1e62b7" translate="yes" xml:space="preserve">
          <source>array ref is used to create a &lt;a href=&quot;parser/source&quot;&gt;TAP::Parser::Source&lt;/a&gt; that is passed to the &lt;a href=&quot;#iterator_factory_class&quot;&gt;iterator_factory_class&lt;/a&gt; which in turn figures out how to handle the source and creates a &amp;lt;TAP::Parser::Iterator&amp;gt; for it. The iterator is used by the parser to read in the TAP stream.</source>
          <target state="translated">配列refは、&lt;a href=&quot;parser/source&quot;&gt;iteer_factory_classに&lt;/a&gt;渡されるTAP :: Parser :: Sourceを作成するために使用され&lt;a href=&quot;#iterator_factory_class&quot;&gt;ます。&lt;/a&gt;これは、ソースの処理方法を理解し、そのための&amp;lt;TAP :: Parser :: Iterator&amp;gt;を作成します。イテレータは、パーサーがTAPストリームを読み取るために使用されます。</target>
        </trans-unit>
        <trans-unit id="9b611f002dfdbbc7f417d7a701d0c0982f8295cb" translate="yes" xml:space="preserve">
          <source>array references</source>
          <target state="translated">配列参照</target>
        </trans-unit>
        <trans-unit id="2f086a94a5c6545b992f6b27781fc7f73cd0f34a" translate="yes" xml:space="preserve">
          <source>arrays of arrays</source>
          <target state="translated">配列の配列</target>
        </trans-unit>
        <trans-unit id="87a3c7add3ea98d8bc57a46927c400f9ef4f5814" translate="yes" xml:space="preserve">
          <source>arrays of hashes</source>
          <target state="translated">ハッシュの配列</target>
        </trans-unit>
        <trans-unit id="47741cf980400a87afe9c94390f9126efceba961" translate="yes" xml:space="preserve">
          <source>article ( [ MSGID|MSGNUM ], [FH] )</source>
          <target state="translated">記事([MSGID|MSGNUM ],[FH])</target>
        </trans-unit>
        <trans-unit id="f007d443bf9be1cbb02a5647bc3ffc2ea4a7b0be" translate="yes" xml:space="preserve">
          <source>article about Maketext. It explains many important concepts underlying Locale::Maketext's design, and some insight into why Maketext is better than the plain old approach of having message catalogs that are just databases of sprintf formats.</source>
          <target state="translated">の記事では、Maketextに関する記事を紹介しています。Locale::Maketextのデザインの根底にある多くの重要な概念と、Maketextがなぜsprintf形式のデータベースであるメッセージカタログを持つという単純な古いアプローチよりも優れているのかについて説明しています。</target>
        </trans-unit>
        <trans-unit id="c39354a2afa38bb8867edb6c280fc4691cf93e48" translate="yes" xml:space="preserve">
          <source>article in the &quot;Far More Than You Ever Wanted To Know&quot; collection in &lt;a href=&quot;http://www.cpan.org/misc/olddoc/FMTEYEWTK.tgz&quot;&gt;http://www.cpan.org/misc/olddoc/FMTEYEWTK.tgz&lt;/a&gt; .</source>
          <target state="translated">&lt;a href=&quot;http://www.cpan.org/misc/olddoc/FMTEYEWTK.tgz&quot;&gt;http://www.cpan.org/misc/olddoc/FMTEYEWTK.tgzの&lt;/a&gt;「知りたいことよりずっと遠い」コレクションの記事。</target>
        </trans-unit>
        <trans-unit id="770bc2c07a08614cf46186cc798c253673fb1442" translate="yes" xml:space="preserve">
          <source>article in the &quot;Far More Than You Ever Wanted To Know&quot; collection in &lt;a href=&quot;http://www.cpan.org/misc/olddoc/FMTEYEWTK.tgz&quot;&gt;http://www.cpan.org/misc/olddoc/FMTEYEWTK.tgz&lt;/a&gt; . To capture a command's STDERR and STDOUT together:</source>
          <target state="translated">&lt;a href=&quot;http://www.cpan.org/misc/olddoc/FMTEYEWTK.tgz&quot;&gt;http://www.cpan.org/misc/olddoc/FMTEYEWTK.tgzの&lt;/a&gt;「知りたいことよりずっと遠い」コレクションの記事。コマンドのSTDERRとSTDOUTを一緒にキャプチャするには：</target>
        </trans-unit>
        <trans-unit id="d63a2a6a0595f68a45646a780e4852db4b72a660" translate="yes" xml:space="preserve">
          <source>article in the &quot;Far More Than You Ever Wanted To Know&quot; collection in &lt;a href=&quot;http://www.cpan.org/misc/olddoc/FMTEYEWTK.tgz&quot;&gt;http://www.cpan.org/misc/olddoc/FMTEYEWTK.tgz&lt;/a&gt; for more about this approach.</source>
          <target state="translated">このアプローチの詳細については、&lt;a href=&quot;http://www.cpan.org/misc/olddoc/FMTEYEWTK.tgz&quot;&gt;http：&lt;/a&gt; //www.cpan.org/misc/olddoc/FMTEYEWTK.tgzの「知りたいことよりずっと遠い」コレクションの記事を参照してください。</target>
        </trans-unit>
        <trans-unit id="0791a67844c8f4efbe5e99ac3105cf46b29ab17a" translate="yes" xml:space="preserve">
          <source>article in the &quot;Far More Than You Ever Wanted To Know&quot; collection in &lt;a href=&quot;http://www.cpan.org/misc/olddoc/FMTEYEWTK.tgz&quot;&gt;http://www.cpan.org/misc/olddoc/FMTEYEWTK.tgz&lt;/a&gt;, courtesy of Tom Phoenix, talks more about this. John von Neumann said, &quot;Anyone who attempts to generate random numbers by deterministic means is, of course, living in a state of sin.&quot;</source>
          <target state="translated">これについては、Tom Phoenixの好意により&lt;a href=&quot;http://www.cpan.org/misc/olddoc/FMTEYEWTK.tgz&quot;&gt;http://www.cpan.org/misc/olddoc/FMTEYEWTK.tgz&lt;/a&gt;の「Far More Than You Ever Want To Know To Know」コレクションに掲載されています。ジョン・フォン・ノイマン氏は、「決定論的な方法で乱数を生成しようとする者は、もちろん、罪の状態に住んでいる」と述べた。</target>
        </trans-unit>
        <trans-unit id="7de2a03beba8be3648bd55b5be4d022975548521" translate="yes" xml:space="preserve">
          <source>articlefh ( [ MSGID|MSGNUM ] )</source>
          <target state="translated">articlefh([MSGID|MSGNUM])</target>
        </trans-unit>
        <trans-unit id="ee853884bf8a2aa22c0c7ac39a07600efacbe3c2" translate="yes" xml:space="preserve">
          <source>artistic</source>
          <target state="translated">artistic</target>
        </trans-unit>
        <trans-unit id="df211ccdd94a63e0bcb9e6ae427a249484a49d60" translate="yes" xml:space="preserve">
          <source>as</source>
          <target state="translated">as</target>
        </trans-unit>
        <trans-unit id="a65837ad13e0fdf78d35e16e571d952b5ff6f7e1" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;load&lt;/code&gt; will use &lt;code&gt;&lt;a href=&quot;functions/caller&quot;&gt;caller&lt;/a&gt;&lt;/code&gt; to determine the package.</source>
          <target state="translated">&lt;code&gt;load&lt;/code&gt; に使用する &lt;code&gt;&lt;a href=&quot;functions/caller&quot;&gt;caller&lt;/a&gt;&lt;/code&gt; のパッケージを決定します。</target>
        </trans-unit>
        <trans-unit id="35bac7fe78f98bd7d83aaba5da7fad3ba2f57d8c" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;load&lt;/code&gt; will use &lt;code&gt;caller&lt;/code&gt; to determine the package.</source>
          <target state="translated">&lt;code&gt;load&lt;/code&gt; に使用する &lt;code&gt;caller&lt;/code&gt; のパッケージを決定します。</target>
        </trans-unit>
        <trans-unit id="70146c42ef768a95ce2127751f1aff9401a3be9b" translate="yes" xml:space="preserve">
          <source>as UTF-8. This takes into account if the call to the XS function is being made from within the scope of &lt;a href=&quot;bytes&quot;&gt;&lt;code&gt;use bytes&lt;/code&gt;&lt;/a&gt;. If so, the underlying bytes that comprise the UTF-8 string are to be exposed, rather than the character they represent. But this pragma should only really be used for debugging and perhaps low-level testing at the byte level. Hence most XS code need not concern itself with this, but various areas of the perl core do need to support it.</source>
          <target state="translated">UTF-8として。これは、XS関数の呼び出しがusebytesのスコープ内から行われている場合に考慮され&lt;a href=&quot;bytes&quot;&gt; &lt;code&gt;use bytes&lt;/code&gt; &lt;/a&gt;。その場合、UTF-8文字列を構成する基になるバイトは、それらが表す文字ではなく、公開されます。ただし、このプラグマは、実際にはデバッグと、おそらくバイトレベルでの低レベルのテストにのみ使用する必要があります。したがって、ほとんどのXSコードはこれに関係する必要はありませんが、perlコアのさまざまな領域がそれをサポートする必要があります。</target>
        </trans-unit>
        <trans-unit id="54d62e679336367634a72a952dc99d5052db36db" translate="yes" xml:space="preserve">
          <source>as UTF-8. This takes into account if the call to the XS function is being made from within the scope of &lt;a href=&quot;bytes&quot;&gt;use bytes &lt;/a&gt;. If so, the underlying bytes that comprise the UTF-8 string are to be exposed, rather than the character they represent. But this pragma should only really be used for debugging and perhaps low-level testing at the byte level. Hence most XS code need not concern itself with this, but various areas of the perl core do need to support it.</source>
          <target state="translated">UTF-8として。XS関数の呼び出しが&lt;a href=&quot;bytes&quot;&gt;使用バイトの&lt;/a&gt;範囲内から行われている場合、これは考慮されます。その場合、UTF-8文字列を構成する基本的なバイトは、それらが表す文字ではなく、公開されます。ただし、このプラグマは、実際にはデバッグおよびおそらくバイトレベルでの低レベルのテストにのみ使用する必要があります。したがって、ほとんどのXSコードはこれに関係する必要はありませんが、perlコアのさまざまな領域でこれをサポートする必要があります。</target>
        </trans-unit>
        <trans-unit id="15cb6bc32b06c78e373977af44ccb471b3a1d4af" translate="yes" xml:space="preserve">
          <source>as a binary string of approximately 44 bytes which holds a set or zero or more operators.</source>
          <target state="translated">を、セットまたはゼロ以上の演算子を保持する約44バイトのバイナリ文字列として使用します。</target>
        </trans-unit>
        <trans-unit id="49535962cebbc0ea94c6df25ea434365bc702259" translate="yes" xml:space="preserve">
          <source>as a hash itself, the only problem one has to circumvent is how to access this</source>
          <target state="translated">をハッシュとして使用する場合、回避しなければならない唯一の問題は、これにどうやってアクセスするかということです。</target>
        </trans-unit>
        <trans-unit id="b3d154f01d41c1bc9eb1e234a00980811a7203a7" translate="yes" xml:space="preserve">
          <source>as a logical stream of bits, where each ASCII '0' or '1' character represents a 0 or 1 bit, respectively. All other characters are ignored. This provides a convenient way to calculate the digest values of partial-byte data by using files, rather than having to write separate programs employing the</source>
          <target state="translated">をビットの論理ストリームとして使用し、ASCII の '0' または '1' 文字はそれぞれ 0 または 1 ビットを表します。他のすべての文字は無視されます。これにより、ファイルを使って部分バイトデータのダイジェスト値を計算するのに便利な方法が提供されます。</target>
        </trans-unit>
        <trans-unit id="0484899da16ac25f9334dc3c0f326506de8f3b2a" translate="yes" xml:space="preserve">
          <source>as a module hierarchy name etc.</source>
          <target state="translated">をモジュール階層名などに指定します。</target>
        </trans-unit>
        <trans-unit id="2595e4d12822845ad19e585d97389ce1ab042a19" translate="yes" xml:space="preserve">
          <source>as a module hierarchy name, etc.</source>
          <target state="translated">をモジュール階層名などに指定します。</target>
        </trans-unit>
        <trans-unit id="7489e1fa251bf45372d6ac9fae76ff03bb4fc00a" translate="yes" xml:space="preserve">
          <source>as a naive</source>
          <target state="translated">甘いものとして</target>
        </trans-unit>
        <trans-unit id="74d1f75f898cb43e0472a9e5e56f2df27dec3699" translate="yes" xml:space="preserve">
          <source>as a regular expression.</source>
          <target state="translated">を正規表現として使用します。</target>
        </trans-unit>
        <trans-unit id="73ad2cf416dcc1436eb98bf0ea9e81a9ab178ed0" translate="yes" xml:space="preserve">
          <source>as a shell, thus I picked up &lt;code&gt;sh.exe&lt;/code&gt; . This assures almost 100% compatibility with the scripts coming from *nix. As an added benefit this works as well under DOS if you use DOS-enabled port of pdksh (see &lt;a href=&quot;#Prerequisites&quot;&gt;Prerequisites&lt;/a&gt;).</source>
          <target state="translated">シェルとして、私は &lt;code&gt;sh.exe&lt;/code&gt; を拾いました。これにより、* nixのスクリプトとのほぼ100％の互換性が保証されます。追加の利点として、pdkshのDOS対応ポートを使用する場合、これはDOSでも同様に機能します（&lt;a href=&quot;#Prerequisites&quot;&gt;前提条件を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="d53a1395e63eb46d9815bfd1a4ea2256702937d5" translate="yes" xml:space="preserve">
          <source>as a shell, thus I picked up &lt;code&gt;sh.exe&lt;/code&gt;. This assures almost 100% compatibility with the scripts coming from *nix. As an added benefit this works as well under DOS if you use DOS-enabled port of pdksh (see &lt;a href=&quot;#Prerequisites&quot;&gt;&quot;Prerequisites&quot;&lt;/a&gt;).</source>
          <target state="translated">シェルとして、私は &lt;code&gt;sh.exe&lt;/code&gt; を選びました。これにより、* nixからのスクリプトとほぼ100％の互換性が保証されます。追加の利点として、これは、DOS対応のpdkshポートを使用している場合、DOSでも同様に機能します（&lt;a href=&quot;#Prerequisites&quot;&gt;「前提条件」を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="82888b2ea2ac983fcbffdc2a662722f9eb637ac9" translate="yes" xml:space="preserve">
          <source>as a simple macro call to the system's &lt;code&gt;signbit()&lt;/code&gt;. Users should just always call &lt;code&gt;Perl_signbit()&lt;/code&gt;.</source>
          <target state="translated">システムの &lt;code&gt;signbit()&lt;/code&gt; への単純なマクロ呼び出しとして。ユーザーは常に &lt;code&gt;Perl_signbit()&lt;/code&gt; を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="219042fce9a9511b0a48448658f92bc608f91fc4" translate="yes" xml:space="preserve">
          <source>as a temporary development aid while securing legacy code: for real production code and for new secure code written from scratch, always use the real &lt;a href=&quot;#-T&quot;&gt;&quot;-T&quot;&lt;/a&gt;.</source>
          <target state="translated">レガシーコードを保護する際の一時的な開発支援として：実際の本番コードおよびゼロから作成された新しい安全なコードの場合は、常に実際の&lt;a href=&quot;#-T&quot;&gt;「-T」を&lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="7fc448ca1e6145126fcde1afbfc84e38e6144b79" translate="yes" xml:space="preserve">
          <source>as a temporary development aid while securing legacy code: for real production code and for new secure code written from scratch, always use the real &lt;b&gt;-T&lt;/b&gt;.</source>
          <target state="translated">レガシーコードを保護する際の一時的な開発支援として：実際の本番用コードとゼロから作成された新しい安全なコードの場合は、常に本物の&lt;b&gt;-Tを&lt;/b&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="5a74d8f36fb474bb27b3f38f8cd94ae3c7f71fa4" translate="yes" xml:space="preserve">
          <source>as above would make for rather long-winded and repetitive code -- even if you wisely rewrote this to have quantification (as we call adding a number expression to a noun phrase) be a function called like:</source>
          <target state="translated">上記のようにすると、かなり長文で反復的なコードになってしまいます --仮にこれを賢く書き直して、定量化(名詞句に数値式を追加することを私たちはそう呼んでいます)を like という関数にしたとしても。</target>
        </trans-unit>
        <trans-unit id="7cfc9d5f69a8d6cbd4bb590ee3975431bc4e65a3" translate="yes" xml:space="preserve">
          <source>as after matching the</source>
          <target state="translated">をマッチングさせた後のように</target>
        </trans-unit>
        <trans-unit id="4ab073688be2687e53685015f7b0f7521b1bb83a" translate="yes" xml:space="preserve">
          <source>as after matching the A but failing on the B the &lt;code&gt;(*THEN)&lt;/code&gt; verb will backtrack and try C; but the &lt;code&gt;(*PRUNE)&lt;/code&gt; verb will simply fail.</source>
          <target state="translated">Aに一致した後、Bで失敗した場合 &lt;code&gt;(*THEN)&lt;/code&gt; 動詞はバックトラックしてCを試行します。ただし、 &lt;code&gt;(*PRUNE)&lt;/code&gt; 動詞は単に失敗します。</target>
        </trans-unit>
        <trans-unit id="9753eb43e6b71481134609a83fe7c9d127007ad0" translate="yes" xml:space="preserve">
          <source>as an additional linker argument.</source>
          <target state="translated">をリンカの追加引数として使用します。</target>
        </trans-unit>
        <trans-unit id="819da9a9443370e84fe6f05fc53d70984c447739" translate="yes" xml:space="preserve">
          <source>as an argument, and returns text to insert into the string instead of the &lt;code&gt;\N{&lt;i&gt;CHARNAME&lt;/i&gt;}&lt;/code&gt; escape.</source>
          <target state="translated">引数として、 &lt;code&gt;\N{&lt;i&gt;CHARNAME&lt;/i&gt;}&lt;/code&gt; エスケープの代わりに文字列に挿入するテキストを返します。</target>
        </trans-unit>
        <trans-unit id="a1e4232743f22df2b484ab094b5e1490c15a9dc6" translate="yes" xml:space="preserve">
          <source>as an array reference (as in the original Tie::Cycle example at the start of this section).</source>
          <target state="translated">を配列参照として使用します (このセクションの最初にあるオリジナルの Tie::Cycle の例のように)。</target>
        </trans-unit>
        <trans-unit id="1fedb298f571e978a357461bbaffb88fd67e6d25" translate="yes" xml:space="preserve">
          <source>as an input to makefile.pl above. Here</source>
          <target state="translated">を上の makefile.pl への入力として指定します。ここでは</target>
        </trans-unit>
        <trans-unit id="22c9de0caa5ee810970ed637faf33df068656b95" translate="yes" xml:space="preserve">
          <source>as an instance method will reset the object to the initial state associated with</source>
          <target state="translated">に関連付けられた初期状態にリセットされます。</target>
        </trans-unit>
        <trans-unit id="fec541f105313d0d35c30d128259bc532a7d9fe9" translate="yes" xml:space="preserve">
          <source>as are these</source>
          <target state="translated">此れらの様に</target>
        </trans-unit>
        <trans-unit id="3f566ada162944f7b5c8044e94db8ddd5ca7b693" translate="yes" xml:space="preserve">
          <source>as being identical to calling &lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode($fh)&lt;/a&gt;&lt;/code&gt; - the stream is made suitable for passing binary data, i.e. each byte is passed as-is. The stream will still be buffered.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode($fh)&lt;/a&gt;&lt;/code&gt; 呼び出しと同じ-ストリームはバイナリデータを渡すのに適したものになり、つまり各バイトがそのまま渡されます。ストリームは引き続きバッファリングされます。</target>
        </trans-unit>
        <trans-unit id="6161f340af63b0e200a55319e681127e8508a6df" translate="yes" xml:space="preserve">
          <source>as being identical to calling &lt;code&gt;binmode($fh)&lt;/code&gt; - the stream is made suitable for passing binary data, i.e. each byte is passed as-is. The stream will still be buffered (but this was not always true before Perl 5.14).</source>
          <target state="translated">&lt;code&gt;binmode($fh)&lt;/code&gt; 呼び出しと同じであるため、ストリームはバイナリデータの受け渡しに適したものになります。つまり、各バイトはそのまま渡されます。ストリームは引き続きバッファリングされます（ただし、これはPerl 5.14より前では常に当てはまるとは限りませんでした）。</target>
        </trans-unit>
        <trans-unit id="fe36dc0e525faa7dfe808ab76ec97f002c503815" translate="yes" xml:space="preserve">
          <source>as characters in Perl's internal format. For example, to convert ISO-8859-1 data into Microsoft's CP1250 encoding:</source>
          <target state="translated">を Perl の内部フォーマットの文字に変換します。例えば、ISO-8859-1のデータをMicrosoftのCP1250エンコーディングに変換するには、以下のようにします。</target>
        </trans-unit>
        <trans-unit id="76512b54297f6cf3e5e9b678d4980ac295e114bd" translate="yes" xml:space="preserve">
          <source>as close as fsetpos() can get it -- for some record-structured files, it's not possible to return to the exact byte offset in the file). Because the file must be reopened, this function cannot be used on temporary-delete files. &lt;code&gt;binmode&lt;/code&gt; returns true if successful, and &lt;code&gt;undef&lt;/code&gt; if not.</source>
          <target state="translated">fsetpos（）が取得できる限り近い-一部のレコード構造化ファイルでは、ファイル内の正確なバイトオフセットに戻ることはできません）。ファイルを再度開く必要があるため、この機能は一時削除ファイルでは使用できません。 &lt;code&gt;binmode&lt;/code&gt; は、成功した場合はtrueを返し、 &lt;code&gt;undef&lt;/code&gt; 場合はundefを返します。</target>
        </trans-unit>
        <trans-unit id="52ad92a7cc1dc82c3b06fb1e695eb96d880a2a5a" translate="yes" xml:space="preserve">
          <source>as defined by ANSI C are</source>
          <target state="translated">ANSI Cで定義されているものは</target>
        </trans-unit>
        <trans-unit id="0db0e3d07dd3b225f470aaeae03a367dc468530e" translate="yes" xml:space="preserve">
          <source>as described &lt;a href=&quot;#The-Generic-Object&quot;&gt;further down&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#The-Generic-Object&quot;&gt;さらに下に&lt;/a&gt;記載されているように。</target>
        </trans-unit>
        <trans-unit id="f8f8adcdf42c0a2a9a24916f1ba32a8d72714fa5" translate="yes" xml:space="preserve">
          <source>as expected. Without the specification of &lt;code&gt;&quot;&lt;/code&gt; as an embedded quoter:</source>
          <target state="translated">予想通り。埋め込まれた引用符としての &lt;code&gt;&quot;&lt;/code&gt; の指定なし：</target>
        </trans-unit>
        <trans-unit id="50b0ba5762dbe68ffeef1f2372b2155aab4b196b" translate="yes" xml:space="preserve">
          <source>as far as &lt;code&gt;CODE:&lt;/code&gt; section or &lt;code&gt;PPCODE:&lt;/code&gt; section</source>
          <target state="translated">限り &lt;code&gt;CODE:&lt;/code&gt; セクションや &lt;code&gt;PPCODE:&lt;/code&gt; セクション</target>
        </trans-unit>
        <trans-unit id="4baf8ad65f591cd293a9207d4c3e6ef80259ae5f" translate="yes" xml:space="preserve">
          <source>as far as you can in real-time.</source>
          <target state="translated">リアルタイムでできる範囲で</target>
        </trans-unit>
        <trans-unit id="3f657c5685f4dbb2d51dff03864121342570902a" translate="yes" xml:space="preserve">
          <source>as follows). The name of suspects can either be canonical names or aliases.</source>
          <target state="translated">以下のように)。)容疑者の名前は、定型的な名前か別名のどちらかになります。</target>
        </trans-unit>
        <trans-unit id="44b2b85ecf80cc5b480b0158de904c01eefa0d24" translate="yes" xml:space="preserve">
          <source>as follows:</source>
          <target state="translated">のように、次のように述べています。</target>
        </trans-unit>
        <trans-unit id="ff4a3f206de020088e59ed005bda8b3029a132f8" translate="yes" xml:space="preserve">
          <source>as is</source>
          <target state="translated">ありのまま</target>
        </trans-unit>
        <trans-unit id="7be0a48e6cca430c773cf99a10b3b59e7934ed11" translate="yes" xml:space="preserve">
          <source>as it feels like a bit of an ugly hack in its current form.</source>
          <target state="translated">それは、現在の形では少し醜いハックのように感じるので。</target>
        </trans-unit>
        <trans-unit id="878a917630b24304536b1a8522e60b14130b110d" translate="yes" xml:space="preserve">
          <source>as needed.</source>
          <target state="translated">必要に応じて</target>
        </trans-unit>
        <trans-unit id="04c1652cedd98a02fd9b6c484913e570da0de636" translate="yes" xml:space="preserve">
          <source>as of version 2.x, these classes all work like their IO::Handle counterparts, so we have comparable functionality to IO::String.</source>
          <target state="translated">バージョン 2.x では、これらのクラスはすべて IO::Handle のように動作するので、IO::String と同等の機能を持っています。</target>
        </trans-unit>
        <trans-unit id="b51e507fa59a767444dbf1b962a404eb04a8e4aa" translate="yes" xml:space="preserve">
          <source>as part of the 'distdir' target (and thus the 'dist' target). This is intended to seamlessly and rapidly populate CPAN with module meta-data. If you wish to shut this feature off, set the &lt;code&gt;NO_META&lt;/code&gt;&lt;code&gt;WriteMakefile()&lt;/code&gt; flag to true.</source>
          <target state="translated">「distdir」ターゲットの一部として（したがって「dist」ターゲットとして）。これは、シームレスかつ迅速にCPANにモジュールメタデータを入力することを目的としています。この機能を停止する場合は、 &lt;code&gt;NO_META&lt;/code&gt; &lt;code&gt;WriteMakefile()&lt;/code&gt; フラグをtrue に設定します。</target>
        </trans-unit>
        <trans-unit id="1b4102fd0036fbd6a5a356f9ed338ac369433f6c" translate="yes" xml:space="preserve">
          <source>as passed in cannot be inferred from</source>
          <target state="translated">からは推し量れない</target>
        </trans-unit>
        <trans-unit id="6bfafaa825614e0de2c48caf94ccc39c5813c5c8" translate="yes" xml:space="preserve">
          <source>as returned by &lt;a href=&quot;#charblock%28%29&quot;&gt;&quot;charblock()&quot;&lt;/a&gt; and &lt;a href=&quot;#charscript%28%29&quot;&gt;&quot;charscript()&quot;&lt;/a&gt; or as the values of the hash returned by &lt;a href=&quot;#charblocks%28%29&quot;&gt;&quot;charblocks()&quot;&lt;/a&gt; and &lt;a href=&quot;#charscripts%28%29&quot;&gt;&quot;charscripts()&quot;&lt;/a&gt; by using &lt;code&gt;charinrange()&lt;/code&gt;:</source>
          <target state="translated">返される&lt;a href=&quot;#charblock%28%29&quot;&gt;「charblock（）」&lt;/a&gt;及び&lt;a href=&quot;#charscript%28%29&quot;&gt;「charscript（）」&lt;/a&gt;またはによって返されるハッシュの値として&lt;a href=&quot;#charblocks%28%29&quot;&gt;「charblocks（）」&lt;/a&gt;及び&lt;a href=&quot;#charscripts%28%29&quot;&gt;「charscripts（）」&lt;/a&gt;使用して &lt;code&gt;charinrange()&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="a2383664a361c0b34599be3f0ddacd7781220e2a" translate="yes" xml:space="preserve">
          <source>as returned by &lt;a href=&quot;#charblock()&quot;&gt;charblock()&lt;/a&gt; and &lt;a href=&quot;#charscript()&quot;&gt;charscript()&lt;/a&gt; or as the values of the hash returned by &lt;a href=&quot;#charblocks()&quot;&gt;charblocks()&lt;/a&gt; and &lt;a href=&quot;#charscripts()&quot;&gt;charscripts()&lt;/a&gt; by using &lt;code&gt;charinrange()&lt;/code&gt; :</source>
          <target state="translated">返される&lt;a href=&quot;#charblock()&quot;&gt;charblock（）&lt;/a&gt;と&lt;a href=&quot;#charscript()&quot;&gt;charscript（）&lt;/a&gt;またはによって返されるハッシュ値として&lt;a href=&quot;#charblocks()&quot;&gt;charblocks（）&lt;/a&gt;と&lt;a href=&quot;#charscripts()&quot;&gt;charscripts（）&lt;/a&gt;使用して &lt;code&gt;charinrange()&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="c83d44be22c0359c7a8a15302b7f5e83e6b94790" translate="yes" xml:space="preserve">
          <source>as shown below.</source>
          <target state="translated">以下に示すように</target>
        </trans-unit>
        <trans-unit id="6daf9fe089003e9cf65e42ff59a1d2773ab32262" translate="yes" xml:space="preserve">
          <source>as the first argument</source>
          <target state="translated">を第一引数として</target>
        </trans-unit>
        <trans-unit id="9407051a9602683282da2f9d01eb30e33b699982" translate="yes" xml:space="preserve">
          <source>as the first character following a &lt;code&gt;&quot;|&quot;&lt;/code&gt; indicating alternation.</source>
          <target state="translated">&lt;code&gt;&quot;|&quot;&lt;/code&gt; 続く最初の文字として 交替を示します。</target>
        </trans-unit>
        <trans-unit id="876bafcdbcd9c80a2d0e2065aacf3d301f41ca7b" translate="yes" xml:space="preserve">
          <source>as the first character following a quantifier</source>
          <target state="translated">量詞の後の最初の文字として</target>
        </trans-unit>
        <trans-unit id="31752488710cedb7490f87bbefd7d754b6bf2c00" translate="yes" xml:space="preserve">
          <source>as the first character in a parenthesized grouping like</source>
          <target state="translated">のように括弧で括られたグループ化の最初の文字として</target>
        </trans-unit>
        <trans-unit id="fbb92fe3e5232a0e7b3e34da6f4c5b70c782eec8" translate="yes" xml:space="preserve">
          <source>as the first character in a pattern, or following &lt;code&gt;&quot;^&quot;&lt;/code&gt; indicating to anchor the match to the beginning of a line.</source>
          <target state="translated">パターンの最初の文字として、または &lt;code&gt;&quot;^&quot;&lt;/code&gt; 後に、一致を行の先頭に固定することを示します。</target>
        </trans-unit>
        <trans-unit id="1ec18f4b29d19edda6a94614141eeda193afce50" translate="yes" xml:space="preserve">
          <source>as the first line in &lt;code&gt;*.cmd&lt;/code&gt; file (&lt;a href=&quot;#-S&quot;&gt;&quot;-S&quot;&lt;/a&gt; due to a bug in cmd.exe's `extproc' handling).</source>
          <target state="translated">&lt;code&gt;*.cmd&lt;/code&gt; ファイルの最初の行として（cmd.exeの `extproc '処理のバグによる&lt;a href=&quot;#-S&quot;&gt;「-S」&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="dcb44b7e0e1eb593d77c64f859e0a77259727455" translate="yes" xml:space="preserve">
          <source>as the first line in &lt;code&gt;*.cmd&lt;/code&gt; file (&lt;b&gt;-S&lt;/b&gt; due to a bug in cmd.exe's `extproc' handling).</source>
          <target state="translated">&lt;code&gt;*.cmd&lt;/code&gt; ファイルの最初の行として（cmd.exeの「extproc」処理のバグによる&lt;b&gt;-S&lt;/b&gt;）。</target>
        </trans-unit>
        <trans-unit id="9afe0920031a79f7bd9f3454807b104ed19d1232" translate="yes" xml:space="preserve">
          <source>as the first line in &lt;code&gt;*.cmd&lt;/code&gt; file (&lt;code&gt;-S&lt;/code&gt; due to a bug in cmd.exe's &quot;extproc&quot; handling). For DOS one should first invent a corresponding batch file and codify it in &lt;code&gt;ALTERNATE_SHEBANG&lt;/code&gt; (see the</source>
          <target state="translated">&lt;code&gt;*.cmd&lt;/code&gt; ファイルの最初の行として（cmd.exeの「extproc」処理のバグによる &lt;code&gt;-S&lt;/code&gt; ）。DOSの場合、まず対応するバッチファイルを作成し、 &lt;code&gt;ALTERNATE_SHEBANG&lt;/code&gt; でコード化する必要があります（</target>
        </trans-unit>
        <trans-unit id="aa88a9399009fa8389588f0aaf2da6151a41febb" translate="yes" xml:space="preserve">
          <source>as the first line instead. Or you can combine some of the above tricks:</source>
          <target state="translated">を最初の行として使用します。あるいは、上記のトリックのいくつかを組み合わせることもできます。</target>
        </trans-unit>
        <trans-unit id="0d88bf94a93a4b61f0fa92dfc15bfef6b4012493" translate="yes" xml:space="preserve">
          <source>as the first line of the handler (see &lt;a href=&quot;../perlvar#%24%5eS&quot;&gt;$^S in perlvar&lt;/a&gt;). Because this promotes strange action at a distance, this counterintuitive behavior may be fixed in a future release.</source>
          <target state="translated">ハンドラーの最初の行として（&lt;a href=&quot;../perlvar#%24%5eS&quot;&gt;perlvarの$ ^ Sを参照&lt;/a&gt;）。これは遠くで奇妙なアクションを促進するため、この直感に反する動作は将来のリリースで修正される可能性があります。</target>
        </trans-unit>
        <trans-unit id="fff15c63127de3a3ff7f6050294a22c662f8a08c" translate="yes" xml:space="preserve">
          <source>as the first line of the handler (see &lt;a href=&quot;perlvar#%24%5ES&quot;&gt;&quot;$^S&quot; in perlvar&lt;/a&gt;). Because this promotes strange action at a distance, this counterintuitive behavior may be fixed in a future release.</source>
          <target state="translated">ハンドラーの最初の行として（&lt;a href=&quot;perlvar#%24%5ES&quot;&gt;perlvarの「$ ^ S」を参照&lt;/a&gt;）。これは遠隔作用を促進するため、この直感に反する動作は将来のリリースで修正される可能性があります。</target>
        </trans-unit>
        <trans-unit id="17abd9184d2928495e286f5f11862b4c9a8071d0" translate="yes" xml:space="preserve">
          <source>as the first line of the handler (see &lt;a href=&quot;perlvar#%24%5eS&quot;&gt;$^S in perlvar&lt;/a&gt;). Because this promotes strange action at a distance, this counterintuitive behavior may be fixed in a future release.</source>
          <target state="translated">ハンドラーの最初の行として（&lt;a href=&quot;perlvar#%24%5eS&quot;&gt;perlvarの$ ^ Sを参照&lt;/a&gt;）。これは遠くで奇妙なアクションを促進するため、この直感に反する動作は将来のリリースで修正される可能性があります。</target>
        </trans-unit>
        <trans-unit id="bf7d822469082c4bfc650c2ae1a9bcefcadfb22e" translate="yes" xml:space="preserve">
          <source>as the key. In most cases, this contains only a few keys, but if Perl was invoked via the C &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec[lv]e()&lt;/a&gt;&lt;/code&gt; function, as is the case for some embedded Perl applications or when running under a shell such as GNV bash, the &lt;code&gt;environ&lt;/code&gt; array may have been populated by the calling program.</source>
          <target state="translated">キーとして。ほとんどの場合、これにはいくつかのキーしか含まれていませんが、一部の組み込みPerlアプリケーションの場合や、GNV bashなどのシェルの下で実行している場合のように、PerlがC &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec[lv]e()&lt;/a&gt;&lt;/code&gt; 関数を介して呼び出された場合、 &lt;code&gt;environ&lt;/code&gt; 配列は呼び出し元プログラムによって入力された可能性があります。</target>
        </trans-unit>
        <trans-unit id="97749d136001e0ac0fff651b01f4546d71a8a4e7" translate="yes" xml:space="preserve">
          <source>as the key. In most cases, this contains only a few keys, but if Perl was invoked via the C &lt;code&gt;exec[lv]e()&lt;/code&gt; function, as is the case for some embedded Perl applications or when running under a shell such as GNV bash, the &lt;code&gt;environ&lt;/code&gt; array may have been populated by the calling program.</source>
          <target state="translated">キーとして。ほとんどの場合、これにはいくつかのキーしか含まれていませんが、一部の組み込みPerlアプリケーションの場合のように、C &lt;code&gt;exec[lv]e()&lt;/code&gt; 関数を介してPerlが呼び出された場合、またはGNV bashなどのシェルで実行されている場合、 &lt;code&gt;environ&lt;/code&gt; 配列は、呼び出し側プログラムによって設定されている可能性があります。</target>
        </trans-unit>
        <trans-unit id="5d01b7b2a5e71d9e7c928d505a1b934e42c98d8d" translate="yes" xml:space="preserve">
          <source>as the logical name. The normal search order of access modes is used.</source>
          <target state="translated">を論理名として使用します。アクセスモードの通常の検索順序が使用されます。</target>
        </trans-unit>
        <trans-unit id="24bb2a3db47e83fda820245153deab8162cb8ccb" translate="yes" xml:space="preserve">
          <source>as the name of the symbol. When reading an element of &lt;code&gt;%ENV&lt;/code&gt; , the local symbol table is scanned first, followed by the global symbol table.. The characters following &lt;code&gt;CLISYM_&lt;/code&gt; are significant when an element of &lt;code&gt;%ENV&lt;/code&gt; is set or deleted: if the complete string is &lt;code&gt;CLISYM_LOCAL&lt;/code&gt; , the change is made in the local symbol table; otherwise the global symbol table is changed.</source>
          <target state="translated">シンボルの名前として。要素読み出す際 &lt;code&gt;%ENV&lt;/code&gt; 、ローカル・シンボル・テーブルは、グローバル・シンボル・テーブルに続いて、最初に走査される..次の文字 &lt;code&gt;CLISYM_&lt;/code&gt; はの要素ときに重要である &lt;code&gt;%ENV&lt;/code&gt; が設定または削除された：完全な文字列がある場合 &lt;code&gt;CLISYM_LOCAL&lt;/code&gt; 、変化ローカルシンボルテーブルで作成されます。それ以外の場合は、グローバルシンボルテーブルが変更されます。</target>
        </trans-unit>
        <trans-unit id="4a2e5b87c98feecb2abf855fc73ff54a461f6270" translate="yes" xml:space="preserve">
          <source>as the name of the symbol. When reading an element of &lt;code&gt;%ENV&lt;/code&gt;, the local symbol table is scanned first, followed by the global symbol table.. The characters following &lt;code&gt;CLISYM_&lt;/code&gt; are significant when an element of &lt;code&gt;%ENV&lt;/code&gt; is set or deleted: if the complete string is &lt;code&gt;CLISYM_LOCAL&lt;/code&gt;, the change is made in the local symbol table; otherwise the global symbol table is changed.</source>
          <target state="translated">シンボルの名前として。 &lt;code&gt;%ENV&lt;/code&gt; の要素を読み取る場合、ローカルシンボルテーブルが最初にスキャンされ、次にグローバルシンボルテーブルがスキャンされます。 &lt;code&gt;%ENV&lt;/code&gt; の要素が設定または削除されると、 &lt;code&gt;CLISYM_&lt;/code&gt; に続く文字が重要になります。完全な文字列が &lt;code&gt;CLISYM_LOCAL&lt;/code&gt; の場合、変更ローカルシンボルテーブルで作成されます。それ以外の場合は、グローバルシンボルテーブルが変更されます。</target>
        </trans-unit>
        <trans-unit id="43689b10d7e82ce746d34de5bbe78235ef4476bd" translate="yes" xml:space="preserve">
          <source>as though the argument to &lt;code&gt;given&lt;/code&gt; were an element of the hash &lt;code&gt;%foo&lt;/code&gt; , interpreting the braces as hash-element syntax.</source>
          <target state="translated">&lt;code&gt;given&lt;/code&gt; への引数はハッシュ &lt;code&gt;%foo&lt;/code&gt; の要素であるかのように、中括弧をハッシュ要素構文として解釈します。</target>
        </trans-unit>
        <trans-unit id="11a80ce09776b66373e6105adffc34d0f706cedb" translate="yes" xml:space="preserve">
          <source>as though the argument to &lt;code&gt;given&lt;/code&gt; were an element of the hash &lt;code&gt;%foo&lt;/code&gt;, interpreting the braces as hash-element syntax.</source>
          <target state="translated">&lt;code&gt;given&lt;/code&gt; た引数がハッシュ &lt;code&gt;%foo&lt;/code&gt; の要素であるかのように、中括弧をハッシュ要素構文として解釈します。</target>
        </trans-unit>
        <trans-unit id="9aa9ebca57db525b108992870f6a6a0744343a91" translate="yes" xml:space="preserve">
          <source>as though you stored the same variable reference each time, you actually did not! This is a subtle distinction that can produce more efficient code at the risk of misleading all but the most experienced of programmers. So I usually advise against teaching it to beginners. In fact, except for passing arguments to functions, I seldom like to see the gimme-a-reference operator (backslash) used much at all in code. Instead, I advise beginners that they (and most of the rest of us) should try to use the much more easily understood constructors &lt;code&gt;[]&lt;/code&gt; and &lt;code&gt;{}&lt;/code&gt; instead of relying upon lexical (or dynamic) scoping and hidden reference-counting to do the right thing behind the scenes.</source>
          <target state="translated">毎回同じ変数参照を保存したかのように、実際には保存しませんでした！これは微妙な違いであり、最も経験豊富なプログラマ以外はすべて誤解を招くおそれがあるため、より効率的なコードを生成できます。だから私は通常、それを初心者に教えることはお勧めしません。実際、関数に引数を渡すことを除いて、gimme-a-reference演算子（バックスラッシュ）がコードで頻繁に使用されることはあまりありません。代わりに、私は初心者に、彼ら（そして私たちの残りのほとんど）が、字句（または動的）スコープと隠された参照カウントに頼らずに、より簡単に理解できるコンストラクタ &lt;code&gt;[]&lt;/code&gt; と &lt;code&gt;{}&lt;/code&gt; を使用するように努めるべきであることを忠告します舞台裏のこと。</target>
        </trans-unit>
        <trans-unit id="1b721d8a6c65b8f505bf083f7362443eee48e0d5" translate="yes" xml:space="preserve">
          <source>as used in</source>
          <target state="translated">でいうところの</target>
        </trans-unit>
        <trans-unit id="73b20ad0fd8d8906b930c36d48ac0a852e8a70ab" translate="yes" xml:space="preserve">
          <source>as usual</source>
          <target state="translated">相変わらず</target>
        </trans-unit>
        <trans-unit id="44bbbac4257f66442d2eb3ff68d4b9dd4661140f" translate="yes" xml:space="preserve">
          <source>as we know that if the final quote does not match, backtracking will not help. See the independent subexpression &lt;a href=&quot;#%28%3F%3Epattern%29&quot;&gt;&quot;&lt;code&gt;(?&amp;gt;&lt;i&gt;pattern&lt;/i&gt;)&lt;/code&gt;&quot;&lt;/a&gt; for more details; possessive quantifiers are just syntactic sugar for that construct. For instance the above example could also be written as follows:</source>
          <target state="translated">最終的な見積もりが一致しない場合、バックトラックは役に立ちません。詳細については、独立した部分式&lt;a href=&quot;#%28%3F%3Epattern%29&quot;&gt;&quot; &lt;code&gt;(?&amp;gt;&lt;i&gt;pattern&lt;/i&gt;)&lt;/code&gt; &quot;&lt;/a&gt;を参照してください。所有格の数量詞は、その構成の単なる構文糖衣です。たとえば、上記の例は次のように書くこともできます。</target>
        </trans-unit>
        <trans-unit id="9fa196bf1305f9de2ff08f52aee250714a733647" translate="yes" xml:space="preserve">
          <source>as we know that if the final quote does not match, backtracking will not help. See the independent subexpression &lt;a href=&quot;#(%3f%3epattern)&quot;&gt;(?&amp;gt;pattern)&lt;/a&gt; for more details; possessive quantifiers are just syntactic sugar for that construct. For instance the above example could also be written as follows:</source>
          <target state="translated">最終的な見積もりが一致しない場合、バックトラックは役に立ちません。詳細については、独立部分式&lt;a href=&quot;#(%3f%3epattern)&quot;&gt;（？&amp;gt;パターン）&lt;/a&gt;を参照してください。所有格指定子は、その構文の単なる構文糖です。たとえば、上記の例は次のように書くこともできます。</target>
        </trans-unit>
        <trans-unit id="983291ad5e53a2455ef9e77e2de94ef019d4ba61" translate="yes" xml:space="preserve">
          <source>as well (I use one from pdksh). The path</source>
          <target state="translated">と同様に (私は pdksh のものを使用しています)。パスの</target>
        </trans-unit>
        <trans-unit id="ffcbb6274e566044113aaf2e534009b9310ede89" translate="yes" xml:space="preserve">
          <source>as well.</source>
          <target state="translated">と同様に。</target>
        </trans-unit>
        <trans-unit id="0b2d56ecd63cccc527289487cbff82b5288f062d" translate="yes" xml:space="preserve">
          <source>as well. Here's a sample entry from that table:</source>
          <target state="translated">も同様です。そのテーブルからのサンプルエントリです。</target>
        </trans-unit>
        <trans-unit id="163b9e6ac2b85e0d1d3b25a5f039388d7483329f" translate="yes" xml:space="preserve">
          <source>as well. Options are not necessary for the program to work, hence the name 'option', but are used to modify its default behaviour. For example, a program could do its job quietly, but with a suitable option it could provide verbose information about what it did.</source>
          <target state="translated">も同様に使用されます。オプションはプログラムが動作するために必要なものではないので「オプション」と呼ばれていますが、デフォルトの動作を変更するために使用されます。例えば、プログラムは静かに仕事をすることができますが、適切なオプションがあれば、それが何をしたかについての詳細な情報を提供することができます。</target>
        </trans-unit>
        <trans-unit id="d09a858ce6260c8d7abc7cb8de62a0dcf62e09bc" translate="yes" xml:space="preserve">
          <source>as, say, an informal verbal description of the solution, or maybe of the problem itself. Isomorphism is, all things considered, a good thing -- it's what problem-solving (and solution-implementing) should look like.</source>
          <target state="translated">とは、例えば、解決策の非公式な口頭での説明、あるいは問題そのものの説明のようなものです。同形性とは、すべてのことを考慮すると、良いことです --それは問題解決(および解決策の実装)がどのように見えるべきかということです。</target>
        </trans-unit>
        <trans-unit id="eef0ed9c31886aeeaa457a7d910b34a3053cddad" translate="yes" xml:space="preserve">
          <source>as_array_ref</source>
          <target state="translated">as_array_ref</target>
        </trans-unit>
        <trans-unit id="e0f6619c3a0d789145899e0d26503b93025880f2" translate="yes" xml:space="preserve">
          <source>as_bin()</source>
          <target state="translated">as_bin()</target>
        </trans-unit>
        <trans-unit id="40bdfd6d624e1b42c7cc51b1e448916ea2d92b71" translate="yes" xml:space="preserve">
          <source>as_bytes()</source>
          <target state="translated">as_bytes()</target>
        </trans-unit>
        <trans-unit id="edc387c660a2b1d84db9f995c1394b0c8f7a00e2" translate="yes" xml:space="preserve">
          <source>as_embedded_typemap</source>
          <target state="translated">as_embedded_typemap</target>
        </trans-unit>
        <trans-unit id="6293714a50a40120f58b4889cff9a65fc732965e" translate="yes" xml:space="preserve">
          <source>as_float()</source>
          <target state="translated">as_float()</target>
        </trans-unit>
        <trans-unit id="c3bc5083cb007923550a1a79fad46180e4d878d7" translate="yes" xml:space="preserve">
          <source>as_hex()</source>
          <target state="translated">as_hex()</target>
        </trans-unit>
        <trans-unit id="bc3cc61bddf0ceabd9f1560cabae0f1be60cc55a" translate="yes" xml:space="preserve">
          <source>as_int()</source>
          <target state="translated">as_int()</target>
        </trans-unit>
        <trans-unit id="003d7a49b767183e39c1b831d4ce7263b750ea27" translate="yes" xml:space="preserve">
          <source>as_int()/as_number()</source>
          <target state="translated">as_int()/as_number()</target>
        </trans-unit>
        <trans-unit id="b901ccf25d95c87562bcdfb5d854356765564f55" translate="yes" xml:space="preserve">
          <source>as_number()</source>
          <target state="translated">as_number()</target>
        </trans-unit>
        <trans-unit id="1200fa194bbc6cba8352b08f67c5ac42078a226e" translate="yes" xml:space="preserve">
          <source>as_oct()</source>
          <target state="translated">as_oct()</target>
        </trans-unit>
        <trans-unit id="2dc8b10c6044c7ab41c6f916b29864155fdf6c87" translate="yes" xml:space="preserve">
          <source>as_string</source>
          <target state="translated">as_string</target>
        </trans-unit>
        <trans-unit id="79edeb962f22e5ee518d39d18e4506c6a2b5ec69" translate="yes" xml:space="preserve">
          <source>as_string_hash</source>
          <target state="translated">as_string_hash</target>
        </trans-unit>
        <trans-unit id="2e17f160551d1e72c91cdeef2d49ac65c0a67ed8" translate="yes" xml:space="preserve">
          <source>as_struct</source>
          <target state="translated">as_struct</target>
        </trans-unit>
        <trans-unit id="51c066b36ea8b32076964c766f8a0324ca4eb4b9" translate="yes" xml:space="preserve">
          <source>ascii</source>
          <target state="translated">ascii</target>
        </trans-unit>
        <trans-unit id="2c5c18b2494af0fdcd4a7646d2bde2acf847922a" translate="yes" xml:space="preserve">
          <source>ascii ()</source>
          <target state="translated">アスキー</target>
        </trans-unit>
        <trans-unit id="c7bc42c101bb8f021d4d389de2f96e84e8de1f7a" translate="yes" xml:space="preserve">
          <source>ascii-ctrl</source>
          <target state="translated">ascii-ctrl</target>
        </trans-unit>
        <trans-unit id="37116f0d227d355bdd165be4b2525441b7ee7e2d" translate="yes" xml:space="preserve">
          <source>asin_real</source>
          <target state="translated">asin_real</target>
        </trans-unit>
        <trans-unit id="ce10f51d7f39f9fc7631435563d91f1e2dd622f5" translate="yes" xml:space="preserve">
          <source>ask DB not to stop in these packages</source>
          <target state="translated">これらのパッケージで停止しないようにDBに依頼する</target>
        </trans-unit>
        <trans-unit id="dee174cbea8bd461e964d43d9629142d0f5e9d72" translate="yes" xml:space="preserve">
          <source>assemble_meta</source>
          <target state="translated">assemble_meta</target>
        </trans-unit>
        <trans-unit id="968a55475a44bc5482314bb7ff3d7a7b37523d7b" translate="yes" xml:space="preserve">
          <source>assert =&amp;gt; {...}</source>
          <target state="translated">アサート=&amp;gt; {...}</target>
        </trans-unit>
        <trans-unit id="60544f107576aa75a3a16e2a4d455e8086f18203" translate="yes" xml:space="preserve">
          <source>assertion</source>
          <target state="translated">assertion</target>
        </trans-unit>
        <trans-unit id="18b112e36da8d8376cd2fe7f89592c89b4aefda7" translate="yes" xml:space="preserve">
          <source>assertion botched: %s</source>
          <target state="translated">アサーションが失敗しました:%s</target>
        </trans-unit>
        <trans-unit id="c1487b0062ddd019485245d3093b4a8ca191dae6" translate="yes" xml:space="preserve">
          <source>assign arg_hashref, VALUE...</source>
          <target state="translated">arg_hashref,VALUE...を代入します。</target>
        </trans-unit>
        <trans-unit id="1318e069379ae6cb3a70ee42a96546f428da471f" translate="yes" xml:space="preserve">
          <source>assign_func_args()</source>
          <target state="translated">assign_func_args()</target>
        </trans-unit>
        <trans-unit id="c4407719eccaafa9bde053b1db60d6c0d61f7672" translate="yes" xml:space="preserve">
          <source>assigned</source>
          <target state="translated">assigned</target>
        </trans-unit>
        <trans-unit id="f26b63d628c9b5679c54e6f8f5ee244932da2d7d" translate="yes" xml:space="preserve">
          <source>assignment</source>
          <target state="translated">assignment</target>
        </trans-unit>
        <trans-unit id="3ef74078d06ba61e79bd2aa5816e90a3035fcea9" translate="yes" xml:space="preserve">
          <source>assignment operator</source>
          <target state="translated">代入演算子</target>
        </trans-unit>
        <trans-unit id="18237e23354148ad3de3fd278a74bf877d784ef2" translate="yes" xml:space="preserve">
          <source>assignment-variants of operators are present in the script, they may be generated by the optimizer. For example,</source>
          <target state="translated">スクリプト内に演算子の代入バリアントが存在する場合、オプティマイザによって生成されることがあります。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="19f88cb673e51233787f63a133933b396397ecad" translate="yes" xml:space="preserve">
          <source>assigns the entire list value to array @foo, but</source>
          <target state="translated">はリストの値全体を配列 @foo に代入しますが</target>
        </trans-unit>
        <trans-unit id="bac4a6a253f6704e2643e1787606b1818276ab16" translate="yes" xml:space="preserve">
          <source>assigns the value of variable $bar to the scalar variable $foo. Note that the value of an actual array in scalar context is the length of the array; the following assigns the value 3 to $foo:</source>
          <target state="translated">は、変数 $bar の値をスカラ変数 $foo に代入します。スカラコンテキストにおける実際の配列の値は配列の長さであることに注意しましょう。</target>
        </trans-unit>
        <trans-unit id="a2c480bb0d3fb166118fff165602dfb3d8755b71" translate="yes" xml:space="preserve">
          <source>associated with a particular file.</source>
          <target state="translated">特定のファイルに関連付けられています。</target>
        </trans-unit>
        <trans-unit id="d03fe2e108278a21db78ad03f95614754c65b243" translate="yes" xml:space="preserve">
          <source>associations</source>
          <target state="translated">associations</target>
        </trans-unit>
        <trans-unit id="c86461f009279cf7d8a8df8f4a2bee27c0ebd359" translate="yes" xml:space="preserve">
          <source>associative array</source>
          <target state="translated">れんそうはいれつ</target>
        </trans-unit>
        <trans-unit id="eab9b6ea2f82fe54324a745a0be4d6d10a9fd0e5" translate="yes" xml:space="preserve">
          <source>associativity</source>
          <target state="translated">associativity</target>
        </trans-unit>
        <trans-unit id="ae321c05bada36b13f653e5d63881d2980254f64" translate="yes" xml:space="preserve">
          <source>assumes that either the layer has popped itself, or the layer is super special and needs to be retained for other reasons. In most cases it should return</source>
          <target state="translated">は、そのレイヤーが自分自身でポップしたか、そのレイヤーが特別なもので、別の理由で保持する必要があるかのどちらかであると仮定します。ほとんどの場合</target>
        </trans-unit>
        <trans-unit id="617755c776549d8f4f3362cdb6a17b675ef13281" translate="yes" xml:space="preserve">
          <source>assuming you have mounted that CD on /cdrom.</source>
          <target state="translated">CD を /cdrom にマウントしたと仮定します。</target>
        </trans-unit>
        <trans-unit id="c359d69f3f08bb920f2c3b51133205533462093e" translate="yes" xml:space="preserve">
          <source>asy</source>
          <target state="translated">asy</target>
        </trans-unit>
        <trans-unit id="0882a2912a64e563c60a0dab0177a420839995db" translate="yes" xml:space="preserve">
          <source>async BLOCK;</source>
          <target state="translated">async BLOCKを使用しています。</target>
        </trans-unit>
        <trans-unit id="7d752f2c5e9504352a8b5051da82d8c592e4d092" translate="yes" xml:space="preserve">
          <source>asynchronous</source>
          <target state="translated">asynchronous</target>
        </trans-unit>
        <trans-unit id="3602b9270e66ab97788614f8a3fd98920bdaf5c7" translate="yes" xml:space="preserve">
          <source>at &lt;a href=&quot;http://developer.apple.com/documentation/Darwin/Conceptual/64bitPorting/index.html&quot;&gt;http://developer.apple.com/documentation/Darwin/Conceptual/64bitPorting/index.html&lt;/a&gt;.</source>
          <target state="translated">で&lt;a href=&quot;http://developer.apple.com/documentation/Darwin/Conceptual/64bitPorting/index.html&quot;&gt;http://developer.apple.com/documentation/Darwin/Conceptual/64bitPorting/index.html&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="412f08a017337a56b4152e7bc3cd13375ff3254f" translate="yes" xml:space="preserve">
          <source>at &lt;a href=&quot;http://perltraining.com.au/tips/2008-08-20.html&quot;&gt;http://perltraining.com.au/tips/2008-08-20.html&lt;/a&gt;</source>
          <target state="translated">で&lt;a href=&quot;http://perltraining.com.au/tips/2008-08-20.html&quot;&gt;http://perltraining.com.au/tips/2008-08-20.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="03c141a669d4789a3576e1e16161a6d944f70e9f" translate="yes" xml:space="preserve">
          <source>at &lt;a href=&quot;https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/64bitPorting/transition/transition.html&quot;&gt;https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/64bitPorting/transition/transition.html&lt;/a&gt;.</source>
          <target state="translated">で&lt;a href=&quot;https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/64bitPorting/transition/transition.html&quot;&gt;https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/64bitPorting/transition/transition.html&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="763fd237e6f3831141eb71f2fa9c664c2d5dde22" translate="yes" xml:space="preserve">
          <source>at a given position</source>
          <target state="translated">ある位置で</target>
        </trans-unit>
        <trans-unit id="9a37607749afe8d9567c08deb31e518558e6f3b5" translate="yes" xml:space="preserve">
          <source>at any one time.</source>
          <target state="translated">いつでもいいから</target>
        </trans-unit>
        <trans-unit id="850ad5d4afbea97738fa95acd1da7e607bd530cc" translate="yes" xml:space="preserve">
          <source>at compile time</source>
          <target state="translated">コンパイル時</target>
        </trans-unit>
        <trans-unit id="b4e380389a774a586c5fa16ad6f747ccd0f5dd49" translate="yes" xml:space="preserve">
          <source>at least</source>
          <target state="translated">少なくても</target>
        </trans-unit>
        <trans-unit id="9564a8b2dea482cb502ddc133f411fb7baa8cd10" translate="yes" xml:space="preserve">
          <source>at make time, so you should make perl to follow this along.</source>
          <target state="translated">で、make時には、これに沿ってPerlを作っておくと良いでしょう。</target>
        </trans-unit>
        <trans-unit id="fbb06e3442915398475cc3a04245a5bbaff4859c" translate="yes" xml:space="preserve">
          <source>at most</source>
          <target state="translated">せいぜい</target>
        </trans-unit>
        <trans-unit id="32f22c8244d7198bc5973a52b7e608dea1b695bc" translate="yes" xml:space="preserve">
          <source>at run time</source>
          <target state="translated">実行時</target>
        </trans-unit>
        <trans-unit id="e490f3a80d5cc3f15d3885d16099e39047e2c3bc" translate="yes" xml:space="preserve">
          <source>at startup (in a BEGIN block). This is a hook that allows the sysadmin to customize how Perl behaves. It can for instance be used to add entries to the @INC array to make Perl find modules in non-standard locations.</source>
          <target state="translated">を起動時に(BEGINブロック内で)使用します。これは、システム管理者がPerlの動作をカスタマイズするためのフックです。例えば、@INC 配列にエントリを追加して、Perl が標準外の場所にあるモジュールを見つけられるようにするために使用することができます。</target>
        </trans-unit>
        <trans-unit id="15d1d5e3a86f87da2663eae7907bc2307a399554" translate="yes" xml:space="preserve">
          <source>at startup.</source>
          <target state="translated">スタートアップで。</target>
        </trans-unit>
        <trans-unit id="fdc8cfe05d049efd8ba3e7434e7eaf619158eb0f" translate="yes" xml:space="preserve">
          <source>at the C level</source>
          <target state="translated">Cレベルで</target>
        </trans-unit>
        <trans-unit id="c1388282fa974c0f59a57d7833efecdf9f582735" translate="yes" xml:space="preserve">
          <source>at the end</source>
          <target state="translated">詰りに</target>
        </trans-unit>
        <trans-unit id="9217e9b0a48bcfc528a9d49dbdf842dbf2a6a760" translate="yes" xml:space="preserve">
          <source>at the end. The &lt;code&gt;ENTER&lt;/code&gt; /&lt;code&gt;SAVETMPS&lt;/code&gt; pair creates a boundary for any temporaries we create. This means that the temporaries we get rid of will be limited to those which were created after these calls.</source>
          <target state="translated">最後に。 &lt;code&gt;ENTER&lt;/code&gt; / &lt;code&gt;SAVETMPS&lt;/code&gt; のペアは、当社が作成した一時のための境界線を作成します。つまり、私たちが取り除く一時的なものは、これらの呼び出しの後に作成されたものに限定されます。</target>
        </trans-unit>
        <trans-unit id="2c2abfb06e2552e16d1caee4efd7dc6a9a792926" translate="yes" xml:space="preserve">
          <source>at the end. The &lt;code&gt;ENTER&lt;/code&gt;/&lt;code&gt;SAVETMPS&lt;/code&gt; pair creates a boundary for any temporaries we create. This means that the temporaries we get rid of will be limited to those which were created after these calls.</source>
          <target state="translated">最後に。 &lt;code&gt;ENTER&lt;/code&gt; / &lt;code&gt;SAVETMPS&lt;/code&gt; のペアは、当社が作成した一時のための境界線を作成します。これは、私たちが取り除く一時的なものは、これらの呼び出しの後に作成されたものに限定されることを意味します。</target>
        </trans-unit>
        <trans-unit id="8dcfd128d2ba54e6c9380293b323b1260cdc3701" translate="yes" xml:space="preserve">
          <source>at the same level of nesting</source>
          <target state="translated">同レベルの巣立ちで</target>
        </trans-unit>
        <trans-unit id="8e1733375a8dd981de1735fa2875f132e477b6da" translate="yes" xml:space="preserve">
          <source>at the start (or near the start) of your program. (Note that this</source>
          <target state="translated">をプログラムの開始時(または開始付近)に設定してください。(この</target>
        </trans-unit>
        <trans-unit id="37f302ce8124164c6fcfe7d012fcfb1e33675294" translate="yes" xml:space="preserve">
          <source>at the start of the function, and</source>
          <target state="translated">関数の開始時に</target>
        </trans-unit>
        <trans-unit id="9b151ca84837e5f88e85ae049f9b552e13c6fe0d" translate="yes" xml:space="preserve">
          <source>at the top of your code.</source>
          <target state="translated">をコードの先頭に追加してください。</target>
        </trans-unit>
        <trans-unit id="89c4f7ac43cc28c22dbb5ebc96fabde7dae0b382" translate="yes" xml:space="preserve">
          <source>at the top of your program, where &lt;b&gt;-mysw&lt;/b&gt; are any command line switches you want to pass to Perl. You can now invoke the program directly, by saying &lt;code&gt;perl program&lt;/code&gt; , or as a DCL procedure, by saying &lt;code&gt;@program&lt;/code&gt; (or implicitly via</source>
          <target state="translated">あなたのプログラムの先頭に&lt;b&gt;-myswは、&lt;/b&gt;任意のコマンドラインですあなたはPerlのに渡したい切り替わります。これで、 &lt;code&gt;perl program&lt;/code&gt; と言って直接プログラムを呼び出すか、 &lt;code&gt;@program&lt;/code&gt; （または暗黙的に</target>
        </trans-unit>
        <trans-unit id="010076c360aa51a67431ee949d9678e570e14d81" translate="yes" xml:space="preserve">
          <source>at the top of your program, where &lt;b&gt;-mysw&lt;/b&gt; are any command line switches you want to pass to Perl. You can now invoke the program directly, by saying &lt;code&gt;perl program&lt;/code&gt;, or as a DCL procedure, by saying &lt;code&gt;@program&lt;/code&gt; (or implicitly via</source>
          <target state="translated">プログラムの上部にあります。ここで、&lt;b&gt;-mysw&lt;/b&gt;は、Perlに渡すコマンドラインスイッチです。これで、 &lt;code&gt;perl program&lt;/code&gt; と言うことでプログラムを直接呼び出すことができ、 &lt;code&gt;@program&lt;/code&gt; と言うことでDCLプロシージャとして（または暗黙的に</target>
        </trans-unit>
        <trans-unit id="7e70d57f73905d45b6f79912c7b2b82874d2e8a5" translate="yes" xml:space="preserve">
          <source>at the top of your program. This aliases all the short names to the long names in the current package. Some even have medium names, generally borrowed from &lt;b&gt;awk&lt;/b&gt;. For more info, please see &lt;a href=&quot;english&quot;&gt;English&lt;/a&gt;.</source>
          <target state="translated">プログラムの上部にあります。これにより、現在のパッケージのすべてのショートネームがロングネームにエイリアスされます。中には通常&lt;b&gt;awk&lt;/b&gt;から借用した中程度の名前を持つものもあります。詳細については、&lt;a href=&quot;english&quot;&gt;英語&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="5c4d67f365ec49b947ee79badac65584b0444347" translate="yes" xml:space="preserve">
          <source>at the top of your script, Math::BigFloat and Math::BigInt will be loaded and any constant number will be converted to an object (Math::BigFloat for floats like 3.1415 and Math::BigInt for integers like 1234).</source>
          <target state="translated">スクリプトの先頭にある Math::BigFloat と Math::BigInt がロードされ、任意の定数がオブジェクトに変換されます (Math::BigFloat は 3.1415 のような浮動小数点以下、Math::BigInt は 1234 のような整数に変換されます)。</target>
        </trans-unit>
        <trans-unit id="c90414cee16b2af97b8d5180cc885c0f62d6800c" translate="yes" xml:space="preserve">
          <source>at which point %greetings has the contents:</source>
          <target state="translated">この時点で %greetings はコンテンツを持っています。</target>
        </trans-unit>
        <trans-unit id="3bb758cfc583548bd5a6d49b0a553b6fe91a0689" translate="yes" xml:space="preserve">
          <source>at your peril</source>
          <target state="translated">危ない目に遭っても</target>
        </trans-unit>
        <trans-unit id="b1a7357ef61ecd1781b4633dc3e33a383686041c" translate="yes" xml:space="preserve">
          <source>atan2</source>
          <target state="translated">atan2</target>
        </trans-unit>
        <trans-unit id="fc337a53ff380e9cc91c7f4ada35b7c83e1170cd" translate="yes" xml:space="preserve">
          <source>atan2 Y,X</source>
          <target state="translated">atan2 Y,X</target>
        </trans-unit>
        <trans-unit id="e226f7ca13e8e842c24e08f6089be3e8e4a7dbda" translate="yes" xml:space="preserve">
          <source>atfork_lock</source>
          <target state="translated">atfork_lock</target>
        </trans-unit>
        <trans-unit id="7dedf46132af7daae669d99e34058a9d69562014" translate="yes" xml:space="preserve">
          <source>atfork_unlock</source>
          <target state="translated">atfork_unlock</target>
        </trans-unit>
        <trans-unit id="f7243228637fb0b2ed90f7f5c750564b9733bc3b" translate="yes" xml:space="preserve">
          <source>atmark</source>
          <target state="translated">atmark</target>
        </trans-unit>
        <trans-unit id="5604a15f93274b4be18e2e5703972fcae8d4191f" translate="yes" xml:space="preserve">
          <source>atolf.U</source>
          <target state="translated">atolf.U</target>
        </trans-unit>
        <trans-unit id="20378f82e37925c4f68137e0b5f0ceba9d2f7e7d" translate="yes" xml:space="preserve">
          <source>atoll.U</source>
          <target state="translated">atoll.U</target>
        </trans-unit>
        <trans-unit id="c6f57180e462a4f1e9de24fbe811cfb2c24a0cf9" translate="yes" xml:space="preserve">
          <source>atom</source>
          <target state="translated">atom</target>
        </trans-unit>
        <trans-unit id="7e56d75872e5c121dfdfb6a14a9691cd17d30089" translate="yes" xml:space="preserve">
          <source>atomic operation</source>
          <target state="translated">げんしえんざん</target>
        </trans-unit>
        <trans-unit id="3c4db99fa19aece67f97821a83c30ca20f360728" translate="yes" xml:space="preserve">
          <source>attach ( [FLAG] )</source>
          <target state="translated">アタッチ([FLAG])</target>
        </trans-unit>
        <trans-unit id="9e96175f76342acf17b6320df16c52fb6bb0caad" translate="yes" xml:space="preserve">
          <source>attrLetsToBits</source>
          <target state="translated">attrLetsToBits</target>
        </trans-unit>
        <trans-unit id="2c317cd0735d9046d7675c475fa1c6dce647953f" translate="yes" xml:space="preserve">
          <source>attribute</source>
          <target state="translated">attribute</target>
        </trans-unit>
        <trans-unit id="e23a34b8f5b2f31817cabbac17ddfd0c73c0f578" translate="yes" xml:space="preserve">
          <source>attribute and a &lt;a href=&quot;to&quot;&gt;to&lt;/a&gt; attribute. For example, this Pod source:</source>
          <target state="translated">属性と&lt;a href=&quot;to&quot;&gt;to&lt;/a&gt;属性。たとえば、次のポッドソース：</target>
        </trans-unit>
        <trans-unit id="36eb16110eb8a88635119857df79b6c64c120d6b" translate="yes" xml:space="preserve">
          <source>attribute contains the raw, original, unescaped content of the &lt;code&gt;L&amp;lt;&amp;gt;&lt;/code&gt; formatting code. In addition to the examples above, take notice of the following event structure produced by the following &lt;code&gt;L&amp;lt;&amp;gt;&lt;/code&gt; formatting code.</source>
          <target state="translated">属性には、 &lt;code&gt;L&amp;lt;&amp;gt;&lt;/code&gt; フォーマットコードの生の元のエスケープされていないコンテンツが含まれます。上記の例に加えて、次の &lt;code&gt;L&amp;lt;&amp;gt;&lt;/code&gt; フォーマットコードによって生成される次のイベント構造に注意してください。</target>
        </trans-unit>
        <trans-unit id="36c2be758a3cc76c4623d17431c991d982269863" translate="yes" xml:space="preserve">
          <source>attribute depends on what the raw content of the &lt;code&gt;L&amp;lt;&amp;gt;&lt;/code&gt; is, so that is why the event structure is the same &quot;for the most part&quot;.</source>
          <target state="translated">属性は &lt;code&gt;L&amp;lt;&amp;gt;&lt;/code&gt; の生のコンテンツが何であるかに依存するため、イベント構造は「ほとんどの部分」で同じです。</target>
        </trans-unit>
        <trans-unit id="aaa7447496328d92dc17c3d0fc8649f8ad7d1856" translate="yes" xml:space="preserve">
          <source>attribute for this start-token object to</source>
          <target state="translated">属性は、この開始トークンオブジェクトの</target>
        </trans-unit>
        <trans-unit id="33337ed515c0adfa6a07049f9d97abb273869d7a" translate="yes" xml:space="preserve">
          <source>attribute for this start-token object, or undef.</source>
          <target state="translated">属性、または undef を指定します。</target>
        </trans-unit>
        <trans-unit id="635b70015e7c05f3ddf797a8016ddd2b877116b9" translate="yes" xml:space="preserve">
          <source>attribute has the value &quot;4&quot;.</source>
          <target state="translated">属性の値は &quot;4 &quot;です。</target>
        </trans-unit>
        <trans-unit id="ab2d8bd4a863914c6fe78c4af3b83e46cf21742e" translate="yes" xml:space="preserve">
          <source>attribute instead of a</source>
          <target state="translated">属性の代わりに</target>
        </trans-unit>
        <trans-unit id="2a27fffadd78aff8aea90f322d0e3c182ebe8fc6" translate="yes" xml:space="preserve">
          <source>attribute is always present, and always has the value &quot;preserve&quot;.</source>
          <target state="translated">属性は常に存在し、常に値 &quot;preserve&quot; を持ちます。</target>
        </trans-unit>
        <trans-unit id="4de5ab6e74bf90046665d795fb6fd86c7fc33389" translate="yes" xml:space="preserve">
          <source>attribute is whatever value is after the &quot;=over&quot; directive, as in &quot;=over 8&quot;. If no such value is specified in the directive, then the</source>
          <target state="translated">属性は &quot;=over&quot; ディレクティブの後の値、例えば &quot;=over 8&quot; のようなものです。ディレクティブにそのような値が指定されていない場合は</target>
        </trans-unit>
        <trans-unit id="0dc11438dd7a3a71579ff2fbd4cbd865389001ea" translate="yes" xml:space="preserve">
          <source>attribute where any surrounding whitespace is condensed into a single ' '. For example, given L&amp;lt; link&amp;gt;,</source>
          <target state="translated">周囲の空白が単一の ''に凝縮されている属性。たとえば、L &amp;lt;link&amp;gt;が与えられた場合、</target>
        </trans-unit>
        <trans-unit id="5bd5029c0ee8c537ceb3bcafc356535c41535530" translate="yes" xml:space="preserve">
          <source>attribute will be the line number of the first Pod directive in the document.</source>
          <target state="translated">属性はドキュメントの最初のPodディレクティブの行番号になります。</target>
        </trans-unit>
        <trans-unit id="d033607bbf34f83e3630b1dd80582d806a15726d" translate="yes" xml:space="preserve">
          <source>attribute will be the line number of the first line of this verbatim block. The</source>
          <target state="translated">属性は、この冗長ブロックの最初の行の行番号になります。属性は、このブロックの最初の行の番号になります。</target>
        </trans-unit>
        <trans-unit id="01b5548d2ec00f76ce8edd8361665d4a2eee529f" translate="yes" xml:space="preserve">
          <source>attribute will be the line number of the start of the paragraph.</source>
          <target state="translated">属性は、段落の先頭の行番号になります。</target>
        </trans-unit>
        <trans-unit id="39b20fba0fab9ba18103ec2bd1356db9bef98d4f" translate="yes" xml:space="preserve">
          <source>attribute will not be meaningful; under current implementations, it will probably be the line number of the last line in the file.</source>
          <target state="translated">現在の実装では、おそらくファイルの最後の行の行番号になるでしょう。</target>
        </trans-unit>
        <trans-unit id="120352409cf88bde6a5d6d735c82d284a63f2f2f" translate="yes" xml:space="preserve">
          <source>attribute,</source>
          <target state="translated">attribute,</target>
        </trans-unit>
        <trans-unit id="d3b2de5fec7ca4555161fd1b778fee83a6e6a5b7" translate="yes" xml:space="preserve">
          <source>attribute, and there will be no &lt;code&gt;content-implicit=&quot;yes&quot;&lt;/code&gt; attribute (whose presence means that the Pod parser had to infer what text should appear as the link text -- as opposed to cases where that attribute is absent, which means that the Pod parser did</source>
          <target state="translated">属性であり、 &lt;code&gt;content-implicit=&quot;yes&quot;&lt;/code&gt; 属性はありません（その存在は、ポッドパーサーがリンクテキストとして表示されるテキストを推測する必要があることを意味します-その属性が存在しない場合とは対照的に、ポッドパーサーはしました</target>
        </trans-unit>
        <trans-unit id="90d08262e5d32be186d16ff80c527ee8f0047168" translate="yes" xml:space="preserve">
          <source>attribute, or both. The &lt;code&gt;type=&quot;pod&quot;&lt;/code&gt; attribute is always specified for this type of L code.</source>
          <target state="translated">属性、またはその両方。 &lt;code&gt;type=&quot;pod&quot;&lt;/code&gt; 属性は常にLコードのこのタイプのために指定されています。</target>
        </trans-unit>
        <trans-unit id="8109399516cf822497cfea4844218e9687c1dde1" translate="yes" xml:space="preserve">
          <source>attribute, whereas this Pod source:</source>
          <target state="translated">属性があるのに対し、このPodソースは</target>
        </trans-unit>
        <trans-unit id="532e0b673f29b33974de4e5cfb765377c850dfdb" translate="yes" xml:space="preserve">
          <source>attribute. For example, this Pod source:</source>
          <target state="translated">属性を使用しています。例えば、このPodソース。</target>
        </trans-unit>
        <trans-unit id="d7f67a250d8254339cc572b200990d99fe1baf29" translate="yes" xml:space="preserve">
          <source>attributes</source>
          <target state="translated">attributes</target>
        </trans-unit>
        <trans-unit id="247d5e69b38550a7d0b09aea424ed5dab3a67bad" translate="yes" xml:space="preserve">
          <source>attributes - get/set subroutine or variable attributes</source>
          <target state="translated">attributes-サブルーチンまたは変数の属性を取得/設定します。</target>
        </trans-unit>
        <trans-unit id="accd886bc0d434d8e4eb3d97214b963815364bb7" translate="yes" xml:space="preserve">
          <source>attributes are as with the other over-* events.</source>
          <target state="translated">属性は他のオーバー*イベントと同様です。</target>
        </trans-unit>
        <trans-unit id="b8ad7c39fecdf32064de2e39ae851da53a46bc0b" translate="yes" xml:space="preserve">
          <source>attributes of &quot;item-number&quot; elements in a given &quot;over-number&quot; area</source>
          <target state="translated">項目数オーバーエリア内の項目数要素の属性</target>
        </trans-unit>
        <trans-unit id="0c6a96d02eaab4e91ebed96db44f05d3adbda240" translate="yes" xml:space="preserve">
          <source>attributes), and an error message might be issued to the user.</source>
          <target state="translated">属性)を使用している場合、ユーザーにエラーメッセージが表示されることがあります。</target>
        </trans-unit>
        <trans-unit id="6c96eab257b4cf4e5e658df68be3609a71585745" translate="yes" xml:space="preserve">
          <source>attrname</source>
          <target state="translated">attrname</target>
        </trans-unit>
        <trans-unit id="609ae5d56623717e5f042c6463571bf7716a83b4" translate="yes" xml:space="preserve">
          <source>auth ( SASL )</source>
          <target state="translated">auth(SASL )</target>
        </trans-unit>
        <trans-unit id="da389447cc56fe63760b8bfd30bef22a857ad05a" translate="yes" xml:space="preserve">
          <source>auth ( USERNAME, PASSWORD )</source>
          <target state="translated">auth(USERNAME,PASSWORD )</target>
        </trans-unit>
        <trans-unit id="44e865e1c1b3297ce69dcf97f5261cfbf03fa105" translate="yes" xml:space="preserve">
          <source>authinfo ( USER, PASS )</source>
          <target state="translated">authinfo(USER,PASS )</target>
        </trans-unit>
        <trans-unit id="16e2db9ebc7cdc40e2963dd1da8e03b1d661a4ac" translate="yes" xml:space="preserve">
          <source>authinfo_simple ( USER, PASS )</source>
          <target state="translated">authinfo_simple(USER,PASS )</target>
        </trans-unit>
        <trans-unit id="f64cd8e32f5ac7553c150bd05d6f2252bb73f68d" translate="yes" xml:space="preserve">
          <source>author</source>
          <target state="translated">author</target>
        </trans-unit>
        <trans-unit id="6c1a67bf1e74785e2b7674a2f30a0cf297f56720" translate="yes" xml:space="preserve">
          <source>author_id, owner_id</source>
          <target state="translated">author_id,owner_id</target>
        </trans-unit>
        <trans-unit id="2c35d48339ebb4e1e77c1d6c3dffa846d1b19b66" translate="yes" xml:space="preserve">
          <source>authorize ( [AUTH [, RESP]])</source>
          <target state="translated">認可する([AUTH [,RESP])</target>
        </trans-unit>
        <trans-unit id="90e3fd0f012c27834ea5ef3cf1dfef96e9190b40" translate="yes" xml:space="preserve">
          <source>authors</source>
          <target state="translated">authors</target>
        </trans-unit>
        <trans-unit id="480abf89fe2d1830b23e7098edc6d51d774d0c2a" translate="yes" xml:space="preserve">
          <source>authors/id/TOMC/scripts/nshist.gz</source>
          <target state="translated">authors/id/TOMC/scripts/nshist.gz</target>
        </trans-unit>
        <trans-unit id="c33fcb6996455fe1e1fa0a761ee443d59c481aa3" translate="yes" xml:space="preserve">
          <source>auto/</source>
          <target state="translated">auto/</target>
        </trans-unit>
        <trans-unit id="379a77c54f6ae1790a2244a0d2c048af4e634475" translate="yes" xml:space="preserve">
          <source>auto/$module/$module.bs</source>
          <target state="translated">auto/$module/$module.bs</target>
        </trans-unit>
        <trans-unit id="220e6841a8a7621c4a89ea7b80f1f146f73eaf9b" translate="yes" xml:space="preserve">
          <source>auto/DBD/Oracle/Oracle.a</source>
          <target state="translated">auto/DBD/Oracle/Oracle.a</target>
        </trans-unit>
        <trans-unit id="51ebf6d6fd8909a977306dd245925df9ee90fd5f" translate="yes" xml:space="preserve">
          <source>auto/Foo/*.mo</source>
          <target state="translated">auto/Foo/*.mo</target>
        </trans-unit>
        <trans-unit id="e694098f1cf7520142821fcc984e3d661c44f43f" translate="yes" xml:space="preserve">
          <source>auto/Foo/*.po</source>
          <target state="translated">auto/Foo/*.po</target>
        </trans-unit>
        <trans-unit id="3c5e43613cff090be4fc50d8ae5dd6d77a6b436a" translate="yes" xml:space="preserve">
          <source>auto/Socket/Socket.a</source>
          <target state="translated">auto/Socket/Socket.a</target>
        </trans-unit>
        <trans-unit id="2be06c1e85af3aeda93bd94fc5f8c8f0ca1a6fcf" translate="yes" xml:space="preserve">
          <source>auto/Socket/Socket.so</source>
          <target state="translated">auto/Socket/Socket.so</target>
        </trans-unit>
        <trans-unit id="0159b1c4926c7d3e58575705e2b2446e2f089413" translate="yes" xml:space="preserve">
          <source>auto/funcname.al</source>
          <target state="translated">auto/funcname.al</target>
        </trans-unit>
        <trans-unit id="61fff2e1a22690e6d5947e853162ef541dc4e471" translate="yes" xml:space="preserve">
          <source>auto_abbrev</source>
          <target state="translated">auto_abbrev</target>
        </trans-unit>
        <trans-unit id="2afbae650d151ea0265adb3f3c3d215c4897c2f6" translate="yes" xml:space="preserve">
          <source>auto_commit</source>
          <target state="translated">auto_commit</target>
        </trans-unit>
        <trans-unit id="402c024f88b71207c57d4f97b705333a6f774f23" translate="yes" xml:space="preserve">
          <source>auto_help (default:disabled)</source>
          <target state="translated">auto_help (デフォルト:無効)</target>
        </trans-unit>
        <trans-unit id="06e471b91c6b9278c4206cdf40a0c4bd988e44fa" translate="yes" xml:space="preserve">
          <source>auto_version (default:disabled)</source>
          <target state="translated">自動バージョン (デフォルト:無効)</target>
        </trans-unit>
        <trans-unit id="29dbf9fbbc1982eb3494d98a1ba20678ee1cd75a" translate="yes" xml:space="preserve">
          <source>autobundle</source>
          <target state="translated">autobundle</target>
        </trans-unit>
        <trans-unit id="d7fdb81095b8f0d754d3385c78ee0178778a27e1" translate="yes" xml:space="preserve">
          <source>autochomp</source>
          <target state="translated">autochomp</target>
        </trans-unit>
        <trans-unit id="a577d5867e3da0a70fe888d4e799c74e3bb3acee" translate="yes" xml:space="preserve">
          <source>autodie</source>
          <target state="translated">autodie</target>
        </trans-unit>
        <trans-unit id="3d06c1fb0d41b3bcd406473263f2d39a8385f847" translate="yes" xml:space="preserve">
          <source>autodie - Replace functions with ones that succeed or die with lexical scope</source>
          <target state="translated">autodie-語彙的スコープを用いて、関数を継承または消滅するものに置き換える</target>
        </trans-unit>
        <trans-unit id="a11d8629a6714617f42a511f4ed6cd917d35963b" translate="yes" xml:space="preserve">
          <source>autodie and string eval</source>
          <target state="translated">autodie と文字列 eval</target>
        </trans-unit>
        <trans-unit id="dc0d67b14cb1a5d70192f36381979b2f933bf9e3" translate="yes" xml:space="preserve">
          <source>autodie::Scope::Guard</source>
          <target state="translated">autodie::Scope::Guard</target>
        </trans-unit>
        <trans-unit id="c111b8358fe6c36d7e3a144ae44091f187d31532" translate="yes" xml:space="preserve">
          <source>autodie::Scope::Guard - Wrapper class for calling subs at end of scope</source>
          <target state="translated">autodie::Scope::Guard-スコープ終了時にサブを呼び出すためのラッパクラス</target>
        </trans-unit>
        <trans-unit id="a22f61d277dedcb9888724212ede885048f0106e" translate="yes" xml:space="preserve">
          <source>autodie::Scope::GuardStack</source>
          <target state="translated">autodie::Scope::GuardStack</target>
        </trans-unit>
        <trans-unit id="014cb28009b96ff9c04108e0c47c7a66680b1e80" translate="yes" xml:space="preserve">
          <source>autodie::Scope::GuardStack - Hook stack for managing scopes via %^H</source>
          <target state="translated">autodie::Scope::GuardStack-%^H でスコープを管理するためのフックスタック</target>
        </trans-unit>
        <trans-unit id="d8095a3005474796d1569dd550928d5b1089df68" translate="yes" xml:space="preserve">
          <source>autodie::Util</source>
          <target state="translated">autodie::Util</target>
        </trans-unit>
        <trans-unit id="92da7bd8499bb8812f4a6d9227502313585550d0" translate="yes" xml:space="preserve">
          <source>autodie::Util - Internal Utility subroutines for autodie and Fatal</source>
          <target state="translated">autodie::Util-autodie および Fatal 用の内部ユーティリティサブルーチン</target>
        </trans-unit>
        <trans-unit id="c1a1d00617abf34e5c8765165fc1ca159f49c23e" translate="yes" xml:space="preserve">
          <source>autodie::exception</source>
          <target state="translated">autodie::exception</target>
        </trans-unit>
        <trans-unit id="f12923cae5ec41be8c4851646d2770147ec3da87" translate="yes" xml:space="preserve">
          <source>autodie::exception - Exceptions from autodying functions.</source>
          <target state="translated">autodie::exception-オートボディリング関数からの例外.</target>
        </trans-unit>
        <trans-unit id="05d35bf27341634100e35a0c8ca835be04f2fed3" translate="yes" xml:space="preserve">
          <source>autodie::exception::system</source>
          <target state="translated">autodie::exception::system</target>
        </trans-unit>
        <trans-unit id="4840ea88280488a903534f4a0c898c6024d8a774" translate="yes" xml:space="preserve">
          <source>autodie::exception::system - Exceptions from autodying system().</source>
          <target state="translated">autodie::exception::system-autodying system()からの例外。</target>
        </trans-unit>
        <trans-unit id="6e24167ca9afa6c7f2b5a925033e7618b5d44476" translate="yes" xml:space="preserve">
          <source>autodie::hints</source>
          <target state="translated">autodie::hints</target>
        </trans-unit>
        <trans-unit id="ec9975be99761c25ec7219a6a4cc33b4e8e51342" translate="yes" xml:space="preserve">
          <source>autodie::hints - Provide hints about user subroutines to autodie</source>
          <target state="translated">autodie::hints-ユーザのサブルーチンに関するヒントを autodie に提供する</target>
        </trans-unit>
        <trans-unit id="7aea00cb8279f90b1ef25b7437493aee07c83547" translate="yes" xml:space="preserve">
          <source>autodie::skip</source>
          <target state="translated">autodie::skip</target>
        </trans-unit>
        <trans-unit id="846768212cb683ca0ccba14874187744a3f4877e" translate="yes" xml:space="preserve">
          <source>autodie::skip - Skip a package when throwing autodie exceptions</source>
          <target state="translated">autodie::skip-autodie の例外を投げる際にパッケージをスキップする</target>
        </trans-unit>
        <trans-unit id="7554acb29f084d6cb46fbc0e7508ae57a54cbdfc" translate="yes" xml:space="preserve">
          <source>autoexec.bat</source>
          <target state="translated">autoexec.bat</target>
        </trans-unit>
        <trans-unit id="b2858151dc8dfe7daca5d572d920ca322993a122" translate="yes" xml:space="preserve">
          <source>autoflush</source>
          <target state="translated">autoflush</target>
        </trans-unit>
        <trans-unit id="668672fa7b7fd5fb3d195b4a6baca1536dd33f27" translate="yes" xml:space="preserve">
          <source>autogeneration</source>
          <target state="translated">autogeneration</target>
        </trans-unit>
        <trans-unit id="e50d5312673c20578fdc133952a68f0db7e850f2" translate="yes" xml:space="preserve">
          <source>autoincrement</source>
          <target state="translated">autoincrement</target>
        </trans-unit>
        <trans-unit id="4f25d09afc26355e099f60888cb6afb436cd27bf" translate="yes" xml:space="preserve">
          <source>autoload</source>
          <target state="translated">autoload</target>
        </trans-unit>
        <trans-unit id="05012112e2ffc3c215bad8795054b22b58e0e1a6" translate="yes" xml:space="preserve">
          <source>autoload PACKAGE, VERSION, AUTOLOADER</source>
          <target state="translated">autoload PACKAGE,VERSION,AUTOLOADER</target>
        </trans-unit>
        <trans-unit id="6e9af19367e37b3fd7b0448b5a6cf2432cce858e" translate="yes" xml:space="preserve">
          <source>autoload_remote</source>
          <target state="translated">autoload_remote</target>
        </trans-unit>
        <trans-unit id="64e3d9c664534c5dc480d648743bea7d2acbe343" translate="yes" xml:space="preserve">
          <source>automatically assigns distinct sequential IDs to things for which no ID was supplied by the caller. A default value expression may also refer to parameters earlier in the signature, making the default for one parameter vary according to the earlier parameters. For example,</source>
          <target state="translated">は、呼び出し元からIDが与えられていないものには、自動的に別個の連続したIDを割り当てます。デフォルト値の表現は、シグネチャの以前のパラメータを参照することもでき、1つのパラメータのデフォルト値が以前のパラメータに応じて変化するようにします。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="6b7d64e164b77abd5a26b00692b29b74ebe0531e" translate="yes" xml:space="preserve">
          <source>automatically searches to find the earliest stable version for which the test case passes. Run &lt;code&gt;Porting/bisect.pl --help&lt;/code&gt; for the full documentation, including how to set the &lt;code&gt;Configure&lt;/code&gt; and build time options.</source>
          <target state="translated">テストケースに合格した最も古い安定バージョンを自動的に検索して見つけます。 &lt;code&gt;Porting/bisect.pl --help&lt;/code&gt; を実行して、 &lt;code&gt;Configure&lt;/code&gt; およびビルド時間オプションの設定方法を含む完全なドキュメントを入手してください。</target>
        </trans-unit>
        <trans-unit id="57017ac4b77af63d6b742fe5c253a70fa799e907" translate="yes" xml:space="preserve">
          <source>autosplit</source>
          <target state="translated">autosplit</target>
        </trans-unit>
        <trans-unit id="76fc9ebd6695f30477da08fb8142ffeedfeb7837" translate="yes" xml:space="preserve">
          <source>autosplit.ix</source>
          <target state="translated">autosplit.ix</target>
        </trans-unit>
        <trans-unit id="a5d5b1a8b0a28fc771323790020196c5accafa43" translate="yes" xml:space="preserve">
          <source>autouse</source>
          <target state="translated">autouse</target>
        </trans-unit>
        <trans-unit id="442893c8365aac3e6f7baa2c6d61b464ed2881a4" translate="yes" xml:space="preserve">
          <source>autouse - postpone load of modules until a function is used</source>
          <target state="translated">autouse-関数が使われるまでモジュールのロードを延期する</target>
        </trans-unit>
        <trans-unit id="5d4dfc227465e494c0c115736952236fb57eead0" translate="yes" xml:space="preserve">
          <source>autovivification</source>
          <target state="translated">autovivification</target>
        </trans-unit>
        <trans-unit id="5c4337373ca318929efba1f1977eed88f111a055" translate="yes" xml:space="preserve">
          <source>aux_list(cv)</source>
          <target state="translated">aux_list(cv)</target>
        </trans-unit>
        <trans-unit id="dd1180454c203de060904d192ac433fa587b6a84" translate="yes" xml:space="preserve">
          <source>auxiliary/GraphemeBreakTest.html</source>
          <target state="translated">auxiliary/GraphemeBreakTest.html</target>
        </trans-unit>
        <trans-unit id="a63105fc1df24429a2b75699b2ca788863d0a84f" translate="yes" xml:space="preserve">
          <source>auxiliary/LineBreakTest.html</source>
          <target state="translated">auxiliary/LineBreakTest.html</target>
        </trans-unit>
        <trans-unit id="e8249568a2c6df401c77089426c797a70a610f82" translate="yes" xml:space="preserve">
          <source>auxiliary/SentenceBreakTest.html</source>
          <target state="translated">auxiliary/SentenceBreakTest.html</target>
        </trans-unit>
        <trans-unit id="a679f7ff1afe202cb29dd1069cb2ddd9d2ac3913" translate="yes" xml:space="preserve">
          <source>auxiliary/WordBreakTest.html</source>
          <target state="translated">auxiliary/WordBreakTest.html</target>
        </trans-unit>
        <trans-unit id="7d4a1ec6821afa3e290c645e7f8553cda905013e" translate="yes" xml:space="preserve">
          <source>av.c</source>
          <target state="translated">av.c</target>
        </trans-unit>
        <trans-unit id="d52131125e175ad369ff2ead93d060398ec44bd0" translate="yes" xml:space="preserve">
          <source>av_arylen_p</source>
          <target state="translated">av_arylen_p</target>
        </trans-unit>
        <trans-unit id="7fa2741f7a8e3e39c280147cc62e4f272dc30365" translate="yes" xml:space="preserve">
          <source>av_clear</source>
          <target state="translated">av_clear</target>
        </trans-unit>
        <trans-unit id="91ebee21b0f25534f0b8be977b1952e47feba575" translate="yes" xml:space="preserve">
          <source>av_create_and_push</source>
          <target state="translated">av_create_and_push</target>
        </trans-unit>
        <trans-unit id="b9a9f5f7fb30c245f071d3558efeee9878de90a8" translate="yes" xml:space="preserve">
          <source>av_create_and_unshift_one</source>
          <target state="translated">av_create_and_unshift_one</target>
        </trans-unit>
        <trans-unit id="f6c772a926129049a482f5e5eef4c0cef92a6df6" translate="yes" xml:space="preserve">
          <source>av_delete</source>
          <target state="translated">av_delete</target>
        </trans-unit>
        <trans-unit id="e0584133cb5a99f3ff703f123f1add680d923205" translate="yes" xml:space="preserve">
          <source>av_exists</source>
          <target state="translated">av_exists</target>
        </trans-unit>
        <trans-unit id="8cf315bfc28e4183097603e398dd606fb75a92e9" translate="yes" xml:space="preserve">
          <source>av_extend</source>
          <target state="translated">av_extend</target>
        </trans-unit>
        <trans-unit id="969538e0cc4f2f8bb79fff826bf4ba6204f3b9dd" translate="yes" xml:space="preserve">
          <source>av_extend_guts</source>
          <target state="translated">av_extend_guts</target>
        </trans-unit>
        <trans-unit id="4dbf9ad55ba810e631a283196ca048461ab7a775" translate="yes" xml:space="preserve">
          <source>av_fetch</source>
          <target state="translated">av_fetch</target>
        </trans-unit>
        <trans-unit id="63f7efd66eb3e9cacf0aa524cdb984668dcfe333" translate="yes" xml:space="preserve">
          <source>av_fill</source>
          <target state="translated">av_fill</target>
        </trans-unit>
        <trans-unit id="9808d394bec6fa760f60a4a47552a2370986ac9f" translate="yes" xml:space="preserve">
          <source>av_iter_p</source>
          <target state="translated">av_iter_p</target>
        </trans-unit>
        <trans-unit id="4111003113ddea377a1489ef31ff8e6afa039d3c" translate="yes" xml:space="preserve">
          <source>av_len</source>
          <target state="translated">av_len</target>
        </trans-unit>
        <trans-unit id="26ce24376c0af018931b9119a9cce5adf11f62ea" translate="yes" xml:space="preserve">
          <source>av_make</source>
          <target state="translated">av_make</target>
        </trans-unit>
        <trans-unit id="25c316683bf8917039852f251e39ae37bf398585" translate="yes" xml:space="preserve">
          <source>av_nonelem</source>
          <target state="translated">av_nonelem</target>
        </trans-unit>
        <trans-unit id="8722570d82a9920bffbbe0567144037d4ec2f9d8" translate="yes" xml:space="preserve">
          <source>av_pop</source>
          <target state="translated">av_pop</target>
        </trans-unit>
        <trans-unit id="730c41c52a3553ffdb53a9e7fff18ca7913135a3" translate="yes" xml:space="preserve">
          <source>av_push</source>
          <target state="translated">av_push</target>
        </trans-unit>
        <trans-unit id="2846461d400536cd450d6312e4d9cbf65d4b03e6" translate="yes" xml:space="preserve">
          <source>av_reify</source>
          <target state="translated">av_reify</target>
        </trans-unit>
        <trans-unit id="e59b0439f03a55c2dc789113a756420b7049e68d" translate="yes" xml:space="preserve">
          <source>av_reify called on tied array</source>
          <target state="translated">av_reify が結ばれた配列で呼び出される</target>
        </trans-unit>
        <trans-unit id="56413731c6443156c657c5ae1d4340cc43ca1a06" translate="yes" xml:space="preserve">
          <source>av_shift</source>
          <target state="translated">av_shift</target>
        </trans-unit>
        <trans-unit id="27ae04d947c907457183f29701206cc62ef9995b" translate="yes" xml:space="preserve">
          <source>av_store</source>
          <target state="translated">av_store</target>
        </trans-unit>
        <trans-unit id="2d64aa2c54986ec3e7999adee68aa2b6b7163139" translate="yes" xml:space="preserve">
          <source>av_tindex</source>
          <target state="translated">av_tindex</target>
        </trans-unit>
        <trans-unit id="3b213e0d90972281e7460bf469452b71ae88764f" translate="yes" xml:space="preserve">
          <source>av_top_index</source>
          <target state="translated">av_top_index</target>
        </trans-unit>
        <trans-unit id="33660ab02957b829adfb6323d75865fff942b1c5" translate="yes" xml:space="preserve">
          <source>av_undef</source>
          <target state="translated">av_undef</target>
        </trans-unit>
        <trans-unit id="a016ac9d25a267e84346d117bb2283bba27198e1" translate="yes" xml:space="preserve">
          <source>av_unshift</source>
          <target state="translated">av_unshift</target>
        </trans-unit>
        <trans-unit id="bf2d347acf0d2210411dbd48fd0188278826a510" translate="yes" xml:space="preserve">
          <source>available when the &lt;code&gt;seq&lt;/code&gt; method is used along with the R_CURSOR flag.</source>
          <target state="translated">R_CURSORフラグと共に &lt;code&gt;seq&lt;/code&gt; メソッドが使用されている場合に使用できます。</target>
        </trans-unit>
        <trans-unit id="5b2f5ffc6516e12ddb85b8802e4260a6688c946b" translate="yes" xml:space="preserve">
          <source>available. After the first argument, &lt;code&gt;skip(...)&lt;/code&gt; works exactly the same way as &lt;code&gt;ok(...)&lt;/code&gt; does.</source>
          <target state="translated">利用可能です。最初の引数の後、 &lt;code&gt;skip(...)&lt;/code&gt; は &lt;code&gt;ok(...)&lt;/code&gt; とまったく同じように機能します。</target>
        </trans-unit>
        <trans-unit id="de42df957f23daa4c8157074e0625209abd6488c" translate="yes" xml:space="preserve">
          <source>avoids such a degradation.</source>
          <target state="translated">そのような劣化を避けることができます。</target>
        </trans-unit>
        <trans-unit id="c027a379a046e31dfb0f6b178d42c47ae4aba491" translate="yes" xml:space="preserve">
          <source>awk</source>
          <target state="translated">awk</target>
        </trans-unit>
        <trans-unit id="e418c6a55a4fb786dadd646e1573be4fd2df9653" translate="yes" xml:space="preserve">
          <source>awk.exe</source>
          <target state="translated">awk.exe</target>
        </trans-unit>
        <trans-unit id="2a2e1206b4222b0d7cc8c8a1d8b302ee70cfe817" translate="yes" xml:space="preserve">
          <source>ax</source>
          <target state="translated">ax</target>
        </trans-unit>
        <trans-unit id="6431b8949d26ab22586e5fea24d5e1fcf2e09540" translate="yes" xml:space="preserve">
          <source>axes. Mathematicians call</source>
          <target state="translated">軸のことを指します。数学者は</target>
        </trans-unit>
        <trans-unit id="69036a2af9bfb0d5daf1763137608136cb2401bd" translate="yes" xml:space="preserve">
          <source>axis, and therefore</source>
          <target state="translated">軸であり、したがって</target>
        </trans-unit>
        <trans-unit id="e8e340942e36c5463f6d6ae678f806cf14a11886" translate="yes" xml:space="preserve">
          <source>axis. There is a notation for this using the exponential form, which is:</source>
          <target state="translated">軸を使用しています。指数形を使った表記がありますが、これは</target>
        </trans-unit>
        <trans-unit id="85f73bad0a71d5e81d44f69fff24051a84f9e8cb" translate="yes" xml:space="preserve">
          <source>azimuthal</source>
          <target state="translated">azimuthal</target>
        </trans-unit>
        <trans-unit id="e9d71f5ee7c92d6dc9e92ffdad17b8bd49418f98" translate="yes" xml:space="preserve">
          <source>b</source>
          <target state="translated">b</target>
        </trans-unit>
        <trans-unit id="ee6b9af78e9cb7153a0b28a0742ca016f08ad71e" translate="yes" xml:space="preserve">
          <source>b [file]:[line] [condition]</source>
          <target state="translated">b [ファイル]:[行][条件]</target>
        </trans-unit>
        <trans-unit id="2ecb059c093cdc1dc92b2bc475757c7bd89bdf41" translate="yes" xml:space="preserve">
          <source>b [line] [condition]</source>
          <target state="translated">b [行][条件]</target>
        </trans-unit>
        <trans-unit id="da6f45e7b385d86d257b1bc01dfc782704515b7a" translate="yes" xml:space="preserve">
          <source>b compile subname</source>
          <target state="translated">b コンパイルふくごうめい</target>
        </trans-unit>
        <trans-unit id="aee7e3509d80477e6df0cb068049e37cacb4b1e0" translate="yes" xml:space="preserve">
          <source>b load filename</source>
          <target state="translated">b ロードファイル名</target>
        </trans-unit>
        <trans-unit id="14e45e5debaaf05d7e21f8517c89076892bf016f" translate="yes" xml:space="preserve">
          <source>b postpone subname [condition]</source>
          <target state="translated">b postpone サブネーム[条件]</target>
        </trans-unit>
        <trans-unit id="2b4a44721f42a033859f77ab894662cf40bbb0ae" translate="yes" xml:space="preserve">
          <source>b subname [condition]</source>
          <target state="translated">b サブネーム[条件]</target>
        </trans-unit>
        <trans-unit id="fddfc6e1d7666d90904c5e3b0ac5d66177c016ab" translate="yes" xml:space="preserve">
          <source>b)</source>
          <target state="translated">b)</target>
        </trans-unit>
        <trans-unit id="be0f342011df36195c2bdef07802b43a541d7d4c" translate="yes" xml:space="preserve">
          <source>b) How do I verify that an email address targets a valid recipient?</source>
          <target state="translated">b)メールアドレスが有効な受信者を対象としていることを確認するにはどうすればよいですか?</target>
        </trans-unit>
        <trans-unit id="99d2d8800a736d7dfa39e0baf946a6c21c96cb07" translate="yes" xml:space="preserve">
          <source>babs()</source>
          <target state="translated">babs()</target>
        </trans-unit>
        <trans-unit id="051ab161b3f3d1c554e991fe37a1c08598100515" translate="yes" xml:space="preserve">
          <source>backermann()</source>
          <target state="translated">backermann()</target>
        </trans-unit>
        <trans-unit id="e24941468d7edb7b4b97099853ae8f500000e6d5" translate="yes" xml:space="preserve">
          <source>backlink</source>
          <target state="translated">backlink</target>
        </trans-unit>
        <trans-unit id="3652c1c0d07ea36c0f41d5a5bd1906547467aa7c" translate="yes" xml:space="preserve">
          <source>backreference</source>
          <target state="translated">backreference</target>
        </trans-unit>
        <trans-unit id="84eb39aaf0e1b7cca7c174974634139b97dd390f" translate="yes" xml:space="preserve">
          <source>backreferences</source>
          <target state="translated">backreferences</target>
        </trans-unit>
        <trans-unit id="7509930d058130604f3243eff8e57a63497eff72" translate="yes" xml:space="preserve">
          <source>backticks</source>
          <target state="translated">backticks</target>
        </trans-unit>
        <trans-unit id="d6666df3cfe0a87d82053354efeb1ef3f1df123d" translate="yes" xml:space="preserve">
          <source>backtracking</source>
          <target state="translated">backtracking</target>
        </trans-unit>
        <trans-unit id="57a1bc6fe9d759dc23556c9a5fb2238494baf0a8" translate="yes" xml:space="preserve">
          <source>backward compatibility</source>
          <target state="translated">下位互換性</target>
        </trans-unit>
        <trans-unit id="c1d90f6ed95de8b2f849cb8fba9cb0695ea047bb" translate="yes" xml:space="preserve">
          <source>backwards</source>
          <target state="translated">backwards</target>
        </trans-unit>
        <trans-unit id="782bc23d1c84370a515e713f6f4bed332d243305" translate="yes" xml:space="preserve">
          <source>bacmp()</source>
          <target state="translated">bacmp()</target>
        </trans-unit>
        <trans-unit id="023e7452be147f47fab20b687cbf88f849f3973e" translate="yes" xml:space="preserve">
          <source>bacmp()/bcmp()</source>
          <target state="translated">bacmp()/bcmp()</target>
        </trans-unit>
        <trans-unit id="a30e4fdfae25e2407e88209d32fa3206cbd57707" translate="yes" xml:space="preserve">
          <source>bad for IBM's programs, but the same compiler was used for DLLs which are used with general-purpose applications. When these DLLs are used, the state of floating-point flags in the application is not predictable.</source>
          <target state="translated">IBMのプログラムでは悪いのですが、汎用アプリケーションで使用されるDLLでは同じコンパイラを使用していました。これらのDLLを使用すると、アプリケーション内の浮動小数点フラグの状態が予測できなくなります。</target>
        </trans-unit>
        <trans-unit id="7f9cb3f34cd025e1205c4645d1e6aca0d8597e5b" translate="yes" xml:space="preserve">
          <source>badd()</source>
          <target state="translated">badd()</target>
        </trans-unit>
        <trans-unit id="bcea895e1a3b428cb9ae8f8bb6a77c80b6d1735c" translate="yes" xml:space="preserve">
          <source>badd()/bmul()/bsub()/bdiv()/bdec()/binc()</source>
          <target state="translated">badd()/bmul()/bsub()/bdiv()/bdec()/binc()</target>
        </trans-unit>
        <trans-unit id="28776fc2f596476304f65e05ae24e174fbc20745" translate="yes" xml:space="preserve">
          <source>bailey@newman.upenn.edu</source>
          <target state="translated">bailey@newman.upenn.edu</target>
        </trans-unit>
        <trans-unit id="d5f9d5e53a7c7d23a33fb2e87ff767a4dee06322" translate="yes" xml:space="preserve">
          <source>bailout methods</source>
          <target state="translated">ベイルアウト法</target>
        </trans-unit>
        <trans-unit id="9e70978d8dfbac0d3ca9324bca230eea2b943e47" translate="yes" xml:space="preserve">
          <source>band()</source>
          <target state="translated">band()</target>
        </trans-unit>
        <trans-unit id="48eb22d8e4ba1a46c166c176e4d110720e1ea85a" translate="yes" xml:space="preserve">
          <source>banner ()</source>
          <target state="translated">旗</target>
        </trans-unit>
        <trans-unit id="62cdb7020ff920e5aa642c3d4066950dd1f01f4d" translate="yes" xml:space="preserve">
          <source>bar</source>
          <target state="translated">bar</target>
        </trans-unit>
        <trans-unit id="961b1cd40787e3f47e9dd503958e048866722a96" translate="yes" xml:space="preserve">
          <source>bar.dll</source>
          <target state="translated">bar.dll</target>
        </trans-unit>
        <trans-unit id="e474af74a0c30c226d54cc12d642a5c13df423f2" translate="yes" xml:space="preserve">
          <source>bareStringify</source>
          <target state="translated">bareStringify</target>
        </trans-unit>
        <trans-unit id="0727d0a9104ddffed608ae2a79fd31f918ad3dde" translate="yes" xml:space="preserve">
          <source>bareword</source>
          <target state="translated">bareword</target>
        </trans-unit>
        <trans-unit id="1405df66cbe219b0bf6355bc3d60361a8376b6b4" translate="yes" xml:space="preserve">
          <source>base</source>
          <target state="translated">base</target>
        </trans-unit>
        <trans-unit id="82364d6e500f9e7c6d2e135ddc4ef3ae5df9c250" translate="yes" xml:space="preserve">
          <source>base - Establish an ISA relationship with base classes at compile time</source>
          <target state="translated">base-コンパイル時に基底クラスとの ISA 関係を確立する</target>
        </trans-unit>
        <trans-unit id="d5b858bb629f56a1b3bf07eec9afeff8cb2176cd" translate="yes" xml:space="preserve">
          <source>base character</source>
          <target state="translated">きほんもじ</target>
        </trans-unit>
        <trans-unit id="94f0cf029e34b46f8956546c3ca831b45b7757bb" translate="yes" xml:space="preserve">
          <source>base class</source>
          <target state="translated">基底クラス</target>
        </trans-unit>
        <trans-unit id="fb170bf0a7f9325c8aa7a0a138128b8ec5471d88" translate="yes" xml:space="preserve">
          <source>base.pm was unable to require the base package, because it was not found in your path.</source>
          <target state="translated">base.pm はベースパッケージを必要とすることができませんでした。</target>
        </trans-unit>
        <trans-unit id="8095e159699116466e36cbafd09e1d845f29f2b9" translate="yes" xml:space="preserve">
          <source>base64</source>
          <target state="translated">base64</target>
        </trans-unit>
        <trans-unit id="e9e99739293e7367ccad4549a440bbf99651181f" translate="yes" xml:space="preserve">
          <source>basename(1)</source>
          <target state="translated">basename(1)</target>
        </trans-unit>
        <trans-unit id="9a441af68f4177c8bcff94839c442392a522bb71" translate="yes" xml:space="preserve">
          <source>baserev.U</source>
          <target state="translated">baserev.U</target>
        </trans-unit>
        <trans-unit id="c8a16b493c487d9f0d43546b842106bf2ffa7152" translate="yes" xml:space="preserve">
          <source>bash</source>
          <target state="translated">bash</target>
        </trans-unit>
        <trans-unit id="1da8eaa4a0d77769d77e901c7a8bd51a90b2108b" translate="yes" xml:space="preserve">
          <source>bash.btm</source>
          <target state="translated">bash.btm</target>
        </trans-unit>
        <trans-unit id="d7113141808e2d9571e4d8981caf323c56b50b9c" translate="yes" xml:space="preserve">
          <source>bash.exe</source>
          <target state="translated">bash.exe</target>
        </trans-unit>
        <trans-unit id="e25ac03f477736cf429678bb164c6ba39a46224c" translate="yes" xml:space="preserve">
          <source>basic block profiling</source>
          <target state="translated">きほんブロックプロファイリング</target>
        </trans-unit>
        <trans-unit id="bb86a2ae262d9c015cbc4346cbdae479e321322e" translate="yes" xml:space="preserve">
          <source>basic blocks</source>
          <target state="translated">基本ブロック</target>
        </trans-unit>
        <trans-unit id="ce252839c8120fb5bca1f5ab1ecf317e2b8c1ad2" translate="yes" xml:space="preserve">
          <source>basic-block counting</source>
          <target state="translated">基本ブロック数</target>
        </trans-unit>
        <trans-unit id="c09a78352f016692dcd8dd798d66441c80a78605" translate="yes" xml:space="preserve">
          <source>basic_text</source>
          <target state="translated">basic_text</target>
        </trans-unit>
        <trans-unit id="20dfaec48307e3cf13210a9ec0c330efc261304c" translate="yes" xml:space="preserve">
          <source>basically means this: look in the lexicon for $lang (which may inherit from any number of other lexicons), and find the function that we happen to associate with the string &quot;You have [quant,_1,piece] of new mail&quot; (which is, and should be, a functioning &quot;shorthand&quot; for this function in the native locale -- English in this case). If you find such a function, call it with $lang as its first parameter (as if it were a method), and then a copy of scalar(@messages) as its second, and then return that value. If that function was found, but was in string shorthand instead of being a fully specified function, parse it and make it into a function before calling it the first time.</source>
          <target state="translated">基本的には次のようなことを意味します:$langのレキシコンを探して(他のレキシコンを継承している場合もあります)、たまたま &quot;You have [quant,_1,piece]of new mail &quot;という文字列に関連付けられている関数を見つけます(ネイティブロケールではこの関数の &quot;速記法 &quot;として機能しているはずです --この場合は英語)。このような関数を見つけたら、最初のパラメータに $lang を指定して(あたかもメソッドであるかのように)呼び出し、2番目のパラメータに scalar(@messages)のコピーを指定して、その値を返してください。もしその関数が見つかったとしても、完全に指定された関数ではなく文字列の速記法で書かれていた場合は、最初に呼び出す前にそれを解析して関数にしてください。</target>
        </trans-unit>
        <trans-unit id="a78ae04842f1950e62670dd82c3cf7ad1b73b83e" translate="yes" xml:space="preserve">
          <source>batan()</source>
          <target state="translated">batan()</target>
        </trans-unit>
        <trans-unit id="6dbadea73d392ffaeb4be2ca32f3c9398f6e1e4f" translate="yes" xml:space="preserve">
          <source>batan2()</source>
          <target state="translated">batan2()</target>
        </trans-unit>
        <trans-unit id="504ee22084024022630f49c8572bc2a333f11490" translate="yes" xml:space="preserve">
          <source>batch_mode_page_object_init</source>
          <target state="translated">batch_mode_page_object_init</target>
        </trans-unit>
        <trans-unit id="75736a80f50247c7c9141706465352089a086efa" translate="yes" xml:space="preserve">
          <source>baz&quot;, and, going the other way, the optional parsing of groups of words joined by NBSP's as if each group were in a S&amp;lt;...&amp;gt; code, so that formatters may use the representation that maps best to what the output format demands.</source>
          <target state="translated">baz &quot;、そして逆に、NBSPによって結合された単語のグループのオプションの解析は、各グループがS &amp;lt;...&amp;gt;コード内にあるかのように、フォーマッターが出力フォーマットと最もよく一致する表現を使用できるようにします。要求。</target>
        </trans-unit>
        <trans-unit id="541a5c612e022e7f06af776324ec7f5dbef7f667" translate="yes" xml:space="preserve">
          <source>bcc ( ADDRESS [, ADDRESS [...]] )</source>
          <target state="translated">bcc(ADDRESS [,ADDRESS [...])</target>
        </trans-unit>
        <trans-unit id="89a83e99befe035db29117627cce4ee77338bd35" translate="yes" xml:space="preserve">
          <source>bceil()</source>
          <target state="translated">bceil()</target>
        </trans-unit>
        <trans-unit id="b6356d193cf6cf6c6164f0a61510cd2ff7bff517" translate="yes" xml:space="preserve">
          <source>bcmp()</source>
          <target state="translated">bcmp()</target>
        </trans-unit>
        <trans-unit id="71dfbd8ffe00a83c45102653482b2f06269a2017" translate="yes" xml:space="preserve">
          <source>bcos()</source>
          <target state="translated">bcos()</target>
        </trans-unit>
        <trans-unit id="a1ec6c7cd47b7ce21fb70948a7fe12d8f2de5652" translate="yes" xml:space="preserve">
          <source>bdat ( DATA )</source>
          <target state="translated">bdat(DATA )</target>
        </trans-unit>
        <trans-unit id="a43134b84c77c603d44bc9cb7a34ee28d61dda9b" translate="yes" xml:space="preserve">
          <source>bdatlast ( DATA )</source>
          <target state="translated">bdatlast(DATA )</target>
        </trans-unit>
        <trans-unit id="9dbb8d63710387f33e47eeed58434edbf43436e9" translate="yes" xml:space="preserve">
          <source>bdec()</source>
          <target state="translated">bdec()</target>
        </trans-unit>
        <trans-unit id="ebdf243fd741fd942cda9ff4274731be01ae03c1" translate="yes" xml:space="preserve">
          <source>bdfac()</source>
          <target state="translated">bdfac()</target>
        </trans-unit>
        <trans-unit id="baa52f89b3e557bf1b35ea846ac5228309ee68c4" translate="yes" xml:space="preserve">
          <source>bdigitsum()</source>
          <target state="translated">bdigitsum()</target>
        </trans-unit>
        <trans-unit id="8267458ce43cf249a67491d1d8861cd3d92a0e9d" translate="yes" xml:space="preserve">
          <source>bdiv()</source>
          <target state="translated">bdiv()</target>
        </trans-unit>
        <trans-unit id="0e538c18c393c21f3d8f35fb560355f4920bacf0" translate="yes" xml:space="preserve">
          <source>bdstr()</source>
          <target state="translated">bdstr()</target>
        </trans-unit>
        <trans-unit id="986b1bc1eb8de89643c50722910f99001c232865" translate="yes" xml:space="preserve">
          <source>be</source>
          <target state="translated">be</target>
        </trans-unit>
        <trans-unit id="36048f5f57efa9c9c207392cd7127b119b057243" translate="yes" xml:space="preserve">
          <source>be a bareword. The importation can be made conditional by using the &lt;a href=&quot;../if&quot;&gt;if&lt;/a&gt; module.</source>
          <target state="translated">裸語に。インポートは、&lt;a href=&quot;../if&quot;&gt;if&lt;/a&gt;モジュールを使用して条件付きにすることができます。</target>
        </trans-unit>
        <trans-unit id="e70616934e98e6243ad338b17e6d1d1a80ef47cd" translate="yes" xml:space="preserve">
          <source>be a bareword. The importation can be made conditional by using the &lt;a href=&quot;if&quot;&gt;if&lt;/a&gt; module.</source>
          <target state="translated">裸語に。インポートは、&lt;a href=&quot;if&quot;&gt;if&lt;/a&gt;モジュールを使用して条件付きにすることができます。</target>
        </trans-unit>
        <trans-unit id="6174cfdb1b6f1f01bc8c27356965cea1660ff655" translate="yes" xml:space="preserve">
          <source>be a string of octal digits: &lt;code&gt;0644&lt;/code&gt; is okay, but &lt;code&gt;&quot;0644&quot;&lt;/code&gt; is not. Returns the number of files successfully changed. See also &lt;a href=&quot;#oct&quot;&gt;oct&lt;/a&gt; if all you have is a string.</source>
          <target state="translated">8進数の文字列である： &lt;code&gt;0644&lt;/code&gt; は問題ありませんが、 &lt;code&gt;&quot;0644&quot;&lt;/code&gt; は問題です。正常に変更されたファイルの数を返します。文字列だけの場合は、&lt;a href=&quot;#oct&quot;&gt;oct&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="cd4eacb457b1014a65c358074fe11c5634af92b0" translate="yes" xml:space="preserve">
          <source>be a string of octal digits: &lt;code&gt;0644&lt;/code&gt; is okay, but &lt;code&gt;&quot;0644&quot;&lt;/code&gt; is not. Returns the number of files successfully changed. See also &lt;a href=&quot;#oct-EXPR&quot;&gt;&lt;code&gt;oct&lt;/code&gt;&lt;/a&gt; if all you have is a string.</source>
          <target state="translated">8進数の文字列である： &lt;code&gt;0644&lt;/code&gt; は問題ありませんが、 &lt;code&gt;&quot;0644&quot;&lt;/code&gt; は問題ありません。正常に変更されたファイルの数を返します。文字列しかない場合は、&lt;a href=&quot;#oct-EXPR&quot;&gt; &lt;code&gt;oct&lt;/code&gt; &lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="956f149445457ad325f5a84a0c7c25a363bcc21c" translate="yes" xml:space="preserve">
          <source>be a string of octal digits: &lt;code&gt;0644&lt;/code&gt; is okay, but &lt;code&gt;&quot;0644&quot;&lt;/code&gt; is not. Returns the number of files successfully changed. See also &lt;a href=&quot;oct&quot;&gt;oct&lt;/a&gt; if all you have is a string.</source>
          <target state="translated">8進数の文字列である： &lt;code&gt;0644&lt;/code&gt; は問題ありませんが、 &lt;code&gt;&quot;0644&quot;&lt;/code&gt; は問題です。正常に変更されたファイルの数を返します。文字列だけの場合は、&lt;a href=&quot;oct&quot;&gt;oct&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="2f14746af9c291f92399b053f1e619f9de693adc" translate="yes" xml:space="preserve">
          <source>be a valid Perl package name and it</source>
          <target state="translated">は有効な Perl パッケージ名であり</target>
        </trans-unit>
        <trans-unit id="8bab9adc00fd7e4a64089f6b0ae5c963c3f36a5a" translate="yes" xml:space="preserve">
          <source>be able to tolerate layers compiled against an old version of the headers.</source>
          <target state="translated">古いバージョンのヘッダに対してコンパイルされたレイヤーを許容できるようにします。</target>
        </trans-unit>
        <trans-unit id="14982941f96f6d84c8cd50b24f899b4c1845a614" translate="yes" xml:space="preserve">
          <source>be able to write:</source>
          <target state="translated">書ける</target>
        </trans-unit>
        <trans-unit id="34c1cc772dd68663334c7cc5a51270a9c162743c" translate="yes" xml:space="preserve">
          <source>be addressed by adding a</source>
          <target state="translated">を追加することで対処できます。</target>
        </trans-unit>
        <trans-unit id="8800830eb2a63e7e498e064d670f9a27a029e1f7" translate="yes" xml:space="preserve">
          <source>be applied, even though strings like &lt;code&gt;&quot;01&quot;&lt;/code&gt; would normally look like a number to Perl.</source>
          <target state="translated">&lt;code&gt;&quot;01&quot;&lt;/code&gt; ような文字列は通常Perlにとって数字のように見えますが、適用されます。</target>
        </trans-unit>
        <trans-unit id="28396307a68e2c8ee56bd6b269f6e59ccaf41b7a" translate="yes" xml:space="preserve">
          <source>be assigned back to &lt;code&gt;$(&lt;/code&gt; without being forced numeric, such as by adding zero. Note that this is different to the effective gid (&lt;code&gt;$)&lt;/code&gt; ) which does take a list.</source>
          <target state="translated">&lt;code&gt;$(&lt;/code&gt; ゼロを追加するなどして数値を強制されることなく）に割り当てられます。これは、リストを取得する有効なgid（ &lt;code&gt;$)&lt;/code&gt; とは異なることに注意してください。</target>
        </trans-unit>
        <trans-unit id="0d9df9cfcca5cdea95acaf69cb6098179f7a4b09" translate="yes" xml:space="preserve">
          <source>be assigned back to &lt;code&gt;$(&lt;/code&gt; without being forced numeric, such as by adding zero. Note that this is different to the effective gid (&lt;code&gt;$)&lt;/code&gt;) which does take a list.</source>
          <target state="translated">ゼロを追加するなどして、強制的に数値を指定せずに &lt;code&gt;$(&lt;/code&gt; に割り当てます。これは、リストを取得する有効なgid（ &lt;code&gt;$)&lt;/code&gt; とは異なることに注意してください）。</target>
        </trans-unit>
        <trans-unit id="93202847d0c4f58d96ed2de441c5bae895f03f9f" translate="yes" xml:space="preserve">
          <source>be be treated as nested tags within the tagged text (even if they would match the start tag pattern).</source>
          <target state="translated">は、タグ付けされたテキスト内で入れ子になったタグとして扱われます(開始タグパターンと一致していても)。</target>
        </trans-unit>
        <trans-unit id="3e275fd29837765cf3bc71fd6ce6d4f40b0be22d" translate="yes" xml:space="preserve">
          <source>be called exactly once, typically in a BOOT: section. If you are maintaining multiple interpreters, it should be called once in each interpreter instance, except for interpreters cloned from existing ones. (But see &lt;a href=&quot;#MY_CXT_CLONE&quot;&gt;&quot;MY_CXT_CLONE&quot;&lt;/a&gt; below.)</source>
          <target state="translated">通常はBOOT：セクションで1回だけ呼び出されます。複数のインタプリタを維持している場合は、既存のインタプリタから複製されたインタプリタを除いて、各インタプリタインスタンスで1回呼び出す必要があります。（ただし、以下の&lt;a href=&quot;#MY_CXT_CLONE&quot;&gt;「MY_CXT_CLONE」を&lt;/a&gt;参照してください。）</target>
        </trans-unit>
        <trans-unit id="e1cd6e63a2e61c9b680434df73ca1618e7d52128" translate="yes" xml:space="preserve">
          <source>be called exactly once, typically in a BOOT: section. If you are maintaining multiple interpreters, it should be called once in each interpreter instance, except for interpreters cloned from existing ones. (But see &lt;a href=&quot;#MY_CXT_CLONE&quot;&gt;MY_CXT_CLONE&lt;/a&gt; below.)</source>
          <target state="translated">通常はBOOT：セクションで1回だけ呼び出されます。複数のインタープリターを保守している場合は、既存のインタープリターから複製されたインタープリターを除き、各インタープリターインスタンスで1回呼び出す必要があります。（ただし、下記の&lt;a href=&quot;#MY_CXT_CLONE&quot;&gt;MY_CXT_CLONEを&lt;/a&gt;参照してください。）</target>
        </trans-unit>
        <trans-unit id="9d2edd7898262b515a39df03229b24d227d1c626" translate="yes" xml:space="preserve">
          <source>be called explicitly.</source>
          <target state="translated">を明示的に呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="438a35efe202395aa4bfcea78aeb25f89d7ddb6d" translate="yes" xml:space="preserve">
          <source>be closed by calling &lt;code&gt;PerlIO_close()&lt;/code&gt; on the returned PerlIO *.</source>
          <target state="translated">返されたPerlIO *で &lt;code&gt;PerlIO_close()&lt;/code&gt; を呼び出して閉じる。</target>
        </trans-unit>
        <trans-unit id="9934090830c2424ca6cc4ecf9b012220e6cb8ade" translate="yes" xml:space="preserve">
          <source>be closed until both the tied variable is untied and all copies of the saved object are destroyed.</source>
          <target state="translated">は、変数の紐付けが解除され、保存されたオブジェクトのすべてのコピーが破棄されるまで閉じられます。</target>
        </trans-unit>
        <trans-unit id="c3e7ca4e78e0952264ac139095f7bf1f632db6fe" translate="yes" xml:space="preserve">
          <source>be consistent with each other (implementation may only use one or the other or may require both).</source>
          <target state="translated">はお互いに一貫していなければなりません(実装ではどちらか一方のみを使用してもよいし、両方を必要とする場合もあります)。</target>
        </trans-unit>
        <trans-unit id="bdfc850e994531d0f620111ecf403220532f49bb" translate="yes" xml:space="preserve">
          <source>be declared</source>
          <target state="translated">謳われる</target>
        </trans-unit>
        <trans-unit id="4bc6d0c7f9935408fb2bc64464a3d82819a4723d" translate="yes" xml:space="preserve">
          <source>be expanded as specified by the &lt;b&gt;-expand_seq&lt;/b&gt; option; Any such recursive expansion needs to be handled by the specified callback routine.]</source>
          <target state="translated">&lt;b&gt;-expand_seq&lt;/b&gt;オプションで指定された&lt;b&gt;とおりに&lt;/b&gt;展開されます。このような再帰的な展開は、指定されたコールバックルーチンで処理する必要があります。]</target>
        </trans-unit>
        <trans-unit id="fb00294fdc4c477751afeb60eec17519d313dd85" translate="yes" xml:space="preserve">
          <source>be faster in certain circumstances for large files, and may result in less physical memory use when multiple processes are reading the same file.</source>
          <target state="translated">は、大容量ファイルの場合には、特定の状況下では高速になり、複数のプロセスが同じファイルを読み込んでいる場合には、物理メモリの使用量が少なくなることがあります。</target>
        </trans-unit>
        <trans-unit id="89547cfa26f8957d4689489ae8e6da3bfe190445" translate="yes" xml:space="preserve">
          <source>be globrefs).</source>
          <target state="translated">は globrefs)になります。</target>
        </trans-unit>
        <trans-unit id="aed67ceeb07b3aad12dfc70fda375fa903262c1b" translate="yes" xml:space="preserve">
          <source>be globrefs. Objects of &lt;code&gt;NamedFile&lt;/code&gt; should behave like a file opened for reading and also support the &lt;code&gt;name()&lt;/code&gt; method. This class juncture works with exception of the &lt;code&gt;Name_hash&lt;/code&gt; implementation, where object initialization fails because of the incompatibility of object bodies.</source>
          <target state="translated">グロブリファレンスである。 &lt;code&gt;NamedFile&lt;/code&gt; のオブジェクトは、読み取り用に開かれたファイルのように動作し、 &lt;code&gt;name()&lt;/code&gt; メソッドもサポートする必要があります。このクラスジャンクションは、 &lt;code&gt;Name_hash&lt;/code&gt; 実装を除いて機能します。ここでは、オブジェクト本体の非互換性のためにオブジェクトの初期化が失敗します。</target>
        </trans-unit>
        <trans-unit id="96a908fc7385d1425e0ba694653b67ebf458eb65" translate="yes" xml:space="preserve">
          <source>be in effect.)</source>
          <target state="translated">が有効になる)</target>
        </trans-unit>
        <trans-unit id="93fdaed10217b38690a5394ba6f117f7442dc2d0" translate="yes" xml:space="preserve">
          <source>be interpreted as simply &quot;codepoint</source>
          <target state="translated">は単に &quot;codepoint&quot; と解釈されます。</target>
        </trans-unit>
        <trans-unit id="3b8bb41a2a75cf63cb4e4b8dd89b36e596750288" translate="yes" xml:space="preserve">
          <source>be introduced with &lt;code&gt;--&lt;/code&gt; and bundles with &lt;code&gt;-&lt;/code&gt; .</source>
          <target state="translated">で導入すること &lt;code&gt;--&lt;/code&gt; としてバンドル &lt;code&gt;-&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cb60746a5d3bb1528e0214db460749edff43d872" translate="yes" xml:space="preserve">
          <source>be introduced with &lt;code&gt;--&lt;/code&gt; and bundles with &lt;code&gt;-&lt;/code&gt;.</source>
          <target state="translated">で導入すること &lt;code&gt;--&lt;/code&gt; としてバンドル &lt;code&gt;-&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="42a1854f29dd88d78bf67b5c84417d21fb1c6102" translate="yes" xml:space="preserve">
          <source>be invoked.</source>
          <target state="translated">が呼び出されます。</target>
        </trans-unit>
        <trans-unit id="7ffefc4005f2d8b9f6232ebeb883bef6adb2c998" translate="yes" xml:space="preserve">
          <source>be likely that code (possibly in Perl, as with Lingua::EN::Inflect, for English nouns) has already been written for the language in question, whether simple or complex.</source>
          <target state="translated">は、単純なものでも複雑なものでも、問題の言語のためにすでにコードが書かれている可能性があります (Lingua::EN::Inflect のように、英語の名詞のために Perl で書かれている可能性があります)。</target>
        </trans-unit>
        <trans-unit id="9b400f46c67266a74a7941beb8d8f3aa492d507c" translate="yes" xml:space="preserve">
          <source>be made read-only (by the caller), or at least should be treated as such.</source>
          <target state="translated">は(呼び出し元によって)読み取り専用にされるか、少なくともそのように扱われるべきです。</target>
        </trans-unit>
        <trans-unit id="2dfe41932637990aabde1fd9ab5b36a0129cdcb1" translate="yes" xml:space="preserve">
          <source>be of the format integer-dot-digit-digit, i.e. &lt;code&gt;25.57&lt;/code&gt;, optionally followed by underscore-digit-digit, i.e. &lt;code&gt;25.57_04&lt;/code&gt;.</source>
          <target state="translated">整数-ドット-数字-数字、つまり &lt;code&gt;25.57&lt;/code&gt; の形式で、オプションでアンダースコア-数字-数字、つまり &lt;code&gt;25.57_04&lt;/code&gt; が続きます。</target>
        </trans-unit>
        <trans-unit id="22754b5f05d41004d65864397d8f7961e944c9f1" translate="yes" xml:space="preserve">
          <source>be only ASCII characters, and</source>
          <target state="translated">はアスキー文字のみであり</target>
        </trans-unit>
        <trans-unit id="8aca838b806998e1c3a7660775bb22707c53a139" translate="yes" xml:space="preserve">
          <source>be open any more when the program is reincarnated, with possible resulting confusion by Perl.</source>
          <target state="translated">プログラムが生まれ変わったときには、Perl が混乱する可能性があります。</target>
        </trans-unit>
        <trans-unit id="4942a835a218847da1bc9474d15e7f7fecee9472" translate="yes" xml:space="preserve">
          <source>be parsed as two paragraphs in italics (with the I code starting in one paragraph and starting in another.) Instead, the first paragraph should generate a warning, but that aside, the above code must parse as if it were:</source>
          <target state="translated">はイタリック体の2つの段落として解析されます (Iコードは1つの段落から始まり、別の段落から始まります)。 その代わり、最初の段落は警告を生成しなければなりませんが、それはさておき、上記のコードはあたかもそうであるかのように解析しなければなりません。</target>
        </trans-unit>
        <trans-unit id="cac76875da8caea6da506441e4a3013ef795de69" translate="yes" xml:space="preserve">
          <source>be preceded with a blank line; &lt;code&gt;__END__&lt;/code&gt; is</source>
          <target state="translated">空白行が前に付きます。 &lt;code&gt;__END__&lt;/code&gt; は</target>
        </trans-unit>
        <trans-unit id="56f17a9fa2003de9ef3c254fb72eb38377857e77" translate="yes" xml:space="preserve">
          <source>be present during testing.</source>
          <target state="translated">テスト中に存在している必要があります。</target>
        </trans-unit>
        <trans-unit id="5889addd1ea93bd05efcb1682728a15053a4b875" translate="yes" xml:space="preserve">
          <source>be provided by the end-user of &lt;code&gt;autodie&lt;/code&gt;, they are ideally written into the module itself, or into a helper module or sub-class of &lt;code&gt;autodie&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;autodie&lt;/code&gt; のエンドユーザーによって提供される場合、理想的には、モジュール自体、または &lt;code&gt;autodie&lt;/code&gt; 自体のヘルパーモジュールまたはサブクラスに書き込まれます。</target>
        </trans-unit>
        <trans-unit id="ac6789e5ce6bb8c48ccfee0a53b55ecb18497192" translate="yes" xml:space="preserve">
          <source>be provided.</source>
          <target state="translated">が提供されます。</target>
        </trans-unit>
        <trans-unit id="8e7ed5c5b2648d3fb47f0ce1afb127706a1279f2" translate="yes" xml:space="preserve">
          <source>be restored.</source>
          <target state="translated">復元されます。</target>
        </trans-unit>
        <trans-unit id="c9bf9ad1188aa77634cd3b8aff0b84c5c12ad44c" translate="yes" xml:space="preserve">
          <source>be stopped by debugger, although &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt;s and INIT blocks will, and compile-time statements can be traced with the &lt;code&gt;AutoTrace&lt;/code&gt; option set in &lt;code&gt;PERLDB_OPTS&lt;/code&gt; ). From your own Perl code, however, you can transfer control back to the debugger using the following statement, which is harmless if the debugger is not running:</source>
          <target state="translated">デバッガーによって停止されますが &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; sとINITブロックは必要ですが、 &lt;code&gt;PERLDB_OPTS&lt;/code&gt; で &lt;code&gt;AutoTrace&lt;/code&gt; オプションを設定すると、コンパイル時のステートメントをトレースできます。ただし、独自のPerlコードから、次のステートメントを使用して制御をデバッガーに戻すことができます。これは、デバッガーが実行されていない場合は無害です。</target>
        </trans-unit>
        <trans-unit id="b332da483597b431d4ebaf91c49d1c6eadbd8328" translate="yes" xml:space="preserve">
          <source>be stopped by debugger, although &lt;code&gt;require&lt;/code&gt;s and INIT blocks will, and compile-time statements can be traced with the &lt;code&gt;AutoTrace&lt;/code&gt; option set in &lt;code&gt;PERLDB_OPTS&lt;/code&gt;). From your own Perl code, however, you can transfer control back to the debugger using the following statement, which is harmless if the debugger is not running:</source>
          <target state="translated">デバッガーによって停止されますが、 &lt;code&gt;require&lt;/code&gt; sおよびINITブロックは停止され、コンパイル時ステートメントは、 &lt;code&gt;PERLDB_OPTS&lt;/code&gt; で設定された &lt;code&gt;AutoTrace&lt;/code&gt; オプションを使用してトレースできます）。ただし、独自のPerlコードから、次のステートメントを使用して制御をデバッガーに戻すことができます。これは、デバッガーが実行されていない場合は無害です。</target>
        </trans-unit>
        <trans-unit id="400bf125e188b6776f7244947b865d3a2497a3b3" translate="yes" xml:space="preserve">
          <source>be stored as a single data paragraph (consisting of &quot;&amp;lt;img src='wirth_spokesmodeling_book.png'&amp;gt;\n\n&amp;lt;hr&amp;gt;\n&quot;).</source>
          <target state="translated">単一のデータパラグラフとして保存されます（ &quot;&amp;lt;img src = 'wirth_spokesmodeling_book.png'&amp;gt; \ n \ n &amp;lt;hr&amp;gt; \ n&quot;で構成されます）。</target>
        </trans-unit>
        <trans-unit id="16137519316b812afb2da09aa91b112ba92bff67" translate="yes" xml:space="preserve">
          <source>be stored as two data paragraphs (one consisting of &quot;&amp;lt;img src='wirth_spokesmodeling_book.png'&amp;gt;\n&quot; and another consisting of &quot;&amp;lt;hr&amp;gt;\n&quot;), but</source>
          <target state="translated">2つのデータ段落として保存されます（1つは &quot;&amp;lt;img src = 'wirth_spokesmodeling_book.png'&amp;gt; \ n&quot;で構成され、もう1つは &quot;&amp;lt;hr&amp;gt; \ n&quot;で構成されます）。ただし、</target>
        </trans-unit>
        <trans-unit id="619ff8abea4d5f3ccd22e0c825463c6f2e928d79" translate="yes" xml:space="preserve">
          <source>be sure to invoke &lt;code&gt;$self-&amp;gt;SUPER::initialize()&lt;/code&gt; .</source>
          <target state="translated">必ず &lt;code&gt;$self-&amp;gt;SUPER::initialize()&lt;/code&gt; を呼び出してください。</target>
        </trans-unit>
        <trans-unit id="b3127d5be257498591fa1b1e632079190d24627c" translate="yes" xml:space="preserve">
          <source>be sure to invoke the &lt;b&gt;initialize()&lt;/b&gt; method of the newly blessed object.</source>
          <target state="translated">新しく祝福されたオブジェクトの&lt;b&gt;initialize（）&lt;/b&gt;メソッドを必ず呼び出してください。</target>
        </trans-unit>
        <trans-unit id="6bd6f3dc5720d53f6325adeb9c38189554e2d06f" translate="yes" xml:space="preserve">
          <source>be the desired effect within a diamond hierarchy, but in others (e.g. for destructors) it may be more appropriate to call each method only once during a sequence of redispatches.</source>
          <target state="translated">はダイヤモンド階層内では望ましい効果を発揮しますが、他の階層(例えばデストラクタ)では、一連のリディスパッチの間に各メソッドを一度だけ呼び出す方がより適切かもしれません。</target>
        </trans-unit>
        <trans-unit id="f32b0724100efc9f3b38df25932dbc397348687a" translate="yes" xml:space="preserve">
          <source>be thrown if</source>
          <target state="translated">の場合に投げられる</target>
        </trans-unit>
        <trans-unit id="d996815a3551001f2437592e2dfe9cf2917da354" translate="yes" xml:space="preserve">
          <source>be treated as an error:</source>
          <target state="translated">はエラーとして扱われます。</target>
        </trans-unit>
        <trans-unit id="5cfeeb86f388b90e9358708fb9a2cf2d92ff6a4c" translate="yes" xml:space="preserve">
          <source>be treated as an option, but passed to the program unharmed, in &lt;code&gt;@ARGV&lt;/code&gt; .</source>
          <target state="translated">オプションとして扱われますが、 &lt;code&gt;@ARGV&lt;/code&gt; で無害にプログラムに渡されます。</target>
        </trans-unit>
        <trans-unit id="3b05bc4410ad4d361cd1bc4b1aa6a2048076769c" translate="yes" xml:space="preserve">
          <source>be treated as an option, but passed to the program unharmed, in &lt;code&gt;@ARGV&lt;/code&gt;.</source>
          <target state="translated">オプションとして扱われますが、 &lt;code&gt;@ARGV&lt;/code&gt; で無傷でプログラムに渡されます。</target>
        </trans-unit>
        <trans-unit id="213ce7c8d8fef7b5daff184033ed3b8b66ff7b3a" translate="yes" xml:space="preserve">
          <source>be undone (but not &lt;code&gt;&lt;a href=&quot;functions/pop&quot;&gt;pop&lt;/a&gt; @_&lt;/code&gt; or other splicing,</source>
          <target state="translated">元に戻す（ただし、 &lt;code&gt;&lt;a href=&quot;functions/pop&quot;&gt;pop&lt;/a&gt; @_&lt;/code&gt; や他のスプライシングを&lt;a href=&quot;functions/pop&quot;&gt;ポップし&lt;/a&gt;ない、</target>
        </trans-unit>
        <trans-unit id="8002f964e7f54fd6c9a88e0e37e9510ff919095b" translate="yes" xml:space="preserve">
          <source>be undone (but not &lt;code&gt;&lt;a href=&quot;pop&quot;&gt;pop&lt;/a&gt; @_&lt;/code&gt; or other splicing,</source>
          <target state="translated">元に戻す（ただし、 &lt;code&gt;&lt;a href=&quot;pop&quot;&gt;pop&lt;/a&gt; @_&lt;/code&gt; や他のスプライシングを&lt;a href=&quot;pop&quot;&gt;ポップし&lt;/a&gt;ない、</target>
        </trans-unit>
        <trans-unit id="ab7c83905ae1d6a2e4d715e600c65628380b7d4b" translate="yes" xml:space="preserve">
          <source>be undone (but not &lt;code&gt;pop @_&lt;/code&gt; or other splicing,</source>
          <target state="translated">元に戻す（ただし、 &lt;code&gt;pop @_&lt;/code&gt; やその他のスプライシングをポップしないでください）</target>
        </trans-unit>
        <trans-unit id="17bd5dc5ae122c31aab12373873620d67a1c4b2d" translate="yes" xml:space="preserve">
          <source>be used for method calls. You can't use it for regular subroutine calls or class methods:</source>
          <target state="translated">はメソッド呼び出しに使用できます。通常のサブルーチン呼び出しやクラスメソッドには使えません。</target>
        </trans-unit>
        <trans-unit id="4e471a2c455269486f9776c668e9c672d74418df" translate="yes" xml:space="preserve">
          <source>be used in interpolating strings (double quotes or the &lt;code&gt;&lt;a href=&quot;functions/qq&quot;&gt;qq&lt;/a&gt;&lt;/code&gt; operator), but only if the additional &lt;code&gt;postderef_qq&lt;/code&gt; feature is enabled.</source>
          <target state="translated">文字列の補間（二重引用符または &lt;code&gt;&lt;a href=&quot;functions/qq&quot;&gt;qq&lt;/a&gt;&lt;/code&gt; 演算子）で使用できますが、追加の &lt;code&gt;postderef_qq&lt;/code&gt; 機能が有効になっている場合のみです。</target>
        </trans-unit>
        <trans-unit id="37c19bda8dda58aa4daba4c9519e4dc020b7a3f4" translate="yes" xml:space="preserve">
          <source>be used in interpolating strings (double quotes or the &lt;code&gt;&lt;a href=&quot;functions/qq&quot;&gt;qq&lt;/a&gt;&lt;/code&gt; operator), but only if the additional &lt;code&gt;postderef_qq&lt;/code&gt;&lt;a href=&quot;feature&quot;&gt;feature&lt;/a&gt; is enabled.</source>
          <target state="translated">文字列の補間（二重引用符または &lt;code&gt;&lt;a href=&quot;functions/qq&quot;&gt;qq&lt;/a&gt;&lt;/code&gt; 演算子）で使用できますが、追加の &lt;code&gt;postderef_qq&lt;/code&gt; &lt;a href=&quot;feature&quot;&gt;機能&lt;/a&gt;が有効になっている場合のみです。</target>
        </trans-unit>
        <trans-unit id="7d51185a9b3b31ade2b15536b4991747238d8a88" translate="yes" xml:space="preserve">
          <source>be used in interpolating strings (double quotes or the &lt;code&gt;qq&lt;/code&gt; operator), but only if the &lt;code&gt;postderef_qq&lt;/code&gt; feature is enabled.</source>
          <target state="translated">文字列の補間（二重引用符または &lt;code&gt;qq&lt;/code&gt; 演算子）で使用されますが、 &lt;code&gt;postderef_qq&lt;/code&gt; 機能が有効になっている場合に限ります。</target>
        </trans-unit>
        <trans-unit id="036092155ce8a9ff5d3badd8d0f0778afad82e9e" translate="yes" xml:space="preserve">
          <source>be used in interpolating strings (double quotes or the &lt;code&gt;qq&lt;/code&gt; operator), but only if the &lt;code&gt;postderef_qq&lt;/code&gt;&lt;a href=&quot;feature&quot;&gt;feature&lt;/a&gt; is enabled.</source>
          <target state="translated">文字列の補間（二重引用符または &lt;code&gt;qq&lt;/code&gt; 演算子）で使用されますが、 &lt;code&gt;postderef_qq&lt;/code&gt; &lt;a href=&quot;feature&quot;&gt;機能&lt;/a&gt;が有効になっている場合に限ります。</target>
        </trans-unit>
        <trans-unit id="9eccf910fdd37c2a3bcdbac9f3427f38c70da9c0" translate="yes" xml:space="preserve">
          <source>bearing</source>
          <target state="translated">bearing</target>
        </trans-unit>
        <trans-unit id="1407501dd659df6fb3cfafb420938ddd4792bbdd" translate="yes" xml:space="preserve">
          <source>because it can match zero copies of &lt;code&gt;'X'&lt;/code&gt; at the beginning of the string. If you definitely want to match at least one &lt;code&gt;'X'&lt;/code&gt; , use &lt;code&gt;X+&lt;/code&gt; , not &lt;code&gt;X*&lt;/code&gt; .</source>
          <target state="translated">これは、文字列の先頭にある &lt;code&gt;'X'&lt;/code&gt; ゼロコピーに一致する可能性があるためです。少なくとも1つの &lt;code&gt;'X'&lt;/code&gt; に確実に一致させたい場合は、 &lt;code&gt;X*&lt;/code&gt; ではなくX &lt;code&gt;X+&lt;/code&gt; 使用してください。</target>
        </trans-unit>
        <trans-unit id="a8504f4a94208d96382c46286dd2940ff2c6906b" translate="yes" xml:space="preserve">
          <source>because it can match zero copies of &lt;code&gt;'X'&lt;/code&gt; at the beginning of the string. If you definitely want to match at least one &lt;code&gt;'X'&lt;/code&gt;, use &lt;code&gt;X+&lt;/code&gt;, not &lt;code&gt;X*&lt;/code&gt;.</source>
          <target state="translated">文字列の先頭にある &lt;code&gt;'X'&lt;/code&gt; ゼロコピーと一致する可能性があるためです。少なくとも1つの &lt;code&gt;'X'&lt;/code&gt; を確実に一致させたい場合は、 &lt;code&gt;X*&lt;/code&gt; ではなくX &lt;code&gt;X+&lt;/code&gt; 使用してください。</target>
        </trans-unit>
        <trans-unit id="ed626eff2ded4ff54496b1cd4f2b0a1c7d5ccbb9" translate="yes" xml:space="preserve">
          <source>because it is much faster - it reduces internal variables into the modulus whenever possible, so it operates on smaller numbers.</source>
          <target state="translated">なぜなら、それははるかに高速だからです-可能な限り内部変数をモジュラスに削減するので、より小さな数で動作します。</target>
        </trans-unit>
        <trans-unit id="c9ac39be8f080b55461591140c43654051426f56" translate="yes" xml:space="preserve">
          <source>because it was listed as a TODO test on the plan line. However, we are not aware of anyone actually using this feature and hard-coding test numbers is discouraged because it's very easy to add a test and break the test number sequence. This makes test suites very fragile. Instead, the following should be used:</source>
          <target state="translated">というのも、プランラインにTODOテストとしてリストアップされていたからです。しかし、実際にこの機能を使っている人はいませんし、テストを追加してテスト番号の列を壊すのは非常に簡単なので、テスト番号をハードコーディングするのはお勧めできません。これはテストスイートを非常に脆弱なものにしてしまいます。代わりに、以下のようなものを使うべきです。</target>
        </trans-unit>
        <trans-unit id="3716b55181b7d4ce5a8064066cc2010c3e1b6360" translate="yes" xml:space="preserve">
          <source>because of the strict regularization of Perl 5's grammar into unary and list operators. (The old open was a little of both.) You must put parentheses around the filehandle, or use the new &quot;or&quot; operator instead of &quot;||&quot;.</source>
          <target state="translated">というのも、Perl 5 の文法が単項演算子とリスト演算子に厳密に正規化されているからです。(古いオープンはその両方を少し使っていました。)ファイルハンドルの周りに括弧をつけるか、&quot;||&quot;の代わりに新しい &quot;or &quot;演算子を使わなければなりません。</target>
        </trans-unit>
        <trans-unit id="71ee90a49bf1ab4bd322eb175c4eef72341f4bf3" translate="yes" xml:space="preserve">
          <source>because otherwise &lt;b&gt;xsubpp&lt;/b&gt; will believe that you made a duplicate definition of the function. Also, put a blank line before the #else/#endif so it will not be seen as part of the function body.</source>
          <target state="translated">それ以外の場合、&lt;b&gt;xsubpp&lt;/b&gt;は、関数の定義が重複していると考えます。また、＃else /＃endifの前に空白行を入れて、関数本体の一部として表示されないようにします。</target>
        </trans-unit>
        <trans-unit id="c57dfba8d90c3ee87942986e029f65c0a62033af" translate="yes" xml:space="preserve">
          <source>because the &quot;less than&quot; operator is interpreted as a closing delimiter.</source>
          <target state="translated">というのも、&quot;less than &quot;演算子は終了デリミタとして解釈されるからです。</target>
        </trans-unit>
        <trans-unit id="91d068e640ed02bcfffdad4e89ae0a9db41b7044" translate="yes" xml:space="preserve">
          <source>because the embedded pairs of &lt;code&gt;'(..)'&lt;/code&gt; s and &lt;code&gt;'[..]'&lt;/code&gt; s are &quot;cross-nested&quot; and the embedded &lt;code&gt;'&amp;gt;'&lt;/code&gt; is unbalanced. (In a scalar context, this call would return an empty string. In a void context, &lt;code&gt;$text&lt;/code&gt; would be unchanged.)</source>
          <target state="translated">&lt;code&gt;'(..)'&lt;/code&gt; と &lt;code&gt;'[..]'&lt;/code&gt; の埋め込まれたペアは「クロスネスト」されており、埋め込まれた &lt;code&gt;'&amp;gt;'&lt;/code&gt; はバランスがとれていないためです。（スカラーコンテキストでは、この呼び出しは空の文字列を返します。ボイドコンテキストでは、 &lt;code&gt;$text&lt;/code&gt; は変更されません。）</target>
        </trans-unit>
        <trans-unit id="2d05959105bc45a525dae5509143b16c5ce91fed" translate="yes" xml:space="preserve">
          <source>because the embedded pairs of &lt;code&gt;'(..)'&lt;/code&gt;s and &lt;code&gt;'[..]'&lt;/code&gt;s are &quot;cross-nested&quot; and the embedded &lt;code&gt;'&amp;gt;'&lt;/code&gt; is unbalanced. (In a scalar context, this call would return an empty string. In a void context, &lt;code&gt;$text&lt;/code&gt; would be unchanged.)</source>
          <target state="translated">&lt;code&gt;'(..)'&lt;/code&gt; と &lt;code&gt;'[..]'&lt;/code&gt; の埋め込まれたペアは「クロスネスト」されており、埋め込まれた &lt;code&gt;'&amp;gt;'&lt;/code&gt; は不均衡であるためです。（スカラーコンテキストでは、この呼び出しは空の文字列を返します。voidコンテキストでは、 &lt;code&gt;$text&lt;/code&gt; は変更されません。）</target>
        </trans-unit>
        <trans-unit id="331252ee302b6da2035026aca3ba4ae99c1a4ea1" translate="yes" xml:space="preserve">
          <source>because the latter will alternate between returning a filename and returning false.</source>
          <target state="translated">後者はファイル名を返す場合と false を返す場合を交互に繰り返すからです。</target>
        </trans-unit>
        <trans-unit id="f2ef9563189019bf8c9ac0f31b94f7d982047b5c" translate="yes" xml:space="preserve">
          <source>because the main point isn't whether the user typed &lt;b&gt;-v&lt;/b&gt; or not.</source>
          <target state="translated">重要なのは、ユーザーが&lt;b&gt;-vと&lt;/b&gt;入力したかどうかではないからです。</target>
        </trans-unit>
        <trans-unit id="95dd904c935d8d74a8bd1af96d4e502e980aaabd" translate="yes" xml:space="preserve">
          <source>because the notion of &quot;compile-time&quot; is relative. Instead, you want:</source>
          <target state="translated">なぜなら、&quot;コンパイル時 &quot;という概念は相対的なものだからです。代わりに、あなたが欲しいのは</target>
        </trans-unit>
        <trans-unit id="6a35b87feefdc6c196b1d4d33ac852a059f8f67f" translate="yes" xml:space="preserve">
          <source>because the second way hides the main point of the statement in a modifier. On the other hand</source>
          <target state="translated">なぜなら、第二の方法は文の要点を修飾語で隠しているからです。一方で</target>
        </trans-unit>
        <trans-unit id="b15c6a463c6e853f47c1bd82bf87355ef292954f" translate="yes" xml:space="preserve">
          <source>because they test functionality which</source>
          <target state="translated">なぜなら、彼らは機能をテストしているからです。</target>
        </trans-unit>
        <trans-unit id="a73476a17fae6e74c5ac465bb722d65dca737d30" translate="yes" xml:space="preserve">
          <source>because you don't have to start a process on every filename found (but it's not faster than using the &lt;b&gt;-delete&lt;/b&gt; switch available in newer versions of</source>
          <target state="translated">見つかったすべてのファイル名でプロセスを開始する必要がないためです（ただし、の新しいバージョンで使用可能な&lt;b&gt;-delete&lt;/b&gt;スイッチを使用するよりも高速ではありません</target>
        </trans-unit>
        <trans-unit id="c89a78424c4f276725f3f2424f018f5fc3348fbb" translate="yes" xml:space="preserve">
          <source>because you don't have to start a process on every filename found. It does suffer from the bug of mishandling newlines in pathnames, which you can fix if you follow the example under &lt;b&gt;-0&lt;/b&gt;.</source>
          <target state="translated">見つかったすべてのファイル名でプロセスを開始する必要がないためです。これは、パス名の改行を誤って処理するというバグの影響を受けます。- &lt;b&gt;0&lt;/b&gt;の例に従うと修正できます。</target>
        </trans-unit>
        <trans-unit id="a217c7a44aead49b3247ffc0322e6ace486aeba7" translate="yes" xml:space="preserve">
          <source>because you'll get just references listed, and perl will never automatically dereference things for you. Instead, you have to roll yourself a loop or two. This prints the whole structure, using the shell-style for() construct to loop across the outer set of subscripts.</source>
          <target state="translated">というのは、単に参照がリストされているだけで、perlが自動的に参照を解除してくれることはないからです。その代わりに、自分自身でループを回す必要があります。これは、シェルスタイルのfor()構造体を使用して構造体全体を表示し、添え字の外側のセットをループさせます。</target>
        </trans-unit>
        <trans-unit id="d53e9fb5cd89e4ca476b10b3690128590c751e12" translate="yes" xml:space="preserve">
          <source>become cumbersome when you need to inflect more than a few dozen words; and other solutions (like using algorithms to model the inflections, storing only root forms and irregularities)</source>
          <target state="translated">数十個以上の単語を転置する必要がある場合には面倒になります。</target>
        </trans-unit>
        <trans-unit id="4e58ac78738f8185ee5c7c2c3d83aca0198db529" translate="yes" xml:space="preserve">
          <source>becomes</source>
          <target state="translated">becomes</target>
        </trans-unit>
        <trans-unit id="e0d2345f9f72fcdda8f445997826d44505e55aef" translate="yes" xml:space="preserve">
          <source>been in use as an Internet language tag, and RFC 3066 stipulates that it never should be, since a shorter tag (&quot;ar&quot;) exists.</source>
          <target state="translated">はインターネット言語タグとして使用されてきましたが、RFC 3066では、短いタグ(&quot;ar&quot;)が存在するため、決してそうあるべきではないと規定されています。</target>
        </trans-unit>
        <trans-unit id="51de2b835bd35a67eb32dbcd3d77d4b96e5aa39d" translate="yes" xml:space="preserve">
          <source>before</source>
          <target state="translated">before</target>
        </trans-unit>
        <trans-unit id="915c701ba2639a5081cecf4fc5bdf5de5ad69a85" translate="yes" xml:space="preserve">
          <source>before calling</source>
          <target state="translated">呼び出す前に</target>
        </trans-unit>
        <trans-unit id="0cbf8d2dc3ebc2ee1d97d9f37a08ec8f737756c3" translate="yes" xml:space="preserve">
          <source>before running your wide record pipe program. A larger value may improve performance at the expense of the BYTLM UAF quota.</source>
          <target state="translated">ワイドレコードパイププログラムを実行する前に より大きな値を設定すると、BYTLM UAF クォータを犠牲にしてもパフォーマンスが向上する可能性があります。</target>
        </trans-unit>
        <trans-unit id="0e5cdbaa0673f848d1b7128b629138e86739c8b2" translate="yes" xml:space="preserve">
          <source>before the &lt;code&gt;perl.h&lt;/code&gt;&lt;code&gt;#include&lt;/code&gt;. You can replace your &lt;code&gt;langinfo.h&lt;/code&gt;&lt;code&gt;#include&lt;/code&gt; with this one. (Doing it this way keeps out the symbols that plain &lt;code&gt;langinfo.h&lt;/code&gt; would try to import into the namespace for code that doesn't need it.)</source>
          <target state="translated">&lt;code&gt;perl.h&lt;/code&gt; &lt;code&gt;#include&lt;/code&gt; の前。 &lt;code&gt;langinfo.h&lt;/code&gt; &lt;code&gt;#include&lt;/code&gt; をこれに置き換えることができます。（このようにすると、プレーンな &lt;code&gt;langinfo.h&lt;/code&gt; がそれを必要としないコードの名前空間にインポートしようとするシンボルが排除されます。）</target>
        </trans-unit>
        <trans-unit id="9dfe8489641883d87825274b161f0adcb018192e" translate="yes" xml:space="preserve">
          <source>before unpacking the archive.</source>
          <target state="translated">アーカイブを解凍する前に</target>
        </trans-unit>
        <trans-unit id="e00d3375a237dc6b36e090011f01e09a680f730b" translate="yes" xml:space="preserve">
          <source>begin with a colon, should not directly contain &quot;=head1&quot; ... &quot;=head4&quot; commands, nor &quot;=over&quot;, nor &quot;=back&quot;, nor &quot;=item&quot;. For example, this may be considered invalid:</source>
          <target state="translated">コロンで始まり、直接 &quot;=head1&quot; ...&quot;=head4&quot; コマンドを含むべきではありません。&quot;HEAD4 &quot;コマンド、&quot;=over&quot;、&quot;=back&quot;、&quot;=item &quot;を直接含むべきではありません。例えば、これは無効とみなされる可能性があります。</target>
        </trans-unit>
        <trans-unit id="35ee011e96122a1b4404f72436530569c798f3bc" translate="yes" xml:space="preserve">
          <source>begin with a colon, then &quot;text...&quot; will constitute a data paragraph. There is no way to use &quot;=for formatname text...&quot; to express &quot;text...&quot; as a verbatim paragraph.</source>
          <target state="translated">がコロンで始まる場合、&quot;text...&quot;はデータ段落を構成します。text...」を冗長段落として表現するために「=for formatname text...」を使用する方法はありません。</target>
        </trans-unit>
        <trans-unit id="a054a301f7e242f3320212ad3120381b20ffa4b5" translate="yes" xml:space="preserve">
          <source>begin with a colon, then non-command paragraphs are ordinary paragraphs or data paragraphs. This is discussed in detail in the section &lt;a href=&quot;#About-Data-Paragraphs-and-%22%3Dbegin%2F%3Dend%22-Regions&quot;&gt;&quot;About Data Paragraphs and &quot;=begin/=end&quot; Regions&quot;&lt;/a&gt;.</source>
          <target state="translated">コロンで始まり、コマンド以外の段落は通常の段落またはデータ段落です。これについては、&lt;a href=&quot;#About-Data-Paragraphs-and-%22%3Dbegin%2F%3Dend%22-Regions&quot;&gt;「データ段落と「= begin / = end」リージョンについて」&lt;/a&gt;のセクションで詳しく説明します。</target>
        </trans-unit>
        <trans-unit id="01012d8e1a5ae715258cadbaf70262cad1cf8ef2" translate="yes" xml:space="preserve">
          <source>begin with a colon, then non-command paragraphs are ordinary paragraphs or data paragraphs. This is discussed in detail in the section &lt;a href=&quot;#About-Data-Paragraphs-and-%22%3dbegin%2f%3dend%22-Regions&quot;&gt;About Data Paragraphs and =begin/=end Regions&lt;/a&gt;.</source>
          <target state="translated">コロンで始まり、非コマンド段落は通常の段落またはデータ段落です。これについては、「&lt;a href=&quot;#About-Data-Paragraphs-and-%22%3dbegin%2f%3dend%22-Regions&quot;&gt;データパラグラフと= begin / = end領域について」&lt;/a&gt;のセクションで詳しく説明しています。</target>
        </trans-unit>
        <trans-unit id="43e8c372c4b8551232015b4964270e14bc96c611" translate="yes" xml:space="preserve">
          <source>begin with a colon.</source>
          <target state="translated">はコロンで始まります。</target>
        </trans-unit>
        <trans-unit id="f96514769306205e5e54b126ee406aa18da22231" translate="yes" xml:space="preserve">
          <source>begin with a literal colon (&quot;:&quot;). In some sense, a data paragraph is not part of Pod at all (i.e., effectively it's &quot;out-of-band&quot;), since it's not subject to most kinds of Pod parsing; but it is specified here, since Pod parsers need to be able to call an event for it, or store it in some form in a parse tree, or at least just parse</source>
          <target state="translated">はリテラルコロン(&quot;:&quot;)で始まります。ある意味では、データパラグラフはPodの一部ではありません(つまり、事実上「帯域外」なのです)。</target>
        </trans-unit>
        <trans-unit id="1be9db5ec4d328a8c30fb304c0fe21d95b9feaf9" translate="yes" xml:space="preserve">
          <source>begin_av</source>
          <target state="translated">begin_av</target>
        </trans-unit>
        <trans-unit id="e2e281b54db81b16a35418fcd87978434eb58caf" translate="yes" xml:space="preserve">
          <source>begins with a colon,</source>
          <target state="translated">はコロンで始まります。</target>
        </trans-unit>
        <trans-unit id="31a7e9902319755c10b8cad42a0fff59ce9d4052" translate="yes" xml:space="preserve">
          <source>behave like the bunzip2 program. It will only uncompress the first bunzip2 data stream in the file, as shown below</source>
          <target state="translated">は bunzip2 プログラムのように振る舞う。以下のように、ファイル内の最初の bunzip2 データストリームのみを解凍します。</target>
        </trans-unit>
        <trans-unit id="97e34e04cce3092a3fbc1368e2721a7094461fac" translate="yes" xml:space="preserve">
          <source>behave like the gunzip program. It will only uncompress the first gzip data stream in the file, as shown below</source>
          <target state="translated">は gunzip プログラムと同じように動作します。以下に示すように、ファイル内の最初の gzip データストリームのみを解凍します。</target>
        </trans-unit>
        <trans-unit id="1c831dd4349f7440d63aa005aa956edcf6570200" translate="yes" xml:space="preserve">
          <source>behaves approximately like</source>
          <target state="translated">のように振る舞う</target>
        </trans-unit>
        <trans-unit id="49aa6a42431a52e8d5358eaf47e17fc9c0afb35d" translate="yes" xml:space="preserve">
          <source>behaves just like &lt;a href=&quot;#-e-commandline&quot;&gt;-e&lt;/a&gt;, except that it implicitly enables all optional features (in the main compilation unit). See &lt;a href=&quot;feature&quot;&gt;feature&lt;/a&gt;.</source>
          <target state="translated">（メインコンパイルユニットで）すべてのオプション機能を暗黙的に有効にすることを除いて、&lt;a href=&quot;#-e-commandline&quot;&gt;-e&lt;/a&gt;と同じように動作します。&lt;a href=&quot;feature&quot;&gt;機能を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="878cb14881bc8cc40ffa36c11bd520865655b641" translate="yes" xml:space="preserve">
          <source>behaves just like &lt;b&gt;-e&lt;/b&gt;, except that it implicitly enables all optional features (in the main compilation unit). See &lt;a href=&quot;feature&quot;&gt;feature&lt;/a&gt;.</source>
          <target state="translated">&lt;b&gt;-e&lt;/b&gt;と同じように動作しますが、（メインコンパイルユニットの）すべてのオプション機能を暗黙的に有効にします。&lt;a href=&quot;feature&quot;&gt;機能を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="29c4a5cf676b2e6b5aac47ac451d31e3961499c9" translate="yes" xml:space="preserve">
          <source>behavior for a thread after it has been created. With a</source>
          <target state="translated">の振る舞いを変更することができます。スレッドが作成された後に</target>
        </trans-unit>
        <trans-unit id="ab7103d633748a477ad2572ee63045defbe35f36" translate="yes" xml:space="preserve">
          <source>behavior, for some inputs.) In 5.7, the quicksort implementation was replaced with a stable mergesort algorithm whose worst-case behavior is O(NlogN). But benchmarks indicated that for some inputs, on some platforms, the original quicksort was faster. 5.8 has a sort pragma for limited control of the sort. Its rather blunt control of the underlying algorithm may not persist into future Perls, but the ability to characterize the input or output in implementation independent ways quite probably will. See &lt;a href=&quot;../sort&quot;&gt;the sort pragma&lt;/a&gt;.</source>
          <target state="translated">5.7では、クイックソートの実装が、最悪の場合の動作がO（NlogN）である安定したマージソートアルゴリズムに置き換えられました。しかし、ベンチマークは、一部の入力では、一部のプラットフォームでは、元のクイックソートの方が高速であることを示していました。5.8には、ソートの制御を制限するためのsortプラグマがあります。基礎となるアルゴリズムのかなり率直な制御は、将来のPerlには存続しない可能性がありますが、実装に依存しない方法で入力または出力を特徴付ける機能は、おそらくそうでしょう。&lt;a href=&quot;../sort&quot;&gt;sortプラグマを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="7662c3889bf0376550fc93aa4448d4df9574c86b" translate="yes" xml:space="preserve">
          <source>behavior, for some inputs.) In 5.7, the quicksort implementation was replaced with a stable mergesort algorithm whose worst-case behavior is O(NlogN). But benchmarks indicated that for some inputs, on some platforms, the original quicksort was faster. 5.8 has a sort pragma for limited control of the sort. Its rather blunt control of the underlying algorithm may not persist into future Perls, but the ability to characterize the input or output in implementation independent ways quite probably will. See &lt;a href=&quot;sort&quot;&gt;the sort pragma&lt;/a&gt;.</source>
          <target state="translated">5.7では、クイックソートの実装が、最悪の場合の動作がO（NlogN）である安定したマージソートアルゴリズムに置き換えられました。しかし、ベンチマークは、一部の入力では、一部のプラットフォームでは、元のクイックソートの方が高速であることを示していました。5.8には、ソートの制御を制限するためのsortプラグマがあります。基礎となるアルゴリズムのかなり率直な制御は、将来のPerlには存続しない可能性がありますが、実装に依存しない方法で入力または出力を特徴付ける機能は、おそらくそうでしょう。&lt;a href=&quot;sort&quot;&gt;sortプラグマを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="a4d45707cf30bc986faddb8a61f21a6e9cdaf80e" translate="yes" xml:space="preserve">
          <source>behaviour is different from the outer public API. The logic is that the &quot;unchecked&quot; case is useful when the encoding is part of a stream which may be reporting errors (e.g. STDERR). In such cases, it is desirable to get everything through somehow without causing additional errors which obscure the original one. Also, the encoding is best placed to know what the correct replacement character is, so if that is the desired behaviour then letting low level code do it is the most efficient.</source>
          <target state="translated">の振る舞いは外部のパブリックAPIとは異なります。論理的には、エンコーディングがエラーを報告している可能性のあるストリームの一部である場合 (例:STDERR)には、&quot;チェックなし&quot; のケースが有用であるということです。このような場合、元のエラーを不明瞭にするような追加のエラーを発生させずに、何らかの方法ですべてを通過させることが望まれます。また、エンコーディングは正しい置換文字が何であるかを知るのに最適な位置にありますので、それが望ましい動作であるならば、低レベルのコードにそれを行わせるのが最も効率的です。</target>
        </trans-unit>
        <trans-unit id="d665cbacbfa3c977993d51ac9f39d4889ffea309" translate="yes" xml:space="preserve">
          <source>behaviour. One can start</source>
          <target state="translated">振る舞い。一つは始めることができます。</target>
        </trans-unit>
        <trans-unit id="c4ad9e56b49ef76a7e8fcbc4f0e989ac69868fc0" translate="yes" xml:space="preserve">
          <source>behind its back; calling &lt;a href=&quot;#sync_locale&quot;&gt;sync_locale&lt;/a&gt; before calling this macro will update perl's records.)</source>
          <target state="translated">その後ろに; 呼び出し&lt;a href=&quot;#sync_locale&quot;&gt;sync_localeを&lt;/a&gt; perlのレコードを更新します。このマクロを呼び出す前に。）</target>
        </trans-unit>
        <trans-unit id="a55f3cbc5e20d676e8b6e31c3e6b1864eecba17a" translate="yes" xml:space="preserve">
          <source>being a subset of Unicode), while ASCII is.</source>
          <target state="translated">は Unicode のサブセット)であるのに対し、ASCII はそうです。</target>
        </trans-unit>
        <trans-unit id="53f8e0ff86be0a313b2007cbdd020a9b83a37fba" translate="yes" xml:space="preserve">
          <source>being data being sent to the server. Calls &lt;code&gt;debug_text&lt;/code&gt; before printing to STDERR.</source>
          <target state="translated">サーバーに送信されるデータです。STDERRに &lt;code&gt;debug_text&lt;/code&gt; 前にdebug_textを呼び出します。</target>
        </trans-unit>
        <trans-unit id="70842494fd493a8f8803b71e1e93717e5ff8d7e2" translate="yes" xml:space="preserve">
          <source>being executed within the distribution file's working directory.</source>
          <target state="translated">がディストリビューションファイルの作業ディレクトリ内で実行されていることを示しています。</target>
        </trans-unit>
        <trans-unit id="c6309e2149391dbe0d16560dc35ff7f7d071ea27" translate="yes" xml:space="preserve">
          <source>being more accurate than C</source>
          <target state="translated">丙よりも正確</target>
        </trans-unit>
        <trans-unit id="ae7d864b083311cd426e7717f8e3a7be973f886e" translate="yes" xml:space="preserve">
          <source>being unfilled. In a threading situation,</source>
          <target state="translated">満たされていないこと。スレッドがかかっている状況で</target>
        </trans-unit>
        <trans-unit id="d4300189fdbe1cb5fe64ef0a483b7086eb450712" translate="yes" xml:space="preserve">
          <source>belongs to (used in &lt;code&gt;\p{Blk=...}&lt;/code&gt; ). The &lt;a href=&quot;#prop_value_aliases()&quot;&gt;prop_value_aliases()&lt;/a&gt; function can be used to get all the synonyms of the block name.</source>
          <target state="translated">に属します（ &lt;code&gt;\p{Blk=...}&lt;/code&gt; 使用されます）。&lt;a href=&quot;#prop_value_aliases()&quot;&gt;prop_value_aliases（）&lt;/a&gt;関数は、ブロック名のすべての同義語を取得するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="13c61da538d4ab019c7b05230a8f76ece1cba556" translate="yes" xml:space="preserve">
          <source>belongs to (used in &lt;code&gt;\p{Blk=...}&lt;/code&gt;). The &lt;a href=&quot;#prop_value_aliases%28%29&quot;&gt;&quot;prop_value_aliases()&quot;&lt;/a&gt; function can be used to get all the synonyms of the block name.</source>
          <target state="translated">に属します（ &lt;code&gt;\p{Blk=...}&lt;/code&gt; 使用されます）。&lt;a href=&quot;#prop_value_aliases%28%29&quot;&gt;「prop_value_aliases（）」&lt;/a&gt;関数は、ブロック名のすべての同義語を取得するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="78bdb1660a37a979308c6b38c35ed13226f4b481" translate="yes" xml:space="preserve">
          <source>belongs to. The &lt;a href=&quot;#prop_value_aliases%28%29&quot;&gt;&quot;prop_value_aliases()&quot;&lt;/a&gt; function can be used to get all the synonyms of the script name. Note that this is the older &quot;Script&quot; property value, and not the improved &quot;Script_Extensions&quot; value.</source>
          <target state="translated">属する。&lt;a href=&quot;#prop_value_aliases%28%29&quot;&gt;「prop_value_aliases（）」&lt;/a&gt;関数は、スクリプト名のすべての同義語を取得するために使用することができます。これは古い「Script」プロパティ値であり、改善された「Script_Extensions」値ではないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="a2fdbc23a85b8e4584cd5c7c6fb3ac1138bda7bd" translate="yes" xml:space="preserve">
          <source>belongs to. The &lt;a href=&quot;#prop_value_aliases()&quot;&gt;prop_value_aliases()&lt;/a&gt; function can be used to get all the synonyms of the script name.</source>
          <target state="translated">属する。&lt;a href=&quot;#prop_value_aliases()&quot;&gt;prop_value_aliases（）&lt;/a&gt;関数は、スクリプト名のすべての同義語を取得するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="489c7fc8339f7c44efa172c21d3dbf41ad08c7e4" translate="yes" xml:space="preserve">
          <source>below</source>
          <target state="translated">below</target>
        </trans-unit>
        <trans-unit id="21b17c5ba622c38ebd7690a2824aa2f55d5b8a0f" translate="yes" xml:space="preserve">
          <source>below). The containing directory can be specified in &lt;code&gt;CPAN.pm&lt;/code&gt; in the &lt;code&gt;prefs_dir&lt;/code&gt; config variable. Try &lt;code&gt;o conf init
prefs_dir&lt;/code&gt; in the CPAN shell to set and activate the distroprefs system.</source>
          <target state="translated">未満）。含まれるディレクトリは、 &lt;code&gt;prefs_dir&lt;/code&gt; 構成変数の &lt;code&gt;CPAN.pm&lt;/code&gt; で指定できます。CPANシェルで &lt;code&gt;o conf init prefs_dir&lt;/code&gt; 試して、distroprefsシステムを設定してアクティブにします。</target>
        </trans-unit>
        <trans-unit id="6ee65b4d48e2ac02540ecb32d3b43d908326681d" translate="yes" xml:space="preserve">
          <source>bench.pl</source>
          <target state="translated">bench.pl</target>
        </trans-unit>
        <trans-unit id="664ac432b4954d19c059a37e90f2549775ecb9d7" translate="yes" xml:space="preserve">
          <source>beq()</source>
          <target state="translated">beq()</target>
        </trans-unit>
        <trans-unit id="c5f5e4d75252d9788ce20300d00023fa1ccd4d19" translate="yes" xml:space="preserve">
          <source>best</source>
          <target state="translated">best</target>
        </trans-unit>
        <trans-unit id="a2db5af4b95c649c7f23f26e2d00914f22ca9241" translate="yes" xml:space="preserve">
          <source>best effort</source>
          <target state="translated">ベストエフォート</target>
        </trans-unit>
        <trans-unit id="b8c1680ea7ea37db7233bc599faf01f592c8e529" translate="yes" xml:space="preserve">
          <source>bestr()</source>
          <target state="translated">bestr()</target>
        </trans-unit>
        <trans-unit id="709634051471385aada32356842983beeff4b065" translate="yes" xml:space="preserve">
          <source>between</source>
          <target state="translated">between</target>
        </trans-unit>
        <trans-unit id="857088f224d60f19170606b3f8e3e1d22d832425" translate="yes" xml:space="preserve">
          <source>between 0 and 255. These represent foreground and background colors, respectively, with the RGB values given by the</source>
          <target state="translated">0 から 255 の間の値です。これらはそれぞれ前景色と背景色を表し、RGB値は</target>
        </trans-unit>
        <trans-unit id="6ff6cf52c304b7ca8d264e3830a9bb468d96fb99" translate="yes" xml:space="preserve">
          <source>between configuring and making steps.)</source>
          <target state="translated">設定とステップの間にある)</target>
        </trans-unit>
        <trans-unit id="95b5da10cca6e837a526a6e638dc826063502032" translate="yes" xml:space="preserve">
          <source>bexp()</source>
          <target state="translated">bexp()</target>
        </trans-unit>
        <trans-unit id="d52f22fd878ee3706d7dd2feba05080b099127cc" translate="yes" xml:space="preserve">
          <source>bfac()</source>
          <target state="translated">bfac()</target>
        </trans-unit>
        <trans-unit id="f44d1f883a5070e98ee064df00c1a4df49e12190" translate="yes" xml:space="preserve">
          <source>bfib()</source>
          <target state="translated">bfib()</target>
        </trans-unit>
        <trans-unit id="7bbd3be39df70eda29db2e96251dc8a4c05ce7be" translate="yes" xml:space="preserve">
          <source>bfloor()</source>
          <target state="translated">bfloor()</target>
        </trans-unit>
        <trans-unit id="fae42f3e3aa55692f5e6f467a143b214b340ebc3" translate="yes" xml:space="preserve">
          <source>bfround ( +$scale )</source>
          <target state="translated">bfround(+$scale )</target>
        </trans-unit>
        <trans-unit id="fa75af0a26160b4c5285118a8300d1ffd1b896f0" translate="yes" xml:space="preserve">
          <source>bfround ( -$scale )</source>
          <target state="translated">bfround(-$scale )</target>
        </trans-unit>
        <trans-unit id="4a2b06e277ed5dd89cbb607d4e3cf03f44272f5f" translate="yes" xml:space="preserve">
          <source>bfround ( 0 )</source>
          <target state="translated">bfround(0 )</target>
        </trans-unit>
        <trans-unit id="ca23cd8cfb8590a5ac92910f20d66852f3bd4b84" translate="yes" xml:space="preserve">
          <source>bfround()</source>
          <target state="translated">bfround()</target>
        </trans-unit>
        <trans-unit id="dde1c58eeab957538292732d8b3578b0bbf195e1" translate="yes" xml:space="preserve">
          <source>bgcd()</source>
          <target state="translated">bgcd()</target>
        </trans-unit>
        <trans-unit id="2ddbbe441d748cbe42b9723164dbf9871d5c38df" translate="yes" xml:space="preserve">
          <source>bge()</source>
          <target state="translated">bge()</target>
        </trans-unit>
        <trans-unit id="8f2041749d677881debaab37d70b6c36707b39f5" translate="yes" xml:space="preserve">
          <source>bgt()</source>
          <target state="translated">bgt()</target>
        </trans-unit>
        <trans-unit id="e815c411019f3fe8a6e07303ec9c01ca20856c91" translate="yes" xml:space="preserve">
          <source>bidi_types()</source>
          <target state="translated">bidi_types()</target>
        </trans-unit>
        <trans-unit id="0eb26de54355ba1e1f99e33725a9d024cfd6b807" translate="yes" xml:space="preserve">
          <source>bidirectional type of</source>
          <target state="translated">双方向型</target>
        </trans-unit>
        <trans-unit id="38e4f23119f7668c81c56c877acdc10f397299d2" translate="yes" xml:space="preserve">
          <source>big-endian</source>
          <target state="translated">big-endian</target>
        </trans-unit>
        <trans-unit id="5f9c9d32d71f1ef8b8014c350a5f8aec50c577ec" translate="yes" xml:space="preserve">
          <source>bigint</source>
          <target state="translated">bigint</target>
        </trans-unit>
        <trans-unit id="83123b65dc13ec2d11ceae1c1cec211e7cef1cb6" translate="yes" xml:space="preserve">
          <source>bigint - Transparent BigInteger support for Perl</source>
          <target state="translated">bigint-Perl での透過的な BigInteger のサポート</target>
        </trans-unit>
        <trans-unit id="dc0c0c0aa0c98c99641fd608b1168be57143c887" translate="yes" xml:space="preserve">
          <source>bigint recognizes some options that can be passed while loading it via use. The options can (currently) be either a single letter form, or the long form. The following options exist:</source>
          <target state="translated">bigint は、使用を介してロードしている間に渡すことができるいくつかのオプションを認識します。オプションは (現在のところ)一文字形式か長い形式のどちらかになります。以下のオプションが存在します。</target>
        </trans-unit>
        <trans-unit id="2c5ed18936a55186b9ba8eb22ac87953629628d3" translate="yes" xml:space="preserve">
          <source>bignum</source>
          <target state="translated">bignum</target>
        </trans-unit>
        <trans-unit id="ebef2dfbf356b1d6376d0a89d5a3dc3812dc7025" translate="yes" xml:space="preserve">
          <source>bignum - Transparent BigNumber support for Perl</source>
          <target state="translated">bignum-Perl 用の透過的な BigNumber サポート</target>
        </trans-unit>
        <trans-unit id="cfc363199f35898d0c10e170520f53e8601bb52d" translate="yes" xml:space="preserve">
          <source>bignum recognizes some options that can be passed while loading it via use. The options can (currently) be either a single letter form, or the long form. The following options exist:</source>
          <target state="translated">bignumは、使用を介してロードする際に渡すことができるいくつかのオプションを認識します。オプションは(現在のところ)一文字の形式か、長い形式のどちらかになります。以下のオプションが存在します。</target>
        </trans-unit>
        <trans-unit id="59cfee0f6bb73ee64a7b9dbb363c27ea0eb9f302" translate="yes" xml:space="preserve">
          <source>bigrat</source>
          <target state="translated">bigrat</target>
        </trans-unit>
        <trans-unit id="dbf25a54f2fd0d3932bef731375b0ba1d051ef77" translate="yes" xml:space="preserve">
          <source>bigrat - Transparent BigNumber/BigRational support for Perl</source>
          <target state="translated">bigrat-Perl 用の透過的な BigNumber/BigRational サポート</target>
        </trans-unit>
        <trans-unit id="9a5d56716d566997fa290054d161af96305aff9a" translate="yes" xml:space="preserve">
          <source>bin</source>
          <target state="translated">bin</target>
        </trans-unit>
        <trans-unit id="7e19d6f26f79bdfbe7853603c9a8d51e943da151" translate="yes" xml:space="preserve">
          <source>bin.U</source>
          <target state="translated">bin.U</target>
        </trans-unit>
        <trans-unit id="22367761f269c4573006aea78f1e40ab220e3614" translate="yes" xml:space="preserve">
          <source>bin/</source>
          <target state="translated">bin/</target>
        </trans-unit>
        <trans-unit id="7e57cfe843145135aee1f4d0d63ceb7842093712" translate="yes" xml:space="preserve">
          <source>binary</source>
          <target state="translated">binary</target>
        </trans-unit>
        <trans-unit id="f7d496da369e602d60b03924e4f040c7d5dba6c5" translate="yes" xml:space="preserve">
          <source>binary ()</source>
          <target state="translated">二進法</target>
        </trans-unit>
        <trans-unit id="e1ee949aa75285ff225c696a370f886f46b556fe" translate="yes" xml:space="preserve">
          <source>binary operator</source>
          <target state="translated">にしんえんざんし</target>
        </trans-unit>
        <trans-unit id="a7932f025d5ca969d2e5249dfaee5d1123fb29da" translate="yes" xml:space="preserve">
          <source>binary representation. Leaving floating point numbers aside for the moment, the salient properties of any such representation are:</source>
          <target state="translated">2進表現です。浮動小数点数はさておき、そのような表現の顕著な特性は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="988edf147febb2b4b364a6acf2ddf6d4e94e8f33" translate="yes" xml:space="preserve">
          <source>binary, setting the C pre-processor macro &lt;code&gt;PERL_SUB_DEPTH_WARN&lt;/code&gt; to the desired value.</source>
          <target state="translated">バイナリ &lt;code&gt;PERL_SUB_DEPTH_WARN&lt;/code&gt; プリプロセッサマクロPERL_SUB_DEPTH_WARNを目的の値に設定します。</target>
        </trans-unit>
        <trans-unit id="de2cc6807b3c1fe9f5060a6094b70de72fb1f441" translate="yes" xml:space="preserve">
          <source>binary, which affect its binary compatibility with extensions. &lt;code&gt;bincompat_options()&lt;/code&gt; and &lt;code&gt;non_bincompat_options()&lt;/code&gt; are shown together in the output of &lt;code&gt;perl -V&lt;/code&gt; as</source>
          <target state="translated">バイナリ、拡張機能とのバイナリ互換性に影響します。 &lt;code&gt;bincompat_options()&lt;/code&gt; と &lt;code&gt;non_bincompat_options()&lt;/code&gt; の出力に併せて示されている &lt;code&gt;perl -V&lt;/code&gt; として</target>
        </trans-unit>
        <trans-unit id="b636cf5b464cf1767119b4fe29df7c510211a548" translate="yes" xml:space="preserve">
          <source>binary, which do not affect binary compatibility with extensions.</source>
          <target state="translated">拡張機能とのバイナリ互換性には影響しません。</target>
        </trans-unit>
        <trans-unit id="27b0abcf6d482c493480a28ab67814ecd71ae2f0" translate="yes" xml:space="preserve">
          <source>binary/&lt;code&gt;API&lt;/code&gt;</source>
          <target state="translated">binary/&lt;code&gt;API&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="363c3e51a7bf4d321b21be363e5368c645da7b66" translate="yes" xml:space="preserve">
          <source>binc()</source>
          <target state="translated">binc()</target>
        </trans-unit>
        <trans-unit id="ba42a913444427ae29604c87afb436d490ab0eee" translate="yes" xml:space="preserve">
          <source>bincompat_options()</source>
          <target state="translated">bincompat_options()</target>
        </trans-unit>
        <trans-unit id="6bdd4db977b0f96aaf3bff2e4300153c648ca382" translate="yes" xml:space="preserve">
          <source>bind</source>
          <target state="translated">bind</target>
        </trans-unit>
        <trans-unit id="15cb6b206f5309c215554249b37ea718b7489464" translate="yes" xml:space="preserve">
          <source>bind SOCKET,NAME</source>
          <target state="translated">bind SOCKET,NAME</target>
        </trans-unit>
        <trans-unit id="3602debc77f793084d28f897c8db056aab9923a0" translate="yes" xml:space="preserve">
          <source>bind() on closed socket %s</source>
          <target state="translated">閉じたソケット %s での bind()</target>
        </trans-unit>
        <trans-unit id="90d578a0959805111db0ca77352b04e9eeb22448" translate="yes" xml:space="preserve">
          <source>bind_match</source>
          <target state="translated">bind_match</target>
        </trans-unit>
        <trans-unit id="bb7a39d5637f4bd8a114f03f1fa7e0b4aff29e08" translate="yes" xml:space="preserve">
          <source>binf()</source>
          <target state="translated">binf()</target>
        </trans-unit>
        <trans-unit id="b8caa416ad22dfd04289ea1a80760faf5b038881" translate="yes" xml:space="preserve">
          <source>binmode</source>
          <target state="translated">binmode</target>
        </trans-unit>
        <trans-unit id="5e65b13dafb6dd4c759cc9455fddbe5bd69a8e0f" translate="yes" xml:space="preserve">
          <source>binmode FILEHANDLE</source>
          <target state="translated">binmode FILEHANDLE</target>
        </trans-unit>
        <trans-unit id="baf4fab3113579642465b028f8be5d19dbe690da" translate="yes" xml:space="preserve">
          <source>binmode FILEHANDLE, LAYER</source>
          <target state="translated">binmode FILEHANDLE,LAYER</target>
        </trans-unit>
        <trans-unit id="f2a5994e1f71b5c1aff0822f4016cadaa9aebdf4" translate="yes" xml:space="preserve">
          <source>binmode( [LAYER] )</source>
          <target state="translated">binmode([LAYER])</target>
        </trans-unit>
        <trans-unit id="fab68bdc2486879246a68125daf732306cd8090f" translate="yes" xml:space="preserve">
          <source>binmode() is important not only for readline() and print() operations, but also when using read(), seek(), sysread(), syswrite() and tell() (see &lt;a href=&quot;../perlport&quot;&gt;perlport&lt;/a&gt; for more details). See the &lt;code&gt;$/&lt;/code&gt; and &lt;code&gt;$\&lt;/code&gt; variables in &lt;a href=&quot;../perlvar&quot;&gt;perlvar&lt;/a&gt; for how to manually set your input and output line-termination sequences.</source>
          <target state="translated">binmode（）は、readline（）およびprint（）操作だけでなく、read（）、seek（）、sysread（）、syswrite（）、tell（）を&lt;a href=&quot;../perlport&quot;&gt;使用する&lt;/a&gt;場合にも重要です（詳細については、perlportを参照してください）。入力および出力の行末シーケンスを手動で設定する方法については、&lt;a href=&quot;../perlvar&quot;&gt;perlvar&lt;/a&gt;の &lt;code&gt;$/&lt;/code&gt; および &lt;code&gt;$\&lt;/code&gt; 変数を参照してください。</target>
        </trans-unit>
        <trans-unit id="c6cf70d51d1b9249c9bedbb5a665191357d92d38" translate="yes" xml:space="preserve">
          <source>binmode() is important not only for readline() and print() operations, but also when using read(), seek(), sysread(), syswrite() and tell() (see &lt;a href=&quot;perlport&quot;&gt;perlport&lt;/a&gt; for more details). See the &lt;code&gt;$/&lt;/code&gt; and &lt;code&gt;$\&lt;/code&gt; variables in &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt; for how to manually set your input and output line-termination sequences.</source>
          <target state="translated">binmode（）は、readline（）およびprint（）操作だけでなく、read（）、seek（）、sysread（）、syswrite（）、tell（）を&lt;a href=&quot;perlport&quot;&gt;使用する&lt;/a&gt;場合にも重要です（詳細については、perlportを参照してください）。入力および出力の行末シーケンスを手動で設定する方法については、&lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt;の &lt;code&gt;$/&lt;/code&gt; および &lt;code&gt;$\&lt;/code&gt; 変数を参照してください。</target>
        </trans-unit>
        <trans-unit id="60f702763d3ad5bf9903d9e678aa9e4af89e2238" translate="yes" xml:space="preserve">
          <source>binmode() on closed filehandle %s</source>
          <target state="translated">閉じたファイルハンドル %s で binmode()</target>
        </trans-unit>
        <trans-unit id="64304f0eaf264d4083a161af95cca3f4fc9956cd" translate="yes" xml:space="preserve">
          <source>binmode() operates similarly to open(): by default the specified layers are pushed on top of the existing stack.</source>
          <target state="translated">binmode()は open()と似たような動作をします:デフォルトでは、指定したレイヤーは既存のスタックの上にプッシュされます。</target>
        </trans-unit>
        <trans-unit id="250fb1b9cb55ba7726de39c65a4415cec8af2124" translate="yes" xml:space="preserve">
          <source>bint()</source>
          <target state="translated">bint()</target>
        </trans-unit>
        <trans-unit id="31c29ae0733c42de73bfb453a629bee7e9b6fec2" translate="yes" xml:space="preserve">
          <source>bior()</source>
          <target state="translated">bior()</target>
        </trans-unit>
        <trans-unit id="20f2d91e547cecad3b564ae99be53b45a6e670cc" translate="yes" xml:space="preserve">
          <source>bison on BS2000</source>
          <target state="translated">BS2000のバイソン</target>
        </trans-unit>
        <trans-unit id="026e996a3a5897970b058ffb093a163a1d763649" translate="yes" xml:space="preserve">
          <source>bit</source>
          <target state="translated">bit</target>
        </trans-unit>
        <trans-unit id="6e9475cbf618e2a540cd3ae4d7ab90c75f93bbeb" translate="yes" xml:space="preserve">
          <source>bit shift</source>
          <target state="translated">ビットシフト</target>
        </trans-unit>
        <trans-unit id="49f36fe2ba6ed4cff4356d9f8dea3adc00c78919" translate="yes" xml:space="preserve">
          <source>bit string</source>
          <target state="translated">ビット列</target>
        </trans-unit>
        <trans-unit id="f019d80321d209bdb5e25621a435c0f92ac86cfd" translate="yes" xml:space="preserve">
          <source>bits that is computed from the data value by doing sums. For numeric unpack codes, no big feat is achieved:</source>
          <target state="translated">ビットの合計を行うことでデータ値から計算されます。数値的なアンパックコードの場合、大きな偉業は達成されません。</target>
        </trans-unit>
        <trans-unit id="40a983b6b8280be6ababf17747af9e90f24d20e5" translate="yes" xml:space="preserve">
          <source>bits()</source>
          <target state="translated">bits()</target>
        </trans-unit>
        <trans-unit id="5bf1fd927dfb8679496a2e6cf00cbe50c1c87145" translate="yes" xml:space="preserve">
          <source>blah</source>
          <target state="translated">blah</target>
        </trans-unit>
        <trans-unit id="fcfd8b08b9dfc18492f53d1d51ef8d9ad41fbf87" translate="yes" xml:space="preserve">
          <source>blah.</source>
          <target state="translated">blah.</target>
        </trans-unit>
        <trans-unit id="c6198477997fe2771883ee25a1a71d0e4c7432b1" translate="yes" xml:space="preserve">
          <source>blah.exe</source>
          <target state="translated">blah.exe</target>
        </trans-unit>
        <trans-unit id="d48f3ab263e0a433c016223a2cc9e17538ed8009" translate="yes" xml:space="preserve">
          <source>blcm()</source>
          <target state="translated">blcm()</target>
        </trans-unit>
        <trans-unit id="c781287b99805ae6221518d95023fb40e89c637d" translate="yes" xml:space="preserve">
          <source>ble()</source>
          <target state="translated">ble()</target>
        </trans-unit>
        <trans-unit id="b5d874c5300674b3f1fdbeb29f0902746ff358b4" translate="yes" xml:space="preserve">
          <source>blead</source>
          <target state="translated">blead</target>
        </trans-unit>
        <trans-unit id="710f4beb6f3094fc46248a083fb427bcc0ad2e24" translate="yes" xml:space="preserve">
          <source>bless</source>
          <target state="translated">bless</target>
        </trans-unit>
        <trans-unit id="e4f59c387f62cb1edb42a1911954c50219be47d9" translate="yes" xml:space="preserve">
          <source>bless REF</source>
          <target state="translated">祝福のREF</target>
        </trans-unit>
        <trans-unit id="2e44205459ae344b338868e3b6b33bce58faf520" translate="yes" xml:space="preserve">
          <source>bless REF,CLASSNAME</source>
          <target state="translated">bless REF,CLASSNAME</target>
        </trans-unit>
        <trans-unit id="a49b3189e430e15827425d766ade8c8277059efb" translate="yes" xml:space="preserve">
          <source>bless, blessed, and ref</source>
          <target state="translated">祝福と祝福と審判</target>
        </trans-unit>
        <trans-unit id="f08a7a19e6f47e1125c9aee2336c6759c7798fe4" translate="yes" xml:space="preserve">
          <source>blessed</source>
          <target state="translated">blessed</target>
        </trans-unit>
        <trans-unit id="d4099c2cf9d57b9aa6b6e77ea9626851697cb3d9" translate="yes" xml:space="preserve">
          <source>blessed objects</source>
          <target state="translated">霊験あらたか</target>
        </trans-unit>
        <trans-unit id="7cdb9aa0f32f7a30fb9e35578aff5c7297e84bc8" translate="yes" xml:space="preserve">
          <source>blessings</source>
          <target state="translated">blessings</target>
        </trans-unit>
        <trans-unit id="5948cd46ec4b37fb77f455070c85e3a53a5385e6" translate="yes" xml:space="preserve">
          <source>blib</source>
          <target state="translated">blib</target>
        </trans-unit>
        <trans-unit id="58725a4e858a2c6188cdb04784100e5472989d90" translate="yes" xml:space="preserve">
          <source>blib - Use MakeMaker's uninstalled version of a package</source>
          <target state="translated">blib-MakeMaker のアンインストールされたバージョンのパッケージを使用する</target>
        </trans-unit>
        <trans-unit id="a76058b40e0fac4a71812a9bc906c2fefb88858f" translate="yes" xml:space="preserve">
          <source>blibdirs_target</source>
          <target state="translated">blibdirs_target</target>
        </trans-unit>
        <trans-unit id="8da57d83e4710f0212054859934df64541f40cd0" translate="yes" xml:space="preserve">
          <source>blk</source>
          <target state="translated">blk</target>
        </trans-unit>
        <trans-unit id="0214b4b355d11ca8f2ce45a968c264651bdfbf83" translate="yes" xml:space="preserve">
          <source>block</source>
          <target state="translated">block</target>
        </trans-unit>
        <trans-unit id="ea5d1a0307254d54b411f8a86b15040e8cbfc1d0" translate="yes" xml:space="preserve">
          <source>block buffering</source>
          <target state="translated">ブロックバッファリング</target>
        </trans-unit>
        <trans-unit id="becaa99a9fe347b3fe23dad3399ecd24d24e190b" translate="yes" xml:space="preserve">
          <source>block_end</source>
          <target state="translated">block_end</target>
        </trans-unit>
        <trans-unit id="6e0db69ae9a110cb6559b4ef655ce755a7a4f145" translate="yes" xml:space="preserve">
          <source>block_gimme</source>
          <target state="translated">block_gimme</target>
        </trans-unit>
        <trans-unit id="97da064a01b65a84f70baff2ab2b7809d324186f" translate="yes" xml:space="preserve">
          <source>block_start</source>
          <target state="translated">block_start</target>
        </trans-unit>
        <trans-unit id="c898441623d0cc22ba93c724ee92159aa2b6b2da" translate="yes" xml:space="preserve">
          <source>blockhook_register</source>
          <target state="translated">blockhook_register</target>
        </trans-unit>
        <trans-unit id="ee446b079331cb4d066226bbfc81a241b9f5b572" translate="yes" xml:space="preserve">
          <source>blog()</source>
          <target state="translated">blog()</target>
        </trans-unit>
        <trans-unit id="a26effe1d3cc643c316da1033ce081d24a76b9b8" translate="yes" xml:space="preserve">
          <source>bls=INTEGER</source>
          <target state="translated">bls=INTEGER</target>
        </trans-unit>
        <trans-unit id="baf27f3dc38c3a93bf31c0a7a2de08fc0847febe" translate="yes" xml:space="preserve">
          <source>blsft()</source>
          <target state="translated">blsft()</target>
        </trans-unit>
        <trans-unit id="de78f4557b8f92abac734524c8092acd1ff00895" translate="yes" xml:space="preserve">
          <source>blsft()/brsft()</source>
          <target state="translated">blsft()/brsft()</target>
        </trans-unit>
        <trans-unit id="2fd0fd5e8785cded108a0b4c3987011a3f9a433d" translate="yes" xml:space="preserve">
          <source>blt()</source>
          <target state="translated">blt()</target>
        </trans-unit>
        <trans-unit id="d469821215ed8fdf1c01a8627ec36c65a0c24c61" translate="yes" xml:space="preserve">
          <source>blucas()</source>
          <target state="translated">blucas()</target>
        </trans-unit>
        <trans-unit id="6ad7da3d1b629d68c47436ccd4e4c6a0178702ac" translate="yes" xml:space="preserve">
          <source>blurt()</source>
          <target state="translated">blurt()</target>
        </trans-unit>
        <trans-unit id="2e264db45128e397f171695bf390adfeef3598d7" translate="yes" xml:space="preserve">
          <source>bmod()</source>
          <target state="translated">bmod()</target>
        </trans-unit>
        <trans-unit id="f86c0f154ec1ab4f7cd30137f9e8a89a6840eb8d" translate="yes" xml:space="preserve">
          <source>bmodinv()</source>
          <target state="translated">bmodinv()</target>
        </trans-unit>
        <trans-unit id="f5a284f7da3f4f73b7f14dfbaf90e3ce7dacf74f" translate="yes" xml:space="preserve">
          <source>bmodpow()</source>
          <target state="translated">bmodpow()</target>
        </trans-unit>
        <trans-unit id="d21319b5c7ceef0c5567dfd8d4c57a92446b6d7f" translate="yes" xml:space="preserve">
          <source>bmul()</source>
          <target state="translated">bmul()</target>
        </trans-unit>
        <trans-unit id="2e05368ab1d3b7d6116240a0313ea500b290658b" translate="yes" xml:space="preserve">
          <source>bmuladd()</source>
          <target state="translated">bmuladd()</target>
        </trans-unit>
        <trans-unit id="8a2a6d034355be7780085f14f8c5624812072e77" translate="yes" xml:space="preserve">
          <source>bnan()</source>
          <target state="translated">bnan()</target>
        </trans-unit>
        <trans-unit id="4bffed2ba79069b83e61d43558db9e0145189b86" translate="yes" xml:space="preserve">
          <source>bne()</source>
          <target state="translated">bne()</target>
        </trans-unit>
        <trans-unit id="acb2323220a9a7746a44255816d71f5351a4790a" translate="yes" xml:space="preserve">
          <source>bneg()</source>
          <target state="translated">bneg()</target>
        </trans-unit>
        <trans-unit id="33366fdd69ce84e94b98d8a229f85a41c634530c" translate="yes" xml:space="preserve">
          <source>bnok()</source>
          <target state="translated">bnok()</target>
        </trans-unit>
        <trans-unit id="c770c8e7173b85479c2dc8ac9f7dcbb9bc5fe2f3" translate="yes" xml:space="preserve">
          <source>bnorm()</source>
          <target state="translated">bnorm()</target>
        </trans-unit>
        <trans-unit id="32895dc66f25fd7dac0899bd9b4408dd1841faf8" translate="yes" xml:space="preserve">
          <source>bnorm() on a BigFloat object is now effectively a no-op, since the numbers are always stored in normalized form. On a string, it creates a BigFloat object.</source>
          <target state="translated">数値は常に正規化された形式で格納されるため、BigFloat オブジェクト上の bnorm()は事実上、実行しないようになりました。文字列の場合は、BigFloatオブジェクトを作成します。</target>
        </trans-unit>
        <trans-unit id="6b70c4805252a1f570e1c562fbc4bfa29477eff5" translate="yes" xml:space="preserve">
          <source>bnot()</source>
          <target state="translated">bnot()</target>
        </trans-unit>
        <trans-unit id="9cc5e5eaa9df15ad6ffcceb045fc439ba9eab576" translate="yes" xml:space="preserve">
          <source>bnstr()</source>
          <target state="translated">bnstr()</target>
        </trans-unit>
        <trans-unit id="02083f4579e08a612425c0c1a17ee47add783b94" translate="yes" xml:space="preserve">
          <source>body</source>
          <target state="translated">body</target>
        </trans-unit>
        <trans-unit id="07f7b599effa948213cb412138977cc6851f9893" translate="yes" xml:space="preserve">
          <source>body ( [ MSGID|MSGNUM ], [FH] )</source>
          <target state="translated">body([MSGID|MSGNUM ],[FH])</target>
        </trans-unit>
        <trans-unit id="f2dd66051b28e6f8b12d66a43475ba8fdeaaa1ce" translate="yes" xml:space="preserve">
          <source>bodyfh ( [ MSGID|MSGNUM ] )</source>
          <target state="translated">bodyfh([MSGID|MSGNUM])</target>
        </trans-unit>
        <trans-unit id="42e30168211d8a342d95644b4fce96a7ffe7889f" translate="yes" xml:space="preserve">
          <source>bone()</source>
          <target state="translated">bone()</target>
        </trans-unit>
        <trans-unit id="1aed26655fb288402a22a39e65ab37ea6faa2d19" translate="yes" xml:space="preserve">
          <source>book-keeping code to the generated code. During the execution of the code the basic block counters are then updated appropriately. The caveat is that the added extra code can skew the results: again, the profiling tools usually try to factor their own effects out of the results.</source>
          <target state="translated">簿記コードを生成されたコードに変換します。コードの実行中に、基本的なブロック・カウンタが適切に更新されます。注意点は、追加された余分なコードが結果を歪める可能性があるということです。</target>
        </trans-unit>
        <trans-unit id="cb16f9aff92a0c271f47676b6dc33d3ff149671b" translate="yes" xml:space="preserve">
          <source>boolSV</source>
          <target state="translated">boolSV</target>
        </trans-unit>
        <trans-unit id="15de74af85d07cd58ad10ef45f5cbb7c4ac1ac21" translate="yes" xml:space="preserve">
          <source>boolean_values</source>
          <target state="translated">boolean_values</target>
        </trans-unit>
        <trans-unit id="729e45dc00b922b49b39fefe181e1e856ed87ec4" translate="yes" xml:space="preserve">
          <source>boot_Module</source>
          <target state="translated">boot_Module</target>
        </trans-unit>
        <trans-unit id="ba663f22e3229112460a32e29c16274682d6bf7a" translate="yes" xml:space="preserve">
          <source>boot_ModuleName</source>
          <target state="translated">boot_ModuleName</target>
        </trans-unit>
        <trans-unit id="64c0e72dbf0f0628e440bc4de8d9b1e0c449a446" translate="yes" xml:space="preserve">
          <source>boot_core_PerlIO</source>
          <target state="translated">boot_core_PerlIO</target>
        </trans-unit>
        <trans-unit id="d12639f1803461ade20f59eabc548f63c620d600" translate="yes" xml:space="preserve">
          <source>boot_core_UNIVERSAL</source>
          <target state="translated">boot_core_UNIVERSAL</target>
        </trans-unit>
        <trans-unit id="452ef9046c45ab3336e7f180a67ce8abe7d63ed7" translate="yes" xml:space="preserve">
          <source>boot_core_mro</source>
          <target state="translated">boot_core_mro</target>
        </trans-unit>
        <trans-unit id="3c71cc99d2fc1c12a3d3e1b27e448ca612a89a1d" translate="yes" xml:space="preserve">
          <source>bootstrap</source>
          <target state="translated">bootstrap</target>
        </trans-unit>
        <trans-unit id="4b73f58647d46c351e92c5308bdff57c346a520b" translate="yes" xml:space="preserve">
          <source>bootstrap($module [...])</source>
          <target state="translated">ブートストラップ($modules [....])</target>
        </trans-unit>
        <trans-unit id="7e42e955dc52bdd16eb64e40e8cbb6e2038cb5a4" translate="yes" xml:space="preserve">
          <source>bootstrap()</source>
          <target state="translated">bootstrap()</target>
        </trans-unit>
        <trans-unit id="7910fb624621794d30d4a0171b4ef16c06efef31" translate="yes" xml:space="preserve">
          <source>bootstraps the shared library and</source>
          <target state="translated">共有ライブラリと</target>
        </trans-unit>
        <trans-unit id="05b1f356646c24bf1765f6f1b65aea3bde7247e1" translate="yes" xml:space="preserve">
          <source>boss</source>
          <target state="translated">boss</target>
        </trans-unit>
        <trans-unit id="fc39b18f287d8bbfaceae020f4a4eb32ac5c1e70" translate="yes" xml:space="preserve">
          <source>both</source>
          <target state="translated">both</target>
        </trans-unit>
        <trans-unit id="5d5c5a75e87987f4e30517320181d3167e2e90c2" translate="yes" xml:space="preserve">
          <source>both &lt;code&gt;/x&lt;/code&gt; and &lt;code&gt;/xx&lt;/code&gt; are turned off during matching &lt;code&gt;foo&lt;/code&gt;. And in</source>
          <target state="translated">&lt;code&gt;foo&lt;/code&gt; のマッチング中は、 &lt;code&gt;/x&lt;/code&gt; と &lt;code&gt;/xx&lt;/code&gt; の両方がオフになります。そしてで</target>
        </trans-unit>
        <trans-unit id="abb0e3da05698e3415e8b8587366c2e5c9fe8869" translate="yes" xml:space="preserve">
          <source>both map to</source>
          <target state="translated">両者が一致する</target>
        </trans-unit>
        <trans-unit id="654dc453fcad5d97496638c1771b5fea1e41eb18" translate="yes" xml:space="preserve">
          <source>both of which mean to enable locale awarness of all categories but &lt;code&gt;LC_CTYPE&lt;/code&gt; . Only one category argument may be specified in a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; if it is of the negated form.</source>
          <target state="translated">どちらも、 &lt;code&gt;LC_CTYPE&lt;/code&gt; 以外のすべてのカテゴリのロケール認識を有効にすることを意味します。否定形式の場合、 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; 指定できるカテゴリ引数は1つだけです。</target>
        </trans-unit>
        <trans-unit id="6ee6da7a89433b3846111e0827da206b1a6c3586" translate="yes" xml:space="preserve">
          <source>both of which mean to enable locale awarness of all categories but &lt;code&gt;LC_CTYPE&lt;/code&gt;. Only one category argument may be specified in a &lt;code&gt;use locale&lt;/code&gt; if it is of the negated form.</source>
          <target state="translated">どちらも、 &lt;code&gt;LC_CTYPE&lt;/code&gt; を除くすべてのカテゴリのロケール認識を有効にすることを意味します。否定形式の場合、 &lt;code&gt;use locale&lt;/code&gt; 指定できるカテゴリ引数は1つだけです。</target>
        </trans-unit>
        <trans-unit id="2b71091a1e00fc7f0377bb487f77f1ea5a597b77" translate="yes" xml:space="preserve">
          <source>both result in the proper type due to the way the overloaded math works.</source>
          <target state="translated">どちらもオーバーロードされた数学の動作方法のため、適切な型になります。</target>
        </trans-unit>
        <trans-unit id="26d491c7e7617951114de7ec765c4e99eb127ce3" translate="yes" xml:space="preserve">
          <source>both s and m modifiers (//sm): Treat string as a single long line, but detect multiple lines. &lt;code&gt;'.'&lt;/code&gt; matches any character, even &lt;code&gt;&quot;\n&quot;&lt;/code&gt; . &lt;code&gt;^&lt;/code&gt; and &lt;code&gt;$&lt;/code&gt; , however, are able to match at the start or end of</source>
          <target state="translated">sとmの両方の修飾子（// sm）：文字列を単一の長い行として扱いますが、複数の行を検出します。 &lt;code&gt;'.'&lt;/code&gt; &lt;code&gt;&quot;\n&quot;&lt;/code&gt; 含む任意の文字に一致します。 &lt;code&gt;^&lt;/code&gt; と &lt;code&gt;$&lt;/code&gt; は、しかし、最初または最後に一致することができます</target>
        </trans-unit>
        <trans-unit id="da125409d0b04b5363bed4f7c169c16908244cb2" translate="yes" xml:space="preserve">
          <source>both s and m modifiers (&lt;code&gt;/sm&lt;/code&gt;): Treat string as a single long line, but detect multiple lines. &lt;code&gt;'.'&lt;/code&gt; matches any character, even &lt;code&gt;&quot;\n&quot;&lt;/code&gt;. &lt;code&gt;'^'&lt;/code&gt; and &lt;code&gt;'$'&lt;/code&gt;, however, are able to match at the start or end of</source>
          <target state="translated">s修飾子とm修飾子の両方（ &lt;code&gt;/sm&lt;/code&gt; ）：文字列を単一の長い行として扱いますが、複数の行を検出します。 &lt;code&gt;'.'&lt;/code&gt; &lt;code&gt;&quot;\n&quot;&lt;/code&gt; も含め、任意の文字に一致します。ただし、 &lt;code&gt;'^'&lt;/code&gt; と &lt;code&gt;'$'&lt;/code&gt; は、の最初または最後で一致させることができます。</target>
        </trans-unit>
        <trans-unit id="d145e8b6add511128e3c21f5ad3c0317ad3aa0f5" translate="yes" xml:space="preserve">
          <source>both supply a list context to the right-hand side, while</source>
          <target state="translated">はどちらも右側にリストコンテキストを提供します。</target>
        </trans-unit>
        <trans-unit id="ddb1e7c979a33eef473274634ab437e562e02159" translate="yes" xml:space="preserve">
          <source>bother</source>
          <target state="translated">bother</target>
        </trans-unit>
        <trans-unit id="f4072a98f3cc33db2397c1a6a2d723f3288e5a64" translate="yes" xml:space="preserve">
          <source>bpi()</source>
          <target state="translated">bpi()</target>
        </trans-unit>
        <trans-unit id="23998aef8c711bbb24e99222ca54b2d1029087d8" translate="yes" xml:space="preserve">
          <source>bpow()</source>
          <target state="translated">bpow()</target>
        </trans-unit>
        <trans-unit id="8a6b08579a9805d7dea44b94ea1dcb6609f11536" translate="yes" xml:space="preserve">
          <source>bracketed character classes, and are a convenient and descriptive way of listing a group of characters.</source>
          <target state="translated">括弧付きの文字クラスで、文字のグループをリストアップする便利で記述的な方法です。</target>
        </trans-unit>
        <trans-unit id="837cc1c54b7aa66d67f7d308af69db6dc69fbbe4" translate="yes" xml:space="preserve">
          <source>brackets subscripts, so you can shrink the above down to</source>
          <target state="translated">括弧付きの添え字なので、上記のように縮小して</target>
        </trans-unit>
        <trans-unit id="f58c2f1ddf1f99fbc5e588ef92122fd5f4e64d88" translate="yes" xml:space="preserve">
          <source>branch, and your repository is up to date:</source>
          <target state="translated">ブランチを使用すると、リポジトリが最新の状態になります。</target>
        </trans-unit>
        <trans-unit id="4f9cac8dbc4c67a388b8379dcc126c90c7c5e72a" translate="yes" xml:space="preserve">
          <source>break</source>
          <target state="translated">break</target>
        </trans-unit>
        <trans-unit id="ae39aad32a94dadfcf3189dc5c2a3e59c0c744ea" translate="yes" xml:space="preserve">
          <source>break function_name</source>
          <target state="translated">ブレーク関数名</target>
        </trans-unit>
        <trans-unit id="4e5884029856e1077621c33f780a067f09de226f" translate="yes" xml:space="preserve">
          <source>break source.c:xxx</source>
          <target state="translated">break source.c:xxx</target>
        </trans-unit>
        <trans-unit id="bb43d711172bd27bbb3fc18fb773e33edc6b3165" translate="yes" xml:space="preserve">
          <source>breaking down the problem into smaller parts,</source>
          <target state="translated">問題をより小さな部分に分解します。</target>
        </trans-unit>
        <trans-unit id="ef6896ab2d5a3c6e8ba7ee46ba3e48c29057ad74" translate="yes" xml:space="preserve">
          <source>breakout</source>
          <target state="translated">breakout</target>
        </trans-unit>
        <trans-unit id="5c0a31c48cda57c40dc61b785110d76593834ffd" translate="yes" xml:space="preserve">
          <source>breakpoint</source>
          <target state="translated">breakpoint</target>
        </trans-unit>
        <trans-unit id="b33a5b3e6b7eb3b9f7f1a0e451dee877c2374873" translate="yes" xml:space="preserve">
          <source>breaks this paradigm;</source>
          <target state="translated">このパラダイムを壊す。</target>
        </trans-unit>
        <trans-unit id="58bcf671da7c6005da184d1a734e880e766af7f5" translate="yes" xml:space="preserve">
          <source>brian d foy &lt;code&gt;&amp;lt;brian.d.foy@gmail.com&amp;gt;&lt;/code&gt;</source>
          <target state="translated">ブライアンdフォイ &lt;code&gt;&amp;lt;brian.d.foy@gmail.com&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d66ce35469f9f5b7a50b1393b2943fdd723739c2" translate="yes" xml:space="preserve">
          <source>brian d foy, &lt;code&gt;&amp;lt;bdfoy@cpan.org&amp;gt;&lt;/code&gt;</source>
          <target state="translated">ブライアン・ド・フォイ、 &lt;code&gt;&amp;lt;bdfoy@cpan.org&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="61d0590ea80fc27ef2d48128cdc45e16256169d0" translate="yes" xml:space="preserve">
          <source>brian m. carlson &amp;lt;sandals@crustytoothpaste.net&amp;gt;</source>
          <target state="translated">ブライアンm。カールソン&amp;lt;sandals@crustytoothpaste.net&amp;gt;</target>
        </trans-unit>
        <trans-unit id="b58ccb7871e0261dfe6de9e4f5274543ebbebeb8" translate="yes" xml:space="preserve">
          <source>broadcast</source>
          <target state="translated">broadcast</target>
        </trans-unit>
        <trans-unit id="96a69616cc78fb488e50bb7f07bd37667d493f80" translate="yes" xml:space="preserve">
          <source>broken.</source>
          <target state="translated">broken.</target>
        </trans-unit>
        <trans-unit id="0b12bb49ef8a21331b0526566fe4b80e5eaec019" translate="yes" xml:space="preserve">
          <source>broot()</source>
          <target state="translated">broot()</target>
        </trans-unit>
        <trans-unit id="1bb9049aef8480778900302b76f274d373fd9aaa" translate="yes" xml:space="preserve">
          <source>bround ( +$scale )</source>
          <target state="translated">bround(+$scale )</target>
        </trans-unit>
        <trans-unit id="31feb56dfd8fcb4e7473c88c2003fc388b6520b7" translate="yes" xml:space="preserve">
          <source>bround ( -$scale ) and bround ( 0 )</source>
          <target state="translated">bround(-$scale)および bround(0 )</target>
        </trans-unit>
        <trans-unit id="13660c144d6e63ed7a875821a88f3b27a21b7786" translate="yes" xml:space="preserve">
          <source>bround()</source>
          <target state="translated">bround()</target>
        </trans-unit>
        <trans-unit id="6fa78ae26f483beb12891190edb2dc005e4cbe3b" translate="yes" xml:space="preserve">
          <source>bround()/round()/bfround()</source>
          <target state="translated">bround()/round()/bfround()</target>
        </trans-unit>
        <trans-unit id="9ca2d10d5ef0cae97ebe373154409473b2e7e075" translate="yes" xml:space="preserve">
          <source>brsft()</source>
          <target state="translated">brsft()</target>
        </trans-unit>
        <trans-unit id="48f3f89ac3fac5337b47faa8a2f93eb8b298844e" translate="yes" xml:space="preserve">
          <source>bsd</source>
          <target state="translated">bsd</target>
        </trans-unit>
        <trans-unit id="7f4d4889db6efc5f4473f596054724e46849358d" translate="yes" xml:space="preserve">
          <source>bsd_glob</source>
          <target state="translated">bsd_glob</target>
        </trans-unit>
        <trans-unit id="1dbd729f945c8998e112203241f2035b87c572b0" translate="yes" xml:space="preserve">
          <source>bsd_glob() returns a list of matching paths, possibly zero length. If an error occurred, &amp;amp;File::Glob::GLOB_ERROR will be non-zero and &lt;code&gt;$!&lt;/code&gt; will be set. &amp;amp;File::Glob::GLOB_ERROR is guaranteed to be zero if no error occurred, or one of the following values otherwise:</source>
          <target state="translated">bsd_glob（）は、一致するパスのリストを返します。長さがゼロの場合もあります。エラーが発生した場合、＆File :: Glob :: GLOB_ERRORはゼロ以外であり、 &lt;code&gt;$!&lt;/code&gt; 設定されます。＆File :: Glob :: GLOB_ERRORは、エラーが発生しなかった場合はゼロ、それ以外の場合は次のいずれかの値になることが保証されています。</target>
        </trans-unit>
        <trans-unit id="60747fb94e0ee1e6a3033c0be43d87212b33a4f5" translate="yes" xml:space="preserve">
          <source>bsddev.zip</source>
          <target state="translated">bsddev.zip</target>
        </trans-unit>
        <trans-unit id="3a8d931b6b3b0c9a1cc280dd0b5c81f1da1ad556" translate="yes" xml:space="preserve">
          <source>bsgn()</source>
          <target state="translated">bsgn()</target>
        </trans-unit>
        <trans-unit id="12b8a881b5b383f3a144a3c69221d0f08e530a29" translate="yes" xml:space="preserve">
          <source>bsin()</source>
          <target state="translated">bsin()</target>
        </trans-unit>
        <trans-unit id="98e6344878aedd07915a448203ac11106893ceb4" translate="yes" xml:space="preserve">
          <source>bsqrt()</source>
          <target state="translated">bsqrt()</target>
        </trans-unit>
        <trans-unit id="1c2f15e3472a6bf8ee81043d6243485c54d30bbe" translate="yes" xml:space="preserve">
          <source>bsstr()</source>
          <target state="translated">bsstr()</target>
        </trans-unit>
        <trans-unit id="2bd0fed432a2912a0d25f620e2789f60d1a512a3" translate="yes" xml:space="preserve">
          <source>bstr()</source>
          <target state="translated">bstr()</target>
        </trans-unit>
        <trans-unit id="d0f6068194aa4e1d1262dafb62bcf499c7cc6deb" translate="yes" xml:space="preserve">
          <source>bstr()/bsstr()</source>
          <target state="translated">bstr()/bsstr()</target>
        </trans-unit>
        <trans-unit id="980e1fb430966cca3406c283871633ee8baa3018" translate="yes" xml:space="preserve">
          <source>bsub()</source>
          <target state="translated">bsub()</target>
        </trans-unit>
        <trans-unit id="3f36bff1518edbd010b34e425c692562b53fe0ad" translate="yes" xml:space="preserve">
          <source>btdiv()</source>
          <target state="translated">btdiv()</target>
        </trans-unit>
        <trans-unit id="d4fd519d057429d2d758445e9374839a00ca1b21" translate="yes" xml:space="preserve">
          <source>btmod()</source>
          <target state="translated">btmod()</target>
        </trans-unit>
        <trans-unit id="fe1b2b96400138c433e3bcd27a0351d10505d6a4" translate="yes" xml:space="preserve">
          <source>btree(3)</source>
          <target state="translated">btree(3)</target>
        </trans-unit>
        <trans-unit id="827b8276dd99a8a945b710d5e1f7ccb6d9c39b16" translate="yes" xml:space="preserve">
          <source>bucket</source>
          <target state="translated">bucket</target>
        </trans-unit>
        <trans-unit id="e53c2ea1fe4bd2b78bf4723c7c155a578e020a25" translate="yes" xml:space="preserve">
          <source>buffer</source>
          <target state="translated">buffer</target>
        </trans-unit>
        <trans-unit id="bdc28be892a4dde516e1a5280e9c0bfe5afdc72a" translate="yes" xml:space="preserve">
          <source>bugtracker</source>
          <target state="translated">bugtracker</target>
        </trans-unit>
        <trans-unit id="80754af91bfb6d1073585b046fe0a474ce868509" translate="yes" xml:space="preserve">
          <source>build</source>
          <target state="translated">build</target>
        </trans-unit>
        <trans-unit id="39001d5c18f51088ca9e1057a5abbd818117d55a" translate="yes" xml:space="preserve">
          <source>build them, but you must link the XSUBs subroutines with the rest of Perl, creating a new executable. This situation is similar to Perl 4.</source>
          <target state="translated">をビルドしますが、XSUBsサブルーチンをPerlの残りの部分とリンクして新しい実行ファイルを作成しなければなりません。この状況はPerl 4と似ています。</target>
        </trans-unit>
        <trans-unit id="bae58eaace8b2754bd7e021ee9fd629f49a70e0a" translate="yes" xml:space="preserve">
          <source>build_cache</source>
          <target state="translated">build_cache</target>
        </trans-unit>
        <trans-unit id="18bd034387c04d01dcb25b1dcf731365caa38d24" translate="yes" xml:space="preserve">
          <source>build_dir</source>
          <target state="translated">build_dir</target>
        </trans-unit>
        <trans-unit id="e64a2bbf05ec931c7e1cf57f9fa89ecf2f60a4ce" translate="yes" xml:space="preserve">
          <source>build_dir_reuse</source>
          <target state="translated">build_dir_reuse</target>
        </trans-unit>
        <trans-unit id="86d56dce4a9004aa00c2f6d659e3142638e7cd56" translate="yes" xml:space="preserve">
          <source>build_requires</source>
          <target state="translated">build_requires</target>
        </trans-unit>
        <trans-unit id="aefa500bb9b669c85109eeba4ef5252fdc5d8c36" translate="yes" xml:space="preserve">
          <source>build_requires_install_policy</source>
          <target state="translated">build_requires_install_policy</target>
        </trans-unit>
        <trans-unit id="f52318a05e518a5596012af2ed38de68ac26a468" translate="yes" xml:space="preserve">
          <source>builder</source>
          <target state="translated">builder</target>
        </trans-unit>
        <trans-unit id="9b72ae582cc1e1e343de827cc627cd49a4a6c7c4" translate="yes" xml:space="preserve">
          <source>building below the perl source directory. If you</source>
          <target state="translated">perlのソースディレクトリの下にビルドします。もし</target>
        </trans-unit>
        <trans-unit id="947d8f664d143e01412e73e257100b32b9ed0ecf" translate="yes" xml:space="preserve">
          <source>building below the perl source, INST_LIB and INST_ARCHLIB default to ../../lib, and INST_SCRIPT is not defined.</source>
          <target state="translated">perlソース以下のビルドでは、INST_LIBとINST_ARCHLIBのデフォルトは..././libで、INST_SCRIPTは定義されていません。</target>
        </trans-unit>
        <trans-unit id="f125862e397bf52c7831a13c2443aeda18c3ffb1" translate="yes" xml:space="preserve">
          <source>builds a PPD package that references a binary of the &lt;code&gt;Agent&lt;/code&gt; package, located in the &lt;code&gt;x86&lt;/code&gt; directory relative to the PPD itself.</source>
          <target state="translated">PPD自体に相対的な &lt;code&gt;x86&lt;/code&gt; ディレクトリにある、 &lt;code&gt;Agent&lt;/code&gt; パッケージのバイナリを参照するPPDパッケージをビルドします。</target>
        </trans-unit>
        <trans-unit id="54c968766b16149a445212d3b145a5471982de2f" translate="yes" xml:space="preserve">
          <source>builds a Perl extension for use by Encode from either Unicode Character Mapping files (.ucm) or Tcl Encoding Files (.enc). Besides being used internally during the build process of the Encode module, you can use</source>
          <target state="translated">は、Unicode 文字マッピングファイル (.ucm)または Tcl エンコーディングファイル (.enc)のいずれかから Encode で使用するための Perl 拡張モジュールをビルドします。Encodeモジュールのビルドプロセス中に内部的に使用される以外にも、以下のような使い方ができます。</target>
        </trans-unit>
        <trans-unit id="02270db35bb6bd281f1f08fafc816eeb39611e44" translate="yes" xml:space="preserve">
          <source>builds a Perl extension from C header files. The extension will include functions which can be used to retrieve the value of any #define statement which was in the C header files.</source>
          <target state="translated">はCヘッダファイルからPerlの拡張子を構築します。この拡張機能には、Cヘッダファイルに含まれる#define文の値を取得するために使用できる関数が含まれています。</target>
        </trans-unit>
        <trans-unit id="353c847ec3d51fb75d760939a900605ca2ba1152" translate="yes" xml:space="preserve">
          <source>built</source>
          <target state="translated">built</target>
        </trans-unit>
        <trans-unit id="20338f4396d53223790aaa148f621aa479ece3c0" translate="yes" xml:space="preserve">
          <source>built-in</source>
          <target state="translated">built-in</target>
        </trans-unit>
        <trans-unit id="26af528c9f66aa4c3245f46b32caf847b44d0509" translate="yes" xml:space="preserve">
          <source>bulkdd@cpan.org</source>
          <target state="translated">bulkdd@cpan.org</target>
        </trans-unit>
        <trans-unit id="d59795de8a4d83834e525b589b2bb0c12e4542c1" translate="yes" xml:space="preserve">
          <source>bundle</source>
          <target state="translated">bundle</target>
        </trans-unit>
        <trans-unit id="35e8277cc95cf8aaf1e8e9ffcb5ea39e6502bbd0" translate="yes" xml:space="preserve">
          <source>bundles</source>
          <target state="translated">bundles</target>
        </trans-unit>
        <trans-unit id="a31ed492140d39480ecda647d79e466b5ce2218c" translate="yes" xml:space="preserve">
          <source>bundling (default: disabled)</source>
          <target state="translated">バンドル</target>
        </trans-unit>
        <trans-unit id="77e25bc919e32ad451aa8e6adc14844860a2a627" translate="yes" xml:space="preserve">
          <source>bundling_override (default: disabled)</source>
          <target state="translated">bundling_override (デフォルト:disabled)</target>
        </trans-unit>
        <trans-unit id="97bd27f135ae383d1ab339e2ddd56faabfe06a3c" translate="yes" xml:space="preserve">
          <source>bunzip2 $input_filename_or_reference =&amp;gt; $output_filename_or_reference [, OPTS]</source>
          <target state="translated">bunzip2 $ input_filename_or_reference =&amp;gt; $ output_filename_or_reference [、OPTS]</target>
        </trans-unit>
        <trans-unit id="ded851c3d8d9888e3e55d4afcffaa2a08724edd0" translate="yes" xml:space="preserve">
          <source>buparrow()</source>
          <target state="translated">buparrow()</target>
        </trans-unit>
        <trans-unit id="786e97b3ee9fc4b292d5852c2c5943153c4ce91a" translate="yes" xml:space="preserve">
          <source>but</source>
          <target state="translated">but</target>
        </trans-unit>
        <trans-unit id="cf72a790bf9220db925b72c5cbee1dd78ac17da1" translate="yes" xml:space="preserve">
          <source>but $var is referenced elsewhere and could be modified after the &lt;code&gt;&lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt;&lt;/code&gt; expression is evaluated. Either it is explicitly modified elsewhere (&lt;code&gt;$var = 3&lt;/code&gt; ) or it is passed to a subroutine or to an operator like &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/map&quot;&gt;map&lt;/a&gt;&lt;/code&gt;, which may or may not modify the variable.</source>
          <target state="translated">ただし、$ varは他の場所で参照されており、 &lt;code&gt;&lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt;&lt;/code&gt; 式の評価後に変更できます。他の場所で明示的に変更されている（ &lt;code&gt;$var = 3&lt;/code&gt; ）か、サブルーチンに渡されるか、変数を変更するかどうかにかかわらず、 &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; や &lt;code&gt;&lt;a href=&quot;functions/map&quot;&gt;map&lt;/a&gt;&lt;/code&gt; などの演算子に渡されます。</target>
        </trans-unit>
        <trans-unit id="d3309c6a5b5625d9bc8f85ff4b36ff98024811f1" translate="yes" xml:space="preserve">
          <source>but $var is referenced elsewhere and could be modified after the &lt;code&gt;sub&lt;/code&gt; expression is evaluated. Either it is explicitly modified elsewhere (&lt;code&gt;$var = 3&lt;/code&gt;) or it is passed to a subroutine or to an operator like &lt;code&gt;printf&lt;/code&gt; or &lt;code&gt;map&lt;/code&gt;, which may or may not modify the variable.</source>
          <target state="translated">ただし、$ varは他の場所で参照されており、 &lt;code&gt;sub&lt;/code&gt; 式の評価後に変更できます。他の場所で明示的に変更されるか（ &lt;code&gt;$var = 3&lt;/code&gt; ）、サブルーチンまたは &lt;code&gt;printf&lt;/code&gt; や &lt;code&gt;map&lt;/code&gt; などの演算子に渡されます。これらの演算子は変数を変更する場合と変更しない場合があります。</target>
        </trans-unit>
        <trans-unit id="5db1b56b00418784571960c2c16e06bc81c8bff7" translate="yes" xml:space="preserve">
          <source>but I immediately went looking for some more concise way to basically denote the same phrase-function -- a way that would also serve to concisely denote</source>
          <target state="translated">しかし、私はすぐに、同じフレーズ-関数を基本的に表現するもっと簡潔な方法を探しました。</target>
        </trans-unit>
        <trans-unit id="71b30c3e0c461e872d1934c8031a13c3d20f53a0" translate="yes" xml:space="preserve">
          <source>but a string consisting of two null bytes (the result of &lt;code&gt;&quot;\020\020&quot;
&amp;amp; &quot;\101\101&quot;&lt;/code&gt; ) is not a false value in Perl. You need:</source>
          <target state="translated">ただし、2つのnullバイト（ &lt;code&gt;&quot;\020\020&quot; &amp;amp; &quot;\101\101&quot;&lt;/code&gt; の結果）で構成される文字列は、Perlではfalse値ではありません。必要なもの：</target>
        </trans-unit>
        <trans-unit id="8bc24902f3dcba2a5f69700cadd91dc5b3abff7c" translate="yes" xml:space="preserve">
          <source>but a string consisting of two null bytes (the result of &lt;code&gt;&quot;\020\020&quot; &amp;amp; &quot;\101\101&quot;&lt;/code&gt;) is not a false value in Perl. You need:</source>
          <target state="translated">ただし、2つのヌルバイト（ &lt;code&gt;&quot;\020\020&quot; &amp;amp; &quot;\101\101&quot;&lt;/code&gt; の結果）で構成される文字列は、Perlではfalse値ではありません。必要なもの：</target>
        </trans-unit>
        <trans-unit id="0f5c833e6b8ad19de738251b4d0e198a912780cf" translate="yes" xml:space="preserve">
          <source>but avoids the need to know $cpt's package name.</source>
          <target state="translated">が、$cpt のパッケージ名を知る必要はありません。</target>
        </trans-unit>
        <trans-unit id="14589f2bfb988ba357d07d902945d6c51ace67f6" translate="yes" xml:space="preserve">
          <source>but calling any method that modifies the number directly will result in &lt;b&gt;both&lt;/b&gt; the original and the copy being destroyed:</source>
          <target state="translated">ただし、数値を直接変更するメソッドを呼び出すと、オリジナルとコピーの&lt;b&gt;両方&lt;/b&gt;が破壊されます。</target>
        </trans-unit>
        <trans-unit id="2a43af42a3edda8e818e0b4b4bad6b01d151755a" translate="yes" xml:space="preserve">
          <source>but doesn't spit out extra fields. It's also cheaper not to capture characters if you don't need to.</source>
          <target state="translated">が、余計なフィールドを吐き出さない。また、必要なければ文字をキャプチャしない方が安上がりです。</target>
        </trans-unit>
        <trans-unit id="1517c34ad4cc448c8f1a026222d0e9853c645be4" translate="yes" xml:space="preserve">
          <source>but doesn't spit out the delimiters themselves as extra fields (even though that's the behaviour of &lt;a href=&quot;perlfunc#split&quot;&gt;&quot;split&quot; in perlfunc&lt;/a&gt; when its pattern contains capturing groups). It's also cheaper not to capture characters if you don't need to.</source>
          <target state="translated">ただし、区切り文字自体を追加のフィールドとして吐き出すことはありません（パターンにキャプチャグループが含まれている場合&lt;a href=&quot;perlfunc#split&quot;&gt;、perlfunc&lt;/a&gt;での「分割」の動作ですが）。また、必要がない場合は、文字をキャプチャしない方が安価です。</target>
        </trans-unit>
        <trans-unit id="f05e2fea5090f6357ce9a5813f0a47f400272a36" translate="yes" xml:space="preserve">
          <source>but failing on the</source>
          <target state="translated">には失敗しましたが</target>
        </trans-unit>
        <trans-unit id="15e6be4e78dba9fceaa351875dbb83140728ef88" translate="yes" xml:space="preserve">
          <source>but faster.</source>
          <target state="translated">が、より速くなります。</target>
        </trans-unit>
        <trans-unit id="5db5323d8075957d671047bee13d624d6956eafd" translate="yes" xml:space="preserve">
          <source>but in actual fact, you got</source>
          <target state="translated">しかし、実際には</target>
        </trans-unit>
        <trans-unit id="17fdf913fd722397c7d21c60f0b25c837b358a3c" translate="yes" xml:space="preserve">
          <source>but instead closer to</source>
          <target state="translated">というよりも</target>
        </trans-unit>
        <trans-unit id="9923ef039c4b79c28905e398588d6eb79f30a4c3" translate="yes" xml:space="preserve">
          <source>but instead like this, bearing in mind that this is just a first stab:</source>
          <target state="translated">しかし、代わりにこのように、これが最初の一刺しに過ぎないことを念頭に置いてください。</target>
        </trans-unit>
        <trans-unit id="f46b2388486d21f0ad260e041f0ddfc6e4c238c0" translate="yes" xml:space="preserve">
          <source>but instead you get:</source>
          <target state="translated">しかし、その代わりに、あなたは得ます。</target>
        </trans-unit>
        <trans-unit id="5f0e7a4318bb45ba256d78b7d932a4b745bc31cf" translate="yes" xml:space="preserve">
          <source>but is more efficient. Returns the number of elements in the array following the completed &lt;a href=&quot;#push-ARRAY%2CLIST&quot;&gt;&lt;code&gt;push&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">しかし、より効率的です。&lt;a href=&quot;#push-ARRAY%2CLIST&quot;&gt; &lt;code&gt;push&lt;/code&gt; &lt;/a&gt;が完了した後の配列内の要素の数を返します。</target>
        </trans-unit>
        <trans-unit id="670c9eed4ef45780d6a27c66aa6737f774ca7361" translate="yes" xml:space="preserve">
          <source>but is more efficient. Returns the number of elements in the array following the completed &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">しかし、より効率的です。完了した &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push&lt;/a&gt;&lt;/code&gt; に続く配列の要素数を返します。</target>
        </trans-unit>
        <trans-unit id="ea2b46c116a2c87653b1086423551aaba04ef434" translate="yes" xml:space="preserve">
          <source>but is more efficient. Returns the number of elements in the array following the completed &lt;code&gt;&lt;a href=&quot;push&quot;&gt;push&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">しかし、より効率的です。完了した &lt;code&gt;&lt;a href=&quot;push&quot;&gt;push&lt;/a&gt;&lt;/code&gt; に続く配列の要素数を返します。</target>
        </trans-unit>
        <trans-unit id="9d7f5ee2a89754fd0cb3b08ac980e8a4b203554b" translate="yes" xml:space="preserve">
          <source>but not</source>
          <target state="translated">なくても</target>
        </trans-unit>
        <trans-unit id="430a12560afed6b52405b428e0d46fec40e28bab" translate="yes" xml:space="preserve">
          <source>but not a mixture of both as in:</source>
          <target state="translated">のように両方が混ざっているわけではありません。</target>
        </trans-unit>
        <trans-unit id="07b3726c790e16484102349cd362b2dc216a33e9" translate="yes" xml:space="preserve">
          <source>but rather as class methods:</source>
          <target state="translated">ではなく、クラスのメソッドとして使用します。</target>
        </trans-unit>
        <trans-unit id="9702a21ebfe300cef572f0598fe961666de341c4" translate="yes" xml:space="preserve">
          <source>but remember that there's a startup cost to pay in that case (see above &quot;libperl and Prebinding&quot;).</source>
          <target state="translated">しかし、その場合にはスタートアップコストがかかることを覚えておいてください(上記の「libperlとPrebinding」を参照)。</target>
        </trans-unit>
        <trans-unit id="c6bc845a7a5bdc5bb3d298cf7a7d62fbdb84e0b7" translate="yes" xml:space="preserve">
          <source>but shorter. Parent directory specifications are stripped from the template itself. The &lt;code&gt;TMPDIR&lt;/code&gt; option is ignored if &lt;code&gt;DIR&lt;/code&gt; is set explicitly. Additionally, &lt;code&gt;TMPDIR&lt;/code&gt; is implied if neither a template nor a directory are supplied.</source>
          <target state="translated">しかし、より短い。親ディレクトリの仕様は、テンプレート自体から削除されます。 &lt;code&gt;TMPDIR&lt;/code&gt; の場合、このオプションは無視され &lt;code&gt;DIR&lt;/code&gt; が明示的に設定されています。さらに、テンプレートもディレクトリも指定されていない場合、 &lt;code&gt;TMPDIR&lt;/code&gt; が暗黙指定されます。</target>
        </trans-unit>
        <trans-unit id="acb2133a2923255080591abe8aebb2b94ab97c8d" translate="yes" xml:space="preserve">
          <source>but shorter. Parent directory specifications are stripped from the template itself. The C</source>
          <target state="translated">を使用していますが、より短くなっています。親ディレクトリの指定はテンプレート自体から取り除かれます。テンプレートの</target>
        </trans-unit>
        <trans-unit id="62ddbd66e01cf82298f15351b5c586e039d8e26c" translate="yes" xml:space="preserve">
          <source>but since you anticipate localizing this, you write:</source>
          <target state="translated">が、これをローカライズすることを想定しているので書いていますね。</target>
        </trans-unit>
        <trans-unit id="2033df8e9b543181e41e825d37dc00babfccc375" translate="yes" xml:space="preserve">
          <source>but that is completely accidental.</source>
          <target state="translated">が、それは完全に事故です。</target>
        </trans-unit>
        <trans-unit id="f4adbde7584db1a7c8b596705eb7136fbd8e99a5" translate="yes" xml:space="preserve">
          <source>but that makes no difference compared with the -Duse64bitint because of the &lt;code&gt;cc -64&lt;/code&gt; .</source>
          <target state="translated">ただし、-Duse64bitintと比較すると、 &lt;code&gt;cc -64&lt;/code&gt; のため、違いはありません。</target>
        </trans-unit>
        <trans-unit id="79e9388bb002566e7c1bfafce14408283c05c831" translate="yes" xml:space="preserve">
          <source>but that makes no difference compared with the -Duse64bitint because of the &lt;code&gt;cc -64&lt;/code&gt;.</source>
          <target state="translated">ただし、 &lt;code&gt;cc -64&lt;/code&gt; であるため、-Duse64bitintと比較しても違いはありません。</target>
        </trans-unit>
        <trans-unit id="23d8d8f376b2cff8835a27af9acf7c580e3a9e81" translate="yes" xml:space="preserve">
          <source>but that may be just luck. Other AntiVirus software may have similar issues.</source>
          <target state="translated">が、それは運が良かっただけかもしれません。他のアンチウイルスソフトでも同じような問題があるかもしれません。</target>
        </trans-unit>
        <trans-unit id="ed3d39f2ff5bb81326e9be2a017f7421168dc990" translate="yes" xml:space="preserve">
          <source>but that will be silently converted into &lt;code&gt;[3,-3pi/4]&lt;/code&gt;, since the modulus must be non-negative (it represents the distance to the origin in the complex plane).</source>
          <target state="translated">ただし、モジュラスは負でない必要があるため（複素数平面の原点までの距離を表す）、これは黙って &lt;code&gt;[3,-3pi/4]&lt;/code&gt; に変換されます。</target>
        </trans-unit>
        <trans-unit id="b509dd9066df836513e27436a8d4e7ade7f0b728" translate="yes" xml:space="preserve">
          <source>but the comma is not</source>
          <target state="translated">が、カンマは</target>
        </trans-unit>
        <trans-unit id="9384ff012c073541ee4cf2ad0804fa1a41e628ac" translate="yes" xml:space="preserve">
          <source>but the syntax of Perl doesn't allow this. You need a comma after the string. (Of course, you may consider it a bug that commas between all the constants aren't required, in which case you may feel free to insert commas unless you're using $Term::ANSIColor::AUTORESET or PUSHCOLOR/POPCOLOR.)</source>
          <target state="translated">が、Perlの構文ではこれができません。文字列の後にカンマが必要です。(もちろん、すべての定数の間にカンマが必要ないのはバグだと考えるかもしれませんが、その場合は $Term::ANSIColor::AUTORESET や PUSHCOLOR/POPCOLOR を使用していない限り、カンマを自由に挿入しても構いません)。</target>
        </trans-unit>
        <trans-unit id="f59fd7340224ad23961f9ec29fad42c961b15b81" translate="yes" xml:space="preserve">
          <source>but then $foo no longer contains a glob.</source>
          <target state="translated">が、$foo にグロブが含まれなくなりました。</target>
        </trans-unit>
        <trans-unit id="aa473e44fe39ed7c06c8dfcc198deb8c0788e03b" translate="yes" xml:space="preserve">
          <source>but then cannot see that &quot;En_US&quot; listed by the above-mentioned commands. You may see things like &quot;en_US.ISO8859-1&quot;, but that isn't the same. In this case, try running under a locale that you can list and which somehow matches what you tried. The rules for matching locale names are a bit vague because standardization is weak in this area. See again the &lt;a href=&quot;#Finding-locales&quot;&gt;&quot;Finding locales&quot;&lt;/a&gt; about general rules.</source>
          <target state="translated">しかし、その後、上記のコマンドによってリストされたその「En_US」を見ることができません。「en_US.ISO8859-1」のようなものが表示される場合がありますが、それは同じではありません。この場合、リストできるロケールで実行してみてください。ロケールは、試したものと何らかの形で一致します。この領域では標準化が弱いため、ロケール名を照合するためのルールは少しあいまいです。一般的なルールについては、&lt;a href=&quot;#Finding-locales&quot;&gt;「ロケールの検索」&lt;/a&gt;を再度参照してください。</target>
        </trans-unit>
        <trans-unit id="5e375615161c63e7fc29a1c88b265148575b94e3" translate="yes" xml:space="preserve">
          <source>but then cannot see that &quot;En_US&quot; listed by the above-mentioned commands. You may see things like &quot;en_US.ISO8859-1&quot;, but that isn't the same. In this case, try running under a locale that you can list and which somehow matches what you tried. The rules for matching locale names are a bit vague because standardization is weak in this area. See again the &lt;a href=&quot;#Finding-locales&quot;&gt;Finding locales&lt;/a&gt; about general rules.</source>
          <target state="translated">しかし、上記のコマンドでリストされた &quot;En_US&quot;を見ることができません。「en_US.ISO8859-1」のようなものが表示されることがありますが、同じではありません。この場合は、リストできるロケールの下で実行してみてください。これは、試行した結果と何らかの形で一致します。ロケール名を一致させるためのルールは、この領域の標準化が弱いため、少しあいまいです。一般的な規則については、&lt;a href=&quot;#Finding-locales&quot;&gt;ロケールの検索&lt;/a&gt;をもう一度参照してください。</target>
        </trans-unit>
        <trans-unit id="3cac644780c84e33b8c8e17e1aa72c863bdc551c" translate="yes" xml:space="preserve">
          <source>but then modify it if the current Configure options warrant.</source>
          <target state="translated">しかし、現在のConfigureオプションが保証する場合には、それを修正します。</target>
        </trans-unit>
        <trans-unit id="9bbd6063bd561229cf513f5487e005633f74b476" translate="yes" xml:space="preserve">
          <source>but these will fail:</source>
          <target state="translated">しかし、これらは失敗します。</target>
        </trans-unit>
        <trans-unit id="ca81437b80f2ad6457ea481a09d4317a77895103" translate="yes" xml:space="preserve">
          <source>but this can be altered by passing a second argument to &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; Filter::Simple&lt;/code&gt; or &lt;code&gt;FILTER&lt;/code&gt; (just remember: there's</source>
          <target state="translated">ただし、これは、2番目の引数を渡して &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; Filter::Simple&lt;/code&gt; または &lt;code&gt;FILTER&lt;/code&gt; を&lt;a href=&quot;../functions/use&quot;&gt;使用する&lt;/a&gt;ことで変更できます（覚えておいてください。</target>
        </trans-unit>
        <trans-unit id="bd8dcfd0c5e2bbf5748ea9ea0c6fdd9fe8c26e08" translate="yes" xml:space="preserve">
          <source>but this can be altered by passing a second argument to &lt;code&gt;use Filter::Simple&lt;/code&gt; or &lt;code&gt;FILTER&lt;/code&gt; (just remember: there's</source>
          <target state="translated">ただし、これは、 &lt;code&gt;use Filter::Simple&lt;/code&gt; または &lt;code&gt;FILTER&lt;/code&gt; を使用するために2番目の引数を渡すことで変更できます（覚えておいてください：あります</target>
        </trans-unit>
        <trans-unit id="e691b4ae28b1162e1f37e88fdb2e7fa3a57809e2" translate="yes" xml:space="preserve">
          <source>but this will not</source>
          <target state="translated">されど</target>
        </trans-unit>
        <trans-unit id="50607a6413ca39fe7073dd9a3b641d9d68b5acf2" translate="yes" xml:space="preserve">
          <source>but translates into</source>
          <target state="translated">に翻訳されますが</target>
        </trans-unit>
        <trans-unit id="d32b03d32cae9215bc5e3eedc3a4a9edf0f113a6" translate="yes" xml:space="preserve">
          <source>but under a French locale</source>
          <target state="translated">しかし、フランスのロケールの下で</target>
        </trans-unit>
        <trans-unit id="9006db57193ae835a928e37c6463a7cbc01420e8" translate="yes" xml:space="preserve">
          <source>but which does not &lt;code&gt;chdir&lt;/code&gt;.</source>
          <target state="translated">しかし、これは &lt;code&gt;chdir&lt;/code&gt; ではありません。</target>
        </trans-unit>
        <trans-unit id="02bc126135ab3f34b2cc7b1c93207acc39efb18e" translate="yes" xml:space="preserve">
          <source>but with &lt;code&gt;extract_delimited&lt;/code&gt; it can be simplified to:</source>
          <target state="translated">しかし、 &lt;code&gt;extract_delimited&lt;/code&gt; を使用すると、次のように簡略化できます。</target>
        </trans-unit>
        <trans-unit id="5a3caba3b95cb830b6cd3bb3694f24d055d2aa69" translate="yes" xml:space="preserve">
          <source>but you have to say</source>
          <target state="translated">と言わざるを得ない</target>
        </trans-unit>
        <trans-unit id="790b666b737305903b34914bd264529abbf92746" translate="yes" xml:space="preserve">
          <source>but you should be aware that in this form, the &lt;code&gt;..&lt;/code&gt; operator creates a list of all integers in the range, which can take a lot of memory for large ranges. However, the problem does not occur when using &lt;code&gt;..&lt;/code&gt; within a &lt;code&gt;for&lt;/code&gt; loop, because in that case the range operator is optimized to</source>
          <target state="translated">ただし、この形式では、 &lt;code&gt;..&lt;/code&gt; 演算子が範囲内のすべての整数のリストを作成することに注意してください。これは、範囲が大きい場合に大量のメモリを消費する可能性があります。ただし、 &lt;code&gt;for&lt;/code&gt; ループ内で &lt;code&gt;..&lt;/code&gt; を使用する場合、問題は発生しません。その場合、範囲演算子が最適化されるためです。</target>
        </trans-unit>
        <trans-unit id="920f4cbc6f3b3ccfd1fe8ce2d2eca6336d87c327" translate="yes" xml:space="preserve">
          <source>but your system might have more.</source>
          <target state="translated">しかし、あなたのシステムはもっとあるかもしれません。</target>
        </trans-unit>
        <trans-unit id="0a0df778ce40c92b4130fd3cc1bc732e0dcd8097" translate="yes" xml:space="preserve">
          <source>but your version of perl is compiled without perlio, and this form of open is not supported.</source>
          <target state="translated">が、あなたのバージョンのperlはperlioなしでコンパイルされており、この形式のオープンはサポートされていません。</target>
        </trans-unit>
        <trans-unit id="f6cf3e61369618c4d062082f34a8e4eb6950efaa" translate="yes" xml:space="preserve">
          <source>but, because &lt;code&gt;&quot;*&quot;&lt;/code&gt; is higher precedence than named operators:</source>
          <target state="translated">ただし、 &lt;code&gt;&quot;*&quot;&lt;/code&gt; は名前付き演算子よりも優先順位が高いため、</target>
        </trans-unit>
        <trans-unit id="2e58b63df0271d9d91bb2fb25b1d674542ccb1b2" translate="yes" xml:space="preserve">
          <source>bxor()</source>
          <target state="translated">bxor()</target>
        </trans-unit>
        <trans-unit id="408158643ed564c72fa0921826f8294d71ccbf7c" translate="yes" xml:space="preserve">
          <source>by</source>
          <target state="translated">by</target>
        </trans-unit>
        <trans-unit id="b562123d16a87ef1dd2d50e459ddac28857a828c" translate="yes" xml:space="preserve">
          <source>by &lt;code&gt;BEGIN{ $/ = &quot;\0digits&quot;; }&lt;/code&gt; .</source>
          <target state="translated">で &lt;code&gt;BEGIN{ $/ = &quot;\0digits&quot;; }&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="693c89736c2070fd31c626a46716305d2dcd07f7" translate="yes" xml:space="preserve">
          <source>by &lt;code&gt;BEGIN{ $/ = &quot;\0digits&quot;; }&lt;/code&gt;.</source>
          <target state="translated">で &lt;code&gt;BEGIN{ $/ = &quot;\0digits&quot;; }&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5d7f03736d7aee983a0f27b66b3cd7bd23ae58bf" translate="yes" xml:space="preserve">
          <source>by Andreas Koenig &amp;lt;&lt;code&gt;k@anna.in-berlin.de&lt;/code&gt; &amp;gt; and Tim Bunce.</source>
          <target state="translated">Andreas Koenig &amp;lt; &lt;code&gt;k@anna.in-berlin.de&lt;/code&gt; &amp;gt;およびTim Bunceによる。</target>
        </trans-unit>
        <trans-unit id="c23116b526d815e85bf1c020a76bc213b62b8265" translate="yes" xml:space="preserve">
          <source>by Andreas Koenig &amp;lt;&lt;code&gt;k@anna.in-berlin.de&lt;/code&gt;&amp;gt; and Tim Bunce.</source>
          <target state="translated">Andreas Koenig &amp;lt; &lt;code&gt;k@anna.in-berlin.de&lt;/code&gt; &amp;gt;とTimBunceによる。</target>
        </trans-unit>
        <trans-unit id="58b9be2f90b4b5e0f72bcc70fc011d637b555279" translate="yes" xml:space="preserve">
          <source>by Jeffrey Friedl (</source>
          <target state="translated">ジェフリー・フリードル (</target>
        </trans-unit>
        <trans-unit id="75c037b29723680ee8b90b4bf48df2df3306d348" translate="yes" xml:space="preserve">
          <source>by Jeffrey Friedl (&lt;a href=&quot;http://oreilly.com/catalog/9780596528126/&quot;&gt;http://oreilly.com/catalog/9780596528126/&lt;/a&gt;) for a thorough grounding and reference on the topic.</source>
          <target state="translated">ジェフリー・フリードル（&lt;a href=&quot;http://oreilly.com/catalog/9780596528126/&quot;&gt;http://oreilly.com/catalog/9780596528126/&lt;/a&gt;）による、このトピックに関する徹底的な根拠と参照。</target>
        </trans-unit>
        <trans-unit id="b7d25fddceaf2bede4f0c1508fc9756858ff0f82" translate="yes" xml:space="preserve">
          <source>by Jeffrey Friedl (published by O'Reilly, ISBN 1556592-257-3).</source>
          <target state="translated">ジェフリー・フリードル著(オライリー著、ISBN 1556592-257-3)。</target>
        </trans-unit>
        <trans-unit id="01bcdce954a667cee1cea208aa989626d65f08eb" translate="yes" xml:space="preserve">
          <source>by Jeffrey Friedl gives a wonderful discussion of this and other efficiency issues.</source>
          <target state="translated">Jeffrey Friedl氏は、この問題とその他の効率性の問題について素晴らしい議論をしています。</target>
        </trans-unit>
        <trans-unit id="292b840af5da5995eb868afee859b139a4198e22" translate="yes" xml:space="preserve">
          <source>by Jeffrey Friedl, published by O'Reilly and Associates.</source>
          <target state="translated">ジェフリー・フリードル著、オライリー&amp;アソシエイツ刊。</target>
        </trans-unit>
        <trans-unit id="a030535d3a4b6473025f29bd648142b0bfd7bded" translate="yes" xml:space="preserve">
          <source>by Jeffrey Friedl. He explains how the regular expressions engine works and why some patterns are surprisingly inefficient. Once you understand how perl applies regular expressions, you can tune them for individual situations.</source>
          <target state="translated">ジェフリー・フリードル著。正規表現エンジンがどのように機能するのか、また、いくつかのパターンが驚くほど効率が悪い理由を解説しています。perlがどのように正規表現を適用するのかを理解すれば、個々の状況に合わせてチューニングすることができます。</target>
        </trans-unit>
        <trans-unit id="0662c80629deb9e56e36b3c8498a287fee6d6d19" translate="yes" xml:space="preserve">
          <source>by Sean M. Burke and Jordan Lachler</source>
          <target state="translated">ショーン・M・バークとジョーダン・ラハラーによる</target>
        </trans-unit>
        <trans-unit id="aa3b42830418e798c60825381fd17fa38f07279b" translate="yes" xml:space="preserve">
          <source>by W. Richard Stevens (published by Prentice-Hall). Most books on networking address the subject from the perspective of a C programmer; translation to Perl is left as an exercise for the reader.</source>
          <target state="translated">W.リチャード・スティーブンス著 (Prentice-Hall出版)。ネットワーキングに関するほとんどの本は、C プログラマの視点からこのテーマを扱っています。</target>
        </trans-unit>
        <trans-unit id="aa39ccc1df65d58c55c7ad4408539c603519c108" translate="yes" xml:space="preserve">
          <source>by Yves Orton, 2006.</source>
          <target state="translated">イヴ・オートン著、2006年</target>
        </trans-unit>
        <trans-unit id="3e3c60c9a79bc01108d963cab52a79402baacea3" translate="yes" xml:space="preserve">
          <source>by compiling using gcc with the flag &lt;code&gt;-pg&lt;/code&gt; . Either edit</source>
          <target state="translated">フラグ &lt;code&gt;-pg&lt;/code&gt; を付けてgccを使用してコンパイルする。どちらかを編集</target>
        </trans-unit>
        <trans-unit id="19f7896cab4219f100a419456e0bdd3ba2ec060f" translate="yes" xml:space="preserve">
          <source>by compiling using gcc with the flag &lt;code&gt;-pg&lt;/code&gt;. Either edit</source>
          <target state="translated">フラグ &lt;code&gt;-pg&lt;/code&gt; を指定してgccを使用してコンパイルします。どちらかを編集</target>
        </trans-unit>
        <trans-unit id="f5d400126bc4b2b2a0be4cb6f504f4a728dab5e6" translate="yes" xml:space="preserve">
          <source>by compiling using gcc with the flags &lt;code&gt;-fprofile-arcs -ftest-coverage&lt;/code&gt; . Either edit</source>
          <target state="translated">フラグ &lt;code&gt;-fprofile-arcs -ftest-coverage&lt;/code&gt; を付けてgccを使用してコンパイルします。どちらかを編集</target>
        </trans-unit>
        <trans-unit id="f8928b51e9787b60afbcaada877671cd348377c0" translate="yes" xml:space="preserve">
          <source>by compiling using gcc with the flags &lt;code&gt;-fprofile-arcs -ftest-coverage&lt;/code&gt;. Either edit</source>
          <target state="translated">フラグ &lt;code&gt;-fprofile-arcs -ftest-coverage&lt;/code&gt; してgccを使用してコンパイルします。どちらかを編集</target>
        </trans-unit>
        <trans-unit id="ed704a971a09b89d0355af9ed7f590b8d16afef1" translate="yes" xml:space="preserve">
          <source>by default</source>
          <target state="translated">デフォルトでは</target>
        </trans-unit>
        <trans-unit id="b995af8a25b522b801201b66c682fc8351af8011" translate="yes" xml:space="preserve">
          <source>by default the object is constructed as if &lt;code&gt;tempfile&lt;/code&gt; was called without options, but with the additional behaviour that the temporary file is removed by the object destructor if UNLINK is set to true (the default).</source>
          <target state="translated">デフォルトでは、オブジェクトはオプションなしで &lt;code&gt;tempfile&lt;/code&gt; が呼び出されたかのように構築されますが、UNLINKがtrue（デフォルト）に設定されている場合、一時ファイルがオブジェクトデストラクタによって削除されるという追加の動作があります。</target>
        </trans-unit>
        <trans-unit id="4e935cb2d694a730a179e0fab14594701e7b71b6" translate="yes" xml:space="preserve">
          <source>by default the object is constructed as if C</source>
          <target state="translated">デフォルトでは、オブジェクトは C</target>
        </trans-unit>
        <trans-unit id="76e18cd7b5438dfa50021afe47ddf6798a2380ea" translate="yes" xml:space="preserve">
          <source>by default, and this file is read by the &lt;code&gt;dprofpp&lt;/code&gt; program, which is already installed as part of the &lt;code&gt;Devel::DProf&lt;/code&gt; distribution. If you call &lt;code&gt;dprofpp&lt;/code&gt; with no options, it will read the</source>
          <target state="translated">デフォルトでは、このファイルは、 &lt;code&gt;dprofpp&lt;/code&gt; プログラムによって読み取られます。このプログラムは、 &lt;code&gt;Devel::DProf&lt;/code&gt; ディストリビューションの一部としてすでにインストールされています。オプションなしで &lt;code&gt;dprofpp&lt;/code&gt; を呼び出すと、</target>
        </trans-unit>
        <trans-unit id="ab0866dc7f2a672bc7b6be003ac55641a8c5066d" translate="yes" xml:space="preserve">
          <source>by default. Human readable reports can be generated from here by using the supplied &lt;code&gt;nytprofhtml&lt;/code&gt; (HTML output) and &lt;code&gt;nytprofcsv&lt;/code&gt; (CSV output) programs. We've used the Unix system &lt;code&gt;html2text&lt;/code&gt; utility to convert the</source>
          <target state="translated">デフォルトでは。提供されている &lt;code&gt;nytprofhtml&lt;/code&gt; （HTML出力）および &lt;code&gt;nytprofcsv&lt;/code&gt; （CSV出力）プログラムを使用して、人間が読めるレポートをここから生成できます。Unixシステムの &lt;code&gt;html2text&lt;/code&gt; ユーティリティを使用して、</target>
        </trans-unit>
        <trans-unit id="0869a111f636cdf936dab450ab2b6d19f6144956" translate="yes" xml:space="preserve">
          <source>by doing something like:</source>
          <target state="translated">のようなことをすることで</target>
        </trans-unit>
        <trans-unit id="76d6fc20656e3c76019aabc723d52e70642bd78d" translate="yes" xml:space="preserve">
          <source>by endianness</source>
          <target state="translated">エンディアンス</target>
        </trans-unit>
        <trans-unit id="b98507aaeb9a1c77075f94408b252b18efe599de" translate="yes" xml:space="preserve">
          <source>by just using the name of the program).</source>
          <target state="translated">プログラム名だけで)。)</target>
        </trans-unit>
        <trans-unit id="2c5bb516b1987dabf813c98e4515eda07d81aaa5" translate="yes" xml:space="preserve">
          <source>by name</source>
          <target state="translated">名指しで</target>
        </trans-unit>
        <trans-unit id="5e3f04f999831235b9b402a22b7e7de4ce80d90f" translate="yes" xml:space="preserve">
          <source>by size</source>
          <target state="translated">大きさ別</target>
        </trans-unit>
        <trans-unit id="d5d90792858f3b6ce0d3e628c5cd82bf536aa2e2" translate="yes" xml:space="preserve">
          <source>by the DynaLoader when the shared object is loaded. See BSLOADLIBS below.</source>
          <target state="translated">共有オブジェクトがロードされたときにDynaLoaderによってロードされます。後述の BSLOADLIBS を参照してください。</target>
        </trans-unit>
        <trans-unit id="ac25d943ca16593ccd5b638578371920d418f826" translate="yes" xml:space="preserve">
          <source>by the Perl interpreter itself.</source>
          <target state="translated">Perl インタプリタ自身によるものです。</target>
        </trans-unit>
        <trans-unit id="c2a3a0641c2dba021dc10a286962de22e15df633" translate="yes" xml:space="preserve">
          <source>by the Perl interpreter itself. This attribute's default value is &lt;b&gt;TRUE&lt;/b&gt;. If you want to search only specific directories, set $self-&amp;gt;inc(0) before calling $inc-&amp;gt;survey or $inc-&amp;gt;find.</source>
          <target state="translated">Perlインタプリタ自体によって。この属性のデフォルト値は&lt;b&gt;TRUE&lt;/b&gt;です。特定のディレクトリのみを検索する場合は、$ inc-&amp;gt; surveyまたは$ inc-&amp;gt; findを呼び出す前に$ self-&amp;gt; inc（0）を設定します。</target>
        </trans-unit>
        <trans-unit id="1899511ea754deb578535a8d92e9165fcbc88e82" translate="yes" xml:space="preserve">
          <source>by the ld command when the perl binary is linked with the extension library. See EXTRALIBS below.</source>
          <target state="translated">Perl バイナリが拡張ライブラリとリンクされている場合は、ld コマンドで指定します。以下の EXTRALIBS を参照してください。</target>
        </trans-unit>
        <trans-unit id="b5f079545f5d4621415bdb75f7dcd595e58fae02" translate="yes" xml:space="preserve">
          <source>by the ld command when the shared object is built/linked. See LDLOADLIBS below.</source>
          <target state="translated">共有オブジェクトがビルド/リンクされているときに、ldコマンドで 後述の LDLOADLIBS を参照してください。</target>
        </trans-unit>
        <trans-unit id="7b420b941a02cf1568114573e2381fb3ec4ef20a" translate="yes" xml:space="preserve">
          <source>by the main thread (thread ID = 0) of a script. Therefore, setting up signal handlers in threads for purposes other than &lt;a href=&quot;#THREAD-SIGNALLING&quot;&gt;&quot;THREAD SIGNALLING&quot;&lt;/a&gt; as documented above will not accomplish what is intended.</source>
          <target state="translated">スクリプトのメインスレッド（スレッドID = 0）による。したがって、上記の&lt;a href=&quot;#THREAD-SIGNALLING&quot;&gt;「THREAD SIGNALLING」&lt;/a&gt;以外の目的でスレッドにシグナルハンドラーを設定しても、意図したとおりには実行されません。</target>
        </trans-unit>
        <trans-unit id="fb53580843b764dd08d059a4ffde7b32707736ab" translate="yes" xml:space="preserve">
          <source>by the main thread (thread ID = 0) of a script. Therefore, setting up signal handlers in threads for purposes other than &lt;a href=&quot;#THREAD-SIGNALLING&quot;&gt;THREAD SIGNALLING&lt;/a&gt; as documented above will not accomplish what is intended.</source>
          <target state="translated">スクリプトのメインスレッド（スレッドID = 0）。したがって、以外の目的のためのスレッドでシグナルハンドラをセットアップ&lt;a href=&quot;#THREAD-SIGNALLING&quot;&gt;THREADシグナリング&lt;/a&gt;上記文書化することは意図されているものを達成しないであろう。</target>
        </trans-unit>
        <trans-unit id="08b3b402ddb7fb46a261bf00b77d547af5513e6c" translate="yes" xml:space="preserve">
          <source>by their very definition. It is of course possible to write a nearly instantaneous program, but it's not going to do very much, here's a very efficient one:</source>
          <target state="translated">は、その定義からして、非常に効率的なものです。もちろんほぼ瞬間的なプログラムを 書くことは可能ですが 大したことはできそうにありません ここでは非常に効率的なものを紹介します</target>
        </trans-unit>
        <trans-unit id="cd5f3427a5b91cc9194daa4a03c9e849e100f09d" translate="yes" xml:space="preserve">
          <source>by this:</source>
          <target state="translated">これで</target>
        </trans-unit>
        <trans-unit id="90078d2f7170e62d296450a6cf5226698468ce9b" translate="yes" xml:space="preserve">
          <source>by using calls like this one;</source>
          <target state="translated">このような呼び出しを使うことで</target>
        </trans-unit>
        <trans-unit id="cda65ed6f996204ff01e4d76e80bf0eb135783c9" translate="yes" xml:space="preserve">
          <source>by-category</source>
          <target state="translated">by-category</target>
        </trans-unit>
        <trans-unit id="52d31c8a6d5578bdb0ba6c7bacaa72d3064e7f98" translate="yes" xml:space="preserve">
          <source>by-module</source>
          <target state="translated">by-module</target>
        </trans-unit>
        <trans-unit id="8cf1783fa99f62ca581f6fe8f3cd66b0f9ab9fc3" translate="yes" xml:space="preserve">
          <source>byte</source>
          <target state="translated">byte</target>
        </trans-unit>
        <trans-unit id="721b9babe5628970cc09024b3a1a9b932d9e0924" translate="yes" xml:space="preserve">
          <source>byte order marks</source>
          <target state="translated">バイトオーダマーク</target>
        </trans-unit>
        <trans-unit id="f0a787a9f181c667c66e67359a5c84c3f31a86d0" translate="yes" xml:space="preserve">
          <source>bytecode</source>
          <target state="translated">bytecode</target>
        </trans-unit>
        <trans-unit id="beb025390e6b44933a6bf16e1bc9c499925f957e" translate="yes" xml:space="preserve">
          <source>byteorder.U</source>
          <target state="translated">byteorder.U</target>
        </trans-unit>
        <trans-unit id="daf529a73101c2be626b99fc6938163e7a27620b" translate="yes" xml:space="preserve">
          <source>bytes</source>
          <target state="translated">bytes</target>
        </trans-unit>
        <trans-unit id="704a9eedbf658e779eedc2c2e635afc1745b9587" translate="yes" xml:space="preserve">
          <source>bytes - Perl pragma to expose the individual bytes of characters</source>
          <target state="translated">bytes-文字の個々のバイトを公開するための Perl のプラグマ.</target>
        </trans-unit>
        <trans-unit id="305428c11e612a57e6dca43980d6a15186d3eedd" translate="yes" xml:space="preserve">
          <source>bytes - Perl pragma to force byte semantics rather than character semantics</source>
          <target state="translated">bytes-文字のセマンティクスではなくバイトのセマンティクスを強制する Perl のプラグマ</target>
        </trans-unit>
        <trans-unit id="74e04eb86371917242f5f42e7825ff63f37fa8b7" translate="yes" xml:space="preserve">
          <source>bytes of data from</source>
          <target state="translated">からのデータのバイト数</target>
        </trans-unit>
        <trans-unit id="a6a3035438f8082d9bbe01b48538b14cd1cebf95" translate="yes" xml:space="preserve">
          <source>bytes of data into</source>
          <target state="translated">バイトのデータを</target>
        </trans-unit>
        <trans-unit id="d285f82774e0d86e76e8e37aedf166837530e229" translate="yes" xml:space="preserve">
          <source>bytes of the character. The UTF8 flag is turned off. Returns nothing.</source>
          <target state="translated">文字のバイト数を指定します。UTF8フラグはオフになっています。何も返しません。</target>
        </trans-unit>
        <trans-unit id="a8d7a1f72563dfcee3b9751f0008a7ef3b69a283" translate="yes" xml:space="preserve">
          <source>bytes::substr() does not work as an lvalue().</source>
          <target state="translated">bytes::substr()が lvalue()として動作しない。</target>
        </trans-unit>
        <trans-unit id="f937c564cb36928d98113040f718bc6dd5d3ca0b" translate="yes" xml:space="preserve">
          <source>bytes_cmp_utf8</source>
          <target state="translated">bytes_cmp_utf8</target>
        </trans-unit>
        <trans-unit id="03e7ed3ca3790aecfc45563afee0cb2ff5bd7a7f" translate="yes" xml:space="preserve">
          <source>bytes_from_utf8</source>
          <target state="translated">bytes_from_utf8</target>
        </trans-unit>
        <trans-unit id="5b3e650260dc94f6fb70b63ba8bfd7647d736688" translate="yes" xml:space="preserve">
          <source>bytes_read ()</source>
          <target state="translated">バイト読み取り</target>
        </trans-unit>
        <trans-unit id="192879142f96e8cb16867dcd093a7b74a3469850" translate="yes" xml:space="preserve">
          <source>bytes_to_utf8</source>
          <target state="translated">bytes_to_utf8</target>
        </trans-unit>
        <trans-unit id="84e0021d4ef7f34f6245f64e5b4fd6ad47f36e1e" translate="yes" xml:space="preserve">
          <source>bzero()</source>
          <target state="translated">bzero()</target>
        </trans-unit>
        <trans-unit id="18966dcea477ed087e87037c4255cd180be7d19e" translate="yes" xml:space="preserve">
          <source>bzip2</source>
          <target state="translated">bzip2</target>
        </trans-unit>
        <trans-unit id="8dddd252e4acf3054b159272da897404d0ef9a10" translate="yes" xml:space="preserve">
          <source>bzip2 $input_filename_or_reference =&amp;gt; $output_filename_or_reference [, OPTS]</source>
          <target state="translated">bzip2 $ input_filename_or_reference =&amp;gt; $ output_filename_or_reference [、OPTS]</target>
        </trans-unit>
        <trans-unit id="84a516841ba77a5b4648de2cd0dfcb30ea46dbb4" translate="yes" xml:space="preserve">
          <source>c</source>
          <target state="translated">c</target>
        </trans-unit>
        <trans-unit id="fd1b715eedecae251e0ef96fd721ea1904207f3b" translate="yes" xml:space="preserve">
          <source>c [line|sub]</source>
          <target state="translated">c [line|sub]</target>
        </trans-unit>
        <trans-unit id="9bf518bb1d83f8f8b94f6a75e535c0324b999e9e" translate="yes" xml:space="preserve">
          <source>c2ph</source>
          <target state="translated">c2ph</target>
        </trans-unit>
        <trans-unit id="aab64cc4582b2a7ac50ea4d29f8baf504eb3ffd7" translate="yes" xml:space="preserve">
          <source>c2ph, pstruct - Dump C structures as generated from &lt;code&gt;cc -g -S&lt;/code&gt; stabs</source>
          <target state="translated">c2ph、pstruct- &lt;code&gt;cc -g -S&lt;/code&gt; stabs から生成されたC構造体をダンプします</target>
        </trans-unit>
        <trans-unit id="16b4ae8ef0e46ee8dd3b2cbaefcb0f61f3bb0863" translate="yes" xml:space="preserve">
          <source>cBOOL</source>
          <target state="translated">cBOOL</target>
        </trans-unit>
        <trans-unit id="ed059a6df813b519fdb6d15158f569b8baa86ab5" translate="yes" xml:space="preserve">
          <source>c_o (o)</source>
          <target state="translated">c_o</target>
        </trans-unit>
        <trans-unit id="cd027e134354087b398512762bc4fd137c292919" translate="yes" xml:space="preserve">
          <source>c_o (override)</source>
          <target state="translated">c_o (オーバーライド)</target>
        </trans-unit>
        <trans-unit id="b03592806efabfeeb709f5a70a7c172669b00538" translate="yes" xml:space="preserve">
          <source>cache</source>
          <target state="translated">cache</target>
        </trans-unit>
        <trans-unit id="4d2e4f51a884a410929c5ee17aaacc9fab869689" translate="yes" xml:space="preserve">
          <source>cache_metadata</source>
          <target state="translated">cache_metadata</target>
        </trans-unit>
        <trans-unit id="d85b8f213b4403a79accd9308a80dbb19a384193" translate="yes" xml:space="preserve">
          <source>cachedir</source>
          <target state="translated">cachedir</target>
        </trans-unit>
        <trans-unit id="3bd773e86fd5c86c7cdc6f0cd2327b9dc2862c38" translate="yes" xml:space="preserve">
          <source>cacheout EXPR</source>
          <target state="translated">キャッシュアウトエックスピーアール</target>
        </trans-unit>
        <trans-unit id="1c6318679b9ed5ee78a1c37484d918ff77ac07ef" translate="yes" xml:space="preserve">
          <source>cacheout MODE, EXPR</source>
          <target state="translated">キャッシュアウト MODE,EXPR</target>
        </trans-unit>
        <trans-unit id="ecce20b9ec4855087467bfaecc68195be1813592" translate="yes" xml:space="preserve">
          <source>caches, one for scalar values and one for list values. When your function is called in scalar context, its return value is cached in one hash, and when your function is called in list context, its value is cached in the other hash. You can control the caching behavior of both contexts independently with these options.</source>
          <target state="translated">キャッシュはスカラ値用とリスト値用に分かれています。関数がスカラコンテキストで呼び出された場合、その戻り値は一方のハッシュにキャッシュされ、関数がリストコンテキストで呼び出された場合、その値はもう一方のハッシュにキャッシュされます。これらのオプションを使用して、両方のコンテキストのキャッシュ動作を独立して制御することができます。</target>
        </trans-unit>
        <trans-unit id="10bf64fff8ad28b9eceb40ae05ccd8d500f3edce" translate="yes" xml:space="preserve">
          <source>calcrpn VARIABLE { EXPRESSION }</source>
          <target state="translated">calcrpn VARIABLE{EXPRESSION }</target>
        </trans-unit>
        <trans-unit id="6066fec73bb15293850c8fc3846983a936a7356a" translate="yes" xml:space="preserve">
          <source>calculated</source>
          <target state="translated">calculated</target>
        </trans-unit>
        <trans-unit id="0d68cbf5b8fc5792e2b012765c8d99152d921657" translate="yes" xml:space="preserve">
          <source>calculator indeed.</source>
          <target state="translated">計算機</target>
        </trans-unit>
        <trans-unit id="bc8d8647b02deea0ab3e715c220d041ee78cc19d" translate="yes" xml:space="preserve">
          <source>call</source>
          <target state="translated">call</target>
        </trans-unit>
        <trans-unit id="d26793c374d42f2321b52b9ab8c04fd33c02f47c" translate="yes" xml:space="preserve">
          <source>call &lt;code&gt;iota&lt;/code&gt; in scalar context and cache the result, but the &lt;code&gt;SCALAR_CACHE =&amp;gt; 'MERGE'&lt;/code&gt; option says not to do that, but to use the cache list-context value instead. But it cannot return a list of seven elements in a scalar context. In this case &lt;code&gt;$i7&lt;/code&gt; will receive the &lt;b&gt;first element&lt;/b&gt; of the cached list value, namely 7.</source>
          <target state="translated">スカラコンテキストで &lt;code&gt;iota&lt;/code&gt; を呼び出して結果をキャッシュしますが、 &lt;code&gt;SCALAR_CACHE =&amp;gt; 'MERGE'&lt;/code&gt; オプションはそれを行わず、代わりにキャッシュリストコンテキスト値を使用します。ただし、スカラーコンテキストで7つの要素のリストを返すことはできません。この場合、 &lt;code&gt;$i7&lt;/code&gt; はキャッシュされたリスト値の&lt;b&gt;最初の要素&lt;/b&gt;、つまり7 を受け取ります。</target>
        </trans-unit>
        <trans-unit id="aea66ab9134e8035b60e502b44c9255902019bb8" translate="yes" xml:space="preserve">
          <source>call a method without void context. Use &lt;a href=&quot;autodie&quot;&gt;autodie&lt;/a&gt; instead if you need to be able to disable autodying/Fatal behaviour for a small block of code.</source>
          <target state="translated">voidコンテキストなしでメソッドを呼び出します。小さなコードブロックの自動実行/致命的な動作を無効にできるようにする必要がある場合は、代わりに&lt;a href=&quot;autodie&quot;&gt;自動実行&lt;/a&gt;を使用してください。</target>
        </trans-unit>
        <trans-unit id="a35b8b477980036b6f41e918ae640a3c562367e0" translate="yes" xml:space="preserve">
          <source>call an overridden &lt;code&gt;isa&lt;/code&gt; method in any class. Instead, use &lt;code&gt;reftype&lt;/code&gt; from &lt;a href=&quot;Scalar::Util&quot;&gt;Scalar::Util&lt;/a&gt; for the first case:</source>
          <target state="translated">任意のクラスでオーバーライドされた &lt;code&gt;isa&lt;/code&gt; メソッドを呼び出します。代わりに、最初のケースでは&lt;a href=&quot;Scalar::Util&quot;&gt;Scalar :: Utilの&lt;/a&gt; &lt;code&gt;reftype&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="07ee532dfc7a5c9512fdcf2b4ab1a03d4a1d1bd8" translate="yes" xml:space="preserve">
          <source>call an overridden &lt;code&gt;isa&lt;/code&gt; method in any class. Instead, use &lt;code&gt;reftype&lt;/code&gt; from &lt;a href=&quot;scalar/util&quot;&gt;Scalar::Util&lt;/a&gt; for the first case:</source>
          <target state="translated">任意のクラスでオーバーライドされた &lt;code&gt;isa&lt;/code&gt; メソッドを呼び出します。代わりに、最初のケースでは&lt;a href=&quot;scalar/util&quot;&gt;Scalar :: Utilの&lt;/a&gt; &lt;code&gt;reftype&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="75de3cdc4f7d6eeec6a5710a33b9b4b76a965466" translate="yes" xml:space="preserve">
          <source>call by reference</source>
          <target state="translated">さんしょうよびだし</target>
        </trans-unit>
        <trans-unit id="4eaf4cc023dc61b8a07f4a1a444503dad24b7c33" translate="yes" xml:space="preserve">
          <source>call by value</source>
          <target state="translated">値呼び出し</target>
        </trans-unit>
        <trans-unit id="0a301a28fa31b59f5762db2f0e4dae07ecf49b7f" translate="yes" xml:space="preserve">
          <source>call in call_Subtract reads:</source>
          <target state="translated">call_Subtractでの呼び出しが読み込まれます。</target>
        </trans-unit>
        <trans-unit id="09af65b77373b270115d65e0cc4152963620d518" translate="yes" xml:space="preserve">
          <source>call them indirectly:</source>
          <target state="translated">間接的に呼ぶ。</target>
        </trans-unit>
        <trans-unit id="bea45b65dbd679ba81c088f23290abf3a9afb91e" translate="yes" xml:space="preserve">
          <source>call to &lt;code&gt;filter_read&lt;/code&gt; or &lt;code&gt;filter_read_exact&lt;/code&gt; .</source>
          <target state="translated">呼び出し &lt;code&gt;filter_read&lt;/code&gt; または &lt;code&gt;filter_read_exact&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="65e4aaaab79c0d55c17e54353edfbb0030f9345a" translate="yes" xml:space="preserve">
          <source>call to &lt;code&gt;filter_read&lt;/code&gt; or &lt;code&gt;filter_read_exact&lt;/code&gt;.</source>
          <target state="translated">呼び出し &lt;code&gt;filter_read&lt;/code&gt; または &lt;code&gt;filter_read_exact&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6c949d2de33459ca2d9973d9bf5448c9e6bdb1f6" translate="yes" xml:space="preserve">
          <source>call-back unit so that long doubles can be formatted without loss of precision.</source>
          <target state="translated">コールバックユニットを使用して、長いダブルスを精度を落とさずにフォーマットできるようにしました。</target>
        </trans-unit>
        <trans-unit id="01eeb3a3ce36a45d2ed8b640d6a38cc855a0aea9" translate="yes" xml:space="preserve">
          <source>call.</source>
          <target state="translated">call.</target>
        </trans-unit>
        <trans-unit id="a0a7cf13bc05b8452a04f1e2d381330099f264f0" translate="yes" xml:space="preserve">
          <source>call. For example:</source>
          <target state="translated">を呼び出します。例えば</target>
        </trans-unit>
        <trans-unit id="fa4e53e51ebd0d0df17edd40ee676dc6179cfe87" translate="yes" xml:space="preserve">
          <source>call_*</source>
          <target state="translated">call_*</target>
        </trans-unit>
        <trans-unit id="5558c19f08af12e8462cd902d73078dd2305080f" translate="yes" xml:space="preserve">
          <source>call_AddSubScalar</source>
          <target state="translated">call_AddSubScalar</target>
        </trans-unit>
        <trans-unit id="90ff1a8ade713598c1646d49e8bd8e0ab53cf48c" translate="yes" xml:space="preserve">
          <source>call_AddSubtract</source>
          <target state="translated">call_AddSubtract</target>
        </trans-unit>
        <trans-unit id="2854630a13713d11a8b6885e7f79056447c62688" translate="yes" xml:space="preserve">
          <source>call_LeftString</source>
          <target state="translated">call_LeftString</target>
        </trans-unit>
        <trans-unit id="18631234b2a7bd26d823fa54e3df7188c8e989c8" translate="yes" xml:space="preserve">
          <source>call_Subtract</source>
          <target state="translated">call_Subtract</target>
        </trans-unit>
        <trans-unit id="d4a0b92fad95fc628341a5a87ec98cabb9a02a7d" translate="yes" xml:space="preserve">
          <source>call_argv</source>
          <target state="translated">call_argv</target>
        </trans-unit>
        <trans-unit id="b86ca5a7c01a8263e69196692db525f9c3e43f10" translate="yes" xml:space="preserve">
          <source>call_atexit</source>
          <target state="translated">call_atexit</target>
        </trans-unit>
        <trans-unit id="d3dedbd48597465617b49ff3add69e35b2273df4" translate="yes" xml:space="preserve">
          <source>call_list</source>
          <target state="translated">call_list</target>
        </trans-unit>
        <trans-unit id="6f635f2379199699013477fde9934d1b25b2ed69" translate="yes" xml:space="preserve">
          <source>call_method</source>
          <target state="translated">call_method</target>
        </trans-unit>
        <trans-unit id="c9b67be4160b43f537f38ed300d8d7d67ad56af8" translate="yes" xml:space="preserve">
          <source>call_pv</source>
          <target state="translated">call_pv</target>
        </trans-unit>
        <trans-unit id="8cecf04d9c1fddec48927de0af20f7d816c7d167" translate="yes" xml:space="preserve">
          <source>call_sv</source>
          <target state="translated">call_sv</target>
        </trans-unit>
        <trans-unit id="b4d5b37bf7a986c138ede89e0806f366b5cb1830" translate="yes" xml:space="preserve">
          <source>callback</source>
          <target state="translated">callback</target>
        </trans-unit>
        <trans-unit id="4e8127df1a4b3dbfb5b327173cfb08b8676ac454" translate="yes" xml:space="preserve">
          <source>callbacks</source>
          <target state="translated">callbacks</target>
        </trans-unit>
        <trans-unit id="970eeb47b2d091dc3fee38f7ecd0e8ec3352f34f" translate="yes" xml:space="preserve">
          <source>called</source>
          <target state="translated">called</target>
        </trans-unit>
        <trans-unit id="5b73d33ca4d0ef4a3df6b67b837e769d4cb0af6e" translate="yes" xml:space="preserve">
          <source>called &lt;code&gt;$some_pack::secret_version&lt;/code&gt; or anything; it's just $secret_version, unqualified and unqualifiable.</source>
          <target state="translated">&lt;code&gt;$some_pack::secret_version&lt;/code&gt; などと呼ばれます。$ secret_versionであり、修飾されておらず、修飾できません。</target>
        </trans-unit>
        <trans-unit id="1fb8b294c8dd06c5ddbfda59a1996397e5dff5ee" translate="yes" xml:space="preserve">
          <source>called for &lt;code&gt;=pod&lt;/code&gt; paragraphs.</source>
          <target state="translated">呼びかけ &lt;code&gt;=pod&lt;/code&gt; 段落。</target>
        </trans-unit>
        <trans-unit id="4dca004e14e54a193da4bef6ddcce901570f9219" translate="yes" xml:space="preserve">
          <source>called immediately, and if Perl is using the system's &lt;code&gt;stdio&lt;/code&gt; library that library may restart the &lt;code&gt;&lt;a href=&quot;functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt; without returning to Perl to give it a chance to call the %SIG handler. If this happens on your system the solution is to use the &lt;code&gt;:perlio&lt;/code&gt; layer to do IO--at least on those handles that you want to be able to break into with signals. (The &lt;code&gt;:perlio&lt;/code&gt; layer checks the signal flags and calls %SIG handlers before resuming IO operation.)</source>
          <target state="translated">すぐに呼び出され、Perlがシステムの &lt;code&gt;stdio&lt;/code&gt; ライブラリを使用している場合、そのライブラリは、Perlに戻らずに &lt;code&gt;&lt;a href=&quot;functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt; を再開し、％SIGハンドラーを呼び出す機会を与えます。これがシステムで発生する場合の解決策は、 &lt;code&gt;:perlio&lt;/code&gt; レイヤーを使用してIOを実行することです-少なくとも、シグナルで侵入できるようにしたいそれらのハンドルで。（ &lt;code&gt;:perlio&lt;/code&gt; レイヤーは、IOオペレーションを再開する前に、シグナルフラグをチェックし、％SIGハンドラーを呼び出します。）</target>
        </trans-unit>
        <trans-unit id="567f34b564f06580ebd9b48b199dfcf6a3094212" translate="yes" xml:space="preserve">
          <source>called immediately, and if Perl is using the system's &lt;code&gt;stdio&lt;/code&gt; library that library may restart the &lt;code&gt;read&lt;/code&gt; without returning to Perl to give it a chance to call the %SIG handler. If this happens on your system the solution is to use the &lt;code&gt;:perlio&lt;/code&gt; layer to do IO--at least on those handles that you want to be able to break into with signals. (The &lt;code&gt;:perlio&lt;/code&gt; layer checks the signal flags and calls %SIG handlers before resuming IO operation.)</source>
          <target state="translated">すぐに呼び出され、Perlがシステムの &lt;code&gt;stdio&lt;/code&gt; ライブラリを使用している場合、そのライブラリはPerlに戻らずに &lt;code&gt;read&lt;/code&gt; を再開して、％SIGハンドラーを呼び出す機会を与えることがあります。これがシステムで発生した場合の解決策は、 &lt;code&gt;:perlio&lt;/code&gt; レイヤーを使用してIOを実行することです。少なくとも、シグナルで侵入できるようにしたいハンドルでは。（ &lt;code&gt;:perlio&lt;/code&gt; レイヤーは、IO操作を再開する前に、信号フラグをチェックし、％SIGハンドラーを呼び出します。）</target>
        </trans-unit>
        <trans-unit id="14dc69de2a1e6087529f02b62fd2888c90d741d3" translate="yes" xml:space="preserve">
          <source>caller</source>
          <target state="translated">caller</target>
        </trans-unit>
        <trans-unit id="a5f0d61e9b1c1b14054070cd5efad882cc10c593" translate="yes" xml:space="preserve">
          <source>caller EXPR</source>
          <target state="translated">呼出側エクスプレ</target>
        </trans-unit>
        <trans-unit id="7aba60747c4150b59b47e08abdd47c33cc7a6995" translate="yes" xml:space="preserve">
          <source>caller's scope</source>
          <target state="translated">呼出範囲</target>
        </trans-unit>
        <trans-unit id="3ed7d1b856121d61369245edc58343a8a3706cee" translate="yes" xml:space="preserve">
          <source>caller_cx</source>
          <target state="translated">caller_cx</target>
        </trans-unit>
        <trans-unit id="d98fd2afc75d1c2e5e5747cc1f883a2419a27b8d" translate="yes" xml:space="preserve">
          <source>calling &lt;code&gt;CX_POP&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CX_POP&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="b31614a7ba28b398fab5be5b1f0abace81483c66" translate="yes" xml:space="preserve">
          <source>calling pod2usage, Pod::Usage will fail even on robust platforms. Don't do that. Or use &lt;a href=&quot;../findbin&quot;&gt;FindBin&lt;/a&gt; to locate the script:</source>
          <target state="translated">pod2usageを呼び出すと、Pod :: Usageは堅牢なプラットフォームでも失敗します。しないでください。または、&lt;a href=&quot;../findbin&quot;&gt;FindBin&lt;/a&gt;を使用してスクリプトを見つけます。</target>
        </trans-unit>
        <trans-unit id="3748b809994db82e1012a20918e083abe4806a36" translate="yes" xml:space="preserve">
          <source>calling pod2usage, Pod::Usage will fail even on robust platforms. Don't do that. Or use &lt;a href=&quot;findbin&quot;&gt;FindBin&lt;/a&gt; to locate the script:</source>
          <target state="translated">pod2usageを呼び出すと、Pod :: Usageは堅牢なプラットフォームでも失敗します。そうしないでください。または、&lt;a href=&quot;findbin&quot;&gt;FindBin&lt;/a&gt;を使用してスクリプトを見つけます。</target>
        </trans-unit>
        <trans-unit id="6d6364ba311876adcb810e8ac5a5c3d73f55fa43" translate="yes" xml:space="preserve">
          <source>calloc</source>
          <target state="translated">calloc</target>
        </trans-unit>
        <trans-unit id="51b6cb253fc406fc1b9780eaa1fb645eb82e631d" translate="yes" xml:space="preserve">
          <source>calls</source>
          <target state="translated">calls</target>
        </trans-unit>
        <trans-unit id="4a782bf6f0127a0ab6a9b55b344eb864af06d6d9" translate="yes" xml:space="preserve">
          <source>calls &amp;amp;{&quot;${module}::bootstrap&quot;} to bootstrap the module (actually it uses the function reference returned by dl_install_xsub for speed)</source>
          <target state="translated">＆{&quot;$ {module} :: bootstrap&quot;}を呼び出してモジュールをブートストラップします（実際には、速度のためにdl_install_xsubによって返される関数参照を使用します）</target>
        </trans-unit>
        <trans-unit id="8068c49fd178ebbbb1181c7892ff798980347f20" translate="yes" xml:space="preserve">
          <source>calls (e.g., using &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system()&lt;/a&gt;&lt;/code&gt; or back-ticks) made from threads use the environment variable settings from the</source>
          <target state="translated">スレッドから行われた &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system()&lt;/a&gt;&lt;/code&gt; またはバックティックを使用した）呼び出しは、</target>
        </trans-unit>
        <trans-unit id="e83aed67789fc3b96f90b751136395ce2ef41d6b" translate="yes" xml:space="preserve">
          <source>calls (e.g., using &lt;code&gt;system()&lt;/code&gt; or back-ticks) made from threads use the environment variable settings from the</source>
          <target state="translated">スレッドから行われた呼び出し（たとえば、 &lt;code&gt;system()&lt;/code&gt; またはバックティックの使用）は、からの環境変数設定を使用します。</target>
        </trans-unit>
        <trans-unit id="23927d0aa967922575276101593ab186ac76a894" translate="yes" xml:space="preserve">
          <source>calls dl_find_symbol() for &quot;boot_$module&quot;</source>
          <target state="translated">boot_$module&quot; のために dl_find_symbol()を呼び出します。</target>
        </trans-unit>
        <trans-unit id="df5598c9096a42a3629f35c7aa2f39e91fa80505" translate="yes" xml:space="preserve">
          <source>calls dl_install_xsub() to install it as &quot;${module}::bootstrap&quot;</source>
          <target state="translated">dl_install_xsub()を呼び出して、&quot;${module}::bootstrap &quot;としてインストールします。</target>
        </trans-unit>
        <trans-unit id="eeddbfb4bab615284264705345a27ee10700ba4b" translate="yes" xml:space="preserve">
          <source>calls dl_load_file() to load the file</source>
          <target state="translated">dl_load_file()を呼び出してファイルをロードします。</target>
        </trans-unit>
        <trans-unit id="60dd082e722533c84eb7e433f3fa4582d921f83b" translate="yes" xml:space="preserve">
          <source>calls dl_load_flags() to determine how to load the file.</source>
          <target state="translated">dl_load_flags()を呼び出して、ファイルのロード方法を決定します。</target>
        </trans-unit>
        <trans-unit id="c1e90b552179a525781d61e90b26ebd803e604f3" translate="yes" xml:space="preserve">
          <source>calls dl_undef_symbols() and warns if any symbols are undefined</source>
          <target state="translated">dl_undef_symbols()を呼び出し、未定義のシンボルがある場合に警告します。</target>
        </trans-unit>
        <trans-unit id="03b5ee56e23671d3878c7bc1765e42ba79aa3e0b" translate="yes" xml:space="preserve">
          <source>calls like the following</source>
          <target state="translated">以下のような呼び出し</target>
        </trans-unit>
        <trans-unit id="f02e2d24dc9d64bcb7041c2fc782098c29ed69dd" translate="yes" xml:space="preserve">
          <source>calls made by that thread.</source>
          <target state="translated">そのスレッドで行われた呼び出し。</target>
        </trans-unit>
        <trans-unit id="2dcbf5bd7246d954454bd3f3804dead54471c5e2" translate="yes" xml:space="preserve">
          <source>calls the Perl subroutine specified by the C string stored in the &lt;code&gt;subname&lt;/code&gt; parameter. It also takes the usual &lt;code&gt;flags&lt;/code&gt; parameter. The final parameter, &lt;code&gt;argv&lt;/code&gt; , consists of a NULL-terminated list of C strings to be passed as parameters to the Perl subroutine. See</source>
          <target state="translated">&lt;code&gt;subname&lt;/code&gt; パラメータに格納されているC文字列で指定されたPerlサブルーチンを呼び出します。また、通常の &lt;code&gt;flags&lt;/code&gt; パラメータも使用します。最後のパラメーター &lt;code&gt;argv&lt;/code&gt; は、パラメーターとしてPerlサブルーチンに渡されるCストリングのNULL終了リストで構成されています。見る</target>
        </trans-unit>
        <trans-unit id="733d70ba4dcf7a96d02346548b017098743dd710" translate="yes" xml:space="preserve">
          <source>calls the Perl subroutine specified by the C string stored in the &lt;code&gt;subname&lt;/code&gt; parameter. It also takes the usual &lt;code&gt;flags&lt;/code&gt; parameter. The final parameter, &lt;code&gt;argv&lt;/code&gt;, consists of a NULL-terminated list of C strings to be passed as parameters to the Perl subroutine. See &lt;a href=&quot;#Using-call_argv&quot;&gt;&quot;Using call_argv&quot;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;subname&lt;/code&gt; パラメーターに格納されているC文字列で指定されたPerlサブルーチンを呼び出します。また、通常の &lt;code&gt;flags&lt;/code&gt; パラメータを取ります。最後のパラメーター &lt;code&gt;argv&lt;/code&gt; は、Perlサブルーチンにパラメーターとして渡されるC文字列のNULLで終了するリストで構成されます。&lt;a href=&quot;#Using-call_argv&quot;&gt;「call_argvの使用」を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="df5b12037f7721d936298a1dbbb871e6381c2da1" translate="yes" xml:space="preserve">
          <source>camel_flea</source>
          <target state="translated">camel_flea</target>
        </trans-unit>
        <trans-unit id="7e9219a0599eae1d9601883f894b4fbe60870586" translate="yes" xml:space="preserve">
          <source>can</source>
          <target state="translated">can</target>
        </trans-unit>
        <trans-unit id="699d91f476fc57b066fa45249291eed227b9fc79" translate="yes" xml:space="preserve">
          <source>can also be &lt;code&gt;I&lt;/code&gt; which is the same as &lt;code&gt;C&lt;/code&gt; but is a special case for dotted uppercase I and dotless lowercase i:</source>
          <target state="translated">&lt;code&gt;C&lt;/code&gt; と同じ &lt;code&gt;I&lt;/code&gt; でもかまいませんが、ドット付き大文字Iとドットなし小文字iの特殊なケースです。</target>
        </trans-unit>
        <trans-unit id="e4fb56cea3d4b5b887c8b15f28fd462013d373d9" translate="yes" xml:space="preserve">
          <source>can be &lt;code&gt;@&lt;/code&gt; or &lt;code&gt;%&lt;/code&gt; to specify that the option is list or a hash valued. This is only needed when the destination for the option value is not otherwise specified. It should be omitted when not needed.</source>
          <target state="translated">オプションがリストまたはハッシュ値であることを指定するには、 &lt;code&gt;@&lt;/code&gt; または &lt;code&gt;%&lt;/code&gt; を使用できます。これは、オプション値の宛先が特に指定されていない場合にのみ必要です。不要な場合は省略してください。</target>
        </trans-unit>
        <trans-unit id="b6cda2d35a3885df30bda9a688568f274c6b3e94" translate="yes" xml:space="preserve">
          <source>can be any combination of &lt;code&gt;'a'&lt;/code&gt;, &lt;code&gt;'aa'&lt;/code&gt;, &lt;code&gt;'d'&lt;/code&gt;, &lt;code&gt;'i'&lt;/code&gt;, &lt;code&gt;'l'&lt;/code&gt;, &lt;code&gt;'m'&lt;/code&gt;, &lt;code&gt;'n'&lt;/code&gt;, &lt;code&gt;'p'&lt;/code&gt;, &lt;code&gt;'s'&lt;/code&gt;, &lt;code&gt;'u'&lt;/code&gt;, &lt;code&gt;'x'&lt;/code&gt;, and/or &lt;code&gt;'xx'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;'aa'&lt;/code&gt; &lt;code&gt;'a'&lt;/code&gt; 、'aa'、 &lt;code&gt;'d'&lt;/code&gt; 、 &lt;code&gt;'i'&lt;/code&gt; 、 &lt;code&gt;'l'&lt;/code&gt; 、 &lt;code&gt;'m'&lt;/code&gt; 、 &lt;code&gt;'n'&lt;/code&gt; 、 &lt;code&gt;'p'&lt;/code&gt; 、 &lt;code&gt;'s'&lt;/code&gt; 、 &lt;code&gt;'u'&lt;/code&gt; 、 &lt;code&gt;'x'&lt;/code&gt; 、およびの任意の組み合わせにすることができます。/または &lt;code&gt;'xx'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="24b476e0c0907463a17bc1306e027e47233cc399" translate="yes" xml:space="preserve">
          <source>can be any expression that evaluates to a name accepted by &lt;code&gt;\N{...}&lt;/code&gt; under the &lt;a href=&quot;#DESCRIPTION&quot;&gt;:full option&lt;/a&gt; to &lt;code&gt;charnames&lt;/code&gt; . In addition, any other options for the controlling &lt;code&gt;&quot;use charnames&quot;&lt;/code&gt; in the same scope apply, like &lt;code&gt;:loose&lt;/code&gt; or any &lt;a href=&quot;#DESCRIPTION&quot;&gt;script list, :short option&lt;/a&gt;, or &lt;a href=&quot;#CUSTOM-ALIASES&quot;&gt;custom aliases&lt;/a&gt; you may have defined.</source>
          <target state="translated">で受け入れ名前に評価する任意の式を指定できます &lt;code&gt;\N{...}&lt;/code&gt; の下で&lt;a href=&quot;#DESCRIPTION&quot;&gt;フルオプション：&lt;/a&gt;へ &lt;code&gt;charnames&lt;/code&gt; 。さらに、 &lt;code&gt;:loose&lt;/code&gt; または任意の&lt;a href=&quot;#DESCRIPTION&quot;&gt;スクリプトリスト、：shortオプション&lt;/a&gt;、または定義した&lt;a href=&quot;#CUSTOM-ALIASES&quot;&gt;カスタムエイリアス&lt;/a&gt;など、同じスコープ内の &lt;code&gt;&quot;use charnames&quot;&lt;/code&gt; 制御するためのその他のオプションが適用されます。</target>
        </trans-unit>
        <trans-unit id="8207bfa2f86eef13b5e02a5d9219333c3795e5f4" translate="yes" xml:space="preserve">
          <source>can be any expression that evaluates to a name accepted by &lt;code&gt;\N{...}&lt;/code&gt; under the &lt;a href=&quot;#DESCRIPTION&quot;&gt;&lt;code&gt;:full&lt;/code&gt; option&lt;/a&gt; to &lt;code&gt;charnames&lt;/code&gt;. In addition, any other options for the controlling &lt;code&gt;&quot;use charnames&quot;&lt;/code&gt; in the same scope apply, like &lt;code&gt;:loose&lt;/code&gt; or any &lt;a href=&quot;#DESCRIPTION&quot;&gt;script list, &lt;code&gt;:short&lt;/code&gt; option&lt;/a&gt;, or &lt;a href=&quot;#CUSTOM-ALIASES&quot;&gt;custom aliases&lt;/a&gt; you may have defined.</source>
          <target state="translated">で受け入れ名前に評価する任意の式を指定できます &lt;code&gt;\N{...}&lt;/code&gt; の下で&lt;a href=&quot;#DESCRIPTION&quot;&gt; &lt;code&gt;:full&lt;/code&gt; オプション&lt;/a&gt;に &lt;code&gt;charnames&lt;/code&gt; 。さらに、 &lt;code&gt;:loose&lt;/code&gt; または任意の&lt;a href=&quot;#DESCRIPTION&quot;&gt;スクリプトリスト、&lt;/a&gt; &lt;code&gt;:short&lt;/code&gt; オプション、または定義した&lt;a href=&quot;#CUSTOM-ALIASES&quot;&gt;カスタムエイリアス&lt;/a&gt;など、同じスコープ内の &lt;code&gt;&quot;use charnames&quot;&lt;/code&gt; 制御するための他のオプションが適用されます。</target>
        </trans-unit>
        <trans-unit id="8b34e29f857c70f78af80d100b29730e6cdc1149" translate="yes" xml:space="preserve">
          <source>can be any value which is valid as an assignment to an element of &lt;code&gt;%SIG&lt;/code&gt; . See &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt; for examples of handler functions.</source>
          <target state="translated">&lt;code&gt;%SIG&lt;/code&gt; の要素への割り当てとして有効な任意の値を指定できます。ハンドラー関数の例については、&lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="60cf43db09eb171fc68adc4b27dc80a73ec633fc" translate="yes" xml:space="preserve">
          <source>can be any value which is valid as an assignment to an element of &lt;code&gt;%SIG&lt;/code&gt;. See &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt; for examples of handler functions.</source>
          <target state="translated">&lt;code&gt;%SIG&lt;/code&gt; の要素への割り当てとして有効な任意の値を指定できます。ハンドラー関数の例については、&lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="461c0b19fe19c96b45408c038271b2fb35f66553" translate="yes" xml:space="preserve">
          <source>can be compressed with &lt;code&gt;/c:max&lt;/code&gt; (the bug only appears when there is a fixup in the last 6 bytes of a page (?); since the tiny executables are much smaller than a page, the bug will not hit). Do not compress &lt;code&gt;perl_.exe&lt;/code&gt; - it would not work under DOS.</source>
          <target state="translated">&lt;code&gt;/c:max&lt;/code&gt; で圧縮できます（バグはページの最後の6バイトにフィックスアップがある場合にのみ表示されます（？）。小さな実行可能ファイルはページよりもはるかに小さいため、バグは発生しません）。 &lt;code&gt;perl_.exe&lt;/code&gt; は圧縮しないでください。DOSでは機能しません。</target>
        </trans-unit>
        <trans-unit id="446662c59650e49f63dcfb6d7d27d374899b2abe" translate="yes" xml:space="preserve">
          <source>can be constructed using &lt;code&gt;pod2latex&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;pod2latex&lt;/code&gt; を使用して構築できます。</target>
        </trans-unit>
        <trans-unit id="c098826fe346971c1bf153f18ba6624f6c2f2531" translate="yes" xml:space="preserve">
          <source>can be constructed using &lt;code&gt;pod2latex&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;pod2latex&lt;/code&gt; を使用して構築できます。</target>
        </trans-unit>
        <trans-unit id="3ce1fab0a60d1b9694716d9d022c1765f4978b16" translate="yes" xml:space="preserve">
          <source>can be either a canonical name or an alias. For encoding names and aliases, see &lt;a href=&quot;#Defining-Aliases&quot;&gt;&quot;Defining Aliases&quot;&lt;/a&gt;. For CHECK, see &lt;a href=&quot;#Handling-Malformed-Data&quot;&gt;&quot;Handling Malformed Data&quot;&lt;/a&gt;.</source>
          <target state="translated">正規名またはエイリアスのいずれかです。エンコーディング名とエイリアスについては、&lt;a href=&quot;#Defining-Aliases&quot;&gt;「エイリアスの定義」を&lt;/a&gt;参照してください。CHECKについては、&lt;a href=&quot;#Handling-Malformed-Data&quot;&gt;「不正な形式のデータの処理」を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="fb09ee0719d48bbcaac94dec85ce8d07308135f2" translate="yes" xml:space="preserve">
          <source>can be either a canonical name or an alias. For encoding names and aliases, see &lt;a href=&quot;#Defining-Aliases&quot;&gt;&quot;Defining Aliases&quot;&lt;/a&gt;; for</source>
          <target state="translated">正規名またはエイリアスのいずれかです。エンコーディング名とエイリアスについては、&lt;a href=&quot;#Defining-Aliases&quot;&gt;「エイリアスの定義」を&lt;/a&gt;参照してください。ために</target>
        </trans-unit>
        <trans-unit id="794d8b0a9b686ba34ee696408ef6df66c3a413de" translate="yes" xml:space="preserve">
          <source>can be either a canonical name or an alias. For encoding names and aliases, see &lt;a href=&quot;#Defining-Aliases&quot;&gt;Defining Aliases&lt;/a&gt;. For CHECK, see &lt;a href=&quot;#Handling-Malformed-Data&quot;&gt;Handling Malformed Data&lt;/a&gt;.</source>
          <target state="translated">正規名またはエイリアスのいずれかです。エンコーディング名とエイリアスについては、「&lt;a href=&quot;#Defining-Aliases&quot;&gt;エイリアスの定義&lt;/a&gt;」を参照してください。チェックについては、&lt;a href=&quot;#Handling-Malformed-Data&quot;&gt;不正なデータの処理を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="8fd5395b7f9e578475974e9b86e078fb0ec61ac4" translate="yes" xml:space="preserve">
          <source>can be either a canonical name or an alias. For encoding names and aliases, see &lt;a href=&quot;#Defining-Aliases&quot;&gt;Defining Aliases&lt;/a&gt;; for</source>
          <target state="translated">正規名またはエイリアスのいずれかです。エンコーディング名とエイリアスについては、エイリアスの&lt;a href=&quot;#Defining-Aliases&quot;&gt;定義を&lt;/a&gt;参照してください。ために</target>
        </trans-unit>
        <trans-unit id="e77ae9195619436cf623136bc0de83a787a047da" translate="yes" xml:space="preserve">
          <source>can be misparsed by pre-5.10.0 Perls as a non-terminated search pattern.</source>
          <target state="translated">は、5.10.0以前のPerlsでは終端しない検索パターンとして誤解析される可能性があります。</target>
        </trans-unit>
        <trans-unit id="102e5cd9960ccd33f4c8886eae28cc9c5d186cd5" translate="yes" xml:space="preserve">
          <source>can be represented by any of the strings &quot;Y&quot;, &quot;Yes&quot;, &quot;T&quot;, or &quot;True&quot;; and the General Category &quot;Punctuation&quot; by that string, or &quot;Punct&quot;, or simply &quot;P&quot;.</source>
          <target state="translated">は、&quot;Y&quot;、&quot;Yes&quot;、&quot;T&quot;、または &quot;True &quot;のいずれかの文字列で表現することができ、その文字列による一般的なカテゴリ &quot;句読点&quot;、または &quot;Punctuation&quot;、または単に &quot;P &quot;で表現することができます。</target>
        </trans-unit>
        <trans-unit id="ab1e1922e94c24432c2394888ae6becca02bff46" translate="yes" xml:space="preserve">
          <source>can be rewritten as the much more efficient</source>
          <target state="translated">は、より効率的な</target>
        </trans-unit>
        <trans-unit id="6980df54f269ebb5f12cf9f66876a22b962b6463" translate="yes" xml:space="preserve">
          <source>can be specified as either a POSIX termios/SYSV termio speeds (where 9600 equals 9600) or an old DSD-style speed ( where 13 equals 9600).</source>
          <target state="translated">は、POSIX termios/SYSV termioの速度(ここでは9600が9600に等しい)または古いDSDスタイルの速度(ここでは13が9600に等しい)のいずれかとして指定することができます。</target>
        </trans-unit>
        <trans-unit id="12f83e8f257938d5d877e46ff7b777e6d3e81ab3" translate="yes" xml:space="preserve">
          <source>can be specified for single elements by prepending dotted-form, i.e. &quot;com.example.my_application.my_property&quot;. Default namespace for META.yml is probably &quot;org.cpan.meta_author&quot; or something. Precedent for this is Apple's Carbon namespaces, I think.</source>
          <target state="translated">は、単一の要素の場合は、ドット形式の前置詞で指定できます。META.ymlのデフォルトの名前空間は、おそらく &quot;org.cpan.meta_author &quot;などでしょう。これはAppleのCarbonの名前空間が前例だと思います。</target>
        </trans-unit>
        <trans-unit id="2a0b30925918e47087c2c3fd8ec3511807439d9a" translate="yes" xml:space="preserve">
          <source>can be supplied as true to force the loop body to be enclosed in its own scope.</source>
          <target state="translated">を true と指定すると、ループ本体を強制的に自分のスコープで囲むことができます。</target>
        </trans-unit>
        <trans-unit id="2ec6c241c08eaa0e7cd65d17fc2d47fc2d922f6d" translate="yes" xml:space="preserve">
          <source>can be used any place a string (char *) is required:</source>
          <target state="translated">は、文字列 (char *)が必要な場所であればどこでも使用できます。</target>
        </trans-unit>
        <trans-unit id="18d75e94060e4bbccaab013dcc7609826491453a" translate="yes" xml:space="preserve">
          <source>can be used as a single statement, as in</source>
          <target state="translated">のように、単一のステートメントとして使用することができます。</target>
        </trans-unit>
        <trans-unit id="d8acc4b4615821e09fe517afa1e537f21aba062d" translate="yes" xml:space="preserve">
          <source>can be used as an alias for</source>
          <target state="translated">のエイリアスとして使用することができます。</target>
        </trans-unit>
        <trans-unit id="c83ef2aed21667cc47266aebbf22a19737c73278" translate="yes" xml:space="preserve">
          <source>can be used to initialize a new $x with the value of the old $x, and the expression</source>
          <target state="translated">を使用して、新しい $x を古い $x の値で初期化することができます。</target>
        </trans-unit>
        <trans-unit id="32fde68489fc1913d62a482e299a8d35e0bda2c3" translate="yes" xml:space="preserve">
          <source>can be used to pass parameters to the methods which implement that part of the Makefile. Parameters are specified as a hash ref but are passed to the method as a hash.</source>
          <target state="translated">は、Makefileのその部分を実装したメソッドにパラメータを渡すために使用することができます。パラメータはハッシュrefとして指定されますが、メソッドにはハッシュとして渡されます。</target>
        </trans-unit>
        <trans-unit id="e020f4df52e0881b17e0bbdbefc5b62b50ac0eaa" translate="yes" xml:space="preserve">
          <source>can be used to test the locales on your system. Setting the environment variable &lt;code&gt;PERL_DEBUG_FULL_TEST&lt;/code&gt; to 1 will cause it to output detailed results. For example, on Linux, you could say</source>
          <target state="translated">システムのロケールをテストするために使用できます。環境変数 &lt;code&gt;PERL_DEBUG_FULL_TEST&lt;/code&gt; を1に設定すると、詳細な結果が出力されます。たとえば、Linuxでは次のように言うことができます</target>
        </trans-unit>
        <trans-unit id="1e41481e91bc4f56b11d91901bc53050dcf02bb4" translate="yes" xml:space="preserve">
          <source>can have several forms. The first form is simply an integer in parentheses &lt;code&gt;(&lt;i&gt;integer&lt;/i&gt;)&lt;/code&gt;. It is true if the corresponding backreference &lt;code&gt;\&lt;i&gt;integer&lt;/i&gt;&lt;/code&gt; matched earlier in the regexp. The same thing can be done with a name associated with a capture group, written as &lt;code&gt;(&amp;lt;&lt;i&gt;name&lt;/i&gt;&amp;gt;)&lt;/code&gt; or &lt;code&gt;('&lt;i&gt;name&lt;/i&gt;')&lt;/code&gt;. The second form is a bare zero-width assertion &lt;code&gt;(?...)&lt;/code&gt;, either a lookahead, a lookbehind, or a code assertion (discussed in the next section). The third set of forms provides tests that return true if the expression is executed within a recursion (&lt;code&gt;(R)&lt;/code&gt;) or is being called from some capturing group, referenced either by number (&lt;code&gt;(R1)&lt;/code&gt;, &lt;code&gt;(R2)&lt;/code&gt;,...) or by name (&lt;code&gt;(R&amp;amp;&lt;i&gt;name&lt;/i&gt;)&lt;/code&gt;).</source>
          <target state="translated">いくつかの形式を持つことができます。最初の形式は、括弧内の &lt;code&gt;(&lt;i&gt;integer&lt;/i&gt;)&lt;/code&gt; （&lt;i&gt;integer&lt;/i&gt;）です。対応する後方参照 &lt;code&gt;\&lt;i&gt;integer&lt;/i&gt;&lt;/code&gt; が正規表現の前半で一致した場合はtrueです。 &lt;code&gt;(&amp;lt;&lt;i&gt;name&lt;/i&gt;&amp;gt;)&lt;/code&gt; または &lt;code&gt;('&lt;i&gt;name&lt;/i&gt;')&lt;/code&gt; と記述された、キャプチャグループに関連付けられた名前でも同じことができます。 2番目の形式は、ベアアサーション &lt;code&gt;(?...)&lt;/code&gt; であり、先読み、後読み、またはコードアサーション（次のセクションで説明）のいずれかです。フォームの3番目のセットは、式が再帰内で実行された場合にtrueを返すテストを提供します（ &lt;code&gt;(R)&lt;/code&gt; ）または、番号（ &lt;code&gt;(R1)&lt;/code&gt; 、 &lt;code&gt;(R2)&lt;/code&gt; 、...）または名前（ &lt;code&gt;(R&amp;amp;&lt;i&gt;name&lt;/i&gt;)&lt;/code&gt; ）のいずれかで参照されるキャプチャグループから呼び出されています。</target>
        </trans-unit>
        <trans-unit id="ec38106a7a2c4aeab519526f1fc64d639439ebe7" translate="yes" xml:space="preserve">
          <source>can now be called via the</source>
          <target state="translated">を介して呼び出すことができるようになりました。</target>
        </trans-unit>
        <trans-unit id="073fc766b5f28ba9a5e826b65821aea6ad51da11" translate="yes" xml:space="preserve">
          <source>can refer either to a &quot;=head</source>
          <target state="translated">は、&quot;=head &quot;のどちらかを参照することができます。</target>
        </trans-unit>
        <trans-unit id="f3e4c81c1862fa7e83f6209d035bc6b6a4c37811" translate="yes" xml:space="preserve">
          <source>can tell if it has been sourced already.</source>
          <target state="translated">は、すでにソースが出ているかどうかを知ることができます。</target>
        </trans-unit>
        <trans-unit id="5bac399344eb2e104a9bc2cee9e2a722464b5047" translate="yes" xml:space="preserve">
          <source>can't</source>
          <target state="translated">can't</target>
        </trans-unit>
        <trans-unit id="aa8e4bd605454a2c4879074789b2c3bc3125ee62" translate="yes" xml:space="preserve">
          <source>can't speak proper Swahili,</source>
          <target state="translated">まともなスワヒリ語が話せない</target>
        </trans-unit>
        <trans-unit id="a8a22e86ac17d30098c489cf550a7db6fd390cef" translate="yes" xml:space="preserve">
          <source>can($method)</source>
          <target state="translated">can($method)</target>
        </trans-unit>
        <trans-unit id="c8d25cbb91ed447dcaf3128a97e65bed4cab3d61" translate="yes" xml:space="preserve">
          <source>can_color</source>
          <target state="translated">can_color</target>
        </trans-unit>
        <trans-unit id="98058934126afcffdf3e1dca698b1e5933052270" translate="yes" xml:space="preserve">
          <source>can_dep_space</source>
          <target state="translated">can_dep_space</target>
        </trans-unit>
        <trans-unit id="0fe020b6183685ee95126629cfb433de7cb72737" translate="yes" xml:space="preserve">
          <source>can_handle</source>
          <target state="translated">can_handle</target>
        </trans-unit>
        <trans-unit id="9ff99e6b258032c4317631c5af7fa37d23ee6128" translate="yes" xml:space="preserve">
          <source>can_inet6 ()</source>
          <target state="translated">キャンネット6</target>
        </trans-unit>
        <trans-unit id="f1d8c600ccae6e37aa7bd1365c835614b2fdb93f" translate="yes" xml:space="preserve">
          <source>can_load_xs</source>
          <target state="translated">can_load_xs</target>
        </trans-unit>
        <trans-unit id="a209b8bb928c99b509b5b18a38b94f9d4a4de75f" translate="yes" xml:space="preserve">
          <source>can_read ( [ TIMEOUT ] )</source>
          <target state="translated">can_read([TIMEOUT])</target>
        </trans-unit>
        <trans-unit id="9b48ac28ef2fa55ed9118eab541eb96b568c95c9" translate="yes" xml:space="preserve">
          <source>can_redirect_error</source>
          <target state="translated">can_redirect_error</target>
        </trans-unit>
        <trans-unit id="60f8214968771a1ddbf7e4ae68c3192535834642" translate="yes" xml:space="preserve">
          <source>can_run</source>
          <target state="translated">can_run</target>
        </trans-unit>
        <trans-unit id="4974b129614a62f685deb6d6e736e73cd5ee3ff9" translate="yes" xml:space="preserve">
          <source>can_ssl</source>
          <target state="translated">can_ssl</target>
        </trans-unit>
        <trans-unit id="5d377c8ff7c3eee7f6758a8308590bcdde3be6db" translate="yes" xml:space="preserve">
          <source>can_ssl ()</source>
          <target state="translated">can_ssl</target>
        </trans-unit>
        <trans-unit id="367cd53ab1517714b34de2f623eb8288be911cb9" translate="yes" xml:space="preserve">
          <source>can_write ( [ TIMEOUT ] )</source>
          <target state="translated">can_write([TIMEOUT])</target>
        </trans-unit>
        <trans-unit id="0ec09fd5087f20f8f1487c0620fa4aae9bf6bd67" translate="yes" xml:space="preserve">
          <source>cancelling</source>
          <target state="translated">cancelling</target>
        </trans-unit>
        <trans-unit id="fd59deab53fb970cb6db2203923398c18970cf2b" translate="yes" xml:space="preserve">
          <source>candelete</source>
          <target state="translated">candelete</target>
        </trans-unit>
        <trans-unit id="7d85f050f65feb60efdb328e99782129924b16b6" translate="yes" xml:space="preserve">
          <source>cando</source>
          <target state="translated">cando</target>
        </trans-unit>
        <trans-unit id="6ef80072f39071d4118a6e7890e209d4dd07e504" translate="yes" xml:space="preserve">
          <source>cannot</source>
          <target state="translated">cannot</target>
        </trans-unit>
        <trans-unit id="04f7fc0aca9ad2b7aa0a289811be4f44339c3fa2" translate="yes" xml:space="preserve">
          <source>cannot be computed for all arguments because that would mean dividing by zero or taking logarithm of zero. These situations cause fatal runtime errors looking like this</source>
          <target state="translated">はすべての引数に対して計算することはできません。このような状況では、以下のような致命的なランタイムエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="07567c7d826aa63adc1a5eeccb8e1d221eb1a7bd" translate="yes" xml:space="preserve">
          <source>cannot be included, use</source>
          <target state="translated">含めることができない場合は、使用</target>
        </trans-unit>
        <trans-unit id="8204e50dcc76473893509dee81c209dd37748814" translate="yes" xml:space="preserve">
          <source>cannot be started directly using the above API. One needs a way to surround the doublequotes in some other quoting construction, necessarily having an extra non-Unixish shell in between.</source>
          <target state="translated">は上記の API を使って直接起動することはできません。ダブルクォートを他の引用構造で囲む方法が必要になりますが、その間には必然的にUnix的ではないシェルを追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="d465e617560f92dce8bc51283aa8145e0c60c3e0" translate="yes" xml:space="preserve">
          <source>cannot chdir to [dir]: [errmsg]</source>
          <target state="translated">dir]に chdir を指定できません。errmsg</target>
        </trans-unit>
        <trans-unit id="3eaf667c9627ed2da90cfd5b6016c8e8a472866f" translate="yes" xml:space="preserve">
          <source>cannot chdir to [parent-dir] from [child-dir]: [errmsg], aborting. (FATAL)</source>
          <target state="translated">は [chdir]を [child-dir]から [parent-dir]に変更できません。errmsg]、アボートしています。(FATAL)</target>
        </trans-unit>
        <trans-unit id="a648d2f9903006477a495b4f91540d082ead7a5d" translate="yes" xml:space="preserve">
          <source>cannot fetch initial working directory: [errmsg]</source>
          <target state="translated">は初期の作業ディレクトリを取得できません。[errmsg]</target>
        </trans-unit>
        <trans-unit id="d6baf2d107957d5d2e553bf06c6534a12bcb1fc9" translate="yes" xml:space="preserve">
          <source>cannot find the needed</source>
          <target state="translated">必要な</target>
        </trans-unit>
        <trans-unit id="433ee83dd6e407f89126bb331d94555ce0d19f8b" translate="yes" xml:space="preserve">
          <source>cannot lead to &lt;code&gt;$b&lt;/code&gt; 's implementation of &lt;code&gt;*=&lt;/code&gt; being called, even if &lt;code&gt;$a&lt;/code&gt; is a scalar. (It can, however, generate a call to &lt;code&gt;$b&lt;/code&gt; 's method for &lt;code&gt;*&lt;/code&gt; ).</source>
          <target state="translated">つながることができません &lt;code&gt;$b&lt;/code&gt; のの実装 &lt;code&gt;*=&lt;/code&gt; 場合でも、呼び出される &lt;code&gt;$a&lt;/code&gt; スカラーです。（ただし、 &lt;code&gt;*&lt;/code&gt; に対して &lt;code&gt;$b&lt;/code&gt; のメソッドの呼び出しを生成できます）。</target>
        </trans-unit>
        <trans-unit id="dd83e8b01f7f1fdc40dc495641566b805a24ec8b" translate="yes" xml:space="preserve">
          <source>cannot lead to &lt;code&gt;$b&lt;/code&gt;'s implementation of &lt;code&gt;*=&lt;/code&gt; being called, even if &lt;code&gt;$a&lt;/code&gt; is a scalar. (It can, however, generate a call to &lt;code&gt;$b&lt;/code&gt;'s method for &lt;code&gt;*&lt;/code&gt;).</source>
          <target state="translated">つながることができません &lt;code&gt;$b&lt;/code&gt; のの実装 &lt;code&gt;*=&lt;/code&gt; 場合でも、呼び出される &lt;code&gt;$a&lt;/code&gt; スカラーです。（ただし、 &lt;code&gt;*&lt;/code&gt; に対して &lt;code&gt;$b&lt;/code&gt; のメソッドの呼び出しを生成することはできます）。</target>
        </trans-unit>
        <trans-unit id="9d00e654937d383aa5e2544bd77f867714ad3d36" translate="yes" xml:space="preserve">
          <source>cannot make directory [dir] read+writeable: [errmsg]</source>
          <target state="translated">ディレクトリ[dir]を読み書き可能にすることができません。[errmsg]</target>
        </trans-unit>
        <trans-unit id="1be69f68d73504ec012a9565b517c1b9463d71d9" translate="yes" xml:space="preserve">
          <source>cannot make directory [dir] writeable: [errmsg]</source>
          <target state="translated">ディレクトリ[dir]を書き込み可能にすることができません。errmsg]</target>
        </trans-unit>
        <trans-unit id="81a96ddf0f3954fa35593f7a585ed92c51a6e0a8" translate="yes" xml:space="preserve">
          <source>cannot make file [file] writeable: [errmsg]</source>
          <target state="translated">ファイル[file]を書き込み可能にすることができません。errmsg]</target>
        </trans-unit>
        <trans-unit id="da6cb26a84743c26c2ecbc4e48c4f28d88688590" translate="yes" xml:space="preserve">
          <source>cannot read [dir]: [errmsg]</source>
          <target state="translated">は [dir]を読み込めません。errmsg]</target>
        </trans-unit>
        <trans-unit id="734f296c40d30b798622604be653765061795fd3" translate="yes" xml:space="preserve">
          <source>cannot remove [dir] when cwd is [dir]</source>
          <target state="translated">cwd が [dir]の場合、[dir]を削除できない</target>
        </trans-unit>
        <trans-unit id="4ec7ffef6d7cd44a57a78e26c5eaf76b66bfae3f" translate="yes" xml:space="preserve">
          <source>cannot remove directory [dir]: [errmsg]</source>
          <target state="translated">ディレクトリ[dir]を削除できません。errmsg]</target>
        </trans-unit>
        <trans-unit id="e345543a332529780084d3ceb40a4026183a4991" translate="yes" xml:space="preserve">
          <source>cannot reset chmod [dir]: [errmsg]</source>
          <target state="translated">chmod [dir]をリセットできません。errmsg</target>
        </trans-unit>
        <trans-unit id="453c3f2e83c134316656c22f4c107642acbd13f3" translate="yes" xml:space="preserve">
          <source>cannot restore permissions of [dir] to [0nnn]: [errmsg]</source>
          <target state="translated">は、[dir]のパーミッションを[0nnn]に復元できません。errmsg</target>
        </trans-unit>
        <trans-unit id="8313e84895b3827500b52620d5dec8879f8527e1" translate="yes" xml:space="preserve">
          <source>cannot restore permissions of [file] to [0nnn]: [errmsg]</source>
          <target state="translated">は [file]の権限を [0nnn]に復元できません。errmsg</target>
        </trans-unit>
        <trans-unit id="b765111dee8c0530b99aca3ce0a503ef4efb9566" translate="yes" xml:space="preserve">
          <source>cannot stat initial working directory: [errmsg]</source>
          <target state="translated">は初期の作業ディレクトリを取得できません。[errmsg]</target>
        </trans-unit>
        <trans-unit id="bab473ba2fe577a36d713ea25bc77c8bebd3ee28" translate="yes" xml:space="preserve">
          <source>cannot stat prior working directory [dir]: [errmsg], aborting. (FATAL)</source>
          <target state="translated">は前の作業ディレクトリ [dir]を指定できません。errmsg]、中断中。(FATAL)</target>
        </trans-unit>
        <trans-unit id="6e500880cc85cfa9a8a7c6e8d0548f13fbfe1fa4" translate="yes" xml:space="preserve">
          <source>cannot unlink file [file]: [errmsg]</source>
          <target state="translated">ファイル [file]のリンクを解除できません。errmsg]:[errmsg</target>
        </trans-unit>
        <trans-unit id="58fe73ac67cf177f6dd33b4fe44d6bfd2952c07b" translate="yes" xml:space="preserve">
          <source>canonical</source>
          <target state="translated">canonical</target>
        </trans-unit>
        <trans-unit id="2d94d751b1a8bd191ec353d650d073728f718240" translate="yes" xml:space="preserve">
          <source>canonical names differ from that of the Encode module, they are always aliased if it ever be implemented. So you can safely tell if a given encoding is implemented or not just by passing the canonical name.</source>
          <target state="translated">canonical name は Encode モジュールのものとは異なり、もし実装されることがあれば常にエイリアスされます。そのため、標準名を渡すだけで、与えられたエンコーディングが実装されているかどうかを安全に知ることができます。</target>
        </trans-unit>
        <trans-unit id="8f76cb80deae2e48cea0f820942e7707714f7a6a" translate="yes" xml:space="preserve">
          <source>canonname =&amp;gt; STRING</source>
          <target state="translated">canonname =&amp;gt; STRING</target>
        </trans-unit>
        <trans-unit id="780d41095195df1101716119e3f1ab79a3891cda" translate="yes" xml:space="preserve">
          <source>canonpath</source>
          <target state="translated">canonpath</target>
        </trans-unit>
        <trans-unit id="b81343c3e8001b1c279a7cda21a2aed404cce598" translate="yes" xml:space="preserve">
          <source>canonpath (override)</source>
          <target state="translated">キャノンパス</target>
        </trans-unit>
        <trans-unit id="c492234ccf4bfd72a658695d15dd5d1dd2ba8216" translate="yes" xml:space="preserve">
          <source>canonpath()</source>
          <target state="translated">canonpath()</target>
        </trans-unit>
        <trans-unit id="474cadb40e32b4119becfffe47b4bbfdaea3845f" translate="yes" xml:space="preserve">
          <source>capa ()</source>
          <target state="translated">キャパ</target>
        </trans-unit>
        <trans-unit id="c862423fef5374d23f7b23f924739b16a86439e3" translate="yes" xml:space="preserve">
          <source>capabilities ()</source>
          <target state="translated">きのう</target>
        </trans-unit>
        <trans-unit id="865f1ff7a475134380e8c1ade9c9257a3b2d3d4b" translate="yes" xml:space="preserve">
          <source>capabilities, such as the less program on Unix.</source>
          <target state="translated">の機能、例えばUnix上では少ないプログラムなど。</target>
        </trans-unit>
        <trans-unit id="24d36117a06589995877d65c61dd6ec645ccc49e" translate="yes" xml:space="preserve">
          <source>capabilities:</source>
          <target state="translated">capabilities:</target>
        </trans-unit>
        <trans-unit id="38b38f7a14c5d7d2a37fab0c0cc0bf70e3b650a6" translate="yes" xml:space="preserve">
          <source>capitalizes the letters &lt;code&gt;&quot;h&quot;&lt;/code&gt;, &lt;code&gt;&quot;i&quot;&lt;/code&gt;, &lt;code&gt;&quot;j&quot;&lt;/code&gt;, and &lt;code&gt;&quot;k&quot;&lt;/code&gt; and nothing else, no matter what the platform's character set is. In contrast, all of</source>
          <target state="translated">プラットフォームの文字セットに関係なく、文字 &lt;code&gt;&quot;h&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;i&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;j&quot;&lt;/code&gt; 、および &lt;code&gt;&quot;k&quot;&lt;/code&gt; を大文字にします。対照的に、すべて</target>
        </trans-unit>
        <trans-unit id="dfd6c29bb2543664179870bac088e53dbfe84e7f" translate="yes" xml:space="preserve">
          <source>capture variables</source>
          <target state="translated">キャプチャ変数</target>
        </trans-unit>
        <trans-unit id="2effdf32146d25bb2c901b1f072ba016c03522e0" translate="yes" xml:space="preserve">
          <source>capturing</source>
          <target state="translated">capturing</target>
        </trans-unit>
        <trans-unit id="cf3298ba24c6c4e554b7f8b9a3569ba924ef42f8" translate="yes" xml:space="preserve">
          <source>capturing groups, or else</source>
          <target state="translated">グループを捕捉するか</target>
        </trans-unit>
        <trans-unit id="27da055de62be5ea00a18b05686dc722ef504503" translate="yes" xml:space="preserve">
          <source>capturing parentheses will not be penalized. So avoid &lt;code&gt;$&amp;amp;&lt;/code&gt; , &lt;code&gt;$'&lt;/code&gt; , and &lt;code&gt;$`&lt;/code&gt; if you can, but if you can't (and some algorithms really appreciate them), once you've used them once, use them at will, because you've already paid the price.</source>
          <target state="translated">括弧のキャプチャはペナルティーを課されません。したがって、 &lt;code&gt;$&amp;amp;&lt;/code&gt; 、 &lt;code&gt;$'&lt;/code&gt; 、および &lt;code&gt;$`&lt;/code&gt; は可能な場合は避けてください。ただし、そうすることができない場合（および一部のアルゴリズムでは実際に高く評価されます）、一度使用したら、自由に使用してください。価格。</target>
        </trans-unit>
        <trans-unit id="042d4d8c4f82b7f6053e165e17cd35daf91cfdb5" translate="yes" xml:space="preserve">
          <source>capturing parentheses will not be penalized. So avoid &lt;code&gt;$&amp;amp;&lt;/code&gt;, &lt;code&gt;$'&lt;/code&gt;, and &lt;code&gt;$`&lt;/code&gt; if you can, but if you can't (and some algorithms really appreciate them), once you've used them once, use them at will, because you've already paid the price.</source>
          <target state="translated">括弧をキャプチャしてもペナルティはありません。したがって、可能であれば &lt;code&gt;$&amp;amp;&lt;/code&gt; 、 &lt;code&gt;$'&lt;/code&gt; 、および &lt;code&gt;$`&lt;/code&gt; 避けますが、できない場合（および一部のアルゴリズムはそれらを本当に評価します）、一度使用した後は、すでに支払っているので、自由に使用してください。価格。</target>
        </trans-unit>
        <trans-unit id="4fecdfe9582b11c15b0bff91598fe22c64541102" translate="yes" xml:space="preserve">
          <source>careful with this routine, as it short-circuits some of Perl's fundamental security features. XS module authors should not use this function unless they fully understand all the implications of unconditionally untainting the value. Untainting should be done in the standard perl fashion, via a carefully crafted regexp, rather than directly untainting variables.</source>
          <target state="translated">この関数は、Perlの基本的なセキュリティ機能の一部を短絡させてしまうので、注意が必要です。XSモジュールの作者は、無条件に染色を解除することの意味を完全に理解していない限り、この関数を使用すべきではありません。染色解除は、変数を直接染色解除するのではなく、慎重に作られた正規表現を使って、標準的なPerlの方法で行われるべきです。</target>
        </trans-unit>
        <trans-unit id="9afce1c402e5811bfb49ee8c05126552d7bb1c09" translate="yes" xml:space="preserve">
          <source>cargo cult</source>
          <target state="translated">カーゴカルト</target>
        </trans-unit>
        <trans-unit id="96fdff65c5b9cc9c4dc303017fb373906a527a06" translate="yes" xml:space="preserve">
          <source>carp</source>
          <target state="translated">carp</target>
        </trans-unit>
        <trans-unit id="6cbdf6406b5f415f12805b8f898c3a5ea1b00238" translate="yes" xml:space="preserve">
          <source>cartesian_to_cylindrical</source>
          <target state="translated">cartesian_to_cylindrical</target>
        </trans-unit>
        <trans-unit id="7eefea0f102e55a1a442b0832d3a887167be55c6" translate="yes" xml:space="preserve">
          <source>cartesian_to_spherical</source>
          <target state="translated">cartesian_to_spherical</target>
        </trans-unit>
        <trans-unit id="6406510c31e0c9925733c7f21414bf6428333ed2" translate="yes" xml:space="preserve">
          <source>case</source>
          <target state="translated">case</target>
        </trans-unit>
        <trans-unit id="acfdc4b2f9d00e51d0b86829e77cfae27b4f24d2" translate="yes" xml:space="preserve">
          <source>case 2:</source>
          <target state="translated">ケース2.</target>
        </trans-unit>
        <trans-unit id="ed78773f1951f45134453a07a9d4294e79a113b9" translate="yes" xml:space="preserve">
          <source>case scenario, but is worse than most. Most languages have simpler inflection systems; for example, in English or Swahili, there are generally no more than two possible inflected forms for a given noun (&quot;error/errors&quot;; &quot;kosa/makosa&quot;), and the rules for producing these forms are fairly simple -- or at least, simple rules can be formulated that work for most words, and you can then treat the exceptions as just &quot;irregular&quot;, at least relative to your ad hoc rules. A simpler inflection system (simpler rules, fewer forms) means that design decisions are less crucial to maintaining sanity, whereas the same decisions could incur overhead-versus-scalability problems in languages like Russian. It may</source>
          <target state="translated">の場合のシナリオですが、ほとんどの言語よりも悪いです。例えば、英語やスワヒリ語では、与えられた名詞の屈折形は一般的に 2 つ以下であり(「error/errors」、「kosa/makosa」)、これらの形を生成するための規則はかなり単純である-あるいは、少なくとも、ほとんどの単語に対して機能する単純な規則を定式化することができます。屈折システムが単純化されている (規則が単純化され、形式が少ない)ということは、設計上の決定が正しさを維持する上でそれほど重要ではないということを意味します。以下のようなことが考えられます。</target>
        </trans-unit>
        <trans-unit id="8ed4fff79f00f04280fca592028b62646ceebcb8" translate="yes" xml:space="preserve">
          <source>case_tolerant</source>
          <target state="translated">case_tolerant</target>
        </trans-unit>
        <trans-unit id="b83f8f59f1383d72553121432f37dd666722076d" translate="yes" xml:space="preserve">
          <source>case_tolerant (override)</source>
          <target state="translated">ケーストレラント</target>
        </trans-unit>
        <trans-unit id="58570d43acfee774a2f7f4a43b5132f35fa8bae0" translate="yes" xml:space="preserve">
          <source>case_tolerant_process</source>
          <target state="translated">case_tolerant_process</target>
        </trans-unit>
        <trans-unit id="63493395b85afc8cc3a7e5cbc6cba06b259565f2" translate="yes" xml:space="preserve">
          <source>casefold()</source>
          <target state="translated">casefold()</target>
        </trans-unit>
        <trans-unit id="72b31ebd561ec27a7f94f47b1a920740e13a9ca6" translate="yes" xml:space="preserve">
          <source>casefolding</source>
          <target state="translated">casefolding</target>
        </trans-unit>
        <trans-unit id="bb74bb201637d9faef338c7e6118fdc68f094025" translate="yes" xml:space="preserve">
          <source>casemapping</source>
          <target state="translated">casemapping</target>
        </trans-unit>
        <trans-unit id="b24341449997253bc14f8830942d1ead186cfe58" translate="yes" xml:space="preserve">
          <source>casespec()</source>
          <target state="translated">casespec()</target>
        </trans-unit>
        <trans-unit id="16c71304ae30f71d8ffe8067ff4329c77039c916" translate="yes" xml:space="preserve">
          <source>casey@geeknest.com</source>
          <target state="translated">casey@geeknest.com</target>
        </trans-unit>
        <trans-unit id="8d7fbe178bda9cc24bbe3201b4c4af74789b50cd" translate="yes" xml:space="preserve">
          <source>cast_I32(I)</source>
          <target state="translated">cast_I32(I)</target>
        </trans-unit>
        <trans-unit id="84e7b2086c8eb62f9d5237cc91e39c77706d2a2f" translate="yes" xml:space="preserve">
          <source>cast_i32</source>
          <target state="translated">cast_i32</target>
        </trans-unit>
        <trans-unit id="37c645c27768e8baa31df5776a5099f2fc56644e" translate="yes" xml:space="preserve">
          <source>cast_iv</source>
          <target state="translated">cast_iv</target>
        </trans-unit>
        <trans-unit id="905a5b5402cdbf782b1ca3a1f3c4ac93f2588b9a" translate="yes" xml:space="preserve">
          <source>cast_ulong</source>
          <target state="translated">cast_ulong</target>
        </trans-unit>
        <trans-unit id="9d185b287c28a9aa3f051786b148be727cbc45a0" translate="yes" xml:space="preserve">
          <source>cast_uv</source>
          <target state="translated">cast_uv</target>
        </trans-unit>
        <trans-unit id="9d989e8d27dc9e0ec3389fc855f142c3d40f0c50" translate="yes" xml:space="preserve">
          <source>cat</source>
          <target state="translated">cat</target>
        </trans-unit>
        <trans-unit id="b7a1dd9696988ff944977d50eecb627d1171afd1" translate="yes" xml:space="preserve">
          <source>cat -v</source>
          <target state="translated">ねこのこ</target>
        </trans-unit>
        <trans-unit id="e015224f52631d484760fb8f6eab59fe1a21e175" translate="yes" xml:space="preserve">
          <source>catdir</source>
          <target state="translated">catdir</target>
        </trans-unit>
        <trans-unit id="39a07535f2074530590703b6f4499ec9d01e478f" translate="yes" xml:space="preserve">
          <source>catdir (override)</source>
          <target state="translated">catdir (オーバーライド)</target>
        </trans-unit>
        <trans-unit id="895295940961bf54e7860a91f978d53be44c1c97" translate="yes" xml:space="preserve">
          <source>catdir()</source>
          <target state="translated">catdir()</target>
        </trans-unit>
        <trans-unit id="f3e14269ef9d16f81051e26e771d77c24322ddc1" translate="yes" xml:space="preserve">
          <source>categorization, keyword, chapter_id</source>
          <target state="translated">カテゴリ分類、キーワード、チャプターID</target>
        </trans-unit>
        <trans-unit id="b8af4ddb2fd9d33e56485a48ce24f1383577c83a" translate="yes" xml:space="preserve">
          <source>catfile</source>
          <target state="translated">catfile</target>
        </trans-unit>
        <trans-unit id="ffce7c5404f3a5b4315dae8a52482fee7766d6f3" translate="yes" xml:space="preserve">
          <source>catfile (override)</source>
          <target state="translated">キャットファイル(オーバーライド)</target>
        </trans-unit>
        <trans-unit id="b60ab76cfc1cf02868fb0f89de7fc8d4ca4329eb" translate="yes" xml:space="preserve">
          <source>catpath</source>
          <target state="translated">catpath</target>
        </trans-unit>
        <trans-unit id="b0494c131cb68c1a6d90eb9701049f402f647b75" translate="yes" xml:space="preserve">
          <source>catpath (override)</source>
          <target state="translated">キャットパス</target>
        </trans-unit>
        <trans-unit id="a36ba03c3d7efc39b3ba1cf8ede103f7270247c5" translate="yes" xml:space="preserve">
          <source>catpath()</source>
          <target state="translated">catpath()</target>
        </trans-unit>
        <trans-unit id="8b5241c71bbdffecbb391eeb3bd478542f088494" translate="yes" xml:space="preserve">
          <source>caught</source>
          <target state="translated">caught</target>
        </trans-unit>
        <trans-unit id="ce39e901b8f283aefa4925c1fe1b0dac3ebd0891" translate="yes" xml:space="preserve">
          <source>cause the strings &lt;code&gt;'my,ears,are,bleeding'&lt;/code&gt; and &lt;code&gt;'qw/my ears are bleeding'&lt;/code&gt; respectively to be passed as the data argument.</source>
          <target state="translated">文字列 &lt;code&gt;'my,ears,are,bleeding'&lt;/code&gt; および &lt;code&gt;'qw/my ears are bleeding'&lt;/code&gt; それぞれデータ引数として渡します。</target>
        </trans-unit>
        <trans-unit id="d8573205b7f8e0810587a0422f70a6051e6cffc4" translate="yes" xml:space="preserve">
          <source>causes Perl to assume the following loop around your program, which makes it iterate over filename arguments somewhat like</source>
          <target state="translated">のようにファイル名の引数を繰り返し処理するようになります。</target>
        </trans-unit>
        <trans-unit id="c70f8ca968cc2b84a2d8f9ff723dd921b777eee6" translate="yes" xml:space="preserve">
          <source>causes Perl to check the syntax of the program and then exit without executing it. Actually, it</source>
          <target state="translated">を使うと、Perl はプログラムの構文をチェックして、実行せずに終了してしまいます。実際には</target>
        </trans-unit>
        <trans-unit id="7b78a06967eb0fcc80e6215114337d9827b4fb2f" translate="yes" xml:space="preserve">
          <source>causes error like this</source>
          <target state="translated">このようなエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="088014ee15be0c288a8023edf6654b8083e4a8da" translate="yes" xml:space="preserve">
          <source>causes it to pass &lt;code&gt;[ ['till','ears','are','bleeding'] ]&lt;/code&gt; ; the array reference specified in the data being passed inside the standard array reference indicating successful interpretation.</source>
          <target state="translated">&lt;code&gt;[ ['till','ears','are','bleeding'] ]&lt;/code&gt; を通過させます。正常な解釈を示す標準の配列参照内で渡されるデータで指定された配列参照。</target>
        </trans-unit>
        <trans-unit id="a3cc1baa11fc4f877879bd4dcfa4403a99d07883" translate="yes" xml:space="preserve">
          <source>causes it to pass &lt;code&gt;[ ['till','ears','are','bleeding'] ]&lt;/code&gt;; the array reference specified in the data being passed inside the standard array reference indicating successful interpretation.</source>
          <target state="translated">&lt;code&gt;[ ['till','ears','are','bleeding'] ]&lt;/code&gt; ;を通過させます。正常な解釈を示す標準配列参照内で渡されるデータで指定された配列参照。</target>
        </trans-unit>
        <trans-unit id="b2bf4396d07b4ae05a6896457aa1b58578889201" translate="yes" xml:space="preserve">
          <source>causes it to pass &lt;code&gt;['till','ears','are','bleeding']&lt;/code&gt; as the handler's data argument. While:</source>
          <target state="translated">ハンドラーのデータ引数として &lt;code&gt;['till','ears','are','bleeding']&lt;/code&gt; を渡します。その間：</target>
        </trans-unit>
        <trans-unit id="df8cc3e0e2570acf8b47b8189932aad1db4bc131" translate="yes" xml:space="preserve">
          <source>causes the LoudDecl::Loud handler to be invoked (even if OtherClass also defines a handler for &lt;code&gt;:Loud&lt;/code&gt; attributes).</source>
          <target state="translated">LoudDecl :: Loudハンドラーが呼び出されます（OtherClassでも &lt;code&gt;:Loud&lt;/code&gt; 属性のハンドラーが定義されている場合でも）。</target>
        </trans-unit>
        <trans-unit id="fb15d695643b39f8fa43791dc77a2c03e35f00b6" translate="yes" xml:space="preserve">
          <source>causes the above handler to be invoked, and passed:</source>
          <target state="translated">は、上記のハンドラを起動して渡されます。</target>
        </trans-unit>
        <trans-unit id="308c164380a37caf7cd1e563446905121804e3fe" translate="yes" xml:space="preserve">
          <source>causes the built, ready-to-install module code to be available below ./blib/lib and ./blib/arch and that there's a directory called 't' that contains our tests. Test::Harness isn't hardwired to that configuration but it saves me from explaining which files live where for each example.</source>
          <target state="translated">を使用すると、ビルドされた、すぐにインストールできるモジュールコードが ./blib/lib と ./blib/arch の下にあり、テストが格納されている 't' というディレクトリがあります。Test::Harness はこのような設定にハードワイヤリングされているわけではありませんが、サンプルごとにどのファイルがどこにあるかを説明する手間を省くことができます。</target>
        </trans-unit>
        <trans-unit id="252e750ff47e4f26ef1004fd4eb884dc2b37ed2e" translate="yes" xml:space="preserve">
          <source>causes variables, subroutines, formats, and file and directory handles accessible via the identifier &lt;code&gt;richard&lt;/code&gt; also to be accessible via the identifier &lt;code&gt;dick&lt;/code&gt; . If you want to alias only a particular variable or subroutine, assign a reference instead:</source>
          <target state="translated">識別子 &lt;code&gt;richard&lt;/code&gt; を介してアクセスできる変数、サブルーチン、フォーマット、およびファイルとディレクトリのハンドルも、識別子 &lt;code&gt;dick&lt;/code&gt; を介してアクセスできるようにします。特定の変数またはサブルーチンのみにエイリアスを設定する場合は、代わりに参照を割り当てます。</target>
        </trans-unit>
        <trans-unit id="6dabcc4bb085f06e75ae93460dbca046631fdb0c" translate="yes" xml:space="preserve">
          <source>causes variables, subroutines, formats, and file and directory handles accessible via the identifier &lt;code&gt;richard&lt;/code&gt; also to be accessible via the identifier &lt;code&gt;dick&lt;/code&gt;. If you want to alias only a particular variable or subroutine, assign a reference instead:</source>
          <target state="translated">変数、サブルーチン、フォーマット、および識別子 &lt;code&gt;richard&lt;/code&gt; を介してアクセス可能なファイルとディレクトリのハンドルを、識別子 &lt;code&gt;dick&lt;/code&gt; 介してアクセスできるようにします。特定の変数またはサブルーチンのみにエイリアスを付ける場合は、代わりに参照を割り当てます。</target>
        </trans-unit>
        <trans-unit id="97cdd3e3456f4eba2c5ebe936e9035c0fa811d91" translate="yes" xml:space="preserve">
          <source>causes_fail</source>
          <target state="translated">causes_fail</target>
        </trans-unit>
        <trans-unit id="e508b6b6da08048585c78062e7dffd2c2aeec0ce" translate="yes" xml:space="preserve">
          <source>cbt</source>
          <target state="translated">cbt</target>
        </trans-unit>
        <trans-unit id="bdb480de655aa6ec75ca058c849c4faf3c0f75b1" translate="yes" xml:space="preserve">
          <source>cc</source>
          <target state="translated">cc</target>
        </trans-unit>
        <trans-unit id="f08937e90c24d400e577f9cc2ca1aa79597537fb" translate="yes" xml:space="preserve">
          <source>cc ( ADDRESS [, ADDRESS [...]] )</source>
          <target state="translated">cc(ADDRESS [,ADDRESS [...])</target>
        </trans-unit>
        <trans-unit id="e12e6002847af51b7fe034f4ae458d7c224ff7eb" translate="yes" xml:space="preserve">
          <source>cc.U</source>
          <target state="translated">cc.U</target>
        </trans-unit>
        <trans-unit id="36c653ca6aa745b9e24d538496bc8b8d0b36922e" translate="yes" xml:space="preserve">
          <source>cc1.exe</source>
          <target state="translated">cc1.exe</target>
        </trans-unit>
        <trans-unit id="68f8d306fda448cf5b8a4926cd857b55b1f90a46" translate="yes" xml:space="preserve">
          <source>ccflags(), ccdlflags()</source>
          <target state="translated">ccflags()、ccdlflags()</target>
        </trans-unit>
        <trans-unit id="6bbfad7f25547b50fdac092afd8fe1321fabc60b" translate="yes" xml:space="preserve">
          <source>ccflags.U</source>
          <target state="translated">ccflags.U</target>
        </trans-unit>
        <trans-unit id="7077b0e5d2d87efca187d902e6880f495bdf6ecd" translate="yes" xml:space="preserve">
          <source>cco</source>
          <target state="translated">cco</target>
        </trans-unit>
        <trans-unit id="3e68cf2883a81fdd41ce12822f57f127e80cfe52" translate="yes" xml:space="preserve">
          <source>ccopts()</source>
          <target state="translated">ccopts()</target>
        </trans-unit>
        <trans-unit id="034778198a045c1ed80be271cdd029b76874f6fc" translate="yes" xml:space="preserve">
          <source>cd</source>
          <target state="translated">cd</target>
        </trans-unit>
        <trans-unit id="e992c3182d410b7ac370694b82237ca081ebad2b" translate="yes" xml:space="preserve">
          <source>cd /usr/local/ascii export IO_CONVERSION=NO gunzip &amp;lt; /usr/local/src/perl.tar.gz | pax -r</source>
          <target state="translated">cd / usr / local / ascii export IO_CONVERSION = NO gunzip &amp;lt;/usr/local/src/perl.tar.gz | pax -r</target>
        </trans-unit>
        <trans-unit id="f7c8cd0c2b39e0615a3916ddfa03de4480bedc53" translate="yes" xml:space="preserve">
          <source>cd /usr/local/src IO_CONVERSION=YES cp -r /usr/local/ascii/perl5.005_02 ./</source>
          <target state="translated">cd /usr/local/src IO_CONVERSION=YES cp -r /usr/local/ascii/perl5.005_02 .</target>
        </trans-unit>
        <trans-unit id="a48eb756cd6cdc5f26fdd31045cfd8710f8a3abd" translate="yes" xml:space="preserve">
          <source>cd Abstract</source>
          <target state="translated">cd 抄録</target>
        </trans-unit>
        <trans-unit id="db30a63094fef4c2f61b22e3289acc3079bfdecb" translate="yes" xml:space="preserve">
          <source>cdup ()</source>
          <target state="translated">cdup</target>
        </trans-unit>
        <trans-unit id="02cd8467dc324e9631313e2b2d896d1c32006648" translate="yes" xml:space="preserve">
          <source>ce-helpers/wince-reg.bat</source>
          <target state="translated">ce-helpers/wince-reg.bat</target>
        </trans-unit>
        <trans-unit id="305047e96ec089021660ee5965f893ac80268731" translate="yes" xml:space="preserve">
          <source>center</source>
          <target state="translated">center</target>
        </trans-unit>
        <trans-unit id="c92b40b9151b063c6a5976e4da985c5fd7c33df7" translate="yes" xml:space="preserve">
          <source>certain operations 'upgrade' their calculation and thus the result to the class Foo::Bar. Usually this is used in conjunction with Math::BigFloat:</source>
          <target state="translated">は、特定の演算が計算を 'アップグレード' し、その結果をクラス Foo::Bar にします。通常、これは Math::BigFloat と一緒に使用されます。</target>
        </trans-unit>
        <trans-unit id="f22c7b71da8e7b91af77c1e966a231ef482b7b4a" translate="yes" xml:space="preserve">
          <source>certain operations will 'upgrade' their calculation and thus the result to the class Foo::Bar. Usually this is used in conjunction with Math::BigFloat:</source>
          <target state="translated">特定の演算は計算を「アップグレード」し、結果を Foo::Bar クラスにします。通常、これは Math::BigFloat と一緒に使用されます。</target>
        </trans-unit>
        <trans-unit id="1a1dc14cbfb80ebee3e6fa16d5973ad2a9773a40" translate="yes" xml:space="preserve">
          <source>cf_email.U</source>
          <target state="translated">cf_email.U</target>
        </trans-unit>
        <trans-unit id="0fee8d38867e35f1baff12ad4f0ab653efd982ee" translate="yes" xml:space="preserve">
          <source>cf_who.U</source>
          <target state="translated">cf_who.U</target>
        </trans-unit>
        <trans-unit id="f52d8c41a15e440b898d2ed0b47735955985f789" translate="yes" xml:space="preserve">
          <source>cflags</source>
          <target state="translated">cflags</target>
        </trans-unit>
        <trans-unit id="a5c2dd8275ddeae426e174270bdab985141b12f1" translate="yes" xml:space="preserve">
          <source>cflags (o)</source>
          <target state="translated">フラグ</target>
        </trans-unit>
        <trans-unit id="5b747cd2459e68bde21af86e6d507fe2284ab610" translate="yes" xml:space="preserve">
          <source>cflags (override)</source>
          <target state="translated">フラグ</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
