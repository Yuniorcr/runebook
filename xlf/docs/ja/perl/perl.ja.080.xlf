<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="cb82821f5443620916128c66c024a61d87b0565d" translate="yes" xml:space="preserve">
          <source>instead of</source>
          <target state="translated">に代えて</target>
        </trans-unit>
        <trans-unit id="2f1647312ffbefd675d8f528a8e37c5009e71a69" translate="yes" xml:space="preserve">
          <source>instead of WriteMakefile().</source>
          <target state="translated">の代わりに WriteMakefile()を使用します。</target>
        </trans-unit>
        <trans-unit id="eba0c6725752796c17e07a2937a561d006b6b15d" translate="yes" xml:space="preserve">
          <source>instead of as equivalent to a &quot;C&quot; formatting code containing only &quot;$foo-&quot;, and then a &quot;bar&amp;gt;&quot; outside the &quot;C&quot; formatting code. This problem has since been solved by the addition of syntaxes like this:</source>
          <target state="translated">「$ foo-」のみを含む「C」フォーマットコードと同等ではなく、「C」フォーマットコードの外側の「bar&amp;gt;」。この問題は、次のような構文を追加することで解決されています。</target>
        </trans-unit>
        <trans-unit id="339af1c38f4492cc861c0d877b7a58adb6e97b45" translate="yes" xml:space="preserve">
          <source>instead of directory names (strictly speaking, a string like &quot;:a&quot; is a path, but not a name, since it contains a punctuation character &quot;:&quot;).</source>
          <target state="translated">の代わりにディレクトリ名を使用します (厳密に言えば、&quot;:a&quot; のような文字列はパスではありますが、名前ではありません。)</target>
        </trans-unit>
        <trans-unit id="71c621eff819164ca1ecdbe04a4dc834c714be8e" translate="yes" xml:space="preserve">
          <source>instead of file for the source of text.</source>
          <target state="translated">の代わりに、テキストのソースにファイルを使用します。</target>
        </trans-unit>
        <trans-unit id="88c26c2da878553e470eabd76716a5185e744b60" translate="yes" xml:space="preserve">
          <source>instead of having to write these:</source>
          <target state="translated">これらを書くのではなく</target>
        </trans-unit>
        <trans-unit id="91a313e739687b01fbf17ae071a8b7960e77caf3" translate="yes" xml:space="preserve">
          <source>instead of importing it from &lt;code&gt;Scalar::Util&lt;/code&gt; . It should now be possible to disable DESTROY and CLONE. Note that while it isn't disabled, DESTROY will be called before the garbage collection of field hashes, so it will be invoked with a functional object and will continue to function.</source>
          <target state="translated">&lt;code&gt;Scalar::Util&lt;/code&gt; からインポートする代わりに。DESTROYとCLONEを無効にできるようになりました。無効にされていない場合、フィールドハッシュのガベージコレクションの前にDESTROYが呼び出されるため、機能オブジェクトで呼び出され、機能し続けることに注意してください。</target>
        </trans-unit>
        <trans-unit id="ee6090491eb1b185461d6c2df89cdefe0156cf13" translate="yes" xml:space="preserve">
          <source>instead of importing it from &lt;code&gt;Scalar::Util&lt;/code&gt;. It should now be possible to disable DESTROY and CLONE. Note that while it isn't disabled, DESTROY will be called before the garbage collection of field hashes, so it will be invoked with a functional object and will continue to function.</source>
          <target state="translated">&lt;code&gt;Scalar::Util&lt;/code&gt; からインポートする代わりに。これで、DESTROYとCLONEを無効にできるはずです。無効にされていない間、DESTROYはフィールドハッシュのガベージコレクションの前に呼び出されるため、関数オブジェクトで呼び出され、引き続き機能することに注意してください。</target>
        </trans-unit>
        <trans-unit id="ca19eef2eb91cd974e6c0056c5fddda19bfec434" translate="yes" xml:space="preserve">
          <source>instead of this:</source>
          <target state="translated">これの代わりに</target>
        </trans-unit>
        <trans-unit id="6c8457cd65849bf5a9285f8b862e990e1a44ac09" translate="yes" xml:space="preserve">
          <source>instead of:</source>
          <target state="translated">の代わりに</target>
        </trans-unit>
        <trans-unit id="0dfc30290bccc6dc13a8fe9fb0436218d5478317" translate="yes" xml:space="preserve">
          <source>instead or additionally: &lt;code&gt;-Accflags='-DNO_POSIX_2008_LOCALE'&lt;/code&gt;. This will also keep the code from using thread-safe locales. &lt;code&gt;${^SAFE_LOCALES}&lt;/code&gt; will be 0 on systems that turn off the thread-safe operations.</source>
          <target state="translated">代わりにまたは追加で： &lt;code&gt;-Accflags='-DNO_POSIX_2008_LOCALE'&lt;/code&gt; 。これにより、コードがスレッドセーフなロケールを使用することも防止されます。スレッドセーフ操作をオフにするシステムでは、 &lt;code&gt;${^SAFE_LOCALES}&lt;/code&gt; は0になります。</target>
        </trans-unit>
        <trans-unit id="bcd1c0a3df4642e2147982d69e49b696e53ddfb8" translate="yes" xml:space="preserve">
          <source>instead since</source>
          <target state="translated">かわりに</target>
        </trans-unit>
        <trans-unit id="55e45921eb338b868da29d4463e5c0b1a7fa032c" translate="yes" xml:space="preserve">
          <source>instead). All tests are run from the</source>
          <target state="translated">の代わりに)。すべてのテストは</target>
        </trans-unit>
        <trans-unit id="6568964b0e39083c6acb94093d9e6cd117dbe508" translate="yes" xml:space="preserve">
          <source>instead.</source>
          <target state="translated">instead.</target>
        </trans-unit>
        <trans-unit id="5864cc31660892914a70fe91105e62ed75ab49ed" translate="yes" xml:space="preserve">
          <source>instead. Accepted for backward compatibility; this option no longer does anything.</source>
          <target state="translated">の代わりに このオプションはもはや何もしません。</target>
        </trans-unit>
        <trans-unit id="ef03d77059a00bfd1c11d4cbfef75cdec7cdddf4" translate="yes" xml:space="preserve">
          <source>instead. Example:</source>
          <target state="translated">の代わりに 例を挙げてみます。</target>
        </trans-unit>
        <trans-unit id="204889318f37ff1d1f1f6f99292b41699b359695" translate="yes" xml:space="preserve">
          <source>instead. The first argument is the modulus, the second is the angle (in radians, the full circle is 2*pi). (Mnemonic: &lt;code&gt;e&lt;/code&gt; is used as a notation for complex numbers in the polar form).</source>
          <target state="translated">代わりに。最初の引数は係数、2番目の引数は角度です（ラジアンでは、完全な円は2 * piです）。（記憶法： &lt;code&gt;e&lt;/code&gt; は、極形式の複素数の表記として使用されます）。</target>
        </trans-unit>
        <trans-unit id="7645f7261302e0c93107f96c3a0a2f2e386a7465" translate="yes" xml:space="preserve">
          <source>instmodsh</source>
          <target state="translated">instmodsh</target>
        </trans-unit>
        <trans-unit id="70e40b33ec9352c176bca23475fd76d8a67b5973" translate="yes" xml:space="preserve">
          <source>instmodsh - A shell to examine installed modules</source>
          <target state="translated">instmodsh-インストールされたモジュールを調べるシェル</target>
        </trans-unit>
        <trans-unit id="d74e5262123578d183e5d842fafff74d559825df" translate="yes" xml:space="preserve">
          <source>instr</source>
          <target state="translated">instr</target>
        </trans-unit>
        <trans-unit id="1d52ae13ac6814d64753bd650c8b9eb068671b1f" translate="yes" xml:space="preserve">
          <source>instrumenting</source>
          <target state="translated">instrumenting</target>
        </trans-unit>
        <trans-unit id="cf024bf7ff5c78f4291e2a56cf869c898842d0fd" translate="yes" xml:space="preserve">
          <source>instubperl.U</source>
          <target state="translated">instubperl.U</target>
        </trans-unit>
        <trans-unit id="46f8ab7c0cff9df7cd124852e26022a6bf89e315" translate="yes" xml:space="preserve">
          <source>int</source>
          <target state="translated">int</target>
        </trans-unit>
        <trans-unit id="6c36204b30c264dd8c654c40f76b604c80780842" translate="yes" xml:space="preserve">
          <source>int EXPR</source>
          <target state="translated">エックスピーアール</target>
        </trans-unit>
        <trans-unit id="4eb6262cae51e17a2b0ff49da156da64d485fa79" translate="yes" xml:space="preserve">
          <source>int()</source>
          <target state="translated">int()</target>
        </trans-unit>
        <trans-unit id="d71739707a7eafbe926fe99f6312cc8634db005d" translate="yes" xml:space="preserve">
          <source>int32</source>
          <target state="translated">int32</target>
        </trans-unit>
        <trans-unit id="1c830d4cb2d45b412b7057a484a67e52c90ef619" translate="yes" xml:space="preserve">
          <source>int_value</source>
          <target state="translated">int_value</target>
        </trans-unit>
        <trans-unit id="1178cafbd64bbbfa77f5ac0a9d5032ed88162781" translate="yes" xml:space="preserve">
          <source>integer</source>
          <target state="translated">integer</target>
        </trans-unit>
        <trans-unit id="81edaa310efa3869e0192600c26c36ecc2b41f19" translate="yes" xml:space="preserve">
          <source>integer - Perl pragma to use integer arithmetic instead of floating point</source>
          <target state="translated">integer-浮動小数点演算の代わりに整数演算を使用するための Perl のプラグマ。</target>
        </trans-unit>
        <trans-unit id="1f7eb7b938a62fcc0eef0f61d44ced570ecec276" translate="yes" xml:space="preserve">
          <source>integer subscript</source>
          <target state="translated">整数添字</target>
        </trans-unit>
        <trans-unit id="449c5ca847391baf42cd48557a145c97b5e7781b" translate="yes" xml:space="preserve">
          <source>integer values, since &quot;directory&quot; is an inanimate noun, when preceded by a number and in the nominative or accusative cases (as it is here, just your luck!), it does stay plural, but it is forced into the genitive case -- yet another ending... And you never hear him get to the part about how you're going to run into similar (but maybe subtly different) problems with other Slavic languages like Polish, because the floor comes up to meet you, and you fade into unconsciousness.</source>
          <target state="translated">整数値の場合、&quot;directory &quot;は無生物の名詞なので、数字が前に出て、名詞やアクセントの場合(ここではそうですが、運が良ければ!)には複数形のままですが、属格の場合に強制的に入れられます。そして、あなたは彼がどのようにあなたがポーランド語のような他のスラブ言語で似たような(しかし、多分微妙に異なる)問題に実行しようとしているかについての部分に到達するのを聞くことはありません、床があなたを満たすために出てくるので、あなたは無意識のうちにフェードします。</target>
        </trans-unit>
        <trans-unit id="59803099f01814cb5c826701a0cffd6c1c391679" translate="yes" xml:space="preserve">
          <source>integers and numbers with decimal points are allowed in front of an exponent. Then exponents, like the overall sign, are independent of whether we are matching numbers with or without decimal points, and can be &quot;decoupled&quot; from the mantissa. The overall form of the regexp now becomes clear:</source>
          <target state="translated">指数の前には、整数と小数点を持つ数が許されます。指数は、全体の符号と同じように、小数点のある数字と小数点のない数字のどちらにマッチするかに依存せず、仮数から &quot;切り離す &quot;ことができます。これで、正規表現の全体的な形が明らかになりました。</target>
        </trans-unit>
        <trans-unit id="5cbf2e209eef789477d4a083088b0b6f85e093bb" translate="yes" xml:space="preserve">
          <source>integers and numbers with decimal points are allowed in front of an exponent. Then exponents, like the overall sign, are independent of whether we are matching numbers with or without decimal points, and can be 'decoupled' from the mantissa. The overall form of the regexp now becomes clear:</source>
          <target state="translated">指数の前には、整数と小数点を持つ数が許されます。指数は、全体の符号と同じように、小数点のある数字と小数点のない数字のどちらにマッチしているかに依存せず、仮数から「切り離す」ことができます。これで、正規表現の全体的な形が明らかになりました。</target>
        </trans-unit>
        <trans-unit id="8530773c89ade420faa71319e7ce6daa712ea89c" translate="yes" xml:space="preserve">
          <source>intended as a general cross-platform interface to all your C building needs. That would have been a much more ambitious goal!</source>
          <target state="translated">は、C 言語のビルドに必要なすべてのものに対応する、一般的なクロスプラットフォームのインターフェイスとして意図されています。それはもっと野心的な目標だったでしょう!</target>
        </trans-unit>
        <trans-unit id="41b2a346afcb03862127323893afda0250576026" translate="yes" xml:space="preserve">
          <source>intention</source>
          <target state="translated">intention</target>
        </trans-unit>
        <trans-unit id="0b225f92dddfc1828c8f429b7d2a532810a1c6ab" translate="yes" xml:space="preserve">
          <source>intercept(&amp;amp;)</source>
          <target state="translated">intercept(&amp;amp;)</target>
        </trans-unit>
        <trans-unit id="6372e8e6c1a79994c53959bec989f03c1e0e9d25" translate="yes" xml:space="preserve">
          <source>interchangeably. But just as confusing the terms byte and character is dangerous and the terms should be differentiated when needed, we need to differentiate</source>
          <target state="translated">といった具合に使い分けています。しかし、バイトと文字という用語を混同するのは危険であり、必要に応じて区別すべきであるのと同じように、私たちは</target>
        </trans-unit>
        <trans-unit id="5ea2d81a89e0cdc89baf7cd1ff38cdfefa33ba78" translate="yes" xml:space="preserve">
          <source>interface</source>
          <target state="translated">interface</target>
        </trans-unit>
        <trans-unit id="e5d84f3be36511b9cf0c6417bb410c050384d434" translate="yes" xml:space="preserve">
          <source>interface (see &lt;a href=&quot;perlembed&quot;&gt;perlembed&lt;/a&gt;) to make very customized executables.</source>
          <target state="translated">非常にカスタマイズされた実行可能ファイルを作成するためのインターフェース（&lt;a href=&quot;perlembed&quot;&gt;perlembedを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="34b8b656f661dde4a485cdae2859f84de092702d" translate="yes" xml:space="preserve">
          <source>interface (see &lt;a href=&quot;perlembed&quot;&gt;perlembed&lt;/a&gt;), such things are easy to do repeating the steps outlined in &lt;a href=&quot;#Making-executables-with-a-custom-collection-of-statically-loaded-extensions&quot;&gt;Making executables with a custom collection of statically loaded extensions&lt;/a&gt;, and doing more comprehensive edits to main() of</source>
          <target state="translated">インターフェース（&lt;a href=&quot;perlembed&quot;&gt;perlembedを&lt;/a&gt;参照）では、&lt;a href=&quot;#Making-executables-with-a-custom-collection-of-statically-loaded-extensions&quot;&gt;静的にロードされた拡張機能のカスタムコレクションを使用して実行可能ファイルを作成&lt;/a&gt;するで概説されている手順を繰り返し、メインの</target>
        </trans-unit>
        <trans-unit id="44a5c0ca14b07e1d09edfab4ed9426393b051f23" translate="yes" xml:space="preserve">
          <source>interface (see &lt;a href=&quot;perlembed&quot;&gt;perlembed&lt;/a&gt;), such things are easy to do repeating the steps outlined in L/&amp;lt;Making executables with a custom collection of statically loaded extensions&amp;gt;, and doing more comprehensive edits to main() of</source>
          <target state="translated">インターフェイス（&lt;a href=&quot;perlembed&quot;&gt;perlembedを&lt;/a&gt;参照）では、L / &amp;lt;静的にロードされた拡張機能のカスタムコレクションを使用して実行可能ファイルを作成する&amp;gt;で概説されている手順を繰り返し、main（）のより包括的な編集を行うのは簡単です。</target>
        </trans-unit>
        <trans-unit id="9404540d9f00d3c17c19b97f44fa1073b9f1c94f" translate="yes" xml:space="preserve">
          <source>interface provided by zlib.</source>
          <target state="translated">zlibが提供するインターフェースです。</target>
        </trans-unit>
        <trans-unit id="46e1a61d83495a69cfaa8d84253bec174db2a0fe" translate="yes" xml:space="preserve">
          <source>interface to the dynamic linking mechanisms available on many platforms. Its primary purpose is to implement cheap automatic dynamic loading of Perl modules.</source>
          <target state="translated">多くのプラットフォームで利用可能な動的リンク機構へのインターフェイスです。その主な目的は、Perl モジュールの安価な自動動的ロードを実装することです。</target>
        </trans-unit>
        <trans-unit id="4971c93878fca386fa5d4bfe4710796fed0a245d" translate="yes" xml:space="preserve">
          <source>interface used by &lt;a href=&quot;TAP::Parser::IteratorFactory&quot;&gt;TAP::Parser::IteratorFactory&lt;/a&gt;. At 2 methods, the interface is pretty simple: &lt;a href=&quot;#can_handle&quot;&gt;&quot;can_handle&quot;&lt;/a&gt; and &lt;a href=&quot;#make_source&quot;&gt;&quot;make_source&quot;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;TAP::Parser::IteratorFactory&quot;&gt;TAP :: Parser :: IteratorFactory&lt;/a&gt;によって使用されるインターフェース。&lt;a href=&quot;#can_handle&quot;&gt;「can_handle」&lt;/a&gt;と&lt;a href=&quot;#make_source&quot;&gt;「make_source」の&lt;/a&gt;2つのメソッドでは、インターフェースは非常に単純です。</target>
        </trans-unit>
        <trans-unit id="902ee24d0f5c369c83561e631220c869f56c159a" translate="yes" xml:space="preserve">
          <source>interface_hairy.h</source>
          <target state="translated">interface_hairy.h</target>
        </trans-unit>
        <trans-unit id="58abb7dae834bec7c2231a51b0e43d7b2f1dcd1e" translate="yes" xml:space="preserve">
          <source>interface_simple.h</source>
          <target state="translated">interface_simple.h</target>
        </trans-unit>
        <trans-unit id="c48322cd43b3f5db0aa919df16088078ec067df7" translate="yes" xml:space="preserve">
          <source>interior-sequence storage will not be reclaimed upon destruction!</source>
          <target state="translated">内部シーケンスストレージは破壊されても再生されません!</target>
        </trans-unit>
        <trans-unit id="9f33a7c798af6fd6abb28049d9c1b3edfa2fd24a" translate="yes" xml:space="preserve">
          <source>internal</source>
          <target state="translated">internal</target>
        </trans-unit>
        <trans-unit id="80db80017bf8bbe19665f5e1d1ee2ea716a054e5" translate="yes" xml:space="preserve">
          <source>internal %&amp;lt;num&amp;gt;p might conflict with future printf extensions</source>
          <target state="translated">内部％&amp;lt;num&amp;gt; pは将来のprintf拡張機能と競合する可能性があります</target>
        </trans-unit>
        <trans-unit id="e51ec2956340bd90ad015ad9b1a44eb41fe13048" translate="yes" xml:space="preserve">
          <source>internal error: useconds &amp;lt; 0 (unsigned ... signed ...)</source>
          <target state="translated">内部エラー：useconds &amp;lt;0（符号なし...符号付き...）</target>
        </trans-unit>
        <trans-unit id="8bc675a4bbcb339a374caa4cff4d8cc8a867b3a0" translate="yes" xml:space="preserve">
          <source>internally. &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; is just a synonym for &lt;code&gt;&amp;lt;ARGV&amp;gt;&lt;/code&gt; , which is magical. (The pseudo code above doesn't work because it treats &lt;code&gt;&amp;lt;ARGV&amp;gt;&lt;/code&gt; as non-magical.)</source>
          <target state="translated">内部的に。 &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; は &lt;code&gt;&amp;lt;ARGV&amp;gt;&lt;/code&gt; の同義語であり、魔法のようなものです。（上記の疑似コードは &lt;code&gt;&amp;lt;ARGV&amp;gt;&lt;/code&gt; を非魔法として扱うので機能しません。）</target>
        </trans-unit>
        <trans-unit id="3c576e2ab5d4dabd7f355282abaa6d1a2d144ef1" translate="yes" xml:space="preserve">
          <source>internally. &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; is just a synonym for &lt;code&gt;&amp;lt;ARGV&amp;gt;&lt;/code&gt;, which is magical. (The pseudo code above doesn't work because it treats &lt;code&gt;&amp;lt;ARGV&amp;gt;&lt;/code&gt; as non-magical.)</source>
          <target state="translated">内部的に。 &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; は &lt;code&gt;&amp;lt;ARGV&amp;gt;&lt;/code&gt; の同義語であり、魔法のようなものです。（上記の擬似コードは、 &lt;code&gt;&amp;lt;ARGV&amp;gt;&lt;/code&gt; を非魔法として扱うため、機能しません。）</target>
        </trans-unit>
        <trans-unit id="f95a7232cfa16eef01e2e32a3d063b6807475100" translate="yes" xml:space="preserve">
          <source>interp</source>
          <target state="translated">interp</target>
        </trans-unit>
        <trans-unit id="dd17e57867fd7c7c09f592d502367e7a72bee660" translate="yes" xml:space="preserve">
          <source>interp.c</source>
          <target state="translated">interp.c</target>
        </trans-unit>
        <trans-unit id="5ec54f35edbea363d07d169d7643fe49322214d6" translate="yes" xml:space="preserve">
          <source>interpolate within double quotes, nor do single quotes impede evaluation of variables when used within double quotes.</source>
          <target state="translated">は、二重引用符の中で補間したり、二重引用符の中で使用した場合に単一引用符が変数の評価を妨げたりすることはありません。</target>
        </trans-unit>
        <trans-unit id="21842adaec06e4938f4774dc8dc13c419d06b021" translate="yes" xml:space="preserve">
          <source>interpolate, see &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt;.</source>
          <target state="translated">補間します&lt;a href=&quot;perlref&quot;&gt;。perlrefを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="bd3e3bae86aed5d98047d91fc3620a79cc02a533" translate="yes" xml:space="preserve">
          <source>interpolation</source>
          <target state="translated">interpolation</target>
        </trans-unit>
        <trans-unit id="7365365ce3b1fe060f6c2b335e7ead37819acbe2" translate="yes" xml:space="preserve">
          <source>interpreted as a signed integer</source>
          <target state="translated">符号付き整数</target>
        </trans-unit>
        <trans-unit id="0e543b666973effce414ee3f4d76d89f51fccfe5" translate="yes" xml:space="preserve">
          <source>interpreter</source>
          <target state="translated">interpreter</target>
        </trans-unit>
        <trans-unit id="22798399388200f939f1d84f974aacbf98336d00" translate="yes" xml:space="preserve">
          <source>interpreter has to be &lt;b&gt;compiled&lt;/b&gt; differently for each platform because it is implemented in C, but programs written in the Perl language are largely platform independent.</source>
          <target state="translated">インタプリタはCで実装されているため、プラットフォームごとに異なる方法で&lt;b&gt;コンパイル&lt;/b&gt;する必要がありますが、Perl言語で記述されたプログラムは、プラットフォームに大きく依存しません。</target>
        </trans-unit>
        <trans-unit id="09d29e0b1909ff0aa3805759c7f1db36d575f073" translate="yes" xml:space="preserve">
          <source>interpreter threads</source>
          <target state="translated">インタプリタスレッド</target>
        </trans-unit>
        <trans-unit id="d897bf481c6d3038f32cd50b3a8b5f6cf56b6348" translate="yes" xml:space="preserve">
          <source>interrupted</source>
          <target state="translated">interrupted</target>
        </trans-unit>
        <trans-unit id="5e40097f4262a60de6a010dd128b47db45b0fccb" translate="yes" xml:space="preserve">
          <source>intflags</source>
          <target state="translated">intflags</target>
        </trans-unit>
        <trans-unit id="a379c85f8c69a0d3679d831f2b58817f66b078af" translate="yes" xml:space="preserve">
          <source>into</source>
          <target state="translated">into</target>
        </trans-unit>
        <trans-unit id="80a3fceeaea68858a65bb33607e442ea25c1e2b4" translate="yes" xml:space="preserve">
          <source>into UTF-8, and similarly converts character code points. This is used when the script is a combination of ASCII (for the variable names and punctuation,</source>
          <target state="translated">を UTF-8 に変換し、同様に文字コードポイントを変換します。これは、スクリプトがASCII(変数名と句読点のためのもの)の組み合わせの場合に使用されます。</target>
        </trans-unit>
        <trans-unit id="5efbb46a90ecb3ca1fecc85280ad96184eda7b36" translate="yes" xml:space="preserve">
          <source>into Unix format before being written to the zip file.</source>
          <target state="translated">をUnix形式に変換してからzipファイルに書き込んでください。</target>
        </trans-unit>
        <trans-unit id="5a8ec964fb55903ea9af77229da3a4f176eca61a" translate="yes" xml:space="preserve">
          <source>into a &lt;code&gt;lineseq&lt;/code&gt; list op, which is returned.</source>
          <target state="translated">返される &lt;code&gt;lineseq&lt;/code&gt; リストopに。</target>
        </trans-unit>
        <trans-unit id="09bdc6967275516d660dcb43a692aac47b477ffa" translate="yes" xml:space="preserve">
          <source>into a list op if it is not one already, and then converts it into the specified</source>
          <target state="translated">をリストの op に変換し、それを指定された</target>
        </trans-unit>
        <trans-unit id="b7c2f1c117ba3a76953af5844ab58cf92951ba02" translate="yes" xml:space="preserve">
          <source>into and</source>
          <target state="translated">に入って</target>
        </trans-unit>
        <trans-unit id="0e21ff0e56d846baee28d588470952974dd44859" translate="yes" xml:space="preserve">
          <source>into the package by &lt;code&gt;filter_add&lt;/code&gt; , unless the reference was already blessed.</source>
          <target state="translated">参照が既に祝福されていない限り、 &lt;code&gt;filter_add&lt;/code&gt; によってパッケージに追加します。</target>
        </trans-unit>
        <trans-unit id="59b4d2c82e23577da827841f4466beecfb184b53" translate="yes" xml:space="preserve">
          <source>into the package by &lt;code&gt;filter_add&lt;/code&gt;, unless the reference was already blessed.</source>
          <target state="translated">参照がすでに祝福されていない限り、 &lt;code&gt;filter_add&lt;/code&gt; によってパッケージに追加します。</target>
        </trans-unit>
        <trans-unit id="4f339c3e14932662ae9d0559ad77c63d4936a2d3" translate="yes" xml:space="preserve">
          <source>into this:</source>
          <target state="translated">これに</target>
        </trans-unit>
        <trans-unit id="0bfe43fba7129ed9dac4397e68765123167495af" translate="yes" xml:space="preserve">
          <source>intro_my</source>
          <target state="translated">intro_my</target>
        </trans-unit>
        <trans-unit id="760aebbce7f663b4ebc868367cc05da9ede071dc" translate="yes" xml:space="preserve">
          <source>intrpvar.h</source>
          <target state="translated">intrpvar.h</target>
        </trans-unit>
        <trans-unit id="ad345dd991761a50f9adb9059b18cd2ed01ff85e" translate="yes" xml:space="preserve">
          <source>intsize.U</source>
          <target state="translated">intsize.U</target>
        </trans-unit>
        <trans-unit id="2bb8530511b63a0c151d59eadae559d3b4f9fc74" translate="yes" xml:space="preserve">
          <source>intuit</source>
          <target state="translated">intuit</target>
        </trans-unit>
        <trans-unit id="60287f8d0998472681bca816cace765cad1e3d18" translate="yes" xml:space="preserve">
          <source>invalid option -D%c, use -D'' to see choices</source>
          <target state="translated">無効なオプション -D%c,選択肢を表示するには -D'' を使用してください。</target>
        </trans-unit>
        <trans-unit id="b712b0f1d2c4286763eab08ade92c1091ec6dd8d" translate="yes" xml:space="preserve">
          <source>invalid, potentially earning a different error message than the error message (or warning, or event) generated by a merely unknown (but theoretically valid) htmlname, as in &quot;E&amp;lt;qacute&amp;gt;&quot; [sic]. However, Pod parsers are not required to make this distinction.</source>
          <target state="translated">&quot;E &amp;lt;qacute&amp;gt;&quot; [sic]のように、単に不明な（ただし理論的には有効な）htmlnameによって生成されたエラーメッセージ（または警告、イベント）とは異なるエラーメッセージを受け取る可能性があります。ただし、ポッドパーサーはこの区別を行う必要はありません。</target>
        </trans-unit>
        <trans-unit id="1292ad671fbfc4d35ca913ab3b9a0129dc90d413" translate="yes" xml:space="preserve">
          <source>inverse operation should be applied in the Fetch method.</source>
          <target state="translated">Fetchメソッドでは逆演算を行う必要があります。</target>
        </trans-unit>
        <trans-unit id="a1754a8aa1386d7939bfddd474cd0652882671b3" translate="yes" xml:space="preserve">
          <source>invert</source>
          <target state="translated">invert</target>
        </trans-unit>
        <trans-unit id="208bf071c0654aef21d3c751be71fb9e76d12575" translate="yes" xml:space="preserve">
          <source>invert_opset (OPSET)</source>
          <target state="translated">インバートオプセット</target>
        </trans-unit>
        <trans-unit id="1715a7795fa0d0b4a7e6dc1165acd290b5359bbb" translate="yes" xml:space="preserve">
          <source>invlist_array</source>
          <target state="translated">invlist_array</target>
        </trans-unit>
        <trans-unit id="04688549c24962b5d164a13b68617c73b560731c" translate="yes" xml:space="preserve">
          <source>invlist_clear</source>
          <target state="translated">invlist_clear</target>
        </trans-unit>
        <trans-unit id="6bd794f3a9132aa98f5f4d4639b6ae54e359dd75" translate="yes" xml:space="preserve">
          <source>invlist_clone</source>
          <target state="translated">invlist_clone</target>
        </trans-unit>
        <trans-unit id="59bd8d009f9af96ef5701e763959f3595bc0a2ad" translate="yes" xml:space="preserve">
          <source>invlist_contents</source>
          <target state="translated">invlist_contents</target>
        </trans-unit>
        <trans-unit id="9134ffd908be5e210bc3dc809294a20d4c856f37" translate="yes" xml:space="preserve">
          <source>invlist_extend</source>
          <target state="translated">invlist_extend</target>
        </trans-unit>
        <trans-unit id="a89824929a97ee5528bc4bb391b40e7559bfb2f2" translate="yes" xml:space="preserve">
          <source>invlist_highest</source>
          <target state="translated">invlist_highest</target>
        </trans-unit>
        <trans-unit id="4a76ae9e8eed3b9c4c3e909c05dbdee1e76166a8" translate="yes" xml:space="preserve">
          <source>invlist_is_iterating</source>
          <target state="translated">invlist_is_iterating</target>
        </trans-unit>
        <trans-unit id="127966e2609480fb92a39f73552738b93777983e" translate="yes" xml:space="preserve">
          <source>invlist_iterfinish</source>
          <target state="translated">invlist_iterfinish</target>
        </trans-unit>
        <trans-unit id="b1ac20824e71617e15e6d9224978737a4dfcff25" translate="yes" xml:space="preserve">
          <source>invlist_iterinit</source>
          <target state="translated">invlist_iterinit</target>
        </trans-unit>
        <trans-unit id="a9f52358555ed8c1cfd6377d3b97be2d83211c12" translate="yes" xml:space="preserve">
          <source>invlist_iternext</source>
          <target state="translated">invlist_iternext</target>
        </trans-unit>
        <trans-unit id="225291e5bd34f5c3be1e04563e377211a4569951" translate="yes" xml:space="preserve">
          <source>invlist_lowest</source>
          <target state="translated">invlist_lowest</target>
        </trans-unit>
        <trans-unit id="bd4ab2c7dbb0c0badc0d624f7845e6c672b176a5" translate="yes" xml:space="preserve">
          <source>invlist_max</source>
          <target state="translated">invlist_max</target>
        </trans-unit>
        <trans-unit id="8fa332aeb55e8690c78c1aa863b6b03e544cb65e" translate="yes" xml:space="preserve">
          <source>invlist_previous_index</source>
          <target state="translated">invlist_previous_index</target>
        </trans-unit>
        <trans-unit id="2d1aecca59b3f5a582905dba71c40b39af16936d" translate="yes" xml:space="preserve">
          <source>invlist_set_len</source>
          <target state="translated">invlist_set_len</target>
        </trans-unit>
        <trans-unit id="bf976b10b19dacd5f9fc7e56bb5aa0e3672593ed" translate="yes" xml:space="preserve">
          <source>invlist_set_previous_index</source>
          <target state="translated">invlist_set_previous_index</target>
        </trans-unit>
        <trans-unit id="e65e2690eca7afb15f45d4b3993152e8a6b41af1" translate="yes" xml:space="preserve">
          <source>invlist_trim</source>
          <target state="translated">invlist_trim</target>
        </trans-unit>
        <trans-unit id="5d107a531c5ae9bb93e25ac25a5269f31b9b8d96" translate="yes" xml:space="preserve">
          <source>invmap_dump</source>
          <target state="translated">invmap_dump</target>
        </trans-unit>
        <trans-unit id="eedee027475509437fd9d1276f32a7450f913287" translate="yes" xml:space="preserve">
          <source>invocant</source>
          <target state="translated">invocant</target>
        </trans-unit>
        <trans-unit id="16ee9dfc7e4827b505dbe5c638ac253b0f4c2c2f" translate="yes" xml:space="preserve">
          <source>invocation</source>
          <target state="translated">invocation</target>
        </trans-unit>
        <trans-unit id="4d2aa1cd14486c3a4a5f5b5f91ebfce00891a815" translate="yes" xml:space="preserve">
          <source>invoke the method call like this:</source>
          <target state="translated">のようにメソッドコールを呼び出します。</target>
        </trans-unit>
        <trans-unit id="9d2e89cb161a40179909f64d20244135bf4c608d" translate="yes" xml:space="preserve">
          <source>invoke the overload method with &lt;code&gt;&lt;i&gt;X&lt;/i&gt;&lt;/code&gt; as an argument. Instead the above table is consulted as normal, and based on the type of &lt;code&gt;&lt;i&gt;X&lt;/i&gt;&lt;/code&gt;, overloading may or may not be invoked. For simple strings or numbers, &quot;in&quot; becomes equivalent to this:</source>
          <target state="translated">引数として &lt;code&gt;&lt;i&gt;X&lt;/i&gt;&lt;/code&gt; を指定してオーバーロードメソッドを呼び出します。代わりに、上記の表が通常どおり参照され、 &lt;code&gt;&lt;i&gt;X&lt;/i&gt;&lt;/code&gt; のタイプに基づいて、オーバーロードが呼び出される場合と呼び出されない場合があります。単純な文字列または数値の場合、「in」はこれと同等になります。</target>
        </trans-unit>
        <trans-unit id="a5f53a1db4bd0284aa3660bede417a2b6d5db51f" translate="yes" xml:space="preserve">
          <source>invokes the &lt;b&gt;parse_from_filehandle()&lt;/b&gt; method passing it the corresponding input and output filehandles.</source>
          <target state="translated">&lt;b&gt;parse_from_filehandle（）&lt;/b&gt;メソッドを呼び出して、対応する入力および出力ファイルハンドルを渡します。</target>
        </trans-unit>
        <trans-unit id="271383556324a922b015d9d5abb777b3b680293a" translate="yes" xml:space="preserve">
          <source>invoking it for the directory's contents. It does a postorder traversal instead of a preorder traversal, working from the bottom of the directory tree up where &lt;code&gt;find()&lt;/code&gt; works from the top of the tree down.</source>
          <target state="translated">ディレクトリのコンテンツのためにそれを呼び出します。これは、preorderトラバーサルの代わりにpostorderトラバーサルを実行し、 &lt;code&gt;find()&lt;/code&gt; がディレクトリのツリーの下から上に向かって機能するディレクトリツリーの下から上に向かって動作します。</target>
        </trans-unit>
        <trans-unit id="b8dd489a672c67071ed900746c3af6669142691d" translate="yes" xml:space="preserve">
          <source>involve more overhead than is justifiable for all but the largest lexicons.</source>
          <target state="translated">は、最大の辞書を除くすべての辞書に対して正当化される以上のオーバーヘッドを伴います。</target>
        </trans-unit>
        <trans-unit id="5a258230180d9c643f761089d7e33b8b52288ed3" translate="yes" xml:space="preserve">
          <source>io</source>
          <target state="translated">io</target>
        </trans-unit>
        <trans-unit id="1eb7e48254406f0ad58f032dc48fe49432e4957e" translate="yes" xml:space="preserve">
          <source>io/pipe.t</source>
          <target state="translated">io/pipe.t</target>
        </trans-unit>
        <trans-unit id="fd279f47641a01b11eb13ced0473d39d010b32f1" translate="yes" xml:space="preserve">
          <source>io_close</source>
          <target state="translated">io_close</target>
        </trans-unit>
        <trans-unit id="1ad14cf4402c59fea497f745d3df4a52f09e403b" translate="yes" xml:space="preserve">
          <source>ioctl</source>
          <target state="translated">ioctl</target>
        </trans-unit>
        <trans-unit id="ac706755d569c148cde69cf903fa0e404d5fb464" translate="yes" xml:space="preserve">
          <source>ioctl FILEHANDLE,FUNCTION,SCALAR</source>
          <target state="translated">ioctl FILEHANDLE,FUNCTION,SCALARAR</target>
        </trans-unit>
        <trans-unit id="deb943a9c35e5ba7c1b95844d2ef7a05f5dec77c" translate="yes" xml:space="preserve">
          <source>ioctl is not implemented</source>
          <target state="translated">ioctl が実装されていない</target>
        </trans-unit>
        <trans-unit id="bc1cd21ec1db5af0e9da88a83a9e32247096211b" translate="yes" xml:space="preserve">
          <source>ioctl() on unopened %s</source>
          <target state="translated">未開封の %s での ioctl()</target>
        </trans-unit>
        <trans-unit id="81c3f83f167f0c364e4d909401dd2fbced2eb5c4" translate="yes" xml:space="preserve">
          <source>ioctl.h</source>
          <target state="translated">ioctl.h</target>
        </trans-unit>
        <trans-unit id="b47f363e2b430c0647f14deea3eced9b0ef300ce" translate="yes" xml:space="preserve">
          <source>is</source>
          <target state="translated">is</target>
        </trans-unit>
        <trans-unit id="463b46fb59560ec9a4f45c2879fbeca62bdbadb9" translate="yes" xml:space="preserve">
          <source>is #included, it redefines the aTHX and aTHX_ macros to call a function that will return the context. Thus, something like:</source>
          <target state="translated">が#includeされている場合、コンテキストを返す関数を呼び出すように aTHX と aTHX_マクロを再定義します。したがって、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="869c55ae7392038ca2ada25a5b705659a6fc2134" translate="yes" xml:space="preserve">
          <source>is - and it has the same effect.)</source>
          <target state="translated">があり、同じ効果があります)。</target>
        </trans-unit>
        <trans-unit id="83b4bd82f5c3073fcab6cd52e2b883488c825747" translate="yes" xml:space="preserve">
          <source>is 0, encoding and decoding replace any malformed character with a</source>
          <target state="translated">が 0 の場合、エンコーディングとデコーディングは、不正な文字をすべて</target>
        </trans-unit>
        <trans-unit id="0bda6c393b81ec62986133bc68d16a600e5376b4" translate="yes" xml:space="preserve">
          <source>is 0, or the routine croaks if</source>
          <target state="translated">が 0 の場合、または</target>
        </trans-unit>
        <trans-unit id="9433dff76d69aeb49c9f1b1e6a810eef80d46303" translate="yes" xml:space="preserve">
          <source>is 1, methods immediately die with an error message. Therefore, when</source>
          <target state="translated">が 1 の場合、メソッドはエラーメッセージで直ちに終了します。したがって</target>
        </trans-unit>
        <trans-unit id="a4d2c83b695d00259b2771edae5aa2d42137fabb" translate="yes" xml:space="preserve">
          <source>is 1, you should trap exceptions with &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval{}&lt;/a&gt;&lt;/code&gt;, unless you really want to let it &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">が1の場合、本当に &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; たくない限り、 &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval{}&lt;/a&gt;&lt;/code&gt; で例外をトラップする必要があります。</target>
        </trans-unit>
        <trans-unit id="7a26b3bc94221395b2786afb993cdb5de7ab69f7" translate="yes" xml:space="preserve">
          <source>is 1, you should trap exceptions with &lt;code&gt;eval{}&lt;/code&gt;, unless you really want to let it &lt;code&gt;die&lt;/code&gt;.</source>
          <target state="translated">あなたはとトラップ例外なければならない、1である &lt;code&gt;eval{}&lt;/code&gt; あなたが本当にできるようにしたい場合を除き、それは &lt;code&gt;die&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="08b01d36edc2dd6fddbc0756fbe9c5513a659ab8" translate="yes" xml:space="preserve">
          <source>is 1.</source>
          <target state="translated">は1です。</target>
        </trans-unit>
        <trans-unit id="8c0ff8e969bcd171ef8d6c4cddc51856c058ecf8" translate="yes" xml:space="preserve">
          <source>is 1. When a character whose ord value is larger than 0xFFFF is encountered, its place is filled with \x{FFFD} if</source>
          <target state="translated">ord 値が 0xFFFF よりも大きい文字が出現した場合、その場所には</target>
        </trans-unit>
        <trans-unit id="79d529e67b476b62851937c5b23067cd4ce1b5bd" translate="yes" xml:space="preserve">
          <source>is 3 and</source>
          <target state="translated">は3であり</target>
        </trans-unit>
        <trans-unit id="9522c6460c5f6f20c4307e7bed6822d3f2d77897" translate="yes" xml:space="preserve">
          <source>is 3. A single &lt;code&gt;ITEM&lt;/code&gt; is always inlined.</source>
          <target state="translated">は3です。単一の &lt;code&gt;ITEM&lt;/code&gt; は常にインライン化されます。</target>
        </trans-unit>
        <trans-unit id="b5c84ec496d8b224c85fc14573a3862152ff5122" translate="yes" xml:space="preserve">
          <source>is &lt;code&gt;C&lt;/code&gt; (for &lt;code&gt;common&lt;/code&gt; ) if the best possible fold is a single code point (</source>
          <target state="translated">ある &lt;code&gt;C&lt;/code&gt; （のための &lt;code&gt;common&lt;/code&gt; 、可能な限り最高の倍は、単一のコードポイントである場合）（</target>
        </trans-unit>
        <trans-unit id="9048adafeea91d85a3bb74cbdb81acf53f747dad" translate="yes" xml:space="preserve">
          <source>is &lt;code&gt;C&lt;/code&gt; (for &lt;code&gt;common&lt;/code&gt;) if the best possible fold is a single code point (</source>
          <target state="translated">可能な限り最良のフォールドが単一のコードポイントである場合、は &lt;code&gt;C&lt;/code&gt; （ &lt;code&gt;common&lt;/code&gt; 場合）です（</target>
        </trans-unit>
        <trans-unit id="939984a83e875f30897be52391d8f5b35e2e83eb" translate="yes" xml:space="preserve">
          <source>is &lt;code&gt;FooPtr&lt;/code&gt;</source>
          <target state="translated">ある &lt;code&gt;FooPtr&lt;/code&gt; は、</target>
        </trans-unit>
        <trans-unit id="65816c93586e4c56d14bdf38227bc0d35e22af9d" translate="yes" xml:space="preserve">
          <source>is &lt;code&gt;Foo__Bar&lt;/code&gt;</source>
          <target state="translated">ある &lt;code&gt;Foo__Bar&lt;/code&gt; は、</target>
        </trans-unit>
        <trans-unit id="9e4470db40e21830b033effb525cbd3a1872e1d1" translate="yes" xml:space="preserve">
          <source>is &lt;code&gt;I&lt;/code&gt; , and</source>
          <target state="translated">は &lt;code&gt;I&lt;/code&gt; であり、</target>
        </trans-unit>
        <trans-unit id="669e7fcef0003bced2b91808628da72a61c71a0f" translate="yes" xml:space="preserve">
          <source>is &lt;code&gt;I&lt;/code&gt;, and</source>
          <target state="translated">である &lt;code&gt;I&lt;/code&gt; 、と</target>
        </trans-unit>
        <trans-unit id="c6bcb94dd29106e50e5e67679cd655c28bdf7f7a" translate="yes" xml:space="preserve">
          <source>is &lt;code&gt;OP_ANDASSIGN&lt;/code&gt; , &lt;code&gt;OP_ORASSIGN&lt;/code&gt; , or &lt;code&gt;OP_DORASSIGN&lt;/code&gt; , then a suitable conditional optree is constructed. If</source>
          <target state="translated">ある &lt;code&gt;OP_ANDASSIGN&lt;/code&gt; 、 &lt;code&gt;OP_ORASSIGN&lt;/code&gt; 、または &lt;code&gt;OP_DORASSIGN&lt;/code&gt; は次いで、適切な条件付き構文木が構築されます。もし</target>
        </trans-unit>
        <trans-unit id="ce21611a14027ecfce0b71f876f7d06f5a1d8b5b" translate="yes" xml:space="preserve">
          <source>is NULL).</source>
          <target state="translated">が NULL)。</target>
        </trans-unit>
        <trans-unit id="b53e086ef2afc2e7ee365a3c7802977ceebd8190" translate="yes" xml:space="preserve">
          <source>is TRUE if and only if &lt;code&gt;$foo&lt;/code&gt; contains any of those 4 sequences from the children's story &quot;Jack and the Beanstalk&quot;.</source>
          <target state="translated">&lt;code&gt;$foo&lt;/code&gt; に子供の話「ジャックと豆の木」の4つのシーケンスのいずれかが含まれている場合にのみTRUEになります。</target>
        </trans-unit>
        <trans-unit id="e8bc2c2b7decb0bb38e1ecc01095a37fcd7e1a77" translate="yes" xml:space="preserve">
          <source>is TRUE if and only if &lt;code&gt;$foo&lt;/code&gt; contains either the sequence &lt;code&gt;&quot;this thing&quot;&lt;/code&gt; or the sequence &lt;code&gt;&quot;that thing&quot;&lt;/code&gt;. The portions of the string that match the portions of the pattern enclosed in parentheses are normally made available separately for use later in the pattern, substitution, or program. This is called &quot;capturing&quot;, and it can get complicated. See &lt;a href=&quot;#Capture-groups&quot;&gt;&quot;Capture groups&quot;&lt;/a&gt;.</source>
          <target state="translated">TRUEの場合にだけ、 &lt;code&gt;$foo&lt;/code&gt; いずれかの配列が含まれ &lt;code&gt;&quot;this thing&quot;&lt;/code&gt; またはシーケンス &lt;code&gt;&quot;that thing&quot;&lt;/code&gt; 。括弧で囲まれたパターンの部分に一致する文字列の部分は、通常、後でパターン、置換、またはプログラムで使用するために個別に使用可能になります。これは「キャプチャ」と呼ばれ、複雑になる可能性があります。&lt;a href=&quot;#Capture-groups&quot;&gt;「キャプチャグループ」を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="789a208058c7f70e653e4e06040f218a3573168a" translate="yes" xml:space="preserve">
          <source>is TRUE if and only if &lt;code&gt;$foo&lt;/code&gt; contains either the sequence &lt;code&gt;&quot;this&quot;&lt;/code&gt; or the sequence &lt;code&gt;&quot;that&quot;&lt;/code&gt;. Like all metacharacters, prefixing the &lt;code&gt;&quot;|&quot;&lt;/code&gt; with a backslash makes it match the plain punctuation character; in its case, the VERTICAL LINE.</source>
          <target state="translated">&lt;code&gt;$foo&lt;/code&gt; にシーケンス &lt;code&gt;&quot;this&quot;&lt;/code&gt; またはシーケンス &lt;code&gt;&quot;that&quot;&lt;/code&gt; いずれかが含まれている場合にのみTRUEになります。すべてのメタ文字と同様に、 &lt;code&gt;&quot;|&quot;&lt;/code&gt; 前に付けます バックスラッシュを使用すると、プレーンな句読文字と一致します。その場合、VERTICALLINEです。</target>
        </trans-unit>
        <trans-unit id="18aef45af55cfc0458a465c74717dbe4259aec00" translate="yes" xml:space="preserve">
          <source>is TRUE if and only if &lt;code&gt;$foo&lt;/code&gt; contains the sequence &lt;code&gt;&quot;this|that&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$foo&lt;/code&gt; にシーケンス &lt;code&gt;&quot;this|that&quot;&lt;/code&gt; が含まれている場合にのみ、TRUEになります。</target>
        </trans-unit>
        <trans-unit id="e883ffa64181c3219fd9a7b42dae0ae653e7eaba" translate="yes" xml:space="preserve">
          <source>is UTF-8 encoded and vice-versa.</source>
          <target state="translated">がUTF-8にエンコードされている場合と、その逆の場合があります。</target>
        </trans-unit>
        <trans-unit id="4ad590898ac06ec587af8f66311fb1bbc1535303" translate="yes" xml:space="preserve">
          <source>is a GV supplying the name that should be used by the check function to refer to the callee of the &lt;code&gt;entersub&lt;/code&gt; op if it needs to emit any diagnostics. It is permitted to apply the check function in non-standard situations, such as to a call to a different subroutine or to a method call.</source>
          <target state="translated">診断を出力する必要がある場合に、 &lt;code&gt;entersub&lt;/code&gt; opの呼び出し先を参照するためにチェック関数が使用する名前を提供するGV です。別のサブルーチンの呼び出しやメソッドの呼び出しなど、非標準の状況でチェック関数を適用することは許可されています。</target>
        </trans-unit>
        <trans-unit id="08d3d68a728efcdd2ab6530d7d5ecfbfb371a2be" translate="yes" xml:space="preserve">
          <source>is a Perl</source>
          <target state="translated">はPerlの</target>
        </trans-unit>
        <trans-unit id="2b9f379549b00f2117b76ea8e1b4e7f02ef83c49" translate="yes" xml:space="preserve">
          <source>is a Perl double-quoted string that replaces in the string whatever is matched with the &lt;code&gt;regexp&lt;/code&gt;. The operator &lt;code&gt;=~&lt;/code&gt; is also used here to associate a string with &lt;code&gt;s///&lt;/code&gt;. If matching against &lt;code&gt;$_&lt;/code&gt;, the &lt;code&gt;$_ =~&lt;/code&gt; can be dropped. If there is a match, &lt;code&gt;s///&lt;/code&gt; returns the number of substitutions made; otherwise it returns false. Here are a few examples:</source>
          <target state="translated">&lt;code&gt;regexp&lt;/code&gt; と一致するものを文字列内で置き換えるPerlの二重引用符で囲まれた文字列です。演算子 &lt;code&gt;=~&lt;/code&gt; は、文字列を &lt;code&gt;s///&lt;/code&gt; に関連付けるためにもここで使用されます。 &lt;code&gt;$_&lt;/code&gt; と一致する場合、 &lt;code&gt;$_ =~&lt;/code&gt; を削除できます。一致する場合、 &lt;code&gt;s///&lt;/code&gt; は行われた置換の数を返します。それ以外の場合はfalseを返します。次にいくつかの例を示します。</target>
        </trans-unit>
        <trans-unit id="130739bc618160f7f1fc5c5a9ff8b4322613f98e" translate="yes" xml:space="preserve">
          <source>is a Perl subroutine that takes no arguments (that's the</source>
          <target state="translated">は引数を取らないPerlのサブルーチンです(これが</target>
        </trans-unit>
        <trans-unit id="b8059014bc71acfd20332d69515ec64768947e28" translate="yes" xml:space="preserve">
          <source>is a blessed reference or a package name</source>
          <target state="translated">は祝福された参照またはパッケージ名です。</target>
        </trans-unit>
        <trans-unit id="37b225c02472425d591d858f478440711108fafc" translate="yes" xml:space="preserve">
          <source>is a combination of the &lt;code&gt;&quot;al&quot;&lt;/code&gt; type and the &lt;code&gt;&quot;ae&quot;&lt;/code&gt; type. Some of the map array elements have the forms given by &lt;code&gt;&quot;al&quot;&lt;/code&gt; , and the rest are the empty string. The property &lt;code&gt;NFKC_Casefold&lt;/code&gt; has this form. An example slice is:</source>
          <target state="translated">&lt;code&gt;&quot;al&quot;&lt;/code&gt; タイプと &lt;code&gt;&quot;ae&quot;&lt;/code&gt; タイプの組み合わせです。マップ配列要素のいくつかは &lt;code&gt;&quot;al&quot;&lt;/code&gt; によって与えられる形式を持ち、残りは空の文字列です。プロパティ &lt;code&gt;NFKC_Casefold&lt;/code&gt; はこの形式です。スライスの例は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="756e5fe11c9778584143d513e2d830f3f2516c69" translate="yes" xml:space="preserve">
          <source>is a combination of the &lt;code&gt;&quot;al&quot;&lt;/code&gt; type and the &lt;code&gt;&quot;ae&quot;&lt;/code&gt; type. Some of the map array elements have the forms given by &lt;code&gt;&quot;al&quot;&lt;/code&gt;, and the rest are the empty string. The property &lt;code&gt;NFKC_Casefold&lt;/code&gt; has this form. An example slice is:</source>
          <target state="translated">&lt;code&gt;&quot;al&quot;&lt;/code&gt; タイプと &lt;code&gt;&quot;ae&quot;&lt;/code&gt; タイプの組み合わせです。一部のマップ配列要素は &lt;code&gt;&quot;al&quot;&lt;/code&gt; で指定された形式であり、残りは空の文字列です。プロパティ &lt;code&gt;NFKC_Casefold&lt;/code&gt; の形式は次のとおりです。スライスの例は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="61c94ee116f6a0b02686534706f14ab4ac28cf95" translate="yes" xml:space="preserve">
          <source>is a command-line interface to CPAN.pm. It allows you to install modules or distributions from CPAN, or just get information about them, and a lot more. It is similar to the command line mode of the &lt;a href=&quot;cpan&quot;&gt;CPAN&lt;/a&gt; module,</source>
          <target state="translated">CPAN.pmへのコマンドラインインターフェイスです。CPANからモジュールやディストリビューションをインストールしたり、それらに関する情報を取得したりすることができます。これは、&lt;a href=&quot;cpan&quot;&gt;CPAN&lt;/a&gt;モジュールのコマンドラインモードに似ています。</target>
        </trans-unit>
        <trans-unit id="8330f641c616959b5dc4d2a1018e6e7abd8aea60" translate="yes" xml:space="preserve">
          <source>is a command-line interface to the test-running functionality of</source>
          <target state="translated">のテスト実行機能へのコマンドラインインターフェイスです。</target>
        </trans-unit>
        <trans-unit id="a3f3d9feee7e7a4f2fbdd3512e2a38e4a55fb2b5" translate="yes" xml:space="preserve">
          <source>is a common abbreviation for a character</source>
          <target state="translated">が一般的な略字である</target>
        </trans-unit>
        <trans-unit id="e658f3dd186574d5485eeff6c799c7e447588ebe" translate="yes" xml:space="preserve">
          <source>is a compiler to convert Perl XS code into C code. It is typically run by the makefiles created by &lt;a href=&quot;ExtUtils::MakeMaker&quot;&gt;ExtUtils::MakeMaker&lt;/a&gt;.</source>
          <target state="translated">PerlXSコードをCコードに変換するコンパイラです。これは通常、&lt;a href=&quot;ExtUtils::MakeMaker&quot;&gt;ExtUtils :: MakeMaker&lt;/a&gt;によって作成されたmakefileによって実行されます。</target>
        </trans-unit>
        <trans-unit id="9febe7f9f7abef798cc6a59cd722795b25995da6" translate="yes" xml:space="preserve">
          <source>is a compiler to convert Perl XS code into C code. It is typically run by the makefiles created by &lt;a href=&quot;extutils/makemaker&quot;&gt;ExtUtils::MakeMaker&lt;/a&gt;.</source>
          <target state="translated">Perl XSコードをCコードに変換するコンパイラです。通常、これは&lt;a href=&quot;extutils/makemaker&quot;&gt;ExtUtils :: MakeMaker&lt;/a&gt;によって作成されたメイクファイルによって実行されます。</target>
        </trans-unit>
        <trans-unit id="90882a351b430362ddbaa59a277b7ed39fa5a7e3" translate="yes" xml:space="preserve">
          <source>is a computer science term with a precise but hard-to-explain meaning. Usually, closures are implemented in Perl as anonymous subroutines with lasting references to lexical variables outside their own scopes. These lexicals magically refer to the variables that were around when the subroutine was defined (deep binding).</source>
          <target state="translated">は、正確ではありますが説明が難しいコンピュータサイエンスの用語です。通常、Perlではクロージャは匿名のサブルーチンとして実装されており、スコープ外の語彙変数への永続的な参照を持っています。これらの辞書変数は、サブルーチンが定義された時に存在した変数を魔法のように参照します(ディープバインディング)。</target>
        </trans-unit>
        <trans-unit id="bff47d2ce40b707b0845e92b4a96b5d4dc076d28" translate="yes" xml:space="preserve">
          <source>is a cpp token indicating which entry to return. If the member is not set this will return a default value. The return type depends on</source>
          <target state="translated">は、どのエントリを返すかを示す cpp トークンです。メンバが設定されていない場合、これはデフォルト値を返します。戻り値の型は</target>
        </trans-unit>
        <trans-unit id="e5f9de05e11db96a337f0d1eb38539a88b5409b2" translate="yes" xml:space="preserve">
          <source>is a cpp token indicating which entry to set. See &lt;a href=&quot;perlguts#Custom-Operators&quot;&gt;Custom Operators in perlguts&lt;/a&gt; for details about the available members and how they are used. This macro evaluates its argument more than once.</source>
          <target state="translated">設定するエントリを示すcppトークンです。使用可能なメンバーとその使用方法の詳細については&lt;a href=&quot;perlguts#Custom-Operators&quot;&gt;、perlgutsのカスタムオペレーターを&lt;/a&gt;参照してください。このマクロは、その引数を複数回評価します。</target>
        </trans-unit>
        <trans-unit id="8b175b89be18442a11782bc701cae16d7d0a17b0" translate="yes" xml:space="preserve">
          <source>is a decimal number, and XML uses &lt;code&gt;&amp;amp;#x&lt;i&gt;HHHH&lt;/i&gt;;&lt;/code&gt; where</source>
          <target state="translated">10進数で、XMLは &lt;code&gt;&amp;amp;#x&lt;i&gt;HHHH&lt;/i&gt;;&lt;/code&gt; 使用します。どこ</target>
        </trans-unit>
        <trans-unit id="867e37e0ad95e37a79d195114de1a83f0d632684" translate="yes" xml:space="preserve">
          <source>is a fixed string that must appear at a particular offset from the beginning of the match. A</source>
          <target state="translated">は、マッチの先頭から特定のオフセットに出現しなければならない固定文字列です。A</target>
        </trans-unit>
        <trans-unit id="61f3bde037bf2172e594d6db29ca0978f1c08a37" translate="yes" xml:space="preserve">
          <source>is a flag indicating whether we're in a dclone() or a regular de-serialization via thaw(), and</source>
          <target state="translated">は dclone()か thaw()による通常のデシリアライズかを示すフラグであり</target>
        </trans-unit>
        <trans-unit id="177a8f74fbd5fb5c45bffdbce71939307bad58c8" translate="yes" xml:space="preserve">
          <source>is a flag indicating whether we're in a dclone() or a regular serialization via store() or freeze().</source>
          <target state="translated">は、dclone()かstore()やfreeze()を経由した通常のシリアライズかを示すフラグです。</target>
        </trans-unit>
        <trans-unit id="09e909c7ace28e45d047ca69ce8d514016e3f383" translate="yes" xml:space="preserve">
          <source>is a form of if-then-else statement that allows one to choose which patterns are to be matched, based on some condition. There are two types of conditional expression: &lt;code&gt;(?(&lt;i&gt;condition&lt;/i&gt;)&lt;i&gt;yes-regexp&lt;/i&gt;)&lt;/code&gt; and &lt;code&gt;(?(condition)&lt;i&gt;yes-regexp&lt;/i&gt;|&lt;i&gt;no-regexp&lt;/i&gt;)&lt;/code&gt;. &lt;code&gt;(?(&lt;i&gt;condition&lt;/i&gt;)&lt;i&gt;yes-regexp&lt;/i&gt;)&lt;/code&gt; is like an &lt;code&gt;'if () {}'&lt;/code&gt; statement in Perl. If the</source>
          <target state="translated">は、if-then-elseステートメントの形式であり、条件に基づいて、一致させるパターンを選択できます。条件式には、 &lt;code&gt;(?(&lt;i&gt;condition&lt;/i&gt;)&lt;i&gt;yes-regexp&lt;/i&gt;)&lt;/code&gt; と &lt;code&gt;(?(condition)&lt;i&gt;yes-regexp&lt;/i&gt;|&lt;i&gt;no-regexp&lt;/i&gt;)&lt;/code&gt; 2種類があります。 &lt;code&gt;(?(&lt;i&gt;condition&lt;/i&gt;)&lt;i&gt;yes-regexp&lt;/i&gt;)&lt;/code&gt; は、Perlの &lt;code&gt;'if () {}'&lt;/code&gt; ステートメントのようなものです。の場合</target>
        </trans-unit>
        <trans-unit id="6e2e892937bca1eea5ee9c95d0d5e5e5f11395dd" translate="yes" xml:space="preserve">
          <source>is a form of if-then-else statement that allows one to choose which patterns are to be matched, based on some condition. There are two types of conditional expression: &lt;code&gt;(?(condition)yes-regexp)&lt;/code&gt; and &lt;code&gt;(?(condition)yes-regexp|no-regexp)&lt;/code&gt;. &lt;code&gt;(?(condition)yes-regexp)&lt;/code&gt; is like an &lt;code&gt;'if () {}'&lt;/code&gt; statement in Perl. If the &lt;code&gt;condition&lt;/code&gt; is true, the &lt;code&gt;yes-regexp&lt;/code&gt; will be matched. If the &lt;code&gt;condition&lt;/code&gt; is false, the &lt;code&gt;yes-regexp&lt;/code&gt; will be skipped and Perl will move onto the next regexp element. The second form is like an &lt;code&gt;'if () {} else {}'&lt;/code&gt; statement in Perl. If the &lt;code&gt;condition&lt;/code&gt; is true, the &lt;code&gt;yes-regexp&lt;/code&gt; will be matched, otherwise the &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no-regexp&lt;/a&gt;&lt;/code&gt; will be matched.</source>
          <target state="translated">ある条件に基づいて、照合するパターンを選択できるif-then-elseステートメントの形式です。条件式には、 &lt;code&gt;(?(condition)yes-regexp)&lt;/code&gt; と &lt;code&gt;(?(condition)yes-regexp|no-regexp)&lt;/code&gt; 2つのタイプがあります。 &lt;code&gt;(?(condition)yes-regexp)&lt;/code&gt; は、Perlの &lt;code&gt;'if () {}'&lt;/code&gt; ステートメントに似ています。場合は &lt;code&gt;condition&lt;/code&gt; 真である、 &lt;code&gt;yes-regexp&lt;/code&gt; マッチします。場合は &lt;code&gt;condition&lt;/code&gt; 偽で、 &lt;code&gt;yes-regexp&lt;/code&gt; スキップされ、Perlは次の正規表現要素の上に移動します。 2番目の形式は、Perlの &lt;code&gt;'if () {} else {}'&lt;/code&gt; ステートメントに似ています。場合は &lt;code&gt;condition&lt;/code&gt; 真である、 &lt;code&gt;yes-regexp&lt;/code&gt; 一致する場合、それ以外の場合は &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no-regexp&lt;/a&gt;&lt;/code&gt; で一致します。</target>
        </trans-unit>
        <trans-unit id="f9a2da8cb2cec1f20323fe27b5dacfdea89a7e07" translate="yes" xml:space="preserve">
          <source>is a hashref (as passed to &lt;code&gt;C_constant&lt;/code&gt; and &lt;code&gt;match_clause&lt;/code&gt; .</source>
          <target state="translated">ハッシュ参照です（ &lt;code&gt;C_constant&lt;/code&gt; および &lt;code&gt;match_clause&lt;/code&gt; に渡されます）。</target>
        </trans-unit>
        <trans-unit id="131d04c3792cc09f6f3a833c83bc112dd57bb5e5" translate="yes" xml:space="preserve">
          <source>is a hashref (as passed to &lt;code&gt;C_constant&lt;/code&gt; and &lt;code&gt;match_clause&lt;/code&gt;.</source>
          <target state="translated">はhashrefです（ &lt;code&gt;C_constant&lt;/code&gt; および &lt;code&gt;match_clause&lt;/code&gt; に渡されます）。</target>
        </trans-unit>
        <trans-unit id="792c669ddbc9146f9c82edec4f8d983c193844e7" translate="yes" xml:space="preserve">
          <source>is a hexadecimal number, also inserts a character into a string. The character it inserts is the one whose Unicode code point (ordinal value) is equal to the number. For example, &lt;code&gt;&quot;\N{U+263a}&quot;&lt;/code&gt; is the Unicode (white background, black foreground) smiley face equivalent to &lt;code&gt;&quot;\N{WHITE SMILING FACE}&quot;&lt;/code&gt; . Also note, &lt;code&gt;\N{&lt;i&gt;...&lt;/i&gt;}&lt;/code&gt; can mean a regex quantifier instead of a character name, when the</source>
          <target state="translated">16進数で、文字列に文字を挿入します。挿入される文字は、Unicodeコードポイント（序数値）が数値と等しい文字です。たとえば、 &lt;code&gt;&quot;\N{U+263a}&quot;&lt;/code&gt; は、 &lt;code&gt;&quot;\N{WHITE SMILING FACE}&quot;&lt;/code&gt; と同等のUnicode（白の背景、黒の前景）スマイリーフェイスです。また、 &lt;code&gt;\N{&lt;i&gt;...&lt;/i&gt;}&lt;/code&gt; は、文字名ではなく正規表現の数量詞を意味する場合があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="93d4f1082cb9cc319586cdc6e38410e852ffeafb" translate="yes" xml:space="preserve">
          <source>is a hexadecimal number, also inserts a character into a string. The character it inserts is the one whose Unicode code point (ordinal value) is equal to the number. For example, &lt;code&gt;&quot;\N{U+263a}&quot;&lt;/code&gt; is the Unicode (white background, black foreground) smiley face equivalent to &lt;code&gt;&quot;\N{WHITE SMILING FACE}&quot;&lt;/code&gt;. Also note, &lt;code&gt;\N{&lt;i&gt;...&lt;/i&gt;}&lt;/code&gt; can mean a regex quantifier instead of a character name, when the</source>
          <target state="translated">は16進数であり、文字列にも文字を挿入します。挿入する文字は、Unicodeコードポイント（序数）が数値と等しい文字です。たとえば、 &lt;code&gt;&quot;\N{U+263a}&quot;&lt;/code&gt; は、 &lt;code&gt;&quot;\N{WHITE SMILING FACE}&quot;&lt;/code&gt; 相当するUnicode（白い背景、黒い前景）のスマイリーフェイスです。また、 &lt;code&gt;\N{&lt;i&gt;...&lt;/i&gt;}&lt;/code&gt; は、文字名の代わりに正規表現の数量詞を意味する場合があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="a3098eb8ef55457b8406a9a4b75ba0655ed07307" translate="yes" xml:space="preserve">
          <source>is a minimalistic perl built to bootstrap building extensions, utilties, documentation etc. It doesn't support dynamic loading and depending on the point in the build process will only have access to a limited set of core modules.</source>
          <target state="translated">は、拡張機能、ユーティリティ、ドキュメントなどをブートストラップで構築するために構築された最小限のperlです。動的なロードをサポートしておらず、ビルドプロセスのポイントによっては、コアモジュールの限られたセットにしかアクセスできません。</target>
        </trans-unit>
        <trans-unit id="0370087df9b1f80bb3aab519d6395ef994f93a7f" translate="yes" xml:space="preserve">
          <source>is a module meta-data file pioneered by Module::Build and automatically generated as part of the 'distdir' target (and thus 'dist'). See &lt;a href=&quot;../makemaker#Module-Meta-Data&quot;&gt;Module Meta-Data in ExtUtils::MakeMaker&lt;/a&gt;.</source>
          <target state="translated">Module :: Buildによって開拓されたモジュールメタデータファイルであり、「distdir」ターゲット（したがって「dist」）の一部として自動的に生成されます。&lt;a href=&quot;../makemaker#Module-Meta-Data&quot;&gt;ExtUtils :: MakeMakerのモジュールメタデータを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="db70b851cbc525bf8a455c66127e31660d8b2b7e" translate="yes" xml:space="preserve">
          <source>is a module meta-data file pioneered by Module::Build and automatically generated as part of the 'distdir' target (and thus 'dist'). See &lt;a href=&quot;ExtUtils::MakeMaker#Module-Meta-Data&quot;&gt;&quot;Module Meta-Data&quot; in ExtUtils::MakeMaker&lt;/a&gt;.</source>
          <target state="translated">Module :: Buildによって開発され、「distdir」ターゲット（したがって「dist」）の一部として自動的に生成されるモジュールメタデータファイルです。&lt;a href=&quot;ExtUtils::MakeMaker#Module-Meta-Data&quot;&gt;ExtUtils :: MakeMakerの「モジュールメタデータ」を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="bb5615f55577e2ec9ec2ce738441f4f048adaa11" translate="yes" xml:space="preserve">
          <source>is a name for a character that has been documented but was never in any actual standard.</source>
          <target state="translated">は、文書化されているが、実際の規格にはなかったキャラクターの名前です。</target>
        </trans-unit>
        <trans-unit id="a64ade54cc01a4b8ab579c03320b508d3b51d58b" translate="yes" xml:space="preserve">
          <source>is a name for the Unicode character, as specified in the Unicode standard. For instance, if we wanted to represent or match the astrological sign for the planet Mercury, we could use</source>
          <target state="translated">は、Unicode 標準で指定されている Unicode 文字の名前です。例えば、惑星水星の占星術記号を表したり一致させたりしたい場合は</target>
        </trans-unit>
        <trans-unit id="2afe30cfa025d1ad86d16c1371192737e35d27e5" translate="yes" xml:space="preserve">
          <source>is a not-very-meaningful hex checksum), and run</source>
          <target state="translated">が意味のない16進数チェックサムであることを確認してから</target>
        </trans-unit>
        <trans-unit id="7ecee365b5fa1c34d9a334997959668656ead3bc" translate="yes" xml:space="preserve">
          <source>is a number (or comma separated pair of numbers (see &lt;a href=&quot;perlreref#QUANTIFIERS&quot;&gt;&quot;QUANTIFIERS&quot; in perlreref&lt;/a&gt;), and is not related to this pragma.</source>
          <target state="translated">は数値（またはコンマで区切られた数値のペア（&lt;a href=&quot;perlreref#QUANTIFIERS&quot;&gt;perlrerefの「QUANTIFIERS」を参照&lt;/a&gt;））であり、このプラグマとは関係ありません。</target>
        </trans-unit>
        <trans-unit id="fc99a02b05cb226b1a73a69a63bbd1617e2aa050" translate="yes" xml:space="preserve">
          <source>is a number (or comma separated pair of numbers (see &lt;a href=&quot;perlreref#QUANTIFIERS&quot;&gt;QUANTIFIERS in perlreref&lt;/a&gt;), and is not related to this pragma.</source>
          <target state="translated">数値（またはコンマで区切られた数値のペア（&lt;a href=&quot;perlreref#QUANTIFIERS&quot;&gt;perlrerefのQUANTIFIERSを参照&lt;/a&gt;））であり、このプラグマとは関係ありません。</target>
        </trans-unit>
        <trans-unit id="4a38b8230fcc77e55d3807d6b5a4aaef15592a7b" translate="yes" xml:space="preserve">
          <source>is a number in hexadecimal that gives the code point that Unicode has assigned to the desired character. It is customary but not required to use leading zeros to pad the number to 4 digits. Thus &lt;code&gt;\N{U+0041}&lt;/code&gt; means &lt;code&gt;LATIN CAPITAL LETTER A&lt;/code&gt; , and you will rarely see it written without the two leading zeros. &lt;code&gt;\N{U+0041}&lt;/code&gt; means &quot;A&quot; even on EBCDIC machines (where the ordinal value of &quot;A&quot; is not 0x41).</source>
          <target state="translated">Unicodeが目的の文字に割り当てたコードポイントを示す16進数の数値です。慣例ですが、数値を4桁にするために先行ゼロを使用する必要はありません。したがって、 &lt;code&gt;\N{U+0041}&lt;/code&gt; は &lt;code&gt;LATIN CAPITAL LETTER A&lt;/code&gt; 意味し、2つの先行ゼロなしで書き込まれることはほとんどありません。 &lt;code&gt;\N{U+0041}&lt;/code&gt; は、EBCDICマシンでも「A」を意味します（「A」の序数値は0x41ではありません）。</target>
        </trans-unit>
        <trans-unit id="b1b998d143c47f691f618008dbb37d7b65b50214" translate="yes" xml:space="preserve">
          <source>is a number in hexadecimal that gives the code point that Unicode has assigned to the desired character. It is customary but not required to use leading zeros to pad the number to 4 digits. Thus &lt;code&gt;\N{U+0041}&lt;/code&gt; means &lt;code&gt;LATIN CAPITAL LETTER A&lt;/code&gt;, and you will rarely see it written without the two leading zeros. &lt;code&gt;\N{U+0041}&lt;/code&gt; means &quot;A&quot; even on EBCDIC machines (where the ordinal value of &quot;A&quot; is not 0x41).</source>
          <target state="translated">Unicodeが目的の文字に割り当てたコードポイントを示す16進数の数値です。通例ですが、先行ゼロを使用して数値を4桁に埋める必要はありません。したがって、 &lt;code&gt;\N{U+0041}&lt;/code&gt; は &lt;code&gt;LATIN CAPITAL LETTER A&lt;/code&gt; 意味し、2つの先行ゼロなしで書かれていることはめったにありません。 &lt;code&gt;\N{U+0041}&lt;/code&gt; は、EBCDICマシンでも「A」を意味します（「A」の序数は0x41ではありません）。</target>
        </trans-unit>
        <trans-unit id="9f403a1abf70edece08e0c80d52724deac025b2c" translate="yes" xml:space="preserve">
          <source>is a number.</source>
          <target state="translated">は数です。</target>
        </trans-unit>
        <trans-unit id="6d72cdfe9071b403de5c891b1782a09bdb8b7a77" translate="yes" xml:space="preserve">
          <source>is a numeric suffix), and other duplicate references to substructures within &lt;code&gt;$VAR&lt;/code&gt;</source>
          <target state="translated">は数値のサフィックスです）、および &lt;code&gt;$VAR&lt;/code&gt; 内の部分構造への他の重複した参照</target>
        </trans-unit>
        <trans-unit id="1caf25c615a60e7db02057f097ce6ef82bd0a961" translate="yes" xml:space="preserve">
          <source>is a numeric suffix. Will return a list of strings in a list context.</source>
          <target state="translated">は数値のサフィックスです。リストコンテキストで文字列のリストを返します。</target>
        </trans-unit>
        <trans-unit id="5450267d9d9934e68cfc043e8aa906ed9b69bfee" translate="yes" xml:space="preserve">
          <source>is a package name</source>
          <target state="translated">はパッケージ名です。</target>
        </trans-unit>
        <trans-unit id="a6b5bcbb54d5f0f80b9f08f8fbaf2ea009b106b5" translate="yes" xml:space="preserve">
          <source>is a pointer to the &lt;code&gt;entersub&lt;/code&gt; op, which may be replaced by the check function, and</source>
          <target state="translated">&lt;code&gt;entersub&lt;/code&gt; op へのポインタであり、チェック関数で置き換えることができます。</target>
        </trans-unit>
        <trans-unit id="4e118cb5d55603d5852d3f949969f69eb230e7be" translate="yes" xml:space="preserve">
          <source>is a pointer to the C function that is to be added to that opcode's check chain, and</source>
          <target state="translated">はそのオペコードのチェックチェーンに追加されるC関数へのポインタであり</target>
        </trans-unit>
        <trans-unit id="8f2f096033e5e09b15119337208eeca0b44d4133" translate="yes" xml:space="preserve">
          <source>is a pointer.</source>
          <target state="translated">はポインタです。</target>
        </trans-unit>
        <trans-unit id="dece3ef8f9c2a4f9d52c4c4c5d98bb83ab5bfede" translate="yes" xml:space="preserve">
          <source>is a positive (unsigned) decimal number of any length is an absolute reference to a capturing group.</source>
          <target state="translated">は、任意の長さの正の(符号なし)10進数で、キャプチャグループへの絶対参照です。</target>
        </trans-unit>
        <trans-unit id="4edbb45f32f48cd1511fdfb6115d66414ec1fbfb" translate="yes" xml:space="preserve">
          <source>is a positive integer and</source>
          <target state="translated">は正の整数であり</target>
        </trans-unit>
        <trans-unit id="165f46eaddab8fb19180056f4de237d41d7417b2" translate="yes" xml:space="preserve">
          <source>is a precomputed hash of the key string, or zero if it has not been precomputed.</source>
          <target state="translated">は、事前に計算されたキー文字列のハッシュであり、事前に計算されていない場合は0です。</target>
        </trans-unit>
        <trans-unit id="7069eb9cb165fec523e6308bce4b06c05a39cb8c" translate="yes" xml:space="preserve">
          <source>is a precomputed hash of the key string, or zero if it has not been precomputed. Returns a mortal scalar copy of the value associated with the key, or &lt;code&gt;&amp;amp;PL_sv_placeholder&lt;/code&gt; if there is no value associated with the key.</source>
          <target state="translated">事前計算されたキー文字列のハッシュです。事前計算されていない場合はゼロです。キーに関連付けられた値の致命的なスカラーコピーを返します。キーに関連付けられた値がない場合は &lt;code&gt;&amp;amp;PL_sv_placeholder&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="5da7fecbae6781f458a7622c0a97efc463b638d6" translate="yes" xml:space="preserve">
          <source>is a precomputed hash of the key string, or zero if it has not been precomputed. Returns a mortal scalar representing the value associated with the key, or &lt;code&gt;&amp;amp;PL_sv_placeholder&lt;/code&gt; if there is no value associated with the key.</source>
          <target state="translated">事前計算されたキー文字列のハッシュです。事前計算されていない場合はゼロです。キーに関連付けられた値を表す致命的なスカラーを返します。キーに関連付けられた値がない場合は &lt;code&gt;&amp;amp;PL_sv_placeholder&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="1da3d543f80049c240b6604f0deb64866fbd0017" translate="yes" xml:space="preserve">
          <source>is a preprocessing token indicating which entry to set. The type of</source>
          <target state="translated">はどのエントリを設定するかを示す前処理トークンです。のタイプは</target>
        </trans-unit>
        <trans-unit id="d9012ca0d0ddb846debfb4395c94c7b45828744f" translate="yes" xml:space="preserve">
          <source>is a preprocessing token; the type of</source>
          <target state="translated">は前処理トークンです。</target>
        </trans-unit>
        <trans-unit id="a7b7145b8e2f4d29a4eac42b3b05b4ed146ab52f" translate="yes" xml:space="preserve">
          <source>is a preprocessor token indicating which entry to disable.</source>
          <target state="translated">はどのエントリを無効にするかを示すプリプロセッサトークンです。</target>
        </trans-unit>
        <trans-unit id="fbe9b4cd270e1fcc591a419f6eee763dc9c340d8" translate="yes" xml:space="preserve">
          <source>is a preprocessor token indicating which entry to enable. This will assert (under -DDEBUGGING) if the entry doesn't contain a valid pointer.</source>
          <target state="translated">は、どのエントリを有効にするかを示すプリプロセッサトークンです。これは、エントリに有効なポインタが含まれていない場合に (-DDEBUGGING の下で)アサートします。</target>
        </trans-unit>
        <trans-unit id="ea5ce0a59c714754786219bdd5275aeb9e974151" translate="yes" xml:space="preserve">
          <source>is a preprocessor token indicating which entry to return. If the appropriate flag is not set this will return NULL. The type of the return value depends on which entry you ask for.</source>
          <target state="translated">は、どのエントリを返すかを示すプリプロセッサトークンです。適切なフラグが設定されていない場合は NULL を返します。返される値の型は、どのエントリを返すかによって異なります。</target>
        </trans-unit>
        <trans-unit id="38ca9aff9fa5b538144546880af0d48a59e862b4" translate="yes" xml:space="preserve">
          <source>is a profiling tool available in many Unix platforms which uses</source>
          <target state="translated">は多くのUnixプラットフォームで利用可能なプロファイリングツールです。</target>
        </trans-unit>
        <trans-unit id="1bb170ad555937dc904a8fe5977af85e149cdc93" translate="yes" xml:space="preserve">
          <source>is a proprietary name.</source>
          <target state="translated">は独自の名称です。</target>
        </trans-unit>
        <trans-unit id="d57a2c635ead24e8cb41d2f62c0df6efe7ec2d7c" translate="yes" xml:space="preserve">
          <source>is a pure</source>
          <target state="translated">が純粋な</target>
        </trans-unit>
        <trans-unit id="c05fe253a73eaf5c843bec936db4e04771e23194" translate="yes" xml:space="preserve">
          <source>is a reference to a hash, keyed by name, values being the hashrefs in the</source>
          <target state="translated">はハッシュへの参照で、名前がキーとなり、値は</target>
        </trans-unit>
        <trans-unit id="9987d31f4281509d0e0c9da093d035205a293365" translate="yes" xml:space="preserve">
          <source>is a regex that matches</source>
          <target state="translated">にマッチする正規表現</target>
        </trans-unit>
        <trans-unit id="3dca816cf7d96a1f946c0cb0d43d7b15ae0dd1ff" translate="yes" xml:space="preserve">
          <source>is a sequence of digits (not starting with 0) whose value reflects the paren-number of the capture group to recurse to. &lt;code&gt;(?R)&lt;/code&gt; recurses to the beginning of the whole pattern. &lt;code&gt;(?0)&lt;/code&gt; is an alternate syntax for &lt;code&gt;(?R)&lt;/code&gt;. If</source>
          <target state="translated">数字のシーケンス（0で始まらない）で、その値は、再帰するキャプチャグループの括弧番号を反映します。 &lt;code&gt;(?R)&lt;/code&gt; はパターン全体の最初に再帰します。 &lt;code&gt;(?0)&lt;/code&gt; は &lt;code&gt;(?R)&lt;/code&gt; の代替構文です。もし</target>
        </trans-unit>
        <trans-unit id="bba78d1bb88089201797aae5c1cab963b9424243" translate="yes" xml:space="preserve">
          <source>is a set of flags indicating the kind of pad entry required, which will be set in the value SV for the allocated pad entry:</source>
          <target state="translated">は、必要とされるパッドエントリの種類を示すフラグのセットであり、割り当てられたパッドエントリの値SVに設定されます。</target>
        </trans-unit>
        <trans-unit id="91abdb027092f65d2c1008ca97d5e66bca8c6cd6" translate="yes" xml:space="preserve">
          <source>is a simple matter of writing:</source>
          <target state="translated">は簡単に書けばいいのです。</target>
        </trans-unit>
        <trans-unit id="60d1efccf0a496e682102a0ca23ae84351984489" translate="yes" xml:space="preserve">
          <source>is a single Han ideograph).</source>
          <target state="translated">は単漢表意文字)。)</target>
        </trans-unit>
        <trans-unit id="2427dd871eedddf0b76e01de0b85b25091706d2b" translate="yes" xml:space="preserve">
          <source>is a single character, it is used as both the left and right quote. Otherwise, it is split in half, and the first half of the string is used as the left quote and the second is used as the right quote.</source>
          <target state="translated">が1文字の場合は、左引用符と右引用符の両方として使用されます。それ以外の場合は半分に分割され、文字列の前半が左引用符、後半が右引用符として使用されます。</target>
        </trans-unit>
        <trans-unit id="7f0804766ef794c650875e5cd6577f8ca62d3808" translate="yes" xml:space="preserve">
          <source>is a single character, it is used as both the left and right quote; if</source>
          <target state="translated">が1文字の場合、左引用符と右引用符の両方として使用されます。</target>
        </trans-unit>
        <trans-unit id="40a10a304b7ecaf941deb45a42636381388f5a3b" translate="yes" xml:space="preserve">
          <source>is a single user-visible &lt;b&gt;character&lt;/b&gt;, which may in turn be several characters (&lt;b&gt;codepoints&lt;/b&gt;) long. For example, a carriage return plus a line feed is a single grapheme but two characters, while a &amp;ldquo;ȫ&amp;rdquo; is a single grapheme but one, two, or even three characters, depending on &lt;b&gt;normalization&lt;/b&gt;.</source>
          <target state="translated">ユーザーに表示される単一の&lt;b&gt;文字&lt;/b&gt;であり、複数の文字（&lt;b&gt;コードポイント&lt;/b&gt;）になる場合があります。たとえば、キャリッジリターンとラインフィードは1つの書記素で2文字ですが、「normal」は1つの書記素ですが、&lt;b&gt;正規化&lt;/b&gt;に応じて1、2、または3文字です。</target>
        </trans-unit>
        <trans-unit id="94a42c80703dda187cbf9d8dc635962500cae627" translate="yes" xml:space="preserve">
          <source>is a small utility that produces a diff between an extracted archive and an unextracted one. (Note that this utility requires the &lt;code&gt;Text::Diff&lt;/code&gt; module to function properly; this module isn't distributed with perl, but is available from the CPAN.)</source>
          <target state="translated">抽出されたアーカイブと抽出されていないアーカイブの間に差分を生成する小さなユーティリティです。（このユーティリティが適切に機能するには &lt;code&gt;Text::Diff&lt;/code&gt; モジュールが必要です。このモジュールはperlで配布されていませんが、CPANから入手できます。）</target>
        </trans-unit>
        <trans-unit id="0317915857aed0b904067e1c9f03cf0d3827f112" translate="yes" xml:space="preserve">
          <source>is a space-separated list of the login names of the members of the group.</source>
          <target state="translated">は、グループのメンバーのログイン名をスペースで区切ったリストです。</target>
        </trans-unit>
        <trans-unit id="94df1f18f1035b39bcc002ff85383c1903d30b19" translate="yes" xml:space="preserve">
          <source>is a special case of</source>
          <target state="translated">の特殊な場合</target>
        </trans-unit>
        <trans-unit id="1e4503fa2022262b8888da1041ba3a96a491c954" translate="yes" xml:space="preserve">
          <source>is a strictly positive integer. There are exactly</source>
          <target state="translated">は厳密には正の整数です。は正確には</target>
        </trans-unit>
        <trans-unit id="22b4d0a1706395e3dc8904448c577180ebc49623" translate="yes" xml:space="preserve">
          <source>is a string of three octal digits, matches the character whose coded character set value is</source>
          <target state="translated">が3桁の8進数の文字列で、コード化された文字セットの値が</target>
        </trans-unit>
        <trans-unit id="3ea9714cb945b96bd24bf0684809e52895e5ec09" translate="yes" xml:space="preserve">
          <source>is a string of three octal digits, matches the character whose native code point is</source>
          <target state="translated">は3桁の8進数の文字列で、ネイティブコードポイントが</target>
        </trans-unit>
        <trans-unit id="9237185425d334578430573eb80cfb1d7070152b" translate="yes" xml:space="preserve">
          <source>is a string value that will be printed if the test fails. This should be some useful information about the test, pertaining to why it failed, and/or a description of the test. For example:</source>
          <target state="translated">はテストが失敗した場合に表示される文字列です。これは、テストが失敗した理由に関連したテストに関する有用な情報、および/またはテストの説明でなければなりません。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="f5d49daf4b07c85bc3e9c9ef9d8fffc8d3e3f192" translate="yes" xml:space="preserve">
          <source>is a string, it is interpreted as a method name - which may (in the usual way) be inherited from another class.</source>
          <target state="translated">が文字列である場合は、メソッド名として解釈されます。</target>
        </trans-unit>
        <trans-unit id="3586b680080fd5641b2ceb505391e64b157c6d54" translate="yes" xml:space="preserve">
          <source>is a string.</source>
          <target state="translated">は文字列です。</target>
        </trans-unit>
        <trans-unit id="4ed0c07d66bccd475fa1593c086fc3fa98dec2eb" translate="yes" xml:space="preserve">
          <source>is a subclass of Pod::Simple.</source>
          <target state="translated">はPod::Simpleのサブクラスです。</target>
        </trans-unit>
        <trans-unit id="868ed78cc676ae7b87528dd846704e32cf6516cb" translate="yes" xml:space="preserve">
          <source>is a subroutine or value that is checked against the return value of an autodying subroutine. If the match returns true, &lt;code&gt;autodie&lt;/code&gt; considers the subroutine to have failed.</source>
          <target state="translated">自動終了サブルーチンの戻り値に対してチェックされるサブルーチンまたは値です。一致がtrueを返す場合、 &lt;code&gt;autodie&lt;/code&gt; はサブルーチンが失敗したと見なします。</target>
        </trans-unit>
        <trans-unit id="a739b0bee7707b7784d85fc52fdd39ee085947e3" translate="yes" xml:space="preserve">
          <source>is a subtype of String containing a Uniform Resource Locator or Identifier. [ This type is called URL and not URI for historical reasons. ]</source>
          <target state="translated">は、Uniform Resource LocatorまたはIdentifierを含むStringのサブタイプです。[この型は歴史的な理由からURIではなくURLと呼ばれています。]</target>
        </trans-unit>
        <trans-unit id="60db8b2929d3a460753d411e6826e4a95e771c98" translate="yes" xml:space="preserve">
          <source>is a subtype of String containing a value that describes the version number of packages or distributions. Restrictions on format are described in detail in the &lt;a href=&quot;#Version-Formats&quot;&gt;&quot;Version Formats&quot;&lt;/a&gt; section.</source>
          <target state="translated">パッケージまたはディストリビューションのバージョン番号を説明する値を含むStringのサブタイプです。フォーマットの制限については、&lt;a href=&quot;#Version-Formats&quot;&gt;「バージョンフォーマット」&lt;/a&gt;セクションで詳しく説明しています。</target>
        </trans-unit>
        <trans-unit id="847ea512688ea38e1971c671e71b46f24b757e70" translate="yes" xml:space="preserve">
          <source>is a subtype of String with a restricted set of values. Valid values are described in detail in the description of the &lt;a href=&quot;#license&quot;&gt;&quot;license&quot;&lt;/a&gt; field.</source>
          <target state="translated">値のセットが制限されたStringのサブタイプです。有効な値については、&lt;a href=&quot;#license&quot;&gt;「ライセンス」&lt;/a&gt;フィールドの説明で詳しく説明されています。</target>
        </trans-unit>
        <trans-unit id="a29d5727df64748ea671973490b7365e5b44e3a6" translate="yes" xml:space="preserve">
          <source>is a syntax error. The &lt;code&gt;&lt;a href=&quot;Text::Balanced&quot;&gt;Text::Balanced&lt;/a&gt;&lt;/code&gt; module (standard as of v5.8, and from CPAN before then) is able to do this properly.</source>
          <target state="translated">構文エラーです。 &lt;code&gt;&lt;a href=&quot;Text::Balanced&quot;&gt;Text::Balanced&lt;/a&gt;&lt;/code&gt; モジュール（v5.8のような標準の、そして前にCPANからは）これを適切に行うことができます。</target>
        </trans-unit>
        <trans-unit id="0c003c50abcb5c5b0264289df696a4d0a86e8994" translate="yes" xml:space="preserve">
          <source>is a syntax error. The &lt;code&gt;&lt;a href=&quot;text/balanced&quot;&gt;Text::Balanced&lt;/a&gt;&lt;/code&gt; module (standard as of v5.8, and from CPAN before then) is able to do this properly.</source>
          <target state="translated">構文エラーです。 &lt;code&gt;&lt;a href=&quot;text/balanced&quot;&gt;Text::Balanced&lt;/a&gt;&lt;/code&gt; モジュール（v5.8のような標準の、そして前にCPANからは）これを適切に行うことができます。</target>
        </trans-unit>
        <trans-unit id="2876ee2f7992b444410c106ba7451d0d11add079" translate="yes" xml:space="preserve">
          <source>is a tar-like program, written in pure Perl.</source>
          <target state="translated">は純粋な Perl で書かれた tar ライクなプログラムです。</target>
        </trans-unit>
        <trans-unit id="789ff2609c0abca97040f597d9fb835495dbcb55" translate="yes" xml:space="preserve">
          <source>is a type.</source>
          <target state="translated">は型です。</target>
        </trans-unit>
        <trans-unit id="ffb330a620d2c555f748134ae75b69f801c184e1" translate="yes" xml:space="preserve">
          <source>is a utility to apply pattern matching to the contents of files in a tar archive.</source>
          <target state="translated">は、tar アーカイブ内のファイルの内容にパターンマッチングを適用するユーティリティです。</target>
        </trans-unit>
        <trans-unit id="5a8daa6bdde6d599bc39901138a55ee1a90e8f3c" translate="yes" xml:space="preserve">
          <source>is actually</source>
          <target state="translated">は実際には</target>
        </trans-unit>
        <trans-unit id="18ace8663c11e15c7ea7af0769d0b51ea8be5d9e" translate="yes" xml:space="preserve">
          <source>is actually a wrapper to call &lt;code&gt;nmake -f makefile.ce&lt;/code&gt; with appropriate parameters and it accepts extra parameters and forwards them to &lt;code&gt;nmake&lt;/code&gt; command as additional arguments. You should pass target this way.</source>
          <target state="translated">実際には、適切なパラメーターを指定して &lt;code&gt;nmake -f makefile.ce&lt;/code&gt; を呼び出すラッパーであり、追加のパラメーターを受け入れ、それらを追加の引数として &lt;code&gt;nmake&lt;/code&gt; コマンドに転送します。この方法でターゲットを渡す必要があります。</target>
        </trans-unit>
        <trans-unit id="9fbb21c8780d25c2d62c14d525ba4493fed3f009" translate="yes" xml:space="preserve">
          <source>is actually nothing more than a link to the (executable)</source>
          <target state="translated">は、実際には (実行可能な)</target>
        </trans-unit>
        <trans-unit id="5c143cd7b595ecaec566bd11322616c254969521" translate="yes" xml:space="preserve">
          <source>is adopted and becomes the name entry; it must already contain the name string.</source>
          <target state="translated">が採用され、名前エントリになります。</target>
        </trans-unit>
        <trans-unit id="f0396ad875d583a36bd13679febb8581f2d969c0" translate="yes" xml:space="preserve">
          <source>is aggregate (eg</source>
          <target state="translated">が集合的なものであることを示しています。</target>
        </trans-unit>
        <trans-unit id="bb8fcae34915a333a3718d00db6629dab07f6c3d" translate="yes" xml:space="preserve">
          <source>is aliased to a constant in the look</source>
          <target state="translated">はルックの定数にエイリアスされています。</target>
        </trans-unit>
        <trans-unit id="ef7ecbbb686b7c87fdcabe5489a7fa8b747a3327" translate="yes" xml:space="preserve">
          <source>is all lowercase, then the &lt;code&gt;CAPITAL&lt;/code&gt; variant is ignored, otherwise the &lt;code&gt;SMALL&lt;/code&gt; variant is ignored, and both</source>
          <target state="translated">すべて小文字の場合、 &lt;code&gt;CAPITAL&lt;/code&gt; バリアントは無視されます。それ以外の場合、 &lt;code&gt;SMALL&lt;/code&gt; バリアントは無視されます。</target>
        </trans-unit>
        <trans-unit id="33ba30df2d642bce79e623dcea9beec8c9b22ce4" translate="yes" xml:space="preserve">
          <source>is allowed so that &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt; &amp;amp;$AUTOLOAD&lt;/code&gt; would not break under stricture.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt; &amp;amp;$AUTOLOAD&lt;/code&gt; が制限の下で壊れないように許可されています。</target>
        </trans-unit>
        <trans-unit id="4cdc067dc710d461fdd2c6861818c6f34c71efa9" translate="yes" xml:space="preserve">
          <source>is allowed so that &lt;code&gt;goto &amp;amp;$AUTOLOAD&lt;/code&gt; would not break under stricture.</source>
          <target state="translated">&lt;code&gt;goto &amp;amp;$AUTOLOAD&lt;/code&gt; が制限の下で壊れないように許可されます。</target>
        </trans-unit>
        <trans-unit id="46fdc8e9a838eea8febbedf9514625b10566e73a" translate="yes" xml:space="preserve">
          <source>is almost exactly like saying:</source>
          <target state="translated">と言っているのとほぼ同じです。</target>
        </trans-unit>
        <trans-unit id="0a5481b3e3d73092971b7b67886c83a33452d0d4" translate="yes" xml:space="preserve">
          <source>is already stored as</source>
          <target state="translated">として既に格納されています。</target>
        </trans-unit>
        <trans-unit id="e58ea1e0a6e29d9ef790e92565bf38a0d8bec6a6" translate="yes" xml:space="preserve">
          <source>is already stored as native 8 bit, then this is a no-op. Can be used to make sure that the UTF-8 flag is off, e.g. when you want to make sure that the substr() or length() function works with the usually faster byte algorithm.</source>
          <target state="translated">が既にネイティブ8ビットとして格納されている場合は、これは無効です。例えば、substr()やlength()関数が通常より高速なバイトアルゴリズムで動作することを確認したい場合などに、UTF-8フラグがオフであることを確認するために使用できます。</target>
        </trans-unit>
        <trans-unit id="3faa76071b10958d3afcc61878573dea5642f95e" translate="yes" xml:space="preserve">
          <source>is already upgraded, then this is a no-op. Returns the number of octets necessary to represent the string as UTF-8.</source>
          <target state="translated">が既にアップグレードされている場合は、これは実行しません。文字列をUTF-8として表現するのに必要なオクテット数を返します。</target>
        </trans-unit>
        <trans-unit id="4ac0b49408848578e35ac08e94a2eb89181b4b85" translate="yes" xml:space="preserve">
          <source>is also checked if it exists in any of the given search directories. This ensures that e.g. &lt;a href=&quot;../perlfunc&quot;&gt;perlfunc&lt;/a&gt; is found.</source>
          <target state="translated">また、指定された検索ディレクトリのいずれかに存在するかどうかもチェックされます。これにより、たとえば&lt;a href=&quot;../perlfunc&quot;&gt;perlfunc&lt;/a&gt;が確実に検出されます。</target>
        </trans-unit>
        <trans-unit id="7a6684732c17ab02c8bf39ac150678f88574a5f9" translate="yes" xml:space="preserve">
          <source>is also run unconditionally. But for</source>
          <target state="translated">も無条件で実行されます。しかし</target>
        </trans-unit>
        <trans-unit id="4b33a9f079edd28e14aa0e8744a90b1c55a32145" translate="yes" xml:space="preserve">
          <source>is always interpreted exactly as specified. Otherwise, if the</source>
          <target state="translated">は常に指定された通りに解釈されます。そうでなければ、もし</target>
        </trans-unit>
        <trans-unit id="91b6c84b698378cb0b4e7eec5833aff6a0180f6a" translate="yes" xml:space="preserve">
          <source>is always non-negative, so &lt;code&gt;[x,pi]&lt;/code&gt; is really &lt;code&gt;-x&lt;/code&gt; , a negative number) and the above definition states that</source>
          <target state="translated">は常に非負であるため、 &lt;code&gt;[x,pi]&lt;/code&gt; は実際には &lt;code&gt;-x&lt;/code&gt; であり、負の数です）および上記の定義では、</target>
        </trans-unit>
        <trans-unit id="ba1a0dc069d14d01c6335c03928b7870d99b8981" translate="yes" xml:space="preserve">
          <source>is always non-negative, so &lt;code&gt;[x,pi]&lt;/code&gt; is really &lt;code&gt;-x&lt;/code&gt;, a negative number) and the above definition states that</source>
          <target state="translated">は常に非負であるため、 &lt;code&gt;[x,pi]&lt;/code&gt; は実際には &lt;code&gt;-x&lt;/code&gt; 、負の数です）、上記の定義は次のように述べています。</target>
        </trans-unit>
        <trans-unit id="2da11ce46f8ece756162bb2bd4909c483184c069" translate="yes" xml:space="preserve">
          <source>is always used instead of</source>
          <target state="translated">の代わりに常に</target>
        </trans-unit>
        <trans-unit id="da8ff8262fd46aff0c9a7c13fdec487e6709caf8" translate="yes" xml:space="preserve">
          <source>is an &lt;code&gt;enum&lt;/code&gt; . If a reference an array is passed then the first element is used in place of the &lt;code&gt;#ifdef&lt;/code&gt; line, and the second element in place of the &lt;code&gt;#endif&lt;/code&gt; . This allows pre-processor constructions such as</source>
          <target state="translated">ある &lt;code&gt;enum&lt;/code&gt; 。配列への参照が渡される場合、最初の要素が &lt;code&gt;#ifdef&lt;/code&gt; 行の代わりに使用され、2番目の要素が &lt;code&gt;#endif&lt;/code&gt; の代わりに使用されます。これにより、次のようなプリプロセッサ構成が可能になります</target>
        </trans-unit>
        <trans-unit id="730c466549e139cec03995ff694e7be2ffa126b6" translate="yes" xml:space="preserve">
          <source>is an &lt;code&gt;enum&lt;/code&gt;. If a reference an array is passed then the first element is used in place of the &lt;code&gt;#ifdef&lt;/code&gt; line, and the second element in place of the &lt;code&gt;#endif&lt;/code&gt;. This allows pre-processor constructions such as</source>
          <target state="translated">ある &lt;code&gt;enum&lt;/code&gt; 。参照配列が渡されると、最初の要素が &lt;code&gt;#ifdef&lt;/code&gt; 行の代わりに使用され、2番目の要素が &lt;code&gt;#endif&lt;/code&gt; の代わりに使用されます。これにより、次のようなプリプロセッサ構造が可能になります。</target>
        </trans-unit>
        <trans-unit id="e407c507e8202b86ad93aac32e3005d18c456577" translate="yes" xml:space="preserve">
          <source>is an abstract entity. It is not bound to any particular integer width, especially not to the C language &lt;code&gt;char&lt;/code&gt; . Unicode is language-neutral and display-neutral: it does not encode the language of the text, and it does not generally define fonts or other graphical layout details. Unicode operates on characters and on text built from those characters.</source>
          <target state="translated">抽象エンティティです。特定の整数幅、特にC言語の &lt;code&gt;char&lt;/code&gt; にバインドされていません。Unicodeは言語に依存せず、表示に依存しません。つまり、テキストの言語をエンコードせず、一般にフォントやその他のグラフィックレイアウトの詳細を定義しません。Unicodeは、文字およびそれらの文字から構築されたテキストを操作します。</target>
        </trans-unit>
        <trans-unit id="244ec96055486cd1e6ac53bee58930154b150817" translate="yes" xml:space="preserve">
          <source>is an abstract entity. It is not bound to any particular integer width, especially not to the C language &lt;code&gt;char&lt;/code&gt;. Unicode is language-neutral and display-neutral: it does not encode the language of the text, and it does not generally define fonts or other graphical layout details. Unicode operates on characters and on text built from those characters.</source>
          <target state="translated">抽象エンティティです。特定の整数幅、特にC言語の &lt;code&gt;char&lt;/code&gt; にバインドされていません。Unicodeは言語に依存せず、表示に依存しません。テキストの言語をエンコードせず、通常、フォントやその他のグラフィックレイアウトの詳細を定義しません。Unicodeは、文字およびそれらの文字から作成されたテキストで動作します。</target>
        </trans-unit>
        <trans-unit id="5b08b5f167ddd80c250223169363f388a08ecb4a" translate="yes" xml:space="preserve">
          <source>is an alias of Encode::Encoder-&amp;gt;new(). This one is exported on demand.</source>
          <target state="translated">Encode :: Encoder-&amp;gt; new（）のエイリアスです。これはオンデマンドでエクスポートされます。</target>
        </trans-unit>
        <trans-unit id="72d90656006280a94921d89ee421ad3991654b7e" translate="yes" xml:space="preserve">
          <source>is an alternate name for a character</source>
          <target state="translated">は文字の代替名です。</target>
        </trans-unit>
        <trans-unit id="25511ab968aa9c3ee55dc28d290edd3e8efa06cf" translate="yes" xml:space="preserve">
          <source>is an appropriate suffix for the platform.</source>
          <target state="translated">はプラットフォームに適切な接尾辞です。</target>
        </trans-unit>
        <trans-unit id="7c8e05cc3c89a308a1e47e52a0132a344b0c0867" translate="yes" xml:space="preserve">
          <source>is an array of all the layers destined for the &lt;code&gt;PerlIO *&lt;/code&gt; , and any arguments passed to them,</source>
          <target state="translated">&lt;code&gt;PerlIO *&lt;/code&gt; を宛先とするすべてのレイヤーの配列と、それらに渡される引数、</target>
        </trans-unit>
        <trans-unit id="ce80bbc20aef2574bbd8e13f75fd5cee9aa06236" translate="yes" xml:space="preserve">
          <source>is an array of all the layers destined for the &lt;code&gt;PerlIO *&lt;/code&gt;, and any arguments passed to them,</source>
          <target state="translated">は、 &lt;code&gt;PerlIO *&lt;/code&gt; 宛てのすべてのレイヤーの配列であり、それらに渡される引数はすべて、</target>
        </trans-unit>
        <trans-unit id="0d1781574c62d77c8d78bcf079651e77516db6c7" translate="yes" xml:space="preserve">
          <source>is an executable image containing the main entry point for Perl, as well as some initialization code. It should be placed in a public directory, and made world executable. In order to run Perl with command line arguments, you should define a foreign command to invoke this image.</source>
          <target state="translated">は、Perlのメインエントリーポイントと初期化コードを含む実行可能なイメージです。パブリックディレクトリに配置して、世界で実行可能な状態にしておく必要があります。コマンドライン引数で Perl を実行するためには、このイメージを呼び出すための外部コマンドを定義しなければなりません。</target>
        </trans-unit>
        <trans-unit id="da2e040dacc739036641a30943ec92d4d35fb00f" translate="yes" xml:space="preserve">
          <source>is an executable image which contains all of the basic functionality of Perl, but cannot take advantage of Perl XS extensions and has a hard-wired list of library locations for loading pure-Perl modules. It is used extensively to build and test Perl and various extensions, but is not installed.</source>
          <target state="translated">は、Perl の基本的な機能をすべて含んでいますが、Perl XS 拡張を利用することはできず、純粋な Perl モジュールをロードするためのライブラリの場所のリストがハードワイヤードされている実行可能なイメージです。Perl やさまざまな拡張機能のビルドやテストに広く使われていますが、インストールされていません。</target>
        </trans-unit>
        <trans-unit id="295e5d231e93271cf2e87ff53177a2085d57895e" translate="yes" xml:space="preserve">
          <source>is an interface to &lt;a href=&quot;perldiag&quot;&gt;perldiag&lt;/a&gt; - paste in your error message to it, and it'll explain it for you.</source>
          <target state="translated">は&lt;a href=&quot;perldiag&quot;&gt;perldiag&lt;/a&gt;へのインターフェースです -エラーメッセージをそれに貼り付けてください。説明します。</target>
        </trans-unit>
        <trans-unit id="03aebc26e2a8086c7faa0ae9cd0a6e9a5014db91" translate="yes" xml:space="preserve">
          <source>is an older tool, originally intended for the development of XS modules, which comes packaged with the Perl distribution.</source>
          <target state="translated">は古いツールで、元々は XS モジュールの開発を目的としたもので、Perl ディストリビューションに同梱されています。</target>
        </trans-unit>
        <trans-unit id="c81e7450f22acc425e61712a1eaf2d872d794637" translate="yes" xml:space="preserve">
          <source>is an op that has been optimized away by perl. They're displayed with a sequence-number of '-', because they are not executed (they don't appear in previous example), they're printed here because they reflect the parse.</source>
          <target state="translated">は perl によって最適化された op です。これらは実行されていない(前の例では表示されていない)ので、'-'のシーケンス番号で表示されていますが、ここではパースを反映しているので表示されています。</target>
        </trans-unit>
        <trans-unit id="9d5e6dcb345ffb1eb11d5479427e9235760d76bd" translate="yes" xml:space="preserve">
          <source>is an optional preconstructed &lt;code&gt;enterloop&lt;/code&gt; op to use in the loop; if it is null then a suitable op will be constructed automatically.</source>
          <target state="translated">ループで使用するオプションの事前構築された &lt;code&gt;enterloop&lt;/code&gt; opです。nullの場合、適切なopが自動的に構築されます。</target>
        </trans-unit>
        <trans-unit id="d711f8883307162040e3cae93b6ed1acc9d5eafd" translate="yes" xml:space="preserve">
          <source>is an ordered collection of zero or more data elements. Elements of a List may be of mixed types.</source>
          <target state="translated">は、0個以上のデータ要素の順序付きコレクションです。リストの要素は、混在した型を持つことがあります。</target>
        </trans-unit>
        <trans-unit id="56c224901d33cdd590145274ca25177fc4be217e" translate="yes" xml:space="preserve">
          <source>is an unordered collection of zero or more data elements (&quot;values&quot;), indexed by associated String elements (&quot;keys&quot;). The Map's value elements may be of mixed types.</source>
          <target state="translated">は、関連する String 要素 (「キー」)によってインデックス付けされた、0 個以上のデータ要素 (「値」)の無秩序なコレクションです。マップの値要素には、複数の型が混在している場合があります。</target>
        </trans-unit>
        <trans-unit id="acf27be8c27b564ea715f62509eb99be46454cb1" translate="yes" xml:space="preserve">
          <source>is another German-speaking magazine for Perl beginners (see &lt;a href=&quot;http://perl-zeitung.at.tf&quot;&gt;http://perl-zeitung.at.tf&lt;/a&gt; ).</source>
          <target state="translated">は、Perl初心者向けのドイツ語を話す別の雑誌です（&lt;a href=&quot;http://perl-zeitung.at.tf&quot;&gt;http://perl-zeitung.at.tfを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="aa85c7e6136b506253070be8f818e9007d9cfdee" translate="yes" xml:space="preserve">
          <source>is any integer.</source>
          <target state="translated">は任意の整数です。</target>
        </trans-unit>
        <trans-unit id="be3f59631fae1d8b0922b826e41efeee4ec99b4a" translate="yes" xml:space="preserve">
          <source>is any integer. atan2(0, 0) is undefined, and if the complex arguments are used for atan2(), a division by zero will happen if z1**2+z2**2 == 0.</source>
          <target state="translated">atan2(0,0)は未定義であり、atan2()に複素引数を使用した場合、z1**2+z2**2 ==0 の場合はゼロによる除算が発生します。</target>
        </trans-unit>
        <trans-unit id="5783bc43b68f92b02879e3b2c43e9bdd7ca36459" translate="yes" xml:space="preserve">
          <source>is any of the above or an unblessed reference</source>
          <target state="translated">は、上記のどれかか、あるいは文句なしの参考文献です。</target>
        </trans-unit>
        <trans-unit id="317d13686e9281ab17689ef86bdab5a9aa318ad2" translate="yes" xml:space="preserve">
          <source>is applied to that sorted result. This means that under &lt;code&gt;/c&lt;/code&gt;, the order of the characters specified in</source>
          <target state="translated">そのソートされた結果に適用されます。これは、 &lt;code&gt;/c&lt;/code&gt; の下で、で指定された文字の順序が</target>
        </trans-unit>
        <trans-unit id="30e4914477a91ec9b94e791e584cbb65619eeac2" translate="yes" xml:space="preserve">
          <source>is as above. Note that it is possible for calls to &lt;code&gt;pre_&lt;/code&gt; and &lt;code&gt;post_end&lt;/code&gt; to nest, if there is something on the save stack that calls string eval.</source>
          <target state="translated">上記のとおりです。文字列evalを呼び出す保存スタックに何かがある場合、 &lt;code&gt;pre_&lt;/code&gt; および &lt;code&gt;post_end&lt;/code&gt; の呼び出しがネストする可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="36eb847ac03124888eb9b23e1494c3b3077980d8" translate="yes" xml:space="preserve">
          <source>is asking for trouble, since</source>
          <target state="translated">困ったことになる</target>
        </trans-unit>
        <trans-unit id="04172b80ff2f0946e1d3398db467faaad87811d2" translate="yes" xml:space="preserve">
          <source>is associated with the matched string, and is reset by each assignment to &lt;code&gt;pos()&lt;/code&gt;. Zero-length matches at the end of the previous match are ignored during &lt;code&gt;split&lt;/code&gt;.</source>
          <target state="translated">一致した文字列に関連付けられており、 &lt;code&gt;pos()&lt;/code&gt; への割り当てごとにリセットされます。前の一致の終了時の長さがゼロの一致は、 &lt;code&gt;split&lt;/code&gt; 中に無視されます。</target>
        </trans-unit>
        <trans-unit id="df9814075a8a9994907bb7e926342f5cd51701bc" translate="yes" xml:space="preserve">
          <source>is associated with the matched string, and is reset by each assignment to pos(). Zero-length matches at the end of the previous match are ignored during &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">一致した文字列に関連付けられ、pos（）への割り当てごとにリセットされます。前の一致の最後にある長さゼロの一致は、 &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; 中に無視されます。</target>
        </trans-unit>
        <trans-unit id="6941b5c781a0a521041b5c1dd8c16baced227b53" translate="yes" xml:space="preserve">
          <source>is at &lt;a href=&quot;http://sunsite.dk/RFC/rfc/rfc2277.html&quot;&gt;http://sunsite.dk/RFC/rfc/rfc2277.html&lt;/a&gt; -- much of it is just things of interest to protocol designers, but it explains some basic concepts, like the distinction between locales and language-tags.</source>
          <target state="translated">である&lt;a href=&quot;http://sunsite.dk/RFC/rfc/rfc2277.html&quot;&gt;http://sunsite.dk/RFC/rfc/rfc2277.html&lt;/a&gt; -それの多くは、プロトコル設計に興味のある物事ですが、それはロケールと言語タグの区別のようないくつかの基本的な概念について説明します。</target>
        </trans-unit>
        <trans-unit id="3695a320bebe6f3e9a28f189a22d75b358931b52" translate="yes" xml:space="preserve">
          <source>is at least 3, &lt;code&gt;for&lt;/code&gt; loops will be translated into equivalent while loops with continue blocks; for instance</source>
          <target state="translated">、少なくとも3である &lt;code&gt;for&lt;/code&gt; 、ループが継続ブロックと同等のwhileループに翻訳されます。例えば</target>
        </trans-unit>
        <trans-unit id="a932359d1eeb1e12e4da8b3878fa5ee714a70634" translate="yes" xml:space="preserve">
          <source>is at least 5, &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; declarations will be translated into &lt;code&gt;BEGIN&lt;/code&gt; blocks containing calls to &lt;code&gt;&lt;a href=&quot;../functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt;; for instance,</source>
          <target state="translated">が5以上の場合、 &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; 宣言は &lt;code&gt;&lt;a href=&quot;../functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;../functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; の呼び出しを含む &lt;code&gt;BEGIN&lt;/code&gt; ブロックに変換されます。例えば、</target>
        </trans-unit>
        <trans-unit id="9da8b3c6a134447a38fd297ccb23081c69f63139" translate="yes" xml:space="preserve">
          <source>is at least 5, &lt;code&gt;use&lt;/code&gt; declarations will be translated into &lt;code&gt;BEGIN&lt;/code&gt; blocks containing calls to &lt;code&gt;require&lt;/code&gt; and &lt;code&gt;import&lt;/code&gt;; for instance,</source>
          <target state="translated">少なくとも5である &lt;code&gt;use&lt;/code&gt; 、use宣言は &lt;code&gt;require&lt;/code&gt; および &lt;code&gt;import&lt;/code&gt; の呼び出しを含む &lt;code&gt;BEGIN&lt;/code&gt; ブロックに変換されます。例えば、</target>
        </trans-unit>
        <trans-unit id="c119f702a61cc525d7584c5eac4566db8774adc2" translate="yes" xml:space="preserve">
          <source>is at least 512kbyte (you can check this with: &lt;code&gt;stubedit cc1.exe&lt;/code&gt; ).</source>
          <target state="translated">512kバイト以上です（これは &lt;code&gt;stubedit cc1.exe&lt;/code&gt; で確認できます）。</target>
        </trans-unit>
        <trans-unit id="7e7eb4200b2e2646337b92df307ee7adf0113e87" translate="yes" xml:space="preserve">
          <source>is at least 512kbyte (you can check this with: &lt;code&gt;stubedit cc1.exe&lt;/code&gt;).</source>
          <target state="translated">は少なくとも512kバイトです（これは &lt;code&gt;stubedit cc1.exe&lt;/code&gt; で確認できます）。</target>
        </trans-unit>
        <trans-unit id="f1edba509463471e4477759e68744d683b69a1f8" translate="yes" xml:space="preserve">
          <source>is at least 7, &lt;code&gt;if&lt;/code&gt; statements will be translated into equivalent expressions using &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;, &lt;code&gt;?:&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../functions/do&quot;&gt;do&lt;/a&gt; {}&lt;/code&gt; ; for instance</source>
          <target state="translated">&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; 、 &lt;code&gt;?:&lt;/code&gt; 、および &lt;code&gt;&lt;a href=&quot;../functions/do&quot;&gt;do&lt;/a&gt; {}&lt;/code&gt; {}を使用してステートメントが同等の式に変換される &lt;code&gt;if&lt;/code&gt; 、少なくとも7 です。例えば</target>
        </trans-unit>
        <trans-unit id="02a5555025ad94d4d1255893e3b20ce7e7977957" translate="yes" xml:space="preserve">
          <source>is at least 7, &lt;code&gt;if&lt;/code&gt; statements will be translated into equivalent expressions using &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;, &lt;code&gt;?:&lt;/code&gt; and &lt;code&gt;do {}&lt;/code&gt;; for instance</source>
          <target state="translated">ステートメントが &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; 、 &lt;code&gt;?:&lt;/code&gt; および &lt;code&gt;do {}&lt;/code&gt; ;を使用して同等の式に変換される &lt;code&gt;if&lt;/code&gt; 、は少なくとも7です。例えば</target>
        </trans-unit>
        <trans-unit id="3ebcba5300e1807510d46aa9590e6c6a47b91326" translate="yes" xml:space="preserve">
          <source>is basically equivalent to</source>
          <target state="translated">は基本的には</target>
        </trans-unit>
        <trans-unit id="f2a370a954d86dc4cfe469a68c83fd68b9353b30" translate="yes" xml:space="preserve">
          <source>is basically equivalent to this:</source>
          <target state="translated">は基本的にはこれに相当します。</target>
        </trans-unit>
        <trans-unit id="ffc0ffcd2f24cb5977dd7a038df50d731e24c9b9" translate="yes" xml:space="preserve">
          <source>is basically equivalent to:</source>
          <target state="translated">は基本的には等価です。</target>
        </trans-unit>
        <trans-unit id="efa6ff7d8cd2f270c8d3889d8b02bcd7a2b0379a" translate="yes" xml:space="preserve">
          <source>is be a hashref of types the constant function will return. In ExtUtils::Constant::XS this method is used to returns a hashref keyed IV NV PV SV to show which combination of pointers will be needed in the C argument list generated by C_constant_other_params_definition and C_constant_other_params</source>
          <target state="translated">は定数関数が返す型のハッシュリフです。ExtUtils::Constant::XS では、このメソッドは、C_constant_other_params_definition と C_constant_other_params によって生成された C 引数リストの中で、どのポインタの組み合わせが必要になるかを示すために、IV NV PV SV というキー付きのハッシュリフを返すために使用されます。</target>
        </trans-unit>
        <trans-unit id="beed228bb7571f61ef1254143747172d93f725df" translate="yes" xml:space="preserve">
          <source>is because &quot;:&quot; often comes up in paths, like &lt;code&gt;&quot;c:/perl/lib&quot;&lt;/code&gt; .)</source>
          <target state="translated">これは、「：」が &lt;code&gt;&quot;c:/perl/lib&quot;&lt;/code&gt; ようなパスで現れることが多いためです。</target>
        </trans-unit>
        <trans-unit id="6d996c8ba4429d0e067770485bcfc31b3975f083" translate="yes" xml:space="preserve">
          <source>is because &quot;:&quot; often comes up in paths, like &lt;code&gt;&quot;c:/perl/lib&quot;&lt;/code&gt;.)</source>
          <target state="translated">「：」は &lt;code&gt;&quot;c:/perl/lib&quot;&lt;/code&gt; ようにパスに現れることが多いためです。）</target>
        </trans-unit>
        <trans-unit id="b00405322d6959fc080131bfe766ce7448452d15" translate="yes" xml:space="preserve">
          <source>is being compiled you may (depending on the operating system release) see an additional compiler flag being used: &lt;code&gt;-DNO_EFF_ONLY_OK&lt;/code&gt; . This is normal and refers to a feature that is relevant only if you use the &lt;code&gt;filetest&lt;/code&gt; pragma. In older releases of the operating system the feature was broken and the NO_EFF_ONLY_OK instructs Perl not to use the feature.</source>
          <target state="translated">コンパイル中です（オペレーティングシステムのリリースによって異なります）。追加のコンパイラフラグが使用されているのを確認してください： &lt;code&gt;-DNO_EFF_ONLY_OK&lt;/code&gt; 。これは正常であり、 &lt;code&gt;filetest&lt;/code&gt; プラグマを使用する場合にのみ関連する機能を指します。以前のリリースのオペレーティングシステムでは機能が壊れていて、NO_EFF_ONLY_OKはPerlに機能を使用しないように指示します。</target>
        </trans-unit>
        <trans-unit id="464eb7b08c428be5bfac3ee33e35e1ca662f7aaf" translate="yes" xml:space="preserve">
          <source>is being compiled you may (depending on the operating system release) see an additional compiler flag being used: &lt;code&gt;-DNO_EFF_ONLY_OK&lt;/code&gt;. This is normal and refers to a feature that is relevant only if you use the &lt;code&gt;filetest&lt;/code&gt; pragma. In older releases of the operating system the feature was broken and the NO_EFF_ONLY_OK instructs Perl not to use the feature.</source>
          <target state="translated">コンパイル中の場合（オペレーティングシステムのリリースによっては）、使用されている追加のコンパイラフラグ &lt;code&gt;-DNO_EFF_ONLY_OK&lt;/code&gt; が表示される場合があります。これは正常であり、 &lt;code&gt;filetest&lt;/code&gt; プラグマを使用する場合にのみ関連する機能を指します。オペレーティングシステムの古いリリースでは、機能が壊れており、NO_EFF_ONLY_OKはPerlに機能を使用しないように指示します。</target>
        </trans-unit>
        <trans-unit id="5a7b7ea63bcfd4e7e919847cbe05a532d715b559" translate="yes" xml:space="preserve">
          <source>is being used, false if not.</source>
          <target state="translated">が使用されているかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="46adb9ce162b644638d5f6ea5ff817ff62b057cb" translate="yes" xml:space="preserve">
          <source>is being used, the Perl subroutine is specified as a C string. In this case the subroutine name has been 'hard-wired' into the code.</source>
          <target state="translated">が使用されている場合、PerlのサブルーチンはC文字列で指定されます。この場合、サブルーチン名はコードに「ハードワイヤード」されています。</target>
        </trans-unit>
        <trans-unit id="9a77723c3a569791ba0daaaeffeea04df4037001" translate="yes" xml:space="preserve">
          <source>is better than</source>
          <target state="translated">よりも</target>
        </trans-unit>
        <trans-unit id="e0502ca9d9f39e4be66fbcd074913732a28c22e5" translate="yes" xml:space="preserve">
          <source>is bigger then the group level.</source>
          <target state="translated">はグループレベルよりも大きい。</target>
        </trans-unit>
        <trans-unit id="343082504b9a0655ece30e29661825f00250e1d3" translate="yes" xml:space="preserve">
          <source>is built using</source>
          <target state="translated">を使用して構築されています。</target>
        </trans-unit>
        <trans-unit id="0854b2a1714cc6445ab7e4ddf8c2db426ce57837" translate="yes" xml:space="preserve">
          <source>is built,</source>
          <target state="translated">が建てられています。</target>
        </trans-unit>
        <trans-unit id="cf600e83596fbcfa5796fa75f5e47d5ff1240570" translate="yes" xml:space="preserve">
          <source>is built. This is a single executable (without DLL), intended to run on Win32, and it will facilitate remaining build process; all binaries built after it are foreign and should not run locally.</source>
          <target state="translated">がビルドされます。これは単一の実行ファイル(DLLなし)で、Win32上で実行することを意図しており、残りのビルドプロセスを容易にします。</target>
        </trans-unit>
        <trans-unit id="5255e100819691e64fa9b4a02162efc6ad2a7971" translate="yes" xml:space="preserve">
          <source>is called</source>
          <target state="translated">と呼ばれる</target>
        </trans-unit>
        <trans-unit id="0226beba7cd0e825fb4e38da5573e429bdef0536" translate="yes" xml:space="preserve">
          <source>is called like this</source>
          <target state="translated">というように呼ばれています。</target>
        </trans-unit>
        <trans-unit id="01efdfc207c40685a40505df8a8c6de053fd276d" translate="yes" xml:space="preserve">
          <source>is called thus</source>
          <target state="translated">と呼ばれています。</target>
        </trans-unit>
        <trans-unit id="d6879492c8d67c42189022fa109e24255ed0a45a" translate="yes" xml:space="preserve">
          <source>is called, the interpreter's syntax parse tree and symbol tables are cleaned up, and global variables are reset. The second assignment to &lt;code&gt;PL_perl_destruct_level&lt;/code&gt; is needed because perl_construct resets it to &lt;code&gt;0&lt;/code&gt; .</source>
          <target state="translated">が呼び出され、インタプリタの構文解析ツリーとシンボルテーブルがクリーンアップされ、グローバル変数がリセットされます。 &lt;code&gt;PL_perl_destruct_level&lt;/code&gt; が &lt;code&gt;0&lt;/code&gt; にリセットするため、PL_perl_destruct_level への2番目の割り当てが必要です。</target>
        </trans-unit>
        <trans-unit id="5db303188b256fe4dd8a7266a5c48924e77af2d2" translate="yes" xml:space="preserve">
          <source>is called, the interpreter's syntax parse tree and symbol tables are cleaned up, and global variables are reset. The second assignment to &lt;code&gt;PL_perl_destruct_level&lt;/code&gt; is needed because perl_construct resets it to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">が呼び出されると、インタプリタの構文解析ツリーとシンボルテーブルがクリーンアップされ、グローバル変数がリセットされます。 &lt;code&gt;PL_perl_destruct_level&lt;/code&gt; への2番目の割り当ては、perl_constructが &lt;code&gt;0&lt;/code&gt; にリセットするために必要です。</target>
        </trans-unit>
        <trans-unit id="0e0ec575b76e364e00644cc1e1456d4682a0ca12" translate="yes" xml:space="preserve">
          <source>is called. If</source>
          <target state="translated">と呼ばれています。もし</target>
        </trans-unit>
        <trans-unit id="ec4d308b2a7ec41f333fa7e39a6baafd8199536a" translate="yes" xml:space="preserve">
          <source>is completed, control reverts back to Perl more or less immediately.</source>
          <target state="translated">が完了すると、制御はすぐに多かれ少なかれPerlに戻ります。</target>
        </trans-unit>
        <trans-unit id="9808d99a48eef922543021cb1dd28efe676ff96c" translate="yes" xml:space="preserve">
          <source>is computed to be</source>
          <target state="translated">と計算されます。</target>
        </trans-unit>
        <trans-unit id="26d5193d0879df7801befc090d32f16dea7f62bc" translate="yes" xml:space="preserve">
          <source>is considerably slower.)</source>
          <target state="translated">はかなり遅いです)。</target>
        </trans-unit>
        <trans-unit id="7457b7ec85de496d14e61652a0482492c7d41031" translate="yes" xml:space="preserve">
          <source>is considered an octal escape (but something like &lt;code&gt;\18&lt;/code&gt; is the same as &lt;code&gt;\0018&lt;/code&gt; ; that is, the octal escape &lt;code&gt;&quot;\001&quot;&lt;/code&gt; followed by a literal digit &lt;code&gt;&quot;8&quot;&lt;/code&gt; ).</source>
          <target state="translated">8進エスケープと見なされます（ただし、 &lt;code&gt;\18&lt;/code&gt; ようなものは &lt;code&gt;\0018&lt;/code&gt; と同じです。つまり、8進エスケープ &lt;code&gt;&quot;\001&quot;&lt;/code&gt; 後にリテラル数字 &lt;code&gt;&quot;8&quot;&lt;/code&gt; が続きます）。</target>
        </trans-unit>
        <trans-unit id="ad8330de67f8acc238b6f773e08a6315dceeee95" translate="yes" xml:space="preserve">
          <source>is considered an octal escape (but something like &lt;code&gt;\18&lt;/code&gt; is the same as &lt;code&gt;\0018&lt;/code&gt;; that is, the octal escape &lt;code&gt;&quot;\001&quot;&lt;/code&gt; followed by a literal digit &lt;code&gt;&quot;8&quot;&lt;/code&gt;).</source>
          <target state="translated">は8進エスケープと見なされます（ただし、 &lt;code&gt;\18&lt;/code&gt; ようなものは &lt;code&gt;\0018&lt;/code&gt; と同じです。つまり、8進エスケープ &lt;code&gt;&quot;\001&quot;&lt;/code&gt; 後にリテラル数字 &lt;code&gt;&quot;8&quot;&lt;/code&gt; 続きます）。</target>
        </trans-unit>
        <trans-unit id="0c6c59d53731eb4d62ce728fe5d323178a21c69a" translate="yes" xml:space="preserve">
          <source>is consumed by this function and becomes part of the returned op tree.</source>
          <target state="translated">はこの関数によって消費され、返される op ツリーの一部となります。</target>
        </trans-unit>
        <trans-unit id="dc258a7b37a09c5a513defc7421c502e2dfc41b4" translate="yes" xml:space="preserve">
          <source>is copied by this function, which thus does not take ownership of any reference to it, and later changes to the scalar will not be reflected in the value visible in the &lt;code&gt;refcounted_he&lt;/code&gt; . Complex types of scalar will not be stored with referential integrity, but will be coerced to strings.</source>
          <target state="translated">この関数によってコピーされるため、この関数への参照の所有権は取得されず、後でスカラーに加えられた変更は、 &lt;code&gt;refcounted_he&lt;/code&gt; に表示される値に反映されません。複雑なタイプのスカラーは参照整合性で保存されませんが、文字列に強制変換されます。</target>
        </trans-unit>
        <trans-unit id="fbf2c8c541938c6077a677f840135912410a3a25" translate="yes" xml:space="preserve">
          <source>is copied by this function, which thus does not take ownership of any reference to it, and later changes to the scalar will not be reflected in the value visible in the cop hints hash. Complex types of scalar will not be stored with referential integrity, but will be coerced to strings.</source>
          <target state="translated">はこの関数によってコピーされますが,この関数はスカラへの参照の所有権を持ちません.複雑な型のスカラは参照整合性を保ったまま保存されず、文字列に強制されます。</target>
        </trans-unit>
        <trans-unit id="e6a0410c63d8ae186d47eeff87c0c224285e2b42" translate="yes" xml:space="preserve">
          <source>is copied from</source>
          <target state="translated">からコピーされています。</target>
        </trans-unit>
        <trans-unit id="30e3ef0b8ff559774ec5ed938edd84b1f238cb9b" translate="yes" xml:space="preserve">
          <source>is copied to a new hash, which has the &lt;code&gt;%^H&lt;/code&gt; -specific magic added to it. A pointer to the new hash is returned.</source>
          <target state="translated">&lt;code&gt;%^H&lt;/code&gt; 固有の魔法が追加された新しいハッシュにコピーされます。新しいハッシュへのポインタが返されます。</target>
        </trans-unit>
        <trans-unit id="747f6e21ce3daf93f93dd4472373d8de083a21bc" translate="yes" xml:space="preserve">
          <source>is created using &lt;code&gt;TMP&lt;/code&gt; or &lt;code&gt;TEMP&lt;/code&gt; environment variable, via &lt;code&gt;tempnam&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;tempnam&lt;/code&gt; を介して、 &lt;code&gt;TMP&lt;/code&gt; または &lt;code&gt;TEMP&lt;/code&gt; 環境変数を使用して作成されます。</target>
        </trans-unit>
        <trans-unit id="398d506f770d418231dba5c8a5fedb1758f5234f" translate="yes" xml:space="preserve">
          <source>is created using &lt;code&gt;TMP&lt;/code&gt; or &lt;code&gt;TEMP&lt;/code&gt; environment variable, via &lt;code&gt;tempnam&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;tempnam&lt;/code&gt; を介して &lt;code&gt;TMP&lt;/code&gt; または &lt;code&gt;TEMP&lt;/code&gt; 環境変数を使用して作成されます。</target>
        </trans-unit>
        <trans-unit id="0a61d9fe71ed76708341c4ca0d849865f0cdc3b4" translate="yes" xml:space="preserve">
          <source>is currently unused and ignored. In future it may be used to pass in information used to change the C indentation style used.] The best way to maintain consistency is to pass in a hash reference and let this function update it.</source>
          <target state="translated">は現在未使用で無視されています。将来的には、使用されるC言語のインデントスタイルを変更するために使用される情報を渡すために使用されるかもしれません。]一貫性を維持する最良の方法は、ハッシュ参照を渡して、この関数に更新させることです。</target>
        </trans-unit>
        <trans-unit id="9813a16c1f4cea91b9c2c265d663c4bd1846f7de" translate="yes" xml:space="preserve">
          <source>is currently unused and must be zero.</source>
          <target state="translated">は現在使用されておらず、ゼロでなければなりません。</target>
        </trans-unit>
        <trans-unit id="99e47089baf7bf5a97290b50bc31baafb3fecfdf" translate="yes" xml:space="preserve">
          <source>is currently unused and should always be 1.</source>
          <target state="translated">は現在未使用であり、常に1である必要があります。</target>
        </trans-unit>
        <trans-unit id="b13534eeb7da71e52262c98a8d8edf98962e5451" translate="yes" xml:space="preserve">
          <source>is data element containing a non-zero length sequence of Unicode characters, such as an ordinary Perl scalar that is not a reference.</source>
          <target state="translated">は、参照ではない通常のPerlスカラなどのUnicode文字の長さが0ではないシーケンスを含むデータ要素です。</target>
        </trans-unit>
        <trans-unit id="e342eb67743e357f6c505cac08784c21c4ae08f3" translate="yes" xml:space="preserve">
          <source>is dead simple: for given cross-architecture places in @INC a path where perl modules are, and right</source>
          <target state="translated">の中のクロスアーキテクチャの場所を指定して、Perl モジュールがあるパスを指定して、それを右クリックします。</target>
        </trans-unit>
        <trans-unit id="c705d4c7e0b74c44541c11aa71e1a8a9918a05c8" translate="yes" xml:space="preserve">
          <source>is defined as a fixed string that can appear at any point in a range of positions relative to the start of the match. For example,</source>
          <target state="translated">は、マッチの開始位置からの相対的な位置の範囲内の任意のポイントに出現する固定文字列として定義されています。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="ecb2ca25d83a1d9ea96055686343475429c34ffd" translate="yes" xml:space="preserve">
          <source>is defined as being a substring that must appear for the pattern to match. An</source>
          <target state="translated">は、パターンがマッチするために出現しなければならない部分文字列として定義されています。このように定義されています。</target>
        </trans-unit>
        <trans-unit id="1da1038b5104f0f95e494512f9adf3b8d6beaf10" translate="yes" xml:space="preserve">
          <source>is defined, such as when running under GNV bash.</source>
          <target state="translated">が定義されています。</target>
        </trans-unit>
        <trans-unit id="deb74afad5c0f4e11684626863d8cd55cb9bdeee" translate="yes" xml:space="preserve">
          <source>is defined, then it is used to avoid &lt;code&gt;memEQ&lt;/code&gt; for short names, or to generate a comment to highlight the position of the character in the &lt;code&gt;switch&lt;/code&gt; statement.</source>
          <target state="translated">が定義されている場合は、短い名前の &lt;code&gt;memEQ&lt;/code&gt; を回避したり、 &lt;code&gt;switch&lt;/code&gt; ステートメント内の文字の位置を強調するコメントを生成したりするために使用されます。</target>
        </trans-unit>
        <trans-unit id="991181f3df7a8cdf4f7168cba333bb5158ffb3d9" translate="yes" xml:space="preserve">
          <source>is delimited by bracketing quotes, the</source>
          <target state="translated">が括弧付き引用符で区切られている場合は</target>
        </trans-unit>
        <trans-unit id="0aab59497e397eb628c4ae4e65530bcc8256b5ef" translate="yes" xml:space="preserve">
          <source>is designed to test whether a particular code snippet has been compiled into an optree containing specified numbers of particular op types. This is good for testing whether optimisations which alter ops, such as converting an &lt;code&gt;aelem&lt;/code&gt; op into an &lt;code&gt;aelemfast&lt;/code&gt; op, are really doing that.</source>
          <target state="translated">特定のコードスニペットが特定の数の特定のopタイプを含むoptreeにコンパイルされているかどうかをテストするように設計されています。これは、このような変換として、ALTER OPS、最適化するかどうかをテストするための良いです &lt;code&gt;aelem&lt;/code&gt; にオペアンプを &lt;code&gt;aelemfast&lt;/code&gt; opが、本当にそれをやっています。</target>
        </trans-unit>
        <trans-unit id="416051867536031c9c339fabd2716eb40c91334e" translate="yes" xml:space="preserve">
          <source>is directed to &lt;b&gt;STDOUT&lt;/b&gt;, unlike the pragma.</source>
          <target state="translated">プラグマとは異なり、&lt;b&gt;STDOUTに送信さ&lt;/b&gt;れ&lt;b&gt;ます&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="f389ed13e5398ffea8962d2d53f906f7253260a8" translate="yes" xml:space="preserve">
          <source>is divided by</source>
          <target state="translated">で割ったもの</target>
        </trans-unit>
        <trans-unit id="9553c90ac38c53c0080494be25343dc34ae22d57" translate="yes" xml:space="preserve">
          <source>is effectively</source>
          <target state="translated">が事実上</target>
        </trans-unit>
        <trans-unit id="ece385103cfaafcb58ea7773e8fcd8d7dbbaada0" translate="yes" xml:space="preserve">
          <source>is empty (except under &lt;code&gt;/d&lt;/code&gt;) a copy of</source>
          <target state="translated">空（ &lt;code&gt;/d&lt;/code&gt; の下を除く）のコピー</target>
        </trans-unit>
        <trans-unit id="7e04d3b78941f3fdeb0448ff431b96dba09b96ba" translate="yes" xml:space="preserve">
          <source>is empty and &lt;code&gt;/d&lt;/code&gt; is not specified,</source>
          <target state="translated">空で &lt;code&gt;/d&lt;/code&gt; が指定されていない場合</target>
        </trans-unit>
        <trans-unit id="73b6c5e895538dd2917ae4f7b4e4274c97cfa6db" translate="yes" xml:space="preserve">
          <source>is empty if</source>
          <target state="translated">が空の場合</target>
        </trans-unit>
        <trans-unit id="f685ee609385b240742c6531d09c2e99375d25df" translate="yes" xml:space="preserve">
          <source>is empty). Note that this describes the contents of</source>
          <target state="translated">が空の場合)。の内容を記述していることに注意してください。</target>
        </trans-unit>
        <trans-unit id="4e0004ed8dd4179b363112c078cd201c9c2882f0" translate="yes" xml:space="preserve">
          <source>is empty, in which case</source>
          <target state="translated">が空の場合は</target>
        </trans-unit>
        <trans-unit id="c70ff529c1678e6d6f8a86a860dfe6b90b65a6d1" translate="yes" xml:space="preserve">
          <source>is empty, or is exactly one code with at least four hexdigits which can be used as an alternative case folding when the calling program cannot cope with the fold being a sequence of multiple code points. If</source>
          <target state="translated">が空であるか、 あるいは、 呼び出し側のプログラムが複数のコードポイントの連続した折り返しに対応できない場合の代替ケース折り返しとして用いることができる、少なくとも 4 桁の 16 進数を持つコードが正確に 1 つあります。もし</target>
        </trans-unit>
        <trans-unit id="b82f1aa4dc1e11bb0291658e76619710db88ea38" translate="yes" xml:space="preserve">
          <source>is empty, the</source>
          <target state="translated">が空の場合は</target>
        </trans-unit>
        <trans-unit id="0e207ae2f0db5023f32cc9020e3ddf2c71a2b3cc" translate="yes" xml:space="preserve">
          <source>is equal to the C variable &lt;code&gt;name&lt;/code&gt; . If</source>
          <target state="translated">C変数 &lt;code&gt;name&lt;/code&gt; と同じです。もし</target>
        </trans-unit>
        <trans-unit id="4c16753a387840a9ee2144b0a20669cf9bb9e296" translate="yes" xml:space="preserve">
          <source>is equal to the C variable &lt;code&gt;name&lt;/code&gt;. If</source>
          <target state="translated">C変数 &lt;code&gt;name&lt;/code&gt; と同じです。場合</target>
        </trans-unit>
        <trans-unit id="1ec285792f84b2006557cfe7a76ef03e4dffbd46" translate="yes" xml:space="preserve">
          <source>is equivalent to</source>
          <target state="translated">に相当します。</target>
        </trans-unit>
        <trans-unit id="bc2b09c98193f0e5662cbf8b53fad07d5e736c01" translate="yes" xml:space="preserve">
          <source>is equivalent to the following Perl-like pseudo code:</source>
          <target state="translated">は、以下のPerlのような疑似コードに相当します。</target>
        </trans-unit>
        <trans-unit id="32a86d7541273833cc59233715d55c78fd068962" translate="yes" xml:space="preserve">
          <source>is equivalent to the more verbose</source>
          <target state="translated">は、より冗長な</target>
        </trans-unit>
        <trans-unit id="058019ba79ba28b16d81510fd9c7be6426e9a31b" translate="yes" xml:space="preserve">
          <source>is equivalent to the original path for all systems but VMS.</source>
          <target state="translated">は、VMS を除くすべてのシステムで元のパスと同等です。</target>
        </trans-unit>
        <trans-unit id="8a799343991654a6923d4110f493e02c300d895c" translate="yes" xml:space="preserve">
          <source>is equivalent to this Perl code:</source>
          <target state="translated">はこのPerlのコードに相当します。</target>
        </trans-unit>
        <trans-unit id="5cffe5ee80305aeabc52048276f1acf872533639" translate="yes" xml:space="preserve">
          <source>is equivalent to this:</source>
          <target state="translated">がこれに相当します。</target>
        </trans-unit>
        <trans-unit id="18ab6ac7001b131bc4dc74bd619c612205dff372" translate="yes" xml:space="preserve">
          <source>is equivalent to:</source>
          <target state="translated">に相当します。</target>
        </trans-unit>
        <trans-unit id="6c01ad008c1dcafb297a57e15952c3a221508e1b" translate="yes" xml:space="preserve">
          <source>is evaluated in &lt;b&gt;list context&lt;/b&gt; and interpolated into the list value.</source>
          <target state="translated">&lt;b&gt;リストのコンテキストで&lt;/b&gt;評価され、リストの値に補間されます。</target>
        </trans-unit>
        <trans-unit id="304cd7bde8c8a066e9ddc11f5d17d8c69ab28cfc" translate="yes" xml:space="preserve">
          <source>is exactly equivalent to</source>
          <target state="translated">に正確に相当します。</target>
        </trans-unit>
        <trans-unit id="5868f5f052497727f3a75d03017159c24abf653a" translate="yes" xml:space="preserve">
          <source>is explicitly used, false if an external</source>
          <target state="translated">が明示的に使用されている場合は false、外部の</target>
        </trans-unit>
        <trans-unit id="9f231ca4498f5e3002502cfac3a6b5698c2f1ac4" translate="yes" xml:space="preserve">
          <source>is extracted and decoded for</source>
          <target state="translated">が抽出され、復号化されます。</target>
        </trans-unit>
        <trans-unit id="c507073afeb7ab580d7916aa3aef230ed3bfced7" translate="yes" xml:space="preserve">
          <source>is false then &lt;code&gt;decode&lt;/code&gt; should make a &quot;best effort&quot; to convert the string - for example by using Unicode's &quot;\x{FFFD}&quot; as a replacement character.</source>
          <target state="translated">falseの場合、 &lt;code&gt;decode&lt;/code&gt; は文字列を変換するために「ベストエフォート」を行う必要があります。たとえば、Unicodeの「\ x {FFFD}」を置換文字として使用します。</target>
        </trans-unit>
        <trans-unit id="66ef51ab90721c11c96b9fd1112297ae5c3bc612" translate="yes" xml:space="preserve">
          <source>is false then &lt;code&gt;encode&lt;/code&gt; MUST make a &quot;best effort&quot; to convert the string - for example, by using a replacement character.</source>
          <target state="translated">&lt;code&gt;encode&lt;/code&gt; がfalseの場合、文字列を変換するために「ベストエフォート」を行う必要があります。たとえば、置換文字を使用します。</target>
        </trans-unit>
        <trans-unit id="85c8ac4c204bffb12a6b2e5264aea8475c7fa00f" translate="yes" xml:space="preserve">
          <source>is false unless the old $x happened to have the value &lt;code&gt;123&lt;/code&gt; .</source>
          <target state="translated">古い$ xの値が &lt;code&gt;123&lt;/code&gt; でない限り、false です。</target>
        </trans-unit>
        <trans-unit id="afa41902fb53a4cb518998e8be7497e447dba317" translate="yes" xml:space="preserve">
          <source>is false unless the old $x happened to have the value &lt;code&gt;123&lt;/code&gt;.</source>
          <target state="translated">古い$ xの値が &lt;code&gt;123&lt;/code&gt; でない限り、はfalseです。</target>
        </trans-unit>
        <trans-unit id="7ae0382a345c84cdbea38f9aba32a26fd54a3d8e" translate="yes" xml:space="preserve">
          <source>is false, the</source>
          <target state="translated">が偽の場合は</target>
        </trans-unit>
        <trans-unit id="59641b07163bb2532f0e133b6081758f8b622aff" translate="yes" xml:space="preserve">
          <source>is find. The returned object is what does the actual encoding or decoding.</source>
          <target state="translated">はfindです。返されるオブジェクトは、実際にエンコードやデコードを行うものです。</target>
        </trans-unit>
        <trans-unit id="19134d8f14cf9efb45a39a603eab01b599496a36" translate="yes" xml:space="preserve">
          <source>is first looked up in the list of standard Unicode character names.</source>
          <target state="translated">は、標準 Unicode 文字名のリストで最初に検索されます。</target>
        </trans-unit>
        <trans-unit id="71ab071f15c3ed133ad091358be7c7aa667be620" translate="yes" xml:space="preserve">
          <source>is first off that it's not well abstracted -- these ways of testing for grammatical number (as in the expressions like &lt;code&gt;foo == 1 ? singular_form : plural_form&lt;/code&gt;) should be abstracted to each language module, since how you get grammatical number is language-specific.</source>
          <target state="translated">文法番号を取得する方法は言語固有であるため、文法番号をテストするこれらの方法（ &lt;code&gt;foo == 1 ? singular_form : plural_form&lt;/code&gt; などの式のように）は、各言語モジュールに抽象化する必要があります。 。</target>
        </trans-unit>
        <trans-unit id="28844e6770c7541b46bf5769a48ab89a32b3a220" translate="yes" xml:space="preserve">
          <source>is formatted as:</source>
          <target state="translated">としてフォーマットされています。</target>
        </trans-unit>
        <trans-unit id="a5bf27e9e737c2b17d8bda56643008ebf40f5d55" translate="yes" xml:space="preserve">
          <source>is found, &lt;code&gt;Z_OK&lt;/code&gt; is returned and &lt;code&gt;$buffer&lt;/code&gt; will be have all data up to the flush point removed. This can then be passed to the &lt;code&gt;deflate&lt;/code&gt; method.</source>
          <target state="translated">が見つかった場合、 &lt;code&gt;Z_OK&lt;/code&gt; が返され、 &lt;code&gt;$buffer&lt;/code&gt; はフラッシュポイントまでのすべてのデータが削除されます。次に、これを &lt;code&gt;deflate&lt;/code&gt; メソッドに渡すことができます。</target>
        </trans-unit>
        <trans-unit id="7b39d821e927a0c9d0363f2727cc57c75893ba1d" translate="yes" xml:space="preserve">
          <source>is found, &lt;code&gt;Z_OK&lt;/code&gt; is returned and &lt;code&gt;$input&lt;/code&gt; will be have all data up to the flush point removed. This data can then be passed to the &lt;code&gt;$i-&amp;gt;inflate&lt;/code&gt; method to be uncompressed.</source>
          <target state="translated">が見つかった場合、 &lt;code&gt;Z_OK&lt;/code&gt; が返され、 &lt;code&gt;$input&lt;/code&gt; はフラッシュポイントまでのすべてのデータが削除されます。次に、このデータを &lt;code&gt;$i-&amp;gt;inflate&lt;/code&gt; メソッドに渡して圧縮解除できます。</target>
        </trans-unit>
        <trans-unit id="4ad43a18a515527a341bfc4d3a6681a6fd357b43" translate="yes" xml:space="preserve">
          <source>is found, Perl will investigate its first line etc. The only hardwired limit on the recursion depth is implicit: there is a limit 4 on the number of additional arguments inserted before the actual arguments given to system(). In particular, if no additional arguments are specified on the &quot;magic&quot; first lines, then the limit on the depth is 4.</source>
          <target state="translated">が見つかった場合、Perl はその最初の行などを調査します。system()に与えられる実際の引数の前に挿入される追加引数の数には 4 という制限があります。特に、&quot;マジック &quot;の最初の行に追加の引数が指定されていない場合、深さの制限は 4 です。</target>
        </trans-unit>
        <trans-unit id="1f1b1a9afa41f162ae23bb3a01d9f047e652e6e1" translate="yes" xml:space="preserve">
          <source>is four characters, the first two are used as the left quote and the second two as the right quote.</source>
          <target state="translated">は4文字で、最初の2文字を左引用符、2文字を右引用符として使用します。</target>
        </trans-unit>
        <trans-unit id="6f9a16a4dd16d307d04182c223f1289cfcd07c67" translate="yes" xml:space="preserve">
          <source>is generated automatically from</source>
          <target state="translated">から自動的に生成されます。</target>
        </trans-unit>
        <trans-unit id="bd2a87dbabce881cfa0ac191619b95b7f30ff0e2" translate="yes" xml:space="preserve">
          <source>is generated by &lt;code&gt;ExtUtils::Miniperl&lt;/code&gt; from</source>
          <target state="translated">&lt;code&gt;ExtUtils::Miniperl&lt;/code&gt; によって生成されます</target>
        </trans-unit>
        <trans-unit id="97061dcc49398ed7873f16a75d7351365d5bd949" translate="yes" xml:space="preserve">
          <source>is greater than 10, the digit for 11 will be 'a', and so on. If</source>
          <target state="translated">が10より大きい場合、11の桁は「a」となります。もし</target>
        </trans-unit>
        <trans-unit id="c6cff08bd14f0967385302adf53b41c3a3d439b0" translate="yes" xml:space="preserve">
          <source>is greater than 36, the digit for 37 will be 'A', and so on until 62. Values greater than 62 are not currently supported. The default is 36.</source>
          <target state="translated">が 36 より大きい場合、37 の桁は 'A' となり、62 まで続きます。62より大きい値は現在サポートされていません。デフォルトは36です。</target>
        </trans-unit>
        <trans-unit id="ffe49080789a404d2d720870ea3296af02ff6123" translate="yes" xml:space="preserve">
          <source>is greater than zero then it gives the number of arguments passed to &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt;, otherwise it will be 1 if for example &lt;code&gt;PerlIO_open&lt;/code&gt; was called. In simple cases SvPV_nolen(*args) is the pathname to open.</source>
          <target state="translated">ゼロより大きい場合は、 &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; に渡される引数の数を示します。それ以外の場合は、たとえば &lt;code&gt;PerlIO_open&lt;/code&gt; が呼び出された場合は1になります。単純なケースでは、SvPV_nolen（* args）は開くパス名です。</target>
        </trans-unit>
        <trans-unit id="4754093f3c6b75d18a478a919f071927e6c272e9" translate="yes" xml:space="preserve">
          <source>is greater than zero then it gives the number of arguments passed to &lt;code&gt;open&lt;/code&gt;, otherwise it will be 1 if for example &lt;code&gt;PerlIO_open&lt;/code&gt; was called. In simple cases SvPV_nolen(*args) is the pathname to open.</source>
          <target state="translated">がゼロより大きい場合、 &lt;code&gt;open&lt;/code&gt; に渡される引数の数を示します。それ以外の場合、たとえば &lt;code&gt;PerlIO_open&lt;/code&gt; が呼び出された場合は1になります。単純なケースでは、SvPV_nolen（* args）が開くパス名です。</target>
        </trans-unit>
        <trans-unit id="75509d044fa7a263b125756d4990f3fd09e0200e" translate="yes" xml:space="preserve">
          <source>is heavily misused. See &lt;a href=&quot;#Microsoft-related-naming-mess&quot;&gt;&quot;Microsoft-related naming mess&quot;&lt;/a&gt; for details.</source>
          <target state="translated">ひどく誤用されています。詳細については、&lt;a href=&quot;#Microsoft-related-naming-mess&quot;&gt;「Microsoft関連の命名の混乱」&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="b7ead90991363b6d52dd34fbbeb13fb170062d0a" translate="yes" xml:space="preserve">
          <source>is held as bytes (both these states are 'consistent'). Main reason for this routine is to allow Perl's test suite to check that operations have left strings in a consistent state. You most probably want to use utf8::is_utf8() instead.</source>
          <target state="translated">はバイトとして保持されます(これらの状態はどちらも「一貫性のある」状態です)。このルーチンの主な理由は、Perl のテストスイートで、操作が文字列を一貫した状態で残しているかどうかをチェックできるようにするためです。代わりに utf8::is_utf8()を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="99859ea1e45df4af01935d0ae5ee93c488cd99e6" translate="yes" xml:space="preserve">
          <source>is held as bytes (both these states are 'consistent'). The main reason for this routine is to allow Perl's test suite to check that operations have left strings in a consistent state.</source>
          <target state="translated">はバイトとして保持されます(これらの状態はどちらも「一貫性のある」状態です)。このルーチンの主な理由は、Perl のテストスイートが、操作が文字列を一貫した状態で残しているかどうかをチェックできるようにするためです。</target>
        </trans-unit>
        <trans-unit id="f6524de4ede507c0f25877cf9853d0bde2075a2e" translate="yes" xml:space="preserve">
          <source>is hex, as in &lt;code&gt;E&amp;lt;0x201E&amp;gt;&lt;/code&gt; . A leading &quot;0&quot; means that</source>
          <target state="translated">&lt;code&gt;E&amp;lt;0x201E&amp;gt;&lt;/code&gt; ように16進数です。先頭の「0」は、</target>
        </trans-unit>
        <trans-unit id="100c67db2ce9de6539d13fc595494ff5673e34f7" translate="yes" xml:space="preserve">
          <source>is hex, as in &lt;code&gt;E&amp;lt;0x201E&amp;gt;&lt;/code&gt;. A leading &quot;0&quot; means that</source>
          <target state="translated">&lt;code&gt;E&amp;lt;0x201E&amp;gt;&lt;/code&gt; ように、16進数です。先頭の「0」は、</target>
        </trans-unit>
        <trans-unit id="ee2f8650f57b54260f06fc232faca4874614507a" translate="yes" xml:space="preserve">
          <source>is identical to</source>
          <target state="translated">と同じ</target>
        </trans-unit>
        <trans-unit id="33ce292cada47d9b4f97fc17d4c509c144c20fea" translate="yes" xml:space="preserve">
          <source>is ignored. Note that Perl closes the comment as soon as it sees a &lt;code&gt;&quot;)&quot;&lt;/code&gt;, so there is no way to put a literal &lt;code&gt;&quot;)&quot;&lt;/code&gt; in the comment. The pattern's closing delimiter must be escaped by a backslash if it appears in the comment.</source>
          <target state="translated">無視されます。Perlは &lt;code&gt;&quot;)&quot;&lt;/code&gt; 見つけるとすぐにコメントを閉じるので、コメントにリテラル &lt;code&gt;&quot;)&quot;&lt;/code&gt; を入れる方法がないことに注意してください。パターンの終了区切り文字がコメントに表示されている場合は、バックスラッシュでエスケープする必要があります。</target>
        </trans-unit>
        <trans-unit id="22ee8461739b14ea02f3b9c0b9c9eb44d2a1409e" translate="yes" xml:space="preserve">
          <source>is implemented as a Perl module. The structure of the module can take one of two broadly similar formats. To distinguish between them, the first will be referred to as</source>
          <target state="translated">は Perl モジュールとして実装されています。モジュールの構造は、大きく似た2つの形式のうちの1つを取ることができます。これらを区別するために、前者は</target>
        </trans-unit>
        <trans-unit id="07c03a77d7b0f8f284ba5164822d35886ef6b131" translate="yes" xml:space="preserve">
          <source>is implemented using the Perl module &lt;a href=&quot;Digest::SHA&quot;&gt;Digest::SHA&lt;/a&gt;.</source>
          <target state="translated">Perlモジュール&lt;a href=&quot;Digest::SHA&quot;&gt;Digest :: SHA&lt;/a&gt;を使用して実装されます。</target>
        </trans-unit>
        <trans-unit id="b176c796440a7e55c89af58d299f53bc936cfeff" translate="yes" xml:space="preserve">
          <source>is implemented using the Perl module &lt;a href=&quot;digest/sha&quot;&gt;Digest::SHA&lt;/a&gt; or &lt;a href=&quot;http://search.cpan.org/perldoc/Digest::SHA::PurePerl&quot;&gt;Digest::SHA::PurePerl&lt;/a&gt;.</source>
          <target state="translated">Perlモジュール&lt;a href=&quot;digest/sha&quot;&gt;Digest :: SHA&lt;/a&gt;または&lt;a href=&quot;http://search.cpan.org/perldoc/Digest::SHA::PurePerl&quot;&gt;Digest :: SHA :: PurePerl&lt;/a&gt;を使用して実装されます。</target>
        </trans-unit>
        <trans-unit id="b1e051efb59784127a6ed01a9c76c742681c671e" translate="yes" xml:space="preserve">
          <source>is implemented, but bugs remain in &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//i&lt;/a&gt;&lt;/code&gt; with them, mostly fixed by 5.14, and essentially entirely by 5.18.</source>
          <target state="translated">は実装されていますが、バグは &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//i&lt;/a&gt;&lt;/code&gt; に残り、主に5.14で修正され、本質的には完全に5.18で修正されています。</target>
        </trans-unit>
        <trans-unit id="70175b089d3ce91e22a54a3705d3023f43c9dad9" translate="yes" xml:space="preserve">
          <source>is implemented, but bugs remain in &lt;code&gt;qr//i&lt;/code&gt; with them, mostly fixed by 5.14, and essentially entirely by 5.18.</source>
          <target state="translated">は実装されていますが、バグは &lt;code&gt;qr//i&lt;/code&gt; 残っており、ほとんどが5.14で修正され、基本的には5.18で完全に修正されています。</target>
        </trans-unit>
        <trans-unit id="608c8bcda4c8d3f4fd99afdca20fc7d478aadc35" translate="yes" xml:space="preserve">
          <source>is implied if neither a template nor a directory are supplied.</source>
          <target state="translated">はテンプレートもディレクトリも与えられていない場合に暗黙の了解を得ています。</target>
        </trans-unit>
        <trans-unit id="bcc50f34cae614239688b16d2d430f20f6fd5c0f" translate="yes" xml:space="preserve">
          <source>is in a consistent state regarding UTF-8. Will return true if it is well-formed Perl extended UTF-8 and has the UTF-8 flag on &lt;b&gt;or&lt;/b&gt; if</source>
          <target state="translated">UTF-8に関して一貫した状態にあります。整形式のPerl拡張UTF-8であり、UTF-8フラグがオンになっている場合、&lt;b&gt;または&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="029ccc41ee21c1341d1578997e21239d4d69dd57" translate="yes" xml:space="preserve">
          <source>is in a consistent state regarding UTF-8. Will return true if it is well-formed UTF-8 and has the UTF-8 flag on &lt;b&gt;or&lt;/b&gt; if</source>
          <target state="translated">UTF-8に関して一貫した状態にあります。整形式のUTF-8であり、UTF-8フラグがオンになっている場合、&lt;b&gt;または&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="6da1d29c95b983c26f31a22e5a9c05d88563966c" translate="yes" xml:space="preserve">
          <source>is in effect:</source>
          <target state="translated">が有効になっています。</target>
        </trans-unit>
        <trans-unit id="fca20ec285ed27cbaefdb07ee844b5ac0358c904" translate="yes" xml:space="preserve">
          <source>is in fact</source>
          <target state="translated">実のところ</target>
        </trans-unit>
        <trans-unit id="e384cbeffbac9cd924ef4dc73d622e1a5322584a" translate="yes" xml:space="preserve">
          <source>is in the customary packed binary format used for Perl strings.</source>
          <target state="translated">は、Perlの文字列で使用される慣習的なパックされたバイナリ形式です。</target>
        </trans-unit>
        <trans-unit id="cac7c1be39dca233019b8ffda50806e1b4a70009" translate="yes" xml:space="preserve">
          <source>is included. Other possible values include</source>
          <target state="translated">が含まれています。他の可能な値は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="5138f4117c88d0c0de8e325485d990c34725fde1" translate="yes" xml:space="preserve">
          <source>is intended to rhyme with</source>
          <target state="translated">韻を踏む</target>
        </trans-unit>
        <trans-unit id="18bc197f96cca45c02a3aaa837ac2696dd0f97ab" translate="yes" xml:space="preserve">
          <source>is interpolated in the usual way. Something like &lt;code&gt;&quot;\Q\\E&quot;&lt;/code&gt; has no &lt;code&gt;\E&lt;/code&gt; inside. Instead, it has &lt;code&gt;\Q&lt;/code&gt; , &lt;code&gt;\\&lt;/code&gt; , and &lt;code&gt;E&lt;/code&gt; , so the result is the same as for &lt;code&gt;&quot;\\\\E&quot;&lt;/code&gt; . As a general rule, backslashes between &lt;code&gt;\Q&lt;/code&gt; and &lt;code&gt;\E&lt;/code&gt; may lead to counterintuitive results. So, &lt;code&gt;&quot;\Q\t\E&quot;&lt;/code&gt; is converted to &lt;code&gt;&lt;a href=&quot;functions/quotemeta&quot;&gt;quotemeta(&quot;\t&quot;)&lt;/a&gt;&lt;/code&gt;, which is the same as &lt;code&gt;&quot;\\\t&quot;&lt;/code&gt; (since TAB is not alphanumeric). Note also that:</source>
          <target state="translated">通常の方法で補間されます。 &lt;code&gt;&quot;\Q\\E&quot;&lt;/code&gt; ようなものには、 &lt;code&gt;\E&lt;/code&gt; がありません。代わりに、 &lt;code&gt;\Q&lt;/code&gt; 、 &lt;code&gt;\\&lt;/code&gt; 、および &lt;code&gt;E&lt;/code&gt; があるため、結果は &lt;code&gt;&quot;\\\\E&quot;&lt;/code&gt; 場合と同じです。一般的な規則として、 &lt;code&gt;\Q&lt;/code&gt; と &lt;code&gt;\E&lt;/code&gt; 間のバックスラッシュは、直感に反する結果をもたらす可能性があります。したがって、 &lt;code&gt;&quot;\Q\t\E&quot;&lt;/code&gt; は &lt;code&gt;&lt;a href=&quot;functions/quotemeta&quot;&gt;quotemeta(&quot;\t&quot;)&lt;/a&gt;&lt;/code&gt; に変換されます。これは &lt;code&gt;&quot;\\\t&quot;&lt;/code&gt; と同じです（TABは英数字ではないため）。次の点にも注意してください。</target>
        </trans-unit>
        <trans-unit id="31fb03493019bfae8aa64999e7f6f61ce490e803" translate="yes" xml:space="preserve">
          <source>is interpolated in the usual way. Something like &lt;code&gt;&quot;\Q\\E&quot;&lt;/code&gt; has no &lt;code&gt;\E&lt;/code&gt; inside. Instead, it has &lt;code&gt;\Q&lt;/code&gt;, &lt;code&gt;\\&lt;/code&gt;, and &lt;code&gt;E&lt;/code&gt;, so the result is the same as for &lt;code&gt;&quot;\\\\E&quot;&lt;/code&gt;. As a general rule, backslashes between &lt;code&gt;\Q&lt;/code&gt; and &lt;code&gt;\E&lt;/code&gt; may lead to counterintuitive results. So, &lt;code&gt;&quot;\Q\t\E&quot;&lt;/code&gt; is converted to &lt;code&gt;quotemeta(&quot;\t&quot;)&lt;/code&gt;, which is the same as &lt;code&gt;&quot;\\\t&quot;&lt;/code&gt; (since TAB is not alphanumeric). Note also that:</source>
          <target state="translated">通常の方法で補間されます。 &lt;code&gt;&quot;\Q\\E&quot;&lt;/code&gt; ようなものには &lt;code&gt;\E&lt;/code&gt; がありません。代わりに、 &lt;code&gt;\Q&lt;/code&gt; 、 &lt;code&gt;\\&lt;/code&gt; 、および &lt;code&gt;E&lt;/code&gt; があるため、結果は &lt;code&gt;&quot;\\\\E&quot;&lt;/code&gt; 場合と同じになります。原則として、 &lt;code&gt;\Q&lt;/code&gt; と &lt;code&gt;\E&lt;/code&gt; 間の円記号は、直感に反する結果につながる可能性があります。したがって、 &lt;code&gt;&quot;\Q\t\E&quot;&lt;/code&gt; は &lt;code&gt;quotemeta(&quot;\t&quot;)&lt;/code&gt; に変換されます。これは、 &lt;code&gt;&quot;\\\t&quot;&lt;/code&gt; と同じです（TABは英数字ではないため）。また、次の点にも注意してください。</target>
        </trans-unit>
        <trans-unit id="77a8d3d60ed8be450c9ffcc1d60689ed94aa9704" translate="yes" xml:space="preserve">
          <source>is interpolated the same way as</source>
          <target state="translated">と同じように補間されます。</target>
        </trans-unit>
        <trans-unit id="6645e23e420237e998b6d2cedfb1dc6622827f9f" translate="yes" xml:space="preserve">
          <source>is interpreted as being in decimal, as in &lt;code&gt;E&amp;lt;181&amp;gt;&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;E&amp;lt;181&amp;gt;&lt;/code&gt; ように、10進数であると解釈されます。</target>
        </trans-unit>
        <trans-unit id="98bf4bfd28f59f24101e071587a5c8dd53b50979" translate="yes" xml:space="preserve">
          <source>is interpreted as being in decimal, as in &lt;code&gt;E&amp;lt;181&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;E&amp;lt;181&amp;gt;&lt;/code&gt; ように、10進数として解釈されます。</target>
        </trans-unit>
        <trans-unit id="22c75022beb252e282558c71e996793c6d980a55" translate="yes" xml:space="preserve">
          <source>is invalid as</source>
          <target state="translated">として無効</target>
        </trans-unit>
        <trans-unit id="978c80f8c20bca3e22e221d3be8dab86be1b9e67" translate="yes" xml:space="preserve">
          <source>is invalid as extended UTF-8, returns false; otherwise returns true.</source>
          <target state="translated">が拡張 UTF-8 として無効な場合は false を返し、そうでない場合は true を返します。</target>
        </trans-unit>
        <trans-unit id="e8ffd60ca890c4ec9f93077049a6c161e0914d97" translate="yes" xml:space="preserve">
          <source>is invoked to create right</source>
          <target state="translated">が呼び出されて、右</target>
        </trans-unit>
        <trans-unit id="29af8a8fa79689fd5e71210eb1c3ba564cdffa85" translate="yes" xml:space="preserve">
          <source>is invoked, which in turn steps in</source>
          <target state="translated">が起動され、これにより</target>
        </trans-unit>
        <trans-unit id="8024fe02e8834fd7dfaf462c19e06613de45d183" translate="yes" xml:space="preserve">
          <source>is irrelevant. This can lead to different results on EBCDIC systems if</source>
          <target state="translated">は無関係です。これは、以下の場合、EBCDICシステム上で異なる結果をもたらす可能性があります。</target>
        </trans-unit>
        <trans-unit id="cfee822da79f87e0f9bf29a70b1f7e186da8af5d" translate="yes" xml:space="preserve">
          <source>is just a funny way to write</source>
          <target state="translated">はおかしな書き方をしているだけ</target>
        </trans-unit>
        <trans-unit id="b044360009bd48fa7435baabf472b05cb3e2087e" translate="yes" xml:space="preserve">
          <source>is just an alias for</source>
          <target state="translated">の別名に過ぎません。</target>
        </trans-unit>
        <trans-unit id="a1bbe39e9abe31cecf6dbbe9e345b36bee6a8e2e" translate="yes" xml:space="preserve">
          <source>is just one code point, then</source>
          <target state="translated">が1つのコードポイントであることを示します。</target>
        </trans-unit>
        <trans-unit id="fb4747d98d1d42af6b094401a12cd8de28b86f5d" translate="yes" xml:space="preserve">
          <source>is kept open without a name while the output is redirected to a new file with the original</source>
          <target state="translated">を持つ新しいファイルにリダイレクトされます。</target>
        </trans-unit>
        <trans-unit id="f2943b59aed5e708de53a3b73d4947169b635ec4" translate="yes" xml:space="preserve">
          <source>is largely like</source>
          <target state="translated">のようなものです。</target>
        </trans-unit>
        <trans-unit id="9188ab140ad2e7ca45c0eacb2137ae4084f8e251" translate="yes" xml:space="preserve">
          <source>is latitude (northward positive, southward negative) and</source>
          <target state="translated">は緯度(北上正、南下負)であり</target>
        </trans-unit>
        <trans-unit id="9f6334181abd08a5e5386bd949a39504d56e205a" translate="yes" xml:space="preserve">
          <source>is like</source>
          <target state="translated">のようなものです。</target>
        </trans-unit>
        <trans-unit id="48ed010598288313ecc15c5c568a57c8a8397db8" translate="yes" xml:space="preserve">
          <source>is like &lt;code&gt;&quot;s&quot;&lt;/code&gt; in that all the map array elements are scalars, but here they are restricted to all being integers, and some have to be adjusted (hence the name &lt;code&gt;&quot;a&quot;&lt;/code&gt; ) to get the correct result. For example, in:</source>
          <target state="translated">すべてのマップ配列要素がスカラーであるという点で &lt;code&gt;&quot;s&quot;&lt;/code&gt; に似ていますが、ここではすべて整数であることに制限されており、正しい結果を得るために一部を調整する必要があります（したがって &lt;code&gt;&quot;a&quot;&lt;/code&gt; という名前）。たとえば、次の場所にあります。</target>
        </trans-unit>
        <trans-unit id="bc9f8bc9dc1087217b95e295664446d7d71bf4dd" translate="yes" xml:space="preserve">
          <source>is like &lt;code&gt;&quot;s&quot;&lt;/code&gt; in that all the map array elements are scalars, but here they are restricted to all being integers, and some have to be adjusted (hence the name &lt;code&gt;&quot;a&quot;&lt;/code&gt;) to get the correct result. For example, in:</source>
          <target state="translated">すべてのマップ配列要素がスカラーであるという点で &lt;code&gt;&quot;s&quot;&lt;/code&gt; に似ていますが、ここではすべてが整数であることに制限されており、正しい結果を得るには一部を調整する必要があります（したがって &lt;code&gt;&quot;a&quot;&lt;/code&gt; という名前）。例：</target>
        </trans-unit>
        <trans-unit id="f732dd47aa6f4ff2876b84adc0d6e54cc3222968" translate="yes" xml:space="preserve">
          <source>is like doing this:</source>
          <target state="translated">をするようなものです。</target>
        </trans-unit>
        <trans-unit id="59b5273750d4d23e41112610a3e421f40227d715" translate="yes" xml:space="preserve">
          <source>is linked into the pad, and its &lt;code&gt;CvOUTSIDE&lt;/code&gt; link to the outer scope is weakened to avoid a reference loop.</source>
          <target state="translated">はパッドにリンクされており、外部スコープへの &lt;code&gt;CvOUTSIDE&lt;/code&gt; リンクは、参照ループを回避するために弱められています。</target>
        </trans-unit>
        <trans-unit id="f78b503f16d85a9efd1beacafcdfdaf3f270807f" translate="yes" xml:space="preserve">
          <source>is located in</source>
          <target state="translated">に位置しています。</target>
        </trans-unit>
        <trans-unit id="2381acfde135496b849a6639e2a3a9ace4912ebe" translate="yes" xml:space="preserve">
          <source>is longer than</source>
          <target state="translated">よりも長い</target>
        </trans-unit>
        <trans-unit id="fa07b54f5a9fd2750d4f4d0986e9e9fdb812fef7" translate="yes" xml:space="preserve">
          <source>is longitude (eastward positive, westward negative).</source>
          <target state="translated">は経度(東進正、西進負)です。</target>
        </trans-unit>
        <trans-unit id="8e42e7821439f1d14a05038b954f5c84e7ed25c3" translate="yes" xml:space="preserve">
          <source>is looked up as a letter in script</source>
          <target state="translated">が文字として調べられます。</target>
        </trans-unit>
        <trans-unit id="23d3623b010595cc8c5feb367b1a6439f9e480b5" translate="yes" xml:space="preserve">
          <source>is looked up as a letter in the given scripts (in the specified order). Customized aliases can override these, and are explained in &lt;a href=&quot;#CUSTOM-ALIASES&quot;&gt;&quot;CUSTOM ALIASES&quot;&lt;/a&gt;.</source>
          <target state="translated">指定されたスクリプトで（指定された順序で）文字として検索されます。カスタマイズされたエイリアスはこれらを上書きできます。これについては、&lt;a href=&quot;#CUSTOM-ALIASES&quot;&gt;「カスタムエイリアス」で&lt;/a&gt;説明しています。</target>
        </trans-unit>
        <trans-unit id="cb4ca3c72721f7c4253dd2277262b9ddc4ed46e6" translate="yes" xml:space="preserve">
          <source>is looked up as a letter in the given scripts (in the specified order). Customized aliases can override these, and are explained in &lt;a href=&quot;#CUSTOM-ALIASES&quot;&gt;CUSTOM ALIASES&lt;/a&gt;.</source>
          <target state="translated">与えられたスクリプト内の文字として（指定された順序で）検索されます。カスタマイズされたエイリアスはこれらを上書きすることができ、&lt;a href=&quot;#CUSTOM-ALIASES&quot;&gt;カスタムエイリアスで&lt;/a&gt;説明されています。</target>
        </trans-unit>
        <trans-unit id="65a9de9318bd902cd3babdefa5b0b92ad233e720" translate="yes" xml:space="preserve">
          <source>is made active via fork()/exec(), which may lead to some resources taken from the system (even if we do not count extra work needed for fork()ing).</source>
          <target state="translated">が fork()/exec()経由でアクティブになると、システムからリソースを奪うことになるかもしれません (たとえ fork()ing のために必要な余分な作業をカウントしていなくても)。</target>
        </trans-unit>
        <trans-unit id="239548bf60aa08580ca32f625ff4309e8f81b542" translate="yes" xml:space="preserve">
          <source>is made equivalent to</source>
          <target state="translated">に相当するものとします。</target>
        </trans-unit>
        <trans-unit id="781a822c527885056dc9a4258a0d224cfae25b42" translate="yes" xml:space="preserve">
          <source>is marked internally as encoded in UTF-8. Functionally the same as &lt;code&gt;Encode::is_utf8($string)&lt;/code&gt;.</source>
          <target state="translated">UTF-8でエンコードされているものとして内部的にマークされています。機能的には &lt;code&gt;Encode::is_utf8($string)&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="70f7caafd49cafb298f6bed5bd8a09a8a7b6e1f0" translate="yes" xml:space="preserve">
          <source>is marked internally as encoded in UTF-8. Functionally the same as Encode::is_utf8().</source>
          <target state="translated">は内部的に UTF-8 でエンコードされているとマークされます。機能的には Encode::is_utf8()と同じです。</target>
        </trans-unit>
        <trans-unit id="cafeb6d4161aa2a759fa9cb04517c81a82e79352" translate="yes" xml:space="preserve">
          <source>is merely a shortcut for</source>
          <target state="translated">のショートカットに過ぎません。</target>
        </trans-unit>
        <trans-unit id="cc1707c0c187b01916ee3df94ec53bf20d5e805b" translate="yes" xml:space="preserve">
          <source>is mirrored in bidirectional text</source>
          <target state="translated">は双方向テキストでミラーリングされています。</target>
        </trans-unit>
        <trans-unit id="80b4dc3a4ba493fe50483b5139574f0e60c29253" translate="yes" xml:space="preserve">
          <source>is missing.</source>
          <target state="translated">が欠落しています。</target>
        </trans-unit>
        <trans-unit id="2ed56127ce2edce69beb7e4554959d32a6773da2" translate="yes" xml:space="preserve">
          <source>is more appropriate. The process of converting the complex number into a string that can be displayed is known as</source>
          <target state="translated">の方が適切です。複素数を表示可能な文字列に変換する処理は</target>
        </trans-unit>
        <trans-unit id="f33e4ba19768d6d155cead381f0c8a3d5242ab10" translate="yes" xml:space="preserve">
          <source>is more sophisticated, and uses the &lt;a href=&quot;Test::Harness&quot;&gt;Test::Harness&lt;/a&gt; module, thus using this test target supposes that perl mostly works. The main advantage for our purposes is that it prints a detailed summary of failed tests at the end. Also, unlike</source>
          <target state="translated">はより洗練されており、&lt;a href=&quot;Test::Harness&quot;&gt;Test :: Harness&lt;/a&gt;モジュールを使用しているため、このテストターゲットを使用すると、perlがほとんど機能すると想定されます。私たちの目的の主な利点は、失敗したテストの詳細な要約を最後に出力することです。また、とは異なり</target>
        </trans-unit>
        <trans-unit id="df959619050e76c8841c515d15b08c043ee77963" translate="yes" xml:space="preserve">
          <source>is more sophisticated, and uses the &lt;a href=&quot;test/harness&quot;&gt;Test::Harness&lt;/a&gt; module, thus using this test target supposes that perl mostly works. The main advantage for our purposes is that it prints a detailed summary of failed tests at the end. Also, unlike</source>
          <target state="translated">より洗練されていて、&lt;a href=&quot;test/harness&quot;&gt;Test :: Harness&lt;/a&gt;モジュールを使用しているため、このテストターゲットを使用すると、perlがほとんど機能すると想定されます。私たちの目的の主な利点は、失敗したテストの詳細な概要を最後に出力することです。また、とは異なり</target>
        </trans-unit>
        <trans-unit id="0858c3a91f7c4ca07fe54237280827493469443b" translate="yes" xml:space="preserve">
          <source>is more than just a C header. It's also a Perl script that can check your source code. It will suggest hints and portability notes, and can even make suggestions on how to change your code. You can run it like any other Perl program:</source>
          <target state="translated">は単なる C ヘッダではありません。また、ソースコードをチェックするPerlスクリプトでもあります。ヒントや移植性に関する注意点を提案し、コードを変更する方法を提案することもできます。他の Perl プログラムと同じように実行することができます。</target>
        </trans-unit>
        <trans-unit id="358c18d547b6b98a5467b302d5e5feebc4911872" translate="yes" xml:space="preserve">
          <source>is mounted as a tmpfs in Android, but it's only accessible to root.</source>
          <target state="translated">はAndroidではtmpfsとしてマウントされていますが、rootからしかアクセスできません。</target>
        </trans-unit>
        <trans-unit id="73b99ca814cd9f3692bee8c058c4c6db3425b4f7" translate="yes" xml:space="preserve">
          <source>is much more memory-efficient than either</source>
          <target state="translated">は、どちらかの</target>
        </trans-unit>
        <trans-unit id="f364fbd6a7a0be0bd077f092be562b8bbd3797f6" translate="yes" xml:space="preserve">
          <source>is needed to get through the test suite.</source>
          <target state="translated">はテストスイートを通過するために必要です。</target>
        </trans-unit>
        <trans-unit id="6a14b970b88d3b4ba0134624be5559b774fcc9e5" translate="yes" xml:space="preserve">
          <source>is needed.</source>
          <target state="translated">が必要です。</target>
        </trans-unit>
        <trans-unit id="9d94e3f31359c70b6973e6ab915dd0761fd3dfe4" translate="yes" xml:space="preserve">
          <source>is never checked (so if it does not exists when its content is needed, the user of %hash may be confused).</source>
          <target state="translated">は決してチェックされません (そのため、その内容が必要なときに存在しない場合、%hash のユーザは混乱する可能性があります)。</target>
        </trans-unit>
        <trans-unit id="d1c931dd86f631640926b9290e424da1679547cd" translate="yes" xml:space="preserve">
          <source>is non-&lt;code&gt;NULL&lt;/code&gt; , it will be set to a pointer to the frame for the sub call itself.</source>
          <target state="translated">非ある &lt;code&gt;NULL&lt;/code&gt; 、それはサブコール自体のフレームへのポインタに設定されます。</target>
        </trans-unit>
        <trans-unit id="3fce8d03a657c1af890c2d2106c221fba0c0c421" translate="yes" xml:space="preserve">
          <source>is non-&lt;code&gt;NULL&lt;/code&gt;, it will be set to a pointer to the frame for the sub call itself.</source>
          <target state="translated">&lt;code&gt;NULL&lt;/code&gt; 以外の場合、サブコール自体のフレームへのポインタに設定されます。</target>
        </trans-unit>
        <trans-unit id="5e581b526692a62a2e9311d15e92a68ee14d4cf1" translate="yes" xml:space="preserve">
          <source>is non-null, it supplies the name of a label to attach to the state op; this function takes ownership of the memory pointed at by</source>
          <target state="translated">が非 null である場合、状態 op にアタッチするラベルの名前を指定します。</target>
        </trans-unit>
        <trans-unit id="10e7f3d3e39943812d42aa325a0624806d73fc1d" translate="yes" xml:space="preserve">
          <source>is non-null, it's a lexical reference to a package variable, and this identifies the package. The following flags can be OR'ed together:</source>
          <target state="translated">が非 null である場合は、パッケージ変数への字句参照であり、 パッケージを識別します。以下のフラグは OR を併用することができます。</target>
        </trans-unit>
        <trans-unit id="6de6591eb61d37cb2280e26d54c5fd16117e3fea" translate="yes" xml:space="preserve">
          <source>is non-null, the name is for a typed lexical, and this identifies the type. If</source>
          <target state="translated">が非 null である場合、その名前は型付き語彙のためのものであり、これは型を識別します。もし</target>
        </trans-unit>
        <trans-unit id="57de99dddfaf807ff4ccc5d2881dd47c080db528" translate="yes" xml:space="preserve">
          <source>is non-zero then</source>
          <target state="translated">がゼロでない場合</target>
        </trans-unit>
        <trans-unit id="e82fdbe87df063bbd6188f48b5ff47c8f53b5e5b" translate="yes" xml:space="preserve">
          <source>is not</source>
          <target state="translated">ではない</target>
        </trans-unit>
        <trans-unit id="2442a9efabb42df6d9155ee7e736901c656341f1" translate="yes" xml:space="preserve">
          <source>is not &lt;code&gt;NULL&lt;/code&gt; then this is a &lt;code&gt;PerlIO_reopen&lt;/code&gt; . Perl itself does not use this (yet?) and semantics are a little vague.</source>
          <target state="translated">&lt;code&gt;NULL&lt;/code&gt; ではない場合、これは &lt;code&gt;PerlIO_reopen&lt;/code&gt; です。Perl自体はこれを（まだ？）使用しておらず、セマンティクスは少しあいまいです。</target>
        </trans-unit>
        <trans-unit id="bff8411311655b1e8fdaf7d34b9f954e18cc2169" translate="yes" xml:space="preserve">
          <source>is not &lt;code&gt;NULL&lt;/code&gt; then this is a &lt;code&gt;PerlIO_reopen&lt;/code&gt;. Perl itself does not use this (yet?) and semantics are a little vague.</source>
          <target state="translated">&lt;code&gt;NULL&lt;/code&gt; でない場合、これは &lt;code&gt;PerlIO_reopen&lt;/code&gt; です。Perl自体はこれを（まだ？）使用せず、セマンティクスは少しあいまいです。</target>
        </trans-unit>
        <trans-unit id="5dbf0d4a2783568bc0ec6653623e5d748ba64d73" translate="yes" xml:space="preserve">
          <source>is not NULL. Since we don't have to check the NULLness, it's faster and smaller.</source>
          <target state="translated">はNULLではありません。NULLであるかどうかをチェックする必要がないので、その方が早くて小さいです。</target>
        </trans-unit>
        <trans-unit id="09afe42e6e5a8f0e386f1909d4abd2a189d4f310" translate="yes" xml:space="preserve">
          <source>is not NULL. The macro doesn't need to return a meaningful value, or check for NULLness, so it's smaller and faster.</source>
          <target state="translated">が NULL ではないことを示しています。マクロは意味のある値を返したり、NULLであるかどうかをチェックしたりする必要がないので、小さくて速いです。</target>
        </trans-unit>
        <trans-unit id="1ffb843df2c6536477027470d90d6811acce8f6a" translate="yes" xml:space="preserve">
          <source>is not a directory that you can chdir to, possibly because it doesn't exist.</source>
          <target state="translated">はchdirできるディレクトリではありません。</target>
        </trans-unit>
        <trans-unit id="cd05864506055467d4c1543f9ab79897eee73f31" translate="yes" xml:space="preserve">
          <source>is not a full pathname found in the values of %INC, it is considered a regex.</source>
          <target state="translated">が %INC の値で見つかったフル・パス名ではない場合、正規表現とみなされます。</target>
        </trans-unit>
        <trans-unit id="ca37ad081732791ac7c3c488d1b688611146a3d5" translate="yes" xml:space="preserve">
          <source>is not a multiple of 8, use the</source>
          <target state="translated">が8の倍数でない場合は</target>
        </trans-unit>
        <trans-unit id="90cfc06661f28638ad5685d595f94c84092a1299" translate="yes" xml:space="preserve">
          <source>is not a reference, it is &lt;code&gt;&lt;a href=&quot;../functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;-ed in order to allow &lt;code&gt;$1&lt;/code&gt; etc. to be substituted. The example is one way to alias names as used in X11 fonts to the MIME names for the iso-8859-* family. Note the double quotes inside the single quotes.</source>
          <target state="translated">は参照ではありません。 &lt;code&gt;$1&lt;/code&gt; などを置換できるように &lt;code&gt;&lt;a href=&quot;../functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; れます。この例は、X11フォントで使用されている名前をiso-8859- *ファミリのMIME名にエイリアスする1つの方法です。一重引用符内の二重引用符に注意してください。</target>
        </trans-unit>
        <trans-unit id="a9c6e7fca8b5f6aaf0da90eaa8eaed0488b9b48f" translate="yes" xml:space="preserve">
          <source>is not a reference, it is &lt;code&gt;eval&lt;/code&gt;-ed in order to allow &lt;code&gt;$1&lt;/code&gt; etc. to be substituted. The example is one way to alias names as used in X11 fonts to the MIME names for the iso-8859-* family. Note the double quotes inside the single quotes.</source>
          <target state="translated">は参照ではなく、 &lt;code&gt;$1&lt;/code&gt; などを置き換えるために &lt;code&gt;eval&lt;/code&gt; れます。この例は、X11フォントで使用されている名前をiso-8859- *ファミリのMIME名にエイリアスする1つの方法です。一重引用符内の二重引用符に注意してください。</target>
        </trans-unit>
        <trans-unit id="cc27d44385271fc935f660f9829b5e1b57bf2fba" translate="yes" xml:space="preserve">
          <source>is not a string.</source>
          <target state="translated">は文字列ではありません。</target>
        </trans-unit>
        <trans-unit id="fe97c6a25e6e10b05fea34af623f7790fa5fba36" translate="yes" xml:space="preserve">
          <source>is not a string. Do not treat the return value as indicative of success or failure, because that isn't what it means: it is only the previous setting.</source>
          <target state="translated">は文字列ではありません。戻り値を成功か失敗かを示すものとして扱わないでください。</target>
        </trans-unit>
        <trans-unit id="da2c1159c594f4eb414e53a0a7777f80e553cdef" translate="yes" xml:space="preserve">
          <source>is not allowed, but</source>
          <target state="translated">は許されませんが</target>
        </trans-unit>
        <trans-unit id="606701e8f5f91b1f859064528c6c90e0850405fe" translate="yes" xml:space="preserve">
          <source>is not already a list of the right type, it will be upgraded into one. If either</source>
          <target state="translated">が正しいタイプのリストになっていない場合は、そのリストにアップグレードされます。どちらかの</target>
        </trans-unit>
        <trans-unit id="8d605d2cddd686b63627dcedefd81881d4aede9c" translate="yes" xml:space="preserve">
          <source>is not available.</source>
          <target state="translated">は利用できません。</target>
        </trans-unit>
        <trans-unit id="0e07acfe6e445415bc80f4539e83f2e5479627c6" translate="yes" xml:space="preserve">
          <source>is not defined, then Perl defaults to consulting first the logical name tables specified by</source>
          <target state="translated">が定義されていない場合は、Perlはデフォルトで最初に</target>
        </trans-unit>
        <trans-unit id="3b35dc3fb767643d25e161d97495375b6c8925d3" translate="yes" xml:space="preserve">
          <source>is not empty, and it is the same as</source>
          <target state="translated">が空ではないこと、そして</target>
        </trans-unit>
        <trans-unit id="1cbcac909d1c387e8efb1acded1650390530508f" translate="yes" xml:space="preserve">
          <source>is not entirely like</source>
          <target state="translated">とは言い切れない</target>
        </trans-unit>
        <trans-unit id="133cd8c37eb7f1bc84f3898facc206421e336545" translate="yes" xml:space="preserve">
          <source>is not found in any of $lh's %Lexicon hashes. What happens if a key is not found, is discussed in a later section, &quot;Controlling Lookup Failure&quot;.</source>
          <target state="translated">が $lh の %Lexicon ハッシュのいずれにも見つかりません。キーが見つからなかった場合の動作については、後述のセクション &quot;検索失敗の制御&quot; で説明します。</target>
        </trans-unit>
        <trans-unit id="20608bdf427071b3f2b3bc63e3ca5ad5dba32b48" translate="yes" xml:space="preserve">
          <source>is not found, then Perl looks for an executable</source>
          <target state="translated">が見つからなかった場合、Perl は実行可能な</target>
        </trans-unit>
        <trans-unit id="33010be083ed65d0281dbcb74bf9325a0f99e09d" translate="yes" xml:space="preserve">
          <source>is not given, skip all constants that are defined in a C enumeration. Otherwise skip only those constants that are defined in an enum whose name matches</source>
          <target state="translated">が与えられていない場合は、Cの列挙で定義されているすべての定数をスキップします。それ以外の場合は、名前が</target>
        </trans-unit>
        <trans-unit id="3339d9443dad98ccb99bf9de00b6ef263750537d" translate="yes" xml:space="preserve">
          <source>is not in PERL5LIB.</source>
          <target state="translated">はperl5libにはありません。</target>
        </trans-unit>
        <trans-unit id="9f927c9a4957d812fc4759d501d906c99ea5fd83" translate="yes" xml:space="preserve">
          <source>is not intended for day to day use.</source>
          <target state="translated">は、日常的な使用を目的としたものではありません。</target>
        </trans-unit>
        <trans-unit id="9ee2f3e24f21d916d1b9f7d8d204a62832704191" translate="yes" xml:space="preserve">
          <source>is not necessary,</source>
          <target state="translated">は必要ありません。</target>
        </trans-unit>
        <trans-unit id="3f84e0c82fe1616e060e2332dff93b4abd3bb7e3" translate="yes" xml:space="preserve">
          <source>is not ok, as the regex engine will end up trying to compile the pattern &lt;code&gt;\&lt;/code&gt; , which it will consider a syntax error.</source>
          <target state="translated">正規表現エンジンはパターン &lt;code&gt;\&lt;/code&gt; をコンパイルしようとするため、問題があります。構文エラーと見なされます。</target>
        </trans-unit>
        <trans-unit id="27c74416088f6638da450b44615dbb85e7f94331" translate="yes" xml:space="preserve">
          <source>is not ok, as the regex engine will end up trying to compile the pattern &lt;code&gt;\&lt;/code&gt;, which it will consider a syntax error.</source>
          <target state="translated">正規表現エンジンがパターン &lt;code&gt;\&lt;/code&gt; をコンパイルしようとするため、問題があります。これにより、構文エラーが考慮されます。</target>
        </trans-unit>
        <trans-unit id="1de141eaa0f30aab49d63c7c0d6cb5d7b40c44a8" translate="yes" xml:space="preserve">
          <source>is not passed if the layer is at the bottom of the stack, for this reason and to maintain some level of &quot;compatibility&quot; with TIEHANDLE classes it is passed last.</source>
          <target state="translated">この理由と、TIEHANDLEクラスとの &quot;互換性 &quot;をある程度維持するために、スタックの最下層にある場合は最後に渡されます。</target>
        </trans-unit>
        <trans-unit id="14ca5e3fc9da5c9523747e734197510c25796d8c" translate="yes" xml:space="preserve">
          <source>is not portable. Leave out the last comma.</source>
          <target state="translated">はポータブルではありません。最後のカンマは省いてください。</target>
        </trans-unit>
        <trans-unit id="f5ac0afcf1f3987905381d9349d990f0a6872ecc" translate="yes" xml:space="preserve">
          <source>is not required and not implemented.</source>
          <target state="translated">は必須ではなく、実装されていません。</target>
        </trans-unit>
        <trans-unit id="a84d2a687efa541d6d1b4959faac7bd7c4ea571d" translate="yes" xml:space="preserve">
          <source>is not responsible for triggering the automounts, mirror mounts, and the contents of network mounted filesystems. If your NFS implementation requires an action to be performed on the filesystem in order for</source>
          <target state="translated">は、オートマウント、ミラーマウント、ネットワークマウントされたファイルシステムのコンテンツをトリガする責任を負いません。NFS の実装で、ファイルシステム上でアクションを実行して</target>
        </trans-unit>
        <trans-unit id="99b85944e7c82cf4f25341c2b9e580202334841c" translate="yes" xml:space="preserve">
          <source>is not returned explicitly from &lt;a href=&quot;#unpack-TEMPLATE%2CEXPR&quot;&gt;&lt;code&gt;unpack&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#unpack-TEMPLATE%2CEXPR&quot;&gt; &lt;code&gt;unpack&lt;/code&gt; &lt;/a&gt;から明示的に返されることはありません。</target>
        </trans-unit>
        <trans-unit id="a5cf5f3c675f9c2d68cf66e1262d7c525fab832d" translate="yes" xml:space="preserve">
          <source>is not returned explicitly from &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; から明示的に返されません。</target>
        </trans-unit>
        <trans-unit id="461edf58bab13d0e289e3fd343d9a0a8b3513001" translate="yes" xml:space="preserve">
          <source>is not returned explicitly from &lt;code&gt;&lt;a href=&quot;unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; から明示的に返されません。</target>
        </trans-unit>
        <trans-unit id="0d97eb902a0ef031b420e6b9b05fccbf862f0b26" translate="yes" xml:space="preserve">
          <source>is not specified: &lt;b&gt;xsubpp&lt;/b&gt; can see that it needs to generate a function call section, and will autogenerate the OUTPUT section too. Thus one can shortcut the XSUB to become:</source>
          <target state="translated">指定されていません：&lt;b&gt;xsubpp&lt;/b&gt;は、関数呼び出しセクションを生成する必要があることを確認でき、OUTPUTセクションも自動生成します。したがって、XSUBを次のようにショートカットできます。</target>
        </trans-unit>
        <trans-unit id="46d1ac57316dccf7b303f8434af4c18ee03b0a0b" translate="yes" xml:space="preserve">
          <source>is not supported).</source>
          <target state="translated">はサポートされていません)。</target>
        </trans-unit>
        <trans-unit id="660e55295ec134f5c48bc724bc723675d1a1b8fd" translate="yes" xml:space="preserve">
          <source>is not the same as</source>
          <target state="translated">とは違います。</target>
        </trans-unit>
        <trans-unit id="c20017ff75bdfb50ee3a50480bd863b1895d08c4" translate="yes" xml:space="preserve">
          <source>is not transparent. The</source>
          <target state="translated">は透明ではありません。には、そのようなことはありません。</target>
        </trans-unit>
        <trans-unit id="a2f7dc60b1a7a427469f140199570b1bd8f899c4" translate="yes" xml:space="preserve">
          <source>is not yet implemented (dummy function). (Perl has a workaround.)</source>
          <target state="translated">はまだ実装されていません(ダミー関数)。(Perlには回避策があります)。</target>
        </trans-unit>
        <trans-unit id="8e0d75ab66ac6c358071d7ce5aa3ae1d338105d6" translate="yes" xml:space="preserve">
          <source>is nothing to worry about at all.</source>
          <target state="translated">は全く気にすることはありません。</target>
        </trans-unit>
        <trans-unit id="7206590a99801f0070757ea643074d99c5330488" translate="yes" xml:space="preserve">
          <source>is now different from</source>
          <target state="translated">とは異なるものになりました。</target>
        </trans-unit>
        <trans-unit id="296c2ce8ed25f67f0112e54c6f7348b8ee269520" translate="yes" xml:space="preserve">
          <source>is now misinterpreted as</source>
          <target state="translated">と誤解されるようになりました。</target>
        </trans-unit>
        <trans-unit id="784e257d270f346aebf3530a8118df2e3e970f3c" translate="yes" xml:space="preserve">
          <source>is null, the other is returned unchanged.</source>
          <target state="translated">がnullの場合、もう一方は変更されずに返されます。</target>
        </trans-unit>
        <trans-unit id="1cd25b0094b3720a6cc3ba23740121d376548889" translate="yes" xml:space="preserve">
          <source>is null, the state op is returned. Otherwise the state op is combined with</source>
          <target state="translated">がnullの場合は、state opが返されます。それ以外の場合は</target>
        </trans-unit>
        <trans-unit id="1d68b011b191ec267b84e6cf126a36f11ba536d2" translate="yes" xml:space="preserve">
          <source>is obvious (hopefully).</source>
          <target state="translated">は明白です(願わくば)。</target>
        </trans-unit>
        <trans-unit id="bfd34bbffb3bec2ae854bed4fe93b5b4df09d7c5" translate="yes" xml:space="preserve">
          <source>is octal, as in &lt;code&gt;E&amp;lt;075&amp;gt;&lt;/code&gt; . Otherwise</source>
          <target state="translated">&lt;code&gt;E&amp;lt;075&amp;gt;&lt;/code&gt; ように、8進数です。さもないと</target>
        </trans-unit>
        <trans-unit id="fe02a88840a8ededb2434f59dfd68088c0cd21a9" translate="yes" xml:space="preserve">
          <source>is octal, as in &lt;code&gt;E&amp;lt;075&amp;gt;&lt;/code&gt;. Otherwise</source>
          <target state="translated">&lt;code&gt;E&amp;lt;075&amp;gt;&lt;/code&gt; ように、8進数です。そうでなければ</target>
        </trans-unit>
        <trans-unit id="e59f8572639c6d7abe84f59ed23f115265c34830" translate="yes" xml:space="preserve">
          <source>is officially available in gcc 3.0 and later. You can build a profiled version of</source>
          <target state="translated">は正式には gcc 3.0 以降で利用可能です。のプロファイル化されたバージョンをビルドすることができます。</target>
        </trans-unit>
        <trans-unit id="bb3335ba98001fe8c8858bb517435edad14df2ff" translate="yes" xml:space="preserve">
          <source>is often the quickest way to compute SHA message digests. The user simply feeds data to the script through files or standard input, and then collects the results from standard output.</source>
          <target state="translated">は、SHA メッセージダイジェストを計算する最も迅速な方法であることが多い。ユーザーは、ファイルまたは標準入力を介してスクリプトにデータを入力し、標準出力から結果を収集します。</target>
        </trans-unit>
        <trans-unit id="7c869452ca51dc4f4b90e7e682e32efa15fa5d08" translate="yes" xml:space="preserve">
          <source>is often used interchangeably with it.</source>
          <target state="translated">はそれと互換的に使われることが多いです。</target>
        </trans-unit>
        <trans-unit id="5031d72b525717047dc6fd15f90430cc40172acd" translate="yes" xml:space="preserve">
          <source>is omitted,</source>
          <target state="translated">が省略されています。</target>
        </trans-unit>
        <trans-unit id="59383e02842c6ecb450610847b00c5496ed1ae05" translate="yes" xml:space="preserve">
          <source>is omitted, list them all.</source>
          <target state="translated">が省略されている場合は、すべてリストアップしてください。</target>
        </trans-unit>
        <trans-unit id="bed8ec63611bd49c0e67878865bfd9f59745945e" translate="yes" xml:space="preserve">
          <source>is omitted, set an action on the line about to be executed. The sequence of steps taken by the debugger is</source>
          <target state="translated">が省略された場合は、実行しようとしている行にアクションを設定します。デバッガが実行するステップのシーケンスは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="1454936324f5b838ad8702f3a4e912fdb73181b3" translate="yes" xml:space="preserve">
          <source>is omitted, sets &lt;code&gt;$\&lt;/code&gt; to the current value of &lt;code&gt;$/&lt;/code&gt; . For instance, to trim lines to 80 columns:</source>
          <target state="translated">省略した場合、 &lt;code&gt;$\&lt;/code&gt; を &lt;code&gt;$/&lt;/code&gt; 現在の値に設定します。たとえば、行を80列にトリミングするには：</target>
        </trans-unit>
        <trans-unit id="f15097fec3faa213d8bc8ca132410a2097fe3c76" translate="yes" xml:space="preserve">
          <source>is omitted, sets &lt;code&gt;$\&lt;/code&gt; to the current value of &lt;code&gt;$/&lt;/code&gt;. For instance, to trim lines to 80 columns:</source>
          <target state="translated">省略し、 &lt;code&gt;$\&lt;/code&gt; を現在の &lt;code&gt;$/&lt;/code&gt; 値に設定します。たとえば、行を80列にトリミングするには：</target>
        </trans-unit>
        <trans-unit id="4bb3e6d01d8abb5873707a404b01ed088d627c52" translate="yes" xml:space="preserve">
          <source>is omitted. If that viewer is &lt;b&gt;man&lt;/b&gt;, the current &lt;code&gt;Config&lt;/code&gt; information is used to invoke &lt;b&gt;man&lt;/b&gt; using the proper MANPATH or &lt;b&gt;-M&lt;/b&gt;</source>
          <target state="translated">省略されます。そのビューアが&lt;b&gt;manの&lt;/b&gt;場合、現在の &lt;code&gt;Config&lt;/code&gt; 情報を使用して、適切なMANPATHまたは&lt;b&gt;-M&lt;/b&gt;を使用して&lt;b&gt;man&lt;/b&gt;を呼び出します。&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="808a9a0b7d1e742f272682180efba6d96e49b61e" translate="yes" xml:space="preserve">
          <source>is one of &lt;code&gt;S_IRUSR&lt;/code&gt; , &lt;code&gt;S_IWUSR&lt;/code&gt; or &lt;code&gt;S_IXUSR&lt;/code&gt; from the &lt;a href=&quot;../fcntl&quot;&gt;Fcntl&lt;/a&gt; module, and</source>
          <target state="translated">一つである &lt;code&gt;S_IRUSR&lt;/code&gt; 、 &lt;code&gt;S_IWUSR&lt;/code&gt; 又は &lt;code&gt;S_IXUSR&lt;/code&gt; から&lt;a href=&quot;../fcntl&quot;&gt;をFcntl&lt;/a&gt;モジュール、及び</target>
        </trans-unit>
        <trans-unit id="fad8df70cf47730e906eb199d90ce1f372f822ee" translate="yes" xml:space="preserve">
          <source>is one of &lt;code&gt;S_IRUSR&lt;/code&gt;, &lt;code&gt;S_IWUSR&lt;/code&gt; or &lt;code&gt;S_IXUSR&lt;/code&gt; from the &lt;a href=&quot;fcntl&quot;&gt;Fcntl&lt;/a&gt; module, and</source>
          <target state="translated">一つである &lt;code&gt;S_IRUSR&lt;/code&gt; 、 &lt;code&gt;S_IWUSR&lt;/code&gt; 又は &lt;code&gt;S_IXUSR&lt;/code&gt; から&lt;a href=&quot;fcntl&quot;&gt;をFcntl&lt;/a&gt;モジュール、及び</target>
        </trans-unit>
        <trans-unit id="774717fd7c9c7ce3270b72d058c209e6053fc8a0" translate="yes" xml:space="preserve">
          <source>is one of the 10 exceptional cases (or things like them) listed below, it is used directly as a boolean.</source>
          <target state="translated">が以下の10の例外的なケース(またはそのようなもの)のうちの1つである場合、ブーリアンとして直接使用されます。</target>
        </trans-unit>
        <trans-unit id="c53bf86436bbbd29af464847d3f11c3b0b08cbf8" translate="yes" xml:space="preserve">
          <source>is one of those defined in the Unicode standard. For Unicode 5.1, they are defined in Section 3.13 &lt;code&gt;Default Case Operations&lt;/code&gt; available at &lt;a href=&quot;http://www.unicode.org/versions/Unicode5.1.0/&quot;&gt;http://www.unicode.org/versions/Unicode5.1.0/&lt;/a&gt;. These are for context-sensitive casing.</source>
          <target state="translated">Unicode標準で定義されているものの1つです。Unicode 5.1の場合、これらはセクション3.13 &lt;a href=&quot;http://www.unicode.org/versions/Unicode5.1.0/&quot;&gt;http://www.unicode.org/versions/Unicode5.1.0/にある&lt;/a&gt; &lt;code&gt;Default Case Operations&lt;/code&gt; 定義されています。これらは、状況依存の大文字小文字変換用です。</target>
        </trans-unit>
        <trans-unit id="46999b0d232f9079ca49c913290f8a6285537b88" translate="yes" xml:space="preserve">
          <source>is only present if it is a true value; it is not present if it is a false value. It is shown in the above example to illustrate where the attribute is (in the &lt;b&gt;closing&lt;/b&gt; tag). It signifies that the &lt;code&gt;=over&lt;/code&gt; did not have a matching &lt;code&gt;=back&lt;/code&gt;, and thus Pod::Simple had to create a fake closer.</source>
          <target state="translated">真の値である場合にのみ存在します。偽の値の場合は存在しません。上記の例では、属性が（&lt;b&gt;終了&lt;/b&gt;タグ内で）どこにあるかを示しています。これは、 &lt;code&gt;=over&lt;/code&gt; に一致する &lt;code&gt;=back&lt;/code&gt; がなかったことを意味します。したがって、Pod :: Simpleは偽のクローザーを作成する必要がありました。</target>
        </trans-unit>
        <trans-unit id="840b280f15a6b38ff8c9a2baa67e8c9188a87b38" translate="yes" xml:space="preserve">
          <source>is open, or use &quot;r+&quot; to indicate a read/write stream.</source>
          <target state="translated">がオープンされているか、または読み書きストリームを示すために &quot;r+&quot; を使用します。</target>
        </trans-unit>
        <trans-unit id="c683506eb9e31819d71640bdc2f2478d3f6ce65d" translate="yes" xml:space="preserve">
          <source>is opened for writing.</source>
          <target state="translated">は書き込み用に開放されています。</target>
        </trans-unit>
        <trans-unit id="79749dba2b390bb7475fce2507f0f4eb5987e332" translate="yes" xml:space="preserve">
          <source>is optional and defaults to rest of the array.</source>
          <target state="translated">はオプションで、デフォルトは配列の残りの部分です。</target>
        </trans-unit>
        <trans-unit id="915a141436744a90f3e02d0dd1d609a72b2c593a" translate="yes" xml:space="preserve">
          <source>is optional and defaults to zero, negative values count back from the end of the array.</source>
          <target state="translated">負の値は配列の末尾からカウントバックします。</target>
        </trans-unit>
        <trans-unit id="df5063ae13199d816cf6966e77f57c23f1e15e7b" translate="yes" xml:space="preserve">
          <source>is optional, make sure that this switch is followed by at least one other switch if you omit</source>
          <target state="translated">を省略した場合は、このスイッチの後に少なくとも他のスイッチが続くことを確認してください。</target>
        </trans-unit>
        <trans-unit id="6dd01b70fcde3901a9b8cd6f99e52b559931ae66" translate="yes" xml:space="preserve">
          <source>is optional.</source>
          <target state="translated">は任意です。</target>
        </trans-unit>
        <trans-unit id="5f44d0432bafb77afd6de54efc51c632eefb0c70" translate="yes" xml:space="preserve">
          <source>is optional. If omitted, the encoding specified in the environment variable &lt;a href=&quot;perlrun#PERL_ENCODING&quot;&gt;&lt;code&gt;PERL_ENCODING&lt;/code&gt;&lt;/a&gt; is used. If this isn't set, or the resolved-to encoding is not known to &lt;code&gt;&lt;a href=&quot;encode&quot;&gt;Encode&lt;/a&gt;&lt;/code&gt;, the error &lt;code&gt;Unknown encoding '&lt;i&gt;ENCNAME&lt;/i&gt;'&lt;/code&gt; will be thrown.</source>
          <target state="translated">オプションです。省略した場合、環境変数&lt;a href=&quot;perlrun#PERL_ENCODING&quot;&gt; &lt;code&gt;PERL_ENCODING&lt;/code&gt; で&lt;/a&gt;指定されたエンコーディングが使用されます。これが設定、または解決-にエンコードされていない場合には知られていない &lt;code&gt;&lt;a href=&quot;encode&quot;&gt;Encode&lt;/a&gt;&lt;/code&gt; 、エラー &lt;code&gt;Unknown encoding '&lt;i&gt;ENCNAME&lt;/i&gt;'&lt;/code&gt; スローされます。</target>
        </trans-unit>
        <trans-unit id="d3403c1182056f32036e1b0b051b43fe6e7e8805" translate="yes" xml:space="preserve">
          <source>is optional. If omitted, the encoding specified in the environment variable &lt;a href=&quot;perlrun#PERL_ENCODING&quot;&gt;PERL_ENCODING &lt;/a&gt; is used. If this isn't set, or the resolved-to encoding is not known to &lt;code&gt;&lt;a href=&quot;encode&quot;&gt;Encode&lt;/a&gt;&lt;/code&gt;, the error &lt;code&gt;Unknown encoding '&lt;i&gt;ENCNAME&lt;/i&gt;'&lt;/code&gt; will be thrown.</source>
          <target state="translated">オプションです。省略した場合、環境変数&lt;a href=&quot;perlrun#PERL_ENCODING&quot;&gt;PERL_ENCODINGで&lt;/a&gt;指定されたエンコーディングが使用されます。これが設定されていない場合、または &lt;code&gt;Unknown encoding '&lt;i&gt;ENCNAME&lt;/i&gt;'&lt;/code&gt; -toエンコーディングが &lt;code&gt;&lt;a href=&quot;encode&quot;&gt;Encode&lt;/a&gt;&lt;/code&gt; に&lt;i&gt;認識さ&lt;/i&gt;れていない場合は、不明なエンコーディング ' &lt;i&gt;ENCNAME&lt;/i&gt; 'のエラーがスローされます。</target>
        </trans-unit>
        <trans-unit id="7f6b85ab8249cd41acb9f4dacc2aa8bb59cb055e" translate="yes" xml:space="preserve">
          <source>is passed through unchanged. Every other character in the target string is replaced by the character in</source>
          <target state="translated">は変更されずに渡されます。ターゲット文字列の他のすべての文字は</target>
        </trans-unit>
        <trans-unit id="460daaa5dcc2cb35dc81c46bff6ccd69c45e1b70" translate="yes" xml:space="preserve">
          <source>is passed to &lt;code&gt;SvPV_flags&lt;/code&gt; , and usually should be &lt;code&gt;SV_GMAGIC|SV_CONST_RETURN&lt;/code&gt; to handle magic.</source>
          <target state="translated">は &lt;code&gt;SvPV_flags&lt;/code&gt; に渡され、通常、マジックを処理するには &lt;code&gt;SV_GMAGIC|SV_CONST_RETURN&lt;/code&gt; なければなりません。</target>
        </trans-unit>
        <trans-unit id="dd20141170d229f9cc0136383909cd4f633a749b" translate="yes" xml:space="preserve">
          <source>is passed to the RE engine for compilation.</source>
          <target state="translated">はコンパイルのためにREエンジンに渡されます。</target>
        </trans-unit>
        <trans-unit id="a9eb96dfee227401a57fda9e8cbf3aa10f225974" translate="yes" xml:space="preserve">
          <source>is platform specific and may not be available for a specific port of Perl.</source>
          <target state="translated">はプラットフォーム固有のものであり、Perlの特定のポートでは利用できない場合があります。</target>
        </trans-unit>
        <trans-unit id="25efb0ba5cb2478bde4a9a44864c9da4f454d8ed" translate="yes" xml:space="preserve">
          <source>is possible</source>
          <target state="translated">あり得る</target>
        </trans-unit>
        <trans-unit id="523f09771ac3cf4731742b1c80be3d254a1ba53f" translate="yes" xml:space="preserve">
          <source>is preceded by a plus or minus sign then it is assumed to be relative, with negative numbers indicating preceding capture groups and positive ones following. Thus &lt;code&gt;(?-1)&lt;/code&gt; refers to the most recently declared group, and &lt;code&gt;(?+1)&lt;/code&gt; indicates the next group to be declared. Note that the counting for relative recursion differs from that of relative backreferences, in that with recursion unclosed groups &lt;b&gt;are&lt;/b&gt; included.</source>
          <target state="translated">の前にプラス記号またはマイナス記号が付いている場合は、相対であると見なされ、負の数は先行するキャプチャグループを示し、正の数は後続のキャプチャグループを示します。したがって、 &lt;code&gt;(?-1)&lt;/code&gt; は最後に宣言されたグループを指し、 &lt;code&gt;(?+1)&lt;/code&gt; は宣言される次のグループを示します。再帰では、閉じられていないグループ&lt;b&gt;が&lt;/b&gt;含まれるという点で、相対再帰のカウントは相対後方参照のカウントとは異なることに注意してください。</target>
        </trans-unit>
        <trans-unit id="e7ca6ab06ff93674a9f398734b75e0712f956c08" translate="yes" xml:space="preserve">
          <source>is preferred over the system malloc. Otherwise the value is null. This variable is intended for generating Makefiles.</source>
          <target state="translated">はシステムmallocよりも優先されます。それ以外の場合はnullとなります。この変数はMakefileを生成するためのものです。</target>
        </trans-unit>
        <trans-unit id="bd9425232ec1477789dd62e49cd5398771156271" translate="yes" xml:space="preserve">
          <source>is preferred over the system malloc. Otherwise the value is null. This variable is intended for generating Makefiles. See mallocsrc.</source>
          <target state="translated">はシステムmallocよりも優先されます。それ以外の場合はnullとなります。この変数はMakefileを生成するためのものです。mallocsrc を参照してください。</target>
        </trans-unit>
        <trans-unit id="f67f67cd9d10cfa55835748252e70c39d94e9642" translate="yes" xml:space="preserve">
          <source>is present but is not a positive number matching &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/\A(\d*\.)?\d+\z/&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">は存在しますが、 &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/\A(\d*\.)?\d+\z/&lt;/a&gt;&lt;/code&gt; 一致する正の数ではありません。</target>
        </trans-unit>
        <trans-unit id="bd365fc9fe0333ab83bb615fa7f93e06ad6ed7a2" translate="yes" xml:space="preserve">
          <source>is present but is not a positive number matching &lt;code&gt;m/\A(\d*\.)?\d+\z/&lt;/code&gt;.</source>
          <target state="translated">は存在しますが、 &lt;code&gt;m/\A(\d*\.)?\d+\z/&lt;/code&gt; 一致する正の数ではありません。</target>
        </trans-unit>
        <trans-unit id="cd6cfac1ce57b9138644859e222534e07b64b3f7" translate="yes" xml:space="preserve">
          <source>is present in EMX, but is not functional, it is emulated by perl. To disable the emulations, set environment variable &lt;code&gt;USE_PERL_FLOCK=0&lt;/code&gt; .</source>
          <target state="translated">EMXには存在しますが、機能しません。perlによってエミュレートされます。エミュレーションを無効にするには、環境変数 &lt;code&gt;USE_PERL_FLOCK=0&lt;/code&gt; を設定します。</target>
        </trans-unit>
        <trans-unit id="0eb8a82dec3aea4891c7d0fdc7c4040cbf80deac" translate="yes" xml:space="preserve">
          <source>is present. On Unix, this means that &lt;code&gt;$no_file&lt;/code&gt; true makes this return ( '', $path, '' ).</source>
          <target state="translated">存在します。Unixでは、これは &lt;code&gt;$no_file&lt;/code&gt; trueの場合、この戻り値（ ''、$ path、 ''）になることを意味します。</target>
        </trans-unit>
        <trans-unit id="fae39eb0e249041dca8ecd4c4e5c73741b3158c8" translate="yes" xml:space="preserve">
          <source>is printed with proper indentation.</source>
          <target state="translated">は適切なインデントで印刷されています。</target>
        </trans-unit>
        <trans-unit id="f9b801d1d0e729e303069ae25d8e485d81ece8ba" translate="yes" xml:space="preserve">
          <source>is probably overkill for this. Something as simple as a &lt;code&gt;#define&lt;/code&gt; will do too:</source>
          <target state="translated">これはおそらくやり過ぎです。 &lt;code&gt;#define&lt;/code&gt; と同じくらい簡単なことも行います：</target>
        </trans-unit>
        <trans-unit id="c75e0ceb23f1e1bd5d1ae898ae5b3a046e750c35" translate="yes" xml:space="preserve">
          <source>is processed before processing &lt;code&gt;PERLDB_OPTS&lt;/code&gt; . If</source>
          <target state="translated">&lt;code&gt;PERLDB_OPTS&lt;/code&gt; を処理する前に処理されます。もし</target>
        </trans-unit>
        <trans-unit id="482ce49dac3933ef7fa12709fa6946f186102e44" translate="yes" xml:space="preserve">
          <source>is processed before processing &lt;code&gt;PERLDB_OPTS&lt;/code&gt;. If</source>
          <target state="translated">&lt;code&gt;PERLDB_OPTS&lt;/code&gt; を処理する前に処理されます。場合</target>
        </trans-unit>
        <trans-unit id="fb129770ffa29193e010768c405bf02edb41dff2" translate="yes" xml:space="preserve">
          <source>is put into the special variable &lt;code&gt;$^R&lt;/code&gt;. This happens immediately, so &lt;code&gt;$^R&lt;/code&gt; can be used from other &lt;code&gt;(?{ &lt;i&gt;code&lt;/i&gt; })&lt;/code&gt; assertions inside the same regular expression.</source>
          <target state="translated">特別な変数 &lt;code&gt;$^R&lt;/code&gt; 入れられます。これはすぐに発生するため、同じ正規表現内の他の &lt;code&gt;(?{ &lt;i&gt;code&lt;/i&gt; })&lt;/code&gt; &lt;i&gt;code&lt;/i&gt; }）アサーションから &lt;code&gt;$^R&lt;/code&gt; を使用できます。&lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="b4b3055c13bff351645ff02c1ef815e8f59e24dd" translate="yes" xml:space="preserve">
          <source>is replaced by a copy of</source>
          <target state="translated">のコピーに置き換えられます。</target>
        </trans-unit>
        <trans-unit id="dd2e5ec393361241bdf00bf003cfd5d912213a01" translate="yes" xml:space="preserve">
          <source>is replicated. This latter is useful for counting characters in a class or for squashing character sequences in a class.</source>
          <target state="translated">が複製されます。この後者は、クラス内の文字をカウントしたり、クラス内の文字列を潰したりするのに便利です。</target>
        </trans-unit>
        <trans-unit id="5127b5091f9438f482f3b3e9a135487ed542c34c" translate="yes" xml:space="preserve">
          <source>is reported by mkmanifest() if $Verbose is set and a file is added to MANIFEST. $Verbose is set to 1 by default.</source>
          <target state="translated">Verbose が設定されていて MANIFEST にファイルが追加された場合、 mkmanifest()によって報告されます。</target>
        </trans-unit>
        <trans-unit id="bb20d2b460123fa620831fa74f056496b2769aa8" translate="yes" xml:space="preserve">
          <source>is reported if &lt;code&gt;MANIFEST&lt;/code&gt; could not be opened.</source>
          <target state="translated">&lt;code&gt;MANIFEST&lt;/code&gt; を開けなかった場合に報告されます。</target>
        </trans-unit>
        <trans-unit id="328906540cfc4914dc5ef9e9058dee50029d2b82" translate="yes" xml:space="preserve">
          <source>is reported if a file is found which is not in &lt;code&gt;MANIFEST&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;MANIFEST&lt;/code&gt; にないファイルが見つかった場合に報告されます。</target>
        </trans-unit>
        <trans-unit id="3db98ea93193d29fbff0e4bcd5b2bb22fa139f95" translate="yes" xml:space="preserve">
          <source>is reported if a file is found which is not in &lt;code&gt;MANIFEST&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MANIFEST&lt;/code&gt; にないファイルが見つかった場合に報告されます。</target>
        </trans-unit>
        <trans-unit id="552d792cd22a56b9bb40ff5d893f66da4e73233e" translate="yes" xml:space="preserve">
          <source>is reported if a file is skipped due to an entry in &lt;code&gt;MANIFEST.SKIP&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;MANIFEST.SKIP&lt;/code&gt; のエントリが原因でファイルがスキップされた場合に報告されます。</target>
        </trans-unit>
        <trans-unit id="b536a99212e85223be7d6610ec90733acc984cd7" translate="yes" xml:space="preserve">
          <source>is reported if a file is skipped due to an entry in &lt;code&gt;MANIFEST.SKIP&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MANIFEST.SKIP&lt;/code&gt; のエントリが原因でファイルがスキップされた場合に報告されます。</target>
        </trans-unit>
        <trans-unit id="aeed03f4804268d15748142d4e8831e16972eca4" translate="yes" xml:space="preserve">
          <source>is reported if a file mentioned in a &lt;code&gt;MANIFEST&lt;/code&gt; file does not exist.</source>
          <target state="translated">&lt;code&gt;MANIFEST&lt;/code&gt; ファイルに記載されているファイルが存在しない場合に報告されます。</target>
        </trans-unit>
        <trans-unit id="62f90f7410ef6025437546070986df3097b81356" translate="yes" xml:space="preserve">
          <source>is requested, Perl will not look for</source>
          <target state="translated">が要求された場合、Perl は</target>
        </trans-unit>
        <trans-unit id="732d7871b8b24cfa3bee53313dd1156e83c03669" translate="yes" xml:space="preserve">
          <source>is required if you want to start your program without a VIO window present, but not &lt;code&gt;detach&lt;/code&gt; ed (run &lt;code&gt;help detach&lt;/code&gt; for more info). Very useful for extensions which use PM, like &lt;code&gt;Perl/Tk&lt;/code&gt; or &lt;code&gt;OpenGL&lt;/code&gt; .</source>
          <target state="translated">VIOウィンドウを表示せずに &lt;code&gt;detach&lt;/code&gt; ed（詳細は &lt;code&gt;help detach&lt;/code&gt; を実行）せずにプログラムを起動する場合に必要です。 &lt;code&gt;Perl/Tk&lt;/code&gt; や &lt;code&gt;OpenGL&lt;/code&gt; など、PMを使用する拡張機能に非常に役立ちます。</target>
        </trans-unit>
        <trans-unit id="28489f990792ce81b1c83f68d8b11b1e20054f28" translate="yes" xml:space="preserve">
          <source>is required if you want to start your program without a VIO window present, but not &lt;code&gt;detach&lt;/code&gt;ed (run &lt;code&gt;help detach&lt;/code&gt; for more info). Very useful for extensions which use PM, like &lt;code&gt;Perl/Tk&lt;/code&gt; or &lt;code&gt;OpenGL&lt;/code&gt;.</source>
          <target state="translated">VIOウィンドウが存在しない状態でプログラムを開始するが、 &lt;code&gt;detach&lt;/code&gt; ない場合は、が必要です（詳細については、 &lt;code&gt;help detach&lt;/code&gt; を実行してください）。 &lt;code&gt;Perl/Tk&lt;/code&gt; や &lt;code&gt;OpenGL&lt;/code&gt; などのPMを使用する拡張機能に非常に役立ちます。</target>
        </trans-unit>
        <trans-unit id="8e6d5c50073dedc878c0bb174986728a65c26611" translate="yes" xml:space="preserve">
          <source>is reserved and must be zero. If it is not in the current pad but appears in the pad of any lexically enclosing scope, then a pseudo-entry for it is added in the current pad. Returns the offset in the current pad, or &lt;code&gt;NOT_IN_PAD&lt;/code&gt; if no such lexical is in scope.</source>
          <target state="translated">予約されており、ゼロでなければなりません。現在のパッドにはないが、字句的に囲まれたスコープのパッドにある場合は、現在のパッドにその疑似エントリが追加されます。現在のパッドのオフセットを返します。そのような字句がスコープ内にない場合は &lt;code&gt;NOT_IN_PAD&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="7532f67d8ca66762ed704f6d153ff8aaf96ee06f" translate="yes" xml:space="preserve">
          <source>is restricted to simple identifiers only. In other words, it must match &lt;code&gt;/^[_A-Za-z][_A-Za-z0-9]*\z/&lt;/code&gt; or its Unicode extension (see &lt;a href=&quot;utf8&quot;&gt;utf8&lt;/a&gt;), though it isn't extended by the locale (see &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt;).</source>
          <target state="translated">単純な識別子のみに制限されています。つまり、ロケールによって拡張されていませんが（&lt;a href=&quot;perllocale&quot;&gt;perllocaleを&lt;/a&gt;参照）、 &lt;code&gt;/^[_A-Za-z][_A-Za-z0-9]*\z/&lt;/code&gt; またはそのUnicode拡張（&lt;a href=&quot;utf8&quot;&gt;utf8を&lt;/a&gt;参照）と一致する必要があります。）。</target>
        </trans-unit>
        <trans-unit id="dab1f8b59686974bbcd2707bc651d6707dac406f" translate="yes" xml:space="preserve">
          <source>is returned.</source>
          <target state="translated">が返されます。</target>
        </trans-unit>
        <trans-unit id="3b418f45ad77bc3826b32d08799dfded45d89432" translate="yes" xml:space="preserve">
          <source>is roughly equivalent to:</source>
          <target state="translated">は大体これに相当します。</target>
        </trans-unit>
        <trans-unit id="b84a5263098f0e0c514dc8fe7d67295e56c987dc" translate="yes" xml:space="preserve">
          <source>is run on source code files, like this</source>
          <target state="translated">は、以下のようにソースコードファイル上で実行されます。</target>
        </trans-unit>
        <trans-unit id="505ded7fa9f0c714268c66ac7bb3b81302192c94" translate="yes" xml:space="preserve">
          <source>is semantically ambiguous, in a way that makes formatting decisions a bit difficult. On the one hand, it could be mention of an item &quot;Neque&quot;, mention of another item &quot;Porro&quot;, and mention of another item &quot;Quisquam Est&quot;, with just the last one requiring the explanatory paragraph &quot;Qui dolorem ipsum quia dolor...&quot;; and then an item &quot;Ut Enim&quot;. In that case, you'd want to format it like so:</source>
          <target state="translated">は意味的に曖昧なので、フォーマットの決定を少し難しくしています。一方では、項目 &quot;Neque &quot;について言及し、別の項目 &quot;Porro &quot;について言及し、別の項目 &quot;Quisquam Est &quot;について言及し、最後の項目については説明的な段落 &quot;Qui dolorem ipsum quia dolor...&quot;を必要とし、その後に項目 &quot;Ut Enim &quot;を追加することができます。その場合は、次のようにフォーマットします。</target>
        </trans-unit>
        <trans-unit id="7722d64cd0eafe5303c971058e1fcb33e1d6e14c" translate="yes" xml:space="preserve">
          <source>is semantically equivalent to the list:</source>
          <target state="translated">は意味的にはリストと同等です。</target>
        </trans-unit>
        <trans-unit id="2126556a279c8048a27fc92ce2d017bedadfc33a" translate="yes" xml:space="preserve">
          <source>is set accordingly.</source>
          <target state="translated">が適宜設定されています。</target>
        </trans-unit>
        <trans-unit id="9fa2db030f6de6d0d8d463059f009a0bd838f324" translate="yes" xml:space="preserve">
          <source>is set explicitly. Additionally, C</source>
          <target state="translated">が明示的に設定されます。さらに、C</target>
        </trans-unit>
        <trans-unit id="2456807cb5ea138b7d92d077a4a271ef1799b815" translate="yes" xml:space="preserve">
          <source>is set to 2 if it isn't set already (see &lt;a href=&quot;perlhacktips#PERL_DESTRUCT_LEVEL&quot;&gt;&quot;PERL_DESTRUCT_LEVEL&quot; in perlhacktips&lt;/a&gt;).</source>
          <target state="translated">まだ設定されていない場合は2に設定されます（&lt;a href=&quot;perlhacktips#PERL_DESTRUCT_LEVEL&quot;&gt;perlhacktipsの「PERL_DESTRUCT_LEVEL」を参照&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="f33cd6497df379b7aa55e16988255762f6cc5079" translate="yes" xml:space="preserve">
          <source>is set to 2 if it isn't set already (see &lt;a href=&quot;perlhacktips#PERL_DESTRUCT_LEVEL&quot;&gt;PERL_DESTRUCT_LEVEL in perlhacktips&lt;/a&gt;).</source>
          <target state="translated">まだ設定されていない場合は2に設定されます（&lt;a href=&quot;perlhacktips#PERL_DESTRUCT_LEVEL&quot;&gt;perlhacktipsのPERL_DESTRUCT_LEVELを参照&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="2b4d53f643e8f5289626164f0873fffe60309f8d" translate="yes" xml:space="preserve">
          <source>is set to &lt;code&gt;Encode::FB_QUIET&lt;/code&gt; , encoding and decoding immediately return the portion of the data that has been processed so far when an error occurs. The data argument is overwritten with everything after that point; that is, the unprocessed portion of the data. This is handy when you have to call &lt;code&gt;decode&lt;/code&gt; repeatedly in the case where your source data may contain partial multi-byte character sequences, (that is, you are reading with a fixed-width buffer). Here's some sample code to do exactly that:</source>
          <target state="translated">が &lt;code&gt;Encode::FB_QUIET&lt;/code&gt; 設定されている場合、エンコーディングとデコーディングは、エラーが発生すると、これまでに処理されたデータの部分をすぐに返します。データ引数は、それ以降はすべて上書きされます。つまり、データの未処理部分です。これは、ソースデータに部分的なマルチバイト文字シーケンスが含まれている可能性がある場合（つまり、固定幅バッファーで読み取る場合）、 &lt;code&gt;decode&lt;/code&gt; を繰り返し呼び出す必要がある場合に便利です。これを正確に行うためのサンプルコードを次に示します。</target>
        </trans-unit>
        <trans-unit id="e626e1b813fd4cf1317801f1debf15fd33fbba90" translate="yes" xml:space="preserve">
          <source>is set to &lt;code&gt;Encode::FB_QUIET&lt;/code&gt;, encoding and decoding immediately return the portion of the data that has been processed so far when an error occurs. The data argument is overwritten with everything after that point; that is, the unprocessed portion of the data. This is handy when you have to call &lt;code&gt;decode&lt;/code&gt; repeatedly in the case where your source data may contain partial multi-byte character sequences, (that is, you are reading with a fixed-width buffer). Here's some sample code to do exactly that:</source>
          <target state="translated">&lt;code&gt;Encode::FB_QUIET&lt;/code&gt; 設定されている場合、エンコードとデコードは、エラーが発生したときに、これまでに処理されたデータの部分をすぐに返します。データ引数は、その時点以降のすべてで上書きされます。つまり、データの未処理部分です。これは、ソースデータに部分的なマルチバイト文字シーケンスが含まれている可能性がある場合（つまり、固定幅のバッファーで読み取る場合）に &lt;code&gt;decode&lt;/code&gt; を繰り返し呼び出す必要がある場合に便利です。これを正確に行うためのサンプルコードを次に示します。</target>
        </trans-unit>
        <trans-unit id="fbfb9653688f76b59517a59a6f2dc20d0b7fcf79" translate="yes" xml:space="preserve">
          <source>is set to MEDIUM or higher.</source>
          <target state="translated">はMEDIUM以上に設定されています。</target>
        </trans-unit>
        <trans-unit id="c2ad4f726f3cb1586df04ee0538b5e72441b3f80" translate="yes" xml:space="preserve">
          <source>is set to the length of the scanned string, and</source>
          <target state="translated">はスキャンされた文字列の長さに設定されており</target>
        </trans-unit>
        <trans-unit id="1cee3f4a0dcf9c9aac5c7b81e0001cba5602885c" translate="yes" xml:space="preserve">
          <source>is set up so that the logical name &lt;code&gt;story&lt;/code&gt; is found, rather than a CLI symbol or CRTL &lt;code&gt;environ&lt;/code&gt; element with the same name.</source>
          <target state="translated">同じ名前のCLIシンボルまたはCRTL &lt;code&gt;environ&lt;/code&gt; 要素ではなく、論理名 &lt;code&gt;story&lt;/code&gt; が検出されるように設定されます。</target>
        </trans-unit>
        <trans-unit id="ca6947993695dc137eeb97b7855ecc954a5db745" translate="yes" xml:space="preserve">
          <source>is set, then the source string to encode() or decode() will be overwritten in place. If you're not interested in this, then bitwise-OR it with the bitmask.</source>
          <target state="translated">が設定されている場合は、encode()や decode()へのソース文字列が代わりに上書きされます。興味がない場合は、ビットマスクでビットウィズORしてください。</target>
        </trans-unit>
        <trans-unit id="bbdac3cf799e738c5a8da93062efb7bc674a7966" translate="yes" xml:space="preserve">
          <source>is shorter than the</source>
          <target state="translated">よりも短くなっています。</target>
        </trans-unit>
        <trans-unit id="09e367c3fc5cc8d794bb19d7c88ac5b3dbdeee84" translate="yes" xml:space="preserve">
          <source>is similar to:</source>
          <target state="translated">に似ています。</target>
        </trans-unit>
        <trans-unit id="252ba6878cfe0ead48b091a1c7b126be1c7dff77" translate="yes" xml:space="preserve">
          <source>is simply a named option of &lt;b&gt;Pod::Parser&lt;/b&gt; with a value that corresponds to a certain specified behavior. These various behaviors of &lt;b&gt;Pod::Parser&lt;/b&gt; may be enabled/disabled by setting or unsetting one or more</source>
          <target state="translated">&lt;b&gt;Pod :: Parserの&lt;/b&gt;名前付きオプションであり、特定の指定された動作に対応する値を持ちます。&lt;b&gt;Pod :: Parserの&lt;/b&gt;これらのさまざまな動作は、1つ以上を設定または設定解除することで有効/無効にできます</target>
        </trans-unit>
        <trans-unit id="a84848b3c3eaf21ad8fc8af050d6c81e580ed346" translate="yes" xml:space="preserve">
          <source>is simply opened and read; no special modes or I/O disciplines are used. To change this, set the optional</source>
          <target state="translated">は単にオープンされて読み込まれるだけであり、特別なモードや I/O 演算子は使用されません。これを変更するには、オプションの</target>
        </trans-unit>
        <trans-unit id="fbcaf1a2e7b687efcdea29a64a0429d2d73c416e" translate="yes" xml:space="preserve">
          <source>is skipped, including all its sub-directories. The default is to 'die' in such a case.</source>
          <target state="translated">はすべてのサブディレクトリを含めてスキップされます。このような場合のデフォルトは 'die' です。</target>
        </trans-unit>
        <trans-unit id="d07ec6fe2fa8d718767624f5b566e68e8b571349" translate="yes" xml:space="preserve">
          <source>is skipped, including all its sub-directories. The default is to &lt;code&gt;die&lt;/code&gt; in such a case.</source>
          <target state="translated">すべてのサブディレクトリを含め、スキップされます。このような場合、デフォルトでは &lt;code&gt;die&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="57e430e116971e873eefc3dde4fa051e8cf43562" translate="yes" xml:space="preserve">
          <source>is slower than</source>
          <target state="translated">よりも遅い</target>
        </trans-unit>
        <trans-unit id="d049167d37668316c130f710bc1870b3a57a2719" translate="yes" xml:space="preserve">
          <source>is something that produces a stream of TAP for the parser to consume, such as an executable file, a text file, an archive, an IO handle, a database, etc. &lt;code&gt;TAP::Parser::Source&lt;/code&gt; s encapsulate these</source>
          <target state="translated">実行可能ファイル、テキストファイル、アーカイブ、IOハンドル、データベースなど、パーサーが消費するTAPのストリームを生成するものです &lt;code&gt;TAP::Parser::Source&lt;/code&gt; はこれらをカプセル化します</target>
        </trans-unit>
        <trans-unit id="a9db67dab27a46603c05f9ac7e3bf48cac90db7c" translate="yes" xml:space="preserve">
          <source>is something that produces a stream of TAP for the parser to consume, such as an executable file, a text file, an archive, an IO handle, a database, etc. &lt;code&gt;TAP::Parser::Source&lt;/code&gt;s encapsulate these</source>
          <target state="translated">は、実行可能ファイル、テキストファイル、アーカイブ、IOハンドル、データベースなど、パーサーが消費するTAPのストリームを生成するものです &lt;code&gt;TAP::Parser::Source&lt;/code&gt; はこれらをカプセル化します。</target>
        </trans-unit>
        <trans-unit id="af613653b864ec6673c0a78e8010cf57eedfaf6b" translate="yes" xml:space="preserve">
          <source>is somewhat of a degenerate case, and just gets turned into:</source>
          <target state="translated">は何となく退化したケースになってしまい、ただひたすらになってしまいます。</target>
        </trans-unit>
        <trans-unit id="8b9b368c8e30a34002bdd9aed6ed229cd19c93d2" translate="yes" xml:space="preserve">
          <source>is sorted by code point order after complementing, and any</source>
          <target state="translated">は補完後のコードポイント順にソートされ、任意の</target>
        </trans-unit>
        <trans-unit id="cf7d7bb7149d7e5681ec3810867367ffae9f625f" translate="yes" xml:space="preserve">
          <source>is sorted by code point order, then complemented. If</source>
          <target state="translated">がコードポイント順にソートされた後、補完されます。もし</target>
        </trans-unit>
        <trans-unit id="e9ef489bd0e8e4faddde7bba7424e123d5cb2cdf" translate="yes" xml:space="preserve">
          <source>is substituted, and resulting binaries will be a mess.</source>
          <target state="translated">を代入すると、結果としてバイナリがめちゃくちゃになります。</target>
        </trans-unit>
        <trans-unit id="052a7e08700d6ed0548c1225b701cbbfb383a3a2" translate="yes" xml:space="preserve">
          <source>is suggested instead. See also &lt;a href=&quot;perlhacktips#PERL_MEM_LOG&quot;&gt;&quot;PERL_MEM_LOG&quot; in perlhacktips&lt;/a&gt;.</source>
          <target state="translated">代わりに提案されます。&lt;a href=&quot;perlhacktips#PERL_MEM_LOG&quot;&gt;perlhacktipsの「PERL_MEM_LOG」&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="598b73ec92930dcb2052eb812846ae6b23e7a9f4" translate="yes" xml:space="preserve">
          <source>is suggested instead. See also &lt;a href=&quot;perlhacktips#PERL_MEM_LOG&quot;&gt;PERL_MEM_LOG in perlhacktips&lt;/a&gt;.</source>
          <target state="translated">代わりに推奨されます。&lt;a href=&quot;perlhacktips#PERL_MEM_LOG&quot;&gt;perlhacktipsのPERL_MEM_LOG&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="0f36c7e47ba89397191d8268fee1d7e7b3176375" translate="yes" xml:space="preserve">
          <source>is supported by Encode, any source encoding is fine.</source>
          <target state="translated">はEncodeでサポートされているので、どのようなソースエンコーディングでも問題ありません。</target>
        </trans-unit>
        <trans-unit id="f26f422c33326b47a62f1cb9a45fdcf68258f29a" translate="yes" xml:space="preserve">
          <source>is that it indiscriminately applies the specified transformation to the entire text of your source program. So something like:</source>
          <target state="translated">は、指定された変換を無差別にソースプログラムのテキスト全体に適用するということです。つまり、次のようなものです。</target>
        </trans-unit>
        <trans-unit id="1c252327fd91114ad8e7b5b32ecd2321f2c74c06" translate="yes" xml:space="preserve">
          <source>is the &lt;code&gt;chr()&lt;/code&gt; of a large code point), and as the upper limits in loops.</source>
          <target state="translated">は大きなコードポイントの &lt;code&gt;chr()&lt;/code&gt; )であり、ループの上限として使用されます。</target>
        </trans-unit>
        <trans-unit id="988ce70c85eae79d0fe25b4054ce79630b89879b" translate="yes" xml:space="preserve">
          <source>is the OP that needs optimizing;</source>
          <target state="translated">は最適化が必要なOPです。</target>
        </trans-unit>
        <trans-unit id="338540b0e9d83bd77bd1013d1cc68e0e7753e278" translate="yes" xml:space="preserve">
          <source>is the OP that requested the eval, and will normally be an &lt;code&gt;OP_ENTEREVAL&lt;/code&gt; , &lt;code&gt;OP_DOFILE&lt;/code&gt; or &lt;code&gt;OP_REQUIRE&lt;/code&gt; .</source>
          <target state="translated">評価を要求したOPであり、通常は &lt;code&gt;OP_ENTEREVAL&lt;/code&gt; 、 &lt;code&gt;OP_DOFILE&lt;/code&gt; または &lt;code&gt;OP_REQUIRE&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="8903a76f039c2f463dfadeb9edd00e8c64dbe46d" translate="yes" xml:space="preserve">
          <source>is the OP that requested the eval, and will normally be an &lt;code&gt;OP_ENTEREVAL&lt;/code&gt;, &lt;code&gt;OP_DOFILE&lt;/code&gt; or &lt;code&gt;OP_REQUIRE&lt;/code&gt;.</source>
          <target state="translated">evalを要求したOPであり、通常は &lt;code&gt;OP_ENTEREVAL&lt;/code&gt; 、 &lt;code&gt;OP_DOFILE&lt;/code&gt; 、または &lt;code&gt;OP_REQUIRE&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="503522920752d3b808908bb7e985e21cf9217310" translate="yes" xml:space="preserve">
          <source>is the Unicode code point (in any number of hex digits) of the character that cannot be found in the character repertoire of the encoding.</source>
          <target state="translated">は、 エン コ ーデ ィ ン グの文字レパ レ ト リ で見つけられないキ ャ ラ ク タ の Unicode コ ー ド 点 (任意の数の 16 進数)です。</target>
        </trans-unit>
        <trans-unit id="b435409a7d8e12b8eb19aeb5a153ffd1f9f409bc" translate="yes" xml:space="preserve">
          <source>is the access mode and the encoding format to open the file with;</source>
          <target state="translated">はアクセスモードとファイルを開くためのエンコーディング形式です。</target>
        </trans-unit>
        <trans-unit id="5fa370b47b540f6499c736b9b14daa48b0750be8" translate="yes" xml:space="preserve">
          <source>is the body of the block. Returns the block, possibly modified.</source>
          <target state="translated">はブロックの本体です。ブロックを返します。</target>
        </trans-unit>
        <trans-unit id="0ae28d04d97b4db2036c9e56276e357f10acc52e" translate="yes" xml:space="preserve">
          <source>is the class we are attaching to,</source>
          <target state="translated">はアタッチしているクラスです。</target>
        </trans-unit>
        <trans-unit id="88c2f81141fada39655c45626c041dad52ddc90e" translate="yes" xml:space="preserve">
          <source>is the debugging one. When called with an argument, switches to debugging or non-debugging dispatcher depending on the argument (active for newly-entered subs/etc only). (The returned value is for the dispatcher before the modification.)</source>
          <target state="translated">はデバッグ用のものです。引数を指定して呼ばれると、引数に応じてデバッグ用ディスパッチャか非デバッグ用ディスパッチャに切り替わります(新規に入力されたsubs/etcのみアクティブ)。(戻り値は変更前のディスパッチャのものです)。</target>
        </trans-unit>
        <trans-unit id="82c52d1d716f93b650732617909547f222352c02" translate="yes" xml:space="preserve">
          <source>is the direct equivalent of this bit of Perl</source>
          <target state="translated">は Perl のこのビットと直接等価です。</target>
        </trans-unit>
        <trans-unit id="1fb2b7c32e3e6b82afdc74d9253d0b3262b0d7c9" translate="yes" xml:space="preserve">
          <source>is the empty string. Otherwise, it is an inferior, but still better-than-nothing alternative folding to</source>
          <target state="translated">は空の文字列です。それ以外の場合は、劣っていますが、それでも何もないよりはマシな代替フォールディングである</target>
        </trans-unit>
        <trans-unit id="b4e2abd936326e926d92e153325a90b9130254a2" translate="yes" xml:space="preserve">
          <source>is the external name of the file you want opened.</source>
          <target state="translated">は開いて欲しいファイルの外部名です。</target>
        </trans-unit>
        <trans-unit id="acae083d8f7267d56411d4d8123fe8329504c47b" translate="yes" xml:space="preserve">
          <source>is the famous imaginary number introduced above. Conversion between this form and the cartesian form &lt;code&gt;a + bi&lt;/code&gt; is immediate:</source>
          <target state="translated">上記で紹介した有名な虚数です。この形式とデカルト形式 &lt;code&gt;a + bi&lt;/code&gt; 間の変換はすぐに行われます。</target>
        </trans-unit>
        <trans-unit id="e5958b1e8af4ba98be9cc22430ff29e15f04e50c" translate="yes" xml:space="preserve">
          <source>is the file to read for POD source (the POD can be embedded in code). If</source>
          <target state="translated">はPODソースのために読み込むファイルです(PODはコードに埋め込むことができます)。もし</target>
        </trans-unit>
        <trans-unit id="4a902a3b5a686c36c34a6d4895c350e6d72563d5" translate="yes" xml:space="preserve">
          <source>is the hex representation of the octet that could not be decoded to utf8. When you encode, &lt;code&gt;\x{&lt;i&gt;HHHH&lt;/i&gt;}&lt;/code&gt; will be inserted, where</source>
          <target state="translated">utf8にデコードできなかったオクテットの16進表記です。エンコードすると、 &lt;code&gt;\x{&lt;i&gt;HHHH&lt;/i&gt;}&lt;/code&gt; が挿入されます。</target>
        </trans-unit>
        <trans-unit id="504ac0735ae10a95e2b5ee3e369194696677007c" translate="yes" xml:space="preserve">
          <source>is the hexadecimal number.</source>
          <target state="translated">は16進数です。</target>
        </trans-unit>
        <trans-unit id="98790fd2c6f05473e5c44b7acdc0f6b4506f2f5e" translate="yes" xml:space="preserve">
          <source>is the index into that array of the layer being called. The macro &lt;code&gt;PerlIOArg&lt;/code&gt; will return a (possibly &lt;code&gt;NULL&lt;/code&gt; ) SV * for the argument passed to the layer.</source>
          <target state="translated">呼び出されるレイヤーの配列へのインデックスです。マクロ &lt;code&gt;PerlIOArg&lt;/code&gt; は、レイヤーに渡された引数に対して（おそらく &lt;code&gt;NULL&lt;/code&gt; ）SV *を返します。</target>
        </trans-unit>
        <trans-unit id="93f2420f6bb2d057f322859562784230f858ad3f" translate="yes" xml:space="preserve">
          <source>is the index into that array of the layer being called. The macro &lt;code&gt;PerlIOArg&lt;/code&gt; will return a (possibly &lt;code&gt;NULL&lt;/code&gt;) SV * for the argument passed to the layer.</source>
          <target state="translated">呼び出されるレイヤーの配列へのインデックスです。マクロ &lt;code&gt;PerlIOArg&lt;/code&gt; は、レイヤーに渡された引数に対して（おそらく &lt;code&gt;NULL&lt;/code&gt; ）SV *を返します。</target>
        </trans-unit>
        <trans-unit id="142db92371cc5426856fa3d444ddae687efa8615" translate="yes" xml:space="preserve">
          <source>is the last argument in the list.</source>
          <target state="translated">はリストの最後の引数です。</target>
        </trans-unit>
        <trans-unit id="a14b49226b3bbb81004f3cb1f765bb5fef97f5a8" translate="yes" xml:space="preserve">
          <source>is the list-type op, and</source>
          <target state="translated">はリスト型の op であり</target>
        </trans-unit>
        <trans-unit id="f82606a57221f2b4b38ede02bc6cd6626d56d5e3" translate="yes" xml:space="preserve">
          <source>is the list-type op.</source>
          <target state="translated">はリストタイプのopです。</target>
        </trans-unit>
        <trans-unit id="cafab01435fe922ebcb5d5cff02f00617e1abe22" translate="yes" xml:space="preserve">
          <source>is the mapped drive to the sys: volume of the server where Perl on NetWare is installed. Now typing</source>
          <target state="translated">は、Perl on NetWare がインストールされているサーバの sys:ボリュームにマップされたドライブです。ここで</target>
        </trans-unit>
        <trans-unit id="5fa4a40ee43f92498170d49135ea24ebd1ead4cd" translate="yes" xml:space="preserve">
          <source>is the moral equivalent of these two:</source>
          <target state="translated">は、この二つの道徳に相当します。</target>
        </trans-unit>
        <trans-unit id="14b3a81aac7cf79ce51c3e68af0806f7f4937ca7" translate="yes" xml:space="preserve">
          <source>is the most popular. UTF-8 is a variable length encoding that encodes Unicode characters as 1 to 4 bytes. Other encodings include UTF-16 and UTF-32 and their big- and little-endian variants (UTF-8 is byte-order independent). The ISO/IEC 10646 defines the UCS-2 and UCS-4 encoding forms.</source>
          <target state="translated">が最も人気があります。UTF-8 は可変長エン コ ーデ ィ ン グで、 Unicode キ ャ ラ ク タ を 1 ~ 4 バ イ ト でエン コ ーデ ィ ン グ し ます。その他のエンコーディングには、UTF-16 ・ UTF-32 と、それらのビッグエンディアン ・ リトルエンディアンの変種があります (UTF-8 はバ イ ト 順序に依存しません)。ISO/IEC 10646 は UCS-2 と UCS-4 エンコーディング形式を定義しています。</target>
        </trans-unit>
        <trans-unit id="0b4974b8d2e6f377f9801c3b800b1ac0b7c4207d" translate="yes" xml:space="preserve">
          <source>is the name of the extension, with all &lt;code&gt;::&lt;/code&gt; replaced by &lt;code&gt;.&lt;/code&gt; (e.g. the library module for extension Foo::Bar would be copied to a</source>
          <target state="translated">すべての &lt;code&gt;::&lt;/code&gt; がに置き換えられた、拡張の名前です &lt;code&gt;.&lt;/code&gt; （たとえば、拡張Foo :: Barのライブラリモジュールは、</target>
        </trans-unit>
        <trans-unit id="fdcdffe2e65ad3302d98757411e195b4ad6675af" translate="yes" xml:space="preserve">
          <source>is the name of the module to load. If the string specified does not contain the package separator characters &quot;::&quot;, it is assumed to refer to the full module name &quot;DBM_Filter::name&quot;. This means that the full names for canned filters, &quot;null&quot; and &quot;utf8&quot;, included with this module are:</source>
          <target state="translated">はロードするモジュールの名前です。指定された文字列にパッケージの区切り文字 &quot;:::&quot; が含まれていない場合は、完全なモジュール名 &quot;DBM_Filter::name&quot; を参照しているものとみなされます。つまり、このモジュールに含まれる「null」と「utf8」という定型フィルタのフルネームを意味します。</target>
        </trans-unit>
        <trans-unit id="0de37e5050d6ab02ac54039af959dc47e7ba20d0" translate="yes" xml:space="preserve">
          <source>is the name of the package, and is only used in comments inside the generated C code.</source>
          <target state="translated">はパッケージの名前で、生成されたCコード内のコメントでのみ使用されます。</target>
        </trans-unit>
        <trans-unit id="45440de46c4177a6572cf02f38585860def2ca1a" translate="yes" xml:space="preserve">
          <source>is the name, and the &lt;code&gt;[:&lt;/code&gt; and &lt;code&gt;:]&lt;/code&gt; delimiters. POSIX character classes only appear</source>
          <target state="translated">は名前であり、 &lt;code&gt;[:&lt;/code&gt; および &lt;code&gt;:]&lt;/code&gt; 区切り文字です。POSIX文字クラスのみが表示されます</target>
        </trans-unit>
        <trans-unit id="896190cdbc3b73377c85418c4564a09f6ac5486e" translate="yes" xml:space="preserve">
          <source>is the number assigned to a character: for example, in EBCDIC the character &quot;A&quot; is usually assigned the number 193. In Unicode, the character &quot;A&quot; is assigned the number 65. All the code points in ASCII and Latin-1 (ISO 8859-1) have the same meaning in Unicode. All three of the recognized EBCDIC code sets have 256 code points, and in each code set, all 256 code points are mapped to equivalent Latin1 code points. Obviously, &quot;A&quot; will map to &quot;A&quot;, &quot;B&quot; =&amp;gt; &quot;B&quot;, &quot;%&quot; =&amp;gt; &quot;%&quot;, etc., for all printable characters in Latin1 and these code pages.</source>
          <target state="translated">は文字に割り当てられた番号です。たとえば、EBCDICでは通常、文字「A」には番号193が割り当てられます。Unicodeでは、文字「A」には番号65が割り当てられます。すべてのコードポイントはASCIIおよびLatin-1（ ISO 8859-1）はUnicodeでも同じ意味です。認識された3つのEBCDICコードセットすべてに256コードポイントがあり、各コードセットでは、256コードポイントすべてが同等のLatin1コードポイントにマップされます。 Latin1とこれらのコードページのすべての印刷可能な文字について、「A」は「A」、「B」=&amp;gt;「B」、「％」=&amp;gt;「％」などにマッピングされることは明らかです。</target>
        </trans-unit>
        <trans-unit id="44a3ced633aa8e3d881613e20fe3ca4570b01d8e" translate="yes" xml:space="preserve">
          <source>is the number of spaces to indent, defaulting to 6.</source>
          <target state="translated">はインデントするスペースの数で、デフォルトは6です。</target>
        </trans-unit>
        <trans-unit id="f35768e77df2a6fcb46d380fc0c5c7af5c55fc6d" translate="yes" xml:space="preserve">
          <source>is the object to serialize,</source>
          <target state="translated">はシリアライズするオブジェクトです。</target>
        </trans-unit>
        <trans-unit id="490225a54a9ac66bcdb59f92017f41f299257ed1" translate="yes" xml:space="preserve">
          <source>is the op being considered, normally an &lt;code&gt;rv2cv&lt;/code&gt; op. A pointer to the identified subroutine is returned, if it could be determined statically, and a null pointer is returned if it was not possible to determine statically.</source>
          <target state="translated">検討中の操作であり、通常は &lt;code&gt;rv2cv&lt;/code&gt; 操作です。静的に決定できた場合は、識別されたサブルーチンへのポインターが返され、静的に決定できなかった場合は、nullポインターが返されます。</target>
        </trans-unit>
        <trans-unit id="346d72197b82381e3d135c3fd096d1560c48b51d" translate="yes" xml:space="preserve">
          <source>is the op to append to the list.</source>
          <target state="translated">はリストに追加する op です。</target>
        </trans-unit>
        <trans-unit id="2c471482064fafead892cdf7b22397b6be3fe1e9" translate="yes" xml:space="preserve">
          <source>is the op to prepend to the list, and</source>
          <target state="translated">はリストの前に追加する op であり</target>
        </trans-unit>
        <trans-unit id="aaf68fac1b03ed7c6353ab95af2dd6b8cc61684c" translate="yes" xml:space="preserve">
          <source>is the op tree, and</source>
          <target state="translated">はop木であり</target>
        </trans-unit>
        <trans-unit id="3684b3a23a1a941786c7c86346c047661fcfe052" translate="yes" xml:space="preserve">
          <source>is the opcode of a binary operator, such as &lt;code&gt;OP_BIT_OR&lt;/code&gt; , then an op is constructed that performs the binary operation and assigns the result to the left argument. Either way, if</source>
          <target state="translated">&lt;code&gt;OP_BIT_OR&lt;/code&gt; などの2項演算子のオペコードである場合、2項演算を実行して結果を左の引数に割り当てるopが構築されます。どちらにしても</target>
        </trans-unit>
        <trans-unit id="a0a985ac039d3d2ad165d51298ff6ea64e498ec2" translate="yes" xml:space="preserve">
          <source>is the opcode.</source>
          <target state="translated">がオペコードです。</target>
        </trans-unit>
        <trans-unit id="185ceb5c9d854b05a21926141803af21e0fce555" translate="yes" xml:space="preserve">
          <source>is the outer pad name that this one mirrors. The returned pad name has the PADNAMEt_OUTER flag already set.</source>
          <target state="translated">はこのパッド名をミラーする外側のパッド名です。返されたパッド名には、PADNAMEt_OUTERフラグが既に設定されています。</target>
        </trans-unit>
        <trans-unit id="a6ee3b580c0eceeeca1f85f9032f86a8c10b6343" translate="yes" xml:space="preserve">
          <source>is the pad offset of the scalar lexical variable that will be affected. If it is 0, the global $_ will be used.</source>
          <target state="translated">は、影響を受けるスカラ語彙変数のパッドオフセットです。0 の場合は、グローバルな $_が使用されます。</target>
        </trans-unit>
        <trans-unit id="075349611fc93d2e62829ba77d41e494ad441dd4" translate="yes" xml:space="preserve">
          <source>is the perl version the code should be backwards compatible with. It defaults to the version of perl running the subroutine. If</source>
          <target state="translated">はコードが下位互換性を持つべきPerlのバージョンです。デフォルトはサブルーチンを実行しているPerlのバージョンです。もし</target>
        </trans-unit>
        <trans-unit id="2e519216b0de8348846fa9b4a5055de6958ae755" translate="yes" xml:space="preserve">
          <source>is the point whose coordinates are (a, b). Actually, it would be the vector originating from (0, 0) to (a, b). It follows that the addition of two complex numbers is a vectorial addition.</source>
          <target state="translated">は座標が(a,b)である点です。実際には (0,0)から (a,b)までのベクトルになります。2つの複素数の足し算はベクトルの足し算であることがわかります。</target>
        </trans-unit>
        <trans-unit id="2cc4f790eddde04d02f931089ea9bbb40ba3a6a4" translate="yes" xml:space="preserve">
          <source>is the portion of the extension's name after the last &lt;code&gt;::&lt;/code&gt; , which translates to the full file specification of the shareable image.</source>
          <target state="translated">最後の &lt;code&gt;::&lt;/code&gt; の後の拡張機能の名前の部分です。これは、共有可能なイメージの完全なファイル指定に変換されます。</target>
        </trans-unit>
        <trans-unit id="1d08d53113fc0a94af8471c935f02ee0009e286c" translate="yes" xml:space="preserve">
          <source>is the portion of the extension's name after the last &lt;code&gt;::&lt;/code&gt;, which translates to the full file specification of the shareable image.</source>
          <target state="translated">最後の &lt;code&gt;::&lt;/code&gt; の後の拡張子の名前の部分であり、共有可能なイメージの完全なファイル仕様に変換されます。</target>
        </trans-unit>
        <trans-unit id="2d16c45482f74eb9930301a0ecafdb6a012a8de5" translate="yes" xml:space="preserve">
          <source>is the portion of the extension's name following the last &lt;code&gt;::&lt;/code&gt; ), containing the XS code,</source>
          <target state="translated">XSコードを含む、最後の &lt;code&gt;::&lt;/code&gt; )に続く拡張の名前の部分です。</target>
        </trans-unit>
        <trans-unit id="09595b269fa8835305f84c8932e8a9420965f321" translate="yes" xml:space="preserve">
          <source>is the portion of the extension's name following the last &lt;code&gt;::&lt;/code&gt;), containing the XS code,</source>
          <target state="translated">XSコードを含む、最後の &lt;code&gt;::&lt;/code&gt; )に続く拡張機能の名前の部分です。</target>
        </trans-unit>
        <trans-unit id="ff4bfee209d75ed4a7ac713cfc5d716f2c1e2be4" translate="yes" xml:space="preserve">
          <source>is the previous OP optimized, whose &lt;code&gt;op_next&lt;/code&gt; points to</source>
          <target state="translated">以前に最適化されたOPであり、その &lt;code&gt;op_next&lt;/code&gt; は、</target>
        </trans-unit>
        <trans-unit id="7959ce09f1e3e9e7ae880e926860f28302895b7e" translate="yes" xml:space="preserve">
          <source>is the primary name of this option. When a program executes under &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; (recommended), these variables must be pre-declared with our() or &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; vars&lt;/code&gt; .</source>
          <target state="translated">このオプションの1次名です。プログラムが &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; （推奨）で実行される場合、これらの変数は、our（）または &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; vars&lt;/code&gt; で事前宣言する必要があります。</target>
        </trans-unit>
        <trans-unit id="c596b3e5f893cc6fd687fc9a9026e5a1b39e504c" translate="yes" xml:space="preserve">
          <source>is the primary name of this option. When a program executes under &lt;code&gt;use strict&lt;/code&gt; (recommended), these variables must be pre-declared with our() or &lt;code&gt;use vars&lt;/code&gt;.</source>
          <target state="translated">このオプションのプライマリ名です。プログラムが &lt;code&gt;use strict&lt;/code&gt; （推奨）で実行される場合、これらの変数はour（）で事前に宣言するか &lt;code&gt;use vars&lt;/code&gt; 必要があります。</target>
        </trans-unit>
        <trans-unit id="dc92b1dcb6d32cc02b0b929328d0aa4e792bcfc8" translate="yes" xml:space="preserve">
          <source>is the property of a particular build of perl, and does not depend on the current process. If you do not provide the optional argument to the functions mstats_fillhash(), fill_mstats(), mstats2hash(), then the information in fields &lt;code&gt;mem_size&lt;/code&gt; , &lt;code&gt;available_size&lt;/code&gt; is not updated.</source>
          <target state="translated">perlの特定のビルドのプロパティであり、現在のプロセスには依存しません。関数mstats_fillhash（）、fill_mstats（）、mstats2hash（）にオプションの引数を指定しない場合、フィールド &lt;code&gt;mem_size&lt;/code&gt; 、 &lt;code&gt;available_size&lt;/code&gt; の情報は更新されません。</target>
        </trans-unit>
        <trans-unit id="9521515ec3daef3fffc6d060ea075ddd5b9b9b12" translate="yes" xml:space="preserve">
          <source>is the property of a particular build of perl, and does not depend on the current process. If you do not provide the optional argument to the functions mstats_fillhash(), fill_mstats(), mstats2hash(), then the information in fields &lt;code&gt;mem_size&lt;/code&gt;, &lt;code&gt;available_size&lt;/code&gt; is not updated.</source>
          <target state="translated">はperlの特定のビルドのプロパティであり、現在のプロセスに依存しません。関数mstats_fillhash（）、fill_mstats（）、mstats2hash（）にオプションの引数を指定しない場合、フィールド &lt;code&gt;mem_size&lt;/code&gt; 、 &lt;code&gt;available_size&lt;/code&gt; の情報は更新されません。</target>
        </trans-unit>
        <trans-unit id="e0a2bbcb355a7bdbc9b5d8f8dbd1d6a1892216c8" translate="yes" xml:space="preserve">
          <source>is the reason for version-specific mangling of the DLL name for perl DLL.</source>
          <target state="translated">はperl DLLのDLL名をバージョンごとに揶揄する理由です。</target>
        </trans-unit>
        <trans-unit id="533e118d459a0417538dc17219094be54c0e410e" translate="yes" xml:space="preserve">
          <source>is the recommended way to report bugs in the perl interpreter itself or any of the standard library modules back to the developers; please read through the documentation for</source>
          <target state="translated">は、Perl インタープリタや標準ライブラリモジュールのバグを開発者に報告するための推奨された方法です。</target>
        </trans-unit>
        <trans-unit id="059ae99546fd6d2b968c421a21e81f0cc4cf52d3" translate="yes" xml:space="preserve">
          <source>is the recommended wide native character-aware way of saying</source>
          <target state="translated">はワイドネイティブ文字を意識したおすすめの言い方</target>
        </trans-unit>
        <trans-unit id="b99ef0d01d54e7d02d4e29eb81f05081577ed0c4" translate="yes" xml:space="preserve">
          <source>is the root of the optree representing the scope; it is a double pointer so you can replace the OP if you need to.</source>
          <target state="translated">はスコープを表す optree のルートで、 ダブルポインタなので必要に応じて OP を置き換えることができます。</target>
        </trans-unit>
        <trans-unit id="841108c86e9fbb4edafbf1fc269ca06fbd9c2aa7" translate="yes" xml:space="preserve">
          <source>is the same as</source>
          <target state="translated">と同じです。</target>
        </trans-unit>
        <trans-unit id="5664826178886ed6dc31d7a56be756161e89003e" translate="yes" xml:space="preserve">
          <source>is the same as this:</source>
          <target state="translated">はこれと同じです。</target>
        </trans-unit>
        <trans-unit id="ea9ca7dc351fef7638a53b6e78fc2c745436b2f0" translate="yes" xml:space="preserve">
          <source>is the same as using the program:</source>
          <target state="translated">はプログラムを使うのと同じです。</target>
        </trans-unit>
        <trans-unit id="c789dc7dbbbae7937501c4047bbd4ca49aed4ac3" translate="yes" xml:space="preserve">
          <source>is the savestack index returned by &lt;code&gt;block_start&lt;/code&gt; , and</source>
          <target state="translated">block_startによって返される &lt;code&gt;block_start&lt;/code&gt; スタックインデックスであり、</target>
        </trans-unit>
        <trans-unit id="4a63caa46b829fcb01fe4a8c31e68b7e20d84a2f" translate="yes" xml:space="preserve">
          <source>is the scalar value to store for this key.</source>
          <target state="translated">はこのキーに格納するスカラー値です。</target>
        </trans-unit>
        <trans-unit id="cb053ed2ecf771fb84e4c68638f701622bf37193" translate="yes" xml:space="preserve">
          <source>is the serialized string you returned to the engine in &lt;code&gt;STORABLE_freeze&lt;/code&gt; , and there may be an optional list of references, in the same order you gave them at serialization time, pointing to the deserialized objects (which have been processed courtesy of the Storable engine).</source>
          <target state="translated">&lt;code&gt;STORABLE_freeze&lt;/code&gt; でエンジンに返したシリアル化された文字列です。シリアル化時に指定したのと同じ順序で、シリアル化されたオブジェクト（Storableエンジンの好意で処理されたもの）を指す参照のオプションリストがある場合があります。</target>
        </trans-unit>
        <trans-unit id="e03fca6945b40ffe977ca31e97fd568ae734dba4" translate="yes" xml:space="preserve">
          <source>is the serialized string you returned to the engine in &lt;code&gt;STORABLE_freeze&lt;/code&gt;, and there may be an optional list of references, in the same order you gave them at serialization time, pointing to the deserialized objects (which have been processed courtesy of the Storable engine).</source>
          <target state="translated">は、 &lt;code&gt;STORABLE_freeze&lt;/code&gt; でエンジンに返されたシリアル化された文字列であり、シリアル化時に指定したのと同じ順序で、逆シリアル化されたオブジェクト（Storableエンジンのおかげで処理された）を指す参照のオプションのリストがある場合があります。</target>
        </trans-unit>
        <trans-unit id="681d5ca1a6522883a0d7e74c2ad38f23f79e4445" translate="yes" xml:space="preserve">
          <source>is the shortest distance between two points on a sphere. The distance is in &lt;code&gt;$rho&lt;/code&gt; units. The &lt;code&gt;$rho&lt;/code&gt; is optional, it defaults to 1 (the unit sphere), therefore the distance defaults to radians.</source>
          <target state="translated">球上の2点間の最短距離です。距離は &lt;code&gt;$rho&lt;/code&gt; 単位です。 &lt;code&gt;$rho&lt;/code&gt; 1のオプション、それはデフォルト値（単位球）、ラジアンすること距離はデフォルトです。</target>
        </trans-unit>
        <trans-unit id="bb152e814624de7f776388475643c5915a6bbc02" translate="yes" xml:space="preserve">
          <source>is the stored string for the resource object.</source>
          <target state="translated">はリソースオブジェクトの格納文字列です。</target>
        </trans-unit>
        <trans-unit id="7666856489819ec07e5e68fda7968ecdf4b7481e" translate="yes" xml:space="preserve">
          <source>is the string &lt;code&gt;&quot;\0X\0\0YZ&quot;&lt;/code&gt; .</source>
          <target state="translated">文字列 &lt;code&gt;&quot;\0X\0\0YZ&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="828f98d65f01c2f29ac08b1050664335eaa94a07" translate="yes" xml:space="preserve">
          <source>is the string &lt;code&gt;&quot;\0X\0\0YZ&quot;&lt;/code&gt;.</source>
          <target state="translated">文字列 &lt;code&gt;&quot;\0X\0\0YZ&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="4af45b7011bdf9dc23ddbc9ab955c3a70b8a6852" translate="yes" xml:space="preserve">
          <source>is the string length, not the number of strings. With an explicit repeat count for pack, the packed string is adjusted to that length. For example:</source>
          <target state="translated">は文字列の長さであり、文字列の数ではありません。pack の明示的な繰り返し回数を指定すると、パックされた文字列はその長さに合わせて調整されます。例えば、次のようになります。</target>
        </trans-unit>
        <trans-unit id="a38238d720532a1187dfe70331e701543f8d69a2" translate="yes" xml:space="preserve">
          <source>is the type returned by &lt;code&gt;ITEM&lt;/code&gt; s that don't specify their type. It defaults to the value of &lt;code&gt;default_type()&lt;/code&gt; .</source>
          <target state="translated">タイプを指定しない &lt;code&gt;ITEM&lt;/code&gt; から返されるタイプです。デフォルトは &lt;code&gt;default_type()&lt;/code&gt; の値です。</target>
        </trans-unit>
        <trans-unit id="27bdcc62479e966704683954e7115bd5295a90a7" translate="yes" xml:space="preserve">
          <source>is the type returned by &lt;code&gt;ITEM&lt;/code&gt;s that don't specify their type. It defaults to the value of &lt;code&gt;default_type()&lt;/code&gt;.</source>
          <target state="translated">タイプを指定しない &lt;code&gt;ITEM&lt;/code&gt; によって返されるタイプです。デフォルトでは、 &lt;code&gt;default_type()&lt;/code&gt; の値になります。</target>
        </trans-unit>
        <trans-unit id="62dd259d4f7a6605999861260db4a925294adb84" translate="yes" xml:space="preserve">
          <source>is the unknown layer.</source>
          <target state="translated">は未知の層である。</target>
        </trans-unit>
        <trans-unit id="7ebb9cb388028784d1ffeb685835e29c39c8a750" translate="yes" xml:space="preserve">
          <source>is the version of Perl you're using, as supplied in &lt;code&gt;$]&lt;/code&gt; , with '.' converted to '_'), or</source>
          <target state="translated">&lt;code&gt;$]&lt;/code&gt; で提供される、使用しているPerlのバージョンです。「_」に変換されます）、または</target>
        </trans-unit>
        <trans-unit id="d86848a821d3f7fe2d79c9f0d78ed8e669c62217" translate="yes" xml:space="preserve">
          <source>is the version of Perl you're using, as supplied in &lt;code&gt;$]&lt;/code&gt;, with '.' converted to '_'), or</source>
          <target state="translated">は、使用しているPerlのバージョンであり、 &lt;code&gt;$]&lt;/code&gt; で提供され、「。」が付いています。'_'に変換）、または</target>
        </trans-unit>
        <trans-unit id="334b91284c73938e4e816a510966fc314842a93e" translate="yes" xml:space="preserve">
          <source>is translated once when Perl starts up; any changes you make while Perl is running do not affect the behavior of &lt;code&gt;%ENV&lt;/code&gt; . If</source>
          <target state="translated">Perlの起動時に一度翻訳されます。Perlの実行中に行った変更は、 &lt;code&gt;%ENV&lt;/code&gt; の動作に影響を与えません。もし</target>
        </trans-unit>
        <trans-unit id="835b2b86b7a9851f667539aaf9f75b67c695e04b" translate="yes" xml:space="preserve">
          <source>is translated once when Perl starts up; any changes you make while Perl is running do not affect the behavior of &lt;code&gt;%ENV&lt;/code&gt;. If</source>
          <target state="translated">Perlの起動時に一度翻訳されます。Perlの実行中に行った変更は、 &lt;code&gt;%ENV&lt;/code&gt; の動作には影響しません。場合</target>
        </trans-unit>
        <trans-unit id="a86d775dd40947cb031e2e57ff35692497a46818" translate="yes" xml:space="preserve">
          <source>is treated as number of spaces to indent by. If &lt;code&gt;declare_types&lt;/code&gt; is true a &lt;code&gt;$types&lt;/code&gt; is always declared in the perl code generated, if defined and false never declared, and if undefined &lt;code&gt;$types&lt;/code&gt; is only declared if the values in</source>
          <target state="translated">インデントするスペースの数として扱われます。場合 &lt;code&gt;declare_types&lt;/code&gt; が真である &lt;code&gt;$types&lt;/code&gt; 定義されたと虚偽の宣言はありません場合は常に、生成されたPerlコードで宣言され、未定義の場合は &lt;code&gt;$types&lt;/code&gt; 内の値の場合にのみ宣言されています</target>
        </trans-unit>
        <trans-unit id="10fa8676748c59212055af40992e63bcbc7c643b" translate="yes" xml:space="preserve">
          <source>is true (not empty or zero), generates the value of</source>
          <target state="translated">が真(空でもゼロでもない)である場合は</target>
        </trans-unit>
        <trans-unit id="48302db9668c7d7b445abda36a22e6062f411e8f" translate="yes" xml:space="preserve">
          <source>is true on all platforms. If you want native code points for the low 256, use the &lt;code&gt;&quot;W&quot;&lt;/code&gt; template. This means that the equivalences</source>
          <target state="translated">すべてのプラットフォームに当てはまります。低256のネイティブコードポイントが必要な場合は、 &lt;code&gt;&quot;W&quot;&lt;/code&gt; テンプレートを使用します。これは、等価性が</target>
        </trans-unit>
        <trans-unit id="067d235b3d6dbb909f945abdb70f31cbc437b930" translate="yes" xml:space="preserve">
          <source>is true when we're part of a deep clone operation,</source>
          <target state="translated">は、私たちがディープクローン作戦に参加しているときには本当のことです。</target>
        </trans-unit>
        <trans-unit id="779d38fac96628c599fdd2384e085d60ba46ca15" translate="yes" xml:space="preserve">
          <source>is true, also checks whether</source>
          <target state="translated">が真かどうかもチェックします。</target>
        </trans-unit>
        <trans-unit id="45f8f7c6ce5b54b9230f2a84836b12d460e6184b" translate="yes" xml:space="preserve">
          <source>is true, ignore case. The default is to honour case.</source>
          <target state="translated">が真ならば、大文字小文字を無視します。デフォルトでは大文字小文字を区別しません。</target>
        </trans-unit>
        <trans-unit id="4056d1d8ea1ba0fdc400bcac4f4b8f6e5cb5bd11" translate="yes" xml:space="preserve">
          <source>is true, it SHOULD modify</source>
          <target state="translated">が真であれば</target>
        </trans-unit>
        <trans-unit id="e01d069b2f9d59305c080956514566b0ca93db4c" translate="yes" xml:space="preserve">
          <source>is true, returns false.</source>
          <target state="translated">が真であれば、偽を返します。</target>
        </trans-unit>
        <trans-unit id="4c6f61c4a55f03174097ae702fb602dd769db21e" translate="yes" xml:space="preserve">
          <source>is true, search by dictionary order (ignore anything but word characters and whitespace). The default is honour all characters.</source>
          <target state="translated">が true の場合、辞書順で検索します (単語と空白以外は無視します)。デフォルトはすべての文字に対応します。</target>
        </trans-unit>
        <trans-unit id="a68121a9e56ce0b0a4132675e2d7f2da532770a9" translate="yes" xml:space="preserve">
          <source>is true, the</source>
          <target state="translated">が真であれば</target>
        </trans-unit>
        <trans-unit id="ec9b11fcd9e9d4abe8ffa5611c1f06b9f3b4638a" translate="yes" xml:space="preserve">
          <source>is true, the AUTOLOAD subroutine falls back on AutoLoader::AUTOLOAD for all names that the constant() routine doesn't recognise.</source>
          <target state="translated">が真である場合、AUTOLOADサブルーチンは、 constant()ルーチンが認識できない全ての名前について、AutoLoader::AUTOLOADにフォールバックします。</target>
        </trans-unit>
        <trans-unit id="1c557d39d34bad4891cbefb6c9ce51864c16f310" translate="yes" xml:space="preserve">
          <source>is true, the scheme above allows the encoding to do as much as it can and tell the layer above how much that was. What is lacking at present is a mechanism to report what went wrong. The most likely interface will be an additional method call to the object, or perhaps (to avoid forcing per-stream objects on otherwise stateless encodings) an additional parameter.</source>
          <target state="translated">が本当であれば、上のスキームでは、エンコーディングはできる限りのことをして、それがどれくらいだったかを上のレイヤーに伝えることができます。現時点で欠けているのは、何が間違っていたかを報告するメカニズムです。最も可能性の高いインターフェイスは、オブジェクトへの追加のメソッド呼び出しか、(そうでなければステートレスなエンコーディングではストリームごとのオブジェクトを強制しないようにするために)追加のパラメータになるでしょう。</target>
        </trans-unit>
        <trans-unit id="a5fb713f23256ce8adf865a7bb140abb92cbc783" translate="yes" xml:space="preserve">
          <source>is two characters, the first character is used as the left quote and the second as the right quoted; and if</source>
          <target state="translated">が2文字の場合、最初の文字は左引用符、2番目の文字は右引用符として使用されます。</target>
        </trans-unit>
        <trans-unit id="da08ff0a55825cc7ad3dbe2e4beefb9e6a6ab73b" translate="yes" xml:space="preserve">
          <source>is unlinked.</source>
          <target state="translated">はリンクされていません。</target>
        </trans-unit>
        <trans-unit id="99206005453caddd66236543e24f39a90d1fd368" translate="yes" xml:space="preserve">
          <source>is used &lt;b&gt;instead&lt;/b&gt; of &lt;code&gt;Compress::Zlib&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;Compress::Zlib&lt;/code&gt; &lt;b&gt;代わり&lt;/b&gt;に使用されます。</target>
        </trans-unit>
        <trans-unit id="06a5664a2f773219be44f2da3af12da6c571ef76" translate="yes" xml:space="preserve">
          <source>is used &lt;b&gt;instead&lt;/b&gt; of &lt;code&gt;Compress::Zlib&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Compress::Zlib&lt;/code&gt; &lt;b&gt;代わり&lt;/b&gt;に使用されます。</target>
        </trans-unit>
        <trans-unit id="82cf7ac9ae1725690fb609a1273cc9ea666cc709" translate="yes" xml:space="preserve">
          <source>is used instead of &lt;code&gt;\x{&lt;i&gt;XXXX&lt;/i&gt;}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;\x{&lt;i&gt;XXXX&lt;/i&gt;}&lt;/code&gt; 代わりに使用されます。</target>
        </trans-unit>
        <trans-unit id="db853bb4b5bdcd8035b1c491d509b51c38d42af0" translate="yes" xml:space="preserve">
          <source>is used instead. So we have</source>
          <target state="translated">が代わりに使われています。ということで、私たちは</target>
        </trans-unit>
        <trans-unit id="2dcbc4ad74577a6ef7d69456f882a38971650f6a" translate="yes" xml:space="preserve">
          <source>is used instead. That copy is made after complementing under &lt;code&gt;/c&lt;/code&gt;.</source>
          <target state="translated">代わりに使用されます。そのコピーは、 &lt;code&gt;/c&lt;/code&gt; の下で補完した後に作成されます。</target>
        </trans-unit>
        <trans-unit id="114a44b9bc0762c878791a9634f7d000ad384ea0" translate="yes" xml:space="preserve">
          <source>is used to call a method from a Perl class. The parameter &lt;code&gt;methname&lt;/code&gt; corresponds to the name of the method to be called. Note that the class that the method belongs to is passed on the Perl stack rather than in the parameter list. This class can be either the name of the class (for a static method) or a reference to an object (for a virtual method). See &lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt; for more information on static and virtual methods and &lt;a href=&quot;#Using-call_method&quot;&gt;&quot;Using call_method&quot;&lt;/a&gt; for an example of using</source>
          <target state="translated">Perlクラスからメソッドを呼び出すために使用されます。パラメーター &lt;code&gt;methname&lt;/code&gt; は、呼び出されるメソッドの名前に対応します。メソッドが属するクラスは、パラメーターリストではなくPerlスタックで渡されることに注意してください。このクラスは、クラスの名前（静的メソッドの場合）またはオブジェクトへの参照（仮想メソッドの場合）のいずれかです。静的メソッドと仮想メソッドの詳細については&lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt;を、使用例については&lt;a href=&quot;#Using-call_method&quot;&gt;「&lt;/a&gt;call_methodの使用」を参照してください。</target>
        </trans-unit>
        <trans-unit id="38f21bebe9090675b3b7c95faffad6681c98ff75" translate="yes" xml:space="preserve">
          <source>is used to call a method from a Perl class. The parameter &lt;code&gt;methname&lt;/code&gt; corresponds to the name of the method to be called. Note that the class that the method belongs to is passed on the Perl stack rather than in the parameter list. This class can be either the name of the class (for a static method) or a reference to an object (for a virtual method). See &lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt; for more information on static and virtual methods and &lt;a href=&quot;#Using-call_method&quot;&gt;Using call_method&lt;/a&gt; for an example of using</source>
          <target state="translated">Perlクラスからメソッドを呼び出すために使用されます。パラメータ &lt;code&gt;methname&lt;/code&gt; は、呼び出されるメソッドの名前に対応しています。メソッドが属するクラスは、パラメーターリストではなく、Perlスタックで渡されることに注意してください。このクラスは、クラスの名前（静的メソッドの場合）またはオブジェクトへの参照（仮想メソッドの場合）のいずれかです。静的メソッドと仮想メソッドの詳細については&lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt;を&lt;a href=&quot;#Using-call_method&quot;&gt;使用&lt;/a&gt;する例については、call_methodの使用を参照してください。</target>
        </trans-unit>
        <trans-unit id="0981489ef48c17aa3fd2b1f4eb77d7d2fa17f92a" translate="yes" xml:space="preserve">
          <source>is used to create a &lt;a href=&quot;TAP::Parser::Source&quot;&gt;TAP::Parser::Source&lt;/a&gt; that is passed to the &lt;a href=&quot;#iterator_factory_class&quot;&gt;&quot;iterator_factory_class&quot;&lt;/a&gt; which in turn figures out how to handle the source and creates a &amp;lt;TAP::Parser::Iterator&amp;gt; for it. The iterator is used by the parser to read in the TAP stream.</source>
          <target state="translated">は、&lt;a href=&quot;#iterator_factory_class&quot;&gt;「iterator_factory_class」に&lt;/a&gt;渡される&lt;a href=&quot;TAP::Parser::Source&quot;&gt;TAP :: Parser :: Source&lt;/a&gt;を作成するために使用されます。このソースは、ソースの処理方法を理解し、そのソースの&amp;lt;TAP :: Parser :: Iterator&amp;gt;を作成します。イテレータは、パーサーがTAPストリームを読み取るために使用します。</target>
        </trans-unit>
        <trans-unit id="174c45b58d93e19a1bf9b115b40967fdc9b93c7c" translate="yes" xml:space="preserve">
          <source>is used to create a &lt;a href=&quot;parser/source&quot;&gt;TAP::Parser::Source&lt;/a&gt; that is passed to the &lt;a href=&quot;#iterator_factory_class&quot;&gt;iterator_factory_class&lt;/a&gt; which in turn figures out how to handle the source and creates a &amp;lt;TAP::Parser::Iterator&amp;gt; for it. The iterator is used by the parser to read in the TAP stream.</source>
          <target state="translated">&lt;a href=&quot;#iterator_factory_class&quot;&gt;iterator_factory_classに&lt;/a&gt;渡される&lt;a href=&quot;parser/source&quot;&gt;TAP :: Parser :: Source&lt;/a&gt;を作成するために使用されます。これは、ソースの処理方法を理解し、そのための&amp;lt;TAP :: Parser :: Iterator&amp;gt;を作成します。イテレータは、パーサーがTAPストリームを読み取るために使用されます。</target>
        </trans-unit>
        <trans-unit id="01d126fdd256d487f3863154a4a9fd21f259f849" translate="yes" xml:space="preserve">
          <source>is used to indicate that the string may contain characters outside the system codepage. The caveat</source>
          <target state="translated">は、文字列にシステムコードページ以外の文字が含まれている可能性があることを示すために使用されます。注意事項</target>
        </trans-unit>
        <trans-unit id="58a0c535d91d03fa6af49240f75e7028c1041e6c" translate="yes" xml:space="preserve">
          <source>is used to provide a true or false value. It &lt;b&gt;must&lt;/b&gt; be represented as a defined value that is either &quot;1&quot; or &quot;0&quot; or stringifies to those values.</source>
          <target state="translated">真または偽の値を提供するために使用されます。これは、&lt;b&gt;必要があり&lt;/b&gt;、これらの値のいずれかが「1」または「0」又はstringifies定義された値として表されます。</target>
        </trans-unit>
        <trans-unit id="3d08f94f5cb97d407acf7f344990711fbd64478a" translate="yes" xml:space="preserve">
          <source>is used to refer to UTF-8 on ASCII and ISO Latin based platforms and UTF-EBCDIC on EBCDIC based platforms.</source>
          <target state="translated">は、ASCII と ISO Latin ベースのプラットフォームでは UTF-8、EBCDIC ベースのプラットフォームでは UTF-EBCDIC を参照するために使用されます。</target>
        </trans-unit>
        <trans-unit id="caef3d98540ddc9f2f1ce1a294bcbe58f435fe11" translate="yes" xml:space="preserve">
          <source>is used to store this status.</source>
          <target state="translated">を使用して、この状態を保存します。</target>
        </trans-unit>
        <trans-unit id="cfc4087e381d6c31bcd21efb188c1a03365045a7" translate="yes" xml:space="preserve">
          <source>is used when the &lt;code&gt;Name&lt;/code&gt; option is</source>
          <target state="translated">[ &lt;code&gt;Name&lt;/code&gt; ]オプションが次の場合に使用されます</target>
        </trans-unit>
        <trans-unit id="d148088d7797718280b1177b22c2c5191737877f" translate="yes" xml:space="preserve">
          <source>is used, the following &lt;code&gt;&lt;a href=&quot;../functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt;s are used:</source>
          <target state="translated">が使用されている場合、次の &lt;code&gt;&lt;a href=&quot;../functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; sが使用されます。</target>
        </trans-unit>
        <trans-unit id="ae7fdf6d8fc6797de13c95b8f98316ef4c4a2465" translate="yes" xml:space="preserve">
          <source>is used, the following &lt;code&gt;open&lt;/code&gt;s are used:</source>
          <target state="translated">が使用される場合、次の &lt;code&gt;open&lt;/code&gt; が使用されます。</target>
        </trans-unit>
        <trans-unit id="a6839d76bbb7783af5dc7927fd3ea8c02821e91c" translate="yes" xml:space="preserve">
          <source>is used.</source>
          <target state="translated">を使用しています。</target>
        </trans-unit>
        <trans-unit id="0c7240c81a5b6100a1329f457d83532b0ff32851" translate="yes" xml:space="preserve">
          <source>is used. If no password is given and the login is</source>
          <target state="translated">が使用されます。パスワードが与えられておらず、ログインが</target>
        </trans-unit>
        <trans-unit id="fe97f79326aa164bdecbb65e7fb757c2dd7af24b" translate="yes" xml:space="preserve">
          <source>is used. When you decode, the Unicode REPLACEMENT CHARACTER, code point U+FFFD, is used. If the data is supposed to be UTF-8, an optional lexical warning of warning category &lt;code&gt;&quot;utf8&quot;&lt;/code&gt; is given.</source>
          <target state="translated">使用されている。デコードすると、Unicode REPLACEMENT CHARACTER、コードポイントU + FFFDが使用されます。データがUTF-8であると想定されている場合、警告カテゴリ &lt;code&gt;&quot;utf8&quot;&lt;/code&gt; オプションの字句警告が表示されます。</target>
        </trans-unit>
        <trans-unit id="12235ad06fa18edfce70787b2cda7be75ef01ddb" translate="yes" xml:space="preserve">
          <source>is useful because it allows other code (typically parser support code or caching variables) to be defined before the filter is invoked. However, there is often no need for such a separation.</source>
          <target state="translated">が便利なのは、フィルタが起動される前に他のコード(一般的にはパーササポートコードやキャッシュ変数)を定義できるからです。しかし、このような分離は必要ないことが多いです。</target>
        </trans-unit>
        <trans-unit id="aaf2089f6908b9bf4054961eed0c357046e38336" translate="yes" xml:space="preserve">
          <source>is useful for counting characters in a class, or for squashing character sequences in a class.</source>
          <target state="translated">は、クラス内の文字を数えたり、クラス内の文字列を潰したりするのに便利です。</target>
        </trans-unit>
        <trans-unit id="4e47b26bd8204f22d84b37cecf46b2ae865ef9fd" translate="yes" xml:space="preserve">
          <source>is useful.</source>
          <target state="translated">が便利です。</target>
        </trans-unit>
        <trans-unit id="f99ba7774478458a9cfe3eda37c3b92d659e1e0f" translate="yes" xml:space="preserve">
          <source>is usually 1 for on, but higher values trigger additional warnings. See &lt;a href=&quot;#Warnings&quot;&gt;&quot;Warnings&quot;&lt;/a&gt;.</source>
          <target state="translated">通常はオンの場合は1ですが、値が大きいほど追加の警告がトリガーされます。&lt;a href=&quot;#Warnings&quot;&gt;「警告」を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="40a7b397fd325b5ecbf0d373914724c1f6367724" translate="yes" xml:space="preserve">
          <source>is usually 1 for on, but higher values trigger additional warnings. See &lt;a href=&quot;#Warnings&quot;&gt;Warnings&lt;/a&gt;.</source>
          <target state="translated">通常はオンの場合は1ですが、値が大きいほど追加の警告がトリガーされます。&lt;a href=&quot;#Warnings&quot;&gt;警告を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="69bc4bb7fd74f861f5b8bca772f152dcc604661a" translate="yes" xml:space="preserve">
          <source>is valid and matches '0', '1', any alphabetic character, and the percent sign.</source>
          <target state="translated">は有効で、'0'、'1'、任意のアルファベット文字、およびパーセント記号にマッチします。</target>
        </trans-unit>
        <trans-unit id="d231156292aeca125ab2ff401f5be71547c7f695" translate="yes" xml:space="preserve">
          <source>is where the main processing for the filter is done.</source>
          <target state="translated">はフィルターの主な処理を行う場所です。</target>
        </trans-unit>
        <trans-unit id="30e01163fe1949f10b45b91d1e13f0c7637e25e7" translate="yes" xml:space="preserve">
          <source>is written into the &lt;a href=&quot;#PL_check&quot;&gt;PL_check&lt;/a&gt; array, while the value previously stored there is written to</source>
          <target state="translated">&lt;a href=&quot;#PL_check&quot;&gt;PL_check&lt;/a&gt;配列に書き込まれ、以前にそこに格納された値が書き込まれます</target>
        </trans-unit>
        <trans-unit id="680b8b11b1f1a95b7c654104af2981b4c44a0974" translate="yes" xml:space="preserve">
          <source>is your blessed reference for this particular instance.</source>
          <target state="translated">この特定の例のためのあなたの祝福された参照です。</target>
        </trans-unit>
        <trans-unit id="637ede9f0bac88412365638ad04d0f903dece281" translate="yes" xml:space="preserve">
          <source>is zero or</source>
          <target state="translated">がゼロか</target>
        </trans-unit>
        <trans-unit id="da78c7a4809cb6ce24ac8e29b2195288ba32cd34" translate="yes" xml:space="preserve">
          <source>is zero, then a plain scalar or list assignment is constructed. Which type of assignment it is is automatically determined.</source>
          <target state="translated">が0の場合は,プレーンなスカラまたはリスト代入が構築されます.どのタイプの代入かは自動的に決定されます。</target>
        </trans-unit>
        <trans-unit id="73710c24157228ed788a039ba81ae23fe31c7267" translate="yes" xml:space="preserve">
          <source>is($got, $want, $name)</source>
          <target state="translated">is($got,$want,$name)</target>
        </trans-unit>
        <trans-unit id="adf382e105547f2312d3ceff7b274ce6d91a6602" translate="yes" xml:space="preserve">
          <source>is($got, $want, $name, @diag)</source>
          <target state="translated">is($got,$want,$name,@diag)</target>
        </trans-unit>
        <trans-unit id="623d50572aae446dc358fd966327ce8c9a0ed204" translate="yes" xml:space="preserve">
          <source>is, if non-empty, the lowercase mapping for</source>
          <target state="translated">の小文字のマッピングです。</target>
        </trans-unit>
        <trans-unit id="3d7682c10121c3528254ad891855f87cf827fae6" translate="yes" xml:space="preserve">
          <source>is, if non-empty, the titlecase mapping for</source>
          <target state="translated">のタイトルケースマッピングです。</target>
        </trans-unit>
        <trans-unit id="17656293490b52e28e817d6f958f58501e80a596" translate="yes" xml:space="preserve">
          <source>is, if non-empty, the uppercase mapping for</source>
          <target state="translated">の大文字のマッピングです。</target>
        </trans-unit>
        <trans-unit id="cb18cfba59a431e4fe8a80b174c133778446c806" translate="yes" xml:space="preserve">
          <source>is, in short, an idhash with auto-registry. When an object (or, indeed, any reference) is used as a fieldhash key, the fieldhash is automatically registered for garbage collection with the object, as if &lt;code&gt;register $obj, \ %fieldhash&lt;/code&gt; had been called.</source>
          <target state="translated">つまり、自動登録を備えたIDhashです。オブジェクト（または実際には任意の参照）がフィールドハッシュキーとして使用されると、 &lt;code&gt;register $obj, \ %fieldhash&lt;/code&gt; が呼び出されたかのように、フィールドハッシュはオブジェクトとのガベージコレクション用に自動的に登録されます。</target>
        </trans-unit>
        <trans-unit id="696fe8b408e131aee749ea699f62dfebd1a1c2a1" translate="yes" xml:space="preserve">
          <source>is-a</source>
          <target state="translated">is-a</target>
        </trans-unit>
        <trans-unit id="b91aa64f3f8a6de8013484cee1310ca39f42b97f" translate="yes" xml:space="preserve">
          <source>isALPHA</source>
          <target state="translated">isALPHA</target>
        </trans-unit>
        <trans-unit id="381c670aabd6a11c46215ebc9d9a6d119d35d7dd" translate="yes" xml:space="preserve">
          <source>isALPHANUMERIC</source>
          <target state="translated">isALPHANUMERIC</target>
        </trans-unit>
        <trans-unit id="f3b91792508e06ad62730ba245a5233366d33d6a" translate="yes" xml:space="preserve">
          <source>isASCII</source>
          <target state="translated">isASCII</target>
        </trans-unit>
        <trans-unit id="d9b85d8bd6f47ae6c4a7451ef3790e4acb4376da" translate="yes" xml:space="preserve">
          <source>isBLANK</source>
          <target state="translated">isBLANK</target>
        </trans-unit>
        <trans-unit id="0ccd0b7325f397307fb8e8b0907ffd9e127afbe8" translate="yes" xml:space="preserve">
          <source>isC9_STRICT_UTF8_CHAR</source>
          <target state="translated">isC9_STRICT_UTF8_CHAR</target>
        </trans-unit>
        <trans-unit id="aad5c15432fc2b147fb0ad3c57d70d7e57027e3e" translate="yes" xml:space="preserve">
          <source>isCNTRL</source>
          <target state="translated">isCNTRL</target>
        </trans-unit>
        <trans-unit id="fc9ba5eff947718c3a41792df61e1b6a561f11ed" translate="yes" xml:space="preserve">
          <source>isDIGIT</source>
          <target state="translated">isDIGIT</target>
        </trans-unit>
        <trans-unit id="f9347029ac76f6a2be87537ec4f199b23cc02cbd" translate="yes" xml:space="preserve">
          <source>isFF_OVERLONG</source>
          <target state="translated">isFF_OVERLONG</target>
        </trans-unit>
        <trans-unit id="960939b93207aff9e6a9d23a2874f6c8ec981fc6" translate="yes" xml:space="preserve">
          <source>isFOO_lc</source>
          <target state="translated">isFOO_lc</target>
        </trans-unit>
        <trans-unit id="4bc1f69cfd540926a8163c23021d60ebef524b08" translate="yes" xml:space="preserve">
          <source>isGRAPH</source>
          <target state="translated">isGRAPH</target>
        </trans-unit>
        <trans-unit id="86199d577d6e64e3c009615a9e79e9ca12b903c0" translate="yes" xml:space="preserve">
          <source>isIDCONT</source>
          <target state="translated">isIDCONT</target>
        </trans-unit>
        <trans-unit id="3bf3e9fdd63b10e1e252318c387269103ce72b56" translate="yes" xml:space="preserve">
          <source>isIDFIRST</source>
          <target state="translated">isIDFIRST</target>
        </trans-unit>
        <trans-unit id="86966cb6ef556d3e387b53e2e0cbf3ed23df7087" translate="yes" xml:space="preserve">
          <source>isLOWER</source>
          <target state="translated">isLOWER</target>
        </trans-unit>
        <trans-unit id="a610ccb3fe4f46dc50fc8460df9aff9dd33b4fe4" translate="yes" xml:space="preserve">
          <source>isOCTAL</source>
          <target state="translated">isOCTAL</target>
        </trans-unit>
        <trans-unit id="44ae0152e504a3b38463c5b3dd9041a22f2ea3b5" translate="yes" xml:space="preserve">
          <source>isPRINT</source>
          <target state="translated">isPRINT</target>
        </trans-unit>
        <trans-unit id="f9adbe192c170c1a24cc97ad4c8692504a53293c" translate="yes" xml:space="preserve">
          <source>isPSXSPC</source>
          <target state="translated">isPSXSPC</target>
        </trans-unit>
        <trans-unit id="666314ec9a40d39d8226b7bfada9300359f95414" translate="yes" xml:space="preserve">
          <source>isPUNCT</source>
          <target state="translated">isPUNCT</target>
        </trans-unit>
        <trans-unit id="a89e5c4f32f5b7f3d41f6d21aece302f880da5a0" translate="yes" xml:space="preserve">
          <source>isSCRIPT_RUN</source>
          <target state="translated">isSCRIPT_RUN</target>
        </trans-unit>
        <trans-unit id="a7299e016d5c2de351de502c98a2c695b5adbf39" translate="yes" xml:space="preserve">
          <source>isSPACE</source>
          <target state="translated">isSPACE</target>
        </trans-unit>
        <trans-unit id="1444f154704e4014c04e327ca535df538b10e315" translate="yes" xml:space="preserve">
          <source>isSTRICT_UTF8_CHAR</source>
          <target state="translated">isSTRICT_UTF8_CHAR</target>
        </trans-unit>
        <trans-unit id="79652a24f4574eb440b8e53a5a5970c43fba05ef" translate="yes" xml:space="preserve">
          <source>isUPPER</source>
          <target state="translated">isUPPER</target>
        </trans-unit>
        <trans-unit id="a0c746a7984f1cab56054873531794096c12a2a0" translate="yes" xml:space="preserve">
          <source>isUTF8_CHAR</source>
          <target state="translated">isUTF8_CHAR</target>
        </trans-unit>
        <trans-unit id="11afd4c96efe4448bb8697b47769bd7c9650890c" translate="yes" xml:space="preserve">
          <source>isUTF8_CHAR_flags</source>
          <target state="translated">isUTF8_CHAR_flags</target>
        </trans-unit>
        <trans-unit id="32ead7c77dc55a891c88ce87719620325c1d3970" translate="yes" xml:space="preserve">
          <source>isWORDCHAR</source>
          <target state="translated">isWORDCHAR</target>
        </trans-unit>
        <trans-unit id="cb0704f8305dc04b361e10021578b53511e3fc80" translate="yes" xml:space="preserve">
          <source>isXDIGIT</source>
          <target state="translated">isXDIGIT</target>
        </trans-unit>
        <trans-unit id="e0aa9b17e62e76c514480a9428780d6edd48a581" translate="yes" xml:space="preserve">
          <source>is_actual_ok</source>
          <target state="translated">is_actual_ok</target>
        </trans-unit>
        <trans-unit id="fceb8429f0cc7148ae591e90452455196bad5e41" translate="yes" xml:space="preserve">
          <source>is_alpha()</source>
          <target state="translated">is_alpha()</target>
        </trans-unit>
        <trans-unit id="f25c8ad3133fdad61fc72507a414f3be706ae80d" translate="yes" xml:space="preserve">
          <source>is_ascii_string</source>
          <target state="translated">is_ascii_string</target>
        </trans-unit>
        <trans-unit id="3571f8c800f81672813682a542297ab3e9e3e37e" translate="yes" xml:space="preserve">
          <source>is_bailout</source>
          <target state="translated">is_bailout</target>
        </trans-unit>
        <trans-unit id="e45886f2ebdb0a78b63c04947dac8ca8fb76ac01" translate="yes" xml:space="preserve">
          <source>is_c9strict_utf8_string</source>
          <target state="translated">is_c9strict_utf8_string</target>
        </trans-unit>
        <trans-unit id="bd4b8e747e0e8112db1a02a16727b34fb2df8353" translate="yes" xml:space="preserve">
          <source>is_c9strict_utf8_string_loc</source>
          <target state="translated">is_c9strict_utf8_string_loc</target>
        </trans-unit>
        <trans-unit id="108ee654137aaa6a13029edb74f8f1f5f2bd992e" translate="yes" xml:space="preserve">
          <source>is_c9strict_utf8_string_loclen</source>
          <target state="translated">is_c9strict_utf8_string_loclen</target>
        </trans-unit>
        <trans-unit id="b92b6f1d778be1bd7ae8435b7fa15452b40ea706" translate="yes" xml:space="preserve">
          <source>is_comment</source>
          <target state="translated">is_comment</target>
        </trans-unit>
        <trans-unit id="440fbdb0612d74985bead6bd3aa45b471ed2bcfb" translate="yes" xml:space="preserve">
          <source>is_deeply($got, $want, $name)</source>
          <target state="translated">is_deeply($got,$want,$name)</target>
        </trans-unit>
        <trans-unit id="c73f6767373343279bd6d4f47d75b499dde5cd5e" translate="yes" xml:space="preserve">
          <source>is_deeply($got, $want, $name, @diag)</source>
          <target state="translated">is_deeply($got,$want,$name,@diag)</target>
        </trans-unit>
        <trans-unit id="fe5f07f24c1181069a77c62a492457f083db6d09" translate="yes" xml:space="preserve">
          <source>is_empty</source>
          <target state="translated">is_empty</target>
        </trans-unit>
        <trans-unit id="2eb3ddf53a44d0014465dbf2511b96e2ca53542f" translate="yes" xml:space="preserve">
          <source>is_even()</source>
          <target state="translated">is_even()</target>
        </trans-unit>
        <trans-unit id="9eaaf5dfec71e9a5eb7ff9cded7ae454e351a9d7" translate="yes" xml:space="preserve">
          <source>is_finalized</source>
          <target state="translated">is_finalized</target>
        </trans-unit>
        <trans-unit id="34209df39976cf7b5228d36b4e416d4fa8c1bb86" translate="yes" xml:space="preserve">
          <source>is_finite()</source>
          <target state="translated">is_finite()</target>
        </trans-unit>
        <trans-unit id="29f2b57bed3fed46ae0f516cfff42137496445f9" translate="yes" xml:space="preserve">
          <source>is_good_plan</source>
          <target state="translated">is_good_plan</target>
        </trans-unit>
        <trans-unit id="381137c8c6c57c953e2c3640e714c6576514180c" translate="yes" xml:space="preserve">
          <source>is_grapheme</source>
          <target state="translated">is_grapheme</target>
        </trans-unit>
        <trans-unit id="7e495219b110c2d7325a3d4d022778dfc02f96bb" translate="yes" xml:space="preserve">
          <source>is_indexable($package) or is_indexable()</source>
          <target state="translated">is_indexable($package)あるいは is_indexable()</target>
        </trans-unit>
        <trans-unit id="02bdc5486b53ee86a9ab7e9131c31294ee0be543" translate="yes" xml:space="preserve">
          <source>is_inf( [ SIGN ] )</source>
          <target state="translated">is_inf([SIGN])</target>
        </trans-unit>
        <trans-unit id="11dbccec36ef1a03c703d514dd31a8d0c0798066" translate="yes" xml:space="preserve">
          <source>is_int()</source>
          <target state="translated">is_int()</target>
        </trans-unit>
        <trans-unit id="77f03300906cb9df79c50905e24209ff48f380ab" translate="yes" xml:space="preserve">
          <source>is_invariant_string</source>
          <target state="translated">is_invariant_string</target>
        </trans-unit>
        <trans-unit id="49e36c23d979bcc087e20b747f6f8fd6312279f5" translate="yes" xml:space="preserve">
          <source>is_invlist</source>
          <target state="translated">is_invlist</target>
        </trans-unit>
        <trans-unit id="2e381fc29a7c1de2eaf6f8403762489e2a8b0e48" translate="yes" xml:space="preserve">
          <source>is_lax()</source>
          <target state="translated">is_lax()</target>
        </trans-unit>
        <trans-unit id="fd0198a91bf033cdc4f2946f5fb9dc61372076d3" translate="yes" xml:space="preserve">
          <source>is_lvalue_sub</source>
          <target state="translated">is_lvalue_sub</target>
        </trans-unit>
        <trans-unit id="81c4be558fcd3af8cca4b285c2962c5989f928f3" translate="yes" xml:space="preserve">
          <source>is_make_type</source>
          <target state="translated">is_make_type</target>
        </trans-unit>
        <trans-unit id="1706ac54a5f901aa68067a922924d2ca353d387c" translate="yes" xml:space="preserve">
          <source>is_make_type (override)</source>
          <target state="translated">is_make_type (オーバーライド)</target>
        </trans-unit>
        <trans-unit id="d3cd24aa0d0653a754c8dd43f5a6d45ad8a35de5" translate="yes" xml:space="preserve">
          <source>is_nan()</source>
          <target state="translated">is_nan()</target>
        </trans-unit>
        <trans-unit id="d3137bb0197eaf963d93e9bc2ddfe07d01d51840" translate="yes" xml:space="preserve">
          <source>is_neg()</source>
          <target state="translated">is_neg()</target>
        </trans-unit>
        <trans-unit id="5e192aa23e81e4d04b32a6b074858b9c768cac41" translate="yes" xml:space="preserve">
          <source>is_neg()/is_negative()</source>
          <target state="translated">is_neg()/is_negative()</target>
        </trans-unit>
        <trans-unit id="58c5cb95ab25f67205ed5b4e4ef489236dbf3822" translate="yes" xml:space="preserve">
          <source>is_negative()</source>
          <target state="translated">is_negative()</target>
        </trans-unit>
        <trans-unit id="f0f77db0fa5674be23d53391cb578d8a1e4cd7a1" translate="yes" xml:space="preserve">
          <source>is_non_negative()</source>
          <target state="translated">is_non_negative()</target>
        </trans-unit>
        <trans-unit id="c609f7701cb5e5ab971de5b5a3be4cbffcfb69fc" translate="yes" xml:space="preserve">
          <source>is_non_positive()</source>
          <target state="translated">is_non_positive()</target>
        </trans-unit>
        <trans-unit id="2ffcb1a862f4b027f0ab6152305df1200860e1b3" translate="yes" xml:space="preserve">
          <source>is_odd()</source>
          <target state="translated">is_odd()</target>
        </trans-unit>
        <trans-unit id="7182de45a4cda32c8e8cf1d71a83738243962319" translate="yes" xml:space="preserve">
          <source>is_ok</source>
          <target state="translated">is_ok</target>
        </trans-unit>
        <trans-unit id="1d374b560c9749ad48aabddc8e5cf814caaa4778" translate="yes" xml:space="preserve">
          <source>is_one( [ SIGN ])</source>
          <target state="translated">is_one([SIGN])</target>
        </trans-unit>
        <trans-unit id="70c8f014e9c6a6d99e78620643d9bc507b9fb363" translate="yes" xml:space="preserve">
          <source>is_one()</source>
          <target state="translated">is_one()</target>
        </trans-unit>
        <trans-unit id="1c662b7d1b7f406ce5585c03acdc9098a2e84ffa" translate="yes" xml:space="preserve">
          <source>is_os_type()</source>
          <target state="translated">is_os_type()</target>
        </trans-unit>
        <trans-unit id="273fb512251b5eb361c9b2982eaf0cca2d3c3ab8" translate="yes" xml:space="preserve">
          <source>is_plan</source>
          <target state="translated">is_plan</target>
        </trans-unit>
        <trans-unit id="0c305aaa8a2162118feed774404b4c763b5cefd6" translate="yes" xml:space="preserve">
          <source>is_pos()</source>
          <target state="translated">is_pos()</target>
        </trans-unit>
        <trans-unit id="aeee4fc11afe65037967eaa9c965d8912ecf4589" translate="yes" xml:space="preserve">
          <source>is_pos()/is_positive()</source>
          <target state="translated">is_pos()/is_positive()</target>
        </trans-unit>
        <trans-unit id="3b7d5fdbe9545c58671abe93bbdeec928cfbb6a6" translate="yes" xml:space="preserve">
          <source>is_positive()</source>
          <target state="translated">is_positive()</target>
        </trans-unit>
        <trans-unit id="2efe30a0d0e85f2187e8ad2bb4ba10205024e81a" translate="yes" xml:space="preserve">
          <source>is_qv()</source>
          <target state="translated">is_qv()</target>
        </trans-unit>
        <trans-unit id="e59b48b93f68d747b0a5352b765f4e5ae4b2b9c1" translate="yes" xml:space="preserve">
          <source>is_regexp($ref)</source>
          <target state="translated">is_regexp($ref)</target>
        </trans-unit>
        <trans-unit id="57c3997c87de8d94c664fcb5b83fb58262724ecb" translate="yes" xml:space="preserve">
          <source>is_removed</source>
          <target state="translated">is_removed</target>
        </trans-unit>
        <trans-unit id="a4692724296da1c49c6def7f0c65ea656f934e74" translate="yes" xml:space="preserve">
          <source>is_safe_syscall</source>
          <target state="translated">is_safe_syscall</target>
        </trans-unit>
        <trans-unit id="8fb451fe7986ef6956fa021ea1bbae2b36490d5f" translate="yes" xml:space="preserve">
          <source>is_shared VARIABLE</source>
          <target state="translated">is_shared VARIABLE</target>
        </trans-unit>
        <trans-unit id="1f66e920b9cc67ee0b6a60fbce5c8bbd3535c59f" translate="yes" xml:space="preserve">
          <source>is_simple</source>
          <target state="translated">is_simple</target>
        </trans-unit>
        <trans-unit id="657332ee96700857786237eeb2bb3d3ceb01b2b0" translate="yes" xml:space="preserve">
          <source>is_spinner</source>
          <target state="translated">is_spinner</target>
        </trans-unit>
        <trans-unit id="2133a51c8381eb21cfa95987773548d1369b5f06" translate="yes" xml:space="preserve">
          <source>is_strict()</source>
          <target state="translated">is_strict()</target>
        </trans-unit>
        <trans-unit id="612ef7a959a3976df3efcade0d710a780756e859" translate="yes" xml:space="preserve">
          <source>is_strict_utf8_string</source>
          <target state="translated">is_strict_utf8_string</target>
        </trans-unit>
        <trans-unit id="ed1f4b839fc63591a80977350056ef32e2c07983" translate="yes" xml:space="preserve">
          <source>is_strict_utf8_string_loc</source>
          <target state="translated">is_strict_utf8_string_loc</target>
        </trans-unit>
        <trans-unit id="de2a771e5489118524a9a127d205f94ade7b3b5a" translate="yes" xml:space="preserve">
          <source>is_strict_utf8_string_loclen</source>
          <target state="translated">is_strict_utf8_string_loclen</target>
        </trans-unit>
        <trans-unit id="8103b3e11998a7e6cf95f01c08b75af86f0e46db" translate="yes" xml:space="preserve">
          <source>is_test</source>
          <target state="translated">is_test</target>
        </trans-unit>
        <trans-unit id="a30ca954d545a69480c48b4360032757801540d6" translate="yes" xml:space="preserve">
          <source>is_unknown</source>
          <target state="translated">is_unknown</target>
        </trans-unit>
        <trans-unit id="8ba7e423aa9ecd8024df13c6835896e8edb89261" translate="yes" xml:space="preserve">
          <source>is_unplanned</source>
          <target state="translated">is_unplanned</target>
        </trans-unit>
        <trans-unit id="e07cc517821b5551e950dff4acb3c80a32d29930" translate="yes" xml:space="preserve">
          <source>is_utf8</source>
          <target state="translated">is_utf8</target>
        </trans-unit>
        <trans-unit id="b2c9ae74539b41d4160d5f0c48681058c4799d81" translate="yes" xml:space="preserve">
          <source>is_utf8_char</source>
          <target state="translated">is_utf8_char</target>
        </trans-unit>
        <trans-unit id="35980a1bfe1bb1064c5c60355f1966c30276e70e" translate="yes" xml:space="preserve">
          <source>is_utf8_char_buf</source>
          <target state="translated">is_utf8_char_buf</target>
        </trans-unit>
        <trans-unit id="ed660c1a5ceaebfaa06626331f79565ce2fed8db" translate="yes" xml:space="preserve">
          <source>is_utf8_char_helper</source>
          <target state="translated">is_utf8_char_helper</target>
        </trans-unit>
        <trans-unit id="d9e18c1d8fcc4f429473e1356b03c11cff821aa3" translate="yes" xml:space="preserve">
          <source>is_utf8_common</source>
          <target state="translated">is_utf8_common</target>
        </trans-unit>
        <trans-unit id="845cd328b03936ae8b84ee9300937196c3776c20" translate="yes" xml:space="preserve">
          <source>is_utf8_fixed_width_buf_flags</source>
          <target state="translated">is_utf8_fixed_width_buf_flags</target>
        </trans-unit>
        <trans-unit id="01b8a0a2db67365af439c61ef7aac79ef4da56d9" translate="yes" xml:space="preserve">
          <source>is_utf8_fixed_width_buf_loc_flags</source>
          <target state="translated">is_utf8_fixed_width_buf_loc_flags</target>
        </trans-unit>
        <trans-unit id="399338faedcc1ae92764b4dedba55665fefd372d" translate="yes" xml:space="preserve">
          <source>is_utf8_fixed_width_buf_loclen_flags</source>
          <target state="translated">is_utf8_fixed_width_buf_loclen_flags</target>
        </trans-unit>
        <trans-unit id="2a655b0ae95f05a07fdb12859b496efd738ffd89" translate="yes" xml:space="preserve">
          <source>is_utf8_invariant_string</source>
          <target state="translated">is_utf8_invariant_string</target>
        </trans-unit>
        <trans-unit id="360b00a2ca444d90dd95d4a2d13adfbd8006e6de" translate="yes" xml:space="preserve">
          <source>is_utf8_invariant_string_loc</source>
          <target state="translated">is_utf8_invariant_string_loc</target>
        </trans-unit>
        <trans-unit id="e7c70b0d39402e1a9707bfd2bf2190147b622a04" translate="yes" xml:space="preserve">
          <source>is_utf8_non_invariant_string</source>
          <target state="translated">is_utf8_non_invariant_string</target>
        </trans-unit>
        <trans-unit id="15089c332be61cabdb88b9372bc96543d1279ae1" translate="yes" xml:space="preserve">
          <source>is_utf8_overlong_given_start_byte_ok</source>
          <target state="translated">is_utf8_overlong_given_start_byte_ok</target>
        </trans-unit>
        <trans-unit id="5628ee9ad7e37db9a1fa84f18ba07dd2e37acef5" translate="yes" xml:space="preserve">
          <source>is_utf8_string</source>
          <target state="translated">is_utf8_string</target>
        </trans-unit>
        <trans-unit id="aa41ef843adefc4b45c79739a75c6f6c3d573c8c" translate="yes" xml:space="preserve">
          <source>is_utf8_string_flags</source>
          <target state="translated">is_utf8_string_flags</target>
        </trans-unit>
        <trans-unit id="bf94cc07e18a8937ef33b1fba13b20014ed1d389" translate="yes" xml:space="preserve">
          <source>is_utf8_string_loc</source>
          <target state="translated">is_utf8_string_loc</target>
        </trans-unit>
        <trans-unit id="117464ca5336bea7ce702bd3f3619230eca3d8ba" translate="yes" xml:space="preserve">
          <source>is_utf8_string_loc_flags</source>
          <target state="translated">is_utf8_string_loc_flags</target>
        </trans-unit>
        <trans-unit id="dd12e88980518fa979324b82aa535f7ea62a65d0" translate="yes" xml:space="preserve">
          <source>is_utf8_string_loclen</source>
          <target state="translated">is_utf8_string_loclen</target>
        </trans-unit>
        <trans-unit id="52b9ff7e79901b827cc813ffe0f32402ec4a6d3e" translate="yes" xml:space="preserve">
          <source>is_utf8_string_loclen_flags</source>
          <target state="translated">is_utf8_string_loclen_flags</target>
        </trans-unit>
        <trans-unit id="d74bdb7cbb5ea658f73cdd9d550e082b46b81619" translate="yes" xml:space="preserve">
          <source>is_utf8_valid_partial_char</source>
          <target state="translated">is_utf8_valid_partial_char</target>
        </trans-unit>
        <trans-unit id="2b06fc969a6360dd3bc2f415033d19b3a7206f4a" translate="yes" xml:space="preserve">
          <source>is_utf8_valid_partial_char_flags</source>
          <target state="translated">is_utf8_valid_partial_char_flags</target>
        </trans-unit>
        <trans-unit id="88b28d3917bada0d9b67dfb30beecf6e8588db71" translate="yes" xml:space="preserve">
          <source>is_valid</source>
          <target state="translated">is_valid</target>
        </trans-unit>
        <trans-unit id="9e840ea1d61b713c529fd5270e99c7cf17da0fd9" translate="yes" xml:space="preserve">
          <source>is_xs</source>
          <target state="translated">is_xs</target>
        </trans-unit>
        <trans-unit id="1e0ed8c32ee337c1156c5dd72d1997df1f49b528" translate="yes" xml:space="preserve">
          <source>is_yaml</source>
          <target state="translated">is_yaml</target>
        </trans-unit>
        <trans-unit id="1ddb13cfa4feb404c5ec5eefd16e3616cef8e112" translate="yes" xml:space="preserve">
          <source>is_zero()</source>
          <target state="translated">is_zero()</target>
        </trans-unit>
        <trans-unit id="b9a6073fa873f12500b8f74c2da65fdbddf5d9f5" translate="yes" xml:space="preserve">
          <source>isa is experimental</source>
          <target state="translated">アイサは実験的</target>
        </trans-unit>
        <trans-unit id="2f88056136e41ace376fdc95b45fd5d2f42aa4a7" translate="yes" xml:space="preserve">
          <source>isa($class)</source>
          <target state="translated">isa($class)</target>
        </trans-unit>
        <trans-unit id="8ffda1fa78645c009ffa2b7d1f049da6785b1dfd" translate="yes" xml:space="preserve">
          <source>isdual</source>
          <target state="translated">isdual</target>
        </trans-unit>
        <trans-unit id="ed40a8b31cc6dbb007182b3e7e1d10db6ff21a2b" translate="yes" xml:space="preserve">
          <source>isinfnan</source>
          <target state="translated">isinfnan</target>
        </trans-unit>
        <trans-unit id="86f14be0d6455bac361b37834f7f758d69b0c2b9" translate="yes" xml:space="preserve">
          <source>isinfnansv</source>
          <target state="translated">isinfnansv</target>
        </trans-unit>
        <trans-unit id="ee2ebf5133051bf39cd49d499acea403e44a4978" translate="yes" xml:space="preserve">
          <source>isn't</source>
          <target state="translated">isn't</target>
        </trans-unit>
        <trans-unit id="9d94e5f09ea80b838abc637f6cc2137bf9b40766" translate="yes" xml:space="preserve">
          <source>isn't available,</source>
          <target state="translated">が利用できません。</target>
        </trans-unit>
        <trans-unit id="b643075840def260815468ce095b78f495761c52" translate="yes" xml:space="preserve">
          <source>isn't available, it converts it to plain text with the external command</source>
          <target state="translated">が利用できない場合は、外部コマンド</target>
        </trans-unit>
        <trans-unit id="e16b96ecf693e658c2424ac211a1dfdc920c5a12" translate="yes" xml:space="preserve">
          <source>isn't given, it defaults to &lt;code&gt;STDIN&lt;/code&gt; .</source>
          <target state="translated">指定されていない &lt;code&gt;STDIN&lt;/code&gt; 、デフォルトはSTDINです。</target>
        </trans-unit>
        <trans-unit id="a951ef0ad03dd96c7e10c18b3a0cc0de0613787a" translate="yes" xml:space="preserve">
          <source>isn't given, it defaults to &lt;code&gt;STDIN&lt;/code&gt;.</source>
          <target state="translated">指定されていない &lt;code&gt;STDIN&lt;/code&gt; 、デフォルトでSTDINになります。</target>
        </trans-unit>
        <trans-unit id="75e52afea6c5f5fb7c62edc35d62baf474ddc2bf" translate="yes" xml:space="preserve">
          <source>isn't given, the formatted output is written to &lt;code&gt;STDOUT&lt;/code&gt; . Several POD files can be processed in the same &lt;b&gt;pod2man&lt;/b&gt; invocation (saving module load and compile times) by providing multiple pairs of</source>
          <target state="translated">が指定されていない場合、フォーマットされた出力は &lt;code&gt;STDOUT&lt;/code&gt; に書き込まれます。複数のPODファイルのペアを提供することにより、（モジュールのロードとコンパイル時間を節約して）同じ&lt;b&gt;pod2man&lt;/b&gt;呼び出しで複数のPODファイルを処理できます。</target>
        </trans-unit>
        <trans-unit id="464bc0306867e48eb03dffa3c82d60e097b5207c" translate="yes" xml:space="preserve">
          <source>isn't given, the formatted output is written to &lt;code&gt;STDOUT&lt;/code&gt; . Several POD files can be processed in the same &lt;b&gt;pod2text&lt;/b&gt; invocation (saving module load and compile times) by providing multiple pairs of</source>
          <target state="translated">が指定されていない場合、フォーマットされた出力は &lt;code&gt;STDOUT&lt;/code&gt; に書き込まれます。複数のPODファイルのペアを提供することにより、同じ&lt;b&gt;pod2text&lt;/b&gt;呼び出しで（モジュールのロードとコンパイル時間を節約して）いくつかのPODファイルを処理できます。</target>
        </trans-unit>
        <trans-unit id="5099d8ec7c825105139ad8f5bd05914b8e70eeda" translate="yes" xml:space="preserve">
          <source>isn't given, the formatted output is written to &lt;code&gt;STDOUT&lt;/code&gt;. Several POD files can be processed in the same &lt;b&gt;pod2man&lt;/b&gt; invocation (saving module load and compile times) by providing multiple pairs of</source>
          <target state="translated">が指定されていない場合、フォーマットされた出力は &lt;code&gt;STDOUT&lt;/code&gt; に書き込まれます。複数のPODファイルを提供することにより、同じ&lt;b&gt;pod2man&lt;/b&gt;呼び出しで複数のPODファイルを処理できます（モジュールのロードとコンパイル時間を節約できます）。</target>
        </trans-unit>
        <trans-unit id="93c1e2946cf63cec09c88b6c7ab5b82511f90e1e" translate="yes" xml:space="preserve">
          <source>isn't given, the formatted output is written to &lt;code&gt;STDOUT&lt;/code&gt;. Several POD files can be processed in the same &lt;b&gt;pod2text&lt;/b&gt; invocation (saving module load and compile times) by providing multiple pairs of</source>
          <target state="translated">が指定されていない場合、フォーマットされた出力は &lt;code&gt;STDOUT&lt;/code&gt; に書き込まれます。複数のPODファイルを同じ&lt;b&gt;pod2text&lt;/b&gt;呼び出しで処理できる（モジュールのロードとコンパイル時間を節約）</target>
        </trans-unit>
        <trans-unit id="4802dc86ff98209d83bfb80efd9b01f770912536" translate="yes" xml:space="preserve">
          <source>isnt($got, $do_not_want, $name)</source>
          <target state="translated">isnt($got,$do_not_want,$name)</target>
        </trans-unit>
        <trans-unit id="da72300406eee0c135b3c8231a3c5793ccac0332" translate="yes" xml:space="preserve">
          <source>isnt($got, $do_not_want, $name, @diag)</source>
          <target state="translated">isnt($got,$do_not_want,$name,@diag)</target>
        </trans-unit>
        <trans-unit id="96d2a4fbb9059f5330274f55be6262e3cbc96904" translate="yes" xml:space="preserve">
          <source>issue 21. See &lt;a href=&quot;http://interglacial.com/tpj/21/&quot;&gt;http://interglacial.com/tpj/21/&lt;/a&gt;</source>
          <target state="translated">問題&lt;a href=&quot;http://interglacial.com/tpj/21/&quot;&gt;21。http：//interglacial.com/tpj/21/を&lt;/a&gt;参照</target>
        </trans-unit>
        <trans-unit id="f1da083affe279217f988b36f92bb98ac176b46e" translate="yes" xml:space="preserve">
          <source>issymlink.U</source>
          <target state="translated">issymlink.U</target>
        </trans-unit>
        <trans-unit id="45098fc2aa4e6608f56f987d63d68920609dbbd1" translate="yes" xml:space="preserve">
          <source>isvstring</source>
          <target state="translated">isvstring</target>
        </trans-unit>
        <trans-unit id="073c2d116dfe6c35185754930917fb5ca91ecdec" translate="yes" xml:space="preserve">
          <source>isweak</source>
          <target state="translated">isweak</target>
        </trans-unit>
        <trans-unit id="6c5522ca8af86fc5069b737bb8892b3ea61002c2" translate="yes" xml:space="preserve">
          <source>it</source>
          <target state="translated">it</target>
        </trans-unit>
        <trans-unit id="05a4caf354063cd0b1c1282164b973f1a8b3ca03" translate="yes" xml:space="preserve">
          <source>it as though it were a two-dimensional one. This is actually the way almost all C multidimensional arrays work as well.</source>
          <target state="translated">を二次元のものであるかのように表示することができます.これは、実際にはほとんどのC言語の多次元配列が同様に動作する方法です。</target>
        </trans-unit>
        <trans-unit id="61d4d6f86f6911f9c0b355a4b638b81c72da1544" translate="yes" xml:space="preserve">
          <source>it depends</source>
          <target state="translated">場合による</target>
        </trans-unit>
        <trans-unit id="e9ed3745b6da2ff65c1330a469e0e606269e1aea" translate="yes" xml:space="preserve">
          <source>it does any key lookups. Anything more complicated than a simple scalar variable must use methods 2 or 3 below. However, a &quot;simple scalar&quot; includes an identifier that itself uses method 1 recursively. Therefore, the following prints &quot;howdy&quot;.</source>
          <target state="translated">はキー検索を行います。単純なスカラ変数よりも複雑なものは、以下のメソッド2または3を使用しなければならない。しかし、「単純なスカラ」には、それ自体がメソッド1を再帰的に使用する識別子が含まれています。そのため、以下のように「Howdy」と表示される。</target>
        </trans-unit>
        <trans-unit id="ba8e66e3faac8aa41508246830eac4c0ce1367d9" translate="yes" xml:space="preserve">
          <source>it does.</source>
          <target state="translated">それはそうです。</target>
        </trans-unit>
        <trans-unit id="0586fd2e9ea179909692618fde703704590b2778" translate="yes" xml:space="preserve">
          <source>it doesn't make sense for &lt;code&gt;$result&lt;/code&gt; to be tainted.</source>
          <target state="translated">&lt;code&gt;$result&lt;/code&gt; が汚染されても意味がありません。</target>
        </trans-unit>
        <trans-unit id="a3b5731b03b1d9580630c3e364c866c135363431" translate="yes" xml:space="preserve">
          <source>it finds to generate its basename. For instance:</source>
          <target state="translated">ベースネームを生成するために見つけたものです。例えば</target>
        </trans-unit>
        <trans-unit id="67860f13d2c0675d8e22bfdbbcae1da9fb06bf2d" translate="yes" xml:space="preserve">
          <source>it has been determined whether or not it is part of a POD paragraph). The parameter &lt;code&gt;$text&lt;/code&gt; is the input line; and the parameter &lt;code&gt;$line_num&lt;/code&gt; is the line number of the corresponding text line.</source>
          <target state="translated">それがPOD段落の一部であるかどうかが決定されています）。パラメータ &lt;code&gt;$text&lt;/code&gt; は入力行です。パラメータ &lt;code&gt;$line_num&lt;/code&gt; は、対応するテキスト行の行番号です。</target>
        </trans-unit>
        <trans-unit id="3870d4bae6a615c7d0c3110b61ef4d9f15473beb" translate="yes" xml:space="preserve">
          <source>it has no prototype (&lt;code&gt;PROTOTYPE&lt;/code&gt; field is missing).</source>
          <target state="translated">プロトタイプはありません（ &lt;code&gt;PROTOTYPE&lt;/code&gt; フィールドがありません）。</target>
        </trans-unit>
        <trans-unit id="131c30879634b5e9086ea8133113d2816ce16423" translate="yes" xml:space="preserve">
          <source>it is beyond the power of words to describe the way HTML browsers encode non-&lt;code&gt;ASCII&lt;/code&gt; form data. To get a general impression, visit &lt;a href=&quot;http://www.alanflavell.org.uk/charset/form-i18n.html&quot;&gt;http://www.alanflavell.org.uk/charset/form-i18n.html&lt;/a&gt;. While encoding of form data has stabilized for &lt;code&gt;UTF-8&lt;/code&gt; encoded pages (at least IE 5/6, NS 6, and Opera 6 behave consistently), be sure to expect fun (and cross-browser discrepancies) with &lt;code&gt;UTF-16&lt;/code&gt; encoded pages!</source>
          <target state="translated">HTMLブラウザが非 &lt;code&gt;ASCII&lt;/code&gt; 形式のデータをエンコードする方法を説明することは言葉の力を超えています。一般的な印象を得るには、&lt;a href=&quot;http://www.alanflavell.org.uk/charset/form-i18n.html&quot;&gt;http：//www.alanflavell.org.uk/charset/form-i18n.html&lt;/a&gt;にアクセスしてください。フォームデータのエンコードは &lt;code&gt;UTF-8&lt;/code&gt; エンコードページで安定していますが（少なくともIE 5/6、NS 6、およびOpera 6は一貫して動作します）、 &lt;code&gt;UTF-16&lt;/code&gt; エンコードページでの楽しみ（およびブラウザー間の不一致）を期待してください！</target>
        </trans-unit>
        <trans-unit id="1690d6efd12aa7c091debf143ad3278ea0ef7e39" translate="yes" xml:space="preserve">
          <source>it is executed directly instead of via your system's command shell (see below).</source>
          <target state="translated">は、システムのコマンドシェルを経由するのではなく、直接実行されます (以下を参照)。</target>
        </trans-unit>
        <trans-unit id="0c696ff0d66734bc1af537a36f453902c087a5ec" translate="yes" xml:space="preserve">
          <source>it is implemented, they just need to know</source>
          <target state="translated">それが実装されていることを知る必要があります</target>
        </trans-unit>
        <trans-unit id="5aff30627b547c2a01a9bb55f014f8a4f50a64aa" translate="yes" xml:space="preserve">
          <source>it is necessary to make a note of their addresses--thus the two variables &lt;code&gt;sva&lt;/code&gt; and &lt;code&gt;svb&lt;/code&gt; .</source>
          <target state="translated">それらのアドレスをメモする必要があります-したがって、2つの変数 &lt;code&gt;sva&lt;/code&gt; および &lt;code&gt;svb&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="5e7dc85016b1968964ec54f0c439c0215faac467" translate="yes" xml:space="preserve">
          <source>it is necessary to make a note of their addresses--thus the two variables &lt;code&gt;sva&lt;/code&gt; and &lt;code&gt;svb&lt;/code&gt;.</source>
          <target state="translated">それらのアドレスをメモする必要があり &lt;code&gt;svb&lt;/code&gt; 。したがって、2つの変数 &lt;code&gt;sva&lt;/code&gt; とsvbです。</target>
        </trans-unit>
        <trans-unit id="2e9959c9fffd7b05f3976705116788c5f70c5388" translate="yes" xml:space="preserve">
          <source>it is necessary to use either this:</source>
          <target state="translated">のどちらかを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="e6bfc40b7759a36a5d9b61adb0876e34d6af17ae" translate="yes" xml:space="preserve">
          <source>it is not currently executed (because &lt;code&gt;DEPTH&lt;/code&gt; is 0);</source>
          <target state="translated">現在は実行されていません（ &lt;code&gt;DEPTH&lt;/code&gt; が0であるため）。</target>
        </trans-unit>
        <trans-unit id="310129d7662f2f9acf2e335aff9582946ee14a1c" translate="yes" xml:space="preserve">
          <source>it is not currently executed (see &lt;code&gt;DEPTH&lt;/code&gt; );</source>
          <target state="translated">現在は実行されていません（ &lt;code&gt;DEPTH&lt;/code&gt; を参照）。</target>
        </trans-unit>
        <trans-unit id="0a9795eca7a07fa1ec5f54c4aca84e9b6ddd94be" translate="yes" xml:space="preserve">
          <source>it is probably because your LD_LIBRARY_PATH environment variable includes a directory which is a symlink to /usr/lib (such as /lib). The reason this causes a problem is quite subtle. The file libdl.so.1.0 actually *only* contains functions which generate 'stub interception failed' errors! The runtime linker intercepts links to &quot;/usr/lib/libdl.so.1.0&quot; and links in internal implementations of those functions instead. [Thanks to Tim Bunce for this explanation.]</source>
          <target state="translated">環境変数 LD_LIBRARY_PATH に /usr/lib へのシンボリックリンク (/lib など)を含むディレクトリが含まれているからだと思われます。これが問題を引き起こす理由は非常に微妙です。libdl.so.1.0ファイルは、実際には「stub interception failed」エラーを生成する関数のみを含んでいます! ランタイムリンカは&quot;/usr/lib/libdl.so.1.0 &quot;へのリンクをインターセプトし、代わりにそれらの関数の内部実装にリンクします。この説明をしてくれたTim Bunceに感謝します。</target>
        </trans-unit>
        <trans-unit id="1c4f5875a161475f2ae8169f23fec263623fcc99" translate="yes" xml:space="preserve">
          <source>it is quite clear that there is a space at the end of the first string. Another way to solve this problem is to use colour and inverse video on an ANSI terminal, see below COLOUR below if you want this.</source>
          <target state="translated">の場合、最初の文字列の最後にスペースがあるのは明らかです。この問題を解決するもう一つの方法は、ANSIターミナルでカラーとインバースビデオを使用することです、これをしたい場合は下記のCOLOURを参照してください。</target>
        </trans-unit>
        <trans-unit id="612612823271c4dd6d5f3ffd06e4c196c2f4cc3b" translate="yes" xml:space="preserve">
          <source>it is the parser who called the handler. The second line will print backtrace and die if &lt;code&gt;Carp&lt;/code&gt; was available. The third line will be executed only if &lt;code&gt;Carp&lt;/code&gt; was not available.</source>
          <target state="translated">ハンドラーを呼び出したのはパーサーです。2行目は、バックトレースを出力し、 &lt;code&gt;Carp&lt;/code&gt; が使用可能な場合は死にます。3行目は、 &lt;code&gt;Carp&lt;/code&gt; が利用できない場合にのみ実行されます。</target>
        </trans-unit>
        <trans-unit id="b58c9409bf16cf04174e7afa22fe71b231a9b517" translate="yes" xml:space="preserve">
          <source>it means you need to (re)run the</source>
          <target state="translated">を(再)実行する必要があるということです。</target>
        </trans-unit>
        <trans-unit id="8f446b862762106f931a1429d6239d02e83adc85" translate="yes" xml:space="preserve">
          <source>it prints two lines of output, a perhaps more useful outcome.</source>
          <target state="translated">は2行の出力を表示しますが、これはおそらくより有用な結果です。</target>
        </trans-unit>
        <trans-unit id="3a6a63104db0674a31400a90bd3f6dedc040f2d3" translate="yes" xml:space="preserve">
          <source>it really means</source>
          <target state="translated">と言う事は</target>
        </trans-unit>
        <trans-unit id="2d705f3ff1468bae61e7a2b03e028f3180c8d8e6" translate="yes" xml:space="preserve">
          <source>it runs a test suite - but it provides far more control over which tests are executed, in what order and how their results are reported. Typically</source>
          <target state="translated">はテストスイートを実行しますが、どのテストをどのような順序で実行し、その結果をどのように報告するかについては、はるかに多くのコントロールが可能です。一般的には</target>
        </trans-unit>
        <trans-unit id="13fd5928c332d6966fcfc1b3936835e1f2fdd3ce" translate="yes" xml:space="preserve">
          <source>it should match, we would use the &lt;b&gt;anchor&lt;/b&gt; metacharacters &lt;code&gt;^&lt;/code&gt; and &lt;code&gt;$&lt;/code&gt; . The anchor &lt;code&gt;^&lt;/code&gt; means match at the beginning of the string and the anchor &lt;code&gt;$&lt;/code&gt; means match at the end of the string, or before a newline at the end of the string. Some examples:</source>
          <target state="translated">一致する必要があります。&lt;b&gt;アンカー&lt;/b&gt;メタ文字 &lt;code&gt;^&lt;/code&gt; および &lt;code&gt;$&lt;/code&gt; を使用します。アンカー &lt;code&gt;^&lt;/code&gt; は文字列の先頭で一致することを意味し、アンカー &lt;code&gt;$&lt;/code&gt; は文字列の末尾または文字列の末尾の改行の前で一致することを意味します。いくつかの例：</target>
        </trans-unit>
        <trans-unit id="98a0682644ef37b89567db1cc704ecebca184ce1" translate="yes" xml:space="preserve">
          <source>it should match, we would use the &lt;b&gt;anchor&lt;/b&gt; metacharacters &lt;code&gt;^&lt;/code&gt; and &lt;code&gt;$&lt;/code&gt;. The anchor &lt;code&gt;^&lt;/code&gt; means match at the beginning of the string and the anchor &lt;code&gt;$&lt;/code&gt; means match at the end of the string, or before a newline at the end of the string. Some examples:</source>
          <target state="translated">一致する必要があります。&lt;b&gt;アンカー&lt;/b&gt;メタ文字 &lt;code&gt;^&lt;/code&gt; と &lt;code&gt;$&lt;/code&gt; を使用します。アンカー &lt;code&gt;^&lt;/code&gt; は文字列の先頭での一致を意味し、アンカー &lt;code&gt;$&lt;/code&gt; は文字列の末尾、または文字列の末尾の改行の前での一致を意味します。いくつかの例：</target>
        </trans-unit>
        <trans-unit id="e296f0161e64279421db490742dbd931d8bc8114" translate="yes" xml:space="preserve">
          <source>it uses.</source>
          <target state="translated">を使用しています。</target>
        </trans-unit>
        <trans-unit id="7fee69b9285278b6509a5306eaa1681932e8c894" translate="yes" xml:space="preserve">
          <source>it was given. There are a few types of Iterators available by default, all sub-classes of &lt;a href=&quot;TAP::Parser::Iterator&quot;&gt;TAP::Parser::Iterator&lt;/a&gt;. Choosing which iterator to use is the responsibility of the</source>
          <target state="translated">それが与えられました。デフォルトで使用可能なイテレータにはいくつかのタイプがあり、&lt;a href=&quot;TAP::Parser::Iterator&quot;&gt;TAP :: Parser :: Iteratorの&lt;/a&gt;すべてのサブクラスがあります。使用するイテレータの選択は、</target>
        </trans-unit>
        <trans-unit id="9740d8c8a2509877b0874f04a9fb40b6504cad81" translate="yes" xml:space="preserve">
          <source>it was given. There are a few types of Iterators available by default, all sub-classes of &lt;a href=&quot;parser/iterator&quot;&gt;TAP::Parser::Iterator&lt;/a&gt;. Choosing which iterator to use is the responsibility of the</source>
          <target state="translated">それが与えられました。デフォルトで使用できるイテレータにはいくつかのタイプがあり、&lt;a href=&quot;parser/iterator&quot;&gt;TAP :: Parser :: Iteratorの&lt;/a&gt;すべてのサブクラスがあります。使用するイテレータの選択は、</target>
        </trans-unit>
        <trans-unit id="90f05049b267c672ac20306b59373a3c6dd17d68" translate="yes" xml:space="preserve">
          <source>it will be opened for reading. Likewise, the second argument will be written to. If the second argument does not exist but the parent directory does exist, then it will be created. Trying to copy a file into a non-existent directory is an error. Trying to copy a file on top of itself is also an error. &lt;code&gt;copy&lt;/code&gt; will not overwrite read-only files.</source>
          <target state="translated">読み取り用に開かれます。同様に、2番目の引数が書き込まれます。2番目の引数は存在しないが親ディレクトリは存在する場合は、作成されます。存在しないディレクトリにファイルをコピーしようとするとエラーになります。それ自体の上にファイルをコピーしようとしてもエラーになります。 &lt;code&gt;copy&lt;/code&gt; は読み取り専用ファイルを上書きしません。</target>
        </trans-unit>
        <trans-unit id="85077e36260e1c964f3bb3d589eff39a4e93a0b6" translate="yes" xml:space="preserve">
          <source>it will still be a gv.</source>
          <target state="translated">やはりGVになってしまいます。</target>
        </trans-unit>
        <trans-unit id="dbd5122ba5020f51c5abbd9de84b338bce83b0fb" translate="yes" xml:space="preserve">
          <source>it will typically get rendered as</source>
          <target state="translated">としてレンダリングされます。</target>
        </trans-unit>
        <trans-unit id="25c14feb4e8e18138f532db9509b63ad8f630a23" translate="yes" xml:space="preserve">
          <source>it would be better to keep a hash around like %USER_VARS and have variable references actually refer to entries in that hash:</source>
          <target state="translated">USER_VARS のようなハッシュを保持し、変数参照が実際にそのハッシュ内のエントリを参照するようにした方が良いでしょう。</target>
        </trans-unit>
        <trans-unit id="e5c94463c2fd1216a37265c6eb1ebb573441081f" translate="yes" xml:space="preserve">
          <source>it).</source>
          <target state="translated">it).</target>
        </trans-unit>
        <trans-unit id="7ab962e80665cb9cc68421c37b838570afc27fae" translate="yes" xml:space="preserve">
          <source>it.</source>
          <target state="translated">it.</target>
        </trans-unit>
        <trans-unit id="0a0be36bcf81cae54b4e92e27a7da272f28892ba" translate="yes" xml:space="preserve">
          <source>it; and it also doubles as a note about why it's being skipped. So in the first codeblock above, read the code as &quot;skip if MSWin -- (otherwise) test whether &lt;code&gt;thing($foo)&lt;/code&gt; is &lt;code&gt;thing($bar)&lt;/code&gt; &quot; or for the second case, &quot;skip unless MSWin...&quot;.</source>
          <target state="translated">それ; また、スキップされる理由についても説明しています。したがって、上記の最初のコードブロックで、「MSWinの場合はスキップ-（それ以外の場合）Thing &lt;code&gt;thing($foo)&lt;/code&gt; がThing &lt;code&gt;thing($bar)&lt;/code&gt; かどうかをテストします」、または2番目のケースの場合は「MSWinをスキップする...」とコードを読み取ります。</target>
        </trans-unit>
        <trans-unit id="74145e79311fb80a0e37db8b854a165aa898e3aa" translate="yes" xml:space="preserve">
          <source>it; and it also doubles as a note about why it's being skipped. So in the first codeblock above, read the code as &quot;skip if MSWin -- (otherwise) test whether &lt;code&gt;thing($foo)&lt;/code&gt; is &lt;code&gt;thing($bar)&lt;/code&gt;&quot; or for the second case, &quot;skip unless MSWin...&quot;.</source>
          <target state="translated">それ; また、スキップされた理由についてのメモとしても機能します。したがって、上記の最初のコードブロックでは、コードを「MSWinの場合はスキップ-（それ以外の場合） &lt;code&gt;thing($foo)&lt;/code&gt; が &lt;code&gt;thing($bar)&lt;/code&gt; かどうかをテストする」、または2番目のケースでは「MSWinでない限りスキップ...」と読みます。</target>
        </trans-unit>
        <trans-unit id="90665ca6c8810138a69c5d8421143bbaa3be9fa1" translate="yes" xml:space="preserve">
          <source>italic</source>
          <target state="translated">italic</target>
        </trans-unit>
        <trans-unit id="6706f8689ad7b4511aa02bbf1827840b3c7fcc65" translate="yes" xml:space="preserve">
          <source>itcharlie@cpan.org</source>
          <target state="translated">itcharlie@cpan.org</target>
        </trans-unit>
        <trans-unit id="7316c8b2e74870d9d7e9d30bbc28ecf4cdf945ee" translate="yes" xml:space="preserve">
          <source>items</source>
          <target state="translated">items</target>
        </trans-unit>
        <trans-unit id="939d66a4b75f040c931e31b7a89333e45cd668cc" translate="yes" xml:space="preserve">
          <source>iterate</source>
          <target state="translated">iterate</target>
        </trans-unit>
        <trans-unit id="6a76880257a98862233daf37049ef9d8a2496a46" translate="yes" xml:space="preserve">
          <source>iteration</source>
          <target state="translated">iteration</target>
        </trans-unit>
        <trans-unit id="bef4aaaa11015ef79d88f3701f4c69ad690eb4c7" translate="yes" xml:space="preserve">
          <source>iterator</source>
          <target state="translated">iterator</target>
        </trans-unit>
        <trans-unit id="4131f600eefaae3bd0bdca31fdfbd0ee66fd34df" translate="yes" xml:space="preserve">
          <source>iterator factory</source>
          <target state="translated">イテレータファクトリー</target>
        </trans-unit>
        <trans-unit id="c8ed91cabd2503ccd6fe98858acf5a896273fc96" translate="yes" xml:space="preserve">
          <source>iterator_class</source>
          <target state="translated">iterator_class</target>
        </trans-unit>
        <trans-unit id="3bdff15b39ed0956a3ac055e7cb35e717df3ac4f" translate="yes" xml:space="preserve">
          <source>iterators</source>
          <target state="translated">iterators</target>
        </trans-unit>
        <trans-unit id="91f3264578c554679afde17862a2c514aa8b4d65" translate="yes" xml:space="preserve">
          <source>iters</source>
          <target state="translated">iters</target>
        </trans-unit>
        <trans-unit id="02b745e9b5e2fad4405c0c56805599232ff0da14" translate="yes" xml:space="preserve">
          <source>ithreads</source>
          <target state="translated">ithreads</target>
        </trans-unit>
        <trans-unit id="729ee8658c32bfd976df663131e9d855fadb0bd2" translate="yes" xml:space="preserve">
          <source>its parent classes are called (in depth-first, left-to-right order).</source>
          <target state="translated">の親クラスが呼び出されます(深さ優先、左から右の順)。</target>
        </trans-unit>
        <trans-unit id="81f3fb4eaedb1a632822e8e071eaf79b0daa2a96" translate="yes" xml:space="preserve">
          <source>itself is perfectly fine and probably best to quote from, provided you can find a suitable quote there.</source>
          <target state="translated">それ自体は完全に正常であり、あなたがそこに適切な見積もりを見つけることができる場合には、そこから引用するのがおそらく最善です。</target>
        </trans-unit>
        <trans-unit id="a6597c4b9bc3a39747ccb10ba2dc28b25654f99e" translate="yes" xml:space="preserve">
          <source>itself, or the UNIX error message when it is not (i.e.</source>
          <target state="translated">自身、またはそうでない場合のUNIXのエラーメッセージ(つまり</target>
        </trans-unit>
        <trans-unit id="8cd5a170ac5cbddacb24806eb93a8730cd7776d0" translate="yes" xml:space="preserve">
          <source>itself.</source>
          <target state="translated">itself.</target>
        </trans-unit>
        <trans-unit id="a448ee962c26966eb9ffb37083bad9b8255c68a0" translate="yes" xml:space="preserve">
          <source>itself. &lt;code&gt;PERL_MAGIC_uvar&lt;/code&gt; was made available for hashes, and weak references now call uvar &lt;code&gt;get&lt;/code&gt; magic after a weakref has been cleared. The first feature is used to make field hashes intercept their keys upon access. The second one triggers garbage collection.</source>
          <target state="translated">自体。 &lt;code&gt;PERL_MAGIC_uvar&lt;/code&gt; がハッシュで使用できるようになり、弱い参照は、weakrefがクリアされた後にuvar &lt;code&gt;get&lt;/code&gt; magicを呼び出すようになりました。最初の機能は、フィールドハッシュがアクセス時にキーをインターセプトするために使用されます。2つ目はガベージコレクションをトリガーします。</target>
        </trans-unit>
        <trans-unit id="9080b7d46b4fc0390c228c28d01f17857e481e91" translate="yes" xml:space="preserve">
          <source>itself. This implements standard prototype processing. It can be changed, for a particular subroutine, by &lt;a href=&quot;#cv_set_call_checker&quot;&gt;cv_set_call_checker&lt;/a&gt;.</source>
          <target state="translated">自体。これは標準のプロトタイプ処理を実装します。特定のサブルーチンについては、&lt;a href=&quot;#cv_set_call_checker&quot;&gt;cv_set_call_checker&lt;/a&gt;によって変更できます。</target>
        </trans-unit>
        <trans-unit id="e65c84ea5ae8f9cb5f144e8560472c4a38ee73a9" translate="yes" xml:space="preserve">
          <source>itself: &lt;code&gt;NaN&lt;/code&gt; != &lt;code&gt;NaN&lt;/code&gt; .</source>
          <target state="translated">自体： &lt;code&gt;NaN&lt;/code&gt; ！= &lt;code&gt;NaN&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9fd51af72b92d5be26ff2471cf566605e93ca9ca" translate="yes" xml:space="preserve">
          <source>itself: &lt;code&gt;NaN&lt;/code&gt; != &lt;code&gt;NaN&lt;/code&gt;.</source>
          <target state="translated">それ自体： &lt;code&gt;NaN&lt;/code&gt; ！= &lt;code&gt;NaN&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="52443397326a3cb4e3f0b99497dba99b89e7c393" translate="yes" xml:space="preserve">
          <source>itself; you'll need some other means, (like &lt;a href=&quot;#charprop%28%29&quot;&gt;&quot;charprop()&quot;&lt;/a&gt; or &lt;a href=&quot;#casespec%28%29&quot;&gt;&quot;casespec()&quot;&lt;/a&gt; to get the full mapping.</source>
          <target state="translated">自体; 完全なマッピングを取得するには、他の手段（&lt;a href=&quot;#charprop%28%29&quot;&gt;&quot;charprop（）&quot;&lt;/a&gt;や&lt;a href=&quot;#casespec%28%29&quot;&gt;&quot;casespec（）&quot;&lt;/a&gt;など）が必要になります。</target>
        </trans-unit>
        <trans-unit id="3e42ca91c60743cbedfdb7a86d0e6ca643050fa2" translate="yes" xml:space="preserve">
          <source>itself; you'll need some other means, (like &lt;a href=&quot;#charprop()&quot;&gt;charprop()&lt;/a&gt; or &lt;a href=&quot;#casespec()&quot;&gt;casespec()&lt;/a&gt; to get the full mapping.</source>
          <target state="translated">自体; 完全なマッピングを取得するには、他の手段（&lt;a href=&quot;#charprop()&quot;&gt;charprop（）&lt;/a&gt;や&lt;a href=&quot;#casespec()&quot;&gt;casespec（）&lt;/a&gt;など）が必要です。</target>
        </trans-unit>
        <trans-unit id="d4f506d11f53beffb8d67eda0740af3a887a992e" translate="yes" xml:space="preserve">
          <source>ix</source>
          <target state="translated">ix</target>
        </trans-unit>
        <trans-unit id="5c2dd944dde9e08881bef0894fe7b22a5c9c4b06" translate="yes" xml:space="preserve">
          <source>j</source>
          <target state="translated">j</target>
        </trans-unit>
        <trans-unit id="ccb3219ddb6265babc86f9f9b3767241cd3c266d" translate="yes" xml:space="preserve">
          <source>jhi!at!iki.fi</source>
          <target state="translated">jhi!at!iki.fi</target>
        </trans-unit>
        <trans-unit id="89bd3e10c41e1404acf15c04b11b8f2b9abbc72b" translate="yes" xml:space="preserve">
          <source>jhi@iki.fi</source>
          <target state="translated">jhi@iki.fi</target>
        </trans-unit>
        <trans-unit id="27415b1a167a19ddb52be78efc6003b1bd040d19" translate="yes" xml:space="preserve">
          <source>jkeenan@cpan.org</source>
          <target state="translated">jkeenan@cpan.org</target>
        </trans-unit>
        <trans-unit id="4e6d8cce6b2c2c2e68dba3125b2eda15468fa472" translate="yes" xml:space="preserve">
          <source>jmaybe</source>
          <target state="translated">jmaybe</target>
        </trans-unit>
        <trans-unit id="b8c394cc17419bc3809e014896111af95fe7d3a9" translate="yes" xml:space="preserve">
          <source>job to watch CPAN, you could list all modules that need updating. First a quick and dirty way:</source>
          <target state="translated">ジョブでCPANを監視する場合、更新が必要なモジュールをすべてリストアップすることができます。最初に手っ取り早くて汚い方法です。</target>
        </trans-unit>
        <trans-unit id="6966922100bf006356af2b9098e6ba3b1c190226" translate="yes" xml:space="preserve">
          <source>jobs</source>
          <target state="translated">jobs</target>
        </trans-unit>
        <trans-unit id="4e97be3f6d4db1c68bd81b47e5347878d0544d58" translate="yes" xml:space="preserve">
          <source>john@perlsec.org</source>
          <target state="translated">john@perlsec.org</target>
        </trans-unit>
        <trans-unit id="c455b38e076228392d1c751d14fe95da50519334" translate="yes" xml:space="preserve">
          <source>join</source>
          <target state="translated">join</target>
        </trans-unit>
        <trans-unit id="5f399a3111bea0589bf7db3e0dfaba80af64407b" translate="yes" xml:space="preserve">
          <source>join EXPR,LIST</source>
          <target state="translated">join EXPR,LIST</target>
        </trans-unit>
        <trans-unit id="62d2c6aa803cca4cf9c65aa3e227bf0b61706b76" translate="yes" xml:space="preserve">
          <source>join is the same as catfile.</source>
          <target state="translated">joinはcatfileと同じです。</target>
        </trans-unit>
        <trans-unit id="ca46fff3e67ab1620d4b1bde0a7edc21da9ca6b3" translate="yes" xml:space="preserve">
          <source>json_backend</source>
          <target state="translated">json_backend</target>
        </trans-unit>
        <trans-unit id="1c6d0d54c0f834ed0e6899398b4feea893ab192b" translate="yes" xml:space="preserve">
          <source>json_decoder</source>
          <target state="translated">json_decoder</target>
        </trans-unit>
        <trans-unit id="7bb61753793749b4a10a78e5871d641d3de824d8" translate="yes" xml:space="preserve">
          <source>json_pp</source>
          <target state="translated">json_pp</target>
        </trans-unit>
        <trans-unit id="d95b79cfc988b3b165ceb830a9c8932d1b52cf18" translate="yes" xml:space="preserve">
          <source>just</source>
          <target state="translated">just</target>
        </trans-unit>
        <trans-unit id="d166bc25f1f4910eef0e279fe3b123b5b760879f" translate="yes" xml:space="preserve">
          <source>just a tourist. But while tourists can be stupid, computers are supposed to be smart; the computer should be able to fill in the blank, and still have the results be grammatical.</source>
          <target state="translated">ただの観光客 しかし、観光客はバカだが、コンピュータは頭がいいはずだ。コンピュータは空欄を埋めても文法的な結果が得られるはずだ。</target>
        </trans-unit>
        <trans-unit id="eb0fc5922423716c9914d354f8212f007cc1f6ca" translate="yes" xml:space="preserve">
          <source>just like perl itself:</source>
          <target state="translated">perlそのもののように。</target>
        </trans-unit>
        <trans-unit id="f9d5ea726b7acb7a642a990df1dd7b92e603dab0" translate="yes" xml:space="preserve">
          <source>just the inverse of &lt;code&gt;:crlf&lt;/code&gt; : other layers which would affect the binary nature of the stream are also removed or disabled.</source>
          <target state="translated">&lt;code&gt;:crlf&lt;/code&gt; の逆だけです：ストリームのバイナリの性質に影響を与える他のレイヤーも削除または無効化されます。</target>
        </trans-unit>
        <trans-unit id="7ac665a853ca7425b0d82cfcda4e962fa8e3adf1" translate="yes" xml:space="preserve">
          <source>just will not do</source>
          <target state="translated">しかたがない</target>
        </trans-unit>
        <trans-unit id="13fbd79c3d390e5d6585a21e11ff5ec1970cff0c" translate="yes" xml:space="preserve">
          <source>k</source>
          <target state="translated">k</target>
        </trans-unit>
        <trans-unit id="725ad17778a9ca9c4dcb68f53d1af1a0f509df54" translate="yes" xml:space="preserve">
          <source>k*pi/n</source>
          <target state="translated">k*pi/n</target>
        </trans-unit>
        <trans-unit id="8d188900443c635809d91fed40006ff621a46095" translate="yes" xml:space="preserve">
          <source>katakana_before_hiragana</source>
          <target state="translated">katakana_before_hiragana</target>
        </trans-unit>
        <trans-unit id="9d8746dbfabbed75cb78ff152c4d5d85efe8cd0a" translate="yes" xml:space="preserve">
          <source>keep_root =&amp;gt; $bool</source>
          <target state="translated">keep_root =&amp;gt; $bool</target>
        </trans-unit>
        <trans-unit id="20df3669f06cf1ca2e0568e9e36e930978c70bb5" translate="yes" xml:space="preserve">
          <source>keep_source_where</source>
          <target state="translated">keep_source_where</target>
        </trans-unit>
        <trans-unit id="a62f2225bf70bfaccbc7f1ef2a397836717377de" translate="yes" xml:space="preserve">
          <source>key</source>
          <target state="translated">key</target>
        </trans-unit>
        <trans-unit id="e2929051408c4d0d174e1354d7182008186218cd" translate="yes" xml:space="preserve">
          <source>key replacement</source>
          <target state="translated">キー交換</target>
        </trans-unit>
        <trans-unit id="0ec928f0548a391077ef8e978657769f625ace95" translate="yes" xml:space="preserve">
          <source>keylen</source>
          <target state="translated">keylen</target>
        </trans-unit>
        <trans-unit id="a9d95efcc011e377892f55ea4ef1cf8af1bde1da" translate="yes" xml:space="preserve">
          <source>keypv</source>
          <target state="translated">keypv</target>
        </trans-unit>
        <trans-unit id="5944ae25418ceabcf285dca1d721b77888dac89b" translate="yes" xml:space="preserve">
          <source>keys</source>
          <target state="translated">keys</target>
        </trans-unit>
        <trans-unit id="163ff7ee9e20183b56bf466efd2816a9b2392c0c" translate="yes" xml:space="preserve">
          <source>keys ARRAY</source>
          <target state="translated">キー配列</target>
        </trans-unit>
        <trans-unit id="63c866479b55938ab0686f9368e0bdc3b1e2f798" translate="yes" xml:space="preserve">
          <source>keys EXPR</source>
          <target state="translated">キーエクスプレ</target>
        </trans-unit>
        <trans-unit id="a39fdcb0ec2b35fbb1b985ec7492d546a128c563" translate="yes" xml:space="preserve">
          <source>keys HASH</source>
          <target state="translated">キーハッシュ</target>
        </trans-unit>
        <trans-unit id="4401f84be4185188a39d2f59b42a57a00108ee4e" translate="yes" xml:space="preserve">
          <source>keys and values are NULL terminated. Unfortunately when Perl writes to DBM databases it doesn't use NULL termination, so your Perl application will have to manage NULL termination itself. When you write to the database you will have to use something like this:</source>
          <target state="translated">のキーと値は NULL 終端処理されます。残念ながら、Perl が DBM データベースに書き込むときには NULL 終端を使用しないので、Perl アプリケーションは NULL 終端を自分で管理しなければなりません。データベースに書き込むときには、次のようなものを使用しなければなりません。</target>
        </trans-unit>
        <trans-unit id="0a2a3d72597603ea8cff70de3f7051f49cb67f9f" translate="yes" xml:space="preserve">
          <source>keys and values.</source>
          <target state="translated">キーと値。</target>
        </trans-unit>
        <trans-unit id="a43aa2b3cce8548368bbd79297bc5714364ea31a" translate="yes" xml:space="preserve">
          <source>keyword</source>
          <target state="translated">keyword</target>
        </trans-unit>
        <trans-unit id="8ea91bf38d3a13cd900dbd8a00821cf1c9c27122" translate="yes" xml:space="preserve">
          <source>keyword_plugin_standard</source>
          <target state="translated">keyword_plugin_standard</target>
        </trans-unit>
        <trans-unit id="88fc09e54b17679b0028556344b50c9fe169bdb5" translate="yes" xml:space="preserve">
          <source>keywords</source>
          <target state="translated">keywords</target>
        </trans-unit>
        <trans-unit id="6589889c96d31e938e419098b015444a16a2c3a2" translate="yes" xml:space="preserve">
          <source>kflags</source>
          <target state="translated">kflags</target>
        </trans-unit>
        <trans-unit id="c80f5bc166cd6739ba9ba6d94acabc0aa01494da" translate="yes" xml:space="preserve">
          <source>kill</source>
          <target state="translated">kill</target>
        </trans-unit>
        <trans-unit id="a4bc7bbb272a294f330eb938da9fb51c2fcc02c3" translate="yes" xml:space="preserve">
          <source>kill SIGNAL</source>
          <target state="translated">キルシグナル</target>
        </trans-unit>
        <trans-unit id="504bcebca3affd57921d61d9a779cae627657943" translate="yes" xml:space="preserve">
          <source>kill SIGNAL, LIST</source>
          <target state="translated">kill SIGNAL,LIST</target>
        </trans-unit>
        <trans-unit id="e29f2c163499322b409b7d20f5c249c3d72179ce" translate="yes" xml:space="preserve">
          <source>kill()</source>
          <target state="translated">kill()</target>
        </trans-unit>
        <trans-unit id="23b08d7df16abcdad774dace7145903fd2c37725" translate="yes" xml:space="preserve">
          <source>kill(3)</source>
          <target state="translated">kill(3)</target>
        </trans-unit>
        <trans-unit id="0ef25ae00f40c8471ee44b720036abcc25e96cee" translate="yes" xml:space="preserve">
          <source>kind</source>
          <target state="translated">kind</target>
        </trans-unit>
        <trans-unit id="8c834f073d4d1ae81525a98626e15bf01e8a71bd" translate="yes" xml:space="preserve">
          <source>kind of session by using the arguments &lt;code&gt;/fs&lt;/code&gt;, &lt;code&gt;/pm&lt;/code&gt; or &lt;code&gt;/win&lt;/code&gt; switches of the command &lt;code&gt;start&lt;/code&gt; (of</source>
          <target state="translated">引数使って、セッションの種類 &lt;code&gt;/fs&lt;/code&gt; 、 &lt;code&gt;/pm&lt;/code&gt; または &lt;code&gt;/win&lt;/code&gt; コマンドのスイッチ &lt;code&gt;start&lt;/code&gt; （の</target>
        </trans-unit>
        <trans-unit id="97accafb53377fd569bc568d3ffe8da985a568ef" translate="yes" xml:space="preserve">
          <source>know</source>
          <target state="translated">know</target>
        </trans-unit>
        <trans-unit id="dd21e4f392e3c1d0f7571bd4b34164706b1a24c3" translate="yes" xml:space="preserve">
          <source>know with absolute certainty</source>
          <target state="translated">確信犯的に知る</target>
        </trans-unit>
        <trans-unit id="263c649e2937afe094a801dc2f1f8ff91cdebe67" translate="yes" xml:space="preserve">
          <source>known_to_exist</source>
          <target state="translated">known_to_exist</target>
        </trans-unit>
        <trans-unit id="4a8d3339c1aceb6e28d45d54ff0a8e537fcb31e8" translate="yes" xml:space="preserve">
          <source>ksh527rt.zip</source>
          <target state="translated">ksh527rt.zip</target>
        </trans-unit>
        <trans-unit id="07c342be6e560e7f43842e2e21b774e61d85f047" translate="yes" xml:space="preserve">
          <source>l</source>
          <target state="translated">l</target>
        </trans-unit>
        <trans-unit id="f1d3a4821b3ae6a79eb5f221822b9ab2d204911f" translate="yes" xml:space="preserve">
          <source>l line</source>
          <target state="translated">L線</target>
        </trans-unit>
        <trans-unit id="1efcd379164dce9a0038192bc9daa12bb90a2875" translate="yes" xml:space="preserve">
          <source>l min+incr</source>
          <target state="translated">L最小インクリュ</target>
        </trans-unit>
        <trans-unit id="c679892892d08bc038ae68b526beade24763f439" translate="yes" xml:space="preserve">
          <source>l min-max</source>
          <target state="translated">L最小最大</target>
        </trans-unit>
        <trans-unit id="954e0c711507ccc8b1e1de4c1c5d1fcde1d755c2" translate="yes" xml:space="preserve">
          <source>l or lib</source>
          <target state="translated">LまたはLIB</target>
        </trans-unit>
        <trans-unit id="30fd16ea5ba5e0c0c9a9c505e894801cb84b63a3" translate="yes" xml:space="preserve">
          <source>l subname</source>
          <target state="translated">Lサブネーム</target>
        </trans-unit>
        <trans-unit id="937d72a6d04e3b09ed1d9622c2e0d11311b42ef9" translate="yes" xml:space="preserve">
          <source>l, lib, try or only</source>
          <target state="translated">l,lib,try,only</target>
        </trans-unit>
        <trans-unit id="64c65374dbab6fe3762748196d9d3a9610e2e5a9" translate="yes" xml:space="preserve">
          <source>label</source>
          <target state="translated">label</target>
        </trans-unit>
        <trans-unit id="d6658a9defae77f1757cb09d67b818757cd24486" translate="yes" xml:space="preserve">
          <source>lack</source>
          <target state="translated">lack</target>
        </trans-unit>
        <trans-unit id="ff1aba81fe7b089d82562a718b3ef9c7213d6698" translate="yes" xml:space="preserve">
          <source>langinfo(3)</source>
          <target state="translated">langinfo(3)</target>
        </trans-unit>
        <trans-unit id="931a14650ec8c7a040f2eefd85a897f9590dc3c8" translate="yes" xml:space="preserve">
          <source>langinfo.h</source>
          <target state="translated">langinfo.h</target>
        </trans-unit>
        <trans-unit id="e11523c5ff23fc1600aca2d8ee5adb542c5ce4b3" translate="yes" xml:space="preserve">
          <source>language</source>
          <target state="translated">language</target>
        </trans-unit>
        <trans-unit id="07fd754169cbc14f32d8424ed7ff8efb4e828cf8" translate="yes" xml:space="preserve">
          <source>language code</source>
          <target state="translated">言語コード</target>
        </trans-unit>
        <trans-unit id="465b3173cdddf0ac2d3fe73a33c9272b9bf2c24a" translate="yes" xml:space="preserve">
          <source>language_code</source>
          <target state="translated">language_code</target>
        </trans-unit>
        <trans-unit id="71d7102c1da6fbbced9f583db6704477f11ced56" translate="yes" xml:space="preserve">
          <source>language_territory</source>
          <target state="translated">language_territory</target>
        </trans-unit>
        <trans-unit id="0265a28be8ae180d9d231879cc522733ad7d4408" translate="yes" xml:space="preserve">
          <source>languages</source>
          <target state="translated">languages</target>
        </trans-unit>
        <trans-unit id="681fc6eb5f56e634885713141aba8abb18514f13" translate="yes" xml:space="preserve">
          <source>languages. After much time and even some actual thought, I decided on this system:</source>
          <target state="translated">言語。多くの時間と実際に考えた結果、私はこのシステムに決めました。</target>
        </trans-unit>
        <trans-unit id="2f1e0b0dc470f71151ce6738e9f7be38a0687dde" translate="yes" xml:space="preserve">
          <source>large enough to take one return value.</source>
          <target state="translated">1つの戻り値を取るのに十分な大きさの</target>
        </trans-unit>
        <trans-unit id="741ba1f0f1533ece02fff2b65d8dc483692f9691" translate="yes" xml:space="preserve">
          <source>larry (at) wall.org</source>
          <target state="translated">larry (at)wall.org</target>
        </trans-unit>
        <trans-unit id="213ed3ea453bf610688ff8041e0a3b7b6abb5e6e" translate="yes" xml:space="preserve">
          <source>last</source>
          <target state="translated">last</target>
        </trans-unit>
        <trans-unit id="e8f64f3100ea4050682372c45b81431f7602b47d" translate="yes" xml:space="preserve">
          <source>last ()</source>
          <target state="translated">さいご</target>
        </trans-unit>
        <trans-unit id="b30b6273b59dad174d1c29542b336882ec42ce47" translate="yes" xml:space="preserve">
          <source>last EXPR</source>
          <target state="translated">さいごのエクスプレス</target>
        </trans-unit>
        <trans-unit id="8d3bc2f9e8b72940971c417ffcb4831427b7f071" translate="yes" xml:space="preserve">
          <source>last LABEL</source>
          <target state="translated">ラストラベル</target>
        </trans-unit>
        <trans-unit id="6fbebf65db8c9e119786b6069e55d8a57449239d" translate="yes" xml:space="preserve">
          <source>last successful match</source>
          <target state="translated">最後の一戦</target>
        </trans-unit>
        <trans-unit id="6fc4291b99bc40e0a1e6058f237b9032e2a2cb98" translate="yes" xml:space="preserve">
          <source>last_error()</source>
          <target state="translated">last_error()</target>
        </trans-unit>
        <trans-unit id="00fbc6171a980d49983d7540ae3555bba18e93d2" translate="yes" xml:space="preserve">
          <source>last_fail_time</source>
          <target state="translated">last_fail_time</target>
        </trans-unit>
        <trans-unit id="9927656c39180c1b58a25a6e5b9e793fe5ee50ff" translate="yes" xml:space="preserve">
          <source>last_pass_time</source>
          <target state="translated">last_pass_time</target>
        </trans-unit>
        <trans-unit id="5472cbaa8c546c66c6e04788f611079a69754cb5" translate="yes" xml:space="preserve">
          <source>last_run_time</source>
          <target state="translated">last_run_time</target>
        </trans-unit>
        <trans-unit id="9d75d850f3f3d818e89c6942d5eea488730178de" translate="yes" xml:space="preserve">
          <source>lastop</source>
          <target state="translated">lastop</target>
        </trans-unit>
        <trans-unit id="5f4c3aef2b495c636e2cc379a207951285dc8022" translate="yes" xml:space="preserve">
          <source>laszlo.molnar@eth.ericsson.se</source>
          <target state="translated">laszlo.molnar@eth.ericsson.se</target>
        </trans-unit>
        <trans-unit id="d814f0bc875ffcc3481e7a8639e02ad440e780bc" translate="yes" xml:space="preserve">
          <source>later in this document.</source>
          <target state="translated">は、この文書で後述します。</target>
        </trans-unit>
        <trans-unit id="274b8ddb7a81c9534205e1b076dec123043a4c41" translate="yes" xml:space="preserve">
          <source>latin1</source>
          <target state="translated">latin1</target>
        </trans-unit>
        <trans-unit id="d54c2aa2f61603022c71493f093f0c718419ca13" translate="yes" xml:space="preserve">
          <source>layer</source>
          <target state="translated">layer</target>
        </trans-unit>
        <trans-unit id="388d8a5d86f4ff95a659c127ad269f1e2328643c" translate="yes" xml:space="preserve">
          <source>layer uses native &quot;handle&quot; IO rather than a Unix-like numeric file descriptor layer. Known to be buggy in this release (5.14).</source>
          <target state="translated">レイヤーは Unix ライクな数値ファイル記述子レイヤーではなく、ネイティブの &quot;ハンドル&quot; IO を使用します。このリリース (5.14)ではバグがあることが知られています。</target>
        </trans-unit>
        <trans-unit id="69925144f6b1b5e7652ea5f76ea9e367b1e3b8a1" translate="yes" xml:space="preserve">
          <source>layer uses native &quot;handle&quot; IO rather than a Unix-like numeric file descriptor layer. Known to be buggy in this release (5.30).</source>
          <target state="translated">レイヤーは Unix ライクな数値ファイル記述子レイヤーではなく、ネイティブの &quot;ハンドル&quot; IO を使用します。このリリース (5.30)ではバグがあることが知られています。</target>
        </trans-unit>
        <trans-unit id="32c83afd91cf806a6ff3b564b925281f6c9f7e81" translate="yes" xml:space="preserve">
          <source>layer uses the native &quot;handle&quot; IO rather than the unix-like numeric file descriptor layer. Known to be buggy as of Perl 5.8.2.</source>
          <target state="translated">レイヤーは、Unix ライクな数値ファイル記述子レイヤーではなく、ネイティブの &quot;handle&quot; IO を使用します。Perl 5.8.2 以降、バグがあることが知られています。</target>
        </trans-unit>
        <trans-unit id="9f422a843a976db035a8ac6578fed83f92e8401c" translate="yes" xml:space="preserve">
          <source>layer uses the native &quot;handle&quot; IO rather than the unix-like numeric file descriptor layer. Known to be buggy as of perl 5.8.2.</source>
          <target state="translated">レイヤーは、Unix ライクな数値ファイル記述子レイヤーではなく、ネイティブの &quot;handle&quot; IO を使用します。perl 5.8.2 の時点でバグがあることが知られています。</target>
        </trans-unit>
        <trans-unit id="668165d561c62f330e96b629c4cdbaaa6a959900" translate="yes" xml:space="preserve">
          <source>layers</source>
          <target state="translated">layers</target>
        </trans-unit>
        <trans-unit id="8b7f8bf057cb24e96f31d585928858723fd524ab" translate="yes" xml:space="preserve">
          <source>laziness</source>
          <target state="translated">laziness</target>
        </trans-unit>
        <trans-unit id="13967fb4632602a54191c579c10f5b98d6f62cc2" translate="yes" xml:space="preserve">
          <source>lazy_validation -- if true, new will attempt to convert the given metadata to version 2 before attempting to validate it. This means than any fixable errors will be handled by CPAN::Meta::Converter before validation. (Note that this might result in invalid optional data being silently dropped.) The default is false.</source>
          <target state="translated">lazy_validation --trueの場合、newは検証を試みる前に与えられたメタデータをバージョン2に変換しようとします。これは、修正可能なエラーがあれば、検証の前にCPAN::Meta::Converterによって処理されることを意味します。(この結果、無効なオプションデータが黙って削除される可能性があることに注意してください)。デフォルトはfalseである。</target>
        </trans-unit>
        <trans-unit id="7a01ac075bef9978a02e0d617581075e7ef656ff" translate="yes" xml:space="preserve">
          <source>lc</source>
          <target state="translated">lc</target>
        </trans-unit>
        <trans-unit id="981c93d3cfc093341a5e23cfb2960d27a0bd9b18" translate="yes" xml:space="preserve">
          <source>lc EXPR</source>
          <target state="translated">LCEXPR</target>
        </trans-unit>
        <trans-unit id="03dac16c5a7ea4584e45233fb1fe739d834da705" translate="yes" xml:space="preserve">
          <source>lcfirst</source>
          <target state="translated">lcfirst</target>
        </trans-unit>
        <trans-unit id="4bf10c7c0cf1b946d82e323d34632248cbe61a5a" translate="yes" xml:space="preserve">
          <source>lcfirst EXPR</source>
          <target state="translated">エルシーファーストイーエックスピーアール</target>
        </trans-unit>
        <trans-unit id="b9a7e2303793d6c9a795bf7a60a5c58ebb7bae1d" translate="yes" xml:space="preserve">
          <source>ld.script</source>
          <target state="translated">ld.script</target>
        </trans-unit>
        <trans-unit id="9dadc7d7421be45676ba893187d94fccb9b479c9" translate="yes" xml:space="preserve">
          <source>ld.so.1: ./perl: fatal: relocation error:</source>
          <target state="translated">ld.so.1:./perl:fatal:再配置エラー。</target>
        </trans-unit>
        <trans-unit id="7c264dfa9be45b37c752ba0ccbbaeee5be25302f" translate="yes" xml:space="preserve">
          <source>ldopts()</source>
          <target state="translated">ldopts()</target>
        </trans-unit>
        <trans-unit id="593b743b207e10ff55ec63e71a46c07909d0880a" translate="yes" xml:space="preserve">
          <source>le</source>
          <target state="translated">le</target>
        </trans-unit>
        <trans-unit id="b0cb272d7de942d6d35c46cbfcd082d4b2da1dda" translate="yes" xml:space="preserve">
          <source>leave_scope</source>
          <target state="translated">leave_scope</target>
        </trans-unit>
        <trans-unit id="2543258632dcde1c9dda11f400265f9020598acd" translate="yes" xml:space="preserve">
          <source>leaves drive as it is.</source>
          <target state="translated">は、そのままドライブを残します。</target>
        </trans-unit>
        <trans-unit id="bee3025990c10dd732e7c46a8b2b715a1dcda3b5" translate="yes" xml:space="preserve">
          <source>leaves the &lt;code&gt;%hash&lt;/code&gt; empty rather than with its original contents.</source>
          <target state="translated">葉 &lt;code&gt;%hash&lt;/code&gt; 元の内容ではなく、空にします。</target>
        </trans-unit>
        <trans-unit id="f525dc5f38141e1d280aac7c097af3beccb7ab4a" translate="yes" xml:space="preserve">
          <source>leaving effective %s failed</source>
          <target state="translated">効果的な %s を残して失敗しました。</target>
        </trans-unit>
        <trans-unit id="12c0f1fbadc4046b5f2bb9e063b227ef8750d9d6" translate="yes" xml:space="preserve">
          <source>left</source>
          <target state="translated">left</target>
        </trans-unit>
        <trans-unit id="8ee1e39c53b227510d6d92eac8e310981dc4410a" translate="yes" xml:space="preserve">
          <source>left shift</source>
          <target state="translated">左シフト</target>
        </trans-unit>
        <trans-unit id="4737fa4317b3dbfbe0793f4d77a61ff4da1af746" translate="yes" xml:space="preserve">
          <source>leftmost</source>
          <target state="translated">leftmost</target>
        </trans-unit>
        <trans-unit id="6c93d272eeb53451e822cff509f656c4ce93621c" translate="yes" xml:space="preserve">
          <source>leftmost longest</source>
          <target state="translated">最左端</target>
        </trans-unit>
        <trans-unit id="d7f0a5471df89b0016218fc6a956906a24570b06" translate="yes" xml:space="preserve">
          <source>legal_ref_keys</source>
          <target state="translated">legal_ref_keys</target>
        </trans-unit>
        <trans-unit id="2f936e05c77962997bd534a0c03a5b28d0a9e6e7" translate="yes" xml:space="preserve">
          <source>legitimately return &lt;code&gt;-1&lt;/code&gt; . The proper way to handle such calls is to assign &lt;code&gt;$!=0&lt;/code&gt; before the call, then check the value of &lt;code&gt;$!&lt;/code&gt; if &lt;code&gt;&lt;a href=&quot;functions/syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt; returns &lt;code&gt;-1&lt;/code&gt; .</source>
          <target state="translated">正当に &lt;code&gt;-1&lt;/code&gt; を返します。このような呼び出しを処理する適切な方法は、呼び出しの前に &lt;code&gt;$!=0&lt;/code&gt; を割り当ててから、$！の値を確認することです &lt;code&gt;$!&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;functions/syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt; が &lt;code&gt;-1&lt;/code&gt; を返す場合。</target>
        </trans-unit>
        <trans-unit id="2fb3cd5ef7f4ba25ee7e799860a861432c55551d" translate="yes" xml:space="preserve">
          <source>legitimately return &lt;code&gt;-1&lt;/code&gt; . The proper way to handle such calls is to assign &lt;code&gt;$!=0&lt;/code&gt; before the call, then check the value of &lt;code&gt;$!&lt;/code&gt; if &lt;code&gt;&lt;a href=&quot;syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt; returns &lt;code&gt;-1&lt;/code&gt; .</source>
          <target state="translated">正当に &lt;code&gt;-1&lt;/code&gt; を返します。このような呼び出しを処理する適切な方法は、呼び出しの前に &lt;code&gt;$!=0&lt;/code&gt; を割り当ててから、$！の値を確認することです &lt;code&gt;$!&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt; が &lt;code&gt;-1&lt;/code&gt; を返す場合。</target>
        </trans-unit>
        <trans-unit id="3046e02d8b200092585da71a54e7e1fe44f2d12d" translate="yes" xml:space="preserve">
          <source>legitimately return &lt;code&gt;-1&lt;/code&gt;. The proper way to handle such calls is to assign &lt;code&gt;$! = 0&lt;/code&gt; before the call, then check the value of &lt;a href=&quot;perlvar#%24%21&quot;&gt;&lt;code&gt;$!&lt;/code&gt;&lt;/a&gt; if &lt;a href=&quot;#syscall-NUMBER%2C-LIST&quot;&gt;&lt;code&gt;syscall&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;-1&lt;/code&gt;.</source>
          <target state="translated">合法的に &lt;code&gt;-1&lt;/code&gt; を返します。このような呼び出しを処理する適切な方法は、 &lt;code&gt;$! = 0&lt;/code&gt; を割り当てることです。呼び出しの前に= 0、次に&lt;a href=&quot;perlvar#%24%21&quot;&gt; &lt;code&gt;$!&lt;/code&gt; &lt;/a&gt;の値を確認してください！&lt;a href=&quot;#syscall-NUMBER%2C-LIST&quot;&gt; &lt;code&gt;syscall&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;-1&lt;/code&gt; を返す場合。</target>
        </trans-unit>
        <trans-unit id="a573b540d2dde90ba6da3b9d6286c8ec60c10044" translate="yes" xml:space="preserve">
          <source>len</source>
          <target state="translated">len</target>
        </trans-unit>
        <trans-unit id="3d54973f528b01019a58a52d34d518405a01b891" translate="yes" xml:space="preserve">
          <source>length</source>
          <target state="translated">length</target>
        </trans-unit>
        <trans-unit id="53200d1265f64527de5997006b46bed16c623ba8" translate="yes" xml:space="preserve">
          <source>length EXPR</source>
          <target state="translated">長さEXPR</target>
        </trans-unit>
        <trans-unit id="12126f713e2c6e2b378ad7286a6bc4fa4da0d2f3" translate="yes" xml:space="preserve">
          <source>length()</source>
          <target state="translated">length()</target>
        </trans-unit>
        <trans-unit id="e8195dffcb69e38e70c7cc8982585100f6c660c6" translate="yes" xml:space="preserve">
          <source>length() used on %s (did you mean &quot;scalar(%s)&quot;?)</source>
          <target state="translated">length()が %s で使用されています (「スカラ(%s)」という意味ですか?)。</target>
        </trans-unit>
        <trans-unit id="17ad2831729fd442f864db7688784dfbf7955cba" translate="yes" xml:space="preserve">
          <source>length-item</source>
          <target state="translated">length-item</target>
        </trans-unit>
        <trans-unit id="f04617306272bb208164dc3d04a90815f7258f2c" translate="yes" xml:space="preserve">
          <source>length/code after end of string in unpack</source>
          <target state="translated">unpack での文字列の末尾の長さ/コード</target>
        </trans-unit>
        <trans-unit id="0b439cf4e10f87567e60f4b7818ecd57383dc7f0" translate="yes" xml:space="preserve">
          <source>less</source>
          <target state="translated">less</target>
        </trans-unit>
        <trans-unit id="78efad5671f5e78b02faa6a4a581a424dceb0730" translate="yes" xml:space="preserve">
          <source>less - perl pragma to request less of something</source>
          <target state="translated">less-何かより少ない量を要求する perl プラグマ</target>
        </trans-unit>
        <trans-unit id="be6a0e587d6086a3fb49e8791d9db38db766f7d6" translate="yes" xml:space="preserve">
          <source>less cruft</source>
          <target state="translated">少ない傷み</target>
        </trans-unit>
        <trans-unit id="fc9ddaa5cc0255c64b83a8bdba662466b3a588af" translate="yes" xml:space="preserve">
          <source>less strict</source>
          <target state="translated">厳し目</target>
        </trans-unit>
        <trans-unit id="02f3496dc7765194620a1d6fcb556b38dd666197" translate="yes" xml:space="preserve">
          <source>less time</source>
          <target state="translated">少ない時間</target>
        </trans-unit>
        <trans-unit id="4c213394c05bbaa2e6986dee2a278be573c9f3eb" translate="yes" xml:space="preserve">
          <source>less(1) manpage</source>
          <target state="translated">少ない(1)マンページ</target>
        </trans-unit>
        <trans-unit id="111d45df9732173914935953b636771bd1fe2f90" translate="yes" xml:space="preserve">
          <source>lets us evaluate individual Perl strings, and then extract variables for coercion into C types. The following program,</source>
          <target state="translated">これにより、個々のPerl文字列を評価し、強制的に変数をC型に抽出することができます。以下のプログラムです。</target>
        </trans-unit>
        <trans-unit id="bef21e9bfcf9fab0a5aebd46a735efe5434da96b" translate="yes" xml:space="preserve">
          <source>letters</source>
          <target state="translated">letters</target>
        </trans-unit>
        <trans-unit id="ad60c535ff88e85bf0254452fe3934f24e9668d5" translate="yes" xml:space="preserve">
          <source>level</source>
          <target state="translated">level</target>
        </trans-unit>
        <trans-unit id="bb1350a57d9ad1cedc41dbe6c123e723b0969cc3" translate="yes" xml:space="preserve">
          <source>level &lt;code&gt;PerlIO *&lt;/code&gt; is a pointer to a &lt;code&gt;PerlIOl *&lt;/code&gt; - i.e. a pointer to a pointer to the struct. This allows the application level &lt;code&gt;PerlIO *&lt;/code&gt; to remain constant while the actual &lt;code&gt;PerlIOl *&lt;/code&gt; underneath changes. (Compare perl's &lt;code&gt;SV *&lt;/code&gt; which remains constant while its &lt;code&gt;sv_any&lt;/code&gt; field changes as the scalar's type changes.) An IO stream is then in general represented as a pointer to this linked-list of &quot;layers&quot;.</source>
          <target state="translated">レベル &lt;code&gt;PerlIO *&lt;/code&gt; は、 &lt;code&gt;PerlIOl *&lt;/code&gt; へのポインターです。つまり、構造体へのポインターへのポインターです。これにより、アプリケーションレベルの &lt;code&gt;PerlIO *&lt;/code&gt; を一定に保ちながら、実際の &lt;code&gt;PerlIOl *&lt;/code&gt; を変更することができます。（perlの &lt;code&gt;SV *&lt;/code&gt; を比較してください。これは、スカラーの型が変化しても &lt;code&gt;sv_any&lt;/code&gt; フィールドが変化する間、一定のままです。）IOストリームは、一般に、この「レイヤー」のリンクリストへのポインターとして表されます。</target>
        </trans-unit>
        <trans-unit id="91873af219b26b1e542e144fbd7d6746e5a7b73a" translate="yes" xml:space="preserve">
          <source>level =&amp;gt; $int</source>
          <target state="translated">レベル=&amp;gt; $ int</target>
        </trans-unit>
        <trans-unit id="6a34b2d4b71d3ddc27cc52fb35135ac1c5dbe44f" translate="yes" xml:space="preserve">
          <source>level. &lt;code&gt;&lt;a href=&quot;functions/lock&quot;&gt;lock(\$a)&lt;/a&gt;&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;functions/lock&quot;&gt;lock($a)&lt;/a&gt;&lt;/code&gt;, while &lt;code&gt;&lt;a href=&quot;functions/lock&quot;&gt;lock(\\$a)&lt;/a&gt;&lt;/code&gt; is not.</source>
          <target state="translated">レベル。 &lt;code&gt;&lt;a href=&quot;functions/lock&quot;&gt;lock(\$a)&lt;/a&gt;&lt;/code&gt; と等価である &lt;code&gt;&lt;a href=&quot;functions/lock&quot;&gt;lock($a)&lt;/a&gt;&lt;/code&gt; ながら、 &lt;code&gt;&lt;a href=&quot;functions/lock&quot;&gt;lock(\\$a)&lt;/a&gt;&lt;/code&gt; ではありません。</target>
        </trans-unit>
        <trans-unit id="4d49dd56df51cb8b9f78b1f4c7f4b3f3d20a730a" translate="yes" xml:space="preserve">
          <source>level. &lt;code&gt;lock(\$a)&lt;/code&gt; is equivalent to &lt;code&gt;lock($a)&lt;/code&gt;, while &lt;code&gt;lock(\\$a)&lt;/code&gt; is not.</source>
          <target state="translated">レベル。 &lt;code&gt;lock(\$a)&lt;/code&gt; と等価である &lt;code&gt;lock($a)&lt;/code&gt; ながら、 &lt;code&gt;lock(\\$a)&lt;/code&gt; ではありません。</target>
        </trans-unit>
        <trans-unit id="743e8359279cf7f0547f8ae5b735a7cf348aa31e" translate="yes" xml:space="preserve">
          <source>level:</source>
          <target state="translated">level:</target>
        </trans-unit>
        <trans-unit id="f560237bb64a4ed60f6ec30a321ae364eeccfc8d" translate="yes" xml:space="preserve">
          <source>levels deep, as if the &lt;code&gt;dumpDepth&lt;/code&gt; option had been temporarily set to</source>
          <target state="translated">&lt;code&gt;dumpDepth&lt;/code&gt; オプションが一時的に設定されているかのように、レベルが深い</target>
        </trans-unit>
        <trans-unit id="87c2760ff0fd836e950d1f3773814e8602f382f6" translate="yes" xml:space="preserve">
          <source>lewart!at!uiuc.edu</source>
          <target state="translated">lewart!at!uiuc.edu</target>
        </trans-unit>
        <trans-unit id="56567257f128c1bc7f73210f9ba1649c571c7524" translate="yes" xml:space="preserve">
          <source>lex_bufutf8</source>
          <target state="translated">lex_bufutf8</target>
        </trans-unit>
        <trans-unit id="75b63f1b311bf3cbcc2aa540527e7f9868e76842" translate="yes" xml:space="preserve">
          <source>lex_discard_to</source>
          <target state="translated">lex_discard_to</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
