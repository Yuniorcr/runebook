<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="458e14f71182f02f4a806b4f96c30f94a69e2f5d" translate="yes" xml:space="preserve">
          <source>This is similar to the C function &lt;code&gt;pause()&lt;/code&gt; , which suspends the execution of the current process until a signal is received.</source>
          <target state="translated">これは、シグナルを受信するまで現在のプロセスの実行を一時停止するC関数 &lt;code&gt;pause()&lt;/code&gt; に似ています。</target>
        </trans-unit>
        <trans-unit id="e41f365bbfbbe805fa9664e5da8fbc5e5e99f55a" translate="yes" xml:space="preserve">
          <source>This is similar to the C function &lt;code&gt;pause()&lt;/code&gt;, which suspends the execution of the current process until a signal is received.</source>
          <target state="translated">これは、シグナルが受信されるまで現在のプロセスの実行を一時停止するC関数 &lt;code&gt;pause()&lt;/code&gt; に似ています。</target>
        </trans-unit>
        <trans-unit id="b5c0406fc055d4e959d81bed9920f88092d08404" translate="yes" xml:space="preserve">
          <source>This is similar to the C function &lt;code&gt;setpgid()&lt;/code&gt; for setting the process group identifier of the current process.</source>
          <target state="translated">これは、現在のプロセスのプロセスグループ識別子を設定するためのC関数 &lt;code&gt;setpgid()&lt;/code&gt; に似ています。</target>
        </trans-unit>
        <trans-unit id="b56c5c880f143b4a031f787b44269acb561de2d9" translate="yes" xml:space="preserve">
          <source>This is similar to the C function &lt;code&gt;tcdrain()&lt;/code&gt; for draining the output queue of its argument stream.</source>
          <target state="translated">これは、引数ストリームの出力キューを &lt;code&gt;tcdrain()&lt;/code&gt; するためのC関数tcdrain（）に似ています。</target>
        </trans-unit>
        <trans-unit id="fba332acc7267461256bd4bbecd53d5cd07ab313" translate="yes" xml:space="preserve">
          <source>This is similar to the C function &lt;code&gt;tcflow()&lt;/code&gt; for controlling the flow of its argument stream.</source>
          <target state="translated">これは、引数ストリームのフローを制御するC関数 &lt;code&gt;tcflow()&lt;/code&gt; に似ています。</target>
        </trans-unit>
        <trans-unit id="2235c85d6f3847cd44159a3753a652d29703f3f5" translate="yes" xml:space="preserve">
          <source>This is similar to the C function &lt;code&gt;tcflush()&lt;/code&gt; for flushing the I/O buffers of its argument stream.</source>
          <target state="translated">これは、引数ストリームのI / OバッファーをフラッシュするためのC関数 &lt;code&gt;tcflush()&lt;/code&gt; に似ています。</target>
        </trans-unit>
        <trans-unit id="32c5db3dfe196b930ba8a6acd29334ab37d33b0e" translate="yes" xml:space="preserve">
          <source>This is similar to the C function &lt;code&gt;tcsendbreak()&lt;/code&gt; for sending a break on its argument stream.</source>
          <target state="translated">これは、引数ストリームにブレークを送信するためのC関数 &lt;code&gt;tcsendbreak()&lt;/code&gt; に似ています。</target>
        </trans-unit>
        <trans-unit id="d51d66ac3fd31e0526e015560112bf7a83d1d7e3" translate="yes" xml:space="preserve">
          <source>This is similar to the C function &lt;code&gt;tcsetpgrp()&lt;/code&gt; for setting the process group identifier of the foreground process group of the controlling terminal.</source>
          <target state="translated">これは、制御端末のフォアグラウンドプロセスグループのプロセスグループ識別子を設定するためのC関数 &lt;code&gt;tcsetpgrp()&lt;/code&gt; に似ています。</target>
        </trans-unit>
        <trans-unit id="66ffda00414691432da9fbf5e0758036abbf4c87" translate="yes" xml:space="preserve">
          <source>This is similar to the C function, except that it can apply to a single character or to a whole string, and currently operates as if the locale always is &quot;C&quot;. Consider using the &lt;code&gt;&lt;a href=&quot;functions/uc&quot;&gt;uc()&lt;/a&gt;&lt;/code&gt; function, see &lt;a href=&quot;functions/uc&quot;&gt;uc&lt;/a&gt;, or the equivalent &lt;code&gt;\U&lt;/code&gt; operator inside doublequotish strings.</source>
          <target state="translated">これはC関数に似ていますが、単一の文字または文字列全体に適用でき、現在のところロケールが常に「C」であるかのように動作します。 &lt;code&gt;&lt;a href=&quot;functions/uc&quot;&gt;uc()&lt;/a&gt;&lt;/code&gt; 関数の使用を検討してください。二重引用符内の&lt;a href=&quot;functions/uc&quot;&gt;uc&lt;/a&gt;または同等の &lt;code&gt;\U&lt;/code&gt; 演算子を参照してください。</target>
        </trans-unit>
        <trans-unit id="8eda6f0f736dfb783b722b66835ba379ce58a17f" translate="yes" xml:space="preserve">
          <source>This is similar to using T_OPAQUEPTR but can be used to process more than one element.</source>
          <target state="translated">これはT_OPAQUEPTRを使用するのと似ていますが、複数の要素を処理するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="a28122b9a555130e7576bc2e3eaca06e448a1d61" translate="yes" xml:space="preserve">
          <source>This is similar to what &lt;a href=&quot;open&quot;&gt;open&lt;/a&gt; pragma does.</source>
          <target state="translated">これは何に似ている&lt;a href=&quot;open&quot;&gt;オープン&lt;/a&gt;プラグマはありません。</target>
        </trans-unit>
        <trans-unit id="bd2544ef4a094110db1a1743d7560cf9401d79c3" translate="yes" xml:space="preserve">
          <source>This is slightly more performant than making four separate checks in four separate &lt;code&gt;mXPUSHi()&lt;/code&gt; calls.</source>
          <target state="translated">これは、4つの別々の &lt;code&gt;mXPUSHi()&lt;/code&gt; 呼び出しで4つの別々のチェックを行うよりもわずかにパフォーマンスが高くなります。</target>
        </trans-unit>
        <trans-unit id="a070e7d29b17578c9c82db6eb47bc8205a22821e" translate="yes" xml:space="preserve">
          <source>This is so that you can write loops like:</source>
          <target state="translated">のようなループを書けるようにするためです。</target>
        </trans-unit>
        <trans-unit id="5bb4dbbe89d426f58f9d96c7270c7af2e03e5d56" translate="yes" xml:space="preserve">
          <source>This is something you, the programmer, has to keep track of; sorry. You could consider adopting a kind of &quot;Hungarian notation&quot; to help with this.</source>
          <target state="translated">これはプログラマーであるあなたが記録しておかなければならないことです。これを助けるために、一種の &quot;ハンガリー語表記法 &quot;を採用することを検討してみてはいかがでしょうか。</target>
        </trans-unit>
        <trans-unit id="f62086875f698e88f1673ff191123d1ebe166ce0" translate="yes" xml:space="preserve">
          <source>This is somewhat equivalent to the C-style switch statement's fallthrough functionality (not to be confused with</source>
          <target state="translated">これは、C-style switch文のフォールスルー機能とやや同等のものです。</target>
        </trans-unit>
        <trans-unit id="7039ef5c59f1a390b0357d66a81e16efc5deefb4" translate="yes" xml:space="preserve">
          <source>This is somewhat like &lt;code&gt;SUPER&lt;/code&gt; , but it uses the C3 method resolution order to get better consistency in multiple inheritance situations. Note that while inheritance in general follows whichever MRO is in effect for the given class, &lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next::method&lt;/a&gt;&lt;/code&gt; only uses the C3 MRO.</source>
          <target state="translated">これは &lt;code&gt;SUPER&lt;/code&gt; に似ていますが、C3メソッドの解決順序を使用して、複数の継承状況での一貫性を向上させます。継承は一般に、指定されたクラスに対して有効なMROのいずれかに従いますが、 &lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next::method&lt;/a&gt;&lt;/code&gt; はC3 MROのみを使用することに注意してください。</target>
        </trans-unit>
        <trans-unit id="95132fa5d3b646da8b789212be7047604909e342" translate="yes" xml:space="preserve">
          <source>This is somewhat like &lt;code&gt;SUPER&lt;/code&gt;, but it uses the C3 method resolution order to get better consistency in multiple inheritance situations. Note that while inheritance in general follows whichever MRO is in effect for the given class, &lt;code&gt;next::method&lt;/code&gt; only uses the C3 MRO.</source>
          <target state="translated">これは &lt;code&gt;SUPER&lt;/code&gt; にいくぶん似ていますが、C3メソッドの解決順序を使用して、複数の継承状況で一貫性を高めます。一般に、継承は特定のクラスに対して有効なMROに従いますが、 &lt;code&gt;next::method&lt;/code&gt; はC3MROのみを使用することに注意してください。</target>
        </trans-unit>
        <trans-unit id="a6e2c8909db8a95dab398add127a82ec5182c9bc" translate="yes" xml:space="preserve">
          <source>This is still a symbolic reference, and is still saddled with the problems enumerated above. It would be far better to write:</source>
          <target state="translated">これはまだ象徴的な参照であり、上に列挙した問題を抱えたままです。書いた方がはるかに良いでしょう。</target>
        </trans-unit>
        <trans-unit id="dc230bd2bfa305e90c52714b5b02997ea62329f3" translate="yes" xml:space="preserve">
          <source>This is subroutine definition, not a real function</source>
          <target state="translated">これはサブルーチンの定義であり、実関数ではありません。</target>
        </trans-unit>
        <trans-unit id="b1e77ff60ef4ac8debe40c75ba809e724ed8905b" translate="yes" xml:space="preserve">
          <source>This is substantially different than the behavior of &lt;code&gt;SUPER&lt;/code&gt; under complex multiple inheritance. (This becomes obvious when one realizes that the common superclasses in the C3 linearizations of a given class and one of its parents will not always be ordered the same for both.)</source>
          <target state="translated">これは、複雑な多重継承における &lt;code&gt;SUPER&lt;/code&gt; の動作とは実質的に異なります。（これは、特定のクラスのC3線形化の共通のスーパークラスとその親の1つが常に同じ順序で並んでいるとは限らないことに気付いたときに明らかになります。）</target>
        </trans-unit>
        <trans-unit id="23e17e01cd60708587cb31d9ff8b363ecd66c020" translate="yes" xml:space="preserve">
          <source>This is sufficient because non-XS modules install only &quot;.pm&quot; files and (sometimes) pod and/or man documentation. No re-linking of the perl binary is needed to build, install or use non-XS modules.</source>
          <target state="translated">非XS モジュールは &quot;.pm&quot; ファイルと (時には)pod や man ドキュメントをインストールするだけなので、これで十分です。非XS モジュールのビルド、インストール、使用には perl バイナリの再リンクは必要ありません。</target>
        </trans-unit>
        <trans-unit id="0a11b4a723aa89f435867b4b7aabf89fab7f0ed5" translate="yes" xml:space="preserve">
          <source>This is suitable for many purposes, but the &lt;a href=&quot;Unicode::LineBreak&quot;&gt;Unicode::LineBreak&lt;/a&gt; module is available on CPAN that provides many more features, including customization.</source>
          <target state="translated">これは多くの目的に適していますが、&lt;a href=&quot;Unicode::LineBreak&quot;&gt;Unicode :: LineBreak&lt;/a&gt;モジュールはCPANで利用可能であり、カスタマイズを含むさらに多くの機能を提供します。</target>
        </trans-unit>
        <trans-unit id="be5a4fb32d8ac695ed2b298f81d0f20fcb10d969" translate="yes" xml:space="preserve">
          <source>This is supported on all versions of perl.</source>
          <target state="translated">これはPerlのすべてのバージョンでサポートされています。</target>
        </trans-unit>
        <trans-unit id="62efbec7287d71078acc23cdfe299bffb8e3dad9" translate="yes" xml:space="preserve">
          <source>This is supported since 6.76</source>
          <target state="translated">これは 6.76 以降でサポートされています。</target>
        </trans-unit>
        <trans-unit id="176d1979619b89ab80bba77f3ee47c56e59cc580" translate="yes" xml:space="preserve">
          <source>This is supported since 7.26</source>
          <target state="translated">これは 7.26 以降でサポートされています。</target>
        </trans-unit>
        <trans-unit id="0c58a399144492e3d85b2b92893dc4441d4f1a4b" translate="yes" xml:space="preserve">
          <source>This is synonymous with:</source>
          <target state="translated">と同義です。</target>
        </trans-unit>
        <trans-unit id="f36d5338bbc7b7f385e72503a212aefb9d4b21f2" translate="yes" xml:space="preserve">
          <source>This is the &quot;branch reset&quot; pattern, which has the special property that the capture groups are numbered from the same starting point in each alternation branch. It is available starting from perl 5.10.0.</source>
          <target state="translated">これは「ブランチリセット」パターンで、キャプチャグループにはそれぞれの交代ブランチで同じ開始点から番号が振られるという特殊な性質を持っています。perl 5.10.0から利用可能です。</target>
        </trans-unit>
        <trans-unit id="19421af57fe146a06eb56f9f30349ebe8341f96d" translate="yes" xml:space="preserve">
          <source>This is the &quot;make test&quot; result from the said combination:</source>
          <target state="translated">これは、当該組み合わせによる「メークテスト」の結果です。</target>
        </trans-unit>
        <trans-unit id="62ca18cb3607997061d57b9fd320ab0f041516b6" translate="yes" xml:space="preserve">
          <source>This is the &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; SV. Always refer to this as &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt; .</source>
          <target state="translated">これは &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; SVです。常に &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt; として参照してください。</target>
        </trans-unit>
        <trans-unit id="96cfbbe2d84ca5bfe80092e6f9ad37226fb61e75" translate="yes" xml:space="preserve">
          <source>This is the &lt;code&gt;false&lt;/code&gt; SV. See &lt;code&gt;&lt;a href=&quot;#PL_sv_yes&quot;&gt;&quot;PL_sv_yes&quot;&lt;/a&gt;&lt;/code&gt;. Always refer to this as &lt;code&gt;&amp;amp;PL_sv_no&lt;/code&gt;.</source>
          <target state="translated">これは &lt;code&gt;false&lt;/code&gt; SVです。 &lt;code&gt;&lt;a href=&quot;#PL_sv_yes&quot;&gt;&quot;PL_sv_yes&quot;&lt;/a&gt;&lt;/code&gt; 参照してください。これは常に &lt;code&gt;&amp;amp;PL_sv_no&lt;/code&gt; と呼びます。</target>
        </trans-unit>
        <trans-unit id="f4760f68814e5682fe3f5f10b06ed0b34903e395" translate="yes" xml:space="preserve">
          <source>This is the &lt;code&gt;false&lt;/code&gt; SV. See &lt;code&gt;PL_sv_yes&lt;/code&gt; . Always refer to this as &lt;code&gt;&amp;amp;PL_sv_no&lt;/code&gt; .</source>
          <target state="translated">これは &lt;code&gt;false&lt;/code&gt; SVです。 &lt;code&gt;PL_sv_yes&lt;/code&gt; を参照してください。常に &lt;code&gt;&amp;amp;PL_sv_no&lt;/code&gt; として参照してください。</target>
        </trans-unit>
        <trans-unit id="e139735f50d334d273ed9e56bd61f363d8c88b31" translate="yes" xml:space="preserve">
          <source>This is the &lt;code&gt;true&lt;/code&gt; SV. See &lt;code&gt;&lt;a href=&quot;#PL_sv_no&quot;&gt;&quot;PL_sv_no&quot;&lt;/a&gt;&lt;/code&gt;. Always refer to this as &lt;code&gt;&amp;amp;PL_sv_yes&lt;/code&gt;.</source>
          <target state="translated">これが &lt;code&gt;true&lt;/code&gt; SVです。 &lt;code&gt;&lt;a href=&quot;#PL_sv_no&quot;&gt;&quot;PL_sv_no&quot;&lt;/a&gt;&lt;/code&gt; 参照してください。これは常に &lt;code&gt;&amp;amp;PL_sv_yes&lt;/code&gt; と呼びます。</target>
        </trans-unit>
        <trans-unit id="69477e80b4da6549c4778882346d8c2f1a054a61" translate="yes" xml:space="preserve">
          <source>This is the &lt;code&gt;true&lt;/code&gt; SV. See &lt;code&gt;PL_sv_no&lt;/code&gt; . Always refer to this as &lt;code&gt;&amp;amp;PL_sv_yes&lt;/code&gt; .</source>
          <target state="translated">これが &lt;code&gt;true&lt;/code&gt; SVです。 &lt;code&gt;PL_sv_no&lt;/code&gt; を参照してください。常に &lt;code&gt;&amp;amp;PL_sv_yes&lt;/code&gt; としてこれを参照してください。</target>
        </trans-unit>
        <trans-unit id="81478e9ca7d8718a5ec449fbb46281e67cc22245" translate="yes" xml:space="preserve">
          <source>This is the &lt;code&gt;undef&lt;/code&gt; SV. Always refer to this as &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt;.</source>
          <target state="translated">これは &lt;code&gt;undef&lt;/code&gt; SVです。これを常に &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt; と呼びます。</target>
        </trans-unit>
        <trans-unit id="7194017d84a1b8d81ca4290d44c59af66198e5c2" translate="yes" xml:space="preserve">
          <source>This is the Perl 6 &quot;commit pattern&quot; &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; or &lt;code&gt;:::&lt;/code&gt;. It's a zero-width pattern similar to &lt;code&gt;(*SKIP)&lt;/code&gt; , except that when backtracked into on failure it causes the match to fail outright. No further attempts to find a valid match by advancing the start pointer will occur again. For example,</source>
          <target state="translated">これは、Perl 6の「コミットパターン」 &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; または &lt;code&gt;:::&lt;/code&gt; です。これは &lt;code&gt;(*SKIP)&lt;/code&gt; に似たゼロ幅のパターンですが、失敗時にバックトラックされると、一致が完全に失敗します。開始ポインタを進めることによって有効な一致を見つけるためのこれ以上の試みは再び発生しません。例えば、</target>
        </trans-unit>
        <trans-unit id="6d8e4baf0d85adfeec247ab733be39725f479200" translate="yes" xml:space="preserve">
          <source>This is the Perl patch level, a numeric change identifier, as defined by whichever source code maintenance system is used to maintain the patches; currently Perforce. It does not correlate with the Perl version numbers or the maintenance versus development dichotomy except by also being increasing.</source>
          <target state="translated">これは Perl のパッチレベルであり、パッチを保守するために使用されるソースコード保守システム(現在は Perforce)によって定義された数値的な変更識別子です。これは、Perl のバージョン番号やメンテナンス対開発の二分法とは相関がありません。</target>
        </trans-unit>
        <trans-unit id="c3d3b33b321b373988f93e8459b8ad217922301e" translate="yes" xml:space="preserve">
          <source>This is the Raku &quot;commit pattern&quot; &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; or &lt;code&gt;:::&lt;/code&gt;. It's a zero-width pattern similar to &lt;code&gt;(*SKIP)&lt;/code&gt;, except that when backtracked into on failure it causes the match to fail outright. No further attempts to find a valid match by advancing the start pointer will occur again. For example,</source>
          <target state="translated">これは楽の「コミットパターン」 &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; または &lt;code&gt;:::&lt;/code&gt; です。これは &lt;code&gt;(*SKIP)&lt;/code&gt; に似た幅ゼロのパターンですが、失敗時にバックトラックすると、一致が完全に失敗する点が異なります。開始ポインタを進めることによって有効な一致を見つける試みは、それ以上発生しません。例えば、</target>
        </trans-unit>
        <trans-unit id="0eaf16c26ce67bf186071a739f6615eb11610fd4" translate="yes" xml:space="preserve">
          <source>This is the SV to be matched against. Note that the actual char array to be matched against is supplied by the arguments described below; the SV is just used to determine UTF8ness, &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos()&lt;/a&gt;&lt;/code&gt; etc.</source>
          <target state="translated">これは照合するSVです。照合される実際のchar配列は、以下で説明する引数によって提供されることに注意してください。SVは、UTF8ness、 &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos()&lt;/a&gt;&lt;/code&gt; などを決定するために使用されます。</target>
        </trans-unit>
        <trans-unit id="7c286f6393bbad06af797d961790dd4c263ab5cd" translate="yes" xml:space="preserve">
          <source>This is the SV to be matched against. Note that the actual char array to be matched against is supplied by the arguments described below; the SV is just used to determine UTF8ness, &lt;code&gt;pos()&lt;/code&gt; etc.</source>
          <target state="translated">これは、照合するSVです。照合される実際のchar配列は、以下で説明する引数によって提供されることに注意してください。SVは、UTF8ness、 &lt;code&gt;pos()&lt;/code&gt; などを決定するために使用されます。</target>
        </trans-unit>
        <trans-unit id="4d720b4f15a9201913736e953c720d9b63d81ea0" translate="yes" xml:space="preserve">
          <source>This is the Unicode-aware way of saying</source>
          <target state="translated">これはUnicodeを意識した言い方で</target>
        </trans-unit>
        <trans-unit id="455ede6174f3d5161f6c2d4aa6425c94536894ca" translate="yes" xml:space="preserve">
          <source>This is the basic function to generate temporary files. The behaviour of the file can be changed using various options:</source>
          <target state="translated">一時ファイルを生成するための基本的な機能です。ファイルの挙動は様々なオプションを使って変更することができます。</target>
        </trans-unit>
        <trans-unit id="0cdb886cc4c11fb4c044bce1657934ab85d4f9c0" translate="yes" xml:space="preserve">
          <source>This is the central parsing function. It can both append new text and extract objects from the stream accumulated so far (both of these functions are optional).</source>
          <target state="translated">これが中心となるパース関数です。新しいテキストを追加したり、これまでに蓄積されたストリームからオブジェクトを抽出したりすることができます (これらの関数はどちらもオプションです)。</target>
        </trans-unit>
        <trans-unit id="a05b57eee11f052b052017c3ff384fae39edc53f" translate="yes" xml:space="preserve">
          <source>This is the command to execute. It may be either a string or an array reference. This is a required argument.</source>
          <target state="translated">これは実行するコマンドです。文字列か配列参照のどちらかを指定します。これは必須の引数です。</target>
        </trans-unit>
        <trans-unit id="78880bb496bf709fa9881c622c08f3137e6dd8f7" translate="yes" xml:space="preserve">
          <source>This is the constructor for &lt;b&gt;Pod::Parser&lt;/b&gt; and its subclasses. You</source>
          <target state="translated">これは、&lt;b&gt;Pod :: Parser&lt;/b&gt;とそのサブクラスのコンストラクタです。君は</target>
        </trans-unit>
        <trans-unit id="3d8bf5bd14f4dda830975aad7d7af3e9d034509f" translate="yes" xml:space="preserve">
          <source>This is the constructor for a new Net::FTP object. &lt;code&gt;HOST&lt;/code&gt; is the name of the remote host to which an FTP connection is required.</source>
          <target state="translated">これは、新しいNet :: FTPオブジェクトのコンストラクタです。 &lt;code&gt;HOST&lt;/code&gt; は、FTP接続が必要なリモートホストの名前です。</target>
        </trans-unit>
        <trans-unit id="d79a978a5e7757a479b9fe30cd0cc290698241af" translate="yes" xml:space="preserve">
          <source>This is the constructor for a new Net::NNTP object. &lt;code&gt;HOST&lt;/code&gt; is the name of the remote host to which a NNTP connection is required. If not given then it may be passed as the &lt;code&gt;Host&lt;/code&gt; option described below. If no host is passed then two environment variables are checked, first &lt;code&gt;NNTPSERVER&lt;/code&gt; then &lt;code&gt;NEWSHOST&lt;/code&gt; , then &lt;code&gt;Net::Config&lt;/code&gt; is checked, and if a host is not found then &lt;code&gt;news&lt;/code&gt; is used.</source>
          <target state="translated">これは、新しいNet :: NNTPオブジェクトのコンストラクターです。 &lt;code&gt;HOST&lt;/code&gt; は、NNTP接続が必要なリモートホストの名前です。指定されていない場合は、以下で説明する &lt;code&gt;Host&lt;/code&gt; オプションとして渡すことができます。ホストが渡されない場合、2つの環境変数がチェックされます。最初に &lt;code&gt;NNTPSERVER&lt;/code&gt; 、次に &lt;code&gt;NEWSHOST&lt;/code&gt; 、次に &lt;code&gt;Net::Config&lt;/code&gt; がチェックされ、ホストが見つからない場合は &lt;code&gt;news&lt;/code&gt; が使用されます。</target>
        </trans-unit>
        <trans-unit id="269299c73d11a11158c0e7b9fe468441843c9e6e" translate="yes" xml:space="preserve">
          <source>This is the constructor for a new Net::NNTP object. &lt;code&gt;HOST&lt;/code&gt; is the name of the remote host to which a NNTP connection is required. If not given then it may be passed as the &lt;code&gt;Host&lt;/code&gt; option described below. If no host is passed then two environment variables are checked, first &lt;code&gt;NNTPSERVER&lt;/code&gt; then &lt;code&gt;NEWSHOST&lt;/code&gt;, then &lt;code&gt;Net::Config&lt;/code&gt; is checked, and if a host is not found then &lt;code&gt;news&lt;/code&gt; is used.</source>
          <target state="translated">これは、新しいNet :: NNTPオブジェクトのコンストラクターです。 &lt;code&gt;HOST&lt;/code&gt; は、NNTP接続が必要なリモートホストの名前です。指定しない場合は、以下で説明する &lt;code&gt;Host&lt;/code&gt; オプションとして渡すことができます。ホストが渡されない場合は、2つの環境変数がチェックされます。最初に &lt;code&gt;NNTPSERVER&lt;/code&gt; 、次に &lt;code&gt;NEWSHOST&lt;/code&gt; 、次に &lt;code&gt;Net::Config&lt;/code&gt; がチェックされ、ホストが見つからない場合は &lt;code&gt;news&lt;/code&gt; が使用されます。</target>
        </trans-unit>
        <trans-unit id="3a1411000dcca44bd6224ab398773d981b55ca56" translate="yes" xml:space="preserve">
          <source>This is the constructor for a new Net::POP3 object. &lt;code&gt;HOST&lt;/code&gt; is the name of the remote host to which an POP3 connection is required.</source>
          <target state="translated">これは、新しいNet :: POP3オブジェクトのコンストラクターです。 &lt;code&gt;HOST&lt;/code&gt; は、POP3接続が必要なリモートホストの名前です。</target>
        </trans-unit>
        <trans-unit id="b5e150d75dbb5f649a71e256e018f3d6ee5d68ad" translate="yes" xml:space="preserve">
          <source>This is the constructor for a new Net::SMTP object. &lt;code&gt;HOST&lt;/code&gt; is the name of the remote host to which an SMTP connection is required.</source>
          <target state="translated">これは、新しいNet :: SMTPオブジェクトのコンストラクターです。 &lt;code&gt;HOST&lt;/code&gt; は、SMTP接続が必要なリモートホストの名前です。</target>
        </trans-unit>
        <trans-unit id="3dcdb98a1ad7340bd49db77b64b7ed1e7e6ac7fa" translate="yes" xml:space="preserve">
          <source>This is the constructor for the class. That means it is expected to return a blessed reference of some sort. The reference can be used to hold some internal information.</source>
          <target state="translated">これはクラスのコンストラクタです。つまり、何らかの祝福された参照を返すことが期待されています。この参照は、何らかの内部情報を保持するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="7f8efcba15ad2c7fb65b185c0d87e50ef7c7af8b" translate="yes" xml:space="preserve">
          <source>This is the constructor for the class. That means it is expected to return a blessed reference through which the new array (probably an anonymous ARRAY ref) will be accessed.</source>
          <target state="translated">これはクラスのコンストラクタです。つまり、新しい配列 (おそらく匿名の ARRAY ref)にアクセスするための祝福された参照を返すことが期待されています。</target>
        </trans-unit>
        <trans-unit id="4ddd75a12229b0af35fd3f3217e95a18f27831c9" translate="yes" xml:space="preserve">
          <source>This is the constructor for the class. That means it is expected to return a blessed reference through which the new object (probably but not necessarily an anonymous hash) will be accessed.</source>
          <target state="translated">これはクラスのコンストラクタです。つまり、新しいオブジェクト (おそらく匿名ハッシュとは限らない)にアクセスするための祝福された参照を返すことが期待されています。</target>
        </trans-unit>
        <trans-unit id="c3ca80029525d0505c9c19a25619277e596ad6ff" translate="yes" xml:space="preserve">
          <source>This is the constructor for the class. That means it is expected to return a blessed reference to a new scalar (probably anonymous) that it's creating. For example:</source>
          <target state="translated">これはクラスのコンストラクタです。つまり、作成中の新しいスカラ(おそらく匿名)への祝福された参照を返すことが期待されています。例えば</target>
        </trans-unit>
        <trans-unit id="bb534959b62a2349bc366cafbf3bc4c8d2378f5a" translate="yes" xml:space="preserve">
          <source>This is the current line number being parsed. But you might find the &quot;line_number&quot; event attribute more accurate, when it is present.</source>
          <target state="translated">これは解析されている現在の行番号です。しかし、&quot;line_number&quot; イベント属性が存在する場合は、より正確な情報が得られるかもしれません。</target>
        </trans-unit>
        <trans-unit id="97c7d16dbe44cbd95a833f47b94f50f6214ea17d" translate="yes" xml:space="preserve">
          <source>This is the default code set.</source>
          <target state="translated">これはデフォルトのコードセットです。</target>
        </trans-unit>
        <trans-unit id="d1c927184ed34249d218ce93282cb8de28d7d8db" translate="yes" xml:space="preserve">
          <source>This is the default compression used when creating a zip file with &lt;code&gt;IO::Compress::Zip&lt;/code&gt;.</source>
          <target state="translated">これは、 &lt;code&gt;IO::Compress::Zip&lt;/code&gt; 使用してzipファイルを作成するときに使用されるデフォルトの圧縮です。</target>
        </trans-unit>
        <trans-unit id="f42f9d3bfdedb4c34f927c70a8b84d5ca486809d" translate="yes" xml:space="preserve">
          <source>This is the default value if none was provided by the user. This is also the type &lt;code&gt;strict_type&lt;/code&gt; will look at when checking type integrity (see below).</source>
          <target state="translated">これは、ユーザーが何も指定しなかった場合のデフォルト値です。これは、型の整合性をチェックするときに &lt;code&gt;strict_type&lt;/code&gt; が参照する型でもあります（以下を参照）。</target>
        </trans-unit>
        <trans-unit id="3593aaa1ac379bbedb44bf7f659e106e976b3e02" translate="yes" xml:space="preserve">
          <source>This is the default, and fallback concurrency model for &lt;a href=&quot;test2&quot;&gt;Test2&lt;/a&gt;. This sends events between processes and threads using serialized files in a temporary directory. This is not particularly fast, but it works everywhere.</source>
          <target state="translated">これは、&lt;a href=&quot;test2&quot;&gt;Test2&lt;/a&gt;のデフォルトのフォールバック同時実行モデルです。これにより、一時ディレクトリ内のシリアル化されたファイルを使用して、プロセスとスレッド間でイベントが送信されます。これは特に高速ではありませんが、どこでも機能します。</target>
        </trans-unit>
        <trans-unit id="60c4aeb1d9a588518e8c401cb7140416c2986e58" translate="yes" xml:space="preserve">
          <source>This is the default. If you can use the</source>
          <target state="translated">これがデフォルトです。もし</target>
        </trans-unit>
        <trans-unit id="9aeaae15da033ddcaa17dde6127bab085a00db8b" translate="yes" xml:space="preserve">
          <source>This is the default. If you can use the &lt;a href=&quot;http://man.he.net/man1/mail&quot;&gt;mail(1)&lt;/a&gt; or &lt;a href=&quot;http://man.he.net/man1/mailx&quot;&gt;mailx(1)&lt;/a&gt; program to send mail from the machine where your code runs, you should be able to use this.</source>
          <target state="translated">これがデフォルトです。あなたが使用できる場合は&lt;a href=&quot;http://man.he.net/man1/mail&quot;&gt;、メール（1）&lt;/a&gt;または&lt;a href=&quot;http://man.he.net/man1/mailx&quot;&gt;mailxの（1）&lt;/a&gt;あなたのコードを実行するマシンからメールを送信するプログラムを、あなたはこれを使用することができるはずです。</target>
        </trans-unit>
        <trans-unit id="2b115e2483ec3abaacaac1f9ae2d4e5dce2387c0" translate="yes" xml:space="preserve">
          <source>This is the directory where the .pm and .pod files you wish to have installed go. They are laid out according to namespace. So Foo::Bar is</source>
          <target state="translated">これはインストールしたい .pm と .pod ファイルがあるディレクトリです。これらのファイルは名前空間に従って配置されています。つまり、Foo::Bar は</target>
        </trans-unit>
        <trans-unit id="d930a14451f27529d05daafcbdbe065ab4700f11" translate="yes" xml:space="preserve">
          <source>This is the documentation of version 0.33</source>
          <target state="translated">これはバージョン 0.33 のドキュメントです。</target>
        </trans-unit>
        <trans-unit id="63455dfd4022438ee8d0c0ec5b67774074825e03" translate="yes" xml:space="preserve">
          <source>This is the documentation of version 0.36</source>
          <target state="translated">これはバージョン 0.36 のドキュメントです。</target>
        </trans-unit>
        <trans-unit id="412a728d73be865262b84817f05ddc7c35324cf4" translate="yes" xml:space="preserve">
          <source>This is the easiest way to implement threads, and the way most OSes start. The big disadvantage is that, since the OS knows nothing about threads, if one thread blocks they all do. Typical blocking activities include most system calls, most I/O, and things like &lt;code&gt;&lt;a href=&quot;functions/sleep&quot;&gt;sleep()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">これは、スレッドを実装する最も簡単な方法であり、ほとんどのOSの起動方法です。大きな欠点は、OSはスレッドについて何も知らないため、1つのスレッドがブロックすると、すべてがそれを行うということです。一般的なブロッキングアクティビティには、ほとんどのシステムコール、ほとんどのI / O、および &lt;code&gt;&lt;a href=&quot;functions/sleep&quot;&gt;sleep()&lt;/a&gt;&lt;/code&gt; などが含まれます。</target>
        </trans-unit>
        <trans-unit id="9872ff32ffe02aae34e5fe172e65251487064e38" translate="yes" xml:space="preserve">
          <source>This is the easiest way to implement threads, and the way most OSes start. The big disadvantage is that, since the OS knows nothing about threads, if one thread blocks they all do. Typical blocking activities include most system calls, most I/O, and things like &lt;code&gt;sleep()&lt;/code&gt;.</source>
          <target state="translated">これはスレッドを実装する最も簡単な方法であり、ほとんどのOSが起動する方法です。大きな欠点は、OSがスレッドについて何も知らないため、1つのスレッドがブロックすると、すべてがスレッドをブロックすることです。典型的なブロッキングアクティビティには、ほとんどのシステムコール、ほとんどのI / O、および &lt;code&gt;sleep()&lt;/code&gt; などが含まれます。</target>
        </trans-unit>
        <trans-unit id="9c6f35e7150b834f9f05080f6b4f16bfc1d90561" translate="yes" xml:space="preserve">
          <source>This is the email address that will be sent as your anonymous ftp password.</source>
          <target state="translated">これは匿名FTPパスワードとして送信されるメールアドレスです。</target>
        </trans-unit>
        <trans-unit id="bcbb73b7a51f271a9c7d0f81a71c9c4c6dc5c93f" translate="yes" xml:space="preserve">
          <source>This is the event type that should be used instead of &lt;a href=&quot;Test2::Event&quot;&gt;Test2::Event&lt;/a&gt; or its legacy subclasses.</source>
          <target state="translated">これは、&lt;a href=&quot;Test2::Event&quot;&gt;Test2 :: Event&lt;/a&gt;またはそのレガシーサブクラスの代わりに使用する必要があるイベントタイプです。</target>
        </trans-unit>
        <trans-unit id="f70dbb2dc131fafe5c25b23af1ec9a88c86f0b02" translate="yes" xml:space="preserve">
          <source>This is the existing flag. If the lexical warnings pragma is &lt;b&gt;not&lt;/b&gt; used in any of you code, or any of the modules that you use, this flag will enable warnings everywhere. See &lt;a href=&quot;#Backward-Compatibility&quot;&gt;&quot;Backward Compatibility&quot;&lt;/a&gt; for details of how this flag interacts with lexical warnings.</source>
          <target state="translated">これは既存のフラグです。レキシカルwarningsプラグマがされている場合&lt;b&gt;ではない&lt;/b&gt;、あなたのコード、またはあなたが使用することをモジュールのいずれかのいずれかで使用される、このフラグはどこにでも警告を有効にします。参照&lt;a href=&quot;#Backward-Compatibility&quot;&gt;「下位互換性」&lt;/a&gt;の字句の警告とどのようにこのフラグが相互作用の詳細については、を。</target>
        </trans-unit>
        <trans-unit id="03a8ad8de2657fbb598356bba52fec61dbe4557b" translate="yes" xml:space="preserve">
          <source>This is the existing flag. If the lexical warnings pragma is &lt;b&gt;not&lt;/b&gt; used in any of you code, or any of the modules that you use, this flag will enable warnings everywhere. See &lt;a href=&quot;#Backward-Compatibility&quot;&gt;Backward Compatibility&lt;/a&gt; for details of how this flag interacts with lexical warnings.</source>
          <target state="translated">これは既存のフラグです。レキシカルwarningsプラグマがされている場合&lt;b&gt;ではない&lt;/b&gt;、あなたのコード、またはあなたが使用することをモジュールのいずれかのいずれかで使用される、このフラグはどこにでも警告を有効にします。参照してください。&lt;a href=&quot;#Backward-Compatibility&quot;&gt;下位互換性&lt;/a&gt;の字句の警告とどのようにこのフラグが相互作用の詳細については、を。</target>
        </trans-unit>
        <trans-unit id="bb41b10f4355a8511d19503b44266dfd63767081" translate="yes" xml:space="preserve">
          <source>This is the full Uppercase_Mapping property (as opposed to the Simple_Uppercase_Mapping given in the example for format &lt;code&gt;&quot;a&quot;&lt;/code&gt; ). The only difference between the two in the ranges shown is that the code point at 0x0149 (LATIN SMALL LETTER N PRECEDED BY APOSTROPHE) maps to a string of two characters, 0x02BC (MODIFIER LETTER APOSTROPHE) followed by 0x004E (LATIN CAPITAL LETTER N).</source>
          <target state="translated">これは完全なUppercase_Mappingプロパティです（フォーマット &lt;code&gt;&quot;a&quot;&lt;/code&gt; の例で指定されているSimple_Uppercase_Mappingとは対照的です）。示されている範囲内の2つの違いは、0x0149（ラテン小文字Nアポストロフィ）のコードポイントが、0x02BC（修飾文字アポストロフィ）の後に0x004E（ラテン大文字N）が続く2文字の文字列にマップすることだけです。</target>
        </trans-unit>
        <trans-unit id="72f4b91716b4ac44d113d86456ec9101d5a53dbe" translate="yes" xml:space="preserve">
          <source>This is the full Uppercase_Mapping property (as opposed to the Simple_Uppercase_Mapping given in the example for format &lt;code&gt;&quot;a&quot;&lt;/code&gt;). The only difference between the two in the ranges shown is that the code point at 0x0149 (LATIN SMALL LETTER N PRECEDED BY APOSTROPHE) maps to a string of two characters, 0x02BC (MODIFIER LETTER APOSTROPHE) followed by 0x004E (LATIN CAPITAL LETTER N).</source>
          <target state="translated">これは完全なUppercase_Mappingプロパティです（フォーマット &lt;code&gt;&quot;a&quot;&lt;/code&gt; の例で示されているSimple_Uppercase_Mappingとは対照的です）。示されている範囲の2つの違いは、0x0149（LATIN SMALL LETTER N PRECEDED BY APOSTROPHE）のコードポイントが2文字の文字列0x02BC（MODIFIER LETTER APOSTROPHE）とそれに続く0x004E（LATIN CAPITAL LETTER N）にマップされることだけです。</target>
        </trans-unit>
        <trans-unit id="871175ae8bd1e88a96090e3ee5d094a4a3c823c8" translate="yes" xml:space="preserve">
          <source>This is the function that does the real work. It should use the current values of @dl_require_symbols and @dl_resolve_using if required.</source>
          <target state="translated">これは実際の作業を行う関数です。必要に応じて @dl_require_symbols と @dl_resolve_using の現在の値を使用しなければなりません。</target>
        </trans-unit>
        <trans-unit id="9eb27a9f1b9a740c73f748bcbff1be5834650914" translate="yes" xml:space="preserve">
          <source>This is the function used to implement the behaviour of the &lt;code&gt;isa&lt;/code&gt; operator.</source>
          <target state="translated">これは、 &lt;code&gt;isa&lt;/code&gt; 演算子の動作を実装するために使用される関数です。</target>
        </trans-unit>
        <trans-unit id="0f9cd536958034f18b34b73afd163424db233b70" translate="yes" xml:space="preserve">
          <source>This is the global compile-time. That includes, basically, every &lt;code&gt;BEGIN&lt;/code&gt; block executed directly or indirectly from during the compile-time of the top-level program.</source>
          <target state="translated">これはグローバルなコンパイル時間です。これには、基本的に、最上位プログラムのコンパイル時に直接または間接的に実行されるすべての &lt;code&gt;BEGIN&lt;/code&gt; ブロックが含まれます。</target>
        </trans-unit>
        <trans-unit id="4c737aa4875c95dda5f4201220fe6bfd2cb9c598" translate="yes" xml:space="preserve">
          <source>This is the hardest part of testing, where do you start? People often get overwhelmed at the apparent enormity of the task of testing a whole module. The best place to start is at the beginning. &lt;a href=&quot;Date::ICal&quot;&gt;Date::ICal&lt;/a&gt; is an object-oriented module, and that means you start by making an object. Test &lt;code&gt;new()&lt;/code&gt;.</source>
          <target state="translated">これはテストの最も難しい部分ですが、どこから始めますか？モジュール全体をテストするというタスクの明らかな巨大さに、人々はしばしば圧倒されます。開始するのに最適な場所は最初です。&lt;a href=&quot;Date::ICal&quot;&gt;Date :: ICal&lt;/a&gt;はオブジェクト指向モジュールです。つまり、オブジェクトを作成することから始めます。 &lt;code&gt;new()&lt;/code&gt; をテストします。</target>
        </trans-unit>
        <trans-unit id="58aad6bdc01b0f3b662abb61313db16d1982e4c1" translate="yes" xml:space="preserve">
          <source>This is the highest UID on the current system that refers to a root UID. This is used to make sure that the temporary directory is owned by a system UID (&lt;code&gt;root&lt;/code&gt;, &lt;code&gt;bin&lt;/code&gt;, &lt;code&gt;sys&lt;/code&gt; etc) rather than simply by root.</source>
          <target state="translated">これは、ルートUIDを参照する現在のシステムで最も高いUIDです。これは、一時ディレクトリが単にrootではなく、システムUID（ &lt;code&gt;root&lt;/code&gt; 、 &lt;code&gt;bin&lt;/code&gt; 、 &lt;code&gt;sys&lt;/code&gt; など）によって所有されていることを確認するために使用されます。</target>
        </trans-unit>
        <trans-unit id="394f7937653a5d479f930b2ee200056fdee9eaa3" translate="yes" xml:space="preserve">
          <source>This is the highest UID on the current system that refers to a root UID. This is used to make sure that the temporary directory is owned by a system UID (C</source>
          <target state="translated">これは、ルート UID を参照する現在のシステム上で最も高い UID です。これは、一時ディレクトリがシステム UID (C</target>
        </trans-unit>
        <trans-unit id="6328f4bdaf24cfea2076758e63c586a6679bf323" translate="yes" xml:space="preserve">
          <source>This is the internal function implementing the &lt;code&gt;&amp;lt;EXPR&amp;gt;&lt;/code&gt; operator, but you can use it directly. The &lt;code&gt;&amp;lt;EXPR&amp;gt;&lt;/code&gt; operator is discussed in more detail in &lt;a href=&quot;../perlop#I%2fO-Operators&quot;&gt;I/O Operators in perlop&lt;/a&gt;.</source>
          <target state="translated">これは、 &lt;code&gt;&amp;lt;EXPR&amp;gt;&lt;/code&gt; 演算子を実装する内部関数ですが、直接使用できます。 &lt;code&gt;&amp;lt;EXPR&amp;gt;&lt;/code&gt; オペレータはで詳しく説明されて&lt;a href=&quot;../perlop#I%2fO-Operators&quot;&gt;はperlopにI / O演算子&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e79f6ef07ad6031f8e6ffa40b941fdd24230ba02" translate="yes" xml:space="preserve">
          <source>This is the internal function implementing the &lt;code&gt;&amp;lt;EXPR&amp;gt;&lt;/code&gt; operator, but you can use it directly. The &lt;code&gt;&amp;lt;EXPR&amp;gt;&lt;/code&gt; operator is discussed in more detail in &lt;a href=&quot;perlop#I%2FO-Operators&quot;&gt;&quot;I/O Operators&quot; in perlop&lt;/a&gt;.</source>
          <target state="translated">これは &lt;code&gt;&amp;lt;EXPR&amp;gt;&lt;/code&gt; 演算子を実装する内部関数ですが、直接使用することもできます。 &lt;code&gt;&amp;lt;EXPR&amp;gt;&lt;/code&gt; オペレータはで詳しく説明されて&lt;a href=&quot;perlop#I%2FO-Operators&quot;&gt;はperlopに「I / O演算子」&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f2a5b446b2d0ba2a35085618db8046fb9068c0dc" translate="yes" xml:space="preserve">
          <source>This is the internal function implementing the &lt;code&gt;&amp;lt;EXPR&amp;gt;&lt;/code&gt; operator, but you can use it directly. The &lt;code&gt;&amp;lt;EXPR&amp;gt;&lt;/code&gt; operator is discussed in more detail in &lt;a href=&quot;perlop#I%2fO-Operators&quot;&gt;I/O Operators in perlop&lt;/a&gt;.</source>
          <target state="translated">これは、 &lt;code&gt;&amp;lt;EXPR&amp;gt;&lt;/code&gt; 演算子を実装する内部関数ですが、直接使用できます。 &lt;code&gt;&amp;lt;EXPR&amp;gt;&lt;/code&gt; オペレータはで詳しく説明されて&lt;a href=&quot;perlop#I%2fO-Operators&quot;&gt;はperlopにI / O演算子&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c755425aff2265b37f84fd527f7d77c0d4f14125" translate="yes" xml:space="preserve">
          <source>This is the inverse of the &lt;code&gt;:utf8&lt;/code&gt; layer. It turns off the flag on the layer below so that data read from it is considered to be &quot;octets&quot; i.e. characters in the range 0..255 only. Likewise on output perl will warn if a &quot;wide&quot; character is written to a such a stream.</source>
          <target state="translated">これは &lt;code&gt;:utf8&lt;/code&gt; レイヤーの逆です。それは下の層のフラグをオフにするので、そこから読み取られたデータは「オクテット」、つまり0..255の範囲の文字のみと見なされます。同様に、出力では、「ワイド」文字がそのようなストリームに書き込まれると、perlが警告します。</target>
        </trans-unit>
        <trans-unit id="c2ddc75f62fd0b93b03c10b2f264c7ad34b8bf3a" translate="yes" xml:space="preserve">
          <source>This is the inverse of the &lt;code&gt;:utf8&lt;/code&gt; pseudo-layer. It turns off the flag on the layer below so that data read from it is considered to be Perl's internal downgraded encoding, thus interpreted as the native single-byte encoding of Latin-1 or EBCDIC. Likewise on output Perl will warn if a &quot;wide&quot; character (a codepoint not in the range 0..255) is written to a such a stream.</source>
          <target state="translated">これは &lt;code&gt;:utf8&lt;/code&gt; 疑似レイヤーの逆です。下のレイヤーのフラグをオフにして、そこから読み取られたデータがPerlの内部ダウングレードエンコーディングと見なされるようにします。したがって、Latin-1またはEBCDICのネイティブシングルバイトエンコーディングとして解釈されます。同様に、出力時に、「ワイド」文字（0..255の範囲外のコードポイント）がそのようなストリームに書き込まれた場合、Perlは警告します。</target>
        </trans-unit>
        <trans-unit id="05a7690a54b93d5cbfbc43460dc86928e9ff4860" translate="yes" xml:space="preserve">
          <source>This is the least computationally expensive strategy. It may require some user education.</source>
          <target state="translated">これは最も計算コストの低い戦略です。ユーザー教育が必要になるかもしれません。</target>
        </trans-unit>
        <trans-unit id="6fe99eed7290a54a82a6a3a3aa2c3b4a2bb07743" translate="yes" xml:space="preserve">
          <source>This is the level of HTML &quot;Hn&quot; element to which a Pod &quot;head1&quot; corresponds. For example, if &lt;code&gt;html_h_level&lt;/code&gt; is set to 2, a head1 will produce an H2, a head2 will produce an H3, and so on.</source>
          <target state="translated">これは、ポッド「head1」が対応するHTML「Hn」要素のレベルです。たとえば、 &lt;code&gt;html_h_level&lt;/code&gt; が2に設定されている場合、head1はH2を生成し、head2はH3を生成します。</target>
        </trans-unit>
        <trans-unit id="9f1717cb968bcd00575b28e1fe7b7ef5bc2ad1dd" translate="yes" xml:space="preserve">
          <source>This is the list of default @INC.</source>
          <target state="translated">デフォルトの@INCのリストです。</target>
        </trans-unit>
        <trans-unit id="c5030379c7068e58facfd795f2fae683110290cb" translate="yes" xml:space="preserve">
          <source>This is the list of exports that are most commonly needed. If you are simply writing a tool, then this is probably all you need. If you need something and you cannot find it here, then you can also look at &lt;a href=&quot;#OTHER-API-EXPORTS&quot;&gt;&quot;OTHER API EXPORTS&quot;&lt;/a&gt;.</source>
          <target state="translated">これは、最も一般的に必要とされるエクスポートのリストです。単にツールを書いているだけなら、おそらくこれで十分です。何かが必要で、ここで見つからない場合は、&lt;a href=&quot;#OTHER-API-EXPORTS&quot;&gt;「その他のAPIエクスポート」&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="230fd1ee1eb1259a3e88a90d402aac49ef4cecd5" translate="yes" xml:space="preserve">
          <source>This is the list of scenarios that break with the new internals.</source>
          <target state="translated">これは、新しい内部で壊れるシナリオの一覧です。</target>
        </trans-unit>
        <trans-unit id="dbf2d95bd6e71bbc931d90912ac4916f4a329b66" translate="yes" xml:space="preserve">
          <source>This is the lower layer of the Perl parser, managing characters and tokens.</source>
          <target state="translated">これはPerlパーサーの下層で、文字とトークンを管理します。</target>
        </trans-unit>
        <trans-unit id="fb63a92bb5be14bd99b74b3769f58dfdcd714a80" translate="yes" xml:space="preserve">
          <source>This is the mechanism that applies the lexical effects of the &lt;a href=&quot;open&quot;&gt;open&lt;/a&gt; pragma, and the main program scope effects of the &lt;code&gt;io&lt;/code&gt; or &lt;code&gt;D&lt;/code&gt; options for the &lt;a href=&quot;perlrun#-C-%5Bnumber%2Flist%5D&quot;&gt;-C command-line switch&lt;/a&gt; and &lt;a href=&quot;perlrun#PERL_UNICODE&quot;&gt;PERL_UNICODE environment variable&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;open&quot;&gt;オープン&lt;/a&gt;プラグマの字句効果と、&lt;a href=&quot;perlrun#-C-%5Bnumber%2Flist%5D&quot;&gt;-Cコマンドラインスイッチ&lt;/a&gt;および&lt;a href=&quot;perlrun#PERL_UNICODE&quot;&gt;PERL_UNICODE環境変数&lt;/a&gt;の &lt;code&gt;io&lt;/code&gt; または &lt;code&gt;D&lt;/code&gt; オプションのメインプログラムスコープ効果を適用するメカニズムです。</target>
        </trans-unit>
        <trans-unit id="12044b247d0e34184da8c4d82be7f35e7cce2add" translate="yes" xml:space="preserve">
          <source>This is the module that is used as a frontend to the Perl Compiler.</source>
          <target state="translated">Perl コンパイラのフロントエンドとして使用されるモジュールです。</target>
        </trans-unit>
        <trans-unit id="d48b3bc5add16b69ab6764e7aa4a54509b451c2e" translate="yes" xml:space="preserve">
          <source>This is the most compact form, but it is not well suited for printing or embedding in places that can't handle arbitrary data.</source>
          <target state="translated">最もコンパクトな形ですが、任意のデータを扱えない場所での印刷や埋め込みには不向きです。</target>
        </trans-unit>
        <trans-unit id="6f4b6501db089524291430841e3e59e649fd1a7f" translate="yes" xml:space="preserve">
          <source>This is the most important method in Locale::Maketext:</source>
          <target state="translated">これはLocale::Maketextで最も重要なメソッドです。</target>
        </trans-unit>
        <trans-unit id="d28b3b2c303cf9fffc3f2cf8865a24397d2fa229" translate="yes" xml:space="preserve">
          <source>This is the most serious problem in Perl 5.20 and earlier. Fixing this required internal changes in Perl 5.22.</source>
          <target state="translated">これはPerl 5.20以前では最も深刻な問題です。これを修正するには、Perl 5.22 の内部変更が必要です。</target>
        </trans-unit>
        <trans-unit id="cb5f568d5745a8f721d4963249e63f161fe9a2ef" translate="yes" xml:space="preserve">
          <source>This is the name or Internet address of the remote host the server is running on. We could have specified a longer name like &lt;code&gt;&quot;www.perl.com&quot;&lt;/code&gt; , or an address like &lt;code&gt;&quot;207.171.7.72&quot;&lt;/code&gt; . For demonstration purposes, we've used the special hostname &lt;code&gt;&quot;localhost&quot;&lt;/code&gt; , which should always mean the current machine you're running on. The corresponding Internet address for localhost is &lt;code&gt;&quot;127.0.0.1&quot;&lt;/code&gt; , if you'd rather use that.</source>
          <target state="translated">これは、サーバーが実行されているリモートホストの名前またはインターネットアドレスです。 &lt;code&gt;&quot;www.perl.com&quot;&lt;/code&gt; のような長い名前や &lt;code&gt;&quot;207.171.7.72&quot;&lt;/code&gt; のようなアドレスを指定することもできます。デモのために、特別なホスト名 &lt;code&gt;&quot;localhost&quot;&lt;/code&gt; を使用しました。これは、実行中の現在のマシンを常に意味するはずです。localhostに対応するインターネットアドレスは &lt;code&gt;&quot;127.0.0.1&quot;&lt;/code&gt; です（使用する場合）。</target>
        </trans-unit>
        <trans-unit id="42e5cc1bbed69994d8e44a1b803efbbc64d1c0d4" translate="yes" xml:space="preserve">
          <source>This is the name or Internet address of the remote host the server is running on. We could have specified a longer name like &lt;code&gt;&quot;www.perl.com&quot;&lt;/code&gt;, or an address like &lt;code&gt;&quot;207.171.7.72&quot;&lt;/code&gt;. For demonstration purposes, we've used the special hostname &lt;code&gt;&quot;localhost&quot;&lt;/code&gt;, which should always mean the current machine you're running on. The corresponding Internet address for localhost is &lt;code&gt;&quot;127.0.0.1&quot;&lt;/code&gt;, if you'd rather use that.</source>
          <target state="translated">これは、サーバーが実行されているリモートホストの名前またはインターネットアドレスです。 &lt;code&gt;&quot;www.perl.com&quot;&lt;/code&gt; ような長い名前、または &lt;code&gt;&quot;207.171.7.72&quot;&lt;/code&gt; ようなアドレスを指定することもできます。デモンストレーションの目的で、特別なホスト名 &lt;code&gt;&quot;localhost&quot;&lt;/code&gt; を使用しました。これは、常に、実行している現在のマシンを意味する必要があります。ローカルホストに対応するインターネットアドレスは &lt;code&gt;&quot;127.0.0.1&quot;&lt;/code&gt; です（使用したい場合）。</target>
        </trans-unit>
        <trans-unit id="5d714b1786acd33fab070cc7bfc211af580c75d5" translate="yes" xml:space="preserve">
          <source>This is the namespace for formatters. This is an empty package.</source>
          <target state="translated">これはフォーマッタの名前空間です。これは空のパッケージです。</target>
        </trans-unit>
        <trans-unit id="b0d786852f1a6c1dea1d6a765cf9070b49db2732" translate="yes" xml:space="preserve">
          <source>This is the normal entry point for automatic dynamic loading in Perl.</source>
          <target state="translated">これはPerlの自動動的ロードのための通常のエントリーポイントです。</target>
        </trans-unit>
        <trans-unit id="26340ea40f200c2c1e1dfe6e82669d9feb0fd306" translate="yes" xml:space="preserve">
          <source>This is the normal operation. It translates various literals encountered in the Perl source file from the encoding</source>
          <target state="translated">これが通常の操作です。Perl のソースファイルで遭遇した様々なリテラルをエンコーディングの</target>
        </trans-unit>
        <trans-unit id="c846e2c1af2936192fe995d1b6beec9ea4c839cb" translate="yes" xml:space="preserve">
          <source>This is the old form of &lt;a href=&quot;#gv_fetchmeth_pvn_autoload&quot;&gt;&quot;gv_fetchmeth_pvn_autoload&quot;&lt;/a&gt;, which has no flags parameter.</source>
          <target state="translated">これは&lt;a href=&quot;#gv_fetchmeth_pvn_autoload&quot;&gt;「gv_fetchmeth_pvn_autoload」の&lt;/a&gt;古い形式であり、flagsパラメータはありません。</target>
        </trans-unit>
        <trans-unit id="a889101131356644debee9dab9979e5406fc98f2" translate="yes" xml:space="preserve">
          <source>This is the old form of &lt;a href=&quot;#gv_fetchmeth_pvn_autoload&quot;&gt;gv_fetchmeth_pvn_autoload&lt;/a&gt;, which has no flags parameter.</source>
          <target state="translated">これは&lt;a href=&quot;#gv_fetchmeth_pvn_autoload&quot;&gt;gv_fetchmeth_pvn_autoload&lt;/a&gt;の古い形式で、フラグパラメータはありません。</target>
        </trans-unit>
        <trans-unit id="230f7f138d64e36f52758c07316eb9c1eee4e053" translate="yes" xml:space="preserve">
          <source>This is the only executable with does not require OS/2.</source>
          <target state="translated">OS/2を必要としない唯一の実行ファイルです。</target>
        </trans-unit>
        <trans-unit id="46297865ee1d382d368720a50d5f077d38b59862" translate="yes" xml:space="preserve">
          <source>This is the only form of quoting in perl where there is no need to worry about escaping content, something that code generators can and do make good use of.</source>
          <target state="translated">これはperlの引用の唯一の形式で、内容をエスケープすることを心配する必要がありません。</target>
        </trans-unit>
        <trans-unit id="346faabc7115374b4309ef76fa20a9a155ac4597" translate="yes" xml:space="preserve">
          <source>This is the only implementation for which &lt;code&gt;PerlIO_apply_layers()&lt;/code&gt; does anything &quot;interesting&quot;.</source>
          <target state="translated">これは、 &lt;code&gt;PerlIO_apply_layers()&lt;/code&gt; が「興味深い」処理を行う唯一の実装です。</target>
        </trans-unit>
        <trans-unit id="60f1241a31b62b7745507b52788f2eba7d4fd0c6" translate="yes" xml:space="preserve">
          <source>This is the only way you can create a custom named sequence of code points.</source>
          <target state="translated">これは、コードポイントのカスタム名付きシーケンスを作成する唯一の方法です。</target>
        </trans-unit>
        <trans-unit id="78dcaca387707f29d8cc3a2585a362d39b2766bf" translate="yes" xml:space="preserve">
          <source>This is the output when it is executed:</source>
          <target state="translated">実行時の出力です。</target>
        </trans-unit>
        <trans-unit id="e716423e3a6c7217437c06867a38499b8c6c05ea" translate="yes" xml:space="preserve">
          <source>This is the preferred method of passing input to the constructor.</source>
          <target state="translated">これは、コンストラクタに入力を渡す際に好ましい方法です。</target>
        </trans-unit>
        <trans-unit id="3f3e131dd809784965b27d16458f5818d1df8c11" translate="yes" xml:space="preserve">
          <source>This is the preferred way to get the &lt;a href=&quot;../builder&quot;&gt;Test::Builder&lt;/a&gt; object. You should</source>
          <target state="translated">これは、&lt;a href=&quot;../builder&quot;&gt;Test :: Builder&lt;/a&gt;オブジェクトを取得するための推奨される方法です。あなたがすべき</target>
        </trans-unit>
        <trans-unit id="fcb65586c0c2ac8b0ca9da340eb039802998534b" translate="yes" xml:space="preserve">
          <source>This is the preferred way to get the &lt;a href=&quot;Test::Builder&quot;&gt;Test::Builder&lt;/a&gt; object. You should</source>
          <target state="translated">これは、&lt;a href=&quot;Test::Builder&quot;&gt;Test :: Builder&lt;/a&gt;オブジェクトを取得するための推奨される方法です。あなたがすべき</target>
        </trans-unit>
        <trans-unit id="cf4eba93f23876936daa22cc2fcf49ea7ecb8e5d" translate="yes" xml:space="preserve">
          <source>This is the primary function for copying scalars, and most other copy-ish functions and macros use this underneath.</source>
          <target state="translated">これはスカラをコピーするための主要な関数であり、他のほとんどのコピー的な関数やマクロはこれを下に使っています。</target>
        </trans-unit>
        <trans-unit id="d8fe859ac5bcdefed33ae4b1e5fa108b5fef0c8f" translate="yes" xml:space="preserve">
          <source>This is the primary interface for interacting with &lt;code&gt;File::Temp&lt;/code&gt;. Using the OO interface a temporary file can be created when the object is constructed and the file can be removed when the object is no longer required.</source>
          <target state="translated">これは、 &lt;code&gt;File::Temp&lt;/code&gt; と対話するための主要なインターフェースです。オブジェクト指向インターフェースを使用すると、オブジェクトの作成時に一時ファイルを作成し、オブジェクトが不要になったときにファイルを削除できます。</target>
        </trans-unit>
        <trans-unit id="d281635f40f0f24e55d7183cb71173555b3719a4" translate="yes" xml:space="preserve">
          <source>This is the primary interface for interacting with C&amp;lt;:temp&amp;gt;. Using the OO interface a temporary file can be created when the object is constructed and the file can be removed when the object is no longer required.</source>
          <target state="translated">これは、C &amp;lt;：temp&amp;gt;と対話するための主要なインターフェースです。OOインターフェースを使用すると、オブジェクトの作成時に一時ファイルを作成でき、オブジェクトが不要になったときにファイルを削除できます。</target>
        </trans-unit>
        <trans-unit id="e7186c8d7e458e49979629ada95eb0a97fa3037b" translate="yes" xml:space="preserve">
          <source>This is the primary object described by the</source>
          <target state="translated">によって記述されたプライマリオブジェクトです。</target>
        </trans-unit>
        <trans-unit id="a4f779241fea71e4ea7e971c687ff2b2673775df" translate="yes" xml:space="preserve">
          <source>This is the primary object described by the metadata. In the context of this document it usually refers to a collection of modules, scripts, and/or documents that are distributed together for other developers to use. Examples of distributions are &lt;code&gt;Class-Container&lt;/code&gt;, &lt;code&gt;libwww-perl&lt;/code&gt;, or &lt;code&gt;DBI&lt;/code&gt;.</source>
          <target state="translated">これは、メタデータによって記述される主要なオブジェクトです。このドキュメントのコンテキストでは、通常、他の開発者が使用できるように一緒に配布されるモジュール、スクリプト、および/またはドキュメントのコレクションを指します。ディストリビューションの例は、 &lt;code&gt;Class-Container&lt;/code&gt; 、 &lt;code&gt;libwww-perl&lt;/code&gt; 、または &lt;code&gt;DBI&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="05f4f2b81da1e7eb80147e0a0e24d6cb8a7b101e" translate="yes" xml:space="preserve">
          <source>This is the purpose of</source>
          <target state="translated">という趣旨のものです。</target>
        </trans-unit>
        <trans-unit id="c0f05eba3f3af5d5e22733e34a51cbbb4cab705c" translate="yes" xml:space="preserve">
          <source>This is the recommended interface for creation of temporary directories. By default the directory will not be removed on exit (that is, it won't be temporary; this behaviour can not be changed because of issues with backwards compatibility). To enable removal either use the CLEANUP option which will trigger removal on program exit, or consider using the &quot;newdir&quot; method in the object interface which will allow the directory to be cleaned up when the object goes out of scope.</source>
          <target state="translated">これは一時的なディレクトリを作成するための推奨インターフェースです。デフォルトでは、終了時にディレクトリは削除されません (つまり、一時的なものではありません。後方互換性の問題から、この動作は変更できません)。削除を有効にするには、プログラム終了時に削除のトリガーとなる CLEANUP オプションを使用するか、オブジェクトがスコープ外に出たときにディレクトリをクリーンアップできるようにするオブジェクトインターフェイスの &quot;newdir&quot; メソッドの使用を検討してください。</target>
        </trans-unit>
        <trans-unit id="bd97525cca1b83f38306d58e91365a2fad99fcd5" translate="yes" xml:space="preserve">
          <source>This is the root directory into which the code will be installed. It</source>
          <target state="translated">これは、コードがインストールされるルートディレクトリです。これは</target>
        </trans-unit>
        <trans-unit id="ccd5a95520dab502fdf532a36ef8bc1afc084031" translate="yes" xml:space="preserve">
          <source>This is the safest way to write a test tool. The only two downsides to this are a slight performance decrease, and some extra indentation in your source. If the indentation is a problem for you then you can take a peek at the next section.</source>
          <target state="translated">これはテストツールを書く上で最も安全な方法です。この方法の唯一の欠点は、パフォーマンスが若干低下することと、ソースに余分なインデントが発生することです。インデントが問題になる場合は、次のセクションを覗いてみてください。</target>
        </trans-unit>
        <trans-unit id="a624fea38bb2c4a19922a757fc87c2cbf4093ef7" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;a href=&quot;Test::Simple&quot;&gt;Test::Simple&lt;/a&gt;'s &lt;code&gt;ok()&lt;/code&gt; routine.</source>
          <target state="translated">これは、&lt;a href=&quot;Test::Simple&quot;&gt;Test :: Simple&lt;/a&gt;の &lt;code&gt;ok()&lt;/code&gt; ルーチンと同じです。</target>
        </trans-unit>
        <trans-unit id="bc652aaf1adcdf8a4d8dd86919935233000111ae" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;a href=&quot;simple&quot;&gt;Test::Simple&lt;/a&gt;'s &lt;code&gt;ok()&lt;/code&gt; routine.</source>
          <target state="translated">これは&lt;a href=&quot;simple&quot;&gt;Test :: Simple&lt;/a&gt;の &lt;code&gt;ok()&lt;/code&gt; ルーチンと同じです。</target>
        </trans-unit>
        <trans-unit id="d5cebaac92f671384da0099c3e4a676330931c2e" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;$ipc-&amp;gt;abort($msg)&lt;/code&gt; except that it uses &lt;code&gt;Carp::longmess&lt;/code&gt; to add a stack trace to the message.</source>
          <target state="translated">これは、 &lt;code&gt;Carp::longmess&lt;/code&gt; を使用してスタックトレースをメッセージに追加することを除いて、 &lt;code&gt;$ipc-&amp;gt;abort($msg)&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="c649411547df265abe7a680926ab24280bdd17cc" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;FB_QUIET&lt;/code&gt; above, except that instead of being silent on errors, it issues a warning. This is handy for when you are debugging.</source>
          <target state="translated">これは上記の &lt;code&gt;FB_QUIET&lt;/code&gt; と同じですが、エラーに対してサイレントではなく警告を発行する点が異なります。これは、デバッグするときに便利です。</target>
        </trans-unit>
        <trans-unit id="0ae700aa87900b468f3878348b89397f03c7e04f" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;\h&lt;/code&gt; and &lt;code&gt;\p{Blank}&lt;/code&gt; : a character that changes the spacing horizontally.</source>
          <target state="translated">これは &lt;code&gt;\h&lt;/code&gt; および &lt;code&gt;\p{Blank}&lt;/code&gt; と同じです。水平方向に間隔を変更する文字です。</target>
        </trans-unit>
        <trans-unit id="eddb21086b3856150972d7a2ffd7db90bf137955" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;\h&lt;/code&gt; and &lt;code&gt;\p{Blank}&lt;/code&gt;: a character that changes the spacing horizontally.</source>
          <target state="translated">これは、 &lt;code&gt;\h&lt;/code&gt; および &lt;code&gt;\p{Blank}&lt;/code&gt; と同じです。つまり、間隔を水平方向に変更する文字です。</target>
        </trans-unit>
        <trans-unit id="fbc09138370cb171c094bfc6c30b8f2a18097f95" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;\h&lt;/code&gt; and &lt;code&gt;\p{HorizSpace}&lt;/code&gt; : A character that changes the spacing horizontally.</source>
          <target state="translated">これは &lt;code&gt;\h&lt;/code&gt; および &lt;code&gt;\p{HorizSpace}&lt;/code&gt; と同じです。水平方向に間隔を変更する文字。</target>
        </trans-unit>
        <trans-unit id="ebe5b4b519c44b8c20dae3a8295da82dc1226742" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;\h&lt;/code&gt; and &lt;code&gt;\p{HorizSpace}&lt;/code&gt;: A character that changes the spacing horizontally.</source>
          <target state="translated">これは &lt;code&gt;\h&lt;/code&gt; および &lt;code&gt;\p{HorizSpace}&lt;/code&gt; と同じです：間隔を水平方向に変更する文字。</target>
        </trans-unit>
        <trans-unit id="7b5f883b8c3b129477e8adf6ce3d17842b4509c9" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;\s&lt;/code&gt;, including beyond ASCII.</source>
          <target state="translated">これは、ASCIIを除き、 &lt;code&gt;\s&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="7e9dbff8b446293a154a68b17c80ce2409d2cfe1" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;\s&lt;/code&gt;, restricted to ASCII, namely &lt;code&gt;[ \f\n\r\t]&lt;/code&gt; and starting in Perl v5.18, a vertical tab.</source>
          <target state="translated">これは &lt;code&gt;\s&lt;/code&gt; と同じで、ASCIIに制限されています。つまり、 &lt;code&gt;[ \f\n\r\t]&lt;/code&gt; で、Perl v5.18の垂直タブから始まります。</target>
        </trans-unit>
        <trans-unit id="6256409cd33d9cdf7337e20319de658ce6caee15" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;\v&lt;/code&gt; : A character that changes the spacing vertically.</source>
          <target state="translated">これは &lt;code&gt;\v&lt;/code&gt; と同じです。垂直方向に間隔を変更する文字です。</target>
        </trans-unit>
        <trans-unit id="e93db47fe41852a54b4800440e60bc3e5fb69deb" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;\v&lt;/code&gt;: A character that changes the spacing vertically.</source>
          <target state="translated">これは &lt;code&gt;\v&lt;/code&gt; と同じです：間隔を垂直方向に変更する文字。</target>
        </trans-unit>
        <trans-unit id="4da601bf04f15ab42ea7eb6f0e3d60619c539d79" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;\w&lt;/code&gt; , including over 100_000 characters beyond ASCII.</source>
          <target state="translated">これは &lt;code&gt;\w&lt;/code&gt; と同じで、ASCIIを超える100_000文字を含みます。</target>
        </trans-unit>
        <trans-unit id="f93b7dea9a5c9d0ac4b1d3dcf4d8d34138603086" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;\w&lt;/code&gt; , restricted to ASCII, namely &lt;code&gt;[A-Za-z0-9_]&lt;/code&gt;</source>
          <target state="translated">これは &lt;code&gt;\w&lt;/code&gt; と同じで、ASCIIに制限されています。つまり、 &lt;code&gt;[A-Za-z0-9_]&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="7aecc4c35f5da4819cdbf90f7c987cd623295b80" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;\w&lt;/code&gt;, including over 100_000 characters beyond ASCII.</source>
          <target state="translated">これは &lt;code&gt;\w&lt;/code&gt; と同じで、ASCII以外の100_000文字以上が含まれます。</target>
        </trans-unit>
        <trans-unit id="1b373b07d064d05bea416853d852c54e573ab565" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;\w&lt;/code&gt;, restricted to ASCII, namely &lt;code&gt;[A-Za-z0-9_]&lt;/code&gt;</source>
          <target state="translated">これは &lt;code&gt;\w&lt;/code&gt; と同じで、ASCIIに制限されています。つまり &lt;code&gt;[A-Za-z0-9_]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2326d742b2e928e15382460bcb0b3e0deff06c68" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;send_ev2()&lt;/code&gt;, except it builds and returns the event without sending it.</source>
          <target state="translated">これは &lt;code&gt;send_ev2()&lt;/code&gt; と同じですが、イベントを送信せずにビルドして返す点が異なります。</target>
        </trans-unit>
        <trans-unit id="c9bb59b2ee7dd2d7cbdc8604ab007944c5dcedc3" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;send_event()&lt;/code&gt;, except it builds and returns the event without sending it.</source>
          <target state="translated">これは &lt;code&gt;send_event()&lt;/code&gt; と同じですが、イベントを送信せずにビルドして返す点が異なります。</target>
        </trans-unit>
        <trans-unit id="8213b0c400904773c8fb4aa6534b5c57f7c89c7f" translate="yes" xml:space="preserve">
          <source>This is the same as machine name except that default matches any name. There can be only one default token, and it must be after all machine tokens. This is normally used as:</source>
          <target state="translated">これは、default が任意の名前にマッチすることを除いては、マシン名と同じです。デフォルトトークンは1つだけで、それはすべてのマシントークンの後のものでなければなりません。これは通常、次のように使用されます。</target>
        </trans-unit>
        <trans-unit id="afe36ef7b28dddedb40e25b8fa31da2bc2facf52" translate="yes" xml:space="preserve">
          <source>This is the same as the C function &lt;code&gt;mblen()&lt;/code&gt; on unthreaded perls. On threaded perls, it transparently (almost) substitutes the more thread-safe &lt;a href=&quot;mbrlen(3)&quot;&gt;&lt;code&gt;mbrlen&lt;/code&gt;(3)&lt;/a&gt;, if available, instead of &lt;code&gt;mblen&lt;/code&gt;.</source>
          <target state="translated">これは、スレッド化されていないperlのC関数 &lt;code&gt;mblen()&lt;/code&gt; と同じです。スレッド化されたperlでは、 &lt;code&gt;mblen&lt;/code&gt; の代わりに、可能であれば、よりスレッドセーフな&lt;a href=&quot;mbrlen(3)&quot;&gt; &lt;code&gt;mbrlen&lt;/code&gt; （3）を&lt;/a&gt;透過的に（ほぼ）置き換えます。</target>
        </trans-unit>
        <trans-unit id="885914858dff1476d770f30f3747b5d73ce30f3c" translate="yes" xml:space="preserve">
          <source>This is the same as the C function &lt;code&gt;mbtowc()&lt;/code&gt; on unthreaded perls. On threaded perls, it transparently (almost) substitutes the more thread-safe &lt;a href=&quot;mbrtowc(3)&quot;&gt;&lt;code&gt;mbrtowc&lt;/code&gt;(3)&lt;/a&gt;, if available, instead of &lt;code&gt;mbtowc&lt;/code&gt;.</source>
          <target state="translated">これは、 &lt;code&gt;mbtowc()&lt;/code&gt; れていないperlのC関数mbtowc（）と同じです。スレッド化されたperlでは、 &lt;code&gt;mbtowc&lt;/code&gt; の代わりに、可能であれば、よりスレッドセーフな&lt;a href=&quot;mbrtowc(3)&quot;&gt; &lt;code&gt;mbrtowc&lt;/code&gt; （3）を&lt;/a&gt;透過的に（ほぼ）置き換えます。</target>
        </trans-unit>
        <trans-unit id="e368c63bdf4c570ae1b4c310ff27b1113dd7b3e3" translate="yes" xml:space="preserve">
          <source>This is the same as the C function &lt;code&gt;wctomb()&lt;/code&gt; on unthreaded perls. On threaded perls, it transparently (almost) substitutes the more thread-safe &lt;a href=&quot;wcrtomb(3)&quot;&gt;&lt;code&gt;wcrtomb&lt;/code&gt;(3)&lt;/a&gt;, if available, instead of &lt;code&gt;wctomb&lt;/code&gt;.</source>
          <target state="translated">これは、 &lt;code&gt;wctomb()&lt;/code&gt; れていないperlのC関数wctomb（）と同じです。スレッド化されたperlでは、 &lt;code&gt;wctomb&lt;/code&gt; の代わりに、可能であれば、よりスレッドセーフな&lt;a href=&quot;wcrtomb(3)&quot;&gt; &lt;code&gt;wcrtomb&lt;/code&gt; （3）を&lt;/a&gt;透過的に（ほぼ）置き換えます。</target>
        </trans-unit>
        <trans-unit id="941bd502236d1dea3c975471a03ebbb873d56ae1" translate="yes" xml:space="preserve">
          <source>This is the same as the bin variable, but is filename expanded at configuration time, for use in your makefiles.</source>
          <target state="translated">これは bin 変数と同じですが、設定時にファイル名を展開して makefile で使用します。</target>
        </trans-unit>
        <trans-unit id="c486c8726e0003d1e95bb96e015320afb3b6dfa4" translate="yes" xml:space="preserve">
          <source>This is the same as the sitebin variable, but is filename expanded at configuration time, for use in your makefiles.</source>
          <target state="translated">これは sitebin 変数と同じですが、設定時にファイル名を展開して makefile で使用します。</target>
        </trans-unit>
        <trans-unit id="cdc9f1e5725bf6d120b1c425b6dcc03a53feac1e" translate="yes" xml:space="preserve">
          <source>This is the same as the sitescript variable, but is filename expanded at configuration time, for use in your makefiles.</source>
          <target state="translated">これは sitescript 変数と同じですが、設定時にファイル名を展開して makefile で使用します。</target>
        </trans-unit>
        <trans-unit id="43bee717903e4bfa25fa311f06b4356fc3deab92" translate="yes" xml:space="preserve">
          <source>This is the same executable as</source>
          <target state="translated">と同じ実行ファイルです。</target>
        </trans-unit>
        <trans-unit id="3ed82b3d4aecee7f6fc3e2f9453c4cdce17f44ec" translate="yes" xml:space="preserve">
          <source>This is the same facility used by the ANSI_COLORS_ALIASES environment variable (see &lt;a href=&quot;#ENVIRONMENT&quot;&gt;&quot;ENVIRONMENT&quot;&lt;/a&gt; below) but can be used at runtime, not just when the module is loaded.</source>
          <target state="translated">これは、ANSI_COLORS_ALIASES環境変数（以下の&lt;a href=&quot;#ENVIRONMENT&quot;&gt;「環境」を&lt;/a&gt;参照）で使用される機能と同じですが、モジュールがロードされたときだけでなく、実行時にも使用できます。</target>
        </trans-unit>
        <trans-unit id="9b93eb63da42a6ae191e4cb65dbdf73df302acbd" translate="yes" xml:space="preserve">
          <source>This is the same facility used by the ANSI_COLORS_ALIASES environment variable (see &lt;a href=&quot;#ENVIRONMENT&quot;&gt;ENVIRONMENT&lt;/a&gt; below) but can be used at runtime, not just when the module is loaded.</source>
          <target state="translated">これは、ANSI_COLORS_ALIASES環境変数（以下の&lt;a href=&quot;#ENVIRONMENT&quot;&gt;環境を&lt;/a&gt;参照）で使用されるのと同じ機能ですが、モジュールがロードされたときだけでなく、実行時にも使用できます。</target>
        </trans-unit>
        <trans-unit id="08be885869480e470d72f31729368e83f4f891ce" translate="yes" xml:space="preserve">
          <source>This is the semaphore &quot;P operation&quot; (the name derives from the Dutch word &quot;pak&quot;, which means &quot;capture&quot; -- the semaphore operations were named by the late Dijkstra, who was Dutch).</source>
          <target state="translated">これはセマフォの「P操作」(名前の由来はオランダ語の「pak」で「捕獲」を意味する--セマフォの操作はオランダ人の故ダイクストラによって命名された)。</target>
        </trans-unit>
        <trans-unit id="2f98c90508409620ac27064f1b688373cf5874e7" translate="yes" xml:space="preserve">
          <source>This is the semaphore &quot;V operation&quot; (the name derives from the Dutch word &quot;vrij&quot;, which means &quot;release&quot;).</source>
          <target state="translated">これはセマフォの「V操作」(名前の由来はオランダ語で「解放」を意味する「vrij」)です。</target>
        </trans-unit>
        <trans-unit id="a276cc3b822e5fb68d4f30cd1b14facc89497c26" translate="yes" xml:space="preserve">
          <source>This is the service name or port number we'd like to connect to. We could have gotten away with using just &lt;code&gt;&quot;daytime&quot;&lt;/code&gt; on systems with a well-configured system services file,[FOOTNOTE: The system services file is found in</source>
          <target state="translated">これは、接続先のサービス名またはポート番号です。システムサービスファイルが適切に構成されているシステムで &lt;code&gt;&quot;daytime&quot;&lt;/code&gt; だけを使用することで問題を回避できた可能性があります。[注：システムサービスファイルは、</target>
        </trans-unit>
        <trans-unit id="55fdeec4b425af4c4fa8e9a6591ac8f8843fb073" translate="yes" xml:space="preserve">
          <source>This is the set of three-digit numeric codes from ISO 3166-1, such as 064 for Bhutan. These codes are actually defined and maintained by the U.N. Statistics division.</source>
          <target state="translated">これはISO3166-1の3桁の数字コードの集合で、例えばブータンの場合は064となります。これらのコードは実際には国連統計局が定義し、管理しています。</target>
        </trans-unit>
        <trans-unit id="233002d6fef285c425f811c11a49106685a1ea36" translate="yes" xml:space="preserve">
          <source>This is the set of three-digit numeric codes from ISO 4217.</source>
          <target state="translated">ISO4217の3桁の数字コードのセットです。</target>
        </trans-unit>
        <trans-unit id="bfc22c533358da5232ffaf0870e72df120463375" translate="yes" xml:space="preserve">
          <source>This is the set of three-letter (lowercase) bibliographic codes from ISO 639-2 and 639-5, such as 'heb' for Hebrew. It also includes additions to this set included in the IANA language registry.</source>
          <target state="translated">これは、ISO 639-2および639-5の3文字(小文字)の書誌コードのセットで、ヘブライ語の'heb'のようなものがあります。また、IANA言語レジストリに含まれるこのセットに追加されたものも含まれています。</target>
        </trans-unit>
        <trans-unit id="b92c48de1f053f976481719f4f81fdeafd62c023" translate="yes" xml:space="preserve">
          <source>This is the set of three-letter (lowercase) codes from ISO 3166-1, such as 'brb' for Barbados. These codes are actually defined and maintained by the U.N. Statistics division.</source>
          <target state="translated">これはISO3166-1の3文字(小文字)コードのセットで、バルバドスの「brb」のようなものです。これらのコードは、実際には国連統計局によって定義され、維持されています。</target>
        </trans-unit>
        <trans-unit id="fc3ae49739721f6f95ec3491951800d9f83ab84d" translate="yes" xml:space="preserve">
          <source>This is the set of three-letter (lowercase) terminologic codes from ISO 639.</source>
          <target state="translated">これは、ISO 639の3文字(小文字)の用語コードのセットです。</target>
        </trans-unit>
        <trans-unit id="e6807d4fe48e31222818be49432ee24ba40f6e11" translate="yes" xml:space="preserve">
          <source>This is the set of two-letter (lowercase) codes from ISO 3166-1, such as 'tv' for Tuvalu.</source>
          <target state="translated">これは、ISO 3166-1の2文字(小文字)コードのセットで、ツバルの「tv」のようなものです。</target>
        </trans-unit>
        <trans-unit id="acd74dadb16fbf234cd8906af18d327510923daf" translate="yes" xml:space="preserve">
          <source>This is the set of two-letter (lowercase) codes from ISO 639-1, such as 'he' for Hebrew. It also includes additions to this set included in the IANA language registry.</source>
          <target state="translated">これは、ヘブライ語の'he'のようなISO 639-1の2文字(小文字)コードのセットです。また、IANA言語レジストリに含まれるこのセットに追加されたものも含まれています。</target>
        </trans-unit>
        <trans-unit id="94c349798d0090117d6582dfd31da6381fa814e6" translate="yes" xml:space="preserve">
          <source>This is the standard unix library builder. We use wlib. With Watcom 10.6, when wlib is linked as &quot;ar&quot;, it behaves like ar and all is fine. Under 9.5, a cover is required. One is included in ../qnx</source>
          <target state="translated">これは標準的なUnixライブラリビルダーです。wlibを使っています。Watcom 10.6では、wlibを &quot;ar &quot;としてリンクすると、arのような挙動になり、すべて問題ありません。9.5以下ではカバーが必要です。./qnxに含まれています。</target>
        </trans-unit>
        <trans-unit id="4298b5ac2d6233992a08de03f4d3419e5f21e00f" translate="yes" xml:space="preserve">
          <source>This is the time string for which the perl binary was compiled. The default value is 0.</source>
          <target state="translated">perlバイナリがコンパイルされた時間の文字列です。デフォルト値は0です。</target>
        </trans-unit>
        <trans-unit id="c63d2ff5b62f973d0b02ad27fd22b2f4f908d588" translate="yes" xml:space="preserve">
          <source>This is the true/false value of the test after TODO and similar modifiers are taken into account.</source>
          <target state="translated">これは、TODOや類似の修飾子が考慮された後のテストの真偽の値です。</target>
        </trans-unit>
        <trans-unit id="e58e7a91164b2c61f4741d28ff686a23ffe5c5eb" translate="yes" xml:space="preserve">
          <source>This is the useragent as &lt;code&gt;LWP&lt;/code&gt; will report it.</source>
          <target state="translated">これは、 &lt;code&gt;LWP&lt;/code&gt; が報告するユーザーエージェントです。</target>
        </trans-unit>
        <trans-unit id="15261bed556ba490ce02abc9f071087b0df0d036" translate="yes" xml:space="preserve">
          <source>This is the version of &lt;code&gt;Test::Harness&lt;/code&gt; .</source>
          <target state="translated">これは &lt;code&gt;Test::Harness&lt;/code&gt; バージョンです。</target>
        </trans-unit>
        <trans-unit id="cdc8920fd29fd268d61dc44aa12aa06fb0110f8c" translate="yes" xml:space="preserve">
          <source>This is the version of &lt;code&gt;Test::Harness&lt;/code&gt;.</source>
          <target state="translated">これは &lt;code&gt;Test::Harness&lt;/code&gt; バージョンです。</target>
        </trans-unit>
        <trans-unit id="6a22ff202852862487c229ecb92eca4a84e51119" translate="yes" xml:space="preserve">
          <source>This is to prevent the problem of one module changing the array base out from under another module inadvertently. See &lt;a href=&quot;perlvar#%24%5b&quot;&gt;$[ in perlvar&lt;/a&gt; and &lt;a href=&quot;arybase&quot;&gt;arybase&lt;/a&gt;.</source>
          <target state="translated">これは、あるモジュールが別のモジュールの下から誤ってアレイベースを変更する問題を防ぐためです。&lt;a href=&quot;perlvar#%24%5b&quot;&gt;perlvar&lt;/a&gt;および&lt;a href=&quot;arybase&quot;&gt;arybaseの&lt;/a&gt;$ [を参照してください。</target>
        </trans-unit>
        <trans-unit id="bd68c145924ef1010d3fbbd465d445886b4ed770" translate="yes" xml:space="preserve">
          <source>This is tremendously more efficient than reading the entire file into memory as an array of lines and then processing it one element at a time, which is often--if not almost always--the wrong approach. Whenever you see someone do this:</source>
          <target state="translated">これは、ファイル全体を行の配列としてメモリに読み込み、一度に一つの要素を処理するよりも、とてつもなく効率的です。誰かがこれをやっているのを見るたびに</target>
        </trans-unit>
        <trans-unit id="a35e6506a9b88f457b9f4a865f1ac711f7750ab3" translate="yes" xml:space="preserve">
          <source>This is true for all numeric template codes. But don't expect miracles: if the packed value exceeds the allotted byte capacity, high order bits are silently discarded, and unpack certainly won't be able to pull them back out of some magic hat. And, when you pack using a signed template code such as &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt;, an excess value may result in the sign bit getting set, and unpacking this will smartly return a negative value.</source>
          <target state="translated">これは、すべての数値テンプレートコードに当てはまります。しかし、奇跡を期待しないでください。パックされた値が割り当てられたバイト容量を超える場合、高位ビットは静かに破棄され、アンパックでそれらを魔法の帽子から引き戻すことはできません。また、 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; などの署名されたテンプレートコードを使用してパックすると、過剰な値によって符号ビットが設定され、これをアンパックすると負の値がスマートに返されます。</target>
        </trans-unit>
        <trans-unit id="09f7b7fd23faf4943e83ad191dd610755470b274" translate="yes" xml:space="preserve">
          <source>This is true for all numeric template codes. But don't expect miracles: if the packed value exceeds the allotted byte capacity, high order bits are silently discarded, and unpack certainly won't be able to pull them back out of some magic hat. And, when you pack using a signed template code such as &lt;code&gt;s&lt;/code&gt;, an excess value may result in the sign bit getting set, and unpacking this will smartly return a negative value.</source>
          <target state="translated">これは、すべての数値テンプレートコードに当てはまります。しかし、奇跡を期待しないでください。パックされた値が割り当てられたバイト容量を超えると、上位ビットは黙って破棄され、アンパックは確かにそれらを魔法の帽子から引き戻すことができません。また、 &lt;code&gt;s&lt;/code&gt; などの符号付きテンプレートコードを使用してパックすると、値が多すぎると符号ビットが設定される可能性があり、これをアンパックすると、負の値が賢く返されます。</target>
        </trans-unit>
        <trans-unit id="e7272df8729202c7ff033cb7fabd9d5f450b6676" translate="yes" xml:space="preserve">
          <source>This is true on Unix, where &lt;code&gt;catdir(&quot;&quot;,&quot;a&quot;,&quot;b&quot;)&lt;/code&gt; yields &quot;/a/b&quot; and &lt;code&gt;rootdir()&lt;/code&gt; is &quot;/&quot;. Note that &lt;code&gt;rootdir()&lt;/code&gt; on Mac OS is the startup volume, which is the closest in concept to Unix' &quot;/&quot;. This should help to run existing scripts originally written for Unix.</source>
          <target state="translated">これはUnixに当てはまり、 &lt;code&gt;catdir(&quot;&quot;,&quot;a&quot;,&quot;b&quot;)&lt;/code&gt; は &quot;/ a / b&quot;を &lt;code&gt;rootdir()&lt;/code&gt; 、rootdir（）は &quot;/&quot; を返します。Mac OSの &lt;code&gt;rootdir()&lt;/code&gt; は起動ボリュームであり、Unixの「/」に概念的に最も近いことに注意してください。これは、もともとUnix用に書かれた既存のスクリプトを実行するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="397412f4d7a6d97f2f133b4c7f78e290d9cd2f84" translate="yes" xml:space="preserve">
          <source>This is typically used when testing cannot continue such as a critical module failing to compile or a necessary external utility not being available such as a database connection failing.</source>
          <target state="translated">これは通常、重要なモジュールのコンパイルに失敗したり、データベース接続に失敗するなど、必要な外部ユーティリティが利用できないなど、テストを継続できない場合に使用されます。</target>
        </trans-unit>
        <trans-unit id="bb1c3b06955402418f9a1645b31426cf2675075b" translate="yes" xml:space="preserve">
          <source>This is ugly. As of Perl 5.9.2, there's a much nicer way to express your desire for a certain byte-order: the &lt;code&gt;&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;&lt;/code&gt; modifiers. &lt;code&gt;&amp;gt;&lt;/code&gt; is the big-endian modifier, while &lt;code&gt;&amp;lt;&lt;/code&gt; is the little-endian modifier. Using them, we could rewrite the above code as:</source>
          <target state="translated">これは醜いです。Perl 5.9.2以降、特定のバイト順に対する希望を表現するためのより優れた方法があります。 &lt;code&gt;&amp;gt;&lt;/code&gt; および &lt;code&gt;&amp;lt;&lt;/code&gt; 修飾子です。 &lt;code&gt;&amp;gt;&lt;/code&gt; はビッグエンディアン修飾子、 &lt;code&gt;&amp;lt;&lt;/code&gt; はリトルエンディアン修飾子です。それらを使用して、上記のコードを次のように書き換えることができます。</target>
        </trans-unit>
        <trans-unit id="f64a4511ee072e665d5896089985a46b9305c064" translate="yes" xml:space="preserve">
          <source>This is used (optionally) by configure to list the contents of libraries. I will generate a cover function on the fly in the UU directory.</source>
          <target state="translated">これは、ライブラリの内容を一覧表示するためにconfigureで(オプションで)使用します。UUディレクトリにカバー関数をその場で生成してみます。</target>
        </trans-unit>
        <trans-unit id="84060e3f0779377a177060ca53204b2049c61bfc" translate="yes" xml:space="preserve">
          <source>This is used by &lt;a href=&quot;Test2::Event::Plan&quot;&gt;Test2::Event::Plan&lt;/a&gt; to exit 0 when the plan is 'skip_all'. This is also used by &lt;a href=&quot;Test2::Event:Bail&quot;&gt;Test2::Event:Bail&lt;/a&gt; to force the test to exit with a failure.</source>
          <target state="translated">これは、プランが「skip_all」の場合に0を終了するために&lt;a href=&quot;Test2::Event::Plan&quot;&gt;Test2 :: Event :: Plan&lt;/a&gt;によって使用されます。これは、&lt;a href=&quot;Test2::Event:Bail&quot;&gt;Test2 :: Event：Bail&lt;/a&gt;でも使用され、失敗してテストを強制的に終了します。</target>
        </trans-unit>
        <trans-unit id="e13da45b8fdb5dfbf619cb00d77540e51b9f0de1" translate="yes" xml:space="preserve">
          <source>This is used by Perl itself only for accessing operating system error messages via &lt;a href=&quot;perlvar#%24ERRNO&quot;&gt;$!&lt;/a&gt; and &lt;a href=&quot;perlvar#%24EXTENDED_OS_ERROR&quot;&gt;$^E&lt;/a&gt;.</source>
          <target state="translated">これは、Perl自体が&lt;a href=&quot;perlvar#%24ERRNO&quot;&gt;$！を&lt;/a&gt;介してオペレーティングシステムのエラーメッセージにアクセスする場合にのみ使用されます。そして、&lt;a href=&quot;perlvar#%24EXTENDED_OS_ERROR&quot;&gt;$ ^ E&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f57cc2e0a5e98dad21fe0583032325ceef3e8bcf" translate="yes" xml:space="preserve">
          <source>This is used by XS code that is &lt;code&gt;LC_NUMERIC&lt;/code&gt; locale-aware to force the locale for category &lt;code&gt;LC_NUMERIC&lt;/code&gt; to be what perl thinks is the current underlying locale. (The perl interpreter could be wrong about what the underlying locale actually is if some C or XS code has called the C library function &lt;a href=&quot;http://man.he.net/man3/setlocale&quot;&gt;setlocale(3)&lt;/a&gt; behind its back; calling &lt;a href=&quot;#sync_locale&quot;&gt;&quot;sync_locale&quot;&lt;/a&gt; before calling this macro will update perl's records.)</source>
          <target state="translated">これは、 &lt;code&gt;LC_NUMERIC&lt;/code&gt; ロケール対応のXSコードによって使用され、カテゴリ &lt;code&gt;LC_NUMERIC&lt;/code&gt; のロケールを、perlが現在の基になるロケールであると見なすロケールに強制します。 （一部のCまたはXSコードが背後でCライブラリ関数&lt;a href=&quot;http://man.he.net/man3/setlocale&quot;&gt;setlocale（3）を&lt;/a&gt;呼び出した場合、perlインタープリターは、基になるロケールが実際に何であるかについて間違っている可能性があります。このマクロを呼び出す前に&lt;a href=&quot;#sync_locale&quot;&gt;「sync_locale」&lt;/a&gt;を呼び出すと、perlのレコードが更新されます。）</target>
        </trans-unit>
        <trans-unit id="685a67efb688fb26fb65af406110717f25e2b745" translate="yes" xml:space="preserve">
          <source>This is used by XS code that that is &lt;code&gt;LC_NUMERIC&lt;/code&gt; locale-aware to force the locale for category &lt;code&gt;LC_NUMERIC&lt;/code&gt; to be what perl thinks is the current underlying locale. (The perl interpreter could be wrong about what the underlying locale actually is if some C or XS code has called the C library function</source>
          <target state="translated">これは、 &lt;code&gt;LC_NUMERIC&lt;/code&gt; ロケール対応のXSコードで使用され、カテゴリー &lt;code&gt;LC_NUMERIC&lt;/code&gt; のロケールを、Perlが現在の基本的なロケールと考えるものに強制します。（いくつかのCまたはXSコードがCライブラリ関数を呼び出した場合、perlインタープリターは、基になるロケールが実際に何であるかについて間違っている可能性があります</target>
        </trans-unit>
        <trans-unit id="6e065e9419827f7c0624c9591e7e2d9d64727710" translate="yes" xml:space="preserve">
          <source>This is used by perl to run external commands which explicitly require shell, like the commands using</source>
          <target state="translated">これは、明示的にシェルを必要とする外部コマンドを実行するために perl で使用されます。</target>
        </trans-unit>
        <trans-unit id="64698930b8cfe161fa438c57b55293be0ad5eced" translate="yes" xml:space="preserve">
          <source>This is used by the &lt;code&gt;perldoc&lt;/code&gt; program (see &lt;a href=&quot;perldoc&quot;&gt;perldoc&lt;/a&gt;), and may be used to generate HTML documentation usable by WWW browsers, and documentation in zillions of other formats: &lt;code&gt;info&lt;/code&gt; , &lt;code&gt;LaTeX&lt;/code&gt; , &lt;code&gt;Acrobat&lt;/code&gt; , &lt;code&gt;FrameMaker&lt;/code&gt; and so on. [Use programs such as</source>
          <target state="translated">これは、 &lt;code&gt;perldoc&lt;/code&gt; プログラム（&lt;a href=&quot;perldoc&quot;&gt;perldocを&lt;/a&gt;参照）によって使用され、WWWブラウザで使用できるHTMLドキュメントや、何十億もの他の形式（ &lt;code&gt;info&lt;/code&gt; 、 &lt;code&gt;LaTeX&lt;/code&gt; 、 &lt;code&gt;Acrobat&lt;/code&gt; 、 &lt;code&gt;FrameMaker&lt;/code&gt; など）のドキュメントを生成するために使用できます。[次のようなプログラムを使用する</target>
        </trans-unit>
        <trans-unit id="8b79fef1f877d1a8e263ce2050957470f7956ed4" translate="yes" xml:space="preserve">
          <source>This is used by the &lt;code&gt;perldoc&lt;/code&gt; program (see &lt;a href=&quot;perldoc&quot;&gt;perldoc&lt;/a&gt;), and may be used to generate HTML documentation usable by WWW browsers, and documentation in zillions of other formats: &lt;code&gt;info&lt;/code&gt;, &lt;code&gt;LaTeX&lt;/code&gt;, &lt;code&gt;Acrobat&lt;/code&gt;, &lt;code&gt;FrameMaker&lt;/code&gt; and so on. [Use programs such as</source>
          <target state="translated">これは &lt;code&gt;perldoc&lt;/code&gt; プログラム（&lt;a href=&quot;perldoc&quot;&gt;perldocを&lt;/a&gt;参照）によって使用され、WWWブラウザで使用できるHTMLドキュメント、および &lt;code&gt;info&lt;/code&gt; 、 &lt;code&gt;LaTeX&lt;/code&gt; 、 &lt;code&gt;Acrobat&lt;/code&gt; 、 &lt;code&gt;FrameMaker&lt;/code&gt; などの他の無数の形式のドキュメントを生成するために使用できます。[次のようなプログラムを使用する</target>
        </trans-unit>
        <trans-unit id="f691385e53ced861147f8d8eef50471ec380ca35" translate="yes" xml:space="preserve">
          <source>This is used for instance by &lt;a href=&quot;Math::BigInt::Constant&quot;&gt;Math::BigInt::Constant&lt;/a&gt;.</source>
          <target state="translated">これは、たとえば&lt;a href=&quot;Math::BigInt::Constant&quot;&gt;Math :: BigInt :: Constant&lt;/a&gt;によって使用されます。</target>
        </trans-unit>
        <trans-unit id="938e99644f7869851b92cffce88c437cad0e1198" translate="yes" xml:space="preserve">
          <source>This is used for instance by &lt;a href=&quot;http://search.cpan.org/perldoc/Math::BigInt::Constant&quot;&gt;Math::BigInt::Constant&lt;/a&gt;.</source>
          <target state="translated">これは、例えば、&lt;a href=&quot;http://search.cpan.org/perldoc/Math::BigInt::Constant&quot;&gt;Math :: BigInt :: Constant&lt;/a&gt;によって使用されます。</target>
        </trans-unit>
        <trans-unit id="89a92812a074e6032ec40db97f0e02dae0db9d29" translate="yes" xml:space="preserve">
          <source>This is used for passing perl filehandles to and from C using &lt;code&gt;FILE *&lt;/code&gt; structures.</source>
          <target state="translated">これは、 &lt;code&gt;FILE *&lt;/code&gt; 構造体を使用してCとの間でperlファイルハンドルを渡すために使用されます。</target>
        </trans-unit>
        <trans-unit id="e990faa3bfbeb576a41b956da185db53775fca9a" translate="yes" xml:space="preserve">
          <source>This is used for passing perl filehandles to and from C using &lt;code&gt;PerlIO *&lt;/code&gt; structures. The file handle can used for reading and writing. This corresponds to the &lt;code&gt;+&amp;lt;&lt;/code&gt; mode, see also T_IN and T_OUT.</source>
          <target state="translated">これは、 &lt;code&gt;PerlIO *&lt;/code&gt; 構造体を使用してCとの間でPerlファイルハンドルを渡すために使用されます。ファイルハンドルは、読み取りと書き込みに使用できます。これは &lt;code&gt;+&amp;lt;&lt;/code&gt; モードに対応します。T_INおよびT_OUTも参照してください。</target>
        </trans-unit>
        <trans-unit id="45afb2cb863a986ba92ff0947755735a5e6d66a7" translate="yes" xml:space="preserve">
          <source>This is used for tests that under some conditions can be skipped. It's basically equivalent to:</source>
          <target state="translated">これは、いくつかの条件でスキップできるテストに使用されます。基本的にはこれと同等です。</target>
        </trans-unit>
        <trans-unit id="9e0a9f53f8706ee02f00b4b66258c8d781bdebc5" translate="yes" xml:space="preserve">
          <source>This is used heavily by Configure and then by perl itself. QNX4's version is fine, but Configure will choke on the 16-bit version, so if you are running QNX 4.22, link /bin/sh to /bin32/ksh</source>
          <target state="translated">これは、Configure と perl 自体によって多用されています。QNX4 のバージョンは問題ありませんが、Configure は 16 ビット バージョンでは窒息してしまうので、QNX 4.22 を実行している場合は、/bin/sh を /bin32/ksh にリンクしてください。</target>
        </trans-unit>
        <trans-unit id="b07dd7d6e8aff5833887dd70ddcb6745a582ec73" translate="yes" xml:space="preserve">
          <source>This is used in conjunction with one of the macros &lt;a href=&quot;#STORE_LC_NUMERIC_SET_TO_NEEDED&quot;&gt;&quot;STORE_LC_NUMERIC_SET_TO_NEEDED&quot;&lt;/a&gt; and &lt;a href=&quot;#STORE_LC_NUMERIC_FORCE_TO_UNDERLYING&quot;&gt;&quot;STORE_LC_NUMERIC_FORCE_TO_UNDERLYING&quot;&lt;/a&gt; to properly restore the &lt;code&gt;LC_NUMERIC&lt;/code&gt; state.</source>
          <target state="translated">これは、マクロ&lt;a href=&quot;#STORE_LC_NUMERIC_SET_TO_NEEDED&quot;&gt;「STORE_LC_NUMERIC_SET_TO_NEEDED」&lt;/a&gt;および&lt;a href=&quot;#STORE_LC_NUMERIC_FORCE_TO_UNDERLYING&quot;&gt;「STORE_LC_NUMERIC_FORCE_TO_UNDERLYING」の&lt;/a&gt;いずれかと組み合わせて使用​​され、 &lt;code&gt;LC_NUMERIC&lt;/code&gt; 状態を適切に復元します。</target>
        </trans-unit>
        <trans-unit id="88552389c076b1697dd901849fcd278da90bf901" translate="yes" xml:space="preserve">
          <source>This is used in conjunction with one of the macros &lt;a href=&quot;#STORE_LC_NUMERIC_SET_TO_NEEDED&quot;&gt;STORE_LC_NUMERIC_SET_TO_NEEDED&lt;/a&gt; and &lt;a href=&quot;#STORE_LC_NUMERIC_FORCE_TO_UNDERLYING&quot;&gt;STORE_LC_NUMERIC_FORCE_TO_UNDERLYING&lt;/a&gt;</source>
          <target state="translated">これは、&lt;a href=&quot;#STORE_LC_NUMERIC_SET_TO_NEEDED&quot;&gt;STORE_LC_NUMERIC_SET_TO_NEEDED&lt;/a&gt;および&lt;a href=&quot;#STORE_LC_NUMERIC_FORCE_TO_UNDERLYING&quot;&gt;STORE_LC_NUMERIC_FORCE_TO_UNDERLYING&lt;/a&gt;マクロのいずれかと組み合わせて使用​​されます。</target>
        </trans-unit>
        <trans-unit id="a76c37bf4c1019b528db2eb84815660835ecca3f" translate="yes" xml:space="preserve">
          <source>This is used internally by various sv-modifying functions, such as &lt;code&gt;sv_setsv&lt;/code&gt;, &lt;code&gt;sv_setiv&lt;/code&gt; and &lt;code&gt;sv_pvn_force&lt;/code&gt;.</source>
          <target state="translated">これは、次のような種々のSV-変更機能によって内部的に使用され &lt;code&gt;sv_setsv&lt;/code&gt; 、 &lt;code&gt;sv_setiv&lt;/code&gt; と &lt;code&gt;sv_pvn_force&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="51b114b6070b2dbbb4c5faa25f40aadc4f1bf209" translate="yes" xml:space="preserve">
          <source>This is used internally by various sv-modifying functions, such as sv_setsv, sv_setiv and sv_pvn_force.</source>
          <target state="translated">これは、sv_setsv、sv_setiv、sv_pvn_force などの様々な sv-modifying 関数によって内部的に使用されます。</target>
        </trans-unit>
        <trans-unit id="493fa4c255c75476c5de3398d669dcb7143cfa2b" translate="yes" xml:space="preserve">
          <source>This is used to alert the driver that a hub is no longer accepting events. The driver should keep track of the process and thread ids, the hub should only be dropped by the proc+thread that started it (This is the drivers responsibility to enforce).</source>
          <target state="translated">これは、ハブがイベントを受け付けなくなったことをドライバに警告するために使用されます。ドライバはプロセスとスレッドの ID を追跡しておく必要があり、ハブはそのハブを開始した proc+スレッドによってのみ削除されるべきです (これを実施するのはドライバの責任です)。</target>
        </trans-unit>
        <trans-unit id="7cfc92a05bf403630dcc4ad4521b54e6866a1941" translate="yes" xml:space="preserve">
          <source>This is used to alert the driver that a new hub is expecting events. The driver should keep track of the process and thread ids, the hub should only be dropped by the proc+thread that started it.</source>
          <target state="translated">これは、新しいハブがイベントを期待していることをドライバに警告するために使用されます。ドライバはプロセスとスレッドの ID を追跡する必要があり、ハブはそれを開始した proc+スレッドによってのみ削除されるべきです。</target>
        </trans-unit>
        <trans-unit id="2674017b922020ed58a1ae38d38243bb158c698b" translate="yes" xml:space="preserve">
          <source>This is used to convert the perl argument list to a C array and for pushing the contents of a C array onto the perl argument stack.</source>
          <target state="translated">これはperlの引数リストをC配列に変換し、C配列の内容をperlの引数スタックにプッシュするために使用されます。</target>
        </trans-unit>
        <trans-unit id="d0f5557ac77d434ebd595a2a1706e59ef7b222ff" translate="yes" xml:space="preserve">
          <source>This is used to efficiently decide if the next few bytes in &lt;code&gt;s&lt;/code&gt; is legal Unicode-acceptable UTF-8 for a single character.</source>
          <target state="translated">これは、 &lt;code&gt;s&lt;/code&gt; の次の数バイトが1文字に対してUnicodeで受け入れ可能なUTF-8であるかどうかを効率的に判断するために使用されます。</target>
        </trans-unit>
        <trans-unit id="3d7b5e8f4a478685a6595ee53579e42a7ad93748" translate="yes" xml:space="preserve">
          <source>This is used to encapsulate diag messages created inside TODO.</source>
          <target state="translated">TODOの中で作成されたdiagメッセージをカプセル化するために使用されます。</target>
        </trans-unit>
        <trans-unit id="2b83bcfe3741aa8ea6cddc6c13968e1de17cd570" translate="yes" xml:space="preserve">
          <source>This is used to help wrap XS or C code that is &lt;code&gt;LC_NUMERIC&lt;/code&gt; locale-aware. This locale category is generally kept set to a locale where the decimal radix character is a dot, and the separator between groups of digits is empty. This is because most XS code that reads floating point numbers is expecting them to have this syntax.</source>
          <target state="translated">これは、 &lt;code&gt;LC_NUMERIC&lt;/code&gt; ロケール対応のXSまたはCコードをラップするために使用されます。このロケールカテゴリは通常、10進基数文字がドットであり、数字のグループ間の区切り文字が空であるロケールに設定されたままになります。これは、浮動小数点数を読み取るほとんどのXSコードが、これらの構文を想定しているためです。</target>
        </trans-unit>
        <trans-unit id="1dfca62a32b70d4bff67e06bed578f950673ab61" translate="yes" xml:space="preserve">
          <source>This is used to help wrap XS or C code that that is &lt;code&gt;LC_NUMERIC&lt;/code&gt; locale-aware. This locale category is generally kept set to the C locale by Perl for backwards compatibility, and because most XS code that reads floating point values can cope only with the decimal radix character being a dot.</source>
          <target state="translated">これは、 &lt;code&gt;LC_NUMERIC&lt;/code&gt; ロケール対応のXSまたはCコードをラップするために使用されます。このロケールカテゴリは通常、下位互換性のためにPerlによってCロケールに設定されたままになっています。これは、浮動小数点値を読み取るほとんどのXSコードは、小数点である10進基数文字のみに対応できるためです。</target>
        </trans-unit>
        <trans-unit id="27a198e65c924e429ea7fa75dae5924d31fa6b88" translate="yes" xml:space="preserve">
          <source>This is used to prevent the use of &lt;code&gt;caller()&lt;/code&gt; in END blocks which can cause segfaults. This is only necessary in some persistent environments that may have multiple END phases.</source>
          <target state="translated">これは、セグメンテーション違反を引き起こす可能性のあるENDブロックでの &lt;code&gt;caller()&lt;/code&gt; の使用を防ぐために使用されます。これは、複数のENDフェーズがある可能性がある一部の永続的な環境でのみ必要です。</target>
        </trans-unit>
        <trans-unit id="61ffe3ce8492ad29999613fc31942e00c100ad7a" translate="yes" xml:space="preserve">
          <source>This is used to set the build type to debug or release. Change the build type only after executing SetNWBld.bat</source>
          <target state="translated">ビルドタイプをデバッグまたはリリースに設定するために使用します。ビルドタイプの変更は SetNWBld.bat を実行した後にのみ行います。</target>
        </trans-unit>
        <trans-unit id="d4db27a76c75ff7fc1ed3957a4bdf992bfb4169e" translate="yes" xml:space="preserve">
          <source>This is used to toggle Test2's belief that the END phase has already started. With no arguments this will set it to true. With arguments it will set it to the first argument's value.</source>
          <target state="translated">これは、Test2がENDフェーズがすでに始まっていると信じるかどうかを切り替えるために使用されます。引数がない場合はtrueに設定されます。引数がある場合は、最初の引数の値に設定されます。</target>
        </trans-unit>
        <trans-unit id="33295dd981a7660fbc204da5e0a0ad1772d342a0" translate="yes" xml:space="preserve">
          <source>This is used to track which tests unexpectedly succeeded.</source>
          <target state="translated">これは、どのテストが予想外に成功したかを追跡するために使用されます。</target>
        </trans-unit>
        <trans-unit id="717574ff9403ecd69bea9a30328bf1a90f831842" translate="yes" xml:space="preserve">
          <source>This is used to write code for styles of operating system. See os_flavor_is() for use.</source>
          <target state="translated">これは、オペレーティングシステムのスタイルのためのコードを書くために使用されます。使用方法は os_flavor_is()を参照してください。</target>
        </trans-unit>
        <trans-unit id="92dd601445cafa868ebbffa5406795a7efb88b1a" translate="yes" xml:space="preserve">
          <source>This is useful for applying names to anonymous CODE references so that stack traces and similar situations, to give a useful name rather than having the default of &lt;code&gt;__ANON__&lt;/code&gt;. Note that this name is only used for this situation; the &lt;code&gt;set_subname&lt;/code&gt; will not install it into the symbol table; you will have to do that yourself if required.</source>
          <target state="translated">これは、匿名のCODE参照に名前を適用して、スタックトレースや同様の状況で、デフォルトの &lt;code&gt;__ANON__&lt;/code&gt; ではなく有用な名前を付けるのに役立ちます。この名前はこの状況でのみ使用されることに注意してください。 &lt;code&gt;set_subname&lt;/code&gt; は、シンボルテーブルにそれをインストールしません。必要に応じて、自分で行う必要があります。</target>
        </trans-unit>
        <trans-unit id="a64fac67cd72a00814ab828e9c9bd92a6463973e" translate="yes" xml:space="preserve">
          <source>This is useful for code like:</source>
          <target state="translated">のようなコードに便利です。</target>
        </trans-unit>
        <trans-unit id="0a2bc63942e3a80b89ce25e1ac1f8a32f3bda215" translate="yes" xml:space="preserve">
          <source>This is useful for keeping copies of references, but you don't want to prevent the object being DESTROY-ed at its usual time.</source>
          <target state="translated">これは参照のコピーを保持するのに便利ですが、通常の時間にオブジェクトがDESTROY-edされるのを防ぎたくない場合に便利です。</target>
        </trans-unit>
        <trans-unit id="68748f1b2fdfc815e31f2005d15151ad297531bd" translate="yes" xml:space="preserve">
          <source>This is useful if you don't know which one of a set of alternative patterns matched. For example:</source>
          <target state="translated">これは、代替パターンのセットのうち、どれが一致したかわからない場合に便利です。例えば</target>
        </trans-unit>
        <trans-unit id="24abff8fd9f42596b61820bc8c96b9b877025034" translate="yes" xml:space="preserve">
          <source>This is useful if you want to repeatedly parse JSON objects and want to ignore any trailing data, which means you have to reset the parser after each successful decode.</source>
          <target state="translated">これは、JSON オブジェクトを繰り返しパースしたい場合に便利です。</target>
        </trans-unit>
        <trans-unit id="42a4e9a54829e179cb44fc85ba544f789e1c2e15" translate="yes" xml:space="preserve">
          <source>This is useful if you want to report then some other way than &lt;code&gt;carp&lt;/code&gt; 'ing when the verbose flag is on.</source>
          <target state="translated">あなたは、その後以外の何らかの方法で報告したい場合に便利である &lt;code&gt;carp&lt;/code&gt; 冗長フラグがオンのときにする」を。</target>
        </trans-unit>
        <trans-unit id="153de877b9bc07e9c5b4ac46607a14b4d6c4da2c" translate="yes" xml:space="preserve">
          <source>This is useful if you want to report then some other way than &lt;code&gt;carp&lt;/code&gt;'ing when the verbose flag is on.</source>
          <target state="translated">これは、詳細フラグがオンになっているときに &lt;code&gt;carp&lt;/code&gt; 以外の方法でレポートする場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="c9238f80fbc3497eb44d341942c244b6a1f8c7d1" translate="yes" xml:space="preserve">
          <source>This is useful if your JSON texts are not delimited by an outer protocol and you need to know where the JSON text ends.</source>
          <target state="translated">これは、JSONテキストが外部プロトコルで区切られておらず、JSONテキストの終了点を知る必要がある場合に便利です。</target>
        </trans-unit>
        <trans-unit id="3180e175adf2fd8ff88aab37691cd4b1c546dfea" translate="yes" xml:space="preserve">
          <source>This is useful to avoid a CODE: block for a C function which takes a parameter by reference. Typically, the parameter should be not a pointer type (an &lt;code&gt;&lt;a href=&quot;functions/int&quot;&gt;int&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;long&lt;/code&gt; but not an &lt;code&gt;&lt;a href=&quot;functions/int&quot;&gt;int*&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;long*&lt;/code&gt; ).</source>
          <target state="translated">これは、参照によってパラメーターを受け取るC関数のCODE：ブロックを回避するのに役立ちます。通常、パラメーターはポインター・タイプであってはなりません（ &lt;code&gt;&lt;a href=&quot;functions/int&quot;&gt;int&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;long&lt;/code&gt; ですが、 &lt;code&gt;&lt;a href=&quot;functions/int&quot;&gt;int*&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;long*&lt;/code&gt; はありません）。</target>
        </trans-unit>
        <trans-unit id="f32da9d6ece9275a31f6ad58e26339b4aa05f9a0" translate="yes" xml:space="preserve">
          <source>This is useful to avoid a CODE: block for a C function which takes a parameter by reference. Typically, the parameter should be not a pointer type (an &lt;code&gt;int&lt;/code&gt; or &lt;code&gt;long&lt;/code&gt; but not an &lt;code&gt;int*&lt;/code&gt; or &lt;code&gt;long*&lt;/code&gt;).</source>
          <target state="translated">これは、参照によってパラメーターを受け取るC関数のCODE：ブロックを回避するのに役立ちます。通常、パラメーターはポインター型（ &lt;code&gt;int&lt;/code&gt; または &lt;code&gt;long&lt;/code&gt; ではなく、 &lt;code&gt;int*&lt;/code&gt; または &lt;code&gt;long*&lt;/code&gt; ）であってはなりません。</target>
        </trans-unit>
        <trans-unit id="242135d43e5e5fb3cfd2e2eb4dedd974f1546560" translate="yes" xml:space="preserve">
          <source>This is useful when a fixed-length buffer is being tested for being well-formed UTF-8, but the final few bytes in it don't comprise a full character; that is, it is split somewhere in the middle of the final code point's UTF-8 representation. (Presumably when the buffer is refreshed with the next chunk of data, the new first bytes will complete the partial code point.) This function is used to verify that the final bytes in the current buffer are in fact the legal beginning of some code point, so that if they aren't, the failure can be signalled without having to wait for the next read.</source>
          <target state="translated">これは、固定長のバッファがUTF-8であるかどうかテストされているが、その中の最後の数バイトが完全な文字を構成していない場合に便利です。つまり、最終的なコードポイントの UTF-8 表現の途中のどこかで分割されています (おそらく、バッファが次のデータの塊でリフレッシュされたときに、新しい最初のバイトで部分的なコードポイントが完成します)。この関数は、現在のバッファ内の最終バイトが、実際にはあるコードポイントの正当な始まりであるかどうかを検証するために使用されます。</target>
        </trans-unit>
        <trans-unit id="9e13765136cecd81d6e3522084679384fb85c0ae" translate="yes" xml:space="preserve">
          <source>This is useful when calculating checksum for files:</source>
          <target state="translated">ファイルのチェックサムを計算するときに便利です。</target>
        </trans-unit>
        <trans-unit id="7a8a2f33ee6a615c27a87f750d3b6d2a6919cb19" translate="yes" xml:space="preserve">
          <source>This is useful when you want to do the encoding yourself (e.g. when you want to have UTF-16 encoded JSON texts) or when some other layer does the encoding for you (for example, when printing to a terminal using a filehandle that transparently encodes to UTF-8 you certainly do NOT want to UTF-8 encode your data first and have Perl encode it another time).</source>
          <target state="translated">これは、自分でエンコーディングを行いたい場合(例えば、UTF-16でエンコードされたJSONテキストを持ちたい場合)や、他のレイヤーがエンコーディングを行ってくれる場合に便利です(例えば、透過的にUTF-8にエンコードするファイルハンドルを使ってターミナルに印刷する場合、最初にデータをUTF-8にエンコードしてからPerlにエンコードさせることは絶対にしたくありません)。</target>
        </trans-unit>
        <trans-unit id="e13be01e22159590b48bf995ac0b3bcde5d745a9" translate="yes" xml:space="preserve">
          <source>This is useful when you want to pass a decoded data structure directly to other serialisers like YAML, Data::MessagePack and so on.</source>
          <target state="translated">これは、デコードされたデータ構造をYAMLやData::MessagePackなどのような他のシリアライザに直接渡したい場合に便利です。</target>
        </trans-unit>
        <trans-unit id="acefb224b2e9e2708aa6e9ceef7c0496a9b29d9e" translate="yes" xml:space="preserve">
          <source>This is useful with sockets when you want to tell the other side you're done writing but not done reading, or vice versa. It's also a more insistent form of &lt;code&gt;close&lt;/code&gt; because it also disables the file descriptor in any forked copies in other processes.</source>
          <target state="translated">これは、書き込みは完了したが読み取りは完了していないことを反対側に伝えたい場合、またはその逆の場合に、ソケットで役立ちます。また、他のプロセスでフォークされたコピーのファイル記述子も無効にするため、より一貫性のある形式の &lt;code&gt;close&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="61dbd2c8b8aff05e41e7c5996e136b2e52680ad0" translate="yes" xml:space="preserve">
          <source>This is useful with sockets when you want to tell the other side you're done writing but not done reading, or vice versa. It's also a more insistent form of close because it also disables the file descriptor in any forked copies in other processes.</source>
          <target state="translated">これはソケットで、書き込みは終わったが読み込みは終わっていないことを相手側に伝えたい場合や、その逆の場合に便利です。また、他のプロセスでフォークされたコピーのファイルディスクリプタを無効にするので、close のよりしつこい形式でもあります。</target>
        </trans-unit>
        <trans-unit id="f513c390b6f7958ee20cf98d8560715b5f8df7bb" translate="yes" xml:space="preserve">
          <source>This is variable gets set in various places to tell i_fcntl that &amp;lt;fcntl.h&amp;gt; should be included.</source>
          <target state="translated">これはさまざまな場所で設定される変数で、&amp;lt;fcntl.h&amp;gt;を含める必要があることをi_fcntlに通知します。</target>
        </trans-unit>
        <trans-unit id="a219720ed763ff153bf9c4206e6fc4962fcc28fa" translate="yes" xml:space="preserve">
          <source>This is variable gets set in various places to tell i_sys_file that &amp;lt;sys/file.h&amp;gt; should be included.</source>
          <target state="translated">これはさまざまな場所で設定される変数で、&amp;lt;sys / file.h&amp;gt;を含める必要があることをi_sys_fileに通知します。</target>
        </trans-unit>
        <trans-unit id="ec63ffae64519c04a43508d9591237b500c83426" translate="yes" xml:space="preserve">
          <source>This is very dangerous to push on a handle using an &lt;code&gt;:encoding&lt;/code&gt; layer, as such a layer assumes to be working with Perl's internal upgraded encoding, so you will likely get a mangled result. Instead use &lt;code&gt;:raw&lt;/code&gt; or &lt;code&gt;:pop&lt;/code&gt; to remove encoding layers.</source>
          <target state="translated">&lt;code&gt;:encoding&lt;/code&gt; レイヤーを使用してハンドルをプッシュするのは非常に危険です。このようなレイヤーは、Perlの内部アップグレードされたエンコーディングで動作することを前提としているため、結果が壊れてしまう可能性があります。代わりに、 &lt;code&gt;:raw&lt;/code&gt; または &lt;code&gt;:pop&lt;/code&gt; を使用してエンコーディングレイヤーを削除してください。</target>
        </trans-unit>
        <trans-unit id="ba0989b9613ab7f11b2f2270357953fc855e8dd8" translate="yes" xml:space="preserve">
          <source>This is very dangerous, as you may block forever. It assumes it's going to talk to something like &lt;a href=&quot;http://man.he.net/man1/bc&quot;&gt;bc(1)&lt;/a&gt;, both writing to it and reading from it. This is presumably safe because you &quot;know&quot; that commands like &lt;a href=&quot;http://man.he.net/man1/bc&quot;&gt;bc(1)&lt;/a&gt; will read a line at a time and output a line at a time. Programs like &lt;a href=&quot;http://man.he.net/man1/sort&quot;&gt;sort(1)&lt;/a&gt; that read their entire input stream first, however, are quite apt to cause deadlock.</source>
          <target state="translated">永久にブロックする可能性があるため、これは非常に危険です。&lt;a href=&quot;http://man.he.net/man1/bc&quot;&gt;bc（1）の&lt;/a&gt;ようなものと通信し、書き込みと読み取りの両方を行うことを前提としています。&lt;a href=&quot;http://man.he.net/man1/bc&quot;&gt;bc（1）の&lt;/a&gt;ようなコマンドが一度に1行を読み取り、一度に1行を出力することを「知っている」ので、これはおそらく安全です。ただし、最初に入力ストリーム全体を読み取る&lt;a href=&quot;http://man.he.net/man1/sort&quot;&gt;sort（1）の&lt;/a&gt;ようなプログラムは、デッドロックを引き起こす傾向があります。</target>
        </trans-unit>
        <trans-unit id="c6c48e550cd9137be036063a2bb992fbdc655583" translate="yes" xml:space="preserve">
          <source>This is very dangerous, as you may block forever. It assumes it's going to talk to something like &lt;b&gt;bc&lt;/b&gt;, both writing to it and reading from it. This is presumably safe because you &quot;know&quot; that commands like &lt;b&gt;bc&lt;/b&gt; will read a line at a time and output a line at a time. Programs like &lt;b&gt;sort&lt;/b&gt; that read their entire input stream first, however, are quite apt to cause deadlock.</source>
          <target state="translated">永久にブロックする可能性があるため、これは非常に危険です。それはそれが&lt;b&gt;bcの&lt;/b&gt;ようなものと対話することを想定しており、それへの書き込みと読み取りの両方を行います。&lt;b&gt;bcの&lt;/b&gt;ようなコマンドは一度に1行ずつ読み取り、1行ずつ出力することを &quot;知っている&quot;ため、これはおそらく安全です。ただし、最初に入力ストリーム全体を読み取る&lt;b&gt;sortの&lt;/b&gt;ようなプログラムは、デッドロックを引き起こしがちです。</target>
        </trans-unit>
        <trans-unit id="4d27e7008a46081de6bf70cf35ea9983d5762e5e" translate="yes" xml:space="preserve">
          <source>This is very similar to &quot;How do I process an entire hash?&quot;, also in &lt;a href=&quot;perlfaq4&quot;&gt;perlfaq4&lt;/a&gt;, but a bit simpler in the common cases.</source>
          <target state="translated">これは、&lt;a href=&quot;perlfaq4&quot;&gt;perlfaq4&lt;/a&gt;でも「ハッシュ全体を処理するにはどうすればよいですか」とよく似ていますが、一般的なケースでは少し単純です。</target>
        </trans-unit>
        <trans-unit id="e597cd56d56a437656a2f431e5a405bb225ea80c" translate="yes" xml:space="preserve">
          <source>This is very useful if you insist on taking an array reference as argument for example.</source>
          <target state="translated">これは、例えば配列の参照を引数に取りたい場合などに非常に便利です。</target>
        </trans-unit>
        <trans-unit id="9ecc6a74af1d686f96a51556930a084f0975a2d7" translate="yes" xml:space="preserve">
          <source>This is what APPNOTE.TXT has to say on what should be stored in the zip filename header field.</source>
          <target state="translated">これは、zipファイル名のヘッダフィールドに何を格納すべきかについてAPPNOTE.TXTが述べているものです。</target>
        </trans-unit>
        <trans-unit id="ccdaae868b02e396a128e9209508dfb651981fc3" translate="yes" xml:space="preserve">
          <source>This is what system() (see &lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;), &lt;code&gt;``&lt;/code&gt; (see &lt;a href=&quot;perlop#I%2fO-Operators&quot;&gt;I/O Operators in perlop&lt;/a&gt;), and</source>
          <target state="translated">これがsystem（）（&lt;a href=&quot;functions/system&quot;&gt;systemを&lt;/a&gt;参照）、 &lt;code&gt;``&lt;/code&gt; （&lt;a href=&quot;perlop#I%2fO-Operators&quot;&gt;perlopのI / O演算子を参照&lt;/a&gt;）、そして</target>
        </trans-unit>
        <trans-unit id="2e2119fd8993283ac1f0a47f57b06a54bbb3f262" translate="yes" xml:space="preserve">
          <source>This is what system() (see &lt;a href=&quot;perlfunc#system&quot;&gt;&quot;system&quot; in perlfunc&lt;/a&gt;), &lt;code&gt;``&lt;/code&gt; (see &lt;a href=&quot;perlop#I%2FO-Operators&quot;&gt;&quot;I/O Operators&quot; in perlop&lt;/a&gt;), and</source>
          <target state="translated">これは、system（）（&lt;a href=&quot;perlfunc#system&quot;&gt;perlfuncの「system」を参照&lt;/a&gt;）、 &lt;code&gt;``&lt;/code&gt; （&lt;a href=&quot;perlop#I%2FO-Operators&quot;&gt;perlopの「I / OOperators」を参照&lt;/a&gt;）、および</target>
        </trans-unit>
        <trans-unit id="f2eda7d1f80cf3c434dc7a7060222b6c89d945e1" translate="yes" xml:space="preserve">
          <source>This is what takes events and turns them into TAP.</source>
          <target state="translated">これがイベントをTAPにしてしまうのです。</target>
        </trans-unit>
        <trans-unit id="57e5ac17ec3c4ac0ba4b990c6d906bee2bbc734b" translate="yes" xml:space="preserve">
          <source>This is what you really need to know as an XS programmer, of course. When an XSUB returns a pointer to a C structure that pointer is stored in an SV and a reference to that SV is placed on the XSUB stack. So the output from an XSUB which uses something like the T_PTROBJ map might look something like this:</source>
          <target state="translated">もちろん、これはXSプログラマとして知っておくべきことです。XSUBがC構造体へのポインタを返すとき、そのポインタはSVに格納され、そのSVへの参照がXSUBスタックに置かれます。そのため、T_PTROBJマップのようなものを使用したXSUBの出力は次のようになります。</target>
        </trans-unit>
        <trans-unit id="4310f6ad3f6095c3049af8ec37cf9d1c7e8bca42" translate="yes" xml:space="preserve">
          <source>This is when the firewall implemented in the kernel (via NAT, or networking address translation), it allows you to hide a complete network behind one IP address. With this firewall no special compiling is needed as you can access hosts directly.</source>
          <target state="translated">これはカーネルに実装されたファイアウォールが (NAT やネットワーキングアドレス変換を介して)一つの IP アドレスの後ろにネットワーク全体を隠すことを可能にします。このファイアウォールを使うと、ホストに直接アクセスできるので、特別なコンパイルは必要ありません。</target>
        </trans-unit>
        <trans-unit id="fb3eba7f97ab07f3173100c09ae1ea0eedcc95ab" translate="yes" xml:space="preserve">
          <source>This is when the firewall machine runs a web server, and to access the outside world, you must do so via that web server. If you set environment variables like http_proxy or ftp_proxy to values beginning with http://, or in your web browser you've proxy information set, then you know you are running behind an http firewall.</source>
          <target state="translated">これは、ファイアウォールマシンがウェブサーバを実行していて、外部の世界にアクセスするためには、そのウェブサーバを介してアクセスしなければならない場合のことです。http_proxy や ftp_proxy のような環境変数を http://で始まる値に設定したり、 ウェブブラウザでプロキシ情報を設定したりしている場合は、 http ファイアウォールの背後で動作していることがわかります。</target>
        </trans-unit>
        <trans-unit id="75c3d5cffa21770fa5fe6937e649710847afafb8" translate="yes" xml:space="preserve">
          <source>This is when you see something like:</source>
          <target state="translated">みたいなのが出てきたときです。</target>
        </trans-unit>
        <trans-unit id="7241b1fe1bce66db853a8d9b85416133eff0f6db" translate="yes" xml:space="preserve">
          <source>This is where all events enter the hub for processing.</source>
          <target state="translated">ここでは、すべてのイベントが処理のためのハブに入ります。</target>
        </trans-unit>
        <trans-unit id="837053e5aa9e97ca4eca0f75fa58885b37dbdc1f" translate="yes" xml:space="preserve">
          <source>This is where gotchas and breakages related to the Test2 upgrade are documented. The upgrade causes Test::Builder to defer to Test2 under the hood. This transition is mostly transparent, but there are a few cases that can trip you up.</source>
          <target state="translated">ここでは、Test2 のアップグレードに関連した問題や不具合を文書化しています。このアップグレードにより、Test::Builder はフードの下で Test2 にディファードするようになります。この移行はほとんど透過的に行われますが、いくつかのケースで躓くことがあります。</target>
        </trans-unit>
        <trans-unit id="2ad104027af291dcad88bf06901ecbc700b85cc1" translate="yes" xml:space="preserve">
          <source>This is where roles come in. It makes a lot of sense to create a &lt;code&gt;HasOnOffSwitch&lt;/code&gt; role and apply it to both classes. This role would define a known API like providing &lt;code&gt;turn_on()&lt;/code&gt; and &lt;code&gt;turn_off()&lt;/code&gt; methods.</source>
          <target state="translated">これがロールの出番です &lt;code&gt;HasOnOffSwitch&lt;/code&gt; ロールを作成して両方のクラスに適用することは非常に理にかなっています。このロールは、 &lt;code&gt;turn_on()&lt;/code&gt; および &lt;code&gt;turn_off()&lt;/code&gt; メソッドの提供など、既知のAPIを定義します。</target>
        </trans-unit>
        <trans-unit id="4320c9ea9a75ef79b1c739e5fcf494dc9cfb50f4" translate="yes" xml:space="preserve">
          <source>This is which protocol to use. In this case, the socket handle returned will be connected to a TCP socket, because we want a stream-oriented connection, that is, one that acts pretty much like a plain old file. Not all sockets are this of this type. For example, the UDP protocol can be used to make a datagram socket, used for message-passing.</source>
          <target state="translated">これはどのプロトコルを使用するかということです。この場合、返されたソケットハンドルは TCP ソケットに接続されます。すべてのソケットがこのタイプではありません。例えば、UDP プロトコルを使用してデータグラムソケットを作ることができます。</target>
        </trans-unit>
        <trans-unit id="30ceb66515d4a53e1d2f25ce989ec733d96ff6db" translate="yes" xml:space="preserve">
          <source>This is which protocol to use. Like our clients, we'll still specify &lt;code&gt;&quot;tcp&quot;&lt;/code&gt; here.</source>
          <target state="translated">これは使用するプロトコルです。クライアントと同様に、ここでも &lt;code&gt;&quot;tcp&quot;&lt;/code&gt; 指定します。</target>
        </trans-unit>
        <trans-unit id="04d23d996b25b2c2795e313433104ffdca7710c6" translate="yes" xml:space="preserve">
          <source>This is, I hope, a natural term given the implementation, and should avoid connotations that are inherent in earlier uses of &quot;discipline&quot; for things which are rather different.</source>
          <target state="translated">これは、実装を考えると自然な言葉であり、以前の「規律」という言葉に内在する意味合いを避けるべきであると私は願っています。</target>
        </trans-unit>
        <trans-unit id="921e3efa52591567d6779d551efd563ccc94a973" translate="yes" xml:space="preserve">
          <source>This isn't as simple a question as it sounds. There are two parts:</source>
          <target state="translated">これは単純な質問というほどではありません。2つの部分があります。</target>
        </trans-unit>
        <trans-unit id="c2dda0261888bf6471240acf321fd52c01dc23ec" translate="yes" xml:space="preserve">
          <source>This issues a warning at the frame (filename and line number where errors should be reported).</source>
          <target state="translated">これは、フレーム(エラーが報告されるべきファイル名と行番号)で警告を発行します。</target>
        </trans-unit>
        <trans-unit id="033f6ccbcb480bbc0ac7d9079cba07009a6cd094" translate="yes" xml:space="preserve">
          <source>This item specifies the name by which the linker knows the extension, which may be different from the name of the extension itself (for instance, some linkers add an '_' to the name of the extension). If it is not specified, it is derived from the NAME attribute. It is presently used only by OS2 and Win32.</source>
          <target state="translated">この項目は、リンカが知っている拡張子の名前を指定しますが、これは拡張子自体の名前とは異なる場合があります(例えば、拡張子の名前に'_'を追加するリンカもあります)。これが指定されていない場合は、NAME属性から派生します。現在のところ、OS2 と Win32 でのみ使用されています。</target>
        </trans-unit>
        <trans-unit id="d17e4bc352cfe7c72913c884191bd7c2a2036595" translate="yes" xml:space="preserve">
          <source>This key allows for variable weighting of variable collation elements, which are marked with an ASTERISK in the table (NOTE: Many punctuation marks and symbols are variable in</source>
          <target state="translated">このキーを使用すると、テーブル内のアスタリスクでマークされた可変照合要素の重み付けを可変にすることができます(注意:多くの句読点マークや記号は</target>
        </trans-unit>
        <trans-unit id="cb089e180f4d1e1151abdbf8ed66a17ba5f2e56e" translate="yes" xml:space="preserve">
          <source>This key can be used to specify the name of the linker option file (minus the OS-specific extension), if for some reason you do not want to use the default value, which is the last word of the NAME attribute (</source>
          <target state="translated">このキーは、何らかの理由でNAME属性の最後の単語であるデフォルト値を使用したくない場合に、リンカオプションファイルの名前を指定するために使用することができます (OS固有の拡張子を除いたもの)。</target>
        </trans-unit>
        <trans-unit id="6dc6a49c5fb309cc8a7f7ab658d2498baeeb643a" translate="yes" xml:space="preserve">
          <source>This keyword allows one to define an INTERFACE using a different way to extract a function pointer from an XSUB. The text which follows this keyword should give the name of macros which would extract/set a function pointer. The extractor macro is given return type, &lt;code&gt;CV*&lt;/code&gt; , and &lt;code&gt;XSANY.any_dptr&lt;/code&gt; for this &lt;code&gt;CV*&lt;/code&gt; . The setter macro is given cv, and the function pointer.</source>
          <target state="translated">このキーワードにより、XSUBから関数ポインターを抽出する別の方法を使用してINTERFACEを定義できます。このキーワードに続くテキストは、関数ポインタを抽出/設定するマクロの名前を与える必要があります。抽出マクロには、この &lt;code&gt;CV*&lt;/code&gt; 戻り型、 &lt;code&gt;CV*&lt;/code&gt; 、および &lt;code&gt;XSANY.any_dptr&lt;/code&gt; が与えられます。セッターマクロにはcvと関数ポインターが与えられます。</target>
        </trans-unit>
        <trans-unit id="7f48406b453547a477c2699e1f259b5c4ed7e06a" translate="yes" xml:space="preserve">
          <source>This keyword allows one to define an INTERFACE using a different way to extract a function pointer from an XSUB. The text which follows this keyword should give the name of macros which would extract/set a function pointer. The extractor macro is given return type, &lt;code&gt;CV*&lt;/code&gt;, and &lt;code&gt;XSANY.any_dptr&lt;/code&gt; for this &lt;code&gt;CV*&lt;/code&gt;. The setter macro is given cv, and the function pointer.</source>
          <target state="translated">このキーワードを使用すると、XSUBから関数ポインタを抽出する別の方法を使用してインターフェイスを定義できます。このキーワードに続くテキストは、関数ポインタを抽出/設定するマクロの名前を示す必要があります。エクストラクタマクロには、この &lt;code&gt;CV*&lt;/code&gt; 戻り値の型、 &lt;code&gt;CV*&lt;/code&gt; 、および &lt;code&gt;XSANY.any_dptr&lt;/code&gt; が指定されます。セッターマクロにはcvと関数ポインターが与えられます。</target>
        </trans-unit>
        <trans-unit id="2eb4e29be94617115ad887f08c53a3d0726b0bcf" translate="yes" xml:space="preserve">
          <source>This keyword can be used to pull other files into the XS module. The other files may have XS code. INCLUDE: can also be used to run a command to generate the XS code to be pulled into the module.</source>
          <target state="translated">このキーワードは、他のファイルをXSモジュールに引き込むために使用することができます。他のファイルにはXSコードが含まれている可能性があります。INCLUDE:は、モジュールに引き込む XS コードを生成するコマンドを実行するためにも使用できます。</target>
        </trans-unit>
        <trans-unit id="7ed11759f14ddd60bb197c65bf243efdd708cc88" translate="yes" xml:space="preserve">
          <source>This keyword can be used when an XSUB requires special cleanup procedures before it terminates. When the CLEANUP: keyword is used it must follow any CODE:, or OUTPUT: blocks which are present in the XSUB. The code specified for the cleanup block will be added as the last statements in the XSUB.</source>
          <target state="translated">このキーワードは、XSUB が終了する前に特別なクリーンアップ処理を必要とする場合に使用できます。CLEANUP:キーワードを使用する場合は、XSUB内に存在するCODE:や OUTPUT:ブロックの後に続く必要があります。クリーンアップブロックに指定されたコードは、XSUBの最後の文として追加されます。</target>
        </trans-unit>
        <trans-unit id="7ea24ab5d7dbe276068f1e0046e6f8d0e31be74b" translate="yes" xml:space="preserve">
          <source>This keyword can be used when an XSUB requires special procedures executed after the C subroutine call is performed. When the POSTCALL: keyword is used it must precede OUTPUT: and CLEANUP: blocks which are present in the XSUB.</source>
          <target state="translated">このキーワードは、XSUBがCサブルーチン呼び出しの実行後に特別な手続きを必要とする場合に使用できます。POSTCALL:キーワードを使用する場合は、XSUB内に存在する OUTPUT:と CLEANUP:ブロックの前に置かなければなりません。</target>
        </trans-unit>
        <trans-unit id="ae2e5d68051ec8479ea84ba54d17bcf4606d62cb" translate="yes" xml:space="preserve">
          <source>This keyword declares the current XSUB as a keeper of the given calling signature. If some text follows this keyword, it is considered as a list of functions which have this signature, and should be attached to the current XSUB.</source>
          <target state="translated">このキーワードは、現在のXSUBを、与えられた呼び出しシグネチャのキーパーとして宣言します。このキーワードに続くテキストがある場合は、このシグネチャを持つ関数のリストとみなされ、現在のXSUBに添付されるべきです。</target>
        </trans-unit>
        <trans-unit id="58666c3be919a203268b54d032b3c1bf1338cbb5" translate="yes" xml:space="preserve">
          <source>This keyword is available only when the &lt;code&gt;&quot;fc&quot;&lt;/code&gt; feature is enabled, or when prefixed with &lt;code&gt;CORE::&lt;/code&gt; ; See &lt;a href=&quot;../feature&quot;&gt;feature&lt;/a&gt;. Alternately, include a &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; v5.16&lt;/code&gt; or later to the current scope.</source>
          <target state="translated">このキーワードは、 &lt;code&gt;&quot;fc&quot;&lt;/code&gt; 機能が有効な場合、または &lt;code&gt;CORE::&lt;/code&gt; 前に付いている場合にのみ使用できます。&lt;a href=&quot;../feature&quot;&gt;機能を&lt;/a&gt;参照してください。または、現在のスコープに &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; v5.16&lt;/code&gt; 以降を含めます。</target>
        </trans-unit>
        <trans-unit id="42d2aecd2684fd64241ade61155e375dd422775d" translate="yes" xml:space="preserve">
          <source>This keyword is available only when the &lt;code&gt;&quot;fc&quot;&lt;/code&gt; feature is enabled, or when prefixed with &lt;code&gt;CORE::&lt;/code&gt; ; See &lt;a href=&quot;feature&quot;&gt;feature&lt;/a&gt;. Alternately, include a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.16&lt;/code&gt; or later to the current scope.</source>
          <target state="translated">このキーワードは、 &lt;code&gt;&quot;fc&quot;&lt;/code&gt; 機能が有効な場合、または &lt;code&gt;CORE::&lt;/code&gt; 前に付いている場合にのみ使用できます。&lt;a href=&quot;feature&quot;&gt;機能を&lt;/a&gt;参照してください。または、現在のスコープに &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.16&lt;/code&gt; 以降を含めます。</target>
        </trans-unit>
        <trans-unit id="f176175c36b805a68ac4fb3277c81ce3879ff21b" translate="yes" xml:space="preserve">
          <source>This keyword is available only when the &lt;code&gt;&quot;say&quot;&lt;/code&gt; feature is enabled, or when prefixed with &lt;code&gt;CORE::&lt;/code&gt; ; see &lt;a href=&quot;../feature&quot;&gt;feature&lt;/a&gt;. Alternately, include a &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; v5.10&lt;/code&gt; or later to the current scope.</source>
          <target state="translated">このキーワードは、 &lt;code&gt;&quot;say&quot;&lt;/code&gt; 機能が有効になっている場合、または &lt;code&gt;CORE::&lt;/code&gt; 前に付いている場合にのみ使用できます。&lt;a href=&quot;../feature&quot;&gt;機能を&lt;/a&gt;参照してください。または、現在のスコープに &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; v5.10&lt;/code&gt; 以降を含めます。</target>
        </trans-unit>
        <trans-unit id="7248453615df5e8da2ccdbead940326c86edd409" translate="yes" xml:space="preserve">
          <source>This keyword is available only when the &lt;code&gt;&quot;say&quot;&lt;/code&gt; feature is enabled, or when prefixed with &lt;code&gt;CORE::&lt;/code&gt; ; see &lt;a href=&quot;feature&quot;&gt;feature&lt;/a&gt;. Alternately, include a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.10&lt;/code&gt; or later to the current scope.</source>
          <target state="translated">このキーワードは、 &lt;code&gt;&quot;say&quot;&lt;/code&gt; 機能が有効になっている場合、または &lt;code&gt;CORE::&lt;/code&gt; 前に付いている場合にのみ使用できます。&lt;a href=&quot;feature&quot;&gt;機能を&lt;/a&gt;参照してください。または、現在のスコープに &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.10&lt;/code&gt; 以降を含めます。</target>
        </trans-unit>
        <trans-unit id="4ef9d8d4891aa770100745063fafba75dd87bbdc" translate="yes" xml:space="preserve">
          <source>This keyword is documented in &lt;a href=&quot;../perlsub#Autoloading&quot;&gt;Autoloading in perlsub&lt;/a&gt;.</source>
          <target state="translated">このキーワードについては&lt;a href=&quot;../perlsub#Autoloading&quot;&gt;、perlsubの自動読み込みに&lt;/a&gt;記載されています。</target>
        </trans-unit>
        <trans-unit id="229a0bb1d79c36394d404c5fc720a5812d12707b" translate="yes" xml:space="preserve">
          <source>This keyword is documented in &lt;a href=&quot;perlsub#Autoloading&quot;&gt;&quot;Autoloading&quot; in perlsub&lt;/a&gt;.</source>
          <target state="translated">このキーワードは&lt;a href=&quot;perlsub#Autoloading&quot;&gt;、perlsubの「Autoloading」に記載されてい&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="017edb25f20d66cd7958f76d9e8eba1497b2b334" translate="yes" xml:space="preserve">
          <source>This keyword is documented in &lt;a href=&quot;perlsub#Autoloading&quot;&gt;Autoloading in perlsub&lt;/a&gt;.</source>
          <target state="translated">このキーワードについては&lt;a href=&quot;perlsub#Autoloading&quot;&gt;、perlsubの自動読み込みに&lt;/a&gt;記載されています。</target>
        </trans-unit>
        <trans-unit id="f7b17b66d48631c7667c9941d17b69ddf9ef0b49" translate="yes" xml:space="preserve">
          <source>This keyword is enabled by the &lt;code&gt;&quot;switch&quot;&lt;/code&gt; feature; see &lt;a href=&quot;../feature&quot;&gt;feature&lt;/a&gt; for more information on &lt;code&gt;&quot;switch&quot;&lt;/code&gt; . You can also access it by prefixing it with &lt;code&gt;CORE::&lt;/code&gt; . Alternatively, include a &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; v5.10&lt;/code&gt; or later to the current scope.</source>
          <target state="translated">このキーワードは &lt;code&gt;&quot;switch&quot;&lt;/code&gt; 機能によって有効になります。 &lt;code&gt;&quot;switch&quot;&lt;/code&gt; 詳細については、&lt;a href=&quot;../feature&quot;&gt;機能&lt;/a&gt;を参照してください。また、 &lt;code&gt;CORE::&lt;/code&gt; プレフィックスとして使用してアクセスすることもできます。または、現在のスコープに &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; v5.10&lt;/code&gt; v5.10以降を含めます。</target>
        </trans-unit>
        <trans-unit id="bcf1ac4839e0d0322a8d99444375f29015dd872d" translate="yes" xml:space="preserve">
          <source>This keyword is enabled by the &lt;code&gt;&quot;switch&quot;&lt;/code&gt; feature; see &lt;a href=&quot;feature&quot;&gt;feature&lt;/a&gt; for more information on &lt;code&gt;&quot;switch&quot;&lt;/code&gt; . You can also access it by prefixing it with &lt;code&gt;CORE::&lt;/code&gt; . Alternatively, include a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.10&lt;/code&gt; or later to the current scope.</source>
          <target state="translated">このキーワードは &lt;code&gt;&quot;switch&quot;&lt;/code&gt; 機能によって有効になります。 &lt;code&gt;&quot;switch&quot;&lt;/code&gt; 詳細については、&lt;a href=&quot;feature&quot;&gt;機能&lt;/a&gt;を参照してください。また、 &lt;code&gt;CORE::&lt;/code&gt; プレフィックスとして使用してアクセスすることもできます。または、現在のスコープに &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.10&lt;/code&gt; v5.10以降を含めます。</target>
        </trans-unit>
        <trans-unit id="fd72e5a6d62fb1267e4d76dc2f0ed5b89e4e353f" translate="yes" xml:space="preserve">
          <source>This keyword is similar to the PROTOTYPES: keyword above but can be used to force &lt;b&gt;xsubpp&lt;/b&gt; to use a specific prototype for the XSUB. This keyword overrides all other prototype options and keywords but affects only the current XSUB. Consult &lt;a href=&quot;perlsub#Prototypes&quot;&gt;&quot;Prototypes&quot; in perlsub&lt;/a&gt; for information about Perl prototypes.</source>
          <target state="translated">このキーワードは上記のPROTOTYPES：キーワードに似ていますが、&lt;b&gt;xsubpp&lt;/b&gt;にXSUBの特定のプロトタイプを使用させるために使用できます。このキーワードは、他のすべてのプロトタイプオプションとキーワードを上書きしますが、現在のXSUBにのみ影響します。ご相談&lt;a href=&quot;perlsub#Prototypes&quot;&gt;はperlsubに「プロトタイプ」を&lt;/a&gt;Perlのプロトタイプに関する情報を参照してください。</target>
        </trans-unit>
        <trans-unit id="29762772c48cba2696e2ebbb42e9c2d4888e7318" translate="yes" xml:space="preserve">
          <source>This keyword is similar to the PROTOTYPES: keyword above but can be used to force &lt;b&gt;xsubpp&lt;/b&gt; to use a specific prototype for the XSUB. This keyword overrides all other prototype options and keywords but affects only the current XSUB. Consult &lt;a href=&quot;perlsub#Prototypes&quot;&gt;Prototypes in perlsub&lt;/a&gt; for information about Perl prototypes.</source>
          <target state="translated">このキーワードは上記のPROTOTYPES：キーワードに似ていますが、&lt;b&gt;xsubpp&lt;/b&gt;がXSUBの特定のプロトタイプを使用するように強制するために使用できます。このキーワードは、他のすべてのプロトタイプオプションおよびキーワードを上書きしますが、現在のXSUBにのみ影響します。ご相談&lt;a href=&quot;perlsub#Prototypes&quot;&gt;はperlsubでプロトタイプを&lt;/a&gt; Perlのプロトタイプの詳細については。</target>
        </trans-unit>
        <trans-unit id="85b8915eb7407eed5e4863e8fa3af3a2f3aafc0d" translate="yes" xml:space="preserve">
          <source>This keyword is used in more complicated XSUBs which require special handling for the C function. The RETVAL variable is still declared, but it will not be returned unless it is specified in the OUTPUT: section.</source>
          <target state="translated">このキーワードは、C関数のために特別な処理を必要とする、より複雑なXSUBで使用されます。RETVAL変数は宣言されていますが、OUTPUT:セクションで指定されていない限り返されません。</target>
        </trans-unit>
        <trans-unit id="aa7963343b84df8b23c604395808970c0e2420a5" translate="yes" xml:space="preserve">
          <source>This keyword makes sense only if &lt;code&gt;RETVAL&lt;/code&gt; is going to be accessed by the user-supplied code. It is especially useful to make a function interface more Perl-like, especially when the C return value is just an error condition indicator. For example,</source>
          <target state="translated">このキーワードは、ユーザー指定のコードによって &lt;code&gt;RETVAL&lt;/code&gt; にアクセスする場合にのみ意味があります。特にCの戻り値が単なるエラー状態のインジケータである場合は、関数インターフェイスをPerlのようにすることが特に便利です。例えば、</target>
        </trans-unit>
        <trans-unit id="b1b52e23340e03d5e2d9ec935c2b222b8a59f7e3" translate="yes" xml:space="preserve">
          <source>This keyword may be used any time after the first MODULE keyword and should appear on a line by itself. The first blank line after the keyword will terminate the code block.</source>
          <target state="translated">このキーワードは、最初の MODULE キーワードの後であればいつでも使用できます。このキーワードの後の最初の空白行がコードブロックを終了させます。</target>
        </trans-unit>
        <trans-unit id="8c3c885b0fa12332744123cf10bb6f10b80fe29e" translate="yes" xml:space="preserve">
          <source>This keyword should follow the PACKAGE keyword when used. If PACKAGE is not used then PREFIX should follow the MODULE keyword.</source>
          <target state="translated">このキーワードが使用されている場合は、PACKAGE キーワードの後に続きます。PACKAGE を使用しない場合は、PREFIX は MODULE キーワードの後に続くべきです。</target>
        </trans-unit>
        <trans-unit id="febcd526951ded918c85fd19d9088e687e73cc02" translate="yes" xml:space="preserve">
          <source>This keyword will normally be used to complement the CODE: keyword. The RETVAL variable is not recognized as an output variable when the CODE: keyword is present. The OUTPUT: keyword is used in this situation to tell the compiler that RETVAL really is an output variable.</source>
          <target state="translated">このキーワードは通常、CODE:キーワードを補完するために使用されます。CODE:キーワードが存在する場合、RETVAL 変数は出力変数として認識されません。OUTPUT:キーワードは、RETVAL が本当に出力変数であることをコンパイラに伝えるためにこの状況で使用されます。</target>
        </trans-unit>
        <trans-unit id="cb6c35b047be04a4c7f82192e6412bfe49f97ba3" translate="yes" xml:space="preserve">
          <source>This last example is purely for purposes of completeness. You should not be trying to mess with the attributes of something in a package that's not your own.</source>
          <target state="translated">この最後の例は、純粋に完全性を保つためのものです。自分のものではないパッケージの中の何かの属性をいじろうとするべきではありません。</target>
        </trans-unit>
        <trans-unit id="912ca0c2e267a94ac06e924425736641ec8ba084" translate="yes" xml:space="preserve">
          <source>This last example shows the use of this construct to specify an ordinary bracketed character class without additional set operations. Note the white space within it. This is allowed because &lt;code&gt;/xx&lt;/code&gt; is automatically turned on within this construct.</source>
          <target state="translated">この最後の例は、この構成を使用して、追加のセット操作なしで通常の括弧で囲まれた文字クラスを指定する方法を示しています。その中の空白に注意してください。この構成内で &lt;code&gt;/xx&lt;/code&gt; が自動的にオンになるため、これが許可されます。</target>
        </trans-unit>
        <trans-unit id="862d993f36bd27f44699b4c5102357c5ca816339" translate="yes" xml:space="preserve">
          <source>This last example shows the use of this construct to specify an ordinary bracketed character class without additional set operations. Note the white space within it; &lt;code&gt;/x&lt;/code&gt; is turned on even within bracketed character classes, except you can't have comments inside them. Hence,</source>
          <target state="translated">この最後の例は、この構成を使用して、追加のセット操作を行わずに通常の角かっこ文字クラスを指定する方法を示しています。その中の空白に注意してください。 &lt;code&gt;/x&lt;/code&gt; は、括弧で囲まれた文字クラス内でもオンになります。ただし、コメントを含めることはできません。したがって、</target>
        </trans-unit>
        <trans-unit id="9220dfc1805deb030c183292c9d16a65be2d81b4" translate="yes" xml:space="preserve">
          <source>This last example splits &lt;code&gt;$foo&lt;/code&gt; into the first two words and the remainder of the line, and assigns those three fields to &lt;code&gt;$F1&lt;/code&gt; , &lt;code&gt;$F2&lt;/code&gt; , and &lt;code&gt;$Etc&lt;/code&gt; . The conditional is true if any variables were assigned; that is, if the pattern matched.</source>
          <target state="translated">この最後の例では、 &lt;code&gt;$foo&lt;/code&gt; を最初の2つの単語と行の残りの部分に分割し、これら3つのフィールドを &lt;code&gt;$F1&lt;/code&gt; 、 &lt;code&gt;$F2&lt;/code&gt; 、および &lt;code&gt;$Etc&lt;/code&gt; 割り当てます。変数が割り当てられている場合、条件は真です。つまり、パターンが一致した場合です。</target>
        </trans-unit>
        <trans-unit id="28beb0fd6f81e4104dcda83e789966269c55d353" translate="yes" xml:space="preserve">
          <source>This last example splits &lt;code&gt;$foo&lt;/code&gt; into the first two words and the remainder of the line, and assigns those three fields to &lt;code&gt;$F1&lt;/code&gt;, &lt;code&gt;$F2&lt;/code&gt;, and &lt;code&gt;$Etc&lt;/code&gt;. The conditional is true if any variables were assigned; that is, if the pattern matched.</source>
          <target state="translated">この最後の例では、 &lt;code&gt;$foo&lt;/code&gt; を最初の2つの単語と行の残りの部分に分割し、これら3つのフィールドを &lt;code&gt;$F1&lt;/code&gt; 、 &lt;code&gt;$F2&lt;/code&gt; 、および &lt;code&gt;$Etc&lt;/code&gt; 割り当てます。変数が割り当てられている場合、条件は真です。つまり、パターンが一致した場合です。</target>
        </trans-unit>
        <trans-unit id="b0e7606501a4d8dcdc827582f8772dc7d2f7c727" translate="yes" xml:space="preserve">
          <source>This last one is present only in perl 5.22.0 and higher.</source>
          <target state="translated">この最後のものは perl 5.22.0 以降にのみ存在します。</target>
        </trans-unit>
        <trans-unit id="71d99570ae143a5a3edf0f9d507ad7328c03cf89" translate="yes" xml:space="preserve">
          <source>This latter is improper because when the &quot;=end outer&quot; command is seen, the currently open region has the formatname &quot;inner&quot;, not &quot;outer&quot;. (It just happens that &quot;outer&quot; is the format name of a higher-up region.) This is an error. Processors must by default report this as an error, and may halt processing the document containing that error. A corollary of this is that regions cannot &quot;overlap&quot;. That is, the latter block above does not represent a region called &quot;outer&quot; which contains X and Y, overlapping a region called &quot;inner&quot; which contains Y and Z. But because it is invalid (as all apparently overlapping regions would be), it doesn't represent that, or anything at all.</source>
          <target state="translated">後者は、&quot;=end outer&quot; コマンドを見たときに、現在開いている領域のフォーマット名が &quot;inner&quot; であって、&quot;outer&quot; ではないからです。(たまたま &quot;outer&quot; が上位の領域のフォーマット名だっただけです。)これはエラーです。プロセッサはデフォルトでこれをエラーとして報告しなければならず、そのエラーを含む文書の処理を停止することができます。これに関連して、領域は「重なり合う」ことができないということがあります。つまり、上の後者のブロックは、XとYを含む &quot;外側 &quot;と呼ばれる領域が、YとZを含む &quot;内側 &quot;と呼ばれる領域と重なっていることを表していません。</target>
        </trans-unit>
        <trans-unit id="329baa8ca56fa0cbccaada8dac24e7d11eab4ae6" translate="yes" xml:space="preserve">
          <source>This layer (which actually sets a flag on the preceding layer, and is implicitly set by any &lt;code&gt;:encoding&lt;/code&gt; layer) does not translate or validate byte sequences. It instead indicates that the byte stream will have been arranged by other layers to be provided in Perl's internal upgraded encoding, which Perl code (and correctly written XS code) will interpret as decoded Unicode characters.</source>
          <target state="translated">このレイヤー（実際には前のレイヤーにフラグを設定し、 &lt;code&gt;:encoding&lt;/code&gt; レイヤーによって暗黙的に設定されます）は、バイトシーケンスを変換または検証しません。代わりに、バイトストリームが他のレイヤーによって配置され、Perlの内部アップグレードされたエンコーディングで提供されることを示します。Perlコード（および正しく記述されたXSコード）は、デコードされたUnicode文字として解釈されます。</target>
        </trans-unit>
        <trans-unit id="07d7417365f82f63b9e8e59a7e5f2cdf78946771" translate="yes" xml:space="preserve">
          <source>This layer does &lt;code&gt;read&lt;/code&gt; and &lt;code&gt;write&lt;/code&gt; operations by mmap()ing the file if possible, but falls back to the default behavior if not.</source>
          <target state="translated">このレイヤーは、可能であればファイルをmmap（）することで &lt;code&gt;read&lt;/code&gt; および &lt;code&gt;write&lt;/code&gt; 操作を行いますが、そうでない場合はデフォルトの動作にフォールバックします。</target>
        </trans-unit>
        <trans-unit id="7a8db66183eb60025ea9a2964bbf14f04f11348c" translate="yes" xml:space="preserve">
          <source>This layer provides a PerlIO interface by wrapping system's ANSI C &quot;stdio&quot; library calls. The layer provides both buffering and IO. Note that the &lt;code&gt;:stdio&lt;/code&gt; layer does</source>
          <target state="translated">この層は、システムのANSI C &quot;stdio&quot;ライブラリ呼び出しをラップすることにより、PerlIOインターフェイスを提供します。この層は、バッファリングとIOの両方を提供します。ことに注意してください &lt;code&gt;:stdio&lt;/code&gt; 層はありません</target>
        </trans-unit>
        <trans-unit id="b630c4528c6aff17852e4e3ca55c2d5a2c70831c" translate="yes" xml:space="preserve">
          <source>This leads to the other two differences. Since a single code point is returned, the function can't handle named character sequences, as these are composed of multiple characters (it returns &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; for these. And, the code point can be that of any character, even ones that aren't legal under the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; bytes&lt;/code&gt; pragma,</source>
          <target state="translated">これにより、他の2つの違いが生じます。単一のコードポイントが返されるため、関数は名前付き文字シーケンスを処理できません。これらは複数の文字で構成されています（これらの文字に対して &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; を返します。そして、コードポイントは任意の文字のコードでもかまいません） &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; bytes&lt;/code&gt; プラグマの下では合法です。</target>
        </trans-unit>
        <trans-unit id="4878f92b6bf138d4cb047d57550f50b02dd06d3b" translate="yes" xml:space="preserve">
          <source>This leads to the other two differences. Since a single code point is returned, the function can't handle named character sequences, as these are composed of multiple characters (it returns &lt;code&gt;undef&lt;/code&gt; for these. And, the code point can be that of any character, even ones that aren't legal under the &lt;code&gt;use bytes&lt;/code&gt; pragma,</source>
          <target state="translated">これは他の2つの違いにつながります。単一のコードポイントが返されるため、これらは複数の文字で構成されているため、関数は名前付き文字シーケンスを処理できません（これらに対して &lt;code&gt;undef&lt;/code&gt; を返します。また、コードポイントは、そうでない文字であっても、任意の文字のコードポイントにすることができます。 &lt;code&gt;use bytes&lt;/code&gt; プラグマの下で合法、</target>
        </trans-unit>
        <trans-unit id="d5aa1dc9dac018985cded1aa3e48ced88d449905" translate="yes" xml:space="preserve">
          <source>This lets you build and send a V2 event directly from facets. The event is returned after it is sent.</source>
          <target state="translated">これにより、ファセットから直接V2イベントをビルドして送信することができます。イベントは送信後に返されます。</target>
        </trans-unit>
        <trans-unit id="d2bfaca7128553729771ae3288647f98ec9ca08e" translate="yes" xml:space="preserve">
          <source>This lets you build and send an event of any type. The &lt;code&gt;$Type&lt;/code&gt; argument should be the event package name with &lt;code&gt;Test2::Event::&lt;/code&gt; left off, or a fully qualified package name prefixed with a '+'. The event is returned after it is sent.</source>
          <target state="translated">これにより、あらゆるタイプのイベントを作成して送信できます。 &lt;code&gt;$Type&lt;/code&gt; 引数が持つイベントパッケージ名でなければなりません &lt;code&gt;Test2::Event::&lt;/code&gt; オフに左、または「+」で始まる完全修飾パッケージ名。イベントは送信後に返されます。</target>
        </trans-unit>
        <trans-unit id="d60f65e26f1f4e74963a10d1932144990bf5f1a5" translate="yes" xml:space="preserve">
          <source>This lets you override an existing type with your own custom type, or register a completely new type, eg:</source>
          <target state="translated">これにより、既存の型を独自のカスタム型で上書きしたり、全く新しい型を登録したりすることができます。</target>
        </trans-unit>
        <trans-unit id="79e5d41dc2a646a1022f4533cf9e2ddc99e2b27f" translate="yes" xml:space="preserve">
          <source>This lets you provide a callback sub that will be called &lt;b&gt;ONLY&lt;/b&gt; if your call to &lt;code&gt;context()&lt;/code&gt; generated a new context. The callback &lt;b&gt;WILL NOT&lt;/b&gt; be called if &lt;code&gt;context()&lt;/code&gt; is returning an existing context. The only argument passed into the callback will be the context object itself.</source>
          <target state="translated">これにより、 &lt;code&gt;context()&lt;/code&gt; の呼び出しで新しいコンテキストが生成された場合に&lt;b&gt;のみ&lt;/b&gt;呼び出されるコールバックサブを提供できます。 &lt;code&gt;context()&lt;/code&gt; が既存のコンテキストを返している場合、コールバックは呼び出され&lt;b&gt;ません&lt;/b&gt;。コールバックに渡される唯一の引数は、コンテキストオブジェクト自体です。&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="16fc392b63db228eb7f664add00b8a9c2d85ff42" translate="yes" xml:space="preserve">
          <source>This lets you provide a callback sub that will be called when the context instance is released. This callback will be added to the returned context even if an existing context is returned. If multiple calls to context add callbacks, then all will be called in reverse order when the context is finally released.</source>
          <target state="translated">これにより、コンテキストのインスタンスが解放されたときにコールされるコールバックサブを指定することができます。このコールバックは、既存のコンテキストが返された場合でも、返されたコンテキストに追加されます。コンテキストへの複数のコールがコールバックを追加した場合は、 コンテキストが最終的に解放されたときにすべて逆順にコールされます。</target>
        </trans-unit>
        <trans-unit id="4cbcd61ebbafca13e92af49c5fcc25ec65159f85" translate="yes" xml:space="preserve">
          <source>This lets you see the order in which the events were sent, unlike &lt;code&gt;intercept { ... }&lt;/code&gt; which only lets you see events as the main hub sees them.</source>
          <target state="translated">これにより、メインハブがイベントを確認するときにのみイベントを確認できる &lt;code&gt;intercept { ... }&lt;/code&gt; とは異なり、イベントが送信された順序を確認できます。</target>
        </trans-unit>
        <trans-unit id="563b80ae5c4cc2c80ac1a748d6ab409b86b5a4b5" translate="yes" xml:space="preserve">
          <source>This lets you send an &lt;a href=&quot;Test2::Event::Fail&quot;&gt;Test2::Event::Fail&lt;/a&gt; event. You may optionally provide a &lt;code&gt;$name&lt;/code&gt; and &lt;code&gt;@diagnostics&lt;/code&gt; messages.</source>
          <target state="translated">これにより、&lt;a href=&quot;Test2::Event::Fail&quot;&gt;Test2 :: Event :: Fail&lt;/a&gt;イベントを送信できます。オプションで、 &lt;code&gt;$name&lt;/code&gt; メッセージと &lt;code&gt;@diagnostics&lt;/code&gt; メッセージを指定できます。</target>
        </trans-unit>
        <trans-unit id="3afaf78f703df78ea1b2a3a94074c1f6af7d070b" translate="yes" xml:space="preserve">
          <source>This level of sophistication puts filtering out of the reach of many programmers.</source>
          <target state="translated">このレベルの洗練されたフィルタリングは、多くのプログラマの手の届かないところに置かれています。</target>
        </trans-unit>
        <trans-unit id="96b38d379d8ea7799ed19600bd96b2cf3c932e45" translate="yes" xml:space="preserve">
          <source>This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.</source>
          <target state="translated">このライブラリは有用であることを期待して配布されていますが、商品性や特定の目的への適合性についての暗黙の保証すらありません。詳細はGNU一般公衆利用許諾書を参照してください。</target>
        </trans-unit>
        <trans-unit id="5235941a62b852074a7c3e9fc51537a52e5be7a3" translate="yes" xml:space="preserve">
          <source>This library is free software. You can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">このライブラリはフリーソフトウェアです。Perlと同じ条件で再配布や改変が可能です。</target>
        </trans-unit>
        <trans-unit id="e845c8ea27e93059361918a289ad292cdfcb8508" translate="yes" xml:space="preserve">
          <source>This library is free software; you can redistribute it and/or modify it under the same terms as Perl itself, either Perl version 5.10.0 or, at your option, any later version of Perl 5 you may have available.</source>
          <target state="translated">このライブラリはフリーソフトウェアです。Perl 5.10.0またはそれ以降のバージョンのPerl 5と同じ条件で、再配布や変更が可能です。</target>
        </trans-unit>
        <trans-unit id="f877037944f8c1888cbf64249275515c89dec317" translate="yes" xml:space="preserve">
          <source>This library is free software; you can redistribute it and/or modify it under the same terms as Perl itself, either Perl version 5.8.7 or, at your option, any later version of Perl 5 you may have available.</source>
          <target state="translated">このライブラリはフリーソフトウェアです。Perl 5.8.7、またはそれ以降のバージョンのPerl 5と同じ条件で、再配布や変更が可能です。</target>
        </trans-unit>
        <trans-unit id="59869bc853c079c70b9f3b6879026f6cde3bb8df" translate="yes" xml:space="preserve">
          <source>This library is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">このライブラリはフリーソフトウェアです。</target>
        </trans-unit>
        <trans-unit id="95bf2cec5fb49eb84ad57753eb4accbc37f2ba0f" translate="yes" xml:space="preserve">
          <source>This library is free software; you may redistribute and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">このライブラリはフリーソフトウェアです。Perlと同じ条件で再配布や変更が可能です。</target>
        </trans-unit>
        <trans-unit id="5912c0244d5e6338722acbdad50efbccb8883b11" translate="yes" xml:space="preserve">
          <source>This library is free software; you may redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">このライブラリはフリーソフトウェアです。</target>
        </trans-unit>
        <trans-unit id="40333c6cc505a0d3e27434bb83dfca9627c9c8f9" translate="yes" xml:space="preserve">
          <source>This library is useful for the &lt;code&gt;find2perl&lt;/code&gt; tool (distributed as part of the App-find2perl CPAN distribution), which when fed,</source>
          <target state="translated">このライブラリは、 &lt;code&gt;find2perl&lt;/code&gt; ツール（App-find2perl CPANディストリビューションの一部として配布されている）に役立ちます。</target>
        </trans-unit>
        <trans-unit id="4f410cd597bbeaeb5f199c6d8d09628b5554744f" translate="yes" xml:space="preserve">
          <source>This library is useful for the &lt;code&gt;find2perl&lt;/code&gt; tool, which when fed,</source>
          <target state="translated">このライブラリは、 &lt;code&gt;find2perl&lt;/code&gt; ツールに役立ちます。</target>
        </trans-unit>
        <trans-unit id="c0bf3b785ab345744e2dfb1b0071fc64c2b599fe" translate="yes" xml:space="preserve">
          <source>This library provides functions for common tasks involving language tags as they are needed in a variety of protocols and applications.</source>
          <target state="translated">このライブラリは、様々なプロトコルやアプリケーションで必要とされる言語タグに関わる一般的なタスクのための関数を提供します。</target>
        </trans-unit>
        <trans-unit id="f1885a10472534bbc801de451233880b8db2b1d7" translate="yes" xml:space="preserve">
          <source>This library provides stubs for the functions marked as [CORE] in &lt;a href=&quot;win32&quot;&gt;Win32&lt;/a&gt;. See that document for usage information. When any of these functions are called, the full Win32 module is loaded automatically. It is preferred that callers of these functions explicitly &lt;code&gt;use Win32;&lt;/code&gt;.</source>
          <target state="translated">このライブラリは、&lt;a href=&quot;win32&quot;&gt;Win32で&lt;/a&gt;[CORE]とマークされた関数のスタブを提供します。使用法については、そのドキュメントを参照してください。これらの関数のいずれかが呼び出されると、完全なWin32モジュールが自動的にロードされます。これらの関数の呼び出し元は明示的に &lt;code&gt;use Win32;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0c8a7928010093d74c8591010b017561f0beda8e" translate="yes" xml:space="preserve">
          <source>This library provides support for big integer calculations. It is not intended to be used by other modules. Other modules which support the same API (see below) can also be used to support Math::BigInt, like Math::BigInt::GMP and Math::BigInt::Pari.</source>
          <target state="translated">このライブラリは、大きな整数の計算をサポートしています。他のモジュールでの使用を意図したものではありません。Math::BigInt::GMP や Math::BigInt::Pari のように、同じ API をサポートする他のモジュール (下記参照)も Math::BigInt をサポートするために使用することができます。</target>
        </trans-unit>
        <trans-unit id="a3eb497d536b5c644bfd0b5d3e8c9055b4a9a57d" translate="yes" xml:space="preserve">
          <source>This limitation arises from fundamental technical difficulties in cloning and restarting the stacks used by the Perl parser in the middle of a parse.</source>
          <target state="translated">この制限は、Perl パーサーがパースの途中でスタックを複製して再起動することの技術的な難しさに起因しています。</target>
        </trans-unit>
        <trans-unit id="5fe79b21d14490122d11b41cbba492989dbd2358" translate="yes" xml:space="preserve">
          <source>This limitation might be removed in a future version of perl.</source>
          <target state="translated">この制限はPerlの将来のバージョンでは取り除かれるかもしれません。</target>
        </trans-unit>
        <trans-unit id="68a6939633ab7f637a699e2abcb07f19152f1003" translate="yes" xml:space="preserve">
          <source>This line is taken from &lt;a href=&quot;http://search.cpan.org/perldoc/Text::Soundex&quot;&gt;Text::Soundex&lt;/a&gt; 3.04, and marks it as deprecated beyond Perl 5.16. If you &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; Text::Soundex&lt;/code&gt; in Perl 5.18, for example, and you have used &lt;a href=&quot;warnings&quot;&gt;warnings&lt;/a&gt;, then you'll get a warning message (the deprecate module looks to see whether the calling module was &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt;'d from a core library directory, and if so, generates a warning), unless you've installed a more recent version of &lt;a href=&quot;http://search.cpan.org/perldoc/Text::Soundex&quot;&gt;Text::Soundex&lt;/a&gt; from CPAN.</source>
          <target state="translated">この行は&lt;a href=&quot;http://search.cpan.org/perldoc/Text::Soundex&quot;&gt;Text :: Soundex&lt;/a&gt; 3.04 から取得され、Perl 5.16以降では非推奨としてマークされています。たとえば、Perl 5.18で &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; Text::Soundex&lt;/code&gt; を&lt;a href=&quot;functions/use&quot;&gt;使用し&lt;/a&gt;ていて、&lt;a href=&quot;warnings&quot;&gt;警告&lt;/a&gt;を使用している場合は、警告メッセージが表示されます（非推奨モジュールは、呼び出しモジュールがコアライブラリディレクトリから &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; かどうかを確認します。もしそうなら、警告を生成します）、CPANからより新しいバージョンの&lt;a href=&quot;http://search.cpan.org/perldoc/Text::Soundex&quot;&gt;Text :: Soundex&lt;/a&gt;をインストールしていない限り。</target>
        </trans-unit>
        <trans-unit id="8aa26d9d42b4368a2ea1e0d808d08013501b95e4" translate="yes" xml:space="preserve">
          <source>This list can be extended by either blacklisting additional &quot;known bad&quot; methods, or whitelisting only &quot;known good&quot; methods.</source>
          <target state="translated">このリストは、追加の「既知の悪い」メソッドをブラックリスト化したり、「既知の良い」メソッドのみをホワイトリスト化したりして拡張することができます。</target>
        </trans-unit>
        <trans-unit id="9d4d9656ee66f6221eea8c2856144cdf8d5022fd" translate="yes" xml:space="preserve">
          <source>This list includes architecture-dependent directories back to version $api_versionstring (e.g. 5.5.640) and architecture-independent directories all the way back to 5.005.</source>
          <target state="translated">このリストには、バージョン $api_versionstring (例:5.5.640)までのアーキテクチャに依存しないディレクトリと、5.005 までのアーキテクチャに依存しないディレクトリが含まれています。</target>
        </trans-unit>
        <trans-unit id="2a2fc6936d401079e1014279fe24282359b2ced4" translate="yes" xml:space="preserve">
          <source>This list is in alphabetical order by English name of the language.</source>
          <target state="translated">このリストは、英語の言語名のアルファベット順になっています。</target>
        </trans-unit>
        <trans-unit id="0eb2c698e22fab613c0295cd186a49d231f78c73" translate="yes" xml:space="preserve">
          <source>This list is not as definitive as it may appear (or be claimed to be in other documentation). For example, &lt;code&gt;&quot;#&quot;&lt;/code&gt; is a metacharacter only when the &lt;code&gt;/x&lt;/code&gt; pattern modifier (described below) is used, and both &lt;code&gt;&quot;}&quot;&lt;/code&gt; and &lt;code&gt;&quot;]&quot;&lt;/code&gt; are metacharacters only when paired with opening &lt;code&gt;&quot;{&quot;&lt;/code&gt; or &lt;code&gt;&quot;[&quot;&lt;/code&gt; respectively; other gotchas apply.</source>
          <target state="translated">このリストは、表示されるほど明確ではありません（または他のドキュメントに記載されていると主張されています）。たとえば、 &lt;code&gt;&quot;#&quot;&lt;/code&gt; は &lt;code&gt;/x&lt;/code&gt; パターン修飾子（以下で説明）が使用されている場合にのみメタ文字であり、 &lt;code&gt;&quot;}&quot;&lt;/code&gt; と &lt;code&gt;&quot;]&quot;&lt;/code&gt; はそれぞれ、開始 &lt;code&gt;&quot;{&quot;&lt;/code&gt; または &lt;code&gt;&quot;[&quot;&lt;/code&gt; とペアになっている場合にのみメタ文字です。他の落とし穴が適用されます。</target>
        </trans-unit>
        <trans-unit id="9439512245a21874bebe9bdb6ca9f21d2c823dcb" translate="yes" xml:space="preserve">
          <source>This list is subject to change, but is quite unlikely to. Each ASCII sequence can be any combination of upper- and lowercase.</source>
          <target state="translated">このリストは変更される可能性がありますが、変更される可能性はほとんどありません。各ASCIIシーケンスは、大文字と小文字の任意の組み合わせにすることができます。</target>
        </trans-unit>
        <trans-unit id="fbc78c3347e34ef8b4193dfb718a45521c4ab8d4" translate="yes" xml:space="preserve">
          <source>This list of categories is used to produce the same order as the &lt;a href=&quot;../perlfunc#Perl-Functions-by-Category&quot;&gt;Perl Functions by Category in perlfunc&lt;/a&gt; section.</source>
          <target state="translated">このカテゴリーのリストは&lt;a href=&quot;../perlfunc#Perl-Functions-by-Category&quot;&gt;、perlfunc&lt;/a&gt;セクションのカテゴリー別のPerl関数と同じ順序を生成するために使用されます。</target>
        </trans-unit>
        <trans-unit id="08880758fdfe951040b4a3fc486563eceb7ef61e" translate="yes" xml:space="preserve">
          <source>This list of categories is used to produce the same order as the &lt;a href=&quot;perlfunc#Perl-Functions-by-Category&quot;&gt;&quot;Perl Functions by Category&quot; in perlfunc&lt;/a&gt; section.</source>
          <target state="translated">このカテゴリのリストは&lt;a href=&quot;perlfunc#Perl-Functions-by-Category&quot;&gt;、perlfunc&lt;/a&gt;セクションの「カテゴリ別のPerl関数」と同じ順序を生成するために使用されます。</target>
        </trans-unit>
        <trans-unit id="b0d8392d22aa3f9f1cc5418d2f71d3d9b55240c2" translate="yes" xml:space="preserve">
          <source>This list used to contain :base_io prior to Opcode 1.07.</source>
          <target state="translated">このリストは、Opcode 1.07以前は :base_io を含んでいました。</target>
        </trans-unit>
        <trans-unit id="f6d74c66919ae745b2d3650dc11a98193dcd5f79" translate="yes" xml:space="preserve">
          <source>This load time hit can be a problem when startup speed is important, such as with a command-line script or a &quot;plain vanilla&quot; CGI script that must be loaded each time it is executed.</source>
          <target state="translated">このロード時間のヒットは、コマンドラインスクリプトや、実行するたびにロードしなければならない「プレーンバニラ」CGIスクリプトなど、起動速度が重要な場合に問題になることがあります。</target>
        </trans-unit>
        <trans-unit id="f016e1379d18764668778064a6a84ece9741d1da" translate="yes" xml:space="preserve">
          <source>This logical name must be defined before Perl is started.</source>
          <target state="translated">この論理名はPerlを起動する前に定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="2da9ead2fb770925df3e972a0efa2a82cbbd6ec6" translate="yes" xml:space="preserve">
          <source>This looks in the %Lexicon of the language handle $lh and all its superclasses, looking for an entry whose key is the string</source>
          <target state="translated">これは、言語ハンドル $lhh とそのすべてのスーパークラスの %Lexicon を検索し、キーが文字列</target>
        </trans-unit>
        <trans-unit id="6b4001bd2a1ae040dc8e95119817ede264954c05" translate="yes" xml:space="preserve">
          <source>This loses precision, to avoid this use &lt;a href=&quot;#as_int()%2fas_number()&quot;&gt;as_int()&lt;/a&gt; instead.</source>
          <target state="translated">これは精度を失うため、代わりに&lt;a href=&quot;#as_int()%2fas_number()&quot;&gt;as_int（）を&lt;/a&gt;使用しないでください。</target>
        </trans-unit>
        <trans-unit id="2cb2a7c80cbcd1bcc850e8fe88a609a4116cf1c4" translate="yes" xml:space="preserve">
          <source>This machine-native collation (which is what you get unless &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;
locale&lt;/code&gt; has appeared earlier in the same block) must be used for sorting raw binary data, whereas the locale-dependent collation of the first example is useful for natural text.</source>
          <target state="translated">最初の例のロケール依存の照合は自然なテキストに役立ちますが、このマシンネイティブの照合（ &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; が同じブロックの前に現れない限り取得されるもの）を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="ed86d270c34efc62d89708174f71255637599c7d" translate="yes" xml:space="preserve">
          <source>This machine-native collation (which is what you get unless &lt;code&gt;use locale&lt;/code&gt; has appeared earlier in the same block) must be used for sorting raw binary data, whereas the locale-dependent collation of the first example is useful for natural text.</source>
          <target state="translated">このマシンネイティブの照合（ &lt;code&gt;use locale&lt;/code&gt; が同じブロックで以前に表示されていない限り取得されるもの）は、生のバイナリデータの並べ替えに使用する必要がありますが、最初の例のロケール依存の照合は、自然なテキストに役立ちます。</target>
        </trans-unit>
        <trans-unit id="fe9b1418e4cf2456d34c78acbb912d03460323b0" translate="yes" xml:space="preserve">
          <source>This macro automatically adjusts the stack for you, if needed. Thus, you do not need to call &lt;code&gt;EXTEND&lt;/code&gt; to extend the stack.</source>
          <target state="translated">このマクロは、必要に応じてスタックを自動的に調整します。したがって、スタックを拡張するために &lt;code&gt;EXTEND&lt;/code&gt; を呼び出す必要はありません。</target>
        </trans-unit>
        <trans-unit id="03eb53576978d347f479b9ace06d68ed559f1850" translate="yes" xml:space="preserve">
          <source>This macro evaluates to non-zero if the first few bytes of the string starting at &lt;code&gt;s&lt;/code&gt; and looking no further than &lt;code&gt;e - 1&lt;/code&gt; are from this UTF-8 extension; otherwise it evaluates to 0. If non-zero, the value gives how many bytes starting at &lt;code&gt;s&lt;/code&gt; comprise the code point's representation.</source>
          <target state="translated">このマクロは、 &lt;code&gt;s&lt;/code&gt; で始まり、 &lt;code&gt;e - 1&lt;/code&gt; 以下の文字列の最初の数バイトがこのUTF-8拡張からのものである場合、ゼロ以外と評価されます。それ以外の場合は0と評価されます。ゼロ以外の場合、値は &lt;code&gt;s&lt;/code&gt; で始まるバイト数がコードポイントの表現を構成することを示します。</target>
        </trans-unit>
        <trans-unit id="87701b9dd5d8a0667150a21e302c3f738b0c69c4" translate="yes" xml:space="preserve">
          <source>This macro invokes the supplied statement or block within the context of a &lt;a href=&quot;#STORE_LC_NUMERIC_SET_TO_NEEDED&quot;&gt;&quot;STORE_LC_NUMERIC_SET_TO_NEEDED&quot;&lt;/a&gt; .. &lt;a href=&quot;#RESTORE_LC_NUMERIC&quot;&gt;&quot;RESTORE_LC_NUMERIC&quot;&lt;/a&gt; pair if required, so eg:</source>
          <target state="translated">このマクロは、必要に応じて&lt;a href=&quot;#STORE_LC_NUMERIC_SET_TO_NEEDED&quot;&gt;「STORE_LC_NUMERIC_SET_TO_NEEDED」&lt;/a&gt; .. &lt;a href=&quot;#RESTORE_LC_NUMERIC&quot;&gt;「RESTORE_LC_NUMERIC」&lt;/a&gt;ペアのコンテキスト内で提供されたステートメントまたはブロックを呼び出します。</target>
        </trans-unit>
        <trans-unit id="5a0683190e9b9e040d58492b89f4c05059f16d5d" translate="yes" xml:space="preserve">
          <source>This macro is intended to be used by XS modules where the inputs could be malformed, and it isn't feasible to restructure to use the safer &lt;a href=&quot;#UTF8_SAFE_SKIP&quot;&gt;&quot;&lt;code&gt;UTF8_SAFE_SKIP&lt;/code&gt;&quot;&lt;/a&gt;, for example when interfacing with a C library.</source>
          <target state="translated">このマクロは、入力の形式が正しくない可能性があるXSモジュールで使用することを目的としており、たとえばCライブラリとのインターフェイス時に、より安全な&lt;a href=&quot;#UTF8_SAFE_SKIP&quot;&gt;「 &lt;code&gt;UTF8_SAFE_SKIP&lt;/code&gt; 」&lt;/a&gt;を使用するように再構築することはできません。</target>
        </trans-unit>
        <trans-unit id="bf6c6c2883f7df6e6775b00306eebea28bdde0f9" translate="yes" xml:space="preserve">
          <source>This macro is only used by &lt;code&gt;sv_true()&lt;/code&gt; or its macro equivalent, and only if the latter's argument is neither &lt;code&gt;SvPOK&lt;/code&gt;, &lt;code&gt;SvIOK&lt;/code&gt; nor &lt;code&gt;SvNOK&lt;/code&gt;. It calls &lt;code&gt;sv_2bool_flags&lt;/code&gt; with the &lt;code&gt;SV_GMAGIC&lt;/code&gt; flag.</source>
          <target state="translated">このマクロは、 &lt;code&gt;sv_true()&lt;/code&gt; またはそれに相当するマクロによってのみ使用され、後者の引数が &lt;code&gt;SvPOK&lt;/code&gt; 、 &lt;code&gt;SvIOK&lt;/code&gt; 、または &lt;code&gt;SvNOK&lt;/code&gt; のいずれでもない場合にのみ使用されます。 &lt;code&gt;SV_GMAGIC&lt;/code&gt; フラグを &lt;code&gt;sv_2bool_flags&lt;/code&gt; してsv_2bool_flagsを呼び出します。</target>
        </trans-unit>
        <trans-unit id="28984ae179e05c5bf9916303fc08d37c02058ac5" translate="yes" xml:space="preserve">
          <source>This macro is only used by sv_true() or its macro equivalent, and only if the latter's argument is neither SvPOK, SvIOK nor SvNOK. It calls sv_2bool_flags with the SV_GMAGIC flag.</source>
          <target state="translated">このマクロは sv_true()またはそれと同等のマクロによってのみ使用され、後者の引数が SvPOK,SvIOK,SvNOK のいずれでもない場合にのみ使用される。sv_2bool_flags を SV_GMAGIC フラグで呼び出します。</target>
        </trans-unit>
        <trans-unit id="e69c1ad5fe8e7c0cb76164a9a63b43161810252f" translate="yes" xml:space="preserve">
          <source>This macro is the start of wrapping the C or XS code; the wrap ending is done by calling the &lt;a href=&quot;#RESTORE_LC_NUMERIC&quot;&gt;&quot;RESTORE_LC_NUMERIC&quot;&lt;/a&gt; macro after the operation. Otherwise the state can be changed that will adversely affect other XS code.</source>
          <target state="translated">このマクロは、CまたはXSコードのラップの開始です。ラップの終了は、操作後に&lt;a href=&quot;#RESTORE_LC_NUMERIC&quot;&gt;「RESTORE_LC_NUMERIC」&lt;/a&gt;マクロを呼び出すことによって行われます。そうしないと、状態が変更され、他のXSコードに悪影響を与える可能性があります。</target>
        </trans-unit>
        <trans-unit id="e10545c4894740426ee72f48ac1e29d7b762c0e6" translate="yes" xml:space="preserve">
          <source>This macro is the start of wrapping the C or XS code; the wrap ending is done by calling the &lt;a href=&quot;#RESTORE_LC_NUMERIC&quot;&gt;RESTORE_LC_NUMERIC&lt;/a&gt; macro after the operation. Otherwise the state can be changed that will adversely affect other XS code.</source>
          <target state="translated">このマクロは、CまたはXSコードのラップの開始です。ラップ終了は、操作後に&lt;a href=&quot;#RESTORE_LC_NUMERIC&quot;&gt;RESTORE_LC_NUMERIC&lt;/a&gt;マクロを呼び出すことによって行われます。そうしないと、状態が変更され、他のXSコードに悪影響を与える可能性があります。</target>
        </trans-unit>
        <trans-unit id="108576184697c52b594b5fe191807eddc07365bd" translate="yes" xml:space="preserve">
          <source>This macro is used to define a unique key to refer to the static data for an XS module. The suggested naming scheme, as used by h2xs, is to use a string that consists of the module name, the string &quot;::_guts&quot; and the module version number.</source>
          <target state="translated">このマクロは、XSモジュールの静的データを参照するための一意のキーを定義するために使用します。h2xs が推奨する命名法は、モジュール名、&quot;::_guts&quot; という文字列、モジュールのバージョン番号からなる文字列を使用することです。</target>
        </trans-unit>
        <trans-unit id="c6d4c1493bd7a58de9fad441658972687cd16b89" translate="yes" xml:space="preserve">
          <source>This macro makes sure the current &lt;code&gt;LC_NUMERIC&lt;/code&gt; state is set properly, to be aware of locale if the call to the XS or C code from the Perl program is from within the scope of a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; ; or to ignore locale if the call is instead from outside such scope.</source>
          <target state="translated">このマクロは、現在の &lt;code&gt;LC_NUMERIC&lt;/code&gt; 状態が適切に設定されていることを確認し、PerlプログラムからのXSまたはCコードの呼び出しが &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; のスコープ内からのものであるかどうかを認識します。または、呼び出しがそのようなスコープ外からの場合はロケールを無視します。</target>
        </trans-unit>
        <trans-unit id="789676223757b6e3c9adb39d17261f88564cb4ea" translate="yes" xml:space="preserve">
          <source>This macro makes sure the current &lt;code&gt;LC_NUMERIC&lt;/code&gt; state is set properly, to be aware of locale if the call to the XS or C code from the Perl program is from within the scope of a &lt;code&gt;use locale&lt;/code&gt;; or to ignore locale if the call is instead from outside such scope.</source>
          <target state="translated">このマクロは、現在の &lt;code&gt;LC_NUMERIC&lt;/code&gt; 状態が適切に設定されていることを確認し、PerlプログラムからのXSまたはCコードの呼び出しが &lt;code&gt;use locale&lt;/code&gt; 範囲内からのものである場合にロケールを認識します。または、呼び出しがそのようなスコープ外からの場合は、ロケールを無視します。</target>
        </trans-unit>
        <trans-unit id="a92648c32efc9502af17e5ceb0078f95c4ee774c" translate="yes" xml:space="preserve">
          <source>This macro should be used as a statement. It declares a private variable (whose name begins with an underscore) that is needed by the other macros in this section. Failing to include this correctly should lead to a syntax error. For compatibility with C89 C compilers it should be placed in a block before any executable statements.</source>
          <target state="translated">このマクロはステートメントとして使用する必要があります。このセクションの他のマクロで必要なプライベート変数 (名前がアンダースコアで始まる)を宣言します。これを正しくインクルードしないと、構文エラーが発生します。C89 Cコンパイラとの互換性を保つためには、実行可能なステートメントの前にブロックに入れなければなりません。</target>
        </trans-unit>
        <trans-unit id="b90726f024761758381d53bc05e127149501c3cd" translate="yes" xml:space="preserve">
          <source>This makes &lt;code&gt;$?&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; return the native VMS exit status instead of emulating the POSIX exit status.</source>
          <target state="translated">これは &lt;code&gt;$?&lt;/code&gt; そして &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; POSIXの終了状態をエミュレートするのではなく、ネイティブのVMS終了ステータスを返します。</target>
        </trans-unit>
        <trans-unit id="628b3f0c435efc68cdba395167206609d25c5fc1" translate="yes" xml:space="preserve">
          <source>This makes &lt;code&gt;$?&lt;/code&gt; and &lt;code&gt;system&lt;/code&gt; return the native VMS exit status instead of emulating the POSIX exit status.</source>
          <target state="translated">これは &lt;code&gt;$?&lt;/code&gt; そして &lt;code&gt;system&lt;/code&gt; POSIXの終了状態をエミュレートするのではなく、ネイティブのVMS終了ステータスを返します。</target>
        </trans-unit>
        <trans-unit id="8a2c6d4ff2fd838d04decac262a17dd105743f47" translate="yes" xml:space="preserve">
          <source>This makes &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt; 1&lt;/code&gt; produce a successful exit (with status SS$_NORMAL), instead of emulating UNIX exit(), which considers &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt; 1&lt;/code&gt; to indicate an error. As with the CRTL's exit() function, &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt; 0&lt;/code&gt; is also mapped to an exit status of SS$_NORMAL, and any other argument to exit() is used directly as Perl's exit status.</source>
          <target state="translated">これは作る &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt; 1&lt;/code&gt; の農産物に（状況SS $ _NORMAL付き）、代わりに考慮UNIX出口（）、エミュレートするのに成功し、出口 &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt; 1&lt;/code&gt; エラーを示すために。CRTLのexit（）関数と同様に、 &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt; 0&lt;/code&gt; もSS $ _NORMALの終了ステータスにマップされ、exit（）への他の引数はPerlの終了ステータスとして直接使用されます。</target>
        </trans-unit>
        <trans-unit id="f530eabe223e1fc114547fb2222672ed10b84b29" translate="yes" xml:space="preserve">
          <source>This makes &lt;code&gt;exit 1&lt;/code&gt; produce a successful exit (with status SS$_NORMAL), instead of emulating UNIX exit(), which considers &lt;code&gt;exit 1&lt;/code&gt; to indicate an error. As with the CRTL's exit() function, &lt;code&gt;exit 0&lt;/code&gt; is also mapped to an exit status of SS$_NORMAL, and any other argument to exit() is used directly as Perl's exit status.</source>
          <target state="translated">これは作る &lt;code&gt;exit 1&lt;/code&gt; の農産物に（状況SS $ _NORMAL付き）、代わりに考慮UNIX出口（）、エミュレートするのに成功し、出口 &lt;code&gt;exit 1&lt;/code&gt; エラーを示すようにします。CRTLの出口（）関数のように、 &lt;code&gt;exit 0&lt;/code&gt; また、SS $ _NORMALの終了ステータス、および出口に他の引数（）Perlの終了ステータスとして直接使用されるにマッピングされます。</target>
        </trans-unit>
        <trans-unit id="bf2d12c23e7f9dc586004c73bb11c5e4d66c884b" translate="yes" xml:space="preserve">
          <source>This makes a second reference to the &lt;b&gt;same&lt;/b&gt; object and stores it in $y. Thus anything that modifies $x (except overloaded operators) also modifies $y, and vice versa. Or in other words, &lt;code&gt;=&lt;/code&gt; is only safe if you modify your Math::BigInt objects only via overloaded math. As soon as you use a method call it breaks:</source>
          <target state="translated">これにより、&lt;b&gt;同じ&lt;/b&gt;オブジェクトへの2番目の参照が作成され、$ yに格納されます。したがって、$ xを変更するもの（オーバーロードされた演算子を除く）も$ yを変更し、その逆も同様です。つまり、 &lt;code&gt;=&lt;/code&gt; は、オーバーロードされた数学を介してのみMath :: BigIntオブジェクトを変更した場合にのみ安全です。メソッド呼び出しを使用するとすぐに壊れます：</target>
        </trans-unit>
        <trans-unit id="7bf5212d7d68fd2597a5ccb3dac44a0ec0acbc33" translate="yes" xml:space="preserve">
          <source>This makes all times relative to the local time zone, instead of the default of Universal Time (a.k.a Greenwich Mean Time, or GMT).</source>
          <target state="translated">これにより、すべての時間がローカルタイムゾーンを基準とした相対的なものとなり、デフォルトの世界標準時(グリニッジ平均時、またはGMT)の代わりになります。</target>
        </trans-unit>
        <trans-unit id="9babc5bd4d4d8fad4e1a1114788e7c9d9589298f" translate="yes" xml:space="preserve">
          <source>This makes it easy for people to use your module with Perl. Note that this licensing example is neither an endorsement or a requirement, you are of course free to choose any licensing.</source>
          <target state="translated">これにより、人々がPerlであなたのモジュールを簡単に使用できるようになります。このライセンスの例は推奨でも要件でもないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="f6b677bb7d54149dada8aa52108296cc95f7e885" translate="yes" xml:space="preserve">
          <source>This makes it easy to turn memoizing on and off.</source>
          <target state="translated">これでメモのオンオフが簡単になります。</target>
        </trans-unit>
        <trans-unit id="84c2faa4aab99c70a3db865e9bc75342b3b56a52" translate="yes" xml:space="preserve">
          <source>This makes it easy to write loops that terminate when a null list is returned:</source>
          <target state="translated">これにより、ヌルリストが返されたときに終了するループを簡単に書くことができます。</target>
        </trans-unit>
        <trans-unit id="ef9cd0d8fba7947707aa196a6028ecbb8adf2cd7" translate="yes" xml:space="preserve">
          <source>This makes it possible for you to have a single point of configuring what subclasses should be used, which means that in many cases you'll find you only need to sub-class one of the parser's components.</source>
          <target state="translated">これにより、どのサブクラスを使用するかを単一のポイントで設定できるようになり、多くの場合、パーサのコンポーネントの1つをサブクラスにするだけで済むようになります。</target>
        </trans-unit>
        <trans-unit id="80334a3bb6611cb20a20615249beb172fdbc5b91" translate="yes" xml:space="preserve">
          <source>This makes it possible to mix arguments of different classes (as in 2.5 + 2) as well es preserve accuracy (as in sqrt(3)).</source>
          <target state="translated">これにより、(2.5+2 のように)異なるクラスの引数を混在させたり、(sqrt(3)のように)精度を保ったりすることが可能になります。</target>
        </trans-unit>
        <trans-unit id="304f656ae607b7cf896345e4cfc56ab064cd5820" translate="yes" xml:space="preserve">
          <source>This makes it possible to write a constructor like this:</source>
          <target state="translated">これにより、このようなコンストラクタを書くことが可能になります。</target>
        </trans-unit>
        <trans-unit id="fc06c6059d7797b5cf29ed701247a147f4e8dbe0" translate="yes" xml:space="preserve">
          <source>This makes it so that HashBase sees that you have your own &lt;code&gt;new()&lt;/code&gt; method. Alternatively you can define the method before loading HashBase instead of just declaring it, but that scatters your use statements.</source>
          <target state="translated">これにより、HashBaseは独自の &lt;code&gt;new()&lt;/code&gt; メソッドがあることを認識します。あるいは、メソッドを宣言するだけでなく、ロードする前にメソッドを定義することもできますが、それではuseステートメントが分散します。</target>
        </trans-unit>
        <trans-unit id="08c53718a75ad3b112dec7a9bbaa9b39968746d5" translate="yes" xml:space="preserve">
          <source>This makes sure that &lt;code&gt;foo bar&lt;/code&gt; is treated as a string, rather than two separate arguments to the &lt;code&gt;echo&lt;/code&gt; function.</source>
          <target state="translated">これにより、 &lt;code&gt;foo bar&lt;/code&gt; が &lt;code&gt;echo&lt;/code&gt; 関数への2つの個別の引数ではなく、文字列として扱われるようになります。</target>
        </trans-unit>
        <trans-unit id="d11f54f9813ffdcb8a603cf0a760fa85bee8c0f3" translate="yes" xml:space="preserve">
          <source>This makes the four standard bitwise operators (&lt;code&gt;&amp;amp; | ^ ~&lt;/code&gt; ) treat their operands consistently as numbers, and introduces four new dotted operators (&lt;code&gt;&amp;amp;. |. ^. ~.&lt;/code&gt; ) that treat their operands consistently as strings. The same applies to the assignment variants (&lt;code&gt;&amp;amp;= |= ^= &amp;amp;.= |.= ^.=&lt;/code&gt; ).</source>
          <target state="translated">これにより、4つの標準のビット演算子（ &lt;code&gt;&amp;amp; | ^ ~&lt;/code&gt; ）はオペランドを一貫して数値として扱い、オペランドを一貫して文字列として扱う4つの新しいドット付き演算子（ &lt;code&gt;&amp;amp;. |. ^. ~.&lt;/code&gt; ）を導入します。同じことが割り当てバリアント（ &lt;code&gt;&amp;amp;= |= ^= &amp;amp;.= |.= ^.=&lt;/code&gt; ）にも当てはまります。</target>
        </trans-unit>
        <trans-unit id="453a24b82235c09045ebce781ba5151542428ce9" translate="yes" xml:space="preserve">
          <source>This makes the four standard bitwise operators (&lt;code&gt;&amp;amp; | ^ ~&lt;/code&gt;) treat their operands consistently as numbers, and introduces four new dotted operators (&lt;code&gt;&amp;amp;. |. ^. ~.&lt;/code&gt;) that treat their operands consistently as strings. The same applies to the assignment variants (&lt;code&gt;&amp;amp;= |= ^= &amp;amp;.= |.= ^.=&lt;/code&gt;).</source>
          <target state="translated">これにより、4つの標準ビット演算子（ &lt;code&gt;&amp;amp; | ^ ~&lt;/code&gt; ）は、オペランドを一貫して数値として扱い、オペランドを一貫して文字列として扱う4つの新しいドット演算子（ &lt;code&gt;&amp;amp;. |. ^. ~.&lt;/code&gt; ）を導入します。同じことが割り当てバリアントにも当てはまります（ &lt;code&gt;&amp;amp;= |= ^= &amp;amp;.= |.= ^.=&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="168408e4eda2afd55c396c633b53aaec0eb729d4" translate="yes" xml:space="preserve">
          <source>This makes this XSUB look similar to an ANSI C declaration. An optional semicolon is allowed after the argument list, as in</source>
          <target state="translated">これにより、このXSUBはANSI C宣言に似ています。引数リストの後にはオプションのセミコロンを付けることができます。</target>
        </trans-unit>
        <trans-unit id="2eced7035bcf730659e224115fc20b5232c60142" translate="yes" xml:space="preserve">
          <source>This man page is for the version for modern perls and so that's probably what you've got.</source>
          <target state="translated">この man ページは modern perls 用のバージョンのためのものなので、おそらくそれを使っているのでしょう。</target>
        </trans-unit>
        <trans-unit id="b1f55a347ef2e9626ef51c086b431d8a172c3d1b" translate="yes" xml:space="preserve">
          <source>This manpage contains short recipes demonstrating how to handle common Unicode operations in Perl, plus one complete program at the end. Any undeclared variables in individual recipes are assumed to have a previous appropriate value in them.</source>
          <target state="translated">この man ページには、Perl での一般的な Unicode 操作の扱い方を示す短いレシピと、最後に 1 つの完全なプログラムが含まれています。個々のレシピで宣言されていない変数は、それ以前の適切な値を持っていると仮定しています。</target>
        </trans-unit>
        <trans-unit id="aa682f1e123b444504fdfffff8f8767942781c1e" translate="yes" xml:space="preserve">
          <source>This manual page discusses the syntax and use of character classes in Perl regular expressions.</source>
          <target state="translated">このマニュアルページでは、Perl正規表現における文字クラスの構文と使用法について説明します。</target>
        </trans-unit>
        <trans-unit id="3369a77e4e9693acaaa9351801ed7f0c5ee8faea" translate="yes" xml:space="preserve">
          <source>This maps from US-ASCII codes (like 32) to the corresponding character (like space, for 32). Only characters 32 to 126 are defined. This is meant for use by &lt;code&gt;e2char($x)&lt;/code&gt; when it senses that it's running on a non-ASCII platform (where chr(32) doesn't get you a space -- but $Code2USASCII{32} will). It's documented here just in case you might find it useful.</source>
          <target state="translated">これは、US-ASCIIコード（32など）から対応する文字（32などのスペース）にマッピングされます。32から126の文字のみが定義されています。これは、 &lt;code&gt;e2char($x)&lt;/code&gt; が非ASCIIプラットフォームで実行されていることを検出したときに使用することを目的としています（chr（32）はスペースを確保しませんが、$ Code2USASCII {32}は許可します）。役に立つと思われる場合に備えて、ここに記載されています。</target>
        </trans-unit>
        <trans-unit id="3b8a1823436e8a6226985b3f21cad0fcc22240a7" translate="yes" xml:space="preserve">
          <source>This marks the end of the region opened by the matching &quot;=begin formatname&quot; region. If &quot;formatname&quot; is not the formatname of the most recent open &quot;=begin formatname&quot; region, then this is an error, and must generate an error message. This is discussed in detail in the section &lt;a href=&quot;#About-Data-Paragraphs-and-%22%3Dbegin%2F%3Dend%22-Regions&quot;&gt;&quot;About Data Paragraphs and &quot;=begin/=end&quot; Regions&quot;&lt;/a&gt;.</source>
          <target state="translated">これは、一致する「= beginformatname」リージョンによって開かれたリージョンの終わりを示します。「formatname」が最新の開いている「= beginformatname」領域のフォーマット名でない場合、これはエラーであり、エラーメッセージを生成する必要があります。これについては、&lt;a href=&quot;#About-Data-Paragraphs-and-%22%3Dbegin%2F%3Dend%22-Regions&quot;&gt;「データ段落と「= begin / = end」リージョンについて」&lt;/a&gt;のセクションで詳しく説明します。</target>
        </trans-unit>
        <trans-unit id="cb4d3919cb732684c195097b0bb170a903bf1284" translate="yes" xml:space="preserve">
          <source>This marks the end of the region opened by the matching &quot;=begin formatname&quot; region. If &quot;formatname&quot; is not the formatname of the most recent open &quot;=begin formatname&quot; region, then this is an error, and must generate an error message. This is discussed in detail in the section &lt;a href=&quot;#About-Data-Paragraphs-and-%22%3dbegin%2f%3dend%22-Regions&quot;&gt;About Data Paragraphs and =begin/=end Regions&lt;/a&gt;.</source>
          <target state="translated">これは、一致する「= begin formatname」領域によって開かれた領域の終わりを示します。「formatname」が最新のオープン「= begin formatname」領域のformatnameでない場合、これはエラーであり、エラーメッセージを生成する必要があります。これについては、「&lt;a href=&quot;#About-Data-Paragraphs-and-%22%3dbegin%2f%3dend%22-Regions&quot;&gt;データパラグラフと= begin / = end領域について」&lt;/a&gt;のセクションで詳しく説明しています。</target>
        </trans-unit>
        <trans-unit id="5f3eb630ccbc8c1b4b4ea62b60c2f17bbd2e13b1" translate="yes" xml:space="preserve">
          <source>This marks the following paragraphs (until the matching &quot;=end formatname&quot;) as being for some special kind of processing. Unless &quot;formatname&quot; begins with a colon, the contained non-command paragraphs are data paragraphs. But if &quot;formatname&quot;</source>
          <target state="translated">これは、以下の段落(一致する&quot;=end formatname &quot;まで)を、何らかの特別な処理のためのものとしてマークします。formatname &quot;がコロンで始まらない限り、含まれる非コマンド段落はデータ段落です。しかし、&quot;formatname &quot;が</target>
        </trans-unit>
        <trans-unit id="199ca4d2282805128a713cd4c31b353ecaf62285" translate="yes" xml:space="preserve">
          <source>This matches a Unicode</source>
          <target state="translated">これはユニコードにマッチします。</target>
        </trans-unit>
        <trans-unit id="35187fd79ec1edcbf75ff3589e7d7a4fd9384c68" translate="yes" xml:space="preserve">
          <source>This matches a Unicode &quot;Grapheme Cluster Boundary&quot;. (Actually Perl always uses the improved &quot;extended&quot; grapheme cluster&quot;). These are explained below under &lt;a href=&quot;#%5CX&quot;&gt;&quot;&lt;code&gt;\X&lt;/code&gt;&quot;&lt;/a&gt;. In fact, &lt;code&gt;\X&lt;/code&gt; is another way to get the same functionality. It is equivalent to &lt;code&gt;/.+?\b{gcb}/&lt;/code&gt;. Use whichever is most convenient for your situation.</source>
          <target state="translated">これは、Unicodeの「書記素クラスター境界」と一致します。（実際、Perlは常に改良された「拡張」書記素クラスターを使用します。）これらは以下の&lt;a href=&quot;#%5CX&quot;&gt;「 &lt;code&gt;\X&lt;/code&gt; 」&lt;/a&gt;で説明されています。実際、 &lt;code&gt;\X&lt;/code&gt; は同じ機能を取得する別の方法です。これは &lt;code&gt;/.+?\b{gcb}/&lt;/code&gt; と同等です。 gcb} /。状況に最も適した方を使用してください。</target>
        </trans-unit>
        <trans-unit id="7a2285705bf65a5f3a4137269fb669e26419a225" translate="yes" xml:space="preserve">
          <source>This matches a Unicode &quot;Grapheme Cluster Boundary&quot;. (Actually Perl always uses the improved &quot;extended&quot; grapheme cluster&quot;). These are explained below under &lt;a href=&quot;#%5cX&quot;&gt;\X&lt;/a&gt;. In fact, &lt;code&gt;\X&lt;/code&gt; is another way to get the same functionality. It is equivalent to &lt;code&gt;/.+?\b{gcb}/&lt;/code&gt; . Use whichever is most convenient for your situation.</source>
          <target state="translated">これは、Unicodeの「Grapheme Cluster Boundary」に一致します。（実際には、Perlは常に改善された「拡張」書記素クラスタを使用します。）これらについては、以下の&lt;a href=&quot;#%5cX&quot;&gt;\ Xで&lt;/a&gt;説明します。実際、 &lt;code&gt;\X&lt;/code&gt; は、同じ機能を実現する別の方法です &lt;code&gt;/.+?\b{gcb}/&lt;/code&gt; と同等です/。状況に最も適した方を使用します。</target>
        </trans-unit>
        <trans-unit id="43a174e3acf9fe3da094fe1e29ca009a0ac07471" translate="yes" xml:space="preserve">
          <source>This matches a Unicode &quot;Sentence Boundary&quot;. This is an aid to parsing natural language sentences. It gives good, but imperfect results. For example, it thinks that &quot;Mr. Smith&quot; is two sentences. More details are at &lt;a href=&quot;http://www.unicode.org/reports/tr29/&quot;&gt;http://www.unicode.org/reports/tr29/&lt;/a&gt;. Note also that it thinks that anything matching &lt;a href=&quot;#%5cR&quot;&gt;\R&lt;/a&gt; (except form feed and vertical tab) is a sentence boundary. &lt;code&gt;\b{sb}&lt;/code&gt; works with text designed for word-processors which wrap lines automatically for display, but hard-coded line boundaries are considered to be essentially the ends of text blocks (paragraphs really), and hence the ends of sententces. &lt;code&gt;\b{sb}&lt;/code&gt; doesn't do well with text containing embedded newlines, like the source text of the document you are reading. Such text needs to be preprocessed to get rid of the line separators before looking for sentence boundaries. Some people view this as a bug in the Unicode standard, and this behavior is quite subject to change in future Perl versions.</source>
          <target state="translated">これは、Unicodeの「文の境界」と一致します。これは、自然言語の文を解析するのに役立ちます。それは良いが不完全な結果をもたらします。例えば、「スミスさん」は２文だと思います。詳細は&lt;a href=&quot;http://www.unicode.org/reports/tr29/&quot;&gt;http://www.unicode.org/reports/tr29/にあります&lt;/a&gt;。また、&lt;a href=&quot;#%5cR&quot;&gt;\ R&lt;/a&gt;（フォームフィードと垂直タブを除く）に一致するものはすべて文の境界であると見なされることにも注意してください。 &lt;code&gt;\b{sb}&lt;/code&gt; 、表示のために自動的に行を折り返すワードプロセッサ用に設計されたテキストで機能しますが、ハードコードされた行の境界は、本質的にテキストブロックの終わり（実際には段落）と見なされ、したがって、文の終わりと見なされます。 &lt;code&gt;\b{sb}&lt;/code&gt; 読んでいるドキュメントのソーステキストのように、改行が埋め込まれたテキストではうまく機能しません。このようなテキストは、文の境界を探す前に行セパレーターを取り除くために前処理する必要があります。これをUnicode標準のバグと見なす人もいますが、この動作は将来のPerlバージョンで変更される可能性があります。</target>
        </trans-unit>
        <trans-unit id="1cb6230dc355ad698d71f70d4c4922dccb9931e0" translate="yes" xml:space="preserve">
          <source>This matches a Unicode &quot;Sentence Boundary&quot;. This is an aid to parsing natural language sentences. It gives good, but imperfect results. For example, it thinks that &quot;Mr. Smith&quot; is two sentences. More details are at &lt;a href=&quot;https://www.unicode.org/reports/tr29/&quot;&gt;https://www.unicode.org/reports/tr29/&lt;/a&gt;. Note also that it thinks that anything matching &lt;a href=&quot;#%5CR&quot;&gt;&quot;\R&quot;&lt;/a&gt; (except form feed and vertical tab) is a sentence boundary. &lt;code&gt;\b{sb}&lt;/code&gt; works with text designed for word-processors which wrap lines automatically for display, but hard-coded line boundaries are considered to be essentially the ends of text blocks (paragraphs really), and hence the ends of sentences. &lt;code&gt;\b{sb}&lt;/code&gt; doesn't do well with text containing embedded newlines, like the source text of the document you are reading. Such text needs to be preprocessed to get rid of the line separators before looking for sentence boundaries. Some people view this as a bug in the Unicode standard, and this behavior is quite subject to change in future Perl versions.</source>
          <target state="translated">これは、Unicodeの「文の境界」と一致します。これは、自然言語の文を解析するのに役立ちます。それは良いが不完全な結果をもたらします。たとえば、「スミスさん」は2文だと思います。詳細については、&lt;a href=&quot;https://www.unicode.org/reports/tr29/&quot;&gt;https：//www.unicode.org/reports/tr29/をご覧ください&lt;/a&gt;。&lt;a href=&quot;#%5CR&quot;&gt;「\ R」に&lt;/a&gt;一致するもの（フォームフィードと垂直タブを除く）はすべて文の境界であると見なされることにも注意してください。 &lt;code&gt;\b{sb}&lt;/code&gt; 、表示のために行を自動的に折り返すワードプロセッサ用に設計されたテキストで機能しますが、ハードコードされた行の境界は、本質的にテキストブロックの終わり（実際には段落）、つまり文の終わりと見なされます。 &lt;code&gt;\b{sb}&lt;/code&gt; 読んでいるドキュメントのソーステキストのように、改行が埋め込まれたテキストではうまくいきません。このようなテキストは、文の境界を探す前に、行区切り文字を取り除くために前処理する必要があります。これをUnicode標準のバグと見なす人もいますが、この動作は将来のPerlバージョンで変更される可能性があります。</target>
        </trans-unit>
        <trans-unit id="2811398b5c9cc7a492470e9d11bff95eac375ba9" translate="yes" xml:space="preserve">
          <source>This matches a Unicode &quot;Word Boundary&quot;, but tailored to Perl expectations. This gives better (though not perfect) results for natural language processing than plain &lt;code&gt;\b&lt;/code&gt; (without braces) does. For example, it understands that apostrophes can be in the middle of words and that parentheses aren't (see the examples below). More details are at &lt;a href=&quot;https://www.unicode.org/reports/tr29/&quot;&gt;https://www.unicode.org/reports/tr29/&lt;/a&gt;.</source>
          <target state="translated">これはUnicodeの「WordBoundary」と一致しますが、Perlの期待に合わせて調整されています。これにより、（中括弧なしの）単純な &lt;code&gt;\b&lt;/code&gt; よりも、自然言語処理でより良い（完全ではありませんが）結果が得られます。たとえば、アポストロフィは単語の途中にある可能性があり、括弧はそうではないことを理解しています（以下の例を参照）。詳細については、&lt;a href=&quot;https://www.unicode.org/reports/tr29/&quot;&gt;https：//www.unicode.org/reports/tr29/をご覧ください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="862d390cde50da1c3067a4f5bf13a23004164fc2" translate="yes" xml:space="preserve">
          <source>This matches a Unicode &quot;Word Boundary&quot;. This gives better (though not perfect) results for natural language processing than plain &lt;code&gt;\b&lt;/code&gt; (without braces) does. For example, it understands that apostrophes can be in the middle of words and that parentheses aren't (see the examples below). More details are at &lt;a href=&quot;http://www.unicode.org/reports/tr29/&quot;&gt;http://www.unicode.org/reports/tr29/&lt;/a&gt;.</source>
          <target state="translated">これは、Unicodeの「Word Boundary」と一致します。これにより、自然言語処理の結果が（完全ではありませんが）プレーンな &lt;code&gt;\b&lt;/code&gt; （ブレースなし）よりも優れています。たとえば、アポストロフィが単語の途中にある可能性があること、および括弧がそうでないことを理解しています（以下の例を参照）。詳細は&lt;a href=&quot;http://www.unicode.org/reports/tr29/&quot;&gt;http://www.unicode.org/reports/tr29/にあります&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ef47eed99ac1d083b3beb492e4f8913342391453" translate="yes" xml:space="preserve">
          <source>This matches according to the default Unicode Line Breaking Algorithm (&lt;a href=&quot;https://www.unicode.org/reports/tr14/&quot;&gt;https://www.unicode.org/reports/tr14/&lt;/a&gt;), as customized in that document (&lt;a href=&quot;https://www.unicode.org/reports/tr14/tr14-35.html#Example7&quot;&gt;Example 7 of revision 35&lt;/a&gt;) for better handling of numeric expressions.</source>
          <target state="translated">これは、数式の処理を改善するためにそのドキュメント（&lt;a href=&quot;https://www.unicode.org/reports/tr14/tr14-35.html#Example7&quot;&gt;リビジョン35の例7&lt;/a&gt;）でカスタマイズされているように、デフォルトのUnicode改行アルゴリズム（&lt;a href=&quot;https://www.unicode.org/reports/tr14/&quot;&gt;https://www.unicode.org/reports/tr14/&lt;/a&gt;）に従って一致します。</target>
        </trans-unit>
        <trans-unit id="dd6302d3bb19b988247051f1fbfe94d51caf4369" translate="yes" xml:space="preserve">
          <source>This matches all code points whose numeric value is one of 0, 1, 2, 3, 4, or 5. This particular example could instead have been written as</source>
          <target state="translated">これは、数値が 0、1、2、3、4、または 5 のいずれかであるすべてのコードポイントにマッチします。この特定の例では、次のように書くことができます。</target>
        </trans-unit>
        <trans-unit id="46f9c4b6a0133a2ba4a4536268bb4388e6462d37" translate="yes" xml:space="preserve">
          <source>This matches any &lt;code&gt;\p{Alphabetic}&lt;/code&gt; or &lt;code&gt;\p{Decimal_Number}&lt;/code&gt; character.</source>
          <target state="translated">これは、 &lt;code&gt;\p{Alphabetic}&lt;/code&gt; または &lt;code&gt;\p{Decimal_Number}&lt;/code&gt; 文字と一致します。</target>
        </trans-unit>
        <trans-unit id="1368a197a87ba6ed14500f8908565c9ada6f62ff" translate="yes" xml:space="preserve">
          <source>This matches any assigned code point; that is, any code point whose &lt;a href=&quot;#General_Category&quot;&gt;general category&lt;/a&gt; is not &lt;code&gt;Unassigned&lt;/code&gt; (or equivalently, not &lt;code&gt;Cn&lt;/code&gt; ).</source>
          <target state="translated">これは、割り当てられたコードポイントと一致します。つまり、&lt;a href=&quot;#General_Category&quot;&gt;一般的なカテゴリ&lt;/a&gt;が &lt;code&gt;Unassigned&lt;/code&gt; （または同等に、 &lt;code&gt;Cn&lt;/code&gt; ではない）でないコードポイント。</target>
        </trans-unit>
        <trans-unit id="100bdeeeb5e6097e5b9781532670a8d8611e6b85" translate="yes" xml:space="preserve">
          <source>This matches any assigned code point; that is, any code point whose &lt;a href=&quot;#General_Category&quot;&gt;general category&lt;/a&gt; is not &lt;code&gt;Unassigned&lt;/code&gt; (or equivalently, not &lt;code&gt;Cn&lt;/code&gt;).</source>
          <target state="translated">これは、割り当てられたコードポイントと一致します。つまり、&lt;a href=&quot;#General_Category&quot;&gt;一般的なカテゴリ&lt;/a&gt;が &lt;code&gt;Unassigned&lt;/code&gt; はない（または同等に &lt;code&gt;Cn&lt;/code&gt; ではない）コードポイント。</target>
        </trans-unit>
        <trans-unit id="a2970fcf592bf526b7624da46ffe2c2926bcdb66" translate="yes" xml:space="preserve">
          <source>This matches any character that is graphical or blank, except controls.</source>
          <target state="translated">これは、コントロールを除く、グラフィカルまたはブランクのあるすべてのキャラクタにマッチします。</target>
        </trans-unit>
        <trans-unit id="9dcbf046b8bea0226e813051a826c67a230a6bfb" translate="yes" xml:space="preserve">
          <source>This matches any of the 128 characters in the US-ASCII character set, which is a subset of Unicode.</source>
          <target state="translated">これは、Unicode のサブセットである US-ASCII 文字セットの 128 文字のいずれかにマッチします。</target>
        </trans-unit>
        <trans-unit id="6f971eb914dae58555e5f55db125c34d663d6429" translate="yes" xml:space="preserve">
          <source>This matches any of the 1_114_112 Unicode code points. &lt;code&gt;\p{Any}&lt;/code&gt; .</source>
          <target state="translated">これは、1_114_112 Unicodeコードポイントのいずれかに一致します。 &lt;code&gt;\p{Any}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ce7e09f2891fc7e1926bcdf025e41ca7e5796fc4" translate="yes" xml:space="preserve">
          <source>This matches any of the 1_114_112 Unicode code points. &lt;code&gt;\p{Any}&lt;/code&gt;.</source>
          <target state="translated">これは、1_114_112Unicodeコードポイントのいずれにも一致します。 &lt;code&gt;\p{Any}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="50e5a95f3a6d3f1afad03782326f2e0e7b9c9ed7" translate="yes" xml:space="preserve">
          <source>This matches any of the 1_114_112 Unicode code points. It is a synonym for &lt;code&gt;\p{Unicode}&lt;/code&gt; .</source>
          <target state="translated">これは、1_114_112 Unicodeコードポイントのいずれかに一致します。 &lt;code&gt;\p{Unicode}&lt;/code&gt; 同義語です。</target>
        </trans-unit>
        <trans-unit id="29cf195e8abc4c2fda5508cb856c0619ed1c39b8" translate="yes" xml:space="preserve">
          <source>This matches any of the 1_114_112 Unicode code points. It is a synonym for &lt;code&gt;\p{Unicode}&lt;/code&gt;.</source>
          <target state="translated">これは、1_114_112Unicodeコードポイントのいずれにも一致します。これは &lt;code&gt;\p{Unicode}&lt;/code&gt; 同義語です。</target>
        </trans-unit>
        <trans-unit id="1ddbc160eb4c94b6ef293222be013d55a26c3ebd" translate="yes" xml:space="preserve">
          <source>This matches digits that are in either the Thai or Laotian scripts.</source>
          <target state="translated">これは、タイ語またはラオス語のスクリプトのいずれかの数字にマッチします。</target>
        </trans-unit>
        <trans-unit id="bed0a3d92b78eec58ff8b7c04af52fb9a269486e" translate="yes" xml:space="preserve">
          <source>This matches every possible code point. It is equivalent to &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr/./s&lt;/a&gt;&lt;/code&gt;. Unlike all the other non-user-defined &lt;code&gt;\p{}&lt;/code&gt; property matches, no warning is ever generated if this is property is matched against a non-Unicode code point (see &lt;a href=&quot;#Beyond-Unicode-code-points&quot;&gt;Beyond Unicode code points&lt;/a&gt; below).</source>
          <target state="translated">これは、可能なすべてのコードポイントに一致します。 &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr/./s&lt;/a&gt;&lt;/code&gt; と同等です。他のすべての非ユーザー定義の &lt;code&gt;\p{}&lt;/code&gt; プロパティの一致とは異なり、このプロパティが非Unicodeコードポイントと一致しても警告は生成されません（以下の&lt;a href=&quot;#Beyond-Unicode-code-points&quot;&gt;Unicodeコードポイントを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="54223479a01eff97835bc0fc4d5646f6d53ac4e4" translate="yes" xml:space="preserve">
          <source>This matches every possible code point. It is equivalent to &lt;code&gt;qr/./s&lt;/code&gt;. Unlike all the other non-user-defined &lt;code&gt;\p{}&lt;/code&gt; property matches, no warning is ever generated if this is property is matched against a non-Unicode code point (see &lt;a href=&quot;#Beyond-Unicode-code-points&quot;&gt;&quot;Beyond Unicode code points&quot;&lt;/a&gt; below).</source>
          <target state="translated">これは、考えられるすべてのコードポイントに一致します。 &lt;code&gt;qr/./s&lt;/code&gt; と同等です。他のすべての非ユーザー定義の &lt;code&gt;\p{}&lt;/code&gt; プロパティの一致とは異なり、このプロパティが非Unicodeコードポイントと一致する場合、警告は生成されません（以下の&lt;a href=&quot;#Beyond-Unicode-code-points&quot;&gt;「Unicodeコードポイントを超えて」を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="39f19d0a2349916b7981752a7104f9d5ef925fc8" translate="yes" xml:space="preserve">
          <source>This matches the English vowels plus the SPACE character.</source>
          <target state="translated">これは、英語の母音にSPACE文字を加えたものと一致します。</target>
        </trans-unit>
        <trans-unit id="e5af876b8e44759fbc1c5f4ebb39fe615bb29e7e" translate="yes" xml:space="preserve">
          <source>This matches the English vowels plus the SPACE character. All the other escapes accepted by normal bracketed character classes are accepted here as well; but unrecognized escapes that generate warnings in normal classes are fatal errors here.</source>
          <target state="translated">これは英語の母音にSPACE文字を加えたものです。通常の括弧付き文字クラスで受け入れられる他のエスケープはすべてここでも受け入れられますが、通常のクラスで警告を発生させる認識されていないエスケープはここでは致命的なエラーとなります。</target>
        </trans-unit>
        <trans-unit id="55be8f6854e7ce1e29dee30dacbad8368e941533" translate="yes" xml:space="preserve">
          <source>This may a variant of just &lt;a href=&quot;#I-cannot-run-external-programs&quot;&gt;&quot;I cannot run external programs&quot;&lt;/a&gt;, or a deeper problem. Basically: you</source>
          <target state="translated">これは、&lt;a href=&quot;#I-cannot-run-external-programs&quot;&gt;「外部プログラムを実行できません」の&lt;/a&gt;変形、またはより深刻な問題である可能性があります。基本的に：あなた</target>
        </trans-unit>
        <trans-unit id="6fe0bd3d52f9526a3bdbdf0fb7b2272dd4226b2a" translate="yes" xml:space="preserve">
          <source>This may a variant of just &lt;a href=&quot;#I-cannot-run-external-programs&quot;&gt;I cannot run external programs&lt;/a&gt;, or a deeper problem. Basically: you</source>
          <target state="translated">これは、&lt;a href=&quot;#I-cannot-run-external-programs&quot;&gt;外部プログラムを実行できない&lt;/a&gt;だけのバリエーションか、より深い問題の可能性があります。基本的に：あなた</target>
        </trans-unit>
        <trans-unit id="3c2e6cadd45bf9050033dd0f02dee64c1cb36e02" translate="yes" xml:space="preserve">
          <source>This may also be a good time to ensure that your /etc/protocol file and either your /etc/resolv.conf or /etc/hosts files are in place. The IBM document that described such USS system setup issues was SC28-1890-07 &quot;OS/390 UNIX System Services Planning&quot;, in particular Chapter 6 on customizing the OE shell.</source>
          <target state="translated">これはまた、/etc/protocol ファイルと /etc/resolv.conf または /etc/hosts ファイルのいずれかが適切に配置されていることを確認する良い機会かもしれません。このような USS システムのセットアップの問題について説明した IBM の文書は SC28-1890-07 &quot;OS/390 UNIX システムサービス計画&quot; であり、特に OE シェルのカスタマイズについては第 6 章に記載されています。</target>
        </trans-unit>
        <trans-unit id="1206b674e03199df25ca78fd2210a65fd2a21ff2" translate="yes" xml:space="preserve">
          <source>This may also be set to the special value &lt;code&gt;none&lt;/code&gt; , in which case no quote marks are added around C&amp;lt;&amp;gt; text (but the font is still changed for troff output).</source>
          <target state="translated">これは、特別な値 &lt;code&gt;none&lt;/code&gt; に設定することもできます。この場合、C &amp;lt;&amp;gt;テキストの周囲に引用符は追加されません（ただし、フォントはtroff出力用に変更されます）。</target>
        </trans-unit>
        <trans-unit id="345f8ac7fec5019dbde30571fee3e63e792fb3cf" translate="yes" xml:space="preserve">
          <source>This may also be set to the special value &lt;code&gt;none&lt;/code&gt; , in which case no quote marks are added around C&amp;lt;&amp;gt; text.</source>
          <target state="translated">これは、特別な値 &lt;code&gt;none&lt;/code&gt; に設定することもできます。その場合、C &amp;lt;&amp;gt;テキストの周りに引用符は追加されません。</target>
        </trans-unit>
        <trans-unit id="14fa777a070fca8732a6c3aaf496e4c4e9175f3e" translate="yes" xml:space="preserve">
          <source>This may also be set to the special value &lt;code&gt;none&lt;/code&gt;, in which case no quote marks are added around C&amp;lt;&amp;gt; text (but the font is still changed for troff output).</source>
          <target state="translated">これを特別な値 &lt;code&gt;none&lt;/code&gt; に設定することもできます。その場合、C &amp;lt;&amp;gt;テキストの前後に引用符は追加されません（ただし、フォントはtroff出力用に変更されます）。</target>
        </trans-unit>
        <trans-unit id="61345d4379070080abacfba137fca759d14d397c" translate="yes" xml:space="preserve">
          <source>This may also be set to the special value &lt;code&gt;none&lt;/code&gt;, in which case no quote marks are added around C&amp;lt;&amp;gt; text.</source>
          <target state="translated">これは、特別な値 &lt;code&gt;none&lt;/code&gt; に設定することもできます。その場合、C &amp;lt;&amp;gt;テキストの前後に引用符は追加されません。</target>
        </trans-unit>
        <trans-unit id="a4b045aef9d01569a459e4507e2bf0dbcc4d078d" translate="yes" xml:space="preserve">
          <source>This may be less obvious in other situations, such as &lt;code&gt;&lt;a href=&quot;../functions/grep&quot;&gt;grep()&lt;/a&gt;&lt;/code&gt;, for instance when grepping through a list of weakened references to objects that may have been destroyed already:</source>
          <target state="translated">これは、たとえば既に破壊されている可能性があるオブジェクトへの弱められた参照のリストを &lt;code&gt;&lt;a href=&quot;../functions/grep&quot;&gt;grep()&lt;/a&gt;&lt;/code&gt; 場合など、grep（）などの他の状況ではそれほど明白ではない場合があります。</target>
        </trans-unit>
        <trans-unit id="aadddde396ec6250eb650b31094a85752ac5de5f" translate="yes" xml:space="preserve">
          <source>This may be less obvious in other situations, such as &lt;code&gt;grep()&lt;/code&gt;, for instance when grepping through a list of weakened references to objects that may have been destroyed already:</source>
          <target state="translated">これは、 &lt;code&gt;grep()&lt;/code&gt; などの他の状況では、たとえば、すでに破棄されている可能性のあるオブジェクトへの弱められた参照のリストをgrepする場合など、あまり明白ではない可能性があります。</target>
        </trans-unit>
        <trans-unit id="9b6b611a35aea5e6cbfaa34dfad89779e54d15a6" translate="yes" xml:space="preserve">
          <source>This may be useful if other modules expect this module to be</source>
          <target state="translated">これは、他のモジュールがこのモジュールが</target>
        </trans-unit>
        <trans-unit id="bb1bd20d64f2ccdce3f2cc8fcef954e7c80b5a33" translate="yes" xml:space="preserve">
          <source>This may be useful since, say, types which are &lt;code&gt;typedef&lt;/code&gt; -equivalent to integers may represent OS-related handles, and one may want to work with these handles in OO-way, as in &lt;code&gt;$handle-&amp;gt;do_something()&lt;/code&gt; . Use &lt;code&gt;-o .&lt;/code&gt; if you want to handle all the &lt;code&gt;typedef&lt;/code&gt; ed types as opaque types.</source>
          <target state="translated">たとえば、 &lt;code&gt;typedef&lt;/code&gt; が整数と同等のタイプはOS関連のハンドルを表す場合があり、これらのハンドルを &lt;code&gt;$handle-&amp;gt;do_something()&lt;/code&gt; ようにOOの方法で操作したい場合があるため、これは便利です。 &lt;code&gt;-o .&lt;/code&gt; 使用します。すべての &lt;code&gt;typedef&lt;/code&gt; ed型を不透明型として処理する場合。</target>
        </trans-unit>
        <trans-unit id="bb030fdbfde4cf4510e91d4dc3720be63df3b4c9" translate="yes" xml:space="preserve">
          <source>This may be useful since, say, types which are &lt;code&gt;typedef&lt;/code&gt;-equivalent to integers may represent OS-related handles, and one may want to work with these handles in OO-way, as in &lt;code&gt;$handle-&amp;gt;do_something()&lt;/code&gt;. Use &lt;code&gt;-o .&lt;/code&gt; if you want to handle all the &lt;code&gt;typedef&lt;/code&gt;ed types as opaque types.</source>
          <target state="translated">たとえば、整数と &lt;code&gt;typedef&lt;/code&gt; と同等の型は、OS関連のハンドルを表す可能性があり、 &lt;code&gt;$handle-&amp;gt;do_something()&lt;/code&gt; ように、これらのハンドルをOOの方法で操作したい場合があるため、これは便利です。 &lt;code&gt;-o .&lt;/code&gt; 使用します。すべての &lt;code&gt;typedef&lt;/code&gt; ed型を不透明（OPAQUE）型として処理する場合。</target>
        </trans-unit>
        <trans-unit id="219180c7e012f10d4f7a83d42d7e8f2690484f40" translate="yes" xml:space="preserve">
          <source>This may break in two ways:</source>
          <target state="translated">これは2つの方法で壊れる可能性があります。</target>
        </trans-unit>
        <trans-unit id="c894611388eb78ec067fed71d079c9e5816ca7b5" translate="yes" xml:space="preserve">
          <source>This may cause problems:</source>
          <target state="translated">そのため、問題が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="5b07568535355dc79492449b01ec4948cfdc2343" translate="yes" xml:space="preserve">
          <source>This may expect the C</source>
          <target state="translated">これは、Cを期待するかもしれません。</target>
        </trans-unit>
        <trans-unit id="03f2543e21cbd92a7ee1ca79827f8f9611eefa56" translate="yes" xml:space="preserve">
          <source>This may later be extended to include other information, so be careful with pattern-matching on the results.</source>
          <target state="translated">これは後に他の情報も含めて拡張される可能性があるので、結果のパターンマッチングには注意が必要です。</target>
        </trans-unit>
        <trans-unit id="e21dadcda575196402392ef6ce13a8923c3356bf" translate="yes" xml:space="preserve">
          <source>This may lead to problems later in case the socket is accessed via the &quot;usual&quot; file-system calls using the &quot;initial&quot; name.</source>
          <target state="translated">これは、&quot;イニシャル &quot;名を使って &quot;通常の &quot;ファイルシステムコールでソケットにアクセスした場合に、後になって問題が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="6110636ef5b993e8ba32881ebb3b6bb734669e0b" translate="yes" xml:space="preserve">
          <source>This may take a couple of hours on 1GHz processor (when run the first time). And this should not be necessarily a smooth procedure. Some modules may not specify required dependencies, so one may need to repeat this procedure several times until the results stabilize.</source>
          <target state="translated">これは1GHzのプロセッサで数時間かかるかもしれません(初回実行時)。また、これは必ずしもスムーズな手順ではありません。モジュールによっては、必要な依存関係が指定されていない場合があるので、結果が安定するまでこの手順を何度か繰り返す必要があるかもしれません。</target>
        </trans-unit>
        <trans-unit id="21e8b83f4a4668675b959f09a3dddc3f913b92a2" translate="yes" xml:space="preserve">
          <source>This means integer values like 1.01E2 or even 1000E-2 are also accepted. Non-integer values result in NaN.</source>
          <target state="translated">つまり、1.01E2や1000E-2のような整数値も受け入れられます。整数値以外の値はNaNとなります。</target>
        </trans-unit>
        <trans-unit id="0df399dd4c0ebd437b2b092068503ec57072d7a4" translate="yes" xml:space="preserve">
          <source>This means somewhere a routine got a BigFloat/Lite but expected a BigInt (or vice versa) and the upgrade/downgrad path was missing. This is a bug, please report it so that we can fix it.</source>
          <target state="translated">これは、どこかのルーチンが BigFloat/Lite を取得したが、BigInt(またはその逆)を期待していたため、アップグレード/ダウングレードのパスが見つからなかったことを意味します。これはバグですので、修正できるように報告してください。</target>
        </trans-unit>
        <trans-unit id="14a58ee32b8ae7bdc388a529d03ef7e5871a7f4e" translate="yes" xml:space="preserve">
          <source>This means that &lt;code&gt;catdir()&lt;/code&gt; is called only when there are two or more arguments, as one might expect.</source>
          <target state="translated">つまり、 &lt;code&gt;catdir()&lt;/code&gt; は、2つ以上の引数がある場合にのみ呼び出されます。</target>
        </trans-unit>
        <trans-unit id="578c842326a0346c93813339f663f40295cced47" translate="yes" xml:space="preserve">
          <source>This means that &lt;code&gt;prop_invmap&lt;/code&gt; returns a 4 element list. For example,</source>
          <target state="translated">つまり、 &lt;code&gt;prop_invmap&lt;/code&gt; は4つの要素のリストを返します。例えば、</target>
        </trans-unit>
        <trans-unit id="38b6532eaf6e68ec76d8a337e1c024ccfeab03a8" translate="yes" xml:space="preserve">
          <source>This means that arithmetic involving only string values or string literals will be performed using Perl's built-in operators.</source>
          <target state="translated">これは、文字列値や文字列リテラルのみを含む演算は、Perl の組み込み演算子を使用して実行されることを意味します。</target>
        </trans-unit>
        <trans-unit id="01006b71ced49944419d9cf9ecdab2df41a8f161" translate="yes" xml:space="preserve">
          <source>This means that if a developer only needs a module for the BAR standard, they should not be forced to install libraries for FOO as well.</source>
          <target state="translated">これは、開発者がBAR標準用のモジュールだけを必要とする場合、FOO用のライブラリを強制的にインストールさせるべきではないということを意味しています。</target>
        </trans-unit>
        <trans-unit id="a939b578ee66e30d68a1cb74f87d0079e5aa7b9c" translate="yes" xml:space="preserve">
          <source>This means that it short-circuits: the right expression is evaluated only if the left expression is false. Due to its precedence, you must be careful to avoid using it as replacement for the &lt;code&gt;||&lt;/code&gt; operator. It usually works out better for flow control than in assignments:</source>
          <target state="translated">これは、短絡することを意味します。右の式は、左の式がfalseの場合にのみ評価されます。優先順位が高いため、 &lt;code&gt;||&lt;/code&gt; の代わりに使用しないように注意する必要があります。オペレーター。通常、割り当てよりもフロー制御の方がうまく機能します。</target>
        </trans-unit>
        <trans-unit id="6b325861f3ab382f335c9341221acf9229196786" translate="yes" xml:space="preserve">
          <source>This means that once RawInflate is finished &lt;code&gt;$fh&lt;/code&gt; will be left at the byte directly after the compressed data stream.</source>
          <target state="translated">これは、RawInflateが終了すると、圧縮されたデータストリームの直後のバイトに &lt;code&gt;$fh&lt;/code&gt; が残ることを意味します。</target>
        </trans-unit>
        <trans-unit id="be9154072eb271aa42c51fcc713d07f839133a3a" translate="yes" xml:space="preserve">
          <source>This means that the code points from 0 to 0x2F do not represent decimal digits; the code point 0x30 (DIGIT ZERO) represents 0; code point 0x31, (DIGIT ONE), represents 0+1-0 = 1; ... code point 0x39, (DIGIT NINE), represents 0+9-0 = 9; ... code points 0x3A through 0x65F do not represent decimal digits; 0x660 (ARABIC-INDIC DIGIT ZERO), represents 0; ... 0x07C1 (NKO DIGIT ONE), represents 0+1-0 = 1 ...</source>
          <target state="translated">つまり、0 から 0x2F までのコードポイントは 10 進数を表しておらず、コードポイント 0x30 (DIGIT ZERO)は 0 を表し、コードポイント 0x31,(DIGIT ONE)は 0+1-0=1 を表し、...コードポイント 0x39,(DIGIT NINE)は 0+9-0=9 を表し、...コードポイント 0x3A から 0x65F は 10 進数を表しておらず、0x660 (ARABIC-INDIC DIGIT ZERO)は 0 を表し、0x07C1 (NKO DIGIT ONE)は 0+1-0=1 を表していることになります。0x07C1 (NKO DIGIT ONE)は 0+1-0=1 を表します。</target>
        </trans-unit>
        <trans-unit id="53a7571a93760445ebdaebf443e990e621523e20" translate="yes" xml:space="preserve">
          <source>This means that the example in the synopsis could be rewritten more simply as:</source>
          <target state="translated">つまり、シノプシスの例をもっと簡単に書き換えることができたということです。</target>
        </trans-unit>
        <trans-unit id="a1f3ea2c657f7b7f7d19db3a4421f880ee25efe3" translate="yes" xml:space="preserve">
          <source>This means that the space in the middle of the visible link text must not be broken across lines. In other words, it's the same as this:</source>
          <target state="translated">これは、見えるリンクテキストの真ん中のスペースが行をまたいで切れてはいけないということです。つまり、これと同じです。</target>
        </trans-unit>
        <trans-unit id="64c7de2c5fffc581047d71755a716f6efa16c586" translate="yes" xml:space="preserve">
          <source>This means that the words in</source>
          <target state="translated">の言葉が出てくるということです。</target>
        </trans-unit>
        <trans-unit id="f1569c4431f8fc6543e767edacb7a758da5a6960" translate="yes" xml:space="preserve">
          <source>This means that when &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict 'vars'&lt;/code&gt; is in effect, &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; lets you use a package variable without qualifying it with the package name, but only within the lexical scope of the &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; declaration. This applies immediately--even within the same statement.</source>
          <target state="translated">ときにこの手段 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict 'vars'&lt;/code&gt; 効果であるが、 &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; あなただけの字句範囲内で、パッケージ名とそれを修飾せずにパッケージ変数を使用することができます &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; 宣言。これは、同じステートメント内でもすぐに適用されます。</target>
        </trans-unit>
        <trans-unit id="f586cceadb03a1ba8357cc824f5f5d4e8015da6f" translate="yes" xml:space="preserve">
          <source>This means that when &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; strict 'vars'&lt;/code&gt; is in effect, &lt;code&gt;&lt;a href=&quot;our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; lets you use a package variable without qualifying it with the package name, but only within the lexical scope of the &lt;code&gt;&lt;a href=&quot;our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; declaration. This applies immediately--even within the same statement.</source>
          <target state="translated">ときにこの手段 &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; strict 'vars'&lt;/code&gt; 効果であるが、 &lt;code&gt;&lt;a href=&quot;our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; あなただけの字句範囲内で、パッケージ名とそれを修飾せずにパッケージ変数を使用することができます &lt;code&gt;&lt;a href=&quot;our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; 宣言。これは、同じステートメント内でもすぐに適用されます。</target>
        </trans-unit>
        <trans-unit id="284eb118660ae660f27c03fcc27710a4366c9a03" translate="yes" xml:space="preserve">
          <source>This means that when &lt;code&gt;use strict 'vars'&lt;/code&gt; is in effect, &lt;a href=&quot;#our-VARLIST&quot;&gt;&lt;code&gt;our&lt;/code&gt;&lt;/a&gt; lets you use a package variable without qualifying it with the package name, but only within the lexical scope of the &lt;a href=&quot;#our-VARLIST&quot;&gt;&lt;code&gt;our&lt;/code&gt;&lt;/a&gt; declaration. This applies immediately--even within the same statement.</source>
          <target state="translated">とき、この意味 &lt;code&gt;use strict 'vars'&lt;/code&gt; 効果であるが、&lt;a href=&quot;#our-VARLIST&quot;&gt; &lt;code&gt;our&lt;/code&gt; &lt;/a&gt;あなただけの字句範囲内で、パッケージ名とそれを修飾せずにパッケージ変数を使用することができます&lt;a href=&quot;#our-VARLIST&quot;&gt; &lt;code&gt;our&lt;/code&gt; &lt;/a&gt;宣言。これは、同じステートメント内であっても、すぐに適用されます。</target>
        </trans-unit>
        <trans-unit id="b81785772e2cebea14c023690b3e80231bc941d4" translate="yes" xml:space="preserve">
          <source>This means that you can embed Perl code in your typemap (C) code using constructs such as &lt;code&gt;${ perl code that evaluates to &lt;a href=&quot;functions/scalar&quot;&gt;scalar&lt;/a&gt; reference here }&lt;/code&gt; . A common use case is to generate error messages that refer to the true function name even when using the ALIAS XS feature:</source>
          <target state="translated">つまり、 &lt;code&gt;${ perl code that evaluates to &lt;a href=&quot;functions/scalar&quot;&gt;scalar&lt;/a&gt; reference here }&lt;/code&gt; &lt;a href=&quot;functions/scalar&quot;&gt;スカラー&lt;/a&gt;参照に評価される$ {perlコード}などの構成を使用して、タイプマップ（C）コードにPerlコードを埋め込むことができます。一般的な使用例は、ALIAS XS機能を使用している場合でも、真の関数名を参照するエラーメッセージを生成することです。</target>
        </trans-unit>
        <trans-unit id="6159f11ee36a959a1c616223b9451cb1accb09f1" translate="yes" xml:space="preserve">
          <source>This means that you can embed Perl code in your typemap (C) code using constructs such as &lt;code&gt;${ perl code that evaluates to scalar reference here }&lt;/code&gt;. A common use case is to generate error messages that refer to the true function name even when using the ALIAS XS feature:</source>
          <target state="translated">これは、 &lt;code&gt;${ perl code that evaluates to scalar reference here }&lt;/code&gt; などの構造を使用して、タイプマップ（C）コードにPerlコードを埋め込むことができることを意味します。一般的な使用例は、ALIAS XS機能を使用している場合でも、実際の関数名を参照するエラーメッセージを生成することです。</target>
        </trans-unit>
        <trans-unit id="fae397e13ee74537dfbe00fc3647b75575531d38" translate="yes" xml:space="preserve">
          <source>This means that you can pass back or save away references to lexical variables, whereas to return a pointer to a C auto is a grave error. It also gives us a way to simulate C's function statics. Here's a mechanism for giving a function private variables with both lexical scoping and a static lifetime. If you do want to create something like C's static variables, just enclose the whole function in an extra block, and put the static variable outside the function but in the block.</source>
          <target state="translated">これは、語彙変数への参照をパスバックしたり保存したりすることができることを意味します。また、Cの関数の静的な挙動をシミュレートする方法も提供してくれます。これは、辞書的なスコープと静的な寿命の両方を持つ関数にプライベート変数を与えるメカニズムです。C の静的変数のようなものを作りたい場合は、関数全体を余分なブロックで囲み、静的変数を関数の外に置いてブロックの中に入れてください。</target>
        </trans-unit>
        <trans-unit id="ba95400be83f3e213b12cd9a0fd5821a87880672" translate="yes" xml:space="preserve">
          <source>This means that your locale settings had &lt;code&gt;LC_ALL&lt;/code&gt; set to &quot;En_US&quot; and LANG exists but has no value. Perl tried to believe you but could not. Instead, Perl gave up and fell back to the &quot;C&quot; locale, the default locale that is supposed to work no matter what. (On Windows, it first tries falling back to the system default locale.) This usually means your locale settings were wrong, they mention locales your system has never heard of, or the locale installation in your system has problems (for example, some system files are broken or missing). There are quick and temporary fixes to these problems, as well as more thorough and lasting fixes.</source>
          <target state="translated">これは、ロケール設定で &lt;code&gt;LC_ALL&lt;/code&gt; が &quot;En_US&quot;に設定されており、LANGは存在するが値がないことを意味します。 Perlはあなたを信じようとしたが信じられなかった。代わりに、Perlはあきらめて、 &quot;C&quot;ロケールにフォールバックしました。Cロケールは、デフォルトのロケールであり、何に関係なく機能するはずです。 （Windowsでは、最初にシステムのデフォルトロケールにフォールバックしようとします。）これは通常、ロケール設定が間違っていたか、システムが認識していないロケールに言及しているか、システムへのロケールのインストールに問題があります（たとえば、一部のシステム）ファイルが壊れているか欠落しています）。これらの問題に対する迅速かつ一時的な修正と、より徹底的で永続的な修正があります。</target>
        </trans-unit>
        <trans-unit id="935bdf240cb07ad1d6c61c4ce332cb8c8c8bea3f" translate="yes" xml:space="preserve">
          <source>This means the hook can be inherited like any other method, and that</source>
          <target state="translated">これはフックが他のメソッドと同じように継承できることを意味します。</target>
        </trans-unit>
        <trans-unit id="2829080b86855df25144fdad5ccaac91d3e22b76" translate="yes" xml:space="preserve">
          <source>This means the same thing as the above &quot;=begin html&quot; ... &quot;=end html&quot; region.</source>
          <target state="translated">これは、上記の&quot;=begin html&quot; ...と同じ意味です。&quot;=end html &quot;領域。</target>
        </trans-unit>
        <trans-unit id="44c698371a2bc8c8f85a78f7834202f417a26f2b" translate="yes" xml:space="preserve">
          <source>This means you would have to be very careful of the load order:</source>
          <target state="translated">つまり、負荷のかかる順番には細心の注意を払わなければならないということです。</target>
        </trans-unit>
        <trans-unit id="3337abd3921fdbd49cbcb7fb32155c6404621f35" translate="yes" xml:space="preserve">
          <source>This means your tests won't fail on MacOS. This means fewer emails from MacPerl users telling you about failing tests that you know will never work. You've got to be careful with skip tests. These are for tests which don't work and</source>
          <target state="translated">これは、あなたのテストが MacOS 上で失敗しないことを意味します。これは、MacPerl のユーザから、絶対にうまくいかないとわかっているテストの失敗を知らせるメールが減ることを意味します。スキップテストには注意が必要です。これは動作しないテストや</target>
        </trans-unit>
        <trans-unit id="cff2ec52af1291aa43e3a1c0cb12356c3eeef13f" translate="yes" xml:space="preserve">
          <source>This member is of type &lt;code&gt;Perl_cpeep_t&lt;/code&gt; , which expands to &lt;code&gt;void
(*Perl_cpeep_t)(aTHX_ OP *o, OP *oldop)&lt;/code&gt; . If it is set, this function will be called from &lt;code&gt;Perl_rpeep&lt;/code&gt; when ops of this type are encountered by the peephole optimizer.</source>
          <target state="translated">このメンバーのタイプは &lt;code&gt;Perl_cpeep_t&lt;/code&gt; で、これは &lt;code&gt;void (*Perl_cpeep_t)(aTHX_ OP *o, OP *oldop)&lt;/code&gt; ます。設定されている場合、このタイプのオペレーションが &lt;code&gt;Perl_rpeep&lt;/code&gt; に遭遇すると、この関数はPerl_rpeepから呼び出されます。</target>
        </trans-unit>
        <trans-unit id="db36691e48e2c67d2ea0f23d3b7c02ae12b88783" translate="yes" xml:space="preserve">
          <source>This member is of type &lt;code&gt;Perl_cpeep_t&lt;/code&gt;, which expands to &lt;code&gt;void (*Perl_cpeep_t)(aTHX_ OP *o, OP *oldop)&lt;/code&gt;. If it is set, this function will be called from &lt;code&gt;Perl_rpeep&lt;/code&gt; when ops of this type are encountered by the peephole optimizer.</source>
          <target state="translated">このメンバーのタイプは &lt;code&gt;Perl_cpeep_t&lt;/code&gt; で、 &lt;code&gt;void (*Perl_cpeep_t)(aTHX_ OP *o, OP *oldop)&lt;/code&gt; ます。設定されている場合、この関数は、このタイプのopsがのぞき穴オプティマイザーによって検出されたときに &lt;code&gt;Perl_rpeep&lt;/code&gt; から呼び出されます。</target>
        </trans-unit>
        <trans-unit id="7a717feb83162a52d0b22449b1b2a628cde73cab" translate="yes" xml:space="preserve">
          <source>This merge strategy will try to pick the appropriate predefined strategy based on what element type. Array refs will try to use the &lt;code&gt;set_addition&lt;/code&gt; strategy, Hash refs will try to use the &lt;code&gt;uniq_map&lt;/code&gt; strategy, and everything else will try the &lt;code&gt;identical&lt;/code&gt; strategy.</source>
          <target state="translated">このマージ戦略は、どの要素タイプに基づいて適切な事前定義された戦略を選択しようとします。配列参照は &lt;code&gt;set_addition&lt;/code&gt; 戦略を使用しようとし、ハッシュ参照は &lt;code&gt;uniq_map&lt;/code&gt; 戦略を使用しようとし、他のすべては &lt;code&gt;identical&lt;/code&gt; 戦略を使用しようとします。</target>
        </trans-unit>
        <trans-unit id="4f15c1dce331d08d1c4dfe4e281cc0a0a4b34f0a" translate="yes" xml:space="preserve">
          <source>This message can be seen quite often with DB_File on systems with &quot;hard&quot; dynamic linking, like &lt;code&gt;AIX&lt;/code&gt; and &lt;code&gt;OS/2&lt;/code&gt; . It is a bug of &lt;code&gt;Berkeley DB&lt;/code&gt; which is left unnoticed if &lt;code&gt;DB&lt;/code&gt; uses</source>
          <target state="translated">このメッセージは、 &lt;code&gt;AIX&lt;/code&gt; や &lt;code&gt;OS/2&lt;/code&gt; などの「ハード」ダイナミックリンクを備えたシステムのDB_Fileで頻繁に表示されます。これは、 &lt;code&gt;DB&lt;/code&gt; が使用しても気付かれないままになっている &lt;code&gt;Berkeley DB&lt;/code&gt; のバグです。</target>
        </trans-unit>
        <trans-unit id="dd9cc0488fe9dc37730174b23cf738f2f87b5cde" translate="yes" xml:space="preserve">
          <source>This message can be seen quite often with DB_File on systems with &quot;hard&quot; dynamic linking, like &lt;code&gt;AIX&lt;/code&gt; and &lt;code&gt;OS/2&lt;/code&gt;. It is a bug of &lt;code&gt;Berkeley DB&lt;/code&gt; which is left unnoticed if &lt;code&gt;DB&lt;/code&gt; uses</source>
          <target state="translated">このメッセージは、 &lt;code&gt;AIX&lt;/code&gt; や &lt;code&gt;OS/2&lt;/code&gt; などの「ハード」ダイナミックリンクを備えたシステムのDB_Fileで頻繁に見られます。これは &lt;code&gt;Berkeley DB&lt;/code&gt; バグであり、 &lt;code&gt;DB&lt;/code&gt; が使用する場合は気付かれません。</target>
        </trans-unit>
        <trans-unit id="ee2510b2403247fa109d55b63b7f2961e33ab09a" translate="yes" xml:space="preserve">
          <source>This message indicates a bug either in the Perl core or in XS code. Such code was trying to find out if a character, allegedly stored internally encoded as UTF-8, was of a given type, such as being punctuation or a digit. But the character was not encoded in legal UTF-8. The &lt;code&gt;%s&lt;/code&gt; is replaced by a string that can be used by knowledgeable people to determine what the type being checked against was.</source>
          <target state="translated">このメッセージは、PerlコアまたはXSコードのいずれかにバグがあることを示しています。このようなコードは、UTF-8として内部的にエンコードされたとされる文字が、句読点や数字などの特定のタイプであるかどうかを調べようとしていました。ただし、文字は正規のUTF-8でエンコードされていません。 &lt;code&gt;%s&lt;/code&gt; が照合されているタイプが何であったかを決定するために知識のある人々によって使用できる文字列に置き換えられます。</target>
        </trans-unit>
        <trans-unit id="23eb60fb126cb22151d73766a234b7a419df8dc7" translate="yes" xml:space="preserve">
          <source>This message is output once each time a bad locale is switched into within the scope of &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; , or on the first possibly-affected operation if the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; inherits a bad one. It is not raised for any operations from the &lt;a href=&quot;posix&quot;&gt;POSIX&lt;/a&gt; module.</source>
          <target state="translated">このメッセージは、不正なロケールが &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; のスコープ内に切り替わるたびに1回出力されます。または、 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; が不正なロケールを継承した場合に影響を受ける可能性のある最初の操作時に出力されます。&lt;a href=&quot;posix&quot;&gt;POSIX&lt;/a&gt;モジュールからの操作では発生しません。</target>
        </trans-unit>
        <trans-unit id="53334537f396c17eb5e0a1eb97007585d5a6b393" translate="yes" xml:space="preserve">
          <source>This message is output once each time a bad locale is switched into within the scope of &lt;code&gt;use locale&lt;/code&gt;, or on the first possibly-affected operation if the &lt;code&gt;use locale&lt;/code&gt; inherits a bad one. It is not raised for any operations from the &lt;a href=&quot;posix&quot;&gt;POSIX&lt;/a&gt; module.</source>
          <target state="translated">このメッセージは、不良ロケールが &lt;code&gt;use locale&lt;/code&gt; のスコープ内に切り替えられるたびに1回出力されます。または、 &lt;code&gt;use locale&lt;/code&gt; が不良ロケールを継承している場合は、影響を受ける可能性のある最初の操作で出力されます。&lt;a href=&quot;posix&quot;&gt;POSIX&lt;/a&gt;モジュールからの操作では発生しません。</target>
        </trans-unit>
        <trans-unit id="9f1e56024310d1748ef48e25b309befac60c3c39" translate="yes" xml:space="preserve">
          <source>This message is suppressed (unless it has been made fatal) if it is immaterial to the results of the match if the code point is Unicode or not. For example, the property &lt;code&gt;\p{ASCII_Hex_Digit}&lt;/code&gt; only can match the 22 characters &lt;code&gt;[0-9A-Fa-f]&lt;/code&gt; , so obviously all other code points, Unicode or not, won't match it. (And &lt;code&gt;\P{ASCII_Hex_Digit}&lt;/code&gt; will match every code point except these 22.)</source>
          <target state="translated">コードポイントがUnicodeであるかどうかに関係なく、一致の結果に重要でない場合、このメッセージは（致命的にならない限り）抑制されます。たとえば、プロパティ &lt;code&gt;\p{ASCII_Hex_Digit}&lt;/code&gt; は22文字 &lt;code&gt;[0-9A-Fa-f]&lt;/code&gt; にのみ一致するため、他のすべてのコードポイント（Unicodeかどうかに関係なく）は一致しません。（そして、 &lt;code&gt;\P{ASCII_Hex_Digit}&lt;/code&gt; は、これら22を除くすべてのコードポイントに一致します。）</target>
        </trans-unit>
        <trans-unit id="21e762ad2efe9f1fd68a6114f57d56c551081580" translate="yes" xml:space="preserve">
          <source>This message is suppressed (unless it has been made fatal) if it is immaterial to the results of the match if the code point is Unicode or not. For example, the property &lt;code&gt;\p{ASCII_Hex_Digit}&lt;/code&gt; only can match the 22 characters &lt;code&gt;[0-9A-Fa-f]&lt;/code&gt;, so obviously all other code points, Unicode or not, won't match it. (And &lt;code&gt;\P{ASCII_Hex_Digit}&lt;/code&gt; will match every code point except these 22.)</source>
          <target state="translated">コードポイントがUnicodeであるかどうかにかかわらず、一致の結果に重要でない場合、このメッセージは抑制されます（致命的でない限り）。たとえば、プロパティ &lt;code&gt;\p{ASCII_Hex_Digit}&lt;/code&gt; は22文字 &lt;code&gt;[0-9A-Fa-f]&lt;/code&gt; にしか一致しないため、Unicodeであるかどうかに関係なく、他のすべてのコードポイントは明らかに一致しません。（そして、 &lt;code&gt;\P{ASCII_Hex_Digit}&lt;/code&gt; は、これらの22を除くすべてのコードポイントに一致します。）</target>
        </trans-unit>
        <trans-unit id="7bb0745c94a8675163fb7cf1b6b4c0dfe9dfc2a4" translate="yes" xml:space="preserve">
          <source>This method (by having it return the name of a language-tag that has an existing language class) can be used for making sure that &lt;code&gt;get_handle&lt;/code&gt; will always manage to construct a language handle (assuming your language classes are in an appropriate @INC directory). Or you can use the next method:</source>
          <target state="translated">このメソッド（既存の言語クラスを持つ言語タグの名前を返すようにする）を使用して、 &lt;code&gt;get_handle&lt;/code&gt; が常に言語ハンドルを構築できるようにすることができます（言語クラスが適切な@INCディレクトリにあると想定） 。または、次の方法を使用できます。</target>
        </trans-unit>
        <trans-unit id="43b19e8a9632f033ee0217cf824970a6266507f4" translate="yes" xml:space="preserve">
          <source>This method &lt;b&gt;only&lt;/b&gt; recurses into hashes that are referenced by another hash. Thus a Hash of Hashes (HoH) will all be restricted, but a Hash of Arrays of Hashes (HoAoH) will only have the top hash restricted.</source>
          <target state="translated">このメソッドは、別のハッシュによって参照されるハッシュに&lt;b&gt;のみ&lt;/b&gt;再帰します。したがって、ハッシュのハッシュ（HoH）はすべて制限されますが、ハッシュの配列のハッシュ（HoAoH）は制限された上位のハッシュのみを持ちます。</target>
        </trans-unit>
        <trans-unit id="2a10494b333351ed900869ddfdd97f2e586a9270" translate="yes" xml:space="preserve">
          <source>This method adds all the requirements in the given CPAN::Meta::Requirements object to the requirements object on which it was called. If there are any conflicts, an exception is thrown.</source>
          <target state="translated">このメソッドは、指定された CPAN::Meta::Requirements オブジェクト内のすべての要件を、呼び出された要件オブジェクトに追加します。競合がある場合は、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="a9adaf0f299fbd1e9f3a618dc3103eaac097e023" translate="yes" xml:space="preserve">
          <source>This method allows you declare all subsequent tests as TODO tests, up until the &lt;code&gt;todo_end&lt;/code&gt; method has been called.</source>
          <target state="translated">このメソッドを使用すると、 &lt;code&gt;todo_end&lt;/code&gt; メソッドが呼び出されるまで、後続のすべてのテストをTODOテストとして宣言できます。</target>
        </trans-unit>
        <trans-unit id="730814a3d72347a8011b0b6b58b63dc1cbc1cb75" translate="yes" xml:space="preserve">
          <source>This method always returns &lt;code&gt;&lt;a href=&quot;../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; when compressing.</source>
          <target state="translated">このメソッドは、圧縮時に常に &lt;code&gt;&lt;a href=&quot;../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="335f17051fdb64efb794e2ddfe5ed9008c1e1a8a" translate="yes" xml:space="preserve">
          <source>This method always returns &lt;code&gt;undef&lt;/code&gt; when compressing.</source>
          <target state="translated">このメソッドは、圧縮時に常に &lt;code&gt;undef&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="6afef23ef81e88b5f94163ca10a11464e31ea48f" translate="yes" xml:space="preserve">
          <source>This method appends the given text or parse-tree to the current parse-tree. If the last item on the parse-tree is text and the argument is also text, then the text is appended to the last item (not added as a separate string). Otherwise the argument is added as a new string or parse-tree</source>
          <target state="translated">このメソッドは、与えられたテキストまたはパースツリーを現在のパースツリーに追加します。パースツリーの最後の項目がテキストで、引数もテキストの場合、テキストは最後の項目に追加されます (別の文字列としては追加されません)。それ以外の場合は、引数は新しい文字列かパースツリーとして追加されます。</target>
        </trans-unit>
        <trans-unit id="ea9b54b0560b3ed55c0cd396158f6152d9f5e42b" translate="yes" xml:space="preserve">
          <source>This method behaves like &lt;code&gt;accept_targets_as_text&lt;/code&gt; , but also marks the region as one whose content should be emitted literally, without HTML entity escaping or wrapping in a &lt;code&gt;div&lt;/code&gt; element.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;accept_targets_as_text&lt;/code&gt; のように動作しますが、HTMLエンティティがエスケープされたり、 &lt;code&gt;div&lt;/code&gt; 要素でラップされたりせずに、コンテンツが文字どおりに出力される領域として領域をマークします。</target>
        </trans-unit>
        <trans-unit id="71bb1e0efdfc6beccfb10261573a5eab7a2b454b" translate="yes" xml:space="preserve">
          <source>This method behaves like &lt;code&gt;accept_targets_as_text&lt;/code&gt;, but also marks the region as one whose content should be emitted literally, without HTML entity escaping or wrapping in a &lt;code&gt;div&lt;/code&gt; element.</source>
          <target state="translated">このメソッドは &lt;code&gt;accept_targets_as_text&lt;/code&gt; のように動作しますが、HTMLエンティティをエスケープしたり &lt;code&gt;div&lt;/code&gt; 要素でラップしたりせずに、コンテンツを文字通りに出力する必要があるリージョンとしてマークします。</target>
        </trans-unit>
        <trans-unit id="366bdf6f4cd4331574bef09ad73e8fc1d9c85442" translate="yes" xml:space="preserve">
          <source>This method can also be called as a</source>
          <target state="translated">このメソッドは</target>
        </trans-unit>
        <trans-unit id="715fe7c265d92fe58819e384722c797c228ac231" translate="yes" xml:space="preserve">
          <source>This method can be used to (re)parse a (new) hyperlink, i.e. the contents of a &lt;code&gt;L&amp;lt;...&amp;gt;&lt;/code&gt; sequence. The result is stored in the current object. Warnings are stored in the &lt;b&gt;warnings&lt;/b&gt; property. E.g. sections like &lt;code&gt;L&amp;lt;open(2)&amp;gt;&lt;/code&gt; are deprecated, as they do not point to Perl documents. &lt;code&gt;L&amp;lt;DBI::foo(3p)&amp;gt;&lt;/code&gt; is wrong as well, the manpage section can simply be dropped.</source>
          <target state="translated">このメソッドは、（新しい）ハイパーリンク（つまり、 &lt;code&gt;L&amp;lt;...&amp;gt;&lt;/code&gt; シーケンスの内容）を（再）解析するために使用できます。結果は現在のオブジェクトに保存されます。警告は、&lt;b&gt;warnings&lt;/b&gt;プロパティに格納されます。たとえば、 &lt;code&gt;L&amp;lt;open(2)&amp;gt;&lt;/code&gt; ようなセクションは、Perlドキュメントを指していないため、非推奨です。 &lt;code&gt;L&amp;lt;DBI::foo(3p)&amp;gt;&lt;/code&gt; も間違っており、マンページセクションを単に削除できます。</target>
        </trans-unit>
        <trans-unit id="f1f35fb67080240d23f2eac011ae3670c8591965" translate="yes" xml:space="preserve">
          <source>This method can be used to attempt to recover good data from a compressed data stream that is partially corrupt. It scans &lt;code&gt;$input&lt;/code&gt; until it reaches either a</source>
          <target state="translated">この方法を使用すると、部分的に破損している圧縮データストリームから適切なデータを回復できます。次のいずれかに到達 &lt;code&gt;$input&lt;/code&gt; まで$ inputをスキャンします</target>
        </trans-unit>
        <trans-unit id="90ddd0ac6657449db229f14a03b758f7e485db52" translate="yes" xml:space="preserve">
          <source>This method can be used to wait for a transfer to complete between a passive server and a non-passive server. The method should be called on the passive server with the &lt;code&gt;Net::FTP&lt;/code&gt; object for the non-passive server passed as an argument.</source>
          <target state="translated">このメソッドは、パッシブサーバーと非パッシブサーバーの間で転送が完了するのを待つために使用できます。メソッドは、パッシブサーバー上で、非パッシブサーバーの &lt;code&gt;Net::FTP&lt;/code&gt; オブジェクトを引数として渡して呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="ef82cc525f992d173e6595484cbecf34f240de62" translate="yes" xml:space="preserve">
          <source>This method checks for the existence of a specific key/value pair. If the pair exists, the cursor is left pointing to the pair and the method returns 0. Otherwise the method returns a non-zero value.</source>
          <target state="translated">このメソッドは、特定のキー/値のペアが存在するかどうかをチェックします。ペアが存在する場合、カーソルはペアを指したままになり、メソッドは 0 を返します。そうでない場合、このメソッドは 0 以外の値を返します。</target>
        </trans-unit>
        <trans-unit id="96b247f2b62f33779c178ee950a71199ee05a065" translate="yes" xml:space="preserve">
          <source>This method checks that the socket domain is &lt;code&gt;PF_INET&lt;/code&gt; and will throw an exception if it isn't.</source>
          <target state="translated">このメソッドは、ソケットドメインが &lt;code&gt;PF_INET&lt;/code&gt; であることを確認し、そうでない場合は例外をスローします。</target>
        </trans-unit>
        <trans-unit id="97fce6b5cdefe17191f11f3d49b65755477991b9" translate="yes" xml:space="preserve">
          <source>This method converts the key/value pairs from a data hash or array reference into a &lt;code&gt;x-www-form-urlencoded&lt;/code&gt; string. The keys and values from the data reference will be UTF-8 encoded and escaped per RFC 3986. If a value is an array reference, the key will be repeated with each of the values of the array reference. If data is provided as a hash reference, the key/value pairs in the resulting string will be sorted by key and value for consistent ordering.</source>
          <target state="translated">このメソッドは、キーと値のペアをデータハッシュまたは配列参照から &lt;code&gt;x-www-form-urlencoded&lt;/code&gt; 文字列に変換します。データ参照からのキーと値は、RFC 3986に従ってUTF-8でエンコードされ、エスケープされます。値が配列参照の場合、キーは配列参照の各値で繰り返されます。データがハッシュ参照として提供されている場合、結果の文字列のキーと値のペアは、一貫した順序付けのためにキーと値で並べ替えられます。</target>
        </trans-unit>
        <trans-unit id="082e97019fd385ec77aeb826bdad258d6d406921" translate="yes" xml:space="preserve">
          <source>This method deletes a specific key/value pair. It returns 0 if they exist and have been deleted successfully. Otherwise the method returns a non-zero value.</source>
          <target state="translated">このメソッドは、特定のキー/値のペアを削除します。それらが存在し、正常に削除された場合は 0 を返します。それ以外の場合は、0 以外の値を返します。</target>
        </trans-unit>
        <trans-unit id="8613b5263cdbc40f7a909322a6d93c9325aff610" translate="yes" xml:space="preserve">
          <source>This method deletes the symbol whose name is given as the first argument. The optional second argument specifies the symbol table, as described above under &lt;code&gt;setsym&lt;/code&gt;. It returns TRUE if the symbol was successfully deleted, and FALSE if it was not.</source>
          <target state="translated">このメソッドは、名前が最初の引数として指定されているシンボルを削除します。オプションの2番目の引数は、上記の &lt;code&gt;setsym&lt;/code&gt; で説明したように、シンボルテーブルを指定します。シンボルが正常に削除された場合はTRUEを返し、正常に削除されなかった場合はFALSEを返します。</target>
        </trans-unit>
        <trans-unit id="f513febb40f0a4c26460c04fb3a509ae4b426b01" translate="yes" xml:space="preserve">
          <source>This method deserializes the given string of JSON and the result. If the source was UTF-8 encoded, the string must be decoded before calling &lt;code&gt;load_json_string&lt;/code&gt; .</source>
          <target state="translated">このメソッドは、JSONの指定された文字列と結果をデシリアライズします。ソースがUTF-8でエンコードされている場合、文字列は &lt;code&gt;load_json_string&lt;/code&gt; を呼び出す前にデコードする必要があります。</target>
        </trans-unit>
        <trans-unit id="f5a69f9661072b68742ae779de82b9a6939ce07d" translate="yes" xml:space="preserve">
          <source>This method deserializes the given string of JSON and the result. If the source was UTF-8 encoded, the string must be decoded before calling &lt;code&gt;load_json_string&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、指定されたJSONの文字列と結果を逆シリアル化します。ソースがUTF-8でエンコードされている場合は、 &lt;code&gt;load_json_string&lt;/code&gt; を呼び出す前に文字列をデコードする必要があります。</target>
        </trans-unit>
        <trans-unit id="f96e67c98ce1447f296a5e844322e09f6dd910a8" translate="yes" xml:space="preserve">
          <source>This method deserializes the given string of YAML and returns the first document in it. (CPAN metadata files should always have only one document.) If the source was UTF-8 encoded, the string must be decoded before calling &lt;code&gt;load_yaml_string&lt;/code&gt; .</source>
          <target state="translated">このメソッドは、YAMLの指定された文字列を逆シリアル化し、その中の最初のドキュメントを返します。（CPANメタデータファイルには常に1つのドキュメントのみが含まれている必要があります。）ソースがUTF-8エンコードされている場合、文字列は &lt;code&gt;load_yaml_string&lt;/code&gt; を呼び出す前にデコードする必要があります。</target>
        </trans-unit>
        <trans-unit id="81765ac41247c95703028ea8dc4ea721f8d8a884" translate="yes" xml:space="preserve">
          <source>This method deserializes the given string of YAML and returns the first document in it. (CPAN metadata files should always have only one document.) If the source was UTF-8 encoded, the string must be decoded before calling &lt;code&gt;load_yaml_string&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、指定されたYAMLの文字列を逆シリアル化し、その中の最初のドキュメントを返します。（CPANメタデータファイルには常に1つのドキュメントのみが含まれている必要があります。）ソースがUTF-8でエンコードされている場合は、 &lt;code&gt;load_yaml_string&lt;/code&gt; を呼び出す前に文字列をデコードする必要があります。</target>
        </trans-unit>
        <trans-unit id="34a514b4f19b9ac86f842d6404bf8e89dd74c0e2" translate="yes" xml:space="preserve">
          <source>This method does</source>
          <target state="translated">この方法は</target>
        </trans-unit>
        <trans-unit id="54d18cd2ca68c9792cf6431fafe4da3a6cbdd8dc" translate="yes" xml:space="preserve">
          <source>This method does not implement a complete YAML dumper, being limited to dump a hash with values which are strings, undef's or nested hashes and arrays of strings. No quoting/escaping is done.</source>
          <target state="translated">このメソッドは完全なYAMLダンパを実装しておらず、文字列、undef、入れ子になったハッシュ、文字列の配列の値を持つハッシュをダンプすることに制限されています。クォート/エスケープは行われません。</target>
        </trans-unit>
        <trans-unit id="574dd9dda7a4db9253b5e2f725c2efb60e57dfca" translate="yes" xml:space="preserve">
          <source>This method executes a &lt;code&gt;POST&lt;/code&gt; request and sends the key/value pairs from a form data hash or array reference to the given URL with a &lt;code&gt;content-type&lt;/code&gt; of &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt;. If data is provided as an array reference, the order is preserved; if provided as a hash reference, the terms are sorted on key and value for consistency. See documentation for the &lt;code&gt;www_form_urlencode&lt;/code&gt; method for details on the encoding.</source>
          <target state="translated">このメソッドは &lt;code&gt;POST&lt;/code&gt; リクエストを実行し、フォームデータハッシュまたは配列参照から、 &lt;code&gt;content-type&lt;/code&gt; が &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; の指定されたURLにキーと値のペアを送信します。データが配列参照として提供されている場合、順序は保持されます。ハッシュ参照として提供される場合、用語は一貫性を保つためにキーと値でソートされます。エンコードの詳細については、 &lt;code&gt;www_form_urlencode&lt;/code&gt; メソッドのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="bf3b86793c28703b24d0cd86f4cd0ebea05c47fa" translate="yes" xml:space="preserve">
          <source>This method fully supports the use of the variable &lt;code&gt;$/&lt;/code&gt; (or &lt;code&gt;$INPUT_RECORD_SEPARATOR&lt;/code&gt; or &lt;code&gt;$RS&lt;/code&gt; when &lt;code&gt;English&lt;/code&gt; is in use) to determine what constitutes an end of line. Paragraph mode, record mode and file slurp mode are all supported.</source>
          <target state="translated">この方法は、完全に変数の使用をサポート &lt;code&gt;$/&lt;/code&gt; （または &lt;code&gt;$INPUT_RECORD_SEPARATOR&lt;/code&gt; または &lt;code&gt;$RS&lt;/code&gt; &lt;code&gt;English&lt;/code&gt; 使用されている）行の終わりを構成するものを決定します。段落モード、記録モード、ファイル丸呑みモードがすべてサポートされています。</target>
        </trans-unit>
        <trans-unit id="7abd31a42f5dc198423e7bfa2a6a7d4410aa53a3" translate="yes" xml:space="preserve">
          <source>This method gets faster the more sparse the bit vector is. (Courtesy of Tim Bunce and Winfried Koenig.)</source>
          <target state="translated">この方法は,ビットベクトルが疎なほど速くなります.(Tim Bunce と Winfried Koenig の提供)</target>
        </trans-unit>
        <trans-unit id="5106fbdd40086fe1994d026f8235d7c19445b51f" translate="yes" xml:space="preserve">
          <source>This method gets triggered during a keys() or each() iteration. It has a second argument which is the last key that had been accessed. This is useful if you're carrying about ordering or calling the iterator from more than one sequence, or not really storing things in a hash anywhere.</source>
          <target state="translated">このメソッドは、keys()または each()の繰り返しの間にトリガされます。これには、最後にアクセスされたキーを指定する第二引数があります。これは、複数のシーケンスから順序付けやイテレータを呼び出している場合や、ハッシュをどこかに保存していない場合に便利です。</target>
        </trans-unit>
        <trans-unit id="c3ff1820eacb04c426d39d93923ba67e3009b83a" translate="yes" xml:space="preserve">
          <source>This method gets triggered during a keys(), values(), or each() iteration. It has a second argument which is the last key that had been accessed. This is useful if you're caring about ordering or calling the iterator from more than one sequence, or not really storing things in a hash anywhere.</source>
          <target state="translated">このメソッドは、keys()、values()、または each()の繰り返しの間にトリガされます。このメソッドには、最後にアクセスされたキーを表す第二引数があります。これは、順序付けや複数のシーケンスからのイテレータの呼び出しを気にしている場合や、ハッシュをどこかに保存したくない場合に便利です。</target>
        </trans-unit>
        <trans-unit id="2b32b03e834069c38c85e8165c3d6300a8ef2db8" translate="yes" xml:space="preserve">
          <source>This method gets/sets the children of the top node in the parse-tree. If no arguments are given, it returns the list (array) of children (each of which should be either a string or a &lt;b&gt;Pod::InteriorSequence&lt;/b&gt;. Otherwise, if arguments are given, they are treated as the new list of children for the top node.</source>
          <target state="translated">このメソッドは、解析ツリーの最上位ノードの子を取得/設定します。引数が指定されていない場合、子のリスト（配列）を返します（それぞれが文字列または&lt;b&gt;Pod :: InteriorSequenceの&lt;/b&gt;いずれかである必要があります。それ以外の場合、引数が指定されている場合、それらは上位の子の新しいリストとして扱われます。ノード。</target>
        </trans-unit>
        <trans-unit id="b46a6ad296dd61f630d70737a71545994d0ce79d" translate="yes" xml:space="preserve">
          <source>This method gets/sets the top node of the parse-tree. If no arguments are given, it returns the topmost node in the tree (the root), which is also a &lt;b&gt;Pod::ParseTree&lt;/b&gt;. If it is given a single argument that is a reference, then the reference is assumed to a parse-tree and becomes the new top node. Otherwise, if arguments are given, they are treated as the new list of children for the top node.</source>
          <target state="translated">このメソッドは、解析ツリーの最上位ノードを取得/設定します。引数が指定されていない場合は、ツリーの最上位ノード（ルート）を&lt;b&gt;返し&lt;/b&gt;ます。これも&lt;b&gt;Pod :: ParseTree&lt;/b&gt;です。参照である単一の引数が指定された場合、参照は解析ツリーと見なされ、新しいトップノードになります。それ以外の場合、引数を指定すると、それらは最上位ノードの子の新しいリストとして扱われます。</target>
        </trans-unit>
        <trans-unit id="59076bbdbb5b4ddcc87d5e0b9c9e7bca5153b33d" translate="yes" xml:space="preserve">
          <source>This method handles the body of text that is marked up to be code. You might for instance override this to plug in a syntax highlighter. The base implementation just escapes the text.</source>
          <target state="translated">このメソッドは、コードとしてマークアップされたテキストの本文を処理します。例えば、シンタックスハイライターをプラグインするためにこれをオーバーライドすることができます。基本的な実装はテキストをエスケープするだけです。</target>
        </trans-unit>
        <trans-unit id="7f7d4c41920dd2575a0ef9de52d6dfd4b083b3af" translate="yes" xml:space="preserve">
          <source>This method handles the body of text within any element: it's the body of a paragraph, or everything between a &quot;=begin&quot; tag and the corresponding &quot;=end&quot; tag, or the text within an L entity, etc. You would want to override this if you are adding a custom element type that does more than just display formatted text. Perhaps adding a way to generate HTML tables from an extended version of POD.</source>
          <target state="translated">このメソッドは、任意の要素内のテキスト本文を処理します:段落の本文、&quot;=begin &quot;タグと対応する&quot;=end &quot;タグの間のすべてのもの、またはLエンティティ内のテキストなどです。フォーマットされたテキストを表示するだけでなく、それ以上のことを行うカスタム要素タイプを追加する場合は、これをオーバーライドしたいと思うでしょう。おそらく、PODの拡張バージョンからHTMLテーブルを生成する方法を追加することになるでしょう。</target>
        </trans-unit>
        <trans-unit id="0712996dc1b8ffb7aa50e7d069711d277d763268" translate="yes" xml:space="preserve">
          <source>This method has exactly the same effect as</source>
          <target state="translated">この方法は</target>
        </trans-unit>
        <trans-unit id="03288e53528cfed00d63abe3d07013f706a98859" translate="yes" xml:space="preserve">
          <source>This method implements Knuth's up-arrow notation, where $n is a non-negative integer representing the number of up-arrows. $n = 0 gives multiplication, $n = 1 gives exponentiation, $n = 2 gives tetration, $n = 3 gives hexation etc. The following illustrates the relation between the first values of $n.</source>
          <target state="translated">このメソッドは、クヌースのアップアロー表記法を実装しています。n=0 は乗算、$n=1 は指数、$n=2 はテトラレーション、$n=3 は 16 進法などを表します。以下は、$nの最初の値の関係を示しています。</target>
        </trans-unit>
        <trans-unit id="95de431069522c19f38db980946a01f82a5e48b0" translate="yes" xml:space="preserve">
          <source>This method implements the Ackermann function:</source>
          <target state="translated">このメソッドはAckermann関数を実装しています。</target>
        </trans-unit>
        <trans-unit id="d7edf847e8421397b7662e4de22753376978e152" translate="yes" xml:space="preserve">
          <source>This method is a stopgap until we can incorporate code into this extension to traverse the process' symbol table directly, so it may disappear in a future version of this package.</source>
          <target state="translated">このメソッドは、プロセスのシンボルテーブルを直接辿るためのコードをこの拡張機能に組み込むことができるようになるまでの暫定的なものであり、このパッケージの将来のバージョンでは消えてしまうかもしれません。</target>
        </trans-unit>
        <trans-unit id="065b0a15e17527d35032fe1e6828915d084d4b0d" translate="yes" xml:space="preserve">
          <source>This method is a synonym for &lt;code&gt;actual_passed&lt;/code&gt; .</source>
          <target state="translated">このメソッドは &lt;code&gt;actual_passed&lt;/code&gt; の同義語です。</target>
        </trans-unit>
        <trans-unit id="95d568c5372d8395dc875c9dc86c1185a887187b" translate="yes" xml:space="preserve">
          <source>This method is a synonym for &lt;code&gt;actual_passed&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;actual_passed&lt;/code&gt; の同義語です。</target>
        </trans-unit>
        <trans-unit id="b1bd4d79c24738b6fd010c8a56304f2578c0ca9b" translate="yes" xml:space="preserve">
          <source>This method is available to all &lt;code&gt;IO::Socket&lt;/code&gt; implementations but may or may not be used by the individual domain subclasses.</source>
          <target state="translated">このメソッドは、すべての &lt;code&gt;IO::Socket&lt;/code&gt; 実装で使用できますが、個々のドメインサブクラスで使用される場合と使用されない場合があります。</target>
        </trans-unit>
        <trans-unit id="a3a66a71f2968f9c82df6782744ec138e9c54cf9" translate="yes" xml:space="preserve">
          <source>This method is called automatically when the object is used as a string.</source>
          <target state="translated">このメソッドは、オブジェクトを文字列として使用する場合に自動的に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="a819fa8543b1fdd50426768934ef9b1f1b767855" translate="yes" xml:space="preserve">
          <source>This method is called automatically when the object is used in string context.</source>
          <target state="translated">このメソッドは、オブジェクトが文字列コンテキストで使用されている場合に自動的に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="ac138a74ffc74278892e510893352f2e36c5d5e7" translate="yes" xml:space="preserve">
          <source>This method is called by &lt;code&gt;response&lt;/code&gt; as a method with one argument. It should return an array of 2 values, the 3-digit status code and a flag which is true when this is part of a multi-line response and this line is not the last.</source>
          <target state="translated">このメソッドは、1つの引数を持つメソッドとして &lt;code&gt;response&lt;/code&gt; によって呼び出されます。これは、2つの値の配列、3桁のステータスコード、およびこれが複数行の応答の一部であり、この行が最後ではない場合にtrueであるフラグを返す必要があります。</target>
        </trans-unit>
        <trans-unit id="caa6afaab7cedc695e3c6f58f69b2ab8274688f3" translate="yes" xml:space="preserve">
          <source>This method is called during construction by &lt;code&gt;IO::Pipe::new&lt;/code&gt; on the newly created &lt;code&gt;IO::Pipe&lt;/code&gt; object. It returns an array of two objects blessed into &lt;code&gt;IO::Pipe::End&lt;/code&gt; , or a subclass thereof.</source>
          <target state="translated">このメソッドは、新しく作成された &lt;code&gt;IO::Pipe&lt;/code&gt; オブジェクトの &lt;code&gt;IO::Pipe::new&lt;/code&gt; によって構築中に呼び出されます。 &lt;code&gt;IO::Pipe::End&lt;/code&gt; またはそのサブクラスにblessされた2つのオブジェクトの配列を返します。</target>
        </trans-unit>
        <trans-unit id="802fcb0eb2882b26bc56d5bf7fddba3f3126ee6f" translate="yes" xml:space="preserve">
          <source>This method is called during construction by &lt;code&gt;IO::Pipe::new&lt;/code&gt; on the newly created &lt;code&gt;IO::Pipe&lt;/code&gt; object. It returns an array of two objects blessed into &lt;code&gt;IO::Pipe::End&lt;/code&gt;, or a subclass thereof.</source>
          <target state="translated">このメソッドは、新しく作成された &lt;code&gt;IO::Pipe&lt;/code&gt; オブジェクトで &lt;code&gt;IO::Pipe::new&lt;/code&gt; によって構築中に呼び出されます。 &lt;code&gt;IO::Pipe::End&lt;/code&gt; またはそのサブクラスに祝福された2つのオブジェクトの配列を返します。</target>
        </trans-unit>
        <trans-unit id="5287b2e5ba98e503e67859e5f2d01d79cbfa6c5e" translate="yes" xml:space="preserve">
          <source>This method is called to print debugging information. TEXT is the text being sent. The method should return the text to be printed.</source>
          <target state="translated">このメソッドは、デバッグ情報を印刷するために呼び出されます。text は送信されるテキストです。このメソッドは、印刷されるテキストを返す必要があります。</target>
        </trans-unit>
        <trans-unit id="2804b4df08740bd5a57eb70c9cfa0a8dcbe84738" translate="yes" xml:space="preserve">
          <source>This method is called when Math::BigFloat encounters an object it doesn't know how to handle. For instance, assume $x is a Math::BigFloat, or subclass thereof, and $y is defined, but not a Math::BigFloat, or subclass thereof. If you do</source>
          <target state="translated">このメソッドは、Math::BigFloat が処理方法を知らないオブジェクトに遭遇したときに呼び出されます。例えば、$x が Math::BigFloat またはそのサブクラスであり、$y が定義されているが Math::BigFloat またはそのサブクラスではないとします。このような場合</target>
        </trans-unit>
        <trans-unit id="f167b29ab442c8210c9356c7997b2fd2247776b0" translate="yes" xml:space="preserve">
          <source>This method is called when the handle is read via &lt;code&gt;&amp;lt;HANDLE&amp;gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/readline&quot;&gt;readline&lt;/a&gt; HANDLE&lt;/code&gt; .</source>
          <target state="translated">このメソッドは、ハンドルが &lt;code&gt;&amp;lt;HANDLE&amp;gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;functions/readline&quot;&gt;readline&lt;/a&gt; HANDLE&lt;/code&gt; を介して読み取られるときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="2a8681e541d8a457af5b2a8ca5d7fb05501b6037" translate="yes" xml:space="preserve">
          <source>This method is called when the handle is read via &lt;code&gt;&amp;lt;HANDLE&amp;gt;&lt;/code&gt; or &lt;code&gt;readline HANDLE&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、ハンドルが &lt;code&gt;&amp;lt;HANDLE&amp;gt;&lt;/code&gt; または &lt;code&gt;readline HANDLE&lt;/code&gt; 介して読み取られるときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="c6629dc17ac853da211380c0f404bf1fca26aed1" translate="yes" xml:space="preserve">
          <source>This method is called with two arguments: the relevant package name, and a reference to a variable or subroutine for which package-defined attributes are desired. The expected return value is a list of associated attributes. This list may be empty.</source>
          <target state="translated">このメソッドは、関連するパッケージ名と、パッケージ定義の属性が必要な変数やサブルーチンへの参照の2つの引数で呼び出されます。期待される戻り値は、関連する属性のリストです。このリストは空であっても構いません。</target>
        </trans-unit>
        <trans-unit id="45320fc2f3e3a4eca2479ec9f217dfab3504ebe5" translate="yes" xml:space="preserve">
          <source>This method is called with two fixed arguments, followed by the list of attributes from the relevant declaration. The two fixed arguments are the relevant package name and a reference to the declared subroutine or variable. The expected return value is a list of attributes which were not recognized by this handler. Note that this allows for a derived class to delegate a call to its base class, and then only examine the attributes which the base class didn't already handle for it.</source>
          <target state="translated">このメソッドは、2つの固定引数と、関連する宣言からの属性のリストで呼び出されます。2つの固定引数は、関連するパッケージ名と、宣言されたサブルーチンまたは変数への参照です。期待される戻り値は、このハンドラによって認識されなかった属性のリストです。これにより、派生クラスがその基底クラスに呼び出しを委譲し、基底クラスが既に処理していない属性のみを調べることができることに注意してください。</target>
        </trans-unit>
        <trans-unit id="6abefc963006076df05b84dfc6d2811ce9f6040b" translate="yes" xml:space="preserve">
          <source>This method is deprecated if running under Perl 5.8, and is no longer present if running under Perl 5.9</source>
          <target state="translated">このメソッドは Perl 5.8 で実行されている場合は非推奨ですが、Perl 5.9 で実行されている場合は存在しません。</target>
        </trans-unit>
        <trans-unit id="5c663722b6a1ec14ffe0820b635acf25e140b2e8" translate="yes" xml:space="preserve">
          <source>This method is invoked after gathering up all the lines in a paragraph and after determining the cutting state of the paragraph, but before trying to further parse or interpret them. After &lt;b&gt;preprocess_paragraph()&lt;/b&gt; returns, the current cutting state (which is returned by &lt;code&gt;$self-&amp;gt;cutting()&lt;/code&gt; ) is examined. If it evaluates to true then input text (including the given &lt;code&gt;$text&lt;/code&gt; ) is cut (not processed) until the next POD directive is encountered.</source>
          <target state="translated">このメソッドは、段落内のすべての行を収集し、段落の切り取り状態を決定した後で、さらに解析または解釈しようとする前に呼び出されます。後&lt;b&gt;preprocess_paragraph（）&lt;/b&gt;戻り、現在の切断状態（によって返される &lt;code&gt;$self-&amp;gt;cutting()&lt;/code&gt; ）を調べています。trueと評価された場合、次のPODディレクティブが検出されるまで、入力テキスト（指定された &lt;code&gt;$text&lt;/code&gt; を含む）は切り取られます（処理されません）。</target>
        </trans-unit>
        <trans-unit id="10379a9139313cde9e23b44b9d3191ab35fe83cb" translate="yes" xml:space="preserve">
          <source>This method is invoked at the beginning of processing for each POD document that is encountered in the input. Subclasses should override this method to perform any per-document initialization.</source>
          <target state="translated">このメソッドは、入力で遭遇した各 POD 文書の処理の開始時に呼び出されます。サブクラスはこのメソッドをオーバーライドして、ドキュメントごとの初期化を行う必要があります。</target>
        </trans-unit>
        <trans-unit id="413604196761a8f6291ef93425b6ff6c449d0805" translate="yes" xml:space="preserve">
          <source>This method is invoked at the end of processing for each POD document that is encountered in the input. Subclasses should override this method to perform any per-document finalization.</source>
          <target state="translated">このメソッドは、入力で遭遇した各 POD 文書の処理終了時に呼び出されます。サブクラスはこのメソッドをオーバーライドして、ドキュメントごとの最終処理を行う必要があります。</target>
        </trans-unit>
        <trans-unit id="c39c6b3f4be6d469d8afebc0b47e837d73cf3993" translate="yes" xml:space="preserve">
          <source>This method is invoked by &lt;b&gt;parse_from_filehandle()&lt;/b&gt; immediately</source>
          <target state="translated">このメソッドは、&lt;b&gt;parse_from_filehandle（）&lt;/b&gt;によってすぐに呼び出され&lt;b&gt;ます&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="6747dae8cbf5615de1cf353ad79e0a07cee8a900" translate="yes" xml:space="preserve">
          <source>This method is less often useful. It assumes that the string stored in the struct is null-terminated, and disregards the length information.</source>
          <target state="translated">このメソッドは、あまり有用ではありません。このメソッドは、構造体に格納された文字列がヌル終端であると仮定し、長さ情報を無視します。</target>
        </trans-unit>
        <trans-unit id="2f27eac3492ebadd4d8f82dcb6d874e3db599873" translate="yes" xml:space="preserve">
          <source>This method is no longer used and can be omitted. Methods that are not implemented by a subclass will be inherited from this class.</source>
          <target state="translated">このメソッドはもう使わないので省略できます。サブクラスで実装されていないメソッドは、このクラスから継承されます。</target>
        </trans-unit>
        <trans-unit id="c79ad557d9b0fbcd0831200e697c308d8d3ffa30" translate="yes" xml:space="preserve">
          <source>This method is non-blocking, and will return only as many items as are available to fulfill the request:</source>
          <target state="translated">このメソッドはノンブロッキングで、リクエストを満たすために利用可能な数だけのアイテムを返します。</target>
        </trans-unit>
        <trans-unit id="6fb78fde591144d3983cff09b4ae34dcd5c3fb9d" translate="yes" xml:space="preserve">
          <source>This method is not present if running under Perl 5.9, as the PMROOT information is no longer stored directly in the hash.</source>
          <target state="translated">PMROOT情報がハッシュに直接保存されなくなったため、Perl 5.9で動作している場合、このメソッドは存在しません。</target>
        </trans-unit>
        <trans-unit id="f1244eb4316f69131f6963e6774a849bda60f19c" translate="yes" xml:space="preserve">
          <source>This method is of no use for general Perl threads programming. Its intent is to provide other (XS-based) thread modules with the capability to access, and possibly manipulate, the underlying thread structure associated with a Perl thread.</source>
          <target state="translated">このメソッドは、一般的なPerlスレッドのプログラミングには使用されません。このメソッドの目的は、他の (XS ベースの)スレッドモジュールに、Perl スレッドに関連付けられたスレッド構造にアクセスしたり、操作したりする機能を提供することです。</target>
        </trans-unit>
        <trans-unit id="21dc78ea221a1896dd75e4ea5a218dfbc7c4df02" translate="yes" xml:space="preserve">
          <source>This method is protected and not intended to be called outside of MakeMaker.</source>
          <target state="translated">このメソッドは保護されており、MakeMaker の外部から呼び出すことはできません。</target>
        </trans-unit>
        <trans-unit id="e5a20cfe7a533839e6244ee0ceb882a48e01de5e" translate="yes" xml:space="preserve">
          <source>This method is similar to share() but allows you to explicitly name the package that symbols should be shared from. The symbol names (including type characters) are supplied as an array reference.</source>
          <target state="translated">このメソッドは share()に似ていますが、シンボルを共有するパッケージの名前を明示的に指定することができます。シンボル名 (型文字を含む)は配列参照として提供されます。</target>
        </trans-unit>
        <trans-unit id="f5a57d1e0f15bd04707c86271032904c47bf2e9b" translate="yes" xml:space="preserve">
          <source>This method is the one you usually want. It constructs a string using the length and offset information in the struct: for ordinary scalars it will return the string that you'd see from Perl, even if it contains null characters.</source>
          <target state="translated">このメソッドは、通常はこのメソッドを使用します。構造体の長さとオフセットの情報を使用して文字列を作成します。通常のスカラ値の場合は、NULL文字を含んでいてもPerlで見たような文字列を返します。</target>
        </trans-unit>
        <trans-unit id="01115bf69ddf4deb1227d201ea74e47486095d25" translate="yes" xml:space="preserve">
          <source>This method is triggered when a tied hash is about to go out of scope. You don't really need it unless you're trying to add debugging or have auxiliary state to clean up. Here's a very simple function:</source>
          <target state="translated">このメソッドは、タイドハッシュがスコープ外に出そうになったときにトリガーされます。デバッグを追加したり、補助的な状態をクリーンアップしたりする場合を除いては、このメソッドは必要ありません。以下に非常にシンプルな関数を示します。</target>
        </trans-unit>
        <trans-unit id="2987f28dec8ef9effc2010b2cf05de3e78ff66c2" translate="yes" xml:space="preserve">
          <source>This method is triggered when the user uses the exists() function on a particular hash. In our example, we'll look at the &lt;code&gt;{LIST}&lt;/code&gt; hash element for this:</source>
          <target state="translated">このメソッドは、ユーザーが特定のハッシュでexists（）関数を使用したときにトリガーされます。この例では、これについて &lt;code&gt;{LIST}&lt;/code&gt; ハッシュ要素を調べます。</target>
        </trans-unit>
        <trans-unit id="642b5a68b22f43aa4631e9ecbebcec5f49cf6aa8" translate="yes" xml:space="preserve">
          <source>This method is triggered when the whole hash is to be cleared, usually by assigning the empty list to it.</source>
          <target state="translated">このメソッドは、ハッシュ全体をクリアしたいときにトリガされます。</target>
        </trans-unit>
        <trans-unit id="b7c5e76fa8c5d820b269407c2691745bfe513299" translate="yes" xml:space="preserve">
          <source>This method is triggered when we remove an element from the hash, typically by using the delete() function. Again, we'll be careful to check whether they really want to clobber files.</source>
          <target state="translated">このメソッドは、ハッシュから要素を削除したときにトリガされます。繰り返しになりますが、彼らが本当にファイルをパクりたいと思っているのかどうかを確認するように注意しましょう。</target>
        </trans-unit>
        <trans-unit id="d44b267a60e501cab8cef2efaa122beb61916cef" translate="yes" xml:space="preserve">
          <source>This method is used to add to the currently selected sections and subsections of POD documentation that are to be printed and/or processed. See &amp;lt;select()&amp;gt; for replacing the currently selected sections.</source>
          <target state="translated">このメソッドは、印刷または処理されるPOD文書の現在選択されているセクションおよびサブセクションに追加するために使用されます。現在選択されているセクションの置き換えについては、&amp;lt;select（）&amp;gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="79298df7a94b5d243fe4caa12d96cacff3087b81" translate="yes" xml:space="preserve">
          <source>This method is used to determine if the block of text given in &lt;code&gt;$paragraph&lt;/code&gt; falls within the currently selected set of POD sections and subsections to be printed or processed. This method is also responsible for keeping track of the current input section and subsections. It is assumed that &lt;code&gt;$paragraph&lt;/code&gt; is the most recently read (but not yet processed) input paragraph.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;$paragraph&lt;/code&gt; 指定されたテキストのブロックが、印刷または処理されるPODセクションとサブセクションの現在選択されているセット内にあるかどうかを判断するために使用されます。このメソッドは、現在の入力セクションとサブセクションを追跡する役割も果たします。 &lt;code&gt;$paragraph&lt;/code&gt; は、最後に読み込まれた（まだ処理されていない）入力段落であると想定されています。</target>
        </trans-unit>
        <trans-unit id="cb88ba93625bb2592aeeb6754a8b29bf08054638" translate="yes" xml:space="preserve">
          <source>This method is used to load a facet by name (or key). It will attempt to load the facet class, if it succeeds it will return the class it loaded. If it fails it will return &lt;code&gt;undef&lt;/code&gt;. This caches the result at the class level so that future calls will be faster.</source>
          <target state="translated">このメソッドは、名前（またはキー）でファセットをロードするために使用されます。ファセットクラスのロードを試みます。成功すると、ロードしたクラスが返されます。失敗した場合は &lt;code&gt;undef&lt;/code&gt; を返します。これにより、結果がクラスレベルでキャッシュされるため、今後の呼び出しが高速になります。</target>
        </trans-unit>
        <trans-unit id="bbbe3e628f204e314a28a9c25f8f03f14e0f6464" translate="yes" xml:space="preserve">
          <source>This method is used to select the particular sections and subsections of POD documentation that are to be printed and/or processed. The existing set of selected sections is</source>
          <target state="translated">この方法は、印刷および/または処理されるべきPOD文書の特定のセクションおよびサブセクションを選択するために使用される。選択されたセクションの既存のセットは</target>
        </trans-unit>
        <trans-unit id="bef747284ac03954e21b22973b38b9cf4e4e7f3d" translate="yes" xml:space="preserve">
          <source>This method is useful if you need to perform your own interpolation of interior sequences and can't rely upon &lt;b&gt;interpolate&lt;/b&gt; to expand them in simple bottom-up order.</source>
          <target state="translated">この方法は、内部シーケンスの独自の補間を実行する必要があり、&lt;b&gt;補間&lt;/b&gt;に依存してそれらを単純なボトムアップ順序で展開できない場合に便利です。</target>
        </trans-unit>
        <trans-unit id="49a58cbb089494a695c730a567717e544a3c0dd9" translate="yes" xml:space="preserve">
          <source>This method isn't terribly useful since modules which share the same Test::Builder object might get exported to different packages and only the last one will be honored.</source>
          <target state="translated">同じ Test::Builder オブジェクトを共有しているモジュールが異なるパッケージにエクスポートされ、最後のものだけが利用される可能性があるため、このメソッドはあまり有用ではありません。</target>
        </trans-unit>
        <trans-unit id="5c881172eff7368918f5da216c5dcea0fcc3039d" translate="yes" xml:space="preserve">
          <source>This method joins together all requirements across a number of phases and types into a new &lt;a href=&quot;CPAN::Meta::Requirements&quot;&gt;CPAN::Meta::Requirements&lt;/a&gt; object. If arguments are omitted, it defaults to &quot;runtime&quot;, &quot;build&quot; and &quot;test&quot; for phases and &quot;requires&quot; and &quot;recommends&quot; for types.</source>
          <target state="translated">このメソッドは、いくつかのフェーズとタイプにわたるすべての要件を新しい&lt;a href=&quot;CPAN::Meta::Requirements&quot;&gt;CPAN :: Meta :: Requirements&lt;/a&gt;オブジェクトに結合します。引数を省略した場合、デフォルトでは、フェーズの場合は「runtime」、「build」、「test」、タイプの場合は「requires」、「recommends」になります。</target>
        </trans-unit>
        <trans-unit id="6554ac6945a5df20c377de63d8de44dbce743773" translate="yes" xml:space="preserve">
          <source>This method keyword is documented in &lt;a href=&quot;../perlobj#Destructors&quot;&gt;Destructors in perlobj&lt;/a&gt;.</source>
          <target state="translated">このメソッドのキーワードは&lt;a href=&quot;../perlobj#Destructors&quot;&gt;、perlobjのデストラクタに記載されてい&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="661a4e6337bec9fa5b81482e46ab4bf4c5f238c8" translate="yes" xml:space="preserve">
          <source>This method keyword is documented in &lt;a href=&quot;perlobj#Destructors&quot;&gt;&quot;Destructors&quot; in perlobj&lt;/a&gt;.</source>
          <target state="translated">このメソッドキーワードは&lt;a href=&quot;perlobj#Destructors&quot;&gt;、perlobjの「デストラクタ」に記載されてい&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="9e359554a4d991920df0d798d38cb8b6bf47ec29" translate="yes" xml:space="preserve">
          <source>This method keyword is documented in &lt;a href=&quot;perlobj#Destructors&quot;&gt;Destructors in perlobj&lt;/a&gt;.</source>
          <target state="translated">このメソッドのキーワードは&lt;a href=&quot;perlobj#Destructors&quot;&gt;、perlobjのデストラクタに記載されてい&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="c21da25dd954f9e366c6cef85d1af33e75fddf8f" translate="yes" xml:space="preserve">
          <source>This method lets you know which (or how many) tests actually failed, regardless of whether or not a TODO directive was found.</source>
          <target state="translated">このメソッドは、TODO ディレクティブが見つかったかどうかに関わらず、実際にどのテストが失敗したか (あるいは何回失敗したか)を知ることができます。</target>
        </trans-unit>
        <trans-unit id="a2b6c5d7eeef2dcb58cd2d68cdfe40caf21f8820" translate="yes" xml:space="preserve">
          <source>This method lets you know which (or how many) tests actually passed but were declared as &quot;TODO&quot; tests.</source>
          <target state="translated">このメソッドは、どのテストが実際に合格したか (あるいは合格した数)を知ることができますが、&quot;TODO&quot; テストとして宣言されています。</target>
        </trans-unit>
        <trans-unit id="08a5db262046c866f7d810a5b71d8ec989df7d80" translate="yes" xml:space="preserve">
          <source>This method lets you know which (or how many) tests actually passed, regardless of whether or not a TODO directive was found.</source>
          <target state="translated">このメソッドは、TODO ディレクティブが見つかったかどうかに関わらず、 実際にどのテストに合格したか (あるいは何回合格したか)を知ることができます。</target>
        </trans-unit>
        <trans-unit id="7562f7ac693aec459c0c9b344acb705680f1f7f7" translate="yes" xml:space="preserve">
          <source>This method lets you know which (or how many) tests failed. If a test passed but had a TODO directive, it will &lt;b&gt;NOT&lt;/b&gt; be counted as a failed test.</source>
          <target state="translated">この方法では、失敗したテスト（またはテストの数）を確認できます。テストに合格したがTODOディレクティブがあった場合、そのテストは失敗したテストとしてカウントされ&lt;b&gt;ません&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="b1956c9e443594eef5939e2522e06e528138f73a" translate="yes" xml:space="preserve">
          <source>This method lets you know which (or how many) tests had SKIP directives.</source>
          <target state="translated">このメソッドは、どのテストに SKIP ディレクティブがあったか (あるいはいくつあったか)を知ることができます。</target>
        </trans-unit>
        <trans-unit id="d552dee0411d16f26c2347ec73027455bcd691a0" translate="yes" xml:space="preserve">
          <source>This method lets you know which (or how many) tests had TODO directives.</source>
          <target state="translated">このメソッドを使うと、どのテストに TODO ディレクティブがあったか (あるいはいくつあったか)を知ることができます。</target>
        </trans-unit>
        <trans-unit id="62d19246ed330e746e1fe150131f18c164bb14d2" translate="yes" xml:space="preserve">
          <source>This method lets you know which (or how many) tests passed. If a test failed but had a TODO directive, it will be counted as a passed test.</source>
          <target state="translated">このメソッドは、どのテストが合格したか (あるいは何回合格したか)を知ることができます。テストが失敗したが TODO ディレクティブを持っていた場合は、合格したテストとしてカウントされます。</target>
        </trans-unit>
        <trans-unit id="5cdb3f6929d50bb5330f8f315f2338f1cd8897fc" translate="yes" xml:space="preserve">
          <source>This method marks the requirements finalized. Subsequent attempts to change the requirements will be fatal,</source>
          <target state="translated">この方法では、要件が確定したことをマークします。それ以降、要件を変更しようとすると致命的になります。</target>
        </trans-unit>
        <trans-unit id="cc582265ee4f696fc9e8e3fad6147cf5023780c3" translate="yes" xml:space="preserve">
          <source>This method may be overridden by subclasses to take the appropriate action when a block of verbatim text is encountered. It is passed the following parameters:</source>
          <target state="translated">このメソッドは、冗長テキストのブロックに遭遇したときに適切なアクションを取るために、サブクラスによってオーバーライドされることがあります。このメソッドには以下のパラメータが渡されます。</target>
        </trans-unit>
        <trans-unit id="2ef97fe79f3074bd51a79fd7f9a20c0d8326e891" translate="yes" xml:space="preserve">
          <source>This method may be overridden by subclasses to take the appropriate action when a normal block of POD text is encountered (although the base class method will usually do what you want). It is passed the following parameters:</source>
          <target state="translated">このメソッドは、通常のPODテキストのブロックに遭遇したときに適切なアクションを取るために、サブクラスによってオーバーライドされることがあります(通常は基底クラスのメソッドがあなたの望むようなことをしますが)。このメソッドには以下のパラメータが渡されます。</target>
        </trans-unit>
        <trans-unit id="f193021bd1e2803e8135ddd336589fd3fdb1031b" translate="yes" xml:space="preserve">
          <source>This method merely runs the parser and parses all of the TAP.</source>
          <target state="translated">このメソッドは単にパーサーを実行し、TAPのすべてを解析するだけです。</target>
        </trans-unit>
        <trans-unit id="d5b810a222612f34da5ba09951a3a157e593734d" translate="yes" xml:space="preserve">
          <source>This method only works on Perl v5.9.4 or later.</source>
          <target state="translated">このメソッドはPerl v5.9.4以降でのみ動作します。</target>
        </trans-unit>
        <trans-unit id="711e3f6546ee99d694d8611421083f48f729a0be" translate="yes" xml:space="preserve">
          <source>This method parses the passed in string and adds the appropriate requirement for the given module. A version can be a Perl &quot;v-string&quot;. It understands version ranges as described in the &lt;a href=&quot;CPAN::Meta::Spec#Version-Ranges&quot;&gt;&quot;Version Ranges&quot; in CPAN::Meta::Spec&lt;/a&gt;. For example:</source>
          <target state="translated">このメソッドは、渡された文字列を解析し、指定されたモジュールに適切な要件を追加します。バージョンはPerlの「v-string」にすることができます。&lt;a href=&quot;CPAN::Meta::Spec#Version-Ranges&quot;&gt;CPAN :: Meta :: Spec&lt;/a&gt;の「バージョン範囲」で説明されているバージョン範囲を理解します。例えば：</target>
        </trans-unit>
        <trans-unit id="3eb04a70399efe3a3bc64926ce7a5f07e9940d0a" translate="yes" xml:space="preserve">
          <source>This method performs any necessary cleanup for the interior-sequence. If you override this method then it is &lt;b&gt;imperative&lt;/b&gt; that you invoke the parent method from within your own method, otherwise</source>
          <target state="translated">このメソッドは、interior-sequenceに必要なクリーンアップを実行します。あなたは、このメソッドをオーバーライドする場合、それはある&lt;b&gt;不可欠&lt;/b&gt;あなたがそうでなければ、あなた自身のメソッド内から親メソッドを呼び出すこと</target>
        </trans-unit>
        <trans-unit id="714dcc55d92cf752f4b4184074298408c801245b" translate="yes" xml:space="preserve">
          <source>This method performs any necessary cleanup for the parse-tree. If you override this method then it is &lt;b&gt;imperative&lt;/b&gt; that you invoke the parent method from within your own method, otherwise</source>
          <target state="translated">このメソッドは、解析ツリーに必要なクリーンアップを実行します。あなたは、このメソッドをオーバーライドする場合、それはある&lt;b&gt;不可欠&lt;/b&gt;あなたがそうでなければ、あなた自身のメソッド内から親メソッドを呼び出すこと</target>
        </trans-unit>
        <trans-unit id="094b13118759d86cdc1f33cdf2b7a72869820716" translate="yes" xml:space="preserve">
          <source>This method performs any necessary object initialization. It takes no arguments (other than the object instance of course, which is typically copied to a local variable named &lt;code&gt;$self&lt;/code&gt; ). If subclasses override this method then they</source>
          <target state="translated">このメソッドは、必要なオブジェクトの初期化を実行します。引数はありません（もちろん、通常は &lt;code&gt;$self&lt;/code&gt; という名前のローカル変数にコピーされるオブジェクトインスタンスを除きます）。サブクラスがこのメソッドをオーバーライドする場合、</target>
        </trans-unit>
        <trans-unit id="1b4637e9cdcc1db5f14b9635de49858c878c102c" translate="yes" xml:space="preserve">
          <source>This method prepends the given text or parse-tree to the current parse-tree. If the first item on the parse-tree is text and the argument is also text, then the text is prepended to the first item (not added as a separate string). Otherwise the argument is added as a new string or parse-tree</source>
          <target state="translated">このメソッドは、与えられたテキストまたはパースツリーを現在のパースツリーに前置します。パースツリーの最初の項目がテキストで、引数もテキストの場合、テキストは最初の項目に前置されます (別の文字列としては追加されません)。それ以外の場合は、引数は新しい文字列として追加されます。</target>
        </trans-unit>
        <trans-unit id="843c78718fa264afa1695d6f64c3d712c49fd84a" translate="yes" xml:space="preserve">
          <source>This method prints the test as a string. It will probably be similar, but not necessarily identical, to the original test line. Directives are capitalized, some whitespace may be trimmed and a test number will be added if it was not present in the original line. If you need the original text of the test line, use the &lt;code&gt;raw&lt;/code&gt; method.</source>
          <target state="translated">このメソッドは、テストを文字列として出力します。おそらく元のテスト行と似ていますが、必ずしも同じであるとは限りません。ディレクティブは大文字で表記され、一部の空白は削除され、元の行になかった場合はテスト番号が追加されます。テスト行の元のテキストが必要な場合は、 &lt;code&gt;raw&lt;/code&gt; メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="c461db5fa5d2d546751540785c1da918e27ef9ee" translate="yes" xml:space="preserve">
          <source>This method processes an XS file and sends output to a C file. The method may be called as a function (this is the legacy interface) and will then use a singleton as invocant.</source>
          <target state="translated">このメソッドはXSファイルを処理し、出力をCファイルに送ります。このメソッドは関数として呼ばれ(これはレガシーインターフェースです)、シングルトンを呼び出します。</target>
        </trans-unit>
        <trans-unit id="443a8a4abd0996a8f53eec3622235de842b5198f" translate="yes" xml:space="preserve">
          <source>This method reconstructs the encoding object if necessary. If you need to store the state during encoding, this is where you clone your object.</source>
          <target state="translated">このメソッドは、必要に応じてエンコーディングオブジェクトを再構築します。エンコーディング中に状態を保存する必要がある場合は、ここでオブジェクトのクローンを作成します。</target>
        </trans-unit>
        <trans-unit id="4be2e04731b97866ee5b4ac0d1bde14c1df759bd" translate="yes" xml:space="preserve">
          <source>This method returns 0 if the object can be modified with the given operation, or 1 if not.</source>
          <target state="translated">このメソッドは、与えられた操作でオブジェクトを変更できる場合は0を返し、できない場合は1を返します。</target>
        </trans-unit>
        <trans-unit id="3441f0af9f59d5dc45617aeb66969ab6a0963d73" translate="yes" xml:space="preserve">
          <source>This method returns TRUE if the GP field of the GV is NULL.</source>
          <target state="translated">このメソッドは、GV の GP フィールドが NULL の場合に TRUE を返します。</target>
        </trans-unit>
        <trans-unit id="ecc3b6039f5ff097f5929abca6feaac0bb1a1360" translate="yes" xml:space="preserve">
          <source>This method returns a &lt;a href=&quot;CPAN::Meta::Feature&quot;&gt;CPAN::Meta::Feature&lt;/a&gt; object for the optional feature with the given identifier. If no feature with that identifier exists, an exception will be raised.</source>
          <target state="translated">このメソッドは、指定された識別子を持つオプション機能の&lt;a href=&quot;CPAN::Meta::Feature&quot;&gt;CPAN :: Meta :: Feature&lt;/a&gt;オブジェクトを返します。その識別子を持つ機能が存在しない場合、例外が発生します。</target>
        </trans-unit>
        <trans-unit id="6c15f83b33ebe9626be021d25c41e755d48695b2" translate="yes" xml:space="preserve">
          <source>This method returns a &lt;a href=&quot;CPAN::Meta::Prereqs&quot;&gt;CPAN::Meta::Prereqs&lt;/a&gt; object describing all the prereqs for the distribution. If an arrayref of feature identifiers is given, the prereqs for the identified features are merged together with the distribution's core prereqs before the CPAN::Meta::Prereqs object is returned.</source>
          <target state="translated">このメソッドは、配布のすべての前提条件を説明する&lt;a href=&quot;CPAN::Meta::Prereqs&quot;&gt;CPAN :: Meta :: Prereqs&lt;/a&gt;オブジェクトを返します。機能識別子のarrayrefが指定されている場合、CPAN :: Meta :: Prereqsオブジェクトが返される前に、識別された機能の前提条件がディストリビューションのコア前提条件とマージされます。</target>
        </trans-unit>
        <trans-unit id="ccbe2a6326a123f59ab56735cf3ce21971d48ace" translate="yes" xml:space="preserve">
          <source>This method returns a &lt;a href=&quot;CPAN::Meta::Requirements&quot;&gt;CPAN::Meta::Requirements&lt;/a&gt; object for the given phase/type combination. If no prerequisites are registered for that combination, a new CPAN::Meta::Requirements object will be returned, and it may be added to as needed.</source>
          <target state="translated">このメソッドは、指定されたフェーズ/タイプの組み合わせに対して&lt;a href=&quot;CPAN::Meta::Requirements&quot;&gt;CPAN :: Meta :: Requirements&lt;/a&gt;オブジェクトを返します。その組み合わせに前提条件が登録されていない場合、新しいCPAN :: Meta :: Requirementsオブジェクトが返され、必要に応じて追加される場合があります。</target>
        </trans-unit>
        <trans-unit id="cb173e29985a69e4c742ab91cf231ef598525ea6" translate="yes" xml:space="preserve">
          <source>This method returns a Prereqs object that is identical to the original object, but can be altered without affecting the original object. Finalization does not survive cloning, meaning that you may clone a finalized set of prereqs and then modify the clone.</source>
          <target state="translated">このメソッドは、元のオブジェクトと同一の Prereqs オブジェクトを返しますが、元のオブジェクトに影響を与えずに変更することができます。つまり、最終化されたprereqsのセットをクローンして、そのクローンを変更することができます。</target>
        </trans-unit>
        <trans-unit id="8dc7e3cb1081d01b93496efbbf89c0031ab07cf1" translate="yes" xml:space="preserve">
          <source>This method returns a clone of the invocant. The clone and the original object can then be changed independent of one another.</source>
          <target state="translated">このメソッドは、インボカントのクローンを返します。これにより、クローンと元のオブジェクトは互いに独立して変更することができます。</target>
        </trans-unit>
        <trans-unit id="a660976840e65d0897ee15b1bb3e1d439893ed69" translate="yes" xml:space="preserve">
          <source>This method returns a deep copy of the object's metadata as an unblessed hash reference. It takes an optional hashref of options. If the hashref contains a &lt;code&gt;version&lt;/code&gt; argument, the copied metadata will be converted to the version of the specification and returned. For example:</source>
          <target state="translated">このメソッドは、オブジェクトのメタデータのディープコピーを祝福されていないハッシュ参照として返します。オプションのオプションのhashrefを取ります。hashrefに &lt;code&gt;version&lt;/code&gt; 引数が含まれている場合、コピーされたメタデータは仕様のバージョンに変換されて返されます。例えば：</target>
        </trans-unit>
        <trans-unit id="9d0124bb5624eddaaba9be0a0792e6b70917f5e9" translate="yes" xml:space="preserve">
          <source>This method returns a hashref containing structures suitable for dumping into a distmeta data structure. It is made up of hashes and strings, only; there will be no Prereqs, CPAN::Meta::Requirements, or &lt;code&gt;version&lt;/code&gt; objects inside it.</source>
          <target state="translated">このメソッドは、distmetaデータ構造にダンプするのに適した構造を含むhashrefを返します。ハッシュと文字列のみで構成されています。その中にPrereqs、CPAN :: Meta :: Requirements、または &lt;code&gt;version&lt;/code&gt; オブジェクトはありません。</target>
        </trans-unit>
        <trans-unit id="6eae8a85642b918b7b127321e5eaeb3c1f6a5f9d" translate="yes" xml:space="preserve">
          <source>This method returns a list of &lt;a href=&quot;CPAN::Meta::Feature&quot;&gt;CPAN::Meta::Feature&lt;/a&gt; objects, one for each optional feature described by the distribution's metadata.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;CPAN::Meta::Feature&quot;&gt;CPAN :: Meta :: Feature&lt;/a&gt;オブジェクトのリストを返します。これは、ディストリビューションのメタデータによって記述されたオプションの機能ごとに1つです。</target>
        </trans-unit>
        <trans-unit id="ac97a18eb985efa8a4676cc3a8b597409e671815" translate="yes" xml:space="preserve">
          <source>This method returns a list of all the modules for which requirements have been specified.</source>
          <target state="translated">このメソッドは、要件が指定されているすべてのモジュールのリストを返します。</target>
        </trans-unit>
        <trans-unit id="d7b58df6d5a2c18121bb505720d0e804af99a7dd" translate="yes" xml:space="preserve">
          <source>This method returns a list of the currently active section headings and subheadings in the document being parsed. The list of headings returned corresponds to the most recently parsed paragraph of the input.</source>
          <target state="translated">このメソッドは、解析中の文書内で現在アクティブなセクションの見出しと小見出しのリストを返します。返される見出しのリストは、入力の直近に解析された段落に対応しています。</target>
        </trans-unit>
        <trans-unit id="1845f64f5dff026e99802fb2b0ed9543ebdf51a7" translate="yes" xml:space="preserve">
          <source>This method returns a new CPAN::Meta object using the first document in the given YAML string. In other respects it is identical to &lt;code&gt;load_file()&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、指定されたYAML文字列の最初のドキュメントを使用して新しいCPAN :: Metaオブジェクトを返します。その他の点では、 &lt;code&gt;load_file()&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="3273d3871ffcb26a5d4043675d561afe60f650f3" translate="yes" xml:space="preserve">
          <source>This method returns a new CPAN::Meta object using the structure represented by the given JSON string. In other respects it is identical to &lt;code&gt;load_file()&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、指定されたJSON文字列で表される構造を使用して新しいCPAN :: Metaオブジェクトを返します。その他の点では、 &lt;code&gt;load_file()&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="02520ccc95c7235e07b3d427ec797731c99b95a2" translate="yes" xml:space="preserve">
          <source>This method returns a new CPAN::Meta::Prereqs objects in which all the other prerequisites given are merged into the current set. This is primarily provided for combining a distribution's core prereqs with the prereqs of one of its optional features.</source>
          <target state="translated">このメソッドは、新しいCPAN::Meta::Prereqsオブジェクトを返し、与えられた他のすべての前提条件が現在のセットにマージされます。これは主に、ディストリビューションのコア前提条件とオプション機能の一つの前提条件を組み合わせるために提供されます。</target>
        </trans-unit>
        <trans-unit id="26456adf48b8270a780502b4eaebd6bec5340107" translate="yes" xml:space="preserve">
          <source>This method returns a new set of Prereqs. The input should look like the contents of the &lt;code&gt;prereqs&lt;/code&gt; field described in &lt;a href=&quot;CPAN::Meta::Spec&quot;&gt;CPAN::Meta::Spec&lt;/a&gt;, meaning something more or less like this:</source>
          <target state="translated">このメソッドは、新しい前提条件のセットを返します。入力は、&lt;a href=&quot;CPAN::Meta::Spec&quot;&gt;CPAN :: Meta :: Spec&lt;/a&gt;で説明されている &lt;code&gt;prereqs&lt;/code&gt; フィールドの内容のようになります。つまり、多かれ少なかれ次のようになります。</target>
        </trans-unit>
        <trans-unit id="809605a8e893e3bde6161ec466a7256b077b2f58" translate="yes" xml:space="preserve">
          <source>This method returns a serialized copy of the object's metadata as a character string. (The strings are &lt;b&gt;not&lt;/b&gt; UTF-8 encoded.) It takes an optional hashref of options. If the hashref contains a &lt;code&gt;version&lt;/code&gt; argument, the copied metadata will be converted to the version of the specification and returned. For example:</source>
          <target state="translated">このメソッドは、オブジェクトのメタデータのシリアル化されたコピーを文字列として返します。（文字列はUTF-8でエンコードされて&lt;b&gt;いません&lt;/b&gt;。）オプションのオプションのhashrefを取ります。hashrefに &lt;code&gt;version&lt;/code&gt; 引数が含まれている場合、コピーされたメタデータは仕様のバージョンに変換されて返されます。例えば：</target>
        </trans-unit>
        <trans-unit id="dfd6da7f680f7708aaaafbe88d4fbd81537fbb12" translate="yes" xml:space="preserve">
          <source>This method returns either a hash reference (in scalar context) or a list or hash references (in array context) that contains information about each of the header fields in the compressed data stream(s).</source>
          <target state="translated">このメソッドは、圧縮されたデータストリームの各ヘッダフィールドに関する情報を含むハッシュ参照 (スカラコンテキスト)またはリストまたはハッシュ参照 (配列コンテキスト)を返します。</target>
        </trans-unit>
        <trans-unit id="5613e8d87481a66c6331ffba3f17e879703b23af" translate="yes" xml:space="preserve">
          <source>This method returns the &lt;a href=&quot;../builder&quot;&gt;Test::Builder&lt;/a&gt; object associated with Your::Class. It is not a constructor so you can call it as often as you like.</source>
          <target state="translated">このメソッドは、Your :: Classに関連付けられた&lt;a href=&quot;../builder&quot;&gt;Test :: Builder&lt;/a&gt;オブジェクトを返します。これはコンストラクターではないため、何度でも呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="df2acf1db6d765e8b7af473cf018815f141ba1b9" translate="yes" xml:space="preserve">
          <source>This method returns the &lt;a href=&quot;Test::Builder&quot;&gt;Test::Builder&lt;/a&gt; object associated with Your::Class. It is not a constructor so you can call it as often as you like.</source>
          <target state="translated">このメソッドは、Your :: Classに関連付けられた&lt;a href=&quot;Test::Builder&quot;&gt;Test :: Builder&lt;/a&gt;オブジェクトを返します。コンストラクターではないので、何度でも呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="c6ed5af13a1529fb7b65c36511f205e560c0e629" translate="yes" xml:space="preserve">
          <source>This method returns the AV specific flags. In Perl 5.9 these are now stored in with the main SV flags, so this method is no longer present.</source>
          <target state="translated">このメソッドは AV 固有のフラグを返します。Perl 5.9 では、これらのフラグはメインの SV フラグと一緒に保存されるようになったため、このメソッドは存在しなくなりました。</target>
        </trans-unit>
        <trans-unit id="230f2b0705cb9c1bd36492ae8437541d92944923" translate="yes" xml:space="preserve">
          <source>This method returns the byte offset of the start of the &lt;code&gt;$n&lt;/code&gt; th record in the file. If there is no such record, it returns an undefined value.</source>
          <target state="translated">このメソッドは、ファイル内の &lt;code&gt;$n&lt;/code&gt; 番目のレコードの開始のバイトオフセットを返します。そのようなレコードがない場合は、未定義の値を返します。</target>
        </trans-unit>
        <trans-unit id="738895c1b07cd50df5407037de05d0561fa1ae9c" translate="yes" xml:space="preserve">
          <source>This method returns the byte offset of the start of the &lt;code&gt;$n&lt;/code&gt;th record in the file. If there is no such record, it returns an undefined value.</source>
          <target state="translated">このメソッドは、ファイル内の &lt;code&gt;$n&lt;/code&gt; 番目のレコードの先頭のバイトオフセットを返します。そのようなレコードがない場合は、未定義の値を返します。</target>
        </trans-unit>
        <trans-unit id="5819846ea31de4c85ae8c84e9f4950b6d488925d" translate="yes" xml:space="preserve">
          <source>This method returns the currently stored JSON fragment as an lvalue, that is, you can manipulate it. This</source>
          <target state="translated">このメソッドは、現在保存されている JSON フラグメントを lvalue として返します。この</target>
        </trans-unit>
        <trans-unit id="1febcdc386a8d7c1d008e8e3e3986be768008da7" translate="yes" xml:space="preserve">
          <source>This method returns the feature's identifier.</source>
          <target state="translated">このメソッドは、特徴の識別子を返します。</target>
        </trans-unit>
        <trans-unit id="13ed7705e9d007aeb18dc15b134a8edd67224258" translate="yes" xml:space="preserve">
          <source>This method returns the feature's long description.</source>
          <target state="translated">このメソッドは、その特徴の長い説明を返します。</target>
        </trans-unit>
        <trans-unit id="a5202bb9ec86dc5db010454c975e82230a5006be" translate="yes" xml:space="preserve">
          <source>This method returns the feature's prerequisites as a &lt;a href=&quot;CPAN::Meta::Prereqs&quot;&gt;CPAN::Meta::Prereqs&lt;/a&gt; object.</source>
          <target state="translated">このメソッドは、機能の前提条件を&lt;a href=&quot;CPAN::Meta::Prereqs&quot;&gt;CPAN :: Meta :: Prereqs&lt;/a&gt;オブジェクトとして返します。</target>
        </trans-unit>
        <trans-unit id="cda1e7a80b8c4ff8a50d7193bfa7f2353fb0bb3a" translate="yes" xml:space="preserve">
          <source>This method returns the internal length field, which consists of the number of internal bytes, not necessarily the number of logical characters.</source>
          <target state="translated">このメソッドは、必ずしも論理文字の数ではなく、内部バイト数からなる内部長フィールドを返します。</target>
        </trans-unit>
        <trans-unit id="73630249386a32e1daa88a34d4ed3d64dadd0557" translate="yes" xml:space="preserve">
          <source>This method returns the list of all phases currently populated in the prereqs object, suitable for iterating.</source>
          <target state="translated">このメソッドは、反復処理に適した prereqs オブジェクトに現在含まれているすべてのフェーズのリストを返します。</target>
        </trans-unit>
        <trans-unit id="a69b31bb0a594a163fa02bab7ede41d8139fbcc3" translate="yes" xml:space="preserve">
          <source>This method returns the list of all types currently populated in the prereqs object for the provided phase, suitable for iterating.</source>
          <target state="translated">このメソッドは、指定されたフェーズの prereqs オブジェクトに現在含まれているすべての型のリストを返します。</target>
        </trans-unit>
        <trans-unit id="3195470feffd08399489b4ea58a94cbd49fb15f2" translate="yes" xml:space="preserve">
          <source>This method returns the name of the glob, but if the first character of the name is a control character, then it converts it to ^X first, so that *^G would return &quot;^G&quot; rather than &quot;\cG&quot;.</source>
          <target state="translated">このメソッドはグロブの名前を返すが、名前の最初の文字が制御文字の場合は、最初に ^X に変換されるので、*^G は &quot;\cG&quot; ではなく &quot;^G&quot; を返すことになる。</target>
        </trans-unit>
        <trans-unit id="d436f65e4ac4dfd0f8045b3c54271c25339bbf38" translate="yes" xml:space="preserve">
          <source>This method returns the name of the package that is the root of the compartment's namespace.</source>
          <target state="translated">このメソッドは、コンパートメントの名前空間のルートであるパッケージの名前を返します。</target>
        </trans-unit>
        <trans-unit id="b1039ff3465ca6dc27db9b5d11bc6e35d5848fc0" translate="yes" xml:space="preserve">
          <source>This method returns the number of [a certain kind of] errors encountered during processing of the XS file.</source>
          <target state="translated">このメソッドは、XSファイルの処理中に発生した[ある種の]エラーの数を返します。</target>
        </trans-unit>
        <trans-unit id="0d20c8d8462990e4c532228bf94cacc069885810" translate="yes" xml:space="preserve">
          <source>This method returns the number of bytes allocated (via malloc) for storing the string. This is 0 if the scalar does not &quot;own&quot; the string.</source>
          <target state="translated">このメソッドは、文字列を格納するために(malloc経由で)割り当てられたバイト数を返す。スカラーが文字列を &quot;所有 &quot;していない場合は 0 である。</target>
        </trans-unit>
        <trans-unit id="01d67962853aa369d48416e10b895f4851d158db" translate="yes" xml:space="preserve">
          <source>This method returns the requirements object.</source>
          <target state="translated">このメソッドは、要件オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="dc49b5d5eff536554a52d021b3411834001a3a6e" translate="yes" xml:space="preserve">
          <source>This method returns the results of the parsing, one result at a time. Note that it is destructive. You can't rewind and examine previous results.</source>
          <target state="translated">このメソッドは、解析の結果を一度に一つずつ返します。破壊的であることに注意してください。前の結果を巻き戻したり、調べたりすることはできません。</target>
        </trans-unit>
        <trans-unit id="0ab9ad920897cda27f5f563bb7197ba468b33916" translate="yes" xml:space="preserve">
          <source>This method returns the textual representation of the hyperlink as above, but without markers (read only). Depending on the link type this is one of the following alternatives (the + and * denote the portions of the text that are marked up):</source>
          <target state="translated">このメソッドは、上記のようにハイパーリンクのテキスト表現を返しますが、マーカはありません(読み取り専用)。リンクの種類に応じて、これは以下の選択肢のいずれかになります(+と*は、マークアップされたテキストの部分を表します)。</target>
        </trans-unit>
        <trans-unit id="59c2ab7b96065dfd63ce37b4f21c2d16dce7d68c" translate="yes" xml:space="preserve">
          <source>This method returns the value of the IV as an integer. It differs from &lt;code&gt;IV&lt;/code&gt; in that it returns the correct value regardless of whether it's stored signed or unsigned.</source>
          <target state="translated">このメソッドは、IVの値を整数として返します。 &lt;code&gt;IV&lt;/code&gt; とは異なり、それが格納されているかどうかに関係なく、正しい値を返します。</target>
        </trans-unit>
        <trans-unit id="cd2332acd3062dbe524d95a2c5676842caa361ce" translate="yes" xml:space="preserve">
          <source>This method returns the version part of the &lt;code&gt;meta_spec&lt;/code&gt; entry in the distmeta structure. It is equivalent to:</source>
          <target state="translated">このメソッドは、distmeta構造体の &lt;code&gt;meta_spec&lt;/code&gt; エントリのバージョン部分を返します。これは次と同等です。</target>
        </trans-unit>
        <trans-unit id="097409eeb19e4610fc16463aab58579acca93a37" translate="yes" xml:space="preserve">
          <source>This method returns true if and only if all requirements are inclusive minimums -- that is, if their string expression is just the version number.</source>
          <target state="translated">このメソッドは、すべての要件が最小値を含む場合にのみ、つまり文字列表現がバージョン番号だけの場合に真を返します。</target>
        </trans-unit>
        <trans-unit id="bd9d9f9dc3232d40e9c79f888b628345d7669615" translate="yes" xml:space="preserve">
          <source>This method returns true if the given file should be indexed. It decides this by checking the &lt;code&gt;file&lt;/code&gt; and &lt;code&gt;directory&lt;/code&gt; keys in the &lt;code&gt;no_index&lt;/code&gt; property of the distmeta structure. Note that neither the version format nor &lt;code&gt;release_status&lt;/code&gt; are considered.</source>
          <target state="translated">指定されたファイルにインデックスを付ける必要がある場合、このメソッドはtrueを返します。これは、distmeta構造体の &lt;code&gt;no_index&lt;/code&gt; プロパティの &lt;code&gt;file&lt;/code&gt; キーと &lt;code&gt;directory&lt;/code&gt; キーをチェックすることによって決定されます。バージョン形式も &lt;code&gt;release_status&lt;/code&gt; も考慮されないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="58ff6d5b8ce053e96c242fd66e092358e70ec413" translate="yes" xml:space="preserve">
          <source>This method returns true if the given package should be indexed. It decides this by checking the &lt;code&gt;package&lt;/code&gt; and &lt;code&gt;namespace&lt;/code&gt; keys in the &lt;code&gt;no_index&lt;/code&gt; property of the distmeta structure. Note that neither the version format nor &lt;code&gt;release_status&lt;/code&gt; are considered.</source>
          <target state="translated">指定されたパッケージにインデックスを付ける必要がある場合、このメソッドはtrueを返します。これは、distmeta構造の &lt;code&gt;no_index&lt;/code&gt; プロパティの &lt;code&gt;package&lt;/code&gt; キーと &lt;code&gt;namespace&lt;/code&gt; キーをチェックすることによって決定されます。バージョン形式も &lt;code&gt;release_status&lt;/code&gt; も考慮されないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="740035cd86ced51cb784444de5c3729bee91714e" translate="yes" xml:space="preserve">
          <source>This method returns true if the requirements have been finalized by having the &lt;code&gt;finalize&lt;/code&gt; method called on them.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;finalize&lt;/code&gt; メソッドを呼び出すことによって要件がファイナライズされている場合、trueを返します。</target>
        </trans-unit>
        <trans-unit id="91378c22b7ed1b00b6fef0cff4776f78b85e7e4b" translate="yes" xml:space="preserve">
          <source>This method returns true if the set of prereqs has been marked &quot;finalized,&quot; and cannot be altered.</source>
          <target state="translated">このメソッドは、前提条件のセットが &quot;finalized &quot;とマークされており、変更できない場合に真を返します。</target>
        </trans-unit>
        <trans-unit id="1569bccb9cee6a2175f9b489178e6d0824ba382b" translate="yes" xml:space="preserve">
          <source>This method sets or returns the POD page this link points to.</source>
          <target state="translated">このメソッドは、このリンクが指す POD ページを設定または返します。</target>
        </trans-unit>
        <trans-unit id="5626475bc6df98d403b9b1a4c6d8bd8eead196ba" translate="yes" xml:space="preserve">
          <source>This method sets the size (in half-points, like 15 for 7.5-point) that the header on each page will appear in. The header is usually just &quot;</source>
          <target state="translated">このメソッドは、各ページのヘッダーが表示されるサイズ(7.5ポイントの場合は15などの半減点)を設定します。ヘッダーは通常、ただの&quot;</target>
        </trans-unit>
        <trans-unit id="49562bbb9cccfd05b2f9dd5f5c25626dc9296a99" translate="yes" xml:space="preserve">
          <source>This method sets the size (in half-points, like 21 for 10.5-point) that codeblocks (&quot;verbatim sections&quot;) will appear as.</source>
          <target state="translated">このメソッドは、コードブロック(「冗長セクション」)が表示されるサイズ(10.5ポイントの場合は21などの半減点)を設定します。</target>
        </trans-unit>
        <trans-unit id="b751a506f13c7e1535b7f83c798a478f8a346484" translate="yes" xml:space="preserve">
          <source>This method sets the size (in half-points, like 26 for 13-point) that normal paragraphic text will appear in.</source>
          <target state="translated">このメソッドは、通常の段落テキストが表示されるサイズ(13ポイントで26のような半減点)を設定します。</target>
        </trans-unit>
        <trans-unit id="4a47dc314786b539ecdca5143ef23b8e1941b547" translate="yes" xml:space="preserve">
          <source>This method should</source>
          <target state="translated">この方法は</target>
        </trans-unit>
        <trans-unit id="a1c0bdcb0359edd01294194cece7860e3da71acb" translate="yes" xml:space="preserve">
          <source>This method should be overridden by subclasses that wish to perform any kind of preprocessing for each</source>
          <target state="translated">このメソッドは、それぞれの</target>
        </trans-unit>
        <trans-unit id="4045b5b845e6b96a3e7f9e9b3149fb374504376e" translate="yes" xml:space="preserve">
          <source>This method should be overridden by subclasses that wish to perform any kind of preprocessing for each block (paragraph) of POD documentation that appears in the input stream. The parameter &lt;code&gt;$text&lt;/code&gt; is the POD paragraph from the input file; and the parameter &lt;code&gt;$line_num&lt;/code&gt; is the line number for the beginning of the corresponding paragraph.</source>
          <target state="translated">このメソッドは、入力ストリームに表示されるPODドキュメントの各ブロック（段落）に対してあらゆる種類の前処理を実行するサブクラスによってオーバーライドされる必要があります。パラメータ &lt;code&gt;$text&lt;/code&gt; は、入力ファイルのPOD段落です。パラメータ &lt;code&gt;$line_num&lt;/code&gt; は、対応する段落の先頭の行番号です。</target>
        </trans-unit>
        <trans-unit id="517b86d5501e13cc5ca0478526d9e56418238e3c" translate="yes" xml:space="preserve">
          <source>This method should be overridden by subclasses to take the appropriate action when a POD command paragraph (denoted by a line beginning with &quot;=&quot;) is encountered. When such a POD directive is seen in the input, this method is called and is passed:</source>
          <target state="translated">このメソッドは、POD命令の段落(「=」で始まる行で示される)に遭遇したときに適切なアクションを取るために、サブクラスによってオーバーライドされなければなりません。そのようなPOD指令が入力に現れた場合、このメソッドが呼び出されて渡されます。</target>
        </trans-unit>
        <trans-unit id="4057fa0aee2966d0f3fb518e4370c12ff228c00a" translate="yes" xml:space="preserve">
          <source>This method should be overridden by subclasses to take the appropriate action when an interior sequence is encountered. An interior sequence is an embedded command within a block of text which appears as a command name (usually a single uppercase character) followed immediately by a string of text which is enclosed in angle brackets. This method is passed the sequence command &lt;code&gt;$seq_cmd&lt;/code&gt; and the corresponding text &lt;code&gt;$seq_arg&lt;/code&gt; . It is invoked by the &lt;b&gt;interpolate()&lt;/b&gt; method for each interior sequence that occurs in the string that it is passed. It should return the desired text string to be used in place of the interior sequence. The &lt;code&gt;$pod_seq&lt;/code&gt; argument is a reference to a &lt;code&gt;Pod::InteriorSequence&lt;/code&gt; object which contains further information about the interior sequence. Please see &lt;a href=&quot;inputobjects&quot;&gt;Pod::InputObjects&lt;/a&gt; for details if you need to access this additional information.</source>
          <target state="translated">このメソッドは、内部シーケンスに遭遇したときに適切なアクションを実行するために、サブクラスによってオーバーライドされる必要があります。内部シーケンスは、テキストブロック内に埋め込まれたコマンドで、コマンド名（通常は1つの大文字）の後に、山かっこで囲まれたテキスト文字列が続きます。このメソッドには、シーケンスコマンド &lt;code&gt;$seq_cmd&lt;/code&gt; および対応するテキスト &lt;code&gt;$seq_arg&lt;/code&gt; ます。これは、渡された文字列で発生する各内部シーケンスの&lt;b&gt;interpolate（）&lt;/b&gt;メソッドによって呼び出されます。内部シーケンスの代わりに使用する必要なテキスト文字列を返す必要があります。 &lt;code&gt;$pod_seq&lt;/code&gt; 引数への参照である &lt;code&gt;Pod::InteriorSequence&lt;/code&gt; 内部シーケンスに関する詳細情報を含むオブジェクト。この追加情報にアクセスする必要がある場合は、詳細について&lt;a href=&quot;inputobjects&quot;&gt;Pod :: InputObjects&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="429d3f42da5b40589bd5bfe3cdeaeea4b58f3cb7" translate="yes" xml:space="preserve">
          <source>This method takes a filename and does the following:</source>
          <target state="translated">このメソッドはファイル名を受け取り、次のような処理を行います。</target>
        </trans-unit>
        <trans-unit id="7d455696794a1091f3f69965ce8778b043cee526" translate="yes" xml:space="preserve">
          <source>This method takes an input filehandle (which is assumed to already be opened for reading) and reads the entire input stream looking for blocks (paragraphs) of POD documentation to be processed. If no first argument is given the default input filehandle &lt;code&gt;STDIN&lt;/code&gt; is used.</source>
          <target state="translated">このメソッドは、入力ファイルハンドル（すでに読み取り用に開かれていると想定されています）を取り、処理するPODドキュメントのブロック（段落）を探して入力ストリーム全体を読み取ります。最初の引数を指定しない場合、デフォルトの入力ファイルハンドル &lt;code&gt;STDIN&lt;/code&gt; が使用されます。</target>
        </trans-unit>
        <trans-unit id="5d21cbfa9655bea409751abece40beb185c2a106" translate="yes" xml:space="preserve">
          <source>This method takes an optional parameter, &lt;code&gt;$flush_type&lt;/code&gt; , that controls how the flushing will be carried out. By default the &lt;code&gt;$flush_type&lt;/code&gt; used is &lt;code&gt;Z_FINISH&lt;/code&gt; . Other valid values for &lt;code&gt;$flush_type&lt;/code&gt; are &lt;code&gt;Z_NO_FLUSH&lt;/code&gt; , &lt;code&gt;Z_SYNC_FLUSH&lt;/code&gt; , &lt;code&gt;Z_FULL_FLUSH&lt;/code&gt; and &lt;code&gt;Z_BLOCK&lt;/code&gt; . It is strongly recommended that you only set the &lt;code&gt;flush_type&lt;/code&gt; parameter if you fully understand the implications of what it does - overuse of &lt;code&gt;flush&lt;/code&gt; can seriously degrade the level of compression achieved. See the &lt;code&gt;zlib&lt;/code&gt; documentation for details.</source>
          <target state="translated">このメソッドは、フラッシュの実行方法を制御するオプションのパラメーター &lt;code&gt;$flush_type&lt;/code&gt; ます。デフォルトでは、使用される &lt;code&gt;$flush_type&lt;/code&gt; は &lt;code&gt;Z_FINISH&lt;/code&gt; です。以下のための他の有効な値は &lt;code&gt;$flush_type&lt;/code&gt; あり &lt;code&gt;Z_NO_FLUSH&lt;/code&gt; 、 &lt;code&gt;Z_SYNC_FLUSH&lt;/code&gt; 、 &lt;code&gt;Z_FULL_FLUSH&lt;/code&gt; と &lt;code&gt;Z_BLOCK&lt;/code&gt; 。 &lt;code&gt;flush_type&lt;/code&gt; の影響を完全に理解している場合にのみ、flush_typeパラメータを設定することを強くお勧めします。 &lt;code&gt;flush&lt;/code&gt; を使いすぎると、達成される圧縮レベルが大幅に低下する可能性があります。詳細については、 &lt;code&gt;zlib&lt;/code&gt; のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="fb30c692d9b64ebdba6036a9ab8caf9a45ad7a4f" translate="yes" xml:space="preserve">
          <source>This method takes an optional parameter, &lt;code&gt;$flush_type&lt;/code&gt;, that controls how the flushing will be carried out. By default the &lt;code&gt;$flush_type&lt;/code&gt; used is &lt;code&gt;Z_FINISH&lt;/code&gt;. Other valid values for &lt;code&gt;$flush_type&lt;/code&gt; are &lt;code&gt;Z_NO_FLUSH&lt;/code&gt;, &lt;code&gt;Z_SYNC_FLUSH&lt;/code&gt;, &lt;code&gt;Z_FULL_FLUSH&lt;/code&gt; and &lt;code&gt;Z_BLOCK&lt;/code&gt;. It is strongly recommended that you only set the &lt;code&gt;flush_type&lt;/code&gt; parameter if you fully understand the implications of what it does - overuse of &lt;code&gt;flush&lt;/code&gt; can seriously degrade the level of compression achieved. See the &lt;code&gt;zlib&lt;/code&gt; documentation for details.</source>
          <target state="translated">このメソッドは、フラッシュの実行方法を制御するオプションのパラメーター &lt;code&gt;$flush_type&lt;/code&gt; ます。デフォルトでは、使用される &lt;code&gt;$flush_type&lt;/code&gt; は &lt;code&gt;Z_FINISH&lt;/code&gt; です。以下のための他の有効な値は &lt;code&gt;$flush_type&lt;/code&gt; あり &lt;code&gt;Z_NO_FLUSH&lt;/code&gt; 、 &lt;code&gt;Z_SYNC_FLUSH&lt;/code&gt; 、 &lt;code&gt;Z_FULL_FLUSH&lt;/code&gt; と &lt;code&gt;Z_BLOCK&lt;/code&gt; 。強くあなただけ設定することをお勧めし &lt;code&gt;flush_type&lt;/code&gt; のの乱用-あなたは完全にそれが何をするかの意味を理解している場合、パラメータを &lt;code&gt;flush&lt;/code&gt; 真剣に達成された圧縮のレベルを低下させることができます。詳細については、 &lt;code&gt;zlib&lt;/code&gt; のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="9a36ff48f2f3559090075d4ecd3d184fea06bced" translate="yes" xml:space="preserve">
          <source>This method takes no arguments, it has the exact same effect as invoking &amp;lt;select()&amp;gt; with no arguments.</source>
          <target state="translated">このメソッドは引数を取らず、引数なしで&amp;lt;select（）&amp;gt;を呼び出すのとまったく同じ効果があります。</target>
        </trans-unit>
        <trans-unit id="21a6dff8df6ddbca7896a9686976cc84571da4fe" translate="yes" xml:space="preserve">
          <source>This method translates all text (including any embedded interior sequences) in the given text string &lt;code&gt;$text&lt;/code&gt; and returns the interpolated result. The parameter &lt;code&gt;$line_num&lt;/code&gt; is the line number corresponding to the beginning of &lt;code&gt;$text&lt;/code&gt; .</source>
          <target state="translated">このメソッドは、指定されたテキスト文字列 &lt;code&gt;$text&lt;/code&gt; 内のすべてのテキスト（埋め込まれた内部シーケンスを含む）を変換し、補間された結果を返します。パラメータ &lt;code&gt;$line_num&lt;/code&gt; は、 &lt;code&gt;$text&lt;/code&gt; 先頭に対応する行番号です。</target>
        </trans-unit>
        <trans-unit id="d98885f1731321cbbe841c4174d52925fb86ae4c" translate="yes" xml:space="preserve">
          <source>This method turns an arbitrary string into a valid XHTML ID attribute value. The rules enforced, following &lt;a href=&quot;http://webdesign.about.com/od/htmltags/a/aa031707.htm&quot;&gt;http://webdesign.about.com/od/htmltags/a/aa031707.htm&lt;/a&gt;, are:</source>
          <target state="translated">このメソッドは、任意の文字列を有効なXHTML ID属性値に変換します。&lt;a href=&quot;http://webdesign.about.com/od/htmltags/a/aa031707.htm&quot;&gt;http://webdesign.about.com/od/htmltags/a/aa031707.htm&lt;/a&gt;に従って適用されるルールは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="5d3c6a2354f8ed5d57f49370abc6615f8bbe3512" translate="yes" xml:space="preserve">
          <source>This method used to be useful back when Test::Builder worked on Perls before 5.6 which didn't have qr//. Now its pretty useless.</source>
          <target state="translated">このメソッドは、5.6以前のPerlsでTest::Builderがqr//を持たないPerlsで動作していた頃には便利でした。今ではかなり役に立たなくなっています。</target>
        </trans-unit>
        <trans-unit id="5ce2bae285dbd09666d07f99e460e4eebea8c753" translate="yes" xml:space="preserve">
          <source>This method uses &lt;code&gt;commands_quote&lt;/code&gt; to determine the correct quote. If &lt;code&gt;commands_quote&lt;/code&gt; is a space, no quoting will take place.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;commands_quote&lt;/code&gt; を使用して正しい引用を決定します。場合 &lt;code&gt;commands_quote&lt;/code&gt; は空間であり、引用何が行われません。</target>
        </trans-unit>
        <trans-unit id="475ff388d47d9ff8c537b04d4cf8fd2786ec177c" translate="yes" xml:space="preserve">
          <source>This method was added in v0.20 of Math::BigRat (May 2007).</source>
          <target state="translated">このメソッドは Math::BigRat の v0.20 (2007 年 5 月)で追加されました。</target>
        </trans-unit>
        <trans-unit id="a9fdbef062f1e260e975ac993cde1b7e7c35b43d" translate="yes" xml:space="preserve">
          <source>This method was added in v0.22 of Math::BigRat (April 2008).</source>
          <target state="translated">このメソッドは Math::BigRat の v0.22 (2008 年 4 月)で追加されました。</target>
        </trans-unit>
        <trans-unit id="4f274a73d8190736635c257c7c7cb3e3c0fe18c0" translate="yes" xml:space="preserve">
          <source>This method was added in v1.82 of Math::BigInt (April 2007).</source>
          <target state="translated">このメソッドは、Math::BigInt の v1.82 (2007年4月)で追加されました。</target>
        </trans-unit>
        <trans-unit id="892100fd26e628f38d9cdb9d5d762a8a6ee16072" translate="yes" xml:space="preserve">
          <source>This method was added in v1.84 of Math::BigInt (April 2007).</source>
          <target state="translated">このメソッドは、Math::BigInt の v1.84 (2007 年 4 月)で追加されました。</target>
        </trans-unit>
        <trans-unit id="def53de6390772e9ab517671e2de82585ed2894d" translate="yes" xml:space="preserve">
          <source>This method was added in v1.87 of Math::BigInt (June 2007).</source>
          <target state="translated">このメソッドは、Math::BigInt の v1.87 (2007年6月)で追加されました。</target>
        </trans-unit>
        <trans-unit id="e5821a661d4054cf93a3f0baee35e1a4e8ee9c19" translate="yes" xml:space="preserve">
          <source>This method will be called when the &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt; function is called.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt; 関数が呼び出されたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="33be8d090d52cdf9ebec70873885856aba821ff5" translate="yes" xml:space="preserve">
          <source>This method will be called when the &lt;code&gt;&lt;a href=&quot;functions/getc&quot;&gt;getc&lt;/a&gt;&lt;/code&gt; function is called.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;&lt;a href=&quot;functions/getc&quot;&gt;getc&lt;/a&gt;&lt;/code&gt; 関数が呼び出されたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="d3cb58ce3651b90ff56e3c1a01aa5df7e96bc1d2" translate="yes" xml:space="preserve">
          <source>This method will be called when the &lt;code&gt;eof&lt;/code&gt; function is called.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;eof&lt;/code&gt; 関数が呼び出されたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="a3e47fe88d4c0ab44cf85620365ca3f9e7b2c4ea" translate="yes" xml:space="preserve">
          <source>This method will be called when the &lt;code&gt;getc&lt;/code&gt; function is called.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;getc&lt;/code&gt; 関数が呼び出されたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="07abfda6230642bdc24b2988efac200062ab0904" translate="yes" xml:space="preserve">
          <source>This method will be called when the handle is closed via the &lt;code&gt;&lt;a href=&quot;functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">このメソッドは、ハンドルが &lt;code&gt;&lt;a href=&quot;functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; 関数によって閉じられたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="e3f4f5034957d7d4e9aa3a8edbd33a9e855059ad" translate="yes" xml:space="preserve">
          <source>This method will be called when the handle is closed via the &lt;code&gt;close&lt;/code&gt; function.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;close&lt;/code&gt; 関数を介してハンドルが閉じられたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="8c952116674febc1216a1fb0e4796db40ca65ad8" translate="yes" xml:space="preserve">
          <source>This method will be called when the handle is read from via the &lt;code&gt;&lt;a href=&quot;functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/sysread&quot;&gt;sysread&lt;/a&gt;&lt;/code&gt; functions.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;&lt;a href=&quot;functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;functions/sysread&quot;&gt;sysread&lt;/a&gt;&lt;/code&gt; 関数を介してハンドルが読み取られるときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="c2c8df89bf1dd475294a80263c1998064bad01a4" translate="yes" xml:space="preserve">
          <source>This method will be called when the handle is read from via the &lt;code&gt;read&lt;/code&gt; or &lt;code&gt;sysread&lt;/code&gt; functions.</source>
          <target state="translated">このメソッドは、ハンドルがread関数または &lt;code&gt;sysread&lt;/code&gt; 関数を介して &lt;code&gt;read&lt;/code&gt; れるときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="53bcf4b7992a6d18135efe380f6cf616566ace5a" translate="yes" xml:space="preserve">
          <source>This method will be called when the handle is written to via the &lt;code&gt;&lt;a href=&quot;functions/syswrite&quot;&gt;syswrite&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">このメソッドは、ハンドルが &lt;code&gt;&lt;a href=&quot;functions/syswrite&quot;&gt;syswrite&lt;/a&gt;&lt;/code&gt; 関数を介して書き込まれるときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="808d3e7324564412ae6c4c95a1b83f642b5294f8" translate="yes" xml:space="preserve">
          <source>This method will be called when the handle is written to via the &lt;code&gt;syswrite&lt;/code&gt; function.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;syswrite&lt;/code&gt; 関数を介してハンドルが書き込まれるときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="2f7eb1cf0cb3798f7407e75f4a0686ab61a556fd" translate="yes" xml:space="preserve">
          <source>This method will be triggered every time an element in the tied array is set (written). It takes two arguments beyond its self reference: the index at which we're trying to store something and the value we're trying to put there.</source>
          <target state="translated">このメソッドは、紐付けられた配列の要素がセット(書き込まれる)されるたびにトリガされます。これは、自己参照を超えて 2 つの引数を取ります:何かを保存しようとしているインデックスと、そこに置こうとしている値です。</target>
        </trans-unit>
        <trans-unit id="fef1865fb35cee1965cbfbe2864d43cfb61253d3" translate="yes" xml:space="preserve">
          <source>This method will be triggered every time an element in the tied hash is accessed (read). It takes one argument beyond its self reference: the key whose value we're trying to fetch.</source>
          <target state="translated">このメソッドは、紐付けられたハッシュの要素がアクセスされる(読み込まれる)たびにトリガされます。これは自己参照を超えて1つの引数を取ります:取得しようとしている値のキーです。</target>
        </trans-unit>
        <trans-unit id="6ff0eaa0013ee12dae761b1f3a38cc41d40d71c7" translate="yes" xml:space="preserve">
          <source>This method will be triggered every time an element in the tied hash is set (written). It takes two arguments beyond its self reference: the index at which we're trying to store something, and the value we're trying to put there.</source>
          <target state="translated">このメソッドは、紐付けられたハッシュの要素が設定(書き込まれる)されるたびにトリガされます。これは自己参照を超えた2つの引数を取ります:何かを格納しようとしているインデックスと、そこに置こうとしている値です。</target>
        </trans-unit>
        <trans-unit id="f154ed5d9dede0079ff14f755f8d64da0b6d8569" translate="yes" xml:space="preserve">
          <source>This method will be triggered every time an individual element the tied array is accessed (read). It takes one argument beyond its self reference: the index whose value we're trying to fetch.</source>
          <target state="translated">このメソッドは、紐付けられた配列の個々の要素がアクセス(読み込み)されるたびにトリガされます。このメソッドは、自己参照を超えて1つの引数を取ります:フェッチしようとしている値のインデックスです。</target>
        </trans-unit>
        <trans-unit id="ce4bdb5814566177219471512f35e981a551516b" translate="yes" xml:space="preserve">
          <source>This method will be triggered every time the tied handle is printed to with the &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print()&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/say&quot;&gt;say()&lt;/a&gt;&lt;/code&gt; functions. Beyond its self reference it also expects the list that was passed to the print function.</source>
          <target state="translated">このメソッドは、関連付けられたハンドルが &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print()&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;functions/say&quot;&gt;say()&lt;/a&gt;&lt;/code&gt; 関数またはsay（）関数で出力されるたびにトリガーされます。自己参照以外に、print関数に渡されたリストも必要です。</target>
        </trans-unit>
        <trans-unit id="46e361c76a8fe326ef26947ed7b27ef6314ab7da" translate="yes" xml:space="preserve">
          <source>This method will be triggered every time the tied handle is printed to with the &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf()&lt;/a&gt;&lt;/code&gt; function. Beyond its self reference it also expects the format and list that was passed to the printf function.</source>
          <target state="translated">このメソッドは、関連付けられたハンドルが &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf()&lt;/a&gt;&lt;/code&gt; 関数で出力されるたびにトリガーされます。自己参照以外に、printf関数に渡された形式とリストも必要です。</target>
        </trans-unit>
        <trans-unit id="6af30ad096d6acfeecb452b74adb4a3282b5cd33" translate="yes" xml:space="preserve">
          <source>This method will be triggered every time the tied handle is printed to with the &lt;code&gt;print()&lt;/code&gt; or &lt;code&gt;say()&lt;/code&gt; functions. Beyond its self reference it also expects the list that was passed to the print function.</source>
          <target state="translated">このメソッドは、タイのハンドルが &lt;code&gt;print()&lt;/code&gt; または &lt;code&gt;say()&lt;/code&gt; 関数で出力されるたびにトリガーされます。自己参照以外に、print関数に渡されたリストも必要です。</target>
        </trans-unit>
        <trans-unit id="743722ad4d09e8c7a81e0e8d919d08195ccf21c8" translate="yes" xml:space="preserve">
          <source>This method will be triggered every time the tied handle is printed to with the &lt;code&gt;printf()&lt;/code&gt; function. Beyond its self reference it also expects the format and list that was passed to the printf function.</source>
          <target state="translated">このメソッドは、タイハンドルが &lt;code&gt;printf()&lt;/code&gt; 関数で出力されるたびにトリガーされます。自己参照以外に、printf関数に渡されたフォーマットとリストも必要です。</target>
        </trans-unit>
        <trans-unit id="4d2309a54c3a525e60bc8a57c49ad44a6f62e89e" translate="yes" xml:space="preserve">
          <source>This method will be triggered every time the tied variable is accessed (read). It takes no arguments beyond its self reference, which is the object representing the scalar we're dealing with. Because in this case we're using just a SCALAR ref for the tied scalar object, a simple $$self allows the method to get at the real value stored there. In our example below, that real value is the process ID to which we've tied our variable.</source>
          <target state="translated">このメソッドは、紐付けられた変数にアクセス(読み込み)されるたびにトリガされます。このメソッドはself参照を超えた引数を取りません。このケースでは、紐付けられたスカラオブジェクトにSCALAR refを使用しているので、単純な$$selfを使用することで、メソッドはそこに格納されている実際の値を取得することができます。下の例では、この実値は変数を紐付けたプロセスIDです。</target>
        </trans-unit>
        <trans-unit id="074aba193a7d4ab7fc2d92f3649243f7a2526fbd" translate="yes" xml:space="preserve">
          <source>This method will be triggered every time the tied variable is set (assigned). Beyond its self reference, it also expects one (and only one) argument: the new value the user is trying to assign. Don't worry about returning a value from STORE; the semantic of assignment returning the assigned value is implemented with FETCH.</source>
          <target state="translated">このメソッドは、結び付けられた変数が設定(代入)されるたびにトリガされます。自己参照を超えて、このメソッドは1つの(そして1つだけの)引数を期待しています:ユーザーが代入しようとしている新しい値です。STOREから値を返すことを心配する必要はありません;代入された値を返す代入のセマンティックはFETCHで実装されています。</target>
        </trans-unit>
        <trans-unit id="a70c828d5225a812501600b7ba6a4a618714e8ab" translate="yes" xml:space="preserve">
          <source>This method will be triggered when the &lt;code&gt;&lt;a href=&quot;functions/untie&quot;&gt;untie&lt;/a&gt;&lt;/code&gt; occurs. This can be useful if the class needs to know when no further calls will be made. (Except DESTROY of course.) See &lt;a href=&quot;#The-untie-Gotcha&quot;&gt;The untie Gotcha&lt;/a&gt; below for more details.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;&lt;a href=&quot;functions/untie&quot;&gt;untie&lt;/a&gt;&lt;/code&gt; が発生したときにトリガーされます。これは、クラスがそれ以上の呼び出しが行われないときを知る必要がある場合に役立ちます。（もちろんDESTROYを除きます。）詳細については&lt;a href=&quot;#The-untie-Gotcha&quot;&gt;、&lt;/a&gt;以下のuntie Gotchaを参照してください。</target>
        </trans-unit>
        <trans-unit id="2320a83af1339239a394fc9bed901eb3791c7ba6" translate="yes" xml:space="preserve">
          <source>This method will be triggered when the &lt;code&gt;untie&lt;/code&gt; occurs. This can be useful if the class needs to know when no further calls will be made. (Except DESTROY of course.) See &lt;a href=&quot;#The-untie-Gotcha&quot;&gt;&quot;The &lt;code&gt;untie&lt;/code&gt; Gotcha&quot;&lt;/a&gt; below for more details.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;untie&lt;/code&gt; が発生したときにトリガーされます。これは、クラスがそれ以上呼び出しが行われない時期を知る必要がある場合に役立ちます。（もちろんDESTROY除きます。）を参照してください&lt;a href=&quot;#The-untie-Gotcha&quot;&gt;「 &lt;code&gt;untie&lt;/code&gt; ガッチャ」の&lt;/a&gt;詳細は以下。</target>
        </trans-unit>
        <trans-unit id="c6dadf6ee9215d45834b1ebd72a2a25ea540b456" translate="yes" xml:space="preserve">
          <source>This method will be triggered when the tied variable needs to be destructed. As with other object classes, such a method is seldom necessary, because Perl deallocates its moribund object's memory for you automatically--this isn't C++, you know. We'll use a DESTROY method here for debugging purposes only.</source>
          <target state="translated">このメソッドは、結びつけられた変数を破棄する必要があるときにトリガされます。他のオブジェクトクラスと同様に、このようなメソッドはめったに必要ありません。なぜなら、Perlは自動的にその衰えたオブジェクトのメモリを解放するからです。ここではデバッグのためだけに DESTROY メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="aba37b5cce6ea3c8466dd8e8d0896cfdf208ff19" translate="yes" xml:space="preserve">
          <source>This method will be triggered when the tied variable needs to be destructed. As with the scalar tie class, this is almost never needed in a language that does its own garbage collection, so this time we'll just leave it out.</source>
          <target state="translated">このメソッドは、紐付けられた変数を破棄する必要があるときにトリガされます。スカラタイクラスと同様に、これは独自のガベージコレクションを行う言語ではほとんど必要ありません。</target>
        </trans-unit>
        <trans-unit id="1a30c4c1dc9863704c12fdf1f1b5872e08e0156b" translate="yes" xml:space="preserve">
          <source>This method will be triggered when the user is going to iterate through the hash, such as via a keys() or each() call.</source>
          <target state="translated">このメソッドは、keys()や each()のように、ユーザがハッシュを反復処理しようとしたときにトリガされます。</target>
        </trans-unit>
        <trans-unit id="40a2e00fab75d6d886ea418ffd88f8aa1dbe8119" translate="yes" xml:space="preserve">
          <source>This method will be triggered when the user is going to iterate through the hash, such as via a keys(), values(), or each() call.</source>
          <target state="translated">このメソッドは、key()、values()、または each()のように、ユーザがハッシュを反復処理しようとしたときにトリガされます。</target>
        </trans-unit>
        <trans-unit id="241be65c4fe89a7db745cd5e6028ee4cea0a4bd5" translate="yes" xml:space="preserve">
          <source>This method will do a file transfer between two remote ftp servers. If &lt;code&gt;DEST_FILE&lt;/code&gt; is omitted then the leaf name of &lt;code&gt;SRC_FILE&lt;/code&gt; will be used.</source>
          <target state="translated">このメソッドは、2つのリモートFTPサーバー間でファイル転送を行います。場合 &lt;code&gt;DEST_FILE&lt;/code&gt; が省略されたの葉の名前 &lt;code&gt;SRC_FILE&lt;/code&gt; が使用されます。</target>
        </trans-unit>
        <trans-unit id="714241362af6626714a493d5da28a5f3831d1838" translate="yes" xml:space="preserve">
          <source>This method will get/set the corresponding parse-tree of the interior sequence's text.</source>
          <target state="translated">このメソッドは,内部シーケンスのテキストの対応する構文木を取得/設定します.</target>
        </trans-unit>
        <trans-unit id="81f73213adc2e84a3c6f2373dbd483c50f803f34" translate="yes" xml:space="preserve">
          <source>This method will get/set the corresponding parse-tree of the paragraph's text.</source>
          <target state="translated">このメソッドは、段落のテキストの対応する構文解析木を取得/設定します。</target>
        </trans-unit>
        <trans-unit id="e9978ed2996dd9bcc230654360a798a867715edb" translate="yes" xml:space="preserve">
          <source>This method will read the named file and deserialize it to a data structure, determining whether it should be JSON or YAML based on the filename. The file will be read using the &quot;:utf8&quot; IO layer.</source>
          <target state="translated">このメソッドは、名前のついたファイルを読み込んでデータ構造にデシリアライズし、ファイル名に基づいてJSONかYAMLかを決定します。ファイルは &quot;:utf8&quot; IO レイヤーを使って読み込まれます。</target>
        </trans-unit>
        <trans-unit id="b67738b0ceee5f0e621228df6d40624bf3ba896e" translate="yes" xml:space="preserve">
          <source>This method will reset the deflation object &lt;code&gt;$d&lt;/code&gt; . It can be used when you are compressing multiple data streams and want to use the same object to compress each of them. It should only be used once the previous data stream has been flushed successfully, i.e. a call to &lt;code&gt;$d-&amp;gt;flush(Z_FINISH)&lt;/code&gt; has returned &lt;code&gt;Z_OK&lt;/code&gt; .</source>
          <target state="translated">このメソッドは、デフレオブジェクト &lt;code&gt;$d&lt;/code&gt; をリセットします。複数のデータストリームを圧縮していて、同じオブジェクトを使用してそれぞれを圧縮する場合に使用できます。以前のデータストリームが正常にフラッシュされた場合、つまり &lt;code&gt;$d-&amp;gt;flush(Z_FINISH)&lt;/code&gt; 呼び出しがZ_OKを返した場合に &lt;code&gt;Z_OK&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="712ee53e5b0c4e0aae2bb7946407fb40095db000" translate="yes" xml:space="preserve">
          <source>This method will reset the deflation object &lt;code&gt;$d&lt;/code&gt;. It can be used when you are compressing multiple data streams and want to use the same object to compress each of them. It should only be used once the previous data stream has been flushed successfully, i.e. a call to &lt;code&gt;$d-&amp;gt;flush(Z_FINISH)&lt;/code&gt; has returned &lt;code&gt;Z_OK&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、デフレーションオブジェクト &lt;code&gt;$d&lt;/code&gt; をリセットします。複数のデータストリームを圧縮していて、同じオブジェクトを使用してそれぞれを圧縮する場合に使用できます。前のデータストリームが正常にフラッシュされた場合、つまり &lt;code&gt;$d-&amp;gt;flush(Z_FINISH)&lt;/code&gt; 呼び出しがZ_OKを返した場合に &lt;code&gt;Z_OK&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="c896817c407b0236207a4f8181caaf53efac5199" translate="yes" xml:space="preserve">
          <source>This method will reset the inflation object &lt;code&gt;$i&lt;/code&gt; . It can be used when you are uncompressing multiple data streams and want to use the same object to uncompress each of them.</source>
          <target state="translated">このメソッドは、インフレオブジェクト &lt;code&gt;$i&lt;/code&gt; をリセットします。複数のデータストリームを圧縮解除していて、同じオブジェクトを使用してそれぞれを圧縮解除する場合に使用できます。</target>
        </trans-unit>
        <trans-unit id="97c63a4cc6642689474dcac8d841e924f47f9df6" translate="yes" xml:space="preserve">
          <source>This method will reset the inflation object &lt;code&gt;$i&lt;/code&gt;. It can be used when you are uncompressing multiple data streams and want to use the same object to uncompress each of them.</source>
          <target state="translated">このメソッドは、インフレーションオブジェクト &lt;code&gt;$i&lt;/code&gt; をリセットします。複数のデータストリームを解凍していて、同じオブジェクトを使用してそれぞれを解凍したい場合に使用できます。</target>
        </trans-unit>
        <trans-unit id="105ad0604f1ec5de22899d40a47afc4c0ebd09fb" translate="yes" xml:space="preserve">
          <source>This method will return a &lt;a href=&quot;TAP::Parser::Result&quot;&gt;TAP::Parser::Result&lt;/a&gt; object representing the current line of TAP.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;TAP::Parser::Result&quot;&gt;TAP&lt;/a&gt;の現在の行を表すTAP :: Parser :: Resultオブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="c910df5717be7f7845368e614ada212ccc95c585" translate="yes" xml:space="preserve">
          <source>This method will return a &lt;a href=&quot;result&quot;&gt;TAP::Parser::Result&lt;/a&gt; object representing the current line of TAP.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;result&quot;&gt;TAP&lt;/a&gt;の現在の行を表すTAP :: Parser :: Resultオブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="94dd0495b55dbb9479c740e8c7707434102ef2b3" translate="yes" xml:space="preserve">
          <source>This method will return the</source>
          <target state="translated">このメソッドは</target>
        </trans-unit>
        <trans-unit id="64b72f6b7b9c90292fdf0c07acf00371c342b31f" translate="yes" xml:space="preserve">
          <source>This method will return the corresponding text of the paragraph.</source>
          <target state="translated">このメソッドは、段落の対応するテキストを返します。</target>
        </trans-unit>
        <trans-unit id="ab1780bb79394a56eb62561ff6bce59239ad7057" translate="yes" xml:space="preserve">
          <source>This method will validate facet data and return a list of errors. If no errors are found this will return an empty list.</source>
          <target state="translated">このメソッドは、ファセットデータを検証し、エラーのリストを返します。エラーが見つからない場合は、空のリストを返します。</target>
        </trans-unit>
        <trans-unit id="eb400e4423b1637ce4c15ebb34457f31a6dff2be" translate="yes" xml:space="preserve">
          <source>This method, also added in 5.22, returns the ID of the outer padlist.</source>
          <target state="translated">このメソッドは5.22で追加されたもので、外側のパッドリストのIDを返します。</target>
        </trans-unit>
        <trans-unit id="4592c3f20e832c80ee7755d708e2fc413aad3a8b" translate="yes" xml:space="preserve">
          <source>This method, introduced in 5.22, returns an ID shared by clones of the same padlist.</source>
          <target state="translated">5.22で導入されたこのメソッドは、同じパッドリストのクローンで共有されているIDを返します。</target>
        </trans-unit>
        <trans-unit id="9809e060290c8d05a80c630d780720e4ef068203" translate="yes" xml:space="preserve">
          <source>This method, introduced in 5.22, returns the B::PADNAMELIST. It is equivalent to &lt;code&gt;ARRAYelt&lt;/code&gt; with a 0 argument.</source>
          <target state="translated">5.22で導入されたこのメソッドは、B :: PADNAMELISTを返します。引数が0の &lt;code&gt;ARRAYelt&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="6e85228faab0626451baa8274321e8bb4a24e677" translate="yes" xml:space="preserve">
          <source>This method, which just calls &lt;code&gt;B::Concise::b_terse&lt;/code&gt;, has been deprecated, and disappeared in Perl 5.28. Please use &lt;code&gt;B::Concise&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;B::Concise::b_terse&lt;/code&gt; 呼び出すだけのこのメソッドは非推奨になり、Perl5.28では廃止されました。代わりに &lt;code&gt;B::Concise&lt;/code&gt; 使用してください。</target>
        </trans-unit>
        <trans-unit id="29b87abd8043418845a4e29d3099fa81c542084b" translate="yes" xml:space="preserve">
          <source>This model is also handy for a form of recursive programming where, rather than having a subroutine call itself, it instead creates another thread. Prime and Fibonacci generators both map well to this form of the pipeline model. (A version of a prime number generator is presented later on.)</source>
          <target state="translated">このモデルは、サブルーチン自体を呼び出すのではなく、別のスレッドを作成するという再帰的なプログラミングにも便利です。素数発生器とフィボナッチ発生器はどちらもこの形式のパイプラインモデルによく対応しています。(素数生成器のバージョンは後ほど紹介します)。</target>
        </trans-unit>
        <trans-unit id="30009f920550802cc665953dfad42c7d9264746f" translate="yes" xml:space="preserve">
          <source>This model is common in GUI and server programs, where a main thread waits for some event and then passes that event to the appropriate worker threads for processing. Once the event has been passed on, the boss thread goes back to waiting for another event.</source>
          <target state="translated">このモデルはGUIやサーバープログラムでよく見られるもので、メインスレッドが何らかのイベントを待ち、そのイベントを適切なワーカースレッドに渡して処理を行います。イベントが渡されると、ボススレッドは別のイベントを待つことに戻ります。</target>
        </trans-unit>
        <trans-unit id="b15bc8cde549f860c8eb7d12b3582c3e0ea39cf3" translate="yes" xml:space="preserve">
          <source>This model is particularly useful if the system running the program will distribute multiple threads across different processors. It can also be useful in ray tracing or rendering engines, where the individual threads can pass on interim results to give the user visual feedback.</source>
          <target state="translated">このモデルは、プログラムを実行しているシステムが異なるプロセッサに複数のスレッドを分散させる場合に特に有用です。また、レイトレーシングやレンダリングエンジンでは、個々のスレッドが暫定的な結果を渡してユーザーに視覚的なフィードバックを与えることができるので便利です。</target>
        </trans-unit>
        <trans-unit id="a46d487d5e105c40547660dc27acaa14d80672b3" translate="yes" xml:space="preserve">
          <source>This model makes the most sense if you have multiple processors so two or more threads will be executing in parallel, though it can often make sense in other contexts as well. It tends to keep the individual tasks small and simple, as well as allowing some parts of the pipeline to block (on I/O or system calls, for example) while other parts keep going. If you're running different parts of the pipeline on different processors you may also take advantage of the caches on each processor.</source>
          <target state="translated">このモデルは、複数のプロセッサを使用していて、2つ以上のスレッドが並列に実行される場合に最も理にかなっていますが、他のコンテキストでも意味をなすことがあります。このモデルは、個々のタスクを小さくシンプルに保つ傾向があり、他の部分が実行を続けている間、パイプラインの一部が(例えば、I/O やシステムコールなどで)ブロックされることを許容します。パイプラインの異なる部分を異なるプロセッサで実行している場合は、各プロセッサのキャッシュを利用することもできます。</target>
        </trans-unit>
        <trans-unit id="ca5c3fc9e826014a4bf6c25dd9dfaa294e403640" translate="yes" xml:space="preserve">
          <source>This modifier is automatically selected by default when none of the others are, so yet another name for it is &quot;Default&quot;.</source>
          <target state="translated">この修飾子は、他の修飾子が選択されていない場合、デフォルトで自動的に選択されます。</target>
        </trans-unit>
        <trans-unit id="c04617ccf79d65516875370f2175f88d3d4536a0" translate="yes" xml:space="preserve">
          <source>This modifier is not portable, so its use should be restricted to &lt;code&gt;PerlIO_printf()&lt;/code&gt;.</source>
          <target state="translated">この修飾子は移植性がないため、その使用は &lt;code&gt;PerlIO_printf()&lt;/code&gt; に制限する必要があります。</target>
        </trans-unit>
        <trans-unit id="7d496a068117111419859bc00c9612b716988f03" translate="yes" xml:space="preserve">
          <source>This modifier is useful for people who only incidentally use Unicode, and who do not wish to be burdened with its complexities and security concerns.</source>
          <target state="translated">この修飾子は、偶発的にしかUnicodeを使用しない人や、その複雑さやセキュリティ上の懸念を重荷にしたくない人に有用です。</target>
        </trans-unit>
        <trans-unit id="0e5335d13a0034ff0e79330d63821913e0ac8c3f" translate="yes" xml:space="preserve">
          <source>This modifier may be specified to be the default by &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature
'unicode_strings&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale ':not_characters'&lt;/code&gt; , or &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use VERSION&lt;/a&gt;&lt;/code&gt; (or higher), but see &lt;a href=&quot;#Which-character-set-modifier-is-in-effect%3f&quot;&gt;Which character set modifier is in effect?&lt;/a&gt;.</source>
          <target state="translated">この修飾子は、によってデフォルトに指定することができ &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'unicode_strings&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale ':not_characters'&lt;/code&gt; 、または &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use VERSION&lt;/a&gt;&lt;/code&gt; （またはそれ以上）が、参照&lt;a href=&quot;#Which-character-set-modifier-is-in-effect%3f&quot;&gt;効果にある文字セット修飾子？&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4e12be54768ee3b0c57bff3f17db521cb0aa4207" translate="yes" xml:space="preserve">
          <source>This modifier may be specified to be the default by &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; , but see &lt;a href=&quot;#Which-character-set-modifier-is-in-effect%3f&quot;&gt;Which character set modifier is in effect?&lt;/a&gt;.</source>
          <target state="translated">この修飾子は &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; によってデフォルトになるように指定できますが、&lt;a href=&quot;#Which-character-set-modifier-is-in-effect%3f&quot;&gt;どの文字セット修飾子が有効ですか？を&lt;/a&gt;参照してください。。</target>
        </trans-unit>
        <trans-unit id="7947231e9d8ba8a56b871805ba4f83e34edd5a3b" translate="yes" xml:space="preserve">
          <source>This modifier may be specified to be the default by &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re '/a'&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re '/aa'&lt;/code&gt; . If you do so, you may actually have occasion to use the &lt;code&gt;/u&lt;/code&gt; modifier explicitly if there are a few regular expressions where you do want full Unicode rules (but even here, it's best if everything were under feature &lt;code&gt;&quot;unicode_strings&quot;&lt;/code&gt; , along with the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re '/aa'&lt;/code&gt; ). Also see &lt;a href=&quot;#Which-character-set-modifier-is-in-effect%3f&quot;&gt;Which character set modifier is in effect?&lt;/a&gt;.</source>
          <target state="translated">この修飾子は、によってデフォルトに指定することができ &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re '/a'&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re '/aa'&lt;/code&gt; 。そうする場合、完全なUnicodeルールが必要な正規表現がいくつかある場合は、実際に &lt;code&gt;/u&lt;/code&gt; 修飾子を明示的に使用する機会があります（ただし、ここでも、すべてが機能 &lt;code&gt;&quot;unicode_strings&quot;&lt;/code&gt; の下にあり、 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re '/aa'&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;使用してください&lt;/a&gt;）。&lt;a href=&quot;#Which-character-set-modifier-is-in-effect%3f&quot;&gt;有効な文字セット修飾子&lt;/a&gt;も参照してください。。</target>
        </trans-unit>
        <trans-unit id="a33069e1e40dd1d406cb06f4820e8365f86b6a18" translate="yes" xml:space="preserve">
          <source>This modifier may be specified to be the default by &lt;code&gt;use feature 'unicode_strings&lt;/code&gt;, &lt;code&gt;use locale ':not_characters'&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;perlfunc#use-VERSION&quot;&gt;use 5.012&lt;/a&gt;&lt;/code&gt; (or higher), but see &lt;a href=&quot;#Which-character-set-modifier-is-in-effect%3F&quot;&gt;&quot;Which character set modifier is in effect?&quot;&lt;/a&gt;.</source>
          <target state="translated">この修飾子は、 &lt;code&gt;use feature 'unicode_strings&lt;/code&gt; &lt;code&gt;use locale ':not_characters'&lt;/code&gt; 、ロケール '：not_characters'を &lt;code&gt;&lt;a href=&quot;perlfunc#use-VERSION&quot;&gt;use 5.012&lt;/a&gt;&lt;/code&gt; か、5.012（またはそれ以降）を使用することでデフォルトとして指定できますが、&lt;a href=&quot;#Which-character-set-modifier-is-in-effect%3F&quot;&gt;「どの文字セット修飾子が有効ですか？」を&lt;/a&gt;参照してください。。</target>
        </trans-unit>
        <trans-unit id="2e323f49369cfd817dd3ab5eb35782378466587d" translate="yes" xml:space="preserve">
          <source>This modifier may be specified to be the default by &lt;code&gt;use locale&lt;/code&gt;, but see &lt;a href=&quot;#Which-character-set-modifier-is-in-effect%3F&quot;&gt;&quot;Which character set modifier is in effect?&quot;&lt;/a&gt;.</source>
          <target state="translated">この修飾子は、 &lt;code&gt;use locale&lt;/code&gt; を使用してデフォルトとして指定できますが、&lt;a href=&quot;#Which-character-set-modifier-is-in-effect%3F&quot;&gt;「どの文字セット修飾子が有効ですか？」を&lt;/a&gt;参照してください。。</target>
        </trans-unit>
        <trans-unit id="e6e892a0b349e1ef5808e5c9bed02cfeaaecfdda" translate="yes" xml:space="preserve">
          <source>This modifier may be specified to be the default by &lt;code&gt;use re '/a'&lt;/code&gt; or &lt;code&gt;use re '/aa'&lt;/code&gt;. If you do so, you may actually have occasion to use the &lt;code&gt;/u&lt;/code&gt; modifier explicitly if there are a few regular expressions where you do want full Unicode rules (but even here, it's best if everything were under feature &lt;code&gt;&quot;unicode_strings&quot;&lt;/code&gt;, along with the &lt;code&gt;use re '/aa'&lt;/code&gt;). Also see &lt;a href=&quot;#Which-character-set-modifier-is-in-effect%3F&quot;&gt;&quot;Which character set modifier is in effect?&quot;&lt;/a&gt;.</source>
          <target state="translated">この修飾子は、 &lt;code&gt;use re '/a'&lt;/code&gt; または &lt;code&gt;use re '/aa'&lt;/code&gt; 使用してデフォルトとして指定できます。その場合、あなたが実際に使用する機会を持っていること &lt;code&gt;/u&lt;/code&gt; 修飾子明示したいんいくつかの正規表現が存在する場合、完全なUnicodeのルール（それでもここですべてが機能の下にあった場合、それが最善だ &lt;code&gt;&quot;unicode_strings&quot;&lt;/code&gt; と一緒に、 &lt;code&gt;use re '/aa'&lt;/code&gt; ）。&lt;a href=&quot;#Which-character-set-modifier-is-in-effect%3F&quot;&gt;「どの文字セット修飾子が有効ですか？」&lt;/a&gt;も参照してください。。</target>
        </trans-unit>
        <trans-unit id="612208176f5e5f15f70f9fe87ffb9885ed3fb4f8" translate="yes" xml:space="preserve">
          <source>This modifier means to use the &quot;Default&quot; native rules of the platform except when there is cause to use Unicode rules instead, as follows:</source>
          <target state="translated">この修飾子は、代わりにUnicodeルールを使用する必要がある場合を除き、プラットフォームの「デフォルト」ネイティブルールを使用することを意味します。</target>
        </trans-unit>
        <trans-unit id="c88a880096800aee300b8b7d7d4d916283e4a60a" translate="yes" xml:space="preserve">
          <source>This modifier stands for ASCII-restrict (or ASCII-safe). This modifier may be doubled-up to increase its effect.</source>
          <target state="translated">この修飾子は、ASCII-restrict(またはASCII-safe)の略です。この修飾子は、その効果を高めるためにダブルアップすることができます。</target>
        </trans-unit>
        <trans-unit id="749227e1bbfa4aaec7c32f6b70520da88bebf428" translate="yes" xml:space="preserve">
          <source>This modifier stands for ASCII-restrict (or ASCII-safe). This modifier, unlike the others, may be doubled-up to increase its effect.</source>
          <target state="translated">この修飾子は、ASCII-restrict(またはASCII-safe)の略です。この修飾子は他の修飾子とは異なり、効果を高めるためにダブルアップすることができます。</target>
        </trans-unit>
        <trans-unit id="d4333bd9c8e1ecf2d74d135cfc1c019d27ec9a46" translate="yes" xml:space="preserve">
          <source>This modifies the Test::Builder internals in many ways. A better was to accomplish the goal of this module is to write your own subtest function.</source>
          <target state="translated">これは、多くの方法で Test::Builder の内部を変更します。このモジュールの目的を達成するためのより良い方法は、独自のサブテスト関数を書くことです。</target>
        </trans-unit>
        <trans-unit id="fa6de4fa0b87cce4f41c3c3e6b2f399a24f53e8f" translate="yes" xml:space="preserve">
          <source>This module abstracts and provides all of the hooks into Perl internal debugging functionality, so that various implementations of Perl debuggers (or packages that want to simply get at the &quot;privileged&quot; debugging data) can all benefit from the development of this common code. Currently used by Swat, the perl/Tk GUI debugger.</source>
          <target state="translated">このモジュールは、Perl の内部デバッグ機能へのすべてのフックを抽象化して提供し、Perl デバッガのさまざまな実装 (または単に「特権的」なデバッグデータを取得したいパッケージ)が、この共通コードの開発から恩恵を受けることができるようにします。現在は Swat が使用している perl/TK GUI デバッガ。</target>
        </trans-unit>
        <trans-unit id="6875f545409eef33a68dd7123f3a8648204e39c4" translate="yes" xml:space="preserve">
          <source>This module allows one to set this attribute on a subroutine that is already defined. For Perl subroutines (XSUBs are fine), it may or may not do what you want, depending on the code inside the subroutine, with details subject to change in future Perl versions. You may run into problems with lvalue context not being propagated properly into the subroutine, or maybe even assertion failures. For this reason, a warning is emitted if warnings are enabled. In other words, you should only do this if you really know what you are doing. You have been warned.</source>
          <target state="translated">このモジュールは、既に定義されているサブルーチンにこの属性を設定することを可能にします。Perlのサブルーチン(XSUBでも問題ありません)では、サブルーチン内部のコードに依存して、あなたが望むようなことができるかもしれませんし、できないかもしれません。lvalueのコンテキストがサブルーチンに適切に伝搬されない問題に遭遇するかもしれませんし、アサーションの失敗に遭遇するかもしれません。このため、警告が有効になっている場合には警告が表示されます。言い換えれば、自分が何をしているのか本当に分かっている場合にのみ、これを行うべきです。警告が出ています。</target>
        </trans-unit>
        <trans-unit id="a965ba5c24e8c32086e33820dca8017e296c7bac" translate="yes" xml:space="preserve">
          <source>This module also adds a stack trace to the error message when perl dies. This is useful for pinpointing what caused the death. The &lt;b&gt;-traceonly&lt;/b&gt; (or just &lt;b&gt;-t&lt;/b&gt;) flag turns off the explanations of warning messages leaving just the stack traces. So if your script is dieing, run it again with</source>
          <target state="translated">このモジュールは、perlが停止したときに、スタックトレースをエラーメッセージに追加します。これは、死の原因を特定するのに役立ちます。&lt;b&gt;-traceonly&lt;/b&gt;（または単に&lt;b&gt;-t&lt;/b&gt;）フラグターンだけのスタックトレースを残し警告メッセージの説明オフ。したがって、スクリプトが停止している場合は、次のコマンドでもう一度実行します。</target>
        </trans-unit>
        <trans-unit id="8f7fb6f3dfdd280d1b2872ffca7de6a38c89ca71" translate="yes" xml:space="preserve">
          <source>This module also provides a function &lt;code&gt;I18N::LangTags::List::is_decent( &lt;i&gt;langtag&lt;/i&gt; )&lt;/code&gt; that returns true iff the language tag is syntactically valid and is for general use (like &quot;fr&quot; or &quot;fr-ca&quot;, below). That is, it returns false for tags that are syntactically invalid and for tags, like &quot;aus&quot;, that are listed in brackets below. This function is not exported.</source>
          <target state="translated">このモジュールは、 &lt;code&gt;I18N::LangTags::List::is_decent( &lt;i&gt;langtag&lt;/i&gt; )&lt;/code&gt; 関数も提供します。これは、言語タグが構文的に有効であり、一般的に使用される場合（下記の「fr」または「fr-ca」など）、trueを返します。つまり、構文的に無効なタグや、「aus」など、以下の括弧内にリストされているタグに対してはfalseを返します。この関数はエクスポートされません。</target>
        </trans-unit>
        <trans-unit id="35c9fcef6d8c497b285988252e5e12636887688f" translate="yes" xml:space="preserve">
          <source>This module and its competitor, the CPANPLUS module, are both much cooler than the other. CPAN.pm is older. CPANPLUS was designed to be more modular, but it was never intended to be compatible with CPAN.pm.</source>
          <target state="translated">このモジュールとそのライバルであるCPANPLUSモジュールは、どちらもかなり涼しくなっています。CPAN.pmの方が古い。CPANPLUSはよりモジュール化されるように設計されていますが、CPAN.pmとの互換性を意図したものではありませんでした。</target>
        </trans-unit>
        <trans-unit id="784f2f639e9afabf2dc275e208777379339cfa1d" translate="yes" xml:space="preserve">
          <source>This module attempts to be squeaky clean w.r.t &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict;&lt;/code&gt; and when warnings are enabled.</source>
          <target state="translated">このモジュールはきちんとしたクリーンなwrt &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict;&lt;/code&gt; 試みます。警告が有効になっている場合。</target>
        </trans-unit>
        <trans-unit id="99015cf6cbe9c998b9b79c332cc6306a7b24d6fc" translate="yes" xml:space="preserve">
          <source>This module attempts to be squeaky clean w.r.t &lt;code&gt;use strict;&lt;/code&gt; and when warnings are enabled.</source>
          <target state="translated">このモジュールは、 &lt;code&gt;use strict;&lt;/code&gt; することできしむようにクリーンにしようとします。警告が有効になっている場合。</target>
        </trans-unit>
        <trans-unit id="004ba23e4c1d9e020129a075fb1542d515c8beb8" translate="yes" xml:space="preserve">
          <source>This module by Jos Boumans &amp;lt;kane@cpan.org&amp;gt;.</source>
          <target state="translated">このモジュールはJos Boumans &amp;lt;kane@cpan.org&amp;gt;によるものです。</target>
        </trans-unit>
        <trans-unit id="97238c429acb2a106f71561828a9705c17f2cd68" translate="yes" xml:space="preserve">
          <source>This module can be used to check that the perl C API is behaving correctly. This module provides test functions and an associated test script that verifies the output.</source>
          <target state="translated">このモジュールは、perl C APIが正しく動作しているかどうかをチェックするために使用することができます。このモジュールは、テスト関数と、出力を検証する関連するテストスクリプトを提供します。</target>
        </trans-unit>
        <trans-unit id="3512e67f1197d03fbeb001853d009060532cfa22" translate="yes" xml:space="preserve">
          <source>This module can build the C portions of Perl modules by invoking the appropriate compilers and linkers in a cross-platform manner. It was motivated by the &lt;code&gt;Module::Build&lt;/code&gt; project, but may be useful for other purposes as well. However, it is</source>
          <target state="translated">このモジュールは、クロスプラットフォームの方法で適切なコンパイラーとリンカーを呼び出すことにより、PerlモジュールのC部分を構築できます。これは &lt;code&gt;Module::Build&lt;/code&gt; プロジェクトによって動機付けられましたが、他の目的にも役立つ可能性があります。ただし、</target>
        </trans-unit>
        <trans-unit id="26eefbe0903fb2ede95e48daeed0c357506e5da6" translate="yes" xml:space="preserve">
          <source>This module can provoke sizeable inefficiencies for regular expressions, due to unfortunate implementation details. If performance matters in your application and you don't need $PREMATCH, $MATCH, or $POSTMATCH, try doing</source>
          <target state="translated">このモジュールは、不幸な実装の詳細により、正規表現の効率性を大きく低下させる可能性があります。アプリケーションのパフォーマンスが重要で、$PREMATCH、$MATCH、または$POSTMATCHを必要としない場合は、次のようにしてみてください。</target>
        </trans-unit>
        <trans-unit id="8cf5ae089cfd3bb924112f109262d970297de9cc" translate="yes" xml:space="preserve">
          <source>This module can read, modify, create and write Perl XS typemap files. If you don't know what a typemap is, please confer the &lt;a href=&quot;perlxstut&quot;&gt;perlxstut&lt;/a&gt; and &lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt; manuals.</source>
          <target state="translated">このモジュールは、Perl XSタイプマップファイルの読み取り、変更、作成、および書き込みを行うことができます。タイプマップが何かわからない場合は、&lt;a href=&quot;perlxstut&quot;&gt;perlxstut&lt;/a&gt;および&lt;a href=&quot;perlxs&quot;&gt;perlxsの&lt;/a&gt;マニュアルを参照してください。</target>
        </trans-unit>
        <trans-unit id="5e29d99feceeb44433f425fbac43b49ef593d502" translate="yes" xml:space="preserve">
          <source>This module comes in two flavors: one for modern perls (5.10 and above) and one for ancient obsolete perls. The version for modern perls has support for Unicode. The version for old perls does not. You can tell which version you have installed by looking at &lt;code&gt;$Text::Tabs::SUBVERSION&lt;/code&gt; : it is &lt;code&gt;old&lt;/code&gt; for obsolete perls and &lt;code&gt;modern&lt;/code&gt; for current perls.</source>
          <target state="translated">このモジュールには2つのフレーバーがあります。1つは最新のperl（5.10以上）用で、もう1つは古い時代遅れのperl用です。最新のperlのバージョンはUnicodeをサポートしています。古いperlのバージョンにはありません。あなたはを見て、インストールされているバージョンを伝えることができます &lt;code&gt;$Text::Tabs::SUBVERSION&lt;/code&gt; ：それは &lt;code&gt;old&lt;/code&gt; 時代遅れのPerlとのために &lt;code&gt;modern&lt;/code&gt; 現在のPerlのため。</target>
        </trans-unit>
        <trans-unit id="3f246357be0ea9a19a9c26640bdecebe65636361" translate="yes" xml:space="preserve">
          <source>This module comes in two flavors: one for modern perls (5.10 and above) and one for ancient obsolete perls. The version for modern perls has support for Unicode. The version for old perls does not. You can tell which version you have installed by looking at &lt;code&gt;$Text::Tabs::SUBVERSION&lt;/code&gt;: it is &lt;code&gt;old&lt;/code&gt; for obsolete perls and &lt;code&gt;modern&lt;/code&gt; for current perls.</source>
          <target state="translated">このモジュールには2つのフレーバーがあります。1つは最新のperl（5.10以降）用で、もう1つは古代の廃止されたperl用です。最新のperlsのバージョンは、Unicodeをサポートしています。古いperlsのバージョンはそうではありません。あなたはを見て、インストールされているバージョンを伝えることができます &lt;code&gt;$Text::Tabs::SUBVERSION&lt;/code&gt; ：それは &lt;code&gt;old&lt;/code&gt; 時代遅れのPerlとのために &lt;code&gt;modern&lt;/code&gt; 現在のPerlのため。</target>
        </trans-unit>
        <trans-unit id="febd1d0bc1aeb9c9dc580b98ecebabe324968f11" translate="yes" xml:space="preserve">
          <source>This module comes in two flavors: one for modern perls (5.10 and above) and one for ancient obsolete perls. The version for modern perls has support for Unicode. The version for old perls does not. You can tell which version you have installed by looking at &lt;code&gt;$Text::Wrap::SUBVERSION&lt;/code&gt; : it is &lt;code&gt;old&lt;/code&gt; for obsolete perls and &lt;code&gt;modern&lt;/code&gt; for current perls.</source>
          <target state="translated">このモジュールには2つのフレーバーがあります。1つは最新のperl（5.10以上）用で、もう1つは古い時代遅れのperl用です。最新のperlのバージョンはUnicodeをサポートしています。古いperlのバージョンにはありません。あなたはを見て、インストールされているバージョンを伝えることができます &lt;code&gt;$Text::Wrap::SUBVERSION&lt;/code&gt; ：それは &lt;code&gt;old&lt;/code&gt; 時代遅れのPerlとのために &lt;code&gt;modern&lt;/code&gt; 現在のPerlのため。</target>
        </trans-unit>
        <trans-unit id="09b0dd2743438f4a098031d43325e1efa58a9e72" translate="yes" xml:space="preserve">
          <source>This module comes in two flavors: one for modern perls (5.10 and above) and one for ancient obsolete perls. The version for modern perls has support for Unicode. The version for old perls does not. You can tell which version you have installed by looking at &lt;code&gt;$Text::Wrap::SUBVERSION&lt;/code&gt;: it is &lt;code&gt;old&lt;/code&gt; for obsolete perls and &lt;code&gt;modern&lt;/code&gt; for current perls.</source>
          <target state="translated">このモジュールには2つのフレーバーがあります。1つは最新のperl（5.10以降）用で、もう1つは古代の廃止されたperl用です。最新のperlsのバージョンは、Unicodeをサポートしています。古いperlsのバージョンはそうではありません。あなたはを見て、インストールされているバージョンを伝えることができます &lt;code&gt;$Text::Wrap::SUBVERSION&lt;/code&gt; ：それは &lt;code&gt;old&lt;/code&gt; 時代遅れのPerlとのために &lt;code&gt;modern&lt;/code&gt; 現在のPerlのため。</target>
        </trans-unit>
        <trans-unit id="d14a28688b621d987b1f8fc9e23815cd4abf0ed8" translate="yes" xml:space="preserve">
          <source>This module contains a good example of how to use tie to implement a cache and an example of how to make a tied variable readonly to those outside of it.</source>
          <target state="translated">このモジュールには、キャッシュを実装するために tie を使用する方法の良い例と、 tie された変数を外部からの読み取り専用にする方法の例が含まれています。</target>
        </trans-unit>
        <trans-unit id="d311a4e7a3db9109ca676b3552f311797aef79ac" translate="yes" xml:space="preserve">
          <source>This module contains methods to test the reachability of remote hosts on a network. A ping object is first created with optional parameters, a variable number of hosts may be pinged multiple times and then the connection is closed.</source>
          <target state="translated">このモジュールはネットワーク上のリモートホストの到達性をテストするメソッドを含みます。最初にオプションのパラメータで ping オブジェクトを作成し、可変数のホストを複数回 ping してから接続を閉じます。</target>
        </trans-unit>
        <trans-unit id="e7ab97b3c83db0e719a01ba25468a109c4526c8d" translate="yes" xml:space="preserve">
          <source>This module contains utility subroutines for abstracting away the underlying magic of autodie and (ab)uses of &lt;code&gt;%^H&lt;/code&gt; to call subs at the end of a (compile-time) scopes.</source>
          <target state="translated">このモジュールには、autodieの根底にある魔法を抽象化するためのユーティリティサブルーチンと、（コンパイル時の）スコープの最後でsubsを呼び出すための &lt;code&gt;%^H&lt;/code&gt; 使用が含まれています。</target>
        </trans-unit>
        <trans-unit id="d790b22a57580f55f37ab95818cba0bc38ecd0b0" translate="yes" xml:space="preserve">
          <source>This module converts CPAN Meta structures from one form to another. The primary use is to convert older structures to the most modern version of the specification, but other transformations may be implemented in the future as needed. (E.g. stripping all custom fields or stripping all optional fields.)</source>
          <target state="translated">このモジュールは、CPANメタ構造をある形式から別の形式に変換する。主な用途は、古い構造を最新バージョンの仕様に変換することですが、必要に応じて将来的に他の変換が実装される可能性があります(例えば、すべてのカスタムフィールドを削除したり、すべてのオプションフィールドを削除するなど)。(例:すべてのカスタムフィールドを削除したり、すべてのオプションフィールドを削除したり)</target>
        </trans-unit>
        <trans-unit id="0e0177cabfcfd905cc13252e41134159a6c784e5" translate="yes" xml:space="preserve">
          <source>This module deals with a lot of system dependencies and has quite a few architecture specific &lt;code&gt;if&lt;/code&gt; s in the code.</source>
          <target state="translated">このモジュールは、システムの依存関係の多くの取引とかなりの数のアーキテクチャ固有の持っている &lt;code&gt;if&lt;/code&gt; 、コード中のSを。</target>
        </trans-unit>
        <trans-unit id="d165975e418f48b0068ea6e4916ced218ae66175" translate="yes" xml:space="preserve">
          <source>This module deals with a lot of system dependencies and has quite a few architecture specific &lt;code&gt;if&lt;/code&gt;s in the code.</source>
          <target state="translated">このモジュールは多くのシステム依存関係を処理し、コード内にsが含まれている &lt;code&gt;if&lt;/code&gt; 固有のアーキテクチャがかなりあります。</target>
        </trans-unit>
        <trans-unit id="048af0729c3efd4457ee6a9d255333490a26b61d" translate="yes" xml:space="preserve">
          <source>This module defines a standard</source>
          <target state="translated">このモジュールは、標準</target>
        </trans-unit>
        <trans-unit id="ccc077b805dfb6d70b724e9bdd6fb4fe5347a6c3" translate="yes" xml:space="preserve">
          <source>This module defines one public function, &lt;code&gt;I18N::LangTags::Detect::detect()&lt;/code&gt; . This function is not exported (nor is even exportable), and it takes no parameters.</source>
          <target state="translated">このモジュールは、1つのパブリック関数 &lt;code&gt;I18N::LangTags::Detect::detect()&lt;/code&gt; 定義します。この関数はエクスポートされず（エクスポートもできません）、パラメーターを取りません。</target>
        </trans-unit>
        <trans-unit id="86eec5c4aa5efea45745f52bda7e4b24c847a408" translate="yes" xml:space="preserve">
          <source>This module defines one public function, &lt;code&gt;I18N::LangTags::Detect::detect()&lt;/code&gt;. This function is not exported (nor is even exportable), and it takes no parameters.</source>
          <target state="translated">このモジュールは、1つのパブリック関数 &lt;code&gt;I18N::LangTags::Detect::detect()&lt;/code&gt; 定義します。この関数はエクスポートされず（エクスポートもできません）、パラメーターを取りません。</target>
        </trans-unit>
        <trans-unit id="d9f93c560d9ab4f740a2b97f280df75095aa9c1e" translate="yes" xml:space="preserve">
          <source>This module defines some basic input objects used by &lt;b&gt;Pod::Parser&lt;/b&gt; when reading and parsing POD text from an input source. The following objects are defined:</source>
          <target state="translated">このモジュールは、入力ソースからPODテキストを読み取って解析するときに&lt;b&gt;Pod :: Parser&lt;/b&gt;によって使用されるいくつかの基本的な入力オブジェクトを定義します。次のオブジェクトが定義されています。</target>
        </trans-unit>
        <trans-unit id="5588b6a383faab0057a18646001f16348459eef2" translate="yes" xml:space="preserve">
          <source>This module defines three public functions, &lt;code&gt;plan(...)&lt;/code&gt; , &lt;code&gt;ok(...)&lt;/code&gt; , and &lt;code&gt;skip(...)&lt;/code&gt; . By default, all three are exported by the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; Test;&lt;/code&gt; statement.</source>
          <target state="translated">このモジュールは、3つのパブリック関数 &lt;code&gt;plan(...)&lt;/code&gt; 、 &lt;code&gt;ok(...)&lt;/code&gt; 、および &lt;code&gt;skip(...)&lt;/code&gt; を定義します。デフォルトでは、3つすべてが &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; Test;&lt;/code&gt; によってエクスポートされます。ステートメント。</target>
        </trans-unit>
        <trans-unit id="753823d787f9b4eb6fa8a5cbc51058ee11d7dd83" translate="yes" xml:space="preserve">
          <source>This module defines three public functions, &lt;code&gt;plan(...)&lt;/code&gt;, &lt;code&gt;ok(...)&lt;/code&gt;, and &lt;code&gt;skip(...)&lt;/code&gt;. By default, all three are exported by the &lt;code&gt;use Test;&lt;/code&gt; statement.</source>
          <target state="translated">このモジュールは、 &lt;code&gt;plan(...)&lt;/code&gt; 、 &lt;code&gt;ok(...)&lt;/code&gt; 、 &lt;code&gt;skip(...)&lt;/code&gt; の3つのパブリック関数を定義します。デフォルトでは、3つすべてがuseTestによってエクスポートされ &lt;code&gt;use Test;&lt;/code&gt; ステートメント。</target>
        </trans-unit>
        <trans-unit id="fd200c0735cc5781411adf38498d8ea6b289e130" translate="yes" xml:space="preserve">
          <source>This module directly uses hash keys in the &lt;a href=&quot;Test::Builder&quot;&gt;Test::Builder&lt;/a&gt; singleton. This module is also obsolete thanks to the benefits of &lt;a href=&quot;test2&quot;&gt;Test2&lt;/a&gt;. Use &lt;code&gt;intercept()&lt;/code&gt; from &lt;a href=&quot;Test2::API&quot;&gt;Test2::API&lt;/a&gt; to achieve a similar result.</source>
          <target state="translated">このモジュールは、&lt;a href=&quot;Test::Builder&quot;&gt;Test :: Builder&lt;/a&gt;シングルトンでハッシュキーを直接使用します。このモジュールも、&lt;a href=&quot;test2&quot;&gt;Test2&lt;/a&gt;の利点のおかげで廃止されました。&lt;a href=&quot;Test2::API&quot;&gt;Test2 :: APIの&lt;/a&gt; &lt;code&gt;intercept()&lt;/code&gt; を使用して、同様の結果を達成します。</target>
        </trans-unit>
        <trans-unit id="0d26bb4e43183e0559ebca4dee112bd3a0d0b364" translate="yes" xml:space="preserve">
          <source>This module encapsulates reading &lt;a href=&quot;../cpan&quot;&gt;Distroprefs&lt;/a&gt; and matching them against CPAN distributions.</source>
          <target state="translated">このモジュールは、&lt;a href=&quot;../cpan&quot;&gt;Distroprefの&lt;/a&gt;読み取りとCPANディストリビューションとの照合をカプセル化します。</target>
        </trans-unit>
        <trans-unit id="9be6ae2c9023c3906f7ade946637f011010709ad" translate="yes" xml:space="preserve">
          <source>This module encapsulates reading &lt;a href=&quot;cpan&quot;&gt;Distroprefs&lt;/a&gt; and matching them against CPAN distributions.</source>
          <target state="translated">このモジュールは、&lt;a href=&quot;cpan&quot;&gt;Distroprefの&lt;/a&gt;読み取りと、それらをCPAN分布と照合することをカプセル化します。</target>
        </trans-unit>
        <trans-unit id="0c9dfd5842361144dbb1663f5f104740841b03d0" translate="yes" xml:space="preserve">
          <source>This module ensures that all data written to the DBM file is null terminated. This is useful when you have a perl script that needs to interoperate with a DBM file that a C program also uses. A fairly common issue is for the C application to include the terminating null in a string when it writes to the DBM file. This filter will ensure that all data written to the DBM file can be read by the C application.</source>
          <target state="translated">このモジュールは、DBMファイルに書き込まれたすべてのデータがヌル終了することを保証します。これは、Cプログラムが使用するDBMファイルと相互運用する必要があるPerlスクリプトがある場合に便利です。かなり一般的な問題は、CアプリケーションがDBMファイルに書き込むときに、文字列の中に終端のNULLを含めることです。このフィルタは、DBMファイルに書き込まれたすべてのデータをCアプリケーションが読み込めるようにします。</target>
        </trans-unit>
        <trans-unit id="0972ca2731097996c9289706d9b5ff6a965c399a" translate="yes" xml:space="preserve">
          <source>This module exists only to provide overload resolution for Storable and similar modules. See &lt;a href=&quot;JSON::PP&quot;&gt;JSON::PP&lt;/a&gt; for more info about this class.</source>
          <target state="translated">このモジュールは、Storableおよび同様のモジュールの過負荷解決を提供するためにのみ存在します。このクラスの詳細については、&lt;a href=&quot;JSON::PP&quot;&gt;JSON :: PP&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="cd7e8d1d3170c6e8daec0f86fc59011732a6349b" translate="yes" xml:space="preserve">
          <source>This module exports convenience functions for all of the class methods provided by File::Spec.</source>
          <target state="translated">このモジュールは、File::Spec で提供されるすべてのクラス・メソッドの便利な関数をエクスポートします。</target>
        </trans-unit>
        <trans-unit id="225bff521140d6082b4081701a5c9f07eb77dbdc" translate="yes" xml:space="preserve">
          <source>This module exports exactly one function, &lt;code&gt;memoize&lt;/code&gt; . The rest of the functions in this package are None of Your Business.</source>
          <target state="translated">このモジュールは、1つの関数を &lt;code&gt;memoize&lt;/code&gt; ます。このパッケージの残りの機能は、ビジネスのどれでもありません。</target>
        </trans-unit>
        <trans-unit id="c756efb0d722016c58146ce901d559a7e357a513" translate="yes" xml:space="preserve">
          <source>This module exports exactly one function, &lt;code&gt;memoize&lt;/code&gt;. The rest of the functions in this package are None of Your Business.</source>
          <target state="translated">このモジュールは、 &lt;code&gt;memoize&lt;/code&gt; 1つの関数のみをエクスポートします。このパッケージの残りの機能は、あなたのビジネスではありません。</target>
        </trans-unit>
        <trans-unit id="7a437808a72f5186bb9fb8b3d0a47bad3b6c57c9" translate="yes" xml:space="preserve">
          <source>This module exports several subroutines from the older event API (see &lt;a href=&quot;Test2::Event&quot;&gt;Test2::Event&lt;/a&gt;). These subroutines can be used as methods on any object that provides a custom &lt;code&gt;facet_data()&lt;/code&gt; method. These subroutines can also be used as functions that take a facet data hashref as arguments.</source>
          <target state="translated">このモジュールは、古いイベントAPIからいくつかのサブルーチンをエクスポートします（&lt;a href=&quot;Test2::Event&quot;&gt;Test2 :: Eventを&lt;/a&gt;参照）。これらのサブルーチンは、カスタム &lt;code&gt;facet_data()&lt;/code&gt; メソッドを提供する任意のオブジェクトのメソッドとして使用できます。これらのサブルーチンは、ファセットデータhashrefを引数として受け取る関数としても使用できます。</target>
        </trans-unit>
        <trans-unit id="b53f8e98717e2df0ba097b4ab532a6f74e551ea4" translate="yes" xml:space="preserve">
          <source>This module exports two functions by default, &lt;code&gt;timelocal()&lt;/code&gt; and &lt;code&gt;timegm()&lt;/code&gt; .</source>
          <target state="translated">このモジュールは、デフォルトで2つの関数、 &lt;code&gt;timelocal()&lt;/code&gt; と &lt;code&gt;timegm()&lt;/code&gt; をエクスポートします。</target>
        </trans-unit>
        <trans-unit id="6f39641613ab5773d894c474a71a45df157f1238" translate="yes" xml:space="preserve">
          <source>This module exports two functions by default, &lt;code&gt;timelocal()&lt;/code&gt; and &lt;code&gt;timegm()&lt;/code&gt;.</source>
          <target state="translated">このモジュールは、デフォルトで &lt;code&gt;timelocal()&lt;/code&gt; と &lt;code&gt;timegm()&lt;/code&gt; の2つの関数をエクスポートします。</target>
        </trans-unit>
        <trans-unit id="d62e7ee6ec8e2b5b39029ab7ee6ccd36cf4dfeb9" translate="yes" xml:space="preserve">
          <source>This module extends the terse diagnostics normally emitted by both the perl compiler and the perl interpreter (from running perl with a -w switch or &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; warnings&lt;/code&gt; ), augmenting them with the more explicative and endearing descriptions found in &lt;a href=&quot;perldiag&quot;&gt;perldiag&lt;/a&gt;. Like the other pragmata, it affects the compilation phase of your program rather than merely the execution phase.</source>
          <target state="translated">このモジュールは、perlコンパイラーとperlインタープリターの両方によって通常出力される簡潔な診断を拡張し（-wスイッチを &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; warnings&lt;/code&gt; してperlを実行するか、警告を使用します）、&lt;a href=&quot;perldiag&quot;&gt;perldiagに&lt;/a&gt;あるより説明的で魅力的な説明でそれらを補強します。他のプラグマと同様に、実行フェーズだけでなく、プログラムのコンパイルフェーズにも影響します。</target>
        </trans-unit>
        <trans-unit id="d517678ea3b2b09bdfcb6b56d92700cd53a59e04" translate="yes" xml:space="preserve">
          <source>This module extends the terse diagnostics normally emitted by both the perl compiler and the perl interpreter (from running perl with a -w switch or &lt;code&gt;use warnings&lt;/code&gt;), augmenting them with the more explicative and endearing descriptions found in &lt;a href=&quot;perldiag&quot;&gt;perldiag&lt;/a&gt;. Like the other pragmata, it affects the compilation phase of your program rather than merely the execution phase.</source>
          <target state="translated">このモジュールは、perlコンパイラとperlインタプリタの両方によって通常発行される簡潔な診断を拡張し（-wスイッチを &lt;code&gt;use warnings&lt;/code&gt; してperlを実行するか、警告を使用することから）、&lt;a href=&quot;perldiag&quot;&gt;perldiagに&lt;/a&gt;あるより説明的で愛らしい説明でそれらを補強します。他のプラグマと同様に、それは単なる実行フェーズではなく、プログラムのコンパイルフェーズに影響を与えます。</target>
        </trans-unit>
        <trans-unit id="b01dd0d6475dbad2f311d0d4cb1dacdbdfac4d66" translate="yes" xml:space="preserve">
          <source>This module has a test that appears to work around a Test::Builder bug. The bug appears to have been fixed by Test2, which means the workaround causes a failure. This can be easily updated, but nobody has done so yet.</source>
          <target state="translated">このモジュールには、Test::Builder のバグを回避するように見えるテストがあります。このバグは Test2 で修正されているように見えますが、これは回避策が失敗を引き起こすことを意味します。これは簡単に更新することができますが、まだ誰も更新していません。</target>
        </trans-unit>
        <trans-unit id="594092911e1167036ea965c7893b43a507a34b66" translate="yes" xml:space="preserve">
          <source>This module has been deprecated since perl v5.18. See &lt;a href=&quot;#DESCRIPTION&quot;&gt;&quot;DESCRIPTION&quot;&lt;/a&gt; and &lt;a href=&quot;#BUGS&quot;&gt;&quot;BUGS&quot;&lt;/a&gt;.</source>
          <target state="translated">このモジュールは、perlv5.18以降非推奨になっています。&lt;a href=&quot;#DESCRIPTION&quot;&gt;「説明」&lt;/a&gt;と&lt;a href=&quot;#BUGS&quot;&gt;「バグ」を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="3ec683936a1587c1835f23fd06a510bf338b7e80" translate="yes" xml:space="preserve">
          <source>This module has been deprecated since perl v5.18. See &lt;a href=&quot;#DESCRIPTION&quot;&gt;DESCRIPTION&lt;/a&gt; and &lt;a href=&quot;#BUGS&quot;&gt;BUGS&lt;/a&gt;.</source>
          <target state="translated">このモジュールはperl v5.18から廃止されました。「&lt;a href=&quot;#DESCRIPTION&quot;&gt;説明」&lt;/a&gt;と「&lt;a href=&quot;#BUGS&quot;&gt;バグ&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="dd94517622a9ab314f7601e60ecd6670f3bc957d" translate="yes" xml:space="preserve">
          <source>This module has two interfaces, one through color() and colored() and the other through constants. It also offers the utility functions uncolor(), colorstrip(), colorvalid(), and coloralias(), which have to be explicitly imported to be used (see &lt;a href=&quot;#SYNOPSIS&quot;&gt;&quot;SYNOPSIS&quot;&lt;/a&gt;).</source>
          <target state="translated">このモジュールには2つのインターフェースがあります。1つはcolor（）とcolored（）を介し、もう1つは定数を介します。また、使用するには明示的にインポートする必要があるユーティリティ関数uncolor（）、colorstrip（）、colorvalid（）、およびcoloralias（）も提供します（「SYNOPSIS &lt;a href=&quot;#SYNOPSIS&quot;&gt;」を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="2117e00acdbd9807a78cbd1ea4a675762026720f" translate="yes" xml:space="preserve">
          <source>This module has two interfaces, one through color() and colored() and the other through constants. It also offers the utility functions uncolor(), colorstrip(), colorvalid(), and coloralias(), which have to be explicitly imported to be used (see &lt;a href=&quot;#SYNOPSIS&quot;&gt;SYNOPSIS&lt;/a&gt;).</source>
          <target state="translated">このモジュールには2つのインターフェースがあり、1つはcolor（）とcolored（）を使用し、もう1つは定数を使用します。また、ユーティリティ機能を提供していますuncolor（）、colorstrip（）、colorvalid（）、明示的（参照使用されるようにインポートする必要がありcoloralias（）、&lt;a href=&quot;#SYNOPSIS&quot;&gt;書式を&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="ff8b16c231dc1d713254a7cb8a480c66e2ae1bd1" translate="yes" xml:space="preserve">
          <source>This module implements &lt;a href=&quot;https://tools.ietf.org/html/rfc2047&quot;&gt;RFC 2047&lt;/a&gt; MIME encoding for an unstructured field body of the email header. It can also be used for &lt;a href=&quot;https://tools.ietf.org/html/rfc822&quot;&gt;RFC 822&lt;/a&gt; 'text' token. However, it cannot be used directly for the whole header with the field name or for the structured header fields like From, To, Cc, Message-Id, etc... There are 3 encoding names supported by this module: &lt;code&gt;MIME-Header&lt;/code&gt;, &lt;code&gt;MIME-B&lt;/code&gt; and &lt;code&gt;MIME-Q&lt;/code&gt;.</source>
          <target state="translated">このモジュールは、電子メールヘッダーの非構造化フィールド本文に&lt;a href=&quot;https://tools.ietf.org/html/rfc2047&quot;&gt;RFC 2047MIME&lt;/a&gt;エンコーディングを実装します。&lt;a href=&quot;https://tools.ietf.org/html/rfc822&quot;&gt;RFC 822'text&lt;/a&gt; 'トークンにも使用できます。ただし、フィールド名を持つヘッダー全体、またはFrom、To、Cc、Message-Idなどの構造化ヘッダーフィールドに直接使用することはできません。このモジュールでサポートされるエンコーディング名は3つあります &lt;code&gt;MIME-Header&lt;/code&gt; 、 &lt;code&gt;MIME-B&lt;/code&gt; および &lt;code&gt;MIME-Q&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0b510432f8750d5bbad1de7af5fced7b88ef44df" translate="yes" xml:space="preserve">
          <source>This module implements China-based Chinese charset encodings. Encodings supported are as follows.</source>
          <target state="translated">このモジュールは、中国ベースの中国語文字セットエンコーディングを実装しています。サポートされているエンコーディングは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="18f94573bd55ebab6dfdf33a299319140ec5bdab" translate="yes" xml:space="preserve">
          <source>This module implements Japanese charset encodings. Encodings supported are as follows.</source>
          <target state="translated">このモジュールは、日本語の charset エンコーディングを実装しています。サポートされているエンコーディングは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="85a823a7495a5d305f8dfc87daf3a9452bf40405" translate="yes" xml:space="preserve">
          <source>This module implements Korean charset encodings. Encodings supported are as follows.</source>
          <target state="translated">このモジュールは、韓国語の文字セットエンコーディングを実装しています。サポートされているエンコーディングは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="1ac6b792bfff4da11b88119131c465048e55ab98" translate="yes" xml:space="preserve">
          <source>This module implements RFC 2047 Mime Header Encoding. There are 3 variant encoding names; &lt;code&gt;MIME-Header&lt;/code&gt; , &lt;code&gt;MIME-B&lt;/code&gt; and &lt;code&gt;MIME-Q&lt;/code&gt; . The difference is described below</source>
          <target state="translated">このモジュールは、RFC 2047 Mimeヘッダーエンコーディングを実装します。3つのバリアントエンコーディング名があります。 &lt;code&gt;MIME-Header&lt;/code&gt; 、 &lt;code&gt;MIME-B&lt;/code&gt; および &lt;code&gt;MIME-Q&lt;/code&gt; 。違いは次のとおりです</target>
        </trans-unit>
        <trans-unit id="fd2c9a90ea8e309e706421846f519bfe977d609d" translate="yes" xml:space="preserve">
          <source>This module implements UTF-7 encoding documented in RFC 2152. UTF-7, as its name suggests, is a 7-bit re-encoded version of UTF-16BE. It is designed to be MTA-safe and expected to be a standard way to exchange Unicoded mails via mails. But with the advent of UTF-8 and 8-bit compliant MTAs, UTF-7 is hardly ever used.</source>
          <target state="translated">このモジュールは、RFC 2152 で文書化されている UTF-7 エンコーディングを実装しています。UTF-7はその名が示すように、UTF-16BEの7ビット再エンコード版です。これはMTAで安全なように設計されており、メールを介してユニコードされたメールを交換するための標準的な方法として期待されています。しかし、UTF-8や8ビット準拠のMTAの出現により、UTF-7はほとんど使われなくなりました。</target>
        </trans-unit>
        <trans-unit id="6a778bf541b175d3967361a621a9111e411a3873" translate="yes" xml:space="preserve">
          <source>This module implements a PerlIO layer that works on files encoded in the quoted-printable format. It will decode from quoted-printable while reading from a handle, and it will encode as quoted-printable while writing to a handle.</source>
          <target state="translated">このモジュールは、quoted-printable 形式でエンコードされたファイルで動作する PerlIO レイヤーを実装しています。ハンドルからの読み込み中は quoted-printable からデコードし、ハンドルへの書き込み中は quoted-printable としてエンコードします。</target>
        </trans-unit>
        <trans-unit id="ed550b03d65e4b729769320dd5e86c30fc421672" translate="yes" xml:space="preserve">
          <source>This module implements a client interface to the POP3 protocol, enabling a perl5 application to talk to POP3 servers. This documentation assumes that you are familiar with the POP3 protocol described in RFC1939.</source>
          <target state="translated">このモジュールは、POP3 プロトコルへのクライアントインターフェイスを実装し、 perl5 アプリケーションが POP3 サーバと通信できるようにします。このドキュメントは、RFC1939 で説明されている POP3 プロトコルに精通していることを前提としています。</target>
        </trans-unit>
        <trans-unit id="ed6c1f3c1c0cdf48fd7b4bf4c3f2799a1d9ccec9" translate="yes" xml:space="preserve">
          <source>This module implements a client interface to the POP3 protocol, enabling a perl5 application to talk to POP3 servers. This documentation assumes that you are familiar with the POP3 protocol described in RFC1939. With &lt;a href=&quot;IO::Socket::SSL&quot;&gt;IO::Socket::SSL&lt;/a&gt; installed it also provides support for implicit and explicit TLS encryption, i.e. POP3S or POP3+STARTTLS.</source>
          <target state="translated">このモジュールは、POP3プロトコルへのクライアントインターフェイスを実装し、perl5アプリケーションがPOP3サーバーと通信できるようにします。このドキュメントは、RFC1939で説明されているPOP3プロトコルに精通していることを前提としています。&lt;a href=&quot;IO::Socket::SSL&quot;&gt;IO ::ソケット:: SSLが&lt;/a&gt;インストールされ、それはまた、すなわちPOP3SまたはPOP3 + STARTTLS、暗黙的および明示的なTLS暗号化のサポートを提供します。</target>
        </trans-unit>
        <trans-unit id="ee8852ef106e152ea9b50dda8dd1b7e4ef5a1d79" translate="yes" xml:space="preserve">
          <source>This module implements a client interface to the SMTP and ESMTP protocol, enabling a perl5 application to talk to SMTP servers. This documentation assumes that you are familiar with the concepts of the SMTP protocol described in RFC2821. With &lt;a href=&quot;IO::Socket::SSL&quot;&gt;IO::Socket::SSL&lt;/a&gt; installed it also provides support for implicit and explicit TLS encryption, i.e. SMTPS or SMTP+STARTTLS.</source>
          <target state="translated">このモジュールは、SMTPおよびESMTPプロトコルへのクライアントインターフェイスを実装し、perl5アプリケーションがSMTPサーバーと通信できるようにします。このドキュメントは、RFC2821で説明されているSMTPプロトコルの概念に精通していることを前提としています。&lt;a href=&quot;IO::Socket::SSL&quot;&gt;IO ::ソケット:: SSLが&lt;/a&gt;インストールされ、それはまた、すなわちSMTPSまたはSMTP + STARTTLS、暗黙的および明示的なTLS暗号化のサポートを提供します。</target>
        </trans-unit>
        <trans-unit id="f3343630b02b7f19c2e9f15e0bc9d4d62bafd5e3" translate="yes" xml:space="preserve">
          <source>This module implements a client interface to the SMTP and ESMTP protocol, enabling a perl5 application to talk to SMTP servers. This documentation assumes that you are familiar with the concepts of the SMTP protocol described in RFC821.</source>
          <target state="translated">このモジュールは、SMTP および ESMTP プロトコルへのクライアントインターフェイスを実装し、Perl5 アプリケーションが SMTP サーバと通信できるようにします。このドキュメントは、RFC821 で説明されている SMTP プロトコルの概念に精通していることを前提としています。</target>
        </trans-unit>
        <trans-unit id="a98fb3b26850ae6b1ffeeed7c797dcc990c08524" translate="yes" xml:space="preserve">
          <source>This module implements a subset of the YAML specification for use in reading and writing CPAN metadata files like</source>
          <target state="translated">このモジュールは、以下のようなCPANメタデータファイルの読み書きで使用するためのYAML仕様のサブセットを実装しています。</target>
        </trans-unit>
        <trans-unit id="208a0fbb6b2b9365a0b457c6e7c2a20c4ee8bdbb" translate="yes" xml:space="preserve">
          <source>This module implements all Character Encoding Schemes of Unicode that are officially documented by Unicode Consortium (except, of course, for UTF-8, which is a native format in perl).</source>
          <target state="translated">このモジュールは、Unicodeコンソーシアムによって公式に文書化されているUnicodeのすべての文字エンコーディングスキームを実装しています (もちろん、perlのネイティブフォーマットであるUTF-8を除いて)。</target>
        </trans-unit>
        <trans-unit id="4a5fc149cac5c063339467ffcf19fbcbdd274ebc" translate="yes" xml:space="preserve">
          <source>This module implements symbol and dingbats encodings. Encodings supported are as follows.</source>
          <target state="translated">このモジュールは、シンボルとディンバットのエンコーディングを実装しています。サポートされているエンコーディングは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="91d2629cfba9471ae750b605c30149641a050967" translate="yes" xml:space="preserve">
          <source>This module implements the Windows-specific parts of ExtUtils::CBuilder. Most of the Windows-specific stuff has to do with compiling and linking C code. Currently we support the 3 compilers perl itself supports: MSVC, BCC, and GCC.</source>
          <target state="translated">このモジュールは、ExtUtils::CBuilder の Windows 固有の部分を実装しています。Windows 固有の部分のほとんどは、C コードのコンパイルとリンクに関係しています。現在、Perl がサポートしている 3 つのコンパイラをサポートしています。MSVC、BCC、GCC です。</target>
        </trans-unit>
        <trans-unit id="b2e6ff1b1b109fdc596717b451bfa277cebdbf15" translate="yes" xml:space="preserve">
          <source>This module implements the environmental variables that &lt;a href=&quot;Test::Harness&quot;&gt;Test::Harness&lt;/a&gt; uses with TAP::Harness, and instantiates the appropriate class with the appropriate arguments.</source>
          <target state="translated">このモジュールは、&lt;a href=&quot;Test::Harness&quot;&gt;Test :: Harness&lt;/a&gt;がTAP :: Harnessで使用する環境変数を実装し、適切な引数を使用して適切なクラスをインスタンス化します。</target>
        </trans-unit>
        <trans-unit id="f9fa4e0ad3f8d3bc6d28f8c2e962b8d03cb9cfa8" translate="yes" xml:space="preserve">
          <source>This module implements tradition Chinese charset encodings as used in Taiwan and Hong Kong. Encodings supported are as follows.</source>
          <target state="translated">このモジュールは、台湾や香港で使用されている伝統的な中国語の文字コードを実装しています。サポートされているエンコーディングは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="6d3abe1f6aae133c8268ef4a9c7e2b3f247e4b85" translate="yes" xml:space="preserve">
          <source>This module implements various EBCDIC-Based encodings. Encodings supported are as follows.</source>
          <target state="translated">このモジュールは、様々な EBCDIC ベースのエンコーディングを実装しています。サポートされているエンコーディングは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="71223016b72a87a85df3e296ab0f30c149dbcfa6" translate="yes" xml:space="preserve">
          <source>This module implements various single byte encodings. For most cases it uses \x80-\xff (upper half) to map non-ASCII characters. Encodings supported are as follows.</source>
          <target state="translated">このモジュールは、様々なシングルバイトエンコーディングを実装しています。ほとんどの場合、それは非ASCII文字をマップするために\x80-\xff (上半分)を使用します。サポートされているエンコーディングは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="cc2e021c9aa08753ca094f4f9555269ba3008c18" translate="yes" xml:space="preserve">
          <source>This module inherits from &lt;code&gt;ExtUtils::CBuilder::Base&lt;/code&gt; , so any functionality not implemented here will be implemented there. The interfaces are defined by the &lt;a href=&quot;../../cbuilder&quot;&gt;ExtUtils::CBuilder&lt;/a&gt; documentation.</source>
          <target state="translated">このモジュールは &lt;code&gt;ExtUtils::CBuilder::Base&lt;/code&gt; 継承しているため、ここで実装されていない機能はすべて実装されます。インターフェイスは、&lt;a href=&quot;../../cbuilder&quot;&gt;ExtUtils :: CBuilderの&lt;/a&gt;ドキュメントで定義されています。</target>
        </trans-unit>
        <trans-unit id="dbd924370062e7829b2938e0ae1c44db508d0978" translate="yes" xml:space="preserve">
          <source>This module inherits from &lt;code&gt;ExtUtils::CBuilder::Base&lt;/code&gt;, so any functionality not implemented here will be implemented there. The interfaces are defined by the &lt;a href=&quot;ExtUtils::CBuilder&quot;&gt;ExtUtils::CBuilder&lt;/a&gt; documentation.</source>
          <target state="translated">このモジュールは &lt;code&gt;ExtUtils::CBuilder::Base&lt;/code&gt; 継承しているため、ここで実装されていない機能はすべてそこに実装されます。インターフェイスは、&lt;a href=&quot;ExtUtils::CBuilder&quot;&gt;ExtUtils :: CBuilderの&lt;/a&gt;ドキュメントで定義されています。</target>
        </trans-unit>
        <trans-unit id="19da1ff10a7249eedb446c4c19eb17fbb02bae8e" translate="yes" xml:space="preserve">
          <source>This module internally uses the epoch seconds system that is provided via the perl &lt;code&gt;&lt;a href=&quot;../functions/time&quot;&gt;time()&lt;/a&gt;&lt;/code&gt; function and supported by &lt;code&gt;&lt;a href=&quot;../functions/gmtime&quot;&gt;gmtime()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../functions/localtime&quot;&gt;localtime()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">このモジュールは、perl &lt;code&gt;&lt;a href=&quot;../functions/time&quot;&gt;time()&lt;/a&gt;&lt;/code&gt; 関数を介して提供され、 &lt;code&gt;&lt;a href=&quot;../functions/gmtime&quot;&gt;gmtime()&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;../functions/localtime&quot;&gt;localtime()&lt;/a&gt;&lt;/code&gt; によってサポートされるエポック秒システムを内部的に使用します。</target>
        </trans-unit>
        <trans-unit id="61f8df0862f677bbaf5b909f320f35cfb703f533" translate="yes" xml:space="preserve">
          <source>This module internally uses the epoch seconds system that is provided via the perl &lt;code&gt;time()&lt;/code&gt; function and supported by &lt;code&gt;gmtime()&lt;/code&gt; and &lt;code&gt;localtime()&lt;/code&gt;.</source>
          <target state="translated">このモジュールは、perl &lt;code&gt;time()&lt;/code&gt; 関数を介して提供され、 &lt;code&gt;gmtime()&lt;/code&gt; および &lt;code&gt;localtime()&lt;/code&gt; によってサポートされるエポック秒システムを内部的に使用します。</target>
        </trans-unit>
        <trans-unit id="458e3aac1c45af194716db0ddfa546c2e44d1b98" translate="yes" xml:space="preserve">
          <source>This module is a &quot;pure virtual base class&quot;--it has nothing of its own. It's just there to inherit from one of the various DBM packages. It prefers ndbm for compatibility reasons with Perl 4, then Berkeley DB (See &lt;a href=&quot;db_file&quot;&gt;DB_File&lt;/a&gt;), GDBM, SDBM (which is always there--it comes with Perl), and finally ODBM. This way old programs that used to use NDBM via dbmopen() can still do so, but new ones can reorder @ISA:</source>
          <target state="translated">このモジュールは「純粋な仮想基本クラス」です。独自のモジュールはありません。それは、さまざまなDBMパッケージの1つから継承するためのものです。 Perl 4との互換性の理由からndbmが優先され、次にBerkeley DB（&lt;a href=&quot;db_file&quot;&gt;DB_Fileを&lt;/a&gt;参照）、GDBM、SDBM（Perlに付属しています）、そして最後にODBMが優先されます。この方法で、dbmopen（）を介してNDBMを使用していた古いプログラムは引き続き使用できますが、新しいプログラムは@ISAを並べ替えることができます。</target>
        </trans-unit>
        <trans-unit id="845ef6f7f0c9f9a1cc4bdfcd24a8c21377a02413" translate="yes" xml:space="preserve">
          <source>This module is a back-end plugin for &lt;code&gt;Sys::Syslog&lt;/code&gt;, for supporting the Win32 event log. It is not expected to be directly used by any module other than &lt;code&gt;Sys::Syslog&lt;/code&gt; therefore it's API may change at any time and no warranty is made with regards to backward compatibility. You Have Been Warned.</source>
          <target state="translated">このモジュールは、Win32イベントログをサポートするための &lt;code&gt;Sys::Syslog&lt;/code&gt; バックエンドプラグインです。 &lt;code&gt;Sys::Syslog&lt;/code&gt; 以外のモジュールで直接使用されることは想定されていないため、APIはいつでも変更される可能性があり、下位互換性に関する保証はありません。あなたは警告されました。</target>
        </trans-unit>
        <trans-unit id="1c04eeff8ead05e06a53857583cc861707b5c717" translate="yes" xml:space="preserve">
          <source>This module is a simple wrapper around &lt;b&gt;Locale::Maketext::Lexicon&lt;/b&gt;, designed to alleviate the need of creating</source>
          <target state="translated">このモジュールは&lt;b&gt;Locale :: Maketext :: Lexiconの&lt;/b&gt;シンプルなラッパーで、作成の必要性を軽減するように設計されています</target>
        </trans-unit>
        <trans-unit id="e16f5e2a01129069277c30d3b7f3daee0fb1dd1b" translate="yes" xml:space="preserve">
          <source>This module is an implementation of Unicode Technical Standard #10 (a.k.a. UTS #10) - Unicode Collation Algorithm (a.k.a. UCA).</source>
          <target state="translated">このモジュールは、Unicode Technical Standard #10 (別名 UTS #10)-Unicode Collation Algorithm (別名 UCA)の実装です。</target>
        </trans-unit>
        <trans-unit id="c1b7492744c579fc1d9bfb8835d90982b09e7c1d" translate="yes" xml:space="preserve">
          <source>This module is an outgrowth of the &lt;code&gt;Module::Build&lt;/code&gt; project, to which there have been many contributors. Notably, Randy W. Sims submitted lots of code to support 3 compilers on Windows and helped with various other platform-specific issues. Ilya Zakharevich has contributed fixes for OS/2; John E. Malmberg and Peter Prymmer have done likewise for VMS.</source>
          <target state="translated">このモジュールは、多くの貢献者がいる &lt;code&gt;Module::Build&lt;/code&gt; プロジェクトの派生物です。特に、Randy W. Simsは、Windowsで3つのコンパイラをサポートするために多くのコードを提出し、他のさまざまなプラットフォーム固有の問題を解決しました。Ilya ZakharevichがOS / 2の修正に貢献しました。John E. MalmbergとPeter Prymmerは、VMSについても同様に行いました。</target>
        </trans-unit>
        <trans-unit id="1f5ba4ee559ca9f1454b4c1a05d7f38b94f36610" translate="yes" xml:space="preserve">
          <source>This module is based on a Perl 4 library, timelocal.pl, that was included with Perl 4.036, and was most likely written by Tom Christiansen.</source>
          <target state="translated">このモジュールは、Perl 4.036 に含まれていた Perl 4 のライブラリ timelocal.pl をベースにしており、Tom Christiansen によって書かれた可能性が高いです。</target>
        </trans-unit>
        <trans-unit id="21726a2ed2ceba4bf9becf7c5cf61182d2b88157" translate="yes" xml:space="preserve">
          <source>This module is by no means trying to be a complete testing system. It's just to get you started. Once you're off the ground its recommended you look at &lt;a href=&quot;Test::More&quot;&gt;Test::More&lt;/a&gt;.</source>
          <target state="translated">このモジュールは、完全なテストシステムを目指しているわけではありません。それはあなたが始めるためだけです。地面から離れたら、&lt;a href=&quot;Test::More&quot;&gt;Test :: More&lt;/a&gt;を参照することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="4cbc64a6620dfb67500a67bd41b8098f113352da" translate="yes" xml:space="preserve">
          <source>This module is by no means trying to be a complete testing system. It's just to get you started. Once you're off the ground its recommended you look at &lt;a href=&quot;more&quot;&gt;Test::More&lt;/a&gt;.</source>
          <target state="translated">このモジュールは、完全なテストシステムになることを決して意図していません。それはあなたを始めるためだけのものです。あなたが地面を離れたら、あなたは&lt;a href=&quot;more&quot;&gt;Test :: More&lt;/a&gt;を見ることが推奨されます。</target>
        </trans-unit>
        <trans-unit id="2753244f46b0ce153d304706dfb95e861d35abaf" translate="yes" xml:space="preserve">
          <source>This module is copyright (C) Charles Bailey, Tim Bunce and David Landgren 1995-2013. All rights reserved.</source>
          <target state="translated">このモジュールの著作権は(C)Charles Bailey,Tim Bunce and David Landgren 1995-2013です。すべての著作権は留保されています。</target>
        </trans-unit>
        <trans-unit id="e65fc814fbe25d163ecbf16ad77b4df5d27417a3" translate="yes" xml:space="preserve">
          <source>This module is copyright (C) Charles Bailey, Tim Bunce, David Landgren, James Keenan and Richard Elberger 1995-2018. All rights reserved.</source>
          <target state="translated">このモジュールの著作権は(C)Charles Bailey,Tim Bunce,David Landgren,James Keenan and Richard Elberger 1995-2018に帰属します。すべての権利を保有しています。</target>
        </trans-unit>
        <trans-unit id="c3dc79528e0a53341f5f1a2385863e6d0f321326" translate="yes" xml:space="preserve">
          <source>This module is copyright (c) 2002 - 2009 Jos Boumans &amp;lt;kane@cpan.org&amp;gt;. All rights reserved.</source>
          <target state="translated">このモジュールの著作権は（c）2002-2009 Jos Boumans &amp;lt;kane@cpan.org&amp;gt;にあります。全著作権所有。</target>
        </trans-unit>
        <trans-unit id="109646d03bdd7214b2601deb023ff86ae17771e5" translate="yes" xml:space="preserve">
          <source>This module is copyright 2005 Fergal Daly &amp;lt;fergal@esatclear.ie&amp;gt;, some parts are based on other people's work.</source>
          <target state="translated">このモジュールの著作権は2005Fergal Daly &amp;lt;fergal@esatclear.ie&amp;gt;にあり、一部は他の人の作品に基づいています。</target>
        </trans-unit>
        <trans-unit id="1a6eac676c9809b9e5cbb0d9d7b173e56f481065" translate="yes" xml:space="preserve">
          <source>This module is currently derived from &lt;a href=&quot;YAML::Tiny&quot;&gt;YAML::Tiny&lt;/a&gt; by Adam Kennedy. If there are bugs in how it parses a particular META.yml file, please file a bug report in the YAML::Tiny bugtracker: &lt;a href=&quot;https://github.com/Perl-Toolchain-Gang/YAML-Tiny/issues&quot;&gt;https://github.com/Perl-Toolchain-Gang/YAML-Tiny/issues&lt;/a&gt;</source>
          <target state="translated">このモジュールは現在、&lt;a href=&quot;YAML::Tiny&quot;&gt;AdamKennedyによるYAML :: Tiny&lt;/a&gt;から派生しています。特定のMETA.ymlファイルの解析方法にバグがある場合は、YAML :: Tinyバグトラッカーにバグレポートを提出して&lt;a href=&quot;https://github.com/Perl-Toolchain-Gang/YAML-Tiny/issues&quot;&gt;ください&lt;/a&gt;：https：//github.com/Perl-Toolchain-Gang/YAML-Tiny/issues</target>
        </trans-unit>
        <trans-unit id="e106aa2d7581dc33a3d1c862720a197c581da1e6" translate="yes" xml:space="preserve">
          <source>This module is designed to support operations commonly performed on file specifications (usually called &quot;file names&quot;, but not to be confused with the contents of a file, or Perl's file handles), such as concatenating several directory and file names into a single path, or determining whether a path is rooted. It is based on code directly taken from MakeMaker 5.17, code written by Andreas K&amp;ouml;nig, Andy Dougherty, Charles Bailey, Ilya Zakharevich, Paul Schinder, and others.</source>
          <target state="translated">このモジュールは、複数のディレクトリとファイル名を単一のパスに連結するなど、ファイル仕様（通常は「ファイル名」と呼ばれますが、ファイルの内容やPerlのファイルハンドルと混同しないでください）で一般的に実行される操作をサポートするように設計されています、またはパスがルート化されているかどうかを判断します。MakeMaker 5.17から直接取得したコード、AndreasK&amp;ouml;nig、Andy Dougherty、Charles Bailey、Ilya Zakharevich、Paul Schinderなどが作成したコードに基づいています。</target>
        </trans-unit>
        <trans-unit id="654671a6553728793de0b0c754d598a0cc86c710" translate="yes" xml:space="preserve">
          <source>This module is designed to work with &lt;a href=&quot;Encode::Encoding&quot;&gt;Encode::Encoding&lt;/a&gt;. To make the Base64 transcoder example above really work, you could write a module like this:</source>
          <target state="translated">このモジュールは、&lt;a href=&quot;Encode::Encoding&quot;&gt;Encode :: Encodingで&lt;/a&gt;動作するように設計されています。上記のBase64トランスコーダーの例を実際に機能させるには、次のようなモジュールを作成できます。</target>
        </trans-unit>
        <trans-unit id="b88b2f05f3eb8f5317475c544c0d41c821542019" translate="yes" xml:space="preserve">
          <source>This module is designed to work with &lt;a href=&quot;encoding&quot;&gt;Encode::Encoding&lt;/a&gt;. To make the Base64 transcoder example above really work, you could write a module like this:</source>
          <target state="translated">このモジュールは&lt;a href=&quot;encoding&quot;&gt;Encode :: Encodingで&lt;/a&gt;動作するように設計されています。上記のBase64トランスコーダーの例を実際に機能させるには、次のようなモジュールを作成します。</target>
        </trans-unit>
        <trans-unit id="7317d71579025bf106df223a30767b582e4758a6" translate="yes" xml:space="preserve">
          <source>This module is directly inspired by chocolateboy's excellent Scope::Guard module.</source>
          <target state="translated">このモジュールは、chocolateboy の優れた Scope::Guard モジュールに直接インスパイアされています。</target>
        </trans-unit>
        <trans-unit id="3eaa300076a46b36258692823afcaf30f3da1dac" translate="yes" xml:space="preserve">
          <source>This module is experimental, and may contain bugs. Please report bugs to the address below.</source>
          <target state="translated">このモジュールは実験的なものであり、バグが含まれている可能性があります。バグの報告は以下のアドレスまでお願いします。</target>
        </trans-unit>
        <trans-unit id="c60c17d643b09d45d994b9ae1fda9eedaf2d1fcf" translate="yes" xml:space="preserve">
          <source>This module is for testing only and should not normally be installed.</source>
          <target state="translated">このモジュールはテスト用であり、通常はインストールしないでください。</target>
        </trans-unit>
        <trans-unit id="df5a318ad47ed1cb98fcceb8a257ad12588cd0fd" translate="yes" xml:space="preserve">
          <source>This module is free software, you may distribute it under the same terms as Perl itself.</source>
          <target state="translated">このモジュールはフリーソフトウェアですので、Perlと同じ条件で配布することができます。</target>
        </trans-unit>
        <trans-unit id="0fdd885419be85bc33964005f90fc4cadf3fdd76" translate="yes" xml:space="preserve">
          <source>This module is free software, you may distribute it under the same terms as Perl.</source>
          <target state="translated">このモジュールはフリーソフトウェアですので、Perlと同じ条件で配布することができます。</target>
        </trans-unit>
        <trans-unit id="922385d4cd422695e010d41aeec2d5c5dffbe730" translate="yes" xml:space="preserve">
          <source>This module is free software. It may be used, redistributed and/or modified under the same terms as Perl itself.</source>
          <target state="translated">このモジュールはフリーソフトウェアです。Perl 自体と同じ条件で使用、再配布、改変することができます。</target>
        </trans-unit>
        <trans-unit id="8713cb7bfbc646a13e38df90a39fe040d945517a" translate="yes" xml:space="preserve">
          <source>This module is free software. You may distribute it under the same terms as Perl itself.</source>
          <target state="translated">このモジュールはフリーソフトウェアです。Perlと同じ条件で配布することができます。</target>
        </trans-unit>
        <trans-unit id="0a56766ff465fe3b64568012924af5a4fbf7de95" translate="yes" xml:space="preserve">
          <source>This module is free software; you can redistribute it and/or modify it under the same terms as Perl itself, i.e. under the terms of either the GNU General Public License or the Artistic License, as specified in the</source>
          <target state="translated">このモジュールはフリーソフトウェアです。あなたは、Perl自身と同じ条件、すなわち</target>
        </trans-unit>
        <trans-unit id="870a9546afdd84e9a3a4ff38074b2ee21c55579d" translate="yes" xml:space="preserve">
          <source>This module is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">このモジュールはフリーソフトウェアです。Perl自身と同じ条件で再配布や変更が可能です。</target>
        </trans-unit>
        <trans-unit id="c0830e7b6d0dd0580741b7e45292c09ed7c6c8d7" translate="yes" xml:space="preserve">
          <source>This module is free software; you can redistribute it and/or modify it under the same terms as Perl itself. See &lt;a href=&quot;https://perldoc.perl.org/5.26.0/perlartistic.html&quot;&gt;perlartistic&lt;/a&gt;.</source>
          <target state="translated">このモジュールはフリーソフトウェアです。Perl自体と同じ条件で再配布および/または変更できます。&lt;a href=&quot;https://perldoc.perl.org/5.26.0/perlartistic.html&quot;&gt;perlartisticを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="2e9a38691db3cd4123a0732405c5584fd7d1ade2" translate="yes" xml:space="preserve">
          <source>This module is free software; you can redistribute it and/or modify it under the same terms as Perl itself. See &lt;a href=&quot;https://perldoc.perl.org/5.32.0/perlartistic&quot;&gt;perlartistic&lt;/a&gt;.</source>
          <target state="translated">このモジュールはフリーソフトウェアです。Perl自体と同じ条件で再配布および/または変更できます。&lt;a href=&quot;https://perldoc.perl.org/5.32.0/perlartistic&quot;&gt;perlartisticを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="3300a405455959dd665a3badfe243e6fa30c2626" translate="yes" xml:space="preserve">
          <source>This module is free software; you can redistribute it or modify it under the same terms as Perl itself.</source>
          <target state="translated">このモジュールはフリーソフトウェアです。Perlと同じ条件で再配布や変更が可能です。</target>
        </trans-unit>
        <trans-unit id="428130d7bad8c548e3890e11a89bef5821bc3665" translate="yes" xml:space="preserve">
          <source>This module is just a translation of the C</source>
          <target state="translated">このモジュールは、C</target>
        </trans-unit>
        <trans-unit id="53d4261ed48fcbc4558e06b2e6b719f698501a77" translate="yes" xml:space="preserve">
          <source>This module is just for testing expiration semantics. It's not a very good example of how to write an expiration module.</source>
          <target state="translated">このモジュールは期限切れのセマンティクスをテストするためだけのものです。期限切れモジュールの書き方の例としてはあまり良いものではありません。</target>
        </trans-unit>
        <trans-unit id="0dc5b94f76b37ecce8785d42b0ffd5ab2b777674" translate="yes" xml:space="preserve">
          <source>This module is managed in an open GitHub repository, &lt;a href=&quot;https://github.com/perl-pod/pod-simple/&quot;&gt;https://github.com/perl-pod/pod-simple/&lt;/a&gt;. Feel free to fork and contribute, or to clone &lt;a href=&quot;git://github.com/perl-pod/pod-simple.git&quot;&gt;git://github.com/perl-pod/pod-simple.git&lt;/a&gt; and send patches!</source>
          <target state="translated">このモジュールは、オープンなGitHubリポジトリ&lt;a href=&quot;https://github.com/perl-pod/pod-simple/&quot;&gt;https://github.com/perl-pod/pod-simple/で&lt;/a&gt;管理されています。気軽にフォークして投稿するか、&lt;a href=&quot;git://github.com/perl-pod/pod-simple.git&quot;&gt;git：//github.com/perl-pod/pod-simple.gitの&lt;/a&gt;クローンを作成してパッチを送信してください。</target>
        </trans-unit>
        <trans-unit id="f745572f29549c61507fb4f34a61c7a87abbc5ec" translate="yes" xml:space="preserve">
          <source>This module is managed in an open GitHub repository, &lt;a href=&quot;https://github.com/theory/pod-simple/&quot;&gt;https://github.com/theory/pod-simple/&lt;/a&gt;. Feel free to fork and contribute, or to clone &lt;a href=&quot;git://github.com/theory/pod-simple.git&quot;&gt;git://github.com/theory/pod-simple.git&lt;/a&gt; and send patches!</source>
          <target state="translated">このモジュールは、オープンなGitHubリポジトリ&lt;a href=&quot;https://github.com/theory/pod-simple/&quot;&gt;https://github.com/theory/pod-simple/で&lt;/a&gt;管理されます。forkして貢献したり、&lt;a href=&quot;git://github.com/theory/pod-simple.git&quot;&gt;git：//github.com/theory/pod-simple.git&lt;/a&gt;を複製してパッチを送ったりしてください。</target>
        </trans-unit>
        <trans-unit id="7d0ab6711ea5063095e0e85b171ef73740045783" translate="yes" xml:space="preserve">
          <source>This module is not compatible with Unix &lt;code&gt;compress&lt;/code&gt; .</source>
          <target state="translated">このモジュールは、Unix &lt;code&gt;compress&lt;/code&gt; と互換性がありません。</target>
        </trans-unit>
        <trans-unit id="13cc04317c942b05ce4555eb44ccdae6bba6d28a" translate="yes" xml:space="preserve">
          <source>This module is not compatible with Unix &lt;code&gt;compress&lt;/code&gt;.</source>
          <target state="translated">このモジュールは、Unixと互換性がありません &lt;code&gt;compress&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d1c6a1686a9e6172b47ee3f5d419b358b2cc40a5" translate="yes" xml:space="preserve">
          <source>This module is not intended for direct use in application code. Its sole purpose is to be sub-classed by IO::Compress modules.</source>
          <target state="translated">このモジュールは、アプリケーションコードで直接使用することを意図したものではありません。その唯一の目的は、IO::Compress モジュールのサブクラス化です。</target>
        </trans-unit>
        <trans-unit id="0f3671c101f1cebdeab0ce875c68fe36c60360d8" translate="yes" xml:space="preserve">
          <source>This module is not intended for direct use in application code. Its sole purpose is to be sub-classed by IO::Uncompress modules.</source>
          <target state="translated">このモジュールは、アプリケーションコードで直接使用することを意図したものではありません。その唯一の目的は、IO::Uncompress モジュールによってサブクラス化されることです。</target>
        </trans-unit>
        <trans-unit id="a4123b1c619055b343db1dd9134cd19fd6bddf30" translate="yes" xml:space="preserve">
          <source>This module is not meant to be installed.</source>
          <target state="translated">このモジュールはインストールすることを意図したものではありません。</target>
        </trans-unit>
        <trans-unit id="7164bd2152d2e3839e89dbfa3b86eaa11bce3dbe" translate="yes" xml:space="preserve">
          <source>This module is part of the Time::Piece distribution. It allows the user to find out the number of minutes, hours, days, weeks or years in a given number of seconds. It is returned by Time::Piece when you delta two Time::Piece objects.</source>
          <target state="translated">このモジュールは Time::Piece ディストリビューションの一部です。これにより、ユーザーは与えられた秒数での分、時間、日、週、年の数を知ることができます。2つのTime::Pieceオブジェクトをデルタ化したときに、Time::Pieceによって返されます。</target>
        </trans-unit>
        <trans-unit id="22df619b80747d338bb7c64e8fdc1d4aef53ad12" translate="yes" xml:space="preserve">
          <source>This module is part of the core Perl distribution and is also maintained for CPAN by Jonathan Stowe &amp;lt;jns@gellyfish.co.uk&amp;gt;.</source>
          <target state="translated">このモジュールはコアPerlディストリビューションの一部であり、CPANのためにJonathan Stowe &amp;lt;jns@gellyfish.co.uk&amp;gt;によって保守されています。</target>
        </trans-unit>
        <trans-unit id="194bd926549ad2d7bd7a1e89514e8690d0700ec1" translate="yes" xml:space="preserve">
          <source>This module is released under the same terms as Perl itself.</source>
          <target state="translated">このモジュールはPerlと同じ条件でリリースされています。</target>
        </trans-unit>
        <trans-unit id="9e7d44a3d58cea8a100de62304c29f63b460d560" translate="yes" xml:space="preserve">
          <source>This module is still in beta. Cygwin-knowledgeable folks are invited to offer patches and suggestions.</source>
          <target state="translated">このモジュールはまだベータ版です。Cygwinに詳しい人は、パッチや提案を提供するために招待されています。</target>
        </trans-unit>
        <trans-unit id="1ba87a51378e67bc34037dd0cee84645dd48c97c" translate="yes" xml:space="preserve">
          <source>This module is the result of archaeology undertaken during QA Hackathon in Lancaster, April 2013.</source>
          <target state="translated">このモジュールは、2013年4月にランカスターで開催されたQAハッカソンで実施された考古学の成果です。</target>
        </trans-unit>
        <trans-unit id="f3a7ded1d62af46df9b70aea1e61bb63a4d5e250" translate="yes" xml:space="preserve">
          <source>This module is used by &lt;code&gt;h2xs&lt;/code&gt; to write the file</source>
          <target state="translated">このモジュールは、ファイルを書き込むために &lt;code&gt;h2xs&lt;/code&gt; によって使用されます</target>
        </trans-unit>
        <trans-unit id="a7926bd29bba2324b3fe7c588f46c743752e1304" translate="yes" xml:space="preserve">
          <source>This module is used for running batch-conversions of a lot of HTML documents</source>
          <target state="translated">このモジュールは、多くの HTML ドキュメントのバッチ変換を実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="839a2e768fddb8f7898e0f04347e52df5765427a" translate="yes" xml:space="preserve">
          <source>This module is used internally as a base class by Time::localtime And Time::gmtime functions. It creates a Time::tm struct object which is addressable just like's C's tm structure from</source>
          <target state="translated">このモジュールは、内部ではTime::localtimeとTime::gmtime関数の基底クラスとして利用されています。このモジュールは、C言語のtm構造体のようにアドレス指定可能なTime::tm構造体オブジェクトを</target>
        </trans-unit>
        <trans-unit id="07f553b400d2280f304688df200f5b35ef787f6a" translate="yes" xml:space="preserve">
          <source>This module is used to implement the special hashes &lt;code&gt;%+&lt;/code&gt; and &lt;code&gt;%-&lt;/code&gt; , but it can be used to tie other variables as you choose.</source>
          <target state="translated">このモジュールは、特別なハッシュ &lt;code&gt;%+&lt;/code&gt; および &lt;code&gt;%-&lt;/code&gt; を実装するために使用されますが、選択した他の変数を結合するために使用できます。</target>
        </trans-unit>
        <trans-unit id="019b8504cd55dd2221ad4da8c02fa2cb855f46b3" translate="yes" xml:space="preserve">
          <source>This module is used to implement the special hashes &lt;code&gt;%+&lt;/code&gt; and &lt;code&gt;%-&lt;/code&gt;, but it can be used to tie other variables as you choose.</source>
          <target state="translated">このモジュールは、特別なハッシュ &lt;code&gt;%+&lt;/code&gt; および &lt;code&gt;%-&lt;/code&gt; を実装するために使用されますが、選択した他の変数を結び付けるために使用できます。</target>
        </trans-unit>
        <trans-unit id="400485993cd01628da068b6aef093ffdc1938d7e" translate="yes" xml:space="preserve">
          <source>This module is used to represent and manage a stack of &lt;a href=&quot;Test2::Hub&quot;&gt;Test2::Hub&lt;/a&gt; objects. Hubs are usually in a stack so that you can push a new hub into place that can intercept and handle events differently than the primary hub.</source>
          <target state="translated">このモジュールは、&lt;a href=&quot;Test2::Hub&quot;&gt;Test2 :: Hub&lt;/a&gt;オブジェクトのスタックを表現および管理するために使用されます。ハブは通常スタック内にあるため、プライマリハブとは異なる方法でイベントをインターセプトおよび処理できる新しいハブを所定の位置にプッシュできます。</target>
        </trans-unit>
        <trans-unit id="0b6698e75a7d3422775d333b4412918e440bfbef" translate="yes" xml:space="preserve">
          <source>This module is used to test that the XS typemaps distributed with perl are working as advertised. A function is available for each typemap definition (eventually). In general each function takes a variable, processes it through the OUTPUT typemap and then returns it using the INPUT typemap.</source>
          <target state="translated">このモジュールは、perlで配布されているXS型マップが広告通りに動作しているかどうかをテストするためのものです。それぞれの型マップ定義に対して関数が用意されています(最終的には)。一般的に、各関数は変数を受け取り、OUTPUT型マップを使って処理し、INPUT型マップを使ってそれを返します。</target>
        </trans-unit>
        <trans-unit id="1910d98cb0d7696e9377a9fe44d03beb3d7a9af8" translate="yes" xml:space="preserve">
          <source>This module is used when interoperating with a C/C++ application that uses a C int as either the key and/or value in the DBM file.</source>
          <target state="translated">このモジュールは、DBM ファイルのキーおよび/または値として C の int を使用する C/C++アプリケーションと相互運用する際に使用されます。</target>
        </trans-unit>
        <trans-unit id="d8aa8f33e315204f28ac3fdb706ab3fb362c4d36" translate="yes" xml:space="preserve">
          <source>This module is useful for people who are writing their own back end, or who are learning about the Perl internals. It's not useful to the average programmer.</source>
          <target state="translated">このモジュールは、独自のバックエンドを書いている人や、Perl の内部について学んでいる人に役立ちます。一般的なプログラマには有用ではありません。</target>
        </trans-unit>
        <trans-unit id="e9e0d93149553207adf6e63dfb540679634ba91d" translate="yes" xml:space="preserve">
          <source>This module is very unusual as overloaded modules go: it does not provide any usual overloaded operators, instead it provides an implementation for &lt;a href=&quot;#nomethod&quot;&gt;&quot;&lt;code&gt;nomethod&lt;/code&gt;&quot;&lt;/a&gt;. In this example the &lt;code&gt;nomethod&lt;/code&gt; subroutine returns an object which encapsulates operations done over the objects: &lt;code&gt;symbolic-&amp;gt;new(3)&lt;/code&gt; contains &lt;code&gt;['n', 3]&lt;/code&gt;, &lt;code&gt;2 + symbolic-&amp;gt;new(3)&lt;/code&gt; contains &lt;code&gt;['+', 2, ['n', 3]]&lt;/code&gt;.</source>
          <target state="translated">このモジュールは、オーバーロードされたモジュールが進むにつれて非常に珍しいものです。通常のオーバーロードされた演算子を提供せず、代わりに&lt;a href=&quot;#nomethod&quot;&gt;「 &lt;code&gt;nomethod&lt;/code&gt; 」の&lt;/a&gt;実装を提供します。この例では、 &lt;code&gt;nomethod&lt;/code&gt; サブルーチンは、オブジェクトに対して実行された操作をカプセル化するオブジェクトを返します。symbolic- &lt;code&gt;symbolic-&amp;gt;new(3)&lt;/code&gt; contains &lt;code&gt;['n', 3]&lt;/code&gt; 、 &lt;code&gt;2 + symbolic-&amp;gt;new(3)&lt;/code&gt; contains &lt;code&gt;['+', 2, ['n', 3]]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="422eedc66ca57180bd78963179219d9ec2d2c3fd" translate="yes" xml:space="preserve">
          <source>This module is very unusual as overloaded modules go: it does not provide any usual overloaded operators, instead it provides an implementation for &lt;a href=&quot;#nomethod&quot;&gt;nomethod&lt;/a&gt;. In this example the &lt;code&gt;nomethod&lt;/code&gt; subroutine returns an object which encapsulates operations done over the objects: &lt;code&gt;symbolic-&amp;gt;new(3)&lt;/code&gt; contains &lt;code&gt;['n', 3]&lt;/code&gt; , &lt;code&gt;2 +
symbolic-&amp;gt;new(3)&lt;/code&gt; contains &lt;code&gt;['+', 2, ['n', 3]]&lt;/code&gt; .</source>
          <target state="translated">このモジュールは、オーバーロードされたモジュールとしては非常に珍しいもの&lt;a href=&quot;#nomethod&quot;&gt;です&lt;/a&gt;。通常のオーバーロードされた演算子を提供せず、代わりにnomethodの実装を提供します。この例では、 &lt;code&gt;nomethod&lt;/code&gt; サブルーチンは、オブジェクトに対して行われた操作をカプセル化するオブジェクトを返します。symbolic- &lt;code&gt;symbolic-&amp;gt;new(3)&lt;/code&gt; contains &lt;code&gt;['n', 3]&lt;/code&gt; 、 &lt;code&gt;2 + symbolic-&amp;gt;new(3)&lt;/code&gt; contains &lt;code&gt;['+', 2, ['n', 3]]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="90d7abe099cfab7f646294358451750b8f9df26b" translate="yes" xml:space="preserve">
          <source>This module looks at several environment variables: REQUEST_METHOD, HTTP_ACCEPT_LANGUAGE, LANGUAGE, LC_ALL, LC_MESSAGES, and LANG.</source>
          <target state="translated">このモジュールは、いくつかの環境変数を調べます。REQUEST_METHOD、HTTP_ACCEPT_LANGUAGE、LANGUAGE、LC_ALL、LC_MESSAGES、LANGです。</target>
        </trans-unit>
        <trans-unit id="c4c8914133b0b2bfc077d6c38150d307c0367148" translate="yes" xml:space="preserve">
          <source>This module looks for several environment variables, including REQUEST_METHOD, HTTP_ACCEPT_LANGUAGE, LANGUAGE, LC_ALL, LC_MESSAGES, and LANG.</source>
          <target state="translated">このモジュールは、REQUEST_METHOD、HTTP_ACCEPT_LANGUAGE、LANGUAGE、LC_ALL、LC_MESSAGES、およびLANGを含むいくつかの環境変数を調べます。</target>
        </trans-unit>
        <trans-unit id="0ac738d7d9941c37feb5165dcbb5c6ab9416052c" translate="yes" xml:space="preserve">
          <source>This module may change to use a different pod-to-nroff formatter class in the future, and this may change what options are supported.</source>
          <target state="translated">このモジュールは将来、別の pod-to-nroff フォーマッタクラスを使用するように変更されるかもしれません。</target>
        </trans-unit>
        <trans-unit id="76f27fbed99d6c60d342c39616884795be44e886" translate="yes" xml:space="preserve">
          <source>This module may change to use a different text formatter class in the future, and this may change what options are supported.</source>
          <target state="translated">このモジュールは将来、別のテキストフォーマッタクラスを使うように変更されるかもしれませんし、サポートされるオプションも変わるかもしれません。</target>
        </trans-unit>
        <trans-unit id="94ae7d6ead04954a6412192772bd33bb7b8d4073" translate="yes" xml:space="preserve">
          <source>This module mediates between some version that perl sees in a package and the version that is published by the CPAN indexer.</source>
          <target state="translated">このモジュールは、Perlがパッケージで見るバージョンとCPANインデクサによって公開されるバージョンの間を仲介します。</target>
        </trans-unit>
        <trans-unit id="c80cea19736436ea3f987c3515d4cecb255844b4" translate="yes" xml:space="preserve">
          <source>This module needs Compress::Zlib.</source>
          <target state="translated">このモジュールには Compress::Zlib が必要です。</target>
        </trans-unit>
        <trans-unit id="a8a13e816f80341d5aa494b1b85b44f3bab37b43" translate="yes" xml:space="preserve">
          <source>This module needs Perl5.005 or better.</source>
          <target state="translated">このモジュールはPerl5.005以上が必要です。</target>
        </trans-unit>
        <trans-unit id="2b02becbf011b5e3018f1c6556299552bd0354bc" translate="yes" xml:space="preserve">
          <source>This module needs the Encode module.</source>
          <target state="translated">このモジュールにはEncodeモジュールが必要です。</target>
        </trans-unit>
        <trans-unit id="9ccf2db8e0457ff61f46dc8eef8b595c0400ca84" translate="yes" xml:space="preserve">
          <source>This module needs to have been built with zlib 1.2.1 or better to work. A fatal error will be thrown if &lt;code&gt;Merge&lt;/code&gt; is used with an older version of zlib.</source>
          <target state="translated">このモジュールを動作させるには、zlib 1.2.1以上でビルドする必要があります。古いバージョンのzlibで &lt;code&gt;Merge&lt;/code&gt; を使用すると、致命的なエラーがスローされます。</target>
        </trans-unit>
        <trans-unit id="7cdcfb5298a84fa590094f08e92147e6cb58d161" translate="yes" xml:space="preserve">
          <source>This module offers a single utility function, &lt;code&gt;findsym()&lt;/code&gt; .</source>
          <target state="translated">このモジュールは、単一のユーティリティ関数 &lt;code&gt;findsym()&lt;/code&gt; を提供します。</target>
        </trans-unit>
        <trans-unit id="90cadc0e8c5645533036401c53c00aa9ed6d065f" translate="yes" xml:space="preserve">
          <source>This module offers a single utility function, &lt;code&gt;findsym()&lt;/code&gt;.</source>
          <target state="translated">このモジュールは、単一のユーティリティ関数 &lt;code&gt;findsym()&lt;/code&gt; を提供します。</target>
        </trans-unit>
        <trans-unit id="fd94e0e36732e7bf036abc385f751fb424ec5ec9" translate="yes" xml:space="preserve">
          <source>This module only provides a single function, parselink(), which takes the text of an L&amp;lt;&amp;gt; formatting code and parses it. It returns the anchor text for the link (if any was given), the anchor text possibly inferred from the name and section, the name or URL, the section if any, and the type of link. The type will be one of &lt;code&gt;url&lt;/code&gt; , &lt;code&gt;pod&lt;/code&gt; , or &lt;code&gt;man&lt;/code&gt; , indicating a URL, a link to a POD page, or a link to a Unix manual page.</source>
          <target state="translated">このモジュールは、L &amp;lt;&amp;gt;フォーマットコードのテキストを取得して解析する単一の関数parselink（）のみを提供します。リンクのアンカーテキスト（指定されている場合）、名前とセクションから推測されたアンカーテキスト、名前またはURL、セクション（存在する場合）、およびリンクのタイプを返します。タイプは &lt;code&gt;url&lt;/code&gt; 、 &lt;code&gt;pod&lt;/code&gt; 、または &lt;code&gt;man&lt;/code&gt; のいずれかであり、URL、PODページへのリンク、またはUnixマニュアルページへのリンクを示します。</target>
        </trans-unit>
        <trans-unit id="2d0a92cd5ce624849b5c0f1ceba2a38bdb80915f" translate="yes" xml:space="preserve">
          <source>This module only provides a single function, parselink(), which takes the text of an L&amp;lt;&amp;gt; formatting code and parses it. It returns the anchor text for the link (if any was given), the anchor text possibly inferred from the name and section, the name or URL, the section if any, and the type of link. The type will be one of &lt;code&gt;url&lt;/code&gt;, &lt;code&gt;pod&lt;/code&gt;, or &lt;code&gt;man&lt;/code&gt;, indicating a URL, a link to a POD page, or a link to a Unix manual page.</source>
          <target state="translated">このモジュールは、L &amp;lt;&amp;gt;フォーマットコードのテキストを取得して解析する単一の関数parselink（）のみを提供します。リンクのアンカーテキスト（指定されている場合）、名前とセクションから推測される可能性のあるアンカーテキスト、名前またはURL、セクション（存在する場合）、およびリンクのタイプを返します。タイプは &lt;code&gt;url&lt;/code&gt; 、 &lt;code&gt;pod&lt;/code&gt; 、 &lt;code&gt;man&lt;/code&gt; のいずれかになり、URL、PODページへのリンク、またはUnixマニュアルページへのリンクを示します。</target>
        </trans-unit>
        <trans-unit id="3d4bf504a913c2345fd7fde3fd0264ab90a67f31" translate="yes" xml:space="preserve">
          <source>This module overloads two operators, stringify (&quot;&quot;) and numify (0+).</source>
          <target state="translated">このモジュールは、stringify (&quot;&quot;)と numify (0+)の 2 つの演算子をオーバーロードします。</target>
        </trans-unit>
        <trans-unit id="2da35e4a0c12f0c93369385d5a64812790c47338" translate="yes" xml:space="preserve">
          <source>This module overrides &lt;code&gt;Test::Builder::subtest()&lt;/code&gt; and &lt;code&gt;Test::Builder::done_testing()&lt;/code&gt;. It also directly accesses hash elements of the singleton. It has not yet been fixed.</source>
          <target state="translated">このモジュールは、 &lt;code&gt;Test::Builder::subtest()&lt;/code&gt; および &lt;code&gt;Test::Builder::done_testing()&lt;/code&gt; オーバーライドします。また、シングルトンのハッシュ要素に直接アクセスします。まだ修正されていません。</target>
        </trans-unit>
        <trans-unit id="d52e08497f6544c9fedb6034ea4aa6706f4c4317" translate="yes" xml:space="preserve">
          <source>This module predefines the methods below:</source>
          <target state="translated">このモジュールは、以下のメソッドを事前に定義しています。</target>
        </trans-unit>
        <trans-unit id="af4cffa0841bdd7591fb2ce3aa6ee9b4fc1581e2" translate="yes" xml:space="preserve">
          <source>This module presumes that all packages on CPAN</source>
          <target state="translated">このモジュールでは、CPAN上のすべてのパッケージを想定しています。</target>
        </trans-unit>
        <trans-unit id="50019593ee938407217545d40776fee521fc69e2" translate="yes" xml:space="preserve">
          <source>This module prints the contents of the parse tree, but without as much information as &lt;a href=&quot;debug&quot;&gt;B::Debug&lt;/a&gt;. For comparison, &lt;code&gt;&lt;a href=&quot;../functions/print&quot;&gt;print&lt;/a&gt; &quot;Hello, world.&quot;&lt;/code&gt; produced 96 lines of output from B::Debug, but only 6 from B::Terse.</source>
          <target state="translated">このモジュールは解析ツリーの内容を出力しますが、&lt;a href=&quot;debug&quot;&gt;B :: Debug&lt;/a&gt;ほど多くの情報はありません。比較のために、 &lt;code&gt;&lt;a href=&quot;../functions/print&quot;&gt;print&lt;/a&gt; &quot;Hello, world.&quot;&lt;/code&gt; と&lt;a href=&quot;../functions/print&quot;&gt;印刷してください&lt;/a&gt;。B :: Debugからの出力は96行ですが、B :: Terseからは6行しか出力されませんでした。</target>
        </trans-unit>
        <trans-unit id="138c64d225e0e78c4b8614f89899ef78a31a82d8" translate="yes" xml:space="preserve">
          <source>This module prints the contents of the parse tree, but without as much information as CPAN module B::Debug. For comparison, &lt;code&gt;print &quot;Hello, world.&quot;&lt;/code&gt; produced 96 lines of output from B::Debug, but only 6 from B::Terse.</source>
          <target state="translated">このモジュールは、解析ツリーの内容を出力しますが、CPANモジュールB :: Debugほど多くの情報はありません。比較のために、 &lt;code&gt;print &quot;Hello, world.&quot;&lt;/code&gt; B :: Debugから96行の出力を生成しましたが、B :: Terseからは6行しか生成しませんでした。</target>
        </trans-unit>
        <trans-unit id="478ba76e6bcddb62163ef813460ff3c7881b3c2c" translate="yes" xml:space="preserve">
          <source>This module provide 3 convenience functions to calculate the digest of files. The following functions are provided:</source>
          <target state="translated">このモジュールは、ファイルのダイジェストを計算するための3つの便利な関数を提供します。以下の関数が提供されています。</target>
        </trans-unit>
        <trans-unit id="b0083752d49808e75aaa209a550d644242bd0980" translate="yes" xml:space="preserve">
          <source>This module provide a convenient way to create directories of arbitrary depth and to delete an entire directory subtree from the filesystem.</source>
          <target state="translated">このモジュールは、任意の深さのディレクトリを作成したり、ファイルシステムからディレクトリサブツリー全体を削除したりする便利な方法を提供します。</target>
        </trans-unit>
        <trans-unit id="b6054fa3fccb1f634d2e293413bd446f27771c13" translate="yes" xml:space="preserve">
          <source>This module provides a Perl interface that allows the reading of bzip2 files/buffers.</source>
          <target state="translated">このモジュールは、bzip2 ファイル/バッファの読み込みを可能にする Perl インターフェイスを提供します。</target>
        </trans-unit>
        <trans-unit id="729eaec16403ec99e135cb527b2c362360b4f51e" translate="yes" xml:space="preserve">
          <source>This module provides a Perl interface that allows the reading of files/buffers that conform to RFC 1950.</source>
          <target state="translated">このモジュールは、RFC 1950 に準拠したファイル/バッファの読み込みを可能にする Perl インターフェイスを提供します。</target>
        </trans-unit>
        <trans-unit id="003753405c286c7fe622e166edd07fb3084e88a1" translate="yes" xml:space="preserve">
          <source>This module provides a Perl interface that allows the reading of files/buffers that conform to RFC 1951.</source>
          <target state="translated">このモジュールは、RFC 1951 に準拠したファイル/バッファの読み込みを可能にする Perl インターフェイスを提供します。</target>
        </trans-unit>
        <trans-unit id="450a22809e6b641290e567e29533943a53385d76" translate="yes" xml:space="preserve">
          <source>This module provides a Perl interface that allows the reading of files/buffers that conform to RFC 1952.</source>
          <target state="translated">このモジュールは、RFC 1952 に準拠したファイル/バッファの読み込みを可能にする Perl インターフェイスを提供します。</target>
        </trans-unit>
        <trans-unit id="84795f8eb8a320fda32e6f1d9e107bd19023949a" translate="yes" xml:space="preserve">
          <source>This module provides a Perl interface that allows the reading of files/buffers that have been compressed in a number of formats that use the zlib compression library.</source>
          <target state="translated">このモジュールは、zlib 圧縮ライブラリを使用したいくつかの形式で圧縮されたファイル/バッファの読み込みを可能にする Perl インターフェイスを提供します。</target>
        </trans-unit>
        <trans-unit id="8e71e73c8ba4d3b122b4773810a5bebea41be94e" translate="yes" xml:space="preserve">
          <source>This module provides a Perl interface that allows the reading of files/buffers that have been compressed with a variety of compression libraries.</source>
          <target state="translated">このモジュールは、さまざまな圧縮ライブラリで圧縮されたファイル/バッファの読み込みを可能にする Perl インターフェイスを提供します。</target>
        </trans-unit>
        <trans-unit id="2c4e9ced7b139b449826926366ef08ab126e2617" translate="yes" xml:space="preserve">
          <source>This module provides a Perl interface that allows the reading of zlib files/buffers.</source>
          <target state="translated">このモジュールは、zlib ファイル/バッファの読み込みを可能にする Perl インターフェイスを提供します。</target>
        </trans-unit>
        <trans-unit id="bb765e95103323750609fe94be953d11119327d1" translate="yes" xml:space="preserve">
          <source>This module provides a Perl interface that allows writing bzip2 compressed data to files or buffer.</source>
          <target state="translated">このモジュールは、bzip2で圧縮されたデータをファイルやバッファに書き込むためのPerlインタフェースを提供します。</target>
        </trans-unit>
        <trans-unit id="f21907b6980e5b1e79e7f9b10f3d5f2a64818f33" translate="yes" xml:space="preserve">
          <source>This module provides a Perl interface that allows writing compressed data to files or buffer as defined in RFC 1950.</source>
          <target state="translated">このモジュールは、RFC 1950 で定義されているように、圧縮されたデータをファイルやバッファに書き込むことを可能にする Perl インターフェイスを提供します。</target>
        </trans-unit>
        <trans-unit id="da5ecc8ed3afbcb78fee4753b59d94b3fd278392" translate="yes" xml:space="preserve">
          <source>This module provides a Perl interface that allows writing compressed data to files or buffer as defined in RFC 1951.</source>
          <target state="translated">このモジュールは、RFC 1951 で定義されているように、圧縮されたデータをファイルやバッファに書き込むことを可能にする Perl インターフェイスを提供します。</target>
        </trans-unit>
        <trans-unit id="4dad75c362e8d8f7864bd95ffad74f285ca796dd" translate="yes" xml:space="preserve">
          <source>This module provides a Perl interface that allows writing compressed data to files or buffer as defined in RFC 1952.</source>
          <target state="translated">このモジュールは、RFC 1952 で定義されているように、圧縮されたデータをファイルやバッファに書き込むことを可能にする Perl インターフェイスを提供します。</target>
        </trans-unit>
        <trans-unit id="776878df4a774de7ed832c7c095295fe08ea92ae" translate="yes" xml:space="preserve">
          <source>This module provides a Perl interface that allows writing zip compressed data to files or buffer.</source>
          <target state="translated">このモジュールは、zip圧縮されたデータをファイルやバッファに書き込むためのPerlインターフェイスを提供します。</target>
        </trans-unit>
        <trans-unit id="2a114c29c27a96079e38fb7ba2d9cd2004ce7668" translate="yes" xml:space="preserve">
          <source>This module provides a convenient way to create directories of arbitrary depth and to delete an entire directory subtree from the filesystem.</source>
          <target state="translated">このモジュールは、任意の深さのディレクトリを作成したり、ファイルシステムからディレクトリサブツリー全体を削除したりする便利な方法を提供します。</target>
        </trans-unit>
        <trans-unit id="122a388521f8308fb94e1159722c14bed6d323e8" translate="yes" xml:space="preserve">
          <source>This module provides a function &lt;code&gt;I18N::LangTags::List::name( &lt;i&gt;langtag&lt;/i&gt; ) &lt;/code&gt; that takes a language tag (see &lt;a href=&quot;../langtags&quot;&gt;I18N::LangTags&lt;/a&gt;) and returns the best attempt at an English name for it, or undef if it can't make sense of the tag.</source>
          <target state="translated">このモジュールは、言語タグ（&lt;a href=&quot;../langtags&quot;&gt;I18N :: LangTagsを&lt;/a&gt;参照）を取得し、英語名で最高の試みを返すか、作成できない場合はundefを返す関数 &lt;code&gt;I18N::LangTags::List::name( &lt;i&gt;langtag&lt;/i&gt; ) &lt;/code&gt; を提供しますタグの感覚。</target>
        </trans-unit>
        <trans-unit id="e735e86bbb0a3bf0f9c8dca8d648ba33ac645037" translate="yes" xml:space="preserve">
          <source>This module provides a function &lt;code&gt;I18N::LangTags::List::name( &lt;i&gt;langtag&lt;/i&gt; ) &lt;/code&gt; that takes a language tag (see &lt;a href=&quot;I18N::LangTags&quot;&gt;I18N::LangTags&lt;/a&gt;) and returns the best attempt at an English name for it, or undef if it can't make sense of the tag.</source>
          <target state="translated">このモジュールは、言語タグ（&lt;a href=&quot;I18N::LangTags&quot;&gt;I18N :: LangTagsを&lt;/a&gt;参照 &lt;code&gt;I18N::LangTags::List::name( &lt;i&gt;langtag&lt;/i&gt; ) &lt;/code&gt; を受け取り、その英語名で最善の試みを返す関数I18N :: LangTags :: List :: name（&lt;i&gt;langtag&lt;/i&gt;）を提供します。それができない場合はundefを返します。タグの意味。</target>
        </trans-unit>
        <trans-unit id="a229b32fb9a19828b51ceae6b05d370d58006916" translate="yes" xml:space="preserve">
          <source>This module provides a mapping between an operating system name as given by &lt;code&gt;$^O&lt;/code&gt; and a more generic type. The initial version is based on the OS type mappings provided in &lt;a href=&quot;Module::Build&quot;&gt;Module::Build&lt;/a&gt; and &lt;a href=&quot;ExtUtils::CBuilder&quot;&gt;ExtUtils::CBuilder&lt;/a&gt;. (Thus, Microsoft operating systems are given the type 'Windows' rather than 'Win32'.)</source>
          <target state="translated">このモジュールは、 &lt;code&gt;$^O&lt;/code&gt; 指定されたオペレーティングシステム名とより一般的なタイプの間のマッピングを提供します。初期バージョンは、&lt;a href=&quot;Module::Build&quot;&gt;Module :: Build&lt;/a&gt;および&lt;a href=&quot;ExtUtils::CBuilder&quot;&gt;ExtUtils :: CBuilderで&lt;/a&gt;提供されるOSタイプのマッピングに基づいています。 （したがって、Microsoftオペレーティングシステムには、「Win32」ではなく「Windows」タイプが割り当てられます。）</target>
        </trans-unit>
        <trans-unit id="06aa681296d1fc9a7c2f005908eaaf8f3c4564bc" translate="yes" xml:space="preserve">
          <source>This module provides a protocol-independent way to use IPv4 and IPv6 sockets, intended as a replacement for &lt;a href=&quot;IO::Socket::INET&quot;&gt;IO::Socket::INET&lt;/a&gt;. Most constructor arguments and methods are provided in a backward-compatible way. For a list of known differences, see the &lt;code&gt;IO::Socket::INET&lt;/code&gt; INCOMPATIBILITES section below.</source>
          <target state="translated">このモジュールは、&lt;a href=&quot;IO::Socket::INET&quot;&gt;IO :: Socket :: INETの&lt;/a&gt;代わりとして、IPv4およびIPv6ソケットを使用するためのプロトコルに依存しない方法を提供します。ほとんどのコンストラクターの引数とメソッドは、下位互換性のある方法で提供されます。既知の違いのリストについては、以下の「 &lt;code&gt;IO::Socket::INET&lt;/code&gt; INETINCOMPATIBILITES」セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="1ab89d1d5e04832a54cc7d916a65558cc98a23de" translate="yes" xml:space="preserve">
          <source>This module provides a standard way to gather metadata about a .pm file through (mostly) static analysis and (some) code execution. When determining the version of a module, the &lt;code&gt;$VERSION&lt;/code&gt; assignment is &lt;code&gt;eval&lt;/code&gt;ed, as is traditional in the CPAN toolchain.</source>
          <target state="translated">このモジュールは、（ほとんど）静的分析と（一部の）コード実行を通じて.pmファイルに関するメタデータを収集する標準的な方法を提供します。モジュールのバージョンを決定するとき、CPANツールチェーンで従来どおり、 &lt;code&gt;$VERSION&lt;/code&gt; 割り当てが &lt;code&gt;eval&lt;/code&gt; れます。</target>
        </trans-unit>
        <trans-unit id="96823924a180df110252f785d7a14a45c7a178c6" translate="yes" xml:space="preserve">
          <source>This module provides a variety of constants, structure manipulators and other functions related to socket-based networking. The values and functions provided are useful when used in conjunction with Perl core functions such as socket(), setsockopt() and bind(). It also provides several other support functions, mostly for dealing with conversions of network addresses between human-readable and native binary forms, and for hostname resolver operations.</source>
          <target state="translated">このモジュールは、ソケットベースのネットワークに関連する様々な定数、構造体マニピュレータ、その他の関数を提供します。提供される値や関数は、socket()、setsockopt()、bind()などの Perl のコア関数と組み合わせて使用すると便利です。また、他にもいくつかのサポート関数を提供しています。主に、人間が読める形式とネイティブなバイナリ形式との間のネットワークアドレスの変換や、ホスト名リゾルバ操作を扱うための関数です。</target>
        </trans-unit>
        <trans-unit id="c14c6338e762c52ff6d582916956b99716820151" translate="yes" xml:space="preserve">
          <source>This module provides aliases for the built-in variables whose names no one seems to like to read. Variables with side-effects which get triggered just by accessing them (like $0) will still be affected.</source>
          <target state="translated">このモジュールは、誰も読みたくないような名前の組み込み変数のエイリアスを提供します。($0 のような)アクセスしただけで発生する副作用を持つ変数は、まだ影響を受けます。</target>
        </trans-unit>
        <trans-unit id="db82fd21a4c838f2cb867e238f620528a9b4e06a" translate="yes" xml:space="preserve">
          <source>This module provides an interface that allows filters to be applied to tied Hashes associated with DBM files. It builds on the DBM Filter hooks that are present in all the *DB*_File modules included with the standard Perl source distribution from version 5.6.1 onwards. In addition to the *DB*_File modules distributed with Perl, the BerkeleyDB module, available on CPAN, supports the DBM Filter hooks. See &lt;a href=&quot;perldbmfilter&quot;&gt;perldbmfilter&lt;/a&gt; for more details on the DBM Filter hooks.</source>
          <target state="translated">このモジュールは、DBMファイルに関連付けられた結合ハッシュにフィルターを適用できるようにするインターフェースを提供します。これは、バージョン5.6.1以降の標準のPerlソース配布に含まれるすべての* DB * _Fileモジュールに存在するDBMフィルターフックに基づいて構築されています。Perlと共に配布される* DB * _Fileモジュールに加えて、CPANで利用可能なBerkeleyDBモジュールは、DBMフィルターフックをサポートします。参照してください&lt;a href=&quot;perldbmfilter&quot;&gt;perldbmfilter&lt;/a&gt; DBMフィルターフックの詳細については。</target>
        </trans-unit>
        <trans-unit id="2b24b2421d4d30b4ae85eba6a79f975fb3c67219" translate="yes" xml:space="preserve">
          <source>This module provides four global hashes:</source>
          <target state="translated">このモジュールは、4 つのグローバルハッシュを提供します。</target>
        </trans-unit>
        <trans-unit id="d5d483b4b377e197aedecfe9fa15f04f3c6c2c95" translate="yes" xml:space="preserve">
          <source>This module provides functions for determining the pathname of the current working directory. It is recommended that getcwd (or another *cwd() function) be used in</source>
          <target state="translated">このモジュールは、現在の作業ディレクトリのパス名を決定するための関数を提供します。getcwd (あるいは別の *cwd()関数)を</target>
        </trans-unit>
        <trans-unit id="37033effa06ce25f227ce23dc6a9e45e7efa61d9" translate="yes" xml:space="preserve">
          <source>This module provides functions that are the inverse of built-in perl functions &lt;code&gt;&lt;a href=&quot;../functions/localtime&quot;&gt;localtime()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../functions/gmtime&quot;&gt;gmtime()&lt;/a&gt;&lt;/code&gt;. They accept a date as a six-element array, and return the corresponding &lt;code&gt;&lt;a href=&quot;../functions/time&quot;&gt;time(2)&lt;/a&gt;&lt;/code&gt; value in seconds since the system epoch (Midnight, January 1, 1970 GMT on Unix, for example). This value can be positive or negative, though POSIX only requires support for positive values, so dates before the system's epoch may not work on all operating systems.</source>
          <target state="translated">このモジュールは、組み込みのperl関数 &lt;code&gt;&lt;a href=&quot;../functions/localtime&quot;&gt;localtime()&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;../functions/gmtime&quot;&gt;gmtime()&lt;/a&gt;&lt;/code&gt; の逆の関数を提供します。これらは、6要素の配列として日付を受け入れ、システムエポックからの対応する &lt;code&gt;&lt;a href=&quot;../functions/time&quot;&gt;time(2)&lt;/a&gt;&lt;/code&gt; 値を秒単位で返します（たとえば、Unixでは1970年1月1日GMT）。この値は正でも負でもかまいませんが、POSIXは正の値のサポートのみを必要とするため、システムのエポック以前の日付がすべてのオペレーティングシステムで機能するとは限りません。</target>
        </trans-unit>
        <trans-unit id="392d323e4c70390d247af9b47465d1285979f82d" translate="yes" xml:space="preserve">
          <source>This module provides functions that are the inverse of built-in perl functions &lt;code&gt;localtime()&lt;/code&gt; and &lt;code&gt;gmtime()&lt;/code&gt;. They accept a date as a six-element array, and return the corresponding &lt;code&gt;time(2)&lt;/code&gt; value in seconds since the system epoch (Midnight, January 1, 1970 GMT on Unix, for example). This value can be positive or negative, though POSIX only requires support for positive values, so dates before the system's epoch may not work on all operating systems.</source>
          <target state="translated">このモジュールは、組み込みのperl関数 &lt;code&gt;localtime()&lt;/code&gt; および &lt;code&gt;gmtime()&lt;/code&gt; の逆関数を提供します。これらは日付を6要素配列として受け入れ、対応する &lt;code&gt;time(2)&lt;/code&gt; 値をシステムエポック（たとえば、Unixの1970年1月1日深夜GMT ）から秒単位で返します。この値は正または負の場合がありますが、POSIXは正の値のサポートのみを必要とするため、システムのエポックより前の日付がすべてのオペレーティングシステムで機能するとは限りません。</target>
        </trans-unit>
        <trans-unit id="d1ece64b49e28f99121f72eab284aec43cb55951" translate="yes" xml:space="preserve">
          <source>This module provides functions to encode and decode strings into and from the base64 encoding specified in RFC 2045 -</source>
          <target state="translated">このモジュールは、RFC 2045-base64 エンコーディングで指定されている文字列をエンコードしたりデコードしたりする機能を提供します。</target>
        </trans-unit>
        <trans-unit id="990d143d4bc42dc7eed0bcd6394bda54ff57474f" translate="yes" xml:space="preserve">
          <source>This module provides functions to encode and decode strings into and from the quoted-printable encoding specified in RFC 2045 -</source>
          <target state="translated">このモジュールは、RFC 2045-で指定されている quoted-printable エンコーディングへの文字列のエンコードとデコードを行う関数を提供します。</target>
        </trans-unit>
        <trans-unit id="88e1b2c2210a010cd2575fe18207624d8324387f" translate="yes" xml:space="preserve">
          <source>This module provides linguistic tailoring for it taking advantage of &lt;code&gt;Unicode::Collate&lt;/code&gt;.</source>
          <target state="translated">このモジュールは、 &lt;code&gt;Unicode::Collate&lt;/code&gt; を利用して言語を調整します。</target>
        </trans-unit>
        <trans-unit id="abe4c30f310ea99cbe1696d0845fc7519b7463f7" translate="yes" xml:space="preserve">
          <source>This module provides lists of modules that are broken, or have been broken in the past, when upgrading &lt;a href=&quot;Test::Builder&quot;&gt;Test::Builder&lt;/a&gt; to use &lt;a href=&quot;test2&quot;&gt;Test2&lt;/a&gt;.</source>
          <target state="translated">このモジュールは、&lt;a href=&quot;test2&quot;&gt;Test2&lt;/a&gt;を使用するように&lt;a href=&quot;Test::Builder&quot;&gt;Test :: Builder&lt;/a&gt;をアップグレードするときに、壊れている、または過去に壊れたモジュールのリストを提供します。</target>
        </trans-unit>
        <trans-unit id="0c4de2f96f0939e0587055f3524c8f314354960c" translate="yes" xml:space="preserve">
          <source>This module provides methods for array-tying classes. See &lt;a href=&quot;../perltie&quot;&gt;perltie&lt;/a&gt; for a list of the functions required in order to tie an array to a package. The basic &lt;b&gt;Tie::Array&lt;/b&gt; package provides stub &lt;code&gt;DESTROY&lt;/code&gt; , and &lt;code&gt;EXTEND&lt;/code&gt; methods that do nothing, stub &lt;code&gt;DELETE&lt;/code&gt; and &lt;code&gt;EXISTS&lt;/code&gt; methods that croak() if the delete() or exists() builtins are ever called on the tied array, and implementations of &lt;code&gt;PUSH&lt;/code&gt; , &lt;code&gt;POP&lt;/code&gt; , &lt;code&gt;SHIFT&lt;/code&gt; , &lt;code&gt;UNSHIFT&lt;/code&gt; , &lt;code&gt;SPLICE&lt;/code&gt; and &lt;code&gt;CLEAR&lt;/code&gt; in terms of basic &lt;code&gt;FETCH&lt;/code&gt; , &lt;code&gt;STORE&lt;/code&gt; , &lt;code&gt;FETCHSIZE&lt;/code&gt; , &lt;code&gt;STORESIZE&lt;/code&gt; .</source>
          <target state="translated">このモジュールは、配列を結び付けるクラスのメソッドを提供します。配列をパッケージに&lt;a href=&quot;../perltie&quot;&gt;関連付ける&lt;/a&gt;ために必要な関数のリストについては、perltieを参照してください。基本的な&lt;b&gt;Tie :: Array&lt;/b&gt;パッケージは、何もしないスタブ &lt;code&gt;DESTROY&lt;/code&gt; と &lt;code&gt;EXTEND&lt;/code&gt; メソッド、delete（）またはexists（）ビルトインが結合配列で呼び出された場合にcroak（）するスタブ &lt;code&gt;DELETE&lt;/code&gt; および &lt;code&gt;EXISTS&lt;/code&gt; メソッド、および &lt;code&gt;PUSH&lt;/code&gt; の実装を提供します。基本的な &lt;code&gt;FETCH&lt;/code&gt; 、 &lt;code&gt;STORE&lt;/code&gt; 、 &lt;code&gt;FETCHSIZE&lt;/code&gt; に関する &lt;code&gt;POP&lt;/code&gt; 、 &lt;code&gt;SHIFT&lt;/code&gt; 、 &lt;code&gt;UNSHIFT&lt;/code&gt; 、 &lt;code&gt;SPLICE&lt;/code&gt; および &lt;code&gt;CLEAR&lt;/code&gt; 、 &lt;code&gt;STORESIZE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f29d11225e822d19d127266ee941b28ea4361eb8" translate="yes" xml:space="preserve">
          <source>This module provides methods for array-tying classes. See &lt;a href=&quot;perltie&quot;&gt;perltie&lt;/a&gt; for a list of the functions required in order to tie an array to a package. The basic &lt;b&gt;Tie::Array&lt;/b&gt; package provides stub &lt;code&gt;DESTROY&lt;/code&gt;, and &lt;code&gt;EXTEND&lt;/code&gt; methods that do nothing, stub &lt;code&gt;DELETE&lt;/code&gt; and &lt;code&gt;EXISTS&lt;/code&gt; methods that croak() if the delete() or exists() builtins are ever called on the tied array, and implementations of &lt;code&gt;PUSH&lt;/code&gt;, &lt;code&gt;POP&lt;/code&gt;, &lt;code&gt;SHIFT&lt;/code&gt;, &lt;code&gt;UNSHIFT&lt;/code&gt;, &lt;code&gt;SPLICE&lt;/code&gt; and &lt;code&gt;CLEAR&lt;/code&gt; in terms of basic &lt;code&gt;FETCH&lt;/code&gt;, &lt;code&gt;STORE&lt;/code&gt;, &lt;code&gt;FETCHSIZE&lt;/code&gt;, &lt;code&gt;STORESIZE&lt;/code&gt;.</source>
          <target state="translated">このモジュールは、配列結合クラスのメソッドを提供します。配列をパッケージに&lt;a href=&quot;perltie&quot;&gt;関連付ける&lt;/a&gt;ために必要な関数のリストについては、perltieを参照してください。基本的な&lt;b&gt;Tie :: Array&lt;/b&gt;パッケージは、何もしないスタブ &lt;code&gt;DESTROY&lt;/code&gt; メソッドと &lt;code&gt;EXTEND&lt;/code&gt; メソッド、delete（）またはexists（）ビルトインがタイ配列で呼び出された場合にcroak（）するスタブ &lt;code&gt;DELETE&lt;/code&gt; メソッドと &lt;code&gt;EXISTS&lt;/code&gt; メソッド、および &lt;code&gt;PUSH&lt;/code&gt; の実装を提供します。基本的な &lt;code&gt;FETCH&lt;/code&gt; 、 &lt;code&gt;STORE&lt;/code&gt; 、 &lt;code&gt;FETCHSIZE&lt;/code&gt; 、の観点から、 &lt;code&gt;POP&lt;/code&gt; 、 &lt;code&gt;SHIFT&lt;/code&gt; 、 &lt;code&gt;UNSHIFT&lt;/code&gt; 、 &lt;code&gt;SPLICE&lt;/code&gt; 、 &lt;code&gt;CLEAR&lt;/code&gt; &lt;code&gt;STORESIZE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a02a6b6db2368ef791da2effa9e60fac9461270d" translate="yes" xml:space="preserve">
          <source>This module provides some skeletal methods for handle-tying classes. See &lt;a href=&quot;../perltie&quot;&gt;perltie&lt;/a&gt; for a list of the functions required in tying a handle to a package. The basic &lt;b&gt;Tie::Handle&lt;/b&gt; package provides a &lt;code&gt;new&lt;/code&gt; method, as well as methods &lt;code&gt;TIEHANDLE&lt;/code&gt; , &lt;code&gt;PRINT&lt;/code&gt; , &lt;code&gt;PRINTF&lt;/code&gt; and &lt;code&gt;GETC&lt;/code&gt; .</source>
          <target state="translated">このモジュールは、ハンドルを結び付けるクラスの骨格メソッドをいくつか提供します。ハンドルをパッケージに結び付けるのに必要な関数のリストについては、&lt;a href=&quot;../perltie&quot;&gt;perltie&lt;/a&gt;を参照してください。基本的な&lt;b&gt;Tie :: Handle&lt;/b&gt;パッケージは、 &lt;code&gt;new&lt;/code&gt; メソッドと、メソッド &lt;code&gt;TIEHANDLE&lt;/code&gt; 、 &lt;code&gt;PRINT&lt;/code&gt; 、 &lt;code&gt;PRINTF&lt;/code&gt; 、および &lt;code&gt;GETC&lt;/code&gt; を提供します。</target>
        </trans-unit>
        <trans-unit id="fee8f6e5404f98fd11ba8fe2fe719d028b8507eb" translate="yes" xml:space="preserve">
          <source>This module provides some skeletal methods for handle-tying classes. See &lt;a href=&quot;perltie&quot;&gt;perltie&lt;/a&gt; for a list of the functions required in tying a handle to a package. The basic &lt;b&gt;Tie::Handle&lt;/b&gt; package provides a &lt;code&gt;new&lt;/code&gt; method, as well as methods &lt;code&gt;TIEHANDLE&lt;/code&gt;, &lt;code&gt;PRINT&lt;/code&gt;, &lt;code&gt;PRINTF&lt;/code&gt; and &lt;code&gt;GETC&lt;/code&gt;.</source>
          <target state="translated">このモジュールは、ハンドルを結ぶクラスのためのいくつかの骨格メソッドを提供します。ハンドルをパッケージに結び付けるのに必要な関数のリストについては、&lt;a href=&quot;perltie&quot;&gt;perltie&lt;/a&gt;を参照してください。基本的な&lt;b&gt;Tie :: Handle&lt;/b&gt;パッケージは、 &lt;code&gt;new&lt;/code&gt; メソッドと、 &lt;code&gt;TIEHANDLE&lt;/code&gt; 、 &lt;code&gt;PRINT&lt;/code&gt; 、 &lt;code&gt;PRINTF&lt;/code&gt; 、および &lt;code&gt;GETC&lt;/code&gt; メソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="9e1739e1ebdefff1631d8440f9ca833c6b68c52a" translate="yes" xml:space="preserve">
          <source>This module provides some skeletal methods for hash-tying classes. See &lt;a href=&quot;../perltie&quot;&gt;perltie&lt;/a&gt; for a list of the functions required in order to tie a hash to a package. The basic &lt;b&gt;Tie::Hash&lt;/b&gt; package provides a &lt;code&gt;new&lt;/code&gt; method, as well as methods &lt;code&gt;TIEHASH&lt;/code&gt; , &lt;code&gt;EXISTS&lt;/code&gt; and &lt;code&gt;CLEAR&lt;/code&gt; . The &lt;b&gt;Tie::StdHash&lt;/b&gt; and &lt;b&gt;Tie::ExtraHash&lt;/b&gt; packages provide most methods for hashes described in &lt;a href=&quot;../perltie&quot;&gt;perltie&lt;/a&gt; (the exceptions are &lt;code&gt;UNTIE&lt;/code&gt; and &lt;code&gt;DESTROY&lt;/code&gt; ). They cause tied hashes to behave exactly like standard hashes, and allow for selective overwriting of methods. &lt;b&gt;Tie::Hash&lt;/b&gt; grandfathers the &lt;code&gt;new&lt;/code&gt; method: it is used if &lt;code&gt;TIEHASH&lt;/code&gt; is not defined in the case a class forgets to include a &lt;code&gt;TIEHASH&lt;/code&gt; method.</source>
          <target state="translated">このモジュールは、ハッシュ結合クラスにいくつかの骨格メソッドを提供します。ハッシュをパッケージに&lt;a href=&quot;../perltie&quot;&gt;関連付ける&lt;/a&gt;ために必要な関数のリストについては、perltieを参照してください。基本的な&lt;b&gt;Tie :: Hash&lt;/b&gt;パッケージは、 &lt;code&gt;new&lt;/code&gt; メソッドと、メソッド &lt;code&gt;TIEHASH&lt;/code&gt; 、 &lt;code&gt;EXISTS&lt;/code&gt; 、および &lt;code&gt;CLEAR&lt;/code&gt; を提供します。&lt;b&gt;タイ:: StdHash&lt;/b&gt;と&lt;b&gt;タイ:: ExtraHash&lt;/b&gt;パッケージはで説明したハッシュのためのほとんどのメソッドを提供&lt;a href=&quot;../perltie&quot;&gt;perltieやを&lt;/a&gt;（例外はある &lt;code&gt;UNTIE&lt;/code&gt; や &lt;code&gt;DESTROY&lt;/code&gt; ）。それらはタイドハッシュを標準のハッシュとまったく同じように動作させ、メソッドの選択的な上書きを可能にします。&lt;b&gt;Tie :: Hashの&lt;/b&gt;祖父 &lt;code&gt;new&lt;/code&gt; メソッド：クラスが &lt;code&gt;TIEHASH&lt;/code&gt; メソッドを含めるのを忘れた場合に &lt;code&gt;TIEHASH&lt;/code&gt; が定義されていない場合に使用されます。</target>
        </trans-unit>
        <trans-unit id="e86347afc73eee0d0269a2eb0166a0d2b4987d04" translate="yes" xml:space="preserve">
          <source>This module provides some skeletal methods for hash-tying classes. See &lt;a href=&quot;perltie&quot;&gt;perltie&lt;/a&gt; for a list of the functions required in order to tie a hash to a package. The basic &lt;b&gt;Tie::Hash&lt;/b&gt; package provides a &lt;code&gt;new&lt;/code&gt; method, as well as methods &lt;code&gt;TIEHASH&lt;/code&gt;, &lt;code&gt;EXISTS&lt;/code&gt; and &lt;code&gt;CLEAR&lt;/code&gt;. The &lt;b&gt;Tie::StdHash&lt;/b&gt; and &lt;b&gt;Tie::ExtraHash&lt;/b&gt; packages provide most methods for hashes described in &lt;a href=&quot;perltie&quot;&gt;perltie&lt;/a&gt; (the exceptions are &lt;code&gt;UNTIE&lt;/code&gt; and &lt;code&gt;DESTROY&lt;/code&gt;). They cause tied hashes to behave exactly like standard hashes, and allow for selective overwriting of methods. &lt;b&gt;Tie::Hash&lt;/b&gt; grandfathers the &lt;code&gt;new&lt;/code&gt; method: it is used if &lt;code&gt;TIEHASH&lt;/code&gt; is not defined in the case a class forgets to include a &lt;code&gt;TIEHASH&lt;/code&gt; method.</source>
          <target state="translated">このモジュールは、ハッシュタイイングクラスのためのいくつかの骨格メソッドを提供します。ハッシュをパッケージに&lt;a href=&quot;perltie&quot;&gt;関連付ける&lt;/a&gt;ために必要な関数のリストについては、perltieを参照してください。基本的な&lt;b&gt;Tie :: Hash&lt;/b&gt;パッケージは、 &lt;code&gt;TIEHASH&lt;/code&gt; 、 &lt;code&gt;EXISTS&lt;/code&gt; 、 &lt;code&gt;CLEAR&lt;/code&gt; メソッドに加えて、 &lt;code&gt;new&lt;/code&gt; メソッドを提供します。&lt;b&gt;タイ:: StdHash&lt;/b&gt;と&lt;b&gt;タイ:: ExtraHash&lt;/b&gt;パッケージはで説明したハッシュのためのほとんどのメソッドを提供&lt;a href=&quot;perltie&quot;&gt;perltieやを&lt;/a&gt;（例外はある &lt;code&gt;UNTIE&lt;/code&gt; や &lt;code&gt;DESTROY&lt;/code&gt; ）。これらにより、タイハッシュは標準ハッシュとまったく同じように動作し、メソッドの選択的な上書きが可能になります。&lt;b&gt;ネクタイ::ハッシュ&lt;/b&gt;祖父&lt;b&gt;&lt;/b&gt;&lt;b&gt;&lt;/b&gt;&lt;b&gt;&lt;/b&gt; &lt;code&gt;new&lt;/code&gt; メソッド：クラスが &lt;code&gt;TIEHASH&lt;/code&gt; メソッドを含めるのを忘れた場合に、 &lt;code&gt;TIEHASH&lt;/code&gt; が定義されていない場合に使用されます。</target>
        </trans-unit>
        <trans-unit id="4010b9458f00ef557ee377f021a5154f08e74c91" translate="yes" xml:space="preserve">
          <source>This module provides some skeletal methods for scalar-tying classes. See &lt;a href=&quot;../perltie&quot;&gt;perltie&lt;/a&gt; for a list of the functions required in tying a scalar to a package. The basic &lt;b&gt;Tie::Scalar&lt;/b&gt; package provides a &lt;code&gt;new&lt;/code&gt; method, as well as methods &lt;code&gt;TIESCALAR&lt;/code&gt; , &lt;code&gt;FETCH&lt;/code&gt; and &lt;code&gt;STORE&lt;/code&gt; . The &lt;b&gt;Tie::StdScalar&lt;/b&gt; package provides all the methods specified in &lt;a href=&quot;../perltie&quot;&gt;perltie&lt;/a&gt;. It inherits from &lt;b&gt;Tie::Scalar&lt;/b&gt; and causes scalars tied to it to behave exactly like the built-in scalars, allowing for selective overloading of methods. The &lt;code&gt;new&lt;/code&gt; method is provided as a means of grandfathering, for classes that forget to provide their own &lt;code&gt;TIESCALAR&lt;/code&gt; method.</source>
          <target state="translated">このモジュールは、スカラー結合クラス用のいくつかの骨格メソッドを提供します。スカラーをパッケージに&lt;a href=&quot;../perltie&quot;&gt;関連付ける&lt;/a&gt;ために必要な関数のリストについては、perltieを参照してください。基本的な&lt;b&gt;Tie :: Scalar&lt;/b&gt;パッケージは、メソッド &lt;code&gt;TIESCALAR&lt;/code&gt; 、 &lt;code&gt;FETCH&lt;/code&gt; および &lt;code&gt;STORE&lt;/code&gt; に加えて、 &lt;code&gt;new&lt;/code&gt; メソッドを提供します。&lt;b&gt;タイ:: StdScalar&lt;/b&gt;パッケージがで指定されたすべてのメソッドを提供&lt;a href=&quot;../perltie&quot;&gt;perltieやが&lt;/a&gt;。これは&lt;b&gt;Tie :: Scalar&lt;/b&gt;を継承し、それに関連付けられたスカラーを組み込みスカラーとまったく同じように動作させ、メソッドの選択的なオーバーロードを可能にします。 &lt;code&gt;new&lt;/code&gt; 方法は、自分自身を提供することを忘れクラスのために、グランドファザリングの手段として提供されています&lt;b&gt;&lt;/b&gt;&lt;b&gt;&lt;/b&gt; &lt;code&gt;TIESCALAR&lt;/code&gt; メソッド。</target>
        </trans-unit>
        <trans-unit id="1d35ccb6479014e9b69b5c1117e63a8ac16cdc51" translate="yes" xml:space="preserve">
          <source>This module provides some skeletal methods for scalar-tying classes. See &lt;a href=&quot;perltie&quot;&gt;perltie&lt;/a&gt; for a list of the functions required in tying a scalar to a package. The basic &lt;b&gt;Tie::Scalar&lt;/b&gt; package provides a &lt;code&gt;new&lt;/code&gt; method, as well as methods &lt;code&gt;TIESCALAR&lt;/code&gt;, &lt;code&gt;FETCH&lt;/code&gt; and &lt;code&gt;STORE&lt;/code&gt;. The &lt;b&gt;Tie::StdScalar&lt;/b&gt; package provides all the methods specified in &lt;a href=&quot;perltie&quot;&gt;perltie&lt;/a&gt;. It inherits from &lt;b&gt;Tie::Scalar&lt;/b&gt; and causes scalars tied to it to behave exactly like the built-in scalars, allowing for selective overloading of methods. The &lt;code&gt;new&lt;/code&gt; method is provided as a means of grandfathering, for classes that forget to provide their own &lt;code&gt;TIESCALAR&lt;/code&gt; method.</source>
          <target state="translated">このモジュールは、スカラー結合クラスのいくつかの骨格メソッドを提供します。スカラーをパッケージに結び付けるのに必要な関数のリストについては、&lt;a href=&quot;perltie&quot;&gt;perltie&lt;/a&gt;を参照してください。基本的な&lt;b&gt;Tie :: Scalar&lt;/b&gt;パッケージは、 &lt;code&gt;new&lt;/code&gt; メソッドと、メソッド &lt;code&gt;TIESCALAR&lt;/code&gt; 、 &lt;code&gt;FETCH&lt;/code&gt; 、および &lt;code&gt;STORE&lt;/code&gt; を提供します。&lt;b&gt;タイ:: StdScalar&lt;/b&gt;パッケージがで指定されたすべてのメソッドを提供&lt;a href=&quot;perltie&quot;&gt;perltieやが&lt;/a&gt;。&lt;b&gt;Tie :: Scalar&lt;/b&gt;を継承し、それに関連付けられたスカラーを組み込みのスカラーとまったく同じように動作させ、メソッドの選択的なオーバーロードを可能にします。 &lt;code&gt;new&lt;/code&gt; 方法は、自分自身を提供することを忘れクラスのために、グランドファザリングの手段として提供されています &lt;code&gt;TIESCALAR&lt;/code&gt; メソッド。</target>
        </trans-unit>
        <trans-unit id="974d73b0ae9a5c62aa55b2cce046ca17c11ca806" translate="yes" xml:space="preserve">
          <source>This module provides support for big integer calculations. It is not intended to be used directly, but rather as a parent class for backend libraries used by Math::BigInt, Math::BigFloat, Math::BigRat, and related modules.</source>
          <target state="translated">このモジュールは、ビッグ整数計算のサポートを提供します。これは直接使用することを意図したものではなく、むしろ Math::BigInt、Math::BigFloat、Math::BigRat、および関連モジュールによって使用されるバックエンドライブラリの親クラスとして使用することを意図しています。</target>
        </trans-unit>
        <trans-unit id="45a6ced9686dd2822231048fa2c17a6218884f07" translate="yes" xml:space="preserve">
          <source>This module provides the ability to use references as hash keys if you first &lt;code&gt;&lt;a href=&quot;../functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; the hash variable to this module. Normally, only the keys of the tied hash itself are preserved as references; to use references as keys in hashes-of-hashes, use Tie::RefHash::Nestable, included as part of Tie::RefHash.</source>
          <target state="translated">このモジュールは、あなたが最初の場合はハッシュキーとしてリファレンスを使用する機能を提供 &lt;code&gt;&lt;a href=&quot;../functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; このモジュールにハッシュ変数を。通常、結合ハッシュ自体のキーのみが参照として保持されます。ハッシュのハッシュのキーとして参照を使用するには、Tie :: RefHashの一部として含まれているTie :: RefHash :: Nestableを使用します。</target>
        </trans-unit>
        <trans-unit id="b93d510d992a2ad95750d227093b68f7a2f27bd8" translate="yes" xml:space="preserve">
          <source>This module provides the ability to use references as hash keys if you first &lt;code&gt;tie&lt;/code&gt; the hash variable to this module. Normally, only the keys of the tied hash itself are preserved as references; to use references as keys in hashes-of-hashes, use Tie::RefHash::Nestable, included as part of Tie::RefHash.</source>
          <target state="translated">このモジュールは、最初にハッシュ変数をこのモジュールに &lt;code&gt;tie&lt;/code&gt; 場合に、参照をハッシュキーとして使用する機能を提供します。通常、タイハッシュ自体のキーのみが参照として保持されます。ハッシュのハッシュのキーとして参照を使用するには、Tie :: RefHash :: Nestableを使用します。これはTie :: RefHashの一部として含まれています。</target>
        </trans-unit>
        <trans-unit id="ebae6f4a623ce67e5227c5968ced52d6ec8a379b" translate="yes" xml:space="preserve">
          <source>This module provides things that are useful in decoding Pod E&amp;lt;...&amp;gt; sequences. Presumably, it should be used only by Pod parsers and/or formatters.</source>
          <target state="translated">このモジュールは、ポッドE &amp;lt;...&amp;gt;シーケンスのデコードに役立つものを提供します。おそらく、それはポッドパーサーおよび/またはフォーマッターによってのみ使用されるべきです。</target>
        </trans-unit>
        <trans-unit id="0b9bdfe8079862de56a9be28719c20253e80c566" translate="yes" xml:space="preserve">
          <source>This module provides thread-safe FIFO queues that can be accessed safely by any number of threads.</source>
          <target state="translated">このモジュールは、任意の数のスレッドから安全にアクセスできるスレッドセーフFIFOキューを提供します。</target>
        </trans-unit>
        <trans-unit id="c893e4865fad5c4ebef15f59be14ed58305bf748" translate="yes" xml:space="preserve">
          <source>This module provides you with objects that will collate according to your national character set, provided that the POSIX setlocale() function is supported on your system.</source>
          <target state="translated">このモジュールは、POSIX setlocale()関数がシステム上でサポートされている場合に、その国の文字セットに応じて照合するオブジェクトを提供します。</target>
        </trans-unit>
        <trans-unit id="3c80ba9c5ba8104333b035c434045b2d217f883f" translate="yes" xml:space="preserve">
          <source>This module provides you with the framework to write</source>
          <target state="translated">このモジュールは</target>
        </trans-unit>
        <trans-unit id="a42cca3ae2e3ec2aed33868679dacb4f08255f28" translate="yes" xml:space="preserve">
          <source>This module replaces the standard &lt;code&gt;&lt;a href=&quot;../functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../functions/gmtime&quot;&gt;gmtime&lt;/a&gt;&lt;/code&gt; functions with implementations that return objects. It does so in a backwards compatible manner, so that using localtime/gmtime in the way documented in perlfunc will still return what you expect.</source>
          <target state="translated">このモジュールは、標準の &lt;code&gt;&lt;a href=&quot;../functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt; 関数と &lt;code&gt;&lt;a href=&quot;../functions/gmtime&quot;&gt;gmtime&lt;/a&gt;&lt;/code&gt; 関数を、オブジェクトを返す実装に置き換えます。これは下位互換性のある方法で行われるため、perlfuncに記載されている方法でlocaltime / gmtimeを使用しても、期待どおりの結果が返されます。</target>
        </trans-unit>
        <trans-unit id="ebad2bd284dfda2fca32fe79ad6c3153c79782e2" translate="yes" xml:space="preserve">
          <source>This module replaces the standard &lt;code&gt;localtime&lt;/code&gt; and &lt;code&gt;gmtime&lt;/code&gt; functions with implementations that return objects. It does so in a backwards compatible manner, so that using localtime/gmtime in the way documented in perlfunc will still return what you expect.</source>
          <target state="translated">このモジュールは、標準の &lt;code&gt;localtime&lt;/code&gt; 関数と &lt;code&gt;gmtime&lt;/code&gt; 関数を、オブジェクトを返す実装に置き換えます。これは下位互換性のある方法で行われるため、perlfuncに記載されている方法でlocaltime / gmtimeを使用しても、期待どおりの結果が得られます。</target>
        </trans-unit>
        <trans-unit id="a5bdc953dcd00c8d1fe5956d84a4a3e6df9745fe" translate="yes" xml:space="preserve">
          <source>This module should implement a method named &lt;code&gt;new&lt;/code&gt; that returns an object with two methods: &lt;code&gt;IN&lt;/code&gt; and &lt;code&gt;OUT&lt;/code&gt; . These should return filehandles to use for debugging input and output correspondingly. The &lt;code&gt;new&lt;/code&gt; method should inspect an argument containing the value of &lt;code&gt;$ENV{PERLDB_NOTTY}&lt;/code&gt; at startup, or &lt;code&gt;&quot;$ENV{HOME}/.perldbtty$$&quot;&lt;/code&gt; otherwise. This file is not inspected for proper ownership, so security hazards are theoretically possible.</source>
          <target state="translated">このモジュールは、 &lt;code&gt;IN&lt;/code&gt; と &lt;code&gt;OUT&lt;/code&gt; の 2つのメソッドを持つオブジェクトを返す &lt;code&gt;new&lt;/code&gt; という名前のメソッドを実装する必要があります。これらは、対応する入力と出力のデバッグに使用するファイルハンドルを返します。 &lt;code&gt;new&lt;/code&gt; 方法は、以下の値を含む引数を検査すべきである &lt;code&gt;$ENV{PERLDB_NOTTY}&lt;/code&gt; 起動時に、または &lt;code&gt;&quot;$ENV{HOME}/.perldbtty$$&quot;&lt;/code&gt; さもなければ。このファイルは適切な所有権について検査されないため、理論的にはセキュリティ上の問題が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="6ae943e96b2618df870eb0a33680626556843298" translate="yes" xml:space="preserve">
          <source>This module should implement a method named &lt;code&gt;new&lt;/code&gt; that returns an object with two methods: &lt;code&gt;IN&lt;/code&gt; and &lt;code&gt;OUT&lt;/code&gt;. These should return filehandles to use for debugging input and output correspondingly. The &lt;code&gt;new&lt;/code&gt; method should inspect an argument containing the value of &lt;code&gt;$ENV{PERLDB_NOTTY}&lt;/code&gt; at startup, or &lt;code&gt;&quot;$ENV{HOME}/.perldbtty$$&quot;&lt;/code&gt; otherwise. This file is not inspected for proper ownership, so security hazards are theoretically possible.</source>
          <target state="translated">このモジュールは、 &lt;code&gt;IN&lt;/code&gt; と &lt;code&gt;OUT&lt;/code&gt; の2つのメソッドを持つオブジェクトを返す &lt;code&gt;new&lt;/code&gt; という名前のメソッドを実装する必要があります。これらは、入力と出力を対応してデバッグするために使用するファイルハンドルを返す必要があります。 &lt;code&gt;new&lt;/code&gt; 方法は、以下の値を含む引数を検査すべきである &lt;code&gt;$ENV{PERLDB_NOTTY}&lt;/code&gt; 起動時に、または &lt;code&gt;&quot;$ENV{HOME}/.perldbtty$$&quot;&lt;/code&gt; さもなければ。このファイルは適切な所有権について検査されていないため、理論的にはセキュリティ上の問題が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="bad58f419e7f4aec9440c0245d2f7f3c13689acc" translate="yes" xml:space="preserve">
          <source>This module simplifies the process of diagnosing such problems. Just put this line on top of your main program:</source>
          <target state="translated">このモジュールは、このような問題を診断するプロセスを簡略化します。この行をメインプログラムの上に置くだけです。</target>
        </trans-unit>
        <trans-unit id="2af86b3d96524d0d85ce2a4bfec17fb68c6415ad" translate="yes" xml:space="preserve">
          <source>This module simplifies the task of writing test files for Perl modules, such that their output is in the format that &lt;a href=&quot;Test::Harness&quot;&gt;Test::Harness&lt;/a&gt; expects to see.</source>
          <target state="translated">このモジュールは、Perlモジュールのテストファイルを作成するタスクを簡素化し、その出力が&lt;a href=&quot;Test::Harness&quot;&gt;Test :: Harnessが&lt;/a&gt;期待する形式になるようにします。</target>
        </trans-unit>
        <trans-unit id="6a41ba09a40a54e49a9ee3baae88659ee7ff44a3" translate="yes" xml:space="preserve">
          <source>This module simplifies the task of writing test files for Perl modules, such that their output is in the format that &lt;a href=&quot;test/harness&quot;&gt;Test::Harness&lt;/a&gt; expects to see.</source>
          <target state="translated">このモジュールは、Perlモジュールのテストファイルを作成するタスクを簡略化し、それらの出力が&lt;a href=&quot;test/harness&quot;&gt;Test :: Harnessが&lt;/a&gt;予期する形式になるようにします。</target>
        </trans-unit>
        <trans-unit id="11c0f42159d2cd738d87f4668e591361666ef5d1" translate="yes" xml:space="preserve">
          <source>This module supplies line breaking conformant with &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.unicode.org%2freports%2ftr14&quot;&gt;UAX#14 Unicode Line Breaking Algorithm&lt;/a&gt;.</source>
          <target state="translated">このモジュールは、&lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.unicode.org%2freports%2ftr14&quot;&gt;UAX＃14 Unicode Line Breaking Algorithmに&lt;/a&gt;準拠した改行を提供します。</target>
        </trans-unit>
        <trans-unit id="7362dd1991fb64d8e60d1766b453419474c1d7a8" translate="yes" xml:space="preserve">
          <source>This module supports dual-valued variables created using &lt;code&gt;dualvar()&lt;/code&gt; from &lt;a href=&quot;../scalar/util&quot;&gt;Scalar::Util&lt;/a&gt;. However, while &lt;code&gt;$!&lt;/code&gt; acts like a dualvar, it is implemented as a tied SV. To propagate its value, use the follow construct, if needed:</source>
          <target state="translated">このモジュールは、&lt;a href=&quot;../scalar/util&quot;&gt;Scalar :: Utilの&lt;/a&gt; &lt;code&gt;dualvar()&lt;/code&gt; を使用して作成された二重値変数をサポートします。ただし、 &lt;code&gt;$!&lt;/code&gt; dualvarのように動作し、結合SVとして実装されます。その値を伝播するには、必要に応じて次の構成を使用します。</target>
        </trans-unit>
        <trans-unit id="fd505ee058fc17bfb1d30b711a408033af247e5c" translate="yes" xml:space="preserve">
          <source>This module supports dual-valued variables created using &lt;code&gt;dualvar()&lt;/code&gt; from &lt;a href=&quot;Scalar::Util&quot;&gt;Scalar::Util&lt;/a&gt;. However, while &lt;code&gt;$!&lt;/code&gt; acts like a dualvar, it is implemented as a tied SV. To propagate its value, use the follow construct, if needed:</source>
          <target state="translated">このモジュールは、&lt;a href=&quot;Scalar::Util&quot;&gt;Scalar :: Utilの&lt;/a&gt; &lt;code&gt;dualvar()&lt;/code&gt; を使用して作成された二重値変数をサポートします。ただし、 &lt;code&gt;$!&lt;/code&gt; デュアルバーのように機能し、タイのSVとして実装されます。その値を伝播するには、必要に応じて次の構文を使用します。</target>
        </trans-unit>
        <trans-unit id="4a9a2cc7b64dab0e46b52256bb4b3682e797fe2a" translate="yes" xml:space="preserve">
          <source>This module supports the sharing of the following data types only: scalars and scalar refs, arrays and array refs, and hashes and hash refs.</source>
          <target state="translated">このモジュールは、以下のデータ型の共有のみをサポートしています:スカラとスカラ参照、配列と配列参照、ハッシュとハッシュ参照。</target>
        </trans-unit>
        <trans-unit id="a0c98feb7e76c5e1cd4d46ac2f59afc0263d11ba" translate="yes" xml:space="preserve">
          <source>This module takes the existing &lt;code&gt;File::Glob&lt;/code&gt; module as a starting point and extends it to allow new filenames to be derived from the files matched by &lt;code&gt;File::Glob&lt;/code&gt; .</source>
          <target state="translated">このモジュールは、既存の &lt;code&gt;File::Glob&lt;/code&gt; モジュールを開始点として取り、File :: Globに一致する &lt;code&gt;File::Glob&lt;/code&gt; から新しいファイル名を派生できるように拡張します。</target>
        </trans-unit>
        <trans-unit id="0cfd10e3f1ec19589cfc4011f0c16d6ed897f4ea" translate="yes" xml:space="preserve">
          <source>This module takes the existing &lt;code&gt;File::Glob&lt;/code&gt; module as a starting point and extends it to allow new filenames to be derived from the files matched by &lt;code&gt;File::Glob&lt;/code&gt;.</source>
          <target state="translated">このモジュールは、既存の &lt;code&gt;File::Glob&lt;/code&gt; モジュールを開始点として使用し、それを拡張して、 &lt;code&gt;File::Glob&lt;/code&gt; と一致するファイルから新しいファイル名を取得できるようにします。</target>
        </trans-unit>
        <trans-unit id="052bc1b3338f70ab6cb4be4a053d4fd7e5528e2e" translate="yes" xml:space="preserve">
          <source>This module tells its users that functions in the FOOBAR package are to be autoloaded from after the &lt;code&gt;__DATA__&lt;/code&gt; token. See also &lt;a href=&quot;perlsub#Autoloading&quot;&gt;&quot;Autoloading&quot; in perlsub&lt;/a&gt;.</source>
          <target state="translated">このモジュールは、FOOBARパッケージの関数が &lt;code&gt;__DATA__&lt;/code&gt; トークンの後に自動ロードされることをユーザーに通知します。&lt;a href=&quot;perlsub#Autoloading&quot;&gt;perlsubの「自動ロード」&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="a954cd9e0b1a91ff11e964474367fdd384bdca9c" translate="yes" xml:space="preserve">
          <source>This module tells its users that functions in the FOOBAR package are to be autoloaded from after the &lt;code&gt;__DATA__&lt;/code&gt; token. See also &lt;a href=&quot;perlsub#Autoloading&quot;&gt;Autoloading in perlsub&lt;/a&gt;.</source>
          <target state="translated">このモジュールは、FOOBARパッケージの関数が &lt;code&gt;__DATA__&lt;/code&gt; トークンの後に自動ロードされることをユーザーに通知します。&lt;a href=&quot;perlsub#Autoloading&quot;&gt;perlsubのオートロード&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="a4932847f497c060c74592b6ad7e18f95a164be8" translate="yes" xml:space="preserve">
          <source>This module tests the perl C API. Also exposes various bit of the perl internals for the use of core test scripts.</source>
          <target state="translated">このモジュールは perl C API をテストします。また、コアテストスクリプトを使用するための perl 内部の様々なビットを公開しています。</target>
        </trans-unit>
        <trans-unit id="0a9a81649e360d7b3e7438be28feaaf818a5ce22" translate="yes" xml:space="preserve">
          <source>This module uses &lt;a href=&quot;Term::Cap&quot;&gt;Term::Cap&lt;/a&gt; to find the correct terminal settings. See the documentation of that module for how it finds terminal database information and how to override that behavior if necessary. If unable to find control strings for bold and underscore formatting, that formatting is skipped, resulting in the same output as Pod::Text.</source>
          <target state="translated">このモジュールは、&lt;a href=&quot;Term::Cap&quot;&gt;Term :: Cap&lt;/a&gt;を使用して、正しい端末設定を見つけます。モジュールが端末データベース情報を見つける方法と、必要に応じてその動作をオーバーライドする方法については、そのモジュールのドキュメントを参照してください。太字および下線の書式設定用の制御文字列が見つからない場合、その書式設定はスキップされ、Pod :: Textと同じ出力になります。</target>
        </trans-unit>
        <trans-unit id="939a336b2bb3143f369fbb6ba3a4974db4ff7afa" translate="yes" xml:space="preserve">
          <source>This module uses POSIX::setlocale(). The basic collation conversion is done by strxfrm() which terminates at NUL characters being a decent C routine. collate_xfrm() handles embedded NUL characters gracefully.</source>
          <target state="translated">このモジュールは POSIX::setlocale()を使用します。基本的な照合変換は strxfrm()で行われますが、これはまともな C ルーチンである NUL 文字で終了します。</target>
        </trans-unit>
        <trans-unit id="3d7e780fb3434a21970906d8c1e16da4e1e4c306" translate="yes" xml:space="preserve">
          <source>This module uses Term::Cap to retrieve the formatting escape sequences for the current terminal, and falls back on the ECMA-48 (the same in this regard as ANSI X3.64 and ISO 6429, the escape codes also used by DEC VT100 terminals) if the bold, underline, and reset codes aren't set in the termcap information.</source>
          <target state="translated">このモジュールは Term::Cap を使用して現在のターミナルのフォーマットエスケープシーケンスを取得し、太字、下線、リセットコードが termcap 情報に設定されていない場合は ECMA-48 (この点では ANSI X3.64 や ISO6429 と同じで、DEC VT100 ターミナルでも使用されているエスケープコード)にフォールバックします。</target>
        </trans-unit>
        <trans-unit id="058e434497d0f41de20212a7e71136f58de19c26" translate="yes" xml:space="preserve">
          <source>This module uses the Encode module.</source>
          <target state="translated">このモジュールはEncodeモジュールを使用しています。</target>
        </trans-unit>
        <trans-unit id="ecd2d794e766a834737cd883e299b1adbe33f061" translate="yes" xml:space="preserve">
          <source>This module validates a CPAN Meta structure against the version of the the specification claimed in the &lt;code&gt;meta-spec&lt;/code&gt; field of the structure.</source>
          <target state="translated">このモジュールは、CPANメタ構造を、構造の &lt;code&gt;meta-spec&lt;/code&gt; フィールドで要求されている仕様のバージョンに対して検証します。</target>
        </trans-unit>
        <trans-unit id="f4b71953fa4633537c604ac518e043ed458e0579" translate="yes" xml:space="preserve">
          <source>This module was conceived while talking with Tony Bowden in his kitchen one night about the problems I was having writing some really complicated feature into the new Testing module. He observed that the main problem is not dealing with these edge cases but that people hate to write tests &lt;b&gt;at all&lt;/b&gt;. What was needed was a dead simple module that took all the hard work out of testing and was really, really easy to learn. Paul Johnson simultaneously had this idea (unfortunately, he wasn't in Tony's kitchen). This is it.</source>
          <target state="translated">このモジュールは、ある晩非常に複雑な機能を新しいテストモジュールに書き込んでいる問題について、ある晩キッチンでトニーボーデンと話しているときに考案されました。彼は、主な問題はこれらのエッジケースを扱っていないが、人々はテストを書くこと&lt;b&gt;をまったく&lt;/b&gt;嫌っていることを観察しました。必要なのは、テストからすべてのハードワークを取り除き、本当に、本当に簡単に学ぶことができる、とてもシンプルなモジュールでした。ポールジョンソンは同時にこのアイデアを思いつきました（残念ながら、彼はトニーのキッチンにいませんでした）。これだよ。</target>
        </trans-unit>
        <trans-unit id="44e053a287d50cc7ccc07846fa0cd204c00c77bf" translate="yes" xml:space="preserve">
          <source>This module was forked from &lt;a href=&quot;base&quot;&gt;base&lt;/a&gt; to remove the cruft that had accumulated in it.</source>
          <target state="translated">このモジュールは、そこに蓄積していた残骸を取り除くために&lt;a href=&quot;base&quot;&gt;ベース&lt;/a&gt;からフォークされました。</target>
        </trans-unit>
        <trans-unit id="415f859ceb0027d691de683de60a6caa41bf897e" translate="yes" xml:space="preserve">
          <source>This module was introduced with Perl 5.004_04.</source>
          <target state="translated">このモジュールはPerl 5.004_04で導入されました。</target>
        </trans-unit>
        <trans-unit id="d78d05cb96bc7dd60c1272000024e5786c3b344f" translate="yes" xml:space="preserve">
          <source>This module was originally maintained in Perl core by the Perl 5 Porters.</source>
          <target state="translated">このモジュールは元々 Perl 5 Porters によって Perl コアでメンテナンスされていました。</target>
        </trans-unit>
        <trans-unit id="d496390246382aaea7191d7bd504a81ceae75b9b" translate="yes" xml:space="preserve">
          <source>This module was written by Paul Marquess,</source>
          <target state="translated">このモジュールはPaul Marquessによって書かれました。</target>
        </trans-unit>
        <trans-unit id="bc6d88c0756ae538fe8de07d7958dc0a1b51e622" translate="yes" xml:space="preserve">
          <source>This module was written by Paul Marquess, &lt;code&gt;pmqs@cpan.org&lt;/code&gt;.</source>
          <target state="translated">このモジュールは、Paul Marquess、 &lt;code&gt;pmqs@cpan.org&lt;/code&gt; によって作成されました。</target>
        </trans-unit>
        <trans-unit id="447cd8889bedc96882c7e73b779d78b4d5490566" translate="yes" xml:space="preserve">
          <source>This module was written to be able to return the configuration for the currently used perl as deeply as needed for the CPANTESTERS framework. Up until now they used the output of myconfig as a single text blob, and so it was missing the vital binary characteristics of the running perl and the optional applied patches.</source>
          <target state="translated">このモジュールは、現在使用されている perl の設定を CPANTESTERS フレームワークのために必要なだけ深く返すことができるように書かれています。これまでは myconfig の出力を単一のテキストブロブとして使用していたため、実行中の perl の重要なバイナリ特性とオプションで適用されるパッチが欠けていました。</target>
        </trans-unit>
        <trans-unit id="db6bc597ca48fae1b90746fab4916cd0188777f9" translate="yes" xml:space="preserve">
          <source>This module will arrange for the following methods to be available via the object returned from the &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; call.</source>
          <target state="translated">このモジュールは、 &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; 呼び出しから返されたオブジェクトを介して利用できるように、次のメソッドを準備します。</target>
        </trans-unit>
        <trans-unit id="0daa24844007b58d785b5b27ec35609e2bc267e2" translate="yes" xml:space="preserve">
          <source>This module will arrange for the following methods to be available via the object returned from the &lt;code&gt;tie&lt;/code&gt; call.</source>
          <target state="translated">このモジュールは、 &lt;code&gt;tie&lt;/code&gt; 呼び出しから返されたオブジェクトを介して次のメソッドを使用できるように調整します。</target>
        </trans-unit>
        <trans-unit id="2764651445501a5ce090459b163069724d513467" translate="yes" xml:space="preserve">
          <source>This module will ensure that all data written to the DBM will be encoded in UTF-8.</source>
          <target state="translated">このモジュールは、DBMに書き込まれたすべてのデータがUTF-8でエンコードされることを保証します。</target>
        </trans-unit>
        <trans-unit id="d4e571c7af10e51826ae47ab8231a6af4b7edd1a" translate="yes" xml:space="preserve">
          <source>This module will have no effect unless Term::ANSIColor is installed.</source>
          <target state="translated">このモジュールは、Term::ANSIColorがインストールされていないと効果がありません。</target>
        </trans-unit>
        <trans-unit id="753074c360c010972baa819f6207bebbcf1369a9" translate="yes" xml:space="preserve">
          <source>This module's default exports override the core getgrent(), getgrgid(), and getgrnam() functions, replacing them with versions that return &quot;User::grent&quot; objects. This object has methods that return the similarly named structure field name from the C's passwd structure from</source>
          <target state="translated">このモジュールのデフォルトのエクスポートは、コアの getgrent()、 getgrgid()、および getgrnam()関数をオーバーライドし、&quot;User::grent&quot; オブジェクトを返すバージョンに置き換えます。このオブジェクトは、C の passwd 構造体から同様の名前の構造体フィールド名を返すメソッドを持っています。</target>
        </trans-unit>
        <trans-unit id="bc002eb3536b764cc0a1a4a051dbfbb6d0617a7a" translate="yes" xml:space="preserve">
          <source>This module's default exports override the core getgrent(), getgruid(), and getgrnam() functions, replacing them with versions that return &quot;User::grent&quot; objects. This object has methods that return the similarly named structure field name from the C's passwd structure from</source>
          <target state="translated">このモジュールのデフォルトのエクスポートは、コアの getgrent()、 getgruid()、および getgrnam()関数をオーバーライドし、&quot;User::grent&quot; オブジェクトを返すバージョンに置き換えます。このオブジェクトは、C の passwd 構造体から同様の名前の構造体フィールド名を返すメソッドを持っています。</target>
        </trans-unit>
        <trans-unit id="1581c51cdf9361d52e5059029b51bf081eb34a2a" translate="yes" xml:space="preserve">
          <source>This module's default exports override the core gethostbyname() and gethostbyaddr() functions, replacing them with versions that return &quot;Net::hostent&quot; objects. This object has methods that return the similarly named structure field name from the C's hostent structure from</source>
          <target state="translated">このモジュールのデフォルトのエクスポートは、コアとなる gethostbyname()および gethostbyaddr()関数をオーバーライドし、&quot;Net::hostent&quot; オブジェクトを返すバージョンに置き換えます。このオブジェクトは、C の hostent 構造体から同様の名前の構造体フィールド名を返すメソッドを持っています。</target>
        </trans-unit>
        <trans-unit id="1cf48308305a0353920dde6f36f9628e64db01d0" translate="yes" xml:space="preserve">
          <source>This module's default exports override the core getnetbyname() and getnetbyaddr() functions, replacing them with versions that return &quot;Net::netent&quot; objects. This object has methods that return the similarly named structure field name from the C's netent structure from</source>
          <target state="translated">このモジュールのデフォルトのエクスポートでは、コアとなる getnetbyname()および getnetbyaddr()関数がオーバーライドされ、 &quot;Net::netent&quot; オブジェクトを返すバージョンに置き換えられています。このオブジェクトは、C の netent 構造体から同様の名前の構造体フィールド名を返すメソッドを持っています。</target>
        </trans-unit>
        <trans-unit id="63eeed3630a3c131f9be311caba9fa2bc27d9b47" translate="yes" xml:space="preserve">
          <source>This module's default exports override the core getprotoent(), getprotobyname(), and getnetbyport() functions, replacing them with versions that return &quot;Net::protoent&quot; objects. They take default second arguments of &quot;tcp&quot;. This object has methods that return the similarly named structure field name from the C's protoent structure from</source>
          <target state="translated">このモジュールのデフォルトのエクスポートは、コアの getprotoent()、 getprotobyname()、および getnetbyport()関数をオーバーライドし、&quot;Net::protoent&quot; オブジェクトを返すバージョンに置き換えます。これらはデフォルトの第二引数 &quot;tcp&quot; を取ります。このオブジェクトは、C の protoent 構造体から同様の名前の構造体のフィールド名を</target>
        </trans-unit>
        <trans-unit id="4107e545f5b1cf8c8a8164c3254d8e830266adf1" translate="yes" xml:space="preserve">
          <source>This module's default exports override the core getpwent(), getpwuid(), and getpwnam() functions, replacing them with versions that return &lt;code&gt;User::pwent&lt;/code&gt; objects. This object has methods that return the similarly named structure field name from the C's passwd structure from</source>
          <target state="translated">このモジュールのデフォルトのエクスポートは、コアのgetpwent（）、getpwuid（）、およびgetpwnam（）関数をオーバーライドし、 &lt;code&gt;User::pwent&lt;/code&gt; オブジェクトを返すバージョンに置き換えます。このオブジェクトには、Cのpasswd構造体から同様の名前の構造体フィールド名を返すメソッドがあります</target>
        </trans-unit>
        <trans-unit id="10fb02d2375c44b6670d64106c1e02dfe50c1c6b" translate="yes" xml:space="preserve">
          <source>This module's default exports override the core getservent(), getservbyname(), and getnetbyport() functions, replacing them with versions that return &quot;Net::servent&quot; objects. They take default second arguments of &quot;tcp&quot;. This object has methods that return the similarly named structure field name from the C's servent structure from</source>
          <target state="translated">このモジュールのデフォルトのエクスポートは、コアとなる getservent()、 getservbyname()および getnetbyport()関数をオーバーライドし、 &quot;Net::servent&quot; オブジェクトを返すバージョンに置き換えます。これらの関数は、デフォルトの第二引数 &quot;tcp&quot; を取ります。このオブジェクトは、C の servent 構造体から同様の名前の構造体フィールド名を返すメソッドを持っています。</target>
        </trans-unit>
        <trans-unit id="7599d7934dafe0542e5b1a0c799f665df33f32e3" translate="yes" xml:space="preserve">
          <source>This module's default exports override the core gmtime() function, replacing it with a version that returns &quot;Time::tm&quot; objects. This object has methods that return the similarly named structure field name from the C's tm structure from</source>
          <target state="translated">このモジュールのデフォルトのエクスポートは、コアの gmtime()関数をオーバーライドし、&quot;Time::tm&quot; オブジェクトを返すバージョンに置き換えます。このオブジェクトは、C の tm 構造体から同様の名前の構造体フィールド名を返すメソッドを</target>
        </trans-unit>
        <trans-unit id="1c7368710f29f58e692e516e823ad1d056f89a07" translate="yes" xml:space="preserve">
          <source>This module's default exports override the core localtime() function, replacing it with a version that returns &quot;Time::tm&quot; objects. This object has methods that return the similarly named structure field name from the C's tm structure from</source>
          <target state="translated">このモジュールのデフォルトのエクスポートは、コアの localtime()関数をオーバーライドし、&quot;Time::tm&quot; オブジェクトを返すバージョンに置き換えます。このオブジェクトは、C の tm 構造体から同様の名前の構造体フィールド名を返すメソッドを</target>
        </trans-unit>
        <trans-unit id="d73f3c14e45154d8cf626f7be1ef9892237475eb" translate="yes" xml:space="preserve">
          <source>This module's default exports override the core stat() and lstat() functions, replacing them with versions that return &quot;File::stat&quot; objects. This object has methods that return the similarly named structure field name from the stat(2) function; namely, dev, ino, mode, nlink, uid, gid, rdev, size, atime, mtime, ctime, blksize, and blocks.</source>
          <target state="translated">このモジュールのデフォルトのエクスポートは、コアの stat()と lstat()関数をオーバーライドし、&quot;File::stat&quot; オブジェクトを返すバージョンに置き換えます。このオブジェクトは、stat(2)関数から同様の名前の構造体フィールド名を返すメソッドを持っています。</target>
        </trans-unit>
        <trans-unit id="cd05da270956b31cc43582962e51390407dca252" translate="yes" xml:space="preserve">
          <source>This module, when inherited by a package, allows that package's class to define attribute handler subroutines for specific attributes. Variables and subroutines subsequently defined in that package, or in packages derived from that package may be given attributes with the same names as the attribute handler subroutines, which will then be called in one of the compilation phases (i.e. in a &lt;code&gt;BEGIN&lt;/code&gt; , &lt;code&gt;CHECK&lt;/code&gt; , &lt;code&gt;INIT&lt;/code&gt; , or &lt;code&gt;END&lt;/code&gt; block). (&lt;code&gt;UNITCHECK&lt;/code&gt; blocks don't correspond to a global compilation phase, so they can't be specified here.)</source>
          <target state="translated">このモジュールは、パッケージによって継承されると、そのパッケージのクラスで特定の属性の属性ハンドラーサブルーチンを定義できます。その後、そのパッケージ、またはそのパッケージから派生したパッケージで定義された変数とサブルーチンには、属性ハンドラーサブルーチンと同じ名前の属性を付けることができます。これらの属性は、コンパイルフェーズのいずれか（つまり、 &lt;code&gt;BEGIN&lt;/code&gt; 、 &lt;code&gt;CHECK&lt;/code&gt; 、 &lt;code&gt;INIT&lt;/code&gt; )で呼び出されます。、または &lt;code&gt;END&lt;/code&gt; ブロック）。 （ &lt;code&gt;UNITCHECK&lt;/code&gt; ブロックはグローバルコンパイルフェーズに対応していないため、ここでは指定できません。）</target>
        </trans-unit>
        <trans-unit id="99dcf55d867c5d7dcda0db6120bea9765e3ea428" translate="yes" xml:space="preserve">
          <source>This module, when inherited by a package, allows that package's class to define attribute handler subroutines for specific attributes. Variables and subroutines subsequently defined in that package, or in packages derived from that package may be given attributes with the same names as the attribute handler subroutines, which will then be called in one of the compilation phases (i.e. in a &lt;code&gt;BEGIN&lt;/code&gt;, &lt;code&gt;CHECK&lt;/code&gt;, &lt;code&gt;INIT&lt;/code&gt;, or &lt;code&gt;END&lt;/code&gt; block). (&lt;code&gt;UNITCHECK&lt;/code&gt; blocks don't correspond to a global compilation phase, so they can't be specified here.)</source>
          <target state="translated">このモジュールは、パッケージに継承されると、そのパッケージのクラスが特定の属性の属性ハンドラーサブルーチンを定義できるようにします。その後、そのパッケージまたはそのパッケージから派生したパッケージで定義された変数とサブルーチンには、属性ハンドラーサブルーチンと同じ名前の属性を指定できます。これらの属性は、コンパイルフェーズの1つ（つまり、 &lt;code&gt;BEGIN&lt;/code&gt; 、 &lt;code&gt;CHECK&lt;/code&gt; 、 &lt;code&gt;INIT&lt;/code&gt; )で呼び出されます。、または &lt;code&gt;END&lt;/code&gt; ブロック）。 （ &lt;code&gt;UNITCHECK&lt;/code&gt; ブロックはグローバルコンパイルフェーズに対応していないため、ここで指定することはできません。）</target>
        </trans-unit>
        <trans-unit id="d4b82d477760eacd25bf3c70a5e788527be511b5" translate="yes" xml:space="preserve">
          <source>This modules handles the BOM as follows.</source>
          <target state="translated">このモジュールは以下のようにBOMを扱います。</target>
        </trans-unit>
        <trans-unit id="f10c5ffd35143aacf9d4aee6ffb8d09db8a38f8d" translate="yes" xml:space="preserve">
          <source>This name actually evaluates to a sequence of two Katakana characters, not just a single one, and it is illegal to try to take the complement of a sequence. (Mathematically it would mean any sequence of characters from 0 to infinity in length that weren't these two in a row, and that is likely not of any real use.)</source>
          <target state="translated">この名前は実際には1つのカタカナ文字だけではなく、2つのカタカナ文字の列に評価され、列の補数を取ろうとすることは違法です。(数学的には、長さ0から無限大までの文字列のうち、この2つ以外の文字が並んでいないものを意味しますが、実際には何の役にも立たないでしょう)。</target>
        </trans-unit>
        <trans-unit id="3973d4b3df1b4f6e4e1a4578c3854df16aa9cfcc" translate="yes" xml:space="preserve">
          <source>This name should be as descriptive, accurate, and complete as possible. Avoid any risk of ambiguity. Always try to use two or more whole words. Generally the name should reflect what is special about what the module does rather than how it does it. Please use nested module names to group informally or categorize a module. There should be a very good reason for a module not to have a nested name. Module names should begin with a capital letter.</source>
          <target state="translated">この名前は、できるだけ説明的で、正確で、完全なものにしてください。曖昧さのリスクを避ける。常に 2 つ以上の単語を使うようにしてください。一般的に、名前はモジュールがどのようにするかではなく、そのモジュールが何をするかについて何が特別なのかを反映したものにしてください。モジュールを非公式にグループ化したり、分類したりするために、入れ子になったモジュール名を使用してください。入れ子になった名前を持たないモジュールには、それなりの理由があるはずです。モジュール名は大文字で始まります。</target>
        </trans-unit>
        <trans-unit id="179dbc2dff329a2eb588f358318a7847c0e2dc93" translate="yes" xml:space="preserve">
          <source>This namespace is for bundles of tools and plugins. Loading one of these may load multiple tools and plugins. Modules in this namespace should not implement tools directly. In general modules in this namespace should load tools and plugins, then re-export things into the consumers namespace.</source>
          <target state="translated">この名前空間は、ツールとプラグインのバンドルのためのものです。これらのうちの一つをロードすると、複数のツールやプラグインがロードされることがあります。このネームスペースのモジュールはツールを直接実装してはいけません。一般的に、この名前空間のモジュールは、ツールとプラグインをロードしてから、コンシューマーの名前空間に再エキスポートしなければなりません。</target>
        </trans-unit>
        <trans-unit id="25625211c4cda5e1d4faa1db8d7e10f093eef9f2" translate="yes" xml:space="preserve">
          <source>This namespace is for general utilities used by testing tools. Please be considerate when adding new modules to this namespace.</source>
          <target state="translated">この名前空間は、テストツールで使用される一般的なユーティリティのためのものです。この名前空間に新しいモジュールを追加する際には配慮してください。</target>
        </trans-unit>
        <trans-unit id="90daa65eb98c6c93bba627fab2d39064d5b2e4dd" translate="yes" xml:space="preserve">
          <source>This namespace is for modules that cause a test to be skipped when conditions do not allow it to run. Examples would be modules that skip the test on older perls, or when non-essential modules have not been installed.</source>
          <target state="translated">このネームスペースは、条件によって実行できない場合にテストをスキップするモジュールのためのものです。例としては、古い Perl でテストをスキップするモジュールや、 必要のないモジュールがインストールされていない場合にテストをスキップするモジュールなどがあります。</target>
        </trans-unit>
        <trans-unit id="f206c1bcae194bffc342770e7b420f8da8111044" translate="yes" xml:space="preserve">
          <source>This namespace is for plugins. Plugins are modules that change or enhance the behavior of Test2. An example of a plugin is a module that sets the encoding to utf8 globally. Another example is a module that causes a bail-out event after the first test failure.</source>
          <target state="translated">このネームスペースはプラグインのためのものです。プラグインは、Test2 の動作を変更または強化するモジュールです。プラグインの例としては、エンコーディングをグローバルに utf8 に設定するモジュールがあります。他の例としては、最初のテストが失敗した後にベイルアウトイベントを発生させるモジュールがあります。</target>
        </trans-unit>
        <trans-unit id="2bf32d61a54ff1e8a671180167e4172f9902a980" translate="yes" xml:space="preserve">
          <source>This namespace is for sets of tools. Modules in this namespace should export tools like &lt;code&gt;ok()&lt;/code&gt; and &lt;code&gt;is()&lt;/code&gt;. Most things written for Test2 should go here. Modules in this namespace &lt;b&gt;MUST NOT&lt;/b&gt; export subs from other tools. See the &lt;a href=&quot;#Test2%3A%3ABundle%3A%3A&quot;&gt;&quot;Test2::Bundle::&quot;&lt;/a&gt; namespace if you want to do that.</source>
          <target state="translated">この名前空間は、ツールのセット用です。この名前空間のモジュールは、 &lt;code&gt;ok()&lt;/code&gt; や &lt;code&gt;is()&lt;/code&gt; などのツールをエクスポートする必要があります。 Test2用に書かれたほとんどのものはここに行くべきです。この名前空間のモジュールは、他のツールからサブをエクスポートして&lt;b&gt;はなりません（&lt;/b&gt; MUSTNOT）。これを行う場合は、&lt;a href=&quot;#Test2%3A%3ABundle%3A%3A&quot;&gt;「Test2 :: Bundle ::」&lt;/a&gt;名前空間を参照してください。</target>
        </trans-unit>
        <trans-unit id="0e4e24a5df257f50d009292829b2bfd20798df4c" translate="yes" xml:space="preserve">
          <source>This newer style is consistent with the values of other Unicode properties. To preserve backward compatibility, all the functions in Unicode::UCD that return block names (except as noted) return the old-style ones. &lt;a href=&quot;#prop_value_aliases%28%29&quot;&gt;&quot;prop_value_aliases()&quot;&lt;/a&gt; returns the new-style and can be used to convert from old-style to new-style:</source>
          <target state="translated">この新しいスタイルは、他のUnicodeプロパティの値と一致しています。下位互換性を維持するために、ブロック名を返すUnicode :: UCDのすべての関数（注記されている場合を除く）は、古いスタイルの関数を返します。&lt;a href=&quot;#prop_value_aliases%28%29&quot;&gt;「prop_value_aliases（）」&lt;/a&gt;は新しいスタイルを返し、古いスタイルから新しいスタイルに変換するために使用できます。</target>
        </trans-unit>
        <trans-unit id="64f3b2bdf54de52b80ace773443b078978c32943" translate="yes" xml:space="preserve">
          <source>This newer style is consistent with the values of other Unicode properties. To preserve backward compatibility, all the functions in Unicode::UCD that return block names (except as noted) return the old-style ones. &lt;a href=&quot;#prop_value_aliases()&quot;&gt;prop_value_aliases()&lt;/a&gt; returns the new-style and can be used to convert from old-style to new-style:</source>
          <target state="translated">この新しいスタイルは、他のUnicodeプロパティの値と一致しています。下位互換性を維持するために、（注記されている場合を除いて）ブロック名を返すUnicode :: UCDのすべての関数は、古いスタイルのものを返します。&lt;a href=&quot;#prop_value_aliases()&quot;&gt;prop_value_aliases（）&lt;/a&gt;は新しいスタイルを返し、古いスタイルから新しいスタイルへの変換に使用できます。</target>
        </trans-unit>
        <trans-unit id="00215ed790925e9c90e37af405255e37b3a2b3c0" translate="yes" xml:space="preserve">
          <source>This normalizer function will store scalar context return values in the disk file under keys that begin with &lt;code&gt;S:&lt;/code&gt; , and list context return values under keys that begin with &lt;code&gt;L:&lt;/code&gt; .</source>
          <target state="translated">このノーマライザ関数は、スカラーコンテキストの戻り値を &lt;code&gt;S:&lt;/code&gt; で始まるキーの下のディスクファイルに格納し、 &lt;code&gt;L:&lt;/code&gt; で始まるキーの下のコンテキストの戻り値をリストします。</target>
        </trans-unit>
        <trans-unit id="565b14e4a137ea8e183d1678fe124d67dbe415ce" translate="yes" xml:space="preserve">
          <source>This normalizer function will store scalar context return values in the disk file under keys that begin with &lt;code&gt;S:&lt;/code&gt;, and list context return values under keys that begin with &lt;code&gt;L:&lt;/code&gt;.</source>
          <target state="translated">このノーマライザー関数は、 &lt;code&gt;S:&lt;/code&gt; で始まるキーの下のディスクファイルにスカラーコンテキストの戻り値を格納し、 &lt;code&gt;L:&lt;/code&gt; で始まるキーの下のコンテキストの戻り値を一覧表示します。</target>
        </trans-unit>
        <trans-unit id="af82ed0821cc193322bac301a4efb5cd0be9cd17" translate="yes" xml:space="preserve">
          <source>This normally doesn't happen at the Perl level unless a variable is undef'ed or the last variable holding a reference to it is changed or overwritten. At the internal level, however, reference counts can be manipulated with the following macros:</source>
          <target state="translated">これは通常、変数がundef'edされていないか、参照を保持している最後の変数が変更されたり上書きされたりしない限り、Perlレベルでは発生しません。しかし、内部レベルでは、以下のマクロで参照カウントを操作することができます。</target>
        </trans-unit>
        <trans-unit id="3b1609ead2a84dd600fa52f07b23743e8e94c4e5" translate="yes" xml:space="preserve">
          <source>This notes a problem in the Pod, which will be reported in the &quot;Pod Errors&quot; section of the document and/or sent to STDERR, depending on the values of the attributes &lt;code&gt;no_whining&lt;/code&gt;, &lt;code&gt;no_errata_section&lt;/code&gt;, and &lt;code&gt;complain_stderr&lt;/code&gt;.</source>
          <target state="translated">これは、属性 &lt;code&gt;no_whining&lt;/code&gt; 、 &lt;code&gt;no_errata_section&lt;/code&gt; 、および &lt;code&gt;complain_stderr&lt;/code&gt; の値に応じて、ドキュメントの「ポッドエラー」セクションで報告されるか、STDERRに送信されるポッドの問題を示しています。</target>
        </trans-unit>
        <trans-unit id="7a84db8c8f72a870ae46a23a931a2d5e7928615c" translate="yes" xml:space="preserve">
          <source>This notes an error like &lt;code&gt;whine&lt;/code&gt; does, except that it is not suppressible with &lt;code&gt;no_whining&lt;/code&gt;. This should be used only for very serious errors.</source>
          <target state="translated">これは、 &lt;code&gt;no_whining&lt;/code&gt; で抑制できないことを除いて、 &lt;code&gt;whine&lt;/code&gt; と同様のエラーを示します。これは、非常に重大なエラーにのみ使用してください。</target>
        </trans-unit>
        <trans-unit id="781831a4fcab5b31277395d81bbf01ada61ab8de" translate="yes" xml:space="preserve">
          <source>This number describes the earliest compatible &lt;code&gt;PERL_REVISION&lt;/code&gt; of Perl (&lt;code&gt;compatibility&lt;/code&gt; here being defined as sufficient</source>
          <target state="translated">この番号は、Perlの最も古い互換性のある &lt;code&gt;PERL_REVISION&lt;/code&gt; を示します（ここでの &lt;code&gt;compatibility&lt;/code&gt; は十分であると定義されています）</target>
        </trans-unit>
        <trans-unit id="0c3631049473f76e2dd0f9b657a8b5bb99ef0ce8" translate="yes" xml:space="preserve">
          <source>This number describes the earliest compatible &lt;code&gt;PERL_SUBVERSION&lt;/code&gt; of Perl (&lt;code&gt;compatibility&lt;/code&gt; here being defined as sufficient</source>
          <target state="translated">この番号は、Perlの最も古い互換性のある &lt;code&gt;PERL_SUBVERSION&lt;/code&gt; を示します（ここでの &lt;code&gt;compatibility&lt;/code&gt; は十分と定義されています</target>
        </trans-unit>
        <trans-unit id="74feee9a515674df1fbf3fa550f4ebde2a393edc" translate="yes" xml:space="preserve">
          <source>This number describes the earliest compatible &lt;code&gt;PERL_VERSION&lt;/code&gt; of Perl (&lt;code&gt;compatibility&lt;/code&gt; here being defined as sufficient</source>
          <target state="translated">この番号は、Perlの最も古い互換性のある &lt;code&gt;PERL_VERSION&lt;/code&gt; を示します（ここでの &lt;code&gt;compatibility&lt;/code&gt; は十分であると定義されています）</target>
        </trans-unit>
        <trans-unit id="091c6d1236713704a5d644b59c4d940e46aa2271" translate="yes" xml:space="preserve">
          <source>This object consumes &lt;a href=&quot;Test2::Util::ExternalMeta&quot;&gt;Test2::Util::ExternalMeta&lt;/a&gt; which provides a consistent way for you to attach meta-data to instances of this class. This is useful for tools, plugins, and other extensions.</source>
          <target state="translated">このオブジェクトは&lt;a href=&quot;Test2::Util::ExternalMeta&quot;&gt;Test2 :: Util :: ExternalMeta&lt;/a&gt;を使用します。これは、このクラスのインスタンスにメタデータを添付するための一貫した方法を提供します。これは、ツール、プラグイン、およびその他の拡張機能に役立ちます。</target>
        </trans-unit>
        <trans-unit id="3daf144ec9102bb41c4b3e85d9d925806042ef77" translate="yes" xml:space="preserve">
          <source>This object corresponds to a tree of parsed POD text. As POD text is scanned from left to right, it is parsed into an ordered list of text-strings and &lt;b&gt;Pod::InteriorSequence&lt;/b&gt; objects (in order of appearance). A &lt;b&gt;Pod::ParseTree&lt;/b&gt; object corresponds to this list of strings and sequences. Each interior sequence in the parse-tree may itself contain a parse-tree (since interior sequences may be nested).</source>
          <target state="translated">このオブジェクトは、解析されたPODテキストのツリーに対応します。PODテキストは左から右にスキャンされるため、テキスト文字列と&lt;b&gt;Pod :: InteriorSequence&lt;/b&gt;オブジェクトの順序付きリストに解析されます（出現順）。A &lt;b&gt;ポッド::解析ツリーの&lt;/b&gt;列と列のリストにオブジェクトが対応します。解析ツリーの各内部シーケンスは、それ自体が解析ツリーを含む場合があります（内部シーケンスはネストされている場合があるため）。</target>
        </trans-unit>
        <trans-unit id="bf5376f8ad113b045fd4b2cd36ed30b7f5f4f548" translate="yes" xml:space="preserve">
          <source>This object encapsulates the global shared state tracked by &lt;a href=&quot;test2&quot;&gt;Test2&lt;/a&gt;. A single global instance of this package is stored (and obscured) by the &lt;a href=&quot;Test2::API&quot;&gt;Test2::API&lt;/a&gt; package.</source>
          <target state="translated">このオブジェクトは、&lt;a href=&quot;test2&quot;&gt;Test2&lt;/a&gt;によって追跡されるグローバル共有状態をカプセル化します。このパッケージの単一のグローバルインスタンスは、&lt;a href=&quot;Test2::API&quot;&gt;Test2 :: API&lt;/a&gt;パッケージによって保存（および隠蔽）されます。</target>
        </trans-unit>
        <trans-unit id="c65aad4d731c650bf589bf8e7d6030572457b243" translate="yes" xml:space="preserve">
          <source>This object model leads to a tight coupling between subclasses. If one class wants to inherit from another (and both classes access object data), the classes must agree about implementation details. Inheritance can only be used among classes that are maintained together, in a single source or not.</source>
          <target state="translated">このオブジェクトモデルは、サブクラス間の緊密な結合をもたらします。あるクラスが別のクラスから継承したい場合(両方のクラスがオブジェクトデータにアクセスする場合)、クラスは実装の詳細について合意しなければなりません。継承は、単一のソースであるかどうかに関わらず、一緒に維持されているクラス間でのみ使用することができます。</target>
        </trans-unit>
        <trans-unit id="ddb04c604b2d23c57bcc7ab2aed8669980c3ec14" translate="yes" xml:space="preserve">
          <source>This obviously matches, but in the process of matching, the subexpression &lt;code&gt;a*&lt;/code&gt; first grabbed the &lt;code&gt;'a'&lt;/code&gt;. Doing so, however, wouldn't allow the whole regexp to match, so after backtracking, &lt;code&gt;a*&lt;/code&gt; eventually gave back the &lt;code&gt;'a'&lt;/code&gt; and matched the empty string. Here, what &lt;code&gt;a*&lt;/code&gt; matched was</source>
          <target state="translated">これは明らかに一致しますが、一致の過程で、部分式 &lt;code&gt;a*&lt;/code&gt; 最初に &lt;code&gt;'a'&lt;/code&gt; を取得しました。ただし、そうすると正規表現全体が一致しなくなるため、バックトラック後、 &lt;code&gt;a*&lt;/code&gt; 最終的に &lt;code&gt;'a'&lt;/code&gt; を返し、空の文字列と一致しました。ここで、 &lt;code&gt;a*&lt;/code&gt; 一致したのは</target>
        </trans-unit>
        <trans-unit id="75906e4fa98bc1c55561b974f97399cf50b738ce" translate="yes" xml:space="preserve">
          <source>This obviously matches, but in the process of matching, the subexpression &lt;code&gt;a*&lt;/code&gt; first grabbed the &lt;code&gt;a&lt;/code&gt; . Doing so, however, wouldn't allow the whole regexp to match, so after backtracking, &lt;code&gt;a*&lt;/code&gt; eventually gave back the &lt;code&gt;a&lt;/code&gt; and matched the empty string. Here, what &lt;code&gt;a*&lt;/code&gt; matched was</source>
          <target state="translated">これは明らかに一致しますが、一致の過程で、部分式 &lt;code&gt;a*&lt;/code&gt; 最初に &lt;code&gt;a&lt;/code&gt; を取得しました。そう、しかし、そう後戻りした後、正規表現全体が一致することができません &lt;code&gt;a*&lt;/code&gt; 最終的に戻った &lt;code&gt;a&lt;/code&gt; し、空の文字列に一致しました。ここで、 &lt;code&gt;a*&lt;/code&gt; 一致したのは</target>
        </trans-unit>
        <trans-unit id="fb797c4ef105afbc7e6f092d57da0886c5342624" translate="yes" xml:space="preserve">
          <source>This one is not a name of encoding but a utility that lets you pick up the most appropriate encoding for a data out of given</source>
          <target state="translated">これはエンコーディングの名前ではなく、与えられた</target>
        </trans-unit>
        <trans-unit id="ce31346ef13bdd3b410f6693045b75e1d727f213" translate="yes" xml:space="preserve">
          <source>This one works differently from normal strings:</source>
          <target state="translated">これは普通の弦とは違う働きをします。</target>
        </trans-unit>
        <trans-unit id="d8b038e9ce5b7ad8b326d48a0c12f7a1a65ddb76" translate="yes" xml:space="preserve">
          <source>This opens the UTF8-encoded file containing Unicode characters; see &lt;a href=&quot;perluniintro&quot;&gt;perluniintro&lt;/a&gt;. Note that if layers are specified in the three-argument form, then default layers stored in &lt;a href=&quot;perlvar#%24%7B%5EOPEN%7D&quot;&gt;&lt;code&gt;${^OPEN}&lt;/code&gt;&lt;/a&gt; (usually set by the &lt;a href=&quot;open&quot;&gt;open&lt;/a&gt; pragma or the switch &lt;code&gt;-CioD&lt;/code&gt;) are ignored. Those layers will also be ignored if you specify a colon with no name following it. In that case the default layer for the operating system (:raw on Unix, :crlf on Windows) is used.</source>
          <target state="translated">これにより、Unicode文字を含むUTF8でエンコードされたファイルが開きます。&lt;a href=&quot;perluniintro&quot;&gt;perluniintroを&lt;/a&gt;参照してください。レイヤーが3つの引数の形式で指定されている場合、&lt;a href=&quot;perlvar#%24%7B%5EOPEN%7D&quot;&gt; &lt;code&gt;${^OPEN}&lt;/code&gt; &lt;/a&gt;格納されているデフォルトのレイヤー（通常は&lt;a href=&quot;open&quot;&gt;open&lt;/a&gt;プラグマまたはスイッチ &lt;code&gt;-CioD&lt;/code&gt; によって設定されます）は無視されることに注意してください。コロンの後に名前を付けずに指定した場合も、これらのレイヤーは無視されます。その場合、オペレーティングシステムのデフォルトレイヤー（Unixでは：raw、Windowsでは：crlf）が使用されます。</target>
        </trans-unit>
        <trans-unit id="8dceabe6741f9e9be624acb0758d7a05df91f7b1" translate="yes" xml:space="preserve">
          <source>This operates as above, but the &lt;code&gt;Filter&lt;/code&gt; argument with a non-zero value causes the entire script, and not just literals, to be translated from the encoding into UTF-8. This allows identifiers in the source to be in that encoding as well. (Problems may occur if the encoding is not a superset of ASCII; imagine all your semi-colons being translated into something different.) One can use this form to make</source>
          <target state="translated">これは上記のように動作しますが、ゼロ以外の値を持つ &lt;code&gt;Filter&lt;/code&gt; 引数により、リテラルだけでなくスクリプト全体がエンコーディングからUTF-8に変換されます。これにより、ソース内の識別子もそのエンコーディングに含めることができます。（エンコーディングがASCIIのスーパーセットでない場合、問題が発生する可能性があります。すべてのセミコロンが別のものに変換されることを想像してください。）この形式を使用して、</target>
        </trans-unit>
        <trans-unit id="bafbb273ef65724f67929789d4cf1821d369332e" translate="yes" xml:space="preserve">
          <source>This operator changes only the modification time of the file (VMS revision date) on ODS-2 volumes and ODS-5 volumes without access dates enabled. On ODS-5 volumes with access dates enabled, the true access time is modified.</source>
          <target state="translated">この演算子は、アクセス日が有効になっていない ODS-2 ボリュームおよび ODS-5 ボリュームでは、ファイルの変更時刻(VMS のリビジョン日付)のみを変更します。アクセス日が有効なODS-5ボリュームでは、本当のアクセス時刻が変更されます。</target>
        </trans-unit>
        <trans-unit id="ffba20ee3390ab6f7cdbeb9ab15cfb5e9016cca0" translate="yes" xml:space="preserve">
          <source>This operator is also handy for inverting a hash, although there are some caveats. If a value is duplicated in the original hash, only one of those can be represented as a key in the inverted hash. Also, this has to unwind one hash and build a whole new one, which may take some time on a large hash, such as from a DBM file.</source>
          <target state="translated">この演算子はハッシュの反転にも便利ですが、いくつかの注意点があります。元のハッシュで値が重複している場合、反転されたハッシュではそのうちの1つだけをキーとして表現することができます。また、DBMファイルのような大規模なハッシュでは、1つのハッシュを展開して新しいハッシュを構築しなければならないので、時間がかかるかもしれません。</target>
        </trans-unit>
        <trans-unit id="0b8267c16c345a02931d07745eab202ccd1416fa" translate="yes" xml:space="preserve">
          <source>This operator is implemented using the standard &lt;code&gt;File::Glob&lt;/code&gt; extension. See &lt;a href=&quot;../file/glob&quot;&gt;File::Glob&lt;/a&gt; for details, including &lt;code&gt;bsd_glob&lt;/code&gt; which does not treat whitespace as a pattern separator.</source>
          <target state="translated">この演算子は、標準の &lt;code&gt;File::Glob&lt;/code&gt; 拡張機能を使用して実装されます。参照&lt;a href=&quot;../file/glob&quot;&gt;ファイル::グロブを&lt;/a&gt;含め、詳細については &lt;code&gt;bsd_glob&lt;/code&gt; パターンセパレータとして御馳走空白をしません。</target>
        </trans-unit>
        <trans-unit id="6603facafeb0ca27618f690e983e8f47ba2f8982" translate="yes" xml:space="preserve">
          <source>This operator is implemented using the standard &lt;code&gt;File::Glob&lt;/code&gt; extension. See &lt;a href=&quot;File::Glob&quot;&gt;File::Glob&lt;/a&gt; for details, including &lt;a href=&quot;File::Glob#bsd_glob&quot;&gt;&lt;code&gt;bsd_glob&lt;/code&gt;&lt;/a&gt;, which does not treat whitespace as a pattern separator.</source>
          <target state="translated">この演算子は、標準の &lt;code&gt;File::Glob&lt;/code&gt; 拡張子を使用して実装されます。参照&lt;a href=&quot;File::Glob&quot;&gt;ファイル::グロブを&lt;/a&gt;含め、詳細については&lt;a href=&quot;File::Glob#bsd_glob&quot;&gt; &lt;code&gt;bsd_glob&lt;/code&gt; &lt;/a&gt;パターンセパレータとして御馳走空白をしません。</target>
        </trans-unit>
        <trans-unit id="157d8ec0928a934391402a13da061adc37466e6a" translate="yes" xml:space="preserve">
          <source>This operator is implemented using the standard &lt;code&gt;File::Glob&lt;/code&gt; extension. See &lt;a href=&quot;file/glob&quot;&gt;File::Glob&lt;/a&gt; for details, including &lt;code&gt;bsd_glob&lt;/code&gt; which does not treat whitespace as a pattern separator.</source>
          <target state="translated">この演算子は、標準の &lt;code&gt;File::Glob&lt;/code&gt; 拡張機能を使用して実装されます。参照&lt;a href=&quot;file/glob&quot;&gt;ファイル::グロブを&lt;/a&gt;含め、詳細については &lt;code&gt;bsd_glob&lt;/code&gt; パターンセパレータとして御馳走空白をしません。</target>
        </trans-unit>
        <trans-unit id="6deb73d137130c497b09a54c077553c29fbcaf55" translate="yes" xml:space="preserve">
          <source>This operator is implemented via the &lt;a href=&quot;File::Glob&quot;&gt;&lt;code&gt;File::Glob&lt;/code&gt;&lt;/a&gt; extension on most platforms. See &lt;a href=&quot;File::Glob&quot;&gt;File::Glob&lt;/a&gt; for portability information.</source>
          <target state="translated">この演算子は、ほとんどのプラットフォームで&lt;a href=&quot;File::Glob&quot;&gt; &lt;code&gt;File::Glob&lt;/code&gt; &lt;/a&gt;拡張機能を介して実装されます。移植性については、&lt;a href=&quot;File::Glob&quot;&gt;File :: Glob&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="a18ef89c767fe3092cd7cbf7617a73212c9cedcd" translate="yes" xml:space="preserve">
          <source>This operator is implemented via the &lt;code&gt;File::Glob&lt;/code&gt; extension on most platforms. See &lt;a href=&quot;file/glob&quot;&gt;File::Glob&lt;/a&gt; for portability information.</source>
          <target state="translated">この演算子は、ほとんどのプラットフォームで &lt;code&gt;File::Glob&lt;/code&gt; 拡張機能を介して実装されます。移植性については&lt;a href=&quot;file/glob&quot;&gt;File :: Glob&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="f61ddb296f9de510c527089fa0d0e6f18a12bcc4" translate="yes" xml:space="preserve">
          <source>This operator quotes (and possibly compiles) its</source>
          <target state="translated">この演算子は、その</target>
        </trans-unit>
        <trans-unit id="54ff6006dac029e4037de4f8be15a2519fa996e2" translate="yes" xml:space="preserve">
          <source>This option allow the</source>
          <target state="translated">このオプションは</target>
        </trans-unit>
        <trans-unit id="00bfef75bba78bb67546c7867c9c5ceacd8cc589" translate="yes" xml:space="preserve">
          <source>This option allow the filename field in the zip header to be modified before it is written to the zip file.</source>
          <target state="translated">このオプションは、zip ファイルに書き込まれる前に zip ヘッダのファイル名フィールドを変更できるようにします。</target>
        </trans-unit>
        <trans-unit id="31a1073c0be295447c4fa6a92df15986893583ac" translate="yes" xml:space="preserve">
          <source>This option applies to any input or output data streams to &lt;code&gt;anyinflate&lt;/code&gt; that are filehandles.</source>
          <target state="translated">このオプションは、ファイルハンドルである &lt;code&gt;anyinflate&lt;/code&gt; への入力または出力データストリームに適用されます。</target>
        </trans-unit>
        <trans-unit id="f9285c30af9b4fbbee720f406a006d97f4010015" translate="yes" xml:space="preserve">
          <source>This option applies to any input or output data streams to &lt;code&gt;anyuncompress&lt;/code&gt; that are filehandles.</source>
          <target state="translated">このオプションは、ファイルハンドルである &lt;code&gt;anyuncompress&lt;/code&gt; への入力または出力データストリームに適用されます。</target>
        </trans-unit>
        <trans-unit id="e84a1d77a7ad064325b540c87fc270941af6172d" translate="yes" xml:space="preserve">
          <source>This option applies to any input or output data streams to &lt;code&gt;bunzip2&lt;/code&gt; that are filehandles.</source>
          <target state="translated">このオプションは、ファイルハンドルである &lt;code&gt;bunzip2&lt;/code&gt; へのすべての入力または出力データストリームに適用されます。</target>
        </trans-unit>
        <trans-unit id="991318af65c036237347589558cc5bbc7b747313" translate="yes" xml:space="preserve">
          <source>This option applies to any input or output data streams to &lt;code&gt;bzip2&lt;/code&gt; that are filehandles.</source>
          <target state="translated">このオプションは、ファイルハンドルである &lt;code&gt;bzip2&lt;/code&gt; への入力または出力データストリームに適用されます。</target>
        </trans-unit>
        <trans-unit id="e3937b065e9e10f42a614e20da537cf76f206b09" translate="yes" xml:space="preserve">
          <source>This option applies to any input or output data streams to &lt;code&gt;deflate&lt;/code&gt; that are filehandles.</source>
          <target state="translated">このオプションは、ファイルハンドルである、 &lt;code&gt;deflate&lt;/code&gt; するすべての入力または出力データストリームに適用されます。</target>
        </trans-unit>
        <trans-unit id="7597a37aa86998ead804f6646d406a8232322d5c" translate="yes" xml:space="preserve">
          <source>This option applies to any input or output data streams to &lt;code&gt;gunzip&lt;/code&gt; that are filehandles.</source>
          <target state="translated">このオプションは、ファイルハンドルである &lt;code&gt;gunzip&lt;/code&gt; へのすべての入力または出力データストリームに適用されます。</target>
        </trans-unit>
        <trans-unit id="3b1d88507893c4f30c1f99b3dd08ad9bcc7749d4" translate="yes" xml:space="preserve">
          <source>This option applies to any input or output data streams to &lt;code&gt;gzip&lt;/code&gt; that are filehandles.</source>
          <target state="translated">このオプションは、ファイルハンドルである &lt;code&gt;gzip&lt;/code&gt; への入力または出力データストリームに適用されます。</target>
        </trans-unit>
        <trans-unit id="197d2e92c12a668b61b45cede98ce89082acf98a" translate="yes" xml:space="preserve">
          <source>This option applies to any input or output data streams to &lt;code&gt;inflate&lt;/code&gt; that are filehandles.</source>
          <target state="translated">このオプションは、任意の入力または出力データに適用するためにストリームを &lt;code&gt;inflate&lt;/code&gt; ファイルハンドルであること。</target>
        </trans-unit>
        <trans-unit id="11085e39e2558052d844319712c721f6cf03a406" translate="yes" xml:space="preserve">
          <source>This option applies to any input or output data streams to &lt;code&gt;rawdeflate&lt;/code&gt; that are filehandles.</source>
          <target state="translated">このオプションは、ファイルハンドルである &lt;code&gt;rawdeflate&lt;/code&gt; へのすべての入力または出力データストリームに適用されます。</target>
        </trans-unit>
        <trans-unit id="5edfb063fb42d1f72af8e3277ad4716ba885c487" translate="yes" xml:space="preserve">
          <source>This option applies to any input or output data streams to &lt;code&gt;rawinflate&lt;/code&gt; that are filehandles.</source>
          <target state="translated">このオプションは、ファイルハンドルである &lt;code&gt;rawinflate&lt;/code&gt; への入力または出力データストリームに適用されます。</target>
        </trans-unit>
        <trans-unit id="8b0f73e1567ccae83577dd7200eae7bda2188288" translate="yes" xml:space="preserve">
          <source>This option applies to any input or output data streams to &lt;code&gt;unzip&lt;/code&gt; that are filehandles.</source>
          <target state="translated">このオプションは、ファイルハンドルである &lt;code&gt;unzip&lt;/code&gt; するすべての入力または出力データストリームに適用されます。</target>
        </trans-unit>
        <trans-unit id="295f0cfd4ded98b9574af22ae3b9d33935ef4669" translate="yes" xml:space="preserve">
          <source>This option applies to any input or output data streams to &lt;code&gt;zip&lt;/code&gt; that are filehandles.</source>
          <target state="translated">このオプションは、ファイルハンドルである &lt;code&gt;zip&lt;/code&gt; へのすべての入力または出力データストリームに適用されます。</target>
        </trans-unit>
        <trans-unit id="1b0f39997327947c35396eb3046f132a2237f087" translate="yes" xml:space="preserve">
          <source>This option assumes that the formatter (see above) understands the option &quot;utf8&quot;. It turns on generation of utf8 output.</source>
          <target state="translated">このオプシ ョ ンは、 フォーマ ッ タ が (上述の)オプシ ョ ン 「utf8」 を理解 し てい る こ と を前提 と し ています。utf8出力の生成を有効にします。</target>
        </trans-unit>
        <trans-unit id="2812ec45ee9aa481cedeafcd91c6fd310ce87a63" translate="yes" xml:space="preserve">
          <source>This option can be used when there is useful information immediately following the compressed data stream, and you don't know the length of the compressed data stream.</source>
          <target state="translated">このオプションは、圧縮されたデータストリームの直後に有用な情報があり、圧縮されたデータストリームの長さがわからない場合に使用することができます。</target>
        </trans-unit>
        <trans-unit id="96e75df71c1bf6e90ec730c6cdd32614d5b40bf0" translate="yes" xml:space="preserve">
          <source>This option can be useful when the compressed data is embedded in another file/data structure and it is not possible to work out where the compressed data begins without having to read the first few bytes. If this is the case, the uncompression can be</source>
          <target state="translated">このオプションは、圧縮されたデータが別のファイル/データ構造体に埋め込まれていて、最初の数バイトを読まずに圧縮データがどこから始まるのか分からない場合に便利です。このような場合、圧縮を解除するには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="ae71b12d470fda92f5396caeec200106ff4f6bc5" translate="yes" xml:space="preserve">
          <source>This option can be useful when you are processing compressed data that is embedded in another file/buffer. In this case the data that immediately follows the compressed stream will be left in the input buffer.</source>
          <target state="translated">このオプションは、別のファイル/バッファに埋め込まれた圧縮データを処理する場合に便利です。この場合、圧縮ストリームの直後のデータは入力バッファに残されます。</target>
        </trans-unit>
        <trans-unit id="05c5aace4afdf3704689266ed36cfe4a30bb343e" translate="yes" xml:space="preserve">
          <source>This option causes all configuration options to be reset to their default values as if the environment variable POSIXLY_CORRECT had been set.</source>
          <target state="translated">このオプションは、環境変数POSIXLY_CORRECTが設定されているかのように、すべての構成オプションをデフォルト値にリセットします。</target>
        </trans-unit>
        <trans-unit id="0bb7609607b04e591708c21193516c45ee13b415" translate="yes" xml:space="preserve">
          <source>This option causes all configuration options to be reset to their default values.</source>
          <target state="translated">このオプションを使用すると、すべての構成オプションが既定値にリセットされます。</target>
        </trans-unit>
        <trans-unit id="96a82215c08e826a1eb80ae96999f098e98a4ee7" translate="yes" xml:space="preserve">
          <source>This option controls how data is written to the output buffer by the &lt;code&gt;$d-&amp;gt;deflate&lt;/code&gt; and &lt;code&gt;$d-&amp;gt;flush&lt;/code&gt; methods.</source>
          <target state="translated">このオプションは、 &lt;code&gt;$d-&amp;gt;deflate&lt;/code&gt; および &lt;code&gt;$d-&amp;gt;flush&lt;/code&gt; メソッドによるデータの出力バッファーへの書き込み方法を制御します。</target>
        </trans-unit>
        <trans-unit id="c90b7070ba70482f3b4e42afba1dbe1ff165436c" translate="yes" xml:space="preserve">
          <source>This option controls how data is written to the output buffer by the &lt;code&gt;$i-&amp;gt;inflate&lt;/code&gt; method.</source>
          <target state="translated">このオプションは、 &lt;code&gt;$i-&amp;gt;inflate&lt;/code&gt; メソッドによるデータの出力バッファーへの書き込み方法を制御します。</target>
        </trans-unit>
        <trans-unit id="f091361d33604fb6b604c6198e130966342f9758" translate="yes" xml:space="preserve">
          <source>This option controls setting of the &quot;Language Encoding Flag&quot; (EFS) in the zip archive. When set, the filename and comment fields for the zip archive MUST be valid UTF-8.</source>
          <target state="translated">このオプションは、zip アーカイブ内の「言語エンコーディングフラグ」(EFS)の設定を制御します。設定した場合、zip アーカイブのファイル名とコメントフィールドは有効な UTF-8 でなければなりません (MUST)。</target>
        </trans-unit>
        <trans-unit id="59041bc47f2bcbc25e18c7446422e8f7a244ca3a" translate="yes" xml:space="preserve">
          <source>This option controls the &quot;external file attributes&quot; field in the central header of the zip file. This is a 4 byte field.</source>
          <target state="translated">このオプションは、zipファイルの中央ヘッダにある「外部ファイル属性」フィールドを制御します。これは4バイトのフィールドです。</target>
        </trans-unit>
        <trans-unit id="fe53ff997f22ee3b8e3b5b499037b30213ed7a2b" translate="yes" xml:space="preserve">
          <source>This option controls what the &lt;code&gt;&lt;a href=&quot;../../functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt; method does with uncompressed data.</source>
          <target state="translated">このオプションは、 &lt;code&gt;&lt;a href=&quot;../../functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt; メソッドが非圧縮データをどう処理するかを制御します。</target>
        </trans-unit>
        <trans-unit id="6b761971204df65aacb52bae227edf353dc4466e" translate="yes" xml:space="preserve">
          <source>This option controls what the &lt;code&gt;read&lt;/code&gt; method does with uncompressed data.</source>
          <target state="translated">このオプションは、 &lt;code&gt;read&lt;/code&gt; メソッドが非圧縮データをどのように処理するかを制御します。</target>
        </trans-unit>
        <trans-unit id="de120c739ea57e22d8c4d48b8a92202db6758c8d" translate="yes" xml:space="preserve">
          <source>This option controls whether the</source>
          <target state="translated">このオプションは</target>
        </trans-unit>
        <trans-unit id="2fd5bc077a448b0ac8688176c0355190f56eee1f" translate="yes" xml:space="preserve">
          <source>This option controls whether the extra checks defined below are used when carrying out the decompression. When Strict is on, the extra tests are carried out, when Strict is off they are not.</source>
          <target state="translated">このオプションは、減圧を実行する際に、以下に定義されている追加チェックを使用するかどうかを制御します。Strictがオンの場合、追加テストが実行され、Strictがオフの場合は実行されません。</target>
        </trans-unit>
        <trans-unit id="e8f91b605f96e49eba45a2533f216bb9aa5630d4" translate="yes" xml:space="preserve">
          <source>This option controls whether the filename field in the zip header is</source>
          <target state="translated">このオプションは、zip ヘッダのファイル名フィールドが</target>
        </trans-unit>
        <trans-unit id="c9ccbe84ff4c87c8d1938d3fb3bc36c35924a163" translate="yes" xml:space="preserve">
          <source>This option controls whether the zip file/buffer output is created in streaming mode.</source>
          <target state="translated">このオプションは、zip ファイル/バッファ出力がストリーミングモードで作成されるかどうかを制御します。</target>
        </trans-unit>
        <trans-unit id="25df283cc49b2b02eee383b551fc895c82bca588" translate="yes" xml:space="preserve">
          <source>This option defaults to 1.</source>
          <target state="translated">このオプションのデフォルトは 1 です。</target>
        </trans-unit>
        <trans-unit id="34b650f76678c6a01e22f15770dea69e53718082" translate="yes" xml:space="preserve">
          <source>This option defaults to 4096.</source>
          <target state="translated">このオプションのデフォルトは4096です。</target>
        </trans-unit>
        <trans-unit id="d5f2929171736f86edabd8e4e81e6b76f585f308" translate="yes" xml:space="preserve">
          <source>This option defaults to &lt;b&gt;false&lt;/b&gt;.</source>
          <target state="translated">このオプションのデフォルトは&lt;b&gt;false&lt;/b&gt;です。</target>
        </trans-unit>
        <trans-unit id="0fe4b53be5e0e4b306e7b8817dee109e7d56e3b6" translate="yes" xml:space="preserve">
          <source>This option defaults to false.</source>
          <target state="translated">このオプションのデフォルトは false です。</target>
        </trans-unit>
        <trans-unit id="3c17c5d6de4659d46fac1329201d45aebab6728c" translate="yes" xml:space="preserve">
          <source>This option defaults to off.</source>
          <target state="translated">このオプションのデフォルトはオフです。</target>
        </trans-unit>
        <trans-unit id="5b6fb11ab3c3f09a5247ca571c81e532a6439637" translate="yes" xml:space="preserve">
          <source>This option defaults to true.</source>
          <target state="translated">このオプションのデフォルトは true です。</target>
        </trans-unit>
        <trans-unit id="624b5280811765e3f408f9a93ba973e345e22b11" translate="yes" xml:space="preserve">
          <source>This option does not affect &lt;code&gt;decode&lt;/code&gt; in any way, and it is recommended to leave it off unless you know your communications partner.</source>
          <target state="translated">このオプションは &lt;code&gt;decode&lt;/code&gt; にはまったく影響しません。通信パートナーを知らない限り、このオプションをオフのままにしておくことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="a49b3dde1d982fff6659af9dbc370e4c81b2a251" translate="yes" xml:space="preserve">
          <source>This option expects an array reference with exactly three elements: &lt;code&gt;$atime&lt;/code&gt; , &lt;code&gt;mtime&lt;/code&gt; and &lt;code&gt;$ctime&lt;/code&gt; . These correspond to the last access time, last modification time and creation time respectively.</source>
          <target state="translated">このオプションは、3つの要素 &lt;code&gt;$atime&lt;/code&gt; 、 &lt;code&gt;mtime&lt;/code&gt; 、 &lt;code&gt;$ctime&lt;/code&gt; 配列参照を想定しています。これらは、それぞれ最終アクセス時刻、最終変更時刻、作成時刻に対応しています。</target>
        </trans-unit>
        <trans-unit id="c2b6d8d1bd2aae66f05f52544cf5abb5b8808045" translate="yes" xml:space="preserve">
          <source>This option expects an array reference with exactly three elements: &lt;code&gt;$atime&lt;/code&gt;, &lt;code&gt;mtime&lt;/code&gt; and &lt;code&gt;$ctime&lt;/code&gt;. These correspond to the last access time, last modification time and creation time respectively.</source>
          <target state="translated">このオプションは、 &lt;code&gt;$atime&lt;/code&gt; 、 &lt;code&gt;mtime&lt;/code&gt; 、および &lt;code&gt;$ctime&lt;/code&gt; 3つの要素を持つ配列参照を想定しています。これらは、それぞれ最終アクセス時間、最終変更時間、および作成時間に対応します。</target>
        </trans-unit>
        <trans-unit id="d7b61a9548815335c12044934c6edf6afc0fade2" translate="yes" xml:space="preserve">
          <source>This option expects an array reference with exactly two elements: &lt;code&gt;$uid&lt;/code&gt; and &lt;code&gt;$gid&lt;/code&gt; . These values correspond to the numeric User ID (UID) and Group ID (GID) of the owner of the files respectively.</source>
          <target state="translated">このオプションは、2つの要素 &lt;code&gt;$uid&lt;/code&gt; と &lt;code&gt;$gid&lt;/code&gt; 持つ配列参照を想定しています。これらの値は、ファイルの所有者の数値のユーザーID（UID）とグループID（GID）にそれぞれ対応しています。</target>
        </trans-unit>
        <trans-unit id="d0b2b2035706e5f13fabb6689eb4b2eb10e5bd8d" translate="yes" xml:space="preserve">
          <source>This option expects an array reference with exactly two elements: &lt;code&gt;$uid&lt;/code&gt; and &lt;code&gt;$gid&lt;/code&gt;. These values correspond to the numeric User ID (UID) and Group ID (GID) of the owner of the files respectively.</source>
          <target state="translated">このオプションは、 &lt;code&gt;$uid&lt;/code&gt; と &lt;code&gt;$gid&lt;/code&gt; 2つの要素を持つ配列参照を想定しています。これらの値は、それぞれファイルの所有者の数値のユーザーID（UID）とグループID（GID）に対応します。</target>
        </trans-unit>
        <trans-unit id="f5e3123268242816c97985ddf2abce0d046136ba" translate="yes" xml:space="preserve">
          <source>This option is a no-op.</source>
          <target state="translated">このオプションは、何もしていません。</target>
        </trans-unit>
        <trans-unit id="1144456033d4b378e77675f24087a7a175d1be93" translate="yes" xml:space="preserve">
          <source>This option is case-insensitive.</source>
          <target state="translated">このオプションは大文字と小文字を区別しません。</target>
        </trans-unit>
        <trans-unit id="2511f05b6374c7879cb361cf57c595c2e2f72590" translate="yes" xml:space="preserve">
          <source>This option is checked when you write out the tarfile using &lt;code&gt;&lt;a href=&quot;../functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;create_archive&lt;/code&gt; .</source>
          <target state="translated">このオプションは、 &lt;code&gt;&lt;a href=&quot;../functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;create_archive&lt;/code&gt; を使用してtarfileを書き出すときにチェックされます。</target>
        </trans-unit>
        <trans-unit id="af51699e95a4be95b5bd98b672ad39e412c5139b" translate="yes" xml:space="preserve">
          <source>This option is checked when you write out the tarfile using &lt;code&gt;write&lt;/code&gt; or &lt;code&gt;create_archive&lt;/code&gt;.</source>
          <target state="translated">このオプションは、 &lt;code&gt;write&lt;/code&gt; または &lt;code&gt;create_archive&lt;/code&gt; を使用してtarfileを書き出すときにチェックされます。</target>
        </trans-unit>
        <trans-unit id="1b2a2a4f5928dc68068bb78c6282de092775a8e0" translate="yes" xml:space="preserve">
          <source>This option is enabled by default.</source>
          <target state="translated">このオプションはデフォルトで有効になっています。</target>
        </trans-unit>
        <trans-unit id="4549d37c19966c81c9e8c6bc7457a6a5da6fd6d3" translate="yes" xml:space="preserve">
          <source>This option is mostly used when reading from a filehandle, in which case the file pointer will be left pointing to the first byte directly after the compressed data stream.</source>
          <target state="translated">このオプションは、主にファイルハンドルから読み出すときに使用されます。</target>
        </trans-unit>
        <trans-unit id="da3c768aaf3f5e035f976487f87837b11b5b30c6" translate="yes" xml:space="preserve">
          <source>This option is no longer supported. It is still documented only to aid in the debugging of old programs that use it. Old programs should be converted to use the &lt;code&gt;HASH&lt;/code&gt; option instead.</source>
          <target state="translated">このオプションはサポートされなくなりました。それはまだそれを使用する古いプログラムのデバッグを助けるためにだけ文書化されています。古いプログラムは、代わりに &lt;code&gt;HASH&lt;/code&gt; オプションを使用するように変換する必要があります。</target>
        </trans-unit>
        <trans-unit id="fccd188df214a961ab3c96d3b8cb198aeb990733" translate="yes" xml:space="preserve">
          <source>This option is now a no-op. All files will be read in binmode.</source>
          <target state="translated">このオプションは、現在では無効となっています。すべてのファイルはビンモードで読み込まれます。</target>
        </trans-unit>
        <trans-unit id="4b63a00edd9e5158832afdb166a9cf7c92fa6736" translate="yes" xml:space="preserve">
          <source>This option is now a no-op. All files will be written in binmode.</source>
          <target state="translated">このオプションは、現在では無効となっています。すべてのファイルはビンモードで書き込まれます。</target>
        </trans-unit>
        <trans-unit id="a4a6ba823380e81c3792a98e87160d5e375b14e6" translate="yes" xml:space="preserve">
          <source>This option is obscure and discouraged.</source>
          <target state="translated">このオプションは曖昧で落胆する。</target>
        </trans-unit>
        <trans-unit id="42ae6c8b76763d5e46a026474b931ab7a98558cf" translate="yes" xml:space="preserve">
          <source>This option is only useful when you also enable &lt;code&gt;indent&lt;/code&gt; or &lt;code&gt;pretty&lt;/code&gt;.</source>
          <target state="translated">このオプションは、 &lt;code&gt;indent&lt;/code&gt; または &lt;code&gt;pretty&lt;/code&gt; も有効にする場合にのみ役立ちます。</target>
        </trans-unit>
        <trans-unit id="c86f3c4424a2a7c5541c3bc97e781d1a1d2bf31e" translate="yes" xml:space="preserve">
          <source>This option is only valid if the &lt;code&gt;Method&lt;/code&gt; is ZIP_CM_BZIP2. It is ignored otherwise.</source>
          <target state="translated">このオプションは、 &lt;code&gt;Method&lt;/code&gt; がZIP_CM_BZIP2の場合にのみ有効です。それ以外の場合は無視されます。</target>
        </trans-unit>
        <trans-unit id="e287076e946d3a88fdf8e217ada09ffe773941d3" translate="yes" xml:space="preserve">
          <source>This option is only valid if the &lt;code&gt;Method&lt;/code&gt; is ZIP_CM_LZMA. It is ignored otherwise.</source>
          <target state="translated">このオプションは、 &lt;code&gt;Method&lt;/code&gt; がZIP_CM_LZMAの場合にのみ有効です。それ以外の場合は無視されます。</target>
        </trans-unit>
        <trans-unit id="e47f433c8815bcca005cf8fc1f8f226523161029" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$input&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the file being closed once either the &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; method is called or the IO::Uncompress::AnyInflate object is destroyed.</source>
          <target state="translated">このオプションは、 &lt;code&gt;$input&lt;/code&gt; パラメータがファイルハンドルである場合にのみ有効です。指定され、値がtrueの場合、 &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; メソッドが呼び出されるか、IO :: Uncompress :: AnyInflateオブジェクトが破棄されると、ファイルが閉じられます。</target>
        </trans-unit>
        <trans-unit id="4c7afb5a8e42acbe0e34fc5f5b8fc4326a8529d5" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$input&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the file being closed once either the &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; method is called or the IO::Uncompress::AnyUncompress object is destroyed.</source>
          <target state="translated">このオプションは、 &lt;code&gt;$input&lt;/code&gt; パラメータがファイルハンドルである場合にのみ有効です。指定され、値がtrueの場合、 &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; メソッドが呼び出されるか、IO :: Uncompress :: AnyUncompressオブジェクトが破棄されると、ファイルが閉じられます。</target>
        </trans-unit>
        <trans-unit id="4c90c6efe9d75228bc8980202147dbd8e5b1d098" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$input&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the file being closed once either the &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; method is called or the IO::Uncompress::Bunzip2 object is destroyed.</source>
          <target state="translated">このオプションは、 &lt;code&gt;$input&lt;/code&gt; パラメータがファイルハンドルである場合にのみ有効です。指定され、値がtrueの場合、 &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; メソッドが呼び出されるか、IO :: Uncompress :: Bunzip2オブジェクトが破棄されると、ファイルが閉じられます。</target>
        </trans-unit>
        <trans-unit id="1a0451d52242cab341bf29b753116dd306cc10b7" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$input&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the file being closed once either the &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; method is called or the IO::Uncompress::Gunzip object is destroyed.</source>
          <target state="translated">このオプションは、 &lt;code&gt;$input&lt;/code&gt; パラメータがファイルハンドルである場合にのみ有効です。指定され、値がtrueの場合、 &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; メソッドが呼び出されるか、IO :: Uncompress :: Gunzipオブジェクトが破棄されると、ファイルが閉じられます。</target>
        </trans-unit>
        <trans-unit id="c6cccd64b3f769d6fde655234d1c117fd17fbdc4" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$input&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the file being closed once either the &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; method is called or the IO::Uncompress::Inflate object is destroyed.</source>
          <target state="translated">このオプションは、 &lt;code&gt;$input&lt;/code&gt; パラメータがファイルハンドルである場合にのみ有効です。指定され、値がtrueの場合、 &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; メソッドが呼び出されるか、IO :: Uncompress :: Inflateオブジェクトが破棄されると、ファイルが閉じられます。</target>
        </trans-unit>
        <trans-unit id="a026bdcb25c56dbca754467a3829013c39db31ac" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$input&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the file being closed once either the &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; method is called or the IO::Uncompress::RawInflate object is destroyed.</source>
          <target state="translated">このオプションは、 &lt;code&gt;$input&lt;/code&gt; パラメータがファイルハンドルである場合にのみ有効です。指定され、値がtrueの場合、 &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; メソッドが呼び出されるか、IO :: Uncompress :: RawInflateオブジェクトが破棄されると、ファイルが閉じられます。</target>
        </trans-unit>
        <trans-unit id="f4a3d8b2fb37fa80663bb31ac23a1f0cc61d52e6" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$input&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the file being closed once either the &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; method is called or the IO::Uncompress::Unzip object is destroyed.</source>
          <target state="translated">このオプションは、 &lt;code&gt;$input&lt;/code&gt; パラメータがファイルハンドルである場合にのみ有効です。指定され、値がtrueの場合、 &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; メソッドが呼び出されるか、IO :: Uncompress :: Unzipオブジェクトが破棄されると、ファイルが閉じられます。</target>
        </trans-unit>
        <trans-unit id="7d5c3c251f79fe2eaa4fe4d7a23aa2a6bca07482" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$input&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the file being closed once either the &lt;code&gt;close&lt;/code&gt; method is called or the IO::Uncompress::AnyInflate object is destroyed.</source>
          <target state="translated">このオプションは、 &lt;code&gt;$input&lt;/code&gt; パラメーターがファイルハンドルの場合にのみ有効です。指定され、値がtrueの場合、 &lt;code&gt;close&lt;/code&gt; メソッドが呼び出されるか、IO :: Uncompress :: AnyInflateオブジェクトが破棄されると、ファイルが閉じられます。</target>
        </trans-unit>
        <trans-unit id="3d188554dc39b169a30f806b5e23d40f7a99eb7b" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$input&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the file being closed once either the &lt;code&gt;close&lt;/code&gt; method is called or the IO::Uncompress::AnyUncompress object is destroyed.</source>
          <target state="translated">このオプションは、 &lt;code&gt;$input&lt;/code&gt; パラメーターがファイルハンドルの場合にのみ有効です。指定され、値がtrueの場合、 &lt;code&gt;close&lt;/code&gt; メソッドが呼び出されるか、IO :: Uncompress :: AnyUncompressオブジェクトが破棄されると、ファイルが閉じられます。</target>
        </trans-unit>
        <trans-unit id="3f4a9ffa852a02dca76d7971b32b9b03b1b0548e" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$input&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the file being closed once either the &lt;code&gt;close&lt;/code&gt; method is called or the IO::Uncompress::Bunzip2 object is destroyed.</source>
          <target state="translated">このオプションは、 &lt;code&gt;$input&lt;/code&gt; パラメーターがファイルハンドルの場合にのみ有効です。指定され、値がtrueの場合、 &lt;code&gt;close&lt;/code&gt; メソッドが呼び出されるか、IO :: Uncompress :: Bunzip2オブジェクトが破棄されると、ファイルが閉じられます。</target>
        </trans-unit>
        <trans-unit id="c5731a807a44b0efd83e01b27cd42579c0decc4f" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$input&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the file being closed once either the &lt;code&gt;close&lt;/code&gt; method is called or the IO::Uncompress::Gunzip object is destroyed.</source>
          <target state="translated">このオプションは、 &lt;code&gt;$input&lt;/code&gt; パラメーターがファイルハンドルの場合にのみ有効です。指定され、値がtrueの場合、 &lt;code&gt;close&lt;/code&gt; メソッドが呼び出されるか、IO :: Uncompress :: Gunzipオブジェクトが破棄されると、ファイルが閉じられます。</target>
        </trans-unit>
        <trans-unit id="c914c62b296246924f7d16024e2d19fb089beb85" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$input&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the file being closed once either the &lt;code&gt;close&lt;/code&gt; method is called or the IO::Uncompress::Inflate object is destroyed.</source>
          <target state="translated">このオプションは、 &lt;code&gt;$input&lt;/code&gt; パラメーターがファイルハンドルの場合にのみ有効です。指定され、値がtrueの場合、 &lt;code&gt;close&lt;/code&gt; メソッドが呼び出されるか、IO :: Uncompress :: Inflateオブジェクトが破棄されると、ファイルが閉じられます。</target>
        </trans-unit>
        <trans-unit id="f153a0b32df251638a7035a515776badf9702bbd" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$input&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the file being closed once either the &lt;code&gt;close&lt;/code&gt; method is called or the IO::Uncompress::RawInflate object is destroyed.</source>
          <target state="translated">このオプションは、 &lt;code&gt;$input&lt;/code&gt; パラメーターがファイルハンドルの場合にのみ有効です。指定され、値がtrueの場合、 &lt;code&gt;close&lt;/code&gt; メソッドが呼び出されるか、IO :: Uncompress :: RawInflateオブジェクトが破棄されると、ファイルが閉じられます。</target>
        </trans-unit>
        <trans-unit id="f93ba06c93cb1edfc319d39e770c284a6a951d1c" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$input&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the file being closed once either the &lt;code&gt;close&lt;/code&gt; method is called or the IO::Uncompress::Unzip object is destroyed.</source>
          <target state="translated">このオプションは、 &lt;code&gt;$input&lt;/code&gt; パラメーターがファイルハンドルの場合にのみ有効です。指定され、値がtrueの場合、 &lt;code&gt;close&lt;/code&gt; メソッドが呼び出されるか、IO :: Uncompress :: Unzipオブジェクトが破棄されると、ファイルが閉じられます。</target>
        </trans-unit>
        <trans-unit id="a47e1179435d09c1507a883d5e990db962771a45" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$output&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the &lt;code&gt;$output&lt;/code&gt; being closed once either the &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; method is called or the &lt;code&gt;IO::Compress::Bzip2&lt;/code&gt; object is destroyed.</source>
          <target state="translated">このオプションは、 &lt;code&gt;$output&lt;/code&gt; パラメーターがファイルハンドルである場合にのみ有効です。指定され、値がtrueの場合、 &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; メソッドが呼び出されるか、 &lt;code&gt;IO::Compress::Bzip2&lt;/code&gt; オブジェクトが破棄されると、 &lt;code&gt;$output&lt;/code&gt; が閉じられます。</target>
        </trans-unit>
        <trans-unit id="97fb53611300748a1b7f47bb19f220d7d3bb2490" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$output&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the &lt;code&gt;$output&lt;/code&gt; being closed once either the &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; method is called or the &lt;code&gt;IO::Compress::Deflate&lt;/code&gt; object is destroyed.</source>
          <target state="translated">このオプションは、 &lt;code&gt;$output&lt;/code&gt; パラメーターがファイルハンドルである場合にのみ有効です。指定され、値がtrueの場合、 &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; メソッドが呼び出されるか、 &lt;code&gt;IO::Compress::Deflate&lt;/code&gt; オブジェクトが破棄されると、 &lt;code&gt;$output&lt;/code&gt; が閉じられます。</target>
        </trans-unit>
        <trans-unit id="258816e7ba3830736405fb29e1fd5aa78fa1b61a" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$output&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the &lt;code&gt;$output&lt;/code&gt; being closed once either the &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; method is called or the &lt;code&gt;IO::Compress::Gzip&lt;/code&gt; object is destroyed.</source>
          <target state="translated">このオプションは、 &lt;code&gt;$output&lt;/code&gt; パラメーターがファイルハンドルである場合にのみ有効です。指定され、値がtrueの場合、 &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; メソッドが呼び出されるか、 &lt;code&gt;IO::Compress::Gzip&lt;/code&gt; オブジェクトが破棄されると、 &lt;code&gt;$output&lt;/code&gt; が閉じられます。</target>
        </trans-unit>
        <trans-unit id="33f553ec8eed6ca2655d0af84e094c777ea4ac37" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$output&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the &lt;code&gt;$output&lt;/code&gt; being closed once either the &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; method is called or the &lt;code&gt;IO::Compress::RawDeflate&lt;/code&gt; object is destroyed.</source>
          <target state="translated">このオプションは、 &lt;code&gt;$output&lt;/code&gt; パラメーターがファイルハンドルである場合にのみ有効です。指定され、値がtrueの場合、 &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; メソッドが呼び出されるか、 &lt;code&gt;IO::Compress::RawDeflate&lt;/code&gt; オブジェクトが破棄されると、 &lt;code&gt;$output&lt;/code&gt; が閉じられます。</target>
        </trans-unit>
        <trans-unit id="29176bb9d55bdad6e9210947b4806edcc6d975b2" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$output&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the &lt;code&gt;$output&lt;/code&gt; being closed once either the &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; method is called or the &lt;code&gt;IO::Compress::Zip&lt;/code&gt; object is destroyed.</source>
          <target state="translated">このオプションは、 &lt;code&gt;$output&lt;/code&gt; パラメーターがファイルハンドルである場合にのみ有効です。指定され、値がtrueの場合、 &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; メソッドが呼び出されるか、 &lt;code&gt;IO::Compress::Zip&lt;/code&gt; オブジェクトが破棄されると、 &lt;code&gt;$output&lt;/code&gt; が閉じられます。</target>
        </trans-unit>
        <trans-unit id="cd203a3578c6d44aadc174b3929c5c881fa57c87" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$output&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the &lt;code&gt;$output&lt;/code&gt; being closed once either the &lt;code&gt;close&lt;/code&gt; method is called or the &lt;code&gt;IO::Compress::Bzip2&lt;/code&gt; object is destroyed.</source>
          <target state="translated">このオプションは、 &lt;code&gt;$output&lt;/code&gt; パラメーターがファイルハンドルの場合にのみ有効です。指定され、値がtrueの場合、 &lt;code&gt;close&lt;/code&gt; メソッドが呼び出されるか、 &lt;code&gt;IO::Compress::Bzip2&lt;/code&gt; オブジェクトが破棄されると、 &lt;code&gt;$output&lt;/code&gt; が閉じられます。</target>
        </trans-unit>
        <trans-unit id="56da4e99c55becf3b53cd4d42c1b2e502f1ea8c7" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$output&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the &lt;code&gt;$output&lt;/code&gt; being closed once either the &lt;code&gt;close&lt;/code&gt; method is called or the &lt;code&gt;IO::Compress::Deflate&lt;/code&gt; object is destroyed.</source>
          <target state="translated">このオプションは、 &lt;code&gt;$output&lt;/code&gt; パラメーターがファイルハンドルの場合にのみ有効です。指定され、値がtrueの場合、 &lt;code&gt;close&lt;/code&gt; メソッドが呼び出されるか、 &lt;code&gt;IO::Compress::Deflate&lt;/code&gt; オブジェクトが破棄されると、 &lt;code&gt;$output&lt;/code&gt; が閉じられます。</target>
        </trans-unit>
        <trans-unit id="0cc6b1d042bb75b4b7fcc3f65e4f36863f08ff6d" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$output&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the &lt;code&gt;$output&lt;/code&gt; being closed once either the &lt;code&gt;close&lt;/code&gt; method is called or the &lt;code&gt;IO::Compress::Gzip&lt;/code&gt; object is destroyed.</source>
          <target state="translated">このオプションは、 &lt;code&gt;$output&lt;/code&gt; パラメーターがファイルハンドルの場合にのみ有効です。指定され、値がtrueの場合、 &lt;code&gt;close&lt;/code&gt; メソッドが呼び出されるか、 &lt;code&gt;IO::Compress::Gzip&lt;/code&gt; オブジェクトが破棄されると、 &lt;code&gt;$output&lt;/code&gt; が閉じられます。</target>
        </trans-unit>
        <trans-unit id="c22a83808dec6742b1149a03e8a657bbf97e963e" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$output&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the &lt;code&gt;$output&lt;/code&gt; being closed once either the &lt;code&gt;close&lt;/code&gt; method is called or the &lt;code&gt;IO::Compress::RawDeflate&lt;/code&gt; object is destroyed.</source>
          <target state="translated">このオプションは、 &lt;code&gt;$output&lt;/code&gt; パラメーターがファイルハンドルの場合にのみ有効です。指定され、値がtrueの場合、 &lt;code&gt;close&lt;/code&gt; メソッドが呼び出されるか、 &lt;code&gt;IO::Compress::RawDeflate&lt;/code&gt; オブジェクトが破棄されると、 &lt;code&gt;$output&lt;/code&gt; が閉じられます。</target>
        </trans-unit>
        <trans-unit id="333c8c80db020065477b7b5bfd9c001421d17d16" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$output&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the &lt;code&gt;$output&lt;/code&gt; being closed once either the &lt;code&gt;close&lt;/code&gt; method is called or the &lt;code&gt;IO::Compress::Zip&lt;/code&gt; object is destroyed.</source>
          <target state="translated">このオプションは、 &lt;code&gt;$output&lt;/code&gt; パラメーターがファイルハンドルの場合にのみ有効です。指定され、値がtrueの場合、 &lt;code&gt;close&lt;/code&gt; メソッドが呼び出されるか、 &lt;code&gt;IO::Compress::Zip&lt;/code&gt; オブジェクトが破棄されると、 &lt;code&gt;$output&lt;/code&gt; が閉じられます。</target>
        </trans-unit>
        <trans-unit id="4776439da220ae2064b194f480e3edc29818500b" translate="yes" xml:space="preserve">
          <source>This option is probably not useful when converting multiple POD files at once.</source>
          <target state="translated">このオプションは、複数のPODファイルを一度に変換する場合には、おそらく有用ではないでしょう。</target>
        </trans-unit>
        <trans-unit id="f4da7e81811658139a241d2fcf49caaf6fc6d794" translate="yes" xml:space="preserve">
          <source>This option is significantly slower than the other one.</source>
          <target state="translated">このオプションは、他のものよりもかなり遅いです。</target>
        </trans-unit>
        <trans-unit id="43ce55b0c5bee0085af75b3bb5923ccf3a65b644" translate="yes" xml:space="preserve">
          <source>This option is used to compress input data and append it to an existing compressed data stream in &lt;code&gt;$output&lt;/code&gt; . The end result is a single compressed data stream stored in &lt;code&gt;$output&lt;/code&gt; .</source>
          <target state="translated">このオプションは、入力データを圧縮し、それを &lt;code&gt;$output&lt;/code&gt; 既存の圧縮データストリームに追加するために使用されます。最終結果は、 &lt;code&gt;$output&lt;/code&gt; 格納された単一の圧縮データストリームです。</target>
        </trans-unit>
        <trans-unit id="089ecebdfe8e9a90db3b6de20d411724738cdf04" translate="yes" xml:space="preserve">
          <source>This option is used to compress input data and append it to an existing compressed data stream in &lt;code&gt;$output&lt;/code&gt;. The end result is a single compressed data stream stored in &lt;code&gt;$output&lt;/code&gt;.</source>
          <target state="translated">このオプションは、入力データを圧縮し、それを &lt;code&gt;$output&lt;/code&gt; 既存の圧縮データストリームに追加するために使用されます。最終結果は、 &lt;code&gt;$output&lt;/code&gt; 格納された単一の圧縮データストリームです。</target>
        </trans-unit>
        <trans-unit id="ad95728c1dff8ec162453b97551677cbbf3088e0" translate="yes" xml:space="preserve">
          <source>This option is used to explicitly set the</source>
          <target state="translated">このオプションを使用して、明示的に</target>
        </trans-unit>
        <trans-unit id="4f49f5c4b9fe97ea0c9160e42ef7f17004bd5369" translate="yes" xml:space="preserve">
          <source>This option is useful if you want the same data structure to be encoded as the same JSON text (given the same overall settings). If it is disabled, the same hash might be encoded differently even if contains the same data, as key-value pairs have no inherent ordering in Perl.</source>
          <target state="translated">このオプションは、同じデータ構造を同じJSONテキストとしてエンコードしたい場合に便利です(全体的に同じ設定で)。無効にした場合、Perlではキーと値のペアには固有の順序がないため、同じハッシュが含まれていても、同じデータが含まれていても異なるエンコードになってしまう可能性があります。</target>
        </trans-unit>
        <trans-unit id="2784a12c385481925ffdf8f295738fd39dfe4239" translate="yes" xml:space="preserve">
          <source>This option may be useful when you embed JSON in HTML, but embedding arbitrary JSON in HTML (by some HTML template toolkit or by string interpolation) is risky in general. You must escape necessary characters in correct order, depending on the context.</source>
          <target state="translated">このオプションは、JSONをHTMLに埋め込む場合に便利かもしれませんが、任意のJSONをHTMLに埋め込むことは(いくつかのHTMLテンプレートツールキットによる、あるいは文字列補間による)一般的には危険です。コンテキストに応じて、必要な文字を正しい順序でエスケープしなければなりません。</target>
        </trans-unit>
        <trans-unit id="c905ba8910d975a79e749c35e513e95ca43f84ed" translate="yes" xml:space="preserve">
          <source>This option means that you want to limit the results just to items whose podnames match the given glob/wildcard expression. For example, you might limit your search to just &quot;LWP::*&quot;, to search only for modules starting with &quot;LWP::*&quot; (but not including the module &quot;LWP&quot; itself); or you might limit your search to &quot;LW*&quot; to see only modules whose (full) names begin with &quot;LW&quot;; or you might search for &quot;*Find*&quot; to search for all modules with &quot;Find&quot; somewhere in their full name. (You can also use &quot;?&quot; in a glob expression; so &quot;DB?&quot; will match &quot;DBI&quot; and &quot;DBD&quot;.)</source>
          <target state="translated">このオプションは、ポッド名が glob/wildcard 式にマッチするアイテムだけに検索結果を制限したい場合に使用する。例えば、&quot;LWP::*&quot;で始まるモジュールのみを検索するために、&quot;LWP::*&quot;のみに検索を制限することができる。例えば、&quot;LWP::*&quot;で始まるモジュールのみを検索するために、&quot;LWP::*&quot;に限定したり、&quot;LW*&quot;に限定して、(フルネームが)&quot;LW &quot;で始まるモジュールのみを検索したり、&quot;*Find*&quot;で検索して、フルネームのどこかに &quot;Find &quot;が含まれている全てのモジュールを検索したりすることができます(また、&quot;? (グロブ式の中で &quot;?&quot; を使うこともできます。)</target>
        </trans-unit>
        <trans-unit id="20360642d3c9e99dc2a287f8242c272ca5705a34" translate="yes" xml:space="preserve">
          <source>This option says to instead output literal UTF-8 characters. If your *roff implementation can handle it, this is the best output format to use and avoids corruption of documents containing non-ASCII characters. However, be warned that *roff source with literal UTF-8 characters is not supported by many implementations and may even result in segfaults and other bad behavior.</source>
          <target state="translated">このオプションは、代わりにリテラルのUTF-8文字を出力することを指定します。お使いの*roffの実装がこれを扱えるならば、これは最良の出力形式であり、非ASCII文字を含むドキュメントの破損を回避します。しかし、リテラルUTF-8文字を含む*roffソースは多くの実装ではサポートされておらず、セグメンテーションフォールトやその他の不正な動作を引き起こす可能性があることに注意してください。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
