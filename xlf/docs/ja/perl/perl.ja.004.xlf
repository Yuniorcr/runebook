<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="cc80a0a86bde9f9811deb2b4047a08d7c517bb7e" translate="yes" xml:space="preserve">
          <source>(W closed) The socket you're sending to got itself closed sometime before now. Check your control flow.</source>
          <target state="translated">（Wクローズ）送信しようとしているソケットは、それ以前にそれ自体がクローズしました。制御フローを確認してください。</target>
        </trans-unit>
        <trans-unit id="7aec4135b79438ad14c3a964c4630183be1a1b09" translate="yes" xml:space="preserve">
          <source>(W closed) You tried to do a bind on a closed socket. Did you forget to check the return value of your socket() call? See &lt;a href=&quot;functions/bind&quot;&gt;bind&lt;/a&gt;.</source>
          <target state="translated">（W closed）閉じたソケットでバインドしようとしました。socket（）呼び出しの戻り値を確認するのを忘れましたか？&lt;a href=&quot;functions/bind&quot;&gt;bindを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="2c182385a4029ec290eb443378ddba969658ef79" translate="yes" xml:space="preserve">
          <source>(W closed) You tried to do a bind on a closed socket. Did you forget to check the return value of your socket() call? See &lt;a href=&quot;perlfunc#bind&quot;&gt;&quot;bind&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="translated">（Wが閉じています）閉じたソケットでバインドを実行しようとしました。socket（）呼び出しの戻り値を確認するのを忘れましたか？&lt;a href=&quot;perlfunc#bind&quot;&gt;perlfuncの「bind」を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="a483bc728ce89a356e49e93e25f177a39d0d0bd2" translate="yes" xml:space="preserve">
          <source>(W closed) You tried to do a connect on a closed socket. Did you forget to check the return value of your socket() call? See &lt;a href=&quot;functions/connect&quot;&gt;connect&lt;/a&gt;.</source>
          <target state="translated">（W closed）閉じたソケットで接続しようとしました。socket（）呼び出しの戻り値を確認するのを忘れましたか？&lt;a href=&quot;functions/connect&quot;&gt;connectを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="7fa342e3f8cf4aa7adcf62c9fcf1016406da423a" translate="yes" xml:space="preserve">
          <source>(W closed) You tried to do a connect on a closed socket. Did you forget to check the return value of your socket() call? See &lt;a href=&quot;perlfunc#connect&quot;&gt;&quot;connect&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="translated">（Wが閉じています）閉じたソケットで接続しようとしました。socket（）呼び出しの戻り値を確認するのを忘れましたか？&lt;a href=&quot;perlfunc#connect&quot;&gt;perlfuncの「接続」を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="34608223004dc77e87fe9381938e96c7cf955ac4" translate="yes" xml:space="preserve">
          <source>(W closed) You tried to do a listen on a closed socket. Did you forget to check the return value of your socket() call? See &lt;a href=&quot;functions/listen&quot;&gt;listen&lt;/a&gt;.</source>
          <target state="translated">（W closed）閉じたソケットでリッスンしようとしました。socket（）呼び出しの戻り値を確認するのを忘れましたか？&lt;a href=&quot;functions/listen&quot;&gt;listenを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="7e489b6a7aed7ecf31e032302a6848fcf950dd67" translate="yes" xml:space="preserve">
          <source>(W closed) You tried to do a listen on a closed socket. Did you forget to check the return value of your socket() call? See &lt;a href=&quot;perlfunc#listen&quot;&gt;&quot;listen&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="translated">（Wが閉じています）閉じたソケットでリッスンしようとしました。socket（）呼び出しの戻り値を確認するのを忘れましたか？&lt;a href=&quot;perlfunc#listen&quot;&gt;perlfuncの「listen」を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="71ee5dae4e8472748b97847b021b00dd16e56c28" translate="yes" xml:space="preserve">
          <source>(W closed) You tried to do a shutdown on a closed socket. Seems a bit superfluous.</source>
          <target state="translated">（W closed）閉じたソケットでシャットダウンしようとしました。少し不必要なようです。</target>
        </trans-unit>
        <trans-unit id="b0a054724012ff7380cc3bd3fbabe4c0f3adab15" translate="yes" xml:space="preserve">
          <source>(W closed) You tried to do an accept on a closed socket. Did you forget to check the return value of your socket() call? See &lt;a href=&quot;functions/accept&quot;&gt;accept&lt;/a&gt;.</source>
          <target state="translated">（W closed）閉じたソケットで受け入れを行おうとしました。socket（）呼び出しの戻り値を確認するのを忘れましたか？&lt;a href=&quot;functions/accept&quot;&gt;acceptを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="f7d75a460503da3530360bdc2a54ca0cd52c286a" translate="yes" xml:space="preserve">
          <source>(W closed) You tried to do an accept on a closed socket. Did you forget to check the return value of your socket() call? See &lt;a href=&quot;perlfunc#accept&quot;&gt;&quot;accept&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="translated">（Wが閉じています）閉じたソケットで受け入れを実行しようとしました。socket（）呼び出しの戻り値を確認するのを忘れましたか？&lt;a href=&quot;perlfunc#accept&quot;&gt;perlfuncの「accept」を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="686780402dcd5189e3de84bbbe7e8c3675a26cd5" translate="yes" xml:space="preserve">
          <source>(W closed) You tried to get a socket option on a closed socket. Did you forget to check the return value of your socket() call? See &lt;a href=&quot;functions/getsockopt&quot;&gt;getsockopt&lt;/a&gt;.</source>
          <target state="translated">（W closed）閉じたソケットでソケットオプションを取得しようとしました。socket（）呼び出しの戻り値を確認するのを忘れましたか？&lt;a href=&quot;functions/getsockopt&quot;&gt;getsockoptを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="0767f5feb60728afb7dcc0b938d1d2420bdc90ee" translate="yes" xml:space="preserve">
          <source>(W closed) You tried to get a socket option on a closed socket. Did you forget to check the return value of your socket() call? See &lt;a href=&quot;perlfunc#getsockopt&quot;&gt;&quot;getsockopt&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="translated">（Wが閉じています）閉じたソケットでソケットオプションを取得しようとしました。socket（）呼び出しの戻り値を確認するのを忘れましたか？&lt;a href=&quot;perlfunc#getsockopt&quot;&gt;perlfuncの「getsockopt」を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="b5f3fe4ba1c0a3fcc1fd82dbadf8c0a68a06899b" translate="yes" xml:space="preserve">
          <source>(W closed) You tried to get a socket or peer socket name on a closed socket. Did you forget to check the return value of your socket() call?</source>
          <target state="translated">（W closed）閉じたソケットでソケットまたはピアソケット名を取得しようとしました。socket（）呼び出しの戻り値を確認するのを忘れましたか？</target>
        </trans-unit>
        <trans-unit id="9dd893f13813e0686f88d28dcaa995ea58eff6c6" translate="yes" xml:space="preserve">
          <source>(W closed) You tried to read from a closed filehandle.</source>
          <target state="translated">（W closed）閉じたファイルハンドルから読み込もうとしました。</target>
        </trans-unit>
        <trans-unit id="b1bc9bc2878143204e9bd4f8c5b8ef8fc1a1d196" translate="yes" xml:space="preserve">
          <source>(W closed) You tried to set a socket option on a closed socket. Did you forget to check the return value of your socket() call? See &lt;a href=&quot;functions/setsockopt&quot;&gt;setsockopt&lt;/a&gt;.</source>
          <target state="translated">（W closed）閉じたソケットにソケットオプションを設定しようとしました。socket（）呼び出しの戻り値を確認するのを忘れましたか？&lt;a href=&quot;functions/setsockopt&quot;&gt;setsockoptを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="35e436938fc74d3430c8346b0f1154a9170d5347" translate="yes" xml:space="preserve">
          <source>(W closed) You tried to set a socket option on a closed socket. Did you forget to check the return value of your socket() call? See &lt;a href=&quot;perlfunc#setsockopt&quot;&gt;&quot;setsockopt&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="translated">（Wが閉じています）閉じたソケットにソケットオプションを設定しようとしました。socket（）呼び出しの戻り値を確認するのを忘れましたか？&lt;a href=&quot;perlfunc#setsockopt&quot;&gt;perlfuncの「setsockopt」を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="6691ea148e323c92640a7e1d8e12d6db9b140e15" translate="yes" xml:space="preserve">
          <source>(W closure) An inner (nested)</source>
          <target state="translated">（Wクロージャー）インナー（入れ子）</target>
        </trans-unit>
        <trans-unit id="ac28de0cbad4c4dfc31aa274d0d0826540c4608a" translate="yes" xml:space="preserve">
          <source>(W closure) During compilation, an inner named subroutine or eval is attempting to capture an outer lexical subroutine that is not currently available. This can happen for one of two reasons. First, the lexical subroutine may be declared in an outer anonymous subroutine that has not yet been created. (Remember that named subs are created at compile time, while anonymous subs are created at run-time.) For example,</source>
          <target state="translated">（Wクロージャー）コンパイル中に、内部の名前付きサブルーチンまたはevalが、現在使用できない外部の字句サブルーチンをキャプチャしようとしています。これは、2つの理由のいずれかで発生する可能性があります。最初に、字句サブルーチンは、まだ作成されていない外部の無名サブルーチンで宣言できます。（名前付きサブはコンパイル時に作成され、匿名サブは実行時に作成されることに注意してください。）たとえば、</target>
        </trans-unit>
        <trans-unit id="65c019298a1444d38d91fcf17700dfd268f80742" translate="yes" xml:space="preserve">
          <source>(W closure) During compilation, an inner named subroutine or eval is attempting to capture an outer lexical that is not currently available. This can happen for one of two reasons. First, the outer lexical may be declared in an outer anonymous subroutine that has not yet been created. (Remember that named subs are created at compile time, while anonymous subs are created at run-time.) For example,</source>
          <target state="translated">（Wクロージャー）コンパイル中に、内部の名前付きサブルーチンまたはevalが、現在利用できない外部レキシカルをキャプチャしようとしています。これは、2つの理由のいずれかで発生する可能性があります。まず、外側の字句は、まだ作成されていない外側の無名サブルーチンで宣言できます。（名前付きサブはコンパイル時に作成され、匿名サブは実行時に作成されることに注意してください。）たとえば、</target>
        </trans-unit>
        <trans-unit id="9b99fd281d6e3b0ca6d9cc6f78bf1f1eebea0030" translate="yes" xml:space="preserve">
          <source>(W digit) Here &lt;code&gt;%s&lt;/code&gt; is one of &quot;binary&quot;, &quot;octal&quot;, or &quot;hex&quot;. You may have tried to use a digit other than one that is legal for the given type, such as only 0 and 1 for binary. For octals, this is raised only if the illegal character is an '8' or '9'. For hex, 'A' - 'F' and 'a' - 'f' are legal. Interpretation of the number stopped just before the offending digit or character.</source>
          <target state="translated">（W桁）ここで、 &lt;code&gt;%s&lt;/code&gt; は「2進数」、「8進数」、または「16進数」のいずれかです。2進数の場合は0と1のみなど、特定のタイプに有効な数字以外の数字を使用しようとした可能性があります。8進数の場合、これは、不正な文字が「8」または「9」の場合にのみ発生します。hexの場合、「A」-「F」および「a」-「f」は有効です。数字の解釈は、問題のある数字または文字の直前で停止しました。</target>
        </trans-unit>
        <trans-unit id="aeb7a7a3fdadc4b5bcf1a03e2ede998a58cf8cca" translate="yes" xml:space="preserve">
          <source>(W digit) In parsing a hexadecimal numeric constant, a character was unexpectedly encountered that isn't hexadecimal. The resulting value is as indicated.</source>
          <target state="translated">（W桁）16進数の定数を解析しているときに、16進数ではない文字が予期せず検出されました。結果の値は示されているとおりです。</target>
        </trans-unit>
        <trans-unit id="f49f3db25d97d6915960909beefeac21238b6f2d" translate="yes" xml:space="preserve">
          <source>(W digit) In parsing an octal numeric constant, a character was unexpectedly encountered that isn't octal. The resulting value is as indicated.</source>
          <target state="translated">（W桁）8進数値定数の解析時に、8進ではない文字が予期せず検出されました。結果の値は示されているとおりです。</target>
        </trans-unit>
        <trans-unit id="5e57358e7c1ec969e817e54f1e65d4d60ed6b951" translate="yes" xml:space="preserve">
          <source>(W digit) You may have tried to use a character other than 0 - 9 or A - F, a - f in a hexadecimal number. Interpretation of the hexadecimal number stopped before the illegal character.</source>
          <target state="translated">（W桁）16進数で0-9またはA-F、a-f以外の文字を使用しようとした可能性があります。不正な文字の前に16進数の解釈が停止しました。</target>
        </trans-unit>
        <trans-unit id="00a4e0b3bbab633922e651c73c2306c40de05654" translate="yes" xml:space="preserve">
          <source>(W digit) You may have tried to use a digit other than 0 or 1 in a binary number. Interpretation of the binary number stopped before the offending digit.</source>
          <target state="translated">（W桁）2進数で0または1以外の数字を使用しようとした可能性があります。2進数の解釈が問題のある数字の前で停止しました。</target>
        </trans-unit>
        <trans-unit id="84e6efe8b571226f1c56d898f3595c47df2fa3d9" translate="yes" xml:space="preserve">
          <source>(W digit) You may have tried to use an 8 or 9 in an octal number. Interpretation of the octal number stopped before the 8 or 9.</source>
          <target state="translated">（W桁）8進数で8または9を使用しようとした可能性があります。8進数の解釈は8または9の前に停止しました。</target>
        </trans-unit>
        <trans-unit id="9fb9a032a154ac7b59a268710cf1949bc22fb256" translate="yes" xml:space="preserve">
          <source>(W exec) A system(), exec(), or piped open call could not execute the named program for the indicated reason. Typical reasons include: the permissions were wrong on the file, the file wasn't found in &lt;code&gt;$ENV{PATH}&lt;/code&gt; , the executable in question was compiled for another architecture, or the #! line in a script points to an interpreter that can't be run for similar reasons. (Or maybe your system doesn't support #! at all.)</source>
          <target state="translated">（W exec）system（）、exec（）、またはパイプされたopen呼び出しが、示された理由により、指定されたプログラムを実行できませんでした。典型的な理由は次のとおりです。ファイルの権限が間違っていた、ファイルが &lt;code&gt;$ENV{PATH}&lt;/code&gt; に見つからなかった、問題の実行可能ファイルが別のアーキテクチャ用にコンパイルされている、または スクリプトの行は、同様の理由で実行できないインタープリターを指しています。（または、システムが＃！をまったくサポートしていない可能性があります。）</target>
        </trans-unit>
        <trans-unit id="3b86ef50e35cd205cf0587cbb4b8c068a6ecca60" translate="yes" xml:space="preserve">
          <source>(W exec) A system(), exec(), or piped open call could not execute the named program for the indicated reason. Typical reasons include: the permissions were wrong on the file, the file wasn't found in &lt;code&gt;$ENV{PATH}&lt;/code&gt;, the executable in question was compiled for another architecture, or the #! line in a script points to an interpreter that can't be run for similar reasons. (Or maybe your system doesn't support #! at all.)</source>
          <target state="translated">（W exec）system（）、exec（）、またはパイプされたopen呼び出しは、示された理由により、指定されたプログラムを実行できませんでした。一般的な理由には、ファイルのアクセス許可が間違っている、ファイルが &lt;code&gt;$ENV{PATH}&lt;/code&gt; に見つからない、問題の実行可能ファイルが別のアーキテクチャ用にコンパイルされている、または＃！スクリプトの行は、同様の理由で実行できないインタープリターを指しています。（または、システムが＃！をまったくサポートしていない可能性があります。）</target>
        </trans-unit>
        <trans-unit id="40cf81f6b21e33cf0de9e73eab5064b147112369" translate="yes" xml:space="preserve">
          <source>(W exec) A warning peculiar to VMS. Waitpid() was asked to wait for a process which isn't a subprocess of the current process. While this is fine from VMS' perspective, it's probably not what you intended.</source>
          <target state="translated">（W exec）VMSに固有の警告。Waitpid（）は、現在のプロセスのサブプロセスではないプロセスを待つように求められました。これはVMSの観点からは問題ありませんが、おそらく意図したものではありません。</target>
        </trans-unit>
        <trans-unit id="0ee5ddf7eeab37551318e6033433b97f7d5d48d1" translate="yes" xml:space="preserve">
          <source>(W exec) You did an exec() with some statement after it other than a die(). This is almost always an error, because exec() never returns unless there was a failure. You probably wanted to use system() instead, which does return. To suppress this warning, put the exec() in a block by itself.</source>
          <target state="translated">（W exec）die（）以外の後にexec（）を実行しました。exec（）は失敗がなければ戻らないため、これはほとんど常にエラーです。おそらく代わりにsystem（）を使用したいと思います。この警告を抑制するには、exec（）を単独でブロックに入れます。</target>
        </trans-unit>
        <trans-unit id="278e1a884eb3739698a7e8956cfbb36c8f5f87f4" translate="yes" xml:space="preserve">
          <source>(W exiting) You are exiting a format by unconventional means, such as a goto, or a loop control statement.</source>
          <target state="translated">（W exiting）gotoやループ制御ステートメントなど、従来とは異なる方法でフォーマットを終了しています。</target>
        </trans-unit>
        <trans-unit id="67609a2a97401f2b99b78611043cd7f013a46fee" translate="yes" xml:space="preserve">
          <source>(W exiting) You are exiting a rather special block construct (like a sort block or subroutine) by unconventional means, such as a goto, or a loop control statement. See &lt;a href=&quot;functions/sort&quot;&gt;sort&lt;/a&gt;.</source>
          <target state="translated">（W exiting）gotoやループ制御ステートメントなど、従来とは異なる方法で（ソートブロックやサブルーチンなどの）かなり特殊なブロック構造を終了しています。&lt;a href=&quot;functions/sort&quot;&gt;sortを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="8b40b6b378e94e3e4cadc41efdaa751acbe0637e" translate="yes" xml:space="preserve">
          <source>(W exiting) You are exiting a rather special block construct (like a sort block or subroutine) by unconventional means, such as a goto, or a loop control statement. See &lt;a href=&quot;perlfunc#sort&quot;&gt;&quot;sort&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="translated">（W終了）gotoやループ制御ステートメントなどの従来とは異なる方法で、かなり特殊なブロック構造（ソート・ブロックやサブルーチンなど）を終了しています。&lt;a href=&quot;perlfunc#sort&quot;&gt;perlfuncの「sort」を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="423b0191e4cbf769af53341d336458806707caeb" translate="yes" xml:space="preserve">
          <source>(W exiting) You are exiting a subroutine by unconventional means, such as a goto, or a loop control statement.</source>
          <target state="translated">（W exiting）gotoやループ制御ステートメントなど、従来とは異なる方法でサブルーチンを終了しています。</target>
        </trans-unit>
        <trans-unit id="577ddf9c905e4347f8a9edb4c94bb3d05b393883" translate="yes" xml:space="preserve">
          <source>(W exiting) You are exiting a substitution by unconventional means, such as a return, a goto, or a loop control statement.</source>
          <target state="translated">（W exiting）return、goto、ループ制御ステートメントなど、従来とは異なる方法で置換を終了しています。</target>
        </trans-unit>
        <trans-unit id="635b5ef261a420bb3046d7f8e4b7a552abb9ebd2" translate="yes" xml:space="preserve">
          <source>(W exiting) You are exiting an eval by unconventional means, such as a goto, or a loop control statement.</source>
          <target state="translated">（W exiting）gotoやループ制御ステートメントなど、従来とは異なる方法でevalを終了しています。</target>
        </trans-unit>
        <trans-unit id="61f27ff7875edb61784c966ef6d387cd6a2988db" translate="yes" xml:space="preserve">
          <source>(W illegalproto) A character follows % or @ in a prototype. This is useless, since % and @ gobble the rest of the subroutine arguments.</source>
          <target state="translated">（Willegalproto）プロトタイプ内の文字が％または@の後に続きます。％と@が残りのサブルーチン引数を混乱させるので、これは役に立たない。</target>
        </trans-unit>
        <trans-unit id="c9ffd9aa561f3b86a313e40b450bfafd500921a5" translate="yes" xml:space="preserve">
          <source>(W illegalproto) A grouping was started with &lt;code&gt;[&lt;/code&gt; but never closed with &lt;code&gt;]&lt;/code&gt;.</source>
          <target state="translated">（Willegalproto）グループ化が &lt;code&gt;[&lt;/code&gt; で始まったが[で閉じられなかった &lt;code&gt;]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6112a30e9d70cd7305832f9bcd92076f9f034086" translate="yes" xml:space="preserve">
          <source>(W illegalproto) An illegal character was found in a prototype declaration. Legal characters in prototypes are $, @, %, *, ;, [, ], &amp;amp;, \, and +. Perhaps you were trying to write a subroutine signature but didn't enable that feature first (&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'signatures'&lt;/code&gt; ), so your signature was instead interpreted as a bad prototype.</source>
          <target state="translated">（W illegalproto）プロトタイプ宣言で不正な文字が見つかりました。プロトタイプの有効な文字は、$、@、％、*、;、[、]、＆、\、+です。おそらく、サブルーチンのシグネチャを作成しようとしたが、その機能を最初に有効にしていないため（ &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'signatures'&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;使用&lt;/a&gt;）、シグネチャが不正なプロトタイプとして解釈された可能性があります。</target>
        </trans-unit>
        <trans-unit id="e52bf0978448af6b58e107bc72b92c785c760bdf" translate="yes" xml:space="preserve">
          <source>(W illegalproto) An illegal character was found in a prototype declaration. Legal characters in prototypes are $, @, %, *, ;, [, ], &amp;amp;, \, and +. Perhaps you were trying to write a subroutine signature but didn't enable that feature first (&lt;code&gt;use feature 'signatures'&lt;/code&gt;), so your signature was instead interpreted as a bad prototype.</source>
          <target state="translated">（Willegalproto）プロトタイプ宣言で不正な文字が見つかりました。プロトタイプの有効な文字は、$、@、％、*、;、[、]、＆、\、および+です。おそらく、サブルーチン署名を書き込もうとしていたが、最初にその機能を有効にしなかったため（ &lt;code&gt;use feature 'signatures'&lt;/code&gt; ）、代わりに署名が不正なプロトタイプとして解釈されました。</target>
        </trans-unit>
        <trans-unit id="1db9799c8c1e3509096b870feae3fbef0c02c544" translate="yes" xml:space="preserve">
          <source>(W illegalproto) An illegal character was found in a prototype declaration. The '_' in a prototype must be followed by a ';', indicating the rest of the parameters are optional, or one of '@' or '%', since those two will accept 0 or more final parameters.</source>
          <target state="translated">（W illegalproto）プロトタイプ宣言で不正な文字が見つかりました。プロトタイプの '_'の後には ';'を付ける必要があります。これは、残りのパラメーターがオプションであること、または '@'または '％'のいずれかであることを示します。これらの2つは0以上の最終パラメーターを受け入れるためです。</target>
        </trans-unit>
        <trans-unit id="0a696416880193fa00f2a4266f8a348d0d4dde88" translate="yes" xml:space="preserve">
          <source>(W imprecision) The value you attempted to increment or decrement by one is too large for the underlying floating point representation to store accurately, hence the target of &lt;code&gt;++&lt;/code&gt; or &lt;code&gt;--&lt;/code&gt; is unchanged. Perl issues this warning because it has already switched from integers to floating point when values are too large for integers, and now even floating point is insufficient. You may wish to switch to using &lt;a href=&quot;Math::BigInt&quot;&gt;Math::BigInt&lt;/a&gt; explicitly.</source>
          <target state="translated">（Wの不正確さ）1ずつインクリメントまたはデクリメントしようとした値が大きすぎて、基になる浮動小数点表現を正確に格納できないため、 &lt;code&gt;++&lt;/code&gt; または &lt;code&gt;--&lt;/code&gt; ターゲットは変更されません。Perlは、値が整数に対して大きすぎる場合にすでに整数から浮動小数点に切り替えられており、浮動小数点でさえ不十分であるため、この警告を発行します。&lt;a href=&quot;Math::BigInt&quot;&gt;Math :: BigIntを&lt;/a&gt;明示的に使用するように切り替えることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="c7fd43abca207918c5fc4cdbdfec0cb27e79feb6" translate="yes" xml:space="preserve">
          <source>(W imprecision) The value you attempted to increment or decrement by one is too large for the underlying floating point representation to store accurately, hence the target of &lt;code&gt;++&lt;/code&gt; or &lt;code&gt;--&lt;/code&gt; is unchanged. Perl issues this warning because it has already switched from integers to floating point when values are too large for integers, and now even floating point is insufficient. You may wish to switch to using &lt;a href=&quot;math/bigint&quot;&gt;Math::BigInt&lt;/a&gt; explicitly.</source>
          <target state="translated">（W不正確）1ずつ増分または減分しようとした値は、基礎となる浮動小数点表現を正確に格納するには大きすぎるため、 &lt;code&gt;++&lt;/code&gt; または &lt;code&gt;--&lt;/code&gt; ターゲットは変更されません。Perlはこの警告を発行します。これは、値が整数に対して大きすぎるときにすでに整数から浮動小数点に切り替えられており、浮動小数点でも不十分なためです。&lt;a href=&quot;math/bigint&quot;&gt;Math :: BigIntを&lt;/a&gt;明示的に使用するように切り替えることができます。</target>
        </trans-unit>
        <trans-unit id="0380d4e9c21d75260f15f61e0e8d75fffecf52b7" translate="yes" xml:space="preserve">
          <source>(W internal) A warning peculiar to VMS. Perl tried to read a logical name or CLI symbol definition when preparing to iterate over %ENV, and didn't see the expected delimiter between key and value, so the line was ignored.</source>
          <target state="translated">（W内部）VMSに固有の警告。Perlは、％ENVを反復する準備をしているときに論理名またはCLIシンボル定義を読み取ろうとしましたが、キーと値の間に予期される区切り文字が見つからなかったため、行は無視されました。</target>
        </trans-unit>
        <trans-unit id="e0b79079d3e5d0700f6c79112c4f181694c27e32" translate="yes" xml:space="preserve">
          <source>(W internal) A warning peculiar to VMS. Perl tried to read the CRTL's internal environ array, and encountered an element without the &lt;code&gt;=&lt;/code&gt; delimiter used to separate keys from values. The element is ignored.</source>
          <target state="translated">（W内部）VMSに固有の警告。PerlはCRTLの内部環境配列を読み取ろうとしましたが、キーと値を区切るために使用される &lt;code&gt;=&lt;/code&gt; 区切り文字のない要素に遭遇しました。要素は無視されます。</target>
        </trans-unit>
        <trans-unit id="587287ad8ceaf64ab8230f7bcf5670e31503bcc1" translate="yes" xml:space="preserve">
          <source>(W internal) A warning peculiar to VMS. While Perl was preparing to iterate over %ENV, it encountered a logical name or symbol definition which was too long, so it was truncated to the string shown.</source>
          <target state="translated">（W内部）VMSに固有の警告。Perlが％ENVを反復する準備をしているときに、論理名またはシンボル定義が長すぎるため、表示された文字列に切り捨てられました。</target>
        </trans-unit>
        <trans-unit id="36ebe0800de98cf6f1b5bf24a60713b3518a1d0b" translate="yes" xml:space="preserve">
          <source>(W internal) Warnings peculiar to VMS. You tried to change or delete an element of the CRTL's internal environ array, but your copy of Perl wasn't built with a CRTL that contained the setenv() function. You'll need to rebuild Perl with a CRTL that does, or redefine</source>
          <target state="translated">（W内部）VMSに固有の警告。CRTLの内部環境配列の要素を変更または削除しようとしましたが、Perlのコピーは、setenv（）関数を含むCRTLでビルドされていません。あなたはそうするか再定義するCRTLでPerlを再構築する必要があります</target>
        </trans-unit>
        <trans-unit id="ef225bf78a4ffd17a5bb6a41738bbeb914a98db0" translate="yes" xml:space="preserve">
          <source>(W io) A filehandle represents an opened file, and when you opened the file it already went past any symlink you are presumably trying to look for. The operation returned &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;. Use a filename instead.</source>
          <target state="translated">（W io）ファイルハンドルは開かれているファイルを表し、ファイルを開いたときにすでに探しているシンボリックリンクを通過しています。操作は &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; を返しました。代わりにファイル名を使用してください。</target>
        </trans-unit>
        <trans-unit id="d2da3ad1830577c29fb44eb869b1ca9384bf55d4" translate="yes" xml:space="preserve">
          <source>(W io) A filehandle represents an opened file, and when you opened the file it already went past any symlink you are presumably trying to look for. The operation returned &lt;code&gt;undef&lt;/code&gt;. Use a filename instead.</source>
          <target state="translated">（W io）ファイルハンドルは開かれたファイルを表し、ファイルを開いたときに、おそらく探しているシンボリックリンクをすでに通過しています。操作は &lt;code&gt;undef&lt;/code&gt; を返しました。代わりにファイル名を使用してください。</target>
        </trans-unit>
        <trans-unit id="ee0ffa3b5e5e88aa061e31df24e098e285623887" translate="yes" xml:space="preserve">
          <source>(W io) A single call to write() produced more lines than can fit on a page. See &lt;a href=&quot;perlform&quot;&gt;perlform&lt;/a&gt;.</source>
          <target state="translated">（W io）write（）への1回の呼び出しで、ページに収まりきらない数の行が生成されました。&lt;a href=&quot;perlform&quot;&gt;perlformを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="3fae264d9cc122df4656cd9db14f53c587dced8a" translate="yes" xml:space="preserve">
          <source>(W io) The dirhandle you are doing a seekdir() on is either closed or not really a dirhandle. Check your control flow.</source>
          <target state="translated">（W io）seekdir（）を実行しているディレクトリハンドルが閉じているか、実際にはディレクトリハンドルではありません。制御フローを確認してください。</target>
        </trans-unit>
        <trans-unit id="4e5653964bb3ce999ffdd1f023f2acfeb0cb1b2b" translate="yes" xml:space="preserve">
          <source>(W io) The dirhandle you tried to close is either closed or not really a dirhandle. Check your control flow.</source>
          <target state="translated">（W io）閉じようとしたディレクトリハンドルは閉じられているか、実際にはディレクトリハンドルではありません。制御フローを確認してください。</target>
        </trans-unit>
        <trans-unit id="127a04276c120f78beaffbfc2313d45b73d1b33b" translate="yes" xml:space="preserve">
          <source>(W io) The dirhandle you tried to do a rewinddir() on is either closed or not really a dirhandle. Check your control flow.</source>
          <target state="translated">（W io）rewinddir（）を実行しようとしたディレクトリハンドルが閉じているか、実際にはディレクトリハンドルではありません。制御フローを確認してください。</target>
        </trans-unit>
        <trans-unit id="1d737035b8d4f24c62b1ff52cc5128d37b308243" translate="yes" xml:space="preserve">
          <source>(W io) The dirhandle you tried to telldir() is either closed or not really a dirhandle. Check your control flow.</source>
          <target state="translated">（W io）telldir（）に試みたdirhandleが閉じているか、実際にはdirhandleではありません。制御フローを確認してください。</target>
        </trans-unit>
        <trans-unit id="b257e2f649cabca0abfa99bff0088affded75975" translate="yes" xml:space="preserve">
          <source>(W io) The dirhandle you're reading from is either closed or not really a dirhandle. Check your control flow.</source>
          <target state="translated">（W io）読み取っているディレクトリハンドルが閉じているか、実際にはディレクトリハンドルではありません。制御フローを確認してください。</target>
        </trans-unit>
        <trans-unit id="cc52e3a1ee5048b6a45ffd6085a3f6b30e6d1327" translate="yes" xml:space="preserve">
          <source>(W io) You opened for reading a filehandle that got the same filehandle id as STDOUT or STDERR. This occurred because you closed STDOUT or STDERR previously.</source>
          <target state="translated">（W io）STDOUTまたはSTDERRと同じファイルハンドルIDを持つファイルハンドルを読み取るために開きました。これは、以前にSTDOUTまたはSTDERRを閉じたために発生しました。</target>
        </trans-unit>
        <trans-unit id="16c9c24089f7631f92df6e520f74b47f2a676640" translate="yes" xml:space="preserve">
          <source>(W io) You opened for writing a filehandle that got the same filehandle id as STDIN. This occurred because you closed STDIN previously.</source>
          <target state="translated">（W io）STDINと同じファイルハンドルIDを持つファイルハンドルを書き込むために開きました。これは、STDINを以前に閉じたために発生しました。</target>
        </trans-unit>
        <trans-unit id="48e33ef7ad3bda2c544d27c4a2b881dd4cce8a01" translate="yes" xml:space="preserve">
          <source>(W io) You tried to do an lstat on a filehandle. What did you mean by that? lstat() makes sense only on filenames. (Perl did a fstat() instead on the filehandle.)</source>
          <target state="translated">（W io）ファイルハンドルでlstatを実行しようとしました。あなたはそれによって何を意味しました？lstat（）はファイル名でのみ意味があります。（Perlは代わりにファイルハンドルでfstat（）を行いました。）</target>
        </trans-unit>
        <trans-unit id="324bb1ba42f01059dfedd40debd4b1a4374a4560" translate="yes" xml:space="preserve">
          <source>(W io) You tried to open a scalar reference for reading or writing, using the 3-arg open() syntax:</source>
          <target state="translated">（W io）3引数のopen（）構文を使用して、読み取りまたは書き込みのためにスカラー参照を開こうとしました：</target>
        </trans-unit>
        <trans-unit id="cd0af26043dd5c8a624dc3d3fd913fb0da71fce7" translate="yes" xml:space="preserve">
          <source>(W io) You tried to read from a filehandle opened only for writing, If you intended it to be a read/write filehandle, you needed to open it with &quot;+&amp;lt;&quot; or &quot;+&amp;gt;&quot; or &quot;+&amp;gt;&amp;gt;&quot; instead of with &quot;&amp;gt;&quot;. If you intended only to read from the file, use &quot;&amp;lt;&quot;. See &lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;. Another possibility is that you attempted to open filedescriptor 0 (also known as STDIN) for output (maybe you closed STDIN earlier?).</source>
          <target state="translated">（W io）書き込み専用に開いたファイルハンドルから読み取ろうとしましたが、読み取り/書き込みファイルハンドルにする場合は、代わりに「+ &amp;lt;」または「+&amp;gt;」または「+ &amp;gt;&amp;gt;」で開く必要がありました。の「&amp;gt;」付き。ファイルからの読み取りのみを目的とした場合は、「&amp;lt;」を使用します。&lt;a href=&quot;functions/open&quot;&gt;openを&lt;/a&gt;参照してください。別の可能性として、出力用にファイル記述子0（STDINとも呼ばれる）を開こうとした可能性があります（おそらくSTDINを以前に閉じましたか？）。</target>
        </trans-unit>
        <trans-unit id="26a86df58693ec2956cf4b78b4f1b98ee6ebb681" translate="yes" xml:space="preserve">
          <source>(W io) You tried to read from a filehandle opened only for writing, If you intended it to be a read/write filehandle, you needed to open it with &quot;+&amp;lt;&quot; or &quot;+&amp;gt;&quot; or &quot;+&amp;gt;&amp;gt;&quot; instead of with &quot;&amp;gt;&quot;. If you intended only to read from the file, use &quot;&amp;lt;&quot;. See &lt;a href=&quot;perlfunc#open&quot;&gt;&quot;open&quot; in perlfunc&lt;/a&gt;. Another possibility is that you attempted to open filedescriptor 0 (also known as STDIN) for output (maybe you closed STDIN earlier?).</source>
          <target state="translated">（W io）書き込み専用に開いたファイルハンドルから読み取ろうとしました。読み取り/書き込みファイルハンドルにする場合は、代わりに「+ &amp;lt;」または「+&amp;gt;」または「+ &amp;gt;&amp;gt;」で開く必要がありました。の&amp;gt; &quot;。ファイルからの読み取りのみを目的とする場合は、「&amp;lt;」を使用します。&lt;a href=&quot;perlfunc#open&quot;&gt;perlfuncの「open」を&lt;/a&gt;参照してください。もう1つの可能性は、出力用にファイル記述子0（STDINとも呼ばれます）を開こうとしたことです（おそらく以前にSTDINを閉じましたか？）。</target>
        </trans-unit>
        <trans-unit id="8be59eeb719b1de30aae260c360f6b5c60cae180" translate="yes" xml:space="preserve">
          <source>(W io) You tried to write on a read-only filehandle. If you intended it to be a read-write filehandle, you needed to open it with &quot;+&amp;lt;&quot; or &quot;+&amp;gt;&quot; or &quot;+&amp;gt;&amp;gt;&quot; instead of with &quot;&amp;lt;&quot; or nothing. If you intended only to write the file, use &quot;&amp;gt;&quot; or &quot;&amp;gt;&amp;gt;&quot;. See &lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;.</source>
          <target state="translated">（W io）読み取り専用のファイルハンドルに書き込もうとしました。それを読み書き可能なファイルハンドルにするつもりなら、「&amp;lt;」または何もせずに「+ &amp;lt;」または「+&amp;gt;」または「+ &amp;gt;&amp;gt;」で開く必要がありました。ファイルの書き込みのみを目的とした場合は、「&amp;gt;」または「&amp;gt;&amp;gt;」を使用します。&lt;a href=&quot;functions/open&quot;&gt;openを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="b0ae7a7db65e1788bd003926fece059a687b8735" translate="yes" xml:space="preserve">
          <source>(W io) You tried to write on a read-only filehandle. If you intended it to be a read-write filehandle, you needed to open it with &quot;+&amp;lt;&quot; or &quot;+&amp;gt;&quot; or &quot;+&amp;gt;&amp;gt;&quot; instead of with &quot;&amp;lt;&quot; or nothing. If you intended only to write the file, use &quot;&amp;gt;&quot; or &quot;&amp;gt;&amp;gt;&quot;. See &lt;a href=&quot;perlfunc#open&quot;&gt;&quot;open&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="translated">（W io）読み取り専用のファイルハンドルに書き込もうとしました。読み取り/書き込みファイルハンドルにする場合は、「&amp;lt;」または何も指定せずに、「+ &amp;lt;」または「+&amp;gt;」または「+ &amp;gt;&amp;gt;」で開く必要がありました。ファイルの書き込みのみを目的とする場合は、「&amp;gt;」または「&amp;gt;&amp;gt;」を使用します。&lt;a href=&quot;perlfunc#open&quot;&gt;perlfuncの「open」を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="968ea45fb72fa2c7bd5bcdf03ea7400fdcd81829" translate="yes" xml:space="preserve">
          <source>(W layer) An attempt was made to push an unknown layer onto the Perl I/O system. (Layers take care of transforming data between external and internal representations.) Note that some layers, such as &lt;code&gt;mmap&lt;/code&gt; , are not supported in all environments. If your program didn't explicitly request the failing operation, it may be the result of the value of the environment variable PERLIO.</source>
          <target state="translated">（Wレイヤー）不明なレイヤーをPerl I / Oシステムにプッシュしようとしました。（レイヤーは、外部表現と内部表現の間でデータを変換します。） &lt;code&gt;mmap&lt;/code&gt; などの一部のレイヤーは、すべての環境でサポートされているわけではありません。プログラムが失敗した操作を明示的に要求しなかった場合は、環境変数PERLIOの値の結果である可能性があります。</target>
        </trans-unit>
        <trans-unit id="54d67ddc1b4d29d590c9b5ebbb632ab7cf7be879" translate="yes" xml:space="preserve">
          <source>(W layer) An attempt was made to push an unknown layer onto the Perl I/O system. (Layers take care of transforming data between external and internal representations.) Note that some layers, such as &lt;code&gt;mmap&lt;/code&gt;, are not supported in all environments. If your program didn't explicitly request the failing operation, it may be the result of the value of the environment variable PERLIO.</source>
          <target state="translated">（Wレイヤー）未知のレイヤーをPerl I / Oシステムにプッシュしようとしました。（レイヤーは、外部表現と内部表現の間でデータを変換します。） &lt;code&gt;mmap&lt;/code&gt; などの一部のレイヤーは、すべての環境でサポートされているわけではないことに注意してください。プログラムが失敗した操作を明示的に要求しなかった場合は、環境変数PERLIOの値の結果である可能性があります。</target>
        </trans-unit>
        <trans-unit id="3c622eaff4edeef916a3a7c575dcd4f69353b85c" translate="yes" xml:space="preserve">
          <source>(W layer) When pushing a layer with arguments onto the Perl I/O system you forgot the ) that closes the argument list. (Layers take care of transforming data between external and internal representations.) Perl stopped parsing the layer list at this point and did not attempt to push this layer. If your program didn't explicitly request the failing operation, it may be the result of the value of the environment variable PERLIO.</source>
          <target state="translated">（Wレイヤー）引数を持つレイヤーをPerl I / Oシステムにプッシュするときに、引数リストを閉じる）を忘れた。（レイヤーは、外部表現と内部表現の間でデータを変換します。）Perlは、この時点でレイヤーリストの解析を停止し、このレイヤーをプッシュしようとしませんでした。プログラムが失敗した操作を明示的に要求しなかった場合は、環境変数PERLIOの値の結果である可能性があります。</target>
        </trans-unit>
        <trans-unit id="ecde0fdfd45c81bcf2a4145082dc4dd084cab4f1" translate="yes" xml:space="preserve">
          <source>(W layer) When pushing layers onto the Perl I/O system, something other than a colon or whitespace was seen between the elements of a layer list. If the previous attribute had a parenthesised parameter list, perhaps that list was terminated too soon.</source>
          <target state="translated">（Wレイヤー）Perl I / Oシステムにレイヤーをプッシュすると、レイヤーリストの要素間にコロンまたは空白以外のものが表示されました。前の属性に括弧で囲まれたパラメーター・リストがあった場合、おそらくそのリストはあまりにも早く終了しました。</target>
        </trans-unit>
        <trans-unit id="b99a80d131d19e28dda9041e25eeb2f1f73775f2" translate="yes" xml:space="preserve">
          <source>(W locale) While in a single-byte locale (</source>
          <target state="translated">（Wロケール）シングルバイトロケール（</target>
        </trans-unit>
        <trans-unit id="0d7aae5004e480ec270f51ea7824d1434b43e076" translate="yes" xml:space="preserve">
          <source>(W locale) You are 1) running under &quot;&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; &quot;; 2) the current locale is not a UTF-8 one; 3) you tried to do the designated case-change operation on the specified Unicode character; and 4) the result of this operation would mix Unicode and locale rules, which likely conflict. Mixing of different rule types is forbidden, so the operation was not done; instead the result is the indicated value, which is the best available that uses entirely Unicode rules. That turns out to almost always be the original character, unchanged.</source>
          <target state="translated">（Wロケール）1）「 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;使用&lt;/a&gt;」で実行している。 2）現在のロケールはUTF-8ロケールではありません。 3）指定されたUnicode文字に対して指定された大文字小文字変更操作を実行しようとしました。 4）この操作の結果、Unicodeとロケールのルールが混在するため、競合する可能性があります。異なるルールタイプの混在は禁止されているため、操作は行われませんでした。代わりに、結果は指定された値です。これは、完全にUnicodeルールを使用する利用可能な最良の値です。それは、ほとんどの場合、変更されていない元のキャラクターであることがわかります。</target>
        </trans-unit>
        <trans-unit id="be916193296ba6f1abfb9d4a799698762333f1fa" translate="yes" xml:space="preserve">
          <source>(W locale) You are 1) running under &quot;&lt;code&gt;use locale&lt;/code&gt;&quot;; 2) the current locale is not a UTF-8 one; 3) you tried to do the designated case-change operation on the specified Unicode character; and 4) the result of this operation would mix Unicode and locale rules, which likely conflict. Mixing of different rule types is forbidden, so the operation was not done; instead the result is the indicated value, which is the best available that uses entirely Unicode rules. That turns out to almost always be the original character, unchanged.</source>
          <target state="translated">（Wロケール）あなたは1）「 &lt;code&gt;use locale&lt;/code&gt; 」で実行しています。 2）現在のロケールはUTF-8ロケールではありません。 3）指定されたUnicode文字に対して指定された大文字小文字変更操作を実行しようとしました。 4）この操作の結果、Unicodeルールとロケールルールが混在し、競合する可能性があります。異なるルールタイプの混合は禁止されているため、操作は実行されませんでした。代わりに、結果は示された値になります。これは、完全にUnicodeルールを使用する利用可能な最良の値です。それはほとんどの場合、変更されていない元のキャラクターであることがわかります。</target>
        </trans-unit>
        <trans-unit id="9445c5833b7363d2fe4ae697fde2f870ddf47e7a" translate="yes" xml:space="preserve">
          <source>(W locale) You are matching a regular expression using locale rules, and a Unicode boundary is being matched, but the locale is not a Unicode one. This doesn't make sense. Perl will continue, assuming a Unicode (UTF-8) locale, but the results could well be wrong except if the locale happens to be ISO-8859-1 (Latin1) where this message is spurious and can be ignored.</source>
          <target state="translated">（Wロケール）ロケールルールを使用して正規表現を照合していますが、Unicode境界は一致していますが、ロケールはUnicode境界ではありません。これは意味がありません。PerlはUnicode（UTF-8）ロケールを想定して続行しますが、ロケールがたまたまこのメッセージが偽で無視できるISO-8859-1（Latin1）である場合を除いて、結果はかなり間違っている可能性があります。</target>
        </trans-unit>
        <trans-unit id="1d45f88f1111394c6cdc41698876e92fbac17d26" translate="yes" xml:space="preserve">
          <source>(W locale) You are matching a regular expression using locale rules, and the specified construct was encountered. This construct is only valid for UTF-8 locales, which the current locale isn't. This doesn't make sense. Perl will continue, assuming a Unicode (UTF-8) locale, but the results are likely to be wrong.</source>
          <target state="translated">（Wロケール）ロケールルールを使用して正規表現を照合していますが、指定された構成が検出されました。この構成は、現在のロケールでは有効ではないUTF-8ロケールでのみ有効です。これは意味がありません。 Unicode（UTF-8）ロケールを想定して、Perlは続行しますが、結果は間違っている可能性があります。</target>
        </trans-unit>
        <trans-unit id="cdc76003f2a88a493fa96a9a2786d3a712bf03ee" translate="yes" xml:space="preserve">
          <source>(W locale) You are using the named UTF-8 locale. UTF-8 locales are expected to have very particular behavior, which most do. This message arises when perl found some departures from the expectations, and is notifying you that the expected behavior overrides these differences. In some cases the differences are caused by the locale definition being defective, but the most common causes of this warning are when there are ambiguities and conflicts in following the Standard, and the locale has chosen an approach that differs from Perl's.</source>
          <target state="translated">（Wロケール）名前付きUTF-8ロケールを使用しています。 UTF-8ロケールは、非常に特殊な動作をすることが期待されていますが、ほとんどの場合そうです。このメッセージは、perlが期待からの逸脱を見つけたときに発生し、期待される動作がこれらの違いをオーバーライドすることを通知します。ロケール定義に欠陥があることが原因で違いが生じる場合もありますが、この警告の最も一般的な原因は、標準に従う際にあいまいさや競合があり、ロケールがPerlとは異なるアプローチを選択した場合です。</target>
        </trans-unit>
        <trans-unit id="02905fbf32b02f6a8ace973ce43a92893403bf4f" translate="yes" xml:space="preserve">
          <source>(W locale) You are using the named locale, which is a non-UTF-8 one, and which perl has determined is not fully compatible with what it can handle. The second &lt;code&gt;%s&lt;/code&gt; gives a reason.</source>
          <target state="translated">（Wロケール）名前付きロケールを使用していますが、これは非UTF-8ロケールであり、どのperlが処理できるものと完全に互換性がないと判断しました。2番目の &lt;code&gt;%s&lt;/code&gt; は理由を示しています。</target>
        </trans-unit>
        <trans-unit id="30b58e17c41b99f616cb1685d4bbaf844b02ef96" translate="yes" xml:space="preserve">
          <source>(W locale) You used a locale category that perl doesn't recognize, so it cannot carry out your request. Check that you are using a valid category. If so, see &lt;a href=&quot;perllocale#Multi-threaded&quot;&gt;&quot;Multi-threaded&quot; in perllocale&lt;/a&gt; for advice on reporting this as a bug, and for modifying perl locally to accommodate your needs.</source>
          <target state="translated">（Wロケール）perlが認識しないロケールカテゴリを使用したため、リクエストを実行できません。有効なカテゴリを使用していることを確認してください。その場合は、これをバグとして報告するためのアドバイス、およびニーズに合わせてローカルでperlを変更するためのアドバイスについて&lt;a href=&quot;perllocale#Multi-threaded&quot;&gt;は、perllocaleの「マルチスレッド」を参照&lt;/a&gt;してください。</target>
        </trans-unit>
        <trans-unit id="03a33e2bd2daeb7394c123da8d1823f81a6f6a4f" translate="yes" xml:space="preserve">
          <source>(W misc) A &quot;my&quot; or &quot;state&quot; subroutine has been redeclared in the current scope or statement, effectively eliminating all access to the previous instance. This is almost always a typographical error. Note that the earlier subroutine will still exist until the end of the scope or until all closure references to it are destroyed.</source>
          <target state="translated">（W misc）「my」または「state」サブルーチンが現在のスコープまたはステートメントで再宣言され、前のインスタンスへのすべてのアクセスを効果的に排除しました。ほとんどの場合、これは誤植です。以前のサブルーチンは、スコープの終わりまで、またはスコープへのすべてのクロージャ参照が破棄されるまで存在し続けることに注意してください。</target>
        </trans-unit>
        <trans-unit id="bbd888a8b12a9c45d7e56a1c333e4c20223eff1c" translate="yes" xml:space="preserve">
          <source>(W misc) A &quot;my&quot;, &quot;our&quot; or &quot;state&quot; variable has been redeclared in the current scope or statement, effectively eliminating all access to the previous instance. This is almost always a typographical error. Note that the earlier variable will still exist until the end of the scope or until all closure references to it are destroyed.</source>
          <target state="translated">（W misc）「my」、「our」、または「state」変数が現在のスコープまたはステートメントで再宣言され、前のインスタンスへのすべてのアクセスを効果的に排除しました。ほとんどの場合、これは誤植です。以前の変数は、スコープの終わりまで、またはスコープへのすべてのクロージャー参照が破棄されるまで存在し続けることに注意してください。</target>
        </trans-unit>
        <trans-unit id="0a437454e4e59c0c63ef790ff1715aba9f133c24" translate="yes" xml:space="preserve">
          <source>(W misc) A number has been passed as a bitmask argument to select(). Use the vec() function to construct the file descriptor bitmasks for select. See &lt;a href=&quot;functions/select&quot;&gt;select&lt;/a&gt;.</source>
          <target state="translated">（W misc）数値がビットマスク引数としてselect（）に渡されました。vec（）関数を使用して、選択用のファイル記述子ビットマスクを作成します。&lt;a href=&quot;functions/select&quot;&gt;selectを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="e58920f3c5056b2595ba9d4876478185d68fb2a7" translate="yes" xml:space="preserve">
          <source>(W misc) A number has been passed as a bitmask argument to select(). Use the vec() function to construct the file descriptor bitmasks for select. See &lt;a href=&quot;perlfunc#select&quot;&gt;&quot;select&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="translated">（W misc）select（）にビットマスク引数として数値が渡されました。vec（）関数を使用して、select用のファイル記述子ビットマスクを作成します。&lt;a href=&quot;perlfunc#select&quot;&gt;perlfuncの「select」を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="0c94ce8244014ff24661c0ca75a55652169dcad2" translate="yes" xml:space="preserve">
          <source>(W misc) A sub was declared as sub foo : prototype(A) : prototype(B) {}, for example. Since each sub can only have one prototype, the earlier declaration(s) are discarded while the last one is applied.</source>
          <target state="translated">（W misc）subは、たとえば、サブfoo：prototype（A）：prototype（B）{}として宣言されました。各サブルーチンは1つのプロトタイプしか持つことができないため、最後の宣言が適用される間、以前の宣言は破棄されます。</target>
        </trans-unit>
        <trans-unit id="217c15d1789f3525b24856092f3f9184fdbf896a" translate="yes" xml:space="preserve">
          <source>(W misc) A warning peculiar to VMS. Perl tried to read the value of an %ENV element from a CLI symbol table, and found a resultant string longer than 1024 characters. The return value has been truncated to 1024 characters.</source>
          <target state="translated">（W misc）VMSに特有の警告。Perlは、CLIシンボルテーブルから％ENV要素の値を読み取ろうとしましたが、1024文字を超える結果の文字列を見つけました。戻り値は1024文字に切り捨てられました。</target>
        </trans-unit>
        <trans-unit id="dd11fcb880f23ae872f44fc2e5336ede26ae40f1" translate="yes" xml:space="preserve">
          <source>(W misc) Although &lt;a href=&quot;attributes&quot;&gt;attributes.pm&lt;/a&gt; allows this, turning the lvalue attribute on or off on a Perl subroutine that is already defined does not always work properly. It may or may not do what you want, depending on what code is inside the subroutine, with exact details subject to change between Perl versions. Only do this if you really know what you are doing.</source>
          <target state="translated">（W misc）&lt;a href=&quot;attributes&quot;&gt;attributes.pm&lt;/a&gt;はこれを許可しますが、すでに定義されているPerlサブルーチンでlvalue属性をオンまたはオフにすると、常に正しく機能するとは限りません。サブルーチン内のコードによっては、Perlのバージョン間で正確な詳細が変わる可能性があるため、必要な処理が行われる場合と行われない場合があります。これを行うのは、自分が何をしているかを本当に理解している場合だけです。</target>
        </trans-unit>
        <trans-unit id="0776898ec0630aa335d5aaa8eb564217544bbcdc" translate="yes" xml:space="preserve">
          <source>(W misc) An undefined value was assigned to a typeglob, a la &lt;code&gt;*foo = &lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; . This does nothing. It's possible that you really mean &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt; *foo&lt;/code&gt; .</source>
          <target state="translated">（W misc）未定義の値が型グロブ、la &lt;code&gt;*foo = &lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; に割り当てられました。これは何もしません。あなたが本当に &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt; *foo&lt;/code&gt; 意味している可能性があります。</target>
        </trans-unit>
        <trans-unit id="c865e69bc7cd2b4f8456acb18190cdbe8327bc8f" translate="yes" xml:space="preserve">
          <source>(W misc) An undefined value was assigned to a typeglob, a la &lt;code&gt;*foo = undef&lt;/code&gt;. This does nothing. It's possible that you really mean &lt;code&gt;undef *foo&lt;/code&gt;.</source>
          <target state="translated">（W misc）未定義の値がtypeglobに割り当てられました。ala &lt;code&gt;*foo = undef&lt;/code&gt; 。これは何もしません。あなたが本当に &lt;code&gt;undef *foo&lt;/code&gt; 意味している可能性があります。</target>
        </trans-unit>
        <trans-unit id="12437cd31e238da3b2ced4a2306fbe6e5acf5a48" translate="yes" xml:space="preserve">
          <source>(W misc) In a conditional expression, you used &amp;lt;HANDLE&amp;gt;, &amp;lt;*&amp;gt; (glob), &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each()&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir()&lt;/a&gt;&lt;/code&gt; as a boolean value. Each of these constructs can return a value of &quot;0&quot;; that would make the conditional expression false, which is probably not what you intended. When using these constructs in conditional expressions, test their values with the &lt;code&gt;&lt;a href=&quot;functions/defined&quot;&gt;defined&lt;/a&gt;&lt;/code&gt; operator.</source>
          <target state="translated">（W misc）条件式で、&amp;lt;HANDLE&amp;gt;、&amp;lt;*&amp;gt;（glob）、 &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each()&lt;/a&gt;&lt;/code&gt; 、または &lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir()&lt;/a&gt;&lt;/code&gt; をブール値として使用しました。これらの構成要素はそれぞれ「0」の値を返すことができます。これは条件式をfalseにしますが、これはおそらく意図したものではありません。条件式でこれらの構成体を使用する場合は、 &lt;code&gt;&lt;a href=&quot;functions/defined&quot;&gt;defined&lt;/a&gt;&lt;/code&gt; 演算子を使用してそれらの値をテストしてください。</target>
        </trans-unit>
        <trans-unit id="501afb12981044c06cd7ef7909c762ec288cea69" translate="yes" xml:space="preserve">
          <source>(W misc) In a conditional expression, you used &amp;lt;HANDLE&amp;gt;, &amp;lt;*&amp;gt; (glob), &lt;code&gt;each()&lt;/code&gt;, or &lt;code&gt;readdir()&lt;/code&gt; as a boolean value. Each of these constructs can return a value of &quot;0&quot;; that would make the conditional expression false, which is probably not what you intended. When using these constructs in conditional expressions, test their values with the &lt;code&gt;defined&lt;/code&gt; operator.</source>
          <target state="translated">（W misc）条件式で、ブール値として&amp;lt;HANDLE&amp;gt;、&amp;lt;*&amp;gt;（glob）、 &lt;code&gt;each()&lt;/code&gt; 、または &lt;code&gt;readdir()&lt;/code&gt; を使用しました。これらの各構成は、「0」の値を返すことができます。これにより、条件式がfalseになりますが、これはおそらく意図したものではありません。これらの構成を条件式で使用する場合は、 &lt;code&gt;defined&lt;/code&gt; 演算子を使用してそれらの値をテストしてください。</target>
        </trans-unit>
        <trans-unit id="20059d974af22a8333d150a247e06378d470385d" translate="yes" xml:space="preserve">
          <source>(W misc) Remember that &quot;our&quot; does not localize the declared global variable. You have declared it again in the same lexical scope, which seems superfluous.</source>
          <target state="translated">（W misc） &quot;our&quot;は宣言されたグローバル変数をローカライズしないことに注意してください。あなたはそれを同じ字句スコープで再度宣言しましたが、これは不必要なようです。</target>
        </trans-unit>
        <trans-unit id="5844b97950c2a1072e2ddb5f148dc77415c11973" translate="yes" xml:space="preserve">
          <source>(W misc) The &quot;const&quot; attribute has no effect except on anonymous closure prototypes. You applied it to a subroutine via &lt;a href=&quot;attributes&quot;&gt;attributes.pm&lt;/a&gt;. This is only useful inside an attribute handler for an anonymous subroutine.</source>
          <target state="translated">（W misc） &quot;const&quot;属性は、匿名のクロージャプロトタイプ以外では効果がありません。それを&lt;a href=&quot;attributes&quot;&gt;attributes.pm&lt;/a&gt;を介してサブルーチンに適用しました。これは、無名サブルーチンの属性ハンドラー内でのみ役立ちます。</target>
        </trans-unit>
        <trans-unit id="e5321cecc859e99ecb159dbfe2a76823e102eaf8" translate="yes" xml:space="preserve">
          <source>(W misc) The &lt;code&gt;const&lt;/code&gt; attribute has no effect except on anonymous closure prototypes. You applied it to a subroutine via &lt;a href=&quot;attributes&quot;&gt;attributes.pm&lt;/a&gt;. This is only useful inside an attribute handler for an anonymous subroutine.</source>
          <target state="translated">（W misc） &lt;code&gt;const&lt;/code&gt; 属性は、匿名クロージャのプロトタイプを除いて効果がありません。これを&lt;a href=&quot;attributes&quot;&gt;attributes.pm&lt;/a&gt;を介してサブルーチンに適用しました。これは、匿名サブルーチンの属性ハンドラー内でのみ役立ちます。</target>
        </trans-unit>
        <trans-unit id="83ab71cdca9ba1d83ceb17577950410c9f6f3fff" translate="yes" xml:space="preserve">
          <source>(W misc) The pattern match (&lt;code&gt;//&lt;/code&gt; ), substitution (&lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt;), and transliteration (&lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt;) operators work on scalar values. If you apply one of them to an array or a hash, it will convert the array or hash to a scalar value (the length of an array, or the population info of a hash) and then work on that scalar value. This is probably not what you meant to do. See &lt;a href=&quot;functions/grep&quot;&gt;grep&lt;/a&gt; and &lt;a href=&quot;functions/map&quot;&gt;map&lt;/a&gt; for alternatives.</source>
          <target state="translated">（W misc）パターンマッチ（ &lt;code&gt;//&lt;/code&gt; ）、置換（ &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; ）、および音訳（ &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt; ）演算子は、スカラー値に対して機能します。それらの1つを配列またはハッシュに適用すると、配列またはハッシュがスカラー値（配列の長さ、またはハッシュのポピュレーション情報）に変換され、そのスカラー値を処理します。これはおそらく、意図したことではありません。代替案については、&lt;a href=&quot;functions/grep&quot;&gt;grep&lt;/a&gt;と&lt;a href=&quot;functions/map&quot;&gt;map&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="ea8277f6fd9deda90e934a7b57d44f7e17900b36" translate="yes" xml:space="preserve">
          <source>(W misc) The pattern match (&lt;code&gt;//&lt;/code&gt;), substitution (&lt;code&gt;s///&lt;/code&gt;), and transliteration (&lt;code&gt;tr///&lt;/code&gt;) operators work on scalar values. If you apply one of them to an array or a hash, it will convert the array or hash to a scalar value (the length of an array, or the population info of a hash) and then work on that scalar value. This is probably not what you meant to do. See &lt;a href=&quot;perlfunc#grep&quot;&gt;&quot;grep&quot; in perlfunc&lt;/a&gt; and &lt;a href=&quot;perlfunc#map&quot;&gt;&quot;map&quot; in perlfunc&lt;/a&gt; for alternatives.</source>
          <target state="translated">（W misc）パターン一致（ &lt;code&gt;//&lt;/code&gt; ）、置換（ &lt;code&gt;s///&lt;/code&gt; ）、および音訳（ &lt;code&gt;tr///&lt;/code&gt; ）演算子はスカラー値で機能します。それらの1つを配列またはハッシュに適用すると、配列またはハッシュがスカラー値（配列の長さ、またはハッシュの母集団情報）に変換され、そのスカラー値が処理されます。これはおそらくあなたが意図したことではありません。参照してください&lt;a href=&quot;perlfunc#grep&quot;&gt;perlfuncの中に「グレップ」&lt;/a&gt;と&lt;a href=&quot;perlfunc#map&quot;&gt;perlfuncの中に、「マップ」&lt;/a&gt;の選択肢のために。</target>
        </trans-unit>
        <trans-unit id="a6cb938b0a50f702bbe4e1a83af4f783e4f29b59" translate="yes" xml:space="preserve">
          <source>(W misc) The version string contains invalid characters at the end, which are being ignored.</source>
          <target state="translated">（W misc）バージョン文字列の最後に無効な文字が含まれていますが、無視されます。</target>
        </trans-unit>
        <trans-unit id="1ac1e31d222cc4c0e5cec20c46a1416397109637" translate="yes" xml:space="preserve">
          <source>(W misc) This prefix usually indicates that a DESTROY() method raised the indicated exception. Since destructors are usually called by the system at arbitrary points during execution, and often a vast number of times, the warning is issued only once for any number of failures that would otherwise result in the same message being repeated.</source>
          <target state="translated">（W misc）この接頭辞は、通常、DESTROY（）メソッドが示された例外を発生させたことを示します。デストラクタは通常、実行中の任意の時点で、多くの場合非常に多くの回数呼び出されるため、同じメッセージが繰り返される原因となる障害が発生した場合、警告は1回だけ発行されます。</target>
        </trans-unit>
        <trans-unit id="5c525d33b2f6cbb2cbaccf27a61558723ac97f2a" translate="yes" xml:space="preserve">
          <source>(W misc) Using the &lt;code&gt;:lvalue&lt;/code&gt; declarative syntax to make a Perl subroutine an lvalue subroutine after it has been defined is not permitted. To make the subroutine an lvalue subroutine, add the lvalue attribute to the definition, or put the &lt;code&gt;&lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt;
foo :lvalue;&lt;/code&gt; declaration before the definition.</source>
          <target state="translated">（W misc） &lt;code&gt;:lvalue&lt;/code&gt; 宣言構文を使用して、Perlサブルーチンを定義後にlvalueサブルーチンにすることはできません。サブルーチンをlvalueサブルーチンにするには、定義にlvalue属性を追加するか、 &lt;code&gt;&lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt; foo :lvalue;&lt;/code&gt; 定義の前の宣言。</target>
        </trans-unit>
        <trans-unit id="978dd57f7188385e009beba975ac2a15bd2cdb90" translate="yes" xml:space="preserve">
          <source>(W misc) Using the &lt;code&gt;:lvalue&lt;/code&gt; declarative syntax to make a Perl subroutine an lvalue subroutine after it has been defined is not permitted. To make the subroutine an lvalue subroutine, add the lvalue attribute to the definition, or put the &lt;code&gt;sub foo :lvalue;&lt;/code&gt; declaration before the definition.</source>
          <target state="translated">（W misc） &lt;code&gt;:lvalue&lt;/code&gt; 宣言型構文を使用して、定義後にPerlサブルーチンを左辺値サブルーチンにすることは許可されていません。サブルーチンを左辺値サブルーチンにするには、左辺値属性を定義に追加するか、 &lt;code&gt;sub foo :lvalue;&lt;/code&gt; 定義の前の宣言。</target>
        </trans-unit>
        <trans-unit id="d7bb17126e54088f85c3c0ce7c1c0e874c4e1d14" translate="yes" xml:space="preserve">
          <source>(W misc) You are blessing a reference to a zero length string. This has the effect of blessing the reference into the package main. This is usually not what you want. Consider providing a default target package, e.g. bless($ref, $p || 'MyPackage');</source>
          <target state="translated">（W misc）長さ0の文字列への参照を祝福しています。これは、パッケージmainへの参照を祝福する効果があります。これは通常、あなたが望むものではありません。bless（$ ref、$ p || 'MyPackage'）;などのデフォルトのターゲットパッケージを提供することを検討してください。</target>
        </trans-unit>
        <trans-unit id="ed823eb758d423a401df73e799d2788b33feee1c" translate="yes" xml:space="preserve">
          <source>(W misc) You assigned to an lvalue subroutine, but what the subroutine returned was a temporary scalar about to be discarded, so the assignment had no effect.</source>
          <target state="translated">（W misc）左辺値サブルーチンに割り当てましたが、サブルーチンが返したものは破棄されようとしている一時的なスカラーなので、割り当ては効果がありませんでした。</target>
        </trans-unit>
        <trans-unit id="9b9202be79ef7c790da62232dde7b953dc21d5a6" translate="yes" xml:space="preserve">
          <source>(W misc) You attempted to specify an offset that was past the end of the array passed to splice(). Splicing will instead commence at the end of the array, rather than past it. If this isn't what you want, try explicitly pre-extending the array by assigning $#array = $offset. See &lt;a href=&quot;functions/splice&quot;&gt;splice&lt;/a&gt;.</source>
          <target state="translated">（W misc）splice（）に渡された配列の終わりを超えたオフセットを指定しようとしました。代わりに、スプライシングは配列の最後ではなく、配列の最後から始まります。これが目的に合わない場合は、$＃array = $ offsetを割り当てて、配列を明示的に事前拡張してみてください。&lt;a href=&quot;functions/splice&quot;&gt;スプライスを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="6761f66b94b97d5a3830b77a974fe74b5a626781" translate="yes" xml:space="preserve">
          <source>(W misc) You attempted to specify an offset that was past the end of the array passed to splice(). Splicing will instead commence at the end of the array, rather than past it. If this isn't what you want, try explicitly pre-extending the array by assigning $#array = $offset. See &lt;a href=&quot;perlfunc#splice&quot;&gt;&quot;splice&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="translated">（W misc）splice（）に渡された配列の終わりを超えたオフセットを指定しようとしました。代わりに、スプライシングはアレイを通過するのではなく、アレイの最後から開始されます。これが希望どおりでない場合は、$＃array = $ offsetを割り当てて、配列を明示的に事前拡張してみてください。&lt;a href=&quot;perlfunc#splice&quot;&gt;perlfuncの「スプライス」を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="e97344ac072c36fa30be5354dedbaf9a30a0a229" translate="yes" xml:space="preserve">
          <source>(W misc) You gave a single reference where Perl was expecting a list with an even number of elements (for assignment to a hash). This usually means that you used the anon hash constructor when you meant to use parens. In any case, a hash requires key/value &lt;b&gt;pairs&lt;/b&gt;.</source>
          <target state="translated">（W misc）Perlが（ハッシュへの割り当てのために）偶数の要素を持つリストを期待していた単一の参照を与えました。これは通常、括弧を使用するつもりだったときにanonハッシュコンストラクタを使用したことを意味します。いずれの場合も、ハッシュにはキーと値の&lt;b&gt;ペア&lt;/b&gt;が必要です。</target>
        </trans-unit>
        <trans-unit id="15abd042a39d9926d65656cbbe08be25424747c8" translate="yes" xml:space="preserve">
          <source>(W misc) You have a \E in a double-quotish string without a &lt;code&gt;\U&lt;/code&gt; , &lt;code&gt;\L&lt;/code&gt; or &lt;code&gt;\Q&lt;/code&gt; preceding it.</source>
          <target state="translated">（W misc）二重引用符の文字列に\ Eがあり、その前に &lt;code&gt;\U&lt;/code&gt; 、 &lt;code&gt;\L&lt;/code&gt; または &lt;code&gt;\Q&lt;/code&gt; ない。</target>
        </trans-unit>
        <trans-unit id="f5379ec83465aa4ba2da68c968c659bdcd28d6bb" translate="yes" xml:space="preserve">
          <source>(W misc) You have a \E in a double-quotish string without a &lt;code&gt;\U&lt;/code&gt;, &lt;code&gt;\L&lt;/code&gt; or &lt;code&gt;\Q&lt;/code&gt; preceding it.</source>
          <target state="translated">（Wその他）二重引用符で囲まれた文字列に\ Eがあり、その前に &lt;code&gt;\U&lt;/code&gt; 、 &lt;code&gt;\L&lt;/code&gt; または &lt;code&gt;\Q&lt;/code&gt; ません。</target>
        </trans-unit>
        <trans-unit id="a467f8075d38661a8a595bf55aef2227df75349f" translate="yes" xml:space="preserve">
          <source>(W misc) You have attempted to unweaken a reference that is not weak. Doing so has no effect.</source>
          <target state="translated">（W misc）あなたは弱くない参照を弱めようとしました。これを行っても効果はありません。</target>
        </trans-unit>
        <trans-unit id="1c0eea9ec7a19fa6b579515762f1950808cc9b1d" translate="yes" xml:space="preserve">
          <source>(W misc) You have attempted to weaken a reference that is already weak. Doing so has no effect.</source>
          <target state="translated">（W misc）すでに弱い参照を弱めようとしました。これを行っても効果はありません。</target>
        </trans-unit>
        <trans-unit id="f563a1cd3b0e654993413a90e34bfc8ab4511a9c" translate="yes" xml:space="preserve">
          <source>(W misc) You have used a replacement list that is longer than the search list. So the additional elements in the replacement list are meaningless.</source>
          <target state="translated">（W misc）検索リストより長い置換リストを使用しました。したがって、置換リストの追加要素は無意味です。</target>
        </trans-unit>
        <trans-unit id="055eeb5e67fd76f17bce2fa389beccc4d1c206eb" translate="yes" xml:space="preserve">
          <source>(W misc) You have used the /d modifier where the searchlist has the same length as the replacelist. See &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt; for more information about the /d modifier.</source>
          <target state="translated">（W misc）searchlistがreplacelistと同じ長さである/ d修飾子を使用しました。/ d修飾子の詳細については、&lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="1c43982d36144a2ffd4995fa369c53951ebca965" translate="yes" xml:space="preserve">
          <source>(W misc) You probably referred to an imported subroutine &amp;amp;FOO as $FOO or some such.</source>
          <target state="translated">（W misc）おそらくインポートされたサブルーチン＆FOOを$ FOOまたはそのようなものとして参照しました。</target>
        </trans-unit>
        <trans-unit id="f28afcc36fb6d498d08aa34ce83936dd22526785" translate="yes" xml:space="preserve">
          <source>(W misc) You seem to have already declared the same global once before in the current lexical scope.</source>
          <target state="translated">（W misc）現在のレキシカルスコープで以前に同じグローバルをすでに宣言しているようです。</target>
        </trans-unit>
        <trans-unit id="5868eba0d9d25b18fa7c2e6fe83826d858642827" translate="yes" xml:space="preserve">
          <source>(W misc) You specified an odd number of elements to initialize a hash, which is odd, because hashes come in key/value pairs.</source>
          <target state="translated">（W misc）ハッシュを初期化するために奇数の要素を指定しましたが、これは奇妙です。ハッシュはキーと値のペアになっているためです。</target>
        </trans-unit>
        <trans-unit id="324ba9d70516662c8b6bfbd8be1d30db767f254c" translate="yes" xml:space="preserve">
          <source>(W misc) You tried to set the length of an array which has been freed. You can do this by storing a reference to the scalar representing the last index of an array and later assigning through that reference. For example</source>
          <target state="translated">（W misc）解放された配列の長さを設定しようとしました。これを行うには、配列の最後のインデックスを表すスカラーへの参照を格納し、後でその参照を介して割り当てます。例えば</target>
        </trans-unit>
        <trans-unit id="10e6703969c96e985c2f8be5cfdd7a5050eb6807" translate="yes" xml:space="preserve">
          <source>(W misc) You tried to use a reference as an array index; this probably isn't what you mean, because references in numerical context tend to be huge numbers, and so usually indicates programmer error.</source>
          <target state="translated">（W misc）参照を配列インデックスとして使用しようとしました。数値の文脈での参照は膨大な数になりがちであり、通常はプログラマーのエラーを示しているため、これはおそらくあなたの言っていることではありません。</target>
        </trans-unit>
        <trans-unit id="f739dd0df71ad92bcb1d57bfeb314866eb972173" translate="yes" xml:space="preserve">
          <source>(W misc) You undefined a subroutine which had previously been eligible for inlining. See &lt;a href=&quot;perlsub#Constant-Functions&quot;&gt;&quot;Constant Functions&quot; in perlsub&lt;/a&gt; for commentary and workarounds.</source>
          <target state="translated">（W misc）以前にインライン化に適格であったサブルーチンを未定義にしました。解説と回避策について&lt;a href=&quot;perlsub#Constant-Functions&quot;&gt;は、perlsubの「定数関数」を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="961c127b9cc0ad4bd43847fe65d18cac036115ef" translate="yes" xml:space="preserve">
          <source>(W misc) You undefined a subroutine which had previously been eligible for inlining. See &lt;a href=&quot;perlsub#Constant-Functions&quot;&gt;Constant Functions in perlsub&lt;/a&gt; for commentary and workarounds.</source>
          <target state="translated">（W misc）以前にインライン化に適格であったサブルーチンを未定義にしました。コメントと回避策について&lt;a href=&quot;perlsub#Constant-Functions&quot;&gt;は、perlsubの定数関数を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="dfe717cbd021e5996741b199692d40604f2ddd47" translate="yes" xml:space="preserve">
          <source>(W misc) You used a backslash-character combination which is not recognized by Perl. The character was understood literally, but this may change in a future version of Perl.</source>
          <target state="translated">（W misc）Perlで認識されないバックスラッシュ文字の組み合わせを使用しました。文字は文字通り理解されましたが、Perlの将来のバージョンでは変更される可能性があります。</target>
        </trans-unit>
        <trans-unit id="2e717da40f4bea7168a3f5280e24fbfb5da1b933" translate="yes" xml:space="preserve">
          <source>(W misc) You used the obsolescent &lt;code&gt;&lt;a href=&quot;functions/dump&quot;&gt;dump()&lt;/a&gt;&lt;/code&gt; built-in function, without fully qualifying it as &lt;code&gt;CORE::dump()&lt;/code&gt; . Maybe it's a typo. See &lt;a href=&quot;functions/dump&quot;&gt;dump&lt;/a&gt;.</source>
          <target state="translated">（W misc） &lt;code&gt;CORE::dump()&lt;/code&gt; として完全に修飾せずに、廃止された &lt;code&gt;&lt;a href=&quot;functions/dump&quot;&gt;dump()&lt;/a&gt;&lt;/code&gt; 組み込み関数を使用しました。たぶんそれはタイプミスです。&lt;a href=&quot;functions/dump&quot;&gt;dumpを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="c0cd06fc5e07405e0a5250c8e4b98b249ba297bf" translate="yes" xml:space="preserve">
          <source>(W misc, regexp) You wrote something like &lt;code&gt;\08&lt;/code&gt; , or &lt;code&gt;\179&lt;/code&gt; in a double-quotish string. All but the last digit is treated as a single character, specified in octal. The last digit is the next character in the string. To tell Perl that this is indeed what you want, you can use the &lt;code&gt;\o{ }&lt;/code&gt; syntax, or use exactly three digits to specify the octal for the character.</source>
          <target state="translated">（W misc、regexp） &lt;code&gt;\08&lt;/code&gt; や &lt;code&gt;\179&lt;/code&gt; ようなものを二重引用符で書いた。最後の数字を除くすべては、8進数で指定された単一の文字として扱われます。最後の数字は文字列の次の文字です。これが本当に望んでいることをPerlに伝えるには、 &lt;code&gt;\o{ }&lt;/code&gt; 構文を使用するか、正確に3桁を使用して文字の8進数を指定します。</target>
        </trans-unit>
        <trans-unit id="d87808370647207cb23c26a494895bd593e19c4c" translate="yes" xml:space="preserve">
          <source>(W missing) You called a function with fewer arguments than other arguments you supplied indicated would be needed.</source>
          <target state="translated">（W行方不明）指定した他の引数よりも少ない引数で関数を呼び出しました。</target>
        </trans-unit>
        <trans-unit id="6e8560a7cea10e56b2966a8252b5c47858339b3b" translate="yes" xml:space="preserve">
          <source>(W newline) A file operation was attempted on a filename, and that operation failed, PROBABLY because the filename contained a newline, PROBABLY because you forgot to chomp() it off. See &lt;a href=&quot;functions/chomp&quot;&gt;chomp&lt;/a&gt;.</source>
          <target state="translated">（W改行）ファイル名に対してファイル操作が試行され、その操作は失敗しました。ファイル名に改行が含まれているため、PROBABLYです。&lt;a href=&quot;functions/chomp&quot;&gt;chompを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="4e6f89715e8d89529ba2c8290b7087cd495b476d" translate="yes" xml:space="preserve">
          <source>(W newline) A file operation was attempted on a filename, and that operation failed, PROBABLY because the filename contained a newline, PROBABLY because you forgot to chomp() it off. See &lt;a href=&quot;perlfunc#chomp&quot;&gt;&quot;chomp&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="translated">（W newline）ファイル名に対してファイル操作が試行されましたが、その操作は失敗しました。ファイル名に改行が含まれているため、PROBABLY、chomp（）を忘れたため、PROBABLYです。&lt;a href=&quot;perlfunc#chomp&quot;&gt;perlfuncの「chomp」を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="a309644b8190402a53564c85b006750e39463cd7" translate="yes" xml:space="preserve">
          <source>(W numeric) An alpha version can not be numified without losing information.</source>
          <target state="translated">（W数値）アルファバージョンは、情報を失うことなく数値化することはできません。</target>
        </trans-unit>
        <trans-unit id="ecad68c5be5ba7eb54444965792ee7f2c653a4e2" translate="yes" xml:space="preserve">
          <source>(W numeric) The indicated string was fed as an argument to an operator that expected a numeric value instead. If you're fortunate the message will identify which operator was so unfortunate.</source>
          <target state="translated">（W数値）示された文字列は、代わりに数値を期待する演算子への引数として供給されました。運がよければ、メッセージはどのオペレーターが不運だったかを示します。</target>
        </trans-unit>
        <trans-unit id="ffa9508e53b0c92e963d1b02acbefd8a4acfe9fd" translate="yes" xml:space="preserve">
          <source>(W numeric) The indicated string was fed as an argument to the &lt;code&gt;++&lt;/code&gt; operator which expects either a number or a string matching &lt;code&gt;/^[a-zA-Z]*[0-9]*\z/&lt;/code&gt; . See &lt;a href=&quot;perlop#Auto-increment-and-Auto-decrement&quot;&gt;Auto-increment and Auto-decrement in perlop&lt;/a&gt; for details.</source>
          <target state="translated">（W数値）指定された文字列は、数値または &lt;code&gt;/^[a-zA-Z]*[0-9]*\z/&lt;/code&gt; 一致する文字列を期待する &lt;code&gt;++&lt;/code&gt; 演算子への引数として渡されました。詳細&lt;a href=&quot;perlop#Auto-increment-and-Auto-decrement&quot;&gt;は、perlopの自動インクリメントと自動デクリメント&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="586f7b4b33f7a7eb73f47c3aa95d9b299b4dc778" translate="yes" xml:space="preserve">
          <source>(W numeric) The indicated string was fed as an argument to the &lt;code&gt;++&lt;/code&gt; operator which expects either a number or a string matching &lt;code&gt;/^[a-zA-Z]*[0-9]*\z/&lt;/code&gt;. See &lt;a href=&quot;perlop#Auto-increment-and-Auto-decrement&quot;&gt;&quot;Auto-increment and Auto-decrement&quot; in perlop&lt;/a&gt; for details.</source>
          <target state="translated">（W数値）示された文字列は、数値または &lt;code&gt;/^[a-zA-Z]*[0-9]*\z/&lt;/code&gt; 一致する文字列のいずれかを予期する &lt;code&gt;++&lt;/code&gt; 演算子への引数として供給されました。詳細については&lt;a href=&quot;perlop#Auto-increment-and-Auto-decrement&quot;&gt;、perlopの「自動インクリメントと自動デクリメント」&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="c37f9be9cf8f0cf03e306716c8c88d4b4aa40c39" translate="yes" xml:space="preserve">
          <source>(W numeric) You tried to execute the &lt;a href=&quot;perlop#Multiplicative-Operators&quot;&gt;&lt;code&gt;x&lt;/code&gt;&lt;/a&gt; repetition operator &lt;code&gt;Inf&lt;/code&gt; (or &lt;code&gt;-Inf&lt;/code&gt;) or &lt;code&gt;NaN&lt;/code&gt; times, which doesn't make sense.</source>
          <target state="translated">（W数値）&lt;a href=&quot;perlop#Multiplicative-Operators&quot;&gt; &lt;code&gt;x&lt;/code&gt; &lt;/a&gt;繰り返し演算子 &lt;code&gt;Inf&lt;/code&gt; （または &lt;code&gt;-Inf&lt;/code&gt; ）または &lt;code&gt;NaN&lt;/code&gt; 回を実行しようとしましたが、意味がありません。</target>
        </trans-unit>
        <trans-unit id="1e307f1452017df6d8d52d1e75849cb6202b8562" translate="yes" xml:space="preserve">
          <source>(W numeric) You tried to execute the &lt;a href=&quot;perlop#Multiplicative-Operators&quot;&gt;&lt;code&gt;x&lt;/code&gt;&lt;/a&gt; repetition operator fewer than 0 times, which doesn't make sense.</source>
          <target state="translated">（W数値）&lt;a href=&quot;perlop#Multiplicative-Operators&quot;&gt; &lt;code&gt;x&lt;/code&gt; &lt;/a&gt;繰り返し演算子を0回未満実行しようとしましたが、意味がありません。</target>
        </trans-unit>
        <trans-unit id="e747973f9086868d39efd9610fcbe587d13511fb" translate="yes" xml:space="preserve">
          <source>(W numeric) You tried to execute the &lt;a href=&quot;perlop#Multiplicative-Operators&quot;&gt;x &lt;/a&gt; repetition operator &lt;code&gt;Inf&lt;/code&gt; (or &lt;code&gt;-Inf&lt;/code&gt; ) or &lt;code&gt;NaN&lt;/code&gt; times, which doesn't make sense.</source>
          <target state="translated">（W数値）&lt;a href=&quot;perlop#Multiplicative-Operators&quot;&gt;x&lt;/a&gt;反復演算子 &lt;code&gt;Inf&lt;/code&gt; （または &lt;code&gt;-Inf&lt;/code&gt; ）または &lt;code&gt;NaN&lt;/code&gt; 回実行しようとしましたが、意味がありません。</target>
        </trans-unit>
        <trans-unit id="df9ed2c03344d23e71c3f63e7cd7233301c17e01" translate="yes" xml:space="preserve">
          <source>(W numeric) You tried to execute the &lt;a href=&quot;perlop#Multiplicative-Operators&quot;&gt;x &lt;/a&gt; repetition operator fewer than 0 times, which doesn't make sense.</source>
          <target state="translated">（W数値）&lt;a href=&quot;perlop#Multiplicative-Operators&quot;&gt;x&lt;/a&gt;反復演算子を0回未満実行しようとしましたが、これは意味がありません。</target>
        </trans-unit>
        <trans-unit id="979df2325920e52daaa8be14ea206eccde22447a" translate="yes" xml:space="preserve">
          <source>(W once) Typographical errors often show up as unique variable names. If you had a good reason for having a unique name, then just mention it again somehow to suppress the message. The &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; declaration is also provided for this purpose.</source>
          <target state="translated">（W once）誤植エラーは、一意の変数名として表示されることがよくあります。一意の名前を付ける正当な理由がある場合は、メッセージを非表示にするために、なんらかの方法で再度言及してください。 &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; 宣言はまた、この目的のために提供されます。</target>
        </trans-unit>
        <trans-unit id="bb3ee992bffd8d0683e29ae27825063b750b7263" translate="yes" xml:space="preserve">
          <source>(W once) Typographical errors often show up as unique variable names. If you had a good reason for having a unique name, then just mention it again somehow to suppress the message. The &lt;code&gt;our&lt;/code&gt; declaration is also provided for this purpose.</source>
          <target state="translated">（W一度）誤植はしばしば一意の変数名として表示されます。一意の名前を付ける正当な理由がある場合は、メッセージを抑制するために、なんらかの方法でもう一度言及してください。 &lt;code&gt;our&lt;/code&gt; 宣言はまた、この目的のために提供されます。</target>
        </trans-unit>
        <trans-unit id="293cfd81dde512b2040983819ce42833b00e006e" translate="yes" xml:space="preserve">
          <source>(W overflow) Some portion of a version initialization is too large for the size of integers for your architecture. This is not a warning because there is no rational reason for a version to try and use an element larger than typically 2**32. This is usually caused by trying to use some odd mathematical operation as a version, like 100/9.</source>
          <target state="translated">（Wオーバーフロー）バージョン初期化の一部が、ご使用のアーキテクチャーの整数のサイズに対して大きすぎます。バージョンが通常2 ** 32より大きい要素を使用しようとする合理的な理由がないため、これは警告ではありません。これは通常、バージョンとして100/9のような奇妙な数学演算を使用しようとしたことが原因です。</target>
        </trans-unit>
        <trans-unit id="aa916c900301e3826afbb5c02eaae17fff9b2c9d" translate="yes" xml:space="preserve">
          <source>(W overflow) The hexadecimal floating point had internally more digits than could be output. This can be caused by unsupported long double formats, or by 64-bit integers not being available (needed to retrieve the digits under some configurations).</source>
          <target state="translated">（Wオーバーフロー）16進浮動小数点の内部には、出力できるよりも多くの桁がありました。これは、サポートされていないlong double形式、または64ビット整数が使用できない（一部の構成で数字を取得する必要がある）ことが原因である可能性があります。</target>
        </trans-unit>
        <trans-unit id="138762264bdf623369c76bc48da2075b0cc318e5" translate="yes" xml:space="preserve">
          <source>(W overflow) The hexadecimal floating point has a larger exponent than the floating point supports.</source>
          <target state="translated">（Wオーバーフロー）16進浮動小数点は、浮動小数点がサポートするよりも大きな指数を持っています。</target>
        </trans-unit>
        <trans-unit id="7814ff9e669078b81e726ef3a3f6f5a884ba7aa0" translate="yes" xml:space="preserve">
          <source>(W overflow) The hexadecimal floating point has a smaller exponent than the floating point supports.</source>
          <target state="translated">（Wオーバーフロー）16進浮動小数点は、浮動小数点がサポートするよりも小さい指数を持っています。</target>
        </trans-unit>
        <trans-unit id="4f49472f844faea1f47f1bc6b1c6edd0b363a63b" translate="yes" xml:space="preserve">
          <source>(W overflow) The hexadecimal floating point has a smaller exponent than the floating point supports. With the IEEE 754 floating point, this may also mean that the subnormals (formerly known as denormals) are being used, which may or may not be an error.</source>
          <target state="translated">（Wオーバーフロー）16進浮動小数点の指数は、浮動小数点がサポートするよりも小さくなっています。IEEE 754浮動小数点の場合、これは非正規化数（以前は非正規化数と呼ばれていました）が使用されていることを意味する場合もあり、エラーの場合とそうでない場合があります。</target>
        </trans-unit>
        <trans-unit id="ffaf16a18b1f69a006ca7d0cf534ff6517d8ea76" translate="yes" xml:space="preserve">
          <source>(W overflow) The hexadecimal floating point literal had more bits in the mantissa (the part between the 0x and the exponent, also known as the fraction or the significand) than the floating point supports.</source>
          <target state="translated">（Wオーバーフロー）16進浮動小数点リテラルの仮数（0xと指数の間の部分。分数または仮数とも呼ばれる）には、浮動小数点がサポートするよりも多くのビットがありました。</target>
        </trans-unit>
        <trans-unit id="afbfa3b5e713c7cfd0fd6a0d70917f864ae78219" translate="yes" xml:space="preserve">
          <source>(W overflow) You called &lt;code&gt;&lt;a href=&quot;functions/gmtime&quot;&gt;gmtime&lt;/a&gt;&lt;/code&gt; with a number that it could not handle: too large, too small, or NaN. The returned value is &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">（Wオーバーフロー）処理できない数値（大きすぎる、小さすぎる、またはNaN ）で &lt;code&gt;&lt;a href=&quot;functions/gmtime&quot;&gt;gmtime&lt;/a&gt;&lt;/code&gt; を呼び出しました。戻り値は &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="0d036704b2cebe975d7e914b35acf789231af606" translate="yes" xml:space="preserve">
          <source>(W overflow) You called &lt;code&gt;&lt;a href=&quot;functions/gmtime&quot;&gt;gmtime&lt;/a&gt;&lt;/code&gt; with a number that was larger than it can reliably handle and &lt;code&gt;&lt;a href=&quot;functions/gmtime&quot;&gt;gmtime&lt;/a&gt;&lt;/code&gt; probably returned the wrong date. This warning is also triggered with NaN (the special not-a-number value).</source>
          <target state="translated">（Wオーバーフロー）確実に処理できるよりも大きい数で &lt;code&gt;&lt;a href=&quot;functions/gmtime&quot;&gt;gmtime&lt;/a&gt;&lt;/code&gt; を呼び出しましたが、おそらく &lt;code&gt;&lt;a href=&quot;functions/gmtime&quot;&gt;gmtime&lt;/a&gt;&lt;/code&gt; は間違った日付を返しました。この警告は、NaN（特別な非数値）でもトリガーされます。</target>
        </trans-unit>
        <trans-unit id="0a311f99c2c8b02930306682b9959eb1c20599da" translate="yes" xml:space="preserve">
          <source>(W overflow) You called &lt;code&gt;&lt;a href=&quot;functions/gmtime&quot;&gt;gmtime&lt;/a&gt;&lt;/code&gt; with a number that was smaller than it can reliably handle and &lt;code&gt;&lt;a href=&quot;functions/gmtime&quot;&gt;gmtime&lt;/a&gt;&lt;/code&gt; probably returned the wrong date.</source>
          <target state="translated">（Wオーバーフロー）確実に処理できる数よりも小さい数値で &lt;code&gt;&lt;a href=&quot;functions/gmtime&quot;&gt;gmtime&lt;/a&gt;&lt;/code&gt; を呼び出しましたが、おそらく &lt;code&gt;&lt;a href=&quot;functions/gmtime&quot;&gt;gmtime&lt;/a&gt;&lt;/code&gt; は間違った日付を返しました。</target>
        </trans-unit>
        <trans-unit id="36f5779623dfa6f6e7074bdae41e1e41b89f241a" translate="yes" xml:space="preserve">
          <source>(W overflow) You called &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt; with a number that it could not handle: too large, too small, or NaN. The returned value is &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">（Wオーバーフロー）処理できない数値（大きすぎる、小さすぎる、またはNaN ）で &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt; を呼び出しました。戻り値は &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="59105a430199971f3675bfeb1fffaf7e49ff1f30" translate="yes" xml:space="preserve">
          <source>(W overflow) You called &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt; with a number that was larger than it can reliably handle and &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt; probably returned the wrong date. This warning is also triggered with NaN (the special not-a-number value).</source>
          <target state="translated">（Wオーバーフロー） &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt; を呼び出して、確実に処理できるよりも大きい数値を指定しましたが、 &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt; はおそらく間違った日付を返しました。この警告は、NaN（特別な非数値）でもトリガーされます。</target>
        </trans-unit>
        <trans-unit id="a93e07bf0c0bd6b674d691a637cbeb2110ed1a3d" translate="yes" xml:space="preserve">
          <source>(W overflow) You called &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt; with a number that was smaller than it can reliably handle and &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt; probably returned the wrong date.</source>
          <target state="translated">（Wオーバーフロー）確実に処理できる数よりも小さい数値で &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt; を呼び出しましたが、 &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt; はおそらく間違った日付を返しました。</target>
        </trans-unit>
        <trans-unit id="5aa4610ff7a25c878af96eaca3bd3d08a52b4d72" translate="yes" xml:space="preserve">
          <source>(W overflow) You called &lt;code&gt;&lt;a href=&quot;functions/sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; with a number that was larger than it can reliably handle and &lt;code&gt;&lt;a href=&quot;functions/sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; probably slept for less time than requested.</source>
          <target state="translated">（Wオーバーフロー）確実に処理できるよりも大きな数で &lt;code&gt;&lt;a href=&quot;functions/sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; を呼び出しましたが、 &lt;code&gt;&lt;a href=&quot;functions/sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; おそらく要求より短い時間だけスリープしていました。</target>
        </trans-unit>
        <trans-unit id="2b7ab1891088a8322093f03fdbf6e0c72b772149" translate="yes" xml:space="preserve">
          <source>(W overflow) You called &lt;code&gt;gmtime&lt;/code&gt; with a number that it could not handle: too large, too small, or NaN. The returned value is &lt;code&gt;undef&lt;/code&gt;.</source>
          <target state="translated">（Wオーバーフロー） &lt;code&gt;gmtime&lt;/code&gt; を、処理できない番号（大きすぎる、小さすぎる、またはNaN ）で呼び出しました。戻り値は &lt;code&gt;undef&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="4a4120ee25ae2afbb469b3700d99e2585fd342c4" translate="yes" xml:space="preserve">
          <source>(W overflow) You called &lt;code&gt;gmtime&lt;/code&gt; with a number that was larger than it can reliably handle and &lt;code&gt;gmtime&lt;/code&gt; probably returned the wrong date. This warning is also triggered with NaN (the special not-a-number value).</source>
          <target state="translated">（Wオーバーフロー）確実に処理できる数よりも大きい数で &lt;code&gt;gmtime&lt;/code&gt; を呼び出したため、 &lt;code&gt;gmtime&lt;/code&gt; が間違った日付を返した可能性があります。この警告は、NaN（特別な非数値）でもトリガーされます。</target>
        </trans-unit>
        <trans-unit id="a9c61e684dd33adf39b1df1c97260428987b3290" translate="yes" xml:space="preserve">
          <source>(W overflow) You called &lt;code&gt;gmtime&lt;/code&gt; with a number that was smaller than it can reliably handle and &lt;code&gt;gmtime&lt;/code&gt; probably returned the wrong date.</source>
          <target state="translated">（Wオーバーフロー）確実に処理できる数よりも小さい数で &lt;code&gt;gmtime&lt;/code&gt; を呼び出したため、 &lt;code&gt;gmtime&lt;/code&gt; が間違った日付を返した可能性があります。</target>
        </trans-unit>
        <trans-unit id="34ae715467aecc0bd7496ea4ae92702c0c0d4eb3" translate="yes" xml:space="preserve">
          <source>(W overflow) You called &lt;code&gt;localtime&lt;/code&gt; with a number that it could not handle: too large, too small, or NaN. The returned value is &lt;code&gt;undef&lt;/code&gt;.</source>
          <target state="translated">（Wオーバーフロー） &lt;code&gt;localtime&lt;/code&gt; を、処理できない番号（大きすぎる、小さすぎる、またはNaN ）で呼び出しました。戻り値は &lt;code&gt;undef&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="b04a9b14d2a3ce481d67aebafaf3e179c55f5f24" translate="yes" xml:space="preserve">
          <source>(W overflow) You called &lt;code&gt;localtime&lt;/code&gt; with a number that was larger than it can reliably handle and &lt;code&gt;localtime&lt;/code&gt; probably returned the wrong date. This warning is also triggered with NaN (the special not-a-number value).</source>
          <target state="translated">（Wオーバーフロー）確実に処理できる数よりも大きい数値で &lt;code&gt;localtime&lt;/code&gt; を呼び出したため、 &lt;code&gt;localtime&lt;/code&gt; が間違った日付を返した可能性があります。この警告は、NaN（特別な非数値）でもトリガーされます。</target>
        </trans-unit>
        <trans-unit id="5341b9595deb413aa636e268b7188996a07a564e" translate="yes" xml:space="preserve">
          <source>(W overflow) You called &lt;code&gt;localtime&lt;/code&gt; with a number that was smaller than it can reliably handle and &lt;code&gt;localtime&lt;/code&gt; probably returned the wrong date.</source>
          <target state="translated">（Wオーバーフロー）確実に処理できる数よりも小さい番号で &lt;code&gt;localtime&lt;/code&gt; を呼び出したため、 &lt;code&gt;localtime&lt;/code&gt; が間違った日付を返した可能性があります。</target>
        </trans-unit>
        <trans-unit id="4832e59a807f8103488238c9024a468acfff2a96" translate="yes" xml:space="preserve">
          <source>(W overflow) You called &lt;code&gt;sleep&lt;/code&gt; with a number that was larger than it can reliably handle and &lt;code&gt;sleep&lt;/code&gt; probably slept for less time than requested.</source>
          <target state="translated">（Wオーバーフロー）確実に処理できる数よりも大きい数で &lt;code&gt;sleep&lt;/code&gt; を呼び出し、おそらく要求されたよりも短い時間 &lt;code&gt;sleep&lt;/code&gt; しました。</target>
        </trans-unit>
        <trans-unit id="d9fd3dde1b871c801c860d8a346caace3870778c" translate="yes" xml:space="preserve">
          <source>(W overload) The &lt;a href=&quot;overload&quot;&gt;overload&lt;/a&gt; pragma was passed an argument it did not recognize. Did you mistype an operator?</source>
          <target state="translated">（W overload）&lt;a href=&quot;overload&quot;&gt;overload&lt;/a&gt;プラグマに認識できない引数が渡されました。演算子を間違って入力しましたか？</target>
        </trans-unit>
        <trans-unit id="e826b5fc0dae7ccc313c75bbbc79a59aff89f566" translate="yes" xml:space="preserve">
          <source>(W overload) The call to overload::constant contained an odd number of arguments. The arguments should come in pairs.</source>
          <target state="translated">（W overload）overload :: constantの呼び出しに奇数の引数が含まれていました。引数はペアにする必要があります。</target>
        </trans-unit>
        <trans-unit id="be93031fb1c1fd2693de7b970bf1f347826973be" translate="yes" xml:space="preserve">
          <source>(W overload) The second (fourth, sixth, ...) argument of overload::constant needs to be a code reference. Either an anonymous subroutine, or a reference to a subroutine.</source>
          <target state="translated">（Wオーバーロード）overload :: constantの2番目（4番目、6番目、...）の引数は、コード参照である必要があります。無名のサブルーチン、またはサブルーチンへの参照。</target>
        </trans-unit>
        <trans-unit id="bb652dad5fd63516cc2d111645fd00a245f45570" translate="yes" xml:space="preserve">
          <source>(W overload) You tried to overload a constant type the overload package is unaware of.</source>
          <target state="translated">（Wオーバーロード）オーバーロードパッケージが認識しない定数タイプをオーバーロードしようとしました。</target>
        </trans-unit>
        <trans-unit id="cdc892f77860c2fc237ce50d76efd0c8dceb00a4" translate="yes" xml:space="preserve">
          <source>(W pack) Each line in an uuencoded string starts with a length indicator which can't encode values above 63. So there is no point in asking for a line length bigger than that. Perl will behave as if you specified &lt;code&gt;u63&lt;/code&gt; as the format.</source>
          <target state="translated">（Wパック）uuencodeされた文字列の各行は、63を超える値をエンコードできない長さインジケーターで始まります。そのため、それよりも長い行の長さを要求しても意味がありません。Perlは、フォーマットとして &lt;code&gt;u63&lt;/code&gt; を指定した場合と同様に動作します。</target>
        </trans-unit>
        <trans-unit id="eb6f8e362bfe003b879f383a4c911b9a8c85c57c" translate="yes" xml:space="preserve">
          <source>(W pack) You said</source>
          <target state="translated">（Wパック）あなたが言った</target>
        </trans-unit>
        <trans-unit id="6a2168c56cd322bfb883a2fd9dbaf886812e847c" translate="yes" xml:space="preserve">
          <source>(W pack) You tried something like</source>
          <target state="translated">（Wパック）こんなことやってみた</target>
        </trans-unit>
        <trans-unit id="331cf753fae1a080c528f36a302470f474fb3136" translate="yes" xml:space="preserve">
          <source>(W pack) You tried to pass a temporary value (like the result of a function, or a computed expression) to the &quot;p&quot; pack() template. This means the result contains a pointer to a location that could become invalid anytime, even before the end of the current statement. Use literals or global values as arguments to the &quot;p&quot; pack() template to avoid this warning.</source>
          <target state="translated">（Wパック）一時的な値（関数の結果や計算式など）を &quot;p&quot; pack（）テンプレートに渡そうとしました。つまり、結果には、現在のステートメントが終了する前でも、いつでも無効になる可能性がある場所へのポインターが含まれています。この警告を回避するには、 &quot;p&quot; pack（）テンプレートへの引数としてリテラルまたはグローバル値を使用します。</target>
        </trans-unit>
        <trans-unit id="512f02482767bcddc779471eaf5fc084e966f52c" translate="yes" xml:space="preserve">
          <source>(W parenthesis) You said something like</source>
          <target state="translated">（Wカッコ）</target>
        </trans-unit>
        <trans-unit id="ede1f656195c84e1f48728c83c4610d04755c430" translate="yes" xml:space="preserve">
          <source>(W pipe) A fork in a piped open failed with EAGAIN and will be retried after five seconds.</source>
          <target state="translated">（Wパイプ）パイプオープンのフォークがEAGAINで失敗し、5秒後に再試行されます。</target>
        </trans-unit>
        <trans-unit id="b5a7c11775d339fb6b5d17e9b9676b5723086198" translate="yes" xml:space="preserve">
          <source>(W pipe) You tried to say &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;(CMD, &quot;|cmd|&quot;)&lt;/code&gt; , which is not supported. You can try any of several modules in the Perl library to do this, such as IPC::Open2. Alternately, direct the pipe's output to a file using &quot;&amp;gt;&quot;, and then read it in under a different file handle.</source>
          <target state="translated">（Wパイプ） &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;(CMD, &quot;|cmd|&quot;)&lt;/code&gt; と言われましたが、これはサポートされていません。IPC :: Open2など、Perlライブラリのいくつかのモジュールを試してみてください。または、パイプの出力を &quot;&amp;gt;&quot;を使用してファイルに送信し、別のファイルハンドルで読み取ります。</target>
        </trans-unit>
        <trans-unit id="19c768ef2795c654e49f763fa1951faf32c04ff6" translate="yes" xml:space="preserve">
          <source>(W pipe) You tried to say &lt;code&gt;open(CMD, &quot;|cmd|&quot;)&lt;/code&gt;, which is not supported. You can try any of several modules in the Perl library to do this, such as IPC::Open2. Alternately, direct the pipe's output to a file using &quot;&amp;gt;&quot;, and then read it in under a different file handle.</source>
          <target state="translated">（Wパイプ）サポートされていない &lt;code&gt;open(CMD, &quot;|cmd|&quot;)&lt;/code&gt; と言ってみました。これを行うには、IPC :: Open2など、Perlライブラリのいくつかのモジュールのいずれかを試すことができます。または、「&amp;gt;」を使用してパイプの出力をファイルに送信し、別のファイルハンドルで読み込みます。</target>
        </trans-unit>
        <trans-unit id="b9cd44d6f9338e432eca0100ebb8cf99a11652fc" translate="yes" xml:space="preserve">
          <source>(W pipe) You used the &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;(FH, &quot;| command&quot;)&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;(FH, &quot;command |&quot;)&lt;/code&gt; construction, but the command was missing or blank.</source>
          <target state="translated">（Wパイプ） &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;(FH, &quot;| command&quot;)&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;(FH, &quot;command |&quot;)&lt;/code&gt; 構成を使用しましたが、コマンドが欠落しているか、空白でした。</target>
        </trans-unit>
        <trans-unit id="687344f3aa731bf1d9d404caec4abbd832cb105d" translate="yes" xml:space="preserve">
          <source>(W pipe) You used the &lt;code&gt;open(FH, &quot;| command&quot;)&lt;/code&gt; or &lt;code&gt;open(FH, &quot;command |&quot;)&lt;/code&gt; construction, but the command was missing or blank.</source>
          <target state="translated">（Wパイプ） &lt;code&gt;open(FH, &quot;| command&quot;)&lt;/code&gt; または &lt;code&gt;open(FH, &quot;command |&quot;)&lt;/code&gt; 構造を使用しましたが、コマンドが欠落しているか空白です。</target>
        </trans-unit>
        <trans-unit id="33a8500596670f4af1c72a4fafc0180e0691f8b6" translate="yes" xml:space="preserve">
          <source>(W portable) The binary number you specified is larger than 2**32-1 (4294967295) and therefore non-portable between systems. See &lt;a href=&quot;perlport&quot;&gt;perlport&lt;/a&gt; for more on portability concerns.</source>
          <target state="translated">（Wポータブル）指定した2進数は2 ** 32-1（4294967295）より大きいため、システム間で移植できません。移植性の詳細については、&lt;a href=&quot;perlport&quot;&gt;perlport&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="09d1165dcd6590ca88ce45235db739b3730780ae" translate="yes" xml:space="preserve">
          <source>(W portable) The hexadecimal number you specified is larger than 2**32-1 (4294967295) and therefore non-portable between systems. See &lt;a href=&quot;perlport&quot;&gt;perlport&lt;/a&gt; for more on portability concerns.</source>
          <target state="translated">（Wポータブル）指定した16進数は2 ** 32-1（4294967295）より大きいため、システム間で移植できません。移植性の詳細については、&lt;a href=&quot;perlport&quot;&gt;perlport&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="fc835297f2faad908ec35d66fe96ac88817ca399" translate="yes" xml:space="preserve">
          <source>(W portable) The octal number you specified is larger than 2**32-1 (4294967295) and therefore non-portable between systems. See &lt;a href=&quot;perlport&quot;&gt;perlport&lt;/a&gt; for more on portability concerns.</source>
          <target state="translated">（Wポータブル）指定した8進数は2 ** 32-1（4294967295）より大きいため、システム間で移植できません。移植性の詳細については、&lt;a href=&quot;perlport&quot;&gt;perlport&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="64214d18f45799923abe2fb1d80cfb4e5a157cf3" translate="yes" xml:space="preserve">
          <source>(W portable) Using bit vector sizes larger than 32 is non-portable.</source>
          <target state="translated">（Wポータブル）32より大きいビットベクトルサイズの使用は移植できません。</target>
        </trans-unit>
        <trans-unit id="d926270be302be5e7e03299af7637591efa9d859" translate="yes" xml:space="preserve">
          <source>(W precedence) Your program uses a bitwise logical operator in conjunction with a numeric comparison operator, like this :</source>
          <target state="translated">（W優先）プログラムは、次のように、数値比較演算子と組み合わせてビットごとの論理演算子を使用します。</target>
        </trans-unit>
        <trans-unit id="792bff25d5afceb382dc5952aa4d3237868dca22" translate="yes" xml:space="preserve">
          <source>(W printf) Perl does not understand the given format conversion. See &lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;.</source>
          <target state="translated">（W printf）Perlは与えられたフォーマット変換を理解しません。&lt;a href=&quot;functions/sprintf&quot;&gt;sprintfを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="e6d81bdc34e54445c201e18a346e2f9e257b60b8" translate="yes" xml:space="preserve">
          <source>(W printf) Perl does not understand the given format conversion. See &lt;a href=&quot;perlfunc#sprintf&quot;&gt;&quot;sprintf&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="translated">（W printf）Perlは指定されたフォーマット変換を理解しません。&lt;a href=&quot;perlfunc#sprintf&quot;&gt;perlfuncの「sprintf」を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="9c27ac7b8639b06bd0fbaa78cd260cb1fd460614" translate="yes" xml:space="preserve">
          <source>(W prototype) A prototype was declared in both the parentheses after the sub name and via the prototype attribute. The prototype in parentheses is useless, since it will be replaced by the prototype from the attribute before it's ever used.</source>
          <target state="translated">（Wプロトタイプ）プロトタイプは、サブ名の後の括弧内とプロトタイプ属性の両方で宣言されました。括弧内のプロトタイプは、使用される前に属性のプロトタイプに置き換えられるため、役に立ちません。</target>
        </trans-unit>
        <trans-unit id="33b95571f8339a2cc0606dafed862a4db48c3be9" translate="yes" xml:space="preserve">
          <source>(W prototype) You've called a function that has a prototype before the parser saw a definition or declaration for it, and Perl could not check that the call conforms to the prototype. You need to either add an early prototype declaration for the subroutine in question, or move the subroutine definition ahead of the call to get proper prototype checking. Alternatively, if you are certain that you're calling the function correctly, you may put an ampersand before the name to avoid the warning. See &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt;.</source>
          <target state="translated">（Wプロトタイプ）パーサーが定義または宣言を見る前にプロトタイプを持つ関数を呼び出しましたが、Perlは呼び出しがプロトタイプに準拠しているかどうかを確認できませんでした。問題のサブルーチンの初期プロトタイプ宣言を追加するか、適切なプロトタイプチェックを取得するために呼び出しの前にサブルーチン定義を移動する必要があります。または、関数を正しく呼び出していることが確実な場合は、警告を回避するために、名前の前にアンパサンドを付けることができます。&lt;a href=&quot;perlsub&quot;&gt;perlsubを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="edd018a5f62f70fa66e12afd9da66c3f02d8c926" translate="yes" xml:space="preserve">
          <source>(W qw) qw() lists contain items separated by whitespace; as with literal strings, comment characters are not ignored, but are instead treated as literal data. (You may have used different delimiters than the parentheses shown here; braces are also frequently used.)</source>
          <target state="translated">（W qw）qw（）リストには、空白で区切られた項目が含まれます。リテラル文字列と同様に、コメント文字は無視されませんが、代わりにリテラルデータとして扱われます。（ここに示されている括弧とは異なる区切り文字を使用した可能性があります。中括弧も頻繁に使用されます。）</target>
        </trans-unit>
        <trans-unit id="578fcce7799c47789b0adac33008237c84ca3a49" translate="yes" xml:space="preserve">
          <source>(W qw) qw() lists contain items separated by whitespace; therefore commas aren't needed to separate the items. (You may have used different delimiters than the parentheses shown here; braces are also frequently used.)</source>
          <target state="translated">（W qw）qw（）リストには、空白で区切られた項目が含まれます。したがって、項目を区切るためにコンマは必要ありません。（ここに示されている括弧とは異なる区切り文字を使用した可能性があります。中括弧も頻繁に使用されます。）</target>
        </trans-unit>
        <trans-unit id="f98cb1c68560387dbc563580499439d4e545c148" translate="yes" xml:space="preserve">
          <source>(W recursion) This subroutine has called itself (directly or indirectly) 100 times more than it has returned. This probably indicates an infinite recursion, unless you're writing strange benchmark programs, in which case it indicates something else.</source>
          <target state="translated">（W再帰）このサブルーチンは、（直接または間接的に）自分自身を100回呼び出しました。奇妙なベンチマークプログラムを作成していない限り、これはおそらく無限の再帰を示しています。</target>
        </trans-unit>
        <trans-unit id="47929167f9b9dbf125f892daabe93ee9bacbdfe6" translate="yes" xml:space="preserve">
          <source>(W redefine) You redefined a format. To suppress this warning, say</source>
          <target state="translated">（W redefine）フォーマットを再定義しました。この警告を抑制するには、</target>
        </trans-unit>
        <trans-unit id="7ea1097acd4664a0298a650f6b5ed50b0394a5e8" translate="yes" xml:space="preserve">
          <source>(W redefine) You redefined a subroutine. To suppress this warning, say</source>
          <target state="translated">（W redefine）サブルーチンを再定義しました。この警告を抑制するには、</target>
        </trans-unit>
        <trans-unit id="e221b86b64886bbbd0c221b56cfa1a70910e05ae" translate="yes" xml:space="preserve">
          <source>(W redefine)(S) You redefined a subroutine which had previously been eligible for inlining. See &lt;a href=&quot;perlsub#Constant-Functions&quot;&gt;&quot;Constant Functions&quot; in perlsub&lt;/a&gt; for commentary and workarounds.</source>
          <target state="translated">（W redefine）（S）以前にインライン化に適格であったサブルーチンを再定義しました。解説と回避策について&lt;a href=&quot;perlsub#Constant-Functions&quot;&gt;は、perlsubの「定数関数」を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="689f4b16660fc106afaec6518b73b97410cae44a" translate="yes" xml:space="preserve">
          <source>(W redefine)(S) You redefined a subroutine which had previously been eligible for inlining. See &lt;a href=&quot;perlsub#Constant-Functions&quot;&gt;Constant Functions in perlsub&lt;/a&gt; for commentary and workarounds.</source>
          <target state="translated">（W redefine）（S）以前にインライン化に適格であったサブルーチンを再定義しました。コメントと回避策について&lt;a href=&quot;perlsub#Constant-Functions&quot;&gt;は、perlsubの定数関数を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="3855dda462903bfd0f1cb6416b2c27b1d50dfe13" translate="yes" xml:space="preserve">
          <source>(W redundant) You called a function with more arguments than other arguments you supplied indicated would be needed. Currently only emitted when a printf-type format required fewer arguments than were supplied, but might be used in the future for e.g. &lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;.</source>
          <target state="translated">（W冗長）指定した他の引数よりも多くの引数を使用して関数を呼び出しました。現在、printfタイプの形式が必要な引数が提供された数よりも少ない場合にのみ出力されますが、将来的には&lt;a href=&quot;functions/pack&quot;&gt;packなど&lt;/a&gt;で使用される可能性があります。</target>
        </trans-unit>
        <trans-unit id="3c730546b76271c57854b04aae7a64e30a0a44dc" translate="yes" xml:space="preserve">
          <source>(W redundant) You called a function with more arguments than other arguments you supplied indicated would be needed. Currently only emitted when a printf-type format required fewer arguments than were supplied, but might be used in the future for e.g. &lt;a href=&quot;perlfunc#pack&quot;&gt;&quot;pack&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="translated">（W冗長）指定した他の引数よりも多くの引数を使用して関数を呼び出しました。現在、printfタイプの形式で必要な引数が指定された数より少ない場合にのみ発行されますが、将来&lt;a href=&quot;perlfunc#pack&quot;&gt;、perlfuncの「pack」などに&lt;/a&gt;使用される可能性があります。</target>
        </trans-unit>
        <trans-unit id="1214eb3b51b8ff26fb1eb34d1309ab5f40c42cad" translate="yes" xml:space="preserve">
          <source>(W regexp) (only under &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re 'strict'&lt;/code&gt; or within &lt;code&gt;(?[...])&lt;/code&gt; )</source>
          <target state="translated">（W regexp）（ &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re 'strict'&lt;/code&gt; または &lt;code&gt;(?[...])&lt;/code&gt; 内でのみ&lt;a href=&quot;functions/use&quot;&gt;使用&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="1418503f1e9d8eefed52fae9d7f65663df0cadff" translate="yes" xml:space="preserve">
          <source>(W regexp) (only under &lt;code&gt;use re 'strict'&lt;/code&gt; or within &lt;code&gt;(?[...])&lt;/code&gt;)</source>
          <target state="translated">（W regexp）（re'strict &lt;code&gt;use re 'strict'&lt;/code&gt; または &lt;code&gt;(?[...])&lt;/code&gt; 内でのみ使用中）</target>
        </trans-unit>
        <trans-unit id="a1df92aaccc50fc27a2b7491f0201ce1e77d6b7c" translate="yes" xml:space="preserve">
          <source>(W regexp) (only under &lt;code&gt;use re 'strict'&lt;/code&gt;)</source>
          <target state="translated">（W regexp）（ &lt;code&gt;use re 'strict'&lt;/code&gt; のみre'strict '）</target>
        </trans-unit>
        <trans-unit id="96608d49c322029f8dcdf9e023697145af03af25" translate="yes" xml:space="preserve">
          <source>(W regexp) (only under &lt;code&gt;use re 'strict'&lt;/code&gt;) &lt;code&gt;(?)&lt;/code&gt; does nothing, so perhaps this is a typo.</source>
          <target state="translated">（W regexp）（re'strict &lt;code&gt;use re 'strict'&lt;/code&gt; のみ） &lt;code&gt;(?)&lt;/code&gt; は何もしないので、おそらくこれはタイプミスです。</target>
        </trans-unit>
        <trans-unit id="79d7f41c99f2c5e7af10bfeef990dcdf86b08c28" translate="yes" xml:space="preserve">
          <source>(W regexp) Extended character classes currently cannot handle operands that evaluate to more than one character. These are removed from the results of the expansion of the &lt;code&gt;\p{}&lt;/code&gt;.</source>
          <target state="translated">（W regexp）現在、拡張文字クラスは、複数の文字に評価されるオペランドを処理できません。これらは、 &lt;code&gt;\p{}&lt;/code&gt; 展開の結果から削除されます。</target>
        </trans-unit>
        <trans-unit id="afe1f8b1a4d34adb7a2f8d5f9d1021945e4cb7e2" translate="yes" xml:space="preserve">
          <source>(W regexp) Minima should be less than or equal to maxima. If you really want your regexp to match something 0 times, just put {0}.</source>
          <target state="translated">（W regexp）最小値は最大値以下にする必要があります。正規表現を0回一致させる場合は、単に{0}を入力します。</target>
        </trans-unit>
        <trans-unit id="310e10e88bd557a50ffed62c0a92ae3cc181eb6a" translate="yes" xml:space="preserve">
          <source>(W regexp) Named Unicode character escapes (&lt;code&gt;\N{...}&lt;/code&gt; ) may return a zero-length sequence. When such an escape is used in a character class its behavior is not well defined. Check that the correct escape has been used, and the correct charname handler is in scope.</source>
          <target state="translated">（W regexp）名前付きUnicode文字エスケープ（ &lt;code&gt;\N{...}&lt;/code&gt; ）は、長さがゼロのシーケンスを返す場合があります。このようなエスケープが文字クラスで使用されている場合、その動作は明確に定義されていません。正しいエスケープが使用されていること、および正しいcharnameハンドラーがスコープ内にあることを確認してください。</target>
        </trans-unit>
        <trans-unit id="60783e0f5062372ff8d45c06c31ac1f9f998a5fa" translate="yes" xml:space="preserve">
          <source>(W regexp) Named Unicode character escapes (&lt;code&gt;\N{...}&lt;/code&gt;) may return a zero-length sequence. When such an escape is used in a character class its behavior is not well defined. Check that the correct escape has been used, and the correct charname handler is in scope.</source>
          <target state="translated">（W regexp）名前付きUnicode文字エスケープ（ &lt;code&gt;\N{...}&lt;/code&gt; ）は、長さがゼロのシーケンスを返す場合があります。このようなエスケープが文字クラスで使用される場合、その動作は明確に定義されていません。正しいエスケープが使用されていること、および正しいcharnameハンドラーがスコープ内にあることを確認してください。</target>
        </trans-unit>
        <trans-unit id="cac34d442feedb85a4f7352a0dc2a4c7f282aa35" translate="yes" xml:space="preserve">
          <source>(W regexp) Named Unicode character escapes &lt;code&gt;(\N{...})&lt;/code&gt; may return a multi-character sequence. Even though a character class is supposed to match just one character of input, perl will match the whole thing correctly, except when the class is inverted (&lt;code&gt;[^...]&lt;/code&gt;), or the escape is the beginning or final end point of a range. For these, what should happen isn't clear at all. In these circumstances, Perl discards all but the first character of the returned sequence, which is not likely what you want.</source>
          <target state="translated">（W regexp）名前付きUnicode文字エスケープ &lt;code&gt;(\N{...})&lt;/code&gt; は複数文字シーケンスを返す場合があります。文字クラスは入力の1文字にのみ一致するはずですが、クラスが反転されている場合（ &lt;code&gt;[^...]&lt;/code&gt; ）、またはエスケープがaの開始または終了の場合を除いて、perlは全体に正しく一致します。範囲。これらについては、何が起こるべきかはまったく明確ではありません。これらの状況では、Perlは返されたシーケンスの最初の文字を除いてすべてを破棄しますが、これはおそらく望んでいることではありません。</target>
        </trans-unit>
        <trans-unit id="87050e38d01b07bff1acd9b58f28df12b4d2afa8" translate="yes" xml:space="preserve">
          <source>(W regexp) Perl thinks that you intended to write a POSIX character class, but didn't use enough brackets. These POSIX class constructs [: :], [= =], and [. .] go</source>
          <target state="translated">（W regexp）Perlは、POSIX文字クラスを作成するつもりであると考えていますが、十分なブラケットを使用していません。これらのPOSIXクラスは、[::]、[= =]、および[を構成します。。]行く</target>
        </trans-unit>
        <trans-unit id="979a02ee883c9ec2b29353dd7dff24d69eb2d3ce" translate="yes" xml:space="preserve">
          <source>(W regexp) The &lt;code&gt;p&lt;/code&gt; modifier cannot be turned off once set. Trying to do so is futile.</source>
          <target state="translated">（W regexp）一度設定した &lt;code&gt;p&lt;/code&gt; 修飾子をオフにすることはできません。そうしようとしても無駄です。</target>
        </trans-unit>
        <trans-unit id="8836615448ed9381b2dd52c5b2fbe6a905d13b4d" translate="yes" xml:space="preserve">
          <source>(W regexp) The character class constructs [: :], [= =], and [. .] go</source>
          <target state="translated">（W regexp）文字クラスは[：：]、[= =]、および[を構成します。。]行く</target>
        </trans-unit>
        <trans-unit id="9c9b13dc35d66abc0e2ef6aa56dcc54220fb0f95" translate="yes" xml:space="preserve">
          <source>(W regexp) The pattern you've specified would be an infinite loop if the regular expression engine didn't specifically check for that. The &amp;lt;-- HERE shows whereabouts in the regular expression the problem was discovered. See &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;.</source>
          <target state="translated">（W regexp）正規表現エンジンが特別にチェックしなかった場合、指定したパターンは無限ループになります。&amp;lt;-HEREは、正規表現のどこに問題が発見されたかを示しています。&lt;a href=&quot;perlre&quot;&gt;perlreを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="34e218ab696b9069c9cee1fbdc8441bff0b2fd36" translate="yes" xml:space="preserve">
          <source>(W regexp) The regular expression engine uses recursion in complex situations where back-tracking is required. Recursion depth is limited to 32766, or perhaps less in architectures where the stack cannot grow arbitrarily. (&quot;Simple&quot; and &quot;medium&quot; situations are handled without recursion and are not subject to a limit.) Try shortening the string under examination; looping in Perl code (e.g. with &lt;code&gt;while&lt;/code&gt; ) rather than in the regular expression engine; or rewriting the regular expression so that it is simpler or backtracks less. (See &lt;a href=&quot;perlfaq2&quot;&gt;perlfaq2&lt;/a&gt; for information on</source>
          <target state="translated">（W regexp）正規表現エンジンは、バックトラッキングが必要な複雑な状況で再帰を使用します。再帰の深さは32766に制限されており、スタックが任意に成長できないアーキテクチャではおそらくそれよりも少なくなります。 （「単純」および「中」の状況は再帰なしで処理され、制限はありません。）検査中のストリングを短くしてみてください。正規表現エンジンではなく、Perlコード（ &lt;code&gt;while&lt;/code&gt; など）でループします。または、正規表現を書き換えて、シンプルにするか、バックトラックを少なくします。 （詳細については、&lt;a href=&quot;perlfaq2&quot;&gt;perlfaq2&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="dd6fc64cafd8819f8996fa316c8f285fd7746b68" translate="yes" xml:space="preserve">
          <source>(W regexp) The regular expression engine uses recursion in complex situations where back-tracking is required. Recursion depth is limited to 32766, or perhaps less in architectures where the stack cannot grow arbitrarily. (&quot;Simple&quot; and &quot;medium&quot; situations are handled without recursion and are not subject to a limit.) Try shortening the string under examination; looping in Perl code (e.g. with &lt;code&gt;while&lt;/code&gt;) rather than in the regular expression engine; or rewriting the regular expression so that it is simpler or backtracks less. (See &lt;a href=&quot;perlfaq2&quot;&gt;perlfaq2&lt;/a&gt; for information on</source>
          <target state="translated">（W regexp）正規表現エンジンは、バックトラッキングが必要な複雑な状況で再帰を使用します。再帰の深さは32766に制限されており、スタックを任意に拡張できないアーキテクチャではおそらくそれ以下です。 （「単純」および「中」の状況は再帰なしで処理され、制限の対象にはなりません。）調査中の文字列を短くしてみてください。正規表現エンジンではなく、Perlコード（たとえば、 &lt;code&gt;while&lt;/code&gt; を使用）でループします。または、正規表現を書き直して、単純にするか、バックトラックを少なくします。 （詳細については、&lt;a href=&quot;perlfaq2&quot;&gt;perlfaq2&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="bcd893d4152d26d0c7cd216e85b74fd84798d49e" translate="yes" xml:space="preserve">
          <source>(W regexp) The simple rule to remember, if you want to match a literal &lt;code&gt;&quot;{&quot;&lt;/code&gt; character (U+007B &lt;code&gt;LEFT CURLY BRACKET&lt;/code&gt;) in a regular expression pattern, is to escape each literal instance of it in some way. Generally easiest is to precede it with a backslash, like &lt;code&gt;&quot;\{&quot;&lt;/code&gt; or enclose it in square brackets (&lt;code&gt;&quot;[{]&quot;&lt;/code&gt;). If the pattern delimiters are also braces, any matching right brace (&lt;code&gt;&quot;}&quot;&lt;/code&gt;) should also be escaped to avoid confusing the parser, for example,</source>
          <target state="translated">（W regexp）正規表現パターンでリテラル &lt;code&gt;&quot;{&quot;&lt;/code&gt; 文字（U + 007B &lt;code&gt;LEFT CURLY BRACKET&lt;/code&gt; ）を照合する場合に覚えておくべき簡単なルールは、その各リテラルインスタンスを何らかの方法でエスケープすることです。一般的に最も簡単なのは、 &lt;code&gt;&quot;\{&quot;&lt;/code&gt; ように円記号を前に付けるか、角かっこ（ &lt;code&gt;&quot;[{]&quot;&lt;/code&gt; ）で囲むことです。パターン区切り文字も中括弧である場合、パーサーを混乱させないように、一致する右中括弧（ &lt;code&gt;&quot;}&quot;&lt;/code&gt; ）もエスケープする必要があります。</target>
        </trans-unit>
        <trans-unit id="e80a3d940f8d1e707b0bc892519eccf16aea2d95" translate="yes" xml:space="preserve">
          <source>(W regexp) You applied a regular expression quantifier in a place where it makes no sense, such as on a zero-width assertion. Try putting the quantifier inside the assertion instead. For example, the way to match &quot;abc&quot; provided that it is followed by three repetitions of &quot;xyz&quot; is &lt;code&gt;/abc(?=(?:xyz){3})/&lt;/code&gt; , not &lt;code&gt;/abc(?=xyz){3}/&lt;/code&gt; .</source>
          <target state="translated">（W regexp）ゼロ幅アサーションなど、意味のない場所に正規表現数量詞を適用しました。代わりに、量指定子をアサーション内に配置してみてください。たとえば、「abc」に一致する方法は、「xyz」が3回繰り返されている場合、 &lt;code&gt;/abc(?=(?:xyz){3})/&lt;/code&gt; であり、 &lt;code&gt;/abc(?=xyz){3}/&lt;/code&gt; ではありません。 /。</target>
        </trans-unit>
        <trans-unit id="6b116c34912c573289d414f1c5ba731419acfc1d" translate="yes" xml:space="preserve">
          <source>(W regexp) You applied a regular expression quantifier in a place where it makes no sense, such as on a zero-width assertion. Try putting the quantifier inside the assertion instead. For example, the way to match &quot;abc&quot; provided that it is followed by three repetitions of &quot;xyz&quot; is &lt;code&gt;/abc(?=(?:xyz){3})/&lt;/code&gt;, not &lt;code&gt;/abc(?=xyz){3}/&lt;/code&gt;.</source>
          <target state="translated">（W regexp）幅がゼロのアサーションなど、意味のない場所に正規表現の数量詞を適用しました。代わりに、アサーション内に数量詞を配置してみてください。たとえば、「xyz」が3回繰り返される場合、「abc」を照合する方法は、 &lt;code&gt;/abc(?=(?:xyz){3})/&lt;/code&gt; ではなく &lt;code&gt;/abc(?=xyz){3}/&lt;/code&gt; （？： xyz）{3}）/です。 /。</target>
        </trans-unit>
        <trans-unit id="5f9d6046f4892a59f0789eb9e0cd6b5353468138" translate="yes" xml:space="preserve">
          <source>(W regexp) You had something like these:</source>
          <target state="translated">（W regexp）あなたはこれらのようなものを持っていました：</target>
        </trans-unit>
        <trans-unit id="136a9995a2e015be707b998b2100f17123be4162" translate="yes" xml:space="preserve">
          <source>(W regexp) You have used an internal modifier such as (?-o) that has no meaning unless removed from the entire regexp:</source>
          <target state="translated">（W regexp）正規表現全体から削除しない限り意味のない（？-o）などの内部修飾子を使用しました：</target>
        </trans-unit>
        <trans-unit id="55d68e94b03df6dbd58f4c0d015f0fad8b599b8d" translate="yes" xml:space="preserve">
          <source>(W regexp) You have used an internal modifier such as (?o) that has no meaning unless applied to the entire regexp:</source>
          <target state="translated">（W regexp）（？o）のような内部修飾子を使用しましたが、正規表現全体に適用しない限り意味がありません。</target>
        </trans-unit>
        <trans-unit id="b43adfc5e63fb549f624f667292c77a5d4453619" translate="yes" xml:space="preserve">
          <source>(W regexp) You specified a wildcard for a Unicode property value, but there is no property value in the current Unicode release that matches it. Check your spelling.</source>
          <target state="translated">（W regexp）Unicodeプロパティ値にワイルドカードを指定しましたが、現在のUnicodeリリースにはそれに一致するプロパティ値がありません。スペルを確認してください。</target>
        </trans-unit>
        <trans-unit id="4dff6ec1a19e7de52b41046a33967e1771a1d39a" translate="yes" xml:space="preserve">
          <source>(W regexp) You specified something like these:</source>
          <target state="translated">（W regexp）次のようなものを指定しました：</target>
        </trans-unit>
        <trans-unit id="a554f4535489ad2df9ed3cca605416c0a1c6af75" translate="yes" xml:space="preserve">
          <source>(W regexp) You used a Unicode boundary (&lt;code&gt;\b{...}&lt;/code&gt; or &lt;code&gt;\B{...}&lt;/code&gt; ) in a portion of a regular expression where the character set modifiers &lt;code&gt;/a&lt;/code&gt; or &lt;code&gt;/aa&lt;/code&gt; are in effect. These two modifiers indicate an ASCII interpretation, and this doesn't make sense for a Unicode defintion. The generated regular expression will compile so that the boundary uses all of Unicode. No other portion of the regular expression is affected.</source>
          <target state="translated">（W regexp）文字セット修飾子 &lt;code&gt;/a&lt;/code&gt; または &lt;code&gt;/aa&lt;/code&gt; が有効な正規表現の一部でUnicode境界（ &lt;code&gt;\b{...}&lt;/code&gt; または &lt;code&gt;\B{...}&lt;/code&gt; ）を使用しました。これらの2つの修飾子はASCII解釈を示しますが、これはUnicode定義には意味がありません。生成された正規表現は、境界がすべてのUnicodeを使用するようにコンパイルされます。正規表現の他の部分は影響を受けません。</target>
        </trans-unit>
        <trans-unit id="cd51f2ada30069ed0e5474392eee3320b75dfab6" translate="yes" xml:space="preserve">
          <source>(W regexp) You used a Unicode boundary (&lt;code&gt;\b{...}&lt;/code&gt; or &lt;code&gt;\B{...}&lt;/code&gt;) in a portion of a regular expression where the character set modifiers &lt;code&gt;/a&lt;/code&gt; or &lt;code&gt;/aa&lt;/code&gt; are in effect. These two modifiers indicate an ASCII interpretation, and this doesn't make sense for a Unicode definition. The generated regular expression will compile so that the boundary uses all of Unicode. No other portion of the regular expression is affected.</source>
          <target state="translated">（W regexp）文字セット修飾子 &lt;code&gt;/a&lt;/code&gt; または &lt;code&gt;/aa&lt;/code&gt; が有効な正規表現の一部でUnicode境界（ &lt;code&gt;\b{...}&lt;/code&gt; または &lt;code&gt;\B{...}&lt;/code&gt; ）を使用しました。これらの2つの修飾子は、ASCII解釈を示しますが、これはUnicode定義には意味がありません。生成された正規表現は、境界がすべてのUnicodeを使用するようにコンパイルされます。正規表現の他の部分は影響を受けません。</target>
        </trans-unit>
        <trans-unit id="c858a1bb6c94f36a1ad78cfa5e12eef38835bc65" translate="yes" xml:space="preserve">
          <source>(W regexp) You used a backslash-character combination which is not recognized by Perl inside character classes. The character was understood literally, but this may change in a future version of Perl. The &amp;lt;-- HERE shows whereabouts in the regular expression the escape was discovered.</source>
          <target state="translated">（W regexp）文字クラス内のPerlで認識されないバックスラッシュ文字の組み合わせを使用しました。文字は文字通り理解されましたが、Perlの将来のバージョンでは変更される可能性があります。&amp;lt;-HEREは、エスケープが発見された正規表現の所在を示しています。</target>
        </trans-unit>
        <trans-unit id="f4b5c5f036648db103b8f6b0d672a6297b55d830" translate="yes" xml:space="preserve">
          <source>(W regexp) You used a backslash-character combination which is not recognized by Perl. The character(s) were understood literally, but this may change in a future version of Perl. The &amp;lt;-- HERE shows whereabouts in the regular expression the escape was discovered.</source>
          <target state="translated">（W regexp）Perlで認識されないバックスラッシュ文字の組み合わせを使用しました。文字は文字通り理解されましたが、これはPerlの将来のバージョンで変更される可能性があります。&amp;lt;-HEREは、エスケープが発見された正規表現の所在を示しています。</target>
        </trans-unit>
        <trans-unit id="726bc29b79e757efbbf6291f3feab7738f4156dd" translate="yes" xml:space="preserve">
          <source>(W regexp) You used the /c modifier in a substitution. The /c modifier is not presently meaningful in substitutions.</source>
          <target state="translated">（W regexp）置換で/ c修飾子を使用しました。/ c修飾子は、現在、置換では意味がありません。</target>
        </trans-unit>
        <trans-unit id="f9138d3ceb624a8a5b53b139e9b01cf402ccd97d" translate="yes" xml:space="preserve">
          <source>(W regexp) You used the /c modifier with a regex operand, but didn't use the /g modifier. Currently, /c is meaningful only when /g is used. (This may change in the future.)</source>
          <target state="translated">（W regexp）/ c修飾子をregexオペランドとともに使用しましたが、/ g修飾子を使用しませんでした。現在、/ cは、/ gが使用されている場合にのみ意味があります。（これは将来変更される可能性があります。）</target>
        </trans-unit>
        <trans-unit id="05230a0b7de0944fc11913778fd1b00ae30b0de3" translate="yes" xml:space="preserve">
          <source>(W regexp) You used the /g modifier on the pattern for a &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; operator. Since &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; always tries to match the pattern repeatedly, the &lt;code&gt;/g&lt;/code&gt; has no effect.</source>
          <target state="translated">（W regexp） &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; 演算子のパターンで/ g修飾子を使用しました。以来 &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; 常に繰り返しパターンに一致しようとし、 &lt;code&gt;/g&lt;/code&gt; 影響を及ぼしません。</target>
        </trans-unit>
        <trans-unit id="fa05f976ea4a21f23deaf9fc8dc841cd7c0db3ed" translate="yes" xml:space="preserve">
          <source>(W regexp) You used the /g modifier on the pattern for a &lt;code&gt;split&lt;/code&gt; operator. Since &lt;code&gt;split&lt;/code&gt; always tries to match the pattern repeatedly, the &lt;code&gt;/g&lt;/code&gt; has no effect.</source>
          <target state="translated">（W regexp） &lt;code&gt;split&lt;/code&gt; 演算子のパターンで/ g修飾子を使用しました。以来 &lt;code&gt;split&lt;/code&gt; 常に繰り返しパターンに一致しようとし、 &lt;code&gt;/g&lt;/code&gt; 影響を及ぼしません。</target>
        </trans-unit>
        <trans-unit id="fce92f52ceba5999bee49caf7c2b501e30f4a70d" translate="yes" xml:space="preserve">
          <source>(W regexp)(F) A character class range must start and end at a literal character, not another character class like &lt;code&gt;\d&lt;/code&gt; or &lt;code&gt;[:alpha:]&lt;/code&gt;. The &quot;-&quot; in your false range is interpreted as a literal &quot;-&quot;. In a &lt;code&gt;(?[...])&lt;/code&gt; construct, this is an error, rather than a warning. Consider quoting the &quot;-&quot;, &quot;\-&quot;. The &amp;lt;-- HERE shows whereabouts in the regular expression the problem was discovered. See &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;.</source>
          <target state="translated">（W regexp）（F）文字クラスの範囲は、 &lt;code&gt;\d&lt;/code&gt; や &lt;code&gt;[:alpha:]&lt;/code&gt; などの別の文字クラスではなく、リテラル文字で開始および終了する必要があります。偽の範囲の「-」は、文字通りの「-」として解釈されます。で &lt;code&gt;(?[...])&lt;/code&gt; 構造、これはエラーではなく警告です。 「-」、「\-」の引用を検討してください。 &amp;lt;-HEREは、正規表現のどこに問題が発見されたかを示しています。&lt;a href=&quot;perlre&quot;&gt;perlreを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="d8e9fa34a2adca3b8cdfab34d848f2df35e1e065" translate="yes" xml:space="preserve">
          <source>(W regexp)(F) The numeric escape (for example &lt;code&gt;\xHH&lt;/code&gt; ) of value &amp;lt; 256 didn't correspond to a single character through the conversion from the encoding specified by the encoding pragma. The escape was replaced with REPLACEMENT CHARACTER (U+FFFD) instead, except within &lt;code&gt;(?[   ])&lt;/code&gt; , where it is a fatal error. The &amp;lt;-- HERE shows whereabouts in the regular expression the escape was discovered.</source>
          <target state="translated">（W regexp）（F）値&amp;lt;256 の数値エスケープ（たとえば &lt;code&gt;\xHH&lt;/code&gt; ）は、encodingプラグマで指定されたエンコーディングからの変換による単一の文字に対応していませんでした。エスケープは、致命的なエラーである &lt;code&gt;(?[ ])&lt;/code&gt; 内を除いて、代わりにREPLACEMENT CHARACTER（U + FFFD）に置き換えられました。&amp;lt;-HEREは、エスケープが発見された正規表現の所在を示しています。</target>
        </trans-unit>
        <trans-unit id="a257315534d5cc6e84833f33abd1dd3381a6b41c" translate="yes" xml:space="preserve">
          <source>(W regexp)(F) The numeric escape (for example &lt;code&gt;\xHH&lt;/code&gt;) of value &amp;lt; 256 didn't correspond to a single character through the conversion from the encoding specified by the encoding pragma. The escape was replaced with REPLACEMENT CHARACTER (U+FFFD) instead, except within &lt;code&gt;(?[ ])&lt;/code&gt;, where it is a fatal error. The &amp;lt;-- HERE shows whereabouts in the regular expression the escape was discovered.</source>
          <target state="translated">（W regexp）（F）値&amp;lt;256の数値エスケープ（たとえば、 &lt;code&gt;\xHH&lt;/code&gt; ）は、エンコーディングプラグマで指定されたエンコーディングからの変換による単一文字に対応していませんでした。エスケープは、致命的なエラーである &lt;code&gt;(?[ ])&lt;/code&gt; 内を除いて、代わりにREPLACEMENT CHARACTER（U + FFFD）に置き換えられました。&amp;lt;-ここに、エスケープが発見された正規表現の所在を示します。</target>
        </trans-unit>
        <trans-unit id="ab5d2805454216bda7ba450af2c1070e6d07a77b" translate="yes" xml:space="preserve">
          <source>(W reserved) A lowercase attribute name was used that had a package-specific handler. That name might have a meaning to Perl itself some day, even though it doesn't yet. Perhaps you should use a mixed-case attribute name, instead. See &lt;a href=&quot;attributes&quot;&gt;attributes&lt;/a&gt;.</source>
          <target state="translated">（W予約済み）パッケージ固有のハンドラーを持つ小文字の属性名が使用されました。その名前はいつの日かPerl自体に意味があるかもしれません。代わりに、大文字と小文字が混在する属性名を使用する必要があるかもしれません。&lt;a href=&quot;attributes&quot;&gt;属性を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="28a74896a26f8e20c063399ec49864ab28f3d526" translate="yes" xml:space="preserve">
          <source>(W reserved) You used a bareword that might someday be claimed as a reserved word. It's best to put such a word in quotes, or capitalize it somehow, or insert an underbar into it. You might also declare it as a subroutine.</source>
          <target state="translated">（W予約済み）いつか予約語として主張される可能性のある裸語を使用しました。そのような単語を引用符で囲むか、何らかの方法で大文字にするか、アンダーバーを挿入するのが最善です。また、それをサブルーチンとして宣言することもできます。</target>
        </trans-unit>
        <trans-unit id="b7f56b2509559b232b5aa9bdc88fbfd521c4a370" translate="yes" xml:space="preserve">
          <source>(W semicolon) A nearby syntax error was probably caused by a missing semicolon, or possibly some other missing operator, such as a comma.</source>
          <target state="translated">（Wセミコロン）近くの構文エラーは、おそらくセミコロンの欠落、またはおそらくコンマなどのその他の欠落した演算子が原因でした。</target>
        </trans-unit>
        <trans-unit id="75808a105415bb63e05cf6d998b7aba9b280a40b" translate="yes" xml:space="preserve">
          <source>(W shadow) A &quot;my&quot; or &quot;state&quot; subroutine has been redeclared in the current scope or statement, effectively eliminating all access to the previous instance. This is almost always a typographical error. Note that the earlier subroutine will still exist until the end of the scope or until all closure references to it are destroyed.</source>
          <target state="translated">（Wシャドウ）「my」または「state」サブルーチンが現在のスコープまたはステートメントで再宣言され、前のインスタンスへのすべてのアクセスが事実上排除されました。これはほとんどの場合、誤植です。以前のサブルーチンは、スコープが終了するまで、またはスコープへのすべてのクロージャー参照が破棄されるまで存在することに注意してください。</target>
        </trans-unit>
        <trans-unit id="72e5c1f7f8c71e274cd33bf02f816a55e48749b0" translate="yes" xml:space="preserve">
          <source>(W shadow) A &quot;my&quot;, &quot;our&quot; or &quot;state&quot; variable has been redeclared in the current scope or statement, effectively eliminating all access to the previous instance. This is almost always a typographical error. Note that the earlier variable will still exist until the end of the scope or until all closure references to it are destroyed.</source>
          <target state="translated">（Wシャドウ）「my」、「our」、または「state」変数が現在のスコープまたはステートメントで再宣言され、前のインスタンスへのすべてのアクセスが事実上排除されました。これはほとんどの場合、誤植です。以前の変数は、スコープが終了するまで、またはスコープへのすべてのクロージャー参照が破棄されるまで存在することに注意してください。</target>
        </trans-unit>
        <trans-unit id="cb918e1b6994e324b9f74515b4c8e906a5d67301" translate="yes" xml:space="preserve">
          <source>(W shadow) Remember that &quot;our&quot; does not localize the declared global variable. You have declared it again in the same lexical scope, which seems superfluous.</source>
          <target state="translated">（Wシャドウ）「our」は宣言されたグローバル変数をローカライズしないことに注意してください。同じ字句スコープで再度宣言しましたが、これは不要のようです。</target>
        </trans-unit>
        <trans-unit id="fb4c8592e41268e19a98f9c44343d5bbbe048bd6" translate="yes" xml:space="preserve">
          <source>(W shadow) You seem to have already declared the same global once before in the current lexical scope.</source>
          <target state="translated">（Wシャドウ）現在の字句スコープで、以前に同じグローバルを宣言したことがあるようです。</target>
        </trans-unit>
        <trans-unit id="c490a0614ad09a273c847f914c444441bd43e759" translate="yes" xml:space="preserve">
          <source>(W signal) Perl has detected that it is being run with the SIGCHLD signal (sometimes known as SIGCLD) disabled. Since disabling this signal will interfere with proper determination of exit status of child processes, Perl has reset the signal to its default value. This situation typically indicates that the parent program under which Perl may be running (e.g. cron) is being very careless.</source>
          <target state="translated">（Wシグナル）Perlは、SIGCHLDシグナル（SIGCLDとも呼ばれる）を無効にして実行されていることを検出しました。このシグナルを無効にすると、子プロセスの終了ステータスの適切な決定が妨げられるため、Perlはシグナルをデフォルト値にリセットしました。この状況は通常、Perlが実行されている可能性がある親プログラム（cronなど）が非常に不注意であることを示しています。</target>
        </trans-unit>
        <trans-unit id="d36a3561d6f20cf601cc8fdcd8a0b693b632d4af" translate="yes" xml:space="preserve">
          <source>(W signal) The signal handler named in %SIG doesn't, in fact, exist. Perhaps you put it into the wrong package?</source>
          <target state="translated">（Wシグナル）％SIGで指定されたシグナルハンドラーは、実際には存在しません。おそらくあなたはそれを間違ったパッケージに入れましたか？</target>
        </trans-unit>
        <trans-unit id="ebc35d5a02e4c063b197676d1cbd12f47c19df5b" translate="yes" xml:space="preserve">
          <source>(W signal) You specified a signal name as a subscript to %SIG that was not recognized. Say &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt; -l&lt;/code&gt; in your shell to see the valid signal names on your system.</source>
          <target state="translated">（Wシグナル）認識されない％SIGの添え字としてシグナル名を指定しました。セイは &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt; -l&lt;/code&gt; システム上の有効な信号名を確認するためにあなたのシェルで。</target>
        </trans-unit>
        <trans-unit id="29464a8694afd3b6f7fa2dedad18f5d42ea27aab" translate="yes" xml:space="preserve">
          <source>(W signal) You specified a signal name as a subscript to %SIG that was not recognized. Say &lt;code&gt;kill -l&lt;/code&gt; in your shell to see the valid signal names on your system.</source>
          <target state="translated">（Wシグナル）認識されなかった％SIGの添え字としてシグナル名を指定しました。システムで有効なシグナル名を確認するには、シェルで &lt;code&gt;kill -l&lt;/code&gt; と言います。</target>
        </trans-unit>
        <trans-unit id="95ce3889bdccfd28d07038434edbc2f2493245c4" translate="yes" xml:space="preserve">
          <source>(W substr) You supplied a reference as the first argument to substr() used as an lvalue, which is pretty strange. Perhaps you forgot to dereference it first. See &lt;a href=&quot;functions/substr&quot;&gt;substr&lt;/a&gt;.</source>
          <target state="translated">（W substr）左辺値として使用されるsubstr（）の最初の引数として参照を指定しましたが、これはかなり奇妙です。おそらく、最初に逆参照するのを忘れていたのでしょう。&lt;a href=&quot;functions/substr&quot;&gt;substrを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="b3c16ce2faeb9fe19c37eae4699c0794a6365401" translate="yes" xml:space="preserve">
          <source>(W substr) You supplied a reference as the first argument to substr() used as an lvalue, which is pretty strange. Perhaps you forgot to dereference it first. See &lt;a href=&quot;perlfunc#substr&quot;&gt;&quot;substr&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="translated">（W substr）左辺値として使用されるsubstr（）への最初の引数として参照を指定しましたが、これはかなり奇妙です。おそらく、最初にそれを逆参照するのを忘れたでしょう。&lt;a href=&quot;perlfunc#substr&quot;&gt;perlfuncの「substr」を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="45bd593b8e5b2713b2a66073ce71b9f0acf28d3e" translate="yes" xml:space="preserve">
          <source>(W substr)(F) You tried to reference a substr() that pointed outside of a string. That is, the absolute value of the offset was larger than the length of the string. See &lt;a href=&quot;functions/substr&quot;&gt;substr&lt;/a&gt;. This warning is fatal if substr is used in an lvalue context (as the left hand side of an assignment or as a subroutine argument for example).</source>
          <target state="translated">（W substr）（F）文字列の外を指しているsubstr（）を参照しようとしました。つまり、オフセットの絶対値が文字列の長さを超えていました。&lt;a href=&quot;functions/substr&quot;&gt;substrを&lt;/a&gt;参照してください。この警告は、substrがlvalueコンテキストで使用されている場合（たとえば、割り当ての左側またはサブルーチンの引数として）は致命的です。</target>
        </trans-unit>
        <trans-unit id="fa3bd79208f2807a2e68a929f599e40382a62ba4" translate="yes" xml:space="preserve">
          <source>(W substr)(F) You tried to reference a substr() that pointed outside of a string. That is, the absolute value of the offset was larger than the length of the string. See &lt;a href=&quot;perlfunc#substr&quot;&gt;&quot;substr&quot; in perlfunc&lt;/a&gt;. This warning is fatal if substr is used in an lvalue context (as the left hand side of an assignment or as a subroutine argument for example).</source>
          <target state="translated">（W substr）（F）文字列の外側を指すsubstr（）を参照しようとしました。つまり、オフセットの絶対値が文字列の長さよりも大きかった。&lt;a href=&quot;perlfunc#substr&quot;&gt;perlfuncの「substr」を&lt;/a&gt;参照してください。substrが左辺値のコンテキストで使用されている場合（たとえば、割り当ての左側として、またはサブルーチン引数として）、この警告は致命的です。</target>
        </trans-unit>
        <trans-unit id="3d3783a27c8ae64e0627e00b19a488f16e27fa85" translate="yes" xml:space="preserve">
          <source>(W syntax) A format specified more picture fields than the next line supplied. See &lt;a href=&quot;perlform&quot;&gt;perlform&lt;/a&gt;.</source>
          <target state="translated">（W構文）指定された次の行よりも多くの画像フィールドを指定した形式。&lt;a href=&quot;perlform&quot;&gt;perlformを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="5675d244b6de72370cd69ca41f42a80de4dd6d27" translate="yes" xml:space="preserve">
          <source>(W syntax) An underscore (underbar) in a numeric constant did not separate two digits.</source>
          <target state="translated">（W構文）数値定数のアンダースコア（アンダーバー）で2桁が区切られていませんでした。</target>
        </trans-unit>
        <trans-unit id="1928c9501e662b0f8de723a59ea0b97a4ece6c53" translate="yes" xml:space="preserve">
          <source>(W syntax) In an ordinary expression, backslash is a unary operator that creates a reference to its argument. The use of backslash to indicate a backreference to a matched substring is valid only as part of a regular expression pattern. Trying to do this in ordinary Perl code produces a value that prints out looking like SCALAR(0xdecaf). Use the $1 form instead.</source>
          <target state="translated">（W構文）通常の式では、円記号は引数への参照を作成する単項演算子です。一致した部分文字列への後方参照を示すためのバックスラッシュの使用は、正規表現パターンの一部としてのみ有効です。これを通常のPerlコードで実行しようとすると、SCALAR（0xdecaf）のように表示される値が生成されます。代わりに$ 1フォームを使用してください。</target>
        </trans-unit>
        <trans-unit id="8f8213e084e20348a91dcc660ab8e17dcde1e497" translate="yes" xml:space="preserve">
          <source>(W syntax) In scalar context, you've used a hash key/value slice (indicated by %) to select a single element of a hash. Generally it's better to ask for a scalar value (indicated by $). The difference is that &lt;code&gt;$foo{&amp;amp;bar}&lt;/code&gt; always behaves like a scalar, both in the value it returns and when evaluating its argument, while &lt;code&gt;@foo{&amp;amp;bar}&lt;/code&gt; and provides a list context to its subscript, which can do weird things if you're expecting only one subscript. When called in list context, it also returns the key in addition to the value.</source>
          <target state="translated">（W構文）スカラーコンテキストでは、ハッシュキー/値スライス（％で示される）を使用して、ハッシュの単一の要素を選択しました。通常、スカラー値（$で示される）を要求する方が適切です。違いは、 &lt;code&gt;$foo{&amp;amp;bar}&lt;/code&gt; は、返される値とその引数を評価するときの両方で常にスカラーのように動作するのに対し、 &lt;code&gt;@foo{&amp;amp;bar}&lt;/code&gt; は、添え字にリストコンテキストを提供します。添え字が1つだけであることを期待しています。リストコンテキストで呼び出されると、値に加えてキーも返します。</target>
        </trans-unit>
        <trans-unit id="139c16302575faefa44e53211603b79b770480b6" translate="yes" xml:space="preserve">
          <source>(W syntax) In scalar context, you've used an array index/value slice (indicated by %) to select a single element of an array. Generally it's better to ask for a scalar value (indicated by $). The difference is that &lt;code&gt;$foo[&amp;amp;bar]&lt;/code&gt; always behaves like a scalar, both in the value it returns and when evaluating its argument, while &lt;code&gt;%foo[&amp;amp;bar]&lt;/code&gt; provides a list context to its subscript, which can do weird things if you're expecting only one subscript. When called in list context, it also returns the index (what &lt;code&gt;&amp;amp;bar&lt;/code&gt; returns) in addition to the value.</source>
          <target state="translated">（W構文）スカラーコンテキストでは、配列のインデックス/値スライス（％で示される）を使用して、配列の単一の要素を選択しました。通常、スカラー値（$で示される）を要求する方が適切です。違いは、 &lt;code&gt;$foo[&amp;amp;bar]&lt;/code&gt; は、返される値とその引数を評価するときの両方で、常にスカラーのように動作するのに対し、 &lt;code&gt;%foo[&amp;amp;bar]&lt;/code&gt; は、添え字にリストコンテキストを提供します。添え字が1つだけ必要です。リストコンテキストで呼び出されると、値に加えてインデックス（ &lt;code&gt;&amp;amp;bar&lt;/code&gt; が返すもの）も返します。</target>
        </trans-unit>
        <trans-unit id="aaec30e2b82d4c39ee887958d74052bd7fee0a74" translate="yes" xml:space="preserve">
          <source>(W syntax) It is possible that the &lt;code&gt;@ISA&lt;/code&gt; contains a misspelled or never loaded package name, which can result in perl choosing an unexpected parent class's method to resolve the method call. If this is deliberate you can do something like</source>
          <target state="translated">（W構文） &lt;code&gt;@ISA&lt;/code&gt; にスペルミスまたはロードされていないパッケージ名が含まれている可能性があります。その結果、perlが予期しない親クラスのメソッドを選択してメソッド呼び出しを解決する可能性があります。これが意図的なものである場合は、次のようなことができます</target>
        </trans-unit>
        <trans-unit id="d8bea33901ad329853cff0f65df1ca724eb5c0d4" translate="yes" xml:space="preserve">
          <source>(W syntax) Multidimensional arrays aren't written like &lt;code&gt;$foo[1,2,3]&lt;/code&gt; . They're written like &lt;code&gt;$foo[1][2][3]&lt;/code&gt; , as in C.</source>
          <target state="translated">（W構文）多次元配列は &lt;code&gt;$foo[1,2,3]&lt;/code&gt; ように記述されていません。Cの場合と同様に、これらは &lt;code&gt;$foo[1][2][3]&lt;/code&gt; ように記述されます。</target>
        </trans-unit>
        <trans-unit id="80669e00996092e3d1a0e78e0b65c2cb0112cd12" translate="yes" xml:space="preserve">
          <source>(W syntax) Multidimensional arrays aren't written like &lt;code&gt;$foo[1,2,3]&lt;/code&gt;. They're written like &lt;code&gt;$foo[1][2][3]&lt;/code&gt;, as in C.</source>
          <target state="translated">（W構文）多次元配列は &lt;code&gt;$foo[1,2,3]&lt;/code&gt; ように記述されていません。Cのように、 &lt;code&gt;$foo[1][2][3]&lt;/code&gt; ように記述されます。</target>
        </trans-unit>
        <trans-unit id="04868e0f94e46c3fd4ce21403945fec70d551ecb" translate="yes" xml:space="preserve">
          <source>(W syntax) Outside of patterns, backreferences live on as variables. The use of backslashes is grandfathered on the right-hand side of a substitution, but stylistically it's better to use the variable form because other Perl programmers will expect it, and it works better if there are more than 9 backreferences.</source>
          <target state="translated">（W構文）パターンの外では、後方参照は変数として存在します。バックスラッシュの使用は置換の右側で祖父ですが、スタイル的には他のPerlプログラマーがそれを期待するので変数形式を使用する方が良く、9つ以上の後方参照がある場合はよりうまく機能します。</target>
        </trans-unit>
        <trans-unit id="86e02829ec2db0aad141e5ff8b7b48fa26969bba" translate="yes" xml:space="preserve">
          <source>(W syntax) The &lt;code&gt;\c&lt;i&gt;X&lt;/i&gt;&lt;/code&gt; construct is intended to be a way to specify non-printable characters. You used it for a printable one, which is better written as simply itself, perhaps preceded by a backslash for non-word characters. Doing it the way you did is not portable between ASCII and EBCDIC platforms.</source>
          <target state="translated">（W構文） &lt;code&gt;\c&lt;i&gt;X&lt;/i&gt;&lt;/code&gt; 構文は、印刷不可能な文字を指定する方法を意図しています。印刷可能なものに使用しましたが、それは単にそれ自体として書くほうがよく、おそらく単語以外の文字のバックスラッシュが前に付きます。ASCIIとEBCDICのプラットフォーム間では、従来の方法で移植することはできません。</target>
        </trans-unit>
        <trans-unit id="1e1aacc7413fa4819361698891a0668505640b7d" translate="yes" xml:space="preserve">
          <source>(W syntax) The @ISA array contained the name of another package that doesn't seem to exist.</source>
          <target state="translated">（W構文）@ISA配列には、存在しないように見える別のパッケージの名前が含まれていました。</target>
        </trans-unit>
        <trans-unit id="f851398285267cd295332fc573c6ef5e8844f07f" translate="yes" xml:space="preserve">
          <source>(W syntax) The localization of lvalues such as &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local($x=10)&lt;/a&gt;&lt;/code&gt; is legal, but in fact the local() currently has no effect. This may change at some point in the future, but in the meantime such code is discouraged.</source>
          <target state="translated">（W構文） &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local($x=10)&lt;/a&gt;&lt;/code&gt; などの左辺値のローカライズは有効ですが、実際には現在local（）は無効です。これは将来のある時点で変更される可能性がありますが、その間、そのようなコードは推奨されません。</target>
        </trans-unit>
        <trans-unit id="7bd569ce6df70faf3a3011c533249f92b01128d2" translate="yes" xml:space="preserve">
          <source>(W syntax) The localization of lvalues such as &lt;code&gt;local($x=10)&lt;/code&gt; is legal, but in fact the local() currently has no effect. This may change at some point in the future, but in the meantime such code is discouraged.</source>
          <target state="translated">（W構文） &lt;code&gt;local($x=10)&lt;/code&gt; などの左辺値のローカリゼーションは有効ですが、実際には、local（）は現在効果がありません。これは将来のある時点で変更される可能性がありますが、その間、そのようなコードは推奨されません。</target>
        </trans-unit>
        <trans-unit id="868eed42e719045825fe91387bc9673310dc7aec" translate="yes" xml:space="preserve">
          <source>(W syntax) The non-matching operator is !~, not !=~. !=~ will be interpreted as the != (numeric not equal) and ~ (1's complement) operators: probably not what you intended.</source>
          <target state="translated">（W構文）一致しない演算子は！〜であり、！=〜ではありません。！=〜は！=（数値が等しくない）および〜（1の補数）演算子として解釈されます。おそらく意図したものではありません。</target>
        </trans-unit>
        <trans-unit id="aabd129f499f5ee7efbffa7af96de54720d08c45" translate="yes" xml:space="preserve">
          <source>(W syntax) The package variables $a and $b are used for sort comparisons. You used $a or $b in as an operand to the &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; or &lt;code&gt;cmp&lt;/code&gt; operator inside a sort comparison block, and the variable had earlier been declared as a lexical variable. Either qualify the sort variable with the package name, or rename the lexical variable.</source>
          <target state="translated">（W構文）パッケージ変数$ aおよび$ bは、ソート比較に使用されます。$ aまたは$ b inを、並べ替え比較ブロック内の &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; または &lt;code&gt;cmp&lt;/code&gt; 演算子のオペランドとして使用しましたが、その変数は以前に字句変数として宣言されていました。ソート変数をパッケージ名で修飾するか、字句変数の名前を変更してください。</target>
        </trans-unit>
        <trans-unit id="dc7dad0ebf00491f7af4d2d3eac617947a87a3f9" translate="yes" xml:space="preserve">
          <source>(W syntax) There is a possible problem with the mixing of a control flow operator (e.g. &lt;code&gt;&lt;a href=&quot;functions/return&quot;&gt;return&lt;/a&gt;&lt;/code&gt;) and a low-precedence operator like &lt;code&gt;or&lt;/code&gt; . Consider:</source>
          <target state="translated">（W構文） &lt;code&gt;or&lt;/code&gt; ような制御フロー演算子（たとえば &lt;code&gt;&lt;a href=&quot;functions/return&quot;&gt;return&lt;/a&gt;&lt;/code&gt; ）と優先順位の低い演算子の混合に問題がある可能性があります。考慮してください：</target>
        </trans-unit>
        <trans-unit id="7396f53553a9ba0906dcb36747c212abf2b3b9cf" translate="yes" xml:space="preserve">
          <source>(W syntax) There is a possible problem with the mixing of a control flow operator (e.g. &lt;code&gt;return&lt;/code&gt;) and a low-precedence operator like &lt;code&gt;or&lt;/code&gt;. Consider:</source>
          <target state="translated">（W構文）があり、制御フロー演算子の混合（例えばに問題がある可能性がある &lt;code&gt;return&lt;/code&gt; ）などの低優先順位の演算子が &lt;code&gt;or&lt;/code&gt; 。考えてみましょう：</target>
        </trans-unit>
        <trans-unit id="3163cc17558e27986562b985237677c957ba5433" translate="yes" xml:space="preserve">
          <source>(W syntax) You assigned a bareword as a signal handler name. Unfortunately, you already have a subroutine of that name declared, which means that Perl 5 will try to call the subroutine when the assignment is executed, which is probably not what you want. (If it IS what you want, put an &amp;amp; in front.)</source>
          <target state="translated">（W構文）シグナルハンドラー名としてベアワードを割り当てました。残念ながら、すでにその名前のサブルーチンが宣言されています。つまり、Perl 5は割り当てが実行されたときにそのサブルーチンを呼び出そうとしますが、これはおそらく望んでいないことです。（必要な場合は、＆を前に付けます。）</target>
        </trans-unit>
        <trans-unit id="454abddd8e9efc0d1f94b63b62c5983024ef3e6a" translate="yes" xml:space="preserve">
          <source>(W syntax) You called stat() on an array, but the array will be coerced to a scalar - the number of elements in the array.</source>
          <target state="translated">（W構文）配列でstat（）を呼び出しましたが、配列はスカラー（配列内の要素の数）に強制変換されます。</target>
        </trans-unit>
        <trans-unit id="3f6363d73db132f7df27b47f3074c7aeebcfa96a" translate="yes" xml:space="preserve">
          <source>(W syntax) You have used a pattern where Perl expected to find a string, as in the first argument to &lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join&lt;/a&gt;&lt;/code&gt;. Perl will treat the true or false result of matching the pattern against $_ as the string, which is probably not what you had in mind.</source>
          <target state="translated">（W構文） &lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join&lt;/a&gt;&lt;/code&gt; の最初の引数のように、Perlが文字列を見つけることを期待するパターンを使用しました。Perlは、パターンを$ _と照合した真または偽の結果を文字列として扱いますが、これはおそらくあなたが考えていたものではありません。</target>
        </trans-unit>
        <trans-unit id="9cdfb0330dca0a5928adfee6584985a16f53364e" translate="yes" xml:space="preserve">
          <source>(W syntax) You have used a pattern where Perl expected to find a string, as in the first argument to &lt;code&gt;join&lt;/code&gt;. Perl will treat the true or false result of matching the pattern against $_ as the string, which is probably not what you had in mind.</source>
          <target state="translated">（W構文） &lt;code&gt;join&lt;/code&gt; の最初の引数のように、Perlが文字列を見つけることを期待するパターンを使用しました。Perlは、パターンを$ _と照合した結果の真偽を文字列として扱いますが、これはおそらくあなたが考えていたものではありません。</target>
        </trans-unit>
        <trans-unit id="9cd4a5c747e6ea0c6874c1cfe913ee77b669c12b" translate="yes" xml:space="preserve">
          <source>(W syntax) You said</source>
          <target state="translated">（W構文）あなたは言った</target>
        </trans-unit>
        <trans-unit id="4d42f0406bbe7b69e8abda38fcb04298e09064a5" translate="yes" xml:space="preserve">
          <source>(W syntax) You used &lt;code&gt;$[&lt;/code&gt; in a comparison, such as:</source>
          <target state="translated">（W構文） &lt;code&gt;$[&lt;/code&gt; を次のような比較で使用しました：</target>
        </trans-unit>
        <trans-unit id="33175e7b41467f7650bcaf1be588d001196cdd86" translate="yes" xml:space="preserve">
          <source>(W syntax) You used length() on either an array or a hash when you probably wanted a count of the items.</source>
          <target state="translated">（W構文）おそらくアイテムの数が必要なときに、配列またはハッシュでlength（）を使用しました。</target>
        </trans-unit>
        <trans-unit id="72ebcd152cb072c4a9ccbb021c00555dbd6dc1ac" translate="yes" xml:space="preserve">
          <source>(W syntax) You used the old package separator, &quot;'&quot;, in a variable named inside a double-quoted string; e.g., &lt;code&gt;&quot;In $name's house&quot;&lt;/code&gt;. This is equivalent to &lt;code&gt;&quot;In $name::s house&quot;&lt;/code&gt;. If you meant the former, put a backslash before the apostrophe (&lt;code&gt;&quot;In $name\'s house&quot;&lt;/code&gt;).</source>
          <target state="translated">（W構文）二重引用符で囲まれた文字列内の名前の変数で、古いパッケージ区切り文字「 '」を使用しました。例： &lt;code&gt;&quot;In $name's house&quot;&lt;/code&gt; 。これは &lt;code&gt;&quot;In $name::s house&quot;&lt;/code&gt; と同等です。前者を意味する場合は、アポストロフィの前に円記号を付けます（ &lt;code&gt;&quot;In $name\'s house&quot;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="5612f1be811be95b9ea2e71d0bc87cb76a68fc16" translate="yes" xml:space="preserve">
          <source>(W syntax) You used the push() or unshift() function with no arguments apart from the array, like &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push(@x)&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/unshift&quot;&gt;unshift(@foo)&lt;/a&gt;&lt;/code&gt;. That won't usually have any effect on the array, so is completely useless. It's possible in principle that push(@tied_array) could have some effect if the array is tied to a class which implements a PUSH method. If so, you can write it as &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push(@tied_array,())&lt;/a&gt;&lt;/code&gt; to avoid this warning.</source>
          <target state="translated">（W構文） &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push(@x)&lt;/a&gt;&lt;/code&gt; や &lt;code&gt;&lt;a href=&quot;functions/unshift&quot;&gt;unshift(@foo)&lt;/a&gt;&lt;/code&gt; のように、配列以外の引数なしでpush（）またはunshift（）関数を使用しました。これは通常、配列に影響を与えないため、まったく役に立ちません。原則として、PUSHメソッドを実装するクラスに配列が関連付けられている場合、push（@tied_array）が何らかの影響を与える可能性があります。その場合は、 &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push(@tied_array,())&lt;/a&gt;&lt;/code&gt; として記述して、この警告を回避できます。</target>
        </trans-unit>
        <trans-unit id="51fcff0092b8ab3062fd4590001862a71c12702d" translate="yes" xml:space="preserve">
          <source>(W syntax) You used the push() or unshift() function with no arguments apart from the array, like &lt;code&gt;push(@x)&lt;/code&gt; or &lt;code&gt;unshift(@foo)&lt;/code&gt;. That won't usually have any effect on the array, so is completely useless. It's possible in principle that push(@tied_array) could have some effect if the array is tied to a class which implements a PUSH method. If so, you can write it as &lt;code&gt;push(@tied_array,())&lt;/code&gt; to avoid this warning.</source>
          <target state="translated">（W構文） &lt;code&gt;push(@x)&lt;/code&gt; や &lt;code&gt;unshift(@foo)&lt;/code&gt; のように、配列以外の引数なしでpush（）またはunshift（）関数を使用しました。通常、これはアレイに影響を与えないため、まったく役に立ちません。原則として、配列がPUSHメソッドを実装するクラスに関連付けられている場合、push（@tied_array）が何らかの影響を与える可能性があります。その場合、この警告を回避するために &lt;code&gt;push(@tied_array,())&lt;/code&gt; と書くことができます。</target>
        </trans-unit>
        <trans-unit id="9d9cf6e3535b5c2226e9e739821bfc01062bb73b" translate="yes" xml:space="preserve">
          <source>(W syntax) You wrote your assignment operator backwards. The = must always come last, to avoid ambiguity with subsequent unary operators.</source>
          <target state="translated">（W構文）代入演算子を逆方向に記述した。後続の単項演算子とのあいまいさを避けるために、=は常に最後に置く必要があります。</target>
        </trans-unit>
        <trans-unit id="a8c628713322c0801c78ea0810ebb090ca0b28df" translate="yes" xml:space="preserve">
          <source>(W syntax) You've run afoul of the rule that says that any list operator followed by parentheses turns into a function, with all the list operators arguments found inside the parentheses. See &lt;a href=&quot;perlop#Terms-and-List-Operators-%28Leftward%29&quot;&gt;&quot;Terms and List Operators (Leftward)&quot; in perlop&lt;/a&gt;.</source>
          <target state="translated">（W構文）リスト演算子の後に括弧が続くものはすべて関数になり、すべてのリスト演算子の引数が括弧内にあるというルールに違反しました。&lt;a href=&quot;perlop#Terms-and-List-Operators-%28Leftward%29&quot;&gt;perlopの「用語とリスト演算子（左向き）」を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="0988dc3825f261bfe7e6ca09e93a7ef79f9698f8" translate="yes" xml:space="preserve">
          <source>(W syntax) You've run afoul of the rule that says that any list operator followed by parentheses turns into a function, with all the list operators arguments found inside the parentheses. See &lt;a href=&quot;perlop#Terms-and-List-Operators-(Leftward)&quot;&gt;Terms and List Operators (Leftward) in perlop&lt;/a&gt;.</source>
          <target state="translated">（W構文）かっこが続くすべてのリスト演算子が関数になり、すべてのリスト演算子の引数がかっこ内にあるというルールに違反しました。&lt;a href=&quot;perlop#Terms-and-List-Operators-(Leftward)&quot;&gt;perlopの用語とリスト演算子（左）を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="8e677e4399169ad9de0bcb39499a466a52862aad" translate="yes" xml:space="preserve">
          <source>(W syntax) You've used a hash slice (indicated by @) to select a single element of a hash. Generally it's better to ask for a scalar value (indicated by $). The difference is that &lt;code&gt;$foo{&amp;amp;bar}&lt;/code&gt; always behaves like a scalar, both when assigning to it and when evaluating its argument, while &lt;code&gt;@foo{&amp;amp;bar}&lt;/code&gt; behaves like a list when you assign to it, and provides a list context to its subscript, which can do weird things if you're expecting only one subscript.</source>
          <target state="translated">（W構文）ハッシュスライス（@で示される）を使用して、ハッシュの単一の要素を選択しました。通常、スカラー値（$で示される）を要求する方が適切です。違いは、 &lt;code&gt;$foo{&amp;amp;bar}&lt;/code&gt; は、割り当て時と引数の評価時の両方で常にスカラーのように動作し、 &lt;code&gt;@foo{&amp;amp;bar}&lt;/code&gt; は、割り当て時にリストのように動作し、リストのコンテキストを添え字に提供することです。 、これは、添え字が1つしか期待されていない場合に、奇妙なことを行う可能性があります。</target>
        </trans-unit>
        <trans-unit id="95b0a75562e174b2496250be14ddc21db7f4d104" translate="yes" xml:space="preserve">
          <source>(W syntax) You've used an array slice (indicated by @) to select a single element of an array. Generally it's better to ask for a scalar value (indicated by $). The difference is that &lt;code&gt;$foo[&amp;amp;bar]&lt;/code&gt; always behaves like a scalar, both when assigning to it and when evaluating its argument, while &lt;code&gt;@foo[&amp;amp;bar]&lt;/code&gt; behaves like a list when you assign to it, and provides a list context to its subscript, which can do weird things if you're expecting only one subscript.</source>
          <target state="translated">（W構文）配列スライス（@で示される）を使用して、配列の単一の要素を選択しました。通常、スカラー値（$で示される）を要求する方が適切です。違いは、 &lt;code&gt;$foo[&amp;amp;bar]&lt;/code&gt; は、割り当て時と引数の評価時の両方で常にスカラーのように動作するのに対し、 &lt;code&gt;@foo[&amp;amp;bar]&lt;/code&gt; は、割り当て時にリストのように動作し、リストコンテキストを添え字に提供することです。 、これは、添え字が1つしか期待されていない場合に、奇妙なことを行う可能性があります。</target>
        </trans-unit>
        <trans-unit id="641f51994699613e1549f7ef209d11a26e2b585e" translate="yes" xml:space="preserve">
          <source>(W syscalls) Embedded \0 characters in pathnames or other system call arguments produce a warning as of 5.20. The parts after the \0 were formerly ignored by system calls.</source>
          <target state="translated">（W syscalls）パス名またはその他のシステムコール引数に埋め込まれた\ 0文字は、5.20以降の警告を生成します。\ 0の後の部分は、以前はシステムコールによって無視されていました。</target>
        </trans-unit>
        <trans-unit id="eea1d51b89def0acf7f618b47547913acc879ac7" translate="yes" xml:space="preserve">
          <source>(W taint, deprecated) You have supplied &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system()&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec()&lt;/a&gt;&lt;/code&gt; with multiple arguments and at least one of them is tainted. This used to be allowed but will become a fatal error in a future version of perl. Untaint your arguments. See &lt;a href=&quot;perlsec&quot;&gt;perlsec&lt;/a&gt;.</source>
          <target state="translated">（W taint、非推奨） &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system()&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec()&lt;/a&gt;&lt;/code&gt; に複数の引数を指定しましたが、それらの少なくとも1つが汚染されています。以前は許可されていましたが、将来のバージョンのperlでは致命的なエラーになります。あなたの議論を汚さないでください。&lt;a href=&quot;perlsec&quot;&gt;perlsecを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="191ddfc76359c017ecd49d936cabb2aba72906d2" translate="yes" xml:space="preserve">
          <source>(W taint, deprecated) You have supplied &lt;code&gt;system()&lt;/code&gt; or &lt;code&gt;exec()&lt;/code&gt; with multiple arguments and at least one of them is tainted. This used to be allowed but will become a fatal error in a future version of perl. Untaint your arguments. See &lt;a href=&quot;perlsec&quot;&gt;perlsec&lt;/a&gt;.</source>
          <target state="translated">（W汚染、非推奨） &lt;code&gt;system()&lt;/code&gt; または &lt;code&gt;exec()&lt;/code&gt; に複数の引数を指定しましたが、そのうちの少なくとも1つが汚染されています。これは以前は許可されていましたが、perlの将来のバージョンでは致命的なエラーになります。あなたの議論を汚さないでください。&lt;a href=&quot;perlsec&quot;&gt;perlsecを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="87212ba40dbca26f039d3c5f4668d06844b8cebb" translate="yes" xml:space="preserve">
          <source>(W uninitialized) An undefined value was used as if it were already defined. It was interpreted as a &quot;&quot; or a 0, but maybe it was a mistake. To suppress this warning assign a defined value to your variables.</source>
          <target state="translated">（W uninitialized）未定義の値が、すでに定義されているかのように使用されました。「」または「0」と解釈されましたが、おそらく誤りでした。この警告を抑制するには、定義済みの値を変数に割り当てます。</target>
        </trans-unit>
        <trans-unit id="c21109fd4c9277652f34f7607902e64df01bc950" translate="yes" xml:space="preserve">
          <source>(W unopened) An I/O operation was attempted on a filehandle that was never initialized. You need to do an open(), a sysopen(), or a socket() call, or call a constructor from the FileHandle package.</source>
          <target state="translated">（W unopened）初期化されていないファイルハンドルでI / O操作が試行されました。open（）、sysopen（）、またはsocket（）呼び出しを行うか、FileHandleパッケージからコンストラクターを呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="9d13ce165320d52b11e43e90a5f319b3dff07700" translate="yes" xml:space="preserve">
          <source>(W unopened) You tried binmode() on a filehandle that was never opened. Check your control flow and number of arguments.</source>
          <target state="translated">（W unopened）開かれていないファイルハンドルでbinmode（）を実行しようとしました。制御フローと引数の数を確認してください。</target>
        </trans-unit>
        <trans-unit id="823eb5a294fbebdb362bfa7f1c4f046786f00b26" translate="yes" xml:space="preserve">
          <source>(W unopened) You tried chdir() on a filehandle that was never opened.</source>
          <target state="translated">（W unopened）開かれたことのないファイルハンドルでchdir（）を試しました。</target>
        </trans-unit>
        <trans-unit id="33254325809ca0f089876420266f8d46dd3cd36e" translate="yes" xml:space="preserve">
          <source>(W unopened) You tried ioctl() on a filehandle that was never opened. Check your control flow and number of arguments.</source>
          <target state="translated">（W unopened）決して開かれなかったファイルハンドルでioctl（）を試みました。制御フローと引数の数を確認してください。</target>
        </trans-unit>
        <trans-unit id="aecaf35d1f0c4447f15709cfdd62df13ce2bfd7b" translate="yes" xml:space="preserve">
          <source>(W unopened) You tried to close a filehandle that was never opened.</source>
          <target state="translated">（W unopened）開かれなかったファイルハンドルを閉じようとしました。</target>
        </trans-unit>
        <trans-unit id="dc1d8c0f0b969290f1a5f95acb33bce413ff9ddb" translate="yes" xml:space="preserve">
          <source>(W unopened) You tried to invoke a file test operator on a filehandle that isn't open. Check your control flow. See also &lt;a href=&quot;functions/-x&quot;&gt;-X&lt;/a&gt;.</source>
          <target state="translated">（W unopened）開いていないファイルハンドルでファイルテストオペレーターを呼び出そうとしました。制御フローを確認してください。&lt;a href=&quot;functions/-x&quot;&gt;-X&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="ba22d8d96230581f685bde90e640c5f1bd374866" translate="yes" xml:space="preserve">
          <source>(W unopened) You tried to invoke a file test operator on a filehandle that isn't open. Check your control flow. See also &lt;a href=&quot;perlfunc#-X&quot;&gt;&quot;-X&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="translated">（W未開封）開いていないファイルハンドルでファイルテスト演算子を呼び出そうとしました。制御フローを確認してください。&lt;a href=&quot;perlfunc#-X&quot;&gt;perlfuncの「-X」&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="4ba59f97dfd212a4396e40fc430b085c942e206e" translate="yes" xml:space="preserve">
          <source>(W unopened) You tried to read from a filehandle that was never opened.</source>
          <target state="translated">（W unopened）開かれていないファイルハンドルから読み込もうとしました。</target>
        </trans-unit>
        <trans-unit id="7ca18c8e0d35c1b1ba436b62ea346403c379a134" translate="yes" xml:space="preserve">
          <source>(W unopened) You tried to use the seek() or sysseek() function on a filehandle that was either never opened or has since been closed.</source>
          <target state="translated">（W unopened）一度も開かれていないか、または閉じられているファイルハンドルに対してseek（）関数またはsysseek（）関数を使用しようとしました。</target>
        </trans-unit>
        <trans-unit id="a687149754f7310ab9223be0e7d36b0c518b5d3d" translate="yes" xml:space="preserve">
          <source>(W unopened) You tried to use the stat() function on a filehandle that was either never opened or has since been closed.</source>
          <target state="translated">（W unopened）一度も開かれていないか、または閉じられているファイルハンドルに対してstat（）関数を使用しようとしました。</target>
        </trans-unit>
        <trans-unit id="7d9b36aee9bb72aee190203d53735cc95832569f" translate="yes" xml:space="preserve">
          <source>(W unopened) You tried to use the tell() function on a filehandle that was either never opened or has since been closed.</source>
          <target state="translated">（W unopened）一度も開かれていないか、または閉じられているファイルハンドルに対して、tell（）関数を使用しようとしました。</target>
        </trans-unit>
        <trans-unit id="b0b2a4cea9ad3f14457445c6831b6e0a484b46c2" translate="yes" xml:space="preserve">
          <source>(W unpack) You have applied the same modifier more than once after a type in a pack template. See &lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;.</source>
          <target state="translated">（W unpack）パックテンプレートのタイプの後に同じ修飾子を複数回適用しました。&lt;a href=&quot;functions/pack&quot;&gt;パックを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="941681eda2db699a18f120a6b448df46afbef468" translate="yes" xml:space="preserve">
          <source>(W unpack) You have applied the same modifier more than once after a type in a pack template. See &lt;a href=&quot;perlfunc#pack&quot;&gt;&quot;pack&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="translated">（W unpack）パックテンプレートに入力した後、同じ修飾子を複数回適用しました。&lt;a href=&quot;perlfunc#pack&quot;&gt;perlfuncの「pack」を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="c76fe56910f2e01af3e35d2cf6edcb6541e9310e" translate="yes" xml:space="preserve">
          <source>(W unpack) You tried something like</source>
          <target state="translated">（Wアンパック）あなたは何かを試しました</target>
        </trans-unit>
        <trans-unit id="f8d42c367e5bdfdeea5af0d3e04a3e7a34f2c9f5" translate="yes" xml:space="preserve">
          <source>(W untie) A copy of the object returned from &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; (or &lt;code&gt;&lt;a href=&quot;functions/tied&quot;&gt;tied&lt;/a&gt;&lt;/code&gt;) was still valid when &lt;code&gt;&lt;a href=&quot;functions/untie&quot;&gt;untie&lt;/a&gt;&lt;/code&gt; was called.</source>
          <target state="translated">（W untie） &lt;code&gt;&lt;a href=&quot;functions/untie&quot;&gt;untie&lt;/a&gt;&lt;/code&gt; が呼び出されたとき、 &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; （または &lt;code&gt;&lt;a href=&quot;functions/tied&quot;&gt;tied&lt;/a&gt;&lt;/code&gt; ）から返されたオブジェクトのコピーはまだ有効でした。</target>
        </trans-unit>
        <trans-unit id="cabf61570265befbb21d34e71c8aab20c5e1624b" translate="yes" xml:space="preserve">
          <source>(W untie) A copy of the object returned from &lt;code&gt;tie&lt;/code&gt; (or &lt;code&gt;tied&lt;/code&gt;) was still valid when &lt;code&gt;untie&lt;/code&gt; was called.</source>
          <target state="translated">（W untie） &lt;code&gt;tie&lt;/code&gt; から返された（または &lt;code&gt;tied&lt;/code&gt; ）オブジェクトのコピーは、 &lt;code&gt;untie&lt;/code&gt; が呼び出されたときにまだ有効でした。</target>
        </trans-unit>
        <trans-unit id="46f9020a7dcd787c1bf1b13be87c622895afbd82" translate="yes" xml:space="preserve">
          <source>(W utf8) You passed a negative number to &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr&lt;/a&gt;&lt;/code&gt;. Negative numbers are not valid character numbers, so it returns the Unicode replacement character (U+FFFD).</source>
          <target state="translated">（W utf8） &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr&lt;/a&gt;&lt;/code&gt; に負の数を渡しました。負の数は有効な文字番号ではないため、Unicode置換文字（U + FFFD）を返します。</target>
        </trans-unit>
        <trans-unit id="b58756471d926c76c1ab002a4d662fb9886153dd" translate="yes" xml:space="preserve">
          <source>(W utf8) You passed a negative number to &lt;code&gt;chr&lt;/code&gt;. Negative numbers are not valid character numbers, so it returns the Unicode replacement character (U+FFFD).</source>
          <target state="translated">（W utf8）負の数を &lt;code&gt;chr&lt;/code&gt; に渡しました。負の数は有効な文字番号ではないため、Unicode置換文字（U + FFFD）を返します。</target>
        </trans-unit>
        <trans-unit id="66ebf288df73553c4980b27e84deb25ec3183f3c" translate="yes" xml:space="preserve">
          <source>(W utf8) You tried to open a reference to a scalar for read or append where the scalar contained code points over 0xFF. In-memory files model on-disk files and can only contain bytes.</source>
          <target state="translated">（W utf8）読み取りまたは追加のためにスカラーへの参照を開こうとしましたが、スカラーに0xFFを超えるコードポイントが含まれていました。インメモリファイルはディスク上のファイルをモデル化し、バイトのみを含むことができます。</target>
        </trans-unit>
        <trans-unit id="8848dabe5fdd98b21a0c9d16e12de50ff0059dae" translate="yes" xml:space="preserve">
          <source>(W void) A CHECK or INIT block is being defined during run time proper, when the opportunity to run them has already passed. Perhaps you are loading a file with &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt; when you should be using &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; instead. Or perhaps you should put the &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt; inside a BEGIN block.</source>
          <target state="translated">（W void）CHECKまたはINITブロックは、適切な実行時に定義されていますが、それらを実行する機会がすでに渡されています。おそらく、代わりに &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; を使用する必要があるときに &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt; を使用してファイルをロードしています。または、BEGINブロック内に &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt; を配置する必要があります。</target>
        </trans-unit>
        <trans-unit id="e7e6a78d91d6843e00f27a1dd8c24417212661c7" translate="yes" xml:space="preserve">
          <source>(W void) A CHECK or INIT block is being defined during run time proper, when the opportunity to run them has already passed. Perhaps you are loading a file with &lt;code&gt;require&lt;/code&gt; or &lt;code&gt;do&lt;/code&gt; when you should be using &lt;code&gt;use&lt;/code&gt; instead. Or perhaps you should put the &lt;code&gt;require&lt;/code&gt; or &lt;code&gt;do&lt;/code&gt; inside a BEGIN block.</source>
          <target state="translated">（W void）CHECKまたはINITブロックは、それらを実行する機会がすでに過ぎている実行時に適切に定義されています。おそらく、代わりに &lt;code&gt;use&lt;/code&gt; を使用する必要があるときに &lt;code&gt;require&lt;/code&gt; または &lt;code&gt;do&lt;/code&gt; を使用してファイルをロードしています。それとも入れなければならない &lt;code&gt;require&lt;/code&gt; か &lt;code&gt;do&lt;/code&gt; BEGINブロックの内側。</target>
        </trans-unit>
        <trans-unit id="90db3f1351f4d1a7f3df67accb71dce113e606f5" translate="yes" xml:space="preserve">
          <source>(W void) You did something without a side effect in a context that does nothing with the return value, such as a statement that doesn't return a value from a block, or the left side of a scalar comma operator. Very often this points not to stupidity on your part, but a failure of Perl to parse your program the way you thought it would. For example, you'd get this if you mixed up your C precedence with Python precedence and said</source>
          <target state="translated">（W void）ブロックから値を返さないステートメントやスカラーコンマ演算子の左側など、戻り値に対して何もしないコンテキストで副作用のない何かを行いました。多くの場合、これはあなたの側の愚かさを示していませんが、Perlがあなたが思ったようにプログラムを解析できないことを示しています。たとえば、Cの優先順位とPythonの優先順位を混同して言った場合、これが得られます。</target>
        </trans-unit>
        <trans-unit id="8c28b024772920f2fbe93cb3859bc1a02354768f" translate="yes" xml:space="preserve">
          <source>(W void) You used sort in scalar context, as in :</source>
          <target state="translated">（W void）次のように、スカラーコンテキストで並べ替えを使用しました：</target>
        </trans-unit>
        <trans-unit id="d2694030ac2d81eb103264e70e38e170506566bf" translate="yes" xml:space="preserve">
          <source>(W) &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; overload&lt;/code&gt; was passed an argument it did not recognize. Did you mistype an operator?</source>
          <target state="translated">（W） &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; overload&lt;/code&gt; を&lt;a href=&quot;functions/use&quot;&gt;使用すると&lt;/a&gt;、認識できない引数が渡されました。演算子を間違って入力しましたか？</target>
        </trans-unit>
        <trans-unit id="e3ba7d4dfa17e099cdb8c2d3fac3b7c6f3304239" translate="yes" xml:space="preserve">
          <source>(W) &lt;code&gt;use overload&lt;/code&gt; was passed an argument it did not recognize. Did you mistype an operator?</source>
          <target state="translated">（W） &lt;code&gt;use overload&lt;/code&gt; に認識されなかった引数が渡されました。演算子をタイプミスしましたか？</target>
        </trans-unit>
        <trans-unit id="21016a542724c1bfad5e9b7a16b1394b21adc2e5" translate="yes" xml:space="preserve">
          <source>(W) Pod::PlainText encountered a &lt;code&gt;=back&lt;/code&gt; command that didn't correspond to an &lt;code&gt;=over&lt;/code&gt; command.</source>
          <target state="translated">（W）Pod :: PlainTextは、 &lt;code&gt;=over&lt;/code&gt; コマンドに対応しない &lt;code&gt;=back&lt;/code&gt; コマンドを検出しました。</target>
        </trans-unit>
        <trans-unit id="26bfb80fa009b521734a344e5a06b87f176f5beb" translate="yes" xml:space="preserve">
          <source>(W) Something has gone wrong in internal &lt;code&gt;=item&lt;/code&gt; processing. These messages indicate a bug in Pod::Text; you should never see them.</source>
          <target state="translated">（W）内部の &lt;code&gt;=item&lt;/code&gt; 処理で問題が発生しました。これらのメッセージは、Pod :: Textのバグを示しています。あなたはそれらを見ることはありません。</target>
        </trans-unit>
        <trans-unit id="501975fffba0edbf57d1160976c85133c54a7baf" translate="yes" xml:space="preserve">
          <source>(W) Something has gone wrong in internal &lt;code&gt;=item&lt;/code&gt; processing. This message indicates a bug in Pod::PlainText; you should never see it.</source>
          <target state="translated">（W）内部の &lt;code&gt;=item&lt;/code&gt; 処理で問題が発生しました。このメッセージは、Pod :: PlainTextのバグを示しています。あなたはそれを見ることはありません。</target>
        </trans-unit>
        <trans-unit id="c30dd949e9f2b3a1878daa9c110c45e03e38a3c9" translate="yes" xml:space="preserve">
          <source>(W) The POD source contained a non-standard internal sequence (something of the form &lt;code&gt;X&amp;lt;&amp;gt;&lt;/code&gt; ) that Pod::PlainText didn't know about.</source>
          <target state="translated">（W）PODソースに、Pod :: PlainTextが認識していなかった非標準の内部シーケンス（ &lt;code&gt;X&amp;lt;&amp;gt;&lt;/code&gt; 形式の何か）が含まれていました。</target>
        </trans-unit>
        <trans-unit id="ea328e676adcf58b0759f1c04dd7eec880ac50e0" translate="yes" xml:space="preserve">
          <source>(W) The POD source contained an &lt;code&gt;E&amp;lt;&amp;gt;&lt;/code&gt; escape that Pod::PlainText didn't know about.</source>
          <target state="translated">（W）PODソースには、Pod :: PlainTextが認識しなかった &lt;code&gt;E&amp;lt;&amp;gt;&lt;/code&gt; エスケープが含まれていました。</target>
        </trans-unit>
        <trans-unit id="0a887755cdd505b29af6782ffbf2c58e91dc679f" translate="yes" xml:space="preserve">
          <source>(W) The call to overload::constant contained an odd number of arguments. The arguments should come in pairs.</source>
          <target state="translated">（W）overload :: constantの呼び出しに奇数の引数が含まれていました。引数はペアにする必要があります。</target>
        </trans-unit>
        <trans-unit id="70cde34602e73ad7fd4f730db8c2bcf41f111987" translate="yes" xml:space="preserve">
          <source>(W) The given character is not a valid pack or unpack type but used to be silently ignored.</source>
          <target state="translated">（W）指定された文字は有効なパックまたはアンパックタイプではありませんが、黙って無視されていました。</target>
        </trans-unit>
        <trans-unit id="e14f1e6bfcb9badd4f5af39b1f5de336049edc31" translate="yes" xml:space="preserve">
          <source>(W) The same, but in ANSI_COLORS_ALIASES. The color mapping was ignored.</source>
          <target state="translated">（W）同じですが、ANSI_COLORS_ALIASESにあります。カラーマッピングは無視されました。</target>
        </trans-unit>
        <trans-unit id="d96a0ecd53e817b1ae2d676c0119d14bcfa595eb" translate="yes" xml:space="preserve">
          <source>(W) The second (fourth, sixth, ...) argument of overload::constant needs to be a code reference. Either an anonymous subroutine, or a reference to a subroutine.</source>
          <target state="translated">（W）overload :: constantの2番目（4番目、6番目、...）の引数は、コード参照である必要があります。無名のサブルーチン、またはサブルーチンへの参照。</target>
        </trans-unit>
        <trans-unit id="5eb1c96d7547fa58d3105399dbdfb8e95f920587" translate="yes" xml:space="preserve">
          <source>(W) The specified color mapping from ANSI_COLORS_ALIASES is not valid and could not be parsed. It was ignored.</source>
          <target state="translated">（W）ANSI_COLORS_ALIASESから指定されたカラーマッピングは無効であり、解析できませんでした。無視されました。</target>
        </trans-unit>
        <trans-unit id="67419e06ec8f127222c04b5682b2736a4e491752" translate="yes" xml:space="preserve">
          <source>(W) This is a standard message issued by OS/2 applications, while *nix applications die in silence. It is considered a feature of the OS/2 port. One can easily disable this by appropriate sighandlers, see &lt;a href=&quot;perlipc#Signals&quot;&gt;&quot;Signals&quot; in perlipc&lt;/a&gt;. See also &quot;Process terminated by SIGTERM/SIGINT&quot; in &lt;a href=&quot;perlos2&quot;&gt;perlos2&lt;/a&gt;.</source>
          <target state="translated">（W）これはOS / 2アプリケーションによって発行される標準メッセージですが、* nixアプリケーションは無音で停止します。これは、OS / 2ポートの機能と見なされます。適切なシグハンドラによってこれを簡単に無効にすることができます。perlipcの&lt;a href=&quot;perlipc#Signals&quot;&gt;「Signals」を&lt;/a&gt;参照してください。&lt;a href=&quot;perlos2&quot;&gt;perlos2の&lt;/a&gt;「SIGTERM / SIGINTによって終了されたプロセス」も参照してください。</target>
        </trans-unit>
        <trans-unit id="8acaee73233dd30d36c968a81b33d5c8ccba7c36" translate="yes" xml:space="preserve">
          <source>(W) This is a standard message issued by OS/2 applications, while *nix applications die in silence. It is considered a feature of the OS/2 port. One can easily disable this by appropriate sighandlers, see &lt;a href=&quot;perlipc#Signals&quot;&gt;Signals in perlipc&lt;/a&gt;. See also &quot;Process terminated by SIGTERM/SIGINT&quot; in &lt;a href=&quot;perlos2&quot;&gt;perlos2&lt;/a&gt;.</source>
          <target state="translated">（W）これはOS / 2アプリケーションによって発行される標準メッセージですが、* nixアプリケーションは沈黙します。OS / 2ポートの機能と見なされます。適切なsighandlerでこれを簡単に無効にすることができます。perlipcの&lt;a href=&quot;perlipc#Signals&quot;&gt;シグナルを&lt;/a&gt;参照してください。&lt;a href=&quot;perlos2&quot;&gt;perlos2の&lt;/a&gt;「SIGTERM / SIGINTによって終了するプロセス」も参照してください。</target>
        </trans-unit>
        <trans-unit id="1c10232da8d5a7a1db96c9e95d4de6579ffb3dcc" translate="yes" xml:space="preserve">
          <source>(W) This warning may be due to running a perl5 script through a perl4 interpreter, especially if the word that is being warned about is &quot;use&quot; or &quot;my&quot;.</source>
          <target state="translated">（W）この警告は、特に警告されている単語が「use」または「my」である場合、perl4インタープリターを介してperl5スクリプトを実行したことが原因である可能性があります。</target>
        </trans-unit>
        <trans-unit id="1212f80ef134690b670704c90585c6d0920a4a27" translate="yes" xml:space="preserve">
          <source>(W) You did &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re;&lt;/code&gt; without any arguments. That isn't very useful.</source>
          <target state="translated">（W） &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re;&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;使用し&lt;/a&gt;ました。引数なし。それはあまり役に立ちません。</target>
        </trans-unit>
        <trans-unit id="bab248385c5c2b1c84a111f5b896dc72b0354a3f" translate="yes" xml:space="preserve">
          <source>(W) You did &lt;code&gt;use re;&lt;/code&gt; without any arguments. That isn't very useful.</source>
          <target state="translated">（W）あなたは &lt;code&gt;use re;&lt;/code&gt; 引数なし。それはあまり役に立ちません。</target>
        </trans-unit>
        <trans-unit id="e38b2fa8496c1774dd31b2c5fdb79143f6d43dd2" translate="yes" xml:space="preserve">
          <source>(W) You passed warn() an empty string (the equivalent of &lt;code&gt;&lt;a href=&quot;functions/warn&quot;&gt;warn&lt;/a&gt; &quot;&quot;&lt;/code&gt; ) or you called it with no args and &lt;code&gt;$@&lt;/code&gt; was empty.</source>
          <target state="translated">（W）warn（）に空の文字列（ &lt;code&gt;&lt;a href=&quot;functions/warn&quot;&gt;warn&lt;/a&gt; &quot;&quot;&lt;/code&gt; に相当）を渡したか、引数なしで呼び出し、 &lt;code&gt;$@&lt;/code&gt; が空でした。</target>
        </trans-unit>
        <trans-unit id="6cf26d05866ab1c95908d2f20ddf8e96062948be" translate="yes" xml:space="preserve">
          <source>(W) You passed warn() an empty string (the equivalent of &lt;code&gt;warn &quot;&quot;&lt;/code&gt;) or you called it with no args and &lt;code&gt;$@&lt;/code&gt; was empty.</source>
          <target state="translated">（W）warn（）に空の文字列（ &lt;code&gt;warn &quot;&quot;&lt;/code&gt; と同等）を渡したか、引数なしで呼び出し、 &lt;code&gt;$@&lt;/code&gt; が空でした。</target>
        </trans-unit>
        <trans-unit id="fc9c0aa78325e04e4fc87ad0e353fe824600632f" translate="yes" xml:space="preserve">
          <source>(W) You probably mistyped a constant color name such as:</source>
          <target state="translated">（W）次のような定数カラー名を誤って入力した可能性があります。</target>
        </trans-unit>
        <trans-unit id="0ad31e97078c78dbc2769be19839fd69cffdfd38" translate="yes" xml:space="preserve">
          <source>(W) You probably said %hash{$key} when you meant $hash{$key} or @hash{@keys}. On the other hand, maybe you just meant %hash and got carried away.</source>
          <target state="translated">（W）$ hash {$ key}または@hash {@keys}を意味するときに、おそらく％hash {$ key}と言ったでしょう。一方、たぶんあなたは単に％hashを意味していて、夢中になってしまったのかもしれません。</target>
        </trans-unit>
        <trans-unit id="3978bcd1515ac8ee88075eadc0c3770c9967d932" translate="yes" xml:space="preserve">
          <source>(W) You specified an invalid alias name on the left hand of the equal sign in a color mapping in ANSI_COLORS_ALIASES. The color mapping was ignored.</source>
          <target state="translated">（W）ANSI_COLORS_ALIASESのカラーマッピングで、等号の左側に無効なエイリアス名を指定しました。カラーマッピングは無視されました。</target>
        </trans-unit>
        <trans-unit id="1568d1a0f3b426e26a4ff1c09af9fd2ef4f0d8e9" translate="yes" xml:space="preserve">
          <source>(W) You specified an invalid attribute name on the right hand of the equal sign in a color mapping in ANSI_COLORS_ALIASES. The color mapping was ignored.</source>
          <target state="translated">（W）ANSI_COLORS_ALIASESのカラーマッピングで、等号の右側に無効な属性名を指定しました。カラーマッピングは無視されました。</target>
        </trans-unit>
        <trans-unit id="66c0aa947d58238ebc42c6ae5df6940103cf64ea" translate="yes" xml:space="preserve">
          <source>(W) You tried to overload a constant type the overload package is unaware of.</source>
          <target state="translated">（W）オーバーロードパッケージが認識しない定数タイプをオーバーロードしようとしました。</target>
        </trans-unit>
        <trans-unit id="e6c02830c69ec718530355cc9c731ec126bc1ac4" translate="yes" xml:space="preserve">
          <source>(W) You tried to use an unknown subpragma of the &quot;re&quot; pragma.</source>
          <target state="translated">（W）「re」プラグマの不明なサブプラグマを使用しようとしました。</target>
        </trans-unit>
        <trans-unit id="237221ab401f92d00b4b13fe24041204327569ad" translate="yes" xml:space="preserve">
          <source>(We use $^X in these examples because it's tainted by default.)</source>
          <target state="translated">（これらの例では、デフォルトで汚染されているため、$ ^ Xを使用しています。）</target>
        </trans-unit>
        <trans-unit id="ff0ae87e96bc4227f275a775529e881f38d9f545" translate="yes" xml:space="preserve">
          <source>(We used our knowledge that input conversion for &lt;code&gt;char *&lt;/code&gt; is a &quot;simple&quot; one, thus &lt;code&gt;host&lt;/code&gt; is initialized on the declaration line, and our assignment &lt;code&gt;h = host&lt;/code&gt; is not performed too early. Otherwise one would need to have the assignment &lt;code&gt;h = host&lt;/code&gt; in a CODE: or INIT: section.)</source>
          <target state="translated">（ &lt;code&gt;char *&lt;/code&gt; の入力変換は「単純な」変換であるため、 &lt;code&gt;host&lt;/code&gt; は宣言行で初期化され、割り当て &lt;code&gt;h = host&lt;/code&gt; はあまり早く実行されません。それ以外の場合、割り当て &lt;code&gt;h = host&lt;/code&gt; が必要になります。CODE：またはINIT：セクション。）</target>
        </trans-unit>
        <trans-unit id="cfc6665de88f1833c4368f0118d03017f3a21353" translate="yes" xml:space="preserve">
          <source>(When dealing with floating-point comparisons, it is best to not check for equality, but rather that the difference between the expected and actual result is below a certain amount (called epsilon) which is 0.01 in this case)</source>
          <target state="translated">（浮動小数点比較を処理するときは、等しいかどうかをチェックするのではなく、期待される結果と実際の結果の差が、この場合は0.01である特定の量（イプシロンと呼ばれます）を下回っていることをお勧めします）</target>
        </trans-unit>
        <trans-unit id="ccac8451a2611ae759c9faf841bb5018f12b19d2" translate="yes" xml:space="preserve">
          <source>(Where BASEEXT is the last component of NAME, and OBJ_EXT is $Config{obj_ext}.)</source>
          <target state="translated">（BASEEXTはNAMEの最後のコンポーネントであり、OBJ_EXTは$ Config {obj_ext}です。）</target>
        </trans-unit>
        <trans-unit id="e02fb51bf8e3169540ecbf91f4d22e75cb7830a9" translate="yes" xml:space="preserve">
          <source>(Where BASEEXT is the last component of NAME.)</source>
          <target state="translated">（BASEEXTはNAMEの最後のコンポーネントです。）</target>
        </trans-unit>
        <trans-unit id="d0de3cd68244c0838e032c884108802a5c0e7328" translate="yes" xml:space="preserve">
          <source>(Why do we have separate numeric and string comparisons? Because we don't have special variable types, and Perl needs to know whether to sort numerically (where 99 is less than 100) or alphabetically (where 100 comes before 99).</source>
          <target state="translated">（なぜ、数値と文字列を別々に比較しているのですか？特別な変数タイプがないので、Perlは、数値（99が100未満）でソートするか、アルファベット（100が99の前）でソートするかを知る必要があります。</target>
        </trans-unit>
        <trans-unit id="3a6da2b40f741b24ff596bed490732d33b00b6c1" translate="yes" xml:space="preserve">
          <source>(Win32) &quot;Cumulative&quot; times will be bogus. On anything other than Windows NT or Windows 2000, &quot;system&quot; time will be bogus, and &quot;user&quot; time is actually the time returned by the &lt;a href=&quot;http://man.he.net/man3/clock&quot;&gt;&lt;code&gt;clock()&lt;/code&gt;&lt;/a&gt; function in the C runtime library.</source>
          <target state="translated">（Win32）「累積」時間は偽物になります。WindowsNTまたはWindows2000以外では、「システム」時間は偽物であり、「ユーザー」時間は実際にはCランタイムライブラリの&lt;a href=&quot;http://man.he.net/man3/clock&quot;&gt; &lt;code&gt;clock()&lt;/code&gt; &lt;/a&gt;関数によって返される時間です。</target>
        </trans-unit>
        <trans-unit id="097ad5cbfe30f98022f46bfa2c48151ad2231444" translate="yes" xml:space="preserve">
          <source>(Win32) &lt;code&gt;-w&lt;/code&gt; only inspects the read-only file attribute (FILE_ATTRIBUTE_READONLY), which determines whether the directory can be deleted, not whether it can be written to. Directories always have read and write access unless denied by discretionary access control lists (DACLs).</source>
          <target state="translated">（Win32） &lt;code&gt;-w&lt;/code&gt; は、読み取り専用ファイル属性（FILE_ATTRIBUTE_READONLY）のみを検査します。これは、ディレクトリを削除できるかどうかを決定し、書き込み可能かどうかは判断しません。ディレクトリは、随意アクセス制御リスト（DACL）によって拒否されない限り、常に読み取りおよび書き込みアクセス権を持っています。</target>
        </trans-unit>
        <trans-unit id="38cfa236d5999b07d8ee8339e8e2095171f45420" translate="yes" xml:space="preserve">
          <source>(Win32) &lt;code&gt;-x&lt;/code&gt; (or &lt;code&gt;-X&lt;/code&gt;) determine if a file ends in one of the executable suffixes. &lt;code&gt;-S&lt;/code&gt; is meaningless.</source>
          <target state="translated">（Win32） &lt;code&gt;-x&lt;/code&gt; （または &lt;code&gt;-X&lt;/code&gt; ）は、ファイルが実行可能サフィックスの1つで終わるかどうかを判別します。 &lt;code&gt;-S&lt;/code&gt; は無意味です。</target>
        </trans-unit>
        <trans-unit id="771d0069e508ec0eab7ae06b50a9126c57ebe81c" translate="yes" xml:space="preserve">
          <source>(Win32) &lt;code&gt;ctime&lt;/code&gt; is creation time instead of inode change time.</source>
          <target state="translated">（Win32） &lt;code&gt;ctime&lt;/code&gt; は、iノードの変更時間ではなく作成時間です。</target>
        </trans-unit>
        <trans-unit id="b759a9e27db37889e0259223e9b60d084acd51ec" translate="yes" xml:space="preserve">
          <source>(Win32) &lt;code&gt;dev&lt;/code&gt; and &lt;code&gt;ino&lt;/code&gt; are not meaningful.</source>
          <target state="translated">（Win32） &lt;code&gt;dev&lt;/code&gt; と &lt;code&gt;ino&lt;/code&gt; は意味がありません。</target>
        </trans-unit>
        <trans-unit id="2a41b264a8847cf148e7f8f4528305955ad6d9f6" translate="yes" xml:space="preserve">
          <source>(Win32) &lt;code&gt;exec LIST&lt;/code&gt; without the use of indirect object syntax (&lt;code&gt;exec PROGRAM LIST&lt;/code&gt;) may fall back to trying the shell if the first &lt;code&gt;spawn()&lt;/code&gt; fails.</source>
          <target state="translated">（Win32）間接オブジェクト構文を使用しない &lt;code&gt;exec LIST&lt;/code&gt; （ &lt;code&gt;exec PROGRAM LIST&lt;/code&gt; ）は、最初の &lt;code&gt;spawn()&lt;/code&gt; が失敗した場合、シェルの試行にフォールバックする可能性があります。</target>
        </trans-unit>
        <trans-unit id="74bfa92e6c9b18362250b8ea3c63446b17f3e77c" translate="yes" xml:space="preserve">
          <source>(Win32) &lt;code&gt;kill(-9, $pid)&lt;/code&gt; will terminate the process specified by &lt;code&gt;$pid&lt;/code&gt; and recursively all child processes owned by it. This is different from the Unix semantics, where the signal will be delivered to all processes in the same process group as the process specified by &lt;code&gt;$pid&lt;/code&gt;.</source>
          <target state="translated">（Win32） &lt;code&gt;kill(-9, $pid)&lt;/code&gt; は、$ pidで指定され &lt;code&gt;$pid&lt;/code&gt; と、それが所有するすべての子プロセスを再帰的に終了します。これは、 &lt;code&gt;$pid&lt;/code&gt; 指定されたプロセスと同じプロセスグループ内のすべてのプロセスにシグナルが配信されるUnixセマンティクスとは異なります。</target>
        </trans-unit>
        <trans-unit id="3d9d02cc3296d6faebca2f9cb1b054bfc96b88c1" translate="yes" xml:space="preserve">
          <source>(Win32) &lt;code&gt;kill&lt;/code&gt; doesn't send a signal to the identified process like it does on Unix platforms. Instead &lt;code&gt;kill($sig, $pid)&lt;/code&gt; terminates the process identified by &lt;code&gt;$pid&lt;/code&gt;, and makes it exit immediately with exit status &lt;code&gt;$sig&lt;/code&gt;. As in Unix, if &lt;code&gt;$sig&lt;/code&gt; is 0 and the specified process exists, it returns true without actually terminating it.</source>
          <target state="translated">（Win32） &lt;code&gt;kill&lt;/code&gt; は、Unixプラットフォームの場合のように、識別されたプロセスにシグナルを送信しません。代わりに、 &lt;code&gt;kill($sig, $pid)&lt;/code&gt; によって識別されるプロセス終了 &lt;code&gt;$pid&lt;/code&gt; 、そしてそれが終了ステータスで即座に終了します &lt;code&gt;$sig&lt;/code&gt; 。Unixの場合と同様に、 &lt;code&gt;$sig&lt;/code&gt; が0で、指定されたプロセスが存在する場合、実際に終了せずにtrueを返します。</target>
        </trans-unit>
        <trans-unit id="76ba6e77c5869f927a0b71b2084ab1e64131af44" translate="yes" xml:space="preserve">
          <source>(Win32) &lt;code&gt;stat&lt;/code&gt; needs to open the file to determine the link count and update attributes that may have been changed through hard links. Setting &lt;a href=&quot;perlvar#%24%7B%5EWIN32_SLOPPY_STAT%7D&quot;&gt;&lt;code&gt;${^WIN32_SLOPPY_STAT}&lt;/code&gt;&lt;/a&gt; to a true value speeds up &lt;code&gt;stat&lt;/code&gt; by not performing this operation.</source>
          <target state="translated">（Win32） &lt;code&gt;stat&lt;/code&gt; はファイルを開いて、リンク数を判別し、ハードリンクを介して変更された可能性のある属性を更新する必要があります。&lt;a href=&quot;perlvar#%24%7B%5EWIN32_SLOPPY_STAT%7D&quot;&gt; &lt;code&gt;${^WIN32_SLOPPY_STAT}&lt;/code&gt; &lt;/a&gt;をtrue値に設定すると、この操作を実行しないため、 &lt;code&gt;stat&lt;/code&gt; が高速化されます。</target>
        </trans-unit>
        <trans-unit id="f9c2f95171f0df8ebdc995f9b736f8dcecb859ca" translate="yes" xml:space="preserve">
          <source>(Win32) &lt;code&gt;system LIST&lt;/code&gt; without the use of indirect object syntax (&lt;code&gt;system PROGRAM LIST&lt;/code&gt;) may fall back to trying the shell if the first &lt;code&gt;spawn()&lt;/code&gt; fails.</source>
          <target state="translated">（Win32）間接オブジェクト構文を使用しない &lt;code&gt;system LIST&lt;/code&gt; （ &lt;code&gt;system PROGRAM LIST&lt;/code&gt; ）は、最初の &lt;code&gt;spawn()&lt;/code&gt; が失敗した場合、シェルの試行にフォールバックする可能性があります。</target>
        </trans-unit>
        <trans-unit id="46d657187b6095caf9acb668a4893912e19e2208" translate="yes" xml:space="preserve">
          <source>(Win32) As an optimization, may not call the command shell specified in &lt;code&gt;$ENV{PERL5SHELL}&lt;/code&gt;. &lt;code&gt;system(1, @args)&lt;/code&gt; spawns an external process and immediately returns its process designator, without waiting for it to terminate. Return value may be used subsequently in &lt;a href=&quot;perlfunc#wait&quot;&gt;&lt;code&gt;wait&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;perlfunc#waitpid-PID%2CFLAGS&quot;&gt;&lt;code&gt;waitpid&lt;/code&gt;&lt;/a&gt;. Failure to &lt;code&gt;spawn()&lt;/code&gt; a subprocess is indicated by setting &lt;a href=&quot;perlvar#%24%3F&quot;&gt;&lt;code&gt;$?&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;255 &amp;lt;&amp;lt; 8&lt;/code&gt;. &lt;a href=&quot;perlvar#%24%3F&quot;&gt;&lt;code&gt;$?&lt;/code&gt;&lt;/a&gt; is set in a way compatible with Unix (i.e. the exit status of the subprocess is obtained by &lt;code&gt;$? &amp;gt;&amp;gt; 8&lt;/code&gt;, as described in the documentation).</source>
          <target state="translated">（Win32）最適化として、 &lt;code&gt;$ENV{PERL5SHELL}&lt;/code&gt; 指定されたコマンドシェルを呼び出さない場合があります。 &lt;code&gt;system(1, @args)&lt;/code&gt; は外部プロセスを生成し、終了するのを待たずにすぐにプロセス指定子を返します。戻り値は、その後、&lt;a href=&quot;perlfunc#wait&quot;&gt; &lt;code&gt;wait&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;perlfunc#waitpid-PID%2CFLAGS&quot;&gt; &lt;code&gt;waitpid&lt;/code&gt; &lt;/a&gt;で使用できます。サブプロセスの &lt;code&gt;spawn()&lt;/code&gt; の失敗は、&lt;a href=&quot;perlvar#%24%3F&quot;&gt; &lt;code&gt;$?&lt;/code&gt; を&lt;/a&gt;設定することで示されます。 &lt;code&gt;255 &amp;lt;&amp;lt; 8&lt;/code&gt; 。&lt;a href=&quot;perlvar#%24%3F&quot;&gt; &lt;code&gt;$?&lt;/code&gt; &lt;/a&gt;Unixと互換性のある方法で設定されます（つまり、サブプロセスの終了ステータスは、ドキュメントで説明されているように、 &lt;code&gt;$? &amp;gt;&amp;gt; 8&lt;/code&gt; によって取得されます）。</target>
        </trans-unit>
        <trans-unit id="2d623d1233c724bd1bf2d63c98124d2d35b94baa" translate="yes" xml:space="preserve">
          <source>(Win32) Available only for socket handles, and it does what the &lt;code&gt;ioctlsocket()&lt;/code&gt; call in the Winsock API does.</source>
          <target state="translated">（Win32）ソケットハンドルでのみ使用可能で、Winsock APIの &lt;code&gt;ioctlsocket()&lt;/code&gt; 呼び出しと同じことを行います。</target>
        </trans-unit>
        <trans-unit id="bcff95b0b7ef4ddb8bf2e1aa93b589744a1f75e8" translate="yes" xml:space="preserve">
          <source>(Win32) Both of modes &lt;code&gt;|-&lt;/code&gt; and &lt;code&gt;-|&lt;/code&gt; are supported, but the list form is emulated since the Win32 API CreateProcess() accepts a simple string rather than an array of arguments. This may have security implications for your code.</source>
          <target state="translated">（Win32）両方のモード &lt;code&gt;|-&lt;/code&gt; と &lt;code&gt;-|&lt;/code&gt; はサポートされていますが、Win32 API CreateProcess（）は引数の配列ではなく単純な文字列を受け入れるため、リスト形式がエミュレートされます。これは、コードのセキュリティに影響を与える可能性があります。</target>
        </trans-unit>
        <trans-unit id="9127ce15715004e5a5ed49a359264e052b40471a" translate="yes" xml:space="preserve">
          <source>(Win32) Can only be applied to process handles returned for processes spawned using &lt;code&gt;system(1, ...)&lt;/code&gt; or pseudo processes created with &lt;a href=&quot;perlfunc#fork&quot;&gt;&lt;code&gt;fork&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">（Win32） &lt;code&gt;system(1, ...)&lt;/code&gt; を使用して生成されたプロセス、または&lt;a href=&quot;perlfunc#fork&quot;&gt; &lt;code&gt;fork&lt;/code&gt; で&lt;/a&gt;作成された疑似プロセスに対して返されるプロセスハンドルにのみ適用できます。</target>
        </trans-unit>
        <trans-unit id="c8c7df891da3c5c606570ac870f377b32bccbb11" translate="yes" xml:space="preserve">
          <source>(Win32) Can't move directories between directories on different logical volumes.</source>
          <target state="translated">（Win32）異なる論理ボリューム上のディレクトリ間でディレクトリを移動できません。</target>
        </trans-unit>
        <trans-unit id="3f68950a944d856111c53bd76569330f59fdf556" translate="yes" xml:space="preserve">
          <source>(Win32) Does nothing, but won't fail.</source>
          <target state="translated">（Win32）何もしませんが、失敗することはありません。</target>
        </trans-unit>
        <trans-unit id="7d52852a018af43b37937d531a878cd72956bc98" translate="yes" xml:space="preserve">
          <source>(Win32) Emulated using multiple interpreters. See &lt;a href=&quot;perlfork&quot;&gt;perlfork&lt;/a&gt;.</source>
          <target state="translated">（Win32）複数のインタープリターを使用してエミュレートされます。&lt;a href=&quot;perlfork&quot;&gt;perlforkを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="78115fe4dbca01a2cabfa77657b3596f65944163" translate="yes" xml:space="preserve">
          <source>(Win32) Emulated using synchronization functions such that it can be interrupted by &lt;a href=&quot;perlfunc#alarm-SECONDS&quot;&gt;&lt;code&gt;alarm&lt;/code&gt;&lt;/a&gt;, and limited to a maximum of 4294967 seconds, approximately 49 days.</source>
          <target state="translated">（Win32）同期機能を使用してエミュレートされ、&lt;a href=&quot;perlfunc#alarm-SECONDS&quot;&gt; &lt;code&gt;alarm&lt;/code&gt; &lt;/a&gt;によって中断される可能性があり、最大4294967秒、約49日に制限されます。</target>
        </trans-unit>
        <trans-unit id="6a5de5b856bdbc9d8a7a764aa2b3d89407731dce" translate="yes" xml:space="preserve">
          <source>(Win32) Emulated using timers that must be explicitly polled whenever Perl wants to dispatch &quot;safe signals&quot; and therefore cannot interrupt blocking system calls.</source>
          <target state="translated">（Win32）Perlが「安全なシグナル」をディスパッチしたいときはいつでも明示的にポーリングする必要があるため、ブロッキングシステムコールを中断できないタイマーを使用してエミュレートされます。</target>
        </trans-unit>
        <trans-unit id="cd80c6a536ded8bc2bf634f559b6bb1e2d3cec7c" translate="yes" xml:space="preserve">
          <source>(Win32) Hard links are implemented on Win32 under NTFS only. They are natively supported on Windows 2000 and later. On Windows NT they are implemented using the Windows POSIX subsystem support and the Perl process will need Administrator or Backup Operator privileges to create hard links.</source>
          <target state="translated">（Win32）ハードリンクはNTFSのWin32にのみ実装されています。これらは、Windows2000以降でネイティブにサポートされています。Windows NTでは、これらはWindows POSIXサブシステムサポートを使用して実装され、Perlプロセスはハードリンクを作成するために管理者またはバックアップオペレーターの権限を必要とします。</target>
        </trans-unit>
        <trans-unit id="3f1536b4c91f9320914f7df021f72a5346121abb" translate="yes" xml:space="preserve">
          <source>(Win32) If a FILEHANDLE is supplied, it must be writable and opened in append mode (i.e., use &lt;code&gt;open(my $fh, '&amp;gt;&amp;gt;', 'filename')&lt;/code&gt; or &lt;code&gt;sysopen(my $fh, ..., O_APPEND|O_RDWR)&lt;/code&gt;. If a filename is supplied, it should not be held open elsewhere.</source>
          <target state="translated">（Win32）FILEHANDLEが提供されている場合は、書き込み可能で、追加モードで開く必要があります（つまり、 &lt;code&gt;open(my $fh, '&amp;gt;&amp;gt;', 'filename')&lt;/code&gt; または &lt;code&gt;sysopen(my $fh, ..., O_APPEND|O_RDWR)&lt;/code&gt; 。ファイル名が指定されている場合、他の場所で開いたままにしないでください。</target>
        </trans-unit>
        <trans-unit id="39ac5f2850e738f851fce5c98cbf343f48b27b1c" translate="yes" xml:space="preserve">
          <source>(Win32) May not be available if library or source was not provided when building perl.</source>
          <target state="translated">（Win32）perlのビルド時にライブラリまたはソースが提供されなかった場合、使用できない場合があります。</target>
        </trans-unit>
        <trans-unit id="2e4ce071f37a1af0083caf8a1a4fc21f92cdd025" translate="yes" xml:space="preserve">
          <source>(Win32) May not behave as expected. Behavior depends on the C runtime library's implementation of &lt;a href=&quot;http://man.he.net/man2/utime&quot;&gt;&lt;code&gt;utime()&lt;/code&gt;&lt;/a&gt;, and the filesystem being used. The FAT filesystem typically does not support an &quot;access time&quot; field, and it may limit timestamps to a granularity of two seconds.</source>
          <target state="translated">（Win32）期待どおりに動作しない可能性があります。動作は、Cランタイムライブラリの&lt;a href=&quot;http://man.he.net/man2/utime&quot;&gt; &lt;code&gt;utime()&lt;/code&gt; &lt;/a&gt;の実装、および使用されているファイルシステムによって異なります。FATファイルシステムは通常、「アクセス時間」フィールドをサポートしておらず、タイムスタンプを2秒の粒度に制限する場合があります。</target>
        </trans-unit>
        <trans-unit id="02b290a3466c2e14903396fe950e3c324ee0f9a2" translate="yes" xml:space="preserve">
          <source>(Win32) Not implemented.</source>
          <target state="translated">（Win32）実装されていません。</target>
        </trans-unit>
        <trans-unit id="15f1a44d6820ce91c7ed96f321a002a5e99a43bd" translate="yes" xml:space="preserve">
          <source>(Win32) Only good for changing &quot;owner&quot; read-write access; &quot;group&quot; and &quot;other&quot; bits are meaningless.</source>
          <target state="translated">（Win32）「所有者」の読み取り/書き込みアクセスの変更にのみ適しています。「グループ」ビットと「その他」ビットは無意味です。</target>
        </trans-unit>
        <trans-unit id="29bf0832c122b51a368d18dbf4e03bb118291cc9" translate="yes" xml:space="preserve">
          <source>(Win32) Return values (especially for device and inode) may be bogus.</source>
          <target state="translated">（Win32）戻り値（特にデバイスとiノードの場合）は偽物である可能性があります。</target>
        </trans-unit>
        <trans-unit id="6c918676cbe34b19ea0d3f7ba488c5cad5cac2ec" translate="yes" xml:space="preserve">
          <source>(Win32) The value returned by &lt;a href=&quot;perlfunc#tell-FILEHANDLE&quot;&gt;&lt;code&gt;tell&lt;/code&gt;&lt;/a&gt; may be affected after the call, and the filehandle may be flushed.</source>
          <target state="translated">（Win32）&lt;a href=&quot;perlfunc#tell-FILEHANDLE&quot;&gt; &lt;code&gt;tell&lt;/code&gt; &lt;/a&gt;によって返される値は、呼び出し後に影響を受ける可能性があり、ファイルハンドルがフラッシュされる可能性があります。</target>
        </trans-unit>
        <trans-unit id="c16d57cfd8eeb546a9229ff270928505b42e20e5" translate="yes" xml:space="preserve">
          <source>(Win32) Will not cause &lt;a href=&quot;perlfunc#readdir-DIRHANDLE&quot;&gt;&lt;code&gt;readdir&lt;/code&gt;&lt;/a&gt; to re-read the directory stream. The entries already read before the &lt;code&gt;rewinddir&lt;/code&gt; call will just be returned again from a cache buffer.</source>
          <target state="translated">（Win32）&lt;a href=&quot;perlfunc#readdir-DIRHANDLE&quot;&gt; &lt;code&gt;readdir&lt;/code&gt; &lt;/a&gt;がディレクトリストリームを再読み取りすることはありません。 &lt;code&gt;rewinddir&lt;/code&gt; 呼び出しの前にすでに読み取られたエントリは、キャッシュバッファから再び返されます。</target>
        </trans-unit>
        <trans-unit id="10bb22106c47904ba4de23ad61460103a68c77d9" translate="yes" xml:space="preserve">
          <source>(Win32, Plan 9) Not implemented.</source>
          <target state="translated">（Win32、プラン9）実装されていません。</target>
        </trans-unit>
        <trans-unit id="7b3828212b5e1fac44f5e28173a528aabda2b566" translate="yes" xml:space="preserve">
          <source>(Win32, Plan 9, RISC OS) Not implemented.</source>
          <target state="translated">（Win32、Plan 9、RISC OS）実装されていません。</target>
        </trans-unit>
        <trans-unit id="40542d6ea9af81db545576518b945b986145aa7d" translate="yes" xml:space="preserve">
          <source>(Win32, RISC OS) Not implemented.</source>
          <target state="translated">（Win32、RISC OS）実装されていません。</target>
        </trans-unit>
        <trans-unit id="d26225477d3018755220f731bf9a8ab3068b4777" translate="yes" xml:space="preserve">
          <source>(Win32, VMS) Only implemented on sockets.</source>
          <target state="translated">（Win32、VMS）ソケットにのみ実装されています。</target>
        </trans-unit>
        <trans-unit id="5d6aa1625db6b86980d3dbaf700750f0d7c7c64e" translate="yes" xml:space="preserve">
          <source>(Win32, VMS, Plan 9, RISC OS, VOS) Not implemented.</source>
          <target state="translated">（Win32、VMS、Plan 9、RISC OS、VOS）実装されていません。</target>
        </trans-unit>
        <trans-unit id="3ad1926ff99fe753293050c329e9209673eea0dd" translate="yes" xml:space="preserve">
          <source>(Win32, VMS, RISC OS) &lt;code&gt;-R&lt;/code&gt;, &lt;code&gt;-W&lt;/code&gt;, &lt;code&gt;-X&lt;/code&gt;, &lt;code&gt;-O&lt;/code&gt; are indistinguishable from &lt;code&gt;-r&lt;/code&gt;, &lt;code&gt;-w&lt;/code&gt;, &lt;code&gt;-x&lt;/code&gt;, &lt;code&gt;-o&lt;/code&gt;.</source>
          <target state="translated">（Win32、VMS、RISC OS） &lt;code&gt;-R&lt;/code&gt; 、 &lt;code&gt;-W&lt;/code&gt; 、 &lt;code&gt;-X&lt;/code&gt; 、 &lt;code&gt;-O&lt;/code&gt; は、 &lt;code&gt;-r&lt;/code&gt; 、 &lt;code&gt;-w&lt;/code&gt; 、 &lt;code&gt;-x&lt;/code&gt; 、 &lt;code&gt;-o&lt;/code&gt; と区別できません。</target>
        </trans-unit>
        <trans-unit id="bf0e811dfd518ffe8ef2d881c87867a771eaf7b9" translate="yes" xml:space="preserve">
          <source>(Win32, VMS, RISC OS) &lt;code&gt;-g&lt;/code&gt;, &lt;code&gt;-k&lt;/code&gt;, &lt;code&gt;-l&lt;/code&gt;, &lt;code&gt;-u&lt;/code&gt;, &lt;code&gt;-A&lt;/code&gt; are not particularly meaningful.</source>
          <target state="translated">（Win32、VMS、RISC OS） &lt;code&gt;-g&lt;/code&gt; 、 &lt;code&gt;-k&lt;/code&gt; 、 &lt;code&gt;-l&lt;/code&gt; 、 &lt;code&gt;-u&lt;/code&gt; 、 &lt;code&gt;-A&lt;/code&gt; は特に意味がありません。</target>
        </trans-unit>
        <trans-unit id="97e20ab673e91dfb74bf2c5e00e544b51f6a4b2f" translate="yes" xml:space="preserve">
          <source>(Win32, VMS, RISC OS) Not implemented.</source>
          <target state="translated">（Win32、VMS、RISC OS）実装されていません。</target>
        </trans-unit>
        <trans-unit id="62553efbe7c6123000971fd2d6d5ef25fc0044a8" translate="yes" xml:space="preserve">
          <source>(Win32, VMS, RISC OS, VOS) Not implemented.</source>
          <target state="translated">（Win32、VMS、RISC OS、VOS）実装されていません。</target>
        </trans-unit>
        <trans-unit id="8f1de96f55f7b2b16d13a5f2bab6a184220368b1" translate="yes" xml:space="preserve">
          <source>(Windows only.)</source>
          <target state="translated">（Windowsのみ。）</target>
        </trans-unit>
        <trans-unit id="c3a762aeddeefdae150565438093ccaddaaf9aad" translate="yes" xml:space="preserve">
          <source>(X) A general assertion failed. The file in question must be examined.</source>
          <target state="translated">（X）一般的なアサーションが失敗しました。問題のファイルを調べる必要があります。</target>
        </trans-unit>
        <trans-unit id="d6a423c5d83c10add2738bacaabc87962a7da812" translate="yes" xml:space="preserve">
          <source>(X) An attempt was made to extend an array, a list, or a string beyond the largest possible memory allocation.</source>
          <target state="translated">（X）可能な最大メモリ割り当てを超えて配列、リスト、または文字列を拡張しようとしました。</target>
        </trans-unit>
        <trans-unit id="46db9c98808efa8657802d89fa63e7cd01916c84" translate="yes" xml:space="preserve">
          <source>(X) See &lt;a href=&quot;perlrun#PERL_SIGNALS&quot;&gt;&quot;PERL_SIGNALS&quot; in perlrun&lt;/a&gt; for legal values.</source>
          <target state="translated">（X）有効な値について&lt;a href=&quot;perlrun#PERL_SIGNALS&quot;&gt;は、perlrunの「PERL_SIGNALS」を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="28dc575d7faf81030a7009c3890586ad0bfb13c7" translate="yes" xml:space="preserve">
          <source>(X) See &lt;a href=&quot;perlrun#PERL_SIGNALS&quot;&gt;PERL_SIGNALS in perlrun&lt;/a&gt; for legal values.</source>
          <target state="translated">（X）有効な値については、&lt;a href=&quot;perlrun#PERL_SIGNALS&quot;&gt;perlrunのPERL_SIGNALSを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="25eb4cc27ccccf735eed888542e4498eb2a2aa6d" translate="yes" xml:space="preserve">
          <source>(X) The #! line (or local equivalent) in a Perl script contains the &lt;b&gt;-M&lt;/b&gt;, &lt;b&gt;-m&lt;/b&gt; or &lt;b&gt;-C&lt;/b&gt; option.</source>
          <target state="translated">（X）＃！Perlスクリプトの行（またはローカルで同等のもの）に&lt;b&gt;-M&lt;/b&gt;、&lt;b&gt;-m、&lt;/b&gt;または&lt;b&gt;-C&lt;/b&gt;オプションが含まれています。</target>
        </trans-unit>
        <trans-unit id="04d47aff5005157bb16498793c9ad8c2d7a871aa" translate="yes" xml:space="preserve">
          <source>(X) The #! line (or local equivalent) in a Perl script contains the &lt;b&gt;-T&lt;/b&gt; option (or the &lt;b&gt;-t&lt;/b&gt; option), but Perl was not invoked with &lt;b&gt;-T&lt;/b&gt; in its command line. This is an error because, by the time Perl discovers a &lt;b&gt;-T&lt;/b&gt; in a script, it's too late to properly taint everything from the environment. So Perl gives up.</source>
          <target state="translated">（X）＃！Perlスクリプトの行（またはローカルで同等のもの）に&lt;b&gt;-T&lt;/b&gt;オプション（または&lt;b&gt;-t&lt;/b&gt;オプション）が含まれていますが、Perlはコマンドラインで&lt;b&gt;-Tを指定&lt;/b&gt;して呼び出されていません。これはエラーです&lt;b&gt;。Perl&lt;/b&gt;がスクリプトで&lt;b&gt;-T&lt;/b&gt;を検出するまでには、環境からすべてを適切に汚染するには遅すぎるためです。そのため、Perlはあきらめました。</target>
        </trans-unit>
        <trans-unit id="7d13ded5daf490cc1bc8bb6b0cd74a13b6c46c88" translate="yes" xml:space="preserve">
          <source>(X) The PERL5OPT environment variable may only be used to set the following switches: &lt;b&gt;-[CDIMUdmtw]&lt;/b&gt;.</source>
          <target state="translated">（X）PERL5OPT環境変数は、次のスイッチの設定にのみ使用できます：&lt;b&gt;-[CDIMUdmtw]&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="8e8047249d025e2fe0c43d96f901bbedf4764fe8" translate="yes" xml:space="preserve">
          <source>(X) The malloc package that comes with Perl had an internal failure.</source>
          <target state="translated">（X）Perlに付属するmallocパッケージで内部エラーが発生しました。</target>
        </trans-unit>
        <trans-unit id="65871f11cf57af573de156d366a86250bc7c9d6a" translate="yes" xml:space="preserve">
          <source>(X) The malloc() function returned 0, indicating there was insufficient remaining memory (or virtual memory) to satisfy the request. Perl has no option but to exit immediately.</source>
          <target state="translated">（X）malloc（）関数が0を返しました。これは、要求を満たすのに十分なメモリ（または仮想メモリ）が残っていないことを示しています。Perlにはすぐに終了する以外に選択肢はありません。</target>
        </trans-unit>
        <trans-unit id="74578166360f01e0bd318023e9280f6c6b8eeab2" translate="yes" xml:space="preserve">
          <source>(X) You can't allocate more than 64K on an MS-DOS machine.</source>
          <target state="translated">（X）MS-DOSマシンでは64K以上を割り当てることはできません。</target>
        </trans-unit>
        <trans-unit id="d5e67ac60b668e8e894b678df3573f0eedbd9863" translate="yes" xml:space="preserve">
          <source>(X)(F) The malloc() function returned 0, indicating there was insufficient remaining memory (or virtual memory) to satisfy the request.</source>
          <target state="translated">（X）（F）malloc（）関数が0を返しました。これは、要求を満たすために十分なメモリ（または仮想メモリ）が残っていないことを示しています。</target>
        </trans-unit>
        <trans-unit id="759c6fc4e8e069300c157debbe2514f2f0f2ba35" translate="yes" xml:space="preserve">
          <source>(XO_NFC)</source>
          <target state="translated">(XO_NFC)</target>
        </trans-unit>
        <trans-unit id="5eb03003bf58c317f5fcc12bb40f816384b7f89f" translate="yes" xml:space="preserve">
          <source>(XO_NFD)</source>
          <target state="translated">(XO_NFD)</target>
        </trans-unit>
        <trans-unit id="5ad3fc425ec3db40873d63b37909a2aa76c30974" translate="yes" xml:space="preserve">
          <source>(XO_NFKC)</source>
          <target state="translated">(XO_NFKC)</target>
        </trans-unit>
        <trans-unit id="012a737aa9d39f445b43cf9eee5b96a526347398" translate="yes" xml:space="preserve">
          <source>(XO_NFKD)</source>
          <target state="translated">(XO_NFKD)</target>
        </trans-unit>
        <trans-unit id="0aa007c669bc8d719d70515c0e663390b1a05031" translate="yes" xml:space="preserve">
          <source>(Yes, I know this function is named a bit oddly. Call it historic reasons.)</source>
          <target state="translated">（はい、この関数の名前が少し変わっています。これを歴史的な理由と呼んでください。）</target>
        </trans-unit>
        <trans-unit id="8eb8ab7981d2a7c45a30aad058d8576bb511d1b4" translate="yes" xml:space="preserve">
          <source>(Yes, we know that some of these OSes may fall under the Unix category, but we are not a standards body.)</source>
          <target state="translated">（はい、私たちはこれらのOSの一部がUnixカテゴリに該当することを知っていますが、私たちは標準化団体ではありません。）</target>
        </trans-unit>
        <trans-unit id="b27bf5c66dc26e2275621e2196f427590315339a" translate="yes" xml:space="preserve">
          <source>(You can force portability by specifying a Unicode range, which means that the endpoints are specified by &lt;a href=&quot;perlrecharclass#Character-Ranges&quot;&gt;&lt;code&gt;\N{...}&lt;/code&gt;&lt;/a&gt;, but the meaning may still not be obvious.) The stricter rules require that ranges that start or stop with an ASCII character that is not a control have all their endpoints be the literal character, and not some escape sequence (like &lt;code&gt;&quot;\x41&quot;&lt;/code&gt;), and the ranges must be all digits, or all uppercase letters, or all lowercase letters.</source>
          <target state="translated">（Unicode範囲を指定することで移植性を強制できます。つまり、エンドポイントは&lt;a href=&quot;perlrecharclass#Character-Ranges&quot;&gt; &lt;code&gt;\N{...}&lt;/code&gt; &lt;/a&gt;で指定されますが、意味が明確でない場合があります。）より厳しい規則では、ASCIIで開始または終了する範囲が必要です。コントロールではない文字は、すべてのエンドポイントがリテラル文字であり、エスケープシーケンス（ &lt;code&gt;&quot;\x41&quot;&lt;/code&gt; ）ではありません。範囲は、すべて数字、すべて大文字、またはすべて小文字である必要があります。</target>
        </trans-unit>
        <trans-unit id="a64a87faab12fe29e48406c908901fff7a63848d" translate="yes" xml:space="preserve">
          <source>(You can force portability by specifying a Unicode range, which means that the endpoints are specified by &lt;a href=&quot;perlrecharclass#Character-Ranges&quot;&gt;\N{...} &lt;/a&gt;, but the meaning may still not be obvious.) The stricter rules require that ranges that start or stop with an ASCII character that is not a control have all their endpoints be the literal character, and not some escape sequence (like &lt;code&gt;&quot;\x41&quot;&lt;/code&gt; ), and the ranges must be all digits, or all uppercase letters, or all lowercase letters.</source>
          <target state="translated">（Unicodeの範囲を指定することで移植性を強制できます。つまり、エンドポイントは&lt;a href=&quot;perlrecharclass#Character-Ranges&quot;&gt;\ N {...}&lt;/a&gt;で指定されますが、意味はまだ明確ではない場合があります。）より厳密な規則では、ASCIIで開始または停止する範囲が必要です。コントロールではない文字は、すべてのエンドポイントがリテラル文字であり、一部のエスケープシーケンス（ &lt;code&gt;&quot;\x41&quot;&lt;/code&gt; ）ではなく、範囲はすべて数字、またはすべて大文字、またはすべて小文字でなければなりません。</target>
        </trans-unit>
        <trans-unit id="40103a04e475e9541eab1f3aaae6dd08be353894" translate="yes" xml:space="preserve">
          <source>(You can't just say &lt;code&gt;$ENV{$key} = $ENV{$key}&lt;/code&gt; , since the Perl optimizer is smart enough to elide the expression.)</source>
          <target state="translated">（Perlオプティマイザーは式を省略できるほど賢いので、単に &lt;code&gt;$ENV{$key} = $ENV{$key}&lt;/code&gt; と言うことはできません。）</target>
        </trans-unit>
        <trans-unit id="1171aa55fd6fe0863b56f6025193055e4cae7805" translate="yes" xml:space="preserve">
          <source>(You can't just say &lt;code&gt;$ENV{$key} = $ENV{$key}&lt;/code&gt;, since the Perl optimizer is smart enough to elide the expression.)</source>
          <target state="translated">（Perlオプティマイザーは式を削除するのに十分賢いので、 &lt;code&gt;$ENV{$key} = $ENV{$key}&lt;/code&gt; とだけ言うことはできません。）</target>
        </trans-unit>
        <trans-unit id="102826bc7aefa33ccb389fa417f4b040a4a419e3" translate="yes" xml:space="preserve">
          <source>(You can, of course, specify single characters by using, &lt;code&gt;\x{...}&lt;/code&gt; , &lt;code&gt;\N{...}&lt;/code&gt; , etc.)</source>
          <target state="translated">（もちろん、 &lt;code&gt;\x{...}&lt;/code&gt; 、 &lt;code&gt;\N{...}&lt;/code&gt; などを使用して単一の文字を指定できます。）</target>
        </trans-unit>
        <trans-unit id="d359a2b41fdaad014858cbb77463584c32391c60" translate="yes" xml:space="preserve">
          <source>(You can, of course, specify single characters by using, &lt;code&gt;\x{...}&lt;/code&gt;, &lt;code&gt;\N{...}&lt;/code&gt;, etc.)</source>
          <target state="translated">（もちろん、 &lt;code&gt;\x{...}&lt;/code&gt; 、 &lt;code&gt;\N{...}&lt;/code&gt; などを使用して単一の文字を指定できます。）</target>
        </trans-unit>
        <trans-unit id="e54f3a24beb63ca6443b7641e7e1af7bcf5e3c2b" translate="yes" xml:space="preserve">
          <source>(You may, in fact, want to start with localizing to</source>
          <target state="translated">（実際には、ローカライズから始めることをお勧めします</target>
        </trans-unit>
        <trans-unit id="4bb2b230b54ad6957c49b6580f615df0eff17f93" translate="yes" xml:space="preserve">
          <source>(added in &lt;code&gt;Sys::Syslog&lt;/code&gt; 0.21). HP-UX is a system which uses such a named pipe.</source>
          <target state="translated">（ &lt;code&gt;Sys::Syslog&lt;/code&gt; 0.21で追加）。HP-UXは、このような名前付きパイプを使用するシステムです。</target>
        </trans-unit>
        <trans-unit id="409526f33747b3d99190c22c4395e3c38ccf1ed4" translate="yes" xml:space="preserve">
          <source>(also known as 90 degrees).</source>
          <target state="translated">（90度とも呼ばれます）。</target>
        </trans-unit>
        <trans-unit id="7e5760178c4e5a5b7213e471eeab450909811a59" translate="yes" xml:space="preserve">
          <source>(also see &lt;a href=&quot;#gen_delimited_pat&quot;&gt;&quot;gen_delimited_pat&quot;&lt;/a&gt; below).</source>
          <target state="translated">（以下の&lt;a href=&quot;#gen_delimited_pat&quot;&gt;「gen_delimited_pa​​t」&lt;/a&gt;も参照してください）。</target>
        </trans-unit>
        <trans-unit id="0975309405add43e0212a50c2f0bc405f3954769" translate="yes" xml:space="preserve">
          <source>(also see &lt;a href=&quot;#gen_delimited_pat&quot;&gt;gen_delimited_pat&lt;/a&gt; below).</source>
          <target state="translated">（以下の&lt;a href=&quot;#gen_delimited_pat&quot;&gt;gen_delimited_pa​​t&lt;/a&gt;も参照してください）。</target>
        </trans-unit>
        <trans-unit id="1cdc6cf7e203685897747bffc2262178c7977e11" translate="yes" xml:space="preserve">
          <source>(although &lt;code&gt;extract_tagged&lt;/code&gt; is not currently implemented that way, in order to preserve pre-5.005 compatibility).</source>
          <target state="translated">（ただし、5.005より前の互換性を維持するために、 &lt;code&gt;extract_tagged&lt;/code&gt; は現在そのように実装されていません）。</target>
        </trans-unit>
        <trans-unit id="f2cfa0da4ed10df5c469d6ab0c502d0727365ce2" translate="yes" xml:space="preserve">
          <source>(although in production code the substitutions might be done in the EBCDIC branch with the function call and separately in the ASCII branch without the expense of the identity map; in Perl v5.22, the identity map is optimized out so there is no expense, but the alternative above is simpler and is also available in v5.22).</source>
          <target state="translated">（量産コードでは、置換は関数呼び出しを使用してEBCDICブランチで行われ、ASCIIブランチではIDマップを使わずに個別に行われますが、Perl v5.22ではIDマップが最適化されているため、費用はかかりません。しかし、上記の代替案はより単純で、v5.22でも利用可能です）。</target>
        </trans-unit>
        <trans-unit id="d32ccfc33694fd3b9b08e15cd17089eb0baac7ce" translate="yes" xml:space="preserve">
          <source>(and</source>
          <target state="translated">(and</target>
        </trans-unit>
        <trans-unit id="4f9622103ba7043a2f17e986f7fa6b31d025760e" translate="yes" xml:space="preserve">
          <source>(and problematic) UTF-8 behaviour of Perl 5.8.0. (See &lt;a href=&quot;https://perldoc.perl.org/5.26.0/perl581delta.html#UTF-8-no-longer-default-under-UTF-8-locales&quot;&gt;UTF-8 no longer default under UTF-8 locales in perl581delta&lt;/a&gt;.)</source>
          <target state="translated">（および問題のある）Perl 5.8.0のUTF-8動作。（&lt;a href=&quot;https://perldoc.perl.org/5.26.0/perl581delta.html#UTF-8-no-longer-default-under-UTF-8-locales&quot;&gt;perl581deltaのUTF-8ロケールでは、UTF-8がデフォルトではなくなった&lt;/a&gt;ことを参照してください。）</target>
        </trans-unit>
        <trans-unit id="c511b51313a0786c3fbbfa64fa588b599c3cae21" translate="yes" xml:space="preserve">
          <source>(and problematic) UTF-8 behaviour of Perl 5.8.0. (See &lt;a href=&quot;https://perldoc.perl.org/5.32.0/perl581delta#UTF-8-no-longer-default-under-UTF-8-locales&quot;&gt;&quot;UTF-8 no longer default under UTF-8 locales&quot; in perl581delta&lt;/a&gt;.)</source>
          <target state="translated">（そして問題のある）Perl5.8.0のUTF-8の振る舞い。（&lt;a href=&quot;https://perldoc.perl.org/5.32.0/perl581delta#UTF-8-no-longer-default-under-UTF-8-locales&quot;&gt;perl581deltaの「UTF-8はUTF-8ロケールではデフォルトではなくなりました」を&lt;/a&gt;参照してください。）</target>
        </trans-unit>
        <trans-unit id="692b42cc2b3e37f46870d9371dc5e76fada22536" translate="yes" xml:space="preserve">
          <source>(and you have to say &lt;code&gt;not_&lt;/code&gt; ; you can't use the bang &lt;code&gt;!&lt;/code&gt; form). This pseudo category is a shorthand for specifying both &lt;code&gt;:collate&lt;/code&gt; and &lt;code&gt;:ctype&lt;/code&gt; . Hence, in the negated form, it is nearly the same thing as saying</source>
          <target state="translated">（そして &lt;code&gt;not_&lt;/code&gt; と言う必要があります。bang &lt;code&gt;!&lt;/code&gt; フォームは使用できません）。この疑似カテゴリは、 &lt;code&gt;:collate&lt;/code&gt; と &lt;code&gt;:ctype&lt;/code&gt; の両方を指定するための省略形です。したがって、否定された形式では、それは言うこととほとんど同じことです</target>
        </trans-unit>
        <trans-unit id="138c271ae8fbee88ee204a6c36a59c9dff93f77a" translate="yes" xml:space="preserve">
          <source>(and you have to say &lt;code&gt;not_&lt;/code&gt;; you can't use the bang &lt;code&gt;!&lt;/code&gt; form). This pseudo category is a shorthand for specifying both &lt;code&gt;:collate&lt;/code&gt; and &lt;code&gt;:ctype&lt;/code&gt;. Hence, in the negated form, it is nearly the same thing as saying</source>
          <target state="translated">（そしてあなたは &lt;code&gt;not_&lt;/code&gt; と言わなければなりません;あなたはバング &lt;code&gt;!&lt;/code&gt; フォームを使うことができません）。この疑似カテゴリは、 &lt;code&gt;:collate&lt;/code&gt; と &lt;code&gt;:ctype&lt;/code&gt; の両方を指定するための省略形です。したがって、否定された形式では、それは言うこととほぼ同じです</target>
        </trans-unit>
        <trans-unit id="6aeff3579e72696260e1169c528784c27ec7b978" translate="yes" xml:space="preserve">
          <source>(answer contributed by brian d foy)</source>
          <target state="translated">（brian d foyによる回答）</target>
        </trans-unit>
        <trans-unit id="e5076fd75f69e901d6b296f3219688b4e49af9fb" translate="yes" xml:space="preserve">
          <source>(as is one for 5.005_53), and the new version is 5.6.1. Create a file</source>
          <target state="translated">（5.005_53の場合と同様）、新しいバージョンは5.6.1です。ファイルを作成する</target>
        </trans-unit>
        <trans-unit id="bd07f3e89f025430991fd3ab747b695ca2119809" translate="yes" xml:space="preserve">
          <source>(as modified under &lt;code&gt;/c&lt;/code&gt;), and these potentially modified lists are used as the basis for what follows. Any character in the target string that isn't in</source>
          <target state="translated">（ &lt;code&gt;/c&lt;/code&gt; で変更）、およびこれらの変更される可能性のあるリストは、以下の基礎として使用されます。にないターゲット文字列内の任意の文字</target>
        </trans-unit>
        <trans-unit id="2a87525a6c2a886c0eaf943b38e0ee76d77adf64" translate="yes" xml:space="preserve">
          <source>(as the filename of DUCET) is used. If you will prepare your own table file, any name other than</source>
          <target state="translated">（DUCETのファイル名として）が使用されます。独自のテーブルファイルを準備する場合は、</target>
        </trans-unit>
        <trans-unit id="786ef72f31164be533ff5c7e4a7e63ae5230f32a" translate="yes" xml:space="preserve">
          <source>(assuming the default installation location was chosen).</source>
          <target state="translated">（デフォルトのインストール場所が選択されていると想定）。</target>
        </trans-unit>
        <trans-unit id="63c4a5f42cbbe3a05030f3bc9132df45a99212cd" translate="yes" xml:space="preserve">
          <source>(at least) the following lines</source>
          <target state="translated">（少なくとも）次の行</target>
        </trans-unit>
        <trans-unit id="b948cb7a3253ff3b0a5238bd22a6d610864b716f" translate="yes" xml:space="preserve">
          <source>(at the very end for binary compatibility).</source>
          <target state="translated">（バイナリ互換性のための最後に）。</target>
        </trans-unit>
        <trans-unit id="48792f7a9033374771dbfb100ac3abb29a32dab5" translate="yes" xml:space="preserve">
          <source>(because either it starts with a &quot;_&quot;, or because none of its lexicons have &lt;code&gt;_AUTO =&amp;gt; 1,&lt;/code&gt; ), then we have failed to find a normal way to maketext</source>
          <target state="translated">（「_」で始まるか、そのレキシコンに &lt;code&gt;_AUTO =&amp;gt; 1,&lt;/code&gt; がないため）、テキストを作成する通常の方法を見つけることができませんでした</target>
        </trans-unit>
        <trans-unit id="89da1dcaa9a2597711f521770fdd8b5c61c39c1a" translate="yes" xml:space="preserve">
          <source>(because either it starts with a &quot;_&quot;, or because none of its lexicons have &lt;code&gt;_AUTO =&amp;gt; 1,&lt;/code&gt;), then we have failed to find a normal way to maketext</source>
          <target state="translated">（「_」で始まるか、そのレキシコンに &lt;code&gt;_AUTO =&amp;gt; 1,&lt;/code&gt; がないため）、テキストを作成する通常の方法を見つけることができませんでした。</target>
        </trans-unit>
        <trans-unit id="f6d16baf27904d45d89ec1d9d7ed8281fa17d9fe" translate="yes" xml:space="preserve">
          <source>(because in particular, simply assigning a weak reference back to itself does not work to unweaken it; &lt;code&gt;$REF = $REF&lt;/code&gt; does not work).</source>
          <target state="translated">（特に、弱い参照をそれ自体に割り当てるだけでは機能が解除されないため、 &lt;code&gt;$REF = $REF&lt;/code&gt; は機能しません）。</target>
        </trans-unit>
        <trans-unit id="4b16cab82b532af855df5c5a4ca92e48f90985fe" translate="yes" xml:space="preserve">
          <source>(but slightly more complicated). This tree reflects the way Perl parsed your code, but has nothing to do with the execution order. There is an additional &quot;thread&quot; going through the nodes of the tree which shows the order of execution of the nodes. In our simplified example above it looks like:</source>
          <target state="translated">（しかし少し複雑です）。このツリーは、Perlがコードを解析した方法を反映していますが、実行順序とは関係ありません。ノードの実行順序を示す、ツリーのノードを通過する追加の「スレッド」があります。上記の簡単な例では、次のようになります。</target>
        </trans-unit>
        <trans-unit id="4693cf64bd9a521498526ddc1119c6dfd5c3b552" translate="yes" xml:space="preserve">
          <source>(c) Tels &lt;a href=&quot;http://bloodgate.com&quot;&gt;http://bloodgate.com&lt;/a&gt; 2003, 2004 - based on BigInt code by Tels from 2001-2003.</source>
          <target state="translated">（c）Tels &lt;a href=&quot;http://bloodgate.com&quot;&gt;http://bloodgate.com&lt;/a&gt; 2003、2004-2001-2003のTels によるBigIntコードに基づいています。</target>
        </trans-unit>
        <trans-unit id="f6623ddfaf5c5328a69ecd651966b3d508f1ba1d" translate="yes" xml:space="preserve">
          <source>(change &quot;unrestricted&quot; to &quot;redistributable&quot;?)</source>
          <target state="translated">（「無制限」を「再配布可能」に変更しますか？）</target>
        </trans-unit>
        <trans-unit id="f179f6995bed99ae8a0cfb9caaec4219d44a9f23" translate="yes" xml:space="preserve">
          <source>(configure, build, test, runtime, etc.) and</source>
          <target state="translated">（構成、ビルド、テスト、ランタイムなど）および</target>
        </trans-unit>
        <trans-unit id="f705994b685d7ab39803fc55afe57bb501708c2b" translate="yes" xml:space="preserve">
          <source>(const) data, and the &lt;code&gt;U&lt;/code&gt; is &amp;lt;undefined&amp;gt;, external symbols referred to.</source>
          <target state="translated">（const）データ、および &lt;code&gt;U&lt;/code&gt; は&amp;lt;undefined&amp;gt;であり、外部シンボルが参照されます。</target>
        </trans-unit>
        <trans-unit id="f2d8cd4b2f49ebe16d34218b69e616c4bfb7685e" translate="yes" xml:space="preserve">
          <source>(contributed by Alex Beamish)</source>
          <target state="translated">（Alex Beamishによる寄稿）</target>
        </trans-unit>
        <trans-unit id="8a01f14aa6ea03ae12033993b8340bb14bc9dc2b" translate="yes" xml:space="preserve">
          <source>(contributed by Anno Siegel)</source>
          <target state="translated">（Anno Siegelによる寄稿）</target>
        </trans-unit>
        <trans-unit id="fac38ab03b508c364ce52ea99dd09ac56e9be13a" translate="yes" xml:space="preserve">
          <source>(contributed by Ben Morrow)</source>
          <target state="translated">（Ben Morrowによる寄稿）</target>
        </trans-unit>
        <trans-unit id="cab93540468b3299e5e7ff453d2c13989f42fd8e" translate="yes" xml:space="preserve">
          <source>(contributed by Brian McCauley)</source>
          <target state="translated">（Brian McCauleyによる寄稿）</target>
        </trans-unit>
        <trans-unit id="5866c9a649588b2bcaf84ab58628c670110cf84d" translate="yes" xml:space="preserve">
          <source>(contributed by Michael Carman)</source>
          <target state="translated">（Michael Carmanによる寄稿）</target>
        </trans-unit>
        <trans-unit id="11aa83d938cb90075d1401151f2508d1510688fe" translate="yes" xml:space="preserve">
          <source>(contributed by Peter J. Holzer, hjp-usenet2@hjp.at)</source>
          <target state="translated">（Peter J. Holzer、hjp-usenet2 @ hjp.atによる寄稿）</target>
        </trans-unit>
        <trans-unit id="5dee00bc78a497a9d448541fd31f216ca89ba87a" translate="yes" xml:space="preserve">
          <source>(contributed by Shlomi Fish)</source>
          <target state="translated">（Shlomi Fishによる寄稿）</target>
        </trans-unit>
        <trans-unit id="1e46d3c5ed3722672a09f39374a1a7ffdac24e1c" translate="yes" xml:space="preserve">
          <source>(contributed by Xho)</source>
          <target state="translated">（Xhoによる寄稿）</target>
        </trans-unit>
        <trans-unit id="b1ad773d61a232c565a534ba9591dd6ec671fc74" translate="yes" xml:space="preserve">
          <source>(contributed by brian d foy and Ben Morrow)</source>
          <target state="translated">（brian d foyおよびBen Morrowによる寄稿）</target>
        </trans-unit>
        <trans-unit id="da6037d0c8a0901dbdb8efa83408cf6cf316ca26" translate="yes" xml:space="preserve">
          <source>(contributed by brian d foy and Benjamin Goldberg)</source>
          <target state="translated">（brian d foyおよびBenjamin Goldbergによる寄稿）</target>
        </trans-unit>
        <trans-unit id="b450df445d93e3c6b0f335b0c69c72d7b68c7ec1" translate="yes" xml:space="preserve">
          <source>(contributed by brian d foy and Dave Cross)</source>
          <target state="translated">（brian d foyおよびDave Crossによる寄稿）</target>
        </trans-unit>
        <trans-unit id="31cee2f6fca37b4a710b6741f1b97ea6878162ca" translate="yes" xml:space="preserve">
          <source>(contributed by brian d foy with updates from others)</source>
          <target state="translated">（brian d foyによる寄稿と他の人からの更新）</target>
        </trans-unit>
        <trans-unit id="5ecf6719df9ae48ff24c5100a5d4b1ef446cd95f" translate="yes" xml:space="preserve">
          <source>(contributed by brian d foy)</source>
          <target state="translated">（brian d foyによる寄稿）</target>
        </trans-unit>
        <trans-unit id="2c422c445de0783d3809d65cd3e3acd9a5e0e370" translate="yes" xml:space="preserve">
          <source>(contributed by brian d foy, updated Fri Jul 25 12:22:26 PDT 2008)</source>
          <target state="translated">（brian d foyによる寄稿、2008年7月25日12:22:26 PDT更新）</target>
        </trans-unit>
        <trans-unit id="9c413c8db2fc0e0a195f2df6b3cb2359816721c7" translate="yes" xml:space="preserve">
          <source>(copyright 2004, Published by O'Reilly Media, Inc.), Damian Conway provides a list of criteria to use when deciding if OO is the right fit for your problem:</source>
          <target state="translated">（著作権2004、O'Reilly Media、Inc.発行）、Damian Conwayは、OOが問題に適しているかどうかを判断するときに使用する基準のリストを提供しています。</target>
        </trans-unit>
        <trans-unit id="181e536cf1422cc7201f63d065eb7aa9c1490f16" translate="yes" xml:space="preserve">
          <source>(currently the last two may hit a wrong location, but this may improve soon). Under Win* see &lt;a href=&quot;#SYNOPSIS&quot;&gt;&quot;SYNOPSIS&quot;&lt;/a&gt;.</source>
          <target state="translated">（現在、最後の2つは間違った場所にヒットする可能性がありますが、これはすぐに改善される可能性があります）。Win *の下で、&lt;a href=&quot;#SYNOPSIS&quot;&gt;「SYNOPSIS」を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="ea2654366590f288ae6ebd7fdc54bceaf9e6545c" translate="yes" xml:space="preserve">
          <source>(currently the last two may hit a wrong location, but this may improve soon). Under Win* see &lt;a href=&quot;#SYNOPSIS&quot;&gt;SYNOPSIS&lt;/a&gt;.</source>
          <target state="translated">（現在、最後の2つは間違った場所にヒットする可能性がありますが、すぐに改善される可能性があります）。Win *の下では、&lt;a href=&quot;#SYNOPSIS&quot;&gt;SYNOPSISを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="41e74bf7b4c32eb2f41eaf25ee2c6c323ec8d504" translate="yes" xml:space="preserve">
          <source>(cuttable). An atomic operation is an action that can&amp;rsquo;t be interrupted, not one forbidden in a nuclear-free zone.</source>
          <target state="translated">（カット可能）。アトミック操作は中断できないアクションであり、非核地帯で禁止されているアクションではありません。</target>
        </trans-unit>
        <trans-unit id="b3a9a8199852eb2a04185407b3827576c8e6172d" translate="yes" xml:space="preserve">
          <source>(defaults to the environment variable</source>
          <target state="translated">（デフォルトは環境変数です</target>
        </trans-unit>
        <trans-unit id="c979523d1a9c1a0d77ab7e430a7c98147073391d" translate="yes" xml:space="preserve">
          <source>(deprecated - use &lt;code&gt;(AV *)NULL&lt;/code&gt; instead)</source>
          <target state="translated">（非推奨- 代わりに &lt;code&gt;(AV *)NULL&lt;/code&gt; を使用）</target>
        </trans-unit>
        <trans-unit id="887821ca73f1fcf6de46ded6b730b60d3beffd8e" translate="yes" xml:space="preserve">
          <source>(deprecated - use &lt;code&gt;(CV *)NULL&lt;/code&gt; instead)</source>
          <target state="translated">（非推奨- 代わりに &lt;code&gt;(CV *)NULL&lt;/code&gt; を使用）</target>
        </trans-unit>
        <trans-unit id="b53d21700af9fd28a7f43adfe7247f1c0f49ab4c" translate="yes" xml:space="preserve">
          <source>(deprecated - use &lt;code&gt;(HV *)NULL&lt;/code&gt; instead)</source>
          <target state="translated">（非推奨- 代わりに &lt;code&gt;(HV *)NULL&lt;/code&gt; を使用）</target>
        </trans-unit>
        <trans-unit id="4957206df9fb7ffd7b399b79b2a6449d69017a22" translate="yes" xml:space="preserve">
          <source>(do not forget to run &lt;code&gt;make regen_headers&lt;/code&gt; if you modify this file).</source>
          <target state="translated">（このファイルを変更する場合は、 &lt;code&gt;make regen_headers&lt;/code&gt; を実行することを忘れないでください）。</target>
        </trans-unit>
        <trans-unit id="47d764752c9dc13917cf2e5897bbaac62c58fbf5" translate="yes" xml:space="preserve">
          <source>(e.g., the application may hang, or generate an error) due to mutexes that are needed to control functionality within the &lt;a href=&quot;threads&quot;&gt;threads&lt;/a&gt; module.</source>
          <target state="translated">&lt;a href=&quot;threads&quot;&gt;スレッド&lt;/a&gt;モジュール内の機能を制御するために必要なミューテックスが原因で（たとえば、アプリケーションがハングするか、エラーを生成することがあります）。</target>
        </trans-unit>
        <trans-unit id="ae81a9ce14e07a570fbb453b8b2d8a4343210087" translate="yes" xml:space="preserve">
          <source>(engineers use</source>
          <target state="translated">（エンジニアが使用する</target>
        </trans-unit>
        <trans-unit id="a0b2466bb6153f054793526252c555c73aaf459d" translate="yes" xml:space="preserve">
          <source>(equal) if the operands are char-for-char identical. If you really want to know whether two strings--which &lt;code&gt;eq&lt;/code&gt; and &lt;code&gt;cmp&lt;/code&gt; may consider different--are equal as far as collation in the locale is concerned, see the discussion in &lt;a href=&quot;#Category-LC_COLLATE%3A-Collation&quot;&gt;&quot;Category &lt;code&gt;LC_COLLATE&lt;/code&gt;: Collation&quot;&lt;/a&gt;.</source>
          <target state="translated">（等しい）オペランドがchar-for-char同一である場合。ロケールでの照合に関する限り、2つの文字列（ &lt;code&gt;eq&lt;/code&gt; と &lt;code&gt;cmp&lt;/code&gt; が異なると見なす可能性がある）が等しいかどうかを本当に知りたい場合は、&lt;a href=&quot;#Category-LC_COLLATE%3A-Collation&quot;&gt;「カテゴリ &lt;code&gt;LC_COLLATE&lt;/code&gt; ：照合」の&lt;/a&gt;説明を参照してください。</target>
        </trans-unit>
        <trans-unit id="4a54a48aa166f000450ddb5bbfffb162a4703f6a" translate="yes" xml:space="preserve">
          <source>(equal) if the operands are char-for-char identical. If you really want to know whether two strings--which &lt;code&gt;eq&lt;/code&gt; and &lt;code&gt;cmp&lt;/code&gt; may consider different--are equal as far as collation in the locale is concerned, see the discussion in &lt;a href=&quot;#Category-LC_COLLATE-%3a-Collation&quot;&gt;Category LC_COLLATE : Collation&lt;/a&gt;.</source>
          <target state="translated">（等しい）オペランドが文字単位で同一の場合。ロケールの照合に関する限り、2つの文字列（ &lt;code&gt;eq&lt;/code&gt; と &lt;code&gt;cmp&lt;/code&gt; が異なると見なす可能性がある）が等しいかどうかを本当に知りたい場合は、&lt;a href=&quot;#Category-LC_COLLATE-%3a-Collation&quot;&gt;カテゴリLC_COLLATE：Collat​​ionの&lt;/a&gt;説明を参照してください。</target>
        </trans-unit>
        <trans-unit id="7d245ed086c5e828978b1419867a15ebe5c96265" translate="yes" xml:space="preserve">
          <source>(explained in the next paragraph), separated by spaces. (Other than as used to separate elements, spaces are to be ignored.) Case distinctions in the condition list are not significant. Conditions preceded by &quot;NON_&quot; represent the negation of the condition.</source>
          <target state="translated">（次の段落で説明）、スペースで区切られます。（要素を区切るために使用される場合を除き、スペースは無視されます。）条件リスト内の大文字と小文字の区別は重要ではありません。「NON_」が前に付く条件は、条件の否定を表します。</target>
        </trans-unit>
        <trans-unit id="b7612ed7f2ab039566cbb6a180523b77c6c55c37" translate="yes" xml:space="preserve">
          <source>(for Win32 Perl)</source>
          <target state="translated">（Win32 Perlの場合）</target>
        </trans-unit>
        <trans-unit id="52773988fa05986370e14e73b80f0d9b5d869e6f" translate="yes" xml:space="preserve">
          <source>(for pthreads platforms)</source>
          <target state="translated">（pthreadsプラットフォームの場合）</target>
        </trans-unit>
        <trans-unit id="f2baa49355f382d8855fa13bc94ef1ce38af8547" translate="yes" xml:space="preserve">
          <source>(have the directories with &lt;code&gt;*.exe&lt;/code&gt; on PATH, and &lt;code&gt;*.dll&lt;/code&gt; on LIBPATH);</source>
          <target state="translated">（PATHに &lt;code&gt;*.exe&lt;/code&gt; 、LIBPATHに &lt;code&gt;*.dll&lt;/code&gt; のディレクトリがあります）。</target>
        </trans-unit>
        <trans-unit id="8b307b3649a26281003eca21c9415192d0da1a2f" translate="yes" xml:space="preserve">
          <source>(have the directory on PATH);</source>
          <target state="translated">（PATHにディレクトリがあります）;</target>
        </trans-unit>
        <trans-unit id="e78594face702b66af1259171d24ead963a0670c" translate="yes" xml:space="preserve">
          <source>(here the optional &lt;code&gt;IN&lt;/code&gt; keyword is omitted).</source>
          <target state="translated">（ここでは、オプションの &lt;code&gt;IN&lt;/code&gt; キーワードは省略されています）。</target>
        </trans-unit>
        <trans-unit id="0ca1edf548683a8b18ee06ce8f4d27a28c75a756" translate="yes" xml:space="preserve">
          <source>(i.e. &lt;code&gt;A::foo&lt;/code&gt; is called twice).</source>
          <target state="translated">（つまり、 &lt;code&gt;A::foo&lt;/code&gt; が2回呼び出されます）。</target>
        </trans-unit>
        <trans-unit id="8f8464e8307b268923dc0c2b5876277d2c0fd5db" translate="yes" xml:space="preserve">
          <source>(i.e., &lt;code&gt;(EXPR &amp;amp; 0700) &amp;gt; 0&lt;/code&gt; ), raises an exception. If umask(2) is not implemented and you are not trying to restrict access for yourself, returns &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">（つまり、 &lt;code&gt;(EXPR &amp;amp; 0700) &amp;gt; 0&lt;/code&gt; ）、例外が発生します。umask（2）が実装されておらず、自分でアクセスを制限しようとしていない場合は、 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="8f5d49562cd8c87da892149a0b2d4a8af46e9d52" translate="yes" xml:space="preserve">
          <source>(i.e., &lt;code&gt;(EXPR &amp;amp; 0700) &amp;gt; 0&lt;/code&gt; ), raises an exception. If umask(2) is not implemented and you are not trying to restrict access for yourself, returns &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">（つまり、 &lt;code&gt;(EXPR &amp;amp; 0700) &amp;gt; 0&lt;/code&gt; ）、例外が発生します。umask（2）が実装されておらず、自分でアクセスを制限しようとしていない場合は、 &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="d6522627c132299a9219dc1d891e679179a79502" translate="yes" xml:space="preserve">
          <source>(i.e., &lt;code&gt;(EXPR &amp;amp; 0700) &amp;gt; 0&lt;/code&gt;), raises an exception. If &lt;a href=&quot;http://man.he.net/man2/umask&quot;&gt;umask(2)&lt;/a&gt; is not implemented and you are not trying to restrict access for yourself, returns &lt;a href=&quot;#undef-EXPR&quot;&gt;&lt;code&gt;undef&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">（つまり、 &lt;code&gt;(EXPR &amp;amp; 0700) &amp;gt; 0&lt;/code&gt; ）、例外が発生します。場合&lt;a href=&quot;http://man.he.net/man2/umask&quot;&gt;のumask（2）が&lt;/a&gt;実装されていない、あなたがあなた自身のためのアクセスを制限しようとしていない、リターンは&lt;a href=&quot;#undef-EXPR&quot;&gt; &lt;code&gt;undef&lt;/code&gt; を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="55c213fac91606d567b36164fd0c347d752bb458" translate="yes" xml:space="preserve">
          <source>(i.e., Unix) you can configure perl with &lt;code&gt;-Accflags=-DPERL_DEBUG_READONLY_COW&lt;/code&gt; and it will turn buffer violations into crashes. You will find it to be marvellously slow, so you may want to skip perl's own tests.</source>
          <target state="translated">（つまり、Unix） &lt;code&gt;-Accflags=-DPERL_DEBUG_READONLY_COW&lt;/code&gt; を使用してperlを構成すると、バッファ違反がクラッシュに変わります。驚くほど遅いことがわかるので、perl自身のテストをスキップすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="ce300057bb6cbcc44d6adf16788915bba76efc18" translate="yes" xml:space="preserve">
          <source>(if &lt;a href=&quot;../cpan/meta&quot;&gt;CPAN::Meta&lt;/a&gt; is installed). Clients like &lt;a href=&quot;../cpan&quot;&gt;CPAN&lt;/a&gt; or &lt;a href=&quot;http://search.cpan.org/perldoc/CPANPLUS&quot;&gt;CPANPLUS&lt;/a&gt; will read this files to see what prerequisites must be fulfilled before building or testing the distribution. If you with to shut this feature off, set the &lt;code&gt;NO_MYMETA&lt;/code&gt;&lt;code&gt;WriteMakeFile()&lt;/code&gt; flag to true.</source>
          <target state="translated">（&lt;a href=&quot;../cpan/meta&quot;&gt;CPAN :: Meta&lt;/a&gt;がインストールされている場合）。&lt;a href=&quot;../cpan&quot;&gt;CPAN&lt;/a&gt;や&lt;a href=&quot;http://search.cpan.org/perldoc/CPANPLUS&quot;&gt;CPANPLUSの&lt;/a&gt;ようなクライアントは、このファイルを読んで、ディストリビューションをビルドまたはテストする前に満たす必要がある前提条件を確認します。この機能をオフにする必要がある場合は、 &lt;code&gt;NO_MYMETA&lt;/code&gt; &lt;code&gt;WriteMakeFile()&lt;/code&gt; フラグをtrue に設定します。</target>
        </trans-unit>
        <trans-unit id="1bb2e3e9c70daf92dbbbe2b3d1b529a91355eda5" translate="yes" xml:space="preserve">
          <source>(if &lt;a href=&quot;CPAN::Meta&quot;&gt;CPAN::Meta&lt;/a&gt; is installed). Clients like &lt;a href=&quot;cpan&quot;&gt;CPAN&lt;/a&gt; or &lt;a href=&quot;cpanplus&quot;&gt;CPANPLUS&lt;/a&gt; will read these files to see what prerequisites must be fulfilled before building or testing the distribution. If you wish to shut this feature off, set the &lt;code&gt;NO_MYMETA&lt;/code&gt;&lt;code&gt;WriteMakeFile()&lt;/code&gt; flag to true.</source>
          <target state="translated">（&lt;a href=&quot;CPAN::Meta&quot;&gt;CPAN :: Meta&lt;/a&gt;がインストールされている場合）。&lt;a href=&quot;cpan&quot;&gt;CPAN&lt;/a&gt;や&lt;a href=&quot;cpanplus&quot;&gt;CPANPLUS&lt;/a&gt;などのクライアントは、これらのファイルを読み取って、ディストリビューションを構築またはテストする前に満たす必要のある前提条件を確認します。この機能をオフにしたい場合は、 &lt;code&gt;NO_MYMETA&lt;/code&gt; &lt;code&gt;WriteMakeFile()&lt;/code&gt; フラグをtrueに設定します。</target>
        </trans-unit>
        <trans-unit id="74e7cc4a040d094131ce7adf1ccff6a9eb9bc3ff" translate="yes" xml:space="preserve">
          <source>(if it exists) are ignored.</source>
          <target state="translated">（存在する場合）は無視されます。</target>
        </trans-unit>
        <trans-unit id="8bd7b4287b1a4320a59f0e97575d78114f1f439c" translate="yes" xml:space="preserve">
          <source>(ignore multiple &lt;code&gt;warning L4085&lt;/code&gt; ).</source>
          <target state="translated">（複数の &lt;code&gt;warning L4085&lt;/code&gt; 無視してください）。</target>
        </trans-unit>
        <trans-unit id="22e1932e601e46590f4cd1081a5ac59daa128d38" translate="yes" xml:space="preserve">
          <source>(ignore multiple &lt;code&gt;warning L4085&lt;/code&gt;).</source>
          <target state="translated">（複数の &lt;code&gt;warning L4085&lt;/code&gt; 無視してください）。</target>
        </trans-unit>
        <trans-unit id="51361c690dc77f93fb8886da6627b841196647e3" translate="yes" xml:space="preserve">
          <source>(in a new</source>
          <target state="translated">（新しい</target>
        </trans-unit>
        <trans-unit id="d346483f692f461af7f2b89212d442e1ef9e6fb1" translate="yes" xml:space="preserve">
          <source>(in cleanup) %s</source>
          <target state="translated">（クリーンアップ中）％s</target>
        </trans-unit>
        <trans-unit id="92af5b7be830c62c74b2cbee2ea3528c112d9b33" translate="yes" xml:space="preserve">
          <source>(in the CPAN distribution of this module) for how to create a class that supports object sharing.</source>
          <target state="translated">（このモジュールのCPANディストリビューション内）オブジェクト共有をサポートするクラスの作成方法。</target>
        </trans-unit>
        <trans-unit id="facc7193d5281131d9b0521947b073e2e6c2eb5b" translate="yes" xml:space="preserve">
          <source>(installed as</source>
          <target state="translated">（としてインストール</target>
        </trans-unit>
        <trans-unit id="70b861787e317f2c2b8cac2c8a1c5c4c08c57918" translate="yes" xml:space="preserve">
          <source>(installed as &lt;a href=&quot;perlamiga&quot;&gt;perlamiga&lt;/a&gt;).</source>
          <target state="translated">（&lt;a href=&quot;perlamiga&quot;&gt;perlamiga&lt;/a&gt;としてインストールされます）。</target>
        </trans-unit>
        <trans-unit id="4a2fc6f0afe5ebafb971a5f6f6450a8a8966ee80" translate="yes" xml:space="preserve">
          <source>(installed as &lt;a href=&quot;perlcygwin&quot;&gt;perlcygwin&lt;/a&gt;), &lt;a href=&quot;http://www.cygwin.com/&quot;&gt;http://www.cygwin.com/&lt;/a&gt;</source>
          <target state="translated">（&lt;a href=&quot;perlcygwin&quot;&gt;perlcygwin&lt;/a&gt;としてインストール）、&lt;a href=&quot;http://www.cygwin.com/&quot;&gt;http：&lt;/a&gt;//www.cygwin.com/</target>
        </trans-unit>
        <trans-unit id="30794954cc28f569f6a6161a7038ad0f0357c23b" translate="yes" xml:space="preserve">
          <source>(installed as &lt;a href=&quot;perlcygwin&quot;&gt;perlcygwin&lt;/a&gt;), &lt;a href=&quot;https://www.cygwin.com/&quot;&gt;https://www.cygwin.com/&lt;/a&gt;</source>
          <target state="translated">（&lt;a href=&quot;perlcygwin&quot;&gt;perlcygwin&lt;/a&gt;としてインストール）、&lt;a href=&quot;https://www.cygwin.com/&quot;&gt;https：&lt;/a&gt;//www.cygwin.com/</target>
        </trans-unit>
        <trans-unit id="d21126d258fc7e5193f50e33b705649c9f31bd37" translate="yes" xml:space="preserve">
          <source>(installed as &lt;a href=&quot;perlvos&quot;&gt;perlvos&lt;/a&gt;)</source>
          <target state="translated">（&lt;a href=&quot;perlvos&quot;&gt;perlvos&lt;/a&gt;としてインストール）</target>
        </trans-unit>
        <trans-unit id="69a2857991e5de08a1db31d1251389885ffd8caa" translate="yes" xml:space="preserve">
          <source>(internal use only)</source>
          <target state="translated">（内部でのみ使用）</target>
        </trans-unit>
        <trans-unit id="3745d664a5cb578c0bc49111f2af5da3e3f2d003" translate="yes" xml:space="preserve">
          <source>(just by the name of the IO function, like &quot;Read&quot;) with the</source>
          <target state="translated">（ちょうど「読み取り」のようなIO関数の名前で）</target>
        </trans-unit>
        <trans-unit id="cd5c26a005439b782269db0e964b40fc7eca11de" translate="yes" xml:space="preserve">
          <source>(like &lt;code&gt;COMBINING ACUTE ACCENT&lt;/code&gt; ). This sequence of base character and modifiers is called a</source>
          <target state="translated">（ &lt;code&gt;COMBINING ACUTE ACCENT&lt;/code&gt; のように）。この基本文字と修飾子のシーケンスは、</target>
        </trans-unit>
        <trans-unit id="e4fb3e36ee76f262b7a838b518d4426d4da329c7" translate="yes" xml:space="preserve">
          <source>(like &lt;code&gt;COMBINING ACUTE ACCENT&lt;/code&gt;). This sequence of base character and modifiers is called a</source>
          <target state="translated">（ &lt;code&gt;COMBINING ACUTE ACCENT&lt;/code&gt; など）。この基本文字と修飾子のシーケンスは、</target>
        </trans-unit>
        <trans-unit id="8620bf49ecd95e38b6d7494e30b7d9014d4bad52" translate="yes" xml:space="preserve">
          <source>(like &lt;code&gt;LATIN CAPITAL LETTER A&lt;/code&gt; ) followed by one or more</source>
          <target state="translated">（ &lt;code&gt;LATIN CAPITAL LETTER A&lt;/code&gt; ）の後に1つ以上続く</target>
        </trans-unit>
        <trans-unit id="684b38fe36448fe950b0ca06019115edb178737c" translate="yes" xml:space="preserve">
          <source>(like &lt;code&gt;LATIN CAPITAL LETTER A&lt;/code&gt;) followed by one or more</source>
          <target state="translated">（ &lt;code&gt;LATIN CAPITAL LETTER A&lt;/code&gt; ように）1つ以上が続く</target>
        </trans-unit>
        <trans-unit id="898558423b918aeed50b4db293c37dc4600aa4d3" translate="yes" xml:space="preserve">
          <source>(may be system dependent). If you want to force the creation of a new perl, it is recommended that you delete this</source>
          <target state="translated">（システムに依存する場合があります）。新しいperlの作成を強制したい場合は、これを削除することをお勧めします</target>
        </trans-unit>
        <trans-unit id="b135c873a61fbd2b70216d59897dae798e688cac" translate="yes" xml:space="preserve">
          <source>(minimum) width</source>
          <target state="translated">（最小）幅</target>
        </trans-unit>
        <trans-unit id="fb68136270e91ed8ffdbfd39c681ea2d1e249f38" translate="yes" xml:space="preserve">
          <source>(nearly all modules) this has three side effects:</source>
          <target state="translated">（ほぼすべてのモジュール）これには3つの副作用があります。</target>
        </trans-unit>
        <trans-unit id="394df79e888bb4bc8d5dd0e24df5f278d4cdc8b9" translate="yes" xml:space="preserve">
          <source>(no extension) give an argument &lt;code&gt;n:/bin/blah.&lt;/code&gt; (dot appended) to system().</source>
          <target state="translated">（拡張子なし）引数 &lt;code&gt;n:/bin/blah.&lt;/code&gt; （ドットを追加）をsystem（）に追加。</target>
        </trans-unit>
        <trans-unit id="e0f8b79485e24e1aa85b5719818060e99b9fac5a" translate="yes" xml:space="preserve">
          <source>(non-super) languages that are probably acceptable to the user, to be used</source>
          <target state="translated">（スーパーではない）おそらくユーザーが許容できる言語を使用する</target>
        </trans-unit>
        <trans-unit id="df56c4328df4065d33cb67c45603001892660f7c" translate="yes" xml:space="preserve">
          <source>(not locales). See the GNU &lt;code&gt;gettext&lt;/code&gt; library documentation for more information.</source>
          <target state="translated">（ロケールではありません）。詳細については、GNU &lt;code&gt;gettext&lt;/code&gt; ライブラリのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="ca133eb8cde4644a55bd2dd3514979460453ef7d" translate="yes" xml:space="preserve">
          <source>(not simply older ones) set the &lt;code&gt;UNINST&lt;/code&gt; variable.</source>
          <target state="translated">（単に古いものではなく） &lt;code&gt;UNINST&lt;/code&gt; 変数を設定します。</target>
        </trans-unit>
        <trans-unit id="87ba0557f46520422b4ad12ed987b7a873c1f334" translate="yes" xml:space="preserve">
          <source>(not) +</source>
          <target state="translated">（ない）+</target>
        </trans-unit>
        <trans-unit id="516dc39365f26048e9a017e4305c1cd5470e6958" translate="yes" xml:space="preserve">
          <source>(note that the argument &lt;code&gt;-my_opts&lt;/code&gt; is taken care of by the &lt;code&gt;extproc&lt;/code&gt; line in your script, see &lt;a href=&quot;#extproc-on-the-first-line&quot;&gt;&quot;&lt;code&gt;extproc&lt;/code&gt; on the first line&quot;&lt;/a&gt;).</source>
          <target state="translated">（引数 &lt;code&gt;-my_opts&lt;/code&gt; は、スクリプトの &lt;code&gt;extproc&lt;/code&gt; 行によって処理されることに注意してください。&lt;a href=&quot;#extproc-on-the-first-line&quot;&gt;「最初の行の&lt;/a&gt; &lt;code&gt;extproc&lt;/code&gt; 」を参照してください）。</target>
        </trans-unit>
        <trans-unit id="a87bac478adeaad45a131a7a1ff824736853050d" translate="yes" xml:space="preserve">
          <source>(note that the argument &lt;code&gt;-my_opts&lt;/code&gt; is taken care of by the &lt;code&gt;extproc&lt;/code&gt; line in your script, see &lt;a href=&quot;#extproc-on-the-first-line&quot;&gt;extproc on the first line&lt;/a&gt;).</source>
          <target state="translated">（引数 &lt;code&gt;-my_opts&lt;/code&gt; はスクリプトの &lt;code&gt;extproc&lt;/code&gt; 行によって処理されます。&lt;a href=&quot;#extproc-on-the-first-line&quot;&gt;最初の行のextprocを&lt;/a&gt;参照してください）。</target>
        </trans-unit>
        <trans-unit id="2252501faf83dd862f721d37d7fabacb6191045c" translate="yes" xml:space="preserve">
          <source>(note the capital 'O')?</source>
          <target state="translated">（大文字の「O」に注意してください）？</target>
        </trans-unit>
        <trans-unit id="2f31cea769a0a416e9dd648f32e14fc8c6b80912" translate="yes" xml:space="preserve">
          <source>(obsolete) supply object methods for directory handles</source>
          <target state="translated">（廃止）ディレクトリハンドルのオブジェクトメソッドを提供する</target>
        </trans-unit>
        <trans-unit id="7739136dc697141cd8d76585cab6736b910f012b" translate="yes" xml:space="preserve">
          <source>(or</source>
          <target state="translated">(or</target>
        </trans-unit>
        <trans-unit id="943a0a81a1832953a2e589fda6975dd0742c8224" translate="yes" xml:space="preserve">
          <source>(or a later version). Note that all these utilities are known to be available from LEO:</source>
          <target state="translated">（またはそれ以降のバージョン）。これらのユーティリティはすべて、LEOから入手できることがわかっています。</target>
        </trans-unit>
        <trans-unit id="0be01a7b142b9329408575280612f9a80ba4041b" translate="yes" xml:space="preserve">
          <source>(or atomic subexpressions) are regular expressions, in the context of a larger regular expression, that function independently of the larger regular expression. That is, they consume as much or as little of the string as they wish without regard for the ability of the larger regexp to match. Independent subexpressions are represented by &lt;code&gt;(?&amp;gt;regexp)&lt;/code&gt; or (starting in 5.32, experimentally in 5.28) &lt;code&gt;(*atomic:regexp)&lt;/code&gt;. We can illustrate their behavior by first considering an ordinary regexp:</source>
          <target state="translated">（またはアトミック部分式）は、より大きな正規表現のコンテキストでは、より大きな正規表現とは独立して機能する正規表現です。つまり、より大きな正規表現が一致する能力に関係なく、必要なだけ文字列を消費します。独立した部分式は、 &lt;code&gt;(?&amp;gt;regexp)&lt;/code&gt; または（5.32から始まり、実験的に5.28から） &lt;code&gt;(*atomic:regexp)&lt;/code&gt; で表されます。最初に通常の正規表現を検討することで、それらの動作を説明できます。</target>
        </trans-unit>
        <trans-unit id="c1d876dbf1a11aabf97fb7b5ced558dd7fc14007" translate="yes" xml:space="preserve">
          <source>(or current directory) and working back up to five levels of '..'.</source>
          <target state="translated">（または現在のディレクトリ）、最大5レベルの「..」に戻ります。</target>
        </trans-unit>
        <trans-unit id="5d789ea9ecbca64db40cc5cf855ac5aab3b99f9f" translate="yes" xml:space="preserve">
          <source>(or equivalent) to check for executable image, and</source>
          <target state="translated">（または同等のもの）実行可能イメージをチェックします。</target>
        </trans-unit>
        <trans-unit id="8fad3115516a964cc9ebf7c5c7a5c31c4b8ee04f" translate="yes" xml:space="preserve">
          <source>(or filename) is stored the zip archive.</source>
          <target state="translated">（またはファイル名）はzipアーカイブに保存されます。</target>
        </trans-unit>
        <trans-unit id="f682b3c18a9391cb4e366a7aa9b5a7cb465c2e8c" translate="yes" xml:space="preserve">
          <source>(or formerly</source>
          <target state="translated">（または以前は</target>
        </trans-unit>
        <trans-unit id="10b8de91c04f0b369cf7eb571a6ee9c70e6c71ba" translate="yes" xml:space="preserve">
          <source>(or similar) must be executed to determine prerequisites.</source>
          <target state="translated">（または同様の）前提条件を決定するために実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="c13eec8ddce00beba6d30648385e210d2e5dbcd6" translate="yes" xml:space="preserve">
          <source>(or similar) must be executed when building this distribution, or whether it can be built, tested and installed solely from consulting its metadata file. The main reason to set this to a true value if that your module performs some dynamic configuration (asking questions, sensing the environment, etc.) as part of its build/install process.</source>
          <target state="translated">（または同様の）このディストリビューションをビルドするとき、またはメタデータファイルを参照するだけでビルド、テスト、およびインストールできるかどうかを実行する必要があります。モジュールがビルド/インストールプロセスの一部として動的構成（質問、環境の検知など）を実行する場合、これを真の値に設定する主な理由。</target>
        </trans-unit>
        <trans-unit id="d5020017a9c342ddf1d165a2f255f48cb8ec7e31" translate="yes" xml:space="preserve">
          <source>(or similar) must be executed when building this distribution, or whether it can be built, tested and installed solely from consulting its metadata file. The main reason to set this to a true value is that your module performs some dynamic configuration (asking questions, sensing the environment, etc.) as part of its build/install process.</source>
          <target state="translated">（または同様の）このディストリビューションをビルドするとき、またはメタデータファイルを参照するだけでビルド、テスト、およびインストールできるかどうかを実行する必要があります。これを真の値に設定する主な理由は、モジュールがビルド/インストールプロセスの一部として動的構成（質問、環境の検知など）を実行するためです。</target>
        </trans-unit>
        <trans-unit id="5391579085669783c7f6909d1b2de35a976a946e" translate="yes" xml:space="preserve">
          <source>(or similar) must be executed, or whether this module can be built, tested and installed solely from consulting its metadata file. The main reason to set this to a true value if that your module performs some dynamic configuration (asking questions, sensing the environment, etc.) as part of its build/install process.</source>
          <target state="translated">（または同様の）を実行する必要があります。または、メタデータファイルを参照するだけでこのモジュールを構築、テスト、およびインストールできるかどうか。モジュールがビルド/インストールプロセスの一部として動的構成（質問、環境の検知など）を実行する場合、これを真の値に設定する主な理由。</target>
        </trans-unit>
        <trans-unit id="d403fe550f70047da65adfbaaaa9a12d0ea25d65" translate="yes" xml:space="preserve">
          <source>(or something like that).</source>
          <target state="translated">（またはそのようなもの）。</target>
        </trans-unit>
        <trans-unit id="b78679543a880190c17b815dfea3958a0c6bb773" translate="yes" xml:space="preserve">
          <source>(or the second if the first character is a caret) character of a bracketed character class, it does not denote the end of the class (as you cannot have an empty class) and is considered part of the set of characters that can be matched without escaping.</source>
          <target state="translated">ブラケット付き文字クラスの（最初の文字がキャレットの場合は2番目の）文字、これはクラスの終わりを示しておらず（空のクラスを持つことはできないため）、一致できる文字セットの一部と見なされます逃げることなく。</target>
        </trans-unit>
        <trans-unit id="d8c8bb7d961236b850f553d2b4e51bb846fabeed" translate="yes" xml:space="preserve">
          <source>(or the value is discarded if</source>
          <target state="translated">（または、値は破棄されます</target>
        </trans-unit>
        <trans-unit id="a47590de5dce94882f3eb07aab9c1f1f12b27039" translate="yes" xml:space="preserve">
          <source>(or you could just use &lt;code&gt;VMS::Stdio::remove&lt;/code&gt; , if you've installed the VMS::Stdio extension distributed with Perl). If &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt;&lt;/code&gt; has to change the file protection to delete the file, and you interrupt it in midstream, the file may be left intact, but with a changed ACL allowing you delete access.</source>
          <target state="translated">（または、Perlとともに配布されているVMS :: Stdio拡張機能をインストールしている場合は、単に &lt;code&gt;VMS::Stdio::remove&lt;/code&gt; 使用できます）。場合 &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt;&lt;/code&gt; ファイルを削除するには、ファイルの保護を変更する必要があり、あなたが途中でそれを中断、ファイルはそのまま残りますが、変更ACLを使用すると、削除アクセスを許可しても良いです。</target>
        </trans-unit>
        <trans-unit id="f28d131552eca4b6c0fe1f0e1d6122eb3b460e17" translate="yes" xml:space="preserve">
          <source>(or you could just use &lt;code&gt;VMS::Stdio::remove&lt;/code&gt;, if you've installed the VMS::Stdio extension distributed with Perl). If &lt;code&gt;unlink&lt;/code&gt; has to change the file protection to delete the file, and you interrupt it in midstream, the file may be left intact, but with a changed ACL allowing you delete access.</source>
          <target state="translated">（または、Perlで配布されているVMS :: Stdio拡張機能をインストールしている場合は、 &lt;code&gt;VMS::Stdio::remove&lt;/code&gt; 使用することもできます）。場合 &lt;code&gt;unlink&lt;/code&gt; ファイルを削除するには、ファイルの保護を変更する必要があり、あなたが途中でそれを中断、ファイルはそのまま残りますが、変更ACLを使用すると、削除アクセスを許可しても良いです。</target>
        </trans-unit>
        <trans-unit id="5cc4703905ea087120e18389a3b56b4989f1d0ce" translate="yes" xml:space="preserve">
          <source>(or your operating system's equivalent) could not be opened.</source>
          <target state="translated">（またはオペレーティングシステムと同等のもの）を開けませんでした。</target>
        </trans-unit>
        <trans-unit id="d217df85ffcaff01b34839a3630a0f8777e5129a" translate="yes" xml:space="preserve">
          <source>(or your platform's equivalent procedure) to verify that &lt;b&gt;perl&lt;/b&gt; and its libraries have been installed correctly. A correct installation is verified by output that looks like:</source>
          <target state="translated">（またはプラットフォームの同等の手順）を実行して、&lt;b&gt;perl&lt;/b&gt;とそのライブラリが正しくインストールされていることを確認します。正しいインストールは、次のような出力で確認されます。</target>
        </trans-unit>
        <trans-unit id="17fc4954c0e2adfe4c1931803c04d50628b02fa1" translate="yes" xml:space="preserve">
          <source>(or, you don't have to do this yourself because this example is predefined)</source>
          <target state="translated">（または、この例は事前定義されているため、自分で行う必要はありません）</target>
        </trans-unit>
        <trans-unit id="0f663554f9cc36dcf3f1877c497fb678b76cc2ed" translate="yes" xml:space="preserve">
          <source>(override) Because of the difficulty concatenating VMS filepaths we must pre-expand the DEST* variables.</source>
          <target state="translated">（オーバーライド）VMSファイルパスの連結が難しいため、DEST *変数を事前に展開する必要があります。</target>
        </trans-unit>
        <trans-unit id="3e64e5c52f4cbf325d544d16b24131a72496547d" translate="yes" xml:space="preserve">
          <source>(part of the standard perl distribution), which never really got finished. If you find it somewhere,</source>
          <target state="translated">（標準のperlディストリビューションの一部）、実際には完成していません。どこかで見つけたら</target>
        </trans-unit>
        <trans-unit id="922530c6dd5e24c25c5c1c085800263ea1126411" translate="yes" xml:space="preserve">
          <source>(partly contributed by Aaron Sherman)</source>
          <target state="translated">（一部はAaron Shermanによる寄稿）</target>
        </trans-unit>
        <trans-unit id="cd3adb25404edd24eec9d649c8bcb704ae0342ed" translate="yes" xml:space="preserve">
          <source>(portions of this answer contributed by Anno Siegel and brian d foy)</source>
          <target state="translated">（この回答の一部はAnno Siegelとbrian d foyによって提供されました）</target>
        </trans-unit>
        <trans-unit id="3b2cc61f70b62caaa55962a8021228deb590a600" translate="yes" xml:space="preserve">
          <source>(rather than filename) based input and output. These are safe on the assumption that only pre-existing filehandles are available for use. Usually, to create new filehandles other ops such as open would need to be enabled, if you don't take into account the magical open of ARGV.</source>
          <target state="translated">（ファイル名ではなく）ベースの入力と出力。これらは、既存のファイルハンドルのみが使用可能であるという前提で安全です。通常、ARGVの魔法のようなオープンを考慮しない場合、新しいファイルハンドルを作成するには、openなどの他の操作を有効にする必要があります。</target>
        </trans-unit>
        <trans-unit id="c4d5187232fa1c2393eaa02e491a4d557a5f182e" translate="yes" xml:space="preserve">
          <source>(requires, recommends, suggests, conflicts)</source>
          <target state="translated">（必要、推奨、提案、競合）</target>
        </trans-unit>
        <trans-unit id="2848ad6e5d5a5174fbf33c0f002b92ca3e779b91" translate="yes" xml:space="preserve">
          <source>(rho, theta, pi)</source>
          <target state="translated">（ロー、シータ、パイ）</target>
        </trans-unit>
        <trans-unit id="301eec20fcb8d08c4b477b134f84eea526c7c5a2" translate="yes" xml:space="preserve">
          <source>(rho, theta, z)</source>
          <target state="translated">（ロー、シータ、z）</target>
        </trans-unit>
        <trans-unit id="9feb62aa545ce8b013f06110c13fc0f3f902cb3f" translate="yes" xml:space="preserve">
          <source>(sc=Hrkt)</source>
          <target state="translated">(sc=Hrkt)</target>
        </trans-unit>
        <trans-unit id="f13ab2d0c2655750c1afca21b1b6d480ed898d5c" translate="yes" xml:space="preserve">
          <source>(scx=Hrkt)</source>
          <target state="translated">(scx=Hrkt)</target>
        </trans-unit>
        <trans-unit id="af691ce86674610a40b84683145b5d169360d61f" translate="yes" xml:space="preserve">
          <source>(see &lt;a href=&quot;#perl_.exe&quot;&gt;&quot;&lt;i&gt;perl_.exe&lt;/i&gt;&quot;&lt;/a&gt;) by</source>
          <target state="translated">（&lt;a href=&quot;#perl_.exe&quot;&gt;「&lt;i&gt;perl_.exe&lt;/i&gt;」を&lt;/a&gt;参照）</target>
        </trans-unit>
        <trans-unit id="6f1730b3336db772520f06bb063d6d6eb975d7d1" translate="yes" xml:space="preserve">
          <source>(see &lt;a href=&quot;#perl_.exe&quot;&gt;perl_.exe&lt;/a&gt;) by</source>
          <target state="translated">（&lt;a href=&quot;#perl_.exe&quot;&gt;perl_.exeを&lt;/a&gt;参照）</target>
        </trans-unit>
        <trans-unit id="c48f533c48ae737a843e0dd6b406a45fbb539ccb" translate="yes" xml:space="preserve">
          <source>(see &lt;a href=&quot;#perl__.exe&quot;&gt;&quot;perl__.exe&quot;&lt;/a&gt;) if you want to use PM code in your application (as Perl/Tk or OpenGL Perl modules do) without having a text-mode window present.</source>
          <target state="translated">（&lt;a href=&quot;#perl__.exe&quot;&gt;「perl __。exe」を&lt;/a&gt;参照）テキストモードウィンドウを表示せずに（Perl / TkまたはOpenGLPerlモジュールのように）アプリケーションでPMコードを使用する場合。</target>
        </trans-unit>
        <trans-unit id="57d66dd0e5298b5e96ec3ad469013acc44ce6276" translate="yes" xml:space="preserve">
          <source>(see &lt;a href=&quot;#perl__.exe&quot;&gt;perl__.exe&lt;/a&gt;) if you want to use PM code in your application (as Perl/Tk or OpenGL Perl modules do) without having a text-mode window present.</source>
          <target state="translated">（&lt;a href=&quot;#perl__.exe&quot;&gt;perl __。exeを&lt;/a&gt;参照）アプリケーションでPMコードを使用する場合（Perl / TkまたはOpenGL Perlモジュールのように）、テキストモードウィンドウを表示しないでください。</target>
        </trans-unit>
        <trans-unit id="13897f93e1b34b9d187d47d10d0d7a7feddc3e26" translate="yes" xml:space="preserve">
          <source>(see &lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;) are for. (Avoid exec() (see &lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;) unless you know what you do).</source>
          <target state="translated">（&lt;a href=&quot;functions/open&quot;&gt;openを&lt;/a&gt;参照）が対象です。（自分が何をしているかわからない場合は、exec（）（&lt;a href=&quot;functions/exec&quot;&gt;execを&lt;/a&gt;参照）を避けます）。</target>
        </trans-unit>
        <trans-unit id="c6e5e1fe0ec06a97edec0d1b49eba2177a034033" translate="yes" xml:space="preserve">
          <source>(see &lt;a href=&quot;perlfunc#open&quot;&gt;&quot;open&quot; in perlfunc&lt;/a&gt;) are for. (Avoid exec() (see &lt;a href=&quot;perlfunc#exec&quot;&gt;&quot;exec&quot; in perlfunc&lt;/a&gt;) unless you know what you do).</source>
          <target state="translated">（&lt;a href=&quot;perlfunc#open&quot;&gt;perlfuncの「open」を参照&lt;/a&gt;）はです。（何をするかわからない場合&lt;a href=&quot;perlfunc#exec&quot;&gt;は、&lt;/a&gt; exec（）を避けてください（perlfuncの「exec」を参照）。</target>
        </trans-unit>
        <trans-unit id="166724a371ebce21c3789346fabcb64d75a9043d" translate="yes" xml:space="preserve">
          <source>(see &lt;a href=&quot;perlvms&quot;&gt;perlvms&lt;/a&gt;) so that environ is not searched.</source>
          <target state="translated">（&lt;a href=&quot;perlvms&quot;&gt;perlvmsを&lt;/a&gt;参照）environが検索されないようにします。</target>
        </trans-unit>
        <trans-unit id="54b36cc8bf5ee45ddbf22c302f0ff8899587445f" translate="yes" xml:space="preserve">
          <source>(see &lt;a href=&quot;perlvms&quot;&gt;perlvms&lt;/a&gt;) so that the environ array isn't the target of the change to %ENV which produced the warning.</source>
          <target state="translated">（&lt;a href=&quot;perlvms&quot;&gt;perlvmsを&lt;/a&gt;参照）、環境アレイが警告を生成した％ENVへの変更の対象にならないようにします。</target>
        </trans-unit>
        <trans-unit id="fdb75cfc3f651d35ec9dce7ef8ff84370b4689f6" translate="yes" xml:space="preserve">
          <source>(see &lt;a href=&quot;warnings&quot;&gt;warnings&lt;/a&gt;). In this mode of operation, Perl will raise the warning for all matches against a non-Unicode code point (not just the arguable ones), and it skips the optimizations that might cause the warning to not be output. (It currently still won't warn if the match isn't even attempted, like in the &lt;code&gt;&quot;foobar&quot;&lt;/code&gt; example above.)</source>
          <target state="translated">（&lt;a href=&quot;warnings&quot;&gt;警告を&lt;/a&gt;参照）。この操作モードでは、Perlは、Unicode以外のコードポイント（引数のみでなく）に対するすべての一致に対して警告を表示し、警告が出力されない原因となる最適化をスキップします。（現在のところ、上記の &lt;code&gt;&quot;foobar&quot;&lt;/code&gt; 例のように、一致が試みられない場合でも警告は表示されません。）</target>
        </trans-unit>
        <trans-unit id="ae2592aa43fa906f33435791e9b2cf177d7b8878" translate="yes" xml:space="preserve">
          <source>(see Annex 8, UAX #15; and</source>
          <target state="translated">（付録8、UAX＃15を参照してください。および</target>
        </trans-unit>
        <trans-unit id="bfe137530e41031a5af4ace868c82fe0baa9a25b" translate="yes" xml:space="preserve">
          <source>(see below) and/or</source>
          <target state="translated">（下記参照）および/または</target>
        </trans-unit>
        <trans-unit id="2d2a37102316b6b5d1b884637aaaac148e2b754c" translate="yes" xml:space="preserve">
          <source>(see, it's even smart enough to fix my obvious date bug)</source>
          <target state="translated">（参照してください、それは私の明らかな日付のバグを修正するのに十分スマートです）</target>
        </trans-unit>
        <trans-unit id="219b75b05739b79a0aeb3aa178076f50dcc11a3c" translate="yes" xml:space="preserve">
          <source>(short for Posix Space) Starting in 5.18, this is identical in all its forms to the corresponding &lt;code&gt;isSPACE()&lt;/code&gt; macros. The locale forms of this macro are identical to their corresponding &lt;code&gt;isSPACE()&lt;/code&gt; forms in all Perl releases. In releases prior to 5.18, the non-locale forms differ from their &lt;code&gt;isSPACE()&lt;/code&gt; forms only in that the &lt;code&gt;isSPACE()&lt;/code&gt; forms don't match a Vertical Tab, and the &lt;code&gt;isPSXSPC()&lt;/code&gt; forms do. Otherwise they are identical. Thus this macro is analogous to what &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:space:]]/&lt;/a&gt;&lt;/code&gt; matches in a regular expression. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isPSXSPC_A&lt;/code&gt; , &lt;code&gt;isPSXSPC_L1&lt;/code&gt; , &lt;code&gt;isPSXSPC_uni&lt;/code&gt; , &lt;code&gt;isPSXSPC_utf8&lt;/code&gt; , &lt;code&gt;isPSXSPC_LC&lt;/code&gt; , &lt;code&gt;isPSXSPC_LC_uvchr&lt;/code&gt; , and &lt;code&gt;isPSXSPC_LC_utf8&lt;/code&gt; .</source>
          <target state="translated">（Posix Spaceの略）5.18以降、これはすべての形式で対応する &lt;code&gt;isSPACE()&lt;/code&gt; マクロと同じです。このマクロのロケール形式は、すべてのPerlリリースの対応する &lt;code&gt;isSPACE()&lt;/code&gt; 形式と同じです。 5.18の以前のリリースでは、非ロケール形態は、それらの異なる &lt;code&gt;isSPACE()&lt;/code&gt; のみということでフォーム &lt;code&gt;isSPACE()&lt;/code&gt; の形態は、垂直タブと一致しない、と &lt;code&gt;isPSXSPC()&lt;/code&gt; 形態が行います。それ以外は同じです。したがって、このマクロは、 &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:space:]]/&lt;/a&gt;&lt;/code&gt; が正規表現で一致するものに類似しています。バリアント &lt;code&gt;isPSXSPC_A&lt;/code&gt; 、 &lt;code&gt;isPSXSPC_L1&lt;/code&gt; の説明については&lt;a href=&quot;#Character-classification&quot;&gt;、このセクション&lt;/a&gt;の上部を参照してください。 &lt;code&gt;isPSXSPC_uni&lt;/code&gt; 、 &lt;code&gt;isPSXSPC_utf8&lt;/code&gt; 、 &lt;code&gt;isPSXSPC_LC&lt;/code&gt; 、 &lt;code&gt;isPSXSPC_LC_uvchr&lt;/code&gt; 、 &lt;code&gt;isPSXSPC_LC_utf8&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="960c415aa0b49a8eabe255141a5ba8c101a20ea4" translate="yes" xml:space="preserve">
          <source>(short for Posix Space) Starting in 5.18, this is identical in all its forms to the corresponding &lt;code&gt;isSPACE()&lt;/code&gt; macros. The locale forms of this macro are identical to their corresponding &lt;code&gt;isSPACE()&lt;/code&gt; forms in all Perl releases. In releases prior to 5.18, the non-locale forms differ from their &lt;code&gt;isSPACE()&lt;/code&gt; forms only in that the &lt;code&gt;isSPACE()&lt;/code&gt; forms don't match a Vertical Tab, and the &lt;code&gt;isPSXSPC()&lt;/code&gt; forms do. Otherwise they are identical. Thus this macro is analogous to what &lt;code&gt;m/[[:space:]]/&lt;/code&gt; matches in a regular expression. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isPSXSPC_A&lt;/code&gt;, &lt;code&gt;isPSXSPC_L1&lt;/code&gt;, &lt;code&gt;isPSXSPC_uvchr&lt;/code&gt;, &lt;code&gt;isPSXSPC_utf8&lt;/code&gt;, &lt;code&gt;isPSXSPC_utf8_safe&lt;/code&gt;, &lt;code&gt;isPSXSPC_LC&lt;/code&gt;, &lt;code&gt;isPSXSPC_LC_uvchr&lt;/code&gt;, &lt;code&gt;isPSXSPC_LC_utf8&lt;/code&gt;, and &lt;code&gt;isPSXSPC_LC_utf8_safe&lt;/code&gt;.</source>
          <target state="translated">（Posix Spaceの略）5.18以降、これはすべての形式で対応する &lt;code&gt;isSPACE()&lt;/code&gt; マクロと同じです。このマクロのロケール形式は、すべてのPerlリリースの対応する &lt;code&gt;isSPACE()&lt;/code&gt; 形式と同じです。 5.18の以前のリリースでは、非ロケール形態は、それらの異なる &lt;code&gt;isSPACE()&lt;/code&gt; のみということでフォーム &lt;code&gt;isSPACE()&lt;/code&gt; の形態は、垂直タブと一致しない、と &lt;code&gt;isPSXSPC()&lt;/code&gt; 形態が行います。それ以外は同じです。したがって、このマクロは、正規表現で &lt;code&gt;m/[[:space:]]/&lt;/code&gt; が一致するものに類似しています。バリアント &lt;code&gt;isPSXSPC_A&lt;/code&gt; 、 &lt;code&gt;isPSXSPC_L1&lt;/code&gt; 、の説明については&lt;a href=&quot;#Character-classification&quot;&gt;、このセクション&lt;/a&gt;の上部を参照してください。 &lt;code&gt;isPSXSPC_uvchr&lt;/code&gt; 、 &lt;code&gt;isPSXSPC_utf8&lt;/code&gt; 、 &lt;code&gt;isPSXSPC_utf8_safe&lt;/code&gt; 、 &lt;code&gt;isPSXSPC_LC&lt;/code&gt; 、 &lt;code&gt;isPSXSPC_LC_uvchr&lt;/code&gt; 、 &lt;code&gt;isPSXSPC_LC_utf8&lt;/code&gt; 、および &lt;code&gt;isPSXSPC_LC_utf8_safe&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4bd5a16e31ac15e68b14071791ee2945208fa3f4" translate="yes" xml:space="preserve">
          <source>(so &lt;code&gt;!foo&lt;/code&gt; would match anything</source>
          <target state="translated">（したがって、 &lt;code&gt;!foo&lt;/code&gt; はすべてに一致します</target>
        </trans-unit>
        <trans-unit id="cdb3187d740c81b42e6c70423b76a9971d547af9" translate="yes" xml:space="preserve">
          <source>(solidus; &lt;code&gt;U+002F&lt;/code&gt;) characters to reduce the risk of XSS (cross site scripting) that may be caused by &lt;code&gt;&amp;lt;/script&amp;gt;&lt;/code&gt; in a JSON text, with the cost of bloating the size of JSON texts.</source>
          <target state="translated">（solidus; &lt;code&gt;U+002F&lt;/code&gt; ）文字。JSONテキストの &lt;code&gt;&amp;lt;/script&amp;gt;&lt;/code&gt; によって引き起こされる可能性のあるXSS（クロスサイトスクリプティング）のリスクを軽減しますが、JSONテキストのサイズが大きくなります。</target>
        </trans-unit>
        <trans-unit id="4c78e0c73b6b30ea430253f9fd658c00503bafdb" translate="yes" xml:space="preserve">
          <source>(that basically means POSIX fopen() style mode strings plus an optional number to indicate the compression level).</source>
          <target state="translated">（基本的には、POSIX fopen（）スタイルモードの文字列と、圧縮レベルを示すオプションの数値を意味します）。</target>
        </trans-unit>
        <trans-unit id="4b9770fcc7679e51bf57c83553ccf77d479a096c" translate="yes" xml:space="preserve">
          <source>(that is, the loop is broken) when Perl detects that a repeated expression matched a zero-length substring. Thus</source>
          <target state="translated">（つまり、ループが壊れています）繰り返し式が長さゼロの部分文字列に一致したことをPerlが検出したとき。したがって</target>
        </trans-unit>
        <trans-unit id="2c2b3767cd67fda7e4ff13d64bc55c53b4c03d5d" translate="yes" xml:space="preserve">
          <source>(that's not a misspelling!) has some good tips on optimization, too. Advice on benchmarking boils down to: benchmark and profile to make sure you're optimizing the right part, look for better algorithms instead of microtuning your code, and when all else fails consider just buying faster hardware. You will probably want to read the answer to the earlier question &quot;How do I profile my Perl programs?&quot; if you haven't done so already.</source>
          <target state="translated">（それはスペルミスではありません！）最適化に関するいくつかの良いヒントもあります。ベンチマークに関するアドバイスは、次のようになります。正しい部分を最適化していることを確認するためのベンチマークとプロファイル。コードを微調整する代わりに、より優れたアルゴリズムを探します。他のすべてが失敗した場合は、より高速なハードウェアの購入を検討してください。前の質問「自分のPerlプログラムをプロファイルするにはどうすればよいですか？」に対する回答を読んだほうがよいでしょう。まだ行っていない場合。</target>
        </trans-unit>
        <trans-unit id="afd3f53e28b683fb99368ef0532ecf0f00244306" translate="yes" xml:space="preserve">
          <source>(the Camel, 3rd edition) or elsewhere, &lt;code&gt;:raw&lt;/code&gt; is</source>
          <target state="translated">（ラクダ、第3版）または他の場所で、 &lt;code&gt;:raw&lt;/code&gt; は</target>
        </trans-unit>
        <trans-unit id="c0571c4fd0703d94ff1bd6301e1d544df5402954" translate="yes" xml:space="preserve">
          <source>(the bug, fixed in Perl 5.14, is described in &lt;a href=&quot;#BUGS&quot;&gt;&quot;BUGS&quot;&lt;/a&gt;). One can use this new interface as</source>
          <target state="translated">（Perl 5.14で修正されたバグは、&lt;a href=&quot;#BUGS&quot;&gt;「バグ」で&lt;/a&gt;説明されています）。この新しいインターフェースを次のように使用できます</target>
        </trans-unit>
        <trans-unit id="47fb842f1ec30dc0c1028b06b28202730238d4d6" translate="yes" xml:space="preserve">
          <source>(the bug, fixed in Perl 5.14, is described in &lt;a href=&quot;#BUGS&quot;&gt;BUGS&lt;/a&gt;). One can use this new interface as</source>
          <target state="translated">（Perlの5.14で修正されたバグは、に記載されている&lt;a href=&quot;#BUGS&quot;&gt;バグ&lt;/a&gt;）。この新しいインターフェースは次のように使用できます。</target>
        </trans-unit>
        <trans-unit id="d1c731c58fb8625c1995a9c0d6a37456f30eb3dd" translate="yes" xml:space="preserve">
          <source>(the natural logarithm base) to the power of EXPR. If EXPR is omitted, gives &lt;code&gt;&lt;a href=&quot;exp&quot;&gt;exp($_)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">（自然対数の底）EXPRの累乗。EXPRが省略された場合、 &lt;code&gt;&lt;a href=&quot;exp&quot;&gt;exp($_)&lt;/a&gt;&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="9ca0b781f69e1f8267342418d798ec9abc7f7b5c" translate="yes" xml:space="preserve">
          <source>(the natural logarithm base) to the power of EXPR. If EXPR is omitted, gives &lt;code&gt;&lt;a href=&quot;functions/exp&quot;&gt;exp($_)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">（自然対数の底）EXPRの累乗。EXPRが省略された場合、 &lt;code&gt;&lt;a href=&quot;functions/exp&quot;&gt;exp($_)&lt;/a&gt;&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="4a454988522cc6a4767026309bb67dafb4d33a38" translate="yes" xml:space="preserve">
          <source>(the natural logarithm base) to the power of EXPR. If EXPR is omitted, gives &lt;code&gt;exp($_)&lt;/code&gt;.</source>
          <target state="translated">（自然対数基数）EXPRの累乗。EXPRを省略すると、 &lt;code&gt;exp($_)&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="e56b737030fe6f76e87a3edfc44265d91450bf34" translate="yes" xml:space="preserve">
          <source>(this may not work on some bizarre filesystems). One should conscientiously choose between the</source>
          <target state="translated">（これはいくつかの奇妙なファイルシステムでは動作しないかもしれません）。良心的に選択する必要があります</target>
        </trans-unit>
        <trans-unit id="db0f2bd8ef346de7a033eeae78d90dc10831fa46" translate="yes" xml:space="preserve">
          <source>(to build miniperlmain.c). So under normal circumstances you won't have to deal with this module directly.</source>
          <target state="translated">（miniperlmain.cをビルドするため）。したがって、通常の状況では、このモジュールを直接処理する必要はありません。</target>
        </trans-unit>
        <trans-unit id="97ab80c9e1fe35bb7e8323fbb0d7feb27b6cbb77" translate="yes" xml:space="preserve">
          <source>(treat these hex digits as line noise). After this is fixed the build should finish without a lot of fuss.</source>
          <target state="translated">（これらの16進数をラインノイズとして扱います）。これが修正された後、ビルドは大騒ぎせずに終了するはずです。</target>
        </trans-unit>
        <trans-unit id="5bbd0e9e8bb3970326f0ae59b614ac2f1aebcbf6" translate="yes" xml:space="preserve">
          <source>(true when evaluated inside of recursion or eval). Additionally the &lt;code&gt;&quot;R&quot;&lt;/code&gt; may be followed by a number, (which will be true when evaluated when recursing inside of the appropriate group), or by &lt;code&gt;&amp;amp;&lt;i&gt;NAME&lt;/i&gt;&lt;/code&gt;, in which case it will be true only when evaluated during recursion in the named group.</source>
          <target state="translated">（再帰または評価の内部で評価された場合に真）。さらに、 &lt;code&gt;&quot;R&quot;&lt;/code&gt; 後に数字（適切なグループ内で再帰するときに評価される場合に真）、または &lt;code&gt;&amp;amp;&lt;i&gt;NAME&lt;/i&gt;&lt;/code&gt; が続く場合があります。その場合、名前付きグループ内で再帰中に評価される場合にのみ真になります。</target>
        </trans-unit>
        <trans-unit id="1d7a9fe8570b8bcea8b9fe9361ea9bf6600d2508" translate="yes" xml:space="preserve">
          <source>(unless a</source>
          <target state="translated">（a</target>
        </trans-unit>
        <trans-unit id="4ec7a0d80a1ccd184b27056d454ee1153e6b5715" translate="yes" xml:space="preserve">
          <source>(used only by</source>
          <target state="translated">（のみによって使用されます</target>
        </trans-unit>
        <trans-unit id="ac5be747962c1aeaac7e7c81736092a7bc08bb8b" translate="yes" xml:space="preserve">
          <source>(user + system time) spent by the process since the first call to clock() (the definition is &lt;b&gt;not&lt;/b&gt; &quot;since the start of the process&quot;, though if you are lucky these times may be quite close to each other, depending on the system). What this means is that you probably need to store the result of your first call to clock(), and subtract that value from the following results of clock().</source>
          <target state="translated">クロックの最初の呼び出し（）（定義があるため、プロセスが費やした（ユーザー+システム時間）&lt;b&gt;ではない&lt;/b&gt;「プロセスの開始以来、」、運がよければかかわらず、これらの時間はに応じて、非常に近接することであってもよいですシステム）。つまり、最初にclock（）を呼び出した結果を保存し、次のclock（）の結果からその値を差し引く必要があります。</target>
        </trans-unit>
        <trans-unit id="88e896a405e3f46934bf9370e95fa7933a886563" translate="yes" xml:space="preserve">
          <source>(using &lt;code&gt;Z_FULL_FLUSH&lt;/code&gt; ).</source>
          <target state="translated">（ &lt;code&gt;Z_FULL_FLUSH&lt;/code&gt; を使用）。</target>
        </trans-unit>
        <trans-unit id="a7541cab2a60860593c1a8ff9554f037ebc3c6c3" translate="yes" xml:space="preserve">
          <source>(using &lt;code&gt;Z_FULL_FLUSH&lt;/code&gt;).</source>
          <target state="translated">（ &lt;code&gt;Z_FULL_FLUSH&lt;/code&gt; を使用）。</target>
        </trans-unit>
        <trans-unit id="02603cd1eae933c0c785a3f79537a20ecf4da31e" translate="yes" xml:space="preserve">
          <source>(where</source>
          <target state="translated">(where</target>
        </trans-unit>
        <trans-unit id="eb610507830351fb8e108f368c849e043989f99c" translate="yes" xml:space="preserve">
          <source>(whether an htmlname, or a number in any base) must consist only of alphanumeric characters -- that is,</source>
          <target state="translated">（htmlname、または任意の基数）は、英数字のみで構成する必要があります-つまり、</target>
        </trans-unit>
        <trans-unit id="f4cc7c250419a5d866584f91196b41206d58a2e6" translate="yes" xml:space="preserve">
          <source>(which depend on the process)</source>
          <target state="translated">（プロセスによって異なります）</target>
        </trans-unit>
        <trans-unit id="a565a6a28b6032770c35f345aa4e5afd3ef5d6b8" translate="yes" xml:space="preserve">
          <source>(which do nothing, and return zero and -1, respectively) or for certain methods you may assume a default behaviour by using a NULL method. The Open method looks for help in the 'parent' layer. The following table summarizes the behaviour:</source>
          <target state="translated">（何もせず、それぞれゼロと-1を返します）または特定のメソッドでは、NULLメソッドを使用してデフォルトの動作を想定できます。Openメソッドは、「親」レイヤーでヘルプを探します。次の表は、動作をまとめたものです。</target>
        </trans-unit>
        <trans-unit id="d1bfbda3f08bba5e0a64d2c55993b9b59a747e61" translate="yes" xml:space="preserve">
          <source>(which finds the range of code points in the block using &lt;code&gt;prop_invlist&lt;/code&gt; , gets the lower end of the range (0th element) and then looks up the old name for its block using &lt;code&gt;charblock&lt;/code&gt; ).</source>
          <target state="translated">（ &lt;code&gt;prop_invlist&lt;/code&gt; を使用してブロック内のコードポイントの範囲を検索し、範囲の下限（0番目の要素）を &lt;code&gt;charblock&lt;/code&gt; してから、charblockを使用してそのブロックの古い名前を検索します）。</target>
        </trans-unit>
        <trans-unit id="8f6568a2b111b0c018d50940c31a36bda310d719" translate="yes" xml:space="preserve">
          <source>(which finds the range of code points in the block using &lt;code&gt;prop_invlist&lt;/code&gt;, gets the lower end of the range (0th element) and then looks up the old name for its block using &lt;code&gt;charblock&lt;/code&gt;).</source>
          <target state="translated">（ &lt;code&gt;prop_invlist&lt;/code&gt; を使用してブロック内のコードポイントの範囲を検索し、範囲の下限（0番目の要素）を &lt;code&gt;charblock&lt;/code&gt; してから、charblockを使用してそのブロックの古い名前を検索します）。</target>
        </trans-unit>
        <trans-unit id="ae14177069c91a23afccf755b4c6a1a6ba5baf27" translate="yes" xml:space="preserve">
          <source>(which is likely to produce a warning like this, which can be ignored:</source>
          <target state="translated">（これは、このような警告を生成する可能性がありますが、無視できます：</target>
        </trans-unit>
        <trans-unit id="2bd9e615b04879bf500ca0444285c7b5f58ebaef" translate="yes" xml:space="preserve">
          <source>(which is part of the</source>
          <target state="translated">（これはの一部です</target>
        </trans-unit>
        <trans-unit id="11e91a933773803dea4f7027fc85914141f0b47a" translate="yes" xml:space="preserve">
          <source>(which is used instead)</source>
          <target state="translated">（代わりに使用されます）</target>
        </trans-unit>
        <trans-unit id="ae660a79b86b74eda7c896ee0e2ecc6cf658a4be" translate="yes" xml:space="preserve">
          <source>(which is valid if a group with the given name matched);</source>
          <target state="translated">（これは、指定された名前のグループが一致した場合に有効です）;</target>
        </trans-unit>
        <trans-unit id="35afe972b2f8e533542c4fa6b31748bddbb4b04b" translate="yes" xml:space="preserve">
          <source>(which is valid if the corresponding pair of parentheses matched);</source>
          <target state="translated">（これは、対応する括弧のペアが一致した場合に有効です）;</target>
        </trans-unit>
        <trans-unit id="a6b9b21d617162cc10b61d0e599ca09bfc3a8860" translate="yes" xml:space="preserve">
          <source>(with a handful of exceptions). This is an unfortunate backwards compatibility feature and its use is &lt;b&gt;strongly &lt;a href=&quot;perlpolicy#discouraged&quot;&gt;discouraged&lt;/a&gt;&lt;/b&gt;. You should either prevent the exporting (by saying &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; POSIX ();&lt;/code&gt; , as usual) and then use fully qualified names (e.g. &lt;code&gt;POSIX::SEEK_END&lt;/code&gt; ), or give an explicit import list. If you do neither and opt for the default (as in &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; POSIX;&lt;/code&gt; ), you will import</source>
          <target state="translated">（少数の例外を除いて）。これは残念な後方互換性機能であり、その使用は&lt;b&gt;強く&lt;a href=&quot;perlpolicy#discouraged&quot;&gt;推奨されていません&lt;/a&gt;&lt;/b&gt;。エクスポートを禁止し（通常の &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; POSIX ();&lt;/code&gt; を使用する）、次に完全修飾名（ &lt;code&gt;POSIX::SEEK_END&lt;/code&gt; ）を使用するか、明示的なインポートリストを指定する必要があります。どちらも行わず、デフォルトを選択した場合（ &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; POSIX;&lt;/code&gt; ）、インポートします</target>
        </trans-unit>
        <trans-unit id="8e7dcc56ce0aa1317963b58fc17a4b509ad5c335" translate="yes" xml:space="preserve">
          <source>(with a handful of exceptions). This is an unfortunate backwards compatibility feature and its use is &lt;b&gt;strongly &lt;a href=&quot;perlpolicy#discouraged&quot;&gt;discouraged&lt;/a&gt;&lt;/b&gt;. You should either prevent the exporting (by saying &lt;code&gt;use POSIX ();&lt;/code&gt;, as usual) and then use fully qualified names (e.g. &lt;code&gt;POSIX::SEEK_END&lt;/code&gt;), or give an explicit import list. If you do neither and opt for the default (as in &lt;code&gt;use POSIX;&lt;/code&gt;), you will import</source>
          <target state="translated">（いくつかの例外を除いて）。これは残念な下位互換性機能であり、その使用は&lt;b&gt;強く&lt;a href=&quot;perlpolicy#discouraged&quot;&gt;お勧めしません&lt;/a&gt;&lt;/b&gt;。エクスポートを防止し（通常どおり &lt;code&gt;use POSIX ();&lt;/code&gt; すると言って）、完全修飾名（ &lt;code&gt;POSIX::SEEK_END&lt;/code&gt; ）を使用するか、明示的なインポートリストを指定する必要があります。どちらも行わず、デフォルトを選択した場合（ &lt;code&gt;use POSIX;&lt;/code&gt; を使用する場合など）、インポートします。</target>
        </trans-unit>
        <trans-unit id="590241bfe1d1ab805f123f3dfeca95cb5df33342" translate="yes" xml:space="preserve">
          <source>(with the exception of &lt;code&gt;allow_nonref&lt;/code&gt;, which defaults to</source>
          <target state="translated">（デフォルトで &lt;code&gt;allow_nonref&lt;/code&gt; を除く</target>
        </trans-unit>
        <trans-unit id="306686237693efc97adb9873c6f395a689b08700" translate="yes" xml:space="preserve">
          <source>(without curly braces and</source>
          <target state="translated">（中括弧なしで</target>
        </trans-unit>
        <trans-unit id="0e1ed24ac3f83e4bb613f4329aa059c4bf5a4c9c" translate="yes" xml:space="preserve">
          <source>(x, y, z)</source>
          <target state="translated">（x、y、z）</target>
        </trans-unit>
        <trans-unit id="b6f844fee20c55f354c3646d70d08bb8aafbffec" translate="yes" xml:space="preserve">
          <source>(you may need to manually add &lt;code&gt;PERLTYPE=-DPERL_CORE&lt;/code&gt; to this commandline on some versions of Perl; the symptom is that the command-line globbing does not work from OS/2 shells with the newly-compiled executable; check with</source>
          <target state="translated">（一部のバージョンのPerl &lt;code&gt;PERLTYPE=-DPERL_CORE&lt;/code&gt; 、このコマンドラインにPERLTYPE = -DPERL_COREを手動で追加する必要がある場合があります。症状は、コマンドライングロビングが、新しくコンパイルされた実行可能ファイルを含むOS / 2シェルから機能しないことです。</target>
        </trans-unit>
        <trans-unit id="a4ad693788c41eaba8ea97f5859834b29c279024" translate="yes" xml:space="preserve">
          <source>(you probably need to add &lt;code&gt;-shared&lt;/code&gt; to the &amp;lt;-Alddlflags&amp;gt; line until RT #118199 is resolved)</source>
          <target state="translated">（おそらく、RT＃118199が解決されるまで、&amp;lt;-Alddlflags&amp;gt;行に &lt;code&gt;-shared&lt;/code&gt; を追加する必要があります）</target>
        </trans-unit>
        <trans-unit id="e7064f0b80f61dbc65915311032d27baa569ae2a" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>
        </trans-unit>
        <trans-unit id="eb95089a2aff367522b36d81eeb4af3aa05259c5" translate="yes" xml:space="preserve">
          <source>) Nested backslashed delimiters, embedded balanced bracket delimiters (for the quotelike operators), and trailing modifiers are all caught. For example, in:</source>
          <target state="translated">）ネストされたバックスラッシュ区切り文字、埋め込まれた平衡括弧区切り文字（引用符のような演算子の場合）、および末尾修飾子はすべてキャッチされます。たとえば、次の場所にあります。</target>
        </trans-unit>
        <trans-unit id="93d1e11773c70e0093dfdf1605f54536a30c04cb" translate="yes" xml:space="preserve">
          <source>) add together two &lt;code&gt;gvsv&lt;/code&gt; s.</source>
          <target state="translated">）2つの &lt;code&gt;gvsv&lt;/code&gt; を加算します。</target>
        </trans-unit>
        <trans-unit id="dfc5bb482b8cb8cbf302fc5f2490c2508552541d" translate="yes" xml:space="preserve">
          <source>) add together two &lt;code&gt;gvsv&lt;/code&gt;s.</source>
          <target state="translated">）2つの &lt;code&gt;gvsv&lt;/code&gt; を足し合わせます。</target>
        </trans-unit>
        <trans-unit id="487acab4d37dcb1f88d4268398b649368558f781" translate="yes" xml:space="preserve">
          <source>) and XS code (defined in</source>
          <target state="translated">）およびXSコード（</target>
        </trans-unit>
        <trans-unit id="2af0dc8b4d4fee8ec4a7da24968fc60d5db6f74b" translate="yes" xml:space="preserve">
          <source>) and for which I'll ignore the return value (that's the</source>
          <target state="translated">）と私は戻り値を無視します（それは</target>
        </trans-unit>
        <trans-unit id="95fe6fc6d1e10ab1a18355df450387c52489f3c6" translate="yes" xml:space="preserve">
          <source>) and then delete your local branch:</source>
          <target state="translated">）次に、ローカルブランチを削除します。</target>
        </trans-unit>
        <trans-unit id="5165405c0c57dc222008e31631e6e1160f7f0b2c" translate="yes" xml:space="preserve">
          <source>) and those are hidden inside</source>
          <target state="translated">）そしてそれらは内部に隠されています</target>
        </trans-unit>
        <trans-unit id="1e5051ed7ca1b9ef31e15eb004126ec2dc0cfec0" translate="yes" xml:space="preserve">
          <source>) and widths (32-bit and 64-bit being the most common today). This affects your programs when they attempt to transfer numbers in binary format from one CPU architecture to another, usually either &quot;live&quot; via network connection, or by storing the numbers to secondary storage such as a disk file or tape.</source>
          <target state="translated">）と幅（現在、32ビットと64ビットが最も一般的です）。これは、プログラムがバイナリ形式の数値を1つのCPUアーキテクチャから別のCPUアーキテクチャに転送しようとするときに、通常はネットワーク接続を介して「ライブ」で、またはディスクファイルやテープなどのセカンダリストレージに数値を保存することによって影響します。</target>
        </trans-unit>
        <trans-unit id="8a4f890fd31d5a7f8d389f42416df72924335dc7" translate="yes" xml:space="preserve">
          <source>) and you will see what is happening</source>
          <target state="translated">）そしてあなたは何が起こっているかを見るでしょう</target>
        </trans-unit>
        <trans-unit id="78d8c7b5bfb4d1d699ad80186c17bd61d5ef6810" translate="yes" xml:space="preserve">
          <source>) are accessed in the function and &lt;code&gt;dTHX&lt;/code&gt; is not used (the &lt;code&gt;dTHX&lt;/code&gt; includes the &lt;code&gt;dVAR&lt;/code&gt; if necessary). One notices the need for &lt;code&gt;dVAR&lt;/code&gt; only with the said compile-time define, because otherwise the Perl global variables are visible as-is.</source>
          <target state="translated">）関数でアクセスされ、 &lt;code&gt;dTHX&lt;/code&gt; は（使用されていない &lt;code&gt;dTHX&lt;/code&gt; が含ま &lt;code&gt;dVAR&lt;/code&gt; 必要に応じて）。上記のコンパイル時定義でのみ &lt;code&gt;dVAR&lt;/code&gt; が必要であることに気づきます。それ以外の場合、Perlグローバル変数はそのまま表示されます。</target>
        </trans-unit>
        <trans-unit id="f0af76cebde929dc98391babdd9523facf0df1cb" translate="yes" xml:space="preserve">
          <source>) are also supported Since cygwin-1.7 non-POSIX pathnames are discouraged. Names may contain all printable characters.</source>
          <target state="translated">）もサポートされています。cygwin-1.7の非POSIXパス名は推奨されないためです。名前には、すべての印刷可能な文字を含めることができます。</target>
        </trans-unit>
        <trans-unit id="4d63c0b1ccaa850ba2ad69dd4a8ae1f8f0b54402" translate="yes" xml:space="preserve">
          <source>) are now created with the names which contain a checksum, thus allowing workaround for OS/2 scheme of caching DLLs.</source>
          <target state="translated">）は、チェックサムを含む名前で作成されるため、DLLをキャッシュするOS / 2スキームの回避策が可能になります。</target>
        </trans-unit>
        <trans-unit id="b9bcffac0b0e948cf7f6c750635e76e9488261a5" translate="yes" xml:space="preserve">
          <source>) are the same in both EBCDIC and UTF-EBCDIC. Often, documentation will use the term &quot;UTF-8&quot; to mean UTF-EBCDIC as well. This is the case in this document.</source>
          <target state="translated">）は、EBCDICとUTF-EBCDICの両方で同じです。多くの場合、ドキュメントでは「UTF-8」という用語を使用して、UTF-EBCDICも意味します。これは、このドキュメントの場合です。</target>
        </trans-unit>
        <trans-unit id="b688477e2141565165881be5ad0bc5987114795f" translate="yes" xml:space="preserve">
          <source>) are the same in both EBCDIC and UTF-EBCDIC.)</source>
          <target state="translated">）EBCDICとUTF-EBCDICの両方で同じです。）</target>
        </trans-unit>
        <trans-unit id="b4703b8b08940fcfc8d37175488b06d9c5c2113f" translate="yes" xml:space="preserve">
          <source>) are to be ignored (because they cannot be linked against).</source>
          <target state="translated">）は無視されます（リンクできないため）。</target>
        </trans-unit>
        <trans-unit id="228c4d656c7c5862fd93efef71f5a4b7ea37cfce" translate="yes" xml:space="preserve">
          <source>) as a hashref containing match criteria that determine if the current distribution matches the YAML document or not.</source>
          <target state="translated">）現在の分布がYAMLドキュメントと一致するかどうかを決定する一致基準を含むhashrefとして。</target>
        </trans-unit>
        <trans-unit id="0094c9f9603398d1e8131509fbaec9e6e56aa8b2" translate="yes" xml:space="preserve">
          <source>) associated with the module. If so, these will be entirely transparent to the user of the module. It is the responsibility of the</source>
          <target state="translated">）モジュールに関連付けられています。その場合、これらはモジュールのユーザーに対して完全に透過的です。それはの責任です</target>
        </trans-unit>
        <trans-unit id="8680fc3067e5b942a71155614ce3702a9457283f" translate="yes" xml:space="preserve">
          <source>) but simply depends on the choice of tmpdir() returned by L&amp;lt;:spec&amp;gt;. On some implementations this location can be set using the C</source>
          <target state="translated">）ただし、L &amp;lt;：spec&amp;gt;によって返されるtmpdir（）の選択に依存します。一部の実装では、この場所はCを使用して設定できます。</target>
        </trans-unit>
        <trans-unit id="c5659f7b4fec9440dfdc3905af70739f39cad629" translate="yes" xml:space="preserve">
          <source>) can be computed by the great_circle_direction() function:</source>
          <target state="translated">）great_circle_direction（）関数で計算できます：</target>
        </trans-unit>
        <trans-unit id="5fe6bd925320e38dae70ff8e3655937d2767bfc3" translate="yes" xml:space="preserve">
          <source>) can be tacked onto this variable to generate a list of directories to search.</source>
          <target state="translated">）をこの変数に追加して、検索するディレクトリのリストを生成できます。</target>
        </trans-unit>
        <trans-unit id="a71d8063cc2fcb4f0ab849a5cf4c8ea8ac77b0fa" translate="yes" xml:space="preserve">
          <source>) contains references to many socket functions which need to be resolved when it's loaded. Most platforms will automatically know where to find the 'dependent' library (e.g.,</source>
          <target state="translated">）ロード時に解決する必要がある多くのソケット関数への参照が含まれています。ほとんどのプラットフォームは、「依存」ライブラリ（たとえば、</target>
        </trans-unit>
        <trans-unit id="5968b6b1837aae02e6a353cd4039edfa15befc28" translate="yes" xml:space="preserve">
          <source>) file.</source>
          <target state="translated">）ファイル。</target>
        </trans-unit>
        <trans-unit id="fdb6308c871f74792c598b6316c52ceb7fdc771e" translate="yes" xml:space="preserve">
          <source>) files should be UTF-8 encoded. Users are responsible for proper encoding and decoding. In particular, the &lt;code&gt;read&lt;/code&gt; and &lt;code&gt;write&lt;/code&gt; methods do &lt;b&gt;not&lt;/b&gt; support UTF-8 and should not be used.</source>
          <target state="translated">）ファイルはUTF-8でエンコードする必要があります。ユーザーは適切なエンコードとデコードに責任があります。特に、 &lt;code&gt;read&lt;/code&gt; メソッドと &lt;code&gt;write&lt;/code&gt; メソッドはUTF-8をサポートしてい&lt;b&gt;ない&lt;/b&gt;ため、使用しないでください。</target>
        </trans-unit>
        <trans-unit id="0f4288bf07ec0228a3183e18634d69547b9f0364" translate="yes" xml:space="preserve">
          <source>) for a module, Test::Harness is usually used to run the tests (not all modules use Test::Harness but the majority do).</source>
          <target state="translated">）モジュールの場合、通常、テストの実行にはTest :: Harnessが使用されます（すべてのモジュールがTest :: Harnessを使用するわけではありませんが、大部分は使用します）。</target>
        </trans-unit>
        <trans-unit id="6380e7df837c25d9969247c6e203303247a8eb62" translate="yes" xml:space="preserve">
          <source>) for a thorough grounding and reference on the topic.</source>
          <target state="translated">）十分な根拠とトピックの参照について。</target>
        </trans-unit>
        <trans-unit id="1ef4dbc4e616fa1d18518cdf57dc3f1eed3a7798" translate="yes" xml:space="preserve">
          <source>) for the default perl executable, but for a more ambitious host (like the one that would do fork() emulation) all the extra work needed to pretend that different interpreters are actually different &quot;processes&quot;, would be done here.</source>
          <target state="translated">）デフォルトのperl実行可能ファイルの場合、ただしより野心的なホスト（fork（）エミュレーションを実行するホストなど）の場合、異なるインタープリターが実際には異なる「プロセス」であると偽るのに必要なすべての追加作業は、ここで行われます。</target>
        </trans-unit>
        <trans-unit id="b34bf46ab4b61641e16b10e09bd70715019def08" translate="yes" xml:space="preserve">
          <source>) for your machine. If your compiler complains that certain functions are undefined, or that it can't locate</source>
          <target state="translated">）あなたのマシンのために。コンパイラが、特定の関数が定義されていない、または特定できないと不平を言った場合</target>
        </trans-unit>
        <trans-unit id="0c582b687e9340adf76bd136bafc7a4e60851dd4" translate="yes" xml:space="preserve">
          <source>) from the database.</source>
          <target state="translated">）データベースから。</target>
        </trans-unit>
        <trans-unit id="116f8f88f4b3848fbd987990694e39bf840bb1eb" translate="yes" xml:space="preserve">
          <source>) guaranteed to be large enough to represent the size of any string that perl can handle.</source>
          <target state="translated">）perlが処理できる文字列のサイズを表すのに十分な大きさであることが保証されています。</target>
        </trans-unit>
        <trans-unit id="337e0c227846bd92d32db8132d6dfda91291a31c" translate="yes" xml:space="preserve">
          <source>) happens to do both these things.</source>
          <target state="translated">）たまたまこれらの両方を行います。</target>
        </trans-unit>
        <trans-unit id="8ddfd9e5fba9d0bfae55c0a9cf8e0e887dd2de61" translate="yes" xml:space="preserve">
          <source>) if set, overrides the path to the perl executable that should be used to run the tests (the default being</source>
          <target state="translated">）設定されている場合、テストの実行に使用する必要があるperl実行可能ファイルへのパスをオーバーライドします（デフォルトは</target>
        </trans-unit>
        <trans-unit id="ddd938892f2a1218d436a7ea869a8e613d6a7846" translate="yes" xml:space="preserve">
          <source>) if the constructor was called with UNLINK set to 1 (the default state if UNLINK is not specified).</source>
          <target state="translated">）UNLINKを1に設定してコンストラクターが呼び出された場合（UNLINKが指定されていない場合のデフォルトの状態）。</target>
        </trans-unit>
        <trans-unit id="475773772c97e29ee6060b95810ad4e1376538fc" translate="yes" xml:space="preserve">
          <source>) illustrating the creation, use and monitoring of a pool of</source>
          <target state="translated">）のプールの作成、使用、および監視を示す</target>
        </trans-unit>
        <trans-unit id="e7e44a7e4150f8fa3f3b373c79a37f8b07bb4a24" translate="yes" xml:space="preserve">
          <source>) into an SV whose reference is rv. SV is blessed if &lt;code&gt;classname&lt;/code&gt; is non-null.</source>
          <target state="translated">）参照がrvであるSVに。 &lt;code&gt;classname&lt;/code&gt; がnullでない場合、SVは祝福されます。</target>
        </trans-unit>
        <trans-unit id="9dac485013a652075c8f1c4b7fb1d43f1f85a1a3" translate="yes" xml:space="preserve">
          <source>) into an executable:</source>
          <target state="translated">）実行可能ファイルに：</target>
        </trans-unit>
        <trans-unit id="81b4f6fe6b33e8129f5b68846e0235e4b8d609db" translate="yes" xml:space="preserve">
          <source>) is a somewhat special case inasmuch as the concatenation of &lt;code&gt;$File::Find::dir&lt;/code&gt; , &lt;code&gt;'/'&lt;/code&gt; and &lt;code&gt;$_&lt;/code&gt; is not literally equal to &lt;code&gt;$File::Find::name&lt;/code&gt; . The table below summarizes all variants:</source>
          <target state="translated">）は、 &lt;code&gt;$File::Find::dir&lt;/code&gt; 、 &lt;code&gt;'/'&lt;/code&gt; 、および &lt;code&gt;$_&lt;/code&gt; が &lt;code&gt;$File::Find::name&lt;/code&gt; と文字通り等しくないため、やや特殊なケースです。以下の表は、すべてのバリアントをまとめたものです。</target>
        </trans-unit>
        <trans-unit id="90c96507ab61376ee997f23c6d427ce68d7c9b72" translate="yes" xml:space="preserve">
          <source>) is a somewhat special case inasmuch as the concatenation of &lt;code&gt;$File::Find::dir&lt;/code&gt;, &lt;code&gt;'/'&lt;/code&gt; and &lt;code&gt;$_&lt;/code&gt; is not literally equal to &lt;code&gt;$File::Find::name&lt;/code&gt;. The table below summarizes all variants:</source>
          <target state="translated">）は、 &lt;code&gt;$File::Find::dir&lt;/code&gt; 、 &lt;code&gt;'/'&lt;/code&gt; と &lt;code&gt;$_&lt;/code&gt; の連結が文字通り &lt;code&gt;$File::Find::name&lt;/code&gt; と等しくないため、やや特殊なケースです。次の表は、すべてのバリアントをまとめたものです。</target>
        </trans-unit>
        <trans-unit id="cf9470af5d5cf93f057397bef4222a4e4cd5a518" translate="yes" xml:space="preserve">
          <source>) is called instead, otherwise falling back to &lt;code&gt;&amp;amp;DB::sub&lt;/code&gt; (</source>
          <target state="translated">）代わりに呼び出され、それ以外の場合は &lt;code&gt;&amp;amp;DB::sub&lt;/code&gt; （</target>
        </trans-unit>
        <trans-unit id="6c8188ede998e6e037975c6c363a167896d77867" translate="yes" xml:space="preserve">
          <source>) is called instead, otherwise falling back to &lt;code&gt;&amp;amp;DB::sub&lt;/code&gt;(</source>
          <target state="translated">）が代わりに呼び出され、それ以外の場合は &lt;code&gt;&amp;amp;DB::sub&lt;/code&gt; （</target>
        </trans-unit>
        <trans-unit id="23696ac6362c5f53fb63901a51bae770c8ae962d" translate="yes" xml:space="preserve">
          <source>) is either a text-string or a reference to a &lt;b&gt;Pod::InteriorSequence&lt;/b&gt; object. The nodes appear in the parse-tree in the order in which they were parsed from left-to-right.</source>
          <target state="translated">）は、テキスト文字列または&lt;b&gt;Pod :: InteriorSequence&lt;/b&gt;オブジェクトへの参照です。ノードは、左から右に解析された順序で解析ツリーに表示されます。</target>
        </trans-unit>
        <trans-unit id="5767c1b2b6c18556726990ab8b5bc59c494545e8" translate="yes" xml:space="preserve">
          <source>) is in that special format.</source>
          <target state="translated">）はその特別な形式です。</target>
        </trans-unit>
        <trans-unit id="32f86aa54464138379726463882cdceaf0bcc1f8" translate="yes" xml:space="preserve">
          <source>) is made instead, with &lt;code&gt;$DB::sub&lt;/code&gt; holding the name of the called subroutine. (This doesn't happen if the subroutine was compiled in the &lt;code&gt;DB&lt;/code&gt; package.)</source>
          <target state="translated">）代わりに &lt;code&gt;$DB::sub&lt;/code&gt; が呼び出されたサブルーチンの名前を保持します。（これは、サブルーチンが &lt;code&gt;DB&lt;/code&gt; パッケージにコンパイルされている場合は発生しません。）</target>
        </trans-unit>
        <trans-unit id="6f72da199407d17f3eb070ab79da4f95bcf5d247" translate="yes" xml:space="preserve">
          <source>) is made instead, with &lt;code&gt;$DB::sub&lt;/code&gt; set to identify the called subroutine. (This doesn't happen if the calling subroutine was compiled in the &lt;code&gt;DB&lt;/code&gt; package.) &lt;code&gt;$DB::sub&lt;/code&gt; normally holds the name of the called subroutine, if it has a name by which it can be looked up. Failing that, &lt;code&gt;$DB::sub&lt;/code&gt; will hold a reference to the called subroutine. Either way, the &lt;code&gt;&amp;amp;DB::sub&lt;/code&gt; subroutine can use &lt;code&gt;$DB::sub&lt;/code&gt; as a reference by which to call the called subroutine, which it will normally want to do.</source>
          <target state="translated">）が代わりに作成され、呼び出されたサブルーチンを識別するために &lt;code&gt;$DB::sub&lt;/code&gt; 設定されます。 （これは、呼び出し元のサブルーチンが &lt;code&gt;DB&lt;/code&gt; パッケージにコンパイルされている場合は発生しません。） &lt;code&gt;$DB::sub&lt;/code&gt; は通常、呼び出されたサブルーチンの名前を保持します（検索可能な名前がある場合）。それができない場合、 &lt;code&gt;$DB::sub&lt;/code&gt; は呼び出されたサブルーチンへの参照を保持します。いずれにせよ、 &lt;code&gt;&amp;amp;DB::sub&lt;/code&gt; サブルーチンは、呼び出されたサブルーチンを呼び出すための参照として &lt;code&gt;$DB::sub&lt;/code&gt; を使用できます。これにより、通常は実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="09c02d83fc25240c47808099a2e4f821d696cb01" translate="yes" xml:space="preserve">
          <source>) is used as a package separator for documentation for packages, and as usual, sometimes you need to give the section - &lt;code&gt;3&lt;/code&gt; above - to avoid shadowing by the</source>
          <target state="translated">）は、パッケージのドキュメントのパッケージセパレーターとして使用されます。通常は、上記のセクション &lt;code&gt;3&lt;/code&gt; を指定して、</target>
        </trans-unit>
        <trans-unit id="5971125402714a98c492903d9612cbceea13e6b3" translate="yes" xml:space="preserve">
          <source>) model. However, some previous functionality is not available. Further, the data sharing models between the two thread models are completely different, and anything to do with data sharing has to be thought differently. With</source>
          <target state="translated">）モデル。ただし、以前の一部の機能は使用できません。さらに、2つのスレッドモデル間のデータ共有モデルは完全に異なり、データ共有に関係することはすべて別の方法で考える必要があります。と</target>
        </trans-unit>
        <trans-unit id="c8900d677b2a01f7480862af7c53a8c9206bc052" translate="yes" xml:space="preserve">
          <source>) of EXPR. If EXPR is omitted, returns the log of &lt;a href=&quot;perlvar#%24_&quot;&gt;&lt;code&gt;$_&lt;/code&gt;&lt;/a&gt;. To get the log of another base, use basic algebra: The base-N log of a number is equal to the natural log of that number divided by the natural log of N. For example:</source>
          <target state="translated">）EXPRの。EXPRを省略した場合、&lt;a href=&quot;perlvar#%24_&quot;&gt; &lt;code&gt;$_&lt;/code&gt; &lt;/a&gt;ログを返します。別の基数の対数を取得するには、基本的な代数を使用します。数値の基数Nの対数は、その数値の自然対数をNの自然対数で割ったものに等しくなります。例：</target>
        </trans-unit>
        <trans-unit id="50d605006e5819d9ee72b0368f957bba921207fa" translate="yes" xml:space="preserve">
          <source>) of EXPR. If EXPR is omitted, returns the log of &lt;code&gt;$_&lt;/code&gt; . To get the log of another base, use basic algebra: The base-N log of a number is equal to the natural log of that number divided by the natural log of N. For example:</source>
          <target state="translated">）のEXPR。EXPRを省略した場合、 &lt;code&gt;$_&lt;/code&gt; ログを返します。別の底の対数を取得するには、基本代数を使用します。数値の底Nの対数は、その数値の自然対数をNの自然対数で割ったものに等しくなります。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="73013703f8359c6292272932a5d96f3a21e4da8b" translate="yes" xml:space="preserve">
          <source>) of link target</source>
          <target state="translated">）リンクターゲットの</target>
        </trans-unit>
        <trans-unit id="1c4fc186c95906992ee9e790368dc6d7e6bb249e" translate="yes" xml:space="preserve">
          <source>) or $token-&amp;gt;is_tagname(</source>
          <target state="translated">）または$ token-&amp;gt; is_tagname（</target>
        </trans-unit>
        <trans-unit id="34c99e6b33b978b2a76257b1ec099dd28fe4c5af" translate="yes" xml:space="preserve">
          <source>) or autoloaded subroutine definitions (often ending in</source>
          <target state="translated">）または自動ロードされたサブルーチン定義（多くの場合、</target>
        </trans-unit>
        <trans-unit id="8be067842fd8dd4a9dda8652f213b0bfca2534f2" translate="yes" xml:space="preserve">
          <source>) or from</source>
          <target state="translated">）またはから</target>
        </trans-unit>
        <trans-unit id="6268b6d7aba0dddbda46ab70ff997d6de27b91a4" translate="yes" xml:space="preserve">
          <source>) or small pieces of modules to be autoloaded (ending in</source>
          <target state="translated">）または自動ロードされる小さなモジュール（末尾が</target>
        </trans-unit>
        <trans-unit id="e0b4a008b1b72c63ec0fe1bf922f01ecd1e7dcea" translate="yes" xml:space="preserve">
          <source>) regarding the license:</source>
          <target state="translated">）ライセンスに関して：</target>
        </trans-unit>
        <trans-unit id="a45f9f3bff2ba18d925d19d588022f6b22bbbb23" translate="yes" xml:space="preserve">
          <source>) result in single code points and are locale independent and unconditional, &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned (which means that the case mappings, if any, for the code point are those returned by &lt;a href=&quot;#charinfo()&quot;&gt;charinfo()&lt;/a&gt;).</source>
          <target state="translated">）結果は単一のコードポイントになり、ロケールに依存せず無条件であり、 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; が返されます（つまり、コードポイントのケースマッピングがある場合、それは&lt;a href=&quot;#charinfo()&quot;&gt;charinfo（）&lt;/a&gt;によって返されるマッピングです）。</target>
        </trans-unit>
        <trans-unit id="391e0275a9d94cc4fb72b3fa708d0c427551dc20" translate="yes" xml:space="preserve">
          <source>) result in single code points and are locale independent and unconditional, &lt;code&gt;undef&lt;/code&gt; is returned (which means that the case mappings, if any, for the code point are those returned by &lt;a href=&quot;#charinfo%28%29&quot;&gt;&quot;charinfo()&quot;&lt;/a&gt;).</source>
          <target state="translated">）結果は単一のコードポイントになり、ロケールに依存せず、無条件で、 &lt;code&gt;undef&lt;/code&gt; が返されます（つまり、コードポイントのケースマッピングは、&lt;a href=&quot;#charinfo%28%29&quot;&gt;「charinfo（）」&lt;/a&gt;によって返されるものです）。</target>
        </trans-unit>
        <trans-unit id="a7093a28b00cb3f7379bae3a74ed546d6d759f1c" translate="yes" xml:space="preserve">
          <source>) returned 22</source>
          <target state="translated">）22を返しました</target>
        </trans-unit>
        <trans-unit id="290a554d5dd4f4fd53f4f0c3f26a8b92afe46af9" translate="yes" xml:space="preserve">
          <source>) routine is available to get the current process group.</source>
          <target state="translated">）ルーチンを使用して、現在のプロセスグループを取得できます。</target>
        </trans-unit>
        <trans-unit id="fbfc535d542b663f5fc6309d86a766d1da4fdbb5" translate="yes" xml:space="preserve">
          <source>) routine is available to set the current process group.</source>
          <target state="translated">）ルーチンを使用して、現在のプロセスグループを設定できます。</target>
        </trans-unit>
        <trans-unit id="26e28f24fd9b1f154c2e8f05eec3ce59bdb7d39d" translate="yes" xml:space="preserve">
          <source>) see whether a scalar contains a string, an integer, or a floating-point number. But you can still peek and poke these if you will. See the next section.</source>
          <target state="translated">）スカラーに文字列、整数、または浮動小数点数が含まれているかどうかを確認します。ただし、必要に応じて、これらを覗いて突くことができます。次のセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="edd28277fd127085fceb90541640e76ea071b695" translate="yes" xml:space="preserve">
          <source>) slashes, Universal Naming Codes (</source>
          <target state="translated">）スラッシュ、汎用命名コード（</target>
        </trans-unit>
        <trans-unit id="6fe21bfd6516c2f8c1ce99da2c5ba6214935b065" translate="yes" xml:space="preserve">
          <source>) that hide the details of the interpreter's context. THX stands for &quot;thread&quot;, &quot;this&quot;, or &quot;thingy&quot;, as the case may be. (And no, George Lucas is not involved. :-) The first character could be 'p' for a &lt;b&gt;p&lt;/b&gt;rototype, 'a' for &lt;b&gt;a&lt;/b&gt;rgument, or 'd' for &lt;b&gt;d&lt;/b&gt;eclaration, so we have &lt;code&gt;pTHX&lt;/code&gt; , &lt;code&gt;aTHX&lt;/code&gt; and &lt;code&gt;dTHX&lt;/code&gt; , and their variants.</source>
          <target state="translated">）インタープリターのコンテキストの詳細を非表示にします。THXは、「スレッド」、「これ」、または「もの」の略です。（そして、いや、ジョージ・ルーカスが関与していない。:-)最初の文字がために「P」かもしれない&lt;b&gt;のp&lt;/b&gt;についてrototype、「」のためのrgument、または「D」&lt;b&gt;dは&lt;/b&gt;我々が持っているので、eclaration &lt;code&gt;pTHX&lt;/code&gt; 、 &lt;code&gt;aTHX&lt;/code&gt; と &lt;code&gt;dTHX&lt;/code&gt; を、とその亜種。&lt;b&gt;&lt;/b&gt;&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="bebca5effcde7de71cb36899c8b7b5dd6966704c" translate="yes" xml:space="preserve">
          <source>) that hide the details of the interpreter's context. THX stands for &quot;thread&quot;, &quot;this&quot;, or &quot;thingy&quot;, as the case may be. (And no, George Lucas is not involved. :-) The first character could be 'p' for a &lt;b&gt;p&lt;/b&gt;rototype, 'a' for &lt;b&gt;a&lt;/b&gt;rgument, or 'd' for &lt;b&gt;d&lt;/b&gt;eclaration, so we have &lt;code&gt;pTHX&lt;/code&gt;, &lt;code&gt;aTHX&lt;/code&gt; and &lt;code&gt;dTHX&lt;/code&gt;, and their variants.</source>
          <target state="translated">）通訳者のコンテキストの詳細を非表示にします。THXは、場合によっては「スレッド」、「これ」、または「もの」の略です。（そして、いや、ジョージ・ルーカスが関与していない。:-)最初の文字がために「P」かもしれない&lt;b&gt;のp&lt;/b&gt;についてrototype、「」のためのrgument、または「D」&lt;b&gt;dは&lt;/b&gt;我々が持っているので、eclaration &lt;code&gt;pTHX&lt;/code&gt; 、 &lt;code&gt;aTHX&lt;/code&gt; と &lt;code&gt;dTHX&lt;/code&gt; を、およびそのバリアント。&lt;b&gt;&lt;/b&gt;&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="e97548e96f2ddff38307a0e5c64c9b937c5a39a0" translate="yes" xml:space="preserve">
          <source>) this is:</source>
          <target state="translated">） これは：</target>
        </trans-unit>
        <trans-unit id="58d0b83faa9818666bc1ae3462657cd7ca7c19ae" translate="yes" xml:space="preserve">
          <source>) to &lt;code&gt;PATH&lt;/code&gt; ; copy &lt;code&gt;perl_.exe&lt;/code&gt; to &lt;code&gt;PATH&lt;/code&gt; as &lt;code&gt;perl_5.8.2.exe&lt;/code&gt; . Think whether you need backward-compatibility DLLs. In most cases you do not need to install them yet; but sometime this may simplify the following steps.</source>
          <target state="translated">） &lt;code&gt;PATH&lt;/code&gt; に ; コピー &lt;code&gt;perl_.exe&lt;/code&gt; に &lt;code&gt;PATH&lt;/code&gt; として &lt;code&gt;perl_5.8.2.exe&lt;/code&gt; 。下位互換性DLLが必要かどうかを検討してください。ほとんどの場合、まだインストールする必要はありません。ただし、これにより次の手順が簡略化される場合があります。</target>
        </trans-unit>
        <trans-unit id="402bef1c99bbd938c61c5a9988380b210c5ec786" translate="yes" xml:space="preserve">
          <source>) to &lt;code&gt;PATH&lt;/code&gt;; copy &lt;code&gt;perl_.exe&lt;/code&gt; to &lt;code&gt;PATH&lt;/code&gt; as &lt;code&gt;perl_5.8.2.exe&lt;/code&gt;. Think whether you need backward-compatibility DLLs. In most cases you do not need to install them yet; but sometime this may simplify the following steps.</source>
          <target state="translated">） &lt;code&gt;PATH&lt;/code&gt; ; コピー &lt;code&gt;perl_.exe&lt;/code&gt; に &lt;code&gt;PATH&lt;/code&gt; として &lt;code&gt;perl_5.8.2.exe&lt;/code&gt; 。下位互換性のあるDLLが必要かどうかを検討してください。ほとんどの場合、まだインストールする必要はありません。ただし、これにより次の手順が簡略化される場合があります。</target>
        </trans-unit>
        <trans-unit id="2bfb1d2c84b8f96364a15ab20bbedeb8fdc478cf" translate="yes" xml:space="preserve">
          <source>) unless the first thing after the =over is an =item</source>
          <target state="translated">）= overの後の最初のものが= itemでない限り</target>
        </trans-unit>
        <trans-unit id="ee8d0d482ba732e339db373655156b50d4f689fa" translate="yes" xml:space="preserve">
          <source>) variable.</source>
          <target state="translated">）変数。</target>
        </trans-unit>
        <trans-unit id="8d6ab57f146723c24d110d324d107fe798a11b43" translate="yes" xml:space="preserve">
          <source>) where there are no parameters (except $_[0], the language handle).</source>
          <target state="translated">）パラメータがない場合（$ _ [0]、言語ハンドルを除く）。</target>
        </trans-unit>
        <trans-unit id="20739558e894101738b809f5961ce2ec15d5ef69" translate="yes" xml:space="preserve">
          <source>) which itself uses a C or C++ library, this probably happened:</source>
          <target state="translated">）それ自体がCまたはC ++ライブラリを使用していますが、これはおそらく発生しました：</target>
        </trans-unit>
        <trans-unit id="9bb3b0590ce91e56d975340e4f059419f1cd3a34" translate="yes" xml:space="preserve">
          <source>) will return true but not actually set the bit.</source>
          <target state="translated">）はtrueを返しますが、実際にはビットを設定しません。</target>
        </trans-unit>
        <trans-unit id="555eb93c31c2ff33a5f28e75533e9b13d5846308" translate="yes" xml:space="preserve">
          <source>) will return true but not actually set the bit. (Android)</source>
          <target state="translated">）はtrueを返しますが、実際にはビットを設定しません。（アンドロイド）</target>
        </trans-unit>
        <trans-unit id="76964257ee68bb8fca6aa80c00dd5fc9f2ec1a64" translate="yes" xml:space="preserve">
          <source>) with a character class, and no string shorter than 7 characters can possibly match.</source>
          <target state="translated">）文字クラスの場合、7文字より短い文字列は一致しない可能性があります。</target>
        </trans-unit>
        <trans-unit id="7b62adc5f8c3abd2eb86b6b1533af991c7edca58" translate="yes" xml:space="preserve">
          <source>) would otherwise terminate the loop. Again, &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned only once. So if you're expecting a single value from a glob, it is much better to say</source>
          <target state="translated">それ以外の場合はループを終了します。この場合も、 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; は1回だけ返されます。したがって、グロブから単一の値を期待している場合は、</target>
        </trans-unit>
        <trans-unit id="c972a2d6506c7e630a1bc588ff59aaaa9c6a81f4" translate="yes" xml:space="preserve">
          <source>) would otherwise terminate the loop. Again, &lt;code&gt;undef&lt;/code&gt; is returned only once. So if you're expecting a single value from a glob, it is much better to say</source>
          <target state="translated">）それ以外の場合はループを終了します。繰り返し &lt;code&gt;undef&lt;/code&gt; が、undefは1回だけ返されます。したがって、グロブから単一の値を期待している場合は、次のように言う方がはるかに良いでしょう。</target>
        </trans-unit>
        <trans-unit id="4810b75ef754b672275a3af2b5a078e21220cbc9" translate="yes" xml:space="preserve">
          <source>) you must still call the &lt;code&gt;PUSHMARK&lt;/code&gt; macro before you can call any of the</source>
          <target state="translated">）を呼び出す前に、 &lt;code&gt;PUSHMARK&lt;/code&gt; マクロを呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="dd68868e123f57ff7ef38ff164a231d0c0a76fe0" translate="yes" xml:space="preserve">
          <source>) you want to rebuild.</source>
          <target state="translated">）再構築したい。</target>
        </trans-unit>
        <trans-unit id="02a91090e67572144de2f031f1bbc5cd3c4a2837" translate="yes" xml:space="preserve">
          <source>)&quot;). They may derive from the project class. They may derive from some other class altogether. Or via multiple inheritance, it may derive from any mixture of these.</source>
          <target state="translated">） &quot;）。それらは、プロジェクトクラスから派生する場合があります。他のクラスから完全に派生する場合があります。または、複数の継承を介して、これらの任意の混合から派生する場合があります。</target>
        </trans-unit>
        <trans-unit id="e6747b651e587fe4f0093d11936c478b09099030" translate="yes" xml:space="preserve">
          <source>), &lt;a href=&quot;perlvms&quot;&gt;perlvms&lt;/a&gt;</source>
          <target state="translated">）、&lt;a href=&quot;perlvms&quot;&gt;perlvms&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ba220f5b6e6ddf875b36f2ab6036ca1e73f1dfa8" translate="yes" xml:space="preserve">
          <source>), a binary distribution, or a non-core module (such as Tk, DBI, etc), then please see the documentation that came with that distribution to determine the correct place to report bugs.</source>
          <target state="translated">）、バイナリディストリビューション、または非コアモジュール（Tk、DBIなど）の場合は、そのディストリビューションに付属のドキュメントを参照して、バグを報告する正しい場所を確認してください。</target>
        </trans-unit>
        <trans-unit id="37d7a98fcb3161e7f59b469e14532a94d36f9b12" translate="yes" xml:space="preserve">
          <source>), along with some helpful methods for interrogating that data.</source>
          <target state="translated">）、そのデータを調べるためのいくつかの便利な方法とともに。</target>
        </trans-unit>
        <trans-unit id="7bbfc61f89bcf69b7d112e66034a33a974882ccb" translate="yes" xml:space="preserve">
          <source>), and into the Perl interpreter itself. Older versions of Perl contain bugs that may manifest themselves despite using the latest version of &lt;a href=&quot;threads&quot;&gt;threads&lt;/a&gt; from CPAN. There is no workaround for this other than upgrading to the latest version of Perl.</source>
          <target state="translated">）、そしてPerlインタプリタ自体に。古いバージョンのPerlには、CPANの最新バージョンの&lt;a href=&quot;threads&quot;&gt;スレッド&lt;/a&gt;を使用しているにもかかわらず、それ自体が現れる可能性のあるバグが含まれています。最新バージョンのPerlにアップグレードする以外に、これに対する回避策はありません。</target>
        </trans-unit>
        <trans-unit id="a812a48223447ff4a00c61dec758c7f63fc7d624" translate="yes" xml:space="preserve">
          <source>), and the Korn shell (</source>
          <target state="translated">）、Kornシェル（</target>
        </trans-unit>
        <trans-unit id="4dc3d4ea606f39cb0d51862e90b09132948ca8d9" translate="yes" xml:space="preserve">
          <source>), but never achieved universal adoption. The &lt;a href=&quot;Object::InsideOut&quot;&gt;Object::InsideOut&lt;/a&gt; module on CPAN provides a comprehensive implementation of this technique, and you may see it or other inside-out modules in the wild.</source>
          <target state="translated">）が、普遍的な採用を達成したことはありません。CPANの&lt;a href=&quot;Object::InsideOut&quot;&gt;Object :: InsideOut&lt;/a&gt;モジュールは、この手法の包括的な実装を提供し、実際にそれまたは他の裏返しのモジュールを見ることができます。</target>
        </trans-unit>
        <trans-unit id="5582722a931d80faec2c2604d236f55218c4801c" translate="yes" xml:space="preserve">
          <source>), but never achieved universal adoption. The &lt;a href=&quot;http://search.cpan.org/perldoc/Object::InsideOut&quot;&gt;Object::InsideOut&lt;/a&gt; module on CPAN provides a comprehensive implementation of this technique, and you may see it or other inside-out modules in the wild.</source>
          <target state="translated">）、しかし普遍的な採用は達成されていません。CPAN の&lt;a href=&quot;http://search.cpan.org/perldoc/Object::InsideOut&quot;&gt;Object :: InsideOut&lt;/a&gt;モジュールは、この手法の包括的な実装を提供します。実際に、この手法や他の裏返しのモジュールを目にすることがあります。</target>
        </trans-unit>
        <trans-unit id="be22299e2551650ec9efe8f43bc6cd3596bc5a87" translate="yes" xml:space="preserve">
          <source>), but the literal data is in the specified encoding.</source>
          <target state="translated">）、しかしリテラルデータは指定されたエンコーディングにあります。</target>
        </trans-unit>
        <trans-unit id="a13d6f5c889dfb868a65c83873de9aa4af2cc116" translate="yes" xml:space="preserve">
          <source>), especially many little-endians do the latter. This is only useful if you have select(), naturally.</source>
          <target state="translated">）、特に多くのリトルエンディアンが後者を行います。これは、当然select（）がある場合にのみ役立ちます。</target>
        </trans-unit>
        <trans-unit id="a90a49817763911f4c5d2c811bd0265de9cdae6a" translate="yes" xml:space="preserve">
          <source>), even for negative shiftees. In arithmetic right shift the sign bit is replicated on the left, in logical shift zero bits come in from the left.</source>
          <target state="translated">）、負のシフト対象者でも。算術右シフトでは、符号ビットは左側に複製され、論理シフトでは、ゼロビットが左から入ります。</target>
        </trans-unit>
        <trans-unit id="1bdc1dfaa0689b15c5f1f5abeefc7919ff43e83f" translate="yes" xml:space="preserve">
          <source>), like</source>
          <target state="translated">）、 お気に入り</target>
        </trans-unit>
        <trans-unit id="8e07233c7cb7d125bda9afb2d089c66b7362165d" translate="yes" xml:space="preserve">
          <source>), or &lt;code&gt;`glob a*b`&lt;/code&gt; (internal for ksh)? You need to specify your shell explicitly, like &lt;code&gt;`cmd /c copy a b`&lt;/code&gt; , since Perl cannot deduce which commands are internal to your shell.</source>
          <target state="translated">）、または &lt;code&gt;`glob a*b`&lt;/code&gt; （kshの内部）？Perlはシェルの内部にあるコマンドを推測できないため、 &lt;code&gt;`cmd /c copy a b`&lt;/code&gt; ようにシェルを明示的に指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="778cde10ba3ce670335c0977b855f84fe72d11ca" translate="yes" xml:space="preserve">
          <source>), or &lt;code&gt;`glob a*b`&lt;/code&gt; (internal for ksh)? You need to specify your shell explicitly, like &lt;code&gt;`cmd /c copy a b`&lt;/code&gt;, since Perl cannot deduce which commands are internal to your shell.</source>
          <target state="translated">）、または &lt;code&gt;`glob a*b`&lt;/code&gt; （kshの内部）？Perlはどのコマンドがシェルの内部にあるかを推測できないため、 &lt;code&gt;`cmd /c copy a b`&lt;/code&gt; ようにシェルを明示的に指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="5b4d9823b2af8d74d8d5e0c1ea2ff248c80ea3d4" translate="yes" xml:space="preserve">
          <source>), or in configurable location (see &lt;a href=&quot;#PERL_SH_DIR&quot;&gt;&quot;&lt;code&gt;PERL_SH_DIR&lt;/code&gt;&quot;&lt;/a&gt;).</source>
          <target state="translated">）、または構成可能な場所（&lt;a href=&quot;#PERL_SH_DIR&quot;&gt;「 &lt;code&gt;PERL_SH_DIR&lt;/code&gt; 」を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="0628cf3503bf4bbbc2ce5d535a543d4ded04903a" translate="yes" xml:space="preserve">
          <source>), or in configurable location (see &lt;a href=&quot;#PERL_SH_DIR&quot;&gt;PERL_SH_DIR&lt;/a&gt;).</source>
          <target state="translated">）、または構成可能な場所（&lt;a href=&quot;#PERL_SH_DIR&quot;&gt;PERL_SH_DIRを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="2491f48be12de5636116c5c0fd0e291876db397a" translate="yes" xml:space="preserve">
          <source>), or libdlcompat to</source>
          <target state="translated">）、またはlibdlcompat to</target>
        </trans-unit>
        <trans-unit id="e29686a525e32c01eab0fa60c7ad6d86eada0dd5" translate="yes" xml:space="preserve">
          <source>), otherwise unsigned C integers are used (</source>
          <target state="translated">）、それ以外の場合は符号なしC整数が使用されます（</target>
        </trans-unit>
        <trans-unit id="b76430f0a63614c0383c191e6bda6c8b60a93154" translate="yes" xml:space="preserve">
          <source>), resulting in garbled output from the unrecognized attribute. Even if there were a way around that problem, the format doesn't know that the non-printing escape sequence is zero-length and would incorrectly format the output. For formatted output using color or other attributes, either use sprintf() instead or use formline() and then add the color or other attributes after formatting and before output.</source>
          <target state="translated">）、認識されない属性からの出力が文字化けします。その問題を回避する方法があったとしても、フォーマットは、非印刷エスケープシーケンスが長さゼロであることを認識せず、出力を誤ってフォーマットします。色またはその他の属性を使用してフォーマットされた出力の場合は、代わりにsprintf（）を使用するか、formline（）を使用して、フォーマット後、出力前に色またはその他の属性を追加します。</target>
        </trans-unit>
        <trans-unit id="27d4e0b75aa9979af9c60f48e50541e1084c0f21" translate="yes" xml:space="preserve">
          <source>), the C shell (</source>
          <target state="translated">）、Cシェル（</target>
        </trans-unit>
        <trans-unit id="36f69b726a9c53c3663307c2a768d21ad7c2d633" translate="yes" xml:space="preserve">
          <source>), the Unicode version of normalization implemented by this module depends on what has been compiled into your perl. The following table lists the default Unicode version that comes with various perl versions. (It is possible to change the Unicode version in any perl version to be any earlier Unicode version, so one could cause Unicode 3.2 to be used in any perl version starting with 5.8.0. Read</source>
          <target state="translated">）、このモジュールによって実装される正規化のUnicodeバージョンは、perlにコンパイルされているものによって異なります。次の表に、さまざまなperlバージョンに付属するデフォルトのUnicodeバージョンを示します。（任意のperlバージョンのUnicodeバージョンを以前のUnicodeバージョンに変更できるため、5.8.0以降の任意のperlバージョンでUnicode3.2を使用することができます。</target>
        </trans-unit>
        <trans-unit id="8921d13cc2e9b0e14e6863e00a16b9ef9534ecde" translate="yes" xml:space="preserve">
          <source>), the Unicode version of normalization implemented by this module depends on your perl's version.</source>
          <target state="translated">）、このモジュールによって実装される正規化のUnicodeバージョンは、Perlのバージョンによって異なります。</target>
        </trans-unit>
        <trans-unit id="7847189040b71cd51c130c2436b0e22235a3d864" translate="yes" xml:space="preserve">
          <source>), the remainder of the text, and the skipped prefix (if any). If a suitable delimited substring is not found, the first element of the array is the empty string, the second is the complete original text, and the prefix returned in the third element is an empty string.</source>
          <target state="translated">）、残りのテキスト、およびスキップされた接頭辞（存在する場合）。適切な区切られた部分文字列が見つからない場合、配列の最初の要素は空の文字列、2番目は完全な元のテキスト、3番目の要素で返されるプレフィックスは空の文字列です。</target>
        </trans-unit>
        <trans-unit id="f615146b0c5326d45eb59116d40a716c8d44a5d9" translate="yes" xml:space="preserve">
          <source>), while the latter is useful if $prefix is shared by many packages, e.g. if $prefix=</source>
          <target state="translated">）、後者は$ prefixが多くのパッケージで共有されている場合、たとえば$ prefix =</target>
        </trans-unit>
        <trans-unit id="2ddb6d2a78b2c77758ab5631f959dfe309c8ee8b" translate="yes" xml:space="preserve">
          <source>). A few platforms need to be told the location of the dependent library explicitly. Use @dl_resolve_using for this.</source>
          <target state="translated">）。いくつかのプラットフォームでは、依存ライブラリの場所を明示的に通知する必要があります。これには@dl_resolve_usingを使用します。</target>
        </trans-unit>
        <trans-unit id="6e0d8f2fab340ca3e828a3d60cdc124f6a7963fd" translate="yes" xml:space="preserve">
          <source>). Almost all internally-used routines in</source>
          <target state="translated">）。内部で使用されるほとんどすべてのルーチン</target>
        </trans-unit>
        <trans-unit id="2e3178a172620d14bf2d6fd49572a7f8b300111a" translate="yes" xml:space="preserve">
          <source>). And it is &lt;code&gt;F&lt;/code&gt; if there is only a</source>
          <target state="translated">）。そして、aしかない場合は &lt;code&gt;F&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="191441749ef940028953be8e584c0530088683d7" translate="yes" xml:space="preserve">
          <source>). Anyhow, this module will neither refer to</source>
          <target state="translated">）。とにかく、このモジュールはどちらも参照しません</target>
        </trans-unit>
        <trans-unit id="740873c13ba23b24200aa2080c4fd9faa64f0e57" translate="yes" xml:space="preserve">
          <source>). If necessary, run just the failing scripts again sequentially and see if the failures go away.</source>
          <target state="translated">）。必要に応じて、失敗したスクリプトのみを順番に再度実行し、失敗が解消するかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="f4fa6174028d9716fdac2ed031a49f5b83d140fe" translate="yes" xml:space="preserve">
          <source>). If this Perl code makes calls into this XS code, and/or this XS code makes calls to the Perl code, one should be careful with the order of initialization.</source>
          <target state="translated">）。このPerlコードがこのXSコードを呼び出す場合、および/またはこのXSコードがPerlコードを呼び出す場合は、初期化の順序に注意する必要があります。</target>
        </trans-unit>
        <trans-unit id="d00d1fa6ee0d8fc40d4a6589099f366d00ea1908" translate="yes" xml:space="preserve">
          <source>). In this model, each thread runs in its own Perl interpreter, and any data sharing between threads must be explicit. The user-level interface for</source>
          <target state="translated">）。このモデルでは、各スレッドは独自のPerlインタープリターで実行され、スレッド間のデータ共有は明示的である必要があります。ユーザーレベルのインターフェース</target>
        </trans-unit>
        <trans-unit id="7d5472f1ffe12c98e459541b4ae02160b6a93b4f" translate="yes" xml:space="preserve">
          <source>). It is &lt;code&gt;S&lt;/code&gt; if there are distinct folds,</source>
          <target state="translated">）。明確な折り目がある場合は &lt;code&gt;S&lt;/code&gt; ですが、</target>
        </trans-unit>
        <trans-unit id="05a6e878bb179497ab31f32f00f95fb3899c774b" translate="yes" xml:space="preserve">
          <source>). Perl is not strictly a shell because it&amp;rsquo;s not interactive (although Perl programs can be interactive).</source>
          <target state="translated">）。Perlはインタラクティブではないため、厳密にはシェルではありません（ただし、Perlプログラムはインタラクティブにすることができます）。</target>
        </trans-unit>
        <trans-unit id="042b1859470effcbb8073926a97e8482ad8c8566" translate="yes" xml:space="preserve">
          <source>). President, ZeeGee Software Inc (</source>
          <target state="translated">）。ZeeGee Software Inc社長（</target>
        </trans-unit>
        <trans-unit id="f78cffbbf89f8002aea6399c7a9ddf0dfac97229" translate="yes" xml:space="preserve">
          <source>). So long as</source>
          <target state="translated">）。限り</target>
        </trans-unit>
        <trans-unit id="ea5a3d55458bd648431ff33d784b7d2a42d0fac1" translate="yes" xml:space="preserve">
          <source>). The following example computes the SHA-224 digest of the 7-bit message</source>
          <target state="translated">）。次の例では、7ビットメッセージのSHA-224ダイジェストを計算します</target>
        </trans-unit>
        <trans-unit id="2153ee3bfe39da6fb29d4990a55e42d582ee704f" translate="yes" xml:space="preserve">
          <source>). The subroutine should return either nothing or else a list of up to four values in the following order:</source>
          <target state="translated">）。サブルーチンは、何も返さないか、次の順序で最大4つの値のリストを返す必要があります。</target>
        </trans-unit>
        <trans-unit id="f2791a078af14b6f53c92cc496607d9ac596dc19" translate="yes" xml:space="preserve">
          <source>). These are &lt;b&gt;not&lt;/b&gt; yet available with newlib, the Cygwin libc.</source>
          <target state="translated">）。これらは、Cygwin libcであるnewlibではまだ利用でき&lt;b&gt;ませ&lt;/b&gt;ん。</target>
        </trans-unit>
        <trans-unit id="560023602febe7a40239bc4208c087508750d63d" translate="yes" xml:space="preserve">
          <source>). These ordinals can be accessed via the APIs:</source>
          <target state="translated">）。これらの序数は、APIを介してアクセスできます。</target>
        </trans-unit>
        <trans-unit id="b347823ca9f713e85046a6075137cf021c306fdd" translate="yes" xml:space="preserve">
          <source>). This is best demonstrated with this code:</source>
          <target state="translated">）。これはこのコードで最もよく示されます：</target>
        </trans-unit>
        <trans-unit id="a1d6564a7c3672bec1a1bc0e927d67a7df20f8a1" translate="yes" xml:space="preserve">
          <source>). This is done, as in the examples above, by having the two components separated by an equal sign (or interchangeably, a colon), like &lt;code&gt;\p{Bidi_Class: Left}&lt;/code&gt; .</source>
          <target state="translated">）。これは、上記の例のように、2つのコンポーネントを &lt;code&gt;\p{Bidi_Class: Left}&lt;/code&gt; ように等号（またはコロン）で区切ることによって行われます。</target>
        </trans-unit>
        <trans-unit id="d464c209f218a9aa2625304a1b1d634c64210d1e" translate="yes" xml:space="preserve">
          <source>). This is done, as in the examples above, by having the two components separated by an equal sign (or interchangeably, a colon), like &lt;code&gt;\p{Bidi_Class: Left}&lt;/code&gt;.</source>
          <target state="translated">）。これは、上記の例のように、 &lt;code&gt;\p{Bidi_Class: Left}&lt;/code&gt; ように、2つのコンポーネントを等号（または交換可能にコロン）で区切ることによって行われます。</target>
        </trans-unit>
        <trans-unit id="705bf65f5f48be0531b7a87c6aca35d55ff144f4" translate="yes" xml:space="preserve">
          <source>). This means that even if you do not</source>
          <target state="translated">）。これは、あなたがしなくても</target>
        </trans-unit>
        <trans-unit id="d67ecb26991744a9d2868c66788af481b16bc33d" translate="yes" xml:space="preserve">
          <source>). Those flags, and others, are discussed in &lt;a href=&quot;perlcall&quot;&gt;perlcall&lt;/a&gt;.</source>
          <target state="translated">）。これらのフラグやその他については、&lt;a href=&quot;perlcall&quot;&gt;perlcallで&lt;/a&gt;説明しています。</target>
        </trans-unit>
        <trans-unit id="6aa020a5258af192f5be7bb87b11f10731cd4d0d" translate="yes" xml:space="preserve">
          <source>). You need the latest version of</source>
          <target state="translated">）。最新バージョンが必要です</target>
        </trans-unit>
        <trans-unit id="53971837c357909ccaf3a6ac8079d2f764d799a4" translate="yes" xml:space="preserve">
          <source>). cereg.exe (which must be executed on a desktop pc with ActiveSync) is reported not to work on some devices. You have to create the registry entries by hand using a registry editor.</source>
          <target state="translated">）。 cereg.exe（ActiveSyncを備えたデスクトップPCで実行する必要があります）が一部のデバイスで機能しないことが報告されています。レジストリエディターを使用して手動でレジストリエントリを作成する必要があります。</target>
        </trans-unit>
        <trans-unit id="fb8631ca8bfdb01c1b65f1b35f5d1a40518d434a" translate="yes" xml:space="preserve">
          <source>);</source>
          <target state="translated">);</target>
        </trans-unit>
        <trans-unit id="1d59027579448d8af6f36a6dc3d4a00baffe8901" translate="yes" xml:space="preserve">
          <source>); or by name via the &lt;code&gt;%+&lt;/code&gt; hash, using &lt;code&gt;&quot;$+{&lt;i&gt;name&lt;/i&gt;}&quot;&lt;/code&gt;.</source>
          <target state="translated">）; または、 &lt;code&gt;&quot;$+{&lt;i&gt;name&lt;/i&gt;}&quot;&lt;/code&gt; &lt;i&gt;name&lt;/i&gt; }」を使用して、 &lt;code&gt;%+&lt;/code&gt; ハッシュを介して&lt;i&gt;名前で&lt;/i&gt;。&lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="3e0ee17e99cbf2528fa040abfe91674006a4598e" translate="yes" xml:space="preserve">
          <source>); these were automatically generated by the installation process. You may also discover files in the library directory that end in either</source>
          <target state="translated">）; これらは、インストールプロセスによって自動的に生成されました。また、ライブラリディレクトリのいずれかで終わるファイルを検出することもできます。</target>
        </trans-unit>
        <trans-unit id="f0f1ab06aabff0dd04ec2e7fdd0330f3f72717ad" translate="yes" xml:space="preserve">
          <source>* $status = $i-&amp;gt;inflate($input, $output [,$eof]) *</source>
          <target state="translated">* $ status = $ i-&amp;gt; inflate（$ input、$ output [、$ eof]）*</target>
        </trans-unit>
        <trans-unit id="711683a62464c1b947fc95a05857522c610a2052" translate="yes" xml:space="preserve">
          <source>* ($i, $status) = new Compress::Raw::Zlib::Inflate( [OPT] ) *</source>
          <target state="translated">*（$ i、$ status）=新しいCompress :: Raw :: Zlib :: Inflate（[OPT]）*</target>
        </trans-unit>
        <trans-unit id="4dca2a4ec9738b1daccbda871474b00c0a111b97" translate="yes" xml:space="preserve">
          <source>* &lt;a href=&quot;I18N::LangTags::List&quot;&gt;I18N::LangTags::List&lt;/a&gt;</source>
          <target state="translated">* &lt;a href=&quot;I18N::LangTags::List&quot;&gt;I18N::LangTags::List&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="662154abd6b12506d6af987521bf74a19afd4fd0" translate="yes" xml:space="preserve">
          <source>* &lt;a href=&quot;langtags/list&quot;&gt;I18N::LangTags::List&lt;/a&gt;</source>
          <target state="translated">* &lt;a href=&quot;langtags/list&quot;&gt;I18N :: LangTags :: List&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1f4fa87402fc5d37e84c5d48b561733bfecfda12" translate="yes" xml:space="preserve">
          <source>* Calls to &lt;code&gt;maketext&lt;/code&gt; (as Maketext's main function is called) happen thru a &quot;language session handle&quot;, notionally very much like an IO handle, in that you open one at the start of the session, and use it for &quot;sending signals&quot; to an object in order to have it return the text you want.</source>
          <target state="translated">* &lt;code&gt;maketext&lt;/code&gt; の呼び出し（Maketextのメイン関数が呼び出されるとき）は、セッションの開始時に開くという点で、概念的にはIOハンドルに非常によく似た「言語セッションハンドル」を介して発生し、「シグナルの送信」に使用します。必要なテキストを返すようにするためのオブジェクト。</target>
        </trans-unit>
        <trans-unit id="53698d1b06e8dd4ae73bc9c6c3f72d465836ed18" translate="yes" xml:space="preserve">
          <source>* Characters regarded as CJK unified ideographs (cf. &lt;code&gt;overrideCJK&lt;/code&gt; ) depend on &lt;code&gt;UCA_Version&lt;/code&gt; .</source>
          <target state="translated">* CJK統一表意文字（cf. &lt;code&gt;overrideCJK&lt;/code&gt; ）と見なされる文字は、 &lt;code&gt;UCA_Version&lt;/code&gt; に依存します。</target>
        </trans-unit>
        <trans-unit id="a9f1a19955063b508d912267a743c01876e01d19" translate="yes" xml:space="preserve">
          <source>* Characters regarded as CJK unified ideographs (cf. &lt;code&gt;overrideCJK&lt;/code&gt;) depend on &lt;code&gt;UCA_Version&lt;/code&gt;.</source>
          <target state="translated">* CJK統合漢字（ &lt;code&gt;overrideCJK&lt;/code&gt; を参照）と見なされる文字は、 &lt;code&gt;UCA_Version&lt;/code&gt; に依存します。</target>
        </trans-unit>
        <trans-unit id="7091209d72896e2c39bfe2b79d29762aee8efbde" translate="yes" xml:space="preserve">
          <source>* Check then exit</source>
          <target state="translated">*チェックして終了します</target>
        </trans-unit>
        <trans-unit id="ff54b7fd765cf7407f178535811ac43fe11764ba" translate="yes" xml:space="preserve">
          <source>* Fully ignorable characters were ignored, and would not interrupt contractions with &lt;code&gt;UCA_Version&lt;/code&gt; 9 and 11.</source>
          <target state="translated">*完全に無視できる文字は無視され、 &lt;code&gt;UCA_Version&lt;/code&gt; 9および11での縮小は中断されませんでした。</target>
        </trans-unit>
        <trans-unit id="c482699ba0d9eda15c09384bf56262c0a8ead969" translate="yes" xml:space="preserve">
          <source>* ISO 639-2, &quot;Codes for the representation of names of languages&quot;, including two-letter and three-letter codes, &lt;code&gt;&lt;a href=&quot;http://www.loc.gov/standards/iso639-2/php/code_list.php&quot;&gt;http://www.loc.gov/standards/iso639-2/php/code_list.php&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">* ISO 639-2、「言語の名前を表すためのコード」、2文字および3文字のコードを含む、 &lt;code&gt;&lt;a href=&quot;http://www.loc.gov/standards/iso639-2/php/code_list.php&quot;&gt;http://www.loc.gov/standards/iso639-2/php/code_list.php&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c970a3c0abb4e4f41ee7e5d7374c3df2f2d33f28" translate="yes" xml:space="preserve">
          <source>* Locale::Codes, in &lt;code&gt;&lt;a href=&quot;http://www.perl.com/CPAN/modules/by-module/Locale/&quot;&gt;http://www.perl.com/CPAN/modules/by-module/Locale/&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">* Locale :: Codes、 &lt;code&gt;&lt;a href=&quot;http://www.perl.com/CPAN/modules/by-module/Locale/&quot;&gt;http://www.perl.com/CPAN/modules/by-module/Locale/&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1a89954fdb3af5eae5e55d02be3ce39795c43b97" translate="yes" xml:space="preserve">
          <source>* Many hangul jamo are assigned at &lt;code&gt;UCA_Version&lt;/code&gt; 20, that will affect &lt;code&gt;hangul_terminator&lt;/code&gt; .</source>
          <target state="translated">*多くのハングルjamoが &lt;code&gt;UCA_Version&lt;/code&gt; 20に割り当てられており、hangul_terminatorに影響し &lt;code&gt;hangul_terminator&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1ccb2395cd0f2fb802c29014d60803ad3c29470b" translate="yes" xml:space="preserve">
          <source>* Many hangul jamo are assigned at &lt;code&gt;UCA_Version&lt;/code&gt; 20, that will affect &lt;code&gt;hangul_terminator&lt;/code&gt;.</source>
          <target state="translated">*多くのハングル字母がUCA_Version20で割り当てられて &lt;code&gt;UCA_Version&lt;/code&gt; 、これは &lt;code&gt;hangul_terminator&lt;/code&gt; に影響します。</target>
        </trans-unit>
        <trans-unit id="3e7cdc6678b63f68f1f731cd796dc594743e79af" translate="yes" xml:space="preserve">
          <source>* Noncharacters (e.g. U+FFFF) are not ignored, and can be overridden since &lt;code&gt;UCA_Version&lt;/code&gt; 22.</source>
          <target state="translated">*非文字（例：U + FFFF）は無視されず、 &lt;code&gt;UCA_Version&lt;/code&gt; 22 以降は上書きできます。</target>
        </trans-unit>
        <trans-unit id="b1c01b3ace60123b87b3f718dd69b661047bea89" translate="yes" xml:space="preserve">
          <source>* Out-of-range codepoints (greater than U+10FFFF) are not ignored, and can be overridden since &lt;code&gt;UCA_Version&lt;/code&gt; 22.</source>
          <target state="translated">*範囲外のコードポイント（U + 10FFFFより大きい）は無視されず、 &lt;code&gt;UCA_Version&lt;/code&gt; 22 以降は上書きできます。</target>
        </trans-unit>
        <trans-unit id="3acf57a3122fd8676139be1b54b77e7a6c0f4419" translate="yes" xml:space="preserve">
          <source>* RFC 2231, &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc2231.txt&quot;&gt;http://www.ietf.org/rfc/rfc2231.txt&lt;/a&gt;&lt;/code&gt;, &quot;MIME Parameter Value and Encoded Word Extensions: Character Sets, Languages, and Continuations&quot;.</source>
          <target state="translated">* RFC 2231、 &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc2231.txt&quot;&gt;http://www.ietf.org/rfc/rfc2231.txt&lt;/a&gt;&lt;/code&gt; 、「MIMEパラメータ値とエンコードされたWordの拡張機能：文字セット、言語、および継続」。</target>
        </trans-unit>
        <trans-unit id="7a7d7dbfc55209a71c5f7e824d67a357a6a16bbc" translate="yes" xml:space="preserve">
          <source>* RFC 2277, &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc2277.txt&quot;&gt;http://www.ietf.org/rfc/rfc2277.txt&lt;/a&gt;&lt;/code&gt;, &quot;IETF Policy on Character Sets and Languages&quot;.</source>
          <target state="translated">* RFC 2277、 &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc2277.txt&quot;&gt;http://www.ietf.org/rfc/rfc2277.txt&lt;/a&gt;&lt;/code&gt; 、「文字セットと言語に関するIETFポリシー」。</target>
        </trans-unit>
        <trans-unit id="9e8c6c9d9a4f36c517c3f295833e4f6eab416286" translate="yes" xml:space="preserve">
          <source>* RFC 2482, &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc2482.txt&quot;&gt;http://www.ietf.org/rfc/rfc2482.txt&lt;/a&gt;&lt;/code&gt;, &quot;Language Tagging in Unicode Plain Text&quot;.</source>
          <target state="translated">* RFC 2482、 &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc2482.txt&quot;&gt;http://www.ietf.org/rfc/rfc2482.txt&lt;/a&gt;&lt;/code&gt; 、「Unicodeプレーンテキストでの言語タグ付け」。</target>
        </trans-unit>
        <trans-unit id="a0423bc09cf4060b0b568dded73ce94844a1cdfb" translate="yes" xml:space="preserve">
          <source>* RFC 3066, &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc3066.txt&quot;&gt;http://www.ietf.org/rfc/rfc3066.txt&lt;/a&gt;&lt;/code&gt;, &quot;Tags for the Identification of Languages&quot;. (Obsoletes RFC 1766)</source>
          <target state="translated">* RFC 3066、 &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc3066.txt&quot;&gt;http://www.ietf.org/rfc/rfc3066.txt&lt;/a&gt;&lt;/code&gt; 、「言語を識別するためのタグ」。（RFC 1766を廃止）</target>
        </trans-unit>
        <trans-unit id="0d995187844c913f0fc72fa490ae73510b255678" translate="yes" xml:space="preserve">
          <source>* See below &lt;code&gt;long_contraction&lt;/code&gt; with &lt;code&gt;UCA_Version&lt;/code&gt; 22 and 24.</source>
          <target state="translated">* &lt;code&gt;UCA_Version&lt;/code&gt; 22および24での下記の &lt;code&gt;long_contraction&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="623012ecef5bb9b062336a9ae7c0b0f3fc03627e" translate="yes" xml:space="preserve">
          <source>* See below for &lt;code&gt;long_contraction&lt;/code&gt; with &lt;code&gt;UCA_Version&lt;/code&gt; 22 and 24.</source>
          <target state="translated">*については以下を参照してください &lt;code&gt;long_contraction&lt;/code&gt; で &lt;code&gt;UCA_Version&lt;/code&gt; 22と24。</target>
        </trans-unit>
        <trans-unit id="9659d778014dc9fe8cc992c94d2c75debd111108" translate="yes" xml:space="preserve">
          <source>* The IANA list of registered languages (hopefully up-to-date), &lt;code&gt;&lt;a href=&quot;http://www.iana.org/assignments/language-tags&quot;&gt;http://www.iana.org/assignments/language-tags&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">* IANAの登録済み言語のリスト（できれば最新）、 &lt;code&gt;&lt;a href=&quot;http://www.iana.org/assignments/language-tags&quot;&gt;http://www.iana.org/assignments/language-tags&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="74b13d7787d563c4cc93632fd811f53e2f851184" translate="yes" xml:space="preserve">
          <source>* The shorthand uses code in brackets to indicate method calls that should be performed. A full explanation is not in order here, but a few examples will suffice:</source>
          <target state="translated">*省略形では、括弧内のコードを使用して、実行する必要のあるメソッド呼び出しを示します。ここでは完全な説明はありませんが、いくつかの例で十分です。</target>
        </trans-unit>
        <trans-unit id="fc59265402b2bcf12a045f141f3c84d1ac00a64c" translate="yes" xml:space="preserve">
          <source>* There are two exceptions to a bracketed character class matching a single character only. Each requires special handling by Perl to make things work:</source>
          <target state="translated">*単一の文字のみに一致する括弧付き文字クラスには、2つの例外があります。物事を機能させるためには、それぞれPerlによる特別な処理が必要です。</target>
        </trans-unit>
        <trans-unit id="4586f310185f58f7f53d9296e7502d34140c05ef" translate="yes" xml:space="preserve">
          <source>* There is initial support for Log4perl if it is available, but I haven't gone through everything to make the NullLogger work out correctly if Log4perl is not installed.</source>
          <target state="translated">* Log4perlが利用可能な場合、最初のサポートはありますが、Log4perlがインストールされていない場合、NullLoggerが正しく機能するようにすべてを実行したわけではありません。</target>
        </trans-unit>
        <trans-unit id="897931bec8a15698dae5c444e1fbf89e322d1e04" translate="yes" xml:space="preserve">
          <source>* Treatment of ignorables after variables and some behaviors were changed at &lt;code&gt;UCA_Version&lt;/code&gt; 9.</source>
          <target state="translated">*変数の後の無視できるものの処理と一部の動作が &lt;code&gt;UCA_Version&lt;/code&gt; 9で変更されました。</target>
        </trans-unit>
        <trans-unit id="4ab6776ec3ae41680389bbd7fdeaf492e64beaea" translate="yes" xml:space="preserve">
          <source>* Warnings switch</source>
          <target state="translated">*警告スイッチ</target>
        </trans-unit>
        <trans-unit id="d39076f93b425658bb7a0773e365b9aebbb6b2dd" translate="yes" xml:space="preserve">
          <source>* When I capture CPAN.pm output, I need to check for errors and report them to the user.</source>
          <target state="translated">* CPAN.pmの出力をキャプチャするとき、エラーをチェックしてユーザーに報告する必要があります。</target>
        </trans-unit>
        <trans-unit id="bf1ce5c5a5f16390fceec5d1cfef5859ae6cb024" translate="yes" xml:space="preserve">
          <source>* Where a value in a %Lexicon hash is a contentful string instead of an anonymous sub (or, conceivably, a coderef), it would be interpreted as a sort of shorthand expression of what the sub does. When accessed for the first time in a session, it is parsed, turned into Perl code, and then eval'd into an anonymous sub; then that sub replaces the original string in that lexicon. (That way, the work of parsing and evaling the shorthand form for a given phrase is done no more than once per session.)</source>
          <target state="translated">*％Lexiconハッシュの値が、匿名のサブ（または、おそらくcoderef）ではなく、内容のある文字列である場合、サブの機能の一種の省略表現として解釈されます。セッションで初めてアクセスされると、解析され、Perlコードに変換されてから、匿名のサブに評価されます。次に、そのサブがそのレキシコンの元の文字列を置き換えます。 （このようにして、特定のフレーズの省略形を解析および評価する作業は、セッションごとに1回だけ実行されます。）</target>
        </trans-unit>
        <trans-unit id="eb19d00dbb35076b2cfb43afaaa8a44bc7567ca5" translate="yes" xml:space="preserve">
          <source>* an encoding of a formally valid language tag always is a string value that is defined, has length, and is true if considered as a boolean.</source>
          <target state="translated">*正式に有効な言語タグのエンコーディングは、常に定義された長さの文字列値であり、ブール値と見なされる場合はtrueです。</target>
        </trans-unit>
        <trans-unit id="d7b33d4317a74846c304b7cc9d62f9ea8e7ce5e2" translate="yes" xml:space="preserve">
          <source>* none noted</source>
          <target state="translated">*記載なし</target>
        </trans-unit>
        <trans-unit id="2557ef10c9aae34d34a75b9568a7e1eeddc1c5f2" translate="yes" xml:space="preserve">
          <source>* one shot configuration values from the command line</source>
          <target state="translated">*コマンドラインからのワンショット構成値</target>
        </trans-unit>
        <trans-unit id="cb89de7628537cdbcdcd2d5c31607dcd65d29209" translate="yes" xml:space="preserve">
          <source>* tags representing different languages never get the same encoding.</source>
          <target state="translated">*異なる言語を表すタグが同じエンコーディングを取得することはありません。</target>
        </trans-unit>
        <trans-unit id="cfc914db0008bc5c5328a3a2456a7e925514bb85" translate="yes" xml:space="preserve">
          <source>* tags representing the same language always get the same encoding.</source>
          <target state="translated">*同じ言語を表すタグは常に同じエンコーディングを取得します。</target>
        </trans-unit>
        <trans-unit id="f632df7964dda121448ae6e5ca4eb877ed15fde2" translate="yes" xml:space="preserve">
          <source>*$d-&amp;gt;adler32()*</source>
          <target state="translated">*$d-&amp;gt;adler32()*</target>
        </trans-unit>
        <trans-unit id="c35eaa4aaa4b0b36d04700f984d9950b54e08112" translate="yes" xml:space="preserve">
          <source>*$d-&amp;gt;crc32()*</source>
          <target state="translated">*$d-&amp;gt;crc32()*</target>
        </trans-unit>
        <trans-unit id="0c971c521366bf298521a0d1cb12de8653928b4d" translate="yes" xml:space="preserve">
          <source>*$d-&amp;gt;dict_adler()*</source>
          <target state="translated">*$d-&amp;gt;dict_adler()*</target>
        </trans-unit>
        <trans-unit id="64629fc19b2eab3d05adbf52fc5e32abcf625962" translate="yes" xml:space="preserve">
          <source>*$d-&amp;gt;get_BufSize()*</source>
          <target state="translated">*$d-&amp;gt;get_BufSize()*</target>
        </trans-unit>
        <trans-unit id="56aed9950c73a350f4bbada6fc3d5abe3158462a" translate="yes" xml:space="preserve">
          <source>*$d-&amp;gt;get_Level()*</source>
          <target state="translated">*$d-&amp;gt;get_Level()*</target>
        </trans-unit>
        <trans-unit id="3bf087cdc68f5ef42e9bbc91a4a61bc60dd22717" translate="yes" xml:space="preserve">
          <source>*$d-&amp;gt;get_Strategy()*</source>
          <target state="translated">*$d-&amp;gt;get_Strategy()*</target>
        </trans-unit>
        <trans-unit id="6a81c6c52f16a8d6923233b258116bbaae34938f" translate="yes" xml:space="preserve">
          <source>*$d-&amp;gt;msg()*</source>
          <target state="translated">*$d-&amp;gt;msg()*</target>
        </trans-unit>
        <trans-unit id="b63a3f7f425b1954a977386ef5d279e257384ce4" translate="yes" xml:space="preserve">
          <source>*$d-&amp;gt;total_in()*</source>
          <target state="translated">*$d-&amp;gt;total_in()*</target>
        </trans-unit>
        <trans-unit id="7be11abe1a981cdfe5c58e90cbe56c74620650fb" translate="yes" xml:space="preserve">
          <source>*$d-&amp;gt;total_out()*</source>
          <target state="translated">*$d-&amp;gt;total_out()*</target>
        </trans-unit>
        <trans-unit id="d80a4fc42d0165881aa2fa21601335f6a5b174f7" translate="yes" xml:space="preserve">
          <source>*$i-&amp;gt;adler32()*</source>
          <target state="translated">*$i-&amp;gt;adler32()*</target>
        </trans-unit>
        <trans-unit id="68674a7b4388b0adebddc415278aa8a461b56203" translate="yes" xml:space="preserve">
          <source>*$i-&amp;gt;crc32()*</source>
          <target state="translated">*$i-&amp;gt;crc32()*</target>
        </trans-unit>
        <trans-unit id="1660d213fb0cf4bed038244acbc0c77e58a9ffde" translate="yes" xml:space="preserve">
          <source>*$i-&amp;gt;dict_adler()*</source>
          <target state="translated">*$i-&amp;gt;dict_adler()*</target>
        </trans-unit>
        <trans-unit id="ed00afb6796ebd2d75d5fb6836b1271979dc5acd" translate="yes" xml:space="preserve">
          <source>*$i-&amp;gt;msg()*</source>
          <target state="translated">*$i-&amp;gt;msg()*</target>
        </trans-unit>
        <trans-unit id="2b2b2852d7c10fd41b04fd33545a78d54c94f1e6" translate="yes" xml:space="preserve">
          <source>*$i-&amp;gt;total_in()*</source>
          <target state="translated">*$i-&amp;gt;total_in()*</target>
        </trans-unit>
        <trans-unit id="a00928e02457981385f8e4dd086f63b3c7d4708f" translate="yes" xml:space="preserve">
          <source>*$i-&amp;gt;total_out()*</source>
          <target state="translated">*$i-&amp;gt;total_out()*</target>
        </trans-unit>
        <trans-unit id="04bb5391ea5a418de25822f423a009711407d686" translate="yes" xml:space="preserve">
          <source>*$status = $d-&amp;gt;deflate($input, $output)*</source>
          <target state="translated">* $ status = $ d-&amp;gt; deflate（$ input、$ output）*</target>
        </trans-unit>
        <trans-unit id="c0ba780f9e7693de09966236201daf25c2601f99" translate="yes" xml:space="preserve">
          <source>*$status = $d-&amp;gt;deflateParams([OPT])*</source>
          <target state="translated">* $ status = $ d-&amp;gt; deflateParams（[OPT]）*</target>
        </trans-unit>
        <trans-unit id="254a6aafb8b04918fd23639de431468d8ff29ccd" translate="yes" xml:space="preserve">
          <source>*$status = $d-&amp;gt;deflateReset() *</source>
          <target state="translated">* $ status = $ d-&amp;gt; deflateReset（）*</target>
        </trans-unit>
        <trans-unit id="d497a45f9cb78ca6b50b3a7e156fd6b9c7fb384d" translate="yes" xml:space="preserve">
          <source>*$status = $d-&amp;gt;deflateTune($good_length, $max_lazy, $nice_length, $max_chain)*</source>
          <target state="translated">* $ status = $ d-&amp;gt; deflateTune（$ good_length、$ max_lazy、$ nice_length、$ max_chain）*</target>
        </trans-unit>
        <trans-unit id="141b772af4aeeaea008ed027db1ed7bde5ce5676" translate="yes" xml:space="preserve">
          <source>*$status = $d-&amp;gt;flush($output [, $flush_type]) *</source>
          <target state="translated">* $ status = $ d-&amp;gt; flush（$ output [、$ flush_type]）*</target>
        </trans-unit>
        <trans-unit id="74f8a4eb98878730ef2f86aea42e666e1ee160bc" translate="yes" xml:space="preserve">
          <source>*$status = $i-&amp;gt;inflateReset() *</source>
          <target state="translated">* $ status = $ i-&amp;gt; inflateReset（）*</target>
        </trans-unit>
        <trans-unit id="9db33bbf75bca37e8376afc3d73136b2ed6357e1" translate="yes" xml:space="preserve">
          <source>*$status = $i-&amp;gt;inflateSync($buffer)*</source>
          <target state="translated">* $ status = $ i-&amp;gt; inflateSync（$ buffer）*</target>
        </trans-unit>
        <trans-unit id="112c6b855140730d98a28cbfad625ebe4443a357" translate="yes" xml:space="preserve">
          <source>*$status = $i-&amp;gt;inflateSync($input)*</source>
          <target state="translated">* $ status = $ i-&amp;gt; inflateSync（$ input）*</target>
        </trans-unit>
        <trans-unit id="ac1cc2e7b1d14736f7f3c26c35c1e7b862a74263" translate="yes" xml:space="preserve">
          <source>*($d, $status) = deflateInit( [OPT] )*</source>
          <target state="translated">*（$ d、$ status）= deflateInit（[OPT]）*</target>
        </trans-unit>
        <trans-unit id="a1e0d6d4dfa07bb414b033b626ca0cac87b1dd85" translate="yes" xml:space="preserve">
          <source>*($d, $status) = new Compress::Raw::Zlib::Deflate( [OPT] ) *</source>
          <target state="translated">*（$ d、$ status）=新しいCompress :: Raw :: Zlib :: Deflate（[OPT]）*</target>
        </trans-unit>
        <trans-unit id="3374bc8edae5ea56b3cf3599aae276d721728d25" translate="yes" xml:space="preserve">
          <source>*($i, $status) = inflateInit()*</source>
          <target state="translated">*（$ i、$ status）= inflateInit（）*</target>
        </trans-unit>
        <trans-unit id="10ad095b48dbd0069e2864202f1242314d07a5ef" translate="yes" xml:space="preserve">
          <source>*($out, $status) = $d-&amp;gt;deflate($buffer)*</source>
          <target state="translated">*（$ out、$ status）= $ d-&amp;gt; deflate（$ buffer）*</target>
        </trans-unit>
        <trans-unit id="abc6e06c1d13c4e3bda0992462832a237f5a44c8" translate="yes" xml:space="preserve">
          <source>*($out, $status) = $d-&amp;gt;flush()* =head2 *($out, $status) = $d-&amp;gt;flush($flush_type)*</source>
          <target state="translated">*（$ out、$ status）= $ d-&amp;gt; flush（）* = head2 *（$ out、$ status）= $ d-&amp;gt; flush（$ flush_type）*</target>
        </trans-unit>
        <trans-unit id="3c4770a854a915518ba1ea48502e3961a3be7950" translate="yes" xml:space="preserve">
          <source>*($out, $status) = $i-&amp;gt;inflate($buffer)*</source>
          <target state="translated">*（$ out、$ status）= $ i-&amp;gt; inflate（$ buffer）*</target>
        </trans-unit>
        <trans-unit id="40f47eef273f34142764782337cff559ed807120" translate="yes" xml:space="preserve">
          <source>** If you are unfamiliar with testing &lt;b&gt;read &lt;a href=&quot;Test::Tutorial&quot;&gt;Test::Tutorial&lt;/a&gt; first!&lt;/b&gt; **</source>
          <target state="translated">**テストに慣れていない場合は、&lt;b&gt;まず&lt;/b&gt;&lt;b&gt;&lt;a href=&quot;Test::Tutorial&quot;&gt;Test :: Tutorialを&lt;/a&gt;&lt;/b&gt;&lt;b&gt;読んでください！&lt;/b&gt;****</target>
        </trans-unit>
        <trans-unit id="0d672a53a05ad4df9358326135542cc74a9d72d5" translate="yes" xml:space="preserve">
          <source>** If you are unfamiliar with testing &lt;b&gt;read &lt;a href=&quot;tutorial&quot;&gt;Test::Tutorial&lt;/a&gt; first!&lt;/b&gt; **</source>
          <target state="translated">**テストに慣れていない場合は、&lt;b&gt;まず&lt;/b&gt;&lt;b&gt;&lt;a href=&quot;tutorial&quot;&gt;Test :: Tutorialを&lt;/a&gt;&lt;/b&gt;&lt;b&gt;読んでください！&lt;/b&gt;**</target>
        </trans-unit>
        <trans-unit id="6fb8eb5f7fd0333449dafeec8a54ea4e28516ebb" translate="yes" xml:space="preserve">
          <source>***INTERNALS NOTE***</source>
          <target state="translated">***内部メモ***</target>
        </trans-unit>
        <trans-unit id="8b29010790c714176ac46c130dfb61773e0c13e0" translate="yes" xml:space="preserve">
          <source>*.PL</source>
          <target state="translated">*.PL</target>
        </trans-unit>
        <trans-unit id="5c455cfeca9fc61305db058d5b67796ca3d8f994" translate="yes" xml:space="preserve">
          <source>*.t</source>
          <target state="translated">*.t</target>
        </trans-unit>
        <trans-unit id="e06fa715f3e3bd676f73309b058b71ea1c00418c" translate="yes" xml:space="preserve">
          <source>*/man/</source>
          <target state="translated">*/man/</target>
        </trans-unit>
        <trans-unit id="030b7462745046bec4a3476bbbd9b7c622cb263d" translate="yes" xml:space="preserve">
          <source>*AutoLoader* vs. *SelfLoader*</source>
          <target state="translated">* AutoLoader *と* SelfLoader *</target>
        </trans-unit>
        <trans-unit id="b6da558cc8e40a9588c5a25bffee14e91b6e21e0" translate="yes" xml:space="preserve">
          <source>*Blocks versus Scripts*</source>
          <target state="translated">*ブロックとスクリプト*</target>
        </trans-unit>
        <trans-unit id="6a49ec15388c609953d1dfeb20a9de1712f85c3d" translate="yes" xml:space="preserve">
          <source>*Matching Scripts and Blocks*</source>
          <target state="translated">*一致するスクリプトとブロック*</target>
        </trans-unit>
        <trans-unit id="cb8fc69d4856a82c9d0d539da68de93134a668e2" translate="yes" xml:space="preserve">
          <source>*NOTE* You are strongly discouraged from using this function in non-test code and especially discouraged from using the set form of this function. The results of doing so may result in segmentation faults or other undefined behavior.</source>
          <target state="translated">*注*この関数を非テストコードで使用することは強くお勧めしません。特に、この関数のセット形式を使用することはお勧めしません。そうすることの結果は、セグメンテーション違反または他の未定義の振る舞いをもたらすかもしれません。</target>
        </trans-unit>
        <trans-unit id="4dbc7db62720fd7c360f08690c42352d5d4fde10" translate="yes" xml:space="preserve">
          <source>*Pod::InteriorSequence*</source>
          <target state="translated">*Pod::InteriorSequence*</target>
        </trans-unit>
        <trans-unit id="bd484e6a3fa2a69cf1b2fa912e8c64e369203cf3" translate="yes" xml:space="preserve">
          <source>*Pod::Paragraph*</source>
          <target state="translated">*Pod::Paragraph*</target>
        </trans-unit>
        <trans-unit id="f6118e75f44bd9c2e2e7a4dbaf8b93141735b0c7" translate="yes" xml:space="preserve">
          <source>*Pod::ParseTree*</source>
          <target state="translated">*Pod::ParseTree*</target>
        </trans-unit>
        <trans-unit id="a839f625dd453146a9ced9341bbff5ba4836fc73" translate="yes" xml:space="preserve">
          <source>*Warning*</source>
          <target state="translated">*Warning*</target>
        </trans-unit>
        <trans-unit id="39c05f977c871385cfb2ac67c7071d2d0749325c" translate="yes" xml:space="preserve">
          <source>*add_selection()*</source>
          <target state="translated">*add_selection()*</target>
        </trans-unit>
        <trans-unit id="22677ec6b58cd6de560696c1281301c8215b2261" translate="yes" xml:space="preserve">
          <source>*all_casefolds()*</source>
          <target state="translated">*all_casefolds()*</target>
        </trans-unit>
        <trans-unit id="495bb86a56fbdcbecef4efb0a07e0fb5a52d90bb" translate="yes" xml:space="preserve">
          <source>*begin_input()*</source>
          <target state="translated">*begin_input()*</target>
        </trans-unit>
        <trans-unit id="21491eaf691d94ff4dc5e18150f5741423ca33f3" translate="yes" xml:space="preserve">
          <source>*begin_pod()*</source>
          <target state="translated">*begin_pod()*</target>
        </trans-unit>
        <trans-unit id="e63f038d7ccfb8b7ed87a3e9a94136cc3acbaa84" translate="yes" xml:space="preserve">
          <source>*bidi_types()*</source>
          <target state="translated">*bidi_types()*</target>
        </trans-unit>
        <trans-unit id="3323378f9f296b7e09bbde8389f91b3f2e90a612" translate="yes" xml:space="preserve">
          <source>*casefold()*</source>
          <target state="translated">*casefold()*</target>
        </trans-unit>
        <trans-unit id="a382525e3184f3292d70ce3e64c30b550c9d60ca" translate="yes" xml:space="preserve">
          <source>*casespec()*</source>
          <target state="translated">*casespec()*</target>
        </trans-unit>
        <trans-unit id="2acb520d2f999e48e1e23f31071debab4019805a" translate="yes" xml:space="preserve">
          <source>*charblock()*</source>
          <target state="translated">*charblock()*</target>
        </trans-unit>
        <trans-unit id="5a1a95773194bbecc12f391b4130725b29ef1d4a" translate="yes" xml:space="preserve">
          <source>*charblocks()*</source>
          <target state="translated">*charblocks()*</target>
        </trans-unit>
        <trans-unit id="892910658fd4f7c8f9957928bae7464e9f794524" translate="yes" xml:space="preserve">
          <source>*charinfo()*</source>
          <target state="translated">*charinfo()*</target>
        </trans-unit>
        <trans-unit id="298c43cb9d5cbe40f064250a448e61dd4cb8783e" translate="yes" xml:space="preserve">
          <source>*charinrange()*</source>
          <target state="translated">*charinrange()*</target>
        </trans-unit>
        <trans-unit id="98a743c2f5c3d0d1a69423f01cff293fd38d8edb" translate="yes" xml:space="preserve">
          <source>*charprop()*</source>
          <target state="translated">*charprop()*</target>
        </trans-unit>
        <trans-unit id="aff3e7777f49ee087b89c8a05dbee3af17a26546" translate="yes" xml:space="preserve">
          <source>*charprops_all()*</source>
          <target state="translated">*charprops_all()*</target>
        </trans-unit>
        <trans-unit id="2096c542c885e6ff5b205d9c49075754580714c3" translate="yes" xml:space="preserve">
          <source>*charscript()*</source>
          <target state="translated">*charscript()*</target>
        </trans-unit>
        <trans-unit id="95242ddcdfaf5eacd2a726f8aaa11d7bc03daf57" translate="yes" xml:space="preserve">
          <source>*charscripts()*</source>
          <target state="translated">*charscripts()*</target>
        </trans-unit>
        <trans-unit id="e4821a2674ad1d26afcb87813851f804da9f5ead" translate="yes" xml:space="preserve">
          <source>*ckfun_p</source>
          <target state="translated">*ckfun_p</target>
        </trans-unit>
        <trans-unit id="0b5ab6a4a90ff2c6437322fa15586407ef2b4d11" translate="yes" xml:space="preserve">
          <source>*ckobj_p</source>
          <target state="translated">*ckobj_p</target>
        </trans-unit>
        <trans-unit id="5f7f65bb7d96d645f65805f5d460c10a6f06b354" translate="yes" xml:space="preserve">
          <source>*clear_selections()*</source>
          <target state="translated">*clear_selections()*</target>
        </trans-unit>
        <trans-unit id="5d9dc7c769c9e8f4cbeee5398ed00b6384904253" translate="yes" xml:space="preserve">
          <source>*command()*</source>
          <target state="translated">*command()*</target>
        </trans-unit>
        <trans-unit id="a139e96d8189b5a55d4a4e8e2d33902d4d0c5b9d" translate="yes" xml:space="preserve">
          <source>*compexcl()*</source>
          <target state="translated">*compexcl()*</target>
        </trans-unit>
        <trans-unit id="1b540946e2151155f214582cd243507ba7640019" translate="yes" xml:space="preserve">
          <source>*curr_headings()*</source>
          <target state="translated">*curr_headings()*</target>
        </trans-unit>
        <trans-unit id="b44c1e16cdabb8e05ed00563725662b1898a3124" translate="yes" xml:space="preserve">
          <source>*cutting()*</source>
          <target state="translated">*cutting()*</target>
        </trans-unit>
        <trans-unit id="1ddba136bdb0a3b6dbf3f58b0168d4a9181d08fc" translate="yes" xml:space="preserve">
          <source>*end_input()*</source>
          <target state="translated">*end_input()*</target>
        </trans-unit>
        <trans-unit id="a5f7375fd2de061c65ad2bf50ef73effa4294574" translate="yes" xml:space="preserve">
          <source>*end_pod()*</source>
          <target state="translated">*end_pod()*</target>
        </trans-unit>
        <trans-unit id="1d38830083f7ab5197ea4473920fe3ec232e92e5" translate="yes" xml:space="preserve">
          <source>*errorsub()*</source>
          <target state="translated">*errorsub()*</target>
        </trans-unit>
        <trans-unit id="83ae438f6c5d4adfa7da1a2ac708671df372b4bb" translate="yes" xml:space="preserve">
          <source>*filter() and anonymous sub*</source>
          <target state="translated">* filter（）と匿名サブ*</target>
        </trans-unit>
        <trans-unit id="c5d36b4a9ac4410d0011698855500ff129fe6378" translate="yes" xml:space="preserve">
          <source>*filter_add()*</source>
          <target state="translated">*filter_add()*</target>
        </trans-unit>
        <trans-unit id="c590fd9b9ee4cb77f8c87dcc99cff21706f50d16" translate="yes" xml:space="preserve">
          <source>*flags</source>
          <target state="translated">*flags</target>
        </trans-unit>
        <trans-unit id="87bf87677970cfb50487269d83b12971442cad62" translate="yes" xml:space="preserve">
          <source>*general_categories()*</source>
          <target state="translated">*general_categories()*</target>
        </trans-unit>
        <trans-unit id="c8093d60d704e74fc21bb32d9a8ddd7a40063485" translate="yes" xml:space="preserve">
          <source>*import()*</source>
          <target state="translated">*import()*</target>
        </trans-unit>
        <trans-unit id="4af0e2a6bb704b69c7748e25de2a62d813d13313" translate="yes" xml:space="preserve">
          <source>*initialize()*</source>
          <target state="translated">*initialize()*</target>
        </trans-unit>
        <trans-unit id="a26c0f1de05a3c3080ce231702af1d37d1ffdcef" translate="yes" xml:space="preserve">
          <source>*input_file()*</source>
          <target state="translated">*input_file()*</target>
        </trans-unit>
        <trans-unit id="7b32820eda1a4cbba59b3c51ef02fe178f80b148" translate="yes" xml:space="preserve">
          <source>*input_handle()*</source>
          <target state="translated">*input_handle()*</target>
        </trans-unit>
        <trans-unit id="37cf554dca7439d60a53244dbe9a6f6f66666dbc" translate="yes" xml:space="preserve">
          <source>*interior_sequence()*</source>
          <target state="translated">*interior_sequence()*</target>
        </trans-unit>
        <trans-unit id="c16b57ca8bb2b15c81ee7888fb0cc3c088fd5605" translate="yes" xml:space="preserve">
          <source>*interpolate()*</source>
          <target state="translated">*interpolate()*</target>
        </trans-unit>
        <trans-unit id="1c763b56009fbad09ca114bbc6ad819659ad6849" translate="yes" xml:space="preserve">
          <source>*is_selected()*</source>
          <target state="translated">*is_selected()*</target>
        </trans-unit>
        <trans-unit id="950f1ac016fdc438a26ebe09acd34140f5d0a0b3" translate="yes" xml:space="preserve">
          <source>*len</source>
          <target state="translated">*len</target>
        </trans-unit>
        <trans-unit id="beaf32cf7b2e540d90a96b6fc45fac3a314cd55f" translate="yes" xml:space="preserve">
          <source>*len_p</source>
          <target state="translated">*len_p</target>
        </trans-unit>
        <trans-unit id="d670fa291475b584f9b4236a8ddfefd0211dcd71" translate="yes" xml:space="preserve">
          <source>*match_section()*</source>
          <target state="translated">*match_section()*</target>
        </trans-unit>
        <trans-unit id="159da2978736cbc50e92916d4ff2e95e3a6a3290" translate="yes" xml:space="preserve">
          <source>*namedseq()*</source>
          <target state="translated">*namedseq()*</target>
        </trans-unit>
        <trans-unit id="6523eee7c8959f955cebf19b0aaf21b556b5b09d" translate="yes" xml:space="preserve">
          <source>*new()*</source>
          <target state="translated">*new()*</target>
        </trans-unit>
        <trans-unit id="999e9b24506786f32dd08362c3037e9728f69c8e" translate="yes" xml:space="preserve">
          <source>*num()*</source>
          <target state="translated">*num()*</target>
        </trans-unit>
        <trans-unit id="7834a1138a40b68be0feedf680b5fc18cc6f66fd" translate="yes" xml:space="preserve">
          <source>*old_checker_p</source>
          <target state="translated">*old_checker_p</target>
        </trans-unit>
        <trans-unit id="3f69d68aed17e619c04ffa05320c5c7f0a776f85" translate="yes" xml:space="preserve">
          <source>*output_file()*</source>
          <target state="translated">*output_file()*</target>
        </trans-unit>
        <trans-unit id="068f4b4b0837c6d09f198f53062edaca42ca04da" translate="yes" xml:space="preserve">
          <source>*output_handle()*</source>
          <target state="translated">*output_handle()*</target>
        </trans-unit>
        <trans-unit id="e31580f4b34415c38c50584a8776797a08860c70" translate="yes" xml:space="preserve">
          <source>*parse_from_file()*</source>
          <target state="translated">*parse_from_file()*</target>
        </trans-unit>
        <trans-unit id="0e4cafcb90bfc690fd27784f3955de4a3db5693b" translate="yes" xml:space="preserve">
          <source>*parse_from_filehandle()*</source>
          <target state="translated">*parse_from_filehandle()*</target>
        </trans-unit>
        <trans-unit id="d75b3a0e94d1dfb9614e94eb5cd073abcca5f774" translate="yes" xml:space="preserve">
          <source>*parse_text()*</source>
          <target state="translated">*parse_text()*</target>
        </trans-unit>
        <trans-unit id="7e9078f3ae0ce35ce16daab81c0d4418d0c4ed4f" translate="yes" xml:space="preserve">
          <source>*parseopts()*</source>
          <target state="translated">*parseopts()*</target>
        </trans-unit>
        <trans-unit id="3da2f47adeba78e93b545821850c23066406dbeb" translate="yes" xml:space="preserve">
          <source>*podselect()*</source>
          <target state="translated">*podselect()*</target>
        </trans-unit>
        <trans-unit id="78275badea2a77aee3c8465d83cc3c29a208ed8e" translate="yes" xml:space="preserve">
          <source>*preprocess_line()*</source>
          <target state="translated">*preprocess_line()*</target>
        </trans-unit>
        <trans-unit id="e7392b32b770b3c307b1ac3aae8f31c9a2750031" translate="yes" xml:space="preserve">
          <source>*preprocess_paragraph()*</source>
          <target state="translated">*preprocess_paragraph()*</target>
        </trans-unit>
        <trans-unit id="1e0522e99f043488d01967be6bf4f6d936d08801" translate="yes" xml:space="preserve">
          <source>*prop_aliases()*</source>
          <target state="translated">*prop_aliases()*</target>
        </trans-unit>
        <trans-unit id="d5d69a3ec3326224cb4550ade7aa539c5fb45f01" translate="yes" xml:space="preserve">
          <source>*prop_invlist()*</source>
          <target state="translated">*prop_invlist()*</target>
        </trans-unit>
        <trans-unit id="234f2ef007831363f45ef51c92f38d945d0737d9" translate="yes" xml:space="preserve">
          <source>*prop_invmap()*</source>
          <target state="translated">*prop_invmap()*</target>
        </trans-unit>
        <trans-unit id="df3580135f73b64d1d0f62af129b6dd0b45e63bb" translate="yes" xml:space="preserve">
          <source>*prop_value_aliases()*</source>
          <target state="translated">*prop_value_aliases()*</target>
        </trans-unit>
        <trans-unit id="c188181d7f65501ad8b99f693c9e5ec20c1820a3" translate="yes" xml:space="preserve">
          <source>*prop_values()*</source>
          <target state="translated">*prop_values()*</target>
        </trans-unit>
        <trans-unit id="3f4b3903dff14b7e8a38a7f6ff8d3b0fa7159477" translate="yes" xml:space="preserve">
          <source>*result</source>
          <target state="translated">*result</target>
        </trans-unit>
        <trans-unit id="e290a8472581248e50ff3784a40db196f11140bd" translate="yes" xml:space="preserve">
          <source>*roff</source>
          <target state="translated">*roff</target>
        </trans-unit>
        <trans-unit id="ac8814bb7facb31b6ba9ea89e4e2f1de11aa27af" translate="yes" xml:space="preserve">
          <source>*search_invlist()*</source>
          <target state="translated">*search_invlist()*</target>
        </trans-unit>
        <trans-unit id="f3dfb0ed0691863c50f58061da07cc12a0958750" translate="yes" xml:space="preserve">
          <source>*select()*</source>
          <target state="translated">*select()*</target>
        </trans-unit>
        <trans-unit id="adf407e8d4bdf881ccd7881148dfd072c3a368aa" translate="yes" xml:space="preserve">
          <source>*sob*</source>
          <target state="translated">*sob*</target>
        </trans-unit>
        <trans-unit id="ae2a6aae4f89e2c4aba8b451b3f1c9a851c4e28e" translate="yes" xml:space="preserve">
          <source>*textblock()*</source>
          <target state="translated">*textblock()*</target>
        </trans-unit>
        <trans-unit id="35292c70accf6e1bc4a136d07d88e046e56f7fe0" translate="yes" xml:space="preserve">
          <source>*use Filter::Util::Call*</source>
          <target state="translated">* Filter :: Util :: Callを使用*</target>
        </trans-unit>
        <trans-unit id="90337027d7a839db57d3cb410b0b9d7721ba0b7c" translate="yes" xml:space="preserve">
          <source>*verbatim()*</source>
          <target state="translated">*verbatim()*</target>
        </trans-unit>
        <trans-unit id="a979ef10cc6f6a36df6b8a323307ee3bb2e2db9c" translate="yes" xml:space="preserve">
          <source>+</source>
          <target state="translated">+</target>
        </trans-unit>
        <trans-unit id="b84da6d40abc1f06bf25fb9e2240531ded3dac3a" translate="yes" xml:space="preserve">
          <source>++</source>
          <target state="translated">++</target>
        </trans-unit>
        <trans-unit id="5c10b5b2cd673a0616d529aa5234b12ee7153808" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="translated">,</target>
        </trans-unit>
        <trans-unit id="36bf9f1f4a651e20a84db17e6e502dde5df6f77d" translate="yes" xml:space="preserve">
          <source>, &quot;&lt;code&gt;ls *.txt&lt;/code&gt;&quot; or &quot;&lt;code&gt;dir *.*&lt;/code&gt;&quot;. In Perl, the patterns described by regular expressions are used not only to search strings, but to also extract desired parts of strings, and to do search and replace operations.</source>
          <target state="translated">、 &quot; &lt;code&gt;ls *.txt&lt;/code&gt; &quot;または &quot; &lt;code&gt;dir *.*&lt;/code&gt; &quot;。Perlでは、正規表現で記述されたパターンは、文字列の検索だけでなく、文字列の目的の部分の抽出、および検索と置換の操作にも使用されます。</target>
        </trans-unit>
        <trans-unit id="e6e0221340c67da9c25f33128b5db67e3221f333" translate="yes" xml:space="preserve">
          <source>, &quot;A + COMBINING RING&quot; is a grapheme cluster with base character &quot;A&quot; and combining character &quot;COMBINING RING, which translates in Danish to &quot;A&quot; with the circle atop it, as in the word &amp;Aring;ngstrom.</source>
          <target state="translated">、「A + COMBINING RING」は、ベース文字「A」と結合文字「COMBINING RING」を備えた書記素クラスターで、デンマーク語で「A」に変換され、その上に円があります。</target>
        </trans-unit>
        <trans-unit id="9834fcb181aba28c7b6e23e1a30b0012fd3c7711" translate="yes" xml:space="preserve">
          <source>, &quot;Creating a Perl Debugger&quot;, &lt;a href=&quot;http://www.ddj.com/184404522&quot;&gt;http://www.ddj.com/184404522&lt;/a&gt; , and &quot;Profiling in Perl&quot; &lt;a href=&quot;http://www.ddj.com/184404580&quot;&gt;http://www.ddj.com/184404580&lt;/a&gt; .</source>
          <target state="translated">、「Perlデバッガの作成」、&lt;a href=&quot;http://www.ddj.com/184404522&quot;&gt;http：//www.ddj.com/184404522&lt;/a&gt;、および「Profiling in Perl」&lt;a href=&quot;http://www.ddj.com/184404580&quot;&gt;http://www.ddj.com/184404580&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1b632e1d6f728f496e56a5503ca92f66ab5bef88" translate="yes" xml:space="preserve">
          <source>, &quot;the &lt;code&gt;/x&lt;/code&gt; modifier&quot;, even though the delimiter in question might not really be a slash. The modifiers &lt;code&gt;/imnsxadlup&lt;/code&gt; may also be embedded within the regular expression itself using the &lt;code&gt;(?...)&lt;/code&gt; construct, see &lt;a href=&quot;#Extended-Patterns&quot;&gt;&quot;Extended Patterns&quot;&lt;/a&gt; below.</source>
          <target state="translated">、「 &lt;code&gt;/x&lt;/code&gt; 修飾子」。ただし、問題の区切り文字は実際にはスラッシュではない場合があります。修飾子 &lt;code&gt;/imnsxadlup&lt;/code&gt; は、 &lt;code&gt;(?...)&lt;/code&gt; 構造を使用して正規表現自体に埋め込むこともできます。以下の&lt;a href=&quot;#Extended-Patterns&quot;&gt;「拡張パターン」を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="1ee9b85d69a1a45808d43e30360a8f9162ce4c12" translate="yes" xml:space="preserve">
          <source>, (abbreviated NFC), and the sequence &lt;code&gt;LATIN CAPITAL LETTER A&lt;/code&gt; followed by &lt;code&gt;COMBINING ACUTE ACCENT&lt;/code&gt; represents the same character in</source>
          <target state="translated">、（NFCと略記）、および &lt;code&gt;LATIN CAPITAL LETTER A&lt;/code&gt; 後に &lt;code&gt;COMBINING ACUTE ACCENT&lt;/code&gt; が続くシーケンスは、</target>
        </trans-unit>
        <trans-unit id="730ddc40c82a93777903d7aac75c47f7ae79794b" translate="yes" xml:space="preserve">
          <source>, (places where the code seems to run slowly), change the code with the intention of making it run faster. Using version control software, like &lt;code&gt;subversion&lt;/code&gt; , will ensure no changes are irreversible. It's too easy to fiddle here and fiddle there - don't change too much at any one time or you might not discover which piece of code &lt;b&gt;really&lt;/b&gt; was the slow bit.</source>
          <target state="translated">、（コードの実行が遅いと思われる場所）、より速く実行することを意図してコードを変更します。 &lt;code&gt;subversion&lt;/code&gt; などのバージョン管理ソフトウェアを使用すると、変更を元に戻せなくなります。ここをいじくり回すのは簡単です。一度にあまり変更しないでください。変更すると、どのコード部分が&lt;b&gt;本当に&lt;/b&gt;遅いビットなの&lt;b&gt;か&lt;/b&gt;がわかりません。</target>
        </trans-unit>
        <trans-unit id="ee955b751cf3f782cae6274befc7336608afaaf6" translate="yes" xml:space="preserve">
          <source>, (places where the code seems to run slowly), change the code with the intention of making it run faster. Using version control software, like &lt;code&gt;subversion&lt;/code&gt;, will ensure no changes are irreversible. It's too easy to fiddle here and fiddle there - don't change too much at any one time or you might not discover which piece of code &lt;b&gt;really&lt;/b&gt; was the slow bit.</source>
          <target state="translated">、（コードの実行が遅いと思われる場所）、実行速度を上げるためにコードを変更します。 &lt;code&gt;subversion&lt;/code&gt; などのバージョン管理ソフトウェアを使用すると、元に戻せない変更がないことが保証されます。ここをいじってそこをいじるのは簡単すぎます-一度にあまり変更しないでください。そうしないと、コードのどの部分が&lt;b&gt;本当に&lt;/b&gt;遅いビットであるかがわからない可能性があります。</target>
        </trans-unit>
        <trans-unit id="256dae5fe812dd0a653073c3c142a5d806f220a4" translate="yes" xml:space="preserve">
          <source>, ...</source>
          <target state="translated">, ...</target>
        </trans-unit>
        <trans-unit id="b189223f9e086284fb9e5a2d4ce238755de8f49e" translate="yes" xml:space="preserve">
          <source>, ...parameters...) and there's no</source>
          <target state="translated">、...パラメータ...）そしてありません</target>
        </trans-unit>
        <trans-unit id="7d9c9fe99988b3556a05480d92acc265eff93ca8" translate="yes" xml:space="preserve">
          <source>, ...parameters...), and there's no entry</source>
          <target state="translated">、...パラメータ...）、エントリはありません</target>
        </trans-unit>
        <trans-unit id="91498e567e65fc55ee351426beca20dc70eece67" translate="yes" xml:space="preserve">
          <source>, ...parameters...), which should return a string that is generally meant for be used for &quot;output&quot; to the user -- regardless of whether this actually means printing to STDOUT, writing to a file, or putting into a GUI widget.</source>
          <target state="translated">、... parameters ...）。これは、ユーザーへの「出力」に使用することを意図した文字列を返す必要があります-これが実際にSTDOUTへの出力、ファイルへの書き込み、またはGUIウィジェット。</target>
        </trans-unit>
        <trans-unit id="68cb9c38401d32e374d45576d1fe16f98edccd5c" translate="yes" xml:space="preserve">
          <source>, &lt;a href=&quot;handle&quot;&gt;IO::Handle&lt;/a&gt;, &lt;a href=&quot;select&quot;&gt;IO::Select&lt;/a&gt;</source>
          <target state="translated">、&lt;a href=&quot;handle&quot;&gt;IO ::ハンドル&lt;/a&gt;、&lt;a href=&quot;select&quot;&gt;IO ::選択&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f38c4631f06af453e92ba616992751a1a1e31124" translate="yes" xml:space="preserve">
          <source>, &lt;a href=&quot;http://lexington.pm.org/meetings/022001.html&quot;&gt;http://lexington.pm.org/meetings/022001.html&lt;/a&gt;</source>
          <target state="translated">、&lt;a href=&quot;http://lexington.pm.org/meetings/022001.html&quot;&gt;http：//lexington.pm.org/meetings/022001.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="007315ce711051c2a3299693a5a40842913289dd" translate="yes" xml:space="preserve">
          <source>, &lt;a href=&quot;http://www.faqs.org/rfcs/rfc3164.html&quot;&gt;http://www.faqs.org/rfcs/rfc3164.html&lt;/a&gt; -- Please note that this is an informational RFC, and therefore does not specify a standard of any kind.</source>
          <target state="translated">、&lt;a href=&quot;http://www.faqs.org/rfcs/rfc3164.html&quot;&gt;http：//www.faqs.org/rfcs/rfc3164.html-&lt;/a&gt;これは情報提供用のRFCであるため、いかなる種類の標準も指定されていないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="d3b3dad532b1f051eeb3fba0becc6bea982f5b86" translate="yes" xml:space="preserve">
          <source>, &lt;a href=&quot;http://www.faqs.org/rfcs/rfc3195.html&quot;&gt;http://www.faqs.org/rfcs/rfc3195.html&lt;/a&gt;</source>
          <target state="translated">、&lt;a href=&quot;http://www.faqs.org/rfcs/rfc3195.html&quot;&gt;http：//www.faqs.org/rfcs/rfc3195.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="35d9e0f29d4fed3c7ae0a33dd19ec98ac2183348" translate="yes" xml:space="preserve">
          <source>, &lt;a href=&quot;http://www.stonehenge.com/merlyn/LinuxMag/col75.html&quot;&gt;http://www.stonehenge.com/merlyn/LinuxMag/col75.html&lt;/a&gt; .</source>
          <target state="translated">、&lt;a href=&quot;http://www.stonehenge.com/merlyn/LinuxMag/col75.html&quot;&gt;http：//www.stonehenge.com/merlyn/LinuxMag/col75.html&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b47d0918c2a38bd4e2af6702ab10cf50ebd2add8" translate="yes" xml:space="preserve">
          <source>, &lt;a href=&quot;http://www.stonehenge.com/merlyn/UnixReview/col49.html&quot;&gt;http://www.stonehenge.com/merlyn/UnixReview/col49.html&lt;/a&gt; , and &quot;Profiling in Template Toolkit via Overriding&quot; for</source>
          <target state="translated">、&lt;a href=&quot;http://www.stonehenge.com/merlyn/UnixReview/col49.html&quot;&gt;http：//www.stonehenge.com/merlyn/UnixReview/col49.html&lt;/a&gt;、および「オーバーライドによるテンプレートツールキットでのプロファイリング」</target>
        </trans-unit>
        <trans-unit id="77f493fddd2000dd703272507a4b40faa84d4ba6" translate="yes" xml:space="preserve">
          <source>, &lt;a href=&quot;perlapio&quot;&gt;perlapio&lt;/a&gt;, &lt;a href=&quot;perlcall&quot;&gt;perlcall&lt;/a&gt;, &lt;a href=&quot;perlclib&quot;&gt;perlclib&lt;/a&gt;, &lt;a href=&quot;perlfilter&quot;&gt;perlfilter&lt;/a&gt;, &lt;a href=&quot;perlguts&quot;&gt;perlguts&lt;/a&gt;, &lt;a href=&quot;perlmroapi&quot;&gt;perlmroapi&lt;/a&gt;, &lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt;, &lt;a href=&quot;perlxstut&quot;&gt;perlxstut&lt;/a&gt;, and &lt;a href=&quot;warnings&quot;&gt;warnings&lt;/a&gt;.</source>
          <target state="translated">、&lt;a href=&quot;perlapio&quot;&gt;perlapio&lt;/a&gt;、&lt;a href=&quot;perlcall&quot;&gt;perlcall&lt;/a&gt;、&lt;a href=&quot;perlclib&quot;&gt;perlclib&lt;/a&gt;、&lt;a href=&quot;perlfilter&quot;&gt;perlfilter&lt;/a&gt;、&lt;a href=&quot;perlguts&quot;&gt;perlguts&lt;/a&gt;、&lt;a href=&quot;perlmroapi&quot;&gt;perlmroapi&lt;/a&gt;、&lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt;、&lt;a href=&quot;perlxstut&quot;&gt;perlxstut&lt;/a&gt;、および&lt;a href=&quot;warnings&quot;&gt;warnings&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c492919f48867530188fb7d22191a67fbb7c3fa3" translate="yes" xml:space="preserve">
          <source>, &lt;a href=&quot;perldbmfilter&quot;&gt;perldbmfilter&lt;/a&gt;</source>
          <target state="translated">、&lt;a href=&quot;perldbmfilter&quot;&gt;perldbmfilter&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e96b82193d3adc8ae90d1b6a1d39c967eceb5aec" translate="yes" xml:space="preserve">
          <source>, &lt;a href=&quot;spec&quot;&gt;File::Spec&lt;/a&gt;</source>
          <target state="translated">、&lt;a href=&quot;spec&quot;&gt;File :: Spec&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1514b4aa12fe2361a1f8dc9777ce0c9c88e9219d" translate="yes" xml:space="preserve">
          <source>, &lt;b&gt;--center&lt;/b&gt;=</source>
          <target state="translated">, &lt;b&gt;--center&lt;/b&gt;=</target>
        </trans-unit>
        <trans-unit id="ec1ec166008e24f1d9c39660e2cb5af534fac4f6" translate="yes" xml:space="preserve">
          <source>, &lt;b&gt;--date&lt;/b&gt;=</source>
          <target state="translated">, &lt;b&gt;--date&lt;/b&gt;=</target>
        </trans-unit>
        <trans-unit id="42f4918fdf47fcb3bf2298cfaf6726020d123a5d" translate="yes" xml:space="preserve">
          <source>, &lt;b&gt;--indent=&lt;/b&gt;</source>
          <target state="translated">, &lt;b&gt;--indent=&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="8e69206560eda4dc9b771e2f2fc6b847f1de44ef" translate="yes" xml:space="preserve">
          <source>, &lt;b&gt;--left-margin&lt;/b&gt;=</source>
          <target state="translated">, &lt;b&gt;--left-margin&lt;/b&gt;=</target>
        </trans-unit>
        <trans-unit id="963a6f7e81b0e00944fb6512ad5545c5fc95976c" translate="yes" xml:space="preserve">
          <source>, &lt;b&gt;--margin&lt;/b&gt;=</source>
          <target state="translated">, &lt;b&gt;--margin&lt;/b&gt;=</target>
        </trans-unit>
        <trans-unit id="3c4d80bbad022d613c85d46b46034b627c202d72" translate="yes" xml:space="preserve">
          <source>, &lt;b&gt;--name&lt;/b&gt;=</source>
          <target state="translated">, &lt;b&gt;--name&lt;/b&gt;=</target>
        </trans-unit>
        <trans-unit id="6a39ce425c6265d1b63b042cb43c0fc901696044" translate="yes" xml:space="preserve">
          <source>, &lt;b&gt;--quotes&lt;/b&gt;=</source>
          <target state="translated">, &lt;b&gt;--quotes&lt;/b&gt;=</target>
        </trans-unit>
        <trans-unit id="8ad6a104b7bbcf1d20b0bdb3099f6378eac172ee" translate="yes" xml:space="preserve">
          <source>, &lt;b&gt;--release&lt;/b&gt;=</source>
          <target state="translated">, &lt;b&gt;--release&lt;/b&gt;=</target>
        </trans-unit>
        <trans-unit id="7a8e17440a6fd521fa5803c11d3f91fcf6d5947c" translate="yes" xml:space="preserve">
          <source>, &lt;b&gt;--section&lt;/b&gt;=</source>
          <target state="translated">, &lt;b&gt;--section&lt;/b&gt;=</target>
        </trans-unit>
        <trans-unit id="871bde3f172b60a4dd3ded3ea41d670678f0dc12" translate="yes" xml:space="preserve">
          <source>, &lt;b&gt;-&lt;/b&gt;</source>
          <target state="translated">, &lt;b&gt;-&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="48c993c3ad6fdcd73107b423983292a0b10d7d43" translate="yes" xml:space="preserve">
          <source>, &lt;b&gt;AutoLoader&lt;/b&gt; will look for perl subroutines &lt;b&gt;POSIX&lt;/b&gt; in</source>
          <target state="translated">、&lt;b&gt;オートローダーは、&lt;/b&gt; Perlのサブルーチンを探します&lt;b&gt;POSIX&lt;/b&gt;で</target>
        </trans-unit>
        <trans-unit id="38f2da13d7f63c25ad1931eef771da2bdb146cd3" translate="yes" xml:space="preserve">
          <source>, &lt;b&gt;Tgetent&lt;/b&gt; searches the files</source>
          <target state="translated">、&lt;b&gt;Tgetent&lt;/b&gt;はファイルを検索します</target>
        </trans-unit>
        <trans-unit id="899fa84c73aa4f702ca9b0a2dfa0626dc2a663bf" translate="yes" xml:space="preserve">
          <source>, &lt;code&gt;&quot;/foo\/bar/&quot;&lt;/code&gt;) serves this purpose.</source>
          <target state="translated">、 &lt;code&gt;&quot;/foo\/bar/&quot;&lt;/code&gt; ）はこの目的を果たします。</target>
        </trans-unit>
        <trans-unit id="1e03ac4e29872e2c267670242061f02f12f57063" translate="yes" xml:space="preserve">
          <source>, &lt;code&gt;$self&lt;/code&gt; , is the same reference that was passed to &lt;code&gt;filter_add&lt;/code&gt; blessed into the filter's package. See the example filters later on for details of using &lt;code&gt;$self&lt;/code&gt; .</source>
          <target state="translated">、 &lt;code&gt;$self&lt;/code&gt; 、に渡されたものと同じ参照です &lt;code&gt;filter_add&lt;/code&gt; フィルタのパッケージに恵まれました。 &lt;code&gt;$self&lt;/code&gt; の使用の詳細については、後でフィルターの例を参照してください。</target>
        </trans-unit>
        <trans-unit id="0e40de7f354d2d3eddebe80404f446deabf02880" translate="yes" xml:space="preserve">
          <source>, &lt;code&gt;$self&lt;/code&gt;, is the same reference that was passed to &lt;code&gt;filter_add&lt;/code&gt; blessed into the filter's package. See the example filters later on for details of using &lt;code&gt;$self&lt;/code&gt;.</source>
          <target state="translated">、 &lt;code&gt;$self&lt;/code&gt; は、フィルターのパッケージに祝福された &lt;code&gt;filter_add&lt;/code&gt; に渡されたものと同じ参照です。 &lt;code&gt;$self&lt;/code&gt; の使用の詳細については、後でフィルターの例を参照してください。</target>
        </trans-unit>
        <trans-unit id="8427e1854cb8f41a7151bfe175750f66c54d8bea" translate="yes" xml:space="preserve">
          <source>, &lt;code&gt;%ENV&lt;/code&gt;, &lt;code&gt;$1&lt;/code&gt;, &lt;code&gt;tie&lt;/code&gt;) gets copied, value magic doesn't (</source>
          <target state="translated">、 &lt;code&gt;%ENV&lt;/code&gt; 、 &lt;code&gt;$1&lt;/code&gt; 、 &lt;code&gt;tie&lt;/code&gt; ）はコピーされますが、バリューマジックはコピーされません（</target>
        </trans-unit>
        <trans-unit id="ae56078784168c372862d15f35078dd7477dd624" translate="yes" xml:space="preserve">
          <source>, &lt;code&gt;&amp;ndash;a &amp;ndash;b &amp;ndash;c&lt;/code&gt; ) into one switch (</source>
          <target state="translated">、 &lt;code&gt;&amp;ndash;a &amp;ndash;b &amp;ndash;c&lt;/code&gt; ）を1つのスイッチ（</target>
        </trans-unit>
        <trans-unit id="6b9c9a7b2e7232a0d7ec8201b3b9a47fc17217c2" translate="yes" xml:space="preserve">
          <source>, &lt;code&gt;&amp;ndash;a &amp;ndash;b &amp;ndash;c&lt;/code&gt;) into one switch (</source>
          <target state="translated">、 &lt;code&gt;&amp;ndash;a &amp;ndash;b &amp;ndash;c&lt;/code&gt; ）を1つのスイッチ（</target>
        </trans-unit>
        <trans-unit id="2809b44d364e51b37846cda09da4d124638daab2" translate="yes" xml:space="preserve">
          <source>, &lt;code&gt;&amp;ndash;abc&lt;/code&gt; ). Any switch with an additional &lt;b&gt;argument&lt;/b&gt; must be the last switch in a cluster.</source>
          <target state="translated">、 &lt;code&gt;&amp;ndash;abc&lt;/code&gt; ）。追加の&lt;b&gt;引数を&lt;/b&gt;持つスイッチは、クラスター内の最後のスイッチでなければなりません。</target>
        </trans-unit>
        <trans-unit id="55a2da4f7e069e28b422044a34a1371b0b31a095" translate="yes" xml:space="preserve">
          <source>, &lt;code&gt;&amp;ndash;abc&lt;/code&gt;). Any switch with an additional &lt;b&gt;argument&lt;/b&gt; must be the last switch in a cluster.</source>
          <target state="translated">、 &lt;code&gt;&amp;ndash;abc&lt;/code&gt; ）。追加の&lt;b&gt;引数を&lt;/b&gt;持つスイッチは、クラスター内の最後のスイッチである必要があります。</target>
        </trans-unit>
        <trans-unit id="6c7155a3acee3001fa967b3890eeeda3999c4b72" translate="yes" xml:space="preserve">
          <source>, &lt;code&gt;(?-i)&lt;/code&gt;. Modifiers can also be combined into a single expression,</source>
          <target state="translated">、 &lt;code&gt;(?-i)&lt;/code&gt; 。修飾子を組み合わせて1つの式にすることもできます。</target>
        </trans-unit>
        <trans-unit id="ca162894968f42d426c9ba604ea288c5c07916e2" translate="yes" xml:space="preserve">
          <source>, &lt;code&gt;(?s-i)&lt;/code&gt; turns on single line mode and turns off case insensitivity.</source>
          <target state="translated">、 &lt;code&gt;(?s-i)&lt;/code&gt; は、単一行モードをオンにし、大文字と小文字を区別しないようにします。</target>
        </trans-unit>
        <trans-unit id="0ad542fba4a49b259c0748e429b369dce74c977b" translate="yes" xml:space="preserve">
          <source>, &lt;code&gt;Encode::FB_DEFAULT&lt;/code&gt; (== 0) is assumed.</source>
          <target state="translated">、 &lt;code&gt;Encode::FB_DEFAULT&lt;/code&gt; （== 0）と見なされます。</target>
        </trans-unit>
        <trans-unit id="462879d51e479543994a8d4e84eeab49f5f2f27d" translate="yes" xml:space="preserve">
          <source>, &lt;code&gt;PLUS(7)&lt;/code&gt;. The middle lines describe some heuristics and optimizations performed before a match:</source>
          <target state="translated">、 &lt;code&gt;PLUS(7)&lt;/code&gt; 。真ん中の行は、一致する前に実行されるいくつかのヒューリスティックと最適化を示しています。</target>
        </trans-unit>
        <trans-unit id="16d7d30fa0d27a63585cee71ee6b5e5bab0abd13" translate="yes" xml:space="preserve">
          <source>, &lt;code&gt;[:^digit:]&lt;/code&gt; corresponds to &lt;code&gt;\D&lt;/code&gt; and, under Unicode, &lt;code&gt;\P{IsDigit}&lt;/code&gt;. The Unicode and POSIX character classes can be used just like &lt;code&gt;\d&lt;/code&gt;, with the exception that POSIX character classes can only be used inside of a character class:</source>
          <target state="translated">、 &lt;code&gt;[:^digit:]&lt;/code&gt; は &lt;code&gt;\D&lt;/code&gt; 対応し、Unicodeでは &lt;code&gt;\P{IsDigit}&lt;/code&gt; ます。UnicodeおよびPOSIX文字クラスは &lt;code&gt;\d&lt;/code&gt; と同じように使用できますが、POSIX文字クラスは文字クラス内でのみ使用できる点が異なります。</target>
        </trans-unit>
        <trans-unit id="88dea9f45a2209f980bb3d2c13235b80b772b94e" translate="yes" xml:space="preserve">
          <source>, &lt;code&gt;\033&lt;/code&gt;, or hexadecimal escape sequence,</source>
          <target state="translated">、 &lt;code&gt;\033&lt;/code&gt; 、または16進エスケープシーケンス、</target>
        </trans-unit>
        <trans-unit id="6c837892673073287d136dd02c954759c5482035" translate="yes" xml:space="preserve">
          <source>, &lt;code&gt;\x1B&lt;/code&gt; may be a more natural representation for your bytes. Here are some examples of escapes:</source>
          <target state="translated">、 &lt;code&gt;\x1B&lt;/code&gt; は、バイトのより自然な表現である可能性があります。エスケープの例を次に示します。</target>
        </trans-unit>
        <trans-unit id="fe3dc5c2f0d585ebe9c77a5ef081a129a7712e00" translate="yes" xml:space="preserve">
          <source>, &lt;code&gt;binmode STDOUT, ':utf8'&lt;/code&gt;. Another way to turn off the warning is to add &lt;code&gt;no warnings 'utf8';&lt;/code&gt; but that is often closer to cheating. In general, you are supposed to explicitly mark the filehandle with an encoding, see &lt;a href=&quot;open&quot;&gt;open&lt;/a&gt; and &lt;a href=&quot;perlfunc#binmode&quot;&gt;&quot;binmode&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="translated">、 &lt;code&gt;binmode STDOUT, ':utf8'&lt;/code&gt; 。警告をオフにする別の方法は、警告を追加し &lt;code&gt;no warnings 'utf8';&lt;/code&gt; しかし、それはしばしば不正行為に近いです。一般に、ファイルハンドルをエンコーディングで明示的にマークすることになっています&lt;a href=&quot;perlfunc#binmode&quot;&gt;。perlfuncの&lt;/a&gt;&lt;a href=&quot;open&quot;&gt;open&lt;/a&gt;および「binmode」を参照してください。</target>
        </trans-unit>
        <trans-unit id="d4b64e63a3c0223fd25236e90f27d457472226a1" translate="yes" xml:space="preserve">
          <source>, &lt;code&gt;code-style&lt;/code&gt; , &lt;a href=&quot;perlfaq&quot;&gt;hyperlinks&lt;/a&gt;, and more. Such codes are explained in the &quot;&lt;a href=&quot;#Formatting-Codes&quot;&gt;Formatting Codes&lt;/a&gt;&quot; section, below.</source>
          <target state="translated">、 &lt;code&gt;code-style&lt;/code&gt; 、&lt;a href=&quot;perlfaq&quot;&gt;ハイパーリンク&lt;/a&gt;など。このようなコードについては、以下の「&lt;a href=&quot;#Formatting-Codes&quot;&gt;フォーマットコード&lt;/a&gt;」セクションで説明します。</target>
        </trans-unit>
        <trans-unit id="70c100bab44e4cf6cc68ee3c0cb6aa17d6a2a7ac" translate="yes" xml:space="preserve">
          <source>, &lt;code&gt;code-style&lt;/code&gt;, &lt;a href=&quot;perlfaq&quot;&gt;hyperlinks&lt;/a&gt;, and more. Such codes are explained in the &quot;&lt;a href=&quot;#Formatting-Codes&quot;&gt;Formatting Codes&lt;/a&gt;&quot; section, below.</source>
          <target state="translated">、 &lt;code&gt;code-style&lt;/code&gt; 、&lt;a href=&quot;perlfaq&quot;&gt;ハイパーリンク&lt;/a&gt;など。このようなコードについては、以下の「&lt;a href=&quot;#Formatting-Codes&quot;&gt;フォーマットコード&lt;/a&gt;」セクションで説明しています。</target>
        </trans-unit>
        <trans-unit id="70a0b45cf40ff1d2cfe85795b7abbde7954fbe91" translate="yes" xml:space="preserve">
          <source>, &lt;code&gt;qr!!&lt;/code&gt;, &lt;code&gt;qr{}&lt;/code&gt; or &lt;code&gt;qr~~&lt;/code&gt;. Apostrophes as delimiters (&lt;code&gt;qr''&lt;/code&gt;) inhibit any interpolation.</source>
          <target state="translated">、 &lt;code&gt;qr!!&lt;/code&gt; 、 &lt;code&gt;qr{}&lt;/code&gt; または &lt;code&gt;qr~~&lt;/code&gt; 。区切り文字（ &lt;code&gt;qr''&lt;/code&gt; ）としてのアポストロフィは、補間を禁止します。</target>
        </trans-unit>
        <trans-unit id="b697447009b34f13911a7d0d08c9daa31a861e17" translate="yes" xml:space="preserve">
          <source>, &lt;code&gt;taint&lt;/code&gt;, &lt;code&gt;pos&lt;/code&gt;).</source>
          <target state="translated">, &lt;code&gt;taint&lt;/code&gt;, &lt;code&gt;pos&lt;/code&gt;).</target>
        </trans-unit>
        <trans-unit id="2357bd7f4335eff8d8daf0fa1da32b05aadee0e0" translate="yes" xml:space="preserve">
          <source>, C</source>
          <target state="translated">、C</target>
        </trans-unit>
        <trans-unit id="4a3b6b54a01d06829186977454076430f1593339" translate="yes" xml:space="preserve">
          <source>, Copyright &amp;copy; 2012 Tom Christiansen &amp;lt;et al.&amp;gt;, 2012-02-13 by O&amp;rsquo;Reilly Media. The code itself is freely redistributable, and you are encouraged to transplant, fold, spindle, and mutilate any of the examples in this manpage however you please for inclusion into your own programs without any encumbrance whatsoever. Acknowledgement via code comment is polite but not required.</source>
          <target state="translated">、Copyright&amp;copy;2012 Tom Christiansen &amp;lt;et al。&amp;gt;、2012-02-13 by O'Reilly Media。コード自体は自由に再配布可能であり、このマンページの例を移植、折りたたみ、紡錘化、および切断することをお勧めしますが、一切の負担なしに独自のプログラムに含めてください。コードコメントによる確認は丁寧ですが必須ではありません。</target>
        </trans-unit>
        <trans-unit id="283d166baa4da2433ea6b8c5023e0c5383a472d9" translate="yes" xml:space="preserve">
          <source>, Fourth Edition, by Tom Christiansen, brian d foy, Larry Wall, &amp;amp; Jon Orwant. Copyright (c) 2000, 1996, 1991, 2012 O'Reilly Media, Inc. This document may be distributed under the same terms as Perl itself.</source>
          <target state="translated">、第4版、トム・クリスチャンセン、ブライアン・ド・フォイ、ラリー・ウォール、ジョン・オーワント。Copyright（c）2000、1996、1991、2012 O'Reilly Media、Inc.このドキュメントは、Perl自体と同じ条件で配布される場合があります。</target>
        </trans-unit>
        <trans-unit id="a4710510ddd5139b0d57b1444caca5a0e1dbc934" translate="yes" xml:space="preserve">
          <source>, Fourth Edition. Words or phrases in bold are defined elsewhere in this glossary.</source>
          <target state="translated">、第4版。太字の単語や語句は、この用語集の別の場所で定義されています。</target>
        </trans-unit>
        <trans-unit id="eb3f1d4a19fa8c41000422fe5f0f14f333cda54d" translate="yes" xml:space="preserve">
          <source>, I hesitate to make 10 ways to do something&quot;. This is a tricky heuristic to navigate, though--one man's essential addition is another man's pointless cruft.</source>
          <target state="translated">、私は何かをするために10の方法を作るのをためらいます。」これはナビゲートするのにトリッキーなヒューリスティックです-ある人の本質的な追加は別の人の無意味な残骸です。</target>
        </trans-unit>
        <trans-unit id="ad45c1c8eec7555ccd92edae836e62ba22314f7b" translate="yes" xml:space="preserve">
          <source>, I used something like this:</source>
          <target state="translated">、私はこのようなものを使用しました：</target>
        </trans-unit>
        <trans-unit id="c65991634f6aa7daad894716fa3515f707c0dcd9" translate="yes" xml:space="preserve">
          <source>, January is 0, not 1; Sunday is 0, not 1; January 1st is 0, not 1. The year (&lt;code&gt;year&lt;/code&gt; ) is given in years since 1900,</source>
          <target state="translated">、1月は1ではなく0です。日曜日は1ではなく0です。1月1日は1ではなく0です。年（ &lt;code&gt;year&lt;/code&gt; ）は1900年からの年数で表されます。</target>
        </trans-unit>
        <trans-unit id="278251f0cd32cd452e601bfc7f4ba837feb500cf" translate="yes" xml:space="preserve">
          <source>, January is 0, not 1; Sunday is 0, not 1; January 1st is 0, not 1. The year (&lt;code&gt;year&lt;/code&gt; ) is given in years since 1900;</source>
          <target state="translated">、1月は1ではなく0です。日曜日は1ではなく0です。1月1日は1ではなく0です。年（ &lt;code&gt;year&lt;/code&gt; ）は1900年からの年数で示されます。</target>
        </trans-unit>
        <trans-unit id="afb22a315d26614c38a5484f1c55cdc3c2b33492" translate="yes" xml:space="preserve">
          <source>, January is 0, not 1; Sunday is 0, not 1; January 1st is 0, not 1. The year (&lt;code&gt;year&lt;/code&gt;) is given in years since 1900,</source>
          <target state="translated">、1月は1ではなく0です。日曜日は1ではなく0です。1月1日は1ではなく0です。年（ &lt;code&gt;year&lt;/code&gt; ）は1900年からの年数で示されます。</target>
        </trans-unit>
        <trans-unit id="6d424da4b1335ce7612f2b3dc77b65ea06020e9c" translate="yes" xml:space="preserve">
          <source>, January is 0, not 1; Sunday is 0, not 1; January 1st is 0, not 1. The year (&lt;code&gt;year&lt;/code&gt;) is given in years since 1900;</source>
          <target state="translated">、1月は1ではなく0です。日曜日は1ではなく0です。1月1日は1ではなく0です。年（ &lt;code&gt;year&lt;/code&gt; ）は1900年からの年数で示されます。</target>
        </trans-unit>
        <trans-unit id="dd182ebc9d81517e21729c826fb7210f389d7052" translate="yes" xml:space="preserve">
          <source>, L</source>
          <target state="translated">、L</target>
        </trans-unit>
        <trans-unit id="7fbf5c6d0f24b18219afd1efb585538657616790" translate="yes" xml:space="preserve">
          <source>, L&amp;lt;:spec&amp;gt;, L&amp;lt;:path&amp;gt;</source>
          <target state="translated">、L &amp;lt;：spec&amp;gt;、L &amp;lt;：path&amp;gt;</target>
        </trans-unit>
        <trans-unit id="cff6989687fa00c2222ce15a90a800a548dbd994" translate="yes" xml:space="preserve">
          <source>, Perl uses the same algorithm as</source>
          <target state="translated">、Perlは同じアルゴリズムを使用します</target>
        </trans-unit>
        <trans-unit id="df8f77da47481a5590b158d0835c14c3d411493e" translate="yes" xml:space="preserve">
          <source>, Recipe 13.12).</source>
          <target state="translated">、レシピ13.12）。</target>
        </trans-unit>
        <trans-unit id="6a45be8c0a733008fda1873b6942b65ae06a110b" translate="yes" xml:space="preserve">
          <source>, Tim Kientzle (tkientzle@ddj.com), Dr. Dobb's Journal, Issue 295, January 1999, pp 34-41</source>
          <target state="translated">、Tim Kientzle（tkientzle@ddj.com）、Dr。Dobb's Journal、Issue 295、1999年1月、pp 34-41</target>
        </trans-unit>
        <trans-unit id="2a5671053104bfa65fdb1b845e8f918f200dbaad" translate="yes" xml:space="preserve">
          <source>, Volume 2, Section 3.4.2, by Donald E. Knuth.</source>
          <target state="translated">、ボリューム2、セクション3.4.2、Donald E. Knuth著。</target>
        </trans-unit>
        <trans-unit id="633875e12973ea9004215c69c80143c016eb22c8" translate="yes" xml:space="preserve">
          <source>, a German magazine dedicated to Perl, at ( &lt;a href=&quot;http://www.foo-magazin.de&quot;&gt;http://www.foo-magazin.de&lt;/a&gt; ). The</source>
          <target state="translated">（&lt;a href=&quot;http://www.foo-magazin.de&quot;&gt;http://www.foo-magazin.de&lt;/a&gt;）にある、Perlに関するドイツの雑誌。の</target>
        </trans-unit>
        <trans-unit id="14297948b11112ed3c840f341ffecd330757f94c" translate="yes" xml:space="preserve">
          <source>, a Perl script which uses the &lt;code&gt;MakeMaker&lt;/code&gt; library modules supplied with Perl to generate a</source>
          <target state="translated">、Perlで提供される &lt;code&gt;MakeMaker&lt;/code&gt; ライブラリモジュールを使用して、</target>
        </trans-unit>
        <trans-unit id="855e80b07db61e1b1fac17edd36f618a095e2b73" translate="yes" xml:space="preserve">
          <source>, a collator via &lt;code&gt;Unicode::Collate-&amp;gt;new( )&lt;/code&gt; should be used; for</source>
          <target state="translated">、 &lt;code&gt;Unicode::Collate-&amp;gt;new( )&lt;/code&gt; を介したコレーターを使用する必要があります。ために</target>
        </trans-unit>
        <trans-unit id="337354a63807d72c18305c9618bef7795ca2d6b6" translate="yes" xml:space="preserve">
          <source>, a collator via &lt;code&gt;Unicode::Collate-&amp;gt;new(variable =&amp;gt; &quot;non-ignorable&quot;, level =&amp;gt; 3)&lt;/code&gt; .</source>
          <target state="translated">、 &lt;code&gt;Unicode::Collate-&amp;gt;new(variable =&amp;gt; &quot;non-ignorable&quot;, level =&amp;gt; 3)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7a2bbbfba58b32349454cb8b6cc55924756c4724" translate="yes" xml:space="preserve">
          <source>, a collator via &lt;code&gt;Unicode::Collate-&amp;gt;new(variable =&amp;gt; &quot;non-ignorable&quot;, level =&amp;gt; 3)&lt;/code&gt;.</source>
          <target state="translated">、 &lt;code&gt;Unicode::Collate-&amp;gt;new(variable =&amp;gt; &quot;non-ignorable&quot;, level =&amp;gt; 3)&lt;/code&gt; 介した照合順序。</target>
        </trans-unit>
        <trans-unit id="181354d61db1393a6d43dac9c961eb59f80b38ac" translate="yes" xml:space="preserve">
          <source>, a crude but sufficient utility to check the integrity of a UCM file. Check under the Encode/bin directory for this.</source>
          <target state="translated">、UCMファイルの整合性をチェックするための粗雑ですが十分なユーティリティ。Encode / binディレクトリの下でこれを確認してください。</target>
        </trans-unit>
        <trans-unit id="bb64aa0b1dd472e37df99d4df5d224c083cbbbef" translate="yes" xml:space="preserve">
          <source>, a debug aid which allowed callers to identify themselves. This aid has been superseded by a new build option, &lt;code&gt;PERL_MEM_LOG&lt;/code&gt; (see &lt;a href=&quot;perlhacktips#PERL_MEM_LOG&quot;&gt;&quot;PERL_MEM_LOG&quot; in perlhacktips&lt;/a&gt;). The older API is still there for use in XS modules supporting older perls.</source>
          <target state="translated">、呼び出し元が自分自身を識別できるようにするデバッグ支援。この支援は、新しいビルドオプション &lt;code&gt;PERL_MEM_LOG&lt;/code&gt; に置き換えられました（&lt;a href=&quot;perlhacktips#PERL_MEM_LOG&quot;&gt;perlhacktipsの「PERL_MEM_LOG」を参照&lt;/a&gt;）。古いAPIは、古いperlをサポートするXSモジュールで使用するために引き続き存在します。</target>
        </trans-unit>
        <trans-unit id="cc2464c5d3dd253a99582f8c86235ec797d15976" translate="yes" xml:space="preserve">
          <source>, a debug aid which allowed callers to identify themselves. This aid has been superseded by a new build option, PERL_MEM_LOG (see &lt;a href=&quot;perlhacktips#PERL_MEM_LOG&quot;&gt;&quot;PERL_MEM_LOG&quot; in perlhacktips&lt;/a&gt;). The older API is still there for use in XS modules supporting older perls.</source>
          <target state="translated">、呼び出し元が自分自身を識別できるようにするデバッグ支援。この支援は、新しいビルドオプションPERL_MEM_LOGに置き換えられました（&lt;a href=&quot;perlhacktips#PERL_MEM_LOG&quot;&gt;perlhacktipsの「PERL_MEM_LOG」を参照&lt;/a&gt;）。古いAPIは、古いperlをサポートするXSモジュールで使用するために引き続き存在します。</target>
        </trans-unit>
        <trans-unit id="ee470b6f82053958faf72f7660a0d296d09184d4" translate="yes" xml:space="preserve">
          <source>, a debug aid which allowed callers to identify themselves. This aid has been superseded by a new build option, PERL_MEM_LOG (see &lt;a href=&quot;perlhacktips#PERL_MEM_LOG&quot;&gt;PERL_MEM_LOG in perlhacktips&lt;/a&gt;). The older API is still there for use in XS modules supporting older perls.</source>
          <target state="translated">、呼び出し元が自分自身を識別できるようにするデバッグ支援。この補助機能は、新しいビルドオプションPERL_MEM_LOG（&lt;a href=&quot;perlhacktips#PERL_MEM_LOG&quot;&gt;perlhacktipsのPERL_MEM_LOGを&lt;/a&gt;参照）に置き換えられました。古いAPIは、古いperlをサポートするXSモジュールで使用するためにまだ残っています。</target>
        </trans-unit>
        <trans-unit id="1c0ccb86f1f831d7dbb113204354539bcbbbe342" translate="yes" xml:space="preserve">
          <source>, a file in the YAML Tiny format (for which, see &lt;a href=&quot;YAML::Tiny&quot;&gt;YAML::Tiny&lt;/a&gt;). Tools that consume distribution metadata from disk should be capable of loading</source>
          <target state="translated">、YAML Tiny形式のファイル（詳細については、&lt;a href=&quot;YAML::Tiny&quot;&gt;YAML :: Tinyを&lt;/a&gt;参照してください）。ディスクから配布メタデータを消費するツールは、ロードできる必要があります</target>
        </trans-unit>
        <trans-unit id="6eab92f00d041b0bb78d6d32d7c43effb305a18c" translate="yes" xml:space="preserve">
          <source>, a fixed number of characters long. Thus &lt;code&gt;(?&amp;lt;=(ab|bc))&lt;/code&gt; is fine, but &lt;code&gt;(?&amp;lt;=(ab)*)&lt;/code&gt; prior to 5.30 is not.</source>
          <target state="translated">、固定文字数。したがって、 &lt;code&gt;(?&amp;lt;=(ab|bc))&lt;/code&gt; は問題ありませんが、5.30より前の &lt;code&gt;(?&amp;lt;=(ab)*)&lt;/code&gt; は問題ありません。</target>
        </trans-unit>
        <trans-unit id="be95971fca9604306918e6af9caf54dadcd9baea" translate="yes" xml:space="preserve">
          <source>, a non-UTF-8 one), a multi-byte character was encountered. Perl considers this character to be the specified Unicode code point. Combining non-UTF-8 locales and Unicode is dangerous. Almost certainly some characters will have two different representations. For example, in the ISO 8859-7 (Greek) locale, the code point 0xC3 represents a Capital Gamma. But so also does 0x393. This will make string comparisons unreliable.</source>
          <target state="translated">、UTF-8以外のもの）、マルチバイト文字が検出されました。Perlは、この文字を指定されたUnicodeコードポイントと見なします。UTF-8以外のロケールとUnicodeを組み合わせると危険です。ほとんどの場合、一部の文字には2つの異なる表現があります。たとえば、ISO 8859-7（ギリシャ語）ロケールでは、コードポイント0xC3は大文字のガンマを表します。しかし、0x393もそうです。これにより、文字列の比較が信頼できなくなります。</target>
        </trans-unit>
        <trans-unit id="4a8a9cd0090598c42711026e8b2bedbe13afa859" translate="yes" xml:space="preserve">
          <source>, a scalar variable containing a filehandle. You can use it the same way you would a normal filehandle. For example, you can read one line from it this way:</source>
          <target state="translated">、ファイルハンドルを含むスカラー変数。通常のファイルハンドルと同じように使用できます。たとえば、次のようにして1行を読み取ることができます。</target>
        </trans-unit>
        <trans-unit id="87346f4ea924d98273903e7b08eb5bb50fb07524" translate="yes" xml:space="preserve">
          <source>, a standard for representing the alphabets from virtually all of the world's written languages, and a host of symbols. Perl's text strings are Unicode strings, so they can contain characters with a value (codepoint or character number) higher than 255.</source>
          <target state="translated">、事実上世界中のすべての書き言葉からのアルファベットを表すための標準と、多数の記号。Perlのテキスト文字列はUnicode文字列なので、255より大きい値（コードポイントまたは文字番号）の文字を含めることができます。</target>
        </trans-unit>
        <trans-unit id="a9ff749a1a77a1bd6de5d5980b0e406d37de2a87" translate="yes" xml:space="preserve">
          <source>, a utility to extract named sections from documents written in POD. For instance, while utilities have &quot;USAGE&quot; sections, Perl modules usually have &quot;SYNOPSIS&quot; sections: &lt;code&gt;podselect -s &quot;SYNOPSIS&quot; ...&lt;/code&gt; will extract this section for a given file.</source>
          <target state="translated">、PODで記述されたドキュメントから名前付きセクションを抽出するユーティリティ。たとえば、ユーティリティには「USAGE」セクションがありますが、Perlモジュールには通常「 &lt;code&gt;podselect -s &quot;SYNOPSIS&quot; ...&lt;/code&gt; 」セクションがあります。podselect -s &quot;SYNOPSIS&quot; ...は、指定されたファイルに対してこのセクションを抽出します。</target>
        </trans-unit>
        <trans-unit id="db014a48cc1ae20706ba0b5682336d456105e57c" translate="yes" xml:space="preserve">
          <source>, above, below, to one side or the other,</source>
          <target state="translated">、上、下、片側または反対側、</target>
        </trans-unit>
        <trans-unit id="5bf0fa78a7fe771f1c10ae24e95162b1b6bb2a45" translate="yes" xml:space="preserve">
          <source>, albeit fairly useless ones. All they does is filter the source stream without modifying it at all.</source>
          <target state="translated">、かなり役に立たないものですが。彼らが行うことは、ソースストリームをまったく変更せずにフィルタリングすることだけです。</target>
        </trans-unit>
        <trans-unit id="5362fe8d34331626858b75f7fc5b14ff4d9fc4ab" translate="yes" xml:space="preserve">
          <source>, all IN UPPER CASE. Some control-type code points do not have names. This field will be empty for &lt;code&gt;Surrogate&lt;/code&gt; and &lt;code&gt;Private Use&lt;/code&gt; code points, and for the others without a name, it will contain a description enclosed in angle brackets, like &lt;code&gt;&amp;lt;control&amp;gt;&lt;/code&gt; .</source>
          <target state="translated">、すべて大文字の場合。一部のコントロールタイプのコードポイントには名前がありません。このフィールドは、 &lt;code&gt;Surrogate&lt;/code&gt; および &lt;code&gt;Private Use&lt;/code&gt; コードポイントの場合は空になり、名前のない他の場合は、 &lt;code&gt;&amp;lt;control&amp;gt;&lt;/code&gt; のように山かっこで囲まれた説明が含まれます。</target>
        </trans-unit>
        <trans-unit id="8465d055b30b74c6e7423bbd7027a3bffaac3034" translate="yes" xml:space="preserve">
          <source>, all IN UPPER CASE. Some control-type code points do not have names. This field will be empty for &lt;code&gt;Surrogate&lt;/code&gt; and &lt;code&gt;Private Use&lt;/code&gt; code points, and for the others without a name, it will contain a description enclosed in angle brackets, like &lt;code&gt;&amp;lt;control&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">、すべて大文字。一部のコントロールタイプのコードポイントには名前がありません。このフィールドは、 &lt;code&gt;Surrogate&lt;/code&gt; および &lt;code&gt;Private Use&lt;/code&gt; コードポイントでは空になり、名前のない他のフィールドでは、 &lt;code&gt;&amp;lt;control&amp;gt;&lt;/code&gt; のように山かっこで囲まれた説明が含まれます。</target>
        </trans-unit>
        <trans-unit id="f664646812299a02b0171f588d3e3b25b20c386d" translate="yes" xml:space="preserve">
          <source>, all but the first posthumously assembled by CJRT. But</source>
          <target state="translated">、CJRTによって死後に最初に組み立てられたものを除くすべて。だが</target>
        </trans-unit>
        <trans-unit id="bc5ed6d6260771787075622eea22b930d5fe4a65" translate="yes" xml:space="preserve">
          <source>, along with the header files</source>
          <target state="translated">、ヘッダーファイル</target>
        </trans-unit>
        <trans-unit id="1c56ef602b07cce67c23c54f38c6850a343a4ce2" translate="yes" xml:space="preserve">
          <source>, although you're better off reading the original YACC input in</source>
          <target state="translated">、ただし元のYACC入力を</target>
        </trans-unit>
        <trans-unit id="8278d2adba7612cf98a492d21a4ac4c78acb1202" translate="yes" xml:space="preserve">
          <source>, and</source>
          <target state="translated">、および</target>
        </trans-unit>
        <trans-unit id="2d4ff8a41a5140058b5f07d5a7ff6c62d7dc6779" translate="yes" xml:space="preserve">
          <source>, and &lt;b&gt;pod2usage()&lt;/b&gt; adheres to this philosophy. If you are interested in seeing a number of different ways to invoke &lt;b&gt;pod2usage&lt;/b&gt; (although by no means exhaustive), please refer to &lt;a href=&quot;#EXAMPLES&quot;&gt;&quot;EXAMPLES&quot;&lt;/a&gt;.</source>
          <target state="translated">、および&lt;b&gt;pod2usage（）&lt;/b&gt;はこの哲学に準拠しています。&lt;b&gt;pod2usage&lt;/b&gt;を呼び出すためのさまざまな方法を&lt;b&gt;知り&lt;/b&gt;たい場合は（完全ではありませんが）、&lt;a href=&quot;#EXAMPLES&quot;&gt;「例」&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="0010f4c714dfcbbc2cef143cc9657ab05ffac473" translate="yes" xml:space="preserve">
          <source>, and &lt;b&gt;pod2usage()&lt;/b&gt; adheres to this philosophy. If you are interested in seeing a number of different ways to invoke &lt;b&gt;pod2usage&lt;/b&gt; (although by no means exhaustive), please refer to &lt;a href=&quot;#EXAMPLES&quot;&gt;EXAMPLES&lt;/a&gt;.</source>
          <target state="translated">、および&lt;b&gt;pod2usage（）&lt;/b&gt;はこの哲学に準拠しています。&lt;b&gt;pod2usage&lt;/b&gt;を呼び出すためのさまざまな方法に興味がある場合（ただし、&lt;b&gt;すべて&lt;/b&gt;を網羅しているわけではありません）、&lt;a href=&quot;#EXAMPLES&quot;&gt;例&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="dd9e2024ba8a9984c63410d51fe1a587ce82acdf" translate="yes" xml:space="preserve">
          <source>, and &lt;code&gt;S_mro_get_linear_isa_dfs()&lt;/code&gt; in</source>
          <target state="translated">、および &lt;code&gt;S_mro_get_linear_isa_dfs()&lt;/code&gt; で</target>
        </trans-unit>
        <trans-unit id="7965adffe1bd5d2a5ae6fef9ed74cb1e415855b5" translate="yes" xml:space="preserve">
          <source>, and Perl will then dispatch the program to the correct interpreter for them.</source>
          <target state="translated">そして、Perlはプログラムを適切なインタープリターにディスパッチします。</target>
        </trans-unit>
        <trans-unit id="d17b3bf1e5023500587f0bcfd04e502c3bc08dca" translate="yes" xml:space="preserve">
          <source>, and a type of</source>
          <target state="translated">、およびタイプ</target>
        </trans-unit>
        <trans-unit id="11eff2ad6b0924ed9a9167101ce0e3ec0461d9bb" translate="yes" xml:space="preserve">
          <source>, and all standard-fearing programs ought to follow this convention. (This is, of course, a stern backing for one of the Lilliputian parties and may well influence the political development there.) So, if the protocol expects you to send a message by sending the length first, followed by just so many bytes, you could write:</source>
          <target state="translated">、そしてすべての標準を恐れるプログラムは、この慣習に従うべきです。（もちろん、これはリリプティアン党の厳しい支持であり、そこでの政治的発展に影響を与える可能性があります。）したがって、プロトコルが長さを最初に送信し、その後に非常に多くのバイトを送信することによってメッセージを送信することを期待している場合、あなたは書くことができます：</target>
        </trans-unit>
        <trans-unit id="09f5aea40a8a98f4ed0812b20a5158126d6be5b5" translate="yes" xml:space="preserve">
          <source>, and an SV argument for it is returned in</source>
          <target state="translated">、およびそのSV引数が返されます</target>
        </trans-unit>
        <trans-unit id="907df61a5a10c19d07f5b25bb871f858cdf3aedb" translate="yes" xml:space="preserve">
          <source>, and an SV argument for it is supplied in</source>
          <target state="translated">、およびそのSV引数は</target>
        </trans-unit>
        <trans-unit id="07578e4d2c674557fed4e3b460e007cddc507081" translate="yes" xml:space="preserve">
          <source>, and appends that data to the current state. The return value is the updated object itself.</source>
          <target state="translated">、そのデータを現在の状態に追加します。戻り値は更新されたオブジェクト自体です。</target>
        </trans-unit>
        <trans-unit id="47d93ebc28ad85bac43459b74d7c9dbb3a691abc" translate="yes" xml:space="preserve">
          <source>, and arrange for some changes to be automatically undone at the end of it, either explicit, or via a non-local exit (via die()). A</source>
          <target state="translated">、一部の変更が明示的に、または（die（）を介して）非ローカル出口を介して、最後に自動的に元に戻されるように調整します。あ</target>
        </trans-unit>
        <trans-unit id="9662074e67662b5481a257ab591d1bcd6cd373a7" translate="yes" xml:space="preserve">
          <source>, and choose &lt;code&gt;Link
object modules&lt;/code&gt; in</source>
          <target state="translated">、および選択 &lt;code&gt;Link object modules&lt;/code&gt; 中</target>
        </trans-unit>
        <trans-unit id="110d41533f5d3ce6a781ca76529c953253c32c91" translate="yes" xml:space="preserve">
          <source>, and do not want to hand-edit thousands of your scripts, the long-term solution proposed on p5-p is to have a directive</source>
          <target state="translated">、何千ものスクリプトを手動で編集したくない場合、p5-pで提案されている長期的な解決策はディレクティブを持つことです</target>
        </trans-unit>
        <trans-unit id="cc9709da02255267935725dadd4e4f1b5070af04" translate="yes" xml:space="preserve">
          <source>, and even a blessed hash reference uses &quot;HASH&quot; as its</source>
          <target state="translated">、そして祝福されたハッシュ参照でさえ、「HASH」を</target>
        </trans-unit>
        <trans-unit id="5ef9d3e35d5e919080f798270609eb087c92e72c" translate="yes" xml:space="preserve">
          <source>, and executables go in</source>
          <target state="translated">、実行可能ファイルが入ります</target>
        </trans-unit>
        <trans-unit id="6d9c13d9981e85ee193ee4cdff8cf22c12e96f94" translate="yes" xml:space="preserve">
          <source>, and for a detailed look at the semantics of regular expressions. In particular, all modifiers except the largely obsolete &lt;code&gt;/o&lt;/code&gt; are further explained in &lt;a href=&quot;perlre#Modifiers&quot;&gt;&quot;Modifiers&quot; in perlre&lt;/a&gt;. &lt;code&gt;/o&lt;/code&gt; is described in the next section.</source>
          <target state="translated">、および正規表現のセマンティクスの詳細については。特に、ほとんど廃止された &lt;code&gt;/o&lt;/code&gt; を除くすべての修飾子については&lt;a href=&quot;perlre#Modifiers&quot;&gt;、perlreの「修飾子」で&lt;/a&gt;詳しく説明されています。 &lt;code&gt;/o&lt;/code&gt; については、次のセクションで説明します。</target>
        </trans-unit>
        <trans-unit id="e99a7bbd8a62347c5bce742eeae839d4eb74e152" translate="yes" xml:space="preserve">
          <source>, and for a detailed look at the semantics of regular expressions. In particular, all modifiers except the largely obsolete &lt;code&gt;/o&lt;/code&gt; are further explained in &lt;a href=&quot;perlre#Modifiers&quot;&gt;Modifiers in perlre&lt;/a&gt;. &lt;code&gt;/o&lt;/code&gt; is described in the next section.</source>
          <target state="translated">、および正規表現のセマンティクスの詳細については、特に、ほとんど廃止された &lt;code&gt;/o&lt;/code&gt; を除くすべての&lt;a href=&quot;perlre#Modifiers&quot;&gt;修飾子は、perlreの修飾子で&lt;/a&gt;さらに説明されています。 &lt;code&gt;/o&lt;/code&gt; については、次のセクションで説明します。</target>
        </trans-unit>
        <trans-unit id="fea8f1839cc7e75e58025f40c960d342144ecc35" translate="yes" xml:space="preserve">
          <source>, and have Perl create &lt;code&gt;#define&lt;/code&gt; 's for you, based on the current platform.</source>
          <target state="translated">、および現在のプラットフォームに基づいて、Perlに &lt;code&gt;#define&lt;/code&gt; を作成させます。</target>
        </trans-unit>
        <trans-unit id="f813ba9205cc9645f513c4750afaaff03e0fb7d6" translate="yes" xml:space="preserve">
          <source>, and have Perl create &lt;code&gt;#define&lt;/code&gt;'s for you, based on the current platform.</source>
          <target state="translated">、および現在のプラットフォームに基づいて、Perlに &lt;code&gt;#define&lt;/code&gt; を作成させます。</target>
        </trans-unit>
        <trans-unit id="296963cd9bc200f3f9713e504f93b8fd98a91950" translate="yes" xml:space="preserve">
          <source>, and have a &lt;code&gt;Perl_ck_&lt;/code&gt; prefix. You can find out which check function is used for a particular op type by looking in</source>
          <target state="translated">、および &lt;code&gt;Perl_ck_&lt;/code&gt; プレフィックスがあります。特定のopタイプに使用されているチェック機能は、以下を調べることで確認できます。</target>
        </trans-unit>
        <trans-unit id="13ff4447ae7e1c8dc95b022d007823261ea731b0" translate="yes" xml:space="preserve">
          <source>, and how many gettext items that'd take, but he keeps going... But where $directory_count % 10 is 2, 3, or 4 (except where $directory_count % 100 is 12, 13, or 14), the word for &quot;directories&quot; is forced to be genitive singular -- which means another ending... The room begins to spin around you, slowly at first... But with</source>
          <target state="translated">、および取得するgettextアイテムの数、しかし彼は続けます...しかし、$ directory_count％10が2、3、または4である場合（$ directory_count％100が12、13、または14である場合を除く）、 「ディレクトリ」は属格の単数である必要があります-これは別の終わりを意味します...部屋は最初はゆっくりとあなたの周りを回転し始めます...しかし</target>
        </trans-unit>
        <trans-unit id="900068e92f1192efacbc29ee3e1d53428f88cdd9" translate="yes" xml:space="preserve">
          <source>, and is initialized whenever Perl is invoked. In the &lt;b&gt;dynamic&lt;/b&gt; configuration, the extension's machine code is placed into a separate shareable image, which is mapped by Perl's DynaLoader when the extension is &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt;d or &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt;d in your script. This allows you to maintain the extension as a separate entity, at the cost of keeping track of the additional shareable image. Most extensions can be set up as either static or dynamic.</source>
          <target state="translated">、およびPerlが呼び出されるたびに初期化されます。&lt;b&gt;動的に&lt;/b&gt;構成、拡張のマシンコードが拡張であるPerlのDynaLoaderやによってマッピングされた別個の共有イメージ、中に配置され &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; Dまたは &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; スクリプト中、D。これにより、追加の共有可能なイメージを追跡することを犠牲にして、拡張機能を別のエンティティとして維持できます。ほとんどの拡張機能は、静的または動的に設定できます。</target>
        </trans-unit>
        <trans-unit id="6a765a8ec93ccf021b9f7d34d5f9b4da144bc9fb" translate="yes" xml:space="preserve">
          <source>, and is initialized whenever Perl is invoked. In the &lt;b&gt;dynamic&lt;/b&gt; configuration, the extension's machine code is placed into a separate shareable image, which is mapped by Perl's DynaLoader when the extension is &lt;code&gt;use&lt;/code&gt;d or &lt;code&gt;require&lt;/code&gt;d in your script. This allows you to maintain the extension as a separate entity, at the cost of keeping track of the additional shareable image. Most extensions can be set up as either static or dynamic.</source>
          <target state="translated">、Perlが呼び出されるたびに初期化されます。&lt;b&gt;動的に&lt;/b&gt;構成、拡張のマシンコードが拡張であるPerlのDynaLoaderやによってマッピングされた別個の共有イメージ、中に配置され &lt;code&gt;use&lt;/code&gt; Dまたは &lt;code&gt;require&lt;/code&gt; スクリプト中、D。これにより、追加の共有可能なイメージを追跡することを犠牲にして、拡張機能を別個のエンティティとして維持できます。ほとんどの拡張機能は、静的または動的として設定できます。</target>
        </trans-unit>
        <trans-unit id="b914301e3b694e04eb4c8f6d66927ba02c63ec35" translate="yes" xml:space="preserve">
          <source>, and is mainly used if</source>
          <target state="translated">、主に次の場合に使用されます</target>
        </trans-unit>
        <trans-unit id="5131123bb887b411a05999cb591c474e9daf98b5" translate="yes" xml:space="preserve">
          <source>, and is noted with a horizontal bar above the number, or &lt;code&gt;~z&lt;/code&gt; here.</source>
          <target state="translated">、および数値の上に水平バー、または &lt;code&gt;~z&lt;/code&gt; で示されます。</target>
        </trans-unit>
        <trans-unit id="f3befe3ecdb52c3422eb6f93dd78d5aaedf3fabd" translate="yes" xml:space="preserve">
          <source>, and loaded by SWASHNEW, using</source>
          <target state="translated">、およびSWASHNEWによってロードされ、使用</target>
        </trans-unit>
        <trans-unit id="1787c9612788394f8950dccec477064ff47cc618" translate="yes" xml:space="preserve">
          <source>, and located either in the wired-in-during-compile locations (usually</source>
          <target state="translated">、およびコンパイル中のワイヤードイン場所（通常は、</target>
        </trans-unit>
        <trans-unit id="7f31e573a88ff53c20f2ccc0bbc44090c52c6791" translate="yes" xml:space="preserve">
          <source>, and looking at the file</source>
          <target state="translated">、およびファイルを見る</target>
        </trans-unit>
        <trans-unit id="3f5db2f6d9247a04a8fdbc30fe1efcc305bcdcc0" translate="yes" xml:space="preserve">
          <source>, and many ops have their own optimizing functions.</source>
          <target state="translated">、そして多くのオペレーションには独自の最適化機能があります。</target>
        </trans-unit>
        <trans-unit id="5edcae719ec7875f046ff91c0210af5ff89c2790" translate="yes" xml:space="preserve">
          <source>, and on Windows it would result in</source>
          <target state="translated">、そしてWindowsではそれは</target>
        </trans-unit>
        <trans-unit id="744cb0990a11cbc554e464fe23863d4a00b4136e" translate="yes" xml:space="preserve">
          <source>, and returns one reference to the new &lt;code&gt;refcounted_he&lt;/code&gt; .</source>
          <target state="translated">、新しい &lt;code&gt;refcounted_he&lt;/code&gt; への参照を1つ返します。</target>
        </trans-unit>
        <trans-unit id="0f2f2fac6d25d7ba621ec4876ee490192080dccc" translate="yes" xml:space="preserve">
          <source>, and returns the modified hash. The returned hash pointer is in general not the same as the hash pointer that was passed in. The input hash is consumed by the function, and the pointer to it must not be subsequently used. Use &lt;a href=&quot;#cophh_copy&quot;&gt;cophh_copy&lt;/a&gt; if you need both hashes.</source>
          <target state="translated">、変更されたハッシュを返します。返されるハッシュポインターは、一般に、渡されたハッシュポインターと同じではありません。入力ハッシュは関数によって消費され、その後、そのポインターを使用することはできません。両方のハッシュが必要な場合は、&lt;a href=&quot;#cophh_copy&quot;&gt;cophh_copyを&lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="def96a3fb64ab61d8b47c5c7c69ce7251de754fe" translate="yes" xml:space="preserve">
          <source>, and run</source>
          <target state="translated">、実行</target>
        </trans-unit>
        <trans-unit id="910d0b04d2f7ed13b6c81acf52dcf3b2185353b5" translate="yes" xml:space="preserve">
          <source>, and so we make a copy of</source>
          <target state="translated">、そして私たちはのコピーを作成します</target>
        </trans-unit>
        <trans-unit id="52cab3ae12ab735a21d73b832e20e1fc668ffa87" translate="yes" xml:space="preserve">
          <source>, and splits it up into chunks separated by lines of equal signs, which are placed in &lt;code&gt;@Fields&lt;/code&gt; .</source>
          <target state="translated">、それを等号の行で区切られたチャンクに分割し、 &lt;code&gt;@Fields&lt;/code&gt; 配置します。</target>
        </trans-unit>
        <trans-unit id="d24caa5ab98ab63cc81699c1451d226660e09521" translate="yes" xml:space="preserve">
          <source>, and splits it up into chunks separated by lines of equal signs, which are placed in &lt;code&gt;@Fields&lt;/code&gt;.</source>
          <target state="translated">、および等号の行で区切られたチャンクに分割し、 &lt;code&gt;@Fields&lt;/code&gt; 配置します。</target>
        </trans-unit>
        <trans-unit id="34ecfa8acd326d9d67e3ffa2f086f02a68db8dfb" translate="yes" xml:space="preserve">
          <source>, and start it by typing</source>
          <target state="translated">と入力して開始します</target>
        </trans-unit>
        <trans-unit id="affc1115f6c03c2dc749890055b60424d0b55360" translate="yes" xml:space="preserve">
          <source>, and that &lt;a href=&quot;perlfunc#readdir-DIRHANDLE&quot;&gt;&lt;code&gt;readdir&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;perlfunc#glob-EXPR&quot;&gt;&lt;code&gt;glob&lt;/code&gt;&lt;/a&gt; cannot and do not attempt to emulate the reverse mapping. Other &lt;code&gt;.&lt;/code&gt;'s in filenames are translated to &lt;code&gt;/&lt;/code&gt;.</source>
          <target state="translated">、およびその&lt;a href=&quot;perlfunc#readdir-DIRHANDLE&quot;&gt; &lt;code&gt;readdir&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;perlfunc#glob-EXPR&quot;&gt; &lt;code&gt;glob&lt;/code&gt; &lt;/a&gt;は、逆マッピングをエミュレートできず、エミュレートしようとしません。その他 &lt;code&gt;.&lt;/code&gt; ファイル名のは &lt;code&gt;/&lt;/code&gt; に翻訳されます。</target>
        </trans-unit>
        <trans-unit id="2df22aba65ded74733f8217023fc9a2c713a5813" translate="yes" xml:space="preserve">
          <source>, and that &lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/glob&quot;&gt;glob&lt;/a&gt;&lt;/code&gt; cannot and do not attempt to emulate the reverse mapping. Other &lt;code&gt;.&lt;/code&gt;'s in filenames are translated to &lt;code&gt;/&lt;/code&gt;.</source>
          <target state="translated">、およびその &lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;functions/glob&quot;&gt;glob&lt;/a&gt;&lt;/code&gt; は、逆マッピングをエミュレートすることはできません。その他 &lt;code&gt;.&lt;/code&gt; ファイル名のは &lt;code&gt;/&lt;/code&gt; に変換されます。</target>
        </trans-unit>
        <trans-unit id="b3d815d4e6d0e0bf7a5070acb067a435d89afd9c" translate="yes" xml:space="preserve">
          <source>, and the</source>
          <target state="translated">、 そしてその</target>
        </trans-unit>
        <trans-unit id="c629432bfcaf1e18a5d7be324021795ca597926d" translate="yes" xml:space="preserve">
          <source>, and the &lt;code&gt;&quot;=~&quot;&lt;/code&gt; operator along with the &lt;code&gt;m//&lt;/code&gt; tell Perl to try to match the pattern against the string. Note that the pattern is also a string, but a very special kind of one, as we will see. Patterns are in common use these days; examples are the patterns typed into a search engine to find web pages and the patterns used to list files in a directory,</source>
          <target state="translated">、および &lt;code&gt;&quot;=~&quot;&lt;/code&gt; 演算子と &lt;code&gt;m//&lt;/code&gt; は、パターンを文字列と照合するようにPerlに指示します。パターンも文字列ですが、後で説明するように、非常に特殊な種類であることに注意してください。最近ではパターンが一般的に使用されています。例としては、Webページを検索するために検索エンジンに入力されたパターンや、ディレクトリ内のファイルを一覧表示するために使用されるパターンがあります。</target>
        </trans-unit>
        <trans-unit id="b3a5f939ce328cd3a253a4971e69a804f33e67d5" translate="yes" xml:space="preserve">
          <source>, and the Gulf of Guinea (think of the missing big chunk of Africa)</source>
          <target state="translated">、そしてギニア湾（失われたアフリカの大きな塊を考えてください）</target>
        </trans-unit>
        <trans-unit id="49678bf28719f40cbc47bf372671fcd223bd7354" translate="yes" xml:space="preserve">
          <source>, and the error message will include the line and file where the failed request happened.</source>
          <target state="translated">、エラーメッセージには、失敗したリクエストが発生した行とファイルが含まれます。</target>
        </trans-unit>
        <trans-unit id="c64023a04906dd729256ff3e0c07dcfe556d4b78" translate="yes" xml:space="preserve">
          <source>, and the rest of the things in the lexicon class as things that we know how to</source>
          <target state="translated">、レキシコンクラスの残りの部分は、</target>
        </trans-unit>
        <trans-unit id="6c2c13f1fd18de7a45c45c3b6d611d0fa6d993db" translate="yes" xml:space="preserve">
          <source>, and the second being the</source>
          <target state="translated">、2番目は</target>
        </trans-unit>
        <trans-unit id="10948b5578036f5ad32a0ed831bfc6d104fae454" translate="yes" xml:space="preserve">
          <source>, and the semaphore's count remains unchanged. Otherwise, the semaphore's count is decremented and this method returns</source>
          <target state="translated">、セマフォの数は変更されません。それ以外の場合、セマフォの数は減少し、このメソッドは</target>
        </trans-unit>
        <trans-unit id="73b36d5071f4b2d6973b107a88cccdf62d2e436d" translate="yes" xml:space="preserve">
          <source>, and the true value in the fourth argument means</source>
          <target state="translated">、および4番目の引数の真の値は、</target>
        </trans-unit>
        <trans-unit id="759ee7d0b93dff6747c3fbd234956c01b3c8260a" translate="yes" xml:space="preserve">
          <source>, and then the CRTL &lt;code&gt;environ&lt;/code&gt; array. This default order is reversed when the logical name</source>
          <target state="translated">、次にCRTL &lt;code&gt;environ&lt;/code&gt; 配列。このデフォルトの順序は、論理名が</target>
        </trans-unit>
        <trans-unit id="4c771b3606fdd622281d6b0976acb1e8b29c8ab9" translate="yes" xml:space="preserve">
          <source>, and they will therefore all hold whatever was last in @array! It's similar to the problem demonstrated in the following C program:</source>
          <target state="translated">、したがって、それらはすべて@arrayの最後にあったものをすべて保持します！これは、次のCプログラムで示されている問題に似ています。</target>
        </trans-unit>
        <trans-unit id="35fc6eddaca9b3360e3738457e9a8b19ab25f937" translate="yes" xml:space="preserve">
          <source>, and using references is the key to managing complicated, structured data in Perl. Unfortunately, there's a lot of funny syntax to learn, and the main manual page can be hard to follow. The manual is quite complete, and sometimes people find that a problem, because it can be hard to tell what is important and what isn't.</source>
          <target state="translated">、および参照の使用は、Perlで複雑で構造化されたデータを管理するための鍵です。残念ながら、学ぶべき面白い構文がたくさんあり、メインのマニュアルページを理解するのは難しいかもしれません。マニュアルは非常に完全であり、何が重要で何が重要でないかを判断するのが難しい場合があるため、問題を見つけることがあります。</target>
        </trans-unit>
        <trans-unit id="ea985a0949a3673c272b8e0d49f54e041583c6c4" translate="yes" xml:space="preserve">
          <source>, and will be examined later.</source>
          <target state="translated">、後で調べます。</target>
        </trans-unit>
        <trans-unit id="c060f0c42881559e0dd3ac792535e84bb4d41c37" translate="yes" xml:space="preserve">
          <source>, and will free it.</source>
          <target state="translated">、それを解放します。</target>
        </trans-unit>
        <trans-unit id="88f40c683f759884090876f282199945cd762ea4" translate="yes" xml:space="preserve">
          <source>, and with dynamic CRT DLL. This executable is a VIO application.</source>
          <target state="translated">、動的CRT DLLを使用します。この実行可能ファイルはVIOアプリケーションです。</target>
        </trans-unit>
        <trans-unit id="f5ffc67dd22fb19007fd6dce315aac48234ca530" translate="yes" xml:space="preserve">
          <source>, and writes change the value. In both cases the position in</source>
          <target state="translated">、書き込みは値を変更します。どちらの場合も、</target>
        </trans-unit>
        <trans-unit id="4aa138eb7154eb226a5d7af0b04c19ffd9e3302e" translate="yes" xml:space="preserve">
          <source>, and you want the perl module be named as &lt;code&gt;Ext::Ension&lt;/code&gt; . If you need some preprocessor directives and/or linking with external libraries, see the flags &lt;code&gt;-F&lt;/code&gt; , &lt;code&gt;-L&lt;/code&gt; and &lt;code&gt;-l&lt;/code&gt; in &lt;a href=&quot;#OPTIONS&quot;&gt;OPTIONS&lt;/a&gt;.</source>
          <target state="translated">、そしてperlモジュールに &lt;code&gt;Ext::Ension&lt;/code&gt; という名前を付けたいとします。プリプロセッサディレクティブや外部ライブラリとのリンクが必要な場合は、&lt;a href=&quot;#OPTIONS&quot;&gt;OPTIONSの&lt;/a&gt;フラグ &lt;code&gt;-F&lt;/code&gt; 、 &lt;code&gt;-L&lt;/code&gt; 、および &lt;code&gt;-l&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="46f3dd98c315e3415f179fb63083dca1dd67234a" translate="yes" xml:space="preserve">
          <source>, and you want the perl module be named as &lt;code&gt;Ext::Ension&lt;/code&gt;. If you need some preprocessor directives and/or linking with external libraries, see the flags &lt;code&gt;-F&lt;/code&gt;, &lt;code&gt;-L&lt;/code&gt; and &lt;code&gt;-l&lt;/code&gt; in &lt;a href=&quot;#OPTIONS&quot;&gt;&quot;OPTIONS&quot;&lt;/a&gt;.</source>
          <target state="translated">、およびperlモジュールに &lt;code&gt;Ext::Ension&lt;/code&gt; という名前を付ける必要があります。プリプロセッサディレクティブや外部ライブラリとのリンクが必要な場合は、&lt;a href=&quot;#OPTIONS&quot;&gt;「オプション」&lt;/a&gt;のフラグ &lt;code&gt;-F&lt;/code&gt; 、 &lt;code&gt;-L&lt;/code&gt; 、および &lt;code&gt;-l&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="f3432a5b49b7c2d6b8db782af36b21ccbf7c42da" translate="yes" xml:space="preserve">
          <source>, and you want to install the library in</source>
          <target state="translated">、ライブラリをにインストールしたい</target>
        </trans-unit>
        <trans-unit id="bfd8b43815ed413fbc5e63c75755527d7e1515b9" translate="yes" xml:space="preserve">
          <source>, any number of times</source>
          <target state="translated">、何度でも</target>
        </trans-unit>
        <trans-unit id="b51541dfdf2e1d289578b51a3a7d8f2c29834d37" translate="yes" xml:space="preserve">
          <source>, any number of times, but as few times as possible</source>
          <target state="translated">、何度でも、ただし可能な限り少ない回数</target>
        </trans-unit>
        <trans-unit id="548642e975a7aad08e0815d9a988055ad22fd668" translate="yes" xml:space="preserve">
          <source>, api_revision is the &lt;code&gt;5&lt;/code&gt; . Prior to 5.5.640, the format was a floating point number, like 5.00563.</source>
          <target state="translated">、api_revisionは &lt;code&gt;5&lt;/code&gt; です。5.5.640より前は、形式は5.00563のような浮動小数点数でした。</target>
        </trans-unit>
        <trans-unit id="b591aff32ebed20b5f6017f4c43a986e5c9b6d83" translate="yes" xml:space="preserve">
          <source>, api_revision is the &lt;code&gt;5&lt;/code&gt;. Prior to 5.5.640, the format was a floating point number, like 5.00563.</source>
          <target state="translated">、api_revisionは &lt;code&gt;5&lt;/code&gt; です。5.5.640より前の形式は、5.00563のような浮動小数点数でした。</target>
        </trans-unit>
        <trans-unit id="188a87e7240228ac91dcd0c1a6be3953445dc39d" translate="yes" xml:space="preserve">
          <source>, api_subversion is the &lt;code&gt;1&lt;/code&gt; . See api_revision for full details.</source>
          <target state="translated">、api_subversionは &lt;code&gt;1&lt;/code&gt; です。詳細については、api_revisionを参照してください。</target>
        </trans-unit>
        <trans-unit id="476bb8ee4de99c6e30b031f6ec683d564a9accd6" translate="yes" xml:space="preserve">
          <source>, api_subversion is the &lt;code&gt;1&lt;/code&gt;. See api_revision for full details.</source>
          <target state="translated">、api_subversionは &lt;code&gt;1&lt;/code&gt; です。詳細については、api_revisionを参照してください。</target>
        </trans-unit>
        <trans-unit id="a73dc0145a278edd9b0c16fb3b9861e0ad5e4534" translate="yes" xml:space="preserve">
          <source>, api_version is the &lt;code&gt;6&lt;/code&gt; . See api_revision for full details. As a special case, 5.5.0 is rendered in the old-style as 5.005. (In the 5.005_0x maintenance series, this was the only versioned directory in $sitelib.)</source>
          <target state="translated">、api_versionは &lt;code&gt;6&lt;/code&gt; です。詳細については、api_revisionを参照してください。特別なケースとして、5.5.0は古いスタイルで5.005としてレンダリングされます。（5.005_0xメンテナンスシリーズでは、これは$ sitelib内の唯一のバージョン管理されたディレクトリでした。）</target>
        </trans-unit>
        <trans-unit id="cc17c10a5bc0146ee1fed71d1a8e153c465a9594" translate="yes" xml:space="preserve">
          <source>, api_version is the &lt;code&gt;6&lt;/code&gt;. See api_revision for full details. As a special case, 5.5.0 is rendered in the old-style as 5.005. (In the 5.005_0x maintenance series, this was the only versioned directory in $sitelib.)</source>
          <target state="translated">、api_versionは &lt;code&gt;6&lt;/code&gt; です。詳細については、api_revisionを参照してください。特別な場合として、5.5.0は古いスタイルで5.005としてレンダリングされます。（5.005_0xメンテナンスシリーズでは、これは$ sitelib内の唯一のバージョン管理されたディレクトリでした。）</target>
        </trans-unit>
        <trans-unit id="2889576d565f5867fe9cc4e57258064d9a7e464a" translate="yes" xml:space="preserve">
          <source>, are generally reserved for use in regexp notation. The metacharacters are</source>
          <target state="translated">、は通常、正規表現表記で使用するために予約されています。メタ文字は</target>
        </trans-unit>
        <trans-unit id="7a97d37b678b945a449c7d36a99037c11f17aab4" translate="yes" xml:space="preserve">
          <source>, are generated when</source>
          <target state="translated">、ときに生成されます</target>
        </trans-unit>
        <trans-unit id="1677c7c3fc729a817e4acfa05dba2ce6dccfb2e7" translate="yes" xml:space="preserve">
          <source>, are reserved for use in regexp notation. The metacharacters are</source>
          <target state="translated">、正規表現で使用するために予約されています。メタキャラクターは</target>
        </trans-unit>
        <trans-unit id="5cb6624450c0504e407388bb9dd4d65ed8a21177" translate="yes" xml:space="preserve">
          <source>, are three-dimensional coordinates which define a point in three-dimensional space. They are based on a cylinder surface. The radius of the cylinder is &lt;b&gt;rho&lt;/b&gt;, also known as the</source>
          <target state="translated">、は3次元空間の点を定義する3次元座標です。それらは円柱面に基づいています。円柱の半径は&lt;b&gt;rho&lt;/b&gt;であり、別名</target>
        </trans-unit>
        <trans-unit id="08ae511c03da62c55bc28f08c497a5cd99f011a3" translate="yes" xml:space="preserve">
          <source>, are three-dimensional coordinates which define a point in three-dimensional space. They are based on a sphere surface. The radius of the sphere is &lt;b&gt;rho&lt;/b&gt;, also known as the</source>
          <target state="translated">、は3次元空間の点を定義する3次元座標です。それらは球の表面に基づいています。球の半径は&lt;b&gt;rho&lt;/b&gt;であり、別名</target>
        </trans-unit>
        <trans-unit id="f21c678c3b392bc1e40f88b091f81477c570711c" translate="yes" xml:space="preserve">
          <source>, as at &lt;a href=&quot;http://sunsite.dk/RFC/rfc/rfc3066.html&quot;&gt;http://sunsite.dk/RFC/rfc/rfc3066.html&lt;/a&gt;</source>
          <target state="translated">、&lt;a href=&quot;http://sunsite.dk/RFC/rfc/rfc3066.html&quot;&gt;http：//sunsite.dk/RFC/rfc/rfc3066.html&lt;/a&gt;と同様</target>
        </trans-unit>
        <trans-unit id="66ae827ead4750ffe3370a29e9f62b3a997007cd" translate="yes" xml:space="preserve">
          <source>, as described in the next paragraph. Or, if &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; charnames&lt;/code&gt; is used with script name arguments, then for &lt;code&gt;\N{&lt;i&gt;CHARNAME&lt;/i&gt;}&lt;/code&gt; the name</source>
          <target state="translated">、次の段落で説明します。または、スクリプト名引数で &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; charnames&lt;/code&gt; を使用する場合、 &lt;code&gt;\N{&lt;i&gt;CHARNAME&lt;/i&gt;}&lt;/code&gt; は名前</target>
        </trans-unit>
        <trans-unit id="95e45217604baf8e939999d06ec7d1d5389a8867" translate="yes" xml:space="preserve">
          <source>, as described in the next paragraph. Or, if &lt;code&gt;use charnames&lt;/code&gt; is used with script name arguments, then for &lt;code&gt;\N{&lt;i&gt;CHARNAME&lt;/i&gt;}&lt;/code&gt; the name</source>
          <target state="translated">、次の段落で説明するように。または、 &lt;code&gt;use charnames&lt;/code&gt; がスクリプト名引数とともに使用されている場合、 &lt;code&gt;\N{&lt;i&gt;CHARNAME&lt;/i&gt;}&lt;/code&gt; の名前</target>
        </trans-unit>
        <trans-unit id="8a69d8284e4806cb3167c85fd84978d404a739e1" translate="yes" xml:space="preserve">
          <source>, as if the chain of unbroken output somehow ensures the survival of the program. If speed is in any way an issue, this approach is wrong.</source>
          <target state="translated">あたかも途切れのない出力のチェーンがプログラムの存続を保証するかのように。速度に何らかの問題がある場合、このアプローチは間違っています。</target>
        </trans-unit>
        <trans-unit id="2447a9b3daed4b590f24d0dda264bc7a27cfb571" translate="yes" xml:space="preserve">
          <source>, as in &lt;code&gt;nstore&lt;/code&gt; and &lt;code&gt;nstore_fd&lt;/code&gt; . At retrieval time, your data will be correctly restored so you don't have to know whether you're restoring from native or network ordered data. Double values are stored stringified to ensure portability as well, at the slight risk of loosing some precision in the last decimals.</source>
          <target state="translated">、 &lt;code&gt;nstore&lt;/code&gt; およびnstore_fdと &lt;code&gt;nstore_fd&lt;/code&gt; 。取得時にデータが正しく復元されるため、復元するのがネイティブデータかネットワーク注文データかを知る必要はありません。double値は、移植性を確保するために文字列化されて格納されますが、最後の10進数の精度が多少失われる可能性があります。</target>
        </trans-unit>
        <trans-unit id="940a2416c9cd3231a765cc84f2408062aefe1c7b" translate="yes" xml:space="preserve">
          <source>, as in &lt;code&gt;nstore&lt;/code&gt; and &lt;code&gt;nstore_fd&lt;/code&gt;. At retrieval time, your data will be correctly restored so you don't have to know whether you're restoring from native or network ordered data. Double values are stored stringified to ensure portability as well, at the slight risk of loosing some precision in the last decimals.</source>
          <target state="translated">、 &lt;code&gt;nstore&lt;/code&gt; および &lt;code&gt;nstore_fd&lt;/code&gt; のように。取得時にデータが正しく復元されるため、ネイティブデータとネットワーク順序データのどちらから復元するかを知る必要はありません。double値は、移植性を確保するために文字列化されて保存されますが、最後の小数の精度が失われるリスクがわずかにあります。</target>
        </trans-unit>
        <trans-unit id="44e9ce8f895c605d8b566ef8add0326c89ba8c44" translate="yes" xml:space="preserve">
          <source>, as many platforms have case-insensitive (or at least case-forgiving) filenames. Also, try not to have non-word characters (except for &lt;code&gt;.&lt;/code&gt;) in the names, and keep them to the 8.3 convention, for maximum portability, onerous a burden though this may appear.</source>
          <target state="translated">、多くのプラットフォームは大文字と小文字を区別しない（または少なくとも大文字と小文字を区別する）ファイル名を持っています。また、名前に単語以外の文字（ &lt;code&gt;.&lt;/code&gt; を除く）を含めないようにして、それらを8.3規則に保つようにしてください。最大の移植性のために、これは表示される可能性がありますが、負担になります。</target>
        </trans-unit>
        <trans-unit id="86c4b8b976d7fe73a2f1d8c81c5d4231eab338d9" translate="yes" xml:space="preserve">
          <source>, as the other binaries are found relative to the perl binary.</source>
          <target state="translated">、他のバイナリはperlバイナリに関連して検出されるため。</target>
        </trans-unit>
        <trans-unit id="66215e5d0d7fcdf3b23116101a903820fe1c82b9" translate="yes" xml:space="preserve">
          <source>, as we set the PL_exit_flag PERL_EXIT_DESTRUCT_END which executes END blocks in perl_destruct.</source>
          <target state="translated">、PLL_exit_flag PERL_EXIT_DESTRUCT_ENDを設定して、perl_destructでENDブロックを実行します。</target>
        </trans-unit>
        <trans-unit id="1bf2ca6b0b5f214e584c8a25f06016391d5664fd" translate="yes" xml:space="preserve">
          <source>, as well as all tests in all subdirectories that reside under</source>
          <target state="translated">、および下にあるすべてのサブディレクトリのすべてのテスト</target>
        </trans-unit>
        <trans-unit id="f844aaaf402bacab2d52c88c71153b6f22ec5daa" translate="yes" xml:space="preserve">
          <source>, as well as make Perl the best language to use under OS/2. The secondary target is to try to make this work under DOS and Win* as well (but not &lt;b&gt;too&lt;/b&gt; hard).</source>
          <target state="translated">また、PerlをOS / 2で使用するのに最適な言語にします。2番目のターゲットは、DOSとWin *でもこれを機能させることです（ただし、難しくありませ&lt;b&gt;ん&lt;/b&gt;）。</target>
        </trans-unit>
        <trans-unit id="a3f536d0bd6e04654853520df988137e9eb59a9d" translate="yes" xml:space="preserve">
          <source>, as you'll need to understand the &lt;a href=&quot;TAP::Parser&quot;&gt;TAP::Parser&lt;/a&gt; API. A good place to start is by understanding how &lt;a href=&quot;#aggregate_tests&quot;&gt;&quot;aggregate_tests&quot;&lt;/a&gt; works.</source>
          <target state="translated">、&lt;a href=&quot;TAP::Parser&quot;&gt;TAP :: ParserAPI&lt;/a&gt;を理解する必要があるため。まず、&lt;a href=&quot;#aggregate_tests&quot;&gt;「aggregate_tests」が&lt;/a&gt;どのように機能するかを理解することから始めてください。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
