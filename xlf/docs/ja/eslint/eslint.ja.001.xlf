<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="eslint">
    <body>
      <group id="eslint">
        <trans-unit id="c1f89d6eefea94db7096534c75c53ddf0bd68141" translate="yes" xml:space="preserve">
          <source>&quot;&lt;a href=&quot;../user-guide/formatters#checkstyle&quot;&gt;checkstyle&lt;/a&gt;&quot;</source>
          <target state="translated">&quot;&lt;a href=&quot;../user-guide/formatters#checkstyle&quot;&gt;checkstyle&lt;/a&gt;&quot;</target>
        </trans-unit>
        <trans-unit id="4078fe51b175c7f5a46a21f57d16a39bd44a512a" translate="yes" xml:space="preserve">
          <source>&quot;&lt;a href=&quot;../user-guide/formatters#codeframe&quot;&gt;codeframe&lt;/a&gt;&quot;</source>
          <target state="translated">&quot;&lt;a href=&quot;../user-guide/formatters#codeframe&quot;&gt;codeframe&lt;/a&gt;&quot;</target>
        </trans-unit>
        <trans-unit id="36c3295b9d15e4f9413028f7a5cf6d79b8d29143" translate="yes" xml:space="preserve">
          <source>&quot;&lt;a href=&quot;../user-guide/formatters#compact&quot;&gt;compact&lt;/a&gt;&quot;</source>
          <target state="translated">&quot;&lt;a href=&quot;../user-guide/formatters#compact&quot;&gt;compact&lt;/a&gt;&quot;</target>
        </trans-unit>
        <trans-unit id="d10120cc9e85ee5e2091700b6f8cbd7b56b0a17d" translate="yes" xml:space="preserve">
          <source>&quot;&lt;a href=&quot;../user-guide/formatters#html&quot;&gt;html&lt;/a&gt;&quot;</source>
          <target state="translated">&quot;&lt;a href=&quot;../user-guide/formatters#html&quot;&gt;html&lt;/a&gt;&quot;</target>
        </trans-unit>
        <trans-unit id="934e29cbafc331421d1cbb7d5b59f0cb95dc8f48" translate="yes" xml:space="preserve">
          <source>&quot;&lt;a href=&quot;../user-guide/formatters#jslint-xml&quot;&gt;jslint-xml&lt;/a&gt;&quot;</source>
          <target state="translated">&quot;&lt;a href=&quot;../user-guide/formatters#jslint-xml&quot;&gt;jslint-xml&lt;/a&gt;&quot;</target>
        </trans-unit>
        <trans-unit id="3ae9f1b215ba2b7c08d277035d434bd53ad5ebe3" translate="yes" xml:space="preserve">
          <source>&quot;&lt;a href=&quot;../user-guide/formatters#json&quot;&gt;json&lt;/a&gt;&quot;</source>
          <target state="translated">&quot;&lt;a href=&quot;../user-guide/formatters#json&quot;&gt;json&lt;/a&gt;&quot;</target>
        </trans-unit>
        <trans-unit id="4a4eb360fcb3f21a83c33c9d496fff8a9200bc6d" translate="yes" xml:space="preserve">
          <source>&quot;&lt;a href=&quot;../user-guide/formatters#junit&quot;&gt;junit&lt;/a&gt;&quot;</source>
          <target state="translated">&quot;&lt;a href=&quot;../user-guide/formatters#junit&quot;&gt;junit&lt;/a&gt;&quot;</target>
        </trans-unit>
        <trans-unit id="93d129190eab363c3b5372be2a040b670da523b0" translate="yes" xml:space="preserve">
          <source>&quot;&lt;a href=&quot;../user-guide/formatters#stylish&quot;&gt;stylish&lt;/a&gt;&quot; (the default)</source>
          <target state="translated">「&lt;a href=&quot;../user-guide/formatters#stylish&quot;&gt;スタイリッシュ&lt;/a&gt;」（デフォルト）</target>
        </trans-unit>
        <trans-unit id="eee18de17e47eb98d49ea2b47c3def0ee71b2ba5" translate="yes" xml:space="preserve">
          <source>&quot;&lt;a href=&quot;../user-guide/formatters#table&quot;&gt;table&lt;/a&gt;&quot;</source>
          <target state="translated">&quot;&lt;a href=&quot;../user-guide/formatters#table&quot;&gt;table&lt;/a&gt;&quot;</target>
        </trans-unit>
        <trans-unit id="0180fb19e9262c6014f70407da05591735a7489e" translate="yes" xml:space="preserve">
          <source>&quot;&lt;a href=&quot;../user-guide/formatters#tap&quot;&gt;tap&lt;/a&gt;&quot;</source>
          <target state="translated">&quot;&lt;a href=&quot;../user-guide/formatters#tap&quot;&gt;tap&lt;/a&gt;&quot;</target>
        </trans-unit>
        <trans-unit id="306cca277e3d5084e1b3b9d20b57d32b0e3db59d" translate="yes" xml:space="preserve">
          <source>&quot;&lt;a href=&quot;../user-guide/formatters#unix&quot;&gt;unix&lt;/a&gt;&quot;</source>
          <target state="translated">&quot;&lt;a href=&quot;../user-guide/formatters#unix&quot;&gt;unix&lt;/a&gt;&quot;</target>
        </trans-unit>
        <trans-unit id="6f83b39b846567634c07f8486fdf3a9cab129f15" translate="yes" xml:space="preserve">
          <source>&quot;&lt;a href=&quot;../user-guide/formatters#visualstudio&quot;&gt;visualstudio&lt;/a&gt;&quot;</source>
          <target state="translated">&quot;&lt;a href=&quot;../user-guide/formatters#visualstudio&quot;&gt;visualstudio&lt;/a&gt;&quot;</target>
        </trans-unit>
        <trans-unit id="5479ce67e5b4cdd86e099a43738ba59fb0a88b5e" translate="yes" xml:space="preserve">
          <source>&quot;I thought I knew enough to fix this, but it turns out I don't.&quot;</source>
          <target state="translated">「私はこれを修正するのに十分知っていると思っていましたが、実際には修正していません。」</target>
        </trans-unit>
        <trans-unit id="0cee0c64cc224ce96d0d5151d7a1a696836900b6" translate="yes" xml:space="preserve">
          <source>&quot;I'll take a look at this over the weekend.&quot;</source>
          <target state="translated">「私は週末にこれを見るつもりです。」</target>
        </trans-unit>
        <trans-unit id="b42c5b116383b783faf3eede3083a2c40eeb8d6d" translate="yes" xml:space="preserve">
          <source>&quot;I'm going to do this, give me two weeks.&quot;</source>
          <target state="translated">「私はこれをやるつもりです、2週間ください。」</target>
        </trans-unit>
        <trans-unit id="6a2b0ac66e8921170d0d43042ddac82d601b22e3" translate="yes" xml:space="preserve">
          <source>&quot;Sorry, it looks like I don't have time to do this.&quot;</source>
          <target state="translated">「申し訳ありませんが、これを行う時間がないようです。」</target>
        </trans-unit>
        <trans-unit id="c4b7d74f198ef89ff5ac695937af3ad442bfa717" translate="yes" xml:space="preserve">
          <source>&quot;There are only two hard things in Computer Science: cache invalidation and naming things.&quot; &amp;mdash; Phil Karlton</source>
          <target state="translated">「コンピューターサイエンスには、キャッシュの無効化と名前付けという2つの難しいことしかありません。」&amp;mdash;フィル・カールトン</target>
        </trans-unit>
        <trans-unit id="747de87775e82414c64619d34cdb7af948167317" translate="yes" xml:space="preserve">
          <source>&quot;Working on this&quot; (as in, I'm working on it right now)</source>
          <target state="translated">「これに取り組んでいます」（現在、私は今取り組んでいます）</target>
        </trans-unit>
        <trans-unit id="095fe44c7fa8e1250d6a288477ab93cd453b25bb" translate="yes" xml:space="preserve">
          <source>&quot;always&quot;</source>
          <target state="translated">&quot;always&quot;</target>
        </trans-unit>
        <trans-unit id="17a3beef938bb5d6ed03b5910527174b07112bb6" translate="yes" xml:space="preserve">
          <source>&quot;never&quot;</source>
          <target state="translated">&quot;never&quot;</target>
        </trans-unit>
        <trans-unit id="db0454432fcf67ee00b8b39ba84820f77da54dcd" translate="yes" xml:space="preserve">
          <source>&amp;copy; JS Foundation and other contributors</source>
          <target state="translated">&amp;copy;JS Foundationおよびその他の寄稿者</target>
        </trans-unit>
        <trans-unit id="667894a36fb240ea2c4a98f28cd8c10be9e3255e" translate="yes" xml:space="preserve">
          <source>&amp;hellip; and many more published on npm with the &lt;a href=&quot;https://www.npmjs.com/browse/keyword/eslintplugin&quot;&gt;eslintplugin&lt;/a&gt; keyword.</source>
          <target state="translated">&amp;hellip; &lt;a href=&quot;https://www.npmjs.com/browse/keyword/eslintplugin&quot;&gt;eslintplugin&lt;/a&gt;キーワードを使用してnpmに公開されたその他の多く。</target>
        </trans-unit>
        <trans-unit id="fa9b610004e10f9abaef249afc5c2620df0111cf" translate="yes" xml:space="preserve">
          <source>'Magic numbers' are numbers that occur multiple times in code without an explicit meaning. They should preferably be replaced by named constants.</source>
          <target state="translated">「マジックナンバー」とは、明示的な意味なしにコード内で複数回出現する数字です。それらはできれば名前付き定数に置き換える必要があります。</target>
        </trans-unit>
        <trans-unit id="b7b7cbc84df2e2a447093a87d410687760266faf" translate="yes" xml:space="preserve">
          <source>( e.g. &lt;code&gt;{ &quot;functions&quot;: &quot;never&quot;, &quot;keywords&quot;: &quot;always&quot;, &quot;classes&quot;: &quot;always&quot; }&lt;/code&gt; )</source>
          <target state="translated">（例 &lt;code&gt;{ &quot;functions&quot;: &quot;never&quot;, &quot;keywords&quot;: &quot;always&quot;, &quot;classes&quot;: &quot;always&quot; }&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="881f8263e87d0857c676c3497f25ae715dedd41c" translate="yes" xml:space="preserve">
          <source>(&lt;code&gt;LintResult[]&lt;/code&gt;)</source>
          <target state="translated">(&lt;code&gt;LintResult[]&lt;/code&gt;)</target>
        </trans-unit>
        <trans-unit id="c01a37d49166d6ef6749609ba6dded626f30e648" translate="yes" xml:space="preserve">
          <source>(&lt;code&gt;Promise&amp;lt;Formatter&amp;gt;&lt;/code&gt;)</source>
          <target state="translated">(&lt;code&gt;Promise&amp;lt;Formatter&amp;gt;&lt;/code&gt;)</target>
        </trans-unit>
        <trans-unit id="a76179dcae5df136b8d1d7400171897ac652919f" translate="yes" xml:space="preserve">
          <source>(&lt;code&gt;Promise&amp;lt;LintResult[]&amp;gt;&lt;/code&gt;)</source>
          <target state="translated">(&lt;code&gt;Promise&amp;lt;LintResult[]&amp;gt;&lt;/code&gt;)</target>
        </trans-unit>
        <trans-unit id="b5c861a40bdfd30f65b8ab2c59f518354c3877c6" translate="yes" xml:space="preserve">
          <source>(&lt;code&gt;Promise&amp;lt;Object&amp;gt;&lt;/code&gt;)</source>
          <target state="translated">(&lt;code&gt;Promise&amp;lt;Object&amp;gt;&lt;/code&gt;)</target>
        </trans-unit>
        <trans-unit id="6e7de7bb1c6e7af80b9338f6f643d2737e764d4c" translate="yes" xml:space="preserve">
          <source>(&lt;code&gt;Promise&amp;lt;boolean&amp;gt;&lt;/code&gt;)</source>
          <target state="translated">(&lt;code&gt;Promise&amp;lt;boolean&amp;gt;&lt;/code&gt;)</target>
        </trans-unit>
        <trans-unit id="15cd39096e6418c5c9c4be671e42c2185c63cba6" translate="yes" xml:space="preserve">
          <source>(&lt;code&gt;Promise&amp;lt;void&amp;gt;&lt;/code&gt;)</source>
          <target state="translated">(&lt;code&gt;Promise&amp;lt;void&amp;gt;&lt;/code&gt;)</target>
        </trans-unit>
        <trans-unit id="09595e77ce6ef5300d5bc6f96249fa4fd0754f16" translate="yes" xml:space="preserve">
          <source>(This behavior differs from that of the JSCS rule cited below, which does not treat the leading &lt;code&gt;[&lt;/code&gt; of a computed property name as part of that property specification. The JSCS rule prohibits the second of these formats but permits the first.)</source>
          <target state="translated">（この動作は、以下に示すJSCSルールの動作とは異なります。これは、計算されたプロパティ名の先頭の &lt;code&gt;[&lt;/code&gt; をそのプロパティ仕様の一部として扱いません。JSCSルールは、これらの2番目の形式を禁止しますが、最初の形式を許可します。）</target>
        </trans-unit>
        <trans-unit id="66767d5b2ba370d9c80d15b251e2b56457aa5dd1" translate="yes" xml:space="preserve">
          <source>(This behavior differs from that of the JSCS rule cited below, which permits the first but prohibits the second format.)</source>
          <target state="translated">（この動作は、最初に許可されているが2番目の形式を禁止している、以下に引用されているJSCS規則の動作とは異なります。）</target>
        </trans-unit>
        <trans-unit id="090303b285cbc31bb278f0770fe38443e1844b6a" translate="yes" xml:space="preserve">
          <source>(no replacement)</source>
          <target state="translated">（代替なし）</target>
        </trans-unit>
        <trans-unit id="6063620034de76172d75d14ca10146b2cf7ec07a" translate="yes" xml:space="preserve">
          <source>(not available)</source>
          <target state="translated">（利用不可）</target>
        </trans-unit>
        <trans-unit id="c8ebec78c6be8d91f6fd057effbc5bd270e8528a" translate="yes" xml:space="preserve">
          <source>(not implemented yet)</source>
          <target state="translated">（まだ実装されていません）</target>
        </trans-unit>
        <trans-unit id="a10fd01e41e82e979cb892c60ba8d945020f1db5" translate="yes" xml:space="preserve">
          <source>(removed ※1)</source>
          <target state="translated">（削除※1）</target>
        </trans-unit>
        <trans-unit id="7e47f404a902d61e97c5defd5416ff73fff4ae84" translate="yes" xml:space="preserve">
          <source>(removed ※2)</source>
          <target state="translated">（削除※2）</target>
        </trans-unit>
        <trans-unit id="2fe301fb0a6565304c90d936757d1724c9618eef" translate="yes" xml:space="preserve">
          <source>--fix</source>
          <target state="translated">--fix</target>
        </trans-unit>
        <trans-unit id="58e83f941dd400401058263b21f5e1eb6b919adc" translate="yes" xml:space="preserve">
          <source>...or equivalently, you can use this configuration:</source>
          <target state="translated">...または同等に、次の構成を使用できます。</target>
        </trans-unit>
        <trans-unit id="e791450a4feea786b00e7cfede04137ed401f111" translate="yes" xml:space="preserve">
          <source>.eslintignore patterns are now resolved from the location of the file</source>
          <target state="translated">.eslintignoreパターンがファイルの場所から解決されるようになりました</target>
        </trans-unit>
        <trans-unit id="a5ab165fc8bda9196b67c17bdc31ce0d8bf6f4ec" translate="yes" xml:space="preserve">
          <source>1tbs</source>
          <target state="translated">1tbs</target>
        </trans-unit>
        <trans-unit id="528aa1580c7af51219debbca25b628b25b2caadf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../rules/accessor-pairs&quot;&gt;accessor-pairs&lt;/a&gt; rule now recognizes class members by default.</source>
          <target state="translated">&lt;a href=&quot;../rules/accessor-pairs&quot;&gt;accessor-pairs&lt;/a&gt;ルールは、デフォルトでクラスメンバーを認識するようになりました。</target>
        </trans-unit>
        <trans-unit id="5959f3be066d67d205073bffba8ea9127dcda92e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../rules/array-callback-return&quot;&gt;array-callback-return&lt;/a&gt; rule now recognizes &lt;code&gt;flatMap&lt;/code&gt; method.</source>
          <target state="translated">&lt;a href=&quot;../rules/array-callback-return&quot;&gt;array-callback-return&lt;/a&gt;ルールが &lt;code&gt;flatMap&lt;/code&gt; メソッドを認識するようになりました。</target>
        </trans-unit>
        <trans-unit id="dbc0629fcab4bdf25ee1f1b4733d24ca069e560a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../rules/comma-dangle&quot;&gt;&lt;code&gt;comma-dangle&lt;/code&gt;&lt;/a&gt; used to be recommended because Internet Explorer 8 and earlier threw a syntax error when it found a dangling comma on object literal properties. However, &lt;a href=&quot;https://www.microsoft.com/en-us/WindowsForBusiness/End-of-IE-support&quot;&gt;Internet Explorer 8 was end-of-lifed&lt;/a&gt; in January 2016 and all other active browsers allow dangling commas. As such, we consider dangling commas to now be a stylistic issue instead of a possible error.</source>
          <target state="translated">&lt;a href=&quot;../rules/comma-dangle&quot;&gt; &lt;code&gt;comma-dangle&lt;/code&gt; &lt;/a&gt;Internet Explorer 8以前では、オブジェクトリテラルプロパティにぶら下がっているコンマが見つかったときに構文エラーが発生したため、コンマダングルが推奨されていました。ただし、&lt;a href=&quot;https://www.microsoft.com/en-us/WindowsForBusiness/End-of-IE-support&quot;&gt; Internet Explorer 8は&lt;/a&gt; 2016年1月に廃止され、他のすべてのアクティブなブラウザーでは、カンマがぶら下がっています。そのため、ぶら下がりカンマは、考えられるエラーではなく、文体の問題であると考えています。</target>
        </trans-unit>
        <trans-unit id="69a63185df3b55a5179f2156481492aa96511aff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../rules/complexity&quot;&gt;&lt;code&gt;complexity&lt;/code&gt;&lt;/a&gt; used to have a hardcoded default of 11 in &lt;code&gt;eslint:recommended&lt;/code&gt; that would be used if you turned the rule on without specifying a maximum. The default is now 20. The rule actually always had a default of 20, but &lt;code&gt;eslint:recommended&lt;/code&gt; was overriding it by mistake.</source>
          <target state="translated">&lt;a href=&quot;../rules/complexity&quot;&gt; &lt;code&gt;complexity&lt;/code&gt; &lt;/a&gt; 11のハードコードされたデフォルト持つために使用 &lt;code&gt;eslint:recommended&lt;/code&gt; あなたは最大を指定せずにルールを有効にした場合に使用されます。デフォルトは20になりました。実際のルールのデフォルトは常に20 &lt;code&gt;eslint:recommended&lt;/code&gt; が、 eslint：recommendedが誤ってオーバーライドしていました。</target>
        </trans-unit>
        <trans-unit id="3f5cd429e1e670497fecd3eadffe5dc2da515716" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../rules/computed-property-spacing&quot;&gt;computed-property-spacing&lt;/a&gt; rule now recognizes class members by default.</source>
          <target state="translated">&lt;a href=&quot;../rules/computed-property-spacing&quot;&gt;計算されたプロパティ間隔&lt;/a&gt;ルールは、デフォルトでクラスメンバーを認識するようになりました。</target>
        </trans-unit>
        <trans-unit id="cf9c06531e0eafc95bd9122debecb9486c91c4bf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../rules/for-direction&quot;&gt;&lt;code&gt;for-direction&lt;/code&gt;&lt;/a&gt; enforces that a &lt;code&gt;for&lt;/code&gt; loop update clause moves the counter in the right direction.</source>
          <target state="translated">&lt;a href=&quot;../rules/for-direction&quot;&gt; &lt;code&gt;for-direction&lt;/code&gt; &lt;/a&gt;は、 &lt;code&gt;for&lt;/code&gt; loop update句がカウンターを正しい方向に移動することを強制します。</target>
        </trans-unit>
        <trans-unit id="eb1fd00fc9f4880892ba67f0ff10f5dab0d5db50" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../rules/func-names&quot;&gt;func-names&lt;/a&gt; rule now recognizes function declarations in default exports.</source>
          <target state="translated">&lt;a href=&quot;../rules/func-names&quot;&gt;func-names&lt;/a&gt;ルールは、デフォルトのエクスポートで関数宣言を認識するようになりました。</target>
        </trans-unit>
        <trans-unit id="ce0209af1b89ee945acae38054b82ff009780b25" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../rules/generator-star&quot;&gt;generator-star&lt;/a&gt; is replaced by &lt;a href=&quot;../rules/generator-star-spacing&quot;&gt;generator-star-spacing&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../rules/generator-star&quot;&gt;generator-star&lt;/a&gt;は&lt;a href=&quot;../rules/generator-star-spacing&quot;&gt;generator-star-spacingに&lt;/a&gt;置き換えられました</target>
        </trans-unit>
        <trans-unit id="4dcd1c60c76aaf3b0adfb65a7f21a8ed77a8d37d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../rules/getter-return&quot;&gt;&lt;code&gt;getter-return&lt;/code&gt;&lt;/a&gt; enforces that a &lt;code&gt;return&lt;/code&gt; statement is present in property getters.</source>
          <target state="translated">&lt;a href=&quot;../rules/getter-return&quot;&gt; &lt;code&gt;getter-return&lt;/code&gt; &lt;/a&gt;は、 &lt;code&gt;return&lt;/code&gt; ステートメントがプロパティgetterに存在することを強制します。</target>
        </trans-unit>
        <trans-unit id="b084c11a0ec84355aea298239ab33d97fca1e1af" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../rules/global-strict&quot;&gt;global-strict&lt;/a&gt; is replaced by &lt;a href=&quot;../rules/strict&quot;&gt;strict&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../rules/global-strict&quot;&gt;グローバル厳密&lt;/a&gt;に置き換えられ&lt;a href=&quot;../rules/strict&quot;&gt;、厳格な&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e944eb4292947e85aded2cb0b7499633852acb9d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../rules/no-arrow-condition&quot;&gt;no-arrow-condition&lt;/a&gt; is replaced by a combination of &lt;a href=&quot;../rules/no-confusing-arrow&quot;&gt;no-confusing-arrow&lt;/a&gt; and &lt;a href=&quot;../rules/no-constant-condition&quot;&gt;no-constant-condition&lt;/a&gt;. Turn on both of these rules to get the same functionality as &lt;code&gt;no-arrow-condition&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../rules/no-arrow-condition&quot;&gt;no-arrow-condition&lt;/a&gt;は、&lt;a href=&quot;../rules/no-confusing-arrow&quot;&gt;no-confusing-arrow&lt;/a&gt;と&lt;a href=&quot;../rules/no-constant-condition&quot;&gt;no-constant-conditionの&lt;/a&gt;組み合わせに置き換えられます。これらの両方のルールをオンにして、 &lt;code&gt;no-arrow-condition&lt;/code&gt; と同じ機能を取得します。</target>
        </trans-unit>
        <trans-unit id="bc1488048888c1c013c34a29ff1f28db1d452221" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../rules/no-async-promise-executor&quot;&gt;&lt;code&gt;no-async-promise-executor&lt;/code&gt;&lt;/a&gt; disallows using an &lt;code&gt;async&lt;/code&gt; function as the argument to the &lt;code&gt;Promise&lt;/code&gt; constructor, which is usually a bug.</source>
          <target state="translated">&lt;a href=&quot;../rules/no-async-promise-executor&quot;&gt; &lt;code&gt;no-async-promise-executor&lt;/code&gt; &lt;/a&gt;は、通常はバグである &lt;code&gt;Promise&lt;/code&gt; コンストラクターへの引数として &lt;code&gt;async&lt;/code&gt; 関数を使用することを許可しません。</target>
        </trans-unit>
        <trans-unit id="56e29a6e53c819c8bc8d47688f9cd982ff796801" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../rules/no-comma-dangle&quot;&gt;no-comma-dangle&lt;/a&gt; is replaced by &lt;a href=&quot;../rules/comma-dangle&quot;&gt;comma-dangle&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../rules/no-comma-dangle&quot;&gt;no-comma-dangle&lt;/a&gt;はコンマダングルに置き換えられ&lt;a href=&quot;../rules/comma-dangle&quot;&gt;ます&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="362f3f77712c021a0ed8c8ee48a2e12a0a738a76" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../rules/no-compare-neg-zero&quot;&gt;&lt;code&gt;no-compare-neg-zero&lt;/code&gt;&lt;/a&gt; disallows comparisons to &lt;code&gt;-0&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../rules/no-compare-neg-zero&quot;&gt; &lt;code&gt;no-compare-neg-zero&lt;/code&gt; &lt;/a&gt;は &lt;code&gt;-0&lt;/code&gt; との比較を許可しません</target>
        </trans-unit>
        <trans-unit id="430e080357f96a8af3060d4f6c4c1fbcc2d7fd6b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../rules/no-console&quot;&gt;&lt;code&gt;no-console&lt;/code&gt;&lt;/a&gt; disallows calling functions like &lt;code&gt;console.log&lt;/code&gt;. While this rule is useful in many cases (e.g. to avoid inadvertently leaving debugging statements in production code), it is not as broadly applicable as the other rules in &lt;code&gt;eslint:recommended&lt;/code&gt;, and it was a source of false positives in cases where &lt;code&gt;console.log&lt;/code&gt; is acceptable (e.g. in CLI applications).</source>
          <target state="translated">&lt;a href=&quot;../rules/no-console&quot;&gt; &lt;code&gt;no-console&lt;/code&gt; &lt;/a&gt;は &lt;code&gt;console.log&lt;/code&gt; のような関数の呼び出しを許可しません。このルールは多くの場合に役立ちますが（たとえば、プロダクションコードにデバッグステートメントを誤って残さないようにするため）、 &lt;code&gt;eslint:recommended&lt;/code&gt; の他のルールほど広くは適用できず、 &lt;code&gt;console.log&lt;/code&gt; の場合に誤検知の原因でした許容されます（CLIアプリケーションなど）。</target>
        </trans-unit>
        <trans-unit id="dd018d45940c875331070c6da737358df6074232" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../rules/no-dupe-class-members&quot;&gt;no-dupe-class-members&lt;/a&gt; rule now recognizes computed keys for static class members.</source>
          <target state="translated">&lt;a href=&quot;../rules/no-dupe-class-members&quot;&gt;no-dupe-class-members&lt;/a&gt;ルールは、静的クラスメンバーの計算されたキーを認識するようになりました。</target>
        </trans-unit>
        <trans-unit id="5212656d7e911feccb6522ec345cd34c42889a86" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../rules/no-empty-class&quot;&gt;no-empty-class&lt;/a&gt; is replaced by &lt;a href=&quot;../rules/no-empty-character-class&quot;&gt;no-empty-character-class&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../rules/no-empty-class&quot;&gt;空でないクラス&lt;/a&gt;は&lt;a href=&quot;../rules/no-empty-character-class&quot;&gt;空でない文字&lt;/a&gt;クラスに置き換えられます</target>
        </trans-unit>
        <trans-unit id="3116a0465b27dda2d13bb6a8b89c8d4dd9d5d7b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../rules/no-empty-label&quot;&gt;no-empty-label&lt;/a&gt; is replaced by &lt;a href=&quot;../rules/no-labels&quot;&gt;no-labels&lt;/a&gt; with &lt;code&gt;{&quot;allowLoop&quot;: true, &quot;allowSwitch&quot;: true}&lt;/code&gt; option.</source>
          <target state="translated">&lt;a href=&quot;../rules/no-empty-label&quot;&gt;no-empty-label&lt;/a&gt;は、 &lt;code&gt;{&quot;allowLoop&quot;: true, &quot;allowSwitch&quot;: true}&lt;/code&gt; オプションを使用して&lt;a href=&quot;../rules/no-labels&quot;&gt;no-labelsに&lt;/a&gt;置き換えられます。</target>
        </trans-unit>
        <trans-unit id="52742af6e62109294317ac6b75df2062445d79c9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../rules/no-extra-parens&quot;&gt;no-extra-parens&lt;/a&gt; rule now recognizes parentheses in assignment targets.</source>
          <target state="translated">&lt;a href=&quot;../rules/no-extra-parens&quot;&gt;no-extra-parens&lt;/a&gt;ルールは、割り当てターゲットの括弧を認識するようになりました。</target>
        </trans-unit>
        <trans-unit id="f860095492303882479e3ca8c8b97efba5edb5f4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../rules/no-extra-strict&quot;&gt;no-extra-strict&lt;/a&gt; is replaced by &lt;a href=&quot;../rules/strict&quot;&gt;strict&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../rules/no-extra-strict&quot;&gt;無エキストラ厳密&lt;/a&gt;に置き換えられ&lt;a href=&quot;../rules/strict&quot;&gt;、厳格な&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5e3695251fba0234a98a42cf4df5a0bdfd057778" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../rules/no-magic-numbers&quot;&gt;no-magic-numbers&lt;/a&gt; rule now recognizes bigint literals.</source>
          <target state="translated">&lt;a href=&quot;../rules/no-magic-numbers&quot;&gt;no-magic-numbers&lt;/a&gt;ルールがbigintリテラルを認識するようになりました。</target>
        </trans-unit>
        <trans-unit id="1fb4e84d5195be0dcd6a408710903485ea8e9f4d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../rules/no-misleading-character-class&quot;&gt;&lt;code&gt;no-misleading-character-class&lt;/code&gt;&lt;/a&gt; reports character classes in regular expressions that might not behave as expected.</source>
          <target state="translated">&lt;a href=&quot;../rules/no-misleading-character-class&quot;&gt; &lt;code&gt;no-misleading-character-class&lt;/code&gt; &lt;/a&gt;は、期待どおりに動作しない可能性がある正規表現の文字クラスを報告します。</target>
        </trans-unit>
        <trans-unit id="8eb9e823998e3f1e7c2dd44963ff0526bd61e46e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../rules/no-native-reassign&quot;&gt;&lt;code&gt;no-native-reassign&lt;/code&gt;&lt;/a&gt; was previously part of &lt;code&gt;no-undef&lt;/code&gt;, but was split out because it didn't make sense as part of another rule. The &lt;code&gt;no-native-reassign&lt;/code&gt; rule warns whenever you try to overwrite a read-only global variable.</source>
          <target state="translated">&lt;a href=&quot;../rules/no-native-reassign&quot;&gt; &lt;code&gt;no-native-reassign&lt;/code&gt; &lt;/a&gt;は以前は &lt;code&gt;no-undef&lt;/code&gt; の一部でしたが、別のルールの一部としては意味をなさなかったために分割されました。 &lt;code&gt;no-native-reassign&lt;/code&gt; あなたは読み取り専用のグローバル変数を上書きしようとしたときにルールが警告しています。</target>
        </trans-unit>
        <trans-unit id="6992b091ab47fd6f239d5da58624d4cb4b9e3b21" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../rules/no-prototype-builtins&quot;&gt;&lt;code&gt;no-prototype-builtins&lt;/code&gt;&lt;/a&gt; reports method calls like &lt;code&gt;foo.hasOwnProperty(&quot;bar&quot;)&lt;/code&gt; (which are a frequent source of bugs), and suggests that they be replaced with &lt;code&gt;Object.prototype.hasOwnProperty.call(foo, &quot;bar&quot;)&lt;/code&gt; instead.</source>
          <target state="translated">&lt;a href=&quot;../rules/no-prototype-builtins&quot;&gt; &lt;code&gt;no-prototype-builtins&lt;/code&gt; &lt;/a&gt;は、 &lt;code&gt;foo.hasOwnProperty(&quot;bar&quot;)&lt;/code&gt; （頻繁にバグの原因となる）のようなメソッド呼び出しを報告し、代わりに &lt;code&gt;Object.prototype.hasOwnProperty.call(foo, &quot;bar&quot;)&lt;/code&gt; で置き換えることを提案します。</target>
        </trans-unit>
        <trans-unit id="d50e907d4b1c9f3b8d6488169d6a328552cd13f4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../rules/no-reserved-keys&quot;&gt;no-reserved-keys&lt;/a&gt; is replaced by &lt;a href=&quot;../rules/quote-props&quot;&gt;quote-props&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../rules/no-reserved-keys&quot;&gt;no-reserved-keys&lt;/a&gt;は&lt;a href=&quot;../rules/quote-props&quot;&gt;quote-propsに&lt;/a&gt;置き換えられました</target>
        </trans-unit>
        <trans-unit id="1b8b72167061ce9df26bc23770dc77f459b9c208" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../rules/no-shadow-restricted-names&quot;&gt;&lt;code&gt;no-shadow-restricted-names&lt;/code&gt;&lt;/a&gt; disallows shadowing variables like &lt;code&gt;undefined&lt;/code&gt; (e.g. with code like &lt;code&gt;let undefined = 5;&lt;/code&gt;), since is likely to confuse readers.</source>
          <target state="translated">&lt;a href=&quot;../rules/no-shadow-restricted-names&quot;&gt; &lt;code&gt;no-shadow-restricted-names&lt;/code&gt; &lt;/a&gt;などの変数シャドーイングを禁止し &lt;code&gt;undefined&lt;/code&gt; （のようなコードで例えば &lt;code&gt;let undefined = 5;&lt;/code&gt; ）、おそらく混乱の読者にあることから。</target>
        </trans-unit>
        <trans-unit id="3236c2129736a8fd9319687addb69a8e81a16456" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../rules/no-space-before-semi&quot;&gt;no-space-before-semi&lt;/a&gt; is replaced by &lt;a href=&quot;../rules/semi-spacing&quot;&gt;semi-spacing&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../rules/no-space-before-semi&quot;&gt;ノースペースの前半&lt;/a&gt;で置き換えられる&lt;a href=&quot;../rules/semi-spacing&quot;&gt;半間隔&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="49ea565acb27eee1f63f65eda8885e45c86e3e70" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../rules/no-unsafe-finally&quot;&gt;&lt;code&gt;no-unsafe-finally&lt;/code&gt;&lt;/a&gt; helps catch &lt;code&gt;finally&lt;/code&gt; clauses that may not behave as you think.</source>
          <target state="translated">&lt;a href=&quot;../rules/no-unsafe-finally&quot;&gt; &lt;code&gt;no-unsafe-finally&lt;/code&gt; &lt;/a&gt;は、思ったように動作しない可能性のある &lt;code&gt;finally&lt;/code&gt; 節をキャッチするのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="82d6d089c71c514b3d95e9047ca03b15b1fecde7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../rules/no-useless-catch&quot;&gt;&lt;code&gt;no-useless-catch&lt;/code&gt;&lt;/a&gt; reports &lt;code&gt;catch&lt;/code&gt; clauses that are redundant and can be removed from the code without changing its behavior.</source>
          <target state="translated">&lt;a href=&quot;../rules/no-useless-catch&quot;&gt; &lt;code&gt;no-useless-catch&lt;/code&gt; &lt;/a&gt;は、冗長であり、その動作を変更せずにコードから削除できる &lt;code&gt;catch&lt;/code&gt; 句を報告します。</target>
        </trans-unit>
        <trans-unit id="5c61c79054531006d5e40dffb68fc5afa65e3f28" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../rules/no-useless-escape&quot;&gt;&lt;code&gt;no-useless-escape&lt;/code&gt;&lt;/a&gt; disallows uselessly-escaped characters in strings and regular expressions</source>
          <target state="translated">&lt;a href=&quot;../rules/no-useless-escape&quot;&gt; &lt;code&gt;no-useless-escape&lt;/code&gt; &lt;/a&gt;は、文字列と正規表現で無用にエスケープされた文字を許可しません</target>
        </trans-unit>
        <trans-unit id="f09490631ec07bc1e28a457b7bf912927674d66b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../rules/no-with&quot;&gt;&lt;code&gt;no-with&lt;/code&gt;&lt;/a&gt; disallows use of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/with&quot;&gt;&lt;code&gt;with&lt;/code&gt; statement&lt;/a&gt;, which can make code difficult to understand and cause compatibility problems.</source>
          <target state="translated">&lt;a href=&quot;../rules/no-with&quot;&gt; &lt;code&gt;no-with&lt;/code&gt; &lt;/a&gt;は&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/with&quot;&gt; &lt;code&gt;with&lt;/code&gt; ステートメントの&lt;/a&gt;使用を禁止します。これにより、コードが理解しにくくなり、互換性の問題が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="54e2c2bd954c4d9d0656b88f2d82021d092e7e8e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../rules/no-wrap-func&quot;&gt;no-wrap-func&lt;/a&gt; is replaced by &lt;a href=&quot;../rules/no-extra-parens&quot;&gt;no-extra-parens&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../rules/no-wrap-func&quot;&gt;no-wrap-func&lt;/a&gt;は&lt;a href=&quot;../rules/no-extra-parens&quot;&gt;no-extra-parensに&lt;/a&gt;置き換えられました</target>
        </trans-unit>
        <trans-unit id="3de7ce284754fadd2e7f78f95ac41a164d294ea0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../rules/radix&quot;&gt;radix&lt;/a&gt; rule now recognizes invalid numbers for the second parameter of &lt;code&gt;parseInt()&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../rules/radix&quot;&gt;基数&lt;/a&gt;ルールは、 &lt;code&gt;parseInt()&lt;/code&gt; の2番目のパラメーターの無効な数値を認識するようになりました。</target>
        </trans-unit>
        <trans-unit id="e4e60213dd15962660de853db6485c347fe721be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../rules/require-atomic-updates&quot;&gt;&lt;code&gt;require-atomic-updates&lt;/code&gt;&lt;/a&gt; reports race condition bugs that can occur when reassigning variables in async functions.</source>
          <target state="translated">&lt;a href=&quot;../rules/require-atomic-updates&quot;&gt; &lt;code&gt;require-atomic-updates&lt;/code&gt; &lt;/a&gt;は、非同期関数で変数を再割り当てするときに発生する可能性がある競合状態のバグを報告します。</target>
        </trans-unit>
        <trans-unit id="3536b0acf3c02f6f892af0b7cc89663b801fa694" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../rules/require-yield&quot;&gt;&lt;code&gt;require-yield&lt;/code&gt;&lt;/a&gt; helps to identify generator functions that do not have the &lt;code&gt;yield&lt;/code&gt; keyword.</source>
          <target state="translated">&lt;a href=&quot;../rules/require-yield&quot;&gt; &lt;code&gt;require-yield&lt;/code&gt; &lt;/a&gt;は、 &lt;code&gt;yield&lt;/code&gt; キーワードを持たないジェネレーター関数を識別するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="463bb2280bea2b2b713ad9c7a86061440683e363" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../rules/space-after-function-name&quot;&gt;space-after-function-name&lt;/a&gt; is replaced by &lt;a href=&quot;../rules/space-before-function-paren&quot;&gt;space-before-function-paren&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../rules/space-after-function-name&quot;&gt;space-after-function-name&lt;/a&gt;は&lt;a href=&quot;../rules/space-before-function-paren&quot;&gt;space-before-function-parenに&lt;/a&gt;置き換えられます</target>
        </trans-unit>
        <trans-unit id="21ef2dc5bb24d9612329b3aee56ff0c3f9adf115" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../rules/space-after-keywords&quot;&gt;space-after-keywords&lt;/a&gt; is replaced by &lt;a href=&quot;../rules/keyword-spacing&quot;&gt;keyword-spacing&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../rules/space-after-keywords&quot;&gt;space-after-keywords&lt;/a&gt;は&lt;a href=&quot;../rules/keyword-spacing&quot;&gt;keyword-spacingに&lt;/a&gt;置き換えられました。</target>
        </trans-unit>
        <trans-unit id="f2add981c7cfbbab31dbe2d4bfb8ba6f1889e324" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../rules/space-before-function-parentheses&quot;&gt;space-before-function-parentheses&lt;/a&gt; is replaced by &lt;a href=&quot;../rules/space-before-function-paren&quot;&gt;space-before-function-paren&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../rules/space-before-function-parentheses&quot;&gt;space-before-function-parentheses&lt;/a&gt;は&lt;a href=&quot;../rules/space-before-function-paren&quot;&gt;space-before-function-parenに&lt;/a&gt;置き換えられます</target>
        </trans-unit>
        <trans-unit id="9f1670f25bedf657a1256526959dfc0d12a4cc05" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../rules/space-before-keywords&quot;&gt;space-before-keywords&lt;/a&gt; is replaced by &lt;a href=&quot;../rules/keyword-spacing&quot;&gt;keyword-spacing&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../rules/space-before-keywords&quot;&gt;space-before-keywords&lt;/a&gt;は&lt;a href=&quot;../rules/keyword-spacing&quot;&gt;keyword-spacingに&lt;/a&gt;置き換えられました。</target>
        </trans-unit>
        <trans-unit id="8f87386535ffb15ddf217ac08564efef9c630064" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../rules/space-in-brackets&quot;&gt;space-in-brackets&lt;/a&gt; is replaced by&lt;a href=&quot;../rules/object-curly-spacing&quot;&gt;object-curly-spacing&lt;/a&gt; and &lt;a href=&quot;../rules/array-bracket-spacing&quot;&gt;array-bracket-spacing&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../rules/space-in-brackets&quot;&gt;括弧内のスペース&lt;/a&gt;は、&lt;a href=&quot;../rules/object-curly-spacing&quot;&gt;object-curly-spacing&lt;/a&gt;と&lt;a href=&quot;../rules/array-bracket-spacing&quot;&gt;array-bracket-spacingに&lt;/a&gt;置き換えられました</target>
        </trans-unit>
        <trans-unit id="6b1796027bc057231db40ebc806e617fc6fed262" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../rules/space-return-throw-case&quot;&gt;space-return-throw-case&lt;/a&gt; is replaced by &lt;a href=&quot;../rules/keyword-spacing&quot;&gt;keyword-spacing&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../rules/space-return-throw-case&quot;&gt;space-return-throw-case&lt;/a&gt;は&lt;a href=&quot;../rules/keyword-spacing&quot;&gt;keyword-spacingに&lt;/a&gt;置き換えられました。</target>
        </trans-unit>
        <trans-unit id="3a645b2032d5519768b30498c465e09c12c96ef5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../rules/space-unary-word-ops&quot;&gt;space-unary-word-ops&lt;/a&gt; is replaced by &lt;a href=&quot;../rules/space-unary-ops&quot;&gt;space-unary-ops&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../rules/space-unary-word-ops&quot;&gt;space-unary-word-ops&lt;/a&gt;は&lt;a href=&quot;../rules/space-unary-ops&quot;&gt;space-unary-opsに&lt;/a&gt;置き換えられました</target>
        </trans-unit>
        <trans-unit id="455d55187aa4f3537c6b2c37b0ee65ae88b77c85" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../rules/spaced-line-comment&quot;&gt;spaced-line-comment&lt;/a&gt; is replaced by &lt;a href=&quot;../rules/spaced-comment&quot;&gt;spaced-comment&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../rules/spaced-line-comment&quot;&gt;スペース付きコメント&lt;/a&gt;は&lt;a href=&quot;../rules/spaced-comment&quot;&gt;スペース付きコメントに&lt;/a&gt;置き換えられます</target>
        </trans-unit>
        <trans-unit id="449e43ef3b34f9150fb38394b4567b202c0ba796" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../rules/strict&quot;&gt;&lt;code&gt;strict&lt;/code&gt;&lt;/a&gt; - defaults to &lt;code&gt;&quot;safe&quot;&lt;/code&gt; (previous default was &lt;code&gt;&quot;function&quot;&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;../rules/strict&quot;&gt; &lt;code&gt;strict&lt;/code&gt; -&lt;/a&gt;デフォルトは &lt;code&gt;&quot;safe&quot;&lt;/code&gt; です（以前のデフォルトは &lt;code&gt;&quot;function&quot;&lt;/code&gt; でした）</target>
        </trans-unit>
        <trans-unit id="eaaa351c097a087b7e9707deec1697b6014ee940" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../rules/use-isnan&quot;&gt;use-isnan&lt;/a&gt; rule now recognizes class members by default.</source>
          <target state="translated">&lt;a href=&quot;../rules/use-isnan&quot;&gt;use-isnan&lt;/a&gt;ルールは、デフォルトでクラスメンバーを認識するようになりました。</target>
        </trans-unit>
        <trans-unit id="3b58b3a61de81026b8879ee150ec68d5d7ac2310" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../rules/yoda&quot;&gt;yoda&lt;/a&gt; rule now recognizes bigint literals.</source>
          <target state="translated">&lt;a href=&quot;../rules/yoda&quot;&gt;yoda&lt;/a&gt;ルールはbigintリテラルを認識するようになりました。</target>
        </trans-unit>
        <trans-unit id="b8d99cfab4da47b400517362695d68407de5dbcc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;brace-style&quot;&gt;&lt;code&gt;brace-style&lt;/code&gt;&lt;/a&gt; which enforces this behavior for arrow functions with block bodies.</source>
          <target state="translated">&lt;a href=&quot;brace-style&quot;&gt; &lt;code&gt;brace-style&lt;/code&gt; &lt;/a&gt;で、ブロック本体を持つ矢印関数にこの動作を適用します。</target>
        </trans-unit>
        <trans-unit id="b22d70a9f8eee7e634399c52bf3504068604f768" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;formatters/index#stylish&quot;&gt;stylish&lt;/a&gt; (the default)</source>
          <target state="translated">&lt;a href=&quot;formatters/index#stylish&quot;&gt;スタイリッシュ&lt;/a&gt;（デフォルト）</target>
        </trans-unit>
        <trans-unit id="887de6df90aa5b19fa9a42ab5c9b2adfa9a04e5d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://usejsdoc.org&quot;&gt;JSDoc&lt;/a&gt; generates application programming interface (API) documentation from specially-formatted comments in JavaScript code. For example, this is a JSDoc comment for a function:</source>
          <target state="translated">&lt;a href=&quot;http://usejsdoc.org&quot;&gt;JSDoc&lt;/a&gt;は、JavaScriptコード内の特別な形式のコメントからアプリケーションプログラミングインターフェイス（API）ドキュメントを生成します。たとえば、これは関数のJSDocコメントです。</target>
        </trans-unit>
        <trans-unit id="d8269dd2939523e6ea81a144a89c5c7f3395c748" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://usejsdoc.org&quot;&gt;JSDoc&lt;/a&gt; is a JavaScript API documentation generator. It uses specially-formatted comments inside of code to generate API documentation automatically. For example, this is what a JSDoc comment looks like for a function:</source>
          <target state="translated">&lt;a href=&quot;http://usejsdoc.org&quot;&gt;JSDoc&lt;/a&gt;はJavaScript APIドキュメントジェネレーターです。コード内で特別な形式のコメントを使用して、APIドキュメントを自動的に生成します。たとえば、次のJSDocコメントは関数のようになります。</target>
        </trans-unit>
        <trans-unit id="4e7eed25feecc239535855b8b6f157b0b5539e35" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://yeoman.io&quot;&gt;Yeoman&lt;/a&gt; is a scaffold generator that ESLint uses to help streamline development of new rules. If you don't already have Yeoman installed, you can install it via npm:</source>
          <target state="translated">&lt;a href=&quot;http://yeoman.io&quot;&gt;Yeoman&lt;/a&gt;は、ESLintが新しいルールの開発を合理化するために使用する足場ジェネレータです。Yeomanをまだインストールしていない場合は、npmからインストールできます。</target>
        </trans-unit>
        <trans-unit id="c9d6e6ac9cc3d21d4fdc71f7db5cf3c1a4546ab4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://bocoup.com/blog/the-catch-with-try-catch&quot;&gt;The &quot;catch&quot; with try...catch&lt;/a&gt; by Ben Alman explains how the exception identifier can leak into the outer scope in IE 6-8</source>
          <target state="translated">&lt;a href=&quot;https://bocoup.com/blog/the-catch-with-try-catch&quot;&gt;&lt;/a&gt;ベンアルマンによるtry ... catchによる「キャッチ」は、例外識別子がIE 6-8の外側のスコープにリークする方法を説明しています</target>
        </trans-unit>
        <trans-unit id="0773d21640b969ca05daf0bdf0dbc72e55074dc4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/in&quot;&gt;&lt;code&gt;in&lt;/code&gt; operator&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/in&quot;&gt; &lt;code&gt;in&lt;/code&gt; オペレータ&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9e004dcfc05bd9683bac1256b2a3e7bbc3bc4ec9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/instanceof&quot;&gt;&lt;code&gt;instanceof&lt;/code&gt; operator&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/instanceof&quot;&gt; &lt;code&gt;instanceof&lt;/code&gt; 演算子&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="620db7e401bf0e8483a98c527e7354d16e775eff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/brenolf/polyjuice&quot;&gt;Polyjuice&lt;/a&gt; is a utility for converting JSCS (and JSHint) configuration files into ESLint configuration files automatically. It understands the equivalent rules from each utility and will automatically output an ESLint configuration file that is a good approximation of your existing JSCS file.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/brenolf/polyjuice&quot;&gt;Polyjuice&lt;/a&gt;は、JSCS（およびJSHint）構成ファイルをESLint構成ファイルに自動的に変換するためのユーティリティです。各ユーティリティの同等のルールを理解し、既存のJSCSファイルを適切に近似したESLint構成ファイルを自動的に出力します。</target>
        </trans-unit>
        <trans-unit id="0c8b20765574fc25d7ac164464c51495ec26a1d2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tc39.es/ecma262/#prod-annexB-NonOctalDecimalEscapeSequence&quot;&gt;NonOctalDecimalEscapeSequence&lt;/a&gt; in ECMAScript specification</source>
          <target state="translated">&lt;a href=&quot;https://tc39.es/ecma262/#prod-annexB-NonOctalDecimalEscapeSequence&quot;&gt;&lt;/a&gt;ECMAScript仕様のNonOctalDecimalEscapeSequence</target>
        </trans-unit>
        <trans-unit id="11bfe720b5b955d263535c329ceca762ff0e2001" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.ecma-international.org/ecma-262/6.0/#sec-array.prototype.foreach&quot;&gt;&lt;code&gt;Array.prototype.forEach&lt;/code&gt;&lt;/a&gt; (optional, based on &lt;code&gt;checkForEach&lt;/code&gt; parameter)</source>
          <target state="translated">&lt;a href=&quot;https://www.ecma-international.org/ecma-262/6.0/#sec-array.prototype.foreach&quot;&gt; &lt;code&gt;Array.prototype.forEach&lt;/code&gt; &lt;/a&gt;（オプション、 &lt;code&gt;checkForEach&lt;/code&gt; パラメーターに基づく）</target>
        </trans-unit>
        <trans-unit id="287935545ebea6d21e06308abb2909c521d7d765" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.ecma-international.org/ecma-262/6.0/index.html#sec-reflect.apply&quot;&gt;&lt;code&gt;Reflect.apply&lt;/code&gt;&lt;/a&gt; effectively deprecates &lt;a href=&quot;https://www.ecma-international.org/ecma-262/6.0/index.html#sec-function.prototype.apply&quot;&gt;&lt;code&gt;Function.prototype.apply&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://www.ecma-international.org/ecma-262/6.0/index.html#sec-function.prototype.call&quot;&gt;&lt;code&gt;Function.prototype.call&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://www.ecma-international.org/ecma-262/6.0/index.html#sec-reflect.apply&quot;&gt; &lt;code&gt;Reflect.apply&lt;/code&gt; は、&lt;/a&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/6.0/index.html#sec-function.prototype.apply&quot;&gt; &lt;code&gt;Function.prototype.apply&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;https://www.ecma-international.org/ecma-262/6.0/index.html#sec-function.prototype.call&quot;&gt; &lt;code&gt;Function.prototype.call&lt;/code&gt; を&lt;/a&gt;効果的に廃止します</target>
        </trans-unit>
        <trans-unit id="8a7d7ecb38121bdf40fbccb3540665e6b6a5ebf2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.ecma-international.org/ecma-262/6.0/index.html#sec-reflect.deleteproperty&quot;&gt;&lt;code&gt;Reflect.deleteProperty&lt;/code&gt;&lt;/a&gt; effectively deprecates the &lt;a href=&quot;https://www.ecma-international.org/ecma-262/6.0/index.html#sec-delete-operator-runtime-semantics-evaluation&quot;&gt;&lt;code&gt;delete&lt;/code&gt; keyword&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://www.ecma-international.org/ecma-262/6.0/index.html#sec-reflect.deleteproperty&quot;&gt; &lt;code&gt;Reflect.deleteProperty&lt;/code&gt; &lt;/a&gt;は、&lt;a href=&quot;https://www.ecma-international.org/ecma-262/6.0/index.html#sec-delete-operator-runtime-semantics-evaluation&quot;&gt; &lt;code&gt;delete&lt;/code&gt; &lt;/a&gt;キーワードを効果的に廃止します</target>
        </trans-unit>
        <trans-unit id="98d95623f39adac675ccb2be2bd6b14b6067ad66" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.ecma-international.org/ecma-262/6.0/index.html#sec-reflect.getownpropertydescriptor&quot;&gt;&lt;code&gt;Reflect.getOwnPropertyDescriptor&lt;/code&gt;&lt;/a&gt; effectively deprecates &lt;a href=&quot;https://www.ecma-international.org/ecma-262/6.0/index.html#sec-object.getownpropertydescriptor&quot;&gt;&lt;code&gt;Object.getOwnPropertyDescriptor&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://www.ecma-international.org/ecma-262/6.0/index.html#sec-reflect.getownpropertydescriptor&quot;&gt; &lt;code&gt;Reflect.getOwnPropertyDescriptor&lt;/code&gt; はObject.getOwnPropertyDescriptorを&lt;/a&gt;効果的に非推奨にし&lt;a href=&quot;https://www.ecma-international.org/ecma-262/6.0/index.html#sec-object.getownpropertydescriptor&quot;&gt; &lt;code&gt;Object.getOwnPropertyDescriptor&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f5cf57c883b10dbf0d53b811e29b5e858fd8eb96" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.ecma-international.org/ecma-262/6.0/index.html#sec-reflect.getprototypeof&quot;&gt;&lt;code&gt;Reflect.getPrototypeOf&lt;/code&gt;&lt;/a&gt; effectively deprecates &lt;a href=&quot;https://www.ecma-international.org/ecma-262/6.0/index.html#sec-object.getprototypeof&quot;&gt;&lt;code&gt;Object.getPrototypeOf&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://www.ecma-international.org/ecma-262/6.0/index.html#sec-reflect.getprototypeof&quot;&gt; &lt;code&gt;Reflect.getPrototypeOf&lt;/code&gt; はObject.getPrototypeOfを&lt;/a&gt;効果的に廃止し&lt;a href=&quot;https://www.ecma-international.org/ecma-262/6.0/index.html#sec-object.getprototypeof&quot;&gt; &lt;code&gt;Object.getPrototypeOf&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="79ec6bf57c94a4e542b34ff60eaade246b56faa2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.ecma-international.org/ecma-262/6.0/index.html#sec-reflect.preventextensions&quot;&gt;&lt;code&gt;Reflect.preventExtensions&lt;/code&gt;&lt;/a&gt; effectively deprecates &lt;a href=&quot;https://www.ecma-international.org/ecma-262/6.0/index.html#sec-object.preventextensions&quot;&gt;&lt;code&gt;Object.preventExtensions&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://www.ecma-international.org/ecma-262/6.0/index.html#sec-reflect.preventextensions&quot;&gt; &lt;code&gt;Reflect.preventExtensions&lt;/code&gt; は、Object.preventExtensionsを&lt;/a&gt;効果的に廃止し&lt;a href=&quot;https://www.ecma-international.org/ecma-262/6.0/index.html#sec-object.preventextensions&quot;&gt; &lt;code&gt;Object.preventExtensions&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="34ae939331ae17a815f8cab75df9403c86b39d07" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.ecma-international.org/ecma-262/6.0/index.html#sec-reflect.setprototypeof&quot;&gt;&lt;code&gt;Reflect.setPrototypeOf&lt;/code&gt;&lt;/a&gt; effectively deprecates &lt;a href=&quot;https://www.ecma-international.org/ecma-262/6.0/index.html#sec-object.setprototypeof&quot;&gt;&lt;code&gt;Object.setPrototypeOf&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://www.ecma-international.org/ecma-262/6.0/index.html#sec-reflect.setprototypeof&quot;&gt; &lt;code&gt;Reflect.setPrototypeOf&lt;/code&gt; は&lt;/a&gt;効果的に Object.setPrototypeOfを廃止し&lt;a href=&quot;https://www.ecma-international.org/ecma-262/6.0/index.html#sec-object.setprototypeof&quot;&gt; &lt;code&gt;Object.setPrototypeOf&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="10004dfb2d3815fc3c15f2957529ae5f7a5033b2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.npmjs.com/package/@babel/eslint-parser&quot;&gt;@babel/eslint-parser&lt;/a&gt; - A wrapper around the &lt;a href=&quot;https://babeljs.io&quot;&gt;Babel&lt;/a&gt; parser that makes it compatible with ESLint.</source>
          <target state="translated">&lt;a href=&quot;https://www.npmjs.com/package/@babel/eslint-parser&quot;&gt;@ babel / eslint-parser&lt;/a&gt; - ESLintとの互換性を持たせる&lt;a href=&quot;https://babeljs.io&quot;&gt;Babel&lt;/a&gt;パーサーのラッパー。</target>
        </trans-unit>
        <trans-unit id="897de5a67badea1338bbb34916731c1a4894180e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.npmjs.com/package/@typescript-eslint/parser&quot;&gt;@typescript-eslint/parser&lt;/a&gt; - A parser that converts TypeScript into an ESTree-compatible form so it can be used in ESLint.</source>
          <target state="translated">&lt;a href=&quot;https://www.npmjs.com/package/@typescript-eslint/parser&quot;&gt;@ typescript-eslint / parser&lt;/a&gt; -TypeScriptをESTree互換の形式に変換して、ESLintで使用できるようにするパーサー。</target>
        </trans-unit>
        <trans-unit id="7fa1f8a1dc022e60abd0105ade114d429596dd66" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.npmjs.com/package/babel-eslint&quot;&gt;Babel-ESLint&lt;/a&gt; - A wrapper around the &lt;a href=&quot;https://babeljs.io&quot;&gt;Babel&lt;/a&gt; parser that makes it compatible with ESLint.</source>
          <target state="translated">&lt;a href=&quot;https://www.npmjs.com/package/babel-eslint&quot;&gt;Babel-ESLint-ESLint&lt;/a&gt;との互換性を確保する&lt;a href=&quot;https://babeljs.io&quot;&gt;Babel&lt;/a&gt;パーサーのラッパー。</target>
        </trans-unit>
        <trans-unit id="20f1a4f2bd460de348428e8f47c63f57182eb780" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;no-confusing-arrow&quot;&gt;no-confusing-arrow&lt;/a&gt;&lt;a href=&quot;no-constant-condition&quot;&gt;no-constant-condition&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;no-confusing-arrow&quot;&gt;no-confusing-arrow&lt;/a&gt;&lt;a href=&quot;no-constant-condition&quot;&gt;no-constant-condition&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3ba953f7d67a99e5840f9285e1768ba69e5acde4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;no-spaced-func&quot;&gt;no-spaced-func&lt;/a&gt; (deprecated)</source>
          <target state="translated">&lt;a href=&quot;no-spaced-func&quot;&gt;no-spaced-func&lt;/a&gt;（非推奨）</target>
        </trans-unit>
        <trans-unit id="a786c48c658acfe412b82dc78a52a236a3b7b8a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;no-useless-rename&quot;&gt;&lt;code&gt;no-useless-rename&lt;/code&gt;&lt;/a&gt; which disallows renaming import, export, and destructured assignments to the same name.</source>
          <target state="translated">&lt;a href=&quot;no-useless-rename&quot;&gt; &lt;code&gt;no-useless-rename&lt;/code&gt; &lt;/a&gt;インポート、エクスポート、および構造解除された割り当ての同じ名前への名前変更を許可しないno-useless-rename。</target>
        </trans-unit>
        <trans-unit id="223b4d57a874c694e81c0a25b7953d4d8122873a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;object-curly-spacing&quot;&gt;object-curly-spacing&lt;/a&gt;&lt;a href=&quot;array-bracket-spacing&quot;&gt;array-bracket-spacing&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;object-curly-spacing&quot;&gt;object-curly-spacing&lt;/a&gt;&lt;a href=&quot;array-bracket-spacing&quot;&gt;array-bracket-spacing&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b3babbaafd73e156df5c12efe2575c755d00a703" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;object-shorthand&quot;&gt;&lt;code&gt;object-shorthand&lt;/code&gt;&lt;/a&gt; which can enforce this behavior for properties in object literals.</source>
          <target state="translated">&lt;a href=&quot;object-shorthand&quot;&gt; &lt;code&gt;object-shorthand&lt;/code&gt; &lt;/a&gt;リテラルのプロパティにこの動作を適用できるオブジェクトの省略表現。</target>
        </trans-unit>
        <trans-unit id="0087b22dd6911dd09afc6531bfbf01a080515597" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;space-in-brackets&quot;&gt;space-in-brackets&lt;/a&gt; (deprecated)</source>
          <target state="translated">&lt;a href=&quot;space-in-brackets&quot;&gt;ブラケット内のスペース&lt;/a&gt;（非推奨）</target>
        </trans-unit>
        <trans-unit id="bb234e8bf7f1c7caa539007dc959e695bebe204f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;v4.1.0+.&lt;/b&gt; Sometimes a more fine-controlled configuration is necessary, for example if the configuration for files within the same directory has to be different. Therefore you can provide configurations under the &lt;code&gt;overrides&lt;/code&gt; key that will only apply to files that match specific glob patterns, using the same format you would pass on the command line (e.g., &lt;code&gt;app/**/*.test.js&lt;/code&gt;).</source>
          <target state="translated">&lt;b&gt;v4.1.0以降。&lt;/b&gt;たとえば、同じディレクトリ内のファイルの構成を異なるものにする必要がある場合など、より細かく制御された構成が必要になる場合があります。したがって、コマンドラインで渡すのと同じ形式（ &lt;code&gt;app/**/*.test.js&lt;/code&gt; ）を使用して、特定のglobパターンに一致するファイルにのみ適用される設定を &lt;code&gt;overrides&lt;/code&gt; キーの下で提供できます。</target>
        </trans-unit>
        <trans-unit id="3c06cd97644decac74519b512cdf66b3d96d80bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;*&quot;&lt;/code&gt; is wildcard. This matches any statements.</source>
          <target state="translated">&lt;code&gt;&quot;*&quot;&lt;/code&gt; はワイルドカードです。これは任意のステートメントと一致します。</target>
        </trans-unit>
        <trans-unit id="24c1ad47c5551a251748d8e5faab7ef538627a1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;1tbs&quot;&lt;/code&gt; (default) enforces one true brace style</source>
          <target state="translated">&lt;code&gt;&quot;1tbs&quot;&lt;/code&gt; （デフォルト）は1つの真のブレーススタイルを適用します</target>
        </trans-unit>
        <trans-unit id="0e16410538f814b9fc89842633d57eaf622f1828" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;@foo&quot;&lt;/code&gt; will load &lt;code&gt;@foo/eslint-formatter&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;@foo&quot;&lt;/code&gt; は@foo &lt;code&gt;@foo/eslint-formatter&lt;/code&gt; をロードします。</target>
        </trans-unit>
        <trans-unit id="2722119244b923c5edad90c9df5b56003056add6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;@foo/bar&quot;&lt;/code&gt; will load &lt;code&gt;@foo/eslint-formatter-bar&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;@foo/bar&quot;&lt;/code&gt; &lt;code&gt;@foo/eslint-formatter-bar&lt;/code&gt; / bar」は@foo / eslint-formatter-barをロードします。</target>
        </trans-unit>
        <trans-unit id="1f115f32afca4988bd41e0a111cdec33182fb27c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;ArrayExpression&quot;: true&lt;/code&gt; ignores comma style in array literals</source>
          <target state="translated">&lt;code&gt;&quot;ArrayExpression&quot;: true&lt;/code&gt; は配列リテラルのカンマスタイルを無視します</target>
        </trans-unit>
        <trans-unit id="7d25b2962ca6eb1f54ecf0677a1f4073843fd2ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;ArrayExpression&quot;&lt;/code&gt; (default: 1) enforces indentation level for elements in arrays. It can also be set to the string &lt;code&gt;&quot;first&quot;&lt;/code&gt;, indicating that all the elements in the array should be aligned with the first element.</source>
          <target state="translated">&lt;code&gt;&quot;ArrayExpression&quot;&lt;/code&gt; （デフォルト：1）は、配列の要素にインデントレベルを適用します。文字列 &lt;code&gt;&quot;first&quot;&lt;/code&gt; に設定することもできます。これは、配列内のすべての要素を最初の要素に揃える必要があることを示します。</target>
        </trans-unit>
        <trans-unit id="b287ef22afd1d007ec6c7f6a623d7837819e83cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;ArrayExpression&quot;&lt;/code&gt; (default: 1) enforces indentation level for elements in arrays. It can also be set to the string &lt;code&gt;&quot;first&quot;&lt;/code&gt;, indicating that all the elements in the array should be aligned with the first element. This can also be set to &lt;code&gt;&quot;off&quot;&lt;/code&gt; to disable checking for array elements.</source>
          <target state="translated">&lt;code&gt;&quot;ArrayExpression&quot;&lt;/code&gt; （デフォルト：1）は、配列の要素にインデントレベルを適用します。文字列 &lt;code&gt;&quot;first&quot;&lt;/code&gt; に設定することもできます。これは、配列内のすべての要素を最初の要素に揃える必要があることを示します。これを &lt;code&gt;&quot;off&quot;&lt;/code&gt; に設定して、配列要素のチェックを無効にすることもできます。</target>
        </trans-unit>
        <trans-unit id="71205dd4e3605642e2480dae5eaf63d9484e74cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;ArrayExpression&quot;&lt;/code&gt; configuration for array expressions (if unspecified, this rule will not apply to array expressions)</source>
          <target state="translated">&lt;code&gt;&quot;ArrayExpression&quot;&lt;/code&gt; 配列式の「ArrayExpression」構成（指定されていない場合、このルールは配列式には適用されません）</target>
        </trans-unit>
        <trans-unit id="2652cfacf97a5afc7c8e4ab78bfcceb8bb2a9a8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;ArrayPattern&quot;: true&lt;/code&gt; ignores comma style in array patterns of destructuring</source>
          <target state="translated">&lt;code&gt;&quot;ArrayPattern&quot;: true&lt;/code&gt; 破壊の配列パターンでコンマスタイルを無視します</target>
        </trans-unit>
        <trans-unit id="fc6255d4c5839abc7666f58292fb1ae158338ef1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;ArrayPattern&quot;&lt;/code&gt; configuration for array patterns of destructuring assignments (if unspecified, this rule will not apply to array patterns)</source>
          <target state="translated">&lt;code&gt;&quot;ArrayPattern&quot;&lt;/code&gt; 破壊的割り当ての配列パターンの「ArrayPattern」構成（指定されていない場合、このルールは配列パターンには適用されません）</target>
        </trans-unit>
        <trans-unit id="5abd34fe69c00a7874e447e3ec00f0a79ebb700b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;ArrowFunctionExpression&quot;: true&lt;/code&gt; ignores comma style in the parameters of arrow function expressions</source>
          <target state="translated">&lt;code&gt;&quot;ArrowFunctionExpression&quot;: true&lt;/code&gt; は、矢印関数式のパラメーターのコンマスタイルを無視します</target>
        </trans-unit>
        <trans-unit id="8b4b3befe8c4ca9de1c76da8c3299fe2d9602c19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;CallExpression&quot;: true&lt;/code&gt; ignores comma style in the arguments of function calls</source>
          <target state="translated">&lt;code&gt;&quot;CallExpression&quot;: true&lt;/code&gt; は、関数呼び出しの引数のカンマスタイルを無視します</target>
        </trans-unit>
        <trans-unit id="0a8c126795530c7f3767b419fcce1f8e5a670245" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;CallExpression&quot;&lt;/code&gt; takes an object to define rules for function call expressions.</source>
          <target state="translated">&lt;code&gt;&quot;CallExpression&quot;&lt;/code&gt; は、オブジェクトを使用して、関数呼び出し式のルールを定義します。</target>
        </trans-unit>
        <trans-unit id="d9cd114742b9b3ea62495d92cb07958026647e1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;DoWhileStatement&quot;&lt;/code&gt; - to ignore all &lt;code&gt;do-while&lt;/code&gt; loops.</source>
          <target state="translated">&lt;code&gt;&quot;DoWhileStatement&quot;&lt;/code&gt; -すべての &lt;code&gt;do-while&lt;/code&gt; ループを無視します。</target>
        </trans-unit>
        <trans-unit id="ec94270a3edf58dd473b55afa90f0b5a2a042f80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;ExportDeclaration&quot;&lt;/code&gt; configuration for named exports</source>
          <target state="translated">&lt;code&gt;&quot;ExportDeclaration&quot;&lt;/code&gt; 名前付きエクスポートの「ExportDeclaration」構成</target>
        </trans-unit>
        <trans-unit id="c6e72ba14362b5a634683d43c50ec094e94beb9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;ForInStatement&quot;&lt;/code&gt; - to ignore all &lt;code&gt;for-in&lt;/code&gt; loops.</source>
          <target state="translated">&lt;code&gt;&quot;ForInStatement&quot;&lt;/code&gt; -すべての &lt;code&gt;for-in&lt;/code&gt; ループを無視します。</target>
        </trans-unit>
        <trans-unit id="265c3af59f34ecc3b85161a7fcd9ff3462aab17c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;ForOfStatement&quot;&lt;/code&gt; - to ignore all &lt;code&gt;for-of&lt;/code&gt; loops.</source>
          <target state="translated">&lt;code&gt;&quot;ForOfStatement&quot;&lt;/code&gt; -すべての &lt;code&gt;for-of&lt;/code&gt; ループを無視します。</target>
        </trans-unit>
        <trans-unit id="1d3f8e8d690fee0a62b59df5fc21ae79a7ac1ac3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;ForStatement&quot;&lt;/code&gt; - to ignore all &lt;code&gt;for&lt;/code&gt; loops (does not apply to &lt;code&gt;for-in&lt;/code&gt; and &lt;code&gt;for-of&lt;/code&gt; loops).</source>
          <target state="translated">&lt;code&gt;&quot;ForStatement&quot;&lt;/code&gt; -すべての &lt;code&gt;for&lt;/code&gt; ループを無視します（ &lt;code&gt;for-in&lt;/code&gt; および &lt;code&gt;for-of&lt;/code&gt; ループには適用されません）。</target>
        </trans-unit>
        <trans-unit id="bc09ea9a998a09ac4ac5a86ac852befa6e58dae5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;FunctionDeclaration&quot;: true&lt;/code&gt; ignores comma style in the parameters of function declarations</source>
          <target state="translated">&lt;code&gt;&quot;FunctionDeclaration&quot;: true&lt;/code&gt; は、関数宣言のパラメーターのコンマスタイルを無視します</target>
        </trans-unit>
        <trans-unit id="efb39d2fce0d6b7f97179d6311c980929cfb0fd9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;FunctionDeclaration&quot;&lt;/code&gt; takes an object to define rules for function declarations.</source>
          <target state="translated">&lt;code&gt;&quot;FunctionDeclaration&quot;&lt;/code&gt; は、オブジェクトを取り、関数宣言のルールを定義します。</target>
        </trans-unit>
        <trans-unit id="d6245c55f85eb9ea1a81a0979ac56b6b2f16aae8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;FunctionExpression&quot;: true&lt;/code&gt; ignores comma style in the parameters of function expressions</source>
          <target state="translated">&lt;code&gt;&quot;FunctionExpression&quot;: true&lt;/code&gt; は、関数式のパラメーターのコンマスタイルを無視します</target>
        </trans-unit>
        <trans-unit id="fa9f054968af45b4d8354dfd1b653528221cd19a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;FunctionExpression&quot;&lt;/code&gt; takes an object to define rules for function expressions.</source>
          <target state="translated">&lt;code&gt;&quot;FunctionExpression&quot;&lt;/code&gt; はオブジェクトを取り、関数式のルールを定義します。</target>
        </trans-unit>
        <trans-unit id="abc1af375deea7e79feef2c0374e1449d8c15f4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;IIFEs&quot;&lt;/code&gt; (default &lt;code&gt;false&lt;/code&gt;) include any code included in IIFEs.</source>
          <target state="translated">&lt;code&gt;&quot;IIFEs&quot;&lt;/code&gt; （デフォルトは &lt;code&gt;false&lt;/code&gt; ）には、IIFEに含まれているすべてのコードが含まれます。</target>
        </trans-unit>
        <trans-unit id="f92c8140370607bdee440843761fd85b89d9dd21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;ImportDeclaration&quot;: true&lt;/code&gt; ignores comma style in the specifiers of import declarations</source>
          <target state="translated">&lt;code&gt;&quot;ImportDeclaration&quot;: true&lt;/code&gt; はインポート宣言の指定子のコンマスタイルを無視します</target>
        </trans-unit>
        <trans-unit id="01e41f224836dfde9e3219f82ee6c93644196b72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;ImportDeclaration&quot;&lt;/code&gt; (default: 1) enforces indentation level for import statements. It can be set to the string &lt;code&gt;&quot;first&quot;&lt;/code&gt;, indicating that all imported members from a module should be aligned with the first member in the list. This can also be set to &lt;code&gt;&quot;off&quot;&lt;/code&gt; to disable checking for imported module members.</source>
          <target state="translated">&lt;code&gt;&quot;ImportDeclaration&quot;&lt;/code&gt; （デフォルト：1）は、インポート文にインデントレベルを適用します。これは文字列 &lt;code&gt;&quot;first&quot;&lt;/code&gt; に設定できます。これは、モジュールからインポートされたすべてのメンバーをリストの最初のメンバーに揃える必要があることを示します。これを &lt;code&gt;&quot;off&quot;&lt;/code&gt; に設定して、インポートされたモジュールメンバーのチェックを無効にすることもできます。</target>
        </trans-unit>
        <trans-unit id="a8597bd13dd738247cb86d7053855ca29a0188c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;ImportDeclaration&quot;&lt;/code&gt; configuration for named imports</source>
          <target state="translated">&lt;code&gt;&quot;ImportDeclaration&quot;&lt;/code&gt; 名前付きインポートの「ImportDeclaration」構成</target>
        </trans-unit>
        <trans-unit id="095ff3b8398df9bcfbd9149a9c044039d5811cdb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;MemberExpression&quot;&lt;/code&gt; (default: 1) enforces indentation level for multi-line property chains. This can also be set to &lt;code&gt;&quot;off&quot;&lt;/code&gt; to disable checking for MemberExpression indentation.</source>
          <target state="translated">&lt;code&gt;&quot;MemberExpression&quot;&lt;/code&gt; （デフォルト：1）は、複数行のプロパティチェーンにインデントレベルを適用します。これを &lt;code&gt;&quot;off&quot;&lt;/code&gt; に設定して、MemberExpressionインデントのチェックを無効にすることもできます。</target>
        </trans-unit>
        <trans-unit id="1183669e5af5e9af541eb4061e5bddf03635c954" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;MemberExpression&quot;&lt;/code&gt; (off by default) enforces indentation level for multi-line property chains (except in variable declarations and assignments)</source>
          <target state="translated">&lt;code&gt;&quot;MemberExpression&quot;&lt;/code&gt; （デフォルトではオフ）は、複数行のプロパティチェーンにインデントレベルを適用します（変数の宣言と割り当てを除く）</target>
        </trans-unit>
        <trans-unit id="fe98b9a8c56562a8f15a40bbbf162daa6c09f301" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;NewExpression&quot;: true&lt;/code&gt; ignores comma style in the parameters of constructor expressions</source>
          <target state="translated">&lt;code&gt;&quot;NewExpression&quot;: true&lt;/code&gt; は、コンストラクター式のパラメーターのコンマスタイルを無視します</target>
        </trans-unit>
        <trans-unit id="21d4b160b0d1deb9ef8915cced1806da4438b228" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;ObjectExpression&quot;: true&lt;/code&gt; ignores comma style in object literals</source>
          <target state="translated">&lt;code&gt;&quot;ObjectExpression&quot;: true&lt;/code&gt; はオブジェクトリテラルのカンマスタイルを無視します</target>
        </trans-unit>
        <trans-unit id="a39daf3622bdc9d13b2b049c9caff96f4d2c093c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;ObjectExpression&quot;&lt;/code&gt; (default: 1) enforces indentation level for properties in objects. It can be set to the string &lt;code&gt;&quot;first&quot;&lt;/code&gt;, indicating that all properties in the object should be aligned with the first property.</source>
          <target state="translated">&lt;code&gt;&quot;ObjectExpression&quot;&lt;/code&gt; （デフォルト：1）は、オブジェクトのプロパティにインデントレベルを適用します。これは文字列 &lt;code&gt;&quot;first&quot;&lt;/code&gt; に設定でき、オブジェクトのすべてのプロパティを最初のプロパティに揃える必要があることを示します。</target>
        </trans-unit>
        <trans-unit id="2e5c066c40bc8ac40f960eb2858967c529f71886" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;ObjectExpression&quot;&lt;/code&gt; (default: 1) enforces indentation level for properties in objects. It can be set to the string &lt;code&gt;&quot;first&quot;&lt;/code&gt;, indicating that all properties in the object should be aligned with the first property. This can also be set to &lt;code&gt;&quot;off&quot;&lt;/code&gt; to disable checking for object properties.</source>
          <target state="translated">&lt;code&gt;&quot;ObjectExpression&quot;&lt;/code&gt; （デフォルト：1）は、オブジェクトのプロパティにインデントレベルを適用します。これは文字列 &lt;code&gt;&quot;first&quot;&lt;/code&gt; に設定でき、オブジェクトのすべてのプロパティを最初のプロパティに揃える必要があることを示します。これを &lt;code&gt;&quot;off&quot;&lt;/code&gt; に設定して、オブジェクトプロパティのチェックを無効にすることもできます。</target>
        </trans-unit>
        <trans-unit id="9f3bda7062c748c1512bca1a9fcdb1c61d86d9a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;ObjectExpression&quot;&lt;/code&gt; configuration for object literals</source>
          <target state="translated">&lt;code&gt;&quot;ObjectExpression&quot;&lt;/code&gt; オブジェクトリテラルの「ObjectExpression」構成</target>
        </trans-unit>
        <trans-unit id="a7c8a4b119325c0a8232d531e9b59666ca5db8a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;ObjectPattern&quot;: true&lt;/code&gt; ignores comma style in object patterns of destructuring</source>
          <target state="translated">&lt;code&gt;&quot;ObjectPattern&quot;: true&lt;/code&gt; 破壊のオブジェクトパターンのコンマスタイルを無視します</target>
        </trans-unit>
        <trans-unit id="1b19e6e017192d17dd6bcd60f6008e40e21036a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;ObjectPattern&quot;&lt;/code&gt; configuration for object patterns of destructuring assignments</source>
          <target state="translated">&lt;code&gt;&quot;ObjectPattern&quot;&lt;/code&gt; 構造化割り当てのオブジェクトパターンの「ObjectPattern」構成</target>
        </trans-unit>
        <trans-unit id="3aabb37a059f7f39be5d4ae1c35b2df8fd7075f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;SwitchCase&quot;&lt;/code&gt; (default: 0) enforces indentation level for &lt;code&gt;case&lt;/code&gt; clauses in &lt;code&gt;switch&lt;/code&gt; statements</source>
          <target state="translated">&lt;code&gt;&quot;SwitchCase&quot;&lt;/code&gt; （デフォルト：0）は、 &lt;code&gt;switch&lt;/code&gt; ステートメントの &lt;code&gt;case&lt;/code&gt; 句にインデントレベルを適用します</target>
        </trans-unit>
        <trans-unit id="eb105edb99ba8bdf778b7f6434c03aa8d0a1a98d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;VariableDeclaration&quot;: true&lt;/code&gt; ignores comma style in variable declarations</source>
          <target state="translated">&lt;code&gt;&quot;VariableDeclaration&quot;: true&lt;/code&gt; 変数宣言でコンマスタイルを無視します</target>
        </trans-unit>
        <trans-unit id="6466cc4d003266ab46bde545c724c1a0cc1f3b35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;VariableDeclarator&quot;&lt;/code&gt; (default: 1) enforces indentation level for &lt;code&gt;var&lt;/code&gt; declarators; can also take an object to define separate rules for &lt;code&gt;var&lt;/code&gt;, &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt; declarations.</source>
          <target state="translated">&lt;code&gt;&quot;VariableDeclarator&quot;&lt;/code&gt; （デフォルト：1）は、 &lt;code&gt;var&lt;/code&gt; 宣言子にインデントレベルを適用します。オブジェクトを使用して、 &lt;code&gt;var&lt;/code&gt; 、 &lt;code&gt;let&lt;/code&gt; 、および &lt;code&gt;const&lt;/code&gt; 宣言の個別のルールを定義することもできます。</target>
        </trans-unit>
        <trans-unit id="acd2383c7b9da4ade06627f48ce3f14fd7fc6b3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;VariableDeclarator&quot;&lt;/code&gt; (default: 1) enforces indentation level for &lt;code&gt;var&lt;/code&gt; declarators; can also take an object to define separate rules for &lt;code&gt;var&lt;/code&gt;, &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt; declarations. It can also be &lt;code&gt;&quot;first&quot;&lt;/code&gt;, indicating all the declarators should be aligned with the first declarator.</source>
          <target state="translated">&lt;code&gt;&quot;VariableDeclarator&quot;&lt;/code&gt; （デフォルト：1）は、 &lt;code&gt;var&lt;/code&gt; 宣言子にインデントレベルを適用します。オブジェクトを使用して、 &lt;code&gt;var&lt;/code&gt; 、 &lt;code&gt;let&lt;/code&gt; 、および &lt;code&gt;const&lt;/code&gt; 宣言の個別のルールを定義することもできます。 &lt;code&gt;&quot;first&quot;&lt;/code&gt; にすることもできます。これは、すべての宣言子を最初の宣言子と揃える必要があることを示します。</target>
        </trans-unit>
        <trans-unit id="0d36793dcb4f372f3df6a307da4e7fb3c89d068c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;WhileStatement&quot;&lt;/code&gt; - to ignore all &lt;code&gt;while&lt;/code&gt; loops.</source>
          <target state="translated">&lt;code&gt;&quot;WhileStatement&quot;&lt;/code&gt; -すべての &lt;code&gt;while&lt;/code&gt; ループを無視します。</target>
        </trans-unit>
        <trans-unit id="b486cd08b6d74197923e55add7c0007fd28fb23b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;after&quot;: false&lt;/code&gt; disallows spaces after colons.</source>
          <target state="translated">&lt;code&gt;&quot;after&quot;: false&lt;/code&gt; は、コロンの後のスペースを許可しません。</target>
        </trans-unit>
        <trans-unit id="e686acb528777b765b26d8a80ac0940f369aaeaf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;after&quot;: false&lt;/code&gt; disallows spaces after commas</source>
          <target state="translated">&lt;code&gt;&quot;after&quot;: false&lt;/code&gt; はコンマの後のスペースを許可しません</target>
        </trans-unit>
        <trans-unit id="8dd618bd7e72aeafa9a358a87e1ecc9b0804f2e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;after&quot;: false&lt;/code&gt; disallows spaces after keywords</source>
          <target state="translated">&lt;code&gt;&quot;after&quot;: false&lt;/code&gt; はキーワードの後のスペースを許可しません</target>
        </trans-unit>
        <trans-unit id="8702400d6a2fd0c693f4487b7e3390597f59e49d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;after&quot;: true&lt;/code&gt; (Default) requires one or more spaces after colons.</source>
          <target state="translated">&lt;code&gt;&quot;after&quot;: true&lt;/code&gt; （デフォルト）は、コロンの後に1つ以上のスペースが必要です。</target>
        </trans-unit>
        <trans-unit id="d6d2bdeda4468cd207abf93bfe465e38db381749" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;after&quot;: true&lt;/code&gt; (default) requires at least one space after keywords</source>
          <target state="translated">&lt;code&gt;&quot;after&quot;: true&lt;/code&gt; （デフォルト）では、キーワードの後に​​少なくとも1つのスペースが必要です</target>
        </trans-unit>
        <trans-unit id="1a9530d762ff04e8b83faad6eec21447ee68bf5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;after&quot;: true&lt;/code&gt; (default) requires one or more spaces after commas</source>
          <target state="translated">&lt;code&gt;&quot;after&quot;: true&lt;/code&gt; （デフォルト）では、コンマの後に1つ以上のスペースが必要です。</target>
        </trans-unit>
        <trans-unit id="3f68deed1be5cabfa8275d6592490da6a0d49278" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;after&quot;&lt;/code&gt; requires linebreaks to be placed after the operator</source>
          <target state="translated">&lt;code&gt;&quot;after&quot;&lt;/code&gt; では、改行をオペレーターの後に配置する必要があります</target>
        </trans-unit>
        <trans-unit id="f027d4c8aef1a57901328b9fe5af5748f9cb0143" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;afterBlockComment&quot;: true&lt;/code&gt; requires an empty line after block comments</source>
          <target state="translated">&lt;code&gt;&quot;afterBlockComment&quot;: true&lt;/code&gt; ブロックコメントの後にtrueを指定すると、空の行が必要になります</target>
        </trans-unit>
        <trans-unit id="67f1b8e59c268c84a9eed6aee8c34cc83bb98d42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;afterLineComment&quot;: true&lt;/code&gt; requires an empty line after line comments</source>
          <target state="translated">&lt;code&gt;&quot;afterLineComment&quot;: true&lt;/code&gt; 場合、行コメントの後に空行が必要です</target>
        </trans-unit>
        <trans-unit id="a56a5cb923a12d5980597b6a2f2c9b473f6847f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;align&quot;&lt;/code&gt; with an object value allows for fine-grained spacing when values are being aligned in object literals.</source>
          <target state="translated">&lt;code&gt;&quot;align&quot;&lt;/code&gt; オブジェクトリテラルで値が整列されている場合、オブジェクト値と「整列」することにより、細かい間隔を設定できます。</target>
        </trans-unit>
        <trans-unit id="782a03670accefaa977cdd8a8e2ccbb976c546c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;all&quot;&lt;/code&gt; (default) disallows unnecessary parentheses around &lt;em&gt;any&lt;/em&gt; expression</source>
          <target state="translated">&lt;code&gt;&quot;all&quot;&lt;/code&gt; （デフォルト）は&lt;em&gt;、&lt;/em&gt;式を不要な括弧で囲みません。</target>
        </trans-unit>
        <trans-unit id="edb8208f5d680b568c2e9584582ca9e013a8a075" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;all&quot;&lt;/code&gt; - If all variables in destructuring should be &lt;code&gt;const&lt;/code&gt;, this rule warns the variables. Otherwise, ignores them.</source>
          <target state="translated">&lt;code&gt;&quot;all&quot;&lt;/code&gt; -構造化のすべての変数を &lt;code&gt;const&lt;/code&gt; にする必要がある場合、このルールは変数に警告します。それ以外の場合は無視します。</target>
        </trans-unit>
        <trans-unit id="99ef21a8554839972badaf92a31e56b02b3284c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;allman&quot;&lt;/code&gt; enforces Allman style</source>
          <target state="translated">&lt;code&gt;&quot;allman&quot;&lt;/code&gt; オールマンスタイルを適用します</target>
        </trans-unit>
        <trans-unit id="a6425207fa9f9f8eb788c66c7e5e1dfc74089840" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;allow&quot;&lt;/code&gt; (&lt;code&gt;empty&lt;/code&gt; by default) - Each entry in this array can be one of &lt;code&gt;~&lt;/code&gt;, &lt;code&gt;!!&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt; or &lt;code&gt;*&lt;/code&gt; that are to be allowed.</source>
          <target state="translated">&lt;code&gt;&quot;allow&quot;&lt;/code&gt; （デフォルトでは &lt;code&gt;empty&lt;/code&gt; ）-この配列の各エントリは &lt;code&gt;~&lt;/code&gt; 、 &lt;code&gt;!!&lt;/code&gt; 、 &lt;code&gt;+&lt;/code&gt; 、または &lt;code&gt;*&lt;/code&gt; が許可されます。</target>
        </trans-unit>
        <trans-unit id="0750cd4fda5d9f76961af06d26844d0487110302" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;allow&quot;&lt;/code&gt; allows specified identifiers to have dangling underscores</source>
          <target state="translated">&lt;code&gt;&quot;allow&quot;&lt;/code&gt; は、指定された識別子にダングリングアンダースコアを許可します</target>
        </trans-unit>
        <trans-unit id="5aeab13c5407553b1774a9d5975c01c68c8be99a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;allow&quot;&lt;/code&gt; has an array of strings which are allowed methods of the &lt;code&gt;console&lt;/code&gt; object</source>
          <target state="translated">&lt;code&gt;&quot;allow&quot;&lt;/code&gt; には、 &lt;code&gt;console&lt;/code&gt; オブジェクトのメソッドとして許可される文字列の配列があります。</target>
        </trans-unit>
        <trans-unit id="94d0d62533feaf779f18c78c1223b31e30429dd0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;allow&quot;&lt;/code&gt;: Allows a list of bitwise operators to be used as exceptions.</source>
          <target state="translated">&lt;code&gt;&quot;allow&quot;&lt;/code&gt; ：ビットごとの演算子のリストを例外として使用できるようにします。</target>
        </trans-unit>
        <trans-unit id="d2ecaa13d68f18a009177bc2c94c9f291c68b97e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;allowAfterSuper&quot;: false&lt;/code&gt; (default) disallows dangling underscores in members of the &lt;code&gt;super&lt;/code&gt; object</source>
          <target state="translated">&lt;code&gt;&quot;allowAfterSuper&quot;: false&lt;/code&gt; （デフォルト）は、 &lt;code&gt;super&lt;/code&gt; オブジェクトのメンバーのダングリングアンダースコアを許可しません。</target>
        </trans-unit>
        <trans-unit id="70de077db4ce707a1703a7249d0ebcaa8b09e6da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;allowAfterThis&quot;: false&lt;/code&gt; (default) disallows dangling underscores in members of the &lt;code&gt;this&lt;/code&gt; object</source>
          <target state="translated">&lt;code&gt;&quot;allowAfterThis&quot;: false&lt;/code&gt; （デフォルト） &lt;code&gt;this&lt;/code&gt; オブジェクトのメンバーのダングリングアンダースコアを許可しません</target>
        </trans-unit>
        <trans-unit id="78e010d94d79643c909190f36ad2887bba5d651f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;allowAfterThisConstructor&quot;: false&lt;/code&gt; (default) disallows dangling underscores in members of the &lt;code&gt;this.constructor&lt;/code&gt; object</source>
          <target state="translated">&lt;code&gt;&quot;allowAfterThisConstructor&quot;: false&lt;/code&gt; （デフォルト）は、 &lt;code&gt;this.constructor&lt;/code&gt; オブジェクトのメンバーのダングリングアンダースコアを禁止します</target>
        </trans-unit>
        <trans-unit id="043392b1f967e9cf2a2f304922db3e455ab0b4eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;allowArrayEnd&quot;: true&lt;/code&gt; allows comments to appear at the end of array literals</source>
          <target state="translated">&lt;code&gt;&quot;allowArrayEnd&quot;: true&lt;/code&gt; 指定すると、配列リテラルの最後にコメントを表示できます</target>
        </trans-unit>
        <trans-unit id="7589d74c4323fee10db507d3c860ac06d8ec947f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;allowArrayStart&quot;: true&lt;/code&gt; allows comments to appear at the start of array literals</source>
          <target state="translated">&lt;code&gt;&quot;allowArrayStart&quot;: true&lt;/code&gt; 指定すると、配列リテラルの先頭にコメントを表示できます</target>
        </trans-unit>
        <trans-unit id="311ded2316f47ea703608c263a5880ba8208fb20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;allowArrowFunctions&quot;: true&lt;/code&gt; (default &lt;code&gt;false&lt;/code&gt;) allows the use of arrow functions (honoured only when using &lt;code&gt;declaration&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;&quot;allowArrowFunctions&quot;: true&lt;/code&gt; （デフォルトは &lt;code&gt;false&lt;/code&gt; ）は、矢印関数の使用を許可します（ &lt;code&gt;declaration&lt;/code&gt; を使用する場合にのみ称えられます）</target>
        </trans-unit>
        <trans-unit id="ec97a5fb6a12311cad7d7eb7123ef0225d53c722" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;allowArrowFunctions&quot;&lt;/code&gt;: &lt;code&gt;true&lt;/code&gt; (default &lt;code&gt;false&lt;/code&gt;) allows the use of arrow functions. This option applies only when the string option is set to &lt;code&gt;&quot;declaration&quot;&lt;/code&gt; (arrow functions are always allowed when the string option is set to &lt;code&gt;&quot;expression&quot;&lt;/code&gt;, regardless of this option)</source>
          <target state="translated">&lt;code&gt;&quot;allowArrowFunctions&quot;&lt;/code&gt; ： &lt;code&gt;true&lt;/code&gt; （デフォルトは &lt;code&gt;false&lt;/code&gt; ）は、矢印関数の使用を許可します。このオプションは、文字列オプションが &lt;code&gt;&quot;declaration&quot;&lt;/code&gt; 設定されている場合にのみ適用されます（このオプションに関係なく、文字列オプションが &lt;code&gt;&quot;expression&quot;&lt;/code&gt; 設定されている場合、矢印関数は常に許可されます）</target>
        </trans-unit>
        <trans-unit id="c2d664b52d4e2dd10384be17d3e9eb6d10cfd1e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;allowBlockEnd&quot;: true&lt;/code&gt; allows comments to appear at the end of block statements</source>
          <target state="translated">&lt;code&gt;&quot;allowBlockEnd&quot;: true&lt;/code&gt; 指定すると、ブロックステートメントの最後にコメントを表示できます</target>
        </trans-unit>
        <trans-unit id="7acc3daf7da620b448e2e91885ab8d8da3f2b546" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;allowBlockStart&quot;: true&lt;/code&gt; allows comments to appear at the start of block statements</source>
          <target state="translated">&lt;code&gt;&quot;allowBlockStart&quot;: true&lt;/code&gt; 指定すると、ブロックステートメントの先頭にコメントを表示できます</target>
        </trans-unit>
        <trans-unit id="163aee0edaa5205733d17d95842cbea76ff2acfe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;allowClassEnd&quot;: true&lt;/code&gt; allows comments to appear at the end of classes</source>
          <target state="translated">&lt;code&gt;&quot;allowClassEnd&quot;: true&lt;/code&gt; 指定すると、クラスの最後にコメントを表示できます</target>
        </trans-unit>
        <trans-unit id="2eb7004932854b869158ae6327d4fd9516ed417a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;allowClassStart&quot;: true&lt;/code&gt; allows comments to appear at the start of classes</source>
          <target state="translated">&lt;code&gt;&quot;allowClassStart&quot;: true&lt;/code&gt; 指定すると、クラスの先頭にコメントを表示できます</target>
        </trans-unit>
        <trans-unit id="ba3f1a264fd1429542efddfd48d89c9843a66001" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;allowConstructorFlags&quot;&lt;/code&gt; is an array of flags</source>
          <target state="translated">&lt;code&gt;&quot;allowConstructorFlags&quot;&lt;/code&gt; はフラグの配列です</target>
        </trans-unit>
        <trans-unit id="271d05daa7a9566bd0a06038cd1e515a220bddd9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;allowEmptyCatch&quot;: true&lt;/code&gt; allows empty &lt;code&gt;catch&lt;/code&gt; clauses (that is, which do not contain a comment)</source>
          <target state="translated">&lt;code&gt;&quot;allowEmptyCatch&quot;: true&lt;/code&gt; は空の &lt;code&gt;catch&lt;/code&gt; 句（つまり、コメントを含まない）を許可します</target>
        </trans-unit>
        <trans-unit id="3b6dccb48de8619b58f1c1c31bb23f7ab003cbba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;allowForLoopAfterthoughts&quot;: true&lt;/code&gt; allows unary operators &lt;code&gt;++&lt;/code&gt; and &lt;code&gt;--&lt;/code&gt; in the afterthought (final expression) of a &lt;code&gt;for&lt;/code&gt; loop.</source>
          <target state="translated">&lt;code&gt;&quot;allowForLoopAfterthoughts&quot;: true&lt;/code&gt; は、 &lt;code&gt;for&lt;/code&gt; ループの後置（最終式）で、 &lt;code&gt;++&lt;/code&gt; および &lt;code&gt;--&lt;/code&gt; 単項演算子を許可します。</target>
        </trans-unit>
        <trans-unit id="32ea44ace4a236795f8ff57fde6f72fd30773485" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;allowFunctionParams&quot;: true&lt;/code&gt; (default) allows dangling underscores in function parameter names</source>
          <target state="translated">&lt;code&gt;&quot;allowFunctionParams&quot;: true&lt;/code&gt; （デフォルト）は、関数パラメーター名にぶら下がっているアンダースコアを許可します</target>
        </trans-unit>
        <trans-unit id="cf1ca024933b2b9abdab039806c626d360589496" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;allowImplicit&quot;: false&lt;/code&gt; (default) When set to &lt;code&gt;true&lt;/code&gt;, allows callbacks of methods that require a return value to implicitly return &lt;code&gt;undefined&lt;/code&gt; with a &lt;code&gt;return&lt;/code&gt; statement containing no expression.</source>
          <target state="translated">&lt;code&gt;&quot;allowImplicit&quot;: false&lt;/code&gt; （デフォルト） &lt;code&gt;true&lt;/code&gt; に設定すると、戻り値を必要とするメソッドのコールバックが、式を含まない &lt;code&gt;return&lt;/code&gt; ステートメントで暗黙的に &lt;code&gt;undefined&lt;/code&gt; を返すことができます。</target>
        </trans-unit>
        <trans-unit id="ca64fc3d886465475b38d1303643e55390a60119" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;allowImplicit&quot;: false&lt;/code&gt; (default) When set to true, allows implicitly returning &lt;code&gt;undefined&lt;/code&gt; with a &lt;code&gt;return&lt;/code&gt; statement containing no expression.</source>
          <target state="translated">&lt;code&gt;&quot;allowImplicit&quot;: false&lt;/code&gt; （デフォルト）trueに設定すると、式を含まない &lt;code&gt;return&lt;/code&gt; ステートメントで暗黙的に &lt;code&gt;undefined&lt;/code&gt; を返すことができます。</target>
        </trans-unit>
        <trans-unit id="197b1b24f8aadd911b21b26658ba73f8617dfea5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;allowImplicit&quot;: false&lt;/code&gt; (default) disallows implicitly returning &lt;code&gt;undefined&lt;/code&gt; with a &lt;code&gt;return&lt;/code&gt; statement.</source>
          <target state="translated">&lt;code&gt;&quot;allowImplicit&quot;: false&lt;/code&gt; （デフォルト）は、 &lt;code&gt;return&lt;/code&gt; ステートメントで &lt;code&gt;undefined&lt;/code&gt; を暗黙的に返すことを許可しません。</target>
        </trans-unit>
        <trans-unit id="af2d515e54b3ac3dcac18d73be6b54a33590235f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;allowLoop&quot;&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;, default is &lt;code&gt;false&lt;/code&gt;) - If this option was set &lt;code&gt;true&lt;/code&gt;, this rule ignores labels which are sticking to loop statements.</source>
          <target state="translated">&lt;code&gt;&quot;allowLoop&quot;&lt;/code&gt; （ &lt;code&gt;boolean&lt;/code&gt; 、デフォルトは &lt;code&gt;false&lt;/code&gt; ）-このオプションが &lt;code&gt;true&lt;/code&gt; に設定されている場合、このルールはループステートメントに固執しているラベルを無視します。</target>
        </trans-unit>
        <trans-unit id="11c1cfde894d94ec0fd76b4889639f3945f7eb8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;allowObjectEnd&quot;: true&lt;/code&gt; allows comments to appear at the end of object literals</source>
          <target state="translated">&lt;code&gt;&quot;allowObjectEnd&quot;: true&lt;/code&gt; 、オブジェクトリテラルの最後にコメントを表示できます</target>
        </trans-unit>
        <trans-unit id="11edea3ddc8c7e8502c84d59d2457109c39fd60e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;allowObjectStart&quot;: true&lt;/code&gt; allows comments to appear at the start of object literals</source>
          <target state="translated">&lt;code&gt;&quot;allowObjectStart&quot;: true&lt;/code&gt; 指定すると、コメントをオブジェクトリテラルの先頭に表示できます</target>
        </trans-unit>
        <trans-unit id="ea4b510dddcb63dd10463d0b107a98b543687c4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;allowSingleLine&quot;: true&lt;/code&gt; (default &lt;code&gt;false&lt;/code&gt;) allows the opening and closing braces for a block to be on the &lt;em&gt;same&lt;/em&gt; line</source>
          <target state="translated">&lt;code&gt;&quot;allowSingleLine&quot;: true&lt;/code&gt; （デフォルトは &lt;code&gt;false&lt;/code&gt; ）は、ブロックの開始と終了の波括弧が&lt;em&gt;同じ&lt;/em&gt;行にあることを許可します</target>
        </trans-unit>
        <trans-unit id="be24b11b9f6df441520618fed8333db001f297ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;allowSingleLineBlocks&quot;: true&lt;/code&gt; allows single-line blocks</source>
          <target state="translated">&lt;code&gt;&quot;allowSingleLineBlocks&quot;: true&lt;/code&gt; は単一行ブロックを許可します</target>
        </trans-unit>
        <trans-unit id="514a0329438244d55338d2863031b08a8066baae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;allowSwitch&quot;&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;, default is &lt;code&gt;false&lt;/code&gt;) - If this option was set &lt;code&gt;true&lt;/code&gt;, this rule ignores labels which are sticking to switch statements.</source>
          <target state="translated">&lt;code&gt;&quot;allowSwitch&quot;&lt;/code&gt; （ &lt;code&gt;boolean&lt;/code&gt; 、デフォルトは &lt;code&gt;false&lt;/code&gt; ）-このオプションが &lt;code&gt;true&lt;/code&gt; に設定されている場合、このルールはswitchステートメントに固執しているラベルを無視します。</target>
        </trans-unit>
        <trans-unit id="7143d0684332c367d78a4929cabd7f4b77e95c38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;allowTemplateLiterals&quot;: true&lt;/code&gt; allows strings to use backticks</source>
          <target state="translated">&lt;code&gt;&quot;allowTemplateLiterals&quot;: true&lt;/code&gt; 、文字列でバックティックを使用できます</target>
        </trans-unit>
        <trans-unit id="d99aa33d13e7120f4075169c095b981d98a08697" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;always&quot;&lt;/code&gt; (default) enforces blank newlines around directives.</source>
          <target state="translated">&lt;code&gt;&quot;always&quot;&lt;/code&gt; （デフォルト）は、ディレクティブの周囲に空白の改行を適用します。</target>
        </trans-unit>
        <trans-unit id="ef3ddce290585487fbbfb32903915ba4c0dd8387" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;always&quot;&lt;/code&gt; (default) enforces newlines between the operands of a ternary expression.</source>
          <target state="translated">&lt;code&gt;&quot;always&quot;&lt;/code&gt; （デフォルト）は、3項式のオペランド間に改行を適用します。</target>
        </trans-unit>
        <trans-unit id="059901592070479e0a0f03010e39362524f37fe9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;always&quot;&lt;/code&gt; (default) enforces that files end with a newline (LF)</source>
          <target state="translated">&lt;code&gt;&quot;always&quot;&lt;/code&gt; （デフォルト）は、ファイルが改行（LF）で終わることを強制します</target>
        </trans-unit>
        <trans-unit id="337ae8c83ee6a71ebf5da0487f2d58882f984ff6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;always&quot;&lt;/code&gt; (default) expects that the shorthand will be used whenever possible.</source>
          <target state="translated">&lt;code&gt;&quot;always&quot;&lt;/code&gt; （デフォルト）は、可能な限り省略形が使用されることを想定しています。</target>
        </trans-unit>
        <trans-unit id="c9e59b4349241d0f082d065a2ff5e8c132426709" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;always&quot;&lt;/code&gt; (default) requires an empty line after &lt;code&gt;var&lt;/code&gt;, &lt;code&gt;let&lt;/code&gt;, or &lt;code&gt;const&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&quot;always&quot;&lt;/code&gt; （デフォルト）では、 &lt;code&gt;var&lt;/code&gt; 、 &lt;code&gt;let&lt;/code&gt; 、または &lt;code&gt;const&lt;/code&gt; の後に空行が必要です</target>
        </trans-unit>
        <trans-unit id="e4cedf287ce61de57af7e88a4754d395b376f16d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;always&quot;&lt;/code&gt; (default) requires assignment operator shorthand where possible</source>
          <target state="translated">&lt;code&gt;&quot;always&quot;&lt;/code&gt; （デフォルト）は、可能な場合は代入演算子の省略表現を必要とします</target>
        </trans-unit>
        <trans-unit id="c2de8016fe1b70cfc55552e19df0a17e0022b582" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;always&quot;&lt;/code&gt; (default) requires empty lines at the beginning and ending of block statements and classes</source>
          <target state="translated">&lt;code&gt;&quot;always&quot;&lt;/code&gt; （デフォルト）では、ブロックステートメントとクラスの最初と最後に空の行が必要です</target>
        </trans-unit>
        <trans-unit id="1ebf5f6ed47b7f8a2635a5f2119c7e7cb16e5591" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;always&quot;&lt;/code&gt; (default) requires function expressions to have a name</source>
          <target state="translated">&lt;code&gt;&quot;always&quot;&lt;/code&gt; （デフォルト）では、関数式に名前を付ける必要があります</target>
        </trans-unit>
        <trans-unit id="e3c4b736c06a84993ed17907f6ccd5c87f56aa75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;always&quot;&lt;/code&gt; (default) requires line breaks between arguments</source>
          <target state="translated">&lt;code&gt;&quot;always&quot;&lt;/code&gt; （デフォルト）は、引数の間に改行が必要です</target>
        </trans-unit>
        <trans-unit id="f3f766c5a2aeb002445c1d7b47c0502770020146" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;always&quot;&lt;/code&gt; (default) requires line breaks between array elements</source>
          <target state="translated">&lt;code&gt;&quot;always&quot;&lt;/code&gt; （デフォルト）は、配列要素間に改行が必要です</target>
        </trans-unit>
        <trans-unit id="6175b184a6b9584bdc09f54ab970df02539bdb75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;always&quot;&lt;/code&gt; (default) requires one or more spaces</source>
          <target state="translated">&lt;code&gt;&quot;always&quot;&lt;/code&gt; （デフォルト）には1つ以上のスペースが必要</target>
        </trans-unit>
        <trans-unit id="549054fe744a865a6e6bb593e7fdf272bbb20e72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;always&quot;&lt;/code&gt; (default) requires one variable declaration per scope</source>
          <target state="translated">&lt;code&gt;&quot;always&quot;&lt;/code&gt; （デフォルト）では、スコープごとに1つの変数宣言が必要です</target>
        </trans-unit>
        <trans-unit id="2f819ed9f9d5c0284fcefe80aa59239d00625f3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;always&quot;&lt;/code&gt; (default) requires parens around arguments in all cases.</source>
          <target state="translated">&lt;code&gt;&quot;always&quot;&lt;/code&gt; （デフォルト）では、すべての場合に引数を括弧で囲む必要があります。</target>
        </trans-unit>
        <trans-unit id="69e75d9265e24a3bbdd178bf17e20190330591d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;always&quot;&lt;/code&gt; (default) requires quotes around all object literal property names</source>
          <target state="translated">&lt;code&gt;&quot;always&quot;&lt;/code&gt; （デフォルト）では、すべてのオブジェクトリテラルプロパティ名を引用符で囲む必要があります</target>
        </trans-unit>
        <trans-unit id="b28ac4a4915010fa821adebdc5cb395a91bbfb0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;always&quot;&lt;/code&gt; (default) requires semicolons at the end of statements</source>
          <target state="translated">&lt;code&gt;&quot;always&quot;&lt;/code&gt; （デフォルト）は、ステートメントの最後にセミコロンが必要です</target>
        </trans-unit>
        <trans-unit id="e63e736441aeb185fa46573832618e858cd69ae0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;always&quot;&lt;/code&gt; - Requires one or more spaces between a tag function and its template literal.</source>
          <target state="translated">&lt;code&gt;&quot;always&quot;&lt;/code&gt; -タグ関数とそのテンプレートリテラルの間に1つ以上のスペースが必要です。</target>
        </trans-unit>
        <trans-unit id="424ed021ae99dce1eec7d6fe45011675e5e974ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;always&quot;&lt;/code&gt; - Requires one or more spaces inside of the curly brace pair.</source>
          <target state="translated">&lt;code&gt;&quot;always&quot;&lt;/code&gt; -中括弧ペアの内側に1つ以上のスペースが必要です。</target>
        </trans-unit>
        <trans-unit id="721cd2fa83aa1e5c385bd9eea0969511b3180049" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;always&quot;&lt;/code&gt; disallows all assignments in test conditions</source>
          <target state="translated">&lt;code&gt;&quot;always&quot;&lt;/code&gt; テスト条件でのすべての割り当てを許可しない</target>
        </trans-unit>
        <trans-unit id="141e1fefc99d936276579645c828b62dcee97370" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;always&quot;&lt;/code&gt; does not require spaces or newlines in empty array literals &lt;code&gt;[]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&quot;always&quot;&lt;/code&gt; 空の配列リテラルにスペースや改行を必要としません &lt;code&gt;[]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6237ac994911b79000597bd4928fb64d2cdf788d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;always&quot;&lt;/code&gt; enforces a newline around variable declarations</source>
          <target state="translated">&lt;code&gt;&quot;always&quot;&lt;/code&gt; 変数宣言の周りに改行を強制します</target>
        </trans-unit>
        <trans-unit id="fdfb3fbb550b804666ce53db39b657824459f890" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;always&quot;&lt;/code&gt; enforces a space inside of object and array literals</source>
          <target state="translated">&lt;code&gt;&quot;always&quot;&lt;/code&gt; オブジェクトと配列リテラルの内側にスペースを強制します</target>
        </trans-unit>
        <trans-unit id="c3beb31ae1581a2f8f51f64908fa9a8c562d3720" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;always&quot;&lt;/code&gt; enforces a space inside of parentheses</source>
          <target state="translated">&lt;code&gt;&quot;always&quot;&lt;/code&gt; 括弧内にスペースを強制します</target>
        </trans-unit>
        <trans-unit id="56268b1d24432ad52957ffbc0b714d6305b32988" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;always&quot;&lt;/code&gt; enforces braces around the function body</source>
          <target state="translated">&lt;code&gt;&quot;always&quot;&lt;/code&gt; 関数本体を中括弧で囲む</target>
        </trans-unit>
        <trans-unit id="75ce94889087b27713a0e81912252afbc0bf8a8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;always&quot;&lt;/code&gt; enforces parenthesis after a new constructor with no arguments (default)</source>
          <target state="translated">&lt;code&gt;&quot;always&quot;&lt;/code&gt; は、引数のない新しいコンストラクタの後に括弧を強制します（デフォルト）</target>
        </trans-unit>
        <trans-unit id="84892bd9f23c12ebf65b4f2bcc3bf1114480029c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;always&quot;&lt;/code&gt; enforces providing a radix (default)</source>
          <target state="translated">&lt;code&gt;&quot;always&quot;&lt;/code&gt; 基数の提供を強制する（デフォルト）</target>
        </trans-unit>
        <trans-unit id="77d274158b47d567d81622d6fd10d4727f1ce8b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;always&quot;&lt;/code&gt; files must begin with the Unicode BOM</source>
          <target state="translated">&lt;code&gt;&quot;always&quot;&lt;/code&gt; ファイルはUnicode BOMで始まる必要があります</target>
        </trans-unit>
        <trans-unit id="c90edf713f7cdb7df0628ac8b5d5cff6abd0c2c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;always&quot;&lt;/code&gt; require named generators</source>
          <target state="translated">&lt;code&gt;&quot;always&quot;&lt;/code&gt; 名前付きジェネレータが必要</target>
        </trans-unit>
        <trans-unit id="bd943dee2ecd134afa969eed89a63009e85f6679" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;always&quot;&lt;/code&gt; requires line breaks inside all function parentheses.</source>
          <target state="translated">&lt;code&gt;&quot;always&quot;&lt;/code&gt; すべての関数の括弧内に改行が必要です。</target>
        </trans-unit>
        <trans-unit id="cbf572ac9f20f0f676670eccf9a08b330ef0ac8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;always&quot;&lt;/code&gt; requires line breaks inside braces</source>
          <target state="translated">&lt;code&gt;&quot;always&quot;&lt;/code&gt; はブレース内の改行が必要</target>
        </trans-unit>
        <trans-unit id="6786a23ed78ac1cfd0397e8c2ed71ee714d721d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;always&quot;&lt;/code&gt; requires line breaks inside brackets</source>
          <target state="translated">&lt;code&gt;&quot;always&quot;&lt;/code&gt; 括弧内の改行が必要</target>
        </trans-unit>
        <trans-unit id="f5e6263d861b183de22cc9f36329bdcc02e7ac23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;always&quot;&lt;/code&gt; requires one or more blank lines. Note it does not count lines that comments exist as blank lines.</source>
          <target state="translated">&lt;code&gt;&quot;always&quot;&lt;/code&gt; 1つ以上の空白行が必要です。コメントが存在する行は空白行としてカウントされないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="baeeaf86051a3413ab2ea74579e1caf30ed6c582" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;always&quot;&lt;/code&gt; requires one or more spaces inside computed property brackets</source>
          <target state="translated">&lt;code&gt;&quot;always&quot;&lt;/code&gt; 計算されたプロパティブラケット内に1つ以上のスペースが必要</target>
        </trans-unit>
        <trans-unit id="1dc2a2c3c6b816ec7a7309036e2703b0234c0f4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;always&quot;&lt;/code&gt; requires one or more spaces or newlines inside array brackets</source>
          <target state="translated">&lt;code&gt;&quot;always&quot;&lt;/code&gt; は、配列括弧内に1つ以上のスペースまたは改行が必要です</target>
        </trans-unit>
        <trans-unit id="bb25bbcd66d3b8269c6bdd6e50c311ca7eb292bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;always&quot;&lt;/code&gt; requires space between the function name and the opening parenthesis.</source>
          <target state="translated">&lt;code&gt;&quot;always&quot;&lt;/code&gt; は、関数名と開き括弧の間にスペースが必要です。</target>
        </trans-unit>
        <trans-unit id="9e84cf2f368463fb19331792345fdf21e45065cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;always&quot;&lt;/code&gt; requires spacing inside of braces (except &lt;code&gt;{}&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;&quot;always&quot;&lt;/code&gt; は中括弧の内側にスペースが必要です（ &lt;code&gt;{}&lt;/code&gt; を除く）</target>
        </trans-unit>
        <trans-unit id="f52c4ab75aa5bd7ed427838ed52a05f81f88283b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;always&quot;&lt;/code&gt; requires trailing commas</source>
          <target state="translated">&lt;code&gt;&quot;always&quot;&lt;/code&gt; 末尾のコンマが必要</target>
        </trans-unit>
        <trans-unit id="84e6f3910e8a30bcdbd2a73923260c01bb7cc252" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;always&quot;&lt;/code&gt;(default) require an empty line after class members</source>
          <target state="translated">&lt;code&gt;&quot;always&quot;&lt;/code&gt; （デフォルト）では、クラスメンバーの後に空行が必要です</target>
        </trans-unit>
        <trans-unit id="29d1a34e866e247d8070d6c5d8f1ffcf52d8bf67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;always-multiline&quot;&lt;/code&gt; enforces newlines between the operands of a ternary expression if the expression spans multiple lines.</source>
          <target state="translated">&lt;code&gt;&quot;always-multiline&quot;&lt;/code&gt; は、式が複数行にまたがる場合に、3値式のオペランド間に改行を適用します。</target>
        </trans-unit>
        <trans-unit id="a8bbf2020d231abe36a82f330be548b17bc1ae45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;always-multiline&quot;&lt;/code&gt; requires trailing commas when the last element or property is in a &lt;em&gt;different&lt;/em&gt; line than the closing &lt;code&gt;]&lt;/code&gt; or &lt;code&gt;}&lt;/code&gt; and disallows trailing commas when the last element or property is on the &lt;em&gt;same&lt;/em&gt; line as the closing &lt;code&gt;]&lt;/code&gt; or &lt;code&gt;}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&quot;always-multiline&quot;&lt;/code&gt; 最後の要素またはプロパティがである場合、末尾のカンマを必要と&lt;em&gt;異なる&lt;/em&gt;閉鎖より線 &lt;code&gt;]&lt;/code&gt; または &lt;code&gt;}&lt;/code&gt; と最後の要素またはプロパティがオンのとき禁止しコンマ末尾&lt;em&gt;同じ&lt;/em&gt;閉鎖としてライン &lt;code&gt;]&lt;/code&gt; または &lt;code&gt;}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8005a90936890cb3d397ad034dca537b672df7ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;any&quot;&lt;/code&gt; (default) - If any variables in destructuring should be &lt;code&gt;const&lt;/code&gt;, this rule warns for those variables.</source>
          <target state="translated">&lt;code&gt;&quot;any&quot;&lt;/code&gt; （デフォルト）-構造化の変数が &lt;code&gt;const&lt;/code&gt; である必要がある場合、このルールはそれらの変数について警告します。</target>
        </trans-unit>
        <trans-unit id="0784e9ca230adf58221e11a7c901a6d738b69d26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;any&quot;&lt;/code&gt; does not enforce the position of a single-line statement.</source>
          <target state="translated">&lt;code&gt;&quot;any&quot;&lt;/code&gt; は、単一行ステートメントの位置を強制しません。</target>
        </trans-unit>
        <trans-unit id="29b17caca15956a44b2aa6c9c188eb8d973e0d0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;any&quot;&lt;/code&gt; enforces always wrapping, but allows either style.</source>
          <target state="translated">&lt;code&gt;&quot;any&quot;&lt;/code&gt; は常に折り返しを強制しますが、どちらのスタイルも許可します。</target>
        </trans-unit>
        <trans-unit id="851867593d1db83f8104d96c1a87f73186da5fa3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;any&quot;&lt;/code&gt; just ignores the statement pair.</source>
          <target state="translated">&lt;code&gt;&quot;any&quot;&lt;/code&gt; はステートメントのペアを無視します。</target>
        </trans-unit>
        <trans-unit id="35ec38d61ac8e70777189789864c67bb97783eae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;anyOrder&quot;&lt;/code&gt; (default) does not enforce order.</source>
          <target state="translated">&lt;code&gt;&quot;anyOrder&quot;&lt;/code&gt; （デフォルト）は順序を強制しません。</target>
        </trans-unit>
        <trans-unit id="95a36467b49abec5df4a72e8e644dafd4ab561ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;applyDefaultIgnorePatterns&quot;&lt;/code&gt; enables or disables the default comment patterns to be ignored by the rule</source>
          <target state="translated">&lt;code&gt;&quot;applyDefaultIgnorePatterns&quot;&lt;/code&gt; は、ルールによって無視されるデフォルトのコメントパターンを有効または無効にします。</target>
        </trans-unit>
        <trans-unit id="0818788feb27a2608329c470c4d0426b94d50c68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;arraysInArrays&quot;: false&lt;/code&gt; disallows spaces between brackets of array literals and brackets of their array literal elements &lt;code&gt;[[&lt;/code&gt; or &lt;code&gt;]]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&quot;arraysInArrays&quot;: false&lt;/code&gt; は、配列リテラルの括弧と配列リテラル要素の括弧の間のスペースを許可しません &lt;code&gt;[[&lt;/code&gt; または &lt;code&gt;]]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d42b00e2157ed0aee7c1c61a4788d4de35003f0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;arraysInArrays&quot;: true&lt;/code&gt; requires one or more spaces or newlines between brackets of array literals and brackets of their array literal elements &lt;code&gt;[ [&lt;/code&gt; or &lt;code&gt;] ]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&quot;arraysInArrays&quot;: true&lt;/code&gt; は、配列リテラルの括弧とその配列リテラル要素の括弧の間に1つ以上のスペースまたは改行が必要です &lt;code&gt;[ [&lt;/code&gt; または &lt;code&gt;] ]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6a3247464d7ecbd169d2211af1c90dcc03d7349d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;arraysInObjects&quot;: false&lt;/code&gt; disallows spacing inside of braces of objects beginning and/or ending with an array element (applies when the first option is set to &lt;code&gt;always&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;&quot;arraysInObjects&quot;: false&lt;/code&gt; は、配列要素で開始または終了するオブジェクトのブレース内のスペースを許可しません（最初のオプションが &lt;code&gt;always&lt;/code&gt; に設定されている場合に適用されます）</target>
        </trans-unit>
        <trans-unit id="f78ea37dd6d9933fa85294a504dd0ac8f1e5968e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;arraysInObjects&quot;: true&lt;/code&gt; requires spacing inside of braces of objects beginning and/or ending with an array element (applies when the first option is set to &lt;code&gt;never&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;&quot;arraysInObjects&quot;: true&lt;/code&gt; は、配列要素で開始または終了するオブジェクトのブレースの内側にスペースが必要です（最初のオプションが &lt;code&gt;never&lt;/code&gt; に設定されている場合に適用されます）</target>
        </trans-unit>
        <trans-unit id="a2293f1860dbc86d6bb0e5eac070bdd97a907ca9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;arrowFunctions&quot;&lt;/code&gt; - Arrow functions.</source>
          <target state="translated">&lt;code&gt;&quot;arrowFunctions&quot;&lt;/code&gt; -アロー関数。</target>
        </trans-unit>
        <trans-unit id="12865e6623ffb6c892d02e7d10a06345e308175a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;as-needed&quot;&lt;/code&gt; disallows providing the &lt;code&gt;10&lt;/code&gt; radix</source>
          <target state="translated">&lt;code&gt;&quot;as-needed&quot;&lt;/code&gt; &lt;code&gt;10&lt;/code&gt; 基数の提供を許可しない</target>
        </trans-unit>
        <trans-unit id="036f0b9db275d63c08a2102910f53c19c5546ed3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;as-needed&quot;&lt;/code&gt; disallows quotes around object literal property names that are not strictly required</source>
          <target state="translated">&lt;code&gt;&quot;as-needed&quot;&lt;/code&gt; は、厳密に必要とされないオブジェクトリテラルプロパティ名を引用符で囲みません。</target>
        </trans-unit>
        <trans-unit id="8fc1ddce70eccfe61b008b773f105f1617f293c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;as-needed&quot;&lt;/code&gt; enforces no braces where they can be omitted (default)</source>
          <target state="translated">&lt;code&gt;&quot;as-needed&quot;&lt;/code&gt; は、ブレースを省略できる場所に強制しません（デフォルト）。</target>
        </trans-unit>
        <trans-unit id="796500b9a1b5b8b53b48a6dde843a70e5201d8f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;as-needed&quot;&lt;/code&gt; enforces no braces where they can be omitted.</source>
          <target state="translated">&lt;code&gt;&quot;as-needed&quot;&lt;/code&gt; は、省略可能なブレースを強制しません。</target>
        </trans-unit>
        <trans-unit id="f2f049ef1f79390e761c6adae6f32df097e9b717" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;as-needed&quot;&lt;/code&gt; require named generators if the name cannot be assigned automatically in an ES6 environment.</source>
          <target state="translated">&lt;code&gt;&quot;as-needed&quot;&lt;/code&gt; 名前がES6環境で自動的に割り当てられない場合は、「必要に応じて」名前付きジェネレータが必要です。</target>
        </trans-unit>
        <trans-unit id="ebce91f7e6f0c703ba3b7547aeb4f7b39a2f7a7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;as-needed&quot;&lt;/code&gt; requires function expressions to have a name, if the name cannot be assigned automatically in an ES6 environment</source>
          <target state="translated">&lt;code&gt;&quot;as-needed&quot;&lt;/code&gt; は、ES6環境で名前を自動的に割り当てることができない場合、関数式に名前を付ける必要があります。</target>
        </trans-unit>
        <trans-unit id="c0388db68e85bd4e4d3de724e01d791b48944089" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;asc&quot;&lt;/code&gt; (default) - enforce properties to be in ascending order.</source>
          <target state="translated">&lt;code&gt;&quot;asc&quot;&lt;/code&gt; （デフォルト）-プロパティを昇順に強制します。</target>
        </trans-unit>
        <trans-unit id="fc82490263fd397e3c74d23fe07aaf0a9738aba6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;asyncFunctions&quot;&lt;/code&gt; - Async functions.</source>
          <target state="translated">&lt;code&gt;&quot;asyncFunctions&quot;&lt;/code&gt; -非同期関数。</target>
        </trans-unit>
        <trans-unit id="cd062a8655db912299ef98169f9e34068a5716fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;asyncMethods&quot;&lt;/code&gt; - Async class methods and method shorthands of object literals.</source>
          <target state="translated">&lt;code&gt;&quot;asyncMethods&quot;&lt;/code&gt; -非同期クラスのメソッドとオブジェクトリテラルのメソッドの省略形。</target>
        </trans-unit>
        <trans-unit id="5cc6513e11d16b6d206b2bf377dd27609f27da59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;avoidEscape&quot;: true&lt;/code&gt; allows strings to use single-quotes or double-quotes so long as the string contains a quote that would have to be escaped otherwise</source>
          <target state="translated">&lt;code&gt;&quot;avoidEscape&quot;: true&lt;/code&gt; 、文字列に引用符が含まれている限り、文字列に一重引用符または二重引用符を使用できます。</target>
        </trans-unit>
        <trans-unit id="237efe2609cab5b8268fe9062079918c25bb70f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;avoidExplicitReturnArrows&quot;: true&lt;/code&gt; indicates that methods are preferred over explicit-return arrow functions for function properties. (By default, the rule allows either of these.) Note that this option can only be enabled when the string option is set to &lt;code&gt;&quot;always&quot;&lt;/code&gt; or &lt;code&gt;&quot;methods&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;avoidExplicitReturnArrows&quot;: true&lt;/code&gt; は、関数プロパティの明示的な戻り矢印関数よりもメソッドが優先されることを示します。（デフォルトでは、ルールはこれらのいずれかを許可します。）このオプションは、文字列オプションが &lt;code&gt;&quot;always&quot;&lt;/code&gt; または &lt;code&gt;&quot;methods&quot;&lt;/code&gt; に設定されている場合にのみ有効にできることに注意してください。</target>
        </trans-unit>
        <trans-unit id="519b00ac1b5b51566a7b9e4b0184405533e912f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;avoidQuotes&quot;: true&lt;/code&gt; indicates that long-form syntax is preferred whenever the object key is a string literal (default: &lt;code&gt;false&lt;/code&gt;). Note that this option can only be enabled when the string option is set to &lt;code&gt;&quot;always&quot;&lt;/code&gt;, &lt;code&gt;&quot;methods&quot;&lt;/code&gt;, or &lt;code&gt;&quot;properties&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;avoidQuotes&quot;: true&lt;/code&gt; は、オブジェクトキーが文字列リテラルである場合は常に、長い形式の構文が優先されることを示します（デフォルト： &lt;code&gt;false&lt;/code&gt; ）。このオプションは、文字列オプションが &lt;code&gt;&quot;always&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;methods&quot;&lt;/code&gt; 、または &lt;code&gt;&quot;properties&quot;&lt;/code&gt; に設定されている場合にのみ有効にできることに注意してください。</target>
        </trans-unit>
        <trans-unit id="900f74ad2a9f02dec5c4ed514fe0801a8d5c4211" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;backtick&quot;&lt;/code&gt; requires the use of backticks wherever possible</source>
          <target state="translated">&lt;code&gt;&quot;backtick&quot;&lt;/code&gt; では、可能な限りバックティックを使用する必要があります</target>
        </trans-unit>
        <trans-unit id="e3aeafa5b72b4f975bd2e3a20ec46fdd13bd8c38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;bare-block&quot;&lt;/code&gt;: Disallows consecutive line comments in favor of block comments, and disallows block comments from having a &lt;code&gt;&quot;*&quot;&lt;/code&gt; character before each line.</source>
          <target state="translated">&lt;code&gt;&quot;bare-block&quot;&lt;/code&gt; ：連続する行コメントをブロックコメントに置き換え、ブロックコメントに各行の前に &lt;code&gt;&quot;*&quot;&lt;/code&gt; 文字を付けることを禁止します。</target>
        </trans-unit>
        <trans-unit id="b5a7610b5fa00c8229df8aa493c7c6b5b764a48f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;before&quot;: false&lt;/code&gt; (Default) disallows before colons.</source>
          <target state="translated">&lt;code&gt;&quot;before&quot;: false&lt;/code&gt; （デフォルト）はコロンの前を許可しません。</target>
        </trans-unit>
        <trans-unit id="3fb40a4317025ef99e298cb5e37381f5acb7b46e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;before&quot;: false&lt;/code&gt; (default) disallows spaces before commas</source>
          <target state="translated">&lt;code&gt;&quot;before&quot;: false&lt;/code&gt; （デフォルト）は、コンマの前にスペースを許可しません</target>
        </trans-unit>
        <trans-unit id="05013171e91996690d251194195a8b44136bb2af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;before&quot;: false&lt;/code&gt; disallows spaces before keywords</source>
          <target state="translated">&lt;code&gt;&quot;before&quot;: false&lt;/code&gt; はキーワードの前にスペースを許可しません</target>
        </trans-unit>
        <trans-unit id="08384f59b2a9c386665266791ad1fdf37cb18ece" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;before&quot;: true&lt;/code&gt; (default) requires at least one space before keywords</source>
          <target state="translated">&lt;code&gt;&quot;before&quot;: true&lt;/code&gt; （デフォルト）では、キーワードの前に少なくとも1つのスペースが必要です</target>
        </trans-unit>
        <trans-unit id="4456de4afac2b1522782a87c25a98e0d6bf3264f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;before&quot;: true&lt;/code&gt; requires one or more spaces before colons.</source>
          <target state="translated">&lt;code&gt;&quot;before&quot;: true&lt;/code&gt; 場合、コロンの前に1つ以上のスペースが必要です。</target>
        </trans-unit>
        <trans-unit id="ec15d5fad5138abbc13276293d6b21198520cfd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;before&quot;: true&lt;/code&gt; requires one or more spaces before commas</source>
          <target state="translated">&lt;code&gt;&quot;before&quot;: true&lt;/code&gt; 場合、カンマの前に1つ以上のスペースが必要</target>
        </trans-unit>
        <trans-unit id="d24c451e9af5944e3529ff3f2ca3df713ee089fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;before&quot;&lt;/code&gt; requires linebreaks to be placed before the operator</source>
          <target state="translated">&lt;code&gt;&quot;before&quot;&lt;/code&gt; では、改行をオペレーターの前に置く必要があります</target>
        </trans-unit>
        <trans-unit id="c7ec8ec5ec76ffea4fcb3b9f98f07d25bd8df3b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;beforeBlockComment&quot;: true&lt;/code&gt; (default) requires an empty line before block comments</source>
          <target state="translated">&lt;code&gt;&quot;beforeBlockComment&quot;: true&lt;/code&gt; （デフォルト）では、ブロックコメントの前に空行が必要です</target>
        </trans-unit>
        <trans-unit id="025a4d357492e47e36ba54cebaf71fd137ce758e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;beforeLineComment&quot;: true&lt;/code&gt; requires an empty line before line comments</source>
          <target state="translated">&lt;code&gt;&quot;beforeLineComment&quot;: true&lt;/code&gt; 場合、行コメントの前に空行が必要です</target>
        </trans-unit>
        <trans-unit id="6f5af284dcfe64d92510cd1d101d3b775c93256b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;beforeStatementContinuationChars&quot;: &quot;always&quot;&lt;/code&gt; requires semicolons at the end of statements if the next line starts with &lt;code&gt;[&lt;/code&gt;, &lt;code&gt;(&lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt;, or &lt;code&gt;-&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;beforeStatementContinuationChars&quot;: &quot;always&quot;&lt;/code&gt; 次の行が &lt;code&gt;[&lt;/code&gt; 、 &lt;code&gt;(&lt;/code&gt; 、 &lt;code&gt;/&lt;/code&gt; 、 &lt;code&gt;+&lt;/code&gt; 、または &lt;code&gt;-&lt;/code&gt; で始まる場合、ステートメントの最後にセミコロンが必要です。</target>
        </trans-unit>
        <trans-unit id="ea05b437c55c2cc0dda2f9959ef42f4605181e47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;beforeStatementContinuationChars&quot;: &quot;any&quot;&lt;/code&gt; (default) ignores semicolons (or lacking semicolon) at the end of statements if the next line starts with &lt;code&gt;[&lt;/code&gt;, &lt;code&gt;(&lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt;, or &lt;code&gt;-&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;beforeStatementContinuationChars&quot;: &quot;any&quot;&lt;/code&gt; （デフォルト）は、次の行が &lt;code&gt;[&lt;/code&gt; 、 &lt;code&gt;(&lt;/code&gt; 、 &lt;code&gt;/&lt;/code&gt; 、 &lt;code&gt;+&lt;/code&gt; 、または &lt;code&gt;-&lt;/code&gt; で始まる場合、ステートメントの終わりにセミコロンがない（またはセミコロンがない）場合は無視します。</target>
        </trans-unit>
        <trans-unit id="b636f1744dd9d3631b84f94f31956837d0336f8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;beforeStatementContinuationChars&quot;: &quot;never&quot;&lt;/code&gt; disallows semicolons as the end of statements if it doesn't make ASI hazard even if the next line starts with &lt;code&gt;[&lt;/code&gt;, &lt;code&gt;(&lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt;, or &lt;code&gt;-&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;beforeStatementContinuationChars&quot;: &quot;never&quot;&lt;/code&gt; 次の行が &lt;code&gt;[&lt;/code&gt; 、 &lt;code&gt;(&lt;/code&gt; 、 &lt;code&gt;/&lt;/code&gt; 、 &lt;code&gt;+&lt;/code&gt; 、または &lt;code&gt;-&lt;/code&gt; で始まる場合でも、ASIに危険を及ぼさない場合、ステートメントの終わりとして&quot;never&quot;はセミコロンを許可しません。</target>
        </trans-unit>
        <trans-unit id="4388ff1709a03deb2ea5a6b943b0a301d7b3b631" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;below&quot;, { &quot;overrides&quot;: { &quot;do&quot;: &quot;any&quot; } }&lt;/code&gt; disallows all single-line statements from appearing on the same line as their parent, unless the parent is a &lt;code&gt;do-while&lt;/code&gt; statement, in which case the position of the single-line statement is not enforced.</source>
          <target state="translated">&lt;code&gt;&quot;below&quot;, { &quot;overrides&quot;: { &quot;do&quot;: &quot;any&quot; } }&lt;/code&gt; は、親が &lt;code&gt;do-while&lt;/code&gt; ステートメントでない限り、すべての単一行ステートメントが親と同じ行に表示されないようにします。単一行ステートメントの強制は行われません。</target>
        </trans-unit>
        <trans-unit id="9c61de8c53dd3d27310232b76d4ed48508b1f367" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;below&quot;&lt;/code&gt; requires a newline before a single-line statement.</source>
          <target state="translated">&lt;code&gt;&quot;below&quot;&lt;/code&gt; では、単一行ステートメントの前に改行が必要です。</target>
        </trans-unit>
        <trans-unit id="278a79581af13672fa70ba699bd63a5e048c5f34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;below&quot;&lt;/code&gt; requires a newline before an arrow function body.</source>
          <target state="translated">&lt;code&gt;&quot;below&quot;&lt;/code&gt; では、矢印関数本体の前に改行が必要です。</target>
        </trans-unit>
        <trans-unit id="1bd9db15132ca04cd84902f06336c90b893f5821" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;beside&quot;, { &quot;overrides&quot;: { &quot;while&quot;: &quot;below&quot; } }&lt;/code&gt; requires all single-line statements to appear on the same line as their parent, unless the parent is a &lt;code&gt;while&lt;/code&gt; statement, in which case the single-line statement must not be on the same line.</source>
          <target state="translated">&lt;code&gt;&quot;beside&quot;, { &quot;overrides&quot;: { &quot;while&quot;: &quot;below&quot; } }&lt;/code&gt; では、親が &lt;code&gt;while&lt;/code&gt; ステートメントでない限り、すべての単一行ステートメントを親と同じ行に表示する必要があります。ステートメントは同じ行にあってはなりません。</target>
        </trans-unit>
        <trans-unit id="2a67a3f31dedc2377622f8727ddf24873894ca4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;beside&quot;&lt;/code&gt; (default) disallows a newline before a single-line statement.</source>
          <target state="translated">&lt;code&gt;&quot;beside&quot;&lt;/code&gt; （デフォルト）は、単一行ステートメントの前の改行を許可しません。</target>
        </trans-unit>
        <trans-unit id="cc2e93fb80250a5111c1a961778aa9eb4b3472a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;beside&quot;&lt;/code&gt; (default) disallows a newline before an arrow function body.</source>
          <target state="translated">&lt;code&gt;&quot;beside&quot;&lt;/code&gt; （デフォルト）は、矢印関数本体の前の改行を許可しません。</target>
        </trans-unit>
        <trans-unit id="8edbe48d119894bafa7d4461c70c4fdd732ddc7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;block&quot;&lt;/code&gt; is lonely blocks.</source>
          <target state="translated">&lt;code&gt;&quot;block&quot;&lt;/code&gt; は孤独なブロックです。</target>
        </trans-unit>
        <trans-unit id="2eb5302af65710aeceec20ebada1cf91cae915f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;block-like&quot;&lt;/code&gt; is block like statements. This matches statements that the last token is the closing brace of blocks; e.g. &lt;code&gt;{ }&lt;/code&gt;, &lt;code&gt;if (a) { }&lt;/code&gt;, and &lt;code&gt;while (a) { }&lt;/code&gt;. Also matches immediately invoked function expression statements.</source>
          <target state="translated">&lt;code&gt;&quot;block-like&quot;&lt;/code&gt; はブロックのようなステートメントです。これは、最後のトークンがブロックの右中括弧であるというステートメントに一致します。例： &lt;code&gt;{ }&lt;/code&gt; 、 &lt;code&gt;if (a) { }&lt;/code&gt; 、および &lt;code&gt;while (a) { }&lt;/code&gt; 。すぐに呼び出される関数式ステートメントにも一致します。</target>
        </trans-unit>
        <trans-unit id="ba53daeccd677b5b0e3fdb5c5f656a645c9827e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;blocks&quot;&lt;/code&gt; require or disallow padding within block statements</source>
          <target state="translated">&lt;code&gt;&quot;blocks&quot;&lt;/code&gt; は、ブロックステートメント内のパディングを要求または禁止します</target>
        </trans-unit>
        <trans-unit id="67afa9f7a7c5a55433f396681096b6b21de20f4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;boolean&quot;&lt;/code&gt; (&lt;code&gt;true&lt;/code&gt; by default) - When this is &lt;code&gt;true&lt;/code&gt;, this rule warns shorter type conversions for &lt;code&gt;boolean&lt;/code&gt; type.</source>
          <target state="translated">&lt;code&gt;&quot;boolean&quot;&lt;/code&gt; （ &lt;code&gt;true&lt;/code&gt; デフォルトでは） -これがある場合は &lt;code&gt;true&lt;/code&gt; 、このルールがために短い型変換を警告 &lt;code&gt;boolean&lt;/code&gt; タイプ。</target>
        </trans-unit>
        <trans-unit id="e069dccc7e927eb5814c3a89baa4193488857624" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;both&quot;&lt;/code&gt; disallows &lt;code&gt;function&lt;/code&gt; and &lt;code&gt;var&lt;/code&gt; declarations in nested blocks</source>
          <target state="translated">&lt;code&gt;&quot;both&quot;&lt;/code&gt; はネストされたブロック内の &lt;code&gt;function&lt;/code&gt; と &lt;code&gt;var&lt;/code&gt; 宣言を許可しません</target>
        </trans-unit>
        <trans-unit id="708f2af9f415d5dfbe2ea8ec87bc745beff372b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;break&quot;&lt;/code&gt; is &lt;code&gt;break&lt;/code&gt; statements.</source>
          <target state="translated">&lt;code&gt;&quot;break&quot;&lt;/code&gt; は &lt;code&gt;break&lt;/code&gt; ステートメントです。</target>
        </trans-unit>
        <trans-unit id="7852730c26a34978cdff3503b8a6d0b493f8ab39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;capIsConstructor&quot;: false&lt;/code&gt; (default &lt;code&gt;true&lt;/code&gt;) disables the assumption that a function which name starts with an uppercase is a constructor.</source>
          <target state="translated">&lt;code&gt;&quot;capIsConstructor&quot;: false&lt;/code&gt; （デフォルトは &lt;code&gt;true&lt;/code&gt; ）は、名前が大文字で始まる関数がコンストラクターであるという仮定を無効にします。</target>
        </trans-unit>
        <trans-unit id="47c7475793ad08795d47d04ef5153040be216aae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;capIsNew&quot;: false&lt;/code&gt; allows uppercase-started functions to be called without &lt;code&gt;new&lt;/code&gt; operators.</source>
          <target state="translated">&lt;code&gt;&quot;capIsNew&quot;: false&lt;/code&gt; 指定すると、大文字で始まる関数を &lt;code&gt;new&lt;/code&gt; 演算子なしで呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="bc1676ad0a2dcdf63ae2760f75a453e13f84e839" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;capIsNew&quot;: true&lt;/code&gt; (default) requires all uppercase-started functions to be called with &lt;code&gt;new&lt;/code&gt; operators.</source>
          <target state="translated">&lt;code&gt;&quot;capIsNew&quot;: true&lt;/code&gt; （デフォルト）では、大文字で始まるすべての関数を &lt;code&gt;new&lt;/code&gt; 演算子で呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="c2b343b90d044769151740b829e3f01334c74670" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;capIsNewExceptionPattern&quot;&lt;/code&gt; allows any uppercase-started function names that match the specified regex pattern to be called without the &lt;code&gt;new&lt;/code&gt; operator.</source>
          <target state="translated">&lt;code&gt;&quot;capIsNewExceptionPattern&quot;&lt;/code&gt; 使用すると、指定した正規表現パターンに一致する大文字で始まる関数名を、 &lt;code&gt;new&lt;/code&gt; 演算子なしで呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="4b31aadc600ab9d296bdc444113d2a81efaed173" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;capIsNewExceptions&quot;&lt;/code&gt; allows specified uppercase-started function names to be called without the &lt;code&gt;new&lt;/code&gt; operator.</source>
          <target state="translated">&lt;code&gt;&quot;capIsNewExceptions&quot;&lt;/code&gt; 使用すると、指定した大文字で始まる関数名を &lt;code&gt;new&lt;/code&gt; 演算子なしで呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="741b6181aac2742c7786b5896377ef52a168eee6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;case&quot;&lt;/code&gt; is &lt;code&gt;case&lt;/code&gt; clauses in &lt;code&gt;switch&lt;/code&gt; statements.</source>
          <target state="translated">&lt;code&gt;&quot;case&quot;&lt;/code&gt; は、 &lt;code&gt;switch&lt;/code&gt; ステートメントの &lt;code&gt;case&lt;/code&gt; 句です。</target>
        </trans-unit>
        <trans-unit id="87a3926300fe3e20c6059f06c22d1d8a9f1e4d4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;case&quot;&lt;/code&gt; is &lt;code&gt;case&lt;/code&gt; labels.</source>
          <target state="translated">&lt;code&gt;&quot;case&quot;&lt;/code&gt; は &lt;code&gt;case&lt;/code&gt; ラベルです。</target>
        </trans-unit>
        <trans-unit id="8e29536da83a536a8a43215b1f4281985d86c2e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;checkForEach&quot;: false&lt;/code&gt; (default) When set to &lt;code&gt;true&lt;/code&gt;, rule will also report &lt;code&gt;forEach&lt;/code&gt; callbacks that return a value.</source>
          <target state="translated">&lt;code&gt;&quot;checkForEach&quot;: false&lt;/code&gt; （デフォルト） &lt;code&gt;true&lt;/code&gt; に設定すると、ルールは値を返す &lt;code&gt;forEach&lt;/code&gt; コールバックも報告します。</target>
        </trans-unit>
        <trans-unit id="67caba4b75a73f9a6e3313a4ffa66ab6c46f06a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;cjs-export&quot;&lt;/code&gt; is &lt;code&gt;export&lt;/code&gt; statements of CommonJS; e.g. &lt;code&gt;module.exports = 0&lt;/code&gt;, &lt;code&gt;module.exports.foo = 1&lt;/code&gt;, and &lt;code&gt;exports.foo = 2&lt;/code&gt;. This is a special case of assignment.</source>
          <target state="translated">&lt;code&gt;&quot;cjs-export&quot;&lt;/code&gt; はCommonJSの &lt;code&gt;export&lt;/code&gt; ステートメントです。たとえば、 &lt;code&gt;module.exports = 0&lt;/code&gt; 、 &lt;code&gt;module.exports.foo = 1&lt;/code&gt; 、 &lt;code&gt;exports.foo = 2&lt;/code&gt; です。これは割り当ての特殊なケースです。</target>
        </trans-unit>
        <trans-unit id="5ca2f0537c58d1c6fca1ea2395ff9415b3bb97f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;cjs-import&quot;&lt;/code&gt; is &lt;code&gt;import&lt;/code&gt; statements of CommonJS; e.g. &lt;code&gt;const foo = require(&quot;foo&quot;)&lt;/code&gt;. This is a special case of variable declarations.</source>
          <target state="translated">&lt;code&gt;&quot;cjs-import&quot;&lt;/code&gt; はCommonJSの &lt;code&gt;import&lt;/code&gt; 文です。たとえば &lt;code&gt;const foo = require(&quot;foo&quot;)&lt;/code&gt; 。これは、変数宣言の特殊なケースです。</target>
        </trans-unit>
        <trans-unit id="5a9821c0f91f104c273668421db7957e3ddae1a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;class&quot;&lt;/code&gt; is &lt;code&gt;class&lt;/code&gt; declarations.</source>
          <target state="translated">&lt;code&gt;&quot;class&quot;&lt;/code&gt; は &lt;code&gt;class&lt;/code&gt; 宣言です。</target>
        </trans-unit>
        <trans-unit id="2659e3583c4e269669b57738848808c37d82f636" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;classes&quot;&lt;/code&gt; require or disallow padding within classes</source>
          <target state="translated">&lt;code&gt;&quot;classes&quot;&lt;/code&gt; はクラス内のパディングを要求または禁止します</target>
        </trans-unit>
        <trans-unit id="a854eca699c757b39cd40245e2fe71efd5762a9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;code&quot;&lt;/code&gt; (default &lt;code&gt;80&lt;/code&gt;) enforces a maximum line length</source>
          <target state="translated">&lt;code&gt;&quot;code&quot;&lt;/code&gt; （デフォルトは &lt;code&gt;80&lt;/code&gt; ）は行の最大長を強制します</target>
        </trans-unit>
        <trans-unit id="8fccc8c48c320dcd9846b54272dcc92d329897e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;colon&quot;&lt;/code&gt; enforces horizontal alignment of both colons and values in object literals.</source>
          <target state="translated">&lt;code&gt;&quot;colon&quot;&lt;/code&gt; は、オブジェクトリテラルのコロンと値の両方の水平方向の配置を強制します。</target>
        </trans-unit>
        <trans-unit id="170eaf61f82afbd7da1913497bfd3583a1785e86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;comments&quot;&lt;/code&gt; enforces a maximum line length for comments; defaults to value of &lt;code&gt;code&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&quot;comments&quot;&lt;/code&gt; はコメントの最大行長を強制します。デフォルトは &lt;code&gt;code&lt;/code&gt; 値</target>
        </trans-unit>
        <trans-unit id="69480d9d4445de14c9b3eeb94f1df9544c11dda6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;conditionalAssign&quot;: false&lt;/code&gt; allows extra parentheses around assignments in conditional test expressions</source>
          <target state="translated">&lt;code&gt;&quot;conditionalAssign&quot;: false&lt;/code&gt; 指定すると、条件付きテスト式での割り当てを括弧で囲むことができます</target>
        </trans-unit>
        <trans-unit id="91a06d890224b1c5ba2ff57d4f44f778df598444" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;consecutive&quot;&lt;/code&gt; allows multiple variable declarations per scope but requires consecutive variable declarations to be combined into a single declaration</source>
          <target state="translated">&lt;code&gt;&quot;consecutive&quot;&lt;/code&gt; ではスコープごとに複数の変数宣言が可能ですが、連続する変数宣言を1つの宣言に結合する必要があります</target>
        </trans-unit>
        <trans-unit id="b23fc32c0d5b419519fc9133f306c78b70cca590" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;consistent&quot;: true&lt;/code&gt; (default) requires that either both curly braces, or neither, directly enclose newlines. Note that enabling this option will also change the behavior of the &lt;code&gt;minProperties&lt;/code&gt; option. (See &lt;code&gt;minProperties&lt;/code&gt; above for more information)</source>
          <target state="translated">&lt;code&gt;&quot;consistent&quot;: true&lt;/code&gt; （デフォルト）では、両方の波括弧が直接またはどちらも改行を直接囲む必要があります。このオプションを有効にすると、 &lt;code&gt;minProperties&lt;/code&gt; オプションの動作も変更されることに注意してください。（詳細 &lt;code&gt;minProperties&lt;/code&gt; 上記のminPropertiesを参照してください）</target>
        </trans-unit>
        <trans-unit id="25504e30dc1fd00fde7d1e29f7881beb9a5f833e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;consistent&quot;&lt;/code&gt; enforces a consistent quote style; in a given object, either all of the properties should be quoted, or none of the properties should be quoted</source>
          <target state="translated">&lt;code&gt;&quot;consistent&quot;&lt;/code&gt; は、一貫した引用スタイルを適用します。指定されたオブジェクトでは、すべてのプロパティを引用するか、どのプロパティも引用しない</target>
        </trans-unit>
        <trans-unit id="6833d339c230774e24a047ffcacde1a5dc701936" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;consistent&quot;&lt;/code&gt; ensures that either all shorthand or all long-form will be used in an object literal.</source>
          <target state="translated">&lt;code&gt;&quot;consistent&quot;&lt;/code&gt; は、すべての省略形またはすべての長い形式がオブジェクトリテラルで使用されることを保証します。</target>
        </trans-unit>
        <trans-unit id="5a591279990ac92e23c91634fec6b6d756f916b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;consistent&quot;&lt;/code&gt; requires consistent usage of line breaks between arguments</source>
          <target state="translated">&lt;code&gt;&quot;consistent&quot;&lt;/code&gt; は、引数間で改行を一貫して使用する必要があります</target>
        </trans-unit>
        <trans-unit id="7b725736ab4ecea8b845265d79b8e446a5098b62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;consistent&quot;&lt;/code&gt; requires consistent usage of linebreaks between array elements</source>
          <target state="translated">&lt;code&gt;&quot;consistent&quot;&lt;/code&gt; は、配列要素間で改行を一貫して使用する必要があります</target>
        </trans-unit>
        <trans-unit id="09e8143e55b451eaa9b488dfe59865326702d4e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;consistent&quot;&lt;/code&gt; requires consistent usage of linebreaks for each pair of brackets. It reports an error if one bracket in the pair has a linebreak inside it and the other bracket does not.</source>
          <target state="translated">&lt;code&gt;&quot;consistent&quot;&lt;/code&gt; は、ブラケットのペアごとに改行を一貫して使用する必要があります。ペアの一方のブラケット内に改行があり、もう一方のブラケットにはない場合、エラーを報告します。</target>
        </trans-unit>
        <trans-unit id="55cf7c90d99bbf99635a908fa9416b9a536236e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;consistent&quot;&lt;/code&gt; requires consistent usage of linebreaks for each pair of parentheses. It reports an error if one parenthesis in the pair has a linebreak inside it and the other parenthesis does not.</source>
          <target state="translated">&lt;code&gt;&quot;consistent&quot;&lt;/code&gt; は、括弧のペアごとに改行を一貫して使用する必要があります。ペアの一方の括弧内に改行があり、もう一方の括弧にはない場合、エラーを報告します。</target>
        </trans-unit>
        <trans-unit id="076794511414f48ff3bf0124d43b175991426e84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;consistent-as-needed&quot;&lt;/code&gt; ensures that either all shorthand or all long-form will be used in an object literal, but ensures all shorthand whenever possible.</source>
          <target state="translated">&lt;code&gt;&quot;consistent-as-needed&quot;&lt;/code&gt; は、すべての省略形またはすべての長い形式がオブジェクトリテラルで使用されることを保証しますが、可能な限りすべての省略形を保証します。</target>
        </trans-unit>
        <trans-unit id="edb9a4a0c1bea63f071384e32bb0f4df34779f20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;consistent-as-needed&quot;&lt;/code&gt; requires quotes around all object literal property names if any name strictly requires quotes, otherwise disallows quotes around object property names</source>
          <target state="translated">&lt;code&gt;&quot;consistent-as-needed&quot;&lt;/code&gt; では、名前が厳密に引用符を必要とする場合は、すべてのオブジェクトリテラルプロパティ名を引用符で囲む必要があります。それ以外の場合は、オブジェクトプロパティ名を引用符で囲みません。</target>
        </trans-unit>
        <trans-unit id="42faf21959cdccfe6debfbbc71f96300c4c47fac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;const&quot;: &quot;always&quot;&lt;/code&gt; requires one &lt;code&gt;const&lt;/code&gt; declaration per block</source>
          <target state="translated">&lt;code&gt;&quot;const&quot;: &quot;always&quot;&lt;/code&gt; ブロックごとに1 つの &lt;code&gt;const&lt;/code&gt; 宣言が必要</target>
        </trans-unit>
        <trans-unit id="505da704cad63a39030bcec38e039364874d6e18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;const&quot;: &quot;consecutive&quot;&lt;/code&gt; requires consecutive &lt;code&gt;const&lt;/code&gt; declarations to be a single declaration</source>
          <target state="translated">&lt;code&gt;&quot;const&quot;: &quot;consecutive&quot;&lt;/code&gt; は、連続した &lt;code&gt;const&lt;/code&gt; 宣言が単一の宣言である必要があります</target>
        </trans-unit>
        <trans-unit id="8963d386f9cbe9bdb669c12f9c52a6484648b8ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;const&quot;: &quot;never&quot;&lt;/code&gt; requires multiple &lt;code&gt;const&lt;/code&gt; declarations per block</source>
          <target state="translated">&lt;code&gt;&quot;const&quot;: &quot;never&quot;&lt;/code&gt; はブロックごとに複数の &lt;code&gt;const&lt;/code&gt; 宣言を必要とします</target>
        </trans-unit>
        <trans-unit id="a71371559cdfa09b6fed94f9b8cbf2cf0c13ca56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;const&quot;&lt;/code&gt; is &lt;code&gt;const&lt;/code&gt; variable declarations, both single-line and multiline.</source>
          <target state="translated">&lt;code&gt;&quot;const&quot;&lt;/code&gt; は、単一行と複数行の両方の &lt;code&gt;const&lt;/code&gt; 変数宣言です。</target>
        </trans-unit>
        <trans-unit id="ca8e085c200baef6727bcd455d732f5fab07d305" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;constructors&quot;&lt;/code&gt; - Class constructors.</source>
          <target state="translated">&lt;code&gt;&quot;constructors&quot;&lt;/code&gt; -クラスコンストラクタ。</target>
        </trans-unit>
        <trans-unit id="70146cc480177fbc6192e14a137b3945d321e4ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;continue&quot;&lt;/code&gt; is &lt;code&gt;continue&lt;/code&gt; statements.</source>
          <target state="translated">&lt;code&gt;&quot;continue&quot;&lt;/code&gt; は &lt;code&gt;continue&lt;/code&gt; ステートメントです。</target>
        </trans-unit>
        <trans-unit id="052933ebe6f563d8cff3bc672b08855fc8d0338d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;debugger&quot;&lt;/code&gt; is &lt;code&gt;debugger&lt;/code&gt; statements.</source>
          <target state="translated">&lt;code&gt;&quot;debugger&quot;&lt;/code&gt; は &lt;code&gt;debugger&lt;/code&gt; 文です。</target>
        </trans-unit>
        <trans-unit id="8827c5364c5a9545e2c45f2ba2eb684037659e60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;declaration&quot;&lt;/code&gt; requires the use of function declarations instead of function expressions</source>
          <target state="translated">&lt;code&gt;&quot;declaration&quot;&lt;/code&gt; では、関数式の代わりに関数宣言を使用する必要があります</target>
        </trans-unit>
        <trans-unit id="f88e51ff9c9805cd6860ee3dc3bd58fb91cf0ea2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;default&quot;&lt;/code&gt; is &lt;code&gt;default&lt;/code&gt; clauses in &lt;code&gt;switch&lt;/code&gt; statements.</source>
          <target state="translated">&lt;code&gt;&quot;default&quot;&lt;/code&gt; は、 &lt;code&gt;switch&lt;/code&gt; ステートメントの &lt;code&gt;default&lt;/code&gt; 句です。</target>
        </trans-unit>
        <trans-unit id="9a698398595af506915c46d0aed3d809dba2fe12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;default&quot;&lt;/code&gt; is &lt;code&gt;default&lt;/code&gt; labels.</source>
          <target state="translated">&lt;code&gt;&quot;default&quot;&lt;/code&gt; は &lt;code&gt;default&lt;/code&gt; ラベルです。</target>
        </trans-unit>
        <trans-unit id="b67c03c933dd6c6136ef4cf76c53f9e0cc522306" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;defaultAssignment&quot;: false&lt;/code&gt; disallows the conditional expression as a default assignment pattern</source>
          <target state="translated">&lt;code&gt;&quot;defaultAssignment&quot;: false&lt;/code&gt; は、条件式をデフォルトの割り当てパターンとして許可しません</target>
        </trans-unit>
        <trans-unit id="07e83ed64de4818708c7b36b9202714e7248bab2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;defaultAssignment&quot;: true&lt;/code&gt; (default) allows the conditional expression as a default assignment pattern</source>
          <target state="translated">&lt;code&gt;&quot;defaultAssignment&quot;: true&lt;/code&gt; （デフォルト）は、条件式をデフォルトの割り当てパターンとして許可します</target>
        </trans-unit>
        <trans-unit id="74f0ec400c18398f039bb13879826661ef201b22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;desc&quot;&lt;/code&gt; - enforce properties to be in descending order.</source>
          <target state="translated">&lt;code&gt;&quot;desc&quot;&lt;/code&gt; -プロパティを降順に強制します。</target>
        </trans-unit>
        <trans-unit id="94cbe21caf0b32a65b4e2054b908fd8649a5f09b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;directive&quot;&lt;/code&gt; is directive prologues. This matches directives; e.g. &lt;code&gt;&quot;use strict&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;directive&quot;&lt;/code&gt; はディレクティブのプロローグです。これはディレクティブに一致します。例： &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ce2a11306feef019ad79458a7a8cee85326738bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;do&quot;&lt;/code&gt; is &lt;code&gt;do-while&lt;/code&gt; statements. This matches all statements that the first token is &lt;code&gt;do&lt;/code&gt; keyword.</source>
          <target state="translated">&lt;code&gt;&quot;do&quot;&lt;/code&gt; は &lt;code&gt;do-while&lt;/code&gt; ステートメントです。これは、最初のトークンが &lt;code&gt;do&lt;/code&gt; キーワードであるすべてのステートメントと一致します。</target>
        </trans-unit>
        <trans-unit id="1946359f5fe82866a5ee841d80551759dd2188ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;double&quot;&lt;/code&gt; (default) requires the use of double quotes wherever possible</source>
          <target state="translated">&lt;code&gt;&quot;double&quot;&lt;/code&gt; （デフォルト）では、可能な限り二重引用符を使用する必要があります</target>
        </trans-unit>
        <trans-unit id="584a49b30e35ad2d803bc25c7ae377c2d62cee09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;empty&quot;&lt;/code&gt; is empty statements.</source>
          <target state="translated">&lt;code&gt;&quot;empty&quot;&lt;/code&gt; は空のステートメントです。</target>
        </trans-unit>
        <trans-unit id="2bf19a365a539918756262a771598c8d0a80f224" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;enforceForArrowConditionals&quot;: false&lt;/code&gt; allows extra parentheses around ternary expressions which are the body of an arrow function</source>
          <target state="translated">&lt;code&gt;&quot;enforceForArrowConditionals&quot;: false&lt;/code&gt; は、矢印関数の本体である三項式の周りに追加の括弧を許可します</target>
        </trans-unit>
        <trans-unit id="091fc1fe7a50315ec9a2eb4233f368274d9ea53d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;enforceForClassMembers&quot;: true&lt;/code&gt; (default) additionally applies this rule to class members.</source>
          <target state="translated">&lt;code&gt;&quot;enforceForClassMembers&quot;: true&lt;/code&gt; （デフォルト）は、このルールをクラスメンバーに追加で適用します。</target>
        </trans-unit>
        <trans-unit id="8c77a2bffedc0b30973cd53b184a8a106862fa7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;enforceForClassMembers&quot;: true&lt;/code&gt; additionally applies this rule to class members (default is &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;&quot;enforceForClassMembers&quot;: true&lt;/code&gt; は、このルールをクラスメンバーに追加で適用します（デフォルトは &lt;code&gt;false&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="78f76565e119685beb5a6ccba0546285451f72c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;enforceForFunctionPrototypeMethods&quot;: false&lt;/code&gt; allows extra parentheses around immediate &lt;code&gt;.call&lt;/code&gt; and &lt;code&gt;.apply&lt;/code&gt; method calls on function expressions and around function expressions in the same context.</source>
          <target state="translated">&lt;code&gt;&quot;enforceForFunctionPrototypeMethods&quot;: false&lt;/code&gt; 使用すると、関数式および同じコンテキスト内の関数式で、即時の &lt;code&gt;.call&lt;/code&gt; および &lt;code&gt;.apply&lt;/code&gt; メソッド呼び出しを括弧で囲むことができます。</target>
        </trans-unit>
        <trans-unit id="9670ad0d42941defa5f200b7b011cfa5f1b33a1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;enforceForIndexOf&quot;: true&lt;/code&gt; additionally disallows the use of &lt;code&gt;indexOf&lt;/code&gt; and &lt;code&gt;lastIndexOf&lt;/code&gt; methods with &lt;code&gt;NaN&lt;/code&gt;. Default is &lt;code&gt;false&lt;/code&gt;, meaning that this rule by default does not warn about &lt;code&gt;indexOf(NaN)&lt;/code&gt; or &lt;code&gt;lastIndexOf(NaN)&lt;/code&gt; method calls.</source>
          <target state="translated">&lt;code&gt;&quot;enforceForIndexOf&quot;: true&lt;/code&gt; さらに、 &lt;code&gt;NaN&lt;/code&gt; での &lt;code&gt;indexOf&lt;/code&gt; メソッドと &lt;code&gt;lastIndexOf&lt;/code&gt; メソッドの使用を禁止します。デフォルトは &lt;code&gt;false&lt;/code&gt; です。つまり、このルールはデフォルトで &lt;code&gt;indexOf(NaN)&lt;/code&gt; または &lt;code&gt;lastIndexOf(NaN)&lt;/code&gt; メソッドの呼び出しについて警告しません。</target>
        </trans-unit>
        <trans-unit id="79e462971a864be1b9fa24fdfaa8318c192e91cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;enforceForIndexOf&quot;&lt;/code&gt; when set to &lt;code&gt;true&lt;/code&gt; disallows the use of &lt;code&gt;indexOf&lt;/code&gt; and &lt;code&gt;lastIndexOf&lt;/code&gt; methods with &lt;code&gt;NaN&lt;/code&gt;. Default is &lt;code&gt;false&lt;/code&gt;, meaning that this rule by default does not warn about &lt;code&gt;indexOf(NaN)&lt;/code&gt; or &lt;code&gt;lastIndexOf(NaN)&lt;/code&gt; method calls.</source>
          <target state="translated">&lt;code&gt;&quot;enforceForIndexOf&quot;&lt;/code&gt; を &lt;code&gt;true&lt;/code&gt; に設定すると、 &lt;code&gt;NaN&lt;/code&gt; での &lt;code&gt;indexOf&lt;/code&gt; および &lt;code&gt;lastIndexOf&lt;/code&gt; メソッドの使用が禁止されます。デフォルトは &lt;code&gt;false&lt;/code&gt; です。つまり、このルールはデフォルトで、 &lt;code&gt;indexOf(NaN)&lt;/code&gt; または &lt;code&gt;lastIndexOf(NaN)&lt;/code&gt; メソッド呼び出しについて警告しません。</target>
        </trans-unit>
        <trans-unit id="9d2080644a8e5a7f2092c76b929460db5bdbf2b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;enforceForLogicalOperands&quot;&lt;/code&gt; when set to &lt;code&gt;true&lt;/code&gt;, in addition to checking default contexts, checks whether the extra boolean cast is contained within a logical expression. Default is &lt;code&gt;false&lt;/code&gt;, meaning that this rule by default does not warn about extra booleans cast inside logical expression.</source>
          <target state="translated">&lt;code&gt;&quot;enforceForLogicalOperands&quot;&lt;/code&gt; を &lt;code&gt;true&lt;/code&gt; に設定すると、デフォルトコンテキストのチェックに加えて、余分なブールキャストが論理式に含まれているかどうかがチェックされます。デフォルトは &lt;code&gt;false&lt;/code&gt; です。つまり、このルールはデフォルトで、論理式内にキャストされた余分なブール値について警告しません。</target>
        </trans-unit>
        <trans-unit id="a790461608bc906beb9e7a3823f4297457985ff1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;enforceForNewInMemberExpressions&quot;: false&lt;/code&gt; allows extra parentheses around &lt;code&gt;new&lt;/code&gt; expressions in member expressions</source>
          <target state="translated">&lt;code&gt;&quot;enforceForNewInMemberExpressions&quot;: false&lt;/code&gt; は、メンバー式の &lt;code&gt;new&lt;/code&gt; 式の周りに余分な括弧を許可します</target>
        </trans-unit>
        <trans-unit id="4a9431d8a9cd5e0f4ab4b9d3a8add0e58f4dcef1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;enforceForOrderingRelations&quot;: false&lt;/code&gt; (default) allows negation of the left-hand side of ordering relational operators (&lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;&quot;enforceForOrderingRelations&quot;: false&lt;/code&gt; （デフォルト）は、関係演算子（ &lt;code&gt;&amp;lt;&lt;/code&gt; 、 &lt;code&gt;&amp;gt;&lt;/code&gt; 、 &lt;code&gt;&amp;lt;=&lt;/code&gt; 、 &lt;code&gt;&amp;gt;=&lt;/code&gt; ）の順序付けの左側の否定を許可します</target>
        </trans-unit>
        <trans-unit id="efe9f49eef32e6f654543ec72ca17b6e577f03f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;enforceForOrderingRelations&quot;: true&lt;/code&gt; disallows negation of the left-hand side of ordering relational operators</source>
          <target state="translated">&lt;code&gt;&quot;enforceForOrderingRelations&quot;: true&lt;/code&gt; は、順序付け関係演算子の左側の否定を禁止します</target>
        </trans-unit>
        <trans-unit id="4f3500fe642d3a6bb1e1229a2d07197644080755" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;enforceForSequenceExpressions&quot;: false&lt;/code&gt; allows extra parentheses around sequence expressions</source>
          <target state="translated">&lt;code&gt;&quot;enforceForSequenceExpressions&quot;: false&lt;/code&gt; は、シーケンス式の周りに追加の括弧を許可します</target>
        </trans-unit>
        <trans-unit id="04f445f5eba8da9e74831b480c22b39b6bb1d941" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;enforceForSwitchCase&quot;: true&lt;/code&gt; (default) additionally disallows &lt;code&gt;case NaN&lt;/code&gt; and &lt;code&gt;switch(NaN)&lt;/code&gt; in &lt;code&gt;switch&lt;/code&gt; statements.</source>
          <target state="translated">&lt;code&gt;&quot;enforceForSwitchCase&quot;: true&lt;/code&gt; （デフォルト &lt;code&gt;switch(NaN)&lt;/code&gt; は、 &lt;code&gt;switch&lt;/code&gt; ステートメントで &lt;code&gt;case NaN&lt;/code&gt; とswitch（NaN）を追加で禁止します。</target>
        </trans-unit>
        <trans-unit id="5c82b9f31c667a8ccdfe53e97aac025111552e2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;enforceForSwitchCase&quot;&lt;/code&gt; when set to &lt;code&gt;true&lt;/code&gt; disallows &lt;code&gt;case NaN&lt;/code&gt; and &lt;code&gt;switch(NaN)&lt;/code&gt; in &lt;code&gt;switch&lt;/code&gt; statements. Default is &lt;code&gt;false&lt;/code&gt;, meaning that this rule by default does not warn about &lt;code&gt;case NaN&lt;/code&gt; or &lt;code&gt;switch(NaN)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;enforceForSwitchCase&quot;&lt;/code&gt; を &lt;code&gt;true&lt;/code&gt; に設定すると、 &lt;code&gt;switch&lt;/code&gt; ステートメントでの &lt;code&gt;case NaN&lt;/code&gt; と &lt;code&gt;switch(NaN)&lt;/code&gt; が許可されなくなります。デフォルトは &lt;code&gt;false&lt;/code&gt; です。つまり、このルールはデフォルトで、 &lt;code&gt;case NaN&lt;/code&gt; または &lt;code&gt;switch(NaN)&lt;/code&gt; について警告しません。</target>
        </trans-unit>
        <trans-unit id="7b78afb2b7b9d89c115c84d92208d1d8a82d75f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;enforceInMethodNames&quot;: false&lt;/code&gt; (default) allows dangling underscores in method names</source>
          <target state="translated">&lt;code&gt;&quot;enforceInMethodNames&quot;: false&lt;/code&gt; （デフォルト）では、メソッド名にダングリングアンダースコアを使用できます</target>
        </trans-unit>
        <trans-unit id="e4ceaa5545346abc92e5cae207060e65d37f2fe2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;error&quot;&lt;/code&gt; or &lt;code&gt;2&lt;/code&gt; - turn the rule on as an error (exit code is 1 when triggered)</source>
          <target state="translated">&lt;code&gt;&quot;error&quot;&lt;/code&gt; または &lt;code&gt;2&lt;/code&gt; -エラーとしてルールをオンにします（トリガーされると、終了コードは1です）</target>
        </trans-unit>
        <trans-unit id="97d56c543b3afb49b47fc685b82f339e91420495" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;error&quot;&lt;/code&gt; or &lt;code&gt;2&lt;/code&gt; - turn the rule on as an error (exit code will be 1)</source>
          <target state="translated">&lt;code&gt;&quot;error&quot;&lt;/code&gt; または &lt;code&gt;2&lt;/code&gt; -エラーとしてルールをオンにします（終了コードは1になります）</target>
        </trans-unit>
        <trans-unit id="9040fb40ac3c47abb7a741edc8f28c72244aadec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;except-parens&quot;&lt;/code&gt; (default) allows assignments in test conditions &lt;em&gt;only if&lt;/em&gt; they are enclosed in parentheses (for example, to allow reassigning a variable in the test of a &lt;code&gt;while&lt;/code&gt; or &lt;code&gt;do...while&lt;/code&gt; loop)</source>
          <target state="translated">&lt;code&gt;&quot;except-parens&quot;&lt;/code&gt; （デフォルト）は、括弧で囲まれている&lt;em&gt;場合&lt;/em&gt;に&lt;em&gt;のみ&lt;/em&gt;、テスト条件&lt;em&gt;での&lt;/em&gt;割り当てを許可します（たとえば、 &lt;code&gt;while&lt;/code&gt; または &lt;code&gt;do...while&lt;/code&gt; ループのテストで変数を再割り当てできるようにします）。</target>
        </trans-unit>
        <trans-unit id="66438d350d87cc6c0cccdaa292f4578135ed4bef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;exceptAfterSingleLine&quot;: false&lt;/code&gt;(default) &lt;strong&gt;do not&lt;/strong&gt; skip checking empty lines after single-line class members</source>
          <target state="translated">&lt;code&gt;&quot;exceptAfterSingleLine&quot;: false&lt;/code&gt; （デフォルト）単一行クラスメンバーの後の空行のチェックをスキップ&lt;strong&gt;しません&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bcfe518ca39e107d6ae6647494ed81d68864134e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;exceptAfterSingleLine&quot;: true&lt;/code&gt; skip checking empty lines after single-line class members</source>
          <target state="translated">&lt;code&gt;&quot;exceptAfterSingleLine&quot;: true&lt;/code&gt; 、単一行クラスメンバーの後の空行のチェックをスキップします</target>
        </trans-unit>
        <trans-unit id="e7d3c3515e0c877788a7e454e303b5209567907a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;exceptionPatterns&quot;&lt;/code&gt; array of strings representing regular expression patterns, allows identifiers that match any of the patterns.</source>
          <target state="translated">&lt;code&gt;&quot;exceptionPatterns&quot;&lt;/code&gt; 正規表現パターンを表す文字列の「exceptionPatterns」配列は、任意のパターンに一致する識別子を許可します。</target>
        </trans-unit>
        <trans-unit id="92440e7d806ba1d4bcb9dfc626ec0de930cc7ddd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;exceptions&quot;: { &quot;Property&quot;: true }&lt;/code&gt; (&lt;code&gt;&quot;Property&quot;&lt;/code&gt; is the only node specified by default) specifies nodes to ignore</source>
          <target state="translated">&lt;code&gt;&quot;exceptions&quot;: { &quot;Property&quot;: true }&lt;/code&gt; （ &lt;code&gt;&quot;Property&quot;&lt;/code&gt; はデフォルトで指定されている唯一のノードです）無視するノードを指定します</target>
        </trans-unit>
        <trans-unit id="737940b6b574545c30a8dc36bc9d748285389070" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;exceptions&quot;&lt;/code&gt; allows an array of specified identifier names</source>
          <target state="translated">&lt;code&gt;&quot;exceptions&quot;&lt;/code&gt; は、指定された識別子名の配列を許可します</target>
        </trans-unit>
        <trans-unit id="ffefb2aaf49df643bdcdef3a3a13af328029397c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;exceptions&quot;&lt;/code&gt; has properties whose names correspond to node types in the abstract syntax tree (AST) of JavaScript code:</source>
          <target state="translated">&lt;code&gt;&quot;exceptions&quot;&lt;/code&gt; は、JavaScriptコードの抽象構文ツリー（AST）のノードタイプに対応する名前を持つプロパティがあります。</target>
        </trans-unit>
        <trans-unit id="6ce1f324ab7d98d83749368b5803b7fd2cb2bc81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;export&quot;&lt;/code&gt; is &lt;code&gt;export&lt;/code&gt; declarations.</source>
          <target state="translated">&lt;code&gt;&quot;export&quot;&lt;/code&gt; は &lt;code&gt;export&lt;/code&gt; 申告です。</target>
        </trans-unit>
        <trans-unit id="0a58c1fcc395e77d8c028ba2cf3edad2145674d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;expression&quot;&lt;/code&gt; (default) requires the use of function expressions instead of function declarations</source>
          <target state="translated">&lt;code&gt;&quot;expression&quot;&lt;/code&gt; （デフォルト）では、関数宣言の代わりに関数式を使用する必要があります</target>
        </trans-unit>
        <trans-unit id="5dcb2142e4b729408239e55cddb0793569814d00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;expression&quot;&lt;/code&gt; is expression statements.</source>
          <target state="translated">&lt;code&gt;&quot;expression&quot;&lt;/code&gt; は式ステートメントです。</target>
        </trans-unit>
        <trans-unit id="9022a9f8816858e2f73acd78d0d49592dc426167" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;first&quot;&lt;/code&gt; enforces that semicolons are at the beginning of statements. Semicolons of &lt;code&gt;for&lt;/code&gt; loop heads (&lt;code&gt;for(a;b;c){}&lt;/code&gt;) should be at the end of lines even if you use this option.</source>
          <target state="translated">&lt;code&gt;&quot;first&quot;&lt;/code&gt; は、セミコロンがステートメントの先頭にあることを強制します。このオプションを使用する場合でも、 &lt;code&gt;for&lt;/code&gt; ループの先頭のセミコロン（ &lt;code&gt;for(a;b;c){}&lt;/code&gt; ）は行末になければなりません。</target>
        </trans-unit>
        <trans-unit id="3a3ac754e3ff3b6a983be329d4f24c82c5f17f4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;first&quot;&lt;/code&gt; requires a comma before and on the same line as an array element, object property, or variable declaration</source>
          <target state="translated">&lt;code&gt;&quot;first&quot;&lt;/code&gt; は、配列要素、オブジェクトプロパティ、または変数宣言の前と同じ行にコンマが必要です</target>
        </trans-unit>
        <trans-unit id="71f462a7bf1f6fcc0b76edfe00dc49ae4268dad5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;flatTernaryExpressions&quot;: true&lt;/code&gt; (&lt;code&gt;false&lt;/code&gt; by default) requires no indentation for ternary expressions which are nested in other ternary expressions.</source>
          <target state="translated">&lt;code&gt;&quot;flatTernaryExpressions&quot;: true&lt;/code&gt; （デフォルトでは &lt;code&gt;false&lt;/code&gt; ）では、他の三項式にネストされている三項式のインデントは不要です。</target>
        </trans-unit>
        <trans-unit id="8f48827704456be6d5efc15814526ddc9dcd5643" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;foo&quot;&lt;/code&gt; will load &lt;code&gt;eslint-formatter-foo&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;foo&quot;&lt;/code&gt; は &lt;code&gt;eslint-formatter-foo&lt;/code&gt; をロードします。</target>
        </trans-unit>
        <trans-unit id="912af4958598c17d64b083a78f4f3e05ff92913a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;for&quot;&lt;/code&gt; is &lt;code&gt;for&lt;/code&gt; loop families. This matches all statements that the first token is &lt;code&gt;for&lt;/code&gt; keyword.</source>
          <target state="translated">&lt;code&gt;&quot;for&quot;&lt;/code&gt; である &lt;code&gt;for&lt;/code&gt; 、ループの家族。これは、最初のトークンであることをすべての文と一致する &lt;code&gt;for&lt;/code&gt; のキーワードを。</target>
        </trans-unit>
        <trans-unit id="89ef9681a4e842edcab7e63226229345335991eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;function&quot;&lt;/code&gt; is function declarations.</source>
          <target state="translated">&lt;code&gt;&quot;function&quot;&lt;/code&gt; は関数宣言です。</target>
        </trans-unit>
        <trans-unit id="70de95536bc3b7b890b3a0c437c3985a960a6e33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;function&quot;&lt;/code&gt; otherwise</source>
          <target state="translated">&lt;code&gt;&quot;function&quot;&lt;/code&gt; それ以外の「機能」</target>
        </trans-unit>
        <trans-unit id="327fad33eaf3c5ca17d040dec87af1b56a3999a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;function&quot;&lt;/code&gt; requires one strict mode directive in each top-level function declaration or expression (and disallows any other strict mode directives)</source>
          <target state="translated">&lt;code&gt;&quot;function&quot;&lt;/code&gt; では、トップレベルの関数宣言または式ごとに1つの厳密モードディレクティブが必要です（他のすべての厳密モードディレクティブは許可されていません）。</target>
        </trans-unit>
        <trans-unit id="303d4955f3ca9bc504b65300502052aec41b1d2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;functionPrototypeMethods&quot;: true&lt;/code&gt; additionally enforces wrapping function expressions invoked using &lt;code&gt;.call&lt;/code&gt; and &lt;code&gt;.apply&lt;/code&gt;. The default is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;functionPrototypeMethods&quot;: true&lt;/code&gt; は、 &lt;code&gt;.call&lt;/code&gt; および &lt;code&gt;.apply&lt;/code&gt; を使用して呼び出されたラッピング関数式をさらに強制します。デフォルトは &lt;code&gt;false&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="f737f071f1e0ce69122097a3c7541eeec498532a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;functions&quot;&lt;/code&gt; (default) disallows &lt;code&gt;function&lt;/code&gt; declarations in nested blocks</source>
          <target state="translated">&lt;code&gt;&quot;functions&quot;&lt;/code&gt; （デフォルト）はネストされたブロックでの &lt;code&gt;function&lt;/code&gt; 宣言を許可しません</target>
        </trans-unit>
        <trans-unit id="d15387849123fa40d9b18f21a00e8d8b708498a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;functions&quot;&lt;/code&gt; - Normal functions.</source>
          <target state="translated">&lt;code&gt;&quot;functions&quot;&lt;/code&gt; -通常の関数。</target>
        </trans-unit>
        <trans-unit id="0f31c59ca42e33c677b988697e1fd96d7cb19ca8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;functions&quot;&lt;/code&gt; disallows unnecessary parentheses &lt;em&gt;only&lt;/em&gt; around function expressions</source>
          <target state="translated">&lt;code&gt;&quot;functions&quot;&lt;/code&gt; &lt;em&gt;は&lt;/em&gt;、関数式の周りで&lt;em&gt;のみ&lt;/em&gt;不要な括弧を許可しません</target>
        </trans-unit>
        <trans-unit id="20a3e3c95476f26c93172e938b282e440c920ae9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;generatorFunctions&quot;&lt;/code&gt; - Generator functions.</source>
          <target state="translated">&lt;code&gt;&quot;generatorFunctions&quot;&lt;/code&gt; -ジェネレーター関数。</target>
        </trans-unit>
        <trans-unit id="b4bbfd1c8360b3c4bdf6ee31fc1258b8895aa215" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;generatorMethods&quot;&lt;/code&gt; - Class methods and method shorthands of object literals with generator.</source>
          <target state="translated">&lt;code&gt;&quot;generatorMethods&quot;&lt;/code&gt; - ジェネレーターを使用したオブジェクトリテラルのクラスメソッドとメソッドの省略形。</target>
        </trans-unit>
        <trans-unit id="37d365725f89b94a0e0cd672067effc57bad56f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;getBeforeSet&quot;&lt;/code&gt; if a property has both getter and setter, requires the getter to be defined before the setter.</source>
          <target state="translated">&lt;code&gt;&quot;getBeforeSet&quot;&lt;/code&gt; は、プロパティにゲッターとセッターの両方がある場合、セッターの前にゲッターを定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="649024e98b4a064cabea2a5b90ddd780ee97828b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;getWithoutSet&quot;: true&lt;/code&gt; will also warn for getters without setters in classes.</source>
          <target state="translated">&lt;code&gt;&quot;getWithoutSet&quot;: true&lt;/code&gt; は、クラスにセッターがないゲッターについても警告します。</target>
        </trans-unit>
        <trans-unit id="250fbac2b188b2a0bcf517a4a8ff8e3968f0e199" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;getters&quot;&lt;/code&gt; - Getters.</source>
          <target state="translated">&lt;code&gt;&quot;getters&quot;&lt;/code&gt; -ゲッター。</target>
        </trans-unit>
        <trans-unit id="4f4be8e037d1ed56b9e2415d84d1e326d705947c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;global&quot;&lt;/code&gt; if ESLint considers a file to be a &lt;strong&gt;CommonJS&lt;/strong&gt; module</source>
          <target state="translated">&lt;code&gt;&quot;global&quot;&lt;/code&gt; ESLintがファイルを&lt;strong&gt;CommonJS&lt;/strong&gt;モジュールと見なす場合は「グローバル」</target>
        </trans-unit>
        <trans-unit id="ff7578ba4b16c24ee74915b78f6efb369e78a113" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;global&quot;&lt;/code&gt; requires one strict mode directive in the global scope (and disallows any other strict mode directives)</source>
          <target state="translated">&lt;code&gt;&quot;global&quot;&lt;/code&gt; は、グローバルスコープに1つの厳密モードディレクティブが必要です（他のすべての厳密モードディレクティブは許可されていません）</target>
        </trans-unit>
        <trans-unit id="b4050fd92b8a6ca95474a97cdaac4f699e7dd665" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;globalReturn&quot;: true&lt;/code&gt; property in the &lt;code&gt;ecmaFeatures&lt;/code&gt; object of &lt;a href=&quot;../user-guide/configuring#specifying-parser-options&quot;&gt;parser options&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&quot;globalReturn&quot;: true&lt;/code&gt; &lt;a href=&quot;../user-guide/configuring#specifying-parser-options&quot;&gt;パーサーオプションの&lt;/a&gt; &lt;code&gt;ecmaFeatures&lt;/code&gt; オブジェクトのtrueプロパティ</target>
        </trans-unit>
        <trans-unit id="2cc954c8c29040f13e21c7055edc3f491a56b1d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;if&quot;&lt;/code&gt; is &lt;code&gt;if&lt;/code&gt; statements.</source>
          <target state="translated">&lt;code&gt;&quot;if&quot;&lt;/code&gt; は &lt;code&gt;if&lt;/code&gt; ステートメントです。</target>
        </trans-unit>
        <trans-unit id="2f1e26a0d1ee121ccf0e7f3d1a7e581c7fefa5d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;ignore&quot;&lt;/code&gt; - an optional array of loop types that will be ignored by this rule.</source>
          <target state="translated">&lt;code&gt;&quot;ignore&quot;&lt;/code&gt; -このルールによって無視されるループタイプのオプションの配列。</target>
        </trans-unit>
        <trans-unit id="11ee11a97b5a25d3ddc13671a302d98218ac10a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;ignoreCase&quot;: true&lt;/code&gt; (default &lt;code&gt;false&lt;/code&gt;) ignores the case-sensitivity of the variables order</source>
          <target state="translated">&lt;code&gt;&quot;ignoreCase&quot;: true&lt;/code&gt; （デフォルトは &lt;code&gt;false&lt;/code&gt; ）は、変数の順序の大文字と小文字の区別を無視します</target>
        </trans-unit>
        <trans-unit id="9ce0d37c731fb413707ee584cfa1595a46dc4069" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;ignoreChainWithDepth&quot;&lt;/code&gt; (default: &lt;code&gt;2&lt;/code&gt;) allows chains up to a specified depth.</source>
          <target state="translated">&lt;code&gt;&quot;ignoreChainWithDepth&quot;&lt;/code&gt; （デフォルト： &lt;code&gt;2&lt;/code&gt; ）は、指定された深さまでのチェーンを許可します。</target>
        </trans-unit>
        <trans-unit id="cd194b0cc4e72d0de8d5371afa3b9813dabc837d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;ignoreComments&quot;: false&lt;/code&gt; (default) disallows trailing whitespace in comment blocks</source>
          <target state="translated">&lt;code&gt;&quot;ignoreComments&quot;: false&lt;/code&gt; （デフォルト）はコメントブロックの末尾の空白を許可しません</target>
        </trans-unit>
        <trans-unit id="c5af197b3e4c9238c86f2dbf6c6a420ea7f1d3d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;ignoreComments&quot;: true&lt;/code&gt; allows trailing whitespace in comment blocks</source>
          <target state="translated">&lt;code&gt;&quot;ignoreComments&quot;: true&lt;/code&gt; 、コメントブロックの末尾の空白を許可します</target>
        </trans-unit>
        <trans-unit id="8ff6c207d768587d0c364fa0d8df790976c920df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;ignoreComments&quot;: true&lt;/code&gt; ignores all trailing comments and comments on their own line</source>
          <target state="translated">&lt;code&gt;&quot;ignoreComments&quot;: true&lt;/code&gt; すると、後続のコメントと自分の行のコメントがすべて無視されます</target>
        </trans-unit>
        <trans-unit id="86678d095cf71959840c1dc0cb7fa7d434d2647c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;ignoreComments&quot;&lt;/code&gt; (default: false) can be used when comments do not need to be aligned with nodes on the previous or next line.</source>
          <target state="translated">&lt;code&gt;&quot;ignoreComments&quot;&lt;/code&gt; （デフォルト：false）は、コメントを前または次の行のノードに揃える必要がない場合に使用できます。</target>
        </trans-unit>
        <trans-unit id="1eda81719988db84752b3224f0cc6f863b4089fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;ignoreConstructors&quot;: true&lt;/code&gt; can be used to prevent the rule from reporting errors for constructor functions. (By default, the rule treats constructors the same way as other functions.) Note that this option can only be enabled when the string option is set to &lt;code&gt;&quot;always&quot;&lt;/code&gt; or &lt;code&gt;&quot;methods&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;ignoreConstructors&quot;: true&lt;/code&gt; を使用して、ルールがコンストラクター関数のエラーを報告しないようにすることができます。（デフォルトでは、ルールはコンストラクターを他の関数と同じように扱います。）このオプションは、文字列オプションが &lt;code&gt;&quot;always&quot;&lt;/code&gt; または &lt;code&gt;&quot;methods&quot;&lt;/code&gt; に設定されている場合にのみ有効にできることに注意してください。</target>
        </trans-unit>
        <trans-unit id="9324755375c52b1b88df2d66579a7b15c16434d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;ignoreDestructuring&quot;: false&lt;/code&gt; (default) enforces &lt;code&gt;id-match&lt;/code&gt; for destructured identifiers</source>
          <target state="translated">&lt;code&gt;&quot;ignoreDestructuring&quot;: false&lt;/code&gt; （デフォルト）は、非構造化 &lt;code&gt;id-match&lt;/code&gt; を強制します</target>
        </trans-unit>
        <trans-unit id="a2b9011fe7e77b2c2263ff3fedaec7c5ccc5b383" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;ignoreDestructuring&quot;: false&lt;/code&gt; (default) enforces camelcase style for destructured identifiers</source>
          <target state="translated">&lt;code&gt;&quot;ignoreDestructuring&quot;: false&lt;/code&gt; （デフォルト）は、非構造化識別子にキャメルケーススタイルを適用します</target>
        </trans-unit>
        <trans-unit id="e8df29372c2bfc0ea1314d7d36e8b0eedb8f31fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;ignoreDestructuring&quot;: true&lt;/code&gt; does not check destructured identifiers</source>
          <target state="translated">&lt;code&gt;&quot;ignoreDestructuring&quot;: true&lt;/code&gt; は分解された識別子をチェックしません</target>
        </trans-unit>
        <trans-unit id="848bfa12bba33ddef82b9653d15f024876d325fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;ignoreDestructuring&quot;: true&lt;/code&gt; does not check destructured identifiers (but still checks any use of those identifiers later in the code)</source>
          <target state="translated">&lt;code&gt;&quot;ignoreDestructuring&quot;: true&lt;/code&gt; は分解された識別子をチェックしません（ただし、コードの後半でこれらの識別子の使用をチェックします）</target>
        </trans-unit>
        <trans-unit id="a6bee53a9c3250d5b608c51d4ab19a3695d4733c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;ignoreEOLComments&quot;: true&lt;/code&gt; (defaults to &lt;code&gt;false&lt;/code&gt;) ignores multiple spaces before comments that occur at the end of lines</source>
          <target state="translated">&lt;code&gt;&quot;ignoreEOLComments&quot;: true&lt;/code&gt; （デフォルトは &lt;code&gt;false&lt;/code&gt; ）は、行末にあるコメントの前の複数のスペースを無視します</target>
        </trans-unit>
        <trans-unit id="cefc24cc20cc192692d8b03a9c1158d676ccfc67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;ignoreGlobals&quot;: false&lt;/code&gt; (default) enforces camelcase style for global variables</source>
          <target state="translated">&lt;code&gt;&quot;ignoreGlobals&quot;: false&lt;/code&gt; （デフォルト）はグローバル変数にキャメルケーススタイルを適用します</target>
        </trans-unit>
        <trans-unit id="abde046d8912236d5a9a4c7f054672354f39ba03" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;ignoreGlobals&quot;: true&lt;/code&gt; does not enforce camelcase style for global variables</source>
          <target state="translated">&lt;code&gt;&quot;ignoreGlobals&quot;: true&lt;/code&gt; は、グローバル変数にキャメルケーススタイルを適用しません</target>
        </trans-unit>
        <trans-unit id="7c4de0c5d11cf6425530702611a85d483218a39d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;ignoreImports&quot;: false&lt;/code&gt; (default) enforces camelcase style for ES2015 imports</source>
          <target state="translated">&lt;code&gt;&quot;ignoreImports&quot;: false&lt;/code&gt; （デフォルト）は、ES2015インポートにキャメルケーススタイルを適用します</target>
        </trans-unit>
        <trans-unit id="c06adc6b29e6f320a220a0b11816401550c77f24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;ignoreImports&quot;: true&lt;/code&gt; does not check ES2015 imports (but still checks any use of the imports later in the code except function arguments)</source>
          <target state="translated">&lt;code&gt;&quot;ignoreImports&quot;: true&lt;/code&gt; はES2015インポートをチェックしません（ただし、関数の引数を除いて、コードの後半でインポートの使用をチェックします）</target>
        </trans-unit>
        <trans-unit id="c9d220952279a8fd885f2735138e9baa9f461bcc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;ignoreJSX&quot;: &quot;none|all|multi-line|single-line&quot;&lt;/code&gt; allows extra parentheses around no/all/multi-line/single-line JSX components. Defaults to &lt;code&gt;none&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;ignoreJSX&quot;: &quot;none|all|multi-line|single-line&quot;&lt;/code&gt; は、no / all / multi-line / single-line JSXコンポーネントを括弧で囲みます。デフォルトは &lt;code&gt;none&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="424b892947cc08f0682d2dd7b8d7d9f078ad8276" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;ignorePattern&quot;&lt;/code&gt; custom patterns to be ignored by the rule</source>
          <target state="translated">&lt;code&gt;&quot;ignorePattern&quot;&lt;/code&gt; ルールによって無視される「ignorePattern」カスタムパターン</target>
        </trans-unit>
        <trans-unit id="f56f4a7c7c60a6dcc69eba91f858033d9f40924f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;ignorePattern&quot;&lt;/code&gt; ignores lines matching a regular expression; can only match a single line and need to be double escaped when written in YAML or JSON</source>
          <target state="translated">&lt;code&gt;&quot;ignorePattern&quot;&lt;/code&gt; は、正規表現に一致する行を無視します。YAMLまたはJSONで記述されている場合、1行のみに一致し、二重にエスケープする必要があります</target>
        </trans-unit>
        <trans-unit id="62ca3ff829f4771e837c50042238865047ffc9bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;ignoreRegExpLiterals&quot;: true&lt;/code&gt; ignores lines that contain a RegExp literal</source>
          <target state="translated">&lt;code&gt;&quot;ignoreRegExpLiterals&quot;: true&lt;/code&gt; は、RegExpリテラルを含む行を無視します</target>
        </trans-unit>
        <trans-unit id="2b2881a0a421a40f8f96750e1802e3ceb876a6da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;ignoreStrings&quot;: true&lt;/code&gt; ignores lines that contain a double-quoted or single-quoted string</source>
          <target state="translated">&lt;code&gt;&quot;ignoreStrings&quot;: true&lt;/code&gt; は、二重引用符または単一引用符で囲まれた文字列を含む行を無視します</target>
        </trans-unit>
        <trans-unit id="bedb24d123614772cec13757e5e1605c72865808" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;ignoreTemplateLiterals&quot;: true&lt;/code&gt; ignores lines that contain a template literal</source>
          <target state="translated">&lt;code&gt;&quot;ignoreTemplateLiterals&quot;: true&lt;/code&gt; は、テンプレートリテラルを含む行を無視します</target>
        </trans-unit>
        <trans-unit id="db327f556733841581db8af47caa3f892917e509" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;ignoreTopLevelFunctions&quot;: true&lt;/code&gt; ignores top-level functions</source>
          <target state="translated">&lt;code&gt;&quot;ignoreTopLevelFunctions&quot;: true&lt;/code&gt; はトップレベルの関数を無視します</target>
        </trans-unit>
        <trans-unit id="3e2692cc9bf6d67b69721d045ae8a0dd3830f30f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;ignoreTrailingComments&quot;: true&lt;/code&gt; ignores only trailing comments</source>
          <target state="translated">&lt;code&gt;&quot;ignoreTrailingComments&quot;: true&lt;/code&gt; は末尾のコメントのみを無視します</target>
        </trans-unit>
        <trans-unit id="37017c24442e0b5452a4217f8447ff36b4adc6f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;ignoreUrls&quot;: true&lt;/code&gt; ignores lines that contain a URL</source>
          <target state="translated">&lt;code&gt;&quot;ignoreUrls&quot;: true&lt;/code&gt; はURLを含む行を無視します</target>
        </trans-unit>
        <trans-unit id="13bec369cf2c6626a37bbcefcbb0c115f297093b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;ignoredNodes&quot;&lt;/code&gt; accepts an array of &lt;a href=&quot;../developer-guide/selectors&quot;&gt;selectors&lt;/a&gt;. If an AST node is matched by any of the selectors, the indentation of tokens which are direct children of that node will be ignored. This can be used as an escape hatch to relax the rule if you disagree with the indentation that it enforces for a particular syntactic pattern.</source>
          <target state="translated">&lt;code&gt;&quot;ignoredNodes&quot;&lt;/code&gt; は&lt;a href=&quot;../developer-guide/selectors&quot;&gt;セレクターの&lt;/a&gt;配列を受け入れます。ASTノードがいずれかのセレクターと一致する場合、そのノードの直接の子であるトークンのインデントは無視されます。これは、特定の構文パターンに適用されるインデントに同意しない場合に、ルールを緩和するエスケープハッチとして使用できます。</target>
        </trans-unit>
        <trans-unit id="ae0db23b6454de69a0c36942643d30f10fd16355" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;iife&quot;&lt;/code&gt; is immediately invoked function expression statements. This matches calls on a function expression, optionally prefixed with a unary operator.</source>
          <target state="translated">&lt;code&gt;&quot;iife&quot;&lt;/code&gt; はすぐに呼び出される関数式ステートメントです。これは、オプションで単項演算子を前に付ける関数式の呼び出しに一致します。</target>
        </trans-unit>
        <trans-unit id="d831879662b9f1725236a425825e173ed4d4ec26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;impliedStrict&quot;: true&lt;/code&gt; property in the &lt;code&gt;ecmaFeatures&lt;/code&gt; object</source>
          <target state="translated">&lt;code&gt;&quot;impliedStrict&quot;: true&lt;/code&gt; &lt;code&gt;ecmaFeatures&lt;/code&gt; オブジェクトのtrueプロパティ</target>
        </trans-unit>
        <trans-unit id="3a25b00f5c73685179bf7f2d63d9b1032fac54dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;import&quot;&lt;/code&gt; is &lt;code&gt;import&lt;/code&gt; declarations.</source>
          <target state="translated">&lt;code&gt;&quot;import&quot;&lt;/code&gt; は &lt;code&gt;import&lt;/code&gt; 宣言です。</target>
        </trans-unit>
        <trans-unit id="75b91f41ccfb9ce4e6067cabd00a5d8b94a31f7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;initializations&quot;&lt;/code&gt; (default) enforces a newline around variable initializations</source>
          <target state="translated">&lt;code&gt;&quot;initializations&quot;&lt;/code&gt; （デフォルト）は変数の初期化を改行します</target>
        </trans-unit>
        <trans-unit id="41aab21aca23f4c6b95b6276642409e87f2191ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;initialized&quot;: &quot;always&quot;&lt;/code&gt; requires one variable declaration for initialized variables per scope</source>
          <target state="translated">&lt;code&gt;&quot;initialized&quot;: &quot;always&quot;&lt;/code&gt; スコープごとに初期化された変数に対して1つの変数宣言が必要</target>
        </trans-unit>
        <trans-unit id="4599661cc1f37493fa022db8984a58b96f94cf13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;initialized&quot;: &quot;consecutive&quot;&lt;/code&gt; requires consecutive variable declarations for initialized variables to be a single declaration</source>
          <target state="translated">&lt;code&gt;&quot;initialized&quot;: &quot;consecutive&quot;&lt;/code&gt; では、初期化された変数が単一の宣言であるために連続した変数宣言が必要です</target>
        </trans-unit>
        <trans-unit id="8f91a0214043c66b9a98124361e357c53727da2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;initialized&quot;: &quot;never&quot;&lt;/code&gt; requires multiple variable declarations for initialized variables per scope</source>
          <target state="translated">&lt;code&gt;&quot;initialized&quot;: &quot;never&quot;&lt;/code&gt; では、スコープごとに初期化された変数に複数の変数宣言が必要です</target>
        </trans-unit>
        <trans-unit id="ef03a232932fa59784603e020479b48cd482a6e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;inside&quot;&lt;/code&gt; enforces always wrapping the &lt;em&gt;function&lt;/em&gt; expression.</source>
          <target state="translated">&lt;code&gt;&quot;inside&quot;&lt;/code&gt; は、&lt;em&gt;関数&lt;/em&gt;式を常にラップする&lt;em&gt;ことを&lt;/em&gt;強制します。</target>
        </trans-unit>
        <trans-unit id="24e5df6164d1c0e5523da2a18f3bf886bcabb560" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;int32Hint&quot;&lt;/code&gt;: Allows the use of bitwise OR in &lt;code&gt;|0&lt;/code&gt; pattern for type casting.</source>
          <target state="translated">&lt;code&gt;&quot;int32Hint&quot;&lt;/code&gt; ：タイプキャストの &lt;code&gt;|0&lt;/code&gt; パターンでビット単位ORを使用できるようにします。</target>
        </trans-unit>
        <trans-unit id="af3922948b68b05020c4e157f5f58894cd99d078" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;keywords&quot;: true&lt;/code&gt; requires quotes around language keywords used as object property names (only applies when using &lt;code&gt;as-needed&lt;/code&gt; or &lt;code&gt;consistent-as-needed&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;&quot;keywords&quot;: true&lt;/code&gt; は、オブジェクトプロパティ名として使用される言語キーワードを引用符で囲む必要があります（ &lt;code&gt;as-needed&lt;/code&gt; または &lt;code&gt;consistent-as-needed&lt;/code&gt; を使用する場合にのみ適用されます）</target>
        </trans-unit>
        <trans-unit id="ab08431a95d8b29de19e4df4964345909c0cfb96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;last&quot;&lt;/code&gt; (Default) enforces that semicolons are at the end of statements.</source>
          <target state="translated">&lt;code&gt;&quot;last&quot;&lt;/code&gt; （デフォルト）では、セミコロンがステートメントの最後に置かれます。</target>
        </trans-unit>
        <trans-unit id="25f0a2d39f4d07e761dfe1385648606dc2c611b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;last&quot;&lt;/code&gt; (default) requires a comma after and on the same line as an array element, object property, or variable declaration</source>
          <target state="translated">&lt;code&gt;&quot;last&quot;&lt;/code&gt; （デフォルト）には、配列要素、オブジェクトプロパティ、または変数宣言と同じ行にコンマが必要です。</target>
        </trans-unit>
        <trans-unit id="4298554a5b96be5def1872cdf813307f0446cf4f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;layout&quot;&lt;/code&gt; means the rule cares primarily about whitespace, semicolons, commas, and parentheses, all the parts of the program that determine how the code looks rather than how it executes. These rules work on parts of the code that aren't specified in the AST.</source>
          <target state="translated">&lt;code&gt;&quot;layout&quot;&lt;/code&gt; は、ルールが主に空白、セミコロン、カンマ、括弧を気にすることを意味します。プログラムのすべての部分で、コードの実行方法ではなく、コードの外観を決定します。これらのルールは、ASTで指定されていないコードの一部に対して機能します。</target>
        </trans-unit>
        <trans-unit id="c4e11b2fd92da670737d6c67b475a2dff4786b5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;let&quot;: &quot;always&quot;&lt;/code&gt; requires one &lt;code&gt;let&lt;/code&gt; declaration per block</source>
          <target state="translated">&lt;code&gt;&quot;let&quot;: &quot;always&quot;&lt;/code&gt; ブロックごとに1 つの &lt;code&gt;let&lt;/code&gt; 宣言が必要</target>
        </trans-unit>
        <trans-unit id="3e6b21f2e6789cc3d807e91c166407a602e5baac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;let&quot;: &quot;consecutive&quot;&lt;/code&gt; requires consecutive &lt;code&gt;let&lt;/code&gt; declarations to be a single declaration</source>
          <target state="translated">&lt;code&gt;&quot;let&quot;: &quot;consecutive&quot;&lt;/code&gt; では、連続した &lt;code&gt;let&lt;/code&gt; 宣言を1つの宣言にする必要があります</target>
        </trans-unit>
        <trans-unit id="018d39b355049d27e2274fcff91d42f0c5f6e1b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;let&quot;: &quot;never&quot;&lt;/code&gt; requires multiple &lt;code&gt;let&lt;/code&gt; declarations per block</source>
          <target state="translated">&lt;code&gt;&quot;let&quot;: &quot;never&quot;&lt;/code&gt; はブロックごとに複数の &lt;code&gt;let&lt;/code&gt; 宣言を必要とします</target>
        </trans-unit>
        <trans-unit id="c33b9f47a2f31d3555b184d8b4c03c7dfb85aff2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;let&quot;&lt;/code&gt; is &lt;code&gt;let&lt;/code&gt; variable declarations, both single-line and multiline.</source>
          <target state="translated">&lt;code&gt;&quot;let&quot;&lt;/code&gt; は、単一行と複数行の両方の &lt;code&gt;let&lt;/code&gt; 変数宣言です。</target>
        </trans-unit>
        <trans-unit id="1815150adc5d42c01570c379d43f956f3f9a64ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;location&quot;&lt;/code&gt;: optional string that configures where in your comments to check for matches. Defaults to &lt;code&gt;&quot;start&quot;&lt;/code&gt;. The other value is match &lt;code&gt;anywhere&lt;/code&gt; in comments.</source>
          <target state="translated">&lt;code&gt;&quot;location&quot;&lt;/code&gt; ：コメント内で一致をチェックする場所を構成するオプションの文字列。デフォルトは &lt;code&gt;&quot;start&quot;&lt;/code&gt; です。もう1つの値は、コメントの &lt;code&gt;anywhere&lt;/code&gt; 一致します。</target>
        </trans-unit>
        <trans-unit id="664cdec559e29c59c4718cfa252ef88c296dcad4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;matchDescription&quot;&lt;/code&gt; specifies (as a string) a regular expression to match the description in each JSDoc comment (for example, &lt;code&gt;&quot;.+&quot;&lt;/code&gt; requires a description; this option does not apply to descriptions in parameter or return tags)</source>
          <target state="translated">&lt;code&gt;&quot;matchDescription&quot;&lt;/code&gt; は、各JSDocコメントの説明に一致する正規表現を（文字列として）指定します（たとえば、 &lt;code&gt;&quot;.+&quot;&lt;/code&gt; は説明が必要です。このオプションは、パラメーターまたは戻りタグの説明には適用されません）</target>
        </trans-unit>
        <trans-unit id="f422654019dd52ba6379b072caf6bf4ced49d112" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;max&quot;&lt;/code&gt; (default &lt;code&gt;10&lt;/code&gt;) enforces a maximum depth that callbacks can be nested</source>
          <target state="translated">&lt;code&gt;&quot;max&quot;&lt;/code&gt; （デフォルトは &lt;code&gt;10&lt;/code&gt; ）は、コールバックをネストできる最大の深さを強制します</target>
        </trans-unit>
        <trans-unit id="89a25b3ecad1e45d22e76a1a14e0c7a14edecd57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;max&quot;&lt;/code&gt; (default &lt;code&gt;10&lt;/code&gt;) enforces a maximum number of statements allows in function blocks</source>
          <target state="translated">&lt;code&gt;&quot;max&quot;&lt;/code&gt; （デフォルト &lt;code&gt;10&lt;/code&gt; ）は、ファンクションブロックで許可されるステートメントの最大数を適用します</target>
        </trans-unit>
        <trans-unit id="7b2b57cd3d8b5c67a24b547b50f1aace07f1e0b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;max&quot;&lt;/code&gt; (default &lt;code&gt;300&lt;/code&gt;) enforces a maximum number of lines in a file</source>
          <target state="translated">&lt;code&gt;&quot;max&quot;&lt;/code&gt; （デフォルト &lt;code&gt;300&lt;/code&gt; ）はファイルの最大行数を強制します</target>
        </trans-unit>
        <trans-unit id="15725d66ec8c1dd3e1899aada4ca5a41ef91e454" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;max&quot;&lt;/code&gt; (default &lt;code&gt;3&lt;/code&gt;) enforces a maximum number of parameters in function definitions</source>
          <target state="translated">&lt;code&gt;&quot;max&quot;&lt;/code&gt; （デフォルト &lt;code&gt;3&lt;/code&gt; ）は、関数定義のパラメーターの最大数を強制します</target>
        </trans-unit>
        <trans-unit id="c9f52a9ca1a600cc599fda2710ceb69d6bba1f7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;max&quot;&lt;/code&gt; (default &lt;code&gt;4&lt;/code&gt;) enforces a maximum depth that blocks can be nested</source>
          <target state="translated">&lt;code&gt;&quot;max&quot;&lt;/code&gt; （デフォルト &lt;code&gt;4&lt;/code&gt; ）は、ブロックをネストできる最大の深さを強制します</target>
        </trans-unit>
        <trans-unit id="b9430fd97c44fcba279eb4ba8701335d91485de7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;max&quot;&lt;/code&gt; (default &lt;code&gt;50&lt;/code&gt;) enforces a maximum number of lines in a function.</source>
          <target state="translated">&lt;code&gt;&quot;max&quot;&lt;/code&gt; （デフォルトは &lt;code&gt;50&lt;/code&gt; ）は、関数の最大行数を強制します。</target>
        </trans-unit>
        <trans-unit id="38307a2414d50736abe43f9d4f5156b043dc11af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;max&quot;&lt;/code&gt; (default: &lt;code&gt;2&lt;/code&gt;) enforces a maximum number of consecutive empty lines.</source>
          <target state="translated">&lt;code&gt;&quot;max&quot;&lt;/code&gt; （デフォルト： &lt;code&gt;2&lt;/code&gt; ）は、最大数の連続した空行を強制します。</target>
        </trans-unit>
        <trans-unit id="2be62e72fcb8fcc44f267c9b67f49d264fdaf8f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;max&quot;&lt;/code&gt; (default: Infinity) enforces a maximum identifier length</source>
          <target state="translated">&lt;code&gt;&quot;max&quot;&lt;/code&gt; （デフォルト：Infinity）は識別子の最大長を強制します</target>
        </trans-unit>
        <trans-unit id="54fbcfbb8d52099303cb317acb022105817cf516" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;maxBOF&quot;&lt;/code&gt; enforces a maximum number of consecutive empty lines at the beginning of files.</source>
          <target state="translated">&lt;code&gt;&quot;maxBOF&quot;&lt;/code&gt; は、ファイルの先頭に最大数の連続した空行を強制します。</target>
        </trans-unit>
        <trans-unit id="a1070e24014dac0e5f55dbacaadbc95cc3fb0016" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;maxEOF&quot;&lt;/code&gt; enforces a maximum number of consecutive empty lines at the end of files.</source>
          <target state="translated">&lt;code&gt;&quot;maxEOF&quot;&lt;/code&gt; は、ファイルの最後に連続した空行の最大数を強制します。</target>
        </trans-unit>
        <trans-unit id="ec15b61a7d55d4c39dcdf2abd0bc09796ff3bd84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;methods&quot;&lt;/code&gt; - Class methods and method shorthands of object literals.</source>
          <target state="translated">&lt;code&gt;&quot;methods&quot;&lt;/code&gt; -オブジェクトメソッドのクラスメソッドとメソッドの省略形。</target>
        </trans-unit>
        <trans-unit id="3d089c6f1e6f3c67bae579bed252aea615c8e0d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;methods&quot;&lt;/code&gt; ensures the method shorthand is used (also applies to generators).</source>
          <target state="translated">&lt;code&gt;&quot;methods&quot;&lt;/code&gt; は、メソッドの省略形が使用されることを保証します（ジェネレーターにも適用されます）。</target>
        </trans-unit>
        <trans-unit id="fc525a36ee30fad03aaa2df5a898f548351ee894" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;min&quot;&lt;/code&gt; (default: 2) enforces a minimum identifier length</source>
          <target state="translated">&lt;code&gt;&quot;min&quot;&lt;/code&gt; （デフォルト：2）は、最小の識別子の長さを強制します</target>
        </trans-unit>
        <trans-unit id="ce55a40db53cb5a2289a966ca1dcb9717a0543f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;minItems&quot;: &amp;lt;number&amp;gt;&lt;/code&gt; requires line breaks if the number of elements is at least the given integer. If this is 0, this condition will act the same as the option &lt;code&gt;&quot;always&quot;&lt;/code&gt;. If this is &lt;code&gt;null&lt;/code&gt; (the default), this condition is disabled.</source>
          <target state="translated">&lt;code&gt;&quot;minItems&quot;: &amp;lt;number&amp;gt;&lt;/code&gt; 要素数が指定された整数以上の場合、&amp;lt;number&amp;gt;には改行が必要です。これが0の場合、この条件は &lt;code&gt;&quot;always&quot;&lt;/code&gt; オプションと同じように機能します。これが &lt;code&gt;null&lt;/code&gt; （デフォルト）の場合、この条件は無効になります。</target>
        </trans-unit>
        <trans-unit id="68c21ebdab1284ffaea676c4f206f0879ae3f41d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;minItems&quot;: null&lt;/code&gt; (default) requires line breaks if the number of elements is at least the given integer. If this is 0, this condition will act the same as the option &lt;code&gt;&quot;always&quot;&lt;/code&gt;. If this is &lt;code&gt;null&lt;/code&gt; (the default), this condition is disabled.</source>
          <target state="translated">&lt;code&gt;&quot;minItems&quot;: null&lt;/code&gt; 要素数が指定された整数以上の場合、null（デフォルト）では改行が必要です。これが0の場合、この条件は &lt;code&gt;&quot;always&quot;&lt;/code&gt; オプションと同じように機能します。これが &lt;code&gt;null&lt;/code&gt; （デフォルト）の場合、この条件は無効になります。</target>
        </trans-unit>
        <trans-unit id="52bbac6aa89e5a72333c39695bc93eb160307eeb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;minProperties&quot;&lt;/code&gt; requires line breaks if the number of properties is at least the given integer. By default, an error will also be reported if an object contains linebreaks and has fewer properties than the given integer. However, the second behavior is disabled if the &lt;code&gt;consistent&lt;/code&gt; option is set to &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&quot;minProperties&quot;&lt;/code&gt; では、プロパティの数が指定された整数以上の場合、改行が必要です。デフォルトでは、オブジェクトに改行が含まれ、プロパティが指定された整数よりも少ない場合にもエラーが報告されます。ただし、 &lt;code&gt;consistent&lt;/code&gt; オプションが &lt;code&gt;true&lt;/code&gt; に設定されている場合、2番目の動作は無効になります。</target>
        </trans-unit>
        <trans-unit id="cc57b846f88bff7dd4d5b68382220dd46db2c6dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;minimum&quot;&lt;/code&gt;: enforces one or more spaces before or after colons in object literals.</source>
          <target state="translated">&lt;code&gt;&quot;minimum&quot;&lt;/code&gt; ：オブジェクトリテラルのコロンの前後に1つ以上のスペースを強制します。</target>
        </trans-unit>
        <trans-unit id="de5943004995ce14dd7fccb32612998d0ef34e6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;multiLine&quot;&lt;/code&gt; specifies a spacing style for multi-line object literals.</source>
          <target state="translated">&lt;code&gt;&quot;multiLine&quot;&lt;/code&gt; は、複数行オブジェクトリテラルの間隔スタイルを指定します。</target>
        </trans-unit>
        <trans-unit id="e3954ff5b58cf7e68f03ba11273edf7f9d49fbdd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;multiline&quot;: &amp;lt;boolean&amp;gt;&lt;/code&gt; requires line breaks if there are line breaks inside elements. If this is false, this condition is disabled.</source>
          <target state="translated">&lt;code&gt;&quot;multiline&quot;: &amp;lt;boolean&amp;gt;&lt;/code&gt; 要素内に改行がある場合、&amp;lt;boolean&amp;gt;には改行が必要です。これがfalseの場合、この条件は無効になります。</target>
        </trans-unit>
        <trans-unit id="a03576f4fa5263838ec16a5ba3f43585bb69c9da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;multiline&quot;: true&lt;/code&gt; (default) requires line breaks if there are line breaks inside elements or between elements. If this is false, this condition is disabled.</source>
          <target state="translated">&lt;code&gt;&quot;multiline&quot;: true&lt;/code&gt; （デフォルト）では、要素内または要素間に改行がある場合は改行が必要です。これがfalseの場合、この条件は無効になります。</target>
        </trans-unit>
        <trans-unit id="c6a0c9f377d547fed641d93b989708d3889dea01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;multiline&quot;: true&lt;/code&gt; requires line breaks if there are line breaks inside properties or between properties. Otherwise, it disallows line breaks.</source>
          <target state="translated">&lt;code&gt;&quot;multiline&quot;: true&lt;/code&gt; プロパティ内またはプロパティ間に改行がある場合、trueは改行を必要とします。それ以外の場合は、改行を許可しません。</target>
        </trans-unit>
        <trans-unit id="522615571bdd7d5267e72c91f21d245e5bbd0b3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;multiline&quot;&lt;/code&gt; (default) requires linebreaks inside function parentheses if any of the parameters/arguments have a line break between them. Otherwise, it disallows linebreaks.</source>
          <target state="translated">&lt;code&gt;&quot;multiline&quot;&lt;/code&gt; （デフォルト）では、パラメーター/引数の間に改行がある場合、関数の括弧内に改行が必要です。それ以外の場合、改行は許可されません。</target>
        </trans-unit>
        <trans-unit id="171ffe9d87becff47e2f96059e651b7f763730f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;multiline-arguments&quot;&lt;/code&gt; works like &lt;code&gt;multiline&lt;/code&gt; but allows linebreaks inside function parentheses if there is only one parameter/argument.</source>
          <target state="translated">&lt;code&gt;&quot;multiline-arguments&quot;&lt;/code&gt; は &lt;code&gt;multiline&lt;/code&gt; 行のように機能しますが、パラメーター/引数が1つしかない場合は、関数の括弧内で改行できます。</target>
        </trans-unit>
        <trans-unit id="0ee86ac75edcb27b7e4e1aff11f1fb4176bf2b6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;multiline-block-like&quot;&lt;/code&gt; is block like statements. This is the same as &lt;code&gt;block-like&lt;/code&gt; type, but only if the block is multiline.</source>
          <target state="translated">&lt;code&gt;&quot;multiline-block-like&quot;&lt;/code&gt; はブロックのようなステートメントです。これは &lt;code&gt;block-like&lt;/code&gt; タイプと同じですが、ブロックが複数行の場合のみです。</target>
        </trans-unit>
        <trans-unit id="6a415ce54daa38fbe4ae560e294e153b38ae1acc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;multiline-const&quot;&lt;/code&gt; is multiline &lt;code&gt;const&lt;/code&gt; variable declarations.</source>
          <target state="translated">&lt;code&gt;&quot;multiline-const&quot;&lt;/code&gt; は、複数行の &lt;code&gt;const&lt;/code&gt; 変数宣言です。</target>
        </trans-unit>
        <trans-unit id="3b3b82dda6268ba138d51790aaf2f2af7ab6a76a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;multiline-expression&quot;&lt;/code&gt; is expression statements. This is the same as &lt;code&gt;expression&lt;/code&gt; type, but only if the statement is multiline.</source>
          <target state="translated">&lt;code&gt;&quot;multiline-expression&quot;&lt;/code&gt; は式ステートメントです。これは &lt;code&gt;expression&lt;/code&gt; タイプと同じですが、ステートメントが複数行の場合のみです。</target>
        </trans-unit>
        <trans-unit id="70f798e6ad17c8815936034131a7074b6c95ef5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;multiline-let&quot;&lt;/code&gt; is multiline &lt;code&gt;let&lt;/code&gt; variable declarations.</source>
          <target state="translated">&lt;code&gt;&quot;multiline-let&quot;&lt;/code&gt; は、複数行の &lt;code&gt;let&lt;/code&gt; 変数宣言です。</target>
        </trans-unit>
        <trans-unit id="40bd3fefb48ab394c0a6452c0cd1ad10a3edd52b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;multiline-var&quot;&lt;/code&gt; is multiline &lt;code&gt;var&lt;/code&gt; variable declarations.</source>
          <target state="translated">&lt;code&gt;&quot;multiline-var&quot;&lt;/code&gt; は、複数行の &lt;code&gt;var&lt;/code&gt; 変数宣言です。</target>
        </trans-unit>
        <trans-unit id="8140eb210a50cf6c16f6c4481e03e04749107219" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;nestedBinaryExpressions&quot;: false&lt;/code&gt; allows extra parentheses in nested binary expressions</source>
          <target state="translated">&lt;code&gt;&quot;nestedBinaryExpressions&quot;: false&lt;/code&gt; 指定すると、ネストされたバイナリ式で括弧を追加できます</target>
        </trans-unit>
        <trans-unit id="5ff49edf51e264d9259007918cdcf221171a6aa1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;never&quot;&lt;/code&gt; (and also the exceptions to the &lt;code&gt;&quot;always&quot;&lt;/code&gt; option) allows newlines inside array brackets, because this is a common pattern</source>
          <target state="translated">&lt;code&gt;&quot;never&quot;&lt;/code&gt; （および &lt;code&gt;&quot;always&quot;&lt;/code&gt; オプションの例外）では、これが一般的なパターンであるため、配列ブラケット内の改行が許可されます</target>
        </trans-unit>
        <trans-unit id="76c81787fa1a21efb205972c9dc6046b54aca658" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;never&quot;&lt;/code&gt; (by default) - Disallows spaces inside of the curly brace pair.</source>
          <target state="translated">&lt;code&gt;&quot;never&quot;&lt;/code&gt; （デフォルト）-中括弧ペアの内側にスペースを許可しません。</target>
        </trans-unit>
        <trans-unit id="420c1a69ec5faf8dc46a817a4bbc3c3f374078b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;never&quot;&lt;/code&gt; (default) - Disallows spaces between a tag function and its template literal.</source>
          <target state="translated">&lt;code&gt;&quot;never&quot;&lt;/code&gt; （デフォルト）-タグ関数とそのテンプレートリテラルの間のスペースを許可しません。</target>
        </trans-unit>
        <trans-unit id="40c4b6180f6fdd96177fb4ed60f8e7be224134e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;never&quot;&lt;/code&gt; (default) disallows space between the function name and the opening parenthesis.</source>
          <target state="translated">&lt;code&gt;&quot;never&quot;&lt;/code&gt; （デフォルト）は、関数名と開き括弧の間のスペースを許可しません。</target>
        </trans-unit>
        <trans-unit id="8a9f59251eac031f58c9653cc026c810a5510e14" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;never&quot;&lt;/code&gt; (default) disallows spaces inside array brackets</source>
          <target state="translated">&lt;code&gt;&quot;never&quot;&lt;/code&gt; （デフォルト）は、配列括弧内のスペースを許可しません</target>
        </trans-unit>
        <trans-unit id="a8a3082a22680f417e10bd9ecbced59483890025" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;never&quot;&lt;/code&gt; (default) disallows spaces inside computed property brackets</source>
          <target state="translated">&lt;code&gt;&quot;never&quot;&lt;/code&gt; （デフォルト）は、計算されたプロパティブラケット内のスペースを許可しません</target>
        </trans-unit>
        <trans-unit id="e1dfd89d6df13baefbb2704e72543fa4563080f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;never&quot;&lt;/code&gt; (default) disallows spacing inside of braces</source>
          <target state="translated">&lt;code&gt;&quot;never&quot;&lt;/code&gt; （デフォルト）は、中括弧内のスペースを許可しません</target>
        </trans-unit>
        <trans-unit id="731fd40128fbc5523efafd041b3e733d238a55ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;never&quot;&lt;/code&gt; (default) disallows trailing commas</source>
          <target state="translated">&lt;code&gt;&quot;never&quot;&lt;/code&gt; （デフォルト）は末尾のコンマを許可しません</target>
        </trans-unit>
        <trans-unit id="3a303da8259488e8ee7ab1acf24bba02a184f2f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;never&quot;&lt;/code&gt; (default) enforces zero spaces inside of parentheses</source>
          <target state="translated">&lt;code&gt;&quot;never&quot;&lt;/code&gt; （デフォルト）は、括弧内にゼロのスペースを強制します</target>
        </trans-unit>
        <trans-unit id="b82c368342b49856f3cb3aa064612cff856766c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;never&quot;&lt;/code&gt; (default) files must not begin with the Unicode BOM</source>
          <target state="translated">&lt;code&gt;&quot;never&quot;&lt;/code&gt; （デフォルト）ファイルはUnicode BOMで始めてはいけません</target>
        </trans-unit>
        <trans-unit id="376f1746b6bacf76361aa512ff0dec90482eab0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;never&quot;&lt;/code&gt; disallow named generators where possible.</source>
          <target state="translated">&lt;code&gt;&quot;never&quot;&lt;/code&gt; 可能であれば、名前付きジェネレータを「決して」禁止します。</target>
        </trans-unit>
        <trans-unit id="a8f76dc9173293e232219bdb2b1584e626c41987" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;never&quot;&lt;/code&gt; disallows an empty line after class members</source>
          <target state="translated">&lt;code&gt;&quot;never&quot;&lt;/code&gt; クラスメンバーの後に空行を許可しません</target>
        </trans-unit>
        <trans-unit id="6ac7ba672a2b0dfb1de34e4fa06f4b7c758824a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;never&quot;&lt;/code&gt; disallows assignment operator shorthand</source>
          <target state="translated">&lt;code&gt;&quot;never&quot;&lt;/code&gt; は代入演算子の省略表現を許可しません</target>
        </trans-unit>
        <trans-unit id="29f60541a4bf7ff61db24d16fcb0c1ba59d23237" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;never&quot;&lt;/code&gt; disallows blank lines.</source>
          <target state="translated">&lt;code&gt;&quot;never&quot;&lt;/code&gt; は空白行を許可しません。</target>
        </trans-unit>
        <trans-unit id="57947abcc39a68ae594845e0a65f0091dee20b34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;never&quot;&lt;/code&gt; disallows blank newlines around directives.</source>
          <target state="translated">&lt;code&gt;&quot;never&quot;&lt;/code&gt; は、ディレクティブの周りの空白の改行を許可しません。</target>
        </trans-unit>
        <trans-unit id="3b7a18aa2bc6878814e02798b6b6cbf95e10e80e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;never&quot;&lt;/code&gt; disallows empty lines after &lt;code&gt;var&lt;/code&gt;, &lt;code&gt;let&lt;/code&gt;, or &lt;code&gt;const&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&quot;never&quot;&lt;/code&gt; は、 &lt;code&gt;var&lt;/code&gt; 、 &lt;code&gt;let&lt;/code&gt; 、または &lt;code&gt;const&lt;/code&gt; の後に空行を許可しません</target>
        </trans-unit>
        <trans-unit id="1c65360046fec13b30a32add180b4457b5fbfc2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;never&quot;&lt;/code&gt; disallows empty lines at the beginning and ending of block statements and classes</source>
          <target state="translated">&lt;code&gt;&quot;never&quot;&lt;/code&gt; は、ブロックステートメントとクラスの最初と最後に空行を許可しません</target>
        </trans-unit>
        <trans-unit id="ece12af3730ececa5f8a6304e92ac20139f5e2c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;never&quot;&lt;/code&gt; disallows line breaks between arguments</source>
          <target state="translated">&lt;code&gt;&quot;never&quot;&lt;/code&gt; は、引数間の改行を許可しません</target>
        </trans-unit>
        <trans-unit id="f59d80461d0057d0311a8e3bce083fc9e2a31a9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;never&quot;&lt;/code&gt; disallows line breaks between array elements</source>
          <target state="translated">&lt;code&gt;&quot;never&quot;&lt;/code&gt; は、配列要素間の改行を許可しません</target>
        </trans-unit>
        <trans-unit id="0396bee0aaed68956f3dfa757b514180f6846cb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;never&quot;&lt;/code&gt; disallows line breaks inside all function parentheses.</source>
          <target state="translated">&lt;code&gt;&quot;never&quot;&lt;/code&gt; 、すべての関数括弧内の改行を許可しません。</target>
        </trans-unit>
        <trans-unit id="a2c8f734d520139a527c5307e37577b61c936708" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;never&quot;&lt;/code&gt; disallows line breaks inside braces</source>
          <target state="translated">&lt;code&gt;&quot;never&quot;&lt;/code&gt; はブレース内の改行を許可しません</target>
        </trans-unit>
        <trans-unit id="bd96ef181587be23b1d343a4a208ec23c6c62bf2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;never&quot;&lt;/code&gt; disallows line breaks inside brackets</source>
          <target state="translated">&lt;code&gt;&quot;never&quot;&lt;/code&gt; は括弧内の改行を許可しません</target>
        </trans-unit>
        <trans-unit id="1f668c692a7f4b4316ba84ee2ebc9112d1fa6f77" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;never&quot;&lt;/code&gt; disallows named function expressions, except in recursive functions, where a name is needed</source>
          <target state="translated">&lt;code&gt;&quot;never&quot;&lt;/code&gt; は、名前が必要な再帰関数を除いて、名前付き関数式を許可しません</target>
        </trans-unit>
        <trans-unit id="995e7360107b0bb4a6ab6736ca1816e964eb391f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;never&quot;&lt;/code&gt; disallows newlines between the operands of a ternary expression (enforcing that the entire ternary expression is on one line).</source>
          <target state="translated">&lt;code&gt;&quot;never&quot;&lt;/code&gt; は、3項式のオペランド間の改行を許可しません（3項式全体が1行にあることを強制します）。</target>
        </trans-unit>
        <trans-unit id="136b451e45e3bca009b7418e3aac61081e6f33fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;never&quot;&lt;/code&gt; disallows newlines between the operands of a ternary expression.</source>
          <target state="translated">&lt;code&gt;&quot;never&quot;&lt;/code&gt; は、3項式のオペランド間の改行を禁止します。</target>
        </trans-unit>
        <trans-unit id="0d1d54277e3e87723a661136f1fc31698335622f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;never&quot;&lt;/code&gt; disallows semicolons as the end of statements (except to disambiguate statements beginning with &lt;code&gt;[&lt;/code&gt;, &lt;code&gt;(&lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt;, or &lt;code&gt;-&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;&quot;never&quot;&lt;/code&gt; はセミコロンをステートメントの終わりとして許可しません（ &lt;code&gt;[&lt;/code&gt; 、 &lt;code&gt;(&lt;/code&gt; 、 &lt;code&gt;/&lt;/code&gt; 、 &lt;code&gt;+&lt;/code&gt; 、 &lt;code&gt;-&lt;/code&gt; で始まるステートメントの明確化を除く）</target>
        </trans-unit>
        <trans-unit id="e2aa54f15c01de278455d1cafef9a35b4f34fc65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;never&quot;&lt;/code&gt; disallows spaces</source>
          <target state="translated">&lt;code&gt;&quot;never&quot;&lt;/code&gt; はスペースを許可しません</target>
        </trans-unit>
        <trans-unit id="cade0f7108be8df0da8341f3969a7e689af08631" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;never&quot;&lt;/code&gt; disallows strict mode directives</source>
          <target state="translated">&lt;code&gt;&quot;never&quot;&lt;/code&gt; は厳格なモードディレクティブを許可しません</target>
        </trans-unit>
        <trans-unit id="d850e31b7f7034a91da77086a1642956630e031f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;never&quot;&lt;/code&gt; enforces no braces around the function body (constrains arrow functions to the role of returning an expression)</source>
          <target state="translated">&lt;code&gt;&quot;never&quot;&lt;/code&gt; は、関数本体の周りに中括弧を強制しません（矢印関数を式を返す役割に制限します）</target>
        </trans-unit>
        <trans-unit id="47fe73ef4526c0d93162ecbd66f9ab4ef695afc5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;never&quot;&lt;/code&gt; enforces no parenthesis after a new constructor with no arguments</source>
          <target state="translated">&lt;code&gt;&quot;never&quot;&lt;/code&gt; は、引数のない新しいコンストラクタの後に括弧を強制しません</target>
        </trans-unit>
        <trans-unit id="551ad3b88e8ae2440c503c3785b66dfb185f5c8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;never&quot;&lt;/code&gt; enforces that files do not end with a newline</source>
          <target state="translated">&lt;code&gt;&quot;never&quot;&lt;/code&gt; 、ファイルが改行で終わらないことを強制します</target>
        </trans-unit>
        <trans-unit id="429b209120ae2e73b18f7e673b065a8691f4afe9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;never&quot;&lt;/code&gt; enforces zero spaces inside of object and array literals (default)</source>
          <target state="translated">&lt;code&gt;&quot;never&quot;&lt;/code&gt; は、オブジェクトと配列リテラルの内部にゼロのスペースを強制します（デフォルト）</target>
        </trans-unit>
        <trans-unit id="5b80dc2ae1295bc5a71daba8b5c1e4f07b43575e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;never&quot;&lt;/code&gt; ensures that no property or method shorthand is used in any object literal.</source>
          <target state="translated">&lt;code&gt;&quot;never&quot;&lt;/code&gt; は、プロパティまたはメソッドの省略表現がオブジェクトリテラルで使用されないようにします。</target>
        </trans-unit>
        <trans-unit id="f506736966265bbd5d4cf82c91cccd50ce09aaf3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;never&quot;&lt;/code&gt; requires multiple variable declarations per scope</source>
          <target state="translated">&lt;code&gt;&quot;never&quot;&lt;/code&gt; はスコープごとに複数の変数宣言を必要としません</target>
        </trans-unit>
        <trans-unit id="b6a045a059f22cc0d9fa811f3e8e359505b6b933" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;newIsCap&quot;: false&lt;/code&gt; allows &lt;code&gt;new&lt;/code&gt; operators to be called with lowercase-started or uppercase-started functions.</source>
          <target state="translated">&lt;code&gt;&quot;newIsCap&quot;: false&lt;/code&gt; 指定すると、小文字で始まる関数または大文字で始まる関数で &lt;code&gt;new&lt;/code&gt; 演算子を呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="d2c8d5de1293ff5e0d17b1a9755c8f89eb75565c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;newIsCap&quot;: true&lt;/code&gt; (default) requires all &lt;code&gt;new&lt;/code&gt; operators to be called with uppercase-started functions.</source>
          <target state="translated">&lt;code&gt;&quot;newIsCap&quot;: true&lt;/code&gt; （デフォルト）では、すべての &lt;code&gt;new&lt;/code&gt; 演算子を大文字で始まる関数で呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="8769d071460e055786d841f097e17fe0382e6b13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;newIsCapExceptionPattern&quot;&lt;/code&gt; allows any lowercase-started function names that match the specified regex pattern to be called with the &lt;code&gt;new&lt;/code&gt; operator.</source>
          <target state="translated">&lt;code&gt;&quot;newIsCapExceptionPattern&quot;&lt;/code&gt; 使用すると、指定した正規表現パターンに一致する小文字で始まるすべての関数名を &lt;code&gt;new&lt;/code&gt; 演算子で呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="edc0080d2608235fd436f615dff2b8a6ef00bb4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;newIsCapExceptions&quot;&lt;/code&gt; allows specified lowercase-started function names to be called with the &lt;code&gt;new&lt;/code&gt; operator.</source>
          <target state="translated">&lt;code&gt;&quot;newIsCapExceptions&quot;&lt;/code&gt; 使用すると、小文字で始まる指定の関数名を &lt;code&gt;new&lt;/code&gt; 演算子で呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="63d5be73e8458a3f1fcbe6e630eb2fc421a70a6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;none&quot;&lt;/code&gt; disallows linebreaks on either side of the operator</source>
          <target state="translated">&lt;code&gt;&quot;none&quot;&lt;/code&gt; は、演算子のどちら側でも改行を許可しません</target>
        </trans-unit>
        <trans-unit id="15010122758a42a66462a9f92e2d8b8dff19aeb7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;null&quot;&lt;/code&gt;: Customize how this rule treats &lt;code&gt;null&lt;/code&gt; literals. Possible values:</source>
          <target state="translated">&lt;code&gt;&quot;null&quot;&lt;/code&gt; ：このルールが &lt;code&gt;null&lt;/code&gt; リテラルを処理する方法をカスタマイズします。可能な値：</target>
        </trans-unit>
        <trans-unit id="3675892d1a5d631f6796963a84d1f1594519c294" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;number&quot;&lt;/code&gt; (&lt;code&gt;true&lt;/code&gt; by default) - When this is &lt;code&gt;true&lt;/code&gt;, this rule warns shorter type conversions for &lt;code&gt;number&lt;/code&gt; type.</source>
          <target state="translated">&lt;code&gt;&quot;number&quot;&lt;/code&gt; （ &lt;code&gt;true&lt;/code&gt; デフォルト） -これは &lt;code&gt;true&lt;/code&gt; 、このルールがために短い型変換を警告 &lt;code&gt;number&lt;/code&gt; タイプ。</target>
        </trans-unit>
        <trans-unit id="6dfd7b07270819a75ce73046721e1a88cb8de42a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;numbers&quot;: true&lt;/code&gt; requires quotes around numbers used as object property names (only applies when using &lt;code&gt;as-needed&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;&quot;numbers&quot;: true&lt;/code&gt; は、オブジェクトプロパティ名として使用される数値を囲む引用符を必要とします（ &lt;code&gt;as-needed&lt;/code&gt; を使用する場合にのみ適用されます）</target>
        </trans-unit>
        <trans-unit id="8f8b79c54bc92ded59af0efeb32ada1c30e8c398" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;objectsInArrays&quot;: false&lt;/code&gt; disallows spaces between brackets of array literals and braces of their object literal elements &lt;code&gt;[{&lt;/code&gt; or &lt;code&gt;}]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&quot;objectsInArrays&quot;: false&lt;/code&gt; は、配列リテラルの括弧とオブジェクトリテラル要素の括弧の間のスペースを許可しません &lt;code&gt;[{&lt;/code&gt; または &lt;code&gt;}]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b9ccc7f1f8f85e347044f3060882014eeb7428c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;objectsInArrays&quot;: true&lt;/code&gt; requires one or more spaces or newlines between brackets of array literals and braces of their object literal elements &lt;code&gt;[ {&lt;/code&gt; or &lt;code&gt;} ]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&quot;objectsInArrays&quot;: true&lt;/code&gt; は、配列リテラルの大括弧とオブジェクトリテラル要素の大括弧の間に1つ以上のスペースまたは改行が必要です &lt;code&gt;[ {&lt;/code&gt; または &lt;code&gt;} ]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d7648b94cde8a7cab3460ad33f793459806fbfea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;objectsInObjects&quot;: false&lt;/code&gt; disallows spacing inside of braces of objects beginning and/or ending with an object element (applies when the first option is set to &lt;code&gt;always&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;&quot;objectsInObjects&quot;: false&lt;/code&gt; は、object要素で開始または終了するオブジェクトのブレースの内側のスペースを許可しません（最初のオプションが &lt;code&gt;always&lt;/code&gt; に設定されている場合に適用されます）</target>
        </trans-unit>
        <trans-unit id="59adbd7f78af1ee403586521a5561f495d05b808" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;objectsInObjects&quot;: true&lt;/code&gt; requires spacing inside of braces of objects beginning and/or ending with an object element (applies when the first option is set to &lt;code&gt;never&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;&quot;objectsInObjects&quot;: true&lt;/code&gt; は、object要素で開始または終了するオブジェクトのブレースの内側にスペースが必要です（最初のオプションが &lt;code&gt;never&lt;/code&gt; に設定されている場合に適用）</target>
        </trans-unit>
        <trans-unit id="a0cd4deadeddccd2e0746a9e11a80160320dca24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;off&quot;&lt;/code&gt; or &lt;code&gt;0&lt;/code&gt; - turn the rule off</source>
          <target state="translated">&lt;code&gt;&quot;off&quot;&lt;/code&gt; または &lt;code&gt;0&lt;/code&gt; -ルールをオフにします</target>
        </trans-unit>
        <trans-unit id="98f0a2fed2ed99abdfcf67a7a5047159c18fc5aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;offsetTernaryExpressions&quot;: true&lt;/code&gt; (&lt;code&gt;false&lt;/code&gt; by default) requires indentation for values of ternary expressions.</source>
          <target state="translated">&lt;code&gt;&quot;offsetTernaryExpressions&quot;: true&lt;/code&gt; （デフォルトでは &lt;code&gt;false&lt;/code&gt; ）は、3項式の値にインデントを必要とします。</target>
        </trans-unit>
        <trans-unit id="98355768a1733e1c17afb9fc9ba76730bf10d94c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;omitLastInOneLineBlock&quot;: true&lt;/code&gt; ignores the last semicolon in a block in which its braces (and therefore the content of the block) are in the same line</source>
          <target state="translated">&lt;code&gt;&quot;omitLastInOneLineBlock&quot;: true&lt;/code&gt; は、ブレース（およびブロックのコンテンツ）が同じ行にあるブロックの最後のセミコロンを無視します</target>
        </trans-unit>
        <trans-unit id="96e2ae31dad71965adb81ca2d59511817762795c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;only-multiline&quot;&lt;/code&gt; allows (but does not require) trailing commas when the last element or property is in a &lt;em&gt;different&lt;/em&gt; line than the closing &lt;code&gt;]&lt;/code&gt; or &lt;code&gt;}&lt;/code&gt; and disallows trailing commas when the last element or property is on the &lt;em&gt;same&lt;/em&gt; line as the closing &lt;code&gt;]&lt;/code&gt; or &lt;code&gt;}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&quot;only-multiline&quot;&lt;/code&gt; は、最後の要素またはプロパティが終了 &lt;code&gt;]&lt;/code&gt; または &lt;code&gt;}&lt;/code&gt; とは&lt;em&gt;別の&lt;/em&gt;行にある場合に末尾のコンマを許可します（必須ではありません）。最後の要素またはプロパティが終了] &lt;em&gt;と同じ&lt;/em&gt;行にある場合、末尾のコンマを許可しません &lt;code&gt;]&lt;/code&gt; または &lt;code&gt;}&lt;/code&gt; &lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8df44b08abeb60fe90e1fdb82bd352e8457d42b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;onlyDeclarations&quot;: false&lt;/code&gt; requires all variable names to match the specified regular expression</source>
          <target state="translated">&lt;code&gt;&quot;onlyDeclarations&quot;: false&lt;/code&gt; 場合、すべての変数名が指定された正規表現と一致する必要があります</target>
        </trans-unit>
        <trans-unit id="cf1291afb6287588d77a47c306d3a337d8fea0e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;onlyDeclarations&quot;: true&lt;/code&gt; requires only &lt;code&gt;var&lt;/code&gt;, &lt;code&gt;function&lt;/code&gt;, and &lt;code&gt;class&lt;/code&gt; declarations to match the specified regular expression</source>
          <target state="translated">&lt;code&gt;&quot;onlyDeclarations&quot;: true&lt;/code&gt; は、指定された正規表現に一致するために必要なのは、 &lt;code&gt;var&lt;/code&gt; 、 &lt;code&gt;function&lt;/code&gt; 、および &lt;code&gt;class&lt;/code&gt; 宣言のみです</target>
        </trans-unit>
        <trans-unit id="35e7d7d62461fb3f32b4b70655f4867c2a7bb89e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;outerIIFEBody&quot;&lt;/code&gt; (default: 1) enforces indentation level for file-level IIFEs.</source>
          <target state="translated">&lt;code&gt;&quot;outerIIFEBody&quot;&lt;/code&gt; （デフォルト：1）は、ファイルレベルのIIFEにインデントレベルを適用します。</target>
        </trans-unit>
        <trans-unit id="b7a54afd46a432aa655286228687e06f01a7b7f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;outerIIFEBody&quot;&lt;/code&gt; (default: 1) enforces indentation level for file-level IIFEs. This can also be set to &lt;code&gt;&quot;off&quot;&lt;/code&gt; to disable checking for file-level IIFEs.</source>
          <target state="translated">&lt;code&gt;&quot;outerIIFEBody&quot;&lt;/code&gt; （デフォルト：1）は、ファイルレベルのIIFEにインデントレベルを適用します。これを &lt;code&gt;&quot;off&quot;&lt;/code&gt; に設定して、ファイルレベルのIIFEのチェックを無効にすることもできます。</target>
        </trans-unit>
        <trans-unit id="64634777682bc303995e99cbe7bb80e72942614c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;outside&quot;&lt;/code&gt; enforces always wrapping the &lt;em&gt;call&lt;/em&gt; expression. The default is &lt;code&gt;&quot;outside&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;outside&quot;&lt;/code&gt; 、&lt;em&gt;呼び出し&lt;/em&gt;式を常にラップし&lt;em&gt;ます&lt;/em&gt;。デフォルトは &lt;code&gt;&quot;outside&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="50c65277bcc5601284e92a43a38f8a98bc975346" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;overrides&quot;&lt;/code&gt; allows overriding spacing style for specified keywords</source>
          <target state="translated">&lt;code&gt;&quot;overrides&quot;&lt;/code&gt; は、指定されたキーワードの間隔スタイルを上書きできます</target>
        </trans-unit>
        <trans-unit id="b675cb7eef9bc649be73b8495bbfac755adeb940" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;overrides&quot;&lt;/code&gt; overrides the global setting for specified operators</source>
          <target state="translated">&lt;code&gt;&quot;overrides&quot;&lt;/code&gt; は、指定された演算子のグローバル設定をオーバーライドします</target>
        </trans-unit>
        <trans-unit id="b6d2b93d6617906e65ca47d4ecff7d0850f7be99" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;prefer&quot;&lt;/code&gt; enforces consistent documentation tags specified by an object whose properties mean instead of key use value (for example, &lt;code&gt;&quot;return&quot;: &quot;returns&quot;&lt;/code&gt; means instead of &lt;code&gt;@return&lt;/code&gt; use &lt;code&gt;@returns&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;&quot;prefer&quot;&lt;/code&gt; 強制一貫した文書タグをその特性平均の代わりに、キー使用の値（例えば、オブジェクトによって指定された &lt;code&gt;&quot;return&quot;: &quot;returns&quot;&lt;/code&gt; 手段の代わりに &lt;code&gt;@return&lt;/code&gt; 使用 &lt;code&gt;@returns&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="6cbb80de84658ac9e7759d8f7286d2b7ff445fc7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;prefer-double&quot;&lt;/code&gt; (default) enforces the use of double quotes for all JSX attribute values that don't contain a double quote.</source>
          <target state="translated">&lt;code&gt;&quot;prefer-double&quot;&lt;/code&gt; （デフォルト）は、二重引用符を含まないすべてのJSX属性値に二重引用符の使用を強制します。</target>
        </trans-unit>
        <trans-unit id="e1b7dfe9d0035a4a07132428545a9b6be5e633ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;prefer-single&quot;&lt;/code&gt; enforces the use of single quotes for all JSX attribute values that don&amp;rsquo;t contain a single quote.</source>
          <target state="translated">&lt;code&gt;&quot;prefer-single&quot;&lt;/code&gt; は、単一引用符を含まないすべてのJSX属性値に単一引用符の使用を強制します。</target>
        </trans-unit>
        <trans-unit id="669c1040c2246bd013eccd83346a369c8e7ed27a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;preferType&quot;&lt;/code&gt; enforces consistent type strings specified by an object whose properties mean instead of key use value (for example, &lt;code&gt;&quot;object&quot;: &quot;Object&quot;&lt;/code&gt; means instead of &lt;code&gt;object&lt;/code&gt; use &lt;code&gt;Object&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;&quot;preferType&quot;&lt;/code&gt; 、その特性を意味する代わりに、キー使用の値（例えば、オブジェクトによって指定された一貫性のあるタイプの文字列強制 &lt;code&gt;&quot;object&quot;: &quot;Object&quot;&lt;/code&gt; 手段の代わりに、 &lt;code&gt;object&lt;/code&gt; 利用 &lt;code&gt;Object&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="233deedaa1610b238020995aa4c110da67bb4589" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;problem&quot;&lt;/code&gt; means the rule is identifying code that either will cause an error or may cause a confusing behavior. Developers should consider this a high priority to resolve.</source>
          <target state="translated">&lt;code&gt;&quot;problem&quot;&lt;/code&gt; とは、エラーが発生するか、混乱を招く可能性のあるコードをルールが識別していることを意味します。開発者は、これを解決するための高い優先順位と考える必要があります。</target>
        </trans-unit>
        <trans-unit id="4a0ce73ca41f3a9ef6c9f89165dbed4134ba9097" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;properties&quot;: &quot;always&quot;&lt;/code&gt; (default) enforces camelcase style for property names</source>
          <target state="translated">&lt;code&gt;&quot;properties&quot;: &quot;always&quot;&lt;/code&gt; （デフォルト）は、プロパティ名にキャメルケーススタイルを適用します</target>
        </trans-unit>
        <trans-unit id="54e7d45a599691b1f1922e1be577e13e35d49e28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;properties&quot;: &quot;never&quot;&lt;/code&gt; does not check property names</source>
          <target state="translated">&lt;code&gt;&quot;properties&quot;: &quot;never&quot;&lt;/code&gt; はプロパティ名をチェックしません</target>
        </trans-unit>
        <trans-unit id="6df65399ae9acfe3aae36151470d8a0a33ed29e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;properties&quot;: always&lt;/code&gt; (default) enforces identifier length convention for property names</source>
          <target state="translated">&lt;code&gt;&quot;properties&quot;: always&lt;/code&gt; （デフォルト）プロパティ名に識別子の長さの規則を適用します</target>
        </trans-unit>
        <trans-unit id="ec271148cd07ff96bcf6459c63ba13ea8c1cfa09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;properties&quot;: false&lt;/code&gt; disables checks on object properties</source>
          <target state="translated">&lt;code&gt;&quot;properties&quot;: false&lt;/code&gt; はオブジェクトプロパティのチェックを無効にします</target>
        </trans-unit>
        <trans-unit id="49117ffc139fd29531161e28ab6b4795765b20bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;properties&quot;: never&lt;/code&gt; ignores identifier length convention for property names</source>
          <target state="translated">&lt;code&gt;&quot;properties&quot;: never&lt;/code&gt; プロパティ名の識別子の長さの規則を無視しない</target>
        </trans-unit>
        <trans-unit id="7b292f4890b0e405a14fd017cdf8ba36f4c7663c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;properties&quot;: true&lt;/code&gt; (default) enables checks on object properties</source>
          <target state="translated">&lt;code&gt;&quot;properties&quot;: true&lt;/code&gt; （デフォルト）はオブジェクトプロパティのチェックを有効にします</target>
        </trans-unit>
        <trans-unit id="02c11ab0a0de4d416f1752b3e5cc5afeb602acde" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;properties&quot;: true&lt;/code&gt; requires object properties to match the specified regular expression</source>
          <target state="translated">&lt;code&gt;&quot;properties&quot;: true&lt;/code&gt; は、指定された正規表現に一致するオブジェクトプロパティを必要とします</target>
        </trans-unit>
        <trans-unit id="cb61a6f1a55dd5947c972a70f48dc01b95dc24da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;properties&quot;&lt;/code&gt; ensures the property shorthand is used (where the key and variable name match).</source>
          <target state="translated">&lt;code&gt;&quot;properties&quot;&lt;/code&gt; は、プロパティの省略表現が使用されることを保証します（キーと変数名が一致する場合）。</target>
        </trans-unit>
        <trans-unit id="b94a41da468ba4ba409a8912817b7b9c27e635f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;require&quot;&lt;/code&gt; requires JSDoc comments for the specified nodes</source>
          <target state="translated">&lt;code&gt;&quot;require&quot;&lt;/code&gt; は、指定されたノードのJSDocコメントが必要です</target>
        </trans-unit>
        <trans-unit id="d46f02228932044d31264268e611c07bec23cb94" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;requireForBlockBody&quot;: true&lt;/code&gt; modifies the as-needed rule in order to require parens if the function body is in an instructions block (surrounded by braces).</source>
          <target state="translated">&lt;code&gt;&quot;requireForBlockBody&quot;: true&lt;/code&gt; は、関数本体が（中括弧で囲まれた）命令ブロック内にある場合に括弧を要求するために、必要に応じてルールを変更します。</target>
        </trans-unit>
        <trans-unit id="03a9ab8505060d517f02e3bad20dbe0ee2b5c21b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;requireParamDescription&quot;: false&lt;/code&gt; allows missing description in parameter tags</source>
          <target state="translated">&lt;code&gt;&quot;requireParamDescription&quot;: false&lt;/code&gt; 指定すると、パラメータータグに記述がない</target>
        </trans-unit>
        <trans-unit id="6cd2cd0dde9bac6b2510b434f3899dcafcb7f7db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;requireParamType&quot;: false&lt;/code&gt; allows missing type in parameter tags</source>
          <target state="translated">&lt;code&gt;&quot;requireParamType&quot;: false&lt;/code&gt; 指定すると、パラメータータグに型がありません</target>
        </trans-unit>
        <trans-unit id="9c24064f34b5e32878f6f885ec0bc410376b05a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;requireReturn&quot;&lt;/code&gt; requires a return tag:</source>
          <target state="translated">&lt;code&gt;&quot;requireReturn&quot;&lt;/code&gt; は戻りタグが必要です。</target>
        </trans-unit>
        <trans-unit id="560356249c4ba1cad338fc1372fd6e1f4ac42e2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;requireReturnDescription&quot;: false&lt;/code&gt; allows missing description in return tags</source>
          <target state="translated">&lt;code&gt;&quot;requireReturnDescription&quot;: false&lt;/code&gt; 指定すると、戻りタグに説明がない</target>
        </trans-unit>
        <trans-unit id="a96e2e89619e0c98ae27b906b5dc5ff64ddc7a8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;requireReturnType&quot;: false&lt;/code&gt; allows missing type in return tags</source>
          <target state="translated">&lt;code&gt;&quot;requireReturnType&quot;: false&lt;/code&gt; 指定すると、戻りタグに型が欠落します</target>
        </trans-unit>
        <trans-unit id="6cf3a31f3d3819dec4ef85e65ca0c5d6f329584c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;requireStringLiterals&quot;: true&lt;/code&gt; requires &lt;code&gt;typeof&lt;/code&gt; expressions to only be compared to string literals or other &lt;code&gt;typeof&lt;/code&gt; expressions, and disallows comparisons to any other value.</source>
          <target state="translated">&lt;code&gt;&quot;requireStringLiterals&quot;: true&lt;/code&gt; 場合、 &lt;code&gt;typeof&lt;/code&gt; 式は文字列リテラルまたは他の &lt;code&gt;typeof&lt;/code&gt; 式とのみ比較する必要があり、他の値との比較は許可されません。</target>
        </trans-unit>
        <trans-unit id="012f0d52d4f9839d2a6f9f19afe3ee92f6b64529" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;restrictedNamedExports&quot;&lt;/code&gt; is an array of strings, where each string is a name to be restricted.</source>
          <target state="translated">&lt;code&gt;&quot;restrictedNamedExports&quot;&lt;/code&gt; は文字列の配列であり、各文字列は制限される名前です。</target>
        </trans-unit>
        <trans-unit id="414ae63e123dc96d40770eee3f3047589a0e8c61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;return&quot;&lt;/code&gt; is &lt;code&gt;return&lt;/code&gt; statements.</source>
          <target state="translated">&lt;code&gt;&quot;return&quot;&lt;/code&gt; は &lt;code&gt;return&lt;/code&gt; ステートメントです。</target>
        </trans-unit>
        <trans-unit id="9e1669bd980c2bb4b57934e04abd4675dd53d354" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;returnAssign&quot;: false&lt;/code&gt; allows extra parentheses around assignments in &lt;code&gt;return&lt;/code&gt; statements</source>
          <target state="translated">&lt;code&gt;&quot;returnAssign&quot;: false&lt;/code&gt; 指定すると、 &lt;code&gt;return&lt;/code&gt; ステートメントの割り当てを括弧で囲むことができます</target>
        </trans-unit>
        <trans-unit id="65c7aa7bfe343df3fcc06b69c1b3529fedb1b97c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;safe&quot;&lt;/code&gt; (default) corresponds either of the following options:</source>
          <target state="translated">&lt;code&gt;&quot;safe&quot;&lt;/code&gt; （デフォルト）は、次のオプションのいずれかに対応します。</target>
        </trans-unit>
        <trans-unit id="758d3bee0099f789daa6d43f6531bfcb7318895f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;separate-lines&quot;&lt;/code&gt;: Disallows block comments in favor of consecutive line comments</source>
          <target state="translated">&lt;code&gt;&quot;separate-lines&quot;&lt;/code&gt; ：連続する行コメントのためにブロックコメントを許可しません</target>
        </trans-unit>
        <trans-unit id="6bc88266fca67c5629f43d7a39927667a158728e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;separateRequires&quot;: true&lt;/code&gt; enforces &lt;code&gt;requires&lt;/code&gt; to be separate from declarations</source>
          <target state="translated">&lt;code&gt;&quot;separateRequires&quot;: true&lt;/code&gt; 強制 &lt;code&gt;requires&lt;/code&gt; 宣言から分離されます</target>
        </trans-unit>
        <trans-unit id="f38240fd97366a839c5d8655732dc69fcbba20ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;setBeforeGet&quot;&lt;/code&gt; if a property has both getter and setter, requires the setter to be defined before the getter.</source>
          <target state="translated">&lt;code&gt;&quot;setBeforeGet&quot;&lt;/code&gt; 、プロパティにゲッターとセッターの両方がある場合、ゲッターの前にセッターを定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="9b0500720dcd2632aedec71fbd431ab784ddefd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;setWithoutGet&quot;: true&lt;/code&gt; will also warn for setters without getters in classes.</source>
          <target state="translated">&lt;code&gt;&quot;setWithoutGet&quot;: true&lt;/code&gt; は、クラスにゲッターがないセッターも警告します。</target>
        </trans-unit>
        <trans-unit id="d480fc8a1aa988da445e5d93ad2077ee17255fee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;setters&quot;&lt;/code&gt; - Setters.</source>
          <target state="translated">&lt;code&gt;&quot;setters&quot;&lt;/code&gt; -セッター。</target>
        </trans-unit>
        <trans-unit id="8b7a1b94967c2ffa208c54fe8e0fdd2511f1a738" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;single&quot;&lt;/code&gt; requires the use of single quotes wherever possible</source>
          <target state="translated">&lt;code&gt;&quot;single&quot;&lt;/code&gt; では、可能な限り単一引用符を使用する必要があります</target>
        </trans-unit>
        <trans-unit id="41d247ff5940a35ccf3e9044dbf6e5df13a5d6ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;singleLine&quot;&lt;/code&gt; specifies a spacing style for single-line object literals.</source>
          <target state="translated">&lt;code&gt;&quot;singleLine&quot;&lt;/code&gt; は、単一行オブジェクトリテラルの間隔スタイルを指定します。</target>
        </trans-unit>
        <trans-unit id="a0276d1c998915af126d0a69e5685d5998c56c86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;singleValue&quot;: false&lt;/code&gt; disallows spaces inside brackets of array literals that contain a single element</source>
          <target state="translated">&lt;code&gt;&quot;singleValue&quot;: false&lt;/code&gt; は、単一の要素を含む配列リテラルの括弧内のスペースを許可しません</target>
        </trans-unit>
        <trans-unit id="9927dbcbab4ac830867c23caf96269e26d89d568" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;singleValue&quot;: true&lt;/code&gt; requires one or more spaces or newlines inside brackets of array literals that contain a single element</source>
          <target state="translated">&lt;code&gt;&quot;singleValue&quot;: true&lt;/code&gt; は、単一の要素を含む配列リテラルの括弧内に1つ以上のスペースまたは改行が必要です</target>
        </trans-unit>
        <trans-unit id="6e635d69643355b5d06dbb1a8a20ad32c7fd268b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;singleline-const&quot;&lt;/code&gt; is single-line &lt;code&gt;const&lt;/code&gt; variable declarations.</source>
          <target state="translated">&lt;code&gt;&quot;singleline-const&quot;&lt;/code&gt; は、単一行の &lt;code&gt;const&lt;/code&gt; 変数宣言です。</target>
        </trans-unit>
        <trans-unit id="9284d512cd8df09b4b706cb615b5582636c7f6cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;singleline-let&quot;&lt;/code&gt; is single-line &lt;code&gt;let&lt;/code&gt; variable declarations.</source>
          <target state="translated">&lt;code&gt;&quot;singleline-let&quot;&lt;/code&gt; は、単一行の &lt;code&gt;let&lt;/code&gt; 変数宣言です。</target>
        </trans-unit>
        <trans-unit id="bbc50f03ac7e8fc1f0bd910d7e0381155d253469" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;singleline-var&quot;&lt;/code&gt; is single-line &lt;code&gt;var&lt;/code&gt; variable declarations.</source>
          <target state="translated">&lt;code&gt;&quot;singleline-var&quot;&lt;/code&gt; は、単一行の &lt;code&gt;var&lt;/code&gt; 変数宣言です。</target>
        </trans-unit>
        <trans-unit id="e830a7b1be44c2d5ec20caebc0f602d53955c258" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;skipBlankLines&quot;: false&lt;/code&gt; (default) disallows trailing whitespace on empty lines</source>
          <target state="translated">&lt;code&gt;&quot;skipBlankLines&quot;: false&lt;/code&gt; （デフォルト）は、空行の末尾の空白を許可しません</target>
        </trans-unit>
        <trans-unit id="305b8706c4d857e94268170e365602664a0e27f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;skipBlankLines&quot;: true&lt;/code&gt; allows trailing whitespace on empty lines</source>
          <target state="translated">&lt;code&gt;&quot;skipBlankLines&quot;: true&lt;/code&gt; 、空行の末尾の空白を許可します</target>
        </trans-unit>
        <trans-unit id="9e3c0c5faef77eb3d18b3f0f38cd15110a10c379" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;skipBlankLines&quot;: true&lt;/code&gt; ignore lines made up purely of whitespace.</source>
          <target state="translated">&lt;code&gt;&quot;skipBlankLines&quot;: true&lt;/code&gt; 空白のみで構成されたtrueの無視行。</target>
        </trans-unit>
        <trans-unit id="2b29329892070b990a3f680da1a3283c537a47c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;skipBlankLines&quot;&lt;/code&gt; (default &lt;code&gt;false&lt;/code&gt;) ignore lines made up purely of whitespace.</source>
          <target state="translated">&lt;code&gt;&quot;skipBlankLines&quot;&lt;/code&gt; （デフォルトは &lt;code&gt;false&lt;/code&gt; ）は、空白のみで構成された行を無視します。</target>
        </trans-unit>
        <trans-unit id="589d321ee6db70062557c90fd2755622572c6194" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;skipComments&quot;: true&lt;/code&gt; allows any whitespace characters in comments</source>
          <target state="translated">&lt;code&gt;&quot;skipComments&quot;: true&lt;/code&gt; はコメントに空白文字を許可します</target>
        </trans-unit>
        <trans-unit id="c14eb8827efb8574b5f2576704deea207b2bea3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;skipComments&quot;: true&lt;/code&gt; ignore lines containing just comments</source>
          <target state="translated">&lt;code&gt;&quot;skipComments&quot;: true&lt;/code&gt; コメントのみを含むtrueの無視行</target>
        </trans-unit>
        <trans-unit id="0660f031f9fafc1e4a0bc268b92a44f47a7ec2f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;skipComments&quot;&lt;/code&gt; (default &lt;code&gt;false&lt;/code&gt;) ignore lines containing just comments.</source>
          <target state="translated">&lt;code&gt;&quot;skipComments&quot;&lt;/code&gt; （デフォルトは &lt;code&gt;false&lt;/code&gt; ）は、コメントのみを含む行を無視します。</target>
        </trans-unit>
        <trans-unit id="fd83f63ab467dc6c96413941fe7c1f40cb080807" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;skipRegExps&quot;: true&lt;/code&gt; allows any whitespace characters in regular expression literals</source>
          <target state="translated">&lt;code&gt;&quot;skipRegExps&quot;: true&lt;/code&gt; は、正規表現リテラル内の空白文字を許可します</target>
        </trans-unit>
        <trans-unit id="2b0f99a06d7505a6f13fca0f96bdfaee663ccf71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;skipStrings&quot;: true&lt;/code&gt; (default) allows any whitespace characters in string literals</source>
          <target state="translated">&lt;code&gt;&quot;skipStrings&quot;: true&lt;/code&gt; （デフォルト）は、文字列リテラル内の空白文字を許可します</target>
        </trans-unit>
        <trans-unit id="2cdeced78da43012d973e372bb6a38174c7136e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;skipTemplates&quot;: true&lt;/code&gt; allows any whitespace characters in template literals</source>
          <target state="translated">&lt;code&gt;&quot;skipTemplates&quot;: true&lt;/code&gt; は、テンプレートリテラル内の空白文字を許可します</target>
        </trans-unit>
        <trans-unit id="27502ffe2ada938802022364ed5831ef4daa26b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;smart-tabs&quot;&lt;/code&gt; allows mixed tabs and spaces when the spaces are used for alignment.</source>
          <target state="translated">&lt;code&gt;&quot;smart-tabs&quot;&lt;/code&gt; を使用すると、スペースを位置合わせに使用するときに、タブとスペースを混在させることができます。</target>
        </trans-unit>
        <trans-unit id="40c62ec22f00671def09e7a78651e1ee1eec3b8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;sourceType&quot;: &quot;module&quot;&lt;/code&gt; that is, files are &lt;strong&gt;ECMAScript&lt;/strong&gt; modules</source>
          <target state="translated">&lt;code&gt;&quot;sourceType&quot;: &quot;module&quot;&lt;/code&gt; つまり、ファイルは&lt;strong&gt;ECMAScript&lt;/strong&gt;モジュールです</target>
        </trans-unit>
        <trans-unit id="882b270bcdd1c99180548ee92d584675811f48fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;starred-block&quot;&lt;/code&gt; (default): Disallows consecutive line comments in favor of block comments. Additionally, requires block comments to have an aligned &lt;code&gt;*&lt;/code&gt; character before each line.</source>
          <target state="translated">&lt;code&gt;&quot;starred-block&quot;&lt;/code&gt; （デフォルト）：ブロックコメントを優先して、連続する行コメントを禁止します。また、ブロックコメントには、各行の前に &lt;code&gt;*&lt;/code&gt; 文字を配置する必要があります。</target>
        </trans-unit>
        <trans-unit id="b25ade67ae9aa93f5d1361d3860ba85017f00f18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;strict&quot;&lt;/code&gt;: enforces exactly one space before or after colons in object literals.</source>
          <target state="translated">&lt;code&gt;&quot;strict&quot;&lt;/code&gt; ：オブジェクトリテラルのコロンの前後に1つのスペースを強制します。</target>
        </trans-unit>
        <trans-unit id="9155f90262c90d5454b0c843c124e31bb4df9ae0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;string&quot;&lt;/code&gt; (&lt;code&gt;true&lt;/code&gt; by default) - When this is &lt;code&gt;true&lt;/code&gt;, this rule warns shorter type conversions for &lt;code&gt;string&lt;/code&gt; type.</source>
          <target state="translated">&lt;code&gt;&quot;string&quot;&lt;/code&gt; （ &lt;code&gt;true&lt;/code&gt; デフォルト） -これは &lt;code&gt;true&lt;/code&gt; 、このルールがために短い型変換を警告する &lt;code&gt;string&lt;/code&gt; タイプ。</target>
        </trans-unit>
        <trans-unit id="c1b2c444ce6e8f33480ce469ecbce3767bb84ced" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;stroustrup&quot;&lt;/code&gt; enforces Stroustrup style</source>
          <target state="translated">&lt;code&gt;&quot;stroustrup&quot;&lt;/code&gt; は Stroustrupスタイルを強制します</target>
        </trans-unit>
        <trans-unit id="aa6ebe85c89735d8c6621814d3d7542d97021d62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;suggestion&quot;&lt;/code&gt; means the rule is identifying something that could be done in a better way but no errors will occur if the code isn't changed.</source>
          <target state="translated">&lt;code&gt;&quot;suggestion&quot;&lt;/code&gt; は、ルールがより良い方法で実行できる何かを識別しているが、コードが変更されない場合はエラーが発生しないことを意味します。</target>
        </trans-unit>
        <trans-unit id="ce80bd038c6c767d435b432f0666a51e443bbbae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;switch&quot;&lt;/code&gt; is &lt;code&gt;switch&lt;/code&gt; statements.</source>
          <target state="translated">&lt;code&gt;&quot;switch&quot;&lt;/code&gt; は &lt;code&gt;switch&lt;/code&gt; ステートメントです。</target>
        </trans-unit>
        <trans-unit id="649310900f071c68aa7c344f1f09951b4f2bcc6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;switches&quot;&lt;/code&gt; require or disallow padding within &lt;code&gt;switch&lt;/code&gt; statements</source>
          <target state="translated">&lt;code&gt;&quot;switches&quot;&lt;/code&gt; は、 &lt;code&gt;switch&lt;/code&gt; ステートメント内のパディングを要求または禁止します</target>
        </trans-unit>
        <trans-unit id="d0eb44c5afee0ccd6f7b738d28af6830b6a9d869" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;tabWidth&quot;&lt;/code&gt; (default &lt;code&gt;4&lt;/code&gt;) specifies the character width for tab characters</source>
          <target state="translated">&lt;code&gt;&quot;tabWidth&quot;&lt;/code&gt; （デフォルト &lt;code&gt;4&lt;/code&gt; ）はタブ文字の文字幅を指定します</target>
        </trans-unit>
        <trans-unit id="47717b592388f995ce70974592481db38bf117dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;terms&quot;&lt;/code&gt;: optional array of terms to match. Defaults to &lt;code&gt;[&quot;todo&quot;, &quot;fixme&quot;, &quot;xxx&quot;]&lt;/code&gt;. Terms are matched case-insensitive and as whole words: &lt;code&gt;fix&lt;/code&gt; would match &lt;code&gt;FIX&lt;/code&gt; but not &lt;code&gt;fixing&lt;/code&gt;. Terms can consist of multiple words: &lt;code&gt;really bad idea&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;terms&quot;&lt;/code&gt; ：一致する用語のオプションの配列。デフォルトは &lt;code&gt;[&quot;todo&quot;, &quot;fixme&quot;, &quot;xxx&quot;]&lt;/code&gt; です。利用規約には、大文字と小文字を区別しないと全体の言葉のように一致している： &lt;code&gt;fix&lt;/code&gt; 合っているでしょう &lt;code&gt;FIX&lt;/code&gt; をではなく、 &lt;code&gt;fixing&lt;/code&gt; 。：利用規約は、複数の単語で構成することができ &lt;code&gt;really bad idea&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5d5db9ccb385aecedc9b642ad6e99a5d9edba95b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;throw&quot;&lt;/code&gt; is &lt;code&gt;throw&lt;/code&gt; statements.</source>
          <target state="translated">&lt;code&gt;&quot;throw&quot;&lt;/code&gt; は、 &lt;code&gt;throw&lt;/code&gt; ステートメントです。</target>
        </trans-unit>
        <trans-unit id="74c4d1e1aad754c0be3429e7da4ba9c436bd042e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;treatUndefinedAsUnspecified&quot;: false&lt;/code&gt; (default) always either specify values or return &lt;code&gt;undefined&lt;/code&gt; implicitly only.</source>
          <target state="translated">&lt;code&gt;&quot;treatUndefinedAsUnspecified&quot;: false&lt;/code&gt; （デフォルト）は常に値を指定するか、暗黙的にのみ &lt;code&gt;undefined&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="0c9dabdb6791ced04c1397f0fb5c094ac54589fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;treatUndefinedAsUnspecified&quot;: true&lt;/code&gt; always either specify values or return &lt;code&gt;undefined&lt;/code&gt; explicitly or implicitly.</source>
          <target state="translated">&lt;code&gt;&quot;treatUndefinedAsUnspecified&quot;: true&lt;/code&gt; 常に値を指定するか、明示的または暗黙的に &lt;code&gt;undefined&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="de4196b1d6fc8830d4e542cb4246d23c3a97617b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;try&quot;&lt;/code&gt; is &lt;code&gt;try&lt;/code&gt; statements.</source>
          <target state="translated">&lt;code&gt;&quot;try&quot;&lt;/code&gt; は &lt;code&gt;try&lt;/code&gt; ステートメントです。</target>
        </trans-unit>
        <trans-unit id="8549faeb1a8e14b6e62b0002a293d9d4e6bb79ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;u&quot;&lt;/code&gt; (&lt;a href=&quot;https://people.mozilla.org/~jorendorff/es6-draft.html#sec-get-regexp.prototype.unicode&quot;&gt;unicode&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;&quot;u&quot;&lt;/code&gt; （&lt;a href=&quot;https://people.mozilla.org/~jorendorff/es6-draft.html#sec-get-regexp.prototype.unicode&quot;&gt;Unicode&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="dd0ddfc3791b6accc92f1ed4fcc0edf2c6f96e78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;uninitialized&quot;: &quot;always&quot;&lt;/code&gt; requires one variable declaration for uninitialized variables per scope</source>
          <target state="translated">&lt;code&gt;&quot;uninitialized&quot;: &quot;always&quot;&lt;/code&gt; では、スコープごとに初期化されていない変数に対して1つの変数宣言が必要です</target>
        </trans-unit>
        <trans-unit id="b7e98bbfc93c2584ac71fb4e7e21384ae1512ce1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;uninitialized&quot;: &quot;consecutive&quot;&lt;/code&gt; requires consecutive variable declarations for uninitialized variables to be a single declaration</source>
          <target state="translated">&lt;code&gt;&quot;uninitialized&quot;: &quot;consecutive&quot;&lt;/code&gt; では、初期化されていない変数を単一の宣言にするために、連続した変数宣言が必要です</target>
        </trans-unit>
        <trans-unit id="b65e477f4bf03908880174bacd00f021fe3427ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;uninitialized&quot;: &quot;never&quot;&lt;/code&gt; requires multiple variable declarations for uninitialized variables per scope</source>
          <target state="translated">&lt;code&gt;&quot;uninitialized&quot;: &quot;never&quot;&lt;/code&gt; は、スコープごとに初期化されていない変数に対して複数の変数宣言を必要とします</target>
        </trans-unit>
        <trans-unit id="77cfdb444e869de4dd87d71bc60c8d9740960b57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;unix&quot;&lt;/code&gt; (default) enforces the usage of Unix line endings: &lt;code&gt;\n&lt;/code&gt; for LF.</source>
          <target state="translated">&lt;code&gt;&quot;unix&quot;&lt;/code&gt; （デフォルト）は、UNIXの行末の使用を強制します：LFの &lt;code&gt;\n&lt;/code&gt; は\ n。</target>
        </trans-unit>
        <trans-unit id="d8e1709cfd09f8ef977d00e878ec6733c8930d72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;unix&quot;&lt;/code&gt; (deprecated) is identical to &quot;always&quot;</source>
          <target state="translated">&lt;code&gt;&quot;unix&quot;&lt;/code&gt; （非推奨）は「always」と同じ</target>
        </trans-unit>
        <trans-unit id="54bc832fdfc65c9b33562d2d5fa4697a5f39841e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;unnecessary&quot;: false&lt;/code&gt; allows quotes around object literal property names that are not strictly required (only applies when using &lt;code&gt;as-needed&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;&quot;unnecessary&quot;: false&lt;/code&gt; は、厳密に必要ではないオブジェクトリテラルプロパティ名を引用符で囲みます（ &lt;code&gt;as-needed&lt;/code&gt; を使用する場合にのみ適用されます）</target>
        </trans-unit>
        <trans-unit id="8ebe3c9a6001ab3af087b16d3655640e2c39114b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;unnecessary&quot;: true&lt;/code&gt; (default) disallows quotes around object literal property names that are not strictly required (only applies when using &lt;code&gt;as-needed&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;&quot;unnecessary&quot;: true&lt;/code&gt; （デフォルト）厳密に必要ではないオブジェクトリテラルプロパティ名を引用符で囲みません（ &lt;code&gt;as-needed&lt;/code&gt; を使用する場合にのみ適用されます）</target>
        </trans-unit>
        <trans-unit id="a34e2338690074eac24d258e6750631b1a6f69f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;value&quot;&lt;/code&gt;: enforces horizontal alignment of values in object literals.</source>
          <target state="translated">&lt;code&gt;&quot;value&quot;&lt;/code&gt; ：オブジェクトリテラルの値の水平方向の配置を強制します。</target>
        </trans-unit>
        <trans-unit id="aeef1bd8e3818b312a1831e0444a6557a6cfbb55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;var&quot;: &quot;always&quot;&lt;/code&gt; requires one &lt;code&gt;var&lt;/code&gt; declaration per function</source>
          <target state="translated">&lt;code&gt;&quot;var&quot;: &quot;always&quot;&lt;/code&gt; 関数ごとに1 つの &lt;code&gt;var&lt;/code&gt; 宣言が必要</target>
        </trans-unit>
        <trans-unit id="5d6b3197444d4dc13f2ba1c70483c75958373605" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;var&quot;: &quot;consecutive&quot;&lt;/code&gt; requires consecutive &lt;code&gt;var&lt;/code&gt; declarations to be a single declaration</source>
          <target state="translated">&lt;code&gt;&quot;var&quot;: &quot;consecutive&quot;&lt;/code&gt; では、連続する &lt;code&gt;var&lt;/code&gt; 宣言が単一の宣言である必要があります</target>
        </trans-unit>
        <trans-unit id="fec5b49d4dd1ebde4e4cc24b9aa1a1a8ccbf5dde" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;var&quot;: &quot;never&quot;&lt;/code&gt; requires multiple &lt;code&gt;var&lt;/code&gt; declarations per function</source>
          <target state="translated">&lt;code&gt;&quot;var&quot;: &quot;never&quot;&lt;/code&gt; は関数ごとに複数の &lt;code&gt;var&lt;/code&gt; 宣言を必要とします</target>
        </trans-unit>
        <trans-unit id="a441a6fddffdf67a4956c8f0e23f7cda2c0e33a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;var&quot;&lt;/code&gt; is &lt;code&gt;var&lt;/code&gt; variable declarations, both single-line and multiline.</source>
          <target state="translated">&lt;code&gt;&quot;var&quot;&lt;/code&gt; は、単一行と複数行の両方の &lt;code&gt;var&lt;/code&gt; 変数宣言です。</target>
        </trans-unit>
        <trans-unit id="877430f89cb732f32b1f2611832712b0d47a0c27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;warn&quot;&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt; - turn the rule on as a warning (doesn't affect exit code)</source>
          <target state="translated">&lt;code&gt;&quot;warn&quot;&lt;/code&gt; または &lt;code&gt;1&lt;/code&gt; -警告としてルールをオンにします（終了コードには影響しません）</target>
        </trans-unit>
        <trans-unit id="fe40e6c085d5471eabe47b8afd74a4616cd37245" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;while&quot;&lt;/code&gt; is &lt;code&gt;while&lt;/code&gt; loop statements.</source>
          <target state="translated">&lt;code&gt;&quot;while&quot;&lt;/code&gt; は &lt;code&gt;while&lt;/code&gt; ループステートメントです。</target>
        </trans-unit>
        <trans-unit id="c7f109a95177ad8642b2729886718ab65bf9486c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;windows&quot;&lt;/code&gt; (deprecated) is identical to &quot;always&quot;, but will use a CRLF character when autofixing</source>
          <target state="translated">&lt;code&gt;&quot;windows&quot;&lt;/code&gt; （非推奨）は「always」と同じですが、自動修正時にCRLF文字を使用します</target>
        </trans-unit>
        <trans-unit id="18c39a6a7b003d4399fe3e4b20f7179e326401c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;windows&quot;&lt;/code&gt; enforces the usage of Windows line endings: &lt;code&gt;\r\n&lt;/code&gt; for CRLF.</source>
          <target state="translated">&lt;code&gt;&quot;windows&quot;&lt;/code&gt; は、Windows行末の使用を強制します：CRLFの &lt;code&gt;\r\n&lt;/code&gt; は\ r \ n。</target>
        </trans-unit>
        <trans-unit id="75835dddb63d82fa769fd57d730ce7e18a1852f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;with&quot;&lt;/code&gt; is &lt;code&gt;with&lt;/code&gt; statements.</source>
          <target state="translated">&lt;code&gt;&quot;with&quot;&lt;/code&gt; は &lt;code&gt;with&lt;/code&gt; ステートメントです。</target>
        </trans-unit>
        <trans-unit id="19412b4025bf68b1fa9d64d95de7996ec1be386a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;y&quot;&lt;/code&gt; (&lt;a href=&quot;https://people.mozilla.org/~jorendorff/es6-draft.html#sec-get-regexp.prototype.sticky&quot;&gt;sticky&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;&quot;y&quot;&lt;/code&gt; （&lt;a href=&quot;https://people.mozilla.org/~jorendorff/es6-draft.html#sec-get-regexp.prototype.sticky&quot;&gt;付箋&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="3bc6d68f2c63e065cf121c54c1901937e61d7318" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;&lt;/code&gt; operator.</source>
          <target state="translated">&lt;code&gt;&amp;gt;&lt;/code&gt; 演算子。</target>
        </trans-unit>
        <trans-unit id="8cb9cff1ff0877a642503fcc27b98cd03b70d59c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;=&lt;/code&gt; operator.</source>
          <target state="translated">&lt;code&gt;&amp;gt;=&lt;/code&gt; 演算子。</target>
        </trans-unit>
        <trans-unit id="163caa29cc525f0f3856a63ce248f237d63785dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;&lt;/code&gt; operator.</source>
          <target state="translated">&lt;code&gt;&amp;lt;&lt;/code&gt; 演算子。</target>
        </trans-unit>
        <trans-unit id="5130dcb5e37caebacc39deb679eb7d4adaf0b610" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;=&lt;/code&gt; operator.</source>
          <target state="translated">&lt;code&gt;&amp;lt;=&lt;/code&gt; 演算子。</target>
        </trans-unit>
        <trans-unit id="59a214e25789bada7375a7f92061e627ea3f3a14" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--color&lt;/code&gt;, &lt;code&gt;--no-color&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;--color&lt;/code&gt; 、 &lt;code&gt;--no-color&lt;/code&gt; no -color</target>
        </trans-unit>
        <trans-unit id="b7d56faeea137c4f6187bd536cc10499171180de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--config&lt;/code&gt;, &lt;code&gt;-c&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;--config&lt;/code&gt; 、 &lt;code&gt;-c&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0a78d2fd1a57e240948283b1a4355bec05770834" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-c&lt;/code&gt;, &lt;code&gt;--config&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;-c&lt;/code&gt; 、-- &lt;code&gt;--config&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d2670d9c23050a245e7fff484d8b284d16a236ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-f&lt;/code&gt;, &lt;code&gt;--format&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;-f&lt;/code&gt; 、-- &lt;code&gt;--format&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2e245af5917e5b31a395ca66ac323795a9a17904" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-h&lt;/code&gt;, &lt;code&gt;--help&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;-h&lt;/code&gt; 、-- &lt;code&gt;--help&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="90adea40c2f6410b4a1ac9927caa20de2c2f8269" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-o&lt;/code&gt;, &lt;code&gt;--output-file&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;-o&lt;/code&gt; 、-- &lt;code&gt;--output-file&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="841b508fd635e875034c77d3e653179728b7033e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-v&lt;/code&gt;, &lt;code&gt;--version&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;-v&lt;/code&gt; 、-- &lt;code&gt;--version&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b667efe3d86e1c0bbb8aef6df74e3076bb7429fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.eslintignore&lt;/code&gt; can override &lt;code&gt;ignorePatterns&lt;/code&gt; property of config files.</source>
          <target state="translated">&lt;code&gt;.eslintignore&lt;/code&gt; は、構成ファイルの &lt;code&gt;ignorePatterns&lt;/code&gt; プロパティをオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="b36cf5031e24c8f9aec7777821290a8837bfd1ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.eslintrc.*&lt;/code&gt; or &lt;code&gt;package.json&lt;/code&gt; file in same directory as linted file</source>
          <target state="translated">&lt;code&gt;.eslintrc.*&lt;/code&gt; ファイルと同じディレクトリにある.eslintrc。*または &lt;code&gt;package.json&lt;/code&gt; ファイル</target>
        </trans-unit>
        <trans-unit id="88e3107a05172fc4a94e22f1a5d90099fb7a66da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.eslintrc&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;.eslintrc&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="27e5db9d78b91c34b5f376c1fe8ebad484f6d606" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/*eslint-disable*/&lt;/code&gt; and &lt;code&gt;/*eslint-enable*/&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;/*eslint-disable*/&lt;/code&gt; および &lt;code&gt;/*eslint-enable*/&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="146ad07bad63c5a511390d5794a04ce4ba2313d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;// jscs:disable ruleName1, ruleName2&lt;/code&gt; or &lt;code&gt;/* jscs:disable ruleName1, ruleName2 */&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;// jscs:disable ruleName1, ruleName2&lt;/code&gt; または &lt;code&gt;/* jscs:disable ruleName1, ruleName2 */&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="58b4b955e2fbbee7e0a41dc478b6c1ec52f11d93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;// jscs:disable ruleName&lt;/code&gt; or &lt;code&gt;/* jscs:disable ruleName */&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;// jscs:disable ruleName&lt;/code&gt; または &lt;code&gt;/* jscs:disable ruleName */&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="043b8ce28b8ea6046fc5ad5c45ac4730ab454ab7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;// jscs:disable&lt;/code&gt; or &lt;code&gt;/* jscs:disable */&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;// jscs:disable&lt;/code&gt; または &lt;code&gt;/* jscs:disable */&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a37a0ef93e4f66a591d3b16c60b27ec523e0a4c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;// jscs:enable ruleName1, ruleName2&lt;/code&gt; or &lt;code&gt;/* jscs:enable ruleName1, ruleName2 */&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;// jscs:enable ruleName1, ruleName2&lt;/code&gt; または &lt;code&gt;/* jscs:enable ruleName1, ruleName2 */&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e920d822ad4e543537e554fc8d57be9c10c629ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;// jscs:enable ruleName&lt;/code&gt; or &lt;code&gt;/* jscs:enable ruleName */&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;// jscs:enable ruleName&lt;/code&gt; または &lt;code&gt;/* jscs:enable ruleName */&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="93122957e2236607618c9369808b266913210cbd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;// jscs:enable&lt;/code&gt; or &lt;code&gt;/* jscs:enable */&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;// jscs:enable&lt;/code&gt; または &lt;code&gt;/* jscs:enable */&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ecc2c6129bef626120d9ae4690e3a1ee5a48797d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt;: Linting was successful and there are no linting errors. If the &lt;code&gt;--max-warnings&lt;/code&gt; flag is set to &lt;code&gt;n&lt;/code&gt;, the number of linting warnings is at most &lt;code&gt;n&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; ：リンティングは成功し、リンティングエラーはありません。 &lt;code&gt;--max-warnings&lt;/code&gt; フラグが &lt;code&gt;n&lt;/code&gt; に設定されている場合、リンティング警告の数は最大で &lt;code&gt;n&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="f6541558ec30565c99c053dbc0e54c1b68bbcd2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt;: Linting was successful and there is at least one linting error, or there are more linting warnings than allowed by the &lt;code&gt;--max-warnings&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;1&lt;/code&gt; ：リンティングが成功し、少なくとも1つのリンティングエラーが発生しているか、 &lt;code&gt;--max-warnings&lt;/code&gt; オプションで許可されているよりも多くのリンティング警告が発生しています。</target>
        </trans-unit>
        <trans-unit id="9c3f1dcafa467300f0691f481bb2babb4c85a52b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;2&lt;/code&gt;: Linting was unsuccessful due to a configuration problem or an internal error.</source>
          <target state="translated">&lt;code&gt;2&lt;/code&gt; ：構成の問題または内部エラーのために、リンティングが失敗しました。</target>
        </trans-unit>
        <trans-unit id="ec3ef9ff49d7cf0aa5e1f00009f18cc59ef897cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;?:&lt;/code&gt; ternary expression</source>
          <target state="translated">&lt;code&gt;?:&lt;/code&gt; 3項式</target>
        </trans-unit>
        <trans-unit id="c1f698a91800a231a308ec2920e69e02f89f712f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@foo/eslint-plugin-bar&lt;/code&gt; &amp;rarr; &lt;code&gt;@foo/bar/a-environment&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;@foo/eslint-plugin-bar&lt;/code&gt; &amp;rarr; &lt;code&gt;@foo/bar/a-environment&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3803e5ee0a94f9b5edde1df8c15c1a952f3c7739" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@foo/eslint-plugin&lt;/code&gt; &amp;rarr; &lt;code&gt;@foo/a-config&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;@foo/eslint-plugin&lt;/code&gt; &amp;rarr; &lt;code&gt;@foo/a-config&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9ba06a445e178999f8d05f1e1ccbd24cbaf2b803" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Array&lt;/code&gt; has several methods for filtering, mapping, and folding. If we forget to write &lt;code&gt;return&lt;/code&gt; statement in a callback of those, it's probably a mistake. If you don't want to use a return or don't need the returned results, consider using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach&quot;&gt;.forEach&lt;/a&gt; instead.</source>
          <target state="translated">&lt;code&gt;Array&lt;/code&gt; は、フィルタリング、マッピング、およびフォールディングのためのいくつかのメソッドがあります。それらのコールバックで &lt;code&gt;return&lt;/code&gt; ステートメントを書くのを忘れた場合、それはおそらく間違いです。戻り値を使用したくない場合、または返された結果が不要な場合は、代わりに&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach&quot;&gt;.forEachの&lt;/a&gt;使用を検討してください。</target>
        </trans-unit>
        <trans-unit id="71975abf16396bb18fbb3532213fbcdeb3f853df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BlockStatement&lt;/code&gt; ※1</source>
          <target state="translated">&lt;code&gt;BlockStatement&lt;/code&gt; ※1</target>
        </trans-unit>
        <trans-unit id="d2747494ff3f2db0e9d420ff9f7ff44f8a82e8dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Breaking&lt;/code&gt; - for a backwards-incompatible enhancement or feature.</source>
          <target state="translated">&lt;code&gt;Breaking&lt;/code&gt; -下位互換性のない拡張または機能の場合。</target>
        </trans-unit>
        <trans-unit id="e7fd83e56afc31c3f641127baf8ad0c399098e31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Build&lt;/code&gt; - changes to build process only.</source>
          <target state="translated">&lt;code&gt;Build&lt;/code&gt; -ビルドプロセスのみの変更。</target>
        </trans-unit>
        <trans-unit id="5ab04fffed90e6ed24b923a4c28c6f037b7c92bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CLIEngine&lt;/code&gt; - the &lt;code&gt;CLIEngine&lt;/code&gt; class has been deprecated in favor of the &lt;code&gt;ESLint&lt;/code&gt; class as of v7.0.0.</source>
          <target state="translated">&lt;code&gt;CLIEngine&lt;/code&gt; - &lt;code&gt;CLIEngine&lt;/code&gt; のクラスはの賛成で廃止されました &lt;code&gt;ESLint&lt;/code&gt; のV7.0.0のように、クラス。</target>
        </trans-unit>
        <trans-unit id="f0d7555db25f2d833cc51f8f4633c6d322a7133e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CLIEngine&lt;/code&gt; has a static &lt;code&gt;version&lt;/code&gt; property containing the semantic version number of ESLint that it comes from.</source>
          <target state="translated">&lt;code&gt;CLIEngine&lt;/code&gt; には、それが由来するESLintのセマンティックバージョン番号を含む静的 &lt;code&gt;version&lt;/code&gt; プロパティがあります。</target>
        </trans-unit>
        <trans-unit id="7cf54fcd08cc8fb3a43954ef5140808c54b21891" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Chore&lt;/code&gt; - for refactoring, adding tests, etc. (anything that isn't user-facing).</source>
          <target state="translated">&lt;code&gt;Chore&lt;/code&gt; -リファクタリング、テストの追加など（ユーザー向けではないもの）。</target>
        </trans-unit>
        <trans-unit id="25e25765376f7a46c19bfa1293ca82d2640e2859" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ClassDeclaration&lt;/code&gt; creates a variable, and we can modify the variable.</source>
          <target state="translated">&lt;code&gt;ClassDeclaration&lt;/code&gt; は変数を作成し、変数を変更できます。</target>
        </trans-unit>
        <trans-unit id="8ef37e1f7e57a4610372f1c9ac68804344a5085a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ClassDeclaration&lt;/code&gt; or &lt;code&gt;ClassExpression&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ClassDeclaration&lt;/code&gt; または &lt;code&gt;ClassExpression&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7fefdc3b4e208a7c12dc2e76577d45431bb20439" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CodePath&lt;/code&gt; expresses whole of one code path. This object exists for each function and the global. This has references of both the initial segment and the final segments of a code path.</source>
          <target state="translated">&lt;code&gt;CodePath&lt;/code&gt; は1つのコードパス全体を表します。このオブジェクトは、関数およびグローバルごとに存在します。これには、コードパスの最初のセグメントと最後のセグメントの両方の参照があります。</target>
        </trans-unit>
        <trans-unit id="928143d357c93c507fa25ff0e0d2486078b2b531" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CodePath&lt;/code&gt; has the following properties:</source>
          <target state="translated">&lt;code&gt;CodePath&lt;/code&gt; には次のプロパティがあります。</target>
        </trans-unit>
        <trans-unit id="fcbbb72811f05da0c1cdb513e4572c31b1e9dcfb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CodePathSegment&lt;/code&gt; has the following properties:</source>
          <target state="translated">&lt;code&gt;CodePathSegment&lt;/code&gt; には次のプロパティがあります。</target>
        </trans-unit>
        <trans-unit id="0dad0faf22f51c9f7c74c1bfc830dbe95a85b627" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CodePathSegment&lt;/code&gt; is a part of a code path. A code path is expressed with plural &lt;code&gt;CodePathSegment&lt;/code&gt; objects, it's similar to doubly linked list. Difference from doubly linked list is what there are forking and merging (the next/prev are plural).</source>
          <target state="translated">&lt;code&gt;CodePathSegment&lt;/code&gt; は、コードパスの一部です。コードパスは、複数の &lt;code&gt;CodePathSegment&lt;/code&gt; オブジェクトで表されます。これは、二重リンクリストに似ています。二重にリンクされたリストとの違いは、分岐とマージの違いです（next / prevは複数です）。</target>
        </trans-unit>
        <trans-unit id="4de7733faee690e139ede86a972d519d7d224098" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Definition&lt;/code&gt; object is variable definition's information.</source>
          <target state="translated">&lt;code&gt;Definition&lt;/code&gt; オブジェクトは、変数定義の情報です。</target>
        </trans-unit>
        <trans-unit id="4c1ae6c7421b5a041d88df2771864735c12cf839" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Docs&lt;/code&gt; - changes to documentation only.</source>
          <target state="translated">&lt;code&gt;Docs&lt;/code&gt; -ドキュメントのみの変更。</target>
        </trans-unit>
        <trans-unit id="64dd6a750d844dd3618e262ef785379a822f2305" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FIXME&lt;/code&gt; - indicates that the code is problematic and should be fixed soon. Less important than &lt;code&gt;XXX&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FIXME&lt;/code&gt; -コードに問題があり、すぐに修正する必要があることを示します。 &lt;code&gt;XXX&lt;/code&gt; ほど重要ではありません。</target>
        </trans-unit>
        <trans-unit id="1f20d1ba6dddb33dc67d2dabb3c7158dac75c45f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Fix&lt;/code&gt; - for a bug fix.</source>
          <target state="translated">&lt;code&gt;Fix&lt;/code&gt; -バグ修正のため。</target>
        </trans-unit>
        <trans-unit id="4bdb7d0c3bddcc3ec236afb9c892e02843ce6843" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ForInStatement&lt;/code&gt; ※2</source>
          <target state="translated">&lt;code&gt;ForInStatement&lt;/code&gt; ※2</target>
        </trans-unit>
        <trans-unit id="2003b7e6c836384fa3589e162cfdb0ea3ca2a817" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ForOfStatement&lt;/code&gt; ※2</source>
          <target state="translated">&lt;code&gt;ForOfStatement&lt;/code&gt; ※2</target>
        </trans-unit>
        <trans-unit id="0bed78bc251e08205d7912268035e9b8a5e4f7c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ForStatement&lt;/code&gt; (for ever)</source>
          <target state="translated">&lt;code&gt;ForStatement&lt;/code&gt; （永遠に）</target>
        </trans-unit>
        <trans-unit id="de84047fc690ad2b3e9b3edf181b7373b80474b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ForStatement&lt;/code&gt; ※2</source>
          <target state="translated">&lt;code&gt;ForStatement&lt;/code&gt; ※2</target>
        </trans-unit>
        <trans-unit id="a4b1014ae6010b4eba195f19174babc555364140" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FunctionDeclaration&lt;/code&gt; or &lt;code&gt;FunctionExpression&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;FunctionDeclaration&lt;/code&gt; または &lt;code&gt;FunctionExpression&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="563b4f35444910ff816bdb707879783641c9690d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FunctionDeclaration&lt;/code&gt;, &lt;code&gt;FunctionExpression&lt;/code&gt;, or &lt;code&gt;ArrowFunctionExpression&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;FunctionDeclaration&lt;/code&gt; 、 &lt;code&gt;FunctionExpression&lt;/code&gt; 、または &lt;code&gt;ArrowFunctionExpression&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b9570fd3dd3b24ac47628c98d86471261c09cae6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HACK&lt;/code&gt; - indicates that the code is using a shortcut. Information about why the hack is being used should be included. This may also indicate that it would be nice to come up with a better way to solve the problem.</source>
          <target state="translated">&lt;code&gt;HACK&lt;/code&gt; -コードがショートカットを使用していることを示します。ハックが使用されている理由に関する情報を含める必要があります。これはまた、問題を解決するためのより良い方法を考え出すのが良いことを示しているかもしれません。</target>
        </trans-unit>
        <trans-unit id="d147b8861b2e5ed4849dade71de99e716bf72bb2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IfStatement&lt;/code&gt; (chain)</source>
          <target state="translated">&lt;code&gt;IfStatement&lt;/code&gt; （チェーン）</target>
        </trans-unit>
        <trans-unit id="46342bd653b28ba5482ccdcd270bf67d723cdf71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ImportSpecifier&lt;/code&gt;, &lt;code&gt;ImportDefaultSpecifier&lt;/code&gt;, or &lt;code&gt;ImportNamespaceSpecifier&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ImportSpecifier&lt;/code&gt; 、 &lt;code&gt;ImportDefaultSpecifier&lt;/code&gt; 、または &lt;code&gt;ImportNamespaceSpecifier&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aa2d10031014d096101267300c8775345e54ba0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LINEBREAK_TYPE&lt;/code&gt; is one of the following.</source>
          <target state="translated">&lt;code&gt;LINEBREAK_TYPE&lt;/code&gt; は次のいずれかです。</target>
        </trans-unit>
        <trans-unit id="7b7619b1ed4e5d7f26d48e1cec271a195b128f18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LineComment&lt;/code&gt; and &lt;code&gt;BlockComment&lt;/code&gt; events will no longer be emitted during AST traversal</source>
          <target state="translated">&lt;code&gt;LineComment&lt;/code&gt; ASTトラバーサル中にLineCommentおよび &lt;code&gt;BlockComment&lt;/code&gt; イベントが発生しなくなりました</target>
        </trans-unit>
        <trans-unit id="678416ee74557e298571f493b4d6e013c469d5f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Linter&lt;/code&gt; no longer tries to load missing parsers from the filesystem</source>
          <target state="translated">&lt;code&gt;Linter&lt;/code&gt; はファイルシステムから欠落しているパーサーをロードしようとしなくなりました</target>
        </trans-unit>
        <trans-unit id="ab3ee20df415ce656abca7289520a2408e73ef54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NaN !== NaN&lt;/code&gt; or &lt;code&gt;NaN != NaN&lt;/code&gt; evaluate to true</source>
          <target state="translated">&lt;code&gt;NaN !== NaN&lt;/code&gt; または &lt;code&gt;NaN != NaN&lt;/code&gt; はtrueと評価されます</target>
        </trans-unit>
        <trans-unit id="424d5841591ad582db6b414ff017e71026d048e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NaN === NaN&lt;/code&gt; or &lt;code&gt;NaN == NaN&lt;/code&gt; evaluate to false</source>
          <target state="translated">&lt;code&gt;NaN === NaN&lt;/code&gt; または &lt;code&gt;NaN == NaN&lt;/code&gt; はfalseと評価されます</target>
        </trans-unit>
        <trans-unit id="1532d4939e9cd993e9df3183d0c7b9154e0f4869" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;New&lt;/code&gt; - implemented a new feature.</source>
          <target state="translated">&lt;code&gt;New&lt;/code&gt; -新しい機能を実装しました。</target>
        </trans-unit>
        <trans-unit id="bb2dd0f5fd0f945814dd4f5ad9de1efd1500b208" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REVIEW&lt;/code&gt; - indicates that the code needs to be reviewed for potential changes.</source>
          <target state="translated">&lt;code&gt;REVIEW&lt;/code&gt; -潜在的な変更についてコードをレビューする必要があることを示します。</target>
        </trans-unit>
        <trans-unit id="1273f8102f6c00fff74879d6c8ad492fc6a2f534" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Reference#resolved&lt;/code&gt; property is a &lt;code&gt;Variable&lt;/code&gt; object which are referenced.</source>
          <target state="translated">&lt;code&gt;Reference#resolved&lt;/code&gt; プロパティは、参照される &lt;code&gt;Variable&lt;/code&gt; オブジェクトです。</target>
        </trans-unit>
        <trans-unit id="ec75a998cdf854c88bbe24695119c2ea7f80345f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Reference&lt;/code&gt; object is reference's information.</source>
          <target state="translated">&lt;code&gt;Reference&lt;/code&gt; オブジェクトは参照の情報です。</target>
        </trans-unit>
        <trans-unit id="8eb580cf7d9e85e72dea04fb258dbedf0b3d2581" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RuleTester#run&lt;/code&gt; calls the &lt;code&gt;describe&lt;/code&gt; function with two arguments: a string describing the rule, and a callback function. The callback calls the &lt;code&gt;it&lt;/code&gt; function with a string describing the test case, and a test function. The test function will return successfully if the test passes, and throw an error if the test fails. (Note that this is the standard behavior for test suites when using frameworks like &lt;a href=&quot;https://mochajs.org/&quot;&gt;Mocha&lt;/a&gt;; this information is only relevant if you plan to customize &lt;code&gt;RuleTester.it&lt;/code&gt; and &lt;code&gt;RuleTester.describe&lt;/code&gt;.)</source>
          <target state="translated">&lt;code&gt;RuleTester#run&lt;/code&gt; は、ルールを説明する文字列とコールバック関数の2つの引数を使用して、 &lt;code&gt;describe&lt;/code&gt; 関数を呼び出します。コールバックは、テストケースを説明する文字列とテスト関数を使用して &lt;code&gt;it&lt;/code&gt; 関数を呼び出します。テストが成功した場合、テスト関数は正常に戻り、テストが失敗した場合はエラーをスローします。（これは、&lt;a href=&quot;https://mochajs.org/&quot;&gt;Mocha&lt;/a&gt;などのフレームワークを使用する場合のテストスイートの標準的な動作です。この情報は、 &lt;code&gt;RuleTester.it&lt;/code&gt; および &lt;code&gt;RuleTester.describe&lt;/code&gt; をカスタマイズすることを計画している場合にのみ関連します。）</target>
        </trans-unit>
        <trans-unit id="559c0a95ceaaab425733252358e34e8b8bb668d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RuleTester&lt;/code&gt; depends on two functions to run tests: &lt;code&gt;describe&lt;/code&gt; and &lt;code&gt;it&lt;/code&gt;. These functions can come from various places:</source>
          <target state="translated">&lt;code&gt;RuleTester&lt;/code&gt; は、テストを実行する2つの関数に依存しています： &lt;code&gt;describe&lt;/code&gt; と &lt;code&gt;it&lt;/code&gt; です。これらの関数は、さまざまな場所から取得できます。</target>
        </trans-unit>
        <trans-unit id="c82679897ee76ae887577bdad026c28b7c3aac48" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RuleTester&lt;/code&gt; now requires an absolute path on &lt;code&gt;parser&lt;/code&gt; option</source>
          <target state="translated">&lt;code&gt;RuleTester&lt;/code&gt; は &lt;code&gt;parser&lt;/code&gt; オプションで絶対パスを必要とするようになりました</target>
        </trans-unit>
        <trans-unit id="efa80c18a63ac16b0c8879d50ec4bb780e0ee3b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RuleTester&lt;/code&gt; now uses strict equality checks in its assertions</source>
          <target state="translated">&lt;code&gt;RuleTester&lt;/code&gt; はアサーションで厳密な等価チェックを使用するようになりました</target>
        </trans-unit>
        <trans-unit id="181914675bb6f904b4287aabc14139a5af0b6a62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RuleTester&lt;/code&gt; now validates against invalid &lt;code&gt;default&lt;/code&gt; keywords in rule schemas</source>
          <target state="translated">&lt;code&gt;RuleTester&lt;/code&gt; は、ルールスキーマの無効な &lt;code&gt;default&lt;/code&gt; キーワードに対して検証するようになりました</target>
        </trans-unit>
        <trans-unit id="b8d666d4110812ea7cbb56ba6f55f02e9a0b1b5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RuleTester&lt;/code&gt; now validates properties of test cases</source>
          <target state="translated">&lt;code&gt;RuleTester&lt;/code&gt; がテストケースのプロパティを検証するようになりました</target>
        </trans-unit>
        <trans-unit id="f9088d683c4dc0d74a8a14553544e240e9926419" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;STATEMENT_TYPE&lt;/code&gt; is one of the following, or an array of the following.</source>
          <target state="translated">&lt;code&gt;STATEMENT_TYPE&lt;/code&gt; は、次のいずれか、または次の配列です。</target>
        </trans-unit>
        <trans-unit id="5717d8b69cc2a48dac466bc8652ba7ce6527da40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Scope#through&lt;/code&gt; property has references where &lt;code&gt;Reference#resolved&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;. So as a result of this change, the value of &lt;code&gt;Scope#through&lt;/code&gt; property was changed also.</source>
          <target state="translated">&lt;code&gt;Scope#through&lt;/code&gt; プロパティには、 &lt;code&gt;Reference#resolved&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; である参照があります。したがって、この変更の結果として、 &lt;code&gt;Scope#through&lt;/code&gt; プロパティの値も変更されました。</target>
        </trans-unit>
        <trans-unit id="c9385f9c94ed9a913b0a4fca98383788a102b705" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Scope&lt;/code&gt; object has all variables and references in the scope.</source>
          <target state="translated">&lt;code&gt;Scope&lt;/code&gt; オブジェクトには、スコープ内のすべての変数と参照があります。</target>
        </trans-unit>
        <trans-unit id="843004a72590be81f5fbedc287d1a96a7eee6252" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ScopeManager&lt;/code&gt; object has all variable scopes.</source>
          <target state="translated">&lt;code&gt;ScopeManager&lt;/code&gt; オブジェクトには、すべての変数スコープがあります。</target>
        </trans-unit>
        <trans-unit id="e69a4a4c3e6de8dd6e362c6365fffc30b9392140" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SourceCode&lt;/code&gt; constructor got to handle Unicode BOM. If the first argument &lt;code&gt;text&lt;/code&gt; has BOM, &lt;code&gt;SourceCode&lt;/code&gt; constructor sets &lt;code&gt;true&lt;/code&gt; to &lt;code&gt;this.hasBOM&lt;/code&gt; and strips BOM from the text.</source>
          <target state="translated">&lt;code&gt;SourceCode&lt;/code&gt; コンストラクタはUnicode BOMを処理するようになりました。最初の引数 &lt;code&gt;text&lt;/code&gt; にBOMがある場合、 &lt;code&gt;SourceCode&lt;/code&gt; コンストラクターは &lt;code&gt;true&lt;/code&gt; を &lt;code&gt;this.hasBOM&lt;/code&gt; に設定し、テキストからBOM を取り除きます。</target>
        </trans-unit>
        <trans-unit id="c5eb7b1b9df805d6e4388802ff5f2df7719b4a22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SwitchStatement&lt;/code&gt; (has &lt;code&gt;default&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;SwitchStatement&lt;/code&gt; （ &lt;code&gt;default&lt;/code&gt; があります）</target>
        </trans-unit>
        <trans-unit id="4fb9413cf16b7f4d01673bbcde9747e654a18d0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SwitchStatement&lt;/code&gt; ※1</source>
          <target state="translated">&lt;code&gt;SwitchStatement&lt;/code&gt; ※1</target>
        </trans-unit>
        <trans-unit id="366413aff91d50bd157ca1e52155bd32a50bd4ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Symbol&lt;/code&gt; is not intended to be used with the &lt;code&gt;new&lt;/code&gt; operator, but to be called as a function.</source>
          <target state="translated">&lt;code&gt;Symbol&lt;/code&gt; は &lt;code&gt;new&lt;/code&gt; 演算子で使用するためのものではなく、関数として呼び出すためのものです。</target>
        </trans-unit>
        <trans-unit id="a053358f4192c94d5b169d67b2224cd06951760b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TODO&lt;/code&gt; - indicates that the code is not yet complete. Information about the next steps should be included.</source>
          <target state="translated">&lt;code&gt;TODO&lt;/code&gt; -コードがまだ完成していないことを示します。次のステップに関する情報を含める必要があります。</target>
        </trans-unit>
        <trans-unit id="2d5eee4ce7ae08c73f71f9d04fbf14e30b5c434f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TryStatement&lt;/code&gt; (try-catch)</source>
          <target state="translated">&lt;code&gt;TryStatement&lt;/code&gt; （トライキャッチ）</target>
        </trans-unit>
        <trans-unit id="590272d54954ad45bfbb5f86eea9d3d98b6034f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TryStatement&lt;/code&gt; (try-catch-finally)</source>
          <target state="translated">&lt;code&gt;TryStatement&lt;/code&gt; （try-catch-finally）</target>
        </trans-unit>
        <trans-unit id="f4789b7c71d0de3da223e44344b02954423a2ce9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TryStatement&lt;/code&gt; (try-finally)</source>
          <target state="translated">&lt;code&gt;TryStatement&lt;/code&gt; （最終的に試行）</target>
        </trans-unit>
        <trans-unit id="23b86056931b80db86f143cbf305ea7fa47ea645" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Update&lt;/code&gt; - either for a backwards-compatible enhancement or for a rule change that adds reported problems.</source>
          <target state="translated">&lt;code&gt;Update&lt;/code&gt; -下位互換性のある機能拡張、または報告された問題を追加するルール変更のいずれか。</target>
        </trans-unit>
        <trans-unit id="cbd4d7282787fa905ca81d59006db3a46bda096a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Upgrade&lt;/code&gt; - for a dependency upgrade.</source>
          <target state="translated">&lt;code&gt;Upgrade&lt;/code&gt; -依存関係のアップグレード。</target>
        </trans-unit>
        <trans-unit id="c87f010ed4261a32133369bdda8f19fad2503103" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Variable#references&lt;/code&gt; property is an array of &lt;code&gt;Reference&lt;/code&gt; objects which are referencing the variable.</source>
          <target state="translated">&lt;code&gt;Variable#references&lt;/code&gt; プロパティは、変数を参照している &lt;code&gt;Reference&lt;/code&gt; オブジェクトの配列です。</target>
        </trans-unit>
        <trans-unit id="42b57d05114f8ec604eec443ead8de9f68160e23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Variable&lt;/code&gt; object is variable's information.</source>
          <target state="translated">&lt;code&gt;Variable&lt;/code&gt; オブジェクトは変数の情報です。</target>
        </trans-unit>
        <trans-unit id="7f2c2ed61c711f55717ed4af09f3e0d51e82c715" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;XXX&lt;/code&gt; - indicates that the code is problematic and should be fixed as soon as possible.</source>
          <target state="translated">&lt;code&gt;XXX&lt;/code&gt; -コードに問題があり、できるだけ早く修正する必要があることを示します。</target>
        </trans-unit>
        <trans-unit id="74ca5b8389956e6a7a7c8b67bb08c5e681ea5099" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[`prop${a}`]&lt;/code&gt; (ES2015 computed property name)</source>
          <target state="translated">&lt;code&gt;[`prop${a}`]&lt;/code&gt; （ES2015計算されたプロパティ名）</target>
        </trans-unit>
        <trans-unit id="c909b253a91a717a1ffeedc08f899c3fb6481eaf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__proto__&lt;/code&gt; property has been deprecated as of ECMAScript 3.1 and shouldn't be used in the code. Use &lt;code&gt;Object.getPrototypeOf&lt;/code&gt; and &lt;code&gt;Object.setPrototypeOf&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;__proto__&lt;/code&gt; プロパティはECMAScript 3.1以降廃止されており、コードでは使用しないでください。代わりに、 &lt;code&gt;Object.getPrototypeOf&lt;/code&gt; および &lt;code&gt;Object.setPrototypeOf&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="ec745b7c4c1e9bb5c7e6df3f02f092e1232c6424" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a: 1&lt;/code&gt; (ES5)</source>
          <target state="translated">&lt;code&gt;a: 1&lt;/code&gt; （ES5）</target>
        </trans-unit>
        <trans-unit id="8e60c2a29cbe4626b12ede873153021ce156f09c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; (ES2015 shorthand property)</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; （ES2015省略プロパティ）</target>
        </trans-unit>
        <trans-unit id="65fc7c15ceae6defbc0d39fd767b19c4f78177f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;above&lt;/code&gt; (default) enforces line comments only above code, in its own line.</source>
          <target state="translated">&lt;code&gt;above&lt;/code&gt; （デフォルト）は、行のコメントをコードの上の行にのみ適用します。</target>
        </trans-unit>
        <trans-unit id="45a97c70fbdfbb5a99959fa7715c9ff42ddd3312" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;after-used&lt;/code&gt; - unused positional arguments that occur before the last used argument will not be checked, but all named arguments and all positional arguments after the last used argument will be checked.</source>
          <target state="translated">&lt;code&gt;after-used&lt;/code&gt; used-最後に使用された引数の前にある未使用の位置引数はチェックされませんが、すべての名前付き引数と最後に使用された引数の後のすべての位置引数がチェックされます。</target>
        </trans-unit>
        <trans-unit id="b02e69e958b9bf6c31c839d70509a98675d9b410" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;after&lt;/code&gt; enforces spacing between the &lt;code&gt;*&lt;/code&gt; and the argument. If it is &lt;code&gt;true&lt;/code&gt;, a space is required, otherwise spaces are disallowed.</source>
          <target state="translated">&lt;code&gt;after&lt;/code&gt; &lt;code&gt;*&lt;/code&gt; と引数の間にスペースを強制します。もしそうであれば &lt;code&gt;true&lt;/code&gt; 、そうでなければスペースがスペースが許可されない、必要とされます。</target>
        </trans-unit>
        <trans-unit id="5e0ecf0ad11e91b127f4dfbee56a543fc78379da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;after&lt;/code&gt; enforces spacing between the &lt;code&gt;*&lt;/code&gt; and the function name (or the opening parenthesis for anonymous generator functions). If it is &lt;code&gt;true&lt;/code&gt;, a space is required, otherwise spaces are disallowed.</source>
          <target state="translated">&lt;code&gt;after&lt;/code&gt; &lt;code&gt;*&lt;/code&gt; と関数名（または無名ジェネレーター関数の左括弧）の間にスペースを強制します。もしそうであれば &lt;code&gt;true&lt;/code&gt; 、そうでなければスペースがスペースが許可されない、必要とされます。</target>
        </trans-unit>
        <trans-unit id="325dc166f64dbdb87f8a0e1c6fe88f41b80a4b52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;all&lt;/code&gt; - all named arguments must be used.</source>
          <target state="translated">&lt;code&gt;all&lt;/code&gt; -すべての名前付き引数を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="01a79c6346275ce57529aac0a44965650b01bd66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;all&lt;/code&gt; - import all members provided by exported bindings.</source>
          <target state="translated">&lt;code&gt;all&lt;/code&gt; -エクスポートのバインディングが提供するすべてのメンバーをインポートします。</target>
        </trans-unit>
        <trans-unit id="71adf10f56abfb7990c82ddd1115ac797e7b76b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;all&lt;/code&gt; - reports all shadowing before the outer variables/functions are defined.</source>
          <target state="translated">&lt;code&gt;all&lt;/code&gt; -外側の変数/関数が定義される前に、すべてのシャドウイングをレポートします。</target>
        </trans-unit>
        <trans-unit id="5166e24925e7551bee9912d45c4d664ea11dc164" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;all&lt;/code&gt; = import all members provided by exported bindings.</source>
          <target state="translated">&lt;code&gt;all&lt;/code&gt; =エクスポートされたバインディングによって提供されるすべてのメンバーをインポートします。</target>
        </trans-unit>
        <trans-unit id="be3e0f8e19b8303068df8507a606e57587646dea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;all&lt;/code&gt; checks all variables for usage, including those in the global scope. This is the default setting.</source>
          <target state="translated">&lt;code&gt;all&lt;/code&gt; は、グローバルスコープの変数を含め、すべての変数の使用状況をチェックします。これがデフォルトの設定です。</target>
        </trans-unit>
        <trans-unit id="92646be600efda883e32507c5de4c9cd033dbf64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allow&lt;/code&gt; (&lt;code&gt;string[]&lt;/code&gt;) - A list of kind to allow empty functions. List items are some of the following strings. An empty array (&lt;code&gt;[]&lt;/code&gt;) by default.</source>
          <target state="translated">&lt;code&gt;allow&lt;/code&gt; （ &lt;code&gt;string[]&lt;/code&gt; ）-空の関数を許可する種類のリスト。リスト項目は、次の文字列の一部です。デフォルトでは空の配列（ &lt;code&gt;[]&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="887f481aa581b303e8b08382af377d8d1374cd1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allow&lt;/code&gt; (&lt;code&gt;string[]&lt;/code&gt;) list of properties to accept. Accept regex.</source>
          <target state="translated">&lt;code&gt;allow&lt;/code&gt; プロパティのリスト（ &lt;code&gt;string[]&lt;/code&gt; ）を許可します。正規表現を受け入れます。</target>
        </trans-unit>
        <trans-unit id="c89bcbf46075fcbf83383bb44b18f9d60bca9c1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allowAsStatement&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt; allows the void operator to be used as a statement (Default &lt;code&gt;false&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;allowAsStatement&lt;/code&gt; を &lt;code&gt;true&lt;/code&gt; に設定すると、void演算子をステートメントとして使用できます（デフォルトは &lt;code&gt;false&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="6ada1f55fc06b15a074b5419e7db3aca054ea75f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allowElseIf: false&lt;/code&gt; disallows &lt;code&gt;else if&lt;/code&gt; blocks after a return</source>
          <target state="translated">&lt;code&gt;allowElseIf: false&lt;/code&gt; は、戻り後に &lt;code&gt;else if&lt;/code&gt; ブロックを許可しません</target>
        </trans-unit>
        <trans-unit id="33771d812a0d5f14c91cf7e462043e617abde9f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allowElseIf: true&lt;/code&gt; (default) allows &lt;code&gt;else if&lt;/code&gt; blocks after a return</source>
          <target state="translated">&lt;code&gt;allowElseIf: true&lt;/code&gt; （デフォルト）戻り後に &lt;code&gt;else if&lt;/code&gt; ブロックを許可します</target>
        </trans-unit>
        <trans-unit id="b59c0cefc8bf9682333e9472f13406c6f08b2e66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allowEmptyReject: true&lt;/code&gt; (&lt;code&gt;false&lt;/code&gt; by default) allows calls to &lt;code&gt;Promise.reject()&lt;/code&gt; with no arguments.</source>
          <target state="translated">&lt;code&gt;allowEmptyReject: true&lt;/code&gt; （デフォルトでは &lt;code&gt;false&lt;/code&gt; &lt;code&gt;Promise.reject()&lt;/code&gt; は、引数なしのPromise.reject（）の呼び出しを許可します。</target>
        </trans-unit>
        <trans-unit id="50791dd9a4bad4acb1a101b598987c362835a2cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allowIndentationTabs&lt;/code&gt; (default: false): If this is set to true, then the rule will not report tabs used for indentation.</source>
          <target state="translated">&lt;code&gt;allowIndentationTabs&lt;/code&gt; （デフォルト：false）：これがtrueに設定されている場合、ルールはインデントに使用されるタブをレポートしません。</target>
        </trans-unit>
        <trans-unit id="e6853215019e7da4636759dd197a9de3b234f0f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allowInlineConfig&lt;/code&gt; - (optional) set to &lt;code&gt;false&lt;/code&gt; to disable inline comments from changing ESLint rules.</source>
          <target state="translated">&lt;code&gt;allowInlineConfig&lt;/code&gt; -（オプション）インラインコメントがESLintルールを変更できないようにするには、 &lt;code&gt;false&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="a25eac9b58075abae323778dc7112a2a1c335bbd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allowInlineConfig&lt;/code&gt; - Set to &lt;code&gt;false&lt;/code&gt; to disable the use of configuration comments (such as &lt;code&gt;/*eslint-disable*/&lt;/code&gt;). Corresponds to &lt;code&gt;--no-inline-config&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;allowInlineConfig&lt;/code&gt; - &lt;code&gt;false&lt;/code&gt; に設定すると、構成コメント（ &lt;code&gt;/*eslint-disable*/&lt;/code&gt; など）の使用が無効になります。 &lt;code&gt;--no-inline-config&lt;/code&gt; に対応します。</target>
        </trans-unit>
        <trans-unit id="9a5500c0be138278bc212102a6d869867d8c546d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allowParens&lt;/code&gt; is a boolean setting that can be &lt;code&gt;true&lt;/code&gt;(default) or &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;allowParens&lt;/code&gt; はブール設定であり、 &lt;code&gt;true&lt;/code&gt; （デフォルト）または &lt;code&gt;false&lt;/code&gt; に設定できます。</target>
        </trans-unit>
        <trans-unit id="b13741c6c55fe826d097a760e81bdfffcbff0ae4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allowSamePrecedence&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;) - specifies whether to allow mixed operators if they are of equal precedence. Default is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;allowSamePrecedence&lt;/code&gt; （ &lt;code&gt;boolean&lt;/code&gt; ）-優先順位が等しい場合に混合演算子を許可するかどうかを指定します。デフォルトは &lt;code&gt;true&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="8fa2be81f9aec12a964142e72f95d95550d5ba2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allowSeparatedGroups&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;allowSeparatedGroups&lt;/code&gt; （デフォルト： &lt;code&gt;false&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="ec49cc43fbc4ef781a30cd96c7ed29afb9784b55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allowShortCircuit&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt; will allow you to use short circuit evaluations in your expressions (Default: &lt;code&gt;false&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;allowShortCircuit&lt;/code&gt; を &lt;code&gt;true&lt;/code&gt; に設定すると、式で短絡評価を使用できます（デフォルト： &lt;code&gt;false&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="08ff55c2ab1b91cf0d39038be61a1862d04a5a6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allowTaggedTemplates&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt; will enable you to use tagged template literals in your expressions (Default: &lt;code&gt;false&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;allowTaggedTemplates&lt;/code&gt; を &lt;code&gt;true&lt;/code&gt; に設定すると、式でタグ付きテンプレートリテラルを使用できるようになります（デフォルト： &lt;code&gt;false&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="fb3d809d24407bd5b3bda6fa13883d3c08fb46fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allowTernary&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt; will enable you to use ternary operators in your expressions similarly to short circuit evaluations (Default: &lt;code&gt;false&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;allowTernary&lt;/code&gt; を &lt;code&gt;true&lt;/code&gt; に設定すると、短絡評価と同様に式で三項演算子を使用できるようになります（デフォルト： &lt;code&gt;false&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="7ff48ee6ed90facbbefda900a365c7d8a4c90975" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;always&lt;/code&gt; (default) - Always use === or !==.</source>
          <target state="translated">&lt;code&gt;always&lt;/code&gt; （デフォルト）-常に===または！==を使用します。</target>
        </trans-unit>
        <trans-unit id="598c87d464319341df340dc4e0c95e0fc9e11d9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;always&lt;/code&gt; (default) requires a space followed by the &lt;code&gt;(&lt;/code&gt; of arguments.</source>
          <target state="translated">&lt;code&gt;always&lt;/code&gt; （デフォルト）には、スペースの後に引数の &lt;code&gt;(&lt;/code&gt; が続きます。</target>
        </trans-unit>
        <trans-unit id="78df2aa3c10b61ad7e473ceafd731494bcdedfe1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;always&lt;/code&gt; allows for both &lt;code&gt;()&lt;/code&gt; and &lt;code&gt;( )&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;always&lt;/code&gt; &lt;code&gt;()&lt;/code&gt; と &lt;code&gt;( )&lt;/code&gt; 両方を常に許可します</target>
        </trans-unit>
        <trans-unit id="3a25eb6e4b9b7e689ad294b60d87b3f79b948950" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;always&lt;/code&gt; excepting &lt;code&gt;empty&lt;/code&gt; requires &lt;code&gt;()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;always&lt;/code&gt; 除いて &lt;code&gt;empty&lt;/code&gt; 必要です &lt;code&gt;()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="51d1b344ca0104991aeeba970be80706f0c4fd12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;always&lt;/code&gt;: Disallow all assignments.</source>
          <target state="translated">&lt;code&gt;always&lt;/code&gt; ：すべての割り当てを禁止します。</target>
        </trans-unit>
        <trans-unit id="cb41d6c92016ff0783c24fa369be577d83948f82" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;amd&lt;/code&gt; - defines &lt;code&gt;require()&lt;/code&gt; and &lt;code&gt;define()&lt;/code&gt; as global variables as per the &lt;a href=&quot;https://github.com/amdjs/amdjs-api/wiki/AMD&quot;&gt;amd&lt;/a&gt; spec.</source>
          <target state="translated">&lt;code&gt;amd&lt;/code&gt; - &lt;code&gt;require()&lt;/code&gt; および &lt;code&gt;define()&lt;/code&gt; を&lt;a href=&quot;https://github.com/amdjs/amdjs-api/wiki/AMD&quot;&gt;amd&lt;/a&gt;仕様に従ってグローバル変数として定義します。</target>
        </trans-unit>
        <trans-unit id="2024f0690b96d90c6c6a7c741dca55ec3b501a5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;anonymous&lt;/code&gt; is for anonymous function expressions (e.g. &lt;code&gt;function () {}&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;anonymous&lt;/code&gt; は、無名関数式（たとえば、 &lt;code&gt;function () {}&lt;/code&gt; ）用です。</target>
        </trans-unit>
        <trans-unit id="766b6c7c4beca1eef4d7424e6e0cf0b3673445c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;anonymous&lt;/code&gt; provides overrides for anonymous functions</source>
          <target state="translated">&lt;code&gt;anonymous&lt;/code&gt; は、無名関数のオーバーライドを提供します</target>
        </trans-unit>
        <trans-unit id="17112eaec4eeddedee22c30e2573c01bebdf6481" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;applescript&lt;/code&gt; - AppleScript global variables.</source>
          <target state="translated">&lt;code&gt;applescript&lt;/code&gt; -AppleScriptグローバル変数。</target>
        </trans-unit>
        <trans-unit id="31fe24790b5c6539d88213c1a91d6a60671abc74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arguments&lt;/code&gt; (default: 1) enforces indentation level for arguments in a call expression. This can either be a number indicating indentation level, or the string &lt;code&gt;&quot;first&quot;&lt;/code&gt; indicating that all arguments of the expression must be aligned with the first argument. This can also be set to &lt;code&gt;&quot;off&quot;&lt;/code&gt; to disable checking for CallExpression arguments.</source>
          <target state="translated">&lt;code&gt;arguments&lt;/code&gt; （デフォルト：1）は、呼び出し式の引数にインデントレベルを適用します。これは、インデントレベルを示す数値、または式のすべての引数を最初の引数に揃える必要があることを示す文字列 &lt;code&gt;&quot;first&quot;&lt;/code&gt; いずれかです。これを &lt;code&gt;&quot;off&quot;&lt;/code&gt; に設定して、CallExpression引数のチェックを無効にすることもできます。</target>
        </trans-unit>
        <trans-unit id="30a042f6f4f58e93f7f12e4ffea49a907b5e1dae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arguments&lt;/code&gt; (off by default) enforces indentation level for arguments in a call expression. This can either be a number indicating indentation level, or the string &lt;code&gt;&quot;first&quot;&lt;/code&gt; indicating that all arguments of the expression must be aligned with the first argument.</source>
          <target state="translated">&lt;code&gt;arguments&lt;/code&gt; （デフォルトではオフ）は、呼び出し式の引数にインデントレベルを適用します。これは、インデントレベルを示す数値、または式のすべての引数を最初の引数に揃える必要があることを示す文字列 &lt;code&gt;&quot;first&quot;&lt;/code&gt; いずれかです。</target>
        </trans-unit>
        <trans-unit id="6263353909e3e6a63b67f52e172d2590924a2f93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arguments&lt;/code&gt; does not have methods of &lt;code&gt;Array.prototype&lt;/code&gt;, so it's a bit of an inconvenience.</source>
          <target state="translated">&lt;code&gt;arguments&lt;/code&gt; は &lt;code&gt;Array.prototype&lt;/code&gt; のメソッドがないため、少し不便です。</target>
        </trans-unit>
        <trans-unit id="ea6a3db8aaac512eb11a09ff309d2a9a0211e25e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arrays&lt;/code&gt; is for array literals and array patterns of destructuring. (e.g. &lt;code&gt;let [a,] = [1,];&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;arrays&lt;/code&gt; は、構造化の配列リテラルと配列パターン用です。（例えば &lt;code&gt;let [a,] = [1,];&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="e7ebbe3ba7b93c6482aa918e57ff8ea76128903c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arraysInArrays&lt;/code&gt; sets the spacing between the square brackets of array literals that are the first or last element in an array.</source>
          <target state="translated">&lt;code&gt;arraysInArrays&lt;/code&gt; は、配列の最初または最後の要素である配列リテラルの角括弧間の間隔を設定します。</target>
        </trans-unit>
        <trans-unit id="74fb50228a6eb3248a63064f22662f4e51834a12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arraysInObjects&lt;/code&gt; sets the spacing between the square bracket and the curly brace of an array literal that is the last element in an object.</source>
          <target state="translated">&lt;code&gt;arraysInObjects&lt;/code&gt; は、オブジェクトの最後の要素である配列リテラルの角括弧と中括弧の間の間隔を設定します。</target>
        </trans-unit>
        <trans-unit id="c89b32598f8578bedfb8439df9417c2d4a4fa741" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arrowFunctions&lt;/code&gt; - enable &lt;a href=&quot;https://leanpub.com/understandinges6/read#leanpub-auto-arrow-functions&quot;&gt;arrow functions&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;arrowFunctions&lt;/code&gt; -&lt;a href=&quot;https://leanpub.com/understandinges6/read#leanpub-auto-arrow-functions&quot;&gt;矢印機能を&lt;/a&gt;有効にする</target>
        </trans-unit>
        <trans-unit id="a51814f6f6fe17409915746c2edb3ff364f4922b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ast&lt;/code&gt; - the &lt;code&gt;Program&lt;/code&gt; node of the AST for the code being linted.</source>
          <target state="translated">&lt;code&gt;ast&lt;/code&gt; - lintedされるコードのASTの &lt;code&gt;Program&lt;/code&gt; ノード。</target>
        </trans-unit>
        <trans-unit id="af994f3fe6b6ad925cf6fd388aad7f6011240781" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ast&lt;/code&gt; should contain the AST.</source>
          <target state="translated">&lt;code&gt;ast&lt;/code&gt; にはASTが含まれている必要があります。</target>
        </trans-unit>
        <trans-unit id="a2eb75f3103708a39e6fafc339a2491da10c2c63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;async function&lt;/code&gt; on MDN</source>
          <target state="translated">&lt;code&gt;async function&lt;/code&gt; MDNの非同期機能</target>
        </trans-unit>
        <trans-unit id="21eb2a7dfaadf8fb46a3826e85e66d2b86685b36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;asyncArrow&lt;/code&gt; is for async arrow function expressions (e.g. &lt;code&gt;async () =&amp;gt; {}&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;asyncArrow&lt;/code&gt; は、非同期矢印関数式用です（例： &lt;code&gt;async () =&amp;gt; {}&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="3f8839645a247d8790d3b1c01716b5e45bb78a82" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;atomtest&lt;/code&gt; - Atom test helper globals.</source>
          <target state="translated">&lt;code&gt;atomtest&lt;/code&gt; -Atomテストヘルパーグローバル。</target>
        </trans-unit>
        <trans-unit id="621e151c791227ef6db2d81e77f319ffacf126eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await vs return vs return await&lt;/code&gt; by Jake Archibald</source>
          <target state="translated">&lt;code&gt;await vs return vs return await&lt;/code&gt; ジェイク・アーチボルドによって</target>
        </trans-unit>
        <trans-unit id="79efe6be9a7c6b6b7b088f5849011ad5fad062e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;baseConfig&lt;/code&gt; - Can optionally be set to a config object that has the same schema as &lt;code&gt;.eslintrc.*&lt;/code&gt;. This will used as a default config, and will be merged with any configuration defined in &lt;code&gt;.eslintrc.*&lt;/code&gt; files, with the &lt;code&gt;.eslintrc.*&lt;/code&gt; files having precedence.</source>
          <target state="translated">&lt;code&gt;baseConfig&lt;/code&gt; -オプションで、 &lt;code&gt;.eslintrc.*&lt;/code&gt; と同じスキーマを持つ構成オブジェクトに設定できます。これはデフォルトの構成として使用され、 &lt;code&gt;.eslintrc.*&lt;/code&gt; ファイルで定義された構成とマージされます &lt;code&gt;.eslintrc.*&lt;/code&gt; ファイルが優先されます。</target>
        </trans-unit>
        <trans-unit id="e068393950954a253a38e45ec25222d5fcd5a9c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;before&lt;/code&gt; enforces spacing between the &lt;code&gt;*&lt;/code&gt; and the &lt;code&gt;function&lt;/code&gt; keyword. If it is &lt;code&gt;true&lt;/code&gt;, a space is required, otherwise spaces are disallowed.</source>
          <target state="translated">&lt;code&gt;before&lt;/code&gt; は、 &lt;code&gt;*&lt;/code&gt; と &lt;code&gt;function&lt;/code&gt; キーワードの間にスペースを適用します。もしそうであれば &lt;code&gt;true&lt;/code&gt; 、そうでなければスペースがスペースが許可されない、必要とされます。</target>
        </trans-unit>
        <trans-unit id="bcda1e2136e84625f89f730128d337d014e53d4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;before&lt;/code&gt; enforces spacing between the &lt;code&gt;yield&lt;/code&gt; and the &lt;code&gt;*&lt;/code&gt;. If &lt;code&gt;true&lt;/code&gt;, a space is required, otherwise spaces are disallowed.</source>
          <target state="translated">&lt;code&gt;before&lt;/code&gt; は、 &lt;code&gt;yield&lt;/code&gt; と &lt;code&gt;*&lt;/code&gt; の間隔を強制します。場合は &lt;code&gt;true&lt;/code&gt; 、スペースが必要とされ、それ以外のスペースは許可されません。</target>
        </trans-unit>
        <trans-unit id="8c837452f38e34d6f4c91cd9c17c8d5af356df0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;beside&lt;/code&gt; enforces line comments only at the end of code lines.</source>
          <target state="translated">&lt;code&gt;beside&lt;/code&gt; は、コード行の最後にのみ行コメントを適用します。</target>
        </trans-unit>
        <trans-unit id="6b4a364d34bcb5bcb30bf7ad75ec87a59086c839" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bin/eslint.js&lt;/code&gt; - this is the file that actually gets executed with the command line utility. It's a dumb wrapper that does nothing more than bootstrap ESLint, passing the command line arguments to &lt;code&gt;cli&lt;/code&gt;. This is intentionally small so as not to require heavy testing.</source>
          <target state="translated">&lt;code&gt;bin/eslint.js&lt;/code&gt; -これは、コマンドラインユーティリティで実際に実行されるファイルです。これは、ESLintをブートストラップするだけで、コマンドライン引数を &lt;code&gt;cli&lt;/code&gt; に渡す、単純なラッパーです。これは、厳しいテストを必要としないように意図的に小さくなっています。</target>
        </trans-unit>
        <trans-unit id="11c1fab7efdc65830c13ad2aabd22e7f6c34c2cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bin&lt;/code&gt; - executable files that are available when ESLint is installed</source>
          <target state="translated">&lt;code&gt;bin&lt;/code&gt; -ESLintのインストール時に使用できる実行可能ファイル</target>
        </trans-unit>
        <trans-unit id="273ca89605a4784de4fd0dbf9af6a074541d7f0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;binaryLiterals&lt;/code&gt; - enable &lt;a href=&quot;https://leanpub.com/understandinges6/read#leanpub-auto-octal-and-binary-literals&quot;&gt;binary literals&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;binaryLiterals&lt;/code&gt; -&lt;a href=&quot;https://leanpub.com/understandinges6/read#leanpub-auto-octal-and-binary-literals&quot;&gt;バイナリリテラルを&lt;/a&gt;有効にする</target>
        </trans-unit>
        <trans-unit id="f76f7530dc3b6bf1a55132d067584dc750873b3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;blockBindings&lt;/code&gt; - enable &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt; (aka &lt;a href=&quot;https://leanpub.com/understandinges6/read#leanpub-auto-block-bindings&quot;&gt;block bindings&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;blockBindings&lt;/code&gt; - &lt;code&gt;let&lt;/code&gt; と &lt;code&gt;const&lt;/code&gt; （別名&lt;a href=&quot;https://leanpub.com/understandinges6/read#leanpub-auto-block-bindings&quot;&gt;block bindings&lt;/a&gt;）を有効にする</target>
        </trans-unit>
        <trans-unit id="0a7aa301a0da548f306afd70b7ae7184fb7cce1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;body&lt;/code&gt; (default: 1) enforces indentation level for the body of a function declaration.</source>
          <target state="translated">&lt;code&gt;body&lt;/code&gt; （デフォルト：1）は、関数宣言の本体にインデントレベルを適用します。</target>
        </trans-unit>
        <trans-unit id="21efda23fb388a62609dc708296d864b82490e31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;body&lt;/code&gt; (default: 1) enforces indentation level for the body of a function expression.</source>
          <target state="translated">&lt;code&gt;body&lt;/code&gt; （デフォルト：1）は、関数式の本体にインデントレベルを適用します。</target>
        </trans-unit>
        <trans-unit id="059029bb27d20d06b433b7a289741328a857e5bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bower_components&lt;/code&gt; in the current working directory (&lt;code&gt;/bower_components/*&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;bower_components&lt;/code&gt; 現在の作業ディレクトリに（ &lt;code&gt;/bower_components/*&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="57d6138fee622411605c83a3fd057b845d5effc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;browser&lt;/code&gt; - browser global variables.</source>
          <target state="translated">&lt;code&gt;browser&lt;/code&gt; -ブラウザのグローバル変数。</target>
        </trans-unit>
        <trans-unit id="0906a53f326cfe1c2bf79823607ef140b6759ed6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cache&lt;/code&gt; - Operate only on changed files (default: &lt;code&gt;false&lt;/code&gt;). Corresponds to &lt;code&gt;--cache&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cache&lt;/code&gt; -変更されたファイル（デフォルトでのみ動作 &lt;code&gt;false&lt;/code&gt; ）。 &lt;code&gt;--cache&lt;/code&gt; に対応します。</target>
        </trans-unit>
        <trans-unit id="63a0c2e85b40b8c148b6a1482b0823e6730edc56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cacheFile&lt;/code&gt; - Name of the file where the cache will be stored (default: &lt;code&gt;.eslintcache&lt;/code&gt;). Corresponds to &lt;code&gt;--cache-file&lt;/code&gt;. Deprecated: use &lt;code&gt;cacheLocation&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;cacheFile&lt;/code&gt; -キャッシュが保存されるファイルの名前（デフォルト： &lt;code&gt;.eslintcache&lt;/code&gt; ）。 &lt;code&gt;--cache-file&lt;/code&gt; に対応します。非推奨：代わりに &lt;code&gt;cacheLocation&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="8b9434a28d153b5a53818adf40ff4c4bf33f30be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cacheLocation&lt;/code&gt; - Name of the file or directory where the cache will be stored (default: &lt;code&gt;.eslintcache&lt;/code&gt;). Corresponds to &lt;code&gt;--cache-location&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cacheLocation&lt;/code&gt; -キャッシュが保存されるファイルまたはディレクトリの名前（デフォルト： &lt;code&gt;.eslintcache&lt;/code&gt; ）。 &lt;code&gt;--cache-location&lt;/code&gt; に対応します。</target>
        </trans-unit>
        <trans-unit id="95d25900f16cf5153fe212fb01d06e5010fd11f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;caseSensitive&lt;/code&gt; - if &lt;code&gt;true&lt;/code&gt;, enforce properties to be in case-sensitive order. Default is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;caseSensitive&lt;/code&gt; - &lt;code&gt;true&lt;/code&gt; の場合、プロパティを大文字と小文字を区別する順序に強制します。デフォルトは &lt;code&gt;true&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="621962ff0d01a57604ea221bb4cb6943f6ebf2e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;category&lt;/code&gt; (string) specifies the heading under which the rule is listed in the &lt;a href=&quot;../rules/index&quot;&gt;rules index&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;category&lt;/code&gt; （文字列）は、&lt;a href=&quot;../rules/index&quot;&gt;ルールがルールインデックスに&lt;/a&gt;リストされる見出しを指定します</target>
        </trans-unit>
        <trans-unit id="cdf07be80b79e584e10f3a834573de4fe89cec02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;childCodePaths&lt;/code&gt; (&lt;code&gt;CodePath[]&lt;/code&gt;) - Code paths of functions this code path contains.</source>
          <target state="translated">&lt;code&gt;childCodePaths&lt;/code&gt; （ &lt;code&gt;CodePath[]&lt;/code&gt; ）-このコードパスに含まれる関数のコードパス。</target>
        </trans-unit>
        <trans-unit id="8419a3bd4c6036e1b18915d5ac02042b66b1378b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;classes&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;) - The flag which shows whether or not this rule checks class declarations of upper scopes. If this is &lt;code&gt;true&lt;/code&gt;, this rule warns every reference to a class before the class declaration. Otherwise, ignores those references if the declaration is in upper function scopes. Class declarations are not hoisted, so it might be danger. Default is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;classes&lt;/code&gt; （ &lt;code&gt;boolean&lt;/code&gt; ）-このルールが上位スコープのクラス宣言をチェックするかどうかを示すフラグ。これが &lt;code&gt;true&lt;/code&gt; の場合、このルールはクラス宣言の前にクラスへのすべての参照を警告します。それ以外の場合、宣言が上位の関数スコープ内にある場合、それらの参照を無視します。クラス宣言は巻き上げられないため、危険な場合があります。デフォルトは &lt;code&gt;true&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c652d0389a9bb98c1832f44daa9795a5ba4211ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;classes&lt;/code&gt; - enable classes</source>
          <target state="translated">&lt;code&gt;classes&lt;/code&gt; - クラスを有効にする</target>
        </trans-unit>
        <trans-unit id="24185a25e0af45a05a5cefd8001e7216b9af9707" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cli&lt;/code&gt; - the &lt;code&gt;cli&lt;/code&gt; object has been deprecated in favor of &lt;code&gt;CLIEngine&lt;/code&gt;. As of v1.0.0, &lt;code&gt;cli&lt;/code&gt; is no longer exported and should not be used by external tools.</source>
          <target state="translated">&lt;code&gt;cli&lt;/code&gt; - &lt;code&gt;cli&lt;/code&gt; オブジェクトは &lt;code&gt;CLIEngine&lt;/code&gt; の代わりに廃止されました。v1.0.0以降、 &lt;code&gt;cli&lt;/code&gt; はエクスポートされなくなったため、外部ツールで使用しないでください。</target>
        </trans-unit>
        <trans-unit id="846a299cad0fb2f559328922199219656f8331c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;code&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;code&lt;/code&gt; （ &lt;code&gt;string&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="8e79bd02ac5adca715f6e65f3089ddc3b7f3751f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;code&lt;/code&gt; (string, required): The source code that the rule should be run on</source>
          <target state="translated">&lt;code&gt;code&lt;/code&gt; （文字列、必須）：ルールを実行するソースコード</target>
        </trans-unit>
        <trans-unit id="cf63f6965856584ed50c8c2091a54315b6afe1d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;code&lt;/code&gt; - the source code to lint (a string or instance of &lt;code&gt;SourceCode&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;code&lt;/code&gt; -lintするソースコード（文字列または &lt;code&gt;SourceCode&lt;/code&gt; のインスタンス）。</target>
        </trans-unit>
        <trans-unit id="4a1cca4b583f1caa84cd9f68ccac870aee6695f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;column&lt;/code&gt; (&lt;code&gt;number&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;column&lt;/code&gt; （ &lt;code&gt;number&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="ed54bae718b37d3401d1ae86e3b9316f1fb0fd3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;column&lt;/code&gt; (number): The 1-based column number of the reported location</source>
          <target state="translated">&lt;code&gt;column&lt;/code&gt; （number）：報告された場所の1から始まる列番号</target>
        </trans-unit>
        <trans-unit id="9efdd20510a8c803e2157da4ca80288e492df213" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;column&lt;/code&gt; - the 0-based column number at which the problem occurred.</source>
          <target state="translated">&lt;code&gt;column&lt;/code&gt; -問題が発生した0から始まる列番号。</target>
        </trans-unit>
        <trans-unit id="26d9273275a9ed0279857401c54dfbd47b1621f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;column&lt;/code&gt; - the column on which the error occurred.</source>
          <target state="translated">&lt;code&gt;column&lt;/code&gt; -エラーが発生した列。</target>
        </trans-unit>
        <trans-unit id="935984f89043b1e553194eade7b121cfcb029c41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;comments&lt;/code&gt; (&lt;code&gt;Token[]&lt;/code&gt;) is the array of comment tokens. This must be sorted by &lt;code&gt;Token#range[0]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;comments&lt;/code&gt; （ &lt;code&gt;Token[]&lt;/code&gt; ）はコメントトークンの配列です。これは &lt;code&gt;Token#range[0]&lt;/code&gt; でソートする必要があります。</target>
        </trans-unit>
        <trans-unit id="eba811ad722e5fa1b783ea6dc3b938102ba7b62b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;commentsExistBetween(nodeOrToken1, nodeOrToken2)&lt;/code&gt; - returns &lt;code&gt;true&lt;/code&gt; if comments exist between two nodes.</source>
          <target state="translated">&lt;code&gt;commentsExistBetween(nodeOrToken1, nodeOrToken2)&lt;/code&gt; つのノード間にコメントが存在する場合は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="84588a19a74159f7b45d4b6e5092c024e47249d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;commonjs&lt;/code&gt; - CommonJS global variables and CommonJS scoping (use this for browser-only code that uses Browserify/WebPack).</source>
          <target state="translated">&lt;code&gt;commonjs&lt;/code&gt; -CommonJSグローバル変数とCommonJSスコープ（これは、Browserify / WebPackを使用するブラウザーのみのコードに使用します）。</target>
        </trans-unit>
        <trans-unit id="397332c2fcc67fcddc61a504047c2b563f309695" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;complexity&lt;/code&gt; will only report a complexity of 1</source>
          <target state="translated">&lt;code&gt;complexity&lt;/code&gt; 度は1の複雑度のみを報告します</target>
        </trans-unit>
        <trans-unit id="29e45e7dc279eb21ddc31266aaaf1c0e39c7afd8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;computed&lt;/code&gt;: declaration of a required module whose type could not be determined (either because it is computed or because require was called without an argument)</source>
          <target state="translated">&lt;code&gt;computed&lt;/code&gt; ：タイプが判別できなかった必須モジュールの宣言（計算されたため、またはrequireが引数なしで呼び出されたため）</target>
        </trans-unit>
        <trans-unit id="c793421750e51777fddb92ddbde361e0dddd8ebf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;conf&lt;/code&gt; - default configuration information</source>
          <target state="translated">&lt;code&gt;conf&lt;/code&gt; -デフォルトの構成情報</target>
        </trans-unit>
        <trans-unit id="6bd0f9ab8440317fdc3a5b9172530ddccfcfaaf8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config&lt;/code&gt; - a configuration object that has been processed and normalized by CLIEngine using eslintrc files and/or other configuration arguments.</source>
          <target state="translated">&lt;code&gt;config&lt;/code&gt; -eslintrcファイルや他の構成引数を使用してCLIEngineによって処理および正規化された構成オブジェクト。</target>
        </trans-unit>
        <trans-unit id="5a52cc4517fce426a017ccf322590f36d0af2be7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;configFile&lt;/code&gt; - The configuration file to use (default: null). If &lt;code&gt;useEslintrc&lt;/code&gt; is true or not specified, this configuration will be merged with any configuration defined in &lt;code&gt;.eslintrc.*&lt;/code&gt; files, with options in this configuration having precedence. Corresponds to &lt;code&gt;-c&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;configFile&lt;/code&gt; -使用する構成ファイル（デフォルト：null）。 &lt;code&gt;useEslintrc&lt;/code&gt; がtrueまたは指定されていない場合、この構成は &lt;code&gt;.eslintrc.*&lt;/code&gt; ファイルで定義されている構成とマージされ、この構成のオプションが優先されます。 &lt;code&gt;-c&lt;/code&gt; に対応します。</target>
        </trans-unit>
        <trans-unit id="d246c3a68dfe2a3a383a445e8aa196df7da6b35d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;const&lt;/code&gt; declaration tells readers, &quot;this variable is never reassigned,&quot; reducing cognitive load and improving maintainability.</source>
          <target state="translated">&lt;code&gt;const&lt;/code&gt; 宣言は読者に「この変数は再割り当てされない」と伝え、認知負荷を減らし、保守性を改善します。</target>
        </trans-unit>
        <trans-unit id="83eb5ab71d4522f647eeae773323d090f717f50b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;const&lt;/code&gt;, &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;class&lt;/code&gt; declarations</source>
          <target state="translated">&lt;code&gt;const&lt;/code&gt; 、 &lt;code&gt;let&lt;/code&gt; および &lt;code&gt;class&lt;/code&gt; 宣言</target>
        </trans-unit>
        <trans-unit id="ffade5742d1828bfe7891cb7b2a625902a7fc0a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;core&lt;/code&gt;: declaration of a required &lt;a href=&quot;https://nodejs.org/api/modules.html#modules_core_modules&quot;&gt;core module&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;core&lt;/code&gt; ：必要な&lt;a href=&quot;https://nodejs.org/api/modules.html#modules_core_modules&quot;&gt;コアモジュールの&lt;/a&gt;宣言</target>
        </trans-unit>
        <trans-unit id="d6f80c7086ef6f0a412c4a8e86ab49e5ad6b10d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;count&lt;/code&gt; is a positive integer, the maximum number of returning tokens.</source>
          <target state="translated">&lt;code&gt;count&lt;/code&gt; は正の整数で、返されるトークンの最大数です。</target>
        </trans-unit>
        <trans-unit id="78456bd008aadee89630d960a8738a6e93feae80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;countOptions&lt;/code&gt; is an object which has 3 properties; &lt;code&gt;count&lt;/code&gt;, &lt;code&gt;includeComments&lt;/code&gt;, and &lt;code&gt;filter&lt;/code&gt;. Default is &lt;code&gt;{count: 0, includeComments: false, filter: null}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;countOptions&lt;/code&gt; は3つのプロパティを持つオブジェクトです。 &lt;code&gt;count&lt;/code&gt; 、 &lt;code&gt;includeComments&lt;/code&gt; 、および &lt;code&gt;filter&lt;/code&gt; 。デフォルトは &lt;code&gt;{count: 0, includeComments: false, filter: null}&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="35dfeaddc31cb432404e9eb49270a18cc7624275" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;create&lt;/code&gt; (function) returns an object with methods that ESLint calls to &quot;visit&quot; nodes while traversing the abstract syntax tree (AST as defined by &lt;a href=&quot;https://github.com/estree/estree&quot;&gt;ESTree&lt;/a&gt;) of JavaScript code:</source>
          <target state="translated">&lt;code&gt;create&lt;/code&gt; （関数）は、JavaScriptコードの抽象構文ツリー（&lt;a href=&quot;https://github.com/estree/estree&quot;&gt;ESTreeで&lt;/a&gt;定義されているAST ）をトラバースするときにESLintが「visit」ノードに呼び出すメソッドを持つオブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="f39f56de464b1c0dcf02f26ff672db426727f641" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;currentSegments&lt;/code&gt; (&lt;code&gt;CodePathSegment[]&lt;/code&gt;) - Segments of the current position.</source>
          <target state="translated">&lt;code&gt;currentSegments&lt;/code&gt; （ &lt;code&gt;CodePathSegment[]&lt;/code&gt; ）-現在の位置のセグメント。</target>
        </trans-unit>
        <trans-unit id="9438f40401bcf8f094d2d683c845ca2ff94ad0c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cwd&lt;/code&gt; - Path to a directory that should be considered as the current working directory.</source>
          <target state="translated">&lt;code&gt;cwd&lt;/code&gt; -現在の作業ディレクトリと見なされるディレクトリへのパス。</target>
        </trans-unit>
        <trans-unit id="14bd7f4c3a63c5924ccbc1c370dde05fa46272d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cwd&lt;/code&gt; - Path to a directory that should be considered as the current working directory. It is accessible to rules by calling &lt;code&gt;context.getCwd()&lt;/code&gt; (see &lt;a href=&quot;working-with-rules#The-Context-Object&quot;&gt;The Context Object&lt;/a&gt;). If &lt;code&gt;cwd&lt;/code&gt; is &lt;code&gt;undefined&lt;/code&gt;, it will be normalized to &lt;code&gt;process.cwd()&lt;/code&gt; if the global &lt;code&gt;process&lt;/code&gt; object is defined (for example, in the Node.js runtime) , or &lt;code&gt;undefined&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;cwd&lt;/code&gt; -現在の作業ディレクトリと見なされるディレクトリへのパス。 &lt;code&gt;context.getCwd()&lt;/code&gt; を呼び出すことにより、ルールからアクセスできます（&lt;a href=&quot;working-with-rules#The-Context-Object&quot;&gt;コンテキストオブジェクトを&lt;/a&gt;参照）。場合 &lt;code&gt;cwd&lt;/code&gt; され &lt;code&gt;undefined&lt;/code&gt; 、それが正規化される &lt;code&gt;process.cwd()&lt;/code&gt; グローバル場合 &lt;code&gt;process&lt;/code&gt; オブジェクトが定義されている（例えば、Node.jsのランタイムで）、又は &lt;code&gt;undefined&lt;/code&gt; さもなければ。</target>
        </trans-unit>
        <trans-unit id="39d9b7ac4283008e45346a8bfba833e8c80d84dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;data&lt;/code&gt; (object): Placeholder data which can be used in combination with &lt;code&gt;messageId&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;data&lt;/code&gt; （object）： &lt;code&gt;messageId&lt;/code&gt; と組み合わせて使用​​できるプレースホルダーデータ</target>
        </trans-unit>
        <trans-unit id="e53c7d0e96d4325a9b104afd4511f2954b1b4767" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;data&lt;/code&gt; - (optional) &lt;a href=&quot;#using-message-placeholders&quot;&gt;placeholder&lt;/a&gt; data for &lt;code&gt;message&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;data&lt;/code&gt; - （オプション）&lt;a href=&quot;#using-message-placeholders&quot;&gt;プレースホルダ&lt;/a&gt;に関するデータ &lt;code&gt;message&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="25ee1c07c548a5bde35167ab5cd61e022739d197" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;data&lt;/code&gt; - (optional) placeholder data for &lt;code&gt;message&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;data&lt;/code&gt; - （オプション）プレースホルダ・データ &lt;code&gt;message&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9f57e9a60d1514b74c42123437e1afc71e3260be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;defaultParams&lt;/code&gt; - enable &lt;a href=&quot;https://leanpub.com/understandinges6/read/#leanpub-auto-default-parameters&quot;&gt;default function parameters&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;defaultParams&lt;/code&gt; -&lt;a href=&quot;https://leanpub.com/understandinges6/read/#leanpub-auto-default-parameters&quot;&gt;デフォルトの関数パラメーターを&lt;/a&gt;有効にする</target>
        </trans-unit>
        <trans-unit id="b79a4e62cfab8ea151e1f259d865588ed3db0689" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;deprecated&lt;/code&gt; (boolean) indicates whether the rule has been deprecated. You may omit the &lt;code&gt;deprecated&lt;/code&gt; property if the rule has not been deprecated.</source>
          <target state="translated">&lt;code&gt;deprecated&lt;/code&gt; （boolean）は、ルールが廃止されたかどうかを示します。ルールが廃止されていない場合は、 &lt;code&gt;deprecated&lt;/code&gt; プロパティを省略できます。</target>
        </trans-unit>
        <trans-unit id="258d9d29e02a392090c672081e83991bd0f8fd2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;desc&lt;/code&gt; (string): The suggestion &lt;code&gt;desc&lt;/code&gt; value</source>
          <target state="translated">&lt;code&gt;desc&lt;/code&gt; （文字列）：提案 &lt;code&gt;desc&lt;/code&gt; 値</target>
        </trans-unit>
        <trans-unit id="27307bf34b3f65fcf8fc4189216315df9a9657e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;description&lt;/code&gt; (string) provides the short description of the rule in the &lt;a href=&quot;../rules/index&quot;&gt;rules index&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;description&lt;/code&gt; （文字列）は、&lt;a href=&quot;../rules/index&quot;&gt;ルールインデックス&lt;/a&gt;内のルールの短い説明を提供します</target>
        </trans-unit>
        <trans-unit id="6ae608fefc60dfc046ab4aa84218127ea0610462" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;destructuring&lt;/code&gt; - enable &lt;a href=&quot;https://leanpub.com/understandinges6/read#leanpub-auto-destructuring-assignment&quot;&gt;destructuring&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;destructuring&lt;/code&gt; -有効&lt;a href=&quot;https://leanpub.com/understandinges6/read#leanpub-auto-destructuring-assignment&quot;&gt;な破壊を&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d5f103959f279a4c16c03807fee01b65f99de90f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;disableFixes&lt;/code&gt; - (optional) when set to &lt;code&gt;true&lt;/code&gt;, the linter doesn't make either the &lt;code&gt;fix&lt;/code&gt; or &lt;code&gt;suggestions&lt;/code&gt; property of the lint result.</source>
          <target state="translated">&lt;code&gt;disableFixes&lt;/code&gt; -（オプション） &lt;code&gt;true&lt;/code&gt; に設定すると、リンターはリント結果の &lt;code&gt;fix&lt;/code&gt; または &lt;code&gt;suggestions&lt;/code&gt; プロパティを作成しません。</target>
        </trans-unit>
        <trans-unit id="903d1f308e0e0174cfe0ada08de32af4b3fb5ccc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;disallowArithmeticOperators&lt;/code&gt;: Disallow arithmetic operations on optional chaining expressions (Default &lt;code&gt;false&lt;/code&gt;). If this is &lt;code&gt;true&lt;/code&gt;, this rule warns arithmetic operations on optional chaining expressions, which possibly result in &lt;code&gt;NaN&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;disallowArithmeticOperators&lt;/code&gt; ：オプションの連鎖式での算術演算を禁止します（デフォルトは &lt;code&gt;false&lt;/code&gt; ）。これが &lt;code&gt;true&lt;/code&gt; の場合、このルールは、オプションの連鎖式に対する算術演算を警告します。これにより、 &lt;code&gt;NaN&lt;/code&gt; が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="53923022e4c1a0aeeb0bd6c959a6d248eb611813" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;disallowRedundantWrapping&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt; additionally checks for unnecessarily wrapped regex literals (Default &lt;code&gt;false&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;disallowRedundantWrapping&lt;/code&gt; を &lt;code&gt;true&lt;/code&gt; に設定すると、不必要にラップされた正規表現リテラルが追加でチェックされます（デフォルトは &lt;code&gt;false&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="d800be2dea10a8ed29bb6cb4b8132e00ec8d2056" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;docs&lt;/code&gt; (object) is required for core rules of ESLint:</source>
          <target state="translated">&lt;code&gt;docs&lt;/code&gt; ESLintのコアルールにはdocs（オブジェクト）が必要です：</target>
        </trans-unit>
        <trans-unit id="a7ce49c2eae5a80b00e4801906fd2c9121e313d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;docs&lt;/code&gt; - documentation for the project</source>
          <target state="translated">&lt;code&gt;docs&lt;/code&gt; -プロジェクトのドキュメント</target>
        </trans-unit>
        <trans-unit id="f4b200f15e2e685c72f57e1acd592dbc467e7459" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ecmaFeatures&lt;/code&gt; - an object indicating which additional language features you'd like to use:</source>
          <target state="translated">&lt;code&gt;ecmaFeatures&lt;/code&gt; -使用する追加の言語機能を示すオブジェクト：</target>
        </trans-unit>
        <trans-unit id="b4d28940f9fd8fbc55b500fd054e09af48fc3bd5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ecmaVersion&lt;/code&gt; - set to 3, 5 (default), 6, 7, 8, 9, 10 or 11 to specify the version of ECMAScript syntax you want to use. You can also set to 2015 (same as 6), 2016 (same as 7), 2017 (same as 8), 2018 (same as 9), 2019 (same as 10) or 2020 (same as 11) to use the year-based naming.</source>
          <target state="translated">&lt;code&gt;ecmaVersion&lt;/code&gt; - 3、5（デフォルト）、6、7、8、9、10、または11に設定して、使用するECMAScript構文のバージョンを指定します。2015（6と同じ）、2016（7と同じ）、2017（8と同じ）、2018（9と同じ）、2019（10と同じ）または2020（11と同じ）に設定して年を使用することもできますベースの命名。</target>
        </trans-unit>
        <trans-unit id="a724a6d478277aa8ed633da8df31c29b083dd483" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ecmaVersion&lt;/code&gt; - set to 3, 5 (default), 6, 7, 8, 9, 10, 11, or 12 to specify the version of ECMAScript syntax you want to use. You can also set to 2015 (same as 6), 2016 (same as 7), 2017 (same as 8), 2018 (same as 9), 2019 (same as 10), 2020 (same as 11), or 2021 (same as 12) to use the year-based naming.</source>
          <target state="translated">&lt;code&gt;ecmaVersion&lt;/code&gt; - 3、5（デフォルト）、6、7、8、9、10、11、または12に設定して、使用するECMAScript構文のバージョンを指定します。2015（6と同じ）、2016（7と同じ）、2017（8と同じ）、2018（9と同じ）、2019（10と同じ）、2020（11と同じ）、または2021（2021と同じ）に設定することもできます。 12）と同じで、年ベースの命名を使用します。</target>
        </trans-unit>
        <trans-unit id="c98d24665984b35bab519f718edfbd754129ee58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;embertest&lt;/code&gt; - Ember test helper globals.</source>
          <target state="translated">&lt;code&gt;embertest&lt;/code&gt; -Emberテストヘルパーグローバル。</target>
        </trans-unit>
        <trans-unit id="db9bfad6d29a4b77fd2851311e589a850056a783" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;end&lt;/code&gt; - An object of the end location.</source>
          <target state="translated">&lt;code&gt;end&lt;/code&gt; -終了場所のオブジェクト。</target>
        </trans-unit>
        <trans-unit id="c203dee54d5f878f7a807e9b920b13dcba0c2044" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;endColumn&lt;/code&gt; (&lt;code&gt;number | undefined&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;endColumn&lt;/code&gt; （ &lt;code&gt;number | undefined&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="b372b4438df8f0434d17dc4e5ab284f6e0081f94" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;endColumn&lt;/code&gt; (number): The 1-based column number of the end of the reported location</source>
          <target state="translated">&lt;code&gt;endColumn&lt;/code&gt; （数値）：報告された場所の終わりの1から始まる列番号</target>
        </trans-unit>
        <trans-unit id="4ae3d45b0e0a5f826a26b75f54d000ffe26e106c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;endColumn&lt;/code&gt; - the end column of the range on which the error occurred (this property is omitted if it's not range).</source>
          <target state="translated">&lt;code&gt;endColumn&lt;/code&gt; -エラーが発生した範囲の終了列（このプロパティは、範囲でない場合は省略されます）。</target>
        </trans-unit>
        <trans-unit id="486d3cd1e9f34f7dc45fdef987e74d6c17e639d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;endLine&lt;/code&gt; (&lt;code&gt;number | undefined&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;endLine&lt;/code&gt; （ &lt;code&gt;number | undefined&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="39de5d9e7589b0a85ceba1d206abb1fa240357f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;endLine&lt;/code&gt; (number): The 1-based line number of the end of the reported location</source>
          <target state="translated">&lt;code&gt;endLine&lt;/code&gt; （数値）：報告された場所の終わりの1から始まる行番号</target>
        </trans-unit>
        <trans-unit id="0667d457c2ed4f84de5655fc80569bdb0b73c257" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;endLine&lt;/code&gt; - the end line of the range on which the error occurred (this property is omitted if it's not range).</source>
          <target state="translated">&lt;code&gt;endLine&lt;/code&gt; -エラーが発生した範囲の終了行（範囲でない場合、このプロパティは省略されます）。</target>
        </trans-unit>
        <trans-unit id="9f9128e60ab70ccfeabf7ab87476e0c5b9b676f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enforceForClassMembers&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt; additionally applies this rule to class getters/setters (Default &lt;code&gt;false&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;enforceForClassMembers&lt;/code&gt; を &lt;code&gt;true&lt;/code&gt; に設定すると、このルールがクラスのゲッター/セッターにも適用されます（デフォルトは &lt;code&gt;false&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="3fc5b1212a3af5131db9a323cc284c7425973ffb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enforceForClassMembers&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt; additionally applies this rule to class getters/setters (Default &lt;code&gt;true&lt;/code&gt;). Set &lt;code&gt;enforceForClassMembers&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; if you want this rule to ignore class declarations and class expressions.</source>
          <target state="translated">&lt;code&gt;enforceForClassMembers&lt;/code&gt; を &lt;code&gt;true&lt;/code&gt; に設定すると、このルールがクラスゲッター/セッターに追加で適用されます（デフォルトは &lt;code&gt;true&lt;/code&gt; ）。このルールでクラス宣言とクラス式を無視する場合は、 &lt;code&gt;enforceForClassMembers&lt;/code&gt; を &lt;code&gt;false&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="4464d311ed03aa4254fb0baf9534c011d02a9718" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enforceForClassMembers&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt; additionally applies this rule to class members (Default &lt;code&gt;false&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;enforceForClassMembers&lt;/code&gt; を &lt;code&gt;true&lt;/code&gt; に設定すると、このルールがクラスメンバーに適用されます（デフォルトは &lt;code&gt;false&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="1a050aa8d6bbda9e65e75ba86112e82ef418c30d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;envs&lt;/code&gt; - An array of environments to load (default: empty array). Corresponds to &lt;code&gt;--env&lt;/code&gt;. Note: This differs from &lt;code&gt;.eslintrc.*&lt;/code&gt; / &lt;code&gt;baseConfig&lt;/code&gt;, where instead the option is called &lt;code&gt;env&lt;/code&gt; and is an object.</source>
          <target state="translated">&lt;code&gt;envs&lt;/code&gt; -ロードする環境の配列（デフォルト：空の配列）。 &lt;code&gt;--env&lt;/code&gt; に対応します。注：これは &lt;code&gt;.eslintrc.*&lt;/code&gt; / &lt;code&gt;baseConfig&lt;/code&gt; とは異なります。代わりに、オプションは &lt;code&gt;env&lt;/code&gt; と呼ばれ、オブジェクトです。</target>
        </trans-unit>
        <trans-unit id="4016645e30cf93883a5b6d2eadaf206083b3010e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;errorCount&lt;/code&gt; (&lt;code&gt;number&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;errorCount&lt;/code&gt; （ &lt;code&gt;number&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="b8cfe8c778718f912a5567f52d31e076cc3237c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;errorCount&lt;/code&gt; and &lt;code&gt;warningCount&lt;/code&gt; - The exact number of errors and warnings respectively on the given file.</source>
          <target state="translated">&lt;code&gt;errorCount&lt;/code&gt; および &lt;code&gt;warningCount&lt;/code&gt; -指定されたファイルのエラーおよび警告の正確な数。</target>
        </trans-unit>
        <trans-unit id="081c55a8326e7af2bb8596611766873bb38f78a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;errorOnUnmatchedPattern&lt;/code&gt; - Set to &lt;code&gt;false&lt;/code&gt; to prevent errors when pattern is unmatched. Corresponds to &lt;code&gt;--no-error-on-unmatched-pattern&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;errorOnUnmatchedPattern&lt;/code&gt; -パターンが一致しない場合のエラーを防ぐために &lt;code&gt;false&lt;/code&gt; に設定します。 &lt;code&gt;--no-error-on-unmatched-pattern&lt;/code&gt; に対応します。</target>
        </trans-unit>
        <trans-unit id="beb650ffb622014fc70d36ae01bb16cd6dbc5f3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;errors&lt;/code&gt; (number or array, required): Asserts some properties of the errors that the rule is expected to produce when run on this code. If this is a number, asserts the number of errors produced. Otherwise, this should be a list of objects, each containing information about a single reported error. The following properties can be used for an error (all are optional):</source>
          <target state="translated">&lt;code&gt;errors&lt;/code&gt; （数値または配列、必須）：このコードでの実行時にルールが生成すると予想されるエラーのいくつかのプロパティをアサートします。これが数値の場合、生成されたエラーの数をアサートします。それ以外の場合、これはオブジェクトのリストであり、各オブジェクトには報告された単一のエラーに関する情報が含まれています。エラーには次のプロパティを使用できます（すべてオプションです）。</target>
        </trans-unit>
        <trans-unit id="883ce58f6d21e49e77a1b4628dd7748b45519cc8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;es2017&lt;/code&gt; - adds all ECMAScript 2017 globals and automatically sets the &lt;code&gt;ecmaVersion&lt;/code&gt; parser option to 8.</source>
          <target state="translated">&lt;code&gt;es2017&lt;/code&gt; -すべてのECMAScript 2017グローバルを追加し、 &lt;code&gt;ecmaVersion&lt;/code&gt; パーサーオプションを自動的に8に設定します。</target>
        </trans-unit>
        <trans-unit id="4b724238c8a32350fd45a4166b95560d403ca970" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;es2020&lt;/code&gt; - adds all ECMAScript 2020 globals and automatically sets the &lt;code&gt;ecmaVersion&lt;/code&gt; parser option to 11.</source>
          <target state="translated">&lt;code&gt;es2020&lt;/code&gt; -すべてのECMAScript 2020グローバルを追加し、 &lt;code&gt;ecmaVersion&lt;/code&gt; パーサーオプションを自動的に11に設定します。</target>
        </trans-unit>
        <trans-unit id="ee6b5b66b5beefcffd45290a8ab65e5fcc4478ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;es2021&lt;/code&gt; - adds all ECMAScript 2021 globals and automatically sets the &lt;code&gt;ecmaVersion&lt;/code&gt; parser option to 12.</source>
          <target state="translated">&lt;code&gt;es2021&lt;/code&gt; -すべてのECMAScript2021グローバルを追加し、 &lt;code&gt;ecmaVersion&lt;/code&gt; パーサーオプションを自動的に12に設定します。</target>
        </trans-unit>
        <trans-unit id="d83cf3f931ea0cbc1a2f6e97f163f0056139121d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;es6&lt;/code&gt; - enable all ECMAScript 6 features except for modules (this automatically sets the &lt;code&gt;ecmaVersion&lt;/code&gt; parser option to 6).</source>
          <target state="translated">&lt;code&gt;es6&lt;/code&gt; -モジュールを除くすべてのECMAScript 6機能を有効にします（これにより、 &lt;code&gt;ecmaVersion&lt;/code&gt; パーサーオプションが自動的に6に設定されます）。</target>
        </trans-unit>
        <trans-unit id="dd1fc2c8213ccfac29f62e75ccd906a561bb02ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eslint-disable-line&lt;/code&gt; and &lt;code&gt;eslint-disable-next-line&lt;/code&gt; directive comments are only allowed to span a single line. For example, the following directive comment is invalid:</source>
          <target state="translated">&lt;code&gt;eslint-disable-line&lt;/code&gt; および &lt;code&gt;eslint-disable-next-line&lt;/code&gt; ディレクティブのコメントは、1行にのみ許可されます。たとえば、次のディレクティブコメントは無効です。</target>
        </trans-unit>
        <trans-unit id="e08dfb662d26f4a72c598d6d85aa308f3e1827c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eslint-plugin-foo&lt;/code&gt; &amp;rarr; &lt;code&gt;foo/a-rule&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;eslint-plugin-foo&lt;/code&gt; &amp;rarr; &lt;code&gt;foo/a-rule&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="77e6a3f81cab5a33dccbf7f81b0dc6e6e20b69e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eslint.RuleTester&lt;/code&gt; is a utility to write tests for ESLint rules. It is used internally for the bundled rules that come with ESLint, and it can also be used by plugins.</source>
          <target state="translated">&lt;code&gt;eslint.RuleTester&lt;/code&gt; は、ESLintルールのテストを作成するためのユーティリティです。ESLintに付属するバンドルされたルールの内部で使用され、プラグインでも使用できます。</target>
        </trans-unit>
        <trans-unit id="aa18a717e488706ff71140b71b848e2e7caf4140" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eslint:recommended&lt;/code&gt; changes</source>
          <target state="translated">&lt;code&gt;eslint:recommended&lt;/code&gt; 変更</target>
        </trans-unit>
        <trans-unit id="4621e5c79a0ef8e85dc6f0b929c6ff5e05da7dce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eslint:recommended&lt;/code&gt; has been updated</source>
          <target state="translated">&lt;code&gt;eslint:recommended&lt;/code&gt; が更新されました</target>
        </trans-unit>
        <trans-unit id="88ff259c686942634c921274df2328938de35484" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;espree&lt;/code&gt;, the default parser used by ESLint, will now raise an error in the following cases:</source>
          <target state="translated">&lt;code&gt;espree&lt;/code&gt; 使用するデフォルトのパーサーであるespreeは、次の場合にエラーを発生させます。</target>
        </trans-unit>
        <trans-unit id="e5a0d902edd024102689ea2565a27bfb41165eb2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;except-parens&lt;/code&gt; (default): Disallow assignments unless they are enclosed in parentheses.</source>
          <target state="translated">&lt;code&gt;except-parens&lt;/code&gt; （デフォルト）：括弧で囲まれていない限り、割り当てを禁止します。</target>
        </trans-unit>
        <trans-unit id="95cf2018f9a494c3ca44861842f44ff650b02d82" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exports&lt;/code&gt; is for export declarations of ES Modules. (e.g. &lt;code&gt;export {a,};&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;exports&lt;/code&gt; はESモジュールのエクスポート宣言用です。（例： &lt;code&gt;export {a,};&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="a8912e6eb51c2ab898353fe0ee43da0cda44b205" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extensions&lt;/code&gt; - An array of filename extensions that should be checked for code. The default is an array containing just &lt;code&gt;&quot;.js&quot;&lt;/code&gt;. Corresponds to &lt;code&gt;--ext&lt;/code&gt;. It is only used in conjunction with directories, not with filenames, glob patterns or when using &lt;code&gt;executeOnText()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;extensions&lt;/code&gt; -コードをチェックする必要があるファイル名拡張子の配列。デフォルトは &lt;code&gt;&quot;.js&quot;&lt;/code&gt; のみを含む配列です。 &lt;code&gt;--ext&lt;/code&gt; に対応します。ファイル名、グロブパターン、または &lt;code&gt;executeOnText()&lt;/code&gt; を使用する場合ではなく、ディレクトリと組み合わせてのみ使用されます。</target>
        </trans-unit>
        <trans-unit id="730b7dc960d86e49c408473da0c292433736df0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;f&lt;/code&gt; is an arrow function which takes &lt;code&gt;a&lt;/code&gt; as an argument and returns the result of &lt;code&gt;b ? c: d&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;f&lt;/code&gt; は、 &lt;code&gt;a&lt;/code&gt; を引数として取り、 &lt;code&gt;b ? c: d&lt;/code&gt; の結果を返す矢印関数です。c：d。</target>
        </trans-unit>
        <trans-unit id="4e2ea831e659bf693dbdded2fc70cf4367680520" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt; warns even if the expression is wrapped in parenthesis</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; 式が括弧で囲まれている場合でもfalseが警告する</target>
        </trans-unit>
        <trans-unit id="abc2f2e8f9030b90831ab41647d786bd24ddae96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt;: disallows spaces between the colon and the value in object literals.</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; ：コロンとオブジェクトリテラルの値の間にスペースを許可しません。</target>
        </trans-unit>
        <trans-unit id="abb7311411ce4eb1643cb54427f7f9ad45664619" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt;: disallows spaces between the key and the colon in object literals.</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; ：オブジェクトリテラルのキーとコロンの間にスペースを許可しません。</target>
        </trans-unit>
        <trans-unit id="269af8b9208d3cbe8d7bb50ba0eda10d6d1900be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt;&lt;strong&gt;if and only if&lt;/strong&gt; the function or method has a &lt;code&gt;return&lt;/code&gt; statement or returns a value e.g. &lt;code&gt;async&lt;/code&gt; function (this option value does apply to constructors)</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; 関数またはメソッドに &lt;code&gt;return&lt;/code&gt; ステートメントがあるか、値を返す&lt;strong&gt;場合&lt;/strong&gt;はfalse。たとえば、 &lt;code&gt;async&lt;/code&gt; 関数（このオプション値はコンストラクターに適用される）</target>
        </trans-unit>
        <trans-unit id="3ce4fcf460b182f8725adff6376c9023bc996492" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fatal&lt;/code&gt; - usually omitted, but will be set to true if there's a parsing error (not related to a rule).</source>
          <target state="translated">&lt;code&gt;fatal&lt;/code&gt; -通常は省略されますが、解析エラー（ルールに関連しない）がある場合はtrueに設定されます。</target>
        </trans-unit>
        <trans-unit id="a0a01d922ac37bdb3c8c27af560b8bc76acc5a01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;file&lt;/code&gt;: declaration of a required &lt;a href=&quot;https://nodejs.org/api/modules.html#modules_file_modules&quot;&gt;file module&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;file&lt;/code&gt; ：必要な&lt;a href=&quot;https://nodejs.org/api/modules.html#modules_file_modules&quot;&gt;ファイルモジュールの&lt;/a&gt;宣言</target>
        </trans-unit>
        <trans-unit id="8d79ccc83be68bdef3c646ea83e9215d3a713192" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filePath&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;filePath&lt;/code&gt; （ &lt;code&gt;string&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="039cc16ffe2a0fb0813be993046ff718ef4e6881" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filePath&lt;/code&gt; - Path to the given file.</source>
          <target state="translated">&lt;code&gt;filePath&lt;/code&gt; -指定されたファイルへのパス。</target>
        </trans-unit>
        <trans-unit id="8fcfcd81d88e1778593db720051e413c50538ad5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filename&lt;/code&gt; (string, optional): The filename for the given case (useful for rules that make assertions about filenames).</source>
          <target state="translated">&lt;code&gt;filename&lt;/code&gt; （文字列、オプション）：指定されたケースのファイル名（ファイル名に関するアサーションを作成するルールに役立ちます）。</target>
        </trans-unit>
        <trans-unit id="23446e53c834ada65bcd8a61ff8e2d40fff2f5b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filename&lt;/code&gt; - (optional) the filename to associate with the source code.</source>
          <target state="translated">&lt;code&gt;filename&lt;/code&gt; -（オプション）ソースコードに関連付けるファイル名。</target>
        </trans-unit>
        <trans-unit id="aa56fd38f13a2ffc6d10ff06ceded21ea0bc1927" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filter&lt;/code&gt; is a function which gets a token as the first argument, if the function returns &lt;code&gt;false&lt;/code&gt; then the result excludes the token.</source>
          <target state="translated">&lt;code&gt;filter&lt;/code&gt; は、最初の引数としてトークンを取得する関数です。関数が &lt;code&gt;false&lt;/code&gt; を返す場合、結果はトークンを除外します。</target>
        </trans-unit>
        <trans-unit id="3b07bc35bcba401a2c80c0adda5cbd876c48970a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filterCodeBlock&lt;/code&gt; - (optional) A function that decides which code blocks the linter should adopt. The function receives two arguments. The first argument is the virtual filename of a code block. The second argument is the text of the code block. If the function returned &lt;code&gt;true&lt;/code&gt; then the linter adopts the code block. If the function was omitted, the linter adopts only &lt;code&gt;*.js&lt;/code&gt; code blocks. If you provided a &lt;code&gt;filterCodeBlock&lt;/code&gt; function, it overrides this default behavior, so the linter doesn't adopt &lt;code&gt;*.js&lt;/code&gt; code blocks automatically.</source>
          <target state="translated">&lt;code&gt;filterCodeBlock&lt;/code&gt; -（オプション）リンターが採用するコードブロックを決定する関数。関数は2つの引数を受け取ります。最初の引数は、コードブロックの仮想ファイル名です。2番目の引数は、コードブロックのテキストです。関数が &lt;code&gt;true&lt;/code&gt; を返した場合、リンターはコードブロックを採用します。関数が省略された場合、リンターは &lt;code&gt;*.js&lt;/code&gt; コードブロックのみを採用します。あなたが提供されている場合 &lt;code&gt;filterCodeBlock&lt;/code&gt; の機能をリンターを採用していないので、それは、このデフォルトの動作をオーバーライドする &lt;code&gt;*.js&lt;/code&gt; ファイルを自動的にコードブロックを。</target>
        </trans-unit>
        <trans-unit id="1880655afc44fdf8d9d36b008343ffa636a3b9ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;finalSegments&lt;/code&gt; (&lt;code&gt;CodePathSegment[]&lt;/code&gt;) - The final segments which includes both returned and thrown.</source>
          <target state="translated">&lt;code&gt;finalSegments&lt;/code&gt; （ &lt;code&gt;CodePathSegment[]&lt;/code&gt; ）-返されたものとスローされたものの両方を含む最終セグメント。</target>
        </trans-unit>
        <trans-unit id="ca580af709b20500d1f8ba0dc50ed7ef21bfa2bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fix&lt;/code&gt; (&lt;code&gt;EditInfo | undefined&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;fix&lt;/code&gt; （ &lt;code&gt;EditInfo | undefined&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="8a201b02a9569e50e1618a508d7063b4d8c198ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fix&lt;/code&gt; - (optional) a function that applies a &lt;a href=&quot;#applying-fixes&quot;&gt;fix&lt;/a&gt; to resolve the problem.</source>
          <target state="translated">&lt;code&gt;fix&lt;/code&gt; -（オプション）問題を解決するために&lt;a href=&quot;#applying-fixes&quot;&gt;修正&lt;/a&gt;を適用する関数。</target>
        </trans-unit>
        <trans-unit id="dfa331ac5de9a6c1b8c773e6197cd0ffafd19c11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fix&lt;/code&gt; - (optional) a function that applies a fix to resolve the problem.</source>
          <target state="translated">&lt;code&gt;fix&lt;/code&gt; -（オプション）問題を解決するために修正を適用する関数。</target>
        </trans-unit>
        <trans-unit id="b1ae59deeecdad0e97f6454e08652c429f69c5e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fix&lt;/code&gt; - A boolean or a function (default: &lt;code&gt;false&lt;/code&gt;). If a function, it will be passed each linting message and should return a boolean indicating whether the fix should be included with the output report (errors and warnings will not be listed if fixed). Files on disk are never changed regardless of the value of &lt;code&gt;fix&lt;/code&gt;. To persist changes to disk, call &lt;a href=&quot;#cliengineoutputfixes&quot;&gt;&lt;code&gt;outputFixes()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;fix&lt;/code&gt; -ブール値または関数（デフォルト： &lt;code&gt;false&lt;/code&gt; ）。関数の場合、各リンティングメッセージが渡され、修正を出力レポートに含めるかどうかを示すブール値を返す必要があります（修正された場合、エラーと警告は表示されません）。 &lt;code&gt;fix&lt;/code&gt; の値に関係なく、ディスク上のファイルは決して変更されません。ディスクへの変更を永続化するには、&lt;a href=&quot;#cliengineoutputfixes&quot;&gt; &lt;code&gt;outputFixes()&lt;/code&gt; を&lt;/a&gt;呼び出します。</target>
        </trans-unit>
        <trans-unit id="540787ea235a52bd4ac4d959ee3d0ef9c3997d9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fix&lt;/code&gt; - an object describing the fix for the problem (this property is omitted if no fix is available).</source>
          <target state="translated">&lt;code&gt;fix&lt;/code&gt; -問題の修正を説明するオブジェクト（修正が利用できない場合、このプロパティは省略されます）。</target>
        </trans-unit>
        <trans-unit id="4b27a8856240fdd36a5ae78c7b3d1d74d7458bf0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fixTypes&lt;/code&gt; - An array of rule types for which fixes should be applied (default: &lt;code&gt;null&lt;/code&gt;). This array acts like a filter, only allowing rules of the given types to apply fixes. Possible array values are &lt;code&gt;&quot;problem&quot;&lt;/code&gt;, &lt;code&gt;&quot;suggestion&quot;&lt;/code&gt;, and &lt;code&gt;&quot;layout&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fixTypes&lt;/code&gt; -修正を適用する必要があるルールタイプの配列（デフォルト： &lt;code&gt;null&lt;/code&gt; ）。この配列はフィルターのように機能し、特定のタイプのルールのみが修正を適用できるようにします。可能な配列値は &lt;code&gt;&quot;problem&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;suggestion&quot;&lt;/code&gt; 、および &lt;code&gt;&quot;layout&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="a4a5ec91a4364795fa79639680e3856979818293" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fixable&lt;/code&gt; (string) is either &lt;code&gt;&quot;code&quot;&lt;/code&gt; or &lt;code&gt;&quot;whitespace&quot;&lt;/code&gt; if the &lt;code&gt;--fix&lt;/code&gt; option on the &lt;a href=&quot;../user-guide/command-line-interface#fix&quot;&gt;command line&lt;/a&gt; automatically fixes problems reported by the rule</source>
          <target state="translated">&lt;code&gt;fixable&lt;/code&gt; （文字列）のいずれかである &lt;code&gt;&quot;code&quot;&lt;/code&gt; または &lt;code&gt;&quot;whitespace&quot;&lt;/code&gt; 場合 &lt;code&gt;--fix&lt;/code&gt; 上のオプション&lt;a href=&quot;../user-guide/command-line-interface#fix&quot;&gt;のコマンドラインは&lt;/a&gt;自動的に修正の問題は、ルールによって報告されました</target>
        </trans-unit>
        <trans-unit id="cf3fec711d6182785e3c4432fe1df887d1f84921" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fixableErrorCount&lt;/code&gt; (&lt;code&gt;number&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;fixableErrorCount&lt;/code&gt; （ &lt;code&gt;number&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="008f9e56978819455945639e0c17f60713d0e6a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fixableWarningCount&lt;/code&gt; (&lt;code&gt;number&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;fixableWarningCount&lt;/code&gt; （ &lt;code&gt;number&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="c7539710a585efc6b09e81483e7e7e8302c8b511" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fixed&lt;/code&gt; - True, if the code was fixed.</source>
          <target state="translated">&lt;code&gt;fixed&lt;/code&gt; -コードが修正された場合はTrue。</target>
        </trans-unit>
        <trans-unit id="383dbd9db6548de34f390835d2dcb5e09b77e06a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;for&lt;/code&gt; statements are more complex. First, the analysis advances to &lt;code&gt;ForStatement.update&lt;/code&gt;. The &lt;code&gt;update&lt;/code&gt; segment is hovered at first.</source>
          <target state="translated">&lt;code&gt;for&lt;/code&gt; ステートメントはより複雑です。まず、分析は &lt;code&gt;ForStatement.update&lt;/code&gt; に進みます。 &lt;code&gt;update&lt;/code&gt; セグメントが最初に推移しています。</target>
        </trans-unit>
        <trans-unit id="c43400394313697d04174df5193d0e1b68df173c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;forOf&lt;/code&gt; - enable &lt;a href=&quot;https://leanpub.com/understandinges6/read#leanpub-auto-iterables-and-for-of&quot;&gt;&lt;code&gt;for-of&lt;/code&gt; loops&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;forOf&lt;/code&gt; - &lt;a href=&quot;https://leanpub.com/understandinges6/read#leanpub-auto-iterables-and-for-of&quot;&gt; &lt;code&gt;for-of&lt;/code&gt; &lt;/a&gt;ループを有効にする</target>
        </trans-unit>
        <trans-unit id="58e41db46c7f487cc69cb75a5bff8ec76ce9241d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;format&lt;/code&gt; (&lt;code&gt;(results: LintResult[]) =&amp;gt; string&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;format&lt;/code&gt; （ &lt;code&gt;(results: LintResult[]) =&amp;gt; string&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="7d55e79626e753718a2401f000db9fcf99d29d71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;formatters&lt;/code&gt; - all source files defining formatters</source>
          <target state="translated">&lt;code&gt;formatters&lt;/code&gt; - フォーマッタを定義するすべてのソースファイル</target>
        </trans-unit>
        <trans-unit id="52ae1eb743190dac5c860f4e04495b8b330bc003" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;formatters&lt;/code&gt; - tests for the formatters</source>
          <target state="translated">&lt;code&gt;formatters&lt;/code&gt; - フォーマッタのテスト</target>
        </trans-unit>
        <trans-unit id="bb83d97a296b7554af458f168c33e956dc8e1858" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;function&lt;/code&gt; declarations in the global.</source>
          <target state="translated">&lt;code&gt;function&lt;/code&gt; グローバルでの関数宣言。</target>
        </trans-unit>
        <trans-unit id="968d9a2b8aebb7070dbf411b41259f3753bcf17d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;functions&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;) - The flag which shows whether or not this rule checks function declarations. If this is &lt;code&gt;true&lt;/code&gt;, this rule warns every reference to a function before the function declaration. Otherwise, ignores those references. Function declarations are hoisted, so it's safe. Default is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;functions&lt;/code&gt; （ &lt;code&gt;boolean&lt;/code&gt; ）-このルールが関数宣言をチェックするかどうかを示すフラグ。これが &lt;code&gt;true&lt;/code&gt; の場合、このルールは関数宣言の前に関数へのすべての参照を警告します。それ以外の場合、それらの参照は無視されます。関数宣言は巻き上げられるので安全です。デフォルトは &lt;code&gt;true&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="12dcc4ac426d3c40a79e9cb7ceb4281d7248858a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;functions&lt;/code&gt; (by default) - reports shadowing before the outer functions are defined.</source>
          <target state="translated">&lt;code&gt;functions&lt;/code&gt; （デフォルト）-外部関数が定義される前にシャドウイングを報告します。</target>
        </trans-unit>
        <trans-unit id="ec7f355b9c1caf8b3cc6a651f8fd9cdc639b7727" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;functions&lt;/code&gt; is for function declarations and function calls. (e.g. &lt;code&gt;(function(a,){ })(b,);&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;functions&lt;/code&gt; は、関数宣言と関数呼び出し用です。（例 &lt;code&gt;(function(a,){ })(b,);&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="e2f21fd81f0bb73feda8a7e7b4cee5ec2c03cee2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;functions&lt;/code&gt; should only be enabled when linting ECMAScript 2017 or higher.</source>
          <target state="translated">&lt;code&gt;functions&lt;/code&gt; は、ECMAScript 2017以降をリントする場合にのみ有効にする必要があります。</target>
        </trans-unit>
        <trans-unit id="f72464e4f85ab09eab1ba0434fc6125864cd5608" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;generators&lt;/code&gt; - enable &lt;a href=&quot;https://leanpub.com/understandinges6/read#leanpub-auto-generators&quot;&gt;generators&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;generators&lt;/code&gt; -有効&lt;a href=&quot;https://leanpub.com/understandinges6/read#leanpub-auto-generators&quot;&gt;発電機を&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d8f011eb4f6d3e340bf1e901809cbfc36667cc25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getAllComments()&lt;/code&gt; - returns an array of all comments in the source.</source>
          <target state="translated">&lt;code&gt;getAllComments()&lt;/code&gt; -ソース内のすべてのコメントの配列を返します。</target>
        </trans-unit>
        <trans-unit id="6c01abb449706c6cba8665ce747ff1941c91f984" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getAllComments()&lt;/code&gt; - returns an array of all comments in the source. Use &lt;code&gt;sourceCode.getAllComments()&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;getAllComments()&lt;/code&gt; -ソース内のすべてのコメントの配列を返します。代わりに &lt;code&gt;sourceCode.getAllComments()&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="07423f2a009264ee211487cf670d1f6d3f555169" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getAncestors()&lt;/code&gt; - returns an array of ancestor nodes based on the current traversal.</source>
          <target state="translated">&lt;code&gt;getAncestors()&lt;/code&gt; -現在のトラバーサルに基づいて祖先ノードの配列を返します。</target>
        </trans-unit>
        <trans-unit id="93fb71e17a2ffba13ddb17e2389345a694da0607" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getAncestors()&lt;/code&gt; - returns an array of the ancestors of the currently-traversed node, starting at the root of the AST and continuing through the direct parent of the current node. This array does not include the currently-traversed node itself.</source>
          <target state="translated">&lt;code&gt;getAncestors()&lt;/code&gt; -ASTのルートから始まり、現在のノードの直接の親まで続く、現在通過しているノードの祖先の配列を返します。この配列には、現在通過しているノード自体は含まれていません。</target>
        </trans-unit>
        <trans-unit id="ab53718a27d60d117178842735e46c3a6a96e648" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getComments()&lt;/code&gt; - replaced by &lt;code&gt;getCommentsBefore()&lt;/code&gt;, &lt;code&gt;getCommentsAfter()&lt;/code&gt;, and &lt;code&gt;getCommentsInside()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;getComments()&lt;/code&gt; - &lt;code&gt;getCommentsBefore()&lt;/code&gt; 、 &lt;code&gt;getCommentsAfter()&lt;/code&gt; 、および &lt;code&gt;getCommentsInside()&lt;/code&gt; に置き換えられました</target>
        </trans-unit>
        <trans-unit id="aa94f4839516f9216386ab27beed80d15594b32c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getComments(node)&lt;/code&gt; - returns the leading and trailing comments arrays for the given node.</source>
          <target state="translated">&lt;code&gt;getComments(node)&lt;/code&gt; -指定されたノードの先頭と末尾のコメント配列を返します。</target>
        </trans-unit>
        <trans-unit id="8460f381dc294566d3afaac120dc4516d71a46b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getComments(node)&lt;/code&gt; - returns the leading and trailing comments arrays for the given node. Use &lt;code&gt;sourceCode.getComments(node)&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;getComments(node)&lt;/code&gt; -指定されたノードの先頭と末尾のコメント配列を返します。代わりに &lt;code&gt;sourceCode.getComments(node)&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="03b8a2631fcad703770d118f0af4b8d8232ea6bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getCommentsAfter(nodeOrToken)&lt;/code&gt; - returns an array of comment tokens that occur directly after the given node or token.</source>
          <target state="translated">&lt;code&gt;getCommentsAfter(nodeOrToken)&lt;/code&gt; -指定されたノードまたはトークンの直後に発生するコメントトークンの配列を返します。</target>
        </trans-unit>
        <trans-unit id="45585b0c052fea0ec49bdb72dcb4f3291a559b9d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getCommentsBefore(nodeOrToken)&lt;/code&gt; - returns an array of comment tokens that occur directly before the given node or token.</source>
          <target state="translated">&lt;code&gt;getCommentsBefore(nodeOrToken)&lt;/code&gt; -指定されたノードまたはトークンの直前に発生するコメントトークンの配列を返します。</target>
        </trans-unit>
        <trans-unit id="5ce796a05fec22418eb6f6b0c31b985e26b95bc1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getCommentsInside(node)&lt;/code&gt; - returns an array of all comment tokens inside a given node.</source>
          <target state="translated">&lt;code&gt;getCommentsInside(node)&lt;/code&gt; -指定されたノード内のすべてのコメントトークンの配列を返します。</target>
        </trans-unit>
        <trans-unit id="e24bb80cdf1b2d84cb00a57343bc0d29f1df2122" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getCwd()&lt;/code&gt; - returns the &lt;code&gt;cwd&lt;/code&gt; passed to &lt;a href=&quot;nodejs-api#Linter&quot;&gt;Linter&lt;/a&gt;. It is a path to a directory that should be considered as the current working directory.</source>
          <target state="translated">&lt;code&gt;getCwd()&lt;/code&gt; - &lt;code&gt;cwd&lt;/code&gt; 渡された&lt;a href=&quot;nodejs-api#Linter&quot;&gt;cwdを&lt;/a&gt;返します。これは、現在の作業ディレクトリと見なされるディレクトリへのパスです。</target>
        </trans-unit>
        <trans-unit id="49edb2246170127ce4d7818575eda03a891b41bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getDeclaredVariables(node)&lt;/code&gt; - returns a list of &lt;a href=&quot;scope-manager-interface#variable-interface&quot;&gt;variables&lt;/a&gt; declared by the given node. This information can be used to track references to variables.</source>
          <target state="translated">&lt;code&gt;getDeclaredVariables(node)&lt;/code&gt; - 指定されたノードによって宣言された&lt;a href=&quot;scope-manager-interface#variable-interface&quot;&gt;変数の&lt;/a&gt;リストを返します。この情報は、変数への参照を追跡するために使用できます。</target>
        </trans-unit>
        <trans-unit id="fd0f2a4bb01c1269d15488494cf6f6678ad983e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getDeclaredVariables(node)&lt;/code&gt; - returns the declared variables on the given node.</source>
          <target state="translated">&lt;code&gt;getDeclaredVariables(node)&lt;/code&gt; -指定されたノードで宣言された変数を返します。</target>
        </trans-unit>
        <trans-unit id="5a2e63f0df59d0088b47311d302303339c2a043a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getFilename()&lt;/code&gt; - returns the filename associated with the source.</source>
          <target state="translated">&lt;code&gt;getFilename()&lt;/code&gt; -ソースに関連付けられたファイル名を返します。</target>
        </trans-unit>
        <trans-unit id="03d37e621ce2fbaca696379affa8f01c69556d77" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getFirstToken(node)&lt;/code&gt; - returns the first token representing the given node.</source>
          <target state="translated">&lt;code&gt;getFirstToken(node)&lt;/code&gt; -指定されたノードを表す最初のトークンを返します。</target>
        </trans-unit>
        <trans-unit id="509bd3458225ff5c98495b8f087b3efd1a22e878" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getFirstToken(node)&lt;/code&gt; - returns the first token representing the given node. Use &lt;code&gt;sourceCode.getFirstToken(node)&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;getFirstToken(node)&lt;/code&gt; -指定されたノードを表す最初のトークンを返します。代わりに &lt;code&gt;sourceCode.getFirstToken(node)&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="9dc34b6bea74b0a887d84b3e38daee3be39ea5f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getFirstToken(node, skipOptions)&lt;/code&gt; - returns the first token representing the given node.</source>
          <target state="translated">&lt;code&gt;getFirstToken(node, skipOptions)&lt;/code&gt; -指定されたノードを表す最初のトークンを返します。</target>
        </trans-unit>
        <trans-unit id="662c202d4b2c4ead636694aff9595a8ccaae69b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getFirstTokenBetween(nodeOrToken1, nodeOrToken2, skipOptions)&lt;/code&gt; - returns the first token between two nodes or tokens.</source>
          <target state="translated">&lt;code&gt;getFirstTokenBetween(nodeOrToken1, nodeOrToken2, skipOptions)&lt;/code&gt; つのノードまたはトークン間の最初のトークンを返します。</target>
        </trans-unit>
        <trans-unit id="96a17b0c9230d6f2ad7ece6f5830bc55f0597cd0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getFirstTokens(node, count)&lt;/code&gt; - returns the first &lt;code&gt;count&lt;/code&gt; tokens representing the given node.</source>
          <target state="translated">&lt;code&gt;getFirstTokens(node, count)&lt;/code&gt; - 指定されたノードを表す最初の &lt;code&gt;count&lt;/code&gt; トークンを返します。</target>
        </trans-unit>
        <trans-unit id="6ac4963c9d2ab26060ca45151cf5bb38655ec050" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getFirstTokens(node, count)&lt;/code&gt; - returns the first &lt;code&gt;count&lt;/code&gt; tokens representing the given node. Use &lt;code&gt;sourceCode.getFirstTokens(node, count)&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;getFirstTokens(node, count)&lt;/code&gt; - 指定されたノードを表す最初の &lt;code&gt;count&lt;/code&gt; トークンを返します。代わりに &lt;code&gt;sourceCode.getFirstTokens(node, count)&lt;/code&gt; 使用してください。</target>
        </trans-unit>
        <trans-unit id="561cb44b68d06029b459eaf4cd3d4ccc0c758cdf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getFirstTokens(node, countOptions)&lt;/code&gt; - returns the first &lt;code&gt;count&lt;/code&gt; tokens representing the given node.</source>
          <target state="translated">&lt;code&gt;getFirstTokens(node, countOptions)&lt;/code&gt; - 指定されたノードを表す最初の &lt;code&gt;count&lt;/code&gt; トークンを返します。</target>
        </trans-unit>
        <trans-unit id="c17c48b6198671c64ce6908eeb4c93a902029d64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getFirstTokensBetween(nodeOrToken1, nodeOrToken2, countOptions)&lt;/code&gt; - returns the first &lt;code&gt;count&lt;/code&gt; tokens between two nodes or tokens.</source>
          <target state="translated">&lt;code&gt;getFirstTokensBetween(nodeOrToken1, nodeOrToken2, countOptions)&lt;/code&gt; つのノードまたはトークン間の最初の &lt;code&gt;count&lt;/code&gt; トークンを返します。</target>
        </trans-unit>
        <trans-unit id="8c72c5f85149ac5f337f39e59fb616ed079fcf77" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getIndexFromLoc(loc)&lt;/code&gt; - returns the index of a given location in the source code, where &lt;code&gt;loc&lt;/code&gt; is an object with a 1-based &lt;code&gt;line&lt;/code&gt; key and a 0-based &lt;code&gt;column&lt;/code&gt; key.</source>
          <target state="translated">&lt;code&gt;getIndexFromLoc(loc)&lt;/code&gt; -ソースコード内の指定された場所のインデックスを返します &lt;code&gt;loc&lt;/code&gt; は、1から始まる &lt;code&gt;line&lt;/code&gt; キーと0から始まる &lt;code&gt;column&lt;/code&gt; キーを持つオブジェクトです。</target>
        </trans-unit>
        <trans-unit id="735c6d85a79612db8c7ab6637b9e7ddd0a3eaa86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getJSDocComment(node)&lt;/code&gt; - returns the JSDoc comment for a given node or &lt;code&gt;null&lt;/code&gt; if there is none.</source>
          <target state="translated">&lt;code&gt;getJSDocComment(node)&lt;/code&gt; -指定されたノードのJSDocコメントを返します。コメントがない場合は &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="c6f36d7991ecf6fe36d5033aff6813a1fa0060fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getJSDocComment(node)&lt;/code&gt; - returns the JSDoc comment for a given node or &lt;code&gt;null&lt;/code&gt; if there is none. Use &lt;code&gt;sourceCode.getJSDocComment(node)&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;getJSDocComment(node)&lt;/code&gt; -指定されたノードのJSDocコメントまたは &lt;code&gt;null&lt;/code&gt; を返しますがない場合は。代わりに &lt;code&gt;sourceCode.getJSDocComment(node)&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="de4bcb68f902e11d721c5f1d725b67bdc5a26ff2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getLastToken(node)&lt;/code&gt; - returns the last token representing the given node.</source>
          <target state="translated">&lt;code&gt;getLastToken(node)&lt;/code&gt; -指定されたノードを表す最後のトークンを返します。</target>
        </trans-unit>
        <trans-unit id="f3baea074fff481f0cda944536dbbf00fb9d68bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getLastToken(node)&lt;/code&gt; - returns the last token representing the given node. Use &lt;code&gt;sourceCode.getLastToken(node)&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;getLastToken(node)&lt;/code&gt; -指定されたノードを表す最後のトークンを返します。使用する &lt;code&gt;sourceCode.getLastToken(node)&lt;/code&gt; 代わりにsourceCode.getLastToken（node）を。</target>
        </trans-unit>
        <trans-unit id="daf4ca3c62d53c8c3c12c7a8e798d41b3afd8677" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getLastToken(node, skipOptions)&lt;/code&gt; - returns the last token representing the given node.</source>
          <target state="translated">&lt;code&gt;getLastToken(node, skipOptions)&lt;/code&gt; -指定されたノードを表す最後のトークンを返します。</target>
        </trans-unit>
        <trans-unit id="01e637b0271bd1ca6733e66299a3c4334bad7004" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getLastTokenBetween(nodeOrToken1, nodeOrToken2, skipOptions)&lt;/code&gt; - returns the last token between two nodes or tokens.</source>
          <target state="translated">&lt;code&gt;getLastTokenBetween(nodeOrToken1, nodeOrToken2, skipOptions)&lt;/code&gt; つのノードまたはトークン間の最後のトークンを返します。</target>
        </trans-unit>
        <trans-unit id="96521cddb40cc29f1c245a0763f7ae19d466b957" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getLastTokens(node, count)&lt;/code&gt; - returns the last &lt;code&gt;count&lt;/code&gt; tokens representing the given node.</source>
          <target state="translated">&lt;code&gt;getLastTokens(node, count)&lt;/code&gt; -最後を返します &lt;code&gt;count&lt;/code&gt; 指定されたノードを表すカウントトークンをます。</target>
        </trans-unit>
        <trans-unit id="462e633f8a84f9a3f463b16d0673314c8bbbee68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getLastTokens(node, count)&lt;/code&gt; - returns the last &lt;code&gt;count&lt;/code&gt; tokens representing the given node. Use &lt;code&gt;sourceCode.getLastTokens(node, count)&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;getLastTokens(node, count)&lt;/code&gt; - 指定されたノードを表す最後の &lt;code&gt;count&lt;/code&gt; トークンを返します。使用する &lt;code&gt;sourceCode.getLastTokens(node, count)&lt;/code&gt; 代わりにsourceCode.getLastTokens（node、count）を。</target>
        </trans-unit>
        <trans-unit id="121f8d1b49f923e03cbdec3f1b442c0436872185" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getLastTokens(node, countOptions)&lt;/code&gt; - returns the last &lt;code&gt;count&lt;/code&gt; tokens representing the given node.</source>
          <target state="translated">&lt;code&gt;getLastTokens(node, countOptions)&lt;/code&gt; -最後の &lt;code&gt;count&lt;/code&gt; 返します指定されたノードを表すトークンをます。</target>
        </trans-unit>
        <trans-unit id="0a35904994083cedabad26b0a801a25ca4de8ff8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getLastTokensBetween(nodeOrToken1, nodeOrToken2, countOptions)&lt;/code&gt; - returns the last &lt;code&gt;count&lt;/code&gt; tokens between two nodes or tokens.</source>
          <target state="translated">&lt;code&gt;getLastTokensBetween(nodeOrToken1, nodeOrToken2, countOptions)&lt;/code&gt; つのノードまたはトークン間の最後の &lt;code&gt;count&lt;/code&gt; トークンを返します。</target>
        </trans-unit>
        <trans-unit id="40f3c157f7a6b7ef54894d9f472b233ca7b4a202" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getLocFromIndex(index)&lt;/code&gt; - returns an object with &lt;code&gt;line&lt;/code&gt; and &lt;code&gt;column&lt;/code&gt; properties, corresponding to the location of the given source index. &lt;code&gt;line&lt;/code&gt; is 1-based and &lt;code&gt;column&lt;/code&gt; is 0-based.</source>
          <target state="translated">&lt;code&gt;getLocFromIndex(index)&lt;/code&gt; - 指定されたソースインデックスの場所に対応する、 &lt;code&gt;line&lt;/code&gt; と &lt;code&gt;column&lt;/code&gt; プロパティを持つオブジェクトを返します。 &lt;code&gt;line&lt;/code&gt; は1から始まり、 &lt;code&gt;column&lt;/code&gt; は0から始まります。</target>
        </trans-unit>
        <trans-unit id="7b70631d80298de3d4282c1eccbd92f603888d17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getNodeByRangeIndex(index)&lt;/code&gt; - returns the deepest node in the AST containing the given source index.</source>
          <target state="translated">&lt;code&gt;getNodeByRangeIndex(index)&lt;/code&gt; -指定されたソースインデックスを含むASTの最も深いノードを返します。</target>
        </trans-unit>
        <trans-unit id="ae89bb3fc0123b41d9b19f45739d52a4ab23e2a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getNodeByRangeIndex(index)&lt;/code&gt; - returns the deepest node in the AST containing the given source index. Use &lt;code&gt;sourceCode.getNodeByRangeIndex(index)&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;getNodeByRangeIndex(index)&lt;/code&gt; -指定されたソースインデックスを含むASTの最も深いノードを返します。 &lt;code&gt;sourceCode.getNodeByRangeIndex(index)&lt;/code&gt; を使用します代わりに、。</target>
        </trans-unit>
        <trans-unit id="1d04b4f88f24b0c553f04f052b802868d7ab780a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getScope()&lt;/code&gt; - returns the &lt;a href=&quot;scope-manager-interface#scope-interface&quot;&gt;scope&lt;/a&gt; of the currently-traversed node. This information can be used to track references to variables.</source>
          <target state="translated">&lt;code&gt;getScope()&lt;/code&gt; - &lt;a href=&quot;scope-manager-interface#scope-interface&quot;&gt;スコープを&lt;/a&gt;返します現在通過しているノードのをます。この情報は、変数への参照を追跡するために使用できます。</target>
        </trans-unit>
        <trans-unit id="aa062a89b60a1c03113d48bc2f3a9cd75db1e763" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getScope()&lt;/code&gt; - returns the current scope.</source>
          <target state="translated">&lt;code&gt;getScope()&lt;/code&gt; -現在のスコープを返します。</target>
        </trans-unit>
        <trans-unit id="da613f507e5ecf97337cd92cb3ffb03dab17fb98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getSource(node)&lt;/code&gt; - returns the source code for the given node. Omit &lt;code&gt;node&lt;/code&gt; to get the whole source. Use &lt;code&gt;sourceCode.getText(node)&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;getSource(node)&lt;/code&gt; -指定されたノードのソースコードを返します。ソース全体を取得するには、 &lt;code&gt;node&lt;/code&gt; を省略します。 &lt;code&gt;sourceCode.getText(node)&lt;/code&gt; を使用します代わりに。</target>
        </trans-unit>
        <trans-unit id="b23ff6cbdd410120752d0c4a27aab75ea5480c44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getSourceCode()&lt;/code&gt; - returns a &lt;a href=&quot;#context-getsourcecode&quot;&gt;&lt;code&gt;SourceCode&lt;/code&gt;&lt;/a&gt; object that you can use to work with the source that was passed to ESLint.</source>
          <target state="translated">&lt;code&gt;getSourceCode()&lt;/code&gt; - ESLintに渡されたソースを操作するために使用できる&lt;a href=&quot;#context-getsourcecode&quot;&gt; &lt;code&gt;SourceCode&lt;/code&gt; &lt;/a&gt;オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="0e460a95119bf1353e6f3cd7b82c6731a41aabdd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getSourceCode()&lt;/code&gt; - returns a &lt;a href=&quot;#contextgetsourcecode&quot;&gt;&lt;code&gt;SourceCode&lt;/code&gt;&lt;/a&gt; object that you can use to work with the source that was passed to ESLint.</source>
          <target state="translated">&lt;code&gt;getSourceCode()&lt;/code&gt; - &lt;a href=&quot;#contextgetsourcecode&quot;&gt; &lt;code&gt;SourceCode&lt;/code&gt; を&lt;/a&gt;返します ESLintに渡されたソースを操作するために使用できるオブジェクトを。</target>
        </trans-unit>
        <trans-unit id="73b83824b76e4d79c66ab55b0d18abd90284439c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getSourceCode()&lt;/code&gt; - returns a &lt;code&gt;SourceCode&lt;/code&gt; object that you can use to work with the source that was passed to ESLint</source>
          <target state="translated">&lt;code&gt;getSourceCode()&lt;/code&gt; - &lt;code&gt;SourceCode&lt;/code&gt; を返します ESLintに渡されたソースを操作するために使用できるオブジェクトを</target>
        </trans-unit>
        <trans-unit id="c3281934b4386de71d77c46b04855acfa01d61d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getSourceLines()&lt;/code&gt; - returns the entire source code split into an array of string lines. Use &lt;code&gt;sourceCode.lines&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;getSourceLines()&lt;/code&gt; -ソースコード全体を文字列行の配列に分割して返します。 &lt;code&gt;sourceCode.lines&lt;/code&gt; を使用する代わりにを。</target>
        </trans-unit>
        <trans-unit id="77cba13f47f0888b57cf0ffb3b1f0ed2a10a146d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getText(node)&lt;/code&gt; - returns the source code for the given node. Omit &lt;code&gt;node&lt;/code&gt; to get the whole source.</source>
          <target state="translated">&lt;code&gt;getText(node)&lt;/code&gt; -指定されたノードのソースコードを返します。 &lt;code&gt;node&lt;/code&gt; 省略ソース全体を取得するには、を。</target>
        </trans-unit>
        <trans-unit id="30447ce0c0e2ce9d9dd97cd9d292cd138b596b94" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getTokenAfter(nodeOrToken)&lt;/code&gt; - returns the first token after the given node or token.</source>
          <target state="translated">&lt;code&gt;getTokenAfter(nodeOrToken)&lt;/code&gt; -指定されたノードまたはトークンの後の最初のトークンを返します。</target>
        </trans-unit>
        <trans-unit id="538f16bd6f05b35dd174271630882e927f35896c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getTokenAfter(nodeOrToken)&lt;/code&gt; - returns the first token after the given node or token. Use &lt;code&gt;sourceCode.getTokenAfter(nodeOrToken)&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;getTokenAfter(nodeOrToken)&lt;/code&gt; -指定されたノードまたはトークンの後の最初のトークンを返します。 &lt;code&gt;sourceCode.getTokenAfter(nodeOrToken)&lt;/code&gt; を使用します代わりに、。</target>
        </trans-unit>
        <trans-unit id="6545f85ce92272bc3959e605cd330848ff3a5090" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getTokenAfter(nodeOrToken, skipOptions)&lt;/code&gt; - returns the first token after the given node or token.</source>
          <target state="translated">&lt;code&gt;getTokenAfter(nodeOrToken, skipOptions)&lt;/code&gt; -指定されたノードまたはトークンの後の最初のトークンを返します。</target>
        </trans-unit>
        <trans-unit id="4e09ead520fc9a50d02539c640b343818637cd9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getTokenBefore(nodeOrToken)&lt;/code&gt; - returns the first token before the given node or token.</source>
          <target state="translated">&lt;code&gt;getTokenBefore(nodeOrToken)&lt;/code&gt; -指定されたノードまたはトークンの前の最初のトークンを返します。</target>
        </trans-unit>
        <trans-unit id="ba8c9bd7f188543ad14fec9267bd654134a03c92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getTokenBefore(nodeOrToken)&lt;/code&gt; - returns the first token before the given node or token. Use &lt;code&gt;sourceCode.getTokenBefore(nodeOrToken)&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;getTokenBefore(nodeOrToken)&lt;/code&gt; -指定されたノードまたはトークンの前の最初のトークンを返します。代わりに、 &lt;code&gt;sourceCode.getTokenBefore(nodeOrToken)&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="68921653059922253f7a23da0efad072f43c73b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getTokenBefore(nodeOrToken, skipOptions)&lt;/code&gt; - returns the first token before the given node or token.</source>
          <target state="translated">&lt;code&gt;getTokenBefore(nodeOrToken, skipOptions)&lt;/code&gt; -指定されたノードまたはトークンの前の最初のトークンを返します。</target>
        </trans-unit>
        <trans-unit id="e2de01f91cc75572b8c86e4632cbb38dd8b18d2f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getTokenByRangeStart(index)&lt;/code&gt; - returns the token whose range starts at the given index in the source.</source>
          <target state="translated">&lt;code&gt;getTokenByRangeStart(index)&lt;/code&gt; -ソース内の指定されたインデックスで範囲が始まるトークンを返します。</target>
        </trans-unit>
        <trans-unit id="bbfca32d4c4fbbcbbe1b2224fb6925e4a114d532" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getTokenByRangeStart(index)&lt;/code&gt; - returns the token whose range starts at the given index in the source. Use &lt;code&gt;sourceCode.getTokenByRangeStart(index)&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;getTokenByRangeStart(index)&lt;/code&gt; -ソース内の指定されたインデックスで範囲が始まるトークンを返します。代わりに、 &lt;code&gt;sourceCode.getTokenByRangeStart(index)&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="b96cd6fefe827a04a363a95232cc549806589c7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getTokenByRangeStart(index, rangeOptions)&lt;/code&gt; - returns the token whose range starts at the given index in the source.</source>
          <target state="translated">&lt;code&gt;getTokenByRangeStart(index, rangeOptions)&lt;/code&gt; -ソースの指定されたインデックスで始まる範囲のトークンを返します。</target>
        </trans-unit>
        <trans-unit id="241c735e913ef23a788b45a0ad2783e670c16e75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getTokenOrCommentAfter()&lt;/code&gt; - replaced by &lt;code&gt;getTokenAfter()&lt;/code&gt; with the &lt;code&gt;{ includeComments: true }&lt;/code&gt; option</source>
          <target state="translated">&lt;code&gt;getTokenOrCommentAfter()&lt;/code&gt; - &lt;code&gt;{ includeComments: true }&lt;/code&gt; &lt;code&gt;getTokenAfter()&lt;/code&gt; ：true}オプションを指定したgetTokenAfter（）に置き換えられました</target>
        </trans-unit>
        <trans-unit id="32dc98e16e9ea88edb1b0a9c3aa13fd91bb423f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getTokenOrCommentBefore()&lt;/code&gt; - replaced by &lt;code&gt;getTokenBefore()&lt;/code&gt; with the &lt;code&gt;{ includeComments: true }&lt;/code&gt; option</source>
          <target state="translated">&lt;code&gt;getTokenOrCommentBefore()&lt;/code&gt; - &lt;code&gt;{ includeComments: true }&lt;/code&gt; &lt;code&gt;getTokenBefore()&lt;/code&gt; ：true}オプションを指定したgetTokenBefore（）に置き換えられました</target>
        </trans-unit>
        <trans-unit id="66681a6ca04864c2f04fe0d39d18e592025c9ae1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getTokens(node)&lt;/code&gt; - returns all tokens for the given node.</source>
          <target state="translated">&lt;code&gt;getTokens(node)&lt;/code&gt; -指定されたノードのすべてのトークンを返します。</target>
        </trans-unit>
        <trans-unit id="69fe3cf84960971737331f0f2cd1b7818b58bdfd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getTokens(node)&lt;/code&gt; - returns all tokens for the given node. Use &lt;code&gt;sourceCode.getTokens(node)&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;getTokens(node)&lt;/code&gt; -指定されたノードのすべてのトークンを返します。代わりに &lt;code&gt;sourceCode.getTokens(node)&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="15d6474034bdbc0f47154960f8e8a70b1ce002d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getTokensAfter(nodeOrToken, count)&lt;/code&gt; - returns &lt;code&gt;count&lt;/code&gt; tokens after the given node or token.</source>
          <target state="translated">&lt;code&gt;getTokensAfter(nodeOrToken, count)&lt;/code&gt; - 指定されたノードまたはトークンの後に &lt;code&gt;count&lt;/code&gt; トークンを返します。</target>
        </trans-unit>
        <trans-unit id="bf66a8ee83cace453cc2fe8ef386d3f2ad8c46e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getTokensAfter(nodeOrToken, count)&lt;/code&gt; - returns &lt;code&gt;count&lt;/code&gt; tokens after the given node or token. Use &lt;code&gt;sourceCode.getTokensAfter(nodeOrToken, count)&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;getTokensAfter(nodeOrToken, count)&lt;/code&gt; - 指定されたノードまたはトークンの後に &lt;code&gt;count&lt;/code&gt; トークンを返します。代わりに &lt;code&gt;sourceCode.getTokensAfter(nodeOrToken, count)&lt;/code&gt; 使用してください。</target>
        </trans-unit>
        <trans-unit id="7e4fbc24ed98bdb4198cb2b34caabdcce8d17a24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getTokensAfter(nodeOrToken, countOptions)&lt;/code&gt; - returns &lt;code&gt;count&lt;/code&gt; tokens after the given node or token.</source>
          <target state="translated">&lt;code&gt;getTokensAfter(nodeOrToken, countOptions)&lt;/code&gt; - 指定されたノードまたはトークンの後に &lt;code&gt;count&lt;/code&gt; トークンを返します。</target>
        </trans-unit>
        <trans-unit id="4f33bf02304b7028b0dcfa71c38b776c0bc7313a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getTokensBefore(nodeOrToken, count)&lt;/code&gt; - returns &lt;code&gt;count&lt;/code&gt; tokens before the given node or token.</source>
          <target state="translated">&lt;code&gt;getTokensBefore(nodeOrToken, count)&lt;/code&gt; - 指定されたノードまたはトークンの前の &lt;code&gt;count&lt;/code&gt; トークンを返します。</target>
        </trans-unit>
        <trans-unit id="507bf14fc062cbe96426a6db36f05a946f33724c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getTokensBefore(nodeOrToken, count)&lt;/code&gt; - returns &lt;code&gt;count&lt;/code&gt; tokens before the given node or token. Use &lt;code&gt;sourceCode.getTokensBefore(nodeOrToken, count)&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;getTokensBefore(nodeOrToken, count)&lt;/code&gt; - 指定されたノードまたはトークンの前の &lt;code&gt;count&lt;/code&gt; トークンを返します。代わりに &lt;code&gt;sourceCode.getTokensBefore(nodeOrToken, count)&lt;/code&gt; 使用してください。</target>
        </trans-unit>
        <trans-unit id="8beef8ae8ccc8e4157d11b1a0447d4d4e260b04a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getTokensBefore(nodeOrToken, countOptions)&lt;/code&gt; - returns &lt;code&gt;count&lt;/code&gt; tokens before the given node or token.</source>
          <target state="translated">&lt;code&gt;getTokensBefore(nodeOrToken, countOptions)&lt;/code&gt; - 指定されたノードまたはトークンの前の &lt;code&gt;count&lt;/code&gt; トークンを返します。</target>
        </trans-unit>
        <trans-unit id="85a04317aa92458dbec22844fa79672d52352e3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getTokensBetween(node1, node2)&lt;/code&gt; - returns the tokens between two nodes.</source>
          <target state="translated">&lt;code&gt;getTokensBetween(node1, node2)&lt;/code&gt; つのノード間のトークンを返します。</target>
        </trans-unit>
        <trans-unit id="7deaf8ee5709bf359c600d9638cfd1c30a649959" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getTokensBetween(node1, node2)&lt;/code&gt; - returns the tokens between two nodes. Use &lt;code&gt;sourceCode.getTokensBetween(node1, node2)&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;getTokensBetween(node1, node2)&lt;/code&gt; つのノード間のトークンを返します。代わりに &lt;code&gt;sourceCode.getTokensBetween(node1, node2)&lt;/code&gt; 使用してください。</target>
        </trans-unit>
        <trans-unit id="e0d27291fc258bd4ccdb41f6667e13f695bceb72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getTokensBetween(nodeOrToken1, nodeOrToken2)&lt;/code&gt; - returns all tokens between two nodes.</source>
          <target state="translated">&lt;code&gt;getTokensBetween(nodeOrToken1, nodeOrToken2)&lt;/code&gt; つのノード間のすべてのトークンを返します。</target>
        </trans-unit>
        <trans-unit id="010d43012ffec9f4ad5a45534f7b208e94eca610" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getWithoutSet&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt; will warn for getters without setters (Default &lt;code&gt;false&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;getWithoutSet&lt;/code&gt; を &lt;code&gt;true&lt;/code&gt; に設定すると、セッターのないゲッターに対して警告が表示されます（デフォルトは &lt;code&gt;false&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="08bb4d668cf6ddca42003b5ceb89c860ce611f9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;globInputPaths&lt;/code&gt; - Set to false to skip glob resolution of input file paths to lint (default: true). If false, each input file paths is assumed to be a non-glob path to an existing file.</source>
          <target state="translated">&lt;code&gt;globInputPaths&lt;/code&gt; -lintへの入力ファイルパスのグロブ解決をスキップするには、falseに設定します（デフォルト：true）。falseの場合、各入力ファイルのパスは、既存のファイルへの非グローバルパスであると見なされます。</target>
        </trans-unit>
        <trans-unit id="9765a187504d78c874c2f64fb0926983419e69f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;globalReturn&lt;/code&gt; - allow &lt;code&gt;return&lt;/code&gt; statements in the global scope</source>
          <target state="translated">&lt;code&gt;globalReturn&lt;/code&gt; -グローバルスコープで &lt;code&gt;return&lt;/code&gt; ステートメントを許可する</target>
        </trans-unit>
        <trans-unit id="35b8980e6bbbdd5ab315d043aff13e158a664f0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;globals&lt;/code&gt; - An array of global variables to declare (default: empty array). Corresponds to &lt;code&gt;--global&lt;/code&gt;, and similarly supports passing &lt;code&gt;'name:true'&lt;/code&gt; to denote a writeable global. Note: This differs from &lt;code&gt;.eslintrc.*&lt;/code&gt; / &lt;code&gt;baseConfig&lt;/code&gt;, where &lt;code&gt;globals&lt;/code&gt; is an object.</source>
          <target state="translated">&lt;code&gt;globals&lt;/code&gt; -宣言するグローバル変数の配列（デフォルト：空の配列）。 &lt;code&gt;--global&lt;/code&gt; に対応し、同様に &lt;code&gt;'name:true'&lt;/code&gt; を渡して書き込み可能なグローバルを示すことをサポートします。注：これは、 &lt;code&gt;globals&lt;/code&gt; がオブジェクトである &lt;code&gt;.eslintrc.*&lt;/code&gt; / &lt;code&gt;baseConfig&lt;/code&gt; とは異なります。</target>
        </trans-unit>
        <trans-unit id="42a9973f7b67d92fddb92791218455e3473ac5cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;globals&lt;/code&gt; - acts the same &lt;code&gt;globals&lt;/code&gt; in a configuration file. The keys are the names of the globals and the values are &lt;code&gt;true&lt;/code&gt; to allow the global to be overwritten and &lt;code&gt;false&lt;/code&gt; to disallow.</source>
          <target state="translated">&lt;code&gt;globals&lt;/code&gt; -構成ファイルで同じ &lt;code&gt;globals&lt;/code&gt; を機能させます。キーはグローバルの名前であり、値は &lt;code&gt;true&lt;/code&gt; でグローバルの上書きを許可し、 &lt;code&gt;false&lt;/code&gt; で許可しません。</target>
        </trans-unit>
        <trans-unit id="64ed34d0a866323d269557628eac71ffe2826c24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;greasemonkey&lt;/code&gt; - GreaseMonkey globals.</source>
          <target state="translated">&lt;code&gt;greasemonkey&lt;/code&gt; -GreaseMonkeyグローバル。</target>
        </trans-unit>
        <trans-unit id="4e57db3a504550dce847dd0a300d2316bad345d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;groups&lt;/code&gt; (&lt;code&gt;string[][]&lt;/code&gt;) - specifies operator groups to be checked. The &lt;code&gt;groups&lt;/code&gt; option is a list of groups, and a group is a list of binary operators. Default operator groups are defined as arithmetic, bitwise, comparison, logical, and relational operators. Note: Ternary operator(?:) can be part of any group and by default is allowed to be mixed with other operators.</source>
          <target state="translated">&lt;code&gt;groups&lt;/code&gt; （ &lt;code&gt;string[][]&lt;/code&gt; ）-チェックする演算子グループを指定します。 &lt;code&gt;groups&lt;/code&gt; オプションは、グループのリストで、グループは、二項演算子のリストです。デフォルトの演算子グループは、算術演算子、ビットごとの演算子、比較演算子、論理演算子、および関係演算子として定義されています。注：3項演算子（？:)は任意のグループの一部にすることができ、デフォルトでは他の演算子と混合できます。</target>
        </trans-unit>
        <trans-unit id="cfd761824e7aff9d3863fdb75c42c5fd92c11f44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hasBOM&lt;/code&gt; - the flag to indicate whether or not the source code has Unicode BOM.</source>
          <target state="translated">&lt;code&gt;hasBOM&lt;/code&gt; -ソースコードにUnicode BOMがあるかどうかを示すフラグ。</target>
        </trans-unit>
        <trans-unit id="9285785d49333256c638abb12f38d7fda77ee20f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;id&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;) - A unique string. Respective rules can use &lt;code&gt;id&lt;/code&gt; to save additional information for each code path.</source>
          <target state="translated">&lt;code&gt;id&lt;/code&gt; （ &lt;code&gt;string&lt;/code&gt; ）-一意の文字列。それぞれのルールは &lt;code&gt;id&lt;/code&gt; を使用して、各コードパスの追加情報を保存できます。</target>
        </trans-unit>
        <trans-unit id="d6e46d37e6aa57a165d1692bfc0a4fc0dbd11145" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;id&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;) - A unique string. Respective rules can use &lt;code&gt;id&lt;/code&gt; to save additional information for each segment.</source>
          <target state="translated">&lt;code&gt;id&lt;/code&gt; （ &lt;code&gt;string&lt;/code&gt; ）-一意の文字列。それぞれのルールは &lt;code&gt;id&lt;/code&gt; を使用して、各セグメントの追加情報を保存できます。</target>
        </trans-unit>
        <trans-unit id="013744dee76c9e18a6ee3f279f836fab1c012443" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;id&lt;/code&gt; - the rule ID.</source>
          <target state="translated">&lt;code&gt;id&lt;/code&gt; -ルールID。</target>
        </trans-unit>
        <trans-unit id="bc821ef2c3b9e039f287892e7910548177ff2f82" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;if-else-if&lt;/code&gt; chains are commonly used when there is a need to execute only one branch (or at most one branch) out of several possible branches, based on certain conditions.</source>
          <target state="translated">&lt;code&gt;if-else-if&lt;/code&gt; チェーンは、特定の条件に基づいて、いくつかの可能なブランチから1つだけ（または多くても1つのブランチ）を実行する必要がある場合に一般的に使用されます。</target>
        </trans-unit>
        <trans-unit id="9fc34c428ff3e1f0a5436352ec19503637939535" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;if&lt;/code&gt; statements which have an &lt;code&gt;else&lt;/code&gt; branch</source>
          <target state="translated">&lt;code&gt;if&lt;/code&gt; &lt;code&gt;else&lt;/code&gt; ブランチを持つifステートメント</target>
        </trans-unit>
        <trans-unit id="b978cf8622a91d5afe2726ea90fd104030878694" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;if&lt;/code&gt;, &lt;code&gt;for&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, or &lt;code&gt;do...while&lt;/code&gt; statement</source>
          <target state="translated">&lt;code&gt;if&lt;/code&gt; 、 &lt;code&gt;for&lt;/code&gt; 、 &lt;code&gt;while&lt;/code&gt; 、または &lt;code&gt;do...while&lt;/code&gt; ステートメント</target>
        </trans-unit>
        <trans-unit id="251ef773d4e34c2c8069ad5d189a3b54d35a4a8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ignore&lt;/code&gt; - Do not apply this rule to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ignore&lt;/code&gt; -このルールを &lt;code&gt;null&lt;/code&gt; に適用しません。</target>
        </trans-unit>
        <trans-unit id="5828d116e9753b197ceb90228c57ce733f31e88f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ignore&lt;/code&gt; - False disables use of &lt;code&gt;.eslintignore&lt;/code&gt;, &lt;code&gt;ignorePath&lt;/code&gt; and &lt;code&gt;ignorePattern&lt;/code&gt; (default: true). Corresponds to &lt;code&gt;--no-ignore&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ignore&lt;/code&gt; -falseは、 &lt;code&gt;.eslintignore&lt;/code&gt; 、 &lt;code&gt;ignorePath&lt;/code&gt; および &lt;code&gt;ignorePattern&lt;/code&gt; の使用を無効にします（デフォルト：true）。 &lt;code&gt;--no-ignore&lt;/code&gt; に対応します。</target>
        </trans-unit>
        <trans-unit id="6e41e6d313471b1f28cebffb7fa63f97a73d4ead" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ignoreCase&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;ignoreCase&lt;/code&gt; （デフォルト： &lt;code&gt;false&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="1652af20f7cbc6cea0157e8bd2f4ec343141b8bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ignoreConsecutiveComments&lt;/code&gt;: If this is &lt;code&gt;true&lt;/code&gt;, the rule will not report on a comment which violates the rule, as long as the comment immediately follows another comment. By default, this is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ignoreConsecutiveComments&lt;/code&gt; ：これが &lt;code&gt;true&lt;/code&gt; の場合、コメントが別のコメントの直後に続く限り、ルールはルールに違反するコメントについて報告しません。デフォルトでは、これは &lt;code&gt;false&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="cf0116c9b79fa6b7146ede12aff41bde09be3cb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ignoreDeclarationSort&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;ignoreDeclarationSort&lt;/code&gt; （デフォルト： &lt;code&gt;false&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="29e09bee68dd37e846dfd48b6ed1316371081d96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ignoreDestructuring&lt;/code&gt;: When set to &lt;code&gt;true&lt;/code&gt;, this rule does not check destructuring assignments</source>
          <target state="translated">&lt;code&gt;ignoreDestructuring&lt;/code&gt; ： &lt;code&gt;true&lt;/code&gt; に設定されている場合、このルールは破壊的な割り当てをチェックしません</target>
        </trans-unit>
        <trans-unit id="954b5035089e5ac105ed49d04932b6e33f1478a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ignoreExport&lt;/code&gt;: When set to &lt;code&gt;true&lt;/code&gt;, this rule does not check exports</source>
          <target state="translated">&lt;code&gt;ignoreExport&lt;/code&gt; ： &lt;code&gt;true&lt;/code&gt; に設定すると、このルールはエクスポートをチェックしません</target>
        </trans-unit>
        <trans-unit id="e478c61a219ed01410606dc9a5a601a29cc1b6f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ignoreImport&lt;/code&gt;: When set to &lt;code&gt;true&lt;/code&gt;, this rule does not check imports</source>
          <target state="translated">&lt;code&gt;ignoreImport&lt;/code&gt; ： &lt;code&gt;true&lt;/code&gt; に設定すると、このルールはインポートをチェックしません</target>
        </trans-unit>
        <trans-unit id="6b1a3306bf18a2992abdefed99a6d2c4b7091ae2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ignoreInlineComments&lt;/code&gt;: If this is &lt;code&gt;true&lt;/code&gt;, the rule will not report on comments in the middle of code. By default, this is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ignoreInlineComments&lt;/code&gt; ：これが &lt;code&gt;true&lt;/code&gt; の場合、ルールはコードの途中でコメントについてレポートしません。デフォルトでは、これは &lt;code&gt;false&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="dcdc4f00214d26fc9b218a936061fb9014b2a0c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ignoreMemberSort&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;ignoreMemberSort&lt;/code&gt; （デフォルト： &lt;code&gt;false&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="efff82ffd73ed7fdffbd027803de9fcf9c73820a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ignorePath&lt;/code&gt; - The ignore file to use instead of &lt;code&gt;.eslintignore&lt;/code&gt; (default: null). Corresponds to &lt;code&gt;--ignore-path&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ignorePath&lt;/code&gt; -の代わりに使用するファイルを無視 &lt;code&gt;.eslintignore&lt;/code&gt; （：nullのデフォルト）。 &lt;code&gt;--ignore-path&lt;/code&gt; に対応します。</target>
        </trans-unit>
        <trans-unit id="4585015cbfef7925a0f13b989103b4163c8bbab9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ignorePattern&lt;/code&gt; - Glob patterns for paths to ignore. String or array of strings.</source>
          <target state="translated">&lt;code&gt;ignorePattern&lt;/code&gt; -無視するパスのグロブパターン。文字列または文字列の配列。</target>
        </trans-unit>
        <trans-unit id="287c57aa42cff18602db5e239f84a2a256960754" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ignorePattern&lt;/code&gt;: A string representing a regular expression pattern of words that should be ignored by this rule. If the first word of a comment matches the pattern, this rule will not report that comment.</source>
          <target state="translated">&lt;code&gt;ignorePattern&lt;/code&gt; ：このルールで無視される単語の正規表現パターンを表す文字列。コメントの最初の単語がパターンに一致する場合、このルールはそのコメントを報告しません。</target>
        </trans-unit>
        <trans-unit id="f8f8a61d00da5fae019c0e175358a7e4a4534b0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ignorePatterns&lt;/code&gt; in config files</source>
          <target state="translated">&lt;code&gt;ignorePatterns&lt;/code&gt; 設定ファイルのignorePatterns</target>
        </trans-unit>
        <trans-unit id="d4dca3d547f51b86b9b0cb11e37a3920cd21ae63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impliedStrict&lt;/code&gt; - enable global &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode&quot;&gt;strict mode&lt;/a&gt; (if &lt;code&gt;ecmaVersion&lt;/code&gt; is 5 or greater)</source>
          <target state="translated">&lt;code&gt;impliedStrict&lt;/code&gt; -グローバル&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode&quot;&gt;厳密モードを&lt;/a&gt;有効にします（ &lt;code&gt;ecmaVersion&lt;/code&gt; が5以上の場合）</target>
        </trans-unit>
        <trans-unit id="caf66d549542d04e38e4ee8f94b5503ee66d5b5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;imports&lt;/code&gt; is for import declarations of ES Modules. (e.g. &lt;code&gt;import {a,} from &quot;foo&quot;;&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;imports&lt;/code&gt; は、ESモジュールのインポート宣言用です。（例えば &lt;code&gt;import {a,} from &quot;foo&quot;;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="740f09bc9fb97836e31df4ab18fbcfb176318491" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;includeComments&lt;/code&gt; is a boolean value, the flag to include comment tokens into the result.</source>
          <target state="translated">&lt;code&gt;includeComments&lt;/code&gt; はブール値で、結果にコメントトークンを含めるためのフラグです。</target>
        </trans-unit>
        <trans-unit id="d5c9c610b68052fe6e099fab88774ca213e78d65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;initialSegment&lt;/code&gt; (&lt;code&gt;CodePathSegment&lt;/code&gt;) - The initial segment of this code path.</source>
          <target state="translated">&lt;code&gt;initialSegment&lt;/code&gt; （ &lt;code&gt;CodePathSegment&lt;/code&gt; ）-このコードパスの最初のセグメント。</target>
        </trans-unit>
        <trans-unit id="7ce59a30f38b9dfa03cb9b3dc32ba4d8d61e7c07" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;inner&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;) ... If the node has multiple scope, this returns the outermost scope normally. If &lt;code&gt;inner&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; then this returns the innermost scope. Default is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;inner&lt;/code&gt; （ &lt;code&gt;boolean&lt;/code&gt; ）...ノードに複数のスコープがある場合、これは通常、最も外側のスコープを返します。場合は &lt;code&gt;inner&lt;/code&gt; ある &lt;code&gt;true&lt;/code&gt; 、これは最も内側のスコープを返します。デフォルトは &lt;code&gt;false&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="91e76350f142d89e87b1917fc1eaf7a4a4d17695" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;insertTextAfter(nodeOrToken, text)&lt;/code&gt; - inserts text after the given node or token</source>
          <target state="translated">&lt;code&gt;insertTextAfter(nodeOrToken, text)&lt;/code&gt; -指定されたノードまたはトークンの後にテキストを挿入します</target>
        </trans-unit>
        <trans-unit id="8532cacaf34d27e07e2a0b68bcd84f2fe7792e0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;insertTextAfterRange(range, text)&lt;/code&gt; - inserts text after the given range</source>
          <target state="translated">&lt;code&gt;insertTextAfterRange(range, text)&lt;/code&gt; -指定された範囲の後にテキストを挿入します</target>
        </trans-unit>
        <trans-unit id="c0615c9dd6167ee9fe8f892208e0174987f8a223" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;insertTextBefore(nodeOrToken, text)&lt;/code&gt; - inserts text before the given node or token</source>
          <target state="translated">&lt;code&gt;insertTextBefore(nodeOrToken, text)&lt;/code&gt; -指定されたノードまたはトークンの前にテキストを挿入します</target>
        </trans-unit>
        <trans-unit id="b9f9d2703ab9794b2c7d9ce7c8755305077510f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;insertTextBeforeRange(range, text)&lt;/code&gt; - inserts text before the given range</source>
          <target state="translated">&lt;code&gt;insertTextBeforeRange(range, text)&lt;/code&gt; -指定された範囲の前にテキストを挿入します</target>
        </trans-unit>
        <trans-unit id="72d42d9ccdbeee45e8e91aac5e1f1d9946a9035c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;isSpaceBetween(nodeOrToken, nodeOrToken)&lt;/code&gt; - returns true if there is a whitespace character between the two tokens or, if given a node, the last token of the first node and the first token of the second node.</source>
          <target state="translated">&lt;code&gt;isSpaceBetween(nodeOrToken, nodeOrToken)&lt;/code&gt; つのトークンの間に空白文字がある場合はtrueを返し、ノードが指定されている場合は、最初のノードの最後のトークンと2番目のノードの最初のトークンを返します。</target>
        </trans-unit>
        <trans-unit id="45e5e9b03a4b5b74dd94e917843669a3a84f64be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;isSpaceBetweenTokens()&lt;/code&gt; - replaced by &lt;code&gt;isSpaceBetween()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;isSpaceBetweenTokens()&lt;/code&gt; -で置き換えられ &lt;code&gt;isSpaceBetween()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="26f6c621b83be7fe8e22fcd528640180a150b373" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;isSpaceBetweenTokens(first, second)&lt;/code&gt; - returns true if there is a whitespace character between the two tokens.</source>
          <target state="translated">&lt;code&gt;isSpaceBetweenTokens(first, second)&lt;/code&gt; つのトークンの間に空白文字がある場合はtrueを返します。</target>
        </trans-unit>
        <trans-unit id="ba02ba323b7a7dfd739ce434d158f75a35fbbbe5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;jasmine&lt;/code&gt; - adds all of the Jasmine testing global variables for version 1.3 and 2.0.</source>
          <target state="translated">&lt;code&gt;jasmine&lt;/code&gt; -バージョン1.3および2.0のすべてのJasmineテストグローバル変数を追加します。</target>
        </trans-unit>
        <trans-unit id="f0e61fd0efe53d185c26ea1a3c2f1238c86cd471" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;jest&lt;/code&gt; - Jest global variables.</source>
          <target state="translated">&lt;code&gt;jest&lt;/code&gt; -Jestグローバル変数。</target>
        </trans-unit>
        <trans-unit id="8d3aebd3f64677d2247ceff8e482f37d19ba6b14" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;jquery&lt;/code&gt; - jQuery global variables.</source>
          <target state="translated">&lt;code&gt;jquery&lt;/code&gt; -jQueryグローバル変数。</target>
        </trans-unit>
        <trans-unit id="3f1d45c5ac5076b61a24ea524262adfaa601ef00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;jsx&lt;/code&gt; - enable &lt;a href=&quot;https://facebook.github.io/jsx/&quot;&gt;JSX&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;jsx&lt;/code&gt; - &lt;a href=&quot;https://facebook.github.io/jsx/&quot;&gt;JSXを&lt;/a&gt;有効にする</target>
        </trans-unit>
        <trans-unit id="311e763264e073bfb2b720e3716660d7fdf3f832" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;layout&lt;/code&gt; - apply fixes that do not change the program structure (AST)</source>
          <target state="translated">&lt;code&gt;layout&lt;/code&gt; -プログラム構造を変更しない修正を適用（AST）</target>
        </trans-unit>
        <trans-unit id="fd7de2646078c9e55ee3ad297ed944adcfce5eed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;let&lt;/code&gt; or &lt;code&gt;const&lt;/code&gt; mitigate this problem.</source>
          <target state="translated">&lt;code&gt;let&lt;/code&gt; や &lt;code&gt;const&lt;/code&gt; のこの問題を軽減します。</target>
        </trans-unit>
        <trans-unit id="dcaf92c4a3f87462edc0e94be76390b463b23221" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lib/api.js&lt;/code&gt; - this is the entry point of &lt;code&gt;require(&quot;eslint&quot;)&lt;/code&gt;. This file exposes an object that contains public classes &lt;code&gt;Linter&lt;/code&gt;, &lt;code&gt;CLIEngine&lt;/code&gt;, &lt;code&gt;RuleTester&lt;/code&gt;, and &lt;code&gt;SourceCode&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;lib/api.js&lt;/code&gt; - &lt;code&gt;require(&quot;eslint&quot;)&lt;/code&gt; のエントリポイントです。このファイルは、 &lt;code&gt;Linter&lt;/code&gt; 、 &lt;code&gt;CLIEngine&lt;/code&gt; 、 &lt;code&gt;RuleTester&lt;/code&gt; 、および &lt;code&gt;SourceCode&lt;/code&gt; のパブリッククラスを含むオブジェクトを公開します。</target>
        </trans-unit>
        <trans-unit id="352799f59acef6ccbee31017cdaef55a575f460a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lib/cli-engine/&lt;/code&gt; - this module is &lt;code&gt;CLIEngine&lt;/code&gt; class that finds source code files and configuration files then does code verifying with the &lt;code&gt;Linter&lt;/code&gt; class. This includes the loading logic of configuration files, parsers, plugins, and formatters.</source>
          <target state="translated">&lt;code&gt;lib/cli-engine/&lt;/code&gt; -このモジュールはある &lt;code&gt;CLIEngine&lt;/code&gt; 発見のソースコードファイルや設定ファイルは、コードがして検証することはないことクラス &lt;code&gt;Linter&lt;/code&gt; クラスは。これには、構成ファイル、パーサー、プラグイン、フォーマッターの読み込みロジックが含まれます。</target>
        </trans-unit>
        <trans-unit id="c35760daa29c1cd7890f3cda7efb60bbe46d338d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lib/cli.js&lt;/code&gt; - this is the heart of the ESLint CLI. It takes an array of arguments and then uses &lt;code&gt;eslint&lt;/code&gt; to execute the commands. By keeping this as a separate utility, it allows others to effectively call ESLint from within another Node.js program as if it were done on the command line. The main call is &lt;code&gt;cli.execute()&lt;/code&gt;. This is also the part that does all the file reading, directory traversing, input, and output.</source>
          <target state="translated">&lt;code&gt;lib/cli.js&lt;/code&gt; -これはESLint CLIの中心です。引数の配列を取り、 &lt;code&gt;eslint&lt;/code&gt; を使用してコマンドを実行します。これを独立したユーティリティとして保持することで、コマンドラインで実行されたかのように、他のNode.jsプログラム内からESLintを効果的に呼び出すことができます。主な呼び出しは &lt;code&gt;cli.execute()&lt;/code&gt; です。これは、ファイルの読み取り、ディレクトリトラバース、入力、および出力をすべて行う部分でもあります。</target>
        </trans-unit>
        <trans-unit id="2dd6e2a565c238f40d0ab41e8eb05df2d07afabd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lib/init/&lt;/code&gt; - this module contains &lt;code&gt;--init&lt;/code&gt; functionality that set up a configuration file for end users.</source>
          <target state="translated">&lt;code&gt;lib/init/&lt;/code&gt; -このモジュールには、エンドユーザー用の構成ファイルをセットアップする &lt;code&gt;--init&lt;/code&gt; 機能が含まれています。</target>
        </trans-unit>
        <trans-unit id="b6a8efeec2257389684906b294860eed395baed4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lib/linter/&lt;/code&gt; - this module is the core &lt;code&gt;Linter&lt;/code&gt; class that does code verifying based on configuration options. This file does no file I/O and does not interact with the &lt;code&gt;console&lt;/code&gt; at all. For other Node.js programs that have JavaScript text to verify, they would be able to use this interface directly.</source>
          <target state="translated">&lt;code&gt;lib/linter/&lt;/code&gt; &lt;code&gt;Linter&lt;/code&gt; / -このモジュールは、構成オプションに基づいてコード検証を行うコアLinterクラスです。このファイルはファイルI / Oを行わず、 &lt;code&gt;console&lt;/code&gt; とはまったく対話しません。検証するJavaScriptテキストを持つ他のNode.jsプログラムの場合、このインターフェイスを直接使用できます。</target>
        </trans-unit>
        <trans-unit id="0ef13d325113ab9c72aac054c51b9859a4c78383" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lib/rule-tester/&lt;/code&gt; - this module is &lt;code&gt;RuleTester&lt;/code&gt; class that is a wrapper around Mocha so that rules can be unit tested. This class lets us write consistently formatted tests for each rule that is implemented and be confident that each of the rules work. The RuleTester interface was modeled after Mocha and works with Mocha's global testing methods. RuleTester can also be modified to work with other testing frameworks.</source>
          <target state="translated">&lt;code&gt;lib/rule-tester/&lt;/code&gt; -このモジュールは &lt;code&gt;RuleTester&lt;/code&gt; クラスで、Mochaのラッパーであり、ルールをユニットテストできます。このクラスを使用すると、実装されているルールごとに一貫した形式のテストを記述して、各ルールが機能することを確認できます。RuleTesterインターフェースはMochaをモデルにしており、Mochaのグローバルテストメソッドで動作します。RuleTesterは、他のテストフレームワークと連携するように変更することもできます。</target>
        </trans-unit>
        <trans-unit id="a63cf0d7e23469e8ad0f4e8595e355f9ad8694a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lib/rules/&lt;/code&gt; - this contains built-in rules that verify source code.</source>
          <target state="translated">&lt;code&gt;lib/rules/&lt;/code&gt; -これには、ソースコードを検証する組み込みルールが含まれています。</target>
        </trans-unit>
        <trans-unit id="ee1e43488698ed575f89652118052e9da92548b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lib/source-code/&lt;/code&gt; - this module is &lt;code&gt;SourceCode&lt;/code&gt; class that is used to represent the parsed source code. It takes in source code and the Program node of the AST representing the code.</source>
          <target state="translated">&lt;code&gt;lib/source-code/&lt;/code&gt; -このモジュールは、解析されたソースコードを表すために使用される &lt;code&gt;SourceCode&lt;/code&gt; クラスです。ソースコードと、コードを表すASTのProgramノードを受け取ります。</target>
        </trans-unit>
        <trans-unit id="e6647403a322f8c29dcd47ff3b4b79c178773db8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lib&lt;/code&gt; - contains the source code</source>
          <target state="translated">&lt;code&gt;lib&lt;/code&gt; -ソースコードが含まれています</target>
        </trans-unit>
        <trans-unit id="73848f50949f0468c99abb0732d32537e68b175e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lib&lt;/code&gt; - tests for the source code</source>
          <target state="translated">&lt;code&gt;lib&lt;/code&gt; -ソースコードのテスト</target>
        </trans-unit>
        <trans-unit id="ca736bee43d92b67d924f9bb20381ddea0444bb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;line&lt;/code&gt; (&lt;code&gt;number&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;line&lt;/code&gt; （ &lt;code&gt;number&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="6abb9911b79ab0f56cc4c2d9d476aca548473fdb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;line&lt;/code&gt; (number): The 1-based line number of the reported location</source>
          <target state="translated">&lt;code&gt;line&lt;/code&gt; （番号）：報告された場所の1から始まる行番号</target>
        </trans-unit>
        <trans-unit id="5a1d8003538f670eb1ed5abaa2ee9ad36153d8d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;line&lt;/code&gt; - the 1-based line number at which the problem occurred.</source>
          <target state="translated">&lt;code&gt;line&lt;/code&gt; -問題が発生した1から始まる行番号。</target>
        </trans-unit>
        <trans-unit id="f61d50e146b6fd37cd5e48d14bf403845c38127a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;line&lt;/code&gt; - the line on which the error occurred.</source>
          <target state="translated">&lt;code&gt;line&lt;/code&gt; -エラーが発生したライン。</target>
        </trans-unit>
        <trans-unit id="af43bc36e384077a37ed20af1359ac6b20e542cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lines&lt;/code&gt; - an array of lines, split according to the specification's definition of line breaks.</source>
          <target state="translated">&lt;code&gt;lines&lt;/code&gt; -仕様の改行の定義に従って分割された行の配列。</target>
        </trans-unit>
        <trans-unit id="72b4a179d14e3f3d605dbb6b83c0f1525697eac4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;linter&lt;/code&gt; - the &lt;code&gt;linter&lt;/code&gt; object has been deprecated in favor of &lt;code&gt;Linter&lt;/code&gt; as of v4.0.0.</source>
          <target state="translated">&lt;code&gt;linter&lt;/code&gt; - &lt;code&gt;linter&lt;/code&gt; オブジェクトはの賛成で廃止されました &lt;code&gt;Linter&lt;/code&gt; v4.0.0のよう。</target>
        </trans-unit>
        <trans-unit id="e537d939b3ab45a95daba04094ccc4350365de5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;loc&lt;/code&gt; (&lt;code&gt;SourceLocation&lt;/code&gt;) must not be &lt;code&gt;null&lt;/code&gt;. &lt;a href=&quot;https://github.com/estree/estree/blob/25834f7247d44d3156030f8e8a2d07644d771fdb/es5.md#node-objects&quot;&gt;The &lt;code&gt;loc&lt;/code&gt; property is defined as nullable by ESTree&lt;/a&gt;, but ESLint requires this property. On the other hand, &lt;code&gt;SourceLocation#source&lt;/code&gt; property can be &lt;code&gt;undefined&lt;/code&gt;. ESLint does not use the &lt;code&gt;SourceLocation#source&lt;/code&gt; property.</source>
          <target state="translated">&lt;code&gt;loc&lt;/code&gt; （ &lt;code&gt;SourceLocation&lt;/code&gt; ）を &lt;code&gt;null&lt;/code&gt; にすることはできません。&lt;a href=&quot;https://github.com/estree/estree/blob/25834f7247d44d3156030f8e8a2d07644d771fdb/es5.md#node-objects&quot;&gt; &lt;code&gt;loc&lt;/code&gt; &lt;/a&gt;プロパティはESTreeでnullとして定義されているが、ESLintは、このプロパティが必要です。一方、 &lt;code&gt;SourceLocation#source&lt;/code&gt; プロパティは &lt;code&gt;undefined&lt;/code&gt; にすることができます。ESLintは &lt;code&gt;SourceLocation#source&lt;/code&gt; プロパティを使用しません。</target>
        </trans-unit>
        <trans-unit id="08129a2e91d98ea586d37a26afd9d98f9f944e32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;loc&lt;/code&gt; - (optional) an object specifying the location of the problem. If both &lt;code&gt;loc&lt;/code&gt; and &lt;code&gt;node&lt;/code&gt; are specified, then the location is used from &lt;code&gt;loc&lt;/code&gt; instead of &lt;code&gt;node&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;loc&lt;/code&gt; -（オプション）問題の場所を指定するオブジェクト。 &lt;code&gt;loc&lt;/code&gt; と &lt;code&gt;node&lt;/code&gt; の両方が指定されている場合、場所は &lt;code&gt;node&lt;/code&gt; ではなく &lt;code&gt;loc&lt;/code&gt; から使用されます。</target>
        </trans-unit>
        <trans-unit id="77a8678de67a63bd13ee84e2743deae04a485082" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;local&lt;/code&gt; checks only that locally-declared variables are used but will allow global variables to be unused.</source>
          <target state="translated">&lt;code&gt;local&lt;/code&gt; は、ローカルで宣言された変数が使用されていることのみをチェックしますが、グローバル変数を未使用にすることができます。</target>
        </trans-unit>
        <trans-unit id="cbc85a1492c9c1e2459ebcaabd9bd77fe6dc1b08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;markVariableAsUsed(name)&lt;/code&gt; - marks a variable with the given name in the current scope as used. This affects the &lt;a href=&quot;../rules/no-unused-vars&quot;&gt;no-unused-vars&lt;/a&gt; rule. Returns &lt;code&gt;true&lt;/code&gt; if a variable with the given name was found and marked as used, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;markVariableAsUsed(name)&lt;/code&gt; -現在のスコープで指定された名前の変数を使用済みとしてマークします。これは、&lt;a href=&quot;../rules/no-unused-vars&quot;&gt;un-unused-vars&lt;/a&gt;ルールに影響します。指定された名前の変数が見つかり、使用済みとしてマークされている場合は &lt;code&gt;true&lt;/code&gt; を返し、それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="0b57296c245a8a54853dc4fc6c3d431e7fda2cc7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;markVariableAsUsed(name)&lt;/code&gt; - marks the named variable in scope as used. This affects the &lt;a href=&quot;../rules/no-unused-vars&quot;&gt;no-unused-vars&lt;/a&gt; rule.</source>
          <target state="translated">&lt;code&gt;markVariableAsUsed(name)&lt;/code&gt; -スコープ内の名前付き変数を使用済みとしてマークします。これは、&lt;a href=&quot;../rules/no-unused-vars&quot;&gt;un-unused-vars&lt;/a&gt;ルールに影響します。</target>
        </trans-unit>
        <trans-unit id="ebb3392db94e35d57953d3cf0fbf7e8957c19635" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;max-depth&lt;/code&gt; will report a depth of 0</source>
          <target state="translated">&lt;code&gt;max-depth&lt;/code&gt; は深さ0を報告します</target>
        </trans-unit>
        <trans-unit id="b8411b98ef80e26d081261e0c615281202c1a7ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;max-nested-callbacks&lt;/code&gt; will only report 1</source>
          <target state="translated">&lt;code&gt;max-nested-callbacks&lt;/code&gt; は1のみを報告します</target>
        </trans-unit>
        <trans-unit id="ce923ae8b39fb38a221948633cca93f77b9f5ae5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;max-statements&lt;/code&gt; will only report this as 1 statement, despite being 16 lines of code.</source>
          <target state="translated">&lt;code&gt;max-statements&lt;/code&gt; は、16行のコードにもかかわらず、これを1つのステートメントとしてのみ報告します。</target>
        </trans-unit>
        <trans-unit id="e37c49012ff8dffb8ea2feb6d8a0575a19d94333" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;memberSyntaxSortOrder&lt;/code&gt; (default: &lt;code&gt;[&quot;none&quot;, &quot;all&quot;, &quot;multiple&quot;, &quot;single&quot;]&lt;/code&gt;); all 4 items must be present in the array, but you can change the order:</source>
          <target state="translated">&lt;code&gt;memberSyntaxSortOrder&lt;/code&gt; （デフォルト： &lt;code&gt;[&quot;none&quot;, &quot;all&quot;, &quot;multiple&quot;, &quot;single&quot;]&lt;/code&gt; ）; 4つの項目すべてが配列に存在する必要がありますが、順序を変更できます。</target>
        </trans-unit>
        <trans-unit id="5e7bd2ddd4c484639af5359b7bb1f2928f1fe34c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;message&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;message&lt;/code&gt; （ &lt;code&gt;string&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="105b58ebafcb3eacd23fee5de9a51d19fea2abf6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;message&lt;/code&gt; (string/regexp): The message for the error</source>
          <target state="translated">&lt;code&gt;message&lt;/code&gt; （文字列/正規表現）：エラーのメッセージ</target>
        </trans-unit>
        <trans-unit id="740d162ba7e1c6a902b0e8e2817f95640f20e1ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;message&lt;/code&gt; - the message that should be output.</source>
          <target state="translated">&lt;code&gt;message&lt;/code&gt; -出力するメッセージ。</target>
        </trans-unit>
        <trans-unit id="3e2c205db0109ce47f0d09cc35765a8b5b3c4980" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;message&lt;/code&gt; - the problem message.</source>
          <target state="translated">&lt;code&gt;message&lt;/code&gt; -問題のメッセージ。</target>
        </trans-unit>
        <trans-unit id="c37eafc059af4cd23f369bf1f0d019634b443ef6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;messageId&lt;/code&gt; (string): The Id for the error. See &lt;a href=&quot;#testing-errors-with-messageid&quot;&gt;testing errors with messageId&lt;/a&gt; for details</source>
          <target state="translated">&lt;code&gt;messageId&lt;/code&gt; （文字列）：エラーのID。詳細については&lt;a href=&quot;#testing-errors-with-messageid&quot;&gt;、messageId&lt;/a&gt;を使用したエラーのテストを参照してください</target>
        </trans-unit>
        <trans-unit id="bc6d16c14e0abf1474e95105a7aebe3b1b54ba18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;messageId&lt;/code&gt; (string): The suggestion &lt;code&gt;messageId&lt;/code&gt; value for suggestions that use &lt;code&gt;messageId&lt;/code&gt;s</source>
          <target state="translated">&lt;code&gt;messageId&lt;/code&gt; です（文字列）：提案の &lt;code&gt;messageId&lt;/code&gt; の提案のための値を使用すること &lt;code&gt;messageId&lt;/code&gt; 秒</target>
        </trans-unit>
        <trans-unit id="583e4fa0ef94daa7ab7bf347cff7d2b7a4bde538" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;messageId&lt;/code&gt; and &lt;code&gt;data&lt;/code&gt; properties in suggestion test objects work the same way as in error test objects. See &lt;a href=&quot;#testing-errors-with-messageid&quot;&gt;testing errors with messageId&lt;/a&gt; for details.</source>
          <target state="translated">&lt;code&gt;messageId&lt;/code&gt; 提案テストオブジェクトのmessageIdおよび &lt;code&gt;data&lt;/code&gt; プロパティは、エラーテストオブジェクトと同じように機能します。詳細については&lt;a href=&quot;#testing-errors-with-messageid&quot;&gt;、messageId&lt;/a&gt;を使用したエラーのテストを参照してください。</target>
        </trans-unit>
        <trans-unit id="2fc61ae9c2df0613268225b12bb937e46cd5369e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;messageId&lt;/code&gt;s</source>
          <target state="translated">&lt;code&gt;messageId&lt;/code&gt;s</target>
        </trans-unit>
        <trans-unit id="f76e73bf87f201613f8d21a22d13c8acba1338fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;messages&lt;/code&gt; (&lt;code&gt;LintMessage[]&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;messages&lt;/code&gt; （ &lt;code&gt;LintMessage[]&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="78b74df751484a94bf932f5abe1ed34eb9c7c503" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;messages&lt;/code&gt; - Array containing the result of calling &lt;code&gt;linter.verify()&lt;/code&gt; on the given file.</source>
          <target state="translated">&lt;code&gt;messages&lt;/code&gt; -指定されたファイルで &lt;code&gt;linter.verify()&lt;/code&gt; を呼び出した結果を含む配列。</target>
        </trans-unit>
        <trans-unit id="86ef1731cb455a05bacdc8a44a80321a369da8fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;messages&lt;/code&gt; - Collection of all messages for the given code (It has the same information as explained above under &lt;code&gt;verify&lt;/code&gt; block).</source>
          <target state="translated">&lt;code&gt;messages&lt;/code&gt; -指定されたコードのすべてのメッセージのコレクション（ &lt;code&gt;verify&lt;/code&gt; ブロックで前述したものと同じ情報があります）。</target>
        </trans-unit>
        <trans-unit id="df874264bcab6b9c2671e4fd03f5ad2c1299bbc9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;meta&lt;/code&gt; (object) contains metadata for the rule:</source>
          <target state="translated">&lt;code&gt;meta&lt;/code&gt; （オブジェクト）には、ルールのメタデータが含まれています。</target>
        </trans-unit>
        <trans-unit id="0cb2f9825689c46c0c1062b080e794d333255ac2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;meteor&lt;/code&gt; - Meteor global variables.</source>
          <target state="translated">&lt;code&gt;meteor&lt;/code&gt; -流星のグローバル変数。</target>
        </trans-unit>
        <trans-unit id="dfe047de45878bbab32ef3538860830396cdb5ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;method&lt;/code&gt; provides overrides for class methods or property function shorthand</source>
          <target state="translated">&lt;code&gt;method&lt;/code&gt; は、クラスメソッドまたはプロパティ関数の省略形のオーバーライドを提供します</target>
        </trans-unit>
        <trans-unit id="bc2edfdf7ad8346b6a6cdab8bcf5d5a9002a4f65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;minKeys&lt;/code&gt; - Specifies the minimum number of keys that an object should have in order for the object's unsorted keys to produce an error. Default is &lt;code&gt;2&lt;/code&gt;, which means by default all objects with unsorted keys will result in lint errors.</source>
          <target state="translated">&lt;code&gt;minKeys&lt;/code&gt; -オブジェクトのソートされていないキーがエラーを生成するためにオブジェクトに必要なキーの最小数を指定します。デフォルトは &lt;code&gt;2&lt;/code&gt; です。これは、デフォルトでは、ソートされていないキーを持つすべてのオブジェクトでlintエラーが発生することを意味します。</target>
        </trans-unit>
        <trans-unit id="85bb8e9cee43799a30602fa2832d06d69c0e1606" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mocha&lt;/code&gt; - adds all of the Mocha testing global variables.</source>
          <target state="translated">&lt;code&gt;mocha&lt;/code&gt; -すべてのMochaテストグローバル変数を追加します。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
